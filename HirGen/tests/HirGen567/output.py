import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "float32", shape = (8, 3, 7))#candidate|0|(8, 3, 7)|var|float32
var_1 = relay.var("var_1", dtype = "float32", shape = (8, 3, 7))#candidate|1|(8, 3, 7)|var|float32
bop_2 = relay.mod(var_0.astype('float32'), relay.reshape(var_1.astype('float32'), relay.shape_of(var_0))) # shape=(8, 3, 7)
bop_13 = relay.greater_equal(var_0.astype('bool'), relay.reshape(bop_2.astype('bool'), relay.shape_of(var_0))) # shape=(8, 3, 7)
output = bop_13
output2 = bop_13
func_26 = relay.Function([var_0,var_1,], output)
mod['func_26'] = func_26
mod = relay.transform.InferType()(mod)
var_27 = relay.var("var_27", dtype = "float32", shape = (8, 3, 7))#candidate|27|(8, 3, 7)|var|float32
var_28 = relay.var("var_28", dtype = "float32", shape = (8, 3, 7))#candidate|28|(8, 3, 7)|var|float32
output = func_26(var_27,var_28,)
func_29 = relay.Function([var_27,var_28,], output)
mutated_mod['func_29'] = func_29
mutated_mod = relay.transform.InferType()(mutated_mod)
var_179 = relay.var("var_179", dtype = "int64", shape = (2, 8, 1))#candidate|179|(2, 8, 1)|var|int64
var_180 = relay.var("var_180", dtype = "int64", shape = (2, 8, 3))#candidate|180|(2, 8, 3)|var|int64
bop_181 = relay.left_shift(var_179.astype('int64'), var_180.astype('int64')) # shape=(2, 8, 3)
output = bop_181
output2 = bop_181
func_188 = relay.Function([var_179,var_180,], output)
mod['func_188'] = func_188
mod = relay.transform.InferType()(mod)
var_189 = relay.var("var_189", dtype = "int64", shape = (2, 8, 1))#candidate|189|(2, 8, 1)|var|int64
var_190 = relay.var("var_190", dtype = "int64", shape = (2, 8, 3))#candidate|190|(2, 8, 3)|var|int64
output = func_188(var_189,var_190,)
func_191 = relay.Function([var_189,var_190,], output)
mutated_mod['func_191'] = func_191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_295 = relay.var("var_295", dtype = "int64", shape = (2, 13, 16))#candidate|295|(2, 13, 16)|var|int64
const_296 = relay.const([[[1,-8,9,-5,5,5,3,-10,-5,-1,7,2,5,-6,1,6],[8,-8,-9,6,-2,3,-10,-4,-10,-7,-8,7,-7,2,7,-1],[-3,3,-3,3,9,3,-3,-6,3,9,6,-7,-7,10,-10,-8],[-1,-4,-2,-2,-6,-2,-1,9,-4,5,4,-3,-2,4,8,-4],[5,-5,-6,-7,3,1,-10,8,-9,-5,5,-4,3,-1,-2,-1],[-3,-3,3,-3,-9,-10,5,4,1,8,9,6,-4,4,2,-2],[-2,-5,-4,1,5,4,-9,5,-10,-7,9,-3,-10,8,2,6],[6,9,2,-5,3,-8,-8,4,7,8,-7,-6,8,7,-3,-4],[-6,1,2,6,3,-8,6,2,-5,1,1,-7,1,-1,-8,-5],[5,-6,-2,-2,6,-10,4,-10,-2,1,8,4,-5,-6,-9,9],[9,-3,-8,5,-7,-8,5,-1,9,-2,-3,6,1,-1,5,4],[-5,-2,-4,-7,-2,-3,5,5,8,-8,-4,-9,6,-5,9,-4],[8,7,5,-4,-3,5,1,-1,-7,-1,5,6,-1,-4,-2,-7]],[[4,-4,-8,-7,5,8,-4,-6,9,-4,9,-6,2,-3,6,-7],[-3,-1,-9,-3,-2,10,-9,-7,-6,-3,-2,7,6,-6,-9,-7],[4,-3,-8,-5,7,-6,-4,7,5,-4,8,9,-1,-8,-10,5],[5,-6,6,3,9,-2,-4,10,8,4,-7,-9,10,1,4,-3],[-5,2,-2,-5,-4,-5,-7,-8,1,10,-7,-6,-10,-6,-2,3],[-1,9,2,6,2,-6,6,-5,-6,-5,-5,9,-10,10,-5,9],[2,9,3,-9,7,-3,9,-4,-2,7,9,-5,-2,-3,1,-3],[2,-6,9,8,-3,1,-9,-9,3,2,-4,3,3,-3,7,-9],[7,-4,1,2,-4,-7,9,6,4,6,-7,3,4,-6,9,-2],[1,3,-9,-5,10,-6,8,9,-1,9,3,-8,6,-1,-9,3],[8,-1,3,-10,8,9,7,7,4,-6,7,-5,-5,-2,-9,4],[3,8,1,-8,-3,6,-9,-8,8,2,-7,10,5,-8,-7,6],[8,-7,-10,-10,3,3,-9,-5,-6,-4,-3,-6,-8,-5,-7,-6]]], dtype = "int64")#candidate|296|(2, 13, 16)|const|int64
bop_297 = relay.greater(var_295.astype('bool'), relay.reshape(const_296.astype('bool'), relay.shape_of(var_295))) # shape=(2, 13, 16)
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
const_304 = relay.const([-1.547779,-7.024115,2.415260,-0.162875,-7.532078,-5.974414,2.656819,9.698941,0.056195,9.062716,-3.344657,-4.443465,7.469079,6.782479,-8.626566,-9.098758,8.058880,-6.276414,-9.509519,7.928641,9.907293,4.785224,9.742660,3.585269,-8.103200,-7.341829,-2.890619,8.991957,-0.505377,-6.593308,9.493524,4.428515,-3.867991,0.047497,-9.106335,2.927232,-7.063026,3.977442,-0.848339,-9.891674,9.418265,9.885950,1.206214,8.404050,3.296989,-1.212758,0.081376,-4.835020,6.112858,-1.260993,-2.183185,1.696076,-8.506653,-5.695582,6.765522,1.754147,0.122170,-4.027694,6.232939,-2.310500,-6.373684,2.906172,8.680925,1.565996,2.659902,-5.170343,8.128712,-3.880760,-7.081949,-5.767013,-9.931388,-9.945584,-6.208697,-8.707929,8.479240,2.814509,-5.856975,2.362052,-3.208654,-0.618672,-4.200636,7.859290,4.971033,9.292938,6.048785,0.186879,-8.529643,0.786752,8.229308,-6.806231,2.388710,-1.362852,7.837666,1.708727,-8.907322,9.730456,-0.836239,-6.817083,9.398436,-5.827681,-5.853524,-3.121122,0.094044,6.586285,1.508119,5.988107,7.292069,-9.735821,0.226578,-0.363185,-4.190937,-1.920956,7.654366,-8.555538,8.156505,3.264853,-1.188437,-2.865771,6.323309,-9.853402,8.942487,8.960897,1.779392,3.496788,3.867013,-1.197508,-9.269157,2.782506,-4.124657,-5.148033,-3.700161,4.438605,4.064195,-1.665928,0.025464,2.984079,3.632090,-1.225334,8.734931,3.865156,2.263342,-3.361467,9.278556,7.783227,2.645144,7.441722,2.351361,-0.838789,-4.360091,-3.278535,-1.580019,-1.427600,-5.216590,-6.697516,6.418935,3.577393,-9.490289,-2.009836,6.270143,8.607967,0.362925,-1.098066,6.151481,3.852294,0.861487,4.418559,6.992838,6.851052], dtype = "float32")#candidate|304|(168,)|const|float32
call_303 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(const_304.astype('float32'), [8, 3, 7]), )
call_305 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(const_304.astype('float32'), [8, 3, 7]), )
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_309 = relay.var("var_309", dtype = "int64", shape = (8, 2))#candidate|309|(8, 2)|var|int64
const_310 = relay.const([-6,-10,6,-1,9,9,-7,-2,6,8,-9,-10,5,-1,9,4,-8,-8,8,7,-7,-9,-1,-9,-7,7,-5,-6,-7,1,10,-1,10,1,1,3,-4,-6,-3,6,-4,-8,9,1,-1,-2,-6,7], dtype = "int64")#candidate|310|(48,)|const|int64
call_308 = func_188_call(relay.reshape(var_309.astype('int64'), [2, 8, 1]), relay.reshape(const_310.astype('int64'), [2, 8, 3]), )
call_311 = func_188_call(relay.reshape(var_309.astype('int64'), [2, 8, 1]), relay.reshape(const_310.astype('int64'), [2, 8, 3]), )
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
call_314 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(call_303.astype('float32'), [8, 3, 7]), )
call_315 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(call_303.astype('float32'), [8, 3, 7]), )
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
call_330 = func_188_call(relay.reshape(var_309.astype('int64'), [2, 8, 1]), relay.reshape(const_310.astype('int64'), [2, 8, 3]), )
call_331 = func_188_call(relay.reshape(var_309.astype('int64'), [2, 8, 1]), relay.reshape(const_310.astype('int64'), [2, 8, 3]), )
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
call_337 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(call_314.astype('float32'), [8, 3, 7]), )
call_338 = func_26_call(relay.reshape(const_304.astype('float32'), [8, 3, 7]), relay.reshape(call_314.astype('float32'), [8, 3, 7]), )
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
call_357 = func_26_call(relay.reshape(call_314.astype('float32'), [8, 3, 7]), relay.reshape(call_337.astype('float32'), [8, 3, 7]), )
call_358 = func_26_call(relay.reshape(call_314.astype('float32'), [8, 3, 7]), relay.reshape(call_337.astype('float32'), [8, 3, 7]), )
var_374 = relay.var("var_374", dtype = "int64", shape = (2, 13, 16))#candidate|374|(2, 13, 16)|var|int64
bop_375 = relay.not_equal(var_295.astype('bool'), relay.reshape(var_374.astype('bool'), relay.shape_of(var_295))) # shape=(2, 13, 16)
output = relay.Tuple([bop_297,call_303,const_304,call_308,var_309,const_310,call_314,call_330,call_337,call_357,bop_375,])
output2 = relay.Tuple([bop_297,call_305,const_304,call_311,var_309,const_310,call_315,call_331,call_338,call_358,bop_375,])
func_394 = relay.Function([var_295,var_309,var_374,], output)
mod['func_394'] = func_394
mod = relay.transform.InferType()(mod)
var_395 = relay.var("var_395", dtype = "int64", shape = (2, 13, 16))#candidate|395|(2, 13, 16)|var|int64
var_396 = relay.var("var_396", dtype = "int64", shape = (8, 2))#candidate|396|(8, 2)|var|int64
var_397 = relay.var("var_397", dtype = "int64", shape = (2, 13, 16))#candidate|397|(2, 13, 16)|var|int64
output = func_394(var_395,var_396,var_397,)
func_398 = relay.Function([var_395,var_396,var_397,], output)
mutated_mod['func_398'] = func_398
mutated_mod = relay.transform.InferType()(mutated_mod)
const_400 = relay.const([[[-1.464320,-7.956267,-0.166581,-6.906678,-1.195480,7.583588,-0.334831],[1.627982,8.884638,1.396056,-4.847731,-5.072681,-5.548610,-7.233904],[3.583143,9.917233,6.366126,-6.324018,-1.151788,-9.011236,1.241434]],[[5.647957,-1.534654,-1.864061,4.726221,-1.360018,-4.987684,9.010264],[4.845725,-6.823845,5.590799,-4.300278,2.642323,-1.036413,6.592415],[-8.453097,-7.355959,-3.803423,8.540483,3.988481,-2.714889,-2.306934]],[[-8.444130,5.127978,-4.439809,-7.033386,1.018345,-9.785028,7.334191],[-4.905458,-8.548376,6.901584,-7.350828,9.273088,-5.980079,7.163442],[-7.515283,9.489712,0.239823,-0.601591,4.099400,1.112660,2.575460]],[[6.219907,-6.802255,8.013325,9.513420,3.765233,-1.885150,4.297249],[9.356256,-3.175516,-2.051886,-5.982654,-1.112378,0.424013,3.100869],[8.590267,2.520867,6.079145,-7.865927,-9.419133,7.695817,-1.814530]],[[-6.511834,3.430554,-8.658453,5.169094,3.393201,-9.581842,1.696977],[6.784571,-5.851595,8.391994,-1.531122,2.884527,-6.330504,-4.458186],[5.863733,8.453653,-8.348380,-9.533611,-3.378587,8.779249,5.604715]],[[-3.141167,-9.346886,-2.832458,-4.401259,-0.410336,-8.168832,0.210323],[5.910341,3.107360,-4.327489,-3.814772,5.526222,1.276606,-5.891624],[3.577475,-3.039853,-7.492874,-8.624443,3.431820,4.558279,5.025858]],[[5.043961,-9.805235,-4.718829,-3.566117,-7.720481,8.222624,7.575798],[-5.715714,8.164321,8.905516,0.810499,-1.757821,-3.430140,-4.488688],[1.837489,-4.087143,-6.355320,1.807831,-3.181207,-4.839671,-4.207925]],[[-3.492017,-8.568418,-0.288679,-8.831532,-0.192641,2.258682,1.590788],[-3.805306,6.779672,3.280032,5.574032,-2.817825,-1.087831,-4.630565],[-2.090133,-6.334578,-0.772272,7.030229,2.673695,-7.615822,3.398049]],[[-2.315302,-1.073695,-5.341136,0.516065,2.947159,7.775231,5.298955],[-4.857678,-9.234648,6.481570,9.657706,-5.570890,-9.386265,-4.219900],[1.284231,-5.619103,9.751234,-3.043685,5.074008,4.674678,-2.968295]],[[-8.299373,6.790957,8.353789,7.517465,-2.165647,-0.344747,1.318079],[-7.389077,-7.524899,4.567052,-4.118277,4.374473,-6.523972,-6.307359],[8.680672,0.354308,-3.192100,-9.455163,-7.776534,-5.590298,-0.952631]],[[9.482586,8.363648,0.520147,2.945102,1.874593,5.940727,8.751613],[3.509931,-8.134147,-6.877143,-4.518793,-1.321562,6.422769,4.103595],[6.410607,-9.509970,0.981803,0.041243,1.149839,-2.689963,-6.069646]],[[3.873753,9.955977,8.549490,6.106796,9.383830,-2.768860,-0.217048],[6.475301,-2.341397,8.757136,1.033499,-0.381526,-4.567372,-8.766408],[-5.887238,-0.817327,-6.341855,-5.901826,6.622436,6.303429,-1.941494]]], dtype = "float64")#candidate|400|(12, 3, 7)|const|float64
uop_401 = relay.cosh(const_400.astype('float64')) # shape=(12, 3, 7)
bop_416 = relay.greater(const_400.astype('bool'), relay.reshape(uop_401.astype('bool'), relay.shape_of(const_400))) # shape=(12, 3, 7)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_425 = relay.var("var_425", dtype = "int64", shape = (416,))#candidate|425|(416,)|var|int64
var_426 = relay.var("var_426", dtype = "int64", shape = (16,))#candidate|426|(16,)|var|int64
call_424 = relay.TupleGetItem(func_394_call(relay.reshape(var_425.astype('int64'), [2, 13, 16]), relay.reshape(var_426.astype('int64'), [8, 2]), relay.reshape(var_425.astype('int64'), [2, 13, 16]), ), 7)
call_427 = relay.TupleGetItem(func_398_call(relay.reshape(var_425.astype('int64'), [2, 13, 16]), relay.reshape(var_426.astype('int64'), [8, 2]), relay.reshape(var_425.astype('int64'), [2, 13, 16]), ), 7)
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
const_432 = relay.const([-8.396768,9.604457,-1.711558,-1.031847,9.550722,-8.714583,-2.979874,3.944688,-5.686627,0.902465,1.718911,-8.457224,2.559674,5.051426,-6.358263,-2.807881,-6.533710,9.128976,7.401899,1.883113,-3.868854,-2.887350,9.941660,-6.000736,4.273706,-8.452245,0.940628,4.442190,-6.378281,3.371584,9.506511,4.983245,3.159753,-0.543854,4.880144,5.395249,-7.001245,-5.598348,-5.111341,7.483275,-2.785294,-2.421497,-8.103289,-0.493234,-0.019738,3.779550,-7.178022,7.159288,-0.871904,-8.120574,-6.509825,6.176315,-4.056846,-0.917154,4.785808,-7.265620,6.576669,7.135367,-3.508424,2.361225,-2.420515,6.675494,3.964438,-1.511241,-8.713299,9.156958,3.339729,5.866656,4.807888,-0.439939,-3.710198,-5.593059,0.937680,8.563794,-1.047659,4.066954,-3.670543,3.358481,7.846021,8.916946,-9.727562,-5.319406,8.908000,4.021396,-3.851217,2.143533,-3.592489,-6.706171,-1.978645,-8.492363,-6.372755,3.412031,-1.762147,1.343870,-9.880386,7.280126,3.234647,-7.448383,-5.666438,3.825589,8.074140,4.049940,8.940958,-9.830607,6.610494,-9.272425,-9.360379,-3.298628,-2.456344,-3.970455,-8.231164,7.472164,-6.714743,4.023089,-0.554623,9.042779,6.565561,4.575383,-6.308214,-4.143716,-9.439179,-2.060524,-0.917821,3.571783,-0.398470,-6.649396,-9.963319,-5.719677,2.901487,7.812669,7.894701,-3.775588,3.955948,8.309947,3.554982,4.838155,-4.314233,-5.816524,8.745883,2.182931,0.782439,-7.034952,8.451710,-4.200018,-5.367919,-4.446359,-2.986759,9.727736,6.786549,-4.856612,-5.048799,-4.139905,0.087887,-6.149807,0.873369,-2.694141,7.997215,-9.978861,8.387419,5.393536,-6.512247,6.722499,-9.457707,-3.281447,3.408532,-2.860821,-2.332082,-4.895386], dtype = "float32")#candidate|432|(168,)|const|float32
call_431 = func_26_call(relay.reshape(const_432.astype('float32'), [8, 3, 7]), relay.reshape(const_432.astype('float32'), [8, 3, 7]), )
call_433 = func_26_call(relay.reshape(const_432.astype('float32'), [8, 3, 7]), relay.reshape(const_432.astype('float32'), [8, 3, 7]), )
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
call_434 = func_188_call(relay.reshape(var_426.astype('int64'), [2, 8, 1]), relay.reshape(call_424.astype('int64'), [2, 8, 3]), )
call_435 = func_188_call(relay.reshape(var_426.astype('int64'), [2, 8, 1]), relay.reshape(call_424.astype('int64'), [2, 8, 3]), )
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
call_439 = func_188_call(relay.reshape(var_426.astype('int64'), [2, 8, 1]), relay.reshape(call_434.astype('int64'), [2, 8, 3]), )
call_440 = func_188_call(relay.reshape(var_426.astype('int64'), [2, 8, 1]), relay.reshape(call_434.astype('int64'), [2, 8, 3]), )
output = relay.Tuple([bop_416,call_424,var_425,var_426,call_431,const_432,call_434,call_439,])
output2 = relay.Tuple([bop_416,call_427,var_425,var_426,call_433,const_432,call_435,call_440,])
func_456 = relay.Function([var_425,var_426,], output)
mod['func_456'] = func_456
mod = relay.transform.InferType()(mod)
var_457 = relay.var("var_457", dtype = "int64", shape = (416,))#candidate|457|(416,)|var|int64
var_458 = relay.var("var_458", dtype = "int64", shape = (16,))#candidate|458|(16,)|var|int64
output = func_456(var_457,var_458,)
func_459 = relay.Function([var_457,var_458,], output)
mutated_mod['func_459'] = func_459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_580 = relay.var("var_580", dtype = "int64", shape = (13, 9, 11))#candidate|580|(13, 9, 11)|var|int64
var_581 = relay.var("var_581", dtype = "int64", shape = (13, 9, 11))#candidate|581|(13, 9, 11)|var|int64
bop_582 = relay.bitwise_xor(var_580.astype('int64'), relay.reshape(var_581.astype('int64'), relay.shape_of(var_580))) # shape=(13, 9, 11)
output = bop_582
output2 = bop_582
func_586 = relay.Function([var_580,var_581,], output)
mod['func_586'] = func_586
mod = relay.transform.InferType()(mod)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_586_call = mutated_mod.get_global_var('func_586')
var_588 = relay.var("var_588", dtype = "int64", shape = (13, 9, 11))#candidate|588|(13, 9, 11)|var|int64
var_589 = relay.var("var_589", dtype = "int64", shape = (13, 9, 11))#candidate|589|(13, 9, 11)|var|int64
call_587 = func_586_call(var_588,var_589,)
output = call_587
func_590 = relay.Function([var_588,var_589,], output)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1642 = relay.var("var_1642", dtype = "float32", shape = (11, 5, 15))#candidate|1642|(11, 5, 15)|var|float32
uop_1643 = relay.erf(var_1642.astype('float32')) # shape=(11, 5, 15)
bop_1647 = relay.left_shift(var_1642.astype('int32'), relay.reshape(uop_1643.astype('int32'), relay.shape_of(var_1642))) # shape=(11, 5, 15)
uop_1652 = relay.asin(uop_1643.astype('float32')) # shape=(11, 5, 15)
uop_1662 = relay.sinh(bop_1647.astype('float32')) # shape=(11, 5, 15)
var_1665 = relay.var("var_1665", dtype = "float32", shape = (11, 5, 15))#candidate|1665|(11, 5, 15)|var|float32
bop_1666 = relay.multiply(var_1642.astype('int8'), relay.reshape(var_1665.astype('int8'), relay.shape_of(var_1642))) # shape=(11, 5, 15)
uop_1670 = relay.atan(uop_1662.astype('float64')) # shape=(11, 5, 15)
output = relay.Tuple([uop_1652,bop_1666,uop_1670,])
output2 = relay.Tuple([uop_1652,bop_1666,uop_1670,])
func_1674 = relay.Function([var_1642,var_1665,], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
var_1675 = relay.var("var_1675", dtype = "float32", shape = (11, 5, 15))#candidate|1675|(11, 5, 15)|var|float32
var_1676 = relay.var("var_1676", dtype = "float32", shape = (11, 5, 15))#candidate|1676|(11, 5, 15)|var|float32
output = func_1674(var_1675,var_1676,)
func_1677 = relay.Function([var_1675,var_1676,], output)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1792 = relay.const(True, dtype = "bool")#candidate|1792|()|const|bool
var_1793 = relay.var("var_1793", dtype = "bool", shape = (6, 12, 4))#candidate|1793|(6, 12, 4)|var|bool
bop_1794 = relay.logical_and(const_1792.astype('bool'), var_1793.astype('bool')) # shape=(6, 12, 4)
bop_1797 = relay.greater(var_1793.astype('bool'), relay.reshape(bop_1794.astype('bool'), relay.shape_of(var_1793))) # shape=(6, 12, 4)
output = bop_1797
output2 = bop_1797
func_1801 = relay.Function([var_1793,], output)
mod['func_1801'] = func_1801
mod = relay.transform.InferType()(mod)
mutated_mod['func_1801'] = func_1801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1802 = relay.var("var_1802", dtype = "bool", shape = (6, 12, 4))#candidate|1802|(6, 12, 4)|var|bool
func_1801_call = mutated_mod.get_global_var('func_1801')
call_1803 = func_1801_call(var_1802)
output = call_1803
func_1804 = relay.Function([var_1802], output)
mutated_mod['func_1804'] = func_1804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1955 = relay.var("var_1955", dtype = "float32", shape = (9, 4, 7))#candidate|1955|(9, 4, 7)|var|float32
uop_1956 = relay.tan(var_1955.astype('float32')) # shape=(9, 4, 7)
output = uop_1956
output2 = uop_1956
func_1958 = relay.Function([var_1955,], output)
mod['func_1958'] = func_1958
mod = relay.transform.InferType()(mod)
var_1959 = relay.var("var_1959", dtype = "float32", shape = (9, 4, 7))#candidate|1959|(9, 4, 7)|var|float32
output = func_1958(var_1959)
func_1960 = relay.Function([var_1959], output)
mutated_mod['func_1960'] = func_1960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2617 = relay.var("var_2617", dtype = "float64", shape = (7, 3, 15))#candidate|2617|(7, 3, 15)|var|float64
const_2618 = relay.const([[[3.980704,8.581960,-5.556215,3.545259,-5.435863,4.841287,6.733806,-0.647836,3.544732,-8.083031,-1.562394,-1.620374,5.428516,-3.212473,-2.707039],[-1.114184,-5.073387,2.245471,1.837872,3.638892,-5.573636,-2.634023,-7.709558,8.246528,-7.561509,-9.536739,1.115474,-9.883407,-6.163394,1.360639],[4.907821,-0.918437,-5.130401,-4.325011,2.322061,1.007793,-3.301963,6.110518,-6.534365,-9.259918,-8.662936,8.988256,5.373117,-6.003181,4.940216]],[[-3.132121,0.886258,-5.035717,-9.053967,6.576640,-5.820787,-8.071130,5.496126,0.038379,-4.643448,-9.484510,-7.514999,-1.317582,-5.997328,6.761143],[-5.168868,-4.014583,1.082554,0.437989,9.107781,9.795882,9.711259,-3.519205,5.219523,-0.815276,0.759175,-4.754804,3.340158,-1.987503,0.841625],[4.199774,4.649369,-3.578087,-5.751752,5.516277,-4.186973,6.842109,-1.672200,-4.872125,0.683269,5.458830,-8.846759,1.384678,-7.913405,5.983420]],[[4.454197,4.113051,-3.730261,9.095573,-4.345491,-4.361844,7.560207,-9.022914,6.700071,9.176473,-6.544482,1.446784,-9.923189,-4.845907,-8.772269],[5.272133,-0.535360,7.683564,-3.911535,7.267151,2.508579,8.482802,4.678875,-4.761549,8.355367,4.274937,-7.266201,-1.233996,4.297813,7.554960],[-7.389981,-9.288692,6.604815,6.179956,-4.168273,-2.770203,-7.042446,9.120919,-6.061631,-2.803577,7.501133,6.482883,-0.963269,2.634598,-7.865362]],[[-4.372683,6.782474,2.268697,-4.278271,-5.567963,5.619953,-6.779137,-3.662023,9.036023,7.439192,-0.541928,3.495658,-8.587394,8.248355,-6.761917],[-1.995356,-8.495623,7.169190,-4.479781,-8.707159,-5.996995,-9.049157,9.659170,-8.813630,3.835606,-0.017405,2.086550,5.872793,-5.810741,3.736589],[-6.167524,9.122420,1.967510,-8.718091,-7.847318,-2.744260,-1.636759,5.998111,2.809599,-7.901482,2.940789,7.804767,-6.558955,-2.943683,3.698303]],[[9.414574,1.053922,9.939957,3.935602,-2.639652,-3.146961,2.852206,5.915985,3.144261,-8.157880,8.844681,-1.570547,-2.176071,8.559070,4.945042],[-8.656399,-6.703507,5.803438,-1.610797,4.636787,-1.502253,6.842404,-2.153848,-9.363567,-3.436673,2.542663,-9.509279,-7.342484,3.032797,4.821817],[-5.914631,4.705468,6.990205,-5.767955,-7.311895,5.894929,-6.873585,-3.562813,8.501202,-3.239507,7.602774,-6.086631,3.742472,8.900449,-1.914758]],[[-0.935422,-1.335826,-8.552727,-1.289082,-3.898752,-4.140287,-2.829778,-2.062902,-5.746176,7.468637,0.663334,-5.476311,6.779609,-7.886053,-7.717968],[4.330579,-7.327529,9.221156,-6.640439,1.672695,-4.335418,-3.270388,-7.546037,8.462777,-1.843727,0.947812,5.098923,2.573725,-0.634328,1.919345],[4.006223,3.158851,0.306456,-4.168589,-1.509039,-5.639254,4.044933,1.074887,7.744815,-6.839762,-5.661512,-9.964813,-8.611251,-0.230753,6.686964]],[[3.526587,-7.433922,-0.731928,2.161894,3.372048,4.872162,-6.510657,-6.247090,-2.195229,-7.944693,-1.569547,3.154113,7.347772,-7.808770,-5.908670],[1.632794,-3.476896,-8.063478,0.862604,2.787287,2.540824,-2.338440,-6.563118,-1.012638,1.543211,8.138373,9.296982,-5.780644,-5.871628,-1.586918],[-2.892894,6.193792,5.363544,-2.150829,0.703678,-7.884266,-8.990382,3.015937,1.084032,4.703799,-5.955259,-5.222463,9.675949,-5.366207,-4.735293]]], dtype = "float64")#candidate|2618|(7, 3, 15)|const|float64
bop_2619 = relay.mod(var_2617.astype('float64'), relay.reshape(const_2618.astype('float64'), relay.shape_of(var_2617))) # shape=(7, 3, 15)
bop_2622 = relay.bitwise_or(bop_2619.astype('int16'), relay.reshape(const_2618.astype('int16'), relay.shape_of(bop_2619))) # shape=(7, 3, 15)
func_456_call = mod.get_global_var('func_456')
func_459_call = mutated_mod.get_global_var('func_459')
var_2636 = relay.var("var_2636", dtype = "int64", shape = (416,))#candidate|2636|(416,)|var|int64
const_2637 = relay.const([[5,5,4,3],[-2,5,-6,-2],[-3,4,9,-10],[-1,-7,8,-3]], dtype = "int64")#candidate|2637|(4, 4)|const|int64
call_2635 = relay.TupleGetItem(func_456_call(relay.reshape(var_2636.astype('int64'), [416,]), relay.reshape(const_2637.astype('int64'), [16,]), ), 3)
call_2638 = relay.TupleGetItem(func_459_call(relay.reshape(var_2636.astype('int64'), [416,]), relay.reshape(const_2637.astype('int64'), [16,]), ), 3)
output = relay.Tuple([bop_2622,call_2635,var_2636,const_2637,])
output2 = relay.Tuple([bop_2622,call_2638,var_2636,const_2637,])
func_2652 = relay.Function([var_2617,var_2636,], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
var_2653 = relay.var("var_2653", dtype = "float64", shape = (7, 3, 15))#candidate|2653|(7, 3, 15)|var|float64
var_2654 = relay.var("var_2654", dtype = "int64", shape = (416,))#candidate|2654|(416,)|var|int64
output = func_2652(var_2653,var_2654,)
func_2655 = relay.Function([var_2653,var_2654,], output)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2760 = relay.var("var_2760", dtype = "int64", shape = ())#candidate|2760|()|var|int64
var_2761 = relay.var("var_2761", dtype = "int64", shape = (6, 11, 8))#candidate|2761|(6, 11, 8)|var|int64
bop_2762 = relay.not_equal(var_2760.astype('bool'), var_2761.astype('bool')) # shape=(6, 11, 8)
output = bop_2762
output2 = bop_2762
func_2788 = relay.Function([var_2760,var_2761,], output)
mod['func_2788'] = func_2788
mod = relay.transform.InferType()(mod)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mutated_mod.get_global_var('func_2788')
var_2790 = relay.var("var_2790", dtype = "int64", shape = ())#candidate|2790|()|var|int64
var_2791 = relay.var("var_2791", dtype = "int64", shape = (6, 11, 8))#candidate|2791|(6, 11, 8)|var|int64
call_2789 = func_2788_call(var_2790,var_2791,)
output = call_2789
func_2792 = relay.Function([var_2790,var_2791,], output)
mutated_mod['func_2792'] = func_2792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3181 = relay.var("var_3181", dtype = "float32", shape = (12, 7, 12))#candidate|3181|(12, 7, 12)|var|float32
uop_3182 = relay.acos(var_3181.astype('float32')) # shape=(12, 7, 12)
output = relay.Tuple([uop_3182,])
output2 = relay.Tuple([uop_3182,])
func_3188 = relay.Function([var_3181,], output)
mod['func_3188'] = func_3188
mod = relay.transform.InferType()(mod)
var_3189 = relay.var("var_3189", dtype = "float32", shape = (12, 7, 12))#candidate|3189|(12, 7, 12)|var|float32
output = func_3188(var_3189)
func_3190 = relay.Function([var_3189], output)
mutated_mod['func_3190'] = func_3190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3226 = relay.var("var_3226", dtype = "int64", shape = (7, 13, 16))#candidate|3226|(7, 13, 16)|var|int64
const_3227 = relay.const([[[10,-1,10,-1,2,-6,-1,10,6,-5,8,1,-7,-7,5,-10],[-9,6,-7,-4,-2,-7,-3,-1,7,-1,4,-8,-4,3,7,6],[2,-7,9,-9,4,-6,-5,7,2,8,-1,-7,1,4,-3,6],[-2,-6,4,4,1,6,-8,7,2,-8,-2,-6,6,3,-10,-5],[-1,5,-8,5,10,7,-6,-2,2,9,-6,8,-7,-9,9,-1],[-7,-6,-5,6,4,-5,-8,9,6,1,-5,2,-10,-2,9,9],[-10,-2,-8,2,10,2,-4,-5,1,2,6,9,-9,5,4,5],[-1,-3,-5,-2,-2,-4,-5,7,-6,-1,3,10,-1,-9,1,1],[2,2,6,-2,-8,5,7,9,-10,-8,10,-6,-3,6,-10,-7],[-10,10,10,-4,-10,2,-4,-1,-3,9,6,-6,4,-4,-8,7],[-7,4,10,-6,9,-8,-8,7,-7,-7,-6,2,5,-6,-5,1],[-1,1,-4,-4,4,-8,-10,-8,-5,-9,-7,1,-5,5,2,-3],[-2,6,1,9,-3,-2,3,-9,-2,-9,7,1,1,-1,-1,-5]],[[9,8,-3,-7,-5,-9,-8,9,7,9,2,-6,-5,5,5,8],[3,-6,-5,3,4,10,-10,-2,-9,-1,-2,-1,7,-4,7,-4],[9,7,5,-4,1,10,3,10,-4,2,-7,-4,10,-7,-9,-7],[3,2,5,-6,10,-10,8,6,1,8,2,4,-10,-8,2,-7],[9,-2,7,-1,-5,-1,-10,-5,-4,1,-4,7,6,5,9,2],[3,-2,-3,7,-5,1,5,8,-8,3,-4,8,-6,-7,-6,4],[-4,-10,-1,-4,-3,-4,10,8,-1,-2,3,-4,-4,5,9,-7],[-8,-9,-4,-7,-10,5,-5,10,6,-2,3,-10,-6,-4,4,7],[8,1,8,9,1,8,1,-5,-1,7,-4,10,10,4,-7,6],[-6,9,6,-2,6,-6,-9,3,7,-5,-7,-10,2,2,4,7],[6,-4,8,1,5,10,-8,5,4,-6,-6,9,10,-9,1,6],[4,2,-5,7,-2,-5,1,-8,1,-8,-10,-7,10,7,-4,9],[-3,1,5,10,-6,-10,9,3,-9,1,8,10,-5,-9,9,6]],[[-8,2,6,3,-10,-10,10,-1,4,8,9,10,-6,3,-7,-7],[-10,2,-2,-10,7,-3,3,6,5,9,-4,10,-10,-5,-5,-5],[3,1,-10,10,-10,4,7,1,6,6,1,-9,-10,-9,5,10],[-9,5,-3,-1,-8,-6,-7,-6,9,2,-9,-2,-3,4,6,8],[-6,-7,8,3,4,-10,8,-3,-8,-10,6,-6,4,-9,-5,-8],[-1,-1,4,4,5,9,2,2,-7,-8,6,-1,7,3,-8,4],[-7,-8,-9,8,-10,9,1,5,8,2,-9,-6,-5,-8,-1,4],[-7,6,-7,-2,-3,9,6,3,-7,-8,10,-5,-3,9,5,-10],[6,-10,4,9,7,-3,-4,-5,-3,-9,6,-9,-7,3,-2,6],[-2,-8,-10,-6,-7,-10,-7,-1,-9,-5,-4,-6,-3,-5,-3,-10],[9,3,-8,-6,8,-3,-2,-5,-7,-6,3,4,-2,-10,1,-1],[-1,-2,1,-4,-6,4,-3,9,-9,1,-8,9,-5,4,-10,-8],[9,-2,10,9,-2,3,4,-3,8,7,8,-7,-7,-1,-6,-10]],[[9,-5,-5,-2,-9,-2,9,-6,-9,5,10,-10,-3,-4,10,-3],[-7,9,-5,10,-7,9,-8,-3,9,-6,-7,6,9,-8,5,9],[4,-3,-8,2,-7,-1,5,4,9,-3,-8,8,-8,-8,10,4],[-7,2,1,-3,7,3,-8,-8,-7,-5,7,-2,-2,7,-8,-7],[-7,2,-4,-6,7,-7,-6,-3,-5,8,4,6,-10,9,3,5],[-6,7,2,-3,3,-5,4,-2,6,10,9,7,10,-9,1,-2],[-1,-7,2,-1,9,-4,3,3,-5,1,-10,3,-2,2,8,-8],[-2,-1,6,-9,-7,-9,8,-2,-6,9,9,5,-6,-5,-10,-3],[-2,5,6,1,7,-4,4,2,-8,6,-2,-9,8,3,10,8],[-10,-8,-9,10,2,4,1,-6,4,-6,-10,7,2,-6,7,6],[9,4,6,-5,-1,4,3,-10,-9,5,5,9,-3,-2,1,8],[4,7,7,8,-10,-9,-2,10,-9,-3,9,2,1,2,3,-3],[3,7,-3,-7,5,6,7,1,10,-10,7,1,-9,-1,5,9]],[[3,6,-1,9,-9,5,10,1,9,-1,7,-6,4,-7,1,-5],[-4,-10,-5,2,1,-1,-3,-1,8,-9,-3,-9,4,6,-4,10],[5,4,7,6,-3,-9,1,-9,3,2,-4,-2,7,-4,2,-10],[1,7,-1,-8,-9,-3,8,-9,-1,-6,4,-3,-8,3,-10,7],[10,-1,-8,-7,5,-1,-1,3,-3,-9,7,-7,1,-4,-4,2],[8,3,2,5,10,-10,6,5,2,-6,5,5,3,9,-10,-9],[4,-4,-4,4,7,-4,-9,4,-2,2,4,-5,7,-2,5,-5],[5,-7,-10,-10,-5,2,3,7,6,3,7,5,-2,-10,8,7],[-7,-2,-5,6,7,6,-5,5,2,-1,6,10,-3,-6,-6,-6],[-9,-1,-1,6,6,7,-3,-3,10,4,8,-7,-4,3,8,-4],[10,-3,4,-8,-1,2,-7,1,-6,5,-8,-6,5,-4,-1,-4],[-6,1,-6,2,3,-3,6,-8,-6,-8,-7,-9,-6,-9,-3,-7],[8,1,-6,-1,-7,-9,-8,-7,2,-1,2,3,-2,6,-5,-8]],[[-2,9,4,-6,6,-5,-4,9,2,7,9,-1,-4,10,-1,-4],[-9,-10,3,-3,-3,3,5,-5,1,10,-4,1,-9,9,9,-2],[4,-9,-9,-8,-5,10,-3,4,7,-4,-6,-10,5,-2,3,-3],[5,6,6,-4,4,-10,1,9,-9,-10,7,9,-9,6,-4,-1],[-1,-3,-10,2,3,9,8,-1,-2,-4,-2,2,-6,5,9,1],[2,1,-10,-4,-2,8,-4,1,-1,8,9,-5,10,5,6,1],[9,-8,2,-4,8,6,-1,9,-3,-5,6,-7,8,6,-9,1],[-9,-5,-2,5,10,-1,10,3,8,-8,-8,1,-9,1,5,4],[-9,-3,1,-1,3,2,-4,9,-4,8,-3,9,7,-10,10,-6],[-6,-1,1,7,-6,7,7,5,2,5,-2,9,-4,4,6,6],[1,8,1,-5,-8,10,8,-9,9,-6,-10,-10,4,10,-4,-2],[6,-8,-9,8,5,3,3,2,5,3,-4,10,7,-8,8,7],[-3,-3,-7,-10,-10,6,4,-5,7,-4,3,1,-6,10,-10,-8]],[[-3,7,-3,-4,9,-6,9,10,3,9,8,5,-8,7,-3,4],[9,10,8,5,-6,-10,6,3,6,5,-1,-7,5,-10,1,6],[5,2,-10,3,-1,10,-5,-7,6,-4,-10,9,-6,-4,5,9],[-4,5,9,9,-1,7,2,6,4,7,10,9,-5,7,3,-9],[-6,-10,-2,-6,7,-8,7,-9,3,-7,1,1,1,7,-3,-10],[1,-5,-8,-6,4,6,-10,-6,-2,-6,-1,3,4,-5,-4,-3],[4,10,10,-8,1,-8,10,2,9,9,2,3,1,10,-4,2],[2,1,-7,-8,5,-7,-10,-1,6,10,-1,5,-4,9,1,-7],[1,-7,-8,-7,9,-10,-5,-1,-2,-1,5,-4,3,6,-5,7],[10,6,-6,-3,-7,7,3,-4,-8,-7,-1,3,-6,-7,3,-9],[-7,3,6,-10,8,-6,5,5,5,10,6,-9,6,3,2,-4],[-7,-2,-2,7,-2,-10,-2,-4,-10,-2,-2,9,9,-7,6,-9],[8,-7,6,2,-8,8,-9,9,-1,-6,-4,-10,6,3,9,-4]]], dtype = "int64")#candidate|3227|(7, 13, 16)|const|int64
bop_3228 = relay.equal(var_3226.astype('bool'), relay.reshape(const_3227.astype('bool'), relay.shape_of(var_3226))) # shape=(7, 13, 16)
func_2652_call = mod.get_global_var('func_2652')
func_2655_call = mutated_mod.get_global_var('func_2655')
const_3236 = relay.const([-6.787424,0.603144,9.612031,-5.720905,6.022020,-3.085613,-8.115856,4.647584,-6.380721,4.178483,8.457150,-7.624433,2.457436,9.119131,1.981334,5.134651,-7.844758,-7.786550,-9.093120,-3.463804,-5.008666,5.638064,7.632040,-7.608442,-0.439081,-6.797684,1.276873,7.394617,4.645712,-2.095192,-3.514801,-2.825360,-3.776098,-7.213878,-8.150827,2.683889,8.997808,7.641900,5.683436,6.436481,1.527865,4.075859,-8.925136,5.957429,-7.631044,-8.392838,-6.012695,9.335763,-6.716544,9.219538,-9.298024,2.972113,-6.644230,0.579950,6.461304,3.598666,-1.070132,2.755620,5.943339,-4.087646,-3.071761,-4.061275,-9.385300,-8.056425,-3.848723,6.470697,-5.382358,-5.044051,3.526628,-3.262874,-3.666554,0.308806,-5.268838,1.471238,-4.185071,3.134945,5.893395,8.626721,-0.738721,-4.707064,2.068548,3.083787,-5.458418,-0.963246,3.753698,-0.849943,-4.803800,-7.150064,8.778077,6.756111,-7.310688,-3.861002,-6.885107,1.984994,4.179964,8.892147,4.490072,-7.960836,1.856875,7.446827,6.368925,-4.798038,3.184817,9.870359,9.930090,-7.035787,7.020787,0.902390,-9.406313,-9.016505,-8.488901,5.781103,1.996478,6.417491,-9.052516,9.907688,0.998916,-3.457813,7.493323,0.295717,-6.000278,-7.840208,-9.624935,9.796140,-2.336956,4.159948,-8.910292,-8.827067,-3.973493,-1.460125,-4.031599,8.316269,2.919824,-0.353461,1.343558,5.525117,-6.442430,3.364624,7.596171,2.584057,2.102084,-4.746966,6.380006,2.816145,9.252043,3.487875,8.768086,5.420071,-0.443955,4.617782,1.313430,5.825115,-7.951683,-7.855691,6.885022,7.976897,-3.655269,-5.354514,-7.681978,-1.769576,8.218712,5.724136,-1.119947,-5.082761,3.712113,-7.436549,-2.089439,-3.694666,-7.320506,9.798128,-9.876591,-5.890923,-8.785344,8.167846,-5.555986,-7.699074,7.609212,7.361912,-1.448767,-9.461439,8.619189,-3.672812,-8.073737,6.673823,-5.055850,-8.765573,3.005339,1.320197,-4.849051,7.561746,-1.794462,-3.240280,6.646850,9.711635,7.986785,4.427848,-7.903762,9.544976,-2.478693,-3.081285,0.705919,-8.426388,9.660714,-0.169327,-1.463001,9.367603,-9.212658,-7.632900,0.696799,6.612842,0.776843,1.021114,0.918989,-5.029464,7.909932,-9.863180,9.573075,-6.715666,-1.552990,-9.224495,-9.292301,-2.245599,-3.108339,-5.574550,-7.873037,-5.789353,5.569519,-6.410604,-2.294102,-3.777907,5.187140,-2.278105,3.002016,4.928775,-2.109186,-9.055053,1.683407,9.868324,9.653514,3.322320,2.353527,7.528079,-4.684405,8.731325,-8.352655,-0.010884,-9.942344,7.689361,8.485285,-4.700743,-9.596083,-0.786317,2.305567,5.188861,-3.352403,-1.496186,9.245270,-3.972876,7.148016,-6.050765,8.276945,7.452223,-2.279643,-7.103606,-5.170206,2.231186,8.557145,-5.080641,5.340734,-8.852127,8.836021,7.686938,-1.743604,-7.146142,-9.782514,-0.799698,2.429313,7.793456,-4.508093,-5.198126,-3.062843,2.214281,1.854837,-1.416162,-5.719087,-3.895663,-9.400240,-9.358263,6.681266,-1.426651,9.240258,-6.441177,5.311672,-9.815755,2.305105,-7.850131,-5.099245,3.434219,7.447749,-5.702775,-6.494788,0.559801,6.337817,-3.030562,-9.091610,-6.351501,6.023553,2.593292,-0.946050,-6.036194,-4.404664,-5.779293,-4.613390,-6.053388,7.444323], dtype = "float64")#candidate|3236|(315,)|const|float64
const_3237 = relay.const([-10,-10,3,-4,9,-8,9,-7,-9,-5,6,10,8,-3,7,3,-5,6,7,6,3,10,2,-4,10,-4,9,8,-1,10,-1,5,-5,5,-2,-10,7,-7,-7,9,-2,6,8,-9,-5,7,9,3,5,-10,2,-4,-9,-7,-1,6,1,5,5,2,-2,-7,3,6,9,4,7,-10,8,5,-6,-5,2,-8,-3,-7,9,5,-6,-9,9,6,-3,4,-4,3,9,-8,-7,8,-7,4,-10,10,-1,1,-4,8,5,-1,9,10,-3,9,-5,1,-3,-9,-3,9,10,6,6,5,3,10,-1,10,-7,3,5,5,8,-2,-5,-9,-8,-2,6,-6,3,-3,-6,-8,3,6,-5,7,-5,8,-8,6,9,-2,5,-6,-6,3,-3,5,-4,3,2,-5,-8,6,10,-4,9,-8,6,5,4,-3,10,-10,-9,-4,-4,5,-3,-2,4,-4,3,-9,5,-10,1,5,-1,4,9,-10,-6,-8,9,-4,5,-6,-9,9,7,4,-5,7,-3,8,10,6,7,7,-4,-7,-8,-7,-7,4,6,-2,-4,-8,4,8,4,-10,-7,-6,-7,-8,-5,-3,-3,-6,4,9,1,-2,3,-6,3,9,2,-1,-8,5,5,-6,4,7,-2,-5,-6,-7,-6,-10,-9,-9,4,-2,-8,-4,5,-1,-1,-9,7,-5,1,-3,-7,6,-2,8,4,6,7,6,9,-2,-8,-5,-5,9,4,-4,7,-6,-6,4,-6,-3,2,6,-9,-4,-1,1,9,5,3,6,-9,10,-9,-7,-5,-10,2,-8,6,7,1,7,-9,5,2,-4,4,-8,8,-9,-8,10,7,-2,-2,-2,8,-4,4,10,3,-6,-10,9,2,3,-7,1,-4,8,-1,-8,-2,7,-4,-3,-3,-3,5,-4,-1,6,-1,3,9,1,4,10,-4,3,4,-4,-4,1,-2,-6,-4,-3,9,-2,9,-8,-5,-8,-5,-8,4,-5,10,8,3,-4,-6,3,5,4,9,5,-2,2,4,4,3,-8,9,6,10,10,9,9,-9,7,7,-1,-5,-4,-4,-6,-10,-1,-10,1,-6,-6,-4,-8,10,-2,-7,3,7,-10,-8,9], dtype = "int64")#candidate|3237|(416,)|const|int64
call_3235 = relay.TupleGetItem(func_2652_call(relay.reshape(const_3236.astype('float64'), [7, 3, 15]), relay.reshape(const_3237.astype('int64'), [416,]), ), 3)
call_3238 = relay.TupleGetItem(func_2655_call(relay.reshape(const_3236.astype('float64'), [7, 3, 15]), relay.reshape(const_3237.astype('int64'), [416,]), ), 3)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
const_3246 = relay.const([-1,4,4,-4,-2,2,3,4,-9,9,2,-5,-4,1,-5,2,-5,3,4,8,2,-2,3,4,6,7,-3,-6,5,-6,-4,-4,7,-6,7,-6,5,5,-5,-10,-2,-8,-1,-5,4,7,-10,-4], dtype = "int64")#candidate|3246|(48,)|const|int64
call_3245 = func_188_call(relay.reshape(call_3235.astype('int64'), [2, 8, 1]), relay.reshape(const_3246.astype('int64'), [2, 8, 3]), )
call_3247 = func_188_call(relay.reshape(call_3235.astype('int64'), [2, 8, 1]), relay.reshape(const_3246.astype('int64'), [2, 8, 3]), )
output = relay.Tuple([bop_3228,call_3235,const_3236,const_3237,call_3245,const_3246,])
output2 = relay.Tuple([bop_3228,call_3238,const_3236,const_3237,call_3247,const_3246,])
func_3300 = relay.Function([var_3226,], output)
mod['func_3300'] = func_3300
mod = relay.transform.InferType()(mod)
var_3301 = relay.var("var_3301", dtype = "int64", shape = (7, 13, 16))#candidate|3301|(7, 13, 16)|var|int64
output = func_3300(var_3301)
func_3302 = relay.Function([var_3301], output)
mutated_mod['func_3302'] = func_3302
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3600 = relay.const(3, dtype = "uint64")#candidate|3600|()|const|uint64
var_3601 = relay.var("var_3601", dtype = "uint64", shape = (15, 12, 1))#candidate|3601|(15, 12, 1)|var|uint64
bop_3602 = relay.greater_equal(const_3600.astype('bool'), var_3601.astype('bool')) # shape=(15, 12, 1)
output = bop_3602
output2 = bop_3602
func_3612 = relay.Function([var_3601,], output)
mod['func_3612'] = func_3612
mod = relay.transform.InferType()(mod)
var_3613 = relay.var("var_3613", dtype = "uint64", shape = (15, 12, 1))#candidate|3613|(15, 12, 1)|var|uint64
output = func_3612(var_3613)
func_3614 = relay.Function([var_3613], output)
mutated_mod['func_3614'] = func_3614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3689 = relay.var("var_3689", dtype = "int8", shape = (13, 2, 6))#candidate|3689|(13, 2, 6)|var|int8
var_3690 = relay.var("var_3690", dtype = "int8", shape = (13, 2, 6))#candidate|3690|(13, 2, 6)|var|int8
bop_3691 = relay.logical_xor(var_3689.astype('int8'), relay.reshape(var_3690.astype('int8'), relay.shape_of(var_3689))) # shape=(13, 2, 6)
output = bop_3691
output2 = bop_3691
func_3710 = relay.Function([var_3689,var_3690,], output)
mod['func_3710'] = func_3710
mod = relay.transform.InferType()(mod)
mutated_mod['func_3710'] = func_3710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mutated_mod.get_global_var('func_3710')
var_3712 = relay.var("var_3712", dtype = "int8", shape = (13, 2, 6))#candidate|3712|(13, 2, 6)|var|int8
var_3713 = relay.var("var_3713", dtype = "int8", shape = (13, 2, 6))#candidate|3713|(13, 2, 6)|var|int8
call_3711 = func_3710_call(var_3712,var_3713,)
output = call_3711
func_3714 = relay.Function([var_3712,var_3713,], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3793 = relay.var("var_3793", dtype = "float32", shape = (15, 9, 6))#candidate|3793|(15, 9, 6)|var|float32
uop_3794 = relay.erf(var_3793.astype('float32')) # shape=(15, 9, 6)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_3804 = relay.var("var_3804", dtype = "int64", shape = (2, 208))#candidate|3804|(2, 208)|var|int64
var_3805 = relay.var("var_3805", dtype = "int64", shape = (16,))#candidate|3805|(16,)|var|int64
call_3803 = relay.TupleGetItem(func_394_call(relay.reshape(var_3804.astype('int64'), [2, 13, 16]), relay.reshape(var_3805.astype('int64'), [8, 2]), relay.reshape(var_3804.astype('int64'), [2, 13, 16]), ), 9)
call_3806 = relay.TupleGetItem(func_398_call(relay.reshape(var_3804.astype('int64'), [2, 13, 16]), relay.reshape(var_3805.astype('int64'), [8, 2]), relay.reshape(var_3804.astype('int64'), [2, 13, 16]), ), 9)
output = relay.Tuple([uop_3794,call_3803,var_3804,var_3805,])
output2 = relay.Tuple([uop_3794,call_3806,var_3804,var_3805,])
func_3807 = relay.Function([var_3793,var_3804,var_3805,], output)
mod['func_3807'] = func_3807
mod = relay.transform.InferType()(mod)
var_3808 = relay.var("var_3808", dtype = "float32", shape = (15, 9, 6))#candidate|3808|(15, 9, 6)|var|float32
var_3809 = relay.var("var_3809", dtype = "int64", shape = (2, 208))#candidate|3809|(2, 208)|var|int64
var_3810 = relay.var("var_3810", dtype = "int64", shape = (16,))#candidate|3810|(16,)|var|int64
output = func_3807(var_3808,var_3809,var_3810,)
func_3811 = relay.Function([var_3808,var_3809,var_3810,], output)
mutated_mod['func_3811'] = func_3811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3862 = relay.var("var_3862", dtype = "int16", shape = (3, 7, 7))#candidate|3862|(3, 7, 7)|var|int16
var_3863 = relay.var("var_3863", dtype = "int16", shape = (3, 7, 7))#candidate|3863|(3, 7, 7)|var|int16
bop_3864 = relay.logical_xor(var_3862.astype('int16'), relay.reshape(var_3863.astype('int16'), relay.shape_of(var_3862))) # shape=(3, 7, 7)
func_3807_call = mod.get_global_var('func_3807')
func_3811_call = mutated_mod.get_global_var('func_3811')
var_3871 = relay.var("var_3871", dtype = "float32", shape = (810,))#candidate|3871|(810,)|var|float32
var_3872 = relay.var("var_3872", dtype = "int64", shape = (8, 52))#candidate|3872|(8, 52)|var|int64
var_3873 = relay.var("var_3873", dtype = "int64", shape = (16,))#candidate|3873|(16,)|var|int64
call_3870 = relay.TupleGetItem(func_3807_call(relay.reshape(var_3871.astype('float32'), [15, 9, 6]), relay.reshape(var_3872.astype('int64'), [2, 208]), relay.reshape(var_3873.astype('int64'), [16,]), ), 0)
call_3874 = relay.TupleGetItem(func_3811_call(relay.reshape(var_3871.astype('float32'), [15, 9, 6]), relay.reshape(var_3872.astype('int64'), [2, 208]), relay.reshape(var_3873.astype('int64'), [16,]), ), 0)
uop_3897 = relay.rsqrt(var_3872.astype('float64')) # shape=(8, 52)
func_2788_call = mod.get_global_var('func_2788')
func_2792_call = mutated_mod.get_global_var('func_2792')
const_3900 = relay.const(-5, dtype = "int64")#candidate|3900|()|const|int64
const_3901 = relay.const([1,4,-5,-8,-10,-4,1,6,6,7,-10,9,7,-7,5,8,10,-6,10,-7,-4,9,-4,7,-1,-3,7,10,-8,-8,8,8,9,2,-9,8,-10,3,2,-4,-4,-5,-9,-7,-3,-9,-3,9,-5,1,-10,9,8,5,-4,4,-6,-1,5,3,4,-8,-10,-1,10,9,3,-1,2,10,5,-3,4,-9,1,6,3,-6,-3,-8,-1,6,-6,4,2,-3,-9,-1,2,1,-3,1,-10,-1,-4,-7,-5,-8,1,1,7,4,10,-8,-7,-8,-5,-4,-5,-10,-3,5,-2,-3,4,-8,-7,6,8,-10,4,-3,6,-4,4,2,-2,9,10,9,-3,-5,-9,-8,7,-2,-7,-10,4,-7,-9,-8,-6,7,9,1,2,2,9,10,9,6,9,-2,9,3,-8,9,8,-1,-1,-10,-10,-8,-4,6,-2,-1,8,4,-3,-7,8,7,3,6,2,-1,-8,-3,7,6,-4,10,2,-3,-1,-6,-6,8,10,-3,7,7,3,8,1,-9,4,-9,3,3,-10,-6,1,8,-5,-8,-5,10,6,9,-3,-4,-8,-5,-5,-9,-7,-5,-7,2,4,-6,6,8,-3,1,3,-3,8,-6,-4,10,-7,2,6,8,5,-10,8,-10,2,5,7,-10,7,8,10,5,-2,1,-10,-9,-3,-3,-6,-9,6,-8,5,-10,4,4,-7,-1,-7,-1,3,1,1,-6,10,-7,-1,-1,-3,-9,-10,-2,3,8,-8,-6,-8,-9,-2,6,-10,8,8,-8,-2,-7,-1,9,-4,5,-5,5,7,-2,8,-10,-1,-10,10,9,8,-4,6,-4,-10,2,-7,9,-10,-2,9,7,-10,6,-6,4,10,2,1,6,-4,-9,5,4,8,-4,-9,6,9,-1,-8,10,3,6,7,-7,2,1,-3,3,-4,-10,-1,2,2,-4,8,-10,5,7,10,4,-10,-9,3,-6,-2,-9,5,-2,7,-7,9,6,-5,-9,-6,9,9,1,-4,8,5,9,-3,9,7,4,3,-4,-2,-3,6,-6,-2,9,-4,-9,6,-3,1,8,-5,-5,-2,-9,4,5,-4,6,-8,1,2,2,-10,-9,-6,10,-7,2,-6,6,-4,9,-1,-5,8,2,-6,9,1,8,3,1,-2,3,-3,-7,1,-5,9,-1,4,6,-10,-7,-3,8,-2,9,-1,2,-1,-1,3,5,7,-8,1,-2,-8,-2,3,-8,7,9,-8,-4,-7,9,2,-1,-10,-10,2,-2,1,1,3,9,7,-10,6,-5,-8,5,8,6,5,-1,-8,-7,-6,-2,-10,-1,-8,5,4,1,4,-9,-1,2,-1,-3,7,-9,-10,4,-4,10,-7,-8,-3,-10,-4,-9,5,3,8,6,-5,10,6,7,10,-3,-2,-5], dtype = "int64")#candidate|3901|(528,)|const|int64
call_3899 = func_2788_call(relay.reshape(const_3900.astype('int64'), []), relay.reshape(const_3901.astype('int64'), [6, 11, 8]), )
call_3902 = func_2788_call(relay.reshape(const_3900.astype('int64'), []), relay.reshape(const_3901.astype('int64'), [6, 11, 8]), )
output = relay.Tuple([bop_3864,call_3870,var_3871,var_3873,uop_3897,call_3899,const_3900,const_3901,])
output2 = relay.Tuple([bop_3864,call_3874,var_3871,var_3873,uop_3897,call_3902,const_3900,const_3901,])
func_3905 = relay.Function([var_3862,var_3863,var_3871,var_3872,var_3873,], output)
mod['func_3905'] = func_3905
mod = relay.transform.InferType()(mod)
var_3906 = relay.var("var_3906", dtype = "int16", shape = (3, 7, 7))#candidate|3906|(3, 7, 7)|var|int16
var_3907 = relay.var("var_3907", dtype = "int16", shape = (3, 7, 7))#candidate|3907|(3, 7, 7)|var|int16
var_3908 = relay.var("var_3908", dtype = "float32", shape = (810,))#candidate|3908|(810,)|var|float32
var_3909 = relay.var("var_3909", dtype = "int64", shape = (8, 52))#candidate|3909|(8, 52)|var|int64
var_3910 = relay.var("var_3910", dtype = "int64", shape = (16,))#candidate|3910|(16,)|var|int64
output = func_3905(var_3906,var_3907,var_3908,var_3909,var_3910,)
func_3911 = relay.Function([var_3906,var_3907,var_3908,var_3909,var_3910,], output)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4065 = relay.var("var_4065", dtype = "float32", shape = (13, 14, 8))#candidate|4065|(13, 14, 8)|var|float32
uop_4066 = relay.rsqrt(var_4065.astype('float32')) # shape=(13, 14, 8)
bop_4077 = relay.subtract(var_4065.astype('float64'), relay.reshape(uop_4066.astype('float64'), relay.shape_of(var_4065))) # shape=(13, 14, 8)
var_4088 = relay.var("var_4088", dtype = "float32", shape = (13, 14, 8))#candidate|4088|(13, 14, 8)|var|float32
bop_4089 = relay.logical_and(var_4065.astype('bool'), relay.reshape(var_4088.astype('bool'), relay.shape_of(var_4065))) # shape=(13, 14, 8)
output = relay.Tuple([bop_4077,bop_4089,])
output2 = relay.Tuple([bop_4077,bop_4089,])
func_4094 = relay.Function([var_4065,var_4088,], output)
mod['func_4094'] = func_4094
mod = relay.transform.InferType()(mod)
var_4095 = relay.var("var_4095", dtype = "float32", shape = (13, 14, 8))#candidate|4095|(13, 14, 8)|var|float32
var_4096 = relay.var("var_4096", dtype = "float32", shape = (13, 14, 8))#candidate|4096|(13, 14, 8)|var|float32
output = func_4094(var_4095,var_4096,)
func_4097 = relay.Function([var_4095,var_4096,], output)
mutated_mod['func_4097'] = func_4097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4167 = relay.var("var_4167", dtype = "uint8", shape = (14, 12, 16))#candidate|4167|(14, 12, 16)|var|uint8
var_4168 = relay.var("var_4168", dtype = "uint8", shape = (14, 12, 16))#candidate|4168|(14, 12, 16)|var|uint8
bop_4169 = relay.greater(var_4167.astype('bool'), relay.reshape(var_4168.astype('bool'), relay.shape_of(var_4167))) # shape=(14, 12, 16)
bop_4173 = relay.floor_mod(var_4167.astype('float64'), relay.reshape(bop_4169.astype('float64'), relay.shape_of(var_4167))) # shape=(14, 12, 16)
bop_4179 = relay.power(bop_4169.astype('float32'), relay.reshape(bop_4173.astype('float32'), relay.shape_of(bop_4169))) # shape=(14, 12, 16)
output = relay.Tuple([bop_4179,])
output2 = relay.Tuple([bop_4179,])
func_4182 = relay.Function([var_4167,var_4168,], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
var_4183 = relay.var("var_4183", dtype = "uint8", shape = (14, 12, 16))#candidate|4183|(14, 12, 16)|var|uint8
var_4184 = relay.var("var_4184", dtype = "uint8", shape = (14, 12, 16))#candidate|4184|(14, 12, 16)|var|uint8
output = func_4182(var_4183,var_4184,)
func_4185 = relay.Function([var_4183,var_4184,], output)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4207 = relay.var("var_4207", dtype = "int64", shape = (2, 3, 14))#candidate|4207|(2, 3, 14)|var|int64
var_4208 = relay.var("var_4208", dtype = "int64", shape = (2, 3, 14))#candidate|4208|(2, 3, 14)|var|int64
bop_4209 = relay.logical_xor(var_4207.astype('int64'), relay.reshape(var_4208.astype('int64'), relay.shape_of(var_4207))) # shape=(2, 3, 14)
output = bop_4209
output2 = bop_4209
func_4228 = relay.Function([var_4207,var_4208,], output)
mod['func_4228'] = func_4228
mod = relay.transform.InferType()(mod)
mutated_mod['func_4228'] = func_4228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4228_call = mutated_mod.get_global_var('func_4228')
var_4230 = relay.var("var_4230", dtype = "int64", shape = (2, 3, 14))#candidate|4230|(2, 3, 14)|var|int64
var_4231 = relay.var("var_4231", dtype = "int64", shape = (2, 3, 14))#candidate|4231|(2, 3, 14)|var|int64
call_4229 = func_4228_call(var_4230,var_4231,)
output = call_4229
func_4232 = relay.Function([var_4230,var_4231,], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4283 = relay.var("var_4283", dtype = "uint32", shape = (14, 15, 13))#candidate|4283|(14, 15, 13)|var|uint32
var_4284 = relay.var("var_4284", dtype = "uint32", shape = (14, 15, 13))#candidate|4284|(14, 15, 13)|var|uint32
bop_4285 = relay.greater_equal(var_4283.astype('bool'), relay.reshape(var_4284.astype('bool'), relay.shape_of(var_4283))) # shape=(14, 15, 13)
var_4289 = relay.var("var_4289", dtype = "bool", shape = (14, 15, 13))#candidate|4289|(14, 15, 13)|var|bool
bop_4290 = relay.less_equal(bop_4285.astype('bool'), relay.reshape(var_4289.astype('bool'), relay.shape_of(bop_4285))) # shape=(14, 15, 13)
uop_4293 = relay.asin(var_4284.astype('float32')) # shape=(14, 15, 13)
uop_4298 = relay.log2(uop_4293.astype('float64')) # shape=(14, 15, 13)
output = relay.Tuple([bop_4290,uop_4298,])
output2 = relay.Tuple([bop_4290,uop_4298,])
func_4316 = relay.Function([var_4283,var_4284,var_4289,], output)
mod['func_4316'] = func_4316
mod = relay.transform.InferType()(mod)
var_4317 = relay.var("var_4317", dtype = "uint32", shape = (14, 15, 13))#candidate|4317|(14, 15, 13)|var|uint32
var_4318 = relay.var("var_4318", dtype = "uint32", shape = (14, 15, 13))#candidate|4318|(14, 15, 13)|var|uint32
var_4319 = relay.var("var_4319", dtype = "bool", shape = (14, 15, 13))#candidate|4319|(14, 15, 13)|var|bool
output = func_4316(var_4317,var_4318,var_4319,)
func_4320 = relay.Function([var_4317,var_4318,var_4319,], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4367 = relay.var("var_4367", dtype = "float64", shape = (16, 12, 13))#candidate|4367|(16, 12, 13)|var|float64
uop_4368 = relay.tan(var_4367.astype('float64')) # shape=(16, 12, 13)
bop_4371 = relay.less(uop_4368.astype('bool'), relay.reshape(var_4367.astype('bool'), relay.shape_of(uop_4368))) # shape=(16, 12, 13)
output = bop_4371
output2 = bop_4371
func_4378 = relay.Function([var_4367,], output)
mod['func_4378'] = func_4378
mod = relay.transform.InferType()(mod)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4379 = relay.var("var_4379", dtype = "float64", shape = (16, 12, 13))#candidate|4379|(16, 12, 13)|var|float64
func_4378_call = mutated_mod.get_global_var('func_4378')
call_4380 = func_4378_call(var_4379)
output = call_4380
func_4381 = relay.Function([var_4379], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5026 = relay.var("var_5026", dtype = "uint8", shape = (3, 4, 15))#candidate|5026|(3, 4, 15)|var|uint8
var_5027 = relay.var("var_5027", dtype = "uint8", shape = (3, 4, 15))#candidate|5027|(3, 4, 15)|var|uint8
bop_5028 = relay.maximum(var_5026.astype('uint8'), relay.reshape(var_5027.astype('uint8'), relay.shape_of(var_5026))) # shape=(3, 4, 15)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
const_5045 = relay.const([3,-1,7,-7,-7,2,-9,6,1,-6,-1,10,8,-3,3,-2,-7,-1,8,-7,-9,5,-3,-6,3,7,-8,5,1,9,-4,-2,5,5,5,8,-4,4,4,-4,-1,-4,-10,-6,-7,-4,-7,-1,-2,-6,10,-1,-1,-2,4,-1,-8,5,-5,8,-6,-4,1,-5,-4,9,9,8,6,4,-7,4,-1,3,10,10,4,-10,9,-7,10,-7,-8,10,7,4,10,-1,-9,-9,-6,6,10,4,-5,2,-8,4,-4,-2,8,-8,7,1,6,6,6,-1,-10,-6,7,-10,-7,-3,-1,-3,-2,-9,-2,7,-10,-7,7,-3,-4,-3,4,-6,-10,-1,5,-3,-7,-7,3,-5,7,9,2,10,-8,-7,-6,5,-1,10,2,-4,-6,-8,-5,1,-6,5,-10,-4,-9,3,3,3,6,-1,-7,-7,-5,1,9,1,4,-5,-2,5,1,7,7,7,5,2,-2,4,-6,-7,-7,-4,8,-5,10,2,-9,-3,-2,10,10,-9,2,10,-8,-5,-7,6,-10,-6,3,10,-10,10,7,9,-3,2,2,3,10,7,-9,-5,-5,9,-10,4,4,-1,-6,-10,9,-2,3,2,-5,3,3,-5,8,8,3,-7,8,9,8,-2,-9,-9,2,-8,-2,3,6,4,1,1,8,2,3,9,-9,10,5,-2,3,-6,-8,2,8,-7,10,5,-3,-3,8,-10,10,7,-9,4,7,-9,-8,9,7,-9,4,-6,-2,-7,-10,7,7,7,1,10,-1,2,-9,7,7,-6,9,9,-10,2,-3,2,-3,8,10,3,-8,-1,8,-5,-6,-7,3,-6,2,5,-9,7,-5,9,2,7,8,7,7,-2,-2,-8,5,-10,-6,-4,1,8,-6,-1,8,8,-7,-4,6,-7,-5,5,-3,-8,-1,3,-6,8,-7,-10,-7,4,1,8,4,-8,-4,-8,10,-5,8,3,-10,-6,9,3,4,10,5,-3,-3,7,-5,-6,3,-8,-1,7,-3,8,8,-8,1,8,-5,-5,3,8,1,3,-5,-6,-1,6,5,5,-7,6,10,4,-6,-6,2,-6,-7,-8,-9,9,-5,-3,-10,4,3,5], dtype = "int64")#candidate|5045|(416,)|const|int64
const_5046 = relay.const([-1,-7,3,-2,-4,-10,-3,7,1,10,-2,4,10,-7,1,4], dtype = "int64")#candidate|5046|(16,)|const|int64
call_5044 = relay.TupleGetItem(func_394_call(relay.reshape(const_5045.astype('int64'), [2, 13, 16]), relay.reshape(const_5046.astype('int64'), [8, 2]), relay.reshape(const_5045.astype('int64'), [2, 13, 16]), ), 0)
call_5047 = relay.TupleGetItem(func_398_call(relay.reshape(const_5045.astype('int64'), [2, 13, 16]), relay.reshape(const_5046.astype('int64'), [8, 2]), relay.reshape(const_5045.astype('int64'), [2, 13, 16]), ), 0)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
var_5069 = relay.var("var_5069", dtype = "float32", shape = (1008,))#candidate|5069|(1008,)|var|float32
call_5068 = relay.TupleGetItem(func_3188_call(relay.reshape(var_5069.astype('float32'), [12, 7, 12])), 0)
call_5070 = relay.TupleGetItem(func_3190_call(relay.reshape(var_5069.astype('float32'), [12, 7, 12])), 0)
uop_5077 = relay.erf(call_5044.astype('float64')) # shape=(2, 13, 16)
uop_5079 = relay.erf(call_5047.astype('float64')) # shape=(2, 13, 16)
output = relay.Tuple([bop_5028,const_5045,const_5046,call_5068,var_5069,uop_5077,])
output2 = relay.Tuple([bop_5028,const_5045,const_5046,call_5070,var_5069,uop_5079,])
func_5080 = relay.Function([var_5026,var_5027,var_5069,], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
var_5081 = relay.var("var_5081", dtype = "uint8", shape = (3, 4, 15))#candidate|5081|(3, 4, 15)|var|uint8
var_5082 = relay.var("var_5082", dtype = "uint8", shape = (3, 4, 15))#candidate|5082|(3, 4, 15)|var|uint8
var_5083 = relay.var("var_5083", dtype = "float32", shape = (1008,))#candidate|5083|(1008,)|var|float32
output = func_5080(var_5081,var_5082,var_5083,)
func_5084 = relay.Function([var_5081,var_5082,var_5083,], output)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5132 = relay.var("var_5132", dtype = "float64", shape = (3, 14, 5))#candidate|5132|(3, 14, 5)|var|float64
uop_5133 = relay.log2(var_5132.astype('float64')) # shape=(3, 14, 5)
bop_5137 = relay.divide(uop_5133.astype('float32'), relay.reshape(var_5132.astype('float32'), relay.shape_of(uop_5133))) # shape=(3, 14, 5)
uop_5141 = relay.sqrt(var_5132.astype('float32')) # shape=(3, 14, 5)
bop_5145 = relay.left_shift(var_5132.astype('uint64'), relay.reshape(uop_5133.astype('uint64'), relay.shape_of(var_5132))) # shape=(3, 14, 5)
output = relay.Tuple([bop_5137,uop_5141,bop_5145,])
output2 = relay.Tuple([bop_5137,uop_5141,bop_5145,])
func_5161 = relay.Function([var_5132,], output)
mod['func_5161'] = func_5161
mod = relay.transform.InferType()(mod)
var_5162 = relay.var("var_5162", dtype = "float64", shape = (3, 14, 5))#candidate|5162|(3, 14, 5)|var|float64
output = func_5161(var_5162)
func_5163 = relay.Function([var_5162], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5174 = relay.const([[[4.973699,3.494237,7.233606,3.219370,-4.619548,-0.251769,2.206685,6.926225,2.168514,8.105657,5.444009,-1.460056,-2.515900]],[[1.241009,-1.943803,6.260701,1.278653,-8.499161,-8.501895,-4.741756,-2.109062,7.565228,-0.307585,-1.209295,4.560827,3.898560]],[[9.681646,0.789955,1.444135,2.037688,3.652149,-7.867976,9.269927,7.463740,-9.302883,-8.472452,-4.187500,-7.901402,8.599389]],[[0.485325,-6.276546,7.034006,-3.279338,5.331847,5.780652,4.198425,8.491304,9.139131,9.149058,-0.062503,-9.186874,-6.562013]],[[-9.599546,-9.161690,6.100406,0.084284,-6.166772,6.973180,3.071270,-3.639061,-5.287267,1.538945,2.834388,-8.988278,4.712193]],[[-5.899775,-7.468496,6.865709,3.319890,-4.590483,4.016264,-2.907984,-3.369850,-3.367530,-7.720931,-2.227037,-6.791011,4.109374]]], dtype = "float64")#candidate|5174|(6, 1, 13)|const|float64
uop_5175 = relay.rsqrt(const_5174.astype('float64')) # shape=(6, 1, 13)
func_456_call = mod.get_global_var('func_456')
func_459_call = mutated_mod.get_global_var('func_459')
var_5198 = relay.var("var_5198", dtype = "int64", shape = (416,))#candidate|5198|(416,)|var|int64
const_5199 = relay.const([-8,5,-3,2,-5,-5,10,10,5,9,1,-9,-9,-7,10,-1], dtype = "int64")#candidate|5199|(16,)|const|int64
call_5197 = relay.TupleGetItem(func_456_call(relay.reshape(var_5198.astype('int64'), [416,]), relay.reshape(const_5199.astype('int64'), [16,]), ), 3)
call_5200 = relay.TupleGetItem(func_459_call(relay.reshape(var_5198.astype('int64'), [416,]), relay.reshape(const_5199.astype('int64'), [16,]), ), 3)
bop_5202 = relay.less(uop_5175.astype('bool'), relay.reshape(const_5174.astype('bool'), relay.shape_of(uop_5175))) # shape=(6, 1, 13)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
const_5211 = relay.const([-6.318982,-6.239293,4.483890,1.696056,-4.855334,-7.427929,-2.807225,-9.578456,0.118588,-5.791688,-6.527280,9.829454,1.309603,-0.766500,-7.684421,9.170692,-9.476489,-9.488108,6.068491,2.720080,-0.714915,-3.939920,9.416526,3.909045,2.702523,-6.737135,-5.578870,0.252018,5.464151,-5.891649,4.751777,-3.038540,0.768874,-6.573205,-0.433785,7.008297,9.153226,8.262977,-1.927253,-7.896874,-9.468693,6.159162,-0.121331,-6.867404,-1.876638,2.091463,-4.831354,-5.166576,-7.833745,-8.322141,-3.432221,7.743498,0.403187,-4.379488,-1.192790,-8.746021,5.853269,9.310921,-6.772673,6.234185,6.263096,9.091102,-3.721660,3.611671,-4.254417,5.107276,3.899818,-0.591069,9.805566,0.902448,9.656425,-8.653565,7.150939,-0.355896,-3.828151,9.647529,1.398688,8.963418,-0.218175,-0.563954,6.881098,4.746251,3.452193,8.009386,6.959369,-9.140024,-6.717650,1.108531,-7.125765,-2.653763,-5.045867,-7.097402,-4.484801,7.709617,8.797118,9.494819,-2.308607,8.676208,-5.762645,-0.036921,1.824521,2.971507,-2.146132,-9.100088,-8.382242,0.948402,-6.446065,-9.368702,6.461332,9.984654,-0.827745,7.893462,0.744467,-9.749474,-5.930862,4.031213,6.549692,5.374072,-3.470521,-5.008362,-6.555149,1.764561,-3.965665,7.400417,6.533881,-4.499345,9.326000,-7.491131,-7.731378,2.812815,-5.027935,4.523508,6.699715,9.222203,-8.149061,-8.344005,8.473023,3.257216,-0.390947,7.573158,1.689709,1.557375,-7.902687,8.632332,-0.966743,3.420877,-6.627055,-5.569571,3.402930,2.457297,3.083413,5.087154,3.954376,-4.494315,0.493671,9.174584,9.552893,-8.860879,9.454563,9.769369,-7.098211,-8.312772,6.201359,-6.702879,-7.635864,-8.549341,1.049599,-0.969161,-6.830173,-7.215444,-2.570166,-8.294850,-2.379630,2.679265,-0.445193,7.360888,9.252589,9.292986,-7.541752,-3.147571,8.635117,5.791412,-5.920304,8.878500,-6.299755,-7.544427,-1.753949,2.239462,9.091580,-3.001592,9.947238,-4.041119,1.306982,9.384319,2.730550,-4.014746,-6.234617,-2.840293,3.490204,1.408900,1.257715,-1.966480,-5.686373,1.792846,1.459310,5.609546,4.997982,3.767667,-1.768571,4.097494,-3.322817,-7.670926,1.496847,5.152299,4.674404,-9.886389,1.134049,-5.460175,-7.336925,9.212635,7.218849,-7.060668,6.640253,3.776083,-2.274961,2.259183,-8.516049,8.248093,-1.465853,-0.919570,1.812529,6.467630,1.058090,-4.561788,6.736795,6.767575,2.703807,0.356282,-4.280777,-9.981423,4.944247,9.208621,6.789750,1.426135,-4.089047,4.469589,6.368032,-1.421657,-5.293554,-0.764810,-6.992064,-8.648605,-6.222650,-3.791558,-8.617709,9.927292,1.054035,9.047988,-6.117288,-2.617290,-3.319393,-8.296489,-8.389073,8.520807,-2.541654,-6.390807,3.947492,-0.601942,8.764609,-0.974008,4.621931,1.902822,7.230589,8.000347,-4.525872,-8.952022,-5.384208,-2.685076,1.608175,7.934178,7.396587,-5.807654,1.203712,-4.165352,-4.678887,-9.777636,6.166830,-0.881949,2.442352,-0.095654,7.821751,-5.795070,1.636816,9.567550,-3.454303,-3.760423,-1.209646,0.765705,8.428929,-6.949267,-3.455357,8.366155,9.495467,-1.484091,-2.505196,-1.622937,9.488416,4.721353,9.583619,8.108754,9.775701,4.057194,6.936043,3.123855,5.828413,-8.376129,9.463900,4.096551,7.900672,0.193383,-0.336464,3.650409,-3.153809,-4.325164,0.068749,-9.656160,-8.813396,0.243636,-1.182597,-1.243165,-5.192352,5.144130,6.550451,-3.265700,6.236573,-7.979411,6.813896,5.417612,-1.317587,3.349372,-7.625398,-2.520729,-9.322204,-9.695492,1.219072,-8.025841,5.483297,9.742588,-1.883493,5.362384,4.374644,4.079912,9.292955,-3.607982,-7.050886,-6.423130,4.636855,9.667482,-6.520373,-4.129054,2.475975,0.528171,2.709670,4.474096,5.258681,1.528583,-0.054739,8.051394,3.238055,8.829442,-1.155675,-9.589820,-0.915828,6.141258,1.154520,-0.730113,-1.957369,1.232236,-0.099184,4.296881,6.677684,-9.298838,3.434295,-9.075769,-3.889574,-9.995606,2.575518,-1.495237,8.615561,-5.692843,-8.538823,1.646910,-4.984554,-6.276301,0.330575,-5.011028,-6.518622,-1.144513,1.164478,-5.216766,-7.208923,-8.584840,-5.002332,7.654911,-2.277296,-5.043222,7.205862,6.345230,2.625662,-1.392849,5.285457,3.851551,-7.392217,5.902193,-9.097393,4.574614,-2.456498,-6.941612,-1.949471,-5.317110,1.020189,5.704148,-8.250998,3.358027,-8.216843,-4.297867,-3.485121,3.321601,4.887013,-4.605256,5.330475,-3.844813,2.954122,-8.737746,2.990085,-1.770942,4.574483,9.559693,-1.548184,7.585081,-7.515477,-6.336712,-6.646504,1.886027,-2.165178,8.134096,2.733266,-4.376246,2.004673,1.058501,3.645111,8.990734,2.335584,7.690673,1.442208,2.061556,-9.279594,9.523046,9.470130,1.327626,-3.204076,3.386594,-4.844431,7.003061,-5.287904,-7.996673,-9.276567,2.819954,-0.575006,-1.021208,8.035581,-5.311749,0.960487,-6.442033,-5.831877,7.867746,4.477551,9.739206,-2.888077,6.594686,6.211072,-2.878131,9.122834,2.757371,-4.865874,-6.397275,2.042689,-2.402359,-8.608487,-5.684800,-0.216270,8.718094,-2.021510,2.637055,0.484016,-4.096652,2.203069,7.535930,-1.559996,-2.855358,-1.341065,-8.627075,7.902053,-5.835978,-6.194810,9.941211,-4.688028,-8.427065,7.508259,6.071416,-2.331569,7.702499,7.644799,-7.593364,9.966127,-1.358888,0.427293,-5.695627,7.806749,-4.939250,7.512224,-6.366220,4.771414,-5.436822,2.752760,2.243399,6.109359,9.258345,7.624474,-2.102260,-0.787947,-8.913852,-6.994348,3.145663,-7.994013,2.219738,3.910040,6.488133,-2.384758,4.949883,-3.336062,6.530247,7.863574,-6.302654,-0.128460,2.497746,7.209565,3.014615,-8.334841,-2.097280,-1.947612,-5.088785,3.718193,-0.254009,-5.499456,0.416380,2.445284,-7.121715,3.061130,5.543970,-8.280413,2.931656,3.351373,3.312247,7.839028,-6.461804,5.055900,9.355588,-1.372763,-9.675279,6.742156,8.692947,-8.203957,8.953551,-1.209349,8.777575,9.419412,4.941317,4.109394,1.966009,-3.472761,0.380675,-3.171631,-6.375611,-3.266255,9.580068,2.164980,-5.140119,5.185253,1.181966,9.688916,-1.439004,3.512630,7.206380,-1.706335,9.286673,-8.370836,-2.789695,1.161950,5.629195,5.759825,6.096553,-1.767135,-2.930973,4.846042,1.906338,-2.216920,-7.174551,7.791259,8.120568,-1.440892,-7.134406,8.445275,2.032201,-0.828431,-3.949369,-4.886825,-6.343120,-0.791520,-9.389410,-0.639721,-5.340864,9.243463,6.015745,-0.673451,-5.745908,9.265809,7.361560,7.446786,-4.392742,8.727880,9.433887,-6.274150,-3.064339,-4.679229,9.921607,5.621665,7.081092,-1.664403,8.605267,9.937613,1.926729,5.143665,3.533528,3.676788,-8.273606,1.591437,-6.287823,6.498547,-0.157123,7.517970,-3.301068,7.920929,4.666277,-4.199690,-4.340683,-4.696810,8.538847,-4.354563,-0.412844,-0.511737,-1.259880,-9.607690,4.155518,-7.485137,2.803540,6.550556,-7.673211,-2.641320,-8.368960,-3.013719,-4.560159,-9.489954,-7.858681,8.531799,5.802945,7.497907,0.527564,-6.641045,4.253821,-9.053147,9.871413,9.945111,-3.228754,7.077858,-1.072449,3.470120,8.032577,-5.242867,-0.466429,-6.618290,0.212892,1.938591,-3.751949,-1.295545,-6.404993,-0.150023,-9.379749,5.848001,0.065325,-5.542311,8.165683,2.902589,7.154017,-3.716239,0.056555,1.593786,7.149039,3.464371,1.701640,0.073124,-0.314225,9.927886,4.748935,6.792168,5.240342,2.858380,8.124404,2.501346,-9.307254,-1.725026,8.314802,7.336324,-5.371334,-9.202143,-3.934771,-6.816662,8.496570,9.110067,-3.301262,-8.693431,-3.097236,-7.542778,-0.984478,5.648993,-7.530503,-9.584018,3.547918,-0.788245,-4.849899,0.923238,-2.399731,7.454523,8.512122,6.673422,6.610041,-3.880689,2.925429,2.631631,-1.119098,-0.624290,-5.210274,-3.382741,-9.232728,7.890005,3.198934,6.682745,-6.634135,-8.647738,-3.914139,-1.727708,1.486010,5.649370,9.580403,-5.440871,7.214249,-2.263054,8.487628,-4.278913,8.423957,-3.412670,-1.909793,2.589257,-5.032622,5.931574,7.841476,-2.041207,-3.422501,1.565916,-7.805367,0.328015,-3.945118,2.134369,8.517902,-7.464068,4.976395,7.655142,-9.686017,4.534274,-2.912520,6.200194,-5.072799,-8.421047,-8.123109,-6.588509,8.808611,-6.639250,-7.866546,1.029214,4.221766,-4.761741,-1.213111,6.147503,-6.410915,4.353432,9.896441,-1.474270,-1.771851,-6.997625,-6.030941,7.872508,-9.791126,-5.621686,6.592496,-7.548572,7.199401,-1.901938,4.055825,-1.806487,-9.307794,-0.520453,2.628136,3.639982,-1.270536,-2.188897,-3.985789,-2.983473,1.661201,9.236844,4.069144,-7.433777,5.791707,-2.613363,-9.657613,-5.304509,2.164138,-5.029506,-8.258808,-2.010143,2.676314,1.387561,3.807163,-4.767690,-2.438131,8.704829,-2.608631,-5.117863,-6.521579,-8.015316,-1.566010,1.501362,9.924014,-4.795475,8.815397,-7.045039,5.510423,9.075247,-5.599291,0.865989,8.897175,-8.373973,-9.408736,5.966777,4.944912,0.143375,4.311230,6.705949,-9.156365,-8.248682,1.592486,-5.752363,-7.626723,3.689289,-4.748747,-6.471249,8.106658,4.776226,0.906252,0.950168,-7.836929,-4.247115,6.059916,-9.371711,9.145259,-2.608369,-4.227244,4.072767,-4.142017,7.372562,-9.402861,-0.823144,-7.853139,6.341379,2.728711,-8.964851,-7.998775,5.531950,0.778524,1.881778,-3.532670,5.686011,8.569904,2.909787,7.839375,-1.095527,-9.083929,3.911000,-5.178541,3.751355,7.863167,6.030662,-7.324306,-9.631933,-4.437837,0.655684,7.569955,9.287626,2.104877,-4.111696,0.916381,-3.864180,8.779897,-7.312375,9.701518,7.892923,-8.450340,-2.508791,0.733731,-2.500837,-5.685815,-2.244444,-3.493753,-5.368506,2.549827,-9.359538,3.274501,-8.768745,-9.060021,-2.577983,-2.442637,8.695696,-9.637007,-9.911383,-8.838080,-1.123490,-3.944669,-0.296871,-4.827441,-5.912906,0.906377,3.701024,-1.442252,7.239667,-1.272147,-8.290058,-5.086055,6.400437,8.918947,-0.653827,-4.271861,-9.238734,-1.427689,5.569045,-2.261696,-8.792183,-8.015345,-9.804556,4.524626,-8.518263,-0.373502,8.487246,-9.576229,6.193306,-9.903472,8.207281,-2.137943,5.454592,-7.668386,-4.316251,-9.784192,-4.444533,-0.555447,8.590738,-3.907398,3.416344,-2.585078,8.753423,-0.473217,-1.458384,7.107988,2.459208,-9.430274,-1.725602,-0.161061,5.898295,3.241499,6.746962,-7.328313,9.400492,-7.559007,2.408105,7.743718,5.475824,-4.285275,-3.455889,9.380761,1.268794,-5.683682], dtype = "float32")#candidate|5211|(1008,)|const|float32
call_5210 = relay.TupleGetItem(func_3188_call(relay.reshape(const_5211.astype('float32'), [12, 7, 12])), 0)
call_5212 = relay.TupleGetItem(func_3190_call(relay.reshape(const_5211.astype('float32'), [12, 7, 12])), 0)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
call_5218 = relay.TupleGetItem(func_394_call(relay.reshape(var_5198.astype('int64'), [2, 13, 16]), relay.reshape(call_5197.astype('int64'), [8, 2]), relay.reshape(var_5198.astype('int64'), [2, 13, 16]), ), 0)
call_5219 = relay.TupleGetItem(func_398_call(relay.reshape(var_5198.astype('int64'), [2, 13, 16]), relay.reshape(call_5197.astype('int64'), [8, 2]), relay.reshape(var_5198.astype('int64'), [2, 13, 16]), ), 0)
output = relay.Tuple([call_5197,var_5198,const_5199,bop_5202,call_5210,const_5211,call_5218,])
output2 = relay.Tuple([call_5200,var_5198,const_5199,bop_5202,call_5212,const_5211,call_5219,])
func_5243 = relay.Function([var_5198,], output)
mod['func_5243'] = func_5243
mod = relay.transform.InferType()(mod)
var_5244 = relay.var("var_5244", dtype = "int64", shape = (416,))#candidate|5244|(416,)|var|int64
output = func_5243(var_5244)
func_5245 = relay.Function([var_5244], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5260 = relay.var("var_5260", dtype = "int16", shape = ())#candidate|5260|()|var|int16
var_5261 = relay.var("var_5261", dtype = "int16", shape = (3, 10, 1))#candidate|5261|(3, 10, 1)|var|int16
bop_5262 = relay.less_equal(var_5260.astype('bool'), var_5261.astype('bool')) # shape=(3, 10, 1)
func_3710_call = mod.get_global_var('func_3710')
func_3714_call = mutated_mod.get_global_var('func_3714')
var_5267 = relay.var("var_5267", dtype = "int8", shape = (3, 52))#candidate|5267|(3, 52)|var|int8
call_5266 = func_3710_call(relay.reshape(var_5267.astype('int8'), [13, 2, 6]), relay.reshape(var_5267.astype('int8'), [13, 2, 6]), )
call_5268 = func_3710_call(relay.reshape(var_5267.astype('int8'), [13, 2, 6]), relay.reshape(var_5267.astype('int8'), [13, 2, 6]), )
output = relay.Tuple([bop_5262,call_5266,var_5267,])
output2 = relay.Tuple([bop_5262,call_5268,var_5267,])
func_5275 = relay.Function([var_5260,var_5261,var_5267,], output)
mod['func_5275'] = func_5275
mod = relay.transform.InferType()(mod)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5275_call = mutated_mod.get_global_var('func_5275')
var_5277 = relay.var("var_5277", dtype = "int16", shape = ())#candidate|5277|()|var|int16
var_5278 = relay.var("var_5278", dtype = "int16", shape = (3, 10, 1))#candidate|5278|(3, 10, 1)|var|int16
var_5279 = relay.var("var_5279", dtype = "int8", shape = (3, 52))#candidate|5279|(3, 52)|var|int8
call_5276 = func_5275_call(var_5277,var_5278,var_5279,)
output = call_5276
func_5280 = relay.Function([var_5277,var_5278,var_5279,], output)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5589 = relay.const([[[2.028086,2.435609,-2.987095,7.256880,-1.216718,-4.484591,5.479434,-9.508707,-4.829085,-1.962599,-8.654807],[-1.685103,8.517912,-8.585626,-9.860101,-6.189466,-3.146638,0.565934,6.576035,-0.125018,4.204266,-4.880481],[1.909309,-9.303778,-9.934715,6.314032,3.234365,-5.273502,5.944462,-8.353069,-8.028999,4.516418,-2.064340],[-5.241744,-2.536805,5.357524,3.995057,-0.791729,-6.793688,5.347349,2.371582,6.255789,-1.240054,9.074758],[3.029665,1.800868,-3.173866,-3.652662,-5.839567,-4.389992,5.234704,-1.641652,2.846461,2.578615,4.501875],[-0.112542,6.157147,-2.316390,-3.132722,1.545017,5.140987,9.446047,-4.884352,-9.819181,-8.536166,1.768489],[1.563688,4.176453,-3.589527,-2.809523,7.221987,-7.688654,5.345124,-2.296673,-8.237985,2.703540,8.934243],[0.693397,-0.075840,-6.010143,-7.215203,-8.621901,5.105976,-2.140619,1.950242,6.970707,-0.696291,6.993109],[-9.755905,3.911217,-3.361856,-6.981240,3.929270,1.291191,-4.311302,9.162852,4.205232,-9.764445,1.705578],[-9.150528,7.318812,8.294591,1.588094,3.581025,-7.601291,-0.556179,6.175511,-6.448556,-6.079278,-6.889308],[9.724754,6.561978,-6.840378,2.470152,-1.218550,-6.276208,-6.566832,1.562522,-2.333335,3.295980,7.795458],[5.178131,5.288805,-5.991749,7.911814,-8.660175,-0.738053,0.281248,5.800477,-4.033427,-5.794356,1.394675],[-8.668513,-3.150815,-6.844488,0.053380,7.822821,-2.200779,7.222886,-4.489381,-9.119681,6.898744,-2.687322],[2.391685,-2.301370,-5.475895,-7.603250,8.677419,-6.350099,2.850908,4.873620,9.128094,-2.907931,4.163027],[-5.262079,-6.093351,-5.272646,2.600777,4.810949,-1.476811,-7.739540,-3.324001,3.557974,4.957895,-1.334203]]], dtype = "float64")#candidate|5589|(1, 15, 11)|const|float64
uop_5590 = relay.sqrt(const_5589.astype('float64')) # shape=(1, 15, 11)
func_3300_call = mod.get_global_var('func_3300')
func_3302_call = mutated_mod.get_global_var('func_3302')
const_5595 = relay.const([[-1,10,4,4,8,-9,-5,6,10,-8,-2,3,-4,8,2,-10,6,2,7,-1,10,-10,4,4,1,-1,10,3,-10,10,6,-8,9,10,8,2,3,2,9,1,7,-5,3,-3,-8,8,6,-4,-6,2,8,-1,-8,-6,10,-9,9,-5,3,-9,4,4,-3,-4,5,-4,-2,1,9,-8,-7,7,-2,-10,2,-5,7,8,-10,-3,-8,7,4,-9,5,2,-8,-10,1,7,-9,2,4,8,-2,-8,-5,-10,2,2,9,-1,-2,7,-1,9,-9,-6,10,-6,2,-1,-8,8,10,-9,-3,-6,-3,10,-9,2,7,10,1,-10,-9,-9,-1,7,6,-2,8,4,3,5,-3,10,4,-9,-4,-7,-9,-10,-5,4,2,-8,4,-2,-8,-8,6,2,6,7,10,4,2,2,8,-7,-9,-3,-1,-9,3,-1,-5,-1,4,-2,-1,6,8,-9,1,1,2,-5,2,-3,1,-6,-7,-9,2,-7,-8,6,-10,-6,-2,-5,2,9,-3,-9,-6,-1,9,-4,-1,-5,6,9,-8,-1,2,7,5,6,-8,-4,-9,5,-5,2,-2,7,10,-5,10,1,1,6,3,6,8,-4,-5,6,10,7,6,-1,1,7,2,-3,-5,1,-10,7,-6,-6,10,2,1,3,5,-6,-9,-8,-10,-4,-10,2,3,-10,2,10,8,-3,1,-6,7,-3,-6,7,-3,-2,-7,5,-6,1,-10,10,-2,7,-9,8,-7,-4,3,1,-4,9,9,-3,8,3,-4,-6,-7,8,5,4,8,-7,7,6,-2,5,10,8,-2,6,7,-2,4,-10,7,-1,2,-7,5,-2,-2,-10,-5,-10,1,-4,-9,-3,-4,2,-7,-8,2,-7,1,-7,6,-3,6,-9,1,-5,10,5,-1,7,3,-6,-1,3,-2,-4,8,1,-3,2,8,4,5,3,-8,5,-8,-6,6,10,2,8,1,5,-4,8,4,9,3,9,-2,3,-5,-8,8,1,-4,-9,10,1,-3,-7,2,8,8,9,2,-2,10,-10,-10,10,1,8,-5,7,-7,5,-10,9,2,8,1,-3,-9,-3,5,2,-3,7,-9,-8,-9,-8,-7,7,-4,-5,6,-7,-2,-6,4,-3,6,6,4,-4,6,2,-8,3,5,-8,-8,7,-5,-7,1,-7,7,4,7,4,9,-7,8,-10,7,-5,-3,5,7,9,9,7,-9,-9,9,8,-3,7,-4,-4,3,6,-4,-5,2,-9,10,-8,6,-5,-3,7,7,-7,8,-4,9,-8,10,5,7,-4,9,8,-1,4,-6,-2,-2,-6,8,-3,9,-1,-5,10,10,1,-5,-9,-9,-2,4,8,3,-8,3,10,-1,10,7,7,3,9,6,6,-10,10,4,-10,3,8,9,5,-8,5,-4,-5,10,-9,-1,-2,5,3,-2,-6,2,9,3,3,-1,-9,1,-4,-5,7,-7,-4,-3,-4,3,9,6,-1,6,-10,-10,-1,-2,-4,-7,-2,-2,-9,-7,-9,2,8,-10,9,-2,-2,-10,5,-10,-9,-10,1,9,-4,-2,-9,-4,6,-7,-9,-6,1,-4,9,3,-10,1,2,3,6,-2,-4,3,2,7,-9,2,10,-6,1,7,2,-7,7,4,-9,-2,5,-5,5,8,-4,4,8,2,-7,5,8,6,3,-3,-8,-5,8,8,9,-7,-6,-6,-1,8,-1,9,-4,-7,7,-9,-4,-6,2,8,-1,6,-8,-4,5,6,4,5,2,-4,3,4,8,2,5,5,4,3,-6,-10,-8,6,4,1,5,-7,-1,-6,2,-8,5,-2,5,-3,-4,-1,-1,-6,8,5,3,2,2,2,3,2,5,8,-1,2,-6,-10,2,6,-3,5,-2,1,-4,-9,-5,4,-8,10,7,-7,-7,-2,2,8,10,3,-10],[-5,9,1,8,2,2,-5,5,2,10,-8,-5,-10,-2,4,-9,-6,4,10,7,-7,-7,-7,-6,-4,-4,-9,-1,-1,-1,-4,-5,-9,-2,-2,3,5,4,2,-1,-6,-9,2,-5,-4,10,-9,10,6,8,-8,-7,-9,-7,1,-7,2,6,-7,-9,-9,9,-3,-7,3,-7,4,-6,-7,6,-10,8,1,8,-5,9,5,2,-8,-9,4,-4,3,3,-4,9,2,-7,-1,10,-1,10,8,-6,-2,-7,-4,-3,10,9,7,-7,-5,-1,-9,-10,10,6,1,4,10,10,-4,-5,10,-10,1,-5,2,-3,-7,-3,3,6,-5,9,-4,1,3,4,-9,-8,2,5,9,6,10,-6,-9,1,5,-9,-1,6,-6,5,5,-6,-9,10,10,8,5,7,8,-8,-7,1,9,2,-8,-3,-10,-9,-1,-9,-4,10,-10,-3,-4,1,-10,-1,-8,6,-10,10,-9,1,5,-10,-8,8,9,8,4,7,10,5,-1,-5,-2,-10,-3,3,-2,8,-5,-8,8,10,-3,-6,-4,-2,-1,-5,1,6,-8,-1,1,-8,6,1,-2,-5,-7,-8,1,-8,-7,5,-2,-2,-9,-1,-4,9,7,-5,-2,-3,-1,-1,-9,7,6,5,-5,8,-2,6,-8,-8,-6,3,3,-8,5,9,10,1,9,4,3,-8,1,-2,1,-3,3,7,-9,2,-2,-1,8,8,8,-1,-4,-7,-7,1,9,6,-1,9,6,6,-6,-2,-9,-2,-2,9,6,-8,-4,-10,6,-6,9,-7,-9,-2,-9,9,-5,-6,-8,3,-10,-6,2,9,1,5,5,2,-4,-10,1,1,-4,2,-2,5,-8,6,6,9,5,7,5,-5,-6,-2,-4,-10,9,-10,9,-3,-6,-6,-8,-2,-9,2,-8,3,-2,10,7,6,-4,-9,4,1,-2,-4,3,3,5,-6,-2,7,-5,10,9,-9,2,7,9,6,4,-10,-6,-9,-8,-3,5,6,7,1,4,8,-8,-2,2,8,9,-10,-3,-7,-5,3,2,-9,5,-6,2,5,-8,10,-6,-5,8,-4,-6,2,-3,1,-6,6,-4,2,-8,-9,5,-8,8,8,9,-7,-4,6,5,5,-2,3,-5,4,-2,-10,10,10,9,4,-1,-5,-9,4,-2,7,2,-10,7,-8,6,-7,-6,-6,4,-5,8,-2,2,-5,5,-10,2,-3,5,9,1,-8,1,-4,-4,2,10,1,7,8,-7,-10,8,9,5,5,-2,-5,-6,1,-7,-4,-6,10,-2,-7,7,-10,-1,8,-7,-3,7,5,6,-5,-7,-1,5,-6,2,-8,1,5,8,-7,8,5,8,1,4,-7,5,3,1,-9,-5,1,-4,7,2,7,3,-7,2,5,6,-8,-1,-2,-2,-5,-7,-4,-5,-5,6,10,5,-2,-7,-2,10,3,1,-6,-8,2,9,10,-7,-4,-8,2,-4,-10,-3,4,-4,-5,-4,-10,1,-10,7,4,-5,-9,-3,-6,-7,-7,-3,-4,-10,2,1,8,5,2,-8,-10,-7,5,9,-8,-10,-7,-6,9,-1,9,6,-3,5,-5,-6,-7,-3,4,4,10,-6,6,-9,9,-8,3,-8,-5,6,10,-6,-4,7,-2,-1,-6,1,-3,9,-2,2,2,-4,5,-8,1,-9,-4,-4,-9,7,3,9,10,-8,8,-10,10,-9,3,9,3,10,6,2,-8,-3,8,-9,-2,3,-4,10,6,-10,-7,4,9,-7,-7,-2,-9,7,7,-8,-10,-8,-3,-10,-8,-9,-9,4,6,-3,-2,7,10,-1,-8,7,-1,4,-3,-4,-5,7,5,-2,-5,-3,7,-8,-3,-5,7,1,-7,1,-3,3,7,2,3,4,-8,-5,-6,4,-2,-2,-1,7,10,-9,5,1,-4,-6,8,5,7,-10,4,2,-3,5,7]], dtype = "int64")#candidate|5595|(2, 728)|const|int64
call_5594 = relay.TupleGetItem(func_3300_call(relay.reshape(const_5595.astype('int64'), [7, 13, 16])), 3)
call_5596 = relay.TupleGetItem(func_3302_call(relay.reshape(const_5595.astype('int64'), [7, 13, 16])), 3)
output = relay.Tuple([uop_5590,call_5594,const_5595,])
output2 = relay.Tuple([uop_5590,call_5596,const_5595,])
func_5627 = relay.Function([], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
output = func_5627()
func_5628 = relay.Function([], output)
mutated_mod['func_5628'] = func_5628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mod.get_global_var('func_5627')
func_5628_call = mutated_mod.get_global_var('func_5628')
call_5655 = relay.TupleGetItem(func_5627_call(), 1)
call_5656 = relay.TupleGetItem(func_5628_call(), 1)
output = relay.Tuple([call_5655,])
output2 = relay.Tuple([call_5656,])
func_5663 = relay.Function([], output)
mod['func_5663'] = func_5663
mod = relay.transform.InferType()(mod)
output = func_5663()
func_5664 = relay.Function([], output)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5665 = relay.TupleGetItem(func_5663_call(), 0)
call_5666 = relay.TupleGetItem(func_5664_call(), 0)
func_3300_call = mod.get_global_var('func_3300')
func_3302_call = mutated_mod.get_global_var('func_3302')
const_5668 = relay.const([[-4,3,6,9,-5,-2,-10,3,-4,-8,7,1,7,-10,5,-6,-2,5,2,-8,9,-8,-3,-10,-2,-3,-8,-2,10,6,5,4,-10,5,-5,8,7,2,-9,-8,1,-9,8,8,3,-3,5,-6,-8,-8,6,-4,-2,-4,9,9,3,-2,9,-1,3,1,-3,4,9,-2,-8,9,-5,10,-5,5,-8,1,7,4,-7,-10,3,10,6,9,10,-5,-1,8,-5,-3,10,-4,7,-6,2,-5,-10,9,8,-3,5,5,2,-3,-8,3,2,4,-7,4,-6,6,-5,-3,2,5,-3,-7,-4,5,-7,-10,8,-10,4,-4,-4,-8,7,2,-9,-1,7,-9,-6,-5,-3,-4,10,-5,8,7,-2,-9,-8,10,-9,-10,-9,-9,3,10,10,-8,7,-7,5,-5,10,-9,6,-6,2,-1,-2,8,4,-3,3,7,7,5,1,-2,-5,-1,-2,-7,-10,-5,-1,-2,-2,-1,8,-5,3,8,1,7,3,-6,-3,-7,-3,7,-7,1,4,6,-2,-7,-2,-9,7,6,3,4,7,9,6,-6,-7,-2,-10,2,-1,7,6,-4,-3,4,6,-2,-1,-5,-8,-10,9,-5,2,1,8,7,-5,10,3,3,-4,-2,-5,2,9,8,3,9,3,-1,9,9,-8,1,5,-1,-9,3,-10,-7,6,1,1,9,1,8,-7,-3,8,-6,-9,3,10,10,-3,-2,-4,-10,-2,-8,-6,-4,-5,-8,2,5,1,-9,-4,-4,6,5,1,-5,-2,-8,1,-1,-9,-7,-3,4,10,8,2,2,9,10,-3,-3,-7,-5,-10,-5,7,2,6,-5,-9,4,-6,1,-6,-3,3,-5,-6,-1,9,7,-9,8,-7,4,8,9,-4,7,-1,-10,8,-7,8,-3,5,4,9,1,-7,-1,-5,-6,3,1,-8,8,-4,10,-4,-10,-3,3,8,-7,1,7,2,-4,-9,-7,-4,2,-2,2,7,5,8,-1,3,9,-10,9,10,-5,8,7,-8,4,1,-8,-9,10,2,-2,-1,-1,7,-1,5,9,9,-7,-3,1,-6,4,-1,-3,-6,-9,7,-8,-2,-3,-6,-10,8,-5,10,-9,-2,-2,-9,-7,-1,4,8,10,10,7,-8,2,-8,-1,1,-5,-2,8,-1,8,3,7,3,-1,5,-10,9,-2,-1,5,10,-6,6,-4,3,10,4,-7,-9,10,10,-8,2,-6,-1,-6,3,-3,-8,-8,1,-6,5,9,-4,7,-9,-3,-3,5,-1,6,2,3,-8,-2,-6,5,-10,5,-3,7,7,6,-8,5,1,5,1,-7,8,-10,-6,8,-9,-1,7,-8,-8,4,5,-7,-1,2,-8,-2,6,3,-9,1,5,-4,-10,7,-7,5,-4,-8,3,-8,-9,-9,4,-1,4,5,-4,2,-1,3,1,10,10,-10,-10,-6,-9,-5,9,-10,-8,2,3,-5,2,4,5,1,-6,8,9,4,-1,3,-7,-4,-7,6,-10,-6,-10,-8,-6,10,-7,-7,-4,-6,-4,-8,-3,7,-9,-10,5,-1,-6,-1,5,-6,2,3,-6,5,-10,-10,-7,3,-9,5,8,-8,7,9,-3,-6,-6,-4,-10,2,-4,-2,-7,-5,9,10,-9,4,-10,-6,5,9,-3,-6,4,4,8,6,-3,2,2,1,-10,7,-7,-4,-7,4,8,6,7,7,-5,1,-4,4,-4,-9,-10,-6,-9,9,-5,-9,-4,2,-2,5,2,7,-8,5,-6,6,-3,2,3,10,-6,-9,-2,10,-2,3,-10,1,5,-9,2,-8,-8,-7,-2,8,-5,-8,10,3,2,7,10,9,-3,6,-2,8,-5,-10,1,-6,-5,-5,10,-8,-6,4,4,-3,2,2,-4,-3,-7,-9,-10,-7,9,1,-10,4,5,-3,-1,-6,8,6,-10,2,-3,8,-5,-8],[4,6,10,1,-7,-4,3,-3,10,4,10,7,-6,-5,-7,5,-4,-7,-8,2,5,6,-8,8,8,-5,-7,-2,-7,-3,-1,8,-9,10,3,5,-7,-5,-9,2,6,-8,10,-7,-6,-1,-1,2,4,-9,3,-5,6,5,7,-5,-5,-8,-10,3,-7,2,-5,-8,-6,8,-3,-2,-6,-4,-6,-6,9,-9,-8,6,-9,3,-5,-7,-10,-2,1,-1,3,-10,2,2,-9,-2,-3,4,7,8,-10,2,-1,4,10,-6,9,-2,1,2,-2,9,-3,9,-2,-1,-3,4,-9,3,2,-10,7,-3,5,8,-10,-5,2,2,-1,8,-7,-8,-1,-4,2,5,6,-6,3,-8,-3,-7,-7,6,-3,-3,-7,5,-2,2,-2,1,-4,1,-3,2,2,-8,10,8,-10,-4,-2,4,9,-7,-2,-1,7,4,10,5,-5,2,9,-9,-1,-6,1,6,-6,2,-1,-6,6,-8,6,-8,-6,-6,-10,-2,7,5,-7,-9,4,-5,-6,-5,1,-9,-7,-9,7,8,2,2,9,9,-8,1,2,9,6,-2,-7,7,-8,-7,-4,6,-6,-7,-4,10,-7,-6,-8,-8,-8,3,-1,-1,9,-8,4,10,2,4,-6,-10,5,1,-10,10,-9,-5,-5,9,-6,-8,-1,-2,-10,1,-1,6,-6,1,-5,-3,-6,-5,7,-7,-3,7,7,-6,-6,-10,7,-2,2,8,4,2,-2,-3,2,-3,-6,8,-10,10,-3,-10,6,-3,7,8,5,-3,8,5,7,3,-10,9,-7,-5,-9,1,9,6,7,7,-3,-8,-8,10,-3,-9,6,-5,6,5,7,1,-2,-9,-10,-1,-9,-5,-2,-10,-2,9,8,-2,6,-2,-3,-10,-9,-2,-7,3,1,-1,-4,7,-4,3,4,8,3,4,4,-1,-3,5,7,6,-7,9,9,-7,-4,-7,-8,-8,-9,-6,-6,-8,-9,1,-1,2,-5,9,-8,-9,7,-1,-2,-5,-3,4,8,-2,-4,-3,-1,3,7,-10,-10,-9,6,1,1,9,-7,-7,6,1,2,7,10,-7,-3,4,-9,-10,3,3,9,7,-8,2,4,3,9,7,-1,-10,5,-10,7,9,5,-1,5,-10,-4,6,8,-4,-1,-10,-9,-1,-4,-9,2,8,-10,-2,9,-10,6,3,-5,-5,-9,-1,5,1,2,8,-7,-1,-7,4,7,-1,1,-1,10,-5,8,7,5,-3,-7,-2,9,-3,-8,-2,-2,10,-8,10,-6,9,10,-9,4,-3,-3,7,-10,-8,-9,5,-5,5,-5,-3,1,-5,8,7,6,-4,6,-2,-2,-7,3,2,-7,3,-3,5,10,4,-5,-1,10,-1,7,-5,6,-9,3,8,8,4,-10,3,2,-10,-8,-10,-4,-7,6,9,-1,2,-10,6,2,9,-10,1,-10,10,10,8,-3,-7,6,-1,-4,3,-3,-2,-8,6,3,-1,-8,3,-1,6,-8,10,-8,-3,6,-6,4,6,9,9,9,5,10,-9,-10,2,-7,2,-7,-8,2,4,2,-7,9,-2,-7,-10,-6,-8,6,-6,4,8,4,4,10,3,5,-4,7,7,-5,-3,-7,-7,2,-4,3,10,10,5,-2,-3,-8,5,4,-1,10,10,-6,-10,2,7,-8,5,10,7,8,-1,8,2,-10,3,-9,-7,9,5,1,-9,8,-6,-3,2,-4,6,1,-6,-10,-8,1,4,-3,3,3,-3,-5,-1,4,10,8,-2,3,-1,8,-4,7,10,8,-3,5,-4,-7,-1,-10,-6,4,-1,-5,-3,-2,-1,6,-8,-7,7,-7,4,-8,4,3,-8,10,-7,-2,10,-7,2,2,-6,-10,-3,-4,2,2,-9,6,6,-1,-10,3,-8,1,-2,1,-4,-2,8,3,-7,-6,2,6,-7,-10,9,-9,2,6,-4]], dtype = "int64")#candidate|5668|(2, 728)|const|int64
call_5667 = relay.TupleGetItem(func_3300_call(relay.reshape(const_5668.astype('int64'), [7, 13, 16])), 3)
call_5669 = relay.TupleGetItem(func_3302_call(relay.reshape(const_5668.astype('int64'), [7, 13, 16])), 3)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_5683 = relay.var("var_5683", dtype = "float32", shape = (6, 42))#candidate|5683|(6, 42)|var|float32
call_5682 = func_1958_call(relay.reshape(var_5683.astype('float32'), [9, 4, 7]))
call_5684 = func_1958_call(relay.reshape(var_5683.astype('float32'), [9, 4, 7]))
uop_5685 = relay.atan(var_5683.astype('float64')) # shape=(6, 42)
uop_5688 = relay.log10(uop_5685.astype('float32')) # shape=(6, 42)
output = relay.Tuple([call_5665,call_5667,const_5668,call_5682,uop_5688,])
output2 = relay.Tuple([call_5666,call_5669,const_5668,call_5684,uop_5688,])
func_5696 = relay.Function([var_5683,], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5697 = relay.var("var_5697", dtype = "float32", shape = (6, 42))#candidate|5697|(6, 42)|var|float32
func_5696_call = mutated_mod.get_global_var('func_5696')
call_5698 = func_5696_call(var_5697)
output = call_5698
func_5699 = relay.Function([var_5697], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5716 = relay.TupleGetItem(func_5663_call(), 0)
call_5717 = relay.TupleGetItem(func_5664_call(), 0)
func_2788_call = mod.get_global_var('func_2788')
func_2792_call = mutated_mod.get_global_var('func_2792')
const_5721 = relay.const(1, dtype = "int64")#candidate|5721|()|const|int64
var_5722 = relay.var("var_5722", dtype = "int64", shape = (528,))#candidate|5722|(528,)|var|int64
call_5720 = func_2788_call(relay.reshape(const_5721.astype('int64'), []), relay.reshape(var_5722.astype('int64'), [6, 11, 8]), )
call_5723 = func_2788_call(relay.reshape(const_5721.astype('int64'), []), relay.reshape(var_5722.astype('int64'), [6, 11, 8]), )
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_5727 = relay.var("var_5727", dtype = "int64", shape = (16,))#candidate|5727|(16,)|var|int64
var_5728 = relay.var("var_5728", dtype = "int64", shape = (48,))#candidate|5728|(48,)|var|int64
call_5726 = func_188_call(relay.reshape(var_5727.astype('int64'), [2, 8, 1]), relay.reshape(var_5728.astype('int64'), [2, 8, 3]), )
call_5729 = func_188_call(relay.reshape(var_5727.astype('int64'), [2, 8, 1]), relay.reshape(var_5728.astype('int64'), [2, 8, 3]), )
func_3710_call = mod.get_global_var('func_3710')
func_3714_call = mutated_mod.get_global_var('func_3714')
const_5741 = relay.const([-2,-2,-2,9,-4,4,6,-1,3,-2,9,2,-9,-3,-5,-3,-7,4,-5,-7,2,9,5,1,-6,-6,-1,2,7,2,8,-10,10,4,9,-2,-5,10,-3,-9,6,-3,6,-8,-3,-6,8,5,4,-1,3,5,-6,-1,10,7,-7,-6,8,-5,-6,1,1,-2,-7,7,8,-9,8,5,-2,-7,-3,-2,-7,-1,10,-7,-1,-3,3,10,3,-6,-1,-1,3,2,1,6,-10,10,-2,8,-7,-2,2,-10,3,-6,-8,7,-6,-7,10,-4,-4,-10,-1,-10,1,9,-3,-8,6,1,2,-7,-7,-7,10,7,6,-10,6,-7,1,-8,-4,3,2,-4,-5,5,5,-9,1,-1,-3,-6,-3,6,7,-10,-2,-3,-10,9,9,-7,3,-1,2,-3,-5,6], dtype = "int8")#candidate|5741|(156,)|const|int8
call_5740 = func_3710_call(relay.reshape(const_5741.astype('int8'), [13, 2, 6]), relay.reshape(const_5741.astype('int8'), [13, 2, 6]), )
call_5742 = func_3710_call(relay.reshape(const_5741.astype('int8'), [13, 2, 6]), relay.reshape(const_5741.astype('int8'), [13, 2, 6]), )
output = relay.Tuple([call_5716,call_5720,const_5721,var_5722,call_5726,var_5727,var_5728,call_5740,const_5741,])
output2 = relay.Tuple([call_5717,call_5723,const_5721,var_5722,call_5729,var_5727,var_5728,call_5742,const_5741,])
func_5745 = relay.Function([var_5722,var_5727,var_5728,], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
var_5746 = relay.var("var_5746", dtype = "int64", shape = (528,))#candidate|5746|(528,)|var|int64
var_5747 = relay.var("var_5747", dtype = "int64", shape = (16,))#candidate|5747|(16,)|var|int64
var_5748 = relay.var("var_5748", dtype = "int64", shape = (48,))#candidate|5748|(48,)|var|int64
output = func_5745(var_5746,var_5747,var_5748,)
func_5749 = relay.Function([var_5746,var_5747,var_5748,], output)
mutated_mod['func_5749'] = func_5749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5778 = relay.TupleGetItem(func_5663_call(), 0)
call_5779 = relay.TupleGetItem(func_5664_call(), 0)
output = relay.Tuple([call_5778,])
output2 = relay.Tuple([call_5779,])
func_5781 = relay.Function([], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
output = func_5781()
func_5782 = relay.Function([], output)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5800 = relay.TupleGetItem(func_5663_call(), 0)
call_5801 = relay.TupleGetItem(func_5664_call(), 0)
output = relay.Tuple([call_5800,])
output2 = relay.Tuple([call_5801,])
func_5802 = relay.Function([], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
output = func_5802()
func_5803 = relay.Function([], output)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5833 = relay.TupleGetItem(func_5663_call(), 0)
call_5834 = relay.TupleGetItem(func_5664_call(), 0)
output = call_5833
output2 = call_5834
func_5837 = relay.Function([], output)
mod['func_5837'] = func_5837
mod = relay.transform.InferType()(mod)
mutated_mod['func_5837'] = func_5837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5837_call = mutated_mod.get_global_var('func_5837')
call_5838 = func_5837_call()
output = call_5838
func_5839 = relay.Function([], output)
mutated_mod['func_5839'] = func_5839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5871 = relay.var("var_5871", dtype = "float32", shape = (1, 7, 16))#candidate|5871|(1, 7, 16)|var|float32
uop_5872 = relay.sigmoid(var_5871.astype('float32')) # shape=(1, 7, 16)
output = uop_5872
output2 = uop_5872
func_5884 = relay.Function([var_5871,], output)
mod['func_5884'] = func_5884
mod = relay.transform.InferType()(mod)
var_5885 = relay.var("var_5885", dtype = "float32", shape = (1, 7, 16))#candidate|5885|(1, 7, 16)|var|float32
output = func_5884(var_5885)
func_5886 = relay.Function([var_5885], output)
mutated_mod['func_5886'] = func_5886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5890 = relay.TupleGetItem(func_5663_call(), 0)
call_5891 = relay.TupleGetItem(func_5664_call(), 0)
func_5275_call = mod.get_global_var('func_5275')
func_5280_call = mutated_mod.get_global_var('func_5280')
const_5913 = relay.const(-3, dtype = "int16")#candidate|5913|()|const|int16
var_5914 = relay.var("var_5914", dtype = "int16", shape = (30,))#candidate|5914|(30,)|var|int16
const_5915 = relay.const([-6,-7,1,-10,-6,-6,5,-8,4,-6,-7,1,10,4,10,6,-6,-1,-2,-9,-4,-5,-10,-7,8,-3,-6,8,-8,8,2,6,-6,3,1,-6,9,-6,-2,-5,-8,7,3,-4,10,3,-3,-7,9,6,-4,-5,-4,3,-7,8,7,1,-1,-2,-6,-4,-5,7,3,-4,-6,1,3,7,4,-5,-1,10,-5,6,1,-2,10,-2,5,-1,6,-2,-6,9,6,-1,-4,10,7,-1,-5,5,-2,-10,3,-7,-1,-8,-8,7,2,-1,-10,6,-9,4,-7,1,5,6,1,5,-2,1,1,-4,-7,-1,-7,4,3,-2,-8,2,2,-9,1,7,8,-1,-5,2,-1,-10,-10,-4,4,-5,-9,-4,-5,6,-7,-9,-8,-4,7,-8,10,5,-2,-5,7,7], dtype = "int8")#candidate|5915|(156,)|const|int8
call_5912 = relay.TupleGetItem(func_5275_call(relay.reshape(const_5913.astype('int16'), []), relay.reshape(var_5914.astype('int16'), [3, 10, 1]), relay.reshape(const_5915.astype('int8'), [3, 52]), ), 2)
call_5916 = relay.TupleGetItem(func_5280_call(relay.reshape(const_5913.astype('int16'), []), relay.reshape(var_5914.astype('int16'), [3, 10, 1]), relay.reshape(const_5915.astype('int8'), [3, 52]), ), 2)
output = relay.Tuple([call_5890,call_5912,const_5913,var_5914,const_5915,])
output2 = relay.Tuple([call_5891,call_5916,const_5913,var_5914,const_5915,])
func_5937 = relay.Function([var_5914,], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5938 = relay.var("var_5938", dtype = "int16", shape = (30,))#candidate|5938|(30,)|var|int16
func_5937_call = mutated_mod.get_global_var('func_5937')
call_5939 = func_5937_call(var_5938)
output = call_5939
func_5940 = relay.Function([var_5938], output)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5837_call = mod.get_global_var('func_5837')
func_5839_call = mutated_mod.get_global_var('func_5839')
call_5945 = func_5837_call()
call_5946 = func_5837_call()
output = call_5945
output2 = call_5946
func_5954 = relay.Function([], output)
mod['func_5954'] = func_5954
mod = relay.transform.InferType()(mod)
output = func_5954()
func_5955 = relay.Function([], output)
mutated_mod['func_5955'] = func_5955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_5977 = relay.TupleGetItem(func_5781_call(), 0)
call_5978 = relay.TupleGetItem(func_5782_call(), 0)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_5988 = relay.var("var_5988", dtype = "float32", shape = (252,))#candidate|5988|(252,)|var|float32
call_5987 = func_1958_call(relay.reshape(var_5988.astype('float32'), [9, 4, 7]))
call_5989 = func_1958_call(relay.reshape(var_5988.astype('float32'), [9, 4, 7]))
output = relay.Tuple([call_5977,call_5987,var_5988,])
output2 = relay.Tuple([call_5978,call_5989,var_5988,])
func_5995 = relay.Function([var_5988,], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5996 = relay.var("var_5996", dtype = "float32", shape = (252,))#candidate|5996|(252,)|var|float32
func_5995_call = mutated_mod.get_global_var('func_5995')
call_5997 = func_5995_call(var_5996)
output = call_5997
func_5998 = relay.Function([var_5996], output)
mutated_mod['func_5998'] = func_5998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6065 = relay.TupleGetItem(func_5663_call(), 0)
call_6066 = relay.TupleGetItem(func_5664_call(), 0)
func_5937_call = mod.get_global_var('func_5937')
func_5940_call = mutated_mod.get_global_var('func_5940')
var_6088 = relay.var("var_6088", dtype = "int16", shape = (30,))#candidate|6088|(30,)|var|int16
call_6087 = relay.TupleGetItem(func_5937_call(relay.reshape(var_6088.astype('int16'), [30,])), 2)
call_6089 = relay.TupleGetItem(func_5940_call(relay.reshape(var_6088.astype('int16'), [30,])), 2)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6099 = relay.TupleGetItem(func_5663_call(), 0)
call_6100 = relay.TupleGetItem(func_5664_call(), 0)
func_5080_call = mod.get_global_var('func_5080')
func_5084_call = mutated_mod.get_global_var('func_5084')
var_6104 = relay.var("var_6104", dtype = "uint8", shape = (180,))#candidate|6104|(180,)|var|uint8
var_6105 = relay.var("var_6105", dtype = "float32", shape = (504, 2))#candidate|6105|(504, 2)|var|float32
call_6103 = relay.TupleGetItem(func_5080_call(relay.reshape(var_6104.astype('uint8'), [3, 4, 15]), relay.reshape(var_6104.astype('uint8'), [3, 4, 15]), relay.reshape(var_6105.astype('float32'), [1008,]), ), 5)
call_6106 = relay.TupleGetItem(func_5084_call(relay.reshape(var_6104.astype('uint8'), [3, 4, 15]), relay.reshape(var_6104.astype('uint8'), [3, 4, 15]), relay.reshape(var_6105.astype('float32'), [1008,]), ), 5)
output = relay.Tuple([call_6065,call_6087,var_6088,call_6099,call_6103,var_6104,var_6105,])
output2 = relay.Tuple([call_6066,call_6089,var_6088,call_6100,call_6106,var_6104,var_6105,])
func_6110 = relay.Function([var_6088,var_6104,var_6105,], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mutated_mod.get_global_var('func_6110')
var_6112 = relay.var("var_6112", dtype = "int16", shape = (30,))#candidate|6112|(30,)|var|int16
var_6113 = relay.var("var_6113", dtype = "uint8", shape = (180,))#candidate|6113|(180,)|var|uint8
var_6114 = relay.var("var_6114", dtype = "float32", shape = (504, 2))#candidate|6114|(504, 2)|var|float32
call_6111 = func_6110_call(var_6112,var_6113,var_6114,)
output = call_6111
func_6115 = relay.Function([var_6112,var_6113,var_6114,], output)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6154 = relay.TupleGetItem(func_5663_call(), 0)
call_6155 = relay.TupleGetItem(func_5664_call(), 0)
output = relay.Tuple([call_6154,])
output2 = relay.Tuple([call_6155,])
func_6156 = relay.Function([], output)
mod['func_6156'] = func_6156
mod = relay.transform.InferType()(mod)
output = func_6156()
func_6157 = relay.Function([], output)
mutated_mod['func_6157'] = func_6157
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6163 = relay.const([[[5.485364,0.508015,-5.206253,2.103341,-4.282609,2.756858],[9.959208,-7.204472,-4.388917,-0.428010,-0.589878,-2.544706],[7.020772,-6.109091,-4.476933,2.578446,5.647742,1.443195],[-6.115839,5.829987,-6.527262,5.178136,0.179020,2.264601],[-3.204328,0.386639,-1.342400,-8.998779,3.716552,8.962111]],[[-7.725686,0.796518,1.334385,6.264932,0.029377,9.885979],[-6.524491,2.467154,-4.847203,5.823684,6.845247,-3.602542],[-3.449828,5.521412,0.964396,3.436795,0.816179,5.018491],[5.215672,-2.760968,6.353502,3.279812,-6.436223,0.758190],[0.580539,3.124206,7.332725,7.833764,-7.208489,3.239769]],[[0.257995,4.303781,8.727815,-5.850097,6.073875,2.551254],[-0.402875,-7.442179,-0.248253,1.166666,-1.163425,-2.921394],[-3.879952,5.393602,-4.121010,-8.434282,1.776042,-5.855603],[2.545051,-6.103115,0.358402,0.188944,-6.501694,-0.767023],[-1.863278,-3.471071,-4.153620,-3.724419,-9.127737,0.507641]]], dtype = "float64")#candidate|6163|(3, 5, 6)|const|float64
uop_6164 = relay.cos(const_6163.astype('float64')) # shape=(3, 5, 6)
output = relay.Tuple([uop_6164,])
output2 = relay.Tuple([uop_6164,])
func_6170 = relay.Function([], output)
mod['func_6170'] = func_6170
mod = relay.transform.InferType()(mod)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6170_call = mutated_mod.get_global_var('func_6170')
call_6171 = func_6170_call()
output = call_6171
func_6172 = relay.Function([], output)
mutated_mod['func_6172'] = func_6172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_6208 = relay.TupleGetItem(func_5802_call(), 0)
call_6209 = relay.TupleGetItem(func_5803_call(), 0)
func_5745_call = mod.get_global_var('func_5745')
func_5749_call = mutated_mod.get_global_var('func_5749')
const_6223 = relay.const([[2,5,-2,-4,-1,1,-9,5,-5,9,6,6,-8,2,1,-4,-8,4,-5,8,-3,-5],[10,-2,-3,-10,10,10,3,10,6,6,4,-1,-8,7,7,-6,4,-1,-10,5,-7,9],[-9,-3,-2,8,-8,-7,9,6,5,-3,1,-3,3,2,-5,9,8,10,10,8,-8,-2],[8,-2,-3,2,-9,4,5,3,5,-5,-5,-4,2,4,-6,6,8,9,-3,3,7,7],[3,3,3,10,-2,4,4,-3,-4,-6,-5,2,-5,-3,4,4,9,3,7,9,-8,5],[-8,-4,-5,5,-5,-1,5,5,-3,5,8,3,1,-7,4,-3,-8,7,7,-7,-10,-5],[2,4,-10,-5,-7,6,-10,-9,4,-7,6,10,-7,-8,-5,3,6,1,4,-4,6,-9],[4,-3,9,-5,-3,10,1,-8,-4,2,-6,-4,10,-1,2,5,9,6,-7,3,-5,-1],[-3,-3,-7,5,-9,-6,-10,7,9,8,9,8,-7,5,3,8,-4,1,5,7,-6,3],[9,6,2,-10,1,7,6,-10,10,5,1,7,1,-10,-6,2,6,5,-3,-1,2,2],[1,-7,4,-7,7,10,8,6,4,-1,-6,-10,-3,3,8,1,1,-10,-1,7,3,-7],[-9,4,9,-6,4,-3,-5,-10,6,-2,-3,-2,-1,2,8,4,-4,-1,-6,9,-2,-6],[-1,-10,2,-3,-8,9,6,3,3,-3,8,10,-2,-3,-1,1,-7,-10,5,-2,-10,4],[4,-2,-7,-4,9,-10,-4,5,-1,-9,9,7,-7,-9,-2,5,-10,-3,-3,3,-2,5],[5,-3,-8,7,4,-3,7,-7,7,-4,-2,4,-3,-9,10,-1,8,3,8,5,-6,-2],[2,-1,-3,6,2,-3,8,2,-10,5,8,-1,-8,8,-7,-6,-2,-8,1,-2,-5,-2],[9,-1,8,4,-3,-4,-3,4,5,-9,-8,3,10,-4,2,-7,9,-1,-5,-7,-4,-1],[5,9,7,8,6,5,-1,-2,-5,6,-9,3,4,4,2,6,-3,1,2,7,3,5],[-1,6,4,-9,1,-8,-5,4,2,-7,5,-6,9,9,3,5,9,-9,-5,7,-2,2],[1,-5,8,-7,1,-3,5,4,4,-4,-1,7,3,4,2,3,2,6,3,2,-7,6],[-7,-1,-10,-5,10,-8,7,-6,-6,2,-10,-9,-4,-9,-7,6,-5,-4,-4,7,10,-4],[-5,-6,3,10,-8,6,-1,-6,10,-10,-9,-2,-5,4,4,4,2,4,-10,7,-5,-4],[8,3,-10,-4,1,-1,-7,-4,6,-4,-8,2,-5,7,-3,-4,-1,-10,-4,-1,2,-1],[-10,10,3,-2,2,-10,-4,7,-8,-10,-10,1,7,-6,5,-10,2,-8,-5,5,-6,-4]], dtype = "int64")#candidate|6223|(24, 22)|const|int64
var_6224 = relay.var("var_6224", dtype = "int64", shape = (16, 1))#candidate|6224|(16, 1)|var|int64
const_6225 = relay.const([[10,-4,-5,-2,-2,10,-9,-1,7,-9,1,7],[-8,6,10,9,7,10,4,5,-8,-5,7,-6],[-10,-9,10,8,-7,-5,-2,7,-8,3,7,-6],[-1,2,5,-2,-2,-9,7,2,2,10,-4,5]], dtype = "int64")#candidate|6225|(4, 12)|const|int64
call_6222 = relay.TupleGetItem(func_5745_call(relay.reshape(const_6223.astype('int64'), [528,]), relay.reshape(var_6224.astype('int64'), [16,]), relay.reshape(const_6225.astype('int64'), [48,]), ), 4)
call_6226 = relay.TupleGetItem(func_5749_call(relay.reshape(const_6223.astype('int64'), [528,]), relay.reshape(var_6224.astype('int64'), [16,]), relay.reshape(const_6225.astype('int64'), [48,]), ), 4)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
var_6233 = relay.var("var_6233", dtype = "float32", shape = (1008,))#candidate|6233|(1008,)|var|float32
call_6232 = relay.TupleGetItem(func_3188_call(relay.reshape(var_6233.astype('float32'), [12, 7, 12])), 0)
call_6234 = relay.TupleGetItem(func_3190_call(relay.reshape(var_6233.astype('float32'), [12, 7, 12])), 0)
output = relay.Tuple([call_6208,call_6222,const_6223,var_6224,const_6225,call_6232,var_6233,])
output2 = relay.Tuple([call_6209,call_6226,const_6223,var_6224,const_6225,call_6234,var_6233,])
func_6235 = relay.Function([var_6224,var_6233,], output)
mod['func_6235'] = func_6235
mod = relay.transform.InferType()(mod)
var_6236 = relay.var("var_6236", dtype = "int64", shape = (16, 1))#candidate|6236|(16, 1)|var|int64
var_6237 = relay.var("var_6237", dtype = "float32", shape = (1008,))#candidate|6237|(1008,)|var|float32
output = func_6235(var_6236,var_6237,)
func_6238 = relay.Function([var_6236,var_6237,], output)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_6271 = func_5954_call()
call_6272 = func_5954_call()
output = relay.Tuple([call_6271,])
output2 = relay.Tuple([call_6272,])
func_6294 = relay.Function([], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
output = func_6294()
func_6295 = relay.Function([], output)
mutated_mod['func_6295'] = func_6295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6336 = relay.TupleGetItem(func_5663_call(), 0)
call_6337 = relay.TupleGetItem(func_5664_call(), 0)
output = call_6336
output2 = call_6337
func_6356 = relay.Function([], output)
mod['func_6356'] = func_6356
mod = relay.transform.InferType()(mod)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6357 = func_6356_call()
output = call_6357
func_6358 = relay.Function([], output)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mod.get_global_var('func_6356')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_6404 = func_6356_call()
call_6405 = func_6356_call()
output = call_6404
output2 = call_6405
func_6426 = relay.Function([], output)
mod['func_6426'] = func_6426
mod = relay.transform.InferType()(mod)
mutated_mod['func_6426'] = func_6426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mutated_mod.get_global_var('func_6426')
call_6427 = func_6426_call()
output = call_6427
func_6428 = relay.Function([], output)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_6445 = func_5954_call()
call_6446 = func_5954_call()
output = relay.Tuple([call_6445,])
output2 = relay.Tuple([call_6446,])
func_6447 = relay.Function([], output)
mod['func_6447'] = func_6447
mod = relay.transform.InferType()(mod)
output = func_6447()
func_6448 = relay.Function([], output)
mutated_mod['func_6448'] = func_6448
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6477 = relay.const([[[10,2,8,8,-8,8,-2,-3,-1,8,-6,5,6,9,-8,3],[-8,9,-5,-7,-4,4,8,-4,-6,6,-1,-5,2,-10,-10,8],[10,-4,-6,7,6,3,9,-4,-2,-8,-1,2,7,-4,7,-7],[-1,9,1,-7,-7,2,-2,2,7,8,3,3,-2,-6,-1,3],[3,-7,-9,-1,7,-4,-10,-2,6,-4,10,8,-4,-10,-7,-7],[6,-7,10,-1,1,-3,-2,7,5,-5,-1,-8,7,-2,-2,9],[2,-2,3,-7,-1,-7,-7,8,-8,-8,8,-5,-3,-1,3,4],[-5,-8,-2,-5,7,-5,-8,8,-6,6,4,8,6,4,-1,-7],[-7,-7,9,-1,5,3,-8,3,1,7,1,-5,-7,8,-7,6],[-9,-2,-6,9,8,-9,4,8,1,1,3,1,-4,1,4,-5],[2,-5,10,-2,-5,3,-2,7,10,-5,5,-4,5,-2,3,-3],[-5,-5,-2,5,7,9,1,-5,7,4,6,-10,-3,1,10,-3],[4,-3,-3,6,-6,-1,4,-10,6,2,3,-4,-6,4,-2,-4],[3,5,-4,7,-7,-1,-4,1,-6,-1,-8,-7,3,2,-8,-4]],[[-2,8,3,7,4,10,-8,8,-7,-5,8,-9,3,8,6,4],[-4,-7,8,6,4,1,-8,-6,-2,10,-2,2,-10,9,-4,-5],[5,-5,8,8,7,1,-10,2,9,3,3,-9,8,9,2,2],[8,2,-9,5,10,3,7,6,-1,1,6,7,9,10,3,-9],[-9,8,-3,-6,-1,5,-8,7,-9,3,8,3,-9,-9,5,5],[10,4,6,-6,-8,-6,3,-8,-10,10,-3,5,6,-4,3,4],[1,-7,-7,4,8,-4,3,-3,-2,-3,8,7,-4,-6,8,-2],[-8,-6,4,2,1,-2,9,9,10,6,-2,5,-4,4,-1,-1],[-5,-5,6,-2,-5,-1,-10,8,4,2,-7,-3,6,-10,-6,-5],[9,-10,7,-2,-6,9,-5,8,10,-7,-4,7,10,6,-10,6],[1,4,8,2,-1,2,9,7,-1,-6,5,-7,-1,-10,4,-10],[-2,4,-2,-5,-9,-1,8,-8,10,-4,-7,1,-3,-9,-7,-1],[3,10,-4,-8,-4,3,-7,-9,-7,4,-3,2,-8,-3,1,-5],[-3,-2,9,-10,-1,3,4,-6,6,-4,9,-6,-8,1,7,6]],[[8,-5,-1,10,-7,-1,6,1,9,2,3,4,-9,1,-10,5],[6,-7,-6,9,9,-8,7,-6,7,4,-7,9,3,5,-10,3],[2,-3,6,-4,3,-7,-1,9,-4,8,-3,-9,-1,-10,-5,-7],[5,-5,-3,4,-3,10,-8,4,4,-3,-10,-3,-9,2,-8,-2],[8,-3,-8,-10,-10,7,-9,-7,-4,10,-5,5,-8,9,-5,-10],[-10,-3,-10,1,3,-7,8,5,-6,-6,-8,8,-9,5,-8,6],[-7,-6,3,-8,-5,9,1,-5,-9,-10,5,4,-5,-7,-5,10],[-3,-1,-4,-3,4,-2,7,3,-10,2,1,9,-6,-10,1,-3],[8,3,4,1,-9,2,2,-2,8,-8,-4,6,7,-3,8,5],[1,-10,-5,3,-5,1,-2,-10,1,-1,8,4,-5,-4,-4,-1],[-6,-10,-1,6,-9,3,-2,-4,-4,-5,-4,8,10,6,-10,9],[-5,8,3,2,-10,5,-10,2,-6,8,10,1,7,-3,2,6],[10,-5,-7,7,4,9,1,-9,2,6,3,-1,-5,-9,6,-6],[9,-9,10,4,-8,-9,-8,-3,-6,-4,6,-9,-10,8,6,-2]],[[5,1,-7,-7,-2,1,5,-10,-5,-1,-10,10,1,-5,9,-1],[-9,8,-9,-9,3,1,-8,-10,7,-1,-2,-8,8,1,1,2],[8,5,8,10,-6,9,4,-6,-1,-10,8,7,1,3,-3,1],[-6,-9,-10,6,-10,1,-4,-4,4,9,2,-7,-7,-5,5,10],[-2,-8,7,-10,8,-10,-10,9,-8,5,-6,3,3,4,3,1],[-4,-8,2,-10,9,5,6,-3,-6,-4,-1,6,4,1,-3,-3],[-1,9,-8,6,-9,-9,8,-9,10,-7,-2,-2,2,-4,-6,-3],[7,-10,3,4,-8,-6,5,-9,9,-6,10,7,-3,-8,-9,6],[4,-1,-4,8,-6,-8,-2,-5,-4,3,-1,5,-1,-3,-5,6],[-8,8,-2,6,3,-10,-3,-5,8,-3,8,2,-3,2,7,1],[5,-9,-8,-6,9,7,10,2,-9,6,-5,1,-5,-7,-10,-10],[-10,3,-2,-10,-4,-4,10,-2,-1,8,-9,5,1,8,2,8],[7,-1,-10,-1,-9,-1,-10,-8,3,8,-7,6,5,-7,2,-1],[7,-7,5,5,2,3,-1,7,-8,-4,6,-3,3,-7,5,3]]], dtype = "uint32")#candidate|6477|(4, 14, 16)|const|uint32
var_6478 = relay.var("var_6478", dtype = "uint32", shape = (4, 14, 16))#candidate|6478|(4, 14, 16)|var|uint32
bop_6479 = relay.maximum(const_6477.astype('uint32'), relay.reshape(var_6478.astype('uint32'), relay.shape_of(const_6477))) # shape=(4, 14, 16)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_6507 = func_6426_call()
call_6508 = func_6426_call()
var_6519 = relay.var("var_6519", dtype = "uint32", shape = (4, 14, 16))#candidate|6519|(4, 14, 16)|var|uint32
bop_6520 = relay.divide(bop_6479.astype('float64'), relay.reshape(var_6519.astype('float64'), relay.shape_of(bop_6479))) # shape=(4, 14, 16)
output = relay.Tuple([call_6507,bop_6520,])
output2 = relay.Tuple([call_6508,bop_6520,])
func_6529 = relay.Function([var_6478,var_6519,], output)
mod['func_6529'] = func_6529
mod = relay.transform.InferType()(mod)
mutated_mod['func_6529'] = func_6529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6529_call = mutated_mod.get_global_var('func_6529')
var_6531 = relay.var("var_6531", dtype = "uint32", shape = (4, 14, 16))#candidate|6531|(4, 14, 16)|var|uint32
var_6532 = relay.var("var_6532", dtype = "uint32", shape = (4, 14, 16))#candidate|6532|(4, 14, 16)|var|uint32
call_6530 = func_6529_call(var_6531,var_6532,)
output = call_6530
func_6533 = relay.Function([var_6531,var_6532,], output)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_6543 = func_5954_call()
call_6544 = func_5954_call()
func_6447_call = mod.get_global_var('func_6447')
func_6448_call = mutated_mod.get_global_var('func_6448')
call_6557 = relay.TupleGetItem(func_6447_call(), 0)
call_6558 = relay.TupleGetItem(func_6448_call(), 0)
output = relay.Tuple([call_6543,call_6557,])
output2 = relay.Tuple([call_6544,call_6558,])
func_6559 = relay.Function([], output)
mod['func_6559'] = func_6559
mod = relay.transform.InferType()(mod)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mutated_mod.get_global_var('func_6559')
call_6560 = func_6559_call()
output = call_6560
func_6561 = relay.Function([], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6156_call = mod.get_global_var('func_6156')
func_6157_call = mutated_mod.get_global_var('func_6157')
call_6630 = relay.TupleGetItem(func_6156_call(), 0)
call_6631 = relay.TupleGetItem(func_6157_call(), 0)
output = relay.Tuple([call_6630,])
output2 = relay.Tuple([call_6631,])
func_6636 = relay.Function([], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6637 = func_6636_call()
output = call_6637
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_6666 = relay.TupleGetItem(func_6636_call(), 0)
call_6667 = relay.TupleGetItem(func_6638_call(), 0)
output = call_6666
output2 = call_6667
func_6668 = relay.Function([], output)
mod['func_6668'] = func_6668
mod = relay.transform.InferType()(mod)
output = func_6668()
func_6669 = relay.Function([], output)
mutated_mod['func_6669'] = func_6669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_6682 = func_5954_call()
call_6683 = func_5954_call()
output = relay.Tuple([call_6682,])
output2 = relay.Tuple([call_6683,])
func_6700 = relay.Function([], output)
mod['func_6700'] = func_6700
mod = relay.transform.InferType()(mod)
output = func_6700()
func_6701 = relay.Function([], output)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mod.get_global_var('func_6559')
func_6561_call = mutated_mod.get_global_var('func_6561')
call_6711 = relay.TupleGetItem(func_6559_call(), 1)
call_6712 = relay.TupleGetItem(func_6561_call(), 1)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_6720 = func_6426_call()
call_6721 = func_6426_call()
bop_6725 = relay.equal(call_6720.astype('bool'), relay.reshape(call_6711.astype('bool'), relay.shape_of(call_6720))) # shape=(416,)
bop_6728 = relay.equal(call_6721.astype('bool'), relay.reshape(call_6712.astype('bool'), relay.shape_of(call_6721))) # shape=(416,)
output = relay.Tuple([bop_6725,])
output2 = relay.Tuple([bop_6728,])
func_6740 = relay.Function([], output)
mod['func_6740'] = func_6740
mod = relay.transform.InferType()(mod)
output = func_6740()
func_6741 = relay.Function([], output)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mod.get_global_var('func_5627')
func_5628_call = mutated_mod.get_global_var('func_5628')
call_6791 = relay.TupleGetItem(func_5627_call(), 0)
call_6792 = relay.TupleGetItem(func_5628_call(), 0)
uop_6793 = relay.log(call_6791.astype('float64')) # shape=(1, 15, 11)
uop_6795 = relay.log(call_6792.astype('float64')) # shape=(1, 15, 11)
output = relay.Tuple([uop_6793,])
output2 = relay.Tuple([uop_6795,])
func_6805 = relay.Function([], output)
mod['func_6805'] = func_6805
mod = relay.transform.InferType()(mod)
output = func_6805()
func_6806 = relay.Function([], output)
mutated_mod['func_6806'] = func_6806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mod.get_global_var('func_6740')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_6849 = relay.TupleGetItem(func_6740_call(), 0)
call_6850 = relay.TupleGetItem(func_6741_call(), 0)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_6861 = relay.TupleGetItem(func_5781_call(), 0)
call_6862 = relay.TupleGetItem(func_5782_call(), 0)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_6868 = relay.TupleGetItem(func_6805_call(), 0)
call_6869 = relay.TupleGetItem(func_6806_call(), 0)
output = relay.Tuple([call_6849,call_6861,call_6868,])
output2 = relay.Tuple([call_6850,call_6862,call_6869,])
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
output = func_6871()
func_6872 = relay.Function([], output)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_6889 = relay.TupleGetItem(func_6636_call(), 0)
call_6890 = relay.TupleGetItem(func_6638_call(), 0)
output = relay.Tuple([call_6889,])
output2 = relay.Tuple([call_6890,])
func_6892 = relay.Function([], output)
mod['func_6892'] = func_6892
mod = relay.transform.InferType()(mod)
output = func_6892()
func_6893 = relay.Function([], output)
mutated_mod['func_6893'] = func_6893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mod.get_global_var('func_6871')
func_6872_call = mutated_mod.get_global_var('func_6872')
call_6900 = relay.TupleGetItem(func_6871_call(), 2)
call_6901 = relay.TupleGetItem(func_6872_call(), 2)
output = relay.Tuple([call_6900,])
output2 = relay.Tuple([call_6901,])
func_6906 = relay.Function([], output)
mod['func_6906'] = func_6906
mod = relay.transform.InferType()(mod)
output = func_6906()
func_6907 = relay.Function([], output)
mutated_mod['func_6907'] = func_6907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6156_call = mod.get_global_var('func_6156')
func_6157_call = mutated_mod.get_global_var('func_6157')
call_6948 = relay.TupleGetItem(func_6156_call(), 0)
call_6949 = relay.TupleGetItem(func_6157_call(), 0)
func_3905_call = mod.get_global_var('func_3905')
func_3911_call = mutated_mod.get_global_var('func_3911')
var_6958 = relay.var("var_6958", dtype = "int16", shape = (147,))#candidate|6958|(147,)|var|int16
const_6959 = relay.const([9.900984,8.585253,-4.407975,8.738933,5.630918,3.774322,8.165364,-3.810576,7.594311,7.343771,-7.963694,-3.289015,-7.703781,6.725342,-9.880790,6.566303,2.723517,1.526218,-9.225439,7.277706,-7.504822,7.646711,8.328222,-0.761644,3.676238,1.918034,-6.376659,3.100712,-0.545043,-6.498426,2.140135,-8.133028,-5.891482,-3.690086,2.374418,-8.703168,9.983793,1.292919,6.500790,1.566319,1.117493,-6.928715,2.271814,0.050150,5.406973,-2.225731,5.321264,7.119856,-2.138576,9.933017,5.517258,6.687226,3.987029,3.990220,-7.683010,3.921475,-1.060765,8.202225,-9.395915,2.322436,2.025386,-9.067271,8.140614,-2.999098,-6.757558,2.691726,-8.926031,-1.718139,9.783920,-5.936982,-4.284966,9.356529,-3.182874,-4.534475,4.837409,-1.068266,7.779613,-5.027790,-7.069960,-8.563101,-5.372210,3.952055,-7.472598,-3.747504,0.063495,-5.421470,0.240415,-9.792454,-6.784700,-0.769705,3.448905,-0.733305,3.859870,6.495296,-4.257326,-6.530688,2.774006,6.023312,8.774252,6.743496,-4.996112,9.178318,3.586419,4.008513,-6.884205,-6.320183,-9.481722,2.555010,7.489948,-6.764432,-6.713901,-2.909966,-0.450439,-7.416011,1.790589,-9.110669,9.116245,3.476869,-9.326230,-3.481744,-1.540737,-2.898429,-1.238297,0.164223,-6.215112,6.187646,-6.667389,-8.814531,6.771145,5.154675,-8.237641,-5.445005,9.168413,-5.574231,5.264065,-8.656970,0.600490,-4.591576,-7.017616,1.561140,7.641020,-4.239076,-1.146612,-6.116314,0.351198,6.812313,-1.955482,8.668273,3.827917,0.206155,-5.168141,5.309271,-7.078190,3.883274,2.777365,4.918028,4.300960,-8.861954,-3.479075,5.360783,-0.092181,0.396572,3.292738,-7.402711,-7.535405,9.793607,-3.428828,5.593027,-8.687718,1.480570,7.741297,0.880115,-3.725989,9.763957,-5.562082,-5.508291,2.766122,1.206208,-2.842488,1.825073,6.125943,-3.317973,5.012084,-3.448795,-6.256375,3.975269,-2.733188,1.575646,4.020836,9.240412,7.120640,-4.194714,8.060326,0.166063,-0.220783,5.191773,0.955649,5.872410,4.121474,0.263381,0.063858,3.913039,8.170852,4.428583,7.458748,-7.978944,-8.524308,9.481728,5.377887,-0.088953,-3.636858,7.548594,8.089010,-4.165340,5.521382,-2.699982,3.241642,-9.673250,-7.211973,5.424225,1.107311,2.162432,-2.983433,0.956849,9.946235,3.288142,6.539738,-9.806891,8.826454,9.212045,-7.554817,-1.311253,-1.572752,-7.507411,-1.646768,-4.197478,5.867352,1.978615,3.186136,1.218941,-9.519828,-9.347938,-3.616797,-0.800282,2.449406,-9.679030,-0.060966,2.537418,1.024087,2.376655,0.913711,8.402138,6.865283,9.546867,-9.399389,-1.109749,7.502634,-2.089193,6.758353,-0.868071,3.237462,-4.402441,9.965525,-7.933273,0.924762,-1.403459,3.330908,4.691863,-3.705622,1.063219,-4.202667,-4.040839,-2.239138,3.656879,3.686945,2.690555,-0.682789,-8.615870,4.981024,-9.514465,5.990054,-9.628442,8.892130,1.421012,-4.922206,-0.087841,-4.173859,-0.838818,2.728431,-8.968932,6.106701,6.769356,3.020106,3.111178,-2.666393,0.257495,-6.999952,0.821825,-9.147609,-6.488691,4.776554,5.814645,6.458041,5.645610,8.292221,5.459814,3.815763,-5.250291,9.781809,7.962610,8.440544,9.342316,-0.076162,0.623577,9.273226,1.433259,-3.230395,3.615052,1.635962,8.232372,-9.331800,1.090529,5.212978,4.661150,-6.016986,8.893130,3.386832,7.401761,1.173395,-4.238569,-0.646970,1.343790,-7.727554,-2.431435,5.345491,-9.409143,7.344234,2.606017,7.620447,2.151028,-6.996334,-3.194096,5.792879,0.837931,-8.860839,7.201442,-0.302168,-4.681038,0.079962,-7.511261,-0.801564,7.251456,-3.823366,-1.934771,4.891896,5.729319,-8.417525,2.927304,-4.130021,-6.029279,3.094012,2.540187,3.632772,-2.999343,9.298345,9.099486,-4.788492,4.157902,-5.692244,-0.271851,8.142444,4.246602,3.365754,7.465020,9.324280,3.399305,7.819011,-3.165292,-1.977313,-8.444058,2.823285,7.092923,-8.177080,7.816508,-8.859200,-7.954708,4.054513,-5.385174,-0.196888,-0.732359,8.998861,-6.307932,9.180214,9.786074,-3.310175,4.227360,-9.759023,7.822227,6.960932,9.175886,-4.679617,9.706468,0.487361,8.735732,8.386823,8.713873,4.033751,2.436835,7.600752,-5.626291,-2.338430,3.371349,-9.105012,6.167582,6.946573,5.134946,-3.471446,-8.922754,-9.997502,-1.512890,5.592626,6.213046,3.007486,9.541928,1.036066,-7.572653,2.338035,-8.599781,-4.099230,1.547429,-2.120042,-3.681433,8.575162,-5.402524,-0.397576,7.165584,9.143264,-4.718851,-2.024471,1.344071,4.671975,4.548386,1.737340,-5.771319,-1.649441,-1.804724,-0.991585,4.147272,4.919991,-4.867632,-4.477988,1.256802,-1.583791,7.119124,-8.483376,-8.727344,-3.859438,-8.681433,-7.757553,-1.453685,6.062521,6.389294,1.118876,0.127903,4.071133,-8.877354,-4.381732,7.261083,9.049626,3.303541,0.617573,7.899723,8.918714,5.245629,-3.976757,-2.507097,-4.266574,9.846097,4.218772,-2.391865,-7.426472,-5.738370,1.015624,0.080415,-8.343500,-7.143269,7.407580,-5.102455,9.696770,-6.463989,2.526135,0.642702,-2.148210,9.378992,-5.518227,-0.484733,-1.003324,9.364922,-7.446506,-3.981284,8.121693,-2.263342,-8.206491,6.124135,7.967325,9.657498,7.270817,-1.404573,0.386959,8.347386,-4.909712,9.526163,-0.976885,-5.046004,2.777482,-3.715651,2.724143,8.757974,7.042560,1.084475,-3.590852,4.779270,-6.580546,-3.144146,9.688079,5.739073,4.159791,-5.105303,8.807175,9.608601,3.875646,5.290629,-1.066775,-9.012771,7.994168,-4.169401,-0.590430,0.126777,-5.176847,-7.717579,9.807223,2.901059,-3.997408,9.809618,-5.543110,3.828160,-7.387174,-1.719766,9.118974,-7.641892,-9.026840,3.272383,-6.179787,3.308964,-6.843051,-1.492250,9.949741,-1.214898,0.491952,8.248001,-2.048994,9.704841,3.895178,-3.956565,-5.227253,-9.308092,5.112799,3.486470,-6.834308,-1.329633,-4.111886,2.468228,-1.506355,-0.153005,1.555211,6.410478,-3.687374,-5.557767,-7.022748,-5.552341,1.061961,-4.062731,-9.791302,-3.213134,-4.709489,9.565446,3.140495,7.557994,3.347770,6.797565,5.659980,-3.917782,5.028205,-3.941316,0.497238,-8.921544,8.771793,-1.816343,-8.890633,-0.435929,8.873660,3.198583,-7.927198,5.604486,-8.077007,-5.316101,6.896591,7.397491,8.318217,4.027891,9.067790,7.114990,-6.485500,-8.304612,-2.511965,8.814304,2.232814,-7.632099,8.866161,2.602081,-8.099905,-3.124084,-9.214946,-1.142238,1.907744,0.970573,0.832362,8.994960,-5.087684,-1.736526,-7.110730,-7.257647,7.091032,-9.425584,-5.767593,-3.946087,2.934366,9.763662,8.614866,-6.861216,6.417265,2.349207,-9.335910,-1.277305,-1.622682,-1.059398,-9.555571,-2.932622,7.784965,5.965733,-5.916557,9.152617,-8.344446,-4.632578,-4.127281,-0.578715,-0.260221,6.787227,-4.149045,5.832733,-6.980073,6.132803,-2.908846,-0.724249,-4.323327,-4.491207,-3.428979,2.324820,-0.705895,-2.260646,-8.229325,-2.969154,-9.500920,3.351791,2.468452,3.426971,-3.205186,-7.501922,5.036308,8.106817,-3.902719,-3.194337,7.379921,3.028731,6.297774,-7.267212,-0.102060,-2.147863,-2.026839,5.050498,-5.122821,-0.051109,-1.803702,-5.272134,0.950334,8.490335,7.742356,-1.224354,6.742185,-4.122324,4.588839,-5.341052,4.728446,-4.469740,3.726735,3.779693,9.353688,-9.190634,-4.984857,1.330116,-3.053197,-5.913797,-1.650387,-2.656257,-0.905088,9.845108,-3.219798,-3.338402,-9.119304,1.670641,-2.230778,-7.659672,-9.461710,7.864792,3.326785,7.176025,-5.433769,4.737903,-1.355738,-4.256479,-8.174658,2.394666,-6.459534,-4.274476,-0.708097,-4.238061,-6.270250,-0.005292,3.123445,1.139933,-3.441102,6.431212,-2.644876,-9.277115,-1.005756,-8.288795,-9.623689,1.471999,9.987209,1.015796,-6.802897,-1.678612,-4.334170,3.040273,8.673930,-0.447741,2.132095,-9.246400,-6.389714,3.683916,1.894612,2.484347,3.782171,-7.804672,-6.770304,-0.492388,1.718206,6.469683,-3.795114,-9.860073,-4.065677,9.722133,-8.795542,0.629808,-9.894208,2.239188,-7.077177,2.710499,-4.306920,-8.425172,-3.017898,6.855605,-4.544772,1.763274,2.226185,-7.864455,1.630595,-6.984809,0.924335,-6.032800,-1.059559,4.883867,9.622811,-1.109633,6.884771,-3.681344,0.007093,5.181600,7.225764,-1.780209,-4.894799,-0.456460,4.983562,2.839767,-7.711871,-8.019384,-2.404309,-1.988600,5.534563,5.614288], dtype = "float32")#candidate|6959|(810,)|const|float32
var_6960 = relay.var("var_6960", dtype = "int64", shape = (16,))#candidate|6960|(16,)|var|int64
call_6957 = relay.TupleGetItem(func_3905_call(relay.reshape(var_6958.astype('int16'), [3, 7, 7]), relay.reshape(var_6958.astype('int16'), [3, 7, 7]), relay.reshape(const_6959.astype('float32'), [810,]), relay.reshape(call_6948.astype('int64'), [8, 52]), relay.reshape(var_6960.astype('int64'), [16,]), ), 4)
call_6961 = relay.TupleGetItem(func_3911_call(relay.reshape(var_6958.astype('int16'), [3, 7, 7]), relay.reshape(var_6958.astype('int16'), [3, 7, 7]), relay.reshape(const_6959.astype('float32'), [810,]), relay.reshape(call_6948.astype('int64'), [8, 52]), relay.reshape(var_6960.astype('int64'), [16,]), ), 4)
output = relay.Tuple([call_6948,call_6957,var_6958,const_6959,var_6960,])
output2 = relay.Tuple([call_6949,call_6961,var_6958,const_6959,var_6960,])
func_6962 = relay.Function([var_6958,var_6960,], output)
mod['func_6962'] = func_6962
mod = relay.transform.InferType()(mod)
var_6963 = relay.var("var_6963", dtype = "int16", shape = (147,))#candidate|6963|(147,)|var|int16
var_6964 = relay.var("var_6964", dtype = "int64", shape = (16,))#candidate|6964|(16,)|var|int64
output = func_6962(var_6963,var_6964,)
func_6965 = relay.Function([var_6963,var_6964,], output)
mutated_mod['func_6965'] = func_6965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mod.get_global_var('func_6740')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_6993 = relay.TupleGetItem(func_6740_call(), 0)
call_6994 = relay.TupleGetItem(func_6741_call(), 0)
var_6995 = relay.var("var_6995", dtype = "bool", shape = (416,))#candidate|6995|(416,)|var|bool
bop_6996 = relay.bitwise_and(call_6993.astype('int16'), relay.reshape(var_6995.astype('int16'), relay.shape_of(call_6993))) # shape=(416,)
bop_6999 = relay.bitwise_and(call_6994.astype('int16'), relay.reshape(var_6995.astype('int16'), relay.shape_of(call_6994))) # shape=(416,)
output = bop_6996
output2 = bop_6999
func_7015 = relay.Function([var_6995,], output)
mod['func_7015'] = func_7015
mod = relay.transform.InferType()(mod)
var_7016 = relay.var("var_7016", dtype = "bool", shape = (416,))#candidate|7016|(416,)|var|bool
output = func_7015(var_7016)
func_7017 = relay.Function([var_7016], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6906_call = mod.get_global_var('func_6906')
func_6907_call = mutated_mod.get_global_var('func_6907')
call_7051 = relay.TupleGetItem(func_6906_call(), 0)
call_7052 = relay.TupleGetItem(func_6907_call(), 0)
const_7096 = relay.const([[[-3.973999,4.833387,-6.528904,4.482007,-0.558791,3.985770,9.814165,-4.212549,-9.706017,7.257714,-3.691471],[-1.332514,5.684247,-4.201536,-2.040941,-8.117347,-2.559796,4.012633,3.027634,-4.055866,-9.669955,-8.761866],[3.196744,9.707261,-2.351975,4.971290,7.066000,-7.760645,4.714516,2.781340,-1.284376,-0.916659,5.599734],[1.724550,1.763878,-8.015528,7.693506,5.479221,-7.608962,1.315701,4.971028,3.656263,-6.748577,2.402313],[-7.386642,2.390315,-9.178403,-7.566992,4.016909,-2.083467,7.380360,-6.046354,2.594076,6.300489,4.799007],[-1.762242,7.646591,4.356542,5.762123,9.714613,8.207912,2.141999,7.841045,5.861187,1.257586,6.518891],[1.129200,-4.871828,6.947745,-2.135903,-8.855901,7.492494,-9.709790,5.945832,2.760494,7.268000,7.533962],[-3.228880,-9.850336,-5.360758,8.123895,3.344553,0.208424,1.305234,3.568284,3.617185,9.019361,-9.162024],[1.697756,6.881763,-4.668059,5.348092,1.722581,-5.057669,-3.772094,-1.404555,-8.390658,-1.990873,0.559398],[-7.016426,2.304888,-7.678870,-7.718509,-7.441843,-7.114778,-8.625027,-7.249899,-2.898594,7.579167,-2.934527],[4.147505,1.304156,-1.065981,-1.600713,-4.974318,-1.041266,-6.676726,-9.157243,3.465523,5.762414,-5.849950],[5.808084,2.402716,1.742987,-6.404229,-8.664007,-2.661727,-4.299181,3.235395,-8.810646,5.899338,0.017601],[6.788509,8.298385,-1.060934,-8.249084,-8.531134,-7.979296,2.732019,9.458538,5.699233,-3.218167,4.723090],[-9.499746,1.424619,-1.498033,2.635601,-2.956223,4.340020,-1.527172,-4.110144,0.253828,-0.486074,4.827672],[9.877083,1.217708,-3.446910,-7.333956,-4.562013,8.935802,2.575812,6.638852,1.156679,7.606446,3.763887]]], dtype = "float64")#candidate|7096|(1, 15, 11)|const|float64
bop_7097 = relay.logical_or(call_7051.astype('bool'), relay.reshape(const_7096.astype('bool'), relay.shape_of(call_7051))) # shape=(1, 15, 11)
bop_7100 = relay.logical_or(call_7052.astype('bool'), relay.reshape(const_7096.astype('bool'), relay.shape_of(call_7052))) # shape=(1, 15, 11)
output = bop_7097
output2 = bop_7100
func_7107 = relay.Function([], output)
mod['func_7107'] = func_7107
mod = relay.transform.InferType()(mod)
output = func_7107()
func_7108 = relay.Function([], output)
mutated_mod['func_7108'] = func_7108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7107_call = mod.get_global_var('func_7107')
func_7108_call = mutated_mod.get_global_var('func_7108')
call_7120 = func_7107_call()
call_7121 = func_7107_call()
var_7122 = relay.var("var_7122", dtype = "bool", shape = (5, 15, 11))#candidate|7122|(5, 15, 11)|var|bool
bop_7123 = relay.not_equal(call_7120.astype('bool'), var_7122.astype('bool')) # shape=(5, 15, 11)
bop_7126 = relay.not_equal(call_7121.astype('bool'), var_7122.astype('bool')) # shape=(5, 15, 11)
bop_7142 = relay.greater(bop_7123.astype('bool'), relay.reshape(var_7122.astype('bool'), relay.shape_of(bop_7123))) # shape=(5, 15, 11)
bop_7145 = relay.greater(bop_7126.astype('bool'), relay.reshape(var_7122.astype('bool'), relay.shape_of(bop_7126))) # shape=(5, 15, 11)
output = relay.Tuple([bop_7142,])
output2 = relay.Tuple([bop_7145,])
func_7149 = relay.Function([var_7122,], output)
mod['func_7149'] = func_7149
mod = relay.transform.InferType()(mod)
mutated_mod['func_7149'] = func_7149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7150 = relay.var("var_7150", dtype = "bool", shape = (5, 15, 11))#candidate|7150|(5, 15, 11)|var|bool
func_7149_call = mutated_mod.get_global_var('func_7149')
call_7151 = func_7149_call(var_7150)
output = call_7151
func_7152 = relay.Function([var_7150], output)
mutated_mod['func_7152'] = func_7152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_7188 = relay.TupleGetItem(func_5663_call(), 0)
call_7189 = relay.TupleGetItem(func_5664_call(), 0)
func_6110_call = mod.get_global_var('func_6110')
func_6115_call = mutated_mod.get_global_var('func_6115')
var_7193 = relay.var("var_7193", dtype = "int16", shape = (30, 1))#candidate|7193|(30, 1)|var|int16
const_7194 = relay.const([-7,-1,8,-2,-4,-10,3,-1,-3,6,-5,3,-9,-10,-7,8,-7,-4,4,5,-9,9,9,8,-2,3,-1,7,-5,10,1,5,-4,2,7,10,-4,-9,-8,-6,3,-10,-8,-6,-5,4,-4,-5,-1,8,6,-3,6,-5,1,7,-3,-10,-5,5,-3,-7,9,5,8,-6,-3,5,5,8,-1,9,3,6,-6,-9,9,5,-9,-6,6,-9,2,-10,4,-2,2,-1,-1,-4,-8,-7,2,-3,-2,6,-10,9,-1,-1,-7,-1,4,-6,9,-5,7,-3,4,8,4,6,-10,-10,-3,7,-3,3,-10,-4,2,-7,-1,-8,8,-1,-1,-10,1,4,-8,8,-9,9,-1,-10,4,2,10,10,-5,2,-9,8,2,-4,5,2,-4,-3,7,7,-3,-9,-6,-2,-2,-6,-7,-9,-8,-9,-8,7,3,-4,-3,2,-8,8,-9,-7,-5,10,-9,10,5,-10,-2,2], dtype = "uint8")#candidate|7194|(180,)|const|uint8
const_7195 = relay.const([-6.052472,3.952511,-9.350981,2.402134,-1.767507,8.229691,-3.573288,2.455978,-3.605659,-7.742291,-4.349734,-8.107766,-8.988250,-6.462079,0.229563,8.116398,-0.993794,-4.207295,-4.758244,-6.016841,-7.656553,-1.590396,-6.996409,4.649289,5.297227,9.561834,7.213606,-0.547625,5.017698,2.752543,-0.996546,-8.838588,4.517315,4.016245,-5.629623,-0.511086,-0.256942,5.377824,3.819460,9.925637,6.969272,-0.323002,-1.994552,-2.201353,-9.105178,-6.723207,-6.384163,0.399369,2.492763,8.825961,-1.989294,-4.729528,-7.233885,7.755143,2.359871,-6.609753,-2.112618,0.238631,1.363025,-9.128039,0.638868,-7.847487,-9.093087,7.784517,-5.327434,3.504050,5.823949,6.218422,-4.397667,6.958251,8.898012,-4.620102,-5.781413,-1.499290,6.854143,9.666182,-1.897550,-6.857908,-4.503072,-4.964476,-2.082763,0.674277,-2.515150,1.997096,-7.708114,-0.169328,-9.471562,6.077294,-1.054435,-8.122069,-1.278173,-0.305067,9.063032,9.686855,-9.907717,-6.310848,-3.394155,-4.971190,8.009466,2.849287,-5.486100,4.048957,-4.274931,-9.488926,1.249146,-2.970497,-1.411503,-9.510284,6.633894,1.534981,9.658085,-6.720262,-1.846281,-8.681746,-4.986021,0.104537,9.642659,6.876658,6.633327,-0.204786,-2.195949,-4.080718,7.522040,-6.085412,9.825752,7.063017,9.611540,-1.373407,-9.596816,7.976124,-0.993678,-4.629768,-1.145602,2.451125,9.625607,-4.881772,-3.908377,-2.603602,9.184579,-0.292176,2.364999,2.332552,9.271116,-5.068608,0.448480,-4.039539,-0.133735,5.243160,-3.368120,-5.231366,7.244263,3.320466,8.435432,4.383914,-1.974341,8.592952,3.225604,-7.446037,-7.050512,9.017112,9.703386,4.417423,-3.912744,-9.282282,2.213727,-5.682600,9.233376,-6.836479,3.146253,5.056555,0.291286,7.146784,8.050581,8.018457,-5.734181,4.509510,-7.075899,8.150004,-5.985116,2.920471,-2.106050,-3.618886,1.114917,4.181373,-4.909235,-6.555639,8.296280,5.352551,-8.803230,8.763963,0.655961,-3.149937,6.292602,-4.585099,3.733983,-6.023868,8.243001,8.489381,7.196967,6.276208,3.655370,-2.916860,-7.073395,1.251462,-1.920063,4.994540,-2.638952,-2.451894,-2.604820,0.569735,-3.128302,4.697511,-6.430881,1.843020,8.340643,3.253547,-4.083747,-5.401959,6.080248,2.295587,-0.780028,9.935565,-1.747324,-0.948613,-1.459543,-1.240427,3.230363,-8.935689,-0.487019,-0.087640,8.537208,-4.956006,7.841562,-2.974884,9.558754,-6.189953,-2.703312,-7.306342,9.108058,6.674485,-8.372398,9.036675,-4.853215,6.445708,4.348466,-3.450789,7.306068,-8.159676,2.495741,-0.841109,5.119258,-3.846021,-8.341164,-1.694457,-3.439575,-5.987122,-8.936816,-1.224566,7.554130,6.540093,0.238751,7.810486,9.095347,0.696755,-1.611832,9.917923,2.660392,-6.280648,-5.582192,4.472891,-0.390590,6.174086,9.854393,4.146992,6.466358,3.633837,9.819412,2.253193,0.362464,6.297419,-1.529161,9.655661,1.495567,-6.022774,-5.281049,-3.149170,1.112806,8.078114,8.817327,2.832336,-5.148600,-4.603620,-9.911576,-8.834205,-5.141586,9.590194,-6.945236,-9.409637,-5.854367,6.752179,8.949448,-7.713013,3.681838,7.175681,-8.659859,3.208647,-8.605091,-7.980178,1.959388,-5.722742,6.532396,6.581171,-4.009750,5.495296,-4.944285,7.882334,-6.999007,-2.908817,-8.900156,-0.469969,-4.417043,3.109515,4.099559,5.665075,-9.215317,3.287610,-9.733985,6.089531,-2.491908,6.716636,9.071645,-6.475748,-1.746392,6.397904,1.336015,-5.393632,9.165333,-1.848479,2.007363,1.629711,9.637340,3.119934,1.716976,-0.964904,1.846467,-3.298807,-6.907233,-8.342823,4.733582,2.392382,-6.961352,1.694719,6.332520,-7.897342,8.299720,-7.416415,-0.936837,-3.018527,-4.395631,-9.337965,8.562414,-0.985213,6.140875,-8.793157,-3.353889,8.858591,1.792809,-9.942560,-7.230770,-0.600383,7.897464,-5.149944,-2.264331,2.465797,5.029822,5.764022,6.901996,0.099756,-5.754032,5.559967,1.598747,0.021360,9.906860,-5.510683,0.069185,-1.379711,7.108925,-1.223112,4.369504,4.182697,6.170607,0.559519,-3.736569,-9.073772,5.651733,-0.768050,-6.356225,2.904460,4.149302,-3.707875,-1.210342,6.912248,2.314724,-2.666943,-9.611698,-1.992984,-0.190764,-9.128066,-7.083188,7.934891,-7.805324,-2.443888,-7.083523,3.558193,8.897436,-0.622471,-8.577206,-2.673511,7.773902,-7.200899,-9.786007,-4.549793,5.442366,3.781494,3.096993,5.005803,-9.370470,-3.404311,8.954558,0.519477,1.904539,7.436500,9.695855,-4.453915,-0.234858,-2.799187,8.000009,8.635768,2.623172,-1.881293,4.733255,7.027281,8.443601,-8.479601,2.688847,-8.065427,1.692729,-4.968686,2.691154,-2.350214,6.322889,-3.928675,1.038684,4.607124,-8.592440,0.462543,6.052186,-2.876286,-4.642022,-1.107709,-7.492035,9.702109,-4.143059,-7.468592,-3.372470,5.696183,-7.439572,-4.668825,4.425367,-0.830938,8.516451,2.019469,-8.685312,6.257333,4.721008,-9.710832,-8.094332,5.425594,2.568316,-7.929302,-5.127813,-9.410781,2.801838,-5.281314,-3.366721,8.939766,-2.210598,0.055815,-7.499147,-9.878731,-7.457820,9.579182,-8.870480,1.835986,-6.962063,0.563147,2.395913,3.171022,-8.138669,3.940204,7.661655,-5.618456,0.693289,-1.090754,-6.911460,9.893375,-9.705478,-6.007070,-4.741556,-8.076738,2.460285,1.385615,2.610334,-0.579386,9.039961,2.272653,-3.980793,-2.083760,4.426223,6.860200,7.596805,-7.288958,5.777899,-9.236720,-1.170831,-7.754171,-3.283576,-4.377707,8.346890,9.783707,-5.230316,7.941710,-1.408330,-3.462047,-4.877639,-6.182831,7.913972,8.425671,8.482329,-2.259716,7.247202,8.713144,-6.508669,7.221811,-3.163096,-0.933904,4.540888,9.550480,-5.064161,3.594812,4.871533,-5.848370,-7.779968,8.579583,-4.882222,5.931261,5.634411,8.184073,-7.838732,9.410681,-1.772114,4.030069,6.636456,3.069345,2.695259,-9.103301,-6.754648,1.192676,8.093389,-7.230534,-9.982728,8.532950,4.753853,3.705927,3.159254,-0.761742,5.201002,-3.193584,2.095797,-2.788553,-6.187336,3.192963,3.129291,-1.636924,-7.225590,-8.664075,-7.689586,-2.537612,5.667414,-6.081838,-0.897830,-3.733346,-5.556974,-2.471186,-1.298792,-3.359481,3.727435,-7.351673,-4.979280,5.342531,5.307139,9.567328,1.841716,9.305732,-3.578238,-2.979641,2.014703,-1.713256,4.535120,1.043464,1.419907,-4.420426,1.419751,9.176148,7.562449,-3.754124,4.737686,2.332701,3.212299,8.056083,-3.279084,-1.165087,-2.219641,2.626619,6.984445,4.442297,5.336592,-5.896002,-7.600868,-2.976506,-8.615533,2.471397,1.991708,3.255390,5.241496,-5.262897,-4.961427,2.778378,9.993431,-4.486077,9.042609,2.671304,9.319733,-6.309845,2.945730,-6.909334,6.634742,9.953526,-0.566447,-6.924416,4.941501,2.759431,2.176807,-4.738206,3.876762,-2.039872,2.421034,1.543785,2.279020,-0.006803,5.220351,-0.409661,-6.622556,0.223094,-8.537269,3.361096,-6.333763,3.341088,7.078520,-1.774988,-2.258948,-8.860887,-1.301186,3.140723,0.883913,-5.649912,-1.844069,3.391894,0.442727,2.301437,-9.393830,4.536614,1.336819,8.259658,7.453943,9.869351,-2.854419,3.861449,-0.295038,-5.304469,-8.227450,-6.799038,9.179616,-4.617011,-9.626548,2.632643,-6.518070,5.865758,5.570892,-8.182295,-0.952384,0.987524,4.513993,5.399474,2.775193,0.141933,-2.896662,-6.289828,-4.289388,-1.923772,-0.570009,9.070528,7.178046,-0.702332,3.063333,1.289794,-0.733167,-0.030200,4.018386,6.595055,5.635693,-0.012049,-0.523725,-6.374871,9.722470,9.264087,-6.036821,-7.262229,7.092753,-6.694384,-8.593368,-8.046607,-7.724284,-9.814658,-1.655245,-4.959398,7.147443,-8.719887,7.447217,-9.632172,6.377878,-4.459176,-4.653667,1.022519,4.435075,8.980319,4.516026,6.514269,-2.327020,5.219690,6.724555,7.096623,7.949242,0.701913,-1.450019,9.780895,3.682893,0.699269,3.049938,-7.617077,-5.007299,-4.576295,0.134465,-8.561480,3.156284,2.432023,7.865382,9.891674,-8.129521,-8.001485,-5.767773,-1.191649,4.619319,-5.474932,0.626081,-9.137967,-0.959578,5.336991,-5.276683,6.874269,-5.928212,-2.810098,4.934135,-4.645546,-2.579969,-1.348007,-8.707382,1.897015,-5.781874,-1.132609,-2.154361,-7.221129,9.636372,-9.659015,8.451298,-8.794302,-6.049770,1.354799,-4.042871,8.537396,-8.774371,-2.275454,9.695627,6.888506,1.837363,6.368215,-5.395651,-0.652133,2.840552,8.793419,-5.987755,-6.084750,-0.572016,4.449315,5.434578,-5.378790,-2.917999,2.526849,-4.702300,-5.552819,-9.541335,4.707605,8.950712,4.643687,-8.896814,2.489875,-4.213816,-5.112240,4.065332,4.958877,-1.285839,1.847278,-6.198390,-2.418329,7.326830,-0.354095,-7.253404,-9.989238,0.032705,5.062235,-0.878134,5.160671,-0.105608,0.380370,1.122599,2.613908,-6.925837,-0.011357,4.584239,0.513339,2.499864,-8.473103,8.197202,2.215082,-7.551112,4.854730,8.548425,2.006796,-0.203835,-8.210662,-7.610914,0.493223,-7.469329,6.953642,5.588268,-9.853472,2.077476,-6.870088,6.270276,2.432832,-2.807603,-1.263481,3.222410,-0.574747,-7.098590,4.084195,-4.529229,-4.341038,1.323774,-7.920297,-5.731539,2.290550,5.121542,5.638743,-3.600980,5.397154,6.055552,-9.597858,7.315540,-4.279546,6.607162,-2.802585,-8.090846,-6.425632,1.293977,-8.505279,8.755587,4.290050,-7.402929,9.210277,4.409900,9.881680,-7.930241,-4.051947,-1.527281,-0.126993,-7.709845,2.156805,3.043676,-1.021383,-7.248720,-3.835886,8.099589,3.269697,-0.944530,-1.902578,0.883835,-6.313333,6.264075,0.836152,3.313938,-6.109206,5.460080,5.477823,9.996490,0.975379,-7.995035,-0.648205,5.889548,0.575926,-6.006190,3.684335,-4.522181,-3.772132,-5.500533,8.934566,0.182221,-6.544054,-8.560921,0.665325,5.504609,1.803970,-5.191841,5.720075,4.977311,-8.728752,-7.058592,8.971781,0.011622,5.592588,-6.816829,-3.210000,-7.338520,-2.829483,-7.938426,-8.680712,-4.063689,5.118681,7.933745,-7.223680,-1.569122,9.125397,-7.961428,5.901440,-4.985934,-0.568253,8.933483,-6.575804,6.171316,-0.125435,-2.986729,0.198563,7.388782,3.310917,-6.676695,0.445151,-1.289274,3.439996,-2.934947,4.103409,0.220922,6.833367,-2.113221,-6.027763,-3.029791,2.222451,-1.747775,2.483209,1.509250,-7.454989,-8.811102,-0.326735,-6.645451,3.000723,-8.938764,1.059528,-4.093770,0.812968,-8.935723,-1.804686,-6.904528,4.260363,0.187179,-3.177659,-4.339754,-2.110448,0.178095,3.658784], dtype = "float32")#candidate|7195|(1008,)|const|float32
call_7192 = relay.TupleGetItem(func_6110_call(relay.reshape(var_7193.astype('int16'), [30,]), relay.reshape(const_7194.astype('uint8'), [180,]), relay.reshape(const_7195.astype('float32'), [504, 2]), ), 4)
call_7196 = relay.TupleGetItem(func_6115_call(relay.reshape(var_7193.astype('int16'), [30,]), relay.reshape(const_7194.astype('uint8'), [180,]), relay.reshape(const_7195.astype('float32'), [504, 2]), ), 4)
func_6356_call = mod.get_global_var('func_6356')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_7197 = func_6356_call()
call_7198 = func_6356_call()
func_5884_call = mod.get_global_var('func_5884')
func_5886_call = mutated_mod.get_global_var('func_5886')
var_7200 = relay.var("var_7200", dtype = "float32", shape = (112,))#candidate|7200|(112,)|var|float32
call_7199 = func_5884_call(relay.reshape(var_7200.astype('float32'), [1, 7, 16]))
call_7201 = func_5884_call(relay.reshape(var_7200.astype('float32'), [1, 7, 16]))
bop_7224 = relay.not_equal(call_7188.astype('bool'), var_7193.astype('bool')) # shape=(30, 416)
bop_7227 = relay.not_equal(call_7189.astype('bool'), var_7193.astype('bool')) # shape=(30, 416)
func_6294_call = mod.get_global_var('func_6294')
func_6295_call = mutated_mod.get_global_var('func_6295')
call_7234 = relay.TupleGetItem(func_6294_call(), 0)
call_7235 = relay.TupleGetItem(func_6295_call(), 0)
output = relay.Tuple([call_7192,const_7194,const_7195,call_7197,call_7199,var_7200,bop_7224,call_7234,])
output2 = relay.Tuple([call_7196,const_7194,const_7195,call_7198,call_7201,var_7200,bop_7227,call_7235,])
func_7250 = relay.Function([var_7193,var_7200,], output)
mod['func_7250'] = func_7250
mod = relay.transform.InferType()(mod)
mutated_mod['func_7250'] = func_7250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7250_call = mutated_mod.get_global_var('func_7250')
var_7252 = relay.var("var_7252", dtype = "int16", shape = (30, 1))#candidate|7252|(30, 1)|var|int16
var_7253 = relay.var("var_7253", dtype = "float32", shape = (112,))#candidate|7253|(112,)|var|float32
call_7251 = func_7250_call(var_7252,var_7253,)
output = call_7251
func_7254 = relay.Function([var_7252,var_7253,], output)
mutated_mod['func_7254'] = func_7254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mod.get_global_var('func_6356')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_7265 = func_6356_call()
call_7266 = func_6356_call()
output = relay.Tuple([call_7265,])
output2 = relay.Tuple([call_7266,])
func_7282 = relay.Function([], output)
mod['func_7282'] = func_7282
mod = relay.transform.InferType()(mod)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7282_call = mutated_mod.get_global_var('func_7282')
call_7283 = func_7282_call()
output = call_7283
func_7284 = relay.Function([], output)
mutated_mod['func_7284'] = func_7284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_7356 = func_5954_call()
call_7357 = func_5954_call()
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_7368 = relay.var("var_7368", dtype = "float32", shape = (252,))#candidate|7368|(252,)|var|float32
call_7367 = func_1958_call(relay.reshape(var_7368.astype('float32'), [9, 4, 7]))
call_7369 = func_1958_call(relay.reshape(var_7368.astype('float32'), [9, 4, 7]))
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_7377 = relay.TupleGetItem(func_6805_call(), 0)
call_7378 = relay.TupleGetItem(func_6806_call(), 0)
output = relay.Tuple([call_7356,call_7367,var_7368,call_7377,])
output2 = relay.Tuple([call_7357,call_7369,var_7368,call_7378,])
func_7381 = relay.Function([var_7368,], output)
mod['func_7381'] = func_7381
mod = relay.transform.InferType()(mod)
var_7382 = relay.var("var_7382", dtype = "float32", shape = (252,))#candidate|7382|(252,)|var|float32
output = func_7381(var_7382)
func_7383 = relay.Function([var_7382], output)
mutated_mod['func_7383'] = func_7383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_7420 = relay.TupleGetItem(func_5781_call(), 0)
call_7421 = relay.TupleGetItem(func_5782_call(), 0)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_7450 = relay.TupleGetItem(func_6805_call(), 0)
call_7451 = relay.TupleGetItem(func_6806_call(), 0)
func_6447_call = mod.get_global_var('func_6447')
func_6448_call = mutated_mod.get_global_var('func_6448')
call_7455 = relay.TupleGetItem(func_6447_call(), 0)
call_7456 = relay.TupleGetItem(func_6448_call(), 0)
bop_7457 = relay.less(call_7420.astype('bool'), relay.reshape(call_7455.astype('bool'), relay.shape_of(call_7420))) # shape=(416,)
bop_7460 = relay.less(call_7421.astype('bool'), relay.reshape(call_7456.astype('bool'), relay.shape_of(call_7421))) # shape=(416,)
output = relay.Tuple([call_7450,bop_7457,])
output2 = relay.Tuple([call_7451,bop_7460,])
func_7464 = relay.Function([], output)
mod['func_7464'] = func_7464
mod = relay.transform.InferType()(mod)
output = func_7464()
func_7465 = relay.Function([], output)
mutated_mod['func_7465'] = func_7465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7477 = relay.var("var_7477", dtype = "float32", shape = (11, 10, 1))#candidate|7477|(11, 10, 1)|var|float32
uop_7478 = relay.atanh(var_7477.astype('float32')) # shape=(11, 10, 1)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
const_7486 = relay.const([-4,3,2,10,2,1,1,2,-4,-3,4,-4,-6,7,5,10], dtype = "int64")#candidate|7486|(16,)|const|int64
var_7487 = relay.var("var_7487", dtype = "int64", shape = (4, 12))#candidate|7487|(4, 12)|var|int64
call_7485 = func_188_call(relay.reshape(const_7486.astype('int64'), [2, 8, 1]), relay.reshape(var_7487.astype('int64'), [2, 8, 3]), )
call_7488 = func_188_call(relay.reshape(const_7486.astype('int64'), [2, 8, 1]), relay.reshape(var_7487.astype('int64'), [2, 8, 3]), )
output = relay.Tuple([uop_7478,call_7485,const_7486,var_7487,])
output2 = relay.Tuple([uop_7478,call_7488,const_7486,var_7487,])
func_7495 = relay.Function([var_7477,var_7487,], output)
mod['func_7495'] = func_7495
mod = relay.transform.InferType()(mod)
var_7496 = relay.var("var_7496", dtype = "float32", shape = (11, 10, 1))#candidate|7496|(11, 10, 1)|var|float32
var_7497 = relay.var("var_7497", dtype = "int64", shape = (4, 12))#candidate|7497|(4, 12)|var|int64
output = func_7495(var_7496,var_7497,)
func_7498 = relay.Function([var_7496,var_7497,], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7107_call = mod.get_global_var('func_7107')
func_7108_call = mutated_mod.get_global_var('func_7108')
call_7647 = func_7107_call()
call_7648 = func_7107_call()
var_7657 = relay.var("var_7657", dtype = "bool", shape = (9, 15, 11))#candidate|7657|(9, 15, 11)|var|bool
bop_7658 = relay.logical_xor(call_7647.astype('uint64'), var_7657.astype('uint64')) # shape=(9, 15, 11)
bop_7661 = relay.logical_xor(call_7648.astype('uint64'), var_7657.astype('uint64')) # shape=(9, 15, 11)
output = relay.Tuple([bop_7658,])
output2 = relay.Tuple([bop_7661,])
func_7667 = relay.Function([var_7657,], output)
mod['func_7667'] = func_7667
mod = relay.transform.InferType()(mod)
mutated_mod['func_7667'] = func_7667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7668 = relay.var("var_7668", dtype = "bool", shape = (9, 15, 11))#candidate|7668|(9, 15, 11)|var|bool
func_7667_call = mutated_mod.get_global_var('func_7667')
call_7669 = func_7667_call(var_7668)
output = call_7669
func_7670 = relay.Function([var_7668], output)
mutated_mod['func_7670'] = func_7670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_7886 = relay.TupleGetItem(func_5781_call(), 0)
call_7887 = relay.TupleGetItem(func_5782_call(), 0)
func_5745_call = mod.get_global_var('func_5745')
func_5749_call = mutated_mod.get_global_var('func_5749')
const_7893 = relay.const([5,3,2,4,1,-5,-10,-10,-3,-1,6,2,10,-9,6,-7,9,-6,3,-6,-6,3,-6,-9,6,4,1,5,6,4,-1,6,-1,2,4,8,1,-8,-6,7,-8,5,-7,-9,-6,8,6,-9,6,-2,-9,2,2,10,8,-2,-8,-4,-7,9,-7,-1,1,-1,1,-7,4,2,-9,5,-10,2,4,-3,2,-6,-1,4,-9,10,10,2,-7,1,-7,-3,-5,-4,-4,2,1,5,-5,5,-5,3,2,-9,-10,-7,9,5,-9,-3,-8,-7,2,-2,-2,-10,3,10,1,-6,-2,-1,5,6,-4,4,-3,2,4,2,-2,3,-8,-3,-4,1,2,-8,-7,-10,5,-3,-7,-6,9,-9,2,8,-4,-10,-10,6,-2,-8,1,10,-1,6,7,1,2,9,-9,-4,8,3,5,-9,-6,-8,4,-2,-2,-5,2,7,3,8,2,6,5,7,9,-1,-4,1,-8,5,3,8,-3,1,-10,-7,-8,4,2,-5,9,5,4,1,9,1,3,1,-6,-1,9,3,-3,-1,8,8,-4,1,1,10,-8,-3,-2,-9,7,9,2,-3,6,-3,-2,4,-6,-3,-6,8,-6,9,5,8,-1,-8,-8,-9,-7,-1,-3,-6,-9,-5,-2,3,4,-5,1,3,-2,-3,3,7,2,10,4,-4,3,-1,2,2,-5,7,4,-6,-2,-9,10,-5,-5,-10,9,3,5,6,8,-3,8,-7,-1,-9,1,-6,-5,7,-5,10,-1,5,-6,5,-2,-5,10,3,4,-2,1,7,-10,5,-1,1,-5,-10,-9,5,3,4,-1,-5,-8,-1,7,-4,-4,4,1,9,-2,-8,-6,-6,2,-2,-4,9,6,-10,2,1,2,-1,-1,-10,-1,-7,3,8,3,2,9,-1,3,-7,7,1,1,2,-6,8,3,6,9,5,4,-9,-9,5,2,-1,9,-8,-5,4,-5,1,-8,-7,-9,-8,10,-5,8,2,-3,8,-6,2,-9,5,1,-3,10,-7,-2,3,2,10,-7,1,7,2,8,-5,10,-10,-5,-1,4,-6,-3,-6,-7,7,1,6,7,-1,1,1,-5,4,5,7,-3,6,1,1,10,-4,5,-9,9,5,-6,-3,7,-3,3,4,2,-4,-3,3,-4,-6,-8,-9,-5,-6,1,1,7,2,5,-9,-9,-2,-7,-8,3,-10,-7,9,-3,2,-6,-4,9,4,6,-1,-6,7,-7,6,7,4,-7,7,-9,6,3,8,-7,-8,-6,6,-3,5,8,-1,-9,2,-7,8,9,1,1,6,10,1,-2,-7,-1,-4,-8,-7,-1,5,-7,3,-4,-8,2,4,-7,-9,5,-5,-2,7,-7,9,3,-5,6,10,2,6,3,9,7,10,-6,10,7,10], dtype = "int64")#candidate|7893|(528,)|const|int64
var_7894 = relay.var("var_7894", dtype = "int64", shape = (8, 2))#candidate|7894|(8, 2)|var|int64
var_7895 = relay.var("var_7895", dtype = "int64", shape = (48,))#candidate|7895|(48,)|var|int64
call_7892 = relay.TupleGetItem(func_5745_call(relay.reshape(const_7893.astype('int64'), [528,]), relay.reshape(var_7894.astype('int64'), [16,]), relay.reshape(var_7895.astype('int64'), [48,]), ), 3)
call_7896 = relay.TupleGetItem(func_5749_call(relay.reshape(const_7893.astype('int64'), [528,]), relay.reshape(var_7894.astype('int64'), [16,]), relay.reshape(var_7895.astype('int64'), [48,]), ), 3)
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
const_7925 = relay.const([-7.616291,5.982571,9.251196,8.716804,-9.637558,-8.380662,0.847496,1.554383,-9.662291,0.388690,-6.213241,1.717189,-3.179040,5.017955,2.198418,8.356264,9.097250,-4.437274,8.972133,6.735076,2.771577,-5.766557,-2.096167,8.712007,7.359912,5.337446,-4.568002,-7.615600,6.725982,-6.404755,2.162239,6.900216,8.608975,2.691382,6.091582,-4.246867,-5.145946,-6.746017,-8.230659,-5.650063,-1.308342,5.364291,-0.166201,0.449606,-1.693096,-5.099795,-1.381656,-0.021056,4.291118,-8.912910,-1.811627,-1.446356,2.733498,2.318212,-5.304928,-6.649194,-8.130760,5.105194,3.190958,-0.089792,6.593416,9.660061,-3.334577,0.451021,0.410975,6.534462,-7.829975,8.022186,-0.676436,8.311984,-4.346034,9.419828,-0.646918,0.787252,-1.245677,3.173598,-7.300084,6.698412,-5.845538,-8.643465,-9.010905,-8.103412,8.228623,-1.734314,-3.783255,6.914224,1.342597,8.411789,8.154676,-4.718165,7.905937,7.629291,-6.060237,-1.572513,9.530453,6.496881,-6.092085,-9.628334,9.812744,8.456604,2.406849,-6.910827,-9.098042,-1.174801,-1.908926,6.944419,-6.041964,0.817131,8.684456,0.741880,-7.175382,-9.233876,-6.042920,8.921234,2.842150,-0.367220,6.053976,-8.035291,-5.192693,6.998372,6.704998,-1.837338,-6.409696,-5.904221,-1.618159,-8.946717,-3.538087,5.236311,-2.864026,-8.706934,-7.991031,-1.280676,9.320059,9.621106,1.652857,-2.345114,4.162118,-3.405519,-4.654965,9.065248,-8.511383,-4.728306,-1.882754,-0.462628,-7.567219,-8.146729,8.784139,-5.430708,4.712107,-3.164604,-1.548815,0.784165,-0.918979,5.586061,9.382967,2.809886,1.823386,-1.639136,9.552018,-5.470881,-4.800964,-0.341474,4.594583,-6.690071,-4.370545,7.577470,-6.310155,-3.969742], dtype = "float32")#candidate|7925|(168,)|const|float32
call_7924 = func_26_call(relay.reshape(const_7925.astype('float32'), [8, 3, 7]), relay.reshape(const_7925.astype('float32'), [8, 3, 7]), )
call_7926 = func_26_call(relay.reshape(const_7925.astype('float32'), [8, 3, 7]), relay.reshape(const_7925.astype('float32'), [8, 3, 7]), )
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
var_7930 = relay.var("var_7930", dtype = "float32", shape = (1008,))#candidate|7930|(1008,)|var|float32
call_7929 = relay.TupleGetItem(func_3188_call(relay.reshape(var_7930.astype('float32'), [12, 7, 12])), 0)
call_7931 = relay.TupleGetItem(func_3190_call(relay.reshape(var_7930.astype('float32'), [12, 7, 12])), 0)
output = relay.Tuple([call_7886,call_7892,const_7893,var_7894,var_7895,call_7924,const_7925,call_7929,var_7930,])
output2 = relay.Tuple([call_7887,call_7896,const_7893,var_7894,var_7895,call_7926,const_7925,call_7931,var_7930,])
func_7942 = relay.Function([var_7894,var_7895,var_7930,], output)
mod['func_7942'] = func_7942
mod = relay.transform.InferType()(mod)
var_7943 = relay.var("var_7943", dtype = "int64", shape = (8, 2))#candidate|7943|(8, 2)|var|int64
var_7944 = relay.var("var_7944", dtype = "int64", shape = (48,))#candidate|7944|(48,)|var|int64
var_7945 = relay.var("var_7945", dtype = "float32", shape = (1008,))#candidate|7945|(1008,)|var|float32
output = func_7942(var_7943,var_7944,var_7945,)
func_7946 = relay.Function([var_7943,var_7944,var_7945,], output)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7948 = relay.var("var_7948", dtype = "uint16", shape = ())#candidate|7948|()|var|uint16
var_7949 = relay.var("var_7949", dtype = "uint16", shape = (16, 1, 11))#candidate|7949|(16, 1, 11)|var|uint16
bop_7950 = relay.minimum(var_7948.astype('uint16'), var_7949.astype('uint16')) # shape=(16, 1, 11)
output = bop_7950
output2 = bop_7950
func_7979 = relay.Function([var_7948,var_7949,], output)
mod['func_7979'] = func_7979
mod = relay.transform.InferType()(mod)
var_7980 = relay.var("var_7980", dtype = "uint16", shape = ())#candidate|7980|()|var|uint16
var_7981 = relay.var("var_7981", dtype = "uint16", shape = (16, 1, 11))#candidate|7981|(16, 1, 11)|var|uint16
output = func_7979(var_7980,var_7981,)
func_7982 = relay.Function([var_7980,var_7981,], output)
mutated_mod['func_7982'] = func_7982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_8034 = relay.TupleGetItem(func_5802_call(), 0)
call_8035 = relay.TupleGetItem(func_5803_call(), 0)
output = call_8034
output2 = call_8035
func_8039 = relay.Function([], output)
mod['func_8039'] = func_8039
mod = relay.transform.InferType()(mod)
output = func_8039()
func_8040 = relay.Function([], output)
mutated_mod['func_8040'] = func_8040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mod.get_global_var('func_5627')
func_5628_call = mutated_mod.get_global_var('func_5628')
call_8051 = relay.TupleGetItem(func_5627_call(), 0)
call_8052 = relay.TupleGetItem(func_5628_call(), 0)
output = relay.Tuple([call_8051,])
output2 = relay.Tuple([call_8052,])
func_8061 = relay.Function([], output)
mod['func_8061'] = func_8061
mod = relay.transform.InferType()(mod)
mutated_mod['func_8061'] = func_8061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8061_call = mutated_mod.get_global_var('func_8061')
call_8062 = func_8061_call()
output = call_8062
func_8063 = relay.Function([], output)
mutated_mod['func_8063'] = func_8063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6906_call = mod.get_global_var('func_6906')
func_6907_call = mutated_mod.get_global_var('func_6907')
call_8087 = relay.TupleGetItem(func_6906_call(), 0)
call_8088 = relay.TupleGetItem(func_6907_call(), 0)
const_8093 = relay.const([[[-1.928925,-3.181589,0.354787,-1.502251,-8.971424,-3.403399,9.156263,3.884738,-4.670554,-1.068650,-1.770400],[0.718436,-3.876375,1.080851,1.149479,-2.158710,7.114552,0.076908,-6.405610,-3.062614,1.056655,9.708993],[-8.583083,-1.482039,-1.229473,1.864117,-5.014737,3.032353,3.252078,-6.708869,5.935767,-5.350597,-7.461076],[4.208473,4.928847,5.351365,4.361461,7.961914,-7.161633,-3.060503,-3.164873,7.312476,-9.620339,8.821559],[3.718339,-0.542245,-5.682936,-1.742808,-5.536522,-0.804204,7.438012,4.929034,-1.929989,-7.640452,-7.130159],[7.573397,4.990334,2.432902,2.315345,7.175256,-5.253393,5.587061,-9.106078,8.483183,0.824834,-7.585921],[-9.962406,4.441952,-8.891987,6.723950,-9.277892,8.462568,3.928384,9.711968,2.194603,3.789601,5.371416],[-5.734506,-5.008188,-6.950660,8.059135,-7.550301,-9.012303,-9.372114,-1.264724,4.771206,-7.425286,-1.275534],[0.310008,-7.849488,-2.861656,2.471878,-3.715221,1.593953,2.982140,8.815131,-8.520816,-3.067084,5.690934],[9.569996,-0.180239,5.459073,6.415329,-6.931486,4.898728,5.795038,1.122580,3.541710,-5.172150,-3.982851],[4.647795,8.908904,-8.826674,-6.059357,-3.840887,8.571642,7.059482,-5.356599,-4.362155,9.806385,5.930728],[2.452056,2.951779,6.757647,4.508304,-3.711282,4.674519,-9.930409,9.611114,8.516948,-5.009935,7.305043],[3.201939,-4.289643,-8.408963,-0.906777,-2.209297,-5.363221,-9.427366,9.404702,-7.601414,-3.524537,6.770817],[9.656525,-0.178883,8.619615,9.569737,-1.911258,-8.344527,-4.807795,-1.900633,-5.549969,-1.380225,3.978341],[-0.968524,-2.742524,-0.954494,-9.111476,5.444203,-1.211154,1.578237,-2.411287,-4.278366,5.427323,6.127971]],[[-8.470259,-7.239531,-4.409602,5.576106,-8.843459,-6.938711,-7.467290,8.964485,2.419511,-2.991283,-7.569200],[4.751593,-1.323640,3.004456,-8.900424,8.253375,2.977269,7.804413,-8.836592,3.473140,4.376698,6.440861],[-4.140567,-1.784999,4.166988,7.551711,-4.248827,-9.016942,0.637424,1.979613,-0.512398,-8.557592,-4.141921],[6.661124,-4.260411,6.563682,0.370850,-8.815331,-6.487794,9.136072,1.043107,6.898481,8.775249,3.344532],[-5.451452,-9.308932,0.356163,-1.543473,-7.589497,3.313424,-3.879136,-4.745924,3.761872,9.309288,-5.796206],[-6.542978,9.522051,4.222006,3.526840,2.973135,6.773063,8.899710,-0.490460,8.853766,7.150540,-7.268807],[7.984147,3.703482,4.647440,-8.487487,2.873409,3.814213,6.718629,1.898152,5.908858,-1.184706,-2.504767],[-8.276694,5.197804,-4.006112,-1.689208,-7.369121,0.886750,-5.447212,-0.697730,-8.477161,0.378561,-1.614758],[6.536742,-0.746760,9.129447,8.015507,-6.924459,-2.282859,0.503197,-1.501172,8.871454,-8.850801,8.926925],[4.023872,0.101268,2.577240,-9.764041,2.523871,-5.362938,-5.329425,-1.237586,3.502651,0.463697,-9.904700],[-5.117447,-6.802593,7.303662,5.051474,-7.082750,-2.725772,-3.074817,-5.201378,-7.595683,-5.486928,8.474306],[-0.118063,4.464628,-8.041227,8.712779,9.289779,-7.405145,-8.009346,-9.013670,-8.759463,-2.404754,7.100503],[-5.916652,5.224345,7.080664,2.297156,0.086002,6.189532,-0.961884,4.297570,-4.842603,2.710670,8.234215],[8.853074,0.891989,-0.578798,-1.190071,3.218407,4.538581,3.476089,-4.951509,-0.275803,-6.861865,-2.287552],[6.723192,7.938514,4.301234,-9.514999,-7.011191,-0.785133,3.723492,2.558935,-2.733949,1.947128,-7.362993]],[[9.696929,1.768300,-9.563676,8.900666,-8.744567,-0.026849,-8.642965,6.849065,-2.707935,-7.664653,6.068145],[1.345183,-0.508385,5.943320,-7.269119,-9.738772,5.659663,5.881796,-1.296506,-7.169640,8.350468,-6.621619],[-9.655120,4.314917,2.079870,-8.567987,7.812571,4.298862,7.972609,9.259767,-8.390612,5.799318,-7.280476],[2.979496,4.604261,4.351482,5.885013,3.196739,9.524212,-5.011238,-8.341857,-0.738088,1.746423,7.093399],[-8.799907,-1.870232,1.728709,-7.625061,-4.233709,-0.459324,-2.668387,-0.198546,9.559164,4.187718,-8.938228],[2.033821,-6.675238,8.681250,7.927533,1.902807,2.320658,4.219263,4.552761,-1.408731,1.191941,-4.965852],[0.428217,9.588157,-5.739063,1.319479,7.682064,0.945147,-2.041299,7.456167,-5.481510,-2.030443,-8.101454],[-9.150913,4.399846,0.001597,3.177393,-8.587051,-6.448888,4.497655,0.834336,-7.904915,3.845864,-4.459209],[-0.849673,7.502380,-8.006954,-4.363504,4.998768,3.264585,-2.012252,-0.234084,-1.719653,-7.029174,-5.540421],[7.581586,-4.978308,-0.117921,8.386278,-9.358262,-7.327083,-5.401965,3.695772,1.216618,9.847485,3.330179],[1.120483,3.685582,4.238787,8.202034,7.151744,6.901624,-8.132116,9.947953,-5.420223,4.735539,-5.274712],[-0.501151,-8.326098,-8.247373,-7.249006,8.800080,6.202773,7.475430,-0.316594,6.083600,5.418873,-2.144007],[-4.799676,3.175010,1.570295,-5.881871,0.756652,6.087608,-1.343809,9.701059,7.018242,3.669109,-5.962556],[2.292324,8.234832,-6.829697,5.925635,-6.636988,3.528232,1.833736,-8.378012,-3.890367,-3.053699,3.173462],[4.760399,4.303686,-2.064576,-8.035074,8.432229,9.127968,-9.323206,7.768443,-9.190200,6.159085,5.323623]],[[-1.589626,-4.203411,9.457357,-6.079175,-8.628006,-7.789933,8.938025,-5.103397,3.760899,2.660931,-2.778212],[-3.796685,-5.286078,2.490308,-7.714167,-8.487492,-0.657842,2.767869,4.857839,-3.500313,-2.986174,6.575491],[5.166485,7.321346,4.147117,-6.110637,-1.598191,7.353084,7.452036,-2.541968,7.453644,6.056832,-9.073369],[-2.807631,-5.972989,9.973376,7.903082,-6.884002,-9.855638,9.730098,5.351503,7.091908,-5.030765,-1.642023],[4.814394,-8.855909,4.895045,-8.129837,-7.021062,2.510438,1.464887,4.995975,5.459912,-8.773774,6.106566],[0.627719,1.273453,-2.335219,3.738292,7.731006,-2.689073,2.475701,4.598426,0.382630,-3.620348,9.694638],[1.905311,-8.825191,-8.258652,-1.857985,-3.931612,-4.476149,-2.190733,-2.591819,5.946305,-1.104695,2.839192],[7.932891,2.240400,-8.371147,1.165088,4.943721,0.581361,2.853742,-4.556332,8.752639,2.738806,-0.325906],[9.883035,8.410364,6.285917,-5.390487,-8.485026,5.061035,-5.263067,7.896096,7.012761,-1.358891,7.048933],[1.119286,4.079181,-3.331506,-8.213602,-4.972205,2.677405,8.879054,3.766401,3.298265,4.295606,1.485606],[8.607018,-3.143870,6.268994,3.192249,-7.374448,0.812515,3.090424,3.988905,-1.895215,2.518477,3.291123],[-7.222228,-9.573535,-2.287686,9.371252,4.502529,9.444034,9.368584,-8.211774,4.074199,1.886023,-5.106111],[-9.987566,5.081560,7.436115,5.141923,1.705065,2.376004,0.342314,7.864330,0.306762,8.559415,-7.001244],[-5.386013,6.996564,-3.325151,-7.503708,-4.710838,-9.234881,6.176817,-6.754874,-6.250729,0.547001,-4.806289],[-7.229734,7.144512,-4.673299,-4.929928,7.589964,-7.054483,-7.159103,-8.058363,3.322007,0.060752,-3.633994]],[[-2.700145,6.886990,-1.216974,-9.464565,-4.745299,-6.867989,0.850327,-4.757759,-3.823833,-5.492293,9.755508],[6.804046,6.262916,-5.541931,-5.452461,9.779142,5.260247,5.150355,6.065795,-3.722298,-7.313348,8.983518],[-7.813886,5.551565,-9.717083,4.624916,-1.971125,8.406280,1.732102,9.251849,-5.737005,-1.790845,0.829938],[5.078543,-0.588744,-4.759195,-5.219778,-7.944433,-7.577792,5.559430,6.073300,-7.770289,2.135543,7.878487],[7.266359,-8.372660,0.903370,2.923746,3.137201,-6.912892,8.801335,-9.125203,-9.060703,-7.871256,2.144790],[2.010426,-2.895768,-6.886906,9.675803,-9.624141,-8.589837,-5.025650,-2.457057,4.238509,-4.336006,1.128046],[-6.968588,-2.323705,-7.053729,0.768961,-4.545041,-7.868502,-6.697620,9.153986,-8.478092,-9.883230,-3.596314],[-9.321000,4.032140,-3.673121,1.860953,9.951173,-5.734600,0.332235,-0.320193,-9.626443,8.577845,3.998480],[0.550472,-6.210539,-2.774956,3.966140,0.424580,8.132493,7.947217,2.268586,7.459436,-2.129619,-9.862328],[-4.360775,4.532385,5.638964,1.206094,-3.476711,2.264569,-5.901989,-4.005611,6.616106,-1.602385,-6.427325],[-5.410857,-9.625290,-8.123894,6.975368,-4.050472,5.715169,-2.759644,0.376453,3.836575,4.631768,-5.463801],[-1.192341,4.031698,-2.207380,2.069689,3.743974,-2.536156,2.780265,-4.862276,7.080463,8.392306,-5.774915],[-7.626507,4.671515,-6.476895,-9.322228,2.440879,8.889703,-7.874650,-1.324464,-2.344602,-6.245013,7.838882],[5.879726,-0.391977,9.161010,6.276724,-4.873577,9.928522,7.924061,-1.586001,-0.664898,-5.695712,-0.968908],[6.563966,-0.843895,-0.089041,4.688190,8.568101,8.600378,5.364728,5.185220,7.769208,-8.886042,2.787896]],[[-1.938715,-7.578514,4.970540,-4.413356,6.038570,-4.303698,2.756381,-5.423119,1.467419,0.332982,-3.210557],[7.344190,9.208253,4.568046,6.167808,5.426239,-8.167046,-3.697721,-2.584616,6.616014,-3.654634,-4.365793],[-3.174935,-9.071772,-1.957929,-2.173886,0.423039,-5.880660,-4.173602,-9.226477,-1.383044,1.944889,3.738304],[4.423315,-1.776057,-4.286962,-5.400306,-2.066240,5.998335,-8.327848,-2.578330,-7.057114,-5.661322,-9.875681],[-1.509094,-7.711889,-0.481016,1.631299,0.536267,-2.225508,8.839614,4.890930,1.186701,-2.989892,-5.295486],[-0.325900,-9.120384,-3.948414,5.854218,7.411641,-4.735837,-4.076410,-4.513811,-4.550523,-9.253816,2.460427],[2.167182,-0.085846,4.583553,-9.286656,3.647281,-9.585482,2.582582,6.358024,-4.359583,7.385718,-8.737884],[0.194999,9.719684,4.866486,-4.824867,-8.760343,2.204141,-0.189156,0.658615,-4.227142,1.673342,-3.649763],[-2.964940,4.515412,6.047972,6.406802,2.886733,-5.946062,-8.289198,-8.628918,-2.361931,2.151274,8.496774],[-0.111548,-0.139224,-0.389891,-6.206202,-6.250719,-9.399309,9.454823,-1.088653,6.708408,9.846522,5.120561],[2.665292,7.368198,-1.345865,2.700312,-2.951406,-9.298410,4.239070,1.835269,-1.313484,-5.244672,6.839597],[-9.178006,-0.571288,6.947518,2.154243,8.099526,4.346548,-9.354560,7.697221,9.798816,-4.527693,-7.199004],[-8.992321,3.733280,-7.139133,7.134314,1.004645,7.391930,-4.901860,1.222636,8.611418,-5.660404,7.018522],[-1.068525,8.036479,9.674489,-5.621561,6.010763,8.128530,4.317560,-4.610644,4.038042,-0.373117,5.423562],[-8.666371,-2.184626,3.610520,-9.547381,5.714568,-4.769998,-1.960958,-4.714327,1.179808,-0.235491,-9.747222]],[[-8.933666,-1.182667,-9.699456,1.094112,8.652595,4.391504,7.647029,6.807613,8.375929,3.756263,9.488278],[7.793876,-6.419576,0.288854,4.445879,-9.455151,-7.888408,-9.285709,4.132294,-7.595595,8.083524,-7.435793],[-6.807664,-5.991777,-2.237663,4.787249,5.164740,-1.991375,-3.164460,-3.314336,3.196853,0.075633,-9.126260],[9.041147,7.812407,-7.823669,1.010214,-0.452009,-2.041459,2.419765,-8.203906,-4.741537,-8.233980,8.302955],[-6.847466,-8.185165,-2.447319,6.587095,0.005004,-3.061567,-6.280497,4.985473,9.878212,-7.706280,-1.651803],[-8.705593,-7.726726,1.989293,5.048610,5.682310,-5.933320,-7.571004,-7.691116,2.910192,-0.563718,-1.048027],[1.282817,-5.538791,1.093625,-8.463379,-0.865012,-1.096250,-2.215760,8.703917,-9.519250,2.777919,2.731975],[9.812676,-3.312445,0.977539,-4.628793,6.045352,-1.778929,-3.588421,-0.415369,3.100590,-0.310322,-4.523889],[0.565185,-5.810876,-8.647599,2.589062,7.603376,1.390781,0.328869,-3.694314,7.153490,4.974941,8.590242],[4.371819,3.658577,8.268779,5.824261,-9.906678,0.152290,-4.830281,-4.883852,1.644999,5.187557,3.462290],[-7.918059,-9.714487,-3.203144,5.416471,-4.959392,1.446435,0.765944,2.398611,-7.155333,-5.875259,-2.897048],[-4.502918,-8.338248,3.532187,-2.868182,-9.300822,-7.057245,-6.257462,5.799398,5.376613,7.082570,1.546091],[9.752815,5.058182,-8.000807,8.104061,-2.453922,6.483470,-9.063682,-2.912649,-2.595698,4.828167,-9.537906],[7.702265,9.525814,6.903469,3.935573,1.983706,0.742549,9.863452,-7.815739,-7.551693,-4.489973,4.731625],[-5.023254,0.648202,6.227963,-2.440982,1.668285,0.350463,-8.597025,7.767090,4.503204,-2.212036,3.814309]],[[-6.640831,-8.569751,-2.953742,-0.764076,7.029327,-1.096952,7.756307,7.383657,2.555411,9.148211,7.998598],[7.617574,-6.401885,-3.745366,1.449474,-9.099832,6.691959,-6.533063,7.879000,-7.799657,-8.758082,0.666366],[-6.291591,4.023181,3.793534,-8.263780,-5.718758,8.672612,-5.824770,1.693524,1.666764,2.695053,-6.876070],[2.819498,-6.880630,0.570959,-6.174304,3.281007,6.122183,-6.529618,1.300344,-1.792941,-2.261772,-9.574735],[8.490799,-3.418563,7.415364,1.995457,0.508983,3.384587,-9.993158,-0.927952,-0.555928,3.993183,-8.805237],[-4.883049,-9.679435,1.584412,3.477330,1.456655,0.379877,8.342490,9.773323,0.880271,0.523757,3.613224],[2.092222,-5.387455,8.653613,2.547019,7.460955,3.560056,-4.706572,-2.934519,3.478302,-5.538964,6.766696],[4.640487,5.886704,-1.845798,-4.704450,-1.521891,4.669981,7.531261,6.637591,2.465008,-9.315189,-1.714443],[5.943584,-6.993435,4.988860,-8.489030,7.268506,0.223395,-7.955291,4.756269,2.088403,-1.459369,5.050404],[5.613353,-0.301645,2.264880,-5.797254,-2.301225,3.273183,-2.653794,3.437458,8.875285,-5.642181,6.290552],[-9.784692,6.202512,1.338521,2.935977,7.459959,0.437820,7.619660,6.888207,-4.967305,4.857998,-3.538271],[-4.746852,-3.674365,-7.912351,5.766758,0.191173,3.703735,6.015181,-2.765873,6.101777,-4.711328,-1.854795],[3.663990,6.561531,3.984689,7.591069,-8.857301,2.119260,-1.686070,6.697017,-6.951330,1.611379,-4.477894],[-8.536142,4.488940,-5.983682,-8.133573,5.901924,-9.360735,6.197036,-1.761148,-9.096123,1.640668,4.651941],[6.822768,2.819285,-8.769835,3.169318,1.421436,3.474011,3.799230,-9.818196,-5.659736,-6.165983,-6.838161]],[[-8.014581,-0.161825,7.802082,8.127277,8.283299,-1.561332,-1.048919,-2.511772,7.869605,5.056403,-6.009912],[-5.821515,-8.775230,2.979332,-2.433914,-5.350895,-0.488975,9.544850,-8.755767,-3.155067,7.803365,-9.202512],[5.427618,-3.079681,0.973008,-7.296189,-5.632317,-7.163599,4.962246,3.196193,-3.777323,5.568927,4.451089],[-2.940716,8.016206,2.514478,4.769577,-3.008257,-0.492444,2.188976,-0.359809,-4.633247,8.243295,0.371236],[-5.652778,-9.041750,-1.500012,3.726868,-3.940637,-5.280756,-9.526522,-7.340906,3.355640,0.946385,2.857956],[9.736777,-6.690973,2.739173,1.171490,-1.067477,8.149501,-6.042693,-4.634774,9.292996,3.854614,-6.455689],[-6.352032,-6.627902,3.239404,6.826024,-9.835314,-7.475237,-3.527641,-2.911905,-9.450973,7.005108,2.417653],[-5.298449,3.976989,-9.458293,1.178142,0.891123,-5.811822,4.022138,0.276162,-9.662758,-8.384427,-4.746051],[-4.080322,-6.017933,1.945516,9.778048,9.352498,1.289542,8.657501,0.761245,-4.913583,-6.811116,-5.225586],[0.156959,7.133544,-9.463119,-6.949946,-2.808766,9.495895,-1.603112,6.058061,-4.304890,8.607973,6.029140],[6.578021,0.117604,2.628939,-9.646043,1.213514,7.331170,-3.293926,-9.570949,-0.301778,8.735569,4.968241],[1.154436,9.771890,1.980065,0.086816,-1.599522,-3.777402,-0.170441,1.916241,9.198559,-2.044036,7.285249],[-3.922220,-2.124911,6.875233,6.859354,2.579439,6.955584,-6.228199,3.328131,7.627092,-7.324308,8.219079],[-4.338550,-4.320666,6.599078,-5.169472,9.538947,3.704175,-6.939899,3.802769,1.005104,-1.979079,-0.588661],[-8.655711,-7.267167,3.310214,0.210372,3.023133,6.021723,9.300927,8.491295,-9.585830,0.426801,-3.579376]]], dtype = "float64")#candidate|8093|(9, 15, 11)|const|float64
bop_8094 = relay.equal(call_8087.astype('bool'), const_8093.astype('bool')) # shape=(9, 15, 11)
bop_8097 = relay.equal(call_8088.astype('bool'), const_8093.astype('bool')) # shape=(9, 15, 11)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_8109 = relay.TupleGetItem(func_6636_call(), 0)
call_8110 = relay.TupleGetItem(func_6638_call(), 0)
output = relay.Tuple([bop_8094,call_8109,])
output2 = relay.Tuple([bop_8097,call_8110,])
func_8119 = relay.Function([], output)
mod['func_8119'] = func_8119
mod = relay.transform.InferType()(mod)
mutated_mod['func_8119'] = func_8119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8119_call = mutated_mod.get_global_var('func_8119')
call_8120 = func_8119_call()
output = call_8120
func_8121 = relay.Function([], output)
mutated_mod['func_8121'] = func_8121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6892_call = mod.get_global_var('func_6892')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_8142 = relay.TupleGetItem(func_6892_call(), 0)
call_8143 = relay.TupleGetItem(func_6893_call(), 0)
output = relay.Tuple([call_8142,])
output2 = relay.Tuple([call_8143,])
func_8144 = relay.Function([], output)
mod['func_8144'] = func_8144
mod = relay.transform.InferType()(mod)
mutated_mod['func_8144'] = func_8144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8144_call = mutated_mod.get_global_var('func_8144')
call_8145 = func_8144_call()
output = call_8145
func_8146 = relay.Function([], output)
mutated_mod['func_8146'] = func_8146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8119_call = mod.get_global_var('func_8119')
func_8121_call = mutated_mod.get_global_var('func_8121')
call_8155 = relay.TupleGetItem(func_8119_call(), 1)
call_8156 = relay.TupleGetItem(func_8121_call(), 1)
output = call_8155
output2 = call_8156
func_8161 = relay.Function([], output)
mod['func_8161'] = func_8161
mod = relay.transform.InferType()(mod)
output = func_8161()
func_8162 = relay.Function([], output)
mutated_mod['func_8162'] = func_8162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_8240 = relay.TupleGetItem(func_5802_call(), 0)
call_8241 = relay.TupleGetItem(func_5803_call(), 0)
output = relay.Tuple([call_8240,])
output2 = relay.Tuple([call_8241,])
func_8251 = relay.Function([], output)
mod['func_8251'] = func_8251
mod = relay.transform.InferType()(mod)
output = func_8251()
func_8252 = relay.Function([], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_8255 = func_6426_call()
call_8256 = func_6426_call()
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_8263 = func_6426_call()
call_8264 = func_6426_call()
func_6740_call = mod.get_global_var('func_6740')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_8268 = relay.TupleGetItem(func_6740_call(), 0)
call_8269 = relay.TupleGetItem(func_6741_call(), 0)
output = relay.Tuple([call_8255,call_8263,call_8268,])
output2 = relay.Tuple([call_8256,call_8264,call_8269,])
func_8278 = relay.Function([], output)
mod['func_8278'] = func_8278
mod = relay.transform.InferType()(mod)
output = func_8278()
func_8279 = relay.Function([], output)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6170_call = mod.get_global_var('func_6170')
func_6172_call = mutated_mod.get_global_var('func_6172')
call_8302 = relay.TupleGetItem(func_6170_call(), 0)
call_8303 = relay.TupleGetItem(func_6172_call(), 0)
func_3807_call = mod.get_global_var('func_3807')
func_3811_call = mutated_mod.get_global_var('func_3811')
const_8317 = relay.const([-3.243161,2.453003,6.719044,-9.674619,-8.653172,3.347792,-2.576108,-9.713997,5.189528,-4.914896,9.098012,-7.851004,-4.900564,-8.375178,-7.643418,-5.267085,-2.364861,-9.347490,5.437706,9.721996,-7.653398,-5.473354,-0.788446,2.867335,-9.223017,-5.826345,-8.433941,4.339052,-4.527589,-8.182664,5.333192,3.026696,3.264864,9.990960,-8.873229,-1.224638,4.542881,4.353335,0.454075,2.509052,-6.853821,6.244417,4.404248,-3.154859,-6.001393,-4.875108,7.920249,7.491735,-8.266324,-8.453677,9.578481,2.217978,7.337492,1.169165,0.755624,-0.537258,-9.120231,-1.944142,-0.434497,0.266593,7.493689,-5.320367,2.175869,2.928132,-2.133440,-8.499241,8.195798,1.669836,0.478716,5.154398,7.101731,-8.981881,-7.124847,4.896963,9.985259,6.133392,5.217271,-8.168370,-7.325544,-7.631022,1.041942,-3.944100,-0.471401,1.225993,-2.365838,-7.242555,1.355752,5.899898,8.530015,-1.390871,3.536130,2.572951,-6.597067,6.457570,-8.272077,7.419202,0.011435,-8.346011,8.224361,8.801577,-0.551169,-2.736370,-2.139491,1.012389,-5.795000,3.156213,-7.615540,-6.942405,-9.092802,5.067705,0.294530,-4.736074,-3.672996,-1.667256,-0.698257,-7.636590,9.934383,-6.247543,-3.295997,6.154817,-3.065090,5.709859,-4.538124,4.080593,5.960844,7.080949,0.666862,2.076387,-8.027635,-3.469213,7.295603,9.022285,9.290338,4.428032,-9.750570,-8.246669,4.709319,4.958774,-7.268130,-5.355352,2.607954,-6.483428,2.989720,-0.314184,-4.644525,-8.824159,6.559265,-3.948440,-1.539655,8.966379,4.857409,3.588077,4.264499,-8.761011,1.938613,7.955472,-4.397911,4.211347,-3.877467,0.107665,-9.852516,-2.333780,0.225065,-1.725975,-9.221370,-2.572521,-8.098270,-3.126127,-1.098903,3.213482,3.294174,-7.437350,-8.963268,6.593072,-0.763873,2.889856,1.561110,-2.554745,9.544966,-7.479379,-0.498661,2.993482,-3.207822,-9.893671,-6.209670,-5.290604,5.640677,8.013947,-9.720252,-4.753812,1.198761,-9.649707,3.991914,8.983491,4.263622,6.917326,8.324264,-1.815904,-2.334229,-4.825600,-8.821543,6.169936,-2.954510,-0.441498,7.309962,6.755801,-4.106505,7.095209,-6.601553,-6.742396,-3.844460,-6.912412,-4.219082,5.774562,9.798285,9.083509,-3.976449,7.538958,5.465822,-1.070431,-6.540483,4.013062,7.664350,1.889400,-0.559572,1.788411,0.392219,-4.365808,0.221777,-8.173579,1.028603,-9.916030,-6.563771,-9.843535,4.008799,3.897110,-6.695943,0.920496,9.630519,-7.600569,-8.653574,6.971927,0.223930,-9.928038,4.452608,7.451453,-4.533431,6.908734,-4.182777,0.395803,-6.418035,1.014066,2.478510,-5.731948,6.911897,-2.587703,-5.515957,9.598150,5.107505,-8.461104,6.114919,-3.784456,-3.757598,-9.949082,7.123376,-3.381973,-1.251483,3.976343,-7.729129,7.785608,-6.093259,-8.741313,0.847587,-1.687759,3.099745,9.671445,-4.905015,-7.964902,5.634843,8.484325,-9.916626,-2.518701,-1.013109,7.213337,2.449874,-4.627328,-4.363202,5.856697,7.886713,2.692998,-4.335980,6.984758,-6.170193,9.331441,-7.025878,-8.352650,5.628886,-1.612029,-9.061837,-3.175539,-9.775533,1.781227,1.826132,-7.814242,-2.619337,7.171501,-4.919742,-3.059371,7.291449,4.770390,-7.393705,-9.148061,-6.085817,7.293894,-9.223427,8.128832,4.524993,-3.065516,8.064221,4.333934,-3.454117,-4.555187,2.921599,3.598641,9.442137,-0.662175,-9.821640,2.579457,7.063515,-6.766678,-0.956544,-8.969453,-2.295237,1.637974,6.240684,-8.486446,9.482596,2.340018,7.367988,3.055579,8.521750,-2.028192,2.984808,-6.050766,8.893543,-5.513754,-9.848003,7.735615,2.243245,-8.541002,6.830943,-3.602270,-5.145990,9.298796,-0.171959,-5.393877,-1.676473,-3.866189,-2.581046,8.103733,1.884714,0.138224,-2.617704,-1.624145,1.973885,2.433378,8.855262,-7.214413,6.874655,9.001492,-8.216135,1.025415,2.848929,-2.493675,-3.966110,2.822093,-8.944595,-3.054862,7.583013,-5.690290,6.954908,8.799308,-6.327675,-1.341566,5.187011,1.340155,7.267308,-3.692216,-0.500831,-3.748944,-1.639831,-0.204785,0.935829,-4.320425,-5.553828,7.921486,-7.663340,-6.623296,-3.546596,-9.152863,4.947203,-7.666372,-6.058856,6.979274,6.945538,3.660345,0.584617,-8.135931,-2.291711,2.172547,-7.186667,3.370321,5.901370,6.754723,-3.712757,1.702397,2.021782,5.691381,-2.596237,1.371686,-6.970979,-4.082535,-8.564728,-2.165301,6.756097,0.945924,5.667513,-3.161934,4.514323,-2.805888,2.417001,6.436229,5.369096,-4.526613,5.524434,-7.640250,-9.857857,1.544716,7.131134,-3.893126,8.809378,-7.618424,-1.928555,3.628032,-3.023321,1.612889,2.945633,1.263671,5.238683,-8.606725,2.511421,7.094737,8.154637,-8.981419,-7.414749,1.253620,5.822237,-4.223254,-8.378315,2.831447,-7.529623,-4.853403,0.825989,-4.241531,8.195581,4.271219,4.528656,6.342214,1.056266,-8.994691,-8.197266,7.511152,7.780205,7.336689,2.994872,7.103992,9.197911,0.315686,1.844479,-1.684714,-9.871719,4.723925,-6.483121,9.707178,-4.141904,9.493876,6.312682,-0.371297,2.092180,3.704943,-0.664109,-2.428557,-0.089092,-3.556492,5.909014,3.598520,-2.735647,-0.112174,8.632005,-9.290989,8.342720,-4.328262,-7.740116,6.404904,-9.473639,-2.781651,7.839071,-8.823729,-7.871982,2.990144,5.762680,-0.040918,4.043383,-0.370869,-1.417936,9.600707,0.215419,-3.231204,-0.066240,2.062139,-0.374171,-9.071606,-9.446461,-9.184094,3.801352,-1.775916,-9.388499,5.652523,5.497743,-4.891855,-9.023425,4.367988,1.634633,-5.502868,-3.382589,-4.727731,9.483307,-6.515457,6.091497,9.789970,7.817553,-7.205009,-1.338965,9.138824,3.007462,1.207520,3.138032,1.839733,-9.774408,0.943092,1.133676,-0.108429,-1.356489,-3.957149,4.178701,-0.496256,-2.917738,-9.904791,-0.134341,-6.644137,8.937056,-4.563866,6.649809,7.000647,3.213889,-6.901136,-7.570982,3.499738,5.178837,-6.687725,9.013785,7.617164,4.422043,-8.455144,-3.354620,-1.330806,-4.147650,-7.043893,-4.756999,-7.282529,-7.730091,9.301278,2.427964,0.023452,-2.997973,2.296483,4.767264,7.787615,-1.536015,-7.236498,0.573118,-6.826595,6.974375,0.316968,-6.866220,2.699924,-2.703111,1.307648,-3.918025,-7.013773,-3.402411,-5.059001,8.440147,0.916626,-6.527444,-7.557444,-0.539682,5.752451,4.698576,1.990071,-8.959513,7.054626,8.996933,-9.952506,0.477937,8.504996,-8.956357,8.324961,4.222391,8.701589,8.112261,4.083918,-2.354166,9.847575,6.835472,3.301530,-7.841907,-4.904682,9.611061,5.636330,-5.340117,9.152203,-5.656519,-1.065524,4.459924,2.797732,6.145744,-4.069787,-5.707406,5.578808,-4.064208,4.243719,3.965975,7.314922,2.876879,-9.834687,2.154628,-0.424713,-9.053115,9.458428,2.209295,-8.260957,-4.889517,-9.128931,4.399530,-1.024634,7.560012,-0.460988,-6.465445,9.994840,-0.587147,4.621076,9.348939,7.057180,-9.503659,0.232150,-2.380033,-0.078544,-6.063066,5.992301,-7.033560,-9.031864,3.438118,3.387277,-2.158489,8.407295,-2.136196,-6.231898,6.734479,7.746897,-0.592910,2.001901,6.964238,8.910589,-0.763121,6.605354,8.770693,-4.397007,-7.415951,-1.069529,1.697876,2.471930,-2.275832,4.872626,8.157199,7.489606,-9.554692,-5.745938,-0.142936,0.099656,-9.041362,9.587040,-8.050380,3.624968,0.165318,7.372734,5.098781,-0.546030,-8.287362,1.745546,0.008683,-4.626868,3.618975,9.265713,-4.987674,2.331790,2.869338,-7.855022,-4.703553,-8.737369,2.521515,-6.366852,-1.052416,-4.411123,9.571538,-7.295799,-5.498115,-4.716411,-8.869284,9.921294,-4.817579,6.190086,-4.758727,-8.740751,9.135434,-8.709701,-0.993637,-6.510321,-4.311443,-2.014484,-7.963990,-3.445173,4.598764,2.607612,-1.900916,-1.937693,7.362086,-7.004512,-0.643032,-9.712589,0.802408,-9.307498,-3.634844,-7.828398,-3.112345,-3.847773,4.580139,1.540811,6.446789,-8.959154,-8.486263,-8.384292,0.755980,0.548350,1.581705,7.225172,-4.251940,4.890452,-1.680698,1.132247,-0.352386,-2.735227,-0.616004,-8.624436,-2.467811,5.068999,4.289259,-8.598249,-5.175253,-6.597250,8.230869,-6.142564,-5.934927,-0.576467,2.615559,1.674816,6.090376,-9.656999,3.312726,3.630662,4.217551,-1.671776,7.202072,8.845762,-9.586811,3.372635,-9.069752,-5.337119,9.894413,9.298226,-2.539594,-0.426435,-2.353806,-1.831094,1.798078,4.461120,-8.496144,-7.293129,-7.860421,-2.261362], dtype = "float32")#candidate|8317|(810,)|const|float32
const_8318 = relay.const([-7,-4,4,7,1,4,-4,2,-1,-5,4,-5,7,1,-6,-5,-5,3,8,3,-6,3,-1,9,4,1,7,-6,1,-10,-10,-10,-3,4,-5,-3,4,-2,-3,-7,4,6,5,-8,9,-1,-2,-6,6,-10,-9,-3,-9,7,5,-10,5,-2,7,-5,9,-5,-1,-8,3,9,1,4,-4,-1,-9,9,6,-2,-1,-7,-7,1,-5,6,-9,7,-6,7,4,-10,-10,4,-8,8,7,2,-10,-1,-6,-3,1,-2,-3,-6,8,7,-5,-5,-9,-6,10,10,3,-5,10,1,-9,8,-1,-6,-2,-10,-4,-2,9,1,6,-1,3,-5,5,-4,-8,-4,-9,-1,-3,-10,7,2,-1,-7,-4,-3,4,10,5,-4,8,-3,8,2,4,-10,5,7,7,-3,10,-8,6,-6,3,8,-7,2,7,-9,-5,2,-3,8,-2,-10,6,1,-5,-5,-4,-10,3,8,-6,-1,-10,-3,-3,-2,1,-9,10,-1,4,1,-8,-1,-3,-3,10,9,8,-2,4,-3,-7,-4,-10,-10,-10,4,-4,-10,-8,7,8,5,-10,4,10,-1,-10,4,7,-8,-8,4,9,-10,-9,-4,-3,-1,-5,-8,-4,4,1,6,3,-4,6,3,-4,-2,-10,-9,5,-7,-5,-7,-2,-3,-10,-3,-2,-6,-7,-4,1,-5,4,5,2,-10,-5,-7,10,1,8,-5,-3,1,-1,10,-4,-5,8,6,10,-8,6,3,3,8,-10,-6,-5,2,5,-9,8,5,-2,6,8,-8,-7,-10,6,6,2,-6,10,-4,9,-1,-5,-3,-9,2,10,4,10,-2,4,2,-9,-5,-8,3,2,6,-2,6,-5,1,-8,-5,-8,9,-4,-10,-1,5,5,7,-1,7,-10,-5,3,2,-10,4,-5,-2,3,-5,10,-4,-7,-4,-3,-4,-8,-2,4,6,1,3,-2,7,8,2,10,-5,-8,-5,-2,6,7,-2,-1,6,8,-10,-4,-8,6,10,-7,-5,4,5,-9,7,-10,9,-7,5,-4,-8,1,1,-9,5,6,10,-10,-7,8,4,-4,1,-10,9,-1,-4,-4,-10,-8,8,5,-5,4,1,-7,-2,-2,4], dtype = "int64")#candidate|8318|(416,)|const|int64
const_8319 = relay.const([-9,9,-5,-8,7,-1,9,4,-8,-5,10,8,5,-7,3,10], dtype = "int64")#candidate|8319|(16,)|const|int64
call_8316 = relay.TupleGetItem(func_3807_call(relay.reshape(const_8317.astype('float32'), [15, 9, 6]), relay.reshape(const_8318.astype('int64'), [2, 208]), relay.reshape(const_8319.astype('int64'), [16,]), ), 0)
call_8320 = relay.TupleGetItem(func_3811_call(relay.reshape(const_8317.astype('float32'), [15, 9, 6]), relay.reshape(const_8318.astype('int64'), [2, 208]), relay.reshape(const_8319.astype('int64'), [16,]), ), 0)
uop_8325 = relay.sigmoid(const_8317.astype('float32')) # shape=(810,)
func_6962_call = mod.get_global_var('func_6962')
func_6965_call = mutated_mod.get_global_var('func_6965')
var_8329 = relay.var("var_8329", dtype = "int16", shape = (7, 21))#candidate|8329|(7, 21)|var|int16
call_8328 = relay.TupleGetItem(func_6962_call(relay.reshape(var_8329.astype('int16'), [147,]), relay.reshape(const_8319.astype('int64'), [16,]), ), 3)
call_8330 = relay.TupleGetItem(func_6965_call(relay.reshape(var_8329.astype('int16'), [147,]), relay.reshape(const_8319.astype('int64'), [16,]), ), 3)
bop_8338 = relay.less_equal(uop_8325.astype('bool'), relay.reshape(call_8316.astype('bool'), relay.shape_of(uop_8325))) # shape=(810,)
bop_8341 = relay.less_equal(uop_8325.astype('bool'), relay.reshape(call_8320.astype('bool'), relay.shape_of(uop_8325))) # shape=(810,)
uop_8351 = relay.cos(bop_8338.astype('float64')) # shape=(810,)
uop_8353 = relay.cos(bop_8341.astype('float64')) # shape=(810,)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_8370 = relay.TupleGetItem(func_6805_call(), 0)
call_8371 = relay.TupleGetItem(func_6806_call(), 0)
output = relay.Tuple([call_8302,const_8318,const_8319,call_8328,var_8329,uop_8351,call_8370,])
output2 = relay.Tuple([call_8303,const_8318,const_8319,call_8330,var_8329,uop_8353,call_8371,])
func_8373 = relay.Function([var_8329,], output)
mod['func_8373'] = func_8373
mod = relay.transform.InferType()(mod)
var_8374 = relay.var("var_8374", dtype = "int16", shape = (7, 21))#candidate|8374|(7, 21)|var|int16
output = func_8373(var_8374)
func_8375 = relay.Function([var_8374], output)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8278_call = mod.get_global_var('func_8278')
func_8279_call = mutated_mod.get_global_var('func_8279')
call_8393 = relay.TupleGetItem(func_8278_call(), 2)
call_8394 = relay.TupleGetItem(func_8279_call(), 2)
output = relay.Tuple([call_8393,])
output2 = relay.Tuple([call_8394,])
func_8402 = relay.Function([], output)
mod['func_8402'] = func_8402
mod = relay.transform.InferType()(mod)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mutated_mod.get_global_var('func_8402')
call_8403 = func_8402_call()
output = call_8403
func_8404 = relay.Function([], output)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8161_call = mod.get_global_var('func_8161')
func_8162_call = mutated_mod.get_global_var('func_8162')
call_8408 = func_8161_call()
call_8409 = func_8161_call()
output = call_8408
output2 = call_8409
func_8410 = relay.Function([], output)
mod['func_8410'] = func_8410
mod = relay.transform.InferType()(mod)
mutated_mod['func_8410'] = func_8410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8410_call = mutated_mod.get_global_var('func_8410')
call_8411 = func_8410_call()
output = call_8411
func_8412 = relay.Function([], output)
mutated_mod['func_8412'] = func_8412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8448 = relay.TupleGetItem(func_8402_call(), 0)
call_8449 = relay.TupleGetItem(func_8404_call(), 0)
output = call_8448
output2 = call_8449
func_8491 = relay.Function([], output)
mod['func_8491'] = func_8491
mod = relay.transform.InferType()(mod)
output = func_8491()
func_8492 = relay.Function([], output)
mutated_mod['func_8492'] = func_8492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6447_call = mod.get_global_var('func_6447')
func_6448_call = mutated_mod.get_global_var('func_6448')
call_8531 = relay.TupleGetItem(func_6447_call(), 0)
call_8532 = relay.TupleGetItem(func_6448_call(), 0)
func_5080_call = mod.get_global_var('func_5080')
func_5084_call = mutated_mod.get_global_var('func_5084')
var_8534 = relay.var("var_8534", dtype = "uint8", shape = (180,))#candidate|8534|(180,)|var|uint8
var_8535 = relay.var("var_8535", dtype = "float32", shape = (1008,))#candidate|8535|(1008,)|var|float32
call_8533 = relay.TupleGetItem(func_5080_call(relay.reshape(var_8534.astype('uint8'), [3, 4, 15]), relay.reshape(var_8534.astype('uint8'), [3, 4, 15]), relay.reshape(var_8535.astype('float32'), [1008,]), ), 3)
call_8536 = relay.TupleGetItem(func_5084_call(relay.reshape(var_8534.astype('uint8'), [3, 4, 15]), relay.reshape(var_8534.astype('uint8'), [3, 4, 15]), relay.reshape(var_8535.astype('float32'), [1008,]), ), 3)
output = relay.Tuple([call_8531,call_8533,var_8534,var_8535,])
output2 = relay.Tuple([call_8532,call_8536,var_8534,var_8535,])
func_8538 = relay.Function([var_8534,var_8535,], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
var_8539 = relay.var("var_8539", dtype = "uint8", shape = (180,))#candidate|8539|(180,)|var|uint8
var_8540 = relay.var("var_8540", dtype = "float32", shape = (1008,))#candidate|8540|(1008,)|var|float32
output = func_8538(var_8539,var_8540,)
func_8541 = relay.Function([var_8539,var_8540,], output)
mutated_mod['func_8541'] = func_8541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7464_call = mod.get_global_var('func_7464')
func_7465_call = mutated_mod.get_global_var('func_7465')
call_8555 = relay.TupleGetItem(func_7464_call(), 1)
call_8556 = relay.TupleGetItem(func_7465_call(), 1)
output = call_8555
output2 = call_8556
func_8563 = relay.Function([], output)
mod['func_8563'] = func_8563
mod = relay.transform.InferType()(mod)
output = func_8563()
func_8564 = relay.Function([], output)
mutated_mod['func_8564'] = func_8564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8606 = relay.TupleGetItem(func_8402_call(), 0)
call_8607 = relay.TupleGetItem(func_8404_call(), 0)
func_4378_call = mod.get_global_var('func_4378')
func_4381_call = mutated_mod.get_global_var('func_4381')
var_8623 = relay.var("var_8623", dtype = "float64", shape = (2496,))#candidate|8623|(2496,)|var|float64
call_8622 = func_4378_call(relay.reshape(var_8623.astype('float64'), [16, 12, 13]))
call_8624 = func_4378_call(relay.reshape(var_8623.astype('float64'), [16, 12, 13]))
output = relay.Tuple([call_8606,call_8622,var_8623,])
output2 = relay.Tuple([call_8607,call_8624,var_8623,])
func_8632 = relay.Function([var_8623,], output)
mod['func_8632'] = func_8632
mod = relay.transform.InferType()(mod)
var_8633 = relay.var("var_8633", dtype = "float64", shape = (2496,))#candidate|8633|(2496,)|var|float64
output = func_8632(var_8633)
func_8634 = relay.Function([var_8633], output)
mutated_mod['func_8634'] = func_8634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8061_call = mod.get_global_var('func_8061')
func_8063_call = mutated_mod.get_global_var('func_8063')
call_8675 = relay.TupleGetItem(func_8061_call(), 0)
call_8676 = relay.TupleGetItem(func_8063_call(), 0)
output = call_8675
output2 = call_8676
func_8679 = relay.Function([], output)
mod['func_8679'] = func_8679
mod = relay.transform.InferType()(mod)
output = func_8679()
func_8680 = relay.Function([], output)
mutated_mod['func_8680'] = func_8680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_8694 = relay.TupleGetItem(func_5781_call(), 0)
call_8695 = relay.TupleGetItem(func_5782_call(), 0)
uop_8700 = relay.log10(call_8694.astype('float64')) # shape=(416,)
uop_8702 = relay.log10(call_8695.astype('float64')) # shape=(416,)
output = uop_8700
output2 = uop_8702
func_8704 = relay.Function([], output)
mod['func_8704'] = func_8704
mod = relay.transform.InferType()(mod)
mutated_mod['func_8704'] = func_8704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8704_call = mutated_mod.get_global_var('func_8704')
call_8705 = func_8704_call()
output = call_8705
func_8706 = relay.Function([], output)
mutated_mod['func_8706'] = func_8706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_8813 = func_5954_call()
call_8814 = func_5954_call()
func_8538_call = mod.get_global_var('func_8538')
func_8541_call = mutated_mod.get_global_var('func_8541')
var_8824 = relay.var("var_8824", dtype = "uint8", shape = (180,))#candidate|8824|(180,)|var|uint8
var_8825 = relay.var("var_8825", dtype = "float32", shape = (1008,))#candidate|8825|(1008,)|var|float32
call_8823 = relay.TupleGetItem(func_8538_call(relay.reshape(var_8824.astype('uint8'), [180,]), relay.reshape(var_8825.astype('float32'), [1008,]), ), 1)
call_8826 = relay.TupleGetItem(func_8541_call(relay.reshape(var_8824.astype('uint8'), [180,]), relay.reshape(var_8825.astype('float32'), [1008,]), ), 1)
output = relay.Tuple([call_8813,call_8823,var_8824,var_8825,])
output2 = relay.Tuple([call_8814,call_8826,var_8824,var_8825,])
func_8827 = relay.Function([var_8824,var_8825,], output)
mod['func_8827'] = func_8827
mod = relay.transform.InferType()(mod)
var_8828 = relay.var("var_8828", dtype = "uint8", shape = (180,))#candidate|8828|(180,)|var|uint8
var_8829 = relay.var("var_8829", dtype = "float32", shape = (1008,))#candidate|8829|(1008,)|var|float32
output = func_8827(var_8828,var_8829,)
func_8830 = relay.Function([var_8828,var_8829,], output)
mutated_mod['func_8830'] = func_8830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8119_call = mod.get_global_var('func_8119')
func_8121_call = mutated_mod.get_global_var('func_8121')
call_8877 = relay.TupleGetItem(func_8119_call(), 1)
call_8878 = relay.TupleGetItem(func_8121_call(), 1)
output = relay.Tuple([call_8877,])
output2 = relay.Tuple([call_8878,])
func_8895 = relay.Function([], output)
mod['func_8895'] = func_8895
mod = relay.transform.InferType()(mod)
mutated_mod['func_8895'] = func_8895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mutated_mod.get_global_var('func_8895')
call_8896 = func_8895_call()
output = call_8896
func_8897 = relay.Function([], output)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_8903 = relay.TupleGetItem(func_6805_call(), 0)
call_8904 = relay.TupleGetItem(func_6806_call(), 0)
output = relay.Tuple([call_8903,])
output2 = relay.Tuple([call_8904,])
func_8914 = relay.Function([], output)
mod['func_8914'] = func_8914
mod = relay.transform.InferType()(mod)
output = func_8914()
func_8915 = relay.Function([], output)
mutated_mod['func_8915'] = func_8915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8959 = relay.var("var_8959", dtype = "float32", shape = (13, 3, 12))#candidate|8959|(13, 3, 12)|var|float32
uop_8960 = relay.cos(var_8959.astype('float32')) # shape=(13, 3, 12)
output = relay.Tuple([uop_8960,])
output2 = relay.Tuple([uop_8960,])
func_8977 = relay.Function([var_8959,], output)
mod['func_8977'] = func_8977
mod = relay.transform.InferType()(mod)
mutated_mod['func_8977'] = func_8977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8978 = relay.var("var_8978", dtype = "float32", shape = (13, 3, 12))#candidate|8978|(13, 3, 12)|var|float32
func_8977_call = mutated_mod.get_global_var('func_8977')
call_8979 = func_8977_call(var_8978)
output = call_8979
func_8980 = relay.Function([var_8978], output)
mutated_mod['func_8980'] = func_8980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mod.get_global_var('func_6356')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_9026 = func_6356_call()
call_9027 = func_6356_call()
output = relay.Tuple([call_9026,])
output2 = relay.Tuple([call_9027,])
func_9036 = relay.Function([], output)
mod['func_9036'] = func_9036
mod = relay.transform.InferType()(mod)
output = func_9036()
func_9037 = relay.Function([], output)
mutated_mod['func_9037'] = func_9037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6294_call = mod.get_global_var('func_6294')
func_6295_call = mutated_mod.get_global_var('func_6295')
call_9038 = relay.TupleGetItem(func_6294_call(), 0)
call_9039 = relay.TupleGetItem(func_6295_call(), 0)
output = call_9038
output2 = call_9039
func_9048 = relay.Function([], output)
mod['func_9048'] = func_9048
mod = relay.transform.InferType()(mod)
mutated_mod['func_9048'] = func_9048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9048_call = mutated_mod.get_global_var('func_9048')
call_9049 = func_9048_call()
output = call_9049
func_9050 = relay.Function([], output)
mutated_mod['func_9050'] = func_9050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8061_call = mod.get_global_var('func_8061')
func_8063_call = mutated_mod.get_global_var('func_8063')
call_9083 = relay.TupleGetItem(func_8061_call(), 0)
call_9084 = relay.TupleGetItem(func_8063_call(), 0)
output = relay.Tuple([call_9083,])
output2 = relay.Tuple([call_9084,])
func_9112 = relay.Function([], output)
mod['func_9112'] = func_9112
mod = relay.transform.InferType()(mod)
mutated_mod['func_9112'] = func_9112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9112_call = mutated_mod.get_global_var('func_9112')
call_9113 = func_9112_call()
output = call_9113
func_9114 = relay.Function([], output)
mutated_mod['func_9114'] = func_9114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_9117 = relay.TupleGetItem(func_6805_call(), 0)
call_9118 = relay.TupleGetItem(func_6806_call(), 0)
output = call_9117
output2 = call_9118
func_9131 = relay.Function([], output)
mod['func_9131'] = func_9131
mod = relay.transform.InferType()(mod)
output = func_9131()
func_9132 = relay.Function([], output)
mutated_mod['func_9132'] = func_9132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mod.get_global_var('func_8895')
func_8897_call = mutated_mod.get_global_var('func_8897')
call_9133 = relay.TupleGetItem(func_8895_call(), 0)
call_9134 = relay.TupleGetItem(func_8897_call(), 0)
output = relay.Tuple([call_9133,])
output2 = relay.Tuple([call_9134,])
func_9138 = relay.Function([], output)
mod['func_9138'] = func_9138
mod = relay.transform.InferType()(mod)
output = func_9138()
func_9139 = relay.Function([], output)
mutated_mod['func_9139'] = func_9139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6294_call = mod.get_global_var('func_6294')
func_6295_call = mutated_mod.get_global_var('func_6295')
call_9142 = relay.TupleGetItem(func_6294_call(), 0)
call_9143 = relay.TupleGetItem(func_6295_call(), 0)
func_6871_call = mod.get_global_var('func_6871')
func_6872_call = mutated_mod.get_global_var('func_6872')
call_9179 = relay.TupleGetItem(func_6871_call(), 2)
call_9180 = relay.TupleGetItem(func_6872_call(), 2)
func_9131_call = mod.get_global_var('func_9131')
func_9132_call = mutated_mod.get_global_var('func_9132')
call_9188 = func_9131_call()
call_9189 = func_9131_call()
func_9131_call = mod.get_global_var('func_9131')
func_9132_call = mutated_mod.get_global_var('func_9132')
call_9200 = func_9131_call()
call_9201 = func_9131_call()
uop_9207 = relay.rsqrt(call_9188.astype('float32')) # shape=(1, 15, 11)
uop_9209 = relay.rsqrt(call_9189.astype('float32')) # shape=(1, 15, 11)
output = relay.Tuple([call_9142,call_9179,call_9200,uop_9207,])
output2 = relay.Tuple([call_9143,call_9180,call_9201,uop_9209,])
func_9244 = relay.Function([], output)
mod['func_9244'] = func_9244
mod = relay.transform.InferType()(mod)
output = func_9244()
func_9245 = relay.Function([], output)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9036_call = mod.get_global_var('func_9036')
func_9037_call = mutated_mod.get_global_var('func_9037')
call_9246 = relay.TupleGetItem(func_9036_call(), 0)
call_9247 = relay.TupleGetItem(func_9037_call(), 0)
output = relay.Tuple([call_9246,])
output2 = relay.Tuple([call_9247,])
func_9252 = relay.Function([], output)
mod['func_9252'] = func_9252
mod = relay.transform.InferType()(mod)
output = func_9252()
func_9253 = relay.Function([], output)
mutated_mod['func_9253'] = func_9253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8161_call = mod.get_global_var('func_8161')
func_8162_call = mutated_mod.get_global_var('func_8162')
call_9259 = func_8161_call()
call_9260 = func_8161_call()
output = call_9259
output2 = call_9260
func_9261 = relay.Function([], output)
mod['func_9261'] = func_9261
mod = relay.transform.InferType()(mod)
mutated_mod['func_9261'] = func_9261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9261_call = mutated_mod.get_global_var('func_9261')
call_9262 = func_9261_call()
output = call_9262
func_9263 = relay.Function([], output)
mutated_mod['func_9263'] = func_9263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8704_call = mod.get_global_var('func_8704')
func_8706_call = mutated_mod.get_global_var('func_8706')
call_9280 = func_8704_call()
call_9281 = func_8704_call()
func_9048_call = mod.get_global_var('func_9048')
func_9050_call = mutated_mod.get_global_var('func_9050')
call_9282 = func_9048_call()
call_9283 = func_9048_call()
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_9290 = func_7015_call(relay.reshape(call_9280.astype('bool'), [416,]))
call_9291 = func_7015_call(relay.reshape(call_9280.astype('bool'), [416,]))
output = relay.Tuple([call_9280,call_9282,call_9290,])
output2 = relay.Tuple([call_9281,call_9283,call_9291,])
func_9294 = relay.Function([], output)
mod['func_9294'] = func_9294
mod = relay.transform.InferType()(mod)
output = func_9294()
func_9295 = relay.Function([], output)
mutated_mod['func_9295'] = func_9295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9036_call = mod.get_global_var('func_9036')
func_9037_call = mutated_mod.get_global_var('func_9037')
call_9307 = relay.TupleGetItem(func_9036_call(), 0)
call_9308 = relay.TupleGetItem(func_9037_call(), 0)
output = call_9307
output2 = call_9308
func_9319 = relay.Function([], output)
mod['func_9319'] = func_9319
mod = relay.transform.InferType()(mod)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9319_call = mutated_mod.get_global_var('func_9319')
call_9320 = func_9319_call()
output = call_9320
func_9321 = relay.Function([], output)
mutated_mod['func_9321'] = func_9321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_9333 = relay.TupleGetItem(func_5802_call(), 0)
call_9334 = relay.TupleGetItem(func_5803_call(), 0)
output = relay.Tuple([call_9333,])
output2 = relay.Tuple([call_9334,])
func_9340 = relay.Function([], output)
mod['func_9340'] = func_9340
mod = relay.transform.InferType()(mod)
output = func_9340()
func_9341 = relay.Function([], output)
mutated_mod['func_9341'] = func_9341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7107_call = mod.get_global_var('func_7107')
func_7108_call = mutated_mod.get_global_var('func_7108')
call_9345 = func_7107_call()
call_9346 = func_7107_call()
output = call_9345
output2 = call_9346
func_9358 = relay.Function([], output)
mod['func_9358'] = func_9358
mod = relay.transform.InferType()(mod)
output = func_9358()
func_9359 = relay.Function([], output)
mutated_mod['func_9359'] = func_9359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mod.get_global_var('func_6740')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_9441 = relay.TupleGetItem(func_6740_call(), 0)
call_9442 = relay.TupleGetItem(func_6741_call(), 0)
output = call_9441
output2 = call_9442
func_9455 = relay.Function([], output)
mod['func_9455'] = func_9455
mod = relay.transform.InferType()(mod)
output = func_9455()
func_9456 = relay.Function([], output)
mutated_mod['func_9456'] = func_9456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8914_call = mod.get_global_var('func_8914')
func_8915_call = mutated_mod.get_global_var('func_8915')
call_9460 = relay.TupleGetItem(func_8914_call(), 0)
call_9461 = relay.TupleGetItem(func_8915_call(), 0)
func_8119_call = mod.get_global_var('func_8119')
func_8121_call = mutated_mod.get_global_var('func_8121')
call_9462 = relay.TupleGetItem(func_8119_call(), 0)
call_9463 = relay.TupleGetItem(func_8121_call(), 0)
output = relay.Tuple([call_9460,call_9462,])
output2 = relay.Tuple([call_9461,call_9463,])
func_9467 = relay.Function([], output)
mod['func_9467'] = func_9467
mod = relay.transform.InferType()(mod)
output = func_9467()
func_9468 = relay.Function([], output)
mutated_mod['func_9468'] = func_9468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6871_call = mod.get_global_var('func_6871')
func_6872_call = mutated_mod.get_global_var('func_6872')
call_9539 = relay.TupleGetItem(func_6871_call(), 1)
call_9540 = relay.TupleGetItem(func_6872_call(), 1)
func_5745_call = mod.get_global_var('func_5745')
func_5749_call = mutated_mod.get_global_var('func_5749')
var_9553 = relay.var("var_9553", dtype = "int64", shape = (528,))#candidate|9553|(528,)|var|int64
var_9554 = relay.var("var_9554", dtype = "int64", shape = (16,))#candidate|9554|(16,)|var|int64
var_9555 = relay.var("var_9555", dtype = "int64", shape = (12, 4))#candidate|9555|(12, 4)|var|int64
call_9552 = relay.TupleGetItem(func_5745_call(relay.reshape(var_9553.astype('int64'), [528,]), relay.reshape(var_9554.astype('int64'), [16,]), relay.reshape(var_9555.astype('int64'), [48,]), ), 8)
call_9556 = relay.TupleGetItem(func_5749_call(relay.reshape(var_9553.astype('int64'), [528,]), relay.reshape(var_9554.astype('int64'), [16,]), relay.reshape(var_9555.astype('int64'), [48,]), ), 8)
output = relay.Tuple([call_9539,call_9552,var_9553,var_9554,var_9555,])
output2 = relay.Tuple([call_9540,call_9556,var_9553,var_9554,var_9555,])
func_9574 = relay.Function([var_9553,var_9554,var_9555,], output)
mod['func_9574'] = func_9574
mod = relay.transform.InferType()(mod)
var_9575 = relay.var("var_9575", dtype = "int64", shape = (528,))#candidate|9575|(528,)|var|int64
var_9576 = relay.var("var_9576", dtype = "int64", shape = (16,))#candidate|9576|(16,)|var|int64
var_9577 = relay.var("var_9577", dtype = "int64", shape = (12, 4))#candidate|9577|(12, 4)|var|int64
output = func_9574(var_9575,var_9576,var_9577,)
func_9578 = relay.Function([var_9575,var_9576,var_9577,], output)
mutated_mod['func_9578'] = func_9578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5837_call = mod.get_global_var('func_5837')
func_5839_call = mutated_mod.get_global_var('func_5839')
call_9593 = func_5837_call()
call_9594 = func_5837_call()
output = call_9593
output2 = call_9594
func_9596 = relay.Function([], output)
mod['func_9596'] = func_9596
mod = relay.transform.InferType()(mod)
mutated_mod['func_9596'] = func_9596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9596_call = mutated_mod.get_global_var('func_9596')
call_9597 = func_9596_call()
output = call_9597
func_9598 = relay.Function([], output)
mutated_mod['func_9598'] = func_9598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7282_call = mod.get_global_var('func_7282')
func_7284_call = mutated_mod.get_global_var('func_7284')
call_9616 = relay.TupleGetItem(func_7282_call(), 0)
call_9617 = relay.TupleGetItem(func_7284_call(), 0)
output = call_9616
output2 = call_9617
func_9629 = relay.Function([], output)
mod['func_9629'] = func_9629
mod = relay.transform.InferType()(mod)
mutated_mod['func_9629'] = func_9629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9629_call = mutated_mod.get_global_var('func_9629')
call_9630 = func_9629_call()
output = call_9630
func_9631 = relay.Function([], output)
mutated_mod['func_9631'] = func_9631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8144_call = mod.get_global_var('func_8144')
func_8146_call = mutated_mod.get_global_var('func_8146')
call_9685 = relay.TupleGetItem(func_8144_call(), 0)
call_9686 = relay.TupleGetItem(func_8146_call(), 0)
uop_9708 = relay.tan(call_9685.astype('float64')) # shape=(416,)
uop_9710 = relay.tan(call_9686.astype('float64')) # shape=(416,)
func_3612_call = mod.get_global_var('func_3612')
func_3614_call = mutated_mod.get_global_var('func_3614')
var_9724 = relay.var("var_9724", dtype = "uint64", shape = (180,))#candidate|9724|(180,)|var|uint64
call_9723 = func_3612_call(relay.reshape(var_9724.astype('uint64'), [15, 12, 1]))
call_9725 = func_3612_call(relay.reshape(var_9724.astype('uint64'), [15, 12, 1]))
func_3710_call = mod.get_global_var('func_3710')
func_3714_call = mutated_mod.get_global_var('func_3714')
var_9727 = relay.var("var_9727", dtype = "int8", shape = (156,))#candidate|9727|(156,)|var|int8
call_9726 = func_3710_call(relay.reshape(var_9727.astype('int8'), [13, 2, 6]), relay.reshape(var_9727.astype('int8'), [13, 2, 6]), )
call_9728 = func_3710_call(relay.reshape(var_9727.astype('int8'), [13, 2, 6]), relay.reshape(var_9727.astype('int8'), [13, 2, 6]), )
output = relay.Tuple([uop_9708,call_9723,var_9724,call_9726,var_9727,])
output2 = relay.Tuple([uop_9710,call_9725,var_9724,call_9728,var_9727,])
func_9729 = relay.Function([var_9724,var_9727,], output)
mod['func_9729'] = func_9729
mod = relay.transform.InferType()(mod)
mutated_mod['func_9729'] = func_9729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9729_call = mutated_mod.get_global_var('func_9729')
var_9731 = relay.var("var_9731", dtype = "uint64", shape = (180,))#candidate|9731|(180,)|var|uint64
var_9732 = relay.var("var_9732", dtype = "int8", shape = (156,))#candidate|9732|(156,)|var|int8
call_9730 = func_9729_call(var_9731,var_9732,)
output = call_9730
func_9733 = relay.Function([var_9731,var_9732,], output)
mutated_mod['func_9733'] = func_9733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9865 = relay.var("var_9865", dtype = "int8", shape = (14, 16, 6))#candidate|9865|(14, 16, 6)|var|int8
const_9866 = relay.const([[[-10,-1,2,3,6,10],[3,2,5,-3,-2,10],[-2,-2,3,-6,2,8],[-1,-5,4,-6,-5,8],[-2,10,-5,1,-5,2],[4,3,-3,8,-1,-1],[-10,4,5,-9,5,8],[-10,-7,-3,-2,-7,1],[-7,6,-3,5,-3,-3],[2,-5,1,-7,2,5],[3,2,-6,1,-3,-3],[3,-4,-8,-5,8,7],[3,2,8,-3,-7,-2],[-10,-6,8,-1,-7,9],[1,8,-2,-1,-7,-10],[-2,-7,-10,2,1,-2]],[[7,-2,-10,2,3,-1],[2,-1,6,-7,6,5],[-2,5,5,2,5,-6],[5,6,-7,6,-10,-2],[10,-5,3,4,9,1],[-1,5,9,10,-1,-3],[-5,10,5,2,-3,-4],[6,-4,-7,8,7,3],[7,9,10,-8,10,10],[2,-3,-10,-3,-4,3],[1,-1,-5,4,8,1],[5,2,-9,-3,6,-8],[-4,3,8,-3,-5,9],[9,-5,-7,6,6,-9],[10,-6,9,-3,4,3],[9,-3,10,-8,5,7]],[[-10,4,-3,-2,5,9],[1,9,7,-9,9,3],[-4,-10,2,1,-2,-9],[7,8,-9,-8,-1,8],[-2,-4,-9,-2,-6,9],[4,2,-4,1,-4,5],[-9,6,1,-8,10,-6],[7,-1,-10,4,10,-10],[-9,-8,-3,8,8,-2],[9,2,1,10,5,2],[-2,1,-2,-8,5,6],[9,-10,2,-5,-1,2],[-6,2,4,9,10,-7],[3,7,-1,6,9,-6],[7,3,2,-9,-8,2],[-5,-7,2,-9,-9,-5]],[[-9,10,-6,-10,10,10],[-9,-2,2,-10,-2,-3],[-10,1,9,10,4,10],[8,4,5,2,5,-4],[6,5,2,-4,10,-4],[1,1,-3,7,2,9],[-7,3,5,-10,-3,2],[-1,-8,4,-2,-5,10],[3,-9,-9,4,3,10],[7,10,-7,5,-9,-10],[4,-7,4,-9,5,4],[10,3,-5,1,5,2],[-6,-9,-10,9,3,-5],[3,6,5,3,-7,-9],[9,4,3,-3,3,-3],[3,8,-6,-2,8,7]],[[7,-9,4,7,-9,-7],[-7,9,-4,-4,4,4],[-5,-9,4,8,-5,6],[-4,5,5,6,-4,-3],[-7,7,7,1,10,6],[-5,-7,-1,2,-7,-9],[-10,-4,9,-3,4,-8],[-3,-4,-9,7,5,6],[7,1,8,-6,-4,1],[8,10,3,-3,-6,-9],[7,1,-10,-8,-9,-2],[-9,-3,9,-8,9,-8],[-7,1,10,-10,-6,1],[-8,-4,7,3,-4,-1],[-2,9,1,6,-2,1],[4,1,2,5,-10,-8]],[[3,-3,10,10,-4,-5],[-10,-3,5,4,-7,9],[-6,1,1,3,3,-3],[-1,-6,5,10,-2,8],[8,9,7,-5,2,9],[9,9,7,6,-6,10],[8,7,-4,-7,6,-8],[-4,6,-2,9,-6,-5],[2,-8,6,10,-2,3],[-9,-8,8,10,2,-8],[-2,6,-9,10,2,10],[7,-1,-6,-5,-7,-1],[-1,-7,-6,9,-3,-5],[-8,6,2,10,-5,-8],[-7,7,8,-9,7,-3],[-10,-1,9,-7,-1,-7]],[[-8,-2,-9,-5,5,-10],[-10,-3,-2,1,1,7],[10,-7,7,-1,10,-10],[-6,-5,9,-4,-4,-7],[3,10,-10,2,-3,10],[-2,6,6,2,5,1],[-5,-2,-9,-7,6,6],[4,-7,-8,8,-8,3],[4,-4,-3,10,9,8],[10,-2,-3,-4,8,-6],[8,6,2,-10,3,3],[2,-7,-9,10,-2,-8],[3,-4,3,7,5,7],[-3,4,-4,5,2,6],[-6,-1,-9,3,-10,2],[6,3,5,1,-9,-3]],[[3,9,-9,-7,9,5],[-6,1,5,9,5,7],[2,-7,4,-3,7,2],[-7,2,8,6,-6,-10],[-2,-2,-1,-6,-8,5],[2,-7,-2,-4,-8,4],[4,10,9,-10,-8,-10],[3,3,9,-1,8,10],[7,-8,2,8,4,-9],[7,5,-4,-6,1,10],[9,-10,1,4,6,10],[-4,8,-6,2,-6,1],[-2,-9,-8,2,10,4],[-4,7,10,9,-10,1],[-6,1,10,2,-1,-4],[9,8,-7,-9,1,-10]],[[7,-5,8,3,9,-6],[8,-2,10,-1,9,8],[-2,-7,-5,1,6,-9],[2,-10,5,-1,-7,-3],[-8,-6,4,2,-1,6],[-6,7,5,-10,-7,-9],[8,7,-4,2,7,-8],[4,-6,1,-10,-2,-10],[-3,5,1,-4,5,-4],[-6,-2,6,5,-2,-4],[6,9,-3,5,7,7],[6,-7,-5,-2,1,3],[4,9,8,8,-7,1],[3,-5,-10,10,-4,-6],[2,-7,4,10,7,-5],[-3,10,-9,10,-1,-4]],[[-7,-6,3,-9,2,8],[7,5,7,10,2,-10],[5,2,-6,6,3,6],[3,-3,-1,-2,-8,2],[-6,5,-4,-8,-4,-4],[9,6,3,-9,7,-1],[2,-9,-10,-6,-5,4],[-6,10,-5,2,6,9],[10,-6,-2,7,2,-4],[7,7,-1,-3,5,8],[-10,5,8,7,-4,7],[2,9,10,-4,-5,10],[4,-4,-9,-1,3,-6],[2,1,6,1,1,-2],[3,-7,9,-6,-1,3],[3,8,2,8,-9,1]],[[8,3,-3,-2,1,7],[-9,4,-3,1,-3,-5],[4,10,-4,-9,4,-4],[7,5,5,9,-5,5],[7,6,-4,-4,6,-2],[-8,3,-2,-1,2,8],[-8,-3,-7,-10,2,-6],[-9,-7,-6,-5,7,-8],[-4,-2,3,-6,-7,3],[-7,10,-1,10,-9,-4],[3,1,7,2,6,-10],[2,-1,6,4,-9,5],[-1,1,-1,4,6,5],[-5,-5,-9,-4,-10,1],[-1,9,9,1,2,-1],[8,-6,-3,6,-8,-10]],[[7,-1,1,4,8,3],[9,7,-7,-4,-4,-7],[-1,-4,7,7,8,-10],[-1,2,-8,-7,10,-10],[-2,1,-7,4,5,-9],[4,6,-6,-2,1,-6],[-8,9,7,-4,-8,-9],[-5,-2,-3,-3,-9,-10],[5,3,7,-6,4,-4],[9,-2,-6,9,-5,4],[-4,-6,5,-1,1,6],[-5,4,2,-10,9,5],[4,7,-6,9,5,4],[-5,-10,-9,4,-1,-3],[8,1,7,1,1,-3],[8,-7,-1,-2,-4,-5]],[[-1,6,9,6,-5,5],[4,-5,5,-1,4,-5],[-9,-1,3,7,-5,7],[-4,-3,1,-1,5,9],[-6,4,-8,-4,10,-1],[1,7,1,-2,-9,6],[-3,5,4,10,8,-9],[5,-5,-9,7,2,-8],[10,-2,4,-8,-4,7],[-1,-8,-4,-5,-2,-5],[-5,-1,-8,4,10,6],[-3,-3,1,4,8,9],[1,-1,4,-4,-8,-10],[5,-4,-1,10,-9,10],[2,2,-6,-4,-6,-1],[-10,-1,-9,7,-6,-10]],[[-5,10,3,4,4,7],[-6,8,-5,2,2,-8],[-6,-9,-7,-3,1,-4],[3,-10,-1,-6,8,-9],[-3,-10,6,-9,10,9],[7,10,3,-2,4,-5],[1,-2,-7,1,1,6],[7,2,-1,7,-10,8],[2,4,-2,-1,-10,1],[5,5,1,-5,-7,6],[-7,8,1,-3,-5,-7],[3,1,10,-1,2,-10],[7,1,-4,4,1,9],[9,5,8,-3,9,-6],[-8,5,-3,4,2,-6],[6,6,-5,1,6,9]]], dtype = "int8")#candidate|9866|(14, 16, 6)|const|int8
bop_9867 = relay.minimum(var_9865.astype('int8'), relay.reshape(const_9866.astype('int8'), relay.shape_of(var_9865))) # shape=(14, 16, 6)
output = bop_9867
output2 = bop_9867
func_9871 = relay.Function([var_9865,], output)
mod['func_9871'] = func_9871
mod = relay.transform.InferType()(mod)
mutated_mod['func_9871'] = func_9871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9872 = relay.var("var_9872", dtype = "int8", shape = (14, 16, 6))#candidate|9872|(14, 16, 6)|var|int8
func_9871_call = mutated_mod.get_global_var('func_9871')
call_9873 = func_9871_call(var_9872)
output = call_9873
func_9874 = relay.Function([var_9872], output)
mutated_mod['func_9874'] = func_9874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9340_call = mod.get_global_var('func_9340')
func_9341_call = mutated_mod.get_global_var('func_9341')
call_9876 = relay.TupleGetItem(func_9340_call(), 0)
call_9877 = relay.TupleGetItem(func_9341_call(), 0)
func_5275_call = mod.get_global_var('func_5275')
func_5280_call = mutated_mod.get_global_var('func_5280')
const_9896 = relay.const(-5, dtype = "int16")#candidate|9896|()|const|int16
const_9897 = relay.const([6,2,-1,6,7,-1,7,9,-6,-2,-6,2,-7,2,-5,6,6,9,2,-3,-1,7,4,7,-8,-4,6,-6,8,5], dtype = "int16")#candidate|9897|(30,)|const|int16
var_9898 = relay.var("var_9898", dtype = "int8", shape = (156, 1))#candidate|9898|(156, 1)|var|int8
call_9895 = relay.TupleGetItem(func_5275_call(relay.reshape(const_9896.astype('int16'), []), relay.reshape(const_9897.astype('int16'), [3, 10, 1]), relay.reshape(var_9898.astype('int8'), [3, 52]), ), 2)
call_9899 = relay.TupleGetItem(func_5280_call(relay.reshape(const_9896.astype('int16'), []), relay.reshape(const_9897.astype('int16'), [3, 10, 1]), relay.reshape(var_9898.astype('int8'), [3, 52]), ), 2)
func_7495_call = mod.get_global_var('func_7495')
func_7498_call = mutated_mod.get_global_var('func_7498')
var_9901 = relay.var("var_9901", dtype = "float32", shape = (110,))#candidate|9901|(110,)|var|float32
const_9902 = relay.const([10,-3,-9,2,-6,5,-7,-9,3,3,-1,10,5,-9,-9,-4,-2,3,4,7,8,-4,-2,7,10,-5,5,6,5,-5,-6,1,-5,-1,-2,3,-2,-4,-9,10,-1,10,-2,7,2,2,-10,9], dtype = "int64")#candidate|9902|(48,)|const|int64
call_9900 = relay.TupleGetItem(func_7495_call(relay.reshape(var_9901.astype('float32'), [11, 10, 1]), relay.reshape(const_9902.astype('int64'), [4, 12]), ), 0)
call_9903 = relay.TupleGetItem(func_7498_call(relay.reshape(var_9901.astype('float32'), [11, 10, 1]), relay.reshape(const_9902.astype('int64'), [4, 12]), ), 0)
func_7107_call = mod.get_global_var('func_7107')
func_7108_call = mutated_mod.get_global_var('func_7108')
call_9910 = func_7107_call()
call_9911 = func_7107_call()
bop_9912 = relay.left_shift(const_9902.astype('int8'), call_9900.astype('int8')) # shape=(11, 10, 48)
bop_9915 = relay.left_shift(const_9902.astype('int8'), call_9903.astype('int8')) # shape=(11, 10, 48)
func_5080_call = mod.get_global_var('func_5080')
func_5084_call = mutated_mod.get_global_var('func_5084')
const_9920 = relay.const([[2,-1,4,10,-3,-10,8,8,-8,1,8,2,7,-1,-2,9,6,4,-3,6,7,-4,-5,-2,-9,-6,10,5,7,-4,-4,4,-4,-1,-5,4,4,-6,10,-3,-8,6,-4,3,-6,4,-9,-9,9,1,-7,-5,-3,-10,-8,4,2,5,-2,9],[7,-5,4,-1,-3,8,-7,3,-5,-7,-7,-10,-2,5,5,-1,9,-1,1,7,-4,6,-7,3,1,6,10,7,3,7,7,-2,-3,1,-5,-8,3,-2,2,-2,-3,10,-6,-7,-10,7,-2,4,-10,-9,-3,-5,10,7,-1,4,-9,9,-5,2],[-1,-1,-6,8,9,-2,-4,-7,4,-8,-4,3,1,9,-10,-9,10,6,4,5,-1,4,-5,4,6,8,-4,-3,3,-1,5,-4,10,2,-3,-5,-3,4,1,-9,9,7,6,-10,-4,-2,9,-5,-7,2,5,6,8,7,-9,-6,-2,2,7,-9]], dtype = "uint8")#candidate|9920|(3, 60)|const|uint8
var_9921 = relay.var("var_9921", dtype = "float32", shape = (1008,))#candidate|9921|(1008,)|var|float32
call_9919 = relay.TupleGetItem(func_5080_call(relay.reshape(const_9920.astype('uint8'), [3, 4, 15]), relay.reshape(const_9920.astype('uint8'), [3, 4, 15]), relay.reshape(var_9921.astype('float32'), [1008,]), ), 0)
call_9922 = relay.TupleGetItem(func_5084_call(relay.reshape(const_9920.astype('uint8'), [3, 4, 15]), relay.reshape(const_9920.astype('uint8'), [3, 4, 15]), relay.reshape(var_9921.astype('float32'), [1008,]), ), 0)
output = relay.Tuple([call_9876,call_9895,const_9896,const_9897,var_9898,var_9901,call_9910,bop_9912,call_9919,const_9920,var_9921,])
output2 = relay.Tuple([call_9877,call_9899,const_9896,const_9897,var_9898,var_9901,call_9911,bop_9915,call_9922,const_9920,var_9921,])
func_9925 = relay.Function([var_9898,var_9901,var_9921,], output)
mod['func_9925'] = func_9925
mod = relay.transform.InferType()(mod)
var_9926 = relay.var("var_9926", dtype = "int8", shape = (156, 1))#candidate|9926|(156, 1)|var|int8
var_9927 = relay.var("var_9927", dtype = "float32", shape = (110,))#candidate|9927|(110,)|var|float32
var_9928 = relay.var("var_9928", dtype = "float32", shape = (1008,))#candidate|9928|(1008,)|var|float32
output = func_9925(var_9926,var_9927,var_9928,)
func_9929 = relay.Function([var_9926,var_9927,var_9928,], output)
mutated_mod['func_9929'] = func_9929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9358_call = mod.get_global_var('func_9358')
func_9359_call = mutated_mod.get_global_var('func_9359')
call_9942 = func_9358_call()
call_9943 = func_9358_call()
func_7667_call = mod.get_global_var('func_7667')
func_7670_call = mutated_mod.get_global_var('func_7670')
const_9954 = relay.const([True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False], dtype = "bool")#candidate|9954|(1485,)|const|bool
call_9953 = relay.TupleGetItem(func_7667_call(relay.reshape(const_9954.astype('bool'), [9, 15, 11])), 0)
call_9955 = relay.TupleGetItem(func_7670_call(relay.reshape(const_9954.astype('bool'), [9, 15, 11])), 0)
output = relay.Tuple([call_9942,call_9953,const_9954,])
output2 = relay.Tuple([call_9943,call_9955,const_9954,])
func_9956 = relay.Function([], output)
mod['func_9956'] = func_9956
mod = relay.transform.InferType()(mod)
output = func_9956()
func_9957 = relay.Function([], output)
mutated_mod['func_9957'] = func_9957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8914_call = mod.get_global_var('func_8914')
func_8915_call = mutated_mod.get_global_var('func_8915')
call_9970 = relay.TupleGetItem(func_8914_call(), 0)
call_9971 = relay.TupleGetItem(func_8915_call(), 0)
output = relay.Tuple([call_9970,])
output2 = relay.Tuple([call_9971,])
func_9972 = relay.Function([], output)
mod['func_9972'] = func_9972
mod = relay.transform.InferType()(mod)
mutated_mod['func_9972'] = func_9972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9972_call = mutated_mod.get_global_var('func_9972')
call_9973 = func_9972_call()
output = call_9973
func_9974 = relay.Function([], output)
mutated_mod['func_9974'] = func_9974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9358_call = mod.get_global_var('func_9358')
func_9359_call = mutated_mod.get_global_var('func_9359')
call_9982 = func_9358_call()
call_9983 = func_9358_call()
func_9972_call = mod.get_global_var('func_9972')
func_9974_call = mutated_mod.get_global_var('func_9974')
call_9996 = relay.TupleGetItem(func_9972_call(), 0)
call_9997 = relay.TupleGetItem(func_9974_call(), 0)
output = relay.Tuple([call_9982,call_9996,])
output2 = relay.Tuple([call_9983,call_9997,])
func_10006 = relay.Function([], output)
mod['func_10006'] = func_10006
mod = relay.transform.InferType()(mod)
mutated_mod['func_10006'] = func_10006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10006_call = mutated_mod.get_global_var('func_10006')
call_10007 = func_10006_call()
output = call_10007
func_10008 = relay.Function([], output)
mutated_mod['func_10008'] = func_10008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9956_call = mod.get_global_var('func_9956')
func_9957_call = mutated_mod.get_global_var('func_9957')
call_10045 = relay.TupleGetItem(func_9956_call(), 1)
call_10046 = relay.TupleGetItem(func_9957_call(), 1)
func_1801_call = mod.get_global_var('func_1801')
func_1804_call = mutated_mod.get_global_var('func_1804')
const_10048 = relay.const([True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False], dtype = "bool")#candidate|10048|(288,)|const|bool
call_10047 = func_1801_call(relay.reshape(const_10048.astype('bool'), [6, 12, 4]))
call_10049 = func_1801_call(relay.reshape(const_10048.astype('bool'), [6, 12, 4]))
bop_10050 = relay.left_shift(call_10047.astype('int8'), relay.reshape(const_10048.astype('int8'), relay.shape_of(call_10047))) # shape=(6, 12, 4)
bop_10053 = relay.left_shift(call_10049.astype('int8'), relay.reshape(const_10048.astype('int8'), relay.shape_of(call_10049))) # shape=(6, 12, 4)
func_9574_call = mod.get_global_var('func_9574')
func_9578_call = mutated_mod.get_global_var('func_9578')
var_10068 = relay.var("var_10068", dtype = "int64", shape = (1, 528))#candidate|10068|(1, 528)|var|int64
var_10069 = relay.var("var_10069", dtype = "int64", shape = (16,))#candidate|10069|(16,)|var|int64
const_10070 = relay.const([-4,10,2,-8,5,10,4,-3,-6,4,5,6,8,-8,-8,5,9,-8,9,-6,3,-4,-4,1,-2,-5,-4,-3,-2,-9,5,-6,1,-7,-1,7,-1,-2,-8,6,8,6,-4,-6,-9,-9,-9,1], dtype = "int64")#candidate|10070|(48,)|const|int64
call_10067 = relay.TupleGetItem(func_9574_call(relay.reshape(var_10068.astype('int64'), [528,]), relay.reshape(var_10069.astype('int64'), [16,]), relay.reshape(const_10070.astype('int64'), [12, 4]), ), 0)
call_10071 = relay.TupleGetItem(func_9578_call(relay.reshape(var_10068.astype('int64'), [528,]), relay.reshape(var_10069.astype('int64'), [16,]), relay.reshape(const_10070.astype('int64'), [12, 4]), ), 0)
output = relay.Tuple([call_10045,bop_10050,call_10067,var_10068,var_10069,const_10070,])
output2 = relay.Tuple([call_10046,bop_10053,call_10071,var_10068,var_10069,const_10070,])
func_10080 = relay.Function([var_10068,var_10069,], output)
mod['func_10080'] = func_10080
mod = relay.transform.InferType()(mod)
mutated_mod['func_10080'] = func_10080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10080_call = mutated_mod.get_global_var('func_10080')
var_10082 = relay.var("var_10082", dtype = "int64", shape = (1, 528))#candidate|10082|(1, 528)|var|int64
var_10083 = relay.var("var_10083", dtype = "int64", shape = (16,))#candidate|10083|(16,)|var|int64
call_10081 = func_10080_call(var_10082,var_10083,)
output = call_10081
func_10084 = relay.Function([var_10082,var_10083,], output)
mutated_mod['func_10084'] = func_10084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mod.get_global_var('func_6740')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_10090 = relay.TupleGetItem(func_6740_call(), 0)
call_10091 = relay.TupleGetItem(func_6741_call(), 0)
output = call_10090
output2 = call_10091
func_10106 = relay.Function([], output)
mod['func_10106'] = func_10106
mod = relay.transform.InferType()(mod)
mutated_mod['func_10106'] = func_10106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10106_call = mutated_mod.get_global_var('func_10106')
call_10107 = func_10106_call()
output = call_10107
func_10108 = relay.Function([], output)
mutated_mod['func_10108'] = func_10108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10200 = relay.var("var_10200", dtype = "uint8", shape = (16, 10, 4))#candidate|10200|(16, 10, 4)|var|uint8
var_10201 = relay.var("var_10201", dtype = "uint8", shape = (16, 10, 4))#candidate|10201|(16, 10, 4)|var|uint8
bop_10202 = relay.bitwise_and(var_10200.astype('uint8'), relay.reshape(var_10201.astype('uint8'), relay.shape_of(var_10200))) # shape=(16, 10, 4)
func_5275_call = mod.get_global_var('func_5275')
func_5280_call = mutated_mod.get_global_var('func_5280')
var_10206 = relay.var("var_10206", dtype = "int16", shape = ())#candidate|10206|()|var|int16
const_10207 = relay.const([10,9,-2,6,-8,3,-8,1,-3,-8,3,-10,9,7,10,3,5,-10,9,-10,2,-10,-6,6,3,4,10,-1,9,-2], dtype = "int16")#candidate|10207|(30,)|const|int16
const_10208 = relay.const([1,-9,2,6,2,3,6,4,-1,-8,5,9,8,5,1,7,-3,-2,4,-6,7,2,-1,7,-7,6,-2,9,5,2,-1,7,-5,6,-6,-10,4,-8,10,6,8,-9,-7,2,2,7,1,5,2,9,-6,2,-1,-4,4,8,9,4,-6,9,8,-9,-9,-9,10,10,-7,5,-3,-10,-10,-10,-8,7,1,-1,-2,-2,-7,-4,10,-2,-8,-6,-9,-9,9,-7,4,-10,-10,7,-1,4,1,6,4,8,-6,-5,3,3,-1,-8,4,3,-8,5,9,-9,9,-2,1,5,4,-4,3,-8,10,1,-1,8,-5,1,4,6,3,-6,-8,6,2,9,-9,-10,-3,1,-5,5,3,6,4,-1,-8,3,-8,7,7,5,-5,5,8,-1,-6,-5,-10,6], dtype = "int8")#candidate|10208|(156,)|const|int8
call_10205 = relay.TupleGetItem(func_5275_call(relay.reshape(var_10206.astype('int16'), []), relay.reshape(const_10207.astype('int16'), [3, 10, 1]), relay.reshape(const_10208.astype('int8'), [3, 52]), ), 0)
call_10209 = relay.TupleGetItem(func_5280_call(relay.reshape(var_10206.astype('int16'), []), relay.reshape(const_10207.astype('int16'), [3, 10, 1]), relay.reshape(const_10208.astype('int8'), [3, 52]), ), 0)
output = relay.Tuple([bop_10202,call_10205,var_10206,const_10207,const_10208,])
output2 = relay.Tuple([bop_10202,call_10209,var_10206,const_10207,const_10208,])
func_10222 = relay.Function([var_10200,var_10201,var_10206,], output)
mod['func_10222'] = func_10222
mod = relay.transform.InferType()(mod)
var_10223 = relay.var("var_10223", dtype = "uint8", shape = (16, 10, 4))#candidate|10223|(16, 10, 4)|var|uint8
var_10224 = relay.var("var_10224", dtype = "uint8", shape = (16, 10, 4))#candidate|10224|(16, 10, 4)|var|uint8
var_10225 = relay.var("var_10225", dtype = "int16", shape = ())#candidate|10225|()|var|int16
output = func_10222(var_10223,var_10224,var_10225,)
func_10226 = relay.Function([var_10223,var_10224,var_10225,], output)
mutated_mod['func_10226'] = func_10226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9455_call = mod.get_global_var('func_9455')
func_9456_call = mutated_mod.get_global_var('func_9456')
call_10232 = func_9455_call()
call_10233 = func_9455_call()
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_10247 = func_7015_call(relay.reshape(call_10232.astype('bool'), [416,]))
call_10248 = func_7015_call(relay.reshape(call_10232.astype('bool'), [416,]))
output = relay.Tuple([call_10232,call_10247,])
output2 = relay.Tuple([call_10233,call_10248,])
func_10264 = relay.Function([], output)
mod['func_10264'] = func_10264
mod = relay.transform.InferType()(mod)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10264_call = mutated_mod.get_global_var('func_10264')
call_10265 = func_10264_call()
output = call_10265
func_10266 = relay.Function([], output)
mutated_mod['func_10266'] = func_10266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7282_call = mod.get_global_var('func_7282')
func_7284_call = mutated_mod.get_global_var('func_7284')
call_10290 = relay.TupleGetItem(func_7282_call(), 0)
call_10291 = relay.TupleGetItem(func_7284_call(), 0)
func_9729_call = mod.get_global_var('func_9729')
func_9733_call = mutated_mod.get_global_var('func_9733')
var_10303 = relay.var("var_10303", dtype = "uint64", shape = (180,))#candidate|10303|(180,)|var|uint64
const_10304 = relay.const([3,-4,3,-5,10,5,-3,-1,9,2,-5,7,-2,5,3,7,-9,7,7,-4,7,8,-6,4,8,-3,10,8,-10,-9,-6,9,9,9,7,2,-5,-7,-9,8,-8,2,-1,-8,-5,4,-5,-7,8,-2,-1,2,-7,7,-9,-3,6,-4,8,-7,-1,4,-3,-2,-7,9,-1,2,-7,1,-3,-4,-2,5,-2,-4,-3,-1,-7,1,-9,2,9,-7,-4,-4,-5,-6,-7,-8,3,-6,-8,7,1,-1,-6,10,10,4,8,-1,-8,-1,-7,-6,10,-1,8,-6,-5,1,2,9,-1,-6,-2,-1,1,7,-8,10,-4,6,8,3,1,-5,7,4,8,4,-6,-2,4,7,-4,-2,10,2,-2,-1,1,7,-1,-4,1,-1,-3,-4,-2,-1,-7,-5,-10,5], dtype = "int8")#candidate|10304|(156,)|const|int8
call_10302 = relay.TupleGetItem(func_9729_call(relay.reshape(var_10303.astype('uint64'), [180,]), relay.reshape(const_10304.astype('int8'), [156,]), ), 3)
call_10305 = relay.TupleGetItem(func_9733_call(relay.reshape(var_10303.astype('uint64'), [180,]), relay.reshape(const_10304.astype('int8'), [156,]), ), 3)
output = relay.Tuple([call_10290,call_10302,var_10303,const_10304,])
output2 = relay.Tuple([call_10291,call_10305,var_10303,const_10304,])
func_10314 = relay.Function([var_10303,], output)
mod['func_10314'] = func_10314
mod = relay.transform.InferType()(mod)
var_10315 = relay.var("var_10315", dtype = "uint64", shape = (180,))#candidate|10315|(180,)|var|uint64
output = func_10314(var_10315)
func_10316 = relay.Function([var_10315], output)
mutated_mod['func_10316'] = func_10316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8144_call = mod.get_global_var('func_8144')
func_8146_call = mutated_mod.get_global_var('func_8146')
call_10353 = relay.TupleGetItem(func_8144_call(), 0)
call_10354 = relay.TupleGetItem(func_8146_call(), 0)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_10369 = relay.TupleGetItem(func_6636_call(), 0)
call_10370 = relay.TupleGetItem(func_6638_call(), 0)
func_7282_call = mod.get_global_var('func_7282')
func_7284_call = mutated_mod.get_global_var('func_7284')
call_10384 = relay.TupleGetItem(func_7282_call(), 0)
call_10385 = relay.TupleGetItem(func_7284_call(), 0)
func_456_call = mod.get_global_var('func_456')
func_459_call = mutated_mod.get_global_var('func_459')
const_10394 = relay.const([-3,-6,8,1,-3,3,-7,-6,10,1,-4,9,-8,-10,-10,-4], dtype = "int64")#candidate|10394|(16,)|const|int64
call_10393 = relay.TupleGetItem(func_456_call(relay.reshape(call_10369.astype('int64'), [416,]), relay.reshape(const_10394.astype('int64'), [16,]), ), 6)
call_10395 = relay.TupleGetItem(func_459_call(relay.reshape(call_10369.astype('int64'), [416,]), relay.reshape(const_10394.astype('int64'), [16,]), ), 6)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_10399 = relay.TupleGetItem(func_5663_call(), 0)
call_10400 = relay.TupleGetItem(func_5664_call(), 0)
func_456_call = mod.get_global_var('func_456')
func_459_call = mutated_mod.get_global_var('func_459')
call_10410 = relay.TupleGetItem(func_456_call(relay.reshape(call_10353.astype('int64'), [416,]), relay.reshape(const_10394.astype('int64'), [16,]), ), 0)
call_10411 = relay.TupleGetItem(func_459_call(relay.reshape(call_10353.astype('int64'), [416,]), relay.reshape(const_10394.astype('int64'), [16,]), ), 0)
output = relay.Tuple([call_10353,call_10369,call_10384,call_10393,const_10394,call_10399,call_10410,])
output2 = relay.Tuple([call_10354,call_10370,call_10385,call_10395,const_10394,call_10400,call_10411,])
func_10420 = relay.Function([], output)
mod['func_10420'] = func_10420
mod = relay.transform.InferType()(mod)
mutated_mod['func_10420'] = func_10420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10420_call = mutated_mod.get_global_var('func_10420')
call_10421 = func_10420_call()
output = call_10421
func_10422 = relay.Function([], output)
mutated_mod['func_10422'] = func_10422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_10436 = relay.TupleGetItem(func_5802_call(), 0)
call_10437 = relay.TupleGetItem(func_5803_call(), 0)
output = relay.Tuple([call_10436,])
output2 = relay.Tuple([call_10437,])
func_10438 = relay.Function([], output)
mod['func_10438'] = func_10438
mod = relay.transform.InferType()(mod)
mutated_mod['func_10438'] = func_10438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10438_call = mutated_mod.get_global_var('func_10438')
call_10439 = func_10438_call()
output = call_10439
func_10440 = relay.Function([], output)
mutated_mod['func_10440'] = func_10440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10441 = relay.var("var_10441", dtype = "float64", shape = (13, 14, 5))#candidate|10441|(13, 14, 5)|var|float64
uop_10442 = relay.sigmoid(var_10441.astype('float64')) # shape=(13, 14, 5)
output = uop_10442
output2 = uop_10442
func_10456 = relay.Function([var_10441,], output)
mod['func_10456'] = func_10456
mod = relay.transform.InferType()(mod)
var_10457 = relay.var("var_10457", dtype = "float64", shape = (13, 14, 5))#candidate|10457|(13, 14, 5)|var|float64
output = func_10456(var_10457)
func_10458 = relay.Function([var_10457], output)
mutated_mod['func_10458'] = func_10458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_10466 = relay.TupleGetItem(func_9244_call(), 1)
call_10467 = relay.TupleGetItem(func_9245_call(), 1)
func_4316_call = mod.get_global_var('func_4316')
func_4320_call = mutated_mod.get_global_var('func_4320')
var_10473 = relay.var("var_10473", dtype = "uint32", shape = (2730,))#candidate|10473|(2730,)|var|uint32
call_10472 = relay.TupleGetItem(func_4316_call(relay.reshape(var_10473.astype('uint32'), [14, 15, 13]), relay.reshape(var_10473.astype('uint32'), [14, 15, 13]), relay.reshape(var_10473.astype('bool'), [14, 15, 13]), ), 1)
call_10474 = relay.TupleGetItem(func_4320_call(relay.reshape(var_10473.astype('uint32'), [14, 15, 13]), relay.reshape(var_10473.astype('uint32'), [14, 15, 13]), relay.reshape(var_10473.astype('bool'), [14, 15, 13]), ), 1)
output = relay.Tuple([call_10466,call_10472,var_10473,])
output2 = relay.Tuple([call_10467,call_10474,var_10473,])
func_10493 = relay.Function([var_10473,], output)
mod['func_10493'] = func_10493
mod = relay.transform.InferType()(mod)
mutated_mod['func_10493'] = func_10493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10494 = relay.var("var_10494", dtype = "uint32", shape = (2730,))#candidate|10494|(2730,)|var|uint32
func_10493_call = mutated_mod.get_global_var('func_10493')
call_10495 = func_10493_call(var_10494)
output = call_10495
func_10496 = relay.Function([var_10494], output)
mutated_mod['func_10496'] = func_10496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9319_call = mod.get_global_var('func_9319')
func_9321_call = mutated_mod.get_global_var('func_9321')
call_10498 = func_9319_call()
call_10499 = func_9319_call()
output = relay.Tuple([call_10498,])
output2 = relay.Tuple([call_10499,])
func_10521 = relay.Function([], output)
mod['func_10521'] = func_10521
mod = relay.transform.InferType()(mod)
mutated_mod['func_10521'] = func_10521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10521_call = mutated_mod.get_global_var('func_10521')
call_10522 = func_10521_call()
output = call_10522
func_10523 = relay.Function([], output)
mutated_mod['func_10523'] = func_10523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mod.get_global_var('func_5802')
func_5803_call = mutated_mod.get_global_var('func_5803')
call_10565 = relay.TupleGetItem(func_5802_call(), 0)
call_10566 = relay.TupleGetItem(func_5803_call(), 0)
output = call_10565
output2 = call_10566
func_10569 = relay.Function([], output)
mod['func_10569'] = func_10569
mod = relay.transform.InferType()(mod)
output = func_10569()
func_10570 = relay.Function([], output)
mutated_mod['func_10570'] = func_10570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_10626 = relay.TupleGetItem(func_6805_call(), 0)
call_10627 = relay.TupleGetItem(func_6806_call(), 0)
output = call_10626
output2 = call_10627
func_10637 = relay.Function([], output)
mod['func_10637'] = func_10637
mod = relay.transform.InferType()(mod)
output = func_10637()
func_10638 = relay.Function([], output)
mutated_mod['func_10638'] = func_10638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8410_call = mod.get_global_var('func_8410')
func_8412_call = mutated_mod.get_global_var('func_8412')
call_10708 = func_8410_call()
call_10709 = func_8410_call()
func_4378_call = mod.get_global_var('func_4378')
func_4381_call = mutated_mod.get_global_var('func_4381')
const_10735 = relay.constdtype = "float64")#candidate|10735|(156, 16)|const|float64
call_10734 = func_4378_call(relay.reshape(const_10735.astype('float64'), [16, 12, 13]))
call_10736 = func_4378_call(relay.reshape(const_10735.astype('float64'), [16, 12, 13]))
func_9252_call = mod.get_global_var('func_9252')
func_9253_call = mutated_mod.get_global_var('func_9253')
call_10742 = relay.TupleGetItem(func_9252_call(), 0)
call_10743 = relay.TupleGetItem(func_9253_call(), 0)
uop_10760 = relay.sin(const_10735.astype('float64')) # shape=(156, 16)
func_9925_call = mod.get_global_var('func_9925')
func_9929_call = mutated_mod.get_global_var('func_9929')
var_10771 = relay.var("var_10771", dtype = "int8", shape = (156,))#candidate|10771|(156,)|var|int8
var_10772 = relay.var("var_10772", dtype = "float32", shape = (110,))#candidate|10772|(110,)|var|float32
const_10773 = relay.const([[-6.944923,2.467212,-3.304250,8.892059,5.471954,9.719619,-7.963887,-3.738931,-5.198092,-7.905314,4.375878,9.593176,2.265497,-1.990623,9.363123,1.265212,-1.339697,3.305573,-9.705550,-9.017398,-5.452289,0.786708,-0.048977,6.394906,-2.772722,-2.598103,-9.072078,8.238970,-3.588340,-8.439538,-6.253205,3.807756,-2.646085,7.680149,-9.911198,-4.065719,3.584865,8.375482,2.356307,5.351625,-3.667261,3.738512,5.683548,-9.301875,2.367852,-8.287429,-1.792051,-5.050948,-6.455189,-8.398636,0.705981,8.788083,-8.631929,7.535647,1.203173,-4.530516,-3.186093,-5.264369,-7.920152,-6.375544,5.553382,2.175964,-5.380231,-7.005605,-2.953444,9.290524,4.003860,-9.869717,6.664729,-3.768068,-6.911547,5.160375,-6.995457,4.160926,-4.519714,-6.547946,-2.436179,-1.400962,6.636743,3.020459,5.145406,-4.617906,0.094099,-0.715030],[-4.657413,1.925375,7.527705,6.522374,-8.952249,-1.130545,-3.916248,6.105438,7.728820,-4.262817,-5.839525,-2.035460,-3.649672,2.641080,2.792568,6.013528,-9.069067,6.507233,3.761277,4.797125,5.369392,-1.279831,3.203107,-5.745277,3.238585,1.585218,-9.637098,5.309054,-4.974901,-0.566790,2.633360,6.001019,-2.210943,5.835414,-4.021411,3.530106,3.248228,6.419714,3.754045,3.026929,-8.338594,3.037158,-5.142187,-9.254028,1.941454,-6.302701,-4.008764,-2.865950,-3.709742,-9.690326,-3.782409,-9.987817,1.923382,-5.281504,2.421505,-9.186702,9.327586,-6.035484,-4.430471,-2.670521,4.793256,-2.614646,1.981917,-6.176451,7.172547,-9.565796,6.790042,7.357028,-3.965582,2.577797,3.031715,-4.898074,8.992676,-7.768109,7.701505,9.490393,7.639083,-1.462692,-5.625749,9.812453,5.864131,-2.989430,-4.754986,8.523498],[0.143097,5.838263,-8.850884,5.014106,-5.028243,-7.450233,0.999798,1.055087,2.229812,3.095769,-7.170829,2.216838,-2.904934,-6.992146,2.657362,1.450704,6.656450,7.271603,-5.035684,8.242514,-3.984922,-7.350872,-4.363898,6.692057,5.987751,9.212566,2.418337,6.625746,-2.658269,-8.678601,-4.375297,8.442320,-5.289244,8.304388,3.092196,-3.616958,-2.471282,7.316457,-5.742164,8.028588,8.840921,4.330731,4.391548,-4.760081,0.309933,-3.818363,3.538305,3.482286,-6.825734,-4.935562,7.829514,-8.698657,-8.445557,-2.510007,-6.677550,-0.414082,3.389185,-6.359615,4.599487,-7.892726,0.926397,-7.753919,-3.756225,5.192228,-8.503419,9.206662,-5.344382,-1.591475,5.743163,8.979448,-6.096688,-9.811428,3.545085,-6.636115,1.846305,0.676763,1.279610,0.709875,6.647993,1.087749,9.502582,-8.293524,-2.213867,-7.765762],[2.203197,8.588370,9.921054,4.005719,-0.130315,9.579495,4.738088,-6.888936,-4.400675,-7.982087,-6.370241,-4.109459,-6.665672,5.501699,0.097902,6.596728,0.148826,-2.728735,-2.069000,-3.582789,4.453776,-1.980537,-8.878259,-4.098656,9.987369,2.915736,-3.882545,8.729125,-3.135717,4.769499,-4.556851,-6.017306,9.979140,-8.949385,1.388496,-7.272314,4.695205,7.015851,1.785641,-8.954777,-0.029247,3.316409,1.021150,-6.119250,2.047182,4.406572,-8.210768,-5.041494,-3.356946,4.696678,6.235874,1.646135,-4.941602,-3.178751,-1.529404,-6.213206,-4.002501,2.451927,-7.948952,3.443449,0.929287,3.359617,7.467073,4.130683,4.183724,1.400585,-0.457994,3.961221,0.255172,-3.692911,-0.287196,-8.040056,-4.453807,1.026175,6.222975,8.985983,1.393618,-3.324746,-9.023824,7.545695,-0.938553,-0.900070,0.850907,-8.111350],[8.124256,-9.933756,4.280986,6.404776,-7.011483,8.874346,1.905076,-9.034514,9.471333,1.837087,-5.246346,6.630628,1.778570,6.022081,8.767677,7.273830,-7.543914,8.687829,2.801232,-4.550555,9.235240,3.322842,-3.883020,1.702457,6.733113,9.952286,4.142962,-8.252267,-0.545007,4.886319,9.770527,-9.605645,-1.481723,-5.204810,-8.875593,4.548158,-0.555846,7.209847,-5.631126,-8.345740,8.470827,2.582270,4.234767,-0.518755,7.045124,5.963502,-6.647200,9.765139,5.688700,-4.159066,-0.304052,2.412149,6.316703,4.479535,-9.489695,0.709725,4.520252,-0.349528,-0.173852,-8.312720,5.952317,4.027121,3.818050,-1.945004,-4.631529,7.309570,5.535611,2.697763,9.822204,-3.130793,-3.230586,2.051213,8.523395,-2.725034,-6.765539,6.296591,4.035036,-4.114359,5.480941,4.295958,4.407672,-6.400157,-7.582905,3.797928],[-6.290408,1.619630,5.685982,-7.797933,-3.880727,7.780528,5.522184,-7.724908,2.872094,-0.745439,-4.652821,-4.925907,-9.076459,-8.397086,-7.540059,-5.403577,5.057216,4.372685,-3.262676,7.560870,5.937036,-4.764071,-1.606002,3.638353,0.462279,-8.175484,8.775694,7.314017,-7.463635,-0.986931,-0.368123,7.167781,-6.250419,-9.557029,0.052499,-8.560769,-8.723273,6.319153,3.369259,-4.488339,-0.513980,-1.644915,7.272088,8.575751,0.079457,-0.122334,-0.737097,-4.064772,2.712697,-6.928738,-7.013045,8.412444,3.344267,7.492427,6.523135,1.149866,1.117349,3.557508,9.051343,-8.561696,3.227199,-4.010737,-2.079965,-0.773711,-8.953461,-5.041085,3.238112,3.922029,5.904540,-5.932815,1.649493,-1.315715,1.447943,7.567471,1.339128,-7.762408,4.910594,-1.784379,6.276238,2.061989,9.389575,-2.119782,3.912324,9.949142],[7.735985,8.224109,5.156934,8.981833,0.707294,-0.817820,-3.141453,4.743366,5.120681,3.535396,5.872722,-7.525424,2.545991,6.722529,4.502546,7.965400,-7.131122,3.258355,-1.764140,5.556740,7.046219,-7.866469,-0.116558,6.955059,-4.661620,-0.289999,9.596852,-4.267198,1.985452,9.630303,9.321876,7.291254,2.042526,0.352628,3.556148,-6.861630,-4.307096,-1.448430,-9.612574,7.195362,7.229755,-9.310347,-3.396164,6.797178,1.034587,-9.989801,1.666300,-0.299955,-8.574319,-4.704179,-1.347703,6.526184,-5.599050,7.765905,4.365796,1.475074,-5.778436,-1.579754,-0.176421,1.250455,-0.425032,-1.242806,1.876497,6.925506,5.471193,-3.506123,-5.240161,-3.983603,3.243137,4.298013,-9.754793,1.320253,2.680741,-2.976064,3.262068,4.732389,0.246668,2.628340,-6.348804,7.792192,1.084104,-7.362281,3.866302,-8.725558],[-7.804889,1.125672,-0.540791,-3.169602,-8.515763,6.010626,-7.000416,-2.413832,9.515024,-6.996696,-1.987104,5.453240,7.614209,4.003410,-6.466228,-6.880536,7.972554,-2.199723,-3.565891,2.092564,6.577698,1.564744,7.795209,5.868634,5.405774,3.897853,1.899011,0.435383,-6.888015,3.010427,-6.703432,2.146223,-5.384963,2.079457,-0.640657,8.827024,-2.165814,0.671417,-3.553845,-5.273811,5.657899,9.590939,-6.599100,1.236130,8.765945,8.896858,-1.281919,-5.354682,-8.633399,-4.230406,-9.463627,-9.146859,-0.120934,1.761086,1.456720,-8.283598,1.036156,7.490917,8.952384,-6.634775,-5.302947,-7.681262,-1.972086,1.956088,4.709848,-1.073705,9.916372,-7.439290,-0.989964,4.514379,4.890898,-9.138936,0.551534,-8.251507,4.042133,-4.370222,-6.336791,-4.986811,8.228222,-9.201850,1.440941,-5.012869,9.288120,-7.305308],[-9.842814,8.621036,-1.636734,-2.916096,-5.566218,-9.653420,8.303958,3.030466,2.024772,6.147447,2.548759,2.443199,-2.722581,9.434851,-9.192735,6.484058,8.937043,-7.138799,4.453676,-5.937626,3.135909,6.830217,0.768876,9.942389,-0.560546,5.057256,-6.700385,5.079172,-1.181200,-3.431308,-2.800321,-9.460946,5.918777,5.979974,8.332755,-1.903672,-8.816232,-1.151543,-4.944565,3.109826,-4.237292,-1.167750,6.721355,3.777933,-5.140766,8.285959,7.275591,0.164616,-3.276526,9.142000,-0.010816,6.061695,7.263133,-5.438593,3.226115,1.699711,-3.891726,-7.695081,9.203299,3.058933,9.985598,-8.223446,-5.522832,6.258232,1.222266,2.036890,-0.942126,-5.401777,-6.815372,3.955915,-3.097115,1.014097,-9.193563,1.361383,5.858292,-6.734639,6.758630,6.402512,-8.088935,-3.107906,-8.821330,4.064687,-0.989852,-4.500453],[-8.459088,-2.673472,-0.774571,6.678052,4.367676,-1.291121,2.586668,-2.878550,-2.197041,3.105543,-2.094309,-4.511707,2.679029,-3.472345,6.779539,-8.976490,-7.674033,9.575670,-3.945185,-9.580541,0.148405,-8.158423,3.513986,7.323401,-7.669228,-2.421014,-3.208277,0.080289,-9.341128,-5.617272,9.957500,4.288053,1.427828,-0.227124,1.431667,-8.656268,-0.357320,0.160673,1.524407,2.743236,8.489480,-4.378717,-2.484048,5.338575,7.866698,-7.658129,-2.737841,6.983565,-9.913038,7.333138,-5.992536,-8.022524,-1.687351,-8.766415,-6.144551,-1.634166,8.551971,-4.269660,-6.427890,-3.634443,0.378726,-7.720872,-0.531191,2.161633,-6.341229,-3.428230,-0.260524,9.477969,-1.799924,-1.473159,5.400187,6.605787,-9.033948,-3.354115,0.184312,-9.882188,4.658105,9.872461,-0.974725,9.380040,2.160423,3.721778,-3.866380,8.677988],[-1.032834,-6.118361,-1.249990,-9.636872,8.638514,2.041132,7.405396,8.355056,6.167523,-0.950247,1.613087,-2.495787,8.009187,3.987512,-7.434422,5.068341,-4.061589,-4.270850,6.587025,8.857153,7.523723,6.445467,4.397312,9.949738,5.319228,-2.370523,0.419375,-5.767664,1.540284,7.599695,-3.086687,-4.622995,-7.507203,8.703533,-6.476317,-7.910525,6.771313,-1.713718,-8.214946,8.986820,-9.287451,-4.498290,-8.304972,-2.916220,-7.290522,4.912420,-7.598116,-8.813768,-9.758984,-7.221337,-1.345174,-3.611282,3.290663,-5.357161,4.941198,6.353461,-5.685672,0.880670,-9.644897,-9.039737,6.942707,1.478102,0.520678,-4.109463,7.086974,-0.293485,0.423952,-1.327575,-4.585802,-8.948097,-8.402264,4.542655,-1.047354,-6.149344,-9.367906,1.782770,-2.034443,-6.120260,-7.930398,-2.576471,8.348369,-3.773539,8.660224,7.401341],[1.074013,2.368915,-8.674628,-8.584699,-0.505841,1.426297,1.575777,-7.669515,-4.831845,-7.153673,-2.137183,-8.708232,3.943540,-3.941822,7.494910,-2.302305,-1.418189,2.503591,-5.568441,7.039077,-6.068383,-3.205641,8.542524,1.434561,9.947081,5.793398,-3.490700,5.735530,-3.386585,8.493766,-4.602228,-4.718729,2.183539,6.683672,-9.558180,-9.889904,1.925998,-3.035041,-5.163034,-1.775576,6.573390,4.508726,-4.151876,-1.576480,-3.419348,-9.429996,5.829590,8.750701,-0.470626,6.490240,0.293044,3.516423,-7.122874,-6.979720,-6.998107,-8.012621,-4.720034,7.637407,-4.502901,2.502359,3.119830,4.985870,-0.977503,-5.048437,5.802404,9.684186,4.362730,-9.012215,1.346237,-9.358449,3.437309,4.067435,-3.253694,-5.119795,-4.123200,-3.754358,-4.768728,4.613093,-7.411054,3.220774,2.523220,1.422945,-5.986090,-6.881973]], dtype = "float32")#candidate|10773|(12, 84)|const|float32
call_10770 = relay.TupleGetItem(func_9925_call(relay.reshape(var_10771.astype('int8'), [156, 1]), relay.reshape(var_10772.astype('float32'), [110,]), relay.reshape(const_10773.astype('float32'), [1008,]), ), 0)
call_10774 = relay.TupleGetItem(func_9929_call(relay.reshape(var_10771.astype('int8'), [156, 1]), relay.reshape(var_10772.astype('float32'), [110,]), relay.reshape(const_10773.astype('float32'), [1008,]), ), 0)
output = relay.Tuple([call_10708,call_10734,call_10742,uop_10760,call_10770,var_10771,var_10772,const_10773,])
output2 = relay.Tuple([call_10709,call_10736,call_10743,uop_10760,call_10774,var_10771,var_10772,const_10773,])
func_10781 = relay.Function([var_10771,var_10772,], output)
mod['func_10781'] = func_10781
mod = relay.transform.InferType()(mod)
mutated_mod['func_10781'] = func_10781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10781_call = mutated_mod.get_global_var('func_10781')
var_10783 = relay.var("var_10783", dtype = "int8", shape = (156,))#candidate|10783|(156,)|var|int8
var_10784 = relay.var("var_10784", dtype = "float32", shape = (110,))#candidate|10784|(110,)|var|float32
call_10782 = func_10781_call(var_10783,var_10784,)
output = call_10782
func_10785 = relay.Function([var_10783,var_10784,], output)
mutated_mod['func_10785'] = func_10785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mod.get_global_var('func_5627')
func_5628_call = mutated_mod.get_global_var('func_5628')
call_10792 = relay.TupleGetItem(func_5627_call(), 2)
call_10793 = relay.TupleGetItem(func_5628_call(), 2)
var_10796 = relay.var("var_10796", dtype = "int64", shape = (2, 728))#candidate|10796|(2, 728)|var|int64
bop_10797 = relay.subtract(call_10792.astype('float32'), relay.reshape(var_10796.astype('float32'), relay.shape_of(call_10792))) # shape=(2, 728)
bop_10800 = relay.subtract(call_10793.astype('float32'), relay.reshape(var_10796.astype('float32'), relay.shape_of(call_10793))) # shape=(2, 728)
uop_10805 = relay.sin(call_10792.astype('float64')) # shape=(2, 728)
uop_10807 = relay.sin(call_10793.astype('float64')) # shape=(2, 728)
func_456_call = mod.get_global_var('func_456')
func_459_call = mutated_mod.get_global_var('func_459')
var_10813 = relay.var("var_10813", dtype = "int64", shape = (416,))#candidate|10813|(416,)|var|int64
var_10814 = relay.var("var_10814", dtype = "int64", shape = (16,))#candidate|10814|(16,)|var|int64
call_10812 = relay.TupleGetItem(func_456_call(relay.reshape(var_10813.astype('int64'), [416,]), relay.reshape(var_10814.astype('int64'), [16,]), ), 5)
call_10815 = relay.TupleGetItem(func_459_call(relay.reshape(var_10813.astype('int64'), [416,]), relay.reshape(var_10814.astype('int64'), [16,]), ), 5)
uop_10823 = relay.tan(uop_10805.astype('float32')) # shape=(2, 728)
uop_10825 = relay.tan(uop_10807.astype('float32')) # shape=(2, 728)
uop_10829 = relay.log(uop_10823.astype('float64')) # shape=(2, 728)
uop_10831 = relay.log(uop_10825.astype('float64')) # shape=(2, 728)
uop_10834 = relay.sqrt(uop_10829.astype('float64')) # shape=(2, 728)
uop_10836 = relay.sqrt(uop_10831.astype('float64')) # shape=(2, 728)
bop_10839 = relay.less_equal(uop_10829.astype('bool'), relay.reshape(uop_10805.astype('bool'), relay.shape_of(uop_10829))) # shape=(2, 728)
bop_10842 = relay.less_equal(uop_10831.astype('bool'), relay.reshape(uop_10807.astype('bool'), relay.shape_of(uop_10831))) # shape=(2, 728)
uop_10856 = relay.exp(uop_10834.astype('float32')) # shape=(2, 728)
uop_10858 = relay.exp(uop_10836.astype('float32')) # shape=(2, 728)
uop_10877 = relay.atan(uop_10856.astype('float64')) # shape=(2, 728)
uop_10879 = relay.atan(uop_10858.astype('float64')) # shape=(2, 728)
uop_10881 = relay.sigmoid(bop_10839.astype('float64')) # shape=(2, 728)
uop_10883 = relay.sigmoid(bop_10842.astype('float64')) # shape=(2, 728)
uop_10891 = relay.log2(uop_10877.astype('float32')) # shape=(2, 728)
uop_10893 = relay.log2(uop_10879.astype('float32')) # shape=(2, 728)
func_2788_call = mod.get_global_var('func_2788')
func_2792_call = mutated_mod.get_global_var('func_2792')
const_10897 = relay.const(2, dtype = "int64")#candidate|10897|()|const|int64
const_10898 = relay.const([8,6,-6,10,10,6,-4,-9,5,10,-4,8,-8,-7,2,-8,2,4,7,-7,-1,-5,9,7,6,3,2,4,-4,10,-9,-6,2,-8,3,6,-10,9,2,3,-5,-10,10,9,-4,-9,7,3,5,-8,9,-2,-4,-10,9,8,2,3,3,5,2,2,9,-1,-9,5,-5,-8,-8,-9,4,2,-5,-9,8,-8,7,-2,-5,3,1,5,4,7,4,10,-3,-3,7,9,-5,8,6,10,-2,-7,-10,-1,6,8,-3,-5,9,7,9,3,-2,7,2,9,-10,-7,7,-7,-5,10,-3,6,-6,-10,-6,8,-8,6,-2,-2,-9,5,8,-8,8,2,-4,3,-9,6,10,5,-9,-5,-4,-5,9,-9,-3,1,7,-1,4,-3,-9,-10,3,6,-6,2,10,-5,9,-4,-2,-2,-10,10,-10,-7,-1,7,-2,-5,4,10,-7,2,10,-8,3,-1,-4,-7,3,-3,-2,-8,7,-5,-3,6,-2,5,4,-4,5,4,-6,4,-6,8,1,-4,-1,9,8,5,-4,1,6,-7,-1,-10,1,-10,3,8,-4,-2,3,-9,7,-10,6,10,-9,3,-7,8,-7,8,-4,5,9,3,1,5,-7,10,8,-3,7,8,-9,6,5,-7,10,-7,1,3,3,1,-4,-1,-9,3,4,-1,-6,-8,-1,-9,9,2,-7,2,-4,2,-2,-2,9,8,-7,-6,-6,-5,1,9,-2,-10,5,-1,-2,7,-5,-6,6,-10,5,-7,2,9,6,3,-9,6,-4,-3,9,-2,-8,-3,-4,-9,-10,-9,8,6,-8,-9,4,10,-4,6,-2,-2,-7,-7,7,-10,-2,-9,-9,-4,6,3,-1,-9,8,10,2,-10,-6,-1,-3,-10,-4,-5,4,1,3,1,8,10,-3,-4,4,-7,-3,5,-3,-2,4,1,9,7,5,7,-9,-7,-9,9,-7,6,-7,7,-6,9,8,-7,10,-8,-3,8,4,-4,10,-10,4,-8,-9,-2,-4,4,-9,-7,-4,-3,2,10,-1,-2,-10,10,10,-4,3,-3,-5,8,-9,-4,-2,1,10,-1,-8,4,7,1,-9,6,2,-10,-8,2,3,-10,3,-8,-5,-6,6,-10,-1,10,-5,-4,6,4,10,1,2,-8,-5,7,-9,-2,2,-8,2,-5,-2,3,-2,-4,-5,-8,8,-9,4,6,1,-8,9,-6,-2,7,-9,-4,9,5,-4,-10,-9,-9,7,6,-3,-10,10,1,-6,-6,9,6,-9,-4,4,-7,-5,7,10,-9,-8,5,-7,-10,5,8,7,1,-6,8,9,4,10,7,5,-6,6,-2,8,-6,7,4,-9,-9,2,-7,-3,-8,-2,-6,10,3,1,-1,-7,-1,-10,-8,2,5,7,8,3,-4,10,6], dtype = "int64")#candidate|10898|(528,)|const|int64
call_10896 = func_2788_call(relay.reshape(const_10897.astype('int64'), []), relay.reshape(const_10898.astype('int64'), [6, 11, 8]), )
call_10899 = func_2788_call(relay.reshape(const_10897.astype('int64'), []), relay.reshape(const_10898.astype('int64'), [6, 11, 8]), )
func_8144_call = mod.get_global_var('func_8144')
func_8146_call = mutated_mod.get_global_var('func_8146')
call_10902 = relay.TupleGetItem(func_8144_call(), 0)
call_10903 = relay.TupleGetItem(func_8146_call(), 0)
output = relay.Tuple([bop_10797,call_10812,var_10813,var_10814,uop_10881,uop_10891,call_10896,const_10897,const_10898,call_10902,])
output2 = relay.Tuple([bop_10800,call_10815,var_10813,var_10814,uop_10883,uop_10893,call_10899,const_10897,const_10898,call_10903,])
func_10913 = relay.Function([var_10796,var_10813,var_10814,], output)
mod['func_10913'] = func_10913
mod = relay.transform.InferType()(mod)
mutated_mod['func_10913'] = func_10913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10913_call = mutated_mod.get_global_var('func_10913')
var_10915 = relay.var("var_10915", dtype = "int64", shape = (2, 728))#candidate|10915|(2, 728)|var|int64
var_10916 = relay.var("var_10916", dtype = "int64", shape = (416,))#candidate|10916|(416,)|var|int64
var_10917 = relay.var("var_10917", dtype = "int64", shape = (16,))#candidate|10917|(16,)|var|int64
call_10914 = func_10913_call(var_10915,var_10916,var_10917,)
output = call_10914
func_10918 = relay.Function([var_10915,var_10916,var_10917,], output)
mutated_mod['func_10918'] = func_10918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5837_call = mod.get_global_var('func_5837')
func_5839_call = mutated_mod.get_global_var('func_5839')
call_10956 = func_5837_call()
call_10957 = func_5837_call()
func_9972_call = mod.get_global_var('func_9972')
func_9974_call = mutated_mod.get_global_var('func_9974')
call_10962 = relay.TupleGetItem(func_9972_call(), 0)
call_10963 = relay.TupleGetItem(func_9974_call(), 0)
output = relay.Tuple([call_10956,call_10962,])
output2 = relay.Tuple([call_10957,call_10963,])
func_10971 = relay.Function([], output)
mod['func_10971'] = func_10971
mod = relay.transform.InferType()(mod)
output = func_10971()
func_10972 = relay.Function([], output)
mutated_mod['func_10972'] = func_10972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9048_call = mod.get_global_var('func_9048')
func_9050_call = mutated_mod.get_global_var('func_9050')
call_11070 = func_9048_call()
call_11071 = func_9048_call()
func_10521_call = mod.get_global_var('func_10521')
func_10523_call = mutated_mod.get_global_var('func_10523')
call_11073 = relay.TupleGetItem(func_10521_call(), 0)
call_11074 = relay.TupleGetItem(func_10523_call(), 0)
output = relay.Tuple([call_11070,call_11073,])
output2 = relay.Tuple([call_11071,call_11074,])
func_11083 = relay.Function([], output)
mod['func_11083'] = func_11083
mod = relay.transform.InferType()(mod)
mutated_mod['func_11083'] = func_11083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11083_call = mutated_mod.get_global_var('func_11083')
call_11084 = func_11083_call()
output = call_11084
func_11085 = relay.Function([], output)
mutated_mod['func_11085'] = func_11085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9972_call = mod.get_global_var('func_9972')
func_9974_call = mutated_mod.get_global_var('func_9974')
call_11103 = relay.TupleGetItem(func_9972_call(), 0)
call_11104 = relay.TupleGetItem(func_9974_call(), 0)
var_11110 = relay.var("var_11110", dtype = "float64", shape = (1, 15, 11))#candidate|11110|(1, 15, 11)|var|float64
bop_11111 = relay.bitwise_or(call_11103.astype('uint64'), relay.reshape(var_11110.astype('uint64'), relay.shape_of(call_11103))) # shape=(1, 15, 11)
bop_11114 = relay.bitwise_or(call_11104.astype('uint64'), relay.reshape(var_11110.astype('uint64'), relay.shape_of(call_11104))) # shape=(1, 15, 11)
func_9455_call = mod.get_global_var('func_9455')
func_9456_call = mutated_mod.get_global_var('func_9456')
call_11120 = func_9455_call()
call_11121 = func_9455_call()
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_11126 = relay.TupleGetItem(func_9244_call(), 1)
call_11127 = relay.TupleGetItem(func_9245_call(), 1)
output = relay.Tuple([bop_11111,call_11120,call_11126,])
output2 = relay.Tuple([bop_11114,call_11121,call_11127,])
func_11132 = relay.Function([var_11110,], output)
mod['func_11132'] = func_11132
mod = relay.transform.InferType()(mod)
mutated_mod['func_11132'] = func_11132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11133 = relay.var("var_11133", dtype = "float64", shape = (1, 15, 11))#candidate|11133|(1, 15, 11)|var|float64
func_11132_call = mutated_mod.get_global_var('func_11132')
call_11134 = func_11132_call(var_11133)
output = call_11134
func_11135 = relay.Function([var_11133], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9138_call = mod.get_global_var('func_9138')
func_9139_call = mutated_mod.get_global_var('func_9139')
call_11142 = relay.TupleGetItem(func_9138_call(), 0)
call_11143 = relay.TupleGetItem(func_9139_call(), 0)
output = call_11142
output2 = call_11143
func_11160 = relay.Function([], output)
mod['func_11160'] = func_11160
mod = relay.transform.InferType()(mod)
output = func_11160()
func_11161 = relay.Function([], output)
mutated_mod['func_11161'] = func_11161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_11220 = relay.TupleGetItem(func_5663_call(), 0)
call_11221 = relay.TupleGetItem(func_5664_call(), 0)
output = call_11220
output2 = call_11221
func_11222 = relay.Function([], output)
mod['func_11222'] = func_11222
mod = relay.transform.InferType()(mod)
output = func_11222()
func_11223 = relay.Function([], output)
mutated_mod['func_11223'] = func_11223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6700_call = mod.get_global_var('func_6700')
func_6701_call = mutated_mod.get_global_var('func_6701')
call_11232 = relay.TupleGetItem(func_6700_call(), 0)
call_11233 = relay.TupleGetItem(func_6701_call(), 0)
const_11234 = relay.const([-7,-6,3,-6,2,2,-9,-7,6,10,1,-9,-6,7,-8,-5,-1,6,4,-10,-1,-2,9,1,-1,5,8,7,6,-7,10,-9,-2,-7,-9,3,-9,-2,-2,-4,-5,-7,5,-7,7,7,-8,10,-1,8,-2,-2,4,1,-1,1,6,-9,1,3,-1,-9,7,9,-4,10,8,1,7,1,9,-4,-9,9,10,-2,-2,-2,-10,-9,-9,-2,-2,-10,5,7,-1,-10,-5,-4,2,-7,-9,-5,9,-3,4,5,6,-7,5,6,6,-10,-8,-5,2,-5,3,8,-6,2,4,-8,-3,5,8,5,9,2,-10,8,-2,-1,-4,7,-9,2,6,-6,-4,6,2,5,-5,-1,-5,-6,-1,-2,-5,-5,-7,8,6,2,-4,-1,8,-10,-2,-9,-1,3,-2,-8,-3,-1,-9,-4,4,-6,-4,7,-2,8,-9,2,4,3,-2,4,4,-8,6,-10,9,1,5,-7,4,-3,-2,4,-2,-1,5,-2,1,-2,9,9,9,3,-7,-1,6,5,-10,-6,-3,-7,-4,-9,-6,-4,-4,6,5,5,10,3,1,5,-5,4,-10,8,9,-1,-8,-3,-1,4,-8,6,-7,3,-6,-9,-1,-1,-3,7,6,-10,-4,-7,-4,1,-1,8,-7,-8,-9,-6,-10,-1,7,7,-5,-10,-2,8,-7,7,-7,10,6,-8,6,5,-2,1,4,3,-6,2,9,3,-8,-7,-7,-10,-4,-10,-4,-6,-1,6,-6,-7,-3,10,9,-9,6,-2,3,-6,10,-7,8,1,-2,-7,9,9,-4,-5,4,10,9,1,-3,9,2,8,-9,3,5,8,-5,5,7,4,3,1,9,-4,-10,6,8,6,-2,-1,-9,2,-7,5,8,-5,-7,-4,10,-1,-2,-4,10,10,-7,2,1,1,-4,1,-10,-2,5,-5,6,7,2,8,9,7,-10,-1,-4,6,9,-7,-8,-5,-7,-9,-6,-10,-6,-2,6,-1,6,-5,6,-8,3,-3,-6,-5,3,-5,10,7,2,3,7,-6,9,5,7,10,9,-10,-6,-8,-8,-5,-8,6,-2,-2,6,3,-1,9,-2,-7,-4,7,-3,8,10,2,8,10], dtype = "int64")#candidate|11234|(416,)|const|int64
bop_11235 = relay.not_equal(call_11232.astype('bool'), relay.reshape(const_11234.astype('bool'), relay.shape_of(call_11232))) # shape=(416,)
bop_11238 = relay.not_equal(call_11233.astype('bool'), relay.reshape(const_11234.astype('bool'), relay.shape_of(call_11233))) # shape=(416,)
func_8895_call = mod.get_global_var('func_8895')
func_8897_call = mutated_mod.get_global_var('func_8897')
call_11243 = relay.TupleGetItem(func_8895_call(), 0)
call_11244 = relay.TupleGetItem(func_8897_call(), 0)
output = relay.Tuple([bop_11235,call_11243,])
output2 = relay.Tuple([bop_11238,call_11244,])
func_11248 = relay.Function([], output)
mod['func_11248'] = func_11248
mod = relay.transform.InferType()(mod)
mutated_mod['func_11248'] = func_11248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11248_call = mutated_mod.get_global_var('func_11248')
call_11249 = func_11248_call()
output = call_11249
func_11250 = relay.Function([], output)
mutated_mod['func_11250'] = func_11250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6805_call = mod.get_global_var('func_6805')
func_6806_call = mutated_mod.get_global_var('func_6806')
call_11256 = relay.TupleGetItem(func_6805_call(), 0)
call_11257 = relay.TupleGetItem(func_6806_call(), 0)
func_10080_call = mod.get_global_var('func_10080')
func_10084_call = mutated_mod.get_global_var('func_10084')
var_11266 = relay.var("var_11266", dtype = "int64", shape = (8, 66))#candidate|11266|(8, 66)|var|int64
var_11267 = relay.var("var_11267", dtype = "int64", shape = (16,))#candidate|11267|(16,)|var|int64
call_11265 = relay.TupleGetItem(func_10080_call(relay.reshape(var_11266.astype('int64'), [1, 528]), relay.reshape(var_11267.astype('int64'), [16,]), ), 5)
call_11268 = relay.TupleGetItem(func_10084_call(relay.reshape(var_11266.astype('int64'), [1, 528]), relay.reshape(var_11267.astype('int64'), [16,]), ), 5)
output = relay.Tuple([call_11256,call_11265,var_11266,var_11267,])
output2 = relay.Tuple([call_11257,call_11268,var_11266,var_11267,])
func_11269 = relay.Function([var_11266,var_11267,], output)
mod['func_11269'] = func_11269
mod = relay.transform.InferType()(mod)
mutated_mod['func_11269'] = func_11269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11269_call = mutated_mod.get_global_var('func_11269')
var_11271 = relay.var("var_11271", dtype = "int64", shape = (8, 66))#candidate|11271|(8, 66)|var|int64
var_11272 = relay.var("var_11272", dtype = "int64", shape = (16,))#candidate|11272|(16,)|var|int64
call_11270 = func_11269_call(var_11271,var_11272,)
output = call_11270
func_11273 = relay.Function([var_11271,var_11272,], output)
mutated_mod['func_11273'] = func_11273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5954_call = mod.get_global_var('func_5954')
func_5955_call = mutated_mod.get_global_var('func_5955')
call_11287 = func_5954_call()
call_11288 = func_5954_call()
output = call_11287
output2 = call_11288
func_11298 = relay.Function([], output)
mod['func_11298'] = func_11298
mod = relay.transform.InferType()(mod)
output = func_11298()
func_11299 = relay.Function([], output)
mutated_mod['func_11299'] = func_11299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_11344 = relay.TupleGetItem(func_8402_call(), 0)
call_11345 = relay.TupleGetItem(func_8404_call(), 0)
func_10913_call = mod.get_global_var('func_10913')
func_10918_call = mutated_mod.get_global_var('func_10918')
const_11348 = relay.const([-2,8,-3,-5,6,5,3,-8,3,-3,-6,4,-1,-4,-7,-3,-4,-2,-1,-3,-6,-9,-2,8,-10,4,2,-4,10,-2,-10,8,5,1,1,-2,-4,-8,8,4,8,6,4,3,-9,-5,-7,3,4,-9,-9,4,2,2,7,-7,-1,-7,2,-3,2,-10,-10,2,-8,-1,-3,-2,6,-4,9,-9,2,-7,5,-5,-9,-5,-7,-5,1,-6,2,9,2,-2,-3,-3,-9,1,-2,1,1,-2,-5,5,-4,10,9,-3,-3,3,-10,-4,9,-2,-2,-2,-1,1,-1,3,9,1,-5,10,3,-5,-10,-1,2,9,8,-7,8,-4,6,4,1,1,4,-3,5,-10,-6,-3,6,-4,-5,-5,9,-2,7,8,3,-3,3,4,3,-2,-4,-7,8,7,2,-6,1,6,6,-5,5,8,3,7,-5,-5,5,1,3,7,-2,-6,3,-1,8,-1,-6,-3,10,-5,9,6,-1,-9,7,-4,1,9,4,4,-8,4,-4,2,-7,1,-6,9,-3,6,4,-6,9,-10,9,-4,-1,-10,-7,10,-9,7,-5,-5,-7,-8,-2,-8,2,-6,6,-8,10,1,-10,9,-10,-5,7,5,4,6,8,8,4,4,6,6,-10,5,-7,-1,3,6,-9,-3,-4,8,-3,-3,10,6,9,-4,-10,-3,3,6,2,-7,2,-4,9,10,10,-10,1,8,9,-3,3,5,-9,-4,-4,-2,1,3,-9,3,-6,-10,8,-1,2,-5,1,10,3,-1,-5,3,10,-7,9,-6,2,4,-6,8,-8,-2,4,-8,-6,-2,-5,-8,-1,4,6,4,8,1,-2,3,-3,-10,-8,2,1,-6,10,-1,-10,10,-7,-7,4,-10,-8,-8,-9,-6,1,1,-3,-8,1,-4,8,-9,8,-1,-4,1,-5,1,-9,1,6,-2,8,-1,-3,10,-7,-6,6,9,10,2,-1,1,1,-10,5,5,3,-4,9,8,4,-4,1,10,5,7,6,-6,10,-3,9,10,-4,-8,10,-10,10,-7,-9,-2,-9,-2,7,-2,-5,5,3,-8,2,1,-4,8,-6,4,-4,-2,5,7,-4,-10,4,-5,-1,-5,8,6,-6,5,1,-9,-6,-7,-7,-5,-3,-1,10,-5,6,-5,7,-6,8,-7,9,-4,-9,5,5,-6,-5,-9,-3,-8,-6,3,4,8,-1,3,-1,6,-7,-3,-3,5,7,2,10,-9,5,-10,3,3,3,5,-10,-1,2,-3,4,-2,2,1,6,-6,3,-1,6,-10,7,-2,-4,8,-8,2,7,-4,-8,8,-6,6,-4,4,9,2,9,7,-8,1,5,7,5,-2,-8,-8,7,-2,1,5,-1,-9,1,-4,-2,3,6,1,3,6,-4,-4,10,-3,3,2,5,2,9,2,-9,-9,9,6,-3,-3,-9,-9,-4,-2,2,-1,-7,-10,-1,10,-9,6,-8,10,-7,10,2,6,2,5,6,-1,-10,-1,-5,-2,-1,4,3,3,-9,-7,-10,8,-5,-6,-10,-3,-7,-3,5,-7,-6,-6,-5,8,-1,4,1,3,-5,-4,3,-5,-2,-1,6,5,-8,-10,1,-6,4,-4,-2,-9,-4,-9,-10,7,5,-1,9,10,9,2,-7,-2,8,5,3,-6,7,-5,-2,-1,2,5,-9,9,-4,-8,1,1,6,-1,10,-5,3,-5,2,-9,9,-8,-10,4,9,-4,-2,10,-2,4,-6,-10,6,-3,3,-5,-9,-9,-9,2,7,-8,2,-4,9,-8,-6,6,-8,-2,-5,3,9,1,-9,8,1,-2,4,-9,3,-7,-10,10,-4,-8,9,-10,-5,8,6,-7,-4,9,-6,-2,-8,7,4,7,-10,-6,6,7,1,-7,-3,-3,5,4,2,10,7,-9,5,-10,1,-3,-3,10,8,-10,-2,-8,5,-10,-10,-7,8,-9,-2,-5,6,-9,10,3,-7,-9,-6,-9,8,7,8,6,-4,8,-5,-10,-2,-10,-8,-8,-7,-7,-3,5,-6,1,10,9,-4,9,-1,-10,8,3,6,5,10,6,8,5,6,7,5,10,-4,-9,-8,6,-3,-3,2,-2,-10,6,-2,10,-6,5,-3,-1,6,10,2,-1,6,-4,2,5,-4,9,-1,-5,-6,-10,-5,-5,-2,-4,-2,-1,-9,-1,3,-4,-6,-5,2,7,10,8,-10,-8,-10,9,9,2,-7,2,10,6,-9,-2,3,-10,9,-10,-8,1,3,10,4,-2,9,-10,8,-5,-9,9,-8,-4,-4,4,-3,2,9,-7,-7,1,-1,-3,8,-7,4,-8,-2,7,-7,9,-8,-7,2,7,3,3,2,2,-5,9,-4,2,-1,1,2,9,9,-6,-10,-10,4,6,1,-7,8,8,5,7,8,6,-5,1,-3,-7,-1,-7,-2,2,4,2,5,3,9,-4,7,9,6,-8,-9,1,3,7,-2,1,-8,7,4,-3,-9,1,8,-2,2,-1,-6,-2,-2,-4,-10,10,9,-3,-7,-3,-5,6,4,6,-7,-6,-1,10,7,-10,1,7,7,-1,8,5,-10,-5,-9,2,-9,-9,-7,4,4,-3,5,-5,3,9,1,3,8,-8,10,-5,6,-9,-4,9,8,5,3,8,-7,7,2,9,-9,-7,5,-8,-5,-6,-2,8,-6,-5,-4,-6,9,-9,5,-3,5,3,-1,2,10,6,2,5,-7,-10,-3,-2,-10,-7,8,-9,-9,2,-7,-7,-4,-10,7,6,-6,-6,3,-5,-8,-9,-2,9,5,3,-8,9,-3,8,-6,5,9,3,9,6,-10,-4,-5,4,-6,2,-7,-6,9,10,8,-7,7,10,10,3,-1,2,2,8,3,2,8,-8,-1,4,4,-8,-3,-6,4,-3,-6,3,-3,6,8,5,7,4,-4,9,2,-8,4,8,-3,3,7,9,-6,5,-4,-9,-4,1,3,-5,-7,-10,6,9,8,-1,9,-5,7,-6,-10,4,-1,-1,6,1,-10,-4,-8,6,-8,-3,8,-1,-7,6,3,-3,-6,9,2,-5,1,-9,-6,-5,3,-1,-5,4,9,-1,-9,-9,9,-6,7,1,1,-9,6,-1,-3,10,3,9,-5,6,-5,8,2,2,5,1,7,5,3,2,8,-3,-7,5,-5,5,-6,1,-9,1,-10,2,-2,1,-4,-1,-7,3,1,6,-1,-3,6,-8,10,-10,2,10,-10,-9,-5,5,7,8,8,-3,8,7,-3,-10,-4,5,-2,-10,-7,-5,1,6,7,-5,9,3,5,1,7,-3,10,9,-3,2,-7,-2,-6,6,2,10,1,-9,5,6,-1,-5,7,3,-2,-1,6,5,2,7,5,7,1,4,-6,-10,-9,8,-10,5,-9,-8,10,7,7,7,-9,7,10,8,10,-3,-6,5,3,5,-8,7,8,-1,-7,-6,5,-8,3,-3,7,-3,8,-6,-10,4,-8,6,-6,1,-9,10,10,-1,6,-7,-9,-4,10,9,-5,-10,6,6,-4,5,-6,7,3,-9,3,9,-8,-8,-5,10,2,10,5,7,-7,-3,7,8,-2,-8,5,-7,-2,-3,4,6,3,-1,6,-10,-4,5,-6,1,2,-1,1,-3,-2,2,2,-1,6,5,-4,2,-7,9,-1,-1,4,-1,-9,7,-3,-9,-7,-9,-4,2,7,-6,-2,-10,-7,-6,-3,3,-3,5,-9,8,7,-8,10,-1,-5,-5,-1,-2,6,-9,-6,2,5,3,4,-10,1,-3,8,-9,-10,2,9,-2,-1,-5,7,4,7,-6,3,5,3,-4,-2,4,1,-5,-7,7,-10,-4,-10,-9,-8,-1,10,-4,1,-2,4,5,1,6,-7,-5,-5,-3,9,-3,6,9,-9,-9], dtype = "int64")#candidate|11348|(1456,)|const|int64
var_11349 = relay.var("var_11349", dtype = "int64", shape = (16,))#candidate|11349|(16,)|var|int64
call_11347 = relay.TupleGetItem(func_10913_call(relay.reshape(const_11348.astype('int64'), [2, 728]), relay.reshape(call_11344.astype('int64'), [416,]), relay.reshape(var_11349.astype('int64'), [16,]), ), 3)
call_11350 = relay.TupleGetItem(func_10918_call(relay.reshape(const_11348.astype('int64'), [2, 728]), relay.reshape(call_11344.astype('int64'), [416,]), relay.reshape(var_11349.astype('int64'), [16,]), ), 3)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_11381 = relay.TupleGetItem(func_8402_call(), 0)
call_11382 = relay.TupleGetItem(func_8404_call(), 0)
func_5663_call = mod.get_global_var('func_5663')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_11383 = relay.TupleGetItem(func_5663_call(), 0)
call_11384 = relay.TupleGetItem(func_5664_call(), 0)
func_11298_call = mod.get_global_var('func_11298')
func_11299_call = mutated_mod.get_global_var('func_11299')
call_11400 = func_11298_call()
call_11401 = func_11298_call()
output = relay.Tuple([call_11344,call_11347,const_11348,var_11349,call_11381,call_11383,call_11400,])
output2 = relay.Tuple([call_11345,call_11350,const_11348,var_11349,call_11382,call_11384,call_11401,])
func_11406 = relay.Function([var_11349,], output)
mod['func_11406'] = func_11406
mod = relay.transform.InferType()(mod)
var_11407 = relay.var("var_11407", dtype = "int64", shape = (16,))#candidate|11407|(16,)|var|int64
output = func_11406(var_11407)
func_11408 = relay.Function([var_11407], output)
mutated_mod['func_11408'] = func_11408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9261_call = mod.get_global_var('func_9261')
func_9263_call = mutated_mod.get_global_var('func_9263')
call_11410 = func_9261_call()
call_11411 = func_9261_call()
uop_11445 = relay.sin(call_11410.astype('float64')) # shape=(416,)
uop_11447 = relay.sin(call_11411.astype('float64')) # shape=(416,)
output = uop_11445
output2 = uop_11447
func_11455 = relay.Function([], output)
mod['func_11455'] = func_11455
mod = relay.transform.InferType()(mod)
mutated_mod['func_11455'] = func_11455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11455_call = mutated_mod.get_global_var('func_11455')
call_11456 = func_11455_call()
output = call_11456
func_11457 = relay.Function([], output)
mutated_mod['func_11457'] = func_11457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8278_call = mod.get_global_var('func_8278')
func_8279_call = mutated_mod.get_global_var('func_8279')
call_11476 = relay.TupleGetItem(func_8278_call(), 2)
call_11477 = relay.TupleGetItem(func_8279_call(), 2)
output = call_11476
output2 = call_11477
func_11506 = relay.Function([], output)
mod['func_11506'] = func_11506
mod = relay.transform.InferType()(mod)
output = func_11506()
func_11507 = relay.Function([], output)
mutated_mod['func_11507'] = func_11507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mod.get_global_var('func_5627')
func_5628_call = mutated_mod.get_global_var('func_5628')
call_11525 = relay.TupleGetItem(func_5627_call(), 0)
call_11526 = relay.TupleGetItem(func_5628_call(), 0)
uop_11527 = relay.log10(call_11525.astype('float32')) # shape=(1, 15, 11)
uop_11529 = relay.log10(call_11526.astype('float32')) # shape=(1, 15, 11)
output = relay.Tuple([uop_11527,])
output2 = relay.Tuple([uop_11529,])
func_11534 = relay.Function([], output)
mod['func_11534'] = func_11534
mod = relay.transform.InferType()(mod)
mutated_mod['func_11534'] = func_11534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11534_call = mutated_mod.get_global_var('func_11534')
call_11535 = func_11534_call()
output = call_11535
func_11536 = relay.Function([], output)
mutated_mod['func_11536'] = func_11536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_11537 = relay.TupleGetItem(func_8402_call(), 0)
call_11538 = relay.TupleGetItem(func_8404_call(), 0)
output = call_11537
output2 = call_11538
func_11540 = relay.Function([], output)
mod['func_11540'] = func_11540
mod = relay.transform.InferType()(mod)
mutated_mod['func_11540'] = func_11540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11540_call = mutated_mod.get_global_var('func_11540')
call_11541 = func_11540_call()
output = call_11541
func_11542 = relay.Function([], output)
mutated_mod['func_11542'] = func_11542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11634 = relay.var("var_11634", dtype = "float64", shape = (13, 2, 4))#candidate|11634|(13, 2, 4)|var|float64
var_11635 = relay.var("var_11635", dtype = "float64", shape = (13, 2, 4))#candidate|11635|(13, 2, 4)|var|float64
bop_11636 = relay.divide(var_11634.astype('float64'), relay.reshape(var_11635.astype('float64'), relay.shape_of(var_11634))) # shape=(13, 2, 4)
uop_11643 = relay.cos(var_11634.astype('float32')) # shape=(13, 2, 4)
output = relay.Tuple([bop_11636,uop_11643,])
output2 = relay.Tuple([bop_11636,uop_11643,])
func_11645 = relay.Function([var_11634,var_11635,], output)
mod['func_11645'] = func_11645
mod = relay.transform.InferType()(mod)
var_11646 = relay.var("var_11646", dtype = "float64", shape = (13, 2, 4))#candidate|11646|(13, 2, 4)|var|float64
var_11647 = relay.var("var_11647", dtype = "float64", shape = (13, 2, 4))#candidate|11647|(13, 2, 4)|var|float64
output = func_11645(var_11646,var_11647,)
func_11648 = relay.Function([var_11646,var_11647,], output)
mutated_mod['func_11648'] = func_11648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11658 = relay.var("var_11658", dtype = "float64", shape = (10, 6, 1))#candidate|11658|(10, 6, 1)|var|float64
uop_11659 = relay.asinh(var_11658.astype('float64')) # shape=(10, 6, 1)
bop_11661 = relay.not_equal(uop_11659.astype('bool'), relay.reshape(var_11658.astype('bool'), relay.shape_of(uop_11659))) # shape=(10, 6, 1)
output = bop_11661
output2 = bop_11661
func_11667 = relay.Function([var_11658,], output)
mod['func_11667'] = func_11667
mod = relay.transform.InferType()(mod)
mutated_mod['func_11667'] = func_11667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11668 = relay.var("var_11668", dtype = "float64", shape = (10, 6, 1))#candidate|11668|(10, 6, 1)|var|float64
func_11667_call = mutated_mod.get_global_var('func_11667')
call_11669 = func_11667_call(var_11668)
output = call_11669
func_11670 = relay.Function([var_11668], output)
mutated_mod['func_11670'] = func_11670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11740 = relay.var("var_11740", dtype = "int16", shape = (16, 10, 4))#candidate|11740|(16, 10, 4)|var|int16
var_11741 = relay.var("var_11741", dtype = "int16", shape = (16, 10, 4))#candidate|11741|(16, 10, 4)|var|int16
bop_11742 = relay.logical_xor(var_11740.astype('int16'), relay.reshape(var_11741.astype('int16'), relay.shape_of(var_11740))) # shape=(16, 10, 4)
output = bop_11742
output2 = bop_11742
F = relay.Function([var_11740,var_11741,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11740,var_11741,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

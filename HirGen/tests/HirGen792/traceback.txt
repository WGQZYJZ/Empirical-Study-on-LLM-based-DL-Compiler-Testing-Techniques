==========mod==========
#[version = "0.0.5"]
def @func_2634(%var_2626: Tensor[(1, 8, 10), float64]) -> (Tensor[(1, 8, 10), float64], Tensor[(13, 13, 13), float64]) {
  %0 = cast(%var_2626, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
  %1 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %2 = log10(%0) /* ty=Tensor[(1, 8, 10), float64] */;
  %3 = %1.0;
  (%2, %3)
}

def @func_7296(%var_7263: Tensor[(5, 8, 2), float64]) -> (Tensor[(5, 8, 2), uint16], Tensor[(14, 12, 15), int8], Tensor[(630, 4), float64]) {
  %4 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %5 = %4.0;
  %6 = cast(%var_7263, dtype="uint16") /* ty=Tensor[(5, 8, 2), uint16] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="uint16") /* ty=Tensor[(5, 8, 2), uint16] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(630, 4), float64] */, dtype="float64") /* ty=Tensor[(630, 4), float64] */;
  %11 = reshape(%10, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float64] */;
  %12 = bitwise_xor(%8, %9) /* ty=Tensor[(5, 8, 2), uint16] */;
  %13 = @func_170(%11) /* ty=Tensor[(14, 12, 15), int8] */;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(630, 4), float64] */)
}

def @func_10342(%var_10329: Tensor[(16, 5, 5), float64]) -> (Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) {
  %14 = cast(%var_10329, dtype="float64") /* ty=Tensor[(16, 5, 5), float64] */;
  %15 = @func_6801() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %17 = reshape(%16, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %18 = @func_3111(%17) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %19 = log10(%14) /* ty=Tensor[(16, 5, 5), float64] */;
  %20 = %15.1;
  %21 = %18.2;
  (%19, %20, %21, meta[relay.Constant][1] /* ty=Tensor[(180), float64] */)
}

def @func_1536() -> Tensor[(13, 13, 13), float64] {
  @func_1519() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_8387() -> (Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) {
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %23 = reshape(%22, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %24 = @func_6063(%23) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) */;
  %25 = %24.2;
  %26 = cast(%25, dtype="uint64") /* ty=Tensor[(20, 1), uint64] */;
  %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(20, 12), float32] */, dtype="uint64") /* ty=Tensor[(20, 12), uint64] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(20), float32] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %29 = @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */;
  %30 = bitwise_xor(%26, %27) /* ty=Tensor[(20, 12), uint64] */;
  %31 = log2(%28) /* ty=Tensor[(20), float64] */;
  (%29, %30, %31)
}

def @func_4616(%var_4600: Tensor[(2288), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) {
  %32 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %33 = %32.0;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %35 = log10(%34) /* ty=Tensor[(13, 13, 13), float32] */;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %37 = reshape(%36, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %38 = cast(%var_4600, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %39 = cast(%var_4600, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %40 = reshape(%38, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float32] */;
  %41 = reshape(%39, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float32] */;
  %42 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %43 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %44 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %45 = @func_4202(%37) /* ty=Tensor[(13, 13, 13), bool] */;
  %46 = @func_3634(%40, %41) /* ty=Tensor[(11, 13, 16), float32] */;
  %47 = %42.1;
  %48 = %43.3;
  %49 = %44.0;
  (%35, %45, %46, %var_4600, %47, %48, %49)
}

def @func_5062(%var_5038: Tensor[(9, 9, 15), float64]) -> (Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) {
  %50 = cast(%var_5038, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %51 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %52 = @func_3245() /* ty=(Tensor[(180), float64],) */;
  %53 = sqrt(%50) /* ty=Tensor[(9, 9, 15), float64] */;
  %54 = %51.0;
  %55 = %52.0;
  (%53, %54, %55)
}

def @func_2800(%var_2787: float64, %var_2788: Tensor[(14, 1, 5), float64]) -> (Tensor[(14, 1, 5), float64],) {
  %56 = cast(%var_2787, dtype="float64") /* ty=float64 */;
  %57 = cast(%var_2788, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %58 = mod(%56, %57) /* ty=Tensor[(14, 1, 5), float64] */;
  (%58,)
}

def @func_2458() -> (Tensor[(5, 8, 2), uint64],) {
  %59 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %60 = %59.0;
  (%60,)
}

def @func_9260() -> (Tensor[(13, 13, 13), float64],) {
  %61 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %62 = %61.0;
  (%62,)
}

def @func_1428(%var_1425: Tensor[(3, 16, 12), float32]) -> (Tensor[(3, 16, 12), float32],) {
  %63 = cast(%var_1425, dtype="float32") /* ty=Tensor[(3, 16, 12), float32] */;
  %64 = erf(%63) /* ty=Tensor[(3, 16, 12), float32] */;
  (%64,)
}

def @func_9749() -> (Tensor[(5, 14, 2), float64],) {
  %65 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
  (%65,)
}

def @func_4825(%var_4810: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) {
  %66 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %67 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %68 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %69 = cast(%var_4810, dtype="float32") /* ty=Tensor[(20), float32] */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %71 = reshape(%69, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %72 = reshape(%70, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %73 = @func_1604(%71, %72) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %74 = @func_3257() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %75 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %76 = %66.0;
  %77 = %67.0;
  %78 = @func_3410() /* ty=Tensor[(5, 14, 2), float64] */;
  %79 = %68.0;
  %80 = %73.1;
  %81 = %74.0;
  (%75, %76, %77, %78, %79, %80, %var_4810, meta[relay.Constant][4] /* ty=Tensor[(180), float64] */, %81)
}

def @func_3062() -> (Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) {
  %82 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %83 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %84 = %82.0;
  %85 = %83.0;
  (%84, %85)
}

def @func_11454() -> Tensor[(13, 13, 13), uint8] {
  @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */
}

def @func_4202(%var_4157: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), bool] {
  %86 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %87 = %86.0;
  %88 = cast(%var_4157, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%90, %91) /* ty=Tensor[(13, 13, 13), bool] */
}

def @func_7845(%var_7779: int32, %var_7780: Tensor[(13, 1, 9), int32], %var_7800: Tensor[(13, 11, 9), bool]) -> (Tensor[(20), float32], Tensor[(13, 11, 9), bool], Tensor[(13, 11, 9), float64]) {
  %92 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %93 = cast(%var_7779, dtype="bool") /* ty=bool */;
  %94 = cast(%var_7780, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
  %95 = equal(%93, %94) /* ty=Tensor[(13, 1, 9), bool] */;
  %96 = cast(%var_7779, dtype="bool") /* ty=bool */;
  %97 = cast(%95, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
  %98 = greater(%96, %97) /* ty=Tensor[(13, 1, 9), bool] */;
  %99 = cast(%98, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
  %100 = cast(%var_7800, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 11, 9), bool] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
  %102 = shape_of(%var_7800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_7800, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %105 = %92.2;
  %106 = logical_and(%99, %100) /* ty=Tensor[(13, 11, 9), bool] */;
  %107 = power(%103, %104) /* ty=Tensor[(13, 11, 9), float64] */;
  (%105, %106, %107)
}

def @func_9078() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) {
  %108 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %110 = reshape(%109, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %111 = @func_5062(%110) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %112 = %108.0;
  %113 = %111.1;
  (%112, %113, meta[relay.Constant][6] /* ty=Tensor[(1215), float64] */)
}

def @func_4037() -> Tensor[(180), float64] {
  %114 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %114.1
}

def @func_8895() -> (Tensor[(13, 13, 13), float32],) {
  %115 = @func_4745() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %116 = %115.0;
  (%116,)
}

def @func_3634(%var_3628: Tensor[(11, 13, 16), float32], %var_3629: Tensor[(11, 13, 16), float32]) -> Tensor[(11, 13, 16), float32] {
  %117 = cast(%var_3629, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %118 = shape_of(%var_3628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_3628, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%119, %120) /* ty=Tensor[(11, 13, 16), float32] */
}

def @func_7709() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
  %121 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %122 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_1662(%var_1659: Tensor[(7, 8, 12), float32]) -> (Tensor[(7, 8, 12), float32],) {
  %125 = cast(%var_1659, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
  %126 = sin(%125) /* ty=Tensor[(7, 8, 12), float32] */;
  (%126,)
}

def @func_4295(%var_4274: Tensor[(3, 16, 2), uint8]) -> Tensor[(3, 16, 2), uint8] {
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 16, 2), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
  %128 = shape_of(%var_4274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_4274, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%129, %130) /* ty=Tensor[(3, 16, 2), uint8] */
}

def @func_3592() -> Tensor[(5, 14, 2), float64] {
  @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_8655() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
  %131 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %132 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %133 = %131.1;
  %134 = %132.1;
  (%133, %134)
}

def @func_5484() -> Tensor[(13, 13, 13), bool] {
  %135 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %135.0
}

def @func_10648(%var_10547: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 8), int32], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %136 = @func_7679() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %137 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %138 = cast(%var_10547, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %139 = log10(%138) /* ty=Tensor[(5, 14, 8), float64] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %141 = sqrt(%140) /* ty=Tensor[(5, 14, 8), float32] */;
  %142 = cast(%var_10547, dtype="int16") /* ty=Tensor[(5, 14, 8), int16] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="int16") /* ty=Tensor[(5, 14, 8), int16] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %146 = right_shift(%144, %145) /* ty=Tensor[(5, 14, 8), int16] */;
  %147 = cast(%146, dtype="int32") /* ty=Tensor[(5, 14, 8), int32] */;
  %148 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%139, dtype="int32") /* ty=Tensor[(5, 14, 8), int32] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %151 = @func_8603() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %152 = %136.0;
  %153 = %137.0;
  %154 = left_shift(%149, %150) /* ty=Tensor[(5, 14, 8), int32] */;
  %155 = %151.0;
  %156 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  (%152, %153, %154, %155, %156)
}

def @func_12743() -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
  %157 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
  %158 = @func_12086() /* ty=Tensor[(13, 13, 13), float64] */;
  (%157, %158)
}

def @func_146(%var_76: Tensor[(5, 8, 2), float32], %var_142: Tensor[(5, 8, 2), float32]) -> (Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
  %159 = cast(%var_76, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %160 = cast(%var_76, dtype="float64") /* ty=Tensor[(5, 8, 2), float64] */;
  %161 = cast(%var_142, dtype="uint64") /* ty=Tensor[(5, 8, 2), uint64] */;
  %162 = shape_of(%var_76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_76, dtype="uint64") /* ty=Tensor[(5, 8, 2), uint64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %165 = sin(%159) /* ty=Tensor[(5, 8, 2), float32] */;
  %166 = atan(%160) /* ty=Tensor[(5, 8, 2), float64] */;
  %167 = bitwise_or(%163, %164) /* ty=Tensor[(5, 8, 2), uint64] */;
  (%165, %166, %167)
}

def @func_11511() -> (Tensor[(70), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
  %168 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
  %169 = @func_7864() /* ty=(Tensor[(20), float32],) */;
  %170 = @func_5878() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) */;
  %171 = cast(meta[relay.Constant][8] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %172 = reshape(%171, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
  %173 = %168.4;
  %174 = %169.0;
  %175 = %170.0;
  %176 = @func_659(%172) /* ty=Tensor[(1, 2, 15), float64] */;
  (%173, %174, %175, %176, meta[relay.Constant][8] /* ty=Tensor[(30), float64] */)
}

def @func_2101(%var_2091: Tensor[(20), float32], %var_2092: Tensor[(180, 1), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) {
  %177 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %178 = %177.0;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %180 = cast(%var_2091, dtype="float32") /* ty=Tensor[(20), float32] */;
  %181 = cast(%var_2092, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %182 = reshape(%180, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %183 = reshape(%181, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %184 = @func_1604(%182, %183) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %185 = log2(%179) /* ty=Tensor[(13, 13, 13), float32] */;
  %186 = %184.1;
  (%185, %186, %var_2091, %var_2092)
}

def @func_6334() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) {
  %187 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %188 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %191 = %187.0;
  %192 = erf(%190) /* ty=Tensor[(5, 8, 2), float32] */;
  %193 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
  (%191, %192, %193)
}

def @func_10700() -> (Tensor[(20), float32],) {
  %194 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %195 = %194.0;
  (%195,)
}

def @func_6528() -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  %196 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %197 = @func_5484() /* ty=Tensor[(13, 13, 13), bool] */;
  %198 = %196.0;
  (%197, %198)
}

def @func_11721() -> Tensor[(5, 8, 2), uint64] {
  %199 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %199.1
}

def @func_12498() -> (Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) {
  %200 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %201 = @func_11454() /* ty=Tensor[(13, 13, 13), uint8] */;
  %202 = %200.0;
  (%201, %202)
}

def @func_12926() -> (Tensor[(13, 13, 13), float32],) {
  %203 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %204 = %203.0;
  (%204,)
}

def @func_6476() -> Tensor[(13, 13, 13), bool] {
  %205 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %205.0
}

def @func_10930() -> Tensor[(5, 8, 2), float64] {
  %206 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
  %206.1
}

def @func_6642(%var_6559: Tensor[(16, 11, 6), bool], %var_6560: Tensor[(16, 11, 6), bool], %var_6566: Tensor[(180), float64]) -> (Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) {
  %207 = cast(%var_6560, dtype="bool") /* ty=Tensor[(16, 11, 6), bool] */;
  %208 = shape_of(%var_6559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_6559, dtype="bool") /* ty=Tensor[(16, 11, 6), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = cast(meta[relay.Constant][9] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %212 = cast(%var_6566, dtype="float64") /* ty=Tensor[(180), float64] */;
  %213 = reshape(%211, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %214 = reshape(%212, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %215 = @func_1604(%213, %214) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %217 = reshape(%216, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
  %218 = @func_5953(%217) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
  %219 = cast(%var_6559, dtype="float32") /* ty=Tensor[(16, 11, 6), float32] */;
  %220 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
  %221 = logical_or(%209, %210) /* ty=Tensor[(16, 11, 6), bool] */;
  %222 = %215.1;
  %223 = %218.1;
  %224 = sin(%219) /* ty=Tensor[(16, 11, 6), float32] */;
  %225 = %220.1;
  (%221, %222, meta[relay.Constant][9] /* ty=Tensor[(20), float32] */, %var_6566, %223, meta[relay.Constant][10] /* ty=Tensor[(400), float32] */, %224, %225)
}

def @func_3111(%var_3096: Tensor[(3, 60), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) {
  %226 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %227 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
  %228 = cast(%var_3096, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
  %229 = reshape(%227, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %230 = reshape(%228, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %231 = @func_1604(%229, %230) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %232 = %226.1;
  %233 = %231.4;
  (%232, %233, meta[relay.Constant][11] /* ty=Tensor[(1, 20), float32] */, %var_3096)
}

def @func_3370(%var_3281: Tensor[(11, 3, 4), float64], %var_3294: float64, %var_3295: Tensor[(70), float64]) -> (Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) {
  %234 = cast(%var_3281, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
  %235 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %238 = multiply(%236, %237) /* ty=Tensor[(11, 3, 4), float64] */;
  %239 = cast(%238, dtype="int64") /* ty=Tensor[(11, 3, 4), int64] */;
  %240 = shape_of(%var_3281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_3281, dtype="int64") /* ty=Tensor[(11, 3, 4), int64] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %243 = cast(%var_3294, dtype="float64") /* ty=float64 */;
  %244 = cast(%var_3295, dtype="float64") /* ty=Tensor[(70), float64] */;
  %245 = reshape(%243, newshape=[]) /* ty=float64 */;
  %246 = reshape(%244, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %247 = @func_2800(%245, %246) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %248 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %249 = cast(%238, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
  %250 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %253 = minimum(%241, %242) /* ty=Tensor[(11, 3, 4), int64] */;
  %254 = %247.0;
  %255 = %248.1;
  %256 = mod(%251, %252) /* ty=Tensor[(11, 3, 4), float64] */;
  (%253, %254, %var_3294, %var_3295, %255, %256)
}

def @func_4239() -> (Tensor[(13, 13, 13), float64],) {
  %257 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %258 = %257.0;
  (%258,)
}

def @func_11278() -> (Tensor[(20, 12), uint64], Tensor[(180), float64]) {
  %259 = @func_8387() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) */;
  %260 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %261 = %259.1;
  %262 = %260.1;
  (%261, %262)
}

def @func_10953() -> (Tensor[(13, 13, 13), uint8],) {
  %263 = @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */;
  (%263,)
}

def @func_12326() -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
  %264 = @func_9749() /* ty=(Tensor[(5, 14, 2), float64],) */;
  %265 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %266 = %264.0;
  %267 = @func_11454() /* ty=Tensor[(13, 13, 13), uint8] */;
  %268 = %265.1;
  (%266, %267, %268)
}

def @func_3507(%var_3461: Tensor[(30, 6), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) {
  %269 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %270 = cast(%var_3461, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %271 = reshape(%270, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
  %272 = @func_1011(%271) /* ty=(Tensor[(6, 2, 15), float64],) */;
  %273 = cast(%var_3461, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %274 = acos(%273) /* ty=Tensor[(30, 6), float64] */;
  %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(30, 6), float64] */, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(2), int32] */;
  %277 = cast(%274, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %279 = %269.0;
  %280 = %272.0;
  %281 = floor_mod(%277, %278) /* ty=Tensor[(30, 6), float32] */;
  (%279, %280, %281)
}

def @func_2939() -> (Tensor[(5, 8, 2), float64],) {
  %282 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %283 = %282.0;
  (%283,)
}

def @func_11631() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
  %284 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
  %285 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %286 = %284.0;
  %287 = %285.0;
  (%286, %287)
}

def @func_4354() -> (Tensor[(13, 13, 13), float64],) {
  %288 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
  %289 = %288.0;
  (%289,)
}

def @func_5339(%var_5324: Tensor[(180), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) {
  %290 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %291 = %290.1;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %293 = reshape(%292, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %294 = @func_3910(%293) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) */;
  %295 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %296 = cast(%var_5324, dtype="float64") /* ty=Tensor[(180), float64] */;
  %297 = reshape(%295, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %298 = reshape(%296, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %299 = @func_2101(%297, %298) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %300 = %299.3;
  %301 = cast(%300, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %302 = reshape(%301, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %303 = @func_3111(%302) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %304 = %294.2;
  %305 = %303.3;
  (%291, %304, %300, meta[relay.Constant][14] /* ty=Tensor[(10, 2), float32] */, %var_5324, %305)
}

def @func_13083(%var_13064: Tensor[(5, 8, 3), float32], %var_13068: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 3), float32], Tensor[(180, 1), float64], Tensor[(20, 1), float32], Tensor[(180), float64]) {
  %306 = cast(%var_13064, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
  %307 = cast(%var_13068, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %308 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %309 = reshape(%307, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %310 = reshape(%308, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %311 = @func_2101(%309, %310) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %312 = sin(%306) /* ty=Tensor[(5, 8, 3), float32] */;
  %313 = %311.3;
  (%312, %313, %var_13068, meta[relay.Constant][15] /* ty=Tensor[(180), float64] */)
}

def @func_3910(%var_3897: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) {
  %314 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %315 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %316 = cast(%var_3897, dtype="float32") /* ty=Tensor[(80), float32] */;
  %317 = cast(%var_3897, dtype="float32") /* ty=Tensor[(80), float32] */;
  %318 = reshape(%316, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %319 = reshape(%317, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %320 = @func_146(%318, %319) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %321 = %314.3;
  %322 = %315.0;
  %323 = %320.2;
  (%321, %322, %323, %var_3897)
}

def @func_11375(%var_11356: Tensor[(231), float32], %var_11357: float64, %var_11359: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(30, 6), float32], Tensor[(231), float32], float64, Tensor[(30), float64], Tensor[(80), float32], Tensor[(5, 14, 2), float64]) {
  %324 = cast(%var_11356, dtype="float32") /* ty=Tensor[(231), float32] */;
  %325 = cast(%var_11357, dtype="float64") /* ty=float64 */;
  %326 = cast(meta[relay.Constant][16] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %327 = cast(%var_11359, dtype="float32") /* ty=Tensor[(80), float32] */;
  %328 = cast(%var_11356, dtype="float32") /* ty=Tensor[(231), float32] */;
  %329 = reshape(%324, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %330 = reshape(%325, newshape=[]) /* ty=float64 */;
  %331 = reshape(%326, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %332 = reshape(%327, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %333 = reshape(%328, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %334 = @func_3994(%329, %330, %331, %332, %333) /* ty=(Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) */;
  %335 = @func_6394() /* ty=Tensor[(13, 13, 13), float64] */;
  %336 = %334.5;
  %337 = @func_3592() /* ty=Tensor[(5, 14, 2), float64] */;
  (%335, %336, %var_11356, %var_11357, meta[relay.Constant][16] /* ty=Tensor[(30), float64] */, %var_11359, %337)
}

def @func_13430() -> Tensor[(5, 8, 2), float64] {
  @func_5390() /* ty=Tensor[(5, 8, 2), float64] */
}

def @func_7191(%var_7136: Tensor[(400), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(5, 8, 2), float64]) {
  %338 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %339 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
  %340 = cast(%var_7136, dtype="float32") /* ty=Tensor[(400), float32] */;
  %341 = reshape(%340, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
  %342 = @func_5953(%341) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
  %343 = cast(meta[relay.Constant][17] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %344 = reshape(%343, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %345 = @func_4616(%344) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
  %346 = cast(meta[relay.Constant][18] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %347 = reshape(%346, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %348 = @func_6693(%347) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) */;
  %349 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %350 = %338.1;
  %351 = %339.0;
  %352 = %342.1;
  %353 = %345.2;
  %354 = %348.1;
  %355 = %349.0;
  (%350, %351, %352, %var_7136, %353, meta[relay.Constant][17] /* ty=Tensor[(2288), float32] */, %354, meta[relay.Constant][18] /* ty=Tensor[(20), float32] */, %355)
}

def @func_3574() -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) {
  %356 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %358 = reshape(%357, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %359 = @func_3223(%358) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %360 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
  %361 = %359.0;
  (%360, %356, %361)
}

def @func_2820() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %362 = cast(meta[relay.Constant][19] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %363 = reshape(%362, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %364 = @func_2262(%363) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
  %365 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %366 = @func_2725() /* ty=Tensor[(13, 13, 13), float32] */;
  %367 = %364.4;
  %368 = %365.1;
  (%366, %367, meta[relay.Constant][19] /* ty=Tensor[(20), float32] */, %368)
}

def @func_2526() -> (Tensor[(13, 13, 13), bool],) {
  %369 = @func_2403() /* ty=Tensor[(13, 13, 13), float32] */;
  %370 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 13, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = greater(%372, %373) /* ty=Tensor[(13, 13, 13), bool] */;
  (%374,)
}

def @func_10523(%var_10514: Tensor[(1215), float64], %var_10517: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) {
  %375 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %376 = cast(%var_10514, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %377 = reshape(%376, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %378 = @func_5062(%377) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %379 = cast(%var_10517, dtype="float32") /* ty=Tensor[(20), float32] */;
  %380 = reshape(%379, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
  %381 = @func_9366(%380) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) */;
  %382 = %375.0;
  %383 = %378.0;
  %384 = %381.2;
  (%382, %383, %var_10514, %384, %var_10517)
}

def @func_10872() -> (Tensor[(20), float32], Tensor[(14, 12, 15), int8], Tensor[(2520), float64]) {
  %385 = @func_10700() /* ty=(Tensor[(20), float32],) */;
  %386 = cast(meta[relay.Constant][21] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %387 = reshape(%386, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float64] */;
  %388 = %385.0;
  %389 = @func_170(%387) /* ty=Tensor[(14, 12, 15), int8] */;
  (%388, %389, meta[relay.Constant][21] /* ty=Tensor[(2520), float64] */)
}

def @func_2150() -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
  %390 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %391 = %390.2;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %393 = cast(%391, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %394 = reshape(%392, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %395 = reshape(%393, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %396 = @func_146(%394, %395) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %397 = %396.2;
  (%391, %397)
}

def @func_8800(%var_8795: Tensor[(1, 180), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), float64], Tensor[(1, 180), float64], Tensor[(3, 16, 12), float32]) {
  %398 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %399 = cast(%var_8795, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
  %400 = reshape(%399, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
  %401 = @func_3507(%400) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
  %402 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
  %403 = %398.0;
  %404 = %401.0;
  %405 = %402.1;
  (%403, %404, %var_8795, %405)
}

def @func_6753() -> (Tensor[(180), float64], Tensor[(5, 8, 2), float64]) {
  %406 = @func_6084() /* ty=Tensor[(180), float64] */;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(180), float64] */;
  %408 = reshape(%407, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
  %409 = @func_3507(%408) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
  %410 = %409.0;
  (%406, %410)
}

def @func_12279() -> (Tensor[(3, 16, 2), uint8],) {
  %411 = @func_9451() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) */;
  %412 = %411.1;
  (%412,)
}

def @func_12896() -> Tensor[(13, 13, 13), float64] {
  %413 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %413.0
}

def @func_8155() -> (Tensor[(13, 13, 13), float64],) {
  %414 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
  (%414,)
}

def @func_170(%var_160: Tensor[(14, 12, 15), float64]) -> Tensor[(14, 12, 15), int8] {
  %415 = cast(%var_160, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %416 = sinh(%415) /* ty=Tensor[(14, 12, 15), float64] */;
  %417 = cast(%var_160, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%419, %420) /* ty=Tensor[(14, 12, 15), int8] */
}

def @func_4433(%var_4410: Tensor[(10, 7, 7), float32], %var_4411: Tensor[(10, 7, 7), float32]) -> (Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) {
  %421 = cast(%var_4411, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %422 = shape_of(%var_4410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_4410, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %425 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %426 = cast(meta[relay.Constant][22] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %427 = reshape(%426, newshape=[3, 16, 2]) /* ty=Tensor[(3, 16, 2), uint8] */;
  %428 = floor_divide(%423, %424) /* ty=Tensor[(10, 7, 7), float32] */;
  %429 = %425.0;
  %430 = @func_4295(%427) /* ty=Tensor[(3, 16, 2), uint8] */;
  (%428, %429, %430, meta[relay.Constant][22] /* ty=Tensor[(96), uint8] */)
}

def @func_13282() -> (Tensor[(5, 14, 2), float64],) {
  %431 = @func_10113() /* ty=Tensor[(5, 14, 2), float64] */;
  (%431,)
}

def @func_13061() -> Tensor[(13, 13, 13), uint8] {
  %432 = @func_8655() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %432.1
}

def @func_11152(%var_11123: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64], Tensor[(80), float32], Tensor[(1056), bool], Tensor[(180), float64], Tensor[(5, 10, 8), bool]) {
  %433 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %434 = %433.0;
  %435 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 13, 13), float64] */, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %439 = cast(%var_11123, dtype="float32") /* ty=Tensor[(80), float32] */;
  %440 = reshape(%439, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %441 = @func_3910(%440) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) */;
  %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %443 = cast(meta[relay.Constant][24] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %444 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %445 = reshape(%442, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %446 = reshape(%443, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %447 = reshape(%444, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %448 = @func_6642(%445, %446, %447) /* ty=(Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) */;
  %449 = %448.4;
  %450 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = logical_xor(%437, %438) /* ty=Tensor[(13, 13, 13), uint8] */;
  %455 = %441.2;
  %456 = greater_equal(%452, %453) /* ty=Tensor[(5, 10, 8), bool] */;
  (%454, %455, %var_11123, meta[relay.Constant][24] /* ty=Tensor[(1056), bool] */, meta[relay.Constant][25] /* ty=Tensor[(180), float64] */, %456)
}

def @func_3522() -> Tensor[(5, 14, 2), float64] {
  @func_3410() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_11552(%var_11537: Tensor[(9, 11, 7), uint16], %var_11538: Tensor[(9, 11, 7), uint16], %var_11550: Tensor[(70), float64]) -> (Tensor[(9, 11, 7), uint16], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %457 = cast(%var_11538, dtype="uint16") /* ty=Tensor[(9, 11, 7), uint16] */;
  %458 = shape_of(%var_11537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_11537, dtype="uint16") /* ty=Tensor[(9, 11, 7), uint16] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %461 = cast(-4.1437f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %462 = cast(%var_11550, dtype="float64") /* ty=Tensor[(70), float64] */;
  %463 = reshape(%461, newshape=[]) /* ty=float64 */;
  %464 = reshape(%462, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %465 = @func_2993(%463, %464) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %466 = left_shift(%459, %460) /* ty=Tensor[(9, 11, 7), uint16] */;
  %467 = %465.1;
  (%466, %467, -4.1437f64 /* ty=float64 */, %var_11550)
}

def @func_7004() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) {
  %468 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %469 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
  %470 = @func_5878() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) */;
  %471 = %470.2;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(27, 45), float32] */;
  %473 = rsqrt(%472) /* ty=Tensor[(27, 45), float32] */;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
  %475 = sigmoid(%474) /* ty=Tensor[(27, 45), float64] */;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
  %477 = %468.0;
  %478 = %469.0;
  %479 = sin(%476) /* ty=Tensor[(27, 45), float64] */;
  (%477, %478, %479)
}

def @func_11246() -> Tensor[(2288), float32] {
  %480 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
  %480.7
}

def @func_5291() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) {
  %481 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %482 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
  %483 = cast(-0.726782f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %484 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %485 = reshape(%483, newshape=[]) /* ty=float64 */;
  %486 = reshape(%484, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %487 = @func_2993(%485, %486) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %488 = cast(meta[relay.Constant][28] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %489 = reshape(%488, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %490 = @func_4616(%489) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
  %491 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %492 = %481.1;
  %493 = %482.0;
  %494 = %487.0;
  %495 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
  %496 = %490.4;
  %497 = %491.0;
  (%492, %493, %494, -0.726782f64 /* ty=float64 */, meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, %495, %496, meta[relay.Constant][28] /* ty=Tensor[(2288), float32] */, %497)
}

def @func_6063(%var_6061: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) {
  %498 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %499 = cast(%var_6061, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %500 = reshape(%499, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %501 = %498.0;
  %502 = @func_519(%500) /* ty=Tensor[(4, 1, 5), float32] */;
  (%501, %502, %var_6061)
}

def @func_12086() -> Tensor[(13, 13, 13), float64] {
  @func_9799() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_2262(%var_2234: Tensor[(20), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) {
  %503 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %504 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %505 = cast(%var_2234, dtype="float32") /* ty=Tensor[(20), float32] */;
  %506 = cast(meta[relay.Constant][29] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %507 = reshape(%505, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %508 = reshape(%506, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %509 = @func_1604(%507, %508) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %510 = %503.1;
  %511 = %504.0;
  %512 = %509.1;
  (%510, %511, %512, %var_2234, meta[relay.Constant][29] /* ty=Tensor[(180), float64] */)
}

def @func_10192() -> (Tensor[(13, 13, 13), float32],) {
  %513 = @func_10106() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %514 = %513.0;
  (%514,)
}

def @func_2848() -> (Tensor[(13, 13, 13), float64],) {
  %515 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %516 = %515.1;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %518 = exp(%517) /* ty=Tensor[(13, 13, 13), float64] */;
  (%518,)
}

def @func_3765(%var_3760: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), int32]) {
  %519 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %520 = @func_2403() /* ty=Tensor[(13, 13, 13), float32] */;
  %521 = cast(%var_3760, dtype="int32") /* ty=Tensor[(13, 13, 13), int32] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="int32") /* ty=Tensor[(13, 13, 13), int32] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %525 = %519.0;
  %526 = bitwise_or(%523, %524) /* ty=Tensor[(13, 13, 13), int32] */;
  (%525, %526)
}

def @func_6394() -> Tensor[(13, 13, 13), float64] {
  @func_1816() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_2680() -> (Tensor[(5, 8, 2), float64],) {
  %527 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %528 = %527.0;
  (%528,)
}

def @func_4745() -> (Tensor[(13, 13, 13), float32],) {
  %529 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %530 = %529.3;
  (%530,)
}

def @func_8037() -> Tensor[(13, 13, 13), uint8] {
  %531 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %531.1
}

def @func_12813() -> (Tensor[(13, 13, 13), float64],) {
  %532 = @func_5820() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) */;
  %533 = %532.1;
  (%533,)
}

def @func_13485() -> (Tensor[(80), float32],) {
  %534 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %535 = %534.3;
  (%535,)
}

def @func_5545(%var_5518: Tensor[(4, 8, 15), uint64], %var_5519: Tensor[(4, 8, 15), uint64]) -> (Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) {
  %536 = cast(%var_5519, dtype="uint64") /* ty=Tensor[(4, 8, 15), uint64] */;
  %537 = shape_of(%var_5518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_5518, dtype="uint64") /* ty=Tensor[(4, 8, 15), uint64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %540 = bitwise_xor(%538, %539) /* ty=Tensor[(4, 8, 15), uint64] */;
  %541 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  (%540, %541)
}

def @func_12645(%var_12634: Tensor[(13, 5, 13), uint8]) -> (Tensor[(13, 5, 13), uint8], Tensor[(13, 13, 13), uint8]) {
  %542 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 5, 13), uint8] */, dtype="uint8") /* ty=Tensor[(13, 5, 13), uint8] */;
  %543 = shape_of(%var_12634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_12634, dtype="uint8") /* ty=Tensor[(13, 5, 13), uint8] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %546 = @func_12498() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) */;
  %547 = subtract(%544, %545) /* ty=Tensor[(13, 5, 13), uint8] */;
  %548 = %546.0;
  (%547, %548)
}

def @func_8781() -> Tensor[(5, 14, 2), float64] {
  @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_1604(%var_1593: Tensor[(20), float32], %var_1596: Tensor[(6, 30), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) {
  %549 = cast(%var_1593, dtype="float32") /* ty=Tensor[(20), float32] */;
  %550 = reshape(%549, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %551 = cast(%var_1596, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %552 = reshape(%551, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
  %553 = @func_1011(%552) /* ty=(Tensor[(6, 2, 15), float64],) */;
  %554 = cast(%var_1596, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %555 = reshape(%554, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
  %556 = @func_1011(%555) /* ty=(Tensor[(6, 2, 15), float64],) */;
  %557 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %558 = @func_519(%550) /* ty=Tensor[(4, 1, 5), float32] */;
  %559 = %553.0;
  %560 = %556.0;
  (%557, %558, %var_1593, %559, %var_1596, %560)
}

def @func_10794(%var_10749: Tensor[(1, 1215), float64], %var_10750: Tensor[(20), float32], %var_10760: Tensor[(5, 10, 8), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(1, 1215), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), uint64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
  %561 = cast(%var_10749, dtype="float64") /* ty=Tensor[(1, 1215), float64] */;
  %562 = cast(%var_10750, dtype="float32") /* ty=Tensor[(20), float32] */;
  %563 = reshape(%561, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %564 = reshape(%562, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %565 = @func_10523(%563, %564) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) */;
  %566 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %567 = @func_6427() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) */;
  %568 = %567.1;
  %569 = cast(%var_10760, dtype="uint64") /* ty=Tensor[(5, 10, 8), uint64] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="uint64") /* ty=Tensor[(5, 10, 8), uint64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %573 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %574 = reshape(%573, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %575 = @func_3111(%574) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %576 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %577 = %565.4;
  %578 = %566.0;
  %579 = right_shift(%571, %572) /* ty=Tensor[(5, 10, 8), uint64] */;
  %580 = %575.0;
  %581 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
  (%576, %577, %var_10749, %var_10750, %578, %579, %580, meta[relay.Constant][31] /* ty=Tensor[(180), float64] */, %581)
}

def @func_4700(%var_4695: Tensor[(1, 6, 8), float64], %var_4696: Tensor[(8, 6, 8), float64]) -> Tensor[(8, 6, 8), float64] {
  %582 = cast(%var_4695, dtype="float64") /* ty=Tensor[(1, 6, 8), float64] */;
  %583 = cast(%var_4696, dtype="float64") /* ty=Tensor[(8, 6, 8), float64] */;
  subtract(%582, %583) /* ty=Tensor[(8, 6, 8), float64] */
}

def @func_6037() -> (Tensor[(13, 13, 13), float64],) {
  %584 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %585 = %584.0;
  %586 = cast(%585, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %587 = tan(%586) /* ty=Tensor[(13, 13, 13), float64] */;
  (%587,)
}

def @func_9326(%var_9318: Tensor[(1, 70), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], float64, Tensor[(1, 70), float64]) {
  %588 = @func_6401() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %589 = cast(9.56591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %590 = cast(%var_9318, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
  %591 = reshape(%589, newshape=[]) /* ty=float64 */;
  %592 = reshape(%590, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %593 = @func_4922(%591, %592) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %594 = %588.0;
  %595 = %593.1;
  (%594, %595, 9.56591f64 /* ty=float64 */, %var_9318)
}

def @func_6693(%var_6664: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) {
  %596 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
  %597 = cast(%var_6664, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %598 = reshape(%597, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %599 = @func_6447(%598) /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) */;
  %600 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
  %601 = cast(%var_6664, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %602 = cast(meta[relay.Constant][32] /* ty=Tensor[(20, 5), float32] */, dtype="float32") /* ty=Tensor[(20, 5), float32] */;
  %603 = power(%601, %602) /* ty=Tensor[(20, 5), float32] */;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(20, 5), float64] */;
  %605 = %596.1;
  %606 = %599.1;
  %607 = %600.5;
  %608 = tan(%604) /* ty=Tensor[(20, 5), float64] */;
  (%605, %606, %607, %608)
}

def @func_11814() -> (Tensor[(180), float64],) {
  %609 = @func_3245() /* ty=(Tensor[(180), float64],) */;
  %610 = %609.0;
  (%610,)
}

def @func_13152() -> Tensor[(13, 13, 13), float64] {
  @func_12896() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_10831() -> (Tensor[(13, 13, 13), float64],) {
  %611 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %612 = %611.1;
  (%612,)
}

def @func_4681() -> (Tensor[(13, 13, 13), float64],) {
  %613 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %614 = %613.0;
  (%614,)
}

def @func_11010() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %615 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %616 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %617 = %615.0;
  %618 = %616.1;
  (%617, %618)
}

def @func_1519() -> Tensor[(13, 13, 13), float64] {
  %619 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  log(%619) /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_10243(%var_10207: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), bool], Tensor[(13, 13, 13), float32], Tensor[(20), float32]) {
  %620 = cast(%var_10207, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %621 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(16, 13, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 13, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %625 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %626 = equal(%622, %623) /* ty=Tensor[(16, 13, 11), bool] */;
  %627 = %624.0;
  %628 = %625.2;
  (%626, %627, %628)
}

def @func_1953() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %629 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %630 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %631 = %629.1;
  %632 = %630.0;
  (%631, %632)
}

def @func_10853() -> (Tensor[(13, 13, 13), float32],) {
  %633 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %636 = asinh(%635) /* ty=Tensor[(13, 13, 13), float32] */;
  (%636,)
}

def @func_4338() -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) {
  %637 = cast(meta[relay.Constant][35] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %638 = reshape(%637, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), float32] */;
  %639 = @func_1428(%638) /* ty=(Tensor[(3, 16, 12), float32],) */;
  %640 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  %641 = %639.0;
  (%640, %641, meta[relay.Constant][35] /* ty=Tensor[(576), float32] */)
}

def @func_8061() -> Tensor[(13, 13, 13), float32] {
  %642 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %642.0
}

def @func_13306(%var_13297: Tensor[(88, 26), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(11, 13, 16), float32], Tensor[(88, 26), float32]) {
  %643 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %644 = cast(%var_13297, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
  %645 = reshape(%644, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %646 = @func_4616(%645) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
  %647 = %643.0;
  %648 = %646.2;
  (%647, %648, %var_13297)
}

def @func_11907() -> (Tensor[(13, 13, 13), uint8],) {
  %649 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %650 = %649.1;
  (%650,)
}

def @func_8273() -> (Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
  %651 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %652 = %651.0;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %654 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %655 = reshape(%654, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
  %656 = cosh(%653) /* ty=Tensor[(13, 13, 13), float64] */;
  %657 = @func_659(%655) /* ty=Tensor[(1, 2, 15), float64] */;
  (%656, %657, meta[relay.Constant][36] /* ty=Tensor[(30), float64] */)
}

def @func_11781() -> (Tensor[(13, 13, 13), bool],) {
  %658 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %659 = %658.0;
  (%659,)
}

def @func_5878() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) {
  %660 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %661 = cast(meta[relay.Constant][37] /* ty=Tensor[(27, 45), float64] */, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
  %662 = reshape(%661, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %663 = @func_5062(%662) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %664 = %663.0;
  %665 = cast(%664, dtype="uint64") /* ty=Tensor[(9, 9, 15), uint64] */;
  %666 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(27, 45), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %667 = cast(meta[relay.Constant][37] /* ty=Tensor[(27, 45), float64] */, dtype="uint64") /* ty=Tensor[(27, 45), uint64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %669 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
  %670 = %660.0;
  %671 = multiply(%667, %668) /* ty=Tensor[(27, 45), uint64] */;
  (%669, %670, %671)
}

def @func_6447(%var_6443: Tensor[(20), float32]) -> (Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) {
  %672 = @func_6188() /* ty=(Tensor[(180), float64],) */;
  %673 = %672.0;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(180), float64] */;
  %675 = reshape(%674, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %676 = @func_5339(%675) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) */;
  %677 = cast(%var_6443, dtype="float32") /* ty=Tensor[(20), float32] */;
  %678 = reshape(%677, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %679 = @func_2262(%678) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
  %680 = %676.0;
  %681 = %679.3;
  (%673, %680, %681, %var_6443)
}

def @func_7777() -> (Tensor[(5, 8, 2), float64],) {
  %682 = @func_7403() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) */;
  %683 = %682.2;
  (%683,)
}

def @func_4054() -> Tensor[(13, 13, 13), float64] {
  %684 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %684.0
}

def @func_8338(%var_8320: float64, %var_8328: Tensor[(30), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(70), float64], Tensor[(231), float32], Tensor[(30), float64]) {
  %685 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %686 = %685.3;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %688 = reshape(%687, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %689 = @func_3223(%688) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %690 = cast(%var_8320, dtype="float64") /* ty=float64 */;
  %691 = cast(meta[relay.Constant][38] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %692 = reshape(%690, newshape=[]) /* ty=float64 */;
  %693 = reshape(%691, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %694 = @func_2993(%692, %693) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %695 = cast(meta[relay.Constant][39] /* ty=Tensor[(231), float32] */, dtype="float32") /* ty=Tensor[(231), float32] */;
  %696 = cast(%var_8320, dtype="float64") /* ty=float64 */;
  %697 = cast(%var_8328, dtype="float64") /* ty=Tensor[(30), float64] */;
  %698 = %689.1;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %700 = cast(meta[relay.Constant][39] /* ty=Tensor[(231), float32] */, dtype="float32") /* ty=Tensor[(231), float32] */;
  %701 = reshape(%695, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %702 = reshape(%696, newshape=[]) /* ty=float64 */;
  %703 = reshape(%697, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %704 = reshape(%699, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %705 = reshape(%700, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %706 = @func_3994(%701, %702, %703, %704, %705) /* ty=(Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) */;
  %707 = %694.1;
  %708 = %706.2;
  (%686, %698, %707, %var_8320, meta[relay.Constant][38] /* ty=Tensor[(70), float64] */, %708, meta[relay.Constant][39] /* ty=Tensor[(231), float32] */, %var_8328)
}

def @func_5780() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) {
  %709 = @func_4745() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %710 = cast(meta[relay.Constant][40] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %711 = reshape(%710, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %712 = @func_5062(%711) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %713 = cast(meta[relay.Constant][40] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %714 = %709.0;
  %715 = %712.2;
  %716 = asinh(%713) /* ty=Tensor[(1215), float64] */;
  (%714, %715, %716)
}

def @func_6553(%var_6544: Tensor[(180), float64]) -> (Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(180), float64]) {
  %717 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %718 = %717.2;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(20), float32] */;
  %720 = cast(%var_6544, dtype="float64") /* ty=Tensor[(180), float64] */;
  %721 = reshape(%719, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %722 = reshape(%720, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %723 = @func_1604(%721, %722) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %724 = %723.5;
  (%718, %724, %var_6544)
}

def @func_9366(%var_9347: Tensor[(5, 4), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) {
  %725 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %726 = cast(%var_9347, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
  %727 = reshape(%726, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %728 = @func_2908(%727) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) */;
  %729 = @func_6188() /* ty=(Tensor[(180), float64],) */;
  %730 = %725.0;
  %731 = %728.3;
  %732 = %729.0;
  (%730, %731, %var_9347, %732)
}

def @func_8481() -> (Tensor[(5, 8, 2), float64], Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(180), float64], Tensor[(20, 1), float32]) {
  %733 = @func_7777() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %734 = @func_6188() /* ty=(Tensor[(180), float64],) */;
  %735 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %736 = cast(meta[relay.Constant][41] /* ty=Tensor[(20, 1), float32] */, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %737 = reshape(%736, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %738 = @func_2262(%737) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
  %739 = %733.0;
  %740 = %734.0;
  %741 = %735.0;
  %742 = %738.4;
  (%739, %740, %741, %742, meta[relay.Constant][41] /* ty=Tensor[(20, 1), float32] */)
}

def @func_13017(%var_12944: bool, %var_12945: Tensor[(7, 11, 1), bool]) -> (Tensor[(7, 11, ?), bool], Tensor[(13, 13, 13), uint8], Tensor[(7, 11, ?), uint32]) {
  %743 = cast(%var_12944, dtype="bool") /* ty=bool */;
  %744 = cast(%var_12945, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %745 = logical_and(%743, %744) /* ty=Tensor[(7, 11, 1), bool] */;
  %746 = cast(%745, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %747 = shape_of(%var_12945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_12945, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = logical_or(%748, %749) /* ty=Tensor[(7, 11, ?), bool] */;
  %751 = cast(%750, dtype="bool") /* ty=Tensor[(7, 11, ?), bool] */;
  %752 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%745, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = @func_8387() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) */;
  %756 = cast(%750, dtype="uint32") /* ty=Tensor[(7, 11, ?), uint32] */;
  %757 = shape_of(%var_12945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_12945, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %760 = equal(%753, %754) /* ty=Tensor[(7, 11, ?), bool] */;
  %761 = %755.0;
  %762 = bitwise_xor(%758, %759) /* ty=Tensor[(7, 11, ?), uint32] */;
  (%760, %761, %762)
}

def @func_9716(%var_9706: Tensor[(10, 4, 6), int16]) -> (Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) {
  %763 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %764 = cast(%var_9706, dtype="int16") /* ty=Tensor[(10, 4, 6), int16] */;
  %765 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %766 = bitwise_or(%763, %764) /* ty=Tensor[(10, 4, 6), int16] */;
  %767 = %765.0;
  (%766, %767)
}

def @func_9799() -> Tensor[(13, 13, 13), float64] {
  %768 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
  %768.0
}

def @func_11696() -> Tensor[(5, 14, 2), float64] {
  @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_9689(%var_9671: Tensor[(12, 7, 4), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32]) {
  %769 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
  %770 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
  %771 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
  %772 = acosh(%769) /* ty=Tensor[(12, 7, 4), float32] */;
  %773 = log2(%770) /* ty=Tensor[(12, 7, 4), float32] */;
  %774 = tan(%771) /* ty=Tensor[(12, 7, 4), float32] */;
  (%772, %773, %774)
}

def @func_1903() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %775 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %776 = cast(%775, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %777 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  %778 = cos(%776) /* ty=Tensor[(13, 13, 13), float64] */;
  %779 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  (%777, %778, %779)
}

def @func_10081(%var_10045: Tensor[(5, 14, 2), float64]) -> (Tensor[(5, 14, 2), float64], Tensor[(10, 4, 6), int16], Tensor[(240), int16]) {
  %780 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
  %781 = cast(%var_10045, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %785 = cast(meta[relay.Constant][43] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %786 = reshape(%785, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), int16] */;
  %787 = @func_9716(%786) /* ty=(Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) */;
  %788 = mod(%783, %784) /* ty=Tensor[(5, 14, 2), float64] */;
  %789 = %787.0;
  (%788, %789, meta[relay.Constant][43] /* ty=Tensor[(240), int16] */)
}

def @func_11173() -> Tensor[(13, 13, 13), float64] {
  %790 = @func_8603() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %790.0
}

def @func_5117() -> Tensor[(13, 13, 13), float64] {
  %791 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %791.0
}

def @func_9959(%var_9861: float64) -> (Tensor[(400), float32], Tensor[(1215), float64], Tensor[(70), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(10, 3), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(5, 8, 2), float64]) {
  %792 = @func_8833() /* ty=(Tensor[(400), float32], Tensor[(13, 13, 13), float64]) */;
  %793 = @func_9078() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) */;
  %794 = cast(%var_9861, dtype="float64") /* ty=float64 */;
  %795 = cast(meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %796 = reshape(%794, newshape=[]) /* ty=float64 */;
  %797 = reshape(%795, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %798 = @func_2993(%796, %797) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %799 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %800 = reshape(%799, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
  %801 = @func_9749() /* ty=(Tensor[(5, 14, 2), float64],) */;
  %802 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %803 = %792.0;
  %804 = %793.2;
  %805 = %798.3;
  %806 = @func_659(%800) /* ty=Tensor[(1, 2, 15), float64] */;
  %807 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
  %808 = %801.0;
  %809 = %802.0;
  (%803, %804, %805, %var_9861, meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, %806, meta[relay.Constant][45] /* ty=Tensor[(10, 3), float64] */, %807, %808, %809)
}

def @func_3245() -> (Tensor[(180), float64],) {
  %810 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %811 = %810.1;
  (%811,)
}

def @func_10426(%var_10381: Tensor[(70), float64]) -> (Tensor[(14, ?, 5), bool], Tensor[(4, 8, 15), uint16]) {
  %812 = cast(7.43528f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %813 = cast(%var_10381, dtype="float64") /* ty=Tensor[(70), float64] */;
  %814 = reshape(%812, newshape=[]) /* ty=float64 */;
  %815 = reshape(%813, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %816 = @func_2993(%814, %815) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %817 = %816.1;
  %818 = cast(%var_10381, dtype="bool") /* ty=Tensor[(70), bool] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%817, dtype="bool") /* ty=Tensor[(14, 1, 5), bool] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %822 = @func_10272() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) */;
  %823 = %822.1;
  %824 = cast(7.43528f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %825 = cast(%823, dtype="uint16") /* ty=Tensor[(4, 8, 15), uint16] */;
  %826 = logical_and(%820, %821) /* ty=Tensor[(14, ?, 5), bool] */;
  %827 = left_shift(%824, %825) /* ty=Tensor[(4, 8, 15), uint16] */;
  (%826, %827)
}

def @func_1011(%var_1008: Tensor[(6, 2, 15), float64]) -> (Tensor[(6, 2, 15), float64],) {
  %828 = cast(%var_1008, dtype="float64") /* ty=Tensor[(6, 2, 15), float64] */;
  %829 = rsqrt(%828) /* ty=Tensor[(6, 2, 15), float64] */;
  (%829,)
}

def @func_13171() -> (Tensor[(13, 13, 13), float64],) {
  %830 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %831 = %830.2;
  (%831,)
}

def @func_12147() -> (Tensor[(13, 13, 13), bool],) {
  %832 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %833 = %832.0;
  (%833,)
}

def @func_4922(%var_4913: float64, %var_4914: Tensor[(70), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %834 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %835 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %836 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %837 = cast(%var_4913, dtype="float64") /* ty=float64 */;
  %838 = cast(%var_4914, dtype="float64") /* ty=Tensor[(70), float64] */;
  %839 = reshape(%837, newshape=[]) /* ty=float64 */;
  %840 = reshape(%838, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %841 = @func_2800(%839, %840) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %842 = %834.0;
  %843 = %835.0;
  %844 = %836.0;
  %845 = %841.0;
  (%842, %843, %844, %845, %var_4913, %var_4914)
}

def @func_9057() -> (Tensor[(5, 8, 2), float32], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32]) {
  %846 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %847 = %846.0;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %849 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
  %850 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %851 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %852 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %853 = sinh(%848) /* ty=Tensor[(5, 8, 2), float32] */;
  %854 = @func_3592() /* ty=Tensor[(5, 14, 2), float64] */;
  %855 = %849.5;
  %856 = %850.0;
  %857 = %851.0;
  %858 = %852.0;
  (%853, %854, %855, %856, %857, %858)
}

def @func_9126() -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) {
  %859 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %860 = cast(meta[relay.Constant][46] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %861 = cast(meta[relay.Constant][46] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %862 = reshape(%860, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float32] */;
  %863 = reshape(%861, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float32] */;
  %864 = @func_4433(%862, %863) /* ty=(Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) */;
  %865 = %859.0;
  %866 = %864.2;
  (%865, %866, meta[relay.Constant][46] /* ty=Tensor[(490), float32] */)
}

def @func_13328() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %867 = @func_11605() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %868 = @func_12010() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %869 = %867.0;
  %870 = %868.0;
  (%869, %870)
}

def @func_11962(%var_11944: Tensor[(7, 10), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(7, 10), float64]) {
  %871 = @func_7004() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) */;
  %872 = cast(6.97595f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %873 = cast(%var_11944, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
  %874 = reshape(%872, newshape=[]) /* ty=float64 */;
  %875 = reshape(%873, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %876 = @func_2993(%874, %875) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %877 = %871.0;
  %878 = %876.1;
  (%877, %878, 6.97595f64 /* ty=float64 */, %var_11944)
}

def @func_2616() -> (Tensor[(13, 13, 13), float64],) {
  %879 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %880 = %879.1;
  (%880,)
}

def @func_1559() -> Tensor[(13, 13, 13), float32] {
  %881 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %882 = cast(%881, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  sigmoid(%882) /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_10272() -> (Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) {
  %883 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), uint64] */, dtype="uint64") /* ty=Tensor[(480), uint64] */;
  %884 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), uint64] */, dtype="uint64") /* ty=Tensor[(480), uint64] */;
  %885 = reshape(%883, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), uint64] */;
  %886 = reshape(%884, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), uint64] */;
  %887 = @func_5545(%885, %886) /* ty=(Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) */;
  %888 = @func_5484() /* ty=Tensor[(13, 13, 13), bool] */;
  %889 = %887.0;
  (%888, %889, meta[relay.Constant][47] /* ty=Tensor[(480), uint64] */)
}

def @func_7305() -> Tensor[(13, 13, 13), float32] {
  @func_1559() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_2725() -> Tensor[(13, 13, 13), float32] {
  @func_2403() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_659(%var_648: Tensor[(1, 2, 15), float64]) -> Tensor[(1, 2, 15), float64] {
  %890 = cast(%var_648, dtype="float64") /* ty=Tensor[(1, 2, 15), float64] */;
  exp(%890) /* ty=Tensor[(1, 2, 15), float64] */
}

def @func_6829() -> Tensor[(10, 13, 11), float32] {
  %891 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  asinh(%891) /* ty=Tensor[(10, 13, 11), float32] */
}

def @func_11038(%var_11032: Tensor[(400), float64]) -> (Tensor[(20), float32], Tensor[(16, 5, 5), float64], Tensor[(400), float64]) {
  %892 = @func_10700() /* ty=(Tensor[(20), float32],) */;
  %893 = cast(%var_11032, dtype="float64") /* ty=Tensor[(400), float64] */;
  %894 = reshape(%893, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), float64] */;
  %895 = @func_10342(%894) /* ty=(Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) */;
  %896 = %892.0;
  %897 = %895.0;
  (%896, %897, %var_11032)
}

def @func_7976(%var_7929: Tensor[(70), float64]) -> (Tensor[(180), float64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
  %898 = cast(-7.62913f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %899 = cast(%var_7929, dtype="float64") /* ty=Tensor[(70), float64] */;
  %900 = reshape(%898, newshape=[]) /* ty=float64 */;
  %901 = reshape(%899, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %902 = @func_2800(%900, %901) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %903 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %904 = @func_4037() /* ty=Tensor[(180), float64] */;
  %905 = %902.0;
  %906 = @func_6106() /* ty=Tensor[(180), float64] */;
  %907 = %903.0;
  (%904, %905, -7.62913f64 /* ty=float64 */, %var_7929, %906, %907)
}

def @func_1816() -> Tensor[(13, 13, 13), float64] {
  %908 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  rsqrt(%909) /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_5830() -> (Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %910 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %911 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %912 = %910.2;
  %913 = %911.1;
  (%912, %913)
}

def @func_1790() -> (Tensor[(13, 13, 13), float32],) {
  %914 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  (%914,)
}

def @func_2179() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  %915 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %916 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %917 = %915.2;
  (%916, %917)
}

def @func_6106() -> Tensor[(180), float64] {
  %918 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %918.1
}

def @func_7864() -> (Tensor[(20), float32],) {
  %919 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %920 = %919.0;
  (%920,)
}

def @func_8833() -> (Tensor[(400), float32], Tensor[(13, 13, 13), float64]) {
  %921 = @func_6427() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) */;
  %922 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %923 = %921.2;
  %924 = %922.0;
  (%923, %924)
}

def @func_10893() -> (Tensor[(13, 13, 13), float32],) {
  %925 = @func_8061() /* ty=Tensor[(13, 13, 13), float32] */;
  (%925,)
}

def @func_9241() -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float32]) {
  %926 = @func_3257() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %927 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %928 = %926.0;
  %929 = %927.2;
  %930 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
  (%928, %929, %930)
}

def @func_2403() -> Tensor[(13, 13, 13), float32] {
  %931 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %931.0
}

def @func_13408() -> Tensor[(13, 13, 13), float64] {
  @func_1816() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_9535() -> Tensor[(13, 13, 13), float32] {
  @func_1559() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_3257() -> (Tensor[(13, 13, 13), float64],) {
  %932 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %933 = %932.0;
  (%933,)
}

def @func_5390() -> Tensor[(5, 8, 2), float64] {
  %934 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %934.1
}

def @func_5721() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
  %935 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %936 = %935.0;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %938 = reshape(%937, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %939 = @func_3223(%938) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %940 = %939.0;
  (%936, %940)
}

def @func_5820() -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
  %941 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %942 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
  %943 = %941.0;
  (%942, %943)
}

def @func_2028() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) {
  %944 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %945 = cast(%944, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %946 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %947 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %948 = reshape(%946, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %949 = reshape(%947, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %950 = @func_146(%948, %949) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %951 = atanh(%945) /* ty=Tensor[(13, 13, 13), float32] */;
  %952 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
  %953 = %950.1;
  (%951, %952, %953, meta[relay.Constant][49] /* ty=Tensor[(80), float32] */)
}

def @func_2908(%var_2895: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) {
  %954 = cast(%var_2895, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %955 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %956 = reshape(%954, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %957 = reshape(%955, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %958 = @func_2101(%956, %957) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %959 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %960 = %958.2;
  (%959, %960, %var_2895, meta[relay.Constant][50] /* ty=Tensor[(180), float64] */)
}

def @func_9837() -> (Tensor[(13, 13, 13), float64],) {
  %961 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %962 = %961.0;
  (%962,)
}

def @func_6427() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) {
  %963 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %964 = cast(meta[relay.Constant][51] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %965 = reshape(%964, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
  %966 = @func_5953(%965) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
  %967 = %963.0;
  %968 = %966.1;
  (%967, %968, meta[relay.Constant][51] /* ty=Tensor[(400), float32] */)
}

def @func_1707() -> (Tensor[(13, 13, 13), float64],) {
  %969 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  (%969,)
}

def @func_8939(%var_8910: Tensor[(7, 2, 10), float64], %var_8921: Tensor[(7, 2, 10), float64]) -> (Tensor[(7, 2, 10), float64], Tensor[(7, 2, 10), bool]) {
  %970 = cast(%var_8910, dtype="float64") /* ty=Tensor[(7, 2, 10), float64] */;
  %971 = cast(%var_8921, dtype="bool") /* ty=Tensor[(7, 2, 10), bool] */;
  %972 = shape_of(%var_8910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %973 = cast(%var_8910, dtype="bool") /* ty=Tensor[(7, 2, 10), bool] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %975 = atan(%970) /* ty=Tensor[(7, 2, 10), float64] */;
  %976 = greater_equal(%973, %974) /* ty=Tensor[(7, 2, 10), bool] */;
  (%975, %976)
}

def @func_5953(%var_5925: Tensor[(5, 10, 8), float32]) -> (Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) {
  %977 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %978 = cast(%var_5925, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
  %979 = tan(%978) /* ty=Tensor[(5, 10, 8), float32] */;
  %980 = cast(%979, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
  %981 = %977.1;
  %982 = sin(%980) /* ty=Tensor[(5, 10, 8), float32] */;
  (%981, %982)
}

def @func_9451() -> (Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) {
  %983 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %984 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
  %985 = %983.1;
  %986 = %984.1;
  (%985, %986)
}

def @func_12233(%var_12173: Tensor[(48), float64]) -> (Tensor[(8, 6, 8), float64], Tensor[(48), float64], Tensor[(384), float64], Tensor[(180), float64], Tensor[(?, 8, 2), bool], Tensor[(13, 13, 13), float32], Tensor[(10, 2), float32], Tensor[(?, 8, 2), int8], Tensor[(?, 8, 2), float64]) {
  %987 = cast(%var_12173, dtype="float64") /* ty=Tensor[(48), float64] */;
  %988 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %989 = reshape(%987, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), float64] */;
  %990 = reshape(%988, newshape=[8, 6, 8]) /* ty=Tensor[(8, 6, 8), float64] */;
  %991 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %992 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %993 = acosh(%992) /* ty=Tensor[(1, 8, 2), float32] */;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %995 = asin(%994) /* ty=Tensor[(1, 8, 2), float32] */;
  %996 = cast(%993, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%995, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1000 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %1001 = reshape(%1000, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %1002 = @func_2908(%1001) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) */;
  %1003 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %1004 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%993, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1007 = floor_divide(%1005, %1006) /* ty=Tensor[(?, 8, 2), float32] */;
  %1008 = cast(%1007, dtype="int8") /* ty=Tensor[(?, 8, 2), int8] */;
  %1009 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%995, dtype="int8") /* ty=Tensor[(1, 8, 2), int8] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1012 = cast(%995, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %1013 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(1, 8, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1016 = minimum(%1014, %1015) /* ty=Tensor[(?, 8, 2), float32] */;
  %1017 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float64") /* ty=Tensor[(1, 8, 2), float64] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="float64") /* ty=Tensor[(?, 8, 2), float64] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1021 = @func_4700(%989, %990) /* ty=Tensor[(8, 6, 8), float64] */;
  %1022 = %991.1;
  %1023 = less_equal(%998, %999) /* ty=Tensor[(?, 8, 2), bool] */;
  %1024 = %1002.0;
  %1025 = left_shift(%1010, %1011) /* ty=Tensor[(?, 8, 2), int8] */;
  %1026 = divide(%1019, %1020) /* ty=Tensor[(?, 8, 2), float64] */;
  (%1021, %var_12173, meta[relay.Constant][52] /* ty=Tensor[(384), float64] */, %1022, %1023, %1024, meta[relay.Constant][54] /* ty=Tensor[(10, 2), float32] */, %1025, %1026)
}

def @func_6188() -> (Tensor[(180), float64],) {
  %1027 = @func_4037() /* ty=Tensor[(180), float64] */;
  (%1027,)
}

def @func_10106() -> (Tensor[(13, 13, 13), float32],) {
  %1028 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
  (%1028,)
}

def @func_2438() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  %1029 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %1030 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %1031 = %1029.0;
  %1032 = %1030.1;
  (%1031, %1032)
}

def @func_3020() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
  %1033 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %1034 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %1035 = %1033.0;
  (%1034, %1035)
}

def @func_11605() -> (Tensor[(13, 13, 13), float64],) {
  %1036 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_6401() -> (Tensor[(5, 8, 2), uint64],) {
  %1038 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %1039 = %1038.0;
  (%1039,)
}

def @func_12400() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
  %1040 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
  %1041 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %1042 = %1040.0;
  %1043 = %1041.2;
  (%1042, %1043)
}

def @func_12010() -> (Tensor[(13, 13, 13), float64],) {
  %1044 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %1045 = %1044.1;
  (%1045,)
}

def @func_8603() -> (Tensor[(13, 13, 13), float64],) {
  %1046 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_2366() -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) {
  %1048 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %1049 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %1050 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %1051 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %1053 = asin(%1052) /* ty=Tensor[(13, 13, 13), float32] */;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %1055 = %1048.1;
  %1056 = %1049.0;
  %1057 = %1050.1;
  %1058 = sin(%1054) /* ty=Tensor[(13, 13, 13), float32] */;
  (%1055, %1056, %1057, %1058)
}

def @func_2993(%var_2990: float64, %var_2991: Tensor[(70), float64]) -> (Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %1059 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %1060 = cast(%var_2990, dtype="float64") /* ty=float64 */;
  %1061 = cast(%var_2991, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1062 = reshape(%1060, newshape=[]) /* ty=float64 */;
  %1063 = reshape(%1061, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %1064 = @func_2800(%1062, %1063) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %1065 = %1059.0;
  %1066 = %1064.0;
  (%1065, %1066, %var_2990, %var_2991)
}

def @main(%var_13491: float32, %var_13492: Tensor[(1, 4, 8), float32]) -> Tensor[(1, 4, 8), float32] {
  %1067 = cast(%var_13491, dtype="float32") /* ty=float32 */;
  %1068 = cast(%var_13492, dtype="float32") /* ty=Tensor[(1, 4, 8), float32] */;
  mod(%1067, %1068) /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_7403() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) {
  %1069 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %1070 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %1071 = @func_2939() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %1072 = %1069.0;
  %1073 = %1070.1;
  %1074 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
  %1075 = %1071.0;
  (%1072, %1073, %1074, %1075)
}

def @func_3410() -> Tensor[(5, 14, 2), float64] {
  %1076 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  asin(%1076) /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_13215() -> (Tensor[(13, 13, 13), float64],) {
  %1077 = @func_13171() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_5442() -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %1079 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %1080 = cast(meta[relay.Constant][56] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %1081 = reshape(%1080, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %1082 = @func_4825(%1081) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) */;
  %1083 = %1079.1;
  %1084 = %1082.2;
  %1085 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  (%1083, %1084, meta[relay.Constant][56] /* ty=Tensor[(20), float32] */, %1085)
}

def @func_13379() -> (Tensor[(13, 13, 13), float32],) {
  %1086 = @func_10893() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_7530(%var_7492: Tensor[(20), float32], %var_7523: Tensor[(6, 30), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(180, 1), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(132, 1), float64], float64, Tensor[(70), float64], Tensor[(6, 30), float32]) {
  %1088 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %1089 = cast(%var_7492, dtype="float32") /* ty=Tensor[(20), float32] */;
  %1090 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %1091 = reshape(%1089, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %1092 = reshape(%1090, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %1093 = @func_2101(%1091, %1092) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %1094 = cast(meta[relay.Constant][58] /* ty=Tensor[(132, 1), float64] */, dtype="float64") /* ty=Tensor[(132, 1), float64] */;
  %1095 = cast(-4.91148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1096 = cast(meta[relay.Constant][59] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1097 = reshape(%1094, newshape=[11, 3, 4]) /* ty=Tensor[(11, 3, 4), float64] */;
  %1098 = reshape(%1095, newshape=[]) /* ty=float64 */;
  %1099 = reshape(%1096, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %1100 = @func_3370(%1097, %1098, %1099) /* ty=(Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) */;
  %1101 = cast(%var_7523, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %1102 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(6, 30), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1103 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 30), float64] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1105 = %1088.2;
  %1106 = %1093.3;
  %1107 = %1100.4;
  %1108 = power(%1103, %1104) /* ty=Tensor[(6, 30), float32] */;
  (%1105, %1106, %var_7492, %1107, meta[relay.Constant][58] /* ty=Tensor[(132, 1), float64] */, -4.91148f64 /* ty=float64 */, meta[relay.Constant][59] /* ty=Tensor[(70), float64] */, %1108)
}

def @func_9991() -> Tensor[(13, 13, 13), float32] {
  %1109 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %1109.0
}

def @func_3870() -> (Tensor[(13, 13, 13), float64],) {
  %1110 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %1111 = %1110.0;
  (%1111,)
}

def @func_7881(%var_7870: Tensor[(6, 4, 15), float64], %var_7875: Tensor[(180, 1), float64]) -> (Tensor[(6, 4, 15), float64], Tensor[(16, 11, 6), float32], Tensor[(1056), bool], Tensor[(180, 1), float64]) {
  %1112 = cast(%var_7870, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %1113 = cast(meta[relay.Constant][60] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %1114 = cast(meta[relay.Constant][60] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %1115 = cast(%var_7875, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %1116 = reshape(%1113, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %1117 = reshape(%1114, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %1118 = reshape(%1115, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %1119 = @func_6642(%1116, %1117, %1118) /* ty=(Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) */;
  %1120 = exp(%1112) /* ty=Tensor[(6, 4, 15), float64] */;
  %1121 = %1119.6;
  (%1120, %1121, meta[relay.Constant][60] /* ty=Tensor[(1056), bool] */, %var_7875)
}

def @func_7679() -> (Tensor[(5, 8, 2), uint64],) {
  %1122 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %1123 = %1122.1;
  (%1123,)
}

def @func_3994(%var_3930: Tensor[(3, 11, 7), float32], %var_3940: float64, %var_3953: Tensor[(30), float64], %var_3969: Tensor[(80), float32], %var_3976: Tensor[(3, 11, 7), float32]) -> (Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) {
  %1124 = cast(%var_3940, dtype="float64") /* ty=float64 */;
  %1125 = cast(meta[relay.Constant][61] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1126 = reshape(%1124, newshape=[]) /* ty=float64 */;
  %1127 = reshape(%1125, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %1128 = @func_2993(%1126, %1127) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %1129 = cast(%var_3953, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1130 = reshape(%1129, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
  %1131 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %1132 = reshape(%1131, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
  %1133 = @func_3507(%1132) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
  %1134 = cast(%var_3969, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1135 = cast(%var_3969, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1136 = reshape(%1134, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %1137 = reshape(%1135, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
  %1138 = @func_146(%1136, %1137) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %1139 = cast(%var_3930, dtype="float32") /* ty=Tensor[(3, 11, 7), float32] */;
  %1140 = log2(%1139) /* ty=Tensor[(3, 11, 7), float32] */;
  %1141 = cast(%var_3976, dtype="uint32") /* ty=Tensor[(3, 11, 7), uint32] */;
  %1142 = shape_of(%1140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(%1140, dtype="uint32") /* ty=Tensor[(3, 11, 7), uint32] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1145 = bitwise_or(%1143, %1144) /* ty=Tensor[(3, 11, 7), uint32] */;
  %1146 = cast(%1145, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %1147 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1148 = %1128.1;
  %1149 = @func_659(%1130) /* ty=Tensor[(1, 2, 15), float64] */;
  %1150 = %1133.2;
  %1151 = %1138.0;
  %1152 = sinh(%1146) /* ty=Tensor[(3, 11, 7), float64] */;
  %1153 = %1147.0;
  (%1148, %var_3940, meta[relay.Constant][61] /* ty=Tensor[(70), float64] */, %1149, %var_3953, %1150, meta[relay.Constant][62] /* ty=Tensor[(6, 30), float64] */, %1151, %var_3969, %1152, %1153)
}

def @func_6801() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) {
  %1154 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %1155 = %1154.0;
  %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %1157 = reshape(%1156, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %1158 = @func_3223(%1157) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %1159 = cast(meta[relay.Constant][63] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %1160 = reshape(%1159, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %1161 = @func_3111(%1160) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %1162 = %1158.0;
  %1163 = %1161.3;
  (%1155, %1162, %1163, meta[relay.Constant][63] /* ty=Tensor[(30, 6), float64] */)
}

def @func_6084() -> Tensor[(180), float64] {
  @func_4037() /* ty=Tensor[(180), float64] */
}

def @func_11320() -> (Tensor[(13, 13, 13), float64],) {
  %1164 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_519(%var_516: Tensor[(4, 1, 5), float32]) -> Tensor[(4, 1, 5), float32] {
  %1166 = cast(%var_516, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  acosh(%1166) /* ty=Tensor[(4, 1, 5), float32] */
}

def @func_10113() -> Tensor[(5, 14, 2), float64] {
  @func_3410() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_3223(%var_3204: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
  %1167 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %1168 = %1167.0;
  %1169 = cast(%var_3204, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%1168, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1173 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %1174 = left_shift(%1171, %1172) /* ty=Tensor[(13, 13, 13), uint8] */;
  %1175 = %1173.0;
  (%1174, %1175)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13309(%var_13307: Tensor[(88, 26), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(11, 13, 16), float32], Tensor[(88, 26), float32]) {
  @func_13306(%var_13307) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(11, 13, 16), float32], Tensor[(88, 26), float32]) */
}

def @func_3022() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
  @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */
}

def @func_8273() -> (Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
  %0 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %4 = reshape(%3, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
  %5 = cosh(%2) /* ty=Tensor[(13, 13, 13), float64] */;
  %6 = @func_659(%4) /* ty=Tensor[(1, 2, 15), float64] */;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(30), float64] */)
}

def @func_5117() -> Tensor[(13, 13, 13), float64] {
  %7 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %7.0
}

def @func_8155() -> (Tensor[(13, 13, 13), float64],) {
  %8 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
  (%8,)
}

def @func_12236(%var_12234: Tensor[(48), float64]) -> (Tensor[(8, 6, 8), float64], Tensor[(48), float64], Tensor[(384), float64], Tensor[(180), float64], Tensor[(?, 8, 2), bool], Tensor[(13, 13, 13), float32], Tensor[(10, 2), float32], Tensor[(?, 8, 2), int8], Tensor[(?, 8, 2), float64]) {
  @func_12233(%var_12234) /* ty=(Tensor[(8, 6, 8), float64], Tensor[(48), float64], Tensor[(384), float64], Tensor[(180), float64], Tensor[(?, 8, 2), bool], Tensor[(13, 13, 13), float32], Tensor[(10, 2), float32], Tensor[(?, 8, 2), int8], Tensor[(?, 8, 2), float64]) */
}

def @func_6396() -> Tensor[(13, 13, 13), float64] {
  @func_6394() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_2997(%var_2995: float64, %var_2996: Tensor[(70), float64]) -> (Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  @func_2993(%var_2995, %var_2996) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */
}

def @func_4298(%var_4296: Tensor[(3, 16, 2), uint8]) -> Tensor[(3, 16, 2), uint8] {
  @func_4295(%var_4296) /* ty=Tensor[(3, 16, 2), uint8] */
}

def @func_1708() -> (Tensor[(13, 13, 13), float64],) {
  %10 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %9 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
    (%9,)
  };
  %10() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_10930() -> Tensor[(5, 8, 2), float64] {
  %11 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
  %11.1
}

def @func_6106() -> Tensor[(180), float64] {
  %12 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %12.1
}

def @func_11246() -> Tensor[(2288), float32] {
  %13 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
  %13.7
}

def @func_7978(%var_7977: Tensor[(70), float64]) -> (Tensor[(180), float64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
  %24 = fn (%var_7929: Tensor[(70), float64]) -> (Tensor[(180), float64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
    %14 = cast(-7.62913f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %15 = cast(%var_7929, dtype="float64") /* ty=Tensor[(70), float64] */;
    %16 = reshape(%14, newshape=[]) /* ty=float64 */;
    %17 = reshape(%15, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
    %18 = @func_2800(%16, %17) /* ty=(Tensor[(14, 1, 5), float64],) */;
    %19 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %20 = @func_4037() /* ty=Tensor[(180), float64] */;
    %21 = %18.0;
    %22 = @func_6106() /* ty=Tensor[(180), float64] */;
    %23 = %19.0;
    (%20, %21, -7.62913f64 /* ty=float64 */, %var_7929, %22, %23)
  };
  %24(%var_7977) /* ty=(Tensor[(180), float64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) */
}

def @func_6646(%var_6643: Tensor[(16, 11, 6), bool], %var_6644: Tensor[(16, 11, 6), bool], %var_6645: Tensor[(180), float64]) -> (Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) {
  %44 = fn (%var_6559: Tensor[(16, 11, 6), bool], %var_6560: Tensor[(16, 11, 6), bool], %var_6566: Tensor[(180), float64]) -> (Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) {
    %25 = cast(%var_6560, dtype="bool") /* ty=Tensor[(16, 11, 6), bool] */;
    %26 = shape_of(%var_6559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_6559, dtype="bool") /* ty=Tensor[(16, 11, 6), bool] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %30 = cast(%var_6566, dtype="float64") /* ty=Tensor[(180), float64] */;
    %31 = reshape(%29, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %32 = reshape(%30, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
    %33 = @func_1604(%31, %32) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
    %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
    %35 = reshape(%34, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
    %36 = @func_5953(%35) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
    %37 = cast(%var_6559, dtype="float32") /* ty=Tensor[(16, 11, 6), float32] */;
    %38 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
    %39 = logical_or(%27, %28) /* ty=Tensor[(16, 11, 6), bool] */;
    %40 = %33.1;
    %41 = %36.1;
    %42 = sin(%37) /* ty=Tensor[(16, 11, 6), float32] */;
    %43 = %38.1;
    (%39, %40, meta[relay.Constant][1] /* ty=Tensor[(20), float32] */, %var_6566, %41, meta[relay.Constant][2] /* ty=Tensor[(400), float32] */, %42, %43)
  };
  %44(%var_6643, %var_6644, %var_6645) /* ty=(Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) */
}

def @func_6336() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) {
  @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_9451() -> (Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) {
  %45 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %46 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
  %47 = %45.1;
  %48 = %46.1;
  (%47, %48)
}

def @func_9716(%var_9706: Tensor[(10, 4, 6), int16]) -> (Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) {
  %49 = cast(meta[relay.Constant][3] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %50 = cast(%var_9706, dtype="int16") /* ty=Tensor[(10, 4, 6), int16] */;
  %51 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %52 = bitwise_or(%49, %50) /* ty=Tensor[(10, 4, 6), int16] */;
  %53 = %51.0;
  (%52, %53)
}

def @func_11907() -> (Tensor[(13, 13, 13), uint8],) {
  %54 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %55 = %54.1;
  (%55,)
}

def @func_1608(%var_1606: Tensor[(20), float32], %var_1607: Tensor[(6, 30), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) {
  @func_1604(%var_1606, %var_1607) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */
}

def @func_13173() -> (Tensor[(13, 13, 13), float64],) {
  @func_13171() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_2821() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %63 = fn () -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
    %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %57 = reshape(%56, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %58 = @func_2262(%57) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
    %59 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %60 = @func_2725() /* ty=Tensor[(13, 13, 13), float32] */;
    %61 = %58.4;
    %62 = %59.1;
    (%60, %61, meta[relay.Constant][4] /* ty=Tensor[(20), float32] */, %62)
  };
  %63() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_5953(%var_5925: Tensor[(5, 10, 8), float32]) -> (Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) {
  %64 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %65 = cast(%var_5925, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
  %66 = tan(%65) /* ty=Tensor[(5, 10, 8), float32] */;
  %67 = cast(%66, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
  %68 = %64.1;
  %69 = sin(%67) /* ty=Tensor[(5, 10, 8), float32] */;
  (%68, %69)
}

def @func_6085() -> Tensor[(180), float64] {
  %70 = fn () -> Tensor[(180), float64] {
    @func_4037() /* ty=Tensor[(180), float64] */
  };
  %70() /* ty=Tensor[(180), float64] */
}

def @func_12401() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
  %75 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
    %71 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
    %72 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
    %73 = %71.0;
    %74 = %72.2;
    (%73, %74)
  };
  %75() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */
}

def @func_8062() -> Tensor[(13, 13, 13), float32] {
  %77 = fn () -> Tensor[(13, 13, 13), float32] {
    %76 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %76.0
  };
  %77() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_1818() -> Tensor[(13, 13, 13), float64] {
  @func_1816() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_11380(%var_11377: Tensor[(231), float32], %var_11378: float64, %var_11379: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(30, 6), float32], Tensor[(231), float32], float64, Tensor[(30), float64], Tensor[(80), float32], Tensor[(5, 14, 2), float64]) {
  @func_11375(%var_11377, %var_11378, %var_11379) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(30, 6), float32], Tensor[(231), float32], float64, Tensor[(30), float64], Tensor[(80), float32], Tensor[(5, 14, 2), float64]) */
}

def @func_13485() -> (Tensor[(80), float32],) {
  %78 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %79 = %78.3;
  (%79,)
}

def @func_2527() -> (Tensor[(13, 13, 13), bool],) {
  %86 = fn () -> (Tensor[(13, 13, 13), bool],) {
    %80 = @func_2403() /* ty=Tensor[(13, 13, 13), float32] */;
    %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 13, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
    %83 = cast(%80, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %85 = greater(%83, %84) /* ty=Tensor[(13, 13, 13), bool] */;
    (%85,)
  };
  %86() /* ty=(Tensor[(13, 13, 13), bool],) */
}

def @func_5339(%var_5324: Tensor[(180), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) {
  %87 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %88 = %87.1;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %90 = reshape(%89, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %91 = @func_3910(%90) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) */;
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %93 = cast(%var_5324, dtype="float64") /* ty=Tensor[(180), float64] */;
  %94 = reshape(%92, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %95 = reshape(%93, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %96 = @func_2101(%94, %95) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %97 = %96.3;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %99 = reshape(%98, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %100 = @func_3111(%99) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %101 = %91.2;
  %102 = %100.3;
  (%88, %101, %97, meta[relay.Constant][6] /* ty=Tensor[(10, 2), float32] */, %var_5324, %102)
}

def @func_10853() -> (Tensor[(13, 13, 13), float32],) {
  %103 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %104 = %103.0;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %106 = asinh(%105) /* ty=Tensor[(13, 13, 13), float32] */;
  (%106,)
}

def @func_10894() -> (Tensor[(13, 13, 13), float32],) {
  %108 = fn () -> (Tensor[(13, 13, 13), float32],) {
    %107 = @func_8061() /* ty=Tensor[(13, 13, 13), float32] */;
    (%107,)
  };
  %108() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_11279() -> (Tensor[(20, 12), uint64], Tensor[(180), float64]) {
  %113 = fn () -> (Tensor[(20, 12), uint64], Tensor[(180), float64]) {
    %109 = @func_8387() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) */;
    %110 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %111 = %109.1;
    %112 = %110.1;
    (%111, %112)
  };
  %113() /* ty=(Tensor[(20, 12), uint64], Tensor[(180), float64]) */
}

def @func_11605() -> (Tensor[(13, 13, 13), float64],) {
  %114 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %115 = %114.0;
  (%115,)
}

def @func_3509(%var_3508: Tensor[(30, 6), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) {
  %129 = fn (%var_3461: Tensor[(30, 6), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) {
    %116 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %117 = cast(%var_3461, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
    %118 = reshape(%117, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
    %119 = @func_1011(%118) /* ty=(Tensor[(6, 2, 15), float64],) */;
    %120 = cast(%var_3461, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
    %121 = acos(%120) /* ty=Tensor[(30, 6), float64] */;
    %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(30, 6), float64] */, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %123 = shape_of(%121, dtype="int32") /* ty=Tensor[(2), int32] */;
    %124 = cast(%121, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %126 = %116.0;
    %127 = %119.0;
    %128 = floor_mod(%124, %125) /* ty=Tensor[(30, 6), float32] */;
    (%126, %127, %128)
  };
  %129(%var_3508) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */
}

def @func_6801() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) {
  %130 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %133 = reshape(%132, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %134 = @func_3223(%133) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %136 = reshape(%135, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %137 = @func_3111(%136) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %138 = %134.0;
  %139 = %137.3;
  (%131, %138, %139, meta[relay.Constant][8] /* ty=Tensor[(30, 6), float64] */)
}

def @func_12897() -> Tensor[(13, 13, 13), float64] {
  %141 = fn () -> Tensor[(13, 13, 13), float64] {
    %140 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %140.0
  };
  %141() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_9453() -> (Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) {
  @func_9451() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) */
}

def @func_7881(%var_7870: Tensor[(6, 4, 15), float64], %var_7875: Tensor[(180, 1), float64]) -> (Tensor[(6, 4, 15), float64], Tensor[(16, 11, 6), float32], Tensor[(1056), bool], Tensor[(180, 1), float64]) {
  %142 = cast(%var_7870, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %144 = cast(meta[relay.Constant][9] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %145 = cast(%var_7875, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %146 = reshape(%143, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %147 = reshape(%144, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %148 = reshape(%145, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %149 = @func_6642(%146, %147, %148) /* ty=(Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) */;
  %150 = exp(%142) /* ty=Tensor[(6, 4, 15), float64] */;
  %151 = %149.6;
  (%150, %151, meta[relay.Constant][9] /* ty=Tensor[(1056), bool] */, %var_7875)
}

def @func_11909() -> (Tensor[(13, 13, 13), uint8],) {
  @func_11907() /* ty=(Tensor[(13, 13, 13), uint8],) */
}

def @func_9799() -> Tensor[(13, 13, 13), float64] {
  %152 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
  %152.0
}

def @func_1791() -> (Tensor[(13, 13, 13), float32],) {
  %154 = fn () -> (Tensor[(13, 13, 13), float32],) {
    %153 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    (%153,)
  };
  %154() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_2368() -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) {
  @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */
}

def @func_13061() -> Tensor[(13, 13, 13), uint8] {
  %155 = @func_8655() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %155.1
}

def @func_8802(%var_8801: Tensor[(1, 180), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), float64], Tensor[(1, 180), float64], Tensor[(3, 16, 12), float32]) {
  %164 = fn (%var_8795: Tensor[(1, 180), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), float64], Tensor[(1, 180), float64], Tensor[(3, 16, 12), float32]) {
    %156 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %157 = cast(%var_8795, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
    %158 = reshape(%157, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
    %159 = @func_3507(%158) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
    %160 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
    %161 = %156.0;
    %162 = %159.0;
    %163 = %160.1;
    (%161, %162, %var_8795, %163)
  };
  %164(%var_8801) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), float64], Tensor[(1, 180), float64], Tensor[(3, 16, 12), float32]) */
}

def @func_13306(%var_13297: Tensor[(88, 26), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(11, 13, 16), float32], Tensor[(88, 26), float32]) {
  %165 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %166 = cast(%var_13297, dtype="float32") /* ty=Tensor[(88, 26), float32] */;
  %167 = reshape(%166, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
  %168 = @func_4616(%167) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
  %169 = %165.0;
  %170 = %168.2;
  (%169, %170, %var_13297)
}

def @func_8656() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
  %175 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
    %171 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %172 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
    %173 = %171.1;
    %174 = %172.1;
    (%173, %174)
  };
  %175() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */
}

def @func_2850() -> (Tensor[(13, 13, 13), float64],) {
  @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_3246() -> (Tensor[(180), float64],) {
  %178 = fn () -> (Tensor[(180), float64],) {
    %176 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %177 = %176.1;
    (%177,)
  };
  %178() /* ty=(Tensor[(180), float64],) */
}

def @func_1431(%var_1429: Tensor[(3, 16, 12), float32]) -> (Tensor[(3, 16, 12), float32],) {
  @func_1428(%var_1429) /* ty=(Tensor[(3, 16, 12), float32],) */
}

def @func_3593() -> Tensor[(5, 14, 2), float64] {
  %179 = fn () -> Tensor[(5, 14, 2), float64] {
    @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
  };
  %179() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_3114(%var_3112: Tensor[(3, 60), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) {
  @func_3111(%var_3112) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */
}

def @func_6830() -> Tensor[(10, 13, 11), float32] {
  %181 = fn () -> Tensor[(10, 13, 11), float32] {
    %180 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
    asinh(%180) /* ty=Tensor[(10, 13, 11), float32] */
  };
  %181() /* ty=Tensor[(10, 13, 11), float32] */
}

def @func_10193() -> (Tensor[(13, 13, 13), float32],) {
  %184 = fn () -> (Tensor[(13, 13, 13), float32],) {
    %182 = @func_10106() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %183 = %182.0;
    (%183,)
  };
  %184() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_5780() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) {
  %185 = @func_4745() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %186 = cast(meta[relay.Constant][11] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %187 = reshape(%186, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %188 = @func_5062(%187) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %189 = cast(meta[relay.Constant][11] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %190 = %185.0;
  %191 = %188.2;
  %192 = asinh(%189) /* ty=Tensor[(1215), float64] */;
  (%190, %191, %192)
}

def @func_7778() -> (Tensor[(5, 8, 2), float64],) {
  %195 = fn () -> (Tensor[(5, 8, 2), float64],) {
    %193 = @func_7403() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) */;
    %194 = %193.2;
    (%194,)
  };
  %195() /* ty=(Tensor[(5, 8, 2), float64],) */
}

def @func_8037() -> Tensor[(13, 13, 13), uint8] {
  %196 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
  %196.1
}

def @func_4241() -> (Tensor[(13, 13, 13), float64],) {
  @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_1520() -> Tensor[(13, 13, 13), float64] {
  %198 = fn () -> Tensor[(13, 13, 13), float64] {
    %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
    log(%197) /* ty=Tensor[(13, 13, 13), float64] */
  };
  %198() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_7193(%var_7192: Tensor[(400), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(5, 8, 2), float64]) {
  %217 = fn (%var_7136: Tensor[(400), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(5, 8, 2), float64]) {
    %199 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %200 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
    %201 = cast(%var_7136, dtype="float32") /* ty=Tensor[(400), float32] */;
    %202 = reshape(%201, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
    %203 = @func_5953(%202) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
    %204 = cast(meta[relay.Constant][13] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %205 = reshape(%204, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %206 = @func_4616(%205) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
    %207 = cast(meta[relay.Constant][14] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %208 = reshape(%207, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
    %209 = @func_6693(%208) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) */;
    %210 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
    %211 = %199.1;
    %212 = %200.0;
    %213 = %203.1;
    %214 = %206.2;
    %215 = %209.1;
    %216 = %210.0;
    (%211, %212, %213, %var_7136, %214, meta[relay.Constant][13] /* ty=Tensor[(2288), float32] */, %215, meta[relay.Constant][14] /* ty=Tensor[(20), float32] */, %216)
  };
  %217(%var_7192) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(5, 8, 2), float64]) */
}

def @func_2440() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_13217() -> (Tensor[(13, 13, 13), float64],) {
  @func_13215() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_6755() -> (Tensor[(180), float64], Tensor[(5, 8, 2), float64]) {
  @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */
}

def @func_11155(%var_11153: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64], Tensor[(80), float32], Tensor[(1056), bool], Tensor[(180), float64], Tensor[(5, 10, 8), bool]) {
  @func_11152(%var_11153) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64], Tensor[(80), float32], Tensor[(1056), bool], Tensor[(180), float64], Tensor[(5, 10, 8), bool]) */
}

def @func_3257() -> (Tensor[(13, 13, 13), float64],) {
  %218 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %219 = %218.0;
  (%219,)
}

def @func_13328() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %220 = @func_11605() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %221 = @func_12010() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %222 = %220.0;
  %223 = %221.0;
  (%222, %223)
}

def @func_11011() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %228 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
    %224 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %225 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %226 = %224.0;
    %227 = %225.1;
    (%226, %227)
  };
  %228() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_5292() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) {
  %246 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) {
    %229 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %230 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
    %231 = cast(-0.726782f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %232 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %233 = reshape(%231, newshape=[]) /* ty=float64 */;
    %234 = reshape(%232, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %235 = @func_2993(%233, %234) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %236 = cast(meta[relay.Constant][16] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %237 = reshape(%236, newshape=[2288]) /* ty=Tensor[(2288), float32] */;
    %238 = @func_4616(%237) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */;
    %239 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %240 = %229.1;
    %241 = %230.0;
    %242 = %235.0;
    %243 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
    %244 = %238.4;
    %245 = %239.0;
    (%240, %241, %242, -0.726782f64 /* ty=float64 */, meta[relay.Constant][15] /* ty=Tensor[(70), float64] */, %243, %244, meta[relay.Constant][16] /* ty=Tensor[(2288), float32] */, %245)
  };
  %246() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_6528() -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  %247 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %248 = @func_5484() /* ty=Tensor[(13, 13, 13), bool] */;
  %249 = %247.0;
  (%248, %249)
}

def @func_11815() -> (Tensor[(180), float64],) {
  %252 = fn () -> (Tensor[(180), float64],) {
    %250 = @func_3245() /* ty=(Tensor[(180), float64],) */;
    %251 = %250.0;
    (%251,)
  };
  %252() /* ty=(Tensor[(180), float64],) */
}

def @main(%var_13491: float32, %var_13492: Tensor[(1, 4, 8), float32]) -> Tensor[(1, 4, 8), float32] {
  %253 = cast(%var_13491, dtype="float32") /* ty=float32 */;
  %254 = cast(%var_13492, dtype="float32") /* ty=Tensor[(1, 4, 8), float32] */;
  mod(%253, %254) /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_3634(%var_3628: Tensor[(11, 13, 16), float32], %var_3629: Tensor[(11, 13, 16), float32]) -> Tensor[(11, 13, 16), float32] {
  %255 = cast(%var_3629, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %256 = shape_of(%var_3628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%var_3628, dtype="float32") /* ty=Tensor[(11, 13, 16), float32] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%257, %258) /* ty=Tensor[(11, 13, 16), float32] */
}

def @func_4055() -> Tensor[(13, 13, 13), float64] {
  %260 = fn () -> Tensor[(13, 13, 13), float64] {
    %259 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %259.0
  };
  %260() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_8039() -> Tensor[(13, 13, 13), uint8] {
  @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */
}

def @func_13153() -> Tensor[(13, 13, 13), float64] {
  %261 = fn () -> Tensor[(13, 13, 13), float64] {
    @func_12896() /* ty=Tensor[(13, 13, 13), float64] */
  };
  %261() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_5822() -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
  @func_5820() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_10701() -> (Tensor[(20), float32],) {
  %264 = fn () -> (Tensor[(20), float32],) {
    %262 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(20), float32],) */
}

def @func_2151() -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
  %273 = fn () -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
    %265 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
    %266 = %265.2;
    %267 = cast(%266, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
    %268 = cast(%266, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
    %269 = reshape(%267, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %270 = reshape(%268, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %271 = @func_146(%269, %270) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %272 = %271.2;
    (%266, %272)
  };
  %273() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */
}

def @func_3111(%var_3096: Tensor[(3, 60), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) {
  %274 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %275 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
  %276 = cast(%var_3096, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
  %277 = reshape(%275, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %278 = reshape(%276, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %279 = @func_1604(%277, %278) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %280 = %274.1;
  %281 = %279.4;
  (%280, %281, meta[relay.Constant][17] /* ty=Tensor[(1, 20), float32] */, %var_3096)
}

def @func_2634(%var_2626: Tensor[(1, 8, 10), float64]) -> (Tensor[(1, 8, 10), float64], Tensor[(13, 13, 13), float64]) {
  %282 = cast(%var_2626, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
  %283 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %284 = log10(%282) /* ty=Tensor[(1, 8, 10), float64] */;
  %285 = %283.0;
  (%284, %285)
}

def @func_9536() -> Tensor[(13, 13, 13), float32] {
  %286 = fn () -> Tensor[(13, 13, 13), float32] {
    @func_1559() /* ty=Tensor[(13, 13, 13), float32] */
  };
  %286() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_4356() -> (Tensor[(13, 13, 13), float64],) {
  @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_4704(%var_4702: Tensor[(1, 6, 8), float64], %var_4703: Tensor[(8, 6, 8), float64]) -> Tensor[(8, 6, 8), float64] {
  @func_4700(%var_4702, %var_4703) /* ty=Tensor[(8, 6, 8), float64] */
}

def @func_13083(%var_13064: Tensor[(5, 8, 3), float32], %var_13068: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 3), float32], Tensor[(180, 1), float64], Tensor[(20, 1), float32], Tensor[(180), float64]) {
  %287 = cast(%var_13064, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
  %288 = cast(%var_13068, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %290 = reshape(%288, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %291 = reshape(%289, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %292 = @func_2101(%290, %291) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %293 = sin(%287) /* ty=Tensor[(5, 8, 3), float32] */;
  %294 = %292.3;
  (%293, %294, %var_13068, meta[relay.Constant][18] /* ty=Tensor[(180), float64] */)
}

def @func_7849(%var_7846: int32, %var_7847: Tensor[(13, 1, 9), int32], %var_7848: Tensor[(13, 11, 9), bool]) -> (Tensor[(20), float32], Tensor[(13, 11, 9), bool], Tensor[(13, 11, 9), float64]) {
  %311 = fn (%var_7779: int32, %var_7780: Tensor[(13, 1, 9), int32], %var_7800: Tensor[(13, 11, 9), bool]) -> (Tensor[(20), float32], Tensor[(13, 11, 9), bool], Tensor[(13, 11, 9), float64]) {
    %295 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %296 = cast(%var_7779, dtype="bool") /* ty=bool */;
    %297 = cast(%var_7780, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
    %298 = equal(%296, %297) /* ty=Tensor[(13, 1, 9), bool] */;
    %299 = cast(%var_7779, dtype="bool") /* ty=bool */;
    %300 = cast(%298, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
    %301 = greater(%299, %300) /* ty=Tensor[(13, 1, 9), bool] */;
    %302 = cast(%301, dtype="bool") /* ty=Tensor[(13, 1, 9), bool] */;
    %303 = cast(%var_7800, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
    %304 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 11, 9), bool] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
    %305 = shape_of(%var_7800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%var_7800, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %308 = %295.2;
    %309 = logical_and(%302, %303) /* ty=Tensor[(13, 11, 9), bool] */;
    %310 = power(%306, %307) /* ty=Tensor[(13, 11, 9), float64] */;
    (%308, %309, %310)
  };
  %311(%var_7846, %var_7847, %var_7848) /* ty=(Tensor[(20), float32], Tensor[(13, 11, 9), bool], Tensor[(13, 11, 9), float64]) */
}

def @func_2029() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) {
  %322 = fn () -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) {
    %312 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    %313 = cast(%312, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %314 = cast(meta[relay.Constant][20] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %315 = cast(meta[relay.Constant][20] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %316 = reshape(%314, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %317 = reshape(%315, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %318 = @func_146(%316, %317) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %319 = atanh(%313) /* ty=Tensor[(13, 13, 13), float32] */;
    %320 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
    %321 = %318.1;
    (%319, %320, %321, meta[relay.Constant][20] /* ty=Tensor[(80), float32] */)
  };
  %322() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */
}

def @func_3575() -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) {
  %329 = fn () -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) {
    %323 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    %324 = cast(%323, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %325 = reshape(%324, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
    %326 = @func_3223(%325) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
    %327 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
    %328 = %326.0;
    (%327, %323, %328)
  };
  %329() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */
}

def @func_12280() -> (Tensor[(3, 16, 2), uint8],) {
  %332 = fn () -> (Tensor[(3, 16, 2), uint8],) {
    %330 = @func_9451() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(3, 16, 2), uint8]) */;
    %331 = %330.1;
    (%331,)
  };
  %332() /* ty=(Tensor[(3, 16, 2), uint8],) */
}

def @func_2910(%var_2909: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) {
  %340 = fn (%var_2895: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) {
    %333 = cast(%var_2895, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
    %334 = cast(meta[relay.Constant][21] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %335 = reshape(%333, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %336 = reshape(%334, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
    %337 = @func_2101(%335, %336) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
    %338 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    %339 = %337.2;
    (%338, %339, %var_2895, meta[relay.Constant][21] /* ty=Tensor[(180), float64] */)
  };
  %340(%var_2909) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) */
}

def @func_2939() -> (Tensor[(5, 8, 2), float64],) {
  %341 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %342 = %341.0;
  (%342,)
}

def @func_8603() -> (Tensor[(13, 13, 13), float64],) {
  %343 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %344 = %343.0;
  (%344,)
}

def @func_12326() -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
  %345 = @func_9749() /* ty=(Tensor[(5, 14, 2), float64],) */;
  %346 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
  %347 = %345.0;
  %348 = @func_11454() /* ty=Tensor[(13, 13, 13), uint8] */;
  %349 = %346.1;
  (%347, %348, %349)
}

def @func_11697() -> Tensor[(5, 14, 2), float64] {
  %350 = fn () -> Tensor[(5, 14, 2), float64] {
    @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
  };
  %350() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_1665(%var_1663: Tensor[(7, 8, 12), float32]) -> (Tensor[(7, 8, 12), float32],) {
  @func_1662(%var_1663) /* ty=(Tensor[(7, 8, 12), float32],) */
}

def @func_10799(%var_10796: Tensor[(1, 1215), float64], %var_10797: Tensor[(20), float32], %var_10798: Tensor[(5, 10, 8), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(1, 1215), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), uint64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
  @func_10794(%var_10796, %var_10797, %var_10798) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(1, 1215), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), uint64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) */
}

def @func_3063() -> (Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) {
  %355 = fn () -> (Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) {
    %351 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
    %352 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
    %353 = %351.0;
    %354 = %352.0;
    (%353, %354)
  };
  %355() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */
}

def @func_13215() -> (Tensor[(13, 13, 13), float64],) {
  %356 = @func_13171() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %357 = %356.0;
  (%357,)
}

def @func_2800(%var_2787: float64, %var_2788: Tensor[(14, 1, 5), float64]) -> (Tensor[(14, 1, 5), float64],) {
  %358 = cast(%var_2787, dtype="float64") /* ty=float64 */;
  %359 = cast(%var_2788, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %360 = mod(%358, %359) /* ty=Tensor[(14, 1, 5), float64] */;
  (%360,)
}

def @func_146(%var_76: Tensor[(5, 8, 2), float32], %var_142: Tensor[(5, 8, 2), float32]) -> (Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
  %361 = cast(%var_76, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %362 = cast(%var_76, dtype="float64") /* ty=Tensor[(5, 8, 2), float64] */;
  %363 = cast(%var_142, dtype="uint64") /* ty=Tensor[(5, 8, 2), uint64] */;
  %364 = shape_of(%var_76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_76, dtype="uint64") /* ty=Tensor[(5, 8, 2), uint64] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %367 = sin(%361) /* ty=Tensor[(5, 8, 2), float32] */;
  %368 = atan(%362) /* ty=Tensor[(5, 8, 2), float64] */;
  %369 = bitwise_or(%365, %366) /* ty=Tensor[(5, 8, 2), uint64] */;
  (%367, %368, %369)
}

def @func_659(%var_648: Tensor[(1, 2, 15), float64]) -> Tensor[(1, 2, 15), float64] {
  %370 = cast(%var_648, dtype="float64") /* ty=Tensor[(1, 2, 15), float64] */;
  exp(%370) /* ty=Tensor[(1, 2, 15), float64] */
}

def @func_4681() -> (Tensor[(13, 13, 13), float64],) {
  %371 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %372 = %371.0;
  (%372,)
}

def @func_1904() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %378 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
    %373 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
    %374 = cast(%373, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
    %375 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
    %376 = cos(%374) /* ty=Tensor[(13, 13, 13), float64] */;
    %377 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
    (%375, %376, %377)
  };
  %378() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_4618(%var_4617: Tensor[(2288), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) {
  %397 = fn (%var_4600: Tensor[(2288), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) {
    %379 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %380 = %379.0;
    %381 = cast(%380, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %382 = log10(%381) /* ty=Tensor[(13, 13, 13), float32] */;
    %383 = cast(%382, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %384 = reshape(%383, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
    %385 = cast(%var_4600, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %386 = cast(%var_4600, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %387 = reshape(%385, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float32] */;
    %388 = reshape(%386, newshape=[11, 13, 16]) /* ty=Tensor[(11, 13, 16), float32] */;
    %389 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %390 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
    %391 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %392 = @func_4202(%384) /* ty=Tensor[(13, 13, 13), bool] */;
    %393 = @func_3634(%387, %388) /* ty=Tensor[(11, 13, 16), float32] */;
    %394 = %389.1;
    %395 = %390.3;
    %396 = %391.0;
    (%382, %392, %393, %var_4600, %394, %395, %396)
  };
  %397(%var_4617) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), bool], Tensor[(11, 13, 16), float32], Tensor[(2288), float32], Tensor[(180), float64], Tensor[(80), float32], Tensor[(13, 13, 13), float32]) */
}

def @func_6695(%var_6694: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) {
  %411 = fn (%var_6664: Tensor[(20, 1), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) {
    %398 = @func_3574() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8]) */;
    %399 = cast(%var_6664, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
    %400 = reshape(%399, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %401 = @func_6447(%400) /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) */;
    %402 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
    %403 = cast(%var_6664, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
    %404 = cast(meta[relay.Constant][22] /* ty=Tensor[(20, 5), float32] */, dtype="float32") /* ty=Tensor[(20, 5), float32] */;
    %405 = power(%403, %404) /* ty=Tensor[(20, 5), float32] */;
    %406 = cast(%405, dtype="float64") /* ty=Tensor[(20, 5), float64] */;
    %407 = %398.1;
    %408 = %401.1;
    %409 = %402.5;
    %410 = tan(%406) /* ty=Tensor[(20, 5), float64] */;
    (%407, %408, %409, %410)
  };
  %411(%var_6694) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(20, 5), float64]) */
}

def @func_5062(%var_5038: Tensor[(9, 9, 15), float64]) -> (Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) {
  %412 = cast(%var_5038, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %413 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %414 = @func_3245() /* ty=(Tensor[(180), float64],) */;
  %415 = sqrt(%412) /* ty=Tensor[(9, 9, 15), float64] */;
  %416 = %413.0;
  %417 = %414.0;
  (%415, %416, %417)
}

def @func_7530(%var_7492: Tensor[(20), float32], %var_7523: Tensor[(6, 30), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(180, 1), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(132, 1), float64], float64, Tensor[(70), float64], Tensor[(6, 30), float32]) {
  %418 = @func_2028() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(80), float32]) */;
  %419 = cast(%var_7492, dtype="float32") /* ty=Tensor[(20), float32] */;
  %420 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %421 = reshape(%419, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %422 = reshape(%420, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %423 = @func_2101(%421, %422) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */;
  %424 = cast(meta[relay.Constant][24] /* ty=Tensor[(132, 1), float64] */, dtype="float64") /* ty=Tensor[(132, 1), float64] */;
  %425 = cast(-4.91148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %426 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %427 = reshape(%424, newshape=[11, 3, 4]) /* ty=Tensor[(11, 3, 4), float64] */;
  %428 = reshape(%425, newshape=[]) /* ty=float64 */;
  %429 = reshape(%426, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %430 = @func_3370(%427, %428, %429) /* ty=(Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) */;
  %431 = cast(%var_7523, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %432 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(6, 30), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %433 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 30), float64] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %435 = %418.2;
  %436 = %423.3;
  %437 = %430.4;
  %438 = power(%433, %434) /* ty=Tensor[(6, 30), float32] */;
  (%435, %436, %var_7492, %437, meta[relay.Constant][24] /* ty=Tensor[(132, 1), float64] */, -4.91148f64 /* ty=float64 */, meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, %438)
}

def @func_1604(%var_1593: Tensor[(20), float32], %var_1596: Tensor[(6, 30), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) {
  %439 = cast(%var_1593, dtype="float32") /* ty=Tensor[(20), float32] */;
  %440 = reshape(%439, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %441 = cast(%var_1596, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %442 = reshape(%441, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
  %443 = @func_1011(%442) /* ty=(Tensor[(6, 2, 15), float64],) */;
  %444 = cast(%var_1596, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %445 = reshape(%444, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), float64] */;
  %446 = @func_1011(%445) /* ty=(Tensor[(6, 2, 15), float64],) */;
  %447 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %448 = @func_519(%440) /* ty=Tensor[(4, 1, 5), float32] */;
  %449 = %443.0;
  %450 = %446.0;
  (%447, %448, %var_1593, %449, %var_1596, %450)
}

def @func_12010() -> (Tensor[(13, 13, 13), float64],) {
  %451 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %452 = %451.1;
  (%452,)
}

def @func_10872() -> (Tensor[(20), float32], Tensor[(14, 12, 15), int8], Tensor[(2520), float64]) {
  %453 = @func_10700() /* ty=(Tensor[(20), float32],) */;
  %454 = cast(meta[relay.Constant][26] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %455 = reshape(%454, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float64] */;
  %456 = %453.0;
  %457 = @func_170(%455) /* ty=Tensor[(14, 12, 15), int8] */;
  (%456, %457, meta[relay.Constant][26] /* ty=Tensor[(2520), float64] */)
}

def @func_2848() -> (Tensor[(13, 13, 13), float64],) {
  %458 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %459 = %458.1;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %461 = exp(%460) /* ty=Tensor[(13, 13, 13), float64] */;
  (%461,)
}

def @func_5444() -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_5485() -> Tensor[(13, 13, 13), bool] {
  %463 = fn () -> Tensor[(13, 13, 13), bool] {
    %462 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
    %462.0
  };
  %463() /* ty=Tensor[(13, 13, 13), bool] */
}

def @func_8605() -> (Tensor[(13, 13, 13), float64],) {
  @func_8603() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_172(%var_171: Tensor[(14, 12, 15), float64]) -> Tensor[(14, 12, 15), int8] {
  %470 = fn (%var_160: Tensor[(14, 12, 15), float64]) -> Tensor[(14, 12, 15), int8] {
    %464 = cast(%var_160, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %465 = sinh(%464) /* ty=Tensor[(14, 12, 15), float64] */;
    %466 = cast(%var_160, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
    %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%465, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%468, %469) /* ty=Tensor[(14, 12, 15), int8] */
  };
  %470(%var_171) /* ty=Tensor[(14, 12, 15), int8] */
}

def @func_2993(%var_2990: float64, %var_2991: Tensor[(70), float64]) -> (Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %471 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
  %472 = cast(%var_2990, dtype="float64") /* ty=float64 */;
  %473 = cast(%var_2991, dtype="float64") /* ty=Tensor[(70), float64] */;
  %474 = reshape(%472, newshape=[]) /* ty=float64 */;
  %475 = reshape(%473, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %476 = @func_2800(%474, %475) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %477 = %471.0;
  %478 = %476.0;
  (%477, %478, %var_2990, %var_2991)
}

def @func_3020() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) {
  %479 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %480 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %481 = %479.0;
  (%480, %481)
}

def @func_3374(%var_3371: Tensor[(11, 3, 4), float64], %var_3372: float64, %var_3373: Tensor[(70), float64]) -> (Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) {
  %505 = fn (%var_3281: Tensor[(11, 3, 4), float64], %var_3294: float64, %var_3295: Tensor[(70), float64]) -> (Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) {
    %482 = cast(%var_3281, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
    %483 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %484 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
    %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %486 = multiply(%484, %485) /* ty=Tensor[(11, 3, 4), float64] */;
    %487 = cast(%486, dtype="int64") /* ty=Tensor[(11, 3, 4), int64] */;
    %488 = shape_of(%var_3281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %489 = cast(%var_3281, dtype="int64") /* ty=Tensor[(11, 3, 4), int64] */;
    %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %491 = cast(%var_3294, dtype="float64") /* ty=float64 */;
    %492 = cast(%var_3295, dtype="float64") /* ty=Tensor[(70), float64] */;
    %493 = reshape(%491, newshape=[]) /* ty=float64 */;
    %494 = reshape(%492, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
    %495 = @func_2800(%493, %494) /* ty=(Tensor[(14, 1, 5), float64],) */;
    %496 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %497 = cast(%486, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
    %498 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 4), float64] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %501 = minimum(%489, %490) /* ty=Tensor[(11, 3, 4), int64] */;
    %502 = %495.0;
    %503 = %496.1;
    %504 = mod(%499, %500) /* ty=Tensor[(11, 3, 4), float64] */;
    (%501, %502, %var_3294, %var_3295, %503, %504)
  };
  %505(%var_3371, %var_3372, %var_3373) /* ty=(Tensor[(11, 3, 4), int64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(11, 3, 4), float64]) */
}

def @func_2941() -> (Tensor[(5, 8, 2), float64],) {
  @func_2939() /* ty=(Tensor[(5, 8, 2), float64],) */
}

def @func_12233(%var_12173: Tensor[(48), float64]) -> (Tensor[(8, 6, 8), float64], Tensor[(48), float64], Tensor[(384), float64], Tensor[(180), float64], Tensor[(?, 8, 2), bool], Tensor[(13, 13, 13), float32], Tensor[(10, 2), float32], Tensor[(?, 8, 2), int8], Tensor[(?, 8, 2), float64]) {
  %506 = cast(%var_12173, dtype="float64") /* ty=Tensor[(48), float64] */;
  %507 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %508 = reshape(%506, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), float64] */;
  %509 = reshape(%507, newshape=[8, 6, 8]) /* ty=Tensor[(8, 6, 8), float64] */;
  %510 = @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */;
  %511 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %512 = acosh(%511) /* ty=Tensor[(1, 8, 2), float32] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %514 = asin(%513) /* ty=Tensor[(1, 8, 2), float32] */;
  %515 = cast(%512, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %519 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %520 = reshape(%519, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %521 = @func_2908(%520) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) */;
  %522 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %523 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%512, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %526 = floor_divide(%524, %525) /* ty=Tensor[(?, 8, 2), float32] */;
  %527 = cast(%526, dtype="int8") /* ty=Tensor[(?, 8, 2), int8] */;
  %528 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%514, dtype="int8") /* ty=Tensor[(1, 8, 2), int8] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %531 = cast(%514, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %532 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %535 = minimum(%533, %534) /* ty=Tensor[(?, 8, 2), float32] */;
  %536 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 2), float32] */, dtype="float64") /* ty=Tensor[(1, 8, 2), float64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="float64") /* ty=Tensor[(?, 8, 2), float64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %540 = @func_4700(%508, %509) /* ty=Tensor[(8, 6, 8), float64] */;
  %541 = %510.1;
  %542 = less_equal(%517, %518) /* ty=Tensor[(?, 8, 2), bool] */;
  %543 = %521.0;
  %544 = left_shift(%529, %530) /* ty=Tensor[(?, 8, 2), int8] */;
  %545 = divide(%538, %539) /* ty=Tensor[(?, 8, 2), float64] */;
  (%540, %var_12173, meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, %541, %542, %543, meta[relay.Constant][30] /* ty=Tensor[(10, 2), float32] */, %544, %545)
}

def @func_6403() -> (Tensor[(5, 8, 2), uint64],) {
  @func_6401() /* ty=(Tensor[(5, 8, 2), uint64],) */
}

def @func_12328() -> (Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
  @func_12326() /* ty=(Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */
}

def @func_5830() -> (Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %546 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %547 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %548 = %546.2;
  %549 = %547.1;
  (%548, %549)
}

def @func_2804(%var_2802: float64, %var_2803: Tensor[(14, 1, 5), float64]) -> (Tensor[(14, 1, 5), float64],) {
  @func_2800(%var_2802, %var_2803) /* ty=(Tensor[(14, 1, 5), float64],) */
}

def @func_4433(%var_4410: Tensor[(10, 7, 7), float32], %var_4411: Tensor[(10, 7, 7), float32]) -> (Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) {
  %550 = cast(%var_4411, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %551 = shape_of(%var_4410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_4410, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %554 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %555 = cast(meta[relay.Constant][31] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %556 = reshape(%555, newshape=[3, 16, 2]) /* ty=Tensor[(3, 16, 2), uint8] */;
  %557 = floor_divide(%552, %553) /* ty=Tensor[(10, 7, 7), float32] */;
  %558 = %554.0;
  %559 = @func_4295(%556) /* ty=Tensor[(3, 16, 2), uint8] */;
  (%557, %558, %559, meta[relay.Constant][31] /* ty=Tensor[(96), uint8] */)
}

def @func_6450(%var_6448: Tensor[(20), float32]) -> (Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) {
  @func_6447(%var_6448) /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) */
}

def @func_9961(%var_9960: float64) -> (Tensor[(400), float32], Tensor[(1215), float64], Tensor[(70), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(10, 3), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(5, 8, 2), float64]) {
  %578 = fn (%var_9861: float64) -> (Tensor[(400), float32], Tensor[(1215), float64], Tensor[(70), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(10, 3), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(5, 8, 2), float64]) {
    %560 = @func_8833() /* ty=(Tensor[(400), float32], Tensor[(13, 13, 13), float64]) */;
    %561 = @func_9078() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) */;
    %562 = cast(%var_9861, dtype="float64") /* ty=float64 */;
    %563 = cast(meta[relay.Constant][32] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %564 = reshape(%562, newshape=[]) /* ty=float64 */;
    %565 = reshape(%563, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %566 = @func_2993(%564, %565) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %567 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
    %568 = reshape(%567, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
    %569 = @func_9749() /* ty=(Tensor[(5, 14, 2), float64],) */;
    %570 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
    %571 = %560.0;
    %572 = %561.2;
    %573 = %566.3;
    %574 = @func_659(%568) /* ty=Tensor[(1, 2, 15), float64] */;
    %575 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
    %576 = %569.0;
    %577 = %570.0;
    (%571, %572, %573, %var_9861, meta[relay.Constant][32] /* ty=Tensor[(70), float64] */, %574, meta[relay.Constant][33] /* ty=Tensor[(10, 3), float64] */, %575, %576, %577)
  };
  %578(%var_9960) /* ty=(Tensor[(400), float32], Tensor[(1215), float64], Tensor[(70), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(10, 3), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(5, 8, 2), float64]) */
}

def @func_5782() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) {
  @func_5780() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(1215), float64]) */
}

def @func_12926() -> (Tensor[(13, 13, 13), float32],) {
  %579 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %580 = %579.0;
  (%580,)
}

def @func_13087(%var_13085: Tensor[(5, 8, 3), float32], %var_13086: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 3), float32], Tensor[(180, 1), float64], Tensor[(20, 1), float32], Tensor[(180), float64]) {
  @func_13083(%var_13085, %var_13086) /* ty=(Tensor[(5, 8, 3), float32], Tensor[(180, 1), float64], Tensor[(20, 1), float32], Tensor[(180), float64]) */
}

def @func_4354() -> (Tensor[(13, 13, 13), float64],) {
  %581 = @func_4338() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */;
  %582 = %581.0;
  (%582,)
}

def @func_9079() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) {
  %589 = fn () -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) {
    %583 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %584 = cast(meta[relay.Constant][34] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %585 = reshape(%584, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
    %586 = @func_5062(%585) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
    %587 = %583.0;
    %588 = %586.1;
    (%587, %588, meta[relay.Constant][34] /* ty=Tensor[(1215), float64] */)
  };
  %589() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(1215), float64]) */
}

def @func_10272() -> (Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) {
  %590 = cast(meta[relay.Constant][35] /* ty=Tensor[(480), uint64] */, dtype="uint64") /* ty=Tensor[(480), uint64] */;
  %591 = cast(meta[relay.Constant][35] /* ty=Tensor[(480), uint64] */, dtype="uint64") /* ty=Tensor[(480), uint64] */;
  %592 = reshape(%590, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), uint64] */;
  %593 = reshape(%591, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), uint64] */;
  %594 = @func_5545(%592, %593) /* ty=(Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) */;
  %595 = @func_5484() /* ty=Tensor[(13, 13, 13), bool] */;
  %596 = %594.0;
  (%595, %596, meta[relay.Constant][35] /* ty=Tensor[(480), uint64] */)
}

def @func_11962(%var_11944: Tensor[(7, 10), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(7, 10), float64]) {
  %597 = @func_7004() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) */;
  %598 = cast(6.97595f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %599 = cast(%var_11944, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
  %600 = reshape(%598, newshape=[]) /* ty=float64 */;
  %601 = reshape(%599, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %602 = @func_2993(%600, %601) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %603 = %597.0;
  %604 = %602.1;
  (%603, %604, 6.97595f64 /* ty=float64 */, %var_11944)
}

def @func_9691(%var_9690: Tensor[(12, 7, 4), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32]) {
  %611 = fn (%var_9671: Tensor[(12, 7, 4), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32]) {
    %605 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
    %606 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
    %607 = cast(%var_9671, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
    %608 = acosh(%605) /* ty=Tensor[(12, 7, 4), float32] */;
    %609 = log2(%606) /* ty=Tensor[(12, 7, 4), float32] */;
    %610 = tan(%607) /* ty=Tensor[(12, 7, 4), float32] */;
    (%608, %609, %610)
  };
  %611(%var_9690) /* ty=(Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32], Tensor[(12, 7, 4), float32]) */
}

def @func_4683() -> (Tensor[(13, 13, 13), float64],) {
  @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_4922(%var_4913: float64, %var_4914: Tensor[(70), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %612 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %613 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %614 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %615 = cast(%var_4913, dtype="float64") /* ty=float64 */;
  %616 = cast(%var_4914, dtype="float64") /* ty=Tensor[(70), float64] */;
  %617 = reshape(%615, newshape=[]) /* ty=float64 */;
  %618 = reshape(%616, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %619 = @func_2800(%617, %618) /* ty=(Tensor[(14, 1, 5), float64],) */;
  %620 = %612.0;
  %621 = %613.0;
  %622 = %614.0;
  %623 = %619.0;
  (%620, %621, %622, %623, %var_4913, %var_4914)
}

def @func_8275() -> (Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
  @func_8273() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) */
}

def @func_2680() -> (Tensor[(5, 8, 2), float64],) {
  %624 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %625 = %624.0;
  (%625,)
}

def @func_4000(%var_3995: Tensor[(3, 11, 7), float32], %var_3996: float64, %var_3997: Tensor[(30), float64], %var_3998: Tensor[(80), float32], %var_3999: Tensor[(3, 11, 7), float32]) -> (Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) {
  %656 = fn (%var_3930: Tensor[(3, 11, 7), float32], %var_3940: float64, %var_3953: Tensor[(30), float64], %var_3969: Tensor[(80), float32], %var_3976: Tensor[(3, 11, 7), float32]) -> (Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) {
    %626 = cast(%var_3940, dtype="float64") /* ty=float64 */;
    %627 = cast(meta[relay.Constant][36] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %628 = reshape(%626, newshape=[]) /* ty=float64 */;
    %629 = reshape(%627, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %630 = @func_2993(%628, %629) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %631 = cast(%var_3953, dtype="float64") /* ty=Tensor[(30), float64] */;
    %632 = reshape(%631, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
    %633 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
    %634 = reshape(%633, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
    %635 = @func_3507(%634) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
    %636 = cast(%var_3969, dtype="float32") /* ty=Tensor[(80), float32] */;
    %637 = cast(%var_3969, dtype="float32") /* ty=Tensor[(80), float32] */;
    %638 = reshape(%636, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %639 = reshape(%637, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %640 = @func_146(%638, %639) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %641 = cast(%var_3930, dtype="float32") /* ty=Tensor[(3, 11, 7), float32] */;
    %642 = log2(%641) /* ty=Tensor[(3, 11, 7), float32] */;
    %643 = cast(%var_3976, dtype="uint32") /* ty=Tensor[(3, 11, 7), uint32] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%642, dtype="uint32") /* ty=Tensor[(3, 11, 7), uint32] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %647 = bitwise_or(%645, %646) /* ty=Tensor[(3, 11, 7), uint32] */;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
    %649 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %650 = %630.1;
    %651 = @func_659(%632) /* ty=Tensor[(1, 2, 15), float64] */;
    %652 = %635.2;
    %653 = %640.0;
    %654 = sinh(%648) /* ty=Tensor[(3, 11, 7), float64] */;
    %655 = %649.0;
    (%650, %var_3940, meta[relay.Constant][36] /* ty=Tensor[(70), float64] */, %651, %var_3953, %652, meta[relay.Constant][37] /* ty=Tensor[(6, 30), float64] */, %653, %var_3969, %654, %655)
  };
  %656(%var_3995, %var_3996, %var_3997, %var_3998, %var_3999) /* ty=(Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_9261() -> (Tensor[(13, 13, 13), float64],) {
  %659 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %657 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %658 = %657.0;
    (%658,)
  };
  %659() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_10245(%var_10244: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), bool], Tensor[(13, 13, 13), float32], Tensor[(20), float32]) {
  %669 = fn (%var_10207: Tensor[(16, 13, 11), float32]) -> (Tensor[(16, 13, 11), bool], Tensor[(13, 13, 13), float32], Tensor[(20), float32]) {
    %660 = cast(%var_10207, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %661 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(16, 13, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 13, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %664 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %665 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %666 = equal(%662, %663) /* ty=Tensor[(16, 13, 11), bool] */;
    %667 = %664.0;
    %668 = %665.2;
    (%666, %667, %668)
  };
  %669(%var_10244) /* ty=(Tensor[(16, 13, 11), bool], Tensor[(13, 13, 13), float32], Tensor[(20), float32]) */
}

def @func_11965(%var_11963: Tensor[(7, 10), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(7, 10), float64]) {
  @func_11962(%var_11963) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(7, 10), float64]) */
}

def @func_4295(%var_4274: Tensor[(3, 16, 2), uint8]) -> Tensor[(3, 16, 2), uint8] {
  %670 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 16, 2), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
  %671 = shape_of(%var_4274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_4274, dtype="uint8") /* ty=Tensor[(3, 16, 2), uint8] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%672, %673) /* ty=Tensor[(3, 16, 2), uint8] */
}

def @func_3259() -> (Tensor[(13, 13, 13), float64],) {
  @func_3257() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_8782() -> Tensor[(5, 14, 2), float64] {
  %674 = fn () -> Tensor[(5, 14, 2), float64] {
    @func_3522() /* ty=Tensor[(5, 14, 2), float64] */
  };
  %674() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_6394() -> Tensor[(13, 13, 13), float64] {
  @func_1816() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_5880() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) {
  @func_5878() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) */
}

def @func_12148() -> (Tensor[(13, 13, 13), bool],) {
  %677 = fn () -> (Tensor[(13, 13, 13), bool],) {
    %675 = @func_2526() /* ty=(Tensor[(13, 13, 13), bool],) */;
    %676 = %675.0;
    (%676,)
  };
  %677() /* ty=(Tensor[(13, 13, 13), bool],) */
}

def @func_4039() -> Tensor[(180), float64] {
  @func_4037() /* ty=Tensor[(180), float64] */
}

def @func_6063(%var_6061: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) {
  %678 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %679 = cast(%var_6061, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %680 = reshape(%679, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %681 = %678.0;
  %682 = @func_519(%680) /* ty=Tensor[(4, 1, 5), float32] */;
  (%681, %682, %var_6061)
}

def @func_6753() -> (Tensor[(180), float64], Tensor[(5, 8, 2), float64]) {
  %683 = @func_6084() /* ty=Tensor[(180), float64] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(180), float64] */;
  %685 = reshape(%684, newshape=[30, 6]) /* ty=Tensor[(30, 6), float64] */;
  %686 = @func_3507(%685) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(6, 2, 15), float64], Tensor[(30, 6), float32]) */;
  %687 = %686.0;
  (%683, %687)
}

def @func_8157() -> (Tensor[(13, 13, 13), float64],) {
  @func_8155() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_11040(%var_11039: Tensor[(400), float64]) -> (Tensor[(20), float32], Tensor[(16, 5, 5), float64], Tensor[(400), float64]) {
  %694 = fn (%var_11032: Tensor[(400), float64]) -> (Tensor[(20), float32], Tensor[(16, 5, 5), float64], Tensor[(400), float64]) {
    %688 = @func_10700() /* ty=(Tensor[(20), float32],) */;
    %689 = cast(%var_11032, dtype="float64") /* ty=Tensor[(400), float64] */;
    %690 = reshape(%689, newshape=[16, 5, 5]) /* ty=Tensor[(16, 5, 5), float64] */;
    %691 = @func_10342(%690) /* ty=(Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) */;
    %692 = %688.0;
    %693 = %691.0;
    (%692, %693, %var_11032)
  };
  %694(%var_11039) /* ty=(Tensor[(20), float32], Tensor[(16, 5, 5), float64], Tensor[(400), float64]) */
}

def @func_3523() -> Tensor[(5, 14, 2), float64] {
  %695 = fn () -> Tensor[(5, 14, 2), float64] {
    @func_3410() /* ty=Tensor[(5, 14, 2), float64] */
  };
  %695() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_6066(%var_6064: Tensor[(20, 1), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) {
  @func_6063(%var_6064) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) */
}

def @func_3912(%var_3911: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) {
  %706 = fn (%var_3897: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) {
    %696 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %697 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %698 = cast(%var_3897, dtype="float32") /* ty=Tensor[(80), float32] */;
    %699 = cast(%var_3897, dtype="float32") /* ty=Tensor[(80), float32] */;
    %700 = reshape(%698, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %701 = reshape(%699, newshape=[5, 8, 2]) /* ty=Tensor[(5, 8, 2), float32] */;
    %702 = @func_146(%700, %701) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %703 = %696.3;
    %704 = %697.0;
    %705 = %702.2;
    (%703, %704, %705, %var_3897)
  };
  %706(%var_3911) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) */
}

def @func_5956(%var_5954: Tensor[(5, 10, 8), float32]) -> (Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) {
  @func_5953(%var_5954) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */
}

def @func_6447(%var_6443: Tensor[(20), float32]) -> (Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(20), float32]) {
  %707 = @func_6188() /* ty=(Tensor[(180), float64],) */;
  %708 = %707.0;
  %709 = cast(%708, dtype="float64") /* ty=Tensor[(180), float64] */;
  %710 = reshape(%709, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %711 = @func_5339(%710) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) */;
  %712 = cast(%var_6443, dtype="float32") /* ty=Tensor[(20), float32] */;
  %713 = reshape(%712, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %714 = @func_2262(%713) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
  %715 = %711.0;
  %716 = %714.3;
  (%708, %715, %716, %var_6443)
}

def @func_6803() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) {
  @func_6801() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) */
}

def @func_2366() -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) {
  %717 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %718 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %719 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %720 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  %721 = cast(%720, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %722 = asin(%721) /* ty=Tensor[(13, 13, 13), float32] */;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %724 = %717.1;
  %725 = %718.0;
  %726 = %719.1;
  %727 = sin(%723) /* ty=Tensor[(13, 13, 13), float32] */;
  (%724, %725, %726, %727)
}

def @func_1953() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %728 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %729 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %730 = %728.1;
  %731 = %729.0;
  (%730, %731)
}

def @func_10526(%var_10524: Tensor[(1215), float64], %var_10525: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) {
  %742 = fn (%var_10514: Tensor[(1215), float64], %var_10517: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) {
    %732 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %733 = cast(%var_10514, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %734 = reshape(%733, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
    %735 = @func_5062(%734) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
    %736 = cast(%var_10517, dtype="float32") /* ty=Tensor[(20), float32] */;
    %737 = reshape(%736, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
    %738 = @func_9366(%737) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) */;
    %739 = %732.0;
    %740 = %735.0;
    %741 = %738.2;
    (%739, %740, %var_10514, %741, %var_10517)
  };
  %742(%var_10524, %var_10525) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) */
}

def @func_13487() -> (Tensor[(80), float32],) {
  @func_13485() /* ty=(Tensor[(80), float32],) */
}

def @func_11632() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
  %747 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
    %743 = @func_9126() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */;
    %744 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
    %745 = %743.0;
    %746 = %744.0;
    (%745, %746)
  };
  %747() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) */
}

def @func_12744() -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
  %750 = fn () -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
    %748 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
    %749 = @func_12086() /* ty=Tensor[(13, 13, 13), float64] */;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_2179() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  %751 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %752 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
  %753 = %751.2;
  (%752, %753)
}

def @func_10274() -> (Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) {
  @func_10272() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) */
}

def @func_4339() -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) {
  %759 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) {
    %754 = cast(meta[relay.Constant][40] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
    %755 = reshape(%754, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), float32] */;
    %756 = @func_1428(%755) /* ty=(Tensor[(3, 16, 12), float32],) */;
    %757 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
    %758 = %756.0;
    (%757, %758, meta[relay.Constant][40] /* ty=Tensor[(576), float32] */)
  };
  %759() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 12), float32], Tensor[(576), float32]) */
}

def @func_10932() -> Tensor[(5, 8, 2), float64] {
  @func_10930() /* ty=Tensor[(5, 8, 2), float64] */
}

def @func_6189() -> (Tensor[(180), float64],) {
  %761 = fn () -> (Tensor[(180), float64],) {
    %760 = @func_4037() /* ty=Tensor[(180), float64] */;
    (%760,)
  };
  %761() /* ty=(Tensor[(180), float64],) */
}

def @func_11722() -> Tensor[(5, 8, 2), uint64] {
  %763 = fn () -> Tensor[(5, 8, 2), uint64] {
    %762 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
    %762.1
  };
  %763() /* ty=Tensor[(5, 8, 2), uint64] */
}

def @func_7681() -> (Tensor[(5, 8, 2), uint64],) {
  @func_7679() /* ty=(Tensor[(5, 8, 2), uint64],) */
}

def @func_3871() -> (Tensor[(13, 13, 13), float64],) {
  %766 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %764 = @func_3020() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64]) */;
    %765 = %764.0;
    (%765,)
  };
  %766() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_10428(%var_10427: Tensor[(70), float64]) -> (Tensor[(14, ?, 5), bool], Tensor[(4, 8, 15), uint16]) {
  %783 = fn (%var_10381: Tensor[(70), float64]) -> (Tensor[(14, ?, 5), bool], Tensor[(4, 8, 15), uint16]) {
    %767 = cast(7.43528f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %768 = cast(%var_10381, dtype="float64") /* ty=Tensor[(70), float64] */;
    %769 = reshape(%767, newshape=[]) /* ty=float64 */;
    %770 = reshape(%768, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %771 = @func_2993(%769, %770) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %772 = %771.1;
    %773 = cast(%var_10381, dtype="bool") /* ty=Tensor[(70), bool] */;
    %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %775 = cast(%772, dtype="bool") /* ty=Tensor[(14, 1, 5), bool] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %777 = @func_10272() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(4, 8, 15), uint64], Tensor[(480), uint64]) */;
    %778 = %777.1;
    %779 = cast(7.43528f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
    %780 = cast(%778, dtype="uint16") /* ty=Tensor[(4, 8, 15), uint16] */;
    %781 = logical_and(%775, %776) /* ty=Tensor[(14, ?, 5), bool] */;
    %782 = left_shift(%779, %780) /* ty=Tensor[(4, 8, 15), uint16] */;
    (%781, %782)
  };
  %783(%var_10427) /* ty=(Tensor[(14, ?, 5), bool], Tensor[(4, 8, 15), uint16]) */
}

def @func_10954() -> (Tensor[(13, 13, 13), uint8],) {
  %785 = fn () -> (Tensor[(13, 13, 13), uint8],) {
    %784 = @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */;
    (%784,)
  };
  %785() /* ty=(Tensor[(13, 13, 13), uint8],) */
}

def @func_10874() -> (Tensor[(20), float32], Tensor[(14, 12, 15), int8], Tensor[(2520), float64]) {
  @func_10872() /* ty=(Tensor[(20), float32], Tensor[(14, 12, 15), int8], Tensor[(2520), float64]) */
}

def @func_2726() -> Tensor[(13, 13, 13), float32] {
  %786 = fn () -> Tensor[(13, 13, 13), float32] {
    @func_2403() /* ty=Tensor[(13, 13, 13), float32] */
  };
  %786() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_11175() -> Tensor[(13, 13, 13), float64] {
  @func_11173() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_2262(%var_2234: Tensor[(20), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) {
  %787 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %788 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %789 = cast(%var_2234, dtype="float32") /* ty=Tensor[(20), float32] */;
  %790 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %791 = reshape(%789, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %792 = reshape(%790, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
  %793 = @func_1604(%791, %792) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
  %794 = %787.1;
  %795 = %788.0;
  %796 = %793.1;
  (%794, %795, %796, %var_2234, meta[relay.Constant][41] /* ty=Tensor[(180), float64] */)
}

def @func_11173() -> Tensor[(13, 13, 13), float64] {
  %797 = @func_8603() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %797.0
}

def @func_11375(%var_11356: Tensor[(231), float32], %var_11357: float64, %var_11359: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(30, 6), float32], Tensor[(231), float32], float64, Tensor[(30), float64], Tensor[(80), float32], Tensor[(5, 14, 2), float64]) {
  %798 = cast(%var_11356, dtype="float32") /* ty=Tensor[(231), float32] */;
  %799 = cast(%var_11357, dtype="float64") /* ty=float64 */;
  %800 = cast(meta[relay.Constant][42] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %801 = cast(%var_11359, dtype="float32") /* ty=Tensor[(80), float32] */;
  %802 = cast(%var_11356, dtype="float32") /* ty=Tensor[(231), float32] */;
  %803 = reshape(%798, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %804 = reshape(%799, newshape=[]) /* ty=float64 */;
  %805 = reshape(%800, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %806 = reshape(%801, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %807 = reshape(%802, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
  %808 = @func_3994(%803, %804, %805, %806, %807) /* ty=(Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) */;
  %809 = @func_6394() /* ty=Tensor[(13, 13, 13), float64] */;
  %810 = %808.5;
  %811 = @func_3592() /* ty=Tensor[(5, 14, 2), float64] */;
  (%809, %810, %var_11356, %var_11357, meta[relay.Constant][42] /* ty=Tensor[(30), float64] */, %var_11359, %811)
}

def @func_5878() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) {
  %812 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %813 = cast(meta[relay.Constant][43] /* ty=Tensor[(27, 45), float64] */, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
  %814 = reshape(%813, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), float64] */;
  %815 = @func_5062(%814) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */;
  %816 = %815.0;
  %817 = cast(%816, dtype="uint64") /* ty=Tensor[(9, 9, 15), uint64] */;
  %818 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(27, 45), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %819 = cast(meta[relay.Constant][43] /* ty=Tensor[(27, 45), float64] */, dtype="uint64") /* ty=Tensor[(27, 45), uint64] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %821 = @func_1816() /* ty=Tensor[(13, 13, 13), float64] */;
  %822 = %812.0;
  %823 = multiply(%819, %820) /* ty=Tensor[(27, 45), uint64] */;
  (%821, %822, %823)
}

def @func_9241() -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float32]) {
  %824 = @func_3257() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %825 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %826 = %824.0;
  %827 = %825.2;
  %828 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
  (%826, %827, %828)
}

def @func_8895() -> (Tensor[(13, 13, 13), float32],) {
  %829 = @func_4745() /* ty=(Tensor[(13, 13, 13), float32],) */;
  %830 = %829.0;
  (%830,)
}

def @func_3638(%var_3636: Tensor[(11, 13, 16), float32], %var_3637: Tensor[(11, 13, 16), float32]) -> Tensor[(11, 13, 16), float32] {
  @func_3634(%var_3636, %var_3637) /* ty=Tensor[(11, 13, 16), float32] */
}

def @func_6478() -> Tensor[(13, 13, 13), bool] {
  @func_6476() /* ty=Tensor[(13, 13, 13), bool] */
}

def @func_12928() -> (Tensor[(13, 13, 13), float32],) {
  @func_12926() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_6429() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) {
  @func_6427() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) */
}

def @func_10651(%var_10649: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 8), int32], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  @func_10648(%var_10649) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 8), int32], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_8341(%var_8339: float64, %var_8340: Tensor[(30), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(70), float64], Tensor[(231), float32], Tensor[(30), float64]) {
  %855 = fn (%var_8320: float64, %var_8328: Tensor[(30), float64]) -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(70), float64], Tensor[(231), float32], Tensor[(30), float64]) {
    %831 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %832 = %831.3;
    %833 = cast(%832, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %834 = reshape(%833, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
    %835 = @func_3223(%834) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
    %836 = cast(%var_8320, dtype="float64") /* ty=float64 */;
    %837 = cast(meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
    %838 = reshape(%836, newshape=[]) /* ty=float64 */;
    %839 = reshape(%837, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %840 = @func_2993(%838, %839) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %841 = cast(meta[relay.Constant][45] /* ty=Tensor[(231), float32] */, dtype="float32") /* ty=Tensor[(231), float32] */;
    %842 = cast(%var_8320, dtype="float64") /* ty=float64 */;
    %843 = cast(%var_8328, dtype="float64") /* ty=Tensor[(30), float64] */;
    %844 = %835.1;
    %845 = cast(%844, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
    %846 = cast(meta[relay.Constant][45] /* ty=Tensor[(231), float32] */, dtype="float32") /* ty=Tensor[(231), float32] */;
    %847 = reshape(%841, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
    %848 = reshape(%842, newshape=[]) /* ty=float64 */;
    %849 = reshape(%843, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %850 = reshape(%845, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %851 = reshape(%846, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float32] */;
    %852 = @func_3994(%847, %848, %849, %850, %851) /* ty=(Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64], Tensor[(30, 6), float32], Tensor[(6, 30), float64], Tensor[(5, 8, 2), float32], Tensor[(80), float32], Tensor[(3, 11, 7), float64], Tensor[(13, 13, 13), float64]) */;
    %853 = %840.1;
    %854 = %852.2;
    (%832, %844, %853, %var_8320, meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, %854, meta[relay.Constant][45] /* ty=Tensor[(231), float32] */, %var_8328)
  };
  %855(%var_8339, %var_8340) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64], Tensor[(70), float64], Tensor[(231), float32], Tensor[(30), float64]) */
}

def @func_12648(%var_12646: Tensor[(13, 5, 13), uint8]) -> (Tensor[(13, 5, 13), uint8], Tensor[(13, 13, 13), uint8]) {
  @func_12645(%var_12646) /* ty=(Tensor[(13, 5, 13), uint8], Tensor[(13, 13, 13), uint8]) */
}

def @func_9127() -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) {
  %864 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) {
    %856 = @func_4354() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %857 = cast(meta[relay.Constant][46] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %858 = cast(meta[relay.Constant][46] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %859 = reshape(%857, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float32] */;
    %860 = reshape(%858, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), float32] */;
    %861 = @func_4433(%859, %860) /* ty=(Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) */;
    %862 = %856.0;
    %863 = %861.2;
    (%862, %863, meta[relay.Constant][46] /* ty=Tensor[(490), float32] */)
  };
  %864() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(490), float32]) */
}

def @func_11152(%var_11123: Tensor[(80), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64], Tensor[(80), float32], Tensor[(1056), bool], Tensor[(180), float64], Tensor[(5, 10, 8), bool]) {
  %865 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %866 = %865.0;
  %867 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 13, 13), float64] */, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%866, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %871 = cast(%var_11123, dtype="float32") /* ty=Tensor[(80), float32] */;
  %872 = reshape(%871, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %873 = @func_3910(%872) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(80), float32]) */;
  %874 = cast(meta[relay.Constant][48] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %875 = cast(meta[relay.Constant][48] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %876 = cast(meta[relay.Constant][49] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %877 = reshape(%874, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %878 = reshape(%875, newshape=[16, 11, 6]) /* ty=Tensor[(16, 11, 6), bool] */;
  %879 = reshape(%876, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %880 = @func_6642(%877, %878, %879) /* ty=(Tensor[(16, 11, 6), bool], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32], Tensor[(16, 11, 6), float32], Tensor[(13, 13, 13), float32]) */;
  %881 = %880.4;
  %882 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%881, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = logical_xor(%869, %870) /* ty=Tensor[(13, 13, 13), uint8] */;
  %887 = %873.2;
  %888 = greater_equal(%884, %885) /* ty=Tensor[(5, 10, 8), bool] */;
  (%886, %887, %var_11123, meta[relay.Constant][48] /* ty=Tensor[(1056), bool] */, meta[relay.Constant][49] /* ty=Tensor[(180), float64] */, %888)
}

def @func_5723() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
  @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */
}

def @func_3225(%var_3224: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
  %898 = fn (%var_3204: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) {
    %889 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %890 = %889.0;
    %891 = cast(%var_3204, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
    %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%890, dtype="uint8") /* ty=Tensor[(13, 13, 13), uint8] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %895 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
    %896 = left_shift(%893, %894) /* ty=Tensor[(13, 13, 13), uint8] */;
    %897 = %895.0;
    (%896, %897)
  };
  %898(%var_3224) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */
}

def @func_1560() -> Tensor[(13, 13, 13), float32] {
  %901 = fn () -> Tensor[(13, 13, 13), float32] {
    %899 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
    %900 = cast(%899, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    sigmoid(%900) /* ty=Tensor[(13, 13, 13), float32] */
  };
  %901() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_4747() -> (Tensor[(13, 13, 13), float32],) {
  @func_4745() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_7005() -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) {
  %914 = fn () -> (Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) {
    %902 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %903 = @func_6753() /* ty=(Tensor[(180), float64], Tensor[(5, 8, 2), float64]) */;
    %904 = @func_5878() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) */;
    %905 = %904.2;
    %906 = cast(%905, dtype="float32") /* ty=Tensor[(27, 45), float32] */;
    %907 = rsqrt(%906) /* ty=Tensor[(27, 45), float32] */;
    %908 = cast(%907, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
    %909 = sigmoid(%908) /* ty=Tensor[(27, 45), float64] */;
    %910 = cast(%909, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
    %911 = %902.0;
    %912 = %903.0;
    %913 = sin(%910) /* ty=Tensor[(27, 45), float64] */;
    (%911, %912, %913)
  };
  %914() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(27, 45), float64]) */
}

def @func_7306() -> Tensor[(13, 13, 13), float32] {
  %915 = fn () -> Tensor[(13, 13, 13), float32] {
    @func_1559() /* ty=Tensor[(13, 13, 13), float32] */
  };
  %915() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_9366(%var_9347: Tensor[(5, 4), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) {
  %916 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %917 = cast(%var_9347, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
  %918 = reshape(%917, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
  %919 = @func_2908(%918) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(20), float32], Tensor[(20, 1), float32], Tensor[(180), float64]) */;
  %920 = @func_6188() /* ty=(Tensor[(180), float64],) */;
  %921 = %916.0;
  %922 = %919.3;
  %923 = %920.0;
  (%921, %922, %var_9347, %923)
}

def @func_2438() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  %924 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
  %925 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %926 = %924.0;
  %927 = %925.1;
  (%926, %927)
}

def @func_6401() -> (Tensor[(5, 8, 2), uint64],) {
  %928 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %929 = %928.0;
  (%929,)
}

def @func_4204(%var_4203: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), bool] {
  %936 = fn (%var_4157: Tensor[(13, 13, 13), float32]) -> Tensor[(13, 13, 13), bool] {
    %930 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %931 = %930.0;
    %932 = cast(%var_4157, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%931, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%934, %935) /* ty=Tensor[(13, 13, 13), bool] */
  };
  %936(%var_4203) /* ty=Tensor[(13, 13, 13), bool] */
}

def @func_8942(%var_8940: Tensor[(7, 2, 10), float64], %var_8941: Tensor[(7, 2, 10), float64]) -> (Tensor[(7, 2, 10), float64], Tensor[(7, 2, 10), bool]) {
  %944 = fn (%var_8910: Tensor[(7, 2, 10), float64], %var_8921: Tensor[(7, 2, 10), float64]) -> (Tensor[(7, 2, 10), float64], Tensor[(7, 2, 10), bool]) {
    %937 = cast(%var_8910, dtype="float64") /* ty=Tensor[(7, 2, 10), float64] */;
    %938 = cast(%var_8921, dtype="bool") /* ty=Tensor[(7, 2, 10), bool] */;
    %939 = shape_of(%var_8910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%var_8910, dtype="bool") /* ty=Tensor[(7, 2, 10), bool] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %942 = atan(%937) /* ty=Tensor[(7, 2, 10), float64] */;
    %943 = greater_equal(%940, %941) /* ty=Tensor[(7, 2, 10), bool] */;
    (%942, %943)
  };
  %944(%var_8940, %var_8941) /* ty=(Tensor[(7, 2, 10), float64], Tensor[(7, 2, 10), bool]) */
}

def @func_9369(%var_9367: Tensor[(5, 4), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) {
  @func_9366(%var_9367) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(5, 4), float32], Tensor[(180), float64]) */
}

def @func_5721() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) {
  %945 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %946 = %945.0;
  %947 = cast(%946, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %948 = reshape(%947, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), float32] */;
  %949 = @func_3223(%948) /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(5, 8, 2), uint64]) */;
  %950 = %949.0;
  (%946, %950)
}

def @func_6108() -> Tensor[(180), float64] {
  @func_6106() /* ty=Tensor[(180), float64] */
}

def @func_7404() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) {
  %958 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) {
    %951 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %952 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %953 = @func_2939() /* ty=(Tensor[(5, 8, 2), float64],) */;
    %954 = %951.0;
    %955 = %952.1;
    %956 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
    %957 = %953.0;
    (%954, %955, %956, %957)
  };
  %958() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), float64]) */
}

def @func_2682() -> (Tensor[(5, 8, 2), float64],) {
  @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */
}

def @func_9750() -> (Tensor[(5, 14, 2), float64],) {
  %960 = fn () -> (Tensor[(5, 14, 2), float64],) {
    %959 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
    (%959,)
  };
  %960() /* ty=(Tensor[(5, 14, 2), float64],) */
}

def @func_11557(%var_11554: Tensor[(9, 11, 7), uint16], %var_11555: Tensor[(9, 11, 7), uint16], %var_11556: Tensor[(70), float64]) -> (Tensor[(9, 11, 7), uint16], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  @func_11552(%var_11554, %var_11555, %var_11556) /* ty=(Tensor[(9, 11, 7), uint16], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */
}

def @func_6427() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) {
  %961 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %962 = cast(meta[relay.Constant][51] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %963 = reshape(%962, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), float32] */;
  %964 = @func_5953(%963) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 10, 8), float32]) */;
  %965 = %961.0;
  %966 = %964.1;
  (%965, %966, meta[relay.Constant][51] /* ty=Tensor[(400), float32] */)
}

def @func_9992() -> Tensor[(13, 13, 13), float32] {
  %968 = fn () -> Tensor[(13, 13, 13), float32] {
    %967 = @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %967.0
  };
  %968() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_8833() -> (Tensor[(400), float32], Tensor[(13, 13, 13), float64]) {
  %969 = @func_6427() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) */;
  %970 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %971 = %969.2;
  %972 = %970.0;
  (%971, %972)
}

def @func_12645(%var_12634: Tensor[(13, 5, 13), uint8]) -> (Tensor[(13, 5, 13), uint8], Tensor[(13, 13, 13), uint8]) {
  %973 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 5, 13), uint8] */, dtype="uint8") /* ty=Tensor[(13, 5, 13), uint8] */;
  %974 = shape_of(%var_12634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%var_12634, dtype="uint8") /* ty=Tensor[(13, 5, 13), uint8] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %977 = @func_12498() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) */;
  %978 = subtract(%975, %976) /* ty=Tensor[(13, 5, 13), uint8] */;
  %979 = %977.0;
  (%978, %979)
}

def @func_11321() -> (Tensor[(13, 13, 13), float64],) {
  %982 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %980 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %981 = %980.0;
    (%981,)
  };
  %982() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_12814() -> (Tensor[(13, 13, 13), float64],) {
  %985 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %983 = @func_5820() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) */;
    %984 = %983.1;
    (%984,)
  };
  %985() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_2404() -> Tensor[(13, 13, 13), float32] {
  %987 = fn () -> Tensor[(13, 13, 13), float32] {
    %986 = @func_1790() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %986.0
  };
  %987() /* ty=Tensor[(13, 13, 13), float32] */
}

def @func_6476() -> Tensor[(13, 13, 13), bool] {
  %988 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %988.0
}

def @func_4926(%var_4924: float64, %var_4925: Tensor[(70), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  @func_4922(%var_4924, %var_4925) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */
}

def @func_13063() -> Tensor[(13, 13, 13), uint8] {
  @func_13061() /* ty=Tensor[(13, 13, 13), uint8] */
}

def @func_5342(%var_5340: Tensor[(180), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) {
  @func_5339(%var_5340) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(5, 8, 2), uint64], Tensor[(180, 1), float64], Tensor[(10, 2), float32], Tensor[(180), float64], Tensor[(3, 60), float64]) */
}

def @func_4239() -> (Tensor[(13, 13, 13), float64],) {
  %989 = @func_2616() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %990 = %989.0;
  (%990,)
}

def @func_7298(%var_7297: Tensor[(5, 8, 2), float64]) -> (Tensor[(5, 8, 2), uint16], Tensor[(14, 12, 15), int8], Tensor[(630, 4), float64]) {
  %1001 = fn (%var_7263: Tensor[(5, 8, 2), float64]) -> (Tensor[(5, 8, 2), uint16], Tensor[(14, 12, 15), int8], Tensor[(630, 4), float64]) {
    %991 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
    %992 = %991.0;
    %993 = cast(%var_7263, dtype="uint16") /* ty=Tensor[(5, 8, 2), uint16] */;
    %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(3), int32] */;
    %995 = cast(%992, dtype="uint16") /* ty=Tensor[(5, 8, 2), uint16] */;
    %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %997 = cast(meta[relay.Constant][53] /* ty=Tensor[(630, 4), float64] */, dtype="float64") /* ty=Tensor[(630, 4), float64] */;
    %998 = reshape(%997, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float64] */;
    %999 = bitwise_xor(%995, %996) /* ty=Tensor[(5, 8, 2), uint16] */;
    %1000 = @func_170(%998) /* ty=Tensor[(14, 12, 15), int8] */;
    (%999, %1000, meta[relay.Constant][53] /* ty=Tensor[(630, 4), float64] */)
  };
  %1001(%var_7297) /* ty=(Tensor[(5, 8, 2), uint16], Tensor[(14, 12, 15), int8], Tensor[(630, 4), float64]) */
}

def @func_2637(%var_2635: Tensor[(1, 8, 10), float64]) -> (Tensor[(1, 8, 10), float64], Tensor[(13, 13, 13), float64]) {
  @func_2634(%var_2635) /* ty=(Tensor[(1, 8, 10), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_6037() -> (Tensor[(13, 13, 13), float64],) {
  %1002 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1003 = %1002.0;
  %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %1005 = tan(%1004) /* ty=Tensor[(13, 13, 13), float64] */;
  (%1005,)
}

def @func_9243() -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float32]) {
  @func_9241() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float32]) */
}

def @func_662(%var_660: Tensor[(1, 2, 15), float64]) -> Tensor[(1, 2, 15), float64] {
  @func_659(%var_660) /* ty=Tensor[(1, 2, 15), float64] */
}

def @func_150(%var_148: Tensor[(5, 8, 2), float32], %var_149: Tensor[(5, 8, 2), float32]) -> (Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) {
  @func_146(%var_148, %var_149) /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */
}

def @func_10648(%var_10547: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 14, 8), int32], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  %1006 = @func_7679() /* ty=(Tensor[(5, 8, 2), uint64],) */;
  %1007 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
  %1008 = cast(%var_10547, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1009 = log10(%1008) /* ty=Tensor[(5, 14, 8), float64] */;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %1011 = sqrt(%1010) /* ty=Tensor[(5, 14, 8), float32] */;
  %1012 = cast(%var_10547, dtype="int16") /* ty=Tensor[(5, 14, 8), int16] */;
  %1013 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%1011, dtype="int16") /* ty=Tensor[(5, 14, 8), int16] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1016 = right_shift(%1014, %1015) /* ty=Tensor[(5, 14, 8), int16] */;
  %1017 = cast(%1016, dtype="int32") /* ty=Tensor[(5, 14, 8), int32] */;
  %1018 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1009, dtype="int32") /* ty=Tensor[(5, 14, 8), int32] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1021 = @func_8603() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1022 = %1006.0;
  %1023 = %1007.0;
  %1024 = left_shift(%1019, %1020) /* ty=Tensor[(5, 14, 8), int32] */;
  %1025 = %1021.0;
  %1026 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  (%1022, %1023, %1024, %1025, %1026)
}

def @func_519(%var_516: Tensor[(4, 1, 5), float32]) -> Tensor[(4, 1, 5), float32] {
  %1027 = cast(%var_516, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  acosh(%1027) /* ty=Tensor[(4, 1, 5), float32] */
}

def @func_1816() -> Tensor[(13, 13, 13), float64] {
  %1028 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  rsqrt(%1029) /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_1538() -> Tensor[(13, 13, 13), float64] {
  @func_1536() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_3410() -> Tensor[(5, 14, 2), float64] {
  %1030 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  asin(%1030) /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_5442() -> (Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  %1031 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %1032 = cast(meta[relay.Constant][55] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %1033 = reshape(%1032, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %1034 = @func_4825(%1033) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) */;
  %1035 = %1031.1;
  %1036 = %1034.2;
  %1037 = @func_1536() /* ty=Tensor[(13, 13, 13), float64] */;
  (%1035, %1036, meta[relay.Constant][55] /* ty=Tensor[(20), float32] */, %1037)
}

def @func_1536() -> Tensor[(13, 13, 13), float64] {
  @func_1519() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_13330() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  @func_13328() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_2181() -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) {
  @func_2179() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_9801() -> Tensor[(13, 13, 13), float64] {
  @func_9799() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_8482() -> (Tensor[(5, 8, 2), float64], Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(180), float64], Tensor[(20, 1), float32]) {
  %1048 = fn () -> (Tensor[(5, 8, 2), float64], Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(180), float64], Tensor[(20, 1), float32]) {
    %1038 = @func_7777() /* ty=(Tensor[(5, 8, 2), float64],) */;
    %1039 = @func_6188() /* ty=(Tensor[(180), float64],) */;
    %1040 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
    %1041 = cast(meta[relay.Constant][56] /* ty=Tensor[(20, 1), float32] */, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
    %1042 = reshape(%1041, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %1043 = @func_2262(%1042) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */;
    %1044 = %1038.0;
    %1045 = %1039.0;
    %1046 = %1040.0;
    %1047 = %1043.4;
    (%1044, %1045, %1046, %1047, meta[relay.Constant][56] /* ty=Tensor[(20, 1), float32] */)
  };
  %1048() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(180), float64], Tensor[(5, 8, 2), uint64], Tensor[(180), float64], Tensor[(20, 1), float32]) */
}

def @func_5065(%var_5063: Tensor[(9, 9, 15), float64]) -> (Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) {
  @func_5062(%var_5063) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64]) */
}

def @func_4037() -> Tensor[(180), float64] {
  %1049 = @func_2820() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(180), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
  %1049.1
}

def @func_522(%var_520: Tensor[(4, 1, 5), float32]) -> Tensor[(4, 1, 5), float32] {
  @func_519(%var_520) /* ty=Tensor[(4, 1, 5), float32] */
}

def @func_4827(%var_4826: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) {
  %1066 = fn (%var_4810: Tensor[(20), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) {
    %1050 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %1051 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
    %1052 = @func_4239() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1053 = cast(%var_4810, dtype="float32") /* ty=Tensor[(20), float32] */;
    %1054 = cast(meta[relay.Constant][57] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %1055 = reshape(%1053, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %1056 = reshape(%1054, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
    %1057 = @func_1604(%1055, %1056) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
    %1058 = @func_3257() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1059 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    %1060 = %1050.0;
    %1061 = %1051.0;
    %1062 = @func_3410() /* ty=Tensor[(5, 14, 2), float64] */;
    %1063 = %1052.0;
    %1064 = %1057.1;
    %1065 = %1058.0;
    (%1059, %1060, %1061, %1062, %1063, %1064, %var_4810, meta[relay.Constant][57] /* ty=Tensor[(180), float64] */, %1065)
  };
  %1066(%var_4826) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_12012() -> (Tensor[(13, 13, 13), float64],) {
  @func_12010() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_2617() -> (Tensor[(13, 13, 13), float64],) {
  %1069 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %1067 = @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %1068 = %1067.1;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_2104(%var_2102: Tensor[(20), float32], %var_2103: Tensor[(180, 1), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) {
  %1080 = fn (%var_2091: Tensor[(20), float32], %var_2092: Tensor[(180, 1), float64]) -> (Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) {
    %1070 = @func_1707() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1071 = %1070.0;
    %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %1073 = cast(%var_2091, dtype="float32") /* ty=Tensor[(20), float32] */;
    %1074 = cast(%var_2092, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %1075 = reshape(%1073, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %1076 = reshape(%1074, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
    %1077 = @func_1604(%1075, %1076) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
    %1078 = log2(%1072) /* ty=Tensor[(13, 13, 13), float32] */;
    %1079 = %1077.1;
    (%1078, %1079, %var_2091, %var_2092)
  };
  %1080(%var_2102, %var_2103) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180, 1), float64]) */
}

def @func_10081(%var_10045: Tensor[(5, 14, 2), float64]) -> (Tensor[(5, 14, 2), float64], Tensor[(10, 4, 6), int16], Tensor[(240), int16]) {
  %1081 = @func_3522() /* ty=Tensor[(5, 14, 2), float64] */;
  %1082 = cast(%var_10045, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="float64") /* ty=Tensor[(5, 14, 2), float64] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1086 = cast(meta[relay.Constant][58] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %1087 = reshape(%1086, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), int16] */;
  %1088 = @func_9716(%1087) /* ty=(Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) */;
  %1089 = mod(%1084, %1085) /* ty=Tensor[(5, 14, 2), float64] */;
  %1090 = %1088.0;
  (%1089, %1090, meta[relay.Constant][58] /* ty=Tensor[(240), int16] */)
}

def @func_13283() -> (Tensor[(5, 14, 2), float64],) {
  %1092 = fn () -> (Tensor[(5, 14, 2), float64],) {
    %1091 = @func_10113() /* ty=Tensor[(5, 14, 2), float64] */;
    (%1091,)
  };
  %1092() /* ty=(Tensor[(5, 14, 2), float64],) */
}

def @func_11248() -> Tensor[(2288), float32] {
  @func_11246() /* ty=Tensor[(2288), float32] */
}

def @func_11783() -> (Tensor[(13, 13, 13), bool],) {
  @func_11781() /* ty=(Tensor[(13, 13, 13), bool],) */
}

def @func_6530() -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  @func_6528() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) */
}

def @func_13021(%var_13019: bool, %var_13020: Tensor[(7, 11, 1), bool]) -> (Tensor[(7, 11, ?), bool], Tensor[(13, 13, 13), uint8], Tensor[(7, 11, ?), uint32]) {
  @func_13017(%var_13019, %var_13020) /* ty=(Tensor[(7, 11, ?), bool], Tensor[(13, 13, 13), uint8], Tensor[(7, 11, ?), uint32]) */
}

def @func_4700(%var_4695: Tensor[(1, 6, 8), float64], %var_4696: Tensor[(8, 6, 8), float64]) -> Tensor[(8, 6, 8), float64] {
  %1093 = cast(%var_4695, dtype="float64") /* ty=Tensor[(1, 6, 8), float64] */;
  %1094 = cast(%var_4696, dtype="float64") /* ty=Tensor[(8, 6, 8), float64] */;
  subtract(%1093, %1094) /* ty=Tensor[(8, 6, 8), float64] */
}

def @func_13017(%var_12944: bool, %var_12945: Tensor[(7, 11, 1), bool]) -> (Tensor[(7, 11, ?), bool], Tensor[(13, 13, 13), uint8], Tensor[(7, 11, ?), uint32]) {
  %1095 = cast(%var_12944, dtype="bool") /* ty=bool */;
  %1096 = cast(%var_12945, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %1097 = logical_and(%1095, %1096) /* ty=Tensor[(7, 11, 1), bool] */;
  %1098 = cast(%1097, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %1099 = shape_of(%var_12945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%var_12945, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1102 = logical_or(%1100, %1101) /* ty=Tensor[(7, 11, ?), bool] */;
  %1103 = cast(%1102, dtype="bool") /* ty=Tensor[(7, 11, ?), bool] */;
  %1104 = shape_of(%1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%1097, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1107 = @func_8387() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) */;
  %1108 = cast(%1102, dtype="uint32") /* ty=Tensor[(7, 11, ?), uint32] */;
  %1109 = shape_of(%var_12945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(%var_12945, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1112 = equal(%1105, %1106) /* ty=Tensor[(7, 11, ?), bool] */;
  %1113 = %1107.0;
  %1114 = bitwise_xor(%1110, %1111) /* ty=Tensor[(7, 11, ?), uint32] */;
  (%1112, %1113, %1114)
}

def @func_12499() -> (Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) {
  %1118 = fn () -> (Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) {
    %1115 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
    %1116 = @func_11454() /* ty=Tensor[(13, 13, 13), uint8] */;
    %1117 = %1115.0;
    (%1116, %1117)
  };
  %1118() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(13, 13, 13), bool]) */
}

def @func_13171() -> (Tensor[(13, 13, 13), float64],) {
  %1119 = @func_6334() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) */;
  %1120 = %1119.2;
  (%1120,)
}

def @func_9328(%var_9327: Tensor[(1, 70), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], float64, Tensor[(1, 70), float64]) {
  %1129 = fn (%var_9318: Tensor[(1, 70), float64]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], float64, Tensor[(1, 70), float64]) {
    %1121 = @func_6401() /* ty=(Tensor[(5, 8, 2), uint64],) */;
    %1122 = cast(9.56591f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1123 = cast(%var_9318, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
    %1124 = reshape(%1122, newshape=[]) /* ty=float64 */;
    %1125 = reshape(%1123, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %1126 = @func_4922(%1124, %1125) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
    %1127 = %1121.0;
    %1128 = %1126.1;
    (%1127, %1128, 9.56591f64 /* ty=float64 */, %var_9318)
  };
  %1129(%var_9327) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], float64, Tensor[(1, 70), float64]) */
}

def @func_13380() -> (Tensor[(13, 13, 13), float32],) {
  %1132 = fn () -> (Tensor[(13, 13, 13), float32],) {
    %1130 = @func_10893() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %1131 = %1130.0;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_5391() -> Tensor[(5, 8, 2), float64] {
  %1134 = fn () -> Tensor[(5, 8, 2), float64] {
    %1133 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
    %1133.1
  };
  %1134() /* ty=Tensor[(5, 8, 2), float64] */
}

def @func_12087() -> Tensor[(13, 13, 13), float64] {
  %1135 = fn () -> Tensor[(13, 13, 13), float64] {
    @func_9799() /* ty=Tensor[(13, 13, 13), float64] */
  };
  %1135() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_5832() -> (Tensor[(20), float32], Tensor[(13, 13, 13), float64]) {
  @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_10832() -> (Tensor[(13, 13, 13), float64],) {
  %1138 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %1136 = @func_1903() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */;
    %1137 = %1136.1;
    (%1137,)
  };
  %1138() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_7679() -> (Tensor[(5, 8, 2), uint64],) {
  %1139 = @func_2150() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64]) */;
  %1140 = %1139.1;
  (%1140,)
}

def @func_6555(%var_6554: Tensor[(180), float64]) -> (Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(180), float64]) {
  %1149 = fn (%var_6544: Tensor[(180), float64]) -> (Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(180), float64]) {
    %1141 = @func_5442() /* ty=(Tensor[(5, 8, 2), float64], Tensor[(5, 8, 2), uint64], Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %1142 = %1141.2;
    %1143 = cast(%1142, dtype="float32") /* ty=Tensor[(20), float32] */;
    %1144 = cast(%var_6544, dtype="float64") /* ty=Tensor[(180), float64] */;
    %1145 = reshape(%1143, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %1146 = reshape(%1144, newshape=[6, 30]) /* ty=Tensor[(6, 30), float64] */;
    %1147 = @func_1604(%1145, %1146) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(6, 30), float64], Tensor[(6, 2, 15), float64]) */;
    %1148 = %1147.5;
    (%1142, %1148, %var_6544)
  };
  %1149(%var_6554) /* ty=(Tensor[(20), float32], Tensor[(6, 2, 15), float64], Tensor[(180), float64]) */
}

def @func_13409() -> Tensor[(13, 13, 13), float64] {
  %1150 = fn () -> Tensor[(13, 13, 13), float64] {
    @func_1816() /* ty=Tensor[(13, 13, 13), float64] */
  };
  %1150() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_8388() -> (Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) {
  %1161 = fn () -> (Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) {
    %1151 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %1152 = reshape(%1151, newshape=[20, 1]) /* ty=Tensor[(20, 1), float32] */;
    %1153 = @func_6063(%1152) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(4, 1, 5), float32], Tensor[(20, 1), float32]) */;
    %1154 = %1153.2;
    %1155 = cast(%1154, dtype="uint64") /* ty=Tensor[(20, 1), uint64] */;
    %1156 = cast(meta[relay.Constant][60] /* ty=Tensor[(20, 12), float32] */, dtype="uint64") /* ty=Tensor[(20, 12), uint64] */;
    %1157 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), float32] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %1158 = @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */;
    %1159 = bitwise_xor(%1155, %1156) /* ty=Tensor[(20, 12), uint64] */;
    %1160 = log2(%1157) /* ty=Tensor[(20), float64] */;
    (%1158, %1159, %1160)
  };
  %1161() /* ty=(Tensor[(13, 13, 13), uint8], Tensor[(20, 12), uint64], Tensor[(20), float64]) */
}

def @func_10855() -> (Tensor[(13, 13, 13), float32],) {
  @func_10853() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_1662(%var_1659: Tensor[(7, 8, 12), float32]) -> (Tensor[(7, 8, 12), float32],) {
  %1162 = cast(%var_1659, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
  %1163 = sin(%1162) /* ty=Tensor[(7, 8, 12), float32] */;
  (%1163,)
}

def @func_5119() -> Tensor[(13, 13, 13), float64] {
  @func_5117() /* ty=Tensor[(13, 13, 13), float64] */
}

def @func_1428(%var_1425: Tensor[(3, 16, 12), float32]) -> (Tensor[(3, 16, 12), float32],) {
  %1164 = cast(%var_1425, dtype="float32") /* ty=Tensor[(3, 16, 12), float32] */;
  %1165 = erf(%1164) /* ty=Tensor[(3, 16, 12), float32] */;
  (%1165,)
}

def @func_11455() -> Tensor[(13, 13, 13), uint8] {
  %1166 = fn () -> Tensor[(13, 13, 13), uint8] {
    @func_8037() /* ty=Tensor[(13, 13, 13), uint8] */
  };
  %1166() /* ty=Tensor[(13, 13, 13), uint8] */
}

def @func_7534(%var_7532: Tensor[(20), float32], %var_7533: Tensor[(6, 30), float64]) -> (Tensor[(5, 8, 2), float64], Tensor[(180, 1), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(132, 1), float64], float64, Tensor[(70), float64], Tensor[(6, 30), float32]) {
  @func_7530(%var_7532, %var_7533) /* ty=(Tensor[(5, 8, 2), float64], Tensor[(180, 1), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(132, 1), float64], float64, Tensor[(70), float64], Tensor[(6, 30), float32]) */
}

def @func_11781() -> (Tensor[(13, 13, 13), bool],) {
  %1167 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
  %1168 = %1167.0;
  (%1168,)
}

def @func_8835() -> (Tensor[(400), float32], Tensor[(13, 13, 13), float64]) {
  @func_8833() /* ty=(Tensor[(400), float32], Tensor[(13, 13, 13), float64]) */
}

def @func_10107() -> (Tensor[(13, 13, 13), float32],) {
  %1170 = fn () -> (Tensor[(13, 13, 13), float32],) {
    %1169 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
    (%1169,)
  };
  %1170() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_2265(%var_2263: Tensor[(20), float32]) -> (Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) {
  @func_2262(%var_2263) /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(180), float64]) */
}

def @func_10344(%var_10343: Tensor[(16, 5, 5), float64]) -> (Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) {
  %1179 = fn (%var_10329: Tensor[(16, 5, 5), float64]) -> (Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) {
    %1171 = cast(%var_10329, dtype="float64") /* ty=Tensor[(16, 5, 5), float64] */;
    %1172 = @func_6801() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), uint8], Tensor[(3, 60), float64], Tensor[(30, 6), float64]) */;
    %1173 = cast(meta[relay.Constant][61] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %1174 = reshape(%1173, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
    %1175 = @func_3111(%1174) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
    %1176 = log10(%1171) /* ty=Tensor[(16, 5, 5), float64] */;
    %1177 = %1172.1;
    %1178 = %1175.2;
    (%1176, %1177, %1178, meta[relay.Constant][61] /* ty=Tensor[(180), float64] */)
  };
  %1179(%var_10343) /* ty=(Tensor[(16, 5, 5), float64], Tensor[(13, 13, 13), uint8], Tensor[(1, 20), float32], Tensor[(180), float64]) */
}

def @func_7885(%var_7883: Tensor[(6, 4, 15), float64], %var_7884: Tensor[(180, 1), float64]) -> (Tensor[(6, 4, 15), float64], Tensor[(16, 11, 6), float32], Tensor[(1056), bool], Tensor[(180, 1), float64]) {
  @func_7881(%var_7883, %var_7884) /* ty=(Tensor[(6, 4, 15), float64], Tensor[(16, 11, 6), float32], Tensor[(1056), bool], Tensor[(180, 1), float64]) */
}

def @func_11607() -> (Tensor[(13, 13, 13), float64],) {
  @func_11605() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_9838() -> (Tensor[(13, 13, 13), float64],) {
  %1182 = fn () -> (Tensor[(13, 13, 13), float64],) {
    %1180 = @func_5721() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), uint8]) */;
    %1181 = %1180.0;
    (%1181,)
  };
  %1182() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_5820() -> (Tensor[(5, 8, 2), float64], Tensor[(13, 13, 13), float64]) {
  %1183 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1184 = @func_5390() /* ty=Tensor[(5, 8, 2), float64] */;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_11552(%var_11537: Tensor[(9, 11, 7), uint16], %var_11538: Tensor[(9, 11, 7), uint16], %var_11550: Tensor[(70), float64]) -> (Tensor[(9, 11, 7), uint16], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) {
  %1186 = cast(%var_11538, dtype="uint16") /* ty=Tensor[(9, 11, 7), uint16] */;
  %1187 = shape_of(%var_11537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1188 = cast(%var_11537, dtype="uint16") /* ty=Tensor[(9, 11, 7), uint16] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1190 = cast(-4.1437f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1191 = cast(%var_11550, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1192 = reshape(%1190, newshape=[]) /* ty=float64 */;
  %1193 = reshape(%1191, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %1194 = @func_2993(%1192, %1193) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(14, 1, 5), float64], float64, Tensor[(70), float64]) */;
  %1195 = left_shift(%1188, %1189) /* ty=Tensor[(9, 11, 7), uint16] */;
  %1196 = %1194.1;
  (%1195, %1196, -4.1437f64 /* ty=float64 */, %var_11550)
}

def @func_13430() -> Tensor[(5, 8, 2), float64] {
  @func_5390() /* ty=Tensor[(5, 8, 2), float64] */
}

def @func_4745() -> (Tensor[(13, 13, 13), float32],) {
  %1197 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
  %1198 = %1197.3;
  (%1198,)
}

def @func_6039() -> (Tensor[(13, 13, 13), float64],) {
  @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */
}

def @func_7710() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
  %1203 = fn () -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) {
    %1199 = @func_2848() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1200 = @func_3062() /* ty=(Tensor[(13, 13, 13), bool], Tensor[(5, 8, 2), float64]) */;
    %1201 = %1199.0;
    %1202 = %1200.0;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), bool]) */
}

def @func_1955() -> (Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) {
  @func_1953() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64]) */
}

def @func_7865() -> (Tensor[(20), float32],) {
  %1206 = fn () -> (Tensor[(20), float32],) {
    %1204 = @func_5830() /* ty=(Tensor[(20), float32], Tensor[(13, 13, 13), float64]) */;
    %1205 = %1204.0;
    (%1205,)
  };
  %1206() /* ty=(Tensor[(20), float32],) */
}

def @func_8897() -> (Tensor[(13, 13, 13), float32],) {
  @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */
}

def @func_1013(%var_1012: Tensor[(6, 2, 15), float64]) -> (Tensor[(6, 2, 15), float64],) {
  %1209 = fn (%var_1008: Tensor[(6, 2, 15), float64]) -> (Tensor[(6, 2, 15), float64],) {
    %1207 = cast(%var_1008, dtype="float64") /* ty=Tensor[(6, 2, 15), float64] */;
    %1208 = rsqrt(%1207) /* ty=Tensor[(6, 2, 15), float64] */;
    (%1208,)
  };
  %1209(%var_1012) /* ty=(Tensor[(6, 2, 15), float64],) */
}

def @func_4437(%var_4435: Tensor[(10, 7, 7), float32], %var_4436: Tensor[(10, 7, 7), float32]) -> (Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) {
  @func_4433(%var_4435, %var_4436) /* ty=(Tensor[(10, 7, 7), float32], Tensor[(13, 13, 13), float64], Tensor[(3, 16, 2), uint8], Tensor[(96), uint8]) */
}

def @func_3412() -> Tensor[(5, 14, 2), float64] {
  @func_3410() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_10794(%var_10749: Tensor[(1, 1215), float64], %var_10750: Tensor[(20), float32], %var_10760: Tensor[(5, 10, 8), float32]) -> (Tensor[(13, 13, 13), float64], Tensor[(20), float32], Tensor[(1, 1215), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), uint64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(13, 13, 13), float32]) {
  %1210 = cast(%var_10749, dtype="float64") /* ty=Tensor[(1, 1215), float64] */;
  %1211 = cast(%var_10750, dtype="float32") /* ty=Tensor[(20), float32] */;
  %1212 = reshape(%1210, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %1213 = reshape(%1211, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %1214 = @func_10523(%1212, %1213) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(1215), float64], Tensor[(5, 4), float32], Tensor[(20), float32]) */;
  %1215 = @func_3870() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1216 = @func_6427() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 10, 8), float32], Tensor[(400), float32]) */;
  %1217 = %1216.1;
  %1218 = cast(%var_10760, dtype="uint64") /* ty=Tensor[(5, 10, 8), uint64] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%1217, dtype="uint64") /* ty=Tensor[(5, 10, 8), uint64] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1222 = cast(meta[relay.Constant][62] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %1223 = reshape(%1222, newshape=[3, 60]) /* ty=Tensor[(3, 60), float64] */;
  %1224 = @func_3111(%1223) /* ty=(Tensor[(13, 13, 13), float64], Tensor[(6, 30), float64], Tensor[(1, 20), float32], Tensor[(3, 60), float64]) */;
  %1225 = @func_1519() /* ty=Tensor[(13, 13, 13), float64] */;
  %1226 = %1214.4;
  %1227 = %1215.0;
  %1228 = right_shift(%1220, %1221) /* ty=Tensor[(5, 10, 8), uint64] */;
  %1229 = %1224.0;
  %1230 = @func_7305() /* ty=Tensor[(13, 13, 13), float32] */;
  (%1225, %1226, %var_10749, %var_10750, %1227, %1228, %1229, meta[relay.Constant][62] /* ty=Tensor[(180), float64] */, %1230)
}

def @func_10084(%var_10082: Tensor[(5, 14, 2), float64]) -> (Tensor[(5, 14, 2), float64], Tensor[(10, 4, 6), int16], Tensor[(240), int16]) {
  @func_10081(%var_10082) /* ty=(Tensor[(5, 14, 2), float64], Tensor[(10, 4, 6), int16], Tensor[(240), int16]) */
}

def @func_10114() -> Tensor[(5, 14, 2), float64] {
  %1231 = fn () -> Tensor[(5, 14, 2), float64] {
    @func_3410() /* ty=Tensor[(5, 14, 2), float64] */
  };
  %1231() /* ty=Tensor[(5, 14, 2), float64] */
}

def @func_9058() -> (Tensor[(5, 8, 2), float32], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32]) {
  %1245 = fn () -> (Tensor[(5, 8, 2), float32], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32]) {
    %1232 = @func_2458() /* ty=(Tensor[(5, 8, 2), uint64],) */;
    %1233 = %1232.0;
    %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
    %1235 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
    %1236 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1237 = @func_4681() /* ty=(Tensor[(13, 13, 13), float64],) */;
    %1238 = @func_8895() /* ty=(Tensor[(13, 13, 13), float32],) */;
    %1239 = sinh(%1234) /* ty=Tensor[(5, 8, 2), float32] */;
    %1240 = @func_3592() /* ty=Tensor[(5, 14, 2), float64] */;
    %1241 = %1235.5;
    %1242 = %1236.0;
    %1243 = %1237.0;
    %1244 = %1238.0;
    (%1239, %1240, %1241, %1242, %1243, %1244)
  };
  %1245() /* ty=(Tensor[(5, 8, 2), float32], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float32]) */
}

def @func_5548(%var_5546: Tensor[(4, 8, 15), uint64], %var_5547: Tensor[(4, 8, 15), uint64]) -> (Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) {
  %1252 = fn (%var_5518: Tensor[(4, 8, 15), uint64], %var_5519: Tensor[(4, 8, 15), uint64]) -> (Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) {
    %1246 = cast(%var_5519, dtype="uint64") /* ty=Tensor[(4, 8, 15), uint64] */;
    %1247 = shape_of(%var_5518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1248 = cast(%var_5518, dtype="uint64") /* ty=Tensor[(4, 8, 15), uint64] */;
    %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1250 = bitwise_xor(%1248, %1249) /* ty=Tensor[(4, 8, 15), uint64] */;
    %1251 = @func_1559() /* ty=Tensor[(13, 13, 13), float32] */;
    (%1250, %1251)
  };
  %1252(%var_5546, %var_5547) /* ty=(Tensor[(4, 8, 15), uint64], Tensor[(13, 13, 13), float32]) */
}

def @func_9719(%var_9717: Tensor[(10, 4, 6), int16]) -> (Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) {
  @func_9716(%var_9717) /* ty=(Tensor[(10, 4, 6), int16], Tensor[(13, 13, 13), float64]) */
}

def @func_11512() -> (Tensor[(70), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
  %1262 = fn () -> (Tensor[(70), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) {
    %1253 = @func_5291() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(5, 14, 2), float64], Tensor[(13, 13, 13), bool], float64, Tensor[(70), float64], Tensor[(13, 13, 13), float64], Tensor[(180), float64], Tensor[(2288), float32], Tensor[(13, 13, 13), float64]) */;
    %1254 = @func_7864() /* ty=(Tensor[(20), float32],) */;
    %1255 = @func_5878() /* ty=(Tensor[(13, 13, 13), float64], Tensor[(13, 13, 13), float64], Tensor[(27, 45), uint64]) */;
    %1256 = cast(meta[relay.Constant][63] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1257 = reshape(%1256, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float64] */;
    %1258 = %1253.4;
    %1259 = %1254.0;
    %1260 = %1255.0;
    %1261 = @func_659(%1257) /* ty=Tensor[(1, 2, 15), float64] */;
    (%1258, %1259, %1260, %1261, meta[relay.Constant][63] /* ty=Tensor[(30), float64] */)
  };
  %1262() /* ty=(Tensor[(70), float64], Tensor[(20), float32], Tensor[(13, 13, 13), float64], Tensor[(1, 2, 15), float64], Tensor[(30), float64]) */
}

def @func_2459() -> (Tensor[(5, 8, 2), uint64],) {
  %1265 = fn () -> (Tensor[(5, 8, 2), uint64],) {
    %1263 = @func_2366() /* ty=(Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), uint64], Tensor[(13, 13, 13), float32]) */;
    %1264 = %1263.0;
    (%1264,)
  };
  %1265() /* ty=(Tensor[(5, 8, 2), uint64],) */
}

def @func_13432() -> Tensor[(5, 8, 2), float64] {
  @func_13430() /* ty=Tensor[(5, 8, 2), float64] */
}

def @func_3767(%var_3766: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), int32]) {
  %1274 = fn (%var_3760: Tensor[(13, 13, 13), float32]) -> (Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), int32]) {
    %1266 = @func_2438() /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), float64]) */;
    %1267 = @func_2403() /* ty=Tensor[(13, 13, 13), float32] */;
    %1268 = cast(%var_3760, dtype="int32") /* ty=Tensor[(13, 13, 13), int32] */;
    %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%1267, dtype="int32") /* ty=Tensor[(13, 13, 13), int32] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1272 = %1266.0;
    %1273 = bitwise_or(%1270, %1271) /* ty=Tensor[(13, 13, 13), int32] */;
    (%1272, %1273)
  };
  %1274(%var_3766) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(13, 13, 13), int32]) */
}

def @func_6334() -> (Tensor[(13, 13, 13), float64], Tensor[(5, 8, 2), float32], Tensor[(13, 13, 13), float64]) {
  %1275 = @func_6037() /* ty=(Tensor[(13, 13, 13), float64],) */;
  %1276 = @func_2680() /* ty=(Tensor[(5, 8, 2), float64],) */;
  %1277 = %1276.0;
  %1278 = cast(%1277, dtype="float32") /* ty=Tensor[(5, 8, 2), float32] */;
  %1279 = %1275.0;
  %1280 = erf(%1278) /* ty=Tensor[(5, 8, 2), float32] */;
  %1281 = @func_5117() /* ty=Tensor[(13, 13, 13), float64] */;
  (%1279, %1280, %1281)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen792/build/output.py:4102: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen792/build/output.py", line 4107, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(32) tvmgen_default_fused_mod_kernel0(float* __restrict__ T_mod, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_mod[(((int)threadIdx.x))] = fmodf(placeholder[(0)], placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


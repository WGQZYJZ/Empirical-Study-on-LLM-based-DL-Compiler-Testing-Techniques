==========mod==========
#[version = "0.0.5"]
def @func_2742() -> (Tensor[(2016), float32],) {
  %0 = @func_2532() /* ty=Tensor[(2016), float32] */;
  (%0,)
}

def @func_3684(%var_3679: Tensor[(10, 3, 4), int16], %var_3680: Tensor[(10, 3, 4), int16]) -> (Tensor[(10, 3, 4), int16],) {
  %1 = cast(%var_3680, dtype="int16") /* ty=Tensor[(10, 3, 4), int16] */;
  %2 = shape_of(%var_3679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%var_3679, dtype="int16") /* ty=Tensor[(10, 3, 4), int16] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %5 = bitwise_or(%3, %4) /* ty=Tensor[(10, 3, 4), int16] */;
  (%5,)
}

def @func_401(%var_389: Tensor[(10, 9, 1), float64], %var_397: Tensor[(468), float32]) -> (Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
  %6 = cast(%var_389, dtype="float64") /* ty=Tensor[(10, 9, 1), float64] */;
  %7 = cast(%var_397, dtype="float32") /* ty=Tensor[(468), float32] */;
  %8 = reshape(%7, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), float32] */;
  %9 = @func_193(%8) /* ty=(Tensor[(9, 13, 4), float32],) */;
  %10 = acosh(%6) /* ty=Tensor[(10, 9, 1), float64] */;
  %11 = %9.0;
  (%10, %11, %var_397)
}

def @func_1562(%var_1524: Tensor[(13, 9, 2), float64]) -> Tensor[(13, 9, 2), float64] {
  %12 = cast(%var_1524, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  sinh(%12) /* ty=Tensor[(13, 9, 2), float64] */
}

def @func_3133() -> (Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) {
  %13 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %15 = reshape(%14, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %16 = @func_2492(%15) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
  %17 = %13.0;
  %18 = %16.2;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(360), float64] */)
}

def @func_3718(%var_3705: Tensor[(72), float64]) -> (Tensor[(735), uint64], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(84), float32], Tensor[(1176), float32]) {
  %19 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %20 = cast(%var_3705, dtype="float64") /* ty=Tensor[(72), float64] */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %23 = reshape(%20, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %24 = reshape(%21, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %25 = reshape(%22, newshape=[12, 98]) /* ty=Tensor[(12, 98), float32] */;
  %26 = @func_3493(%23, %24, %25) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) */;
  %27 = %19.2;
  %28 = %26.8;
  (%27, %28, %var_3705, meta[relay.Constant][1] /* ty=Tensor[(84), float32] */, meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */)
}

def @func_3493(%var_3468: Tensor[(72), float64], %var_3471: Tensor[(84), float32], %var_3472: Tensor[(12, 98), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) {
  %29 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %32 = reshape(%31, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %33 = @func_21(%32) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %34 = cast(%var_3468, dtype="float64") /* ty=Tensor[(72), float64] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(27, 30), int8] */, dtype="int8") /* ty=Tensor[(27, 30), int8] */;
  %37 = cast(%var_3471, dtype="float32") /* ty=Tensor[(84), float32] */;
  %38 = cast(%var_3472, dtype="float32") /* ty=Tensor[(12, 98), float32] */;
  %39 = reshape(%34, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %40 = reshape(%35, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %41 = reshape(%36, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %42 = reshape(%37, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %43 = reshape(%38, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %44 = @func_2872(%39, %40, %41, %42, %43) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 98), float32] */, dtype="uint16") /* ty=Tensor[(12, 98), uint16] */;
  %46 = shape_of(%var_3472, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%var_3472, dtype="uint16") /* ty=Tensor[(12, 98), uint16] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %49 = %44.1;
  %50 = cast(%49, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %51 = reshape(%50, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %52 = @func_2633(%51) /* ty=(Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) */;
  %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %54 = cast(%var_3471, dtype="float32") /* ty=Tensor[(84), float32] */;
  %55 = reshape(%53, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %56 = reshape(%54, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %57 = @func_1941(%55, %56) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
  %58 = %33.0;
  %59 = logical_xor(%47, %48) /* ty=Tensor[(12, 98), uint16] */;
  %60 = %52.0;
  %61 = %57.0;
  (%30, %58, %49, %var_3468, meta[relay.Constant][3] /* ty=Tensor[(99, 2), float64] */, meta[relay.Constant][4] /* ty=Tensor[(27, 30), int8] */, %var_3471, %59, %60, %61, meta[relay.Constant][6] /* ty=Tensor[(1260), float64] */)
}

def @func_1941(%var_1903: Tensor[(12, 7, 15), float64], %var_1926: Tensor[(84, 1), float32]) -> (Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) {
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %63 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 468), float32] */, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %64 = reshape(%62, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %65 = reshape(%63, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %66 = @func_401(%64, %65) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %67 = cast(meta[relay.Constant][9] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %68 = cast(meta[relay.Constant][9] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %69 = cast(%var_1926, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %70 = cast(meta[relay.Constant][10] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %71 = cast(%var_1926, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %72 = reshape(%67, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %73 = reshape(%68, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %74 = reshape(%69, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %75 = reshape(%70, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %76 = reshape(%71, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %77 = @func_1079(%72, %73, %74, %75, %76) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %78 = cast(%var_1903, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
  %79 = rsqrt(%78) /* ty=Tensor[(12, 7, 15), float64] */;
  %80 = cast(%79, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %81 = %66.2;
  %82 = %77.2;
  %83 = asinh(%80) /* ty=Tensor[(12, 7, 15), float32] */;
  (%81, meta[relay.Constant][7] /* ty=Tensor[(90), float64] */, meta[relay.Constant][8] /* ty=Tensor[(1, 468), float32] */, %82, meta[relay.Constant][9] /* ty=Tensor[(810), int8] */, %var_1926, meta[relay.Constant][10] /* ty=Tensor[(1176), float32] */, %83)
}

def @func_6445(%var_6428: Tensor[(360), float64], %var_6431: Tensor[(286), uint16]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(286), uint16]) {
  %84 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %85 = cast(%var_6428, dtype="float64") /* ty=Tensor[(360), float64] */;
  %86 = reshape(%85, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %87 = @func_2492(%86) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
  %88 = cast(%var_6431, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %89 = cast(%var_6431, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %90 = cast(%var_6431, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %91 = cast(%var_6431, dtype="float32") /* ty=Tensor[(286), float32] */;
  %92 = reshape(%88, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %93 = reshape(%89, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %94 = reshape(%90, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %95 = reshape(%91, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %96 = @func_1775(%92, %93, %94, %95) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %97 = %84.0;
  %98 = %87.1;
  %99 = %96.3;
  (%97, %98, %var_6428, %99, %var_6431)
}

def @func_6039(%var_6034: uint64) -> (Tensor[(11, 12, 1), uint64],) {
  %100 = cast(%var_6034, dtype="uint64") /* ty=uint64 */;
  %101 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 12, 1), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 1), uint64] */;
  %102 = right_shift(%100, %101) /* ty=Tensor[(11, 12, 1), uint64] */;
  (%102,)
}

def @func_6335() -> (Tensor[(9, 14, 16), float64],) {
  %103 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
  %104 = %103.0;
  (%104,)
}

def @func_3822(%var_3797: Tensor[(2016), float32]) -> (Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  %105 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %106 = %105.0;
  %107 = cast(%var_3797, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(1), int32] */;
  %109 = cast(%106, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?), float32] */;
  %111 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %112 = cast(meta[relay.Constant][13] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %113 = reshape(%111, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %114 = reshape(%112, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %115 = @func_401(%113, %114) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %116 = mod(%109, %110) /* ty=Tensor[(2016), float32] */;
  %117 = %115.1;
  (%116, %117, meta[relay.Constant][12] /* ty=Tensor[(90), float64] */, meta[relay.Constant][13] /* ty=Tensor[(468), float32] */)
}

def @func_2166(%var_2142: Tensor[(2016), float32], %var_2153: Tensor[(2016), uint16]) -> Tensor[(2016), bool] {
  %118 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %119 = %118.0;
  %120 = cast(%var_2142, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(1), int32] */;
  %122 = cast(%119, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %124 = bitwise_or(%122, %123) /* ty=Tensor[(2016), uint8] */;
  %125 = cast(%124, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
  %126 = shape_of(%var_2142, dtype="int32") /* ty=Tensor[(1), int32] */;
  %127 = cast(%var_2142, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %129 = bitwise_xor(%127, %128) /* ty=Tensor[(2016), uint16] */;
  %130 = cast(%var_2153, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(1), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%132, %133) /* ty=Tensor[(2016), bool] */
}

def @func_3339(%var_3289: Tensor[(9, 14, 16), float32], %var_3298: Tensor[(600), float32]) -> (Tensor[(9, 14, 16), uint64], Tensor[(9, 14, 16), float64], Tensor[(360), float64], Tensor[(600), float32], Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32]) {
  %134 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %135 = %134.0;
  %136 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 16), float32] */, dtype="uint64") /* ty=Tensor[(9, 14, 16), uint64] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="uint64") /* ty=Tensor[(9, 14, 16), uint64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %140 = cast(%var_3289, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %141 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 16), float32] */, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %144 = cast(%var_3298, dtype="float32") /* ty=Tensor[(600), float32] */;
  %145 = cast(meta[relay.Constant][15] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %146 = multiply(%138, %139) /* ty=Tensor[(9, 14, 16), uint64] */;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %148 = reshape(%144, newshape=[10, 6, 10]) /* ty=Tensor[(10, 6, 10), float32] */;
  %149 = reshape(%145, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %150 = reshape(%147, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %151 = @func_2999(%148, %149, %150) /* ty=(Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) */;
  %152 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %153 = cast(%var_3289, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %154 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %157 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %158 = subtract(%142, %143) /* ty=Tensor[(9, 14, 16), float64] */;
  %159 = %151.6;
  %160 = %152.0;
  %161 = floor_divide(%155, %156) /* ty=Tensor[(9, 14, 16), float32] */;
  %162 = %157.0;
  (%146, %158, %159, %var_3298, meta[relay.Constant][15] /* ty=Tensor[(360), float64] */, %160, %161, %162)
}

def @func_6092() -> Tensor[(9, 14, 16), float32] {
  %163 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %163.0
}

def @func_1200(%var_1171: Tensor[(13, 2, 11), int8], %var_1172: Tensor[(13, 2, 11), int8]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) {
  %164 = cast(%var_1171, dtype="float64") /* ty=Tensor[(13, 2, 11), float64] */;
  %165 = cast(%var_1172, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
  %166 = shape_of(%var_1171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_1171, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = less_equal(%167, %168) /* ty=Tensor[(13, 2, 11), bool] */;
  %170 = cast(%var_1172, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %174 = acos(%164) /* ty=Tensor[(13, 2, 11), float64] */;
  %175 = not_equal(%172, %173) /* ty=Tensor[(13, 2, 11), bool] */;
  (%174, %175)
}

def @func_4901() -> (Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) {
  %176 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %178 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %179 = asinh(%177) /* ty=Tensor[(9, 14, 16), float64] */;
  %180 = %178.0;
  (%179, %180)
}

def @func_2633(%var_2612: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) {
  %181 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %182 = cast(%var_2612, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = cast(%181, dtype="int32") /* ty=Tensor[(9, 14, 16), int32] */;
  %187 = shape_of(%var_2612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_2612, dtype="int32") /* ty=Tensor[(9, 14, 16), int32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %190 = divide(%184, %185) /* ty=Tensor[(9, 14, 16), float32] */;
  %191 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %192 = minimum(%188, %189) /* ty=Tensor[(9, 14, 16), int32] */;
  (%190, %191, %192)
}

def @func_5984(%var_5967: Tensor[(2016), bool]) -> (Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(2016), int16]) {
  %193 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %194 = @func_4995() /* ty=Tensor[(9, 14, 16), float32] */;
  %195 = cast(%194, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %196 = reshape(%195, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %197 = @func_2121(%196) /* ty=(Tensor[(2016), bool],) */;
  %198 = %197.0;
  %199 = cast(%var_5967, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(1), int32] */;
  %201 = cast(%198, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?), int16] */;
  %203 = %193.2;
  %204 = multiply(%201, %202) /* ty=Tensor[(2016), int16] */;
  (%203, %194, %204)
}

def @func_1845(%var_1816: Tensor[(7, 15, 15), float64], %var_1817: Tensor[(7, 15, 15), float64], %var_1824: Tensor[(84, 1), float32], %var_1825: Tensor[(1176), float32], %var_1828: Tensor[(143), float32]) -> (Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) {
  %205 = cast(%var_1817, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
  %206 = shape_of(%var_1816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_1816, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %209 = cast(%var_1828, dtype="float32") /* ty=Tensor[(143), float32] */;
  %210 = reshape(%209, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %211 = @func_166(%210) /* ty=(Tensor[(1, 11, 13), float32],) */;
  %212 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %213 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %214 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %215 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %216 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %217 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %218 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %219 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %220 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %221 = reshape(%216, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %222 = reshape(%217, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %223 = reshape(%218, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %224 = reshape(%219, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %225 = reshape(%220, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %226 = @func_1079(%221, %222, %223, %224, %225) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %227 = %226.3;
  %228 = cast(%227, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
  %229 = acos(%228) /* ty=Tensor[(21, 4), float64] */;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %231 = reshape(%212, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %232 = reshape(%213, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %233 = reshape(%214, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %234 = reshape(%215, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %235 = reshape(%230, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %236 = @func_1079(%231, %232, %233, %234, %235) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %237 = %236.2;
  %238 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(2), int32] */;
  %240 = cast(%237, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %242 = cast(%229, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %243 = divide(%207, %208) /* ty=Tensor[(7, 15, 15), float64] */;
  %244 = %211.0;
  %245 = power(%240, %241) /* ty=Tensor[(6, 196), float32] */;
  %246 = erf(%242) /* ty=Tensor[(21, 4), float32] */;
  (%243, meta[relay.Constant][16] /* ty=Tensor[(810), int8] */, %var_1824, %244, %var_1828, %245, %246)
}

def @func_5593(%var_5560: Tensor[(14, 2, 4), int8]) -> (Tensor[(14, 2, 4), float64], Tensor[(14, 2, 4), float32], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2016), float32]) {
  %247 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %248 = %247.0;
  %249 = cast(%var_5560, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %253 = cast(%248, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %254 = cast(meta[relay.Constant][17] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %255 = reshape(%254, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %256 = @func_3822(%255) /* ty=(Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */;
  %257 = power(%251, %252) /* ty=Tensor[(14, 2, 4), float64] */;
  %258 = sin(%253) /* ty=Tensor[(14, 2, 4), float32] */;
  %259 = %256.3;
  %260 = @func_4787() /* ty=Tensor[(2016), float32] */;
  (%257, %258, %259, meta[relay.Constant][17] /* ty=Tensor[(2016), float32] */, %260)
}

def @func_2605(%var_2589: Tensor[(84), float32], %var_2590: Tensor[(1176, 1), float32]) -> (Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) {
  %261 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %262 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %263 = %262.0;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %265 = sinh(%264) /* ty=Tensor[(2016), float64] */;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %267 = cast(%var_2589, dtype="float32") /* ty=Tensor[(84), float32] */;
  %268 = cast(%var_2590, dtype="float32") /* ty=Tensor[(1176, 1), float32] */;
  %269 = reshape(%267, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %270 = reshape(%268, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %271 = @func_220(%269, %270) /* ty=Tensor[(6, 14, 14), float32] */;
  %272 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 14, 14), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %276 = %261.0;
  %277 = erf(%266) /* ty=Tensor[(2016), float32] */;
  %278 = floor_divide(%274, %275) /* ty=Tensor[(6, 14, 14), float64] */;
  (%276, %var_2589, %var_2590, %277, %278)
}

def @func_193(%var_190: Tensor[(9, 13, 4), float32]) -> (Tensor[(9, 13, 4), float32],) {
  %279 = cast(%var_190, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %280 = cosh(%279) /* ty=Tensor[(9, 13, 4), float32] */;
  (%280,)
}

def @func_3399(%var_3377: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(2016), float32]) {
  %281 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
  %282 = cast(%var_3377, dtype="float32") /* ty=Tensor[(84), float32] */;
  %283 = cast(meta[relay.Constant][19] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %284 = reshape(%282, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %285 = reshape(%283, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %286 = %281.0;
  %287 = @func_220(%284, %285) /* ty=Tensor[(6, 14, 14), float32] */;
  %288 = @func_2532() /* ty=Tensor[(2016), float32] */;
  (%286, %287, %var_3377, meta[relay.Constant][19] /* ty=Tensor[(1176), float32] */, %288)
}

def @func_3243(%var_3232: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
  %289 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %290 = %289.0;
  %291 = cast(%var_3232, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(1), int32] */;
  %293 = cast(%290, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?), bool] */;
  %295 = not_equal(%293, %294) /* ty=Tensor[(2016), bool] */;
  (%295,)
}

def @func_6870(%var_6867: Tensor[(1260), float64], %var_6868: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(1260), float64], Tensor[(42, 2), float32]) {
  %296 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
  %297 = cast(%var_6867, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %298 = cast(%var_6868, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %299 = reshape(%297, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %300 = reshape(%298, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %301 = @func_1941(%299, %300) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
  %302 = %296.1;
  %303 = %301.0;
  (%302, %303, %var_6867, %var_6868)
}

def @func_6722(%var_6713: Tensor[(14, 2, 4), int8]) -> Tensor[(14, 2, 4), bool] {
  %304 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %305 = %304.0;
  %306 = cast(%var_6713, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%308, %309) /* ty=Tensor[(14, 2, 4), bool] */
}

def @func_4749() -> (Tensor[(14, 2, 4), int8],) {
  %310 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %311 = %310.0;
  (%311,)
}

def @func_2492(%var_2470: Tensor[(360), float64]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) {
  %312 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %313 = cast(meta[relay.Constant][20] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %314 = cast(meta[relay.Constant][20] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %315 = cast(%var_2470, dtype="float64") /* ty=Tensor[(360), float64] */;
  %316 = %312.0;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %318 = reshape(%313, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %319 = reshape(%314, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %320 = reshape(%315, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %321 = reshape(%317, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %322 = @func_1298(%318, %319, %320, %321) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %323 = %322.2;
  (%316, %323, meta[relay.Constant][20] /* ty=Tensor[(156), int16] */, %var_2470)
}

def @func_4995() -> Tensor[(9, 14, 16), float32] {
  %324 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %324.0
}

def @func_6412(%var_6389: Tensor[(2016), float32]) -> (Tensor[(7, 15, 7), uint64], Tensor[(2016), bool]) {
  %325 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %326 = @func_4064() /* ty=(Tensor[(2016), float32],) */;
  %327 = %326.0;
  %328 = cast(%var_6389, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(1), int32] */;
  %330 = cast(%327, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %332 = minimum(%330, %331) /* ty=Tensor[(2016), uint64] */;
  %333 = cast(%327, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %334 = asinh(%333) /* ty=Tensor[(2016), float64] */;
  %335 = cast(%334, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %336 = shape_of(%332, dtype="int32") /* ty=Tensor[(1), int32] */;
  %337 = cast(%332, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?), bool] */;
  %339 = %325.1;
  %340 = less(%337, %338) /* ty=Tensor[(2016), bool] */;
  (%339, %340)
}

def @func_3405() -> (Tensor[(9, 14, 16), float32],) {
  %341 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  (%341,)
}

def @func_2076() -> (Tensor[(2016), float32],) {
  %342 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %343 = %342.2;
  (%343,)
}

def @func_2701(%var_2696: Tensor[(72), float64]) -> (Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) {
  %344 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %345 = cast(%var_2696, dtype="float64") /* ty=Tensor[(72), float64] */;
  %346 = cast(meta[relay.Constant][21] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %347 = reshape(%345, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %348 = reshape(%346, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %349 = %344.0;
  %350 = @func_50(%347, %348) /* ty=Tensor[(8, 9, 5), float32] */;
  (%349, %350, %var_2696, meta[relay.Constant][21] /* ty=Tensor[(360), float64] */)
}

def @func_2415(%var_2361: Tensor[(143), float32], %var_2387: Tensor[(1260), float64], %var_2388: Tensor[(84), float32], %var_2410: Tensor[(286), uint16]) -> (Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) {
  %351 = cast(%var_2361, dtype="float32") /* ty=Tensor[(143), float32] */;
  %352 = reshape(%351, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %353 = @func_166(%352) /* ty=(Tensor[(1, 11, 13), float32],) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(1, 11, 13), float64] */;
  %356 = cast(%var_2387, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %357 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %358 = reshape(%356, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %359 = reshape(%357, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %360 = @func_1941(%358, %359) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
  %361 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %363 = cast(meta[relay.Constant][22] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %364 = cast(meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %365 = reshape(%363, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %366 = reshape(%364, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %367 = @func_401(%365, %366) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %368 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %369 = %368.2;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %371 = cast(%var_2410, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %372 = cast(%var_2410, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %373 = cast(%var_2410, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %374 = cast(%var_2410, dtype="float32") /* ty=Tensor[(286), float32] */;
  %375 = reshape(%371, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %376 = reshape(%372, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %377 = reshape(%373, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %378 = reshape(%374, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %379 = @func_1775(%375, %376, %377, %378) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %380 = cast(meta[relay.Constant][24] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %381 = cast(meta[relay.Constant][24] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %382 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %383 = %360.3;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %385 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %386 = reshape(%380, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %387 = reshape(%381, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %388 = reshape(%382, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %389 = reshape(%384, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %390 = reshape(%385, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %391 = @func_1079(%386, %387, %388, %389, %390) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %392 = erf(%355) /* ty=Tensor[(1, 11, 13), float64] */;
  %393 = log2(%362) /* ty=Tensor[(9, 14, 16), float64] */;
  %394 = %367.1;
  %395 = log10(%370) /* ty=Tensor[(2016), float32] */;
  %396 = %379.5;
  %397 = %391.0;
  (%var_2361, %392, %383, %var_2387, %var_2388, %393, %394, meta[relay.Constant][22] /* ty=Tensor[(90), float64] */, meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, %395, %396, %var_2410, %397, meta[relay.Constant][24] /* ty=Tensor[(810), int8] */)
}

def @func_4284(%var_4212: Tensor[(5, 11, 13), uint32], %var_4213: Tensor[(5, 11, 13), uint32]) -> (Tensor[(5, 11, 13), float64], Tensor[(9, 14, 16), float32], Tensor[(5, 11, 13), float64]) {
  %398 = cast(%var_4213, dtype="uint32") /* ty=Tensor[(5, 11, 13), uint32] */;
  %399 = shape_of(%var_4212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%var_4212, dtype="uint32") /* ty=Tensor[(5, 11, 13), uint32] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %402 = multiply(%400, %401) /* ty=Tensor[(5, 11, 13), uint32] */;
  %403 = cast(%var_4213, dtype="bool") /* ty=Tensor[(5, 11, 13), bool] */;
  %404 = shape_of(%var_4212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_4212, dtype="bool") /* ty=Tensor[(5, 11, 13), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = less_equal(%405, %406) /* ty=Tensor[(5, 11, 13), bool] */;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %409 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%402, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %412 = @func_3405() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %413 = cast(%407, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %414 = divide(%410, %411) /* ty=Tensor[(5, 11, 13), float64] */;
  %415 = %412.0;
  %416 = cosh(%413) /* ty=Tensor[(5, 11, 13), float64] */;
  (%414, %415, %416)
}

def @func_3665(%var_3606: Tensor[(11, 15, 12), float64], %var_3620: Tensor[(1575), float64], %var_3621: Tensor[(42, 2), float32], %var_3623: Tensor[(143), float32]) -> (Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) {
  %417 = cast(%var_3606, dtype="float64") /* ty=Tensor[(11, 15, 12), float64] */;
  %418 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %419 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %420 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %421 = cast(meta[relay.Constant][25] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %422 = cast(%var_3623, dtype="float32") /* ty=Tensor[(143), float32] */;
  %423 = reshape(%418, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), float64] */;
  %424 = reshape(%419, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), float64] */;
  %425 = reshape(%420, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %426 = reshape(%421, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %427 = reshape(%422, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %428 = @func_1845(%423, %424, %425, %426, %427) /* ty=(Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) */;
  %429 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %430 = cast(meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %431 = cast(meta[relay.Constant][28] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %432 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %433 = cast(meta[relay.Constant][25] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %434 = reshape(%429, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %435 = reshape(%430, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %436 = reshape(%431, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %437 = reshape(%432, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %438 = reshape(%433, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %439 = @func_2872(%434, %435, %436, %437, %438) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %440 = cast(meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %441 = cast(meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %442 = cast(meta[relay.Constant][28] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %443 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %444 = %439.8;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %446 = reshape(%440, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %447 = reshape(%441, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %448 = reshape(%442, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %449 = reshape(%443, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %450 = reshape(%445, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %451 = @func_2775(%446, %447, %448, %449, %450) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) */;
  %452 = cos(%417) /* ty=Tensor[(11, 15, 12), float64] */;
  %453 = %428.0;
  %454 = %451.1;
  (%452, %453, %var_3620, %var_3621, meta[relay.Constant][25] /* ty=Tensor[(1176), float32] */, %var_3623, %444, meta[relay.Constant][26] /* ty=Tensor[(6, 12), float64] */, meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, meta[relay.Constant][28] /* ty=Tensor[(810), int8] */, %454)
}

def @func_3025(%var_3019: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) {
  %455 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %458 = cast(meta[relay.Constant][29] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %459 = cast(meta[relay.Constant][29] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %460 = cast(%var_3019, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %461 = cast(meta[relay.Constant][30] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %462 = cast(%var_3019, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %463 = reshape(%458, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %464 = reshape(%459, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %465 = reshape(%460, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %466 = reshape(%461, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %467 = reshape(%462, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %468 = @func_1079(%463, %464, %465, %466, %467) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %469 = log2(%457) /* ty=Tensor[(2016), float32] */;
  %470 = %468.2;
  (%469, %470, meta[relay.Constant][29] /* ty=Tensor[(810), int8] */, %var_3019, meta[relay.Constant][30] /* ty=Tensor[(1176), float32] */)
}

def @func_6898() -> (Tensor[(9, 14, 16), float32],) {
  %471 = @func_6092() /* ty=Tensor[(9, 14, 16), float32] */;
  (%471,)
}

def @func_6934() -> (Tensor[(2016), float32],) {
  %472 = @func_5508() /* ty=Tensor[(2016), float32] */;
  (%472,)
}

def @func_4438(%var_4414: Tensor[(90), float64]) -> (Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  %473 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %474 = %473.0;
  %475 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = cast(%var_4414, dtype="float64") /* ty=Tensor[(90), float64] */;
  %480 = cast(meta[relay.Constant][32] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %481 = reshape(%479, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %482 = reshape(%480, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %483 = @func_401(%481, %482) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %484 = greater_equal(%477, %478) /* ty=Tensor[(9, 14, 16), bool] */;
  %485 = %483.1;
  (%484, %485, %var_4414, meta[relay.Constant][32] /* ty=Tensor[(468), float32] */)
}

def @func_220(%var_214: Tensor[(6, 14, 1), float32], %var_215: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
  %486 = cast(%var_214, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
  %487 = cast(%var_215, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
  divide(%486, %487) /* ty=Tensor[(6, 14, 14), float32] */
}

def @func_2797() -> (Tensor[(9, 14, 16), float32],) {
  %488 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  (%488,)
}

def @func_6159(%var_6129: Tensor[(14, 5, 6), float64], %var_6141: Tensor[(1008, 2), float32], %var_6153: Tensor[(90), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(2016), bool], Tensor[(1008, 2), float64], Tensor[(9, 14, 16), bool], Tensor[(90), float64]) {
  %489 = cast(%var_6129, dtype="float64") /* ty=Tensor[(14, 5, 6), float64] */;
  %490 = cast(%var_6141, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
  %491 = reshape(%490, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %492 = @func_2121(%491) /* ty=(Tensor[(2016), bool],) */;
  %493 = cast(%var_6141, dtype="float64") /* ty=Tensor[(1008, 2), float64] */;
  %494 = cast(%var_6153, dtype="float64") /* ty=Tensor[(90), float64] */;
  %495 = reshape(%494, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %496 = @func_4438(%495) /* ty=(Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */;
  %497 = erf(%489) /* ty=Tensor[(14, 5, 6), float64] */;
  %498 = %492.0;
  %499 = erf(%493) /* ty=Tensor[(1008, 2), float64] */;
  %500 = %496.0;
  (%497, %498, %499, %500, %var_6153)
}

def @func_937(%var_932: Tensor[(7, 15, 7), uint64]) -> (Tensor[(7, 15, 7), uint64],) {
  %501 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 15, 1), uint64] */, dtype="uint64") /* ty=Tensor[(7, 15, 1), uint64] */;
  %502 = cast(%var_932, dtype="uint64") /* ty=Tensor[(7, 15, 7), uint64] */;
  %503 = logical_xor(%501, %502) /* ty=Tensor[(7, 15, 7), uint64] */;
  (%503,)
}

def @func_1298(%var_1254: Tensor[(2, 13, 6), int16], %var_1255: Tensor[(2, 13, 6), int16], %var_1279: Tensor[(360), float64], %var_1291: Tensor[(2016), float32]) -> (Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
  %504 = cast(%var_1255, dtype="int16") /* ty=Tensor[(2, 13, 6), int16] */;
  %505 = shape_of(%var_1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%var_1254, dtype="int16") /* ty=Tensor[(2, 13, 6), int16] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %508 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %509 = cast(%var_1279, dtype="float64") /* ty=Tensor[(360), float64] */;
  %510 = reshape(%508, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %511 = reshape(%509, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %512 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %513 = cast(%var_1279, dtype="float64") /* ty=Tensor[(360), float64] */;
  %514 = reshape(%512, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %515 = reshape(%513, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %516 = cast(%var_1291, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %517 = reshape(%516, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %518 = @func_21(%517) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %519 = maximum(%506, %507) /* ty=Tensor[(2, 13, 6), int16] */;
  %520 = @func_50(%510, %511) /* ty=Tensor[(8, 9, 5), float32] */;
  %521 = @func_50(%514, %515) /* ty=Tensor[(8, 9, 5), float32] */;
  %522 = %518.0;
  (%519, %520, meta[relay.Constant][34] /* ty=Tensor[(72), float64] */, %var_1279, %521, %522, %var_1291)
}

def @func_1775(%var_1709: Tensor[(2, 13, 11), uint16], %var_1710: Tensor[(2, 13, 11), uint16], %var_1736: Tensor[(2, 13, 11), uint32], %var_1751: Tensor[(2, 13, 11), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) {
  %523 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %524 = cast(meta[relay.Constant][36] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %525 = reshape(%523, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %526 = reshape(%524, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %527 = cast(%var_1710, dtype="int8") /* ty=Tensor[(2, 13, 11), int8] */;
  %528 = cast(%var_1710, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %529 = shape_of(%var_1709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_1709, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %532 = bitwise_or(%530, %531) /* ty=Tensor[(2, 13, 11), uint16] */;
  %533 = cast(%var_1709, dtype="uint32") /* ty=Tensor[(2, 13, 11), uint32] */;
  %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%532, dtype="uint32") /* ty=Tensor[(2, 13, 11), uint32] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %537 = multiply(%535, %536) /* ty=Tensor[(2, 13, 11), uint32] */;
  %538 = cast(%var_1736, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %542 = logical_and(%540, %541) /* ty=Tensor[(2, 13, 11), bool] */;
  %543 = cast(%542, dtype="int8") /* ty=Tensor[(2, 13, 11), int8] */;
  %544 = reshape(%527, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %545 = reshape(%543, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %546 = @func_1200(%544, %545) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %547 = cast(%537, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %548 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%532, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %551 = power(%549, %550) /* ty=Tensor[(2, 13, 11), float32] */;
  %552 = cast(%var_1751, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %556 = cast(%542, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %557 = @func_50(%525, %526) /* ty=Tensor[(8, 9, 5), float32] */;
  %558 = %546.1;
  %559 = subtract(%554, %555) /* ty=Tensor[(2, 13, 11), float32] */;
  %560 = sin(%556) /* ty=Tensor[(2, 13, 11), float32] */;
  (%557, meta[relay.Constant][35] /* ty=Tensor[(72), float64] */, meta[relay.Constant][36] /* ty=Tensor[(360), float64] */, %558, %559, %560)
}

def @func_5225(%var_5215: Tensor[(156), int16]) -> (Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) {
  %561 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 11), float32] */;
  %562 = reshape(%561, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %563 = @func_166(%562) /* ty=(Tensor[(1, 11, 13), float32],) */;
  %564 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
  %565 = @func_2532() /* ty=Tensor[(2016), float32] */;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %567 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %568 = cast(meta[relay.Constant][39] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %569 = reshape(%567, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %570 = reshape(%568, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %571 = @func_401(%569, %570) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %572 = cast(%var_5215, dtype="int16") /* ty=Tensor[(156), int16] */;
  %573 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %574 = cast(meta[relay.Constant][39] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %575 = reshape(%572, newshape=[156]) /* ty=Tensor[(156), int16] */;
  %576 = reshape(%573, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %577 = reshape(%574, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %578 = @func_4374(%575, %576, %577) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %579 = %563.0;
  %580 = %564.0;
  %581 = tan(%566) /* ty=Tensor[(2016), float64] */;
  %582 = %571.0;
  %583 = %578.0;
  (%579, meta[relay.Constant][37] /* ty=Tensor[(13, 11), float32] */, %580, %581, %582, meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, meta[relay.Constant][39] /* ty=Tensor[(468), float32] */, %583, %var_5215, meta[relay.Constant][40] /* ty=Tensor[(360), float64] */)
}

def @func_5777() -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) {
  %584 = cast(meta[relay.Constant][41] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %585 = reshape(%584, newshape=[156]) /* ty=Tensor[(156), int16] */;
  %586 = @func_5225(%585) /* ty=(Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %587 = @func_5014() /* ty=Tensor[(2016), float32] */;
  %588 = %586.6;
  (%587, %588, meta[relay.Constant][41] /* ty=Tensor[(156), int16] */)
}

def @func_166(%var_163: Tensor[(1, 11, 13), float32]) -> (Tensor[(1, 11, 13), float32],) {
  %589 = cast(%var_163, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
  %590 = tan(%589) /* ty=Tensor[(1, 11, 13), float32] */;
  (%590,)
}

def @func_1079(%var_1026: Tensor[(6, 9, 15), int8], %var_1027: Tensor[(6, 9, 15), int8], %var_1056: Tensor[(21, 4), float32], %var_1057: Tensor[(6, 196), float32], %var_1071: Tensor[(21, 4), float32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) {
  %591 = cast(%var_1027, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %592 = shape_of(%var_1026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%var_1026, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %595 = cast(%var_1056, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %596 = cast(%var_1057, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %597 = reshape(%595, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %598 = reshape(%596, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %599 = cast(%var_1071, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %600 = shape_of(%var_1056, dtype="int32") /* ty=Tensor[(2), int32] */;
  %601 = cast(%var_1056, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %603 = left_shift(%593, %594) /* ty=Tensor[(6, 9, 15), int8] */;
  %604 = @func_220(%597, %598) /* ty=Tensor[(6, 14, 14), float32] */;
  %605 = greater_equal(%601, %602) /* ty=Tensor[(21, 4), bool] */;
  (%603, %604, %var_1057, %605)
}

def @func_2301() -> Tensor[(9, 14, 16), float32] {
  %606 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %606.1
}

def @func_6575() -> Tensor[(9, 14, 16), float32] {
  @func_6092() /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_6127() -> Tensor[(468), float32] {
  %607 = @func_5777() /* ty=(Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) */;
  %607.1
}

def @func_6298() -> (Tensor[(14, 2, 12), bool],) {
  %608 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %609 = %608.0;
  (%609,)
}

def @func_4165(%var_4134: Tensor[(2, 8, 5), int8], %var_4135: Tensor[(2, 8, 5), int8], %var_4143: Tensor[(286), uint16]) -> (Tensor[(72), float64], Tensor[(286), uint16], Tensor[(2, 8, 5), uint16]) {
  %610 = cast(%var_4143, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %611 = cast(%var_4143, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %612 = cast(%var_4143, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %613 = cast(%var_4143, dtype="float32") /* ty=Tensor[(286), float32] */;
  %614 = reshape(%610, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %615 = reshape(%611, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %616 = reshape(%612, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %617 = reshape(%613, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %618 = @func_1775(%614, %615, %616, %617) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %619 = cast(%var_4135, dtype="int8") /* ty=Tensor[(2, 8, 5), int8] */;
  %620 = shape_of(%var_4134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%var_4134, dtype="int8") /* ty=Tensor[(2, 8, 5), int8] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %623 = right_shift(%621, %622) /* ty=Tensor[(2, 8, 5), int8] */;
  %624 = cast(%var_4134, dtype="uint16") /* ty=Tensor[(2, 8, 5), uint16] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="uint16") /* ty=Tensor[(2, 8, 5), uint16] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %628 = %618.1;
  %629 = maximum(%626, %627) /* ty=Tensor[(2, 8, 5), uint16] */;
  (%628, %var_4143, %629)
}

def @func_6755() -> Tensor[(7, 15, 7), uint64] {
  %630 = @func_6253() /* ty=(Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) */;
  %630.0
}

def @func_2532() -> Tensor[(2016), float32] {
  %631 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %631.0
}

def @func_4064() -> (Tensor[(2016), float32],) {
  %632 = @func_2532() /* ty=Tensor[(2016), float32] */;
  (%632,)
}

def @func_5478(%var_5450: Tensor[(1176), float32], %var_5472: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), bool], Tensor[(14, 2, 4), int8], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(6, 14, 14), float32], Tensor[(2016), float32], Tensor[(143), float32]) {
  %633 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %634 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %635 = %633.0;
  %636 = cast(%635, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %637 = reshape(%636, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %638 = @func_3243(%637) /* ty=(Tensor[(2016), bool],) */;
  %639 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %640 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %641 = cast(meta[relay.Constant][42] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %642 = cast(%var_5450, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %643 = reshape(%641, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %644 = reshape(%642, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %645 = cast(meta[relay.Constant][42] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %646 = reshape(%645, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %647 = @func_3757(%646) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %649 = cast(%var_5472, dtype="float32") /* ty=Tensor[(143), float32] */;
  %650 = reshape(%648, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %651 = reshape(%649, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %652 = @func_4644(%650, %651) /* ty=(Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) */;
  %653 = %634.0;
  %654 = %638.0;
  %655 = %639.0;
  %656 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %657 = %640.1;
  %658 = @func_220(%643, %644) /* ty=Tensor[(6, 14, 14), float32] */;
  %659 = %647.1;
  %660 = %652.0;
  (%635, %653, %654, %655, %656, %657, %658, meta[relay.Constant][42] /* ty=Tensor[(84), float32] */, %var_5450, %659, %660, %var_5472)
}

def @func_6253() -> (Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) {
  %661 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %662 = cast(meta[relay.Constant][43] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %663 = cast(meta[relay.Constant][44] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %664 = cast(meta[relay.Constant][43] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %665 = reshape(%662, newshape=[81, 10]) /* ty=Tensor[(81, 10), int8] */;
  %666 = reshape(%663, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %667 = reshape(%664, newshape=[81, 10]) /* ty=Tensor[(81, 10), int8] */;
  %668 = @func_5311(%665, %666, %667) /* ty=(Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) */;
  %669 = cast(meta[relay.Constant][44] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %670 = %661.1;
  %671 = %668.0;
  %672 = sin(%669) /* ty=Tensor[(1176), float32] */;
  (%670, %671, meta[relay.Constant][43] /* ty=Tensor[(810), int8] */, %672)
}

def @func_2872(%var_2840: Tensor[(72), float64], %var_2849: Tensor[(198), float64], %var_2850: Tensor[(810), int8], %var_2851: Tensor[(84), float32], %var_2852: Tensor[(1176), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) {
  %673 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
  %674 = %673.0;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %676 = reshape(%675, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %677 = @func_21(%676) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %678 = cast(%var_2840, dtype="float64") /* ty=Tensor[(72), float64] */;
  %679 = reshape(%678, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %680 = @func_2701(%679) /* ty=(Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) */;
  %681 = %680.1;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  %683 = cast(%var_2849, dtype="float64") /* ty=Tensor[(198), float64] */;
  %684 = cast(%var_2849, dtype="float64") /* ty=Tensor[(198), float64] */;
  %685 = cast(%var_2850, dtype="int8") /* ty=Tensor[(810), int8] */;
  %686 = cast(%var_2851, dtype="float32") /* ty=Tensor[(84), float32] */;
  %687 = cast(%var_2852, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %688 = reshape(%683, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %689 = reshape(%684, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %690 = reshape(%685, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %691 = reshape(%686, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %692 = reshape(%687, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %693 = @func_2775(%688, %689, %690, %691, %692) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) */;
  %694 = %677.0;
  %695 = asin(%682) /* ty=Tensor[(8, 9, 5), float64] */;
  %696 = %693.4;
  (%674, %694, %var_2840, %695, %696, %var_2849, %var_2850, %var_2851, %var_2852)
}

def @func_3087() -> (Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) {
  %697 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %698 = cast(meta[relay.Constant][45] /* ty=Tensor[(735), uint64] */, dtype="uint64") /* ty=Tensor[(735), uint64] */;
  %699 = reshape(%698, newshape=[7, 15, 7]) /* ty=Tensor[(7, 15, 7), uint64] */;
  %700 = @func_937(%699) /* ty=(Tensor[(7, 15, 7), uint64],) */;
  %701 = %697.1;
  %702 = %700.0;
  (%701, %702, meta[relay.Constant][45] /* ty=Tensor[(735), uint64] */)
}

def @func_2775(%var_2758: Tensor[(6, 3, 11), float64], %var_2759: Tensor[(6, 3, 11), float64], %var_2770: Tensor[(810), int8], %var_2771: Tensor[(84), float32], %var_2772: Tensor[(84, 14), float32]) -> (Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) {
  %703 = cast(%var_2759, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %704 = shape_of(%var_2758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_2758, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %707 = cast(%var_2770, dtype="int8") /* ty=Tensor[(810), int8] */;
  %708 = cast(%var_2770, dtype="int8") /* ty=Tensor[(810), int8] */;
  %709 = cast(%var_2771, dtype="float32") /* ty=Tensor[(84), float32] */;
  %710 = cast(%var_2772, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %711 = cast(%var_2771, dtype="float32") /* ty=Tensor[(84), float32] */;
  %712 = reshape(%707, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %713 = reshape(%708, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %714 = reshape(%709, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %715 = reshape(%710, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %716 = reshape(%711, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %717 = @func_1079(%712, %713, %714, %715, %716) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %718 = power(%705, %706) /* ty=Tensor[(6, 3, 11), float64] */;
  %719 = %717.3;
  (%718, %719, %var_2770, %var_2771, %var_2772)
}

def @func_4696() -> (Tensor[(2016), float32],) {
  %720 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
  %721 = %720.0;
  (%721,)
}

def @func_2219() -> (Tensor[(2016), float32],) {
  %722 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %723 = %722.0;
  (%723,)
}

def @func_4495() -> (Tensor[(14, 2, 4), int8],) {
  %724 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 1, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 1, 4), int8] */;
  %725 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 2, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
  %726 = left_shift(%724, %725) /* ty=Tensor[(14, 2, 4), int8] */;
  (%726,)
}

def @func_4787() -> Tensor[(2016), float32] {
  %727 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
  %727.0
}

def @func_5014() -> Tensor[(2016), float32] {
  %728 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
  %728.0
}

def @func_50(%var_41: Tensor[(8, 9, 1), float64], %var_42: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float32] {
  %729 = cast(%var_41, dtype="float64") /* ty=Tensor[(8, 9, 1), float64] */;
  %730 = cast(%var_42, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  %731 = divide(%729, %730) /* ty=Tensor[(8, 9, 5), float64] */;
  %732 = cast(%731, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  log(%732) /* ty=Tensor[(8, 9, 5), float32] */
}

def @func_5758(%var_5722: Tensor[(84), float32], %var_5738: Tensor[(13, 22), int8]) -> (Tensor[(2016), float32], Tensor[(143), float32], Tensor[(84), float32], Tensor[(143), float32], Tensor[(13, 2, 11), bool], Tensor[(13, 22), int8], Tensor[(360), float64], Tensor[(360), float64]) {
  %733 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %734 = cast(%var_5722, dtype="float32") /* ty=Tensor[(84), float32] */;
  %735 = cast(meta[relay.Constant][48] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %736 = reshape(%734, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %737 = reshape(%735, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %738 = @func_4644(%736, %737) /* ty=(Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) */;
  %739 = cast(%var_5738, dtype="int8") /* ty=Tensor[(13, 22), int8] */;
  %740 = cast(%var_5738, dtype="int8") /* ty=Tensor[(13, 22), int8] */;
  %741 = reshape(%739, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %742 = reshape(%740, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %743 = @func_1200(%741, %742) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %744 = @func_5264() /* ty=(Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) */;
  %745 = cast(%var_5738, dtype="uint16") /* ty=Tensor[(13, 22), uint16] */;
  %746 = %743.1;
  %747 = cast(%746, dtype="uint16") /* ty=Tensor[(13, 2, 11), uint16] */;
  %748 = cast(%var_5738, dtype="uint32") /* ty=Tensor[(13, 22), uint32] */;
  %749 = cast(%var_5738, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %750 = reshape(%745, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %751 = reshape(%747, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %752 = reshape(%748, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %753 = reshape(%749, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %754 = @func_1775(%750, %751, %752, %753) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %755 = %733.0;
  %756 = %738.5;
  %757 = %744.2;
  %758 = %754.2;
  (%755, %756, %var_5722, meta[relay.Constant][48] /* ty=Tensor[(143), float32] */, %746, %var_5738, %757, %758)
}

def @func_4106() -> Tensor[(2016), float32] {
  %759 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %759.0
}

def @func_5876(%var_5821: Tensor[(84), float32], %var_5822: Tensor[(143), float32]) -> (Tensor[(9, 140), float64], Tensor[(90, 14), float64], Tensor[(84), float32], Tensor[(143), float32], Tensor[(16, 11, 14), float64], Tensor[(2016), float32], Tensor[(1176), float32], Tensor[(16, 11, 14), float64]) {
  %760 = cast(meta[relay.Constant][49] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
  %761 = cast(%var_5821, dtype="float32") /* ty=Tensor[(84), float32] */;
  %762 = cast(%var_5822, dtype="float32") /* ty=Tensor[(143), float32] */;
  %763 = reshape(%760, newshape=[9, 140]) /* ty=Tensor[(9, 140), float64] */;
  %764 = reshape(%761, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %765 = reshape(%762, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %766 = @func_4006(%763, %764, %765) /* ty=(Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) */;
  %767 = cast(-9.43609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %768 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %769 = floor_mod(%767, %768) /* ty=Tensor[(16, 11, 14), float64] */;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %771 = cast(-9.43609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %772 = cast(%var_5821, dtype="float32") /* ty=Tensor[(84), float32] */;
  %773 = cast(meta[relay.Constant][51] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %774 = reshape(%772, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %775 = reshape(%773, newshape=[1176, 1]) /* ty=Tensor[(1176, 1), float32] */;
  %776 = @func_2605(%774, %775) /* ty=(Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) */;
  %777 = cast(%769, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %778 = %766.2;
  %779 = floor_divide(%770, %771) /* ty=Tensor[(16, 11, 14), float64] */;
  %780 = %776.0;
  %781 = cos(%777) /* ty=Tensor[(16, 11, 14), float64] */;
  (%778, meta[relay.Constant][49] /* ty=Tensor[(90, 14), float64] */, %var_5821, %var_5822, %779, %780, meta[relay.Constant][51] /* ty=Tensor[(1176), float32] */, %781)
}

def @func_4604(%var_4577: Tensor[(72), float64]) -> (Tensor[(84), float32], Tensor[(21, 4), float32], Tensor[(72), float64], Tensor[(72), float64], Tensor[(9, 14, 16), float64], Tensor[(9, 14, 16), float32]) {
  %782 = cast(meta[relay.Constant][52] /* ty=Tensor[(21, 4), float32] */, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %783 = reshape(%782, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %784 = @func_3757(%783) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %785 = cast(%var_4577, dtype="float64") /* ty=Tensor[(72), float64] */;
  %786 = reshape(%785, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %787 = @func_2701(%786) /* ty=(Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) */;
  %788 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %789 = %788.0;
  %790 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = equal(%792, %793) /* ty=Tensor[(9, 14, 16), bool] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %796 = asin(%795) /* ty=Tensor[(9, 14, 16), float64] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %798 = reshape(%797, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %799 = @func_21(%798) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %800 = %784.2;
  %801 = %787.2;
  %802 = %799.0;
  (%800, meta[relay.Constant][52] /* ty=Tensor[(21, 4), float32] */, %801, %var_4577, %796, %802)
}

def @func_6344() -> Tensor[(2016), float32] {
  @func_4787() /* ty=Tensor[(2016), float32] */
}

def @func_6512(%var_6480: Tensor[(143), float32], %var_6481: Tensor[(1260), float64]) -> (Tensor[(2016), float32], Tensor[(6, 9, 15), int8], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(13, 22), uint16], Tensor[(1176), float32], Tensor[(143), float64]) {
  %803 = @func_5264() /* ty=(Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) */;
  %804 = cast(%var_6480, dtype="float32") /* ty=Tensor[(143), float32] */;
  %805 = cast(%var_6481, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %806 = cast(meta[relay.Constant][54] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %807 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 22), uint16] */, dtype="uint16") /* ty=Tensor[(13, 22), uint16] */;
  %808 = reshape(%804, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %809 = reshape(%805, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %810 = reshape(%806, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %811 = reshape(%807, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %812 = @func_2415(%808, %809, %810, %811) /* ty=(Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) */;
  %813 = cast(meta[relay.Constant][54] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %814 = reshape(%813, newshape=[42, 2]) /* ty=Tensor[(42, 2), float32] */;
  %815 = @func_3025(%814) /* ty=(Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) */;
  %816 = cast(%var_6480, dtype="float32") /* ty=Tensor[(143), float32] */;
  %817 = tan(%816) /* ty=Tensor[(143), float32] */;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(143), float64] */;
  %819 = %803.1;
  %820 = %812.12;
  %821 = %815.4;
  %822 = acosh(%818) /* ty=Tensor[(143), float64] */;
  (%819, %820, %var_6481, meta[relay.Constant][54] /* ty=Tensor[(84), float32] */, meta[relay.Constant][55] /* ty=Tensor[(13, 22), uint16] */, %821, %822)
}

def @func_6833(%var_6774: uint32, %var_6775: Tensor[(15, 8, 14), uint32], %var_6806: Tensor[(18, 4), float64], %var_6808: Tensor[(588, 2), float32]) -> (Tensor[(15, 8, 14), uint32], Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(84), float32], Tensor[(18, 4), bool], Tensor[(588, 2), float64]) {
  %823 = cast(%var_6774, dtype="uint32") /* ty=uint32 */;
  %824 = cast(%var_6775, dtype="uint32") /* ty=Tensor[(15, 8, 14), uint32] */;
  %825 = @func_6298() /* ty=(Tensor[(14, 2, 12), bool],) */;
  %826 = cast(%var_6806, dtype="float64") /* ty=Tensor[(18, 4), float64] */;
  %827 = cast(meta[relay.Constant][56] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %828 = cast(%var_6808, dtype="float32") /* ty=Tensor[(588, 2), float32] */;
  %829 = reshape(%826, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %830 = reshape(%827, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %831 = reshape(%828, newshape=[12, 98]) /* ty=Tensor[(12, 98), float32] */;
  %832 = @func_3493(%829, %830, %831) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) */;
  %833 = cast(meta[relay.Constant][57] /* ty=Tensor[(18, 4), float64] */, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
  %834 = shape_of(%var_6806, dtype="int32") /* ty=Tensor[(2), int32] */;
  %835 = cast(%var_6806, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %837 = cast(%var_6808, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %838 = subtract(%823, %824) /* ty=Tensor[(15, 8, 14), uint32] */;
  %839 = %825.0;
  %840 = %832.8;
  %841 = greater(%835, %836) /* ty=Tensor[(18, 4), bool] */;
  %842 = atan(%837) /* ty=Tensor[(588, 2), float64] */;
  (%838, %839, %840, meta[relay.Constant][56] /* ty=Tensor[(84), float32] */, %841, %842)
}

def @main(%var_6969: Tensor[(112, 1), int8]) -> (Tensor[(14, 2, 4), bool], Tensor[(468), float32], Tensor[(112, 2016), float32]) {
  %843 = cast(%var_6969, dtype="int8") /* ty=Tensor[(112, 1), int8] */;
  %844 = reshape(%843, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int8] */;
  %845 = @func_5349() /* ty=(Tensor[(2016), float32], Tensor[(2016), float64]) */;
  %846 = %845.1;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %848 = atan(%847) /* ty=Tensor[(2016), float64] */;
  %849 = cast(%848, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %850 = cast(%var_6969, dtype="bool") /* ty=Tensor[(112, 1), bool] */;
  %851 = equal(%849, %850) /* ty=Tensor[(112, 2016), bool] */;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(112, 2016), float32] */;
  %853 = @func_6722(%844) /* ty=Tensor[(14, 2, 4), bool] */;
  %854 = @func_6127() /* ty=Tensor[(468), float32] */;
  %855 = log10(%852) /* ty=Tensor[(112, 2016), float32] */;
  (%853, %854, %855)
}

def @func_3596(%var_3558: Tensor[(72), float64], %var_3559: Tensor[(360), float64]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(5, ?, 5), bool], Tensor[(5, ?, 5), float64]) {
  %856 = cast(%var_3558, dtype="float64") /* ty=Tensor[(72), float64] */;
  %857 = cast(%var_3559, dtype="float64") /* ty=Tensor[(360), float64] */;
  %858 = reshape(%856, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %859 = reshape(%857, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %860 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 5), float32] */;
  %861 = asinh(%860) /* ty=Tensor[(5, 1, 5), float32] */;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %863 = sigmoid(%862) /* ty=Tensor[(5, 1, 5), float64] */;
  %864 = cast(%861, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %868 = cast(%863, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %869 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%861, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %872 = @func_50(%858, %859) /* ty=Tensor[(8, 9, 5), float32] */;
  %873 = greater(%866, %867) /* ty=Tensor[(5, ?, 5), bool] */;
  %874 = mod(%870, %871) /* ty=Tensor[(5, ?, 5), float64] */;
  (%872, %var_3558, %var_3559, %873, %874)
}

def @func_2999(%var_2968: Tensor[(10, 6, 10), float32], %var_2992: Tensor[(360), float64], %var_2993: Tensor[(2016), float32]) -> (Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) {
  %875 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %876 = shape_of(%var_2968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_2968, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %879 = cast(meta[relay.Constant][60] /* ty=Tensor[(286), int8] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %880 = cast(meta[relay.Constant][60] /* ty=Tensor[(286), int8] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %881 = reshape(%879, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %882 = reshape(%880, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %883 = @func_1200(%881, %882) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %884 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %885 = cast(meta[relay.Constant][61] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %886 = cast(meta[relay.Constant][61] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %887 = cast(%var_2992, dtype="float64") /* ty=Tensor[(360), float64] */;
  %888 = cast(%var_2993, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %889 = reshape(%885, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %890 = reshape(%886, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %891 = reshape(%887, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %892 = reshape(%888, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %893 = @func_1298(%889, %890, %891, %892) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %894 = multiply(%877, %878) /* ty=Tensor[(10, 6, 10), float32] */;
  %895 = %883.0;
  %896 = atan(%884) /* ty=Tensor[(10, 6, 10), float32] */;
  %897 = %893.3;
  (%894, %895, meta[relay.Constant][60] /* ty=Tensor[(286), int8] */, %896, %897, meta[relay.Constant][61] /* ty=Tensor[(156), int16] */, %var_2992, %var_2993)
}

def @func_2034() -> (Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
  %898 = cast(meta[relay.Constant][63] /* ty=Tensor[(14, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %899 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(14, 2, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %902 = cast(meta[relay.Constant][64] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %903 = reshape(%902, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %904 = @func_21(%903) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %905 = not_equal(%900, %901) /* ty=Tensor[(14, 2, 12), bool] */;
  %906 = %904.0;
  (%905, %906, meta[relay.Constant][64] /* ty=Tensor[(2016), float32] */)
}

def @func_5349() -> (Tensor[(2016), float32], Tensor[(2016), float64]) {
  %907 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %908 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %911 = sigmoid(%910) /* ty=Tensor[(2016), float64] */;
  %912 = cast(meta[relay.Constant][65] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(1), int32] */;
  %914 = cast(%911, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?), float64] */;
  %916 = %907.0;
  %917 = add(%914, %915) /* ty=Tensor[(2016), float64] */;
  (%916, %917)
}

def @func_3757(%var_3749: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) {
  %918 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %919 = %918.0;
  %920 = cast(%919, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %921 = cast(%var_3749, dtype="float32") /* ty=Tensor[(84), float32] */;
  %922 = cast(meta[relay.Constant][66] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %923 = reshape(%921, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %924 = reshape(%922, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %925 = acosh(%920) /* ty=Tensor[(2016), float32] */;
  %926 = @func_220(%923, %924) /* ty=Tensor[(6, 14, 14), float32] */;
  (%925, %926, %var_3749, meta[relay.Constant][66] /* ty=Tensor[(1176), float32] */)
}

def @func_4006(%var_3992: Tensor[(9, 140), float64], %var_3993: Tensor[(84), float32], %var_4001: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) {
  %927 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
  %928 = cast(meta[relay.Constant][67] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %929 = cast(%var_3992, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %930 = cast(%var_3993, dtype="float32") /* ty=Tensor[(84), float32] */;
  %931 = cast(meta[relay.Constant][68] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %932 = reshape(%928, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %933 = reshape(%929, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %934 = reshape(%930, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %935 = reshape(%931, newshape=[286]) /* ty=Tensor[(286), uint16] */;
  %936 = @func_2415(%932, %933, %934, %935) /* ty=(Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) */;
  %937 = cast(%var_4001, dtype="bool") /* ty=Tensor[(143), bool] */;
  %938 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(143), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %939 = cast(meta[relay.Constant][67] /* ty=Tensor[(143), float32] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?), bool] */;
  %941 = %927.0;
  %942 = %936.3;
  %943 = equal(%939, %940) /* ty=Tensor[(143), bool] */;
  (%941, %942, %var_3992, %var_3993, meta[relay.Constant][68] /* ty=Tensor[(286), uint16] */, %943)
}

def @func_4374(%var_4318: Tensor[(156), int16], %var_4319: Tensor[(6, 60), float64], %var_4352: Tensor[(468), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
  %944 = cast(%var_4318, dtype="int16") /* ty=Tensor[(156), int16] */;
  %945 = cast(%var_4318, dtype="int16") /* ty=Tensor[(156), int16] */;
  %946 = cast(%var_4319, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %947 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %948 = %947.0;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %950 = reshape(%944, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %951 = reshape(%945, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %952 = reshape(%946, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %953 = reshape(%949, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %954 = @func_1298(%950, %951, %952, %953) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %955 = cast(%948, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %956 = acosh(%955) /* ty=Tensor[(9, 14, 16), float32] */;
  %957 = cast(%948, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %961 = cast(%956, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %962 = cast(%var_4352, dtype="float32") /* ty=Tensor[(468), float32] */;
  %963 = reshape(%962, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), float32] */;
  %964 = @func_193(%963) /* ty=(Tensor[(9, 13, 4), float32],) */;
  %965 = %954.1;
  %966 = logical_and(%959, %960) /* ty=Tensor[(9, 14, 16), bool] */;
  %967 = log10(%961) /* ty=Tensor[(9, 14, 16), float32] */;
  %968 = %964.0;
  (%965, %var_4318, %var_4319, %966, %967, %968, %var_4352)
}

def @func_5508() -> Tensor[(2016), float32] {
  %969 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
  %969.0
}

def @func_5311(%var_5300: Tensor[(81, 10), int8], %var_5302: Tensor[(1176), float32], %var_5306: Tensor[(81, 10), int8]) -> (Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) {
  %970 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %971 = %970.2;
  %972 = cast(meta[relay.Constant][69] /* ty=Tensor[(360), float64] */, dtype="int8") /* ty=Tensor[(360), int8] */;
  %973 = shape_of(%971, dtype="int32") /* ty=Tensor[(1), int32] */;
  %974 = cast(%971, dtype="int8") /* ty=Tensor[(360), int8] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?), int8] */;
  %976 = cast(%var_5300, dtype="int8") /* ty=Tensor[(81, 10), int8] */;
  %977 = cast(%var_5300, dtype="int8") /* ty=Tensor[(81, 10), int8] */;
  %978 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %979 = cast(%var_5302, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %980 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %981 = reshape(%976, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %982 = reshape(%977, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %983 = reshape(%978, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %984 = reshape(%979, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %985 = reshape(%980, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %986 = @func_1079(%981, %982, %983, %984, %985) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %987 = cast(%var_5306, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %988 = shape_of(%var_5300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %989 = cast(%var_5300, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %991 = add(%974, %975) /* ty=Tensor[(360), int8] */;
  %992 = %986.2;
  %993 = greater(%989, %990) /* ty=Tensor[(81, 10), bool] */;
  (%991, %992, meta[relay.Constant][70] /* ty=Tensor[(1, 84), float32] */, %var_5302, %993)
}

def @func_2121(%var_2116: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
  %994 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %995 = %994.0;
  %996 = cast(%var_2116, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(1), int32] */;
  %998 = cast(%995, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1000 = equal(%998, %999) /* ty=Tensor[(2016), bool] */;
  (%1000,)
}

def @func_4644(%var_4637: Tensor[(84), float32], %var_4638: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) {
  %1001 = @func_4064() /* ty=(Tensor[(2016), float32],) */;
  %1002 = cast(meta[relay.Constant][71] /* ty=Tensor[(1980, 1), float64] */, dtype="float64") /* ty=Tensor[(1980, 1), float64] */;
  %1003 = cast(meta[relay.Constant][72] /* ty=Tensor[(1575), float64] */, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %1004 = cast(%var_4637, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1005 = cast(%var_4638, dtype="float32") /* ty=Tensor[(143), float32] */;
  %1006 = reshape(%1002, newshape=[11, 15, 12]) /* ty=Tensor[(11, 15, 12), float64] */;
  %1007 = reshape(%1003, newshape=[1575]) /* ty=Tensor[(1575), float64] */;
  %1008 = reshape(%1004, newshape=[42, 2]) /* ty=Tensor[(42, 2), float32] */;
  %1009 = reshape(%1005, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %1010 = @func_3665(%1006, %1007, %1008, %1009) /* ty=(Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) */;
  %1011 = %1001.0;
  %1012 = %1010.10;
  (%1011, %1012, meta[relay.Constant][71] /* ty=Tensor[(1980, 1), float64] */, meta[relay.Constant][72] /* ty=Tensor[(1575), float64] */, %var_4637, %var_4638)
}

def @func_21(%var_18: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32],) {
  %1013 = cast(%var_18, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %1014 = erf(%1013) /* ty=Tensor[(9, 14, 16), float32] */;
  (%1014,)
}

def @func_5264() -> (Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) {
  %1015 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %1016 = cast(meta[relay.Constant][73] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1017 = reshape(%1016, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1018 = @func_2492(%1017) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
  %1019 = %1015.0;
  %1020 = %1018.0;
  (%1019, %1020, meta[relay.Constant][73] /* ty=Tensor[(360), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4106() -> Tensor[(2016), float32] {
  %0 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %0.0
}

def @func_1086(%var_1081: Tensor[(6, 9, 15), int8], %var_1082: Tensor[(6, 9, 15), int8], %var_1083: Tensor[(21, 4), float32], %var_1084: Tensor[(6, 196), float32], %var_1085: Tensor[(21, 4), float32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) {
  @func_1079(%var_1081, %var_1082, %var_1083, %var_1084, %var_1085) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */
}

def @func_4379(%var_4376: Tensor[(156), int16], %var_4377: Tensor[(6, 60), float64], %var_4378: Tensor[(468), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
  @func_4374(%var_4376, %var_4377, %var_4378) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */
}

def @func_5351() -> (Tensor[(2016), float32], Tensor[(2016), float64]) {
  @func_5349() /* ty=(Tensor[(2016), float32], Tensor[(2016), float64]) */
}

def @func_4995() -> Tensor[(9, 14, 16), float32] {
  %1 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %1.0
}

def @func_6414(%var_6413: Tensor[(2016), float32]) -> (Tensor[(7, 15, 7), uint64], Tensor[(2016), bool]) {
  %18 = fn (%var_6389: Tensor[(2016), float32]) -> (Tensor[(7, 15, 7), uint64], Tensor[(2016), bool]) {
    %2 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
    %3 = @func_4064() /* ty=(Tensor[(2016), float32],) */;
    %4 = %3.0;
    %5 = cast(%var_6389, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
    %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(1), int32] */;
    %7 = cast(%4, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
    %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %9 = minimum(%7, %8) /* ty=Tensor[(2016), uint64] */;
    %10 = cast(%4, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %11 = asinh(%10) /* ty=Tensor[(2016), float64] */;
    %12 = cast(%11, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %13 = shape_of(%9, dtype="int32") /* ty=Tensor[(1), int32] */;
    %14 = cast(%9, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), bool] */;
    %16 = %2.1;
    %17 = less(%14, %15) /* ty=Tensor[(2016), bool] */;
    (%16, %17)
  };
  %18(%var_6413) /* ty=(Tensor[(7, 15, 7), uint64], Tensor[(2016), bool]) */
}

def @func_6039(%var_6034: uint64) -> (Tensor[(11, 12, 1), uint64],) {
  %19 = cast(%var_6034, dtype="uint64") /* ty=uint64 */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 12, 1), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 1), uint64] */;
  %21 = right_shift(%19, %20) /* ty=Tensor[(11, 12, 1), uint64] */;
  (%21,)
}

def @func_6337() -> (Tensor[(9, 14, 16), float64],) {
  @func_6335() /* ty=(Tensor[(9, 14, 16), float64],) */
}

def @func_6576() -> Tensor[(9, 14, 16), float32] {
  %22 = fn () -> Tensor[(9, 14, 16), float32] {
    @func_6092() /* ty=Tensor[(9, 14, 16), float32] */
  };
  %22() /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_2220() -> (Tensor[(2016), float32],) {
  %25 = fn () -> (Tensor[(2016), float32],) {
    %23 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %24 = %23.0;
    (%24,)
  };
  %25() /* ty=(Tensor[(2016), float32],) */
}

def @func_3243(%var_3232: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
  %26 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %27 = %26.0;
  %28 = cast(%var_3232, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(1), int32] */;
  %30 = cast(%27, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?), bool] */;
  %32 = not_equal(%30, %31) /* ty=Tensor[(2016), bool] */;
  (%32,)
}

def @func_4604(%var_4577: Tensor[(72), float64]) -> (Tensor[(84), float32], Tensor[(21, 4), float32], Tensor[(72), float64], Tensor[(72), float64], Tensor[(9, 14, 16), float64], Tensor[(9, 14, 16), float32]) {
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 4), float32] */, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %34 = reshape(%33, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %35 = @func_3757(%34) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %36 = cast(%var_4577, dtype="float64") /* ty=Tensor[(72), float64] */;
  %37 = reshape(%36, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %38 = @func_2701(%37) /* ty=(Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) */;
  %39 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %40 = %39.0;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %45 = equal(%43, %44) /* ty=Tensor[(9, 14, 16), bool] */;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %47 = asin(%46) /* ty=Tensor[(9, 14, 16), float64] */;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %49 = reshape(%48, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %50 = @func_21(%49) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %51 = %35.2;
  %52 = %38.2;
  %53 = %50.0;
  (%51, meta[relay.Constant][1] /* ty=Tensor[(21, 4), float32] */, %52, %var_4577, %47, %53)
}

def @func_2123(%var_2122: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
  %61 = fn (%var_2116: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
    %54 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %55 = %54.0;
    %56 = cast(%var_2116, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(1), int32] */;
    %58 = cast(%55, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?), bool] */;
    %60 = equal(%58, %59) /* ty=Tensor[(2016), bool] */;
    (%60,)
  };
  %61(%var_2122) /* ty=(Tensor[(2016), bool],) */
}

def @func_2704(%var_2702: Tensor[(72), float64]) -> (Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) {
  @func_2701(%var_2702) /* ty=(Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) */
}

def @func_4607(%var_4605: Tensor[(72), float64]) -> (Tensor[(84), float32], Tensor[(21, 4), float32], Tensor[(72), float64], Tensor[(72), float64], Tensor[(9, 14, 16), float64], Tensor[(9, 14, 16), float32]) {
  @func_4604(%var_4605) /* ty=(Tensor[(84), float32], Tensor[(21, 4), float32], Tensor[(72), float64], Tensor[(72), float64], Tensor[(9, 14, 16), float64], Tensor[(9, 14, 16), float32]) */
}

def @func_1945(%var_1943: Tensor[(12, 7, 15), float64], %var_1944: Tensor[(84, 1), float32]) -> (Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) {
  @func_1941(%var_1943, %var_1944) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */
}

def @func_3757(%var_3749: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) {
  %62 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %65 = cast(%var_3749, dtype="float32") /* ty=Tensor[(84), float32] */;
  %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %67 = reshape(%65, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %68 = reshape(%66, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %69 = acosh(%64) /* ty=Tensor[(2016), float32] */;
  %70 = @func_220(%67, %68) /* ty=Tensor[(6, 14, 14), float32] */;
  (%69, %70, %var_3749, meta[relay.Constant][3] /* ty=Tensor[(1176), float32] */)
}

def @func_5349() -> (Tensor[(2016), float32], Tensor[(2016), float64]) {
  %71 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %72 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %75 = sigmoid(%74) /* ty=Tensor[(2016), float64] */;
  %76 = cast(meta[relay.Constant][4] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(1), int32] */;
  %78 = cast(%75, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?), float64] */;
  %80 = %71.0;
  %81 = add(%78, %79) /* ty=Tensor[(2016), float64] */;
  (%80, %81)
}

def @func_5758(%var_5722: Tensor[(84), float32], %var_5738: Tensor[(13, 22), int8]) -> (Tensor[(2016), float32], Tensor[(143), float32], Tensor[(84), float32], Tensor[(143), float32], Tensor[(13, 2, 11), bool], Tensor[(13, 22), int8], Tensor[(360), float64], Tensor[(360), float64]) {
  %82 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %83 = cast(%var_5722, dtype="float32") /* ty=Tensor[(84), float32] */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %85 = reshape(%83, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %86 = reshape(%84, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %87 = @func_4644(%85, %86) /* ty=(Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) */;
  %88 = cast(%var_5738, dtype="int8") /* ty=Tensor[(13, 22), int8] */;
  %89 = cast(%var_5738, dtype="int8") /* ty=Tensor[(13, 22), int8] */;
  %90 = reshape(%88, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %91 = reshape(%89, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %92 = @func_1200(%90, %91) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %93 = @func_5264() /* ty=(Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) */;
  %94 = cast(%var_5738, dtype="uint16") /* ty=Tensor[(13, 22), uint16] */;
  %95 = %92.1;
  %96 = cast(%95, dtype="uint16") /* ty=Tensor[(13, 2, 11), uint16] */;
  %97 = cast(%var_5738, dtype="uint32") /* ty=Tensor[(13, 22), uint32] */;
  %98 = cast(%var_5738, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %99 = reshape(%94, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %100 = reshape(%96, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %101 = reshape(%97, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %102 = reshape(%98, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %103 = @func_1775(%99, %100, %101, %102) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %104 = %82.0;
  %105 = %87.5;
  %106 = %93.2;
  %107 = %103.2;
  (%104, %105, %var_5722, meta[relay.Constant][5] /* ty=Tensor[(143), float32] */, %95, %var_5738, %106, %107)
}

def @func_1303(%var_1299: Tensor[(2, 13, 6), int16], %var_1300: Tensor[(2, 13, 6), int16], %var_1301: Tensor[(360), float64], %var_1302: Tensor[(2016), float32]) -> (Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
  %127 = fn (%var_1254: Tensor[(2, 13, 6), int16], %var_1255: Tensor[(2, 13, 6), int16], %var_1279: Tensor[(360), float64], %var_1291: Tensor[(2016), float32]) -> (Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
    %108 = cast(%var_1255, dtype="int16") /* ty=Tensor[(2, 13, 6), int16] */;
    %109 = shape_of(%var_1254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %110 = cast(%var_1254, dtype="int16") /* ty=Tensor[(2, 13, 6), int16] */;
    %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %112 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %113 = cast(%var_1279, dtype="float64") /* ty=Tensor[(360), float64] */;
    %114 = reshape(%112, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
    %115 = reshape(%113, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
    %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %117 = cast(%var_1279, dtype="float64") /* ty=Tensor[(360), float64] */;
    %118 = reshape(%116, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
    %119 = reshape(%117, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
    %120 = cast(%var_1291, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %121 = reshape(%120, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
    %122 = @func_21(%121) /* ty=(Tensor[(9, 14, 16), float32],) */;
    %123 = maximum(%110, %111) /* ty=Tensor[(2, 13, 6), int16] */;
    %124 = @func_50(%114, %115) /* ty=Tensor[(8, 9, 5), float32] */;
    %125 = @func_50(%118, %119) /* ty=Tensor[(8, 9, 5), float32] */;
    %126 = %122.0;
    (%123, %124, meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, %var_1279, %125, %126, %var_1291)
  };
  %127(%var_1299, %var_1300, %var_1301, %var_1302) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */
}

def @func_6900() -> (Tensor[(9, 14, 16), float32],) {
  @func_6898() /* ty=(Tensor[(9, 14, 16), float32],) */
}

def @func_2743() -> (Tensor[(2016), float32],) {
  %129 = fn () -> (Tensor[(2016), float32],) {
    %128 = @func_2532() /* ty=Tensor[(2016), float32] */;
    (%128,)
  };
  %129() /* ty=(Tensor[(2016), float32],) */
}

def @func_3028(%var_3026: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) {
  @func_3025(%var_3026) /* ty=(Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) */
}

def @func_6299() -> (Tensor[(14, 2, 12), bool],) {
  %132 = fn () -> (Tensor[(14, 2, 12), bool],) {
    %130 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
    %131 = %130.0;
    (%131,)
  };
  %132() /* ty=(Tensor[(14, 2, 12), bool],) */
}

def @func_4696() -> (Tensor[(2016), float32],) {
  %133 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
  %134 = %133.0;
  (%134,)
}

def @func_3025(%var_3019: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) {
  %135 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %136 = %135.0;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %138 = cast(meta[relay.Constant][7] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %140 = cast(%var_3019, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %141 = cast(meta[relay.Constant][8] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %142 = cast(%var_3019, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %143 = reshape(%138, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %144 = reshape(%139, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %145 = reshape(%140, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %146 = reshape(%141, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %147 = reshape(%142, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %148 = @func_1079(%143, %144, %145, %146, %147) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %149 = log2(%137) /* ty=Tensor[(2016), float32] */;
  %150 = %148.2;
  (%149, %150, meta[relay.Constant][7] /* ty=Tensor[(810), int8] */, %var_3019, meta[relay.Constant][8] /* ty=Tensor[(1176), float32] */)
}

def @func_2782(%var_2777: Tensor[(6, 3, 11), float64], %var_2778: Tensor[(6, 3, 11), float64], %var_2779: Tensor[(810), int8], %var_2780: Tensor[(84), float32], %var_2781: Tensor[(84, 14), float32]) -> (Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) {
  @func_2775(%var_2777, %var_2778, %var_2779, %var_2780, %var_2781) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) */
}

def @func_2878(%var_2873: Tensor[(72), float64], %var_2874: Tensor[(198), float64], %var_2875: Tensor[(810), int8], %var_2876: Tensor[(84), float32], %var_2877: Tensor[(1176), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) {
  %175 = fn (%var_2840: Tensor[(72), float64], %var_2849: Tensor[(198), float64], %var_2850: Tensor[(810), int8], %var_2851: Tensor[(84), float32], %var_2852: Tensor[(1176), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) {
    %151 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
    %152 = %151.0;
    %153 = cast(%152, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %154 = reshape(%153, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
    %155 = @func_21(%154) /* ty=(Tensor[(9, 14, 16), float32],) */;
    %156 = cast(%var_2840, dtype="float64") /* ty=Tensor[(72), float64] */;
    %157 = reshape(%156, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %158 = @func_2701(%157) /* ty=(Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) */;
    %159 = %158.1;
    %160 = cast(%159, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
    %161 = cast(%var_2849, dtype="float64") /* ty=Tensor[(198), float64] */;
    %162 = cast(%var_2849, dtype="float64") /* ty=Tensor[(198), float64] */;
    %163 = cast(%var_2850, dtype="int8") /* ty=Tensor[(810), int8] */;
    %164 = cast(%var_2851, dtype="float32") /* ty=Tensor[(84), float32] */;
    %165 = cast(%var_2852, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %166 = reshape(%161, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
    %167 = reshape(%162, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
    %168 = reshape(%163, newshape=[810]) /* ty=Tensor[(810), int8] */;
    %169 = reshape(%164, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %170 = reshape(%165, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
    %171 = @func_2775(%166, %167, %168, %169, %170) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) */;
    %172 = %155.0;
    %173 = asin(%160) /* ty=Tensor[(8, 9, 5), float64] */;
    %174 = %171.4;
    (%152, %172, %var_2840, %173, %174, %var_2849, %var_2850, %var_2851, %var_2852)
  };
  %175(%var_2873, %var_2874, %var_2875, %var_2876, %var_2877) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) */
}

def @func_6346() -> Tensor[(2016), float32] {
  @func_6344() /* ty=Tensor[(2016), float32] */
}

def @func_3720(%var_3719: Tensor[(72), float64]) -> (Tensor[(735), uint64], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(84), float32], Tensor[(1176), float32]) {
  %186 = fn (%var_3705: Tensor[(72), float64]) -> (Tensor[(735), uint64], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(84), float32], Tensor[(1176), float32]) {
    %176 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
    %177 = cast(%var_3705, dtype="float64") /* ty=Tensor[(72), float64] */;
    %178 = cast(meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %179 = cast(meta[relay.Constant][10] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %180 = reshape(%177, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %181 = reshape(%178, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %182 = reshape(%179, newshape=[12, 98]) /* ty=Tensor[(12, 98), float32] */;
    %183 = @func_3493(%180, %181, %182) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) */;
    %184 = %176.2;
    %185 = %183.8;
    (%184, %185, %var_3705, meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, meta[relay.Constant][10] /* ty=Tensor[(1176), float32] */)
  };
  %186(%var_3719) /* ty=(Tensor[(735), uint64], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(84), float32], Tensor[(1176), float32]) */
}

def @func_2999(%var_2968: Tensor[(10, 6, 10), float32], %var_2992: Tensor[(360), float64], %var_2993: Tensor[(2016), float32]) -> (Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) {
  %187 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %188 = shape_of(%var_2968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_2968, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(286), int8] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %192 = cast(meta[relay.Constant][12] /* ty=Tensor[(286), int8] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %193 = reshape(%191, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %194 = reshape(%192, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %195 = @func_1200(%193, %194) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %198 = cast(meta[relay.Constant][13] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %199 = cast(%var_2992, dtype="float64") /* ty=Tensor[(360), float64] */;
  %200 = cast(%var_2993, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %201 = reshape(%197, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %202 = reshape(%198, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %203 = reshape(%199, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %204 = reshape(%200, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %205 = @func_1298(%201, %202, %203, %204) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %206 = multiply(%189, %190) /* ty=Tensor[(10, 6, 10), float32] */;
  %207 = %195.0;
  %208 = atan(%196) /* ty=Tensor[(10, 6, 10), float32] */;
  %209 = %205.3;
  (%206, %207, meta[relay.Constant][12] /* ty=Tensor[(286), int8] */, %208, %209, meta[relay.Constant][13] /* ty=Tensor[(156), int16] */, %var_2992, %var_2993)
}

def @func_1781(%var_1777: Tensor[(2, 13, 11), uint16], %var_1778: Tensor[(2, 13, 11), uint16], %var_1779: Tensor[(2, 13, 11), uint32], %var_1780: Tensor[(2, 13, 11), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) {
  @func_1775(%var_1777, %var_1778, %var_1779, %var_1780) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */
}

def @func_1079(%var_1026: Tensor[(6, 9, 15), int8], %var_1027: Tensor[(6, 9, 15), int8], %var_1056: Tensor[(21, 4), float32], %var_1057: Tensor[(6, 196), float32], %var_1071: Tensor[(21, 4), float32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) {
  %210 = cast(%var_1027, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %211 = shape_of(%var_1026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%var_1026, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %214 = cast(%var_1056, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %215 = cast(%var_1057, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %216 = reshape(%214, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %217 = reshape(%215, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %218 = cast(%var_1071, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %219 = shape_of(%var_1056, dtype="int32") /* ty=Tensor[(2), int32] */;
  %220 = cast(%var_1056, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %222 = left_shift(%212, %213) /* ty=Tensor[(6, 9, 15), int8] */;
  %223 = @func_220(%216, %217) /* ty=Tensor[(6, 14, 14), float32] */;
  %224 = greater_equal(%220, %221) /* ty=Tensor[(21, 4), bool] */;
  (%222, %223, %var_1057, %224)
}

def @func_3089() -> (Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) {
  @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */
}

def @func_6093() -> Tensor[(9, 14, 16), float32] {
  %226 = fn () -> Tensor[(9, 14, 16), float32] {
    %225 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
    %225.0
  };
  %226() /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_2701(%var_2696: Tensor[(72), float64]) -> (Tensor[(14, 2, 12), bool], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64]) {
  %227 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %228 = cast(%var_2696, dtype="float64") /* ty=Tensor[(72), float64] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %230 = reshape(%228, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %231 = reshape(%229, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %232 = %227.0;
  %233 = @func_50(%230, %231) /* ty=Tensor[(8, 9, 5), float32] */;
  (%232, %233, %var_2696, meta[relay.Constant][14] /* ty=Tensor[(360), float64] */)
}

def @func_3665(%var_3606: Tensor[(11, 15, 12), float64], %var_3620: Tensor[(1575), float64], %var_3621: Tensor[(42, 2), float32], %var_3623: Tensor[(143), float32]) -> (Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) {
  %234 = cast(%var_3606, dtype="float64") /* ty=Tensor[(11, 15, 12), float64] */;
  %235 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %236 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %237 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %238 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %239 = cast(%var_3623, dtype="float32") /* ty=Tensor[(143), float32] */;
  %240 = reshape(%235, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), float64] */;
  %241 = reshape(%236, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), float64] */;
  %242 = reshape(%237, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %243 = reshape(%238, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %244 = reshape(%239, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %245 = @func_1845(%240, %241, %242, %243, %244) /* ty=(Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) */;
  %246 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %247 = cast(meta[relay.Constant][17] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %248 = cast(meta[relay.Constant][18] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %249 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %250 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %251 = reshape(%246, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %252 = reshape(%247, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %253 = reshape(%248, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %254 = reshape(%249, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %255 = reshape(%250, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %256 = @func_2872(%251, %252, %253, %254, %255) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %257 = cast(meta[relay.Constant][17] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %258 = cast(meta[relay.Constant][17] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %259 = cast(meta[relay.Constant][18] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %260 = cast(%var_3621, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %261 = %256.8;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %263 = reshape(%257, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %264 = reshape(%258, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %265 = reshape(%259, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %266 = reshape(%260, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %267 = reshape(%262, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %268 = @func_2775(%263, %264, %265, %266, %267) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) */;
  %269 = cos(%234) /* ty=Tensor[(11, 15, 12), float64] */;
  %270 = %245.0;
  %271 = %268.1;
  (%269, %270, %var_3620, %var_3621, meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, %var_3623, %261, meta[relay.Constant][16] /* ty=Tensor[(6, 12), float64] */, meta[relay.Constant][17] /* ty=Tensor[(198), float64] */, meta[relay.Constant][18] /* ty=Tensor[(810), int8] */, %271)
}

def @func_3087() -> (Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) {
  %272 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %273 = cast(meta[relay.Constant][19] /* ty=Tensor[(735), uint64] */, dtype="uint64") /* ty=Tensor[(735), uint64] */;
  %274 = reshape(%273, newshape=[7, 15, 7]) /* ty=Tensor[(7, 15, 7), uint64] */;
  %275 = @func_937(%274) /* ty=(Tensor[(7, 15, 7), uint64],) */;
  %276 = %272.1;
  %277 = %275.0;
  (%276, %277, meta[relay.Constant][19] /* ty=Tensor[(735), uint64] */)
}

def @func_3401(%var_3400: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(2016), float32]) {
  %286 = fn (%var_3377: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(2016), float32]) {
    %278 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
    %279 = cast(%var_3377, dtype="float32") /* ty=Tensor[(84), float32] */;
    %280 = cast(meta[relay.Constant][20] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %281 = reshape(%279, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
    %282 = reshape(%280, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
    %283 = %278.0;
    %284 = @func_220(%281, %282) /* ty=Tensor[(6, 14, 14), float32] */;
    %285 = @func_2532() /* ty=Tensor[(2016), float32] */;
    (%283, %284, %var_3377, meta[relay.Constant][20] /* ty=Tensor[(1176), float32] */, %285)
  };
  %286(%var_3400) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(2016), float32]) */
}

def @func_1565(%var_1563: Tensor[(13, 9, 2), float64]) -> Tensor[(13, 9, 2), float64] {
  @func_1562(%var_1563) /* ty=Tensor[(13, 9, 2), float64] */
}

def @func_3406() -> (Tensor[(9, 14, 16), float32],) {
  %288 = fn () -> (Tensor[(9, 14, 16), float32],) {
    %287 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
    (%287,)
  };
  %288() /* ty=(Tensor[(9, 14, 16), float32],) */
}

def @func_4170(%var_4167: Tensor[(2, 8, 5), int8], %var_4168: Tensor[(2, 8, 5), int8], %var_4169: Tensor[(286), uint16]) -> (Tensor[(72), float64], Tensor[(286), uint16], Tensor[(2, 8, 5), uint16]) {
  @func_4165(%var_4167, %var_4168, %var_4169) /* ty=(Tensor[(72), float64], Tensor[(286), uint16], Tensor[(2, 8, 5), uint16]) */
}

def @func_4010(%var_4007: Tensor[(9, 140), float64], %var_4008: Tensor[(84), float32], %var_4009: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) {
  %306 = fn (%var_3992: Tensor[(9, 140), float64], %var_3993: Tensor[(84), float32], %var_4001: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) {
    %289 = @func_2742() /* ty=(Tensor[(2016), float32],) */;
    %290 = cast(meta[relay.Constant][21] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
    %291 = cast(%var_3992, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
    %292 = cast(%var_3993, dtype="float32") /* ty=Tensor[(84), float32] */;
    %293 = cast(meta[relay.Constant][22] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
    %294 = reshape(%290, newshape=[143]) /* ty=Tensor[(143), float32] */;
    %295 = reshape(%291, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %296 = reshape(%292, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %297 = reshape(%293, newshape=[286]) /* ty=Tensor[(286), uint16] */;
    %298 = @func_2415(%294, %295, %296, %297) /* ty=(Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) */;
    %299 = cast(%var_4001, dtype="bool") /* ty=Tensor[(143), bool] */;
    %300 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(143), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %301 = cast(meta[relay.Constant][21] /* ty=Tensor[(143), float32] */, dtype="bool") /* ty=Tensor[(143), bool] */;
    %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?), bool] */;
    %303 = %289.0;
    %304 = %298.3;
    %305 = equal(%301, %302) /* ty=Tensor[(143), bool] */;
    (%303, %304, %var_3992, %var_3993, meta[relay.Constant][22] /* ty=Tensor[(286), uint16] */, %305)
  };
  %306(%var_4007, %var_4008, %var_4009) /* ty=(Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) */
}

def @func_5482(%var_5480: Tensor[(1176), float32], %var_5481: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), bool], Tensor[(14, 2, 4), int8], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(6, 14, 14), float32], Tensor[(2016), float32], Tensor[(143), float32]) {
  @func_5478(%var_5480, %var_5481) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), bool], Tensor[(14, 2, 4), int8], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(6, 14, 14), float32], Tensor[(2016), float32], Tensor[(143), float32]) */
}

def @func_4441(%var_4439: Tensor[(90), float64]) -> (Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  @func_4438(%var_4439) /* ty=(Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */
}

def @func_2169(%var_2167: Tensor[(2016), float32], %var_2168: Tensor[(2016), uint16]) -> Tensor[(2016), bool] {
  %323 = fn (%var_2142: Tensor[(2016), float32], %var_2153: Tensor[(2016), uint16]) -> Tensor[(2016), bool] {
    %307 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %308 = %307.0;
    %309 = cast(%var_2142, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
    %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(1), int32] */;
    %311 = cast(%308, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
    %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %313 = bitwise_or(%311, %312) /* ty=Tensor[(2016), uint8] */;
    %314 = cast(%313, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
    %315 = shape_of(%var_2142, dtype="int32") /* ty=Tensor[(1), int32] */;
    %316 = cast(%var_2142, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %318 = bitwise_xor(%316, %317) /* ty=Tensor[(2016), uint16] */;
    %319 = cast(%var_2153, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(1), int32] */;
    %321 = cast(%318, dtype="bool") /* ty=Tensor[(2016), bool] */;
    %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?), bool] */;
    logical_and(%321, %322) /* ty=Tensor[(2016), bool] */
  };
  %323(%var_2167, %var_2168) /* ty=Tensor[(2016), bool] */
}

def @func_2077() -> (Tensor[(2016), float32],) {
  %326 = fn () -> (Tensor[(2016), float32],) {
    %324 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
    %325 = %324.2;
    (%325,)
  };
  %326() /* ty=(Tensor[(2016), float32],) */
}

def @func_23(%var_22: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32],) {
  %329 = fn (%var_18: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32],) {
    %327 = cast(%var_18, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
    %328 = erf(%327) /* ty=Tensor[(9, 14, 16), float32] */;
    (%328,)
  };
  %329(%var_22) /* ty=(Tensor[(9, 14, 16), float32],) */
}

def @func_3498(%var_3495: Tensor[(72), float64], %var_3496: Tensor[(84), float32], %var_3497: Tensor[(12, 98), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) {
  @func_3493(%var_3495, %var_3496, %var_3497) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) */
}

def @func_5227(%var_5226: Tensor[(156), int16]) -> (Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) {
  %353 = fn (%var_5215: Tensor[(156), int16]) -> (Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) {
    %330 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 11), float32] */;
    %331 = reshape(%330, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
    %332 = @func_166(%331) /* ty=(Tensor[(1, 11, 13), float32],) */;
    %333 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
    %334 = @func_2532() /* ty=Tensor[(2016), float32] */;
    %335 = cast(%334, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %337 = cast(meta[relay.Constant][25] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %338 = reshape(%336, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
    %339 = reshape(%337, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %340 = @func_401(%338, %339) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
    %341 = cast(%var_5215, dtype="int16") /* ty=Tensor[(156), int16] */;
    %342 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %343 = cast(meta[relay.Constant][25] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %344 = reshape(%341, newshape=[156]) /* ty=Tensor[(156), int16] */;
    %345 = reshape(%342, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
    %346 = reshape(%343, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %347 = @func_4374(%344, %345, %346) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
    %348 = %332.0;
    %349 = %333.0;
    %350 = tan(%335) /* ty=Tensor[(2016), float64] */;
    %351 = %340.0;
    %352 = %347.0;
    (%348, meta[relay.Constant][23] /* ty=Tensor[(13, 11), float32] */, %349, %350, %351, meta[relay.Constant][24] /* ty=Tensor[(90), float64] */, meta[relay.Constant][25] /* ty=Tensor[(468), float32] */, %352, %var_5215, meta[relay.Constant][26] /* ty=Tensor[(360), float64] */)
  };
  %353(%var_5226) /* ty=(Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) */
}

def @func_5596(%var_5594: Tensor[(14, 2, 4), int8]) -> (Tensor[(14, 2, 4), float64], Tensor[(14, 2, 4), float32], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2016), float32]) {
  @func_5593(%var_5594) /* ty=(Tensor[(14, 2, 4), float64], Tensor[(14, 2, 4), float32], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2016), float32]) */
}

def @func_2302() -> Tensor[(9, 14, 16), float32] {
  %355 = fn () -> Tensor[(9, 14, 16), float32] {
    %354 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
    %354.1
  };
  %355() /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_6253() -> (Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) {
  %356 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %357 = cast(meta[relay.Constant][27] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %358 = cast(meta[relay.Constant][28] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %359 = cast(meta[relay.Constant][27] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %360 = reshape(%357, newshape=[81, 10]) /* ty=Tensor[(81, 10), int8] */;
  %361 = reshape(%358, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %362 = reshape(%359, newshape=[81, 10]) /* ty=Tensor[(81, 10), int8] */;
  %363 = @func_5311(%360, %361, %362) /* ty=(Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %365 = %356.1;
  %366 = %363.0;
  %367 = sin(%364) /* ty=Tensor[(1176), float32] */;
  (%365, %366, meta[relay.Constant][27] /* ty=Tensor[(810), int8] */, %367)
}

def @func_2494(%var_2493: Tensor[(360), float64]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) {
  %380 = fn (%var_2470: Tensor[(360), float64]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) {
    %368 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %369 = cast(meta[relay.Constant][29] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
    %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
    %371 = cast(%var_2470, dtype="float64") /* ty=Tensor[(360), float64] */;
    %372 = %368.0;
    %373 = cast(%372, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %374 = reshape(%369, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
    %375 = reshape(%370, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
    %376 = reshape(%371, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %377 = reshape(%373, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
    %378 = @func_1298(%374, %375, %376, %377) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
    %379 = %378.2;
    (%372, %379, meta[relay.Constant][29] /* ty=Tensor[(156), int16] */, %var_2470)
  };
  %380(%var_2493) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */
}

def @func_6724(%var_6723: Tensor[(14, 2, 4), int8]) -> Tensor[(14, 2, 4), bool] {
  %387 = fn (%var_6713: Tensor[(14, 2, 4), int8]) -> Tensor[(14, 2, 4), bool] {
    %381 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
    %382 = %381.0;
    %383 = cast(%var_6713, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
    %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%382, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%385, %386) /* ty=Tensor[(14, 2, 4), bool] */
  };
  %387(%var_6723) /* ty=Tensor[(14, 2, 4), bool] */
}

def @func_3600(%var_3598: Tensor[(72), float64], %var_3599: Tensor[(360), float64]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(5, ?, 5), bool], Tensor[(5, ?, 5), float64]) {
  @func_3596(%var_3598, %var_3599) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(5, ?, 5), bool], Tensor[(5, ?, 5), float64]) */
}

def @func_3339(%var_3289: Tensor[(9, 14, 16), float32], %var_3298: Tensor[(600), float32]) -> (Tensor[(9, 14, 16), uint64], Tensor[(9, 14, 16), float64], Tensor[(360), float64], Tensor[(600), float32], Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32]) {
  %388 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %389 = %388.0;
  %390 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 16), float32] */, dtype="uint64") /* ty=Tensor[(9, 14, 16), uint64] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="uint64") /* ty=Tensor[(9, 14, 16), uint64] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %394 = cast(%var_3289, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %395 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 16), float32] */, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %398 = cast(%var_3298, dtype="float32") /* ty=Tensor[(600), float32] */;
  %399 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %400 = multiply(%392, %393) /* ty=Tensor[(9, 14, 16), uint64] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %402 = reshape(%398, newshape=[10, 6, 10]) /* ty=Tensor[(10, 6, 10), float32] */;
  %403 = reshape(%399, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %404 = reshape(%401, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %405 = @func_2999(%402, %403, %404) /* ty=(Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) */;
  %406 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %407 = cast(%var_3289, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %408 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %411 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %412 = subtract(%396, %397) /* ty=Tensor[(9, 14, 16), float64] */;
  %413 = %405.6;
  %414 = %406.0;
  %415 = floor_divide(%409, %410) /* ty=Tensor[(9, 14, 16), float32] */;
  %416 = %411.0;
  (%400, %412, %413, %var_3298, meta[relay.Constant][31] /* ty=Tensor[(360), float64] */, %414, %415, %416)
}

def @func_3596(%var_3558: Tensor[(72), float64], %var_3559: Tensor[(360), float64]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(5, ?, 5), bool], Tensor[(5, ?, 5), float64]) {
  %417 = cast(%var_3558, dtype="float64") /* ty=Tensor[(72), float64] */;
  %418 = cast(%var_3559, dtype="float64") /* ty=Tensor[(360), float64] */;
  %419 = reshape(%417, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %420 = reshape(%418, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %421 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 5), float32] */;
  %422 = asinh(%421) /* ty=Tensor[(5, 1, 5), float32] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %424 = sigmoid(%423) /* ty=Tensor[(5, 1, 5), float64] */;
  %425 = cast(%422, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %429 = cast(%424, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %430 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%422, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %433 = @func_50(%419, %420) /* ty=Tensor[(8, 9, 5), float32] */;
  %434 = greater(%427, %428) /* ty=Tensor[(5, ?, 5), bool] */;
  %435 = mod(%431, %432) /* ty=Tensor[(5, ?, 5), float64] */;
  (%433, %var_3558, %var_3559, %434, %435)
}

def @func_4648(%var_4646: Tensor[(84), float32], %var_4647: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) {
  @func_4644(%var_4646, %var_4647) /* ty=(Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) */
}

def @func_6449(%var_6447: Tensor[(360), float64], %var_6448: Tensor[(286), uint16]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(286), uint16]) {
  @func_6445(%var_6447, %var_6448) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(286), uint16]) */
}

def @func_1775(%var_1709: Tensor[(2, 13, 11), uint16], %var_1710: Tensor[(2, 13, 11), uint16], %var_1736: Tensor[(2, 13, 11), uint32], %var_1751: Tensor[(2, 13, 11), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) {
  %436 = cast(meta[relay.Constant][33] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %437 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %438 = reshape(%436, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float64] */;
  %439 = reshape(%437, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float64] */;
  %440 = cast(%var_1710, dtype="int8") /* ty=Tensor[(2, 13, 11), int8] */;
  %441 = cast(%var_1710, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %442 = shape_of(%var_1709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_1709, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %445 = bitwise_or(%443, %444) /* ty=Tensor[(2, 13, 11), uint16] */;
  %446 = cast(%var_1709, dtype="uint32") /* ty=Tensor[(2, 13, 11), uint32] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="uint32") /* ty=Tensor[(2, 13, 11), uint32] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %450 = multiply(%448, %449) /* ty=Tensor[(2, 13, 11), uint32] */;
  %451 = cast(%var_1736, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = logical_and(%453, %454) /* ty=Tensor[(2, 13, 11), bool] */;
  %456 = cast(%455, dtype="int8") /* ty=Tensor[(2, 13, 11), int8] */;
  %457 = reshape(%440, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %458 = reshape(%456, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), int8] */;
  %459 = @func_1200(%457, %458) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */;
  %460 = cast(%450, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %461 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%445, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %464 = power(%462, %463) /* ty=Tensor[(2, 13, 11), float32] */;
  %465 = cast(%var_1751, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %469 = cast(%455, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %470 = @func_50(%438, %439) /* ty=Tensor[(8, 9, 5), float32] */;
  %471 = %459.1;
  %472 = subtract(%467, %468) /* ty=Tensor[(2, 13, 11), float32] */;
  %473 = sin(%469) /* ty=Tensor[(2, 13, 11), float32] */;
  (%470, meta[relay.Constant][33] /* ty=Tensor[(72), float64] */, meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, %471, %472, %473)
}

def @func_3004(%var_3001: Tensor[(10, 6, 10), float32], %var_3002: Tensor[(360), float64], %var_3003: Tensor[(2016), float32]) -> (Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) {
  @func_2999(%var_3001, %var_3002, %var_3003) /* ty=(Tensor[(10, 6, 10), float32], Tensor[(13, 2, 11), float64], Tensor[(286), int8], Tensor[(10, 6, 10), float32], Tensor[(360), float64], Tensor[(156), int16], Tensor[(360), float64], Tensor[(2016), float32]) */
}

def @func_6335() -> (Tensor[(9, 14, 16), float64],) {
  %474 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
  %475 = %474.0;
  (%475,)
}

def @func_2421(%var_2417: Tensor[(143), float32], %var_2418: Tensor[(1260), float64], %var_2419: Tensor[(84), float32], %var_2420: Tensor[(286), uint16]) -> (Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) {
  @func_2415(%var_2417, %var_2418, %var_2419, %var_2420) /* ty=(Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) */
}

def @func_4064() -> (Tensor[(2016), float32],) {
  %476 = @func_2532() /* ty=Tensor[(2016), float32] */;
  (%476,)
}

def @func_5015() -> Tensor[(2016), float32] {
  %478 = fn () -> Tensor[(2016), float32] {
    %477 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
    %477.0
  };
  %478() /* ty=Tensor[(2016), float32] */
}

def @func_2034() -> (Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
  %479 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %480 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(14, 2, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %483 = cast(meta[relay.Constant][37] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %484 = reshape(%483, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %485 = @func_21(%484) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %486 = not_equal(%481, %482) /* ty=Tensor[(14, 2, 12), bool] */;
  %487 = %485.0;
  (%486, %487, meta[relay.Constant][37] /* ty=Tensor[(2016), float32] */)
}

def @func_3135() -> (Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) {
  @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */
}

def @func_5879(%var_5877: Tensor[(84), float32], %var_5878: Tensor[(143), float32]) -> (Tensor[(9, 140), float64], Tensor[(90, 14), float64], Tensor[(84), float32], Tensor[(143), float32], Tensor[(16, 11, 14), float64], Tensor[(2016), float32], Tensor[(1176), float32], Tensor[(16, 11, 14), float64]) {
  %510 = fn (%var_5821: Tensor[(84), float32], %var_5822: Tensor[(143), float32]) -> (Tensor[(9, 140), float64], Tensor[(90, 14), float64], Tensor[(84), float32], Tensor[(143), float32], Tensor[(16, 11, 14), float64], Tensor[(2016), float32], Tensor[(1176), float32], Tensor[(16, 11, 14), float64]) {
    %488 = cast(meta[relay.Constant][38] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
    %489 = cast(%var_5821, dtype="float32") /* ty=Tensor[(84), float32] */;
    %490 = cast(%var_5822, dtype="float32") /* ty=Tensor[(143), float32] */;
    %491 = reshape(%488, newshape=[9, 140]) /* ty=Tensor[(9, 140), float64] */;
    %492 = reshape(%489, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %493 = reshape(%490, newshape=[143]) /* ty=Tensor[(143), float32] */;
    %494 = @func_4006(%491, %492, %493) /* ty=(Tensor[(2016), float32], Tensor[(1260), float64], Tensor[(9, 140), float64], Tensor[(84), float32], Tensor[(286), uint16], Tensor[(143), bool]) */;
    %495 = cast(-9.43609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %496 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
    %497 = floor_mod(%495, %496) /* ty=Tensor[(16, 11, 14), float64] */;
    %498 = cast(%497, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
    %499 = cast(-9.43609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %500 = cast(%var_5821, dtype="float32") /* ty=Tensor[(84), float32] */;
    %501 = cast(meta[relay.Constant][40] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %502 = reshape(%500, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %503 = reshape(%501, newshape=[1176, 1]) /* ty=Tensor[(1176, 1), float32] */;
    %504 = @func_2605(%502, %503) /* ty=(Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) */;
    %505 = cast(%497, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
    %506 = %494.2;
    %507 = floor_divide(%498, %499) /* ty=Tensor[(16, 11, 14), float64] */;
    %508 = %504.0;
    %509 = cos(%505) /* ty=Tensor[(16, 11, 14), float64] */;
    (%506, meta[relay.Constant][38] /* ty=Tensor[(90, 14), float64] */, %var_5821, %var_5822, %507, %508, meta[relay.Constant][40] /* ty=Tensor[(1176), float32] */, %509)
  };
  %510(%var_5877, %var_5878) /* ty=(Tensor[(9, 140), float64], Tensor[(90, 14), float64], Tensor[(84), float32], Tensor[(143), float32], Tensor[(16, 11, 14), float64], Tensor[(2016), float32], Tensor[(1176), float32], Tensor[(16, 11, 14), float64]) */
}

def @func_6344() -> Tensor[(2016), float32] {
  @func_4787() /* ty=Tensor[(2016), float32] */
}

def @func_3760(%var_3758: Tensor[(84), float32]) -> (Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) {
  @func_3757(%var_3758) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) */
}

def @func_6757() -> Tensor[(7, 15, 7), uint64] {
  @func_6755() /* ty=Tensor[(7, 15, 7), uint64] */
}

def @func_6873(%var_6871: Tensor[(1260), float64], %var_6872: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(1260), float64], Tensor[(42, 2), float32]) {
  %519 = fn (%var_6867: Tensor[(1260), float64], %var_6868: Tensor[(42, 2), float32]) -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(1260), float64], Tensor[(42, 2), float32]) {
    %511 = @func_4901() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */;
    %512 = cast(%var_6867, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %513 = cast(%var_6868, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
    %514 = reshape(%512, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
    %515 = reshape(%513, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
    %516 = @func_1941(%514, %515) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
    %517 = %511.1;
    %518 = %516.0;
    (%517, %518, %var_6867, %var_6868)
  };
  %519(%var_6871, %var_6872) /* ty=(Tensor[(2016), float32], Tensor[(468), float32], Tensor[(1260), float64], Tensor[(42, 2), float32]) */
}

def @func_3684(%var_3679: Tensor[(10, 3, 4), int16], %var_3680: Tensor[(10, 3, 4), int16]) -> (Tensor[(10, 3, 4), int16],) {
  %520 = cast(%var_3680, dtype="int16") /* ty=Tensor[(10, 3, 4), int16] */;
  %521 = shape_of(%var_3679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_3679, dtype="int16") /* ty=Tensor[(10, 3, 4), int16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %524 = bitwise_or(%522, %523) /* ty=Tensor[(10, 3, 4), int16] */;
  (%524,)
}

def @func_4066() -> (Tensor[(2016), float32],) {
  @func_4064() /* ty=(Tensor[(2016), float32],) */
}

def @func_6445(%var_6428: Tensor[(360), float64], %var_6431: Tensor[(286), uint16]) -> (Tensor[(2016), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(286), uint16]) {
  %525 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %526 = cast(%var_6428, dtype="float64") /* ty=Tensor[(360), float64] */;
  %527 = reshape(%526, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %528 = @func_2492(%527) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
  %529 = cast(%var_6431, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %530 = cast(%var_6431, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %531 = cast(%var_6431, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %532 = cast(%var_6431, dtype="float32") /* ty=Tensor[(286), float32] */;
  %533 = reshape(%529, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %534 = reshape(%530, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %535 = reshape(%531, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %536 = reshape(%532, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %537 = @func_1775(%533, %534, %535, %536) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %538 = %525.0;
  %539 = %528.1;
  %540 = %537.3;
  (%538, %539, %var_6428, %540, %var_6431)
}

def @func_3825(%var_3823: Tensor[(2016), float32]) -> (Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  @func_3822(%var_3823) /* ty=(Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */
}

def @func_2775(%var_2758: Tensor[(6, 3, 11), float64], %var_2759: Tensor[(6, 3, 11), float64], %var_2770: Tensor[(810), int8], %var_2771: Tensor[(84), float32], %var_2772: Tensor[(84, 14), float32]) -> (Tensor[(6, 3, 11), float64], Tensor[(21, 4), bool], Tensor[(810), int8], Tensor[(84), float32], Tensor[(84, 14), float32]) {
  %541 = cast(%var_2759, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %542 = shape_of(%var_2758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_2758, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %545 = cast(%var_2770, dtype="int8") /* ty=Tensor[(810), int8] */;
  %546 = cast(%var_2770, dtype="int8") /* ty=Tensor[(810), int8] */;
  %547 = cast(%var_2771, dtype="float32") /* ty=Tensor[(84), float32] */;
  %548 = cast(%var_2772, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %549 = cast(%var_2771, dtype="float32") /* ty=Tensor[(84), float32] */;
  %550 = reshape(%545, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %551 = reshape(%546, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %552 = reshape(%547, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %553 = reshape(%548, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %554 = reshape(%549, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %555 = @func_1079(%550, %551, %552, %553, %554) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %556 = power(%543, %544) /* ty=Tensor[(6, 3, 11), float64] */;
  %557 = %555.3;
  (%556, %557, %var_2770, %var_2771, %var_2772)
}

def @func_5762(%var_5760: Tensor[(84), float32], %var_5761: Tensor[(13, 22), int8]) -> (Tensor[(2016), float32], Tensor[(143), float32], Tensor[(84), float32], Tensor[(143), float32], Tensor[(13, 2, 11), bool], Tensor[(13, 22), int8], Tensor[(360), float64], Tensor[(360), float64]) {
  @func_5758(%var_5760, %var_5761) /* ty=(Tensor[(2016), float32], Tensor[(143), float32], Tensor[(84), float32], Tensor[(143), float32], Tensor[(13, 2, 11), bool], Tensor[(13, 22), int8], Tensor[(360), float64], Tensor[(360), float64]) */
}

def @func_939(%var_938: Tensor[(7, 15, 7), uint64]) -> (Tensor[(7, 15, 7), uint64],) {
  %561 = fn (%var_932: Tensor[(7, 15, 7), uint64]) -> (Tensor[(7, 15, 7), uint64],) {
    %558 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 15, 1), uint64] */, dtype="uint64") /* ty=Tensor[(7, 15, 1), uint64] */;
    %559 = cast(%var_932, dtype="uint64") /* ty=Tensor[(7, 15, 7), uint64] */;
    %560 = logical_xor(%558, %559) /* ty=Tensor[(7, 15, 7), uint64] */;
    (%560,)
  };
  %561(%var_938) /* ty=(Tensor[(7, 15, 7), uint64],) */
}

def @func_4644(%var_4637: Tensor[(84), float32], %var_4638: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) {
  %562 = @func_4064() /* ty=(Tensor[(2016), float32],) */;
  %563 = cast(meta[relay.Constant][42] /* ty=Tensor[(1980, 1), float64] */, dtype="float64") /* ty=Tensor[(1980, 1), float64] */;
  %564 = cast(meta[relay.Constant][43] /* ty=Tensor[(1575), float64] */, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %565 = cast(%var_4637, dtype="float32") /* ty=Tensor[(84), float32] */;
  %566 = cast(%var_4638, dtype="float32") /* ty=Tensor[(143), float32] */;
  %567 = reshape(%563, newshape=[11, 15, 12]) /* ty=Tensor[(11, 15, 12), float64] */;
  %568 = reshape(%564, newshape=[1575]) /* ty=Tensor[(1575), float64] */;
  %569 = reshape(%565, newshape=[42, 2]) /* ty=Tensor[(42, 2), float32] */;
  %570 = reshape(%566, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %571 = @func_3665(%567, %568, %569, %570) /* ty=(Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) */;
  %572 = %562.0;
  %573 = %571.10;
  (%572, %573, meta[relay.Constant][42] /* ty=Tensor[(1980, 1), float64] */, meta[relay.Constant][43] /* ty=Tensor[(1575), float64] */, %var_4637, %var_4638)
}

def @func_5265() -> (Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) {
  %580 = fn () -> (Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) {
    %574 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %575 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %576 = reshape(%575, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %577 = @func_2492(%576) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
    %578 = %574.0;
    %579 = %577.0;
    (%578, %579, meta[relay.Constant][44] /* ty=Tensor[(360), float64] */)
  };
  %580() /* ty=(Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) */
}

def @func_2036() -> (Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) {
  @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */
}

def @func_166(%var_163: Tensor[(1, 11, 13), float32]) -> (Tensor[(1, 11, 13), float32],) {
  %581 = cast(%var_163, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
  %582 = tan(%581) /* ty=Tensor[(1, 11, 13), float32] */;
  (%582,)
}

def @func_1562(%var_1524: Tensor[(13, 9, 2), float64]) -> Tensor[(13, 9, 2), float64] {
  %583 = cast(%var_1524, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  sinh(%583) /* ty=Tensor[(13, 9, 2), float64] */
}

def @func_4902() -> (Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) {
  %589 = fn () -> (Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) {
    %584 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
    %585 = cast(%584, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
    %586 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %587 = asinh(%585) /* ty=Tensor[(9, 14, 16), float64] */;
    %588 = %586.0;
    (%587, %588)
  };
  %589() /* ty=(Tensor[(9, 14, 16), float64], Tensor[(2016), float32]) */
}

def @func_6042(%var_6040: uint64) -> (Tensor[(11, 12, 1), uint64],) {
  @func_6039(%var_6040) /* ty=(Tensor[(11, 12, 1), uint64],) */
}

def @func_5478(%var_5450: Tensor[(1176), float32], %var_5472: Tensor[(143), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), bool], Tensor[(14, 2, 4), int8], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32], Tensor[(6, 14, 14), float32], Tensor[(2016), float32], Tensor[(143), float32]) {
  %590 = @func_4696() /* ty=(Tensor[(2016), float32],) */;
  %591 = @func_2797() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %592 = %590.0;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %594 = reshape(%593, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %595 = @func_3243(%594) /* ty=(Tensor[(2016), bool],) */;
  %596 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %597 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %598 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %599 = cast(%var_5450, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %600 = reshape(%598, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
  %601 = reshape(%599, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %602 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %603 = reshape(%602, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %604 = @func_3757(%603) /* ty=(Tensor[(2016), float32], Tensor[(6, 14, 14), float32], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %605 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %606 = cast(%var_5472, dtype="float32") /* ty=Tensor[(143), float32] */;
  %607 = reshape(%605, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %608 = reshape(%606, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %609 = @func_4644(%607, %608) /* ty=(Tensor[(2016), float32], Tensor[(21, 4), bool], Tensor[(1980, 1), float64], Tensor[(1575), float64], Tensor[(84), float32], Tensor[(143), float32]) */;
  %610 = %591.0;
  %611 = %595.0;
  %612 = %596.0;
  %613 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %614 = %597.1;
  %615 = @func_220(%600, %601) /* ty=Tensor[(6, 14, 14), float32] */;
  %616 = %604.1;
  %617 = %609.0;
  (%592, %610, %611, %612, %613, %614, %615, meta[relay.Constant][45] /* ty=Tensor[(84), float32] */, %var_5450, %616, %617, %var_5472)
}

def @func_5984(%var_5967: Tensor[(2016), bool]) -> (Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(2016), int16]) {
  %618 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %619 = @func_4995() /* ty=Tensor[(9, 14, 16), float32] */;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %621 = reshape(%620, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %622 = @func_2121(%621) /* ty=(Tensor[(2016), bool],) */;
  %623 = %622.0;
  %624 = cast(%var_5967, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(1), int32] */;
  %626 = cast(%623, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), int16] */;
  %628 = %618.2;
  %629 = multiply(%626, %627) /* ty=Tensor[(2016), int16] */;
  (%628, %619, %629)
}

def @func_2608(%var_2606: Tensor[(84), float32], %var_2607: Tensor[(1176, 1), float32]) -> (Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) {
  %648 = fn (%var_2589: Tensor[(84), float32], %var_2590: Tensor[(1176, 1), float32]) -> (Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) {
    %630 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %631 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %632 = %631.0;
    %633 = cast(%632, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %634 = sinh(%633) /* ty=Tensor[(2016), float64] */;
    %635 = cast(%634, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %636 = cast(%var_2589, dtype="float32") /* ty=Tensor[(84), float32] */;
    %637 = cast(%var_2590, dtype="float32") /* ty=Tensor[(1176, 1), float32] */;
    %638 = reshape(%636, newshape=[6, 14, 1]) /* ty=Tensor[(6, 14, 1), float32] */;
    %639 = reshape(%637, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
    %640 = @func_220(%638, %639) /* ty=Tensor[(6, 14, 14), float32] */;
    %641 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 14, 14), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
    %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%640, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %645 = %630.0;
    %646 = erf(%635) /* ty=Tensor[(2016), float32] */;
    %647 = floor_divide(%643, %644) /* ty=Tensor[(6, 14, 14), float64] */;
    (%645, %var_2589, %var_2590, %646, %647)
  };
  %648(%var_2606, %var_2607) /* ty=(Tensor[(2016), float32], Tensor[(84), float32], Tensor[(1176, 1), float32], Tensor[(2016), float32], Tensor[(6, 14, 14), float64]) */
}

def @func_223(%var_221: Tensor[(6, 14, 1), float32], %var_222: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
  %651 = fn (%var_214: Tensor[(6, 14, 1), float32], %var_215: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
    %649 = cast(%var_214, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
    %650 = cast(%var_215, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
    divide(%649, %650) /* ty=Tensor[(6, 14, 14), float32] */
  };
  %651(%var_221, %var_222) /* ty=Tensor[(6, 14, 14), float32] */
}

def @func_4750() -> (Tensor[(14, 2, 4), int8],) {
  %654 = fn () -> (Tensor[(14, 2, 4), int8],) {
    %652 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
    %653 = %652.0;
    (%653,)
  };
  %654() /* ty=(Tensor[(14, 2, 4), int8],) */
}

def @func_6839(%var_6835: uint32, %var_6836: Tensor[(15, 8, 14), uint32], %var_6837: Tensor[(18, 4), float64], %var_6838: Tensor[(588, 2), float32]) -> (Tensor[(15, 8, 14), uint32], Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(84), float32], Tensor[(18, 4), bool], Tensor[(588, 2), float64]) {
  @func_6833(%var_6835, %var_6836, %var_6837, %var_6838) /* ty=(Tensor[(15, 8, 14), uint32], Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(84), float32], Tensor[(18, 4), bool], Tensor[(588, 2), float64]) */
}

def @func_2533() -> Tensor[(2016), float32] {
  %656 = fn () -> Tensor[(2016), float32] {
    %655 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
    %655.0
  };
  %656() /* ty=Tensor[(2016), float32] */
}

def @func_6755() -> Tensor[(7, 15, 7), uint64] {
  %657 = @func_6253() /* ty=(Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) */;
  %657.0
}

def @func_5593(%var_5560: Tensor[(14, 2, 4), int8]) -> (Tensor[(14, 2, 4), float64], Tensor[(14, 2, 4), float32], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2016), float32]) {
  %658 = @func_4495() /* ty=(Tensor[(14, 2, 4), int8],) */;
  %659 = %658.0;
  %660 = cast(%var_5560, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = cast(%659, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %665 = cast(meta[relay.Constant][47] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %666 = reshape(%665, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %667 = @func_3822(%666) /* ty=(Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */;
  %668 = power(%662, %663) /* ty=Tensor[(14, 2, 4), float64] */;
  %669 = sin(%664) /* ty=Tensor[(14, 2, 4), float32] */;
  %670 = %667.3;
  %671 = @func_4787() /* ty=Tensor[(2016), float32] */;
  (%668, %669, %670, meta[relay.Constant][47] /* ty=Tensor[(2016), float32] */, %671)
}

def @func_5987(%var_5985: Tensor[(2016), bool]) -> (Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(2016), int16]) {
  @func_5984(%var_5985) /* ty=(Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(2016), int16]) */
}

def @func_4698() -> (Tensor[(2016), float32],) {
  @func_4696() /* ty=(Tensor[(2016), float32],) */
}

def @func_6163(%var_6160: Tensor[(14, 5, 6), float64], %var_6161: Tensor[(1008, 2), float32], %var_6162: Tensor[(90), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(2016), bool], Tensor[(1008, 2), float64], Tensor[(9, 14, 16), bool], Tensor[(90), float64]) {
  %684 = fn (%var_6129: Tensor[(14, 5, 6), float64], %var_6141: Tensor[(1008, 2), float32], %var_6153: Tensor[(90), float64]) -> (Tensor[(14, 5, 6), float64], Tensor[(2016), bool], Tensor[(1008, 2), float64], Tensor[(9, 14, 16), bool], Tensor[(90), float64]) {
    %672 = cast(%var_6129, dtype="float64") /* ty=Tensor[(14, 5, 6), float64] */;
    %673 = cast(%var_6141, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
    %674 = reshape(%673, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
    %675 = @func_2121(%674) /* ty=(Tensor[(2016), bool],) */;
    %676 = cast(%var_6141, dtype="float64") /* ty=Tensor[(1008, 2), float64] */;
    %677 = cast(%var_6153, dtype="float64") /* ty=Tensor[(90), float64] */;
    %678 = reshape(%677, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %679 = @func_4438(%678) /* ty=(Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) */;
    %680 = erf(%672) /* ty=Tensor[(14, 5, 6), float64] */;
    %681 = %675.0;
    %682 = erf(%676) /* ty=Tensor[(1008, 2), float64] */;
    %683 = %679.0;
    (%680, %681, %682, %683, %var_6153)
  };
  %684(%var_6160, %var_6161, %var_6162) /* ty=(Tensor[(14, 5, 6), float64], Tensor[(2016), bool], Tensor[(1008, 2), float64], Tensor[(9, 14, 16), bool], Tensor[(90), float64]) */
}

def @func_50(%var_41: Tensor[(8, 9, 1), float64], %var_42: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float32] {
  %685 = cast(%var_41, dtype="float64") /* ty=Tensor[(8, 9, 1), float64] */;
  %686 = cast(%var_42, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  %687 = divide(%685, %686) /* ty=Tensor[(8, 9, 5), float64] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  log(%688) /* ty=Tensor[(8, 9, 5), float32] */
}

def @func_1941(%var_1903: Tensor[(12, 7, 15), float64], %var_1926: Tensor[(84, 1), float32]) -> (Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) {
  %689 = cast(meta[relay.Constant][48] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %690 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 468), float32] */, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %691 = reshape(%689, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %692 = reshape(%690, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %693 = @func_401(%691, %692) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %694 = cast(meta[relay.Constant][50] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %695 = cast(meta[relay.Constant][50] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %696 = cast(%var_1926, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %697 = cast(meta[relay.Constant][51] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %698 = cast(%var_1926, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %699 = reshape(%694, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %700 = reshape(%695, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %701 = reshape(%696, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %702 = reshape(%697, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %703 = reshape(%698, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %704 = @func_1079(%699, %700, %701, %702, %703) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %705 = cast(%var_1903, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
  %706 = rsqrt(%705) /* ty=Tensor[(12, 7, 15), float64] */;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %708 = %693.2;
  %709 = %704.2;
  %710 = asinh(%707) /* ty=Tensor[(12, 7, 15), float32] */;
  (%708, meta[relay.Constant][48] /* ty=Tensor[(90), float64] */, meta[relay.Constant][49] /* ty=Tensor[(1, 468), float32] */, %709, meta[relay.Constant][50] /* ty=Tensor[(810), int8] */, %var_1926, meta[relay.Constant][51] /* ty=Tensor[(1176), float32] */, %710)
}

def @func_6898() -> (Tensor[(9, 14, 16), float32],) {
  %711 = @func_6092() /* ty=Tensor[(9, 14, 16), float32] */;
  (%711,)
}

def @func_2635(%var_2634: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) {
  %724 = fn (%var_2612: Tensor[(9, 14, 16), float32]) -> (Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) {
    %712 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
    %713 = cast(%var_2612, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
    %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(%712, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %717 = cast(%712, dtype="int32") /* ty=Tensor[(9, 14, 16), int32] */;
    %718 = shape_of(%var_2612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%var_2612, dtype="int32") /* ty=Tensor[(9, 14, 16), int32] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %721 = divide(%715, %716) /* ty=Tensor[(9, 14, 16), float32] */;
    %722 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
    %723 = minimum(%719, %720) /* ty=Tensor[(9, 14, 16), int32] */;
    (%721, %722, %723)
  };
  %724(%var_2634) /* ty=(Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) */
}

def @func_5509() -> Tensor[(2016), float32] {
  %726 = fn () -> Tensor[(2016), float32] {
    %725 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
    %725.0
  };
  %726() /* ty=Tensor[(2016), float32] */
}

def @func_169(%var_167: Tensor[(1, 11, 13), float32]) -> (Tensor[(1, 11, 13), float32],) {
  @func_166(%var_167) /* ty=(Tensor[(1, 11, 13), float32],) */
}

def @func_195(%var_194: Tensor[(9, 13, 4), float32]) -> (Tensor[(9, 13, 4), float32],) {
  %729 = fn (%var_190: Tensor[(9, 13, 4), float32]) -> (Tensor[(9, 13, 4), float32],) {
    %727 = cast(%var_190, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
    %728 = cosh(%727) /* ty=Tensor[(9, 13, 4), float32] */;
    (%728,)
  };
  %729(%var_194) /* ty=(Tensor[(9, 13, 4), float32],) */
}

def @func_2415(%var_2361: Tensor[(143), float32], %var_2387: Tensor[(1260), float64], %var_2388: Tensor[(84), float32], %var_2410: Tensor[(286), uint16]) -> (Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) {
  %730 = cast(%var_2361, dtype="float32") /* ty=Tensor[(143), float32] */;
  %731 = reshape(%730, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %732 = @func_166(%731) /* ty=(Tensor[(1, 11, 13), float32],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(1, 11, 13), float64] */;
  %735 = cast(%var_2387, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %736 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %737 = reshape(%735, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %738 = reshape(%736, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %739 = @func_1941(%737, %738) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
  %740 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
  %741 = cast(%740, dtype="float64") /* ty=Tensor[(9, 14, 16), float64] */;
  %742 = cast(meta[relay.Constant][52] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %743 = cast(meta[relay.Constant][53] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %744 = reshape(%742, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %745 = reshape(%743, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %746 = @func_401(%744, %745) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %747 = @func_2034() /* ty=(Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %748 = %747.2;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %750 = cast(%var_2410, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %751 = cast(%var_2410, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %752 = cast(%var_2410, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %753 = cast(%var_2410, dtype="float32") /* ty=Tensor[(286), float32] */;
  %754 = reshape(%750, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %755 = reshape(%751, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %756 = reshape(%752, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %757 = reshape(%753, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %758 = @func_1775(%754, %755, %756, %757) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %759 = cast(meta[relay.Constant][54] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %760 = cast(meta[relay.Constant][54] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
  %761 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %762 = %739.3;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %764 = cast(%var_2388, dtype="float32") /* ty=Tensor[(84), float32] */;
  %765 = reshape(%759, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %766 = reshape(%760, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %767 = reshape(%761, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %768 = reshape(%763, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %769 = reshape(%764, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %770 = @func_1079(%765, %766, %767, %768, %769) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %771 = erf(%734) /* ty=Tensor[(1, 11, 13), float64] */;
  %772 = log2(%741) /* ty=Tensor[(9, 14, 16), float64] */;
  %773 = %746.1;
  %774 = log10(%749) /* ty=Tensor[(2016), float32] */;
  %775 = %758.5;
  %776 = %770.0;
  (%var_2361, %771, %762, %var_2387, %var_2388, %772, %773, meta[relay.Constant][52] /* ty=Tensor[(90), float64] */, meta[relay.Constant][53] /* ty=Tensor[(468), float32] */, %774, %775, %var_2410, %776, meta[relay.Constant][54] /* ty=Tensor[(810), int8] */)
}

def @func_4108() -> Tensor[(2016), float32] {
  @func_4106() /* ty=Tensor[(2016), float32] */
}

def @func_5311(%var_5300: Tensor[(81, 10), int8], %var_5302: Tensor[(1176), float32], %var_5306: Tensor[(81, 10), int8]) -> (Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) {
  %777 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %778 = %777.2;
  %779 = cast(meta[relay.Constant][55] /* ty=Tensor[(360), float64] */, dtype="int8") /* ty=Tensor[(360), int8] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(1), int32] */;
  %781 = cast(%778, dtype="int8") /* ty=Tensor[(360), int8] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?), int8] */;
  %783 = cast(%var_5300, dtype="int8") /* ty=Tensor[(81, 10), int8] */;
  %784 = cast(%var_5300, dtype="int8") /* ty=Tensor[(81, 10), int8] */;
  %785 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %786 = cast(%var_5302, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %787 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %788 = reshape(%783, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %789 = reshape(%784, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
  %790 = reshape(%785, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %791 = reshape(%786, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
  %792 = reshape(%787, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
  %793 = @func_1079(%788, %789, %790, %791, %792) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
  %794 = cast(%var_5306, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %795 = shape_of(%var_5300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %796 = cast(%var_5300, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %798 = add(%781, %782) /* ty=Tensor[(360), int8] */;
  %799 = %793.2;
  %800 = greater(%796, %797) /* ty=Tensor[(81, 10), bool] */;
  (%798, %799, meta[relay.Constant][56] /* ty=Tensor[(1, 84), float32] */, %var_5302, %800)
}

def @func_404(%var_402: Tensor[(10, 9, 1), float64], %var_403: Tensor[(468), float32]) -> (Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
  %807 = fn (%var_389: Tensor[(10, 9, 1), float64], %var_397: Tensor[(468), float32]) -> (Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
    %801 = cast(%var_389, dtype="float64") /* ty=Tensor[(10, 9, 1), float64] */;
    %802 = cast(%var_397, dtype="float32") /* ty=Tensor[(468), float32] */;
    %803 = reshape(%802, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), float32] */;
    %804 = @func_193(%803) /* ty=(Tensor[(9, 13, 4), float32],) */;
    %805 = acosh(%801) /* ty=Tensor[(10, 9, 1), float64] */;
    %806 = %804.0;
    (%805, %806, %var_397)
  };
  %807(%var_402, %var_403) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */
}

def @func_4788() -> Tensor[(2016), float32] {
  %809 = fn () -> Tensor[(2016), float32] {
    %808 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
    %808.0
  };
  %809() /* ty=Tensor[(2016), float32] */
}

def @func_3822(%var_3797: Tensor[(2016), float32]) -> (Tensor[(2016), float32], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  %810 = @func_2076() /* ty=(Tensor[(2016), float32],) */;
  %811 = %810.0;
  %812 = cast(%var_3797, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(1), int32] */;
  %814 = cast(%811, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?), float32] */;
  %816 = cast(meta[relay.Constant][57] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %817 = cast(meta[relay.Constant][58] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %818 = reshape(%816, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %819 = reshape(%817, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %820 = @func_401(%818, %819) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %821 = mod(%814, %815) /* ty=Tensor[(2016), float32] */;
  %822 = %820.1;
  (%821, %822, meta[relay.Constant][57] /* ty=Tensor[(90), float64] */, meta[relay.Constant][58] /* ty=Tensor[(468), float32] */)
}

def @func_3671(%var_3667: Tensor[(11, 15, 12), float64], %var_3668: Tensor[(1575), float64], %var_3669: Tensor[(42, 2), float32], %var_3670: Tensor[(143), float32]) -> (Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) {
  @func_3665(%var_3667, %var_3668, %var_3669, %var_3670) /* ty=(Tensor[(11, 15, 12), float64], Tensor[(7, 15, 15), float64], Tensor[(1575), float64], Tensor[(42, 2), float32], Tensor[(1176), float32], Tensor[(143), float32], Tensor[(1176), float32], Tensor[(6, 12), float64], Tensor[(198), float64], Tensor[(810), int8], Tensor[(21, 4), bool]) */
}

def @func_5779() -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) {
  @func_5777() /* ty=(Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) */
}

def @func_3343(%var_3341: Tensor[(9, 14, 16), float32], %var_3342: Tensor[(600), float32]) -> (Tensor[(9, 14, 16), uint64], Tensor[(9, 14, 16), float64], Tensor[(360), float64], Tensor[(600), float32], Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32]) {
  @func_3339(%var_3341, %var_3342) /* ty=(Tensor[(9, 14, 16), uint64], Tensor[(9, 14, 16), float64], Tensor[(360), float64], Tensor[(600), float32], Tensor[(360), float64], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32]) */
}

def @func_3493(%var_3468: Tensor[(72), float64], %var_3471: Tensor[(84), float32], %var_3472: Tensor[(12, 98), float32]) -> (Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) {
  %823 = @func_2219() /* ty=(Tensor[(2016), float32],) */;
  %824 = %823.0;
  %825 = cast(%824, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %826 = reshape(%825, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %827 = @func_21(%826) /* ty=(Tensor[(9, 14, 16), float32],) */;
  %828 = cast(%var_3468, dtype="float64") /* ty=Tensor[(72), float64] */;
  %829 = cast(meta[relay.Constant][59] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
  %830 = cast(meta[relay.Constant][60] /* ty=Tensor[(27, 30), int8] */, dtype="int8") /* ty=Tensor[(27, 30), int8] */;
  %831 = cast(%var_3471, dtype="float32") /* ty=Tensor[(84), float32] */;
  %832 = cast(%var_3472, dtype="float32") /* ty=Tensor[(12, 98), float32] */;
  %833 = reshape(%828, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %834 = reshape(%829, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %835 = reshape(%830, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %836 = reshape(%831, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %837 = reshape(%832, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %838 = @func_2872(%833, %834, %835, %836, %837) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(8, 9, 5), float64], Tensor[(84, 14), float32], Tensor[(198), float64], Tensor[(810), int8], Tensor[(84), float32], Tensor[(1176), float32]) */;
  %839 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 98), float32] */, dtype="uint16") /* ty=Tensor[(12, 98), uint16] */;
  %840 = shape_of(%var_3472, dtype="int32") /* ty=Tensor[(2), int32] */;
  %841 = cast(%var_3472, dtype="uint16") /* ty=Tensor[(12, 98), uint16] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %843 = %838.1;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %845 = reshape(%844, newshape=[9, 14, 16]) /* ty=Tensor[(9, 14, 16), float32] */;
  %846 = @func_2633(%845) /* ty=(Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), int32]) */;
  %847 = cast(meta[relay.Constant][62] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %848 = cast(%var_3471, dtype="float32") /* ty=Tensor[(84), float32] */;
  %849 = reshape(%847, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %850 = reshape(%848, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %851 = @func_1941(%849, %850) /* ty=(Tensor[(468), float32], Tensor[(90), float64], Tensor[(1, 468), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1176), float32], Tensor[(12, 7, 15), float32]) */;
  %852 = %827.0;
  %853 = logical_xor(%841, %842) /* ty=Tensor[(12, 98), uint16] */;
  %854 = %846.0;
  %855 = %851.0;
  (%824, %852, %843, %var_3468, meta[relay.Constant][59] /* ty=Tensor[(99, 2), float64] */, meta[relay.Constant][60] /* ty=Tensor[(27, 30), int8] */, %var_3471, %853, %854, %855, meta[relay.Constant][62] /* ty=Tensor[(1260), float64] */)
}

def @func_4284(%var_4212: Tensor[(5, 11, 13), uint32], %var_4213: Tensor[(5, 11, 13), uint32]) -> (Tensor[(5, 11, 13), float64], Tensor[(9, 14, 16), float32], Tensor[(5, 11, 13), float64]) {
  %856 = cast(%var_4213, dtype="uint32") /* ty=Tensor[(5, 11, 13), uint32] */;
  %857 = shape_of(%var_4212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_4212, dtype="uint32") /* ty=Tensor[(5, 11, 13), uint32] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %860 = multiply(%858, %859) /* ty=Tensor[(5, 11, 13), uint32] */;
  %861 = cast(%var_4213, dtype="bool") /* ty=Tensor[(5, 11, 13), bool] */;
  %862 = shape_of(%var_4212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%var_4212, dtype="bool") /* ty=Tensor[(5, 11, 13), bool] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %865 = less_equal(%863, %864) /* ty=Tensor[(5, 11, 13), bool] */;
  %866 = cast(%865, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %867 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%860, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %870 = @func_3405() /* ty=(Tensor[(9, 14, 16), float32],) */;
  %871 = cast(%865, dtype="float64") /* ty=Tensor[(5, 11, 13), float64] */;
  %872 = divide(%868, %869) /* ty=Tensor[(5, 11, 13), float64] */;
  %873 = %870.0;
  %874 = cosh(%871) /* ty=Tensor[(5, 11, 13), float64] */;
  (%872, %873, %874)
}

def @func_1851(%var_1846: Tensor[(7, 15, 15), float64], %var_1847: Tensor[(7, 15, 15), float64], %var_1848: Tensor[(84, 1), float32], %var_1849: Tensor[(1176), float32], %var_1850: Tensor[(143), float32]) -> (Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) {
  %917 = fn (%var_1816: Tensor[(7, 15, 15), float64], %var_1817: Tensor[(7, 15, 15), float64], %var_1824: Tensor[(84, 1), float32], %var_1825: Tensor[(1176), float32], %var_1828: Tensor[(143), float32]) -> (Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) {
    %875 = cast(%var_1817, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
    %876 = shape_of(%var_1816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%var_1816, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %879 = cast(%var_1828, dtype="float32") /* ty=Tensor[(143), float32] */;
    %880 = reshape(%879, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
    %881 = @func_166(%880) /* ty=(Tensor[(1, 11, 13), float32],) */;
    %882 = cast(meta[relay.Constant][63] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
    %883 = cast(meta[relay.Constant][63] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
    %884 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
    %885 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %886 = cast(meta[relay.Constant][63] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
    %887 = cast(meta[relay.Constant][63] /* ty=Tensor[(810), int8] */, dtype="int8") /* ty=Tensor[(810), int8] */;
    %888 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
    %889 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %890 = cast(%var_1824, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
    %891 = reshape(%886, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
    %892 = reshape(%887, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
    %893 = reshape(%888, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
    %894 = reshape(%889, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
    %895 = reshape(%890, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
    %896 = @func_1079(%891, %892, %893, %894, %895) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
    %897 = %896.3;
    %898 = cast(%897, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
    %899 = acos(%898) /* ty=Tensor[(21, 4), float64] */;
    %900 = cast(%899, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
    %901 = reshape(%882, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
    %902 = reshape(%883, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), int8] */;
    %903 = reshape(%884, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
    %904 = reshape(%885, newshape=[6, 196]) /* ty=Tensor[(6, 196), float32] */;
    %905 = reshape(%900, newshape=[21, 4]) /* ty=Tensor[(21, 4), float32] */;
    %906 = @func_1079(%901, %902, %903, %904, %905) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 14, 14), float32], Tensor[(6, 196), float32], Tensor[(21, 4), bool]) */;
    %907 = %906.2;
    %908 = cast(%var_1825, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %909 = shape_of(%907, dtype="int32") /* ty=Tensor[(2), int32] */;
    %910 = cast(%907, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %912 = cast(%899, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
    %913 = divide(%877, %878) /* ty=Tensor[(7, 15, 15), float64] */;
    %914 = %881.0;
    %915 = power(%910, %911) /* ty=Tensor[(6, 196), float32] */;
    %916 = erf(%912) /* ty=Tensor[(21, 4), float32] */;
    (%913, meta[relay.Constant][63] /* ty=Tensor[(810), int8] */, %var_1824, %914, %var_1828, %915, %916)
  };
  %917(%var_1846, %var_1847, %var_1848, %var_1849, %var_1850) /* ty=(Tensor[(7, 15, 15), float64], Tensor[(810), int8], Tensor[(84, 1), float32], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(6, 196), float32], Tensor[(21, 4), float32]) */
}

def @func_6833(%var_6774: uint32, %var_6775: Tensor[(15, 8, 14), uint32], %var_6806: Tensor[(18, 4), float64], %var_6808: Tensor[(588, 2), float32]) -> (Tensor[(15, 8, 14), uint32], Tensor[(14, 2, 12), bool], Tensor[(9, 14, 16), float32], Tensor[(84), float32], Tensor[(18, 4), bool], Tensor[(588, 2), float64]) {
  %918 = cast(%var_6774, dtype="uint32") /* ty=uint32 */;
  %919 = cast(%var_6775, dtype="uint32") /* ty=Tensor[(15, 8, 14), uint32] */;
  %920 = @func_6298() /* ty=(Tensor[(14, 2, 12), bool],) */;
  %921 = cast(%var_6806, dtype="float64") /* ty=Tensor[(18, 4), float64] */;
  %922 = cast(meta[relay.Constant][64] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %923 = cast(%var_6808, dtype="float32") /* ty=Tensor[(588, 2), float32] */;
  %924 = reshape(%921, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %925 = reshape(%922, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %926 = reshape(%923, newshape=[12, 98]) /* ty=Tensor[(12, 98), float32] */;
  %927 = @func_3493(%924, %925, %926) /* ty=(Tensor[(2016), float32], Tensor[(9, 14, 16), float32], Tensor[(9, 14, 16), float32], Tensor[(72), float64], Tensor[(99, 2), float64], Tensor[(27, 30), int8], Tensor[(84), float32], Tensor[(12, 98), uint16], Tensor[(9, 14, 16), float32], Tensor[(468), float32], Tensor[(1260), float64]) */;
  %928 = cast(meta[relay.Constant][65] /* ty=Tensor[(18, 4), float64] */, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
  %929 = shape_of(%var_6806, dtype="int32") /* ty=Tensor[(2), int32] */;
  %930 = cast(%var_6806, dtype="bool") /* ty=Tensor[(18, 4), bool] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %932 = cast(%var_6808, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %933 = subtract(%918, %919) /* ty=Tensor[(15, 8, 14), uint32] */;
  %934 = %920.0;
  %935 = %927.8;
  %936 = greater(%930, %931) /* ty=Tensor[(18, 4), bool] */;
  %937 = atan(%932) /* ty=Tensor[(588, 2), float64] */;
  (%933, %934, %935, meta[relay.Constant][64] /* ty=Tensor[(84), float32] */, %936, %937)
}

def @func_3688(%var_3686: Tensor[(10, 3, 4), int16], %var_3687: Tensor[(10, 3, 4), int16]) -> (Tensor[(10, 3, 4), int16],) {
  @func_3684(%var_3686, %var_3687) /* ty=(Tensor[(10, 3, 4), int16],) */
}

def @func_4165(%var_4134: Tensor[(2, 8, 5), int8], %var_4135: Tensor[(2, 8, 5), int8], %var_4143: Tensor[(286), uint16]) -> (Tensor[(72), float64], Tensor[(286), uint16], Tensor[(2, 8, 5), uint16]) {
  %938 = cast(%var_4143, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %939 = cast(%var_4143, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %940 = cast(%var_4143, dtype="uint32") /* ty=Tensor[(286), uint32] */;
  %941 = cast(%var_4143, dtype="float32") /* ty=Tensor[(286), float32] */;
  %942 = reshape(%938, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %943 = reshape(%939, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint16] */;
  %944 = reshape(%940, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint32] */;
  %945 = reshape(%941, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), float32] */;
  %946 = @func_1775(%942, %943, %944, %945) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(13, 2, 11), bool], Tensor[(2, 13, 11), float32], Tensor[(2, 13, 11), float32]) */;
  %947 = cast(%var_4135, dtype="int8") /* ty=Tensor[(2, 8, 5), int8] */;
  %948 = shape_of(%var_4134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%var_4134, dtype="int8") /* ty=Tensor[(2, 8, 5), int8] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %951 = right_shift(%949, %950) /* ty=Tensor[(2, 8, 5), int8] */;
  %952 = cast(%var_4134, dtype="uint16") /* ty=Tensor[(2, 8, 5), uint16] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="uint16") /* ty=Tensor[(2, 8, 5), uint16] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %956 = %946.1;
  %957 = maximum(%954, %955) /* ty=Tensor[(2, 8, 5), uint16] */;
  (%956, %var_4143, %957)
}

def @func_3246(%var_3244: Tensor[(2016), float32]) -> (Tensor[(2016), bool],) {
  @func_3243(%var_3244) /* ty=(Tensor[(2016), bool],) */
}

def @main(%var_6969: Tensor[(112, 1), int8]) -> (Tensor[(14, 2, 4), bool], Tensor[(468), float32], Tensor[(112, 2016), float32]) {
  %958 = cast(%var_6969, dtype="int8") /* ty=Tensor[(112, 1), int8] */;
  %959 = reshape(%958, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int8] */;
  %960 = @func_5351() /* ty=(Tensor[(2016), float32], Tensor[(2016), float64]) */;
  %961 = %960.1;
  %962 = cast(%961, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %963 = atan(%962) /* ty=Tensor[(2016), float64] */;
  %964 = cast(%963, dtype="bool") /* ty=Tensor[(2016), bool] */;
  %965 = cast(%var_6969, dtype="bool") /* ty=Tensor[(112, 1), bool] */;
  %966 = equal(%964, %965) /* ty=Tensor[(112, 2016), bool] */;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(112, 2016), float32] */;
  %968 = @func_6722(%959) /* ty=Tensor[(14, 2, 4), bool] */;
  %969 = @func_6127() /* ty=Tensor[(468), float32] */;
  %970 = log10(%967) /* ty=Tensor[(112, 2016), float32] */;
  (%968, %969, %970)
}

def @func_6128() -> Tensor[(468), float32] {
  %972 = fn () -> Tensor[(468), float32] {
    %971 = @func_5777() /* ty=(Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) */;
    %971.1
  };
  %972() /* ty=Tensor[(468), float32] */
}

def @func_5316(%var_5313: Tensor[(81, 10), int8], %var_5314: Tensor[(1176), float32], %var_5315: Tensor[(81, 10), int8]) -> (Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) {
  @func_5311(%var_5313, %var_5314, %var_5315) /* ty=(Tensor[(360), int8], Tensor[(6, 196), float32], Tensor[(1, 84), float32], Tensor[(1176), float32], Tensor[(81, 10), bool]) */
}

def @func_4997() -> Tensor[(9, 14, 16), float32] {
  @func_4995() /* ty=Tensor[(9, 14, 16), float32] */
}

def @func_4288(%var_4286: Tensor[(5, 11, 13), uint32], %var_4287: Tensor[(5, 11, 13), uint32]) -> (Tensor[(5, 11, 13), float64], Tensor[(9, 14, 16), float32], Tensor[(5, 11, 13), float64]) {
  @func_4284(%var_4286, %var_4287) /* ty=(Tensor[(5, 11, 13), float64], Tensor[(9, 14, 16), float32], Tensor[(5, 11, 13), float64]) */
}

def @func_54(%var_52: Tensor[(8, 9, 1), float64], %var_53: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float32] {
  @func_50(%var_52, %var_53) /* ty=Tensor[(8, 9, 5), float32] */
}

def @func_2798() -> (Tensor[(9, 14, 16), float32],) {
  %974 = fn () -> (Tensor[(9, 14, 16), float32],) {
    %973 = @func_2301() /* ty=Tensor[(9, 14, 16), float32] */;
    (%973,)
  };
  %974() /* ty=(Tensor[(9, 14, 16), float32],) */
}

def @func_5777() -> (Tensor[(2016), float32], Tensor[(468), float32], Tensor[(156), int16]) {
  %975 = cast(meta[relay.Constant][66] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %976 = reshape(%975, newshape=[156]) /* ty=Tensor[(156), int16] */;
  %977 = @func_5225(%976) /* ty=(Tensor[(1, 11, 13), float32], Tensor[(13, 11), float32], Tensor[(9, 14, 16), float64], Tensor[(2016), float64], Tensor[(10, 9, 1), float64], Tensor[(90), float64], Tensor[(468), float32], Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %978 = @func_5014() /* ty=Tensor[(2016), float32] */;
  %979 = %977.6;
  (%978, %979, meta[relay.Constant][66] /* ty=Tensor[(156), int16] */)
}

def @func_1203(%var_1201: Tensor[(13, 2, 11), int8], %var_1202: Tensor[(13, 2, 11), int8]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) {
  %992 = fn (%var_1171: Tensor[(13, 2, 11), int8], %var_1172: Tensor[(13, 2, 11), int8]) -> (Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) {
    %980 = cast(%var_1171, dtype="float64") /* ty=Tensor[(13, 2, 11), float64] */;
    %981 = cast(%var_1172, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
    %982 = shape_of(%var_1171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %983 = cast(%var_1171, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
    %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %985 = less_equal(%983, %984) /* ty=Tensor[(13, 2, 11), bool] */;
    %986 = cast(%var_1172, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
    %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
    %988 = cast(%985, dtype="bool") /* ty=Tensor[(13, 2, 11), bool] */;
    %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %990 = acos(%980) /* ty=Tensor[(13, 2, 11), float64] */;
    %991 = not_equal(%988, %989) /* ty=Tensor[(13, 2, 11), bool] */;
    (%990, %991)
  };
  %992(%var_1201, %var_1202) /* ty=(Tensor[(13, 2, 11), float64], Tensor[(13, 2, 11), bool]) */
}

def @func_4374(%var_4318: Tensor[(156), int16], %var_4319: Tensor[(6, 60), float64], %var_4352: Tensor[(468), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(156), int16], Tensor[(6, 60), float64], Tensor[(9, 14, 16), bool], Tensor[(9, 14, 16), float32], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) {
  %993 = cast(%var_4318, dtype="int16") /* ty=Tensor[(156), int16] */;
  %994 = cast(%var_4318, dtype="int16") /* ty=Tensor[(156), int16] */;
  %995 = cast(%var_4319, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %996 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %997 = %996.0;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %999 = reshape(%993, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %1000 = reshape(%994, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), int16] */;
  %1001 = reshape(%995, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1002 = reshape(%998, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %1003 = @func_1298(%999, %1000, %1001, %1002) /* ty=(Tensor[(2, 13, 6), int16], Tensor[(8, 9, 5), float32], Tensor[(72), float64], Tensor[(360), float64], Tensor[(8, 9, 5), float32], Tensor[(9, 14, 16), float32], Tensor[(2016), float32]) */;
  %1004 = cast(%997, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %1005 = acosh(%1004) /* ty=Tensor[(9, 14, 16), float32] */;
  %1006 = cast(%997, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1010 = cast(%1005, dtype="float32") /* ty=Tensor[(9, 14, 16), float32] */;
  %1011 = cast(%var_4352, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1012 = reshape(%1011, newshape=[9, 13, 4]) /* ty=Tensor[(9, 13, 4), float32] */;
  %1013 = @func_193(%1012) /* ty=(Tensor[(9, 13, 4), float32],) */;
  %1014 = %1003.1;
  %1015 = logical_and(%1008, %1009) /* ty=Tensor[(9, 14, 16), bool] */;
  %1016 = log10(%1010) /* ty=Tensor[(9, 14, 16), float32] */;
  %1017 = %1013.0;
  (%1014, %var_4318, %var_4319, %1015, %1016, %1017, %var_4352)
}

def @func_4438(%var_4414: Tensor[(90), float64]) -> (Tensor[(9, 14, 16), bool], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32]) {
  %1018 = @func_3133() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) */;
  %1019 = %1018.0;
  %1020 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="bool") /* ty=Tensor[(9, 14, 16), bool] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1024 = cast(%var_4414, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1025 = cast(meta[relay.Constant][68] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1026 = reshape(%1024, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float64] */;
  %1027 = reshape(%1025, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1028 = @func_401(%1026, %1027) /* ty=(Tensor[(10, 9, 1), float64], Tensor[(9, 13, 4), float32], Tensor[(468), float32]) */;
  %1029 = greater_equal(%1022, %1023) /* ty=Tensor[(9, 14, 16), bool] */;
  %1030 = %1028.1;
  (%1029, %1030, %var_4414, meta[relay.Constant][68] /* ty=Tensor[(468), float32] */)
}

def @func_6935() -> (Tensor[(2016), float32],) {
  %1032 = fn () -> (Tensor[(2016), float32],) {
    %1031 = @func_5508() /* ty=Tensor[(2016), float32] */;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(2016), float32],) */
}

def @func_3133() -> (Tensor[(9, 14, 16), float32], Tensor[(156), int16], Tensor[(360), float64]) {
  %1033 = @func_3087() /* ty=(Tensor[(9, 14, 16), float32], Tensor[(7, 15, 7), uint64], Tensor[(735), uint64]) */;
  %1034 = cast(meta[relay.Constant][69] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1035 = reshape(%1034, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1036 = @func_2492(%1035) /* ty=(Tensor[(2016), float32], Tensor[(72), float64], Tensor[(156), int16], Tensor[(360), float64]) */;
  %1037 = %1033.0;
  %1038 = %1036.2;
  (%1037, %1038, meta[relay.Constant][69] /* ty=Tensor[(360), float64] */)
}

def @func_6255() -> (Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) {
  @func_6253() /* ty=(Tensor[(7, 15, 7), uint64], Tensor[(360), int8], Tensor[(810), int8], Tensor[(1176), float32]) */
}

def @func_6515(%var_6513: Tensor[(143), float32], %var_6514: Tensor[(1260), float64]) -> (Tensor[(2016), float32], Tensor[(6, 9, 15), int8], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(13, 22), uint16], Tensor[(1176), float32], Tensor[(143), float64]) {
  %1059 = fn (%var_6480: Tensor[(143), float32], %var_6481: Tensor[(1260), float64]) -> (Tensor[(2016), float32], Tensor[(6, 9, 15), int8], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(13, 22), uint16], Tensor[(1176), float32], Tensor[(143), float64]) {
    %1039 = @func_5264() /* ty=(Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(360), float64]) */;
    %1040 = cast(%var_6480, dtype="float32") /* ty=Tensor[(143), float32] */;
    %1041 = cast(%var_6481, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %1042 = cast(meta[relay.Constant][70] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1043 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 22), uint16] */, dtype="uint16") /* ty=Tensor[(13, 22), uint16] */;
    %1044 = reshape(%1040, newshape=[143]) /* ty=Tensor[(143), float32] */;
    %1045 = reshape(%1041, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %1046 = reshape(%1042, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %1047 = reshape(%1043, newshape=[286]) /* ty=Tensor[(286), uint16] */;
    %1048 = @func_2415(%1044, %1045, %1046, %1047) /* ty=(Tensor[(143), float32], Tensor[(1, 11, 13), float64], Tensor[(6, 196), float32], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(9, 14, 16), float64], Tensor[(9, 13, 4), float32], Tensor[(90), float64], Tensor[(468), float32], Tensor[(2016), float32], Tensor[(2, 13, 11), float32], Tensor[(286), uint16], Tensor[(6, 9, 15), int8], Tensor[(810), int8]) */;
    %1049 = cast(meta[relay.Constant][70] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1050 = reshape(%1049, newshape=[42, 2]) /* ty=Tensor[(42, 2), float32] */;
    %1051 = @func_3025(%1050) /* ty=(Tensor[(2016), float32], Tensor[(6, 196), float32], Tensor[(810), int8], Tensor[(42, 2), float32], Tensor[(1176), float32]) */;
    %1052 = cast(%var_6480, dtype="float32") /* ty=Tensor[(143), float32] */;
    %1053 = tan(%1052) /* ty=Tensor[(143), float32] */;
    %1054 = cast(%1053, dtype="float64") /* ty=Tensor[(143), float64] */;
    %1055 = %1039.1;
    %1056 = %1048.12;
    %1057 = %1051.4;
    %1058 = acosh(%1054) /* ty=Tensor[(143), float64] */;
    (%1055, %1056, %var_6481, meta[relay.Constant][70] /* ty=Tensor[(84), float32] */, meta[relay.Constant][71] /* ty=Tensor[(13, 22), uint16] */, %1057, %1058)
  };
  %1059(%var_6513, %var_6514) /* ty=(Tensor[(2016), float32], Tensor[(6, 9, 15), int8], Tensor[(1260), float64], Tensor[(84), float32], Tensor[(13, 22), uint16], Tensor[(1176), float32], Tensor[(143), float64]) */
}

def @func_4496() -> (Tensor[(14, 2, 4), int8],) {
  %1063 = fn () -> (Tensor[(14, 2, 4), int8],) {
    %1060 = cast(meta[relay.Constant][72] /* ty=Tensor[(14, 1, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 1, 4), int8] */;
    %1061 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 2, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
    %1062 = left_shift(%1060, %1061) /* ty=Tensor[(14, 2, 4), int8] */;
    (%1062,)
  };
  %1063() /* ty=(Tensor[(14, 2, 4), int8],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen200/build/output.py", line 2130, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [12:56:52] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_93 = relay.var("var_93", dtype = "float64", shape = (16, 11, 14))#candidate|93|(16, 11, 14)|var|float64
uop_94 = relay.tan(var_93.astype('float64')) # shape=(16, 11, 14)
output = uop_94
output2 = uop_94
func_111 = relay.Function([var_93,], output)
mod['func_111'] = func_111
mod = relay.transform.InferType()(mod)
mutated_mod['func_111'] = func_111
mutated_mod = relay.transform.InferType()(mutated_mod)
var_112 = relay.var("var_112", dtype = "float64", shape = (16, 11, 14))#candidate|112|(16, 11, 14)|var|float64
func_111_call = mutated_mod.get_global_var('func_111')
call_113 = func_111_call(var_112)
output = call_113
func_114 = relay.Function([var_112], output)
mutated_mod['func_114'] = func_114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_242 = relay.var("var_242", dtype = "uint8", shape = (2, 12, 1))#candidate|242|(2, 12, 1)|var|uint8
var_243 = relay.var("var_243", dtype = "uint8", shape = (2, 12, 6))#candidate|243|(2, 12, 6)|var|uint8
bop_244 = relay.subtract(var_242.astype('uint8'), var_243.astype('uint8')) # shape=(2, 12, 6)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_251 = relay.const([2.824099,3.803815,-9.162499,-1.024836,-3.710676,7.373587,-7.119662,-1.389099,7.335248,-6.607147,2.450911,-9.434275,8.761499,-9.053818,5.776529,7.831025,-5.859935,-1.652196,-8.338432,3.548133,-8.108080,9.565488,-7.914854,-6.734671,-4.136215,-8.489960,-8.287242,-2.600430,-9.928046,-6.882225,-2.281918,-6.697938,-6.491305,2.033738,8.091191,-5.637382,6.897995,-0.365422,4.540324,-1.664851,-9.728912,6.238162,9.631129,-0.852475,6.589779,2.056978,-0.206811,-8.114299,-4.910606,1.668736,-7.022046,9.167833,5.705927,4.211438,6.992093,-1.871825,6.363795,-6.002387,1.835673,-9.380514,2.839537,-1.846915,1.381648,2.306834,6.580950,7.008068,-1.901070,1.032232,0.312591,-7.349196,-7.970414,-0.678737,-9.003710,-0.966788,0.468851,-6.538850,7.081101,5.043160,-7.653514,-6.302092,5.740895,7.382146,8.030295,-0.188366,-0.212028,6.573220,8.933539,-8.692456,-4.419143,-0.139974,7.177878,-7.826920,2.631667,8.284547,-1.149577,2.576170,9.537786,3.297631,-4.384496,9.561075,-7.940802,4.136127,-0.525679,-2.829551,3.989611,3.033210,4.569587,0.377069,3.697156,-3.302217,-6.991517,8.837605,7.765199,-2.772437,-3.207858,-3.696596,-6.286580,7.205054,4.852681,5.777476,-2.827725,4.167270,4.940217,-8.808422,1.133533,-5.390021,7.033413,5.962428,4.472902,-2.503296,-2.191374,-1.059441,-9.610388,0.084230,4.575593,-5.954619,4.325011,-8.455647,-3.689253,5.064092,4.143918,-7.902931,-3.672242,9.256740,3.846918,6.018308,-3.871433,9.946764,9.942866,-3.415222,9.440787,-3.580071,-6.598474,9.717740,-7.934939,-1.253486,9.493238,-2.701635,6.255501,0.017091,4.941809,-0.838224,-8.925046,-9.068763,-4.422826,7.584439,-4.483110,6.801144,-8.781172,3.426699,9.595411,-3.472256,-7.374679,-5.954498,3.086346,1.521170,8.235970,-1.053635,7.138911,0.831862,-3.776302,9.951581,5.460223,1.449378,-0.480068,-0.072260,3.209840,-4.556210,0.557089,4.929560,-8.212228,2.158464,-5.342201,3.020362,-1.177095,7.758521,0.424656,6.745649,1.685349,-8.723918,-9.090949,-1.339935,-1.029280,0.779602,8.219864,-0.741342,0.038643,6.916247,9.026225,1.817666,-2.206448,-2.857436,-7.510030,-3.099994,2.927703,9.235954,9.333763,7.682350,-0.505750,2.069328,1.599924,3.479960,8.910370,-8.282063,7.670886,-9.425918,-4.112993,-4.376988,3.542880,9.780788,1.636255,-7.019987,-8.622608,-3.103311,-3.122161,-3.691173,0.234215,3.913197,8.701780,-0.281802,6.118267,-0.985370,2.464939,-5.773285,6.824082,6.036285,-1.973543,4.476875,3.774548,3.750768,7.264033,1.733302,1.060933,8.765050,-2.525452,-9.924908,-9.374437,-3.386714,5.582415,-3.001467,-7.478994,6.629127,9.417815,7.389487,2.287119,4.580630,-1.684549,4.372641,0.904072,-8.137406,-9.349505,0.542400,0.480006,8.675347,1.241047,5.999001,0.091144,-8.697533,9.959212,-0.941224,3.169498,3.343968,-1.944957,1.850100,8.300703,-1.853420,-8.970528,1.668545,1.904962,-1.878715,-8.234410,-6.798650,4.908175,3.824080,-2.182111,4.353295,6.906413,8.546407,1.965468,7.017618,8.600293,6.423765,3.591920,8.017283,9.095102,1.699720,-0.277927,6.141533,3.245250,-3.664210,-7.766961,4.461638,1.987728,-2.207592,4.660768,6.407729,4.874542,1.074511,7.321859,1.489486,-2.513036,1.940708,-6.261962,-7.038575,6.716206,2.067189,-2.132261,5.609662,8.464539,3.826760,9.077876,5.011976,7.288018,7.377666,-9.434699,2.719588,-9.441006,6.404344,3.402315,-9.109365,-8.817185,7.925462,-4.061300,-1.173431,-6.246990,-8.117549,2.087622,-9.508348,-7.016693,1.784618,-7.377904,-6.228507,9.027656,8.055429,1.731928,7.807085,7.628177,7.763775,8.191430,3.134660,5.513272,4.983047,-5.792061,5.275489,-6.999561,4.115918,6.651126,6.282945,2.434238,6.016332,-5.537959,-7.705445,5.789527,0.260178,-5.692993,-0.610313,-6.769383,-8.268911,3.368487,-3.389697,-8.356829,-4.049609,3.346732,0.883590,-1.965035,4.715570,2.451749,-0.204617,9.539948,-3.508280,7.116290,8.984752,-6.149701,-0.923955,8.397054,9.134597,-8.911252,2.361707,1.684429,-7.720522,-6.236086,-0.603705,1.337312,-0.327200,-2.430770,-0.520098,-8.859855,-2.963179,3.907706,-9.746859,0.742325,8.475137,-1.612135,6.987305,1.435462,7.793799,8.778636,6.147399,0.201667,-3.262722,-2.842470,3.349241,-7.671478,-5.495276,-2.213696,5.855773,-6.436740,6.175174,3.533785,6.033425,-7.548386,-4.206746,-1.851678,-1.105794,-8.322428,-4.320522,-7.267645,4.834154,9.567231,-3.742747,-8.775565,8.474456,-0.537178,8.788989,3.053632,-9.370632,-5.106205,2.096435,9.187734,-0.448041,-7.280349,-0.235172,-1.088288,-3.339452,4.456051,1.738125,-5.627617,7.056611,6.962601,-8.830313,2.106255,-4.862709,-2.444047,-4.107538,7.630986,1.330033,9.220654,-2.294666,5.259525,7.503642,-5.130115,-6.620396,8.659042,0.295035,6.475249,5.579366,8.659274,-9.594782,-0.610340,6.697815,2.722055,8.126032,-4.169189,-5.534264,-3.216812,0.322302,-7.632504,0.632818,6.149970,-1.149704,6.623543,9.112184,1.614302,-8.114884,-5.596660,7.919036,-9.189241,4.781238,6.005210,-8.749901,1.888938,-5.680803,8.431875,-7.821770,-5.959425,0.541428,-5.035574,-2.462728,-7.866686,2.956058,-4.184169,-2.244915,-4.394746,-1.477186,0.632390,6.910597,-1.118370,-3.129151,-0.451381,-2.467385,9.310464,-2.853747,-3.155261,4.854659,6.023331,8.372977,-6.257162,-3.016407,1.875199,-9.332991,8.923028,-1.156212,4.259962,0.075287,8.008025,-8.425152,-7.243454,-4.851292,-4.712410,9.669467,9.446077,2.768526,4.268284,-6.490913,-6.095550,3.282160,-3.023173,9.465057,1.156658,6.127943,-0.734142,6.397942,-3.641224,1.509609,-9.199276,-3.917337,-3.380692,7.177778,0.186889,-2.972992,-6.654456,5.004089,4.898884,-4.742753,-8.234570,1.780677,6.089159,7.126785,6.699513,-2.380889,4.143440,6.210786,0.201866,4.653900,-7.780567,-1.832664,-5.344313,0.285232,0.745291,-3.634650,-7.726600,-2.744656,-5.339607,1.464292,9.007833,1.584047,1.933789,-8.345228,1.064505,8.456957,0.122657,-9.581945,-0.905404,-3.873628,1.505840,6.662335,-6.349169,-4.563907,7.938003,-3.539104,3.038860,2.771539,-4.690743,9.227028,-3.532267,1.422099,2.662301,6.824505,-3.469932,2.059618,-9.803009,2.195730,-3.501787,2.359603,2.863328,-3.270350,-3.005738,2.185667,3.806004,-4.060540,-7.343162,-3.686928,-5.534542,6.542244,7.288325,-8.615526,9.470435,-5.553415,4.725319,6.535542,-1.895622,-6.048725,6.084897,0.349870,-9.693400,-2.547098,-2.009034,-9.254418,-2.211870,1.724416,-7.929765,7.709430,9.584396,-3.562640,-2.068654,7.246112,5.491760,0.436589,-5.749911,-8.827394,-9.794113,2.228125,5.290303,3.621132,9.506645,7.209101,8.557047,1.442338,-4.928644,4.556928,5.612544,6.313742,-9.043921,8.794013,-3.887104,-1.405513,6.892885,9.568419,7.183445,-0.537030,2.016336,2.185229,9.288376,5.884526,-5.063734,-2.534924,2.829029,-3.042253,-2.385987,-9.863575,9.247184,4.620190,-3.845900,7.793229,-5.432655,-7.407994,9.975994,-9.074239,-1.658555,1.656481,-6.591043,-5.367706,9.795583,-2.773001,4.302771,-1.621078,4.719005,2.211783,-1.504231,3.938963,-6.538238,-8.304224,8.257793,-3.892989,-6.855237,-9.754107,3.579442,5.848859,-4.208978,-0.394155,-4.590955,-5.058638,3.843225,-1.025546,6.406012,-4.481185,9.277032,5.313523,7.418352,3.109444,4.749782,-2.547933,-5.992033,-7.514454,9.352262,-2.233362,5.699214,3.637654,-5.113889,0.502998,-5.633344,-6.242375,-8.151013,-2.220709,7.960754,-7.988279,-3.068186,-3.262414,-0.376185,3.027658,8.977267,6.873197,-0.726832,4.971631,-9.903150,-2.015299,-0.701964,1.465286,4.659244,-6.822191,8.266226,0.618676,-8.121687,-0.957369,-3.583792,-0.099323,-6.125142,6.164264,6.462803,0.184226,0.664436,-1.513190,-5.432697,-5.151534,1.920595,4.182154,0.244664,-3.293393,-2.604259,-1.496701,-0.541358,-1.109533,3.540757,-8.762903,7.304949,-1.083915,0.183104,-7.590014,-2.772167,6.647079,-8.439562,-9.910228,-0.130950,0.226093,-7.623507,8.658979,-5.180264,6.333789,3.876239,-3.774450,8.986682,2.616514,7.454595,7.871688,3.895677,-6.263339,9.137602,1.486645,7.958785,-3.232869,0.658487,1.056088,7.352195,2.185441,-8.214226,6.867454,-1.721388,-1.759391,4.564613,-4.150301,1.845545,-7.727596,3.399294,-2.180575,-0.167721,-0.512872,-0.829863,9.209889,-7.326483,0.950015,9.911300,1.225972,5.718244,9.850102,1.036787,8.331901,-8.456886,7.806429,-8.290209,7.315418,-0.050838,-3.993783,7.298232,-3.117312,-6.872725,-3.200980,3.371788,1.557109,2.609691,0.813022,-7.083697,3.646579,-8.662047,3.081872,-2.224187,4.305369,-6.908566,-9.285648,6.050466,-7.290234,-9.107823,1.831514,-3.141141,-2.459063,-5.182356,-8.164828,5.029958,5.428312,-6.082940,-6.522630,4.284882,2.623760,8.432388,3.728435,-6.679171,-6.387251,-6.543181,-8.669741,-9.343873,7.932013,-3.168210,-6.807773,0.807270,0.051703,-5.846322,3.135900,4.920548,1.324758,-4.732851,-3.295226,-2.658226,0.224029,-0.923944,3.935854,-4.943556,0.237341,-1.798338,-7.570964,-8.502483,2.167000,5.995006,-4.753630,4.039260,2.582741,9.794884,7.494538,-6.522342,-0.710469,-8.988567,-3.014726,-0.730431,-7.320770,4.509096,3.979259,-3.479684,-6.722076,2.582097,3.572829,-7.242491,-1.933370,-1.681998,-4.884580,-3.999532,3.495825,-0.042285,2.549459,-5.666514,-4.659030,7.152363,8.109450,-6.416200,9.874637,-1.019064,2.094439,-3.591915,-4.692289,9.979065,1.468219,-8.648912,-9.432555,-4.522325,5.975995,6.805436,-5.500683,7.148282,3.867768,6.988246,6.989138,9.231446,3.452470,-0.256849,-5.605880,-2.545005,8.181775,-8.389282,9.710164,-5.193185,0.373067,-0.773046,-7.060868,2.456057,-8.729726,-7.023838,3.991593,-3.141756,6.527511,-9.901515,-0.379882,-8.047841,9.035507,3.626073,1.649082,-8.084045,-9.512249,6.544111,-6.626900,-5.399133,6.343127,6.625610,-4.465824,9.827930,-0.405062,7.832368,-7.976920,6.652472,-5.537636,0.046157,-4.070749,3.150826,-6.545376,1.424178,1.779895,5.303925,-5.135788,2.856905,-3.909108,6.891640,6.412895,1.801964,-0.841320,3.484802,-6.716580,-3.933997,-6.737708,4.500844,-1.002243,-0.160784,-5.871766,0.548807,-9.897601,0.666640,4.003783,6.220897,9.212977,3.816369,0.551087,-7.486781,8.727027,-7.669360,-2.926828,-5.091957,-5.417161,6.704761,2.732879,-2.905941,3.389150,-6.252735,-4.173082,1.356677,0.330780,8.052121,-2.210518,-8.358036,-0.954184,4.604348,-2.261754,-6.022711,-0.921240,4.138069,-4.246632,8.646272,4.832770,-4.540865,-0.567398,8.514104,-4.277574,-9.597369,-6.208667,-0.080248,-4.859396,-7.630110,-5.237420,4.599020,-5.356650,-6.527968,-2.118781,-9.140973,5.261541,6.821021,9.648764,1.140231,7.319482,-2.340373,-6.794853,3.165336,-2.326248,5.384272,-6.568771,-2.037510,7.130493,9.810671,-8.354503,9.652594,-9.060269,9.147729,3.638457,-7.384764,8.745360,9.537878,2.384774,-0.742680,-0.434753,-5.763313,-2.609657,4.912624,6.661694,-5.802873,-7.767428,-8.811581,-5.627675,-3.946055,-0.465005,5.296934,7.377939,-5.972477,5.493081,9.086160,-2.907037,-6.353277,-5.347958,7.827726,-1.902122,2.812193,6.605623,4.611896,-1.025952,-9.263369,-9.805485,-0.873579,-2.882277,3.889947,6.519426,6.926635,-4.725080,-3.462953,7.228152,9.518192,9.970190,-9.524996,-9.879521,7.270856,-4.693130,5.315556,6.109691,-3.405918,-5.271330,1.855558,-0.321225,-2.915883,-6.027231,3.142367,-4.954614,0.584115,-7.660231,-4.967029,5.802233,2.040492,9.263862,5.500243,-6.214995,-7.345842,4.223342,-1.700673,-3.811019,-4.908366,0.016136,-9.543882,-9.982919,-9.029784,-7.966225,4.291958,-6.341994,1.271884,-4.530250,-9.463486,-9.801836,6.128002,-4.934163,-5.366332,-1.129758,9.645174,-1.753314,7.973683,3.228489,2.666546,0.150439,0.847239,7.071355,6.163349,5.412336,-0.942212,8.551962,9.080867,8.275010,-0.672600,2.162087,-7.956899,-2.914854,-6.272261,1.420449,5.065923,6.967166,-2.203465,2.215748,-3.961264,3.276069,-4.732080,-6.168148,-9.412495,3.698138,-4.601814,-7.492256,7.588396,-7.717663,-4.883204,8.841040,-0.365627,-4.691561,-6.507828,5.733417,6.186283,4.772601,1.743925,7.812503,-6.562533,-8.384353,0.051657,2.123552,2.158424,6.857492,1.893213,7.756087,5.127348,-4.525311,0.603991,-9.039480,-3.206753,7.582696,1.064565,7.141488,2.840036,-4.328702,-4.904963,5.206732,-3.757399,0.543655,-4.175395,0.874817,-0.041388,2.984752,9.960488,-8.752065,8.684128,9.408146,0.771218,-9.769770,8.185770,0.428308,-8.323899,0.670463,8.954202,-3.464560,-1.735919,3.270758,9.603082,-6.061771,-9.859728,-2.121998,-1.906363,8.388320,-1.491701,5.733624,-1.173945,0.905481,8.329383,5.443443,5.066395,-9.386056,-9.480454,8.277265,-3.050784,-9.278203,-5.559982,3.609786,9.358036,-8.442109,-5.076455,8.437735,5.677912,-5.683812,1.988535,2.987770,9.063576,-1.462677,-9.174554,-2.229809,-7.202418,7.034176,8.679992,4.817737,5.346607,8.433271,4.214013,8.899839,5.008967,-5.428764,4.178119,-7.854647,3.601172,-0.143021,-7.524193,2.518706,-3.990992,0.193611,9.512728,-9.710616,8.405717,-5.415220,-5.174210,6.207673,1.422995,-8.190635,1.809865,-6.248557,-2.773661,-6.832050,9.630418,6.089104,6.683319,9.383671,1.783615,2.631742,5.790719,-0.087135,2.193509,-3.176442,5.291289,-5.275864,9.528169,0.046881,4.641170,-3.891823,7.046512,-4.818854,-6.022855,6.658314,0.949696,-9.952278,9.003630,-6.673953,-7.767620,5.065121,-2.750637,0.831764,-1.488008,7.398702,-5.870966,-4.272270,6.645534,-2.310916,0.008531,1.204883,4.258548,5.999204,-9.073682,8.775938,-7.529595,-1.565005,-3.827755,-8.002734,9.659883,6.756008,6.471338,5.769768,-3.667422,2.300492,-8.768931,1.401502,-3.286568,-3.011681,-8.202992,-0.502504,-7.392591,2.454569,-9.355540,-4.563484,2.613663,2.024453,4.978162,3.302721,7.590538,6.579076,-3.113038,4.966432,-5.451686,1.847317,5.222073,9.669746,0.816482,1.215168,6.156830,6.159970,2.797951,7.082335,5.202018,-4.703937,2.736475,-5.835655,-0.984124,3.097777,2.849017,-8.611930,-6.116156,9.829904,-9.860030,3.443738,-3.135134,3.790134,9.779609,-0.661046,0.542911,8.784779,6.667126,-5.455860,1.934629,-8.241290,2.242028,-7.232168,-4.110644,3.189386,-2.406223,-8.646166,0.071206,-4.022038,3.056313,9.497492,4.601124,2.192559,2.010041,0.259725,2.997279,1.383124,-4.779217,-6.492300,0.236090,0.099714,-8.490469,-9.349608,4.409027,8.047149,-5.372793,-1.443741,6.149434,-3.101742,3.764975,-6.389887,8.329326,7.333493,7.953401,-9.868751,1.991911,-5.863381,-0.526886,5.636354,1.492034,-1.292163,-4.621456,1.713081,-9.710124,-0.695407,7.690746,4.874635,-9.928932,-6.410158,-6.838134,7.194852,7.592587,-3.713805,-1.564310,9.749245,-0.349971,4.908272,-5.229248,-5.521744,-2.877416,9.792015,8.541149,-4.248018,9.065945,2.393508,-0.915869,-7.896445,-3.544729,5.779550,-6.757682,-3.667570,-2.077089,7.344915,5.718723,6.602481,-4.724690,6.873439,9.847056,-6.931844,9.191645,1.325128,-0.374163,5.495855,-8.326905,0.482176,7.627269,4.376991,-9.398646,1.579939,-0.875941,0.573309,4.869581,2.720288,6.287779,1.589135,9.565002,-1.552725,-5.486426,3.771858,-2.262381,-4.882872,-2.684298,9.231489,-5.641277,-9.781923,6.468530,-1.656766,5.807785,-0.526999,4.546189,1.036640,-8.722306,-9.428314,5.298969,8.943004,-6.249532,0.793717,2.223962,7.767710,6.251064,-0.925113,-5.306260,6.065079,-5.654696,-1.176296,-4.041806,6.082192,9.854166,6.292188,7.996896,-9.877798,-9.901542,-6.797145,-3.585009,-9.550780,-9.253442,-3.651047,4.641807,-6.981177,7.798357,3.990314,-9.213265,-9.868385,-8.319785,-3.720010,-7.078666,9.307257,-5.553701,-3.530427,-8.923018,1.118585,-9.415270,7.638150,5.132725,2.131092,-1.610041,-0.412765,9.409136,-3.613467,8.110487,9.159529,1.217494,-3.658993,5.768149,-2.844303,1.303905,-7.176474,3.648626,4.847504,4.463563,-6.421943,4.325264,-7.679971,6.230982,-8.853534,8.539423,0.922005,2.038200,-2.486707,-2.828739,-6.526790,-2.021451,0.864243,-5.358601,3.943684,-0.891691,5.580310,-7.522204,-1.808394,-5.593274,-6.055550,0.320096,-5.383213,-5.000607,1.497495,7.531832,-7.241029,-8.889960,9.879119,1.921187,-6.756159,-2.129182,6.669644,6.765359,3.835618,0.967142,9.914885,9.704062,6.168646,-8.522151,-7.811648,-5.136340,-4.862084,1.441250,3.018583,-9.576581,-4.350832,7.990526,7.147733,6.481552,-9.564682,7.973421,3.135665,8.485662,-7.219800,1.921543,8.776531,3.501618,-8.332468,9.667122,2.459909,1.598080,3.516296,-1.714530,3.695637,0.438110,-0.751129,6.051059,0.593925,-5.003442,9.630619,-3.791843,1.850570,-5.961472,-3.900746,3.399979,7.644499,2.781021,8.682059,0.469229,-0.255258,-5.478734,7.717901,-6.990562,-5.683545,-9.962890,7.153264,-7.734352,4.123424,-6.661126,-0.978296,4.068854,3.046279,-9.248913,-0.124895,1.949473,-5.104614,9.703645,-0.805783,-7.677586,-3.078874,-8.043142,-9.921770,-1.517566,0.687653,0.854974,-1.376493,2.477139,-2.557852,-4.539446,3.772334,5.220456,0.793256,-8.850544,-0.336285,-5.932042,4.813066,-1.166169,4.518968,9.415035,-5.898634,7.625977,-9.757699,-9.629715,-2.745557,9.406578,-5.682901,-7.733642,-2.872308,7.781737,2.473852,7.350259,-9.335993,-7.694314,4.357694,-4.323411,7.635509,-3.148089,-0.766209,-0.950642,-4.840690,5.367400,-4.724444,-2.572283,-4.688009,4.941987,-4.787798,-2.524392,6.624907,-6.095640,7.990853,-3.145352,-5.633810,-0.280127,8.973354,-4.301397,-4.169777,-5.110121,8.410971,0.021352,4.350461,2.586676,-2.125988,-4.634199,9.318310,-2.377918,-1.207592,0.020492,0.737390,0.068777,-0.893458,-1.112022,3.743169,3.866946,-3.580425,-4.139967,3.887003,9.324348,-7.022152,1.209858,-7.454263,-8.906031,-5.471039,-0.107801,1.828283,-8.584870,7.145477,-2.918082,-0.675805,1.302819,6.190348,-7.236394,7.414259,-1.758432,6.263471,4.792884,1.906780,-8.181299,2.603296,5.609448,0.328847,-0.462644,2.178236,5.369399,-2.998001,-4.010082,8.428388,6.188719,-0.340210,-9.972814,8.271153,8.348604,3.706512,7.217417,-1.976670,3.498291,-0.215179,-2.959699,-6.074605,3.709726,-3.868654,-8.095419,-4.866604,8.077884,7.624289,7.055993,9.719544,5.602027,-1.403750,-7.195331,-1.472309,-5.666150,9.368276,-4.933024,5.250476,6.188402,6.707781,6.611075,9.105875,-3.972012,-9.042018,1.788740,-9.076854,-1.988694,2.779340,-4.906372,-9.382731,8.719594,1.699698,5.460836,2.349181,6.389947,7.987805,6.406820,1.962344,5.594460,6.438558,7.990945,-4.064455,-2.146505,-1.335274,1.659094,-6.364620,3.333542,-2.193333,-5.468502,8.099478,-3.136920,-2.551443,4.960514,4.050144,4.641445,1.473866,-4.910638,-1.298446,-6.492677,2.171740,2.808214,-2.314292,-6.789027,3.395643,-5.034131,-7.119423,8.917556,-2.983403,-9.204451,-5.353033,-0.304220,-4.208746,7.122502,-9.636463,-1.241652,8.533724,6.218533,-2.321275,-8.762173,-0.857046,-7.241885,8.917165,2.051252,-8.382886,3.467362,1.225082,-8.793413,-2.258294,-6.438698,0.687771,5.544525,-9.409098,-4.541486,-4.937839,-4.258040,-1.871340,4.167773,3.340080,3.291058,-1.791630,-7.625173,5.161757,0.276780,-4.266842,-3.314277,-0.704304,-3.661620,-9.247982,4.635861,5.334164,4.315679,-0.873633,7.749213,2.101315,0.748743,8.181924,6.754613,1.093913,-8.065526,-9.646098,7.181905,-5.924054,4.984285,6.414073,2.985436,-1.859580,-8.316026,7.214629,-4.622427,-5.524382,-5.633810,5.755834,-6.065338,9.571442,-5.216501,8.008175,-9.048129,2.348531,-7.253589,0.182513,5.461932,-5.880468,-1.225504,5.124029,-7.930347,4.918033,5.589977,-7.664525,3.063764,0.560970,1.726898,1.379263,-7.284644,9.422219,9.129948,9.609941,5.457095,-2.649519,7.536153,-7.988844,-8.169107,9.981216,3.730457,6.880639,4.999072,-4.786168,-7.420227,-9.422285,2.757105,6.840566,-3.433711,8.820181,7.942889,-5.827677,-2.720099,-5.152124,-9.055553,-3.069090,-5.955647,-9.646080,-4.878681,-1.082839,-1.369587,-6.077797,7.752922,1.032372,-8.317891,5.694897,-5.382468,-1.069003,-9.512617,2.537905,-0.180113,-5.013856,-8.653641,-0.087381,-0.988497,8.816163,-5.173817,-3.624596,4.243119,0.721335,-3.759659,9.182707,-9.947464,1.166349,6.317663,8.291802,8.255784,-3.474615,-6.222282,-9.866431,2.309611,-7.659367,4.989991,9.847349,-5.062145,-4.482073,6.347139,1.219956,-9.989305,2.250535,-1.940434,6.046748,-1.859281,2.234820,7.891575,3.921158,2.111478,-1.572730,-9.513660,7.835081,-3.564359,-3.108855,-6.450907,-2.762069,-1.785110,-7.343465,-7.326793,-8.676385,5.350217,-8.048854,-6.695376,5.919714,4.025746,-2.348200,-2.330354,-1.920595,-0.541788,-0.543809,-9.083909,0.956870,-1.483032,7.075398,5.886510,-8.682417,8.433154,8.900777,-4.717118,0.048433,-6.490079,-8.056511,-1.389652,-9.201413,2.125635,9.553593,3.134909,-3.898589,-0.271358,-6.776702,-1.079091,-6.062481,8.261200,2.006428,-3.148141,4.081037,-0.565837,7.598193,-9.968655,1.470033,6.745900,-5.172804,6.664766,-7.182057,-0.132078,-1.400811,0.085179,5.272597,-1.366477,0.204597,0.142613,-1.284720,-2.706760,-9.744303,0.272976,-8.549627,-7.529981,9.338127,1.072667,7.201397,-6.894017,-9.541111,-5.664938,3.675545,-9.031041,-6.340554,2.103275,-4.674862,-9.026311,4.741194,-3.216725,-0.814427,-8.166904,3.381976,-7.499394,6.935180,-9.123145,-2.422919,2.572129,6.230873,-8.247526,-8.303335,-2.584284,4.250395,7.449166,-4.977398,-4.349070,7.536847,-7.834761,3.732426,4.263246,-3.613676,-0.940031,5.253550,-8.473355,-6.168312,-1.648900,-1.569338,3.982539,0.430248,-1.331375,-6.179766,6.597117,1.971848,-9.250573,-1.464900,-0.914435,4.163463,6.367399,-7.085249,-3.793268,3.773332,5.507872,1.237989,7.168085,-3.290223,7.564643,6.252238,-2.742654,-8.991610,6.704893,-9.991005,8.620231,-4.872585,-4.833174,-2.400701,7.046165,1.980151,-1.728909,2.601846,-7.044638,9.568662,9.803674,-5.343422,-3.867830,-2.379400,7.628128,9.954349,8.767754,0.306767,-1.586770,-9.326217,6.866678,6.053557,-1.603353,-1.449823,-4.071934,-7.324037,-9.768142,4.955324,-6.743392,-5.911008,-0.373614,-5.566010,5.081226,-0.842822,-6.499058,-4.113406,-9.451910,0.143940,-7.270859,5.800580,5.234239,-5.137862,-3.409174,-7.478113,-1.014822,-4.603275,-8.836483,-2.273701,7.735270,-4.761027,2.440127,7.809345,-1.076961,-9.633344,-5.626639,0.641934,-0.551050,4.625366,6.771179,2.314657,-0.538204,-4.133221,-0.411876,0.757951,1.599067,8.324996,-9.376285,2.567344,2.684958,0.038028,8.401926,-9.380333,4.676445,3.049286,9.812537,-3.505874,-5.371095,3.753272,7.990815,-0.425206,-8.105754,5.092588,1.302585,7.412603,-5.398110,-8.940180,1.278531,1.171507,9.455416,9.410360,4.691686,-6.857755,-0.770583,4.133714,-3.316931,6.324099,6.268746,2.826347,9.300457,-2.910957,-3.639641,6.926382,2.115494,-1.398734,4.936703,2.897578,6.338186,9.559205,0.871533,3.493907,-8.848645,-5.011963,2.786803,-2.711547,-3.028832,-7.100160,-3.742101,-3.504302,0.572480,-0.401217,-0.319206,0.333660,3.312580,-0.933734,5.809306,3.168923,-2.312026,-3.508307,9.739080,-5.496889,1.884942,-1.724711,-1.362204,8.325992,3.319791,7.023096,0.222138,8.897609,4.773547,-4.020855,4.999809,-0.137830,0.366708,9.087239,-4.616039,1.463696,6.243240,6.687161,-2.558276,9.408177,-6.566096,-0.434246,3.908655,-8.529028,8.527786,-1.416445,-6.419223,-1.095078,9.231436,5.144891,2.293449,2.292986,-5.206184,-3.184208,8.192905,4.340945,-7.239922,7.227170,2.778616,-3.827499,-4.025669,-5.664590,-5.294964,6.805388,-7.763118,3.569829,8.763665,-1.477700,8.405923,-9.450330,-1.694461,-4.670680,6.211460,0.900085,4.690566,9.302859,-1.232512,1.169407,-9.239439,-0.008923,2.123079,-9.771227,-5.499040,-7.612550,-8.606720,-5.907625,-4.579389,4.973012,-1.903539,5.307794,7.238679,-8.363310,-2.273796,-7.471947,-3.319721,8.622065,-1.442487,-1.278121,8.112073,-1.872284,8.958391,-5.387947,3.786224,-2.552409,-0.627501,0.955419,-5.344635,1.450178,1.853303,-1.979724,-6.605342,0.330523,9.052261,2.276464,4.950122,-2.638548,-1.506439,-4.107502,8.577191,-5.082785,-7.101468,8.626184,5.028774,3.614578,-5.110986,-6.509558,-4.154094,4.188092,3.862771,-0.273621,-0.583169,5.827355,2.630565,-6.014234,-0.029551,1.227565,-4.081862,-1.748157,1.472975,2.938387,6.575818,2.519386,1.394139,8.597779,2.540233,6.742726,7.980054,8.025526,2.073364,8.203603,-9.491479,-0.468049,5.719728,-2.258896,7.955331,-3.503300,4.442878,-2.750495,-5.741600,5.385197,4.659581,2.584437,4.751913,3.699905,-0.400282,0.955733,3.351484,0.343993,-6.926996,-9.299872,4.930648,-2.005664,-2.256085,-4.539478,-0.054784,-4.499437,-5.338042,-9.768103,-4.909456,-3.016047,-4.706372,6.716725,-7.717995,-7.122808,-9.387604,-2.178892,9.922852,-1.556606,7.248894,-0.172550,-0.871381,5.800248,-3.107053,5.223880,0.277663,4.855973,9.417801,-4.307203,-2.841154,-9.660286,9.676009,-0.829224,0.150451,-1.410468,2.337238,-6.112984,0.688788,1.606379,-0.171350,5.871753], dtype = "float64")#candidate|251|(2464,)|const|float64
call_250 = func_111_call(relay.reshape(const_251.astype('float64'), [16, 11, 14]))
call_252 = func_111_call(relay.reshape(const_251.astype('float64'), [16, 11, 14]))
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_258 = func_111_call(relay.reshape(const_251.astype('float64'), [16, 11, 14]))
call_259 = func_111_call(relay.reshape(const_251.astype('float64'), [16, 11, 14]))
output = relay.Tuple([bop_244,call_250,const_251,call_258,])
output2 = relay.Tuple([bop_244,call_252,const_251,call_259,])
func_271 = relay.Function([var_242,var_243,], output)
mod['func_271'] = func_271
mod = relay.transform.InferType()(mod)
mutated_mod['func_271'] = func_271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_271_call = mutated_mod.get_global_var('func_271')
var_273 = relay.var("var_273", dtype = "uint8", shape = (2, 12, 1))#candidate|273|(2, 12, 1)|var|uint8
var_274 = relay.var("var_274", dtype = "uint8", shape = (2, 12, 6))#candidate|274|(2, 12, 6)|var|uint8
call_272 = func_271_call(var_273,var_274,)
output = call_272
func_275 = relay.Function([var_273,var_274,], output)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_379 = relay.var("var_379", dtype = "uint16", shape = ())#candidate|379|()|var|uint16
var_380 = relay.var("var_380", dtype = "uint16", shape = (3, 4, 6))#candidate|380|(3, 4, 6)|var|uint16
bop_381 = relay.greater(var_379.astype('bool'), var_380.astype('bool')) # shape=(3, 4, 6)
output = bop_381
output2 = bop_381
func_392 = relay.Function([var_379,var_380,], output)
mod['func_392'] = func_392
mod = relay.transform.InferType()(mod)
mutated_mod['func_392'] = func_392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_392_call = mutated_mod.get_global_var('func_392')
var_394 = relay.var("var_394", dtype = "uint16", shape = ())#candidate|394|()|var|uint16
var_395 = relay.var("var_395", dtype = "uint16", shape = (3, 4, 6))#candidate|395|(3, 4, 6)|var|uint16
call_393 = func_392_call(var_394,var_395,)
output = call_393
func_396 = relay.Function([var_394,var_395,], output)
mutated_mod['func_396'] = func_396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_411 = relay.var("var_411", dtype = "float64", shape = (9, 6, 2))#candidate|411|(9, 6, 2)|var|float64
uop_412 = relay.asin(var_411.astype('float64')) # shape=(9, 6, 2)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_416 = relay.const([-7.124614,0.874766,-4.382415,-0.204941,-3.786155,2.520461,5.705220,7.715567,1.679419,6.399047,-5.445257,7.513055,8.976036,-0.530572,9.422946,-7.168809,9.398938,-7.985443,8.980171,1.487873,-5.614548,-4.239231,8.431097,4.688188,-9.271492,8.183150,-3.395914,-1.250981,2.044362,-4.427514,0.066712,2.765096,-5.760801,0.112662,-1.471436,0.265778,5.284914,-3.137199,2.917218,8.620643,-8.247130,4.713953,6.624624,-9.261525,-3.963144,8.458568,-6.885613,-5.589926,-9.894479,-9.334689,-6.513622,-9.282986,-2.111288,9.472947,-2.922431,4.073258,7.209443,4.435961,-5.471702,1.914177,8.639848,4.323177,5.668064,-5.843632,0.987425,-2.781359,5.863520,6.468737,-4.155297,8.982710,4.624586,1.499839,1.570642,1.580578,5.521452,7.131955,8.717158,-0.334370,-4.239097,-3.361484,4.908232,-8.694660,6.955906,-5.300824,-3.150002,-4.299282,-0.768858,-4.932590,2.246264,-5.174431,-1.287595,5.669490,-9.999661,0.377774,-9.484882,-3.288008,-8.653101,-1.416074,-5.780060,2.618358,8.415610,-9.532746,-0.574433,7.301217,-6.495248,-9.513867,6.624516,-5.259398,6.826019,4.001686,8.314615,7.675968,-3.544313,-4.540137,9.676131,6.176284,5.129948,-1.999457,-5.580189,9.439137,0.298505,0.101440,7.863955,-6.203866,1.595539,9.814424,5.318053,0.995567,-7.950560,-2.862740,0.377851,-8.864331,4.675924,-7.940382,4.478146,-8.750574,0.231693,1.557340,7.868333,0.697214,1.151689,-3.973605,-9.370390,-6.825092,3.612656,-0.027485,-1.954758,2.516695,7.993427,1.856954,-9.020286,-2.008258,-1.098775,-1.113888,0.778392,-8.926657,-7.623600,-7.002318,-9.915429,-9.767141,1.994701,7.449330,0.528154,-5.623811,-1.282710,2.711071,0.519465,7.678538,-8.727478,-1.880201,9.509918,-5.133716,3.242113,-1.371949,-6.282156,5.485388,1.792872,3.512389,6.241957,-3.349687,-7.218747,-0.700671,2.576450,6.799415,-7.441477,6.712439,-4.858880,6.359785,-7.895241,-4.136621,-8.715424,4.824205,-3.790988,6.062331,-0.033169,2.918616,0.733827,-6.038452,6.732953,-3.586663,2.260089,-0.509806,-9.027704,1.762522,2.723576,2.500318,1.064687,-4.991374,1.650834,-7.704278,6.903158,-0.818684,5.157052,7.412528,-2.848982,-1.700643,3.422745,-4.418892,5.457901,5.817346,7.421889,-6.064731,0.974646,-4.424612,-0.089964,-6.833248,-1.427008,5.029232,1.091291,5.374285,-0.054554,-6.554063,-6.684701,3.719861,-1.029598,-3.422606,0.941824,1.148800,2.751142,-3.921149,-5.717957,1.691358,9.810638,-0.479823,5.142476,2.318170,-3.548801,-0.160373,-1.321210,-3.289093,-9.640000,-6.070068,2.110188,-4.169490,7.913337,6.315596,8.555663,-9.915686,0.081659,2.028804,-6.153631,-9.547907,-7.321693,0.309388,2.262937,-0.515969,6.784009,0.650261,-3.217132,9.045918,-6.247382,8.451711,-6.891706,4.431902,-2.521147,-3.511921,9.492172,7.118547,3.763491,-1.195943,-4.138105,-5.851658,2.833433,1.093782,8.497180,7.340651,7.926495,2.221713,-7.224466,9.400176,-6.970278,-9.424839,-9.715304,7.798175,-7.265611,-9.307947,-5.222146,-8.372607,0.169061,6.195127,9.512160,-5.956088,5.022891,-8.298604,-8.907335,8.584411,5.790599,-7.470674,5.147783,-3.500424,9.519719,5.176450,4.640371,4.377816,3.496027,-3.755668,3.837762,0.721140,-3.837923,4.010586,7.799225,6.215482,-3.352237,-3.239687,-7.642108,1.456328,-5.791057,8.730224,4.933066,-4.505700,-9.198117,5.837268,6.563275,-3.437595,-1.567622,2.639780,-8.913386,-8.853055,-3.352608,9.119184,0.817620,8.705786,2.209263,-0.680425,8.931074,1.012468,8.047499,-3.494916,5.468316,-3.257197,-1.189451,2.404511,1.653897,4.354124,-2.003118,-6.365392,0.834811,1.344398,-0.689861,2.366636,-9.625853,4.344717,1.648203,1.717523,6.412310,-9.685518,5.084543,-2.790514,-1.685557,-8.805731,-1.340691,-6.661039,-3.054078,-4.464796,3.480125,2.725763,-9.051061,7.501911,-7.126270,-6.288461,8.853773,3.073722,-6.712586,9.497647,5.138871,-4.555202,-2.617016,4.208776,-2.662461,8.518140,-6.036413,-5.789092,-8.619841,-5.454689,-4.623620,-3.874030,-9.134657,-0.002949,8.207508,4.008427,3.218759,2.780728,-2.125150,4.206534,-5.502793,9.119310,7.128798,-7.039554,5.598571,-4.275885,9.071846,0.591725,-4.330101,4.709762,6.036015,-7.201258,-5.103150,-9.290738,-7.745800,0.220856,7.045222,9.848819,-7.151613,-3.600723,6.123274,6.994391,4.456435,-8.521840,-7.035366,4.163503,-1.918411,3.432564,0.875587,8.161085,0.006489,6.340039,8.379671,6.405226,-5.575996,-5.762978,-2.970048,-6.638774,-2.108080,1.759995,-7.250159,0.714835,-1.692348,2.565375,-2.108059,0.176914,-0.894454,-0.958096,-5.519628,6.585655,6.375521,-5.558218,-8.180031,3.217450,3.698175,8.964773,-3.550150,-9.489253,1.217851,-2.441884,-8.827244,5.229496,-2.711861,5.321717,5.958832,3.082108,-2.808332,-8.549283,2.422447,3.951428,-3.365055,-2.015689,9.024428,4.849679,2.650664,9.725621,-4.278121,-0.159671,-6.727186,9.097672,-2.328242,7.411247,-2.933208,5.365505,7.668417,-7.905676,-5.731405,-0.551590,5.440817,-8.332431,-9.599744,-6.456286,5.552021,1.013297,-8.763202,4.702329,-7.146046,0.153689,1.460432,-9.489528,-0.552677,-0.567495,5.041580,-8.869140,5.272832,8.218896,-3.057030,-1.762182,-9.703552,-8.050668,-7.179343,-9.879637,-9.011362,6.909986,-7.904767,-0.054674,-8.255530,3.943533,-8.764897,-0.228022,6.553314,4.775246,2.441527,9.068726,5.432312,9.643347,9.518046,-0.650186,4.158155,8.340363,6.727216,-9.201800,9.556039,-1.673937,-0.731078,8.753757,-5.622125,8.551427,-6.568740,-0.450332,-3.147508,9.924700,5.593290,4.045498,5.374145,-7.883141,3.846624,-1.426656,3.860405,-3.345138,9.086458,3.990907,-8.268832,8.058814,3.761332,-9.633315,1.564572,0.712396,-9.983301,-4.979985,-8.449949,-5.129703,0.971012,-3.093961,3.487055,-0.115645,-6.248222,7.096072,6.206665,0.237610,-1.880911,-7.473921,2.276301,-5.424953,2.179121,8.281861,0.429908,4.429345,-8.710451,6.688154,-8.040121,-2.200772,1.436645,8.090109,-8.140416,6.616315,-4.149206,7.141429,-5.092657,7.012875,-5.728616,6.416618,4.813321,-6.589833,-9.936114,0.775975,-9.175091,9.059098,9.477978,-3.433461,0.314930,-1.135197,9.541569,5.647798,4.692270,4.026188,9.996033,-3.956532,7.780670,-3.001989,-2.800022,-4.687416,7.418298,4.548539,-1.891051,-9.009468,3.497598,-2.881492,-1.052491,-3.186857,-5.226657,2.694347,-4.594053,-0.098897,0.346349,3.554144,2.756470,-0.091961,7.526052,8.832934,7.609634,4.733023,7.498346,7.145416,0.614857,0.532445,-0.970279,2.901582,-1.260087,-2.586259,-2.297257,-0.118670,-0.327811,-9.137175,-6.297993,5.161835,-9.781507,-8.618017,-5.598757,9.555102,-7.994811,-6.338312,-6.489201,9.279746,2.229672,-2.657228,-3.709237,3.473431,8.519659,-0.556679,-1.245116,9.518542,2.270016,-5.107309,1.092679,4.529228,-9.029364,-5.572340,-9.610770,-9.980656,-1.890234,7.697582,7.737668,5.721519,9.137361,-3.656557,6.786345,-9.131311,7.976979,3.508466,-6.767293,-3.216938,-1.804361,7.987895,4.853415,-6.446422,-4.800696,-2.462325,4.309458,-5.709105,8.211147,-6.427060,-5.050052,7.546667,8.530721,7.063987,-3.010886,-2.872474,-6.716191,5.236947,2.438286,9.471324,2.265922,6.311629,5.811790,2.053662,-8.453919,-3.120095,-2.240567,9.415363,-1.354520,-4.064793,-1.146743,1.163969,-2.122279,-8.099763,-1.716877,-1.794449,6.059396,-8.786389,0.330014,-9.266352,1.398334,8.740198,-2.173630,3.514536,8.421142,0.406564,5.925184,-7.135601,6.135848,2.775155,0.949233,-3.922423,-3.561896,9.892426,-7.535334,0.286871,-9.893981,-9.462598,1.931693,1.795396,0.769854,3.759817,2.689461,-4.063314,-5.562793,2.929934,4.921931,7.912690,-7.181378,-2.433114,-0.215836,5.235069,-4.380207,5.182724,6.795457,-0.289860,-6.729055,1.889858,6.990540,-5.347137,-6.940526,6.993207,7.198744,8.530909,-2.347500,4.137069,1.077340,3.548088,-8.471793,-9.333196,-9.000432,-9.394943,-1.603461,-1.526480,1.015003,9.734026,-0.797113,-7.285190,4.081444,-0.719979,4.006307,-2.648837,-7.625536,-6.311312,9.851545,-1.468742,9.047713,-2.061574,2.600704,5.815748,4.504951,-3.257425,-5.268519,-2.358701,-8.761414,5.442450,-6.659713,-7.169687,5.011811,6.290046,5.012685,-7.532193,-3.924829,-8.187234,-9.798187,-0.581452,9.668915,7.666746,9.972928,6.921943,-9.701621,9.786277,3.372161,6.038994,-5.560534,0.555690,5.622565,-9.057325,-3.123824,8.835438,8.518069,-7.500104,-6.319600,-3.645934,4.306915,1.437690,-4.183022,-0.533918,-9.787806,-7.693594,-6.498382,8.619012,-6.928030,1.365004,-2.349117,8.350836,5.600592,-5.066286,5.194542,0.894542,8.264883,3.788386,-7.669863,9.224569,2.855951,1.857800,3.439426,1.828914,3.895668,-3.140443,9.519131,9.394485,4.394123,-4.225136,-4.952370,-3.968171,-5.186894,1.411836,3.458821,-8.378508,-4.729667,8.494392,-7.855300,1.289788,8.643650,0.532530,1.054020,0.945940,7.841800,-8.095004,-7.007297,9.092082,-5.066724,9.375536,2.952860,-6.371250,2.734134,1.002462,1.778459,4.181571,-1.752651,0.731968,8.634509,-4.708756,6.650002,-0.740373,6.981346,-2.812875,-6.149711,-5.582802,0.041374,-9.142751,-2.108697,-9.124862,-6.955399,-8.885162,2.096752,2.537024,8.803425,7.422265,-2.254809,-2.325849,5.650681,4.084778,-0.574201,1.857871,-6.440812,-7.730443,7.727134,-6.880191,3.079602,-9.780819,8.467039,1.847815,9.767588,5.914297,0.226290,-3.013051,-0.124809,-0.495724,4.650511,9.085283,7.859264,-3.384934,-5.781332,4.016094,1.880329,-6.229795,4.800801,3.501282,-7.203862,-6.145257,-3.925825,-9.482473,-0.233079,2.318062,-5.345798,0.802740,0.158217,-5.497946,3.699814,3.672051,3.622675,9.810733,2.857133,-3.925008,0.929181,3.281467,3.878897,-9.070792,0.989983,3.992311,-4.022757,6.963739,-3.365181,-6.585499,2.649414,-8.489781,2.357960,2.782836,9.353242,9.176618,-8.653454,-8.771419,-1.232170,0.996840,1.927397,-1.568175,-4.200361,4.858415,1.189802,-6.755863,4.968195,-7.777125,-2.225282,9.629097,9.213284,-3.776276,-2.049161,6.949511,5.920271,-4.600550,9.032784,8.464612,-1.981095,-0.681170,-0.168754,1.137918,5.280966,-9.324138,3.219370,1.492497,-7.350477,0.748921,6.870449,-7.373865,4.122991,7.931915,7.163275,-8.609995,8.324582,1.844974,1.772373,1.586255,-8.550033,-2.625713,9.356968,-1.487809,9.023735,-9.953357,-3.709425,-8.349073,5.787748,-3.415951,-5.471545,4.895585,7.779600,9.888744,9.094566,-3.871680,-7.969384,3.226097,-0.952412,-1.696875,0.922712,-4.572553,1.070819,-8.213426,-4.351193,7.415384,5.025937,-6.606955,7.411870,-6.808161,-3.570316,8.411961,4.721992,4.777253,-7.692278,-2.359585,-7.700862,-8.359894,2.104520,5.092948,1.740504,-7.846726,7.811352,-9.719061,-5.964519,0.377032,9.667239,0.087883,1.529893,-3.231518,-9.916076,-2.767813,-9.695212,-1.806599,6.657983,6.709794,-7.612854,3.557479,1.171329,7.322552,-2.046500,-4.895077,2.127040,0.306194,-1.400820,-2.132299,-3.284770,-2.523507,2.328134,-6.276483,-9.087546,-5.256353,9.225717,-7.921652,6.354450,-5.434071,-4.495419,0.616676,-9.397112,-1.323975,-8.964712,-5.043537,7.041411,7.137120,1.119232,6.459129,-5.783007,8.007795,-5.764328,-8.977947,8.882576,1.961123,6.047144,9.087404,9.734659,3.896583,-6.912278,-6.418228,-5.206573,9.212155,7.236747,0.251785,-3.900137,9.763949,-3.115655,-9.799888,-1.368468,8.094444,-7.829897,-4.422266,-8.941194,5.768946,4.945381,5.843154,-6.673585,1.530943,3.177760,7.721469,5.705533,-6.650227,-0.871387,4.013406,4.262112,-3.770022,5.026505,3.419785,-2.016058,9.994540,2.230796,8.888802,4.934657,9.559716,1.420295,-6.467519,-9.258132,-2.520068,3.291922,9.465896,-8.348040,-8.408040,-5.810231,-2.685256,-1.320515,-5.941137,-0.235957,0.411715,2.369971,-4.625187,9.795071,2.986943,-1.925158,-2.312380,-0.429189,-7.640400,-8.075664,-6.563765,-1.704923,3.232755,-9.914876,-7.982992,-9.277675,-5.148547,0.296922,-7.561703,9.290610,-6.778458,-7.765029,8.221727,-1.497823,4.270522,-3.361308,-8.864100,-1.076711,-4.665150,5.788586,2.548768,-4.156116,2.560486,2.992227,4.328832,-1.424633,-3.572827,-4.043701,9.080946,2.741392,6.900662,-9.212519,-5.403664,-5.139332,-0.520442,-9.982758,9.894252,5.152558,-5.191539,-3.742375,-0.068433,9.500140,7.680946,-0.807029,-1.275058,-3.999583,-3.231768,5.515481,9.164132,6.043188,-1.530311,-3.055689,-0.951388,-7.815357,-8.296368,-8.343216,8.445016,7.786803,-2.401634,2.861281,5.967186,-3.152938,5.901116,-1.334452,6.701333,-3.631474,8.773474,9.044004,-1.983744,-6.101591,1.806214,8.150943,-4.134582,9.682201,7.959019,-5.617738,-8.531887,-0.469742,-8.063931,2.315638,-6.006696,4.788516,-9.923456,8.403833,3.718441,8.639915,6.086589,8.525911,1.101672,-0.860943,-5.539739,1.517088,1.848617,-7.346522,-0.961992,-0.304279,2.006455,6.112918,-8.702799,-9.843425,-4.169468,-7.297387,6.941685,-8.916935,9.457859,6.454297,8.413254,-8.936334,-8.932856,-1.838680,-2.956368,0.453118,5.900165,3.393839,0.888636,7.444007,6.874274,4.043281,1.169954,4.844562,-8.089259,-1.529223,2.360502,8.800288,4.880581,8.901395,-8.679246,1.118102,2.511139,1.506434,0.077494,-8.012312,5.566815,9.750279,1.628443,8.314614,9.345842,2.221265,-4.185921,-3.530117,8.145484,-3.607418,-8.131593,7.088033,-5.624953,-1.695117,9.324472,6.008250,5.527575,3.850391,7.724883,-4.133603,8.526469,-8.937815,-2.564307,6.562927,-0.975088,6.922810,-4.287592,-9.182363,-3.598925,-7.134888,8.486179,-0.281465,-8.857582,-0.244168,-9.954435,-9.278978,-4.977301,8.533241,4.863042,-0.746681,-1.589132,-8.707209,-3.937807,-7.556613,5.975363,-7.467603,-4.582260,1.990379,2.935241,-7.803020,2.809065,4.736258,1.940019,-4.141528,6.589852,-8.183808,9.293969,-7.311938,0.947147,-5.138965,0.270031,-7.278099,4.554857,-8.772759,6.374686,-9.670879,8.619860,-2.074491,-3.543984,2.174455,-4.941691,-7.331321,-5.679174,1.122619,9.719506,2.942912,6.594403,-5.508291,4.134656,8.136641,7.146091,9.853515,3.228562,-6.772692,2.235968,7.842120,7.821534,2.574844,1.314663,-2.097828,-3.243965,0.032323,1.241602,-7.229288,5.123100,9.413479,4.793146,1.576069,-4.390420,-8.081905,-3.729809,3.133755,3.334206,6.732482,-6.793475,3.549673,5.059688,-5.999985,-1.860241,-0.182544,-2.117225,8.869827,-7.128728,-3.860419,-2.680536,-8.747365,-9.343766,-5.341436,-1.359082,-3.441178,7.153646,7.001485,5.827146,1.866225,-7.628515,1.422257,7.949158,-6.583340,6.024944,9.542539,-0.693529,-0.127643,6.117931,-2.622837,0.188996,-4.502895,0.791110,8.334147,5.244051,-9.603875,-5.114666,-6.879270,-3.940428,-2.304417,4.982130,4.946720,3.151200,4.167178,9.952494,7.904833,-0.022183,3.123726,1.449818,-9.728209,-5.564298,8.193017,-8.885986,-7.428534,-5.539149,1.690084,-0.129753,0.052588,-7.267178,3.226170,3.099514,-8.443983,-6.663745,7.520263,5.067855,4.749578,-0.191556,-1.734773,-6.271792,-5.716886,0.288772,0.544988,-2.779192,-6.852136,1.158817,-3.714126,-4.113111,-7.343638,4.519650,-4.226724,-3.613999,-0.427486,-8.306433,7.265708,5.888230,-9.335033,4.413593,9.844898,-5.187286,4.213556,6.692088,-6.948594,-6.102114,-9.522541,-2.712922,-3.007929,-5.220256,-1.940184,-5.360528,-7.133989,5.139627,-9.995268,-4.996087,-0.479783,7.138711,-5.583129,-5.380566,-7.651103,6.934065,-4.002554,-8.383148,-0.484272,3.425330,5.344510,2.685354,5.471422,-9.985315,3.192367,8.378362,-8.657794,3.983924,6.870952,7.502605,8.013021,9.856111,6.514652,-1.836772,-7.347998,-8.633178,7.560082,2.089924,-4.677722,7.493003,-2.750634,2.276823,2.624089,3.768997,-1.882678,6.740681,-9.640175,1.307704,-7.137293,5.419788,3.293482,-1.461368,2.872553,-3.183162,-4.154087,-2.467633,-3.912681,8.100338,-2.484455,8.604164,9.144461,-0.676558,9.888101,2.648954,-6.165127,-3.336108,-3.742208,-4.395163,3.436352,0.681927,-2.085309,-0.766254,-7.940149,6.927306,1.579218,8.194544,6.149354,-5.398410,-1.467562,-8.639979,-3.612670,-3.501650,5.712923,2.308414,7.860628,-3.028083,-1.625422,3.789581,-7.591812,4.595954,4.744059,3.687363,7.084859,5.776157,2.543458,-7.147706,-1.819040,8.400326,1.773689,-4.556448,9.940508,5.587530,-0.589707,-2.652883,9.269720,-8.963253,0.996472,8.932448,3.717258,-4.653474,-8.571057,-7.934690,1.968464,-1.529575,-0.278910,-5.964473,-0.484054,3.067315,-7.587329,5.900093,-1.347786,-7.715492,9.223527,-4.216187,-5.878189,-7.071155,4.793667,1.171717,-0.250264,0.329158,4.209231,-8.670932,0.666219,-0.425965,-5.723134,4.673908,2.216157,-7.582206,5.172954,5.465087,1.090585,-0.078864,-3.088038,1.003399,-0.068247,-0.479366,-0.592677,1.428198,-4.532669,2.440507,6.346575,3.586327,-7.373052,-0.140885,-8.124171,7.230451,3.627955,-6.666680,-4.181449,-5.280448,4.842933,-2.786105,1.092612,6.344733,5.525096,-5.096687,-8.667024,6.224255,9.370420,-4.430846,3.181008,0.437889,-8.248399,-4.699943,-6.933178,4.489336,7.631429,1.608323,2.250816,1.655546,-8.912591,3.173037,2.331752,1.101372,-4.071339,1.817041,-2.846460,-6.099138,-0.155154,3.928771,6.343621,-1.172367,-8.106605,-9.379882,1.666024,-3.699076,3.072580,-7.644428,-8.735601,-3.072829,8.933547,-7.662638,-3.334273,-7.334612,7.745928,9.040888,-0.538500,-4.140118,-0.338529,-0.812507,-8.629591,7.773000,3.315248,-7.154331,4.603048,-4.673338,-6.183074,-4.847371,-4.069913,-5.475920,-8.955658,-1.543613,7.351959,7.785420,4.707289,8.196711,-5.593981,-0.749912,-8.925769,6.352155,7.285613,2.196465,-4.963100,-1.916644,-6.872002,0.693625,1.669709,-3.168546,-5.392359,-2.752878,4.738397,8.893697,-1.299877,1.461013,-6.997418,-4.080527,5.369138,-0.171608,-0.705324,-7.859120,6.352525,9.899964,1.794677,2.778069,-6.084574,-7.138683,-2.619165,4.452312,4.646917,7.037299,-8.966017,4.878245,4.612879,0.140955,-8.186982,7.252593,2.547737,-4.555876,-3.286697,-1.153928,4.321023,-3.506503,-0.603641,-1.749688,8.342138,-8.292416,-1.992155,9.798304,5.735729,0.354564,-0.444624,2.252141,2.587278,-7.945944,6.570492,-6.696812,8.236214,-1.083735,6.569176,2.367042,2.258984,-7.033529,6.772593,9.523318,-6.717217,1.883730,1.329729,4.582379,-6.308685,-5.475764,-9.689782,6.987350,-8.130154,-2.244494,-2.567095,-1.186760,2.067766,8.911253,-1.983807,9.595140,1.223894,2.062173,2.634362,-8.325505,-3.056741,4.155283,3.622254,1.092361,1.964631,3.603370,4.503536,6.173436,-5.980422,-2.369533,6.296594,-9.926886,-6.493743,-5.497970,-0.754358,2.186070,4.985992,0.215732,2.527375,-9.763045,-7.825089,4.848677,4.161558,-4.421028,4.889179,-3.736770,-6.140921,-6.706967,-4.964526,-7.824930,7.063336,-4.769851,7.604697,3.975042,-1.980787,0.356853,-9.900330,-2.822666,4.252155,6.566303,7.830078,9.092643,-6.378750,-2.227536,-1.050461,5.402438,1.795421,3.861955,-9.142114,8.392725,-4.271169,6.104723,5.148935,4.724741,2.988607,-4.290966,-5.310770,-7.723386,5.957178,-6.523478,-4.486731,7.520034,0.234724,-9.491643,8.294860,-5.687525,-5.531846,-1.467187,4.274849,-3.834963,4.764088,-4.293963,-3.459014,-2.931113,4.362947,-6.728427,0.919323,1.741743,-9.824506,-3.157270,-2.483053,9.444157,-1.606833,-6.338619,7.715030,-0.390238,4.470282,3.923202,-0.295930,0.750533,-0.552603,9.564433,1.421254,-1.874111,-4.962325,-1.666463,4.368994,2.966043,7.984261,1.323350,-2.429254,2.394898,-5.666460,1.026994,9.768538,9.275339,-5.778557,7.974272,4.824705,5.747801,-1.681901,-7.142769,-9.433233,0.809821,-9.681032,-2.386284,4.450170,-3.439341,-5.957409,-0.246676,0.505795,3.578678,-5.571871,8.467140,-0.951536,5.022012,-3.535907,-8.598054,7.919215,5.874412,7.703349,-4.841530,0.932886,-4.363932,-8.424942,5.900333,-5.783621,-8.916839,8.835503,7.946475,-1.987585,-4.649313,-1.769044,5.944136,2.026509,8.470876,8.256819,0.730001,9.875811,-7.634859,-9.716188,0.527204,6.273991,6.504426,2.091165,-3.394426,1.964856,6.007356,-0.293495,6.098038,3.632483,-4.121259,-7.410779,6.539553,7.441127,8.603001,-3.173859,9.500863,-6.017402,-1.121285,2.404286,-4.055277,-5.867253,-2.370807,-8.829562,-7.837074,9.510948,-2.989281,-0.470139,3.234059,-8.187731,2.985316,9.845823,-1.081068,9.054694,3.273211,9.862684,9.514145,2.759520,-5.491602,5.424186,9.320452,2.737773,-9.609241,-9.945553,-3.211233,-4.904572,4.977835,-0.577812,-8.216422,-5.338467,-8.106669,3.785955,4.613322,3.163382,-3.589318,-0.300020,4.558025,-8.844273,6.257750,9.178431,8.655697,8.998362,4.716568,-7.625325,7.478389,-7.666554,-9.535574,8.349700,-8.412025,-3.738955,0.084260,1.086556,-7.612126,-2.798366,-9.087754,8.610587,-1.861441,-3.707635,-2.862069,9.628514,0.121003,8.851055,6.768920,-1.028153,-7.661794,-2.391230,6.855006,-7.175739,1.190025,-5.786776,8.239967,3.826970,-7.513163,0.947014,-8.077257,6.409180,-3.631908,-4.317910,1.531602,-1.802808,4.989015,-9.965766,-2.175671,-6.276894,1.797757,1.266809,7.212618,-9.720411,-8.087981,-8.134921,-0.149489,-2.139945,8.411184,-3.403905,9.644941,-9.225700,-5.192369,-8.757908,5.002428,-5.819662,0.447160,0.032829,8.082925,-7.824666,-5.085903,-3.442976,-8.589087,6.433952,6.994898,3.873503,-8.305797,4.107880,-2.948291,2.875952,4.459645,-6.312515,9.149379,3.278441,-3.315523,-1.300550,-5.180159,6.807968,-9.177128,-9.664660,8.427849,-9.015338,2.692644,-6.504627,3.155449,-3.902577,1.774112,8.258378,-8.615481,4.412096,4.301318,8.069077,4.273484,-8.472016,-1.806244,3.965335,-3.238742,9.699651,-0.463693,7.350856,-2.009651,-4.950704,6.025602,-1.339850,-5.076285,-1.127815,-0.082115,5.098710,-8.178832,4.810842,0.145251,-7.163030,-0.218686,1.137624,4.365192,8.826237,-6.925834,-1.917195,1.737692,-2.397611,-7.421636,6.708673,-3.109527,-9.912055,8.900913,5.384213,1.328012,-8.535743,-1.260250,-0.244998,0.427315,7.898504,6.224351,7.511089,-0.015674,-1.188374,-5.095833,3.073190,-3.719875,7.011647,2.586393,-3.300238,0.898268,2.542246,6.569637,7.604556,3.995688,-7.047895,-9.284555,4.951313,1.470905,-8.557438,-4.835140,0.901587,9.615155,-1.680908,9.066860,7.722831,1.644973,-9.063847,-5.018130,8.829818,-8.446998,-6.389772,9.453538,-2.148432,0.260531,-5.120583,-1.981160,1.857170,6.205315,6.337715,-9.481776,8.840505,5.562861,-2.093061,0.886128,1.453084,-7.247968,5.115593,2.513636,-5.509150,-3.180499,-3.216983,-6.257967,-7.278809,3.960372,9.146331,2.556014,-1.987135,-6.660151,-1.819218,-2.428916,-8.330912,-7.857655,5.039366,3.228033,-7.795325,-9.304749,-2.040916,-5.279722,-2.569655,-0.107245,-5.287250,-2.800625,-0.091651,3.737803,3.541136,-6.184167,-1.687139,0.504098,6.373854,-1.000047,-8.627564,-7.564907,2.799644,6.439669,0.699781,0.174270,1.031206,-5.582343,9.131150,4.047778,6.049958,-0.760030,-6.385259,0.108053,-3.209453,1.737465,8.399559,2.580172,5.425221,-5.053781,8.912288,-8.676026,-0.536038,-2.028456,-8.118602,-6.414215,-2.343663,-0.781129,-8.198533,-4.834157,9.237801,6.022591,4.954472,9.254975,6.157597,1.844022,-8.875456,-8.586925,-5.349098,-9.229823,-2.591955,6.856607,8.733092,2.632267,7.028307,-9.066834,0.071118,8.518320,-3.063550,8.880383,9.015358,-2.768402,-9.666139,-8.701402,-5.323613,-6.300208,5.760128,0.728503,7.528249,-0.203933,-1.405214,2.190435,-9.883556,-0.287940,5.469297,-0.884859,3.920974,-4.639180,8.877003,-3.393948,4.142070,-5.639276,-4.079035,7.479223,-5.566167,9.832944,-0.223359,4.679900,7.720260,-5.225560,9.288006,4.360073,6.557941,1.042014,-8.005498,-8.699501,-4.027317,-3.415116,-4.985524,-6.538326,8.322954,4.966828,-5.079691,-5.902389,7.381787,-3.285580,-5.907892,0.179782,-4.166597,-5.908706,-5.745623,-6.603260,-7.303016,-6.985682,6.729624,3.758640,-5.644999,-6.667948,4.432986,-4.679338,6.503007,-1.638382,4.602677,-4.572832,-7.232541,-0.093287,4.028756,0.160496,-2.582475,1.924614,-8.318316,-8.319212,3.886193,5.679150,-6.001650,2.946386,-0.974289,8.226131,7.645414,2.635463,-2.098819,7.320237,5.461597,1.949191,-0.494989,4.543285,-4.233369,3.355531,-3.735147,-2.991189,-6.913512,6.431977,6.208555,-0.819886,-6.596951,-7.565129,-8.749200,-1.260375,-1.124582,5.541888,-6.189473,6.759773,-9.141793,2.693034,9.187321,7.320468,0.776376,1.601188,4.914972,-1.548282,5.813418,3.889620,-0.655969,8.022217,5.711537,9.141548,6.251707,-5.749201,7.877821,2.613765,-5.083046,-4.969366,6.256884,-1.593328,-5.837528,-6.310411,-9.670590,2.896800,1.290316,5.378500,3.408541,8.673571,-5.786384,-5.458727,3.955026,-3.087318,9.834150,5.243359,-0.868191,6.546633,-3.691047,2.871221,3.286358,3.555837,4.824235,-9.150193,1.789287,-9.152041,2.048123,2.759399,-1.884348,-7.114278,5.483797,-8.976090,-2.433276,-0.952238,0.895340,1.595415,-5.141615,7.005149,7.307348,-4.739755,8.152553,-1.284162,1.509258,1.332107,-7.397315,6.469988,-9.694620,7.682467,-5.357638,6.189595,6.379214,-7.153156,-2.951567,-7.798939,6.907999,-8.226319], dtype = "float64")#candidate|416|(2464,)|const|float64
call_415 = func_111_call(relay.reshape(const_416.astype('float64'), [16, 11, 14]))
call_417 = func_111_call(relay.reshape(const_416.astype('float64'), [16, 11, 14]))
output = relay.Tuple([uop_412,call_415,const_416,])
output2 = relay.Tuple([uop_412,call_417,const_416,])
func_420 = relay.Function([var_411,], output)
mod['func_420'] = func_420
mod = relay.transform.InferType()(mod)
mutated_mod['func_420'] = func_420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_421 = relay.var("var_421", dtype = "float64", shape = (9, 6, 2))#candidate|421|(9, 6, 2)|var|float64
func_420_call = mutated_mod.get_global_var('func_420')
call_422 = func_420_call(var_421)
output = call_422
func_423 = relay.Function([var_421], output)
mutated_mod['func_423'] = func_423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_527 = relay.var("var_527", dtype = "int16", shape = (5, 3, 1))#candidate|527|(5, 3, 1)|var|int16
var_528 = relay.var("var_528", dtype = "int16", shape = (5, 3, 6))#candidate|528|(5, 3, 6)|var|int16
bop_529 = relay.minimum(var_527.astype('int16'), var_528.astype('int16')) # shape=(5, 3, 6)
func_271_call = mod.get_global_var('func_271')
func_275_call = mutated_mod.get_global_var('func_275')
var_546 = relay.var("var_546", dtype = "uint8", shape = (24,))#candidate|546|(24,)|var|uint8
const_547 = relay.const([[4,-6,-5,3,-8,-1,-8,-5,3,10,-3,4,-7,-7,-5,-4,-6,-9],[7,-4,-8,7,8,-2,-5,-10,1,6,-2,-6,-3,-7,3,2,7,-2],[-1,-2,-10,1,-7,4,6,7,-5,7,5,9,-10,-5,-8,-4,5,9],[2,-3,-2,8,-8,-8,-10,-1,10,1,2,9,-5,9,10,-7,8,3],[8,-10,8,9,4,3,1,-4,-9,3,7,-6,-9,-1,-7,-9,-10,3],[-8,6,-4,5,-2,-10,-3,7,-4,9,9,10,-6,1,9,-4,8,-8],[10,10,4,2,-3,-7,5,-8,-6,10,-7,-10,7,-3,5,-7,-9,-6],[5,10,9,4,-3,-8,-3,3,-9,8,8,-1,7,7,-5,8,-2,-9]], dtype = "uint8")#candidate|547|(8, 18)|const|uint8
call_545 = relay.TupleGetItem(func_271_call(relay.reshape(var_546.astype('uint8'), [2, 12, 1]), relay.reshape(const_547.astype('uint8'), [2, 12, 6]), ), 0)
call_548 = relay.TupleGetItem(func_275_call(relay.reshape(var_546.astype('uint8'), [2, 12, 1]), relay.reshape(const_547.astype('uint8'), [2, 12, 6]), ), 0)
func_271_call = mod.get_global_var('func_271')
func_275_call = mutated_mod.get_global_var('func_275')
call_549 = relay.TupleGetItem(func_271_call(relay.reshape(var_546.astype('uint8'), [2, 12, 1]), relay.reshape(const_547.astype('uint8'), [2, 12, 6]), ), 2)
call_550 = relay.TupleGetItem(func_275_call(relay.reshape(var_546.astype('uint8'), [2, 12, 1]), relay.reshape(const_547.astype('uint8'), [2, 12, 6]), ), 2)
func_420_call = mod.get_global_var('func_420')
func_423_call = mutated_mod.get_global_var('func_423')
const_552 = relay.const([-0.593348,-0.931213,3.713603,9.196849,-9.099022,-8.465156,0.448082,-1.722348,3.628672,3.866528,6.556667,9.667596,2.548477,7.337227,-0.576143,3.818356,4.206592,2.464632,-1.537829,4.073274,9.660918,0.433058,-3.313532,7.519840,-5.185770,2.598386,-4.548851,8.698028,4.559023,3.921629,-8.120438,-3.187403,-5.759156,-4.614928,1.986554,7.294433,8.934130,2.960182,1.191121,9.156468,-5.369149,6.863134,0.101897,-6.720201,7.237594,-5.565802,-5.059126,3.479023,4.688629,0.714013,7.706217,7.673520,1.389827,-8.549182,2.634870,5.547631,-0.505849,-4.283123,2.082647,4.384317,-7.664207,3.489855,-7.291548,0.681878,-5.986038,-2.084891,-9.272632,8.884983,9.171020,-2.333054,6.822864,-6.367971,-5.991351,-7.197973,4.283383,-9.136631,1.254305,3.064247,-6.545779,9.450792,8.337822,-1.357571,0.643513,-9.781390,5.252774,2.799547,-8.293076,5.514032,8.389494,-4.017918,0.960226,-8.247997,-0.045386,-6.883735,0.138783,-8.940451,-6.533624,-7.025845,-4.209003,-0.121969,8.195180,-5.290744,2.390836,-5.065824,2.843793,5.356453,4.660571,-6.768591], dtype = "float64")#candidate|552|(108,)|const|float64
call_551 = relay.TupleGetItem(func_420_call(relay.reshape(const_552.astype('float64'), [9, 6, 2])), 2)
call_553 = relay.TupleGetItem(func_423_call(relay.reshape(const_552.astype('float64'), [9, 6, 2])), 2)
output = relay.Tuple([bop_529,call_545,var_546,const_547,call_549,call_551,const_552,])
output2 = relay.Tuple([bop_529,call_548,var_546,const_547,call_550,call_553,const_552,])
func_559 = relay.Function([var_527,var_528,var_546,], output)
mod['func_559'] = func_559
mod = relay.transform.InferType()(mod)
var_560 = relay.var("var_560", dtype = "int16", shape = (5, 3, 1))#candidate|560|(5, 3, 1)|var|int16
var_561 = relay.var("var_561", dtype = "int16", shape = (5, 3, 6))#candidate|561|(5, 3, 6)|var|int16
var_562 = relay.var("var_562", dtype = "uint8", shape = (24,))#candidate|562|(24,)|var|uint8
output = func_559(var_560,var_561,var_562,)
func_563 = relay.Function([var_560,var_561,var_562,], output)
mutated_mod['func_563'] = func_563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_717 = relay.var("var_717", dtype = "float64", shape = (10, 10, 16))#candidate|717|(10, 10, 16)|var|float64
uop_718 = relay.sin(var_717.astype('float64')) # shape=(10, 10, 16)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
var_724 = relay.var("var_724", dtype = "uint16", shape = ())#candidate|724|()|var|uint16
const_725 = relay.const([[9,-4,9,-8,7,3,7,1,-2,5,-1,-4,9,-5,-1,1,-8,-8,10,3,6,-7,2,2],[-10,-5,9,-7,-5,3,-1,9,-1,4,2,9,5,-10,3,1,6,4,7,8,-6,-1,5,-8],[-6,-8,-2,-4,-2,-4,-6,-8,-2,2,8,3,-10,2,-2,-4,3,-7,-10,1,-7,8,-1,8]], dtype = "uint16")#candidate|725|(3, 24)|const|uint16
call_723 = func_392_call(relay.reshape(var_724.astype('uint16'), []), relay.reshape(const_725.astype('uint16'), [3, 4, 6]), )
call_726 = func_392_call(relay.reshape(var_724.astype('uint16'), []), relay.reshape(const_725.astype('uint16'), [3, 4, 6]), )
output = relay.Tuple([uop_718,call_723,var_724,const_725,])
output2 = relay.Tuple([uop_718,call_726,var_724,const_725,])
func_729 = relay.Function([var_717,var_724,], output)
mod['func_729'] = func_729
mod = relay.transform.InferType()(mod)
var_730 = relay.var("var_730", dtype = "float64", shape = (10, 10, 16))#candidate|730|(10, 10, 16)|var|float64
var_731 = relay.var("var_731", dtype = "uint16", shape = ())#candidate|731|()|var|uint16
output = func_729(var_730,var_731,)
func_732 = relay.Function([var_730,var_731,], output)
mutated_mod['func_732'] = func_732
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1036 = relay.const([[[4,10,4,-3,7,7,4,-10,10,-6,3,1,8,8,6,3],[3,7,-9,-2,10,10,-1,-6,-6,-10,-4,-4,5,-2,9,10],[1,7,8,8,-1,2,1,-4,8,-7,-5,5,-2,-2,6,-2],[1,-9,-1,9,-7,3,-6,-6,-1,7,3,-7,-2,-5,4,5],[9,6,-1,9,5,6,10,-6,-7,6,-6,5,5,6,7,7],[-5,3,8,-4,7,4,5,6,-4,2,-7,-10,6,4,-9,-7],[-3,-10,6,6,7,-1,-2,2,9,-8,10,-1,-5,-8,-5,9],[-7,9,-5,9,6,4,-4,6,10,-4,-3,5,-1,4,-9,-1],[4,-2,-8,-10,-8,2,1,-9,-1,1,9,4,8,3,-9,-4],[8,-1,-6,9,-5,7,-1,7,9,-6,4,8,5,9,-8,8],[-2,2,-2,-1,-6,-5,5,8,1,-4,-3,-7,4,6,-3,-9]],[[7,-3,6,8,-2,-6,-6,-5,-10,2,-9,-4,6,-8,8,4],[-1,-4,10,-7,-6,3,9,1,-5,3,-1,-1,-8,-8,6,-2],[10,2,-10,6,3,-10,-7,2,-3,8,-1,-4,7,5,-7,-10],[3,-9,-2,10,6,10,2,-7,-6,-2,-3,-5,-8,4,7,4],[-6,4,-10,5,-6,-1,-8,7,3,-10,4,1,-8,-9,8,7],[-8,6,-7,6,-8,6,-5,-10,10,9,7,-10,-4,10,-4,-8],[9,-10,6,4,3,10,10,-8,-1,-8,4,5,-7,-10,3,-3],[3,-3,-7,1,-4,8,2,-8,-1,-3,-4,-3,-5,-4,-2,-3],[10,1,2,9,-6,3,3,3,8,2,-6,7,-9,-2,-7,3],[-10,7,10,-9,5,2,-3,-5,-3,-7,2,-2,4,-2,-8,10],[-1,1,5,6,4,-9,5,10,-10,10,-8,5,-6,-2,-1,-4]],[[3,4,5,-9,9,6,3,5,2,7,8,3,-6,8,-9,-10],[6,-10,5,2,9,-8,-7,-6,-8,10,-7,-8,7,-2,8,9],[-7,7,-10,4,10,-2,6,-5,-2,-10,7,2,6,2,-6,-8],[-4,3,-5,-3,-10,3,2,-2,-4,-3,-2,6,-9,-2,1,-7],[4,-9,8,3,5,-8,3,-3,-2,-9,-3,4,3,-8,3,-1],[7,5,10,-5,-5,5,-3,-6,-5,1,8,-10,9,-7,-3,-7],[-8,6,-10,4,4,-3,8,-1,-2,10,6,-5,10,-7,-2,-5],[-7,-8,-4,4,4,4,-7,-4,7,-3,6,8,-1,10,9,4],[6,5,-8,7,-4,-3,-8,-2,-3,-8,2,-8,10,8,3,5],[6,1,-7,-6,-1,-4,8,-2,10,3,-5,-8,-8,2,6,3],[5,6,2,3,-2,2,2,10,-3,7,-3,1,-9,3,10,9]],[[-9,7,8,-7,-6,10,-3,1,3,-4,-3,10,-1,9,-10,-9],[7,10,-8,8,6,-6,-8,6,5,10,8,9,-2,1,9,10],[-9,-1,-9,-5,-7,-5,5,6,1,9,-7,-9,7,10,-3,1],[-1,1,3,5,4,-5,-1,-1,9,4,-8,-5,-6,-10,5,10],[-8,-8,-6,1,4,9,6,-10,1,3,8,4,-2,4,10,3],[-5,-8,-5,1,2,-3,-3,5,8,3,5,9,-6,7,8,-3],[-3,6,-8,5,8,-10,2,4,7,-5,7,-2,-8,-8,-8,-9],[-1,-7,1,-1,-2,9,10,4,-3,10,5,-4,8,9,-4,-5],[1,-6,-5,-1,-7,1,-6,-5,-3,10,4,9,9,-5,6,9],[-3,-2,-1,-5,3,-6,-10,9,-3,-1,6,-8,-8,9,-7,3],[-5,-10,8,-5,-3,2,-1,7,2,2,8,5,4,-1,-4,1]],[[-7,-6,-6,8,1,3,10,7,-7,-4,-8,10,2,-1,6,-10],[2,-8,8,-10,-5,-2,-4,-1,-9,-4,3,-8,-7,-3,-2,-6],[10,7,-9,6,9,-2,-8,-1,-7,1,3,5,10,-1,-3,-1],[10,-9,-2,-6,5,-5,3,8,-5,10,-10,-7,6,-7,4,2],[-3,-6,7,9,2,-3,-9,4,1,1,-10,-4,-6,-5,-8,-8],[-9,-7,8,6,-1,4,-1,-4,-6,-4,5,3,6,2,7,4],[-4,-2,-10,-2,-9,-10,9,-3,-1,1,2,7,-4,-3,-9,-8],[-1,-5,9,9,-6,-8,-3,9,-5,-1,-4,6,-5,2,-7,7],[9,8,-1,-5,8,-1,-2,6,-1,-6,-3,-5,-3,-4,-7,10],[-5,3,-7,-3,2,5,-6,-3,6,-4,-4,-9,7,-9,4,-10],[8,-5,2,10,-3,7,-6,8,2,4,10,4,7,-10,3,-10]],[[-3,-7,-2,-10,4,6,-10,3,-6,-9,-8,-2,4,-6,3,-9],[-10,3,3,-8,-1,-6,-9,-4,-6,1,-5,1,-6,8,2,8],[-4,-5,-4,-4,9,7,-1,-3,5,-10,-7,-10,7,-4,5,-2],[-5,-8,4,-4,-3,3,6,-10,-9,9,-3,-1,-9,1,9,5],[-4,10,4,-1,9,-3,-9,3,-7,-6,-5,1,3,10,-7,3],[7,-9,1,9,5,4,7,4,2,-2,-8,-3,-7,1,7,3],[-9,-6,-4,10,-7,3,-2,5,8,2,-2,-5,7,1,1,-9],[-8,-1,-8,-4,-5,-8,-6,2,-2,-8,-9,-1,8,-10,10,7],[4,2,9,8,3,-3,-1,-2,1,-7,-2,9,-2,9,10,-2],[6,-6,-10,-10,-2,-3,-10,-6,-5,-1,1,9,1,-7,-3,-3],[1,-7,6,5,2,1,-4,-3,7,-8,-6,-4,-2,-5,-10,-8]],[[-2,3,2,-5,7,-4,-2,10,3,-10,4,5,4,4,10,6],[-7,-9,-8,-3,4,-6,6,-6,5,-7,1,-6,2,1,-4,-4],[-8,9,-1,1,-10,2,4,-5,5,1,-2,10,-8,5,-10,10],[6,-3,10,2,10,5,3,6,-2,1,3,7,6,1,3,-3],[-1,-7,8,-2,-5,-6,-9,-4,7,-4,-1,-2,-4,-1,6,-7],[-10,-9,-6,-9,-10,-7,7,-9,-9,5,-1,-6,-1,2,-1,-6],[5,-1,8,10,-5,8,-10,-6,-7,10,-9,-5,-1,10,9,-7],[3,3,-8,-1,2,4,-8,3,-3,-7,7,-3,-10,4,-8,4],[-9,-3,2,1,-7,7,7,-3,5,3,2,4,-10,3,-1,1],[4,8,-2,-1,6,-4,-2,-3,5,-10,-5,-10,3,5,10,6],[4,1,3,-2,-2,1,-3,2,2,6,-6,-4,-10,5,-7,-4]],[[-4,-6,7,-5,-6,4,5,-7,7,6,-10,4,-9,9,-9,8],[8,-2,4,5,-6,-9,-4,-7,2,4,-4,-3,7,-1,-5,-10],[3,-9,1,-6,4,7,-4,8,-8,9,1,4,-3,4,4,-2],[-8,-5,-6,6,-6,9,9,-7,2,-8,-7,-10,-9,-10,-10,1],[5,7,-7,-3,-7,-5,10,3,8,-4,6,-7,10,-8,-2,-8],[-5,10,1,-4,-8,5,1,-7,-1,-7,-6,-2,4,5,-10,-2],[-2,-6,-10,3,9,3,6,-2,2,4,4,4,-9,-3,-4,6],[9,-10,2,4,-1,-5,10,4,7,-10,5,8,-3,-4,5,-4],[2,3,9,-5,-8,-7,-8,-10,10,-5,-6,-10,-1,7,-4,2],[8,8,-5,-8,-5,-1,8,7,3,-3,-2,-7,9,1,-6,-9],[-8,-2,2,-8,-4,10,-4,10,-9,-8,7,-6,-1,10,-9,4]],[[6,2,5,-4,3,-3,-3,4,-7,10,10,-2,2,2,3,-9],[-9,8,1,5,8,-10,-2,-2,9,-4,-10,3,2,-3,9,-3],[-1,4,-3,-7,-6,1,-3,6,-4,4,9,-6,-3,4,-1,2],[-8,-5,5,3,10,7,6,7,6,-6,9,5,-2,-3,8,4],[-10,-8,-2,-6,4,6,-9,-3,-2,-9,2,-2,3,-7,1,-6],[2,-7,4,7,-9,7,3,2,-1,-10,-2,-9,-8,-5,-8,1],[4,4,-1,3,3,-7,-4,-6,9,7,-8,6,5,-6,-4,-4],[-5,4,9,-4,-1,-3,-10,-9,-4,-10,-5,10,-10,2,3,2],[-4,4,6,-10,-8,4,-1,-7,-1,7,5,-7,-6,-1,-5,-7],[-7,-6,8,2,8,-6,-8,4,-1,-7,-10,3,3,5,7,9],[-4,9,-1,-9,-8,6,9,-5,-2,-9,7,10,-8,-8,-8,8]],[[-1,5,-9,-9,-9,-5,8,1,4,-2,-3,-9,-9,5,3,1],[-2,6,-1,10,-1,-10,-5,-8,-10,8,-3,4,5,9,-3,-1],[-7,6,-1,9,1,10,-10,-3,-1,4,1,7,-7,3,9,7],[-1,5,1,-6,3,6,-4,-4,3,10,5,-9,4,-6,-6,-8],[-10,-10,6,3,2,3,-10,3,-4,-7,-8,5,10,2,6,4],[-2,-5,10,8,-9,10,-7,-5,5,1,-10,-5,8,6,-1,8],[-7,-4,2,1,-2,-1,3,9,7,3,-6,8,10,-6,4,-4],[10,8,-9,-5,9,9,1,-1,-10,8,5,-8,9,3,9,-6],[5,-2,2,-3,-3,-4,4,7,-10,-8,2,-9,1,8,-1,-10],[10,-9,1,-5,8,-3,7,-4,6,3,9,2,-3,-9,-5,-1],[5,7,-3,2,-4,-4,4,7,2,-9,1,9,2,-10,-1,1]],[[-10,1,3,-7,-6,-9,8,10,7,9,1,-3,9,9,6,-5],[-10,-2,-8,1,9,-4,-5,7,6,-9,-7,9,8,6,-9,2],[7,-2,4,-1,-3,-2,-1,-10,6,-5,4,10,3,-7,9,10],[3,5,5,-2,10,7,-4,10,10,4,-1,-7,-10,-7,-4,-7],[10,8,-7,-4,-4,-10,-1,10,-10,-5,-9,-5,9,-10,-10,-1],[8,-6,10,3,4,-4,-6,6,9,6,4,-6,5,7,2,6],[7,-6,5,-3,-3,-1,1,4,9,-5,3,-9,9,4,3,-5],[5,9,1,6,-9,4,6,-10,-9,-1,8,1,-5,-1,6,-1],[7,10,4,-3,-6,-4,4,1,-9,-6,-2,4,-1,-6,-1,9],[-8,8,-6,4,-8,6,2,-7,-10,8,9,9,-9,8,-3,9],[-5,-3,6,3,-8,5,-4,1,-5,-6,-2,-2,-2,-10,7,-10]],[[4,3,3,-3,-3,-2,-1,3,-3,8,-3,-4,-3,4,6,2],[9,10,-9,4,-1,3,1,-8,4,-10,8,-6,10,1,-5,-6],[8,6,-10,3,9,5,-3,-4,1,-6,8,2,-1,4,7,10],[-7,-5,7,10,6,-3,2,-6,1,-2,1,7,-8,-9,2,-2],[-6,-7,7,-6,-5,-1,-8,10,8,-6,-7,-2,3,-9,3,-5],[-8,-1,-10,-9,-7,1,-9,5,-4,-6,-6,-5,-2,-6,-8,5],[1,-3,4,-7,-4,8,-3,9,-6,8,5,-10,10,3,5,5],[5,-1,4,2,8,1,5,-9,-7,2,2,1,8,-1,-6,-10],[-8,2,9,-10,-5,10,-3,2,8,1,8,2,-8,8,1,4],[9,1,-1,-6,-4,-8,-7,-4,-6,3,-9,-7,-9,-2,3,2],[-4,-9,-8,3,1,-6,4,3,6,-4,-4,3,-8,-6,5,-2]]], dtype = "int64")#candidate|1036|(12, 11, 16)|const|int64
var_1037 = relay.var("var_1037", dtype = "int64", shape = (12, 11, 16))#candidate|1037|(12, 11, 16)|var|int64
bop_1038 = relay.less_equal(const_1036.astype('bool'), relay.reshape(var_1037.astype('bool'), relay.shape_of(const_1036))) # shape=(12, 11, 16)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
var_1044 = relay.var("var_1044", dtype = "uint16", shape = ())#candidate|1044|()|var|uint16
var_1045 = relay.var("var_1045", dtype = "uint16", shape = (36, 2))#candidate|1045|(36, 2)|var|uint16
call_1043 = func_392_call(relay.reshape(var_1044.astype('uint16'), []), relay.reshape(var_1045.astype('uint16'), [3, 4, 6]), )
call_1046 = func_392_call(relay.reshape(var_1044.astype('uint16'), []), relay.reshape(var_1045.astype('uint16'), [3, 4, 6]), )
uop_1047 = relay.atan(const_1036.astype('float32')) # shape=(12, 11, 16)
output = relay.Tuple([bop_1038,call_1043,var_1044,var_1045,uop_1047,])
output2 = relay.Tuple([bop_1038,call_1046,var_1044,var_1045,uop_1047,])
func_1063 = relay.Function([var_1037,var_1044,var_1045,], output)
mod['func_1063'] = func_1063
mod = relay.transform.InferType()(mod)
var_1064 = relay.var("var_1064", dtype = "int64", shape = (12, 11, 16))#candidate|1064|(12, 11, 16)|var|int64
var_1065 = relay.var("var_1065", dtype = "uint16", shape = ())#candidate|1065|()|var|uint16
var_1066 = relay.var("var_1066", dtype = "uint16", shape = (36, 2))#candidate|1066|(36, 2)|var|uint16
output = func_1063(var_1064,var_1065,var_1066,)
func_1067 = relay.Function([var_1064,var_1065,var_1066,], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1123 = relay.var("var_1123", dtype = "int8", shape = (6, 5, 1))#candidate|1123|(6, 5, 1)|var|int8
const_1124 = relay.const([[[-3,6,-9],[-6,10,-1],[2,3,5],[-10,2,-1],[-8,10,-1]],[[9,9,7],[2,-10,3],[3,5,5],[-1,-5,2],[5,-3,5]],[[-1,7,-2],[9,8,-8],[1,8,-9],[-8,-5,-5],[-6,-9,9]],[[-4,10,2],[6,8,3],[6,-9,-1],[-5,-1,1],[9,10,8]],[[-2,10,4],[6,5,3],[-1,-1,-3],[-1,3,-1],[9,2,8]],[[9,-2,5],[-10,5,8],[3,-9,2],[-9,2,-6],[-4,5,-6]]], dtype = "int8")#candidate|1124|(6, 5, 3)|const|int8
bop_1125 = relay.bitwise_and(var_1123.astype('int8'), const_1124.astype('int8')) # shape=(6, 5, 3)
output = bop_1125
output2 = bop_1125
func_1137 = relay.Function([var_1123,], output)
mod['func_1137'] = func_1137
mod = relay.transform.InferType()(mod)
var_1138 = relay.var("var_1138", dtype = "int8", shape = (6, 5, 1))#candidate|1138|(6, 5, 1)|var|int8
output = func_1137(var_1138)
func_1139 = relay.Function([var_1138], output)
mutated_mod['func_1139'] = func_1139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1685 = relay.var("var_1685", dtype = "bool", shape = (4, 6, 7))#candidate|1685|(4, 6, 7)|var|bool
var_1686 = relay.var("var_1686", dtype = "bool", shape = (4, 6, 7))#candidate|1686|(4, 6, 7)|var|bool
bop_1687 = relay.logical_and(var_1685.astype('bool'), relay.reshape(var_1686.astype('bool'), relay.shape_of(var_1685))) # shape=(4, 6, 7)
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_1704 = relay.var("var_1704", dtype = "int8", shape = (30,))#candidate|1704|(30,)|var|int8
call_1703 = func_1137_call(relay.reshape(var_1704.astype('int8'), [6, 5, 1]))
call_1705 = func_1137_call(relay.reshape(var_1704.astype('int8'), [6, 5, 1]))
var_1719 = relay.var("var_1719", dtype = "bool", shape = (4, 6, 7))#candidate|1719|(4, 6, 7)|var|bool
bop_1720 = relay.less_equal(bop_1687.astype('bool'), relay.reshape(var_1719.astype('bool'), relay.shape_of(bop_1687))) # shape=(4, 6, 7)
bop_1735 = relay.bitwise_xor(bop_1687.astype('int32'), relay.reshape(bop_1720.astype('int32'), relay.shape_of(bop_1687))) # shape=(4, 6, 7)
bop_1748 = relay.bitwise_and(var_1686.astype('uint16'), relay.reshape(bop_1720.astype('uint16'), relay.shape_of(var_1686))) # shape=(4, 6, 7)
bop_1761 = relay.maximum(var_1685.astype('int64'), relay.reshape(bop_1735.astype('int64'), relay.shape_of(var_1685))) # shape=(4, 6, 7)
bop_1767 = relay.power(bop_1761.astype('float64'), relay.reshape(bop_1687.astype('float64'), relay.shape_of(bop_1761))) # shape=(4, 6, 7)
func_420_call = mod.get_global_var('func_420')
func_423_call = mutated_mod.get_global_var('func_423')
var_1771 = relay.var("var_1771", dtype = "float64", shape = (108,))#candidate|1771|(108,)|var|float64
call_1770 = relay.TupleGetItem(func_420_call(relay.reshape(var_1771.astype('float64'), [9, 6, 2])), 0)
call_1772 = relay.TupleGetItem(func_423_call(relay.reshape(var_1771.astype('float64'), [9, 6, 2])), 0)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_1782 = relay.const([[4.771329,3.241796,-2.302273,1.539244,9.581848,-3.787139,8.298737,-4.521630,-7.677525,-4.100984,-1.691748,-4.677191,-7.998480,8.797645,-9.985595,-3.378882,7.171265,9.526395,1.462664,8.789643,-6.147834,0.297802,2.745330,-1.148053,-3.516953,-2.733476,3.435976,0.391669,-4.736052,5.355755,0.919594,-3.647692,7.762445,-1.094593,-7.321108,2.334099,5.381469,8.636052,5.652149,-7.769598,-9.899943,-1.990703,4.976580,3.411407,-7.272071,8.407058,3.666867,-7.097456,8.460854,4.870186,-8.026559,-9.986005,3.205663,-0.391759,4.785172,-3.245460,-9.334836,-1.146601,-6.861290,6.594399,-8.192390,-6.439183,0.494261,-1.650868,0.901311,-5.925425,9.476756,4.089796,-5.623482,5.528622,3.444824,5.538337,-2.768678,4.312523,-4.859260,-2.676853,1.548329,-5.776933,7.829753,4.709487,-4.104240,9.590781,1.080167,-2.169887,-9.289154,0.182642,9.967928,1.611051,-1.070533,3.613746,-8.263236,7.536998,-8.569237,-0.502011,8.616691,3.782396,5.813567,6.598968,3.141340,3.195933,2.237960,2.590609,5.844649,-7.274014,-5.124635,-2.237485,5.447303,-4.571342,3.101441,-5.038968,1.070671,-9.479153,-2.915795,4.045913,8.537229,9.540427,0.532558,-1.709897,-7.124304,2.525632,-1.700586,6.091463,5.831055,4.676018,-2.841546,6.794411,6.057524,-8.891186,7.567492,-8.407754,-9.455610,2.620870,-8.985935,1.424824,4.028503,0.796573,-9.494167,2.947631,0.934168,3.378399,-6.299826,0.446759,-3.933332,0.769321,6.125655,8.355148,-6.803018,1.616050,-6.604963,2.887197,2.542378,7.094182,5.385541,-9.391421,5.445701,-2.093120,-4.682348,-1.139249,3.227904,6.117995,9.039797,6.478197,3.306441,-7.645947,0.937305,2.487523,1.257509,-1.310849,-4.539501,0.891347,-4.934989,3.271101,9.388664,-2.444454,-2.900932,9.720379,-3.621333,8.634398,4.513980,1.374738,5.038234,-2.803758,3.664954,5.794431,6.529595,8.272641,-8.767421,-1.954526,-8.178745,-5.974047,-2.850067,-1.239803,-2.796131,3.453274,-1.286082,-2.293080,0.862148,-9.170502,-9.729674,-4.075299,-4.206235,2.827294,1.840599,-8.720413,-8.588396,-6.056494,-2.154606,2.973413,-3.536487,-8.847727,8.535224,-0.195651,4.208744,4.726854,-0.027962,8.387671,-8.293587,7.802443,2.699705,4.338963,-3.483594,-4.610967,9.743561,-5.825122,-1.967034,-6.143706,3.796981,2.481503,8.736306,-7.082546,-0.390773,-4.295521,0.753766,-3.254234,4.147062,-6.638978,6.674459,-2.949521,5.499091,-7.951163,4.347067,1.513556,9.453405,-2.447187,-7.620220,-3.575921,-4.535055,6.189694,-6.688714,-1.357078,5.609241,-8.039275,-1.613485,3.468738,3.212466,5.359680,-1.497193,7.625741,6.507732,-9.186648,5.414314,3.561469,1.185435,0.522379,-2.873400,4.881316,-8.559174,5.174475,-7.056141,-8.295462,-5.630505,3.117933,4.090166,7.430537,-5.230768,-8.674650,-1.996221,8.086923,-7.005098,-0.637294,7.450275,-9.774876,4.684947,-5.967382,3.197064,1.004562,-3.412685,-4.958008,3.165370,7.798756,-8.735379,1.018474,1.774333,-0.187235,9.053996,-7.555945,6.117426,1.223569,-8.708865,-1.503698,-0.403148,-1.548390,-8.066129,-4.212780,-4.575618,9.781395,6.202752,4.947857,-7.943651,-3.994514,-6.897618,-9.541477,-2.541281,-8.465169,2.442057,-7.045916,-5.710468,-9.955520,5.568630,7.720812,-4.359973,-9.785456,7.313030,-5.604713,-1.933721,-8.664884,-4.817109,-1.562693,-6.998216,7.595746,8.630210,1.765735,-3.837924,5.509015,9.938487,0.631325,5.766335,4.169681,-5.868239,-0.062607,6.024630,1.418513,6.444566,-8.903947,2.422770,0.798911,0.644673,-9.789992,2.154396,5.197663,-7.756369,-0.060639,5.534836,8.376462,-3.584380,-4.247514,-4.874312,1.162962,3.327123,4.380359,0.585012,5.600390,9.243514,2.460393,0.007647,7.671240,4.079157,-0.923802,-9.142879,-5.181738,6.284920,-7.339956,7.531284,-1.426504,6.399245,6.644515,-8.279621,7.572341,-5.325163,-2.329339,6.904422,-8.169427,-0.245939,3.108558,-1.394427,7.179742,-9.442229,8.982694,6.217050,-7.492175,5.636513,6.320845,4.846158,6.102544,6.160041,3.353308,-9.058960,-3.688612,-5.701000,5.840389,9.041651,1.856444,-1.656735,1.941669,-6.302971,-1.625276,3.894066,1.113434,-8.375168,6.937106,1.622320,-7.137366,-3.058018,-2.579433,9.896130,1.237762,-0.275179,-0.869066,3.588147,-0.203746,-1.187368,3.896509,-1.497976,-8.504569,3.191318,3.614394,-7.129163,-2.165601,-3.931094,-1.812852,-0.175251,-8.276492,-6.172403,5.136330,3.486251,2.904345,-6.074311,8.465062,3.363403,8.536111,6.458304,1.359954,9.054928,-0.663985,-4.717586,8.373175,-8.734536,9.178387,-9.139759,-4.609449,-2.198341,5.816395,-1.818600,-5.500640,-0.837400,0.980137,-2.296710,-4.649620,-3.903403,2.909799,3.288119,-8.431506,-5.422863,-9.052427,-3.182172,-5.243629,-5.572339,-5.655939,3.813539,-6.666507,-3.499102,6.835879,7.285921,-2.408663,3.001962,-2.868843,-9.669350,-8.609765,6.307706,-6.749961,-8.784011,-3.877724,-6.117537,7.462209,9.489821,-4.531542,4.182576,-9.354040,3.144829,4.617647,-8.046785,0.917088,-9.506855,-9.840987,-1.452775,1.272871,8.832808,3.576666,-3.645471,8.881562,-2.968015,-1.172582,-6.683052,-1.283888,1.233041,-9.107898,-5.887486,6.852839,0.114445,-8.505437,-2.756766,-3.497032,7.202890,2.395982,1.392898,-8.341035,-4.901980,5.896409,4.428957,-6.413917,1.382335,6.900591,-1.213839,-4.600460,-9.074445,5.328865,0.887637,-4.630074,5.972246,-9.133668,7.896817,9.634130,3.591323,-7.110768,-4.122495,-0.017956,8.954330,3.951263,-6.429235,5.168320,-4.214088,8.858259,2.654375,3.467792,2.170625,8.750035,-0.964260,1.247273,4.091971,-3.746345,-1.827240,-8.813374,-0.274540,-1.276233,5.704091,9.611724,-6.133107,2.829314,7.141276,4.284479,2.301977,1.862146,9.655679,2.673608,-5.383073,-7.853244,-7.048938,-8.453024,1.511948,7.426834,-7.231273,-7.348436,2.089184,-5.146523,-0.960477,-6.848367,-6.531993,0.925504,-2.416298,8.340266,0.504439,4.819109,-8.136813,-3.993443,-1.471429,-1.162575,8.259867,-5.857381,0.385788,7.942582,-1.024113,5.848452,2.668820,-8.140008,4.132462,-6.530680,4.829951,8.053626,4.007845,1.392074,6.239042,-9.408033,0.448393,-1.658276,-7.410458,-0.692760,1.682411,8.935996,9.237613,-5.102862,0.755989,7.216435,-0.029750,-9.752561,-5.484918,-6.266379],[-1.474382,-0.102632,2.448658,-5.261844,-2.549023,-4.374237,-0.423102,-2.015511,4.728023,-6.534182,5.746988,7.104664,-2.464912,0.592006,-6.841359,2.372640,8.335855,-6.543118,-5.192079,-5.653094,4.442265,-4.809978,-7.097474,7.737068,8.133283,1.250987,9.462597,-1.271304,-4.975909,9.872570,2.336098,2.286812,-0.051144,6.436557,-9.011353,-4.418290,-4.101542,2.285925,6.777064,-3.803488,8.816200,-4.539017,4.299182,-2.254570,-6.304290,-4.881003,-6.819048,-7.775701,2.967296,8.816240,5.318197,9.191842,-6.662086,2.928065,-3.162785,-7.726870,3.687192,-5.728622,-2.047415,-8.843143,-2.530589,-0.283338,9.682359,-5.243414,6.390300,-8.584681,3.296241,-2.756413,9.747900,9.377210,-0.242528,4.044429,-3.812329,-0.222849,-0.037589,-5.461323,6.475726,-2.854724,3.961383,2.199876,-7.350315,-9.233702,2.796462,-3.634069,-1.032460,-7.936845,2.451099,-2.719321,-7.156994,-3.818479,7.734513,1.466819,-4.847496,3.435896,-1.167443,-6.548582,8.072190,-6.081516,2.511276,5.853112,0.923190,-0.492641,1.980630,-0.330005,4.652066,-9.131084,0.908150,3.670951,9.236396,-9.954725,7.602414,8.892078,3.135803,-7.901803,-4.078910,-0.929711,8.593397,-3.334830,1.520314,-0.048094,-5.211323,5.803275,6.221466,8.263562,-0.474020,-6.110816,-1.898324,-3.616375,-3.643271,-9.183541,-2.009919,-7.200925,-5.274507,-2.991394,9.055869,-6.578412,3.007727,-3.311734,3.750991,-8.965764,9.500681,2.824619,-7.313605,3.344624,-9.603671,3.392253,-0.381534,0.483840,-4.769215,-3.417906,-0.316300,1.057622,-6.694898,-0.331922,7.109282,2.494469,-3.677174,-1.357723,-0.590416,3.331012,-2.571944,2.792332,-2.760313,2.676487,-0.732739,-0.363114,-9.224017,2.256087,5.347507,-0.440642,-3.671955,7.835101,8.005686,6.622757,9.144719,-5.245234,2.202133,-0.952285,-8.041703,-3.004299,6.367600,-8.558492,3.569017,8.484335,3.658146,5.425441,3.800565,-5.336421,2.641157,8.780695,-8.449016,-1.789742,8.889992,7.436614,-5.998562,7.605921,2.304266,6.143216,4.667815,9.213800,7.024823,-7.801849,-8.891130,4.356088,-2.122005,-6.776612,-3.740965,-4.819272,-2.741655,-3.789966,2.430143,-6.957295,6.846647,0.924092,-7.579497,6.255542,-0.498480,6.984731,4.653019,-9.715410,9.944834,-2.910853,9.836327,1.332410,9.931070,-3.503107,1.479464,7.824781,-1.813691,4.375790,4.255482,-1.414490,-7.513649,-7.845093,-8.982330,1.882079,-5.183945,-3.813968,-9.776534,6.648359,8.408669,9.001035,-7.514181,6.205893,5.613824,-9.619863,4.830565,-4.156370,-9.207746,9.509742,1.804426,-9.071919,9.936665,8.139153,-3.504257,7.257198,-1.244086,2.388442,5.205182,-8.676470,0.620786,4.422185,3.502368,3.383651,8.416712,1.573951,5.394987,-2.101098,-0.926984,9.786341,-1.901851,-5.498229,2.136499,3.908865,-8.301782,6.398120,-9.092914,-5.639786,7.828888,3.102430,1.650253,5.251310,-3.476450,2.230056,-1.969320,-5.660258,5.044752,9.256163,-7.599957,0.799474,-4.138497,-7.424230,6.438968,3.558232,-3.671969,7.759664,1.564883,6.689437,-8.992560,-1.520113,8.724984,0.730713,9.700694,8.554203,-9.434169,-0.697363,3.267810,7.346214,6.572519,5.282458,-0.262385,4.329312,-2.776410,7.110172,8.173904,4.632946,-3.209561,7.834336,4.985545,4.213460,9.005407,6.557162,1.319307,-7.897634,1.630096,-5.224507,-9.680461,2.486238,-1.525705,-9.875892,-4.469144,-5.770916,-7.072317,-5.282902,-0.897117,1.366996,5.433519,5.079046,-6.971958,2.182512,2.713658,9.776589,-6.677468,-5.822592,5.487771,-5.666562,-4.631389,7.991675,8.786349,7.922109,8.298027,5.094520,3.073331,3.466403,-3.883418,6.966459,9.158416,-3.485910,9.750856,-9.578753,3.744270,-2.533447,-9.797150,-1.805059,1.693485,5.367765,6.673727,6.284215,0.326480,-6.422962,3.843757,-4.936137,-8.885069,-2.373220,8.023520,-8.515441,-7.292019,8.622608,-0.998876,-7.196287,6.403892,6.314964,-7.576789,0.370795,3.228568,-6.485162,5.728751,7.369994,8.738903,8.178190,3.077644,9.798714,-5.877813,-0.182711,-8.772074,-2.195095,-2.874344,-9.553333,-9.970548,5.200894,6.954709,-9.262608,-8.118160,-0.579463,-1.714250,-5.675991,-2.116960,9.550613,-2.626097,4.011268,-7.496181,-5.662801,3.964168,1.805217,-8.547481,-7.536234,-7.322119,-8.541183,-4.223683,-2.239115,-2.213393,-9.356730,-8.519018,8.061583,2.376190,-4.527157,-9.086996,1.206708,6.369310,9.594588,0.289634,-2.065651,8.587803,-0.398743,3.134243,-3.763819,9.433787,-6.285631,-2.176704,9.834542,2.872813,6.449766,-4.391965,7.884914,2.709404,-1.289203,-5.151740,5.876171,1.011698,-0.435163,-6.857291,1.814777,1.685731,-7.098230,4.980978,-8.137043,6.664512,1.672237,-4.114165,4.797703,7.450012,-8.046009,-0.160886,2.205605,2.998150,5.783150,-3.448261,5.087880,-9.940183,1.096089,4.963149,-7.936304,9.719502,5.643844,4.231438,-0.906577,-7.493415,-2.811609,-9.866317,-9.118120,8.255456,0.026978,-5.672735,-5.022847,-4.774870,8.338715,3.833243,-5.904589,7.085696,-4.507867,9.272198,1.336848,9.160746,-6.163923,-0.638713,8.944080,-7.781231,5.654122,1.482530,-3.800448,-1.927170,-6.285168,0.753099,-6.027785,-1.659723,5.076523,3.985806,2.541270,2.303618,-1.178137,-8.943442,0.889928,5.579569,-6.437840,-4.020216,-0.144429,-0.353447,-6.894495,-2.661655,-3.044679,3.273602,-9.598261,-1.868635,0.682384,6.090272,5.313481,7.309815,9.235420,-5.938274,-4.015937,-6.963570,7.384706,7.649210,-6.911259,-0.218621,-5.582129,2.131749,5.958017,-2.956371,5.701294,-6.300695,6.702514,3.228948,-9.571681,-3.086504,4.542874,-9.847635,6.596939,-4.029763,3.995428,-7.775780,0.189200,-8.041224,-7.897879,3.881556,-8.380148,-7.897574,-7.514662,-5.428152,1.116269,2.880862,3.682040,9.242502,2.949783,8.598709,0.288913,-1.371801,9.024334,3.221881,5.750307,1.578499,-7.082954,9.773653,7.968992,-7.455616,8.418000,9.510830,4.953920,8.669434,5.135338,9.879565,3.179215,5.952192,-6.346120,-8.017722,6.194993,4.369561,5.358415,-0.236444,1.758318,-7.924306,-3.366816,1.302503,-3.421464,-6.322089,8.228997,-8.487070,8.862298,6.711910,-0.916964,0.680069,1.419390,-6.145652,-9.111954,-8.296518,1.784635,-3.766823,-0.940963,6.274638,-6.970785,-9.941988,8.047221,-5.274976,-6.230638,-3.486321,8.662011],[0.970653,-6.463536,-8.407400,-2.570972,-2.613276,7.164209,-9.586091,2.736463,-8.571204,3.876840,8.459448,-9.666857,-0.970964,-1.243025,7.916962,-3.766951,-5.457449,-4.179633,3.682375,9.416155,-7.225246,-0.798352,7.311660,-4.911802,-3.519749,-1.838287,-7.013528,8.971162,-8.706095,7.780834,-7.398727,-7.238215,8.498142,2.746612,4.228839,-9.110649,0.366887,-6.850176,-2.388107,-6.487080,3.929218,3.374881,5.757047,-2.395795,-6.477130,-1.552776,5.170620,7.918739,3.956349,-4.070962,-9.946227,1.471858,5.548390,-7.825004,-2.624990,-0.922667,4.580929,-0.794740,2.818569,-2.330770,-5.286418,-7.514395,3.551131,-9.866708,-9.112684,-9.805914,-9.209895,-1.715041,5.764228,8.787011,7.868248,9.449472,5.650585,-1.170013,-5.896714,-3.601565,1.080770,0.347441,8.420062,4.596518,-5.372840,-6.535453,4.065704,-7.494082,3.811419,2.724433,-0.400221,8.194362,-0.437125,-7.907276,0.454666,2.772532,6.680779,8.988439,6.157940,-8.331478,-6.277626,-9.835233,7.736503,1.204436,-4.583540,0.035047,2.464481,9.702350,-1.788851,3.930251,-4.317699,-1.445911,7.960399,-3.192082,7.431331,-7.791182,8.108782,1.853875,4.870771,7.030484,8.019713,-5.936565,-1.093208,-9.410616,0.816415,-1.116065,0.688169,5.137891,-0.751494,4.347617,-4.593070,-9.710821,-6.376588,-7.371444,-4.085250,1.258897,2.337498,-6.011525,6.054982,-0.415452,-4.366682,3.308494,-5.002755,-6.219244,-1.576362,-1.665812,2.284152,8.504991,-0.423157,-9.912577,1.787217,3.860571,6.810270,-0.057317,-4.487986,-2.925440,5.010416,-9.189160,-7.847171,4.822878,-1.215027,-6.829389,-7.833599,0.097590,5.197919,5.840310,-4.622716,6.256164,-8.002101,-9.343091,8.447249,-7.596200,-5.852329,-9.964268,4.957380,-3.402268,0.569758,-6.411878,-9.122561,-0.150451,1.727045,-1.691557,-9.461179,7.398975,-9.246452,-0.082184,-0.050919,-5.500749,0.452785,-3.472812,-4.059126,7.632497,5.478029,4.037746,5.124787,5.138666,6.590275,-9.413283,-6.242530,6.785717,-2.814144,-0.285083,-7.627855,6.166350,4.996280,-1.143869,-4.908227,4.559846,3.842769,1.145815,-9.674909,3.242939,7.810779,-3.621172,-5.739186,-7.480605,7.708026,4.197353,1.197379,1.808080,-7.795779,9.304048,9.316752,-7.227680,2.088792,-4.517559,9.780190,-8.845361,4.494844,-6.470812,-0.838048,-1.745416,9.920211,2.347531,8.601559,6.421946,-4.292926,-0.740204,8.842405,4.441566,1.470216,-6.335794,0.566099,3.638200,5.171715,-9.359727,-4.906557,2.593825,8.408112,-5.364923,-5.198167,-7.378582,-6.235856,-0.270767,-1.763066,0.842566,0.216537,-7.573619,-4.140123,-7.737700,9.244098,1.654723,2.994467,2.995753,0.363879,9.571294,0.845802,-3.272002,0.080666,6.649173,-9.480705,1.072256,-1.117244,7.145405,0.769955,9.631462,-3.179162,-5.500595,4.493113,-8.833240,4.010567,-4.417636,-8.727730,6.183802,-3.449972,3.678447,2.448713,-8.775320,-2.290720,-0.918980,8.798397,-6.469711,-8.216747,-4.647962,-5.876725,-8.505317,-1.401360,-5.649002,4.195179,-1.276415,-4.058511,4.071520,-3.219347,7.048125,4.454860,-3.977695,5.391408,-7.724730,4.473712,-7.728392,-0.966450,-7.655651,2.288758,3.479336,-9.938949,-8.796702,2.356721,-4.061275,-8.529121,-5.751286,3.522765,-8.744248,5.380853,-3.960626,8.226723,-4.100763,6.408194,7.250043,4.777286,8.939450,-3.286118,-7.808909,2.458112,-6.782924,-5.846475,1.577976,8.980301,8.437604,4.999528,-6.720326,-4.489945,-7.985207,0.308449,-8.753763,-7.848549,-4.417594,-6.415158,-3.669216,8.689984,9.449185,4.940248,3.619833,-9.364037,9.044740,-0.422447,0.934968,-8.928592,-9.676599,4.035989,-7.611442,-8.156889,-7.660379,5.083135,6.964102,6.751234,-4.868816,2.091678,-3.475582,-5.370430,8.780293,1.194891,8.837966,-2.614735,4.164561,8.904897,3.181092,-9.929112,-1.253134,-2.599816,-0.961717,-4.681712,-1.755730,-1.564797,4.680410,-7.818885,9.749207,6.890866,8.724232,-0.654812,5.460687,-8.727125,9.843332,9.632345,-5.937863,8.320678,3.548314,-2.180132,-9.409962,-2.091690,6.889137,-5.746270,-8.656159,-1.087295,-7.270228,-7.860114,-3.863459,-0.309617,6.522040,7.739208,-4.375019,-6.849134,-3.130767,0.601505,0.908378,-4.313987,0.451135,9.553598,6.493109,9.640791,-5.699161,2.167279,7.095208,9.070957,4.430144,-4.888713,4.721388,-1.283620,2.646352,-3.909185,6.010587,-1.047803,-3.476162,1.736412,2.082205,6.332391,-0.969532,-5.589934,-5.189798,0.018031,-9.876848,7.397516,-9.338710,6.118254,-8.346152,5.106619,-5.710176,-7.720396,4.409299,-8.084293,-5.571729,6.395496,3.615481,-9.540653,5.940082,2.853039,-5.203096,0.128462,-2.118603,-3.808335,6.813210,7.407498,7.605204,-1.458988,2.341114,3.996883,-8.879682,-4.336741,-7.632380,2.759593,-1.040587,6.618557,-4.971023,-1.893683,6.491425,2.013055,-0.701919,4.698419,-5.611069,-1.894240,-1.683069,5.250923,-0.026155,-5.826609,2.770679,-8.462746,4.303240,-1.071461,7.900308,-5.955745,6.027443,1.694875,-1.868310,-9.468690,-1.769935,-7.151026,-2.223606,3.432200,-4.685213,-1.708614,8.298176,6.901309,-5.132690,-8.486090,-3.061243,3.690352,-5.566147,9.369542,0.371934,9.178419,5.564933,-8.755873,-6.955085,-0.979557,-3.270267,-9.583543,-8.035452,-8.702184,3.883977,-8.288123,5.301963,5.374975,-6.522848,0.065302,-8.650354,1.855769,-5.227476,-4.513443,6.819255,0.785272,6.580705,4.014576,-4.484118,-3.840248,2.091099,5.814429,-2.019607,-0.732599,-9.791102,-9.781125,5.617211,-2.342333,-8.518212,-5.690283,5.282552,7.143893,0.035792,-0.753504,-0.652462,8.680027,9.652110,-7.302377,3.494437,-6.471566,-1.562258,7.080930,-3.154981,-0.702581,-4.703528,-4.315031,-7.758482,-9.111857,7.996613,4.279162,8.203125,2.587858,-5.767776,3.469679,-5.517427,6.653153,-4.059677,-7.737618,-9.588201,2.894092,4.615259,-3.794986,4.662445,7.298782,-3.140702,-5.599725,0.692593,-2.873923,-9.916090,-1.533107,-5.463727,7.254999,-2.403988,2.846559,-0.474793,9.243433,3.035427,-2.824351,-6.224041,1.483223,-3.161643,-6.341024,0.329156,4.359244,-3.016034,-0.914184,7.438036,-3.648753,-4.953961,-7.891167,-2.738196,-8.802279,-1.118311,5.903074,7.365505,3.467728,-7.479924,2.097416,-5.575455,5.086050,-1.210327,6.555183,-6.762763,5.685063,-7.528675,4.734819,8.363830],[-6.157140,-9.733652,-7.740343,-2.189706,-7.844847,-9.010847,-2.455845,-1.439790,4.761039,4.877485,4.091697,-6.165295,-5.245808,-4.039239,-7.557969,-4.106286,5.283714,-3.680655,-8.427004,4.148710,4.169186,-3.039927,1.558612,-3.655659,-4.033108,1.287746,7.467474,-4.910036,-4.636455,6.663473,3.013688,2.102551,0.144736,-9.450681,-4.278702,-9.871065,4.505189,3.940088,4.889081,-1.186648,-3.726895,5.002680,9.164869,1.914994,3.577172,-6.411553,-7.095156,5.944252,7.733514,8.908780,-7.853685,-3.013285,9.140186,-2.738674,5.474402,-2.944351,-8.151897,3.757729,5.680897,-0.290093,8.968154,7.679917,-4.164429,1.132060,9.772109,-4.319259,-7.617623,2.920488,-5.680017,3.386973,-2.924669,8.227282,7.818208,4.414128,-3.536052,1.993801,-9.608862,2.175155,-3.598786,8.799017,-0.458423,5.489347,-1.437584,-5.125517,-0.746669,-8.853037,2.210960,5.902815,-0.668237,5.541403,-2.680399,-5.661668,-5.343324,-0.268440,4.879298,-5.068314,2.897687,-2.237844,-8.061207,-9.737618,-6.333073,-2.676049,6.495593,9.089440,-0.674124,-5.497911,2.370445,4.515784,-6.402390,-8.963170,1.182088,5.112110,-3.096617,-3.067282,-9.911011,3.952275,5.807378,-0.366146,-8.543639,-7.880729,6.580060,0.010428,-1.567240,-9.318472,-8.956281,-1.240284,7.303642,-6.745912,3.980348,-5.964850,-3.579314,0.099580,2.903677,-4.317322,0.668356,-6.672151,3.996163,1.892461,6.125824,-5.830207,4.431511,2.795216,3.405544,-1.280282,6.578081,-5.353948,3.343219,6.695152,-0.073855,-9.735669,7.345527,-0.534506,-0.971101,-9.700293,0.409307,-1.158990,4.313124,2.730691,8.471726,3.292497,-7.012904,-9.399752,8.267575,6.185237,1.854844,1.173939,-5.385167,7.885732,-6.475004,-9.531249,0.435734,-9.939053,6.550265,3.429651,4.191990,2.090935,-7.193523,9.370162,5.317271,4.589555,-0.752133,8.278047,-5.962837,-4.335052,-0.518000,-0.122360,1.870833,-6.485518,-8.926716,3.586408,6.790697,-2.502522,7.082622,3.929123,-6.780374,4.941177,-9.787129,8.275573,-5.404811,7.660260,1.445789,-4.443795,-9.584831,1.659590,-5.734289,-1.592954,4.639514,2.950573,5.208500,4.263291,-6.301258,-9.737759,-5.083296,5.980777,6.147132,6.171899,6.998261,5.802749,7.628455,-7.055312,-5.654566,6.340782,3.737892,-6.368012,2.334218,-4.656987,-3.359096,-2.523138,2.320747,5.917882,-0.243435,5.329277,-7.362319,6.758033,1.947576,2.003600,8.925976,6.150300,-2.836525,3.889850,8.397437,5.693945,-2.044134,-2.275000,8.328980,4.059161,3.009306,5.592680,5.320338,1.506903,3.305009,-5.105469,7.560793,8.160843,1.717048,3.974444,4.459192,0.397962,6.746456,8.126769,1.062122,-3.171569,5.540011,7.527172,7.916499,5.149163,2.685549,3.281987,8.138507,-7.319995,6.690273,7.246484,-1.882227,-9.329364,9.950133,2.173129,-0.732053,1.346960,0.361910,9.051841,8.808622,7.756447,-0.102348,5.125295,-6.869079,6.243202,4.892910,-5.238957,1.275317,5.725917,-8.195043,4.197571,3.465059,-8.299033,5.096350,3.052452,-0.899034,-5.211242,0.577407,-5.593646,8.515440,8.850954,-5.171526,0.180054,-5.305031,-3.295121,0.546418,-9.022045,-8.359125,2.374031,-2.596959,-1.637848,-8.583793,6.584688,-3.697574,3.566566,0.473662,1.918108,-2.044150,2.246985,1.079635,0.408755,-5.548584,3.680461,-3.658531,-1.002465,2.229212,7.889562,9.669314,2.789736,-4.107723,-6.205037,1.383009,2.701678,-4.466945,0.547331,3.666036,-0.645172,-3.905817,-4.908883,-2.862600,5.062553,-4.126997,2.826344,6.635054,4.001966,2.384484,-9.104606,5.826048,-7.298765,-1.237473,-4.094749,-3.595440,5.900693,-4.329709,5.929380,3.023014,9.832009,7.691425,8.574619,1.666129,-8.141442,-2.820393,-2.175749,9.353185,0.955916,-0.794405,6.794095,-8.565573,2.546960,-6.504522,-7.313625,2.062981,4.401916,-5.296803,5.954589,-7.972477,0.094136,-4.678236,-8.506412,-4.365656,-8.633175,1.249970,-4.924762,-2.934077,9.586810,-5.933867,-1.602432,0.663239,0.863714,0.238001,8.360637,-3.467588,-4.132883,-9.610522,-9.969979,5.405564,5.313350,-3.645787,-3.999708,8.563570,-1.505649,9.003673,9.531176,-2.341452,1.694489,-4.101513,4.466215,7.346419,3.612203,0.589892,-0.415046,-2.825465,8.924785,1.828713,-9.300799,3.881612,4.833346,8.938913,6.914385,8.359453,8.740905,-5.682434,-9.802132,7.004488,9.735403,-2.814805,3.237161,-3.882593,1.147944,-2.600783,-1.090708,-3.194450,4.945495,9.106059,-1.461185,2.427934,-6.784972,-8.440138,9.042294,-3.711309,-2.686400,-5.594673,-0.746260,3.955353,8.380286,5.716774,9.597779,3.975131,7.039176,-5.280053,5.214140,-4.862282,4.020941,-7.822190,-0.197226,3.428575,2.020970,-0.811499,-2.774858,-6.347663,8.889901,-8.845085,8.462726,3.795737,-7.031994,-4.505820,1.248236,3.909424,-1.494466,8.979944,-9.017024,4.117672,3.965216,4.762102,1.521050,2.616155,7.849124,-0.828952,3.535444,-5.681685,8.849302,9.679435,7.731988,9.786373,-4.413365,-3.836171,1.320236,5.630191,2.861542,7.824823,-3.264728,2.496245,-2.070008,-2.143891,-1.860256,5.909345,-6.548305,-2.830891,7.122605,0.501768,4.305603,-8.791592,8.713874,4.088279,8.944173,-1.615026,6.906474,1.806659,2.639124,3.710488,-9.419329,5.108944,4.420458,-8.006792,8.592774,-8.693857,3.599540,8.901222,-6.310798,7.091888,3.005647,4.151098,-1.568776,-7.596736,6.143336,7.863398,-3.174786,-8.748932,-5.077998,-3.197097,-0.771550,-5.617103,-0.319701,-1.883585,-6.328679,-5.676708,5.511879,-5.526539,-4.761447,6.399195,-2.296775,-9.648365,3.430407,-0.084056,9.238626,6.783173,-6.812709,-8.642793,-7.389746,0.556145,-3.285786,-8.965748,-3.064578,2.749955,-3.146120,-0.162052,3.020390,9.857336,0.215439,1.885380,2.581311,-0.301112,-7.535926,-3.109303,9.105273,-1.379518,0.255821,-1.739003,7.760286,-2.489195,-5.901378,6.171349,7.027361,7.032672,-0.893681,-3.863746,7.117111,2.361906,3.974775,-4.377048,-7.187654,-4.979401,-3.776642,7.511317,8.447828,5.576282,-0.702645,7.934459,0.060112,-1.644243,9.504363,2.262585,0.981985,5.870626,-9.809675,1.494362,-0.603222,-9.559892,-1.100726,-4.266428,-1.870523,-7.300797,-8.531664,-7.560875,-3.077482,-8.906436,7.632730,-2.084823,-6.129418,0.928611,-7.803053,1.348156,8.866084,1.443883,9.088715]], dtype = "float64")#candidate|1782|(4, 616)|const|float64
call_1781 = func_111_call(relay.reshape(const_1782.astype('float64'), [16, 11, 14]))
call_1783 = func_111_call(relay.reshape(const_1782.astype('float64'), [16, 11, 14]))
uop_1789 = relay.acos(var_1686.astype('float32')) # shape=(4, 6, 7)
func_420_call = mod.get_global_var('func_420')
func_423_call = mutated_mod.get_global_var('func_423')
call_1795 = relay.TupleGetItem(func_420_call(relay.reshape(var_1771.astype('float64'), [9, 6, 2])), 0)
call_1796 = relay.TupleGetItem(func_423_call(relay.reshape(var_1771.astype('float64'), [9, 6, 2])), 0)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_1800 = func_111_call(relay.reshape(const_1782.astype('float64'), [16, 11, 14]))
call_1801 = func_111_call(relay.reshape(const_1782.astype('float64'), [16, 11, 14]))
bop_1808 = relay.equal(var_1719.astype('bool'), relay.reshape(bop_1687.astype('bool'), relay.shape_of(var_1719))) # shape=(4, 6, 7)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
var_1817 = relay.var("var_1817", dtype = "int16", shape = (15,))#candidate|1817|(15,)|var|int16
const_1818 = relay.const([7,-5,9,-9,-3,7,6,1,-3,4,1,10,-7,4,-2,-6,-10,1,4,-2,-4,-2,-1,6], dtype = "uint8")#candidate|1818|(24,)|const|uint8
call_1816 = relay.TupleGetItem(func_559_call(relay.reshape(var_1817.astype('int16'), [5, 3, 1]), relay.reshape(call_1703.astype('int16'), [5, 3, 6]), relay.reshape(const_1818.astype('uint8'), [24,]), ), 6)
call_1819 = relay.TupleGetItem(func_563_call(relay.reshape(var_1817.astype('int16'), [5, 3, 1]), relay.reshape(call_1703.astype('int16'), [5, 3, 6]), relay.reshape(const_1818.astype('uint8'), [24,]), ), 6)
output = relay.Tuple([call_1703,var_1704,bop_1748,bop_1767,call_1770,var_1771,call_1781,const_1782,uop_1789,call_1795,call_1800,bop_1808,call_1816,var_1817,const_1818,])
output2 = relay.Tuple([call_1705,var_1704,bop_1748,bop_1767,call_1772,var_1771,call_1783,const_1782,uop_1789,call_1796,call_1801,bop_1808,call_1819,var_1817,const_1818,])
func_1823 = relay.Function([var_1685,var_1686,var_1704,var_1719,var_1771,var_1817,], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
mutated_mod['func_1823'] = func_1823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1823_call = mutated_mod.get_global_var('func_1823')
var_1825 = relay.var("var_1825", dtype = "bool", shape = (4, 6, 7))#candidate|1825|(4, 6, 7)|var|bool
var_1826 = relay.var("var_1826", dtype = "bool", shape = (4, 6, 7))#candidate|1826|(4, 6, 7)|var|bool
var_1827 = relay.var("var_1827", dtype = "int8", shape = (30,))#candidate|1827|(30,)|var|int8
var_1828 = relay.var("var_1828", dtype = "bool", shape = (4, 6, 7))#candidate|1828|(4, 6, 7)|var|bool
var_1829 = relay.var("var_1829", dtype = "float64", shape = (108,))#candidate|1829|(108,)|var|float64
var_1830 = relay.var("var_1830", dtype = "int16", shape = (15,))#candidate|1830|(15,)|var|int16
call_1824 = func_1823_call(var_1825,var_1826,var_1827,var_1828,var_1829,var_1830,)
output = call_1824
func_1831 = relay.Function([var_1825,var_1826,var_1827,var_1828,var_1829,var_1830,], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1863 = relay.var("var_1863", dtype = "float32", shape = (3, 16, 5))#candidate|1863|(3, 16, 5)|var|float32
uop_1864 = relay.sinh(var_1863.astype('float32')) # shape=(3, 16, 5)
output = uop_1864
output2 = uop_1864
func_1880 = relay.Function([var_1863,], output)
mod['func_1880'] = func_1880
mod = relay.transform.InferType()(mod)
var_1881 = relay.var("var_1881", dtype = "float32", shape = (3, 16, 5))#candidate|1881|(3, 16, 5)|var|float32
output = func_1880(var_1881)
func_1882 = relay.Function([var_1881], output)
mutated_mod['func_1882'] = func_1882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1926 = relay.var("var_1926", dtype = "float64", shape = (15, 9, 14))#candidate|1926|(15, 9, 14)|var|float64
var_1927 = relay.var("var_1927", dtype = "float64", shape = (15, 9, 14))#candidate|1927|(15, 9, 14)|var|float64
bop_1928 = relay.power(var_1926.astype('float64'), relay.reshape(var_1927.astype('float64'), relay.shape_of(var_1926))) # shape=(15, 9, 14)
func_271_call = mod.get_global_var('func_271')
func_275_call = mutated_mod.get_global_var('func_275')
const_1938 = relay.const([-5,9,-7,9,6,1,3,-8,7,-4,-7,-1,6,-4,6,-4,-4,-10,-4,6,-5,3,2,-6], dtype = "uint8")#candidate|1938|(24,)|const|uint8
const_1939 = relay.const([4,-4,5,-8,8,-2,4,7,-8,2,-1,10,4,5,-1,-1,-10,-7,-7,-4,8,9,-6,7,-7,8,8,10,-10,-4,-5,5,2,-10,6,3,-2,5,7,1,-2,2,9,-2,8,9,2,7,-5,-10,1,-4,-6,-4,-2,6,6,-4,9,3,3,-1,7,9,-4,-4,4,9,-10,2,-8,5,-6,10,-6,-3,6,-4,-1,-8,3,10,-1,-7,4,4,-8,7,-10,9,9,-5,-7,1,-3,1,-10,-5,-1,-3,-2,6,-5,-5,-9,1,6,4,-6,-1,3,-4,4,5,2,10,-4,5,1,-6,-4,-10,-4,6,-9,-6,-1,-7,-2,10,-2,-9,7,10,5,8,-5,-2,3,9,-4,-6,7,-10], dtype = "uint8")#candidate|1939|(144,)|const|uint8
call_1937 = relay.TupleGetItem(func_271_call(relay.reshape(const_1938.astype('uint8'), [2, 12, 1]), relay.reshape(const_1939.astype('uint8'), [2, 12, 6]), ), 1)
call_1940 = relay.TupleGetItem(func_275_call(relay.reshape(const_1938.astype('uint8'), [2, 12, 1]), relay.reshape(const_1939.astype('uint8'), [2, 12, 6]), ), 1)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_1949 = func_111_call(relay.reshape(call_1937.astype('float64'), [16, 11, 14]))
call_1950 = func_111_call(relay.reshape(call_1937.astype('float64'), [16, 11, 14]))
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_1952 = relay.var("var_1952", dtype = "int8", shape = (30,))#candidate|1952|(30,)|var|int8
call_1951 = func_1137_call(relay.reshape(var_1952.astype('int8'), [6, 5, 1]))
call_1953 = func_1137_call(relay.reshape(var_1952.astype('int8'), [6, 5, 1]))
output = relay.Tuple([bop_1928,call_1937,const_1938,const_1939,call_1949,call_1951,var_1952,])
output2 = relay.Tuple([bop_1928,call_1940,const_1938,const_1939,call_1950,call_1953,var_1952,])
func_1970 = relay.Function([var_1926,var_1927,var_1952,], output)
mod['func_1970'] = func_1970
mod = relay.transform.InferType()(mod)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1970_call = mutated_mod.get_global_var('func_1970')
var_1972 = relay.var("var_1972", dtype = "float64", shape = (15, 9, 14))#candidate|1972|(15, 9, 14)|var|float64
var_1973 = relay.var("var_1973", dtype = "float64", shape = (15, 9, 14))#candidate|1973|(15, 9, 14)|var|float64
var_1974 = relay.var("var_1974", dtype = "int8", shape = (30,))#candidate|1974|(30,)|var|int8
call_1971 = func_1970_call(var_1972,var_1973,var_1974,)
output = call_1971
func_1975 = relay.Function([var_1972,var_1973,var_1974,], output)
mutated_mod['func_1975'] = func_1975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2130 = relay.var("var_2130", dtype = "float64", shape = (14, 6, 6))#candidate|2130|(14, 6, 6)|var|float64
uop_2131 = relay.sin(var_2130.astype('float64')) # shape=(14, 6, 6)
func_1970_call = mod.get_global_var('func_1970')
func_1975_call = mutated_mod.get_global_var('func_1975')
var_2140 = relay.var("var_2140", dtype = "float64", shape = (1890,))#candidate|2140|(1890,)|var|float64
const_2141 = relay.const([10,7,2,5,3,5,-1,6,7,-5,4,4,-5,-8,-7,-5,-10,-4,-6,-10,-7,1,-3,5,2,-1,-10,-8,-7,9], dtype = "int8")#candidate|2141|(30,)|const|int8
call_2139 = relay.TupleGetItem(func_1970_call(relay.reshape(var_2140.astype('float64'), [15, 9, 14]), relay.reshape(var_2140.astype('float64'), [15, 9, 14]), relay.reshape(const_2141.astype('int8'), [30,]), ), 1)
call_2142 = relay.TupleGetItem(func_1975_call(relay.reshape(var_2140.astype('float64'), [15, 9, 14]), relay.reshape(var_2140.astype('float64'), [15, 9, 14]), relay.reshape(const_2141.astype('int8'), [30,]), ), 1)
output = relay.Tuple([uop_2131,call_2139,var_2140,const_2141,])
output2 = relay.Tuple([uop_2131,call_2142,var_2140,const_2141,])
func_2156 = relay.Function([var_2130,var_2140,], output)
mod['func_2156'] = func_2156
mod = relay.transform.InferType()(mod)
mutated_mod['func_2156'] = func_2156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2156_call = mutated_mod.get_global_var('func_2156')
var_2158 = relay.var("var_2158", dtype = "float64", shape = (14, 6, 6))#candidate|2158|(14, 6, 6)|var|float64
var_2159 = relay.var("var_2159", dtype = "float64", shape = (1890,))#candidate|2159|(1890,)|var|float64
call_2157 = func_2156_call(var_2158,var_2159,)
output = call_2157
func_2160 = relay.Function([var_2158,var_2159,], output)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2198 = relay.var("var_2198", dtype = "float32", shape = (12, 11, 11))#candidate|2198|(12, 11, 11)|var|float32
uop_2199 = relay.asinh(var_2198.astype('float32')) # shape=(12, 11, 11)
output = relay.Tuple([uop_2199,])
output2 = relay.Tuple([uop_2199,])
func_2208 = relay.Function([var_2198,], output)
mod['func_2208'] = func_2208
mod = relay.transform.InferType()(mod)
var_2209 = relay.var("var_2209", dtype = "float32", shape = (12, 11, 11))#candidate|2209|(12, 11, 11)|var|float32
output = func_2208(var_2209)
func_2210 = relay.Function([var_2209], output)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2229 = relay.var("var_2229", dtype = "float64", shape = (14, 10, 12))#candidate|2229|(14, 10, 12)|var|float64
uop_2230 = relay.acos(var_2229.astype('float64')) # shape=(14, 10, 12)
func_1063_call = mod.get_global_var('func_1063')
func_1067_call = mutated_mod.get_global_var('func_1067')
var_2236 = relay.var("var_2236", dtype = "int64", shape = (2112,))#candidate|2236|(2112,)|var|int64
const_2237 = relay.const(9, dtype = "uint16")#candidate|2237|()|const|uint16
const_2238 = relay.const([5,-5,-5,8,-4,-4,7,4,4,9,-9,-7,-5,10,10,-8,-3,2,1,-3,-10,-7,-3,-8,-2,-1,1,9,4,10,7,9,-10,-8,-10,3,8,-4,10,9,1,2,-10,8,8,-8,-5,-5,-7,-5,5,-6,9,-3,-3,10,4,6,2,-10,3,7,4,-2,-6,9,-4,-2,6,-1,-10,5], dtype = "uint16")#candidate|2238|(72,)|const|uint16
call_2235 = relay.TupleGetItem(func_1063_call(relay.reshape(var_2236.astype('int64'), [12, 11, 16]), relay.reshape(const_2237.astype('uint16'), []), relay.reshape(const_2238.astype('uint16'), [36, 2]), ), 4)
call_2239 = relay.TupleGetItem(func_1067_call(relay.reshape(var_2236.astype('int64'), [12, 11, 16]), relay.reshape(const_2237.astype('uint16'), []), relay.reshape(const_2238.astype('uint16'), [36, 2]), ), 4)
func_729_call = mod.get_global_var('func_729')
func_732_call = mutated_mod.get_global_var('func_732')
const_2241 = relay.const([[-3.080657,-8.456511],[8.465613,6.272164],[-6.595568,-9.574159],[3.841409,1.275445],[8.804953,3.688831],[-1.950901,3.732310],[8.804428,1.775878],[-2.284081,-7.299165],[-4.207856,2.684704],[-9.310044,-6.612699],[-7.600774,1.853521],[0.035476,-9.768725],[-3.738867,-9.951625],[4.461591,2.957077],[-0.752230,-6.036516],[8.478125,-1.264972],[5.054903,1.506263],[-5.310913,-0.532252],[-0.382964,-6.596691],[-9.480145,-3.782129],[-8.799093,0.660978],[-4.295120,-7.040037],[1.714038,5.236413],[-9.697166,-9.466062],[3.526669,7.668467],[6.241360,-0.846841],[-9.919061,4.091773],[-9.324739,7.668668],[-7.547955,-0.041346],[7.544865,-0.397326],[-5.911200,9.946385],[7.159402,-3.686002],[6.537665,-8.168730],[-9.001226,-9.187485],[7.448228,0.848047],[0.228397,6.283574],[-4.110779,-4.564904],[-6.584626,-7.225908],[-7.941210,5.769876],[-6.020289,-4.166763],[-2.492269,-4.143308],[5.630714,1.740257],[0.966469,-0.537110],[3.254627,-6.306711],[-6.708717,5.052408],[7.662119,1.205463],[5.606160,4.822725],[-3.016055,4.932549],[-0.114547,8.469115],[-5.902429,8.505977],[-0.202310,-1.284961],[6.139466,1.929697],[2.434371,-6.817971],[-9.202445,-7.733182],[4.967002,5.720288],[4.911985,-8.650525],[1.285566,4.132533],[-9.773199,4.995668],[5.438109,-7.262636],[-7.243197,-1.431107],[-1.343744,0.560912],[-2.286444,-6.488331],[3.913684,1.609899],[-7.549404,3.057016],[-2.303517,2.661485],[3.381513,5.766202],[-6.062960,5.444930],[2.996230,-3.891700],[-1.031141,-1.955381],[0.785866,-7.810564],[6.720379,3.234860],[9.091929,0.008471],[3.981641,-8.938429],[3.586318,2.805490],[6.068452,-3.797404],[-1.628524,-0.633666],[-2.600005,0.512247],[9.802685,8.471227],[-9.797840,-8.649714],[3.221421,9.506841],[-6.735106,7.141725],[5.097751,8.309044],[9.143930,5.368772],[-2.863895,-4.491081],[-2.003191,-1.318045],[-1.356270,-0.162374],[-7.463552,-1.650860],[-2.934933,7.244187],[-1.743973,-9.667092],[5.923614,-0.093939],[-9.546205,3.123669],[-0.661414,1.392612],[3.513312,-3.664810],[4.499524,-0.776628],[-6.634588,0.965171],[-1.357594,9.213455],[3.346713,-7.430048],[-6.128329,5.738772],[-2.872219,3.178238],[7.551163,-9.507177],[6.664201,-2.605010],[5.028579,-8.457013],[9.849035,0.471001],[-0.703972,-4.728810],[-2.029742,0.890531],[-2.845368,7.579137],[1.636802,3.402188],[-6.328840,0.738359],[-4.445397,-7.586528],[1.864260,6.212652],[8.873733,-1.176078],[-5.040850,4.474116],[-4.171472,6.201204],[-8.159278,4.567353],[5.355931,-3.021724],[-0.962468,8.046137],[6.120106,1.184696],[2.570295,3.877807],[7.214751,-3.256008],[9.423450,-1.177752],[-1.380354,-7.195670],[6.875090,-1.285039],[-0.437951,-8.296031],[4.387975,5.485757],[6.129765,6.044613],[-0.384990,7.034584],[-6.130988,8.077652],[-6.734337,0.633738],[7.133329,8.780512],[-4.773468,1.849563],[-8.133783,9.124096],[-7.240065,-6.354653],[3.605932,-7.865715],[-6.645734,2.823451],[7.804481,-9.774460],[9.872746,3.994078],[9.228808,3.212654],[-6.119768,-5.551775],[-3.619093,-3.652185],[8.385000,-8.899026],[-3.319294,-5.134583],[7.095904,-2.791004],[-0.938355,-7.787569],[-3.409097,-7.365245],[-0.491935,8.037502],[-6.135903,1.166595],[-4.282058,9.418318],[-7.800600,-7.072577],[-0.917530,1.596410],[8.768673,4.859008],[2.721753,5.794551],[9.827421,5.220906],[1.776699,-6.250842],[5.485928,-4.343678],[-2.428861,7.125596],[4.684085,5.833849],[-0.351543,8.443302],[-4.158534,6.414731],[-0.292893,-9.015033],[-6.793457,3.530150],[-0.667079,9.243066],[6.787080,4.597876],[-6.260510,-3.492292],[6.606158,8.444312],[5.922659,1.461406],[6.815124,9.817501],[6.359086,8.375363],[8.926482,8.165966],[5.093710,8.721310],[-2.574278,-8.320617],[6.242728,-1.150248],[-8.168430,-9.767393],[1.101029,-7.146185],[-6.944927,-0.243629],[0.255150,2.433783],[5.390834,-7.065905],[-9.769227,2.134590],[9.602708,0.021229],[5.972910,1.377760],[1.151070,3.962204],[9.777443,-4.030999],[4.267272,3.551324],[-8.909331,9.468248],[2.489286,-2.306209],[-3.195472,-7.238411],[8.175629,-4.422030],[9.305486,4.615935],[-9.012257,1.539844],[-7.377362,4.594808],[9.079590,-9.680474],[-2.004035,9.099317],[0.969330,6.675164],[5.049620,3.040048],[4.809343,8.157257],[1.128347,4.932740],[2.335677,8.718403],[-0.599744,7.349962],[9.201979,-2.456927],[-6.552388,3.790732],[5.541875,7.318407],[-0.768150,-9.104686],[-7.153327,6.807900],[-7.085284,7.949955],[0.979795,7.876245],[-0.051987,0.644554],[-8.942356,0.155165],[0.177426,-8.865381],[3.353653,-6.276797],[8.463497,3.101363],[-6.734342,0.377391],[4.590117,6.113875],[-6.239844,4.769612],[7.533849,-0.252489],[-2.741893,-9.714785],[5.071434,-0.543214],[-7.433633,-5.019011],[9.167337,-0.016929],[-7.124112,-4.236324],[-9.347469,4.101337],[-9.195612,0.015461],[4.562579,7.724451],[0.699339,-9.522110],[0.037031,9.940506],[5.428603,5.260289],[7.565922,-3.084690],[2.040764,-8.936194],[-2.126632,-9.333990],[-5.075271,9.009055],[-5.539164,7.370550],[-1.238039,-9.509637],[-8.324718,-0.842258],[8.758447,6.018197],[5.985978,1.302067],[-2.946851,-7.575977],[4.151643,-2.821394],[3.907798,8.096838],[-9.248121,5.883187],[-0.839753,-1.790146],[-3.070253,-2.815791],[-1.141939,-9.750960],[-5.128518,0.623996],[2.159263,7.107480],[-4.322285,-1.969660],[7.730772,1.843421],[-7.662971,0.171241],[-0.597946,-0.817385],[-3.888323,5.497317],[-5.628441,-2.781943],[2.945918,5.275771],[6.404995,6.541190],[-8.666143,8.527801],[8.842051,-1.916584],[-1.755685,2.510179],[0.719774,6.121839],[-1.997755,9.254882],[-7.116068,9.570279],[0.229824,3.721671],[-4.387796,-8.244717],[-8.989022,-9.789218],[3.698321,-3.240024],[-6.396662,-2.224867],[0.114921,1.356187],[-3.744573,-2.550952],[-3.404078,-1.089925],[-5.778865,1.325181],[-6.578720,-1.101959],[4.372423,3.015087],[0.169812,-1.750713],[1.570201,6.001208],[-2.434818,-5.973939],[9.539437,-9.133846],[7.855164,4.997740],[-6.966656,-7.194732],[0.496961,3.528499],[1.672253,0.197828],[-6.405027,3.008596],[-5.820574,-0.431815],[6.092094,-0.785175],[1.404812,8.428427],[4.576042,2.053550],[6.261199,6.171015],[-2.971284,8.564690],[7.312488,-9.233200],[8.025764,4.800670],[-9.900434,-5.918256],[-0.782396,5.805638],[0.290832,-9.098162],[4.092969,-6.372335],[4.666347,6.366795],[4.215434,-6.518458],[8.345946,-2.587912],[-1.742778,3.938312],[-6.481265,-8.643248],[-2.593599,-5.677774],[-0.396306,-4.796762],[-5.562059,-8.824039],[-5.383596,4.678771],[2.644153,-6.606886],[-5.096520,4.635599],[-7.223169,-7.368740],[-6.769355,-6.936862],[-2.196407,0.704507],[4.396130,-8.848743],[-0.901986,-1.461654],[8.919094,-4.217820],[8.217795,1.038491],[-1.813064,-6.039526],[3.452299,4.094970],[0.856034,-3.889303],[-4.956848,0.298311],[-8.791984,-8.654284],[-7.850114,7.181807],[-3.946260,-6.250996],[4.381348,-4.164931],[-2.440672,-4.692172],[6.112404,-7.108947],[6.533352,-3.798783],[-5.691341,-9.450037],[2.667079,7.698432],[9.583730,8.421065],[2.822282,0.711266],[-0.754968,-5.219989],[-1.507016,-9.370076],[-1.340623,-4.903468],[-9.672254,3.245977],[-8.500701,4.292988],[-7.017621,-4.380304],[4.592644,-1.666090],[0.712952,5.188117],[3.973734,2.995219],[0.377885,2.757571],[-6.692866,3.424584],[-9.337012,4.937698],[-2.851283,-2.733577],[8.391288,-5.019167],[6.964569,6.399503],[-3.721744,-5.824389],[-3.892678,1.623746],[6.930679,8.907246],[5.411818,-7.333083],[-4.109000,-3.322781],[-1.298300,3.569895],[2.992341,7.408302],[-8.423169,-5.332616],[0.670323,-5.885536],[-8.477479,9.777712],[-7.546352,5.394349],[-5.709224,5.382201],[9.463619,2.063769],[5.492029,5.595570],[0.195791,8.968529],[-4.512089,-7.493665],[-2.367012,7.638548],[7.605881,-9.422096],[-5.467284,0.287466],[-5.100356,3.017208],[-6.636359,8.596577],[1.080343,2.428958],[0.916604,1.444265],[-5.054785,-3.837377],[-7.401379,9.855517],[-0.369114,-8.689058],[0.507142,4.023369],[-9.318752,7.238775],[-3.461666,-6.904773],[6.343092,-6.621221],[-6.894938,-6.698600],[3.803831,5.142042],[1.597405,8.424871],[1.386926,-5.715885],[5.825055,-5.370147],[-7.133360,7.354616],[-5.154717,-4.158351],[5.487983,0.064182],[-9.489122,-0.118662],[-3.166030,-1.314453],[-8.185577,4.061511],[0.110729,-4.672014],[-8.879614,-9.997826],[-5.803028,9.574188],[-3.079191,-2.865850],[-6.499454,2.801307],[-9.699027,-6.100338],[-0.243684,-2.855499],[6.841873,-6.982094],[6.897576,2.046911],[6.334058,-3.736400],[6.398795,-1.069979],[7.921603,2.419343],[-1.729237,0.188956],[-5.839317,0.777997],[-2.075597,5.003894],[-1.270415,-8.235008],[-3.861760,4.443005],[9.389175,4.140550],[3.536988,-9.016418],[8.395505,-2.718468],[1.331633,-0.849598],[9.636810,-0.560969],[0.771156,8.992789],[5.275721,4.653156],[-9.146819,0.700241],[-3.627104,-1.083809],[-8.702889,-0.350656],[7.106450,-9.677951],[-1.076701,-1.271710],[-0.584997,3.567549],[8.752648,2.320262],[-1.511082,-6.817592],[5.975815,2.512157],[0.700783,1.979353],[-8.156651,8.183205],[-2.126941,-3.807239],[-9.955458,7.760414],[4.811124,-9.578100],[6.652558,1.756698],[-6.097259,-1.037506],[8.207889,6.772549],[-5.732145,8.193814],[-6.289184,-6.723411],[-4.386906,-9.396425],[7.822222,0.948924],[-2.928533,5.757719],[-0.894216,-2.318602],[3.961025,-6.021808],[-2.966522,0.732143],[7.756331,0.144508],[5.609035,-2.666614],[6.502291,-1.957304],[-7.033967,0.328815],[1.548868,5.765295],[-8.099206,-9.688834],[-3.334271,-0.130956],[-9.015446,2.812397],[-1.699399,8.554158],[-0.112024,3.004068],[-7.937917,0.515012],[-8.553414,-5.377844],[7.406392,1.403524],[4.087218,3.380853],[-0.554438,-6.566077],[4.595701,-8.030539],[-0.482631,8.003088],[-1.279647,-9.564208],[-2.387717,0.417091],[2.413446,-1.515617],[3.927198,-4.263151],[3.776878,6.583126],[0.256842,-3.878470],[1.298349,3.950084],[1.941745,3.981535],[3.900217,-9.315931],[2.055558,-7.321510],[9.292942,1.059137],[-7.620202,3.062704],[-0.301458,-4.295393],[-7.213189,-5.329326],[2.210125,-8.284002],[9.761204,-4.805088],[8.634364,-1.411340],[5.001642,0.202909],[-3.391844,3.787681],[-1.347480,-4.790392],[8.332245,8.248333],[-7.636744,-3.891937],[6.410893,-3.377040],[-2.095208,0.674260],[6.305565,-1.007715],[9.653598,-8.339816],[-6.012442,-8.911908],[-2.630951,0.463885],[4.677538,-0.641072],[0.546504,-5.757132],[1.924957,9.811673],[9.290009,6.233485],[-6.219417,6.109915],[-8.738691,8.496635],[-1.763144,9.259571],[0.454222,-6.676876],[3.485797,-2.146443],[3.737643,4.534758],[7.516625,-5.226685],[-2.485845,9.784939],[8.210723,-0.521061],[-0.838303,2.375242],[8.759117,-6.165297],[5.780031,-0.435080],[3.919982,8.854212],[7.230485,4.379536],[8.154298,4.548704],[4.194808,5.237377],[-7.803804,-4.443470],[6.709432,4.564922],[5.059714,8.639743],[-3.033893,4.693874],[-2.709971,7.356644],[-4.457301,-9.321497],[-0.234910,1.190263],[6.092792,2.717085],[-5.155098,-8.392299],[3.889727,-3.480880],[3.449770,9.496022],[8.996912,7.438775],[-2.798249,4.688844],[0.244829,-0.331909],[-3.283742,-4.711443],[-4.819884,6.555792],[6.129906,2.092886],[4.342362,5.567433],[9.761321,-2.799566],[-0.314878,9.967897],[-3.019004,2.772607],[-9.216800,-9.343812],[2.310158,-8.561307],[-1.256566,-3.834295],[-6.792696,-9.560560],[5.136267,-0.921219],[-4.851623,-7.977728],[3.019871,3.219320],[-1.584280,4.296192],[5.496487,9.249336],[-2.457651,-7.419403],[3.276570,8.045932],[-3.677229,8.260704],[2.284053,7.713190],[6.077658,-2.975408],[8.088271,-0.892677],[-2.574067,-8.883672],[1.999757,-2.442577],[-8.411706,-0.118318],[1.524168,0.415835],[7.463236,-7.293091],[-5.147047,7.989792],[3.965095,-9.540857],[0.816413,-7.094335],[6.972927,2.025031],[1.198262,-3.499937],[7.655588,1.636993],[-4.921572,-0.823097],[-8.249957,5.632396],[-5.887474,-7.310766],[-9.450851,-9.780572],[4.020932,-7.150296],[-9.955133,-0.527010],[0.524579,0.621534],[9.505468,-5.522667],[5.315444,-2.774722],[4.536518,-6.239988],[-0.683154,7.431224],[-7.418658,-7.929176],[-3.885259,-7.396105],[2.830093,-8.695034],[1.963469,3.016159],[8.037609,7.876013],[-9.908133,-3.432968],[7.694868,-8.637352],[5.280018,-7.603209],[4.012542,5.287162],[4.593312,-5.464658],[-5.295148,-3.731973],[-7.473450,2.374767],[1.837909,-2.905500],[-5.708932,9.881888],[-6.019719,5.131427],[9.387467,0.862998],[-4.091357,-5.690530],[-7.882601,-3.393473],[-7.738102,-3.482707],[-3.358014,-9.173764],[-2.966324,-7.560628],[4.170624,-6.408245],[0.951424,1.607127],[-7.120196,5.324181],[3.364450,-4.201756],[5.976616,9.779148],[9.208475,-0.684279],[4.542205,0.327829],[-7.723917,-6.102088],[9.871188,6.799066],[-3.778545,2.171966],[8.292337,7.345835],[6.446061,-0.169898],[9.796170,-4.794476],[5.511887,-7.661383],[8.347781,9.533315],[0.257856,8.648033],[-6.539894,0.842838],[1.674739,8.681659],[-8.505404,4.190808],[6.337024,-8.123087],[5.282856,9.421725],[5.913842,3.457171],[-8.214312,-4.027678],[-6.556690,-7.124548],[-9.111154,4.791829],[4.644555,-0.896075],[-9.860767,1.542654],[5.791022,-4.818864],[-6.597021,-6.533862],[7.889046,-5.942591],[-4.220708,-7.544330],[-8.188283,2.728453],[-7.755764,-0.317397],[-9.189160,1.835235],[-9.709401,-2.455761],[-6.049439,8.776664],[-9.055107,2.172797],[6.540424,2.231521],[-6.956612,3.241557],[4.761291,-5.694338],[5.773551,1.286119],[1.975669,-7.735871],[1.871301,-8.041464],[5.881521,-8.015395],[9.096695,-1.665715],[7.173288,-8.034616],[4.337954,-1.092601],[-3.681449,-2.164147],[7.606337,2.212406],[8.664591,-2.908543],[-0.318048,-6.370499],[-2.406903,-5.503013],[-1.736195,9.093593],[-9.830221,-3.960595],[7.828127,-2.993910],[3.316409,2.461905],[-9.695371,8.816686],[8.014022,-2.019437],[-5.713947,1.389778],[6.877263,-9.423253],[-0.048889,2.897518],[1.988124,-3.925959],[-1.780870,7.773256],[-4.292351,-1.907569],[4.733442,-8.743919],[-1.794914,0.747451],[9.447426,7.072495],[-2.743148,1.843490],[9.249123,2.262642],[-5.941889,7.048878],[8.705201,-4.578350],[-1.169157,-6.271119],[-7.213455,-3.234065],[-0.205755,-4.316836],[-0.106757,-1.073732],[9.753465,-3.153153],[7.047806,-8.735852],[4.230610,-7.181112],[-2.449323,-0.984414],[-7.380203,-1.322414],[9.112866,4.080141],[-7.951185,-8.293654],[9.702281,1.102912],[-2.339767,-8.367451],[-8.663582,8.512893],[-3.140477,-0.470378],[-1.012364,2.570514],[4.015541,0.468391],[-7.996418,-5.651738],[-3.056429,-8.577835],[-2.547319,6.253013],[8.852831,-1.119103],[-7.226393,9.872035],[4.225507,1.410239],[2.643165,-5.667275],[-9.533876,1.066430],[-7.348700,-8.931638],[-9.645064,9.761595],[-9.962909,1.668282],[-9.219055,3.011200],[2.932421,8.965652],[-1.887816,-9.669690],[-9.161702,5.416147],[5.153606,7.688938],[-8.690110,-1.661891],[-3.255081,7.632236],[-3.000198,-7.378149],[-0.602111,4.392348],[0.443212,5.923494],[8.213540,6.302739],[-1.651843,6.012377],[9.932151,-3.946655],[-5.299592,7.824145],[-3.967755,7.448973],[4.771235,9.723660],[-7.212669,-0.873130],[3.008987,7.413622],[2.843652,-4.773462],[6.138080,1.300414],[0.410887,2.235997],[9.115802,-1.460799],[2.876553,-3.767017],[-4.844055,6.143350],[4.022437,-3.268973],[0.194406,9.178352],[-5.099034,-1.939621],[8.396944,-3.496325],[3.312950,-9.397447],[-5.235413,-1.703630],[2.142624,3.927567],[-3.371237,-8.896329],[-8.465243,7.874889],[-8.587243,-3.242011],[-5.794921,3.742949],[8.071370,-9.864954],[5.821528,0.695409],[-8.498011,2.903642],[-4.114729,0.273279],[5.187775,-8.610836],[-8.543432,1.205504],[5.113679,9.628432],[6.209263,1.573725],[-9.850627,7.390636],[0.458546,-8.733684],[9.481680,8.211795],[-3.957750,-5.441160],[-0.010875,8.133495],[-9.551723,5.087891],[-4.725750,-8.235113],[4.525086,-0.780443],[6.151311,8.145299],[-0.517747,-6.930936],[-4.777261,-1.349515],[-6.255132,-5.793254],[4.640647,7.158162],[4.078675,2.107782],[6.540824,0.050042],[-3.888790,9.657400],[6.771601,-0.598173],[-7.180665,8.376176],[-1.617701,9.890468],[8.069351,8.668921],[4.306836,-3.684638],[6.681278,-8.468022],[4.280852,-6.332715],[-2.320801,-7.554294],[-1.448021,8.434278],[9.960508,2.507299],[-2.043426,2.284281],[8.353857,8.846322],[8.931664,7.432046],[1.399909,-1.731785],[8.893586,-6.252424],[-5.053651,5.152284],[0.926494,8.041928],[-3.952054,-6.196783],[8.820921,-1.444011],[-2.775542,8.447529],[7.489146,2.829616],[-0.690888,-5.137171],[-0.696357,5.230620],[3.105931,6.668526],[-1.533734,6.374479],[-9.296752,8.113089],[7.014291,-9.431877],[7.122161,-9.000821],[-5.380520,-1.272997],[0.537051,-9.385728],[4.126755,-0.309010],[-7.139880,-8.086841],[-8.610704,0.499057],[3.868947,-0.010502],[-2.922944,2.334553],[-9.659785,3.604465],[6.222509,5.395881],[-4.039747,-0.073249],[-2.395737,-4.582411],[-9.541507,7.444085],[-7.235616,8.284875],[3.530116,4.437009],[-6.481294,-7.297709],[-3.055168,5.954926],[7.784264,-7.888271],[-7.481756,6.671446],[3.933236,-9.732264],[-4.447786,-4.451046],[-5.371047,5.283662],[2.864690,-5.499906],[6.855398,-1.798435],[-0.527438,9.521619],[-3.598733,7.352372],[-6.507636,0.466036],[-8.930615,6.475323],[3.684952,4.937101],[-3.712004,-5.612486],[2.879575,0.216018],[7.939719,-4.510170],[-7.494874,4.118719],[6.957417,7.295756],[8.767623,5.702149],[-3.333670,6.900023],[-8.492730,-2.273192],[4.289674,-7.420606],[8.596935,2.175614],[0.463163,-1.423005],[1.411751,5.624866],[-8.384149,-5.850932],[2.454558,9.998449],[-6.320171,-4.491271],[9.919490,9.701569]], dtype = "float64")#candidate|2241|(800, 2)|const|float64
call_2240 = relay.TupleGetItem(func_729_call(relay.reshape(const_2241.astype('float64'), [10, 10, 16]), relay.reshape(const_2237.astype('uint16'), []), ), 1)
call_2242 = relay.TupleGetItem(func_732_call(relay.reshape(const_2241.astype('float64'), [10, 10, 16]), relay.reshape(const_2237.astype('uint16'), []), ), 1)
bop_2246 = relay.logical_xor(var_2229.astype('uint16'), const_2237.astype('uint16')) # shape=(14, 10, 12)
output = relay.Tuple([uop_2230,call_2235,var_2236,const_2238,call_2240,const_2241,bop_2246,])
output2 = relay.Tuple([uop_2230,call_2239,var_2236,const_2238,call_2242,const_2241,bop_2246,])
func_2251 = relay.Function([var_2229,var_2236,], output)
mod['func_2251'] = func_2251
mod = relay.transform.InferType()(mod)
var_2252 = relay.var("var_2252", dtype = "float64", shape = (14, 10, 12))#candidate|2252|(14, 10, 12)|var|float64
var_2253 = relay.var("var_2253", dtype = "int64", shape = (2112,))#candidate|2253|(2112,)|var|int64
output = func_2251(var_2252,var_2253,)
func_2254 = relay.Function([var_2252,var_2253,], output)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2407 = relay.var("var_2407", dtype = "uint16", shape = (11, 4, 14))#candidate|2407|(11, 4, 14)|var|uint16
const_2408 = relay.const([[[-4,-1,8,2,-10,-1,-7,-10,-4,8,5,4,2,1],[8,7,2,8,-4,3,-9,10,-7,-7,-5,8,8,10],[-4,2,-4,6,7,-6,-2,-4,-5,7,5,3,-8,-9],[-5,-8,2,2,7,2,10,4,10,5,4,-9,7,-8]],[[5,3,8,10,9,8,8,1,-1,-1,5,-8,1,10],[1,5,7,7,-9,-7,-7,-8,6,-4,-6,-10,3,2],[5,-4,-9,-2,8,4,-4,-8,8,5,-7,3,-4,-6],[10,2,1,-4,8,-9,-5,6,3,-2,9,-5,8,2]],[[10,2,-10,-9,-4,-1,9,9,-2,5,8,-6,-9,-7],[-8,1,-9,-2,-9,9,-4,-4,-10,-8,9,-10,3,7],[-7,-10,-3,5,-4,-10,7,-6,10,3,6,-4,7,3],[-2,-3,-3,5,4,10,10,2,-7,-8,10,-9,-7,9]],[[-9,-5,3,1,10,3,-10,3,1,7,6,7,1,10],[10,-1,4,-1,3,-2,-10,7,8,-9,-7,-10,-4,-9],[-2,-10,-8,1,-6,-8,6,9,7,-7,-10,-5,-5,-2],[-2,5,-7,6,5,-9,2,9,1,6,-6,2,-3,4]],[[4,8,-4,9,7,1,7,-4,-9,-8,1,-8,-9,4],[9,-2,4,8,5,3,5,6,6,-8,3,7,2,-2],[8,-4,5,-10,8,-1,5,4,10,1,-10,-2,7,-8],[3,-9,-9,9,-9,-5,9,7,-1,-6,-1,-6,-6,-5]],[[-6,-1,6,-1,4,-8,-1,9,10,3,-9,2,-6,2],[-7,-4,-3,-3,6,3,-5,3,4,3,-10,-5,7,-8],[6,-4,8,-5,4,9,1,2,-2,2,-8,10,-3,-6],[2,1,5,-8,-3,3,10,-1,-3,9,-7,1,-7,-3]],[[8,1,5,-8,9,-3,-1,-2,-10,4,-6,-9,5,8],[5,-4,-3,2,7,6,10,-10,8,3,-7,-3,9,5],[6,-8,9,3,-5,7,7,-1,7,-7,3,4,7,2],[3,-2,5,9,9,3,7,9,-7,10,-2,-8,-4,-7]],[[-2,-7,-8,-6,-8,-6,-7,3,1,7,-2,2,3,-1],[2,10,-6,-3,-7,-9,3,1,6,-5,8,5,-10,-4],[-6,-2,2,6,-8,-4,5,-7,9,-10,4,2,-9,1],[-5,-2,9,-9,5,-9,-4,7,6,-2,4,2,9,-9]],[[2,-8,5,7,-6,-5,4,4,-6,-9,-9,-1,-3,2],[-8,10,2,-6,2,1,2,8,9,-3,-7,9,-3,8],[3,10,2,1,10,1,3,-9,-7,10,-9,2,7,-1],[-10,-8,8,4,10,3,7,1,7,4,6,-1,8,2]],[[-5,-8,1,-9,6,10,1,5,9,-7,-5,-10,6,6],[5,1,-9,4,-7,-1,-6,-8,-6,4,-8,-2,1,-3],[-5,3,9,7,-7,9,4,8,9,-7,-8,2,2,-10],[-8,-4,-6,-1,2,-2,-9,-2,9,2,-5,-4,-2,10]],[[10,10,7,-1,10,-7,-1,3,7,4,-5,-5,7,-5],[8,4,-7,8,-8,-8,-2,-3,1,-3,-1,-8,5,-7],[5,-3,9,-2,4,2,-8,2,-5,-3,3,9,-4,2],[-10,-4,-1,9,6,8,-1,2,1,1,1,4,-3,7]]], dtype = "uint16")#candidate|2408|(11, 4, 14)|const|uint16
bop_2409 = relay.bitwise_and(var_2407.astype('uint16'), relay.reshape(const_2408.astype('uint16'), relay.shape_of(var_2407))) # shape=(11, 4, 14)
output = bop_2409
output2 = bop_2409
func_2412 = relay.Function([var_2407,], output)
mod['func_2412'] = func_2412
mod = relay.transform.InferType()(mod)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2413 = relay.var("var_2413", dtype = "uint16", shape = (11, 4, 14))#candidate|2413|(11, 4, 14)|var|uint16
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2414 = func_2412_call(var_2413)
output = call_2414
func_2415 = relay.Function([var_2413], output)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2471 = relay.var("var_2471", dtype = "int64", shape = (2, 4, 6))#candidate|2471|(2, 4, 6)|var|int64
var_2472 = relay.var("var_2472", dtype = "int64", shape = (2, 4, 6))#candidate|2472|(2, 4, 6)|var|int64
bop_2473 = relay.right_shift(var_2471.astype('int64'), relay.reshape(var_2472.astype('int64'), relay.shape_of(var_2471))) # shape=(2, 4, 6)
func_2251_call = mod.get_global_var('func_2251')
func_2254_call = mutated_mod.get_global_var('func_2254')
var_2481 = relay.var("var_2481", dtype = "float64", shape = (1680,))#candidate|2481|(1680,)|var|float64
var_2482 = relay.var("var_2482", dtype = "int64", shape = (2112,))#candidate|2482|(2112,)|var|int64
call_2480 = relay.TupleGetItem(func_2251_call(relay.reshape(var_2481.astype('float64'), [14, 10, 12]), relay.reshape(var_2482.astype('int64'), [2112,]), ), 3)
call_2483 = relay.TupleGetItem(func_2254_call(relay.reshape(var_2481.astype('float64'), [14, 10, 12]), relay.reshape(var_2482.astype('int64'), [2112,]), ), 3)
var_2491 = relay.var("var_2491", dtype = "float64", shape = (1680,))#candidate|2491|(1680,)|var|float64
bop_2492 = relay.bitwise_or(var_2481.astype('uint16'), relay.reshape(var_2491.astype('uint16'), relay.shape_of(var_2481))) # shape=(1680,)
output = relay.Tuple([bop_2473,call_2480,var_2482,bop_2492,])
output2 = relay.Tuple([bop_2473,call_2483,var_2482,bop_2492,])
func_2497 = relay.Function([var_2471,var_2472,var_2481,var_2482,var_2491,], output)
mod['func_2497'] = func_2497
mod = relay.transform.InferType()(mod)
mutated_mod['func_2497'] = func_2497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2497_call = mutated_mod.get_global_var('func_2497')
var_2499 = relay.var("var_2499", dtype = "int64", shape = (2, 4, 6))#candidate|2499|(2, 4, 6)|var|int64
var_2500 = relay.var("var_2500", dtype = "int64", shape = (2, 4, 6))#candidate|2500|(2, 4, 6)|var|int64
var_2501 = relay.var("var_2501", dtype = "float64", shape = (1680,))#candidate|2501|(1680,)|var|float64
var_2502 = relay.var("var_2502", dtype = "int64", shape = (2112,))#candidate|2502|(2112,)|var|int64
var_2503 = relay.var("var_2503", dtype = "float64", shape = (1680,))#candidate|2503|(1680,)|var|float64
call_2498 = func_2497_call(var_2499,var_2500,var_2501,var_2502,var_2503,)
output = call_2498
func_2504 = relay.Function([var_2499,var_2500,var_2501,var_2502,var_2503,], output)
mutated_mod['func_2504'] = func_2504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2645 = relay.var("var_2645", dtype = "uint32", shape = (2, 11, 11))#candidate|2645|(2, 11, 11)|var|uint32
var_2646 = relay.var("var_2646", dtype = "uint32", shape = (2, 11, 11))#candidate|2646|(2, 11, 11)|var|uint32
bop_2647 = relay.greater_equal(var_2645.astype('bool'), relay.reshape(var_2646.astype('bool'), relay.shape_of(var_2645))) # shape=(2, 11, 11)
output = relay.Tuple([bop_2647,])
output2 = relay.Tuple([bop_2647,])
func_2658 = relay.Function([var_2645,var_2646,], output)
mod['func_2658'] = func_2658
mod = relay.transform.InferType()(mod)
mutated_mod['func_2658'] = func_2658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2658_call = mutated_mod.get_global_var('func_2658')
var_2660 = relay.var("var_2660", dtype = "uint32", shape = (2, 11, 11))#candidate|2660|(2, 11, 11)|var|uint32
var_2661 = relay.var("var_2661", dtype = "uint32", shape = (2, 11, 11))#candidate|2661|(2, 11, 11)|var|uint32
call_2659 = func_2658_call(var_2660,var_2661,)
output = call_2659
func_2662 = relay.Function([var_2660,var_2661,], output)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2678 = relay.var("var_2678", dtype = "float32", shape = (4, 12, 6))#candidate|2678|(4, 12, 6)|var|float32
uop_2679 = relay.exp(var_2678.astype('float32')) # shape=(4, 12, 6)
output = relay.Tuple([uop_2679,])
output2 = relay.Tuple([uop_2679,])
func_2682 = relay.Function([var_2678,], output)
mod['func_2682'] = func_2682
mod = relay.transform.InferType()(mod)
var_2683 = relay.var("var_2683", dtype = "float32", shape = (4, 12, 6))#candidate|2683|(4, 12, 6)|var|float32
output = func_2682(var_2683)
func_2684 = relay.Function([var_2683], output)
mutated_mod['func_2684'] = func_2684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2830 = relay.var("var_2830", dtype = "float64", shape = (7, 13, 13))#candidate|2830|(7, 13, 13)|var|float64
uop_2831 = relay.sinh(var_2830.astype('float64')) # shape=(7, 13, 13)
output = uop_2831
output2 = uop_2831
func_2853 = relay.Function([var_2830,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
var_2854 = relay.var("var_2854", dtype = "float64", shape = (7, 13, 13))#candidate|2854|(7, 13, 13)|var|float64
output = func_2853(var_2854)
func_2855 = relay.Function([var_2854], output)
mutated_mod['func_2855'] = func_2855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3095 = relay.var("var_3095", dtype = "int8", shape = (6, 6, 9))#candidate|3095|(6, 6, 9)|var|int8
var_3096 = relay.var("var_3096", dtype = "int8", shape = (6, 6, 9))#candidate|3096|(6, 6, 9)|var|int8
bop_3097 = relay.maximum(var_3095.astype('int8'), relay.reshape(var_3096.astype('int8'), relay.shape_of(var_3095))) # shape=(6, 6, 9)
output = relay.Tuple([bop_3097,])
output2 = relay.Tuple([bop_3097,])
func_3117 = relay.Function([var_3095,var_3096,], output)
mod['func_3117'] = func_3117
mod = relay.transform.InferType()(mod)
mutated_mod['func_3117'] = func_3117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mutated_mod.get_global_var('func_3117')
var_3119 = relay.var("var_3119", dtype = "int8", shape = (6, 6, 9))#candidate|3119|(6, 6, 9)|var|int8
var_3120 = relay.var("var_3120", dtype = "int8", shape = (6, 6, 9))#candidate|3120|(6, 6, 9)|var|int8
call_3118 = func_3117_call(var_3119,var_3120,)
output = call_3118
func_3121 = relay.Function([var_3119,var_3120,], output)
mutated_mod['func_3121'] = func_3121
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3131 = relay.const([[[False,True,True,False,True,False,True,False,False,False,True,False,False],[True,False,False,False,False,False,True,False,True,False,False,False,True],[False,False,True,False,False,True,False,True,True,True,True,False,True],[True,False,False,True,False,True,True,False,False,True,False,True,False],[True,True,False,True,False,False,False,True,True,False,False,True,False],[True,False,True,False,True,True,False,True,False,True,True,False,True],[True,True,False,False,True,True,True,False,True,False,False,True,True],[True,True,False,False,True,True,False,True,True,True,False,False,True],[False,True,False,False,False,True,False,False,True,True,False,False,True],[True,False,False,False,False,True,True,False,False,True,True,False,False],[True,False,False,True,True,False,False,True,True,False,False,True,True],[True,False,True,True,False,False,False,False,False,False,True,True,False],[True,False,True,False,False,False,False,False,True,True,True,True,False],[False,False,False,True,True,True,True,False,False,True,False,False,True],[False,False,True,True,False,False,False,False,False,False,False,False,True]],[[False,True,False,True,True,False,True,True,True,False,False,False,False],[True,False,False,True,True,False,False,False,False,False,True,False,False],[True,False,True,False,True,True,True,True,False,True,True,False,False],[False,False,True,True,True,False,True,True,True,False,False,True,True],[False,False,False,False,False,True,False,True,True,False,False,True,True],[True,False,True,True,False,True,True,True,False,False,True,True,False],[True,False,False,False,True,False,False,True,False,True,False,False,False],[False,False,True,True,False,False,True,True,True,True,False,False,True],[True,True,False,False,True,True,False,True,False,True,True,False,False],[True,True,True,True,False,True,False,True,False,False,True,True,True],[False,False,True,False,True,False,True,False,True,False,True,True,True],[True,True,False,False,True,True,True,False,True,True,True,True,False],[True,True,True,False,False,True,True,True,False,False,False,True,False],[True,False,False,False,True,True,True,False,True,True,True,True,True],[False,False,True,True,True,False,False,False,True,False,False,False,False]],[[False,False,False,True,True,True,True,True,True,True,False,True,True],[False,False,False,True,True,True,True,False,False,False,True,True,True],[False,True,True,False,True,True,False,True,False,True,False,False,False],[False,True,True,True,False,True,True,False,False,False,True,True,True],[False,False,False,True,True,False,False,False,False,False,True,False,True],[True,False,False,True,False,False,False,True,True,False,False,False,True],[False,False,False,False,True,False,False,True,True,True,True,False,True],[True,False,False,False,True,True,False,True,True,False,True,True,False],[False,False,False,False,True,True,True,True,True,False,False,True,False],[True,False,True,True,True,True,True,True,True,True,False,True,False],[True,True,False,True,True,False,True,False,True,False,True,False,True],[False,False,True,True,False,True,True,False,False,False,True,False,True],[False,True,True,True,True,True,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,False,False,False,True,True,False],[True,True,True,True,False,True,False,True,False,False,False,False,True]],[[False,False,True,True,False,False,False,True,True,True,False,True,True],[False,True,False,True,True,True,False,False,True,False,True,True,False],[True,True,False,True,True,True,False,False,False,False,True,True,False],[False,False,False,True,True,True,False,True,False,True,False,True,True],[True,True,False,True,True,True,False,False,True,True,True,True,False],[True,True,True,False,True,True,False,False,True,True,True,True,False],[True,True,True,False,False,False,False,True,True,True,False,False,True],[True,True,False,False,True,False,False,False,False,True,False,True,True],[True,False,False,False,True,False,True,False,False,False,False,False,True],[False,False,True,False,True,True,True,False,True,True,False,True,True],[False,True,True,True,False,False,False,True,True,True,True,False,True],[True,False,True,False,True,True,False,True,True,True,False,True,True],[True,False,True,True,True,False,False,True,True,False,True,True,True],[False,False,False,True,True,False,True,True,False,True,False,False,False],[False,True,False,True,True,True,True,False,False,False,False,False,True]],[[False,True,True,True,False,True,False,True,False,True,True,False,False],[True,True,True,True,True,True,False,True,False,True,False,True,False],[True,True,False,True,True,False,False,False,False,True,True,False,False],[False,True,True,False,False,False,True,True,True,False,False,True,True],[False,True,True,True,True,False,False,True,False,True,False,False,True],[False,True,True,False,True,True,True,False,True,True,False,False,False],[True,False,False,True,True,False,False,False,True,True,True,False,False],[True,True,False,True,True,False,True,False,False,False,True,False,True],[False,True,True,False,False,True,False,False,False,True,True,False,True],[False,True,False,False,True,True,False,False,True,True,False,False,True],[True,False,False,True,True,False,False,True,False,False,False,False,True],[False,True,False,False,False,False,True,True,True,False,False,True,False],[True,False,True,True,True,False,False,True,True,True,True,True,False],[True,False,False,True,True,False,False,True,False,False,True,True,True],[False,False,False,True,False,True,True,True,True,False,True,True,True]],[[False,False,False,False,True,True,False,True,False,True,False,False,False],[False,True,True,False,False,False,False,False,True,False,False,True,False],[True,True,True,False,True,False,False,True,False,True,True,False,True],[True,True,True,False,True,True,True,False,True,True,False,True,False],[False,False,False,True,False,True,False,True,True,True,True,True,True],[True,True,False,True,False,True,False,True,True,True,False,False,False],[False,False,False,True,False,False,True,False,True,True,True,False,True],[False,True,False,True,False,False,False,False,True,False,False,False,True],[True,True,False,False,True,False,False,False,True,False,False,True,False],[False,False,True,False,True,True,True,False,False,False,False,True,False],[True,True,False,True,True,False,True,True,False,False,True,False,False],[False,False,True,True,False,True,False,True,True,True,False,False,True],[False,False,True,True,True,True,True,True,False,False,True,True,True],[True,False,False,True,False,False,True,True,False,True,False,False,False],[True,True,False,False,True,True,False,False,False,True,True,True,True]],[[False,True,False,True,False,False,True,False,True,False,True,True,True],[True,False,False,True,True,True,False,True,True,True,False,False,False],[True,True,True,False,False,True,False,True,True,False,True,False,True],[False,False,False,True,False,True,False,False,False,True,True,False,False],[True,False,True,True,False,False,False,True,False,True,True,False,False],[False,True,True,False,False,True,True,False,True,True,True,True,True],[True,False,False,True,False,True,True,True,False,True,True,True,True],[False,False,False,False,False,False,True,True,False,True,False,True,True],[True,False,False,False,True,True,False,False,True,True,True,False,False],[False,False,False,True,True,False,True,True,False,True,True,False,False],[True,True,False,True,True,False,True,True,False,True,True,True,True],[False,False,False,False,False,False,False,False,True,True,False,False,False],[True,True,True,True,True,True,False,False,False,True,False,True,True],[False,False,False,True,True,False,True,False,False,False,False,True,False],[False,False,True,False,True,False,False,False,True,True,True,True,True]],[[True,True,True,True,False,False,True,False,True,True,False,True,True],[False,True,True,True,True,True,False,False,False,True,False,False,True],[True,True,True,True,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,False,False,False,False,True,False,False,False],[False,True,False,False,False,False,True,True,True,False,False,True,True],[True,True,True,False,True,True,False,True,False,True,True,False,False],[True,False,False,True,False,False,False,False,False,True,False,True,False],[True,False,False,False,True,False,True,False,False,False,False,True,True],[False,False,True,True,False,False,True,False,False,True,False,False,True],[False,True,False,False,False,True,False,False,False,True,False,True,True],[True,False,True,False,True,False,False,False,True,True,True,False,True],[True,True,False,True,False,False,True,False,False,True,False,False,True],[False,True,False,True,True,True,True,False,True,True,False,True,True],[True,False,False,True,False,True,False,False,True,True,False,False,True],[True,True,True,True,False,True,True,False,True,False,True,False,False]],[[False,True,True,False,True,False,False,True,False,False,True,False,False],[False,True,True,False,True,False,True,False,True,True,False,False,False],[True,False,True,True,True,False,True,False,False,False,False,False,True],[False,True,False,True,True,False,False,False,False,True,False,True,False],[False,True,False,False,True,True,True,False,False,False,False,True,False],[False,True,False,True,True,True,False,True,False,True,False,False,False],[False,False,False,False,False,False,True,False,True,False,True,False,False],[True,False,True,True,False,True,False,False,False,True,True,False,True],[True,False,True,False,False,True,False,False,True,False,True,False,False],[False,False,True,False,True,False,False,False,True,False,True,False,False],[False,True,False,False,False,True,False,True,True,False,True,True,True],[False,True,False,True,True,False,True,False,False,False,True,False,False],[False,False,False,False,False,False,False,False,False,False,False,True,False],[True,True,True,True,False,True,False,False,False,False,False,False,False],[False,False,True,False,True,False,False,True,False,True,True,False,True]],[[True,True,True,False,True,True,False,False,False,False,True,False,True],[False,False,True,False,True,False,False,False,False,True,False,True,False],[True,False,True,True,True,True,False,True,True,True,False,True,True],[False,False,True,False,True,True,True,False,True,False,False,True,False],[True,True,True,False,True,False,False,True,True,True,False,False,False],[True,True,False,True,True,False,True,False,True,False,True,False,False],[False,False,True,True,False,False,False,True,False,False,True,False,True],[True,True,True,True,False,False,False,False,True,True,True,False,True],[False,False,False,False,True,False,False,False,False,False,False,False,False],[False,False,True,False,True,False,True,False,True,True,True,False,False],[False,True,True,True,True,True,True,True,True,False,False,True,False],[False,True,False,False,True,False,True,True,False,False,True,False,True],[True,True,False,True,True,False,False,False,True,True,True,True,True],[False,True,True,True,False,True,True,False,True,False,True,False,True],[True,True,True,True,False,False,True,False,True,False,False,True,True]],[[False,True,False,True,False,True,False,True,False,False,False,True,True],[True,False,False,False,True,True,True,False,True,True,False,False,True],[True,False,True,True,True,True,False,False,False,False,True,True,True],[True,True,True,True,False,False,True,False,False,False,False,True,True],[True,False,True,True,True,True,True,True,False,True,False,False,True],[True,False,False,False,True,True,True,False,False,False,False,True,False],[True,False,False,False,True,True,True,False,False,False,True,False,True],[True,True,False,True,False,True,True,False,True,False,True,False,False],[False,False,True,True,True,False,True,True,False,False,True,True,True],[True,False,False,True,True,False,False,True,True,False,False,True,False],[True,True,False,False,False,False,False,True,True,True,True,True,True],[True,True,False,True,False,True,True,True,True,False,True,True,False],[False,False,False,True,False,False,True,False,False,True,False,False,False],[False,False,True,True,True,False,False,True,True,True,False,False,False],[True,True,True,True,True,True,True,True,True,True,True,False,False]],[[True,True,False,False,True,False,False,False,True,True,False,False,False],[False,True,False,False,True,False,True,False,True,False,True,False,False],[False,True,True,False,True,True,True,False,True,False,False,True,False],[False,False,True,False,False,True,True,False,True,False,False,True,False],[True,True,True,True,True,False,True,True,False,False,False,False,False],[True,False,True,False,True,True,False,False,True,False,True,False,False],[False,False,True,True,False,False,True,True,False,False,True,True,True],[False,True,True,False,False,False,False,True,False,True,False,False,True],[True,False,False,True,True,True,True,False,False,True,False,True,False],[False,False,False,True,True,False,True,True,False,True,True,False,False],[False,False,False,False,True,True,True,False,False,False,True,True,False],[True,False,False,True,False,True,True,False,False,False,False,True,True],[False,False,True,True,False,True,True,False,True,False,True,False,False],[True,False,True,False,False,True,False,True,False,True,False,True,True],[False,True,False,False,True,False,False,False,True,True,True,False,True]],[[False,True,True,True,True,False,True,True,True,False,False,True,True],[False,False,True,True,False,True,False,False,True,True,False,False,True],[False,True,False,False,False,True,True,True,False,True,False,True,False],[True,True,False,False,False,False,True,True,True,True,True,True,True],[False,True,True,False,False,True,True,True,False,False,False,True,True],[False,False,True,True,False,False,True,False,True,True,False,False,True],[True,True,False,True,False,False,False,True,True,False,True,False,True],[True,False,True,False,False,True,True,True,True,True,False,False,False],[True,True,False,True,False,False,False,False,True,False,True,True,True],[False,True,False,False,True,True,True,False,False,True,False,True,False],[True,False,False,True,False,True,False,True,False,True,True,False,True],[False,False,False,True,False,False,False,False,True,True,False,False,False],[False,True,False,True,True,True,True,False,False,False,True,False,True],[False,True,False,False,True,False,True,True,True,True,False,True,True],[True,True,True,True,True,True,False,True,False,True,False,False,True]]], dtype = "bool")#candidate|3131|(13, 15, 13)|const|bool
const_3132 = relay.const([[[False,True,False,True,True,False,True,True,True,True,False,False,False],[True,False,True,True,True,False,False,False,True,False,False,False,False],[False,False,False,True,False,False,False,True,True,True,True,False,True],[False,True,True,False,True,True,True,True,False,False,True,False,True],[True,False,True,True,True,True,False,True,True,False,False,True,True],[True,True,False,False,False,False,True,True,True,True,False,False,False],[False,False,True,True,True,False,True,True,False,False,False,False,False],[True,False,False,True,False,True,False,False,True,False,True,True,True],[False,False,False,False,False,False,False,True,True,False,False,True,True],[False,True,True,False,True,True,False,True,False,False,True,False,True],[False,False,False,True,True,False,True,True,False,True,False,False,True],[True,False,True,False,True,True,False,True,True,True,False,True,True],[False,False,False,False,True,False,False,True,False,True,True,True,True],[True,True,True,True,False,False,False,True,True,True,False,True,False],[True,False,False,False,True,False,False,True,False,True,False,False,False]],[[False,False,True,True,True,False,False,False,False,False,False,False,True],[True,True,True,False,False,False,True,False,True,False,True,True,False],[True,True,False,False,True,False,False,True,True,True,True,False,True],[True,False,True,True,False,True,True,True,True,True,False,False,True],[True,True,False,False,True,False,True,True,False,True,True,False,False],[False,True,True,False,False,True,True,True,False,True,False,True,False],[False,False,False,False,False,True,True,False,False,False,False,True,True],[False,False,False,False,False,True,True,False,True,True,True,False,True],[True,True,True,True,False,True,True,False,False,True,False,True,False],[False,False,False,True,True,True,False,False,True,False,True,True,False],[False,False,True,True,True,True,False,True,False,False,False,True,True],[False,True,True,False,True,True,False,True,False,True,False,False,True],[False,True,False,True,True,True,True,True,False,True,False,False,False],[False,True,False,True,False,True,False,True,True,True,False,True,True],[False,False,True,True,False,True,False,False,False,True,True,False,False]],[[True,True,False,False,True,False,True,True,False,True,False,False,False],[True,False,False,False,True,False,True,False,True,True,False,True,True],[False,True,True,False,True,False,True,False,False,False,False,True,False],[False,False,False,True,False,False,True,False,False,False,True,True,False],[False,False,False,False,False,True,True,True,True,False,True,True,False],[False,True,True,True,True,True,False,False,False,False,False,True,True],[False,True,False,False,False,False,False,False,False,False,True,True,True],[True,False,True,False,False,True,True,True,False,True,True,False,True],[True,True,True,True,False,True,False,False,True,False,False,False,True],[True,False,False,False,False,True,False,True,True,True,False,True,False],[False,False,True,True,True,True,False,False,False,False,True,False,False],[True,True,False,True,False,True,True,False,False,True,False,False,False],[True,True,False,False,False,True,False,True,False,True,False,False,True],[False,False,True,True,False,False,False,False,True,False,False,False,False],[False,False,False,False,False,False,False,True,False,False,False,True,True]],[[False,False,False,False,False,False,False,True,True,False,True,True,False],[False,True,False,False,False,False,False,False,True,True,False,True,False],[True,True,False,False,False,False,False,False,False,False,True,False,True],[False,False,False,False,False,False,True,True,True,True,True,True,False],[False,False,False,True,False,True,False,False,True,True,False,False,True],[False,False,False,False,False,True,False,False,True,True,True,False,False],[False,False,True,True,False,False,False,False,True,False,False,False,True],[True,True,True,True,False,False,False,True,False,False,False,True,False],[True,False,True,True,False,True,True,True,True,True,True,True,False],[True,True,False,True,False,True,False,False,True,False,False,True,True],[False,True,True,True,True,False,True,True,False,True,False,True,True],[True,True,False,False,True,True,False,True,False,False,False,False,False],[True,True,False,False,False,True,True,False,False,True,False,False,False],[False,True,False,False,False,False,True,True,False,False,False,False,True],[True,True,True,True,True,True,False,False,True,True,True,True,True]],[[True,False,True,True,False,False,True,False,False,True,False,True,False],[True,True,True,True,False,False,False,True,True,False,False,False,False],[False,True,True,True,False,False,True,True,False,True,True,True,True],[True,False,False,False,True,True,True,False,False,True,False,True,True],[True,True,True,True,True,True,False,False,False,False,False,True,False],[False,False,True,True,False,True,False,False,True,True,True,True,True],[True,False,True,False,True,False,True,True,False,False,False,False,False],[True,True,True,False,True,True,True,False,True,True,True,True,True],[True,False,False,False,True,True,False,False,False,False,False,True,True],[False,False,True,True,False,False,False,True,True,True,True,False,True],[False,True,True,True,False,False,True,False,False,False,True,False,False],[True,False,False,True,True,True,True,True,False,True,True,False,True],[False,True,False,False,False,False,True,True,True,True,True,False,True],[True,False,True,False,False,False,False,False,True,False,True,False,True],[True,False,False,True,True,True,False,True,True,True,True,True,False]],[[False,False,False,False,False,True,False,True,True,False,True,False,False],[True,False,False,True,True,True,True,True,True,False,False,True,True],[False,False,False,True,True,False,True,True,False,True,False,False,False],[False,False,False,False,True,True,False,True,False,True,False,False,False],[True,False,True,True,False,True,True,False,False,False,True,True,True],[True,True,False,False,True,False,False,True,False,True,False,False,False],[True,True,True,True,True,False,True,False,True,True,True,True,False],[True,True,True,True,True,False,False,True,False,True,True,True,True],[True,False,True,True,True,False,False,False,True,True,False,True,False],[False,False,True,True,False,True,False,True,False,True,False,False,False],[False,True,True,True,False,False,False,False,True,True,False,True,True],[False,True,True,True,True,True,True,False,False,False,True,True,True],[True,False,True,True,True,False,True,False,True,True,True,True,True],[False,False,False,False,True,False,True,True,True,False,False,False,False],[True,False,False,False,False,True,False,True,True,True,True,False,False]],[[True,True,True,False,True,True,True,True,True,False,True,False,True],[False,False,False,False,True,True,True,True,True,True,False,True,False],[True,True,False,True,True,True,True,False,True,False,True,False,True],[True,True,False,True,False,False,False,False,False,True,True,True,False],[False,False,False,False,True,False,True,True,True,False,False,False,False],[True,False,True,False,True,False,True,True,False,True,True,False,False],[False,True,True,True,True,False,False,True,False,True,True,True,False],[True,True,False,True,True,True,False,False,True,True,True,False,True],[True,False,False,True,False,False,False,True,False,True,True,False,False],[True,True,False,False,True,True,True,True,False,False,False,False,True],[False,False,False,False,True,True,False,True,False,False,False,False,False],[False,True,True,False,True,True,True,True,True,False,False,True,True],[True,True,True,True,False,True,True,False,False,False,True,False,False],[True,True,False,True,True,False,False,False,False,False,True,True,True],[True,True,False,False,False,True,True,True,False,False,True,False,False]],[[True,False,False,True,False,True,False,False,True,True,False,True,False],[False,True,True,True,True,False,False,True,False,False,False,False,False],[False,False,True,False,False,False,True,False,True,True,False,False,False],[True,True,False,False,True,True,False,True,False,True,True,True,False],[False,True,False,False,True,False,False,False,True,False,False,False,True],[False,True,True,False,True,False,True,False,False,True,True,False,False],[True,True,True,False,True,True,False,True,True,True,False,True,False],[True,False,False,True,True,False,False,False,False,False,False,False,False],[False,True,True,True,True,False,False,False,True,False,False,True,True],[True,False,True,True,False,False,True,True,True,False,True,False,False],[False,False,False,False,False,False,True,True,True,False,True,False,False],[False,False,False,True,True,False,False,True,True,False,True,False,True],[True,False,True,True,False,True,True,False,True,True,False,False,False],[False,False,True,False,False,False,False,True,True,True,True,True,False],[False,False,False,False,True,True,False,False,False,False,True,True,False]],[[False,False,False,False,False,False,False,True,False,True,True,False,False],[True,False,True,False,False,True,False,False,True,False,True,True,False],[True,True,False,False,True,False,False,True,True,False,False,True,False],[False,False,True,True,False,False,True,True,True,True,False,True,False],[True,True,True,False,False,True,True,False,True,False,False,False,False],[True,False,False,True,False,False,True,False,True,False,False,False,True],[True,False,False,True,False,True,False,True,False,False,False,True,False],[False,False,True,False,False,False,False,False,True,True,False,True,True],[False,True,True,False,False,True,False,False,False,False,False,False,False],[False,True,False,True,True,False,True,False,False,True,True,True,True],[False,False,False,True,True,False,False,False,False,True,True,True,True],[True,True,True,False,True,True,True,False,True,False,False,False,True],[True,False,False,False,True,False,False,True,False,True,True,False,True],[False,True,True,True,True,False,False,False,False,False,False,True,False],[True,False,False,True,True,True,True,True,True,True,True,True,False]],[[True,False,False,False,False,False,True,True,True,False,True,True,True],[False,True,True,True,True,False,True,False,True,False,True,True,True],[True,False,True,False,False,False,True,False,False,True,False,False,False],[True,False,True,True,True,True,False,False,True,False,False,False,False],[False,True,True,True,False,False,True,True,True,True,False,False,False],[False,True,False,False,True,False,True,False,True,False,False,True,True],[True,True,True,True,True,True,False,True,False,True,True,True,False],[False,True,False,False,True,True,True,True,True,False,True,False,True],[False,True,True,False,False,False,True,True,True,True,True,False,False],[True,True,True,True,True,False,False,False,False,True,True,False,False],[False,False,False,True,True,False,False,False,False,False,False,False,True],[False,True,False,False,True,False,True,False,True,False,False,True,False],[True,False,True,True,False,False,True,False,True,True,True,True,True],[True,True,False,True,False,False,False,True,False,True,True,True,False],[False,True,False,True,False,True,True,True,False,True,True,False,False]],[[False,True,True,True,False,False,False,False,False,True,False,False,False],[False,False,True,True,False,True,True,False,False,True,False,True,False],[False,False,False,False,False,False,True,True,False,False,False,False,False],[False,True,True,False,True,True,False,False,True,False,True,False,True],[True,True,True,False,True,True,True,True,False,True,False,True,True],[False,True,True,False,False,True,False,True,True,True,False,False,False],[True,False,True,True,True,True,False,False,True,False,False,False,True],[False,False,True,True,True,True,True,False,False,True,True,False,False],[False,True,False,False,True,False,True,True,True,False,False,False,True],[True,False,True,False,True,True,False,True,False,True,False,True,True],[False,False,False,False,False,False,False,True,True,True,True,False,False],[False,False,False,False,True,False,False,False,False,False,True,False,True],[False,True,True,True,False,False,False,False,False,False,False,False,True],[True,False,False,True,False,True,False,True,True,True,True,False,False],[True,False,True,True,True,True,False,False,True,False,False,True,False]],[[True,True,False,True,True,False,True,True,True,False,False,True,True],[False,True,False,False,True,True,False,False,False,True,False,False,True],[True,False,False,False,False,True,True,False,False,False,False,False,False],[False,False,False,True,True,False,False,True,False,True,False,False,False],[False,True,False,False,True,True,False,True,True,False,False,False,False],[False,True,True,False,True,True,False,True,False,True,False,True,False],[False,False,False,True,False,False,False,False,False,True,True,False,False],[False,False,False,True,True,True,False,False,True,True,True,False,False],[True,True,False,False,False,True,True,False,False,True,True,False,False],[True,False,True,False,False,False,False,True,True,True,False,True,True],[True,False,False,True,False,False,True,True,False,True,False,True,True],[False,True,False,False,True,False,False,False,False,True,False,False,False],[True,False,False,False,True,True,False,False,True,True,False,False,False],[False,True,False,False,False,False,True,True,False,False,True,True,False],[True,False,True,True,False,False,True,False,True,True,True,True,True]],[[False,False,True,False,False,True,True,False,True,False,False,False,True],[True,False,False,False,True,True,False,False,False,False,False,False,False],[True,True,True,True,False,False,True,True,False,False,False,False,False],[False,False,True,False,True,False,True,True,False,False,False,False,False],[False,False,False,False,False,False,True,True,True,True,True,False,False],[False,False,True,False,True,True,False,False,True,True,False,False,False],[False,False,False,False,False,False,False,True,True,False,True,False,True],[False,False,True,False,False,True,True,True,True,False,False,True,False],[False,False,False,False,False,False,True,False,False,True,False,False,False],[True,False,True,False,True,True,False,False,False,False,True,True,False],[False,True,False,True,True,False,True,True,True,True,True,False,True],[True,True,False,True,False,True,True,True,True,False,True,True,True],[True,False,False,False,False,True,True,False,False,False,True,False,True],[False,True,False,False,True,True,True,True,False,True,False,True,True],[False,True,False,True,False,True,True,True,True,True,False,False,False]]], dtype = "bool")#candidate|3132|(13, 15, 13)|const|bool
bop_3133 = relay.logical_and(const_3131.astype('bool'), relay.reshape(const_3132.astype('bool'), relay.shape_of(const_3131))) # shape=(13, 15, 13)
output = relay.Tuple([bop_3133,])
output2 = relay.Tuple([bop_3133,])
func_3136 = relay.Function([], output)
mod['func_3136'] = func_3136
mod = relay.transform.InferType()(mod)
mutated_mod['func_3136'] = func_3136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mutated_mod.get_global_var('func_3136')
call_3137 = func_3136_call()
output = call_3137
func_3138 = relay.Function([], output)
mutated_mod['func_3138'] = func_3138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3167 = relay.TupleGetItem(func_3136_call(), 0)
call_3168 = relay.TupleGetItem(func_3138_call(), 0)
var_3180 = relay.var("var_3180", dtype = "bool", shape = (13, 15, 13))#candidate|3180|(13, 15, 13)|var|bool
bop_3181 = relay.greater_equal(call_3167.astype('bool'), relay.reshape(var_3180.astype('bool'), relay.shape_of(call_3167))) # shape=(13, 15, 13)
bop_3184 = relay.greater_equal(call_3168.astype('bool'), relay.reshape(var_3180.astype('bool'), relay.shape_of(call_3168))) # shape=(13, 15, 13)
output = relay.Tuple([bop_3181,])
output2 = relay.Tuple([bop_3184,])
func_3188 = relay.Function([var_3180,], output)
mod['func_3188'] = func_3188
mod = relay.transform.InferType()(mod)
var_3189 = relay.var("var_3189", dtype = "bool", shape = (13, 15, 13))#candidate|3189|(13, 15, 13)|var|bool
output = func_3188(var_3189)
func_3190 = relay.Function([var_3189], output)
mutated_mod['func_3190'] = func_3190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3331 = relay.TupleGetItem(func_3136_call(), 0)
call_3332 = relay.TupleGetItem(func_3138_call(), 0)
output = relay.Tuple([call_3331,])
output2 = relay.Tuple([call_3332,])
func_3353 = relay.Function([], output)
mod['func_3353'] = func_3353
mod = relay.transform.InferType()(mod)
output = func_3353()
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3407 = relay.var("var_3407", dtype = "float32", shape = (6, 8, 7))#candidate|3407|(6, 8, 7)|var|float32
uop_3408 = relay.erf(var_3407.astype('float32')) # shape=(6, 8, 7)
func_2497_call = mod.get_global_var('func_2497')
func_2504_call = mutated_mod.get_global_var('func_2504')
const_3412 = relay.const([9,5,-2,4,7,-7,5,-3,10,-1,-1,-1,-4,-2,-8,2,8,7,-2,-8,-6,-7,-6,10,-2,-6,-7,-6,6,5,8,3,-5,-7,-1,5,9,-8,2,5,-10,7,-10,10,10,9,-1,3], dtype = "int64")#candidate|3412|(48,)|const|int64
const_3413 = relay.const([[7.418379,-0.353980],[1.949043,3.354166],[-2.435432,1.644651],[1.636227,-9.883225],[6.490422,0.150587],[-3.436184,5.457322],[-3.041609,-8.523344],[9.534571,7.418272],[9.109011,-8.056025],[4.908388,-4.884672],[-7.229081,-2.173817],[-4.103524,-2.407652],[9.259707,-5.772222],[-2.050530,0.753539],[5.444018,2.411156],[9.425357,7.514875],[-9.984032,-7.681180],[1.072644,-6.972853],[-2.978777,1.340284],[0.573540,-0.332631],[2.825954,-8.620203],[-7.347250,8.543847],[-9.662773,-4.862076],[3.271325,-0.089835],[-1.129735,-8.709512],[-2.882985,9.477922],[9.777210,1.481091],[6.467760,7.160649],[0.237393,-6.253901],[1.299579,6.473736],[3.844010,7.092943],[5.982433,-8.743351],[-1.192927,9.416361],[7.829077,7.762566],[-1.819860,7.953382],[1.553178,-3.291323],[5.193992,-2.187016],[-3.857736,-1.813561],[-9.258954,5.657142],[6.085929,1.993060],[-0.434525,-3.690446],[6.108890,-7.435961],[0.170785,0.153791],[-2.664734,3.054464],[8.042585,-9.173488],[4.447737,8.627784],[-2.121138,0.678919],[-5.570192,-2.749698],[2.038847,9.971045],[-5.436264,-0.590527],[0.829356,-6.320758],[-6.682526,8.391415],[-1.795426,6.919815],[-8.677675,5.656215],[4.399088,7.564268],[4.340335,-0.520122],[-0.138509,8.232498],[6.162055,-3.678201],[-3.094885,-8.740292],[-0.489401,-0.039099],[2.928001,-0.300950],[-0.294583,8.011934],[-3.590983,9.850478],[-7.715049,4.992302],[0.147024,7.284430],[-7.380293,-4.734995],[5.398949,0.466761],[-3.518572,-6.013605],[-3.028527,-7.727595],[-8.113068,-7.712375],[-7.754309,-3.999615],[-3.428302,1.047663],[-4.208353,-2.226813],[8.276354,9.927288],[-0.963247,-4.816800],[-9.439198,-5.751700],[-9.362506,6.550072],[-1.391044,4.468626],[-7.350223,6.830279],[0.581035,-5.843843],[-4.837786,4.003372],[3.073039,-3.647540],[5.601175,3.383840],[2.041129,-9.857998],[-4.479046,-4.725166],[-1.216142,4.785198],[1.914816,4.567472],[2.436475,-9.696086],[-6.199988,1.723295],[4.431626,7.371973],[7.079811,-0.248316],[2.313828,-9.399639],[6.718072,-7.617106],[-9.060081,-2.077143],[4.706237,2.925128],[3.057701,-8.717742],[0.990818,-7.050437],[9.250750,2.853845],[-0.124614,9.382102],[5.763903,1.653637],[-1.714226,-7.413818],[0.802967,-0.110163],[-9.844692,5.109097],[4.442811,0.180206],[-3.692606,2.151374],[-5.380463,-4.983477],[6.791487,-9.308258],[9.142248,8.576878],[0.850516,-6.151841],[-8.911951,1.238590],[-3.696122,-6.408299],[-3.449813,-0.025171],[9.669824,-0.546967],[0.058908,-2.996469],[-2.170108,2.699377],[-0.772700,6.489971],[-6.903417,-4.613450],[-3.894977,4.520049],[9.019554,8.643216],[5.626917,-2.538049],[8.659107,-0.364171],[5.279303,3.039843],[1.094446,6.882054],[0.947594,-4.294300],[-4.262280,-6.032193],[-3.090522,-2.235598],[-7.311516,-9.885955],[6.665452,-4.788989],[2.482938,9.635166],[-0.665257,7.802071],[5.222192,4.442660],[5.084685,-7.061425],[3.423544,2.164499],[-7.830253,3.086779],[7.796955,7.739562],[-8.943398,3.084554],[-3.404988,-5.989574],[-4.939955,7.316736],[-2.835427,-5.719716],[-7.464904,2.105054],[-5.520086,0.967963],[-1.700208,6.876786],[-3.952367,7.104547],[-2.443895,8.271274],[1.456109,8.758810],[8.879961,-1.041231],[-4.517551,4.128587],[3.167811,-2.842646],[8.645034,7.736645],[-6.629477,0.923263],[6.234889,1.730466],[-1.981446,-3.432733],[-0.956162,4.174159],[-6.506242,4.408283],[-6.830957,5.228544],[5.069336,0.713104],[-9.684623,0.544412],[0.974652,1.230551],[7.659920,8.622760],[1.912077,1.568307],[2.336984,3.175144],[-3.093529,-3.545340],[-8.262621,3.347690],[6.653049,-9.934866],[2.277760,-1.612018],[8.912725,8.695358],[-5.498200,-0.536565],[-7.310402,3.135384],[-7.025124,-2.007822],[0.827903,8.060456],[-4.177820,-1.100489],[-2.391679,8.549896],[-1.326990,-6.096958],[-5.398778,-2.197105],[-6.676984,-4.012695],[-7.001859,9.916106],[5.804161,-4.307795],[-3.562024,-5.319840],[-9.148452,1.652135],[7.611875,-9.081848],[-0.552776,3.107979],[-2.745096,-3.406715],[-0.940968,9.634492],[-7.175429,9.024175],[-5.588097,6.970074],[-2.643181,-8.984554],[-3.931533,7.580796],[-1.847839,6.874625],[-2.819070,8.273818],[-9.371827,-7.141552],[4.163513,3.199310],[-5.136814,0.949097],[-3.713477,9.039179],[-3.782941,5.333897],[7.134187,-5.797255],[-5.533880,9.435511],[2.044501,7.229846],[-2.402463,-7.222383],[-0.483239,8.722150],[0.812024,8.326215],[4.422964,-7.750573],[-4.801647,-2.722607],[-3.043586,-9.660091],[-6.965215,4.793913],[-5.236580,7.847310],[-0.079888,-2.456258],[-4.916296,6.108811],[-1.985770,9.266351],[-6.769726,9.271575],[-0.152927,-5.892474],[0.934594,6.910251],[-1.230836,5.961079],[-9.946183,6.403204],[-9.375604,8.013213],[-7.213028,-1.159519],[4.902628,-6.633516],[0.549595,2.125595],[-2.072520,-4.878258],[-3.109552,3.647942],[0.123179,7.709077],[-4.286654,-7.182199],[9.838762,9.516307],[4.226707,-1.281799],[4.446113,-8.970323],[4.671901,-4.714212],[8.721626,1.180960],[2.990267,3.996106],[4.074217,-1.350041],[1.678101,-5.618498],[-8.570499,-5.265133],[-2.962691,-7.881945],[-1.725994,-4.040086],[-2.887589,5.482357],[-4.437591,0.414571],[7.245195,-3.484790],[-9.502039,-4.508137],[6.879154,-1.151375],[-0.538822,0.011223],[2.769776,8.620706],[-0.868897,5.275577],[-5.344351,5.627331],[8.685827,-9.893531],[3.452260,7.875927],[3.090002,3.889251],[2.818415,-0.190380],[3.339234,-5.115023],[-1.644875,-9.159915],[2.563302,0.078646],[-4.118360,-0.092181],[-8.974706,-0.982009],[6.245739,8.325355],[-7.665836,-9.407515],[-3.782873,2.731141],[-0.485521,-5.916299],[4.649983,-3.111335],[6.867960,2.127557],[-6.778045,8.477476],[-0.277792,-2.796359],[-8.240255,4.748281],[-5.766054,-4.183235],[-9.056564,-5.586079],[3.130298,4.340727],[7.488198,7.163664],[-5.505808,-3.670640],[9.729983,0.501518],[-2.961513,2.426205],[5.874684,8.671330],[-9.745666,-3.408210],[3.440664,-7.568438],[9.240954,-1.256650],[6.708070,0.957994],[-6.344039,-3.623246],[-9.120630,0.324316],[2.220449,7.330412],[8.433521,-3.881582],[-6.808694,8.237049],[-1.992164,-3.982453],[1.803586,-0.752059],[-9.349393,-5.523435],[-5.959273,-9.924520],[-7.065423,7.692334],[7.116504,-3.621156],[5.558619,-1.951809],[5.969984,9.115534],[7.096522,-8.021303],[-5.911048,9.109491],[-7.258558,9.029870],[-7.499927,3.797553],[-7.180986,-0.130552],[1.621534,-6.919632],[-3.382711,-1.889994],[-0.541909,6.366217],[1.973943,3.870470],[-5.590722,2.589951],[-7.591303,5.193981],[-8.064397,-0.397506],[2.130780,-4.536815],[8.599830,5.787605],[-1.654235,-1.366095],[-1.753015,-4.114100],[1.749399,8.671749],[2.582552,-5.099509],[-6.359288,-6.523694],[9.702647,2.231886],[-2.350529,1.039951],[-4.763815,5.387158],[6.728707,-2.666915],[6.617986,0.318513],[-9.382800,-5.484466],[0.883388,9.284418],[7.406686,0.212100],[-2.980897,5.877189],[-7.006907,2.917180],[-4.703699,6.676845],[-3.447363,1.972499],[6.817553,-8.572143],[0.992124,5.316092],[1.706298,-6.563145],[-3.000247,6.988873],[-6.011127,9.178654],[-7.965809,-1.143031],[6.026223,-9.306897],[5.120838,2.523056],[-7.430118,-4.883804],[5.481018,5.125370],[-9.204119,3.849939],[7.632630,-4.557216],[1.827978,-8.620362],[-3.505894,-3.154712],[7.294252,1.733066],[-3.625831,2.811936],[-5.632749,7.001636],[4.052444,-9.710847],[-1.096948,-8.819086],[2.030984,-2.974597],[8.994265,-8.904471],[1.967157,0.810729],[2.716974,2.491030],[-4.107733,-1.852470],[-9.177871,-0.835674],[-2.219305,4.900878],[-7.426474,-0.804138],[-5.840037,-8.379067],[-8.635620,7.888306],[-4.708369,-3.639559],[0.879273,6.104775],[-3.558147,-3.985788],[4.325935,-4.924701],[-6.570500,4.342095],[0.242756,-4.605780],[-9.717237,0.085738],[8.294719,-7.486921],[-2.826957,6.890886],[-6.658504,5.283973],[-4.960590,5.987798],[-4.594163,-7.557106],[7.050965,0.448953],[8.819298,7.352025],[-8.796908,-2.718648],[0.102724,3.114799],[9.447527,-8.949292],[-4.247702,-7.271239],[1.410084,-1.098227],[2.396277,-5.207870],[-5.495316,-5.183266],[9.550400,1.795052],[-3.275515,1.468035],[-4.448439,9.285472],[1.674463,3.656680],[6.875434,8.279171],[9.427691,-2.612157],[-3.355499,-9.257763],[-7.050727,-2.770758],[-7.970598,-2.164002],[-5.961553,-8.853608],[-4.183653,-8.929940],[6.501860,3.196842],[-0.237491,-7.571415],[3.082064,-3.424405],[3.837291,-9.628745],[7.214855,-2.857624],[6.786868,3.454357],[-5.735836,-2.367555],[3.559874,3.861635],[0.926247,-0.254766],[4.090715,0.949358],[7.259731,-5.211886],[-0.391850,9.089159],[7.321547,8.775626],[-8.159625,-7.109759],[8.891324,6.280839],[-0.721418,6.271563],[-4.128378,9.376813],[-1.423860,-0.886127],[-5.397284,8.795854],[0.994975,6.447661],[-4.074587,2.582467],[9.630214,6.273303],[3.898591,1.511566],[8.759667,5.827818],[-4.905702,7.797956],[3.035554,4.439795],[-7.189878,6.557359],[5.461103,8.910949],[2.239090,-2.301208],[-9.215625,6.315782],[-5.799665,3.559211],[-3.411903,0.502941],[2.372353,0.122835],[-4.358591,7.651090],[1.982565,9.746558],[9.264296,-0.052758],[6.021946,6.931910],[4.914738,5.569793],[7.080523,7.526115],[8.718209,5.497202],[-2.386317,-5.927303],[7.357947,3.319780],[-7.769526,3.064298],[0.528283,-7.989570],[-5.051797,4.666199],[6.576688,8.185123],[2.972275,-0.086770],[-1.406517,-6.482870],[-8.280182,5.370192],[-1.266682,5.220328],[5.365733,-9.800940],[-1.412952,-8.516364],[-9.284076,-8.949461],[-0.672380,-5.684361],[1.097982,7.627648],[-1.192239,-4.541532],[-3.695289,-4.199372],[-0.133502,3.073942],[-0.609633,3.509872],[-8.412104,7.891778],[6.102016,-1.121010],[-5.346416,4.939260],[1.181256,7.693141],[-0.628045,1.781172],[6.792149,7.293510],[8.782975,-6.350225],[-1.540503,-3.770119],[4.094328,7.499058],[-9.504724,-1.712654],[4.010434,-3.154568],[-5.102161,-5.209550],[2.379393,8.063497],[-5.859071,-9.646153],[3.948130,5.419445],[-6.399148,4.244290],[-3.211786,-9.878756],[-5.857013,3.535550],[8.213643,9.994312],[4.508088,-9.574293],[6.539195,1.055291],[4.529285,0.027354],[-1.267542,-0.256409],[-0.133474,-8.401060],[5.424356,1.625529],[-7.211517,0.364896],[-9.920726,7.545412],[-4.434842,-1.541298],[-3.141182,2.567514],[-3.162233,-1.019590],[-5.008288,3.049054],[-1.058542,0.255218],[2.168617,-8.671595],[1.085799,2.836344],[-3.752447,0.382256],[-0.568970,-5.933135],[9.922667,-1.511380],[-3.503654,4.928529],[-6.475970,3.708449],[-1.231345,-5.003621],[-3.053284,1.267394],[-1.429123,7.034722],[-3.452420,8.093790],[8.308413,2.278946],[-8.957887,-7.995475],[-0.050061,3.451072],[-3.588048,-3.472196],[1.509565,-5.294574],[8.889622,1.584473],[-5.124735,-7.996276],[5.645102,-0.924199],[2.189131,4.813726],[5.001520,-5.017625],[8.039562,-7.648907],[-8.409499,7.416088],[0.284300,8.695750],[1.647886,-1.785365],[-4.708573,-2.448276],[7.935768,-1.756048],[-5.612305,-0.614072],[8.373245,-3.800377],[-9.080794,-2.307760],[4.679998,-7.118229],[-6.452063,4.945474],[-2.678480,2.039625],[-4.122674,-1.455058],[-0.613197,-5.330428],[-1.998461,9.030270],[7.056749,4.776777],[-2.234777,-6.866050],[3.345689,6.530708],[6.718627,6.136267],[-8.337213,-9.047469],[9.734640,-6.866994],[2.091012,-2.754339],[8.793551,3.850693],[7.702798,-3.430304],[-7.025261,7.721682],[0.825875,6.086972],[1.799193,-6.827716],[-9.482628,-9.721015],[1.116869,1.034787],[9.339908,7.186330],[9.462106,4.946396],[4.396776,0.528930],[1.228831,0.741845],[4.063864,2.862983],[2.893658,-7.234506],[-8.781804,2.076948],[-6.612163,-0.874496],[4.416296,-0.776013],[-1.229099,3.950657],[-2.010711,3.543042],[-2.367389,-0.655889],[-6.360734,-1.776744],[-4.375013,5.251114],[-1.511562,-4.480357],[6.657173,-4.864348],[-7.704834,-7.147566],[0.802364,-1.383141],[-1.259259,7.984340],[-4.184146,-0.747500],[6.450364,7.455902],[2.070527,-3.270579],[5.297403,-5.063974],[0.528985,1.894898],[-8.889367,-2.351986],[-9.741372,8.757282],[-5.615211,8.541913],[-3.857149,2.475667],[-0.199744,6.178494],[4.331708,2.042673],[3.730276,-9.140687],[9.136498,-7.636347],[0.524194,8.409088],[-6.215875,-1.252647],[1.379923,2.599059],[2.496307,2.133024],[1.974218,1.546028],[-8.187213,-3.450704],[5.032957,-1.554916],[-3.188469,-2.100124],[6.000450,4.971659],[-0.224249,-4.006900],[6.191753,5.881612],[7.691947,6.645121],[-7.611798,5.227263],[4.976682,-2.873734],[-1.514330,1.236976],[0.337365,-0.222277],[5.409699,-1.171908],[8.270385,7.507003],[9.407611,8.054894],[4.479241,3.030802],[-2.184068,-2.306739],[-1.516354,-2.280420],[8.214036,-5.772270],[8.622560,8.474599],[-7.332345,-8.835162],[0.184272,7.268910],[-4.501687,9.393992],[9.485170,9.653546],[6.313317,7.442074],[-5.513356,3.240747],[-8.311262,2.838919],[-1.464402,-9.406414],[-9.085010,3.460729],[0.308795,-4.795206],[0.590759,4.084676],[9.836417,-6.571688],[1.347778,-1.503296],[2.859718,5.263269],[0.540966,0.192766],[-2.917166,5.238455],[-0.970762,-5.818541],[3.783861,-0.696440],[-6.070271,1.594014],[-6.178854,-8.091392],[9.870326,-3.401669],[-6.397766,-1.347672],[-1.397787,-7.087550],[-6.202266,1.434472],[-7.653233,-8.741398],[9.143675,-9.286234],[-1.327682,8.643987],[-0.906207,-4.859572],[-7.738886,-8.216129],[5.791064,6.663648],[6.363776,-0.136729],[9.688540,-2.017046],[4.886623,5.263656],[5.987375,-6.623560],[8.127442,1.772046],[0.741967,7.826098],[-8.681941,3.242887],[7.875524,4.240951],[-6.976382,-1.423715],[0.162694,1.303626],[5.666401,3.796182],[-0.580146,-5.372636],[3.017801,3.456271],[-2.567918,5.038546],[7.399526,-6.418454],[2.639216,1.704067],[4.953162,2.990708],[-9.344763,4.687319],[2.239494,4.134880],[-6.461795,1.355749],[6.983734,-2.348312],[5.797178,-6.488957],[-0.681384,8.550933],[-3.623827,1.622196],[-2.379467,-0.903169],[2.085617,-4.842208],[0.214230,5.787549],[-9.513357,7.928623],[6.440151,1.605943],[5.113798,7.957950],[-3.887415,3.229502],[6.772256,-4.913673],[3.542248,7.939771],[-0.639696,8.299193],[4.369290,7.021553],[2.621397,7.988523],[-7.744192,-7.751203],[-7.658324,-0.012799],[-4.868350,6.110664],[-3.058682,-6.911856],[-2.338306,0.342611],[8.910523,-9.766414],[0.410367,-1.031114],[5.298901,2.978160],[-2.077259,5.800093],[-3.324650,9.117494],[-6.590177,-1.022799],[-7.918086,-1.969294],[-2.174087,9.155423],[1.044050,-7.630675],[9.397771,4.710610],[-4.282615,3.308954],[-9.447988,4.261514],[-8.154179,-9.692610],[0.896007,2.969663],[7.850001,4.953313],[9.645654,4.329240],[-4.684634,3.543135],[7.747443,-3.564531],[-5.108237,-4.188378],[7.011217,8.904573],[8.788389,-1.584627],[-3.903460,-2.536065],[1.947414,-1.820221],[1.738501,2.503059],[4.587740,8.802307],[-6.184762,7.567599],[8.900527,0.595462],[2.482152,-5.340601],[-0.705473,-8.765860],[4.361552,-5.133982],[-8.140204,0.930605],[3.769506,8.109436],[-1.053698,7.934342],[8.987134,8.603680],[-8.566660,2.635644],[2.806558,-0.143956],[-4.848398,-9.140866],[-5.552041,-4.849887],[3.991837,-4.637859],[5.777600,-5.692919],[-4.829446,-5.004282],[-1.040536,6.079763],[-0.832595,-6.925938],[-0.718673,-1.874614],[3.055895,-2.255630],[6.900101,-0.671687],[7.679618,1.563120],[8.139484,-6.983103],[2.856168,1.327763],[-3.323479,1.577071],[1.774947,-3.810191],[-2.158690,-7.750287],[5.720468,3.654667],[4.224154,-5.101865],[-7.048424,1.280433],[4.054048,-2.535456],[-8.317148,-6.164150],[-4.551779,-1.960083],[9.978430,4.530891],[9.566163,-6.241657],[7.829645,4.544955],[0.568124,0.797969],[-9.981393,1.248341],[-7.763171,-3.612265],[0.176012,9.739383],[-2.014533,8.524479],[-9.630185,-7.975158],[-6.907132,-7.267466],[-0.357880,9.157145],[2.834533,-6.414810],[8.430157,6.148950],[7.382595,6.832013],[-5.742404,-0.836165],[-8.765395,5.398208],[-9.444144,-2.552751],[-2.741560,-7.510691],[-6.946026,-4.060585],[-6.054474,0.672374],[4.109781,7.703140],[6.689189,8.046797],[4.047634,-2.705261],[-8.067328,-2.470198],[0.987570,6.977917],[-9.791720,6.833721],[3.142322,-9.944382],[-5.586016,-5.178246],[0.960241,-3.450252],[-4.935888,-9.197968],[4.378520,2.794512],[-4.172570,-6.484658],[-8.457754,5.354698],[-5.601113,0.074966],[5.203572,2.619376],[-8.302905,6.104029],[-0.538569,-4.952056],[8.086855,-2.715162],[0.810326,-8.741898],[-2.379788,-8.571936],[1.490906,9.388491],[-6.948342,0.605736],[-3.801128,4.270775],[-5.790371,-4.475862],[-5.718159,5.054210],[-7.835978,-2.451134],[9.008411,6.234339],[1.682813,-5.840538],[-1.043591,-1.253511],[6.719902,-8.828386],[5.179167,-3.817449],[-6.479948,-6.342002],[7.664228,-7.187054],[4.468878,7.917196],[-7.919094,-2.009692],[-5.923346,-2.131392],[-0.453572,9.314360],[-2.042070,-0.317088],[7.602127,-1.525306],[9.499330,-8.754471],[-0.279483,-0.879346],[7.251908,6.115431],[4.163800,-9.649698],[-3.195757,-5.018779],[5.736581,-9.841988],[0.827879,1.971707],[0.743565,-2.898052],[-0.936173,7.950426],[1.594019,3.262616],[-2.651361,-3.986335],[-9.652078,3.317065],[0.033524,-4.472837],[-9.965408,0.130646],[9.027795,-2.589054],[-9.741233,9.573355],[-7.570782,4.122798],[6.452160,-7.078516],[7.916543,6.456266],[0.689414,3.001296],[-1.021289,-1.738711],[-7.016993,-6.846012],[-7.524426,0.393506],[3.027899,-9.451182],[6.640262,5.164298],[-7.138554,-6.583276],[7.768955,2.516316],[4.822680,3.115600],[-5.333118,-7.806161],[4.791002,-1.463321],[2.030370,-2.790315],[6.295967,-3.681332],[2.296857,0.030488],[-0.640307,3.856283],[4.348568,-5.259346],[3.754020,-4.690415],[7.712029,1.216738],[9.078462,5.371445],[3.336261,8.945337],[-2.175267,6.534790],[5.766831,9.470434],[0.283262,8.929103],[5.571396,0.471161],[-7.133215,0.413653],[-7.984948,-1.142635],[-7.052926,-3.813738],[-1.666849,-0.559349],[-0.674673,-4.296608],[-3.233841,0.074461],[-2.899159,-5.587813],[-0.317881,5.244373],[0.202414,6.717994],[6.064841,1.260734],[5.062838,6.121985],[9.124336,-1.734659],[1.723338,-5.259199],[-9.330636,9.352422],[-7.615556,-9.567829],[9.607542,8.092650],[-2.646029,-9.740620],[8.730824,-7.405624],[-4.836800,-4.070846],[9.741175,6.566609],[1.131648,3.106240],[1.333214,-1.846609],[-8.516452,-9.046787],[-8.673682,2.625698],[-8.027307,-4.931592],[3.988722,-6.568318],[-5.157713,-9.671394],[2.216210,5.675500],[2.803749,-1.687560],[5.138001,-8.614971],[-1.040287,-8.981322],[0.944877,1.464931],[3.963554,8.243126],[-5.137566,-7.866666],[-8.882151,3.289689],[-1.304313,-7.519292]], dtype = "float64")#candidate|3413|(840, 2)|const|float64
const_3414 = relay.const([[-6,-9,-7,5,-6,-3,4,4,10,-9,2,2,-2,7,-2,4],[-3,-5,7,-10,-2,7,10,7,-5,-7,-4,-5,7,-6,8,8],[-4,2,4,4,6,-3,-7,8,-7,-1,3,9,9,-10,-7,6],[1,5,-9,1,-4,-4,7,3,5,6,1,10,3,6,-6,3],[10,3,9,-7,-2,-4,-2,-4,-10,-7,-8,-2,6,-2,8,-2],[-3,10,-10,-7,-9,-3,7,-8,-8,9,-1,-6,6,-1,-3,-5],[-7,10,-5,2,-5,2,2,8,-6,-3,-7,4,-9,10,-6,-8],[-1,2,3,-9,-9,-2,-3,-1,7,-6,7,10,4,5,4,-5],[-2,-2,-3,5,1,4,-8,-5,-1,1,-2,1,8,10,-9,-8],[3,6,-10,7,6,9,8,-9,6,6,-1,-6,3,3,-10,-3],[-3,-9,9,8,9,1,1,6,-10,-7,-9,1,8,6,-7,1],[7,4,-7,-3,-8,-6,4,8,6,6,8,-9,-1,4,-3,9],[6,6,-4,2,3,4,-3,3,8,7,7,2,-1,8,-3,4],[8,3,-8,7,6,-1,4,10,-3,9,5,10,10,-9,-4,-4],[-2,-6,5,-4,-5,-10,8,2,-7,3,-4,7,2,-1,-1,-9],[-2,-7,-2,-8,5,7,-9,7,2,9,3,-4,-4,-3,9,-9],[-9,-10,7,-8,-7,6,-6,4,-2,-7,-1,-2,-3,-9,7,3],[-6,8,10,-6,3,-3,-4,8,-1,3,-6,-6,-9,3,-5,-3],[9,4,7,8,-1,-10,9,-3,5,-10,-2,-9,-3,7,1,9],[-9,-1,3,8,-2,1,8,-2,1,-1,-10,3,5,1,10,-5],[-5,9,6,1,6,9,-5,5,5,-10,10,-8,3,-10,1,6],[-4,3,-10,9,-6,8,-1,1,10,-3,-5,5,2,3,-5,-1],[-3,10,-1,-9,-9,-2,1,10,-5,2,-4,7,4,-9,-10,7],[-5,7,8,-2,-5,9,8,-9,-10,2,-10,10,-1,-3,1,6],[-9,-1,3,3,-10,5,-2,10,5,-6,10,-9,6,6,3,3],[-7,8,10,7,4,9,-6,7,-2,4,-10,-5,-6,4,-2,-3],[3,-8,-3,-4,-9,-10,-3,-6,-10,9,5,8,4,1,1,7],[-5,9,-4,-2,8,-7,1,-8,-4,-2,-10,10,-2,-3,7,9],[7,-10,10,3,6,-1,-1,-7,-5,-4,9,10,-7,4,-3,3],[-10,-2,-5,-8,-2,7,5,8,2,4,8,-3,-9,6,-2,3],[-4,-2,-7,-1,7,-2,-3,-4,-6,8,-4,-6,10,4,-3,-3],[9,7,6,-5,-7,5,1,6,-10,1,5,-7,-1,8,8,-2],[-9,-5,8,-5,-10,6,-2,9,7,5,7,-9,-5,-4,-8,-1],[7,9,-7,2,-7,-7,1,10,-7,-9,7,3,-3,-6,-3,-10],[-3,6,3,5,6,-10,9,-4,5,3,1,5,-4,7,-7,8],[3,-10,-3,10,-9,8,-8,-6,-8,-6,-4,-3,9,-6,4,-6],[9,5,1,3,6,9,6,9,-4,-2,-4,-9,-2,9,8,-5],[3,8,5,-5,-5,-7,10,6,10,4,-3,-7,7,-3,3,-1],[7,-10,3,5,10,8,9,5,1,1,4,1,8,-8,1,9],[9,2,5,-9,-1,-6,-10,-8,-4,-7,1,-4,1,9,-1,9],[6,-3,1,9,-8,4,9,3,3,4,7,10,-9,-9,5,-10],[9,5,5,4,8,5,10,-1,-7,6,4,-9,4,1,6,-2],[5,5,-3,5,-6,9,8,6,8,9,-9,4,8,5,-9,9],[6,5,-4,1,1,-4,3,-6,4,-2,4,6,-3,4,-10,7],[-8,5,3,1,-9,6,-7,-2,8,5,2,-3,-4,9,1,-2],[-8,-2,5,8,-8,-4,7,-5,-2,6,-2,10,-6,-10,5,-6],[8,-6,1,7,-8,-2,10,1,-8,5,4,7,-4,-6,10,-4],[2,-3,3,10,-2,-8,2,4,6,3,7,-9,9,-2,1,-5],[-5,4,8,-1,10,3,-1,-3,6,-7,6,-4,5,-1,-1,7],[-7,-5,-7,-7,8,-9,7,-7,10,4,2,-10,-5,1,-1,3],[1,5,6,5,2,-4,7,-1,-5,-2,6,-4,-5,8,-3,-4],[-1,-2,-2,1,-4,4,6,8,-2,-8,2,-1,7,1,-10,-4],[-5,-8,-7,1,-3,3,-2,-1,-1,5,3,10,-3,9,7,4],[4,-9,10,2,-8,-5,6,-5,6,-10,-7,-6,3,-6,1,-4],[-2,5,6,-7,2,3,7,7,-1,2,-9,-8,6,-5,-4,1],[2,9,-3,10,-8,7,4,-9,-3,1,-1,-6,-5,-5,8,6],[-2,-9,3,2,4,-7,3,3,8,10,7,8,7,-10,9,-8],[-2,6,6,-5,9,-1,7,-10,10,-2,-8,-8,4,-3,-3,-2],[7,8,-9,-6,-4,-1,-2,6,1,-10,10,5,5,5,-8,-1],[-8,-8,4,3,10,-1,-3,6,-4,-4,-4,6,-6,5,1,-6],[-9,-4,-10,-2,-1,3,-7,1,-5,6,1,-7,5,10,2,-5],[-2,-1,-7,3,4,-3,6,4,8,-1,2,-7,-3,-2,-5,-3],[7,-9,9,-2,7,5,1,5,7,-10,7,7,4,-5,8,6],[-2,-8,5,3,7,-7,7,-8,1,5,-3,8,-4,6,10,5],[-5,2,-3,5,-5,6,4,8,2,-3,-8,2,-3,3,-10,-5],[9,6,4,-2,4,1,-4,5,-4,2,-1,-5,-5,-10,-5,2],[2,-10,9,-5,1,-3,7,-2,-8,5,1,6,8,-10,10,-1],[-10,-3,2,-2,-4,-2,4,-3,10,-2,10,6,-5,-3,8,1],[4,7,-10,10,5,-6,-6,1,-9,-7,-2,-4,-9,2,-10,3],[5,-9,8,-2,9,-4,-8,-1,8,3,10,7,-6,-5,3,2],[8,6,9,3,-5,3,9,-10,1,-9,3,-10,-8,-7,5,-1],[-1,2,-3,9,9,-1,7,7,5,1,-3,-8,6,-2,-7,5],[-9,9,10,-2,-10,-7,-6,-7,2,10,-8,6,6,-4,-2,2],[-4,5,-8,2,10,7,6,7,-3,-3,5,-5,-9,5,-10,3],[9,9,-5,-7,2,2,-9,6,-6,-3,8,4,-10,7,8,-5],[9,4,9,-8,-5,-9,-9,-6,-3,6,8,-9,8,10,7,1],[-1,10,6,1,8,8,6,-10,5,-2,-7,3,8,-1,9,3],[-9,-10,-10,-8,2,6,4,-8,-4,-3,-3,6,2,-10,-9,2],[7,3,-2,8,1,-1,1,-3,10,-6,4,6,-9,-8,-9,-6],[-2,-6,2,-8,7,7,9,-5,-5,1,4,5,2,-2,4,9],[-7,-10,-8,-3,8,-7,9,3,2,1,-1,-1,-10,6,-1,9],[2,8,-8,7,10,-2,-5,-10,10,4,10,6,8,-5,9,-6],[3,-10,-4,8,2,-4,-4,-5,10,8,7,-1,8,-6,9,-7],[-6,5,8,8,3,9,8,4,7,7,5,-1,-3,-9,8,7],[5,-8,5,-2,-7,6,5,3,-3,8,-8,3,5,-8,-8,-9],[-8,5,-10,-4,8,-4,1,6,8,3,10,-1,-6,10,-3,8],[-5,-9,-9,-3,2,-9,3,-8,-9,8,5,-6,6,6,4,-5],[8,-3,-4,4,-4,-10,10,7,-6,-9,-4,-3,-1,-2,-4,4],[-10,9,-3,-9,-9,3,6,9,7,-5,2,-3,-9,-8,1,-5],[8,4,-8,-8,3,-6,-5,3,4,-5,7,9,-3,9,10,-7],[-9,-10,6,-3,3,-10,-8,-10,-4,-9,1,9,7,-9,3,5],[-7,-8,-7,5,-4,-6,-9,-3,9,6,-9,5,-4,-5,10,-6],[9,1,-6,-3,1,-1,8,-7,-5,9,7,-2,-8,-7,-8,-5],[-6,-2,3,3,9,-8,7,3,8,5,-4,8,7,10,8,-4],[-2,-7,4,-10,-3,9,4,9,2,7,5,9,1,-7,5,-3],[10,1,-9,6,-1,-9,4,5,6,-5,-7,2,4,-7,3,-5],[10,-6,8,1,8,4,-2,10,-3,8,9,-10,-3,1,4,10],[3,3,9,-1,-5,-9,-6,-4,5,-8,4,-9,-4,-5,-6,4],[-1,1,2,7,8,6,-6,-2,-4,5,-8,-5,5,-3,-4,-2],[-6,5,6,-7,9,-8,-6,5,-1,-6,-7,3,2,6,-5,-9],[3,10,7,6,3,-10,-6,-8,7,10,-8,9,1,4,-4,-8],[8,-8,7,8,2,2,-2,9,-6,-5,-3,2,10,1,-10,2],[-9,10,8,10,7,8,-10,-1,5,1,-2,2,-9,-7,2,-5],[-4,8,7,10,10,5,6,-8,-6,8,10,-2,-3,-5,10,7],[-9,6,3,-1,-5,-2,-4,3,-7,-8,9,7,-10,-8,-4,-4],[9,10,7,4,-8,4,-9,2,6,-5,1,-8,4,-3,10,-3],[7,-3,-5,-6,-3,4,5,-10,-7,7,-6,-9,2,1,9,-3],[7,3,-2,4,-9,-9,-4,9,-3,9,3,4,-10,-9,8,7],[9,9,1,7,2,6,7,7,-2,-1,-4,2,9,5,7,-5],[4,-6,-9,-4,-10,-7,6,9,10,-4,-5,8,-10,-3,5,-3],[-4,-3,-5,4,-9,-2,-4,-6,-1,9,-9,-1,-10,-7,-4,5],[9,-3,-6,10,9,-2,-5,7,9,5,3,-6,-2,-9,3,-6],[-3,-7,-5,6,-2,-7,7,4,-2,-3,-7,-9,3,-5,3,9],[8,4,-6,7,1,7,-2,5,2,-10,-10,-5,-6,-9,2,4],[7,-3,-10,-1,8,10,-10,3,-4,10,1,-5,8,7,-4,-9],[-3,-6,-7,-6,6,5,1,-10,1,9,7,-3,9,-6,5,6],[10,-2,10,1,4,-1,-6,-1,1,10,-5,-5,-5,1,-6,7],[-10,2,7,-3,-1,-9,5,3,2,-4,-8,-3,-9,4,-1,1],[10,-9,-9,1,9,9,9,-8,7,10,-10,-10,-7,-4,5,-2],[-9,3,5,1,1,-6,2,-5,-7,-6,-10,-5,9,7,-5,9],[10,-3,4,-9,-6,9,-10,-8,-1,-5,9,8,-1,1,2,9],[2,8,-8,2,3,-3,-8,-1,5,8,8,-3,-10,3,4,5],[8,1,2,9,7,-8,2,1,-7,-1,-4,-4,-9,-8,10,9],[9,-5,5,4,-5,4,4,-5,6,-8,10,-7,-10,2,-8,-10],[-2,8,9,9,6,3,1,-3,-6,7,2,7,-7,-3,-1,-2],[6,-10,1,10,3,9,3,-10,2,5,9,5,-10,-3,-1,-5],[6,-3,5,6,7,3,-5,7,10,3,-3,-7,7,5,6,5],[5,9,-1,1,8,6,-9,-3,6,-2,4,-5,1,1,9,-9],[5,-8,3,-4,3,8,-4,5,-9,-8,-6,6,-2,5,4,-10],[2,-7,5,-7,1,4,-8,-5,6,2,8,-7,6,6,6,10],[1,-4,-9,7,-8,-7,-10,5,-8,7,-4,8,8,9,7,-3],[-7,7,8,7,-6,4,7,-1,-6,-10,-3,-10,2,5,9,10]], dtype = "int64")#candidate|3414|(132, 16)|const|int64
call_3411 = relay.TupleGetItem(func_2497_call(relay.reshape(const_3412.astype('int64'), [2, 4, 6]), relay.reshape(const_3412.astype('int64'), [2, 4, 6]), relay.reshape(const_3413.astype('float64'), [1680,]), relay.reshape(const_3414.astype('int64'), [2112,]), relay.reshape(const_3413.astype('float64'), [1680,]), ), 0)
call_3415 = relay.TupleGetItem(func_2504_call(relay.reshape(const_3412.astype('int64'), [2, 4, 6]), relay.reshape(const_3412.astype('int64'), [2, 4, 6]), relay.reshape(const_3413.astype('float64'), [1680,]), relay.reshape(const_3414.astype('int64'), [2112,]), relay.reshape(const_3413.astype('float64'), [1680,]), ), 0)
output = relay.Tuple([uop_3408,call_3411,const_3412,const_3413,const_3414,])
output2 = relay.Tuple([uop_3408,call_3415,const_3412,const_3413,const_3414,])
func_3434 = relay.Function([var_3407,], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
var_3435 = relay.var("var_3435", dtype = "float32", shape = (6, 8, 7))#candidate|3435|(6, 8, 7)|var|float32
output = func_3434(var_3435)
func_3436 = relay.Function([var_3435], output)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3482 = relay.TupleGetItem(func_3136_call(), 0)
call_3483 = relay.TupleGetItem(func_3138_call(), 0)
uop_3490 = relay.sin(call_3482.astype('float32')) # shape=(13, 15, 13)
uop_3492 = relay.sin(call_3483.astype('float32')) # shape=(13, 15, 13)
var_3498 = relay.var("var_3498", dtype = "float32", shape = (13, 15, 13))#candidate|3498|(13, 15, 13)|var|float32
bop_3499 = relay.bitwise_or(uop_3490.astype('int32'), relay.reshape(var_3498.astype('int32'), relay.shape_of(uop_3490))) # shape=(13, 15, 13)
bop_3502 = relay.bitwise_or(uop_3492.astype('int32'), relay.reshape(var_3498.astype('int32'), relay.shape_of(uop_3492))) # shape=(13, 15, 13)
func_1880_call = mod.get_global_var('func_1880')
func_1882_call = mutated_mod.get_global_var('func_1882')
const_3507 = relay.const([-1.576222,-2.412105,-2.454657,-4.038338,1.951150,-1.105191,-7.390870,-2.249083,-5.955858,-4.067434,-4.209596,-9.716024,-9.707377,-5.728572,-5.181815,3.032640,-1.937158,-1.280197,4.858088,-4.508708,-4.072168,8.494227,1.555282,-7.167083,-8.540492,3.804564,4.929402,7.752996,-1.437002,-2.357724,7.544813,2.307581,1.364983,9.795622,-5.373741,-4.129899,-5.621462,8.041662,6.110814,6.570276,-5.698533,4.910265,-2.356404,7.652473,-3.231975,0.612291,-2.603237,-3.118406,4.965627,-0.062791,4.256586,-6.483010,-7.731591,9.329775,0.094572,1.229313,2.941477,-1.708706,1.443729,-6.572169,8.652182,-7.719860,-9.652829,7.101168,-9.776779,3.640498,-5.852478,7.665327,2.429311,7.510164,-4.001710,-5.433520,1.905969,8.046870,3.298572,-0.798353,-6.367518,-7.341359,7.021849,-5.530252,6.452223,9.904349,5.016728,-9.726657,8.258023,-3.582234,-4.991589,5.384199,9.415727,-1.973178,-6.794734,5.198050,6.640521,1.008194,1.198030,-4.910132,1.680952,7.943511,6.313992,8.962705,0.175590,-0.419325,4.199135,1.057956,-5.018220,3.318028,-8.005116,0.440350,-9.399341,8.274920,-9.309494,-2.323111,5.536511,7.225480,9.167905,-5.364653,-0.786645,-3.723479,-2.953463,-3.170225,5.182196,-2.214886,-7.476196,-5.966499,-9.412166,-7.500699,1.986508,0.302815,-9.350441,3.131526,3.651600,-3.136624,-8.330146,1.728576,-3.770356,-4.335063,6.187025,-4.652342,-5.261311,-2.172121,-7.081398,-0.221777,9.471951,-2.040713,-1.632181,7.767312,6.177908,4.218519,-4.300235,5.938470,-3.686022,5.069905,-1.913339,9.811353,-8.342051,3.560192,-4.449675,-0.425484,9.809735,-4.306915,8.212777,-9.480825,4.927486,-4.375265,-8.608196,3.948520,4.913561,2.956733,-9.481027,0.366562,-5.872201,4.655613,-6.784421,0.331597,-7.915131,9.837581,2.472894,1.393557,6.256319,8.393853,7.994896,-1.692286,3.198360,-5.368355,-2.208392,-8.427894,-3.283196,6.920361,2.030083,3.424322,-0.701296,4.303156,-0.728621,0.348610,1.612402,9.720508,6.027490,3.388965,9.166419,-7.082867,9.027298,8.629216,-9.099810,-5.507645,8.502850,5.106876,-4.108099,0.297769,0.907158,-3.889223,4.338920,5.657158,4.536113,0.912957,-2.188540,-9.001995,-6.933360,-8.754765,0.115596,2.364627,-1.680916,-4.230687,3.704272,1.554061,-9.042949,5.372863,6.047551,-6.893923,-8.353747,-5.316747,3.370246,-8.208655,-2.477645,-8.812979,-4.661276,-3.951709,8.645092,7.122787,-0.891225,2.392149], dtype = "float32")#candidate|3507|(240,)|const|float32
call_3506 = func_1880_call(relay.reshape(const_3507.astype('float32'), [3, 16, 5]))
call_3508 = func_1880_call(relay.reshape(const_3507.astype('float32'), [3, 16, 5]))
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
var_3510 = relay.var("var_3510", dtype = "float64", shape = (1183,))#candidate|3510|(1183,)|var|float64
call_3509 = func_2853_call(relay.reshape(var_3510.astype('float64'), [7, 13, 13]))
call_3511 = func_2853_call(relay.reshape(var_3510.astype('float64'), [7, 13, 13]))
uop_3513 = relay.atan(uop_3490.astype('float32')) # shape=(13, 15, 13)
uop_3515 = relay.atan(uop_3492.astype('float32')) # shape=(13, 15, 13)
output = relay.Tuple([bop_3499,call_3506,const_3507,call_3509,var_3510,uop_3513,])
output2 = relay.Tuple([bop_3502,call_3508,const_3507,call_3511,var_3510,uop_3515,])
func_3520 = relay.Function([var_3498,var_3510,], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3520_call = mutated_mod.get_global_var('func_3520')
var_3522 = relay.var("var_3522", dtype = "float32", shape = (13, 15, 13))#candidate|3522|(13, 15, 13)|var|float32
var_3523 = relay.var("var_3523", dtype = "float64", shape = (1183,))#candidate|3523|(1183,)|var|float64
call_3521 = func_3520_call(var_3522,var_3523,)
output = call_3521
func_3524 = relay.Function([var_3522,var_3523,], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3535 = relay.var("var_3535", dtype = "float32", shape = (7, 6, 14))#candidate|3535|(7, 6, 14)|var|float32
uop_3536 = relay.sigmoid(var_3535.astype('float32')) # shape=(7, 6, 14)
func_2682_call = mod.get_global_var('func_2682')
func_2684_call = mutated_mod.get_global_var('func_2684')
var_3542 = relay.var("var_3542", dtype = "float32", shape = (288,))#candidate|3542|(288,)|var|float32
call_3541 = relay.TupleGetItem(func_2682_call(relay.reshape(var_3542.astype('float32'), [4, 12, 6])), 0)
call_3543 = relay.TupleGetItem(func_2684_call(relay.reshape(var_3542.astype('float32'), [4, 12, 6])), 0)
var_3544 = relay.var("var_3544", dtype = "float32", shape = (7, 6, 14))#candidate|3544|(7, 6, 14)|var|float32
bop_3545 = relay.mod(uop_3536.astype('float64'), relay.reshape(var_3544.astype('float64'), relay.shape_of(uop_3536))) # shape=(7, 6, 14)
func_729_call = mod.get_global_var('func_729')
func_732_call = mutated_mod.get_global_var('func_732')
const_3554 = relay.const([[-1.469824,0.679845,-3.168623,-3.362554,-6.871318,-3.398195,-7.798496,6.679954,0.944949,-4.308152,6.499802,-3.358132,-9.430364,-6.623943,-1.431857,-5.968054,9.851353,-2.475855,8.348181,7.734400,-0.105144,5.584993,6.247932,5.225647,2.795826,1.143917,9.668481,-1.376883,1.434762,-1.980390,-9.117781,-1.760575,-8.099397,5.234758,-0.504031,-9.325982,-0.795843,7.875577,-3.432133,-4.868978,5.684434,-9.062891,-3.551949,-9.423496,3.481684,4.188966,-6.981443,8.744311,-8.926639,-7.784300,-6.572653,2.041049,-7.793316,-2.465786,1.410706,8.429173,-4.114573,7.454766,-3.887699,-6.931018,-2.992162,0.199705,-7.128917,-8.051403,-7.563631,2.823096,5.922735,2.527087,9.577550,-2.569034,2.098181,9.309415,7.608862,-3.177049,6.581327,-1.325340,-1.743312,-8.349956,-2.841961,1.357239,0.638145,7.711544,-8.827877,-0.678332,1.307665,-2.937450,-6.006185,-1.191832,2.641335,0.329175,-3.354870,-7.593576,-7.330653,1.398324,1.489830,3.697636,6.649232,6.880249,6.976559,9.102412,-2.617315,4.388232,-8.104385,3.991320,-0.112064,-1.177478,-3.263631,8.973783,8.445217,1.999216,-8.006016,3.200041,-6.910369,7.129431,-2.612732,-2.669949,-2.390603,-6.102403,9.415178,-8.694180,-4.430342,-6.324340,-2.654041,0.272552,-1.188013,-4.331860,3.830357,-4.580068,5.521525,-4.234381,5.353303,-3.754692,-2.543520,-9.036921,-5.205047,-1.888375,5.583819,9.682232,-1.157258,0.092215,-6.071120,1.791579,6.284403,4.012383,5.106283,-3.709924,-9.382386,4.699588,5.374799,-5.015420,-3.434991,3.475650,-7.135736,8.819873,6.724211,6.901497,1.947978,-3.732193,3.550422,3.457171],[8.792838,8.172302,-4.208655,-9.246776,-8.018858,-1.572102,3.878665,-0.296385,-7.984423,2.248093,-2.274369,8.029000,5.427887,-0.588411,3.325821,-6.288069,0.619545,-9.337345,-7.335146,-6.932439,-0.715508,7.102841,-2.685187,8.166616,-1.656214,-7.845097,2.471286,-4.489729,8.294484,0.135845,-5.067813,4.938013,9.799328,6.926674,0.356917,-1.725835,-8.371817,6.227465,7.103492,-5.604867,3.569198,-1.585158,-3.257297,-1.136262,5.700929,9.740763,0.222331,-0.887649,-2.734258,-1.044084,7.500611,7.776435,-0.405352,-5.458032,3.546085,8.543433,8.098715,-1.665649,-8.560350,-6.919445,-9.934890,7.699465,-4.552194,1.828350,-6.857549,-4.738336,-5.315897,0.903414,6.659202,4.569726,-2.260936,4.456565,-4.311631,-0.861191,-7.566998,0.574027,-5.442192,-4.300846,-7.556869,2.186256,5.823200,-0.413778,-8.086486,5.761989,3.971036,-7.333653,0.882675,2.662430,9.745763,6.669913,-6.947250,7.957207,1.950784,-0.027577,4.578441,-1.166655,5.053145,-7.557919,1.530739,1.479227,-8.931347,-3.196476,-4.704624,-5.445530,3.648229,4.982417,-9.206535,-1.331456,8.650368,7.070063,6.621801,7.606366,-9.938506,-5.292525,6.511994,-0.941403,7.974180,-0.214863,-6.113917,-3.028257,-7.871782,-2.297288,-8.883922,-3.877152,8.889912,-4.191213,-8.983080,8.410062,0.355006,-2.038340,-3.395410,4.007588,6.878687,8.004252,-2.389385,-2.283228,3.436083,9.152451,3.551502,7.362755,1.960328,0.218048,-4.174278,-6.817976,-4.407132,-8.394870,8.258586,0.248282,1.818009,-2.571543,-4.802978,-7.004711,5.445196,7.652984,-4.583824,2.420219,-0.031704,1.109265,-9.838484,-9.536004],[-5.243571,8.340984,-4.156350,-8.244762,9.062807,9.368685,0.256187,6.291489,0.987938,-2.834211,-2.875125,7.400174,-2.075795,4.712733,-7.150333,-5.243031,-7.941634,-5.641936,-7.715421,1.618173,-3.983778,4.228587,-2.659183,-2.291816,5.026120,7.740955,3.708505,-9.047631,8.088071,-0.872764,1.956316,-7.777961,-0.945155,3.896306,-6.501213,-4.231259,9.285732,-2.512346,-5.237944,-5.717508,3.142606,9.867169,-0.271744,5.433181,1.586824,-0.403724,-6.697795,7.922425,4.222806,4.400631,5.965687,-7.137985,8.140418,-8.716853,-2.408583,6.601913,3.662122,-8.465185,-4.877346,5.653495,2.533459,-0.453336,6.959060,-5.951125,-7.699045,-1.702249,2.605116,0.355921,8.356540,-1.009111,-1.238331,-1.287459,3.588797,8.886184,-8.338334,7.945016,-3.625853,2.176446,2.912270,2.464458,6.978937,3.239318,-3.955119,1.343667,9.526453,8.185633,3.038036,7.788056,-0.958300,-6.712376,7.168524,-4.182226,9.981804,6.064592,6.665271,6.428692,-8.671373,3.943534,8.236235,1.162032,7.075410,-9.609377,-3.289273,3.817511,-6.586131,9.376846,5.356567,-2.220086,6.861258,-5.932149,-4.495493,0.518618,-1.216794,5.212552,0.184529,-1.502675,-3.996065,0.153372,-8.142753,6.996958,-6.361482,0.494562,7.909332,-4.301866,5.731525,5.364081,-0.057036,6.666107,-9.548544,-9.353053,0.414863,-6.332300,7.290814,-7.937559,-7.343311,0.331215,-4.237571,-1.489282,-5.786505,-7.530712,4.775497,5.336154,-2.385726,2.814684,5.156929,-7.014528,-1.844644,-8.493460,-9.894379,-6.508806,3.634087,3.268030,-9.734759,4.550528,-5.584007,-7.643917,6.502511,-5.701180,-1.547259,-4.402824],[6.779687,-5.479414,8.663701,-7.600409,1.843259,-2.799708,-0.345280,-2.878407,-9.192057,7.431446,4.045167,-2.827853,0.781856,-5.429544,-8.061945,5.009443,7.440435,-1.920265,6.476784,-3.531968,7.801312,4.412886,-2.620161,-9.251929,5.559142,-8.402304,3.430830,4.688667,8.774860,9.795308,9.874858,6.573866,-2.644595,6.615958,-0.563479,3.728344,8.246031,8.101817,-8.825428,-6.452355,2.566366,5.752034,1.624018,6.688200,-8.655591,3.099064,-7.148700,1.979584,-2.953547,-8.917853,-1.461762,-1.343638,-7.362219,-5.160929,4.224266,-0.813711,0.697261,9.897934,-6.065154,8.141304,0.158884,-9.107858,8.722051,3.195672,9.895703,8.015960,0.276699,3.449720,0.419174,-0.391923,-0.015797,-5.423131,-0.886123,-0.166561,-4.418803,-8.055873,-8.102158,2.257093,-2.699853,3.224182,-9.906705,0.437454,-4.108092,5.209201,-8.815265,-2.970892,-7.834616,-2.546758,5.470594,-7.432024,-4.282157,5.227766,9.463655,6.030605,6.402016,2.504077,1.845977,7.816818,6.893233,3.082937,9.616690,-2.034976,-7.927255,-1.962167,-6.564674,-7.441829,5.528784,1.586320,-9.414931,-5.652791,-0.438691,-3.938409,5.740279,5.676865,-3.347928,-2.186547,9.431687,-5.699379,-5.293097,7.589720,5.566324,3.758911,5.231644,1.205870,9.999367,-3.770900,-8.193181,3.593312,-1.614874,-5.599484,-9.414157,-6.662498,-0.807182,6.689143,-6.632506,2.305331,-6.762382,-1.593583,9.567394,-0.553361,-7.268192,-2.003166,2.464924,-9.269847,4.283240,-2.972070,4.491663,7.222522,5.058665,-8.932680,0.067294,3.718540,1.633666,6.045454,-5.129550,8.186940,-3.851324,1.769598,-1.078887,-9.846169],[-8.401802,0.912692,4.536929,0.384810,6.629174,-4.494336,4.866620,9.127657,-0.656714,-9.427420,-8.387927,6.752622,0.911277,-4.081998,-3.008229,4.763104,4.859681,-8.691245,7.936255,-6.137375,-9.491246,2.391967,-8.941253,-5.648883,-9.922316,7.276068,-3.592874,1.223146,8.007256,6.589065,-5.776315,4.786455,7.583666,7.783238,7.345103,-8.118287,-4.518539,-5.843836,-3.125060,3.116046,0.010142,2.327369,9.478302,1.994707,-1.779489,-7.864786,-7.685197,-2.055944,-1.891451,-2.654940,8.468454,7.584121,2.491288,3.970900,-9.215997,-6.747886,6.532934,1.420834,-3.112316,-5.893312,-0.003863,-2.868896,-0.183922,-6.416335,-8.015495,-3.758944,1.151716,1.876509,7.337949,-1.160715,-4.855464,8.034418,-8.766981,-9.974862,-8.700154,9.603317,-5.441221,1.121200,0.339150,8.007505,-7.431192,3.457300,0.065921,-8.807175,0.694746,-5.257699,4.763328,-7.089676,-5.297797,2.266396,3.820251,2.302375,-6.769266,-7.749337,9.701388,3.565120,4.411681,5.598075,9.504951,-7.513879,6.232731,-6.988000,-2.751938,-6.320172,-8.431844,1.308283,4.330223,6.350604,3.895717,5.818940,1.128514,3.210575,8.040603,0.194838,-0.986921,-6.814182,-6.713613,6.208086,9.312184,4.877606,4.373313,6.425844,-5.623829,-3.424539,-0.347778,-3.484267,-2.027688,-1.414730,-1.284155,-5.043715,2.101693,-5.863873,-6.020285,9.914996,-3.047819,5.440904,2.335466,-4.283842,3.404336,-3.617467,-4.740945,7.558930,-6.037407,-3.745932,0.980847,0.916471,5.526454,-5.212800,1.691681,6.055444,-1.171031,4.521982,3.282744,3.423656,-4.573770,-2.973031,-5.922534,6.905403,-8.585046,-4.620445],[9.303590,-7.770037,1.454659,-6.237067,-4.273645,-6.827020,-3.419449,4.868649,1.513920,-6.537035,-4.664109,-9.242199,-0.449823,5.927923,-2.043219,-7.458684,8.897767,-9.133767,6.064152,-4.929462,2.404215,-3.369398,-4.466450,4.686939,2.885411,-7.347895,4.248710,-8.445274,-4.108207,-3.129325,7.519187,-8.599642,5.109097,-0.218171,9.451395,8.445816,0.796226,-0.048148,5.633027,-6.821965,4.423539,-3.043588,0.308069,-4.929308,-5.961860,-3.724635,6.240265,-4.535551,-9.541798,9.525902,2.643124,-4.123645,3.384695,0.826440,-4.001351,9.471574,-3.355043,-1.257341,-9.047521,5.919292,6.681875,7.749963,4.582735,-1.722666,-2.689654,8.914716,-3.882797,-9.569518,7.528451,-6.719668,4.446529,9.602001,6.424944,-0.089948,5.506020,-6.133141,7.804340,3.725965,2.851158,-8.980638,-6.303433,-5.656813,3.807939,-5.965744,-1.005808,4.056880,-2.362354,9.837628,-7.455436,6.202313,0.386017,1.670003,3.591847,3.309944,-7.115268,-8.396725,-4.488197,9.638384,-9.824015,-9.870084,-3.121493,-1.820968,-4.808594,-9.428099,4.845897,-5.737209,6.419144,-1.453073,0.411399,4.968143,0.119292,-9.957110,-2.162005,-0.303629,8.956238,7.624941,-7.444861,-9.046219,5.625717,7.744118,-7.678049,-9.866119,3.530604,2.769893,-0.380676,-0.784721,-6.711054,2.662730,-4.064111,6.933314,-7.096889,4.945835,1.523803,-6.085582,-7.265962,7.353348,5.288377,-2.541704,-7.110549,4.128423,4.168222,4.746854,-8.619783,-5.974927,-4.400462,-8.936188,6.868643,1.501497,5.561376,9.051516,1.047027,1.117173,-3.292458,-5.043674,3.082514,-5.480238,7.164192,-4.508450,-6.483060,7.965294],[5.111666,-5.395445,4.746612,0.245641,3.382155,9.335824,0.712508,6.678606,-5.211191,3.312004,-2.493364,-5.437872,2.988567,4.154492,-7.161473,-4.006264,6.727052,-1.446439,-0.302219,1.865617,-5.958092,-5.204524,1.545950,-6.501251,1.432071,1.914025,7.066182,-0.373721,9.453156,-2.797896,-1.450730,1.392207,6.751790,-8.278822,3.116845,1.148322,-4.339767,4.575348,-5.746724,-2.890476,8.247527,3.866712,4.887190,0.361656,5.618738,-6.320216,-2.390303,6.257328,0.532651,7.049657,-0.399898,8.456752,4.117446,-8.339194,-2.709343,5.836722,7.470036,-3.710754,-1.230679,2.896988,7.695338,4.225942,1.113975,-1.322469,1.949418,9.186177,-9.436378,-0.193199,6.271435,3.467011,3.351622,-8.527661,1.597672,-2.925219,-5.923250,-6.554302,9.556493,-6.399242,-0.323035,-4.845126,-2.571932,4.578075,-8.894231,-1.723560,5.351894,2.635441,3.653143,8.497396,-8.406518,-9.444463,3.865052,-0.233366,9.247268,5.392681,7.028773,5.168490,9.736746,4.077359,-3.226140,8.330626,0.474496,5.313649,-5.842066,-2.820257,-5.053088,-0.263688,4.682960,-2.176912,2.491661,-8.101197,9.841248,-3.122627,8.294571,-7.313111,-4.716489,0.267597,-6.184144,-6.969748,6.960541,5.066960,9.690915,5.113628,2.614510,5.493113,9.146096,5.213063,7.860636,9.511217,1.013101,8.915566,2.429725,-7.345499,4.161838,1.182502,9.943583,-1.624535,-7.017335,8.169281,1.567792,-4.250319,-9.012598,-1.960529,2.411855,-8.985339,5.084426,-2.434069,-1.931475,3.613934,7.373045,-5.614115,6.251953,-7.320169,-0.799711,4.918104,-5.139353,-0.808505,-6.735395,1.548958,-3.216141,-9.853651],[7.625819,8.061696,7.982861,4.689490,2.978036,8.533428,-1.923824,-0.115634,1.851858,-2.739986,4.571705,5.997176,2.814073,8.012781,-4.385422,-3.082617,0.360396,-6.462668,-9.100994,2.693653,9.530358,-6.114061,-3.630155,0.158336,8.719041,-6.424002,-5.736589,-6.664095,-3.465159,-5.497604,9.438119,-9.867917,-6.050361,-5.657001,-9.490677,-5.805161,-5.994942,8.234867,0.910976,3.143515,-1.788830,2.791289,9.619092,9.815019,7.495977,-2.948726,-5.283326,9.169281,9.284493,7.087912,-8.175128,-9.671511,-0.819146,0.490291,-4.049766,-5.057717,-0.291424,7.704632,7.501206,2.838013,-9.525100,-7.114557,-0.456403,6.707482,6.420992,4.073700,-0.721889,-0.996411,2.113694,-6.640287,-6.844465,2.187156,-3.154777,-2.447466,8.178392,8.823897,-1.160432,-7.841884,0.695880,-3.505789,-6.825827,-6.040242,4.689594,7.481257,0.910082,-6.575391,2.221361,-2.824104,6.776087,4.064074,4.497755,-3.974419,-6.963653,-6.061871,3.074319,-4.712715,4.904202,-8.710694,-7.255397,3.052210,-3.870024,6.025877,3.308029,2.802173,1.344218,2.088663,8.749181,-1.773625,-0.509483,-4.806453,3.599050,3.540356,9.370525,-6.856660,-4.635037,0.499410,8.153912,-0.802578,2.038643,7.799539,-8.998573,9.222313,3.937408,-4.100033,-1.498951,7.684389,7.522166,-1.809932,-4.551532,-2.283769,5.340684,9.363902,4.964783,5.401035,-8.267749,0.930776,-8.218740,-7.709830,-4.638730,1.403510,7.967481,-0.951652,-3.531924,-6.631408,2.489742,6.918959,-1.844285,-8.457598,-5.827222,-8.162404,-9.185965,5.291937,-6.177756,-0.429133,-6.945617,-4.396856,-2.101530,0.752628,2.717676,-5.825123],[-4.576091,0.380004,-3.696924,-4.192122,-8.508320,4.985854,-8.429790,6.193606,5.715440,9.438245,2.116706,8.023859,8.806220,-2.630980,-9.510344,3.319414,-1.969120,-0.300052,-7.803201,3.462722,6.819096,-8.949352,-4.424360,1.686449,5.103048,3.348866,-7.464550,4.436546,5.724409,-9.433573,-6.031900,0.932391,7.932161,2.972211,-8.362088,-8.826748,-4.574145,-9.096281,-0.377548,-1.117256,-3.023116,-8.092796,-6.922480,-8.859622,-7.053500,-8.003353,2.542006,8.933277,4.910337,-0.875569,-8.735360,4.043533,0.938278,4.181219,9.552922,-2.748468,1.932344,-5.951323,-9.493263,-8.182346,-3.064414,6.626824,-7.615352,-2.362410,0.758921,8.876281,3.464764,-4.121537,-3.176627,-1.623513,8.008027,-4.185792,8.417116,3.996640,7.740302,-9.399576,-8.449563,3.903469,1.024471,-5.022086,2.533528,-2.585350,-6.327281,3.994282,-5.751564,9.117767,-7.941607,-3.983394,-2.615458,3.874991,3.570351,7.709401,3.258240,-0.238158,-7.061945,-3.535437,3.321525,-0.766628,8.667542,-0.547922,8.417414,-4.204198,9.153491,-8.288260,-1.838781,-0.295107,0.264461,8.264987,-9.607819,3.110936,-4.774969,-5.021696,-9.711843,3.431293,7.774638,9.100940,9.912438,-5.862915,3.177679,4.305167,7.355209,7.765817,7.988402,9.176866,8.281289,2.441267,-7.783497,4.555375,-7.248891,9.986148,-3.248384,4.902556,-0.779666,4.825722,-1.255683,6.155613,-9.213907,-6.362015,9.192046,8.187212,1.423711,-2.400588,7.635843,-6.108419,-5.971914,5.889224,5.519863,0.946861,-5.065176,0.110210,9.933454,-4.393850,3.835618,4.006983,2.244441,4.365694,5.474064,-8.677149,3.206207,4.739182],[-8.158462,3.469606,6.831740,0.759584,0.938426,-6.640588,6.433506,-5.040420,3.557599,1.290662,-8.666112,5.203019,-4.875047,-0.158240,5.178834,-2.861693,-9.140915,9.513669,-2.045335,-9.075999,9.457966,-9.435788,2.845513,8.477734,-7.919274,1.495721,-5.485369,6.163730,6.941868,-4.939985,4.725821,-7.014745,-2.896871,8.107246,8.654567,-7.209273,-8.513725,6.387545,4.001009,-6.424679,-9.189605,4.498444,5.851005,9.284639,-1.996805,2.683480,-8.278524,-9.247676,7.904878,9.357451,3.830075,3.500609,-7.061248,3.548614,9.209219,-6.664851,-8.322215,-6.985737,-5.862171,-5.630696,-8.678407,-6.967031,2.635055,3.530805,-7.758148,5.323310,8.467243,4.699281,-9.610245,4.732260,-4.195170,4.726563,6.550762,-0.133280,7.862346,1.443957,-3.707208,7.669426,-3.646226,-6.474383,1.963862,-1.216939,-0.753741,5.032400,-8.095139,9.326934,-5.616448,0.553625,-4.007194,1.691031,-3.442922,8.922768,-6.679368,3.766630,-9.805422,0.574282,7.644322,-4.516824,6.758824,-2.897459,-4.315003,-9.292942,-3.464387,4.381312,-1.993281,8.873370,3.833246,7.350106,6.294512,-2.493067,4.540461,6.316105,7.250386,-7.864924,3.247020,-2.357196,-7.411615,-9.953851,4.281739,-4.060308,-8.328182,-3.713875,-4.446828,0.114453,-0.081033,1.200846,9.190932,3.263404,-0.867582,2.392973,-3.604654,-9.808558,8.161198,-0.321586,-9.317317,-8.836521,-1.195524,-6.724429,-5.689271,-8.567734,4.160445,-9.049664,-0.174013,9.264175,-4.820429,4.531100,-9.489633,8.734974,-6.313579,-6.300976,-3.378107,-9.529008,-5.634205,-2.186693,-9.181420,4.296819,-6.237068,9.757599,6.562336,-2.567366]], dtype = "float64")#candidate|3554|(10, 160)|const|float64
const_3555 = relay.const(3, dtype = "uint16")#candidate|3555|()|const|uint16
call_3553 = relay.TupleGetItem(func_729_call(relay.reshape(const_3554.astype('float64'), [10, 10, 16]), relay.reshape(const_3555.astype('uint16'), []), ), 2)
call_3556 = relay.TupleGetItem(func_732_call(relay.reshape(const_3554.astype('float64'), [10, 10, 16]), relay.reshape(const_3555.astype('uint16'), []), ), 2)
var_3565 = relay.var("var_3565", dtype = "float32", shape = (7, 6, 14))#candidate|3565|(7, 6, 14)|var|float32
bop_3566 = relay.not_equal(uop_3536.astype('bool'), relay.reshape(var_3565.astype('bool'), relay.shape_of(uop_3536))) # shape=(7, 6, 14)
output = relay.Tuple([call_3541,var_3542,bop_3545,call_3553,const_3554,const_3555,bop_3566,])
output2 = relay.Tuple([call_3543,var_3542,bop_3545,call_3556,const_3554,const_3555,bop_3566,])
func_3572 = relay.Function([var_3535,var_3542,var_3544,var_3565,], output)
mod['func_3572'] = func_3572
mod = relay.transform.InferType()(mod)
var_3573 = relay.var("var_3573", dtype = "float32", shape = (7, 6, 14))#candidate|3573|(7, 6, 14)|var|float32
var_3574 = relay.var("var_3574", dtype = "float32", shape = (288,))#candidate|3574|(288,)|var|float32
var_3575 = relay.var("var_3575", dtype = "float32", shape = (7, 6, 14))#candidate|3575|(7, 6, 14)|var|float32
var_3576 = relay.var("var_3576", dtype = "float32", shape = (7, 6, 14))#candidate|3576|(7, 6, 14)|var|float32
output = func_3572(var_3573,var_3574,var_3575,var_3576,)
func_3577 = relay.Function([var_3573,var_3574,var_3575,var_3576,], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3622 = relay.TupleGetItem(func_3136_call(), 0)
call_3623 = relay.TupleGetItem(func_3138_call(), 0)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3638 = relay.TupleGetItem(func_3188_call(relay.reshape(call_3622.astype('bool'), [13, 15, 13])), 0)
call_3639 = relay.TupleGetItem(func_3190_call(relay.reshape(call_3622.astype('bool'), [13, 15, 13])), 0)
func_1823_call = mod.get_global_var('func_1823')
func_1831_call = mutated_mod.get_global_var('func_1831')
const_3650 = relay.const([[True,False,True,True],[False,False,True,False],[True,True,True,True],[True,False,False,True],[False,True,True,False],[False,True,True,False],[True,True,True,True],[True,False,False,False],[False,True,True,False],[False,True,False,True],[False,False,False,True],[False,False,False,False],[True,True,True,True],[True,False,False,False],[True,True,True,True],[True,True,True,True],[True,True,True,True],[False,False,False,False],[False,False,False,False],[False,False,False,True],[False,True,False,True],[True,False,True,True],[True,False,False,False],[True,True,True,False],[False,True,True,False],[True,True,True,True],[True,True,True,True],[True,True,False,True],[True,True,False,False],[True,True,True,True],[True,True,True,True],[True,True,True,True],[False,True,False,True],[False,True,False,False],[False,True,True,True],[False,False,True,True],[True,True,False,False],[True,True,True,False],[True,True,True,False],[False,True,True,False],[False,True,True,False],[False,True,False,False]], dtype = "bool")#candidate|3650|(42, 4)|const|bool
const_3651 = relay.const([1,2,8,-9,-2,2,9,10,5,3,-9,-10,5,8,-9,3,-10,3,3,-1,-5,8,-4,-10,-2,10,1,4,5,6], dtype = "int8")#candidate|3651|(30,)|const|int8
var_3652 = relay.var("var_3652", dtype = "float64", shape = (108,))#candidate|3652|(108,)|var|float64
var_3653 = relay.var("var_3653", dtype = "int16", shape = (15, 1))#candidate|3653|(15, 1)|var|int16
call_3649 = relay.TupleGetItem(func_1823_call(relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(const_3651.astype('int8'), [30,]), relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(var_3652.astype('float64'), [108,]), relay.reshape(var_3653.astype('int16'), [15,]), ), 7)
call_3654 = relay.TupleGetItem(func_1831_call(relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(const_3651.astype('int8'), [30,]), relay.reshape(const_3650.astype('bool'), [4, 6, 7]), relay.reshape(var_3652.astype('float64'), [108,]), relay.reshape(var_3653.astype('int16'), [15,]), ), 7)
output = relay.Tuple([call_3622,call_3638,call_3649,const_3650,const_3651,var_3652,var_3653,])
output2 = relay.Tuple([call_3623,call_3639,call_3654,const_3650,const_3651,var_3652,var_3653,])
func_3658 = relay.Function([var_3652,var_3653,], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
mutated_mod['func_3658'] = func_3658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mutated_mod.get_global_var('func_3658')
var_3660 = relay.var("var_3660", dtype = "float64", shape = (108,))#candidate|3660|(108,)|var|float64
var_3661 = relay.var("var_3661", dtype = "int16", shape = (15, 1))#candidate|3661|(15, 1)|var|int16
call_3659 = func_3658_call(var_3660,var_3661,)
output = call_3659
func_3662 = relay.Function([var_3660,var_3661,], output)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3695 = relay.TupleGetItem(func_3136_call(), 0)
call_3696 = relay.TupleGetItem(func_3138_call(), 0)
uop_3701 = relay.log10(call_3695.astype('float64')) # shape=(13, 15, 13)
uop_3703 = relay.log10(call_3696.astype('float64')) # shape=(13, 15, 13)
output = uop_3701
output2 = uop_3703
func_3704 = relay.Function([], output)
mod['func_3704'] = func_3704
mod = relay.transform.InferType()(mod)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mutated_mod.get_global_var('func_3704')
call_3705 = func_3704_call()
output = call_3705
func_3706 = relay.Function([], output)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_3818 = func_3704_call()
call_3819 = func_3704_call()
output = relay.Tuple([call_3818,])
output2 = relay.Tuple([call_3819,])
func_3820 = relay.Function([], output)
mod['func_3820'] = func_3820
mod = relay.transform.InferType()(mod)
output = func_3820()
func_3821 = relay.Function([], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_3822 = func_3704_call()
call_3823 = func_3704_call()
func_420_call = mod.get_global_var('func_420')
func_423_call = mutated_mod.get_global_var('func_423')
const_3839 = relay.const([-6.828717,-3.062467,-1.309137,1.209485,8.632066,9.821816,8.882545,0.763735,-2.289459,2.971205,-2.888892,0.106308,0.340267,-0.856180,-7.804982,-2.734176,1.821692,1.452365,-3.616839,-1.797361,2.365736,8.254870,-3.331536,-9.536715,7.862662,4.555387,5.431222,3.760134,-1.227350,8.663290,6.716850,1.564770,-6.157952,7.776131,8.788174,3.435486,2.464088,7.534717,6.514703,1.236943,6.998902,-5.478310,2.595161,3.201511,-1.348033,-8.933180,5.445081,-5.205364,7.394671,-1.027679,-4.282126,5.930557,-7.565473,8.087360,3.779672,-2.849606,1.742057,4.229367,5.307108,-3.339728,6.239426,1.217608,-9.576933,9.326196,0.620096,-3.057975,9.517579,-7.023164,9.243619,7.965705,-9.904614,0.905816,9.263360,-0.077758,-1.606480,-0.742620,1.859512,-4.674410,1.225565,9.272973,4.270422,-7.923401,-9.650778,8.375406,-1.869177,-7.549057,-7.756538,-5.831689,-9.309773,-2.798760,3.167260,-3.903100,4.602367,-6.856090,-3.286302,7.166209,-5.632140,-8.087880,-6.010855,-6.294693,8.854219,6.550661,-3.715291,4.554552,-9.941658,6.513005,-1.154107,3.895864], dtype = "float64")#candidate|3839|(108,)|const|float64
call_3838 = relay.TupleGetItem(func_420_call(relay.reshape(const_3839.astype('float64'), [9, 6, 2])), 1)
call_3840 = relay.TupleGetItem(func_423_call(relay.reshape(const_3839.astype('float64'), [9, 6, 2])), 1)
output = relay.Tuple([call_3822,call_3838,const_3839,])
output2 = relay.Tuple([call_3823,call_3840,const_3839,])
func_3841 = relay.Function([], output)
mod['func_3841'] = func_3841
mod = relay.transform.InferType()(mod)
output = func_3841()
func_3842 = relay.Function([], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_3843 = relay.TupleGetItem(func_3841_call(), 0)
call_3844 = relay.TupleGetItem(func_3842_call(), 0)
var_3849 = relay.var("var_3849", dtype = "float64", shape = (13, 15, 13))#candidate|3849|(13, 15, 13)|var|float64
bop_3850 = relay.mod(call_3843.astype('float32'), relay.reshape(var_3849.astype('float32'), relay.shape_of(call_3843))) # shape=(13, 15, 13)
bop_3853 = relay.mod(call_3844.astype('float32'), relay.reshape(var_3849.astype('float32'), relay.shape_of(call_3844))) # shape=(13, 15, 13)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
const_3855 = relay.const(5, dtype = "uint16")#candidate|3855|()|const|uint16
const_3856 = relay.const([-7,4,-7,-10,7,-10,-5,-1,-2,1,8,-10,-7,8,2,9,2,-9,8,6,3,4,-4,4,-4,10,1,2,5,-9,-3,4,2,4,3,7,-3,3,-6,5,-3,1,-5,1,-10,6,-7,-1,-2,-8,3,2,-4,7,-3,9,9,10,-10,-5,1,8,-10,8,-1,10,10,2,-4,-6,-3,-2], dtype = "uint16")#candidate|3856|(72,)|const|uint16
call_3854 = func_392_call(relay.reshape(const_3855.astype('uint16'), []), relay.reshape(const_3856.astype('uint16'), [3, 4, 6]), )
call_3857 = func_392_call(relay.reshape(const_3855.astype('uint16'), []), relay.reshape(const_3856.astype('uint16'), [3, 4, 6]), )
func_3658_call = mod.get_global_var('func_3658')
func_3662_call = mutated_mod.get_global_var('func_3662')
var_3865 = relay.var("var_3865", dtype = "float64", shape = (108, 1))#candidate|3865|(108, 1)|var|float64
const_3866 = relay.const([10,-2,-1,-4,-1,-1,-1,8,-3,-5,1,4,6,4,-7], dtype = "int16")#candidate|3866|(15,)|const|int16
call_3864 = relay.TupleGetItem(func_3658_call(relay.reshape(var_3865.astype('float64'), [108,]), relay.reshape(const_3866.astype('int16'), [15, 1]), ), 6)
call_3867 = relay.TupleGetItem(func_3662_call(relay.reshape(var_3865.astype('float64'), [108,]), relay.reshape(const_3866.astype('int16'), [15, 1]), ), 6)
output = relay.Tuple([bop_3850,call_3854,const_3855,const_3856,call_3864,var_3865,const_3866,])
output2 = relay.Tuple([bop_3853,call_3857,const_3855,const_3856,call_3867,var_3865,const_3866,])
func_3876 = relay.Function([var_3849,var_3865,], output)
mod['func_3876'] = func_3876
mod = relay.transform.InferType()(mod)
var_3877 = relay.var("var_3877", dtype = "float64", shape = (13, 15, 13))#candidate|3877|(13, 15, 13)|var|float64
var_3878 = relay.var("var_3878", dtype = "float64", shape = (108, 1))#candidate|3878|(108, 1)|var|float64
output = func_3876(var_3877,var_3878,)
func_3879 = relay.Function([var_3877,var_3878,], output)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4113 = relay.var("var_4113", dtype = "uint16", shape = (10, 14, 15))#candidate|4113|(10, 14, 15)|var|uint16
var_4114 = relay.var("var_4114", dtype = "uint16", shape = (10, 14, 15))#candidate|4114|(10, 14, 15)|var|uint16
bop_4115 = relay.less_equal(var_4113.astype('bool'), relay.reshape(var_4114.astype('bool'), relay.shape_of(var_4113))) # shape=(10, 14, 15)
bop_4119 = relay.power(var_4113.astype('float64'), relay.reshape(bop_4115.astype('float64'), relay.shape_of(var_4113))) # shape=(10, 14, 15)
const_4122 = relay.constdtype = "float64")#candidate|4122|(10, 14, 15)|const|float64
bop_4123 = relay.greater_equal(bop_4119.astype('bool'), relay.reshape(const_4122.astype('bool'), relay.shape_of(bop_4119))) # shape=(10, 14, 15)
uop_4126 = relay.acosh(const_4122.astype('float64')) # shape=(10, 14, 15)
uop_4141 = relay.log(uop_4126.astype('float64')) # shape=(10, 14, 15)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
var_4146 = relay.var("var_4146", dtype = "float64", shape = (2464,))#candidate|4146|(2464,)|var|float64
call_4145 = func_111_call(relay.reshape(var_4146.astype('float64'), [16, 11, 14]))
call_4147 = func_111_call(relay.reshape(var_4146.astype('float64'), [16, 11, 14]))
output = relay.Tuple([bop_4123,uop_4141,call_4145,var_4146,])
output2 = relay.Tuple([bop_4123,uop_4141,call_4147,var_4146,])
func_4153 = relay.Function([var_4113,var_4114,var_4146,], output)
mod['func_4153'] = func_4153
mod = relay.transform.InferType()(mod)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4153_call = mutated_mod.get_global_var('func_4153')
var_4155 = relay.var("var_4155", dtype = "uint16", shape = (10, 14, 15))#candidate|4155|(10, 14, 15)|var|uint16
var_4156 = relay.var("var_4156", dtype = "uint16", shape = (10, 14, 15))#candidate|4156|(10, 14, 15)|var|uint16
var_4157 = relay.var("var_4157", dtype = "float64", shape = (2464,))#candidate|4157|(2464,)|var|float64
call_4154 = func_4153_call(var_4155,var_4156,var_4157,)
output = call_4154
func_4158 = relay.Function([var_4155,var_4156,var_4157,], output)
mutated_mod['func_4158'] = func_4158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_4166 = relay.TupleGetItem(func_3841_call(), 2)
call_4167 = relay.TupleGetItem(func_3842_call(), 2)
output = call_4166
output2 = call_4167
func_4176 = relay.Function([], output)
mod['func_4176'] = func_4176
mod = relay.transform.InferType()(mod)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4177 = func_4176_call()
output = call_4177
func_4178 = relay.Function([], output)
mutated_mod['func_4178'] = func_4178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4211 = relay.TupleGetItem(func_3353_call(), 0)
call_4212 = relay.TupleGetItem(func_3354_call(), 0)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_4217 = relay.TupleGetItem(func_3188_call(relay.reshape(call_4211.astype('bool'), [13, 15, 13])), 0)
call_4218 = relay.TupleGetItem(func_3190_call(relay.reshape(call_4211.astype('bool'), [13, 15, 13])), 0)
var_4222 = relay.var("var_4222", dtype = "bool", shape = (13, 15, 13))#candidate|4222|(13, 15, 13)|var|bool
bop_4223 = relay.not_equal(call_4211.astype('bool'), relay.reshape(var_4222.astype('bool'), relay.shape_of(call_4211))) # shape=(13, 15, 13)
bop_4226 = relay.not_equal(call_4212.astype('bool'), relay.reshape(var_4222.astype('bool'), relay.shape_of(call_4212))) # shape=(13, 15, 13)
func_3572_call = mod.get_global_var('func_3572')
func_3577_call = mutated_mod.get_global_var('func_3577')
const_4229 = relay.const([7.838084,0.729527,1.737407,-3.460169,3.819410,-0.060920,4.883225,7.118888,4.134404,7.406199,9.298806,-3.242373,3.087949,-6.980566,4.163520,-4.829852,3.729055,8.251320,0.137257,-5.962885,7.055117,-8.008765,2.432104,1.538146,-1.377036,8.164003,-1.466522,0.386060,9.268561,-8.358476,4.262888,0.802276,-5.249633,3.014450,-7.618959,-4.721917,-6.569637,8.807869,7.754411,5.110055,7.535520,2.319561,-7.079670,8.075549,-3.896256,-3.483855,6.615734,-0.849365,0.938817,9.864629,8.705882,9.598576,-8.139380,-1.295677,3.030674,-8.325400,-0.290566,8.687117,-8.864526,-1.081236,-6.840699,-5.600620,-6.673003,-5.694513,2.764417,-6.545796,4.718042,-6.682363,-1.458988,3.134141,-1.028115,-6.252041,3.062695,7.495661,8.756951,6.375660,0.456210,0.426978,-0.021904,3.818915,1.039804,1.715617,9.416798,7.725897,-1.708297,4.125171,-9.081404,0.069345,1.944517,4.119773,-9.306873,4.925367,2.347678,2.501717,-3.508055,1.064541,-1.029813,-3.840677,-5.006275,7.862854,7.903465,-3.846821,4.507637,0.889359,-9.290773,2.090678,0.414851,-9.371630,0.180915,1.836005,-3.286872,1.815757,0.371572,-2.307611,1.708290,-6.366862,5.657444,-1.413488,-5.298218,8.181613,5.370890,4.974966,6.395239,9.428837,4.035917,-2.067231,4.454562,8.220013,-7.273153,-6.054103,8.104945,-7.986210,5.643168,9.891760,-0.369024,1.685276,4.973004,1.459464,-9.856338,8.682475,0.176930,-9.918568,-2.505839,1.147548,3.134538,-1.102162,-6.306608,5.035444,-9.992265,2.466036,-0.712933,-3.129195,4.826489,-7.014999,-8.372696,7.175126,-6.473523,-4.162466,1.274192,9.865212,3.562384,-8.507685,-2.342241,-2.480124,-2.179122,1.164407,-2.833293,9.612872,3.489368,9.676927,3.916136,6.477291,-0.026711,-1.905129,7.698665,7.468001,-6.143774,-0.376631,5.924521,8.244422,-5.146119,-6.433037,-4.762914,-0.942925,-8.530321,3.926715,4.357015,9.810724,-3.380545,2.256709,8.551586,-6.746548,-3.300237,-0.648903,8.165319,-8.847474,-7.750836,-0.079235,-9.025241,7.244302,3.648043,-7.278880,2.097142,-3.621662,-1.242958,-2.847382,-1.345490,4.206342,1.175649,7.774125,9.928167,1.884650,-4.004511,-6.716232,-9.711429,6.687254,-6.782229,-1.976880,1.530058,9.913046,2.830497,6.600102,-4.078185,-7.568286,-8.003601,2.836990,8.980226,-9.561325,-7.306691,-5.501852,-1.929523,-2.878073,-9.708673,-3.987941,-2.683509,0.267775,9.579790,5.580756,0.819796,-9.884153,0.481587,2.251547,-3.005975,2.138935,-9.427913,3.488696,2.240321,8.606285,0.536382,-9.322961,7.315542,1.832478,-9.145740,-1.775889,-1.669748,-3.370938,-6.211185,9.254168,7.351880,-9.846127,-7.866458,-0.866688,3.137567,5.553635,7.913258,-7.731619,1.955593,-0.921189,8.001312,8.172860,3.497736,5.740563,5.645377,-1.428083,9.772562,-7.131760,-4.864027,-8.397975,-9.962369,-7.518630,2.316310,-8.559771,-6.053928,-5.564734,-1.659822,-6.009764,4.361377,8.835760,-6.807734,5.238644,-9.012727,6.072300,-0.267563,9.171847,-9.929911,6.159976,-9.314552,-8.423671,-3.714018,-4.781559,5.525346,-1.105948,8.837973,9.244222,2.192178,6.058726,4.751213,-9.633220,-4.010800,-9.104826,-7.734601,-9.299948,-4.736855,9.756144,-0.732789,3.301540,-1.930574,-1.248984,7.787308,1.403558,5.385602,0.672530,-8.463318,-2.331666,7.930576,3.249694,-4.363838,-6.437513,-5.351915,2.428361,-1.131279,-6.994492,-3.825735,-5.232324,5.150108,-2.615924,-6.433785,2.990736,-5.722451,-2.603823,-7.920420,2.435841,2.966002,0.643767,4.238667,-7.000184,7.965669,9.842387,-1.897020,-9.734560,0.601661,-2.517824,-5.986959,-3.570897,1.205088,-3.820903,-1.242270,2.648665,1.364421,-9.853484,4.509181,-7.960240,9.877252,3.106596,7.143944,5.370839,-7.441835,7.143556,4.277661,8.948937,-4.697323,7.871762,6.254110,-8.572830,9.262911,-1.998848,-3.025769,-2.094814,-9.372035,7.077206,4.287955,-8.731933,-1.919517,-9.713488,-1.537068,-0.165962,6.952170,9.835874,-8.143699,7.478234,-1.616338,9.319172,9.724910,5.119455,7.662378,4.459483,3.663850,-9.385093,3.226736,-9.137195,6.980009,-8.922771,-2.326379,1.048950,-4.530485,-4.349481,-9.922853,9.313879,9.948842,2.515624,8.051588,2.140731,8.459566,-9.704555,-3.184974,-9.168011,1.658064,-3.589575,-6.081345,7.833654,6.350555,-1.582303,5.168248,9.361859,-4.169162,9.868496,9.615281,-6.261534,-9.487917,-5.597522,7.204823,-7.348761,8.186121,-7.021338,7.456198,-9.876614,-1.777420,-1.937388,-3.703949,-7.796199,9.855438,-0.943386,1.376462,6.630903,7.898792,-4.506955,-5.735192,-8.152055,-7.122271,2.754452,-7.765557,-8.088412,-6.440052,-3.277119,-0.934810,0.375815,-8.548395,-9.654442,5.080251,4.878563,1.261836,5.183627,5.625961,-9.107588,3.937903,1.442680,0.334904,-9.953533,-4.795923,5.534648,5.126992,-0.956001,-0.504586,7.177230,-1.552262,3.621215,9.852197,9.934074,-6.654852,-1.903690,-2.252757,6.308838,4.723036,6.428232,-6.146969,-7.519397,-2.601422,8.433820,6.955044,-3.189638,6.263473,-1.595803,-2.002909,1.081635,4.609678,-3.508171,1.022841,6.476859,3.760156,1.296788,3.101250,-5.980640,-1.185037,0.391618,-5.668391,-8.815348,7.460132,-6.000593,-8.939193,-8.473649,9.611748,1.067314,-6.533448,1.783802,-2.421118,7.701892,-0.862555,1.739281,3.088526,3.338912,-9.385342,7.633312,-7.095180,0.686378,-6.748603,-0.790032,8.450410,-0.022551,-0.874644,8.831478,-8.955593,8.896497,-6.743041,-1.749025,8.395998,-4.068064,6.870248,6.619450,0.934204,-0.622070,-3.877444,-9.407889,5.970668,5.890472,-2.597351,-8.640920,2.536870,-7.373681,-5.368486,5.084969,-7.499007,9.776212,7.699019,0.680358,5.578583,-6.488004,-6.180394,2.847735,-0.989673,0.397692,-5.614917,0.239844,3.819435,8.441485,-0.161600,3.280330,-9.367486,-9.869855,2.431215,0.803871,-8.252775,-9.498910,-3.564068,-8.929276,-8.263308,7.804570,4.920143,-5.232619,-1.105846,-2.469471,-1.866025,9.588402,-3.043553,2.524392,4.585805,-1.984545,-7.954942,-7.552434], dtype = "float32")#candidate|4229|(588,)|const|float32
const_4230 = relay.const([9.273842,-9.761585,-0.817318,7.658113,-9.059199,9.800151,-3.183043,-5.860715,9.405037,-2.610267,-3.182741,-2.224341,-8.069648,5.061605,0.841316,5.914818,1.605148,2.660777,8.643999,3.199882,-2.938963,-0.162883,4.730686,7.059868,-5.296614,-0.644622,-4.710590,-8.925860,9.236925,-1.849559,-5.119672,9.773929,4.157727,6.128058,-1.341529,7.616895,-6.542492,0.104332,-3.685011,-1.000701,-9.488858,0.193791,3.678513,3.918096,2.614791,9.933238,-5.348404,4.621905,6.983110,-9.074207,7.701026,-2.397765,1.076430,-6.418942,-1.564221,8.936896,9.736884,7.609407,-5.355707,7.403685,8.697601,6.699095,-1.577348,9.375888,-8.380951,0.809273,1.404141,4.984280,8.826210,-5.656686,-0.510759,-8.282888,-5.243206,-7.085257,1.083698,-0.789106,-5.264606,-7.054959,8.367412,-3.392176,1.238373,2.962918,7.202203,1.360659,-3.615639,-2.474094,5.499657,-7.990544,-6.630341,-7.485948,9.693709,-5.598575,4.414449,-8.769194,8.987958,-4.836813,-4.470052,6.897140,-3.435918,-8.219196,8.546685,0.992323,5.293451,-4.730920,-9.669457,2.865644,-2.419422,7.272151,-8.827076,-2.502352,-1.716061,-2.969048,-9.333362,-9.497193,2.934789,-5.716265,8.476447,1.921747,3.216416,-4.361688,9.505641,9.722527,-3.369875,8.541774,-7.620880,-8.327963,-1.951972,2.675500,-5.194742,4.256653,-3.275942,-9.069687,4.858759,9.883797,-7.650776,-1.846914,3.395676,9.211863,-6.243118,0.472171,-7.264524,5.764999,-4.586619,4.359928,-2.074111,-2.993098,-3.652898,-1.473303,3.154013,8.350637,4.323655,4.700155,8.889305,-1.263240,5.598164,0.931250,9.908384,-4.516432,7.135219,2.188532,-0.010181,4.921328,-7.055382,-5.054204,5.138931,6.300867,7.420456,0.487749,0.537265,-0.861703,7.657705,-7.752798,-0.207998,0.537498,1.812145,1.890747,-8.704963,-4.476599,-8.850271,-8.215483,-3.879676,-1.412562,-9.957944,1.637160,-1.306061,-8.275078,9.420424,-2.325198,6.033765,6.582218,-8.075792,-6.473231,0.697650,-3.402610,1.484913,6.504980,-4.656918,6.958548,-6.537641,8.334159,-1.005522,-0.984021,-8.178209,0.035906,-7.106365,-6.917525,4.105468,-0.093248,-9.891225,-3.532437,9.309051,2.496683,-6.450990,2.856660,5.182995,0.600097,-8.236919,8.096967,-3.431920,7.434698,-5.121057,-8.857822,-9.543994,-1.363665,0.086112,8.557347,4.493649,-4.745661,9.500151,-5.343209,-2.479850,6.212558,3.157021,-1.578152,7.154251,5.357874,9.854907,-6.530877,-5.850540,-2.517900,0.295905,-8.964279,1.261884,-9.799909,-0.166918,0.320564,-4.720136,-8.017217,-3.722310,-0.795257,-4.093656,4.947895,0.212177,8.207631,-3.439282,6.306854,4.154497,-1.743630,-5.014155,-1.918232,1.455567,-2.252202,-7.266593,-4.183865,0.419293,-8.000347,-3.628651,5.406221,5.187297,7.914568,2.350226,-5.848786,-2.842978,2.775816,9.898413,-8.347591,7.385594,2.438601,5.534953,-0.836679,-0.390933,-7.120779,-6.264751,-6.975332,-4.192796,-5.896385,-9.602926,8.756200], dtype = "float32")#candidate|4230|(288,)|const|float32
call_4228 = relay.TupleGetItem(func_3572_call(relay.reshape(const_4229.astype('float32'), [7, 6, 14]), relay.reshape(const_4230.astype('float32'), [288,]), relay.reshape(const_4229.astype('float32'), [7, 6, 14]), relay.reshape(const_4229.astype('float32'), [7, 6, 14]), ), 4)
call_4231 = relay.TupleGetItem(func_3577_call(relay.reshape(const_4229.astype('float32'), [7, 6, 14]), relay.reshape(const_4230.astype('float32'), [288,]), relay.reshape(const_4229.astype('float32'), [7, 6, 14]), relay.reshape(const_4229.astype('float32'), [7, 6, 14]), ), 4)
output = relay.Tuple([call_4217,bop_4223,call_4228,const_4229,const_4230,])
output2 = relay.Tuple([call_4218,bop_4226,call_4231,const_4229,const_4230,])
func_4233 = relay.Function([var_4222,], output)
mod['func_4233'] = func_4233
mod = relay.transform.InferType()(mod)
var_4234 = relay.var("var_4234", dtype = "bool", shape = (13, 15, 13))#candidate|4234|(13, 15, 13)|var|bool
output = func_4233(var_4234)
func_4235 = relay.Function([var_4234], output)
mutated_mod['func_4235'] = func_4235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_4239 = relay.TupleGetItem(func_3136_call(), 0)
call_4240 = relay.TupleGetItem(func_3138_call(), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
var_4243 = relay.var("var_4243", dtype = "float64", shape = (1, 1183))#candidate|4243|(1, 1183)|var|float64
call_4242 = func_2853_call(relay.reshape(var_4243.astype('float64'), [7, 13, 13]))
call_4244 = func_2853_call(relay.reshape(var_4243.astype('float64'), [7, 13, 13]))
func_3658_call = mod.get_global_var('func_3658')
func_3662_call = mutated_mod.get_global_var('func_3662')
const_4252 = relay.const([[8.554330,3.193921,-7.067966,8.416611,0.683087,2.054453],[5.008096,-7.790651,2.547510,4.035922,6.281209,-6.907968],[8.967679,-3.201023,-7.928426,-9.540565,6.134445,3.542887],[-8.594736,-3.435611,9.877185,-3.105821,-5.315959,8.126727],[0.090409,5.273744,4.832723,-7.338255,0.439458,-1.813576],[-2.640454,-2.461863,-0.772634,9.726664,-5.590946,1.429846],[-2.964892,2.299626,-5.009399,-5.762723,3.827037,-8.402499],[1.034304,-4.917634,-2.855022,-1.389312,6.444478,-5.207990],[8.913857,-6.639147,9.509713,3.118849,-5.609290,-4.757292],[-7.051625,-1.917640,4.885064,-7.637688,3.053595,8.899475],[-9.979908,-4.819388,-4.848526,0.879729,5.758502,-9.129487],[0.126963,-9.800500,-1.285354,-1.278341,1.115148,-2.245716],[-8.014528,-1.645953,1.403985,0.503364,5.048967,7.469253],[-7.495940,4.974814,6.047956,-7.170875,-8.040752,-8.692451],[3.997826,8.308794,3.634368,8.010934,-6.165761,5.747698],[-9.216545,6.683912,1.801503,4.299953,-3.071324,9.282748],[-8.366769,-0.503549,-8.110467,4.196385,-3.139160,-1.547891],[1.200149,7.768888,4.717127,6.194929,9.297102,-8.404085]], dtype = "float64")#candidate|4252|(18, 6)|const|float64
var_4253 = relay.var("var_4253", dtype = "int16", shape = (15, 1))#candidate|4253|(15, 1)|var|int16
call_4251 = relay.TupleGetItem(func_3658_call(relay.reshape(const_4252.astype('float64'), [108,]), relay.reshape(var_4253.astype('int16'), [15, 1]), ), 0)
call_4254 = relay.TupleGetItem(func_3662_call(relay.reshape(const_4252.astype('float64'), [108,]), relay.reshape(var_4253.astype('int16'), [15, 1]), ), 0)
output = relay.Tuple([call_4239,call_4242,var_4243,call_4251,const_4252,var_4253,])
output2 = relay.Tuple([call_4240,call_4244,var_4243,call_4254,const_4252,var_4253,])
func_4257 = relay.Function([var_4243,var_4253,], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
var_4258 = relay.var("var_4258", dtype = "float64", shape = (1, 1183))#candidate|4258|(1, 1183)|var|float64
var_4259 = relay.var("var_4259", dtype = "int16", shape = (15, 1))#candidate|4259|(15, 1)|var|int16
output = func_4257(var_4258,var_4259,)
func_4260 = relay.Function([var_4258,var_4259,], output)
mutated_mod['func_4260'] = func_4260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4176_call = mod.get_global_var('func_4176')
func_4178_call = mutated_mod.get_global_var('func_4178')
call_4305 = func_4176_call()
call_4306 = func_4176_call()
func_2156_call = mod.get_global_var('func_2156')
func_2160_call = mutated_mod.get_global_var('func_2160')
const_4326 = relay.const([1.376840,5.916393,3.961303,-8.590723,-3.186560,0.861607,6.596356,0.296825,5.072765,3.031481,-3.368488,5.583627,-9.437919,-2.983433,1.716727,-3.694087,0.848893,-9.326567,5.187702,-2.456372,3.821070,-3.177065,-3.638476,7.208300,-4.209166,-1.587419,-8.988448,-5.653377,-4.490477,-0.968655,-9.669122,-1.633625,-9.877365,-9.451955,-3.595615,7.064485,4.447130,-2.658742,3.944569,3.256878,-4.067575,5.641936,6.963096,3.469916,-0.349156,9.749501,4.262300,-0.850383,5.331255,8.158196,7.254622,2.488898,-5.169707,-4.109944,4.345960,5.168143,5.056641,4.225905,-6.550978,2.301452,-4.834786,6.377409,-0.839854,-4.533316,-5.334165,9.783332,-6.631798,-4.677526,-9.175229,9.051855,5.617435,-6.665986,1.172851,3.225103,-5.893723,-1.061212,-7.201322,-6.479053,9.769865,-6.461978,-9.880876,-1.589062,-5.503830,2.319936,2.734032,2.137442,6.104280,-1.506702,7.838483,-8.492856,-3.425363,-3.242851,-4.053760,6.701851,8.304382,-5.976828,-0.660516,2.421768,6.958859,8.107245,3.783503,6.885691,-8.876991,5.797126,-0.068514,-5.907134,-0.255399,6.568543,4.674484,-1.761402,-8.177541,2.047775,0.303678,0.279875,2.952070,-6.680394,2.100226,-7.125795,7.044161,2.175106,0.284421,-4.182703,6.315340,0.256117,-0.706777,7.129072,-9.105616,0.160212,0.480570,-3.647001,-6.898515,3.903242,4.629097,4.938761,0.591813,-5.724318,-9.051100,-5.140807,-8.926498,9.552570,-6.713239,3.534726,3.849152,-0.417723,6.223321,4.882328,7.673859,-8.989039,-4.793358,3.811039,-0.354732,6.463844,-8.761452,-6.339047,8.771930,-3.232402,5.786371,-8.193892,-8.114872,1.532251,5.582207,4.933511,-2.222925,7.792669,-0.465799,-1.030868,-4.856570,0.371140,-8.007560,2.425669,1.584421,6.244858,0.301879,5.474246,-0.533246,-6.985425,-1.959562,4.887532,5.466255,6.504089,7.842090,-9.043104,7.072121,8.302001,-7.287933,1.970812,-8.640084,-2.795383,-3.885792,4.948601,-3.021810,1.756007,-6.766790,3.558424,9.978459,3.728853,2.617799,9.380646,1.219043,-6.802324,3.820033,-8.740424,-3.156782,-9.458304,-6.255696,7.681653,3.823574,6.005119,4.624591,7.463281,-0.737401,-8.753427,-3.150767,-7.092177,-7.089009,2.455320,7.945456,6.836002,-5.790090,-6.590260,0.703757,-1.782827,-4.394378,-0.630727,-4.299389,4.505285,-8.469256,-2.643577,8.055720,4.551761,7.692035,8.884848,-4.477397,-9.267360,-6.636702,2.563316,1.707034,-5.744933,-0.386409,2.321498,-1.662321,3.138721,-5.977553,-5.448924,-1.779656,3.366779,-7.874185,-0.815337,3.740610,-5.532168,-7.539316,-0.054786,3.759857,9.005202,2.266300,-6.502400,4.062179,7.068323,-4.214089,7.168677,4.562284,-7.477309,-9.006644,-3.109541,-2.229573,9.267346,-9.982498,-1.454833,4.630577,1.669131,-0.018143,-3.097044,9.641911,-7.201511,1.065702,4.598356,-4.284112,8.726489,-2.241758,2.127810,-1.506132,7.625097,-6.813733,-8.445659,-6.312297,-6.924546,7.777717,-8.416616,-3.900946,-6.773887,8.971554,-3.379920,-5.117884,-0.598638,7.638378,3.099932,-7.815240,9.933935,-8.631665,-7.859997,4.319477,6.108829,-6.740221,-7.401148,-2.234302,-4.650807,-4.918743,-6.346244,-1.816909,1.057579,-0.013629,0.437192,-3.318902,2.848149,-1.828064,6.809424,-5.486362,9.305720,-5.643490,-8.504007,-1.194661,-9.603957,2.049067,7.854637,4.254673,-0.171663,8.182546,8.450292,-5.289775,-5.293043,-8.972986,-0.526134,1.960403,2.322880,3.258276,-3.285540,7.453948,-8.658147,6.356550,-8.254093,0.357202,-3.618355,0.864288,-0.229091,-4.686035,-6.195334,-0.859500,-4.807958,-5.321500,2.118549,1.258666,-3.925950,6.816597,4.366524,-9.738799,6.983799,-6.632529,9.099873,3.288859,9.070919,-6.494113,8.546747,2.634200,-4.687547,8.126128,8.474032,-8.467525,9.608811,8.877346,-6.148166,4.903854,2.531418,-9.356758,3.417167,-4.940631,2.364680,-3.523595,3.620512,-2.772048,-6.418238,9.998569,-0.790974,5.014813,8.501991,4.836566,-2.394259,-9.334571,-9.728352,-4.522772,-5.407802,6.084021,-5.665023,-0.672178,5.750107,9.393042,6.993785,3.331464,-2.113043,7.201615,3.322880,-7.752020,5.878735,3.479370,1.942956,7.261366,-0.822181,2.122253,0.695431,-1.667831,6.423903,-4.859583,5.853302,-6.567282,-5.094544,9.789897,-1.543958,7.653424,-7.102874,-1.352324,5.232553,-2.495099,-5.621273,-3.073500,2.638701,-0.914336,-0.634318,6.349375,-6.206415,-8.433495,-5.779229,0.758771,2.002472,-9.339464,7.499799,3.868224,5.299348,8.674279,8.857586,8.375742,-5.820437,7.425058,-6.160623,-1.654719,0.256322,0.154561,8.386716,-7.874994,6.574539,-0.225773,1.343444,1.841705,2.021144,-3.347645,-6.155675,-8.011511,5.163709,-3.572630,-9.958036,7.721226,0.394883,3.328317,7.681995,5.680352,3.096635,0.276214,4.356367,7.219724,5.660716,7.694734,3.920962,1.375828,-7.564996,-9.650265,-6.757971,-5.149459,-3.179760,-0.544610,8.497882,-5.037655,-3.672602,-2.434812,4.106052,-5.987225,6.683741,-3.449729,9.229437,-0.507950,7.634813,7.438465,-6.226681,3.529779,8.715915,-3.523090,6.847531,2.254488,-1.563536,4.883978,4.838017,6.159738,-1.363928,5.047122,5.072462,0.211453,-8.607469], dtype = "float64")#candidate|4326|(504,)|const|float64
var_4327 = relay.var("var_4327", dtype = "float64", shape = (3, 630))#candidate|4327|(3, 630)|var|float64
call_4325 = relay.TupleGetItem(func_2156_call(relay.reshape(const_4326.astype('float64'), [14, 6, 6]), relay.reshape(var_4327.astype('float64'), [1890,]), ), 0)
call_4328 = relay.TupleGetItem(func_2160_call(relay.reshape(const_4326.astype('float64'), [14, 6, 6]), relay.reshape(var_4327.astype('float64'), [1890,]), ), 0)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
const_4338 = relay.const([[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False]], dtype = "bool")#candidate|4338|(2535, 1)|const|bool
call_4337 = relay.TupleGetItem(func_3188_call(relay.reshape(const_4338.astype('bool'), [13, 15, 13])), 0)
call_4339 = relay.TupleGetItem(func_3190_call(relay.reshape(const_4338.astype('bool'), [13, 15, 13])), 0)
output = relay.Tuple([call_4305,call_4325,const_4326,var_4327,call_4337,const_4338,])
output2 = relay.Tuple([call_4306,call_4328,const_4326,var_4327,call_4339,const_4338,])
func_4356 = relay.Function([var_4327,], output)
mod['func_4356'] = func_4356
mod = relay.transform.InferType()(mod)
var_4357 = relay.var("var_4357", dtype = "float64", shape = (3, 630))#candidate|4357|(3, 630)|var|float64
output = func_4356(var_4357)
func_4358 = relay.Function([var_4357], output)
mutated_mod['func_4358'] = func_4358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_4405 = func_3704_call()
call_4406 = func_3704_call()
var_4409 = relay.var("var_4409", dtype = "float64", shape = (13, 15, 13))#candidate|4409|(13, 15, 13)|var|float64
bop_4410 = relay.right_shift(call_4405.astype('int32'), relay.reshape(var_4409.astype('int32'), relay.shape_of(call_4405))) # shape=(13, 15, 13)
bop_4413 = relay.right_shift(call_4406.astype('int32'), relay.reshape(var_4409.astype('int32'), relay.shape_of(call_4406))) # shape=(13, 15, 13)
output = relay.Tuple([bop_4410,])
output2 = relay.Tuple([bop_4413,])
func_4416 = relay.Function([var_4409,], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4417 = relay.var("var_4417", dtype = "float64", shape = (13, 15, 13))#candidate|4417|(13, 15, 13)|var|float64
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4418 = func_4416_call(var_4417)
output = call_4418
func_4419 = relay.Function([var_4417], output)
mutated_mod['func_4419'] = func_4419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_4470 = relay.TupleGetItem(func_3820_call(), 0)
call_4471 = relay.TupleGetItem(func_3821_call(), 0)
output = call_4470
output2 = call_4471
func_4489 = relay.Function([], output)
mod['func_4489'] = func_4489
mod = relay.transform.InferType()(mod)
output = func_4489()
func_4490 = relay.Function([], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_4507 = relay.TupleGetItem(func_3136_call(), 0)
call_4508 = relay.TupleGetItem(func_3138_call(), 0)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
var_4510 = relay.var("var_4510", dtype = "float32", shape = (1452,))#candidate|4510|(1452,)|var|float32
call_4509 = relay.TupleGetItem(func_2208_call(relay.reshape(var_4510.astype('float32'), [12, 11, 11])), 0)
call_4511 = relay.TupleGetItem(func_2210_call(relay.reshape(var_4510.astype('float32'), [12, 11, 11])), 0)
output = relay.Tuple([call_4507,call_4509,var_4510,])
output2 = relay.Tuple([call_4508,call_4511,var_4510,])
func_4512 = relay.Function([var_4510,], output)
mod['func_4512'] = func_4512
mod = relay.transform.InferType()(mod)
var_4513 = relay.var("var_4513", dtype = "float32", shape = (1452,))#candidate|4513|(1452,)|var|float32
output = func_4512(var_4513)
func_4514 = relay.Function([var_4513], output)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_4520 = func_3704_call()
call_4521 = func_3704_call()
output = relay.Tuple([call_4520,])
output2 = relay.Tuple([call_4521,])
func_4542 = relay.Function([], output)
mod['func_4542'] = func_4542
mod = relay.transform.InferType()(mod)
mutated_mod['func_4542'] = func_4542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mutated_mod.get_global_var('func_4542')
call_4543 = func_4542_call()
output = call_4543
func_4544 = relay.Function([], output)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_4562 = relay.TupleGetItem(func_3820_call(), 0)
call_4563 = relay.TupleGetItem(func_3821_call(), 0)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4564 = relay.TupleGetItem(func_3353_call(), 0)
call_4565 = relay.TupleGetItem(func_3354_call(), 0)
bop_4580 = relay.less_equal(call_4562.astype('bool'), relay.reshape(call_4564.astype('bool'), relay.shape_of(call_4562))) # shape=(13, 15, 13)
bop_4583 = relay.less_equal(call_4563.astype('bool'), relay.reshape(call_4565.astype('bool'), relay.shape_of(call_4563))) # shape=(13, 15, 13)
func_4153_call = mod.get_global_var('func_4153')
func_4158_call = mutated_mod.get_global_var('func_4158')
var_4586 = relay.var("var_4586", dtype = "uint16", shape = (30, 70))#candidate|4586|(30, 70)|var|uint16
var_4587 = relay.var("var_4587", dtype = "float64", shape = (1232, 2))#candidate|4587|(1232, 2)|var|float64
call_4585 = relay.TupleGetItem(func_4153_call(relay.reshape(var_4586.astype('uint16'), [10, 14, 15]), relay.reshape(var_4586.astype('uint16'), [10, 14, 15]), relay.reshape(var_4587.astype('float64'), [2464,]), ), 2)
call_4588 = relay.TupleGetItem(func_4158_call(relay.reshape(var_4586.astype('uint16'), [10, 14, 15]), relay.reshape(var_4586.astype('uint16'), [10, 14, 15]), relay.reshape(var_4587.astype('float64'), [2464,]), ), 2)
bop_4589 = relay.logical_or(bop_4580.astype('bool'), relay.reshape(call_4564.astype('bool'), relay.shape_of(bop_4580))) # shape=(13, 15, 13)
bop_4592 = relay.logical_or(bop_4583.astype('bool'), relay.reshape(call_4565.astype('bool'), relay.shape_of(bop_4583))) # shape=(13, 15, 13)
output = relay.Tuple([call_4585,var_4586,var_4587,bop_4589,])
output2 = relay.Tuple([call_4588,var_4586,var_4587,bop_4592,])
func_4593 = relay.Function([var_4586,var_4587,], output)
mod['func_4593'] = func_4593
mod = relay.transform.InferType()(mod)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4593_call = mutated_mod.get_global_var('func_4593')
var_4595 = relay.var("var_4595", dtype = "uint16", shape = (30, 70))#candidate|4595|(30, 70)|var|uint16
var_4596 = relay.var("var_4596", dtype = "float64", shape = (1232, 2))#candidate|4596|(1232, 2)|var|float64
call_4594 = func_4593_call(var_4595,var_4596,)
output = call_4594
func_4597 = relay.Function([var_4595,var_4596,], output)
mutated_mod['func_4597'] = func_4597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4489_call = mod.get_global_var('func_4489')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_4606 = func_4489_call()
call_4607 = func_4489_call()
output = call_4606
output2 = call_4607
func_4610 = relay.Function([], output)
mod['func_4610'] = func_4610
mod = relay.transform.InferType()(mod)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mutated_mod.get_global_var('func_4610')
call_4611 = func_4610_call()
output = call_4611
func_4612 = relay.Function([], output)
mutated_mod['func_4612'] = func_4612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_4613 = func_3704_call()
call_4614 = func_3704_call()
output = relay.Tuple([call_4613,])
output2 = relay.Tuple([call_4614,])
func_4616 = relay.Function([], output)
mod['func_4616'] = func_4616
mod = relay.transform.InferType()(mod)
output = func_4616()
func_4617 = relay.Function([], output)
mutated_mod['func_4617'] = func_4617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mod.get_global_var('func_4542')
func_4544_call = mutated_mod.get_global_var('func_4544')
call_4808 = relay.TupleGetItem(func_4542_call(), 0)
call_4809 = relay.TupleGetItem(func_4544_call(), 0)
func_271_call = mod.get_global_var('func_271')
func_275_call = mutated_mod.get_global_var('func_275')
const_4824 = relay.const([-7,-2,-4,-4,8,4,6,-8,-7,2,10,-10,1,-6,-9,-3,5,-9,-10,2,5,-6,7,1], dtype = "uint8")#candidate|4824|(24,)|const|uint8
const_4825 = relay.const([-3,-2,2,4,10,-8,-10,-10,1,-4,-8,8,-1,9,10,6,9,-10,-5,-10,8,8,10,-10,10,4,4,-3,7,-6,8,-2,-4,-9,-7,-2,8,6,9,-6,8,6,-2,-7,-3,-5,7,-7,10,-7,-6,3,-10,1,-2,8,-9,-4,-5,9,3,8,-3,-10,4,1,8,-5,2,-8,3,6,10,4,-10,5,8,5,10,-6,3,-6,1,9,-5,6,3,-1,-2,10,9,7,-9,-9,-6,-3,2,9,-1,5,-7,8,-4,3,-6,-10,-8,-10,-9,-6,-6,7,-10,-9,7,9,-6,-4,-5,-10,1,6,9,6,7,-7,3,-8,2,-6,-5,1,-1,4,3,9,-6,-3,2,-6,-3,1,9,-1], dtype = "uint8")#candidate|4825|(144,)|const|uint8
call_4823 = relay.TupleGetItem(func_271_call(relay.reshape(const_4824.astype('uint8'), [2, 12, 1]), relay.reshape(const_4825.astype('uint8'), [2, 12, 6]), ), 0)
call_4826 = relay.TupleGetItem(func_275_call(relay.reshape(const_4824.astype('uint8'), [2, 12, 1]), relay.reshape(const_4825.astype('uint8'), [2, 12, 6]), ), 0)
output = relay.Tuple([call_4808,call_4823,const_4824,const_4825,])
output2 = relay.Tuple([call_4809,call_4826,const_4824,const_4825,])
func_4837 = relay.Function([], output)
mod['func_4837'] = func_4837
mod = relay.transform.InferType()(mod)
mutated_mod['func_4837'] = func_4837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mutated_mod.get_global_var('func_4837')
call_4838 = func_4837_call()
output = call_4838
func_4839 = relay.Function([], output)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_4858 = relay.TupleGetItem(func_4837_call(), 0)
call_4859 = relay.TupleGetItem(func_4839_call(), 0)
func_3572_call = mod.get_global_var('func_3572')
func_3577_call = mutated_mod.get_global_var('func_3577')
const_4899 = relay.const([-3.716877,6.275867,9.701208,-4.632028,-7.521548,6.328074,8.627357,-9.478496,-5.866321,-1.482275,0.896959,-1.346729,-6.111782,2.793814,0.651349,-7.239036,4.089270,-0.999097,0.559203,8.921454,-7.900474,7.492761,5.500073,-3.455758,7.051663,-5.885793,-0.269650,-8.044331,1.018780,-2.240234,-2.544290,-5.726094,-4.256074,-9.646188,4.791769,-5.919564,-6.848905,8.852267,3.874279,1.999281,4.055080,2.923334,-7.404466,-8.812997,-4.863296,-2.358209,0.816467,-9.804926,-9.335843,-2.150065,-8.533969,1.382627,-7.052411,0.022323,-6.044214,-9.864251,-7.159604,0.694596,-8.843473,-7.382428,-1.643676,7.904716,6.096475,-2.016572,-1.412085,1.422945,2.321657,4.833023,-3.063410,9.158922,4.364469,-0.123266,8.291098,-9.518423,1.920991,-0.574395,-2.164544,5.228733,-1.181603,8.083554,-8.961559,3.799218,7.476033,6.703791,0.642778,9.887902,6.457675,-8.724827,9.729379,-4.106876,1.706705,6.579477,-3.829875,3.395958,-7.584004,5.770611,-0.600925,-6.100146,9.829708,4.011221,-4.533502,4.938661,-8.286153,-4.753844,-9.857872,-0.579306,-0.219706,2.134324,-8.567488,2.793736,6.319435,-3.684425,1.549617,-7.340100,-7.334380,-1.289967,-8.613046,-4.438150,3.688797,-7.203943,8.967571,-6.950361,-8.573886,-9.720562,-6.283380,8.914296,-8.374133,2.443596,-9.095119,-5.057101,8.425962,1.021884,-2.795488,-9.098800,0.255955,-6.073510,9.201252,-4.434995,-8.061896,8.729769,-8.700469,5.307838,-9.131309,-9.619484,-0.203582,6.715549,5.335974,1.364676,3.575104,-5.905731,-1.412434,3.749997,7.197907,-3.881502,7.502790,-7.122204,-7.456175,-7.386100,3.699829,-6.352370,-4.935255,3.029212,-2.877811,0.113577,1.712221,-3.916134,-4.737133,8.999380,2.790554,-7.857207,0.408647,-7.137459,-4.109675,-9.734787,-7.182232,0.880129,8.677921,-0.686070,1.750497,0.605832,3.139670,-1.238506,3.262429,8.918024,2.354998,2.209695,5.808125,5.801001,9.623322,9.105632,-9.064470,-7.476558,2.232729,9.216467,-1.170844,7.833741,9.006782,-3.463524,-6.413198,9.203066,0.562081,-6.353480,8.129005,-3.186722,-4.154000,-8.229088,-9.819956,-3.898954,5.537885,-8.565371,-4.055233,-9.967096,8.180494,-7.634676,-5.387133,-7.796237,9.604971,-3.011331,-9.982422,7.138795,-7.415933,7.649258,-9.505333,5.828640,8.411171,0.883087,8.429184,6.029341,-2.007225,-2.865212,-7.455673,-1.247386,-5.719802,-8.036722,4.573705,1.989029,4.470356,-7.401765,-9.260667,0.699427,1.353429,9.993578,-1.590035,-1.690610,-2.414186,-1.475952,5.068519,-6.186539,2.682612,-0.426423,-0.755485,2.546454,-7.747774,6.326728,7.524124,-2.690226,-3.333385,7.837019,4.662116,1.461124,9.759737,-2.490357,4.023876,-5.945399,1.201355,5.371589,-7.073707,5.195902,7.782214,1.528665,5.460672,9.449904,1.498348,8.469515,-8.663936,-5.318695,-9.607510,-3.753032,-8.800387,-0.139281,4.453097,7.956160,-2.608267,-5.003076,-4.094957,-3.495709,-0.695983,3.957941,8.164930,-6.578060,9.153735,2.113733,2.626075,9.853396,-4.705269,9.284633,-2.752330,9.258808,1.202605,-0.692603,3.091593,8.886725,-3.128060,8.142297,4.966204,-6.552277,-8.857776,-6.170143,0.531858,7.894238,-9.970194,-7.684321,-2.435097,9.986010,6.519486,8.738095,4.105730,-7.257014,5.956731,4.219301,3.171182,9.494779,1.907748,7.108463,-0.110634,-0.625773,1.460248,0.571115,-7.758884,6.314709,-7.341709,-6.334658,-2.975401,0.694657,-4.406255,-3.181467,-3.828033,3.097509,-4.987932,8.688832,-4.421321,8.361365,-7.545385,6.438252,9.832648,-2.063800,3.546087,0.947266,-8.616245,4.634317,6.982056,-2.955343,2.456048,1.867101,0.454902,-7.145761,-8.758684,6.433959,-9.426013,3.804926,-3.032007,2.830939,-8.083838,4.530124,-5.459822,8.430912,-6.675617,8.004273,-6.025824,2.317420,5.017251,2.956395,1.702397,-1.300930,8.889941,-8.602589,-0.137004,4.579398,-4.383907,2.489472,1.667515,4.752221,-7.927400,2.824049,8.098801,-4.524381,6.449019,9.642320,1.663943,-3.997897,8.260525,-1.661530,2.480575,8.152484,-4.681277,-2.627634,4.366780,6.814970,-1.117155,-1.055490,-7.193298,1.613812,-5.420030,-6.419033,-5.409255,-7.694246,5.478514,8.550449,-7.401622,8.304572,3.515452,-6.726043,8.294450,3.991574,5.514661,2.576036,-5.948979,8.958490,7.485359,-5.436562,-2.661925,-0.230609,2.975345,-8.608790,-0.262695,-3.805586,1.767364,-8.194902,6.571091,9.051907,-8.056954,-8.703272,7.686277,0.406327,1.899950,-6.550670,7.683385,-8.881825,4.076594,-6.066481,-6.771307,9.579922,-9.005053,-7.339267,1.619684,-9.605978,-4.268525,8.196683,-3.239048,8.659769,-0.297612,6.580497,-3.086552,9.778511,4.867958,2.077471,-0.973888,1.961238,-4.164953,-8.049450,2.324539,4.885078,3.992441,0.149149,-7.206680,-6.109041,9.675503,-7.465712,2.642471,9.891977,1.732620,-3.331807,7.550190,-5.339246,7.058899,-6.627354,2.471388,-7.812367,-1.555587,-5.110431,-6.769241,3.598939,9.245616,0.255620,5.579509,8.533257,9.517534,9.149390,5.936868,1.001100,-0.212528,-2.803857,5.262213,1.610707,-1.927741,-3.790141,-3.570298,-3.008757,3.850618,-2.332408,-3.916931,-8.329908,1.254291,4.675436,1.111822,8.231066,-5.754455,-9.759351,-5.235879,8.455579,1.014151,-9.516043,1.423914,3.738571,-9.320117,-4.781217,9.130436,7.292623,-8.391954,-5.944985,5.258718,2.051405,5.816957,0.626526,0.677639,-5.728388,6.857774,-3.722324,-9.798639,8.482265,3.291082,8.900878,-3.589104,4.951995,5.137654,1.205403,1.064308,-3.578218,-6.364347,7.723660,-5.650134,-9.537832,-7.468212,5.069398,9.434675,6.128239,-3.793626,1.224122,5.221320,6.173745,-4.301348,9.595697,4.135107,-9.540103,-2.840195,-4.420268,-8.825855,-6.941670,4.780423,0.093914,-3.268261,-7.931846,1.802982,-1.195770,-9.926768,-4.268163,-2.985586,3.220505,2.088498,9.767471,8.849421,2.906050,-6.332112,-1.665838,9.576044,-9.953528,-8.321596,-3.971008,6.047251,4.490061,-0.213322,-7.325314,3.685543,-4.738780,-4.760003,-4.999067,0.573773,6.085812], dtype = "float32")#candidate|4899|(588,)|const|float32
const_4900 = relay.const([[0.460604,2.478640],[0.426263,-3.463532],[-7.999910,-4.489251],[5.322228,-0.429301],[8.669542,0.448284],[-3.364459,2.102495],[-5.754319,8.403807],[5.649303,-3.076603],[1.508398,-5.173361],[-0.965058,6.581635],[2.003392,6.084986],[4.708902,-7.442804],[-3.491604,1.142877],[6.213805,-0.739402],[3.465279,-4.579524],[-9.765556,2.006164],[-3.610993,8.264006],[-9.687897,0.190333],[-9.394192,-7.970399],[1.327270,-4.219587],[-5.009787,-8.207191],[-6.279401,-3.078393],[8.933543,-4.021954],[0.250603,7.533729],[8.507004,-1.580734],[2.523415,1.758654],[-0.968286,1.930245],[3.351602,-8.066427],[5.627601,8.384873],[9.629100,-1.936749],[-8.975457,2.335319],[-6.167870,8.985411],[5.329852,-9.210053],[4.030799,-8.678381],[3.454379,5.848625],[-5.489571,1.233507],[6.236306,0.889153],[-8.706830,4.890231],[9.796371,-1.268794],[2.184438,9.396811],[4.126820,2.937293],[-5.418413,-5.104756],[4.717132,-4.739127],[9.427034,-2.805948],[-3.716347,-0.358913],[9.290687,7.983636],[-7.501111,-3.509367],[7.624621,-0.117473],[8.205982,5.374489],[2.500555,-5.554178],[-5.723985,-9.559350],[-7.026071,-2.734462],[5.214112,5.328363],[-5.456807,4.135691],[-3.673977,-4.087069],[6.483538,-3.363273],[-3.449082,-4.547983],[1.696081,-3.595457],[6.152825,-3.719642],[0.088090,-2.085753],[0.301823,3.986431],[-8.574668,-7.764730],[6.433922,-8.130803],[3.582554,5.228154],[6.274208,1.009223],[-9.833343,-8.429739],[4.791151,7.928053],[7.014982,9.693941],[7.268856,-3.653044],[4.633102,-0.332108],[5.061233,2.376141],[2.489295,-9.895677],[0.038765,-2.510961],[0.062290,8.103430],[8.002114,-7.282211],[3.239612,7.713700],[-2.251477,-8.484588],[-1.039579,-8.303833],[-2.717451,-4.065897],[1.306539,-7.576341],[-2.291244,-9.656934],[4.281334,-4.386552],[4.984234,4.748450],[-4.145214,7.167366],[-4.807907,-2.626918],[7.065103,-8.934981],[9.516354,1.234985],[3.736565,5.085954],[-4.180104,7.465926],[9.097452,-6.158256],[-6.719805,7.117938],[-6.003555,-8.672609],[5.662011,1.236756],[6.774572,-2.163611],[-5.715498,4.307094],[9.404572,-2.786272],[2.920347,4.243911],[1.974941,4.078827],[8.267169,0.538659],[6.502877,-7.049277],[-1.423826,2.582901],[6.200747,-0.957274],[-4.925595,3.285444],[-5.533931,6.690881],[9.015212,1.505775],[5.312850,6.984880],[9.867310,-4.878496],[-1.149761,7.008712],[1.486318,-9.262873],[-4.739886,-6.351635],[1.648276,-6.446431],[0.445838,1.423778],[-4.761556,-8.802688],[1.792743,-2.009537],[-8.682455,8.438020],[8.215715,0.676462],[-4.781821,7.308990],[7.632796,4.008737],[8.437660,-0.152490],[3.198570,-2.025227],[-6.534754,2.535623],[-3.185309,8.274172],[1.918154,6.650960],[3.506294,9.019068],[-0.685830,3.048809],[-7.241406,-7.828322],[-9.354552,7.113689],[-2.289101,-7.081879],[-0.196141,-7.638101],[8.373614,7.043445],[6.117110,-4.976332],[2.656184,-4.051160],[-4.638445,3.179009],[-5.513945,8.006128],[8.501458,-4.931202],[-1.403006,-1.972185],[0.234001,8.239667],[-1.422844,0.485734],[2.378743,9.589574],[2.994840,-6.292973],[3.986838,-1.971429],[-6.609154,-7.872299],[-8.581139,5.832765],[9.703055,7.402135]], dtype = "float32")#candidate|4900|(144, 2)|const|float32
call_4898 = relay.TupleGetItem(func_3572_call(relay.reshape(const_4899.astype('float32'), [7, 6, 14]), relay.reshape(const_4900.astype('float32'), [288,]), relay.reshape(const_4899.astype('float32'), [7, 6, 14]), relay.reshape(const_4899.astype('float32'), [7, 6, 14]), ), 6)
call_4901 = relay.TupleGetItem(func_3577_call(relay.reshape(const_4899.astype('float32'), [7, 6, 14]), relay.reshape(const_4900.astype('float32'), [288,]), relay.reshape(const_4899.astype('float32'), [7, 6, 14]), relay.reshape(const_4899.astype('float32'), [7, 6, 14]), ), 6)
var_4902 = relay.var("var_4902", dtype = "bool", shape = (7, 6, 14))#candidate|4902|(7, 6, 14)|var|bool
bop_4903 = relay.greater_equal(call_4898.astype('bool'), relay.reshape(var_4902.astype('bool'), relay.shape_of(call_4898))) # shape=(7, 6, 14)
bop_4906 = relay.greater_equal(call_4901.astype('bool'), relay.reshape(var_4902.astype('bool'), relay.shape_of(call_4901))) # shape=(7, 6, 14)
func_4512_call = mod.get_global_var('func_4512')
func_4514_call = mutated_mod.get_global_var('func_4514')
var_4910 = relay.var("var_4910", dtype = "float32", shape = (22, 66))#candidate|4910|(22, 66)|var|float32
call_4909 = relay.TupleGetItem(func_4512_call(relay.reshape(var_4910.astype('float32'), [1452,])), 0)
call_4911 = relay.TupleGetItem(func_4514_call(relay.reshape(var_4910.astype('float32'), [1452,])), 0)
output = relay.Tuple([call_4858,const_4899,const_4900,bop_4903,call_4909,var_4910,])
output2 = relay.Tuple([call_4859,const_4899,const_4900,bop_4906,call_4911,var_4910,])
func_4915 = relay.Function([var_4902,var_4910,], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
var_4916 = relay.var("var_4916", dtype = "bool", shape = (7, 6, 14))#candidate|4916|(7, 6, 14)|var|bool
var_4917 = relay.var("var_4917", dtype = "float32", shape = (22, 66))#candidate|4917|(22, 66)|var|float32
output = func_4915(var_4916,var_4917,)
func_4918 = relay.Function([var_4916,var_4917,], output)
mutated_mod['func_4918'] = func_4918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mod.get_global_var('func_4610')
func_4612_call = mutated_mod.get_global_var('func_4612')
call_4985 = func_4610_call()
call_4986 = func_4610_call()
output = relay.Tuple([call_4985,])
output2 = relay.Tuple([call_4986,])
func_4990 = relay.Function([], output)
mod['func_4990'] = func_4990
mod = relay.transform.InferType()(mod)
output = func_4990()
func_4991 = relay.Function([], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_5004 = relay.TupleGetItem(func_4837_call(), 1)
call_5005 = relay.TupleGetItem(func_4839_call(), 1)
uop_5007 = relay.tan(call_5004.astype('float64')) # shape=(2, 12, 6)
uop_5009 = relay.tan(call_5005.astype('float64')) # shape=(2, 12, 6)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
const_5016 = relay.const(-10, dtype = "uint16")#candidate|5016|()|const|uint16
var_5017 = relay.var("var_5017", dtype = "uint16", shape = (72,))#candidate|5017|(72,)|var|uint16
call_5015 = func_392_call(relay.reshape(const_5016.astype('uint16'), []), relay.reshape(var_5017.astype('uint16'), [3, 4, 6]), )
call_5018 = func_392_call(relay.reshape(const_5016.astype('uint16'), []), relay.reshape(var_5017.astype('uint16'), [3, 4, 6]), )
output = relay.Tuple([uop_5007,call_5015,const_5016,var_5017,])
output2 = relay.Tuple([uop_5009,call_5018,const_5016,var_5017,])
func_5026 = relay.Function([var_5017,], output)
mod['func_5026'] = func_5026
mod = relay.transform.InferType()(mod)
var_5027 = relay.var("var_5027", dtype = "uint16", shape = (72,))#candidate|5027|(72,)|var|uint16
output = func_5026(var_5027)
func_5028 = relay.Function([var_5027], output)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_5040 = relay.TupleGetItem(func_4837_call(), 0)
call_5041 = relay.TupleGetItem(func_4839_call(), 0)
func_5026_call = mod.get_global_var('func_5026')
func_5028_call = mutated_mod.get_global_var('func_5028')
const_5045 = relay.const([[-7,-10,-2,-7,9,-4,-7,-4,-1,2,8,-10,-1,-7,-4,-4,9,-8,-3,5,9,6,6,4,1,-1,-1,7,-1,-10,-1,-5,-10,-1,-10,-6,-4,4,2,-9,3,1,-4,-5,5,7,-2,6,7,-7,-4,5,-3,1,-6,-10,4,-2,2,-1,-5,-2,-3,8,-6,9,8,-9,1,-8,-10,-8]], dtype = "uint16")#candidate|5045|(1, 72)|const|uint16
call_5044 = relay.TupleGetItem(func_5026_call(relay.reshape(const_5045.astype('uint16'), [72,])), 2)
call_5046 = relay.TupleGetItem(func_5028_call(relay.reshape(const_5045.astype('uint16'), [72,])), 2)
uop_5048 = relay.log(call_5040.astype('float64')) # shape=(13, 15, 13)
uop_5050 = relay.log(call_5041.astype('float64')) # shape=(13, 15, 13)
bop_5064 = relay.multiply(const_5045.astype('int64'), call_5044.astype('int64')) # shape=(1, 72)
bop_5067 = relay.multiply(const_5045.astype('int64'), call_5046.astype('int64')) # shape=(1, 72)
func_2658_call = mod.get_global_var('func_2658')
func_2662_call = mutated_mod.get_global_var('func_2662')
var_5075 = relay.var("var_5075", dtype = "uint32", shape = (242,))#candidate|5075|(242,)|var|uint32
call_5074 = relay.TupleGetItem(func_2658_call(relay.reshape(var_5075.astype('uint32'), [2, 11, 11]), relay.reshape(var_5075.astype('uint32'), [2, 11, 11]), ), 0)
call_5076 = relay.TupleGetItem(func_2662_call(relay.reshape(var_5075.astype('uint32'), [2, 11, 11]), relay.reshape(var_5075.astype('uint32'), [2, 11, 11]), ), 0)
func_4990_call = mod.get_global_var('func_4990')
func_4991_call = mutated_mod.get_global_var('func_4991')
call_5089 = relay.TupleGetItem(func_4990_call(), 0)
call_5090 = relay.TupleGetItem(func_4991_call(), 0)
func_4176_call = mod.get_global_var('func_4176')
func_4178_call = mutated_mod.get_global_var('func_4178')
call_5093 = func_4176_call()
call_5094 = func_4176_call()
func_2251_call = mod.get_global_var('func_2251')
func_2254_call = mutated_mod.get_global_var('func_2254')
var_5096 = relay.var("var_5096", dtype = "float64", shape = (840, 2))#candidate|5096|(840, 2)|var|float64
var_5097 = relay.var("var_5097", dtype = "int64", shape = (2112,))#candidate|5097|(2112,)|var|int64
call_5095 = relay.TupleGetItem(func_2251_call(relay.reshape(var_5096.astype('float64'), [14, 10, 12]), relay.reshape(var_5097.astype('int64'), [2112,]), ), 6)
call_5098 = relay.TupleGetItem(func_2254_call(relay.reshape(var_5096.astype('float64'), [14, 10, 12]), relay.reshape(var_5097.astype('int64'), [2112,]), ), 6)
func_3520_call = mod.get_global_var('func_3520')
func_3524_call = mutated_mod.get_global_var('func_3524')
var_5118 = relay.var("var_5118", dtype = "float64", shape = (1, 1183))#candidate|5118|(1, 1183)|var|float64
call_5117 = relay.TupleGetItem(func_3520_call(relay.reshape(call_5040.astype('float32'), [13, 15, 13]), relay.reshape(var_5118.astype('float64'), [1183,]), ), 5)
call_5119 = relay.TupleGetItem(func_3524_call(relay.reshape(call_5040.astype('float32'), [13, 15, 13]), relay.reshape(var_5118.astype('float64'), [1183,]), ), 5)
output = relay.Tuple([uop_5048,bop_5064,call_5074,var_5075,call_5089,call_5093,call_5095,var_5096,var_5097,call_5117,var_5118,])
output2 = relay.Tuple([uop_5050,bop_5067,call_5076,var_5075,call_5090,call_5094,call_5098,var_5096,var_5097,call_5119,var_5118,])
func_5123 = relay.Function([var_5075,var_5096,var_5097,var_5118,], output)
mod['func_5123'] = func_5123
mod = relay.transform.InferType()(mod)
var_5124 = relay.var("var_5124", dtype = "uint32", shape = (242,))#candidate|5124|(242,)|var|uint32
var_5125 = relay.var("var_5125", dtype = "float64", shape = (840, 2))#candidate|5125|(840, 2)|var|float64
var_5126 = relay.var("var_5126", dtype = "int64", shape = (2112,))#candidate|5126|(2112,)|var|int64
var_5127 = relay.var("var_5127", dtype = "float64", shape = (1, 1183))#candidate|5127|(1, 1183)|var|float64
output = func_5123(var_5124,var_5125,var_5126,var_5127,)
func_5128 = relay.Function([var_5124,var_5125,var_5126,var_5127,], output)
mutated_mod['func_5128'] = func_5128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5172 = relay.var("var_5172", dtype = "float64", shape = (7, 3, 2))#candidate|5172|(7, 3, 2)|var|float64
var_5173 = relay.var("var_5173", dtype = "float64", shape = (7, 3, 2))#candidate|5173|(7, 3, 2)|var|float64
bop_5174 = relay.less_equal(var_5172.astype('bool'), relay.reshape(var_5173.astype('bool'), relay.shape_of(var_5172))) # shape=(7, 3, 2)
output = relay.Tuple([bop_5174,])
output2 = relay.Tuple([bop_5174,])
func_5187 = relay.Function([var_5172,var_5173,], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
var_5188 = relay.var("var_5188", dtype = "float64", shape = (7, 3, 2))#candidate|5188|(7, 3, 2)|var|float64
var_5189 = relay.var("var_5189", dtype = "float64", shape = (7, 3, 2))#candidate|5189|(7, 3, 2)|var|float64
output = func_5187(var_5188,var_5189,)
func_5190 = relay.Function([var_5188,var_5189,], output)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5200 = relay.var("var_5200", dtype = "uint32", shape = ())#candidate|5200|()|var|uint32
var_5201 = relay.var("var_5201", dtype = "uint32", shape = (2, 1))#candidate|5201|(2, 1)|var|uint32
bop_5202 = relay.equal(var_5200.astype('bool'), var_5201.astype('bool')) # shape=(2, 1)
func_3188_call = mod.get_global_var('func_3188')
func_3190_call = mutated_mod.get_global_var('func_3190')
const_5208 = relay.const([True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True], dtype = "bool")#candidate|5208|(2535,)|const|bool
call_5207 = relay.TupleGetItem(func_3188_call(relay.reshape(const_5208.astype('bool'), [13, 15, 13])), 0)
call_5209 = relay.TupleGetItem(func_3190_call(relay.reshape(const_5208.astype('bool'), [13, 15, 13])), 0)
bop_5218 = relay.bitwise_or(bop_5202.astype('int64'), const_5208.astype('int64')) # shape=(2, 2535)
func_271_call = mod.get_global_var('func_271')
func_275_call = mutated_mod.get_global_var('func_275')
const_5222 = relay.const([3,1,-3,4,1,3,-2,-9,2,8,3,8,5,8,-5,9,6,-7,-6,6,-3,-9,-7,-7], dtype = "uint8")#candidate|5222|(24,)|const|uint8
var_5223 = relay.var("var_5223", dtype = "uint8", shape = (144,))#candidate|5223|(144,)|var|uint8
call_5221 = relay.TupleGetItem(func_271_call(relay.reshape(const_5222.astype('uint8'), [2, 12, 1]), relay.reshape(var_5223.astype('uint8'), [2, 12, 6]), ), 0)
call_5224 = relay.TupleGetItem(func_275_call(relay.reshape(const_5222.astype('uint8'), [2, 12, 1]), relay.reshape(var_5223.astype('uint8'), [2, 12, 6]), ), 0)
func_3520_call = mod.get_global_var('func_3520')
func_3524_call = mutated_mod.get_global_var('func_3524')
const_5229 = relay.const([2.637937,-0.650397,6.846102,5.051566,1.469367,-9.077504,-4.940291,5.078966,7.172353,-0.668865,8.215927,-3.168594,6.440594,2.298316,-4.300689,-3.934472,-0.832386,-5.847014,7.628183,7.181873,7.472348,3.961918,-2.638283,6.044010,-6.775275,-3.313875,-6.062735,0.345943,3.102536,-7.185335,8.635293,3.611408,2.692210,-3.937219,6.001326,8.221406,7.673160,-9.088376,-0.276127,9.061729,6.808427,-6.105442,-7.894977,5.596005,-0.191058,-0.601560,-3.879057,9.755909,2.802506,-3.641243,3.142858,-2.777445,2.253957,-6.393573,-0.627331,-4.218814,-1.500504,-3.437515,-3.487480,-2.450112,8.553171,-4.958821,-3.319526,-2.830408,3.136694,-0.989173,-8.120888,4.637243,9.140298,8.700668,8.894168,0.490502,-8.695623,1.041942,7.350111,1.404178,-2.787647,-2.896326,7.468256,-5.543205,3.769418,1.718521,7.705229,6.977041,6.583053,4.339137,-6.798722,-0.716648,-0.797461,3.344866,5.690202,-1.857661,2.666130,-9.746323,7.339760,6.316628,8.800529,2.995271,-3.521928,4.194987,1.049371,-2.681745,7.104676,0.438126,-4.796003,2.276984,5.448285,6.543072,-1.693771,-6.634783,1.516902,-7.504769,-5.654770,4.332305,4.211693,-8.197269,4.777426,-2.036607,2.637292,-7.057799,1.157797,9.013106,-7.828142,8.762132,-5.818119,-8.721824,8.478341,-7.903257,-3.405748,-3.278910,-5.915156,0.815998,-4.104138,-3.420272,4.371507,8.647154,-2.206098,3.073508,-5.471858,7.134690,-9.743880,-1.818850,6.495288,-7.924599,-7.987096,8.100520,2.660880,6.008706,-2.920421,-0.565480,-0.228515,-2.054823,-9.180491,0.453406,-5.441937,-3.876530,1.852642,3.183024,9.636907,-3.395700,-1.976123,8.731303,-8.429112,3.997847,-5.785423,-2.143176,-3.105473,-4.035431,5.599653,5.875265,-2.895891,-5.577765,-5.333595,-0.938205,3.957184,2.523187,-1.530762,-7.227048,1.583262,-6.494201,7.234241,4.170326,0.475740,-0.418170,2.769154,2.381340,5.277598,6.659127,7.422640,-2.555183,7.508397,-0.523594,-2.807034,-1.728475,4.164485,5.901605,-9.539476,-7.520380,-0.652440,-6.120940,-4.751548,-5.608194,6.939813,6.684792,3.615211,-5.198611,8.580813,3.119228,1.960396,-1.115117,-0.142961,0.689728,-7.123311,-3.422052,-2.792377,-3.196631,-0.617824,3.140287,8.512684,-6.396398,-8.593857,9.652736,-7.518550,9.510285,-2.647890,-0.107189,1.076426,8.515463,7.778243,3.677179,-2.738872,-1.675088,-2.154635,0.578558,-2.925573,-4.479149,-1.710492,-5.359051,-3.361558,-2.294913,7.645221,9.050031,-8.414059,-3.916237,1.738315,7.764303,-5.093285,-1.238239,3.106326,-2.280700,-1.597429,-8.431271,-8.205338,8.619138,-3.712675,5.835937,-2.321562,4.266738,-4.429671,-9.534339,9.058534,1.516988,0.252614,-8.701953,2.425226,-9.306334,8.485036,-4.827859,6.223792,0.190361,8.778300,-6.096807,9.867747,-6.331041,6.552136,0.615452,3.120105,-1.597108,6.295531,3.009390,1.255167,-3.500610,5.033954,-2.901656,-2.893272,-8.681381,3.967717,9.862715,-9.595824,-1.915263,-7.169246,-8.542820,-9.842386,-2.667084,9.858930,5.210952,2.468532,-9.969644,-6.362742,6.323104,-9.199648,2.795773,-6.859228,-3.117269,-0.605918,1.149685,2.324298,-8.619731,-0.296625,7.116181,5.976626,3.541863,-1.719125,9.677131,-5.305855,2.594800,-3.570535,-7.575470,4.983548,-7.641455,0.611710,-9.120394,9.976143,3.335752,6.837846,-6.534072,3.338758,0.875757,6.601154,-9.043207,4.891819,-3.945578,-2.499143,7.762334,4.548417,-9.313955,7.841452,3.184687,1.878234,-3.856669,9.342168,7.858438,-6.712676,-4.239738,4.202219,-9.228874,-1.225946,9.396997,1.458497,-5.962991,-2.420700,-3.382875,6.941756,-0.751039,-4.764829,6.540417,7.788010,-5.748999,7.846454,0.459238,4.107327,-6.996339,-6.802318,0.943289,-7.476800,6.849922,-0.359819,-3.941891,9.502731,-9.312669,6.097255,-5.373286,6.811531,5.610289,8.299324,6.717503,-4.340689,8.661393,8.575905,-9.639533,-2.661800,-1.689877,3.599991,1.849186,-9.296141,-3.066346,7.495188,-2.431168,4.404811,-3.909833,1.555407,-3.469189,0.464487,-4.845141,-0.281758,-1.860819,-1.419380,9.204086,2.084233,8.313231,-0.332064,5.637831,-0.001678,-4.208126,0.272158,-3.788399,6.067839,-9.256412,-6.253006,1.448504,-8.060106,-0.460131,8.288242,-5.086449,-7.552299,-8.524891,-4.435517,-0.496190,8.557189,-3.155333,3.339228,3.319080,2.958999,6.315178,2.890606,-9.410209,-9.332494,-7.633559,-5.081983,-9.278600,-9.242238,-2.791863,3.164260,7.664562,0.401710,8.572474,3.847993,1.914518,8.357548,-2.980065,-9.060645,-5.964492,0.782816,-1.321617,5.337376,-2.598909,5.092481,-9.633414,-5.039704,5.406698,-9.997495,-4.462245,-7.254035,-6.676572,8.715188,-3.436738,-6.244092,-9.479773,1.499144,0.825647,-9.454242,1.941047,-3.048886,-1.540530,8.201547,2.377382,-8.922598,7.834960,4.846017,-1.640482,7.644414,-6.686389,7.031385,4.853099,4.583172,-2.539688,6.472732,1.531803,2.809190,-3.921520,-9.407642,-1.545259,3.868212,7.416501,-7.265287,0.962212,-4.357759,9.744400,6.222118,-6.570210,9.868381,-6.119907,-4.756565,2.099278,5.898867,6.234167,5.192064,-6.403762,8.302168,6.058798,-3.443070,4.882136,3.002440,-2.771543,-2.657792,0.663736,9.903356,-2.112995,-9.807985,-8.172709,7.568499,4.500625,4.037392,2.165172,3.937017,-8.583116,-0.969797,-9.562517,-0.507562,-7.781361,1.520317,6.313632,8.038651,8.363858,9.524472,1.276674,0.901362,9.382123,-3.877415,8.970220,8.024388,3.883862,-3.470872,0.641994,5.323999,4.970540,-0.982624,6.185861,-0.324006,4.738317,-9.577173,-0.734729,0.837136,3.591138,-2.823828,8.944285,-6.331465,4.749704,-6.715420,-6.131305,-7.136899,-7.436834,-7.759112,-9.787666,-8.749631,-8.739243,-0.634849,-5.093636,-6.441878,-8.768872,2.113302,-0.372506,-8.801813,-2.617547,3.510632,-7.074069,-6.646421,-8.654869,8.424856,5.940706,-3.814329,-8.409845,-5.277236,-0.316468,-8.411790,6.727348,-1.135595,-0.462971,-5.804926,0.742409,7.136365,1.014931,-7.557141,-1.203490,4.936113,-2.784405,2.456946,-4.639594,4.162390,-4.934786,0.642060,7.196788,0.197219,8.749482,-6.967173,0.535954,-7.892935,9.284430,-1.159860,-3.904016,0.677166,7.102961,-7.247592,-3.081740,-7.045555,7.318163,5.984898,8.549803,-1.944359,-5.920161,6.508887,-3.252082,-7.449772,7.714232,6.254034,-4.134949,-5.017575,2.012734,-0.477007,-7.461199,-1.621203,-6.454567,0.744334,5.371770,-9.354453,-3.122256,5.207816,-9.086126,7.958680,0.227066,4.927496,6.838941,0.333794,-1.724637,3.224577,9.829759,5.540550,9.873064,7.124400,-5.878303,-6.486417,-0.205105,-1.756161,1.331965,-2.628041,-2.207909,8.730576,4.149627,3.251079,-3.141821,-4.231831,-3.931638,0.678228,-2.512150,-8.726917,2.236045,-3.485667,0.277076,-4.444128,-0.300965,5.092894,-2.971340,-7.858292,9.050459,-6.931571,-6.801724,9.428698,-9.125705,-3.240514,-7.896576,1.616901,7.475452,2.220917,-5.586504,-7.048353,-3.584905,-7.674066,-5.627008,-0.636081,-2.950310,5.285514,5.342720,4.624997,0.217110,2.422501,0.202887,7.404249,-2.816808,3.351817,-1.800927,4.137662,8.448338,-3.084203,-5.179352,3.120448,4.841459,-5.235795,-3.820662,-7.059287,2.751526,0.168988,-0.780061,-1.400872,6.950028,-0.550988,2.513589,-6.593407,3.763246,-4.937349,6.261495,-4.561228,-5.496341,0.043001,-0.672981,-8.006501,4.149213,-1.881617,4.211246,-6.039792,-2.763705,-7.198341,-2.132162,-2.428154,4.912417,-4.812928,4.318362,4.817499,6.996846,-7.896237,-1.794432,6.753852,-0.781450,-1.682581,-7.386532,-6.593883,7.524632,-0.248495,8.236469,7.390012,0.642126,0.538625,-2.347142,-5.445497,6.209550,5.337227,-6.871396,-4.063116,0.783970,-3.449253,6.076915,-7.149857,9.181319,8.162305,-2.256924,-2.420180,-0.533168,-0.168568,-2.652507,-9.955761,0.178839,-1.685579,-2.805291,-9.271741,8.548228,-9.809706,8.773195,9.966600,1.498080,0.966505,2.109103,-2.734664,7.216793,-0.858055,1.252354,8.758411,-6.887557,-8.288693,-8.597848,-3.950503,8.934640,6.976950,-2.541280,-3.238684,9.724726,4.856355,2.863473,-3.481820,-9.613612,-0.655430,4.701655,-6.498575,5.548817,-3.537342,5.715917,6.404711,9.750721,5.815501,8.040157,-6.654548,8.968710,9.463640,4.830576,9.666609,-2.937829,2.020141,4.232378,-1.216218,2.313361,2.005697,4.895330,2.816634,5.757409,-8.307385,-7.116372,3.352598,-0.328569,-9.903130,-4.702228,5.032460,-8.543284,-7.406676,-8.784321,-1.468097,1.948781,-5.699428,4.675556,-5.723869,-4.009229,7.743982,4.504001,-7.938555,-1.940979,3.705359,-5.914229,7.742611,7.140681,2.091927,-7.701570,9.230513,4.270045,7.943965,-3.100921,7.489442,-9.077989,6.758554,7.338993,-3.575566,9.073418,-1.945495,-9.546701,-1.691789,8.319008,-2.705490,9.348834,8.368179,5.248474,3.269788,-8.162285,4.215973,-9.653687,-2.192821,-7.803633,2.458522,-8.986039,-7.449058,8.263874,6.630717,-9.914091,7.252986,1.835606,-4.683520,4.778303,-1.286687,-3.544681,-1.820369,5.061531,-5.351873,0.300554,1.649703,6.694483,6.403958,-4.367786,9.376834,-3.479065,-0.794609,4.176634,-2.922253,7.581501,2.118006,-7.601755,-6.216949,-9.492304,-0.426098,-4.753065,-0.437392,5.069762,-8.715717,-1.745850,-6.702566,-9.442954,-6.933638,7.870052,-1.579369,-9.567777,-9.806333,-7.764213,-2.887341,9.824244,-5.502216,-6.645532,5.320786,-0.652071,9.996756,3.569937,3.347186,-8.918940,1.246210,4.815040,-2.473332,9.630581,-5.688565,6.362843,7.453535,7.157485,-6.733342,-1.959592,0.661650,-2.118152,7.536453,-2.559253,8.871552,-4.627598,-6.540577,8.140081,8.171532,4.443272,-3.963670,-7.880602,1.323516,6.899056,6.788883,8.921113,7.791441,2.595244,4.357598,4.369473,5.189732,-6.674465,0.819193,-5.984008,-1.152436,1.382952,5.653063,-3.931781,3.252554,-2.194042,2.739458,-6.196415,6.768437,2.223934,7.427720,-7.098415,8.248686,1.230831,-0.158554,9.646494,2.441615,4.281760,4.513201,-1.709989,9.959561,3.451210,-5.516156,7.924748,-6.232175,4.813285,-8.501979,-4.021009,-9.124847,-2.690486,5.926260,8.178435,-9.813238,9.992554,0.390705,7.762092,2.951787,3.542863,-1.749064,8.912019,-4.521973,-4.669794,-7.089265,-2.838923,-5.291018,2.311698,-9.329726,6.709158,3.200456,-7.403677,-7.417007,-3.885878,8.591109,9.233749,-0.875938,-9.585775,8.815587,7.811626,1.808073,-0.939273,1.915559,7.599875,2.090267,-2.758172,-2.209900,2.559751,-4.287937,-5.833516,5.821891,8.749721,-8.083038,-0.148339,7.195295,-9.929347,7.313659,-1.662673,-5.382136,7.574985,-4.857909,9.777449,-5.315174,8.699114,-9.590778,-5.851608,-9.951371,9.818370,3.194525,-0.213690,-8.070157,6.935740,-2.871720,-3.472363,-6.943338,-9.450154,9.515479,4.328082,-1.757673,2.393137,-0.683286,-0.663123,7.242339,6.801362,-6.379554,9.291779,-9.485010,-9.073167,6.795724,-8.364071,-3.992417,-2.088379,-0.670722,-6.451191,5.741313,8.151765,6.469564,-8.730964,5.901361,-8.740698,5.182480,-8.426503,-9.190093,-6.447396,8.883763,2.997572,3.801482,-4.380945,7.017439,-3.577109,-3.837804,-7.965433,-1.342666,-6.414891,3.471239,4.963419,9.907214,-2.546532,-7.340866,8.566789,9.915978,-2.236999,-3.978549,-8.168658,2.294260,-9.077707,-8.436418,2.226047,1.780158,6.895163,-9.043619,-2.962858,-4.412936,-5.141503,8.308207,6.235205,-5.034037,-2.933422,-1.931246,0.263045,6.241999,9.676947,-9.558787,-6.299746,-1.754477,-1.511656,-2.125308,-1.108646,-8.561671,-6.386928,-7.751970,-5.195418,3.934834,-3.540704,-5.342660,3.465084,8.115653,7.559371,1.667699,-4.865223,2.180435,2.151677,3.736847,4.631450,-6.367223,5.931469,4.871756,6.038360,-5.949453,-5.907369,8.796776,3.339554,-6.451980,3.621270,-1.323997,3.637943,-8.591114,-1.429417,9.171725,2.535086,3.151608,-1.207126,8.028597,1.025952,7.779491,-8.813856,9.569556,-0.085745,-8.881396,9.630294,2.203821,3.284556,2.647265,9.696881,3.031594,-0.839613,7.686098,0.063442,5.805983,3.854852,-6.253384,4.358821,9.565160,0.455517,3.745234,-8.494417,8.456666,1.943698,7.359915,2.008432,7.430017,9.969089,4.874211,1.467006,9.206857], dtype = "float64")#candidate|5229|(1183,)|const|float64
call_5228 = relay.TupleGetItem(func_3520_call(relay.reshape(const_5208.astype('float32'), [13, 15, 13]), relay.reshape(const_5229.astype('float64'), [1183,]), ), 3)
call_5230 = relay.TupleGetItem(func_3524_call(relay.reshape(const_5208.astype('float32'), [13, 15, 13]), relay.reshape(const_5229.astype('float64'), [1183,]), ), 3)
output = relay.Tuple([call_5207,bop_5218,call_5221,const_5222,var_5223,call_5228,const_5229,])
output2 = relay.Tuple([call_5209,bop_5218,call_5224,const_5222,var_5223,call_5230,const_5229,])
func_5235 = relay.Function([var_5200,var_5201,var_5223,], output)
mod['func_5235'] = func_5235
mod = relay.transform.InferType()(mod)
mutated_mod['func_5235'] = func_5235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5235_call = mutated_mod.get_global_var('func_5235')
var_5237 = relay.var("var_5237", dtype = "uint32", shape = ())#candidate|5237|()|var|uint32
var_5238 = relay.var("var_5238", dtype = "uint32", shape = (2, 1))#candidate|5238|(2, 1)|var|uint32
var_5239 = relay.var("var_5239", dtype = "uint8", shape = (144,))#candidate|5239|(144,)|var|uint8
call_5236 = func_5235_call(var_5237,var_5238,var_5239,)
output = call_5236
func_5240 = relay.Function([var_5237,var_5238,var_5239,], output)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5242 = relay.TupleGetItem(func_3820_call(), 0)
call_5243 = relay.TupleGetItem(func_3821_call(), 0)
uop_5254 = relay.asin(call_5242.astype('float32')) # shape=(13, 15, 13)
uop_5256 = relay.asin(call_5243.astype('float32')) # shape=(13, 15, 13)
func_5123_call = mod.get_global_var('func_5123')
func_5128_call = mutated_mod.get_global_var('func_5128')
const_5264 = relay.const([[-9,2,-3,1,8,-10,-3,-1,-9,6,-3,-5,4,5,-9,1,-10,-3,-3,-9,-2,2],[-5,-8,1,-10,-1,-9,9,3,6,10,-6,-9,5,1,-6,-3,-8,-7,4,-5,2,-2],[-9,1,-6,1,3,-4,-9,-8,-10,6,-3,-8,10,-4,9,-5,8,2,-8,9,-5,2],[9,-9,-2,-8,-9,3,-2,-6,-2,9,-9,-5,6,-10,8,6,-3,-6,-1,-1,-3,-2],[3,7,-10,-5,-7,-8,6,-5,2,-10,6,10,-2,-8,5,-1,-9,-4,-3,8,3,3],[3,-4,9,10,1,1,-10,8,10,-6,8,-7,-2,10,-2,5,-3,2,4,-5,1,8],[-4,1,-8,4,8,6,10,-5,1,10,8,5,-6,-9,-8,-10,-5,-8,-7,-6,8,5],[10,-10,10,6,-6,4,-3,10,-9,-4,1,-5,8,5,5,-2,2,7,-6,3,-8,-3],[-7,-2,3,-9,2,5,7,-4,10,1,-1,-5,3,-8,-3,2,2,-4,-4,9,9,5],[-6,2,8,9,2,-4,-9,6,1,-2,5,-10,-3,4,5,-9,10,-6,-3,-8,6,-9],[-4,9,-4,2,8,-8,-1,2,4,6,3,2,6,2,-2,8,-8,3,9,1,7,8]], dtype = "uint32")#candidate|5264|(11, 22)|const|uint32
var_5265 = relay.var("var_5265", dtype = "float64", shape = (84, 20))#candidate|5265|(84, 20)|var|float64
const_5266 = relay.const([[-9],[4],[4],[3],[-5],[8],[3],[2],[8],[-1],[-7],[-8],[8],[5],[-3],[-6],[-5],[-4],[-2],[4],[-2],[-1],[-8],[10],[4],[-5],[-2],[6],[-3],[3],[10],[-8],[10],[4],[9],[-9],[2],[-7],[-3],[-6],[-10],[8],[6],[-2],[-6],[4],[-4],[3],[-4],[-4],[-6],[-7],[3],[7],[-3],[-4],[8],[7],[-7],[2],[5],[1],[8],[-3],[-2],[-7],[-10],[-5],[8],[-2],[8],[4],[-10],[-7],[-1],[2],[7],[-5],[-9],[7],[-5],[-8],[-9],[-9],[-6],[8],[9],[-10],[-2],[-7],[8],[-8],[7],[7],[-10],[-7],[-1],[2],[-9],[-8],[4],[-1],[-7],[-3],[7],[-1],[1],[7],[-3],[-4],[-1],[9],[-8],[-5],[-2],[2],[-1],[10],[-3],[9],[4],[3],[1],[5],[-6],[-6],[2],[10],[-6],[6],[8],[-5],[-2],[-6],[-1],[3],[7],[3],[7],[2],[1],[-2],[-5],[2],[7],[-9],[-6],[3],[3],[-1],[4],[-10],[-3],[9],[-4],[-5],[10],[5],[-2],[-5],[5],[-4],[-2],[6],[-8],[-10],[2],[-5],[4],[7],[6],[-1],[1],[-10],[-5],[2],[2],[-10],[6],[-10],[5],[-7],[9],[-4],[-6],[10],[-4],[10],[9],[8],[6],[-5],[-7],[5],[-10],[-8],[-6],[-6],[6],[7],[-10],[6],[8],[-9],[6],[2],[-7],[-2],[-1],[-10],[3],[-8],[2],[3],[3],[-10],[9],[-8],[1],[-3],[-5],[1],[-1],[8],[2],[-2],[7],[-4],[-3],[5],[-9],[10],[-10],[-4],[-4],[-10],[-3],[2],[-3],[-3],[-10],[2],[7],[4],[-4],[-6],[5],[-10],[2],[6],[2],[-6],[-6],[-8],[-9],[-6],[8],[-4],[-3],[-2],[9],[-2],[4],[9],[-8],[2],[2],[5],[-6],[-7],[-4],[2],[10],[-4],[6],[1],[-6],[2],[-7],[-5],[-8],[6],[-7],[-8],[-4],[6],[9],[-9],[-5],[3],[2],[9],[-7],[7],[-3],[-10],[1],[1],[-7],[-9],[-7],[8],[-2],[-4],[-3],[-10],[-10],[-3],[1],[-2],[2],[7],[8],[-9],[8],[-7],[-4],[10],[3],[5],[-10],[-10],[-8],[-7],[3],[-5],[-3],[-8],[10],[-7],[9],[3],[8],[-9],[7],[8],[-3],[-8],[-1],[9],[-6],[1],[-5],[-10],[8],[1],[-1],[1],[10],[-2],[-6],[-4],[1],[7],[7],[-8],[-10],[-10],[-9],[8],[-10],[-5],[7],[-2],[-5],[-4],[9],[9],[10],[-1],[-4],[9],[9],[-9],[-2],[6],[-9],[-4],[-6],[-3],[-5],[2],[-5],[-1],[9],[-1],[5],[8],[-9],[-2],[7],[-2],[-10],[5],[5],[5],[-5],[3],[9],[4],[-7],[4],[-2],[8],[1],[-10],[-2],[7],[3],[6],[-9],[7],[1],[1],[-5],[10],[9],[6],[8],[1],[-7],[-2],[-5],[9],[-10],[-5],[7],[1],[5],[7],[-9],[2],[3],[-7],[5],[4],[1],[9],[4],[6],[-2],[-3],[7],[6],[-7],[10],[2],[-4],[-3],[7],[1],[7],[9],[7],[-3],[-9],[6],[-3],[-3],[-2],[2],[8],[5],[8],[-3],[3],[-10],[7],[6],[5],[9],[-2],[4],[-5],[-4],[1],[1],[9],[-9],[6],[-4],[7],[9],[5],[10],[-5],[-4],[1],[4],[-8],[6],[-6],[7],[5],[-4],[10],[-9],[-4],[-3],[-6],[-9],[-1],[9],[10],[9],[-4],[7],[2],[-7],[10],[7],[9],[-8],[-6],[2],[-3],[4],[1],[-5],[7],[-10],[1],[-2],[1],[-9],[9],[10],[-3],[1],[-9],[-1],[3],[4],[9],[6],[5],[8],[3],[-8],[-9],[5],[4],[10],[-4],[-7],[3],[5],[3],[9],[-1],[7],[-2],[2],[7],[2],[-7],[-8],[4],[8],[-8],[-3],[3],[6],[-1],[8],[-1],[-8],[2],[-10],[1],[6],[9],[-9],[-9],[-3],[2],[-7],[-7],[-2],[1],[8],[7],[-7],[-9],[-9],[-9],[8],[-9],[2],[-4],[5],[2],[2],[9],[6],[6],[-4],[-4],[-5],[9],[3],[8],[-5],[6],[7],[2],[-7],[-7],[4],[5],[-6],[5],[-7],[4],[-2],[-5],[-9],[6],[-2],[-1],[2],[10],[-10],[10],[-3],[-5],[9],[2],[1],[-7],[6],[-9],[7],[-1],[6],[5],[-9],[-1],[3],[2],[-10],[6],[9],[7],[-3],[4],[-8],[-6],[-6],[1],[3],[2],[-4],[9],[-6],[-5],[10],[-6],[-1],[-10],[7],[4],[4],[-10],[1],[4],[9],[3],[1],[-3],[7],[-3],[-9],[-7],[-2],[-5],[-2],[6],[-10],[-8],[-8],[-4],[8],[-2],[-1],[4],[-3],[6],[-6],[2],[-3],[-8],[-7],[1],[-9],[-8],[-1],[5],[2],[-8],[10],[-3],[-1],[-5],[-4],[-6],[6],[-2],[-8],[-10],[-1],[-5],[-3],[-4],[8],[9],[6],[-1],[5],[-5],[-4],[5],[-6],[-5],[-9],[-3],[-5],[7],[-9],[-4],[2],[6],[-9],[6],[-4],[-2],[1],[2],[-6],[2],[-10],[-10],[-3],[5],[-7],[-10],[-6],[7],[-3],[9],[6],[-8],[1],[-4],[5],[-6],[1],[3],[2],[-8],[9],[-8],[-2],[10],[9],[-3],[-3],[2],[2],[-2],[-4],[-3],[-4],[-2],[4],[-5],[-6],[10],[9],[-5],[1],[3],[-2],[-7],[3],[-1],[-10],[5],[-1],[-2],[7],[-2],[4],[2],[1],[-2],[-9],[6],[10],[-6],[-5],[-3],[1],[2],[-4],[-1],[-4],[3],[2],[-1],[-7],[5],[8],[7],[-7],[2],[-10],[-8],[2],[5],[4],[7],[8],[6],[-9],[2],[10],[2],[-1],[5],[-10],[9],[-3],[-10],[-4],[-2],[-10],[6],[1],[9],[1],[-6],[1],[6],[-4],[7],[9],[5],[2],[8],[10],[-6],[-9],[10],[6],[-9],[-1],[7],[-10],[-3],[7],[10],[7],[-9],[-1],[-4],[-5],[3],[5],[-1],[3],[8],[-5],[-7],[2],[-3],[1],[5],[9],[6],[9],[2],[2],[-5],[7],[8],[7],[5],[2],[1],[1],[3],[7],[9],[-9],[7],[6],[-9],[3],[5],[-3],[-1],[8],[-4],[-7],[6],[-9],[9],[4],[2],[-2],[1],[-6],[-6],[8],[10],[-4],[-2],[6],[-5],[-3],[10],[-2],[7],[-6],[1],[-8],[6],[5],[-3],[-5],[4],[4],[2],[-4],[-5],[-9],[-8],[-4],[9],[6],[8],[2],[-7],[7],[-10],[3],[-10],[10],[8],[-10],[-10],[8],[2],[-4],[9],[-8],[-3],[-10],[7],[-10],[-10],[3],[-1],[3],[-6],[2],[3],[-5],[-1],[-3],[1],[7],[2],[-6],[-7],[-10],[-1],[-10],[-5],[-4],[7],[6],[-8],[-3],[1],[9],[-9],[-8],[6],[-4],[10],[3],[-6],[-6],[5],[1],[-7],[-1],[9],[4],[-2],[-2],[1],[-4],[3],[1],[9],[-5],[-8],[-5],[10],[-6],[4],[-2],[3],[-4],[10],[8],[7],[-8],[9],[2],[-5],[4],[-7],[-8],[-8],[3],[-2],[-6],[4],[-4],[8],[-4],[3],[3],[-3],[-1],[-3],[4],[5],[-6],[6],[6],[8],[-5],[-1],[-5],[-10],[-2],[-4],[6],[-2],[-8],[1],[5],[-1],[10],[4],[-7],[7],[5],[10],[7],[-2],[2],[5],[-3],[-4],[-4],[-10],[2],[3],[1],[9],[10],[-10],[4],[-6],[8],[1],[1],[-8],[7],[-5],[9],[-3],[9],[5],[3],[-7],[-2],[9],[-7],[-8],[-10],[6],[6],[-6],[-10],[-5],[6],[-9],[4],[-6],[10],[2],[-2],[-7],[-4],[7],[3],[-7],[-9],[-4],[-6],[7],[-9],[-9],[-2],[1],[-10],[-3],[4],[3],[-4],[-1],[-4],[-8],[1],[-4],[-4],[-9],[9],[7],[-4],[-3],[-1],[-9],[6],[-2],[2],[7],[-2],[-3],[-8],[-2],[-9],[-7],[-10],[8],[-3],[8],[-7],[1],[-9],[-2],[-6],[9],[6],[3],[-10],[-6],[5],[-7],[-8],[-8],[-8],[-8],[-5],[8],[2],[5],[1],[-6],[-7],[-10],[-1],[5],[-2],[10],[7],[-2],[4],[10],[7],[-3],[10],[-6],[5],[7],[-10],[-8],[3],[-6],[6],[-6],[4],[10],[8],[-9],[-7],[-5],[-2],[7],[3],[-7],[1],[6],[3],[-1],[-10],[3],[-5],[-3],[-4],[9],[5],[-10],[2],[-2],[1],[2],[9],[6],[-1],[-10],[-5],[6],[8],[2],[-4],[-5],[4],[-5],[3],[3],[-9],[6],[2],[9],[-10],[-6],[-3],[-7],[-6],[5],[10],[10],[-5],[10],[4],[-4],[8],[-2],[-3],[-6],[1],[-9],[8],[7],[5],[-3],[-2],[-10],[-10],[7],[-6],[7],[-10],[-6],[10],[-7],[6],[5],[-4],[-8],[-4],[5],[-6],[3],[7],[-9],[2],[9],[-5],[-6],[-9],[-7],[-2],[8],[7],[-4],[-9],[-7],[6],[-2],[-1],[-8],[-7],[6],[1],[10],[-6],[6],[-3],[4],[2],[-1],[7],[-7],[-9],[7],[-10],[-4],[1],[-10],[1],[-6],[-8],[6],[7],[-1],[8],[-10],[-1],[9],[4],[3],[-3],[10],[8],[-8],[-3],[-7],[7],[2],[3],[-2],[9],[-7],[9],[-2],[2],[-6],[4],[-8],[-9],[1],[-3],[2],[-4],[-3],[-10],[-8],[-7],[9],[1],[-8],[9],[-9],[-1],[5],[-7],[1],[-7],[-9],[7],[-9],[-7],[8],[-4],[-9],[-10],[-9],[10],[-2],[-6],[10],[-3],[3],[-3],[-4],[4],[-1],[-2],[6],[-6],[4],[-1],[-5],[-2],[-1],[-1],[-2],[-3],[-6],[-7],[1],[6],[4],[-9],[-6],[5],[-10],[-3],[-7],[-1],[-3],[-1],[-9],[-2],[-5],[7],[-2],[-5],[1],[-7],[8],[-6],[-10],[5],[-6],[-8],[-1],[6],[5],[6],[6],[-3],[-6],[-5],[2],[-5],[5],[1],[2],[3],[-4],[-7],[-9],[-6],[-8],[4],[6],[2],[-6],[1],[8],[8],[-7],[1],[9],[-7],[6],[-10],[6],[9],[8],[10],[1],[-6],[-9],[-6],[-2],[2],[-5],[1],[8],[7],[-4],[9],[10],[-6],[3],[2],[7],[2],[-4],[-3],[-3],[8],[-10],[2],[-8],[2],[-3],[-4],[8],[3],[3],[5],[5],[6],[-8],[-8],[5],[-8],[6],[5],[-6],[-10],[7],[-6],[-3],[6],[6],[7],[-3],[-1],[-1],[-9],[-6],[3],[7],[-9],[-4],[-4],[2],[-4],[10],[-10],[5],[8],[-10],[6],[-7],[-2],[-2],[-6],[-3],[-1],[-4],[6],[8],[-1],[-3],[-5],[-10],[-6],[-1],[6],[9],[-4],[2],[-9],[-4],[2],[9],[4],[-1],[6],[-5],[2],[-3],[8],[3],[5],[-9],[-3],[8],[6],[4],[2],[9],[3],[-10],[-3],[9],[2],[6],[-7],[1],[8],[-10],[3],[-3],[-1],[-10],[-4],[-8],[6],[-3],[7],[-6],[5],[9],[10],[-5],[-4],[-1],[2],[7],[-3],[-6],[-3],[-4],[-4],[-9],[1],[10],[-1],[8],[-2],[2],[-10],[2],[-9],[7],[3],[8],[8],[6],[9],[3],[-3],[5],[-3],[-5],[-8],[1],[-2],[-9],[-10],[-2],[10],[1],[-2],[-1],[2],[-10],[-8],[-1],[10],[8],[-5],[-3],[1],[-7],[-8],[6],[-10],[5],[-3],[4],[2],[-10],[-1],[-3],[-7],[6],[-1],[-10],[-2],[-5],[-9],[-10],[9],[-3],[-4],[6],[5],[6],[7],[6],[10],[9],[-4],[4],[-7],[8],[-2],[-4],[-4],[1],[-6],[-3],[5],[8],[7],[-9],[7],[-10],[4],[-8],[-5],[-6],[5],[-7],[-9],[-6],[-7],[7],[-6],[-5],[8],[-4],[9],[-7],[-10],[-5],[-9],[3],[3],[2],[10],[6],[-7],[-9],[-7],[-8],[6],[9],[5],[-10],[8],[1],[6],[-3],[4],[10],[3],[1],[-10],[-5],[-7],[-9],[4],[-8],[-1],[8],[-4],[9],[1],[-1],[-7],[-10],[9],[-2],[-4],[-4],[-9],[-3],[1],[6],[2],[3],[10],[-7],[6],[-7],[9],[3],[1],[-6],[2],[5],[5],[6],[1],[-9],[-3],[8],[6],[6],[1],[5],[1],[9],[5],[6],[-7],[1],[-8],[7],[-1],[10],[-1],[-9],[4],[-9],[9],[7],[3],[-1],[-1],[-8],[-7],[-8],[9],[4],[-4],[-4],[-3],[-3],[8],[-1],[7],[-8],[-4],[-9],[-7],[3],[7],[9],[-9],[-4],[7],[1],[2],[-8],[6],[-7],[7],[-3],[6],[6],[-8],[-7],[10],[-9],[-9],[3],[2],[8],[8],[4],[5],[-8],[9],[-3],[-3],[8],[6],[4],[-1],[5],[7],[-6],[2],[3],[-1],[-5],[-8],[-7],[2],[2],[9],[-7],[-5],[-10],[-6],[-4],[5],[-2],[-7],[-8],[-9],[3],[5],[6],[9],[5],[10],[-2],[-4],[9],[9],[3],[-7],[-4],[9],[3],[6],[5],[5],[1],[1],[-4],[7],[-6],[-10],[3],[10],[7],[10],[-2],[-3],[6],[10],[-9],[5],[10],[5],[7],[-4],[6],[-7],[5],[-4],[7],[-4],[-2],[-5],[-6],[-10],[-1],[-6],[-10],[-7],[-6],[-1],[-6],[9],[8],[-6],[7],[5],[6],[-6],[6],[-7],[2],[7],[4],[-1],[4],[-3],[2],[4],[5],[-4],[-9],[-2],[8],[7],[-5],[-10],[8],[10],[-1],[4],[-5],[-8],[9],[7],[-9],[6],[10],[2],[5],[4],[4],[8],[-1],[-7],[1],[8],[8],[-5],[7],[3],[-10],[5],[-7],[10],[8],[4],[7],[-7],[-2],[1],[-6],[1],[6],[-3],[7],[10],[-4],[-1],[-3],[7],[-4],[5],[-4],[-2],[-7],[-2],[-3],[-6],[-1],[1],[-6],[-9],[-7],[5],[1],[3],[-2],[-9],[-3],[5],[-3],[2],[1],[2],[-1],[-4],[-7],[9],[-3],[-5],[-4],[-10],[-1],[7],[9],[3],[-8],[-5],[-6],[-5],[-3],[2],[-3],[-3],[5],[9],[-8],[-10],[-7],[4],[-6],[5],[3],[6],[-10],[-4],[9],[-10],[-9],[9],[2],[-5],[-8],[-3],[9],[-10],[-2],[10],[-8],[5],[-7],[-8],[7],[1],[2],[1],[-9],[-8],[9],[-1],[-7],[-5],[7],[-6],[-2],[-10],[2],[-5],[7],[-6],[-5],[4],[-1],[-10],[-4],[-1],[1],[3],[1],[-2],[2],[2],[-9],[2],[5],[6],[-5],[6],[5],[-10],[-7],[1],[9],[6],[3],[5],[-10],[-9],[3],[5],[-3],[8],[1],[6],[9],[6],[-9],[6],[1]], dtype = "int64")#candidate|5266|(2112, 1)|const|int64
const_5267 = relay.const([1.258628,9.530677,2.669958,-8.092733,-6.982593,-4.901450,-6.077459,4.534801,-8.957915,-5.545911,6.910633,-7.497832,6.428320,-8.681627,1.084283,-0.972044,-0.502408,-1.928134,-4.268785,2.375667,-2.965021,-4.582846,5.158363,-9.772727,6.601969,-2.449760,-8.441769,5.520331,-4.368654,3.091259,-8.594714,2.638396,5.752304,-2.723880,-1.517870,2.877818,2.323765,5.585925,3.240341,-8.663903,-7.886684,8.693968,-6.252645,7.537275,2.750480,-5.233004,-9.701741,-9.458209,0.549821,0.241351,-0.705457,-2.302251,-3.467507,2.833757,-2.991561,8.455349,-2.855047,4.223030,9.209720,-9.909306,8.100348,-0.707716,-5.498705,-6.319448,-0.646960,3.788317,-4.228286,-8.656113,-2.025563,-8.384648,-5.004876,6.698047,-6.379352,6.156570,4.581628,-0.706718,-4.682854,-1.988935,-2.562567,-0.140049,2.256262,3.711186,2.576070,-1.430234,0.115756,-5.995890,-9.000409,8.114358,5.810935,5.629712,-9.643259,0.939124,-1.613336,0.074645,-0.769249,4.902733,4.857507,5.268368,6.877791,-8.646316,-9.399083,-8.943949,8.324059,-9.558100,-3.913229,4.037679,5.605754,2.795632,8.674484,-6.410748,-1.426558,3.052846,7.237135,-6.042496,-9.514386,6.480338,-3.369103,-8.046887,8.970734,-8.082982,-9.041870,-1.040023,-0.997094,6.146606,-6.416305,-0.505267,-5.191587,0.967130,-0.219007,-7.699790,-2.370228,-6.325912,4.513204,-8.650582,7.894007,-9.583314,4.485983,4.626275,-8.421834,3.764832,5.934060,2.911226,8.121122,0.414944,-8.388016,-6.825357,7.787024,5.622450,9.322604,-3.147992,-7.088649,-6.853474,4.812519,-3.879640,6.590250,5.605155,9.893152,-6.069109,3.808279,-8.988130,2.934531,-7.219176,2.345223,3.760939,-9.203794,3.254460,-2.203024,-1.861465,-9.210280,3.849137,-9.708451,-5.795690,2.542171,-0.611775,-3.056838,-4.479407,0.045931,-3.119871,3.280338,-8.805394,3.096290,-0.737399,1.058423,-5.000256,3.245863,7.101039,-2.809896,9.214251,-4.521349,-5.594393,8.369910,-6.506783,5.628333,8.617516,-2.980678,-7.888495,-3.282129,0.338978,5.737086,9.326502,9.217178,-2.814223,-4.060384,3.589245,4.954907,4.423428,3.940925,-6.343218,-2.387464,9.079816,8.193166,9.421859,-7.410638,2.923714,-3.974009,1.482455,-9.747547,3.749920,4.056179,8.651130,-9.577426,1.330687,1.394937,-3.368611,-6.774550,-4.384201,-5.166037,7.274803,7.389106,-6.027639,8.563149,3.222385,-8.119986,-1.072781,-1.860760,-4.927447,-4.778011,-3.890910,4.019888,0.709268,-6.225591,1.866794,6.261566,0.174799,-3.175878,-7.879771,8.544867,1.632415,-0.813036,-5.084666,0.828186,6.165347,-0.549824,6.029555,8.565151,9.649385,0.510852,-2.892396,4.653202,0.250555,4.110327,5.559035,9.503408,-0.442545,-4.930156,-5.427058,-0.154688,9.859661,9.737608,-8.641262,-9.523396,-9.883605,7.427457,-5.886434,9.926353,-1.177721,-7.917245,0.379742,-6.409983,1.611909,-9.308084,-0.616405,-3.916586,-8.312196,3.491854,-8.329321,-2.112062,7.012296,7.410718,4.843579,9.420530,2.153553,7.323272,7.765067,9.826506,4.090597,9.034829,-9.329523,8.608273,8.187707,2.005811,-9.270245,8.209701,0.301069,-4.116188,6.951895,-1.322479,0.492263,6.452208,4.246673,5.975116,3.592888,0.266768,-3.810272,-4.864671,5.128564,8.093862,3.770168,1.003939,1.618501,7.132327,8.401551,-5.514578,-7.493685,1.702144,-9.269103,-4.447149,3.387264,8.963711,-5.124098,-4.396030,4.449673,-2.667048,-1.256358,-9.538212,1.836453,-5.524367,0.448998,6.663810,-4.539738,-8.569010,7.957601,-6.541494,-9.812547,4.953170,7.387706,-9.903594,7.405020,-3.473125,-3.563237,-8.923984,-0.665816,-9.826917,1.221719,4.910900,-1.157374,-6.800238,-5.484432,1.550461,-1.473711,-6.413887,-4.894575,-9.943172,6.697088,4.016952,4.628499,1.662438,-4.649615,-9.961343,7.909665,8.663446,5.812484,0.769474,3.946401,-2.287739,0.937316,3.319028,0.503254,-7.334244,-2.452077,-1.777901,3.835276,-2.779861,7.111602,6.539393,-8.979253,-6.020667,-4.614943,-0.067145,-6.087464,3.014457,6.185472,4.214395,-0.787632,2.242153,6.460466,1.503135,5.315646,-6.887098,-3.792497,6.345146,7.054457,-3.616191,5.103355,8.655888,6.575051,-8.217718,7.100337,7.677800,0.477518,7.516111,-5.213105,7.540188,-6.016356,-1.518293,0.645969,6.896058,0.415356,-0.797242,-3.806702,6.032555,-1.926558,-6.400180,1.693965,4.856602,-3.526203,-7.321102,2.521075,-7.834771,6.294189,-4.526466,-4.571438,4.753126,9.818184,3.415041,0.657429,3.221573,-6.471754,-3.208607,3.791503,-6.895863,-9.566231,-3.993140,-8.628434,0.350482,1.376829,-7.667653,8.438885,-9.434321,2.090573,9.925152,-9.225535,-6.482182,-3.601817,-8.334666,-7.778876,-5.718848,0.907348,6.524291,6.942828,-6.208015,-3.800717,6.283863,-0.506107,0.656896,1.528552,4.746527,2.615250,-1.368398,-8.679162,-1.741853,7.593531,5.315786,4.610405,-8.874954,6.598110,-0.067181,4.546531,4.325815,8.546118,2.649503,9.442831,-9.424677,-3.886915,9.686236,9.814908,5.755375,-1.154533,-5.604117,1.036344,-1.899041,6.885632,4.228021,-5.080469,-8.745336,5.190341,-0.287309,-0.942219,5.863755,6.403073,9.548087,-9.704021,6.266541,5.562567,7.563979,-4.410099,7.782528,-2.245176,-0.028134,-0.993425,-2.668774,-1.682206,-3.459872,0.478576,5.233791,-4.255109,9.112885,-6.464924,9.869809,-8.894707,-1.733642,8.417840,-9.475717,-2.173984,-5.531484,-9.358196,-0.511984,-1.994436,2.705809,3.190019,-3.391731,-2.766505,-1.037751,2.743978,-7.098538,-3.661916,-7.226347,3.601202,2.335097,-9.736105,-1.581344,-1.400005,4.944370,1.055070,-3.872862,-7.888103,2.092296,8.222320,5.102214,2.656204,-5.841972,-0.911953,9.236326,-8.403290,-4.774284,6.953612,6.985542,0.330150,-1.657745,5.861541,3.392402,3.794550,-1.184627,9.143820,8.028553,-5.512239,-3.074170,8.540778,-6.542456,7.797797,-1.803665,8.167951,-0.056528,-9.993676,4.262750,-1.813582,0.983051,1.192568,-2.977996,4.354232,-9.894869,0.233557,0.326143,-7.996933,-8.045428,-7.091472,-9.910004,-6.883451,-6.042335,1.827012,8.342426,9.434022,-6.120542,-4.375945,6.031888,-3.659764,8.182015,-5.572588,-0.043884,-5.855161,-7.992600,5.976393,-1.938917,-9.855456,7.071285,1.946965,2.023457,9.654863,1.605749,-4.929113,-6.212498,-2.490699,-6.276580,-1.407379,-2.632908,-4.260882,5.462146,6.907022,4.807690,-1.326127,-8.444477,7.579733,-9.640586,7.904735,7.621702,-2.285217,-4.230776,6.876405,-0.446044,-6.428684,7.931475,9.487335,-3.785404,-8.455220,-5.880448,-9.669045,-5.978893,-7.952779,0.403363,9.968935,4.179906,-3.868884,-2.288429,7.770514,8.463183,2.770025,-5.126353,6.555353,-5.259224,-4.660986,-6.426935,9.380024,9.111827,-4.085256,0.265404,2.793565,7.574193,-8.597397,4.061424,-6.621944,2.998502,7.583662,8.879012,6.921246,2.659478,-3.699115,-0.881177,-4.997995,-1.738890,-3.523965,-6.216368,-8.439355,8.185290,-5.358803,-7.492908,4.256656,-0.025439,2.564975,9.831413,1.251769,0.258532,7.481702,6.657800,5.381559,-3.826558,1.313116,5.658417,-5.715948,8.360298,9.455009,-8.635138,7.597900,-2.145234,-7.565723,5.742188,-0.778017,4.440073,5.073921,6.772944,-6.265803,-2.387282,2.850459,-3.491959,5.913126,-7.920319,9.904201,1.497834,1.252280,-6.730777,-6.644237,-1.565754,-3.293745,-0.931781,-8.343555,-0.702554,0.954392,9.549520,-2.180039,-6.576949,8.052433,-6.835870,1.614138,2.997387,1.329833,-8.987098,-3.819479,-5.634028,9.336860,-3.705180,7.239025,-9.195921,9.903765,9.187115,8.835149,8.661639,-8.822649,-7.554051,-7.010545,-0.007186,0.583488,9.155617,3.034830,-4.833695,-7.143419,3.901271,6.857413,-0.102101,4.853265,-5.775860,5.748344,8.982191,9.258574,-5.170572,6.429944,-5.706250,0.656245,-3.677096,5.591406,0.753567,0.738594,6.185958,5.466356,-3.003751,5.937580,9.464654,-9.208236,-1.316353,-0.752698,3.186176,-0.511358,-9.460011,6.367404,-7.857757,2.981842,-3.424879,-0.402354,3.141348,8.612542,-6.760255,-5.427513,-4.639705,-5.260133,5.867124,0.298104,5.995312,-2.212214,9.396787,-8.730716,-6.063258,-2.593201,2.229773,6.429832,-5.610047,-1.759124,2.137826,-1.385152,8.993763,8.280527,-7.877625,-1.116871,-9.388854,2.141409,-4.945133,8.909396,-9.314669,-8.248080,0.437360,-3.024723,-9.073981,-1.196922,-8.761644,3.726105,-6.128600,-0.074052,6.869811,-6.702439,3.693979,-7.943702,0.011423,-6.560921,0.499436,6.681432,-3.404850,-4.555400,-3.840616,6.177528,0.668395,3.419177,8.489322,-5.043845,-1.171497,-1.449907,4.535687,8.713926,-3.155370,-6.433512,-1.547703,-3.686063,6.830954,-9.931494,-8.553078,-0.561191,-9.700751,5.134563,2.008252,4.374380,-1.113316,7.769665,-5.716692,-0.955222,6.970222,-0.495432,3.783500,-2.232046,2.904037,-1.220096,-2.140760,6.943149,-7.962171,-4.792304,8.626168,4.531504,3.727737,5.789005,-3.489509,9.834972,-4.193680,3.869561,-3.748292,-9.154479,-6.715624,1.046995,-1.838024,-4.484417,1.381832,-4.994115,-5.964644,-5.164927,2.606160,3.328557,-8.389239,2.045041,-3.702380,-6.511204,-7.928159,-9.693129,8.487482,-4.037550,-0.916815,1.475379,3.166930,-1.370555,1.152265,-3.679548,-8.708193,-2.152111,-6.620792,5.568349,3.590134,8.280630,6.356082,-9.704719,-0.720221,-0.981927,3.537636,-0.124738,2.613813,-4.009974,-2.418129,9.065678,-7.290061,0.913792,0.985184,3.574950,-1.995727,9.835304,-0.583488,-6.624545,-7.069716,-9.208100,-0.946846,-6.403328,8.032593,4.992987,6.068977,7.434855,-1.420310,-2.375056,9.417528,-9.644169,8.822263,4.449950,-8.275557,-3.153669,-4.243158,-6.044548,5.916117,6.111980,-0.682944,-7.728645,7.066321,4.688274,-5.109622,-8.940149,-1.889105,5.817422,-5.312229,4.553179,7.240324,6.908904,-4.645263,-0.278906,-8.264912,5.953912,-3.474761,8.563876,3.984067,-7.521796,-4.352613,6.179729,6.854247,-0.587511,-7.206743,-0.769875,6.289624,4.935807,-5.965860,-4.029342,0.731378,0.709579,7.874766,-5.403967,4.001487,6.355046,5.683930,-0.284859,8.326758,-3.138925,8.527124,5.035197,-2.850543,-2.127462,6.393853,4.734977,-5.098504,-2.762286,2.953662,-0.866835,4.502256,9.066015,4.716489,-8.566612,-4.747820,-8.594018,6.237424,7.256836,-9.110167,-5.293211,-1.329611,1.852716,-9.237473,-8.965436,-0.723087,8.436772,-0.264248,-6.145412,-4.100990,4.243994,4.954309,-6.657047,9.981629,-2.429873,-1.949485,4.899437,-0.702520,6.897100,7.458668,0.824021,0.342034,0.985351,4.732309,0.542480,-0.956732,-1.996971,-3.697152,7.574352,-6.090077,5.451641,-6.460100,6.250475,2.820751,-6.147328,0.274624,-0.269654,-3.804721,-6.669447,1.960933,1.427616,-0.444998,8.499870,5.072631,2.312985,-0.245053,-9.978653,0.462472,-1.479469,-6.346015,6.672862,-7.616735,-3.027365,-0.933354,-5.362478,-7.109971,7.981778,1.240723,5.571860,4.769510,2.086574,-2.041072,8.421003,7.847196,-7.651813,-0.328734,7.155349,-8.124277,9.413085,5.462863,-7.274047,4.869760,-9.586759,3.949507,3.516719,-6.166626,-4.313650,-6.419203,3.321263,7.457163,-2.189645,0.898823,-7.630589,3.560032,-1.188398,2.678364,1.281170,5.386712,-5.151119,5.031916,0.884327,-9.669596,-5.475169,3.030744,-4.808339,-2.165314,-4.896536,9.833950,1.574753,-6.653297,8.939256,-3.941781,4.396545,-9.617992,-4.523873,4.274664,-1.446599,-4.167717,6.454557,-7.297208,-7.690234,-5.367034,-8.034357,-8.761912,-4.501676,-3.835840,-3.616162,-8.836562,-1.551718,2.609235,2.950801,-1.439878,-7.212990,-1.645988,7.964420,-3.800535,0.550019,-7.302491,-7.909429,7.325607,-3.413720,-6.250666,1.549743,-7.165943,9.820124,-2.343872,-6.800549,-3.789704,6.898562,-2.524426,9.787249,4.881436,0.739665,3.234984,-3.297357,9.057305,-5.465312,0.144041,-4.451775,9.308040,-2.120304,-9.406780,-8.794197,0.848493,-5.536968,-8.098807,-3.826257,-4.529120,-3.613000,3.196414,8.546279,4.271838,-0.141710,9.976115,-5.782612,0.594944,-0.874581,7.434251,-2.226601,8.902780,1.961131,5.323866,5.740452,0.828311,4.632908,-6.338584,1.630559,-3.398468,-9.538286,6.790175,-4.195699,4.352666,-3.083867,1.615271,-4.321717,1.238171], dtype = "float64")#candidate|5267|(1183,)|const|float64
call_5263 = relay.TupleGetItem(func_5123_call(relay.reshape(const_5264.astype('uint32'), [242,]), relay.reshape(var_5265.astype('float64'), [840, 2]), relay.reshape(const_5266.astype('int64'), [2112,]), relay.reshape(const_5267.astype('float64'), [1, 1183]), ), 7)
call_5268 = relay.TupleGetItem(func_5128_call(relay.reshape(const_5264.astype('uint32'), [242,]), relay.reshape(var_5265.astype('float64'), [840, 2]), relay.reshape(const_5266.astype('int64'), [2112,]), relay.reshape(const_5267.astype('float64'), [1, 1183]), ), 7)
func_4257_call = mod.get_global_var('func_4257')
func_4260_call = mutated_mod.get_global_var('func_4260')
var_5285 = relay.var("var_5285", dtype = "int16", shape = (15,))#candidate|5285|(15,)|var|int16
call_5284 = relay.TupleGetItem(func_4257_call(relay.reshape(const_5267.astype('float64'), [1, 1183]), relay.reshape(var_5285.astype('int16'), [15, 1]), ), 5)
call_5286 = relay.TupleGetItem(func_4260_call(relay.reshape(const_5267.astype('float64'), [1, 1183]), relay.reshape(var_5285.astype('int16'), [15, 1]), ), 5)
func_4489_call = mod.get_global_var('func_4489')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_5292 = func_4489_call()
call_5293 = func_4489_call()
func_3658_call = mod.get_global_var('func_3658')
func_3662_call = mutated_mod.get_global_var('func_3662')
var_5301 = relay.var("var_5301", dtype = "float64", shape = (6, 18))#candidate|5301|(6, 18)|var|float64
call_5300 = relay.TupleGetItem(func_3658_call(relay.reshape(var_5301.astype('float64'), [108,]), relay.reshape(var_5285.astype('int16'), [15, 1]), ), 1)
call_5302 = relay.TupleGetItem(func_3662_call(relay.reshape(var_5301.astype('float64'), [108,]), relay.reshape(var_5285.astype('int16'), [15, 1]), ), 1)
func_2497_call = mod.get_global_var('func_2497')
func_2504_call = mutated_mod.get_global_var('func_2504')
const_5318 = relay.const([7,2,-5,2,-10,1,7,-4,-1,-3,-10,-9,2,6,-6,-4,1,6,10,7,-4,7,2,-2,-10,-5,10,5,6,1,-2,-4,2,10,9,-5,-4,4,2,1,3,-4,8,4,-5,-5,-2,10], dtype = "int64")#candidate|5318|(48,)|const|int64
call_5317 = relay.TupleGetItem(func_2497_call(relay.reshape(const_5318.astype('int64'), [2, 4, 6]), relay.reshape(const_5318.astype('int64'), [2, 4, 6]), relay.reshape(var_5265.astype('float64'), [1680,]), relay.reshape(const_5266.astype('int64'), [2112,]), relay.reshape(call_5263.astype('float64'), [1680,]), ), 0)
call_5319 = relay.TupleGetItem(func_2504_call(relay.reshape(const_5318.astype('int64'), [2, 4, 6]), relay.reshape(const_5318.astype('int64'), [2, 4, 6]), relay.reshape(var_5265.astype('float64'), [1680,]), relay.reshape(const_5266.astype('int64'), [2112,]), relay.reshape(call_5263.astype('float64'), [1680,]), ), 0)
output = relay.Tuple([uop_5254,call_5263,const_5264,var_5265,const_5266,const_5267,call_5284,var_5285,call_5292,call_5300,var_5301,call_5317,const_5318,])
output2 = relay.Tuple([uop_5256,call_5268,const_5264,var_5265,const_5266,const_5267,call_5286,var_5285,call_5293,call_5302,var_5301,call_5319,const_5318,])
func_5325 = relay.Function([var_5265,var_5285,var_5301,], output)
mod['func_5325'] = func_5325
mod = relay.transform.InferType()(mod)
mutated_mod['func_5325'] = func_5325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5325_call = mutated_mod.get_global_var('func_5325')
var_5327 = relay.var("var_5327", dtype = "float64", shape = (84, 20))#candidate|5327|(84, 20)|var|float64
var_5328 = relay.var("var_5328", dtype = "int16", shape = (15,))#candidate|5328|(15,)|var|int16
var_5329 = relay.var("var_5329", dtype = "float64", shape = (6, 18))#candidate|5329|(6, 18)|var|float64
call_5326 = func_5325_call(var_5327,var_5328,var_5329,)
output = call_5326
func_5330 = relay.Function([var_5327,var_5328,var_5329,], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5356 = relay.const(2, dtype = "uint16")#candidate|5356|()|const|uint16
var_5357 = relay.var("var_5357", dtype = "uint16", shape = (15, 8, 7))#candidate|5357|(15, 8, 7)|var|uint16
bop_5358 = relay.bitwise_or(const_5356.astype('uint16'), var_5357.astype('uint16')) # shape=(15, 8, 7)
uop_5361 = relay.atan(bop_5358.astype('float32')) # shape=(15, 8, 7)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
var_5369 = relay.var("var_5369", dtype = "uint16", shape = (72,))#candidate|5369|(72,)|var|uint16
call_5368 = func_392_call(relay.reshape(const_5356.astype('uint16'), []), relay.reshape(var_5369.astype('uint16'), [3, 4, 6]), )
call_5370 = func_392_call(relay.reshape(const_5356.astype('uint16'), []), relay.reshape(var_5369.astype('uint16'), [3, 4, 6]), )
uop_5376 = relay.log2(uop_5361.astype('float32')) # shape=(15, 8, 7)
func_2156_call = mod.get_global_var('func_2156')
func_2160_call = mutated_mod.get_global_var('func_2160')
var_5380 = relay.var("var_5380", dtype = "float64", shape = (504,))#candidate|5380|(504,)|var|float64
const_5381 = relay.const([2.249541,-3.660557,9.275582,7.881962,5.905463,-2.923678,-8.722746,-7.999254,6.375099,-4.676522,1.371602,-9.840799,7.692588,8.071498,-5.731448,-6.691788,-8.745603,4.139832,-7.027560,-9.377836,-9.123443,0.008538,-8.602527,2.956273,1.203349,-4.703581,-1.678842,6.506287,3.703606,3.938671,6.431241,-8.529544,-2.145487,9.490693,-3.499920,-4.839420,-2.959051,-9.330536,6.831994,-8.040767,6.442215,4.421524,4.480967,9.512144,0.883830,-3.252403,-3.383815,-1.902233,7.461903,0.230509,8.061218,-6.816123,9.765785,-9.904567,3.737381,-1.117309,-3.575714,-3.570997,-3.375691,-7.148850,-7.855341,-2.059613,0.034846,-1.824004,4.550236,1.630490,2.358468,-0.597253,-4.306326,-1.194899,-7.706168,-7.835396,-7.796244,-7.000379,-9.995884,3.013020,-1.514016,-7.908734,-4.453388,-7.042882,-1.477127,6.678574,9.711931,1.150251,-0.785009,8.837949,-3.507784,9.664622,8.548819,4.625731,0.879413,-9.188057,-6.153323,3.161784,0.990344,-3.996149,8.069216,-5.556882,-7.987106,-2.718155,6.827430,6.037925,1.924093,-5.775045,-2.624590,1.008828,-4.882668,9.774713,-2.510209,-1.815531,-5.339049,2.292917,-5.118504,5.153428,3.381517,8.199974,8.279777,-8.743568,-2.875131,4.397932,-8.958540,-2.570338,4.865590,-0.426514,-0.421839,3.479869,2.016183,4.409442,-3.265514,-9.397291,-2.666889,-9.982828,-8.845563,9.495287,-2.521334,-0.772732,8.959136,6.560756,-2.010088,-1.055259,-9.661110,-6.624689,-9.760055,5.713582,-8.668043,3.082827,-8.742724,-5.582156,-0.971167,8.183953,5.833645,-8.413996,-6.983968,3.495214,6.451224,4.666195,4.894431,7.471731,3.469998,8.173977,1.361024,0.858056,-6.769556,-7.340688,9.390589,0.463028,3.904586,6.217819,-8.721759,6.916761,-5.708226,3.940349,-2.640914,8.224279,-9.224380,5.751509,9.372884,9.872831,-3.420734,6.381280,1.384840,-5.188165,-6.106682,-0.175695,-5.830175,-2.115880,-9.819282,2.410489,-7.010722,6.470840,3.035710,-2.288171,9.682936,-6.288999,-7.142174,4.404638,8.261081,-6.121406,1.822380,-6.987395,-6.345996,-1.467664,-6.445417,2.159270,-5.582175,5.009555,2.272451,2.180913,7.970380,5.222832,7.935627,1.998107,-2.348986,-6.639155,-8.341489,-6.604639,2.148418,-6.025124,-9.586276,-0.671521,-3.248513,-7.288235,-6.196994,-9.529787,3.233743,7.375457,-3.330120,3.884640,-6.652833,-9.306186,-2.067915,-0.134370,0.469347,-6.354598,-1.346583,-2.932875,-5.387912,6.932552,-2.266798,8.799003,9.913580,-8.393328,5.746178,-6.326512,5.747962,5.576634,2.282889,7.910838,-9.148502,-1.975635,5.011487,2.551415,3.051627,-9.473210,-5.831654,-1.837058,-7.198268,8.223645,-3.853815,2.410857,-4.396122,-6.306052,-3.977078,-6.530897,9.692437,-2.230349,0.418185,-6.941926,-6.560050,8.027379,-1.772192,-8.166977,-8.284511,2.304280,6.028669,4.093213,1.985718,-3.145059,8.138091,-7.931544,9.266979,0.643568,-1.012770,-3.826330,-3.717123,8.287083,4.573990,8.283216,0.395177,-3.013669,-9.873292,-1.834326,3.638946,2.502348,2.241077,1.459462,-2.470116,5.488885,9.124595,2.637927,0.438875,-3.225437,-6.207547,3.326439,-0.435517,2.182691,5.756207,-2.015363,-8.246742,6.536798,7.160475,-7.380482,-6.097254,-1.216641,9.772442,4.045719,-5.350692,2.915381,-2.755458,-0.688552,6.831574,3.308752,4.455643,5.722491,5.391069,8.120891,-7.050782,0.035207,-2.775580,-4.479137,9.739872,-1.373960,2.586365,6.755714,-8.926987,0.315740,8.638733,-8.975330,-5.088031,-1.969016,0.274234,2.371473,1.796357,-0.173915,-8.031656,-8.713479,-3.685737,-8.911963,-3.281526,3.971435,0.993044,-6.020835,4.520723,-3.239139,9.727157,-0.034616,-7.389144,-6.834262,-7.249614,8.453152,6.554381,-3.936548,6.837326,6.857501,-3.450763,-4.933309,6.590889,-2.987619,-6.988353,4.148167,0.033232,-6.822794,5.717254,-5.336241,5.351414,-0.775539,5.960126,-4.722159,0.801381,-2.221920,5.040857,-2.964307,-4.372554,3.960097,7.892948,-5.104800,-2.358503,-8.078762,0.568173,4.905841,5.114610,3.113913,7.450991,4.612909,3.355789,-6.919584,-7.527828,-0.521620,-4.691353,9.991115,-3.086995,-4.669575,-4.089249,-5.630862,3.926987,-7.183112,3.508054,1.787964,-4.026174,-0.843890,2.512586,-7.200369,5.389012,-7.770603,-3.579040,0.982026,8.745547,-0.256217,-6.308759,8.222795,-8.209442,-0.289573,1.326153,-7.831643,-0.617136,9.593317,-7.009788,-8.937822,-1.775648,5.397187,-6.103455,1.827423,-8.912789,-6.476451,-4.820914,1.110391,9.901699,0.087903,8.673981,-3.736233,-7.714619,5.107652,0.952036,-9.631942,-9.014903,6.166926,-9.388475,-9.720027,-7.743921,2.646727,-1.339525,4.556181,4.715218,-1.550695,4.311936,-5.404488,3.080001,-1.200112,7.608459,-9.625124,-3.743622,4.416907,6.508350,1.999676,-3.899749,-6.830587,3.593856,-8.709356,-1.562128,-1.974557,-2.187920,0.263538,-2.686963,-1.212565,-6.122428,-1.279060,-8.977787,4.626210,2.857204,2.768259,-5.134285,8.379650,-3.488585,-4.872600,-3.505085,-3.174221,3.544439,-0.341958,7.096758,-4.159074,-6.158709,-8.758094,-6.258972,-1.507463,-4.516268,3.864653,9.777602,3.749820,-1.011974,0.729501,-8.520903,0.774055,1.110939,9.007497,9.102661,2.890846,-4.765952,-7.642423,2.619569,6.967063,5.464498,-0.445023,9.711440,-7.812889,7.095305,-3.888283,6.541123,-6.652233,-8.525779,8.225800,4.746737,6.042450,-6.454825,-3.660274,-6.806722,3.274141,-8.199283,-1.197856,1.402226,9.689397,-8.947593,-8.337532,-8.848369,0.996827,9.968275,-9.231524,4.587534,-5.259309,3.827443,3.155493,-6.145232,6.107791,4.795186,-1.607780,-8.738202,0.271886,-3.025091,-0.693379,-0.765583,2.960731,-8.531529,-7.352660,1.359697,7.781993,2.822327,-9.402254,-5.078607,-5.253182,5.196520,-4.620078,4.778796,1.938301,-8.309251,-7.277210,5.997156,-3.716295,0.948175,2.761599,2.849510,8.430335,1.312640,5.502564,-0.647940,5.896876,-3.862992,4.805277,-1.389710,4.587281,4.004653,4.905874,7.061624,-2.385305,5.226794,6.887882,2.879060,9.779129,-8.621458,-6.217847,3.020753,0.113661,3.199963,8.009548,9.968725,-9.363650,-4.382839,5.004767,0.550107,-1.463233,4.810142,-7.091238,-0.381529,2.635233,-4.994095,5.547939,-7.755948,1.692123,-8.059877,6.273991,-9.488441,-9.528740,5.412621,-5.383747,8.141410,0.094439,0.761151,8.073095,-8.356890,-6.404358,-1.669127,-5.189697,-7.829105,0.489853,-5.967052,-4.696097,-0.390760,6.277106,-6.731969,7.977229,-8.980983,-0.710851,-4.364685,0.575539,5.410596,3.886850,-2.750302,-5.512389,2.267691,0.126724,-1.467151,-7.720127,-3.517699,-5.337748,-1.387632,-2.131408,0.048681,-0.480194,3.420516,-6.763831,6.954893,-1.075185,8.508535,6.792536,-6.881572,-0.721414,-9.990480,-5.087782,-0.956673,-7.246628,-5.586127,1.255284,5.467723,3.625827,7.099611,6.201521,4.694306,-2.768788,-7.492887,8.312636,-7.248825,9.579255,3.952949,4.044792,5.724899,-1.785016,3.840623,4.162943,6.899250,8.984930,-2.839797,8.825541,-8.681757,-9.426305,4.124471,-9.423848,3.922877,1.535448,8.714587,-6.101536,-1.004295,-9.959887,-4.805914,-3.599622,-2.150974,-3.674262,8.582980,-3.892850,-3.001185,-7.380663,-4.910121,0.865269,1.469882,-7.035755,-7.346168,7.316404,4.507908,-9.376945,4.112482,5.581255,-2.379745,-2.829522,-6.044640,2.657211,4.133528,-6.520038,-3.444676,4.639731,-3.743090,-6.819802,-8.521084,5.067712,3.645678,6.763127,3.882101,-6.020633,-2.200233,9.648134,2.656444,8.954482,-5.835211,4.285225,-2.123704,-4.356389,-7.599318,5.289840,-1.209620,8.596937,-5.250856,-3.105260,1.348589,8.743462,3.696348,-7.356756,4.659748,4.812492,-9.408683,1.254292,3.683563,4.598913,-7.398286,-9.764543,-1.593291,8.888281,-8.277912,-1.640622,-4.078986,-9.380615,-5.151142,1.928438,-8.330640,2.886768,7.102542,5.135859,8.713015,-6.631883,3.740253,-2.907815,-1.151202,-0.255747,-3.713465,2.488120,-1.146115,-8.313080,-7.609183,4.438655,5.794131,1.291728,7.509719,5.417197,-7.662114,-6.682202,3.054789,6.885466,-6.374341,-7.871597,-9.913184,-2.947683,6.130688,4.704064,-0.232344,7.753929,5.333229,-1.721630,4.395851,9.179851,4.799264,-6.938629,7.504101,8.636308,6.624729,-5.512909,3.143422,7.998931,4.124406,-3.213841,0.802773,5.066581,0.766404,7.012222,-0.554023,-4.062104,-8.039463,-4.932839,-8.196002,-4.466050,4.173078,1.584041,5.916059,-0.967854,5.212295,-0.351728,-8.073703,3.623820,1.478120,-6.727549,-9.900731,9.536294,2.284673,-7.029783,4.415400,-3.915931,2.596566,7.858753,-9.098390,1.109695,2.180187,-5.816579,-8.059430,1.148375,-3.990571,8.607087,-2.504896,4.248441,-1.278530,6.789875,-8.245921,-5.237162,6.385829,-9.334456,0.840103,4.994843,0.782733,-7.804036,4.394205,3.780617,-3.737577,-4.982234,-7.967250,-2.357841,2.567924,-5.466345,9.004255,9.663228,0.844270,-5.234939,-2.335865,1.687020,9.823718,3.977683,9.519655,-3.854156,3.336697,-0.514489,9.654187,-6.341595,-9.564825,-7.989987,2.932408,-8.876714,-9.559386,-0.004443,-5.059045,-4.748653,7.948069,-7.134876,6.861030,-8.729217,-2.663259,-7.548597,-3.536073,-7.624933,0.606054,-3.051045,9.209853,3.215315,-0.067337,-7.200527,3.305548,-2.733837,-1.701877,4.401035,-7.704831,-7.550539,-2.843070,-1.622106,4.803700,2.482414,2.638004,1.735118,-8.505738,-2.115814,-7.856707,5.126984,-0.696622,0.287946,2.970033,-4.627593,-5.238249,-5.080928,4.607109,5.274312,9.416106,9.661271,6.536141,7.304416,-4.143026,-8.478976,-9.122193,-4.239138,0.934742,2.370624,4.910735,-6.528355,-9.583639,-5.532369,3.041719,-1.854726,8.894130,-8.820811,9.062280,-4.783824,5.389474,-4.190936,7.633574,-9.680129,-7.761682,3.590253,7.699095,-7.121323,-3.427172,8.935956,-3.851827,-2.803031,-4.082966,-0.804091,1.217964,8.996306,0.117883,-4.340024,-2.348575,-2.541340,5.678160,-5.875764,6.949802,-1.478723,-3.138513,-2.768229,-2.197066,-8.646300,0.375860,-3.388255,2.994442,8.821154,1.013337,9.801189,7.647834,9.875896,9.889079,5.692870,-3.781019,-3.166964,-7.936297,5.778151,-8.577416,6.347480,7.430559,-5.688162,4.492920,9.683324,4.682145,-5.995457,-3.984973,9.886120,-6.042346,7.476801,2.970918,5.546119,-3.859418,-4.307310,-9.300600,-8.874889,0.413387,-6.561860,-7.285344,9.313270,8.609544,-1.979135,3.448828,5.813394,9.252397,-6.381698,7.461000,-4.344302,3.441748,-8.007460,-3.407644,7.111999,9.998115,-7.126723,3.812054,4.181963,9.694346,7.122860,-0.382751,-7.422009,2.932872,-2.731984,-4.373375,-5.667994,5.707769,5.030156,7.454371,7.375898,3.348688,-9.236995,2.798484,9.717695,-3.114179,-7.625724,5.503991,-7.789152,3.202243,8.781586,2.592232,1.784749,-3.109003,-0.205269,3.661643,-2.616250,9.021771,-8.994721,0.945736,0.140444,-9.667803,-2.497190,4.760255,-9.434396,7.079097,-1.474567,3.346307,3.648074,5.129269,9.628019,2.593915,5.198198,-9.174391,1.747458,0.339021,8.965658,-4.974035,5.332900,-9.262349,5.480780,-9.683360,-9.773524,0.289000,2.819388,8.257687,-8.419951,2.808600,6.677151,3.360409,9.251986,-7.049249,-7.531644,-0.907172,-7.285833,8.959393,-1.628756,9.058192,5.332842,-0.452031,7.065369,8.917343,-4.247941,4.111060,-0.144368,-0.015826,7.739538,3.285603,-6.100854,-3.527227,-2.256456,-8.925950,9.755045,-4.939399,-8.280981,5.534305,-3.824093,9.623216,5.433061,6.846642,2.887186,6.422649,-8.311501,-9.504135,-6.546216,0.687522,-8.088187,7.116499,8.049480,-4.135527,-5.362052,-6.628713,-9.853188,0.683391,-9.209359,-8.527517,8.396580,4.338235,-8.488935,-6.119851,-4.265978,0.220565,5.284066,-0.195166,-7.549674,-6.838631,-1.842248,-6.710833,6.034441,5.880521,-6.954970,0.330815,6.400616,0.769476,5.525147,1.893287,3.841051,-0.247901,9.752932,9.142940,-2.940366,0.860105,-7.416077,7.755719,5.875272,-1.382549,-0.441343,1.691332,-2.552437,2.574691,-4.904956,8.600963,-7.979083,-1.710478,-3.062427,1.039715,-8.344960,2.468611,-8.322303,-5.566062,5.314465,1.091135,-0.721267,-9.109446,9.051109,-4.733358,-0.456496,9.468549,-3.865409,-2.736162,-6.143888,5.980891,-3.159706,6.646822,6.916981,6.953819,-3.634088,0.247601,0.614121,8.093154,2.110659,1.869881,3.340186,-9.376850,-4.034299,-6.986546,2.940488,3.298666,6.092670,-5.881414,-4.196731,4.482434,1.730126,-4.009115,-3.454639,9.819325,1.738173,0.955190,-5.812396,-7.294050,8.503077,3.582462,-1.039313,-4.398896,7.044047,3.121346,-2.685310,5.598332,7.576142,6.690317,3.257049,1.520340,6.588814,-4.531709,2.148228,-6.425068,8.801475,1.551565,0.663855,3.690455,-6.780202,-0.127910,-8.811076,-5.635149,3.585279,1.498127,5.804904,-6.135316,-8.989287,-4.719429,9.210925,-5.063759,-4.971294,0.599317,4.358045,-5.066239,2.521333,2.414876,-7.636441,2.363025,9.442496,2.340872,8.318760,8.303438,-0.898445,7.839168,-5.030750,-6.186588,1.771433,-4.074216,7.231733,8.367669,-7.000264,-2.940568,-9.399440,-1.563863,-7.299731,-5.618326,1.296598,0.625027,2.837570,-4.602290,-2.684708,-7.938991,-7.187805,6.912300,-6.871402,-6.314095,2.894658,9.464537,-0.663742,5.740628,8.023490,-1.278521,0.076700,-1.210045,2.520086,-5.467529,-3.647876,7.260233,-8.252538,-6.565865,5.389450,6.256678,1.722347,6.763406,-6.477934,-0.527881,-2.898976,5.996463,0.736965,2.370273,-0.695572,-1.632888,-5.159664,8.945543,-5.109718,5.984705,-7.216833,-2.993755,-9.486826,9.080370,-9.965369,-7.445646,-2.488883,-7.204767,-6.499543,-5.892855,-2.544668,8.767391,0.040751,1.853278,-7.816143,9.754018,8.012620,-6.368050,4.404090,-4.667384,3.117106,9.141701,-0.779895,4.508678,7.440368,5.104826,4.630279,-2.217949,0.686134,-3.219408,9.784590,-6.415899,-3.162098,-2.542024,-0.724156,6.630257,4.788351,-5.361218,0.542488,-3.930347,1.924494,-5.461396,-2.013399,1.183940,-7.720917,6.827156,-2.597674,-0.888692,-6.463520,-6.362572,9.555972,5.255876,-5.276898,6.474195,7.435005,-7.898410,9.386155,3.143232,-1.195885,-0.462852,3.104268,-5.333736,4.991131,-4.053163,3.442191,1.514923,-2.988835,7.766210,-5.053341,-2.704559,4.078021,-4.535937,4.397757,-6.491937,2.667659,-7.509853,9.203978,-5.564648,5.629806,-5.566804,3.562561,-1.551677,-1.237237,0.461692,-1.215342,7.157122,-0.859557,-0.610847,8.381323,4.192785,0.477713,5.759733,-1.676443,-7.469614,-1.977586,-9.010845,-6.058090,-9.707544,1.526107,7.385001,1.631422,1.838915,-7.097620,-6.034193,-0.477952,-2.061867,0.090617,-1.849894,3.769013,-2.624808,-1.584205,-8.896745,9.643949,1.422808,-9.990070,-0.940322,0.304747,4.893064,3.126811,-0.269996,-6.910569,-0.078541,-3.101719,5.802101,9.763560,-5.697200,9.414690,-2.198943,8.836467,7.712970,-5.914521,4.915657,0.377109,6.757283,-9.785198,-0.893539,5.106035,8.937347,-8.092964,9.252916,-8.866206,4.646083,-9.716941,-5.772300,4.008804,2.672138,3.801621,-5.196152,-0.567693,8.872149,0.332301,8.719971,-0.236735,-8.542085,7.072497,-9.301427,2.538415,9.291006,3.928401,0.338598,8.426729,-9.181537,-5.535484,5.682884,4.351451,3.681933,2.126112,4.634067,2.823028,-6.576902,3.499811,-9.234787,-8.887417,2.565187,8.123077,-5.417367,7.624465,4.842967,4.233708,-1.645194,-7.454964,8.291855,-4.373010,7.776087,5.582998,4.831997,4.334668,2.646532,8.958902,9.627155,-1.018949,-9.204238,6.580333,1.080264,-1.032391,3.312293,8.166506,-0.912088,4.448007,-5.680430,9.711897,6.375653,8.702344,-3.194848,7.762942,-5.838190,-7.427290,-9.624744,-4.781469,-9.173762,9.670005,2.422610,2.138614,9.652063,-8.480783,1.700956,5.484128,-1.164159,0.772262,2.196133,-8.530881,-9.029590,-6.109393,-5.469901,-4.346224,-8.589695,-3.164833,2.011883,0.584854,-0.539542,-2.411242,-8.398779,3.038088,-8.545680,8.818002,8.374126,4.324263,-0.870489,-1.538160,4.426557,-5.958420,3.065705,2.962127,-3.822098,3.907293,-3.816939,-2.093366,9.195164,4.412346,-7.620232,1.009916,1.236833,-3.041009,3.435094,-4.765857,0.567804,-8.480097,-2.025139,6.726792,-6.274321,7.295386,-9.123834,5.109690,5.077024,-7.703954,-6.308800,-0.590806,-1.801830,9.820181,3.471271,-7.758089,-4.227044,3.103186,0.708997,3.271273,3.296471,-5.364783,-9.776018,0.582595,9.078511,-4.185284,-2.521632,3.437397,9.032806,-7.214782,-3.243065,1.988889,0.930286,9.323161,-2.035859,-1.812740,-6.799737,4.730496,2.064866,-2.732209,-4.715144,-5.999232,0.341679,-2.929499,-6.392821,-2.432649,8.865746,-3.831846,-9.439356,0.401439,-7.505465,0.328762,5.004575,-3.717735,7.983643,1.997517,1.140839,-1.341589,8.133800,5.738817,7.852040,-6.268664,8.760217,1.072886,9.848854,-8.559504,3.710173,-6.165430,9.254366,1.267442,6.206420,-7.548545,-1.362943,-2.985729,2.042107,4.224515,9.854936,-7.584956,-7.641278,-8.390575,-2.767865,-3.419295,-1.953292,-8.782297,8.261890,8.645762,-6.377827,1.349662,-7.361139,-1.848387,0.501899,6.833533,-8.078619,2.240999,9.176842,-4.699564,8.255756,2.123585,6.933946,1.393311,9.652189,8.746107,-8.870656,-9.094192,-8.634218,4.280764,0.976316,-0.394191,-5.982413,-5.053199,-2.850789,0.783260,6.576492,5.949229,8.810807,8.889675,3.228780,-9.898596,3.705255,8.343749,-4.232925,1.361939,6.235855,4.372006,-8.774130,3.706039,-6.622023,-9.658144,-2.341221,-4.194580,-6.011049,-0.710489,-0.483517,2.113855,-0.174176,-5.155470,7.532082,-1.317257,3.885198,-9.949965,1.296436,-6.343575,6.974601,-6.487563,7.644232,3.155958,-5.898608,6.814094,-8.256257,0.510636,1.948723,6.062846,5.929138,7.232554,6.831944,-5.878825,-3.400396,-8.750615,8.821198,5.154782,6.345408,-3.033945,-4.208835,8.335792,1.102520,0.210074,-9.103887,7.740976,-0.896987,-3.448278,7.747382,3.009457,-2.415268,9.158011,-0.189130,-7.731929,4.685550,1.929177,-4.725457,-7.054649,0.162635,8.698925,7.249376,-8.222235,4.745219,8.496220,8.307189,-7.640579,3.892280,-6.539771,-5.691855,2.516161,9.734444,-4.701438,6.539316,7.193904,-2.448822,-9.271343,-8.817648,-9.742323,-5.818634,-3.141578,-9.227617,3.416082,-0.836352,6.613258,-6.450484,-4.120891,2.217501,3.811230,3.496889,-0.113569,4.309072,3.323517,2.756555,-5.195022,-6.837575,6.751659,1.791149,-3.988474,-1.491326,7.307440,-1.167134,7.709979,-6.827319,1.888397,0.292042,3.026891,-8.957360,-1.679237,-8.278871,8.461520,3.836409,7.006028,2.468928,-2.210089,8.614420,-0.605307,6.000773,-9.754500,0.362623,-6.626547,6.755335,6.259491,-1.367648,0.111134,-4.326904,1.018102,5.629588,0.826483,-1.853189,1.084296,7.168138,-1.093745,0.195249,-1.760137,-3.088618,1.765918,-0.714385,9.627327,8.930250,-4.666145,-5.078992,4.847046,-6.899418,-5.384824,4.754696,1.440734,-1.720061,0.343757,-3.496678,-3.406094,-2.932401,-9.597720,-4.590180,-9.402608,-1.989149,-6.098306,-0.752562,-7.316350,-3.241483,-6.039835,-4.458860,-7.835854,5.685241,-6.861405,9.839433,-5.744707,3.555614,-8.859144,-8.737253,8.352375,2.626420,7.975207,4.939612,7.492091,7.411902,5.994111,7.588413,-4.495825,-5.319759,-1.209922,4.715493,6.939670,5.976276,-0.285974,-7.539159,-0.681219,4.541040,-9.021741,7.109867,-3.469457,6.753573,0.380407,3.668773,0.415344,-9.979640,2.122839,-3.749334,-2.707684,7.669068,6.586329,-4.312410,6.999650,-3.896223,1.870544], dtype = "float64")#candidate|5381|(1890,)|const|float64
call_5379 = relay.TupleGetItem(func_2156_call(relay.reshape(var_5380.astype('float64'), [14, 6, 6]), relay.reshape(const_5381.astype('float64'), [1890,]), ), 1)
call_5382 = relay.TupleGetItem(func_2160_call(relay.reshape(var_5380.astype('float64'), [14, 6, 6]), relay.reshape(const_5381.astype('float64'), [1890,]), ), 1)
func_2497_call = mod.get_global_var('func_2497')
func_2504_call = mutated_mod.get_global_var('func_2504')
var_5396 = relay.var("var_5396", dtype = "int64", shape = (48,))#candidate|5396|(48,)|var|int64
const_5397 = relay.const([-3.448588,2.711282,-2.125875,7.565807,-3.524236,9.577916,9.431829,3.341928,-7.294960,-6.549354,1.691292,9.444225,5.338097,-5.205448,8.035580,-3.625373,-6.243207,0.876925,-2.030690,-0.622525,1.871077,2.034591,1.402100,-5.304558,-3.540505,-0.526546,0.911152,-8.452587,8.756686,6.844468,-2.845100,-6.172142,5.456258,5.480426,-3.063319,-3.495235,-3.648989,-8.955741,4.539545,4.709518,4.397257,0.622396,2.114192,5.814024,-4.789510,-2.509499,4.771759,8.354286,-5.037553,-3.020182,-2.623918,-6.820398,0.635407,-9.748097,3.435669,-2.637035,2.585196,4.347742,4.962687,1.130898,-2.753115,0.930606,-4.580896,-3.730912,5.617780,-2.071774,-2.698499,-5.707437,9.299746,-2.287248,-7.604775,-3.154747,-8.318454,9.685594,-6.916096,-0.872416,-7.356673,-7.589423,-8.760508,1.358540,-5.228171,-5.422722,8.651017,-0.954347,8.829627,4.192568,7.335612,-4.800023,-9.571562,8.438606,-1.945641,7.336635,5.539516,-6.350835,-5.048757,-2.630248,2.653479,1.797413,5.572079,6.309247,-6.409466,3.017276,-9.254533,-0.979052,5.147575,-8.182145,2.063514,-4.905287,6.913245,-9.772198,-3.425772,-1.846254,9.661012,-5.663262,0.731992,-3.150540,0.887235,8.940712,4.543632,-7.900386,-7.088229,-2.109087,-8.977350,-0.505128,2.182550,8.647195,6.426273,4.937716,-9.969862,-7.979465,-3.632641,9.966564,-3.948810,1.080105,-3.282073,-1.561091,-7.770263,-1.559357,5.718865,0.703769,-1.430580,-1.856783,-5.053468,-3.826398,-9.163589,5.204436,5.031623,-4.568999,9.132973,4.114605,7.988026,-9.662252,2.518721,-6.175798,-3.891654,5.911187,-3.497865,-2.408019,-5.718400,1.977596,0.827574,1.393006,-2.423510,-3.359755,8.399228,4.310454,6.260155,5.995858,4.960642,5.834739,2.917343,-9.741227,7.670563,-0.035090,7.297073,-4.346704,-1.368873,-3.418124,4.031003,6.445004,-4.199199,6.016665,-6.232042,-0.250017,-2.990045,3.291757,3.273652,2.755866,6.688730,-1.932500,-8.759904,3.449038,-3.434225,5.494599,9.669660,-3.306503,7.339341,7.771115,-0.733013,1.804001,-3.128764,-0.406579,-3.699936,-6.021306,-6.608604,1.363697,8.209003,9.487531,-1.840219,7.694059,2.961577,1.279434,3.183469,6.774506,5.939547,-4.116508,7.970601,5.227377,-3.258535,7.313563,-6.760665,6.867335,-6.922631,6.739758,9.342243,-3.551610,-8.618883,-3.983256,-4.123196,-0.068663,-9.025539,3.009323,1.113071,-4.858863,-5.371855,-5.668947,-8.435133,-7.866759,8.514941,4.814971,-8.480328,8.313594,9.316143,-6.187009,4.700699,8.494657,2.934866,-3.719026,4.502629,8.044450,-3.865127,-5.017250,0.359942,7.621778,-4.741863,-4.178010,-5.647389,-7.758477,2.456867,-8.199715,0.098318,-5.305716,-0.284649,8.709442,7.273190,-4.028131,0.653215,-8.468888,7.071567,5.390130,-3.290407,1.755747,5.533941,7.920219,-1.938700,-7.394237,9.076126,9.389409,0.026110,-9.004182,9.114884,-6.256024,4.959832,8.208361,7.771941,8.943458,-2.983129,-8.863648,-3.641024,-3.065170,6.409986,-9.471858,-8.560621,2.543554,-6.606088,-1.877613,-2.311358,-5.823336,-4.452097,-4.541798,-3.212338,4.061718,-8.357470,3.017004,7.627116,-1.698511,-3.996321,-5.672240,-5.723444,-9.475791,8.409100,-8.219806,9.203272,2.076840,-4.920500,2.734882,8.098579,-2.595647,6.604173,-9.829052,9.213625,2.696655,2.861152,-1.749580,7.323595,2.290109,-5.323045,-3.882083,-2.036495,7.631903,-1.068200,-2.540322,2.348406,6.282091,-3.250885,-4.380385,-4.027361,0.306753,6.699125,0.715073,-1.348659,5.196124,-2.402738,-5.522238,7.426375,-9.238786,8.141544,-5.114727,9.636985,0.263754,6.921041,0.038352,6.152699,-4.173245,7.298462,-7.646682,-9.345563,-8.981252,6.977803,0.596394,-2.505578,-1.119106,-1.876519,-3.715223,2.035456,4.446975,4.105211,-9.587141,3.030556,7.763858,3.428113,-0.390509,3.471453,-8.601354,-0.605280,-9.416780,6.554206,-3.586190,3.586436,6.710913,-3.513641,0.105450,-3.374439,-5.325270,-8.772308,-5.701695,1.313835,4.989903,9.491429,-2.524898,-4.054434,-6.107713,0.378274,8.424945,8.046192,0.260466,-2.650217,-5.513903,8.366443,-9.708263,-5.994260,8.185823,-8.786534,8.255597,-7.577328,7.487930,-5.471901,3.119242,-2.847417,-6.811262,2.969752,3.683790,-1.383831,-2.911074,-0.063195,-5.840560,4.580781,5.374583,-2.159951,5.495731,-3.724109,7.549729,-5.494033,-2.568560,-0.549462,8.321702,8.302086,2.064094,-2.536395,8.311991,-3.894374,1.097314,7.335770,6.662431,0.519081,-3.117537,7.844711,-9.778758,-1.335471,-5.004056,3.364514,1.254042,-8.361432,1.476495,-4.175367,-8.262631,-1.751964,5.523734,-3.605130,3.626406,3.315524,4.588277,-4.882172,4.111848,-3.447409,7.507910,5.484419,-0.340227,1.551283,-0.936258,-4.225581,-2.254745,-5.350904,-9.681101,3.613419,7.765842,-4.731280,2.724849,-1.639638,0.420229,7.958452,8.687663,1.681952,-4.003466,2.569851,6.962108,7.714791,-8.336194,1.907672,-8.705473,-1.041155,5.910220,-6.924099,4.259987,0.524715,-7.965291,1.024221,3.598352,1.333579,8.748106,-9.261145,1.293158,1.233478,-2.466820,-2.594455,0.008853,-9.709524,6.238408,6.052933,6.301705,-6.530814,7.530470,1.846218,-3.973625,4.528725,4.526961,-1.328543,3.010609,-0.462410,-0.936654,7.855839,-2.305628,2.773810,-5.822234,-1.104054,9.131841,5.790808,0.086068,-6.058911,-0.292426,4.686059,1.532237,-5.103652,3.857555,-1.070055,4.408848,2.388648,6.683891,-7.539025,-8.181769,-6.413700,7.804075,-5.630404,-4.117062,-3.517846,-6.222747,2.581643,-0.688068,1.743411,-9.974510,8.461939,1.369161,0.417633,9.996276,-0.305768,0.255847,-5.684868,6.029235,7.510244,7.789253,-9.447987,5.405584,8.853142,3.387957,-4.098085,4.205015,1.709064,-7.183491,8.328543,-7.443097,2.486906,-4.093991,-7.337559,8.173090,-2.695587,-1.201061,-2.542357,-8.798459,5.093092,-9.872272,9.200315,9.766289,-1.179408,-7.993022,-5.771646,-0.181300,-3.212113,6.830744,-4.706499,-2.764532,9.202270,8.645431,-1.350120,5.596626,0.259846,7.439946,4.836354,3.151279,5.728361,-3.682121,0.013106,8.816492,6.568393,-3.472931,6.543484,-3.826793,8.534991,7.166770,0.897705,7.858213,-5.033060,-5.601741,-3.272711,-4.176036,0.995981,0.117224,6.021127,-1.177256,6.241419,-7.568766,0.319830,1.783007,-9.112526,-1.259781,9.906046,-0.226065,8.139537,-2.203326,-2.339976,9.857366,2.474020,-2.739771,7.220779,6.391511,-3.218699,-3.885619,8.385600,-6.327850,-7.455979,8.117265,4.827214,3.148406,-7.857885,-0.657097,-4.066350,-9.366010,-1.529453,-2.044015,4.050381,-3.308292,0.506260,4.252060,-8.243972,-9.445318,1.060760,-8.152033,1.802773,5.426883,6.418473,1.086695,1.022148,4.633837,-6.415035,3.752302,-1.215857,5.611649,-9.976161,-4.685838,7.344078,6.845855,-6.702499,6.226123,-6.143810,-2.799732,-6.166006,0.712954,8.125236,5.389894,7.037387,-6.299501,-2.676647,6.026632,-2.970278,0.662328,3.220736,-1.831579,-3.206356,0.033189,-5.983248,3.042514,0.004148,-1.972239,3.095818,9.888495,7.698133,-6.213904,3.529307,-6.175532,9.948785,2.402662,0.467123,5.380502,9.557519,-0.366315,-8.948617,-9.832732,-5.887974,-5.390271,-8.866927,-7.698010,9.441414,3.260240,1.514975,9.927504,3.608850,8.474754,-0.490117,2.378049,9.543454,-7.583175,3.285941,-4.716804,7.840618,3.427217,-7.439995,2.763337,6.445048,-7.943927,6.493598,4.073884,0.003079,0.373505,8.049316,0.699620,-0.517429,-9.183335,2.184861,3.599278,-5.151443,-1.825792,2.198402,-1.784581,7.477023,2.298832,-4.819514,9.669082,4.307588,-0.982370,6.094518,8.247275,1.886370,2.364013,-3.579852,6.326864,-0.337183,0.393214,-1.462285,-3.123072,8.801061,-2.631047,-7.513702,1.359749,-2.056501,6.551658,7.648052,0.436566,-9.063357,5.611959,4.005628,5.534896,2.369126,7.224275,3.886893,7.527798,3.109053,-4.800486,4.210275,0.793602,1.619859,-9.139880,-5.961523,5.043533,-9.118328,3.943842,-9.513854,0.852025,-5.404142,0.373007,-2.515573,-7.407451,-1.220113,-1.601046,-6.795063,7.058996,-1.818109,-4.777929,5.628572,1.702241,6.128136,1.694487,-8.311816,7.280645,-7.088433,-5.298852,3.959221,-9.742914,3.171864,9.118837,5.941122,-4.335632,-2.217113,-8.701331,-4.458565,-5.133874,-5.876287,8.002519,-7.083498,6.738624,5.958755,-1.865169,-3.295984,-5.607738,3.221849,6.817496,-5.497053,-8.653221,7.218906,-0.962289,-6.808555,1.993952,2.345584,1.482671,9.666657,-7.179672,-3.585725,9.851608,0.075950,9.759109,2.229584,5.054162,-6.801984,9.032281,-4.257695,1.640869,-7.186558,-9.561811,-3.904565,3.095223,-9.001035,-4.288182,-7.142565,-2.304370,-9.930930,-3.725926,-1.189220,4.195095,8.640733,-5.887625,1.867920,8.663156,-5.589179,4.113248,1.135958,-6.477640,-3.819129,6.399164,-7.224239,-1.625360,4.145222,2.730279,3.501976,-0.894530,0.999630,-9.583116,-3.128699,-5.187801,3.141011,5.887591,-0.686799,8.282176,5.231277,-6.406376,-8.098161,-2.315942,1.508224,7.967129,-9.427467,-8.706724,7.888535,-6.193314,-8.870054,-2.937099,-5.636847,-9.415154,-7.340053,5.609067,-2.585866,4.763888,8.895880,-4.863841,8.338636,6.666465,8.901505,8.282766,-8.835913,5.568842,-2.851133,3.137095,9.918957,-9.916174,4.714414,8.886023,4.138001,-1.959636,-7.362923,3.615388,-9.904238,-9.522595,-5.697616,-6.025922,0.452764,4.416843,-1.014567,2.969131,0.173398,2.663959,5.191476,-9.481475,7.638361,8.891219,-0.658698,-6.366910,0.644007,-7.709642,-0.666407,8.795894,-2.734425,-8.972330,9.897276,8.727476,6.666830,5.213523,7.895488,7.433663,-1.886587,5.990216,5.969836,2.070652,-1.739561,5.167498,0.489834,-4.928572,1.941125,-8.493169,-8.955273,0.301037,-1.495863,6.852187,0.578622,-2.537435,5.691002,-2.251785,1.244930,-3.307823,2.859987,4.282750,-2.167560,9.082993,-6.064412,-1.760622,6.095802,-3.306415,-8.719191,0.253555,-1.773975,7.564419,9.035411,-9.728630,4.040030,-8.987145,-2.443124,4.915623,-3.386620,7.917997,-8.776173,8.144359,7.331151,1.807532,3.574861,8.349568,8.750083,-1.901735,-0.083860,4.840151,5.754087,9.520896,5.499282,-0.943924,9.768176,-1.964669,7.670067,9.131630,0.747226,-1.937844,6.166871,-6.196037,-8.250807,-7.328820,-4.495019,-1.579325,6.030826,6.267191,8.008820,-8.573705,2.388603,-0.158005,3.834635,-2.342588,1.638643,0.653735,-9.060155,5.702068,-9.327175,-0.499731,5.098294,-3.219338,-4.923024,-4.287536,3.329500,-0.286723,4.922560,0.775364,-3.159563,-1.966284,-8.624866,-0.822672,5.598255,2.591949,2.097056,-5.932645,0.525449,-2.260733,3.495446,8.332985,1.218346,8.021167,-7.089500,5.690875,-1.106399,-4.305082,-6.031652,-9.154040,-6.971129,6.460845,6.556849,6.698871,2.561146,-8.706254,-9.111628,1.001465,1.902438,-9.811387,-3.055332,-3.952589,1.410979,0.414944,5.174231,-0.310793,-2.591619,-8.592305,9.649440,-3.402922,3.814006,5.211653,-1.558438,4.587203,-9.482640,8.967705,-7.876947,3.096615,1.337475,2.798409,-1.357177,-5.612195,7.786082,-6.207278,-3.152824,3.048668,7.988292,3.224928,-0.989681,5.418724,6.489678,4.422720,-1.260518,4.827761,8.027500,0.407897,-5.574336,-9.555169,-8.819445,8.834204,7.250559,-5.658015,8.630344,-2.109039,-7.624230,-8.139442,4.335631,0.089882,9.642983,7.290953,1.461623,-1.695403,-9.188482,-6.329248,-0.630012,-0.471443,-8.366295,-0.593955,-1.317430,8.724635,7.629415,-2.115607,7.157538,-7.042746,6.567814,-0.886724,-5.293868,-4.596174,1.507089,6.193152,-3.583251,-7.232434,-6.111836,5.124906,8.584805,-5.459771,-3.743679,5.228467,-6.590798,-1.103627,9.644887,1.035394,-6.867610,4.761103,-1.414210,3.973926,-9.574950,3.371866,-6.322607,3.370127,-3.568282,-9.501720,8.711280,-4.261927,-1.768647,1.322769,8.241051,9.390594,-3.069774,-3.826933,-6.019998,-4.682632,4.695332,6.896800,-5.579628,3.858551,-1.884354,9.464486,-1.887594,-5.070963,5.768954,-9.809545,-8.289343,-8.401790,-5.304841,5.671856,-9.194177,8.367953,6.497068,5.143855,-2.505334,-7.932833,3.641914,-1.691683,-7.712136,-7.021998,-5.544316,-3.130267,-2.050891,9.235653,7.158298,1.191282,-1.634521,4.300792,-6.281139,9.989768,-0.967772,1.158180,-0.863671,5.778356,-1.955602,-7.007002,-9.343552,1.167999,1.621565,-3.275677,8.937325,-5.717529,-7.782387,-9.334696,-0.992678,1.720702,4.923378,-0.918309,-1.878789,-0.454266,5.956189,7.617986,-7.060438,9.613107,-3.559015,-8.313887,4.588657,0.334398,3.448658,-1.234708,-8.018821,-6.722108,3.876996,9.763657,-3.107526,-6.753632,-2.771481,5.883681,4.066198,-1.643917,-7.078342,6.871355,7.540031,-7.597952,-1.115859,-7.105831,-3.678935,6.892504,-7.648701,-4.085455,-6.684222,-5.522165,-6.685851,3.457105,-9.561167,0.276606,7.092173,4.416531,-6.073594,8.622087,-6.833967,2.259268,-0.087002,-5.157616,7.359962,0.229834,-7.315354,-0.761391,6.945131,-2.791531,8.624621,2.292211,-8.043684,1.515800,-6.429599,-3.813274,-9.756721,1.605395,-8.491867,6.888904,-6.026080,6.809917,0.406922,-1.185177,-6.099439,-5.998107,-6.145362,-6.312634,-6.811493,8.375724,-3.537103,-0.827530,8.152944,5.335716,9.293978,5.016632,9.463443,-3.476247,-7.961038,7.890785,5.744936,-1.976987,1.087727,2.719880,-7.687660,-1.968502,-0.981560,-9.402944,5.301537,7.699380,-1.089610,-6.878984,5.770472,-7.484217,9.967816,-5.632525,-4.708797,8.004205,8.049744,7.737038,8.687683,-2.306108,-0.464158,-7.333922,-6.061802,5.850741,-5.396392,-4.533123,-1.857230,-2.753251,0.433897,6.723314,9.301108,1.620337,4.551207,2.354843,7.375050,-2.871018,-9.908762,2.368673,-5.167851,8.013729,-6.385026,-6.553627,1.517752,5.523388,-2.799011,-9.258979,8.265098,-5.702773,-4.764171,6.320633,-1.945775,-3.093145,-5.718086,9.116930,-8.479123,-9.731553,4.341922,5.810527,2.162313,6.445076,8.620830,9.877882,8.580542,7.779721,5.406596,7.171882,-2.295517,-5.179777,2.615679,8.341639,1.284038,4.305490,5.092935,6.146010,1.504111,-8.703596,-0.105058,0.027729,5.820364,7.734585,6.874149,-7.002877,-5.551472,2.602896,1.713377,3.182107,-9.884999,7.778265,-5.259887,-3.917524,4.356204,-1.549493,-5.215938,0.528034,2.254801,4.232673,-7.216689,-8.410748,-1.302558,-4.756645,0.755093,-9.483788,-4.977782,5.597893,-5.800556,-2.935037,-8.569425,2.312288,-6.509400,-0.540359,-9.390303,5.773716,-4.041080,4.203162,5.045708,-6.033787,-8.254025,-4.914823,-3.684001,2.272645,1.886596,-8.578017,-1.099039,-3.444411,-6.823591,-1.072380,-0.569683,1.893979,-0.913152,-5.261602,6.954152,-2.593420,5.245355,-6.439415,-4.912007,1.332211,-7.895297,5.330190,3.703174,8.097534,-8.963423,-8.751860,7.971050,2.905178,2.093874,8.349410,-6.448698,-6.167408,-6.012616,9.831643,-5.232766,-7.163420,-9.669432,2.769435,-6.166838,-8.509728,5.242582,1.814736,-1.275559,-8.070046,-7.843154,-2.912165,0.898587,0.043083,-6.067845,-3.760710,8.434925,1.679908,-9.520896,2.593637,7.583645,7.390736,0.932606,-6.601077,-6.921535,1.638265,-2.217847,3.511309,-5.556940,-1.726877,-8.321138,5.379502,0.361660,5.502853,0.634936,-3.428414,-8.645736,3.545320,4.901585,-1.164999,-9.783129,-6.416188,6.823074,-9.230684,-8.344986,-8.325468,6.499256,-6.901859,-4.085342,-4.074934,2.591411,1.006190,1.120403,9.156189,-7.632628,-4.079079,9.708633,2.118785,-1.115014,-4.981407,-1.655290,9.062932,-9.670125,0.800136,-8.865406,-8.196613,-7.947786,6.030778,8.852375,-7.557478,-9.915296,-7.879395,-8.226013,1.678144,-0.058660,9.426141,-7.329356,-6.331081,8.330424,-8.558684,-8.793273,7.166138,-6.483152,-9.179470,7.390810,5.190709,8.999018,7.628264,9.266816,-9.278419,-6.283483,2.583855,3.970934,2.155636,6.031630,-5.262033,-1.934027,-9.151307,-5.921217,-7.311463,-7.679882,-9.204063,-4.604908,5.644198,-4.288617,8.334627,8.766694,8.653181,-9.795720,0.293126,-6.104385,7.473616,4.878569,7.969362,-3.349208,6.469706,6.608694,-5.439209,8.139053,-1.443553,-0.726291,-9.386409,-3.241851,-9.622033,-7.660553,-9.484291,6.738768,-8.777619,1.232302,-3.899183,9.080520,-3.858787,6.624530,-9.032510,-0.057588,-8.073565,-0.213383,9.215739,8.868933,-6.052806,1.946214,-1.476822,-1.048299,-0.407892,5.706047,-8.313283,-3.286449,4.276944,6.871730,8.524625,-2.089018,-7.085934,-7.245609,2.047504,4.026892,-4.866146,-4.736785,8.700804,4.194757,5.224237,0.345204,6.619087,-4.743443,6.546966,6.301470,-4.625227,5.729595,-2.439847,-4.195644,3.510751,1.898349,-7.915535,-3.358662,6.165697,2.762427,-1.739386,-4.594121,7.157454,4.499038,-7.200551,2.522851,-6.386657,-8.130831,-8.370295,5.431524,-9.426407,5.652256,-0.093138,6.444243,2.270315,-1.506693,6.651568,-8.251501,-9.188589,5.407235,-7.634276,3.568494,4.677749,1.901574,-1.627055,0.089517,-3.725941,5.627364,0.115687,-3.965083,-4.032777,-0.857328,1.235291,-7.673307,-1.379700,-2.149748,-2.444337,-5.504732,4.317995,3.175823,-3.859701,4.385604,-5.819275,3.562593,8.399669,-0.795419,6.951985,4.975940,6.219823,-3.335529,6.485316,-8.602662,-9.605411,-3.792439,6.236525,4.971001,-0.548210,-5.950607,9.177536,-0.992035,3.323327,-6.038827,-5.701654,9.823313,2.709445], dtype = "float64")#candidate|5397|(1680,)|const|float64
const_5398 = relay.const([[2,7,-7,2,-1,-9,1,-5,4,-8,-8,-7,-8,-4,-5,-6,-6,-3,-1,2,-1,4,2,-6,1,9,2,8,-5,1,-5,-6,-7,5,-5,3,9,-5,-7,5,6,-9,2,-6,-2,-6,3,7],[3,9,-8,-4,-10,-9,-10,4,10,4,-1,-8,9,-9,6,-2,7,-6,6,3,9,-2,8,-6,-9,10,-3,4,-2,2,-8,-6,-10,1,4,-3,-8,5,10,6,-4,-3,5,-6,-10,-7,-7,-5],[-7,4,-2,6,1,-8,3,-2,10,-3,-3,-4,-1,3,-3,-4,5,-2,4,-9,-9,4,8,-10,-1,5,-4,-7,7,-3,-8,-1,-5,-4,-2,2,7,-3,3,-5,-6,8,-9,-7,5,-9,6,-8],[4,2,2,-7,-1,5,-4,10,-1,2,-1,8,-6,9,-6,7,-8,8,-2,-10,-5,-10,-9,1,-7,2,9,-6,-5,-10,-1,-3,-5,-10,5,-1,8,1,2,-7,-4,-10,7,1,10,-4,-8,9],[-7,-10,2,-5,3,-6,-10,7,-2,-9,1,-2,1,2,-3,1,-4,4,-2,-4,7,-1,5,-2,-5,5,-1,8,10,-9,3,-3,-1,-10,-6,-10,-6,-9,-1,5,2,-3,-6,-4,1,9,5,8],[9,-1,-4,-7,1,9,-6,7,6,-2,-9,9,2,-1,-2,-7,8,-7,8,-1,9,-9,6,-5,-4,-3,3,-2,-1,-6,-3,-5,10,5,5,4,-8,1,1,-6,-2,9,-2,4,3,10,2,8],[9,-7,1,-10,-6,-3,-6,-1,8,6,10,-5,8,2,-1,2,-6,-4,-10,-4,-5,3,-3,-10,6,-3,3,-1,3,3,-4,6,1,4,4,10,-6,1,-1,10,-6,-4,-1,4,-8,10,1,1],[5,5,-5,1,10,-1,-4,8,6,-2,9,-2,2,-9,5,-5,7,-2,-7,-4,-6,9,7,-3,-1,1,1,-5,3,-4,-5,-1,-10,-5,-7,-5,-5,6,-2,-9,3,1,3,-5,-1,7,9,-8],[-2,-6,-5,3,-5,-4,-9,8,-2,4,-4,-4,-1,2,-8,8,5,-10,-7,10,3,7,-8,-1,-3,-8,7,3,-2,5,7,-1,-1,3,-3,8,-9,-7,9,7,-7,10,-6,10,-9,-9,10,1],[10,-7,-8,-10,-9,6,-7,1,-10,5,-5,-4,-2,5,3,-5,-1,-6,9,-8,5,8,6,5,2,2,7,-4,-8,-2,4,-4,10,-3,-5,9,2,-1,9,-4,8,-8,1,3,-10,10,2,10],[3,-3,4,-6,9,7,-3,-9,-9,5,9,-1,5,-7,-5,-9,8,-7,-3,-1,2,10,-2,-8,6,-1,3,5,3,-7,7,-9,9,9,10,-2,-1,10,1,-4,-3,-1,-7,6,-8,-10,-8,-10],[-4,-9,-3,7,-5,-9,4,3,-8,-4,3,-7,-5,-4,8,10,-6,-6,-9,-7,7,3,9,1,-2,-4,-6,-6,2,4,5,-1,4,-2,-8,9,4,1,10,1,-6,7,-10,5,-2,-1,4,9],[-9,10,1,5,1,-9,7,-3,6,6,-4,9,9,-6,-2,-8,-8,-8,-10,-4,-8,-2,-2,-7,8,6,4,9,-5,-6,-9,-8,5,-6,9,-5,-3,-4,-3,-3,4,-2,-3,2,7,-5,-2,-5],[-8,-1,-1,8,5,-6,10,-9,9,3,-4,9,10,-8,-6,-1,-4,-3,-1,8,10,-2,5,7,3,-5,-2,8,8,-6,9,-9,2,-7,-3,-8,-10,3,2,-9,-9,-3,7,-5,-7,9,2,8],[-10,-6,-1,5,-5,-7,8,5,8,-10,-1,-2,-8,6,-9,-4,1,-1,6,-4,-4,-9,6,-4,4,-1,-9,-3,8,-8,4,-7,4,7,-3,1,9,4,4,10,-9,10,8,6,-1,-2,-6,9],[-8,-10,-5,-10,8,2,1,-9,4,10,-5,7,-1,-2,-9,-9,-7,-8,7,-9,-4,-9,2,5,1,10,-10,-3,-8,-1,6,-4,8,-7,1,-2,-6,10,-2,8,8,9,-4,10,5,-1,-1,4],[-8,-6,7,-6,10,-3,-10,-6,-8,6,-5,-6,-10,-1,-3,-2,-8,-1,-8,-7,2,-1,-2,1,-9,-2,5,-5,6,-10,3,-9,2,-5,7,-9,6,1,6,-6,9,9,9,-1,-2,-5,4,-7],[3,7,5,-9,5,-7,-10,-7,-4,-4,-2,9,5,10,-7,6,-8,10,-10,-4,-6,7,5,-6,-10,-3,5,-8,-5,2,5,10,2,9,-8,6,-4,-4,6,-2,-2,1,-7,10,9,-4,1,-8],[-5,-6,9,-8,4,4,4,8,-2,-3,-10,-1,-6,-3,-10,-3,-7,-9,-10,9,-1,-6,10,-10,5,-1,6,-5,-10,1,-9,-6,-1,1,6,-5,-5,-3,-5,9,-6,-6,-4,-5,7,-4,-10,3],[9,-5,5,1,3,9,7,-9,-10,-3,5,-1,-8,1,7,-1,7,1,-8,-6,-6,-10,-2,-4,-3,9,9,-2,-4,4,6,-10,-3,-7,-3,3,-7,-2,3,5,7,6,3,10,1,-3,-1,-2],[-3,-7,-1,8,5,-10,8,-6,9,-10,10,-2,-5,-9,-7,1,9,6,8,9,4,2,5,8,10,8,9,4,-4,-2,-4,-1,-1,-5,1,-2,3,10,2,4,7,3,-2,1,9,-7,6,-8],[-4,-4,6,1,-2,9,-8,-7,5,-10,8,-4,-5,-10,8,-6,10,9,-7,-5,-1,2,-9,4,-8,10,-8,-3,-5,1,-2,8,-8,7,-9,-4,-9,2,3,2,2,9,6,2,8,7,-2,-3],[-1,-8,5,3,-6,1,-2,-5,5,-4,-8,4,-2,6,-7,-4,9,1,4,9,-8,1,3,6,-10,9,-9,-1,-6,-4,-6,-3,2,3,9,-6,-10,9,-1,-1,7,8,-5,-6,-8,7,-1,-2],[-4,7,-7,-2,-9,10,8,-2,3,3,-1,-2,1,4,8,5,3,9,4,-6,-2,3,-10,-7,5,3,-2,6,2,7,7,4,-3,-7,4,-8,-10,8,-7,2,-8,-9,-8,6,-4,2,5,1],[-8,-3,-2,1,-3,1,-8,2,-8,8,6,7,-9,1,-4,-1,3,-7,8,-8,-8,3,-3,-2,7,-8,6,-3,6,-8,-10,-5,7,-7,-9,-8,-3,-5,-5,7,8,5,3,-8,5,9,9,8],[5,10,10,3,8,-10,-4,7,4,-8,3,8,-4,-3,3,8,9,-4,-8,2,4,3,9,-1,-3,2,5,-5,-8,-1,-2,-9,-8,7,9,-6,-1,2,-8,-5,-2,-8,-6,5,3,-5,6,5],[-6,-4,4,-7,-8,7,1,-8,8,9,10,7,1,-6,5,-3,-6,5,8,4,-10,1,-2,6,6,3,-3,-9,2,3,7,-6,4,2,3,7,7,-7,-8,9,10,2,-2,-10,-6,-2,1,-7],[-9,-9,7,6,-6,4,-7,2,7,-3,-4,-5,-7,5,-5,5,5,6,1,-5,4,3,-4,-1,8,10,-8,-2,4,-5,4,-2,-5,1,10,-5,5,8,-2,8,4,1,7,-8,-5,-7,-2,-9],[7,7,4,-2,1,-8,-10,4,-6,-7,-2,-1,6,7,-7,9,4,1,-7,9,-4,10,3,7,8,-2,9,-9,-3,4,-3,-6,-8,-7,2,10,10,8,-3,5,-1,4,-2,6,9,7,-5,-9],[2,6,1,-9,-8,-6,-4,-4,6,4,1,5,-1,2,-7,-7,-8,-2,2,9,10,9,-6,8,1,2,-3,-3,-9,-10,-7,-5,1,5,-1,-1,2,5,-5,10,7,7,8,4,-5,4,-1,-1],[8,-6,-2,10,-9,10,7,9,1,-4,5,4,10,6,-7,-4,2,-6,8,-8,8,-2,-7,9,-6,7,-10,-5,-1,2,9,4,5,-8,5,-2,4,-10,-3,-9,1,-4,8,-1,-10,10,-8,-1],[-4,8,4,2,1,9,2,-5,-5,-6,-8,-4,2,8,-8,-3,-9,-4,10,-1,10,7,7,7,-2,-4,9,-9,-4,1,7,6,6,10,-6,8,-10,-7,6,-8,-6,9,2,6,-4,-8,2,8],[4,5,9,-5,6,-6,8,3,6,-9,9,-6,4,-5,-10,6,2,-3,5,-2,3,-5,9,5,9,6,1,2,-6,4,1,9,3,6,3,9,5,-5,2,-2,3,-7,-9,-2,8,-2,-7,-4],[-4,-10,-10,1,3,-10,7,5,9,4,3,-3,-3,-9,6,5,-8,7,4,-1,-5,3,10,-1,10,-7,3,-3,6,9,9,-2,-8,3,6,-2,-5,-4,-3,-6,-2,7,2,6,-3,-10,8,9],[2,10,8,-10,7,9,-8,-2,-5,-10,10,-7,-10,5,-8,5,-8,7,-7,10,2,5,-4,2,7,-10,-9,-9,-3,-6,1,-2,-8,-7,-7,-2,-8,-9,-3,4,5,6,1,1,-10,-5,-2,-9],[8,-9,7,-2,-6,9,-3,9,9,10,-9,-3,1,9,7,-6,-6,-7,-6,-9,-1,-2,-1,10,8,-9,-4,5,10,-1,-4,9,-1,4,-7,-10,9,-3,-4,-10,5,-1,-2,6,-2,9,3,-5],[-6,2,2,-4,-5,-3,9,3,-5,-7,-1,-6,-10,-9,3,-7,-5,-2,2,-7,-2,8,-6,-9,5,5,-7,-1,6,-9,-3,7,7,4,7,8,4,1,9,8,-6,-2,-3,-1,2,-9,-6,5],[-8,-3,-2,2,-9,5,-3,-3,-5,-3,9,-9,-3,8,-5,-3,3,5,8,-3,-2,-6,9,-5,4,3,1,-6,10,-4,-8,7,-2,9,2,7,-8,1,2,-4,-4,-2,10,-9,-2,5,-9,-1],[5,-1,2,2,-2,-1,-1,-5,-3,1,-6,4,-5,-8,-9,5,1,-2,-7,6,9,6,-4,4,9,-1,-6,-3,-1,-5,-1,6,-8,8,-5,5,-2,4,1,3,3,-2,-8,10,-5,-2,5,10],[-8,-9,3,-7,-4,-2,8,4,3,10,1,1,-7,6,-10,-7,5,1,9,-4,10,-7,-5,-2,7,10,-6,-5,1,-6,10,-7,-1,-4,8,-3,-5,-9,-9,1,-4,5,-9,2,-4,10,2,-8],[8,3,-9,4,-5,6,-3,2,-5,7,9,-5,6,6,7,-2,3,2,-10,-8,1,-2,1,4,-3,2,-8,5,-4,-5,5,7,3,-2,6,-9,-3,1,-7,4,6,3,4,-10,-1,9,-2,-3],[-6,7,4,8,9,3,-6,7,2,-6,10,-7,2,-6,-4,9,-6,1,6,-9,-3,-2,-9,3,-1,-10,-6,1,-2,-4,7,-6,2,3,9,5,-4,2,-10,-7,-3,-3,3,-9,-2,-1,8,2],[-5,10,-4,-7,-3,-4,-4,-3,7,8,-9,-4,9,10,3,7,-4,3,1,-8,8,7,-2,-9,-6,6,-1,8,6,-7,-9,-6,-9,-3,-8,7,5,-6,-4,-4,1,8,10,1,-4,-4,3,6],[-8,4,-1,2,5,-1,-4,-1,-6,-8,-7,-4,-7,3,-10,-2,7,-6,7,4,-9,-2,1,9,-4,-4,4,-3,-6,-1,-5,-5,-8,-3,-1,8,-4,-3,4,2,7,-1,4,5,10,6,-10,-8]], dtype = "int64")#candidate|5398|(44, 48)|const|int64
call_5395 = relay.TupleGetItem(func_2497_call(relay.reshape(var_5396.astype('int64'), [2, 4, 6]), relay.reshape(var_5396.astype('int64'), [2, 4, 6]), relay.reshape(const_5397.astype('float64'), [1680,]), relay.reshape(const_5398.astype('int64'), [2112,]), relay.reshape(const_5397.astype('float64'), [1680,]), ), 3)
call_5399 = relay.TupleGetItem(func_2504_call(relay.reshape(var_5396.astype('int64'), [2, 4, 6]), relay.reshape(var_5396.astype('int64'), [2, 4, 6]), relay.reshape(const_5397.astype('float64'), [1680,]), relay.reshape(const_5398.astype('int64'), [2112,]), relay.reshape(const_5397.astype('float64'), [1680,]), ), 3)
output = relay.Tuple([call_5368,var_5369,uop_5376,call_5379,var_5380,const_5381,call_5395,var_5396,const_5397,const_5398,])
output2 = relay.Tuple([call_5370,var_5369,uop_5376,call_5382,var_5380,const_5381,call_5399,var_5396,const_5397,const_5398,])
func_5400 = relay.Function([var_5357,var_5369,var_5380,var_5396,], output)
mod['func_5400'] = func_5400
mod = relay.transform.InferType()(mod)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mutated_mod.get_global_var('func_5400')
var_5402 = relay.var("var_5402", dtype = "uint16", shape = (15, 8, 7))#candidate|5402|(15, 8, 7)|var|uint16
var_5403 = relay.var("var_5403", dtype = "uint16", shape = (72,))#candidate|5403|(72,)|var|uint16
var_5404 = relay.var("var_5404", dtype = "float64", shape = (504,))#candidate|5404|(504,)|var|float64
var_5405 = relay.var("var_5405", dtype = "int64", shape = (48,))#candidate|5405|(48,)|var|int64
call_5401 = func_5400_call(var_5402,var_5403,var_5404,var_5405,)
output = call_5401
func_5406 = relay.Function([var_5402,var_5403,var_5404,var_5405,], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5424 = relay.const([[-1.392168,7.276760,7.139025,-0.214573,9.500274],[1.808223,-5.765376,-1.010541,-6.976003,3.972912]], dtype = "float64")#candidate|5424|(2, 5)|const|float64
uop_5425 = relay.log(const_5424.astype('float64')) # shape=(2, 5)
func_5235_call = mod.get_global_var('func_5235')
func_5240_call = mutated_mod.get_global_var('func_5240')
var_5428 = relay.var("var_5428", dtype = "uint32", shape = ())#candidate|5428|()|var|uint32
var_5429 = relay.var("var_5429", dtype = "uint32", shape = (2,))#candidate|5429|(2,)|var|uint32
var_5430 = relay.var("var_5430", dtype = "uint8", shape = (144,))#candidate|5430|(144,)|var|uint8
call_5427 = relay.TupleGetItem(func_5235_call(relay.reshape(var_5428.astype('uint32'), []), relay.reshape(var_5429.astype('uint32'), [2, 1]), relay.reshape(var_5430.astype('uint8'), [144,]), ), 5)
call_5431 = relay.TupleGetItem(func_5240_call(relay.reshape(var_5428.astype('uint32'), []), relay.reshape(var_5429.astype('uint32'), [2, 1]), relay.reshape(var_5430.astype('uint8'), [144,]), ), 5)
output = relay.Tuple([uop_5425,call_5427,var_5428,var_5429,var_5430,])
output2 = relay.Tuple([uop_5425,call_5431,var_5428,var_5429,var_5430,])
func_5441 = relay.Function([var_5428,var_5429,var_5430,], output)
mod['func_5441'] = func_5441
mod = relay.transform.InferType()(mod)
var_5442 = relay.var("var_5442", dtype = "uint32", shape = ())#candidate|5442|()|var|uint32
var_5443 = relay.var("var_5443", dtype = "uint32", shape = (2,))#candidate|5443|(2,)|var|uint32
var_5444 = relay.var("var_5444", dtype = "uint8", shape = (144,))#candidate|5444|(144,)|var|uint8
output = func_5441(var_5442,var_5443,var_5444,)
func_5445 = relay.Function([var_5442,var_5443,var_5444,], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_5469 = relay.TupleGetItem(func_4837_call(), 0)
call_5470 = relay.TupleGetItem(func_4839_call(), 0)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
const_5494 = relay.const([-7,10,-3,3,7,-4,-5,-5,-5,-5,8,-2,3,4,-7], dtype = "int16")#candidate|5494|(15,)|const|int16
const_5495 = relay.const([-1,7,7,6,4,-3,2,7,2,2,1,-10,-7,2,-7,-10,-3,2,9,-5,8,3,6,9,-10,-2,2,-5,-8,7,-5,4,5,7,-2,8,-2,1,-9,-8,9,1,-1,2,-5,-5,-5,-10,4,4,-2,7,-3,2,7,2,9,7,2,-1,6,9,6,-4,9,-6,2,2,10,-9,3,2,7,-4,-9,-7,-1,-8,10,-7,10,7,-5,-9,-5,1,-2,-4,2,-9], dtype = "int16")#candidate|5495|(90,)|const|int16
var_5496 = relay.var("var_5496", dtype = "uint8", shape = (24,))#candidate|5496|(24,)|var|uint8
call_5493 = relay.TupleGetItem(func_559_call(relay.reshape(const_5494.astype('int16'), [5, 3, 1]), relay.reshape(const_5495.astype('int16'), [5, 3, 6]), relay.reshape(var_5496.astype('uint8'), [24,]), ), 0)
call_5497 = relay.TupleGetItem(func_563_call(relay.reshape(const_5494.astype('int16'), [5, 3, 1]), relay.reshape(const_5495.astype('int16'), [5, 3, 6]), relay.reshape(var_5496.astype('uint8'), [24,]), ), 0)
func_4542_call = mod.get_global_var('func_4542')
func_4544_call = mutated_mod.get_global_var('func_4544')
call_5501 = relay.TupleGetItem(func_4542_call(), 0)
call_5502 = relay.TupleGetItem(func_4544_call(), 0)
func_5026_call = mod.get_global_var('func_5026')
func_5028_call = mutated_mod.get_global_var('func_5028')
const_5510 = relay.const([2,6,-2,-9,10,2,-9,8,-6,4,3,9,6,8,-10,-3,-9,-10,-5,3,-6,9,-4,7,5,3,9,-9,-9,10,-8,-6,3,-9,-4,6,-9,-7,-1,5,8,-3,10,-3,-9,-2,9,5,3,-2,8,7,4,-10,-2,2,-3,-8,-5,5,5,2,-7,-6,2,-7,8,8,2,9,-5,4], dtype = "uint16")#candidate|5510|(72,)|const|uint16
call_5509 = relay.TupleGetItem(func_5026_call(relay.reshape(const_5510.astype('uint16'), [72,])), 1)
call_5511 = relay.TupleGetItem(func_5028_call(relay.reshape(const_5510.astype('uint16'), [72,])), 1)
func_4176_call = mod.get_global_var('func_4176')
func_4178_call = mutated_mod.get_global_var('func_4178')
call_5514 = func_4176_call()
call_5515 = func_4176_call()
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_5520 = func_3704_call()
call_5521 = func_3704_call()
func_4153_call = mod.get_global_var('func_4153')
func_4158_call = mutated_mod.get_global_var('func_4158')
var_5549 = relay.var("var_5549", dtype = "uint16", shape = (2100,))#candidate|5549|(2100,)|var|uint16
const_5550 = relay.const([8.598355,-4.742650,-4.442140,6.706078,-1.475666,-9.800816,7.334409,0.501554,-7.884900,8.649520,-3.267395,4.065805,-3.116841,-8.753580,7.684700,8.089434,-3.719252,9.808995,9.298657,-2.244053,2.433804,7.086934,-3.919195,-1.595362,-6.728142,0.466172,6.379418,2.296308,-1.277436,2.711774,4.491971,7.862653,7.144741,0.944544,9.569162,-1.601279,-2.929371,9.604848,-6.228869,7.290237,4.555217,1.397711,-4.657095,-2.061208,-6.116588,-9.913843,-2.212229,6.955131,9.741921,-4.718465,-5.935307,5.098090,3.888601,-7.646079,-7.768044,-1.419109,-7.593743,0.538769,-4.501529,5.652083,9.923190,-5.543418,1.754806,6.861508,-9.947124,8.722768,-2.591354,8.020684,2.874249,7.780009,-3.706472,5.731940,-9.627661,3.321988,2.158377,8.244847,-0.214435,-0.741674,-1.906925,-3.492482,-7.432840,9.904423,-3.768698,-5.614650,-6.643507,-6.300795,2.200371,8.896354,-8.178310,-8.755596,-4.160652,-6.941455,6.266366,-8.149907,4.839709,9.570224,3.971903,-5.174180,8.205399,4.764175,5.246356,-8.030628,-0.628327,-1.761292,-8.756722,-7.063834,-0.650580,-7.972080,8.209042,7.571514,6.598731,-0.865112,-3.319272,1.621568,7.193092,3.141097,-9.956297,3.136990,-1.799633,3.804361,-0.424568,8.869620,-3.856373,2.686724,-3.262249,-9.709353,1.285530,-5.178839,-8.613993,0.630001,1.212458,-6.119282,1.461414,-3.134314,6.498339,-9.770970,8.545605,-7.501845,7.948571,2.616384,7.908262,-9.802303,6.099774,-9.651526,-5.092579,3.478609,-4.052529,6.926322,-7.501072,3.050213,7.463165,7.224912,8.912537,-8.174219,0.880464,6.639733,-1.942785,7.316459,-7.406344,4.708535,-7.003366,-7.219913,-6.412697,-5.446238,9.600724,-6.193004,0.909309,0.389912,1.738467,-2.050845,-7.185579,8.526766,7.527546,-5.162999,-2.427586,-0.728495,-4.066525,-4.943149,-6.707574,8.672789,-7.118355,-7.577321,-7.308652,5.935234,0.142844,-4.969696,6.947409,-6.118417,4.796082,-5.901832,-2.921541,-8.903266,-9.308258,0.853319,1.060516,-4.990510,-2.315115,4.921614,5.946780,4.892588,-4.973985,-3.480928,8.101125,-1.443492,8.827449,7.128261,0.674824,-3.035850,-4.155574,-0.343193,5.535092,4.571726,1.908242,-4.127869,1.706586,-4.059494,3.248221,7.616819,7.864785,3.507136,4.724487,2.149660,-7.151582,-7.670968,8.316593,-0.386550,9.063603,2.972005,1.120384,3.963302,1.050308,-3.894426,-1.229316,7.333986,-3.403755,-5.464096,3.506866,-7.078101,-5.191242,-8.178049,-3.421842,-2.110970,6.006988,-1.535844,1.939795,6.616900,6.388708,3.071811,-4.907037,-4.006748,-8.668983,-3.662597,-5.745182,2.142651,2.850382,-8.596683,8.814262,1.465889,-8.226719,6.671727,-4.109501,-4.778176,-8.415310,6.311404,4.227420,4.799502,2.499627,3.273824,9.352327,-9.293421,7.807398,-2.833334,9.915325,7.319728,6.436484,3.726015,3.119439,-3.428608,0.635950,-1.639621,7.309227,-9.374357,8.624649,-9.130145,7.894041,1.965334,8.729751,6.678621,-7.108667,4.640981,3.840595,4.348260,-3.530019,-2.184908,0.942361,-7.970557,5.427964,4.222120,7.313626,5.049396,-6.562484,1.803876,-6.437277,-2.740109,0.619271,-1.143586,-1.239190,2.379284,1.059931,9.372542,0.943862,7.483700,-5.074867,8.681640,-6.906496,-7.071487,-3.190805,0.601449,-7.316723,1.503130,9.995089,-6.467432,0.569006,-3.730806,-9.402511,1.807211,-7.492696,-4.812705,-5.479211,-1.451563,-0.582519,3.219289,-4.195724,8.871330,4.299334,-5.591310,-0.483382,-4.805400,-4.394436,3.320707,-0.780631,-7.046535,8.499697,-3.281014,8.526839,9.621295,4.358605,-3.643227,6.838542,1.055961,-7.208039,9.041287,-0.418821,-1.868142,-1.407549,2.607775,-2.351505,4.410191,-9.886318,6.812807,-7.622061,3.672815,-1.609025,3.714962,1.131063,-5.865059,-5.591929,1.821704,6.902387,-8.606240,5.920572,1.826342,8.842320,9.878066,-6.321003,7.585944,2.191415,-0.137668,-7.247289,4.427281,-3.636717,0.858712,0.996898,-4.287940,-9.303305,9.694449,-6.134596,-9.840493,3.236444,-9.197728,-9.523769,9.626938,-2.725673,8.603139,3.698896,6.587227,-6.639832,4.670351,1.957314,4.973396,-6.992320,2.413174,6.703545,-9.895185,3.615619,-5.172722,5.462066,-1.677895,7.007988,-4.045016,-0.243505,9.264960,6.664093,9.596043,-0.468908,-3.147705,4.633624,5.211278,1.052189,2.892206,-6.607763,3.182963,5.483674,-9.562286,7.018341,-5.454764,-9.144017,7.783014,-3.748343,-3.291099,8.036989,7.680584,-0.918591,9.498371,-7.770846,-0.211732,-7.443531,-6.848185,5.950597,-0.057916,-8.877189,1.924437,-8.032163,-5.571979,0.163328,8.691146,4.984417,2.337547,-5.522652,-8.149826,6.915034,0.799504,-7.803295,-8.885081,-3.977699,-3.801952,0.539864,0.798182,-0.855566,-2.626843,-8.816043,-1.197068,-8.849238,4.086523,-8.106833,6.083088,5.209277,5.317838,9.317435,4.896782,4.820952,-1.666810,2.487178,-3.223720,8.062896,5.913911,8.692314,8.552315,7.463760,-8.030931,-9.619505,-6.846843,-3.770156,1.180113,7.422491,-2.039220,4.724428,5.557100,-8.848718,-0.449308,-4.602494,-7.752424,-5.673295,8.171519,-3.478446,7.870401,5.203641,-2.824947,-3.087128,4.114722,9.210676,-0.975282,-2.294023,5.861392,5.770238,-5.910908,-1.117266,2.888285,8.605765,-2.028578,-2.977911,-9.822294,5.286955,-2.244483,0.092248,4.475718,0.033088,5.439757,1.250728,-8.979902,-3.577146,-2.556219,6.752533,2.577121,-2.699649,9.298775,-5.169745,4.570721,-9.938331,4.938659,5.228046,-0.454125,-6.868714,3.153341,4.874387,-1.484703,-2.763031,-2.822482,9.743965,-1.897547,3.617504,-2.428993,-0.643580,-4.982092,7.338181,-1.311359,-0.085567,0.247309,-8.776179,5.035618,6.638199,0.702707,-9.444428,2.632433,-2.031903,-0.252909,3.981296,4.747764,-9.241726,0.328241,8.321192,-1.848245,-6.142457,-3.352364,-3.035752,-0.826393,8.706770,-1.664107,9.355991,4.736713,0.065118,-8.878431,6.606936,-0.493669,9.039419,9.060551,1.575380,-3.322427,-3.012756,-9.490470,-5.498009,-9.312285,8.352732,-1.553460,-5.489875,-4.130347,0.886261,5.678129,-5.770651,-5.334964,0.270423,-6.906617,0.565924,-5.676926,3.375411,0.947536,-6.127287,9.784266,-6.234027,-5.587257,-3.325177,-0.788880,1.498733,-0.601113,-6.881301,3.565696,-5.624171,-2.991971,1.506074,7.051149,-2.064159,-3.176652,-5.991074,-3.351802,5.594646,-2.560922,6.828918,1.095666,-3.206405,-8.194242,-3.991308,-8.595767,3.126945,5.185400,9.461306,6.993503,7.168291,-5.922251,3.693107,-9.219938,-0.960832,-3.235900,8.078383,-3.678714,8.476331,-2.468852,8.820841,6.746148,-1.180991,2.932716,5.356880,6.541545,-9.679513,8.385985,-5.087047,0.775565,-7.261168,-4.154406,6.750442,1.088173,2.507539,3.384118,-9.459836,3.810135,1.263649,-1.646589,7.289935,6.690980,-0.091686,8.148239,-1.869147,2.117986,9.529585,-9.047934,-3.305266,3.326597,-9.833850,-5.405077,2.915004,5.246813,-6.508589,-4.038540,8.847290,-2.048739,-0.375254,-5.835029,-6.694557,4.269375,9.065295,-2.784335,0.977307,0.763406,-7.944877,-6.766671,7.622867,-3.638984,9.659794,8.975492,-7.004096,-9.600164,3.121469,5.698126,-4.032342,9.519104,6.643744,-1.785476,-1.333120,-9.994467,6.721920,-3.367471,-0.781771,8.089453,5.842354,-9.819264,-3.584605,-7.069015,7.953779,6.003997,-3.633357,5.375669,-0.034413,-6.638756,8.346596,-9.919890,3.833966,8.311635,9.002966,-0.493852,1.205754,1.587541,2.841390,0.539486,6.202955,1.240857,-6.535695,4.461829,-3.762206,7.480455,-1.654747,-1.472679,-5.910457,5.840872,-5.289804,2.290046,-3.545983,0.767678,-2.410884,-6.275015,3.370184,-5.263972,-4.027421,8.971773,4.801101,-5.650311,-1.560507,-0.171380,-7.525513,-8.894811,5.006098,-9.937735,-1.364667,3.938790,4.372752,0.018333,7.817204,-9.700994,7.799536,-1.522945,-8.357764,5.366153,-9.453859,1.592966,6.189009,9.698724,3.918466,3.699967,-2.297647,7.433370,-8.276774,-1.025024,-7.555721,-4.901440,-4.558188,-5.738947,3.396128,2.566147,9.127399,5.431880,1.651507,6.702181,-6.049108,-5.800112,-3.954658,-0.124940,-2.590118,-3.034132,6.453858,7.814640,-5.652626,-2.729882,2.808442,5.606372,3.128042,3.613229,0.621659,0.654038,9.177674,-2.623173,5.689305,6.864954,-7.260527,-8.106183,-7.498718,2.163646,-9.212645,-7.817899,-6.337532,-6.966828,-0.609607,-3.529778,9.233972,-0.774260,2.902369,-8.522113,8.622382,6.921242,4.003029,-7.828064,1.733673,-5.667636,4.384877,3.062483,-0.552449,6.458686,1.040388,9.624318,-0.137496,-4.350263,-2.406692,-0.491012,-2.396485,7.065940,-6.627018,1.938787,-2.672327,4.279850,-0.269159,6.169030,-1.403272,-9.527737,-4.780697,-3.913339,6.056922,-3.021914,7.178434,0.176478,-3.291821,-0.686933,-5.607188,-0.807104,5.192821,6.902061,-8.840692,2.726891,8.398530,2.440349,7.916629,-9.216886,-5.353823,-6.659433,-0.348857,5.681298,3.369567,2.008036,4.696424,-8.959617,9.144776,-3.997491,-9.094904,-1.354528,5.440537,8.961052,-7.406780,9.336753,-4.282734,-9.957507,-9.916254,-5.305844,1.926024,2.056237,7.845520,-6.220895,1.883042,1.889700,-3.527377,-3.482202,0.725495,-8.465472,8.837160,-8.813510,5.821551,-5.453962,-6.138546,3.765216,-4.609376,-6.688562,-0.842484,-8.364303,6.891762,4.464133,-1.338185,-3.844003,0.252557,5.343011,-6.848253,4.260809,-3.322536,9.887685,-7.354430,7.517930,-4.583306,-3.470709,-1.948475,-2.752689,-3.143610,7.460239,7.575323,-3.884835,-0.964455,-6.262752,6.268227,-0.460009,7.242572,-7.742243,6.620437,1.776054,1.103015,-5.542995,-0.089600,-9.981441,6.062491,8.977435,0.587336,8.729135,3.914056,-8.825650,8.593142,5.277037,4.272260,-9.291709,5.910296,-8.052233,-0.627450,-6.907177,9.028774,3.559423,-8.003661,-6.877780,8.793432,0.522471,8.234208,0.526264,-4.105351,9.174737,0.970332,-1.139869,6.552770,1.058892,-3.001839,4.392214,-7.243386,-4.474266,4.737108,-4.573209,-9.167742,-6.342106,-1.971901,1.238182,-1.460457,-4.234308,-8.615708,-8.617035,5.341493,9.196291,7.040792,8.801280,-8.141805,-7.228655,-3.032569,-7.777454,-5.359456,-5.826366,-1.587027,1.442367,8.025722,-1.411448,6.600117,8.770882,0.954011,-8.105084,8.372217,-8.118502,9.034420,-2.266511,-7.426343,-7.679232,8.779727,2.699951,-8.537961,-3.991097,-2.524389,-7.063464,3.694543,-9.964915,-4.816423,7.412112,-4.422913,4.509150,-9.466620,-8.043378,-9.973800,0.065849,8.504683,-3.796012,7.536650,9.741552,8.940220,4.295162,-9.653397,2.163784,-8.598741,-7.466817,5.749289,-9.106980,3.321783,-2.083735,-4.900377,5.908628,-3.099818,4.394508,-8.581717,0.485834,-5.075861,-0.427370,-6.625231,-0.292865,-9.543854,1.039037,-9.252451,2.664774,-5.816593,-8.151780,5.855643,6.306558,8.485356,-8.914840,4.433216,6.649830,-0.895319,-9.254347,-6.462437,-8.104222,-9.749457,-1.001305,1.905124,-7.430148,2.366265,-3.131612,6.706932,-5.713707,8.654692,-4.077947,-2.513531,-4.156487,-2.884008,2.983774,3.434442,1.577646,1.289717,1.511741,-9.157434,9.474964,-2.198799,-7.838034,6.565785,-6.157373,2.003948,3.830974,-9.641066,5.468072,1.799468,2.197256,-3.549749,-0.734599,-2.501439,-1.989370,5.481029,-1.054231,-5.387796,6.352899,4.560956,-7.165693,8.543601,-8.632857,6.180406,-3.957595,-2.889247,-5.363088,-8.510930,5.751810,-0.127232,4.307253,1.681618,3.508609,6.577851,8.874392,-2.894039,1.908500,5.809531,4.793058,6.444634,3.819131,-1.652318,-2.191145,-4.714431,3.361588,-0.472404,1.552210,4.581909,2.964355,6.018029,3.066254,-2.178254,8.263984,4.878446,-4.917554,-4.821746,-2.891748,4.168844,-8.373672,-9.730310,-1.306177,-0.098559,-3.764723,-8.973178,-1.468591,-7.329421,7.019419,4.180108,0.497693,-2.544843,7.814010,6.582801,1.579373,5.430015,5.260849,5.291661,-2.880965,6.425417,5.658507,-7.120245,1.929249,-7.393673,5.871792,-7.480153,-3.264039,-5.846545,3.487318,1.094777,1.949838,-6.283704,1.814815,-0.379764,-1.382263,-8.653438,-5.124208,2.853819,-8.146183,-0.354411,7.504580,-7.115244,9.639079,-8.496063,-8.855126,8.414228,-8.691446,-4.083592,-9.998334,8.023409,-8.970144,-0.415653,-1.804789,7.386486,0.844916,-4.566180,-3.927350,-8.958490,3.971301,-0.680092,8.417547,8.808771,-2.847202,8.864381,1.427225,0.162801,-7.652457,-4.072868,8.612378,4.727607,1.666045,-0.793953,-2.051897,-0.048224,4.763835,-4.440858,-1.196876,-6.334329,9.627389,6.359717,-6.966378,3.505340,8.942015,1.807804,3.401875,7.800503,-2.793495,-5.908911,6.917088,-6.540687,4.509921,1.828206,7.706052,-7.465546,0.171162,0.856780,-4.201969,-0.563302,-3.784084,2.418004,9.444696,-3.849010,-7.199836,-0.676830,3.226737,-3.374380,7.516504,2.816552,5.275954,-1.763552,9.821816,-1.145905,-2.265759,4.238449,-1.124039,-9.544093,-2.165143,8.298606,9.265172,-2.706149,-2.070522,9.697414,-4.451894,-6.952480,3.533884,-6.122266,-3.165572,-9.415987,8.846051,9.115507,-6.320976,0.115349,0.690812,8.743484,5.503780,6.533017,-1.803410,8.413679,0.599648,-6.823964,-5.797273,-1.530350,4.926195,1.804307,-9.588707,-2.981058,-8.601524,1.535902,-0.554994,-4.156460,-1.982266,-5.013403,4.957148,4.741584,0.246742,6.199709,-1.336656,4.948660,-0.408953,3.035815,1.022308,-4.550263,3.379780,7.437029,-4.824401,1.555027,-3.579628,-7.654376,-7.682755,-2.224611,4.469828,3.162850,8.299092,-7.760163,-2.613010,6.868164,3.577085,6.522213,2.078160,4.295201,9.197688,2.080460,-2.984704,5.170590,6.344676,-1.517331,7.684655,2.464045,-4.830616,-1.871498,9.953608,4.277935,6.943166,2.482232,3.258483,5.825914,-9.445550,-2.027955,-8.937863,1.538515,-1.496814,-2.649871,7.367093,-3.748657,3.678726,-9.771383,-2.773246,-1.785781,9.320755,6.175334,-9.273636,6.011343,8.255254,6.611153,0.987818,6.433608,-3.968924,3.340228,5.977297,-6.256561,-0.660409,7.780032,-4.023398,0.571161,-6.829025,-4.985190,6.709432,9.114164,-3.130880,-8.505601,4.721232,1.831760,0.051735,5.399259,-6.209328,-4.086989,5.488407,-5.011326,0.625002,1.314347,-6.532229,-7.923166,3.107798,-9.154323,-4.962315,8.468026,-1.623987,6.975546,9.040645,4.692133,-7.405717,-0.536747,3.315420,5.894915,-3.978624,-6.016228,5.479679,-8.366534,-7.736146,-4.229012,9.990116,-2.696573,-0.342436,-8.329041,2.394384,2.202857,1.038587,3.124797,-3.487402,3.367664,8.997643,5.142054,-2.558519,5.244977,-9.242454,1.481698,5.639715,-8.256111,5.585686,9.833127,-3.439121,4.321293,-6.701811,-3.639640,3.716221,-2.490765,-1.367580,4.884734,1.047175,4.801525,-4.459766,-7.473750,6.321991,9.349345,4.289198,2.162177,-1.757437,5.518709,0.510899,0.717710,2.367403,7.234982,-4.803337,-0.543936,2.740807,8.047975,-5.922391,5.251447,-1.971846,-5.866520,3.199878,3.462057,-7.504442,-4.395296,6.971697,2.508769,6.915452,-8.673857,5.064628,-5.099597,-9.909507,7.753797,5.152988,-1.126187,5.496504,0.218588,-9.320278,-7.428385,1.591805,-5.492010,3.853435,6.314832,-8.688660,-4.736129,-7.522475,-2.918665,-5.035466,7.449827,-8.260578,-5.661635,-9.896129,-8.142658,-6.262052,-3.626358,-6.438346,-9.373076,-4.745273,-3.386548,9.445381,-0.595898,3.474021,2.101989,-7.907762,4.984257,-2.739738,5.099327,1.915406,-6.565893,-2.502076,2.666378,6.992137,-7.686801,4.792016,5.470333,0.226478,-8.434986,-4.149616,1.333719,-0.811937,-0.173467,-8.580842,-5.844647,5.336934,7.691448,6.768330,-2.545600,5.142457,-4.005124,-4.446353,2.699347,8.741596,-0.937285,5.298389,3.692656,5.805570,7.584185,8.615079,3.018548,-8.671010,-3.484793,-9.016001,-1.404463,-7.053662,-7.001528,-5.121279,-2.607651,-9.064464,-4.485528,-3.203464,5.088595,2.330580,0.272750,-3.436064,8.937077,-2.680118,-4.408167,9.649727,-7.647746,6.348042,-8.650800,-1.385654,-0.493730,0.676754,8.285680,-2.622667,6.397525,2.962549,-2.892088,-5.900772,-6.145716,7.454689,7.103118,7.988034,-4.064913,-4.530075,5.156568,-0.297619,8.487580,-0.338851,1.186087,-4.514064,-4.948405,-9.479577,6.833248,-5.645628,6.839521,3.554654,-1.549947,-5.347892,1.302923,5.291281,7.507030,-9.450386,-1.403037,8.087819,0.638964,-4.686009,7.175856,-5.232361,6.390925,-9.197586,3.209243,1.305969,7.317280,-0.728909,8.099805,7.022854,4.929674,6.809500,-8.057834,-8.516271,-3.609384,7.002594,6.672021,0.482642,-2.053839,6.260282,3.563000,-6.295647,-7.766263,4.643605,-1.158021,-0.137681,1.530026,5.980013,5.139361,7.617527,1.991505,9.945796,5.424371,6.279572,1.995463,5.066487,-9.932167,2.769085,-2.754225,-0.029285,6.258655,5.880443,-3.171214,-2.519800,-2.210401,-1.111825,-6.047861,-5.765591,-4.795518,8.915920,-0.235964,-8.155490,-0.082452,1.290150,-5.098710,-8.345019,-9.325077,-0.057182,-0.971886,-5.735894,6.985798,-5.084203,9.736968,4.607690,7.855648,0.294709,0.133947,-8.929324,3.790954,-4.829749,8.317410,2.161339,-2.692601,-5.587792,-3.583257,8.587171,1.028204,6.198532,-0.827814,-8.488054,3.456822,0.810005,5.776558,5.319670,1.186470,8.215552,-7.476109,0.730786,-1.446306,9.573593,-2.248884,-5.690154,5.534973,-7.575584,-4.545249,3.163462,-2.489378,-4.545003,-4.564437,-9.443680,-7.209581,-6.764813,-9.268281,1.200321,0.131497,8.889671,-1.287215,-3.377738,3.520781,3.122128,4.202622,-8.264731,-9.112540,-9.568876,-5.271657,-6.806481,-9.022719,2.413931,-8.595809,2.681717,1.871148,-1.717780,5.802272,6.787629,4.203153,-5.977898,7.408585,5.678564,-6.826031,-4.466366,-4.252530,3.112004,1.879055,-2.405692,2.297797,-2.874722,-6.516141,-6.020420,0.211761,0.890039,2.475244,8.991461,-3.706085,-9.570464,-8.161443,5.204360,5.197533,1.863076,0.275738,2.633194,-5.244798,7.336194,-8.336029,-6.831174,-3.249320,-5.113411,4.447615,-7.269822,-9.086646,-2.198269,-1.462211,-9.775297,-8.965378,-7.718833,7.042312,0.307379,2.763716,-6.069560,-8.610409,9.195237,-1.873732,-1.068037,-3.129007,0.634773,1.616130,3.748037,1.713480,-0.767241,-7.851867,6.446173,-9.315467,1.726447,-6.721302,7.965037,-7.925409,2.472720,-9.909658,-8.366113,-1.397397,-5.611572,-4.717819,6.836039,7.575576,1.378353,1.655079,1.291131,7.211829,6.096945,-6.000910,7.215306,-2.349498,-5.904877,-9.349260,2.461291,-4.991546,0.246540,3.465784,3.652617,-8.160660,-5.718076,6.271727,2.822314,-8.355273,-5.349214,9.259411,5.740907,-4.522183,-1.873598,3.070909,-4.809195,4.878455,-8.356668,-3.140181,0.801496,-9.566531,-0.577357,8.218421,4.430567,3.249413,7.298120,9.336808,-1.816511,-5.265329,-9.026621,-5.268777,5.498044,-2.847073,-9.295670,2.097483,8.553917,-3.143918,-1.660080,6.378862,7.343808,6.931372,2.147891,-7.893814,1.574421,1.110654,-0.306989,-3.264545,5.555428,9.178078,3.163042,-2.861214,-7.747124,2.436036,-7.527683,-8.888314,3.795389,-1.884109,-0.070795,-7.069838,0.385695,-4.390990,3.198893,-2.229066,7.848290,-1.887408,-4.620895,-0.466788,1.505665,7.344730,-8.537104,-1.218538,-4.189459,0.256203,1.272775,-1.302724,8.624148,-9.417478,4.430117,3.565001,-4.837088,9.274678,-2.916279,2.100518,2.414493,-2.036159,6.572347,6.895781,5.360814,-7.861860,-8.837157,-9.126668,0.312158,-8.979243,7.079399,-0.794865,-7.066417,-3.613711,8.167626,-6.597276,8.166021,-2.699537,4.252933,-5.449137,-1.429658,2.108215,0.043724,-1.692854,-0.683447,2.116182,7.128948,7.520303,4.015428,-8.491622,-5.255059,-3.937018,6.398863,-5.745132,-3.887316,-5.383792,2.563689,-7.017568,0.197979,-8.359795,9.111778,2.082772,0.878905,-2.166575,-4.737993,2.980933,-6.549339,-0.242411,-6.948376,-2.103053,5.786886,-8.666907,7.011841,8.458529,5.660504,-6.882824,1.240564,1.977300,4.562322,-9.503242,5.415852,-6.162225,2.096892,3.028355,4.622722,-4.686586,-6.501291,5.885090,9.134516,-3.881871,-9.948548,-6.764980,-7.183723,-2.758190,0.592787,-8.005855,-6.203870,-6.742840,4.749678,-5.881500,-3.218546,-8.001266,7.398472,-3.259684,-0.034575,5.311186,6.847114,4.897890,-5.567688,2.016878,-7.841161,-2.316342,-7.359651,-3.675619,-7.934591,-8.307121,7.039326,-8.399368,8.072000,-6.955848,3.758704,-3.132229,8.363384,0.608703,-2.356533,5.114258,-3.905056,1.718444,9.941789,-2.739583,-0.508828,-3.609923,7.417651,-2.920623,2.411438,0.638687,5.097018,3.298626,7.505498,-8.598581,-9.703433,-1.939960,2.166118,9.622864,2.968045,-5.684876,5.038372,6.920522,1.653114,1.386516,-3.376935,-2.012537,-6.304032,-7.774251,-1.850460,7.212032,4.174572,3.775757,-7.778478,4.182661,-7.020212,3.290505,-9.147391,3.947477,8.869086,-4.883412,1.382813,9.924210,-4.488166,4.278418,-4.171700,2.369310,-6.494968,-3.585016,-1.502854,-5.056637,5.912387,-5.074927,-8.937277,-3.948071,-2.500634,-0.916038,2.711304,2.638210,2.592863,-7.759899,-7.131540,0.427675,-2.516781,3.623433,3.139377,6.769018,7.049534,-7.074576,1.581896,5.884223,6.503379,8.089276,4.701643,1.684783,2.068920,-3.025807,9.564648,-4.631960,5.003756,-3.056178,8.176868,-6.505240,1.232766,8.356357,7.436016,-8.300187,-4.160489,3.327278,9.724598,-3.969370,-4.352713,-3.570875,0.983616,0.981536,-7.017520,9.561298,4.515708,-5.626578,1.199919,-8.123712,7.466236,5.192594,-8.436993,2.927774,0.007311,4.152216,9.955304,-4.611094,-1.465763,4.519637,5.226260,3.832306,-2.347416,-2.626641,8.024921,-1.356293,9.001942,-1.262828,-2.417775,1.971315,4.344114,9.863410,-1.703910,4.819934,6.162463,1.579419,-4.319990,-8.113515,9.735384,-3.030286,9.714102,9.890774,-2.480571,-9.039363,6.444133,4.376885,-1.815229,5.111039,-4.643424,-0.608777,-4.920239,-3.924664,-1.128767,6.602079,1.900308,-9.960030,9.643066,-7.725959,4.263197,-0.920142,-6.475412,6.886342,9.494806,-9.157110,-0.398294,0.521168,-0.957400,0.391752,-6.197196,-8.188103,-6.578836,-5.061290,-7.744564,6.361587,-9.754661,3.193912,5.773375,7.493390,3.014126,-5.788812,-6.149456,-9.464682,-1.202446,3.098003,7.264671,-0.701754,-4.688142,6.312417,9.334234,-5.724280,-5.041611,2.975201,0.862845,-9.746316,-4.419010,-5.098535,8.210689,6.315054,-2.639429,-6.116819,4.335580,3.919519,-4.426265,-2.358754,4.038085,8.001079,-4.376945,-6.845235,5.225793,6.602077,1.232442,4.624941,-3.075185,-3.159844,2.828744,-6.592800,-4.176841,8.332353,-8.712829,-7.912592,-3.887694,-3.969614,-1.136825,-7.719203,1.409634,4.584372,7.223854,1.551719,-5.419716,-8.162958,7.701378,-5.443084,-7.692652,-6.834472,6.258260,4.147140,-9.334829,9.192538,-4.261971,-4.820333,0.868267,-8.257512,-6.640547,-9.914678,-2.534105,6.986981,-1.138085,7.266782,6.740200,4.281123,-1.236077,-0.180317,-8.335063,-2.721580,-6.940158,7.962532,-4.510444,-8.173580,2.231270,0.587661,-6.494502,8.393510,-4.951257,1.451630,-4.312647,1.682604,6.205471,3.336146,4.791199,-0.966461,4.288376,7.123295,-1.206589,-9.703152,-8.689159,2.849588,-8.468252,8.595101,0.575268,-1.763438,-6.764805,-0.293271,-8.265684,2.170019,8.949655,6.574879,6.499599,4.543493,-3.507572,-8.455871,5.504758,3.142120,-2.203543,9.727053,-4.143893,-4.802766,5.483318,-1.856049,-5.081141,1.333115,-8.030958,-7.268578,1.280179,3.721904,-7.862703,-4.344750,3.019452,2.461802,4.740109,0.256956,4.212236,-3.611195,-3.866627,-9.655979,-7.009981,7.335772,-9.608462,4.400743,5.938170,8.848534,-4.334217,1.963247,-2.223232,6.114172,6.866776,8.670316,-1.148186,5.822015,-0.164286,-0.888904,3.486166,8.412929,6.879177,3.063026,8.793232,-0.572356,0.998697,8.309438,8.262914,1.793507,1.879115,2.534261,-9.763575,0.672752,-4.642779,6.053661,5.878132,2.541484,9.603537,1.814290,4.390507,-2.956709,5.644539,-5.483662,1.066624,-5.616150,-6.126263,-9.566486,-0.473901,-7.173516,4.602132,7.379049,-6.935309,-1.450221,9.588990,8.389052,3.782386,9.895131,5.333498,0.711535,9.724681,-5.653857,0.243770,-0.520454,-9.303897,-2.919972,6.512151,-5.782113,-5.181614,3.510246,-5.311232,6.055169,1.828255,-8.496912,-1.017395,4.187181,1.944602,-6.402216,-8.074682,5.705745,5.980577,4.648671,6.691932,-6.487283,-0.061923,3.301626,-0.506896,-8.630472,-7.686866,3.125062,4.078851,-2.348089,-1.876444,4.104744,-0.853030,7.624523,9.364807,-1.990664,-8.767412,-2.586978,-1.853005,2.109993,-0.469507,-8.809243,-8.614277,-4.322933,-8.913385,7.833369,3.532132,-7.865371,0.433263,9.987646,-8.394658,1.094663,-5.725176,4.932361,0.442201,-1.170085,-3.056405,-5.382141,-6.166342,-0.689416,-4.397922,2.566919,1.570637,0.683377,0.208876,5.801985,-4.507721,-8.024657,-1.095492,4.487099,-9.241520,-1.323554,3.999026,8.243893,5.263967,-7.074453,6.648140,4.354993,4.214869,7.413567,9.536633,-7.429436,8.224245,-6.551738,-5.502588,-1.927362,4.942481,-2.151271,9.623454,-9.488241,8.464497,-2.724077,-4.611984,4.580206,-0.352682,-8.292381,2.418167,3.125591,4.714050,6.452020,-3.104014,-7.896749,-6.755286,-3.350729,5.440969,-3.060729,2.247600,9.070739,-3.879222,-9.058380,-0.503947,-5.674949,1.703583,-3.996057,4.105860,5.420634,0.373041,-0.286763,-0.248855,-8.934474,8.367846,-3.640423,6.037313,9.302073,5.926022,5.330901,-9.008404,1.120973,4.629412,3.421290,8.904009,-1.874168,-4.000278], dtype = "float64")#candidate|5550|(2464,)|const|float64
call_5548 = relay.TupleGetItem(func_4153_call(relay.reshape(var_5549.astype('uint16'), [10, 14, 15]), relay.reshape(var_5549.astype('uint16'), [10, 14, 15]), relay.reshape(const_5550.astype('float64'), [2464,]), ), 2)
call_5551 = relay.TupleGetItem(func_4158_call(relay.reshape(var_5549.astype('uint16'), [10, 14, 15]), relay.reshape(var_5549.astype('uint16'), [10, 14, 15]), relay.reshape(const_5550.astype('float64'), [2464,]), ), 2)
var_5557 = relay.var("var_5557", dtype = "uint16", shape = (2100,))#candidate|5557|(2100,)|var|uint16
bop_5558 = relay.greater(var_5549.astype('bool'), relay.reshape(var_5557.astype('bool'), relay.shape_of(var_5549))) # shape=(2100,)
output = relay.Tuple([call_5469,call_5493,const_5494,const_5495,var_5496,call_5501,call_5509,const_5510,call_5514,call_5520,call_5548,const_5550,bop_5558,])
output2 = relay.Tuple([call_5470,call_5497,const_5494,const_5495,var_5496,call_5502,call_5511,const_5510,call_5515,call_5521,call_5551,const_5550,bop_5558,])
func_5576 = relay.Function([var_5496,var_5549,var_5557,], output)
mod['func_5576'] = func_5576
mod = relay.transform.InferType()(mod)
mutated_mod['func_5576'] = func_5576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5576_call = mutated_mod.get_global_var('func_5576')
var_5578 = relay.var("var_5578", dtype = "uint8", shape = (24,))#candidate|5578|(24,)|var|uint8
var_5579 = relay.var("var_5579", dtype = "uint16", shape = (2100,))#candidate|5579|(2100,)|var|uint16
var_5580 = relay.var("var_5580", dtype = "uint16", shape = (2100,))#candidate|5580|(2100,)|var|uint16
call_5577 = func_5576_call(var_5578,var_5579,var_5580,)
output = call_5577
func_5581 = relay.Function([var_5578,var_5579,var_5580,], output)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5617 = relay.var("var_5617", dtype = "bool", shape = ())#candidate|5617|()|var|bool
var_5618 = relay.var("var_5618", dtype = "bool", shape = (2, 1))#candidate|5618|(2, 1)|var|bool
bop_5619 = relay.logical_or(var_5617.astype('bool'), var_5618.astype('bool')) # shape=(2, 1)
output = bop_5619
output2 = bop_5619
func_5623 = relay.Function([var_5617,var_5618,], output)
mod['func_5623'] = func_5623
mod = relay.transform.InferType()(mod)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5623_call = mutated_mod.get_global_var('func_5623')
var_5625 = relay.var("var_5625", dtype = "bool", shape = ())#candidate|5625|()|var|bool
var_5626 = relay.var("var_5626", dtype = "bool", shape = (2, 1))#candidate|5626|(2, 1)|var|bool
call_5624 = func_5623_call(var_5625,var_5626,)
output = call_5624
func_5627 = relay.Function([var_5625,var_5626,], output)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4990_call = mod.get_global_var('func_4990')
func_4991_call = mutated_mod.get_global_var('func_4991')
call_5676 = relay.TupleGetItem(func_4990_call(), 0)
call_5677 = relay.TupleGetItem(func_4991_call(), 0)
output = call_5676
output2 = call_5677
func_5681 = relay.Function([], output)
mod['func_5681'] = func_5681
mod = relay.transform.InferType()(mod)
output = func_5681()
func_5682 = relay.Function([], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4489_call = mod.get_global_var('func_4489')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_5720 = func_4489_call()
call_5721 = func_4489_call()
var_5727 = relay.var("var_5727", dtype = "float64", shape = (13, 15, 13))#candidate|5727|(13, 15, 13)|var|float64
bop_5728 = relay.logical_xor(call_5720.astype('uint16'), relay.reshape(var_5727.astype('uint16'), relay.shape_of(call_5720))) # shape=(13, 15, 13)
bop_5731 = relay.logical_xor(call_5721.astype('uint16'), relay.reshape(var_5727.astype('uint16'), relay.shape_of(call_5721))) # shape=(13, 15, 13)
output = relay.Tuple([bop_5728,])
output2 = relay.Tuple([bop_5731,])
func_5732 = relay.Function([var_5727,], output)
mod['func_5732'] = func_5732
mod = relay.transform.InferType()(mod)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5733 = relay.var("var_5733", dtype = "float64", shape = (13, 15, 13))#candidate|5733|(13, 15, 13)|var|float64
func_5732_call = mutated_mod.get_global_var('func_5732')
call_5734 = func_5732_call(var_5733)
output = call_5734
func_5735 = relay.Function([var_5733], output)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_5833 = relay.TupleGetItem(func_3841_call(), 1)
call_5834 = relay.TupleGetItem(func_3842_call(), 1)
output = call_5833
output2 = call_5834
func_5835 = relay.Function([], output)
mod['func_5835'] = func_5835
mod = relay.transform.InferType()(mod)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5835_call = mutated_mod.get_global_var('func_5835')
call_5836 = func_5835_call()
output = call_5836
func_5837 = relay.Function([], output)
mutated_mod['func_5837'] = func_5837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mod.get_global_var('func_4542')
func_4544_call = mutated_mod.get_global_var('func_4544')
call_5873 = relay.TupleGetItem(func_4542_call(), 0)
call_5874 = relay.TupleGetItem(func_4544_call(), 0)
output = call_5873
output2 = call_5874
func_5881 = relay.Function([], output)
mod['func_5881'] = func_5881
mod = relay.transform.InferType()(mod)
output = func_5881()
func_5882 = relay.Function([], output)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_5913 = func_5881_call()
call_5914 = func_5881_call()
output = call_5913
output2 = call_5914
func_5925 = relay.Function([], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mutated_mod.get_global_var('func_5925')
call_5926 = func_5925_call()
output = call_5926
func_5927 = relay.Function([], output)
mutated_mod['func_5927'] = func_5927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_5942 = relay.TupleGetItem(func_3353_call(), 0)
call_5943 = relay.TupleGetItem(func_3354_call(), 0)
func_2412_call = mod.get_global_var('func_2412')
func_2415_call = mutated_mod.get_global_var('func_2415')
var_5955 = relay.var("var_5955", dtype = "uint16", shape = (616,))#candidate|5955|(616,)|var|uint16
call_5954 = func_2412_call(relay.reshape(var_5955.astype('uint16'), [11, 4, 14]))
call_5956 = func_2412_call(relay.reshape(var_5955.astype('uint16'), [11, 4, 14]))
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
const_5975 = relay.const([-3.537845,9.180552,1.934996,-2.360122,-4.094126,-4.738840,9.110638,-3.078519,-1.841430,3.494193,-6.017160,3.912978,-8.794139,-0.693376,8.830943,1.926864,-3.960260,-9.444414,-1.984365,-6.743285,3.870876,5.808734,3.312395,2.772798,-8.034612,-6.596836,-1.137490,-1.820769,-0.559096,-7.821914,-2.343757,3.811985,-5.837596,-6.301573,5.028377,6.801289,6.039072,1.049829,2.881789,2.844817,3.005384,-1.410141,8.247304,-7.289742,3.740999,8.745800,1.253286,-2.429710,-2.593929,-3.098112,4.726915,2.514265,-9.078587,2.317712,7.644306,-7.960584,-7.753774,-1.113487,5.234252,-2.015450,6.437074,4.110261,-8.364888,-4.332379,-6.217890,-2.967641,5.102168,8.091375,-1.697598,5.038530,1.209793,2.726221,-4.313995,4.471945,-1.013322,-3.154474,-8.110010,-3.671198,4.698056,1.903078,3.375639,-4.174841,0.423464,5.939384,-6.649645,4.848840,-4.570417,-8.455525,-4.758854,-7.560569,5.913379,-9.134218,-4.514784,-9.106186,-6.914989,-1.919386,-5.890949,-0.911643,-7.881357,8.605717,-3.816901,-6.470696,4.100394,3.058797,-9.576863,3.190670,-6.017905,9.000922,-3.789256,-4.812651,-9.767332,3.284888,6.980871,-2.722609,0.008149,8.733912,9.023131,-9.583432,-8.237107,-7.340656,2.503183,-4.495772,-6.008158,5.578614,5.548866,6.684244,-7.269391,-8.253774,-5.627547,0.952082,9.926763,2.550881,-9.946264,1.370542,8.715612,1.085677,8.120270,-7.399309,-3.911852,7.282019,2.643356,0.085559,5.775990,-3.542771,-7.899946,4.123391,-2.723890,-0.315049,-6.981835,2.320569,-9.323463,-8.840207,-0.652481,8.428227,-7.612112,-7.537225,2.406533,3.679539,-2.525076,-3.046069,0.160403,-9.809645,-6.436580,-9.244606,-6.921944,-6.596254,6.364556,4.463556,4.773349,-0.668916,5.139644,6.366573,-6.600919,8.537617,-2.858713,8.793305,6.970214,5.029395,4.194134,-5.305063,0.761258,-1.289481,8.308848,-5.302813,-7.848262,2.889867,-8.114531,-9.307144,2.107001,2.904404,2.730647,-0.005916,-0.962855,-7.081407,9.087373,9.587355,1.984145,2.300328,8.621163,5.194665,-7.118236,4.570661,6.269077,6.162302,2.889869,2.661117,-7.048669,7.602938,6.513955,-5.172199,-0.271581,-6.133640,4.502738,0.788543,9.113327,-6.398348,4.266413,-4.741603,3.641778,2.806519,-8.292093,5.601067,-7.230077,1.463645,-0.313043,3.975085,-7.905984,-4.786652,3.758499,-8.484328,-3.791940,5.721522,1.095866,-2.277655,3.989976,2.932669,-5.771264,-9.669692,-8.062407,4.094418,7.740671,5.353110,-6.199141,9.614589,8.511928,-5.768886,-0.046847,4.121717,-7.873314,-7.545030,-9.230378,8.560478,-4.128487,0.028529,-5.973676,8.074657,2.280986,1.947906,-5.395434,-0.695566,-2.687152,1.288747,-0.845827,-6.097444,2.390715,-7.692169,1.083746,-1.920918,-1.484579,-7.992604,-9.154924,-1.803924,-3.499305,4.193716,6.256546,7.894056,1.934025,-0.428601,4.758806,-1.801797,-1.937397,-0.239292,-7.479984,1.646058,1.646675,6.902339,-0.634993,4.659580,8.645299,4.166846,-1.834773,1.437456,-9.636418,5.788414,-5.602806,-8.305566,9.481437,-3.177347,2.730247,-7.219041,8.845392,6.579622,7.622417,4.959246,3.875188,4.094972,1.867919,0.880258,2.674056,1.112572,-5.627096,-8.230215,7.985490,-0.330629,-2.852630,9.961083,-5.373627,1.064771,1.333449,8.207482,-8.762192,4.461715,8.594244,6.615554,5.403396,-6.242894,-8.693482,6.642677,-6.496144,-2.084925,-5.961878,-7.909458,-4.009297,0.375586,-0.104453,5.713950,1.840824,-8.965103,7.925513,1.737382,6.092793,4.658604,-1.233215,9.310184,-2.321495,-4.094296,0.550100,3.850873,-6.177254,5.259616,2.310795,2.936855,7.051593,6.209239,8.603225,-3.050120,2.306341,-8.225449,-8.977177,-5.834411,-5.041493,-8.971770,4.727487,9.014321,-1.056343,5.312447,2.977694,-5.993442,-6.765621,-2.943291,3.307530,-3.700578,-9.015234,-1.685055,-9.730811,9.529522,9.753264,-6.856061,0.580895,1.665056,4.654639,-0.706944,6.492306,8.690166,-9.393986,-4.985626,-0.764523,-7.396185,3.200051,-8.262466,0.002687,-1.088048,4.916378,-7.969389,5.005836,-4.635755,-7.616181,5.073198,3.608822,3.325785,-1.149155,1.519135,0.275572,2.658523,5.491486,-6.097381,2.075566,2.196577,-7.712314,-9.807358,0.164236,-1.245283,2.163276,-2.001848,-0.843221,-7.470926,6.877571,-7.143715,-1.876277,1.072584,8.599534,-1.027384,2.000312,1.632032,3.429357,3.663677,-5.154158,-7.120703,2.039909,-3.588198,9.495020,2.742933,8.288772,1.291753,2.410850,3.341940,-6.896243,-6.442207,7.493587,4.254008,9.066840,-0.329680,-7.325764,3.799656,1.496170,-6.466273,-9.540551,1.272929,7.774394,2.882125,2.177772,3.725434,6.264885,4.654547,2.060848,7.449360,8.815416,-8.160312,1.639284,-7.259328,7.202942,7.565469,-6.777893,2.406617,2.237502,-7.272894,0.608324,-1.431550,8.292687,-4.695190,9.440398,4.721957,5.998762,-7.374019,9.724212,1.700088,4.360681,6.172887,5.921193,5.883461,2.841013,4.353005,8.356201,6.986677,-7.582726,7.488432,-2.041672,-7.550231,-9.063757,-4.288961,7.660865,0.807426,-4.067641,-5.006660,8.876250,-7.878910,-8.470611,-3.470424,4.016017,-3.797498,1.367365,1.133339,3.215673,8.603331,6.037070,0.728235,6.408512,5.558962,8.934898,0.509184,-1.991205,-2.669001,0.824223,-7.205891,-7.858416,-1.317476,8.102866,7.601653,-5.458661,-0.543017,-8.462570,-2.637310,-5.441795,4.495263,-2.953326,3.505407,-6.693080,3.205913,-2.412649,0.380052,-3.303482,-7.549891,5.802895,-6.908288,-7.121778,1.990308,2.872513,-3.312515,-8.604578,9.428849,-9.742453,1.438642,-3.363285,-0.964107,-3.696443,-8.928144,-3.517195,-6.820210,-8.333496,9.802809,-6.491482,-1.077234,-4.311442,3.651659,-9.616485,4.824130,0.336224,-9.317098,5.699745,-3.035992,-0.523931,1.331325,4.984088,-8.422986,-3.552651,-4.180662,5.085111,-4.520008,4.765201,-6.070381,2.421249,-1.092451,-9.301854,-5.347338,-8.037191,4.356932,1.822331,6.295213,3.755465,4.104117,8.447252,-3.867357,-0.091769,-4.870331,-0.375060,0.322379,8.097282,9.951093,-4.725425,3.549099,-7.643104,5.666964,3.662078,6.387465,8.456052,6.728677,-4.672329,8.398822,-1.031640,4.456104,-1.557149,-6.599501,-2.288113,5.543172,-2.187190,8.947745,0.981241,-0.042755,4.303178,2.203178,-2.385470,8.937996,-1.412203,6.067694,0.781464,-7.829784,-8.297403,1.759894,-8.374782,6.828387,6.034179,0.054968,-8.145084,-1.003396,1.827898,-9.147212,-6.907173,2.248703,-2.303318,0.829508,4.778050,4.610689,2.796676,-0.814939,0.179922,-3.034984,5.110199,5.512442,6.120763,0.609291,-6.606140,0.539498,-5.636576,7.427725,0.268454,-5.451754,-8.637946,-8.276661,-2.953177,1.758898,3.299742,-1.275604,-0.950661,-1.004500,9.011627,-3.925492,5.455301,-8.599358,-7.644970,-5.449006,9.931926,-9.633911,-9.370938,0.687559,-2.277004,-2.349762,-3.931548,-9.017130,-9.536423,-7.615411,-9.266483,1.539652,-8.645557,9.438421,-6.250885,7.063223,-7.556998,8.832333,-9.800361,1.072683,-1.199450,-3.600673,8.202116,1.164816,2.956467,9.610298,-9.164501,8.767639,6.866251,-8.981390,-2.020891,8.824561,0.650127,5.896888,0.228389,-3.049968,-6.159598,-7.901091,7.406930,-0.370446,3.206999,3.459301,-5.467512,6.080518,7.452961,7.091221,9.957865,4.977570,-5.079992,-0.785636,9.062399,3.807916,-0.399692,3.589974,6.047179,-5.761638,-1.239337,-0.608061,5.415963,-2.621489,8.853941,-0.330231,-5.217889,-5.902209,7.485299,-1.887188,0.441713,-1.230748,7.406108,-9.804594,6.028898,7.027388,-0.060223,7.157973,0.235907,-3.662608,8.129328,9.983772,-8.602774,-2.239072,7.166568,3.096817,-6.340958,-2.293163,6.575763,-0.444787,0.471365,-3.380665,-0.193928,8.133625,5.287859,-6.148052,6.541448,-2.384819,0.929496,1.181693,9.435187,-7.364559,-7.080983,3.987954,2.814367,5.094834,-7.964689,-7.276918,2.456084,-8.443525,0.630954,4.755878,7.263936,6.659129,6.104631,6.252442,7.947777,-6.091156,-2.961045,2.277501,-2.541104,-3.923154,4.902547,7.150619,4.865064,0.654295,-4.603720,6.424528,4.657970,3.605285,0.390622,9.732848,-6.298770,-4.924780,-2.119875,-7.660078,-9.634275,3.950779,6.907364,-7.651641,-0.010625,4.023522,1.022454,-5.065330,1.065800,4.795878,-8.756187,8.479389,-6.434664,5.236418,-3.793497,4.403084,6.839207,-1.981169,9.708170,5.622555,-0.694504,3.913799,4.674889,-7.234667,4.367851,0.416225,0.670080,-9.153705,-1.788763,-0.505840,7.906729,-0.385072,-2.053081,7.868360,2.326876,7.157340,5.349352,7.819745,6.748684,-7.181944,4.083751,-8.623383,-7.764373,6.687906,6.792302,6.081520,3.793777,8.519225,-6.900477,-2.244345,1.363945,-2.061348,-9.350186,6.739884,0.119141,-7.159756,6.551219,3.862798,9.598866,-8.730135,-1.952103,6.677161,8.798530,1.627295,7.390231,-3.425621,-8.094716,2.251483,-8.669791,-6.356411,-8.622394,6.131356,2.063110,-1.352822,3.303250,1.339765,-2.178457,0.519441,2.124656,-1.503700,-9.561925,0.240465,1.839899,3.725366,7.012279,7.777375,-6.433136,9.710540,-7.377660,-1.620873,5.158156,9.697720,-8.272670,4.236136,-4.563707,-0.316778,-9.346923,1.017666,1.952519,-8.826148,-6.339065,-2.615358,-0.483086,-1.976462,8.631606,-7.944361,4.084700,0.412657,-9.907468,5.375824,-1.338379,-1.359527,-7.694197,-0.113923,-8.816770,-3.137016,-9.327021,-6.413788,9.104644,5.437087,9.127921,1.694501,-2.552033,7.231038,8.081929,3.337705,-3.788844,7.253446,5.609996,-8.982735,-4.311737,-1.923415,-1.497717,9.021949,7.266143,-5.377555,-7.304658,1.665823,-5.626821,1.965368,-6.042157,9.773029,-7.619231,3.491278,-0.134651,-1.173003,-3.362053,-8.291155,1.844071,-0.934821,-9.782537,8.258805,-8.677615,5.782309,4.321726,9.788461,5.031097,6.955649,0.365746,9.167817,-5.395744,-7.823015,-2.546647,6.502397,-9.560364,6.428756,0.793008,9.850030,4.142034,-4.505561,2.274722,-6.233528,2.851755,9.744484,-7.711569,-1.949361,-6.228304,-2.388090,5.357259,-4.454553,4.389795,2.982889,-5.866853,8.032309,0.895892,7.893220,6.173744,-2.250550,4.821699,1.292139,-2.692711,-3.497089,-5.672527,-1.278454,5.292736,3.158807,-9.431870,0.339885,9.412255,-5.407458,-1.953451,1.988013,-5.255343,-9.705500,0.925252,1.153912,-4.495699,-9.859641,-9.821091,-4.496939,2.498253,4.020585,-8.084084,4.845581,1.722123,8.265347,6.880335,1.357319,-0.997950,3.854342,3.030494,2.607954,-0.712337,-6.244784,-1.415723,-1.480051,-6.107702,9.047098,-8.844625,-8.061816,6.017631,-0.478500,-5.383335,-8.443004,7.671516,2.801599,-4.717428,-9.022477,-6.164370,-0.647327,-1.387204,4.761389,-6.091360,5.331451,5.600044,-4.614816,2.843326,8.647062,-8.886151,-9.003194,8.365941,-2.492340,6.413533,-6.691773,8.206369,-0.273204,-9.678535,-0.239428,4.300727,1.137915,1.538151,5.818307,-3.193558,-9.220450,-6.410407,9.624901,-0.492717,1.645041,-1.041764,-7.743338,-1.797612,5.146599,-2.746619,6.396385,-0.457366,-2.340259,-5.968518,-9.758712,-6.442566,6.587109,-2.268075,-6.023145,-5.240354,-1.314769,4.230117,-3.814094,6.275871,-2.360957,9.254894,5.149906,7.027219,9.783972,2.154636,-1.057111,3.685455,-8.095022,-4.071993,-0.453819,8.483710,-0.219356,5.924446,-5.231154,-9.800964,-8.705239,3.179331,3.205816,1.869858,-9.284199,2.907678,-7.101950,9.575743,-5.564893,5.119225,-6.880234,9.260322,-4.456586,-0.514800,1.480237,9.140266,-6.409100,-0.393043,2.198808,1.503589,-7.571102,9.604249,5.029645,-7.316380,-2.268062,-9.062758,-7.739846,8.228477,5.201677,1.857808,3.062334,-1.655608,6.146746,3.271907,3.337200,0.279019,3.831396,-9.334557,2.199124,-9.037070,7.822318,-4.137479,-7.266211,-6.660781,1.873761,3.429235,-9.487925,4.861282,-0.705630,8.321179,4.030374,4.991406,3.200308,9.549915,-5.186015,-0.122979,-5.171190,4.568674,6.910796,-5.772220,-6.481412,1.520174,-9.831200,-4.836797,1.443009,-5.884865,-1.740033,-4.947705,0.383784,-2.873925,5.358678,7.021860,-7.098736,4.505668,-6.009084,-3.995216,8.106367,-7.678954,-3.897657,-5.475518,-7.441094,-2.451399,-1.563410,-0.082266,-6.410174,-4.047105,5.359333,-4.094773], dtype = "float64")#candidate|5975|(1183,)|const|float64
call_5974 = func_2853_call(relay.reshape(const_5975.astype('float64'), [7, 13, 13]))
call_5976 = func_2853_call(relay.reshape(const_5975.astype('float64'), [7, 13, 13]))
uop_5987 = relay.acos(var_5955.astype('float64')) # shape=(616,)
bop_5995 = relay.floor_mod(uop_5987.astype('float32'), relay.reshape(call_5954.astype('float32'), relay.shape_of(uop_5987))) # shape=(616,)
bop_5998 = relay.floor_mod(uop_5987.astype('float32'), relay.reshape(call_5956.astype('float32'), relay.shape_of(uop_5987))) # shape=(616,)
bop_6013 = relay.mod(bop_5995.astype('float64'), relay.reshape(var_5955.astype('float64'), relay.shape_of(bop_5995))) # shape=(616,)
bop_6016 = relay.mod(bop_5998.astype('float64'), relay.reshape(var_5955.astype('float64'), relay.shape_of(bop_5998))) # shape=(616,)
output = relay.Tuple([call_5942,call_5974,const_5975,bop_6013,])
output2 = relay.Tuple([call_5943,call_5976,const_5975,bop_6016,])
func_6022 = relay.Function([var_5955,], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6023 = relay.var("var_6023", dtype = "uint16", shape = (616,))#candidate|6023|(616,)|var|uint16
func_6022_call = mutated_mod.get_global_var('func_6022')
call_6024 = func_6022_call(var_6023)
output = call_6024
func_6025 = relay.Function([var_6023], output)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6060 = relay.const([[[-7,5,-10,8,1],[9,-3,8,-10,2],[-10,-6,-6,-1,-7]],[[2,-5,-9,8,-9],[3,7,-2,3,5],[-10,6,7,2,-6]]], dtype = "int64")#candidate|6060|(2, 3, 5)|const|int64
var_6061 = relay.var("var_6061", dtype = "int64", shape = (2, 3, 5))#candidate|6061|(2, 3, 5)|var|int64
bop_6062 = relay.minimum(const_6060.astype('int64'), relay.reshape(var_6061.astype('int64'), relay.shape_of(const_6060))) # shape=(2, 3, 5)
output = relay.Tuple([bop_6062,])
output2 = relay.Tuple([bop_6062,])
func_6069 = relay.Function([var_6061,], output)
mod['func_6069'] = func_6069
mod = relay.transform.InferType()(mod)
mutated_mod['func_6069'] = func_6069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6070 = relay.var("var_6070", dtype = "int64", shape = (2, 3, 5))#candidate|6070|(2, 3, 5)|var|int64
func_6069_call = mutated_mod.get_global_var('func_6069')
call_6071 = func_6069_call(var_6070)
output = call_6071
func_6072 = relay.Function([var_6070], output)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_6082 = relay.TupleGetItem(func_3841_call(), 0)
call_6083 = relay.TupleGetItem(func_3842_call(), 0)
output = call_6082
output2 = call_6083
func_6091 = relay.Function([], output)
mod['func_6091'] = func_6091
mod = relay.transform.InferType()(mod)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6091_call = mutated_mod.get_global_var('func_6091')
call_6092 = func_6091_call()
output = call_6092
func_6093 = relay.Function([], output)
mutated_mod['func_6093'] = func_6093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5927_call = mutated_mod.get_global_var('func_5927')
call_6147 = func_5925_call()
call_6148 = func_5925_call()
output = relay.Tuple([call_6147,])
output2 = relay.Tuple([call_6148,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
output = func_6151()
func_6152 = relay.Function([], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4176_call = mod.get_global_var('func_4176')
func_4178_call = mutated_mod.get_global_var('func_4178')
call_6183 = func_4176_call()
call_6184 = func_4176_call()
func_4416_call = mod.get_global_var('func_4416')
func_4419_call = mutated_mod.get_global_var('func_4419')
var_6237 = relay.var("var_6237", dtype = "float64", shape = (2535,))#candidate|6237|(2535,)|var|float64
call_6236 = relay.TupleGetItem(func_4416_call(relay.reshape(var_6237.astype('float64'), [13, 15, 13])), 0)
call_6238 = relay.TupleGetItem(func_4419_call(relay.reshape(var_6237.astype('float64'), [13, 15, 13])), 0)
uop_6252 = relay.rsqrt(var_6237.astype('float64')) # shape=(2535,)
uop_6255 = relay.sinh(var_6237.astype('float64')) # shape=(2535,)
func_2682_call = mod.get_global_var('func_2682')
func_2684_call = mutated_mod.get_global_var('func_2684')
var_6259 = relay.var("var_6259", dtype = "float32", shape = (288,))#candidate|6259|(288,)|var|float32
call_6258 = relay.TupleGetItem(func_2682_call(relay.reshape(var_6259.astype('float32'), [4, 12, 6])), 0)
call_6260 = relay.TupleGetItem(func_2684_call(relay.reshape(var_6259.astype('float32'), [4, 12, 6])), 0)
func_4593_call = mod.get_global_var('func_4593')
func_4597_call = mutated_mod.get_global_var('func_4597')
var_6272 = relay.var("var_6272", dtype = "uint16", shape = (2100,))#candidate|6272|(2100,)|var|uint16
const_6273 = relay.const([8.903314,1.887760,-3.258425,3.917003,3.664727,3.245205,0.955014,-0.598968,0.285372,6.452993,8.931756,4.816120,-1.799825,4.767919,0.769209,-1.678884,-7.596888,3.766173,-2.655566,0.443945,0.201876,2.212228,-7.120313,-1.299775,1.736578,-5.128744,3.286974,-3.507120,9.475081,5.211663,6.861245,6.745175,3.350754,-9.086481,5.444488,5.530193,-8.293324,-0.181866,-6.158676,-3.204003,-4.267909,-9.405590,-9.811499,-9.939838,-3.665236,-2.269040,5.010717,-9.292087,-1.320569,-4.602716,-8.318624,-2.243318,-4.289930,6.652325,1.771030,-1.314180,7.688507,1.819410,-3.712372,7.380754,7.821983,-1.420110,-7.403126,0.076187,6.891536,-9.419162,1.938843,4.837239,4.147907,-5.298469,-1.025259,6.062623,7.153699,-0.253457,-4.563070,1.001362,4.942695,-5.177110,-8.305556,0.379467,1.227616,5.961515,-8.271948,9.251829,-8.109799,1.978212,-2.046568,-8.558033,9.206562,3.718359,-6.046946,-7.079900,-8.711059,5.104742,-3.014201,4.069002,6.513954,6.463895,9.433631,4.537947,-0.070013,-5.311085,6.758228,8.488933,0.029506,-2.804208,4.993734,-2.668484,3.863727,-0.159344,-8.530960,-4.523279,-1.762163,8.438557,-7.342967,6.147279,4.911979,0.318810,-6.131927,-5.545371,-9.901087,-7.569237,7.126272,4.872619,-2.245494,-6.950811,1.382124,-4.369978,-7.376477,9.500010,4.454876,-9.087423,4.137021,6.090559,-1.934617,5.022683,8.608487,-7.299525,-2.341683,1.389581,0.073687,6.180306,-7.885780,-6.183475,-8.946129,0.921218,9.508831,-9.270635,-6.489821,-0.737644,6.921629,9.795942,6.172487,3.970261,5.715879,1.263983,3.502752,-1.088940,-7.557895,-2.532311,-5.946127,-1.867455,4.603715,-5.102838,1.925887,-1.456538,2.407612,0.205743,4.628431,-0.662802,5.250015,4.480079,9.983694,3.559860,6.736202,-6.302547,1.611004,6.228062,9.494088,-8.758268,-2.201563,-3.406089,-2.644067,9.902413,-1.342122,9.963342,3.439341,-7.878727,-1.809545,-4.152976,-5.752387,2.677812,-3.591279,-9.778196,3.122429,-0.660312,-9.135006,0.817380,-8.309534,-0.455351,-6.752918,-8.436215,1.424353,-0.842995,-1.174432,5.250982,1.804436,0.329474,8.883025,-5.054317,-6.659220,-0.795884,0.131205,-8.547262,-2.842074,-8.278001,-4.185168,-8.925591,-1.405490,1.632289,-2.125158,7.705202,5.163216,4.051091,-3.829142,9.295474,-1.469063,7.775354,1.409265,7.275664,4.401172,9.860916,-9.426290,0.972999,-2.095267,-1.545588,9.099754,7.523320,-5.388922,9.543374,-9.507072,4.935520,-6.523880,-8.293729,-6.419996,-0.004691,2.911739,4.560398,8.972653,-3.763284,9.784962,-8.831444,-8.894076,-8.408432,-3.507637,-1.857779,-9.759064,2.312948,-9.303094,5.769009,9.278482,-7.034461,3.994927,5.720308,-7.184738,-3.160688,-8.836202,-4.770235,-7.789138,3.281761,-1.752040,1.329869,7.315098,-5.231353,-3.470591,2.792542,0.501654,7.661888,1.008034,6.968106,-2.563738,-1.958511,4.483319,-1.976845,7.858057,-6.908270,3.448811,-6.121905,9.054761,-4.695053,-0.046743,4.098278,-2.187224,-5.180253,7.788024,8.909640,-6.356397,-7.581969,1.164896,8.437420,-4.347919,-8.069819,-2.791807,4.200199,7.751313,1.973988,2.771276,1.433017,9.013608,6.165982,-9.575471,2.744612,-7.300957,-7.764770,-6.771058,-7.335138,7.152228,-7.900231,-8.146652,1.707112,6.023631,4.026472,-9.874664,-0.185360,6.082876,-2.011557,8.003759,-1.245447,-2.424840,5.126933,-5.322313,0.178427,-3.772597,8.894020,1.674539,6.721750,-1.829315,1.430044,1.363923,-8.742144,-6.516546,-1.657419,-9.256950,8.552927,6.734362,2.907556,7.636512,-2.473458,-4.356939,-6.419609,-4.850112,3.713726,-3.790303,5.930843,-4.645285,-6.802704,1.168640,-0.152433,2.084179,-7.446083,-8.190171,9.264007,-8.135894,-9.743479,0.695744,2.853112,-1.790830,-0.444321,5.088364,-6.751591,-1.497456,-9.036351,-0.974745,7.757328,3.937491,-7.468787,-2.659539,9.586293,3.975644,5.662089,-7.839120,8.120866,9.549769,4.577525,2.641090,0.384972,8.218420,0.328933,-7.186773,6.357891,-7.444828,-6.244456,1.047254,-9.798267,2.337117,-8.498662,-8.699349,-0.275157,6.423592,-4.033408,8.358702,-7.316169,-0.142934,-6.594759,4.773930,-4.756571,-7.416381,-9.485806,-0.389634,-4.781659,-1.624107,5.566171,-1.880078,0.607615,4.043171,8.133152,6.181477,5.455866,2.789218,-8.314334,-7.509086,4.281080,7.775937,-9.821335,-3.036864,1.657689,0.665077,8.267993,-4.033469,-3.681189,-2.205626,0.300079,7.602002,4.434267,-4.600710,7.610147,-0.245438,1.769120,-7.211682,1.460125,2.806302,-9.512102,7.338676,-9.913183,-9.601468,-9.601431,-9.983287,-8.560040,-0.585840,3.590987,2.728509,6.874473,4.963854,-2.640428,3.607610,-2.460938,-3.313233,9.768444,-7.133701,-7.716780,-4.681127,4.063721,-9.629857,5.769463,-0.110521,8.494340,0.622375,2.954421,-2.096576,4.588998,-5.776483,-5.930416,-1.575701,-9.667224,6.001173,0.249401,1.281249,6.425562,-1.427922,1.661135,0.996209,-1.691376,5.117839,6.260167,9.745533,3.949046,-3.484856,7.944230,-7.132711,9.702358,-6.640524,2.325008,5.677107,4.520955,6.395441,-7.023950,9.771934,-3.644537,5.050922,-6.517122,-9.723439,-4.310721,5.291104,3.103377,7.441086,-0.314954,4.441441,-9.942915,-7.073795,-2.896110,-4.094172,-9.160613,8.968613,-0.542491,-1.111307,-0.015192,9.582967,8.058315,-4.612286,-0.578900,8.970756,4.932076,-9.587866,3.130936,9.486252,6.776390,1.671742,9.255338,-3.970454,7.503131,1.590801,7.379807,-2.358919,8.031950,2.625510,-9.321756,-4.453616,9.154201,0.012894,8.824365,-7.860908,-2.651233,-9.330235,-4.082209,-5.154163,1.157405,2.653307,-6.142805,2.393242,-7.452893,6.420362,8.930463,-5.836019,-0.108663,-7.292966,-0.329172,-2.527425,-8.528485,9.007718,3.327680,-3.593596,2.656872,9.527528,9.006925,6.485258,7.196547,-6.612305,6.482862,9.846790,2.154720,6.449456,-9.646725,-1.484899,7.091579,-5.975099,7.988735,4.809303,-8.438848,-0.404271,-3.343605,-1.035136,-2.197707,-9.237273,3.687438,-9.629894,7.028481,2.037280,5.454780,-5.395159,3.640057,-1.020811,6.914587,8.173636,-3.207359,2.302143,7.039846,3.223409,9.254615,5.437062,5.905017,6.345911,-9.261584,8.847444,-5.737509,-0.150286,-0.975006,7.291045,-7.626036,3.960146,-5.484515,8.671697,-9.822495,-0.850220,9.639777,0.240795,9.304501,4.400462,6.791055,2.183788,5.042686,6.569179,-5.025348,5.264732,3.564664,-8.452554,-1.793453,2.750583,-5.268712,-9.293867,-6.047531,-7.785045,-1.520190,8.637266,-9.000957,8.882233,-8.571912,9.329170,0.374586,7.393804,-9.516324,8.734323,-0.830793,4.879505,-1.853821,-1.790710,1.553723,-4.773030,-3.706314,3.318262,-9.088844,-5.398324,8.595859,-8.502273,9.909078,6.322843,6.888506,-2.990320,-8.107494,-8.660153,0.946768,6.767361,3.751665,-8.207840,1.084823,9.893540,-8.095667,-0.688161,3.358732,2.160009,-6.159555,-8.455266,1.917196,2.469399,7.311102,-6.870995,-1.129475,9.576297,7.358086,-8.257235,-2.315748,-2.062511,4.208412,-4.953598,1.223374,9.171576,7.387104,3.736916,-1.660502,-3.324648,-2.831836,-8.431576,-4.555932,3.641018,8.525269,-5.009565,0.275428,2.879566,2.109500,0.779453,1.144296,-5.593363,8.280664,8.012672,6.006441,7.535621,-8.893766,-8.573115,0.530896,-8.678339,7.027673,-4.863877,3.815091,-0.260682,-8.142955,-0.584761,-6.321045,-6.421254,-4.158815,-2.449516,2.314453,-5.784861,1.580112,-5.108644,-0.550402,-9.632074,7.357200,-4.806759,-2.806684,4.336781,-4.309665,-3.132261,-0.240635,-2.371636,-1.678533,-5.786650,-4.119941,0.380578,-6.511703,3.867692,-8.327081,-6.500244,-2.380873,-7.884777,5.676721,5.281956,8.835891,1.897284,-1.967076,8.377634,-7.005180,-2.478628,-3.847807,-2.211367,7.878631,0.824308,3.006326,1.025426,-6.471220,-6.524555,8.468318,5.449411,0.239682,2.643243,5.789350,-6.319422,-8.325900,-7.331409,-5.267039,0.094312,-3.931464,4.666603,0.734629,-7.378549,4.597330,0.304694,-1.009676,7.050379,9.562046,-3.157325,4.498271,-3.751412,2.321444,-8.189393,-4.504998,-7.580874,-9.903223,-7.446042,-0.500790,4.606884,-1.344748,9.416573,-1.532847,-8.242854,4.453523,-4.698280,-7.104992,-8.111850,3.547801,0.447300,0.996953,3.017782,-5.468964,6.813019,-9.401915,-2.303411,0.615740,7.134153,-6.593465,-0.314661,-2.666118,0.398919,5.555418,1.315626,-6.123707,-5.894399,-2.748883,-2.428932,-9.780275,1.222232,-6.025997,8.499873,3.945271,4.500548,-8.378216,5.452094,-7.693077,8.755396,7.751213,2.929848,-3.454382,4.425763,6.170406,3.157262,8.065927,-0.190803,-0.747318,9.750377,-3.433571,6.072774,-0.079923,-7.484963,8.509792,4.141843,-1.807806,6.383424,-6.321804,6.310763,-6.873026,1.053506,5.160618,6.386488,7.032164,-8.249167,-1.041074,0.258863,-7.280323,5.641317,4.383090,-7.095750,7.528222,-8.731656,-0.783600,0.436675,-1.733384,-5.682906,-1.143205,9.883259,2.779850,-0.720048,-8.398762,-2.212024,5.158338,-1.403777,-9.851920,-4.211974,-6.456946,-0.601498,-0.890582,5.199217,-1.852886,-7.825598,-4.305044,1.278810,8.896964,8.576522,3.892666,6.991198,6.468159,5.575142,-7.852873,-8.838129,0.303438,-5.013568,-4.372029,-1.022285,7.706892,-5.219797,8.582207,7.079090,6.913267,-4.140307,2.347873,8.425340,1.598515,-9.616983,-8.208099,8.326331,8.461957,6.958176,2.669547,0.568319,-1.251644,-6.070773,8.746280,8.882753,-9.536542,2.393665,3.895469,4.700580,7.839511,-8.591087,-9.299527,5.219708,7.804803,7.545799,3.373272,-0.679173,-8.564041,9.057384,-0.984857,-9.599470,-5.521245,-3.466964,-1.794321,-2.788611,-8.295784,1.746658,-3.121800,-6.024758,4.617899,2.452317,-7.200934,6.445983,-6.391112,-8.990190,8.300270,-4.229429,-9.627736,5.059679,-6.663087,4.269355,-7.772156,9.873277,6.959030,4.462898,5.183872,3.877916,-7.250641,9.714209,8.663844,5.591902,-9.802539,-4.093881,8.375018,-8.378280,-5.218576,-1.965213,-4.674112,1.543982,7.649146,0.154168,4.284695,3.615857,7.979646,5.944925,-8.940441,6.732230,-1.314558,-3.520745,9.401898,7.751958,-7.693810,-5.404250,9.083426,-8.842005,-8.126227,3.902408,1.670822,4.054301,6.758837,8.334333,-4.215204,4.277586,1.852581,-6.365915,-6.356282,-6.501429,0.309383,0.563069,-8.634295,1.774316,3.854596,7.134318,7.180461,1.187457,2.062017,5.573681,7.152497,-7.770255,-7.992536,8.646608,-9.492308,1.706156,4.898030,-2.292248,-0.403601,-6.494496,-2.116524,-2.281359,2.779475,8.504016,9.971642,-4.665251,5.571769,0.174559,5.853275,-4.994777,-1.187149,4.316236,-4.987653,7.436967,4.065107,1.312279,2.600359,-2.984829,2.256473,2.742642,-2.325067,-1.436990,-6.125668,4.042896,-2.822612,2.623822,9.464790,-8.588187,-9.875451,-6.477479,-0.835084,-4.998958,-3.800399,-9.826998,-8.039108,-7.998296,9.144820,-7.894360,-6.606604,7.646330,6.905713,9.738183,4.566389,-4.885732,2.276983,3.590302,-7.162801,-4.897580,-3.852223,3.201379,-8.670107,2.506238,-9.715328,-9.308206,8.580085,6.734898,-7.589950,1.218256,8.885813,-8.112572,3.006851,-1.056467,3.176604,-5.194912,0.279302,-7.342448,8.579301,5.150504,4.408095,-7.942746,5.908067,4.912645,-1.230448,7.606911,-5.558381,-4.214563,5.923139,-0.256827,6.117650,0.303251,-2.363366,6.608033,9.803778,7.025779,-6.561281,-3.815955,4.427429,2.637752,-5.031897,6.569335,-1.010134,-4.630070,-5.682792,-3.300918,2.759563,-6.797839,1.417237,6.002595,-0.091592,3.577533,-6.133028,-8.946134,1.888666,4.879402,-6.486956,3.401617,9.821684,9.883057,-3.538291,6.745567,3.900608,5.804794,1.167932,2.669355,6.461987,-3.589933,-6.114725,9.691335,1.490311,-8.063882,-1.063415,-9.461634,5.632395,4.582779,-0.986089,-8.892421,8.426390,-5.989428,-6.804289,-5.299075,3.821360,-4.144847,-5.125643,8.364439,-0.904269,4.220870,6.826372,-8.301920,6.581199,-1.949251,8.117471,7.139551,-2.539347,6.899464,-7.923557,-4.456624,8.284307,5.560479,1.741974,7.439735,-0.892773,-2.850518,-8.788260,0.316709,-4.618931,0.502322,-3.431375,-6.818169,4.708405,2.641571,-4.510819,0.701998,-2.923352,7.236261,7.663166,-4.175805,8.713695,-2.919068,3.587227,-5.611830,3.913199,6.561292,-8.907454,8.485471,-5.988638,9.484406,-0.621402,-2.304635,-3.036273,-6.813015,-4.795083,0.043741,2.866238,7.625478,0.203256,4.109925,-8.194428,-0.650230,-5.092377,-4.096294,8.673325,6.406339,-4.470103,-4.061649,4.429180,-0.389243,4.610120,-3.396222,4.965297,-7.977597,6.656999,-5.150828,-3.567878,-1.508333,-1.993885,1.086300,7.903062,8.092520,-0.823098,-9.890265,9.232904,2.359322,-2.129344,8.099731,-0.135881,7.466449,9.392080,3.015632,-9.796418,8.067623,-0.887023,-5.239124,7.283976,7.945602,-3.327649,-2.187689,-5.777103,-0.737247,7.704931,1.518517,0.417932,0.329429,-2.087748,0.680259,-2.640893,8.294656,9.353851,-6.370278,4.242457,4.904318,5.195143,0.182448,1.095743,6.119004,-8.435104,-1.150449,5.187432,-5.478737,-8.379528,-6.776821,-2.084324,4.561429,-0.639055,5.115440,5.646561,1.673424,-1.799696,8.233487,-8.279189,-6.988462,6.078746,3.425922,-7.418510,-7.324374,0.074038,4.204831,-2.694765,7.551064,6.559431,-4.803903,3.030496,1.832340,5.458471,-7.985654,7.529770,-2.840059,2.390130,1.246107,3.128995,6.644554,1.643336,6.266810,3.262011,-9.243398,9.599411,-8.169195,-0.382088,-9.541517,-6.447661,1.890926,3.846401,-0.310381,5.333353,-8.110586,1.844809,2.811395,-8.336026,-0.366946,-8.120694,-6.855018,7.067457,-3.636134,0.667146,1.260806,2.786795,5.045097,-8.719172,-1.164527,-1.770626,8.668852,-5.342548,-1.721285,4.811302,-1.189479,3.243238,3.657098,2.464046,-0.425720,-1.987074,-9.495084,-9.989853,-2.612246,3.643097,5.645776,8.603940,1.509094,3.278344,-2.417289,-4.073940,-0.932357,-7.815334,8.003179,-1.439204,-4.462219,0.799207,-0.667932,-0.912790,3.992712,8.523405,0.158759,8.323901,-4.206014,-2.323326,5.781492,-2.270313,-1.243801,6.374690,-0.564259,4.577156,-9.513133,-5.066845,3.122552,7.123283,-0.454303,8.182476,5.117211,3.247283,2.700681,-7.758865,-1.891072,7.587553,7.759149,-4.662546,-9.859863,-4.922186,5.309336,1.310594,-9.071633,7.179967,-9.353916,-1.499913,9.852991,7.771157,-4.099927,1.074863,-3.176282,1.828370,1.562012,-3.715110,-2.903497,-6.938198,1.097873,-6.632053,-1.914534,-9.137427,-1.623469,-0.431623,-2.342035,-3.597701,5.897074,-5.196580,-0.929878,-7.617655,0.169978,1.002482,0.163811,1.905069,-8.720797,-4.230687,8.746702,8.905919,-2.725350,0.908072,5.083887,1.346785,4.569638,8.514277,0.498786,4.859858,-6.819630,-1.262808,-0.091925,-9.094302,5.388965,5.451947,9.995381,-2.576556,-8.922852,0.732524,-1.611751,7.552703,-9.967032,7.992713,-7.588136,-9.457555,-8.232614,-9.514009,3.726733,5.751598,-5.990720,3.142757,3.706286,7.750923,-2.190261,2.611796,5.667437,-8.467924,6.949837,7.552347,6.344042,-0.392596,7.105756,-5.379586,5.237087,5.245973,2.610341,-2.703876,8.150309,-8.839365,-4.544344,-2.829919,-7.532268,8.205387,-3.257118,4.973835,-4.788304,5.144370,4.622159,-7.006719,7.202254,-4.821402,0.040306,9.328652,-0.077593,-6.169003,-9.591063,-2.545245,6.772031,-7.161801,-6.152925,6.516436,-6.477779,-9.305448,4.725399,-1.041656,0.533375,5.274678,9.410852,5.434673,-3.776558,-1.588683,-2.994930,-5.954801,-4.118414,0.346620,-6.600830,-4.742045,-2.610888,-1.817713,9.569068,-3.157885,3.227116,9.166350,0.199128,-8.594816,-3.988263,-0.860669,4.075862,7.900040,1.643218,7.037255,4.083547,-0.666939,-6.497746,7.731477,-5.648989,-7.374333,9.589380,-8.647903,-6.273403,9.847994,-7.284665,9.608810,-9.653407,4.886347,-1.611134,9.890067,-8.136341,1.693312,3.448937,3.781901,-2.830010,1.275176,4.190606,-9.139562,6.887170,1.249089,9.538131,1.108693,3.180920,-0.883966,9.784512,9.759019,6.700844,5.996669,-2.388432,-5.606798,-6.780043,-1.658720,-5.896951,-0.298091,-2.809723,2.111039,-6.218691,7.194808,3.051939,9.719730,-2.271505,4.965580,3.415997,-3.329222,2.520308,9.328265,-0.357870,3.528673,-1.881362,-1.708704,9.285486,4.844612,2.237045,8.418169,-6.097739,4.075797,-7.620552,-8.299728,2.606844,1.337395,-5.084684,1.434697,-8.077732,4.043489,-1.267166,-3.838582,2.658704,3.774674,-5.711049,2.333086,-5.538031,4.911707,5.429444,-3.919998,-5.319650,6.351781,-5.891411,-2.309040,-4.501967,-3.140927,1.887875,-7.921336,-6.080500,7.552118,0.777810,2.697613,-2.897285,-6.190045,-7.062230,-3.795431,-3.782280,5.186370,-1.260469,7.379001,2.773741,7.776890,-2.996758,3.196807,-9.599631,-9.676523,-1.854398,9.900217,-5.367199,-9.114036,-4.406367,-1.842349,7.933631,-2.748227,6.554809,-8.146751,9.832871,6.336469,0.983456,-1.979048,-7.388505,7.614541,-8.164840,0.043488,-3.556603,6.302038,-6.290155,3.550018,-7.013898,-6.038815,-4.860066,-2.372907,-2.352026,7.321375,2.308626,8.821741,-3.885115,-8.898278,1.506815,-6.500979,9.679198,7.676401,3.388125,6.153852,-4.535785,7.836479,-5.039761,-0.254577,8.286545,8.722807,6.398443,-1.587832,9.312313,-7.712067,-9.466893,4.570758,-4.927767,-1.639037,1.420829,4.594555,5.634454,-8.278811,7.450749,-2.162932,4.828364,2.944600,6.873982,-0.493958,-5.661552,9.499114,2.908708,-4.284271,0.008680,3.062924,4.478716,-9.968357,7.450988,-4.632690,7.902083,-4.509000,-0.375387,1.289673,8.601934,5.662627,-9.645386,4.515887,5.259680,-5.808402,-7.114835,7.564587,-2.735139,-2.306175,5.270676,-4.761340,9.850858,2.270665,-3.744631,3.929686,-8.640305,4.290243,-3.363573,0.945347,9.897897,-4.132480,8.250653,3.114688,-3.310587,-1.384640,-6.766604,-7.776747,0.136878,-2.473955,6.274595,5.244018,-5.696072,-5.637398,5.553790,-7.502159,7.095100,-7.070326,-5.216436,7.570965,5.600708,-6.795063,-4.907131,-1.547724,-3.395684,-4.623357,-7.083335,-9.029645,-5.888731,7.737236,-9.056842,-1.211695,6.811066,-4.523279,-1.450960,-2.804954,9.437761,-5.043038,9.301332,8.861500,7.490315,7.206004,-9.134483,-3.990196,1.239386,-8.982772,5.864473,0.942186,-4.885519,-0.648572,9.376282,-9.995251,-8.491048,2.093245,2.495309,7.617099,-0.349106,5.742920,-8.789723,5.456286,6.791204,3.072451,6.006131,3.046567,8.651153,-2.783418,-6.904733,9.066966,3.689386,9.155714,-3.448218,9.962510,7.626604,9.829523,-1.017818,1.360258,-9.212211,-5.187052,-1.775055,1.841191,-7.220674,-2.510469,5.936881,9.006740,-0.954988,1.731151,1.792322,1.751257,3.666886,3.288068,-3.706878,-8.530388,2.528521,-9.698231,-6.539594,6.264320,9.072494,-8.718156,-3.189187,-7.013498,-7.559406,4.064159,-0.686011,-9.122316,0.342116,-9.258561,7.959907,-6.269528,4.308953,-3.697326,3.819983,-1.417104,7.959351,5.089064,-0.433904,8.340826,0.276231,9.235323,1.216314,-9.160682,3.580112,-7.368890,5.122131,7.715811,3.238804,-1.401867,-9.205532,-4.327337,2.006499,2.479195,7.087655,-7.975125,2.961308,-4.894998,-1.051356,0.111976,2.927293,-8.195103,-7.277745,-0.357320,2.588227,-3.671350,1.705576,1.668227,-4.587924,5.477522,8.290370,0.617669,2.614957,-8.851380,-0.201548,8.718315,2.981137,-8.270949,9.286692,-4.927648,8.076108,-8.483537,6.252580,-0.972824,-4.915039,9.611047,4.438658,-3.747314,-8.383114,-4.559863,-6.882814,9.466476,0.006324,-2.446929,-1.682020,1.721991,9.989666,-9.420543,-0.585628,0.237449,-3.238503,-7.876398,8.654683,-5.186115,4.929712,-5.932169,-9.352432,-4.106902,4.675114,8.826108,6.620198,1.443786,-8.698205,6.561398,-0.431471,-8.637043,2.576743,9.495702,0.557519,-8.738760,-3.000633,3.231196,-2.609266,6.369228,-7.873920,0.041390,0.674642,-3.775203,6.410297,-9.113531,-5.116701,-4.506452,-9.748951,-8.407602,-7.605479,-8.094189,3.053116,7.860887,3.294751,2.592428,1.091709,9.131222,-5.929511,5.763984,2.877344,4.785126,-6.152074,2.177142,0.454840,-5.473583,0.421325,0.276190,-8.006426,-2.459636,5.184538,4.548334,1.402166,2.962379,3.376902,2.085745,5.994486,-4.207413,-2.039012,-6.552112,-0.289872,5.415307,8.825636,-4.118691,-4.424297,-4.075560,8.529298,-7.982270,-0.348425,-2.602764,-5.229528,8.340667,-1.534373,6.832347,9.253793,9.974129,8.011056,5.313034,0.445662,-5.499470,5.358156,6.310904,3.860274,1.581878,4.065808,9.578027,2.399531,9.649524,-0.636477,-2.530906,-6.739994,8.809320,3.104021,3.139556,2.072002,-5.089736,-0.980082,1.370326,9.851820,8.860312,-6.962530,0.655811,8.970588,5.077887,9.841433,-5.936071,4.369441,1.886791,-6.821008,8.856983,2.556381,-9.943540,3.963108,9.927338,-5.095183,-9.794126,8.254903,-9.792340,-3.502009,-2.101444,-8.648748,-3.778006,8.266845,-3.314876,-1.116926,2.161270,6.767198,8.427176,0.220268,9.664665,2.298713,-9.797296,4.908784,-9.917265,-1.248590,-3.951860,4.949500,3.579701,-7.450470,-7.462625,2.505265,-7.554852,-2.454302,-7.120284,-5.028174,4.916604,7.946524,-2.312135,9.434700,-4.809584,-1.850371,-4.730921,9.758050,-3.409139,5.983558,-3.065838,-0.332770,0.854869,-9.584868,-6.893635,3.460583,4.019862,4.910373,-4.269358,-8.805244,-9.876028,9.196776,-6.077756,-8.655876,-3.852211,8.725887,8.093665,-7.328835,-8.655060,-0.151038,2.705105,0.613159,-0.025227,0.835369,1.971025,1.159533,-9.335777,-4.020715,-1.052836,2.674507,-8.661760,5.834553,-4.557456,-9.859758,4.954978,5.604515,-1.646870,8.471916,7.037694,1.060715,-1.254303,-8.115894,1.319153,2.264893,-4.947442,8.233723,0.091294,-5.722014,-0.996504,6.975988,1.234506,-0.628428,4.655009,-7.739851,-4.318528,6.699433,-9.716482,6.940370,-8.267879,1.955113,1.048272,1.226738,-1.211923,-3.482622,-4.335271,-7.074866,-8.909583,0.014830,-7.707877,-9.101357,-2.176210,3.222719,-4.890610,-9.271449,2.664758,9.305571,-1.291472,5.053991,-6.973412,6.843547,3.338895,-3.624833,2.513417,1.743758,8.731481,-8.435558,0.694236,-7.746413,4.490292,-8.076459,8.452578,8.223373,-5.385152,-1.423228,8.408975,5.965828,3.896089,-7.707869,-7.252834,-8.730384,-8.292370,1.090375,-0.968504,4.876719,-5.937435,-3.715567,0.677193,-2.413739,-7.738468,-2.330810,-3.983675,5.552768,6.428921,-8.087166,7.898181,3.344384,-1.902336,-2.692461,-3.453441,-9.713217,6.116433,-4.763122,-6.837290,7.668212,9.229479,-0.480857,4.437855,3.123483,-8.045372,-7.020901,-8.511187,3.602405,-0.763466,8.033840,8.667274,-5.869516,-7.732790,3.070576,2.666610,-6.543959,-8.369086,-3.679816,-1.593279,-9.473085,-0.221352,-8.469162,-9.372165,0.730245,8.357981,0.678883,-5.826540,-2.134611,5.951750,7.584008,-5.592430,3.154496,4.099470,-6.602785,-0.806391,-4.969877,-6.438154,2.519578,-0.908937,5.277445,-0.568761,-9.532871,-9.696558,5.068918,-1.879109,-8.186116,-4.474550,0.258275,-7.752558,3.248302,-0.956236,5.479905,7.452768,2.946457,7.211650,6.726489,9.140550,-3.221039,-2.950881,0.988266,-9.466571,9.926330,-0.040615,-9.351036,8.305674,3.042640,1.842510,-6.514457,8.147454,-8.295325,-6.687771,-1.242285,6.495489,-7.541539,0.882498,-0.643122,3.297229,-0.372105,-8.343500,-0.977278,0.803767,1.984334,-4.111861,2.725592,6.734809,-5.148660,3.251807,-9.826408,6.156843,4.269788,-5.954752,3.411782,2.467063,2.363097,-9.360662,4.207920,4.919245,2.035841,-3.185231,-0.474790,-8.906430,-2.720079,5.912477,5.869814,6.467398,7.394544,-6.978723,3.675758,8.443400,-2.009236,6.932648,9.865785,-8.966829,-1.484780,8.498584,8.699360,-0.331266,5.185596,-4.028567,-3.271146,5.824461,8.435025,-5.689685,-8.179003,-6.613147,-9.562471,-2.239858,-1.749430,-0.971071,-4.496787,2.587836,1.963420,9.934243,-8.296713,3.724712,4.295244,-1.302758,9.985932,7.508904,-6.886586,-5.654890,1.847401,-6.852025,4.132122,6.523028,-9.800882,8.091566,-0.583792,0.400264,-6.913262,3.709428,9.248939,2.847785,1.971881,-9.750985,-7.608842,-2.484416,-3.211354,2.133541,7.039435,2.334504,-8.605224,9.783607,6.178189,8.442682,-8.388944,7.218442,-1.702962,-2.058375,6.633995,-0.415939,7.607794,-8.897123,6.616824,7.754507,-2.159877,7.192266,-2.270715,9.420013,9.762839,6.864268,2.977871,9.346875,9.197799,6.544330,6.634225,-4.441435,-6.109502,-1.604540,3.979620,-9.140794,-8.175175,-4.568467,5.993225,-6.124265,-4.601646,-5.884358,-2.928642,0.156202,4.489909,-6.978041,-2.985495,3.686113,2.383780,7.910324,0.175516,-3.343027,9.590380,-0.756223,-3.923004,7.872314,2.654367,6.151314,2.593564,3.638282,6.376369,1.195130,1.733453,8.649872,-9.086155,1.543468,-9.597224,3.997777,-7.327311,-4.333067,-1.120109,5.037763,3.386291,6.999804,6.525017,4.572391,7.082653,0.274017,3.498679,1.347833,7.665292,-7.319881,7.009402,4.100217,4.520462,-2.636916,7.125148,4.750649,-4.121836,8.998532,-2.252983,7.982546,-2.002431,-1.669599,4.839146,5.488932,-1.940874,-5.205703,-4.102056,7.059915,-0.434072,1.752627,0.123657,-8.728401,-6.909241,0.247496,0.223997,-4.581425,9.706455,4.109231,-7.881364,4.082098,-7.341777,-8.519884,4.924008,7.390196,-1.794406,4.660582,6.183930,2.653114,-3.901523,-0.900631,8.932533,1.854427,3.644049,8.122063,8.739051,-2.675438,8.561257,-4.889157], dtype = "float64")#candidate|6273|(2464,)|const|float64
call_6271 = relay.TupleGetItem(func_4593_call(relay.reshape(var_6272.astype('uint16'), [30, 70]), relay.reshape(const_6273.astype('float64'), [1232, 2]), ), 1)
call_6274 = relay.TupleGetItem(func_4597_call(relay.reshape(var_6272.astype('uint16'), [30, 70]), relay.reshape(const_6273.astype('float64'), [1232, 2]), ), 1)
bop_6277 = relay.less(uop_6255.astype('bool'), relay.reshape(uop_6252.astype('bool'), relay.shape_of(uop_6255))) # shape=(2535,)
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
var_6294 = relay.var("var_6294", dtype = "uint16", shape = ())#candidate|6294|()|var|uint16
var_6295 = relay.var("var_6295", dtype = "uint16", shape = (72,))#candidate|6295|(72,)|var|uint16
call_6293 = func_392_call(relay.reshape(var_6294.astype('uint16'), []), relay.reshape(var_6295.astype('uint16'), [3, 4, 6]), )
call_6296 = func_392_call(relay.reshape(var_6294.astype('uint16'), []), relay.reshape(var_6295.astype('uint16'), [3, 4, 6]), )
output = relay.Tuple([call_6183,call_6236,call_6258,var_6259,call_6271,var_6272,const_6273,bop_6277,call_6293,var_6294,var_6295,])
output2 = relay.Tuple([call_6184,call_6238,call_6260,var_6259,call_6274,var_6272,const_6273,bop_6277,call_6296,var_6294,var_6295,])
func_6305 = relay.Function([var_6237,var_6259,var_6272,var_6294,var_6295,], output)
mod['func_6305'] = func_6305
mod = relay.transform.InferType()(mod)
mutated_mod['func_6305'] = func_6305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6305_call = mutated_mod.get_global_var('func_6305')
var_6307 = relay.var("var_6307", dtype = "float64", shape = (2535,))#candidate|6307|(2535,)|var|float64
var_6308 = relay.var("var_6308", dtype = "float32", shape = (288,))#candidate|6308|(288,)|var|float32
var_6309 = relay.var("var_6309", dtype = "uint16", shape = (2100,))#candidate|6309|(2100,)|var|uint16
var_6310 = relay.var("var_6310", dtype = "uint16", shape = ())#candidate|6310|()|var|uint16
var_6311 = relay.var("var_6311", dtype = "uint16", shape = (72,))#candidate|6311|(72,)|var|uint16
call_6306 = func_6305_call(var_6307,var_6308,var_6309,var_6310,var_6311,)
output = call_6306
func_6312 = relay.Function([var_6307,var_6308,var_6309,var_6310,var_6311,], output)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_6364 = func_5881_call()
call_6365 = func_5881_call()
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_6367 = relay.const([-1,4,9,-9,-9,9,-6,-7,-8,7,-2,4,-6,1,-9,-4,9,-6,9,5,-8,-10,-1,-9,9,-9,-7,-2,3,-10], dtype = "int8")#candidate|6367|(30,)|const|int8
call_6366 = func_1137_call(relay.reshape(const_6367.astype('int8'), [6, 5, 1]))
call_6368 = func_1137_call(relay.reshape(const_6367.astype('int8'), [6, 5, 1]))
output = relay.Tuple([call_6364,call_6366,const_6367,])
output2 = relay.Tuple([call_6365,call_6368,const_6367,])
func_6372 = relay.Function([], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6372_call = mutated_mod.get_global_var('func_6372')
call_6373 = func_6372_call()
output = call_6373
func_6374 = relay.Function([], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_6416 = relay.TupleGetItem(func_3841_call(), 0)
call_6417 = relay.TupleGetItem(func_3842_call(), 0)
func_5623_call = mod.get_global_var('func_5623')
func_5627_call = mutated_mod.get_global_var('func_5627')
var_6447 = relay.var("var_6447", dtype = "bool", shape = ())#candidate|6447|()|var|bool
const_6448 = relay.const([True,True], dtype = "bool")#candidate|6448|(2,)|const|bool
call_6446 = func_5623_call(relay.reshape(var_6447.astype('bool'), []), relay.reshape(const_6448.astype('bool'), [2, 1]), )
call_6449 = func_5623_call(relay.reshape(var_6447.astype('bool'), []), relay.reshape(const_6448.astype('bool'), [2, 1]), )
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_6465 = relay.TupleGetItem(func_6372_call(), 0)
call_6466 = relay.TupleGetItem(func_6374_call(), 0)
uop_6471 = relay.tan(call_6416.astype('float64')) # shape=(13, 15, 13)
uop_6473 = relay.tan(call_6417.astype('float64')) # shape=(13, 15, 13)
output = relay.Tuple([call_6446,var_6447,const_6448,call_6465,uop_6471,])
output2 = relay.Tuple([call_6449,var_6447,const_6448,call_6466,uop_6473,])
func_6476 = relay.Function([var_6447,], output)
mod['func_6476'] = func_6476
mod = relay.transform.InferType()(mod)
var_6477 = relay.var("var_6477", dtype = "bool", shape = ())#candidate|6477|()|var|bool
output = func_6476(var_6477)
func_6478 = relay.Function([var_6477], output)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_6497 = relay.TupleGetItem(func_4837_call(), 2)
call_6498 = relay.TupleGetItem(func_4839_call(), 2)
func_420_call = mod.get_global_var('func_420')
func_423_call = mutated_mod.get_global_var('func_423')
const_6521 = relay.const([[8.479442,-7.121735,1.824163,4.798241,2.755650,-4.046281],[-1.433392,0.813089,7.624758,2.394177,-6.111929,-0.563944],[8.722541,-9.845945,4.436606,-2.464492,6.435861,-7.775166],[-5.961664,7.511421,3.138286,-0.190584,7.358752,8.590701],[-1.912499,6.482793,6.699558,-6.833163,-6.434386,0.896630],[-4.252475,-5.924779,-1.810350,-6.252314,-9.141194,-2.457388],[4.949777,-4.859833,-6.040323,-0.417975,-4.843707,8.338930],[1.748009,2.921891,8.321353,9.483898,-4.984875,7.151009],[0.391753,6.875373,1.065986,6.591126,9.697638,-8.228658],[9.512555,-4.752701,-4.268164,-4.579790,8.366679,8.300608],[-8.871751,-2.782356,8.965388,6.002842,6.796370,-7.078456],[8.892826,-0.718774,6.773266,-4.407282,1.641768,2.376549],[2.230939,1.413493,9.605085,4.447273,4.208163,-1.294676],[8.084870,8.669494,-8.413452,-0.853515,4.758824,-9.818700],[2.657315,-5.684313,5.994758,-7.456670,4.410871,-7.240021],[7.033629,-2.104147,6.126551,9.495532,-4.754386,-4.157914],[-4.650438,-8.019757,2.155800,9.196608,-6.272124,3.038107],[7.213845,-1.300248,9.608130,1.723886,-7.439570,3.664966]], dtype = "float64")#candidate|6521|(18, 6)|const|float64
call_6520 = relay.TupleGetItem(func_420_call(relay.reshape(const_6521.astype('float64'), [9, 6, 2])), 1)
call_6522 = relay.TupleGetItem(func_423_call(relay.reshape(const_6521.astype('float64'), [9, 6, 2])), 1)
uop_6523 = relay.sqrt(call_6497.astype('float32')) # shape=(24,)
uop_6525 = relay.sqrt(call_6498.astype('float32')) # shape=(24,)
output = relay.Tuple([call_6520,const_6521,uop_6523,])
output2 = relay.Tuple([call_6522,const_6521,uop_6525,])
func_6538 = relay.Function([], output)
mod['func_6538'] = func_6538
mod = relay.transform.InferType()(mod)
mutated_mod['func_6538'] = func_6538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6538_call = mutated_mod.get_global_var('func_6538')
call_6539 = func_6538_call()
output = call_6539
func_6540 = relay.Function([], output)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mod.get_global_var('func_4542')
func_4544_call = mutated_mod.get_global_var('func_4544')
call_6568 = relay.TupleGetItem(func_4542_call(), 0)
call_6569 = relay.TupleGetItem(func_4544_call(), 0)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_6588 = relay.TupleGetItem(func_3136_call(), 0)
call_6589 = relay.TupleGetItem(func_3138_call(), 0)
uop_6596 = relay.log2(call_6588.astype('float32')) # shape=(13, 15, 13)
uop_6598 = relay.log2(call_6589.astype('float32')) # shape=(13, 15, 13)
output = relay.Tuple([call_6568,uop_6596,])
output2 = relay.Tuple([call_6569,uop_6598,])
func_6602 = relay.Function([], output)
mod['func_6602'] = func_6602
mod = relay.transform.InferType()(mod)
output = func_6602()
func_6603 = relay.Function([], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6091_call = mod.get_global_var('func_6091')
func_6093_call = mutated_mod.get_global_var('func_6093')
call_6613 = func_6091_call()
call_6614 = func_6091_call()
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_6622 = relay.const([-7.176978,9.763004,-5.339544,-1.031871,2.252807,-9.032448,-5.866749,-3.738364,-3.086885,5.331565,-8.944324,-2.592921,4.739911,7.897014,7.748860,-0.902744,7.924652,2.440267,-4.081854,8.657166,-8.202285,5.463290,-1.596736,5.205188,-0.885147,-4.511919,-8.538254,-2.103703,2.426333,-7.214233,2.572315,-5.687404,4.806218,3.429979,-4.584748,5.961057,-2.065496,1.383685,-8.484790,9.318658,3.972428,9.992553,4.201503,-7.511466,-3.858807,9.645748,2.201115,-3.885459,2.685130,-7.360616,9.508348,8.128681,-5.201828,-2.606651,7.274180,-8.438254,9.426059,-1.492858,0.489794,7.234651,-9.376083,3.293524,-2.865771,-9.273324,3.413627,4.761344,-6.993937,9.792991,3.397355,2.865082,9.104121,-1.958251,-9.571354,2.065123,6.594808,7.557981,-9.774629,3.225125,-3.281280,-0.645460,-3.698877,-2.550078,-4.127572,7.652708,8.448296,-2.300992,-0.573967,1.782837,-8.894711,-8.430533,4.144303,5.037805,8.602422,5.676329,-0.995279,1.318649,9.439604,6.628024,8.673445,-8.520317,4.057293,-6.753084,4.222542,-5.863523,-1.851899,0.753011,-3.878617,3.904614,6.950885,-9.838654,9.632279,-6.026006,9.711347,-1.468513,-6.082624,-4.390918,-5.087635,-8.237219,-1.308530,6.098066,4.773504,4.895368,6.586071,8.365513,9.550689,-3.528790,-2.530757,1.649683,-6.325918,-4.015445,-2.036546,-5.034330,1.731616,-6.226035,-3.196054,0.632446,-9.101770,5.214181,2.355975,-3.959049,-0.977769,8.022987,3.290561,6.234254,6.526820,6.384860,-0.566444,-6.636129,-2.857124,0.294204,-6.874168,-7.932696,2.303408,-8.539782,8.528528,5.528471,7.384269,-9.388804,-1.673418,-7.195906,0.487940,1.425067,1.179496,-5.729648,3.338378,-6.535634,-8.430319,-6.557243,6.865665,-5.405768,-7.262370,-0.397336,7.120124,-4.769365,-8.178732,1.201306,-8.011764,3.099394,-5.537496,8.085709,-0.389430,4.277994,2.482946,-0.234733,-0.257723,2.522942,4.723638,-7.494657,-5.092853,-2.080209,4.198526,-4.544337,-0.263726,0.129764,5.653309,-1.289811,3.473895,-4.397156,-3.119980,7.732696,-9.018913,4.561915,-7.720650,-1.013600,-1.436160,-7.486638,-4.087460,-2.903395,-2.369675,9.778339,-8.349006,8.431223,8.512573,-7.804420,1.193460,-1.567756,-9.590191,6.065636,7.901900,8.043025,-1.761467,3.407977,7.661108,2.996194,4.291818,0.709588,9.530024,5.065626,3.552657,-1.867612,5.680685,-3.720784,-0.304785,4.099375,8.962198,0.114300,-2.405790,-7.303291,-9.991900,5.929455,-1.766999,-4.746042,-1.524307,-3.914691,2.116052,-3.000297,8.711830,7.046547,-9.643478,8.367186,8.738835,9.581011,6.828189,1.125189,7.415451,9.561551,-4.047984,5.873546,-7.430295,-8.326590,-5.029231,-5.238700,7.153919,5.026157,-9.181165,5.701137,-9.673125,6.733483,-7.202550,3.120197,-7.428799,2.435670,-9.715962,1.383124,-7.429936,9.120358,-7.624135,-4.116851,8.158176,4.806930,-2.441037,9.430029,2.792909,-2.808969,-7.781491,2.740883,-1.717002,4.025707,-7.645244,2.854357,-3.721704,2.019758,4.281729,-0.352788,-6.302216,-3.051134,-5.234374,8.602613,1.370890,7.468687,0.743690,-3.480876,6.018556,1.153843,-4.754750,-0.412841,5.860623,2.223563,1.068020,2.582309,9.820178,-1.188592,2.341496,1.600641,8.147180,-3.784359,9.240468,-3.484600,-4.014872,-8.805353,3.133790,3.309467,0.068818,7.237686,-2.538762,-8.229288,-9.830267,8.976786,-7.434422,-1.763303,4.188775,-7.553125,2.742788,5.879197,-8.503355,-3.654147,-1.093496,-6.049340,-7.442094,-7.748398,-4.856588,-9.128734,6.377962,3.327295,-2.586584,0.038335,-9.219980,5.943950,1.275071,-8.326853,-7.172503,7.510666,-6.108304,-9.904635,1.778179,-4.433526,5.454473,-9.454227,-2.979842,-9.810432,-0.578507,1.501200,-6.993084,-9.889174,9.992530,2.550603,-5.474357,5.733600,5.231425,5.647844,-5.849824,-6.516345,0.004309,7.053118,-3.425551,-6.685481,8.835743,-4.259263,-0.997684,9.476261,8.832942,-6.924453,6.658886,-9.743906,7.651631,7.182330,8.873985,-7.148784,5.889571,5.375774,3.264554,-0.112724,0.722222,-1.930434,0.405732,7.461808,7.942309,-2.417375,4.916918,9.246825,2.468529,4.345308,-8.548213,9.304348,0.684583,-7.318062,-7.500023,1.491382,6.048619,-3.426280,-3.060735,3.092165,3.219761,-7.721975,-4.857248,2.860822,4.743451,8.540073,-8.872719,6.613072,2.972325,6.917011,-9.832146,3.437814,-1.281348,-8.413309,0.535100,-5.329082,-2.850200,-0.707811,-8.323586,-8.525781,-0.543364,-2.517060,-1.885274,-6.771953,9.284428,9.750310,-9.813141,4.494720,-8.873610,4.512820,0.455502,-1.822543,0.429542,-7.346307,4.562817,1.187807,-0.572913,-0.049110,2.618536,-1.624459,-1.942896,-3.023341,-3.999106,-9.605553,0.096812,0.062502,5.211514,-9.142460,-5.952973,5.901807,8.513289,4.043757,-8.346603,-7.965721,-4.662536,-0.291634,3.880939,1.999813,-0.832547,-7.812649,-7.416222,-6.418864,-2.023856,-6.493908,1.577931,-3.106569,-6.527555,8.183123,6.443928,-1.396143,-7.729697,0.043521,0.531114,-5.676732,-6.706369,0.695864,-9.913598,-6.332581,2.561870,3.258649,-1.526010,8.439724,2.404072,0.021173,5.304431,-5.507015,-1.462539,1.323926,-3.786884,2.428799,-8.807596,6.796809,-2.133822,9.122295,-6.343220,5.726943,-3.601708,4.185934,9.712420,8.469497,-6.802109,-2.100746,4.155907,-5.896390,4.672083,-7.471919,4.760637,-0.869826,0.055025,6.641383,-0.356479,1.800296,2.022107,-6.210896,9.833808,1.650433,8.072888,1.161394,2.593392,2.301309,8.184208,9.960954,1.031498,2.298514,0.469989,5.712528,3.659793,3.067083,9.147874,2.321920,9.112222,1.553419,-1.052123,4.572772,-9.386517,2.379201,-7.185648,-7.044644,-0.941428,-5.229858,-4.606668,-9.958510,-2.285231,8.671708,6.184109,2.896497,8.715195,-5.734991,7.596100,-7.511964,-8.389427,9.801017,-6.328673,-2.657915,9.039196,-7.068971,-2.151889,8.421961,-6.219675,7.976972,3.906571,-2.337902,9.623818,8.425577,-2.721410,-0.878983,0.355115,3.603747,-5.454388,-1.183112,0.001182,8.587908,8.187287,-8.476328,9.349028,-3.073485,-1.047595,-7.444135,7.777128,-7.502257,1.887396,-5.584615,2.856178,-1.353800,1.135249,9.377490,8.915525,4.870462,-3.546735,4.720935,8.550321,-0.401354,-8.482115,7.361150,-2.160251,-0.050444,-3.299662,-2.319205,-5.269997,5.326605,-2.867662,-3.212312,-0.608445,-0.468055,-0.109522,-1.819753,5.900494,3.343036,4.396229,2.227337,9.999382,0.215596,-9.024961,6.197829,-1.888724,0.113124,6.217048,5.943244,7.194010,-0.799279,5.964767,6.791607,-8.848684,-9.683270,3.412075,6.718827,8.534221,-6.979551,7.351113,2.056725,1.084642,-7.744712,-4.772406,-1.349168,1.829287,9.574772,2.598062,-8.562919,-4.264936,-9.546851,-8.897857,-8.889866,-4.842677,-7.890735,-3.564600,-9.940313,-8.081195,-0.293741,-3.641064,-9.278803,-1.935922,-9.725506,-5.606863,1.237970,6.692908,-1.847419,4.564533,-2.292230,7.367245,8.364026,-3.172258,1.394598,-9.737869,2.204135,-7.941548,4.947673,-5.820879,5.219175,-0.634201,2.449982,-2.395210,8.167734,-9.662411,6.239411,-3.743628,7.837687,-1.046688,6.930133,-2.118404,6.860973,-7.192899,4.703281,-7.650262,7.240779,5.669905,6.227181,-0.200261,-9.163206,-2.644142,3.110324,-3.975593,5.432198,2.975109,-7.836463,2.741614,3.162667,-8.778593,-4.419605,4.941823,0.462157,-5.218535,-2.755047,4.312827,5.762364,-3.199714,6.744556,3.507867,-9.984501,9.789479,6.671113,-6.742491,9.978654,8.199373,-1.383007,1.375310,-9.707616,-8.021673,4.632235,2.155016,6.352054,8.448516,-0.312572,8.074685,9.484877,6.031371,2.247957,0.198019,-0.153393,1.422887,8.370142,-2.847058,-9.078117,-6.540457,5.314502,9.784728,-2.435295,8.111546,3.632082,6.916311,8.516782,9.659154,-2.426716,4.426258,-7.693198,7.947816,-3.872100,9.596968,-3.159994,-8.502564,4.948142,-7.249503,-5.474155,-3.432857,-8.171640,-0.950397,9.312005,4.339272,8.239796,-8.981126,3.330749,9.507920,-7.923769,-3.120698,4.231572,-3.890938,-1.472629,-4.687123,-3.288210,4.169506,-5.293125,-0.154020,0.010608,7.472157,1.146501,-8.954401,-6.442938,-8.600381,-8.496549,2.388521,6.248164,-8.746387,9.292426,-8.429737,-5.305637,-3.679287,1.548578,-1.135778,-7.461650,3.575680,7.636235,-8.499800,-2.390624,-7.188150,-3.480124,-3.038291,8.066296,9.251312,3.859325,-2.659866,2.591712,-1.291845,-2.393172,-5.632560,-9.390039,-6.196001,2.731439,6.296199,8.382970,9.034932,-9.340834,4.580779,-1.126614,-8.588438,-4.702768,7.276408,5.237731,-3.706764,-8.929837,9.690132,5.294104,2.862151,-4.362213,-8.795872,-2.572208,3.965159,5.141134,6.767601,-5.047949,2.540908,-3.129203,-3.645338,-2.990393,9.776592,2.961032,8.365565,-0.181982,-4.919400,-7.988733,-3.349342,-6.810847,9.252362,-1.349085,4.885682,-0.964786,3.168812,-2.008798,-4.429604,6.760842,4.531824,-9.651471,3.362214,7.115253,-4.941074,-4.139169,6.817037,-9.828898,-6.327112,2.511766,7.621272,-8.404363,-0.358753,8.710424,2.303703,7.131484,2.274011,9.135142,-0.578680,-4.506943,-4.550854,-3.459634,4.096744,-6.392419,1.575983,-1.167204,3.533058,-0.707325,7.476147,6.437564,-7.725247,8.995006,-5.912480,-7.646262,-5.953169,8.357832,6.989562,-6.651588,1.753500,-6.157636,-5.768169,0.249510,9.745182,5.437759,7.671238,0.509114,6.434045,-3.556400,1.415911,4.890274,5.791578,5.729853,-2.941086,-4.360769,-3.823380,-4.418579,8.850173,5.675608,3.836072,1.695202,9.178314,-0.167082,9.753844,-5.781221,5.986867,-9.810047,7.963775,1.603372,6.592749,6.284742,-5.813447,-2.483210,9.889545,-1.181007,9.443879,-0.210909,-7.076386,3.748877,7.585093,8.722868,1.151424,7.969148,6.212435,-0.905009,-7.546784,-9.587387,-9.354665,-7.684493,-9.531591,-4.200568,-2.784182,-1.826386,-0.063388,4.417899,-3.085624,-7.481713,-6.486148,-0.482048,8.004206,5.645489,-8.720690,-6.799638,-0.010098,-3.178480,-9.631695,-6.619032,1.762853,3.985332,6.021503,2.897454,6.899409,7.554363,-5.751265,4.361730,9.303790,9.278084,1.654360,-7.186007,4.718628,-5.847009,8.061946,-5.985229,-1.758684,-9.641897,-3.442142,8.549430,-8.985724,-1.663743,-8.327241,-0.451709,-6.811617,7.241465,9.464811,2.307728,-5.490781,-9.007409,0.098333,3.421893,2.262075,2.589994,0.073661,3.628498,3.016609,-1.997022,-4.563939,0.116593,6.673309,-0.333310,-5.030866,1.987498,6.831942,1.276088,-6.471057,-9.136272,-3.620382,-0.949597,-8.239914,3.320501,8.303445,3.406855,-9.957787,-5.310335,7.456500,3.871747,-7.829251,8.070162,-7.508117,-6.755416,0.318788,-8.526289,-9.422779,5.492206,1.222792,9.892762,6.852867,-5.153560,2.156911,2.172834,3.034098,9.251870,1.266355,1.604758,2.184139,-6.916259,6.424539,-5.984457,2.848824,-7.692948,9.816674,6.383363,0.821319,-5.762153,-6.196805,5.266398,-7.227282,-6.849275,8.255219,-7.378372,3.830153,2.765908,6.190621,5.182159,-0.057152,4.354892,9.780799,-6.286309,-6.910702,1.315260,-8.914262,-8.747532,9.278498,-2.634461,7.679078,8.686685,5.574833,9.015348,4.884143,-6.001533,-2.297146,6.506763,-9.794211,-9.829306,-3.736586,-5.893524,5.504607,-1.705220,5.224913,6.650060,7.875982,3.000521,-8.250871,5.552192,0.054539,7.812460,-4.769106,5.238071,-6.674113,3.746388,-7.993274,7.696243,3.334727,-8.191265,-4.141425,7.879208,8.368225,-0.229505,6.494879,8.571666,4.381721,-1.103377,1.282582,1.923043,-5.702846,-6.624462,-4.218320,-8.345226,0.228216,-5.307273,-1.414422,5.828744,-2.914250,5.294044,-0.896673,2.918642,3.956587,9.548668,1.101833,-7.889844,5.003617,-7.918947,-2.548514,7.756395,-6.246063,7.868584,7.483189,-4.041220,5.143264,8.464291,-9.216102,2.728777,2.793654,-1.314913,6.135280,-9.840111,0.838765,-3.612292,0.500360,-9.328280,6.408010,-0.828389,-5.651604,9.631572,7.902286,3.712089,0.382176,9.166621,5.994496,5.451345,8.822024,-1.849268,8.143750,-5.883895,-4.722770,-5.990178,7.154015,9.916143,7.006047,2.135872,8.868965,-5.776464,5.954167,3.394844,6.630906,-3.403044,-3.529374,4.577944,5.473572,-5.410753,-1.168409,-4.097129,-9.251814,-0.654687,-7.026916,-3.123088,-4.951596,-9.998228,-4.993158,8.553499,-4.762335,-8.578289,-2.102296,-0.868039,-5.346592,4.583295,1.010337,-7.855653,3.996213,4.034854,-2.537737,-8.895076,-4.154341,-4.433202,-4.175973,-9.425698,6.152765,-7.784406,8.190040,-6.414651,6.820975,-2.085778,8.939567,-1.098122,7.077970,-5.954362,3.397302,6.609101,2.515839,8.649316,6.060028,-2.996398,-3.035803,-9.005268,-8.837116,0.073184,-0.731344,-8.044226,-7.170972,4.054322,5.828946,5.669953,-8.759983,-3.586240,6.470004,9.342251,-6.284303,6.405181,-2.628824,-1.735318,-3.518806,4.171876,3.686958,-9.044840,-2.616616,-1.923852,0.753859,4.187235,-2.593378,6.353593,6.879650,-1.657793,9.664968,-6.112306,1.326675,-7.367687,0.090003,-6.038989,1.412355,-5.327083,-1.964663,2.592668,3.150091,2.658046,9.350350,8.510647,-7.781120,-9.777597,7.419628,1.563759,8.238475,6.871510,1.579313,0.578741,-7.253877,7.880485,-7.641431,5.140266,8.776540,6.392390,0.410945,8.184978,-5.194416,2.699789,-7.739633,-5.006037,-9.038085,-1.422969,-8.155099,7.819541,-8.155505,8.893975,2.327145,-1.075753,-1.353357,8.516669,-5.793077,7.165514,-7.453162,-4.566304,0.616568,-3.166866,-3.539942,-8.917797,2.412294,-1.440923,-1.867877,-8.424413,-2.152263,-7.417815,0.615805,-1.147121,-6.466974,-2.211226,1.910789,9.653047,-0.103077,-8.887787,2.816532,8.894208,-8.087375,-7.454703,0.018971,2.225792,7.546454,-4.242936,3.290857,-4.024880,-4.902410,1.294726,6.935510,1.250820,-9.982643,3.352656,-1.014023,-4.435303,-3.969318,3.222194,-2.224040,5.377801,-5.200673,-3.506538,-8.231394,9.349760,2.346115,-3.380157,0.664513,-8.714378,-9.546000,0.944898,-6.783964,3.329575,-2.995051,2.851740,7.218850,-5.014258,-8.206650,-4.115362,6.930153,-8.219039,-8.705041,-5.790340,-9.632587,9.567949,-0.937775,1.197249,8.390387,5.723571,7.963497,-7.569378,2.327846,-4.328794,5.453986,-4.639736,-0.346985,3.998757,-4.618955,-3.475807,8.046009,3.048003,4.347786,-1.660129,2.101452,-1.157566,-5.295555,-0.052466,-8.649743,-9.007132,9.231298,-4.648101,8.733443,-8.910473,6.461900,-7.414683,-8.810294,-4.920314,-0.102671,-8.849111,-1.202848,-6.497755,9.339210,-1.752520,7.252001,4.442714,-9.278625,-2.573741,-9.358427,3.429223,4.133886,-7.155104,4.745631,3.781208,0.188707,6.672103,1.302710,6.799814,-6.375869,-5.418991,-1.536520,-3.468814,5.794989,-1.285795,5.097700,-5.457244,8.927549,5.181707,0.294041,-0.480308,-6.178357,5.321144,9.362037,5.490767,-9.869653,1.787739,0.399094,9.429047,-7.875015,-7.726250,6.169817,-4.434507,4.123304,0.385535,5.624306,-6.366222,-4.212744,4.297548,-9.945769,7.887843,-4.764764,4.449424,0.284154,-3.833580,-5.667247,0.302362,3.395872,-0.646991,6.274588,-4.735530,6.578565,2.194512,-0.537085,2.550150,0.230742,5.467870,4.444230,6.586744,-5.824871,-1.082335,1.265601,-8.736675,3.779411,7.046502,7.976848,2.423180,-2.573856,-6.709523,6.188376,7.897689,-7.905969,-5.344316,0.729825,-3.466605,-3.034661,-2.856424,9.751302,-7.924149,6.693569,1.696782,4.913618,6.596126,5.804349,-8.155795,8.861296,6.869941,5.635811,4.784900,-7.139628,-8.678784,-3.574691,-3.883488,2.128723,0.239963,-8.618075,3.270060,2.634492,-3.706108,-0.089306,-9.699479,-8.094693,-6.104606,4.131757,8.031798,4.489100,-6.805992,-5.749405,9.149426,-0.032391,3.105571,-1.260545,-3.311313,6.069104,-7.668766,-6.111679,-1.357586,7.476862,-4.578651,-4.605345,-0.496638,8.081220,-9.568722,0.518210,0.692541,-6.444343,-2.111557,-2.429199,-9.281338,6.113593,6.397469,4.599796,9.900307,-7.456493,-8.076612,9.272174,1.738964,0.481882,-5.124836,2.638540,-6.490815,-4.568713,-9.747682,-3.957114,8.104246,-2.841829,6.387045,-8.597280,-9.253177,-5.331949,3.319557,5.967884,-1.782606,-2.202709,6.750401,-5.891929,7.373824,-4.889519,2.183069,5.321299,1.011376,-1.188825,7.659000,2.145265,4.989985,-2.669762,2.192579,2.477675,1.678987,-8.590088,-6.612909,-9.725719,-0.343647,6.057457,3.296404,-8.543157,-0.700427,9.886497,2.470131,7.888389,-6.067551,1.790541,4.481124,2.035141,2.111883,6.227357,9.501251,7.892605,1.499235,3.485611,5.411609,2.942899,-7.377671,-9.490358,2.308031,4.652290,6.973331,4.186756,9.956925,2.684366,-2.904397,-0.153266,7.241036,2.156774,0.007848,9.188586,-9.236045,-3.476559,-9.154399,-5.592372,2.013679,3.577886,4.335708,4.532467,-9.055161,0.558952,-8.021666,-0.523372,7.134598,-0.965494,-4.104143,-2.265489,-2.926098,-1.367223,2.957759,-2.688799,-3.936108,5.817394,-2.487234,-0.890428,-9.987015,7.434759,-3.082258,-4.789172,-0.401059,-3.774487,-9.947250,4.492045,3.330161,2.372685,3.403854,1.516877,-7.572741,5.010429,-9.978416,1.198556,3.471919,5.321934,-1.099303,6.264564,-7.612117,0.210000,-8.669942,1.956353,-4.229706,-9.103321,-3.353354,3.269132,4.016398,1.077702,7.586298,-6.314034,2.889399,-4.399432,5.221562,-3.967213,2.610706,-0.644357,1.906290,0.427756,4.454495,1.292981,-4.081132,-2.569405,4.056521,6.221863,-0.034183,2.927113,3.381810,6.478037,0.764641,-4.267526,5.878010,5.133170,-6.940957,4.083416,-8.720281,3.627337,0.436765,-1.071142,3.787595,9.793061,5.623158,6.769441,-0.690833,6.024428,1.620670,-1.831351,7.551142,4.945578,1.605574,3.115364,8.582236,-3.763894,-8.100156,1.568603,-8.885450,8.350907,5.107477,-8.209271,6.128633,5.996718,4.521469,1.344155,6.267508,-6.716066,6.596482,1.525880,-8.500619,-2.910492,-9.265945,-2.247603,-5.690939,5.337490,-2.091695,-5.037217,1.892956,-2.598046,6.874930,0.132311,-0.134167,2.981720,4.353196,-6.960598,-0.409972,-3.498832,-7.522632,8.129804,-6.854284,-7.156940,-2.545830,-1.615417,3.033131,-6.281664,2.291380,6.942478,0.659807,1.243436,6.311973,-1.781910,-7.037353,6.145572,0.178116,-3.881450,5.517027,9.843360,2.454587,1.671663,-2.889640,4.642565,-3.024400,-6.258751,-8.064069,-1.164604,3.480857,0.547159,-2.100901,6.737796,-2.117818,0.260871,-3.586808,9.171648,9.329856,-7.824619,3.214410,4.895191,7.218513,3.879201,7.772968,7.656868,4.548738,2.694117,3.331416,0.345686,-7.326723,6.223695,2.839843,-8.065905,-1.337696,8.540705,-3.522326,9.442126,-8.881223,8.924019,-0.581260,-2.079475,-8.830859,2.565312,-8.465107,6.543280,-2.253594,-1.495833,5.315453,-3.354076,8.659332,0.411596,-9.659828,8.931951,-2.621258,-7.791501,-1.727675,-4.078443,-0.795951,-3.601426,-1.011483,0.735094,9.230093,1.240123,-6.481718,-5.921041,7.453806,-5.024035,-3.276509,-8.228330,-6.511590,2.299802,8.627861,3.017749,-1.720020,7.555596,6.039933,8.297649,-9.135052,-2.800505,-3.437095,-9.964139,-8.048359,3.931092,9.848223,6.851455,-1.230048,-9.633050,-6.509705,-5.158933,8.670024,-4.408617,-9.562561,3.416893,-2.324255,-3.327203,-9.704023,-8.555930,6.680173,3.259421,7.635523,-5.359670,-1.733683,5.181949,8.394381,4.498577,1.306443,7.225780,6.660814,-2.540027,-5.544290,-2.611237,-3.833663,-9.873416,-8.475519,-6.202609,-2.548331,5.503933,2.345758,-4.909919,-6.056952,5.054120,7.374233,-4.187244,-6.191415,-6.345484,5.595231,8.363501,9.137693,7.864256,-6.961187,7.505003,-0.275036,3.036326,9.711354,-3.424807,4.831313,-9.871131,4.856388,5.573750,7.240803,-1.563844,-5.545380,-0.727526,0.500109,5.443937,6.503892,3.925202,0.690620,7.544870,-4.107987,9.980942,-9.296911,-9.399004,-9.249690,9.444840,0.448971,-0.602034,5.325968,7.946804,-9.509841,-3.986421,7.327047,3.150712,-9.556353,2.051839,2.516847,-9.892778,-0.311577,7.402810,-7.124775,9.457881,-8.773058,5.903749,-3.595434,5.232287,1.993435,4.485348,3.094623,-4.787551,1.203892,-6.587008,-9.412419,-7.211625,4.889243,5.846154,-3.169610,0.792341,-3.911457,1.900539,1.097754,8.723575,-5.553431,3.387284,3.684096,-9.665204,9.058122,9.589149,8.714374,6.091113,2.077433,9.695658,2.663739,5.536774,6.916540,-7.240327,8.776356,-2.136459,-9.991956,9.220776,1.114919,8.118524,-4.850223,-5.493608,-2.087682,-6.674833,-3.075833,-2.736747,-4.948048,5.734500,-5.672150,-2.572202,8.987064,3.042781,-7.611227,2.643547,-0.180722,-7.803292,-6.882607,3.231200,-9.802336,-7.262212,0.449184,-7.461731,-2.052469,8.582375,-4.593304,-4.636710,-5.046888,2.033824,-9.938708,-0.532540,9.149123,2.368264,5.767408,7.601210,-4.999238,-3.296477,-9.796963,7.829457,-1.778215,3.311406,-0.027354,-6.997462,8.936635,7.363689,1.148091,8.906769,3.421315,-0.219088,7.652441,-9.834352,0.840159,9.734505,-5.712571,2.186340,7.273570,6.362645,-6.014180,8.972465,5.397760,-0.837770,-0.289922,-5.846966,-9.606221,6.691889,-4.814878,-4.110535,-4.544550,9.954284,-7.661216,-0.331395,8.317503,-2.281127,0.200587,7.364615,-8.518624,2.262240,1.327865,-4.852968,-6.483897,6.462012,-1.847670,5.962433,0.863348,5.514378,7.513318,-8.431551,6.789139,-8.326820,-8.179439,2.899771,5.584361,6.106658,-8.054386,7.572903,0.587509,4.294654,-8.611118,8.618622,7.963630,1.156098,-0.542680,7.091935,-0.710076,-8.480347,-0.808219,-0.581935,6.816407,-4.491278,5.958254,-7.320791,0.654040,-1.202732,-1.687334,4.225984,-5.439652,-7.358350,-3.870296,-3.654522,-8.045429,3.464575,6.120160,-5.193747,-0.986183,-6.964021,-2.197399,-2.697447,3.797086,6.696404,-4.821405,3.530027,-8.238691,6.949263,-9.247954,6.206238,8.471608,7.666758,-9.832269,1.206425,-4.965983,6.622238,-7.736208,-9.638425,-1.133152,-5.257019,0.681067,-8.032690,8.254179,-5.720358,5.885140,-5.062218,5.471476,5.531933,-3.057955,-6.085307,9.274501,6.296468,2.469505,8.560948,-6.191645,1.892344,2.993852,8.858387,0.591245,-0.591513,3.205246,0.175676,-9.372986,1.327489,7.407758,-6.413205,8.626282,7.140993,2.880165,-5.811352,-0.281707,7.490104,5.827708,-1.257688,9.869453,-3.452663,-0.129703,3.809144,-0.494533,3.326654,-0.781659,-6.944322,6.650220,-4.985959,-5.551815,-8.638474,-0.431844,9.406634,-7.668009,0.144529,-9.531073,1.792444,1.497185,-4.062328,9.662643,-8.664378,2.406192,1.182311,-4.866859,5.968431,-6.244177,0.592474,-0.007268,7.086451,-8.055993,-6.250354,-3.189084,3.588169,-3.259117,6.278708,9.196166,7.501046,0.180732,-2.875388,-7.742064,-8.529837,9.935977,-0.483092,-4.101349,9.807044,-7.834759,-4.650314,8.393191,-3.171433,6.613463,5.811693,7.617872,5.931409,7.167603,-0.824987,4.526801,-4.312185,-1.126643,-5.043058,-4.470364,-7.502742,5.268437,2.282158,-5.470748,-6.645627,-7.220016,8.981152,-7.426990,-9.847322,-7.121739,-0.994130,4.580415,-4.045225,8.540517,6.420022,-6.320922,-5.182221,-3.122875,-1.426821,1.278501,-0.993003,-3.176692,-7.788304,-7.115873,-7.109814,2.830915,-8.966503,-3.403751,5.957584,-2.281915,2.863576,-2.224986,-4.274634,-9.233621,2.437003,-9.151717,9.853298,2.198787,8.082316,-4.219937,-7.756324,-7.716941,-0.430594,-4.227712,-1.676595,-6.985079,5.735607,6.053738,0.754086,1.214135,-5.015873,-2.681729,-8.445155,2.895817,8.921788,-3.122469,2.772827,7.086001,5.990297,7.483096,-6.425489,8.271554,-3.004549,5.725065,-0.565850,8.055447,-3.214075,-5.683615,8.492786,9.720407,2.513405,4.232892,-4.412019,9.567437,-4.240253,-2.192704,-3.156873,-6.611853,-3.370561,6.920077,-4.946727,4.108353,-6.703448,-2.393153,0.231148,9.863244,6.333239,-5.536630,6.275006,4.914642,-0.121540,-6.857568,5.731869,-5.154124,-4.305595,6.435483,-7.290490,-0.517140,-5.037107,-2.954820,-5.517284,5.554531,-9.893805,6.124110,0.255766,1.974901,-7.870652,-8.059979,2.171266,-9.858187,-6.312538,-2.310171,-7.746530,-1.642139,9.636557,8.790711,-9.270132,6.635391,-6.380869,-4.765807,0.979050,7.466065,1.271731,-4.872626,-3.850538,-0.203210,-1.505730,7.697881,5.136457,1.015684,4.053885,-6.814481,5.105404,-7.545564,5.232210,9.145725,8.167418,-9.913333,8.037202,9.111951,4.131626,-1.735528,-3.879822,5.524566,2.756269,9.451693,6.352693,-3.830839,5.162582,-7.068750,8.438373,-4.266399,-3.153125,7.711113,4.501890,-5.239292,2.141262,-3.495145,-0.619497,2.238454,-4.080118,-1.184945,4.771175,4.491797,-9.676666,8.331064,4.792382,-5.125808,-9.805778,7.952047,-7.929604,2.382427,8.600500,9.255978,3.383466,8.343082,1.825867,2.774727,0.548922,-9.804349,-6.493441,0.341465,9.233951,7.075926,-2.853604,7.557890,-9.604119,-5.879047,-2.895652,-1.631580,-8.019654,8.040845,7.788716,-1.058980,9.277263,-2.423254,-6.780020,-4.413869,5.086585,-7.307210,-4.971296,-3.556270,-1.612029,-0.076471,3.439323,-1.470099,0.611313,1.999011,-3.954362,0.002939,-5.370804,2.976833,7.946939,-4.065902,2.382650,-3.579594,-4.241592,6.553296,9.073114,1.907342,-5.700260,5.829401,-3.988642,-8.497088,-9.351656,-1.427096,-7.842191,-4.968919,3.713027,-2.053432,7.962944,4.622069,-8.638270,-5.904394,-6.692632,-1.262724,5.882680,-4.110616,-5.400319,-9.427524,-5.881680,-5.269664,-7.324329,4.384218,8.701988,-1.492702,-0.107633,5.201436,-4.189818,0.737592,1.697804,9.603702,2.468992,-3.010399], dtype = "float64")#candidate|6622|(2464,)|const|float64
call_6621 = func_111_call(relay.reshape(const_6622.astype('float64'), [16, 11, 14]))
call_6623 = func_111_call(relay.reshape(const_6622.astype('float64'), [16, 11, 14]))
output = relay.Tuple([call_6613,call_6621,const_6622,])
output2 = relay.Tuple([call_6614,call_6623,const_6622,])
func_6627 = relay.Function([], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
mutated_mod['func_6627'] = func_6627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mutated_mod.get_global_var('func_6627')
call_6628 = func_6627_call()
output = call_6628
func_6629 = relay.Function([], output)
mutated_mod['func_6629'] = func_6629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4990_call = mod.get_global_var('func_4990')
func_4991_call = mutated_mod.get_global_var('func_4991')
call_6639 = relay.TupleGetItem(func_4990_call(), 0)
call_6640 = relay.TupleGetItem(func_4991_call(), 0)
output = call_6639
output2 = call_6640
func_6643 = relay.Function([], output)
mod['func_6643'] = func_6643
mod = relay.transform.InferType()(mod)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6643_call = mutated_mod.get_global_var('func_6643')
call_6644 = func_6643_call()
output = call_6644
func_6645 = relay.Function([], output)
mutated_mod['func_6645'] = func_6645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_6699 = relay.TupleGetItem(func_3136_call(), 0)
call_6700 = relay.TupleGetItem(func_3138_call(), 0)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_6720 = relay.const([5.367396,-8.604394,-1.182821,-4.447799,3.539895,2.283166,-3.057564,4.645848,6.097934,-9.440269,8.999244,-2.176095,-2.323644,9.433306,-3.127120,5.280045,6.388601,-5.060017,-3.243169,8.775954,5.162544,-0.219934,3.507685,-7.112515,1.102705,1.955172,-3.443781,-2.293029,-1.404027,-1.560517,1.348815,-5.056913,1.546648,-9.826749,3.994998,-7.438686,-4.275446,-7.470652,-7.748136,-7.214987,-9.295781,7.490757,1.926972,3.049114,4.945547,8.013000,8.453704,2.573052,-1.876846,-7.532482,-0.910653,-4.124569,7.910456,-2.189849,-8.758305,6.077760,-1.454613,8.490797,-2.262481,4.459791,-1.206865,-4.476965,-6.376512,-3.099894,1.041877,-3.983785,8.072666,-2.781335,-8.353983,3.497820,2.519311,5.729851,4.496990,9.360416,0.418593,3.330549,9.366083,4.925449,-8.533913,-7.934863,-6.699191,6.067787,-1.349104,-7.642139,-1.348908,7.139948,-9.343641,0.626969,9.863418,7.378718,4.248216,-7.246502,-2.180931,-8.974346,3.954545,-1.936312,7.803244,-7.759238,4.485363,-4.257642,-1.967380,6.809485,-1.411772,-4.454598,3.048815,-3.253710,-5.787505,-7.221428,-3.131319,4.646527,8.087149,4.577230,2.461302,-3.568668,-7.849638,-3.801150,-0.264580,8.034032,-1.954269,-5.588466,1.194713,-3.632831,9.290515,-3.979819,5.895633,-6.874075,5.758056,-5.127956,9.816598,1.880964,6.111294,-5.370230,4.024652,8.968297,0.857932,-8.202752,-3.710690,-7.774326,7.600930,-4.394731,9.388137,2.157879,-9.470994,5.121507,0.521014,-9.346561,0.594685,-2.859846,-2.828373,-2.399896,-9.151485,8.385795,-0.224756,-4.808648,-5.461123,-6.102829,8.019383,1.108682,0.790536,4.639239,5.421741,-9.910931,-6.217238,-3.947305,-2.428227,-4.043787,2.907023,3.681130,-5.468859,8.395326,-6.922324,-8.101005,1.693489,-5.960431,-3.339917,0.488590,2.381684,-5.253721,4.943708,-5.910647,-3.829237,-8.896298,-6.682419,6.740408,6.587442,-8.455252,-4.336971,-9.055451,-7.267324,9.527719,-5.668987,-6.695158,-8.418255,-6.324788,4.903587,2.173792,3.850966,9.961910,5.837413,-2.070875,9.050988,1.767278,0.521255,-2.720775,-1.833049,6.009882,-8.360111,-9.340564,-3.581947,-0.764908,6.023197,3.756162,6.729148,8.927452,6.502741,-2.714381,-9.267651,0.952209,9.320453,1.356365,0.462591,-2.073088,-7.812160,-4.090345,3.853208,5.829159,-5.400912,-0.748959,9.614955,-8.396656,0.645988,-1.024182,-3.117171,-7.398010,9.097673,5.359213,-1.463045,-1.575360,-4.897233,2.248257,-4.252709,4.554197,-6.648443,-8.105443,3.952934,-1.498904,6.081336,-6.963071,-5.018516,1.768274,-9.603124,-0.918714,9.650354,4.019997,5.918641,8.184298,3.709902,-1.076536,-5.946783,-8.882020,-0.398484,1.524289,9.226708,0.574434,-9.421609,4.698867,-1.772303,9.801737,-0.606549,6.950364,7.138153,4.211352,3.681515,-7.222675,8.568779,5.558186,-2.281803,9.693045,-7.916727,4.527101,-2.176289,5.686174,0.415110,-1.195467,-4.050776,2.846506,-5.438422,-0.985041,6.678490,-8.381901,4.373525,-8.598306,-9.279913,0.443051,-9.241236,3.583871,7.908419,1.705034,6.382358,8.923680,-1.073174,7.048222,6.041975,-7.014434,7.116151,6.664915,1.213887,-4.818963,-9.194745,-2.621546,-1.193727,5.406769,3.446137,-7.205624,-6.293517,-1.981685,0.752781,3.717197,5.639884,9.723310,-3.697163,-3.588872,-4.017684,4.921842,-0.925973,7.668319,1.616623,7.470591,-3.926815,1.824497,8.190345,4.488852,-1.090163,9.653950,-2.740049,-6.588596,-0.744031,-8.598603,2.962066,9.654729,-1.453473,-9.283495,1.524232,-7.720173,-8.784439,-0.492498,3.581036,-3.129426,-9.159841,1.595708,-9.070291,-2.457967,-1.777425,3.496986,-6.371143,-7.569124,3.032716,8.273118,-2.271533,-2.672998,8.012691,-4.345343,-5.354823,-1.099650,-4.846055,-5.831393,3.195514,0.185022,0.458862,4.253071,7.773905,-6.769704,4.856768,0.820717,9.514583,-0.831544,-3.130671,3.802672,8.443664,-2.978809,-4.944887,-4.292751,0.818661,0.376024,-8.283578,-6.880783,-9.622314,-3.985480,-3.021353,0.797842,-8.220025,4.593209,-3.054917,6.661337,-3.722010,-2.682584,-4.510844,0.965677,-3.937492,3.838828,5.074730,4.539503,-4.627715,7.184156,3.676107,0.716229,-4.813454,9.393485,9.729355,-1.392169,-9.747380,-2.840751,5.331258,-2.856378,8.931439,-7.827340,6.086070,-2.456759,-5.254524,6.499193,9.028610,1.928299,7.215348,-9.869159,2.993741,-2.231865,7.840661,0.813568,-4.289710,0.159817,1.774740,7.512472,1.850538,-1.385665,1.857101,3.492157,-1.504124,6.069463,9.613181,3.294391,-8.138377,-3.425612,-0.513153,7.190382,2.734283,-0.307804,-4.343583,-9.543131,-0.551513,8.368244,-5.913126,-0.747833,1.857637,-4.986039,2.401788,-0.174946,7.553682,-4.080825,-7.338662,0.446079,-2.024496,-6.351139,8.930621,-3.814485,2.140155,9.883967,-1.996182,8.610816,4.850714,2.339728,1.955476,1.054881,-0.669201,-0.034939,8.862027,5.318391,-0.848494,-4.355905,-9.555278,6.095979,1.470979,2.923653,-6.619634,5.563071,-5.730688,-4.416715,-0.066815,-8.663354,9.017672,0.372397,-9.995901,-7.895046,-2.213845,-1.021611,2.719066,2.454215,4.189378,8.569325,0.146247,2.173503,7.160036,9.520311,8.959237,-6.368457,-9.343943,1.098182,-4.583161,4.730388,4.842353,9.199874,6.045812,3.252434,9.804621,-6.898341,0.036994,-8.704776,-7.712587,9.730818,-3.013259,-2.683533,5.594734,8.344356,-9.525461,2.456933,4.572625,-5.146800,3.163363,5.120441,-9.210894,3.812170,6.892028,-1.820711,6.837402,-9.561695,-9.381922,-8.961348,-9.922009,5.366963,1.365556,-9.283471,-9.876321,2.609871,-2.719869,-3.143163,2.898091,2.394400,-2.176065,-0.012956,6.376129,6.742063,1.409838,9.898761,2.169553,-6.839893,2.476835,8.195178,-6.651050,6.063144,2.831092,2.651801,4.204810,-8.351003,8.953938,8.802141,2.528667,-2.799055,8.052456,-2.230782,-1.047780,4.818947,-6.745405,2.108756,5.052886,3.697524,8.287030,5.480613,1.748751,-2.330697,-6.463485,9.400351,-8.062355,2.939815,-4.924043,-5.956448,-2.684876,-1.845421,9.570384,4.300604,5.456503,1.629382,-3.449197,9.141547,-0.032651,-0.743024,-9.880244,-3.928233,2.876676,-9.090949,-2.140329,-3.801650,-4.038748,6.727413,8.541007,-8.389855,8.241798,1.363909,2.335872,-0.742579,-4.651009,-9.303066,-2.045257,6.920053,-7.942888,0.858487,-2.942298,-8.117010,0.965703,-0.382130,-0.176080,4.935526,8.720665,8.287988,2.235992,-9.921926,-8.094819,-1.260071,-7.459458,-9.710671,5.446869,0.146489,-7.579784,-0.144554,4.308112,-0.330581,-9.090952,9.241915,-4.832512,-7.572766,-9.486739,7.556440,5.849235,-2.472603,0.100577,2.546398,-9.473921,-5.328011,-6.759343,-0.450361,-6.638153,7.254971,-7.238504,-8.144173,-5.575481,7.039262,6.122275,3.618963,-8.706129,-0.216057,6.592130,1.601544,-8.890571,-3.996359,-9.186710,-3.356957,0.230389,9.412928,7.403214,-3.836585,-4.842074,-6.935800,-7.145408,0.799499,8.939375,-3.985998,8.010139,1.201560,5.367357,-9.999496,-2.154119,-2.609864,-7.668240,-1.118301,6.224932,4.747437,-9.834340,-0.341149,-8.877890,1.153727,1.948918,-7.928355,4.500210,4.073857,3.730665,0.243176,-3.191370,4.683944,9.368005,-2.402942,-8.526266,6.219885,-3.568597,4.006327,1.038198,-3.470331,-8.811623,7.233202,-6.283102,-7.407224,-6.308509,-3.603566,-9.142379,5.051747,7.090930,-2.636028,-9.519893,-3.442941,4.685471,3.863660,-5.992321,-0.532515,-6.268692,8.048319,-2.406603,-2.327140,1.384124,0.845401,-2.149439,9.608020,7.736202,6.676597,3.877902,-5.241045,4.961576,3.376032,2.772261,-5.704379,8.429184,5.887530,5.243979,-4.179532,-7.073182,-1.582011,5.696809,-9.119797,-3.973316,-3.975532,6.187969,-3.123082,-5.555999,-6.596158,3.582613,8.597772,-8.127216,-7.144003,-1.303067,-6.852313,6.556255,5.076295,6.889853,3.906470,5.820140,4.772556,-2.732682,8.240331,-5.777126,-0.940201,-2.842032,-0.909565,-0.288213,-9.675707,-8.828571,6.624671,-5.994509,-6.746031,-5.728207,7.604027,5.657771,-3.114128,-8.747506,-6.486538,-7.519117,3.709678,-5.623853,8.002549,-3.812669,5.196980,4.247052,-9.506599,8.370641,2.341691,-2.816074,9.310026,1.895990,4.171530,5.045005,-4.537189,5.844441,-8.618911,-8.724701,-9.558407,8.689930,9.172814,8.377382,-1.213661,-9.017420,-5.654321,-6.843397,-8.370251,-8.071930,-6.085070,3.140358,7.273197,-1.243445,-4.934099,2.515339,2.153761,-7.447773,2.684892,2.598668,-8.282661,8.076238,-6.283926,-1.579103,-7.217060,7.327012,-7.679929,3.280516,2.031666,8.382869,-8.984427,-0.604959,8.626999,-9.280839,-5.698094,2.719600,3.737132,-5.072333,-6.271370,-6.494166,1.805597,9.423064,-1.303662,6.321659,-6.307359,2.549811,1.840601,1.428000,-6.269224,-9.581665,4.633294,8.842392,-5.584439,-6.441707,-7.884996,3.090997,-5.598430,5.659688,-0.919004,-7.528987,4.388070,7.455576,-9.834346,-4.280245,9.575900,5.134958,-6.201107,8.874728,-0.275073,1.650841,0.575263,-1.344685,-5.333612,-6.096384,-2.243467,5.878421,5.257743,7.147873,8.096100,-5.104537,-6.167106,7.210319,3.300321,1.726620,4.383325,-3.793739,-5.548904,-3.810852,6.110834,5.469704,-8.836898,4.799942,1.423555,9.559330,-3.041198,7.796626,5.642625,4.576539,-7.650777,3.750547,-7.610910,-0.953064,-8.302018,9.791756,6.902406,-5.433364,1.369747,9.225924,-5.839331,-3.780240,2.271886,6.326748,-9.640032,0.815241,0.201405,-4.693730,-5.152037,-9.713415,-0.069722,-2.572508,-2.341971,7.732886,9.588081,6.499467,2.299994,-8.307818,4.055585,7.906812,2.113857,-0.640383,3.143573,-9.511764,3.114185,1.623297,-0.953553,-1.339344,-1.902026,-1.606844,-0.692297,8.494703,4.905507,-7.960930,7.744502,4.298431,-2.802418,0.292972,-4.770996,-4.734729,9.591241,8.166854,2.229599,-1.143081,2.843333,7.882994,-9.351158,4.920001,8.272775,0.517568,-4.880642,2.301850,-7.577090,-7.416050,-2.219920,4.233145,-0.297530,8.038979,-4.528542,2.964663,-6.248176,7.636489,5.671510,1.621337,3.317551,8.802274,0.472522,-3.547011,-1.405667,-4.929496,3.882336,-1.344793,9.123356,-7.522696,0.652514,3.151209,-3.624173,8.411893,-0.123960,-3.698985,4.862846,6.357148,-3.003848,-8.126918,-9.566971,8.592774,-4.348233,-1.477732,3.287988,5.998346,-9.819612,5.613228,-6.527346,1.194291,0.392246,-5.537396,2.102615,8.017327,6.244023,-8.271001,-6.188843,-5.621931,1.441330,-5.537381,7.539829,-7.204033,3.104422,-0.815544,-4.697843,-6.053741,-8.319772,-8.867381,-9.780561,6.453558,3.814193,8.183403,-8.655192,2.082905,-2.370286,-0.131632,7.045396,-6.266796,-9.279798,-9.861754,-7.253560,-4.297949,1.466449,-6.836758,-2.284818,-3.121478,-3.588852,-1.801890,3.348280,-7.895319,3.366892,0.785991,6.612602,1.445696,-4.448888,-8.265432,-6.393644,9.316920,2.696128,7.493700,-7.877030,-8.165644,-4.789407,0.650024,-5.279257,9.350433,-2.503266,-7.272914,-8.636844,-3.332385,-6.496874,4.144361,4.499547,-1.764908,0.625290,6.610576,0.334264,-5.850575,-4.335628,6.826595,4.688575,-3.669617,5.354934,-8.256249,3.747411,4.705320,4.998716,-7.482381,9.700827,-2.383672,0.995547,-4.984871,3.896157,-6.243420,-5.466178,-1.773198,-4.872384,-6.026296,1.014320,-3.634223,0.162598,-2.682571,-0.282655,7.234719,-6.749559,-1.543699,8.000920,-7.924804,6.108809,-4.590970,7.133617,-9.930894,-2.998763,6.332498,9.948621,-5.326955,6.981909,8.388076,9.807794,-7.780703,-1.705633,8.536741,5.362319,-9.741479,-8.303342,9.402270,6.633072,-3.934563,-4.684899,-8.347464,4.530202,-0.442306,4.648358,-3.525976,-1.734459,-4.969174,-0.322854,2.310568,-5.748842,-5.118385,-7.013956,-0.508854,1.012289,6.662549,-3.381194,7.136361,-2.697364,8.338187,-3.403826,7.833913,-4.668672,8.976012,9.354869,-5.964701,5.361388,7.788246,-6.645615,0.163835,-6.166885,2.153431,-1.495065,-6.094558,-8.228310,5.067555,4.038280,-5.523232,-6.500453,-4.507293,-8.202884,5.427454,-8.711768,1.546468,-2.712247,-4.079613,-8.625754,-1.892532,4.496369,6.502127,-4.636942,-8.867349,8.158019,7.752240,-8.573388,-3.975665,-7.001365,-8.659549,-8.876925,-2.637112,3.889620,0.548874,-9.377243,-4.851605,-6.824760,-8.029492,-5.813792,-9.581002,4.042788,-8.437849,-5.218393,-7.585795,-8.546350,6.062957,-8.027981,-4.235306,-6.463923,5.746834,7.237930,-8.482823,-2.980115,-6.720016,5.246486,-2.169355,-9.118754,7.193471,2.871573,6.256394,-1.168050,-0.515274,-3.271665,-1.632980,-1.961486,-9.576072,-5.570192,6.981099,4.389124,8.186703,7.996630,1.319553,-2.403721,-7.112888,-3.442533,-5.794942,-4.164148,2.308642,2.387272,3.864264,-7.078541,1.479212,8.638099,6.703280,-2.022978,8.930332,-6.486715,9.853748,2.697498,4.922863,0.554934,2.819170,-5.048985,6.840553,-6.068852,-2.091300,-9.728955,0.450154,-8.384809,-9.581225,-0.581469,-6.010545,-3.423347,8.005662,1.545639,9.617101,-0.535926,-4.810964,2.519096,-5.359447,6.930890,-7.923305,-8.876934,9.208378,-6.618547,6.000752,1.720115,-5.516974,8.232451,-5.570020,-1.622319,-3.983989,-2.459745,8.908108,-7.102840,7.937411,-2.097585,3.132621,-3.916525,-1.618182,-9.455409,2.854804,6.811126,0.634393,9.053179,-1.544143,0.896199,6.494620,0.121587,1.094457,-1.150361,7.487925,3.990646,-7.925610,0.518216,-0.229338,-7.246619,-6.099463,9.218199,8.697294,9.759674,-3.370859,-5.772155,-4.353156,8.467771,8.088316,-7.525739,-7.209770,4.950236,3.361340,9.497482,-5.261336,8.246572,-0.627228,-3.239794,-7.908963,5.807732,-8.797005,-5.990472,6.508664,-4.688107,9.082258,-2.709135,-9.603401,-1.616046,-6.172666,-7.714075,-5.505363,7.212522,-0.651757,-5.778957,0.673132,-6.810168,4.103456,-3.015739,-3.896041,4.023867,-9.569426,0.304398,6.423424,-1.939817,-3.322161,-4.329223,9.596116,9.232233,1.131270,-8.596297,6.149179,-6.808820,5.093174,6.138568,9.236910,8.371514,-4.632330,6.610301,3.276776,-1.020685,-3.563035,-1.707720,-0.191594,9.901123,4.801373,1.021830,-6.728371,3.549954,-0.787583,0.195803,5.570266,0.615424,-0.676643,1.343560,8.601654,9.949487,-4.007878,5.188860,0.015029,-3.038592,-9.897865,7.213580,1.199134,-1.632830,6.731508,7.117911,-7.458956,7.615864,4.448050,-7.861584,-3.224561,-6.479169,7.968337,0.207380,0.683463,1.292798,3.767732,-4.950569,0.869855,1.704859,5.681099,7.750824,6.552134,-5.564087,9.379418,2.348861,-1.306240,-3.149789,7.972624,-5.813406,6.983511,-7.856442,-6.881752,6.272468,2.064002,-2.239652,-4.439336,9.594899,-9.911330,-1.269708,-8.659647,4.390764,-1.699222,9.334181,-8.489692,-1.147962,4.653269,-0.918207,0.191002,-5.960563,-1.480780,5.997243,-0.763823,4.488371,-8.125251,9.974439,4.377830,2.874161,-3.805336,-8.137477,-3.919463,9.807461,5.012564,2.501378,2.506673,-1.472175,4.656016,-3.789395,-9.018429,-8.908547,-0.564275,3.729859,5.649554,2.127265,6.707893,-8.646915,-9.855535,-8.348113,8.407811,-8.708238,7.892858,0.317585,5.462374,-0.848999,4.922475,-2.945134,-1.884075,7.892247,6.468484,-6.790233,-9.519072,-7.189738,-2.181113,2.717784,2.463143,-6.718339,-1.758361,7.829896,-1.966610,6.931017,-3.683141,3.713051,8.420638,-7.244483,9.459374,-5.151227,0.125315,-6.348642,4.305571,-0.365231,0.261363,3.759866,-2.369219,7.251684,-8.999975,-7.246631,1.459204,-8.529543,-2.593398,6.088833,5.944202,-4.444165,-6.743071,-2.573838,-0.793074,-8.266532,6.391335,3.497761,-5.724361,-9.236114,8.468911,-3.166555,-7.939573,5.427532,7.900499,-9.619895,-4.650077,-2.151491,1.551311,-1.451245,7.569693,-3.296224,-1.342318,-6.564412,-7.627899,-5.959548,2.320169,-2.093546,4.845835,-7.968845,-3.926808,5.132963,7.018513,-4.442206,-9.497848,-2.332751,0.415426,-5.693965,-0.437183,6.572198,-2.885772,-2.231289,-3.117290,2.461388,4.616644,-2.773634,5.820341,-6.894303,2.608747,4.103689,-3.310385,3.134307,-2.539746,5.938079,-8.671780,-7.391932,-4.527175,-1.758964,8.201826,-1.942209,-9.865527,7.255116,-5.611302,-6.712664,-4.283116,6.329182,-0.020253,-9.464182,0.105381,1.731569,-1.113396,-4.058008,9.966559,8.728585,-5.035977,4.685339,8.175927,-5.637557,-8.582473,2.129562,3.484218,4.628534,-8.475935,-3.645181,-3.616098,0.876726,8.225439,2.822410,4.733008,-7.295668,5.608698,-4.025226,-8.432289,-5.298132,2.970673,3.131517,2.454253,-4.923815,-8.859685,3.509655,4.544081,-5.986992,-9.092545,4.891812,-2.206980,4.592248,2.578046,-4.812422,2.549438,-6.545222,2.003000,6.921412,7.239444,-1.796617,-9.184588,-5.874548,-5.036073,8.990043,-0.238751,-8.500226,-5.277956,-2.573771,4.671622,0.530572,-0.138774,-2.402775,6.893124,-1.829043,3.538628,-2.837882,-4.181507,1.740805,1.201136,1.818460,2.170867,5.964447,3.704091,1.793230,-8.253766,0.790825,4.843946,-1.246816,4.111190,6.891964,9.884483,8.056588,-7.989031,0.150240,1.591321,7.757643,-0.943855,-7.652618,2.176304,0.836204,-5.152000,-9.434292,-2.309360,-6.026069,3.105370,-4.910503,2.701961,-2.191583,3.369498,-8.067303,-0.449933,6.239740,-0.322257,-7.109578,-7.092890,8.468192,2.090696,-6.691031,6.103644,2.722072,-1.394646,3.923041,8.286679,8.293463,8.841812,3.820731,6.309582,4.797395,-2.847204,3.755471,9.859535,4.648163,-7.558431,-2.090751,-2.021942,-4.381831,6.958258,3.419504,7.057789,0.944266,-8.472369,-2.570610,-5.886602,2.342911,-9.371834,1.217862,4.540082,-6.091042,-0.612875,2.870523,-8.013232,4.774277,-0.615912,8.771759,7.511690,-9.789812,1.986641,1.324039,-2.997389,9.184576,-8.184486,-7.139028,6.027904,9.383231,4.472439,6.512486,6.425507,-3.178015,7.430805,3.921191,-4.734151,-0.597868,5.261373,0.187224,-2.171880,-5.743011,4.851689,-0.667365,4.027077,-4.375715,0.715523,-0.587850,-6.224338,-4.118996,-8.805339,-1.357021,5.067102,7.892837,9.073562,2.178900,0.286984,-1.714439,-9.116814,6.793298,-6.796947,6.604200,7.890735,-1.199921,-8.517957,8.692255,1.356702,3.802251,-9.253462,1.776635,-3.889631,5.218361,-1.049976,-6.003860,4.602143,-6.250772,-4.683650,5.456962,4.965452,3.479537,-2.958133,2.731867,9.090060,-3.609312,7.945318,6.621323,-9.204997,6.065647,-6.525073,-8.108899,6.718386,9.796671,-0.916872,-0.128310,4.967160,2.021975,-1.180777,6.891462,7.250645,-5.055197,0.587095,-9.952837,-5.706364,-7.155683,-6.407774,-6.459383,3.879172,2.455363,-0.117892,9.286876,5.273600,8.095982,7.610714,2.452176,1.366975,5.321570,7.108982,-4.797721,5.613166,-1.531150,3.523140,-0.656214,2.017395,-5.789142,0.035003,1.548593,-6.586306,-7.505631,4.817592,6.165598,4.392917,3.426336,-9.388813,6.842953,-1.790301,0.619215,-0.322205,-3.112982,3.829349,-8.803904,-4.985858,-3.615387,-1.214617,9.680088,-8.913037,-9.483184,0.128599,0.416009,-0.889074,-0.495052,-5.783216,-3.754018,3.717880,-4.501514,-4.895707,4.624642,-8.910948,7.242351,-2.591129,-5.739494,2.316129,8.526897,-4.199701,7.844570,4.019930,9.558676,4.036185,-2.646040,-2.491667,-1.753383,4.010535,-6.850373,7.652215,7.601013,-3.359586,-5.223077,-0.922729,-6.522412,-6.250652,1.176232,8.699044,-6.422011,8.594892,6.223928,7.354408,-8.022050,1.754385,5.629123,-8.918718,8.069816,-0.409450,8.954926,5.970006,-3.927433,9.529828,9.843107,-2.424739,0.553753,-7.777303,-7.999782,-4.986890,7.248123,2.327764,-3.068679,3.515692,-5.046114,-0.162048,-7.098617,6.850377,6.590576,4.567374,-7.063379,-6.050809,4.879355,-9.793935,0.410036,-9.166611,2.603155,2.708902,7.062377,7.678765,-2.515830,2.403834,0.185185,0.960111,1.691074,4.218091,7.483192,-7.006923,-2.045537,-6.793480,1.605041,-1.328174,-7.791517,1.688062,-3.804036,0.949076,-2.781655,-9.353509,0.660624,-7.347115,-4.361046,-0.451994,-7.160223,-1.319374,-4.500510,-4.952707,6.855837,-9.697262,-7.781605,2.685746,-2.632506,7.433342,-4.197246,-1.240950,-2.876210,-4.447640,-9.568968,-9.712525,1.617876,0.176908,1.482162,-1.031561,1.174938,-8.647754,-0.233725,-3.101186,-4.209124,9.322279,9.264066,-8.262976,-7.632535,-9.611625,-3.634850,0.182695,4.111299,2.545143,-8.875407,6.152803,-5.687791,7.299624,-7.683735,8.550266,-6.326384,6.334699,-0.286432,0.463366,-8.216792,7.316939,-6.934399,0.233408,4.296621,-8.649861,-2.937184,0.747388,4.453283,5.812377,4.208188,-7.316794,5.806761,7.329093,8.095517,-3.105554,0.685625,-7.367999,5.948175,1.622611,-3.915273,-1.754118,-8.782686,7.531820,8.211234,0.123887,6.778012,-0.100128,4.049577,-6.411326,-0.234243,-8.701797,-6.217945,7.597288,-7.521619,5.224530,-5.625327,6.917322,3.575617,-8.663478,9.749397,5.871479,6.222017,6.096788,-4.612464,4.182877,6.202818,-6.023595,1.013424,9.886608,-0.611660,-5.337723,-9.936730,1.175686,4.736266,-9.184650,2.734782,1.810501,1.622259,7.146635,7.397829,-3.388813,8.503686,-6.840797,-2.677766,-4.546552,-1.431860,1.581167,2.497539,7.993484,-8.277780,2.341855,2.304433,-3.921289,-5.084446,-4.029253,0.815523,-6.040873,9.386913,4.300553,-8.741595,5.768207,-2.499730,4.336934,7.228887,-0.493159,9.412437,-2.378308,6.181966,0.556836,-8.568609,9.669855,9.268799,-2.403336,-9.836357,-8.760260,-2.729975,-8.924864,6.743646,-3.776154,-9.062247,-2.429978,-9.491103,-9.854170,-0.843227,1.219663,-2.689503,-9.515630,-0.248506,-5.549961,-2.136183,6.442317,-4.057300,2.674868,-8.474467,7.721237,4.479132,-1.675087,-8.176366,9.873238,-7.657054,2.176886,4.810125,-0.323004,7.296415,-3.119835,-0.499995,-0.784378,8.295396,-8.277406,0.744401,-1.436704,7.605374,-2.794166,-1.270494,-8.704469,6.175522,6.444616,5.870283,-3.309365,-0.800193,-8.515226,8.442219,-6.470328,1.782776,-4.587043,-5.975408,4.837812,2.789822,2.526731,1.597258,-2.892790,3.855246,4.948120,-0.407579,3.122402,-6.377941,9.841546,-8.654379,8.491851,-2.128400,-5.157530,-3.910903,-9.122098,-5.208547,0.134391,-5.558338,-3.540526,9.352120,-0.342918,5.014788,0.286982,-0.387149,3.573673,-9.196628,-7.454259,-4.035623,3.455751,-0.177007,-8.022289,3.777267,-6.229058,-2.520932,6.026081,-3.236088,1.961575,-6.126590,9.912355,5.525372,5.883884,9.081451,-0.682811,6.206079,7.432249,8.683446,-6.202498,4.201625,-9.399534,4.749960,-0.298179,-0.411705,2.868574,-9.601614,4.167976,-0.762863,3.485895,-8.162544,5.702096,2.180069,4.370047,5.938979,4.995327,-1.637288,-9.932572,7.565367,7.686526,-2.345183,-7.630620,0.443585,-6.406993,5.418312,-6.998170,6.589114,8.906001,-6.866768,6.478731,-5.916109,-5.803383,8.069476,-8.801211,0.772181,-3.910453,-9.843011,-3.013931,-6.874071,5.871040,-5.211677,5.349603,-3.864950,-6.143472,8.105300,-7.208622,-4.975505,-8.579871,8.066569,3.822010,-7.039017,-9.193383,-3.641085,-4.550716,4.714660,-9.609166,3.126036,8.913894,-9.867339,-9.039127,7.554650,4.492874,-7.699383,6.490710,-5.127693,-9.306575,-7.115157,-2.735345,-3.676063,0.791360,-1.400478,8.289598,6.918888,9.164357,0.127445,0.196011,-5.348591,-9.398871,-7.279821,-6.693323,-8.724501,9.635682,2.513620,-4.743494,8.540309,8.400083,4.410635,7.420013,8.765443,3.298650,7.144724,-7.263616,2.138398,-6.606202,-5.207967,1.861176,0.069317,-8.336204,-3.406047,-5.647256,-4.556903,0.417258,5.463444,1.217594,-8.165408,0.829771,9.700135,3.797420,-4.912929,7.676592,6.575198,-1.004510,4.886351,0.385942,5.401652,8.908260,-5.220877,1.030836,-9.137307,-7.843350,5.890607,-1.370376,8.290814,-9.256281,0.565033,6.991240,-3.732650,8.603995,-5.570802,2.346222,8.125024,1.598618,8.738270,5.190240,7.881564,-9.787895,9.024617,-8.718062,6.069978,-4.078280,-6.206958,7.057818,7.286089,-4.632672,7.318258,4.692881,2.308638,-2.552048,-7.411649,-1.825746,-6.396932,-6.652211,8.799100,-5.556791,0.340413,9.668897,-3.715678,-9.248510,8.601588,6.074591,-6.773532,0.603231,-3.571381,2.945749,4.225516,-0.566386,-9.688649,4.181911,4.018976,-2.373476,5.024377,-0.021874,-6.979996,5.766272,-2.341779,0.509276,-9.593247,-5.815849,-5.282742,6.154849,3.458159,2.608987,-1.749849,0.782275,1.339728,0.796109,8.781448,-2.925733,-0.613632,5.837359,8.706676,-2.619362,-2.483198,-7.894785,-2.373392,-0.489635,4.942674,3.490850,8.647151,-5.080440,5.545633,3.184975,7.645331,-0.364992,1.042025,-0.699668,-1.837981,-5.837498,0.848067,-8.060393,-8.689149,7.946575,-8.442380,-6.979090,8.953397,-1.009198,-0.823036,4.102347,-6.097781,9.257764,-3.458940,-6.981647,-8.483971,8.762187,2.263663,8.079521,-1.037604,1.514139,-6.509420,-5.747444,-0.064725,-8.588004,-0.205575,4.272053,0.820809,5.224361,-7.463833,7.626058,-6.904496,0.154006,-2.840285,-2.418683,8.340919,2.318610,0.288986,-0.937147,4.512061,-5.770303,-6.759716,-6.460644,-5.433278,0.646462,2.405810,-7.054524,7.247034,9.101224,-5.202542,0.817481,7.530339,2.455437,-7.164175,4.655046,-1.650347,-8.880806,3.945148,1.968510,-2.843345,-0.053163,5.109723,9.342275,-9.362158,-2.562911,-1.525511,4.676873,-3.992661,-3.520027,-1.986484,-2.513287,9.766238,8.987455,0.176243,1.875689,-4.390491,7.515872,-7.472033,-4.657929,3.643706,4.186310,-7.606263,-5.541407,-6.415883,-1.368824,-7.506173,7.702315,8.936934,-5.097809,5.170980,-6.650605,9.275035], dtype = "float64")#candidate|6720|(2464,)|const|float64
call_6719 = func_111_call(relay.reshape(const_6720.astype('float64'), [16, 11, 14]))
call_6721 = func_111_call(relay.reshape(const_6720.astype('float64'), [16, 11, 14]))
uop_6724 = relay.log10(const_6720.astype('float32')) # shape=(2464,)
func_4489_call = mod.get_global_var('func_4489')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_6731 = func_4489_call()
call_6732 = func_4489_call()
var_6734 = relay.var("var_6734", dtype = "float32", shape = (2464,))#candidate|6734|(2464,)|var|float32
bop_6735 = relay.bitwise_xor(uop_6724.astype('uint64'), relay.reshape(var_6734.astype('uint64'), relay.shape_of(uop_6724))) # shape=(2464,)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6749 = relay.TupleGetItem(func_6151_call(), 0)
call_6750 = relay.TupleGetItem(func_6152_call(), 0)
output = relay.Tuple([call_6699,call_6719,call_6731,bop_6735,call_6749,])
output2 = relay.Tuple([call_6700,call_6721,call_6732,bop_6735,call_6750,])
func_6755 = relay.Function([var_6734,], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6756 = relay.var("var_6756", dtype = "float32", shape = (2464,))#candidate|6756|(2464,)|var|float32
func_6755_call = mutated_mod.get_global_var('func_6755')
call_6757 = func_6755_call(var_6756)
output = call_6757
func_6758 = relay.Function([var_6756], output)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6767 = relay.var("var_6767", dtype = "int32", shape = (1, 11, 11))#candidate|6767|(1, 11, 11)|var|int32
var_6768 = relay.var("var_6768", dtype = "int32", shape = (9, 11, 11))#candidate|6768|(9, 11, 11)|var|int32
bop_6769 = relay.add(var_6767.astype('int32'), var_6768.astype('int32')) # shape=(9, 11, 11)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_6775 = func_3704_call()
call_6776 = func_3704_call()
var_6779 = relay.var("var_6779", dtype = "int32", shape = (11, 11, 11))#candidate|6779|(11, 11, 11)|var|int32
bop_6780 = relay.logical_and(var_6767.astype('bool'), var_6779.astype('bool')) # shape=(11, 11, 11)
bop_6790 = relay.mod(bop_6769.astype('float32'), relay.reshape(var_6768.astype('float32'), relay.shape_of(bop_6769))) # shape=(9, 11, 11)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
var_6804 = relay.var("var_6804", dtype = "float64", shape = (88, 28))#candidate|6804|(88, 28)|var|float64
call_6803 = func_111_call(relay.reshape(var_6804.astype('float64'), [16, 11, 14]))
call_6805 = func_111_call(relay.reshape(var_6804.astype('float64'), [16, 11, 14]))
output = relay.Tuple([call_6775,bop_6780,bop_6790,call_6803,var_6804,])
output2 = relay.Tuple([call_6776,bop_6780,bop_6790,call_6805,var_6804,])
func_6806 = relay.Function([var_6767,var_6768,var_6779,var_6804,], output)
mod['func_6806'] = func_6806
mod = relay.transform.InferType()(mod)
var_6807 = relay.var("var_6807", dtype = "int32", shape = (1, 11, 11))#candidate|6807|(1, 11, 11)|var|int32
var_6808 = relay.var("var_6808", dtype = "int32", shape = (9, 11, 11))#candidate|6808|(9, 11, 11)|var|int32
var_6809 = relay.var("var_6809", dtype = "int32", shape = (11, 11, 11))#candidate|6809|(11, 11, 11)|var|int32
var_6810 = relay.var("var_6810", dtype = "float64", shape = (88, 28))#candidate|6810|(88, 28)|var|float64
output = func_6806(var_6807,var_6808,var_6809,var_6810,)
func_6811 = relay.Function([var_6807,var_6808,var_6809,var_6810,], output)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6829 = relay.const([[[0.728378,-3.123461,-0.096398,-5.302882,-8.540843,4.002469,-9.688694,3.413251,-7.073443,-2.344884]],[[-8.449961,-5.967777,8.791521,5.250351,-0.126822,-9.645055,-1.822948,0.779750,2.107221,8.946156]],[[1.057688,-8.703207,-3.642693,-6.994549,9.934619,-3.293663,-2.930455,-0.119351,-9.763416,6.896050]],[[-2.484635,-7.315017,-6.600266,0.139301,7.721198,5.676880,7.332282,9.986776,-5.420128,-0.172269]],[[-9.172859,2.911684,3.219770,9.599116,0.166125,-3.133883,-4.435483,-6.160596,3.312924,5.579886]]], dtype = "float64")#candidate|6829|(5, 1, 10)|const|float64
uop_6830 = relay.cosh(const_6829.astype('float64')) # shape=(5, 1, 10)
func_6538_call = mod.get_global_var('func_6538')
func_6540_call = mutated_mod.get_global_var('func_6540')
call_6836 = relay.TupleGetItem(func_6538_call(), 1)
call_6837 = relay.TupleGetItem(func_6540_call(), 1)
output = relay.Tuple([uop_6830,call_6836,])
output2 = relay.Tuple([uop_6830,call_6837,])
func_6844 = relay.Function([], output)
mod['func_6844'] = func_6844
mod = relay.transform.InferType()(mod)
mutated_mod['func_6844'] = func_6844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6844_call = mutated_mod.get_global_var('func_6844')
call_6845 = func_6844_call()
output = call_6845
func_6846 = relay.Function([], output)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6856 = relay.var("var_6856", dtype = "uint16", shape = ())#candidate|6856|()|var|uint16
var_6857 = relay.var("var_6857", dtype = "uint16", shape = (12, 11, 12))#candidate|6857|(12, 11, 12)|var|uint16
bop_6858 = relay.less_equal(var_6856.astype('bool'), var_6857.astype('bool')) # shape=(12, 11, 12)
func_6476_call = mod.get_global_var('func_6476')
func_6478_call = mutated_mod.get_global_var('func_6478')
call_6866 = relay.TupleGetItem(func_6476_call(relay.reshape(var_6856.astype('bool'), [])), 0)
call_6867 = relay.TupleGetItem(func_6478_call(relay.reshape(var_6856.astype('bool'), [])), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1975_call = mutated_mod.get_global_var('func_1975')
var_6874 = relay.var("var_6874", dtype = "float64", shape = (1890,))#candidate|6874|(1890,)|var|float64
const_6875 = relay.const([[-7,-8,-1],[3,-2,-2],[7,-4,10],[6,-4,-9],[-2,7,-6],[-7,-5,7],[-5,-5,5],[8,1,3],[-3,-5,1],[10,-4,9]], dtype = "int8")#candidate|6875|(10, 3)|const|int8
call_6873 = relay.TupleGetItem(func_1970_call(relay.reshape(var_6874.astype('float64'), [15, 9, 14]), relay.reshape(var_6874.astype('float64'), [15, 9, 14]), relay.reshape(const_6875.astype('int8'), [30,]), ), 4)
call_6876 = relay.TupleGetItem(func_1975_call(relay.reshape(var_6874.astype('float64'), [15, 9, 14]), relay.reshape(var_6874.astype('float64'), [15, 9, 14]), relay.reshape(const_6875.astype('int8'), [30,]), ), 4)
output = relay.Tuple([bop_6858,call_6866,call_6873,var_6874,const_6875,])
output2 = relay.Tuple([bop_6858,call_6867,call_6876,var_6874,const_6875,])
func_6882 = relay.Function([var_6856,var_6857,var_6874,], output)
mod['func_6882'] = func_6882
mod = relay.transform.InferType()(mod)
var_6883 = relay.var("var_6883", dtype = "uint16", shape = ())#candidate|6883|()|var|uint16
var_6884 = relay.var("var_6884", dtype = "uint16", shape = (12, 11, 12))#candidate|6884|(12, 11, 12)|var|uint16
var_6885 = relay.var("var_6885", dtype = "float64", shape = (1890,))#candidate|6885|(1890,)|var|float64
output = func_6882(var_6883,var_6884,var_6885,)
func_6886 = relay.Function([var_6883,var_6884,var_6885,], output)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4839_call = mutated_mod.get_global_var('func_4839')
call_6928 = relay.TupleGetItem(func_4837_call(), 3)
call_6929 = relay.TupleGetItem(func_4839_call(), 3)
func_4153_call = mod.get_global_var('func_4153')
func_4158_call = mutated_mod.get_global_var('func_4158')
var_6953 = relay.var("var_6953", dtype = "uint16", shape = (2100,))#candidate|6953|(2100,)|var|uint16
var_6954 = relay.var("var_6954", dtype = "float64", shape = (2464,))#candidate|6954|(2464,)|var|float64
call_6952 = relay.TupleGetItem(func_4153_call(relay.reshape(var_6953.astype('uint16'), [10, 14, 15]), relay.reshape(var_6953.astype('uint16'), [10, 14, 15]), relay.reshape(var_6954.astype('float64'), [2464,]), ), 1)
call_6955 = relay.TupleGetItem(func_4158_call(relay.reshape(var_6953.astype('uint16'), [10, 14, 15]), relay.reshape(var_6953.astype('uint16'), [10, 14, 15]), relay.reshape(var_6954.astype('float64'), [2464,]), ), 1)
output = relay.Tuple([call_6928,call_6952,var_6953,var_6954,])
output2 = relay.Tuple([call_6929,call_6955,var_6953,var_6954,])
func_6961 = relay.Function([var_6953,var_6954,], output)
mod['func_6961'] = func_6961
mod = relay.transform.InferType()(mod)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6961_call = mutated_mod.get_global_var('func_6961')
var_6963 = relay.var("var_6963", dtype = "uint16", shape = (2100,))#candidate|6963|(2100,)|var|uint16
var_6964 = relay.var("var_6964", dtype = "float64", shape = (2464,))#candidate|6964|(2464,)|var|float64
call_6962 = func_6961_call(var_6963,var_6964,)
output = call_6962
func_6965 = relay.Function([var_6963,var_6964,], output)
mutated_mod['func_6965'] = func_6965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6975 = relay.var("var_6975", dtype = "float32", shape = (15, 15, 2))#candidate|6975|(15, 15, 2)|var|float32
uop_6976 = relay.erf(var_6975.astype('float32')) # shape=(15, 15, 2)
func_3520_call = mod.get_global_var('func_3520')
func_3524_call = mutated_mod.get_global_var('func_3524')
var_6993 = relay.var("var_6993", dtype = "float32", shape = (169, 15))#candidate|6993|(169, 15)|var|float32
var_6994 = relay.var("var_6994", dtype = "float64", shape = (1183,))#candidate|6994|(1183,)|var|float64
call_6992 = relay.TupleGetItem(func_3520_call(relay.reshape(var_6993.astype('float32'), [13, 15, 13]), relay.reshape(var_6994.astype('float64'), [1183,]), ), 3)
call_6995 = relay.TupleGetItem(func_3524_call(relay.reshape(var_6993.astype('float32'), [13, 15, 13]), relay.reshape(var_6994.astype('float64'), [1183,]), ), 3)
output = relay.Tuple([uop_6976,call_6992,var_6993,var_6994,])
output2 = relay.Tuple([uop_6976,call_6995,var_6993,var_6994,])
func_7022 = relay.Function([var_6975,var_6993,var_6994,], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mutated_mod.get_global_var('func_7022')
var_7024 = relay.var("var_7024", dtype = "float32", shape = (15, 15, 2))#candidate|7024|(15, 15, 2)|var|float32
var_7025 = relay.var("var_7025", dtype = "float32", shape = (169, 15))#candidate|7025|(169, 15)|var|float32
var_7026 = relay.var("var_7026", dtype = "float64", shape = (1183,))#candidate|7026|(1183,)|var|float64
call_7023 = func_7022_call(var_7024,var_7025,var_7026,)
output = call_7023
func_7027 = relay.Function([var_7024,var_7025,var_7026,], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mod.get_global_var('func_6627')
func_6629_call = mutated_mod.get_global_var('func_6629')
call_7051 = relay.TupleGetItem(func_6627_call(), 0)
call_7052 = relay.TupleGetItem(func_6629_call(), 0)
uop_7061 = relay.cosh(call_7051.astype('float32')) # shape=(13, 15, 13)
uop_7063 = relay.cosh(call_7052.astype('float32')) # shape=(13, 15, 13)
output = uop_7061
output2 = uop_7063
func_7065 = relay.Function([], output)
mod['func_7065'] = func_7065
mod = relay.transform.InferType()(mod)
mutated_mod['func_7065'] = func_7065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7065_call = mutated_mod.get_global_var('func_7065')
call_7066 = func_7065_call()
output = call_7066
func_7067 = relay.Function([], output)
mutated_mod['func_7067'] = func_7067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3136_call = mod.get_global_var('func_3136')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_7095 = relay.TupleGetItem(func_3136_call(), 0)
call_7096 = relay.TupleGetItem(func_3138_call(), 0)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
const_7123 = relay.const([[5.562725,-1.967652,0.701038,4.551007,-7.977301,-2.945828],[5.487128,5.831754,3.098884,-2.955648,8.560788,-4.228508],[8.393568,9.316954,9.128203,5.405268,-8.802681,7.642471],[3.108004,-5.257941,6.635339,-5.032626,-4.961829,4.110130],[0.609488,-3.467415,4.139042,-2.181870,-9.991564,-7.538362],[4.328429,-5.380192,6.936611,3.833129,7.935858,-6.262948],[-7.616173,5.639046,-2.729452,-1.178269,-2.017217,-7.704152],[2.304323,-2.862313,-3.469964,2.597049,-4.879759,9.626849],[1.322739,-2.158336,4.722700,3.463833,5.334020,-6.109616],[7.042124,9.154109,4.221044,3.624448,-5.096754,-1.125668],[-1.463420,3.728720,-6.551215,-1.330433,4.828321,-0.763991],[4.679314,2.514291,-2.264690,3.718063,-9.618436,8.672602],[-0.392559,7.567332,8.847035,-1.345849,5.440099,-1.645791],[-7.326284,-6.889439,-4.661206,-8.365412,-9.336855,-3.856312],[-6.758872,3.699397,9.855712,-6.305112,5.852494,-4.105903],[-6.580348,5.969053,-3.413980,0.600316,-0.585656,5.969157],[-8.230853,0.450059,0.047868,6.691483,2.032048,-9.702454],[6.879531,-0.346324,-9.723711,2.892142,6.063037,0.696281],[7.722330,4.513387,-4.169576,-7.482210,-3.336322,5.821428],[5.120460,7.223866,4.939706,3.854221,9.031823,-7.038684],[0.466904,-8.711058,-5.509127,-0.090046,-0.406924,3.510600],[-0.449764,6.286090,4.319235,-3.201007,9.124778,4.854869],[-8.091953,3.571075,6.512375,9.377870,-4.618878,7.195444],[2.267016,-9.662718,5.184325,-5.710388,1.173715,6.027975],[6.846882,7.490839,6.699960,3.711620,-7.464344,6.401782],[-6.527276,-5.384656,-6.644654,7.478437,6.512689,0.654170],[-2.703185,7.821792,0.705582,-6.622754,-3.269645,8.136965],[3.137639,9.193289,-9.049181,3.170177,-8.737300,1.761782],[3.803468,-8.870933,-2.312028,-1.590914,-8.776233,-9.053277],[-0.209760,-5.404777,-7.169398,-8.181906,-8.573972,6.284894],[4.573620,-9.603770,-6.422674,-0.124865,-8.583688,1.659130],[9.283485,4.837352,0.024625,2.255438,2.388906,-4.489395],[-5.070003,5.171154,4.412325,5.342084,2.858920,-4.334085],[0.689205,0.126027,9.972233,-9.322572,-3.721748,-0.267563],[9.478487,6.399984,9.700975,-4.417248,7.080789,6.897696],[4.538042,7.277400,-8.282204,-1.818423,-7.268083,5.430451],[-8.578454,-8.100225,-4.669771,-7.432573,6.519202,-1.659455],[-8.248236,-5.488737,-0.982447,-1.910944,-8.091635,-0.082415],[2.335684,-3.217721,-0.421136,2.631704,9.404996,-9.185933],[3.050353,5.798490,-1.242154,6.122751,-9.075938,-8.655428],[2.721582,-9.157550,-0.986893,-1.368537,-2.215113,-5.779044],[0.445950,4.749348,6.870732,-9.296136,3.089169,1.618663],[8.588361,-8.760492,-6.536444,-4.926756,1.082705,2.771234],[6.560426,0.905623,-0.866334,-5.311648,4.926512,-2.953753],[4.609612,4.254978,-7.943543,3.895003,-1.472764,-6.252984],[-5.747746,-9.210144,6.414010,-9.281739,-3.123975,-4.204894],[0.497676,-5.006046,0.985694,3.983288,7.923733,7.110412],[-9.346185,6.717371,-1.474096,2.543224,-1.558825,-9.567346],[-1.683401,-0.247104,-5.108821,6.466186,3.260740,-9.026775],[0.225452,-6.995909,5.250567,-4.811854,-0.079490,-9.256951],[7.211626,9.232199,4.254584,-3.600947,-4.238411,-2.370803],[1.132976,-0.903216,1.976227,5.381623,1.170271,1.016088],[8.101081,-8.420099,1.961296,-0.560650,-9.786935,-2.287047],[8.282747,3.367996,2.627870,-7.816425,-0.210669,-0.897188],[-8.768783,-5.821792,6.149708,-4.057005,4.836213,-4.457371],[9.991701,-2.445128,-0.468881,9.852293,2.936695,-3.118675],[3.673453,9.410485,6.945845,4.709785,-2.349544,3.496432],[-7.101249,-7.565076,-0.473743,-9.608050,-4.502683,-0.781471],[-2.493441,-6.726818,-2.783250,-0.569675,-8.749588,5.400085],[0.722294,2.202553,-4.537601,8.136560,-1.366064,3.063055],[-9.336368,-2.566380,-5.124016,-1.297024,-1.358156,-0.580403],[7.656169,-5.125592,-3.509586,9.853205,2.694086,6.741391],[-2.773570,-9.403838,6.209310,5.939965,6.784063,-8.971030],[-7.873270,-7.262260,0.103330,-8.524773,-6.517669,-6.029861],[-1.278911,-9.050175,-1.537334,-4.484847,0.741594,8.934476],[-7.075687,-9.012045,-5.633674,0.011039,5.838267,-6.140271],[-6.735940,8.211749,5.295093,5.007552,-5.763592,1.912937],[-1.266037,3.092595,-9.031044,-0.248807,8.240592,9.629736],[1.578236,6.053444,-0.306400,5.817808,-0.501003,6.832589],[6.168213,8.767981,8.467339,-9.510920,-2.167897,5.197197],[0.168694,9.067432,-5.744356,-7.235279,5.489168,4.324982],[7.779769,-5.650428,2.440626,-1.722785,4.507525,-5.353685],[-1.067417,-7.210723,-8.273353,-4.192876,8.803019,3.069581],[-9.745414,8.675610,3.485359,8.493490,0.911543,-7.804429],[-7.735628,4.652269,-2.358269,-4.105894,3.851991,-1.639901],[-4.398383,2.731182,-8.292413,0.612297,-3.610260,7.103259],[2.809423,0.283112,-7.400237,-1.579453,-3.751231,-1.344087],[9.541049,1.440056,3.937601,0.538626,-0.053863,7.671834],[2.633241,3.277882,1.764474,8.420279,-3.540436,-7.397396],[-1.845389,5.416482,-0.162253,4.800281,-7.173148,-9.760990],[-4.306522,7.021510,-5.682872,-7.404395,2.575169,-4.558222],[-3.841761,-0.381087,-9.838430,3.650619,9.211903,9.302163],[9.763696,8.791175,8.673665,8.574982,6.074167,0.777050],[-6.972698,5.839580,5.419115,-0.484088,4.321315,-6.698092],[3.454372,-9.630274,-2.531514,7.494008,9.925288,2.028883],[-8.323981,-9.774294,7.955692,-2.361590,6.691516,-2.167814],[2.360757,-4.712015,7.362029,-2.518961,9.214082,9.784960],[-6.140055,0.481514,6.108226,-2.065537,9.298660,-2.860966],[-4.169154,-2.583612,-5.452772,3.169559,-3.495473,3.199038],[-4.738097,-9.438623,-0.947780,-7.772631,-6.118182,-8.900959],[-7.825552,-1.469587,-5.340311,3.537126,2.744113,-6.890568],[-4.002193,6.705058,-9.676788,-1.544351,-3.951670,-8.344116],[-4.200934,2.080148,-6.546739,-9.046584,-1.133526,-1.065456],[4.249721,-5.846875,-7.089098,1.117196,-6.578046,7.229265],[2.102181,4.433486,-0.761070,-5.992771,-8.463797,-5.226258],[-2.126182,-3.100338,9.889833,6.316972,-1.986826,8.728399],[-3.742093,0.491666,7.285074,3.031729,-6.598780,-3.836808],[-5.913581,1.586362,-1.293962,2.515444,-9.979969,6.245959],[9.299217,1.843665,-7.192298,-3.497116,8.370900,4.284883],[-2.501448,5.360095,-1.871923,9.928776,-8.632562,0.149732],[-1.355329,2.804509,-5.223267,-5.888875,3.784583,6.232373],[-0.332797,4.326048,5.588984,-6.362530,5.394183,-6.625145],[1.226787,5.138175,-0.723154,-0.820403,7.941043,-1.832478],[1.161296,3.970107,-1.317456,-3.626343,-0.565969,-5.044916],[3.718252,7.359311,-5.211917,-0.722715,-8.243426,2.728248],[-2.123955,0.839562,-9.159438,-4.365223,8.317839,-3.510027],[-5.721738,-9.735347,-1.202177,0.579228,-3.068567,2.345415],[-2.617790,-9.340822,2.981490,-3.547750,-4.955291,9.019479],[2.922480,-1.808373,-1.285086,-5.865517,1.996491,8.276185],[5.866632,5.484317,-3.467430,-1.085704,-8.558275,1.418340],[-0.418177,-8.727301,6.303722,9.443070,4.823306,8.632485],[2.260118,-0.748909,0.661507,-8.382082,-6.467432,-9.408884],[-8.189736,-8.635447,6.321631,-7.686232,3.598543,-5.563468],[8.641085,6.991558,3.913689,-1.901757,-8.597277,-8.571158],[-1.028585,-9.048242,-0.456488,9.693548,0.673400,-8.881393],[7.518046,-5.493370,7.140527,-0.646026,4.846786,6.792262],[-3.781073,7.831184,-1.238127,-8.934509,-6.692389,-3.154864],[3.824031,-0.914440,2.999405,-5.034952,2.247273,4.380494],[6.836853,2.606880,7.467444,-2.209822,-3.313106,-5.955862],[8.687940,-7.741700,0.228668,-7.010088,-2.685259,7.016823],[3.506502,5.979987,-9.787766,3.675418,-7.298060,-0.382810],[3.484799,0.467538,-9.786587,3.960732,4.859866,-7.408216],[-5.792892,8.920984,1.559486,-9.317666,-5.092970,4.609214],[-2.466223,4.404291,-5.002546,-9.213859,-9.173346,7.117594],[7.000106,-1.991770,-3.924033,3.312883,0.259830,-7.873927],[0.239044,-9.226036,-7.722804,-5.462463,-1.226443,3.098413],[-2.131496,3.511912,9.490428,7.233071,9.948956,0.830125],[-4.288514,-7.054631,-6.977499,-8.778556,6.645265,0.660504],[5.575592,-6.124836,0.637058,-4.444518,0.671897,-9.501757],[-2.606924,3.789082,3.645572,-2.010849,6.895353,-0.771384],[2.271110,6.212390,3.413095,-2.935640,-1.904098,-1.608791],[-8.967801,8.336382,-1.273811,-3.291342,-1.080244,-7.426602],[3.432693,6.841777,3.236615,-8.606705,6.336531,9.134109],[-2.311528,1.180425,-8.509939,9.130147,-5.962055,-6.985232],[-4.306045,4.635909,-6.949737,4.747063,-8.655375,-3.466932],[-8.371834,-9.628714,-6.268884,-5.325624,8.180885,-7.733395],[2.014958,-9.512186,-8.123675,4.492008,-4.770276,0.938962],[-9.771136,-5.894639,-9.401243,5.985877,3.404136,-5.809491],[0.129300,-0.758303,-8.060566,1.449758,-4.556457,5.134758],[-2.640061,-6.819848,6.712045,-4.291506,-0.020311,7.357100],[4.565877,2.333649,-8.299528,6.627512,-8.763575,5.824273],[-8.903704,-4.763815,-3.366760,8.323262,-1.026315,2.909531],[-8.171429,-5.770177,-4.470348,9.538287,-5.678206,-7.082667],[-3.967307,-9.774243,-5.182217,6.117792,-6.315870,0.782761],[6.591519,-7.648242,-3.555295,8.417675,9.967838,9.772374],[3.759157,1.863264,3.581218,9.363765,5.521289,-6.360877],[4.457830,-3.313976,-8.637022,-6.302309,3.402422,7.774202],[0.270112,-0.977728,-7.576745,-5.506796,-5.683676,3.327847],[-6.227109,3.755803,3.753051,0.153686,1.620187,-4.871316],[3.607473,2.307187,9.280162,5.802360,6.773761,7.818516],[7.848617,-9.590164,-3.960114,-7.334726,-7.384288,-8.547120],[6.720490,-5.548916,-9.138493,-9.183835,5.246487,-7.448683],[2.167914,5.223952,7.345898,-2.571699,4.692667,-5.107108],[1.430620,-3.962034,-7.725293,3.318628,-7.857931,-8.777429],[-6.739773,-9.234218,-1.846933,9.750840,-6.154398,-7.657670],[0.248862,7.815835,9.665455,-1.545845,-9.698461,-8.979934],[-5.767344,-2.962851,4.577829,2.292653,-5.377615,-2.760702],[-8.706505,-1.947155,-0.929696,-2.587778,6.524964,-4.737451],[1.079627,5.672763,7.564931,-0.619935,5.050865,-2.085970],[0.095194,4.037834,-4.533197,-9.817675,4.492112,7.830984],[3.709059,8.208032,9.794950,-5.443064,3.654528,-2.333160],[3.728892,-7.273248,-9.571229,-9.298099,-0.530498,6.922800],[2.774644,4.256287,-3.215025,-2.149881,-9.512313,-0.686377],[-1.618280,-1.375439,2.112605,-8.053972,3.232646,7.460066],[-1.450377,0.964193,1.321434,4.375739,-1.365654,5.046047],[0.968247,-3.897508,-7.951128,-3.320783,4.057726,-6.971551],[2.112867,-9.021835,8.788333,-5.920338,4.007808,-0.756693],[-4.846409,9.224226,-3.618293,1.376005,-3.495951,2.967404],[6.701273,7.792544,-6.423544,3.215747,8.989719,-5.285566],[3.179432,-4.820360,-2.779558,-7.151889,-8.210316,9.874138],[-0.278327,-6.769818,-0.522184,9.184593,5.783339,9.377816],[-9.847335,-7.185620,-5.912901,-5.866762,5.052548,-9.769811],[2.150501,9.484949,-0.356865,-5.832254,4.397075,3.807984],[-2.045701,6.937935,-1.242565,8.223274,6.561933,-5.479319],[-6.722860,-9.886942,6.828459,8.154441,4.823795,-6.771724],[0.040740,-3.628283,2.081449,1.264421,7.420986,-3.600554],[5.800064,-1.775050,4.436151,-2.224545,-5.157967,7.553090],[9.673734,-8.029048,5.652610,-4.000652,-1.077552,-7.390095],[-6.934040,0.533999,-7.951712,0.099453,-2.081345,7.234522],[-8.439857,6.349029,-8.235708,-5.511796,-0.068570,-2.929499],[4.015675,-0.875640,4.274012,-2.660722,-9.535723,5.635016],[0.826956,-9.331107,6.278166,2.257152,9.507074,-6.632060],[5.589631,7.331011,0.524266,-6.368278,-4.646602,-8.699487],[5.319495,-8.076563,1.409128,-9.761043,-4.521551,-4.184418],[-5.662119,-9.171729,-8.781009,4.523648,7.546576,1.139658],[-6.100346,-3.935447,2.929418,1.834501,0.742794,-3.937861],[6.743135,1.405506,-5.404449,2.563462,3.559698,-5.834794],[-9.078524,7.788671,6.949653,0.299682,-1.669209,-3.244646],[-3.309612,-9.393079,4.990867,-8.382894,-7.240298,9.545446],[7.931420,4.545841,-1.346304,0.357231,-4.251023,-0.743619],[2.696583,2.274900,6.501181,4.852232,5.197292,9.130759],[9.748266,-2.785195,1.494598,-8.520610,-0.365504,9.613936],[8.410117,-1.807305,-5.646784,5.789304,-5.540872,6.789483],[6.602329,5.274927,2.329693,8.245015,0.093961,-0.931692],[3.522160,5.558679,-8.032018,-6.327857,7.316040,0.995726],[-4.303099,-8.753684,-9.896910,-5.288564,-7.465726,-4.699707],[3.673244,-0.885607,2.969740,4.418200,7.588894,8.802643],[-7.838335,-9.398287,-6.880499,0.102500,-9.297625,0.540196],[7.278255,-8.370402,3.048925,9.301166,6.951541,9.761480],[-6.516300,4.972582,-2.583553,-3.192039,1.786898,-2.492700],[-3.228294,-9.911683,1.517903,8.154871,0.964750,0.116947],[7.842589,5.255665,-3.884762,3.380550,-2.078042,6.379384],[7.012068,6.134059,-9.320430,-0.280843,4.800322,0.932422],[-0.410361,4.320735,5.580853,2.639187,-1.438376,5.531548],[8.285178,1.634063,0.044089,-8.567621,-5.474035,5.676855],[-1.470764,-3.945429,-9.645302,-2.855746,-8.391813,2.815028],[-5.534441,-7.793153,8.900620,-9.779503,2.002625,-9.861225],[-2.133099,1.231677,-9.076458,4.870573,4.356868,-6.060695],[0.777000,-2.137555,2.721426,0.186979,-4.307291,-4.824581],[8.163027,7.677187,-0.560987,-1.517216,-0.222575,-3.593546],[-3.015157,8.980564,1.933414,-8.990460,6.552676,-3.405257],[-3.060604,-0.872455,-7.679210,-4.478984,8.232824,-8.786451],[-5.757878,-5.480807,-8.036933,2.020074,-9.853996,-3.844507],[6.204066,6.780027,-7.151378,7.518756,6.239279,6.849075],[-5.774988,-6.430377,6.125712,3.849948,5.226464,3.718431],[-5.712386,-6.652220,8.408683,-6.133614,3.870963,0.978048],[-5.965593,-4.209474,3.147546,5.591786,-2.130148,8.048551],[-6.100839,0.915059,2.496000,9.384921,0.722246,-6.493577],[7.275171,0.082011,-0.632970,-0.329477,0.293857,2.337898],[-7.566316,-9.131640,-0.059423,5.097360,3.648967,-2.676239],[2.972478,-8.384031,1.581454,6.318835,-4.482088,-8.030521],[-6.843981,6.050268,0.658970,-7.355779,7.727456,-9.824585],[-7.421329,-7.986479,-0.909660,-3.576066,-1.212974,4.573936],[-2.462258,-3.951451,1.100010,9.497608,8.207146,-4.604108],[6.174689,6.342223,7.804043,-8.425845,8.795325,7.740419],[1.796535,3.547456,4.585807,-9.454613,4.325670,-2.565984],[8.772792,-7.098261,-7.911023,1.813692,3.554905,-6.961478],[7.434079,6.098249,8.566747,-9.887905,-6.533659,-3.202407],[-9.685123,7.240084,-1.173157,1.012949,-9.300108,-0.613008],[-6.490915,-7.615207,-9.309977,-3.066502,-5.140219,-6.294431],[9.634676,-3.216929,-5.101144,8.490711,0.535091,0.440837],[-4.013183,5.987841,-6.142088,9.511813,-5.652220,5.018884],[-6.308885,-3.768931,3.535706,-5.345545,5.789126,-9.579469],[8.423764,4.560535,0.842883,-6.219386,6.497587,-0.513671],[-3.414111,-9.055306,9.162552,4.814570,8.699892,-5.675968],[9.963451,0.492062,-4.100268,-1.123269,0.887150,-2.867754],[-4.808406,-5.459479,7.970402,-9.673408,-1.656080,-1.118927],[-5.755653,8.755967,1.899191,-4.809731,-0.802325,5.503299],[2.333372,1.577952,1.984771,5.362541,-4.851179,5.625211],[-4.783308,2.025914,-7.721386,8.666738,-7.118674,5.395825],[-6.167963,-1.153647,2.863047,7.936286,9.798127,-9.568885],[2.780466,3.804255,1.820281,5.461545,-8.012006,0.443211]], dtype = "float32")#candidate|7123|(242, 6)|const|float32
call_7122 = relay.TupleGetItem(func_2208_call(relay.reshape(const_7123.astype('float32'), [12, 11, 11])), 0)
call_7124 = relay.TupleGetItem(func_2210_call(relay.reshape(const_7123.astype('float32'), [12, 11, 11])), 0)
output = relay.Tuple([call_7095,call_7122,const_7123,])
output2 = relay.Tuple([call_7096,call_7124,const_7123,])
func_7153 = relay.Function([], output)
mod['func_7153'] = func_7153
mod = relay.transform.InferType()(mod)
output = func_7153()
func_7154 = relay.Function([], output)
mutated_mod['func_7154'] = func_7154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_7182 = relay.TupleGetItem(func_3820_call(), 0)
call_7183 = relay.TupleGetItem(func_3821_call(), 0)
uop_7184 = relay.sinh(call_7182.astype('float32')) # shape=(13, 15, 13)
uop_7186 = relay.sinh(call_7183.astype('float32')) # shape=(13, 15, 13)
output = uop_7184
output2 = uop_7186
func_7200 = relay.Function([], output)
mod['func_7200'] = func_7200
mod = relay.transform.InferType()(mod)
output = func_7200()
func_7201 = relay.Function([], output)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7219 = relay.var("var_7219", dtype = "uint32", shape = ())#candidate|7219|()|var|uint32
var_7220 = relay.var("var_7220", dtype = "uint32", shape = (11, 8, 1))#candidate|7220|(11, 8, 1)|var|uint32
bop_7221 = relay.minimum(var_7219.astype('uint32'), var_7220.astype('uint32')) # shape=(11, 8, 1)
bop_7232 = relay.bitwise_or(bop_7221.astype('uint64'), var_7219.astype('uint64')) # shape=(11, 8, 1)
output = bop_7232
output2 = bop_7232
func_7247 = relay.Function([var_7219,var_7220,], output)
mod['func_7247'] = func_7247
mod = relay.transform.InferType()(mod)
mutated_mod['func_7247'] = func_7247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7247_call = mutated_mod.get_global_var('func_7247')
var_7249 = relay.var("var_7249", dtype = "uint32", shape = ())#candidate|7249|()|var|uint32
var_7250 = relay.var("var_7250", dtype = "uint32", shape = (11, 8, 1))#candidate|7250|(11, 8, 1)|var|uint32
call_7248 = func_7247_call(var_7249,var_7250,)
output = call_7248
func_7251 = relay.Function([var_7249,var_7250,], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4616_call = mod.get_global_var('func_4616')
func_4617_call = mutated_mod.get_global_var('func_4617')
call_7331 = relay.TupleGetItem(func_4616_call(), 0)
call_7332 = relay.TupleGetItem(func_4617_call(), 0)
const_7346 = relay.constdtype = "float64")#candidate|7346|(13, 15, 13)|const|float64
bop_7347 = relay.greater(call_7331.astype('bool'), relay.reshape(const_7346.astype('bool'), relay.shape_of(call_7331))) # shape=(13, 15, 13)
bop_7350 = relay.greater(call_7332.astype('bool'), relay.reshape(const_7346.astype('bool'), relay.shape_of(call_7332))) # shape=(13, 15, 13)
func_6069_call = mod.get_global_var('func_6069')
func_6072_call = mutated_mod.get_global_var('func_6072')
var_7356 = relay.var("var_7356", dtype = "int64", shape = (30,))#candidate|7356|(30,)|var|int64
call_7355 = relay.TupleGetItem(func_6069_call(relay.reshape(var_7356.astype('int64'), [2, 3, 5])), 0)
call_7357 = relay.TupleGetItem(func_6072_call(relay.reshape(var_7356.astype('int64'), [2, 3, 5])), 0)
func_6305_call = mod.get_global_var('func_6305')
func_6312_call = mutated_mod.get_global_var('func_6312')
const_7368 = relay.const([6.278773,4.860628,0.973286,4.974731,6.079999,4.626927,6.560862,-9.393338,1.945505,-4.410187,0.328599,3.311794,-2.228225,-9.174180,0.358082,-3.089702,-3.713690,9.832873,-5.217729,2.851324,-7.235779,8.521739,7.376194,4.319463,5.640160,-3.494982,9.229662,9.579420,1.874665,2.776872,0.493630,2.573068,-7.959721,5.262985,-1.140747,-7.709785,5.108467,-0.709724,6.081134,4.668964,6.502774,-0.800720,3.169291,-1.476093,8.378818,2.712762,-8.065036,2.789908,-9.197224,8.186175,0.234907,9.979509,5.478117,5.519839,5.689554,8.790911,8.065118,8.072988,7.099451,2.161585,-4.153951,9.463735,-2.997368,3.989184,6.713763,2.457280,-0.665197,9.646564,-6.258756,6.195883,9.074798,1.834372,-7.138476,8.290965,-1.242146,-5.257746,-0.108265,8.049519,-0.069985,9.969663,9.235718,1.101719,9.007236,-5.714633,6.370626,7.151029,-2.264816,9.598209,5.168897,7.527144,-7.364447,-8.689063,6.991290,2.279280,-5.959806,-7.749899,9.164825,-5.212250,-8.540681,-0.369124,-3.084433,4.498527,-5.427819,9.251621,2.262473,-6.251632,-9.794131,-8.925246,-3.025711,-9.460950,-0.119228,4.828255,-2.044644,-4.821246,-1.916455,-4.767232,-3.518606,0.108590,7.922007,2.416337,6.989049,-7.904589,-4.765194,-4.381381,-8.365357,-4.369113,0.372865,-9.356053,2.930137,-4.895431,3.143958,-7.182232,-4.819276,6.721574,-0.348217,0.734440,-6.512698,4.613449,-3.184375,7.805590,-6.596354,-7.742234,1.887570,6.751020,7.577959,-6.106585,0.401081,1.842947,6.077719,9.629365,1.479639,4.284328,-1.154014,-5.511547,-5.505095,7.895321,5.989806,-4.030753,-4.677022,7.048891,-1.457035,-9.824024,-9.191912,1.394539,-0.217624,0.998259,8.919092,9.245838,-8.268378,9.018180,-8.826304,9.910235,-3.302260,-2.735713,-6.791438,-0.723648,-0.999606,-8.796089,-1.360520,-8.441025,-3.761704,-4.945722,-5.761992,4.781990,-8.045919,-5.770083,6.015149,-2.853459,3.982236,-4.154523,8.567918,-3.188257,5.337353,-3.396056,4.838780,9.454406,2.566731,3.168010,0.544483,-5.627059,2.175335,-3.472903,-9.127188,-7.191476,-1.608546,8.745595,-7.637352,5.801757,-8.160541,9.507711,-7.354015,3.975868,9.288811,7.753357,3.843964,-2.110599,-2.188278,5.156775,0.337193,6.389431,-5.019277,3.454514,-8.204183,7.223683,9.719263,-0.691609,8.736155,8.577970,9.907338,6.146726,-3.760179,6.364693,1.928660,0.807100,3.110656,-9.272747,-9.371919,-8.895891,-2.795752,6.863727,-1.968565,4.121443,-4.361671,-7.197393,4.646074,-3.416329,5.674214,9.418320,2.423421,-6.268001,9.071743,-5.523155,-3.855089,-7.092244,-0.069493,-0.907630,-2.176845,-8.533235,-1.088030,-3.701623,2.652165,1.760283,-7.424700,3.271189,-8.676595,-9.418572,-7.690757,4.948291,9.266613,7.804928,2.348933,7.159741,8.762181,-0.683734,-7.151383,3.737596,-6.561406,2.700115,3.450983,-7.049308,-1.993033,8.088929,3.347606,4.128651,8.473448,2.288899,8.826176,-4.654406], dtype = "float32")#candidate|7368|(288,)|const|float32
var_7369 = relay.var("var_7369", dtype = "uint16", shape = (2100,))#candidate|7369|(2100,)|var|uint16
const_7370 = relay.const(8, dtype = "uint16")#candidate|7370|()|const|uint16
var_7371 = relay.var("var_7371", dtype = "uint16", shape = (72,))#candidate|7371|(72,)|var|uint16
call_7367 = relay.TupleGetItem(func_6305_call(relay.reshape(bop_7347.astype('float64'), [2535,]), relay.reshape(const_7368.astype('float32'), [288,]), relay.reshape(var_7369.astype('uint16'), [2100,]), relay.reshape(const_7370.astype('uint16'), []), relay.reshape(var_7371.astype('uint16'), [72,]), ), 6)
call_7372 = relay.TupleGetItem(func_6312_call(relay.reshape(bop_7347.astype('float64'), [2535,]), relay.reshape(const_7368.astype('float32'), [288,]), relay.reshape(var_7369.astype('uint16'), [2100,]), relay.reshape(const_7370.astype('uint16'), []), relay.reshape(var_7371.astype('uint16'), [72,]), ), 6)
func_5732_call = mod.get_global_var('func_5732')
func_5735_call = mutated_mod.get_global_var('func_5735')
call_7373 = relay.TupleGetItem(func_5732_call(relay.reshape(bop_7347.astype('float64'), [13, 15, 13])), 0)
call_7374 = relay.TupleGetItem(func_5735_call(relay.reshape(bop_7347.astype('float64'), [13, 15, 13])), 0)
output = relay.Tuple([bop_7347,call_7355,var_7356,call_7367,const_7368,var_7369,const_7370,var_7371,call_7373,])
output2 = relay.Tuple([bop_7350,call_7357,var_7356,call_7372,const_7368,var_7369,const_7370,var_7371,call_7374,])
func_7381 = relay.Function([var_7356,var_7369,var_7371,], output)
mod['func_7381'] = func_7381
mod = relay.transform.InferType()(mod)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7381_call = mutated_mod.get_global_var('func_7381')
var_7383 = relay.var("var_7383", dtype = "int64", shape = (30,))#candidate|7383|(30,)|var|int64
var_7384 = relay.var("var_7384", dtype = "uint16", shape = (2100,))#candidate|7384|(2100,)|var|uint16
var_7385 = relay.var("var_7385", dtype = "uint16", shape = (72,))#candidate|7385|(72,)|var|uint16
call_7382 = func_7381_call(var_7383,var_7384,var_7385,)
output = call_7382
func_7386 = relay.Function([var_7383,var_7384,var_7385,], output)
mutated_mod['func_7386'] = func_7386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4176_call = mod.get_global_var('func_4176')
func_4178_call = mutated_mod.get_global_var('func_4178')
call_7425 = func_4176_call()
call_7426 = func_4176_call()
output = call_7425
output2 = call_7426
func_7427 = relay.Function([], output)
mod['func_7427'] = func_7427
mod = relay.transform.InferType()(mod)
output = func_7427()
func_7428 = relay.Function([], output)
mutated_mod['func_7428'] = func_7428
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7453 = relay.const([[[2,-7,8,-4,10,-8],[5,-3,-4,-5,3,-6],[-8,3,-4,9,-3,-9],[-10,-1,6,-1,9,-9],[-2,1,-4,-8,3,4]],[[10,-3,2,2,-6,10],[-2,-7,9,-4,-10,-8],[-2,-7,-10,2,6,3],[-9,8,7,9,1,2],[2,2,-3,-8,-9,-9]],[[8,10,-9,2,7,-5],[-7,6,10,9,6,-8],[4,-3,1,-5,-3,2],[8,-10,-3,-1,-9,10],[3,-5,-3,-7,7,1]],[[1,-8,2,6,6,-7],[1,9,3,3,-3,6],[-9,2,-2,-5,-10,7],[5,-2,-1,7,-4,-6],[-10,-2,5,-6,10,2]],[[2,5,10,-3,-7,-5],[-3,4,1,-4,-7,1],[-6,-8,-6,10,-10,1],[7,7,1,2,-4,-3],[6,-5,8,9,-4,2]],[[-9,-1,7,9,8,-8],[5,4,8,-4,9,-9],[7,10,-7,3,-7,3],[6,8,7,4,-9,1],[10,-2,-9,3,-1,9]],[[-7,1,7,-10,7,9],[-5,6,-3,-1,-4,-9],[6,-9,5,4,-10,-8],[1,2,-7,2,1,-7],[-4,-7,-3,-5,8,-7]],[[-4,7,-10,-1,-4,-8],[3,4,-7,10,1,-4],[-2,5,-3,-5,5,-10],[-8,5,5,6,5,-2],[2,8,7,-10,-10,-3]],[[7,-9,9,-7,-2,2],[8,-3,-7,-7,-7,4],[4,-7,9,7,-5,10],[8,4,2,5,-3,2],[5,10,-2,-8,-10,-3]],[[2,-7,-8,4,6,6],[-5,7,3,-9,-7,-2],[7,7,4,6,-2,6],[10,6,7,4,-4,1],[8,-6,1,8,-8,5]],[[7,-10,4,6,6,-2],[3,7,4,-3,-10,-1],[-6,8,4,-8,7,-7],[-5,-7,-7,6,-4,7],[2,2,10,-2,-10,10]],[[6,-6,-7,-5,8,-5],[-10,4,7,2,3,1],[7,2,6,3,2,-6],[-2,1,-3,-4,-9,-9],[-2,-6,-6,10,10,1]],[[4,7,-3,4,4,-5],[4,-9,8,9,-10,-6],[-2,8,-6,8,-4,7],[10,3,9,-10,-9,-5],[-9,-8,-9,-5,-9,-5]],[[-5,9,9,-7,7,4],[1,-6,7,7,8,-6],[10,-10,-8,5,7,3],[10,-9,-1,1,-9,2],[2,3,-5,-9,-2,-3]],[[3,4,-4,7,8,-10],[-9,10,-10,3,2,-4],[-6,-3,1,9,-7,-5],[1,-4,-8,-7,-7,-6],[-1,-1,-6,1,7,10]],[[-1,-3,3,9,9,-2],[-8,-5,-10,-4,-9,-4],[-9,7,-1,3,6,-10],[5,5,-3,-3,8,5],[-1,8,5,5,1,9]]], dtype = "int64")#candidate|7453|(16, 5, 6)|const|int64
var_7454 = relay.var("var_7454", dtype = "int64", shape = (16, 5, 6))#candidate|7454|(16, 5, 6)|var|int64
bop_7455 = relay.minimum(const_7453.astype('int64'), relay.reshape(var_7454.astype('int64'), relay.shape_of(const_7453))) # shape=(16, 5, 6)
func_6643_call = mod.get_global_var('func_6643')
func_6645_call = mutated_mod.get_global_var('func_6645')
call_7466 = func_6643_call()
call_7467 = func_6643_call()
output = relay.Tuple([bop_7455,call_7466,])
output2 = relay.Tuple([bop_7455,call_7467,])
func_7472 = relay.Function([var_7454,], output)
mod['func_7472'] = func_7472
mod = relay.transform.InferType()(mod)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7473 = relay.var("var_7473", dtype = "int64", shape = (16, 5, 6))#candidate|7473|(16, 5, 6)|var|int64
func_7472_call = mutated_mod.get_global_var('func_7472')
call_7474 = func_7472_call(var_7473)
output = call_7474
func_7475 = relay.Function([var_7473], output)
mutated_mod['func_7475'] = func_7475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6091_call = mod.get_global_var('func_6091')
func_6093_call = mutated_mod.get_global_var('func_6093')
call_7676 = func_6091_call()
call_7677 = func_6091_call()
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_7693 = relay.TupleGetItem(func_6372_call(), 2)
call_7694 = relay.TupleGetItem(func_6374_call(), 2)
func_6476_call = mod.get_global_var('func_6476')
func_6478_call = mutated_mod.get_global_var('func_6478')
var_7704 = relay.var("var_7704", dtype = "bool", shape = ())#candidate|7704|()|var|bool
call_7703 = relay.TupleGetItem(func_6476_call(relay.reshape(var_7704.astype('bool'), [])), 1)
call_7705 = relay.TupleGetItem(func_6478_call(relay.reshape(var_7704.astype('bool'), [])), 1)
output = relay.Tuple([call_7676,call_7693,call_7703,var_7704,])
output2 = relay.Tuple([call_7677,call_7694,call_7705,var_7704,])
func_7707 = relay.Function([var_7704,], output)
mod['func_7707'] = func_7707
mod = relay.transform.InferType()(mod)
mutated_mod['func_7707'] = func_7707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7708 = relay.var("var_7708", dtype = "bool", shape = ())#candidate|7708|()|var|bool
func_7707_call = mutated_mod.get_global_var('func_7707')
call_7709 = func_7707_call(var_7708)
output = call_7709
func_7710 = relay.Function([var_7708], output)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_7728 = func_5881_call()
call_7729 = func_5881_call()
func_4233_call = mod.get_global_var('func_4233')
func_4235_call = mutated_mod.get_global_var('func_4235')
call_7733 = relay.TupleGetItem(func_4233_call(relay.reshape(call_7728.astype('bool'), [13, 15, 13])), 0)
call_7734 = relay.TupleGetItem(func_4235_call(relay.reshape(call_7728.astype('bool'), [13, 15, 13])), 0)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_7735 = func_5881_call()
call_7736 = func_5881_call()
uop_7737 = relay.cos(call_7735.astype('float32')) # shape=(13, 15, 13)
uop_7739 = relay.cos(call_7736.astype('float32')) # shape=(13, 15, 13)
output = relay.Tuple([call_7728,call_7733,uop_7737,])
output2 = relay.Tuple([call_7729,call_7734,uop_7739,])
func_7741 = relay.Function([], output)
mod['func_7741'] = func_7741
mod = relay.transform.InferType()(mod)
mutated_mod['func_7741'] = func_7741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7741_call = mutated_mod.get_global_var('func_7741')
call_7742 = func_7741_call()
output = call_7742
func_7743 = relay.Function([], output)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mod.get_global_var('func_4610')
func_4612_call = mutated_mod.get_global_var('func_4612')
call_7830 = func_4610_call()
call_7831 = func_4610_call()
func_6627_call = mod.get_global_var('func_6627')
func_6629_call = mutated_mod.get_global_var('func_6629')
call_7833 = relay.TupleGetItem(func_6627_call(), 1)
call_7834 = relay.TupleGetItem(func_6629_call(), 1)
output = relay.Tuple([call_7830,call_7833,])
output2 = relay.Tuple([call_7831,call_7834,])
func_7841 = relay.Function([], output)
mod['func_7841'] = func_7841
mod = relay.transform.InferType()(mod)
mutated_mod['func_7841'] = func_7841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7841_call = mutated_mod.get_global_var('func_7841')
call_7842 = func_7841_call()
output = call_7842
func_7843 = relay.Function([], output)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_7874 = relay.TupleGetItem(func_3353_call(), 0)
call_7875 = relay.TupleGetItem(func_3354_call(), 0)
func_6022_call = mod.get_global_var('func_6022')
func_6025_call = mutated_mod.get_global_var('func_6025')
const_7879 = relay.const([-8,2,-5,5,2,1,-4,-5,1,2,6,-7,2,-9,6,9,-10,8,-9,-3,9,-6,4,-4,9,-5,4,5,10,1,1,-8,4,6,-10,-6,-6,4,4,-7,5,-1,5,-7,9,1,-1,-2,-4,8,-1,5,-9,-7,6,-7,7,-2,-5,7,8,-5,-6,3,7,-6,-8,-6,-7,-1,7,7,-7,6,9,-5,3,5,-6,9,-2,4,3,8,-2,-4,8,-3,-2,4,-6,8,8,9,4,9,-3,7,-2,-8,5,-3,5,5,-9,-9,-9,-4,-10,10,3,1,4,-3,-4,-3,5,1,6,-9,8,-9,5,-3,10,-9,5,-8,8,9,4,-3,10,1,2,10,-8,-7,4,-7,3,7,8,1,7,-1,2,10,-8,7,-2,1,5,4,8,-4,-1,-3,6,-6,3,-6,1,-10,-8,10,3,-2,9,-10,9,-10,-6,-9,6,-7,-3,8,8,3,-5,8,6,6,9,-6,9,9,8,8,-7,7,-6,4,-2,-2,3,5,-1,9,-7,8,-1,-1,-9,5,2,6,8,3,-10,-9,4,-4,-6,-7,-8,-9,4,-7,7,-8,5,-8,-5,-5,4,10,7,-7,7,-6,-6,1,2,-2,-2,-9,-4,10,-6,6,8,-1,8,-7,-9,9,7,7,9,-10,10,10,6,7,4,5,-7,-8,-4,1,8,-1,1,-6,-7,-5,-8,5,4,8,-3,-3,-9,7,-4,9,10,8,-7,-6,-1,-3,6,2,10,-10,-3,7,-2,7,5,-1,-5,-6,3,7,3,-2,-2,8,4,-8,1,-1,8,-2,-4,-7,1,-1,7,8,-2,6,-5,-7,-2,-8,-8,7,-8,10,9,-3,3,5,-4,8,5,9,10,-1,-8,-7,-9,-4,-3,-9,2,-5,7,-2,4,6,-6,9,10,-10,8,-7,-10,-2,-7,-7,4,-3,1,2,7,-5,3,-1,-4,3,6,7,-3,1,1,-9,10,-7,-9,-6,-5,1,5,-2,3,-8,-7,9,5,2,-9,-2,2,8,6,-8,-7,10,-3,10,8,-8,-7,7,-8,8,9,-4,9,4,10,-10,-3,8,3,-5,-9,7,10,8,2,-5,7,-4,3,-6,2,-9,-4,-4,-6,9,-9,-3,-10,-7,6,5,-3,-4,9,-9,-3,7,-5,6,9,9,10,9,3,-4,9,-4,8,-9,7,-7,6,8,6,-7,9,-3,7,1,-9,1,-4,-2,-5,9,-9,-2,10,-10,-6,-1,4,4,-7,3,9,6,1,6,-9,9,1,6,-3,-8,-3,4,7,9,2,-2,8,-4,7,8,-5,5,10,7,-8,-2,8,-8,-1,-8,1,-6,9,-9,-10,-4,3,2,1,-7,-8,1,5,10,-8,-1,-10,9,6,8,6,2,-1,3,8,10,8,-4,3,-1,4,-2,-8,8,3,-2,9,-8,-2,2,-10,-6,6,-3,3,9,-7,-6,4,-1,-9,5,8,-8,-4,-10,5,-7,5,-9,6,-10,1,-8,-7,1,3,-3,9,1,4,-2,-7,-1,6,3,-7,5,-6,-4,-3,10,-3,4,6,7,-7,8,-7,6,-8,7,1,-5,4,-1,-6,-2,-6,1,2,-4,9,2,-3,-9,-9,-10], dtype = "uint16")#candidate|7879|(616,)|const|uint16
call_7878 = relay.TupleGetItem(func_6022_call(relay.reshape(const_7879.astype('uint16'), [616,])), 1)
call_7880 = relay.TupleGetItem(func_6025_call(relay.reshape(const_7879.astype('uint16'), [616,])), 1)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_7883 = func_7427_call()
call_7884 = func_7427_call()
output = relay.Tuple([call_7874,call_7878,const_7879,call_7883,])
output2 = relay.Tuple([call_7875,call_7880,const_7879,call_7884,])
func_7907 = relay.Function([], output)
mod['func_7907'] = func_7907
mod = relay.transform.InferType()(mod)
output = func_7907()
func_7908 = relay.Function([], output)
mutated_mod['func_7908'] = func_7908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7741_call = mod.get_global_var('func_7741')
func_7743_call = mutated_mod.get_global_var('func_7743')
call_7952 = relay.TupleGetItem(func_7741_call(), 1)
call_7953 = relay.TupleGetItem(func_7743_call(), 1)
uop_7994 = relay.sqrt(call_7952.astype('float32')) # shape=(13, 15, 13)
uop_7996 = relay.sqrt(call_7953.astype('float32')) # shape=(13, 15, 13)
func_4257_call = mod.get_global_var('func_4257')
func_4260_call = mutated_mod.get_global_var('func_4260')
var_8007 = relay.var("var_8007", dtype = "float64", shape = (1183, 1))#candidate|8007|(1183, 1)|var|float64
const_8008 = relay.const([8,2,-6,-2,8,3,6,-4,-8,3,-5,9,-5,-10,5], dtype = "int16")#candidate|8008|(15,)|const|int16
call_8006 = relay.TupleGetItem(func_4257_call(relay.reshape(var_8007.astype('float64'), [1, 1183]), relay.reshape(const_8008.astype('int16'), [15, 1]), ), 5)
call_8009 = relay.TupleGetItem(func_4260_call(relay.reshape(var_8007.astype('float64'), [1, 1183]), relay.reshape(const_8008.astype('int16'), [15, 1]), ), 5)
func_3117_call = mod.get_global_var('func_3117')
func_3121_call = mutated_mod.get_global_var('func_3121')
const_8036 = relay.const([6,-5,-1,-6,-6,7,-8,3,3,3,8,-9,-2,-3,8,9,2,-2,-6,-3,3,10,-7,7,9,-9,9,-5,-6,-5,10,10,-8,4,3,8,9,5,9,5,-1,6,-2,-3,9,3,-2,1,7,5,5,6,-1,10,-3,9,-9,6,-4,-10,-6,2,5,-9,-9,2,10,-7,-9,1,2,-9,-3,-2,3,1,4,9,-5,4,7,-7,6,-7,1,-8,-8,-3,2,-9,7,6,1,5,-6,-1,4,9,2,-4,4,5,1,-4,-3,-9,10,4,-3,-9,-7,-3,8,3,-7,-4,-3,4,5,8,-8,-8,2,-2,-2,-5,3,2,-1,-3,3,1,6,-9,-3,1,-4,2,3,-3,6,6,8,-1,2,-7,-3,3,4,-4,-1,-8,4,-2,-3,3,-5,-9,6,1,-5,-5,9,-10,3,9,1,-2,-7,-3,1,2,-5,-10,10,-9,2,-3,-3,3,1,4,7,-6,-10,7,-4,-7,9,-10,-9,-3,-2,-1,3,2,3,-3,-2,9,7,5,-4,-2,10,-3,8,1,4,6,-5,1,-6,10,-5,-2,-4,6,9,-2,-10,9,3,-8,1,6,4,-4,4,-10,5,-3,-1,9,-7,-1,6,-4,10,-7,8,7,-3,-4,-4,-7,-10,-10,-9,3,9,-2,-3,-5,-8,2,-6,-10,9,-5,10,-4,10,9,2,-5,5,-6,-4,9,-3,-10,1,5,5,7,-10,4,-4,1,-5,6,4,8,3,1,-2,5,2,7,2,1,-4,3,-9,5,1,-6,3,2,-3,4,-6,1,2,5,10,5,-2,2,-3,5,-8,8,5,1,-2,3,7,4,-2,1,-7,-5], dtype = "int8")#candidate|8036|(324,)|const|int8
call_8035 = relay.TupleGetItem(func_3117_call(relay.reshape(const_8036.astype('int8'), [6, 6, 9]), relay.reshape(const_8036.astype('int8'), [6, 6, 9]), ), 0)
call_8037 = relay.TupleGetItem(func_3121_call(relay.reshape(const_8036.astype('int8'), [6, 6, 9]), relay.reshape(const_8036.astype('int8'), [6, 6, 9]), ), 0)
output = relay.Tuple([uop_7994,call_8006,var_8007,const_8008,call_8035,const_8036,])
output2 = relay.Tuple([uop_7996,call_8009,var_8007,const_8008,call_8037,const_8036,])
func_8060 = relay.Function([var_8007,], output)
mod['func_8060'] = func_8060
mod = relay.transform.InferType()(mod)
mutated_mod['func_8060'] = func_8060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8061 = relay.var("var_8061", dtype = "float64", shape = (1183, 1))#candidate|8061|(1183, 1)|var|float64
func_8060_call = mutated_mod.get_global_var('func_8060')
call_8062 = func_8060_call(var_8061)
output = call_8062
func_8063 = relay.Function([var_8061], output)
mutated_mod['func_8063'] = func_8063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5682_call = mutated_mod.get_global_var('func_5682')
call_8108 = func_5681_call()
call_8109 = func_5681_call()
func_4257_call = mod.get_global_var('func_4257')
func_4260_call = mutated_mod.get_global_var('func_4260')
const_8122 = relay.const([0.257638,-3.891165,-5.667480,8.439735,-3.136268,0.077192,-5.178814,-9.029000,4.839519,5.100410,8.339613,9.738800,-1.628297,1.755335,3.357156,-5.869722,2.636443,6.780981,-8.364974,3.141346,-4.410711,-9.553915,6.001044,0.637770,8.914975,-6.111291,7.835485,1.187406,2.597602,3.114086,0.977253,1.057955,-2.872216,-3.250695,8.815405,-7.762549,-3.609945,4.003787,8.252043,-7.835886,9.197569,-1.120424,-7.565886,-9.866787,-6.344558,1.373758,4.948508,-1.960084,3.675556,1.384114,-0.894029,5.138633,-0.690912,3.253820,8.722814,5.046005,-7.636676,5.903913,3.087765,-4.637373,-4.348669,4.823994,-9.270600,6.632602,9.180416,-2.623502,-1.475335,-8.814553,-4.241033,8.333887,-1.617581,0.112865,-8.426257,5.751339,-7.115795,6.193171,9.266030,2.753927,-3.015493,-0.807623,3.696944,4.117389,-4.156399,-5.308550,8.008308,-2.045584,-5.031261,-3.256044,-8.552060,-6.252790,6.539361,8.549760,5.914120,-8.223437,-6.947527,4.786853,-5.883960,8.647193,-9.688988,9.827602,0.477716,6.842660,5.527975,-1.142466,-5.065848,7.943614,-5.411310,-0.377379,1.792690,9.198910,3.574010,4.982449,-3.568231,-5.122097,-7.515604,-6.788510,1.583549,-6.977302,-0.009335,8.335982,1.870534,-4.581831,5.353970,9.869808,-8.803937,-0.335668,8.479227,1.883011,8.125302,4.115017,1.973574,6.940858,7.248699,-5.646634,6.794162,-2.857538,-9.441211,-9.746486,-6.050995,-9.903345,3.352152,-2.334451,-9.945993,-0.042929,-5.573501,9.260326,8.842820,-3.251413,-8.914330,-3.145844,-2.983446,0.276029,-6.549001,9.081781,3.063582,5.759458,-9.222169,-7.269804,7.178079,-9.059992,-9.313910,2.789159,8.531088,-1.163275,-9.814991,3.667520,-2.469994,2.891067,-9.059511,2.207917,-0.394978,-8.086685,-6.695420,5.110714,5.542336,9.814512,-4.913931,-3.092379,8.154121,0.810466,9.199321,-9.396589,0.700144,-6.636421,-1.309372,-5.664709,-0.943960,-6.294964,8.135556,-7.789038,8.207324,-1.527441,0.968287,6.351733,5.103372,-3.464022,7.577395,-9.129901,5.715555,3.669014,-4.477155,-3.067954,-2.733078,-5.855056,6.846251,5.066101,-3.278574,-5.081672,-9.252782,-6.495119,-5.436834,-6.393439,-9.609415,1.962341,-0.098308,0.340583,-9.879746,3.206308,-8.768419,-2.776476,9.733190,6.114226,5.599606,1.269603,4.911671,2.346125,-9.166028,-3.620162,2.211442,-1.741998,-0.871414,-1.677534,-9.912667,3.264677,0.332933,-3.834756,8.540330,4.226404,0.494959,-1.291281,-3.635339,-8.241980,-4.403867,8.219920,-6.742894,4.751608,-6.138942,1.057874,1.662667,8.376409,-8.609021,2.398541,6.535787,-2.145381,3.151490,-3.398487,7.912790,7.497879,3.976256,9.726340,-2.460878,-5.695509,-1.827055,4.074711,-8.426146,3.844382,-4.042773,1.767880,0.939617,-9.748452,-0.611742,-9.396912,-1.178811,7.836645,2.886325,8.865207,4.867040,-2.930929,-1.693643,-9.765659,-1.418135,9.382038,-1.196556,3.656063,7.606331,9.659375,-3.650688,9.642071,2.680601,-9.756138,0.329885,-4.088318,1.736111,-7.597951,8.746430,-2.175227,-6.711000,-4.575394,-8.725015,-8.437799,-6.197748,-5.586419,-6.763405,2.842099,-0.863059,-5.535925,7.471487,4.212993,0.583441,-1.372846,-7.688493,-2.185359,4.300038,0.191944,-4.729196,0.910667,1.486794,9.504496,3.402130,1.717820,-4.957934,7.657842,9.877157,-0.450004,-9.840425,7.864377,-2.375811,-6.724958,-7.373745,3.426527,9.728472,4.625079,-0.889376,-3.185206,0.476987,-5.524695,3.728846,-2.596626,-3.651604,7.749014,9.443414,0.744881,3.205230,0.498298,0.231067,-3.230682,6.443698,-2.085314,0.097627,9.469042,-0.580069,-8.910828,7.846476,-8.662031,-6.436770,8.333962,-4.353444,2.183956,-3.214970,-1.673527,7.083703,-6.609845,-9.777126,9.472860,-3.508263,5.188152,-1.254723,-1.991132,-0.629092,6.556881,6.471381,-3.544828,3.361366,2.057573,3.949508,6.186602,-6.057256,8.982896,-7.852665,-7.580085,-8.582631,-9.076539,-1.395438,-0.110431,8.403768,8.117234,-0.468795,0.575208,2.516971,2.805210,-4.385277,2.326874,8.723223,5.845313,9.191877,-6.027770,4.069767,-5.568230,2.306784,-8.172169,-2.293166,1.773935,-3.894042,-3.633213,5.131054,-1.127915,4.466772,9.670556,-1.292728,-5.682889,-7.398718,4.956337,3.619687,1.931080,4.274741,-2.592232,8.548008,-4.254326,-4.467158,8.932216,0.812218,6.208524,-2.741582,8.831173,0.806763,-2.980063,-1.424945,-6.174095,-5.841056,-0.415597,1.348997,5.618685,6.356038,-7.703421,3.347599,7.484239,0.896746,7.323474,3.097415,0.757298,-2.422171,6.719101,4.592928,2.194792,4.912259,2.544441,-7.147829,-8.639654,4.332518,7.553434,-0.513199,5.418000,7.489161,2.304370,1.044863,4.062127,2.534130,-3.679593,-2.060530,-6.477742,6.180581,9.702738,-5.242599,2.930168,-7.258766,-2.328936,-9.340946,3.133326,-6.185970,-4.344067,5.533461,-8.849168,-5.890727,7.430690,-5.478551,7.050756,-6.784884,6.170370,-3.766271,-9.737462,1.542570,4.545225,-8.823496,5.231080,-3.988182,-1.829320,5.822062,-6.727985,7.843839,6.945151,0.676043,3.935871,3.584332,-2.982119,-4.646194,-0.445207,-5.594411,0.124469,-2.986692,2.447991,-7.833949,-1.353467,-5.619855,-3.572626,6.163491,3.363790,-9.193081,-7.427645,7.335220,4.718375,8.416500,9.496977,2.289163,-4.590364,0.966234,-6.617677,8.734406,-7.994817,1.288857,0.356528,-7.776956,0.180780,5.678176,-0.937287,0.687233,-3.121103,1.235405,-9.149012,-5.536576,3.771030,-7.504955,-6.961527,-2.414609,-3.244615,1.581900,-6.963977,-9.116706,-9.934809,5.472440,8.126228,-3.635932,2.871967,9.693377,-7.658729,-2.394971,-7.303315,-9.498537,-5.714790,4.115260,-0.214723,-6.069918,-7.125220,8.700424,2.699200,9.006098,5.645266,-3.941334,0.621297,-9.075458,-1.491697,5.221565,9.043928,7.511961,9.597705,-5.425871,9.675860,-5.074694,-1.629449,-2.214951,9.862575,-3.509654,7.640894,9.011359,-3.257796,-4.189669,0.171983,6.430969,6.563024,-1.557504,1.733384,6.424152,-4.022579,-2.439017,4.680486,-8.988877,-5.385070,6.556240,2.967438,8.796924,-5.523140,-9.469071,4.711493,-3.058230,-7.103598,2.837988,-7.233102,-7.152423,9.607263,5.512180,2.009101,4.365796,-2.726729,8.695038,4.254678,0.399222,3.158354,9.680420,-7.565660,2.220915,8.449008,-5.833985,7.907646,-3.246662,-6.950523,8.777310,7.553647,9.824218,4.084032,4.601032,5.367393,-6.083910,5.851472,-4.563885,-6.669986,-6.565208,-7.617856,2.753460,-4.113847,-1.222343,3.331160,-3.154787,-6.941729,-2.256667,7.482092,8.080785,-2.512286,8.336622,1.073618,7.117131,1.207745,5.466573,2.143949,-7.226842,-9.075811,-6.929801,-5.996737,-2.455499,-2.088003,3.296056,6.365127,2.284464,-8.790969,1.705311,-4.581842,0.816102,-6.057352,9.652962,2.651886,0.389720,5.943380,8.928737,4.187628,-3.427660,-8.855965,8.772199,-3.271371,-0.943789,4.685518,7.110051,-9.540236,7.858819,3.210281,-0.537779,-3.129452,5.237731,4.233232,-9.588968,-0.493262,8.119180,-1.896564,-3.072625,6.214296,6.336674,-0.298177,-9.873599,-4.054353,-1.061014,-0.310378,-2.953337,-5.905763,-5.701981,1.747408,-7.146716,-5.499486,-9.529903,-9.206951,2.552957,0.812030,-9.153682,3.787739,2.438027,3.795332,-5.308803,-1.466074,-9.847773,-3.382879,3.951434,9.338972,4.026456,8.518174,-5.623774,0.151662,2.969671,4.225197,-4.415356,-8.120093,-5.422189,6.898517,4.264009,0.759201,2.400712,0.916305,3.038546,-1.612956,-0.143221,6.026290,-1.245326,-1.836867,8.459834,3.516915,0.713487,6.581122,1.460786,-9.623463,9.156497,5.875619,0.563601,5.125103,3.639884,6.067203,0.607453,7.752653,3.240545,3.258466,5.938370,6.148353,-3.390024,-3.051621,2.796454,-9.825767,-5.681984,1.570019,-2.699427,4.367600,3.634441,0.789827,4.635068,-2.180414,9.861097,0.934181,-6.252297,4.378324,-0.807879,3.084440,-4.605172,-1.913636,1.153768,-0.363518,-3.881717,1.250725,-6.728336,-5.058587,9.234633,5.772452,-4.099170,3.582296,5.491982,5.863258,-5.485055,3.352898,-8.572354,-7.381989,-0.541453,-9.351635,-5.956656,-8.125507,-1.998162,-5.505669,6.532636,-9.470716,-5.091203,-2.548504,-2.042273,0.499665,-0.785135,1.761155,-3.804366,-0.246734,-4.304265,0.789345,3.284828,-5.550165,-3.072422,7.428039,-0.543511,9.439834,-6.701302,-5.704084,8.672477,3.902405,-3.364330,6.082533,-2.715063,3.978556,-0.114973,0.365226,-1.745796,2.555045,-2.845114,-9.501888,2.621741,-9.454151,-4.538371,-5.154740,-9.520894,5.797286,9.905274,-2.467149,7.899937,-3.235573,-5.473027,8.325371,5.169802,-4.692908,0.904764,-6.731276,-4.609453,-4.192722,9.456767,2.367392,2.061635,5.592285,6.676732,-4.344351,4.774612,-8.994967,5.122566,9.175691,-3.303755,-1.392455,-9.422258,-7.112486,5.305270,0.294736,-0.087227,8.438262,-0.868123,-9.122387,-5.446747,-2.387806,1.994988,8.077610,-0.003877,-5.765072,-6.126220,-0.528132,2.654533,-2.207633,-5.574344,-7.642847,-2.231229,-7.958957,-0.605503,-6.024456,8.947405,-7.255697,2.009265,3.776981,-4.470323,-9.043588,4.297847,-6.355550,-2.033919,9.173124,-4.732387,1.971402,1.077726,2.090607,-4.278253,-6.297316,-8.023909,-1.596211,4.980011,7.200357,6.303904,-8.677459,5.666432,-8.678532,9.815395,-7.069047,4.469205,-8.915426,2.156564,-6.278640,8.389771,1.843899,4.249655,8.555594,-2.670115,7.755657,5.703952,-2.868893,-6.852817,-2.325028,-6.218978,3.872939,-9.050886,8.677479,-5.464354,1.210166,-3.645912,2.951202,-3.403964,-7.627472,-8.306352,1.249478,-3.269051,-6.122657,-1.679213,-4.055438,0.394070,-3.038397,-5.174809,9.177726,0.498468,-8.979956,6.756071,9.399435,9.148250,-8.085778,6.305619,9.484986,8.173129,-0.135150,-3.217681,7.389193,6.411098,0.344098,6.473388,-0.618476,6.446170,-1.248349,-5.238606,-0.128778,-6.113325,9.972219,-7.297139,4.677321,-4.025339,0.776753,-7.149129,-7.655605,-8.232060,6.297812,-5.343360,-1.750457,3.321749,7.721563,3.595704,2.919260,-4.848351,5.312551,0.893288,1.051749,2.571315,-7.155619,6.715751,2.090357,-2.312064,0.387156,-1.556755,-4.971106,-6.158474,7.000714,2.860729,9.645123,-2.289536,5.309250,4.231361,6.445466,6.207952,9.157477,6.146281,7.040609,0.192293,-8.248115,-0.202369,8.504970,-3.507247,-1.867234,6.919590,-6.864258,2.035604,1.284443,-1.391830,9.042320,-6.001585,-8.074574,6.132098,1.608256,-3.296761,-5.183575,-1.406200,4.274540,-9.632817,5.116614,-0.058990,0.622744,9.072074,-5.217280,-0.878365,6.887419,-0.728967,-0.796672,5.416407,5.024576,3.803626,3.028781,4.426050,0.419725,-5.179087,-3.462722,-0.063798,-7.921338,-0.353208,9.344741,-5.305548,-4.390837,-3.025378,-3.830950,-5.412072,1.477761,3.489890,-4.463852,1.471985,0.692427,-1.620535,-8.360615,0.995145,-2.103753,-6.409686,-3.322759,-7.025704,0.961976,6.087362,7.229915,0.398322,-0.432760,2.231131,-8.960237,-9.385842,-7.834920,4.137380,9.952569,-4.964342,-5.858352,8.874869,4.945590,0.366532,-7.686258,0.196136,0.785344,-1.540839,5.458951,-3.241294,-6.473024,3.321868,3.282039,-3.588304,-2.429694,-4.708581,0.747623,3.824491,1.893209,6.279481,-8.365579,5.077976,-9.553161,2.937040,3.873258,8.148135,-2.387275,2.905070,1.884229,-9.649229,-5.571994,-9.706484,-0.397014,-6.551249,6.580155,4.362852,-4.790262,3.371439,-2.977519,8.522703,-4.605130,0.457102,1.173440,-7.154930,-8.799840,-4.756663,6.304039,-7.776166,3.961799,6.029123,6.838826,-3.321226,-9.670275,-3.759656,-6.986420,-3.962144,-3.912886,2.895433,-5.568839,-4.825950,-5.866885,1.604008,6.983311,9.517429,7.971158,1.274369,6.273721,-6.995053,0.282939,-4.054825,-2.084199,-6.758134,-0.793293,9.509182,6.916835,-7.560981,-6.966373,3.154766,9.110033,-1.171197,-7.269801,2.818238,4.841912,3.532132,-9.194924,-0.199074,-9.168905,2.258561,-3.680186,-8.605339,-7.658054,4.362784,-2.894731,9.411390,3.141443,-7.060622,0.891136,3.012224,-6.962027,-1.219920,-3.194663,1.865506,8.518022,-4.959576,2.719245,-1.636985,0.771571,8.632887,-5.115824,7.494080,-0.790138,3.889019,-5.546637,0.167756,5.360048,1.449878,-8.010079,0.348548], dtype = "float64")#candidate|8122|(1183,)|const|float64
var_8123 = relay.var("var_8123", dtype = "int16", shape = (15,))#candidate|8123|(15,)|var|int16
call_8121 = relay.TupleGetItem(func_4257_call(relay.reshape(const_8122.astype('float64'), [1, 1183]), relay.reshape(var_8123.astype('int16'), [15, 1]), ), 1)
call_8124 = relay.TupleGetItem(func_4260_call(relay.reshape(const_8122.astype('float64'), [1, 1183]), relay.reshape(var_8123.astype('int16'), [15, 1]), ), 1)
func_3353_call = mod.get_global_var('func_3353')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_8140 = relay.TupleGetItem(func_3353_call(), 0)
call_8141 = relay.TupleGetItem(func_3354_call(), 0)
func_5123_call = mod.get_global_var('func_5123')
func_5128_call = mutated_mod.get_global_var('func_5128')
const_8145 = relay.const([3,-3,-9,-4,6,-6,-4,-6,-10,4,8,-4,-8,3,2,-5,-5,5,-1,-6,-4,3,-1,-5,-9,-1,-5,-5,-9,-8,-8,5,3,7,6,4,8,-9,6,2,-3,10,5,10,8,4,-2,7,-8,1,2,5,1,-8,10,-10,-2,-10,8,10,9,-1,-4,6,5,-7,3,8,8,10,-8,10,3,-7,-1,8,-3,-8,-7,9,2,-10,8,8,4,3,-10,-1,4,-5,-7,2,4,-6,-6,5,-3,-2,5,-6,-8,10,-3,-3,9,1,-3,-7,-2,-9,10,-6,-1,3,-10,2,1,8,-4,-2,-10,-10,-3,-1,-10,5,4,-6,-4,10,9,4,5,3,-4,2,-7,9,9,-6,10,-10,5,-1,4,-2,5,-2,-9,-10,1,9,4,9,7,2,-7,4,-10,-2,6,9,2,-2,8,8,-5,9,-6,-5,-4,-2,1,6,9,-8,-1,-6,8,-4,1,-8,-8,8,-7,-6,-1,-3,-2,-6,6,8,10,-8,2,-5,-3,-9,-1,-4,-9,-1,-1,-3,-3,6,4,7,-7,-10,-7,2,-7,-3,-8,-9,1,7,4,3,-10,9,4,-6,8,-10,1,7,2,10,-10,5,9,-1,4,2,-4,6,4,-9,-7,9], dtype = "uint32")#candidate|8145|(242,)|const|uint32
var_8146 = relay.var("var_8146", dtype = "float64", shape = (1680,))#candidate|8146|(1680,)|var|float64
var_8147 = relay.var("var_8147", dtype = "int64", shape = (2112,))#candidate|8147|(2112,)|var|int64
call_8144 = relay.TupleGetItem(func_5123_call(relay.reshape(const_8145.astype('uint32'), [242,]), relay.reshape(var_8146.astype('float64'), [840, 2]), relay.reshape(var_8147.astype('int64'), [2112,]), relay.reshape(const_8122.astype('float64'), [1, 1183]), ), 4)
call_8148 = relay.TupleGetItem(func_5128_call(relay.reshape(const_8145.astype('uint32'), [242,]), relay.reshape(var_8146.astype('float64'), [840, 2]), relay.reshape(var_8147.astype('int64'), [2112,]), relay.reshape(const_8122.astype('float64'), [1, 1183]), ), 4)
output = relay.Tuple([call_8108,call_8121,const_8122,var_8123,call_8140,call_8144,const_8145,var_8146,var_8147,])
output2 = relay.Tuple([call_8109,call_8124,const_8122,var_8123,call_8141,call_8148,const_8145,var_8146,var_8147,])
func_8164 = relay.Function([var_8123,var_8146,var_8147,], output)
mod['func_8164'] = func_8164
mod = relay.transform.InferType()(mod)
var_8165 = relay.var("var_8165", dtype = "int16", shape = (15,))#candidate|8165|(15,)|var|int16
var_8166 = relay.var("var_8166", dtype = "float64", shape = (1680,))#candidate|8166|(1680,)|var|float64
var_8167 = relay.var("var_8167", dtype = "int64", shape = (2112,))#candidate|8167|(2112,)|var|int64
output = func_8164(var_8165,var_8166,var_8167,)
func_8168 = relay.Function([var_8165,var_8166,var_8167,], output)
mutated_mod['func_8168'] = func_8168
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8199 = relay.const([[[10,-4,-3,3,-8,2,-2,6,5,10,1,-3,-6,-3,4,4]],[[-1,5,7,-9,9,-6,-8,-6,2,-9,9,9,-6,-6,2,-6]],[[-6,5,7,10,-5,8,9,-6,-1,3,-8,-5,-7,-5,-1,-9]],[[2,-2,-10,-8,1,10,-9,10,-3,7,-5,6,-5,10,3,-3]],[[-3,-5,-9,10,6,-9,-6,4,2,-1,-6,-1,-7,7,10,5]],[[6,6,1,-5,-6,4,3,-3,1,-6,-10,-10,-7,5,6,1]],[[-9,7,-5,-9,-7,4,2,9,-3,2,1,10,-8,7,6,6]],[[-5,5,7,10,8,-6,-5,-4,9,2,8,1,-9,-2,4,-10]],[[2,10,1,3,-8,-2,3,1,-3,-5,-5,9,-3,-6,-8,8]],[[4,-7,-2,6,9,-10,5,-8,4,-1,8,-2,-2,9,-7,-10]],[[-7,-5,9,-8,1,-5,-1,5,4,4,-8,4,5,10,10,-2]],[[-8,7,-10,6,-3,6,-3,7,10,1,8,-10,7,-4,9,-6]],[[-4,-2,6,-4,10,2,4,1,3,-2,7,3,-1,3,-4,6]],[[-1,-2,8,-7,7,-4,-9,5,-6,2,-8,-9,3,-8,10,4]]], dtype = "uint64")#candidate|8199|(14, 1, 16)|const|uint64
var_8200 = relay.var("var_8200", dtype = "uint64", shape = (14, 10, 16))#candidate|8200|(14, 10, 16)|var|uint64
bop_8201 = relay.maximum(const_8199.astype('uint64'), var_8200.astype('uint64')) # shape=(14, 10, 16)
func_6538_call = mod.get_global_var('func_6538')
func_6540_call = mutated_mod.get_global_var('func_6540')
call_8232 = relay.TupleGetItem(func_6538_call(), 1)
call_8233 = relay.TupleGetItem(func_6540_call(), 1)
var_8234 = relay.var("var_8234", dtype = "float64", shape = (18, 6))#candidate|8234|(18, 6)|var|float64
bop_8235 = relay.power(call_8232.astype('float64'), relay.reshape(var_8234.astype('float64'), relay.shape_of(call_8232))) # shape=(18, 6)
bop_8238 = relay.power(call_8233.astype('float64'), relay.reshape(var_8234.astype('float64'), relay.shape_of(call_8233))) # shape=(18, 6)
func_5623_call = mod.get_global_var('func_5623')
func_5627_call = mutated_mod.get_global_var('func_5627')
const_8243 = relay.const(True, dtype = "bool")#candidate|8243|()|const|bool
const_8244 = relay.const([True,True], dtype = "bool")#candidate|8244|(2,)|const|bool
call_8242 = func_5623_call(relay.reshape(const_8243.astype('bool'), []), relay.reshape(const_8244.astype('bool'), [2, 1]), )
call_8245 = func_5623_call(relay.reshape(const_8243.astype('bool'), []), relay.reshape(const_8244.astype('bool'), [2, 1]), )
var_8248 = relay.var("var_8248", dtype = "float64", shape = (18, 6))#candidate|8248|(18, 6)|var|float64
bop_8249 = relay.not_equal(var_8234.astype('bool'), relay.reshape(var_8248.astype('bool'), relay.shape_of(var_8234))) # shape=(18, 6)
var_8253 = relay.var("var_8253", dtype = "float64", shape = (18, 6))#candidate|8253|(18, 6)|var|float64
bop_8254 = relay.add(bop_8235.astype('float64'), relay.reshape(var_8253.astype('float64'), relay.shape_of(bop_8235))) # shape=(18, 6)
bop_8257 = relay.add(bop_8238.astype('float64'), relay.reshape(var_8253.astype('float64'), relay.shape_of(bop_8238))) # shape=(18, 6)
output = relay.Tuple([bop_8201,call_8242,const_8243,const_8244,bop_8249,bop_8254,])
output2 = relay.Tuple([bop_8201,call_8245,const_8243,const_8244,bop_8249,bop_8257,])
func_8264 = relay.Function([var_8200,var_8234,var_8248,var_8253,], output)
mod['func_8264'] = func_8264
mod = relay.transform.InferType()(mod)
mutated_mod['func_8264'] = func_8264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8264_call = mutated_mod.get_global_var('func_8264')
var_8266 = relay.var("var_8266", dtype = "uint64", shape = (14, 10, 16))#candidate|8266|(14, 10, 16)|var|uint64
var_8267 = relay.var("var_8267", dtype = "float64", shape = (18, 6))#candidate|8267|(18, 6)|var|float64
var_8268 = relay.var("var_8268", dtype = "float64", shape = (18, 6))#candidate|8268|(18, 6)|var|float64
var_8269 = relay.var("var_8269", dtype = "float64", shape = (18, 6))#candidate|8269|(18, 6)|var|float64
call_8265 = func_8264_call(var_8266,var_8267,var_8268,var_8269,)
output = call_8265
func_8270 = relay.Function([var_8266,var_8267,var_8268,var_8269,], output)
mutated_mod['func_8270'] = func_8270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6602_call = mod.get_global_var('func_6602')
func_6603_call = mutated_mod.get_global_var('func_6603')
call_8277 = relay.TupleGetItem(func_6602_call(), 1)
call_8278 = relay.TupleGetItem(func_6603_call(), 1)
func_6022_call = mod.get_global_var('func_6022')
func_6025_call = mutated_mod.get_global_var('func_6025')
const_8307 = relay.const([-3,1,-5,10,-6,-4,-4,2,6,4,5,6,3,-1,1,-7,10,-6,4,4,1,-10,9,-6,-4,-3,-4,-2,-10,2,-10,8,6,-4,1,10,-7,9,-2,9,3,6,2,6,4,3,-8,-3,-6,5,-4,9,5,7,1,7,9,-3,3,3,1,3,-9,-4,-3,2,3,-9,9,10,-2,-8,-10,2,-2,3,10,-3,-10,4,5,1,7,-8,7,-10,5,-10,9,-8,-6,6,-5,-7,-5,10,-6,8,2,4,4,-8,2,-5,1,-3,4,-3,10,6,2,3,-9,-5,-7,-2,-3,-1,10,5,9,8,-9,2,2,3,6,-4,-7,7,8,-4,-2,5,10,5,9,-3,-6,-8,-5,-4,8,-5,7,-8,3,-5,8,-1,9,10,-1,8,7,8,8,-2,-2,-1,1,5,3,1,9,2,7,-7,4,-6,1,3,-7,-6,-4,-9,10,8,-3,7,-8,3,-10,4,6,-4,-5,8,6,1,3,-4,6,-6,-3,-5,3,-6,6,6,-1,1,-1,-8,-3,6,10,8,-4,-7,9,-5,7,3,3,-7,4,-10,7,2,6,-5,-8,4,-7,-6,-4,7,6,7,3,-6,4,-2,4,10,-1,-8,-5,-10,7,9,7,-3,9,-2,3,-9,-4,7,-6,7,9,-6,-10,-1,2,-8,-7,4,10,8,6,10,10,-7,4,2,9,-2,-6,-8,2,-9,-7,-4,-1,-10,-2,6,-8,6,6,7,-10,6,9,-6,2,-1,10,-3,10,9,-4,3,7,5,-1,-9,-3,-9,-3,-5,-2,-1,2,5,-9,-5,9,-6,9,-10,-6,-1,7,3,-5,-4,-5,-9,-1,10,-7,3,-2,4,2,2,-4,7,5,1,10,-6,10,-1,-10,-3,5,4,-6,-9,-2,-4,-5,10,-3,-1,6,-8,-3,-9,2,-9,-9,6,-1,2,7,-2,9,6,2,-4,3,7,3,-8,-10,-3,9,-4,4,6,6,-8,9,-8,1,1,6,-1,-6,3,5,-4,-5,7,-8,5,-2,-8,8,3,-10,3,-2,4,-3,-3,4,5,8,3,8,8,2,10,-2,9,-7,7,-9,5,-9,-2,-6,4,-2,9,-4,9,-7,-6,-2,-10,-9,8,9,2,10,10,-5,-1,3,7,1,3,-5,-6,6,-5,4,-5,-7,-10,2,-4,-6,4,-6,-9,4,-2,3,-7,-5,-5,8,-1,-8,-1,-1,-7,-1,-8,-1,4,9,6,6,-10,-8,10,-7,-10,-10,-7,-7,9,7,-6,2,-6,6,2,5,-2,1,10,1,-4,2,-3,6,-8,-9,1,-2,4,-9,9,2,-9,-3,10,-9,-6,-6,10,1,4,2,-3,10,-4,6,3,7,9,-10,-6,3,-8,1,2,-7,3,-2,4,4,1,3,5,7,-10,5,6,7,9,-5,1,-7,-9,-1,-1,3,2,-7,8,3,10,5,5,3,2,-7,8,-5,1,2,-10,5,2,1,5,-9,3,3,6,4,-4,8,4,-2,1,8,-10,-3,4,-2,9,4,-5,-10,4,8,-6,1,2,-5,-9,2,6,2,1,-9,-7,-2,9,-3,7,-3,8,3,9,-2,-10,8,2,-8,-5,-1,1], dtype = "uint16")#candidate|8307|(616,)|const|uint16
call_8306 = relay.TupleGetItem(func_6022_call(relay.reshape(const_8307.astype('uint16'), [616,])), 2)
call_8308 = relay.TupleGetItem(func_6025_call(relay.reshape(const_8307.astype('uint16'), [616,])), 2)
func_4610_call = mod.get_global_var('func_4610')
func_4612_call = mutated_mod.get_global_var('func_4612')
call_8314 = func_4610_call()
call_8315 = func_4610_call()
func_7907_call = mod.get_global_var('func_7907')
func_7908_call = mutated_mod.get_global_var('func_7908')
call_8316 = relay.TupleGetItem(func_7907_call(), 0)
call_8317 = relay.TupleGetItem(func_7908_call(), 0)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_8319 = func_3704_call()
call_8320 = func_3704_call()
var_8324 = relay.var("var_8324", dtype = "bool", shape = (13, 15, 13))#candidate|8324|(13, 15, 13)|var|bool
bop_8325 = relay.power(call_8316.astype('float64'), relay.reshape(var_8324.astype('float64'), relay.shape_of(call_8316))) # shape=(13, 15, 13)
bop_8328 = relay.power(call_8317.astype('float64'), relay.reshape(var_8324.astype('float64'), relay.shape_of(call_8317))) # shape=(13, 15, 13)
func_729_call = mod.get_global_var('func_729')
func_732_call = mutated_mod.get_global_var('func_732')
var_8338 = relay.var("var_8338", dtype = "float64", shape = (1600,))#candidate|8338|(1600,)|var|float64
var_8339 = relay.var("var_8339", dtype = "uint16", shape = ())#candidate|8339|()|var|uint16
call_8337 = relay.TupleGetItem(func_729_call(relay.reshape(var_8338.astype('float64'), [10, 10, 16]), relay.reshape(var_8339.astype('uint16'), []), ), 3)
call_8340 = relay.TupleGetItem(func_732_call(relay.reshape(var_8338.astype('float64'), [10, 10, 16]), relay.reshape(var_8339.astype('uint16'), []), ), 3)
output = relay.Tuple([call_8277,call_8306,const_8307,call_8314,call_8319,bop_8325,call_8337,var_8338,var_8339,])
output2 = relay.Tuple([call_8278,call_8308,const_8307,call_8315,call_8320,bop_8328,call_8340,var_8338,var_8339,])
func_8342 = relay.Function([var_8324,var_8338,var_8339,], output)
mod['func_8342'] = func_8342
mod = relay.transform.InferType()(mod)
mutated_mod['func_8342'] = func_8342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8342_call = mutated_mod.get_global_var('func_8342')
var_8344 = relay.var("var_8344", dtype = "bool", shape = (13, 15, 13))#candidate|8344|(13, 15, 13)|var|bool
var_8345 = relay.var("var_8345", dtype = "float64", shape = (1600,))#candidate|8345|(1600,)|var|float64
var_8346 = relay.var("var_8346", dtype = "uint16", shape = ())#candidate|8346|()|var|uint16
call_8343 = func_8342_call(var_8344,var_8345,var_8346,)
output = call_8343
func_8347 = relay.Function([var_8344,var_8345,var_8346,], output)
mutated_mod['func_8347'] = func_8347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8363 = relay.var("var_8363", dtype = "float32", shape = (14, 4, 7))#candidate|8363|(14, 4, 7)|var|float32
uop_8364 = relay.log2(var_8363.astype('float32')) # shape=(14, 4, 7)
output = relay.Tuple([uop_8364,])
output2 = relay.Tuple([uop_8364,])
func_8367 = relay.Function([var_8363,], output)
mod['func_8367'] = func_8367
mod = relay.transform.InferType()(mod)
mutated_mod['func_8367'] = func_8367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8368 = relay.var("var_8368", dtype = "float32", shape = (14, 4, 7))#candidate|8368|(14, 4, 7)|var|float32
func_8367_call = mutated_mod.get_global_var('func_8367')
call_8369 = func_8367_call(var_8368)
output = call_8369
func_8370 = relay.Function([var_8368], output)
mutated_mod['func_8370'] = func_8370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6643_call = mod.get_global_var('func_6643')
func_6645_call = mutated_mod.get_global_var('func_6645')
call_8394 = func_6643_call()
call_8395 = func_6643_call()
func_392_call = mod.get_global_var('func_392')
func_396_call = mutated_mod.get_global_var('func_396')
const_8497 = relay.const(1, dtype = "uint16")#candidate|8497|()|const|uint16
var_8498 = relay.var("var_8498", dtype = "uint16", shape = (72,))#candidate|8498|(72,)|var|uint16
call_8496 = func_392_call(relay.reshape(const_8497.astype('uint16'), []), relay.reshape(var_8498.astype('uint16'), [3, 4, 6]), )
call_8499 = func_392_call(relay.reshape(const_8497.astype('uint16'), []), relay.reshape(var_8498.astype('uint16'), [3, 4, 6]), )
output = relay.Tuple([call_8394,call_8496,const_8497,var_8498,])
output2 = relay.Tuple([call_8395,call_8499,const_8497,var_8498,])
func_8513 = relay.Function([var_8498,], output)
mod['func_8513'] = func_8513
mod = relay.transform.InferType()(mod)
mutated_mod['func_8513'] = func_8513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8514 = relay.var("var_8514", dtype = "uint16", shape = (72,))#candidate|8514|(72,)|var|uint16
func_8513_call = mutated_mod.get_global_var('func_8513')
call_8515 = func_8513_call(var_8514)
output = call_8515
func_8516 = relay.Function([var_8514], output)
mutated_mod['func_8516'] = func_8516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mod.get_global_var('func_7427')
func_7428_call = mutated_mod.get_global_var('func_7428')
call_8544 = func_7427_call()
call_8545 = func_7427_call()
output = relay.Tuple([call_8544,])
output2 = relay.Tuple([call_8545,])
func_8566 = relay.Function([], output)
mod['func_8566'] = func_8566
mod = relay.transform.InferType()(mod)
mutated_mod['func_8566'] = func_8566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8566_call = mutated_mod.get_global_var('func_8566')
call_8567 = func_8566_call()
output = call_8567
func_8568 = relay.Function([], output)
mutated_mod['func_8568'] = func_8568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8572 = relay.var("var_8572", dtype = "float64", shape = (13, 1, 8))#candidate|8572|(13, 1, 8)|var|float64
uop_8573 = relay.log(var_8572.astype('float64')) # shape=(13, 1, 8)
bop_8581 = relay.right_shift(uop_8573.astype('int8'), relay.reshape(var_8572.astype('int8'), relay.shape_of(uop_8573))) # shape=(13, 1, 8)
uop_8586 = relay.sinh(uop_8573.astype('float64')) # shape=(13, 1, 8)
output = relay.Tuple([bop_8581,uop_8586,])
output2 = relay.Tuple([bop_8581,uop_8586,])
F = relay.Function([var_8572,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8572,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

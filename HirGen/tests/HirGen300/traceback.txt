==========mod==========
#[version = "0.0.5"]
def @func_3434(%var_3407: Tensor[(6, 8, 7), float32]) -> (Tensor[(6, 8, 7), float32], Tensor[(2, 4, 6), int64], Tensor[(48), int64], Tensor[(840, 2), float64], Tensor[(132, 16), int64]) {
  %0 = cast(%var_3407, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(840, 2), float64] */, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %4 = cast(meta[relay.Constant][2] /* ty=Tensor[(132, 16), int64] */, dtype="int64") /* ty=Tensor[(132, 16), int64] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(840, 2), float64] */, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %6 = reshape(%1, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %7 = reshape(%2, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %8 = reshape(%3, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %9 = reshape(%4, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %10 = reshape(%5, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %11 = @func_2497(%6, %7, %8, %9, %10) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
  %12 = erf(%0) /* ty=Tensor[(6, 8, 7), float32] */;
  %13 = %11.0;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(48), int64] */, meta[relay.Constant][1] /* ty=Tensor[(840, 2), float64] */, meta[relay.Constant][2] /* ty=Tensor[(132, 16), int64] */)
}

def @func_7427() -> Tensor[(108), float64] {
  @func_4176() /* ty=Tensor[(108), float64] */
}

def @func_5400(%var_5357: Tensor[(15, 8, 7), uint16], %var_5369: Tensor[(72), uint16], %var_5380: Tensor[(504), float64], %var_5396: Tensor[(48), int64]) -> (Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(15, 8, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(504), float64], Tensor[(1890), float64], Tensor[(1680), uint16], Tensor[(48), int64], Tensor[(1680), float64], Tensor[(44, 48), int64]) {
  %14 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %15 = cast(%var_5369, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %16 = reshape(%14, newshape=[]) /* ty=uint16 */;
  %17 = reshape(%15, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %18 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %19 = cast(%var_5357, dtype="uint16") /* ty=Tensor[(15, 8, 7), uint16] */;
  %20 = bitwise_or(%18, %19) /* ty=Tensor[(15, 8, 7), uint16] */;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %22 = atan(%21) /* ty=Tensor[(15, 8, 7), float32] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %24 = cast(%var_5380, dtype="float64") /* ty=Tensor[(504), float64] */;
  %25 = cast(meta[relay.Constant][4] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %26 = reshape(%24, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float64] */;
  %27 = reshape(%25, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %28 = @func_2156(%26, %27) /* ty=(Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) */;
  %29 = cast(%var_5396, dtype="int64") /* ty=Tensor[(48), int64] */;
  %30 = cast(%var_5396, dtype="int64") /* ty=Tensor[(48), int64] */;
  %31 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %32 = cast(meta[relay.Constant][6] /* ty=Tensor[(44, 48), int64] */, dtype="int64") /* ty=Tensor[(44, 48), int64] */;
  %33 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %34 = reshape(%29, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %35 = reshape(%30, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %36 = reshape(%31, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %37 = reshape(%32, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %38 = reshape(%33, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %39 = @func_2497(%34, %35, %36, %37, %38) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
  %40 = @func_392(%16, %17) /* ty=Tensor[(3, 4, 6), bool] */;
  %41 = log2(%23) /* ty=Tensor[(15, 8, 7), float32] */;
  %42 = %28.1;
  %43 = %39.3;
  (%40, %var_5369, %41, %42, %var_5380, meta[relay.Constant][4] /* ty=Tensor[(1890), float64] */, %43, %var_5396, meta[relay.Constant][5] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][6] /* ty=Tensor[(44, 48), int64] */)
}

def @func_6091() -> Tensor[(13, 15, 13), float64] {
  %44 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %44.0
}

def @func_1063(%var_1037: Tensor[(12, 11, 16), int64], %var_1044: uint16, %var_1045: Tensor[(36, 2), uint16]) -> (Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) {
  %45 = cast(%var_1037, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
  %46 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 11, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 11, 16), int64] */, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %49 = cast(%var_1044, dtype="uint16") /* ty=uint16 */;
  %50 = cast(%var_1045, dtype="uint16") /* ty=Tensor[(36, 2), uint16] */;
  %51 = reshape(%49, newshape=[]) /* ty=uint16 */;
  %52 = reshape(%50, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %53 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 11, 16), int64] */, dtype="float32") /* ty=Tensor[(12, 11, 16), float32] */;
  %54 = less_equal(%47, %48) /* ty=Tensor[(12, 11, 16), bool] */;
  %55 = @func_392(%51, %52) /* ty=Tensor[(3, 4, 6), bool] */;
  %56 = atan(%53) /* ty=Tensor[(12, 11, 16), float32] */;
  (%54, %55, %var_1044, %var_1045, %56)
}

def @func_1823(%var_1685: Tensor[(4, 6, 7), bool], %var_1686: Tensor[(4, 6, 7), bool], %var_1704: Tensor[(30), int8], %var_1719: Tensor[(4, 6, 7), bool], %var_1771: Tensor[(108), float64], %var_1817: Tensor[(15), int16]) -> (Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) {
  %57 = cast(%var_1704, dtype="int8") /* ty=Tensor[(30), int8] */;
  %58 = reshape(%57, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %59 = cast(%var_1686, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %60 = shape_of(%var_1685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_1685, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = logical_and(%61, %62) /* ty=Tensor[(4, 6, 7), bool] */;
  %64 = cast(%var_1719, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = less_equal(%66, %67) /* ty=Tensor[(4, 6, 7), bool] */;
  %69 = cast(%68, dtype="uint16") /* ty=Tensor[(4, 6, 7), uint16] */;
  %70 = shape_of(%var_1686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%var_1686, dtype="uint16") /* ty=Tensor[(4, 6, 7), uint16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %73 = cast(%68, dtype="int32") /* ty=Tensor[(4, 6, 7), int32] */;
  %74 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%63, dtype="int32") /* ty=Tensor[(4, 6, 7), int32] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %77 = bitwise_xor(%75, %76) /* ty=Tensor[(4, 6, 7), int32] */;
  %78 = cast(%77, dtype="int64") /* ty=Tensor[(4, 6, 7), int64] */;
  %79 = shape_of(%var_1685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_1685, dtype="int64") /* ty=Tensor[(4, 6, 7), int64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %82 = maximum(%80, %81) /* ty=Tensor[(4, 6, 7), int64] */;
  %83 = cast(%63, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %87 = cast(%var_1771, dtype="float64") /* ty=Tensor[(108), float64] */;
  %88 = reshape(%87, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %89 = @func_420(%88) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %90 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 616), float64] */, dtype="float64") /* ty=Tensor[(4, 616), float64] */;
  %91 = reshape(%90, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %92 = cast(%var_1686, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  %93 = cast(%var_1771, dtype="float64") /* ty=Tensor[(108), float64] */;
  %94 = reshape(%93, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %95 = @func_420(%94) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 616), float64] */, dtype="float64") /* ty=Tensor[(4, 616), float64] */;
  %97 = reshape(%96, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %98 = cast(%63, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %99 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_1719, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = cast(%var_1817, dtype="int16") /* ty=Tensor[(15), int16] */;
  %103 = @func_1137(%58) /* ty=Tensor[(6, 5, 3), int8] */;
  %104 = cast(%103, dtype="int16") /* ty=Tensor[(6, 5, 3), int16] */;
  %105 = cast(meta[relay.Constant][9] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %106 = reshape(%102, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), int16] */;
  %107 = reshape(%104, newshape=[5, 3, 6]) /* ty=Tensor[(5, 3, 6), int16] */;
  %108 = reshape(%105, newshape=[24]) /* ty=Tensor[(24), uint8] */;
  %109 = @func_559(%106, %107, %108) /* ty=(Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) */;
  %110 = bitwise_and(%71, %72) /* ty=Tensor[(4, 6, 7), uint16] */;
  %111 = power(%85, %86) /* ty=Tensor[(4, 6, 7), float64] */;
  %112 = %89.0;
  %113 = @func_111(%91) /* ty=Tensor[(16, 11, 14), float64] */;
  %114 = acos(%92) /* ty=Tensor[(4, 6, 7), float32] */;
  %115 = %95.0;
  %116 = @func_111(%97) /* ty=Tensor[(16, 11, 14), float64] */;
  %117 = equal(%100, %101) /* ty=Tensor[(4, 6, 7), bool] */;
  %118 = %109.6;
  (%103, %var_1704, %110, %111, %112, %var_1771, %113, meta[relay.Constant][8] /* ty=Tensor[(4, 616), float64] */, %114, %115, %116, %117, %118, %var_1817, meta[relay.Constant][9] /* ty=Tensor[(24), uint8] */)
}

def @func_6882(%var_6856: uint16, %var_6857: Tensor[(12, 11, 12), uint16], %var_6874: Tensor[(1890), float64]) -> (Tensor[(12, 11, 12), bool], Tensor[(2, 1), bool], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(10, 3), int8]) {
  %119 = cast(%var_6856, dtype="bool") /* ty=bool */;
  %120 = cast(%var_6857, dtype="bool") /* ty=Tensor[(12, 11, 12), bool] */;
  %121 = cast(%var_6856, dtype="bool") /* ty=bool */;
  %122 = reshape(%121, newshape=[]) /* ty=bool */;
  %123 = @func_6476(%122) /* ty=(Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) */;
  %124 = cast(%var_6874, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %125 = cast(%var_6874, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 3), int8] */, dtype="int8") /* ty=Tensor[(10, 3), int8] */;
  %127 = reshape(%124, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %128 = reshape(%125, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %129 = reshape(%126, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %130 = @func_1970(%127, %128, %129) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %131 = less_equal(%119, %120) /* ty=Tensor[(12, 11, 12), bool] */;
  %132 = %123.0;
  %133 = %130.4;
  (%131, %132, %133, %var_6874, meta[relay.Constant][10] /* ty=Tensor[(10, 3), int8] */)
}

def @func_2251(%var_2229: Tensor[(14, 10, 12), float64], %var_2236: Tensor[(2112), int64]) -> (Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) {
  %134 = cast(%var_2229, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
  %135 = cast(%var_2236, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %136 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %137 = cast(meta[relay.Constant][12] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %138 = reshape(%135, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int64] */;
  %139 = reshape(%136, newshape=[]) /* ty=uint16 */;
  %140 = reshape(%137, newshape=[36, 2]) /* ty=Tensor[(36, 2), uint16] */;
  %141 = @func_1063(%138, %139, %140) /* ty=(Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) */;
  %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(800, 2), float64] */, dtype="float64") /* ty=Tensor[(800, 2), float64] */;
  %143 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %144 = reshape(%142, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
  %145 = reshape(%143, newshape=[]) /* ty=uint16 */;
  %146 = @func_729(%144, %145) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
  %147 = cast(%var_2229, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
  %148 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %149 = acos(%134) /* ty=Tensor[(14, 10, 12), float64] */;
  %150 = %141.4;
  %151 = %146.1;
  %152 = logical_xor(%147, %148) /* ty=Tensor[(14, 10, 12), uint16] */;
  (%149, %150, %var_2236, meta[relay.Constant][12] /* ty=Tensor[(72), uint16] */, %151, meta[relay.Constant][13] /* ty=Tensor[(800, 2), float64] */, %152)
}

def @func_5623(%var_5617: bool, %var_5618: Tensor[(2, 1), bool]) -> Tensor[(2, 1), bool] {
  %153 = cast(%var_5617, dtype="bool") /* ty=bool */;
  %154 = cast(%var_5618, dtype="bool") /* ty=Tensor[(2, 1), bool] */;
  logical_or(%153, %154) /* ty=Tensor[(2, 1), bool] */
}

def @func_6806(%var_6767: Tensor[(1, 11, 11), int32], %var_6768: Tensor[(9, 11, 11), int32], %var_6779: Tensor[(11, 11, 11), int32], %var_6804: Tensor[(88, 28), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(11, 11, 11), bool], Tensor[(9, 11, 11), float32], Tensor[(16, 11, 14), float64], Tensor[(88, 28), float64]) {
  %155 = cast(%var_6767, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
  %156 = cast(%var_6779, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %157 = cast(%var_6767, dtype="int32") /* ty=Tensor[(1, 11, 11), int32] */;
  %158 = cast(%var_6768, dtype="int32") /* ty=Tensor[(9, 11, 11), int32] */;
  %159 = add(%157, %158) /* ty=Tensor[(9, 11, 11), int32] */;
  %160 = cast(%var_6768, dtype="float32") /* ty=Tensor[(9, 11, 11), float32] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float32") /* ty=Tensor[(9, 11, 11), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %164 = cast(%var_6804, dtype="float64") /* ty=Tensor[(88, 28), float64] */;
  %165 = reshape(%164, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %166 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %167 = logical_and(%155, %156) /* ty=Tensor[(11, 11, 11), bool] */;
  %168 = mod(%162, %163) /* ty=Tensor[(9, 11, 11), float32] */;
  %169 = @func_111(%165) /* ty=Tensor[(16, 11, 14), float64] */;
  (%166, %167, %168, %169, %var_6804)
}

def @func_3117(%var_3095: Tensor[(6, 6, 9), int8], %var_3096: Tensor[(6, 6, 9), int8]) -> (Tensor[(6, 6, 9), int8],) {
  %170 = cast(%var_3096, dtype="int8") /* ty=Tensor[(6, 6, 9), int8] */;
  %171 = shape_of(%var_3095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%var_3095, dtype="int8") /* ty=Tensor[(6, 6, 9), int8] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %174 = maximum(%172, %173) /* ty=Tensor[(6, 6, 9), int8] */;
  (%174,)
}

def @func_8060(%var_8007: Tensor[(1183, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(15, 1), int16], Tensor[(1183, 1), float64], Tensor[(15), int16], Tensor[(6, 6, 9), int8], Tensor[(324), int8]) {
  %175 = @func_7741() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) */;
  %176 = %175.1;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %178 = cast(%var_8007, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %179 = cast(meta[relay.Constant][14] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %180 = reshape(%178, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %181 = reshape(%179, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %182 = @func_4257(%180, %181) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
  %183 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %184 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %185 = reshape(%183, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int8] */;
  %186 = reshape(%184, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int8] */;
  %187 = @func_3117(%185, %186) /* ty=(Tensor[(6, 6, 9), int8],) */;
  %188 = sqrt(%177) /* ty=Tensor[(13, 15, 13), float32] */;
  %189 = %182.5;
  %190 = %187.0;
  (%188, %189, %var_8007, meta[relay.Constant][14] /* ty=Tensor[(15), int16] */, %190, meta[relay.Constant][15] /* ty=Tensor[(324), int8] */)
}

def @func_4616() -> (Tensor[(13, 15, 13), float64],) {
  %191 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  (%191,)
}

def @func_1970(%var_1926: Tensor[(15, 9, 14), float64], %var_1927: Tensor[(15, 9, 14), float64], %var_1952: Tensor[(30), int8]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  %192 = cast(%var_1927, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %193 = shape_of(%var_1926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_1926, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = cast(meta[relay.Constant][16] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %197 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %198 = reshape(%196, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %199 = reshape(%197, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %200 = @func_271(%198, %199) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %201 = %200.1;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %203 = reshape(%202, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %204 = cast(%var_1952, dtype="int8") /* ty=Tensor[(30), int8] */;
  %205 = reshape(%204, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %206 = power(%194, %195) /* ty=Tensor[(15, 9, 14), float64] */;
  %207 = @func_111(%203) /* ty=Tensor[(16, 11, 14), float64] */;
  %208 = @func_1137(%205) /* ty=Tensor[(6, 5, 3), int8] */;
  (%206, %201, meta[relay.Constant][16] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][17] /* ty=Tensor[(144), uint8] */, %207, %208, %var_1952)
}

def @func_5325(%var_5265: Tensor[(84, 20), float64], %var_5285: Tensor[(15), int16], %var_5301: Tensor[(6, 18), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(840, 2), float64], Tensor[(11, 22), uint32], Tensor[(84, 20), float64], Tensor[(2112, 1), int64], Tensor[(1183), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(6, 18), float64], Tensor[(2, 4, 6), int64], Tensor[(48), int64]) {
  %209 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %212 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 22), uint32] */, dtype="uint32") /* ty=Tensor[(11, 22), uint32] */;
  %213 = cast(%var_5265, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(2112, 1), int64] */, dtype="int64") /* ty=Tensor[(2112, 1), int64] */;
  %215 = cast(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %216 = reshape(%212, newshape=[242]) /* ty=Tensor[(242), uint32] */;
  %217 = reshape(%213, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
  %218 = reshape(%214, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %219 = reshape(%215, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %220 = @func_5123(%216, %217, %218, %219) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) */;
  %221 = cast(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %222 = cast(%var_5285, dtype="int16") /* ty=Tensor[(15), int16] */;
  %223 = reshape(%221, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %224 = reshape(%222, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %225 = @func_4257(%223, %224) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
  %226 = cast(%var_5301, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %227 = cast(%var_5285, dtype="int16") /* ty=Tensor[(15), int16] */;
  %228 = reshape(%226, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %229 = reshape(%227, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %230 = @func_3658(%228, %229) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
  %231 = cast(meta[relay.Constant][21] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %232 = cast(meta[relay.Constant][21] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %233 = cast(%var_5265, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %234 = cast(meta[relay.Constant][19] /* ty=Tensor[(2112, 1), int64] */, dtype="int64") /* ty=Tensor[(2112, 1), int64] */;
  %235 = %220.7;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %237 = reshape(%231, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %238 = reshape(%232, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %239 = reshape(%233, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %240 = reshape(%234, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %241 = reshape(%236, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %242 = @func_2497(%237, %238, %239, %240, %241) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
  %243 = asin(%211) /* ty=Tensor[(13, 15, 13), float32] */;
  %244 = %225.5;
  %245 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %246 = %230.1;
  %247 = %242.0;
  (%243, %235, meta[relay.Constant][18] /* ty=Tensor[(11, 22), uint32] */, %var_5265, meta[relay.Constant][19] /* ty=Tensor[(2112, 1), int64] */, meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, %244, %var_5285, %245, %246, %var_5301, %247, meta[relay.Constant][21] /* ty=Tensor[(48), int64] */)
}

def @func_3820() -> (Tensor[(13, 15, 13), float64],) {
  %248 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  (%248,)
}

def @func_4837() -> (Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) {
  %249 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %250 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %251 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %252 = reshape(%250, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %253 = reshape(%251, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %254 = @func_271(%252, %253) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %255 = %249.0;
  %256 = %254.0;
  (%255, %256, meta[relay.Constant][22] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][23] /* ty=Tensor[(144), uint8] */)
}

def @func_392(%var_379: uint16, %var_380: Tensor[(3, 4, 6), uint16]) -> Tensor[(3, 4, 6), bool] {
  %257 = cast(%var_379, dtype="bool") /* ty=bool */;
  %258 = cast(%var_380, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
  greater(%257, %258) /* ty=Tensor[(3, 4, 6), bool] */
}

def @func_4990() -> (Tensor[(13, 15, 13), float64],) {
  %259 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
  (%259,)
}

def @func_7153() -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(242, 6), float32]) {
  %260 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %261 = cast(meta[relay.Constant][24] /* ty=Tensor[(242, 6), float32] */, dtype="float32") /* ty=Tensor[(242, 6), float32] */;
  %262 = reshape(%261, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float32] */;
  %263 = @func_2208(%262) /* ty=(Tensor[(12, 11, 11), float32],) */;
  %264 = %260.0;
  %265 = %263.0;
  (%264, %265, meta[relay.Constant][24] /* ty=Tensor[(242, 6), float32] */)
}

def @func_8164(%var_8123: Tensor[(15), int16], %var_8146: Tensor[(1680), float64], %var_8147: Tensor[(2112), int64]) -> (Tensor[(13, 15, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(15), int16], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float64], Tensor[(242), uint32], Tensor[(1680), float64], Tensor[(2112), int64]) {
  %266 = cast(meta[relay.Constant][25] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %267 = cast(%var_8123, dtype="int16") /* ty=Tensor[(15), int16] */;
  %268 = reshape(%266, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %269 = reshape(%267, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %270 = @func_4257(%268, %269) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
  %271 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %272 = cast(meta[relay.Constant][26] /* ty=Tensor[(242), uint32] */, dtype="uint32") /* ty=Tensor[(242), uint32] */;
  %273 = cast(%var_8146, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %274 = cast(%var_8147, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %275 = cast(meta[relay.Constant][25] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %276 = reshape(%272, newshape=[242]) /* ty=Tensor[(242), uint32] */;
  %277 = reshape(%273, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
  %278 = reshape(%274, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %279 = reshape(%275, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %280 = @func_5123(%276, %277, %278, %279) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) */;
  %281 = @func_5681() /* ty=Tensor[(13, 15, 13), float64] */;
  %282 = %270.1;
  %283 = %271.0;
  %284 = %280.4;
  (%281, %282, meta[relay.Constant][25] /* ty=Tensor[(1183), float64] */, %var_8123, %283, %284, meta[relay.Constant][26] /* ty=Tensor[(242), uint32] */, %var_8146, %var_8147)
}

def @func_7907() -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) {
  %285 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %286 = cast(meta[relay.Constant][27] /* ty=Tensor[(616), uint16] */, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %287 = reshape(%286, newshape=[616]) /* ty=Tensor[(616), uint16] */;
  %288 = @func_6022(%287) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) */;
  %289 = %285.0;
  %290 = %288.1;
  %291 = @func_7427() /* ty=Tensor[(108), float64] */;
  (%289, %290, meta[relay.Constant][27] /* ty=Tensor[(616), uint16] */, %291)
}

def @func_6069(%var_6061: Tensor[(2, 3, 5), int64]) -> (Tensor[(2, 3, 5), int64],) {
  %292 = cast(%var_6061, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %293 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %296 = minimum(%294, %295) /* ty=Tensor[(2, 3, 5), int64] */;
  (%296,)
}

def @func_4512(%var_4510: Tensor[(1452), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) {
  %297 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %298 = cast(%var_4510, dtype="float32") /* ty=Tensor[(1452), float32] */;
  %299 = reshape(%298, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float32] */;
  %300 = @func_2208(%299) /* ty=(Tensor[(12, 11, 11), float32],) */;
  %301 = %297.0;
  %302 = %300.0;
  (%301, %302, %var_4510)
}

def @func_3658(%var_3652: Tensor[(108), float64], %var_3653: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) {
  %303 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %304 = %303.0;
  %305 = cast(%304, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %306 = reshape(%305, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %307 = @func_3188(%306) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %308 = cast(meta[relay.Constant][29] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %309 = cast(meta[relay.Constant][29] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %310 = cast(meta[relay.Constant][30] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %311 = cast(meta[relay.Constant][29] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %312 = cast(%var_3652, dtype="float64") /* ty=Tensor[(108), float64] */;
  %313 = cast(%var_3653, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %314 = reshape(%308, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %315 = reshape(%309, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %316 = reshape(%310, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %317 = reshape(%311, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %318 = reshape(%312, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %319 = reshape(%313, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %320 = @func_1823(%314, %315, %316, %317, %318, %319) /* ty=(Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) */;
  %321 = %307.0;
  %322 = %320.7;
  (%304, %321, %322, meta[relay.Constant][29] /* ty=Tensor[(42, 4), bool] */, meta[relay.Constant][30] /* ty=Tensor[(30), int8] */, %var_3652, %var_3653)
}

def @func_6476(%var_6447: bool) -> (Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) {
  %323 = cast(%var_6447, dtype="bool") /* ty=bool */;
  %324 = cast(meta[relay.Constant][31] /* ty=Tensor[(2), bool] */, dtype="bool") /* ty=Tensor[(2), bool] */;
  %325 = reshape(%323, newshape=[]) /* ty=bool */;
  %326 = reshape(%324, newshape=[2, 1]) /* ty=Tensor[(2, 1), bool] */;
  %327 = @func_6372() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %328 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %331 = @func_5623(%325, %326) /* ty=Tensor[(2, 1), bool] */;
  %332 = %327.0;
  %333 = tan(%330) /* ty=Tensor[(13, 15, 13), float64] */;
  (%331, %var_6447, meta[relay.Constant][31] /* ty=Tensor[(2), bool] */, %332, %333)
}

def @func_1137(%var_1123: Tensor[(6, 5, 1), int8]) -> Tensor[(6, 5, 3), int8] {
  %334 = cast(%var_1123, dtype="int8") /* ty=Tensor[(6, 5, 1), int8] */;
  %335 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 5, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 5, 3), int8] */;
  bitwise_and(%334, %335) /* ty=Tensor[(6, 5, 3), int8] */
}

def @func_2853(%var_2830: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
  %336 = cast(%var_2830, dtype="float64") /* ty=Tensor[(7, 13, 13), float64] */;
  sinh(%336) /* ty=Tensor[(7, 13, 13), float64] */
}

def @func_420(%var_411: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %337 = cast(%var_411, dtype="float64") /* ty=Tensor[(9, 6, 2), float64] */;
  %338 = cast(meta[relay.Constant][33] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %339 = reshape(%338, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %340 = asin(%337) /* ty=Tensor[(9, 6, 2), float64] */;
  %341 = @func_111(%339) /* ty=Tensor[(16, 11, 14), float64] */;
  (%340, %341, meta[relay.Constant][33] /* ty=Tensor[(2464), float64] */)
}

def @func_7065() -> Tensor[(13, 15, 13), float32] {
  %342 = @func_6627() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %343 = %342.0;
  %344 = cast(%343, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  cosh(%344) /* ty=Tensor[(13, 15, 13), float32] */
}

def @func_5576(%var_5496: Tensor[(24), uint8], %var_5549: Tensor[(2100), uint16], %var_5557: Tensor[(2100), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(5, 3, 6), int16], Tensor[(15), int16], Tensor[(90), int16], Tensor[(24), uint8], Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(108), float64], Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(2100), bool]) {
  %345 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %346 = cast(meta[relay.Constant][34] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %347 = cast(meta[relay.Constant][35] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %348 = cast(%var_5496, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %349 = reshape(%346, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), int16] */;
  %350 = reshape(%347, newshape=[5, 3, 6]) /* ty=Tensor[(5, 3, 6), int16] */;
  %351 = reshape(%348, newshape=[24]) /* ty=Tensor[(24), uint8] */;
  %352 = @func_559(%349, %350, %351) /* ty=(Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) */;
  %353 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %354 = cast(meta[relay.Constant][36] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %355 = reshape(%354, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %356 = @func_5026(%355) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
  %357 = cast(%var_5549, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %358 = cast(%var_5549, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %359 = cast(meta[relay.Constant][37] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %360 = reshape(%357, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %361 = reshape(%358, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %362 = reshape(%359, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %363 = @func_4153(%360, %361, %362) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %364 = cast(%var_5557, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %365 = shape_of(%var_5549, dtype="int32") /* ty=Tensor[(1), int32] */;
  %366 = cast(%var_5549, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?), bool] */;
  %368 = %345.0;
  %369 = %352.0;
  %370 = %353.0;
  %371 = %356.1;
  %372 = @func_4176() /* ty=Tensor[(108), float64] */;
  %373 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %374 = %363.2;
  %375 = greater(%366, %367) /* ty=Tensor[(2100), bool] */;
  (%368, %369, meta[relay.Constant][34] /* ty=Tensor[(15), int16] */, meta[relay.Constant][35] /* ty=Tensor[(90), int16] */, %var_5496, %370, %371, meta[relay.Constant][36] /* ty=Tensor[(72), uint16] */, %372, %373, %374, meta[relay.Constant][37] /* ty=Tensor[(2464), float64] */, %375)
}

def @func_5235(%var_5200: uint32, %var_5201: Tensor[(2, 1), uint32], %var_5223: Tensor[(144), uint8]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  %376 = cast(meta[relay.Constant][38] /* ty=Tensor[(2535), bool] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %377 = reshape(%376, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %378 = @func_3188(%377) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %379 = cast(%var_5200, dtype="bool") /* ty=bool */;
  %380 = cast(%var_5201, dtype="bool") /* ty=Tensor[(2, 1), bool] */;
  %381 = equal(%379, %380) /* ty=Tensor[(2, 1), bool] */;
  %382 = cast(%381, dtype="int64") /* ty=Tensor[(2, 1), int64] */;
  %383 = cast(meta[relay.Constant][38] /* ty=Tensor[(2535), bool] */, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %384 = cast(meta[relay.Constant][39] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %385 = cast(%var_5223, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %386 = reshape(%384, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %387 = reshape(%385, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %388 = @func_271(%386, %387) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %389 = cast(meta[relay.Constant][38] /* ty=Tensor[(2535), bool] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %390 = cast(meta[relay.Constant][40] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %391 = reshape(%389, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
  %392 = reshape(%390, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %393 = @func_3520(%391, %392) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
  %394 = %378.0;
  %395 = bitwise_or(%382, %383) /* ty=Tensor[(2, 2535), int64] */;
  %396 = %388.0;
  %397 = %393.3;
  (%394, %395, %396, meta[relay.Constant][39] /* ty=Tensor[(24), uint8] */, %var_5223, %397, meta[relay.Constant][40] /* ty=Tensor[(1183), float64] */)
}

def @func_4416(%var_4409: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), int32],) {
  %398 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %399 = cast(%var_4409, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %403 = right_shift(%401, %402) /* ty=Tensor[(13, 15, 13), int32] */;
  (%403,)
}

def @func_1880(%var_1863: Tensor[(3, 16, 5), float32]) -> Tensor[(3, 16, 5), float32] {
  %404 = cast(%var_1863, dtype="float32") /* ty=Tensor[(3, 16, 5), float32] */;
  sinh(%404) /* ty=Tensor[(3, 16, 5), float32] */
}

def @func_3841() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) {
  %405 = cast(meta[relay.Constant][41] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %406 = reshape(%405, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %407 = @func_420(%406) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %408 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %409 = %407.1;
  (%408, %409, meta[relay.Constant][41] /* ty=Tensor[(108), float64] */)
}

def @func_5925() -> Tensor[(13, 15, 13), float64] {
  @func_5881() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_4610() -> Tensor[(13, 15, 13), float64] {
  @func_4489() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_6627() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %410 = cast(meta[relay.Constant][42] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %411 = reshape(%410, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %412 = @func_6091() /* ty=Tensor[(13, 15, 13), float64] */;
  %413 = @func_111(%411) /* ty=Tensor[(16, 11, 14), float64] */;
  (%412, %413, meta[relay.Constant][42] /* ty=Tensor[(2464), float64] */)
}

def @func_3353() -> (Tensor[(13, 15, 13), bool],) {
  %414 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %415 = %414.0;
  (%415,)
}

def @func_4915(%var_4902: Tensor[(7, 6, 14), bool], %var_4910: Tensor[(22, 66), float32]) -> (Tensor[(13, 15, 13), float64], Tensor[(588), float32], Tensor[(144, 2), float32], Tensor[(7, 6, 14), bool], Tensor[(13, 15, 13), bool], Tensor[(22, 66), float32]) {
  %416 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %417 = cast(meta[relay.Constant][43] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %418 = cast(meta[relay.Constant][44] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %419 = cast(meta[relay.Constant][43] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %420 = cast(meta[relay.Constant][43] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %421 = reshape(%417, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %422 = reshape(%418, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %423 = reshape(%419, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %424 = reshape(%420, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %425 = @func_3572(%421, %422, %423, %424) /* ty=(Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) */;
  %426 = %425.6;
  %427 = cast(%var_4902, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = cast(%var_4910, dtype="float32") /* ty=Tensor[(22, 66), float32] */;
  %432 = reshape(%431, newshape=[1452]) /* ty=Tensor[(1452), float32] */;
  %433 = @func_4512(%432) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) */;
  %434 = %416.0;
  %435 = greater_equal(%429, %430) /* ty=Tensor[(7, 6, 14), bool] */;
  %436 = %433.0;
  (%434, meta[relay.Constant][43] /* ty=Tensor[(588), float32] */, meta[relay.Constant][44] /* ty=Tensor[(144, 2), float32] */, %435, %436, %var_4910)
}

def @func_4176() -> Tensor[(108), float64] {
  %437 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %437.2
}

def @func_7022(%var_6975: Tensor[(15, 15, 2), float32], %var_6993: Tensor[(169, 15), float32], %var_6994: Tensor[(1183), float64]) -> (Tensor[(15, 15, 2), float32], Tensor[(7, 13, 13), float64], Tensor[(169, 15), float32], Tensor[(1183), float64]) {
  %438 = cast(%var_6975, dtype="float32") /* ty=Tensor[(15, 15, 2), float32] */;
  %439 = cast(%var_6993, dtype="float32") /* ty=Tensor[(169, 15), float32] */;
  %440 = cast(%var_6994, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %441 = reshape(%439, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
  %442 = reshape(%440, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %443 = @func_3520(%441, %442) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
  %444 = erf(%438) /* ty=Tensor[(15, 15, 2), float32] */;
  %445 = %443.3;
  (%444, %445, %var_6993, %var_6994)
}

def @func_3136() -> (Tensor[(13, 15, 13), bool],) {
  %446 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %447 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(13, 15, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %450 = logical_and(%448, %449) /* ty=Tensor[(13, 15, 13), bool] */;
  (%450,)
}

def @func_4153(%var_4113: Tensor[(10, 14, 15), uint16], %var_4114: Tensor[(10, 14, 15), uint16], %var_4146: Tensor[(2464), float64]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %451 = cast(%var_4114, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %452 = shape_of(%var_4113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%var_4113, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = less_equal(%453, %454) /* ty=Tensor[(10, 14, 15), bool] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %457 = shape_of(%var_4113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_4113, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %460 = power(%458, %459) /* ty=Tensor[(10, 14, 15), float64] */;
  %461 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 14, 15), float64] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %466 = acosh(%465) /* ty=Tensor[(10, 14, 15), float64] */;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %468 = cast(%var_4146, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %469 = reshape(%468, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %470 = greater_equal(%463, %464) /* ty=Tensor[(10, 14, 15), bool] */;
  %471 = log(%467) /* ty=Tensor[(10, 14, 15), float64] */;
  %472 = @func_111(%469) /* ty=Tensor[(16, 11, 14), float64] */;
  (%470, %471, %472, %var_4146)
}

def @func_6961(%var_6953: Tensor[(2100), uint16], %var_6954: Tensor[(2464), float64]) -> (Tensor[(144), uint8], Tensor[(10, 14, 15), float64], Tensor[(2100), uint16], Tensor[(2464), float64]) {
  %473 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %474 = cast(%var_6953, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %475 = cast(%var_6953, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %476 = cast(%var_6954, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %477 = reshape(%474, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %478 = reshape(%475, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %479 = reshape(%476, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %480 = @func_4153(%477, %478, %479) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %481 = %473.3;
  %482 = %480.1;
  (%481, %482, %var_6953, %var_6954)
}

def @main(%var_8572: Tensor[(13, 1, 8), float64]) -> (Tensor[(13, ?, 8), int8], Tensor[(13, 1, 8), float64]) {
  %483 = cast(%var_8572, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %484 = log(%483) /* ty=Tensor[(13, 1, 8), float64] */;
  %485 = cast(%var_8572, dtype="int8") /* ty=Tensor[(13, 1, 8), int8] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%484, dtype="int8") /* ty=Tensor[(13, 1, 8), int8] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %489 = cast(%484, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %490 = right_shift(%487, %488) /* ty=Tensor[(13, ?, 8), int8] */;
  %491 = sinh(%489) /* ty=Tensor[(13, 1, 8), float64] */;
  (%490, %491)
}

def @func_4593(%var_4586: Tensor[(30, 70), uint16], %var_4587: Tensor[(1232, 2), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) {
  %492 = cast(%var_4586, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %493 = cast(%var_4586, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %494 = cast(%var_4587, dtype="float64") /* ty=Tensor[(1232, 2), float64] */;
  %495 = reshape(%492, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %496 = reshape(%493, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %497 = reshape(%494, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %498 = @func_4153(%495, %496, %497) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %499 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %500 = %499.0;
  %501 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %504 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%500, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = less_equal(%505, %506) /* ty=Tensor[(13, 15, 13), bool] */;
  %508 = cast(%502, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = %498.2;
  %513 = logical_or(%510, %511) /* ty=Tensor[(13, 15, 13), bool] */;
  (%512, %var_4586, %var_4587, %513)
}

def @func_5187(%var_5172: Tensor[(7, 3, 2), float64], %var_5173: Tensor[(7, 3, 2), float64]) -> (Tensor[(7, 3, 2), bool],) {
  %514 = cast(%var_5173, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
  %515 = shape_of(%var_5172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_5172, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = less_equal(%516, %517) /* ty=Tensor[(7, 3, 2), bool] */;
  (%518,)
}

def @func_8367(%var_8363: Tensor[(14, 4, 7), float32]) -> (Tensor[(14, 4, 7), float32],) {
  %519 = cast(%var_8363, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %520 = log2(%519) /* ty=Tensor[(14, 4, 7), float32] */;
  (%520,)
}

def @func_8342(%var_8324: Tensor[(13, 15, 13), bool], %var_8338: Tensor[(1600), float64], %var_8339: uint16) -> (Tensor[(13, 15, 13), float32], Tensor[(1183), float64], Tensor[(616), uint16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(3, 24), uint16], Tensor[(1600), float64], uint16) {
  %521 = @func_6602() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) */;
  %522 = cast(meta[relay.Constant][48] /* ty=Tensor[(616), uint16] */, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %523 = reshape(%522, newshape=[616]) /* ty=Tensor[(616), uint16] */;
  %524 = @func_6022(%523) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) */;
  %525 = @func_7907() /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) */;
  %526 = %525.0;
  %527 = cast(%var_8324, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %531 = cast(%var_8338, dtype="float64") /* ty=Tensor[(1600), float64] */;
  %532 = cast(%var_8339, dtype="uint16") /* ty=uint16 */;
  %533 = reshape(%531, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
  %534 = reshape(%532, newshape=[]) /* ty=uint16 */;
  %535 = @func_729(%533, %534) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
  %536 = %521.1;
  %537 = %524.2;
  %538 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
  %539 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %540 = power(%529, %530) /* ty=Tensor[(13, 15, 13), float64] */;
  %541 = %535.3;
  (%536, %537, meta[relay.Constant][48] /* ty=Tensor[(616), uint16] */, %538, %539, %540, %541, %var_8338, %var_8339)
}

def @func_2156(%var_2130: Tensor[(14, 6, 6), float64], %var_2140: Tensor[(1890), float64]) -> (Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) {
  %542 = cast(%var_2130, dtype="float64") /* ty=Tensor[(14, 6, 6), float64] */;
  %543 = cast(%var_2140, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %544 = cast(%var_2140, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %545 = cast(meta[relay.Constant][49] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %546 = reshape(%543, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %547 = reshape(%544, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %548 = reshape(%545, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %549 = @func_1970(%546, %547, %548) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %550 = sin(%542) /* ty=Tensor[(14, 6, 6), float64] */;
  %551 = %549.1;
  (%550, %551, %var_2140, meta[relay.Constant][49] /* ty=Tensor[(30), int8] */)
}

def @func_6022(%var_5955: Tensor[(616), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) {
  %552 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %553 = cast(meta[relay.Constant][50] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %554 = reshape(%553, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %555 = cast(%var_5955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %556 = acos(%555) /* ty=Tensor[(616), float64] */;
  %557 = cast(%var_5955, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %558 = reshape(%557, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), uint16] */;
  %559 = @func_2412(%558) /* ty=Tensor[(11, 4, 14), uint16] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %561 = shape_of(%556, dtype="int32") /* ty=Tensor[(1), int32] */;
  %562 = cast(%556, dtype="float32") /* ty=Tensor[(616), float32] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?), float32] */;
  %564 = floor_mod(%562, %563) /* ty=Tensor[(616), float32] */;
  %565 = cast(%var_5955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(1), int32] */;
  %567 = cast(%564, dtype="float64") /* ty=Tensor[(616), float64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?), float64] */;
  %569 = %552.0;
  %570 = @func_2853(%554) /* ty=Tensor[(7, 13, 13), float64] */;
  %571 = mod(%567, %568) /* ty=Tensor[(616), float64] */;
  (%569, %570, meta[relay.Constant][50] /* ty=Tensor[(1183), float64] */, %571)
}

def @func_5123(%var_5075: Tensor[(242), uint32], %var_5096: Tensor[(840, 2), float64], %var_5097: Tensor[(2112), int64], %var_5118: Tensor[(1, 1183), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) {
  %572 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %573 = %572.0;
  %574 = cast(%573, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %575 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 72), uint16] */, dtype="uint16") /* ty=Tensor[(1, 72), uint16] */;
  %576 = reshape(%575, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %577 = @func_5026(%576) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
  %578 = %577.2;
  %579 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 72), uint16] */, dtype="int64") /* ty=Tensor[(1, 72), int64] */;
  %580 = cast(%578, dtype="int64") /* ty=int64 */;
  %581 = cast(%var_5075, dtype="uint32") /* ty=Tensor[(242), uint32] */;
  %582 = cast(%var_5075, dtype="uint32") /* ty=Tensor[(242), uint32] */;
  %583 = reshape(%581, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), uint32] */;
  %584 = reshape(%582, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), uint32] */;
  %585 = @func_2658(%583, %584) /* ty=(Tensor[(2, 11, 11), bool],) */;
  %586 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %587 = cast(%var_5096, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %588 = cast(%var_5097, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %589 = reshape(%587, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %590 = reshape(%588, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %591 = @func_2251(%589, %590) /* ty=(Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) */;
  %592 = cast(%573, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %593 = cast(%var_5118, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
  %594 = reshape(%592, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
  %595 = reshape(%593, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %596 = @func_3520(%594, %595) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
  %597 = log(%574) /* ty=Tensor[(13, 15, 13), float64] */;
  %598 = multiply(%579, %580) /* ty=Tensor[(1, 72), int64] */;
  %599 = %585.0;
  %600 = %586.0;
  %601 = @func_4176() /* ty=Tensor[(108), float64] */;
  %602 = %591.6;
  %603 = %596.5;
  (%597, %598, %599, %var_5075, %600, %601, %602, %var_5096, %var_5097, %603, %var_5118)
}

def @func_7841() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64]) {
  %604 = @func_6627() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %605 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
  %606 = %604.1;
  (%605, %606)
}

def @func_3188(%var_3180: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool],) {
  %607 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %608 = %607.0;
  %609 = cast(%var_3180, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %613 = greater_equal(%611, %612) /* ty=Tensor[(13, 15, 13), bool] */;
  (%613,)
}

def @func_3704() -> Tensor[(13, 15, 13), float64] {
  %614 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %615 = %614.0;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  log10(%616) /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_4489() -> Tensor[(13, 15, 13), float64] {
  %617 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %617.0
}

def @func_3520(%var_3498: Tensor[(13, 15, 13), float32], %var_3510: Tensor[(1183), float64]) -> (Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) {
  %618 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %621 = sin(%620) /* ty=Tensor[(13, 15, 13), float32] */;
  %622 = cast(%var_3498, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %626 = cast(meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %627 = reshape(%626, newshape=[3, 16, 5]) /* ty=Tensor[(3, 16, 5), float32] */;
  %628 = cast(%var_3510, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %629 = reshape(%628, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %630 = cast(%621, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %631 = bitwise_or(%624, %625) /* ty=Tensor[(13, 15, 13), int32] */;
  %632 = @func_1880(%627) /* ty=Tensor[(3, 16, 5), float32] */;
  %633 = @func_2853(%629) /* ty=Tensor[(7, 13, 13), float64] */;
  %634 = atan(%630) /* ty=Tensor[(13, 15, 13), float32] */;
  (%631, %632, meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, %633, %var_3510, %634)
}

def @func_5881() -> Tensor[(13, 15, 13), float64] {
  %635 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %635.0
}

def @func_111(%var_93: Tensor[(16, 11, 14), float64]) -> Tensor[(16, 11, 14), float64] {
  %636 = cast(%var_93, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  tan(%636) /* ty=Tensor[(16, 11, 14), float64] */
}

def @func_7247(%var_7219: uint32, %var_7220: Tensor[(11, 8, 1), uint32]) -> Tensor[(11, 8, 1), uint64] {
  %637 = cast(%var_7219, dtype="uint32") /* ty=uint32 */;
  %638 = cast(%var_7220, dtype="uint32") /* ty=Tensor[(11, 8, 1), uint32] */;
  %639 = minimum(%637, %638) /* ty=Tensor[(11, 8, 1), uint32] */;
  %640 = cast(%639, dtype="uint64") /* ty=Tensor[(11, 8, 1), uint64] */;
  %641 = cast(%var_7219, dtype="uint64") /* ty=uint64 */;
  bitwise_or(%640, %641) /* ty=Tensor[(11, 8, 1), uint64] */
}

def @func_4257(%var_4243: Tensor[(1, 1183), float64], %var_4253: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) {
  %642 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %643 = cast(%var_4243, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
  %644 = reshape(%643, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %645 = cast(meta[relay.Constant][53] /* ty=Tensor[(18, 6), float64] */, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %646 = cast(%var_4253, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %647 = reshape(%645, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %648 = reshape(%646, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %649 = @func_3658(%647, %648) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
  %650 = %642.0;
  %651 = @func_2853(%644) /* ty=Tensor[(7, 13, 13), float64] */;
  %652 = %649.0;
  (%650, %651, %var_4243, %652, meta[relay.Constant][53] /* ty=Tensor[(18, 6), float64] */, %var_4253)
}

def @func_6643() -> Tensor[(13, 15, 13), float64] {
  %653 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %653.0
}

def @func_271(%var_242: Tensor[(2, 12, 1), uint8], %var_243: Tensor[(2, 12, 6), uint8]) -> (Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) {
  %654 = cast(%var_242, dtype="uint8") /* ty=Tensor[(2, 12, 1), uint8] */;
  %655 = cast(%var_243, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %656 = cast(meta[relay.Constant][54] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %657 = reshape(%656, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %658 = cast(meta[relay.Constant][54] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %659 = reshape(%658, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %660 = subtract(%654, %655) /* ty=Tensor[(2, 12, 6), uint8] */;
  %661 = @func_111(%657) /* ty=Tensor[(16, 11, 14), float64] */;
  %662 = @func_111(%659) /* ty=Tensor[(16, 11, 14), float64] */;
  (%660, %661, meta[relay.Constant][54] /* ty=Tensor[(2464), float64] */, %662)
}

def @func_729(%var_717: Tensor[(10, 10, 16), float64], %var_724: uint16) -> (Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) {
  %663 = cast(%var_717, dtype="float64") /* ty=Tensor[(10, 10, 16), float64] */;
  %664 = cast(%var_724, dtype="uint16") /* ty=uint16 */;
  %665 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 24), uint16] */, dtype="uint16") /* ty=Tensor[(3, 24), uint16] */;
  %666 = reshape(%664, newshape=[]) /* ty=uint16 */;
  %667 = reshape(%665, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %668 = sin(%663) /* ty=Tensor[(10, 10, 16), float64] */;
  %669 = @func_392(%666, %667) /* ty=Tensor[(3, 4, 6), bool] */;
  (%668, %669, %var_724, meta[relay.Constant][55] /* ty=Tensor[(3, 24), uint16] */)
}

def @func_2412(%var_2407: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), uint16] {
  %670 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %671 = shape_of(%var_2407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_2407, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%672, %673) /* ty=Tensor[(11, 4, 14), uint16] */
}

def @func_5441(%var_5428: uint32, %var_5429: Tensor[(2), uint32], %var_5430: Tensor[(144), uint8]) -> (Tensor[(2, 5), float64], Tensor[(7, 13, 13), float64], uint32, Tensor[(2), uint32], Tensor[(144), uint8]) {
  %674 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 5), float64] */;
  %675 = cast(%var_5428, dtype="uint32") /* ty=uint32 */;
  %676 = cast(%var_5429, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %677 = cast(%var_5430, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %678 = reshape(%675, newshape=[]) /* ty=uint32 */;
  %679 = reshape(%676, newshape=[2, 1]) /* ty=Tensor[(2, 1), uint32] */;
  %680 = reshape(%677, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %681 = @func_5235(%678, %679, %680) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) */;
  %682 = log(%674) /* ty=Tensor[(2, 5), float64] */;
  %683 = %681.5;
  (%682, %683, %var_5428, %var_5429, %var_5430)
}

def @func_6602() -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) {
  %684 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %685 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %688 = %684.0;
  %689 = log2(%687) /* ty=Tensor[(13, 15, 13), float32] */;
  (%688, %689)
}

def @func_4233(%var_4222: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) {
  %690 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %691 = %690.0;
  %692 = cast(%691, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %693 = reshape(%692, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %694 = @func_3188(%693) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %695 = cast(%var_4222, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %696 = shape_of(%691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%691, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %699 = cast(meta[relay.Constant][58] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %700 = cast(meta[relay.Constant][59] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %701 = cast(meta[relay.Constant][58] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %702 = cast(meta[relay.Constant][58] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %703 = reshape(%699, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %704 = reshape(%700, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %705 = reshape(%701, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %706 = reshape(%702, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
  %707 = @func_3572(%703, %704, %705, %706) /* ty=(Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) */;
  %708 = %694.0;
  %709 = not_equal(%697, %698) /* ty=Tensor[(13, 15, 13), bool] */;
  %710 = %707.4;
  (%708, %709, %710, meta[relay.Constant][58] /* ty=Tensor[(588), float32] */, meta[relay.Constant][59] /* ty=Tensor[(288), float32] */)
}

def @func_6151() -> (Tensor[(13, 15, 13), float64],) {
  %711 = @func_5925() /* ty=Tensor[(13, 15, 13), float64] */;
  (%711,)
}

def @func_6755(%var_6734: Tensor[(2464), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(16, 11, 14), float64], Tensor[(13, 15, 13), float64], Tensor[(2464), uint64], Tensor[(13, 15, 13), float64]) {
  %712 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %713 = cast(meta[relay.Constant][60] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %714 = reshape(%713, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %715 = cast(meta[relay.Constant][60] /* ty=Tensor[(2464), float64] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %716 = log10(%715) /* ty=Tensor[(2464), float32] */;
  %717 = cast(%var_6734, dtype="uint64") /* ty=Tensor[(2464), uint64] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(1), int32] */;
  %719 = cast(%716, dtype="uint64") /* ty=Tensor[(2464), uint64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %721 = @func_6151() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %722 = %712.0;
  %723 = @func_111(%714) /* ty=Tensor[(16, 11, 14), float64] */;
  %724 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %725 = bitwise_xor(%719, %720) /* ty=Tensor[(2464), uint64] */;
  %726 = %721.0;
  (%722, %723, %724, %725, %726)
}

def @func_2497(%var_2471: Tensor[(2, 4, 6), int64], %var_2472: Tensor[(2, 4, 6), int64], %var_2481: Tensor[(1680), float64], %var_2482: Tensor[(2112), int64], %var_2491: Tensor[(1680), float64]) -> (Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) {
  %727 = cast(%var_2472, dtype="int64") /* ty=Tensor[(2, 4, 6), int64] */;
  %728 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_2471, dtype="int64") /* ty=Tensor[(2, 4, 6), int64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %731 = cast(%var_2481, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %732 = cast(%var_2482, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %733 = reshape(%731, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %734 = reshape(%732, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %735 = @func_2251(%733, %734) /* ty=(Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) */;
  %736 = cast(%var_2491, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %737 = shape_of(%var_2481, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(%var_2481, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %740 = right_shift(%729, %730) /* ty=Tensor[(2, 4, 6), int64] */;
  %741 = %735.3;
  %742 = bitwise_or(%738, %739) /* ty=Tensor[(1680), uint16] */;
  (%740, %741, %var_2482, %742)
}

def @func_4356(%var_4327: Tensor[(3, 630), float64]) -> (Tensor[(108), float64], Tensor[(14, 6, 6), float64], Tensor[(504), float64], Tensor[(3, 630), float64], Tensor[(13, 15, 13), bool], Tensor[(2535, 1), bool]) {
  %743 = cast(meta[relay.Constant][61] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %744 = cast(%var_4327, dtype="float64") /* ty=Tensor[(3, 630), float64] */;
  %745 = reshape(%743, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float64] */;
  %746 = reshape(%744, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %747 = @func_2156(%745, %746) /* ty=(Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) */;
  %748 = cast(meta[relay.Constant][62] /* ty=Tensor[(2535, 1), bool] */, dtype="bool") /* ty=Tensor[(2535, 1), bool] */;
  %749 = reshape(%748, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %750 = @func_3188(%749) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %751 = @func_4176() /* ty=Tensor[(108), float64] */;
  %752 = %747.0;
  %753 = %750.0;
  (%751, %752, meta[relay.Constant][61] /* ty=Tensor[(504), float64] */, %var_4327, %753, meta[relay.Constant][62] /* ty=Tensor[(2535, 1), bool] */)
}

def @func_5026(%var_5017: Tensor[(72), uint16]) -> (Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %754 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %755 = %754.1;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %757 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %758 = cast(%var_5017, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %759 = reshape(%757, newshape=[]) /* ty=uint16 */;
  %760 = reshape(%758, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %761 = tan(%756) /* ty=Tensor[(2, 12, 6), float64] */;
  %762 = @func_392(%759, %760) /* ty=Tensor[(3, 4, 6), bool] */;
  (%761, %762, meta[relay.Constant][63] /* ty=uint16 */, %var_5017)
}

def @func_5732(%var_5727: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), uint16],) {
  %763 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %764 = cast(%var_5727, dtype="uint16") /* ty=Tensor[(13, 15, 13), uint16] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="uint16") /* ty=Tensor[(13, 15, 13), uint16] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %768 = logical_xor(%766, %767) /* ty=Tensor[(13, 15, 13), uint16] */;
  (%768,)
}

def @func_7472(%var_7454: Tensor[(16, 5, 6), int64]) -> (Tensor[(16, 5, 6), int64], Tensor[(13, 15, 13), float64]) {
  %769 = cast(%var_7454, dtype="int64") /* ty=Tensor[(16, 5, 6), int64] */;
  %770 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(16, 5, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(meta[relay.Constant][64] /* ty=Tensor[(16, 5, 6), int64] */, dtype="int64") /* ty=Tensor[(16, 5, 6), int64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %773 = minimum(%771, %772) /* ty=Tensor[(16, 5, 6), int64] */;
  %774 = @func_6643() /* ty=Tensor[(13, 15, 13), float64] */;
  (%773, %774)
}

def @func_5835() -> Tensor[(16, 11, 14), float64] {
  %775 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %775.1
}

def @func_6372() -> (Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  %776 = cast(meta[relay.Constant][65] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %777 = reshape(%776, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %778 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %779 = @func_1137(%777) /* ty=Tensor[(6, 5, 3), int8] */;
  (%778, %779, meta[relay.Constant][65] /* ty=Tensor[(30), int8] */)
}

def @func_7741() -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) {
  %780 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %782 = reshape(%781, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %783 = @func_4233(%782) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) */;
  %784 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %786 = %783.0;
  %787 = cos(%785) /* ty=Tensor[(13, 15, 13), float32] */;
  (%780, %786, %787)
}

def @func_8513(%var_8498: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %788 = cast(meta[relay.Constant][66] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %789 = cast(%var_8498, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %790 = reshape(%788, newshape=[]) /* ty=uint16 */;
  %791 = reshape(%789, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %792 = @func_6643() /* ty=Tensor[(13, 15, 13), float64] */;
  %793 = @func_392(%790, %791) /* ty=Tensor[(3, 4, 6), bool] */;
  (%792, %793, meta[relay.Constant][66] /* ty=uint16 */, %var_8498)
}

def @func_2208(%var_2198: Tensor[(12, 11, 11), float32]) -> (Tensor[(12, 11, 11), float32],) {
  %794 = cast(%var_2198, dtype="float32") /* ty=Tensor[(12, 11, 11), float32] */;
  %795 = asinh(%794) /* ty=Tensor[(12, 11, 11), float32] */;
  (%795,)
}

def @func_5681() -> Tensor[(13, 15, 13), float64] {
  %796 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %796.0
}

def @func_7200() -> Tensor[(13, 15, 13), float32] {
  %797 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  sinh(%799) /* ty=Tensor[(13, 15, 13), float32] */
}

def @func_3572(%var_3535: Tensor[(7, 6, 14), float32], %var_3542: Tensor[(288), float32], %var_3544: Tensor[(7, 6, 14), float32], %var_3565: Tensor[(7, 6, 14), float32]) -> (Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) {
  %800 = cast(%var_3542, dtype="float32") /* ty=Tensor[(288), float32] */;
  %801 = reshape(%800, newshape=[4, 12, 6]) /* ty=Tensor[(4, 12, 6), float32] */;
  %802 = @func_2682(%801) /* ty=(Tensor[(4, 12, 6), float32],) */;
  %803 = cast(%var_3535, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %804 = sigmoid(%803) /* ty=Tensor[(7, 6, 14), float32] */;
  %805 = cast(%var_3544, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %809 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 160), float64] */, dtype="float64") /* ty=Tensor[(10, 160), float64] */;
  %810 = cast(meta[relay.Constant][68] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %811 = reshape(%809, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
  %812 = reshape(%810, newshape=[]) /* ty=uint16 */;
  %813 = @func_729(%811, %812) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
  %814 = cast(%var_3565, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %815 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%804, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %818 = %802.0;
  %819 = mod(%807, %808) /* ty=Tensor[(7, 6, 14), float64] */;
  %820 = %813.2;
  %821 = not_equal(%816, %817) /* ty=Tensor[(7, 6, 14), bool] */;
  (%818, %var_3542, %819, %820, meta[relay.Constant][67] /* ty=Tensor[(10, 160), float64] */, meta[relay.Constant][68] /* ty=uint16 */, %821)
}

def @func_2682(%var_2678: Tensor[(4, 12, 6), float32]) -> (Tensor[(4, 12, 6), float32],) {
  %822 = cast(%var_2678, dtype="float32") /* ty=Tensor[(4, 12, 6), float32] */;
  %823 = exp(%822) /* ty=Tensor[(4, 12, 6), float32] */;
  (%823,)
}

def @func_6305(%var_6237: Tensor[(2535), float64], %var_6259: Tensor[(288), float32], %var_6272: Tensor[(2100), uint16], %var_6294: uint16, %var_6295: Tensor[(72), uint16]) -> (Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %824 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %825 = reshape(%824, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %826 = @func_4416(%825) /* ty=(Tensor[(13, 15, 13), int32],) */;
  %827 = cast(%var_6259, dtype="float32") /* ty=Tensor[(288), float32] */;
  %828 = reshape(%827, newshape=[4, 12, 6]) /* ty=Tensor[(4, 12, 6), float32] */;
  %829 = @func_2682(%828) /* ty=(Tensor[(4, 12, 6), float32],) */;
  %830 = cast(%var_6272, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %831 = cast(meta[relay.Constant][69] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %832 = reshape(%830, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
  %833 = reshape(%831, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float64] */;
  %834 = @func_4593(%832, %833) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) */;
  %835 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %836 = sinh(%835) /* ty=Tensor[(2535), float64] */;
  %837 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %838 = rsqrt(%837) /* ty=Tensor[(2535), float64] */;
  %839 = cast(%838, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %840 = shape_of(%836, dtype="int32") /* ty=Tensor[(1), int32] */;
  %841 = cast(%836, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?), bool] */;
  %843 = cast(%var_6294, dtype="uint16") /* ty=uint16 */;
  %844 = cast(%var_6295, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %845 = reshape(%843, newshape=[]) /* ty=uint16 */;
  %846 = reshape(%844, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %847 = @func_4176() /* ty=Tensor[(108), float64] */;
  %848 = %826.0;
  %849 = %829.0;
  %850 = %834.1;
  %851 = less(%841, %842) /* ty=Tensor[(2535), bool] */;
  %852 = @func_392(%845, %846) /* ty=Tensor[(3, 4, 6), bool] */;
  (%847, %848, %849, %var_6259, %850, %var_6272, meta[relay.Constant][69] /* ty=Tensor[(2464), float64] */, %851, %852, %var_6294, %var_6295)
}

def @func_7707(%var_7704: bool) -> (Tensor[(13, 15, 13), float64], Tensor[(30), int8], bool, bool) {
  %853 = @func_6372() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %854 = cast(%var_7704, dtype="bool") /* ty=bool */;
  %855 = reshape(%854, newshape=[]) /* ty=bool */;
  %856 = @func_6476(%855) /* ty=(Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) */;
  %857 = @func_6091() /* ty=Tensor[(13, 15, 13), float64] */;
  %858 = %853.2;
  %859 = %856.1;
  (%857, %858, %859, %var_7704)
}

def @func_3876(%var_3849: Tensor[(13, 15, 13), float64], %var_3865: Tensor[(108, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16], Tensor[(15, 1), int16], Tensor[(108, 1), float64], Tensor[(15), int16]) {
  %860 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %861 = %860.0;
  %862 = cast(%var_3849, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%861, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %866 = cast(meta[relay.Constant][70] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %867 = cast(meta[relay.Constant][71] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %868 = reshape(%866, newshape=[]) /* ty=uint16 */;
  %869 = reshape(%867, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %870 = cast(%var_3865, dtype="float64") /* ty=Tensor[(108, 1), float64] */;
  %871 = cast(meta[relay.Constant][72] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %872 = reshape(%870, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %873 = reshape(%871, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %874 = @func_3658(%872, %873) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
  %875 = mod(%864, %865) /* ty=Tensor[(13, 15, 13), float32] */;
  %876 = @func_392(%868, %869) /* ty=Tensor[(3, 4, 6), bool] */;
  %877 = %874.6;
  (%875, %876, meta[relay.Constant][70] /* ty=uint16 */, meta[relay.Constant][71] /* ty=Tensor[(72), uint16] */, %877, %var_3865, meta[relay.Constant][72] /* ty=Tensor[(15), int16] */)
}

def @func_8566() -> (Tensor[(108), float64],) {
  %878 = @func_7427() /* ty=Tensor[(108), float64] */;
  (%878,)
}

def @func_6538() -> (Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) {
  %879 = cast(meta[relay.Constant][73] /* ty=Tensor[(18, 6), float64] */, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %880 = reshape(%879, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %881 = @func_420(%880) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %882 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %883 = %882.2;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(24), float32] */;
  %885 = %881.1;
  %886 = sqrt(%884) /* ty=Tensor[(24), float32] */;
  (%885, meta[relay.Constant][73] /* ty=Tensor[(18, 6), float64] */, %886)
}

def @func_6844() -> (Tensor[(5, 1, 10), float64], Tensor[(18, 6), float64]) {
  %887 = cast(meta[relay.Constant][74] /* ty=Tensor[(5, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %888 = @func_6538() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) */;
  %889 = cosh(%887) /* ty=Tensor[(5, 1, 10), float64] */;
  %890 = %888.1;
  (%889, %890)
}

def @func_559(%var_527: Tensor[(5, 3, 1), int16], %var_528: Tensor[(5, 3, 6), int16], %var_546: Tensor[(24), uint8]) -> (Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) {
  %891 = cast(%var_527, dtype="int16") /* ty=Tensor[(5, 3, 1), int16] */;
  %892 = cast(%var_528, dtype="int16") /* ty=Tensor[(5, 3, 6), int16] */;
  %893 = cast(%var_546, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %894 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 18), uint8] */, dtype="uint8") /* ty=Tensor[(8, 18), uint8] */;
  %895 = reshape(%893, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %896 = reshape(%894, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %897 = @func_271(%895, %896) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %898 = cast(%var_546, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %899 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 18), uint8] */, dtype="uint8") /* ty=Tensor[(8, 18), uint8] */;
  %900 = reshape(%898, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %901 = reshape(%899, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %902 = @func_271(%900, %901) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %903 = cast(meta[relay.Constant][76] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %904 = reshape(%903, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %905 = @func_420(%904) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %906 = minimum(%891, %892) /* ty=Tensor[(5, 3, 6), int16] */;
  %907 = %897.0;
  %908 = %902.2;
  %909 = %905.2;
  (%906, %907, %var_546, meta[relay.Constant][75] /* ty=Tensor[(8, 18), uint8] */, %908, %909, meta[relay.Constant][76] /* ty=Tensor[(108), float64] */)
}

def @func_2658(%var_2645: Tensor[(2, 11, 11), uint32], %var_2646: Tensor[(2, 11, 11), uint32]) -> (Tensor[(2, 11, 11), bool],) {
  %910 = cast(%var_2646, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
  %911 = shape_of(%var_2645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_2645, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = greater_equal(%912, %913) /* ty=Tensor[(2, 11, 11), bool] */;
  (%914,)
}

def @func_4542() -> (Tensor[(13, 15, 13), float64],) {
  %915 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  (%915,)
}

def @func_7381(%var_7356: Tensor[(30), int64], %var_7369: Tensor[(2100), uint16], %var_7371: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 3, 5), int64], Tensor[(30), int64], Tensor[(2464), float64], Tensor[(288), float32], Tensor[(2100), uint16], uint16, Tensor[(72), uint16], Tensor[(13, 15, 13), uint16]) {
  %916 = @func_4616() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %917 = %916.0;
  %918 = cast(meta[relay.Constant][77] /* ty=Tensor[(13, 15, 13), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%917, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = cast(%var_7356, dtype="int64") /* ty=Tensor[(30), int64] */;
  %923 = reshape(%922, newshape=[2, 3, 5]) /* ty=Tensor[(2, 3, 5), int64] */;
  %924 = @func_6069(%923) /* ty=(Tensor[(2, 3, 5), int64],) */;
  %925 = greater(%920, %921) /* ty=Tensor[(13, 15, 13), bool] */;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %927 = cast(meta[relay.Constant][78] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %928 = cast(%var_7369, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %929 = cast(meta[relay.Constant][79] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %930 = cast(%var_7371, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %931 = reshape(%926, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %932 = reshape(%927, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %933 = reshape(%928, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %934 = reshape(%929, newshape=[]) /* ty=uint16 */;
  %935 = reshape(%930, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %936 = @func_6305(%931, %932, %933, %934, %935) /* ty=(Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
  %937 = cast(%925, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %938 = reshape(%937, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %939 = @func_5732(%938) /* ty=(Tensor[(13, 15, 13), uint16],) */;
  %940 = %924.0;
  %941 = %936.6;
  %942 = %939.0;
  (%925, %940, %var_7356, %941, meta[relay.Constant][78] /* ty=Tensor[(288), float32] */, %var_7369, meta[relay.Constant][79] /* ty=uint16 */, %var_7371, %942)
}

def @func_8264(%var_8200: Tensor[(14, 10, 16), uint64], %var_8234: Tensor[(18, 6), float64], %var_8248: Tensor[(18, 6), float64], %var_8253: Tensor[(18, 6), float64]) -> (Tensor[(14, 10, 16), uint64], Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(18, 6), bool], Tensor[(18, 6), float64]) {
  %943 = cast(meta[relay.Constant][80] /* ty=Tensor[(14, 1, 16), uint64] */, dtype="uint64") /* ty=Tensor[(14, 1, 16), uint64] */;
  %944 = cast(%var_8200, dtype="uint64") /* ty=Tensor[(14, 10, 16), uint64] */;
  %945 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %946 = cast(meta[relay.Constant][81] /* ty=Tensor[(2), bool] */, dtype="bool") /* ty=Tensor[(2), bool] */;
  %947 = reshape(%945, newshape=[]) /* ty=bool */;
  %948 = reshape(%946, newshape=[2, 1]) /* ty=Tensor[(2, 1), bool] */;
  %949 = cast(%var_8248, dtype="bool") /* ty=Tensor[(18, 6), bool] */;
  %950 = shape_of(%var_8234, dtype="int32") /* ty=Tensor[(2), int32] */;
  %951 = cast(%var_8234, dtype="bool") /* ty=Tensor[(18, 6), bool] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %953 = @func_6538() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) */;
  %954 = %953.1;
  %955 = cast(%var_8234, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %956 = shape_of(%954, dtype="int32") /* ty=Tensor[(2), int32] */;
  %957 = cast(%954, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %959 = power(%957, %958) /* ty=Tensor[(18, 6), float64] */;
  %960 = cast(%var_8253, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(2), int32] */;
  %962 = cast(%959, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %964 = maximum(%943, %944) /* ty=Tensor[(14, 10, 16), uint64] */;
  %965 = @func_5623(%947, %948) /* ty=Tensor[(2, 1), bool] */;
  %966 = not_equal(%951, %952) /* ty=Tensor[(18, 6), bool] */;
  %967 = add(%962, %963) /* ty=Tensor[(18, 6), float64] */;
  (%964, %965, True /* ty=bool */, meta[relay.Constant][81] /* ty=Tensor[(2), bool] */, %966, %967)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_396(%var_394: uint16, %var_395: Tensor[(3, 4, 6), uint16]) -> Tensor[(3, 4, 6), bool] {
  @func_392(%var_394, %var_395) /* ty=Tensor[(3, 4, 6), bool] */
}

def @func_4490() -> Tensor[(13, 15, 13), float64] {
  %1 = fn () -> Tensor[(13, 15, 13), float64] {
    %0 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %0.0
  };
  %1() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_7022(%var_6975: Tensor[(15, 15, 2), float32], %var_6993: Tensor[(169, 15), float32], %var_6994: Tensor[(1183), float64]) -> (Tensor[(15, 15, 2), float32], Tensor[(7, 13, 13), float64], Tensor[(169, 15), float32], Tensor[(1183), float64]) {
  %2 = cast(%var_6975, dtype="float32") /* ty=Tensor[(15, 15, 2), float32] */;
  %3 = cast(%var_6993, dtype="float32") /* ty=Tensor[(169, 15), float32] */;
  %4 = cast(%var_6994, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %5 = reshape(%3, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
  %6 = reshape(%4, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %7 = @func_3520(%5, %6) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
  %8 = erf(%2) /* ty=Tensor[(15, 15, 2), float32] */;
  %9 = %7.3;
  (%8, %9, %var_6993, %var_6994)
}

def @func_5028(%var_5027: Tensor[(72), uint16]) -> (Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %19 = fn (%var_5017: Tensor[(72), uint16]) -> (Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
    %10 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
    %11 = %10.1;
    %12 = cast(%11, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
    %13 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %14 = cast(%var_5017, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %15 = reshape(%13, newshape=[]) /* ty=uint16 */;
    %16 = reshape(%14, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
    %17 = tan(%12) /* ty=Tensor[(2, 12, 6), float64] */;
    %18 = @func_392(%15, %16) /* ty=Tensor[(3, 4, 6), bool] */;
    (%17, %18, meta[relay.Constant][0] /* ty=uint16 */, %var_5017)
  };
  %19(%var_5027) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */
}

def @func_6372() -> (Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %21 = reshape(%20, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %22 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %23 = @func_1137(%21) /* ty=Tensor[(6, 5, 3), int8] */;
  (%22, %23, meta[relay.Constant][1] /* ty=Tensor[(30), int8] */)
}

def @func_3879(%var_3877: Tensor[(13, 15, 13), float64], %var_3878: Tensor[(108, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16], Tensor[(15, 1), int16], Tensor[(108, 1), float64], Tensor[(15), int16]) {
  %42 = fn (%var_3849: Tensor[(13, 15, 13), float64], %var_3865: Tensor[(108, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16], Tensor[(15, 1), int16], Tensor[(108, 1), float64], Tensor[(15), int16]) {
    %24 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
    %25 = %24.0;
    %26 = cast(%var_3849, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
    %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%25, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %30 = cast(meta[relay.Constant][2] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %32 = reshape(%30, newshape=[]) /* ty=uint16 */;
    %33 = reshape(%31, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
    %34 = cast(%var_3865, dtype="float64") /* ty=Tensor[(108, 1), float64] */;
    %35 = cast(meta[relay.Constant][4] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
    %36 = reshape(%34, newshape=[108]) /* ty=Tensor[(108), float64] */;
    %37 = reshape(%35, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %38 = @func_3658(%36, %37) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
    %39 = mod(%28, %29) /* ty=Tensor[(13, 15, 13), float32] */;
    %40 = @func_392(%32, %33) /* ty=Tensor[(3, 4, 6), bool] */;
    %41 = %38.6;
    (%39, %40, meta[relay.Constant][2] /* ty=uint16 */, meta[relay.Constant][3] /* ty=Tensor[(72), uint16] */, %41, %var_3865, meta[relay.Constant][4] /* ty=Tensor[(15), int16] */)
  };
  %42(%var_3877, %var_3878) /* ty=(Tensor[(13, 15, 13), float32], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16], Tensor[(15, 1), int16], Tensor[(108, 1), float64], Tensor[(15), int16]) */
}

def @func_7908() -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) {
  %50 = fn () -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) {
    %43 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(616), uint16] */, dtype="uint16") /* ty=Tensor[(616), uint16] */;
    %45 = reshape(%44, newshape=[616]) /* ty=Tensor[(616), uint16] */;
    %46 = @func_6022(%45) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) */;
    %47 = %43.0;
    %48 = %46.1;
    %49 = @func_7427() /* ty=Tensor[(108), float64] */;
    (%47, %48, meta[relay.Constant][5] /* ty=Tensor[(616), uint16] */, %49)
  };
  %50() /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) */
}

def @func_6312(%var_6307: Tensor[(2535), float64], %var_6308: Tensor[(288), float32], %var_6309: Tensor[(2100), uint16], %var_6310: uint16, %var_6311: Tensor[(72), uint16]) -> (Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  @func_6305(%var_6307, %var_6308, %var_6309, %var_6310, %var_6311) /* ty=(Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */
}

def @func_6965(%var_6963: Tensor[(2100), uint16], %var_6964: Tensor[(2464), float64]) -> (Tensor[(144), uint8], Tensor[(10, 14, 15), float64], Tensor[(2100), uint16], Tensor[(2464), float64]) {
  @func_6961(%var_6963, %var_6964) /* ty=(Tensor[(144), uint8], Tensor[(10, 14, 15), float64], Tensor[(2100), uint16], Tensor[(2464), float64]) */
}

def @func_7843() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64]) {
  @func_7841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64]) */
}

def @func_4260(%var_4258: Tensor[(1, 1183), float64], %var_4259: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) {
  %62 = fn (%var_4243: Tensor[(1, 1183), float64], %var_4253: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) {
    %51 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %52 = cast(%var_4243, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
    %53 = reshape(%52, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
    %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(18, 6), float64] */, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
    %55 = cast(%var_4253, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
    %56 = reshape(%54, newshape=[108]) /* ty=Tensor[(108), float64] */;
    %57 = reshape(%55, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %58 = @func_3658(%56, %57) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
    %59 = %51.0;
    %60 = @func_2853(%53) /* ty=Tensor[(7, 13, 13), float64] */;
    %61 = %58.0;
    (%59, %60, %var_4243, %61, meta[relay.Constant][6] /* ty=Tensor[(18, 6), float64] */, %var_4253)
  };
  %62(%var_4258, %var_4259) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */
}

def @func_5400(%var_5357: Tensor[(15, 8, 7), uint16], %var_5369: Tensor[(72), uint16], %var_5380: Tensor[(504), float64], %var_5396: Tensor[(48), int64]) -> (Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(15, 8, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(504), float64], Tensor[(1890), float64], Tensor[(1680), uint16], Tensor[(48), int64], Tensor[(1680), float64], Tensor[(44, 48), int64]) {
  %63 = cast(meta[relay.Constant][7] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %64 = cast(%var_5369, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %65 = reshape(%63, newshape=[]) /* ty=uint16 */;
  %66 = reshape(%64, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %67 = cast(meta[relay.Constant][7] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %68 = cast(%var_5357, dtype="uint16") /* ty=Tensor[(15, 8, 7), uint16] */;
  %69 = bitwise_or(%67, %68) /* ty=Tensor[(15, 8, 7), uint16] */;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %71 = atan(%70) /* ty=Tensor[(15, 8, 7), float32] */;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %73 = cast(%var_5380, dtype="float64") /* ty=Tensor[(504), float64] */;
  %74 = cast(meta[relay.Constant][8] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %75 = reshape(%73, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float64] */;
  %76 = reshape(%74, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %77 = @func_2156(%75, %76) /* ty=(Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) */;
  %78 = cast(%var_5396, dtype="int64") /* ty=Tensor[(48), int64] */;
  %79 = cast(%var_5396, dtype="int64") /* ty=Tensor[(48), int64] */;
  %80 = cast(meta[relay.Constant][9] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %81 = cast(meta[relay.Constant][10] /* ty=Tensor[(44, 48), int64] */, dtype="int64") /* ty=Tensor[(44, 48), int64] */;
  %82 = cast(meta[relay.Constant][9] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %83 = reshape(%78, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %84 = reshape(%79, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %85 = reshape(%80, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %86 = reshape(%81, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %87 = reshape(%82, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %88 = @func_2497(%83, %84, %85, %86, %87) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
  %89 = @func_392(%65, %66) /* ty=Tensor[(3, 4, 6), bool] */;
  %90 = log2(%72) /* ty=Tensor[(15, 8, 7), float32] */;
  %91 = %77.1;
  %92 = %88.3;
  (%89, %var_5369, %90, %91, %var_5380, meta[relay.Constant][8] /* ty=Tensor[(1890), float64] */, %92, %var_5396, meta[relay.Constant][9] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][10] /* ty=Tensor[(44, 48), int64] */)
}

def @func_4153(%var_4113: Tensor[(10, 14, 15), uint16], %var_4114: Tensor[(10, 14, 15), uint16], %var_4146: Tensor[(2464), float64]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %93 = cast(%var_4114, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %94 = shape_of(%var_4113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_4113, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = less_equal(%95, %96) /* ty=Tensor[(10, 14, 15), bool] */;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %99 = shape_of(%var_4113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_4113, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %102 = power(%100, %101) /* ty=Tensor[(10, 14, 15), float64] */;
  %103 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 14, 15), float64] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %108 = acosh(%107) /* ty=Tensor[(10, 14, 15), float64] */;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %110 = cast(%var_4146, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %111 = reshape(%110, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %112 = greater_equal(%105, %106) /* ty=Tensor[(10, 14, 15), bool] */;
  %113 = log(%109) /* ty=Tensor[(10, 14, 15), float64] */;
  %114 = @func_111(%111) /* ty=Tensor[(16, 11, 14), float64] */;
  (%112, %113, %114, %var_4146)
}

def @func_2662(%var_2660: Tensor[(2, 11, 11), uint32], %var_2661: Tensor[(2, 11, 11), uint32]) -> (Tensor[(2, 11, 11), bool],) {
  @func_2658(%var_2660, %var_2661) /* ty=(Tensor[(2, 11, 11), bool],) */
}

def @func_5732(%var_5727: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), uint16],) {
  %115 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %116 = cast(%var_5727, dtype="uint16") /* ty=Tensor[(13, 15, 13), uint16] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="uint16") /* ty=Tensor[(13, 15, 13), uint16] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %120 = logical_xor(%118, %119) /* ty=Tensor[(13, 15, 13), uint16] */;
  (%120,)
}

def @func_6846() -> (Tensor[(5, 1, 10), float64], Tensor[(18, 6), float64]) {
  @func_6844() /* ty=(Tensor[(5, 1, 10), float64], Tensor[(18, 6), float64]) */
}

def @func_3524(%var_3522: Tensor[(13, 15, 13), float32], %var_3523: Tensor[(1183), float64]) -> (Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) {
  @func_3520(%var_3522, %var_3523) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */
}

def @func_3821() -> (Tensor[(13, 15, 13), float64],) {
  %122 = fn () -> (Tensor[(13, 15, 13), float64],) {
    %121 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
    (%121,)
  };
  %122() /* ty=(Tensor[(13, 15, 13), float64],) */
}

def @func_6627() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %123 = cast(meta[relay.Constant][12] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %124 = reshape(%123, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %125 = @func_6091() /* ty=Tensor[(13, 15, 13), float64] */;
  %126 = @func_111(%124) /* ty=Tensor[(16, 11, 14), float64] */;
  (%125, %126, meta[relay.Constant][12] /* ty=Tensor[(2464), float64] */)
}

def @func_5627(%var_5625: bool, %var_5626: Tensor[(2, 1), bool]) -> Tensor[(2, 1), bool] {
  @func_5623(%var_5625, %var_5626) /* ty=Tensor[(2, 1), bool] */
}

def @func_7251(%var_7249: uint32, %var_7250: Tensor[(11, 8, 1), uint32]) -> Tensor[(11, 8, 1), uint64] {
  @func_7247(%var_7249, %var_7250) /* ty=Tensor[(11, 8, 1), uint64] */
}

def @func_6022(%var_5955: Tensor[(616), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) {
  %127 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %128 = cast(meta[relay.Constant][13] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %129 = reshape(%128, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %130 = cast(%var_5955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %131 = acos(%130) /* ty=Tensor[(616), float64] */;
  %132 = cast(%var_5955, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %133 = reshape(%132, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), uint16] */;
  %134 = @func_2412(%133) /* ty=Tensor[(11, 4, 14), uint16] */;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %136 = shape_of(%131, dtype="int32") /* ty=Tensor[(1), int32] */;
  %137 = cast(%131, dtype="float32") /* ty=Tensor[(616), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?), float32] */;
  %139 = floor_mod(%137, %138) /* ty=Tensor[(616), float32] */;
  %140 = cast(%var_5955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(1), int32] */;
  %142 = cast(%139, dtype="float64") /* ty=Tensor[(616), float64] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?), float64] */;
  %144 = %127.0;
  %145 = @func_2853(%129) /* ty=Tensor[(7, 13, 13), float64] */;
  %146 = mod(%142, %143) /* ty=Tensor[(616), float64] */;
  (%144, %145, meta[relay.Constant][13] /* ty=Tensor[(1183), float64] */, %146)
}

def @func_423(%var_421: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  @func_420(%var_421) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */
}

def @func_7247(%var_7219: uint32, %var_7220: Tensor[(11, 8, 1), uint32]) -> Tensor[(11, 8, 1), uint64] {
  %147 = cast(%var_7219, dtype="uint32") /* ty=uint32 */;
  %148 = cast(%var_7220, dtype="uint32") /* ty=Tensor[(11, 8, 1), uint32] */;
  %149 = minimum(%147, %148) /* ty=Tensor[(11, 8, 1), uint32] */;
  %150 = cast(%149, dtype="uint64") /* ty=Tensor[(11, 8, 1), uint64] */;
  %151 = cast(%var_7219, dtype="uint64") /* ty=uint64 */;
  bitwise_or(%150, %151) /* ty=Tensor[(11, 8, 1), uint64] */
}

def @func_8060(%var_8007: Tensor[(1183, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(15, 1), int16], Tensor[(1183, 1), float64], Tensor[(15), int16], Tensor[(6, 6, 9), int8], Tensor[(324), int8]) {
  %152 = @func_7741() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) */;
  %153 = %152.1;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %155 = cast(%var_8007, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %156 = cast(meta[relay.Constant][14] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %157 = reshape(%155, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %158 = reshape(%156, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %159 = @func_4257(%157, %158) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
  %160 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %161 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %162 = reshape(%160, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int8] */;
  %163 = reshape(%161, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int8] */;
  %164 = @func_3117(%162, %163) /* ty=(Tensor[(6, 6, 9), int8],) */;
  %165 = sqrt(%154) /* ty=Tensor[(13, 15, 13), float32] */;
  %166 = %159.5;
  %167 = %164.0;
  (%165, %166, %var_8007, meta[relay.Constant][14] /* ty=Tensor[(15), int16] */, %167, meta[relay.Constant][15] /* ty=Tensor[(324), int8] */)
}

def @func_1139(%var_1138: Tensor[(6, 5, 1), int8]) -> Tensor[(6, 5, 3), int8] {
  %170 = fn (%var_1123: Tensor[(6, 5, 1), int8]) -> Tensor[(6, 5, 3), int8] {
    %168 = cast(%var_1123, dtype="int8") /* ty=Tensor[(6, 5, 1), int8] */;
    %169 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 5, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 5, 3), int8] */;
    bitwise_and(%168, %169) /* ty=Tensor[(6, 5, 3), int8] */
  };
  %170(%var_1138) /* ty=Tensor[(6, 5, 3), int8] */
}

def @func_4617() -> (Tensor[(13, 15, 13), float64],) {
  %172 = fn () -> (Tensor[(13, 15, 13), float64],) {
    %171 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
    (%171,)
  };
  %172() /* ty=(Tensor[(13, 15, 13), float64],) */
}

def @func_3136() -> (Tensor[(13, 15, 13), bool],) {
  %173 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %174 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 15, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 15, 13), bool] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %177 = logical_and(%175, %176) /* ty=Tensor[(13, 15, 13), bool] */;
  (%177,)
}

def @func_4419(%var_4417: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), int32],) {
  @func_4416(%var_4417) /* ty=(Tensor[(13, 15, 13), int32],) */
}

def @func_6025(%var_6023: Tensor[(616), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) {
  @func_6022(%var_6023) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) */
}

def @func_2156(%var_2130: Tensor[(14, 6, 6), float64], %var_2140: Tensor[(1890), float64]) -> (Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) {
  %178 = cast(%var_2130, dtype="float64") /* ty=Tensor[(14, 6, 6), float64] */;
  %179 = cast(%var_2140, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %180 = cast(%var_2140, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %181 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %182 = reshape(%179, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %183 = reshape(%180, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
  %184 = reshape(%181, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %185 = @func_1970(%182, %183, %184) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %186 = sin(%178) /* ty=Tensor[(14, 6, 6), float64] */;
  %187 = %185.1;
  (%186, %187, %var_2140, meta[relay.Constant][19] /* ty=Tensor[(30), int8] */)
}

def @func_3117(%var_3095: Tensor[(6, 6, 9), int8], %var_3096: Tensor[(6, 6, 9), int8]) -> (Tensor[(6, 6, 9), int8],) {
  %188 = cast(%var_3096, dtype="int8") /* ty=Tensor[(6, 6, 9), int8] */;
  %189 = shape_of(%var_3095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_3095, dtype="int8") /* ty=Tensor[(6, 6, 9), int8] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %192 = maximum(%190, %191) /* ty=Tensor[(6, 6, 9), int8] */;
  (%192,)
}

def @func_6374() -> (Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  @func_6372() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */
}

def @func_2855(%var_2854: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
  %194 = fn (%var_2830: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
    %193 = cast(%var_2830, dtype="float64") /* ty=Tensor[(7, 13, 13), float64] */;
    sinh(%193) /* ty=Tensor[(7, 13, 13), float64] */
  };
  %194(%var_2854) /* ty=Tensor[(7, 13, 13), float64] */
}

def @func_4837() -> (Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) {
  %195 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %196 = cast(meta[relay.Constant][20] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %197 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %198 = reshape(%196, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %199 = reshape(%197, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %200 = @func_271(%198, %199) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %201 = %195.0;
  %202 = %200.0;
  (%201, %202, meta[relay.Constant][20] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */)
}

def @func_563(%var_560: Tensor[(5, 3, 1), int16], %var_561: Tensor[(5, 3, 6), int16], %var_562: Tensor[(24), uint8]) -> (Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) {
  %222 = fn (%var_527: Tensor[(5, 3, 1), int16], %var_528: Tensor[(5, 3, 6), int16], %var_546: Tensor[(24), uint8]) -> (Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) {
    %203 = cast(%var_527, dtype="int16") /* ty=Tensor[(5, 3, 1), int16] */;
    %204 = cast(%var_528, dtype="int16") /* ty=Tensor[(5, 3, 6), int16] */;
    %205 = cast(%var_546, dtype="uint8") /* ty=Tensor[(24), uint8] */;
    %206 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 18), uint8] */, dtype="uint8") /* ty=Tensor[(8, 18), uint8] */;
    %207 = reshape(%205, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
    %208 = reshape(%206, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
    %209 = @func_271(%207, %208) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
    %210 = cast(%var_546, dtype="uint8") /* ty=Tensor[(24), uint8] */;
    %211 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 18), uint8] */, dtype="uint8") /* ty=Tensor[(8, 18), uint8] */;
    %212 = reshape(%210, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
    %213 = reshape(%211, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
    %214 = @func_271(%212, %213) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
    %215 = cast(meta[relay.Constant][23] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
    %216 = reshape(%215, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
    %217 = @func_420(%216) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
    %218 = minimum(%203, %204) /* ty=Tensor[(5, 3, 6), int16] */;
    %219 = %209.0;
    %220 = %214.2;
    %221 = %217.2;
    (%218, %219, %var_546, meta[relay.Constant][22] /* ty=Tensor[(8, 18), uint8] */, %220, %221, meta[relay.Constant][23] /* ty=Tensor[(108), float64] */)
  };
  %222(%var_560, %var_561, %var_562) /* ty=(Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) */
}

def @main(%var_8572: Tensor[(13, 1, 8), float64]) -> (Tensor[(13, ?, 8), int8], Tensor[(13, 1, 8), float64]) {
  %223 = cast(%var_8572, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %224 = log(%223) /* ty=Tensor[(13, 1, 8), float64] */;
  %225 = cast(%var_8572, dtype="int8") /* ty=Tensor[(13, 1, 8), int8] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="int8") /* ty=Tensor[(13, 1, 8), int8] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %229 = cast(%224, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %230 = right_shift(%227, %228) /* ty=Tensor[(13, ?, 8), int8] */;
  %231 = sinh(%229) /* ty=Tensor[(13, 1, 8), float64] */;
  (%230, %231)
}

def @func_6072(%var_6070: Tensor[(2, 3, 5), int64]) -> (Tensor[(2, 3, 5), int64],) {
  @func_6069(%var_6070) /* ty=(Tensor[(2, 3, 5), int64],) */
}

def @func_8270(%var_8266: Tensor[(14, 10, 16), uint64], %var_8267: Tensor[(18, 6), float64], %var_8268: Tensor[(18, 6), float64], %var_8269: Tensor[(18, 6), float64]) -> (Tensor[(14, 10, 16), uint64], Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(18, 6), bool], Tensor[(18, 6), float64]) {
  @func_8264(%var_8266, %var_8267, %var_8268, %var_8269) /* ty=(Tensor[(14, 10, 16), uint64], Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(18, 6), bool], Tensor[(18, 6), float64]) */
}

def @func_7201() -> Tensor[(13, 15, 13), float32] {
  %235 = fn () -> Tensor[(13, 15, 13), float32] {
    %232 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %233 = %232.0;
    %234 = cast(%233, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
    sinh(%234) /* ty=Tensor[(13, 15, 13), float32] */
  };
  %235() /* ty=Tensor[(13, 15, 13), float32] */
}

def @func_5835() -> Tensor[(16, 11, 14), float64] {
  %236 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %236.1
}

def @func_5837() -> Tensor[(16, 11, 14), float64] {
  @func_5835() /* ty=Tensor[(16, 11, 14), float64] */
}

def @func_5925() -> Tensor[(13, 15, 13), float64] {
  @func_5881() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_5190(%var_5188: Tensor[(7, 3, 2), float64], %var_5189: Tensor[(7, 3, 2), float64]) -> (Tensor[(7, 3, 2), bool],) {
  %242 = fn (%var_5172: Tensor[(7, 3, 2), float64], %var_5173: Tensor[(7, 3, 2), float64]) -> (Tensor[(7, 3, 2), bool],) {
    %237 = cast(%var_5173, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
    %238 = shape_of(%var_5172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(%var_5172, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %241 = less_equal(%239, %240) /* ty=Tensor[(7, 3, 2), bool] */;
    (%241,)
  };
  %242(%var_5188, %var_5189) /* ty=(Tensor[(7, 3, 2), bool],) */
}

def @func_5406(%var_5402: Tensor[(15, 8, 7), uint16], %var_5403: Tensor[(72), uint16], %var_5404: Tensor[(504), float64], %var_5405: Tensor[(48), int64]) -> (Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(15, 8, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(504), float64], Tensor[(1890), float64], Tensor[(1680), uint16], Tensor[(48), int64], Tensor[(1680), float64], Tensor[(44, 48), int64]) {
  @func_5400(%var_5402, %var_5403, %var_5404, %var_5405) /* ty=(Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(15, 8, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(504), float64], Tensor[(1890), float64], Tensor[(1680), uint16], Tensor[(48), int64], Tensor[(1680), float64], Tensor[(44, 48), int64]) */
}

def @func_8513(%var_8498: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %243 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %244 = cast(%var_8498, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %245 = reshape(%243, newshape=[]) /* ty=uint16 */;
  %246 = reshape(%244, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %247 = @func_6643() /* ty=Tensor[(13, 15, 13), float64] */;
  %248 = @func_392(%245, %246) /* ty=Tensor[(3, 4, 6), bool] */;
  (%247, %248, meta[relay.Constant][24] /* ty=uint16 */, %var_8498)
}

def @func_4176() -> Tensor[(108), float64] {
  %249 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %249.2
}

def @func_7154() -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(242, 6), float32]) {
  %256 = fn () -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(242, 6), float32]) {
    %250 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %251 = cast(meta[relay.Constant][25] /* ty=Tensor[(242, 6), float32] */, dtype="float32") /* ty=Tensor[(242, 6), float32] */;
    %252 = reshape(%251, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float32] */;
    %253 = @func_2208(%252) /* ty=(Tensor[(12, 11, 11), float32],) */;
    %254 = %250.0;
    %255 = %253.0;
    (%254, %255, meta[relay.Constant][25] /* ty=Tensor[(242, 6), float32] */)
  };
  %256() /* ty=(Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(242, 6), float32]) */
}

def @func_2658(%var_2645: Tensor[(2, 11, 11), uint32], %var_2646: Tensor[(2, 11, 11), uint32]) -> (Tensor[(2, 11, 11), bool],) {
  %257 = cast(%var_2646, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
  %258 = shape_of(%var_2645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_2645, dtype="bool") /* ty=Tensor[(2, 11, 11), bool] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %261 = greater_equal(%259, %260) /* ty=Tensor[(2, 11, 11), bool] */;
  (%261,)
}

def @func_3662(%var_3660: Tensor[(108), float64], %var_3661: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) {
  @func_3658(%var_3660, %var_3661) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */
}

def @func_3842() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) {
  %267 = fn () -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) {
    %262 = cast(meta[relay.Constant][26] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
    %263 = reshape(%262, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
    %264 = @func_420(%263) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
    %265 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
    %266 = %264.1;
    (%265, %266, meta[relay.Constant][26] /* ty=Tensor[(108), float64] */)
  };
  %267() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */
}

def @func_3706() -> Tensor[(13, 15, 13), float64] {
  @func_3704() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_6069(%var_6061: Tensor[(2, 3, 5), int64]) -> (Tensor[(2, 3, 5), int64],) {
  %268 = cast(%var_6061, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %269 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(2, 3, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %272 = minimum(%270, %271) /* ty=Tensor[(2, 3, 5), int64] */;
  (%272,)
}

def @func_6538() -> (Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) {
  %273 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 6), float64] */, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %274 = reshape(%273, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %275 = @func_420(%274) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %276 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %277 = %276.2;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(24), float32] */;
  %279 = %275.1;
  %280 = sqrt(%278) /* ty=Tensor[(24), float32] */;
  (%279, meta[relay.Constant][28] /* ty=Tensor[(18, 6), float64] */, %280)
}

def @func_5240(%var_5237: uint32, %var_5238: Tensor[(2, 1), uint32], %var_5239: Tensor[(144), uint8]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  @func_5235(%var_5237, %var_5238, %var_5239) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) */
}

def @func_4612() -> Tensor[(13, 15, 13), float64] {
  @func_4610() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_2210(%var_2209: Tensor[(12, 11, 11), float32]) -> (Tensor[(12, 11, 11), float32],) {
  %283 = fn (%var_2198: Tensor[(12, 11, 11), float32]) -> (Tensor[(12, 11, 11), float32],) {
    %281 = cast(%var_2198, dtype="float32") /* ty=Tensor[(12, 11, 11), float32] */;
    %282 = asinh(%281) /* ty=Tensor[(12, 11, 11), float32] */;
    (%282,)
  };
  %283(%var_2209) /* ty=(Tensor[(12, 11, 11), float32],) */
}

def @func_6629() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  @func_6627() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */
}

def @func_6643() -> Tensor[(13, 15, 13), float64] {
  %284 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %284.0
}

def @func_4178() -> Tensor[(108), float64] {
  @func_4176() /* ty=Tensor[(108), float64] */
}

def @func_4593(%var_4586: Tensor[(30, 70), uint16], %var_4587: Tensor[(1232, 2), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) {
  %285 = cast(%var_4586, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %286 = cast(%var_4586, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %287 = cast(%var_4587, dtype="float64") /* ty=Tensor[(1232, 2), float64] */;
  %288 = reshape(%285, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %289 = reshape(%286, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %290 = reshape(%287, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %291 = @func_4153(%288, %289, %290) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %292 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %293 = %292.0;
  %294 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %295 = %294.0;
  %296 = cast(%295, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %297 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%293, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = less_equal(%298, %299) /* ty=Tensor[(13, 15, 13), bool] */;
  %301 = cast(%295, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %305 = %291.2;
  %306 = logical_or(%303, %304) /* ty=Tensor[(13, 15, 13), bool] */;
  (%305, %var_4586, %var_4587, %306)
}

def @func_4839() -> (Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) {
  @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */
}

def @func_271(%var_242: Tensor[(2, 12, 1), uint8], %var_243: Tensor[(2, 12, 6), uint8]) -> (Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) {
  %307 = cast(%var_242, dtype="uint8") /* ty=Tensor[(2, 12, 1), uint8] */;
  %308 = cast(%var_243, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %309 = cast(meta[relay.Constant][29] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %310 = reshape(%309, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %311 = cast(meta[relay.Constant][29] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %312 = reshape(%311, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %313 = subtract(%307, %308) /* ty=Tensor[(2, 12, 6), uint8] */;
  %314 = @func_111(%310) /* ty=Tensor[(16, 11, 14), float64] */;
  %315 = @func_111(%312) /* ty=Tensor[(16, 11, 14), float64] */;
  (%313, %314, meta[relay.Constant][29] /* ty=Tensor[(2464), float64] */, %315)
}

def @func_4544() -> (Tensor[(13, 15, 13), float64],) {
  @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */
}

def @func_1067(%var_1064: Tensor[(12, 11, 16), int64], %var_1065: uint16, %var_1066: Tensor[(36, 2), uint16]) -> (Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) {
  %328 = fn (%var_1037: Tensor[(12, 11, 16), int64], %var_1044: uint16, %var_1045: Tensor[(36, 2), uint16]) -> (Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) {
    %316 = cast(%var_1037, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
    %317 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(12, 11, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %318 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 11, 16), int64] */, dtype="bool") /* ty=Tensor[(12, 11, 16), bool] */;
    %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %320 = cast(%var_1044, dtype="uint16") /* ty=uint16 */;
    %321 = cast(%var_1045, dtype="uint16") /* ty=Tensor[(36, 2), uint16] */;
    %322 = reshape(%320, newshape=[]) /* ty=uint16 */;
    %323 = reshape(%321, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
    %324 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 11, 16), int64] */, dtype="float32") /* ty=Tensor[(12, 11, 16), float32] */;
    %325 = less_equal(%318, %319) /* ty=Tensor[(12, 11, 16), bool] */;
    %326 = @func_392(%322, %323) /* ty=Tensor[(3, 4, 6), bool] */;
    %327 = atan(%324) /* ty=Tensor[(12, 11, 16), float32] */;
    (%325, %326, %var_1044, %var_1045, %327)
  };
  %328(%var_1064, %var_1065, %var_1066) /* ty=(Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) */
}

def @func_114(%var_112: Tensor[(16, 11, 14), float64]) -> Tensor[(16, 11, 14), float64] {
  @func_111(%var_112) /* ty=Tensor[(16, 11, 14), float64] */
}

def @func_3354() -> (Tensor[(13, 15, 13), bool],) {
  %331 = fn () -> (Tensor[(13, 15, 13), bool],) {
    %329 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %330 = %329.0;
    (%330,)
  };
  %331() /* ty=(Tensor[(13, 15, 13), bool],) */
}

def @func_7067() -> Tensor[(13, 15, 13), float32] {
  @func_7065() /* ty=Tensor[(13, 15, 13), float32] */
}

def @func_2497(%var_2471: Tensor[(2, 4, 6), int64], %var_2472: Tensor[(2, 4, 6), int64], %var_2481: Tensor[(1680), float64], %var_2482: Tensor[(2112), int64], %var_2491: Tensor[(1680), float64]) -> (Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) {
  %332 = cast(%var_2472, dtype="int64") /* ty=Tensor[(2, 4, 6), int64] */;
  %333 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_2471, dtype="int64") /* ty=Tensor[(2, 4, 6), int64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %336 = cast(%var_2481, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %337 = cast(%var_2482, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %338 = reshape(%336, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %339 = reshape(%337, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %340 = @func_2251(%338, %339) /* ty=(Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) */;
  %341 = cast(%var_2491, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %342 = shape_of(%var_2481, dtype="int32") /* ty=Tensor[(1), int32] */;
  %343 = cast(%var_2481, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %345 = right_shift(%334, %335) /* ty=Tensor[(2, 4, 6), int64] */;
  %346 = %340.3;
  %347 = bitwise_or(%343, %344) /* ty=Tensor[(1680), uint16] */;
  (%345, %346, %var_2482, %347)
}

def @func_5927() -> Tensor[(13, 15, 13), float64] {
  @func_5925() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_7065() -> Tensor[(13, 15, 13), float32] {
  %348 = @func_6627() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  cosh(%350) /* ty=Tensor[(13, 15, 13), float32] */
}

def @func_3436(%var_3435: Tensor[(6, 8, 7), float32]) -> (Tensor[(6, 8, 7), float32], Tensor[(2, 4, 6), int64], Tensor[(48), int64], Tensor[(840, 2), float64], Tensor[(132, 16), int64]) {
  %365 = fn (%var_3407: Tensor[(6, 8, 7), float32]) -> (Tensor[(6, 8, 7), float32], Tensor[(2, 4, 6), int64], Tensor[(48), int64], Tensor[(840, 2), float64], Tensor[(132, 16), int64]) {
    %351 = cast(%var_3407, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
    %352 = cast(meta[relay.Constant][31] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %353 = cast(meta[relay.Constant][31] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %354 = cast(meta[relay.Constant][32] /* ty=Tensor[(840, 2), float64] */, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
    %355 = cast(meta[relay.Constant][33] /* ty=Tensor[(132, 16), int64] */, dtype="int64") /* ty=Tensor[(132, 16), int64] */;
    %356 = cast(meta[relay.Constant][32] /* ty=Tensor[(840, 2), float64] */, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
    %357 = reshape(%352, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
    %358 = reshape(%353, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
    %359 = reshape(%354, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %360 = reshape(%355, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
    %361 = reshape(%356, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %362 = @func_2497(%357, %358, %359, %360, %361) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
    %363 = erf(%351) /* ty=Tensor[(6, 8, 7), float32] */;
    %364 = %362.0;
    (%363, %364, meta[relay.Constant][31] /* ty=Tensor[(48), int64] */, meta[relay.Constant][32] /* ty=Tensor[(840, 2), float64] */, meta[relay.Constant][33] /* ty=Tensor[(132, 16), int64] */)
  };
  %365(%var_3435) /* ty=(Tensor[(6, 8, 7), float32], Tensor[(2, 4, 6), int64], Tensor[(48), int64], Tensor[(840, 2), float64], Tensor[(132, 16), int64]) */
}

def @func_6305(%var_6237: Tensor[(2535), float64], %var_6259: Tensor[(288), float32], %var_6272: Tensor[(2100), uint16], %var_6294: uint16, %var_6295: Tensor[(72), uint16]) -> (Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  %366 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %367 = reshape(%366, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %368 = @func_4416(%367) /* ty=(Tensor[(13, 15, 13), int32],) */;
  %369 = cast(%var_6259, dtype="float32") /* ty=Tensor[(288), float32] */;
  %370 = reshape(%369, newshape=[4, 12, 6]) /* ty=Tensor[(4, 12, 6), float32] */;
  %371 = @func_2682(%370) /* ty=(Tensor[(4, 12, 6), float32],) */;
  %372 = cast(%var_6272, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %373 = cast(meta[relay.Constant][34] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %374 = reshape(%372, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
  %375 = reshape(%373, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float64] */;
  %376 = @func_4593(%374, %375) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) */;
  %377 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %378 = sinh(%377) /* ty=Tensor[(2535), float64] */;
  %379 = cast(%var_6237, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %380 = rsqrt(%379) /* ty=Tensor[(2535), float64] */;
  %381 = cast(%380, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %382 = shape_of(%378, dtype="int32") /* ty=Tensor[(1), int32] */;
  %383 = cast(%378, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?), bool] */;
  %385 = cast(%var_6294, dtype="uint16") /* ty=uint16 */;
  %386 = cast(%var_6295, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %387 = reshape(%385, newshape=[]) /* ty=uint16 */;
  %388 = reshape(%386, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
  %389 = @func_4176() /* ty=Tensor[(108), float64] */;
  %390 = %368.0;
  %391 = %371.0;
  %392 = %376.1;
  %393 = less(%383, %384) /* ty=Tensor[(2535), bool] */;
  %394 = @func_392(%387, %388) /* ty=Tensor[(3, 4, 6), bool] */;
  (%389, %390, %391, %var_6259, %392, %var_6272, meta[relay.Constant][34] /* ty=Tensor[(2464), float64] */, %393, %394, %var_6294, %var_6295)
}

def @func_6755(%var_6734: Tensor[(2464), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(16, 11, 14), float64], Tensor[(13, 15, 13), float64], Tensor[(2464), uint64], Tensor[(13, 15, 13), float64]) {
  %395 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %396 = cast(meta[relay.Constant][35] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %397 = reshape(%396, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %398 = cast(meta[relay.Constant][35] /* ty=Tensor[(2464), float64] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %399 = log10(%398) /* ty=Tensor[(2464), float32] */;
  %400 = cast(%var_6734, dtype="uint64") /* ty=Tensor[(2464), uint64] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(1), int32] */;
  %402 = cast(%399, dtype="uint64") /* ty=Tensor[(2464), uint64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %404 = @func_6151() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %405 = %395.0;
  %406 = @func_111(%397) /* ty=Tensor[(16, 11, 14), float64] */;
  %407 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %408 = bitwise_xor(%402, %403) /* ty=Tensor[(2464), uint64] */;
  %409 = %404.0;
  (%405, %406, %407, %408, %409)
}

def @func_275(%var_273: Tensor[(2, 12, 1), uint8], %var_274: Tensor[(2, 12, 6), uint8]) -> (Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) {
  @func_271(%var_273, %var_274) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */
}

def @func_5682() -> Tensor[(13, 15, 13), float64] {
  %411 = fn () -> Tensor[(13, 15, 13), float64] {
    %410 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %410.0
  };
  %411() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_6645() -> Tensor[(13, 15, 13), float64] {
  @func_6643() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_4610() -> Tensor[(13, 15, 13), float64] {
  @func_4489() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_3520(%var_3498: Tensor[(13, 15, 13), float32], %var_3510: Tensor[(1183), float64]) -> (Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) {
  %412 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %413 = %412.0;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %415 = sin(%414) /* ty=Tensor[(13, 15, 13), float32] */;
  %416 = cast(%var_3498, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %420 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %421 = reshape(%420, newshape=[3, 16, 5]) /* ty=Tensor[(3, 16, 5), float32] */;
  %422 = cast(%var_3510, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %423 = reshape(%422, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %424 = cast(%415, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %425 = bitwise_or(%418, %419) /* ty=Tensor[(13, 15, 13), int32] */;
  %426 = @func_1880(%421) /* ty=Tensor[(3, 16, 5), float32] */;
  %427 = @func_2853(%423) /* ty=Tensor[(7, 13, 13), float64] */;
  %428 = atan(%424) /* ty=Tensor[(13, 15, 13), float32] */;
  (%425, %426, meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, %427, %var_3510, %428)
}

def @func_6961(%var_6953: Tensor[(2100), uint16], %var_6954: Tensor[(2464), float64]) -> (Tensor[(144), uint8], Tensor[(10, 14, 15), float64], Tensor[(2100), uint16], Tensor[(2464), float64]) {
  %429 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %430 = cast(%var_6953, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %431 = cast(%var_6953, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %432 = cast(%var_6954, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %433 = reshape(%430, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %434 = reshape(%431, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %435 = reshape(%432, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %436 = @func_4153(%433, %434, %435) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %437 = %429.3;
  %438 = %436.1;
  (%437, %438, %var_6953, %var_6954)
}

def @func_2412(%var_2407: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), uint16] {
  %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 4, 14), uint16] */, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %440 = shape_of(%var_2407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_2407, dtype="uint16") /* ty=Tensor[(11, 4, 14), uint16] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%441, %442) /* ty=Tensor[(11, 4, 14), uint16] */
}

def @func_5623(%var_5617: bool, %var_5618: Tensor[(2, 1), bool]) -> Tensor[(2, 1), bool] {
  %443 = cast(%var_5617, dtype="bool") /* ty=bool */;
  %444 = cast(%var_5618, dtype="bool") /* ty=Tensor[(2, 1), bool] */;
  logical_or(%443, %444) /* ty=Tensor[(2, 1), bool] */
}

def @func_4416(%var_4409: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), int32],) {
  %445 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %446 = cast(%var_4409, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="int32") /* ty=Tensor[(13, 15, 13), int32] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %450 = right_shift(%448, %449) /* ty=Tensor[(13, 15, 13), int32] */;
  (%450,)
}

def @func_1882(%var_1881: Tensor[(3, 16, 5), float32]) -> Tensor[(3, 16, 5), float32] {
  %452 = fn (%var_1863: Tensor[(3, 16, 5), float32]) -> Tensor[(3, 16, 5), float32] {
    %451 = cast(%var_1863, dtype="float32") /* ty=Tensor[(3, 16, 5), float32] */;
    sinh(%451) /* ty=Tensor[(3, 16, 5), float32] */
  };
  %452(%var_1881) /* ty=Tensor[(3, 16, 5), float32] */
}

def @func_1823(%var_1685: Tensor[(4, 6, 7), bool], %var_1686: Tensor[(4, 6, 7), bool], %var_1704: Tensor[(30), int8], %var_1719: Tensor[(4, 6, 7), bool], %var_1771: Tensor[(108), float64], %var_1817: Tensor[(15), int16]) -> (Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) {
  %453 = cast(%var_1704, dtype="int8") /* ty=Tensor[(30), int8] */;
  %454 = reshape(%453, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %455 = cast(%var_1686, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %456 = shape_of(%var_1685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_1685, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %459 = logical_and(%457, %458) /* ty=Tensor[(4, 6, 7), bool] */;
  %460 = cast(%var_1719, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = less_equal(%462, %463) /* ty=Tensor[(4, 6, 7), bool] */;
  %465 = cast(%464, dtype="uint16") /* ty=Tensor[(4, 6, 7), uint16] */;
  %466 = shape_of(%var_1686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%var_1686, dtype="uint16") /* ty=Tensor[(4, 6, 7), uint16] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %469 = cast(%464, dtype="int32") /* ty=Tensor[(4, 6, 7), int32] */;
  %470 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%459, dtype="int32") /* ty=Tensor[(4, 6, 7), int32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %473 = bitwise_xor(%471, %472) /* ty=Tensor[(4, 6, 7), int32] */;
  %474 = cast(%473, dtype="int64") /* ty=Tensor[(4, 6, 7), int64] */;
  %475 = shape_of(%var_1685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%var_1685, dtype="int64") /* ty=Tensor[(4, 6, 7), int64] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %478 = maximum(%476, %477) /* ty=Tensor[(4, 6, 7), int64] */;
  %479 = cast(%459, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %483 = cast(%var_1771, dtype="float64") /* ty=Tensor[(108), float64] */;
  %484 = reshape(%483, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %485 = @func_420(%484) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %486 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 616), float64] */, dtype="float64") /* ty=Tensor[(4, 616), float64] */;
  %487 = reshape(%486, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %488 = cast(%var_1686, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  %489 = cast(%var_1771, dtype="float64") /* ty=Tensor[(108), float64] */;
  %490 = reshape(%489, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %491 = @func_420(%490) /* ty=(Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %492 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 616), float64] */, dtype="float64") /* ty=Tensor[(4, 616), float64] */;
  %493 = reshape(%492, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %494 = cast(%459, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %495 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%var_1719, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = cast(%var_1817, dtype="int16") /* ty=Tensor[(15), int16] */;
  %499 = @func_1137(%454) /* ty=Tensor[(6, 5, 3), int8] */;
  %500 = cast(%499, dtype="int16") /* ty=Tensor[(6, 5, 3), int16] */;
  %501 = cast(meta[relay.Constant][39] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %502 = reshape(%498, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), int16] */;
  %503 = reshape(%500, newshape=[5, 3, 6]) /* ty=Tensor[(5, 3, 6), int16] */;
  %504 = reshape(%501, newshape=[24]) /* ty=Tensor[(24), uint8] */;
  %505 = @func_559(%502, %503, %504) /* ty=(Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) */;
  %506 = bitwise_and(%467, %468) /* ty=Tensor[(4, 6, 7), uint16] */;
  %507 = power(%481, %482) /* ty=Tensor[(4, 6, 7), float64] */;
  %508 = %485.0;
  %509 = @func_111(%487) /* ty=Tensor[(16, 11, 14), float64] */;
  %510 = acos(%488) /* ty=Tensor[(4, 6, 7), float32] */;
  %511 = %491.0;
  %512 = @func_111(%493) /* ty=Tensor[(16, 11, 14), float64] */;
  %513 = equal(%496, %497) /* ty=Tensor[(4, 6, 7), bool] */;
  %514 = %505.6;
  (%499, %var_1704, %506, %507, %508, %var_1771, %509, meta[relay.Constant][38] /* ty=Tensor[(4, 616), float64] */, %510, %511, %512, %513, %514, %var_1817, meta[relay.Constant][39] /* ty=Tensor[(24), uint8] */)
}

def @func_4158(%var_4155: Tensor[(10, 14, 15), uint16], %var_4156: Tensor[(10, 14, 15), uint16], %var_4157: Tensor[(2464), float64]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  @func_4153(%var_4155, %var_4156, %var_4157) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */
}

def @func_5882() -> Tensor[(13, 15, 13), float64] {
  %516 = fn () -> Tensor[(13, 15, 13), float64] {
    %515 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %515.0
  };
  %516() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_7027(%var_7024: Tensor[(15, 15, 2), float32], %var_7025: Tensor[(169, 15), float32], %var_7026: Tensor[(1183), float64]) -> (Tensor[(15, 15, 2), float32], Tensor[(7, 13, 13), float64], Tensor[(169, 15), float32], Tensor[(1183), float64]) {
  @func_7022(%var_7024, %var_7025, %var_7026) /* ty=(Tensor[(15, 15, 2), float32], Tensor[(7, 13, 13), float64], Tensor[(169, 15), float32], Tensor[(1183), float64]) */
}

def @func_7472(%var_7454: Tensor[(16, 5, 6), int64]) -> (Tensor[(16, 5, 6), int64], Tensor[(13, 15, 13), float64]) {
  %517 = cast(%var_7454, dtype="int64") /* ty=Tensor[(16, 5, 6), int64] */;
  %518 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(16, 5, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 5, 6), int64] */, dtype="int64") /* ty=Tensor[(16, 5, 6), int64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %521 = minimum(%519, %520) /* ty=Tensor[(16, 5, 6), int64] */;
  %522 = @func_6643() /* ty=Tensor[(13, 15, 13), float64] */;
  (%521, %522)
}

def @func_1831(%var_1825: Tensor[(4, 6, 7), bool], %var_1826: Tensor[(4, 6, 7), bool], %var_1827: Tensor[(30), int8], %var_1828: Tensor[(4, 6, 7), bool], %var_1829: Tensor[(108), float64], %var_1830: Tensor[(15), int16]) -> (Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) {
  @func_1823(%var_1825, %var_1826, %var_1827, %var_1828, %var_1829, %var_1830) /* ty=(Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) */
}

def @func_5330(%var_5327: Tensor[(84, 20), float64], %var_5328: Tensor[(15), int16], %var_5329: Tensor[(6, 18), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(840, 2), float64], Tensor[(11, 22), uint32], Tensor[(84, 20), float64], Tensor[(2112, 1), int64], Tensor[(1183), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(6, 18), float64], Tensor[(2, 4, 6), int64], Tensor[(48), int64]) {
  @func_5325(%var_5327, %var_5328, %var_5329) /* ty=(Tensor[(13, 15, 13), float32], Tensor[(840, 2), float64], Tensor[(11, 22), uint32], Tensor[(84, 20), float64], Tensor[(2112, 1), int64], Tensor[(1183), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(6, 18), float64], Tensor[(2, 4, 6), int64], Tensor[(48), int64]) */
}

def @func_5445(%var_5442: uint32, %var_5443: Tensor[(2), uint32], %var_5444: Tensor[(144), uint8]) -> (Tensor[(2, 5), float64], Tensor[(7, 13, 13), float64], uint32, Tensor[(2), uint32], Tensor[(144), uint8]) {
  %533 = fn (%var_5428: uint32, %var_5429: Tensor[(2), uint32], %var_5430: Tensor[(144), uint8]) -> (Tensor[(2, 5), float64], Tensor[(7, 13, 13), float64], uint32, Tensor[(2), uint32], Tensor[(144), uint8]) {
    %523 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 5), float64] */;
    %524 = cast(%var_5428, dtype="uint32") /* ty=uint32 */;
    %525 = cast(%var_5429, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %526 = cast(%var_5430, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %527 = reshape(%524, newshape=[]) /* ty=uint32 */;
    %528 = reshape(%525, newshape=[2, 1]) /* ty=Tensor[(2, 1), uint32] */;
    %529 = reshape(%526, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %530 = @func_5235(%527, %528, %529) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) */;
    %531 = log(%523) /* ty=Tensor[(2, 5), float64] */;
    %532 = %530.5;
    (%531, %532, %var_5428, %var_5429, %var_5430)
  };
  %533(%var_5442, %var_5443, %var_5444) /* ty=(Tensor[(2, 5), float64], Tensor[(7, 13, 13), float64], uint32, Tensor[(2), uint32], Tensor[(144), uint8]) */
}

def @func_5576(%var_5496: Tensor[(24), uint8], %var_5549: Tensor[(2100), uint16], %var_5557: Tensor[(2100), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(5, 3, 6), int16], Tensor[(15), int16], Tensor[(90), int16], Tensor[(24), uint8], Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(108), float64], Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(2100), bool]) {
  %534 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
  %535 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), int16] */, dtype="int16") /* ty=Tensor[(15), int16] */;
  %536 = cast(meta[relay.Constant][43] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %537 = cast(%var_5496, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %538 = reshape(%535, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), int16] */;
  %539 = reshape(%536, newshape=[5, 3, 6]) /* ty=Tensor[(5, 3, 6), int16] */;
  %540 = reshape(%537, newshape=[24]) /* ty=Tensor[(24), uint8] */;
  %541 = @func_559(%538, %539, %540) /* ty=(Tensor[(5, 3, 6), int16], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(8, 18), uint8], Tensor[(2464), float64], Tensor[(2464), float64], Tensor[(108), float64]) */;
  %542 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %543 = cast(meta[relay.Constant][44] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %544 = reshape(%543, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %545 = @func_5026(%544) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
  %546 = cast(%var_5549, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %547 = cast(%var_5549, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %548 = cast(meta[relay.Constant][45] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %549 = reshape(%546, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %550 = reshape(%547, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint16] */;
  %551 = reshape(%548, newshape=[2464]) /* ty=Tensor[(2464), float64] */;
  %552 = @func_4153(%549, %550, %551) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %553 = cast(%var_5557, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %554 = shape_of(%var_5549, dtype="int32") /* ty=Tensor[(1), int32] */;
  %555 = cast(%var_5549, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?), bool] */;
  %557 = %534.0;
  %558 = %541.0;
  %559 = %542.0;
  %560 = %545.1;
  %561 = @func_4176() /* ty=Tensor[(108), float64] */;
  %562 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %563 = %552.2;
  %564 = greater(%555, %556) /* ty=Tensor[(2100), bool] */;
  (%557, %558, meta[relay.Constant][42] /* ty=Tensor[(15), int16] */, meta[relay.Constant][43] /* ty=Tensor[(90), int16] */, %var_5496, %559, %560, meta[relay.Constant][44] /* ty=Tensor[(72), uint16] */, %561, %562, %563, meta[relay.Constant][45] /* ty=Tensor[(2464), float64] */, %564)
}

def @func_111(%var_93: Tensor[(16, 11, 14), float64]) -> Tensor[(16, 11, 14), float64] {
  %565 = cast(%var_93, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  tan(%565) /* ty=Tensor[(16, 11, 14), float64] */
}

def @func_7386(%var_7383: Tensor[(30), int64], %var_7384: Tensor[(2100), uint16], %var_7385: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 3, 5), int64], Tensor[(30), int64], Tensor[(2464), float64], Tensor[(288), float32], Tensor[(2100), uint16], uint16, Tensor[(72), uint16], Tensor[(13, 15, 13), uint16]) {
  @func_7381(%var_7383, %var_7384, %var_7385) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(2, 3, 5), int64], Tensor[(30), int64], Tensor[(2464), float64], Tensor[(288), float32], Tensor[(2100), uint16], uint16, Tensor[(72), uint16], Tensor[(13, 15, 13), uint16]) */
}

def @func_6603() -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) {
  %572 = fn () -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) {
    %566 = @func_4542() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %567 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %568 = %567.0;
    %569 = cast(%568, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
    %570 = %566.0;
    %571 = log2(%569) /* ty=Tensor[(13, 15, 13), float32] */;
    (%570, %571)
  };
  %572() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) */
}

def @func_8370(%var_8368: Tensor[(14, 4, 7), float32]) -> (Tensor[(14, 4, 7), float32],) {
  @func_8367(%var_8368) /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_3658(%var_3652: Tensor[(108), float64], %var_3653: Tensor[(15, 1), int16]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) {
  %573 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %574 = %573.0;
  %575 = cast(%574, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %576 = reshape(%575, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %577 = @func_3188(%576) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %578 = cast(meta[relay.Constant][46] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %579 = cast(meta[relay.Constant][46] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %580 = cast(meta[relay.Constant][47] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %581 = cast(meta[relay.Constant][46] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %582 = cast(%var_3652, dtype="float64") /* ty=Tensor[(108), float64] */;
  %583 = cast(%var_3653, dtype="int16") /* ty=Tensor[(15, 1), int16] */;
  %584 = reshape(%578, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %585 = reshape(%579, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %586 = reshape(%580, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %587 = reshape(%581, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), bool] */;
  %588 = reshape(%582, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %589 = reshape(%583, newshape=[15]) /* ty=Tensor[(15), int16] */;
  %590 = @func_1823(%584, %585, %586, %587, %588, %589) /* ty=(Tensor[(6, 5, 3), int8], Tensor[(30), int8], Tensor[(4, 6, 7), uint16], Tensor[(4, 6, 7), float64], Tensor[(9, 6, 2), float64], Tensor[(108), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 616), float64], Tensor[(4, 6, 7), float32], Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(4, 6, 7), bool], Tensor[(108), float64], Tensor[(15), int16], Tensor[(24), uint8]) */;
  %591 = %577.0;
  %592 = %590.7;
  (%574, %591, %592, meta[relay.Constant][46] /* ty=Tensor[(42, 4), bool] */, meta[relay.Constant][47] /* ty=Tensor[(30), int8] */, %var_3652, %var_3653)
}

def @func_420(%var_411: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) {
  %593 = cast(%var_411, dtype="float64") /* ty=Tensor[(9, 6, 2), float64] */;
  %594 = cast(meta[relay.Constant][48] /* ty=Tensor[(2464), float64] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %595 = reshape(%594, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %596 = asin(%593) /* ty=Tensor[(9, 6, 2), float64] */;
  %597 = @func_111(%595) /* ty=Tensor[(16, 11, 14), float64] */;
  (%596, %597, meta[relay.Constant][48] /* ty=Tensor[(2464), float64] */)
}

def @func_5735(%var_5733: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), uint16],) {
  @func_5732(%var_5733) /* ty=(Tensor[(13, 15, 13), uint16],) */
}

def @func_8516(%var_8514: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) {
  @func_8513(%var_8514) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */
}

def @func_7741() -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) {
  %598 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %599 = cast(%598, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %600 = reshape(%599, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %601 = @func_4233(%600) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) */;
  %602 = @func_5881() /* ty=Tensor[(13, 15, 13), float64] */;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %604 = %601.0;
  %605 = cos(%603) /* ty=Tensor[(13, 15, 13), float32] */;
  (%598, %604, %605)
}

def @func_4514(%var_4513: Tensor[(1452), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) {
  %612 = fn (%var_4510: Tensor[(1452), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) {
    %606 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %607 = cast(%var_4510, dtype="float32") /* ty=Tensor[(1452), float32] */;
    %608 = reshape(%607, newshape=[12, 11, 11]) /* ty=Tensor[(12, 11, 11), float32] */;
    %609 = @func_2208(%608) /* ty=(Tensor[(12, 11, 11), float32],) */;
    %610 = %606.0;
    %611 = %609.0;
    (%610, %611, %var_4510)
  };
  %612(%var_4513) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) */
}

def @func_5581(%var_5578: Tensor[(24), uint8], %var_5579: Tensor[(2100), uint16], %var_5580: Tensor[(2100), uint16]) -> (Tensor[(13, 15, 13), float64], Tensor[(5, 3, 6), int16], Tensor[(15), int16], Tensor[(90), int16], Tensor[(24), uint8], Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(108), float64], Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(2100), bool]) {
  @func_5576(%var_5578, %var_5579, %var_5580) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(5, 3, 6), int16], Tensor[(15), int16], Tensor[(90), int16], Tensor[(24), uint8], Tensor[(13, 15, 13), float64], Tensor[(3, 4, 6), bool], Tensor[(72), uint16], Tensor[(108), float64], Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(2100), bool]) */
}

def @func_4918(%var_4916: Tensor[(7, 6, 14), bool], %var_4917: Tensor[(22, 66), float32]) -> (Tensor[(13, 15, 13), float64], Tensor[(588), float32], Tensor[(144, 2), float32], Tensor[(7, 6, 14), bool], Tensor[(13, 15, 13), bool], Tensor[(22, 66), float32]) {
  %634 = fn (%var_4902: Tensor[(7, 6, 14), bool], %var_4910: Tensor[(22, 66), float32]) -> (Tensor[(13, 15, 13), float64], Tensor[(588), float32], Tensor[(144, 2), float32], Tensor[(7, 6, 14), bool], Tensor[(13, 15, 13), bool], Tensor[(22, 66), float32]) {
    %613 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
    %614 = cast(meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %615 = cast(meta[relay.Constant][50] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %616 = cast(meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %617 = cast(meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %618 = reshape(%614, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %619 = reshape(%615, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %620 = reshape(%616, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %621 = reshape(%617, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %622 = @func_3572(%618, %619, %620, %621) /* ty=(Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) */;
    %623 = %622.6;
    %624 = cast(%var_4902, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %628 = cast(%var_4910, dtype="float32") /* ty=Tensor[(22, 66), float32] */;
    %629 = reshape(%628, newshape=[1452]) /* ty=Tensor[(1452), float32] */;
    %630 = @func_4512(%629) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(12, 11, 11), float32], Tensor[(1452), float32]) */;
    %631 = %613.0;
    %632 = greater_equal(%626, %627) /* ty=Tensor[(7, 6, 14), bool] */;
    %633 = %630.0;
    (%631, meta[relay.Constant][49] /* ty=Tensor[(588), float32] */, meta[relay.Constant][50] /* ty=Tensor[(144, 2), float32] */, %632, %633, %var_4910)
  };
  %634(%var_4916, %var_4917) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(588), float32], Tensor[(144, 2), float32], Tensor[(7, 6, 14), bool], Tensor[(13, 15, 13), bool], Tensor[(22, 66), float32]) */
}

def @func_6844() -> (Tensor[(5, 1, 10), float64], Tensor[(18, 6), float64]) {
  %635 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %636 = @func_6538() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) */;
  %637 = cosh(%635) /* ty=Tensor[(5, 1, 10), float64] */;
  %638 = %636.1;
  (%637, %638)
}

def @func_6811(%var_6807: Tensor[(1, 11, 11), int32], %var_6808: Tensor[(9, 11, 11), int32], %var_6809: Tensor[(11, 11, 11), int32], %var_6810: Tensor[(88, 28), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(11, 11, 11), bool], Tensor[(9, 11, 11), float32], Tensor[(16, 11, 14), float64], Tensor[(88, 28), float64]) {
  %654 = fn (%var_6767: Tensor[(1, 11, 11), int32], %var_6768: Tensor[(9, 11, 11), int32], %var_6779: Tensor[(11, 11, 11), int32], %var_6804: Tensor[(88, 28), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(11, 11, 11), bool], Tensor[(9, 11, 11), float32], Tensor[(16, 11, 14), float64], Tensor[(88, 28), float64]) {
    %639 = cast(%var_6767, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
    %640 = cast(%var_6779, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
    %641 = cast(%var_6767, dtype="int32") /* ty=Tensor[(1, 11, 11), int32] */;
    %642 = cast(%var_6768, dtype="int32") /* ty=Tensor[(9, 11, 11), int32] */;
    %643 = add(%641, %642) /* ty=Tensor[(9, 11, 11), int32] */;
    %644 = cast(%var_6768, dtype="float32") /* ty=Tensor[(9, 11, 11), float32] */;
    %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%643, dtype="float32") /* ty=Tensor[(9, 11, 11), float32] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %648 = cast(%var_6804, dtype="float64") /* ty=Tensor[(88, 28), float64] */;
    %649 = reshape(%648, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
    %650 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
    %651 = logical_and(%639, %640) /* ty=Tensor[(11, 11, 11), bool] */;
    %652 = mod(%646, %647) /* ty=Tensor[(9, 11, 11), float32] */;
    %653 = @func_111(%649) /* ty=Tensor[(16, 11, 14), float64] */;
    (%650, %651, %652, %653, %var_6804)
  };
  %654(%var_6807, %var_6808, %var_6809, %var_6810) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(11, 11, 11), bool], Tensor[(9, 11, 11), float32], Tensor[(16, 11, 14), float64], Tensor[(88, 28), float64]) */
}

def @func_6478(%var_6477: bool) -> (Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) {
  %666 = fn (%var_6447: bool) -> (Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) {
    %655 = cast(%var_6447, dtype="bool") /* ty=bool */;
    %656 = cast(meta[relay.Constant][52] /* ty=Tensor[(2), bool] */, dtype="bool") /* ty=Tensor[(2), bool] */;
    %657 = reshape(%655, newshape=[]) /* ty=bool */;
    %658 = reshape(%656, newshape=[2, 1]) /* ty=Tensor[(2, 1), bool] */;
    %659 = @func_6372() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
    %660 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
    %661 = %660.0;
    %662 = cast(%661, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
    %663 = @func_5623(%657, %658) /* ty=Tensor[(2, 1), bool] */;
    %664 = %659.0;
    %665 = tan(%662) /* ty=Tensor[(13, 15, 13), float64] */;
    (%663, %var_6447, meta[relay.Constant][52] /* ty=Tensor[(2), bool] */, %664, %665)
  };
  %666(%var_6477) /* ty=(Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) */
}

def @func_3704() -> Tensor[(13, 15, 13), float64] {
  %667 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
  %668 = %667.0;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  log10(%669) /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_3121(%var_3119: Tensor[(6, 6, 9), int8], %var_3120: Tensor[(6, 6, 9), int8]) -> (Tensor[(6, 6, 9), int8],) {
  @func_3117(%var_3119, %var_3120) /* ty=(Tensor[(6, 6, 9), int8],) */
}

def @func_7707(%var_7704: bool) -> (Tensor[(13, 15, 13), float64], Tensor[(30), int8], bool, bool) {
  %670 = @func_6372() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
  %671 = cast(%var_7704, dtype="bool") /* ty=bool */;
  %672 = reshape(%671, newshape=[]) /* ty=bool */;
  %673 = @func_6476(%672) /* ty=(Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) */;
  %674 = @func_6091() /* ty=Tensor[(13, 15, 13), float64] */;
  %675 = %670.2;
  %676 = %673.1;
  (%674, %675, %676, %var_7704)
}

def @func_2684(%var_2683: Tensor[(4, 12, 6), float32]) -> (Tensor[(4, 12, 6), float32],) {
  %679 = fn (%var_2678: Tensor[(4, 12, 6), float32]) -> (Tensor[(4, 12, 6), float32],) {
    %677 = cast(%var_2678, dtype="float32") /* ty=Tensor[(4, 12, 6), float32] */;
    %678 = exp(%677) /* ty=Tensor[(4, 12, 6), float32] */;
    (%678,)
  };
  %679(%var_2683) /* ty=(Tensor[(4, 12, 6), float32],) */
}

def @func_2160(%var_2158: Tensor[(14, 6, 6), float64], %var_2159: Tensor[(1890), float64]) -> (Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) {
  @func_2156(%var_2158, %var_2159) /* ty=(Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) */
}

def @func_4235(%var_4234: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) {
  %701 = fn (%var_4222: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) {
    %680 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %681 = %680.0;
    %682 = cast(%681, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
    %683 = reshape(%682, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
    %684 = @func_3188(%683) /* ty=(Tensor[(13, 15, 13), bool],) */;
    %685 = cast(%var_4222, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
    %686 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%681, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %689 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %690 = cast(meta[relay.Constant][54] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %691 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %692 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %693 = reshape(%689, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %694 = reshape(%690, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %695 = reshape(%691, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %696 = reshape(%692, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), float32] */;
    %697 = @func_3572(%693, %694, %695, %696) /* ty=(Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) */;
    %698 = %684.0;
    %699 = not_equal(%687, %688) /* ty=Tensor[(13, 15, 13), bool] */;
    %700 = %697.4;
    (%698, %699, %700, meta[relay.Constant][53] /* ty=Tensor[(588), float32] */, meta[relay.Constant][54] /* ty=Tensor[(288), float32] */)
  };
  %701(%var_4234) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(10, 160), float64], Tensor[(588), float32], Tensor[(288), float32]) */
}

def @func_7710(%var_7708: bool) -> (Tensor[(13, 15, 13), float64], Tensor[(30), int8], bool, bool) {
  @func_7707(%var_7708) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(30), int8], bool, bool) */
}

def @func_7381(%var_7356: Tensor[(30), int64], %var_7369: Tensor[(2100), uint16], %var_7371: Tensor[(72), uint16]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 3, 5), int64], Tensor[(30), int64], Tensor[(2464), float64], Tensor[(288), float32], Tensor[(2100), uint16], uint16, Tensor[(72), uint16], Tensor[(13, 15, 13), uint16]) {
  %702 = @func_4616() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %703 = %702.0;
  %704 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 15, 13), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = cast(%var_7356, dtype="int64") /* ty=Tensor[(30), int64] */;
  %709 = reshape(%708, newshape=[2, 3, 5]) /* ty=Tensor[(2, 3, 5), int64] */;
  %710 = @func_6069(%709) /* ty=(Tensor[(2, 3, 5), int64],) */;
  %711 = greater(%706, %707) /* ty=Tensor[(13, 15, 13), bool] */;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %713 = cast(meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %714 = cast(%var_7369, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %715 = cast(meta[relay.Constant][57] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %716 = cast(%var_7371, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %717 = reshape(%712, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %718 = reshape(%713, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %719 = reshape(%714, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %720 = reshape(%715, newshape=[]) /* ty=uint16 */;
  %721 = reshape(%716, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %722 = @func_6305(%717, %718, %719, %720, %721) /* ty=(Tensor[(108), float64], Tensor[(13, 15, 13), int32], Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(30, 70), uint16], Tensor[(2100), uint16], Tensor[(2464), float64], Tensor[(2535), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
  %723 = cast(%711, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %724 = reshape(%723, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %725 = @func_5732(%724) /* ty=(Tensor[(13, 15, 13), uint16],) */;
  %726 = %710.0;
  %727 = %722.6;
  %728 = %725.0;
  (%711, %726, %var_7356, %727, meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, %var_7369, meta[relay.Constant][57] /* ty=uint16 */, %var_7371, %728)
}

def @func_8063(%var_8061: Tensor[(1183, 1), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(15, 1), int16], Tensor[(1183, 1), float64], Tensor[(15), int16], Tensor[(6, 6, 9), int8], Tensor[(324), int8]) {
  @func_8060(%var_8061) /* ty=(Tensor[(13, 15, 13), float32], Tensor[(15, 1), int16], Tensor[(1183, 1), float64], Tensor[(15), int16], Tensor[(6, 6, 9), int8], Tensor[(324), int8]) */
}

def @func_4358(%var_4357: Tensor[(3, 630), float64]) -> (Tensor[(108), float64], Tensor[(14, 6, 6), float64], Tensor[(504), float64], Tensor[(3, 630), float64], Tensor[(13, 15, 13), bool], Tensor[(2535, 1), bool]) {
  %740 = fn (%var_4327: Tensor[(3, 630), float64]) -> (Tensor[(108), float64], Tensor[(14, 6, 6), float64], Tensor[(504), float64], Tensor[(3, 630), float64], Tensor[(13, 15, 13), bool], Tensor[(2535, 1), bool]) {
    %729 = cast(meta[relay.Constant][58] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %730 = cast(%var_4327, dtype="float64") /* ty=Tensor[(3, 630), float64] */;
    %731 = reshape(%729, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float64] */;
    %732 = reshape(%730, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %733 = @func_2156(%731, %732) /* ty=(Tensor[(14, 6, 6), float64], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(30), int8]) */;
    %734 = cast(meta[relay.Constant][59] /* ty=Tensor[(2535, 1), bool] */, dtype="bool") /* ty=Tensor[(2535, 1), bool] */;
    %735 = reshape(%734, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
    %736 = @func_3188(%735) /* ty=(Tensor[(13, 15, 13), bool],) */;
    %737 = @func_4176() /* ty=Tensor[(108), float64] */;
    %738 = %733.0;
    %739 = %736.0;
    (%737, %738, meta[relay.Constant][58] /* ty=Tensor[(504), float64] */, %var_4327, %739, meta[relay.Constant][59] /* ty=Tensor[(2535, 1), bool] */)
  };
  %740(%var_4357) /* ty=(Tensor[(108), float64], Tensor[(14, 6, 6), float64], Tensor[(504), float64], Tensor[(3, 630), float64], Tensor[(13, 15, 13), bool], Tensor[(2535, 1), bool]) */
}

def @func_4597(%var_4595: Tensor[(30, 70), uint16], %var_4596: Tensor[(1232, 2), float64]) -> (Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) {
  @func_4593(%var_4595, %var_4596) /* ty=(Tensor[(16, 11, 14), float64], Tensor[(30, 70), uint16], Tensor[(1232, 2), float64], Tensor[(13, 15, 13), bool]) */
}

def @func_6091() -> Tensor[(13, 15, 13), float64] {
  %741 = @func_3841() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(108), float64]) */;
  %741.0
}

def @func_2415(%var_2413: Tensor[(11, 4, 14), uint16]) -> Tensor[(11, 4, 14), uint16] {
  @func_2412(%var_2413) /* ty=Tensor[(11, 4, 14), uint16] */
}

def @func_2504(%var_2499: Tensor[(2, 4, 6), int64], %var_2500: Tensor[(2, 4, 6), int64], %var_2501: Tensor[(1680), float64], %var_2502: Tensor[(2112), int64], %var_2503: Tensor[(1680), float64]) -> (Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) {
  @func_2497(%var_2499, %var_2500, %var_2501, %var_2502, %var_2503) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */
}

def @func_6093() -> Tensor[(13, 15, 13), float64] {
  @func_6091() /* ty=Tensor[(13, 15, 13), float64] */
}

def @func_8342(%var_8324: Tensor[(13, 15, 13), bool], %var_8338: Tensor[(1600), float64], %var_8339: uint16) -> (Tensor[(13, 15, 13), float32], Tensor[(1183), float64], Tensor[(616), uint16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(3, 24), uint16], Tensor[(1600), float64], uint16) {
  %742 = @func_6602() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float32]) */;
  %743 = cast(meta[relay.Constant][60] /* ty=Tensor[(616), uint16] */, dtype="uint16") /* ty=Tensor[(616), uint16] */;
  %744 = reshape(%743, newshape=[616]) /* ty=Tensor[(616), uint16] */;
  %745 = @func_6022(%744) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(616), float64]) */;
  %746 = @func_7907() /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(616), uint16], Tensor[(108), float64]) */;
  %747 = %746.0;
  %748 = cast(%var_8324, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%747, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %752 = cast(%var_8338, dtype="float64") /* ty=Tensor[(1600), float64] */;
  %753 = cast(%var_8339, dtype="uint16") /* ty=uint16 */;
  %754 = reshape(%752, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
  %755 = reshape(%753, newshape=[]) /* ty=uint16 */;
  %756 = @func_729(%754, %755) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
  %757 = %742.1;
  %758 = %745.2;
  %759 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
  %760 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  %761 = power(%750, %751) /* ty=Tensor[(13, 15, 13), float64] */;
  %762 = %756.3;
  (%757, %758, meta[relay.Constant][60] /* ty=Tensor[(616), uint16] */, %759, %760, %761, %762, %var_8338, %var_8339)
}

def @func_5325(%var_5265: Tensor[(84, 20), float64], %var_5285: Tensor[(15), int16], %var_5301: Tensor[(6, 18), float64]) -> (Tensor[(13, 15, 13), float32], Tensor[(840, 2), float64], Tensor[(11, 22), uint32], Tensor[(84, 20), float64], Tensor[(2112, 1), int64], Tensor[(1183), float64], Tensor[(15, 1), int16], Tensor[(15), int16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(6, 18), float64], Tensor[(2, 4, 6), int64], Tensor[(48), int64]) {
  %763 = @func_3820() /* ty=(Tensor[(13, 15, 13), float64],) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
  %766 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 22), uint32] */, dtype="uint32") /* ty=Tensor[(11, 22), uint32] */;
  %767 = cast(%var_5265, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %768 = cast(meta[relay.Constant][62] /* ty=Tensor[(2112, 1), int64] */, dtype="int64") /* ty=Tensor[(2112, 1), int64] */;
  %769 = cast(meta[relay.Constant][63] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %770 = reshape(%766, newshape=[242]) /* ty=Tensor[(242), uint32] */;
  %771 = reshape(%767, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
  %772 = reshape(%768, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %773 = reshape(%769, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %774 = @func_5123(%770, %771, %772, %773) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) */;
  %775 = cast(meta[relay.Constant][63] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %776 = cast(%var_5285, dtype="int16") /* ty=Tensor[(15), int16] */;
  %777 = reshape(%775, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %778 = reshape(%776, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %779 = @func_4257(%777, %778) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
  %780 = cast(%var_5301, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %781 = cast(%var_5285, dtype="int16") /* ty=Tensor[(15), int16] */;
  %782 = reshape(%780, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %783 = reshape(%781, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
  %784 = @func_3658(%782, %783) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), bool], Tensor[(4, 616), float64], Tensor[(42, 4), bool], Tensor[(30), int8], Tensor[(108), float64], Tensor[(15, 1), int16]) */;
  %785 = cast(meta[relay.Constant][64] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %786 = cast(meta[relay.Constant][64] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %787 = cast(%var_5265, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %788 = cast(meta[relay.Constant][62] /* ty=Tensor[(2112, 1), int64] */, dtype="int64") /* ty=Tensor[(2112, 1), int64] */;
  %789 = %774.7;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %791 = reshape(%785, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %792 = reshape(%786, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), int64] */;
  %793 = reshape(%787, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %794 = reshape(%788, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
  %795 = reshape(%790, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %796 = @func_2497(%791, %792, %793, %794, %795) /* ty=(Tensor[(2, 4, 6), int64], Tensor[(72), uint16], Tensor[(2112), int64], Tensor[(1680), uint16]) */;
  %797 = asin(%765) /* ty=Tensor[(13, 15, 13), float32] */;
  %798 = %779.5;
  %799 = @func_4489() /* ty=Tensor[(13, 15, 13), float64] */;
  %800 = %784.1;
  %801 = %796.0;
  (%797, %789, meta[relay.Constant][61] /* ty=Tensor[(11, 22), uint32] */, %var_5265, meta[relay.Constant][62] /* ty=Tensor[(2112, 1), int64] */, meta[relay.Constant][63] /* ty=Tensor[(1183), float64] */, %798, %var_5285, %799, %800, %var_5301, %801, meta[relay.Constant][64] /* ty=Tensor[(48), int64] */)
}

def @func_3190(%var_3189: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool],) {
  %809 = fn (%var_3180: Tensor[(13, 15, 13), bool]) -> (Tensor[(13, 15, 13), bool],) {
    %802 = @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %803 = %802.0;
    %804 = cast(%var_3180, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
    %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
    %806 = cast(%803, dtype="bool") /* ty=Tensor[(13, 15, 13), bool] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %808 = greater_equal(%806, %807) /* ty=Tensor[(13, 15, 13), bool] */;
    (%808,)
  };
  %809(%var_3189) /* ty=(Tensor[(13, 15, 13), bool],) */
}

def @func_8347(%var_8344: Tensor[(13, 15, 13), bool], %var_8345: Tensor[(1600), float64], %var_8346: uint16) -> (Tensor[(13, 15, 13), float32], Tensor[(1183), float64], Tensor[(616), uint16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(3, 24), uint16], Tensor[(1600), float64], uint16) {
  @func_8342(%var_8344, %var_8345, %var_8346) /* ty=(Tensor[(13, 15, 13), float32], Tensor[(1183), float64], Tensor[(616), uint16], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64], Tensor[(3, 24), uint16], Tensor[(1600), float64], uint16) */
}

def @func_8568() -> (Tensor[(108), float64],) {
  @func_8566() /* ty=(Tensor[(108), float64],) */
}

def @func_6152() -> (Tensor[(13, 15, 13), float64],) {
  %811 = fn () -> (Tensor[(13, 15, 13), float64],) {
    %810 = @func_5925() /* ty=Tensor[(13, 15, 13), float64] */;
    (%810,)
  };
  %811() /* ty=(Tensor[(13, 15, 13), float64],) */
}

def @func_7743() -> (Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) {
  @func_7741() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float32]) */
}

def @func_5128(%var_5124: Tensor[(242), uint32], %var_5125: Tensor[(840, 2), float64], %var_5126: Tensor[(2112), int64], %var_5127: Tensor[(1, 1183), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) {
  %844 = fn (%var_5075: Tensor[(242), uint32], %var_5096: Tensor[(840, 2), float64], %var_5097: Tensor[(2112), int64], %var_5118: Tensor[(1, 1183), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) {
    %812 = @func_4837() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8]) */;
    %813 = %812.0;
    %814 = cast(%813, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
    %815 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 72), uint16] */, dtype="uint16") /* ty=Tensor[(1, 72), uint16] */;
    %816 = reshape(%815, newshape=[72]) /* ty=Tensor[(72), uint16] */;
    %817 = @func_5026(%816) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(72), uint16]) */;
    %818 = %817.2;
    %819 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 72), uint16] */, dtype="int64") /* ty=Tensor[(1, 72), int64] */;
    %820 = cast(%818, dtype="int64") /* ty=int64 */;
    %821 = cast(%var_5075, dtype="uint32") /* ty=Tensor[(242), uint32] */;
    %822 = cast(%var_5075, dtype="uint32") /* ty=Tensor[(242), uint32] */;
    %823 = reshape(%821, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), uint32] */;
    %824 = reshape(%822, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), uint32] */;
    %825 = @func_2658(%823, %824) /* ty=(Tensor[(2, 11, 11), bool],) */;
    %826 = @func_4990() /* ty=(Tensor[(13, 15, 13), float64],) */;
    %827 = cast(%var_5096, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
    %828 = cast(%var_5097, dtype="int64") /* ty=Tensor[(2112), int64] */;
    %829 = reshape(%827, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
    %830 = reshape(%828, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
    %831 = @func_2251(%829, %830) /* ty=(Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) */;
    %832 = cast(%813, dtype="float32") /* ty=Tensor[(13, 15, 13), float32] */;
    %833 = cast(%var_5118, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
    %834 = reshape(%832, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
    %835 = reshape(%833, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
    %836 = @func_3520(%834, %835) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
    %837 = log(%814) /* ty=Tensor[(13, 15, 13), float64] */;
    %838 = multiply(%819, %820) /* ty=Tensor[(1, 72), int64] */;
    %839 = %825.0;
    %840 = %826.0;
    %841 = @func_4176() /* ty=Tensor[(108), float64] */;
    %842 = %831.6;
    %843 = %836.5;
    (%837, %838, %839, %var_5075, %840, %841, %842, %var_5096, %var_5097, %843, %var_5118)
  };
  %844(%var_5124, %var_5125, %var_5126, %var_5127) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) */
}

def @func_732(%var_730: Tensor[(10, 10, 16), float64], %var_731: uint16) -> (Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) {
  %852 = fn (%var_717: Tensor[(10, 10, 16), float64], %var_724: uint16) -> (Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) {
    %845 = cast(%var_717, dtype="float64") /* ty=Tensor[(10, 10, 16), float64] */;
    %846 = cast(%var_724, dtype="uint16") /* ty=uint16 */;
    %847 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 24), uint16] */, dtype="uint16") /* ty=Tensor[(3, 24), uint16] */;
    %848 = reshape(%846, newshape=[]) /* ty=uint16 */;
    %849 = reshape(%847, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint16] */;
    %850 = sin(%845) /* ty=Tensor[(10, 10, 16), float64] */;
    %851 = @func_392(%848, %849) /* ty=Tensor[(3, 4, 6), bool] */;
    (%850, %851, %var_724, meta[relay.Constant][66] /* ty=Tensor[(3, 24), uint16] */)
  };
  %852(%var_730, %var_731) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */
}

def @func_3138() -> (Tensor[(13, 15, 13), bool],) {
  @func_3136() /* ty=(Tensor[(13, 15, 13), bool],) */
}

def @func_5235(%var_5200: uint32, %var_5201: Tensor[(2, 1), uint32], %var_5223: Tensor[(144), uint8]) -> (Tensor[(13, 15, 13), bool], Tensor[(2, 2535), int64], Tensor[(2, 12, 6), uint8], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  %853 = cast(meta[relay.Constant][67] /* ty=Tensor[(2535), bool] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %854 = reshape(%853, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), bool] */;
  %855 = @func_3188(%854) /* ty=(Tensor[(13, 15, 13), bool],) */;
  %856 = cast(%var_5200, dtype="bool") /* ty=bool */;
  %857 = cast(%var_5201, dtype="bool") /* ty=Tensor[(2, 1), bool] */;
  %858 = equal(%856, %857) /* ty=Tensor[(2, 1), bool] */;
  %859 = cast(%858, dtype="int64") /* ty=Tensor[(2, 1), int64] */;
  %860 = cast(meta[relay.Constant][67] /* ty=Tensor[(2535), bool] */, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %861 = cast(meta[relay.Constant][68] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %862 = cast(%var_5223, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %863 = reshape(%861, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %864 = reshape(%862, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %865 = @func_271(%863, %864) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %866 = cast(meta[relay.Constant][67] /* ty=Tensor[(2535), bool] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %867 = cast(meta[relay.Constant][69] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %868 = reshape(%866, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float32] */;
  %869 = reshape(%867, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %870 = @func_3520(%868, %869) /* ty=(Tensor[(13, 15, 13), int32], Tensor[(3, 16, 5), float32], Tensor[(240), float32], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(13, 15, 13), float32]) */;
  %871 = %855.0;
  %872 = bitwise_or(%859, %860) /* ty=Tensor[(2, 2535), int64] */;
  %873 = %865.0;
  %874 = %870.3;
  (%871, %872, %873, meta[relay.Constant][68] /* ty=Tensor[(24), uint8] */, %var_5223, %874, meta[relay.Constant][69] /* ty=Tensor[(1183), float64] */)
}

def @func_7475(%var_7473: Tensor[(16, 5, 6), int64]) -> (Tensor[(16, 5, 6), int64], Tensor[(13, 15, 13), float64]) {
  @func_7472(%var_7473) /* ty=(Tensor[(16, 5, 6), int64], Tensor[(13, 15, 13), float64]) */
}

def @func_8566() -> (Tensor[(108), float64],) {
  %875 = @func_7427() /* ty=Tensor[(108), float64] */;
  (%875,)
}

def @func_392(%var_379: uint16, %var_380: Tensor[(3, 4, 6), uint16]) -> Tensor[(3, 4, 6), bool] {
  %876 = cast(%var_379, dtype="bool") /* ty=bool */;
  %877 = cast(%var_380, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
  greater(%876, %877) /* ty=Tensor[(3, 4, 6), bool] */
}

def @func_1975(%var_1972: Tensor[(15, 9, 14), float64], %var_1973: Tensor[(15, 9, 14), float64], %var_1974: Tensor[(30), int8]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  @func_1970(%var_1972, %var_1973, %var_1974) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */
}

def @func_7428() -> Tensor[(108), float64] {
  %878 = fn () -> Tensor[(108), float64] {
    @func_4176() /* ty=Tensor[(108), float64] */
  };
  %878() /* ty=Tensor[(108), float64] */
}

def @func_3577(%var_3573: Tensor[(7, 6, 14), float32], %var_3574: Tensor[(288), float32], %var_3575: Tensor[(7, 6, 14), float32], %var_3576: Tensor[(7, 6, 14), float32]) -> (Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) {
  %901 = fn (%var_3535: Tensor[(7, 6, 14), float32], %var_3542: Tensor[(288), float32], %var_3544: Tensor[(7, 6, 14), float32], %var_3565: Tensor[(7, 6, 14), float32]) -> (Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) {
    %879 = cast(%var_3542, dtype="float32") /* ty=Tensor[(288), float32] */;
    %880 = reshape(%879, newshape=[4, 12, 6]) /* ty=Tensor[(4, 12, 6), float32] */;
    %881 = @func_2682(%880) /* ty=(Tensor[(4, 12, 6), float32],) */;
    %882 = cast(%var_3535, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
    %883 = sigmoid(%882) /* ty=Tensor[(7, 6, 14), float32] */;
    %884 = cast(%var_3544, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
    %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%883, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %888 = cast(meta[relay.Constant][70] /* ty=Tensor[(10, 160), float64] */, dtype="float64") /* ty=Tensor[(10, 160), float64] */;
    %889 = cast(meta[relay.Constant][71] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %890 = reshape(%888, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
    %891 = reshape(%889, newshape=[]) /* ty=uint16 */;
    %892 = @func_729(%890, %891) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
    %893 = cast(%var_3565, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %894 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%883, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %897 = %881.0;
    %898 = mod(%886, %887) /* ty=Tensor[(7, 6, 14), float64] */;
    %899 = %892.2;
    %900 = not_equal(%895, %896) /* ty=Tensor[(7, 6, 14), bool] */;
    (%897, %var_3542, %898, %899, meta[relay.Constant][70] /* ty=Tensor[(10, 160), float64] */, meta[relay.Constant][71] /* ty=uint16 */, %900)
  };
  %901(%var_3573, %var_3574, %var_3575, %var_3576) /* ty=(Tensor[(4, 12, 6), float32], Tensor[(288), float32], Tensor[(7, 6, 14), float64], uint16, Tensor[(10, 160), float64], uint16, Tensor[(7, 6, 14), bool]) */
}

def @func_6758(%var_6756: Tensor[(2464), float32]) -> (Tensor[(13, 15, 13), bool], Tensor[(16, 11, 14), float64], Tensor[(13, 15, 13), float64], Tensor[(2464), uint64], Tensor[(13, 15, 13), float64]) {
  @func_6755(%var_6756) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(16, 11, 14), float64], Tensor[(13, 15, 13), float64], Tensor[(2464), uint64], Tensor[(13, 15, 13), float64]) */
}

def @func_4542() -> (Tensor[(13, 15, 13), float64],) {
  %902 = @func_3704() /* ty=Tensor[(13, 15, 13), float64] */;
  (%902,)
}

def @func_1970(%var_1926: Tensor[(15, 9, 14), float64], %var_1927: Tensor[(15, 9, 14), float64], %var_1952: Tensor[(30), int8]) -> (Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) {
  %903 = cast(%var_1927, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %904 = shape_of(%var_1926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_1926, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %907 = cast(meta[relay.Constant][72] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %908 = cast(meta[relay.Constant][73] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %909 = reshape(%907, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), uint8] */;
  %910 = reshape(%908, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), uint8] */;
  %911 = @func_271(%909, %910) /* ty=(Tensor[(2, 12, 6), uint8], Tensor[(16, 11, 14), float64], Tensor[(2464), float64], Tensor[(16, 11, 14), float64]) */;
  %912 = %911.1;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %914 = reshape(%913, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float64] */;
  %915 = cast(%var_1952, dtype="int8") /* ty=Tensor[(30), int8] */;
  %916 = reshape(%915, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), int8] */;
  %917 = power(%905, %906) /* ty=Tensor[(15, 9, 14), float64] */;
  %918 = @func_111(%914) /* ty=Tensor[(16, 11, 14), float64] */;
  %919 = @func_1137(%916) /* ty=Tensor[(6, 5, 3), int8] */;
  (%917, %912, meta[relay.Constant][72] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][73] /* ty=Tensor[(144), uint8] */, %918, %919, %var_1952)
}

def @func_4991() -> (Tensor[(13, 15, 13), float64],) {
  %921 = fn () -> (Tensor[(13, 15, 13), float64],) {
    %920 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
    (%920,)
  };
  %921() /* ty=(Tensor[(13, 15, 13), float64],) */
}

def @func_6540() -> (Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) {
  @func_6538() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) */
}

def @func_8264(%var_8200: Tensor[(14, 10, 16), uint64], %var_8234: Tensor[(18, 6), float64], %var_8248: Tensor[(18, 6), float64], %var_8253: Tensor[(18, 6), float64]) -> (Tensor[(14, 10, 16), uint64], Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(18, 6), bool], Tensor[(18, 6), float64]) {
  %922 = cast(meta[relay.Constant][74] /* ty=Tensor[(14, 1, 16), uint64] */, dtype="uint64") /* ty=Tensor[(14, 1, 16), uint64] */;
  %923 = cast(%var_8200, dtype="uint64") /* ty=Tensor[(14, 10, 16), uint64] */;
  %924 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %925 = cast(meta[relay.Constant][75] /* ty=Tensor[(2), bool] */, dtype="bool") /* ty=Tensor[(2), bool] */;
  %926 = reshape(%924, newshape=[]) /* ty=bool */;
  %927 = reshape(%925, newshape=[2, 1]) /* ty=Tensor[(2, 1), bool] */;
  %928 = cast(%var_8248, dtype="bool") /* ty=Tensor[(18, 6), bool] */;
  %929 = shape_of(%var_8234, dtype="int32") /* ty=Tensor[(2), int32] */;
  %930 = cast(%var_8234, dtype="bool") /* ty=Tensor[(18, 6), bool] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %932 = @func_6538() /* ty=(Tensor[(16, 11, 14), float64], Tensor[(18, 6), float64], Tensor[(24), float32]) */;
  %933 = %932.1;
  %934 = cast(%var_8234, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %935 = shape_of(%933, dtype="int32") /* ty=Tensor[(2), int32] */;
  %936 = cast(%933, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %938 = power(%936, %937) /* ty=Tensor[(18, 6), float64] */;
  %939 = cast(%var_8253, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(2), int32] */;
  %941 = cast(%938, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %943 = maximum(%922, %923) /* ty=Tensor[(14, 10, 16), uint64] */;
  %944 = @func_5623(%926, %927) /* ty=Tensor[(2, 1), bool] */;
  %945 = not_equal(%930, %931) /* ty=Tensor[(18, 6), bool] */;
  %946 = add(%941, %942) /* ty=Tensor[(18, 6), float64] */;
  (%943, %944, True /* ty=bool */, meta[relay.Constant][75] /* ty=Tensor[(2), bool] */, %945, %946)
}

def @func_6886(%var_6883: uint16, %var_6884: Tensor[(12, 11, 12), uint16], %var_6885: Tensor[(1890), float64]) -> (Tensor[(12, 11, 12), bool], Tensor[(2, 1), bool], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(10, 3), int8]) {
  %962 = fn (%var_6856: uint16, %var_6857: Tensor[(12, 11, 12), uint16], %var_6874: Tensor[(1890), float64]) -> (Tensor[(12, 11, 12), bool], Tensor[(2, 1), bool], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(10, 3), int8]) {
    %947 = cast(%var_6856, dtype="bool") /* ty=bool */;
    %948 = cast(%var_6857, dtype="bool") /* ty=Tensor[(12, 11, 12), bool] */;
    %949 = cast(%var_6856, dtype="bool") /* ty=bool */;
    %950 = reshape(%949, newshape=[]) /* ty=bool */;
    %951 = @func_6476(%950) /* ty=(Tensor[(2, 1), bool], bool, Tensor[(2), bool], Tensor[(13, 15, 13), float64], Tensor[(13, 15, 13), float64]) */;
    %952 = cast(%var_6874, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %953 = cast(%var_6874, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %954 = cast(meta[relay.Constant][76] /* ty=Tensor[(10, 3), int8] */, dtype="int8") /* ty=Tensor[(10, 3), int8] */;
    %955 = reshape(%952, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
    %956 = reshape(%953, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float64] */;
    %957 = reshape(%954, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %958 = @func_1970(%955, %956, %957) /* ty=(Tensor[(15, 9, 14), float64], Tensor[(16, 11, 14), float64], Tensor[(24), uint8], Tensor[(144), uint8], Tensor[(16, 11, 14), float64], Tensor[(6, 5, 3), int8], Tensor[(30), int8]) */;
    %959 = less_equal(%947, %948) /* ty=Tensor[(12, 11, 12), bool] */;
    %960 = %951.0;
    %961 = %958.4;
    (%959, %960, %961, %var_6874, meta[relay.Constant][76] /* ty=Tensor[(10, 3), int8] */)
  };
  %962(%var_6883, %var_6884, %var_6885) /* ty=(Tensor[(12, 11, 12), bool], Tensor[(2, 1), bool], Tensor[(16, 11, 14), float64], Tensor[(1890), float64], Tensor[(10, 3), int8]) */
}

def @func_8367(%var_8363: Tensor[(14, 4, 7), float32]) -> (Tensor[(14, 4, 7), float32],) {
  %963 = cast(%var_8363, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %964 = log2(%963) /* ty=Tensor[(14, 4, 7), float32] */;
  (%964,)
}

def @func_2254(%var_2252: Tensor[(14, 10, 12), float64], %var_2253: Tensor[(2112), int64]) -> (Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) {
  %984 = fn (%var_2229: Tensor[(14, 10, 12), float64], %var_2236: Tensor[(2112), int64]) -> (Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) {
    %965 = cast(%var_2229, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
    %966 = cast(%var_2236, dtype="int64") /* ty=Tensor[(2112), int64] */;
    %967 = cast(meta[relay.Constant][77] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %968 = cast(meta[relay.Constant][78] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %969 = reshape(%966, newshape=[12, 11, 16]) /* ty=Tensor[(12, 11, 16), int64] */;
    %970 = reshape(%967, newshape=[]) /* ty=uint16 */;
    %971 = reshape(%968, newshape=[36, 2]) /* ty=Tensor[(36, 2), uint16] */;
    %972 = @func_1063(%969, %970, %971) /* ty=(Tensor[(12, 11, 16), bool], Tensor[(3, 4, 6), bool], uint16, Tensor[(36, 2), uint16], Tensor[(12, 11, 16), float32]) */;
    %973 = cast(meta[relay.Constant][79] /* ty=Tensor[(800, 2), float64] */, dtype="float64") /* ty=Tensor[(800, 2), float64] */;
    %974 = cast(meta[relay.Constant][77] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %975 = reshape(%973, newshape=[10, 10, 16]) /* ty=Tensor[(10, 10, 16), float64] */;
    %976 = reshape(%974, newshape=[]) /* ty=uint16 */;
    %977 = @func_729(%975, %976) /* ty=(Tensor[(10, 10, 16), float64], Tensor[(3, 4, 6), bool], uint16, Tensor[(3, 24), uint16]) */;
    %978 = cast(%var_2229, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
    %979 = cast(meta[relay.Constant][77] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %980 = acos(%965) /* ty=Tensor[(14, 10, 12), float64] */;
    %981 = %972.4;
    %982 = %977.1;
    %983 = logical_xor(%978, %979) /* ty=Tensor[(14, 10, 12), uint16] */;
    (%980, %981, %var_2236, meta[relay.Constant][78] /* ty=Tensor[(72), uint16] */, %982, meta[relay.Constant][79] /* ty=Tensor[(800, 2), float64] */, %983)
  };
  %984(%var_2252, %var_2253) /* ty=(Tensor[(14, 10, 12), float64], Tensor[(12, 11, 16), float32], Tensor[(2112), int64], Tensor[(72), uint16], Tensor[(3, 4, 6), bool], Tensor[(800, 2), float64], Tensor[(14, 10, 12), uint16]) */
}

def @func_8168(%var_8165: Tensor[(15), int16], %var_8166: Tensor[(1680), float64], %var_8167: Tensor[(2112), int64]) -> (Tensor[(13, 15, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(15), int16], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float64], Tensor[(242), uint32], Tensor[(1680), float64], Tensor[(2112), int64]) {
  %1004 = fn (%var_8123: Tensor[(15), int16], %var_8146: Tensor[(1680), float64], %var_8147: Tensor[(2112), int64]) -> (Tensor[(13, 15, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(15), int16], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float64], Tensor[(242), uint32], Tensor[(1680), float64], Tensor[(2112), int64]) {
    %985 = cast(meta[relay.Constant][80] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %986 = cast(%var_8123, dtype="int16") /* ty=Tensor[(15), int16] */;
    %987 = reshape(%985, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
    %988 = reshape(%986, newshape=[15, 1]) /* ty=Tensor[(15, 1), int16] */;
    %989 = @func_4257(%987, %988) /* ty=(Tensor[(13, 15, 13), bool], Tensor[(7, 13, 13), float64], Tensor[(1, 1183), float64], Tensor[(13, 15, 13), bool], Tensor[(18, 6), float64], Tensor[(15, 1), int16]) */;
    %990 = @func_3353() /* ty=(Tensor[(13, 15, 13), bool],) */;
    %991 = cast(meta[relay.Constant][81] /* ty=Tensor[(242), uint32] */, dtype="uint32") /* ty=Tensor[(242), uint32] */;
    %992 = cast(%var_8146, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %993 = cast(%var_8147, dtype="int64") /* ty=Tensor[(2112), int64] */;
    %994 = cast(meta[relay.Constant][80] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %995 = reshape(%991, newshape=[242]) /* ty=Tensor[(242), uint32] */;
    %996 = reshape(%992, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
    %997 = reshape(%993, newshape=[2112]) /* ty=Tensor[(2112), int64] */;
    %998 = reshape(%994, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
    %999 = @func_5123(%995, %996, %997, %998) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 72), int64], Tensor[(2, 11, 11), bool], Tensor[(242), uint32], Tensor[(13, 15, 13), float64], Tensor[(108), float64], Tensor[(14, 10, 12), uint16], Tensor[(840, 2), float64], Tensor[(2112), int64], Tensor[(13, 15, 13), float32], Tensor[(1, 1183), float64]) */;
    %1000 = @func_5681() /* ty=Tensor[(13, 15, 13), float64] */;
    %1001 = %989.1;
    %1002 = %990.0;
    %1003 = %999.4;
    (%1000, %1001, meta[relay.Constant][80] /* ty=Tensor[(1183), float64] */, %var_8123, %1002, %1003, meta[relay.Constant][81] /* ty=Tensor[(242), uint32] */, %var_8146, %var_8147)
  };
  %1004(%var_8165, %var_8166, %var_8167) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64], Tensor[(15), int16], Tensor[(13, 15, 13), bool], Tensor[(13, 15, 13), float64], Tensor[(242), uint32], Tensor[(1680), float64], Tensor[(2112), int64]) */
}

def @func_7841() -> (Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64]) {
  %1005 = @func_6627() /* ty=(Tensor[(13, 15, 13), float64], Tensor[(16, 11, 14), float64], Tensor[(2464), float64]) */;
  %1006 = @func_4610() /* ty=Tensor[(13, 15, 13), float64] */;
  %1007 = %1005.1;
  (%1006, %1007)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen300/build/output.py:2270: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen300/build/output.py", line 2275, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(104) tvmgen_default_fused_cast_cast_reshape_right_shift_kernel0(signed char* __restrict__ T_right_shift, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (((signed char)placeholder[(((int)threadIdx.x))]) >> ((signed char)placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(104) tvmgen_default_fused_log_kernel0(double* __restrict__ T_log, double* __restrict__ placeholder) {
  T_log[(((int)threadIdx.x))] = log(placeholder[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(104) tvmgen_default_fused_sinh_kernel0(double* __restrict__ T_sinh, double* __restrict__ placeholder) {
  T_sinh[(((int)threadIdx.x))] = sinh(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_13370() -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float64]) {
  %0 = @func_10717() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) */;
  %1 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %2 = %0.0;
  %3 = @func_7286() /* ty=Tensor[(784), float64] */;
  %4 = %1.0;
  (%2, %3, %4)
}

def @func_16312() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %5 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %6 = @func_11785() /* ty=Tensor[(5, 12, 11), int64] */;
  %7 = %5.0;
  (%6, %7)
}

def @func_2819(%var_2809: Tensor[(12, 6, 5), float64]) -> (Tensor[(12, 6, 5), float64],) {
  %8 = cast(%var_2809, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
  %9 = atanh(%8) /* ty=Tensor[(12, 6, 5), float64] */;
  (%9,)
}

def @func_4665(%var_4662: Tensor[(840), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) {
  %10 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %11 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %14 = tan(%13) /* ty=Tensor[(4, 7, 4), float32] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %16 = cast(%var_4662, dtype="float32") /* ty=Tensor[(840), float32] */;
  %17 = reshape(%16, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %18 = %10.0;
  %19 = asin(%15) /* ty=Tensor[(4, 7, 4), float64] */;
  %20 = @func_2214(%17) /* ty=Tensor[(4, 14, 15), float32] */;
  (%18, %19, %20, %var_4662)
}

def @func_1934(%var_1909: Tensor[(1, 8, 6), float64], %var_1910: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) {
  %21 = cast(%var_1910, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %22 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%var_1909, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %25 = floor_mod(%23, %24) /* ty=Tensor[(?, 8, 6), float64] */;
  %26 = cast(%var_1910, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="bool") /* ty=Tensor[(?, 8, 6), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %31 = reshape(%30, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %32 = @func_1464(%31) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 560), float32] */, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
  %34 = reshape(%33, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), float32] */;
  %35 = @func_742(%34) /* ty=(Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) */;
  %36 = less(%28, %29) /* ty=Tensor[(?, 8, 6), bool] */;
  %37 = %32.0;
  %38 = %35.1;
  (%36, %37, meta[relay.Constant][0] /* ty=Tensor[(784), float64] */, %38, meta[relay.Constant][1] /* ty=Tensor[(2, 560), float32] */)
}

def @func_8548() -> (Tensor[(784), float64],) {
  %39 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %40 = %39.4;
  (%40,)
}

def @func_2908(%var_2852: Tensor[(1, 1, 5), float64]) -> (Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) {
  %41 = cast(%var_2852, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %43 = reshape(%42, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %45 = sigmoid(%44) /* ty=Tensor[(60, 14), float32] */;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %47 = reshape(%46, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %48 = rsqrt(%41) /* ty=Tensor[(1, 1, 5), float64] */;
  %49 = @func_2214(%43) /* ty=Tensor[(4, 14, 15), float32] */;
  %50 = @func_2214(%47) /* ty=Tensor[(4, 14, 15), float32] */;
  (%48, %49, %45, %50)
}

def @func_13509() -> Tensor[(3, 4, 1), float32] {
  @func_12067() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_13570() -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32]) {
  %51 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %52 = %51.0;
  %53 = @func_7693() /* ty=Tensor[(336), float32] */;
  (%52, %53)
}

def @func_4285() -> (Tensor[(4, 7, 4), float32],) {
  %54 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%54,)
}

def @func_11331() -> (Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %55 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %56 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %57 = @func_9363() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %58 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %59 = @func_7286() /* ty=Tensor[(784), float64] */;
  %60 = %55.0;
  %61 = %56.0;
  %62 = %57.0;
  %63 = %58.0;
  (%59, %60, %61, %62, %63)
}

def @func_4364() -> (Tensor[(4, 7, 4), float32],) {
  %64 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %65 = %64.0;
  (%65,)
}

def @func_14379() -> (Tensor[(784), float64], Tensor[(15), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
  %66 = @func_13994() /* ty=(Tensor[(784), float64], Tensor[(5, 12, 11), int64]) */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %68 = reshape(%67, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %69 = @func_8521(%68) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) */;
  %70 = @func_6660() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %71 = %66.0;
  %72 = %69.2;
  %73 = %70.2;
  (%71, %72, meta[relay.Constant][3] /* ty=Tensor[(15), float64] */, %73)
}

def @func_11896() -> (Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) {
  %74 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %76 = reshape(%75, newshape=[7, 13, 10]) /* ty=Tensor[(7, 13, 10), float64] */;
  %77 = @func_8741(%76) /* ty=(Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %78 = %74.2;
  %79 = %77.2;
  (%78, %79, meta[relay.Constant][4] /* ty=Tensor[(910), float64] */)
}

def @func_13169() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) {
  %80 = @func_6239() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %81 = @func_13111() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_4479() -> Tensor[(5, 12, 11), int64] {
  %84 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %84.0
}

def @func_9811() -> (Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  %85 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %87 = reshape(%86, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %88 = @func_7112(%87) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %89 = @func_9205() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
  %90 = log2(%85) /* ty=Tensor[(13, 13, 10), float32] */;
  %91 = %88.3;
  %92 = %89.0;
  (%90, %91, meta[relay.Constant][6] /* ty=Tensor[(210), float64] */, %92)
}

def @func_7559() -> Tensor[(336), float32] {
  %93 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %93.1
}

def @func_11451() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  %94 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %95 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
  %96 = %94.0;
  %97 = %95.0;
  (%96, %97)
}

def @func_10873() -> (Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) {
  %98 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %99 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %100 = %98.0;
  %101 = %99.0;
  (%100, %101)
}

def @func_8741(%var_8662: Tensor[(7, 13, 10), float64]) -> (Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %103 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_8662, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %106 = mod(%104, %105) /* ty=Tensor[(7, 13, 10), float64] */;
  %107 = cast(%106, dtype="uint64") /* ty=Tensor[(7, 13, 10), uint64] */;
  %108 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%var_8662, dtype="uint64") /* ty=Tensor[(7, 13, 10), uint64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %111 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %112 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %113 = add(%109, %110) /* ty=Tensor[(7, 13, 10), uint64] */;
  %114 = %111.0;
  %115 = %112.0;
  (%113, %114, %115)
}

def @func_4247() -> (Tensor[(5, 12, 11), int64],) {
  %116 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %117 = log10(%116) /* ty=Tensor[(5, 12, 11), float64] */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 12, 11), float64] */, dtype="int64") /* ty=Tensor[(5, 12, 11), int64] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="int64") /* ty=Tensor[(5, 12, 11), int64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %122 = logical_xor(%120, %121) /* ty=Tensor[(5, 12, 11), int64] */;
  (%122,)
}

def @func_14915(%var_14903: Tensor[(5, 12, 11), int64]) -> (Tensor[(5, 12, 11), uint16],) {
  %123 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %124 = %123.0;
  %125 = cast(%var_14903, dtype="uint16") /* ty=Tensor[(5, 12, 11), uint16] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="uint16") /* ty=Tensor[(5, 12, 11), uint16] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %129 = left_shift(%127, %128) /* ty=Tensor[(5, 12, 11), uint16] */;
  (%129,)
}

def @func_10717() -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) {
  %130 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %131 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %132 = %130.0;
  %133 = %131.0;
  (%132, %133)
}

def @func_14500(%var_14484: Tensor[(360), float64], %var_14495: Tensor[(384), float32], %var_14496: Tensor[(5), float64]) -> (Tensor[(12, 5, 8), float32], Tensor[(12, 6, 5), float64], Tensor[(360), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64]) {
  %134 = @func_11451() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %135 = cast(%var_14484, dtype="float64") /* ty=Tensor[(360), float64] */;
  %136 = reshape(%135, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %137 = @func_2819(%136) /* ty=(Tensor[(12, 6, 5), float64],) */;
  %138 = cast(%var_14495, dtype="float32") /* ty=Tensor[(384), float32] */;
  %139 = cast(%var_14496, dtype="float64") /* ty=Tensor[(5), float64] */;
  %140 = reshape(%138, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %141 = reshape(%139, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %142 = @func_5875(%140, %141) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) */;
  %143 = %134.1;
  %144 = %137.0;
  %145 = %142.1;
  (%143, %144, %var_14484, %145, %var_14495, %var_14496)
}

def @func_9235() -> Tensor[(4, 7, 4), float64] {
  %146 = @func_7263() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %146.0
}

def @func_2776(%var_2751: Tensor[(6, 4, 16), float32]) -> Tensor[(6, 4, 16), float32] {
  %147 = cast(%var_2751, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
  erf(%147) /* ty=Tensor[(6, 4, 16), float32] */
}

def @func_9459(%var_9400: Tensor[(2, 1280), int64], %var_9443: Tensor[(2, 1280), int64]) -> (Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) {
  %148 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
  %149 = cast(meta[relay.Constant][9] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %150 = reshape(%149, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %151 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %152 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %153 = reshape(%151, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
  %154 = reshape(%152, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
  %155 = @func_4119(%153, %154) /* ty=(Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) */;
  %156 = @func_2214(%150) /* ty=Tensor[(4, 14, 15), float32] */;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(4, 14, 15), float32] */;
  %158 = reshape(%157, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %159 = cast(%var_9400, dtype="float32") /* ty=Tensor[(2, 1280), float32] */;
  %160 = atan(%159) /* ty=Tensor[(2, 1280), float32] */;
  %161 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(2), int32] */;
  %163 = cast(%160, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %165 = bitwise_and(%163, %164) /* ty=Tensor[(2, 1280), int64] */;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(2, 1280), float64] */;
  %167 = log10(%166) /* ty=Tensor[(2, 1280), float64] */;
  %168 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 1280), float64] */, dtype="uint64") /* ty=Tensor[(2, 1280), uint64] */;
  %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %170 = cast(%167, dtype="uint64") /* ty=Tensor[(2, 1280), uint64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %172 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %173 = shape_of(%167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %174 = cast(%167, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %176 = left_shift(%174, %175) /* ty=Tensor[(2, 1280), int64] */;
  %177 = cast(%var_9443, dtype="int8") /* ty=Tensor[(2, 1280), int8] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(2), int32] */;
  %179 = cast(%176, dtype="int8") /* ty=Tensor[(2, 1280), int8] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %181 = cast(%160, dtype="uint8") /* ty=Tensor[(2, 1280), uint8] */;
  %182 = shape_of(%167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %183 = cast(%167, dtype="uint8") /* ty=Tensor[(2, 1280), uint8] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %185 = %148.0;
  %186 = %155.2;
  %187 = @func_2214(%158) /* ty=Tensor[(4, 14, 15), float32] */;
  %188 = maximum(%170, %171) /* ty=Tensor[(2, 1280), uint64] */;
  %189 = bitwise_or(%179, %180) /* ty=Tensor[(2, 1280), int8] */;
  %190 = add(%183, %184) /* ty=Tensor[(2, 1280), uint8] */;
  (%185, %156, meta[relay.Constant][9] /* ty=Tensor[(840), float32] */, %186, %187, %188, %189, %190)
}

def @func_11641() -> (Tensor[(5, 12, 11), int64],) {
  %191 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %192 = %191.0;
  (%192,)
}

def @func_10774(%var_10765: Tensor[(24, 14), float32]) -> (Tensor[(24, 14), bool],) {
  %193 = @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
  %194 = %193.2;
  %195 = cast(%var_10765, dtype="bool") /* ty=Tensor[(24, 14), bool] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(2), int32] */;
  %197 = cast(%194, dtype="bool") /* ty=Tensor[(24, 14), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %199 = less_equal(%197, %198) /* ty=Tensor[(24, 14), bool] */;
  (%199,)
}

def @func_12868(%var_12865: Tensor[(2, 16, 2), float64]) -> Tensor[(2, 16, 2), float64] {
  %200 = cast(%var_12865, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
  cosh(%200) /* ty=Tensor[(2, 16, 2), float64] */
}

def @func_6555() -> Tensor[(4, 7, 4), bool] {
  @func_6329() /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_6329() -> Tensor[(4, 7, 4), bool] {
  %201 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %201.0
}

def @func_12573(%var_12548: Tensor[(2, 192), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(384), float32], Tensor[(2, 192), float32]) {
  %202 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %203 = cast(%var_12548, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %204 = reshape(%203, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %205 = @func_9984(%204) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %206 = @func_9235() /* ty=Tensor[(4, 7, 4), float64] */;
  %207 = %202.0;
  %208 = %205.2;
  (%206, %207, %208, %var_12548)
}

def @func_10585() -> Tensor[(4, 7, 4), float32] {
  %209 = @func_8046() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %209.0
}

def @func_13578() -> Tensor[(5, 12, 11), int64] {
  @func_4479() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_16382(%var_16380: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(384), float32]) {
  %210 = @func_7580() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %211 = cast(%var_16380, dtype="float32") /* ty=Tensor[(384), float32] */;
  %212 = reshape(%211, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %213 = @func_9984(%212) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %214 = %210.0;
  %215 = %213.2;
  (%214, %215, %var_16380)
}

def @func_9984(%var_9975: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) {
  %216 = cast(%var_9975, dtype="float32") /* ty=Tensor[(384), float32] */;
  %217 = cast(meta[relay.Constant][11] /* ty=Tensor[(5), float64] */, dtype="float64") /* ty=Tensor[(5), float64] */;
  %218 = reshape(%216, newshape=[192, 2]) /* ty=Tensor[(192, 2), float32] */;
  %219 = reshape(%217, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %220 = @func_6626(%218, %219) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) */;
  %221 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
  %222 = %220.2;
  (%221, %222, %var_9975, meta[relay.Constant][11] /* ty=Tensor[(5), float64] */)
}

def @func_11785() -> Tensor[(5, 12, 11), int64] {
  %223 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %223.0
}

def @func_14736(%var_14731: Tensor[(4, 8, 8), uint32], %var_14732: Tensor[(4, 8, 8), uint32]) -> (Tensor[(4, 8, 8), uint32],) {
  %224 = cast(%var_14732, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %225 = shape_of(%var_14731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_14731, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %228 = bitwise_and(%226, %227) /* ty=Tensor[(4, 8, 8), uint32] */;
  (%228,)
}

def @func_8011() -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32]) {
  %229 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %230 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %231 = %229.1;
  %232 = %230.0;
  (%231, %232)
}

def @func_5454() -> (Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) {
  %233 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %234 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %235 = reshape(%234, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %236 = @func_4614(%235) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %237 = %233.0;
  %238 = %236.0;
  (%237, %238, meta[relay.Constant][12] /* ty=Tensor[(48), float64] */)
}

def @func_14276() -> Tensor[(5, 12, 11), float64] {
  @func_13610() /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_16229() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %239 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %240 = @func_11641() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %241 = %239.0;
  %242 = %240.0;
  (%241, %242)
}

def @func_9563() -> (Tensor[(4, 7, 4), float32],) {
  %243 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %244 = %243.0;
  (%244,)
}

def @func_8301(%var_8290: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  %245 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %246 = %245.1;
  %247 = cast(%246, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %248 = cast(%var_8290, dtype="float64") /* ty=Tensor[(210), float64] */;
  %249 = reshape(%248, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %250 = @func_7112(%249) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %251 = acos(%247) /* ty=Tensor[(4, 7, 4), float32] */;
  %252 = %250.5;
  (%251, %252, %var_8290)
}

def @func_16084() -> Tensor[(5, 12, 11), int64] {
  @func_4580() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_11199(%var_11191: Tensor[(8, 5, 10), float32]) -> Tensor[(8, 5, 10), float32] {
  %253 = cast(%var_11191, dtype="float32") /* ty=Tensor[(8, 5, 10), float32] */;
  sinh(%253) /* ty=Tensor[(8, 5, 10), float32] */
}

def @func_4946() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) {
  %254 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %255 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %257 = sigmoid(%256) /* ty=Tensor[(4, 7, 4), float64] */;
  %258 = cast(%255, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %263 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
  %264 = %254.1;
  %265 = greater_equal(%260, %261) /* ty=Tensor[(4, 7, 4), bool] */;
  %266 = %262.0;
  (%263, %264, %265, %266)
}

def @func_9363() -> (Tensor[(4, 7, 4), float32],) {
  %267 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%267,)
}

def @func_15671() -> (Tensor[(910), float64], Tensor[(4, 7, 4), float32]) {
  %268 = @func_11896() /* ty=(Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) */;
  %269 = %268.2;
  %270 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%269, %270)
}

def @func_16006() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %271 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %272 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %273 = %271.2;
  (%272, %273)
}

def @func_2056(%var_2048: Tensor[(3, 4, 1), float32], %var_2049: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), bool],) {
  %274 = cast(%var_2048, dtype="bool") /* ty=Tensor[(3, 4, 1), bool] */;
  %275 = cast(%var_2049, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
  %276 = less(%274, %275) /* ty=Tensor[(3, 4, 15), bool] */;
  (%276,)
}

def @func_7903(%var_7899: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %277 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
  %278 = cast(%var_7899, dtype="float64") /* ty=Tensor[(15), float64] */;
  %279 = reshape(%278, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %280 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %281 = %277.1;
  %282 = @func_4592(%279) /* ty=Tensor[(3, 1, 5), float64] */;
  (%280, %281, %282, %var_7899)
}

def @func_8785() -> (Tensor[(4, 7, 4), float64],) {
  %283 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %284 = %283.0;
  (%284,)
}

def @func_12512() -> Tensor[(4, 7, 4), float64] {
  %285 = @func_7032() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) */;
  %285.1
}

def @func_5061() -> (Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) {
  %286 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %288 = log(%287) /* ty=Tensor[(4, 7, 4), float64] */;
  %289 = cast(%286, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%288, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %293 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %294 = reshape(%293, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %295 = @func_2819(%294) /* ty=(Tensor[(12, 6, 5), float64],) */;
  %296 = bitwise_and(%291, %292) /* ty=Tensor[(4, 7, 4), uint32] */;
  %297 = %295.0;
  (%296, %297, meta[relay.Constant][13] /* ty=Tensor[(1, 360), float64] */)
}

def @func_4119(%var_4096: Tensor[(16, 16, 10), int64], %var_4097: Tensor[(16, 16, 10), int64]) -> (Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) {
  %298 = cast(%var_4097, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %299 = shape_of(%var_4096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%var_4096, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = greater(%300, %301) /* ty=Tensor[(16, 16, 10), bool] */;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
  %304 = shape_of(%var_4097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%var_4097, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %307 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %308 = reshape(%307, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %309 = @func_2367(%308) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %310 = mod(%305, %306) /* ty=Tensor[(16, 16, 10), float64] */;
  %311 = %309.0;
  (%310, %311, meta[relay.Constant][14] /* ty=Tensor[(1, 336), float32] */)
}

def @func_9315(%var_9244: Tensor[(336), float32]) -> (Tensor[(7, 16, 3), float32], Tensor[(336), float32], Tensor[(7, 8, 11), float64], Tensor[(784), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(5, 12, 11), int64]) {
  %312 = cast(%var_9244, dtype="float32") /* ty=Tensor[(336), float32] */;
  %313 = reshape(%312, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %314 = @func_2367(%313) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %315 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %316 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %317 = %316.0;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(784), float32] */;
  %319 = cast(meta[relay.Constant][15] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %320 = reshape(%319, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %321 = @func_8301(%320) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %322 = %314.0;
  %323 = %315.0;
  %324 = asin(%318) /* ty=Tensor[(784), float32] */;
  %325 = %321.0;
  %326 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  (%322, %var_9244, %323, %324, %325, meta[relay.Constant][15] /* ty=Tensor[(210), float64] */, %326)
}

def @func_13143() -> Tensor[(5, 12, 11), float64] {
  %327 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %327.0
}

def @func_742(%var_724: Tensor[(5, 16, 14), float32]) -> (Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) {
  %328 = cast(%var_724, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
  %329 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %331 = reshape(%329, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %332 = reshape(%330, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %333 = erf(%328) /* ty=Tensor[(5, 16, 14), float32] */;
  %334 = @func_604(%331, %332) /* ty=Tensor[(15, 14, 3), float32] */;
  (%333, %334, meta[relay.Constant][16] /* ty=Tensor[(630), float32] */)
}

def @func_4592(%var_4588: Tensor[(3, 1, 5), float64]) -> Tensor[(3, 1, 5), float64] {
  %335 = cast(%var_4588, dtype="float64") /* ty=Tensor[(3, 1, 5), float64] */;
  tan(%335) /* ty=Tensor[(3, 1, 5), float64] */
}

def @func_5737() -> (Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %336 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %337 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %338 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %339 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %340 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %341 = cast(meta[relay.Constant][17] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %342 = reshape(%341, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %343 = %336.0;
  %344 = %337.2;
  %345 = %338.0;
  %346 = %339.0;
  %347 = %340.0;
  %348 = @func_4592(%342) /* ty=Tensor[(3, 1, 5), float64] */;
  (%343, %344, %345, %346, %347, %348, meta[relay.Constant][17] /* ty=Tensor[(15), float64] */)
}

def @func_11621() -> (Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) {
  %349 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 16), float64] */;
  %350 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %351 = sin(%349) /* ty=Tensor[(3, 1, 16), float64] */;
  %352 = %350.0;
  %353 = @func_8341() /* ty=Tensor[(336), float32] */;
  (%351, %352, %353)
}

def @func_5882() -> (Tensor[(4, 7, 4), float32],) {
  %354 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %355 = %354.0;
  (%355,)
}

def @func_5798() -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %356 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %357 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %358 = %356.0;
  (%357, %358)
}

def @func_8955(%var_8925: Tensor[(7, 16, 3), float32], %var_8939: Tensor[(210, 1), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(7, 8, 11), float64], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float64], Tensor[(336), float32], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(4, 7, 4), float64]) {
  %359 = @func_6660() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %360 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %361 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %362 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %363 = %362.0;
  %364 = cast(%var_8925, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %368 = cast(%var_8939, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %369 = reshape(%368, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %370 = @func_8301(%369) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %371 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %372 = %359.0;
  %373 = %360.0;
  %374 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
  %375 = %361.0;
  %376 = mod(%366, %367) /* ty=Tensor[(7, 16, 3), float64] */;
  %377 = @func_7559() /* ty=Tensor[(336), float32] */;
  %378 = %370.2;
  %379 = %371.0;
  (%372, %373, %374, %375, %376, %377, %378, %var_8939, %379)
}

def @func_9606() -> Tensor[(5, 12, 11), float32] {
  %380 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  log2(%381) /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_16207() -> (Tensor[(7, 8, 11), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  %382 = @func_13570() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32]) */;
  %383 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %384 = %382.0;
  %385 = %383.0;
  %386 = @func_7966() /* ty=Tensor[(4, 7, 4), float32] */;
  (%384, %385, %386)
}

def @func_13466(%var_13417: Tensor[(180), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float32], Tensor[(180), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %387 = cast(%var_13417, dtype="float32") /* ty=Tensor[(180), float32] */;
  %388 = reshape(%387, newshape=[3, 60]) /* ty=Tensor[(3, 60), float32] */;
  %389 = @func_8482(%388) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) */;
  %390 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %391 = %389.6;
  %392 = @func_12953() /* ty=Tensor[(4, 7, 4), float32] */;
  %393 = @func_11785() /* ty=Tensor[(5, 12, 11), int64] */;
  (%390, %391, %var_13417, %392, %393)
}

def @func_16064() -> Tensor[(784), float64] {
  @func_9545() /* ty=Tensor[(784), float64] */
}

def @func_15924(%var_15909: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(14, 4, 14), float64], Tensor[(784), float64]) {
  %394 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %395 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %396 = cast(%var_15909, dtype="float64") /* ty=Tensor[(784), float64] */;
  %397 = reshape(%396, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %398 = @func_1464(%397) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %399 = %394.0;
  %400 = %395.0;
  %401 = %398.0;
  (%399, %400, %401, %var_15909)
}

def @func_4886(%var_4839: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), uint16],) {
  %402 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %403 = %402.1;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %405 = log2(%404) /* ty=Tensor[(4, 7, 4), float64] */;
  %406 = cast(%var_4839, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %407 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%403, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %410 = logical_xor(%408, %409) /* ty=Tensor[(4, 7, 4), uint32] */;
  %411 = cast(%410, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %412 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%403, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = equal(%413, %414) /* ty=Tensor[(4, 7, 4), bool] */;
  %416 = cast(%415, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %417 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%405, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %420 = bitwise_xor(%418, %419) /* ty=Tensor[(4, 7, 4), uint16] */;
  (%420,)
}

def @func_10184(%var_10154: Tensor[(1, 5), float64], %var_10177: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %421 = cast(meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %422 = cast(%var_10154, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %423 = reshape(%421, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %424 = reshape(%422, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %425 = @func_5406(%423, %424) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
  %426 = @func_7580() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %427 = cast(%var_10177, dtype="float64") /* ty=Tensor[(15), float64] */;
  %428 = reshape(%427, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %429 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %430 = %425.4;
  %431 = %426.0;
  %432 = @func_4592(%428) /* ty=Tensor[(3, 1, 5), float64] */;
  (%429, %430, meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, %var_10154, %431, %432, %var_10177)
}

def @func_15078() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %433 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %434 = %433.0;
  %435 = @func_12349() /* ty=Tensor[(5, 12, 11), int64] */;
  (%434, %435)
}

def @func_4580() -> Tensor[(5, 12, 11), int64] {
  %436 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %436.0
}

def @func_13994() -> (Tensor[(784), float64], Tensor[(5, 12, 11), int64]) {
  %437 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %438 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
  %439 = %437.0;
  %440 = %438.2;
  (%439, %440)
}

def @func_16620() -> (Tensor[(7, 16, 3), float32], Tensor[(6, 4, 16), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(4, 7, 4), float32]) {
  %441 = @func_10265() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
  %442 = cast(meta[relay.Constant][20] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %443 = reshape(%442, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %444 = @func_13940(%443) /* ty=(Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) */;
  %445 = @func_15351() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %446 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
  %447 = %441.2;
  %448 = %444.2;
  %449 = %445.0;
  (%446, %447, %448, meta[relay.Constant][20] /* ty=Tensor[(12), float32] */, %449)
}

def @func_5123() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %450 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %451 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %452 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %453 = %450.0;
  %454 = %451.0;
  (%452, %453, %454)
}

def @func_12067() -> Tensor[(3, 4, 1), float32] {
  %455 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  acos(%455) /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_4266() -> Tensor[(4, 7, 4), float32] {
  %456 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  cosh(%456) /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_9775(%var_9721: Tensor[(1, 15), float64]) -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32], Tensor[(15), float64], Tensor[(1, 15), float64], Tensor[(8, 8, 12), float32], Tensor[(2, 384), float32], Tensor[(7, 16, 3), float32]) {
  %457 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %458 = cast(%var_9721, dtype="float64") /* ty=Tensor[(1, 15), float64] */;
  %459 = reshape(%458, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %460 = @func_6897(%459) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */;
  %461 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 384), float32] */, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
  %462 = reshape(%461, newshape=[8, 8, 12]) /* ty=Tensor[(8, 8, 12), float32] */;
  %463 = @func_9045(%462) /* ty=(Tensor[(8, 8, 12), float32],) */;
  %464 = %457.1;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(336), float32] */;
  %466 = reshape(%465, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %467 = @func_2367(%466) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %468 = @func_6922() /* ty=Tensor[(4, 7, 4), float32] */;
  %469 = %460.4;
  %470 = %463.0;
  %471 = %467.0;
  (%464, %468, %469, %var_9721, %470, meta[relay.Constant][23] /* ty=Tensor[(2, 384), float32] */, %471)
}

def @func_11365() -> (Tensor[(5, 12, 11), int64],) {
  %472 = @func_6239() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %473 = %472.0;
  (%473,)
}

def @func_5522() -> (Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) {
  %474 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 7, 1), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %475 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 7, 5), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 5), bool] */;
  %476 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %477 = reshape(%476, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), float64] */;
  %478 = @func_2908(%477) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) */;
  %479 = cast(meta[relay.Constant][27] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %480 = reshape(%479, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %481 = @func_1464(%480) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %482 = logical_and(%474, %475) /* ty=Tensor[(3, 7, 5), bool] */;
  %483 = %478.0;
  %484 = %481.1;
  (%482, %483, meta[relay.Constant][26] /* ty=Tensor[(1, 5), float64] */, %484, meta[relay.Constant][27] /* ty=Tensor[(784), float64] */)
}

def @func_6061() -> (Tensor[(4, 7, 4), float32],) {
  %485 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  (%485,)
}

def @func_8046() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %486 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %487 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %488 = %486.0;
  %489 = %487.0;
  (%488, %489)
}

def @func_7032() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) {
  %490 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %491 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %492 = %490.0;
  %493 = %491.1;
  (%492, %493)
}

def @func_15755() -> (Tensor[(48), float64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32]) {
  %494 = @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
  %495 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %496 = @func_12226() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
  %497 = %494.0;
  %498 = %495.0;
  %499 = %496.2;
  (%497, %498, %499)
}

def @func_14693() -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %500 = @func_13111() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %501 = @func_14003() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %502 = @func_11414() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %503 = %500.0;
  %504 = %501.0;
  %505 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
  %506 = %502.0;
  (%503, %504, %505, %506)
}

def @func_5212() -> (Tensor[(4, 7, 4), bool],) {
  %507 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %508 = %507.0;
  %509 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 7, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%508, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %513 = logical_or(%511, %512) /* ty=Tensor[(4, 7, 4), bool] */;
  (%513,)
}

def @func_10496() -> Tensor[(4, 7, 4), float32] {
  %514 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %514.0
}

def @func_13610() -> Tensor[(5, 12, 11), float64] {
  %515 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %515.0
}

def @func_4820() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %516 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %517 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %518 = %516.0;
  %519 = %517.0;
  (%518, %519)
}

def @func_15338() -> Tensor[(336), float32] {
  %520 = @func_14667() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) */;
  %520.1
}

def @func_15351() -> (Tensor[(4, 7, 4), float32],) {
  %521 = @func_10302() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %522 = %521.0;
  (%522,)
}

def @func_7112(%var_7095: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  %523 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %524 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %525 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %526 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %527 = reshape(%526, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %528 = @func_4614(%527) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %529 = cast(%var_7095, dtype="float64") /* ty=Tensor[(210), float64] */;
  %530 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %531 = reshape(%529, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
  %532 = reshape(%530, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %533 = @func_5181(%531, %532) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
  %534 = %523.0;
  %535 = %524.0;
  %536 = %525.0;
  %537 = %528.0;
  %538 = %533.3;
  (%534, %535, %536, %537, meta[relay.Constant][29] /* ty=Tensor[(4, 12), float64] */, %538, %var_7095)
}

def @func_9646() -> Tensor[(12, 5, 8), float32] {
  %539 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
  %539.0
}

def @func_4542() -> (Tensor[(4, 7, 4), float64],) {
  %540 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %541 = %540.0;
  %542 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %546 = add(%544, %545) /* ty=Tensor[(4, 7, 4), float64] */;
  (%546,)
}

def @func_7798() -> (Tensor[(5, 12, 11), float64], Tensor[(336), float32]) {
  %547 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %548 = %547.0;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %550 = sinh(%549) /* ty=Tensor[(5, 12, 11), float64] */;
  %551 = @func_7559() /* ty=Tensor[(336), float32] */;
  (%550, %551)
}

def @func_10059(%var_10023: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32]) {
  %552 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %555 = cast(%var_10023, dtype="float32") /* ty=Tensor[(384), float32] */;
  %556 = reshape(%555, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %557 = @func_9984(%556) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %558 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %559 = cos(%554) /* ty=Tensor[(5, 12, 11), float64] */;
  %560 = %557.2;
  %561 = %558.0;
  (%559, %560, %var_10023, %561)
}

def @func_13028() -> Tensor[(3, 4, 1), float32] {
  @func_12067() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_15292() -> (Tensor[(4, 7, 4), bool], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  %562 = @func_10680() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %563 = @func_11847() /* ty=(Tensor[(784), float64],) */;
  %564 = %562.0;
  %565 = %563.0;
  %566 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
  (%564, %565, %566)
}

def @func_13864(%var_13849: uint16, %var_13857: Tensor[(12), float32], %var_13858: Tensor[(180), float32]) -> (Tensor[(1, 7, 2), bool], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32]) {
  %567 = cast(%var_13849, dtype="bool") /* ty=bool */;
  %568 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 7, 2), uint16] */, dtype="bool") /* ty=Tensor[(1, 7, 2), bool] */;
  %569 = cast(%var_13857, dtype="float32") /* ty=Tensor[(12), float32] */;
  %570 = cast(%var_13858, dtype="float32") /* ty=Tensor[(180), float32] */;
  %571 = reshape(%569, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %572 = reshape(%570, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %573 = @func_2056(%571, %572) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %574 = less_equal(%567, %568) /* ty=Tensor[(1, 7, 2), bool] */;
  %575 = %573.0;
  (%574, %575, %var_13857, %var_13858)
}

def @func_9069() -> (Tensor[(5, 12, 11), int64],) {
  %576 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %577 = %576.0;
  (%577,)
}

def @func_6036() -> (Tensor[(784), float64],) {
  %578 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %579 = %578.4;
  (%579,)
}

def @func_5923() -> (Tensor[(4, 7, 4), float32],) {
  %580 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%580,)
}

def @func_13277() -> (Tensor[(5, 12, 11), int64],) {
  %581 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %582 = %581.0;
  (%582,)
}

def @func_10694() -> (Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) {
  %583 = @func_9816() /* ty=(Tensor[(48), float64],) */;
  %584 = cast(meta[relay.Constant][32] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %585 = reshape(%584, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %586 = @func_2367(%585) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %587 = %583.0;
  %588 = %586.0;
  (%587, %588, meta[relay.Constant][32] /* ty=Tensor[(24, 14), float32] */)
}

def @func_5875(%var_5849: Tensor[(384), float32], %var_5850: Tensor[(5), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) {
  %589 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %590 = cast(%var_5849, dtype="float32") /* ty=Tensor[(384), float32] */;
  %591 = cast(%var_5850, dtype="float64") /* ty=Tensor[(5), float64] */;
  %592 = reshape(%590, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %593 = reshape(%591, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %594 = @func_5406(%592, %593) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
  %595 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %596 = %589.3;
  %597 = %594.1;
  %598 = %595.0;
  (%596, %597, %var_5849, %var_5850, %598)
}

def @func_604(%var_582: Tensor[(15, 14, 3), float32], %var_595: Tensor[(15, 14, 3), float32]) -> Tensor[(15, 14, 3), float32] {
  %599 = cast(%var_582, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
  %600 = atan(%599) /* ty=Tensor[(15, 14, 3), float32] */;
  %601 = cast(%var_595, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%603, %604) /* ty=Tensor[(15, 14, 3), float32] */
}

def @func_7363(%var_7361: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), int64], Tensor[(6, 140), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(1120), float32], Tensor[(784), float64]) {
  %605 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %606 = %605.3;
  %607 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 7, 4), float64] */, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%606, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %611 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %612 = reshape(%611, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %613 = @func_4665(%612) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) */;
  %614 = %613.3;
  %615 = cast(%614, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %616 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(6, 140), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %617 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 140), float32] */, dtype="uint64") /* ty=Tensor[(6, 140), uint64] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %619 = subtract(%617, %618) /* ty=Tensor[(6, 140), uint64] */;
  %620 = cast(%619, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %621 = cosh(%620) /* ty=Tensor[(6, 140), float64] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %623 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %624 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %625 = cast(%var_7361, dtype="float64") /* ty=Tensor[(784), float64] */;
  %626 = reshape(%625, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %627 = @func_1464(%626) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %628 = bitwise_or(%609, %610) /* ty=Tensor[(4, 7, 4), int64] */;
  %629 = log10(%622) /* ty=Tensor[(6, 140), float64] */;
  %630 = %623.1;
  %631 = %624.0;
  %632 = %627.2;
  (%628, %629, %630, %631, %632, %var_7361)
}

def @func_8650() -> Tensor[(4, 7, 4), float32] {
  %633 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
  %633.0
}

def @func_8341() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_16273() -> Tensor[(4, 7, 4), uint16] {
  %634 = @func_9098() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) */;
  %634.1
}

def @func_1464(%var_1443: Tensor[(14, 4, 14), float64]) -> (Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) {
  %635 = cast(%var_1443, dtype="float64") /* ty=Tensor[(14, 4, 14), float64] */;
  %636 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %637 = reshape(%636, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), float32] */;
  %638 = @func_742(%637) /* ty=(Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) */;
  %639 = exp(%635) /* ty=Tensor[(14, 4, 14), float64] */;
  %640 = %638.0;
  (%639, %640, meta[relay.Constant][35] /* ty=Tensor[(1120), float32] */)
}

def @func_4614(%var_4609: Tensor[(48), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  %641 = cast(%var_4609, dtype="float64") /* ty=Tensor[(48), float64] */;
  %642 = cast(%var_4609, dtype="float64") /* ty=Tensor[(48), float64] */;
  %643 = reshape(%641, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %644 = reshape(%642, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %645 = @func_1934(%643, %644) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
  %646 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %647 = %645.4;
  (%646, %647, %var_4609)
}

def @func_5308() -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %648 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %649 = %648.0;
  %650 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  (%649, %650)
}

def @func_12834() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
  %651 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %652 = @func_11621() /* ty=(Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) */;
  %653 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %654 = %651.0;
  %655 = %652.1;
  %656 = %653.0;
  (%654, %655, %656)
}

def @func_8098() -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) {
  %657 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 11), float32] */;
  %658 = sinh(%657) /* ty=Tensor[(7, 8, 11), float32] */;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(7, 8, 11), float64] */;
  %660 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %661 = sigmoid(%659) /* ty=Tensor[(7, 8, 11), float64] */;
  %662 = @func_7693() /* ty=Tensor[(336), float32] */;
  %663 = %660.0;
  (%661, %662, %663)
}

def @func_15713() -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
  %664 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %665 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %666 = @func_12834() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) */;
  %667 = %664.0;
  %668 = %665.0;
  %669 = %666.2;
  (%667, %668, %669)
}

def @func_12213(%var_12196: Tensor[(5, 10, 10), float32]) -> (Tensor[(5, 10, 10), float32],) {
  %670 = cast(%var_12196, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %671 = log2(%670) /* ty=Tensor[(5, 10, 10), float32] */;
  (%671,)
}

def @func_5578() -> (Tensor[(4, 7, 4), float32],) {
  %672 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%672,)
}

def @func_8829(%var_8793: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %673 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %674 = %673.0;
  %675 = cast(%var_8793, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %679 = cast(meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %680 = reshape(%679, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %681 = @func_7112(%680) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %682 = @func_7263() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %683 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %684 = mod(%677, %678) /* ty=Tensor[(4, 7, 4), float32] */;
  %685 = %681.2;
  %686 = %682.1;
  %687 = %683.0;
  (%684, %685, meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, %686, %687)
}

def @func_15132() -> Tensor[(784), float64] {
  %688 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %688.0
}

def @func_9545() -> Tensor[(784), float64] {
  %689 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %689.0
}

def @func_6383() -> (Tensor[(5, 12, 11), int64],) {
  %690 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %691 = %690.0;
  (%691,)
}

def @func_8120() -> Tensor[(5, 12, 11), int64] {
  @func_4580() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_14050() -> Tensor[(12, 6, 5), bool] {
  %692 = @func_13253() /* ty=(Tensor[(12, 6, 5), bool],) */;
  %692.0
}

def @func_5635() -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) {
  %693 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %694 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %695 = reshape(%694, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %696 = @func_2367(%695) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %697 = %693.0;
  %698 = %696.0;
  (%697, %698, meta[relay.Constant][38] /* ty=Tensor[(336), float32] */)
}

def @func_14813() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), bool]) {
  %699 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %700 = %699.0;
  %701 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
  (%700, %701)
}

def @func_16362() -> Tensor[(336), float32] {
  %702 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %702.1
}

def @func_16111(%var_16108: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(384), float32], Tensor[(5), float64], Tensor[(15), float64]) {
  %703 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %704 = cast(%var_16108, dtype="float64") /* ty=Tensor[(5), float64] */;
  %705 = cast(meta[relay.Constant][39] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %706 = reshape(%704, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %707 = reshape(%705, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %708 = @func_10184(%706, %707) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %709 = %703.0;
  %710 = %708.2;
  (%709, %710, %var_16108, meta[relay.Constant][39] /* ty=Tensor[(15), float64] */)
}

def @func_7493() -> (Tensor[(4, 7, 4), float64],) {
  %711 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %712 = %711.0;
  (%712,)
}

def @func_12226() -> (Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  %713 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %714 = @func_9811() /* ty=(Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
  %715 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %716 = %713.0;
  %717 = %714.2;
  %718 = %715.1;
  (%716, %717, %718)
}

def @func_8482(%var_8442: Tensor[(3, 60), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) {
  %719 = cast(meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %720 = cast(%var_8442, dtype="float32") /* ty=Tensor[(3, 60), float32] */;
  %721 = reshape(%719, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %722 = reshape(%720, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %723 = @func_2056(%721, %722) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %724 = cast(%var_8442, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
  %725 = cast(meta[relay.Constant][41] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %726 = reshape(%725, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %727 = @func_8301(%726) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %728 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %729 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  %730 = %723.0;
  %731 = erf(%724) /* ty=Tensor[(3, 60), float64] */;
  %732 = %727.2;
  %733 = %728.0;
  (%729, %730, meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, %731, %732, meta[relay.Constant][41] /* ty=Tensor[(210), float64] */, %733)
}

def @func_6626(%var_6595: Tensor[(192, 2), float32], %var_6596: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) {
  %734 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %735 = cast(%var_6595, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %736 = cast(%var_6596, dtype="float64") /* ty=Tensor[(5), float64] */;
  %737 = reshape(%735, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %738 = reshape(%736, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %739 = @func_5406(%737, %738) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
  %740 = %734.0;
  %741 = %739.5;
  (%740, %741, %var_6595, %var_6596)
}

def @func_6783(%var_6713: Tensor[(5, 16, 14), float32], %var_6724: Tensor[(384), float32], %var_6729: Tensor[(2, 24), float64], %var_6756: Tensor[(5, 16, 14), uint16]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(2, 560), float32], Tensor[(2, 24), float64], Tensor[(4, 7, 4), uint16], Tensor[(4, 7, 4), bool], Tensor[(5, 16, 14), bool], Tensor[(4, 7, 4), bool], Tensor[(1, 48), float64], Tensor[(5, 16, 14), float32], Tensor[(7, 16, 3), float32]) {
  %742 = cast(%var_6724, dtype="float32") /* ty=Tensor[(384), float32] */;
  %743 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %744 = reshape(%742, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %745 = reshape(%743, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %746 = @func_5875(%744, %745) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) */;
  %747 = cast(%var_6729, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %748 = cast(%var_6729, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %749 = reshape(%747, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %750 = reshape(%748, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %751 = @func_1934(%749, %750) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
  %752 = %746.0;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %754 = reshape(%753, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %755 = @func_4886(%754) /* ty=(Tensor[(4, 7, 4), uint16],) */;
  %756 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %757 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %758 = %757.3;
  %759 = cast(%var_6713, dtype="uint16") /* ty=Tensor[(5, 16, 14), uint16] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="uint16") /* ty=Tensor[(5, 16, 14), uint16] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %763 = bitwise_or(%761, %762) /* ty=Tensor[(5, 16, 14), uint16] */;
  %764 = cast(%var_6756, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(%var_6724, dtype="float32") /* ty=Tensor[(384), float32] */;
  %769 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %770 = reshape(%768, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %771 = reshape(%769, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %772 = @func_5406(%770, %771) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
  %773 = cast(%var_6756, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
  %774 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %775 = %751.4;
  %776 = %755.0;
  %777 = %756.0;
  %778 = not_equal(%766, %767) /* ty=Tensor[(5, 16, 14), bool] */;
  %779 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
  %780 = %772.5;
  %781 = atan(%773) /* ty=Tensor[(5, 16, 14), float32] */;
  %782 = %774.0;
  (%752, %var_6724, meta[relay.Constant][42] /* ty=Tensor[(1, 5), float64] */, %775, %var_6729, %776, %777, %778, %779, %780, %781, %782)
}

def @func_11687(%var_11657: Tensor[(16, 11, 12), float32]) -> (Tensor[(336), float32], Tensor[(16, 11, 12), float64]) {
  %783 = cast(%var_11657, dtype="float32") /* ty=Tensor[(16, 11, 12), float32] */;
  %784 = tan(%783) /* ty=Tensor[(16, 11, 12), float32] */;
  %785 = cast(%var_11657, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %789 = logical_or(%787, %788) /* ty=Tensor[(16, 11, 12), bool] */;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
  %791 = @func_7693() /* ty=Tensor[(336), float32] */;
  %792 = asinh(%790) /* ty=Tensor[(16, 11, 12), float64] */;
  (%791, %792)
}

def @func_5671(%var_5655: Tensor[(5, 12, 11), int64]) -> Tensor[(5, 12, 11), float32] {
  %793 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %794 = %793.1;
  %795 = cast(%var_5655, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%797, %798) /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_12607() -> Tensor[(12, 5, 8), float32] {
  %799 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %799.1
}

def @func_13253() -> (Tensor[(12, 6, 5), bool],) {
  %800 = @func_5061() /* ty=(Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) */;
  %801 = %800.1;
  %802 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 6, 5), float64] */, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %806 = equal(%804, %805) /* ty=Tensor[(12, 6, 5), bool] */;
  (%806,)
}

def @func_4389() -> Tensor[(4, 7, 4), float32] {
  %807 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %807.0
}

def @func_12953() -> Tensor[(4, 7, 4), float32] {
  @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_11414() -> (Tensor[(4, 7, 4), float32],) {
  %808 = @func_10585() /* ty=Tensor[(4, 7, 4), float32] */;
  (%808,)
}

def @func_12259() -> (Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) {
  %809 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  %811 = asinh(%810) /* ty=Tensor[(5, 12, 11), float32] */;
  %812 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
  (%811, %812)
}

def @func_11990(%var_11948: Tensor[(2112), float32]) -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), float32], Tensor[(336), float32], Tensor[(2112), float32], Tensor[(4, 7, 4), float32]) {
  %813 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %814 = %813.0;
  %815 = cast(%814, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  %816 = cast(%var_11948, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %817 = reshape(%816, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %818 = @func_11687(%817) /* ty=(Tensor[(336), float32], Tensor[(16, 11, 12), float64]) */;
  %819 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %820 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
  %821 = asin(%815) /* ty=Tensor[(5, 12, 11), float32] */;
  %822 = %818.0;
  %823 = %819.0;
  (%820, %821, %822, %var_11948, %823)
}

def @func_14464() -> Tensor[(4, 7, 4), float32] {
  %824 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %824.0
}

def @func_12349() -> Tensor[(5, 12, 11), int64] {
  @func_11785() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_6897(%var_6881: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
  %825 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %826 = cast(%825, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %827 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %828 = cast(%var_6881, dtype="float64") /* ty=Tensor[(15), float64] */;
  %829 = reshape(%828, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %830 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %831 = exp(%826) /* ty=Tensor[(4, 7, 4), float64] */;
  %832 = %827.0;
  %833 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %834 = @func_4592(%829) /* ty=Tensor[(3, 1, 5), float64] */;
  %835 = %830.0;
  (%831, %832, %833, %834, %var_6881, %835)
}

def @func_2214(%var_2211: Tensor[(4, 14, 15), float32]) -> Tensor[(4, 14, 15), float32] {
  %836 = cast(%var_2211, dtype="float32") /* ty=Tensor[(4, 14, 15), float32] */;
  acos(%836) /* ty=Tensor[(4, 14, 15), float32] */
}

def @func_14003() -> (Tensor[(5, 12, 11), int64],) {
  %837 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
  (%837,)
}

def @func_12923(%var_12913: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32]) {
  %838 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %839 = cast(%var_12913, dtype="float32") /* ty=Tensor[(384), float32] */;
  %840 = reshape(%839, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %841 = @func_9984(%840) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %842 = %838.0;
  %843 = %841.2;
  (%842, %843, %var_12913)
}

def @func_7580() -> (Tensor[(4, 7, 4), float32],) {
  %844 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%844,)
}

def @func_7263() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %845 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %846 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %847 = %845.1;
  %848 = %846.0;
  (%847, %848)
}

def @func_5406(%var_5355: Tensor[(384), float32], %var_5363: Tensor[(5), float64]) -> (Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) {
  %849 = @func_5061() /* ty=(Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) */;
  %850 = cast(%var_5355, dtype="float32") /* ty=Tensor[(384), float32] */;
  %851 = reshape(%850, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %852 = cast(%var_5363, dtype="float64") /* ty=Tensor[(5), float64] */;
  %853 = reshape(%852, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), float64] */;
  %854 = @func_2908(%853) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) */;
  %855 = %854.2;
  %856 = cast(%855, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %857 = cast(meta[relay.Constant][44] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %858 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %859 = reshape(%857, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
  %860 = reshape(%858, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %861 = @func_5181(%859, %860) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
  %862 = %861.0;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
  %864 = %849.1;
  %865 = @func_2776(%851) /* ty=Tensor[(6, 4, 16), float32] */;
  %866 = atan(%856) /* ty=Tensor[(60, 14), float64] */;
  %867 = log10(%863) /* ty=Tensor[(5, 3, 14), float64] */;
  (%864, %865, %var_5355, %var_5363, meta[relay.Constant][44] /* ty=Tensor[(210), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1, 48), float64] */, %866, %867)
}

def @func_11587() -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %868 = @func_11331() /* ty=(Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %869 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %870 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %871 = %868.3;
  %872 = %869.0;
  %873 = %870.1;
  %874 = @func_10496() /* ty=Tensor[(4, 7, 4), float32] */;
  (%871, %872, %873, %874)
}

def @func_9045(%var_9030: Tensor[(8, 8, 12), float32]) -> (Tensor[(8, 8, 12), float32],) {
  %875 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %876 = shape_of(%var_9030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_9030, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %879 = power(%877, %878) /* ty=Tensor[(8, 8, 12), float32] */;
  (%879,)
}

def @func_10103() -> Tensor[(336), float32] {
  %880 = @func_8605() /* ty=(Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) */;
  %880.1
}

def @func_6015() -> Tensor[(4, 7, 4), float32] {
  @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_6239() -> (Tensor[(5, 12, 11), int64],) {
  %881 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  (%881,)
}

def @func_10680() -> (Tensor[(4, 7, 4), bool],) {
  %882 = @func_7761() /* ty=Tensor[(4, 7, 4), bool] */;
  (%882,)
}

def @func_15478(%var_15439: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), int64], Tensor[(5, 12, 11), int64]) {
  %883 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %884 = %883.0;
  %885 = cast(%var_15439, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %889 = multiply(%887, %888) /* ty=Tensor[(4, 7, 4), int64] */;
  %890 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  (%889, %890)
}

def @func_8521(%var_8517: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) {
  %891 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %892 = cast(%var_8517, dtype="float64") /* ty=Tensor[(15), float64] */;
  %893 = reshape(%892, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %894 = @func_6897(%893) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */;
  %895 = %891.0;
  %896 = @func_8120() /* ty=Tensor[(5, 12, 11), int64] */;
  %897 = %894.4;
  (%895, %896, %897, %var_8517)
}

def @func_13940(%var_13899: Tensor[(12), float32]) -> (Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) {
  %898 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %899 = cast(%var_13899, dtype="float32") /* ty=Tensor[(12), float32] */;
  %900 = reshape(%899, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %901 = @func_8224(%900) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) */;
  %902 = @func_12259() /* ty=(Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) */;
  %903 = %898.5;
  %904 = @func_12607() /* ty=Tensor[(12, 5, 8), float32] */;
  %905 = %901.2;
  %906 = %902.0;
  (%903, %904, %905, %var_13899, %906)
}

def @func_4504() -> Tensor[(5, 12, 11), int64] {
  @func_4479() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_14667() -> (Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %907 = @func_10873() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) */;
  %908 = @func_7032() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) */;
  %909 = @func_12040() /* ty=Tensor[(5, 12, 11), int64] */;
  %910 = @func_7693() /* ty=Tensor[(336), float32] */;
  %911 = %907.1;
  %912 = %908.0;
  (%909, %910, %911, %912)
}

def @func_9098() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) {
  %913 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %914 = %913.1;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %916 = reshape(%915, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %917 = @func_4886(%916) /* ty=(Tensor[(4, 7, 4), uint16],) */;
  %918 = %917.0;
  (%914, %918)
}

def @func_11826() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  %919 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %920 = @func_11451() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %921 = %919.0;
  %922 = %920.1;
  (%921, %922)
}

def @func_15215() -> (Tensor[(336), float32],) {
  %923 = @func_7693() /* ty=Tensor[(336), float32] */;
  (%923,)
}

def @func_11014() -> (Tensor[(4, 7, 4), float32],) {
  %924 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %925 = %924.1;
  (%925,)
}

def @func_10462(%var_10386: Tensor[(1, 4, 13), float32], %var_10395: Tensor[(12), float32], %var_10403: Tensor[(120), int8], %var_10417: Tensor[(7, 4, 13), uint32]) -> (Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32], Tensor[(6, 4, 16), float32], Tensor[(120), int8], Tensor[(1, 1, 5), float64], Tensor[(7, 4, 13), uint32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %926 = cast(%var_10395, dtype="float32") /* ty=Tensor[(12), float32] */;
  %927 = cast(meta[relay.Constant][47] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %928 = reshape(%926, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %929 = reshape(%927, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %930 = @func_2056(%928, %929) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %931 = cast(%var_10403, dtype="int8") /* ty=Tensor[(120), int8] */;
  %932 = reshape(%931, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), int8] */;
  %933 = @func_3920(%932) /* ty=(Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %934 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %935 = cast(%var_10386, dtype="float32") /* ty=Tensor[(1, 4, 13), float32] */;
  %936 = sigmoid(%935) /* ty=Tensor[(1, 4, 13), float32] */;
  %937 = cast(%936, dtype="uint32") /* ty=Tensor[(1, 4, 13), uint32] */;
  %938 = shape_of(%var_10386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%var_10386, dtype="uint32") /* ty=Tensor[(1, 4, 13), uint32] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %941 = bitwise_or(%939, %940) /* ty=Tensor[(?, 4, 13), uint32] */;
  %942 = cast(%941, dtype="uint32") /* ty=Tensor[(?, 4, 13), uint32] */;
  %943 = cast(%var_10417, dtype="uint32") /* ty=Tensor[(7, 4, 13), uint32] */;
  %944 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %945 = @func_7493() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %946 = @func_9098() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) */;
  %947 = %930.0;
  %948 = %933.2;
  %949 = %934.1;
  %950 = bitwise_xor(%942, %943) /* ty=Tensor[(7, 4, 13), uint32] */;
  %951 = %944.1;
  %952 = %945.0;
  %953 = %946.0;
  (%947, %var_10395, meta[relay.Constant][47] /* ty=Tensor[(180), float32] */, %948, %var_10403, %949, %950, %951, %952, %953)
}

def @func_10302() -> (Tensor[(4, 7, 4), float32],) {
  %954 = @func_8650() /* ty=Tensor[(4, 7, 4), float32] */;
  (%954,)
}

def @func_13111() -> (Tensor[(4, 7, 4), bool],) {
  %955 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %956 = %955.0;
  (%956,)
}

def @func_9816() -> (Tensor[(48), float64],) {
  %957 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %958 = %957.2;
  (%958,)
}

def @func_13645() -> Tensor[(4, 7, 4), float32] {
  %959 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %959.0
}

def @func_15821() -> (Tensor[(4, 7, 4), float32], Tensor[(336), float32], Tensor[(5, 12, 11), int64]) {
  %960 = @func_10265() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
  %961 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
  %962 = %960.0;
  %963 = @func_15338() /* ty=Tensor[(336), float32] */;
  %964 = %961.4;
  (%962, %963, %964)
}

def @func_12671(%var_12660: Tensor[(16, 2, 11), float64]) -> Tensor[(16, 2, 11), float64] {
  %965 = cast(%var_12660, dtype="float64") /* ty=Tensor[(16, 2, 11), float64] */;
  sigmoid(%965) /* ty=Tensor[(16, 2, 11), float64] */
}

def @func_3920(%var_3882: Tensor[(4, 3, 10), int8]) -> (Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  %966 = cast(meta[relay.Constant][48] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %967 = cast(%var_3882, dtype="int8") /* ty=Tensor[(4, 3, 10), int8] */;
  %968 = cast(%var_3882, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
  %969 = cast(meta[relay.Constant][49] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %970 = reshape(%969, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %971 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %972 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %973 = reshape(%971, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %974 = reshape(%972, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %975 = @func_1934(%973, %974) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
  %976 = bitwise_xor(%966, %967) /* ty=Tensor[(4, 3, 10), int8] */;
  %977 = tan(%968) /* ty=Tensor[(4, 3, 10), float32] */;
  %978 = @func_2776(%970) /* ty=Tensor[(6, 4, 16), float32] */;
  %979 = %975.4;
  (%976, %977, %978, meta[relay.Constant][49] /* ty=Tensor[(384), float32] */, %979, meta[relay.Constant][50] /* ty=Tensor[(48), float64] */)
}

def @func_6228(%var_6190: Tensor[(1, 12), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) {
  %980 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %981 = cast(%var_6190, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %982 = cast(meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %983 = reshape(%981, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %984 = reshape(%982, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %985 = @func_2056(%983, %984) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %986 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %987 = %980.0;
  %988 = %985.0;
  %989 = %986.0;
  (%987, %988, %var_6190, meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, %989)
}

def @func_12040() -> Tensor[(5, 12, 11), int64] {
  %990 = @func_9811() /* ty=(Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
  %990.1
}

def @func_12423() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_2367(%var_2363: Tensor[(7, 16, 3), float32]) -> (Tensor[(7, 16, 3), float32],) {
  %991 = cast(%var_2363, dtype="float32") /* ty=Tensor[(7, 16, 3), float32] */;
  %992 = cosh(%991) /* ty=Tensor[(7, 16, 3), float32] */;
  (%992,)
}

def @func_8224(%var_8216: Tensor[(12), float32]) -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) {
  %993 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %994 = cast(%var_8216, dtype="float32") /* ty=Tensor[(12), float32] */;
  %995 = reshape(%994, newshape=[1, 12]) /* ty=Tensor[(1, 12), float32] */;
  %996 = @func_6228(%995) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) */;
  %997 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %998 = %993.0;
  %999 = %996.3;
  (%997, %998, %999, %var_8216)
}

def @func_13837(%var_13821: Tensor[(48), float64]) -> (Tensor[(784), float64], Tensor[(5, 3, 14), float64], Tensor[(105, 2), float64], Tensor[(48), float64]) {
  %1000 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %1001 = cast(meta[relay.Constant][52] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %1002 = cast(%var_13821, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1003 = reshape(%1001, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
  %1004 = reshape(%1002, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1005 = @func_5181(%1003, %1004) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
  %1006 = %1000.0;
  %1007 = %1005.0;
  (%1006, %1007, meta[relay.Constant][52] /* ty=Tensor[(105, 2), float64] */, %var_13821)
}

def @func_7286() -> Tensor[(784), float64] {
  %1008 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %1008.0
}

def @func_5936() -> (Tensor[(7, 16, 3), float32],) {
  %1009 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %1010 = %1009.1;
  (%1010,)
}

def @func_16463(%var_16450: Tensor[(15, 3, 4), float64], %var_16451: Tensor[(15, 3, 4), float64]) -> (Tensor[(15, 3, 4), float64], Tensor[(5, 12, 11), int64]) {
  %1011 = cast(%var_16451, dtype="float64") /* ty=Tensor[(15, 3, 4), float64] */;
  %1012 = shape_of(%var_16450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_16450, dtype="float64") /* ty=Tensor[(15, 3, 4), float64] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1015 = @func_13169() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) */;
  %1016 = floor_mod(%1013, %1014) /* ty=Tensor[(15, 3, 4), float64] */;
  %1017 = %1015.0;
  (%1016, %1017)
}

def @func_11847() -> (Tensor[(784), float64],) {
  %1018 = @func_7286() /* ty=Tensor[(784), float64] */;
  (%1018,)
}

def @func_7669() -> (Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) {
  %1019 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
  %1020 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %1021 = asinh(%1019) /* ty=Tensor[(12, 5, 8), float32] */;
  %1022 = %1020.1;
  (%1021, %1022)
}

def @func_4746() -> (Tensor[(4, 7, 4), float64],) {
  %1023 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %1026 = atan(%1025) /* ty=Tensor[(4, 7, 4), float64] */;
  (%1026,)
}

def @func_14221(%var_14194: Tensor[(10, 7, 8), bool], %var_14195: Tensor[(10, 7, 8), bool]) -> (Tensor[(10, 7, 8), bool], Tensor[(784), float64], Tensor[(3, 60), float64], Tensor[(180), float32]) {
  %1027 = cast(%var_14195, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
  %1028 = shape_of(%var_14194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(%var_14194, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1031 = cast(meta[relay.Constant][54] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1032 = reshape(%1031, newshape=[3, 60]) /* ty=Tensor[(3, 60), float32] */;
  %1033 = @func_8482(%1032) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) */;
  %1034 = logical_or(%1029, %1030) /* ty=Tensor[(10, 7, 8), bool] */;
  %1035 = @func_9545() /* ty=Tensor[(784), float64] */;
  %1036 = %1033.3;
  (%1034, %1035, %1036, meta[relay.Constant][54] /* ty=Tensor[(180), float32] */)
}

def @func_6660() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %1037 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %1038 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1039 = %1037.0;
  %1040 = %1038.0;
  %1041 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%1039, %1040, %1041)
}

def @func_7761() -> Tensor[(4, 7, 4), bool] {
  %1042 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
  %1043 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %1044 = %1043.3;
  %1045 = cast(%1044, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1046 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%1042, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1047, %1048) /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_16145() -> (Tensor[(784), float64],) {
  %1049 = @func_16064() /* ty=Tensor[(784), float64] */;
  (%1049,)
}

def @func_15579() -> (Tensor[(4, 7, 4), float32],) {
  %1050 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_8413(%var_8394: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) {
  %1052 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %1053 = cast(%1052, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %1054 = cast(%var_8394, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1055 = reshape(%1054, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %1056 = cast(meta[relay.Constant][55] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1057 = reshape(%1056, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %1058 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1059 = log10(%1053) /* ty=Tensor[(4, 7, 4), float64] */;
  %1060 = @func_2776(%1055) /* ty=Tensor[(6, 4, 16), float32] */;
  %1061 = @func_2214(%1057) /* ty=Tensor[(4, 14, 15), float32] */;
  %1062 = %1058.0;
  %1063 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
  %1064 = @func_8341() /* ty=Tensor[(336), float32] */;
  (%1059, %1060, %var_8394, %1061, meta[relay.Constant][55] /* ty=Tensor[(840), float32] */, %1062, %1063, %1064)
}

def @func_16320() -> Tensor[(4, 7, 4), float32] {
  %1065 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1065.0
}

def @func_8605() -> (Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) {
  %1066 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %1067 = %1066.2;
  %1068 = cast(%1067, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1069 = reshape(%1068, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1070 = @func_4614(%1069) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %1071 = @func_7693() /* ty=Tensor[(336), float32] */;
  %1072 = %1070.1;
  (%1067, %1071, %1072)
}

def @func_7818() -> Tensor[(4, 7, 4), float32] {
  @func_4266() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_5181(%var_5146: Tensor[(5, 3, 14), float64], %var_5157: Tensor[(48), float64]) -> (Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) {
  %1073 = cast(%var_5146, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
  %1074 = cast(%var_5157, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1075 = reshape(%1074, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1076 = @func_4614(%1075) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %1077 = cast(meta[relay.Constant][56] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1078 = cast(meta[relay.Constant][56] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1079 = reshape(%1077, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %1080 = reshape(%1078, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %1081 = @func_604(%1079, %1080) /* ty=Tensor[(15, 14, 3), float32] */;
  %1082 = cast(meta[relay.Constant][56] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1086 = exp(%1073) /* ty=Tensor[(5, 3, 14), float64] */;
  %1087 = %1076.0;
  %1088 = floor_divide(%1084, %1085) /* ty=Tensor[(15, 14, 3), float32] */;
  (%1086, %1087, %var_5157, %1088)
}

def @func_12343() -> (Tensor[(4, 7, 4), float32],) {
  %1089 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_7693() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_6369() -> (Tensor[(4, 7, 4), float32],) {
  %1091 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %1092 = %1091.1;
  (%1092,)
}

def @func_10265() -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
  %1093 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
  %1094 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %1095 = cast(meta[relay.Constant][57] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1096 = reshape(%1095, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %1097 = %1093.1;
  %1098 = %1094.0;
  %1099 = @func_2776(%1096) /* ty=Tensor[(6, 4, 16), float32] */;
  (%1097, %1098, %1099, meta[relay.Constant][57] /* ty=Tensor[(384), float32] */)
}

def @func_14558() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(7, 16, 3), float32]) {
  %1100 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
  %1101 = %1100.2;
  %1102 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %1103 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
  (%1101, %1102, %1103)
}

def @func_9205() -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
  %1104 = cast(meta[relay.Constant][58] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1105 = reshape(%1104, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %1106 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %1107 = @func_2776(%1105) /* ty=Tensor[(6, 4, 16), float32] */;
  (%1106, %1107, meta[relay.Constant][58] /* ty=Tensor[(384), float32] */)
}

def @func_14072() -> Tensor[(5, 12, 11), int64] {
  %1108 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %1108.0
}

def @main() -> (Tensor[(24, 14), uint16],) {
  %1109 = @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
  %1110 = %1109.2;
  %1111 = cast(meta[relay.Constant][59] /* ty=Tensor[(24, 14), float32] */, dtype="int16") /* ty=Tensor[(24, 14), int16] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1113 = cast(%1110, dtype="int16") /* ty=Tensor[(24, 14), int16] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1115 = add(%1113, %1114) /* ty=Tensor[(24, 14), int16] */;
  %1116 = cast(%1115, dtype="uint16") /* ty=Tensor[(24, 14), uint16] */;
  %1117 = shape_of(%1110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1118 = cast(%1110, dtype="uint16") /* ty=Tensor[(24, 14), uint16] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1120 = bitwise_and(%1118, %1119) /* ty=Tensor[(24, 14), uint16] */;
  (%1120,)
}

def @func_6518() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) {
  %1121 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %1122 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  %1123 = %1121.0;
  %1124 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  (%1122, %1123, %1124)
}

def @func_12501() -> Tensor[(4, 7, 4), float32] {
  %1125 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1125.0
}

def @func_12701() -> (Tensor[(4, 7, 4), float64],) {
  %1126 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_13390() -> (Tensor[(4, 7, 4), float32],) {
  %1128 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  (%1128,)
}

def @func_12110() -> Tensor[(7, 16, 3), float32] {
  %1129 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %1129.0
}

def @func_16438(%var_16411: Tensor[(14, 1, 2), float64]) -> Tensor[(14, 1, 2), float64] {
  %1130 = cast(%var_16411, dtype="float64") /* ty=Tensor[(14, 1, 2), float64] */;
  asin(%1130) /* ty=Tensor[(14, 1, 2), float64] */
}

def @func_14930() -> Tensor[(4, 7, 4), float32] {
  %1131 = @func_13390() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1131.0
}

def @func_9895() -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %1132 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %1133 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %1134 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1135 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1136 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %1137 = %1132.0;
  %1138 = %1133.2;
  %1139 = %1134.0;
  %1140 = %1135.0;
  %1141 = %1136.1;
  (%1137, %1138, %1139, %1140, %1141)
}

def @func_16409() -> (Tensor[(3, 1, 16), float64],) {
  %1142 = @func_11621() /* ty=(Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_13801(%var_13728: Tensor[(12), float32], %var_13739: Tensor[(3, 40), int8], %var_13784: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(12), float32], Tensor[(12, 5, 8), float32], Tensor[(4, 3, 10), float32], Tensor[(3, 40), int8], Tensor[(4, 14, 15), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32], Tensor[(1, 336), float32], Tensor[(2560), int64], Tensor[(3, 1, 5), float64], Tensor[(15, 1), float64]) {
  %1144 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %1145 = cast(%var_13728, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1146 = reshape(%1145, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %1147 = @func_8224(%1146) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) */;
  %1148 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %1149 = cast(%var_13739, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
  %1150 = reshape(%1149, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), int8] */;
  %1151 = @func_3920(%1150) /* ty=(Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %1152 = cast(meta[relay.Constant][60] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1153 = reshape(%1152, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1154 = @func_8413(%1153) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) */;
  %1155 = cast(%var_13784, dtype="int64") /* ty=Tensor[(2560), int64] */;
  %1156 = cast(%var_13784, dtype="int64") /* ty=Tensor[(2560), int64] */;
  %1157 = reshape(%1155, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), int64] */;
  %1158 = reshape(%1156, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), int64] */;
  %1159 = @func_9459(%1157, %1158) /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) */;
  %1160 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %1161 = reshape(%1160, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %1162 = @func_7903(%1161) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %1163 = %1144.0;
  %1164 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %1165 = %1147.1;
  %1166 = %1148.1;
  %1167 = %1151.1;
  %1168 = %1154.3;
  %1169 = @func_12501() /* ty=Tensor[(4, 7, 4), float32] */;
  %1170 = %1159.3;
  %1171 = %1162.2;
  (%1163, %1164, %1165, %var_13728, %1166, %1167, %var_13739, %1168, meta[relay.Constant][60] /* ty=Tensor[(384), float32] */, %1169, %1170, %var_13784, %1171, meta[relay.Constant][61] /* ty=Tensor[(15, 1), float64] */)
}

def @func_11124(%var_11109: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2560), int64], Tensor[(5, 12, 11), float32], Tensor[(?, 336), bool], Tensor[(4, 7, 4), float64]) {
  %1172 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %1173 = cast(%var_11109, dtype="int64") /* ty=Tensor[(2560), int64] */;
  %1174 = cast(%var_11109, dtype="int64") /* ty=Tensor[(2560), int64] */;
  %1175 = reshape(%1173, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
  %1176 = reshape(%1174, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
  %1177 = @func_4119(%1175, %1176) /* ty=(Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) */;
  %1178 = %1177.2;
  %1179 = cast(%1178, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
  %1180 = log(%1179) /* ty=Tensor[(1, 336), float64] */;
  %1181 = cast(%1178, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
  %1182 = shape_of(%1180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1183 = cast(%1180, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1185 = @func_7493() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %1186 = %1172.0;
  %1187 = @func_9606() /* ty=Tensor[(5, 12, 11), float32] */;
  %1188 = less(%1183, %1184) /* ty=Tensor[(?, 336), bool] */;
  %1189 = %1185.0;
  (%1186, %var_11109, %1187, %1188, %1189)
}

def @func_6285() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %1190 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1191 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %1192 = %1191.0;
  %1193 = cast(%1192, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %1194 = %1190.0;
  %1195 = atanh(%1193) /* ty=Tensor[(4, 7, 4), float32] */;
  (%1194, %1195)
}

def @func_7966() -> Tensor[(4, 7, 4), float32] {
  %1196 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1196.0
}

def @func_6922() -> Tensor[(4, 7, 4), float32] {
  @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2216(%var_2215: Tensor[(4, 14, 15), float32]) -> Tensor[(4, 14, 15), float32] {
  %1 = fn (%var_2211: Tensor[(4, 14, 15), float32]) -> Tensor[(4, 14, 15), float32] {
    %0 = cast(%var_2211, dtype="float32") /* ty=Tensor[(4, 14, 15), float32] */;
    acos(%0) /* ty=Tensor[(4, 14, 15), float32] */
  };
  %1(%var_2215) /* ty=Tensor[(4, 14, 15), float32] */
}

def @func_12226() -> (Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  %2 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %3 = @func_9811() /* ty=(Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
  %4 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %5 = %2.0;
  %6 = %3.2;
  %7 = %4.1;
  (%5, %6, %7)
}

def @func_8413(%var_8394: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) {
  %8 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %10 = cast(%var_8394, dtype="float32") /* ty=Tensor[(384), float32] */;
  %11 = reshape(%10, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %13 = reshape(%12, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
  %14 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %15 = log10(%9) /* ty=Tensor[(4, 7, 4), float64] */;
  %16 = @func_2776(%11) /* ty=Tensor[(6, 4, 16), float32] */;
  %17 = @func_2214(%13) /* ty=Tensor[(4, 14, 15), float32] */;
  %18 = %14.0;
  %19 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
  %20 = @func_8341() /* ty=Tensor[(336), float32] */;
  (%15, %16, %var_8394, %17, meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, %18, %19, %20)
}

def @func_16111(%var_16108: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(384), float32], Tensor[(5), float64], Tensor[(15), float64]) {
  %21 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %22 = cast(%var_16108, dtype="float64") /* ty=Tensor[(5), float64] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %24 = reshape(%22, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %25 = reshape(%23, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %26 = @func_10184(%24, %25) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %27 = %21.0;
  %28 = %26.2;
  (%27, %28, %var_16108, meta[relay.Constant][1] /* ty=Tensor[(15), float64] */)
}

def @func_12213(%var_12196: Tensor[(5, 10, 10), float32]) -> (Tensor[(5, 10, 10), float32],) {
  %29 = cast(%var_12196, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  %30 = log2(%29) /* ty=Tensor[(5, 10, 10), float32] */;
  (%30,)
}

def @func_4504() -> Tensor[(5, 12, 11), int64] {
  @func_4479() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_7264() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %35 = fn () -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
    %31 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %32 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %33 = %31.1;
    %34 = %32.0;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_5884() -> (Tensor[(4, 7, 4), float32],) {
  @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_12701() -> (Tensor[(4, 7, 4), float64],) {
  %36 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %37 = %36.0;
  (%37,)
}

def @func_14694() -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %45 = fn () -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
    %38 = @func_13111() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %39 = @func_14003() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %40 = @func_11414() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %41 = %38.0;
    %42 = %39.0;
    %43 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
    %44 = %40.0;
    (%41, %42, %43, %44)
  };
  %45() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_10468(%var_10464: Tensor[(1, 4, 13), float32], %var_10465: Tensor[(12), float32], %var_10466: Tensor[(120), int8], %var_10467: Tensor[(7, 4, 13), uint32]) -> (Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32], Tensor[(6, 4, 16), float32], Tensor[(120), int8], Tensor[(1, 1, 5), float64], Tensor[(7, 4, 13), uint32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  @func_10462(%var_10464, %var_10465, %var_10466, %var_10467) /* ty=(Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32], Tensor[(6, 4, 16), float32], Tensor[(120), int8], Tensor[(1, 1, 5), float64], Tensor[(7, 4, 13), uint32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_9648() -> Tensor[(12, 5, 8), float32] {
  @func_9646() /* ty=Tensor[(12, 5, 8), float32] */
}

def @func_6015() -> Tensor[(4, 7, 4), float32] {
  @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_7115(%var_7113: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  @func_7112(%var_7113) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */
}

def @func_13646() -> Tensor[(4, 7, 4), float32] {
  %47 = fn () -> Tensor[(4, 7, 4), float32] {
    %46 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %46.0
  };
  %47() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_14815() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), bool]) {
  @func_14813() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), bool]) */
}

def @func_6287() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_10718() -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) {
  %52 = fn () -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) {
    %48 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %49 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
    %50 = %48.0;
    %51 = %49.0;
    (%50, %51)
  };
  %52() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) */
}

def @func_9206() -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
  %57 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
    %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %54 = reshape(%53, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
    %55 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
    %56 = @func_2776(%54) /* ty=Tensor[(6, 4, 16), float32] */;
    (%55, %56, meta[relay.Constant][2] /* ty=Tensor[(384), float32] */)
  };
  %57() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */
}

def @func_10874() -> (Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) {
  %62 = fn () -> (Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) {
    %58 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
    %59 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
    %60 = %58.0;
    %61 = %59.0;
    (%60, %61)
  };
  %62() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) */
}

def @func_7366(%var_7364: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), int64], Tensor[(6, 140), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(1120), float32], Tensor[(784), float64]) {
  @func_7363(%var_7364) /* ty=(Tensor[(4, 7, 4), int64], Tensor[(6, 140), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(1120), float32], Tensor[(784), float64]) */
}

def @func_4366() -> (Tensor[(4, 7, 4), float32],) {
  @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_12671(%var_12660: Tensor[(16, 2, 11), float64]) -> Tensor[(16, 2, 11), float64] {
  %63 = cast(%var_12660, dtype="float64") /* ty=Tensor[(16, 2, 11), float64] */;
  sigmoid(%63) /* ty=Tensor[(16, 2, 11), float64] */
}

def @func_7968() -> Tensor[(4, 7, 4), float32] {
  @func_7966() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_12069() -> Tensor[(3, 4, 1), float32] {
  @func_12067() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_3923(%var_3921: Tensor[(4, 3, 10), int8]) -> (Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  @func_3920(%var_3921) /* ty=(Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) */
}

def @func_7559() -> Tensor[(336), float32] {
  %64 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %64.1
}

def @func_5123() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %65 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %66 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %67 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %68 = %65.0;
  %69 = %66.0;
  (%67, %68, %69)
}

def @func_9897() -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */
}

def @func_15823() -> (Tensor[(4, 7, 4), float32], Tensor[(336), float32], Tensor[(5, 12, 11), int64]) {
  @func_15821() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(336), float32], Tensor[(5, 12, 11), int64]) */
}

def @func_5309() -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %73 = fn () -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
    %70 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %71 = %70.0;
    %72 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    (%71, %72)
  };
  %73() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */
}

def @func_11201(%var_11200: Tensor[(8, 5, 10), float32]) -> Tensor[(8, 5, 10), float32] {
  %75 = fn (%var_11191: Tensor[(8, 5, 10), float32]) -> Tensor[(8, 5, 10), float32] {
    %74 = cast(%var_11191, dtype="float32") /* ty=Tensor[(8, 5, 10), float32] */;
    sinh(%74) /* ty=Tensor[(8, 5, 10), float32] */
  };
  %75(%var_11200) /* ty=Tensor[(8, 5, 10), float32] */
}

def @func_4506() -> Tensor[(5, 12, 11), int64] {
  @func_4504() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_4390() -> Tensor[(4, 7, 4), float32] {
  %77 = fn () -> Tensor[(4, 7, 4), float32] {
    %76 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %76.0
  };
  %77() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_9546() -> Tensor[(784), float64] {
  %79 = fn () -> Tensor[(784), float64] {
    %78 = @func_8548() /* ty=(Tensor[(784), float64],) */;
    %78.0
  };
  %79() /* ty=Tensor[(784), float64] */
}

def @func_6384() -> (Tensor[(5, 12, 11), int64],) {
  %82 = fn () -> (Tensor[(5, 12, 11), int64],) {
    %80 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
    %81 = %80.0;
    (%81,)
  };
  %82() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_16410() -> (Tensor[(3, 1, 16), float64],) {
  %85 = fn () -> (Tensor[(3, 1, 16), float64],) {
    %83 = @func_11621() /* ty=(Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) */;
    %84 = %83.0;
    (%84,)
  };
  %85() /* ty=(Tensor[(3, 1, 16), float64],) */
}

def @func_14559() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(7, 16, 3), float32]) {
  %90 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(7, 16, 3), float32]) {
    %86 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
    %87 = %86.2;
    %88 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    %89 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
    (%87, %88, %89)
  };
  %90() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(7, 16, 3), float32]) */
}

def @func_7493() -> (Tensor[(4, 7, 4), float64],) {
  %91 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %92 = %91.0;
  (%92,)
}

def @func_2910(%var_2909: Tensor[(1, 1, 5), float64]) -> (Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) {
  %103 = fn (%var_2852: Tensor[(1, 1, 5), float64]) -> (Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) {
    %93 = cast(%var_2852, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
    %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
    %95 = reshape(%94, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
    %96 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
    %97 = sigmoid(%96) /* ty=Tensor[(60, 14), float32] */;
    %98 = cast(%97, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
    %99 = reshape(%98, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
    %100 = rsqrt(%93) /* ty=Tensor[(1, 1, 5), float64] */;
    %101 = @func_2214(%95) /* ty=Tensor[(4, 14, 15), float32] */;
    %102 = @func_2214(%99) /* ty=Tensor[(4, 14, 15), float32] */;
    (%100, %101, %97, %102)
  };
  %103(%var_2909) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) */
}

def @func_13144() -> Tensor[(5, 12, 11), float64] {
  %105 = fn () -> Tensor[(5, 12, 11), float64] {
    %104 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
    %104.0
  };
  %105() /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_16274() -> Tensor[(4, 7, 4), uint16] {
  %107 = fn () -> Tensor[(4, 7, 4), uint16] {
    %106 = @func_9098() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) */;
    %106.1
  };
  %107() /* ty=Tensor[(4, 7, 4), uint16] */
}

def @func_12576(%var_12574: Tensor[(2, 192), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(384), float32], Tensor[(2, 192), float32]) {
  @func_12573(%var_12574) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(384), float32], Tensor[(2, 192), float32]) */
}

def @func_16084() -> Tensor[(5, 12, 11), int64] {
  @func_4580() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_14224(%var_14222: Tensor[(10, 7, 8), bool], %var_14223: Tensor[(10, 7, 8), bool]) -> (Tensor[(10, 7, 8), bool], Tensor[(784), float64], Tensor[(3, 60), float64], Tensor[(180), float32]) {
  %118 = fn (%var_14194: Tensor[(10, 7, 8), bool], %var_14195: Tensor[(10, 7, 8), bool]) -> (Tensor[(10, 7, 8), bool], Tensor[(784), float64], Tensor[(3, 60), float64], Tensor[(180), float32]) {
    %108 = cast(%var_14195, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
    %109 = shape_of(%var_14194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %110 = cast(%var_14194, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
    %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %112 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %113 = reshape(%112, newshape=[3, 60]) /* ty=Tensor[(3, 60), float32] */;
    %114 = @func_8482(%113) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) */;
    %115 = logical_or(%110, %111) /* ty=Tensor[(10, 7, 8), bool] */;
    %116 = @func_9545() /* ty=Tensor[(784), float64] */;
    %117 = %114.3;
    (%115, %116, %117, meta[relay.Constant][4] /* ty=Tensor[(180), float32] */)
  };
  %118(%var_14222, %var_14223) /* ty=(Tensor[(10, 7, 8), bool], Tensor[(784), float64], Tensor[(3, 60), float64], Tensor[(180), float32]) */
}

def @func_15352() -> (Tensor[(4, 7, 4), float32],) {
  %121 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %119 = @func_10302() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %120 = %119.0;
    (%120,)
  };
  %121() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_12216(%var_12214: Tensor[(5, 10, 10), float32]) -> (Tensor[(5, 10, 10), float32],) {
  @func_12213(%var_12214) /* ty=(Tensor[(5, 10, 10), float32],) */
}

def @func_12228() -> (Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  @func_12226() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_9775(%var_9721: Tensor[(1, 15), float64]) -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32], Tensor[(15), float64], Tensor[(1, 15), float64], Tensor[(8, 8, 12), float32], Tensor[(2, 384), float32], Tensor[(7, 16, 3), float32]) {
  %122 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %123 = cast(%var_9721, dtype="float64") /* ty=Tensor[(1, 15), float64] */;
  %124 = reshape(%123, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %125 = @func_6897(%124) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */;
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 384), float32] */, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
  %127 = reshape(%126, newshape=[8, 8, 12]) /* ty=Tensor[(8, 8, 12), float32] */;
  %128 = @func_9045(%127) /* ty=(Tensor[(8, 8, 12), float32],) */;
  %129 = %122.1;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(336), float32] */;
  %131 = reshape(%130, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %132 = @func_2367(%131) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %133 = @func_6922() /* ty=Tensor[(4, 7, 4), float32] */;
  %134 = %125.4;
  %135 = %128.0;
  %136 = %132.0;
  (%129, %133, %134, %var_9721, %135, meta[relay.Constant][5] /* ty=Tensor[(2, 384), float32] */, %136)
}

def @func_13370() -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float64]) {
  %137 = @func_10717() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32]) */;
  %138 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %139 = %137.0;
  %140 = @func_7286() /* ty=Tensor[(784), float64] */;
  %141 = %138.0;
  (%139, %140, %141)
}

def @func_7763() -> Tensor[(4, 7, 4), bool] {
  @func_7761() /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_5739() -> (Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */
}

def @func_16384(%var_16383: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(384), float32]) {
  %148 = fn (%var_16380: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    %142 = @func_7580() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %143 = cast(%var_16380, dtype="float32") /* ty=Tensor[(384), float32] */;
    %144 = reshape(%143, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %145 = @func_9984(%144) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
    %146 = %142.0;
    %147 = %145.2;
    (%146, %147, %var_16380)
  };
  %148(%var_16383) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(384), float32]) */
}

def @func_4287() -> (Tensor[(4, 7, 4), float32],) {
  @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_13030() -> Tensor[(3, 4, 1), float32] {
  @func_13028() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_16006() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %149 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %150 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %151 = %149.2;
  (%150, %151)
}

def @func_11897() -> (Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) {
  %158 = fn () -> (Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) {
    %152 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
    %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
    %154 = reshape(%153, newshape=[7, 13, 10]) /* ty=Tensor[(7, 13, 10), float64] */;
    %155 = @func_8741(%154) /* ty=(Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
    %156 = %152.2;
    %157 = %155.2;
    (%156, %157, meta[relay.Constant][6] /* ty=Tensor[(910), float64] */)
  };
  %158() /* ty=(Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) */
}

def @func_6660() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %159 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %160 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %161 = %159.0;
  %162 = %160.0;
  %163 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%161, %162, %163)
}

def @func_11849() -> (Tensor[(784), float64],) {
  @func_11847() /* ty=(Tensor[(784), float64],) */
}

def @func_13391() -> (Tensor[(4, 7, 4), float32],) {
  %165 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %164 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
    (%164,)
  };
  %165() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_5798() -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %166 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %167 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
  %168 = %166.0;
  (%167, %168)
}

def @func_11453() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  @func_11451() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */
}

def @func_11365() -> (Tensor[(5, 12, 11), int64],) {
  %169 = @func_6239() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %170 = %169.0;
  (%170,)
}

def @func_13864(%var_13849: uint16, %var_13857: Tensor[(12), float32], %var_13858: Tensor[(180), float32]) -> (Tensor[(1, 7, 2), bool], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32]) {
  %171 = cast(%var_13849, dtype="bool") /* ty=bool */;
  %172 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 7, 2), uint16] */, dtype="bool") /* ty=Tensor[(1, 7, 2), bool] */;
  %173 = cast(%var_13857, dtype="float32") /* ty=Tensor[(12), float32] */;
  %174 = cast(%var_13858, dtype="float32") /* ty=Tensor[(180), float32] */;
  %175 = reshape(%173, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %176 = reshape(%174, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %177 = @func_2056(%175, %176) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %178 = less_equal(%171, %172) /* ty=Tensor[(1, 7, 2), bool] */;
  %179 = %177.0;
  (%178, %179, %var_13857, %var_13858)
}

def @func_16086() -> Tensor[(5, 12, 11), int64] {
  @func_16084() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_4480() -> Tensor[(5, 12, 11), int64] {
  %181 = fn () -> Tensor[(5, 12, 11), int64] {
    %180 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %180.0
  };
  %181() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_11367() -> (Tensor[(5, 12, 11), int64],) {
  @func_11365() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_11641() -> (Tensor[(5, 12, 11), int64],) {
  %182 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %183 = %182.0;
  (%183,)
}

def @func_8959(%var_8957: Tensor[(7, 16, 3), float32], %var_8958: Tensor[(210, 1), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(7, 8, 11), float64], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float64], Tensor[(336), float32], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(4, 7, 4), float64]) {
  @func_8955(%var_8957, %var_8958) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 8, 11), float64], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float64], Tensor[(336), float32], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(4, 7, 4), float64]) */
}

def @func_15294() -> (Tensor[(4, 7, 4), bool], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  @func_15292() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_13509() -> Tensor[(3, 4, 1), float32] {
  @func_12067() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_12351() -> Tensor[(5, 12, 11), int64] {
  @func_12349() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_15714() -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
  %190 = fn () -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
    %184 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %185 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %186 = @func_12834() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) */;
    %187 = %184.0;
    %188 = %185.0;
    %189 = %186.2;
    (%187, %188, %189)
  };
  %190() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) */
}

def @func_7694() -> Tensor[(336), float32] {
  %191 = fn () -> Tensor[(336), float32] {
    @func_7559() /* ty=Tensor[(336), float32] */
  };
  %191() /* ty=Tensor[(336), float32] */
}

def @func_11589() -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  @func_11587() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_12423() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_5923() -> (Tensor[(4, 7, 4), float32],) {
  %192 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%192,)
}

def @func_4248() -> (Tensor[(5, 12, 11), int64],) {
  %200 = fn () -> (Tensor[(5, 12, 11), int64],) {
    %193 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
    %194 = log10(%193) /* ty=Tensor[(5, 12, 11), float64] */;
    %195 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 12, 11), float64] */, dtype="int64") /* ty=Tensor[(5, 12, 11), int64] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%194, dtype="int64") /* ty=Tensor[(5, 12, 11), int64] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %199 = logical_xor(%197, %198) /* ty=Tensor[(5, 12, 11), int64] */;
    (%199,)
  };
  %200() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_6557() -> Tensor[(4, 7, 4), bool] {
  @func_6555() /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_7363(%var_7361: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), int64], Tensor[(6, 140), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(1120), float32], Tensor[(784), float64]) {
  %201 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %202 = %201.3;
  %203 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 4), float64] */, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %208 = reshape(%207, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %209 = @func_4665(%208) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) */;
  %210 = %209.3;
  %211 = cast(%210, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %212 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 140), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %213 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 140), float32] */, dtype="uint64") /* ty=Tensor[(6, 140), uint64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %215 = subtract(%213, %214) /* ty=Tensor[(6, 140), uint64] */;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %217 = cosh(%216) /* ty=Tensor[(6, 140), float64] */;
  %218 = cast(%217, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %219 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %220 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %221 = cast(%var_7361, dtype="float64") /* ty=Tensor[(784), float64] */;
  %222 = reshape(%221, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %223 = @func_1464(%222) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %224 = bitwise_or(%205, %206) /* ty=Tensor[(4, 7, 4), int64] */;
  %225 = log10(%218) /* ty=Tensor[(6, 140), float64] */;
  %226 = %219.1;
  %227 = %220.0;
  %228 = %223.2;
  (%224, %225, %226, %227, %228, %var_7361)
}

def @func_1466(%var_1465: Tensor[(14, 4, 14), float64]) -> (Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) {
  %235 = fn (%var_1443: Tensor[(14, 4, 14), float64]) -> (Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) {
    %229 = cast(%var_1443, dtype="float64") /* ty=Tensor[(14, 4, 14), float64] */;
    %230 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %231 = reshape(%230, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), float32] */;
    %232 = @func_742(%231) /* ty=(Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) */;
    %233 = exp(%229) /* ty=Tensor[(14, 4, 14), float64] */;
    %234 = %232.0;
    (%233, %234, meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */)
  };
  %235(%var_1465) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */
}

def @func_6519() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) {
  %240 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) {
    %236 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %237 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
    %238 = %236.0;
    %239 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    (%237, %238, %239)
  };
  %240() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */
}

def @func_4364() -> (Tensor[(4, 7, 4), float32],) {
  %241 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %242 = %241.0;
  (%242,)
}

def @func_12111() -> Tensor[(7, 16, 3), float32] {
  %244 = fn () -> Tensor[(7, 16, 3), float32] {
    %243 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
    %243.0
  };
  %244() /* ty=Tensor[(7, 16, 3), float32] */
}

def @func_8121() -> Tensor[(5, 12, 11), int64] {
  %245 = fn () -> Tensor[(5, 12, 11), int64] {
    @func_4580() /* ty=Tensor[(5, 12, 11), int64] */
  };
  %245() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_10681() -> (Tensor[(4, 7, 4), bool],) {
  %247 = fn () -> (Tensor[(4, 7, 4), bool],) {
    %246 = @func_7761() /* ty=Tensor[(4, 7, 4), bool] */;
    (%246,)
  };
  %247() /* ty=(Tensor[(4, 7, 4), bool],) */
}

def @main() -> (Tensor[(24, 14), uint16],) {
  %248 = @func_10696() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
  %249 = %248.2;
  %250 = cast(meta[relay.Constant][12] /* ty=Tensor[(24, 14), float32] */, dtype="int16") /* ty=Tensor[(24, 14), int16] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %252 = cast(%249, dtype="int16") /* ty=Tensor[(24, 14), int16] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %254 = add(%252, %253) /* ty=Tensor[(24, 14), int16] */;
  %255 = cast(%254, dtype="uint16") /* ty=Tensor[(24, 14), uint16] */;
  %256 = shape_of(%249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %257 = cast(%249, dtype="uint16") /* ty=Tensor[(24, 14), uint16] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %259 = bitwise_and(%257, %258) /* ty=Tensor[(24, 14), uint16] */;
  (%259,)
}

def @func_14813() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), bool]) {
  %260 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %261 = %260.0;
  %262 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
  (%261, %262)
}

def @func_12345() -> (Tensor[(4, 7, 4), float32],) {
  @func_12343() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_8787() -> (Tensor[(4, 7, 4), float64],) {
  @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */
}

def @func_2821(%var_2820: Tensor[(12, 6, 5), float64]) -> (Tensor[(12, 6, 5), float64],) {
  %265 = fn (%var_2809: Tensor[(12, 6, 5), float64]) -> (Tensor[(12, 6, 5), float64],) {
    %263 = cast(%var_2809, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
    %264 = atanh(%263) /* ty=Tensor[(12, 6, 5), float64] */;
    (%264,)
  };
  %265(%var_2820) /* ty=(Tensor[(12, 6, 5), float64],) */
}

def @func_16146() -> (Tensor[(784), float64],) {
  %267 = fn () -> (Tensor[(784), float64],) {
    %266 = @func_16064() /* ty=Tensor[(784), float64] */;
    (%266,)
  };
  %267() /* ty=(Tensor[(784), float64],) */
}

def @func_11331() -> (Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %268 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %269 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %270 = @func_9363() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %271 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %272 = @func_7286() /* ty=Tensor[(784), float64] */;
  %273 = %268.0;
  %274 = %269.0;
  %275 = %270.0;
  %276 = %271.0;
  (%272, %273, %274, %275, %276)
}

def @func_5635() -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) {
  %277 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %278 = cast(meta[relay.Constant][13] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %279 = reshape(%278, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %280 = @func_2367(%279) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %281 = %277.0;
  %282 = %280.0;
  (%281, %282, meta[relay.Constant][13] /* ty=Tensor[(336), float32] */)
}

def @func_6923() -> Tensor[(4, 7, 4), float32] {
  %283 = fn () -> Tensor[(4, 7, 4), float32] {
    @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
  };
  %283() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_14381() -> (Tensor[(784), float64], Tensor[(15), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
  @func_14379() /* ty=(Tensor[(784), float64], Tensor[(15), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_11333() -> (Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  @func_11331() /* ty=(Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_12674(%var_12672: Tensor[(16, 2, 11), float64]) -> Tensor[(16, 2, 11), float64] {
  @func_12671(%var_12672) /* ty=Tensor[(16, 2, 11), float64] */
}

def @func_15580() -> (Tensor[(4, 7, 4), float32],) {
  %286 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %284 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %285 = %284.0;
    (%285,)
  };
  %286() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_15217() -> (Tensor[(336), float32],) {
  @func_15215() /* ty=(Tensor[(336), float32],) */
}

def @func_11689(%var_11688: Tensor[(16, 11, 12), float32]) -> (Tensor[(336), float32], Tensor[(16, 11, 12), float64]) {
  %297 = fn (%var_11657: Tensor[(16, 11, 12), float32]) -> (Tensor[(336), float32], Tensor[(16, 11, 12), float64]) {
    %287 = cast(%var_11657, dtype="float32") /* ty=Tensor[(16, 11, 12), float32] */;
    %288 = tan(%287) /* ty=Tensor[(16, 11, 12), float32] */;
    %289 = cast(%var_11657, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
    %291 = cast(%288, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %293 = logical_or(%291, %292) /* ty=Tensor[(16, 11, 12), bool] */;
    %294 = cast(%293, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
    %295 = @func_7693() /* ty=Tensor[(336), float32] */;
    %296 = asinh(%294) /* ty=Tensor[(16, 11, 12), float64] */;
    (%295, %296)
  };
  %297(%var_11688) /* ty=(Tensor[(336), float32], Tensor[(16, 11, 12), float64]) */
}

def @func_3920(%var_3882: Tensor[(4, 3, 10), int8]) -> (Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  %298 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %299 = cast(%var_3882, dtype="int8") /* ty=Tensor[(4, 3, 10), int8] */;
  %300 = cast(%var_3882, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
  %301 = cast(meta[relay.Constant][15] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %302 = reshape(%301, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %303 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %304 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %305 = reshape(%303, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %306 = reshape(%304, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %307 = @func_1934(%305, %306) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
  %308 = bitwise_xor(%298, %299) /* ty=Tensor[(4, 3, 10), int8] */;
  %309 = tan(%300) /* ty=Tensor[(4, 3, 10), float32] */;
  %310 = @func_2776(%302) /* ty=Tensor[(6, 4, 16), float32] */;
  %311 = %307.4;
  (%308, %309, %310, meta[relay.Constant][15] /* ty=Tensor[(384), float32] */, %311, meta[relay.Constant][16] /* ty=Tensor[(48), float64] */)
}

def @func_4582() -> Tensor[(5, 12, 11), int64] {
  @func_4580() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_2059(%var_2057: Tensor[(3, 4, 1), float32], %var_2058: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), bool],) {
  %315 = fn (%var_2048: Tensor[(3, 4, 1), float32], %var_2049: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), bool],) {
    %312 = cast(%var_2048, dtype="bool") /* ty=Tensor[(3, 4, 1), bool] */;
    %313 = cast(%var_2049, dtype="bool") /* ty=Tensor[(3, 4, 15), bool] */;
    %314 = less(%312, %313) /* ty=Tensor[(3, 4, 15), bool] */;
    (%314,)
  };
  %315(%var_2057, %var_2058) /* ty=(Tensor[(3, 4, 15), bool],) */
}

def @func_8607() -> (Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) {
  @func_8605() /* ty=(Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) */
}

def @func_13254() -> (Tensor[(12, 6, 5), bool],) {
  %323 = fn () -> (Tensor[(12, 6, 5), bool],) {
    %316 = @func_5061() /* ty=(Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) */;
    %317 = %316.1;
    %318 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 6, 5), float64] */, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
    %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %320 = cast(%317, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
    %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %322 = equal(%320, %321) /* ty=Tensor[(12, 6, 5), bool] */;
    (%322,)
  };
  %323() /* ty=(Tensor[(12, 6, 5), bool],) */
}

def @func_4947() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) {
  %337 = fn () -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) {
    %324 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %325 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
    %326 = cast(%325, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
    %327 = sigmoid(%326) /* ty=Tensor[(4, 7, 4), float64] */;
    %328 = cast(%325, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
    %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
    %330 = cast(%327, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %332 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %333 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
    %334 = %324.1;
    %335 = greater_equal(%330, %331) /* ty=Tensor[(4, 7, 4), bool] */;
    %336 = %332.0;
    (%333, %334, %335, %336)
  };
  %337() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */
}

def @func_9895() -> (Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %338 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %339 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %340 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %341 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %342 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %343 = %338.0;
  %344 = %339.2;
  %345 = %340.0;
  %346 = %341.0;
  %347 = %342.1;
  (%343, %344, %345, %346, %347)
}

def @func_14003() -> (Tensor[(5, 12, 11), int64],) {
  %348 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
  (%348,)
}

def @func_8226(%var_8225: Tensor[(12), float32]) -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) {
  %356 = fn (%var_8216: Tensor[(12), float32]) -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) {
    %349 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %350 = cast(%var_8216, dtype="float32") /* ty=Tensor[(12), float32] */;
    %351 = reshape(%350, newshape=[1, 12]) /* ty=Tensor[(1, 12), float32] */;
    %352 = @func_6228(%351) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) */;
    %353 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    %354 = %349.0;
    %355 = %352.3;
    (%353, %354, %355, %var_8216)
  };
  %356(%var_8225) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) */
}

def @func_14464() -> Tensor[(4, 7, 4), float32] {
  %357 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %357.0
}

def @func_4542() -> (Tensor[(4, 7, 4), float64],) {
  %358 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %359 = %358.0;
  %360 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %364 = add(%362, %363) /* ty=Tensor[(4, 7, 4), float64] */;
  (%364,)
}

def @func_6899(%var_6898: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
  %376 = fn (%var_6881: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
    %365 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
    %366 = cast(%365, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
    %367 = @func_6036() /* ty=(Tensor[(784), float64],) */;
    %368 = cast(%var_6881, dtype="float64") /* ty=Tensor[(15), float64] */;
    %369 = reshape(%368, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
    %370 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %371 = exp(%366) /* ty=Tensor[(4, 7, 4), float64] */;
    %372 = %367.0;
    %373 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    %374 = @func_4592(%369) /* ty=Tensor[(3, 1, 5), float64] */;
    %375 = %370.0;
    (%371, %372, %373, %374, %var_6881, %375)
  };
  %376(%var_6898) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_9817() -> (Tensor[(48), float64],) {
  %379 = fn () -> (Tensor[(48), float64],) {
    %377 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
    %378 = %377.2;
    (%378,)
  };
  %379() /* ty=(Tensor[(48), float64],) */
}

def @func_16229() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %380 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %381 = @func_11641() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %382 = %380.0;
  %383 = %381.0;
  (%382, %383)
}

def @func_12870(%var_12869: Tensor[(2, 16, 2), float64]) -> Tensor[(2, 16, 2), float64] {
  %385 = fn (%var_12865: Tensor[(2, 16, 2), float64]) -> Tensor[(2, 16, 2), float64] {
    %384 = cast(%var_12865, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
    cosh(%384) /* ty=Tensor[(2, 16, 2), float64] */
  };
  %385(%var_12869) /* ty=Tensor[(2, 16, 2), float64] */
}

def @func_5523() -> (Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) {
  %397 = fn () -> (Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) {
    %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 7, 1), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
    %387 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 7, 5), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 5), bool] */;
    %388 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
    %389 = reshape(%388, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), float64] */;
    %390 = @func_2908(%389) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) */;
    %391 = cast(meta[relay.Constant][22] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
    %392 = reshape(%391, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
    %393 = @func_1464(%392) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
    %394 = logical_and(%386, %387) /* ty=Tensor[(3, 7, 5), bool] */;
    %395 = %390.0;
    %396 = %393.1;
    (%394, %395, meta[relay.Constant][21] /* ty=Tensor[(1, 5), float64] */, %396, meta[relay.Constant][22] /* ty=Tensor[(784), float64] */)
  };
  %397() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */
}

def @func_15339() -> Tensor[(336), float32] {
  %399 = fn () -> Tensor[(336), float32] {
    %398 = @func_14667() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) */;
    %398.1
  };
  %399() /* ty=Tensor[(336), float32] */
}

def @func_9813() -> (Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  @func_9811() /* ty=(Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_2776(%var_2751: Tensor[(6, 4, 16), float32]) -> Tensor[(6, 4, 16), float32] {
  %400 = cast(%var_2751, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
  erf(%400) /* ty=Tensor[(6, 4, 16), float32] */
}

def @func_9646() -> Tensor[(12, 5, 8), float32] {
  %401 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
  %401.0
}

def @func_9606() -> Tensor[(5, 12, 11), float32] {
  %402 = @func_4580() /* ty=Tensor[(5, 12, 11), int64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  log2(%403) /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_6629(%var_6627: Tensor[(192, 2), float32], %var_6628: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) {
  %412 = fn (%var_6595: Tensor[(192, 2), float32], %var_6596: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) {
    %404 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
    %405 = cast(%var_6595, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
    %406 = cast(%var_6596, dtype="float64") /* ty=Tensor[(5), float64] */;
    %407 = reshape(%405, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %408 = reshape(%406, newshape=[5]) /* ty=Tensor[(5), float64] */;
    %409 = @func_5406(%407, %408) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
    %410 = %404.0;
    %411 = %409.5;
    (%410, %411, %var_6595, %var_6596)
  };
  %412(%var_6627, %var_6628) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) */
}

def @func_15079() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %416 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
    %413 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %414 = %413.0;
    %415 = @func_12349() /* ty=Tensor[(5, 12, 11), int64] */;
    (%414, %415)
  };
  %416() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */
}

def @func_13028() -> Tensor[(3, 4, 1), float32] {
  @func_12067() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_11451() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  %417 = @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %418 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
  %419 = %417.0;
  %420 = %418.0;
  (%419, %420)
}

def @func_13805(%var_13802: Tensor[(12), float32], %var_13803: Tensor[(3, 40), int8], %var_13804: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(12), float32], Tensor[(12, 5, 8), float32], Tensor[(4, 3, 10), float32], Tensor[(3, 40), int8], Tensor[(4, 14, 15), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32], Tensor[(1, 336), float32], Tensor[(2560), int64], Tensor[(3, 1, 5), float64], Tensor[(15, 1), float64]) {
  %449 = fn (%var_13728: Tensor[(12), float32], %var_13739: Tensor[(3, 40), int8], %var_13784: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(12), float32], Tensor[(12, 5, 8), float32], Tensor[(4, 3, 10), float32], Tensor[(3, 40), int8], Tensor[(4, 14, 15), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32], Tensor[(1, 336), float32], Tensor[(2560), int64], Tensor[(3, 1, 5), float64], Tensor[(15, 1), float64]) {
    %421 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %422 = cast(%var_13728, dtype="float32") /* ty=Tensor[(12), float32] */;
    %423 = reshape(%422, newshape=[12]) /* ty=Tensor[(12), float32] */;
    %424 = @func_8224(%423) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) */;
    %425 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
    %426 = cast(%var_13739, dtype="int8") /* ty=Tensor[(3, 40), int8] */;
    %427 = reshape(%426, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), int8] */;
    %428 = @func_3920(%427) /* ty=(Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
    %429 = cast(meta[relay.Constant][23] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %430 = reshape(%429, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %431 = @func_8413(%430) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) */;
    %432 = cast(%var_13784, dtype="int64") /* ty=Tensor[(2560), int64] */;
    %433 = cast(%var_13784, dtype="int64") /* ty=Tensor[(2560), int64] */;
    %434 = reshape(%432, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), int64] */;
    %435 = reshape(%433, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), int64] */;
    %436 = @func_9459(%434, %435) /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) */;
    %437 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
    %438 = reshape(%437, newshape=[15]) /* ty=Tensor[(15), float64] */;
    %439 = @func_7903(%438) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
    %440 = %421.0;
    %441 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
    %442 = %424.1;
    %443 = %425.1;
    %444 = %428.1;
    %445 = %431.3;
    %446 = @func_12501() /* ty=Tensor[(4, 7, 4), float32] */;
    %447 = %436.3;
    %448 = %439.2;
    (%440, %441, %442, %var_13728, %443, %444, %var_13739, %445, meta[relay.Constant][23] /* ty=Tensor[(384), float32] */, %446, %447, %var_13784, %448, meta[relay.Constant][24] /* ty=Tensor[(15, 1), float64] */)
  };
  %449(%var_13802, %var_13803, %var_13804) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(12), float32], Tensor[(12, 5, 8), float32], Tensor[(4, 3, 10), float32], Tensor[(3, 40), int8], Tensor[(4, 14, 15), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32], Tensor[(1, 336), float32], Tensor[(2560), int64], Tensor[(3, 1, 5), float64], Tensor[(15, 1), float64]) */
}

def @func_9365() -> (Tensor[(4, 7, 4), float32],) {
  @func_9363() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_6662() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  @func_6660() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_13996() -> (Tensor[(784), float64], Tensor[(5, 12, 11), int64]) {
  @func_13994() /* ty=(Tensor[(784), float64], Tensor[(5, 12, 11), int64]) */
}

def @func_11014() -> (Tensor[(4, 7, 4), float32],) {
  %450 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %451 = %450.1;
  (%451,)
}

def @func_14505(%var_14502: Tensor[(360), float64], %var_14503: Tensor[(384), float32], %var_14504: Tensor[(5), float64]) -> (Tensor[(12, 5, 8), float32], Tensor[(12, 6, 5), float64], Tensor[(360), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64]) {
  @func_14500(%var_14502, %var_14503, %var_14504) /* ty=(Tensor[(12, 5, 8), float32], Tensor[(12, 6, 5), float64], Tensor[(360), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64]) */
}

def @func_7286() -> Tensor[(784), float64] {
  %452 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %452.0
}

def @func_6285() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %453 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %454 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %457 = %453.0;
  %458 = atanh(%456) /* ty=Tensor[(4, 7, 4), float32] */;
  (%457, %458)
}

def @func_13571() -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32]) {
  %462 = fn () -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32]) {
    %459 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
    %460 = %459.0;
    %461 = @func_7693() /* ty=Tensor[(336), float32] */;
    (%460, %461)
  };
  %462() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32]) */
}

def @func_8012() -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32]) {
  %467 = fn () -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32]) {
    %463 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
    %464 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %465 = %463.1;
    %466 = %464.0;
    (%465, %466)
  };
  %467() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_11785() -> Tensor[(5, 12, 11), int64] {
  %468 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %468.0
}

def @func_13839(%var_13838: Tensor[(48), float64]) -> (Tensor[(784), float64], Tensor[(5, 3, 14), float64], Tensor[(105, 2), float64], Tensor[(48), float64]) {
  %477 = fn (%var_13821: Tensor[(48), float64]) -> (Tensor[(784), float64], Tensor[(5, 3, 14), float64], Tensor[(105, 2), float64], Tensor[(48), float64]) {
    %469 = @func_6036() /* ty=(Tensor[(784), float64],) */;
    %470 = cast(meta[relay.Constant][25] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %471 = cast(%var_13821, dtype="float64") /* ty=Tensor[(48), float64] */;
    %472 = reshape(%470, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
    %473 = reshape(%471, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %474 = @func_5181(%472, %473) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
    %475 = %469.0;
    %476 = %474.0;
    (%475, %476, meta[relay.Constant][25] /* ty=Tensor[(105, 2), float64] */, %var_13821)
  };
  %477(%var_13838) /* ty=(Tensor[(784), float64], Tensor[(5, 3, 14), float64], Tensor[(105, 2), float64], Tensor[(48), float64]) */
}

def @func_11643() -> (Tensor[(5, 12, 11), int64],) {
  @func_11641() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_15924(%var_15909: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(14, 4, 14), float64], Tensor[(784), float64]) {
  %478 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %479 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %480 = cast(%var_15909, dtype="float64") /* ty=Tensor[(784), float64] */;
  %481 = reshape(%480, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
  %482 = @func_1464(%481) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
  %483 = %478.0;
  %484 = %479.0;
  %485 = %482.0;
  (%483, %484, %485, %var_15909)
}

def @func_7112(%var_7095: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  %486 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %487 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %488 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %489 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %490 = reshape(%489, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %491 = @func_4614(%490) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %492 = cast(%var_7095, dtype="float64") /* ty=Tensor[(210), float64] */;
  %493 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %494 = reshape(%492, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
  %495 = reshape(%493, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %496 = @func_5181(%494, %495) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
  %497 = %486.0;
  %498 = %487.0;
  %499 = %488.0;
  %500 = %491.0;
  %501 = %496.3;
  (%497, %498, %499, %500, meta[relay.Constant][26] /* ty=Tensor[(4, 12), float64] */, %501, %var_7095)
}

def @func_16363() -> Tensor[(336), float32] {
  %503 = fn () -> Tensor[(336), float32] {
    %502 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
    %502.1
  };
  %503() /* ty=Tensor[(336), float32] */
}

def @func_16440(%var_16439: Tensor[(14, 1, 2), float64]) -> Tensor[(14, 1, 2), float64] {
  %505 = fn (%var_16411: Tensor[(14, 1, 2), float64]) -> Tensor[(14, 1, 2), float64] {
    %504 = cast(%var_16411, dtype="float64") /* ty=Tensor[(14, 1, 2), float64] */;
    asin(%504) /* ty=Tensor[(14, 1, 2), float64] */
  };
  %505(%var_16439) /* ty=Tensor[(14, 1, 2), float64] */
}

def @func_10266() -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
  %513 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) {
    %506 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
    %507 = @func_6036() /* ty=(Tensor[(784), float64],) */;
    %508 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %509 = reshape(%508, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
    %510 = %506.1;
    %511 = %507.0;
    %512 = @func_2776(%509) /* ty=Tensor[(6, 4, 16), float32] */;
    (%510, %511, %512, meta[relay.Constant][27] /* ty=Tensor[(384), float32] */)
  };
  %513() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */
}

def @func_745(%var_743: Tensor[(5, 16, 14), float32]) -> (Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) {
  @func_742(%var_743) /* ty=(Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) */
}

def @func_8955(%var_8925: Tensor[(7, 16, 3), float32], %var_8939: Tensor[(210, 1), float64]) -> (Tensor[(4, 7, 4), float64], Tensor[(7, 8, 11), float64], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float64], Tensor[(336), float32], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(4, 7, 4), float64]) {
  %514 = @func_6660() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %515 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
  %516 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %517 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %518 = %517.0;
  %519 = cast(%var_8925, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %523 = cast(%var_8939, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %524 = reshape(%523, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %525 = @func_8301(%524) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %526 = @func_8785() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %527 = %514.0;
  %528 = %515.0;
  %529 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
  %530 = %516.0;
  %531 = mod(%521, %522) /* ty=Tensor[(7, 16, 3), float64] */;
  %532 = @func_7559() /* ty=Tensor[(336), float32] */;
  %533 = %525.2;
  %534 = %526.0;
  (%527, %528, %529, %530, %531, %532, %533, %var_8939, %534)
}

def @func_5063() -> (Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) {
  @func_5061() /* ty=(Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) */
}

def @func_8785() -> (Tensor[(4, 7, 4), float64],) {
  %535 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %536 = %535.0;
  (%536,)
}

def @func_10184(%var_10154: Tensor[(1, 5), float64], %var_10177: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %537 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %538 = cast(%var_10154, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %539 = reshape(%537, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %540 = reshape(%538, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %541 = @func_5406(%539, %540) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
  %542 = @func_7580() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %543 = cast(%var_10177, dtype="float64") /* ty=Tensor[(15), float64] */;
  %544 = reshape(%543, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %545 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
  %546 = %541.4;
  %547 = %542.0;
  %548 = @func_4592(%544) /* ty=Tensor[(3, 1, 5), float64] */;
  (%545, %546, meta[relay.Constant][28] /* ty=Tensor[(384), float32] */, %var_10154, %547, %548, %var_10177)
}

def @func_13578() -> Tensor[(5, 12, 11), int64] {
  @func_4479() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_16321() -> Tensor[(4, 7, 4), float32] {
  %550 = fn () -> Tensor[(4, 7, 4), float32] {
    %549 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %549.0
  };
  %550() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_13278() -> (Tensor[(5, 12, 11), int64],) {
  %553 = fn () -> (Tensor[(5, 12, 11), int64],) {
    %551 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %552 = %551.0;
    (%552,)
  };
  %553() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_8651() -> Tensor[(4, 7, 4), float32] {
  %555 = fn () -> Tensor[(4, 7, 4), float32] {
    %554 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
    %554.0
  };
  %555() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_12836() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
  @func_12834() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) */
}

def @func_14668() -> (Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %562 = fn () -> (Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
    %556 = @func_10873() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(5, 12, 11), int64]) */;
    %557 = @func_7032() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) */;
    %558 = @func_12040() /* ty=Tensor[(5, 12, 11), int64] */;
    %559 = @func_7693() /* ty=Tensor[(336), float32] */;
    %560 = %556.1;
    %561 = %557.0;
    (%558, %559, %560, %561)
  };
  %562() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) */
}

def @func_9462(%var_9460: Tensor[(2, 1280), int64], %var_9461: Tensor[(2, 1280), int64]) -> (Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) {
  %606 = fn (%var_9400: Tensor[(2, 1280), int64], %var_9443: Tensor[(2, 1280), int64]) -> (Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) {
    %563 = @func_7669() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */;
    %564 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %565 = reshape(%564, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
    %566 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %567 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %568 = reshape(%566, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
    %569 = reshape(%567, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
    %570 = @func_4119(%568, %569) /* ty=(Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) */;
    %571 = @func_2214(%565) /* ty=Tensor[(4, 14, 15), float32] */;
    %572 = cast(%571, dtype="float32") /* ty=Tensor[(4, 14, 15), float32] */;
    %573 = reshape(%572, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
    %574 = cast(%var_9400, dtype="float32") /* ty=Tensor[(2, 1280), float32] */;
    %575 = atan(%574) /* ty=Tensor[(2, 1280), float32] */;
    %576 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(2), int32] */;
    %578 = cast(%575, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %580 = bitwise_and(%578, %579) /* ty=Tensor[(2, 1280), int64] */;
    %581 = cast(%580, dtype="float64") /* ty=Tensor[(2, 1280), float64] */;
    %582 = log10(%581) /* ty=Tensor[(2, 1280), float64] */;
    %583 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 1280), float64] */, dtype="uint64") /* ty=Tensor[(2, 1280), uint64] */;
    %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(2), int32] */;
    %585 = cast(%582, dtype="uint64") /* ty=Tensor[(2, 1280), uint64] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %587 = cast(%var_9400, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %588 = shape_of(%582, dtype="int32") /* ty=Tensor[(2), int32] */;
    %589 = cast(%582, dtype="int64") /* ty=Tensor[(2, 1280), int64] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %591 = left_shift(%589, %590) /* ty=Tensor[(2, 1280), int64] */;
    %592 = cast(%var_9443, dtype="int8") /* ty=Tensor[(2, 1280), int8] */;
    %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(2), int32] */;
    %594 = cast(%591, dtype="int8") /* ty=Tensor[(2, 1280), int8] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %596 = cast(%575, dtype="uint8") /* ty=Tensor[(2, 1280), uint8] */;
    %597 = shape_of(%582, dtype="int32") /* ty=Tensor[(2), int32] */;
    %598 = cast(%582, dtype="uint8") /* ty=Tensor[(2, 1280), uint8] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %600 = %563.0;
    %601 = %570.2;
    %602 = @func_2214(%573) /* ty=Tensor[(4, 14, 15), float32] */;
    %603 = maximum(%585, %586) /* ty=Tensor[(2, 1280), uint64] */;
    %604 = bitwise_or(%594, %595) /* ty=Tensor[(2, 1280), int8] */;
    %605 = add(%598, %599) /* ty=Tensor[(2, 1280), uint8] */;
    (%600, %571, meta[relay.Constant][29] /* ty=Tensor[(840), float32] */, %601, %602, %603, %604, %605)
  };
  %606(%var_9460, %var_9461) /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(1, 336), float32], Tensor[(4, 14, 15), float32], Tensor[(2, 1280), uint64], Tensor[(2, 1280), int8], Tensor[(2, 1280), uint8]) */
}

def @func_16466(%var_16464: Tensor[(15, 3, 4), float64], %var_16465: Tensor[(15, 3, 4), float64]) -> (Tensor[(15, 3, 4), float64], Tensor[(5, 12, 11), int64]) {
  %614 = fn (%var_16450: Tensor[(15, 3, 4), float64], %var_16451: Tensor[(15, 3, 4), float64]) -> (Tensor[(15, 3, 4), float64], Tensor[(5, 12, 11), int64]) {
    %607 = cast(%var_16451, dtype="float64") /* ty=Tensor[(15, 3, 4), float64] */;
    %608 = shape_of(%var_16450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %609 = cast(%var_16450, dtype="float64") /* ty=Tensor[(15, 3, 4), float64] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %611 = @func_13169() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) */;
    %612 = floor_mod(%609, %610) /* ty=Tensor[(15, 3, 4), float64] */;
    %613 = %611.0;
    (%612, %613)
  };
  %614(%var_16464, %var_16465) /* ty=(Tensor[(15, 3, 4), float64], Tensor[(5, 12, 11), int64]) */
}

def @func_6037() -> (Tensor[(784), float64],) {
  %617 = fn () -> (Tensor[(784), float64],) {
    %615 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
    %616 = %615.4;
    (%616,)
  };
  %617() /* ty=(Tensor[(784), float64],) */
}

def @func_12067() -> Tensor[(3, 4, 1), float32] {
  %618 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  acos(%618) /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_4268() -> Tensor[(4, 7, 4), float32] {
  @func_4266() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_6555() -> Tensor[(4, 7, 4), bool] {
  @func_6329() /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_5184(%var_5182: Tensor[(5, 3, 14), float64], %var_5183: Tensor[(48), float64]) -> (Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) {
  %635 = fn (%var_5146: Tensor[(5, 3, 14), float64], %var_5157: Tensor[(48), float64]) -> (Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) {
    %619 = cast(%var_5146, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
    %620 = cast(%var_5157, dtype="float64") /* ty=Tensor[(48), float64] */;
    %621 = reshape(%620, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %622 = @func_4614(%621) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
    %623 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %624 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %625 = reshape(%623, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
    %626 = reshape(%624, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
    %627 = @func_604(%625, %626) /* ty=Tensor[(15, 14, 3), float32] */;
    %628 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%627, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %632 = exp(%619) /* ty=Tensor[(5, 3, 14), float64] */;
    %633 = %622.0;
    %634 = floor_divide(%630, %631) /* ty=Tensor[(15, 14, 3), float32] */;
    (%632, %633, %var_5157, %634)
  };
  %635(%var_5182, %var_5183) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */
}

def @func_4748() -> (Tensor[(4, 7, 4), float64],) {
  @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */
}

def @func_9564() -> (Tensor[(4, 7, 4), float32],) {
  %638 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %636 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %637 = %636.0;
    (%637,)
  };
  %638() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_2367(%var_2363: Tensor[(7, 16, 3), float32]) -> (Tensor[(7, 16, 3), float32],) {
  %639 = cast(%var_2363, dtype="float32") /* ty=Tensor[(7, 16, 3), float32] */;
  %640 = cosh(%639) /* ty=Tensor[(7, 16, 3), float32] */;
  (%640,)
}

def @func_16313() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  %644 = fn () -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
    %641 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
    %642 = @func_11785() /* ty=Tensor[(5, 12, 11), int64] */;
    %643 = %641.0;
    (%642, %643)
  };
  %644() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) */
}

def @func_16066() -> Tensor[(784), float64] {
  @func_16064() /* ty=Tensor[(784), float64] */
}

def @func_7561() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_6240() -> (Tensor[(5, 12, 11), int64],) {
  %646 = fn () -> (Tensor[(5, 12, 11), int64],) {
    %645 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    (%645,)
  };
  %646() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_12041() -> Tensor[(5, 12, 11), int64] {
  %648 = fn () -> Tensor[(5, 12, 11), int64] {
    %647 = @func_9811() /* ty=(Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
    %647.1
  };
  %648() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_15755() -> (Tensor[(48), float64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32]) {
  %649 = @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
  %650 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %651 = @func_12226() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) */;
  %652 = %649.0;
  %653 = %650.0;
  %654 = %651.2;
  (%652, %653, %654)
}

def @func_8416(%var_8414: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) {
  @func_8413(%var_8414) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(4, 14, 15), float32], Tensor[(840), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(336), float32]) */
}

def @func_12834() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64]) {
  %655 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %656 = @func_11621() /* ty=(Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) */;
  %657 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %658 = %655.0;
  %659 = %656.1;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_10188(%var_10186: Tensor[(1, 5), float64], %var_10187: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  @func_10184(%var_10186, %var_10187) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */
}

def @func_4119(%var_4096: Tensor[(16, 16, 10), int64], %var_4097: Tensor[(16, 16, 10), int64]) -> (Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) {
  %661 = cast(%var_4097, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %662 = shape_of(%var_4096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_4096, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %665 = greater(%663, %664) /* ty=Tensor[(16, 16, 10), bool] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
  %667 = shape_of(%var_4097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_4097, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %670 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %671 = reshape(%670, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %672 = @func_2367(%671) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %673 = mod(%668, %669) /* ty=Tensor[(16, 16, 10), float64] */;
  %674 = %672.0;
  (%673, %674, meta[relay.Constant][33] /* ty=Tensor[(1, 336), float32] */)
}

def @func_14932() -> Tensor[(4, 7, 4), float32] {
  @func_14930() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_5409(%var_5407: Tensor[(384), float32], %var_5408: Tensor[(5), float64]) -> (Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) {
  %694 = fn (%var_5355: Tensor[(384), float32], %var_5363: Tensor[(5), float64]) -> (Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) {
    %675 = @func_5061() /* ty=(Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) */;
    %676 = cast(%var_5355, dtype="float32") /* ty=Tensor[(384), float32] */;
    %677 = reshape(%676, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
    %678 = cast(%var_5363, dtype="float64") /* ty=Tensor[(5), float64] */;
    %679 = reshape(%678, newshape=[1, 1, 5]) /* ty=Tensor[(1, 1, 5), float64] */;
    %680 = @func_2908(%679) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(4, 14, 15), float32], Tensor[(60, 14), float32], Tensor[(4, 14, 15), float32]) */;
    %681 = %680.2;
    %682 = cast(%681, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
    %683 = cast(meta[relay.Constant][34] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %684 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
    %685 = reshape(%683, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), float64] */;
    %686 = reshape(%684, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %687 = @func_5181(%685, %686) /* ty=(Tensor[(5, 3, 14), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64], Tensor[(15, 14, 3), float32]) */;
    %688 = %687.0;
    %689 = cast(%688, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
    %690 = %675.1;
    %691 = @func_2776(%677) /* ty=Tensor[(6, 4, 16), float32] */;
    %692 = atan(%682) /* ty=Tensor[(60, 14), float64] */;
    %693 = log10(%689) /* ty=Tensor[(5, 3, 14), float64] */;
    (%690, %691, %var_5355, %var_5363, meta[relay.Constant][34] /* ty=Tensor[(210), float64] */, meta[relay.Constant][35] /* ty=Tensor[(1, 48), float64] */, %692, %693)
  };
  %694(%var_5407, %var_5408) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */
}

def @func_4594(%var_4593: Tensor[(3, 1, 5), float64]) -> Tensor[(3, 1, 5), float64] {
  %696 = fn (%var_4588: Tensor[(3, 1, 5), float64]) -> Tensor[(3, 1, 5), float64] {
    %695 = cast(%var_4588, dtype="float64") /* ty=Tensor[(3, 1, 5), float64] */;
    tan(%695) /* ty=Tensor[(3, 1, 5), float64] */
  };
  %696(%var_4593) /* ty=Tensor[(3, 1, 5), float64] */
}

def @func_5800() -> (Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */
}

def @func_12349() -> Tensor[(5, 12, 11), int64] {
  @func_11785() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_8099() -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) {
  %704 = fn () -> (Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) {
    %697 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 11), float32] */;
    %698 = sinh(%697) /* ty=Tensor[(7, 8, 11), float32] */;
    %699 = cast(%698, dtype="float64") /* ty=Tensor[(7, 8, 11), float64] */;
    %700 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %701 = sigmoid(%699) /* ty=Tensor[(7, 8, 11), float64] */;
    %702 = @func_7693() /* ty=Tensor[(336), float32] */;
    %703 = %700.0;
    (%701, %702, %703)
  };
  %704() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */
}

def @func_16207() -> (Tensor[(7, 8, 11), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  %705 = @func_13570() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32]) */;
  %706 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %707 = %705.0;
  %708 = %706.0;
  %709 = @func_7966() /* ty=Tensor[(4, 7, 4), float32] */;
  (%707, %708, %709)
}

def @func_4544() -> (Tensor[(4, 7, 4), float64],) {
  @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */
}

def @func_15215() -> (Tensor[(336), float32],) {
  %710 = @func_7693() /* ty=Tensor[(336), float32] */;
  (%710,)
}

def @func_13466(%var_13417: Tensor[(180), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float32], Tensor[(180), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  %711 = cast(%var_13417, dtype="float32") /* ty=Tensor[(180), float32] */;
  %712 = reshape(%711, newshape=[3, 60]) /* ty=Tensor[(3, 60), float32] */;
  %713 = @func_8482(%712) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) */;
  %714 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %715 = %713.6;
  %716 = @func_12953() /* ty=Tensor[(4, 7, 4), float32] */;
  %717 = @func_11785() /* ty=Tensor[(5, 12, 11), int64] */;
  (%714, %715, %var_13417, %716, %717)
}

def @func_11826() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  %718 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %719 = @func_11451() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %720 = %718.0;
  %721 = %719.1;
  (%720, %721)
}

def @func_8343() -> Tensor[(336), float32] {
  @func_8341() /* ty=Tensor[(336), float32] */
}

def @func_14740(%var_14738: Tensor[(4, 8, 8), uint32], %var_14739: Tensor[(4, 8, 8), uint32]) -> (Tensor[(4, 8, 8), uint32],) {
  @func_14736(%var_14738, %var_14739) /* ty=(Tensor[(4, 8, 8), uint32],) */
}

def @func_607(%var_605: Tensor[(15, 14, 3), float32], %var_606: Tensor[(15, 14, 3), float32]) -> Tensor[(15, 14, 3), float32] {
  %728 = fn (%var_582: Tensor[(15, 14, 3), float32], %var_595: Tensor[(15, 14, 3), float32]) -> Tensor[(15, 14, 3), float32] {
    %722 = cast(%var_582, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
    %723 = atan(%722) /* ty=Tensor[(15, 14, 3), float32] */;
    %724 = cast(%var_595, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
    %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
    %726 = cast(%723, dtype="float32") /* ty=Tensor[(15, 14, 3), float32] */;
    %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%726, %727) /* ty=Tensor[(15, 14, 3), float32] */
  };
  %728(%var_605, %var_606) /* ty=Tensor[(15, 14, 3), float32] */
}

def @func_7288() -> Tensor[(784), float64] {
  @func_7286() /* ty=Tensor[(784), float64] */
}

def @func_5737() -> (Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %729 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %730 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
  %731 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %732 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %733 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %734 = cast(meta[relay.Constant][37] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %735 = reshape(%734, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
  %736 = %729.0;
  %737 = %730.2;
  %738 = %731.0;
  %739 = %732.0;
  %740 = %733.0;
  %741 = @func_4592(%735) /* ty=Tensor[(3, 1, 5), float64] */;
  (%736, %737, %738, %739, %740, %741, meta[relay.Constant][37] /* ty=Tensor[(15), float64] */)
}

def @func_5925() -> (Tensor[(4, 7, 4), float32],) {
  @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_10776(%var_10775: Tensor[(24, 14), float32]) -> (Tensor[(24, 14), bool],) {
  %749 = fn (%var_10765: Tensor[(24, 14), float32]) -> (Tensor[(24, 14), bool],) {
    %742 = @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */;
    %743 = %742.2;
    %744 = cast(%var_10765, dtype="bool") /* ty=Tensor[(24, 14), bool] */;
    %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %746 = cast(%743, dtype="bool") /* ty=Tensor[(24, 14), bool] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %748 = less_equal(%746, %747) /* ty=Tensor[(24, 14), bool] */;
    (%748,)
  };
  %749(%var_10775) /* ty=(Tensor[(24, 14), bool],) */
}

def @func_5673(%var_5672: Tensor[(5, 12, 11), int64]) -> Tensor[(5, 12, 11), float32] {
  %756 = fn (%var_5655: Tensor[(5, 12, 11), int64]) -> Tensor[(5, 12, 11), float32] {
    %750 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
    %751 = %750.1;
    %752 = cast(%var_5655, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
    %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%751, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%754, %755) /* ty=Tensor[(5, 12, 11), float32] */
  };
  %756(%var_5672) /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_4617(%var_4615: Tensor[(48), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  @func_4614(%var_4615) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */
}

def @func_4746() -> (Tensor[(4, 7, 4), float64],) {
  %757 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %758 = %757.0;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %760 = atan(%759) /* ty=Tensor[(4, 7, 4), float64] */;
  (%760,)
}

def @func_10696() -> (Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) {
  @func_10694() /* ty=(Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) */
}

def @func_16008() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) {
  @func_16006() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64]) */
}

def @func_13869(%var_13866: uint16, %var_13867: Tensor[(12), float32], %var_13868: Tensor[(180), float32]) -> (Tensor[(1, 7, 2), bool], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32]) {
  @func_13864(%var_13866, %var_13867, %var_13868) /* ty=(Tensor[(1, 7, 2), bool], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32]) */
}

def @func_11992(%var_11991: Tensor[(2112), float32]) -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), float32], Tensor[(336), float32], Tensor[(2112), float32], Tensor[(4, 7, 4), float32]) {
  %772 = fn (%var_11948: Tensor[(2112), float32]) -> (Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), float32], Tensor[(336), float32], Tensor[(2112), float32], Tensor[(4, 7, 4), float32]) {
    %761 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %762 = %761.0;
    %763 = cast(%762, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
    %764 = cast(%var_11948, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %765 = reshape(%764, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %766 = @func_11687(%765) /* ty=(Tensor[(336), float32], Tensor[(16, 11, 12), float64]) */;
    %767 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %768 = @func_6555() /* ty=Tensor[(4, 7, 4), bool] */;
    %769 = asin(%763) /* ty=Tensor[(5, 12, 11), float32] */;
    %770 = %766.0;
    %771 = %767.0;
    (%768, %769, %770, %var_11948, %771)
  };
  %772(%var_11991) /* ty=(Tensor[(4, 7, 4), bool], Tensor[(5, 12, 11), float32], Tensor[(336), float32], Tensor[(2112), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_13994() -> (Tensor[(784), float64], Tensor[(5, 12, 11), int64]) {
  %773 = @func_6036() /* ty=(Tensor[(784), float64],) */;
  %774 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
  %775 = %773.0;
  %776 = %774.2;
  (%775, %776)
}

def @func_14050() -> Tensor[(12, 6, 5), bool] {
  %777 = @func_13253() /* ty=(Tensor[(12, 6, 5), bool],) */;
  %777.0
}

def @func_5882() -> (Tensor[(4, 7, 4), float32],) {
  %778 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %779 = %778.0;
  (%779,)
}

def @func_7905(%var_7904: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
  %786 = fn (%var_7899: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) {
    %780 = @func_6518() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64]) */;
    %781 = cast(%var_7899, dtype="float64") /* ty=Tensor[(15), float64] */;
    %782 = reshape(%781, newshape=[3, 1, 5]) /* ty=Tensor[(3, 1, 5), float64] */;
    %783 = @func_7818() /* ty=Tensor[(4, 7, 4), float32] */;
    %784 = %780.1;
    %785 = @func_4592(%782) /* ty=Tensor[(3, 1, 5), float64] */;
    (%783, %784, %785, %var_7899)
  };
  %786(%var_7904) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */
}

def @func_8550() -> (Tensor[(784), float64],) {
  @func_8548() /* ty=(Tensor[(784), float64],) */
}

def @func_6063() -> (Tensor[(4, 7, 4), float32],) {
  @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_10497() -> Tensor[(4, 7, 4), float32] {
  %788 = fn () -> Tensor[(4, 7, 4), float32] {
    %787 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %787.0
  };
  %788() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_4123(%var_4121: Tensor[(16, 16, 10), int64], %var_4122: Tensor[(16, 16, 10), int64]) -> (Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) {
  @func_4119(%var_4121, %var_4122) /* ty=(Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) */
}

def @func_7580() -> (Tensor[(4, 7, 4), float32],) {
  %789 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%789,)
}

def @func_6370() -> (Tensor[(4, 7, 4), float32],) {
  %792 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %790 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %791 = %790.1;
    (%791,)
  };
  %792() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_8548() -> (Tensor[(784), float64],) {
  %793 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %794 = %793.4;
  (%794,)
}

def @func_13469(%var_13467: Tensor[(180), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float32], Tensor[(180), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  @func_13466(%var_13467) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(7, 16, 3), float32], Tensor[(180), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */
}

def @func_10059(%var_10023: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32]) {
  %795 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %798 = cast(%var_10023, dtype="float32") /* ty=Tensor[(384), float32] */;
  %799 = reshape(%798, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %800 = @func_9984(%799) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %801 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %802 = cos(%797) /* ty=Tensor[(5, 12, 11), float64] */;
  %803 = %800.2;
  %804 = %801.0;
  (%802, %803, %var_10023, %804)
}

def @func_742(%var_724: Tensor[(5, 16, 14), float32]) -> (Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) {
  %805 = cast(%var_724, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
  %806 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %807 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %808 = reshape(%806, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %809 = reshape(%807, newshape=[15, 14, 3]) /* ty=Tensor[(15, 14, 3), float32] */;
  %810 = erf(%805) /* ty=Tensor[(5, 16, 14), float32] */;
  %811 = @func_604(%808, %809) /* ty=Tensor[(15, 14, 3), float32] */;
  (%810, %811, meta[relay.Constant][38] /* ty=Tensor[(630), float32] */)
}

def @func_8741(%var_8662: Tensor[(7, 13, 10), float64]) -> (Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  %812 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 13, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %813 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%var_8662, dtype="float64") /* ty=Tensor[(7, 13, 10), float64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %816 = mod(%814, %815) /* ty=Tensor[(7, 13, 10), float64] */;
  %817 = cast(%816, dtype="uint64") /* ty=Tensor[(7, 13, 10), uint64] */;
  %818 = shape_of(%var_8662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%var_8662, dtype="uint64") /* ty=Tensor[(7, 13, 10), uint64] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %821 = @func_5308() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %822 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %823 = add(%819, %820) /* ty=Tensor[(7, 13, 10), uint64] */;
  %824 = %821.0;
  %825 = %822.0;
  (%823, %824, %825)
}

def @func_10062(%var_10060: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32]) {
  @func_10059(%var_10060) /* ty=(Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_13580() -> Tensor[(5, 12, 11), int64] {
  @func_13578() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_14736(%var_14731: Tensor[(4, 8, 8), uint32], %var_14732: Tensor[(4, 8, 8), uint32]) -> (Tensor[(4, 8, 8), uint32],) {
  %826 = cast(%var_14732, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %827 = shape_of(%var_14731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_14731, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %830 = bitwise_and(%828, %829) /* ty=Tensor[(4, 8, 8), uint32] */;
  (%830,)
}

def @func_13112() -> (Tensor[(4, 7, 4), bool],) {
  %833 = fn () -> (Tensor[(4, 7, 4), bool],) {
    %831 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %832 = %831.0;
    (%832,)
  };
  %833() /* ty=(Tensor[(4, 7, 4), bool],) */
}

def @func_8744(%var_8742: Tensor[(7, 13, 10), float64]) -> (Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) {
  @func_8741(%var_8742) /* ty=(Tensor[(7, 13, 10), uint64], Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */
}

def @func_16114(%var_16112: Tensor[(5), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(384), float32], Tensor[(5), float64], Tensor[(15), float64]) {
  @func_16111(%var_16112) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(384), float32], Tensor[(5), float64], Tensor[(15), float64]) */
}

def @func_16231() -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) {
  @func_16229() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */
}

def @func_7034() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) {
  @func_7032() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) */
}

def @func_5213() -> (Tensor[(4, 7, 4), bool],) {
  %841 = fn () -> (Tensor[(4, 7, 4), bool],) {
    %834 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %835 = %834.0;
    %836 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 7, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
    %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %838 = cast(%835, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
    %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %840 = logical_or(%838, %839) /* ty=Tensor[(4, 7, 4), bool] */;
    (%840,)
  };
  %841() /* ty=(Tensor[(4, 7, 4), bool],) */
}

def @func_9317(%var_9316: Tensor[(336), float32]) -> (Tensor[(7, 16, 3), float32], Tensor[(336), float32], Tensor[(7, 8, 11), float64], Tensor[(784), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(5, 12, 11), int64]) {
  %857 = fn (%var_9244: Tensor[(336), float32]) -> (Tensor[(7, 16, 3), float32], Tensor[(336), float32], Tensor[(7, 8, 11), float64], Tensor[(784), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(5, 12, 11), int64]) {
    %842 = cast(%var_9244, dtype="float32") /* ty=Tensor[(336), float32] */;
    %843 = reshape(%842, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
    %844 = @func_2367(%843) /* ty=(Tensor[(7, 16, 3), float32],) */;
    %845 = @func_8098() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(336), float32], Tensor[(4, 7, 4), bool]) */;
    %846 = @func_8548() /* ty=(Tensor[(784), float64],) */;
    %847 = %846.0;
    %848 = cast(%847, dtype="float32") /* ty=Tensor[(784), float32] */;
    %849 = cast(meta[relay.Constant][41] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %850 = reshape(%849, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %851 = @func_8301(%850) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
    %852 = %844.0;
    %853 = %845.0;
    %854 = asin(%848) /* ty=Tensor[(784), float32] */;
    %855 = %851.0;
    %856 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    (%852, %var_9244, %853, %854, %855, meta[relay.Constant][41] /* ty=Tensor[(210), float64] */, %856)
  };
  %857(%var_9316) /* ty=(Tensor[(7, 16, 3), float32], Tensor[(336), float32], Tensor[(7, 8, 11), float64], Tensor[(784), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(5, 12, 11), int64]) */
}

def @func_12703() -> (Tensor[(4, 7, 4), float64],) {
  @func_12701() /* ty=(Tensor[(4, 7, 4), float64],) */
}

def @func_9811() -> (Tensor[(13, 13, 10), float32], Tensor[(5, 12, 11), int64], Tensor[(210), float64], Tensor[(4, 7, 4), float32]) {
  %858 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %859 = cast(meta[relay.Constant][43] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %860 = reshape(%859, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %861 = @func_7112(%860) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %862 = @func_9205() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
  %863 = log2(%858) /* ty=Tensor[(13, 13, 10), float32] */;
  %864 = %861.3;
  %865 = %862.0;
  (%863, %864, meta[relay.Constant][43] /* ty=Tensor[(210), float64] */, %865)
}

def @func_13612() -> Tensor[(5, 12, 11), float64] {
  @func_13610() /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_4285() -> (Tensor[(4, 7, 4), float32],) {
  %866 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%866,)
}

def @func_14005() -> (Tensor[(5, 12, 11), int64],) {
  @func_14003() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_14379() -> (Tensor[(784), float64], Tensor[(15), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) {
  %867 = @func_13994() /* ty=(Tensor[(784), float64], Tensor[(5, 12, 11), int64]) */;
  %868 = cast(meta[relay.Constant][44] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %869 = reshape(%868, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %870 = @func_8521(%869) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) */;
  %871 = @func_6660() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %872 = %867.0;
  %873 = %870.2;
  %874 = %871.2;
  (%872, %873, meta[relay.Constant][44] /* ty=Tensor[(15), float64] */, %874)
}

def @func_8831(%var_8830: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %890 = fn (%var_8793: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
    %875 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %876 = %875.0;
    %877 = cast(%var_8793, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %879 = cast(%876, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %881 = cast(meta[relay.Constant][45] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %882 = reshape(%881, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %883 = @func_7112(%882) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
    %884 = @func_7263() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %885 = @func_6369() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %886 = mod(%879, %880) /* ty=Tensor[(4, 7, 4), float32] */;
    %887 = %883.2;
    %888 = %884.1;
    %889 = %885.0;
    (%886, %887, meta[relay.Constant][45] /* ty=Tensor[(210), float64] */, %888, %889)
  };
  %890(%var_8830) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(210), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_2370(%var_2368: Tensor[(7, 16, 3), float32]) -> (Tensor[(7, 16, 3), float32],) {
  @func_2367(%var_2368) /* ty=(Tensor[(7, 16, 3), float32],) */
}

def @func_15821() -> (Tensor[(4, 7, 4), float32], Tensor[(336), float32], Tensor[(5, 12, 11), int64]) {
  %891 = @func_10265() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
  %892 = @func_9895() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64]) */;
  %893 = %891.0;
  %894 = @func_15338() /* ty=Tensor[(336), float32] */;
  %895 = %892.4;
  (%893, %894, %895)
}

def @func_15480(%var_15479: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), int64], Tensor[(5, 12, 11), int64]) {
  %904 = fn (%var_15439: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), int64], Tensor[(5, 12, 11), int64]) {
    %896 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %897 = %896.0;
    %898 = cast(%var_15439, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
    %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%897, dtype="int64") /* ty=Tensor[(4, 7, 4), int64] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %902 = multiply(%900, %901) /* ty=Tensor[(4, 7, 4), int64] */;
    %903 = @func_4479() /* ty=Tensor[(5, 12, 11), int64] */;
    (%902, %903)
  };
  %904(%var_15479) /* ty=(Tensor[(4, 7, 4), int64], Tensor[(5, 12, 11), int64]) */
}

def @func_13372() -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float64]) {
  @func_13370() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float64]) */
}

def @func_11126(%var_11125: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2560), int64], Tensor[(5, 12, 11), float32], Tensor[(?, 336), bool], Tensor[(4, 7, 4), float64]) {
  %923 = fn (%var_11109: Tensor[(2560), int64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2560), int64], Tensor[(5, 12, 11), float32], Tensor[(?, 336), bool], Tensor[(4, 7, 4), float64]) {
    %905 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %906 = cast(%var_11109, dtype="int64") /* ty=Tensor[(2560), int64] */;
    %907 = cast(%var_11109, dtype="int64") /* ty=Tensor[(2560), int64] */;
    %908 = reshape(%906, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
    %909 = reshape(%907, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int64] */;
    %910 = @func_4119(%908, %909) /* ty=(Tensor[(16, 16, 10), float64], Tensor[(7, 16, 3), float32], Tensor[(1, 336), float32]) */;
    %911 = %910.2;
    %912 = cast(%911, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
    %913 = log(%912) /* ty=Tensor[(1, 336), float64] */;
    %914 = cast(%911, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
    %915 = shape_of(%913, dtype="int32") /* ty=Tensor[(2), int32] */;
    %916 = cast(%913, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
    %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %918 = @func_7493() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %919 = %905.0;
    %920 = @func_9606() /* ty=Tensor[(5, 12, 11), float32] */;
    %921 = less(%916, %917) /* ty=Tensor[(?, 336), bool] */;
    %922 = %918.0;
    (%919, %var_11109, %920, %921, %922)
  };
  %923(%var_11125) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2560), int64], Tensor[(5, 12, 11), float32], Tensor[(?, 336), bool], Tensor[(4, 7, 4), float64]) */
}

def @func_8304(%var_8302: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  @func_8301(%var_8302) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */
}

def @func_5878(%var_5876: Tensor[(384), float32], %var_5877: Tensor[(5), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) {
  %934 = fn (%var_5849: Tensor[(384), float32], %var_5850: Tensor[(5), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) {
    %924 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
    %925 = cast(%var_5849, dtype="float32") /* ty=Tensor[(384), float32] */;
    %926 = cast(%var_5850, dtype="float64") /* ty=Tensor[(5), float64] */;
    %927 = reshape(%925, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %928 = reshape(%926, newshape=[5]) /* ty=Tensor[(5), float64] */;
    %929 = @func_5406(%927, %928) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
    %930 = @func_4285() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %931 = %924.3;
    %932 = %929.1;
    %933 = %930.0;
    (%931, %932, %var_5849, %var_5850, %933)
  };
  %934(%var_5876, %var_5877) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_8523(%var_8522: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) {
  %942 = fn (%var_8517: Tensor[(15), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) {
    %935 = @func_5882() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %936 = cast(%var_8517, dtype="float64") /* ty=Tensor[(15), float64] */;
    %937 = reshape(%936, newshape=[15]) /* ty=Tensor[(15), float64] */;
    %938 = @func_6897(%937) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(5, 12, 11), int64], Tensor[(3, 1, 5), float64], Tensor[(15), float64], Tensor[(4, 7, 4), float32]) */;
    %939 = %935.0;
    %940 = @func_8120() /* ty=Tensor[(5, 12, 11), int64] */;
    %941 = %938.4;
    (%939, %940, %941, %var_8517)
  };
  %942(%var_8522) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(15), float64], Tensor[(15), float64]) */
}

def @func_13511() -> Tensor[(3, 4, 1), float32] {
  @func_13509() /* ty=Tensor[(3, 4, 1), float32] */
}

def @func_5125() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_8605() -> (Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) {
  %943 = @func_5454() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */;
  %944 = %943.2;
  %945 = cast(%944, dtype="float64") /* ty=Tensor[(48), float64] */;
  %946 = reshape(%945, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %947 = @func_4614(%946) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %948 = @func_7693() /* ty=Tensor[(336), float32] */;
  %949 = %947.1;
  (%944, %948, %949)
}

def @func_1937(%var_1935: Tensor[(1, 8, 6), float64], %var_1936: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) {
  %968 = fn (%var_1909: Tensor[(1, 8, 6), float64], %var_1910: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) {
    %950 = cast(%var_1910, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    %951 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
    %952 = cast(%var_1909, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %954 = floor_mod(%952, %953) /* ty=Tensor[(?, 8, 6), float64] */;
    %955 = cast(%var_1910, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
    %956 = shape_of(%954, dtype="int32") /* ty=Tensor[(3), int32] */;
    %957 = cast(%954, dtype="bool") /* ty=Tensor[(?, 8, 6), bool] */;
    %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %959 = cast(meta[relay.Constant][46] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
    %960 = reshape(%959, newshape=[14, 4, 14]) /* ty=Tensor[(14, 4, 14), float64] */;
    %961 = @func_1464(%960) /* ty=(Tensor[(14, 4, 14), float64], Tensor[(5, 16, 14), float32], Tensor[(1120), float32]) */;
    %962 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 560), float32] */, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
    %963 = reshape(%962, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), float32] */;
    %964 = @func_742(%963) /* ty=(Tensor[(5, 16, 14), float32], Tensor[(15, 14, 3), float32], Tensor[(630), float32]) */;
    %965 = less(%957, %958) /* ty=Tensor[(?, 8, 6), bool] */;
    %966 = %961.0;
    %967 = %964.1;
    (%965, %966, meta[relay.Constant][46] /* ty=Tensor[(784), float64] */, %967, meta[relay.Constant][47] /* ty=Tensor[(2, 560), float32] */)
  };
  %968(%var_1935, %var_1936) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */
}

def @func_9045(%var_9030: Tensor[(8, 8, 12), float32]) -> (Tensor[(8, 8, 12), float32],) {
  %969 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %970 = shape_of(%var_9030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%var_9030, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %973 = power(%971, %972) /* ty=Tensor[(8, 8, 12), float32] */;
  (%973,)
}

def @func_12954() -> Tensor[(4, 7, 4), float32] {
  %974 = fn () -> Tensor[(4, 7, 4), float32] {
    @func_4389() /* ty=Tensor[(4, 7, 4), float32] */
  };
  %974() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_11587() -> (Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %975 = @func_11331() /* ty=(Tensor[(784), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %976 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %977 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %978 = %975.3;
  %979 = %976.0;
  %980 = %977.1;
  %981 = @func_10496() /* ty=Tensor[(4, 7, 4), float32] */;
  (%978, %979, %980, %981)
}

def @func_5455() -> (Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) {
  %988 = fn () -> (Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) {
    %982 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %983 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %984 = reshape(%983, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %985 = @func_4614(%984) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
    %986 = %982.0;
    %987 = %985.0;
    (%986, %987, meta[relay.Constant][49] /* ty=Tensor[(48), float64] */)
  };
  %988() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(5, 12, 11), int64], Tensor[(48), float64]) */
}

def @func_14466() -> Tensor[(4, 7, 4), float32] {
  @func_14464() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_12608() -> Tensor[(12, 5, 8), float32] {
  %990 = fn () -> Tensor[(12, 5, 8), float32] {
    %989 = @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
    %989.1
  };
  %990() /* ty=Tensor[(12, 5, 8), float32] */
}

def @func_5637() -> (Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) {
  @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */
}

def @func_12925(%var_12924: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32]) {
  %997 = fn (%var_12913: Tensor[(384), float32]) -> (Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32]) {
    %991 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
    %992 = cast(%var_12913, dtype="float32") /* ty=Tensor[(384), float32] */;
    %993 = reshape(%992, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %994 = @func_9984(%993) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
    %995 = %991.0;
    %996 = %994.2;
    (%995, %996, %var_12913)
  };
  %997(%var_12924) /* ty=(Tensor[(5, 12, 11), float64], Tensor[(384), float32], Tensor[(384), float32]) */
}

def @func_2779(%var_2777: Tensor[(6, 4, 16), float32]) -> Tensor[(6, 4, 16), float32] {
  @func_2776(%var_2777) /* ty=Tensor[(6, 4, 16), float32] */
}

def @func_7032() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) {
  %998 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %999 = @func_5123() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %1000 = %998.0;
  %1001 = %999.1;
  (%1000, %1001)
}

def @func_5061() -> (Tensor[(4, 7, 4), uint32], Tensor[(12, 6, 5), float64], Tensor[(1, 360), float64]) {
  %1002 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %1004 = log(%1003) /* ty=Tensor[(4, 7, 4), float64] */;
  %1005 = cast(%1002, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1009 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %1010 = reshape(%1009, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %1011 = @func_2819(%1010) /* ty=(Tensor[(12, 6, 5), float64],) */;
  %1012 = bitwise_and(%1007, %1008) /* ty=Tensor[(4, 7, 4), uint32] */;
  %1013 = %1011.0;
  (%1012, %1013, meta[relay.Constant][50] /* ty=Tensor[(1, 360), float64] */)
}

def @func_10462(%var_10386: Tensor[(1, 4, 13), float32], %var_10395: Tensor[(12), float32], %var_10403: Tensor[(120), int8], %var_10417: Tensor[(7, 4, 13), uint32]) -> (Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(180), float32], Tensor[(6, 4, 16), float32], Tensor[(120), int8], Tensor[(1, 1, 5), float64], Tensor[(7, 4, 13), uint32], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %1014 = cast(%var_10395, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1015 = cast(meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1016 = reshape(%1014, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %1017 = reshape(%1015, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %1018 = @func_2056(%1016, %1017) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %1019 = cast(%var_10403, dtype="int8") /* ty=Tensor[(120), int8] */;
  %1020 = reshape(%1019, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), int8] */;
  %1021 = @func_3920(%1020) /* ty=(Tensor[(4, 3, 10), int8], Tensor[(4, 3, 10), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(2, 560), float32], Tensor[(48), float64]) */;
  %1022 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
  %1023 = cast(%var_10386, dtype="float32") /* ty=Tensor[(1, 4, 13), float32] */;
  %1024 = sigmoid(%1023) /* ty=Tensor[(1, 4, 13), float32] */;
  %1025 = cast(%1024, dtype="uint32") /* ty=Tensor[(1, 4, 13), uint32] */;
  %1026 = shape_of(%var_10386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%var_10386, dtype="uint32") /* ty=Tensor[(1, 4, 13), uint32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1029 = bitwise_or(%1027, %1028) /* ty=Tensor[(?, 4, 13), uint32] */;
  %1030 = cast(%1029, dtype="uint32") /* ty=Tensor[(?, 4, 13), uint32] */;
  %1031 = cast(%var_10417, dtype="uint32") /* ty=Tensor[(7, 4, 13), uint32] */;
  %1032 = @func_5798() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(5, 12, 11), int64]) */;
  %1033 = @func_7493() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %1034 = @func_9098() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) */;
  %1035 = %1018.0;
  %1036 = %1021.2;
  %1037 = %1022.1;
  %1038 = bitwise_xor(%1030, %1031) /* ty=Tensor[(7, 4, 13), uint32] */;
  %1039 = %1032.1;
  %1040 = %1033.0;
  %1041 = %1034.0;
  (%1035, %var_10395, meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, %1036, %var_10403, %1037, %1038, %1039, %1040, %1041)
}

def @func_6017() -> Tensor[(4, 7, 4), float32] {
  @func_6015() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_13170() -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) {
  %1046 = fn () -> (Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) {
    %1042 = @func_6239() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %1043 = @func_13111() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %1044 = %1042.0;
    %1045 = %1043.0;
    (%1044, %1045)
  };
  %1046() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), bool]) */
}

def @func_5937() -> (Tensor[(7, 16, 3), float32],) {
  %1049 = fn () -> (Tensor[(7, 16, 3), float32],) {
    %1047 = @func_5635() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(7, 16, 3), float32], Tensor[(336), float32]) */;
    %1048 = %1047.1;
    (%1048,)
  };
  %1049() /* ty=(Tensor[(7, 16, 3), float32],) */
}

def @func_16064() -> Tensor[(784), float64] {
  @func_9545() /* ty=Tensor[(784), float64] */
}

def @func_7966() -> Tensor[(4, 7, 4), float32] {
  %1050 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1050.0
}

def @func_14500(%var_14484: Tensor[(360), float64], %var_14495: Tensor[(384), float32], %var_14496: Tensor[(5), float64]) -> (Tensor[(12, 5, 8), float32], Tensor[(12, 6, 5), float64], Tensor[(360), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64]) {
  %1051 = @func_11451() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */;
  %1052 = cast(%var_14484, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1053 = reshape(%1052, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %1054 = @func_2819(%1053) /* ty=(Tensor[(12, 6, 5), float64],) */;
  %1055 = cast(%var_14495, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1056 = cast(%var_14496, dtype="float64") /* ty=Tensor[(5), float64] */;
  %1057 = reshape(%1055, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1058 = reshape(%1056, newshape=[5]) /* ty=Tensor[(5), float64] */;
  %1059 = @func_5875(%1057, %1058) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) */;
  %1060 = %1051.1;
  %1061 = %1054.0;
  %1062 = %1059.1;
  (%1060, %1061, %var_14484, %1062, %var_14495, %var_14496)
}

def @func_15133() -> Tensor[(784), float64] {
  %1064 = fn () -> Tensor[(784), float64] {
    %1063 = @func_8548() /* ty=(Tensor[(784), float64],) */;
    %1063.0
  };
  %1064() /* ty=Tensor[(784), float64] */
}

def @func_11623() -> (Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) {
  @func_11621() /* ty=(Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) */
}

def @func_12343() -> (Tensor[(4, 7, 4), float32],) {
  %1065 = @func_9563() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1066 = %1065.0;
  (%1066,)
}

def @func_8301(%var_8290: Tensor[(210), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) {
  %1067 = @func_8011() /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %1070 = cast(%var_8290, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1071 = reshape(%1070, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1072 = @func_7112(%1071) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(5, 12, 11), int64], Tensor[(4, 12), float64], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %1073 = acos(%1069) /* ty=Tensor[(4, 7, 4), float32] */;
  %1074 = %1072.5;
  (%1073, %1074, %var_8290)
}

def @func_14276() -> Tensor[(5, 12, 11), float64] {
  @func_13610() /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_11016() -> (Tensor[(4, 7, 4), float32],) {
  @func_11014() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_15672() -> (Tensor[(910), float64], Tensor[(4, 7, 4), float32]) {
  %1078 = fn () -> (Tensor[(910), float64], Tensor[(4, 7, 4), float32]) {
    %1075 = @func_11896() /* ty=(Tensor[(336), float32], Tensor[(5, 12, 11), int64], Tensor[(910), float64]) */;
    %1076 = %1075.2;
    %1077 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
    (%1076, %1077)
  };
  %1078() /* ty=(Tensor[(910), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_15757() -> (Tensor[(48), float64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32]) {
  @func_15755() /* ty=(Tensor[(48), float64], Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32]) */
}

def @func_15292() -> (Tensor[(4, 7, 4), bool], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  %1079 = @func_10680() /* ty=(Tensor[(4, 7, 4), bool],) */;
  %1080 = @func_11847() /* ty=(Tensor[(784), float64],) */;
  %1081 = %1079.0;
  %1082 = %1080.0;
  %1083 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
  (%1081, %1082, %1083)
}

def @func_6061() -> (Tensor[(4, 7, 4), float32],) {
  %1084 = @func_4389() /* ty=Tensor[(4, 7, 4), float32] */;
  (%1084,)
}

def @func_10694() -> (Tensor[(48), float64], Tensor[(7, 16, 3), float32], Tensor[(24, 14), float32]) {
  %1085 = @func_9816() /* ty=(Tensor[(48), float64],) */;
  %1086 = cast(meta[relay.Constant][52] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %1087 = reshape(%1086, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float32] */;
  %1088 = @func_2367(%1087) /* ty=(Tensor[(7, 16, 3), float32],) */;
  %1089 = %1085.0;
  %1090 = %1088.0;
  (%1089, %1090, meta[relay.Constant][52] /* ty=Tensor[(24, 14), float32] */)
}

def @func_7799() -> (Tensor[(5, 12, 11), float64], Tensor[(336), float32]) {
  %1096 = fn () -> (Tensor[(5, 12, 11), float64], Tensor[(336), float32]) {
    %1091 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %1092 = %1091.0;
    %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
    %1094 = sinh(%1093) /* ty=Tensor[(5, 12, 11), float64] */;
    %1095 = @func_7559() /* ty=Tensor[(336), float32] */;
    (%1094, %1095)
  };
  %1096() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */
}

def @func_14074() -> Tensor[(5, 12, 11), int64] {
  @func_14072() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_11415() -> (Tensor[(4, 7, 4), float32],) {
  %1098 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %1097 = @func_10585() /* ty=Tensor[(4, 7, 4), float32] */;
    (%1097,)
  };
  %1098() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_7495() -> (Tensor[(4, 7, 4), float64],) {
  @func_7493() /* ty=(Tensor[(4, 7, 4), float64],) */
}

def @func_4886(%var_4839: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), uint16],) {
  %1099 = @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
  %1100 = %1099.1;
  %1101 = cast(%1100, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %1102 = log2(%1101) /* ty=Tensor[(4, 7, 4), float64] */;
  %1103 = cast(%var_4839, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %1104 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%1100, dtype="uint32") /* ty=Tensor[(4, 7, 4), uint32] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1107 = logical_xor(%1105, %1106) /* ty=Tensor[(4, 7, 4), uint32] */;
  %1108 = cast(%1107, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1109 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(%1100, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1112 = equal(%1110, %1111) /* ty=Tensor[(4, 7, 4), bool] */;
  %1113 = cast(%1112, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %1114 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%1102, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1117 = bitwise_xor(%1115, %1116) /* ty=Tensor[(4, 7, 4), uint16] */;
  (%1117,)
}

def @func_4667(%var_4666: Tensor[(840), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) {
  %1129 = fn (%var_4662: Tensor[(840), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) {
    %1118 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %1119 = @func_4542() /* ty=(Tensor[(4, 7, 4), float64],) */;
    %1120 = %1119.0;
    %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %1122 = tan(%1121) /* ty=Tensor[(4, 7, 4), float32] */;
    %1123 = cast(%1122, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
    %1124 = cast(%var_4662, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1125 = reshape(%1124, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), float32] */;
    %1126 = %1118.0;
    %1127 = asin(%1123) /* ty=Tensor[(4, 7, 4), float64] */;
    %1128 = @func_2214(%1125) /* ty=Tensor[(4, 14, 15), float32] */;
    (%1126, %1127, %1128, %var_4662)
  };
  %1129(%var_4666) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64], Tensor[(4, 14, 15), float32], Tensor[(840), float32]) */
}

def @func_9048(%var_9046: Tensor[(8, 8, 12), float32]) -> (Tensor[(8, 8, 12), float32],) {
  @func_9045(%var_9046) /* ty=(Tensor[(8, 8, 12), float32],) */
}

def @func_7819() -> Tensor[(4, 7, 4), float32] {
  %1130 = fn () -> Tensor[(4, 7, 4), float32] {
    @func_4266() /* ty=Tensor[(4, 7, 4), float32] */
  };
  %1130() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_6330() -> Tensor[(4, 7, 4), bool] {
  %1132 = fn () -> Tensor[(4, 7, 4), bool] {
    %1131 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %1131.0
  };
  %1132() /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_16209() -> (Tensor[(7, 8, 11), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) {
  @func_16207() /* ty=(Tensor[(7, 8, 11), float64], Tensor[(784), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_16621() -> (Tensor[(7, 16, 3), float32], Tensor[(6, 4, 16), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(4, 7, 4), float32]) {
  %1142 = fn () -> (Tensor[(7, 16, 3), float32], Tensor[(6, 4, 16), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(4, 7, 4), float32]) {
    %1133 = @func_10265() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(784), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32]) */;
    %1134 = cast(meta[relay.Constant][53] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %1135 = reshape(%1134, newshape=[12]) /* ty=Tensor[(12), float32] */;
    %1136 = @func_13940(%1135) /* ty=(Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) */;
    %1137 = @func_15351() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %1138 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
    %1139 = %1133.2;
    %1140 = %1136.2;
    %1141 = %1137.0;
    (%1138, %1139, %1140, meta[relay.Constant][53] /* ty=Tensor[(12), float32] */, %1141)
  };
  %1142() /* ty=(Tensor[(7, 16, 3), float32], Tensor[(6, 4, 16), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_4580() -> Tensor[(5, 12, 11), int64] {
  %1143 = @func_4247() /* ty=(Tensor[(5, 12, 11), int64],) */;
  %1143.0
}

def @func_7582() -> (Tensor[(4, 7, 4), float32],) {
  @func_7580() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_5579() -> (Tensor[(4, 7, 4), float32],) {
  %1145 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %1144 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
    (%1144,)
  };
  %1145() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_9778(%var_9776: Tensor[(1, 15), float64]) -> (Tensor[(336), float32], Tensor[(4, 7, 4), float32], Tensor[(15), float64], Tensor[(1, 15), float64], Tensor[(8, 8, 12), float32], Tensor[(2, 384), float32], Tensor[(7, 16, 3), float32]) {
  @func_9775(%var_9776) /* ty=(Tensor[(336), float32], Tensor[(4, 7, 4), float32], Tensor[(15), float64], Tensor[(1, 15), float64], Tensor[(8, 8, 12), float32], Tensor[(2, 384), float32], Tensor[(7, 16, 3), float32]) */
}

def @func_4820() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  %1146 = @func_4746() /* ty=(Tensor[(4, 7, 4), float64],) */;
  %1147 = @func_4364() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1148 = %1146.0;
  %1149 = %1147.0;
  (%1148, %1149)
}

def @func_9236() -> Tensor[(4, 7, 4), float64] {
  %1151 = fn () -> Tensor[(4, 7, 4), float64] {
    %1150 = @func_7263() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */;
    %1150.0
  };
  %1151() /* ty=Tensor[(4, 7, 4), float64] */
}

def @func_10586() -> Tensor[(4, 7, 4), float32] {
  %1153 = fn () -> Tensor[(4, 7, 4), float32] {
    %1152 = @func_8046() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
    %1152.0
  };
  %1153() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_9070() -> (Tensor[(5, 12, 11), int64],) {
  %1156 = fn () -> (Tensor[(5, 12, 11), int64],) {
    %1154 = @func_6383() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %1155 = %1154.0;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(5, 12, 11), int64],) */
}

def @func_9608() -> Tensor[(5, 12, 11), float32] {
  @func_9606() /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_12425() -> Tensor[(336), float32] {
  @func_12423() /* ty=Tensor[(336), float32] */
}

def @func_12513() -> Tensor[(4, 7, 4), float64] {
  %1158 = fn () -> Tensor[(4, 7, 4), float64] {
    %1157 = @func_7032() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float64]) */;
    %1157.1
  };
  %1158() /* ty=Tensor[(4, 7, 4), float64] */
}

def @func_9363() -> (Tensor[(4, 7, 4), float32],) {
  %1159 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  (%1159,)
}

def @func_8485(%var_8483: Tensor[(3, 60), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) {
  @func_8482(%var_8483) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) */
}

def @func_8047() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %1164 = fn () -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
    %1160 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
    %1161 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %1162 = %1160.0;
    %1163 = %1161.0;
    (%1162, %1163)
  };
  %1164() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_8341() -> Tensor[(336), float32] {
  @func_7559() /* ty=Tensor[(336), float32] */
}

def @func_15927(%var_15925: Tensor[(784), float64]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(14, 4, 14), float64], Tensor[(784), float64]) {
  @func_15924(%var_15925) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float64], Tensor[(14, 4, 14), float64], Tensor[(784), float64]) */
}

def @func_14278() -> Tensor[(5, 12, 11), float64] {
  @func_14276() /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_6788(%var_6784: Tensor[(5, 16, 14), float32], %var_6785: Tensor[(384), float32], %var_6786: Tensor[(2, 24), float64], %var_6787: Tensor[(5, 16, 14), uint16]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(2, 560), float32], Tensor[(2, 24), float64], Tensor[(4, 7, 4), uint16], Tensor[(4, 7, 4), bool], Tensor[(5, 16, 14), bool], Tensor[(4, 7, 4), bool], Tensor[(1, 48), float64], Tensor[(5, 16, 14), float32], Tensor[(7, 16, 3), float32]) {
  %1206 = fn (%var_6713: Tensor[(5, 16, 14), float32], %var_6724: Tensor[(384), float32], %var_6729: Tensor[(2, 24), float64], %var_6756: Tensor[(5, 16, 14), uint16]) -> (Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(2, 560), float32], Tensor[(2, 24), float64], Tensor[(4, 7, 4), uint16], Tensor[(4, 7, 4), bool], Tensor[(5, 16, 14), bool], Tensor[(4, 7, 4), bool], Tensor[(1, 48), float64], Tensor[(5, 16, 14), float32], Tensor[(7, 16, 3), float32]) {
    %1165 = cast(%var_6724, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1166 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
    %1167 = reshape(%1165, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1168 = reshape(%1166, newshape=[5]) /* ty=Tensor[(5), float64] */;
    %1169 = @func_5875(%1167, %1168) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(4, 7, 4), float32]) */;
    %1170 = cast(%var_6729, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %1171 = cast(%var_6729, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %1172 = reshape(%1170, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
    %1173 = reshape(%1171, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
    %1174 = @func_1934(%1172, %1173) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
    %1175 = %1169.0;
    %1176 = cast(%1175, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %1177 = reshape(%1176, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
    %1178 = @func_4886(%1177) /* ty=(Tensor[(4, 7, 4), uint16],) */;
    %1179 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %1180 = @func_5522() /* ty=(Tensor[(3, 7, 5), bool], Tensor[(1, 1, 5), float64], Tensor[(1, 5), float64], Tensor[(5, 16, 14), float32], Tensor[(784), float64]) */;
    %1181 = %1180.3;
    %1182 = cast(%var_6713, dtype="uint16") /* ty=Tensor[(5, 16, 14), uint16] */;
    %1183 = shape_of(%1181, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1184 = cast(%1181, dtype="uint16") /* ty=Tensor[(5, 16, 14), uint16] */;
    %1185 = dyn.reshape(%1182, %1183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1186 = bitwise_or(%1184, %1185) /* ty=Tensor[(5, 16, 14), uint16] */;
    %1187 = cast(%var_6756, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
    %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1189 = cast(%1186, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
    %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1191 = cast(%var_6724, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1192 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
    %1193 = reshape(%1191, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1194 = reshape(%1192, newshape=[5]) /* ty=Tensor[(5), float64] */;
    %1195 = @func_5406(%1193, %1194) /* ty=(Tensor[(12, 6, 5), float64], Tensor[(6, 4, 16), float32], Tensor[(384), float32], Tensor[(5), float64], Tensor[(210), float64], Tensor[(1, 48), float64], Tensor[(60, 14), float64], Tensor[(5, 3, 14), float64]) */;
    %1196 = cast(%var_6756, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
    %1197 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
    %1198 = %1174.4;
    %1199 = %1178.0;
    %1200 = %1179.0;
    %1201 = not_equal(%1189, %1190) /* ty=Tensor[(5, 16, 14), bool] */;
    %1202 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
    %1203 = %1195.5;
    %1204 = atan(%1196) /* ty=Tensor[(5, 16, 14), float32] */;
    %1205 = %1197.0;
    (%1175, %var_6724, meta[relay.Constant][54] /* ty=Tensor[(1, 5), float64] */, %1198, %var_6729, %1199, %1200, %1201, %1202, %1203, %1204, %1205)
  };
  %1206(%var_6784, %var_6785, %var_6786, %var_6787) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(384), float32], Tensor[(1, 5), float64], Tensor[(2, 560), float32], Tensor[(2, 24), float64], Tensor[(4, 7, 4), uint16], Tensor[(4, 7, 4), bool], Tensor[(5, 16, 14), bool], Tensor[(4, 7, 4), bool], Tensor[(1, 48), float64], Tensor[(5, 16, 14), float32], Tensor[(7, 16, 3), float32]) */
}

def @func_14072() -> Tensor[(5, 12, 11), int64] {
  %1207 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %1207.0
}

def @func_11828() -> (Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) {
  @func_11826() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(12, 5, 8), float32]) */
}

def @func_10104() -> Tensor[(336), float32] {
  %1209 = fn () -> Tensor[(336), float32] {
    %1208 = @func_8605() /* ty=(Tensor[(48), float64], Tensor[(336), float32], Tensor[(2, 560), float32]) */;
    %1208.1
  };
  %1209() /* ty=Tensor[(336), float32] */
}

def @func_4614(%var_4609: Tensor[(48), float64]) -> (Tensor[(5, 12, 11), int64], Tensor[(2, 560), float32], Tensor[(48), float64]) {
  %1210 = cast(%var_4609, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1211 = cast(%var_4609, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1212 = reshape(%1210, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %1213 = reshape(%1211, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float64] */;
  %1214 = @func_1934(%1212, %1213) /* ty=(Tensor[(?, 8, 6), bool], Tensor[(14, 4, 14), float64], Tensor[(784), float64], Tensor[(15, 14, 3), float32], Tensor[(2, 560), float32]) */;
  %1215 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
  %1216 = %1214.4;
  (%1215, %1216, %var_4609)
}

def @func_7761() -> Tensor[(4, 7, 4), bool] {
  %1217 = @func_6329() /* ty=Tensor[(4, 7, 4), bool] */;
  %1218 = @func_4946() /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), bool], Tensor[(4, 7, 4), float64]) */;
  %1219 = %1218.3;
  %1220 = cast(%1219, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1221 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(%1217, dtype="bool") /* ty=Tensor[(4, 7, 4), bool] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1222, %1223) /* ty=Tensor[(4, 7, 4), bool] */
}

def @func_12573(%var_12548: Tensor[(2, 192), float32]) -> (Tensor[(4, 7, 4), float64], Tensor[(784), float64], Tensor[(384), float32], Tensor[(2, 192), float32]) {
  %1224 = @func_8548() /* ty=(Tensor[(784), float64],) */;
  %1225 = cast(%var_12548, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %1226 = reshape(%1225, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1227 = @func_9984(%1226) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */;
  %1228 = @func_9235() /* ty=Tensor[(4, 7, 4), float64] */;
  %1229 = %1224.0;
  %1230 = %1227.2;
  (%1228, %1229, %1230, %var_12548)
}

def @func_13940(%var_13899: Tensor[(12), float32]) -> (Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) {
  %1231 = @func_5737() /* ty=(Tensor[(4, 7, 4), bool], Tensor[(336), float32], Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32], Tensor[(3, 1, 5), float64], Tensor[(15), float64]) */;
  %1232 = cast(%var_13899, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1233 = reshape(%1232, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %1234 = @func_8224(%1233) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(4, 7, 4), float64], Tensor[(180), float32], Tensor[(12), float32]) */;
  %1235 = @func_12259() /* ty=(Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) */;
  %1236 = %1231.5;
  %1237 = @func_12607() /* ty=Tensor[(12, 5, 8), float32] */;
  %1238 = %1234.2;
  %1239 = %1235.0;
  (%1236, %1237, %1238, %var_13899, %1239)
}

def @func_11621() -> (Tensor[(3, 1, 16), float64], Tensor[(4, 7, 4), float32], Tensor[(336), float32]) {
  %1240 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 16), float64] */;
  %1241 = @func_5578() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1242 = sin(%1240) /* ty=Tensor[(3, 1, 16), float64] */;
  %1243 = %1241.0;
  %1244 = @func_8341() /* ty=Tensor[(336), float32] */;
  (%1242, %1243, %1244)
}

def @func_4822() -> (Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) {
  @func_4820() /* ty=(Tensor[(4, 7, 4), float64], Tensor[(4, 7, 4), float32]) */
}

def @func_9100() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) {
  @func_9098() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) */
}

def @func_10303() -> (Tensor[(4, 7, 4), float32],) {
  %1246 = fn () -> (Tensor[(4, 7, 4), float32],) {
    %1245 = @func_8650() /* ty=Tensor[(4, 7, 4), float32] */;
    (%1245,)
  };
  %1246() /* ty=(Tensor[(4, 7, 4), float32],) */
}

def @func_12260() -> (Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) {
  %1251 = fn () -> (Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) {
    %1247 = @func_4504() /* ty=Tensor[(5, 12, 11), int64] */;
    %1248 = cast(%1247, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
    %1249 = asinh(%1248) /* ty=Tensor[(5, 12, 11), float32] */;
    %1250 = @func_12110() /* ty=Tensor[(7, 16, 3), float32] */;
    (%1249, %1250)
  };
  %1251() /* ty=(Tensor[(5, 12, 11), float32], Tensor[(7, 16, 3), float32]) */
}

def @func_13610() -> Tensor[(5, 12, 11), float64] {
  %1252 = @func_7798() /* ty=(Tensor[(5, 12, 11), float64], Tensor[(336), float32]) */;
  %1252.0
}

def @func_4266() -> Tensor[(4, 7, 4), float32] {
  %1253 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  cosh(%1253) /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_9986(%var_9985: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) {
  %1261 = fn (%var_9975: Tensor[(384), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) {
    %1254 = cast(%var_9975, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1255 = cast(meta[relay.Constant][57] /* ty=Tensor[(5), float64] */, dtype="float64") /* ty=Tensor[(5), float64] */;
    %1256 = reshape(%1254, newshape=[192, 2]) /* ty=Tensor[(192, 2), float32] */;
    %1257 = reshape(%1255, newshape=[5]) /* ty=Tensor[(5), float64] */;
    %1258 = @func_6626(%1256, %1257) /* ty=(Tensor[(5, 12, 11), int64], Tensor[(1, 48), float64], Tensor[(192, 2), float32], Tensor[(5), float64]) */;
    %1259 = @func_6015() /* ty=Tensor[(4, 7, 4), float32] */;
    %1260 = %1258.2;
    (%1259, %1260, %var_9975, meta[relay.Constant][57] /* ty=Tensor[(5), float64] */)
  };
  %1261(%var_9985) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(192, 2), float32], Tensor[(384), float32], Tensor[(5), float64]) */
}

def @func_6230(%var_6229: Tensor[(1, 12), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) {
  %1272 = fn (%var_6190: Tensor[(1, 12), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) {
    %1262 = @func_6061() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %1263 = cast(%var_6190, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
    %1264 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %1265 = reshape(%1263, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
    %1266 = reshape(%1264, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
    %1267 = @func_2056(%1265, %1266) /* ty=(Tensor[(3, 4, 15), bool],) */;
    %1268 = @func_5212() /* ty=(Tensor[(4, 7, 4), bool],) */;
    %1269 = %1262.0;
    %1270 = %1267.0;
    %1271 = %1268.0;
    (%1269, %1270, %var_6190, meta[relay.Constant][58] /* ty=Tensor[(180), float32] */, %1271)
  };
  %1272(%var_6229) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(1, 12), float32], Tensor[(180), float32], Tensor[(4, 7, 4), bool]) */
}

def @func_7670() -> (Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) {
  %1277 = fn () -> (Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) {
    %1273 = cast(meta[relay.Constant][59] /* ty=Tensor[(12, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
    %1274 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
    %1275 = asinh(%1273) /* ty=Tensor[(12, 5, 8), float32] */;
    %1276 = %1274.1;
    (%1275, %1276)
  };
  %1277() /* ty=(Tensor[(12, 5, 8), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_4889(%var_4887: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), uint16],) {
  @func_4886(%var_4887) /* ty=(Tensor[(4, 7, 4), uint16],) */
}

def @func_11847() -> (Tensor[(784), float64],) {
  %1278 = @func_7286() /* ty=Tensor[(784), float64] */;
  (%1278,)
}

def @func_8482(%var_8442: Tensor[(3, 60), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 4, 15), bool], Tensor[(12), float32], Tensor[(3, 60), float64], Tensor[(210), float64], Tensor[(210), float64], Tensor[(7, 16, 3), float32]) {
  %1279 = cast(meta[relay.Constant][60] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1280 = cast(%var_8442, dtype="float32") /* ty=Tensor[(3, 60), float32] */;
  %1281 = reshape(%1279, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), float32] */;
  %1282 = reshape(%1280, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %1283 = @func_2056(%1281, %1282) /* ty=(Tensor[(3, 4, 15), bool],) */;
  %1284 = cast(%var_8442, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
  %1285 = cast(meta[relay.Constant][61] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1286 = reshape(%1285, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1287 = @func_8301(%1286) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(15, 14, 3), float32], Tensor[(210), float64]) */;
  %1288 = @func_5936() /* ty=(Tensor[(7, 16, 3), float32],) */;
  %1289 = @func_4266() /* ty=Tensor[(4, 7, 4), float32] */;
  %1290 = %1283.0;
  %1291 = erf(%1284) /* ty=Tensor[(3, 60), float64] */;
  %1292 = %1287.2;
  %1293 = %1288.0;
  (%1289, %1290, meta[relay.Constant][60] /* ty=Tensor[(12), float32] */, %1291, %1292, meta[relay.Constant][61] /* ty=Tensor[(210), float64] */, %1293)
}

def @func_14917(%var_14916: Tensor[(5, 12, 11), int64]) -> (Tensor[(5, 12, 11), uint16],) {
  %1301 = fn (%var_14903: Tensor[(5, 12, 11), int64]) -> (Tensor[(5, 12, 11), uint16],) {
    %1294 = @func_9069() /* ty=(Tensor[(5, 12, 11), int64],) */;
    %1295 = %1294.0;
    %1296 = cast(%var_14903, dtype="uint16") /* ty=Tensor[(5, 12, 11), uint16] */;
    %1297 = shape_of(%1295, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1298 = cast(%1295, dtype="uint16") /* ty=Tensor[(5, 12, 11), uint16] */;
    %1299 = dyn.reshape(%1296, %1297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1300 = left_shift(%1298, %1299) /* ty=Tensor[(5, 12, 11), uint16] */;
    (%1300,)
  };
  %1301(%var_14916) /* ty=(Tensor[(5, 12, 11), uint16],) */
}

def @func_14052() -> Tensor[(12, 6, 5), bool] {
  @func_14050() /* ty=Tensor[(12, 6, 5), bool] */
}

def @func_11787() -> Tensor[(5, 12, 11), int64] {
  @func_11785() /* ty=Tensor[(5, 12, 11), int64] */
}

def @func_12502() -> Tensor[(4, 7, 4), float32] {
  %1303 = fn () -> Tensor[(4, 7, 4), float32] {
    %1302 = @func_5923() /* ty=(Tensor[(4, 7, 4), float32],) */;
    %1302.0
  };
  %1303() /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_13943(%var_13941: Tensor[(12), float32]) -> (Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) {
  @func_13940(%var_13941) /* ty=(Tensor[(3, 1, 5), float64], Tensor[(12, 5, 8), float32], Tensor[(180), float32], Tensor[(12), float32], Tensor[(5, 12, 11), float32]) */
}

def @func_14930() -> Tensor[(4, 7, 4), float32] {
  %1304 = @func_13390() /* ty=(Tensor[(4, 7, 4), float32],) */;
  %1304.0
}

def @func_9098() -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), uint16]) {
  %1305 = @func_6285() /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */;
  %1306 = %1305.1;
  %1307 = cast(%1306, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %1308 = reshape(%1307, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %1309 = @func_4886(%1308) /* ty=(Tensor[(4, 7, 4), uint16],) */;
  %1310 = %1309.0;
  (%1306, %1310)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen767/build/output.py", line 4481, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:09:14] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


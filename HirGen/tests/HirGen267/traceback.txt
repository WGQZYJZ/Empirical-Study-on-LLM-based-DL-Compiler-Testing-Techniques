==========mod==========
#[version = "0.0.5"]
def @func_3665() -> (Tensor[(4, 10, 6), float32],) {
  %0 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%0,)
}

def @func_9823(%var_9806: Tensor[(400), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(4, 10, 6), float32]) {
  %1 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %2 = cast(%var_9806, dtype="float64") /* ty=Tensor[(400), float64] */;
  %3 = cast(%var_9806, dtype="float64") /* ty=Tensor[(400), float64] */;
  %4 = reshape(%2, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %5 = reshape(%3, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %6 = %1.1;
  %7 = @func_4716(%4, %5) /* ty=Tensor[(10, 8, 5), float64] */;
  %8 = @func_8684() /* ty=Tensor[(4, 10, 6), float32] */;
  (%6, %7, %var_9806, %8)
}

def @func_11675() -> (Tensor[(10, 2, 9), uint8], Tensor[(10, 2, 9), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32]) {
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 9), float64] */;
  %10 = tan(%9) /* ty=Tensor[(10, 2, 9), float64] */;
  %11 = cast(%10, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %12 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(10, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 2, 9), float64] */, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 9), float64] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %18 = reshape(%16, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float32] */;
  %19 = reshape(%17, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), float32] */;
  %20 = maximum(%13, %14) /* ty=Tensor[(10, 2, 9), uint8] */;
  %21 = acos(%15) /* ty=Tensor[(10, 2, 9), float64] */;
  %22 = @func_2863(%18, %19) /* ty=Tensor[(10, 8, 8), float32] */;
  (%20, %21, %22, meta[relay.Constant][1] /* ty=Tensor[(80), float32] */, meta[relay.Constant][2] /* ty=Tensor[(640), float32] */)
}

def @func_1568(%var_1558: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float32],) {
  %23 = cast(%var_1558, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
  %24 = acos(%23) /* ty=Tensor[(7, 1, 1), float64] */;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
  %26 = log(%25) /* ty=Tensor[(7, 1, 1), float32] */;
  (%26,)
}

def @func_2028(%var_1983: Tensor[(13, 13, 8), int64], %var_1993: Tensor[(13, 13, 8), int64]) -> (Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) {
  %27 = cast(%var_1983, dtype="int64") /* ty=Tensor[(13, 13, 8), int64] */;
  %28 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 13, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(13, 13, 8), int64] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %31 = cast(%var_1993, dtype="int16") /* ty=Tensor[(13, 13, 8), int16] */;
  %32 = shape_of(%var_1983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_1983, dtype="int16") /* ty=Tensor[(13, 13, 8), int16] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %35 = add(%29, %30) /* ty=Tensor[(13, 13, 8), int64] */;
  %36 = logical_xor(%33, %34) /* ty=Tensor[(13, 13, 8), int16] */;
  (%35, %36)
}

def @func_4475(%var_4434: Tensor[(360), int32], %var_4445: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32], Tensor[(486), float32], Tensor[(6, 9, 9), uint16]) {
  %37 = cast(%var_4434, dtype="int32") /* ty=Tensor[(360), int32] */;
  %38 = reshape(%37, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), int32] */;
  %39 = cast(%var_4445, dtype="float32") /* ty=Tensor[(486), float32] */;
  %40 = cast(%var_4445, dtype="float32") /* ty=Tensor[(486), float32] */;
  %41 = reshape(%39, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %42 = reshape(%40, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %43 = @func_3213(%41, %42) /* ty=Tensor[(6, 9, 9), float32] */;
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 9, 9), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %48 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
  %49 = @func_3080(%38) /* ty=Tensor[(15, 6, 4), float64] */;
  %50 = maximum(%46, %47) /* ty=Tensor[(6, 9, 9), uint16] */;
  (%48, %49, %var_4434, %var_4445, %50)
}

def @func_11649() -> (Tensor[(4, 10, 6), float32],) {
  %51 = @func_5940() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %52 = %51.0;
  (%52,)
}

def @func_6634() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %53 = @func_6195() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %54 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  %55 = %53.0;
  (%54, %55)
}

def @func_9277() -> (Tensor[(4, 10, 6), float64],) {
  %56 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
  (%56,)
}

def @func_5872() -> (Tensor[(4, 10, 6), float32],) {
  %57 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %58 = %57.0;
  (%58,)
}

def @func_3633(%var_3600: Tensor[(1, 260), float64], %var_3613: Tensor[(7, 1), float64], %var_3624: Tensor[(1200, 1), float32], %var_3626: Tensor[(27, 18), float32], %var_3627: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) {
  %59 = cast(%var_3600, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
  %60 = reshape(%59, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %61 = @func_312(%60) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
  %62 = %61.1;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 13, 2), bool] */, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %67 = cast(%var_3613, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
  %68 = reshape(%67, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %69 = @func_1568(%68) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %70 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %72 = cast(%var_3624, dtype="float32") /* ty=Tensor[(1200, 1), float32] */;
  %73 = cast(meta[relay.Constant][6] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %74 = cast(%var_3626, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %75 = cast(%70, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %76 = cast(%var_3600, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
  %77 = cast(%var_3627, dtype="float32") /* ty=Tensor[(224), float32] */;
  %78 = reshape(%71, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %79 = reshape(%72, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %80 = reshape(%73, newshape=[147]) /* ty=Tensor[(147), uint8] */;
  %81 = reshape(%74, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %82 = reshape(%75, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
  %83 = reshape(%76, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %84 = reshape(%77, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %85 = @func_3529(%78, %79, %80, %81, %82, %83, %84) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
  %86 = maximum(%65, %66) /* ty=Tensor[(10, 13, 2), float64] */;
  %87 = %69.0;
  %88 = %85.1;
  (%70, %var_3600, %86, %87, %var_3613, %88, %var_3624, meta[relay.Constant][6] /* ty=Tensor[(147), uint8] */, %var_3626, %var_3627)
}

def @func_10301() -> Tensor[(4, 10, 6), float32] {
  %89 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
  %89.0
}

def @func_10897() -> Tensor[(4, 10, 6), float64] {
  %90 = @func_7716() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %90.0
}

def @func_6705() -> Tensor[(4, 10, 6), float32] {
  @func_4726() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_9486(%var_9480: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %92 = shape_of(%var_9480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%var_9480, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %95 = mod(%93, %94) /* ty=Tensor[(8, 2, 13), float32] */;
  (%95,)
}

def @func_5517() -> (Tensor[(4, 10, 6), float32],) {
  %96 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %97 = %96.0;
  (%97,)
}

def @func_10126() -> (Tensor[(4, 10, 6), float32],) {
  %98 = @func_3850() /* ty=Tensor[(4, 10, 6), float32] */;
  (%98,)
}

def @func_4096(%var_4057: Tensor[(14, 5, 7), float32], %var_4058: Tensor[(14, 5, 7), float32], %var_4073: Tensor[(260), float64]) -> (Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) {
  %99 = cast(%var_4058, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %100 = shape_of(%var_4057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_4057, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %103 = divide(%101, %102) /* ty=Tensor[(14, 5, 7), float32] */;
  %104 = cast(%var_4058, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %108 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %109 = cast(meta[relay.Constant][9] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %110 = cast(meta[relay.Constant][10] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %111 = cast(meta[relay.Constant][11] /* ty=Tensor[(81, 6), float32] */, dtype="float32") /* ty=Tensor[(81, 6), float32] */;
  %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %113 = cast(%var_4073, dtype="float64") /* ty=Tensor[(260), float64] */;
  %114 = cast(meta[relay.Constant][12] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %115 = reshape(%108, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %116 = reshape(%109, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %117 = reshape(%110, newshape=[147]) /* ty=Tensor[(147), uint8] */;
  %118 = reshape(%111, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %119 = reshape(%112, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
  %120 = reshape(%113, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %121 = reshape(%114, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %122 = @func_3529(%115, %116, %117, %118, %119, %120, %121) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
  %123 = cast(meta[relay.Constant][13] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %124 = reshape(%123, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %125 = floor_divide(%106, %107) /* ty=Tensor[(14, 5, 7), float64] */;
  %126 = %122.17;
  %127 = @func_1005(%124) /* ty=Tensor[(2, 2, 6), int16] */;
  (%125, %126, meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, meta[relay.Constant][9] /* ty=Tensor[(1200), float32] */, meta[relay.Constant][10] /* ty=Tensor[(147), uint8] */, meta[relay.Constant][11] /* ty=Tensor[(81, 6), float32] */, %var_4073, meta[relay.Constant][12] /* ty=Tensor[(224), float32] */, %127, meta[relay.Constant][13] /* ty=Tensor[(24), float32] */)
}

def @func_7675() -> (Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) {
  %128 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %129 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %130 = reshape(%129, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float64] */;
  %131 = @func_6032(%130) /* ty=(Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) */;
  %132 = cast(meta[relay.Constant][15] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %133 = reshape(%132, newshape=[15, 14, 6]) /* ty=Tensor[(15, 14, 6), float64] */;
  %134 = @func_1934(%133) /* ty=(Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) */;
  %135 = cast(meta[relay.Constant][15] /* ty=Tensor[(1260), float64] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %136 = asin(%135) /* ty=Tensor[(1260), float32] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %138 = %128.1;
  %139 = %131.1;
  %140 = %134.0;
  %141 = cosh(%137) /* ty=Tensor[(1260), float32] */;
  (%138, %139, meta[relay.Constant][14] /* ty=Tensor[(448), float64] */, %140, %141)
}

def @func_10391() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %142 = @func_7755() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %143 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
  %144 = @func_8517() /* ty=Tensor[(4, 10, 6), float32] */;
  %145 = %142.0;
  %146 = @func_9690() /* ty=Tensor[(4, 10, 6), float32] */;
  (%143, %144, %145, %146)
}

def @func_5470() -> (Tensor[(4, 10, 6), float32],) {
  %147 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  (%147,)
}

def @func_7121(%var_7092: Tensor[(7), float64], %var_7093: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) {
  %148 = @func_7031() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %149 = %148.1;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %151 = cast(%var_7092, dtype="float64") /* ty=Tensor[(7), float64] */;
  %152 = cast(%var_7093, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
  %153 = reshape(%150, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %154 = reshape(%151, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %155 = reshape(%152, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %156 = @func_4337(%153, %154, %155) /* ty=(Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) */;
  %157 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), int32] */, dtype="int32") /* ty=Tensor[(360), int32] */;
  %158 = reshape(%157, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), int32] */;
  %159 = @func_5173() /* ty=Tensor[(4, 10, 6), float32] */;
  %160 = %156.5;
  %161 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
  %162 = @func_3080(%158) /* ty=Tensor[(15, 6, 4), float64] */;
  (%159, %149, %160, %var_7092, %var_7093, %161, %162, meta[relay.Constant][16] /* ty=Tensor[(360), int32] */)
}

def @func_4113() -> Tensor[(4, 10, 6), float32] {
  %163 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %163.0
}

def @func_1176(%var_1164: Tensor[(9, 9, 4), uint8]) -> (Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) {
  %164 = cast(%var_1164, dtype="bool") /* ty=Tensor[(9, 9, 4), bool] */;
  %165 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 9, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 9, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 9, 4), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %168 = cast(meta[relay.Constant][18] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %169 = reshape(%168, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %170 = less_equal(%166, %167) /* ty=Tensor[(9, 9, 4), bool] */;
  %171 = @func_1005(%169) /* ty=Tensor[(2, 2, 6), int16] */;
  (%170, %171, meta[relay.Constant][18] /* ty=Tensor[(24, 1), float32] */)
}

def @func_10780() -> (Tensor[(4, 10, 6), float32],) {
  %172 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  (%172,)
}

def @func_1748(%var_1721: float32, %var_1722: Tensor[(13, 14, 3), float32]) -> Tensor[(13, 14, 3), float32] {
  %173 = cast(%var_1721, dtype="float32") /* ty=float32 */;
  %174 = cast(%var_1722, dtype="float32") /* ty=Tensor[(13, 14, 3), float32] */;
  floor_mod(%173, %174) /* ty=Tensor[(13, 14, 3), float32] */
}

def @func_6179(%var_6171: Tensor[(12, 5, 1), int64]) -> (Tensor[(12, 5, 13), bool],) {
  %175 = cast(%var_6171, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %176 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 5, 13), int64] */, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
  %177 = equal(%175, %176) /* ty=Tensor[(12, 5, 13), bool] */;
  (%177,)
}

def @func_11021() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %178 = @func_6366() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %179 = %178.0;
  %180 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  (%179, %180)
}

def @func_5156() -> Tensor[(4, 10, 6), float32] {
  %181 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %181.1
}

def @func_2863(%var_2839: Tensor[(10, 8, 1), float32], %var_2840: Tensor[(10, 8, 8), float32]) -> Tensor[(10, 8, 8), float32] {
  %182 = cast(%var_2839, dtype="float32") /* ty=Tensor[(10, 8, 1), float32] */;
  %183 = cast(%var_2840, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
  %184 = mod(%182, %183) /* ty=Tensor[(10, 8, 8), float32] */;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
  sin(%185) /* ty=Tensor[(10, 8, 8), float32] */
}

def @func_1934(%var_1927: Tensor[(15, 14, 6), float64]) -> (Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) {
  %186 = cast(%var_1927, dtype="float64") /* ty=Tensor[(15, 14, 6), float64] */;
  %187 = cast(meta[relay.Constant][20] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %188 = reshape(%187, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %189 = sinh(%186) /* ty=Tensor[(15, 14, 6), float64] */;
  %190 = @func_564(%188) /* ty=Tensor[(7, 7, 3), uint8] */;
  (%189, %190, meta[relay.Constant][20] /* ty=Tensor[(147), uint8] */)
}

def @func_6973(%var_6926: Tensor[(324), uint8], %var_6927: Tensor[(330), float32], %var_6944: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) {
  %191 = cast(meta[relay.Constant][21] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %192 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %193 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %194 = cast(%var_6927, dtype="float32") /* ty=Tensor[(330), float32] */;
  %195 = reshape(%191, newshape=[]) /* ty=uint64 */;
  %196 = reshape(%192, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
  %197 = reshape(%193, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %198 = reshape(%194, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
  %199 = @func_1320(%195, %196, %197, %198) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
  %200 = cast(meta[relay.Constant][23] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %201 = cast(meta[relay.Constant][23] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %202 = cast(%var_6944, dtype="float64") /* ty=Tensor[(260), float64] */;
  %203 = reshape(%200, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %204 = reshape(%201, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %205 = reshape(%202, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %206 = @func_4096(%203, %204, %205) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %207 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %208 = @func_6698() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %209 = cast(%var_6944, dtype="int32") /* ty=Tensor[(260), int32] */;
  %210 = cast(meta[relay.Constant][21] /* ty=uint64 */, dtype="int32") /* ty=int32 */;
  %211 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %212 = %199.6;
  %213 = %206.4;
  %214 = %207.0;
  %215 = %208.1;
  %216 = subtract(%209, %210) /* ty=Tensor[(260), int32] */;
  (%211, %212, meta[relay.Constant][22] /* ty=Tensor[(360), uint64] */, %var_6926, %var_6927, %213, meta[relay.Constant][23] /* ty=Tensor[(490), float32] */, %214, %215, %216)
}

def @func_3282(%var_3275: Tensor[(65, 4), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) {
  %217 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %218 = cast(%var_3275, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %219 = reshape(%218, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %220 = @func_312(%219) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
  %221 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %222 = %217.0;
  %223 = %220.0;
  %224 = %221.0;
  (%222, %223, %var_3275, %224)
}

def @func_11762() -> (Tensor[(4, 10, 6), float32],) {
  %225 = @func_8756() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %226 = %225.0;
  (%226,)
}

def @func_4961(%var_4920: Tensor[(8, 28), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(8, 28), int64]) {
  %227 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %228 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %229 = cast(%var_4920, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %230 = reshape(%229, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %231 = @func_1716(%230) /* ty=Tensor[(14, 8, 2), bool] */;
  %232 = cast(%231, dtype="int64") /* ty=Tensor[(14, 8, 2), int64] */;
  %233 = shape_of(%var_4920, dtype="int32") /* ty=Tensor[(2), int32] */;
  %234 = cast(%var_4920, dtype="int64") /* ty=Tensor[(8, 28), int64] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %236 = %227.0;
  %237 = %228.0;
  %238 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %239 = subtract(%234, %235) /* ty=Tensor[(8, 28), int64] */;
  (%236, %237, %238, %239)
}

def @func_8756() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %240 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %241 = %240.0;
  %242 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  (%241, %242)
}

def @func_9963() -> (Tensor[(4, 10, 6), float32], Tensor[(2, 2, 6), int16], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  %243 = cast(meta[relay.Constant][24] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %244 = cast(meta[relay.Constant][24] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %245 = cast(meta[relay.Constant][25] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %246 = reshape(%243, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %247 = reshape(%244, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %248 = reshape(%245, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %249 = @func_4096(%246, %247, %248) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %250 = @func_9589() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %251 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %252 = %249.8;
  %253 = %250.0;
  (%251, %252, meta[relay.Constant][24] /* ty=Tensor[(490), float32] */, meta[relay.Constant][25] /* ty=Tensor[(260), float64] */, %253)
}

def @func_4001(%var_3987: uint32) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
  %254 = cast(%var_3987, dtype="uint32") /* ty=uint32 */;
  %255 = cast(meta[relay.Constant][26] /* ty=Tensor[(2704), uint32] */, dtype="uint32") /* ty=Tensor[(2704), uint32] */;
  %256 = reshape(%254, newshape=[]) /* ty=uint32 */;
  %257 = reshape(%255, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), uint32] */;
  %258 = @func_231(%256, %257) /* ty=(Tensor[(13, 16, 13), uint32],) */;
  %259 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  %260 = %258.0;
  (%259, %260, %var_3987, meta[relay.Constant][26] /* ty=Tensor[(2704), uint32] */)
}

def @func_4726() -> Tensor[(4, 10, 6), float32] {
  @func_2901() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_4392() -> (Tensor[(4, 10, 6), float32],) {
  %261 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  (%261,)
}

def @func_7817(%var_7799: Tensor[(11, 7, 14), float64], %var_7810: Tensor[(1, 52), float64]) -> (Tensor[(11, 7, 14), float64], Tensor[(4, 10, 6), float32], Tensor[(224), float32], Tensor[(1, 52), float64], Tensor[(224), float32], Tensor[(1440), float32], Tensor[(2, 720), float32]) {
  %262 = cast(%var_7799, dtype="float64") /* ty=Tensor[(11, 7, 14), float64] */;
  %263 = cast(%var_7810, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %264 = cast(meta[relay.Constant][27] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %265 = reshape(%263, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %266 = reshape(%264, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %267 = @func_5643(%265, %266) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) */;
  %268 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 720), float32] */, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %269 = reshape(%268, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %270 = @func_4187(%269) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) */;
  %271 = acos(%262) /* ty=Tensor[(11, 7, 14), float64] */;
  %272 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %273 = %267.4;
  %274 = %270.2;
  (%271, %272, %273, %var_7810, meta[relay.Constant][27] /* ty=Tensor[(224), float32] */, %274, meta[relay.Constant][28] /* ty=Tensor[(2, 720), float32] */)
}

def @func_8218(%var_8214: Tensor[(3, 10, 4), float64]) -> (Tensor[(3, 10, 4), float64],) {
  %275 = cast(%var_8214, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %276 = atan(%275) /* ty=Tensor[(3, 10, 4), float64] */;
  (%276,)
}

def @func_11463() -> Tensor[(4, 10, 6), float32] {
  %277 = @func_7928() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %277.0
}

def @func_7558() -> (Tensor[(4, 10, 6), float64],) {
  %278 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %279 = %278.1;
  (%279,)
}

def @func_9597() -> Tensor[(4, 10, 6), float64] {
  @func_4553() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_7787(%var_7778: Tensor[(324), uint8], %var_7780: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(324), uint8], Tensor[(55, 6), float32], Tensor[(260), float64]) {
  %280 = cast(%var_7778, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %281 = cast(meta[relay.Constant][29] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %282 = cast(%var_7780, dtype="float64") /* ty=Tensor[(260), float64] */;
  %283 = reshape(%280, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %284 = reshape(%281, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %285 = reshape(%282, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %286 = @func_6973(%283, %284, %285) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) */;
  %287 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %288 = @func_6705() /* ty=Tensor[(4, 10, 6), float32] */;
  %289 = %286.7;
  (%287, %288, %289, %var_7778, meta[relay.Constant][29] /* ty=Tensor[(55, 6), float32] */, %var_7780)
}

def @func_9865() -> Tensor[(4, 10, 6), float32] {
  %290 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %290.0
}

def @func_4026() -> Tensor[(4, 10, 6), float32] {
  %291 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %291.0
}

def @func_6698() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %292 = @func_5470() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %293 = @func_4113() /* ty=Tensor[(4, 10, 6), float32] */;
  %294 = %292.0;
  (%293, %294)
}

def @func_4358(%var_4345: Tensor[(1, 15, 9), int64], %var_4346: Tensor[(16, 15, 9), int64], %var_4353: Tensor[(330), float32]) -> (Tensor[(16, 15, 9), int64], Tensor[(6, 5, 11), int32], Tensor[(330), float32]) {
  %295 = cast(%var_4345, dtype="int64") /* ty=Tensor[(1, 15, 9), int64] */;
  %296 = cast(%var_4346, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
  %297 = cast(%var_4353, dtype="float32") /* ty=Tensor[(330), float32] */;
  %298 = reshape(%297, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
  %299 = @func_918(%298) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
  %300 = bitwise_xor(%295, %296) /* ty=Tensor[(16, 15, 9), int64] */;
  %301 = %299.0;
  (%300, %301, %var_4353)
}

def @func_2901() -> Tensor[(4, 10, 6), float32] {
  %302 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  log10(%302) /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_5684() -> (Tensor[(4, 10, 6), float32],) {
  %303 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%303,)
}

def @func_3850() -> Tensor[(4, 10, 6), float32] {
  @func_3767() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_5410() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %304 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %306 = cosh(%305) /* ty=Tensor[(4, 10, 6), float64] */;
  %307 = cast(%304, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %311 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %312 = floor_divide(%309, %310) /* ty=Tensor[(4, 10, 6), float64] */;
  (%311, %312)
}

def @func_9146() -> (Tensor[(4, 10, 6), float32],) {
  %313 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%313,)
}

def @func_3240() -> (Tensor[(4, 10, 6), float32],) {
  %314 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%314,)
}

def @func_7406() -> Tensor[(4, 10, 6), float32] {
  @func_2901() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_10470(%var_10447: Tensor[(14, 6, 10), float64], %var_10448: Tensor[(14, 6, 10), float64], %var_10456: uint64, %var_10457: Tensor[(6, 60), uint64], %var_10459: Tensor[(330), float32]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) {
  %315 = cast(%var_10448, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %316 = shape_of(%var_10447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%var_10447, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %319 = cast(%var_10456, dtype="uint64") /* ty=uint64 */;
  %320 = cast(%var_10457, dtype="uint64") /* ty=Tensor[(6, 60), uint64] */;
  %321 = cast(meta[relay.Constant][31] /* ty=Tensor[(324), uint8] */, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %322 = cast(%var_10459, dtype="float32") /* ty=Tensor[(330), float32] */;
  %323 = reshape(%319, newshape=[]) /* ty=uint64 */;
  %324 = reshape(%320, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
  %325 = reshape(%321, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %326 = reshape(%322, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
  %327 = @func_1320(%323, %324, %325, %326) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
  %328 = power(%317, %318) /* ty=Tensor[(14, 6, 10), float64] */;
  %329 = %327.0;
  (%328, %329, %var_10456, %var_10457, meta[relay.Constant][31] /* ty=Tensor[(324), uint8] */, %var_10459)
}

def @func_8328() -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %330 = @func_7716() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %331 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %332 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %333 = @func_7543() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %334 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %335 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %336 = %330.0;
  %337 = %331.0;
  %338 = %332.0;
  %339 = %333.0;
  %340 = %334.0;
  %341 = %335.1;
  (%336, %337, %338, %339, %340, %341)
}

def @func_9781() -> (Tensor[(4, 10, 6), float64],) {
  %342 = @func_4593() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %343 = %342.0;
  (%343,)
}

def @func_6408() -> (Tensor[(4, 10, 6), float32],) {
  %344 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
  (%344,)
}

def @func_3575(%var_3561: Tensor[(5, 13, 4), uint64], %var_3562: Tensor[(5, 13, 4), uint64]) -> (Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) {
  %345 = cast(%var_3562, dtype="bool") /* ty=Tensor[(5, 13, 4), bool] */;
  %346 = shape_of(%var_3561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%var_3561, dtype="bool") /* ty=Tensor[(5, 13, 4), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 112), float32] */, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
  %350 = reshape(%349, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %351 = greater(%347, %348) /* ty=Tensor[(5, 13, 4), bool] */;
  %352 = @func_1716(%350) /* ty=Tensor[(14, 8, 2), bool] */;
  (%351, %352, meta[relay.Constant][32] /* ty=Tensor[(2, 112), float32] */)
}

def @func_10860() -> Tensor[(4, 10, 6), float32] {
  @func_5156() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_3005(%var_2961: Tensor[(224), float32], %var_2986: Tensor[(14, 8, 2), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) {
  %353 = cast(meta[relay.Constant][33] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %354 = reshape(%353, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %355 = @func_1568(%354) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %356 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %357 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %358 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %359 = reshape(%356, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %360 = reshape(%357, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %361 = reshape(%358, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %362 = @func_2331(%359, %360, %361) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
  %363 = cast(7.17043f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %364 = cast(meta[relay.Constant][35] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %365 = reshape(%363, newshape=[]) /* ty=float32 */;
  %366 = reshape(%364, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
  %367 = cast(%var_2961, dtype="float32") /* ty=Tensor[(224), float32] */;
  %368 = reshape(%367, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %369 = @func_1716(%368) /* ty=Tensor[(14, 8, 2), bool] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(14, 8, 2), float64] */;
  %371 = acos(%370) /* ty=Tensor[(14, 8, 2), float64] */;
  %372 = cast(%var_2986, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %376 = cast(7.17043f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %377 = cast(meta[relay.Constant][35] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %378 = reshape(%376, newshape=[]) /* ty=float32 */;
  %379 = reshape(%377, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
  %380 = cast(%371, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %381 = %355.0;
  %382 = cast(%381, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
  %383 = reshape(%382, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %384 = @func_1568(%383) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %385 = cast(%381, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
  %386 = reshape(%385, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %387 = @func_1568(%386) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %388 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %389 = %362.1;
  %390 = @func_1748(%365, %366) /* ty=Tensor[(13, 14, 3), float32] */;
  %391 = mod(%374, %375) /* ty=Tensor[(14, 8, 2), float32] */;
  %392 = @func_1748(%378, %379) /* ty=Tensor[(13, 14, 3), float32] */;
  %393 = tan(%380) /* ty=Tensor[(14, 8, 2), float32] */;
  %394 = %384.0;
  %395 = %387.0;
  (%388, %381, meta[relay.Constant][33] /* ty=Tensor[(7), float64] */, %var_2961, %389, meta[relay.Constant][34] /* ty=Tensor[(1200), float32] */, %390, 7.17043f /* ty=float32 */, meta[relay.Constant][35] /* ty=Tensor[(546), float32] */, %391, %392, %393, %394, %395)
}

def @func_9462() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %396 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %397 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %398 = @func_9128() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %399 = %396.0;
  %400 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %401 = %397.0;
  %402 = %398.0;
  (%399, %400, %401, %402)
}

def @func_4744() -> (Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) {
  %403 = cast(meta[relay.Constant][36] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %404 = reshape(%403, newshape=[65, 4]) /* ty=Tensor[(65, 4), float64] */;
  %405 = @func_3282(%404) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) */;
  %406 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  %407 = %405.2;
  (%406, %407, meta[relay.Constant][36] /* ty=Tensor[(65, 4), float64] */)
}

def @func_1716(%var_1711: Tensor[(14, 8, 2), float32]) -> Tensor[(14, 8, 2), bool] {
  %408 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 8, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %409 = shape_of(%var_1711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_1711, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%410, %411) /* ty=Tensor[(14, 8, 2), bool] */
}

def @func_9429(%var_9422: Tensor[(11, 6, 2), uint16], %var_9423: Tensor[(11, 6, 2), uint16]) -> (Tensor[(11, 6, 2), uint16], Tensor[(11, 6, 2), float64]) {
  %412 = cast(%var_9423, dtype="uint16") /* ty=Tensor[(11, 6, 2), uint16] */;
  %413 = shape_of(%var_9422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_9422, dtype="uint16") /* ty=Tensor[(11, 6, 2), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %416 = cast(%var_9422, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
  %417 = maximum(%414, %415) /* ty=Tensor[(11, 6, 2), uint16] */;
  %418 = rsqrt(%416) /* ty=Tensor[(11, 6, 2), float64] */;
  (%417, %418)
}

def @func_9879() -> Tensor[(448), float64] {
  %419 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %419.2
}

def @func_8453(%var_8374: Tensor[(490), float32], %var_8389: Tensor[(14, 117), float32], %var_8418: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
  %420 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %421 = cast(%var_8374, dtype="float32") /* ty=Tensor[(490), float32] */;
  %422 = cast(%var_8374, dtype="float32") /* ty=Tensor[(490), float32] */;
  %423 = cast(meta[relay.Constant][38] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %424 = reshape(%421, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %425 = reshape(%422, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %426 = reshape(%423, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %427 = @func_4096(%424, %425, %426) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %428 = cast(%var_8389, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
  %429 = reshape(%428, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %430 = @func_5579(%429) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) */;
  %431 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %432 = %420.0;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %434 = cast(meta[relay.Constant][39] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %435 = cast(%var_8418, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
  %436 = reshape(%433, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %437 = reshape(%434, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %438 = reshape(%435, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %439 = @func_4337(%436, %437, %438) /* ty=(Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) */;
  %440 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 54), float32] */, dtype="bool") /* ty=Tensor[(9, 54), bool] */;
  %441 = shape_of(%var_8418, dtype="int32") /* ty=Tensor[(2), int32] */;
  %442 = cast(%var_8418, dtype="bool") /* ty=Tensor[(9, 54), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %444 = cast(meta[relay.Constant][41] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %445 = reshape(%444, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %446 = %427.0;
  %447 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
  %448 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %449 = %430.1;
  %450 = %431.0;
  %451 = %439.3;
  %452 = not_equal(%442, %443) /* ty=Tensor[(9, 54), bool] */;
  %453 = @func_1716(%445) /* ty=Tensor[(14, 8, 2), bool] */;
  (%432, %446, %var_8374, meta[relay.Constant][38] /* ty=Tensor[(260), float64] */, %447, %448, %449, %var_8389, %450, %451, meta[relay.Constant][39] /* ty=Tensor[(7), float64] */, %452, %453, meta[relay.Constant][41] /* ty=Tensor[(224), float32] */)
}

def @func_6215() -> (Tensor[(4, 10, 6), float32],) {
  %454 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  (%454,)
}

def @func_7186() -> Tensor[(14, 8, 2), bool] {
  %455 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %455.1
}

def @func_8796(%var_8793: Tensor[(7, 1), float64]) -> (Tensor[(260), uint64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64]) {
  %456 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %457 = cast(%var_8793, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
  %458 = reshape(%457, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %459 = @func_1568(%458) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %460 = %456.2;
  %461 = %459.0;
  (%460, %461, %var_8793)
}

def @func_11910(%var_11904: Tensor[(1, 7, 1), float32], %var_11905: Tensor[(1, 7, 6), float32]) -> Tensor[(1, 7, 6), bool] {
  %462 = cast(%var_11904, dtype="bool") /* ty=Tensor[(1, 7, 1), bool] */;
  %463 = cast(%var_11905, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  equal(%462, %463) /* ty=Tensor[(1, 7, 6), bool] */
}

def @func_9070() -> Tensor[(4, 10, 6), float32] {
  %464 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %464.0
}

def @func_6032(%var_6013: Tensor[(8, 14, 4), float64]) -> (Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) {
  %465 = cast(%var_6013, dtype="float64") /* ty=Tensor[(8, 14, 4), float64] */;
  %466 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(8, 14, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 14, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 4), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = cast(%var_6013, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %470 = atanh(%469) /* ty=Tensor[(8, 14, 4), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %472 = maximum(%467, %468) /* ty=Tensor[(8, 14, 4), float64] */;
  %473 = erf(%471) /* ty=Tensor[(8, 14, 4), float32] */;
  (%472, %473)
}

def @func_11774() -> (Tensor[(4, 10, 6), float32],) {
  %474 = @func_9204() /* ty=Tensor[(4, 10, 6), float32] */;
  (%474,)
}

def @func_4187(%var_4184: Tensor[(1440), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) {
  %475 = cast(%var_4184, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %476 = cast(%var_4184, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %477 = reshape(%475, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float32] */;
  %478 = reshape(%476, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float32] */;
  %479 = @func_3822(%477, %478) /* ty=(Tensor[(12, 15, 8), float32],) */;
  %480 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
  %481 = %479.0;
  (%480, %481, %var_4184)
}

def @func_12148() -> Tensor[(2, 6, 3), float32] {
  %482 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 3), float32] */;
  sin(%482) /* ty=Tensor[(2, 6, 3), float32] */
}

def @func_5772() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %483 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %484 = %483.0;
  %485 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  (%484, %485)
}

def @func_8684() -> Tensor[(4, 10, 6), float32] {
  %486 = @func_8328() /* ty=(Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %486.5
}

def @func_12115(%var_12112: Tensor[(12, 3, 16), float64]) -> Tensor[(12, 3, 16), float64] {
  %487 = cast(%var_12112, dtype="float64") /* ty=Tensor[(12, 3, 16), float64] */;
  acos(%487) /* ty=Tensor[(12, 3, 16), float64] */
}

def @func_9204() -> Tensor[(4, 10, 6), float32] {
  @func_4135() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6751(%var_6712: Tensor[(1440, 1), float32], %var_6744: Tensor[(1440, 4), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float64], Tensor[(1440, 4), bool]) {
  %488 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %489 = cast(%var_6712, dtype="float32") /* ty=Tensor[(1440, 1), float32] */;
  %490 = reshape(%489, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %491 = @func_4187(%490) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) */;
  %492 = %491.1;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %494 = log(%493) /* ty=Tensor[(12, 15, 8), float64] */;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %496 = cast(%var_6712, dtype="bool") /* ty=Tensor[(1440, 1), bool] */;
  %497 = cast(%var_6744, dtype="bool") /* ty=Tensor[(1440, 4), bool] */;
  %498 = %488.0;
  %499 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
  %500 = asin(%495) /* ty=Tensor[(12, 15, 8), float64] */;
  %501 = logical_or(%496, %497) /* ty=Tensor[(1440, 4), bool] */;
  (%498, %499, %500, %501)
}

def @func_9726() -> (Tensor[(1260), float32],) {
  %502 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %503 = %502.4;
  (%503,)
}

def @func_10189() -> (Tensor[(4, 10, 6), float32],) {
  %504 = @func_8517() /* ty=Tensor[(4, 10, 6), float32] */;
  (%504,)
}

def @func_6782() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) {
  %505 = @func_5684() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %506 = cast(meta[relay.Constant][44] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %507 = cast(meta[relay.Constant][44] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %508 = reshape(%506, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %509 = reshape(%507, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %510 = @func_3575(%508, %509) /* ty=(Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) */;
  %511 = %505.0;
  %512 = %510.1;
  (%511, %512, meta[relay.Constant][44] /* ty=Tensor[(260), uint64] */)
}

def @func_5947() -> Tensor[(4, 10, 6), float32] {
  %513 = @func_5410() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %513.0
}

def @func_9589() -> (Tensor[(4, 10, 6), float32],) {
  %514 = @func_6049() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %515 = %514.1;
  (%515,)
}

def @func_4716(%var_4711: Tensor[(10, 8, 5), float64], %var_4712: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %516 = cast(%var_4712, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %517 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_4711, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%518, %519) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_4553() -> Tensor[(4, 10, 6), float64] {
  %520 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %521 = %520.0;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  atan(%522) /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_5579(%var_5565: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) {
  %523 = cast(%var_5565, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %524 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %525 = atan(%523) /* ty=Tensor[(13, 9, 14), float32] */;
  %526 = %524.0;
  (%525, %526)
}

def @func_6195() -> (Tensor[(4, 10, 6), float32],) {
  %527 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
  (%527,)
}

def @func_4337(%var_4299: Tensor[(4, 10, 6), float32], %var_4309: Tensor[(7), float64], %var_4316: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) {
  %528 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %529 = cast(%var_4299, dtype="int8") /* ty=Tensor[(4, 10, 6), int8] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="int8") /* ty=Tensor[(4, 10, 6), int8] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %533 = cast(%var_4309, dtype="float64") /* ty=Tensor[(7), float64] */;
  %534 = reshape(%533, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %535 = @func_1568(%534) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %536 = cast(%var_4316, dtype="float32") /* ty=Tensor[(486), float32] */;
  %537 = cast(%var_4316, dtype="float32") /* ty=Tensor[(486), float32] */;
  %538 = reshape(%536, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %539 = reshape(%537, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %540 = cast(meta[relay.Constant][45] /* ty=Tensor[(18, 18), int8] */, dtype="int8") /* ty=Tensor[(18, 18), int8] */;
  %541 = cast(meta[relay.Constant][45] /* ty=Tensor[(18, 18), int8] */, dtype="int8") /* ty=Tensor[(18, 18), int8] */;
  %542 = reshape(%540, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
  %543 = reshape(%541, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
  %544 = @func_520(%542, %543) /* ty=(Tensor[(9, 3, 12), int8],) */;
  %545 = bitwise_or(%531, %532) /* ty=Tensor[(4, 10, 6), int8] */;
  %546 = %535.0;
  %547 = @func_3213(%538, %539) /* ty=Tensor[(6, 9, 9), float32] */;
  %548 = %544.0;
  %549 = @func_3850() /* ty=Tensor[(4, 10, 6), float32] */;
  (%545, %546, %var_4309, %547, %var_4316, %548, meta[relay.Constant][45] /* ty=Tensor[(18, 18), int8] */, %549)
}

def @func_8017(%var_7999: Tensor[(12, 7, 9), uint8], %var_8000: Tensor[(12, 7, 9), uint8]) -> (Tensor[(12, 7, 9), int16], Tensor[(4, 10, 6), float32]) {
  %550 = cast(%var_8000, dtype="uint8") /* ty=Tensor[(12, 7, 9), uint8] */;
  %551 = shape_of(%var_7999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_7999, dtype="uint8") /* ty=Tensor[(12, 7, 9), uint8] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %554 = right_shift(%552, %553) /* ty=Tensor[(12, 7, 9), uint8] */;
  %555 = cast(%554, dtype="int16") /* ty=Tensor[(12, 7, 9), int16] */;
  %556 = shape_of(%var_8000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_8000, dtype="int16") /* ty=Tensor[(12, 7, 9), int16] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %559 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %560 = subtract(%557, %558) /* ty=Tensor[(12, 7, 9), int16] */;
  %561 = %559.0;
  (%560, %561)
}

def @func_9690() -> Tensor[(4, 10, 6), float32] {
  %562 = @func_6049() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %562.1
}

def @func_4981(%var_4970: Tensor[(1352), int64], %var_4974: Tensor[(147, 1), uint8]) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(7, 7, 3), uint8], Tensor[(147, 1), uint8]) {
  %563 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %564 = cast(%var_4970, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %565 = cast(%var_4970, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %566 = reshape(%564, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %567 = reshape(%565, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %568 = @func_2028(%566, %567) /* ty=(Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) */;
  %569 = cast(%var_4974, dtype="uint8") /* ty=Tensor[(147, 1), uint8] */;
  %570 = reshape(%569, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %571 = %563.1;
  %572 = %568.1;
  %573 = @func_564(%570) /* ty=Tensor[(7, 7, 3), uint8] */;
  (%571, %572, %var_4970, %573, %var_4974)
}

def @func_7262() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %574 = @func_7031() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %575 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %576 = %574.2;
  %577 = %575.0;
  (%576, %577)
}

def @func_3186(%var_3181: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) {
  %578 = cast(meta[relay.Constant][46] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %579 = cast(meta[relay.Constant][47] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %580 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), uint8] */, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %581 = cast(meta[relay.Constant][49] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %582 = reshape(%578, newshape=[]) /* ty=uint64 */;
  %583 = reshape(%579, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
  %584 = reshape(%580, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %585 = reshape(%581, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
  %586 = @func_1320(%582, %583, %584, %585) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
  %587 = cast(%var_3181, dtype="float64") /* ty=Tensor[(260), float64] */;
  %588 = reshape(%587, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %589 = @func_312(%588) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
  %590 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %591 = %586.1;
  %592 = %589.1;
  (%590, %591, meta[relay.Constant][46] /* ty=uint64 */, meta[relay.Constant][47] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][48] /* ty=Tensor[(324), uint8] */, meta[relay.Constant][49] /* ty=Tensor[(330), float32] */, %592, %var_3181)
}

def @func_11045() -> Tensor[(4, 10, 6), float32] {
  %593 = @func_9462() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %593.3
}

def @func_11969() -> (Tensor[(260), uint64], Tensor[(4, 10, 6), float32], Tensor[(840, 1), float64], Tensor[(360), uint64], Tensor[(1, 330), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 6, 10), int8]) {
  %594 = @func_6905() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) */;
  %595 = @func_11839() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %596 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %597 = cast(meta[relay.Constant][50] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %598 = cast(meta[relay.Constant][50] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %599 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %600 = cast(meta[relay.Constant][51] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %601 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %602 = reshape(%597, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %603 = reshape(%598, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %604 = reshape(%599, newshape=[]) /* ty=uint64 */;
  %605 = reshape(%600, newshape=[6, 60]) /* ty=Tensor[(6, 60), uint64] */;
  %606 = reshape(%601, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %607 = @func_10470(%602, %603, %604, %605, %606) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) */;
  %608 = %607.0;
  %609 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="int8") /* ty=int8 */;
  %610 = cast(%608, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %611 = %594.2;
  %612 = %595.0;
  %613 = %596.0;
  %614 = minimum(%609, %610) /* ty=Tensor[(14, 6, 10), int8] */;
  (%611, %612, meta[relay.Constant][50] /* ty=Tensor[(840, 1), float64] */, meta[relay.Constant][51] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][52] /* ty=Tensor[(1, 330), float32] */, %613, %614)
}

def @func_10672() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %615 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %616 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %617 = %615.0;
  %618 = %616.1;
  (%617, %618)
}

def @func_4894(%var_4815: Tensor[(330), float32]) -> (Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %619 = @func_4744() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) */;
  %620 = cast(meta[relay.Constant][54] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %621 = cast(meta[relay.Constant][55] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %622 = reshape(%620, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float32] */;
  %623 = reshape(%621, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), float32] */;
  %624 = cast(%var_4815, dtype="float32") /* ty=Tensor[(330), float32] */;
  %625 = reshape(%624, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
  %626 = @func_918(%625) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
  %627 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %629 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %630 = %619.1;
  %631 = @func_2863(%622, %623) /* ty=Tensor[(10, 8, 8), float32] */;
  %632 = %626.4;
  %633 = acosh(%628) /* ty=Tensor[(4, 10, 6), float32] */;
  %634 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  %635 = %629.0;
  (%630, %631, meta[relay.Constant][54] /* ty=Tensor[(80), float32] */, meta[relay.Constant][55] /* ty=Tensor[(640), float32] */, %632, %var_4815, %633, %634, %635)
}

def @func_4269(%var_4260: Tensor[(147), uint8], %var_4263: Tensor[(4, 56), float32]) -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), int64], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(260), float64], Tensor[(4, 56), float32]) {
  %636 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %637 = %636.0;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %639 = cast(%637, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %640 = cast(meta[relay.Constant][56] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %641 = cast(%var_4260, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %642 = cast(meta[relay.Constant][57] /* ty=Tensor[(27, 18), float32] */, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %643 = cast(%637, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %644 = cast(meta[relay.Constant][58] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %645 = cast(%var_4263, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %646 = reshape(%639, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %647 = reshape(%640, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %648 = reshape(%641, newshape=[147]) /* ty=Tensor[(147), uint8] */;
  %649 = reshape(%642, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %650 = reshape(%643, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
  %651 = reshape(%644, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %652 = reshape(%645, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %653 = @func_3529(%646, %647, %648, %649, %650, %651, %652) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
  %654 = atanh(%638) /* ty=Tensor[(4, 10, 6), float64] */;
  %655 = %653.7;
  (%654, %655, meta[relay.Constant][56] /* ty=Tensor[(1200), float32] */, %var_4260, meta[relay.Constant][57] /* ty=Tensor[(27, 18), float32] */, meta[relay.Constant][58] /* ty=Tensor[(260), float64] */, %var_4263)
}

def @func_9759(%var_9747: Tensor[(7), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(7), float64], Tensor[(486), float32]) {
  %656 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %657 = cast(%var_9747, dtype="float64") /* ty=Tensor[(7), float64] */;
  %658 = cast(meta[relay.Constant][59] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %659 = reshape(%657, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %660 = reshape(%658, newshape=[9, 54]) /* ty=Tensor[(9, 54), float32] */;
  %661 = @func_7121(%659, %660) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) */;
  %662 = %656.0;
  %663 = %661.6;
  (%662, %663, %var_9747, meta[relay.Constant][59] /* ty=Tensor[(486), float32] */)
}

def @func_10761() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %664 = @func_9128() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %665 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  %666 = %664.0;
  (%665, %666)
}

def @func_3837() -> Tensor[(4, 10, 6), float32] {
  @func_3782() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_3213(%var_3207: Tensor[(6, 9, 9), float32], %var_3208: Tensor[(6, 9, 9), float32]) -> Tensor[(6, 9, 9), float32] {
  %667 = cast(%var_3208, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %668 = shape_of(%var_3207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_3207, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%669, %670) /* ty=Tensor[(6, 9, 9), float32] */
}

def @func_8532() -> Tensor[(4, 10, 6), float32] {
  @func_6453() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7543() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %671 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
  %672 = cast(%671, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %673 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %674 = log2(%672) /* ty=Tensor[(4, 10, 6), float32] */;
  (%673, %674)
}

def @func_11116() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %675 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %676 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
  %677 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %678 = %675.0;
  %679 = %676.0;
  %680 = %677.0;
  %681 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  (%678, %679, %680, %681)
}

def @func_6453() -> Tensor[(4, 10, 6), float32] {
  @func_5173() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7894() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %682 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %683 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  %684 = %682.0;
  (%683, %684)
}

def @func_3747(%var_3726: Tensor[(5, 52), float64], %var_3729: Tensor[(5, 52), float64], %var_3734: float32) -> (Tensor[(4, 10, 6), float64], Tensor[(324), uint8], Tensor[(5, 52), float64], Tensor[(13, 14, 3), float32], float32, Tensor[(91, 6), float32]) {
  %685 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %688 = cast(%var_3726, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %689 = reshape(%688, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %690 = @func_3186(%689) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) */;
  %691 = cast(%var_3729, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %692 = shape_of(%var_3726, dtype="int32") /* ty=Tensor[(2), int32] */;
  %693 = cast(%var_3726, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %695 = cast(%var_3734, dtype="float32") /* ty=float32 */;
  %696 = cast(meta[relay.Constant][60] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %697 = reshape(%695, newshape=[]) /* ty=float32 */;
  %698 = reshape(%696, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
  %699 = log(%687) /* ty=Tensor[(4, 10, 6), float64] */;
  %700 = %690.4;
  %701 = power(%693, %694) /* ty=Tensor[(5, 52), float64] */;
  %702 = @func_1748(%697, %698) /* ty=Tensor[(13, 14, 3), float32] */;
  (%699, %700, %701, %702, %var_3734, meta[relay.Constant][60] /* ty=Tensor[(91, 6), float32] */)
}

def @func_11216() -> (Tensor[(4, 10, 6), float32],) {
  %703 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%703,)
}

def @func_11807() -> Tensor[(4, 10, 6), float64] {
  @func_6310() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_10930() -> Tensor[(4, 10, 6), float32] {
  %704 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %704.0
}

def @func_11839() -> (Tensor[(4, 10, 6), float32],) {
  %705 = @func_10572() /* ty=Tensor[(4, 10, 6), float32] */;
  (%705,)
}

def @func_3822(%var_3815: Tensor[(12, 15, 8), float32], %var_3816: Tensor[(12, 15, 8), float32]) -> (Tensor[(12, 15, 8), float32],) {
  %706 = cast(%var_3816, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
  %707 = shape_of(%var_3815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%var_3815, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %710 = divide(%708, %709) /* ty=Tensor[(12, 15, 8), float32] */;
  (%710,)
}

def @func_11576(%var_11540: Tensor[(260), uint64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  %711 = cast(%var_11540, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %712 = cast(meta[relay.Constant][61] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %713 = reshape(%711, newshape=[1, 260]) /* ty=Tensor[(1, 260), uint64] */;
  %714 = reshape(%712, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %715 = @func_9401(%713, %714) /* ty=(Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) */;
  %716 = cast(%var_11540, dtype="float64") /* ty=Tensor[(260), float64] */;
  %717 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %718 = %715.3;
  %719 = cos(%716) /* ty=Tensor[(260), float64] */;
  %720 = @func_10572() /* ty=Tensor[(4, 10, 6), float32] */;
  (%717, %718, meta[relay.Constant][61] /* ty=Tensor[(7), float64] */, %719, %720)
}

def @func_9036(%var_9006: Tensor[(490), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(490), float32], Tensor[(1638), float32], Tensor[(486), float32]) {
  %721 = cast(%var_9006, dtype="float32") /* ty=Tensor[(490), float32] */;
  %722 = cast(meta[relay.Constant][62] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %723 = cast(meta[relay.Constant][63] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %724 = reshape(%721, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %725 = reshape(%722, newshape=[14, 117]) /* ty=Tensor[(14, 117), float32] */;
  %726 = reshape(%723, newshape=[9, 54]) /* ty=Tensor[(9, 54), float32] */;
  %727 = @func_8453(%724, %725, %726) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) */;
  %728 = @func_6705() /* ty=Tensor[(4, 10, 6), float32] */;
  %729 = %727.10;
  (%728, %729, %var_9006, meta[relay.Constant][62] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][63] /* ty=Tensor[(486), float32] */)
}

def @func_11006(%var_10998: Tensor[(360), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(3, 10, 12), float64], Tensor[(360), float64]) {
  %730 = @func_6215() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %731 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %732 = cast(%var_10998, dtype="float64") /* ty=Tensor[(360), float64] */;
  %733 = reshape(%732, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %734 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %735 = %730.0;
  %736 = %731.0;
  %737 = @func_5807(%733) /* ty=Tensor[(3, 10, 12), float64] */;
  (%734, %735, %736, %737, %var_10998)
}

def @func_3767() -> Tensor[(4, 10, 6), float32] {
  %738 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %738.0
}

def @func_5173() -> Tensor[(4, 10, 6), float32] {
  @func_3850() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_9649() -> (Tensor[(4, 10, 6), float32],) {
  %739 = @func_5312() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %740 = %739.2;
  (%740,)
}

def @func_7716() -> (Tensor[(4, 10, 6), float64],) {
  %741 = @func_7558() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %742 = %741.0;
  (%742,)
}

def @func_8089() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) {
  %743 = @func_5940() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %744 = cast(meta[relay.Constant][64] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %745 = reshape(%744, newshape=[65, 4]) /* ty=Tensor[(65, 4), float64] */;
  %746 = @func_3282(%745) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) */;
  %747 = %743.0;
  %748 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
  %749 = %746.3;
  (%747, %748, %749, meta[relay.Constant][64] /* ty=Tensor[(260), float64] */)
}

def @func_12034() -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(4, 10, 6), float32]) {
  %750 = cast(meta[relay.Constant][65] /* ty=Tensor[(1352), int64] */, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %751 = cast(meta[relay.Constant][65] /* ty=Tensor[(1352), int64] */, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %752 = reshape(%750, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %753 = reshape(%751, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %754 = @func_2028(%752, %753) /* ty=(Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) */;
  %755 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %756 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  %757 = %754.1;
  %758 = %755.0;
  (%756, %757, meta[relay.Constant][65] /* ty=Tensor[(1352), int64] */, %758)
}

def @func_7353(%var_7335: Tensor[(11, 4, 3), int64], %var_7336: Tensor[(11, 4, 3), int64]) -> (Tensor[(11, 4, 3), bool], Tensor[(11, 4, 3), float32]) {
  %759 = cast(%var_7336, dtype="bool") /* ty=Tensor[(11, 4, 3), bool] */;
  %760 = shape_of(%var_7335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%var_7335, dtype="bool") /* ty=Tensor[(11, 4, 3), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %763 = cast(%var_7336, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
  %764 = shape_of(%var_7335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%var_7335, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %767 = less_equal(%761, %762) /* ty=Tensor[(11, 4, 3), bool] */;
  %768 = mod(%765, %766) /* ty=Tensor[(11, 4, 3), float32] */;
  (%767, %768)
}

def @func_1320(%var_1258: uint64, %var_1259: Tensor[(10, 3, 12), uint64], %var_1280: Tensor[(324), uint8], %var_1313: Tensor[(55, 6), float32]) -> (Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) {
  %769 = cast(%var_1280, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %770 = reshape(%769, newshape=[9, 9, 4]) /* ty=Tensor[(9, 9, 4), uint8] */;
  %771 = @func_1176(%770) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) */;
  %772 = cast(%var_1258, dtype="bool") /* ty=bool */;
  %773 = cast(%var_1259, dtype="bool") /* ty=Tensor[(10, 3, 12), bool] */;
  %774 = less(%772, %773) /* ty=Tensor[(10, 3, 12), bool] */;
  %775 = cast(%774, dtype="int16") /* ty=Tensor[(10, 3, 12), int16] */;
  %776 = shape_of(%var_1259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_1259, dtype="int16") /* ty=Tensor[(10, 3, 12), int16] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %779 = cast(%var_1280, dtype="int8") /* ty=Tensor[(324), int8] */;
  %780 = %771.0;
  %781 = cast(%780, dtype="int8") /* ty=Tensor[(9, 9, 4), int8] */;
  %782 = reshape(%779, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
  %783 = reshape(%781, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
  %784 = @func_520(%782, %783) /* ty=(Tensor[(9, 3, 12), int8],) */;
  %785 = cast(meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %786 = reshape(%785, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %787 = cast(%var_1313, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %788 = reshape(%787, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
  %789 = @func_918(%788) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
  %790 = cast(meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %791 = reshape(%790, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %792 = right_shift(%777, %778) /* ty=Tensor[(10, 3, 12), int16] */;
  %793 = %784.0;
  %794 = @func_1005(%786) /* ty=Tensor[(2, 2, 6), int16] */;
  %795 = %789.4;
  %796 = @func_1005(%791) /* ty=Tensor[(2, 2, 6), int16] */;
  (%780, %var_1280, %792, %793, %794, meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, %795, %var_1313, %796)
}

def @func_8661(%var_8659: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
  %797 = cast(%var_8659, dtype="float32") /* ty=Tensor[(224), float32] */;
  %798 = reshape(%797, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %799 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  %800 = @func_1716(%798) /* ty=Tensor[(14, 8, 2), bool] */;
  (%799, %800, %var_8659)
}

def @func_4593() -> (Tensor[(4, 10, 6), float64],) {
  %801 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  (%801,)
}

def @func_4639() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %802 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %803 = %802.0;
  %804 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  (%803, %804)
}

def @func_10290(%var_10283: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float32]) {
  %805 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %806 = cast(%var_10283, dtype="float64") /* ty=Tensor[(260), float64] */;
  %807 = reshape(%806, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
  %808 = @func_6165(%807) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) */;
  %809 = cast(%var_10283, dtype="float32") /* ty=Tensor[(260), float32] */;
  %810 = %805.0;
  %811 = %808.0;
  %812 = erf(%809) /* ty=Tensor[(260), float32] */;
  (%810, %811, %812)
}

def @func_11701(%var_11683: Tensor[(2, 5, 3), float64], %var_11684: Tensor[(2, 5, 3), float64], %var_11693: Tensor[(330), float32]) -> (Tensor[(2, 5, 3), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(330), float32]) {
  %813 = cast(%var_11684, dtype="float64") /* ty=Tensor[(2, 5, 3), float64] */;
  %814 = shape_of(%var_11683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_11683, dtype="float64") /* ty=Tensor[(2, 5, 3), float64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %817 = cast(%var_11693, dtype="float32") /* ty=Tensor[(330), float32] */;
  %818 = reshape(%817, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %819 = @func_4894(%818) /* ty=(Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %820 = power(%815, %816) /* ty=Tensor[(2, 5, 3), float64] */;
  %821 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %822 = %819.6;
  (%820, %821, %822, %var_11693)
}

def @func_6049() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %823 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %824 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %825 = %823.0;
  %826 = %824.1;
  (%825, %826)
}

def @func_7842() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %827 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
  %828 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%827, %828)
}

def @func_3917() -> Tensor[(4, 10, 6), float32] {
  %829 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %829.0
}

def @func_5118() -> Tensor[(4, 10, 6), float32] {
  @func_3767() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_3080(%var_3057: Tensor[(15, 6, 4), int32]) -> Tensor[(15, 6, 4), float64] {
  %830 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 6, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 6, 4), int32] */;
  %831 = shape_of(%var_3057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%var_3057, dtype="int32") /* ty=Tensor[(15, 6, 4), int32] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %834 = add(%832, %833) /* ty=Tensor[(15, 6, 4), int32] */;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  log(%835) /* ty=Tensor[(15, 6, 4), float64] */
}

def @func_10687() -> (Tensor[(4, 10, 6), float32],) {
  %836 = @func_10301() /* ty=Tensor[(4, 10, 6), float32] */;
  (%836,)
}

def @func_7755() -> (Tensor[(4, 10, 6), float32],) {
  %837 = @func_5517() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %838 = %837.0;
  (%838,)
}

def @func_8146() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %839 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %840 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %841 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %842 = %839.0;
  %843 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
  %844 = @func_5214() /* ty=Tensor[(4, 10, 6), float32] */;
  %845 = %840.0;
  %846 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %847 = %841.0;
  %848 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
  (%842, %843, %844, %845, %846, %847, %848)
}

def @func_3224() -> (Tensor[(4, 10, 6), float32],) {
  %849 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%849,)
}

def @func_4135() -> Tensor[(4, 10, 6), float32] {
  %850 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %850.0
}

def @func_564(%var_553: Tensor[(7, 7, 3), uint8]) -> Tensor[(7, 7, 3), uint8] {
  %851 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 7, 3), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 3), uint8] */;
  %852 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_553, dtype="uint8") /* ty=Tensor[(7, 7, 3), uint8] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%853, %854) /* ty=Tensor[(7, 7, 3), uint8] */
}

def @func_4165() -> Tensor[(4, 10, 6), float32] {
  @func_3850() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_5643(%var_5607: Tensor[(13, 4, 1), float64], %var_5625: Tensor[(224), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) {
  %855 = cast(%var_5607, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %856 = @func_4744() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) */;
  %857 = cast(%var_5625, dtype="float32") /* ty=Tensor[(224), float32] */;
  %858 = cast(%var_5625, dtype="float64") /* ty=Tensor[(224), float64] */;
  %859 = reshape(%857, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %860 = reshape(%858, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float64] */;
  %861 = @func_3005(%859, %860) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) */;
  %862 = sigmoid(%855) /* ty=Tensor[(13, 4, 1), float64] */;
  %863 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %864 = %856.1;
  %865 = %861.6;
  (%862, %863, %864, %865, %var_5625)
}

def @func_10175(%var_10162: Tensor[(1, 2, 4), int16]) -> (Tensor[(1, 2, 4), bool],) {
  %866 = cast(meta[relay.Constant][69] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %867 = cast(%var_10162, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %868 = greater(%866, %867) /* ty=Tensor[(1, 2, 4), bool] */;
  (%868,)
}

def @func_5940() -> (Tensor[(4, 10, 6), float32],) {
  %869 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %870 = %869.0;
  (%870,)
}

def @func_11038() -> (Tensor[(4, 10, 6), float32],) {
  %871 = @func_9690() /* ty=Tensor[(4, 10, 6), float32] */;
  (%871,)
}

def @func_2331(%var_2313: Tensor[(15, 8, 10), float32], %var_2314: Tensor[(15, 8, 10), float32], %var_2318: Tensor[(15, 8, 10), float32]) -> (Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) {
  %872 = cast(%var_2314, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %873 = shape_of(%var_2313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_2313, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %876 = cast(%var_2318, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %877 = shape_of(%var_2314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%var_2314, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %880 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 21), uint8] */, dtype="uint8") /* ty=Tensor[(7, 21), uint8] */;
  %881 = reshape(%880, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %882 = less_equal(%874, %875) /* ty=Tensor[(15, 8, 10), bool] */;
  %883 = mod(%878, %879) /* ty=Tensor[(15, 8, 10), float32] */;
  %884 = @func_564(%881) /* ty=Tensor[(7, 7, 3), uint8] */;
  (%882, %883, %884, meta[relay.Constant][70] /* ty=Tensor[(7, 21), uint8] */)
}

def @func_5807(%var_5797: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
  %885 = cast(%var_5797, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
  log2(%885) /* ty=Tensor[(3, 10, 12), float64] */
}

def @func_11478() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %886 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %887 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  (%886, %887)
}

def @func_11888() -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %888 = cast(meta[relay.Constant][71] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %889 = cast(meta[relay.Constant][71] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %890 = reshape(%888, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %891 = reshape(%889, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %892 = @func_5214() /* ty=Tensor[(4, 10, 6), float32] */;
  %893 = @func_4716(%890, %891) /* ty=Tensor[(10, 8, 5), float64] */;
  (%892, %893, meta[relay.Constant][71] /* ty=Tensor[(400), float64] */)
}

def @func_6310() -> Tensor[(4, 10, 6), float64] {
  %894 = @func_5156() /* ty=Tensor[(4, 10, 6), float32] */;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  erf(%895) /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_918(%var_872: Tensor[(6, 5, 11), float32]) -> (Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
  %896 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 5, 11), float32] */, dtype="int32") /* ty=Tensor[(6, 5, 11), int32] */;
  %897 = shape_of(%var_872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_872, dtype="int32") /* ty=Tensor[(6, 5, 11), int32] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %900 = cast(%var_872, dtype="float32") /* ty=Tensor[(6, 5, 11), float32] */;
  %901 = asin(%900) /* ty=Tensor[(6, 5, 11), float32] */;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(6, 5, 11), float64] */;
  %903 = cast(meta[relay.Constant][73] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %904 = cast(meta[relay.Constant][74] /* ty=Tensor[(2704), uint32] */, dtype="uint32") /* ty=Tensor[(2704), uint32] */;
  %905 = reshape(%903, newshape=[]) /* ty=uint32 */;
  %906 = reshape(%904, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), uint32] */;
  %907 = @func_231(%905, %906) /* ty=(Tensor[(13, 16, 13), uint32],) */;
  %908 = maximum(%898, %899) /* ty=Tensor[(6, 5, 11), int32] */;
  %909 = atan(%902) /* ty=Tensor[(6, 5, 11), float64] */;
  %910 = %907.0;
  (%908, %909, %910, meta[relay.Constant][73] /* ty=uint32 */, meta[relay.Constant][74] /* ty=Tensor[(2704), uint32] */)
}

def @func_12233() -> (Tensor[(4, 10, 6), float32],) {
  %911 = @func_7894() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %912 = %911.1;
  (%912,)
}

def @func_312(%var_285: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) {
  %913 = cast(%var_285, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %914 = acos(%913) /* ty=Tensor[(10, 13, 2), float64] */;
  %915 = cast(%914, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %916 = shape_of(%var_285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%var_285, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %919 = cast(%var_285, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %920 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%914, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = floor_mod(%917, %918) /* ty=Tensor[(10, 13, 2), float64] */;
  %924 = logical_or(%921, %922) /* ty=Tensor[(10, 13, 2), bool] */;
  (%923, %924)
}

def @func_5214() -> Tensor[(4, 10, 6), float32] {
  %925 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %925.0
}

def @func_7928() -> (Tensor[(4, 10, 6), float32],) {
  %926 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  (%926,)
}

def @func_3299() -> (Tensor[(4, 10, 6), float32],) {
  %927 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%927,)
}

def @func_6165(%var_6148: Tensor[(5, 52), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) {
  %928 = @func_5684() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %929 = cast(meta[relay.Constant][75] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %930 = cast(meta[relay.Constant][75] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %931 = cast(%var_6148, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %932 = reshape(%929, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %933 = reshape(%930, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %934 = reshape(%931, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %935 = @func_4096(%932, %933, %934) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %936 = %928.0;
  %937 = %935.0;
  %938 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  (%936, %937, meta[relay.Constant][75] /* ty=Tensor[(490), float32] */, %var_6148, %938)
}

def @func_520(%var_514: Tensor[(9, 3, 12), int8], %var_515: Tensor[(9, 3, 12), int8]) -> (Tensor[(9, 3, 12), int8],) {
  %939 = cast(%var_515, dtype="int8") /* ty=Tensor[(9, 3, 12), int8] */;
  %940 = shape_of(%var_514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%var_514, dtype="int8") /* ty=Tensor[(9, 3, 12), int8] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %943 = left_shift(%941, %942) /* ty=Tensor[(9, 3, 12), int8] */;
  (%943,)
}

def @func_6459() -> (Tensor[(4, 10, 6), float32],) {
  %944 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  (%944,)
}

def @func_7031() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %945 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %946 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %947 = %945.0;
  %948 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  %949 = %946.0;
  (%947, %948, %949)
}

def @func_9401(%var_9361: Tensor[(1, 260), uint64], %var_9377: Tensor[(7), float64]) -> (Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) {
  %950 = cast(%var_9361, dtype="uint64") /* ty=Tensor[(1, 260), uint64] */;
  %951 = cast(%var_9361, dtype="uint64") /* ty=Tensor[(1, 260), uint64] */;
  %952 = reshape(%950, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %953 = reshape(%951, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %954 = @func_3575(%952, %953) /* ty=(Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) */;
  %955 = @func_6698() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %956 = %955.1;
  %957 = cast(%956, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %958 = cast(%var_9361, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
  %959 = cast(%var_9377, dtype="float64") /* ty=Tensor[(7), float64] */;
  %960 = cast(meta[relay.Constant][76] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %961 = cast(meta[relay.Constant][77] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %962 = %954.1;
  %963 = cast(%962, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %964 = reshape(%958, newshape=[1, 260]) /* ty=Tensor[(1, 260), float64] */;
  %965 = reshape(%959, newshape=[7, 1]) /* ty=Tensor[(7, 1), float64] */;
  %966 = reshape(%960, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), float32] */;
  %967 = reshape(%961, newshape=[27, 18]) /* ty=Tensor[(27, 18), float32] */;
  %968 = reshape(%963, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %969 = @func_3633(%964, %965, %966, %967, %968) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) */;
  %970 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %971 = sigmoid(%957) /* ty=Tensor[(4, 10, 6), float32] */;
  %972 = %969.0;
  %973 = %970.1;
  (%962, %var_9361, %971, %972, %var_9377, meta[relay.Constant][76] /* ty=Tensor[(1200), float32] */, meta[relay.Constant][77] /* ty=Tensor[(486), float32] */, %973)
}

def @main(%var_12240: Tensor[(6, 1, 9), int8], %var_12241: Tensor[(6, 3, 9), int8]) -> Tensor[(6, 3, 9), bool] {
  %974 = cast(%var_12240, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %975 = cast(%var_12241, dtype="bool") /* ty=Tensor[(6, 3, 9), bool] */;
  not_equal(%974, %975) /* ty=Tensor[(6, 3, 9), bool] */
}

def @func_9128() -> (Tensor[(4, 10, 6), float32],) {
  %976 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %977 = %976.0;
  (%977,)
}

def @func_7493() -> Tensor[(4, 10, 6), float64] {
  @func_4553() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_5312() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %978 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %979 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  %980 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%978, %979, %980)
}

def @func_6366() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %981 = @func_5470() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %982 = %981.0;
  %983 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
  (%982, %983)
}

def @func_8465() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
  %984 = @func_8089() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) */;
  %985 = %984.1;
  %986 = @func_7186() /* ty=Tensor[(14, 8, 2), bool] */;
  (%985, %986)
}

def @func_10085() -> (Tensor[(14, 8, 2), bool],) {
  %987 = @func_7186() /* ty=Tensor[(14, 8, 2), bool] */;
  (%987,)
}

def @func_6548() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %988 = @func_6195() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %989 = @func_4593() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %990 = %988.0;
  %991 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
  %992 = %989.0;
  (%990, %991, %992)
}

def @func_11081() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %993 = @func_11038() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %994 = %993.0;
  %995 = @func_7406() /* ty=Tensor[(4, 10, 6), float32] */;
  (%994, %995)
}

def @func_1005(%var_995: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), int16] {
  %996 = cast(%var_995, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %997 = cos(%996) /* ty=Tensor[(2, 2, 6), float32] */;
  %998 = cast(%var_995, dtype="int16") /* ty=Tensor[(2, 2, 6), int16] */;
  %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%997, dtype="int16") /* ty=Tensor[(2, 2, 6), int16] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%1000, %1001) /* ty=Tensor[(2, 2, 6), int16] */
}

def @func_6905() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) {
  %1002 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1003 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %1004 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %1005 = %1002.0;
  %1006 = %1003.2;
  (%1004, %1005, %1006)
}

def @func_8610(%var_8595: Tensor[(14, 8, 2), bool]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
  %1007 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1008 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
  %1009 = %1008.1;
  %1010 = cast(%var_8595, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%1009, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1014 = %1007.0;
  %1015 = not_equal(%1012, %1013) /* ty=Tensor[(14, 8, 2), bool] */;
  (%1014, %1015)
}

def @func_10572() -> Tensor[(4, 10, 6), float32] {
  %1016 = @func_7842() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %1016.1
}

def @func_8517() -> Tensor[(4, 10, 6), float32] {
  %1017 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %1017.0
}

def @func_231(%var_209: uint32, %var_210: Tensor[(13, 16, 13), uint32]) -> (Tensor[(13, 16, 13), uint32],) {
  %1018 = cast(%var_209, dtype="uint32") /* ty=uint32 */;
  %1019 = cast(%var_210, dtype="uint32") /* ty=Tensor[(13, 16, 13), uint32] */;
  %1020 = bitwise_and(%1018, %1019) /* ty=Tensor[(13, 16, 13), uint32] */;
  (%1020,)
}

def @func_3529(%var_3318: Tensor[(4, 10, 6), float32], %var_3337: Tensor[(1200), float32], %var_3366: Tensor[(147), uint8], %var_3410: Tensor[(486), float32], %var_3415: Tensor[(4, 10, 6), float64], %var_3490: Tensor[(260), float64], %var_3516: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) {
  %1021 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1022 = %1021.0;
  %1023 = cast(%var_3318, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
  %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%1022, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1027 = less_equal(%1025, %1026) /* ty=Tensor[(4, 10, 6), bool] */;
  %1028 = cast(%1027, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
  %1029 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1030 = cast(%1022, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1032 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1033 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1034 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1035 = reshape(%1032, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1036 = reshape(%1033, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1037 = reshape(%1034, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1038 = @func_2331(%1035, %1036, %1037) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
  %1039 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %1040 = %1038.0;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %1042 = cast(%1040, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %1043 = reshape(%1039, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1044 = reshape(%1041, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1045 = reshape(%1042, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
  %1046 = @func_2331(%1043, %1044, %1045) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
  %1047 = cast(%var_3410, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1048 = cast(%var_3410, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1049 = reshape(%1047, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %1050 = reshape(%1048, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %1051 = cast(%1027, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1052 = sin(%1051) /* ty=Tensor[(4, 10, 6), float64] */;
  %1053 = cast(%var_3415, dtype="int64") /* ty=Tensor[(4, 10, 6), int64] */;
  %1054 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%1052, dtype="int64") /* ty=Tensor[(4, 10, 6), int64] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1057 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1058 = cast(%var_3318, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %1059 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%1022, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1062 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %1063 = cast(%1062, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %1064 = sinh(%1063) /* ty=Tensor[(4, 10, 6), float32] */;
  %1065 = cast(%1027, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1066 = shape_of(%1064, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%1064, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1069 = mod(%1067, %1068) /* ty=Tensor[(4, 10, 6), float64] */;
  %1070 = cast(%1069, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %1071 = exp(%1070) /* ty=Tensor[(4, 10, 6), float32] */;
  %1072 = cast(%1052, dtype="int16") /* ty=Tensor[(4, 10, 6), int16] */;
  %1073 = shape_of(%1071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%1071, dtype="int16") /* ty=Tensor[(4, 10, 6), int16] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1076 = cast(%var_3490, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1077 = reshape(%1076, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %1078 = @func_312(%1077) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
  %1079 = cast(%var_3516, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1080 = cast(%var_3516, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1081 = reshape(%1079, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1082 = reshape(%1080, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float64] */;
  %1083 = @func_3005(%1081, %1082) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) */;
  %1084 = cast(meta[relay.Constant][78] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1085 = reshape(%1084, newshape=[15, 14, 6]) /* ty=Tensor[(15, 14, 6), float64] */;
  %1086 = @func_1934(%1085) /* ty=(Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) */;
  %1087 = %1086.2;
  %1088 = cast(%var_3366, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %1089 = reshape(%1088, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %1090 = @func_564(%1089) /* ty=Tensor[(7, 7, 3), uint8] */;
  %1091 = cast(%1090, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
  %1092 = shape_of(%1087, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1093 = cast(%1087, dtype="bool") /* ty=Tensor[(147), bool] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1095 = %1078.1;
  %1096 = cast(%1095, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %1097 = reshape(%1096, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1098 = @func_3186(%1097) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) */;
  %1099 = greater_equal(%1030, %1031) /* ty=Tensor[(4, 10, 6), bool] */;
  %1100 = %1046.2;
  %1101 = @func_3213(%1049, %1050) /* ty=Tensor[(6, 9, 9), float32] */;
  %1102 = logical_xor(%1055, %1056) /* ty=Tensor[(4, 10, 6), int64] */;
  %1103 = %1057.0;
  %1104 = divide(%1060, %1061) /* ty=Tensor[(4, 10, 6), float32] */;
  %1105 = left_shift(%1074, %1075) /* ty=Tensor[(4, 10, 6), int16] */;
  %1106 = %1083.12;
  %1107 = not_equal(%1093, %1094) /* ty=Tensor[(147), bool] */;
  %1108 = %1098.3;
  (%1099, %1040, %var_3337, %var_3366, %1100, %1101, %var_3410, %1102, %1103, %1104, %1105, meta[relay.Constant][78] /* ty=Tensor[(1260), float64] */, %1095, %var_3490, %1106, %var_3516, %1107, %1108)
}

def @func_5976(%var_5962: Tensor[(9, 13, 9), int16]) -> Tensor[(9, 13, 9), bool] {
  %1109 = cast(%var_5962, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %1110 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(9, 13, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1111 = cast(meta[relay.Constant][79] /* ty=Tensor[(9, 13, 9), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1111, %1112) /* ty=Tensor[(9, 13, 9), bool] */
}

def @func_5695() -> (Tensor[(4, 10, 6), float32],) {
  %1113 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_3782() -> Tensor[(4, 10, 6), float32] {
  %1115 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1115.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_520(%var_514: Tensor[(9, 3, 12), int8], %var_515: Tensor[(9, 3, 12), int8]) -> (Tensor[(9, 3, 12), int8],) {
  %0 = cast(%var_515, dtype="int8") /* ty=Tensor[(9, 3, 12), int8] */;
  %1 = shape_of(%var_514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_514, dtype="int8") /* ty=Tensor[(9, 3, 12), int8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %4 = left_shift(%2, %3) /* ty=Tensor[(9, 3, 12), int8] */;
  (%4,)
}

def @func_5686() -> (Tensor[(4, 10, 6), float32],) {
  @func_5684() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_7544() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %9 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %5 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
    %6 = cast(%5, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %7 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
    %8 = log2(%6) /* ty=Tensor[(4, 10, 6), float32] */;
    (%7, %8)
  };
  %9() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_9726() -> (Tensor[(1260), float32],) {
  %10 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %11 = %10.4;
  (%11,)
}

def @func_12150() -> Tensor[(2, 6, 3), float32] {
  @func_12148() /* ty=Tensor[(2, 6, 3), float32] */
}

def @func_9690() -> Tensor[(4, 10, 6), float32] {
  %12 = @func_6049() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %12.1
}

def @func_3918() -> Tensor[(4, 10, 6), float32] {
  %14 = fn () -> Tensor[(4, 10, 6), float32] {
    %13 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %13.0
  };
  %14() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_8799(%var_8797: Tensor[(7, 1), float64]) -> (Tensor[(260), uint64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64]) {
  @func_8796(%var_8797) /* ty=(Tensor[(260), uint64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64]) */
}

def @func_7817(%var_7799: Tensor[(11, 7, 14), float64], %var_7810: Tensor[(1, 52), float64]) -> (Tensor[(11, 7, 14), float64], Tensor[(4, 10, 6), float32], Tensor[(224), float32], Tensor[(1, 52), float64], Tensor[(224), float32], Tensor[(1440), float32], Tensor[(2, 720), float32]) {
  %15 = cast(%var_7799, dtype="float64") /* ty=Tensor[(11, 7, 14), float64] */;
  %16 = cast(%var_7810, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %18 = reshape(%16, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %19 = reshape(%17, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %20 = @func_5643(%18, %19) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 720), float32] */, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %22 = reshape(%21, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %23 = @func_4187(%22) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) */;
  %24 = acos(%15) /* ty=Tensor[(11, 7, 14), float64] */;
  %25 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %26 = %20.4;
  %27 = %23.2;
  (%24, %25, %26, %var_7810, meta[relay.Constant][0] /* ty=Tensor[(224), float32] */, %27, meta[relay.Constant][1] /* ty=Tensor[(2, 720), float32] */)
}

def @func_7896() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_7894() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_5646(%var_5644: Tensor[(13, 4, 1), float64], %var_5645: Tensor[(224), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) {
  %39 = fn (%var_5607: Tensor[(13, 4, 1), float64], %var_5625: Tensor[(224), float32]) -> (Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) {
    %28 = cast(%var_5607, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
    %29 = @func_4744() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) */;
    %30 = cast(%var_5625, dtype="float32") /* ty=Tensor[(224), float32] */;
    %31 = cast(%var_5625, dtype="float64") /* ty=Tensor[(224), float64] */;
    %32 = reshape(%30, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %33 = reshape(%31, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float64] */;
    %34 = @func_3005(%32, %33) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) */;
    %35 = sigmoid(%28) /* ty=Tensor[(13, 4, 1), float64] */;
    %36 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
    %37 = %29.1;
    %38 = %34.6;
    (%35, %36, %37, %38, %var_5625)
  };
  %39(%var_5644, %var_5645) /* ty=(Tensor[(13, 4, 1), float64], Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(13, 14, 3), float32], Tensor[(224), float32]) */
}

def @func_7675() -> (Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) {
  %40 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %42 = reshape(%41, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float64] */;
  %43 = @func_6032(%42) /* ty=(Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %45 = reshape(%44, newshape=[15, 14, 6]) /* ty=Tensor[(15, 14, 6), float64] */;
  %46 = @func_1934(%45) /* ty=(Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %48 = asin(%47) /* ty=Tensor[(1260), float32] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %50 = %40.1;
  %51 = %43.1;
  %52 = %46.0;
  %53 = cosh(%49) /* ty=Tensor[(1260), float32] */;
  (%50, %51, meta[relay.Constant][2] /* ty=Tensor[(448), float64] */, %52, %53)
}

def @func_12117(%var_12116: Tensor[(12, 3, 16), float64]) -> Tensor[(12, 3, 16), float64] {
  %55 = fn (%var_12112: Tensor[(12, 3, 16), float64]) -> Tensor[(12, 3, 16), float64] {
    %54 = cast(%var_12112, dtype="float64") /* ty=Tensor[(12, 3, 16), float64] */;
    acos(%54) /* ty=Tensor[(12, 3, 16), float64] */
  };
  %55(%var_12116) /* ty=Tensor[(12, 3, 16), float64] */
}

def @func_4963(%var_4962: Tensor[(8, 28), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(8, 28), int64]) {
  %69 = fn (%var_4920: Tensor[(8, 28), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(8, 28), int64]) {
    %56 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %57 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %58 = cast(%var_4920, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
    %59 = reshape(%58, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
    %60 = @func_1716(%59) /* ty=Tensor[(14, 8, 2), bool] */;
    %61 = cast(%60, dtype="int64") /* ty=Tensor[(14, 8, 2), int64] */;
    %62 = shape_of(%var_4920, dtype="int32") /* ty=Tensor[(2), int32] */;
    %63 = cast(%var_4920, dtype="int64") /* ty=Tensor[(8, 28), int64] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %65 = %56.0;
    %66 = %57.0;
    %67 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
    %68 = subtract(%63, %64) /* ty=Tensor[(8, 28), int64] */;
    (%65, %66, %67, %68)
  };
  %69(%var_4962) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(8, 28), int64]) */
}

def @func_8664(%var_8662: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
  @func_8661(%var_8662) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) */
}

def @func_9881() -> Tensor[(448), float64] {
  @func_9879() /* ty=Tensor[(448), float64] */
}

def @func_11774() -> (Tensor[(4, 10, 6), float32],) {
  %70 = @func_9204() /* ty=Tensor[(4, 10, 6), float32] */;
  (%70,)
}

def @func_3242() -> (Tensor[(4, 10, 6), float32],) {
  @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10572() -> Tensor[(4, 10, 6), float32] {
  %71 = @func_7842() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %71.1
}

def @func_3537(%var_3530: Tensor[(4, 10, 6), float32], %var_3531: Tensor[(1200), float32], %var_3532: Tensor[(147), uint8], %var_3533: Tensor[(486), float32], %var_3534: Tensor[(4, 10, 6), float64], %var_3535: Tensor[(260), float64], %var_3536: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) {
  %160 = fn (%var_3318: Tensor[(4, 10, 6), float32], %var_3337: Tensor[(1200), float32], %var_3366: Tensor[(147), uint8], %var_3410: Tensor[(486), float32], %var_3415: Tensor[(4, 10, 6), float64], %var_3490: Tensor[(260), float64], %var_3516: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) {
    %72 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %73 = %72.0;
    %74 = cast(%var_3318, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
    %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %76 = cast(%73, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %78 = less_equal(%76, %77) /* ty=Tensor[(4, 10, 6), bool] */;
    %79 = cast(%78, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
    %80 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%73, dtype="bool") /* ty=Tensor[(4, 10, 6), bool] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %83 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %84 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %85 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %86 = reshape(%83, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %87 = reshape(%84, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %88 = reshape(%85, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %89 = @func_2331(%86, %87, %88) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
    %90 = cast(%var_3337, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %91 = %89.0;
    %92 = cast(%91, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
    %93 = cast(%91, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
    %94 = reshape(%90, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %95 = reshape(%92, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %96 = reshape(%93, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %97 = @func_2331(%94, %95, %96) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
    %98 = cast(%var_3410, dtype="float32") /* ty=Tensor[(486), float32] */;
    %99 = cast(%var_3410, dtype="float32") /* ty=Tensor[(486), float32] */;
    %100 = reshape(%98, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %101 = reshape(%99, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %102 = cast(%78, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %103 = sin(%102) /* ty=Tensor[(4, 10, 6), float64] */;
    %104 = cast(%var_3415, dtype="int64") /* ty=Tensor[(4, 10, 6), int64] */;
    %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
    %106 = cast(%103, dtype="int64") /* ty=Tensor[(4, 10, 6), int64] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %108 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %109 = cast(%var_3318, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %110 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %111 = cast(%73, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %113 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %114 = cast(%113, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %115 = sinh(%114) /* ty=Tensor[(4, 10, 6), float32] */;
    %116 = cast(%78, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
    %118 = cast(%115, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %120 = mod(%118, %119) /* ty=Tensor[(4, 10, 6), float64] */;
    %121 = cast(%120, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %122 = exp(%121) /* ty=Tensor[(4, 10, 6), float32] */;
    %123 = cast(%103, dtype="int16") /* ty=Tensor[(4, 10, 6), int16] */;
    %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%122, dtype="int16") /* ty=Tensor[(4, 10, 6), int16] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %127 = cast(%var_3490, dtype="float64") /* ty=Tensor[(260), float64] */;
    %128 = reshape(%127, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %129 = @func_312(%128) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
    %130 = cast(%var_3516, dtype="float32") /* ty=Tensor[(224), float32] */;
    %131 = cast(%var_3516, dtype="float64") /* ty=Tensor[(224), float64] */;
    %132 = reshape(%130, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %133 = reshape(%131, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float64] */;
    %134 = @func_3005(%132, %133) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) */;
    %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %136 = reshape(%135, newshape=[15, 14, 6]) /* ty=Tensor[(15, 14, 6), float64] */;
    %137 = @func_1934(%136) /* ty=(Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) */;
    %138 = %137.2;
    %139 = cast(%var_3366, dtype="uint8") /* ty=Tensor[(147), uint8] */;
    %140 = reshape(%139, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
    %141 = @func_564(%140) /* ty=Tensor[(7, 7, 3), uint8] */;
    %142 = cast(%141, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
    %143 = shape_of(%138, dtype="int32") /* ty=Tensor[(1), int32] */;
    %144 = cast(%138, dtype="bool") /* ty=Tensor[(147), bool] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?), bool] */;
    %146 = %129.1;
    %147 = cast(%146, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
    %148 = reshape(%147, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %149 = @func_3186(%148) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) */;
    %150 = greater_equal(%81, %82) /* ty=Tensor[(4, 10, 6), bool] */;
    %151 = %97.2;
    %152 = @func_3213(%100, %101) /* ty=Tensor[(6, 9, 9), float32] */;
    %153 = logical_xor(%106, %107) /* ty=Tensor[(4, 10, 6), int64] */;
    %154 = %108.0;
    %155 = divide(%111, %112) /* ty=Tensor[(4, 10, 6), float32] */;
    %156 = left_shift(%125, %126) /* ty=Tensor[(4, 10, 6), int16] */;
    %157 = %134.12;
    %158 = not_equal(%144, %145) /* ty=Tensor[(147), bool] */;
    %159 = %149.3;
    (%150, %91, %var_3337, %var_3366, %151, %152, %var_3410, %153, %154, %155, %156, meta[relay.Constant][4] /* ty=Tensor[(1260), float64] */, %146, %var_3490, %157, %var_3516, %158, %159)
  };
  %160(%var_3530, %var_3531, %var_3532, %var_3533, %var_3534, %var_3535, %var_3536) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */
}

def @func_11650() -> (Tensor[(4, 10, 6), float32],) {
  %163 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %161 = @func_5940() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %162 = %161.0;
    (%162,)
  };
  %163() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10086() -> (Tensor[(14, 8, 2), bool],) {
  %165 = fn () -> (Tensor[(14, 8, 2), bool],) {
    %164 = @func_7186() /* ty=Tensor[(14, 8, 2), bool] */;
    (%164,)
  };
  %165() /* ty=(Tensor[(14, 8, 2), bool],) */
}

def @func_9404(%var_9402: Tensor[(1, 260), uint64], %var_9403: Tensor[(7), float64]) -> (Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) {
  %190 = fn (%var_9361: Tensor[(1, 260), uint64], %var_9377: Tensor[(7), float64]) -> (Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) {
    %166 = cast(%var_9361, dtype="uint64") /* ty=Tensor[(1, 260), uint64] */;
    %167 = cast(%var_9361, dtype="uint64") /* ty=Tensor[(1, 260), uint64] */;
    %168 = reshape(%166, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
    %169 = reshape(%167, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
    %170 = @func_3575(%168, %169) /* ty=(Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) */;
    %171 = @func_6698() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %172 = %171.1;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %174 = cast(%var_9361, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
    %175 = cast(%var_9377, dtype="float64") /* ty=Tensor[(7), float64] */;
    %176 = cast(meta[relay.Constant][5] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %177 = cast(meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %178 = %170.1;
    %179 = cast(%178, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
    %180 = reshape(%174, newshape=[1, 260]) /* ty=Tensor[(1, 260), float64] */;
    %181 = reshape(%175, newshape=[7, 1]) /* ty=Tensor[(7, 1), float64] */;
    %182 = reshape(%176, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), float32] */;
    %183 = reshape(%177, newshape=[27, 18]) /* ty=Tensor[(27, 18), float32] */;
    %184 = reshape(%179, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %185 = @func_3633(%180, %181, %182, %183, %184) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) */;
    %186 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
    %187 = sigmoid(%173) /* ty=Tensor[(4, 10, 6), float32] */;
    %188 = %185.0;
    %189 = %186.1;
    (%178, %var_9361, %187, %188, %var_9377, meta[relay.Constant][5] /* ty=Tensor[(1200), float32] */, meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, %189)
  };
  %190(%var_9402, %var_9403) /* ty=(Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) */
}

def @func_10782() -> (Tensor[(4, 10, 6), float32],) {
  @func_10780() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11676() -> (Tensor[(10, 2, 9), uint8], Tensor[(10, 2, 9), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32]) {
  %205 = fn () -> (Tensor[(10, 2, 9), uint8], Tensor[(10, 2, 9), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32]) {
    %191 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 9), float64] */;
    %192 = tan(%191) /* ty=Tensor[(10, 2, 9), float64] */;
    %193 = cast(%192, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
    %194 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(10, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 2, 9), float64] */, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %197 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 9), float64] */;
    %198 = cast(meta[relay.Constant][8] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %199 = cast(meta[relay.Constant][9] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
    %200 = reshape(%198, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float32] */;
    %201 = reshape(%199, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), float32] */;
    %202 = maximum(%195, %196) /* ty=Tensor[(10, 2, 9), uint8] */;
    %203 = acos(%197) /* ty=Tensor[(10, 2, 9), float64] */;
    %204 = @func_2863(%200, %201) /* ty=Tensor[(10, 8, 8), float32] */;
    (%202, %203, %204, meta[relay.Constant][8] /* ty=Tensor[(80), float32] */, meta[relay.Constant][9] /* ty=Tensor[(640), float32] */)
  };
  %205() /* ty=(Tensor[(10, 2, 9), uint8], Tensor[(10, 2, 9), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32]) */
}

def @func_8148() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  @func_8146() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */
}

def @func_11039() -> (Tensor[(4, 10, 6), float32],) {
  %207 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %206 = @func_9690() /* ty=Tensor[(4, 10, 6), float32] */;
    (%206,)
  };
  %207() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_1716(%var_1711: Tensor[(14, 8, 2), float32]) -> Tensor[(14, 8, 2), bool] {
  %208 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 8, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %209 = shape_of(%var_1711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_1711, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%210, %211) /* ty=Tensor[(14, 8, 2), bool] */
}

def @func_5119() -> Tensor[(4, 10, 6), float32] {
  %212 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_3767() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %212() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_4165() -> Tensor[(4, 10, 6), float32] {
  @func_3850() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_1007(%var_1006: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), int16] {
  %219 = fn (%var_995: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), int16] {
    %213 = cast(%var_995, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
    %214 = cos(%213) /* ty=Tensor[(2, 2, 6), float32] */;
    %215 = cast(%var_995, dtype="int16") /* ty=Tensor[(2, 2, 6), int16] */;
    %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
    %217 = cast(%214, dtype="int16") /* ty=Tensor[(2, 2, 6), int16] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%217, %218) /* ty=Tensor[(2, 2, 6), int16] */
  };
  %219(%var_1006) /* ty=Tensor[(2, 2, 6), int16] */
}

def @func_9692() -> Tensor[(4, 10, 6), float32] {
  @func_9690() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6784() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) {
  @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */
}

def @func_5472() -> (Tensor[(4, 10, 6), float32],) {
  @func_5470() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4096(%var_4057: Tensor[(14, 5, 7), float32], %var_4058: Tensor[(14, 5, 7), float32], %var_4073: Tensor[(260), float64]) -> (Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) {
  %220 = cast(%var_4058, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %221 = shape_of(%var_4057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_4057, dtype="float32") /* ty=Tensor[(14, 5, 7), float32] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %224 = divide(%222, %223) /* ty=Tensor[(14, 5, 7), float32] */;
  %225 = cast(%var_4058, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="float64") /* ty=Tensor[(14, 5, 7), float64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %230 = cast(meta[relay.Constant][12] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %231 = cast(meta[relay.Constant][13] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
  %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(81, 6), float32] */, dtype="float32") /* ty=Tensor[(81, 6), float32] */;
  %233 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %234 = cast(%var_4073, dtype="float64") /* ty=Tensor[(260), float64] */;
  %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %236 = reshape(%229, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %237 = reshape(%230, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
  %238 = reshape(%231, newshape=[147]) /* ty=Tensor[(147), uint8] */;
  %239 = reshape(%232, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %240 = reshape(%233, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
  %241 = reshape(%234, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %242 = reshape(%235, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %243 = @func_3529(%236, %237, %238, %239, %240, %241, %242) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
  %244 = cast(meta[relay.Constant][16] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %245 = reshape(%244, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %246 = floor_divide(%227, %228) /* ty=Tensor[(14, 5, 7), float64] */;
  %247 = %243.17;
  %248 = @func_1005(%245) /* ty=Tensor[(2, 2, 6), int16] */;
  (%246, %247, meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, meta[relay.Constant][12] /* ty=Tensor[(1200), float32] */, meta[relay.Constant][13] /* ty=Tensor[(147), uint8] */, meta[relay.Constant][14] /* ty=Tensor[(81, 6), float32] */, %var_4073, meta[relay.Constant][15] /* ty=Tensor[(224), float32] */, %248, meta[relay.Constant][16] /* ty=Tensor[(24), float32] */)
}

def @func_8220(%var_8219: Tensor[(3, 10, 4), float64]) -> (Tensor[(3, 10, 4), float64],) {
  %251 = fn (%var_8214: Tensor[(3, 10, 4), float64]) -> (Tensor[(3, 10, 4), float64],) {
    %249 = cast(%var_8214, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
    %250 = atan(%249) /* ty=Tensor[(3, 10, 4), float64] */;
    (%250,)
  };
  %251(%var_8219) /* ty=(Tensor[(3, 10, 4), float64],) */
}

def @func_1748(%var_1721: float32, %var_1722: Tensor[(13, 14, 3), float32]) -> Tensor[(13, 14, 3), float32] {
  %252 = cast(%var_1721, dtype="float32") /* ty=float32 */;
  %253 = cast(%var_1722, dtype="float32") /* ty=Tensor[(13, 14, 3), float32] */;
  floor_mod(%252, %253) /* ty=Tensor[(13, 14, 3), float32] */
}

def @func_3226() -> (Tensor[(4, 10, 6), float32],) {
  @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_3838() -> Tensor[(4, 10, 6), float32] {
  %254 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_3782() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %254() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_12148() -> Tensor[(2, 6, 3), float32] {
  %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 3), float32] */;
  sin(%255) /* ty=Tensor[(2, 6, 3), float32] */
}

def @func_5979(%var_5977: Tensor[(9, 13, 9), int16]) -> Tensor[(9, 13, 9), bool] {
  @func_5976(%var_5977) /* ty=Tensor[(9, 13, 9), bool] */
}

def @main(%var_12240: Tensor[(6, 1, 9), int8], %var_12241: Tensor[(6, 3, 9), int8]) -> Tensor[(6, 3, 9), bool] {
  %256 = cast(%var_12240, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %257 = cast(%var_12241, dtype="bool") /* ty=Tensor[(6, 3, 9), bool] */;
  not_equal(%256, %257) /* ty=Tensor[(6, 3, 9), bool] */
}

def @func_6755(%var_6753: Tensor[(1440, 1), float32], %var_6754: Tensor[(1440, 4), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float64], Tensor[(1440, 4), bool]) {
  @func_6751(%var_6753, %var_6754) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float64], Tensor[(1440, 4), bool]) */
}

def @func_9728() -> (Tensor[(1260), float32],) {
  @func_9726() /* ty=(Tensor[(1260), float32],) */
}

def @func_4478(%var_4476: Tensor[(360), int32], %var_4477: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32], Tensor[(486), float32], Tensor[(6, 9, 9), uint16]) {
  %272 = fn (%var_4434: Tensor[(360), int32], %var_4445: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32], Tensor[(486), float32], Tensor[(6, 9, 9), uint16]) {
    %258 = cast(%var_4434, dtype="int32") /* ty=Tensor[(360), int32] */;
    %259 = reshape(%258, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), int32] */;
    %260 = cast(%var_4445, dtype="float32") /* ty=Tensor[(486), float32] */;
    %261 = cast(%var_4445, dtype="float32") /* ty=Tensor[(486), float32] */;
    %262 = reshape(%260, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %263 = reshape(%261, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %264 = @func_3213(%262, %263) /* ty=Tensor[(6, 9, 9), float32] */;
    %265 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 9, 9), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
    %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%264, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %269 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
    %270 = @func_3080(%259) /* ty=Tensor[(15, 6, 4), float64] */;
    %271 = maximum(%267, %268) /* ty=Tensor[(6, 9, 9), uint16] */;
    (%269, %270, %var_4434, %var_4445, %271)
  };
  %272(%var_4476, %var_4477) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32], Tensor[(486), float32], Tensor[(6, 9, 9), uint16]) */
}

def @func_4595() -> (Tensor[(4, 10, 6), float64],) {
  @func_4593() /* ty=(Tensor[(4, 10, 6), float64],) */
}

def @func_7787(%var_7778: Tensor[(324), uint8], %var_7780: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(324), uint8], Tensor[(55, 6), float32], Tensor[(260), float64]) {
  %273 = cast(%var_7778, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %274 = cast(meta[relay.Constant][19] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %275 = cast(%var_7780, dtype="float64") /* ty=Tensor[(260), float64] */;
  %276 = reshape(%273, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %277 = reshape(%274, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %278 = reshape(%275, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %279 = @func_6973(%276, %277, %278) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) */;
  %280 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %281 = @func_6705() /* ty=Tensor[(4, 10, 6), float32] */;
  %282 = %279.7;
  (%280, %281, %282, %var_7778, meta[relay.Constant][19] /* ty=Tensor[(55, 6), float32] */, %var_7780)
}

def @func_8467() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
  @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */
}

def @func_524(%var_522: Tensor[(9, 3, 12), int8], %var_523: Tensor[(9, 3, 12), int8]) -> (Tensor[(9, 3, 12), int8],) {
  @func_520(%var_522, %var_523) /* ty=(Tensor[(9, 3, 12), int8],) */
}

def @func_3082(%var_3081: Tensor[(15, 6, 4), int32]) -> Tensor[(15, 6, 4), float64] {
  %289 = fn (%var_3057: Tensor[(15, 6, 4), int32]) -> Tensor[(15, 6, 4), float64] {
    %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 6, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 6, 4), int32] */;
    %284 = shape_of(%var_3057, dtype="int32") /* ty=Tensor[(3), int32] */;
    %285 = cast(%var_3057, dtype="int32") /* ty=Tensor[(15, 6, 4), int32] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %287 = add(%285, %286) /* ty=Tensor[(15, 6, 4), int32] */;
    %288 = cast(%287, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
    log(%288) /* ty=Tensor[(15, 6, 4), float64] */
  };
  %289(%var_3081) /* ty=Tensor[(15, 6, 4), float64] */
}

def @func_9782() -> (Tensor[(4, 10, 6), float64],) {
  %292 = fn () -> (Tensor[(4, 10, 6), float64],) {
    %290 = @func_4593() /* ty=(Tensor[(4, 10, 6), float64],) */;
    %291 = %290.0;
    (%291,)
  };
  %292() /* ty=(Tensor[(4, 10, 6), float64],) */
}

def @func_6167(%var_6166: Tensor[(5, 52), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) {
  %304 = fn (%var_6148: Tensor[(5, 52), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) {
    %293 = @func_5684() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %294 = cast(meta[relay.Constant][21] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %296 = cast(%var_6148, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
    %297 = reshape(%294, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
    %298 = reshape(%295, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
    %299 = reshape(%296, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %300 = @func_4096(%297, %298, %299) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
    %301 = %293.0;
    %302 = %300.0;
    %303 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
    (%301, %302, meta[relay.Constant][21] /* ty=Tensor[(490), float32] */, %var_6148, %303)
  };
  %304(%var_6166) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) */
}

def @func_6035(%var_6033: Tensor[(8, 14, 4), float64]) -> (Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) {
  @func_6032(%var_6033) /* ty=(Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) */
}

def @func_7716() -> (Tensor[(4, 10, 6), float64],) {
  %305 = @func_7558() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %306 = %305.0;
  (%306,)
}

def @func_4362(%var_4359: Tensor[(1, 15, 9), int64], %var_4360: Tensor[(16, 15, 9), int64], %var_4361: Tensor[(330), float32]) -> (Tensor[(16, 15, 9), int64], Tensor[(6, 5, 11), int32], Tensor[(330), float32]) {
  %314 = fn (%var_4345: Tensor[(1, 15, 9), int64], %var_4346: Tensor[(16, 15, 9), int64], %var_4353: Tensor[(330), float32]) -> (Tensor[(16, 15, 9), int64], Tensor[(6, 5, 11), int32], Tensor[(330), float32]) {
    %307 = cast(%var_4345, dtype="int64") /* ty=Tensor[(1, 15, 9), int64] */;
    %308 = cast(%var_4346, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
    %309 = cast(%var_4353, dtype="float32") /* ty=Tensor[(330), float32] */;
    %310 = reshape(%309, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
    %311 = @func_918(%310) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
    %312 = bitwise_xor(%307, %308) /* ty=Tensor[(16, 15, 9), int64] */;
    %313 = %311.0;
    (%312, %313, %var_4353)
  };
  %314(%var_4359, %var_4360, %var_4361) /* ty=(Tensor[(16, 15, 9), int64], Tensor[(6, 5, 11), int32], Tensor[(330), float32]) */
}

def @func_11479() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %317 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %315 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %316 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
    (%315, %316)
  };
  %317() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_10127() -> (Tensor[(4, 10, 6), float32],) {
  %319 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %318 = @func_3850() /* ty=Tensor[(4, 10, 6), float32] */;
    (%318,)
  };
  %319() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4028() -> Tensor[(4, 10, 6), float32] {
  @func_4026() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6310() -> Tensor[(4, 10, 6), float64] {
  %320 = @func_5156() /* ty=Tensor[(4, 10, 6), float32] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  erf(%321) /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_11776() -> (Tensor[(4, 10, 6), float32],) {
  @func_11774() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_6751(%var_6712: Tensor[(1440, 1), float32], %var_6744: Tensor[(1440, 4), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float64], Tensor[(1440, 4), bool]) {
  %322 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %323 = cast(%var_6712, dtype="float32") /* ty=Tensor[(1440, 1), float32] */;
  %324 = reshape(%323, newshape=[1440]) /* ty=Tensor[(1440), float32] */;
  %325 = @func_4187(%324) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) */;
  %326 = %325.1;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %328 = log(%327) /* ty=Tensor[(12, 15, 8), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %330 = cast(%var_6712, dtype="bool") /* ty=Tensor[(1440, 1), bool] */;
  %331 = cast(%var_6744, dtype="bool") /* ty=Tensor[(1440, 4), bool] */;
  %332 = %322.0;
  %333 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
  %334 = asin(%329) /* ty=Tensor[(12, 15, 8), float64] */;
  %335 = logical_or(%330, %331) /* ty=Tensor[(1440, 4), bool] */;
  (%332, %333, %334, %335)
}

def @func_8146() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %336 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %337 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %338 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %339 = %336.0;
  %340 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
  %341 = @func_5214() /* ty=Tensor[(4, 10, 6), float32] */;
  %342 = %337.0;
  %343 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  %344 = %338.0;
  %345 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
  (%339, %340, %341, %342, %343, %344, %345)
}

def @func_10762() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %349 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %346 = @func_9128() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %347 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
    %348 = %346.0;
    (%347, %348)
  };
  %349() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_3751(%var_3748: Tensor[(5, 52), float64], %var_3749: Tensor[(5, 52), float64], %var_3750: float32) -> (Tensor[(4, 10, 6), float64], Tensor[(324), uint8], Tensor[(5, 52), float64], Tensor[(13, 14, 3), float32], float32, Tensor[(91, 6), float32]) {
  %368 = fn (%var_3726: Tensor[(5, 52), float64], %var_3729: Tensor[(5, 52), float64], %var_3734: float32) -> (Tensor[(4, 10, 6), float64], Tensor[(324), uint8], Tensor[(5, 52), float64], Tensor[(13, 14, 3), float32], float32, Tensor[(91, 6), float32]) {
    %350 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %351 = %350.0;
    %352 = cast(%351, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %353 = cast(%var_3726, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
    %354 = reshape(%353, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %355 = @func_3186(%354) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) */;
    %356 = cast(%var_3729, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
    %357 = shape_of(%var_3726, dtype="int32") /* ty=Tensor[(2), int32] */;
    %358 = cast(%var_3726, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
    %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %360 = cast(%var_3734, dtype="float32") /* ty=float32 */;
    %361 = cast(meta[relay.Constant][22] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %362 = reshape(%360, newshape=[]) /* ty=float32 */;
    %363 = reshape(%361, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
    %364 = log(%352) /* ty=Tensor[(4, 10, 6), float64] */;
    %365 = %355.4;
    %366 = power(%358, %359) /* ty=Tensor[(5, 52), float64] */;
    %367 = @func_1748(%362, %363) /* ty=Tensor[(13, 14, 3), float32] */;
    (%364, %365, %366, %367, %var_3734, meta[relay.Constant][22] /* ty=Tensor[(91, 6), float32] */)
  };
  %368(%var_3748, %var_3749, %var_3750) /* ty=(Tensor[(4, 10, 6), float64], Tensor[(324), uint8], Tensor[(5, 52), float64], Tensor[(13, 14, 3), float32], float32, Tensor[(91, 6), float32]) */
}

def @func_5174() -> Tensor[(4, 10, 6), float32] {
  %369 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_3850() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %369() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_3783() -> Tensor[(4, 10, 6), float32] {
  %371 = fn () -> Tensor[(4, 10, 6), float32] {
    %370 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %370.0
  };
  %371() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6367() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %375 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %372 = @func_5470() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %373 = %372.0;
    %374 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
    (%373, %374)
  };
  %375() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_4746() -> (Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) {
  @func_4744() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) */
}

def @func_8661(%var_8659: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
  %376 = cast(%var_8659, dtype="float32") /* ty=Tensor[(224), float32] */;
  %377 = reshape(%376, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %378 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  %379 = @func_1716(%377) /* ty=Tensor[(14, 8, 2), bool] */;
  (%378, %379, %var_8659)
}

def @func_11022() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %383 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
    %380 = @func_6366() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %381 = %380.0;
    %382 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
    (%381, %382)
  };
  %383() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */
}

def @func_8465() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
  %384 = @func_8089() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) */;
  %385 = %384.1;
  %386 = @func_7186() /* ty=Tensor[(14, 8, 2), bool] */;
  (%385, %386)
}

def @func_4114() -> Tensor[(4, 10, 6), float32] {
  %388 = fn () -> Tensor[(4, 10, 6), float32] {
    %387 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %387.0
  };
  %388() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6973(%var_6926: Tensor[(324), uint8], %var_6927: Tensor[(330), float32], %var_6944: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) {
  %389 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %390 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %391 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(324), uint8] */;
  %392 = cast(%var_6927, dtype="float32") /* ty=Tensor[(330), float32] */;
  %393 = reshape(%389, newshape=[]) /* ty=uint64 */;
  %394 = reshape(%390, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
  %395 = reshape(%391, newshape=[324]) /* ty=Tensor[(324), uint8] */;
  %396 = reshape(%392, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
  %397 = @func_1320(%393, %394, %395, %396) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
  %398 = cast(meta[relay.Constant][25] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %399 = cast(meta[relay.Constant][25] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %400 = cast(%var_6944, dtype="float64") /* ty=Tensor[(260), float64] */;
  %401 = reshape(%398, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %402 = reshape(%399, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %403 = reshape(%400, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %404 = @func_4096(%401, %402, %403) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %405 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %406 = @func_6698() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %407 = cast(%var_6944, dtype="int32") /* ty=Tensor[(260), int32] */;
  %408 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="int32") /* ty=int32 */;
  %409 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %410 = %397.6;
  %411 = %404.4;
  %412 = %405.0;
  %413 = %406.1;
  %414 = subtract(%407, %408) /* ty=Tensor[(260), int32] */;
  (%409, %410, meta[relay.Constant][24] /* ty=Tensor[(360), uint64] */, %var_6926, %var_6927, %411, meta[relay.Constant][25] /* ty=Tensor[(490), float32] */, %412, %413, %414)
}

def @func_4137() -> Tensor[(4, 10, 6), float32] {
  @func_4135() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_312(%var_285: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) {
  %415 = cast(%var_285, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %416 = acos(%415) /* ty=Tensor[(10, 13, 2), float64] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %418 = shape_of(%var_285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%var_285, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %421 = cast(%var_285, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %422 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%416, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = floor_mod(%419, %420) /* ty=Tensor[(10, 13, 2), float64] */;
  %426 = logical_or(%423, %424) /* ty=Tensor[(10, 13, 2), bool] */;
  (%425, %426)
}

def @func_11971() -> (Tensor[(260), uint64], Tensor[(4, 10, 6), float32], Tensor[(840, 1), float64], Tensor[(360), uint64], Tensor[(1, 330), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 6, 10), int8]) {
  @func_11969() /* ty=(Tensor[(260), uint64], Tensor[(4, 10, 6), float32], Tensor[(840, 1), float64], Tensor[(360), uint64], Tensor[(1, 330), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 6, 10), int8]) */
}

def @func_9963() -> (Tensor[(4, 10, 6), float32], Tensor[(2, 2, 6), int16], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  %427 = cast(meta[relay.Constant][26] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %428 = cast(meta[relay.Constant][26] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %429 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %430 = reshape(%427, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %431 = reshape(%428, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
  %432 = reshape(%429, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %433 = @func_4096(%430, %431, %432) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
  %434 = @func_9589() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %435 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %436 = %433.8;
  %437 = %434.0;
  (%435, %436, meta[relay.Constant][26] /* ty=Tensor[(490), float32] */, meta[relay.Constant][27] /* ty=Tensor[(260), float64] */, %437)
}

def @func_9589() -> (Tensor[(4, 10, 6), float32],) {
  %438 = @func_6049() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %439 = %438.1;
  (%439,)
}

def @func_234(%var_232: uint32, %var_233: Tensor[(13, 16, 13), uint32]) -> (Tensor[(13, 16, 13), uint32],) {
  %443 = fn (%var_209: uint32, %var_210: Tensor[(13, 16, 13), uint32]) -> (Tensor[(13, 16, 13), uint32],) {
    %440 = cast(%var_209, dtype="uint32") /* ty=uint32 */;
    %441 = cast(%var_210, dtype="uint32") /* ty=Tensor[(13, 16, 13), uint32] */;
    %442 = bitwise_and(%440, %441) /* ty=Tensor[(13, 16, 13), uint32] */;
    (%442,)
  };
  %443(%var_232, %var_233) /* ty=(Tensor[(13, 16, 13), uint32],) */
}

def @func_12035() -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(4, 10, 6), float32]) {
  %453 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(4, 10, 6), float32]) {
    %444 = cast(meta[relay.Constant][28] /* ty=Tensor[(1352), int64] */, dtype="int64") /* ty=Tensor[(1352), int64] */;
    %445 = cast(meta[relay.Constant][28] /* ty=Tensor[(1352), int64] */, dtype="int64") /* ty=Tensor[(1352), int64] */;
    %446 = reshape(%444, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
    %447 = reshape(%445, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
    %448 = @func_2028(%446, %447) /* ty=(Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) */;
    %449 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %450 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
    %451 = %448.1;
    %452 = %449.0;
    (%450, %451, meta[relay.Constant][28] /* ty=Tensor[(1352), int64] */, %452)
  };
  %453() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(4, 10, 6), float32]) */
}

def @func_6032(%var_6013: Tensor[(8, 14, 4), float64]) -> (Tensor[(8, 14, 4), float64], Tensor[(8, 14, 4), float32]) {
  %454 = cast(%var_6013, dtype="float64") /* ty=Tensor[(8, 14, 4), float64] */;
  %455 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(8, 14, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 14, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 4), float64] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %458 = cast(%var_6013, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %459 = atanh(%458) /* ty=Tensor[(8, 14, 4), float32] */;
  %460 = cast(%459, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %461 = maximum(%456, %457) /* ty=Tensor[(8, 14, 4), float64] */;
  %462 = erf(%460) /* ty=Tensor[(8, 14, 4), float32] */;
  (%461, %462)
}

def @func_7821(%var_7819: Tensor[(11, 7, 14), float64], %var_7820: Tensor[(1, 52), float64]) -> (Tensor[(11, 7, 14), float64], Tensor[(4, 10, 6), float32], Tensor[(224), float32], Tensor[(1, 52), float64], Tensor[(224), float32], Tensor[(1440), float32], Tensor[(2, 720), float32]) {
  @func_7817(%var_7819, %var_7820) /* ty=(Tensor[(11, 7, 14), float64], Tensor[(4, 10, 6), float32], Tensor[(224), float32], Tensor[(1, 52), float64], Tensor[(224), float32], Tensor[(1440), float32], Tensor[(2, 720), float32]) */
}

def @func_8532() -> Tensor[(4, 10, 6), float32] {
  @func_6453() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6461() -> (Tensor[(4, 10, 6), float32],) {
  @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4555() -> Tensor[(4, 10, 6), float64] {
  @func_4553() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_9071() -> Tensor[(4, 10, 6), float32] {
  %464 = fn () -> Tensor[(4, 10, 6), float32] {
    %463 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %463.0
  };
  %464() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_1936(%var_1935: Tensor[(15, 14, 6), float64]) -> (Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) {
  %470 = fn (%var_1927: Tensor[(15, 14, 6), float64]) -> (Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) {
    %465 = cast(%var_1927, dtype="float64") /* ty=Tensor[(15, 14, 6), float64] */;
    %466 = cast(meta[relay.Constant][30] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
    %467 = reshape(%466, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
    %468 = sinh(%465) /* ty=Tensor[(15, 14, 6), float64] */;
    %469 = @func_564(%467) /* ty=Tensor[(7, 7, 3), uint8] */;
    (%468, %469, meta[relay.Constant][30] /* ty=Tensor[(147), uint8] */)
  };
  %470(%var_1935) /* ty=(Tensor[(15, 14, 6), float64], Tensor[(7, 7, 3), uint8], Tensor[(147), uint8]) */
}

def @func_4716(%var_4711: Tensor[(10, 8, 5), float64], %var_4712: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %471 = cast(%var_4712, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %472 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_4711, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%473, %474) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_8021(%var_8019: Tensor[(12, 7, 9), uint8], %var_8020: Tensor[(12, 7, 9), uint8]) -> (Tensor[(12, 7, 9), int16], Tensor[(4, 10, 6), float32]) {
  @func_8017(%var_8019, %var_8020) /* ty=(Tensor[(12, 7, 9), int16], Tensor[(4, 10, 6), float32]) */
}

def @func_4341(%var_4338: Tensor[(4, 10, 6), float32], %var_4339: Tensor[(7), float64], %var_4340: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) {
  %497 = fn (%var_4299: Tensor[(4, 10, 6), float32], %var_4309: Tensor[(7), float64], %var_4316: Tensor[(486), float32]) -> (Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) {
    %475 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
    %476 = cast(%var_4299, dtype="int8") /* ty=Tensor[(4, 10, 6), int8] */;
    %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(%475, dtype="int8") /* ty=Tensor[(4, 10, 6), int8] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %480 = cast(%var_4309, dtype="float64") /* ty=Tensor[(7), float64] */;
    %481 = reshape(%480, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %482 = @func_1568(%481) /* ty=(Tensor[(7, 1, 1), float32],) */;
    %483 = cast(%var_4316, dtype="float32") /* ty=Tensor[(486), float32] */;
    %484 = cast(%var_4316, dtype="float32") /* ty=Tensor[(486), float32] */;
    %485 = reshape(%483, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %486 = reshape(%484, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %487 = cast(meta[relay.Constant][31] /* ty=Tensor[(18, 18), int8] */, dtype="int8") /* ty=Tensor[(18, 18), int8] */;
    %488 = cast(meta[relay.Constant][31] /* ty=Tensor[(18, 18), int8] */, dtype="int8") /* ty=Tensor[(18, 18), int8] */;
    %489 = reshape(%487, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
    %490 = reshape(%488, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
    %491 = @func_520(%489, %490) /* ty=(Tensor[(9, 3, 12), int8],) */;
    %492 = bitwise_or(%478, %479) /* ty=Tensor[(4, 10, 6), int8] */;
    %493 = %482.0;
    %494 = @func_3213(%485, %486) /* ty=Tensor[(6, 9, 9), float32] */;
    %495 = %491.0;
    %496 = @func_3850() /* ty=Tensor[(4, 10, 6), float32] */;
    (%492, %493, %var_4309, %494, %var_4316, %495, meta[relay.Constant][31] /* ty=Tensor[(18, 18), int8] */, %496)
  };
  %497(%var_4338, %var_4339, %var_4340) /* ty=(Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) */
}

def @func_4726() -> Tensor[(4, 10, 6), float32] {
  @func_2901() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_564(%var_553: Tensor[(7, 7, 3), uint8]) -> Tensor[(7, 7, 3), uint8] {
  %498 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 7, 3), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 3), uint8] */;
  %499 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_553, dtype="uint8") /* ty=Tensor[(7, 7, 3), uint8] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%500, %501) /* ty=Tensor[(7, 7, 3), uint8] */
}

def @func_6905() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) {
  %502 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %503 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %504 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  %505 = %502.0;
  %506 = %503.2;
  (%504, %505, %506)
}

def @func_1570(%var_1569: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float32],) {
  %511 = fn (%var_1558: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float32],) {
    %507 = cast(%var_1558, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
    %508 = acos(%507) /* ty=Tensor[(7, 1, 1), float64] */;
    %509 = cast(%508, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
    %510 = log(%509) /* ty=Tensor[(7, 1, 1), float32] */;
    (%510,)
  };
  %511(%var_1569) /* ty=(Tensor[(7, 1, 1), float32],) */
}

def @func_10687() -> (Tensor[(4, 10, 6), float32],) {
  %512 = @func_10301() /* ty=Tensor[(4, 10, 6), float32] */;
  (%512,)
}

def @func_8757() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %516 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %513 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
    %514 = %513.0;
    %515 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
    (%514, %515)
  };
  %516() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_7407() -> Tensor[(4, 10, 6), float32] {
  %517 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_2901() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %517() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_2031(%var_2029: Tensor[(13, 13, 8), int64], %var_2030: Tensor[(13, 13, 8), int64]) -> (Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) {
  %528 = fn (%var_1983: Tensor[(13, 13, 8), int64], %var_1993: Tensor[(13, 13, 8), int64]) -> (Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) {
    %518 = cast(%var_1983, dtype="int64") /* ty=Tensor[(13, 13, 8), int64] */;
    %519 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 13, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %520 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(13, 13, 8), int64] */;
    %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %522 = cast(%var_1993, dtype="int16") /* ty=Tensor[(13, 13, 8), int16] */;
    %523 = shape_of(%var_1983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %524 = cast(%var_1983, dtype="int16") /* ty=Tensor[(13, 13, 8), int16] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %526 = add(%520, %521) /* ty=Tensor[(13, 13, 8), int64] */;
    %527 = logical_xor(%524, %525) /* ty=Tensor[(13, 13, 8), int16] */;
    (%526, %527)
  };
  %528(%var_2029, %var_2030) /* ty=(Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) */
}

def @func_5517() -> (Tensor[(4, 10, 6), float32],) {
  %529 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %530 = %529.0;
  (%530,)
}

def @func_11969() -> (Tensor[(260), uint64], Tensor[(4, 10, 6), float32], Tensor[(840, 1), float64], Tensor[(360), uint64], Tensor[(1, 330), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 6, 10), int8]) {
  %531 = @func_6905() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) */;
  %532 = @func_11839() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %533 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %534 = cast(meta[relay.Constant][34] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %535 = cast(meta[relay.Constant][34] /* ty=Tensor[(840, 1), float64] */, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %536 = cast(meta[relay.Constant][37] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %537 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %538 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %539 = reshape(%534, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %540 = reshape(%535, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), float64] */;
  %541 = reshape(%536, newshape=[]) /* ty=uint64 */;
  %542 = reshape(%537, newshape=[6, 60]) /* ty=Tensor[(6, 60), uint64] */;
  %543 = reshape(%538, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %544 = @func_10470(%539, %540, %541, %542, %543) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) */;
  %545 = %544.0;
  %546 = cast(meta[relay.Constant][37] /* ty=uint64 */, dtype="int8") /* ty=int8 */;
  %547 = cast(%545, dtype="int8") /* ty=Tensor[(14, 6, 10), int8] */;
  %548 = %531.2;
  %549 = %532.0;
  %550 = %533.0;
  %551 = minimum(%546, %547) /* ty=Tensor[(14, 6, 10), int8] */;
  (%548, %549, meta[relay.Constant][34] /* ty=Tensor[(840, 1), float64] */, meta[relay.Constant][35] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][36] /* ty=Tensor[(1, 330), float32] */, %550, %551)
}

def @func_4135() -> Tensor[(4, 10, 6), float32] {
  %552 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %552.0
}

def @func_9204() -> Tensor[(4, 10, 6), float32] {
  @func_4135() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_4393() -> (Tensor[(4, 10, 6), float32],) {
  %554 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %553 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
    (%553,)
  };
  %554() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11576(%var_11540: Tensor[(260), uint64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  %555 = cast(%var_11540, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %556 = cast(meta[relay.Constant][38] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %557 = reshape(%555, newshape=[1, 260]) /* ty=Tensor[(1, 260), uint64] */;
  %558 = reshape(%556, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %559 = @func_9401(%557, %558) /* ty=(Tensor[(14, 8, 2), bool], Tensor[(1, 260), uint64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(1200), float32], Tensor[(486), float32], Tensor[(8, 14, 4), float32]) */;
  %560 = cast(%var_11540, dtype="float64") /* ty=Tensor[(260), float64] */;
  %561 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
  %562 = %559.3;
  %563 = cos(%560) /* ty=Tensor[(260), float64] */;
  %564 = @func_10572() /* ty=Tensor[(4, 10, 6), float32] */;
  (%561, %562, meta[relay.Constant][38] /* ty=Tensor[(7), float64] */, %563, %564)
}

def @func_6050() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %569 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %565 = @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %566 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %567 = %565.0;
    %568 = %566.1;
    (%567, %568)
  };
  %569() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_7756() -> (Tensor[(4, 10, 6), float32],) {
  %572 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %570 = @func_5517() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %571 = %570.0;
    (%571,)
  };
  %572() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_3575(%var_3561: Tensor[(5, 13, 4), uint64], %var_3562: Tensor[(5, 13, 4), uint64]) -> (Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) {
  %573 = cast(%var_3562, dtype="bool") /* ty=Tensor[(5, 13, 4), bool] */;
  %574 = shape_of(%var_3561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%var_3561, dtype="bool") /* ty=Tensor[(5, 13, 4), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 112), float32] */, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
  %578 = reshape(%577, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
  %579 = greater(%575, %576) /* ty=Tensor[(5, 13, 4), bool] */;
  %580 = @func_1716(%578) /* ty=Tensor[(14, 8, 2), bool] */;
  (%579, %580, meta[relay.Constant][39] /* ty=Tensor[(2, 112), float32] */)
}

def @func_9823(%var_9806: Tensor[(400), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(4, 10, 6), float32]) {
  %581 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %582 = cast(%var_9806, dtype="float64") /* ty=Tensor[(400), float64] */;
  %583 = cast(%var_9806, dtype="float64") /* ty=Tensor[(400), float64] */;
  %584 = reshape(%582, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %585 = reshape(%583, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %586 = %581.1;
  %587 = @func_4716(%584, %585) /* ty=Tensor[(10, 8, 5), float64] */;
  %588 = @func_8684() /* ty=Tensor[(4, 10, 6), float32] */;
  (%586, %587, %var_9806, %588)
}

def @func_10862() -> Tensor[(4, 10, 6), float32] {
  @func_10860() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6453() -> Tensor[(4, 10, 6), float32] {
  @func_5173() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_10302() -> Tensor[(4, 10, 6), float32] {
  %590 = fn () -> Tensor[(4, 10, 6), float32] {
    %589 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
    %589.0
  };
  %590() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_4981(%var_4970: Tensor[(1352), int64], %var_4974: Tensor[(147, 1), uint8]) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(7, 7, 3), uint8], Tensor[(147, 1), uint8]) {
  %591 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %592 = cast(%var_4970, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %593 = cast(%var_4970, dtype="int64") /* ty=Tensor[(1352), int64] */;
  %594 = reshape(%592, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %595 = reshape(%593, newshape=[13, 13, 8]) /* ty=Tensor[(13, 13, 8), int64] */;
  %596 = @func_2028(%594, %595) /* ty=(Tensor[(13, 13, 8), int64], Tensor[(13, 13, 8), int16]) */;
  %597 = cast(%var_4974, dtype="uint8") /* ty=Tensor[(147, 1), uint8] */;
  %598 = reshape(%597, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %599 = %591.1;
  %600 = %596.1;
  %601 = @func_564(%598) /* ty=Tensor[(7, 7, 3), uint8] */;
  (%599, %600, %var_4970, %601, %var_4974)
}

def @func_5519() -> (Tensor[(4, 10, 6), float32],) {
  @func_5517() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11579(%var_11577: Tensor[(260), uint64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  @func_11576(%var_11577) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) */
}

def @func_5696() -> (Tensor[(4, 10, 6), float32],) {
  %604 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %602 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11913(%var_11911: Tensor[(1, 7, 1), float32], %var_11912: Tensor[(1, 7, 6), float32]) -> Tensor[(1, 7, 6), bool] {
  %607 = fn (%var_11904: Tensor[(1, 7, 1), float32], %var_11905: Tensor[(1, 7, 6), float32]) -> Tensor[(1, 7, 6), bool] {
    %605 = cast(%var_11904, dtype="bool") /* ty=Tensor[(1, 7, 1), bool] */;
    %606 = cast(%var_11905, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
    equal(%605, %606) /* ty=Tensor[(1, 7, 6), bool] */
  };
  %607(%var_11911, %var_11912) /* ty=Tensor[(1, 7, 6), bool] */
}

def @func_12233() -> (Tensor[(4, 10, 6), float32],) {
  %608 = @func_7894() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %609 = %608.1;
  (%609,)
}

def @func_4101(%var_4098: Tensor[(14, 5, 7), float32], %var_4099: Tensor[(14, 5, 7), float32], %var_4100: Tensor[(260), float64]) -> (Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) {
  @func_4096(%var_4098, %var_4099, %var_4100) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */
}

def @func_8090() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) {
  %617 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) {
    %610 = @func_5940() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %611 = cast(meta[relay.Constant][40] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %612 = reshape(%611, newshape=[65, 4]) /* ty=Tensor[(65, 4), float64] */;
    %613 = @func_3282(%612) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) */;
    %614 = %610.0;
    %615 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
    %616 = %613.3;
    (%614, %615, %616, meta[relay.Constant][40] /* ty=Tensor[(260), float64] */)
  };
  %617() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float64]) */
}

def @func_7186() -> Tensor[(14, 8, 2), bool] {
  %618 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %618.1
}

def @func_6706() -> Tensor[(4, 10, 6), float32] {
  %619 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_4726() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %619() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_8328() -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %620 = @func_7716() /* ty=(Tensor[(4, 10, 6), float64],) */;
  %621 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
  %622 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %623 = @func_7543() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %624 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %625 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %626 = %620.0;
  %627 = %621.0;
  %628 = %622.0;
  %629 = %623.0;
  %630 = %624.0;
  %631 = %625.1;
  (%626, %627, %628, %629, %630, %631)
}

def @func_3224() -> (Tensor[(4, 10, 6), float32],) {
  %632 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%632,)
}

def @func_3240() -> (Tensor[(4, 10, 6), float32],) {
  %633 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%633,)
}

def @func_9036(%var_9006: Tensor[(490), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(490), float32], Tensor[(1638), float32], Tensor[(486), float32]) {
  %634 = cast(%var_9006, dtype="float32") /* ty=Tensor[(490), float32] */;
  %635 = cast(meta[relay.Constant][41] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %636 = cast(meta[relay.Constant][42] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %637 = reshape(%634, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %638 = reshape(%635, newshape=[14, 117]) /* ty=Tensor[(14, 117), float32] */;
  %639 = reshape(%636, newshape=[9, 54]) /* ty=Tensor[(9, 54), float32] */;
  %640 = @func_8453(%637, %638, %639) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) */;
  %641 = @func_6705() /* ty=Tensor[(4, 10, 6), float32] */;
  %642 = %640.10;
  (%641, %642, %var_9006, meta[relay.Constant][41] /* ty=Tensor[(1638), float32] */, meta[relay.Constant][42] /* ty=Tensor[(486), float32] */)
}

def @func_11840() -> (Tensor[(4, 10, 6), float32],) {
  %644 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %643 = @func_10572() /* ty=Tensor[(4, 10, 6), float32] */;
    (%643,)
  };
  %644() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10177(%var_10176: Tensor[(1, 2, 4), int16]) -> (Tensor[(1, 2, 4), bool],) {
  %648 = fn (%var_10162: Tensor[(1, 2, 4), int16]) -> (Tensor[(1, 2, 4), bool],) {
    %645 = cast(meta[relay.Constant][43] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %646 = cast(%var_10162, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
    %647 = greater(%645, %646) /* ty=Tensor[(1, 2, 4), bool] */;
    (%647,)
  };
  %648(%var_10176) /* ty=(Tensor[(1, 2, 4), bool],) */
}

def @func_4026() -> Tensor[(4, 10, 6), float32] {
  %649 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %649.0
}

def @func_2901() -> Tensor[(4, 10, 6), float32] {
  %650 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  log10(%650) /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_3299() -> (Tensor[(4, 10, 6), float32],) {
  %651 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%651,)
}

def @func_11046() -> Tensor[(4, 10, 6), float32] {
  %653 = fn () -> Tensor[(4, 10, 6), float32] {
    %652 = @func_9462() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %652.3
  };
  %653() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7262() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %654 = @func_7031() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %655 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %656 = %654.2;
  %657 = %655.0;
  (%656, %657)
}

def @func_5874() -> (Tensor[(4, 10, 6), float32],) {
  @func_5872() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4167() -> Tensor[(4, 10, 6), float32] {
  @func_4165() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_6182(%var_6180: Tensor[(12, 5, 1), int64]) -> (Tensor[(12, 5, 13), bool],) {
  @func_6179(%var_6180) /* ty=(Tensor[(12, 5, 13), bool],) */
}

def @func_9147() -> (Tensor[(4, 10, 6), float32],) {
  %659 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %658 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    (%658,)
  };
  %659() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_9129() -> (Tensor[(4, 10, 6), float32],) {
  %662 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %660 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %661 = %660.0;
    (%661,)
  };
  %662() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10898() -> Tensor[(4, 10, 6), float64] {
  %664 = fn () -> Tensor[(4, 10, 6), float64] {
    %663 = @func_7716() /* ty=(Tensor[(4, 10, 6), float64],) */;
    %663.0
  };
  %664() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_5157() -> Tensor[(4, 10, 6), float32] {
  %666 = fn () -> Tensor[(4, 10, 6), float32] {
    %665 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %665.1
  };
  %666() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7894() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %667 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %668 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  %669 = %667.0;
  (%668, %669)
}

def @func_6455() -> Tensor[(4, 10, 6), float32] {
  @func_6453() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_11889() -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %676 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
    %670 = cast(meta[relay.Constant][45] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %671 = cast(meta[relay.Constant][45] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %672 = reshape(%670, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %673 = reshape(%671, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %674 = @func_5214() /* ty=Tensor[(4, 10, 6), float32] */;
    %675 = @func_4716(%672, %673) /* ty=Tensor[(10, 8, 5), float64] */;
    (%674, %675, meta[relay.Constant][45] /* ty=Tensor[(400), float64] */)
  };
  %676() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */
}

def @func_5941() -> (Tensor[(4, 10, 6), float32],) {
  %679 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %677 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %678 = %677.0;
    (%678,)
  };
  %679() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_5412() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  @func_5410() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */
}

def @func_8534() -> Tensor[(4, 10, 6), float32] {
  @func_8532() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_11116() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %680 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %681 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
  %682 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %683 = %680.0;
  %684 = %681.0;
  %685 = %682.0;
  %686 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  (%683, %684, %685, %686)
}

def @func_7677() -> (Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) {
  @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */
}

def @func_6216() -> (Tensor[(4, 10, 6), float32],) {
  %688 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %687 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
    (%687,)
  };
  %688() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4744() -> (Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) {
  %689 = cast(meta[relay.Constant][46] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %690 = reshape(%689, newshape=[65, 4]) /* ty=Tensor[(65, 4), float64] */;
  %691 = @func_3282(%690) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) */;
  %692 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  %693 = %691.2;
  (%692, %693, meta[relay.Constant][46] /* ty=Tensor[(65, 4), float64] */)
}

def @func_10672() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %694 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %695 = @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %696 = %694.0;
  %697 = %695.1;
  (%696, %697)
}

def @func_11705(%var_11702: Tensor[(2, 5, 3), float64], %var_11703: Tensor[(2, 5, 3), float64], %var_11704: Tensor[(330), float32]) -> (Tensor[(2, 5, 3), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(330), float32]) {
  %708 = fn (%var_11683: Tensor[(2, 5, 3), float64], %var_11684: Tensor[(2, 5, 3), float64], %var_11693: Tensor[(330), float32]) -> (Tensor[(2, 5, 3), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(330), float32]) {
    %698 = cast(%var_11684, dtype="float64") /* ty=Tensor[(2, 5, 3), float64] */;
    %699 = shape_of(%var_11683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%var_11683, dtype="float64") /* ty=Tensor[(2, 5, 3), float64] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %702 = cast(%var_11693, dtype="float32") /* ty=Tensor[(330), float32] */;
    %703 = reshape(%702, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %704 = @func_4894(%703) /* ty=(Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %705 = power(%700, %701) /* ty=Tensor[(2, 5, 3), float64] */;
    %706 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %707 = %704.6;
    (%705, %706, %707, %var_11693)
  };
  %708(%var_11702, %var_11703, %var_11704) /* ty=(Tensor[(2, 5, 3), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(330), float32]) */
}

def @func_6312() -> Tensor[(4, 10, 6), float64] {
  @func_6310() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_9598() -> Tensor[(4, 10, 6), float64] {
  %709 = fn () -> Tensor[(4, 10, 6), float64] {
    @func_4553() /* ty=Tensor[(4, 10, 6), float64] */
  };
  %709() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_11763() -> (Tensor[(4, 10, 6), float32],) {
  %712 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %710 = @func_8756() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %711 = %710.0;
    (%711,)
  };
  %712() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10860() -> Tensor[(4, 10, 6), float32] {
  @func_5156() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_11008(%var_11007: Tensor[(360), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(3, 10, 12), float64], Tensor[(360), float64]) {
  %721 = fn (%var_10998: Tensor[(360), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(3, 10, 12), float64], Tensor[(360), float64]) {
    %713 = @func_6215() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %714 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %715 = cast(%var_10998, dtype="float64") /* ty=Tensor[(360), float64] */;
    %716 = reshape(%715, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
    %717 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
    %718 = %713.0;
    %719 = %714.0;
    %720 = @func_5807(%716) /* ty=Tensor[(3, 10, 12), float64] */;
    (%717, %718, %719, %720, %var_10998)
  };
  %721(%var_11007) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(3, 10, 12), float64], Tensor[(360), float64]) */
}

def @func_7929() -> (Tensor[(4, 10, 6), float32],) {
  %723 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %722 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
    (%722,)
  };
  %723() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_10292(%var_10291: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float32]) {
  %732 = fn (%var_10283: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float32]) {
    %724 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %725 = cast(%var_10283, dtype="float64") /* ty=Tensor[(260), float64] */;
    %726 = reshape(%725, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
    %727 = @func_6165(%726) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(5, 52), float64], Tensor[(4, 10, 6), float32]) */;
    %728 = cast(%var_10283, dtype="float32") /* ty=Tensor[(260), float32] */;
    %729 = %724.0;
    %730 = %727.0;
    %731 = erf(%728) /* ty=Tensor[(260), float32] */;
    (%729, %730, %731)
  };
  %732(%var_10291) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), float32]) */
}

def @func_8519() -> Tensor[(4, 10, 6), float32] {
  @func_8517() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7125(%var_7123: Tensor[(7), float64], %var_7124: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) {
  @func_7121(%var_7123, %var_7124) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) */
}

def @func_9965() -> (Tensor[(4, 10, 6), float32], Tensor[(2, 2, 6), int16], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) {
  @func_9963() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(2, 2, 6), int16], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float32]) */
}

def @func_4003(%var_4002: uint32) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
  %740 = fn (%var_3987: uint32) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
    %733 = cast(%var_3987, dtype="uint32") /* ty=uint32 */;
    %734 = cast(meta[relay.Constant][47] /* ty=Tensor[(2704), uint32] */, dtype="uint32") /* ty=Tensor[(2704), uint32] */;
    %735 = reshape(%733, newshape=[]) /* ty=uint32 */;
    %736 = reshape(%734, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), uint32] */;
    %737 = @func_231(%735, %736) /* ty=(Tensor[(13, 16, 13), uint32],) */;
    %738 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
    %739 = %737.0;
    (%738, %739, %var_3987, meta[relay.Constant][47] /* ty=Tensor[(2704), uint32] */)
  };
  %740(%var_4002) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */
}

def @func_4720(%var_4718: Tensor[(10, 8, 5), float64], %var_4719: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  @func_4716(%var_4718, %var_4719) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_10191() -> (Tensor[(4, 10, 6), float32],) {
  @func_10189() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11808() -> Tensor[(4, 10, 6), float64] {
  %741 = fn () -> Tensor[(4, 10, 6), float64] {
    @func_6310() /* ty=Tensor[(4, 10, 6), float64] */
  };
  %741() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_4897(%var_4895: Tensor[(330), float32]) -> (Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_4894(%var_4895) /* ty=(Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_6196() -> (Tensor[(4, 10, 6), float32],) {
  %743 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %742 = @func_4726() /* ty=Tensor[(4, 10, 6), float32] */;
    (%742,)
  };
  %743() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_6179(%var_6171: Tensor[(12, 5, 1), int64]) -> (Tensor[(12, 5, 13), bool],) {
  %744 = cast(%var_6171, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %745 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 5, 13), int64] */, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
  %746 = equal(%744, %745) /* ty=Tensor[(12, 5, 13), bool] */;
  (%746,)
}

def @func_3188(%var_3187: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) {
  %762 = fn (%var_3181: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) {
    %747 = cast(meta[relay.Constant][49] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %748 = cast(meta[relay.Constant][50] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %749 = cast(meta[relay.Constant][51] /* ty=Tensor[(324), uint8] */, dtype="uint8") /* ty=Tensor[(324), uint8] */;
    %750 = cast(meta[relay.Constant][52] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %751 = reshape(%747, newshape=[]) /* ty=uint64 */;
    %752 = reshape(%748, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
    %753 = reshape(%749, newshape=[324]) /* ty=Tensor[(324), uint8] */;
    %754 = reshape(%750, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
    %755 = @func_1320(%751, %752, %753, %754) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
    %756 = cast(%var_3181, dtype="float64") /* ty=Tensor[(260), float64] */;
    %757 = reshape(%756, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %758 = @func_312(%757) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
    %759 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %760 = %755.1;
    %761 = %758.1;
    (%759, %760, meta[relay.Constant][49] /* ty=uint64 */, meta[relay.Constant][50] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][51] /* ty=Tensor[(324), uint8] */, meta[relay.Constant][52] /* ty=Tensor[(330), float32] */, %761, %var_3181)
  };
  %762(%var_3187) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(324), uint8], uint64, Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(10, 13, 2), bool], Tensor[(260), float64]) */
}

def @func_10476(%var_10471: Tensor[(14, 6, 10), float64], %var_10472: Tensor[(14, 6, 10), float64], %var_10473: uint64, %var_10474: Tensor[(6, 60), uint64], %var_10475: Tensor[(330), float32]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) {
  %778 = fn (%var_10447: Tensor[(14, 6, 10), float64], %var_10448: Tensor[(14, 6, 10), float64], %var_10456: uint64, %var_10457: Tensor[(6, 60), uint64], %var_10459: Tensor[(330), float32]) -> (Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) {
    %763 = cast(%var_10448, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %764 = shape_of(%var_10447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %765 = cast(%var_10447, dtype="float64") /* ty=Tensor[(14, 6, 10), float64] */;
    %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %767 = cast(%var_10456, dtype="uint64") /* ty=uint64 */;
    %768 = cast(%var_10457, dtype="uint64") /* ty=Tensor[(6, 60), uint64] */;
    %769 = cast(meta[relay.Constant][53] /* ty=Tensor[(324), uint8] */, dtype="uint8") /* ty=Tensor[(324), uint8] */;
    %770 = cast(%var_10459, dtype="float32") /* ty=Tensor[(330), float32] */;
    %771 = reshape(%767, newshape=[]) /* ty=uint64 */;
    %772 = reshape(%768, newshape=[10, 3, 12]) /* ty=Tensor[(10, 3, 12), uint64] */;
    %773 = reshape(%769, newshape=[324]) /* ty=Tensor[(324), uint8] */;
    %774 = reshape(%770, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
    %775 = @func_1320(%771, %772, %773, %774) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */;
    %776 = power(%765, %766) /* ty=Tensor[(14, 6, 10), float64] */;
    %777 = %775.0;
    (%776, %777, %var_10456, %var_10457, meta[relay.Constant][53] /* ty=Tensor[(324), uint8] */, %var_10459)
  };
  %778(%var_10471, %var_10472, %var_10473, %var_10474, %var_10475) /* ty=(Tensor[(14, 6, 10), float64], Tensor[(9, 9, 4), bool], uint64, Tensor[(6, 60), uint64], Tensor[(324), uint8], Tensor[(330), float32]) */
}

def @func_5216() -> Tensor[(4, 10, 6), float32] {
  @func_5214() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_12235() -> (Tensor[(4, 10, 6), float32],) {
  @func_12233() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_5810(%var_5808: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
  @func_5807(%var_5808) /* ty=Tensor[(3, 10, 12), float64] */
}

def @func_9432(%var_9430: Tensor[(11, 6, 2), uint16], %var_9431: Tensor[(11, 6, 2), uint16]) -> (Tensor[(11, 6, 2), uint16], Tensor[(11, 6, 2), float64]) {
  %786 = fn (%var_9422: Tensor[(11, 6, 2), uint16], %var_9423: Tensor[(11, 6, 2), uint16]) -> (Tensor[(11, 6, 2), uint16], Tensor[(11, 6, 2), float64]) {
    %779 = cast(%var_9423, dtype="uint16") /* ty=Tensor[(11, 6, 2), uint16] */;
    %780 = shape_of(%var_9422, dtype="int32") /* ty=Tensor[(3), int32] */;
    %781 = cast(%var_9422, dtype="uint16") /* ty=Tensor[(11, 6, 2), uint16] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %783 = cast(%var_9422, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
    %784 = maximum(%781, %782) /* ty=Tensor[(11, 6, 2), uint16] */;
    %785 = rsqrt(%783) /* ty=Tensor[(11, 6, 2), float64] */;
    (%784, %785)
  };
  %786(%var_9430, %var_9431) /* ty=(Tensor[(11, 6, 2), uint16], Tensor[(11, 6, 2), float64]) */
}

def @func_4728() -> Tensor[(4, 10, 6), float32] {
  @func_4726() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7494() -> Tensor[(4, 10, 6), float64] {
  %787 = fn () -> Tensor[(4, 10, 6), float64] {
    @func_4553() /* ty=Tensor[(4, 10, 6), float64] */
  };
  %787() /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_10780() -> (Tensor[(4, 10, 6), float32],) {
  %788 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
  (%788,)
}

def @func_3301() -> (Tensor[(4, 10, 6), float32],) {
  @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_11118() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_11116() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_3851() -> Tensor[(4, 10, 6), float32] {
  %789 = fn () -> Tensor[(4, 10, 6), float32] {
    @func_3767() /* ty=Tensor[(4, 10, 6), float32] */
  };
  %789() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_1325(%var_1321: uint64, %var_1322: Tensor[(10, 3, 12), uint64], %var_1323: Tensor[(324), uint8], %var_1324: Tensor[(55, 6), float32]) -> (Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) {
  %818 = fn (%var_1258: uint64, %var_1259: Tensor[(10, 3, 12), uint64], %var_1280: Tensor[(324), uint8], %var_1313: Tensor[(55, 6), float32]) -> (Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) {
    %790 = cast(%var_1280, dtype="uint8") /* ty=Tensor[(324), uint8] */;
    %791 = reshape(%790, newshape=[9, 9, 4]) /* ty=Tensor[(9, 9, 4), uint8] */;
    %792 = @func_1176(%791) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) */;
    %793 = cast(%var_1258, dtype="bool") /* ty=bool */;
    %794 = cast(%var_1259, dtype="bool") /* ty=Tensor[(10, 3, 12), bool] */;
    %795 = less(%793, %794) /* ty=Tensor[(10, 3, 12), bool] */;
    %796 = cast(%795, dtype="int16") /* ty=Tensor[(10, 3, 12), int16] */;
    %797 = shape_of(%var_1259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %798 = cast(%var_1259, dtype="int16") /* ty=Tensor[(10, 3, 12), int16] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %800 = cast(%var_1280, dtype="int8") /* ty=Tensor[(324), int8] */;
    %801 = %792.0;
    %802 = cast(%801, dtype="int8") /* ty=Tensor[(9, 9, 4), int8] */;
    %803 = reshape(%800, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
    %804 = reshape(%802, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), int8] */;
    %805 = @func_520(%803, %804) /* ty=(Tensor[(9, 3, 12), int8],) */;
    %806 = cast(meta[relay.Constant][54] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %807 = reshape(%806, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %808 = cast(%var_1313, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
    %809 = reshape(%808, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
    %810 = @func_918(%809) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
    %811 = cast(meta[relay.Constant][54] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %812 = reshape(%811, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %813 = right_shift(%798, %799) /* ty=Tensor[(10, 3, 12), int16] */;
    %814 = %805.0;
    %815 = @func_1005(%807) /* ty=Tensor[(2, 2, 6), int16] */;
    %816 = %810.4;
    %817 = @func_1005(%812) /* ty=Tensor[(2, 2, 6), int16] */;
    (%801, %var_1280, %813, %814, %815, meta[relay.Constant][54] /* ty=Tensor[(24), float32] */, %816, %var_1313, %817)
  };
  %818(%var_1321, %var_1322, %var_1323, %var_1324) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(324), uint8], Tensor[(10, 3, 12), int16], Tensor[(9, 3, 12), int8], Tensor[(2, 2, 6), int16], Tensor[(24), float32], Tensor[(2704), uint32], Tensor[(55, 6), float32], Tensor[(2, 2, 6), int16]) */
}

def @func_7357(%var_7355: Tensor[(11, 4, 3), int64], %var_7356: Tensor[(11, 4, 3), int64]) -> (Tensor[(11, 4, 3), bool], Tensor[(11, 4, 3), float32]) {
  @func_7353(%var_7355, %var_7356) /* ty=(Tensor[(11, 4, 3), bool], Tensor[(11, 4, 3), float32]) */
}

def @func_9278() -> (Tensor[(4, 10, 6), float64],) {
  %820 = fn () -> (Tensor[(4, 10, 6), float64],) {
    %819 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
    (%819,)
  };
  %820() /* ty=(Tensor[(4, 10, 6), float64],) */
}

def @func_4189(%var_4188: Tensor[(1440), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) {
  %828 = fn (%var_4184: Tensor[(1440), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) {
    %821 = cast(%var_4184, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %822 = cast(%var_4184, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %823 = reshape(%821, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float32] */;
    %824 = reshape(%822, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float32] */;
    %825 = @func_3822(%823, %824) /* ty=(Tensor[(12, 15, 8), float32],) */;
    %826 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
    %827 = %825.0;
    (%826, %827, %var_4184)
  };
  %828(%var_4188) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(12, 15, 8), float32], Tensor[(1440), float32]) */
}

def @func_7559() -> (Tensor[(4, 10, 6), float64],) {
  %831 = fn () -> (Tensor[(4, 10, 6), float64],) {
    %829 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
    %830 = %829.1;
    (%830,)
  };
  %831() /* ty=(Tensor[(4, 10, 6), float64],) */
}

def @func_10674() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_10672() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_9650() -> (Tensor[(4, 10, 6), float32],) {
  %834 = fn () -> (Tensor[(4, 10, 6), float32],) {
    %832 = @func_5312() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %833 = %832.2;
    (%833,)
  };
  %834() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_4894(%var_4815: Tensor[(330), float32]) -> (Tensor[(65, 4), float64], Tensor[(10, 8, 8), float32], Tensor[(80), float32], Tensor[(640), float32], Tensor[(2704), uint32], Tensor[(330), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %835 = @func_4744() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(65, 4), float64], Tensor[(65, 4), float64]) */;
  %836 = cast(meta[relay.Constant][55] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %837 = cast(meta[relay.Constant][56] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %838 = reshape(%836, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float32] */;
  %839 = reshape(%837, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), float32] */;
  %840 = cast(%var_4815, dtype="float32") /* ty=Tensor[(330), float32] */;
  %841 = reshape(%840, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float32] */;
  %842 = @func_918(%841) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */;
  %843 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %845 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %846 = %835.1;
  %847 = @func_2863(%838, %839) /* ty=Tensor[(10, 8, 8), float32] */;
  %848 = %842.4;
  %849 = acosh(%844) /* ty=Tensor[(4, 10, 6), float32] */;
  %850 = @func_3782() /* ty=Tensor[(4, 10, 6), float32] */;
  %851 = %845.0;
  (%846, %847, meta[relay.Constant][55] /* ty=Tensor[(80), float32] */, meta[relay.Constant][56] /* ty=Tensor[(640), float32] */, %848, %var_4815, %849, %850, %851)
}

def @func_11082() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %855 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %852 = @func_11038() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %853 = %852.0;
    %854 = @func_7406() /* ty=Tensor[(4, 10, 6), float32] */;
    (%853, %854)
  };
  %855() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_3768() -> Tensor[(4, 10, 6), float32] {
  %857 = fn () -> Tensor[(4, 10, 6), float32] {
    %856 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %856.0
  };
  %857() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7843() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %860 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %858 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
    %859 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    (%858, %859)
  };
  %860() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_5314() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_5312() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_6408() -> (Tensor[(4, 10, 6), float32],) {
  %861 = @func_5947() /* ty=Tensor[(4, 10, 6), float32] */;
  (%861,)
}

def @func_5773() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %865 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
    %862 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %863 = %862.0;
    %864 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
    (%863, %864)
  };
  %865() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */
}

def @func_10689() -> (Tensor[(4, 10, 6), float32],) {
  @func_10687() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_5948() -> Tensor[(4, 10, 6), float32] {
  %867 = fn () -> Tensor[(4, 10, 6), float32] {
    %866 = @func_5410() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
    %866.0
  };
  %867() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_7353(%var_7335: Tensor[(11, 4, 3), int64], %var_7336: Tensor[(11, 4, 3), int64]) -> (Tensor[(11, 4, 3), bool], Tensor[(11, 4, 3), float32]) {
  %868 = cast(%var_7336, dtype="bool") /* ty=Tensor[(11, 4, 3), bool] */;
  %869 = shape_of(%var_7335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%var_7335, dtype="bool") /* ty=Tensor[(11, 4, 3), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = cast(%var_7336, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
  %873 = shape_of(%var_7335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_7335, dtype="float32") /* ty=Tensor[(11, 4, 3), float32] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %876 = less_equal(%870, %871) /* ty=Tensor[(11, 4, 3), bool] */;
  %877 = mod(%874, %875) /* ty=Tensor[(11, 4, 3), float32] */;
  (%876, %877)
}

def @func_6636() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_6634() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_9463() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %885 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %878 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %879 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %880 = @func_9128() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %881 = %878.0;
    %882 = @func_8532() /* ty=Tensor[(4, 10, 6), float32] */;
    %883 = %879.0;
    %884 = %880.0;
    (%881, %882, %883, %884)
  };
  %885() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_3579(%var_3577: Tensor[(5, 13, 4), uint64], %var_3578: Tensor[(5, 13, 4), uint64]) -> (Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) {
  @func_3575(%var_3577, %var_3578) /* ty=(Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) */
}

def @func_5312() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %886 = @func_3837() /* ty=Tensor[(4, 10, 6), float32] */;
  %887 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  %888 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%886, %887, %888)
}

def @func_8612(%var_8611: Tensor[(14, 8, 2), bool]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
  %898 = fn (%var_8595: Tensor[(14, 8, 2), bool]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) {
    %889 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %890 = @func_8465() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */;
    %891 = %890.1;
    %892 = cast(%var_8595, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%891, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %896 = %889.0;
    %897 = not_equal(%894, %895) /* ty=Tensor[(14, 8, 2), bool] */;
    (%896, %897)
  };
  %898(%var_8611) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool]) */
}

def @func_921(%var_919: Tensor[(6, 5, 11), float32]) -> (Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
  @func_918(%var_919) /* ty=(Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) */
}

def @func_4593() -> (Tensor[(4, 10, 6), float64],) {
  %899 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  (%899,)
}

def @func_7264() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_7262() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_1752(%var_1750: float32, %var_1751: Tensor[(13, 14, 3), float32]) -> Tensor[(13, 14, 3), float32] {
  @func_1748(%var_1750, %var_1751) /* ty=Tensor[(13, 14, 3), float32] */
}

def @func_5214() -> Tensor[(4, 10, 6), float32] {
  %900 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %900.0
}

def @func_6410() -> (Tensor[(4, 10, 6), float32],) {
  @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_2336(%var_2333: Tensor[(15, 8, 10), float32], %var_2334: Tensor[(15, 8, 10), float32], %var_2335: Tensor[(15, 8, 10), float32]) -> (Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) {
  @func_2331(%var_2333, %var_2334, %var_2335) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */
}

def @func_7188() -> Tensor[(14, 8, 2), bool] {
  @func_7186() /* ty=Tensor[(14, 8, 2), bool] */
}

def @func_8017(%var_7999: Tensor[(12, 7, 9), uint8], %var_8000: Tensor[(12, 7, 9), uint8]) -> (Tensor[(12, 7, 9), int16], Tensor[(4, 10, 6), float32]) {
  %901 = cast(%var_8000, dtype="uint8") /* ty=Tensor[(12, 7, 9), uint8] */;
  %902 = shape_of(%var_7999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_7999, dtype="uint8") /* ty=Tensor[(12, 7, 9), uint8] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %905 = right_shift(%903, %904) /* ty=Tensor[(12, 7, 9), uint8] */;
  %906 = cast(%905, dtype="int16") /* ty=Tensor[(12, 7, 9), int16] */;
  %907 = shape_of(%var_8000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_8000, dtype="int16") /* ty=Tensor[(12, 7, 9), int16] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %910 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %911 = subtract(%908, %909) /* ty=Tensor[(12, 7, 9), int16] */;
  %912 = %910.0;
  (%911, %912)
}

def @func_567(%var_565: Tensor[(7, 7, 3), uint8]) -> Tensor[(7, 7, 3), uint8] {
  @func_564(%var_565) /* ty=Tensor[(7, 7, 3), uint8] */
}

def @func_4272(%var_4270: Tensor[(147), uint8], %var_4271: Tensor[(4, 56), float32]) -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), int64], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(260), float64], Tensor[(4, 56), float32]) {
  %933 = fn (%var_4260: Tensor[(147), uint8], %var_4263: Tensor[(4, 56), float32]) -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), int64], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(260), float64], Tensor[(4, 56), float32]) {
    %913 = @func_3299() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %914 = %913.0;
    %915 = cast(%914, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %916 = cast(%914, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %917 = cast(meta[relay.Constant][57] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %918 = cast(%var_4260, dtype="uint8") /* ty=Tensor[(147), uint8] */;
    %919 = cast(meta[relay.Constant][58] /* ty=Tensor[(27, 18), float32] */, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
    %920 = cast(%914, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %921 = cast(meta[relay.Constant][59] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %922 = cast(%var_4263, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
    %923 = reshape(%916, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
    %924 = reshape(%917, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
    %925 = reshape(%918, newshape=[147]) /* ty=Tensor[(147), uint8] */;
    %926 = reshape(%919, newshape=[486]) /* ty=Tensor[(486), float32] */;
    %927 = reshape(%920, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
    %928 = reshape(%921, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %929 = reshape(%922, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %930 = @func_3529(%923, %924, %925, %926, %927, %928, %929) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
    %931 = atanh(%915) /* ty=Tensor[(4, 10, 6), float64] */;
    %932 = %930.7;
    (%931, %932, meta[relay.Constant][57] /* ty=Tensor[(1200), float32] */, %var_4260, meta[relay.Constant][58] /* ty=Tensor[(27, 18), float32] */, meta[relay.Constant][59] /* ty=Tensor[(260), float64] */, %var_4263)
  };
  %933(%var_4270, %var_4271) /* ty=(Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), int64], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(260), float64], Tensor[(4, 56), float32]) */
}

def @func_3282(%var_3275: Tensor[(65, 4), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) {
  %934 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %935 = cast(%var_3275, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %936 = reshape(%935, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %937 = @func_312(%936) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
  %938 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %939 = %934.0;
  %940 = %937.0;
  %941 = %938.0;
  (%939, %940, %var_3275, %941)
}

def @func_7031() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %942 = @func_6408() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %943 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %944 = %942.0;
  %945 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  %946 = %943.0;
  (%944, %945, %946)
}

def @func_315(%var_313: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) {
  @func_312(%var_313) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */
}

def @func_9879() -> Tensor[(448), float64] {
  %947 = @func_7675() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float64], Tensor[(15, 14, 6), float64], Tensor[(1260), float32]) */;
  %947.2
}

def @func_5976(%var_5962: Tensor[(9, 13, 9), int16]) -> Tensor[(9, 13, 9), bool] {
  %948 = cast(%var_5962, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %949 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(9, 13, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 13, 9), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%950, %951) /* ty=Tensor[(9, 13, 9), bool] */
}

def @func_3285(%var_3283: Tensor[(65, 4), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) {
  @func_3282(%var_3283) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 13, 2), float64], Tensor[(65, 4), float64], Tensor[(4, 10, 6), float32]) */
}

def @func_11464() -> Tensor[(4, 10, 6), float32] {
  %953 = fn () -> Tensor[(4, 10, 6), float32] {
    %952 = @func_7928() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %952.0
  };
  %953() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_2331(%var_2313: Tensor[(15, 8, 10), float32], %var_2314: Tensor[(15, 8, 10), float32], %var_2318: Tensor[(15, 8, 10), float32]) -> (Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) {
  %954 = cast(%var_2314, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %955 = shape_of(%var_2313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(%var_2313, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %958 = cast(%var_2318, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %959 = shape_of(%var_2314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_2314, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %962 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 21), uint8] */, dtype="uint8") /* ty=Tensor[(7, 21), uint8] */;
  %963 = reshape(%962, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint8] */;
  %964 = less_equal(%956, %957) /* ty=Tensor[(15, 8, 10), bool] */;
  %965 = mod(%960, %961) /* ty=Tensor[(15, 8, 10), float32] */;
  %966 = @func_564(%963) /* ty=Tensor[(7, 7, 3), uint8] */;
  (%964, %965, %966, meta[relay.Constant][61] /* ty=Tensor[(7, 21), uint8] */)
}

def @func_6634() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %967 = @func_6195() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %968 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  %969 = %967.0;
  (%968, %969)
}

def @func_8457(%var_8454: Tensor[(490), float32], %var_8455: Tensor[(14, 117), float32], %var_8456: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
  %1004 = fn (%var_8374: Tensor[(490), float32], %var_8389: Tensor[(14, 117), float32], %var_8418: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) {
    %970 = @func_6459() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %971 = cast(%var_8374, dtype="float32") /* ty=Tensor[(490), float32] */;
    %972 = cast(%var_8374, dtype="float32") /* ty=Tensor[(490), float32] */;
    %973 = cast(meta[relay.Constant][62] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %974 = reshape(%971, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
    %975 = reshape(%972, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), float32] */;
    %976 = reshape(%973, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %977 = @func_4096(%974, %975, %976) /* ty=(Tensor[(14, 5, 7), float64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(81, 6), float32], Tensor[(260), float64], Tensor[(224), float32], Tensor[(2, 2, 6), int16], Tensor[(24), float32]) */;
    %978 = cast(%var_8389, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
    %979 = reshape(%978, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %980 = @func_5579(%979) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) */;
    %981 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %982 = %970.0;
    %983 = cast(%982, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %984 = cast(meta[relay.Constant][63] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
    %985 = cast(%var_8418, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
    %986 = reshape(%983, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
    %987 = reshape(%984, newshape=[7]) /* ty=Tensor[(7), float64] */;
    %988 = reshape(%985, newshape=[486]) /* ty=Tensor[(486), float32] */;
    %989 = @func_4337(%986, %987, %988) /* ty=(Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) */;
    %990 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 54), float32] */, dtype="bool") /* ty=Tensor[(9, 54), bool] */;
    %991 = shape_of(%var_8418, dtype="int32") /* ty=Tensor[(2), int32] */;
    %992 = cast(%var_8418, dtype="bool") /* ty=Tensor[(9, 54), bool] */;
    %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %994 = cast(meta[relay.Constant][65] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %995 = reshape(%994, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
    %996 = %977.0;
    %997 = @func_6310() /* ty=Tensor[(4, 10, 6), float64] */;
    %998 = @func_5118() /* ty=Tensor[(4, 10, 6), float32] */;
    %999 = %980.1;
    %1000 = %981.0;
    %1001 = %989.3;
    %1002 = not_equal(%992, %993) /* ty=Tensor[(9, 54), bool] */;
    %1003 = @func_1716(%995) /* ty=Tensor[(14, 8, 2), bool] */;
    (%982, %996, %var_8374, meta[relay.Constant][62] /* ty=Tensor[(260), float64] */, %997, %998, %999, %var_8389, %1000, %1001, meta[relay.Constant][63] /* ty=Tensor[(7), float64] */, %1002, %1003, meta[relay.Constant][65] /* ty=Tensor[(224), float32] */)
  };
  %1004(%var_8454, %var_8455, %var_8456) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 5, 7), float64], Tensor[(490), float32], Tensor[(260), float64], Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(14, 117), float32], Tensor[(4, 10, 6), float32], Tensor[(6, 9, 9), float32], Tensor[(7), float64], Tensor[(9, 54), bool], Tensor[(14, 8, 2), bool], Tensor[(224), float32]) */
}

def @func_11216() -> (Tensor[(4, 10, 6), float32],) {
  %1005 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1005,)
}

def @func_5410() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %1006 = @func_4553() /* ty=Tensor[(4, 10, 6), float64] */;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1008 = cosh(%1007) /* ty=Tensor[(4, 10, 6), float64] */;
  %1009 = cast(%1006, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1008, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1013 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  %1014 = floor_divide(%1011, %1012) /* ty=Tensor[(4, 10, 6), float64] */;
  (%1013, %1014)
}

def @func_3825(%var_3823: Tensor[(12, 15, 8), float32], %var_3824: Tensor[(12, 15, 8), float32]) -> (Tensor[(12, 15, 8), float32],) {
  %1020 = fn (%var_3815: Tensor[(12, 15, 8), float32], %var_3816: Tensor[(12, 15, 8), float32]) -> (Tensor[(12, 15, 8), float32],) {
    %1015 = cast(%var_3816, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
    %1016 = shape_of(%var_3815, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1017 = cast(%var_3815, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
    %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1019 = divide(%1017, %1018) /* ty=Tensor[(12, 15, 8), float32] */;
    (%1019,)
  };
  %1020(%var_3823, %var_3824) /* ty=(Tensor[(12, 15, 8), float32],) */
}

def @func_10574() -> Tensor[(4, 10, 6), float32] {
  @func_10572() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_8796(%var_8793: Tensor[(7, 1), float64]) -> (Tensor[(260), uint64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64]) {
  %1021 = @func_6782() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) */;
  %1022 = cast(%var_8793, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
  %1023 = reshape(%1022, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %1024 = @func_1568(%1023) /* ty=(Tensor[(7, 1, 1), float32],) */;
  %1025 = %1021.2;
  %1026 = %1024.0;
  (%1025, %1026, %var_8793)
}

def @func_9591() -> (Tensor[(4, 10, 6), float32],) {
  @func_9589() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_9206() -> Tensor[(4, 10, 6), float32] {
  @func_9204() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_10189() -> (Tensor[(4, 10, 6), float32],) {
  %1027 = @func_8517() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1027,)
}

def @func_3216(%var_3214: Tensor[(6, 9, 9), float32], %var_3215: Tensor[(6, 9, 9), float32]) -> Tensor[(6, 9, 9), float32] {
  %1032 = fn (%var_3207: Tensor[(6, 9, 9), float32], %var_3208: Tensor[(6, 9, 9), float32]) -> Tensor[(6, 9, 9), float32] {
    %1028 = cast(%var_3208, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
    %1029 = shape_of(%var_3207, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1030 = cast(%var_3207, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
    %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%1030, %1031) /* ty=Tensor[(6, 9, 9), float32] */
  };
  %1032(%var_3214, %var_3215) /* ty=Tensor[(6, 9, 9), float32] */
}

def @func_5872() -> (Tensor[(4, 10, 6), float32],) {
  %1033 = @func_3224() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_9761(%var_9760: Tensor[(7), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(7), float64], Tensor[(486), float32]) {
  %1043 = fn (%var_9747: Tensor[(7), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(7), float64], Tensor[(486), float32]) {
    %1035 = @func_5772() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */;
    %1036 = cast(%var_9747, dtype="float64") /* ty=Tensor[(7), float64] */;
    %1037 = cast(meta[relay.Constant][66] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %1038 = reshape(%1036, newshape=[7]) /* ty=Tensor[(7), float64] */;
    %1039 = reshape(%1037, newshape=[9, 54]) /* ty=Tensor[(9, 54), float32] */;
    %1040 = @func_7121(%1038, %1039) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) */;
    %1041 = %1035.0;
    %1042 = %1040.6;
    (%1041, %1042, %var_9747, meta[relay.Constant][66] /* ty=Tensor[(486), float32] */)
  };
  %1043(%var_9760) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(7), float64], Tensor[(486), float32]) */
}

def @func_8330() -> (Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_8328() /* ty=(Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_9488(%var_9487: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %1049 = fn (%var_9480: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
    %1044 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
    %1045 = shape_of(%var_9480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1046 = cast(%var_9480, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
    %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1048 = mod(%1046, %1047) /* ty=Tensor[(8, 2, 13), float32] */;
    (%1048,)
  };
  %1049(%var_9487) /* ty=(Tensor[(8, 2, 13), float32],) */
}

def @func_6699() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %1053 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %1050 = @func_5470() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %1051 = @func_4113() /* ty=Tensor[(4, 10, 6), float32] */;
    %1052 = %1050.0;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_2903() -> Tensor[(4, 10, 6), float32] {
  @func_2901() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_8517() -> Tensor[(4, 10, 6), float32] {
  %1054 = @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %1054.0
}

def @func_9039(%var_9037: Tensor[(490), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(490), float32], Tensor[(1638), float32], Tensor[(486), float32]) {
  @func_9036(%var_9037) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7), float64], Tensor[(490), float32], Tensor[(1638), float32], Tensor[(486), float32]) */
}

def @func_3665() -> (Tensor[(4, 10, 6), float32],) {
  %1055 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1055,)
}

def @func_11218() -> (Tensor[(4, 10, 6), float32],) {
  @func_11216() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_1178(%var_1177: Tensor[(9, 9, 4), uint8]) -> (Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) {
  %1064 = fn (%var_1164: Tensor[(9, 9, 4), uint8]) -> (Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) {
    %1056 = cast(%var_1164, dtype="bool") /* ty=Tensor[(9, 9, 4), bool] */;
    %1057 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(9, 9, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(meta[relay.Constant][68] /* ty=Tensor[(9, 9, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 9, 4), bool] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1060 = cast(meta[relay.Constant][69] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
    %1061 = reshape(%1060, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %1062 = less_equal(%1058, %1059) /* ty=Tensor[(9, 9, 4), bool] */;
    %1063 = @func_1005(%1061) /* ty=Tensor[(2, 2, 6), int16] */;
    (%1062, %1063, meta[relay.Constant][69] /* ty=Tensor[(24, 1), float32] */)
  };
  %1064(%var_1177) /* ty=(Tensor[(9, 9, 4), bool], Tensor[(2, 2, 6), int16], Tensor[(24, 1), float32]) */
}

def @func_4985(%var_4983: Tensor[(1352), int64], %var_4984: Tensor[(147, 1), uint8]) -> (Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(7, 7, 3), uint8], Tensor[(147, 1), uint8]) {
  @func_4981(%var_4983, %var_4984) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(13, 13, 8), int16], Tensor[(1352), int64], Tensor[(7, 7, 3), uint8], Tensor[(147, 1), uint8]) */
}

def @func_918(%var_872: Tensor[(6, 5, 11), float32]) -> (Tensor[(6, 5, 11), int32], Tensor[(6, 5, 11), float64], Tensor[(13, 16, 13), uint32], uint32, Tensor[(2704), uint32]) {
  %1065 = cast(meta[relay.Constant][70] /* ty=Tensor[(6, 5, 11), float32] */, dtype="int32") /* ty=Tensor[(6, 5, 11), int32] */;
  %1066 = shape_of(%var_872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%var_872, dtype="int32") /* ty=Tensor[(6, 5, 11), int32] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1069 = cast(%var_872, dtype="float32") /* ty=Tensor[(6, 5, 11), float32] */;
  %1070 = asin(%1069) /* ty=Tensor[(6, 5, 11), float32] */;
  %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(6, 5, 11), float64] */;
  %1072 = cast(meta[relay.Constant][71] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1073 = cast(meta[relay.Constant][72] /* ty=Tensor[(2704), uint32] */, dtype="uint32") /* ty=Tensor[(2704), uint32] */;
  %1074 = reshape(%1072, newshape=[]) /* ty=uint32 */;
  %1075 = reshape(%1073, newshape=[13, 16, 13]) /* ty=Tensor[(13, 16, 13), uint32] */;
  %1076 = @func_231(%1074, %1075) /* ty=(Tensor[(13, 16, 13), uint32],) */;
  %1077 = maximum(%1067, %1068) /* ty=Tensor[(6, 5, 11), int32] */;
  %1078 = atan(%1071) /* ty=Tensor[(6, 5, 11), float64] */;
  %1079 = %1076.0;
  (%1077, %1078, %1079, meta[relay.Constant][71] /* ty=uint32 */, meta[relay.Constant][72] /* ty=Tensor[(2704), uint32] */)
}

def @func_4553() -> Tensor[(4, 10, 6), float64] {
  %1080 = @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1081 = %1080.0;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
  atan(%1082) /* ty=Tensor[(4, 10, 6), float64] */
}

def @func_6549() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
  %1088 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) {
    %1083 = @func_6195() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %1084 = @func_4593() /* ty=(Tensor[(4, 10, 6), float64],) */;
    %1085 = %1083.0;
    %1086 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
    %1087 = %1084.0;
    (%1085, %1086, %1087)
  };
  %1088() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float64]) */
}

def @func_6459() -> (Tensor[(4, 10, 6), float32],) {
  %1089 = @func_3917() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1089,)
}

def @func_7033() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_7031() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_7718() -> (Tensor[(4, 10, 6), float64],) {
  @func_7716() /* ty=(Tensor[(4, 10, 6), float64],) */
}

def @func_3008(%var_3006: Tensor[(224), float32], %var_3007: Tensor[(14, 8, 2), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) {
  %1133 = fn (%var_2961: Tensor[(224), float32], %var_2986: Tensor[(14, 8, 2), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) {
    %1090 = cast(meta[relay.Constant][73] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
    %1091 = reshape(%1090, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %1092 = @func_1568(%1091) /* ty=(Tensor[(7, 1, 1), float32],) */;
    %1093 = cast(meta[relay.Constant][74] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %1094 = cast(meta[relay.Constant][74] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %1095 = cast(meta[relay.Constant][74] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %1096 = reshape(%1093, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %1097 = reshape(%1094, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %1098 = reshape(%1095, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float32] */;
    %1099 = @func_2331(%1096, %1097, %1098) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(15, 8, 10), float32], Tensor[(7, 7, 3), uint8], Tensor[(7, 21), uint8]) */;
    %1100 = cast(7.17043f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1101 = cast(meta[relay.Constant][75] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %1102 = reshape(%1100, newshape=[]) /* ty=float32 */;
    %1103 = reshape(%1101, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
    %1104 = cast(%var_2961, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1105 = reshape(%1104, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), float32] */;
    %1106 = @func_1716(%1105) /* ty=Tensor[(14, 8, 2), bool] */;
    %1107 = cast(%1106, dtype="float64") /* ty=Tensor[(14, 8, 2), float64] */;
    %1108 = acos(%1107) /* ty=Tensor[(14, 8, 2), float64] */;
    %1109 = cast(%var_2986, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
    %1110 = shape_of(%1108, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1111 = cast(%1108, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
    %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1113 = cast(7.17043f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1114 = cast(meta[relay.Constant][75] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %1115 = reshape(%1113, newshape=[]) /* ty=float32 */;
    %1116 = reshape(%1114, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float32] */;
    %1117 = cast(%1108, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
    %1118 = %1092.0;
    %1119 = cast(%1118, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
    %1120 = reshape(%1119, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %1121 = @func_1568(%1120) /* ty=(Tensor[(7, 1, 1), float32],) */;
    %1122 = cast(%1118, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
    %1123 = reshape(%1122, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %1124 = @func_1568(%1123) /* ty=(Tensor[(7, 1, 1), float32],) */;
    %1125 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %1126 = %1099.1;
    %1127 = @func_1748(%1102, %1103) /* ty=Tensor[(13, 14, 3), float32] */;
    %1128 = mod(%1111, %1112) /* ty=Tensor[(14, 8, 2), float32] */;
    %1129 = @func_1748(%1115, %1116) /* ty=Tensor[(13, 14, 3), float32] */;
    %1130 = tan(%1117) /* ty=Tensor[(14, 8, 2), float32] */;
    %1131 = %1121.0;
    %1132 = %1124.0;
    (%1125, %1118, meta[relay.Constant][73] /* ty=Tensor[(7), float64] */, %var_2961, %1126, meta[relay.Constant][74] /* ty=Tensor[(1200), float32] */, %1127, 7.17043f /* ty=float32 */, meta[relay.Constant][75] /* ty=Tensor[(546), float32] */, %1128, %1129, %1130, %1131, %1132)
  };
  %1133(%var_3006, %var_3007) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(224), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float32], Tensor[(13, 14, 3), float32], float32, Tensor[(546), float32], Tensor[(14, 8, 2), float32], Tensor[(13, 14, 3), float32], Tensor[(14, 8, 2), float32], Tensor[(7, 1, 1), float32], Tensor[(7, 1, 1), float32]) */
}

def @func_8685() -> Tensor[(4, 10, 6), float32] {
  %1135 = fn () -> Tensor[(4, 10, 6), float32] {
    %1134 = @func_8328() /* ty=(Tensor[(4, 10, 6), float64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
    %1134.5
  };
  %1135() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_1719(%var_1717: Tensor[(14, 8, 2), float32]) -> Tensor[(14, 8, 2), bool] {
  @func_1716(%var_1717) /* ty=Tensor[(14, 8, 2), bool] */
}

def @func_6907() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) {
  @func_6905() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), uint64]) */
}

def @func_10392() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %1141 = fn () -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
    %1136 = @func_7755() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %1137 = @func_4165() /* ty=Tensor[(4, 10, 6), float32] */;
    %1138 = @func_8517() /* ty=Tensor[(4, 10, 6), float32] */;
    %1139 = %1136.0;
    %1140 = @func_9690() /* ty=Tensor[(4, 10, 6), float32] */;
    (%1137, %1138, %1139, %1140)
  };
  %1141() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_3667() -> (Tensor[(4, 10, 6), float32],) {
  @func_3665() /* ty=(Tensor[(4, 10, 6), float32],) */
}

def @func_9866() -> Tensor[(4, 10, 6), float32] {
  %1143 = fn () -> Tensor[(4, 10, 6), float32] {
    %1142 = @func_5695() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %1142.0
  };
  %1143() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_4639() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  %1144 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1145 = %1144.0;
  %1146 = @func_4135() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1145, %1146)
}

def @func_2866(%var_2864: Tensor[(10, 8, 1), float32], %var_2865: Tensor[(10, 8, 8), float32]) -> Tensor[(10, 8, 8), float32] {
  %1151 = fn (%var_2839: Tensor[(10, 8, 1), float32], %var_2840: Tensor[(10, 8, 8), float32]) -> Tensor[(10, 8, 8), float32] {
    %1147 = cast(%var_2839, dtype="float32") /* ty=Tensor[(10, 8, 1), float32] */;
    %1148 = cast(%var_2840, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
    %1149 = mod(%1147, %1148) /* ty=Tensor[(10, 8, 8), float32] */;
    %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
    sin(%1150) /* ty=Tensor[(10, 8, 8), float32] */
  };
  %1151(%var_2864, %var_2865) /* ty=Tensor[(10, 8, 8), float32] */
}

def @func_7121(%var_7092: Tensor[(7), float64], %var_7093: Tensor[(9, 54), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(9, 3, 12), int8], Tensor[(7), float64], Tensor[(9, 54), float32], Tensor[(4, 10, 6), float32], Tensor[(15, 6, 4), float64], Tensor[(360), int32]) {
  %1152 = @func_7031() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */;
  %1153 = %1152.1;
  %1154 = cast(%1153, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
  %1155 = cast(%var_7092, dtype="float64") /* ty=Tensor[(7), float64] */;
  %1156 = cast(%var_7093, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
  %1157 = reshape(%1154, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
  %1158 = reshape(%1155, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %1159 = reshape(%1156, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %1160 = @func_4337(%1157, %1158, %1159) /* ty=(Tensor[(4, 10, 6), int8], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(9, 3, 12), int8], Tensor[(18, 18), int8], Tensor[(4, 10, 6), float32]) */;
  %1161 = cast(meta[relay.Constant][76] /* ty=Tensor[(360), int32] */, dtype="int32") /* ty=Tensor[(360), int32] */;
  %1162 = reshape(%1161, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), int32] */;
  %1163 = @func_5173() /* ty=Tensor[(4, 10, 6), float32] */;
  %1164 = %1160.5;
  %1165 = @func_6453() /* ty=Tensor[(4, 10, 6), float32] */;
  %1166 = @func_3080(%1162) /* ty=Tensor[(15, 6, 4), float64] */;
  (%1163, %1153, %1164, %var_7092, %var_7093, %1165, %1166, meta[relay.Constant][76] /* ty=Tensor[(360), int32] */)
}

def @func_7791(%var_7789: Tensor[(324), uint8], %var_7790: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(324), uint8], Tensor[(55, 6), float32], Tensor[(260), float64]) {
  @func_7787(%var_7789, %var_7790) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(324), uint8], Tensor[(55, 6), float32], Tensor[(260), float64]) */
}

def @func_5470() -> (Tensor[(4, 10, 6), float32],) {
  %1167 = @func_4026() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1167,)
}

def @func_6782() -> (Tensor[(4, 10, 6), float32], Tensor[(14, 8, 2), bool], Tensor[(260), uint64]) {
  %1168 = @func_5684() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1169 = cast(meta[relay.Constant][77] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1170 = cast(meta[relay.Constant][77] /* ty=Tensor[(260), uint64] */, dtype="uint64") /* ty=Tensor[(260), uint64] */;
  %1171 = reshape(%1169, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %1172 = reshape(%1170, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint64] */;
  %1173 = @func_3575(%1171, %1172) /* ty=(Tensor[(5, 13, 4), bool], Tensor[(14, 8, 2), bool], Tensor[(2, 112), float32]) */;
  %1174 = %1168.0;
  %1175 = %1173.1;
  (%1174, %1175, meta[relay.Constant][77] /* ty=Tensor[(260), uint64] */)
}

def @func_6978(%var_6975: Tensor[(324), uint8], %var_6976: Tensor[(330), float32], %var_6977: Tensor[(260), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) {
  @func_6973(%var_6975, %var_6976, %var_6977) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(2704), uint32], Tensor[(360), uint64], Tensor[(324), uint8], Tensor[(330), float32], Tensor[(147), uint8], Tensor[(490), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(260), int32]) */
}

def @func_3639(%var_3634: Tensor[(1, 260), float64], %var_3635: Tensor[(7, 1), float64], %var_3636: Tensor[(1200, 1), float32], %var_3637: Tensor[(27, 18), float32], %var_3638: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) {
  %1206 = fn (%var_3600: Tensor[(1, 260), float64], %var_3613: Tensor[(7, 1), float64], %var_3624: Tensor[(1200, 1), float32], %var_3626: Tensor[(27, 18), float32], %var_3627: Tensor[(224), float32]) -> (Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) {
    %1176 = cast(%var_3600, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
    %1177 = reshape(%1176, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %1178 = @func_312(%1177) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(10, 13, 2), bool]) */;
    %1179 = %1178.1;
    %1180 = cast(meta[relay.Constant][78] /* ty=Tensor[(10, 13, 2), bool] */, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
    %1181 = shape_of(%1179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1182 = cast(%1179, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
    %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1184 = cast(%var_3613, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
    %1185 = reshape(%1184, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %1186 = @func_1568(%1185) /* ty=(Tensor[(7, 1, 1), float32],) */;
    %1187 = @func_2901() /* ty=Tensor[(4, 10, 6), float32] */;
    %1188 = cast(%1187, dtype="float32") /* ty=Tensor[(4, 10, 6), float32] */;
    %1189 = cast(%var_3624, dtype="float32") /* ty=Tensor[(1200, 1), float32] */;
    %1190 = cast(meta[relay.Constant][79] /* ty=Tensor[(147), uint8] */, dtype="uint8") /* ty=Tensor[(147), uint8] */;
    %1191 = cast(%var_3626, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
    %1192 = cast(%1187, dtype="float64") /* ty=Tensor[(4, 10, 6), float64] */;
    %1193 = cast(%var_3600, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
    %1194 = cast(%var_3627, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1195 = reshape(%1188, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float32] */;
    %1196 = reshape(%1189, newshape=[1200]) /* ty=Tensor[(1200), float32] */;
    %1197 = reshape(%1190, newshape=[147]) /* ty=Tensor[(147), uint8] */;
    %1198 = reshape(%1191, newshape=[486]) /* ty=Tensor[(486), float32] */;
    %1199 = reshape(%1192, newshape=[4, 10, 6]) /* ty=Tensor[(4, 10, 6), float64] */;
    %1200 = reshape(%1193, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %1201 = reshape(%1194, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %1202 = @func_3529(%1195, %1196, %1197, %1198, %1199, %1200, %1201) /* ty=(Tensor[(4, 10, 6), bool], Tensor[(15, 8, 10), bool], Tensor[(1200), float32], Tensor[(147), uint8], Tensor[(7, 7, 3), uint8], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(4, 10, 6), int64], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), int16], Tensor[(1260), float64], Tensor[(10, 13, 2), bool], Tensor[(260), float64], Tensor[(7, 1, 1), float32], Tensor[(224), float32], Tensor[(147), bool], Tensor[(360), uint64]) */;
    %1203 = maximum(%1182, %1183) /* ty=Tensor[(10, 13, 2), float64] */;
    %1204 = %1186.0;
    %1205 = %1202.1;
    (%1187, %var_3600, %1203, %1204, %var_3613, %1205, %var_3624, meta[relay.Constant][79] /* ty=Tensor[(147), uint8] */, %var_3626, %var_3627)
  };
  %1206(%var_3634, %var_3635, %var_3636, %var_3637, %var_3638) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(1, 260), float64], Tensor[(10, 13, 2), float64], Tensor[(7, 1, 1), float32], Tensor[(7, 1), float64], Tensor[(15, 8, 10), bool], Tensor[(1200, 1), float32], Tensor[(147), uint8], Tensor[(27, 18), float32], Tensor[(224), float32]) */
}

def @func_9826(%var_9824: Tensor[(400), float64]) -> (Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(4, 10, 6), float32]) {
  @func_9823(%var_9824) /* ty=(Tensor[(4, 10, 6), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(4, 10, 6), float32]) */
}

def @func_5579(%var_5565: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) {
  %1207 = cast(%var_5565, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %1208 = @func_3240() /* ty=(Tensor[(4, 10, 6), float32],) */;
  %1209 = atan(%1207) /* ty=Tensor[(13, 9, 14), float32] */;
  %1210 = %1208.0;
  (%1209, %1210)
}

def @func_5582(%var_5580: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) {
  @func_5579(%var_5580) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(4, 10, 6), float32]) */
}

def @func_5684() -> (Tensor[(4, 10, 6), float32],) {
  %1211 = @func_3767() /* ty=Tensor[(4, 10, 6), float32] */;
  (%1211,)
}

def @func_10931() -> Tensor[(4, 10, 6), float32] {
  %1213 = fn () -> Tensor[(4, 10, 6), float32] {
    %1212 = @func_4392() /* ty=(Tensor[(4, 10, 6), float32],) */;
    %1212.0
  };
  %1213() /* ty=Tensor[(4, 10, 6), float32] */
}

def @func_5807(%var_5797: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
  %1214 = cast(%var_5797, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
  log2(%1214) /* ty=Tensor[(3, 10, 12), float64] */
}

def @func_4641() -> (Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) {
  @func_4639() /* ty=(Tensor[(4, 10, 6), float32], Tensor[(4, 10, 6), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen267/build/output.py:3734: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen267/build/output.py", line 3739, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(162) tvmgen_default_fused_cast_cast_not_equal_kernel0(signed char* __restrict__ T_not_equal, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_not_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[((((((int)threadIdx.x) / 27) * 9) + (((int)threadIdx.x) % 9)))]) != ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_1319(%var_1255: Tensor[(14, 10, 7), float64], %var_1264: Tensor[(80, 1), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) {
  %0 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %1 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %2 = %0.0;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %4 = reshape(%3, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %5 = @func_463(%4) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %6 = %5.2;
  %7 = cast(%var_1255, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %11 = cast(-6.11533f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %12 = cast(%var_1264, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
  %13 = reshape(%11, newshape=[]) /* ty=float64 */;
  %14 = reshape(%12, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %15 = @func_1090(%13, %14) /* ty=Tensor[(1, 16, 5), float64] */;
  %16 = cast(%15, dtype="float32") /* ty=Tensor[(1, 16, 5), float32] */;
  %17 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %18 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %19 = %1.0;
  %20 = logical_xor(%9, %10) /* ty=Tensor[(14, 10, 7), int32] */;
  %21 = erf(%16) /* ty=Tensor[(1, 16, 5), float32] */;
  %22 = %17.0;
  %23 = %18.0;
  (%2, %19, %20, -6.11533f64 /* ty=float64 */, %var_1264, %21, %22, %23)
}

def @func_3815() -> Tensor[(14, 10, 7), float32] {
  @func_3404() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_8927() -> Tensor[(14, 10, 7), float32] {
  %24 = @func_7360() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %24.0
}

def @func_1756(%var_1739: Tensor[(80), float64], %var_1748: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) {
  %25 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %26 = %25.0;
  %27 = cast(%26, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %28 = cast(%var_1739, dtype="float64") /* ty=Tensor[(80), float64] */;
  %29 = reshape(%27, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %30 = reshape(%28, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %31 = @func_1319(%29, %30) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %32 = cast(%var_1748, dtype="float64") /* ty=float64 */;
  %33 = cast(%var_1739, dtype="float64") /* ty=Tensor[(80), float64] */;
  %34 = reshape(%32, newshape=[]) /* ty=float64 */;
  %35 = reshape(%33, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %36 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %37 = %36.0;
  %38 = cast(%var_1748, dtype="float64") /* ty=float64 */;
  %39 = cast(%37, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %40 = %31.2;
  %41 = @func_1090(%34, %35) /* ty=Tensor[(1, 16, 5), float64] */;
  %42 = floor_divide(%38, %39) /* ty=Tensor[(14, 10, 7), float64] */;
  (%26, %40, %var_1739, %41, %42)
}

def @func_3544() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %43 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %44 = %43.0;
  %45 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  (%44, %45)
}

def @func_7069(%var_7033: Tensor[(5, 10, 15), float64], %var_7034: Tensor[(5, 10, 15), float64]) -> (Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) {
  %46 = cast(%var_7034, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
  %47 = shape_of(%var_7033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_7033, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %50 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %51 = cast(%var_7034, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
  %52 = shape_of(%var_7033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%var_7033, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %55 = mod(%48, %49) /* ty=Tensor[(5, 10, 15), float64] */;
  %56 = %50.0;
  %57 = add(%53, %54) /* ty=Tensor[(5, 10, 15), uint16] */;
  (%55, %56, %57)
}

def @func_4989() -> (Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
  %58 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %59 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %60 = %58.2;
  %61 = %59.0;
  (%60, %61)
}

def @func_6062(%var_6042: Tensor[(1, 1694), float32], %var_6045: Tensor[(2, 1694), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(11, 11, 14), int16], Tensor[(2, 1694), bool], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  %62 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %63 = cast(%var_6042, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %64 = cast(%var_6042, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %65 = reshape(%63, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %66 = reshape(%64, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %67 = @func_5435(%65, %66) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
  %68 = cast(%var_6042, dtype="bool") /* ty=Tensor[(1, 1694), bool] */;
  %69 = cast(%var_6045, dtype="bool") /* ty=Tensor[(2, 1694), bool] */;
  %70 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %72 = reshape(%71, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %73 = @func_181(%72) /* ty=(Tensor[(14, 10, 7), bool],) */;
  %74 = %62.0;
  %75 = %67.0;
  %76 = greater(%68, %69) /* ty=Tensor[(2, 1694), bool] */;
  %77 = %73.0;
  (%74, %75, %76, %70, %77)
}

def @func_1822() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %78 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %79 = %78.0;
  %80 = cast(%79, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %81 = reshape(%80, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %82 = @func_463(%81) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %83 = %82.4;
  (%79, %83)
}

def @func_4413() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  %84 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %85 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %86 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %87 = %84.0;
  %88 = @func_3487() /* ty=Tensor[(14, 10, 7), float32] */;
  %89 = %85.1;
  %90 = %86.0;
  %91 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  (%87, %88, %89, %90, %91)
}

def @func_8133() -> Tensor[(14, 10, 7), float32] {
  @func_3487() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_5013() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %92 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %93 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %94 = %92.3;
  %95 = %93.0;
  (%94, %95)
}

def @func_8566() -> Tensor[(14, 10, 7), float32] {
  %96 = @func_5349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %96.0
}

def @func_6107() -> (Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  %97 = @func_6006() /* ty=Tensor[(14, 10, 7), float64] */;
  %98 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  (%97, %98)
}

def @func_5403() -> Tensor[(14, 10, 7), float64] {
  %99 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %99.0
}

def @func_7526() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %100 = @func_5460() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %101 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %102 = @func_4065() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %103 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %104 = %100.0;
  %105 = %101.0;
  %106 = %102.0;
  %107 = %103.0;
  (%104, %105, %106, %107)
}

def @func_3349() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %108 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %109 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %110 = %108.1;
  %111 = %109.0;
  (%110, %111)
}

def @func_2602() -> (Tensor[(14, 10, 7), bool],) {
  %112 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%112,)
}

def @func_4306() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %113 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %114 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %115 = %113.0;
  %116 = %114.1;
  (%115, %116)
}

def @func_1950(%var_1932: Tensor[(8, 16, 16), float32]) -> (Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) {
  %117 = cast(%var_1932, dtype="float32") /* ty=Tensor[(8, 16, 16), float32] */;
  %118 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 16, 16), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %121 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %122 = floor_divide(%119, %120) /* ty=Tensor[(8, 16, 16), float32] */;
  %123 = %121.0;
  (%122, %123)
}

def @func_8073() -> (Tensor[(14, 10, 7), float64],) {
  %124 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %125 = %124.0;
  (%125,)
}

def @func_1112() -> (Tensor[(14, 10, 7), float64],) {
  %126 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %127 = %126.0;
  (%127,)
}

def @func_947() -> Tensor[(14, 10, 7), float64] {
  %128 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %128.0
}

def @func_3199() -> Tensor[(2, 14, 10), int16] {
  %129 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %129.2
}

def @func_7638(%var_7610: Tensor[(2, 14, 10), int16]) -> (Tensor[(14, 10, 7), float64], Tensor[(50, 15), float64], Tensor[(2, 14, 10), float32], Tensor[(14, 10, 7), bool]) {
  %130 = cast(meta[relay.Constant][1] /* ty=Tensor[(50, 15), float64] */, dtype="float64") /* ty=Tensor[(50, 15), float64] */;
  %131 = reshape(%130, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %132 = @func_7450(%131) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) */;
  %133 = @func_6107() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %134 = %133.1;
  %135 = cast(%var_7610, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %139 = %132.0;
  %140 = divide(%137, %138) /* ty=Tensor[(2, 14, 10), float32] */;
  %141 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%139, meta[relay.Constant][1] /* ty=Tensor[(50, 15), float64] */, %140, %141)
}

def @func_8741() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %142 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %143 = %142.0;
  %144 = @func_4586() /* ty=Tensor[(14, 10, 7), float32] */;
  (%143, %144)
}

def @func_2260() -> Tensor[(14, 10, 7), float32] {
  %145 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %145.0
}

def @func_2653() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) {
  %146 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %147 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %148 = %147.1;
  %149 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="uint64") /* ty=Tensor[(14, 10, 7), uint64] */;
  %152 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%148, dtype="uint64") /* ty=Tensor[(14, 10, 7), uint64] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %155 = %146.4;
  %156 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
  %157 = minimum(%153, %154) /* ty=Tensor[(14, 10, 7), uint64] */;
  (%155, %156, %157)
}

def @func_4372() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %158 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %159 = @func_3264() /* ty=Tensor[(14, 10, 7), float64] */;
  %160 = %158.0;
  (%159, %160)
}

def @func_5092() -> Tensor[(14, 10, 7), float64] {
  %161 = @func_4509() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %161.1
}

def @func_7659() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %162 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %163 = @func_5692() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %164 = %162.0;
  %165 = %163.0;
  (%164, %165)
}

def @func_8601() -> (Tensor[(14, 10, 7), float32],) {
  %166 = @func_4819() /* ty=Tensor[(14, 10, 7), float32] */;
  (%166,)
}

def @func_252() -> (Tensor[(14, 10, 7), float64],) {
  %167 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %168 = %167.0;
  %169 = cast(%168, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %170 = sqrt(%169) /* ty=Tensor[(14, 10, 7), float64] */;
  (%170,)
}

def @func_5859() -> (Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) {
  %171 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %172 = cast(meta[relay.Constant][2] /* ty=Tensor[(378), int64] */, dtype="int64") /* ty=Tensor[(378), int64] */;
  %173 = cast(meta[relay.Constant][2] /* ty=Tensor[(378), int64] */, dtype="int64") /* ty=Tensor[(378), int64] */;
  %174 = reshape(%172, newshape=[3, 14, 9]) /* ty=Tensor[(3, 14, 9), int64] */;
  %175 = reshape(%173, newshape=[3, 14, 9]) /* ty=Tensor[(3, 14, 9), int64] */;
  %176 = @func_4912(%174, %175) /* ty=(Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) */;
  %177 = %171.2;
  %178 = %176.0;
  (%177, %178, meta[relay.Constant][2] /* ty=Tensor[(378), int64] */)
}

def @func_6820(%var_6800: Tensor[(121, 14), float32]) -> (Tensor[(9, 9, 15), float64], Tensor[(11, 11, 14), int16], Tensor[(121, 14), float32], int8, Tensor[(13, 21), uint32], Tensor[(2340), int8]) {
  %179 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %180 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(9, 9, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %183 = cast(%var_6800, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
  %184 = cast(%var_6800, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
  %185 = reshape(%183, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %186 = reshape(%184, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %187 = @func_5435(%185, %186) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
  %188 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 21), uint32] */, dtype="uint32") /* ty=Tensor[(13, 21), uint32] */;
  %189 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 21), uint32] */, dtype="uint32") /* ty=Tensor[(13, 21), uint32] */;
  %190 = cast(meta[relay.Constant][6] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %191 = reshape(%188, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint32] */;
  %192 = reshape(%189, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint32] */;
  %193 = reshape(%190, newshape=[2340]) /* ty=Tensor[(2340), int8] */;
  %194 = @func_5725(%191, %192, %193) /* ty=(Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) */;
  %195 = divide(%181, %182) /* ty=Tensor[(9, 9, 15), float64] */;
  %196 = %187.0;
  %197 = %194.2;
  (%195, %196, %var_6800, %197, meta[relay.Constant][5] /* ty=Tensor[(13, 21), uint32] */, meta[relay.Constant][6] /* ty=Tensor[(2340), int8] */)
}

def @func_6006() -> Tensor[(14, 10, 7), float64] {
  %198 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %198.0
}

def @func_4198(%var_4145: Tensor[(16, 16, 11), int64], %var_4146: Tensor[(16, 16, 11), int64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(2, 14, 10), int16], float64) {
  %199 = cast(%var_4146, dtype="int64") /* ty=Tensor[(16, 16, 11), int64] */;
  %200 = shape_of(%var_4145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%var_4145, dtype="int64") /* ty=Tensor[(16, 16, 11), int64] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %203 = add(%201, %202) /* ty=Tensor[(16, 16, 11), int64] */;
  %204 = cast(%var_4145, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%203, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %208 = subtract(%206, %207) /* ty=Tensor[(16, 16, 11), int8] */;
  %209 = cast(%203, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %213 = greater_equal(%211, %212) /* ty=Tensor[(16, 16, 11), bool] */;
  %214 = cast(%213, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
  %215 = sigmoid(%214) /* ty=Tensor[(16, 16, 11), float64] */;
  %216 = cast(%var_4146, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %220 = cast(-3.79327f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %221 = reshape(%220, newshape=[]) /* ty=float64 */;
  %222 = @func_3226(%221) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
  %223 = bitwise_and(%218, %219) /* ty=Tensor[(16, 16, 11), uint16] */;
  %224 = %222.0;
  (%223, %224, -3.79327f64 /* ty=float64 */)
}

def @func_311() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %225 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %226 = %225.0;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %228 = reshape(%227, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %229 = @func_181(%228) /* ty=(Tensor[(14, 10, 7), bool],) */;
  %230 = %229.0;
  (%226, %230)
}

def @func_621(%var_615: Tensor[(2, 14, 10), int16], %var_616: Tensor[(2, 14, 10), int16]) -> Tensor[(2, 14, 10), int16] {
  %231 = cast(%var_616, dtype="int16") /* ty=Tensor[(2, 14, 10), int16] */;
  %232 = shape_of(%var_615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%var_615, dtype="int16") /* ty=Tensor[(2, 14, 10), int16] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%233, %234) /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_6260() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(80), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
  %235 = @func_5566() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %236 = @func_4989() /* ty=(Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %237 = %235.0;
  %238 = cast(%237, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %239 = reshape(%238, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %240 = @func_463(%239) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %241 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %242 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %243 = %236.0;
  %244 = %240.0;
  %245 = %241.0;
  (%237, %242, %243, %244, %245)
}

def @func_8962() -> (float64, Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float32]) {
  %246 = @func_8654() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) */;
  %247 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
  %248 = @func_5954() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %249 = %246.5;
  %250 = %247.2;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_3028() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %252 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %253 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %254 = %252.1;
  %255 = %253.0;
  (%254, %255)
}

def @func_2121() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %256 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %257 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %258 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %259 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %260 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %261 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %262 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %263 = %256.4;
  %264 = %257.1;
  %265 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %266 = %258.0;
  %267 = %259.0;
  %268 = %260.0;
  %269 = %261.0;
  %270 = %262.0;
  (%263, %264, %265, %266, %267, %268, %269, %270)
}

def @func_1200() -> (Tensor[(14, 10, 7), float64],) {
  %271 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %272 = %271.0;
  (%272,)
}

def @func_6344() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %273 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %274 = @func_6006() /* ty=Tensor[(14, 10, 7), float64] */;
  (%273, %274)
}

def @func_391() -> (Tensor[(14, 10, 7), float64],) {
  %275 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %276 = %275.0;
  (%276,)
}

def @func_9221() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %277 = @func_5460() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %280 = reshape(%279, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %281 = @func_181(%280) /* ty=(Tensor[(14, 10, 7), bool],) */;
  %282 = %281.0;
  (%278, %282)
}

def @func_9364(%var_9330: Tensor[(56), float64]) -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64], Tensor[(56), float64], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(14, 10, 7), float64]) {
  %283 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
  %284 = cast(%var_9330, dtype="float64") /* ty=Tensor[(56), float64] */;
  %285 = cast(meta[relay.Constant][7] /* ty=Tensor[(3120), float64] */, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %286 = cast(meta[relay.Constant][8] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %287 = reshape(%284, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %288 = reshape(%285, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
  %289 = reshape(%286, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %290 = @func_3987(%287, %288, %289) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) */;
  %291 = @func_4659() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %292 = %283.2;
  %293 = %290.1;
  %294 = %291.0;
  (%292, %293, %var_9330, meta[relay.Constant][7] /* ty=Tensor[(3120), float64] */, meta[relay.Constant][8] /* ty=Tensor[(504), float32] */, %294)
}

def @func_1958() -> (Tensor[(14, 10, 7), float64],) {
  %295 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %296 = %295.0;
  (%296,)
}

def @func_8883() -> (Tensor[(14, 10, 7), float64],) {
  %297 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  (%297,)
}

def @func_4256() -> Tensor[(14, 10, 7), float32] {
  %298 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %298.0
}

def @func_6999(%var_6944: Tensor[(16, 14, 8), uint64], %var_6945: Tensor[(16, 14, 8), uint64]) -> (Tensor[(16, 14, 8), int64], Tensor[(16, 14, 8), float32], Tensor[(14, 10, 7), float32], Tensor[(16, 14, 8), float64], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16], Tensor[(5, 56), int16]) {
  %299 = cast(%var_6945, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
  %300 = shape_of(%var_6944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_6944, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %303 = bitwise_xor(%301, %302) /* ty=Tensor[(16, 14, 8), uint64] */;
  %304 = cast(%303, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %305 = shape_of(%var_6945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%var_6945, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %308 = cast(%var_6944, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %309 = cast(%var_6945, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %310 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %311 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 56), int16] */, dtype="int16") /* ty=Tensor[(5, 56), int16] */;
  %312 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 56), int16] */, dtype="int16") /* ty=Tensor[(5, 56), int16] */;
  %313 = reshape(%311, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %314 = reshape(%312, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %315 = add(%306, %307) /* ty=Tensor[(16, 14, 8), int64] */;
  %316 = acos(%308) /* ty=Tensor[(16, 14, 8), float32] */;
  %317 = @func_4256() /* ty=Tensor[(14, 10, 7), float32] */;
  %318 = asinh(%309) /* ty=Tensor[(16, 14, 8), float64] */;
  %319 = %310.1;
  %320 = @func_621(%313, %314) /* ty=Tensor[(2, 14, 10), int16] */;
  (%315, %316, %317, %318, %319, %320, meta[relay.Constant][9] /* ty=Tensor[(5, 56), int16] */)
}

def @func_7168() -> (Tensor[(14, 10, 7), bool],) {
  %321 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%321,)
}

def @func_8534(%var_8522: Tensor[(2048), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(8, 16, 16), float32], Tensor[(2048), float32]) {
  %322 = @func_7360() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %323 = cast(%var_8522, dtype="float32") /* ty=Tensor[(2048), float32] */;
  %324 = reshape(%323, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float32] */;
  %325 = @func_1950(%324) /* ty=(Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) */;
  %326 = %322.0;
  %327 = %325.0;
  (%326, %327, %var_8522)
}

def @func_2765(%var_2699: Tensor[(14, 10, 7), float32], %var_2725: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %328 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %329 = %328.3;
  %330 = cast(%var_2699, dtype="int64") /* ty=Tensor[(14, 10, 7), int64] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="int64") /* ty=Tensor[(14, 10, 7), int64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %334 = cast(%var_2725, dtype="float64") /* ty=Tensor[(80), float64] */;
  %335 = reshape(%334, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %336 = @func_2190(%335) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
  %337 = %336.1;
  %338 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %339 = %338.0;
  %340 = cast(%339, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %341 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%337, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %344 = @func_1822() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %345 = @func_2575() /* ty=(Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) */;
  %346 = multiply(%332, %333) /* ty=Tensor[(14, 10, 7), int64] */;
  %347 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  %348 = add(%342, %343) /* ty=Tensor[(14, 10, 7), int32] */;
  %349 = %344.0;
  %350 = %345.2;
  (%346, %347, %var_2725, %348, %349, %350)
}

def @func_3487() -> Tensor[(14, 10, 7), float32] {
  @func_1103() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_8355(%var_8345: Tensor[(10, 2, 10), float64]) -> (Tensor[(10, 2, 10), float64],) {
  %351 = cast(%var_8345, dtype="float64") /* ty=Tensor[(10, 2, 10), float64] */;
  %352 = sqrt(%351) /* ty=Tensor[(10, 2, 10), float64] */;
  (%352,)
}

def @func_5034() -> Tensor[(14, 10, 7), float64] {
  %353 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %353.0
}

def @func_4711(%var_4703: int32, %var_4704: Tensor[(3, 11, 2), int32]) -> (Tensor[(3, 11, 2), bool], Tensor[(2, 14, 10), int16]) {
  %354 = cast(%var_4703, dtype="bool") /* ty=bool */;
  %355 = cast(%var_4704, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %356 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %357 = greater_equal(%354, %355) /* ty=Tensor[(3, 11, 2), bool] */;
  %358 = %356.4;
  (%357, %358)
}

def @func_6626() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %359 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %360 = %359.0;
  %361 = @func_3264() /* ty=Tensor[(14, 10, 7), float64] */;
  (%360, %361)
}

def @func_568() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %362 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %363 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %364 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %365 = %362.0;
  %366 = %363.0;
  %367 = %364.0;
  (%365, %366, %367)
}

def @func_3987(%var_3950: Tensor[(56, 1), float64], %var_3951: Tensor[(3120), float64], %var_3953: Tensor[(504), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) {
  %368 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %369 = cast(%var_3950, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %370 = cast(%var_3951, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %371 = cast(meta[relay.Constant][10] /* ty=Tensor[(330), bool] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %372 = cast(%var_3953, dtype="float32") /* ty=Tensor[(504), float32] */;
  %373 = reshape(%369, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), float64] */;
  %374 = reshape(%370, newshape=[1, 3120]) /* ty=Tensor[(1, 3120), float64] */;
  %375 = reshape(%371, newshape=[330]) /* ty=Tensor[(330), bool] */;
  %376 = reshape(%372, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), float32] */;
  %377 = @func_3796(%373, %374, %375, %376) /* ty=(Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) */;
  %378 = cast(meta[relay.Constant][10] /* ty=Tensor[(330), bool] */, dtype="int16") /* ty=Tensor[(330), int16] */;
  %379 = cast(%var_3950, dtype="int16") /* ty=Tensor[(56, 1), int16] */;
  %380 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %381 = %368.0;
  %382 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
  %383 = %377.4;
  %384 = left_shift(%378, %379) /* ty=Tensor[(56, 330), int16] */;
  %385 = %380.2;
  (%381, %382, %383, %var_3951, %var_3953, %384, %385)
}

def @func_6686(%var_6666: Tensor[(15, 10, 12), float64]) -> (Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %386 = cast(%var_6666, dtype="float64") /* ty=Tensor[(15, 10, 12), float64] */;
  %387 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %388 = erf(%386) /* ty=Tensor[(15, 10, 12), float64] */;
  %389 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
  %390 = %387.0;
  (%388, %389, %390)
}

def @func_7340() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  %391 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %392 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %393 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %394 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %395 = @func_7168() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %396 = %391.0;
  %397 = %392.0;
  %398 = %393.0;
  %399 = %394.0;
  %400 = %395.0;
  (%396, %397, %398, %399, %400)
}

def @func_3642() -> (Tensor[(14, 10, 7), float64],) {
  %401 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %402 = %401.0;
  (%402,)
}

def @func_2810(%var_2803: float64, %var_2804: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
  %403 = cast(%var_2803, dtype="float64") /* ty=float64 */;
  %404 = cast(%var_2804, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %405 = mod(%403, %404) /* ty=Tensor[(13, 15, 16), float64] */;
  (%405,)
}

def @func_759() -> (Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %406 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %407 = %406.0;
  %408 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 10, 7), float32] */, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%407, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %412 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %413 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %414 = subtract(%410, %411) /* ty=Tensor[(14, 10, 7), int8] */;
  %415 = %412.0;
  %416 = %413.0;
  (%414, %415, %416)
}

def @func_497() -> (Tensor[(14, 10, 7), bool],) {
  %417 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %418 = %417.0;
  %419 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %420 = %419.0;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %422 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%418, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = equal(%423, %424) /* ty=Tensor[(14, 10, 7), bool] */;
  (%425,)
}

def @func_3674() -> (Tensor[(14, 10, 7), float32],) {
  %426 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %427 = %426.1;
  (%427,)
}

def @func_5255() -> (Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) {
  %428 = cast(meta[relay.Constant][12] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %429 = cast(meta[relay.Constant][12] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %430 = reshape(%428, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %431 = reshape(%429, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %432 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %433 = %432.1;
  %434 = @func_3544() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %435 = %434.1;
  %436 = cast(%435, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %437 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%433, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %440 = @func_621(%430, %431) /* ty=Tensor[(2, 14, 10), int16] */;
  %441 = left_shift(%438, %439) /* ty=Tensor[(14, 10, 7), int8] */;
  (%440, meta[relay.Constant][12] /* ty=Tensor[(280), int16] */, %441)
}

def @func_2918() -> (Tensor[(14, 10, 7), float64],) {
  %442 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
  (%442,)
}

def @func_7993(%var_7958: Tensor[(13, 4, 1), bool], %var_7959: Tensor[(13, 4, 11), bool], %var_7977: Tensor[(1056), uint16]) -> (Tensor[(13, 4, 11), bool], Tensor[(14, 10, 7), float64], Tensor[(16, 6, 11), uint16], Tensor[(1056), uint16], Tensor[(2, 14, 10), int16]) {
  %443 = cast(%var_7958, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %444 = cast(%var_7959, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %445 = @func_6699() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %446 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %447 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %448 = reshape(%446, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), uint16] */;
  %449 = reshape(%447, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), uint16] */;
  %450 = logical_and(%443, %444) /* ty=Tensor[(13, 4, 11), bool] */;
  %451 = %445.0;
  %452 = @func_1571(%448, %449) /* ty=Tensor[(16, 6, 11), uint16] */;
  %453 = @func_5841() /* ty=Tensor[(2, 14, 10), int16] */;
  (%450, %451, %452, %var_7977, %453)
}

def @func_1219() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) {
  %454 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %455 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %456 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %457 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %458 = reshape(%456, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %459 = reshape(%457, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %460 = %454.0;
  %461 = %455.0;
  %462 = @func_621(%458, %459) /* ty=Tensor[(2, 14, 10), int16] */;
  (%460, %461, %462, meta[relay.Constant][13] /* ty=Tensor[(280), int16] */)
}

def @func_2491() -> Tensor[(14, 10, 7), bool] {
  @func_1979() /* ty=Tensor[(14, 10, 7), bool] */
}

def @func_8278() -> (Tensor[(2, 14, 10), int16],) {
  %463 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  (%463,)
}

def @func_4576() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
  %464 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %465 = cast(meta[relay.Constant][14] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %466 = reshape(%465, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %467 = @func_2190(%466) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
  %468 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %469 = %464.0;
  %470 = %467.5;
  %471 = %468.1;
  (%469, %470, meta[relay.Constant][14] /* ty=Tensor[(80), float64] */, %471)
}

def @func_3106(%var_3095: float64, %var_3096: Tensor[(3120), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) {
  %472 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %473 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %476 = cast(meta[relay.Constant][15] /* ty=Tensor[(80, 1), float64] */, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
  %477 = reshape(%475, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %478 = reshape(%476, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %479 = @func_1319(%477, %478) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %480 = cast(%var_3095, dtype="float64") /* ty=float64 */;
  %481 = cast(%var_3096, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %482 = reshape(%480, newshape=[]) /* ty=float64 */;
  %483 = reshape(%481, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %484 = @func_2810(%482, %483) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %485 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  %486 = %472.0;
  %487 = %479.6;
  %488 = %484.0;
  (%485, %486, %474, %487, meta[relay.Constant][15] /* ty=Tensor[(80, 1), float64] */, %488, %var_3095, %var_3096)
}

def @func_1413() -> (Tensor[(14, 10, 7), float32],) {
  %489 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %490 = %489.3;
  (%490,)
}

def @func_2410(%var_2386: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) {
  %491 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %492 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %493 = cast(%var_2386, dtype="float64") /* ty=float64 */;
  %494 = reshape(%492, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %495 = reshape(%493, newshape=[]) /* ty=float64 */;
  %496 = @func_1756(%494, %495) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) */;
  %497 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %498 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %499 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 80), float64] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %500 = acosh(%499) /* ty=Tensor[(1, 80), float32] */;
  %501 = cast(%500, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %502 = cast(%var_2386, dtype="bool") /* ty=bool */;
  %503 = %491.0;
  %504 = %496.4;
  %505 = %497.0;
  %506 = %498.0;
  %507 = greater(%501, %502) /* ty=Tensor[(1, 80), bool] */;
  (%503, %504, %505, %506, %507)
}

def @func_6207() -> (Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) {
  %508 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %509 = cast(meta[relay.Constant][17] /* ty=Tensor[(48, 48), float32] */, dtype="float32") /* ty=Tensor[(48, 48), float32] */;
  %510 = reshape(%509, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %511 = @func_1451(%510) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) */;
  %512 = %511.0;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
  %514 = cast(meta[relay.Constant][17] /* ty=Tensor[(48, 48), float32] */, dtype="float64") /* ty=Tensor[(48, 48), float64] */;
  %515 = @func_3443() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %516 = %508.0;
  %517 = erf(%513) /* ty=Tensor[(12, 16, 12), float64] */;
  %518 = sigmoid(%514) /* ty=Tensor[(48, 48), float64] */;
  %519 = %515.0;
  (%516, %517, %518, %519)
}

def @func_181(%var_169: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool],) {
  %520 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %521 = %520.1;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %523 = exp(%522) /* ty=Tensor[(14, 10, 7), float32] */;
  %524 = cast(%var_169, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %528 = floor_mod(%526, %527) /* ty=Tensor[(14, 10, 7), float32] */;
  %529 = cast(%523, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = logical_and(%531, %532) /* ty=Tensor[(14, 10, 7), bool] */;
  (%533,)
}

def @func_3226(%var_3218: float64) -> (Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) {
  %534 = cast(%var_3218, dtype="float64") /* ty=float64 */;
  %535 = cast(meta[relay.Constant][18] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %536 = reshape(%534, newshape=[]) /* ty=float64 */;
  %537 = reshape(%535, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %538 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  %539 = @func_1090(%536, %537) /* ty=Tensor[(1, 16, 5), float64] */;
  %540 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  (%538, %539, %var_3218, meta[relay.Constant][18] /* ty=Tensor[(80), float64] */, %540)
}

def @func_8552() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %541 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %542 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %543 = %541.0;
  %544 = %542.3;
  (%543, %544)
}

def @func_1008(%var_989: Tensor[(2, 16, 10), int32], %var_990: Tensor[(2, 16, 10), int32]) -> (Tensor[(2, 16, 10), int32],) {
  %545 = cast(%var_990, dtype="int32") /* ty=Tensor[(2, 16, 10), int32] */;
  %546 = shape_of(%var_989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_989, dtype="int32") /* ty=Tensor[(2, 16, 10), int32] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %549 = bitwise_and(%547, %548) /* ty=Tensor[(2, 16, 10), int32] */;
  (%549,)
}

def @func_2575() -> (Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) {
  %550 = cast(meta[relay.Constant][19] /* ty=Tensor[(320), int32] */, dtype="int32") /* ty=Tensor[(320), int32] */;
  %551 = cast(meta[relay.Constant][19] /* ty=Tensor[(320), int32] */, dtype="int32") /* ty=Tensor[(320), int32] */;
  %552 = reshape(%550, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), int32] */;
  %553 = reshape(%551, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), int32] */;
  %554 = @func_1008(%552, %553) /* ty=(Tensor[(2, 16, 10), int32],) */;
  %555 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %556 = %555.0;
  %557 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 10, 7), float64] */, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = %554.0;
  %562 = greater_equal(%559, %560) /* ty=Tensor[(14, 10, 7), bool] */;
  (%561, meta[relay.Constant][19] /* ty=Tensor[(320), int32] */, %562)
}

def @func_1090(%var_1080: float64, %var_1081: Tensor[(1, 16, 5), float64]) -> Tensor[(1, 16, 5), float64] {
  %563 = cast(%var_1080, dtype="float64") /* ty=float64 */;
  %564 = cast(%var_1081, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  maximum(%563, %564) /* ty=Tensor[(1, 16, 5), float64] */
}

def @func_9249() -> Tensor[(48, 48), float64] {
  %565 = @func_6207() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) */;
  %565.2
}

def @func_5692() -> (Tensor[(14, 10, 7), float64],) {
  %566 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %567 = %566.1;
  (%567,)
}

def @func_8717(%var_8678: Tensor[(1, 11, 10), int8], %var_8679: Tensor[(4, 11, 10), int8], %var_8696: Tensor[(40, 2), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(980), float64], Tensor[(40, 2), float64], Tensor[(4, 11, 10), int32]) {
  %568 = cast(meta[relay.Constant][21] /* ty=Tensor[(980), float64] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %569 = cast(%var_8696, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %570 = reshape(%568, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %571 = reshape(%569, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %572 = @func_1319(%570, %571) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %573 = cast(%var_8678, dtype="int8") /* ty=Tensor[(1, 11, 10), int8] */;
  %574 = cast(%var_8679, dtype="int8") /* ty=Tensor[(4, 11, 10), int8] */;
  %575 = minimum(%573, %574) /* ty=Tensor[(4, 11, 10), int8] */;
  %576 = cast(%575, dtype="uint16") /* ty=Tensor[(4, 11, 10), uint16] */;
  %577 = shape_of(%var_8679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%var_8679, dtype="uint16") /* ty=Tensor[(4, 11, 10), uint16] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %580 = add(%578, %579) /* ty=Tensor[(4, 11, 10), uint16] */;
  %581 = cast(%575, dtype="int32") /* ty=Tensor[(4, 11, 10), int32] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="int32") /* ty=Tensor[(4, 11, 10), int32] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %585 = %572.0;
  %586 = multiply(%583, %584) /* ty=Tensor[(4, 11, 10), int32] */;
  (%585, meta[relay.Constant][21] /* ty=Tensor[(980), float64] */, %var_8696, %586)
}

def @func_2190(%var_2162: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) {
  %587 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %588 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %589 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %590 = %587.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %592 = cast(%var_2162, dtype="float64") /* ty=Tensor[(80), float64] */;
  %593 = reshape(%591, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %594 = reshape(%592, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %595 = @func_1319(%593, %594) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %596 = %588.0;
  %597 = %589.2;
  %598 = %595.5;
  %599 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%590, %596, %597, %598, %var_2162, %599)
}

def @func_2949() -> Tensor[(2, 14, 10), int16] {
  %600 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %600.2
}

def @func_6446() -> Tensor[(14, 10, 7), float64] {
  %601 = @func_5013() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %601.1
}

def @func_9254() -> (Tensor[(14, 10, 7), float64],) {
  %602 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %603 = %602.0;
  (%603,)
}

def @func_9036() -> Tensor[(14, 10, 7), float64] {
  %604 = @func_6313() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %604.0
}

def @func_7538() -> Tensor[(3, 14, 9), int64] {
  %605 = @func_5859() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) */;
  %605.1
}

def @func_1979() -> Tensor[(14, 10, 7), bool] {
  %606 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %606.1
}

def @func_1422() -> (Tensor[(14, 10, 7), float64],) {
  %607 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %608 = %607.0;
  (%608,)
}

def @func_7450(%var_7443: Tensor[(750), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) {
  %609 = @func_1822() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %610 = cast(%var_7443, dtype="float64") /* ty=Tensor[(750), float64] */;
  %611 = cast(%var_7443, dtype="float64") /* ty=Tensor[(750), float64] */;
  %612 = reshape(%610, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float64] */;
  %613 = reshape(%611, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float64] */;
  %614 = @func_7069(%612, %613) /* ty=(Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) */;
  %615 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %616 = %609.1;
  %617 = %614.0;
  %618 = %615.0;
  (%616, %617, %var_7443, %618)
}

def @func_2986() -> (Tensor[(14, 10, 7), float32],) {
  %619 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
  (%619,)
}

def @func_5435(%var_5409: Tensor[(11, 11, 14), float32], %var_5418: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) {
  %620 = cast(%var_5409, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %621 = rsqrt(%620) /* ty=Tensor[(11, 11, 14), float32] */;
  %622 = cast(%var_5418, dtype="int16") /* ty=Tensor[(11, 11, 14), int16] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="int16") /* ty=Tensor[(11, 11, 14), int16] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %626 = cast(%621, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %627 = bitwise_xor(%624, %625) /* ty=Tensor[(11, 11, 14), int16] */;
  %628 = sqrt(%626) /* ty=Tensor[(11, 11, 14), float32] */;
  (%627, %628)
}

def @func_7814(%var_7755: Tensor[(576, 4), float32], %var_7800: Tensor[(12, 16, 12), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(576, 4), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), int32], Tensor[(12, 16, 12), float64]) {
  %629 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %630 = @func_2602() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %631 = @func_7150() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %632 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %633 = cast(%var_7755, dtype="float32") /* ty=Tensor[(576, 4), float32] */;
  %634 = reshape(%633, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %635 = @func_1451(%634) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) */;
  %636 = %635.1;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %638 = sigmoid(%637) /* ty=Tensor[(12, 16, 12), float32] */;
  %639 = cast(%var_7800, dtype="int32") /* ty=Tensor[(12, 16, 12), int32] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%638, dtype="int32") /* ty=Tensor[(12, 16, 12), int32] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %643 = cast(%636, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
  %644 = %629.2;
  %645 = %630.0;
  %646 = %631.0;
  %647 = %632.3;
  %648 = left_shift(%641, %642) /* ty=Tensor[(12, 16, 12), int32] */;
  %649 = acosh(%643) /* ty=Tensor[(12, 16, 12), float64] */;
  (%644, %645, %var_7755, %646, %647, %648, %649)
}

def @func_1451(%var_1439: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) {
  %650 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %651 = cast(%var_1439, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %652 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(12, 16, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %655 = rsqrt(%650) /* ty=Tensor[(12, 16, 12), float32] */;
  %656 = power(%653, %654) /* ty=Tensor[(12, 16, 12), float32] */;
  (%655, %656)
}

def @func_1103() -> Tensor[(14, 10, 7), float32] {
  %657 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %657.0
}

def @func_4586() -> Tensor[(14, 10, 7), float32] {
  %658 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %658.1
}

def @func_9300() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %659 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %660 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %661 = %659.0;
  %662 = %660.0;
  (%661, %662)
}

def @func_6373() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %663 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %664 = @func_5034() /* ty=Tensor[(14, 10, 7), float64] */;
  (%663, %664)
}

def @func_4751() -> (Tensor[(14, 10, 7), float32],) {
  %665 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %666 = %665.0;
  (%666,)
}

def @func_7259(%var_7184: Tensor[(8, 15, 15), uint32], %var_7185: Tensor[(8, 15, 15), uint32], %var_7256: float64) -> (Tensor[(8, 15, 15), uint32], Tensor[(14, 10, 7), bool], Tensor[(80), float64], float64) {
  %667 = cast(%var_7185, dtype="uint32") /* ty=Tensor[(8, 15, 15), uint32] */;
  %668 = shape_of(%var_7184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_7184, dtype="uint32") /* ty=Tensor[(8, 15, 15), uint32] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %671 = cast(%var_7256, dtype="float64") /* ty=float64 */;
  %672 = reshape(%671, newshape=[]) /* ty=float64 */;
  %673 = @func_3226(%672) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
  %674 = bitwise_or(%669, %670) /* ty=Tensor[(8, 15, 15), uint32] */;
  %675 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %676 = %673.3;
  (%674, %675, %676, %var_7256)
}

def @func_6924(%var_6853: Tensor[(2, 40), float64]) -> (Tensor[(2, 40), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(2, 14, 10), float32]) {
  %677 = cast(-9.96309f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %678 = cast(%var_6853, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %679 = reshape(%677, newshape=[]) /* ty=float64 */;
  %680 = reshape(%678, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %681 = @func_1090(%679, %680) /* ty=Tensor[(1, 16, 5), float64] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %683 = cast(-9.96309f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %684 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %685 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %686 = @func_6207() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) */;
  %687 = @func_5841() /* ty=Tensor[(2, 14, 10), int16] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %689 = asinh(%688) /* ty=Tensor[(2, 14, 10), float32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = logical_or(%692, %693) /* ty=Tensor[(2, 14, 10), bool] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %696 = floor_mod(%682, %683) /* ty=Tensor[(1, 16, 5), float64] */;
  %697 = %684.2;
  %698 = %685.0;
  %699 = %686.3;
  %700 = rsqrt(%695) /* ty=Tensor[(2, 14, 10), float32] */;
  (%var_6853, %696, %697, %698, %699, %700)
}

def @func_5976() -> (Tensor[(2, 14, 10), int16],) {
  %701 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  (%701,)
}

def @func_6757() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %702 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %703 = @func_6344() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %704 = %702.0;
  %705 = @func_5092() /* ty=Tensor[(14, 10, 7), float64] */;
  %706 = %703.0;
  (%704, %705, %706)
}

def @func_2326() -> (Tensor[(14, 10, 7), float64],) {
  %707 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %708 = %707.0;
  (%708,)
}

def @func_1571(%var_1557: Tensor[(16, 6, 11), uint16], %var_1558: Tensor[(16, 6, 11), uint16]) -> Tensor[(16, 6, 11), uint16] {
  %709 = cast(%var_1558, dtype="uint16") /* ty=Tensor[(16, 6, 11), uint16] */;
  %710 = shape_of(%var_1557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_1557, dtype="uint16") /* ty=Tensor[(16, 6, 11), uint16] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%711, %712) /* ty=Tensor[(16, 6, 11), uint16] */
}

def @func_859() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %713 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %714 = %713.0;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %716 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %717 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %718 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %719 = %718.0;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %721 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %722 = %721.1;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %724 = asin(%723) /* ty=Tensor[(14, 10, 7), float32] */;
  %725 = cast(%724, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %726 = log(%715) /* ty=Tensor[(14, 10, 7), float64] */;
  %727 = %716.0;
  %728 = %717.0;
  %729 = sigmoid(%720) /* ty=Tensor[(14, 10, 7), float32] */;
  %730 = acos(%725) /* ty=Tensor[(14, 10, 7), float64] */;
  (%726, %727, %728, %729, %730)
}

def @func_7911(%var_7851: Tensor[(7, 8, 4), int64]) -> (Tensor[(14, 10, 7), bool], Tensor[(7, 8, 4), float32], Tensor[(11, 11, 14), int16], Tensor[(1694), float32], Tensor[(2, 14, 10), int16]) {
  %731 = @func_2602() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %732 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 8, 4), int64] */, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
  %733 = shape_of(%var_7851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_7851, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = not_equal(%734, %735) /* ty=Tensor[(7, 8, 4), bool] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(7, 8, 4), float64] */;
  %738 = log2(%737) /* ty=Tensor[(7, 8, 4), float64] */;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(7, 8, 4), float32] */;
  %740 = cast(meta[relay.Constant][24] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %741 = cast(meta[relay.Constant][24] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %742 = reshape(%740, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %743 = reshape(%741, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %744 = @func_5435(%742, %743) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
  %745 = @func_5255() /* ty=(Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) */;
  %746 = %731.0;
  %747 = log(%739) /* ty=Tensor[(7, 8, 4), float32] */;
  %748 = %744.0;
  %749 = %745.0;
  (%746, %747, %748, meta[relay.Constant][24] /* ty=Tensor[(1694), float32] */, %749)
}

def @func_4659() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %750 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %751 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %752 = %750.0;
  %753 = @func_3815() /* ty=Tensor[(14, 10, 7), float32] */;
  %754 = %751.0;
  (%752, %753, %754)
}

def @func_6313() -> (Tensor[(14, 10, 7), float64],) {
  %755 = @func_4236() /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) */;
  %756 = %755.1;
  (%756,)
}

def @func_1338() -> (Tensor[(14, 10, 7), float64],) {
  %757 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %758 = %757.0;
  (%758,)
}

def @func_5954() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %759 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %760 = cast(%759, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %761 = rsqrt(%760) /* ty=Tensor[(14, 10, 7), float32] */;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %763 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  %764 = acosh(%762) /* ty=Tensor[(14, 10, 7), float32] */;
  (%763, %764)
}

def @func_223() -> (Tensor[(14, 10, 7), float32],) {
  %765 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %766 = %765.0;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %768 = atanh(%767) /* ty=Tensor[(14, 10, 7), float32] */;
  (%768,)
}

def @func_3796(%var_3700: Tensor[(4, 14, 1), float64], %var_3770: Tensor[(1, 3120), float64], %var_3776: Tensor[(330), bool], %var_3786: Tensor[(4, 14, 9), float32]) -> (Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) {
  %769 = cast(1.3919f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %770 = reshape(%769, newshape=[]) /* ty=float64 */;
  %771 = @func_3226(%770) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
  %772 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %773 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %774 = %773.7;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %776 = reshape(%775, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %777 = @func_463(%776) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %778 = %771.1;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %780 = reshape(%779, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %781 = @func_2190(%780) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
  %782 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %783 = cast(%var_3776, dtype="bool") /* ty=Tensor[(330), bool] */;
  %784 = %782.0;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %786 = reshape(%783, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), bool] */;
  %787 = reshape(%785, newshape=[980]) /* ty=Tensor[(980), float32] */;
  %788 = @func_1483(%786, %787) /* ty=(Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) */;
  %789 = cast(%var_3700, dtype="float64") /* ty=Tensor[(4, 14, 1), float64] */;
  %790 = log10(%789) /* ty=Tensor[(4, 14, 1), float64] */;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(4, 14, 1), float32] */;
  %792 = sinh(%791) /* ty=Tensor[(4, 14, 1), float32] */;
  %793 = cast(1.3919f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %794 = cast(%var_3770, dtype="float64") /* ty=Tensor[(1, 3120), float64] */;
  %795 = reshape(%793, newshape=[]) /* ty=float64 */;
  %796 = reshape(%794, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
  %797 = @func_3106(%795, %796) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) */;
  %798 = %797.7;
  %799 = cast(%792, dtype="int64") /* ty=Tensor[(4, 14, 1), int64] */;
  %800 = cast(%798, dtype="int64") /* ty=Tensor[(3120), int64] */;
  %801 = cast(%790, dtype="bool") /* ty=Tensor[(4, 14, 1), bool] */;
  %802 = cast(1.3919f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %803 = less_equal(%801, %802) /* ty=Tensor[(4, 14, 1), bool] */;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(4, 14, 1), float32] */;
  %805 = asin(%804) /* ty=Tensor[(4, 14, 1), float32] */;
  %806 = cast(%805, dtype="uint8") /* ty=Tensor[(4, 14, 1), uint8] */;
  %807 = cast(%var_3786, dtype="uint8") /* ty=Tensor[(4, 14, 9), uint8] */;
  %808 = %772.2;
  %809 = %777.1;
  %810 = %781.3;
  %811 = %788.0;
  %812 = minimum(%799, %800) /* ty=Tensor[(4, 14, 3120), int64] */;
  %813 = left_shift(%806, %807) /* ty=Tensor[(4, 14, 9), uint8] */;
  (%778, %808, %774, %809, %810, %784, %var_3770, %811, %var_3776, %812, %813)
}

def @func_75() -> (Tensor[(14, 10, 7), float64],) {
  %814 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %815 = erf(%814) /* ty=Tensor[(14, 10, 7), float64] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %817 = sinh(%816) /* ty=Tensor[(14, 10, 7), float64] */;
  (%817,)
}

def @func_5460() -> (Tensor[(14, 10, 7), float64],) {
  %818 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %819 = %818.0;
  (%819,)
}

def @func_8066() -> (Tensor[(14, 10, 7), float32],) {
  %820 = @func_3593() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %821 = %820.0;
  (%821,)
}

def @func_4236() -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) {
  %822 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
  %823 = %822.2;
  %824 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
  (%823, %824)
}

def @func_7360() -> (Tensor[(14, 10, 7), float32],) {
  %825 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %826 = %825.1;
  (%826,)
}

def @func_5841() -> Tensor[(2, 14, 10), int16] {
  @func_5517() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_5517() -> Tensor[(2, 14, 10), int16] {
  %827 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %827.2
}

def @func_5559() -> (Tensor[(14, 10, 7), float64],) {
  %828 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %829 = %828.3;
  (%829,)
}

def @func_894(%var_881: int8, %var_882: Tensor[(13, 12, 15), int8]) -> (Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) {
  %830 = cast(%var_881, dtype="int8") /* ty=int8 */;
  %831 = cast(%var_882, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
  %832 = cast(%var_881, dtype="bool") /* ty=bool */;
  %833 = cast(%var_882, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  %834 = left_shift(%830, %831) /* ty=Tensor[(13, 12, 15), int8] */;
  %835 = greater_equal(%832, %833) /* ty=Tensor[(13, 12, 15), bool] */;
  (%834, %835)
}

def @func_5349() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %836 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %837 = @func_3028() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %838 = %836.0;
  %839 = %837.1;
  (%838, %839)
}

def @func_4700() -> Tensor[(14, 10, 7), float64] {
  %840 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %840.0
}

def @func_3917() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
  %841 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %842 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %843 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %844 = %843.0;
  %845 = @func_3404() /* ty=Tensor[(14, 10, 7), float32] */;
  %846 = cast(%845, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %847 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%844, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %850 = %841.0;
  %851 = %842.0;
  %852 = greater(%848, %849) /* ty=Tensor[(14, 10, 7), bool] */;
  %853 = @func_3487() /* ty=Tensor[(14, 10, 7), float32] */;
  (%850, %851, %852, %853)
}

def @func_6577() -> Tensor[(14, 10, 7), float32] {
  %854 = @func_4751() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %854.0
}

def @func_7828() -> (Tensor[(14, 10, 7), float32],) {
  %855 = @func_4819() /* ty=Tensor[(14, 10, 7), float32] */;
  (%855,)
}

def @func_8103(%var_8093: Tensor[(1, 8, 9), uint64], %var_8094: Tensor[(3, 8, 9), uint64]) -> Tensor[(3, 8, 9), uint64] {
  %856 = cast(%var_8093, dtype="uint64") /* ty=Tensor[(1, 8, 9), uint64] */;
  %857 = cast(%var_8094, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
  maximum(%856, %857) /* ty=Tensor[(3, 8, 9), uint64] */
}

def @func_8008() -> Tensor[(14, 10, 7), float64] {
  %858 = @func_6757() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %858.2
}

def @func_1888() -> (Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) {
  %859 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %860 = cast(meta[relay.Constant][27] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
  %861 = reshape(%860, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %862 = @func_463(%861) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %863 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float32") /* ty=Tensor[(1, 2, 5), float32] */;
  %864 = asinh(%863) /* ty=Tensor[(1, 2, 5), float32] */;
  %865 = cast(%864, dtype="uint32") /* ty=Tensor[(1, 2, 5), uint32] */;
  %866 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(1, 2, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2, 5), float64] */, dtype="uint32") /* ty=Tensor[(1, 2, 5), uint32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %869 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %870 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%864, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %873 = power(%871, %872) /* ty=Tensor[(?, 2, 5), float64] */;
  %874 = cast(%873, dtype="int64") /* ty=Tensor[(?, 2, 5), int64] */;
  %875 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%864, dtype="int64") /* ty=Tensor[(1, 2, 5), int64] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %878 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), bool] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %879 = %862.4;
  %880 = cast(%879, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %881 = reshape(%878, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), bool] */;
  %882 = reshape(%880, newshape=[980]) /* ty=Tensor[(980), float32] */;
  %883 = @func_1483(%881, %882) /* ty=(Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) */;
  %884 = erf(%859) /* ty=Tensor[(1, 2, 5), float64] */;
  %885 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %886 = bitwise_xor(%867, %868) /* ty=Tensor[(?, 2, 5), uint32] */;
  %887 = bitwise_or(%876, %877) /* ty=Tensor[(?, 2, 5), int64] */;
  %888 = %883.1;
  (%884, %879, meta[relay.Constant][27] /* ty=Tensor[(980), float32] */, %885, %886, %887, %888, meta[relay.Constant][28] /* ty=Tensor[(330), bool] */)
}

def @func_5725(%var_5697: Tensor[(7, 13, 3), uint32], %var_5698: Tensor[(7, 13, 3), uint32], %var_5717: Tensor[(2340), int8]) -> (Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) {
  %889 = cast(%var_5698, dtype="uint32") /* ty=Tensor[(7, 13, 3), uint32] */;
  %890 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%var_5697, dtype="uint32") /* ty=Tensor[(7, 13, 3), uint32] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %893 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %894 = cast(%var_5717, dtype="int8") /* ty=Tensor[(2340), int8] */;
  %895 = reshape(%893, newshape=[]) /* ty=int8 */;
  %896 = reshape(%894, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), int8] */;
  %897 = @func_894(%895, %896) /* ty=(Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) */;
  %898 = maximum(%891, %892) /* ty=Tensor[(7, 13, 3), uint32] */;
  %899 = %897.0;
  (%898, %899, meta[relay.Constant][29] /* ty=int8 */, %var_5717)
}

def @func_376() -> (Tensor[(14, 10, 7), float64],) {
  %900 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %901 = %900.0;
  (%901,)
}

def @func_4912(%var_4854: Tensor[(3, 14, 9), int64], %var_4855: Tensor[(3, 14, 9), int64]) -> (Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) {
  %902 = cast(%var_4855, dtype="int64") /* ty=Tensor[(3, 14, 9), int64] */;
  %903 = shape_of(%var_4854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%var_4854, dtype="int64") /* ty=Tensor[(3, 14, 9), int64] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %906 = @func_1888() /* ty=(Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) */;
  %907 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %908 = @func_3642() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %909 = %907.1;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %911 = cast(meta[relay.Constant][30] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %912 = reshape(%910, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %913 = reshape(%911, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %914 = @func_1319(%912, %913) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %915 = logical_xor(%904, %905) /* ty=Tensor[(3, 14, 9), int64] */;
  %916 = %906.1;
  %917 = %908.0;
  %918 = %914.2;
  (%915, %916, %909, %917, %918, meta[relay.Constant][30] /* ty=Tensor[(80), float64] */)
}

def @func_4119() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %919 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %920 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %921 = %919.1;
  (%920, %921)
}

def @func_4509() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %922 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %923 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %924 = %922.0;
  %925 = %923.0;
  (%924, %925)
}

def @func_1520() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %926 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %927 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %928 = %926.0;
  %929 = %927.0;
  (%928, %929)
}

def @func_6162() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %930 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %931 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %932 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %933 = %930.0;
  %934 = %931.1;
  %935 = %932.0;
  (%933, %934, %935)
}

def @func_2009() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %936 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %937 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %938 = %936.4;
  %939 = %937.0;
  (%938, %939)
}

def @func_8779() -> Tensor[(14, 10, 7), float64] {
  %940 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %940.0
}

def @func_3443() -> (Tensor[(14, 10, 7), float32],) {
  %941 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %942 = %941.0;
  (%942,)
}

def @func_6699() -> (Tensor[(14, 10, 7), float64],) {
  %943 = @func_6626() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %944 = %943.0;
  (%944,)
}

def @func_3593() -> (Tensor[(14, 10, 7), float32],) {
  %945 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %946 = %945.0;
  (%946,)
}

def @func_8816() -> (Tensor[(14, 10, 7), float64],) {
  %947 = @func_4659() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %948 = %947.0;
  (%948,)
}

def @func_2470() -> Tensor[(14, 10, 7), float64] {
  %949 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %949.0
}

def @func_3264() -> Tensor[(14, 10, 7), float64] {
  %950 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %950.1
}

def @func_463(%var_426: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %951 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %952 = %951.0;
  %953 = cast(%var_426, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %958 = cast(%952, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %959 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %960 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %961 = not_equal(%955, %956) /* ty=Tensor[(14, 10, 7), bool] */;
  %962 = %957.0;
  %963 = atan(%958) /* ty=Tensor[(14, 10, 7), float64] */;
  %964 = %959.0;
  %965 = %960.0;
  (%961, %962, %963, %964, %965)
}

def @func_2856(%var_2816: Tensor[(2, 12, 8), float64], %var_2848: Tensor[(80), float64]) -> (Tensor[(2, 12, 8), float64], Tensor[(320), int32], Tensor[(14, 10, 7), float32], Tensor[(2, 12, 8), float32], Tensor[(14, 10, 7), int64], Tensor[(80), float64]) {
  %966 = cast(%var_2816, dtype="float64") /* ty=Tensor[(2, 12, 8), float64] */;
  %967 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(2, 12, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 8), float64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %970 = @func_2575() /* ty=(Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) */;
  %971 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %972 = cast(%var_2816, dtype="float32") /* ty=Tensor[(2, 12, 8), float32] */;
  %973 = %971.3;
  %974 = cast(%973, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %975 = cast(%var_2848, dtype="float64") /* ty=Tensor[(80), float64] */;
  %976 = reshape(%974, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %977 = reshape(%975, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %978 = @func_2765(%976, %977) /* ty=(Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %979 = mod(%968, %969) /* ty=Tensor[(2, 12, 8), float64] */;
  %980 = %970.1;
  %981 = erf(%972) /* ty=Tensor[(2, 12, 8), float32] */;
  %982 = %978.0;
  (%979, %980, %973, %981, %982, %var_2848)
}

def @func_4819() -> Tensor[(14, 10, 7), float32] {
  @func_3404() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_7150() -> (Tensor[(14, 10, 7), float32],) {
  %983 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %984 = %983.0;
  (%984,)
}

def @func_3404() -> Tensor[(14, 10, 7), float32] {
  %985 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %985.0
}

def @func_5566() -> (Tensor[(14, 10, 7), float64],) {
  %986 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %987 = %986.0;
  (%987,)
}

def @func_5671() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %988 = @func_4509() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %989 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %990 = %988.0;
  %991 = %989.1;
  (%990, %991)
}

def @func_139() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %992 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %995 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %996 = %995.0;
  %997 = cast(%993, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1001 = log10(%994) /* ty=Tensor[(14, 10, 7), float32] */;
  %1002 = power(%999, %1000) /* ty=Tensor[(14, 10, 7), float64] */;
  (%1001, %1002)
}

def @func_4065() -> (Tensor[(14, 10, 7), float64],) {
  %1003 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %1004 = %1003.1;
  %1005 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1009 = mod(%1007, %1008) /* ty=Tensor[(14, 10, 7), float64] */;
  (%1009,)
}

def @func_8149() -> (Tensor[(6, 15, 16), bool],) {
  %1010 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 16), bool] */;
  %1011 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(6, 15, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 16), bool] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1014 = logical_or(%1012, %1013) /* ty=Tensor[(6, 15, 16), bool] */;
  (%1014,)
}

def @main() -> (Tensor[(2, 15, 16), float32],) {
  %1015 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1016 = log2(%1015) /* ty=Tensor[(2, 15, 16), float32] */;
  (%1016,)
}

def @func_8991() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %1017 = @func_7150() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %1018 = @func_4236() /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) */;
  %1019 = %1017.0;
  %1020 = %1018.1;
  (%1019, %1020)
}

def @func_1483(%var_1459: Tensor[(2, 11, 15), bool], %var_1474: Tensor[(980), float32]) -> (Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) {
  %1021 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 11, 15), bool] */;
  %1022 = cast(%var_1459, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %1023 = logical_and(%1021, %1022) /* ty=Tensor[(2, 11, 15), bool] */;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(2, 11, 15), float64] */;
  %1025 = cast(%var_1474, dtype="float32") /* ty=Tensor[(980), float32] */;
  %1026 = reshape(%1025, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %1027 = @func_463(%1026) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %1028 = acos(%1024) /* ty=Tensor[(2, 11, 15), float64] */;
  %1029 = %1027.0;
  (%1028, %1029, %var_1474)
}

def @func_8654() -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) {
  %1030 = @func_7340() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) */;
  %1031 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %1032 = cast(meta[relay.Constant][37] /* ty=Tensor[(18, 100), float64] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %1033 = reshape(%1032, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float64] */;
  %1034 = @func_6686(%1033) /* ty=(Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %1035 = cast(5.12227f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1036 = reshape(%1035, newshape=[]) /* ty=float64 */;
  %1037 = @func_2410(%1036) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) */;
  %1038 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  %1039 = cast(%1038, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %1040 = %1030.4;
  %1041 = %1031.0;
  %1042 = %1034.0;
  %1043 = %1037.1;
  %1044 = log10(%1039) /* ty=Tensor[(2, 14, 10), float32] */;
  (%1040, %1041, %1042, meta[relay.Constant][37] /* ty=Tensor[(18, 100), float64] */, %1043, 5.12227f64 /* ty=float64 */, %1044)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_392() -> (Tensor[(14, 10, 7), float64],) {
  %2 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %0 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_8656() -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) {
  @func_8654() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) */
}

def @func_4989() -> (Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
  %3 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %4 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %5 = %3.2;
  %6 = %4.0;
  (%5, %6)
}

def @func_7998(%var_7995: Tensor[(13, 4, 1), bool], %var_7996: Tensor[(13, 4, 11), bool], %var_7997: Tensor[(1056), uint16]) -> (Tensor[(13, 4, 11), bool], Tensor[(14, 10, 7), float64], Tensor[(16, 6, 11), uint16], Tensor[(1056), uint16], Tensor[(2, 14, 10), int16]) {
  @func_7993(%var_7995, %var_7996, %var_7997) /* ty=(Tensor[(13, 4, 11), bool], Tensor[(14, 10, 7), float64], Tensor[(16, 6, 11), uint16], Tensor[(1056), uint16], Tensor[(2, 14, 10), int16]) */
}

def @func_4510() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %11 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %7 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %8 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %9 = %7.0;
    %10 = %8.0;
    (%9, %10)
  };
  %11() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_1220() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) {
  %21 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) {
    %12 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %13 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
    %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
    %16 = reshape(%14, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
    %17 = reshape(%15, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
    %18 = %12.0;
    %19 = %13.0;
    %20 = @func_621(%16, %17) /* ty=Tensor[(2, 14, 10), int16] */;
    (%18, %19, %20, meta[relay.Constant][0] /* ty=Tensor[(280), int16] */)
  };
  %21() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */
}

def @func_2577() -> (Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) {
  @func_2575() /* ty=(Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) */
}

def @func_8816() -> (Tensor[(14, 10, 7), float64],) {
  %22 = @func_4659() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %23 = %22.0;
  (%23,)
}

def @func_5560() -> (Tensor[(14, 10, 7), float64],) {
  %26 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %24 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %25 = %24.3;
    (%25,)
  };
  %26() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_2769(%var_2767: Tensor[(14, 10, 7), float32], %var_2768: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  @func_2765(%var_2767, %var_2768) /* ty=(Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */
}

def @func_5015() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_5013() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_6627() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %30 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %27 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %28 = %27.0;
    %29 = @func_3264() /* ty=Tensor[(14, 10, 7), float64] */;
    (%28, %29)
  };
  %30() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_6345() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %33 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %31 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
    %32 = @func_6006() /* ty=Tensor[(14, 10, 7), float64] */;
    (%31, %32)
  };
  %33() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_2193(%var_2191: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) {
  @func_2190(%var_2191) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */
}

def @func_5693() -> (Tensor[(14, 10, 7), float64],) {
  %36 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %34 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %35 = %34.1;
    (%35,)
  };
  %36() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_570() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_6701() -> (Tensor[(14, 10, 7), float64],) {
  @func_6699() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_6759() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_6757() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_8993() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_8991() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_8743() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  @func_8741() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_947() -> Tensor[(14, 10, 7), float64] {
  %37 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %37.0
}

def @func_5671() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %38 = @func_4509() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %39 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %40 = %38.0;
  %41 = %39.1;
  (%40, %41)
}

def @func_5841() -> Tensor[(2, 14, 10), int16] {
  @func_5517() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_8073() -> (Tensor[(14, 10, 7), float64],) {
  %42 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %43 = %42.0;
  (%43,)
}

def @func_6577() -> Tensor[(14, 10, 7), float32] {
  %44 = @func_4751() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %44.0
}

def @func_3595() -> (Tensor[(14, 10, 7), float32],) {
  @func_3593() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_5567() -> (Tensor[(14, 10, 7), float64],) {
  %47 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %45 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_8279() -> (Tensor[(2, 14, 10), int16],) {
  %49 = fn () -> (Tensor[(2, 14, 10), int16],) {
    %48 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
    (%48,)
  };
  %49() /* ty=(Tensor[(2, 14, 10), int16],) */
}

def @func_3643() -> (Tensor[(14, 10, 7), float64],) {
  %52 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %50 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %51 = %50.0;
    (%51,)
  };
  %52() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_3028() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %53 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %54 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %55 = %53.1;
  %56 = %54.0;
  (%55, %56)
}

def @func_4820() -> Tensor[(14, 10, 7), float32] {
  %57 = fn () -> Tensor[(14, 10, 7), float32] {
    @func_3404() /* ty=Tensor[(14, 10, 7), float32] */
  };
  %57() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_8928() -> Tensor[(14, 10, 7), float32] {
  %59 = fn () -> Tensor[(14, 10, 7), float32] {
    %58 = @func_7360() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %58.0
  };
  %59() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_9254() -> (Tensor[(14, 10, 7), float64],) {
  %60 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %61 = %60.0;
  (%61,)
}

def @func_759() -> (Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %62 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %63 = %62.0;
  %64 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 10, 7), float32] */, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %68 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %69 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %70 = subtract(%66, %67) /* ty=Tensor[(14, 10, 7), int8] */;
  %71 = %68.0;
  %72 = %69.0;
  (%70, %71, %72)
}

def @func_1756(%var_1739: Tensor[(80), float64], %var_1748: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) {
  %73 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %74 = %73.0;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %76 = cast(%var_1739, dtype="float64") /* ty=Tensor[(80), float64] */;
  %77 = reshape(%75, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %78 = reshape(%76, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %79 = @func_1319(%77, %78) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %80 = cast(%var_1748, dtype="float64") /* ty=float64 */;
  %81 = cast(%var_1739, dtype="float64") /* ty=Tensor[(80), float64] */;
  %82 = reshape(%80, newshape=[]) /* ty=float64 */;
  %83 = reshape(%81, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %84 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %85 = %84.0;
  %86 = cast(%var_1748, dtype="float64") /* ty=float64 */;
  %87 = cast(%85, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %88 = %79.2;
  %89 = @func_1090(%82, %83) /* ty=Tensor[(1, 16, 5), float64] */;
  %90 = floor_divide(%86, %87) /* ty=Tensor[(14, 10, 7), float64] */;
  (%74, %88, %var_1739, %89, %90)
}

def @func_3404() -> Tensor[(14, 10, 7), float32] {
  %91 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %91.0
}

def @func_8717(%var_8678: Tensor[(1, 11, 10), int8], %var_8679: Tensor[(4, 11, 10), int8], %var_8696: Tensor[(40, 2), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(980), float64], Tensor[(40, 2), float64], Tensor[(4, 11, 10), int32]) {
  %92 = cast(meta[relay.Constant][2] /* ty=Tensor[(980), float64] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %93 = cast(%var_8696, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %94 = reshape(%92, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %95 = reshape(%93, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %96 = @func_1319(%94, %95) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %97 = cast(%var_8678, dtype="int8") /* ty=Tensor[(1, 11, 10), int8] */;
  %98 = cast(%var_8679, dtype="int8") /* ty=Tensor[(4, 11, 10), int8] */;
  %99 = minimum(%97, %98) /* ty=Tensor[(4, 11, 10), int8] */;
  %100 = cast(%99, dtype="uint16") /* ty=Tensor[(4, 11, 10), uint16] */;
  %101 = shape_of(%var_8679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_8679, dtype="uint16") /* ty=Tensor[(4, 11, 10), uint16] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %104 = add(%102, %103) /* ty=Tensor[(4, 11, 10), uint16] */;
  %105 = cast(%99, dtype="int32") /* ty=Tensor[(4, 11, 10), int32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int32") /* ty=Tensor[(4, 11, 10), int32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %109 = %96.0;
  %110 = multiply(%107, %108) /* ty=Tensor[(4, 11, 10), int32] */;
  (%109, meta[relay.Constant][2] /* ty=Tensor[(980), float64] */, %var_8696, %110)
}

def @func_1008(%var_989: Tensor[(2, 16, 10), int32], %var_990: Tensor[(2, 16, 10), int32]) -> (Tensor[(2, 16, 10), int32],) {
  %111 = cast(%var_990, dtype="int32") /* ty=Tensor[(2, 16, 10), int32] */;
  %112 = shape_of(%var_989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_989, dtype="int32") /* ty=Tensor[(2, 16, 10), int32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %115 = bitwise_and(%113, %114) /* ty=Tensor[(2, 16, 10), int32] */;
  (%115,)
}

def @func_7170() -> (Tensor[(14, 10, 7), bool],) {
  @func_7168() /* ty=(Tensor[(14, 10, 7), bool],) */
}

def @func_5517() -> Tensor[(2, 14, 10), int16] {
  %116 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %116.2
}

def @func_2009() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %117 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %118 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %119 = %117.4;
  %120 = %118.0;
  (%119, %120)
}

def @func_3992(%var_3989: Tensor[(56, 1), float64], %var_3990: Tensor[(3120), float64], %var_3991: Tensor[(504), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) {
  @func_3987(%var_3989, %var_3990, %var_3991) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) */
}

def @func_4991() -> (Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
  @func_4989() /* ty=(Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_5439(%var_5437: Tensor[(11, 11, 14), float32], %var_5438: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) {
  @func_5435(%var_5437, %var_5438) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */
}

def @func_1113() -> (Tensor[(14, 10, 7), float64],) {
  %123 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %121 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %122 = %121.0;
    (%122,)
  };
  %123() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1522() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_4700() -> Tensor[(14, 10, 7), float64] {
  %124 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %124.0
}

def @func_9302() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_9300() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_7640(%var_7639: Tensor[(2, 14, 10), int16]) -> (Tensor[(14, 10, 7), float64], Tensor[(50, 15), float64], Tensor[(2, 14, 10), float32], Tensor[(14, 10, 7), bool]) {
  %137 = fn (%var_7610: Tensor[(2, 14, 10), int16]) -> (Tensor[(14, 10, 7), float64], Tensor[(50, 15), float64], Tensor[(2, 14, 10), float32], Tensor[(14, 10, 7), bool]) {
    %125 = cast(meta[relay.Constant][3] /* ty=Tensor[(50, 15), float64] */, dtype="float64") /* ty=Tensor[(50, 15), float64] */;
    %126 = reshape(%125, newshape=[750]) /* ty=Tensor[(750), float64] */;
    %127 = @func_7450(%126) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) */;
    %128 = @func_6107() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
    %129 = %128.1;
    %130 = cast(%var_7610, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
    %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
    %132 = cast(%129, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %134 = %127.0;
    %135 = divide(%132, %133) /* ty=Tensor[(2, 14, 10), float32] */;
    %136 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
    (%134, meta[relay.Constant][3] /* ty=Tensor[(50, 15), float64] */, %135, %136)
  };
  %137(%var_7639) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(50, 15), float64], Tensor[(2, 14, 10), float32], Tensor[(14, 10, 7), bool]) */
}

def @func_761() -> (Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_6062(%var_6042: Tensor[(1, 1694), float32], %var_6045: Tensor[(2, 1694), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(11, 11, 14), int16], Tensor[(2, 1694), bool], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  %138 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %139 = cast(%var_6042, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %140 = cast(%var_6042, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %141 = reshape(%139, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %142 = reshape(%140, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %143 = @func_5435(%141, %142) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
  %144 = cast(%var_6042, dtype="bool") /* ty=Tensor[(1, 1694), bool] */;
  %145 = cast(%var_6045, dtype="bool") /* ty=Tensor[(2, 1694), bool] */;
  %146 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %148 = reshape(%147, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %149 = @func_181(%148) /* ty=(Tensor[(14, 10, 7), bool],) */;
  %150 = %138.0;
  %151 = %143.0;
  %152 = greater(%144, %145) /* ty=Tensor[(2, 1694), bool] */;
  %153 = %149.0;
  (%150, %151, %152, %146, %153)
}

def @func_224() -> (Tensor[(14, 10, 7), float32],) {
  %158 = fn () -> (Tensor[(14, 10, 7), float32],) {
    %154 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %155 = %154.0;
    %156 = cast(%155, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %157 = atanh(%156) /* ty=Tensor[(14, 10, 7), float32] */;
    (%157,)
  };
  %158() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_5092() -> Tensor[(14, 10, 7), float64] {
  %159 = @func_4509() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %159.1
}

def @func_2919() -> (Tensor[(14, 10, 7), float64],) {
  %161 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %160 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
    (%160,)
  };
  %161() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_5673() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  @func_5671() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_2410(%var_2386: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) {
  %162 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %163 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %164 = cast(%var_2386, dtype="float64") /* ty=float64 */;
  %165 = reshape(%163, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %166 = reshape(%164, newshape=[]) /* ty=float64 */;
  %167 = @func_1756(%165, %166) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) */;
  %168 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %169 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %170 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 80), float64] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %171 = acosh(%170) /* ty=Tensor[(1, 80), float32] */;
  %172 = cast(%171, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %173 = cast(%var_2386, dtype="bool") /* ty=bool */;
  %174 = %162.0;
  %175 = %167.4;
  %176 = %168.0;
  %177 = %169.0;
  %178 = greater(%172, %173) /* ty=Tensor[(1, 80), bool] */;
  (%174, %175, %176, %177, %178)
}

def @func_4237() -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) {
  %182 = fn () -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) {
    %179 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
    %180 = %179.2;
    %181 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) */
}

def @func_4660() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %188 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
    %183 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %184 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %185 = %183.0;
    %186 = @func_3815() /* ty=Tensor[(14, 10, 7), float32] */;
    %187 = %184.0;
    (%185, %186, %187)
  };
  %188() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_1093(%var_1091: float64, %var_1092: Tensor[(1, 16, 5), float64]) -> Tensor[(1, 16, 5), float64] {
  %191 = fn (%var_1080: float64, %var_1081: Tensor[(1, 16, 5), float64]) -> Tensor[(1, 16, 5), float64] {
    %189 = cast(%var_1080, dtype="float64") /* ty=float64 */;
    %190 = cast(%var_1081, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    maximum(%189, %190) /* ty=Tensor[(1, 16, 5), float64] */
  };
  %191(%var_1091, %var_1092) /* ty=Tensor[(1, 16, 5), float64] */
}

def @func_6375() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_6373() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_6066(%var_6064: Tensor[(1, 1694), float32], %var_6065: Tensor[(2, 1694), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(11, 11, 14), int16], Tensor[(2, 1694), bool], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  @func_6062(%var_6064, %var_6065) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(11, 11, 14), int16], Tensor[(2, 1694), bool], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) */
}

def @func_6006() -> Tensor[(14, 10, 7), float64] {
  %192 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %192.0
}

def @func_1520() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %193 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %194 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %195 = %193.0;
  %196 = %194.0;
  (%195, %196)
}

def @func_6260() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(80), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
  %197 = @func_5566() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %198 = @func_4989() /* ty=(Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
  %199 = %197.0;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %201 = reshape(%200, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %202 = @func_463(%201) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %203 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %204 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %205 = %198.0;
  %206 = %202.0;
  %207 = %203.0;
  (%199, %204, %205, %206, %207)
}

def @func_7264(%var_7261: Tensor[(8, 15, 15), uint32], %var_7262: Tensor[(8, 15, 15), uint32], %var_7263: float64) -> (Tensor[(8, 15, 15), uint32], Tensor[(14, 10, 7), bool], Tensor[(80), float64], float64) {
  @func_7259(%var_7261, %var_7262, %var_7263) /* ty=(Tensor[(8, 15, 15), uint32], Tensor[(14, 10, 7), bool], Tensor[(80), float64], float64) */
}

def @func_2603() -> (Tensor[(14, 10, 7), bool],) {
  %209 = fn () -> (Tensor[(14, 10, 7), bool],) {
    %208 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
    (%208,)
  };
  %209() /* ty=(Tensor[(14, 10, 7), bool],) */
}

def @func_2575() -> (Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) {
  %210 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), int32] */, dtype="int32") /* ty=Tensor[(320), int32] */;
  %211 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), int32] */, dtype="int32") /* ty=Tensor[(320), int32] */;
  %212 = reshape(%210, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), int32] */;
  %213 = reshape(%211, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), int32] */;
  %214 = @func_1008(%212, %213) /* ty=(Tensor[(2, 16, 10), int32],) */;
  %215 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %216 = %215.0;
  %217 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 10, 7), float64] */, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%216, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %221 = %214.0;
  %222 = greater_equal(%219, %220) /* ty=Tensor[(14, 10, 7), bool] */;
  (%221, meta[relay.Constant][5] /* ty=Tensor[(320), int32] */, %222)
}

def @func_3201() -> Tensor[(2, 14, 10), int16] {
  @func_3199() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_1413() -> (Tensor[(14, 10, 7), float32],) {
  %223 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %224 = %223.3;
  (%224,)
}

def @func_5843() -> Tensor[(2, 14, 10), int16] {
  @func_5841() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_6208() -> (Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) {
  %237 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) {
    %225 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
    %226 = cast(meta[relay.Constant][7] /* ty=Tensor[(48, 48), float32] */, dtype="float32") /* ty=Tensor[(48, 48), float32] */;
    %227 = reshape(%226, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
    %228 = @func_1451(%227) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) */;
    %229 = %228.0;
    %230 = cast(%229, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
    %231 = cast(meta[relay.Constant][7] /* ty=Tensor[(48, 48), float32] */, dtype="float64") /* ty=Tensor[(48, 48), float64] */;
    %232 = @func_3443() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %233 = %225.0;
    %234 = erf(%230) /* ty=Tensor[(12, 16, 12), float64] */;
    %235 = sigmoid(%231) /* ty=Tensor[(48, 48), float64] */;
    %236 = %232.0;
    (%233, %234, %235, %236)
  };
  %237() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_8963() -> (float64, Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float32]) {
  %244 = fn () -> (float64, Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float32]) {
    %238 = @func_8654() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) */;
    %239 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
    %240 = @func_5954() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
    %241 = %238.5;
    %242 = %239.2;
    %243 = %240.0;
    (%241, %242, %243)
  };
  %244() /* ty=(float64, Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float32]) */
}

def @func_2655() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) {
  @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */
}

def @func_4201(%var_4199: Tensor[(16, 16, 11), int64], %var_4200: Tensor[(16, 16, 11), int64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(2, 14, 10), int16], float64) {
  %271 = fn (%var_4145: Tensor[(16, 16, 11), int64], %var_4146: Tensor[(16, 16, 11), int64]) -> (Tensor[(16, 16, 11), uint16], Tensor[(2, 14, 10), int16], float64) {
    %245 = cast(%var_4146, dtype="int64") /* ty=Tensor[(16, 16, 11), int64] */;
    %246 = shape_of(%var_4145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%var_4145, dtype="int64") /* ty=Tensor[(16, 16, 11), int64] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %249 = add(%247, %248) /* ty=Tensor[(16, 16, 11), int64] */;
    %250 = cast(%var_4145, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
    %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
    %252 = cast(%249, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %254 = subtract(%252, %253) /* ty=Tensor[(16, 16, 11), int8] */;
    %255 = cast(%249, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %257 = cast(%254, dtype="bool") /* ty=Tensor[(16, 16, 11), bool] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %259 = greater_equal(%257, %258) /* ty=Tensor[(16, 16, 11), bool] */;
    %260 = cast(%259, dtype="float64") /* ty=Tensor[(16, 16, 11), float64] */;
    %261 = sigmoid(%260) /* ty=Tensor[(16, 16, 11), float64] */;
    %262 = cast(%var_4146, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="uint16") /* ty=Tensor[(16, 16, 11), uint16] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %266 = cast(-3.79327f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %267 = reshape(%266, newshape=[]) /* ty=float64 */;
    %268 = @func_3226(%267) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
    %269 = bitwise_and(%264, %265) /* ty=Tensor[(16, 16, 11), uint16] */;
    %270 = %268.0;
    (%269, %270, -3.79327f64 /* ty=float64 */)
  };
  %271(%var_4199, %var_4200) /* ty=(Tensor[(16, 16, 11), uint16], Tensor[(2, 14, 10), int16], float64) */
}

def @func_8536(%var_8535: Tensor[(2048), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(8, 16, 16), float32], Tensor[(2048), float32]) {
  %278 = fn (%var_8522: Tensor[(2048), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(8, 16, 16), float32], Tensor[(2048), float32]) {
    %272 = @func_7360() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %273 = cast(%var_8522, dtype="float32") /* ty=Tensor[(2048), float32] */;
    %274 = reshape(%273, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float32] */;
    %275 = @func_1950(%274) /* ty=(Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) */;
    %276 = %272.0;
    %277 = %275.0;
    (%276, %277, %var_8522)
  };
  %278(%var_8535) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(8, 16, 16), float32], Tensor[(2048), float32]) */
}

def @func_3226(%var_3218: float64) -> (Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) {
  %279 = cast(%var_3218, dtype="float64") /* ty=float64 */;
  %280 = cast(meta[relay.Constant][8] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %281 = reshape(%279, newshape=[]) /* ty=float64 */;
  %282 = reshape(%280, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %283 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  %284 = @func_1090(%281, %282) /* ty=Tensor[(1, 16, 5), float64] */;
  %285 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  (%283, %284, %var_3218, meta[relay.Constant][8] /* ty=Tensor[(80), float64] */, %285)
}

def @func_3987(%var_3950: Tensor[(56, 1), float64], %var_3951: Tensor[(3120), float64], %var_3953: Tensor[(504), float32]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) {
  %286 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %287 = cast(%var_3950, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %288 = cast(%var_3951, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %289 = cast(meta[relay.Constant][9] /* ty=Tensor[(330), bool] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %290 = cast(%var_3953, dtype="float32") /* ty=Tensor[(504), float32] */;
  %291 = reshape(%287, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), float64] */;
  %292 = reshape(%288, newshape=[1, 3120]) /* ty=Tensor[(1, 3120), float64] */;
  %293 = reshape(%289, newshape=[330]) /* ty=Tensor[(330), bool] */;
  %294 = reshape(%290, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), float32] */;
  %295 = @func_3796(%291, %292, %293, %294) /* ty=(Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) */;
  %296 = cast(meta[relay.Constant][9] /* ty=Tensor[(330), bool] */, dtype="int16") /* ty=Tensor[(330), int16] */;
  %297 = cast(%var_3950, dtype="int16") /* ty=Tensor[(56, 1), int16] */;
  %298 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %299 = %286.0;
  %300 = @func_2470() /* ty=Tensor[(14, 10, 7), float64] */;
  %301 = %295.4;
  %302 = left_shift(%296, %297) /* ty=Tensor[(56, 330), int16] */;
  %303 = %298.2;
  (%299, %300, %301, %var_3951, %var_3953, %302, %303)
}

def @func_2261() -> Tensor[(14, 10, 7), float32] {
  %305 = fn () -> Tensor[(14, 10, 7), float32] {
    %304 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %304.0
  };
  %305() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_7168() -> (Tensor[(14, 10, 7), bool],) {
  %306 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%306,)
}

def @func_2491() -> Tensor[(14, 10, 7), bool] {
  @func_1979() /* ty=Tensor[(14, 10, 7), bool] */
}

def @func_624(%var_622: Tensor[(2, 14, 10), int16], %var_623: Tensor[(2, 14, 10), int16]) -> Tensor[(2, 14, 10), int16] {
  %311 = fn (%var_615: Tensor[(2, 14, 10), int16], %var_616: Tensor[(2, 14, 10), int16]) -> Tensor[(2, 14, 10), int16] {
    %307 = cast(%var_616, dtype="int16") /* ty=Tensor[(2, 14, 10), int16] */;
    %308 = shape_of(%var_615, dtype="int32") /* ty=Tensor[(3), int32] */;
    %309 = cast(%var_615, dtype="int16") /* ty=Tensor[(2, 14, 10), int16] */;
    %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    subtract(%309, %310) /* ty=Tensor[(2, 14, 10), int16] */
  };
  %311(%var_622, %var_623) /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_4120() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %315 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %312 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
    %313 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
    %314 = %312.1;
    (%313, %314)
  };
  %315() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_860() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %334 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
    %316 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
    %317 = %316.0;
    %318 = cast(%317, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %319 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %320 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %321 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %324 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
    %325 = %324.1;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %327 = asin(%326) /* ty=Tensor[(14, 10, 7), float32] */;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %329 = log(%318) /* ty=Tensor[(14, 10, 7), float64] */;
    %330 = %319.0;
    %331 = %320.0;
    %332 = sigmoid(%323) /* ty=Tensor[(14, 10, 7), float32] */;
    %333 = acos(%328) /* ty=Tensor[(14, 10, 7), float64] */;
    (%329, %330, %331, %332, %333)
  };
  %334() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_8722(%var_8719: Tensor[(1, 11, 10), int8], %var_8720: Tensor[(4, 11, 10), int8], %var_8721: Tensor[(40, 2), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(980), float64], Tensor[(40, 2), float64], Tensor[(4, 11, 10), int32]) {
  @func_8717(%var_8719, %var_8720, %var_8721) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(980), float64], Tensor[(40, 2), float64], Tensor[(4, 11, 10), int32]) */
}

def @func_5954() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %335 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %337 = rsqrt(%336) /* ty=Tensor[(14, 10, 7), float32] */;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %339 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  %340 = acosh(%338) /* ty=Tensor[(14, 10, 7), float32] */;
  (%339, %340)
}

def @func_2327() -> (Tensor[(14, 10, 7), float64],) {
  %343 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %341 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %342 = %341.0;
    (%342,)
  };
  %343() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_3030() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_3028() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_2987() -> (Tensor[(14, 10, 7), float32],) {
  %345 = fn () -> (Tensor[(14, 10, 7), float32],) {
    %344 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
    (%344,)
  };
  %345() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_5462() -> (Tensor[(14, 10, 7), float64],) {
  @func_5460() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1760(%var_1758: Tensor[(80), float64], %var_1759: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) {
  @func_1756(%var_1758, %var_1759) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_1979() -> Tensor[(14, 10, 7), bool] {
  %346 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %346.1
}

def @func_3817() -> Tensor[(14, 10, 7), float32] {
  @func_3815() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_9366(%var_9365: Tensor[(56), float64]) -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64], Tensor[(56), float64], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(14, 10, 7), float64]) {
  %359 = fn (%var_9330: Tensor[(56), float64]) -> (Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64], Tensor[(56), float64], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(14, 10, 7), float64]) {
    %347 = @func_2653() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) */;
    %348 = cast(%var_9330, dtype="float64") /* ty=Tensor[(56), float64] */;
    %349 = cast(meta[relay.Constant][10] /* ty=Tensor[(3120), float64] */, dtype="float64") /* ty=Tensor[(3120), float64] */;
    %350 = cast(meta[relay.Constant][11] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %351 = reshape(%348, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
    %352 = reshape(%349, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
    %353 = reshape(%350, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %354 = @func_3987(%351, %352, %353) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(56, 330), int16], Tensor[(14, 10, 7), bool]) */;
    %355 = @func_4659() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %356 = %347.2;
    %357 = %354.1;
    %358 = %355.0;
    (%356, %357, %var_9330, meta[relay.Constant][10] /* ty=Tensor[(3120), float64] */, meta[relay.Constant][11] /* ty=Tensor[(504), float32] */, %358)
  };
  %359(%var_9365) /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64], Tensor[(56), float64], Tensor[(3120), float64], Tensor[(504), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_7660() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %364 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %360 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %361 = @func_5692() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %362 = %360.0;
    %363 = %361.0;
    (%362, %363)
  };
  %364() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_4067() -> (Tensor[(14, 10, 7), float64],) {
  @func_4065() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_4753() -> (Tensor[(14, 10, 7), float32],) {
  @func_4751() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_4912(%var_4854: Tensor[(3, 14, 9), int64], %var_4855: Tensor[(3, 14, 9), int64]) -> (Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) {
  %365 = cast(%var_4855, dtype="int64") /* ty=Tensor[(3, 14, 9), int64] */;
  %366 = shape_of(%var_4854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_4854, dtype="int64") /* ty=Tensor[(3, 14, 9), int64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %369 = @func_1888() /* ty=(Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) */;
  %370 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %371 = @func_3642() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %372 = %370.1;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %374 = cast(meta[relay.Constant][12] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %375 = reshape(%373, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %376 = reshape(%374, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %377 = @func_1319(%375, %376) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %378 = logical_xor(%367, %368) /* ty=Tensor[(3, 14, 9), int64] */;
  %379 = %369.1;
  %380 = %371.0;
  %381 = %377.2;
  (%378, %379, %372, %380, %381, meta[relay.Constant][12] /* ty=Tensor[(80), float64] */)
}

def @func_8991() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %382 = @func_7150() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %383 = @func_4236() /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) */;
  %384 = %382.0;
  %385 = %383.1;
  (%384, %385)
}

def @func_6757() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %386 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %387 = @func_6344() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %388 = %386.0;
  %389 = @func_5092() /* ty=Tensor[(14, 10, 7), float64] */;
  %390 = %387.0;
  (%388, %389, %390)
}

def @func_1201() -> (Tensor[(14, 10, 7), float64],) {
  %393 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %391 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %392 = %391.0;
    (%392,)
  };
  %393() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_4256() -> Tensor[(14, 10, 7), float32] {
  %394 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %394.0
}

def @func_8135() -> Tensor[(14, 10, 7), float32] {
  @func_8133() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_2471() -> Tensor[(14, 10, 7), float64] {
  %396 = fn () -> Tensor[(14, 10, 7), float64] {
    %395 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %395.0
  };
  %396() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_8075() -> (Tensor[(14, 10, 7), float64],) {
  @func_8073() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_463(%var_426: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %397 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %398 = %397.0;
  %399 = cast(%var_426, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %404 = cast(%398, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %405 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %406 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %407 = not_equal(%401, %402) /* ty=Tensor[(14, 10, 7), bool] */;
  %408 = %403.0;
  %409 = atan(%404) /* ty=Tensor[(14, 10, 7), float64] */;
  %410 = %405.0;
  %411 = %406.0;
  (%407, %408, %409, %410, %411)
}

def @func_5405() -> Tensor[(14, 10, 7), float64] {
  @func_5403() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_3264() -> Tensor[(14, 10, 7), float64] {
  %412 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %412.1
}

def @func_7539() -> Tensor[(3, 14, 9), int64] {
  %414 = fn () -> Tensor[(3, 14, 9), int64] {
    %413 = @func_5859() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) */;
    %413.1
  };
  %414() /* ty=Tensor[(3, 14, 9), int64] */
}

def @func_1958() -> (Tensor[(14, 10, 7), float64],) {
  %415 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %416 = %415.0;
  (%416,)
}

def @func_5976() -> (Tensor[(2, 14, 10), int16],) {
  %417 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  (%417,)
}

def @func_1423() -> (Tensor[(14, 10, 7), float64],) {
  %420 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %418 = @func_391() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %419 = %418.0;
    (%419,)
  };
  %420() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1571(%var_1557: Tensor[(16, 6, 11), uint16], %var_1558: Tensor[(16, 6, 11), uint16]) -> Tensor[(16, 6, 11), uint16] {
  %421 = cast(%var_1558, dtype="uint16") /* ty=Tensor[(16, 6, 11), uint16] */;
  %422 = shape_of(%var_1557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_1557, dtype="uint16") /* ty=Tensor[(16, 6, 11), uint16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%423, %424) /* ty=Tensor[(16, 6, 11), uint16] */
}

def @func_7450(%var_7443: Tensor[(750), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) {
  %425 = @func_1822() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %426 = cast(%var_7443, dtype="float64") /* ty=Tensor[(750), float64] */;
  %427 = cast(%var_7443, dtype="float64") /* ty=Tensor[(750), float64] */;
  %428 = reshape(%426, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float64] */;
  %429 = reshape(%427, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float64] */;
  %430 = @func_7069(%428, %429) /* ty=(Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) */;
  %431 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %432 = %425.1;
  %433 = %430.0;
  %434 = %431.0;
  (%432, %433, %var_7443, %434)
}

def @func_7362() -> (Tensor[(14, 10, 7), float32],) {
  @func_7360() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_9249() -> Tensor[(48, 48), float64] {
  %435 = @func_6207() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) */;
  %435.2
}

def @func_1890() -> (Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) {
  @func_1888() /* ty=(Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) */
}

def @func_8066() -> (Tensor[(14, 10, 7), float32],) {
  %436 = @func_3593() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %437 = %436.0;
  (%437,)
}

def @func_466(%var_464: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_463(%var_464) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_2859(%var_2857: Tensor[(2, 12, 8), float64], %var_2858: Tensor[(80), float64]) -> (Tensor[(2, 12, 8), float64], Tensor[(320), int32], Tensor[(14, 10, 7), float32], Tensor[(2, 12, 8), float32], Tensor[(14, 10, 7), int64], Tensor[(80), float64]) {
  %455 = fn (%var_2816: Tensor[(2, 12, 8), float64], %var_2848: Tensor[(80), float64]) -> (Tensor[(2, 12, 8), float64], Tensor[(320), int32], Tensor[(14, 10, 7), float32], Tensor[(2, 12, 8), float32], Tensor[(14, 10, 7), int64], Tensor[(80), float64]) {
    %438 = cast(%var_2816, dtype="float64") /* ty=Tensor[(2, 12, 8), float64] */;
    %439 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2, 12, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 8), float64] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %442 = @func_2575() /* ty=(Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) */;
    %443 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %444 = cast(%var_2816, dtype="float32") /* ty=Tensor[(2, 12, 8), float32] */;
    %445 = %443.3;
    %446 = cast(%445, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %447 = cast(%var_2848, dtype="float64") /* ty=Tensor[(80), float64] */;
    %448 = reshape(%446, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
    %449 = reshape(%447, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %450 = @func_2765(%448, %449) /* ty=(Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
    %451 = mod(%440, %441) /* ty=Tensor[(2, 12, 8), float64] */;
    %452 = %442.1;
    %453 = erf(%444) /* ty=Tensor[(2, 12, 8), float32] */;
    %454 = %450.0;
    (%451, %452, %445, %453, %454, %var_2848)
  };
  %455(%var_2857, %var_2858) /* ty=(Tensor[(2, 12, 8), float64], Tensor[(320), int32], Tensor[(14, 10, 7), float32], Tensor[(2, 12, 8), float32], Tensor[(14, 10, 7), int64], Tensor[(80), float64]) */
}

def @func_6164() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_6162() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_3918() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
  %469 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
    %456 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %457 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %458 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %459 = %458.0;
    %460 = @func_3404() /* ty=Tensor[(14, 10, 7), float32] */;
    %461 = cast(%460, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
    %462 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%459, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %465 = %456.0;
    %466 = %457.0;
    %467 = greater(%463, %464) /* ty=Tensor[(14, 10, 7), bool] */;
    %468 = @func_3487() /* ty=Tensor[(14, 10, 7), float32] */;
    (%465, %466, %467, %468)
  };
  %469() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */
}

def @func_4715(%var_4713: int32, %var_4714: Tensor[(3, 11, 2), int32]) -> (Tensor[(3, 11, 2), bool], Tensor[(2, 14, 10), int16]) {
  @func_4711(%var_4713, %var_4714) /* ty=(Tensor[(3, 11, 2), bool], Tensor[(2, 14, 10), int16]) */
}

def @func_1952(%var_1951: Tensor[(8, 16, 16), float32]) -> (Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) {
  %477 = fn (%var_1932: Tensor[(8, 16, 16), float32]) -> (Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) {
    %470 = cast(%var_1932, dtype="float32") /* ty=Tensor[(8, 16, 16), float32] */;
    %471 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(8, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 16, 16), float32] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %474 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %475 = floor_divide(%472, %473) /* ty=Tensor[(8, 16, 16), float32] */;
    %476 = %474.0;
    (%475, %476)
  };
  %477(%var_1951) /* ty=(Tensor[(8, 16, 16), float32], Tensor[(14, 10, 7), float32]) */
}

def @func_3544() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %478 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %479 = %478.0;
  %480 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  (%479, %480)
}

def @func_8068() -> (Tensor[(14, 10, 7), float32],) {
  @func_8066() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_8741() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %481 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %482 = %481.0;
  %483 = @func_4586() /* ty=Tensor[(14, 10, 7), float32] */;
  (%482, %483)
}

def @func_5403() -> Tensor[(14, 10, 7), float64] {
  %484 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %484.0
}

def @func_568() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %485 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %486 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %487 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %488 = %485.0;
  %489 = %486.0;
  %490 = %487.0;
  (%488, %489, %490)
}

def @func_1822() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %491 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %492 = %491.0;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %494 = reshape(%493, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %495 = @func_463(%494) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %496 = %495.4;
  (%492, %496)
}

def @func_6008() -> Tensor[(14, 10, 7), float64] {
  @func_6006() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_3229(%var_3227: float64) -> (Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) {
  @func_3226(%var_3227) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */
}

def @func_2493() -> Tensor[(14, 10, 7), bool] {
  @func_2491() /* ty=Tensor[(14, 10, 7), bool] */
}

def @func_9300() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %497 = @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %498 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %499 = %497.0;
  %500 = %498.0;
  (%499, %500)
}

def @func_2011() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_2653() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), uint64]) {
  %501 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %502 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
  %503 = %502.1;
  %504 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="uint64") /* ty=Tensor[(14, 10, 7), uint64] */;
  %507 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%503, dtype="uint64") /* ty=Tensor[(14, 10, 7), uint64] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %510 = %501.4;
  %511 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
  %512 = minimum(%508, %509) /* ty=Tensor[(14, 10, 7), uint64] */;
  (%510, %511, %512)
}

def @func_6579() -> Tensor[(14, 10, 7), float32] {
  @func_6577() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_3406() -> Tensor[(14, 10, 7), float32] {
  @func_3404() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_3445() -> (Tensor[(14, 10, 7), float32],) {
  @func_3443() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_7993(%var_7958: Tensor[(13, 4, 1), bool], %var_7959: Tensor[(13, 4, 11), bool], %var_7977: Tensor[(1056), uint16]) -> (Tensor[(13, 4, 11), bool], Tensor[(14, 10, 7), float64], Tensor[(16, 6, 11), uint16], Tensor[(1056), uint16], Tensor[(2, 14, 10), int16]) {
  %513 = cast(%var_7958, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %514 = cast(%var_7959, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %515 = @func_6699() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %516 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %517 = cast(%var_7977, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %518 = reshape(%516, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), uint16] */;
  %519 = reshape(%517, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), uint16] */;
  %520 = logical_and(%513, %514) /* ty=Tensor[(13, 4, 11), bool] */;
  %521 = %515.0;
  %522 = @func_1571(%518, %519) /* ty=Tensor[(16, 6, 11), uint16] */;
  %523 = @func_5841() /* ty=Tensor[(2, 14, 10), int16] */;
  (%520, %521, %522, %var_7977, %523)
}

def @func_8010() -> Tensor[(14, 10, 7), float64] {
  @func_8008() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_2413(%var_2411: float64) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) {
  @func_2410(%var_2411) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) */
}

def @func_897(%var_895: int8, %var_896: Tensor[(13, 12, 15), int8]) -> (Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) {
  %530 = fn (%var_881: int8, %var_882: Tensor[(13, 12, 15), int8]) -> (Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) {
    %524 = cast(%var_881, dtype="int8") /* ty=int8 */;
    %525 = cast(%var_882, dtype="int8") /* ty=Tensor[(13, 12, 15), int8] */;
    %526 = cast(%var_881, dtype="bool") /* ty=bool */;
    %527 = cast(%var_882, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
    %528 = left_shift(%524, %525) /* ty=Tensor[(13, 12, 15), int8] */;
    %529 = greater_equal(%526, %527) /* ty=Tensor[(13, 12, 15), bool] */;
    (%528, %529)
  };
  %530(%var_895, %var_896) /* ty=(Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) */
}

def @func_6699() -> (Tensor[(14, 10, 7), float64],) {
  %531 = @func_6626() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %532 = %531.0;
  (%532,)
}

def @func_4415() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */
}

def @func_8780() -> Tensor[(14, 10, 7), float64] {
  %534 = fn () -> Tensor[(14, 10, 7), float64] {
    %533 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %533.0
  };
  %534() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_7453(%var_7451: Tensor[(750), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) {
  @func_7450(%var_7451) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), float64], Tensor[(750), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_1415() -> (Tensor[(14, 10, 7), float32],) {
  @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_139() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %535 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %538 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %539 = %538.0;
  %540 = cast(%536, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = log10(%537) /* ty=Tensor[(14, 10, 7), float32] */;
  %545 = power(%542, %543) /* ty=Tensor[(14, 10, 7), float64] */;
  (%544, %545)
}

def @func_5519() -> Tensor[(2, 14, 10), int16] {
  @func_5517() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_7072(%var_7070: Tensor[(5, 10, 15), float64], %var_7071: Tensor[(5, 10, 15), float64]) -> (Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) {
  %558 = fn (%var_7033: Tensor[(5, 10, 15), float64], %var_7034: Tensor[(5, 10, 15), float64]) -> (Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) {
    %546 = cast(%var_7034, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
    %547 = shape_of(%var_7033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %548 = cast(%var_7033, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
    %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %550 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %551 = cast(%var_7034, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
    %552 = shape_of(%var_7033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %553 = cast(%var_7033, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
    %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %555 = mod(%548, %549) /* ty=Tensor[(5, 10, 15), float64] */;
    %556 = %550.0;
    %557 = add(%553, %554) /* ty=Tensor[(5, 10, 15), uint16] */;
    (%555, %556, %557)
  };
  %558(%var_7070, %var_7071) /* ty=(Tensor[(5, 10, 15), float64], Tensor[(14, 10, 7), float64], Tensor[(5, 10, 15), uint16]) */
}

def @func_1104() -> Tensor[(14, 10, 7), float32] {
  %560 = fn () -> Tensor[(14, 10, 7), float32] {
    %559 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %559.0
  };
  %560() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_6107() -> (Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  %561 = @func_6006() /* ty=Tensor[(14, 10, 7), float64] */;
  %562 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  (%561, %562)
}

def @func_4413() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  %563 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %564 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %565 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %566 = %563.0;
  %567 = @func_3487() /* ty=Tensor[(14, 10, 7), float32] */;
  %568 = %564.1;
  %569 = %565.0;
  %570 = @func_3199() /* ty=Tensor[(2, 14, 10), int16] */;
  (%566, %567, %568, %569, %570)
}

def @func_8106(%var_8104: Tensor[(1, 8, 9), uint64], %var_8105: Tensor[(3, 8, 9), uint64]) -> Tensor[(3, 8, 9), uint64] {
  %573 = fn (%var_8093: Tensor[(1, 8, 9), uint64], %var_8094: Tensor[(3, 8, 9), uint64]) -> Tensor[(3, 8, 9), uint64] {
    %571 = cast(%var_8093, dtype="uint64") /* ty=Tensor[(1, 8, 9), uint64] */;
    %572 = cast(%var_8094, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
    maximum(%571, %572) /* ty=Tensor[(3, 8, 9), uint64] */
  };
  %573(%var_8104, %var_8105) /* ty=Tensor[(3, 8, 9), uint64] */
}

def @func_5350() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %578 = fn () -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
    %574 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
    %575 = @func_3028() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %576 = %574.0;
    %577 = %575.1;
    (%576, %577)
  };
  %578() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_377() -> (Tensor[(14, 10, 7), float64],) {
  %581 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %579 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %580 = %579.0;
    (%580,)
  };
  %581() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_7913(%var_7912: Tensor[(7, 8, 4), int64]) -> (Tensor[(14, 10, 7), bool], Tensor[(7, 8, 4), float32], Tensor[(11, 11, 14), int16], Tensor[(1694), float32], Tensor[(2, 14, 10), int16]) {
  %601 = fn (%var_7851: Tensor[(7, 8, 4), int64]) -> (Tensor[(14, 10, 7), bool], Tensor[(7, 8, 4), float32], Tensor[(11, 11, 14), int16], Tensor[(1694), float32], Tensor[(2, 14, 10), int16]) {
    %582 = @func_2602() /* ty=(Tensor[(14, 10, 7), bool],) */;
    %583 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 8, 4), int64] */, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
    %584 = shape_of(%var_7851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %585 = cast(%var_7851, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %587 = not_equal(%585, %586) /* ty=Tensor[(7, 8, 4), bool] */;
    %588 = cast(%587, dtype="float64") /* ty=Tensor[(7, 8, 4), float64] */;
    %589 = log2(%588) /* ty=Tensor[(7, 8, 4), float64] */;
    %590 = cast(%589, dtype="float32") /* ty=Tensor[(7, 8, 4), float32] */;
    %591 = cast(meta[relay.Constant][16] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %592 = cast(meta[relay.Constant][16] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %593 = reshape(%591, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %594 = reshape(%592, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %595 = @func_5435(%593, %594) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
    %596 = @func_5255() /* ty=(Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) */;
    %597 = %582.0;
    %598 = log(%590) /* ty=Tensor[(7, 8, 4), float32] */;
    %599 = %595.0;
    %600 = %596.0;
    (%597, %598, %599, meta[relay.Constant][16] /* ty=Tensor[(1694), float32] */, %600)
  };
  %601(%var_7912) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(7, 8, 4), float32], Tensor[(11, 11, 14), int16], Tensor[(1694), float32], Tensor[(2, 14, 10), int16]) */
}

def @func_1960() -> (Tensor[(14, 10, 7), float64],) {
  @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1322(%var_1320: Tensor[(14, 10, 7), float64], %var_1321: Tensor[(80, 1), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) {
  %626 = fn (%var_1255: Tensor[(14, 10, 7), float64], %var_1264: Tensor[(80, 1), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) {
    %602 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %603 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %604 = %602.0;
    %605 = cast(%604, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %606 = reshape(%605, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
    %607 = @func_463(%606) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %608 = %607.2;
    %609 = cast(%var_1255, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
    %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%608, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %613 = cast(-6.11533f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %614 = cast(%var_1264, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
    %615 = reshape(%613, newshape=[]) /* ty=float64 */;
    %616 = reshape(%614, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
    %617 = @func_1090(%615, %616) /* ty=Tensor[(1, 16, 5), float64] */;
    %618 = cast(%617, dtype="float32") /* ty=Tensor[(1, 16, 5), float32] */;
    %619 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
    %620 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %621 = %603.0;
    %622 = logical_xor(%611, %612) /* ty=Tensor[(14, 10, 7), int32] */;
    %623 = erf(%618) /* ty=Tensor[(1, 16, 5), float32] */;
    %624 = %619.0;
    %625 = %620.0;
    (%604, %621, %622, -6.11533f64 /* ty=float64 */, %var_1264, %623, %624, %625)
  };
  %626(%var_1320, %var_1321) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */
}

def @func_2949() -> Tensor[(2, 14, 10), int16] {
  %627 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %627.2
}

def @func_3546() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  @func_3544() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_3349() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %628 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %629 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %630 = %628.1;
  %631 = %629.0;
  (%630, %631)
}

def @func_8008() -> Tensor[(14, 10, 7), float64] {
  %632 = @func_6757() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %632.2
}

def @func_8150() -> (Tensor[(6, 15, 16), bool],) {
  %638 = fn () -> (Tensor[(6, 15, 16), bool],) {
    %633 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 16), bool] */;
    %634 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(6, 15, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %635 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 15, 16), bool] */;
    %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %637 = logical_or(%635, %636) /* ty=Tensor[(6, 15, 16), bool] */;
    (%637,)
  };
  %638() /* ty=(Tensor[(6, 15, 16), bool],) */
}

def @func_8567() -> Tensor[(14, 10, 7), float32] {
  %640 = fn () -> Tensor[(14, 10, 7), float32] {
    %639 = @func_5349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %639.0
  };
  %640() /* ty=Tensor[(14, 10, 7), float32] */
}

def @main() -> (Tensor[(2, 15, 16), float32],) {
  %641 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %642 = log2(%641) /* ty=Tensor[(2, 15, 16), float32] */;
  (%642,)
}

def @func_1012(%var_1010: Tensor[(2, 16, 10), int32], %var_1011: Tensor[(2, 16, 10), int32]) -> (Tensor[(2, 16, 10), int32],) {
  @func_1008(%var_1010, %var_1011) /* ty=(Tensor[(2, 16, 10), int32],) */
}

def @func_6262() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(80), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) {
  @func_6260() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(80), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */
}

def @func_2951() -> Tensor[(2, 14, 10), int16] {
  @func_2949() /* ty=Tensor[(2, 14, 10), int16] */
}

def @func_76() -> (Tensor[(14, 10, 7), float64],) {
  %647 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %643 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %644 = erf(%643) /* ty=Tensor[(14, 10, 7), float64] */;
    %645 = cast(%644, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %646 = sinh(%645) /* ty=Tensor[(14, 10, 7), float64] */;
    (%646,)
  };
  %647() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_3109(%var_3107: float64, %var_3108: Tensor[(3120), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) {
  %665 = fn (%var_3095: float64, %var_3096: Tensor[(3120), float64]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) {
    %648 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %649 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
    %650 = %649.0;
    %651 = cast(%650, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %652 = cast(meta[relay.Constant][21] /* ty=Tensor[(80, 1), float64] */, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
    %653 = reshape(%651, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
    %654 = reshape(%652, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
    %655 = @func_1319(%653, %654) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
    %656 = cast(%var_3095, dtype="float64") /* ty=float64 */;
    %657 = cast(%var_3096, dtype="float64") /* ty=Tensor[(3120), float64] */;
    %658 = reshape(%656, newshape=[]) /* ty=float64 */;
    %659 = reshape(%657, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
    %660 = @func_2810(%658, %659) /* ty=(Tensor[(13, 15, 16), float64],) */;
    %661 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
    %662 = %648.0;
    %663 = %655.6;
    %664 = %660.0;
    (%661, %662, %650, %663, meta[relay.Constant][21] /* ty=Tensor[(80, 1), float64] */, %664, %var_3095, %var_3096)
  };
  %665(%var_3107, %var_3108) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) */
}

def @func_7152() -> (Tensor[(14, 10, 7), float32],) {
  @func_7150() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_8603() -> (Tensor[(14, 10, 7), float32],) {
  @func_8601() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_7828() -> (Tensor[(14, 10, 7), float32],) {
  %666 = @func_4819() /* ty=Tensor[(14, 10, 7), float32] */;
  (%666,)
}

def @func_2123() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_253() -> (Tensor[(14, 10, 7), float64],) {
  %671 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %667 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %668 = %667.0;
    %669 = cast(%668, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
    %670 = sqrt(%669) /* ty=Tensor[(14, 10, 7), float64] */;
    (%670,)
  };
  %671() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1888() -> (Tensor[(1, 2, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(980), float32], Tensor[(14, 10, 7), float64], Tensor[(?, 2, 5), uint32], Tensor[(?, 2, 5), int64], Tensor[(14, 10, 7), bool], Tensor[(330), bool]) {
  %672 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %673 = cast(meta[relay.Constant][23] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
  %674 = reshape(%673, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %675 = @func_463(%674) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %676 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float32") /* ty=Tensor[(1, 2, 5), float32] */;
  %677 = asinh(%676) /* ty=Tensor[(1, 2, 5), float32] */;
  %678 = cast(%677, dtype="uint32") /* ty=Tensor[(1, 2, 5), uint32] */;
  %679 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(1, 2, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2, 5), float64] */, dtype="uint32") /* ty=Tensor[(1, 2, 5), uint32] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %682 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %683 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%677, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %686 = power(%684, %685) /* ty=Tensor[(?, 2, 5), float64] */;
  %687 = cast(%686, dtype="int64") /* ty=Tensor[(?, 2, 5), int64] */;
  %688 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%677, dtype="int64") /* ty=Tensor[(1, 2, 5), int64] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %691 = cast(meta[relay.Constant][24] /* ty=Tensor[(330), bool] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %692 = %675.4;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %694 = reshape(%691, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), bool] */;
  %695 = reshape(%693, newshape=[980]) /* ty=Tensor[(980), float32] */;
  %696 = @func_1483(%694, %695) /* ty=(Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) */;
  %697 = erf(%672) /* ty=Tensor[(1, 2, 5), float64] */;
  %698 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %699 = bitwise_xor(%680, %681) /* ty=Tensor[(?, 2, 5), uint32] */;
  %700 = bitwise_or(%689, %690) /* ty=Tensor[(?, 2, 5), int64] */;
  %701 = %696.1;
  (%697, %692, meta[relay.Constant][23] /* ty=Tensor[(980), float32] */, %698, %699, %700, %701, meta[relay.Constant][24] /* ty=Tensor[(330), bool] */)
}

def @func_6924(%var_6853: Tensor[(2, 40), float64]) -> (Tensor[(2, 40), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(2, 14, 10), float32]) {
  %702 = cast(-9.96309f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %703 = cast(%var_6853, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %704 = reshape(%702, newshape=[]) /* ty=float64 */;
  %705 = reshape(%703, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %706 = @func_1090(%704, %705) /* ty=Tensor[(1, 16, 5), float64] */;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %708 = cast(-9.96309f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %709 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
  %710 = @func_1413() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %711 = @func_6207() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), float64], Tensor[(48, 48), float64], Tensor[(14, 10, 7), float32]) */;
  %712 = @func_5841() /* ty=Tensor[(2, 14, 10), int16] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %714 = asinh(%713) /* ty=Tensor[(2, 14, 10), float32] */;
  %715 = cast(%712, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %719 = logical_or(%717, %718) /* ty=Tensor[(2, 14, 10), bool] */;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %721 = floor_mod(%707, %708) /* ty=Tensor[(1, 16, 5), float64] */;
  %722 = %709.2;
  %723 = %710.0;
  %724 = %711.3;
  %725 = rsqrt(%720) /* ty=Tensor[(2, 14, 10), float32] */;
  (%var_6853, %721, %722, %723, %724, %725)
}

def @func_8601() -> (Tensor[(14, 10, 7), float32],) {
  %726 = @func_4819() /* ty=Tensor[(14, 10, 7), float32] */;
  (%726,)
}

def @func_4711(%var_4703: int32, %var_4704: Tensor[(3, 11, 2), int32]) -> (Tensor[(3, 11, 2), bool], Tensor[(2, 14, 10), int16]) {
  %727 = cast(%var_4703, dtype="bool") /* ty=bool */;
  %728 = cast(%var_4704, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %729 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %730 = greater_equal(%727, %728) /* ty=Tensor[(3, 11, 2), bool] */;
  %731 = %729.4;
  (%730, %731)
}

def @func_2190(%var_2162: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) {
  %732 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %733 = @func_1422() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %734 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %735 = %732.0;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %737 = cast(%var_2162, dtype="float64") /* ty=Tensor[(80), float64] */;
  %738 = reshape(%736, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float64] */;
  %739 = reshape(%737, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %740 = @func_1319(%738, %739) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], float64, Tensor[(80, 1), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64]) */;
  %741 = %733.0;
  %742 = %734.2;
  %743 = %740.5;
  %744 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  (%735, %741, %742, %743, %var_2162, %744)
}

def @func_3199() -> Tensor[(2, 14, 10), int16] {
  %745 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %745.2
}

def @func_5257() -> (Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) {
  @func_5255() /* ty=(Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) */
}

def @func_5860() -> (Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) {
  %754 = fn () -> (Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) {
    %746 = @func_3917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32]) */;
    %747 = cast(meta[relay.Constant][25] /* ty=Tensor[(378), int64] */, dtype="int64") /* ty=Tensor[(378), int64] */;
    %748 = cast(meta[relay.Constant][25] /* ty=Tensor[(378), int64] */, dtype="int64") /* ty=Tensor[(378), int64] */;
    %749 = reshape(%747, newshape=[3, 14, 9]) /* ty=Tensor[(3, 14, 9), int64] */;
    %750 = reshape(%748, newshape=[3, 14, 9]) /* ty=Tensor[(3, 14, 9), int64] */;
    %751 = @func_4912(%749, %750) /* ty=(Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) */;
    %752 = %746.2;
    %753 = %751.0;
    (%752, %753, meta[relay.Constant][25] /* ty=Tensor[(378), int64] */)
  };
  %754() /* ty=(Tensor[(14, 10, 7), bool], Tensor[(3, 14, 9), int64], Tensor[(378), int64]) */
}

def @func_4258() -> Tensor[(14, 10, 7), float32] {
  @func_4256() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_1981() -> Tensor[(14, 10, 7), bool] {
  @func_1979() /* ty=Tensor[(14, 10, 7), bool] */
}

def @func_8883() -> (Tensor[(14, 10, 7), float64],) {
  %755 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  (%755,)
}

def @func_3674() -> (Tensor[(14, 10, 7), float32],) {
  %756 = @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */;
  %757 = %756.1;
  (%757,)
}

def @func_7527() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %766 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
    %758 = @func_5460() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %759 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %760 = @func_4065() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %761 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %762 = %758.0;
    %763 = %759.0;
    %764 = %760.0;
    %765 = %761.0;
    (%762, %763, %764, %765)
  };
  %766() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_6162() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %767 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %768 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
  %769 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %770 = %767.0;
  %771 = %768.1;
  %772 = %769.0;
  (%770, %771, %772)
}

def @func_3801(%var_3797: Tensor[(4, 14, 1), float64], %var_3798: Tensor[(1, 3120), float64], %var_3799: Tensor[(330), bool], %var_3800: Tensor[(4, 14, 9), float32]) -> (Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) {
  %818 = fn (%var_3700: Tensor[(4, 14, 1), float64], %var_3770: Tensor[(1, 3120), float64], %var_3776: Tensor[(330), bool], %var_3786: Tensor[(4, 14, 9), float32]) -> (Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) {
    %773 = cast(1.3919f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %774 = reshape(%773, newshape=[]) /* ty=float64 */;
    %775 = @func_3226(%774) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
    %776 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %777 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %778 = %777.7;
    %779 = cast(%778, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %780 = reshape(%779, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
    %781 = @func_463(%780) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %782 = %775.1;
    %783 = cast(%782, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    %784 = reshape(%783, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %785 = @func_2190(%784) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
    %786 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %787 = cast(%var_3776, dtype="bool") /* ty=Tensor[(330), bool] */;
    %788 = %786.0;
    %789 = cast(%788, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %790 = reshape(%787, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), bool] */;
    %791 = reshape(%789, newshape=[980]) /* ty=Tensor[(980), float32] */;
    %792 = @func_1483(%790, %791) /* ty=(Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) */;
    %793 = cast(%var_3700, dtype="float64") /* ty=Tensor[(4, 14, 1), float64] */;
    %794 = log10(%793) /* ty=Tensor[(4, 14, 1), float64] */;
    %795 = cast(%794, dtype="float32") /* ty=Tensor[(4, 14, 1), float32] */;
    %796 = sinh(%795) /* ty=Tensor[(4, 14, 1), float32] */;
    %797 = cast(1.3919f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %798 = cast(%var_3770, dtype="float64") /* ty=Tensor[(1, 3120), float64] */;
    %799 = reshape(%797, newshape=[]) /* ty=float64 */;
    %800 = reshape(%798, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
    %801 = @func_3106(%799, %800) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool], Tensor[(80, 1), float64], Tensor[(13, 15, 16), float64], float64, Tensor[(3120), float64]) */;
    %802 = %801.7;
    %803 = cast(%796, dtype="int64") /* ty=Tensor[(4, 14, 1), int64] */;
    %804 = cast(%802, dtype="int64") /* ty=Tensor[(3120), int64] */;
    %805 = cast(%794, dtype="bool") /* ty=Tensor[(4, 14, 1), bool] */;
    %806 = cast(1.3919f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %807 = less_equal(%805, %806) /* ty=Tensor[(4, 14, 1), bool] */;
    %808 = cast(%807, dtype="float32") /* ty=Tensor[(4, 14, 1), float32] */;
    %809 = asin(%808) /* ty=Tensor[(4, 14, 1), float32] */;
    %810 = cast(%809, dtype="uint8") /* ty=Tensor[(4, 14, 1), uint8] */;
    %811 = cast(%var_3786, dtype="uint8") /* ty=Tensor[(4, 14, 9), uint8] */;
    %812 = %776.2;
    %813 = %781.1;
    %814 = %785.3;
    %815 = %792.0;
    %816 = minimum(%803, %804) /* ty=Tensor[(4, 14, 3120), int64] */;
    %817 = left_shift(%810, %811) /* ty=Tensor[(4, 14, 9), uint8] */;
    (%782, %812, %778, %813, %814, %788, %var_3770, %815, %var_3776, %816, %817)
  };
  %818(%var_3797, %var_3798, %var_3799, %var_3800) /* ty=(Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(1, 16, 5), float32], Tensor[(14, 10, 7), float32], Tensor[(1, 3120), float64], Tensor[(2, 11, 15), float64], Tensor[(330), bool], Tensor[(4, 14, 3120), int64], Tensor[(4, 14, 9), uint8]) */
}

def @func_5460() -> (Tensor[(14, 10, 7), float64],) {
  %819 = @func_1338() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %820 = %819.0;
  (%820,)
}

def @func_3443() -> (Tensor[(14, 10, 7), float32],) {
  %821 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %822 = %821.0;
  (%822,)
}

def @func_7002(%var_7000: Tensor[(16, 14, 8), uint64], %var_7001: Tensor[(16, 14, 8), uint64]) -> (Tensor[(16, 14, 8), int64], Tensor[(16, 14, 8), float32], Tensor[(14, 10, 7), float32], Tensor[(16, 14, 8), float64], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16], Tensor[(5, 56), int16]) {
  %845 = fn (%var_6944: Tensor[(16, 14, 8), uint64], %var_6945: Tensor[(16, 14, 8), uint64]) -> (Tensor[(16, 14, 8), int64], Tensor[(16, 14, 8), float32], Tensor[(14, 10, 7), float32], Tensor[(16, 14, 8), float64], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16], Tensor[(5, 56), int16]) {
    %823 = cast(%var_6945, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
    %824 = shape_of(%var_6944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %825 = cast(%var_6944, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %827 = bitwise_xor(%825, %826) /* ty=Tensor[(16, 14, 8), uint64] */;
    %828 = cast(%827, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
    %829 = shape_of(%var_6945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %830 = cast(%var_6945, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
    %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %832 = cast(%var_6944, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
    %833 = cast(%var_6945, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
    %834 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %835 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 56), int16] */, dtype="int16") /* ty=Tensor[(5, 56), int16] */;
    %836 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 56), int16] */, dtype="int16") /* ty=Tensor[(5, 56), int16] */;
    %837 = reshape(%835, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
    %838 = reshape(%836, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
    %839 = add(%830, %831) /* ty=Tensor[(16, 14, 8), int64] */;
    %840 = acos(%832) /* ty=Tensor[(16, 14, 8), float32] */;
    %841 = @func_4256() /* ty=Tensor[(14, 10, 7), float32] */;
    %842 = asinh(%833) /* ty=Tensor[(16, 14, 8), float64] */;
    %843 = %834.1;
    %844 = @func_621(%837, %838) /* ty=Tensor[(2, 14, 10), int16] */;
    (%839, %840, %841, %842, %843, %844, meta[relay.Constant][26] /* ty=Tensor[(5, 56), int16] */)
  };
  %845(%var_7000, %var_7001) /* ty=(Tensor[(16, 14, 8), int64], Tensor[(16, 14, 8), float32], Tensor[(14, 10, 7), float32], Tensor[(16, 14, 8), float64], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16], Tensor[(5, 56), int16]) */
}

def @func_5255() -> (Tensor[(2, 14, 10), int16], Tensor[(280), int16], Tensor[(14, 10, 7), int8]) {
  %846 = cast(meta[relay.Constant][27] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %847 = cast(meta[relay.Constant][27] /* ty=Tensor[(280), int16] */, dtype="int16") /* ty=Tensor[(280), int16] */;
  %848 = reshape(%846, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %849 = reshape(%847, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), int16] */;
  %850 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %851 = %850.1;
  %852 = @func_3544() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %853 = %852.1;
  %854 = cast(%853, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %855 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%851, dtype="int8") /* ty=Tensor[(14, 10, 7), int8] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %858 = @func_621(%848, %849) /* ty=Tensor[(2, 14, 10), int16] */;
  %859 = left_shift(%856, %857) /* ty=Tensor[(14, 10, 7), int8] */;
  (%858, meta[relay.Constant][27] /* ty=Tensor[(280), int16] */, %859)
}

def @func_7150() -> (Tensor[(14, 10, 7), float32],) {
  %860 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %861 = %860.0;
  (%861,)
}

def @func_3815() -> Tensor[(14, 10, 7), float32] {
  @func_3404() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_9037() -> Tensor[(14, 10, 7), float64] {
  %863 = fn () -> Tensor[(14, 10, 7), float64] {
    %862 = @func_6313() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %862.0
  };
  %863() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_4587() -> Tensor[(14, 10, 7), float32] {
  %865 = fn () -> Tensor[(14, 10, 7), float32] {
    %864 = @func_4413() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */;
    %864.1
  };
  %865() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_8818() -> (Tensor[(14, 10, 7), float64],) {
  @func_8816() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_8654() -> (Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(15, 10, 12), float64], Tensor[(18, 100), float64], Tensor[(14, 10, 7), float64], float64, Tensor[(2, 14, 10), float32]) {
  %866 = @func_7340() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) */;
  %867 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %868 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 100), float64] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %869 = reshape(%868, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float64] */;
  %870 = @func_6686(%869) /* ty=(Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %871 = cast(5.12227f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %872 = reshape(%871, newshape=[]) /* ty=float64 */;
  %873 = @func_2410(%872) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(1, 80), bool]) */;
  %874 = @func_2949() /* ty=Tensor[(2, 14, 10), int16] */;
  %875 = cast(%874, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %876 = %866.4;
  %877 = %867.0;
  %878 = %870.0;
  %879 = %873.1;
  %880 = log10(%875) /* ty=Tensor[(2, 14, 10), float32] */;
  (%876, %877, %878, meta[relay.Constant][28] /* ty=Tensor[(18, 100), float64] */, %879, 5.12227f64 /* ty=float64 */, %880)
}

def @func_7340() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  %881 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %882 = @func_4119() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %883 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %884 = @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %885 = @func_7168() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %886 = %881.0;
  %887 = %882.0;
  %888 = %883.0;
  %889 = %884.0;
  %890 = %885.0;
  (%886, %887, %888, %889, %890)
}

def @func_3593() -> (Tensor[(14, 10, 7), float32],) {
  %891 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %892 = %891.0;
  (%892,)
}

def @func_7814(%var_7755: Tensor[(576, 4), float32], %var_7800: Tensor[(12, 16, 12), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(576, 4), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), int32], Tensor[(12, 16, 12), float64]) {
  %893 = @func_568() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */;
  %894 = @func_2602() /* ty=(Tensor[(14, 10, 7), bool],) */;
  %895 = @func_7150() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %896 = @func_2121() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %897 = cast(%var_7755, dtype="float32") /* ty=Tensor[(576, 4), float32] */;
  %898 = reshape(%897, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %899 = @func_1451(%898) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) */;
  %900 = %899.1;
  %901 = cast(%900, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %902 = sigmoid(%901) /* ty=Tensor[(12, 16, 12), float32] */;
  %903 = cast(%var_7800, dtype="int32") /* ty=Tensor[(12, 16, 12), int32] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%902, dtype="int32") /* ty=Tensor[(12, 16, 12), int32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %907 = cast(%900, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
  %908 = %893.2;
  %909 = %894.0;
  %910 = %895.0;
  %911 = %896.3;
  %912 = left_shift(%905, %906) /* ty=Tensor[(12, 16, 12), int32] */;
  %913 = acosh(%907) /* ty=Tensor[(12, 16, 12), float64] */;
  (%908, %909, %var_7755, %910, %911, %912, %913)
}

def @func_9256() -> (Tensor[(14, 10, 7), float64],) {
  @func_9254() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_4373() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
  %917 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) {
    %914 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %915 = @func_3264() /* ty=Tensor[(14, 10, 7), float64] */;
    %916 = %914.0;
    (%915, %916)
  };
  %917() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_5035() -> Tensor[(14, 10, 7), float64] {
  %919 = fn () -> Tensor[(14, 10, 7), float64] {
    %918 = @func_2009() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
    %918.0
  };
  %919() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_7259(%var_7184: Tensor[(8, 15, 15), uint32], %var_7185: Tensor[(8, 15, 15), uint32], %var_7256: float64) -> (Tensor[(8, 15, 15), uint32], Tensor[(14, 10, 7), bool], Tensor[(80), float64], float64) {
  %920 = cast(%var_7185, dtype="uint32") /* ty=Tensor[(8, 15, 15), uint32] */;
  %921 = shape_of(%var_7184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%var_7184, dtype="uint32") /* ty=Tensor[(8, 15, 15), uint32] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %924 = cast(%var_7256, dtype="float64") /* ty=float64 */;
  %925 = reshape(%924, newshape=[]) /* ty=float64 */;
  %926 = @func_3226(%925) /* ty=(Tensor[(2, 14, 10), int16], Tensor[(1, 16, 5), float64], float64, Tensor[(80), float64], Tensor[(2, 14, 10), int16]) */;
  %927 = bitwise_or(%922, %923) /* ty=Tensor[(8, 15, 15), uint32] */;
  %928 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %929 = %926.3;
  (%927, %928, %929, %var_7256)
}

def @func_4751() -> (Tensor[(14, 10, 7), float32],) {
  %930 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %931 = %930.0;
  (%931,)
}

def @func_5013() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %932 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %933 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %934 = %932.3;
  %935 = %933.0;
  (%934, %935)
}

def @func_6109() -> (Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) {
  @func_6107() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(2, 14, 10), int16]) */
}

def @func_8885() -> (Tensor[(14, 10, 7), float64],) {
  @func_8883() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_497() -> (Tensor[(14, 10, 7), bool],) {
  %936 = @func_223() /* ty=(Tensor[(14, 10, 7), float32],) */;
  %937 = %936.0;
  %938 = @func_252() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %939 = %938.0;
  %940 = cast(%939, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %941 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%937, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = equal(%942, %943) /* ty=Tensor[(14, 10, 7), bool] */;
  (%944,)
}

def @func_1487(%var_1485: Tensor[(2, 11, 15), bool], %var_1486: Tensor[(980), float32]) -> (Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) {
  @func_1483(%var_1485, %var_1486) /* ty=(Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) */
}

def @func_3351() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  @func_3349() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */
}

def @func_141() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_4702() -> Tensor[(14, 10, 7), float64] {
  @func_4700() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_7342() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) {
  @func_7340() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), bool]) */
}

def @func_9251() -> Tensor[(48, 48), float64] {
  @func_9249() /* ty=Tensor[(48, 48), float64] */
}

def @func_4065() -> (Tensor[(14, 10, 7), float64],) {
  %945 = @func_1520() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %946 = %945.1;
  %947 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="float64") /* ty=Tensor[(14, 10, 7), float64] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %951 = mod(%949, %950) /* ty=Tensor[(14, 10, 7), float64] */;
  (%951,)
}

def @func_4577() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
  %960 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) {
    %952 = @func_2918() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %953 = cast(meta[relay.Constant][30] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %954 = reshape(%953, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %955 = @func_2190(%954) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
    %956 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %957 = %952.0;
    %958 = %955.5;
    %959 = %956.1;
    (%957, %958, meta[relay.Constant][30] /* ty=Tensor[(80), float64] */, %959)
  };
  %960() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */
}

def @func_6373() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  %961 = @func_947() /* ty=Tensor[(14, 10, 7), float64] */;
  %962 = @func_5034() /* ty=Tensor[(14, 10, 7), float64] */;
  (%961, %962)
}

def @func_3488() -> Tensor[(14, 10, 7), float32] {
  %963 = fn () -> Tensor[(14, 10, 7), float32] {
    @func_1103() /* ty=Tensor[(14, 10, 7), float32] */
  };
  %963() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_2121() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %964 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %965 = @func_1219() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int8], Tensor[(2, 14, 10), int16], Tensor[(280), int16]) */;
  %966 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %967 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %968 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %969 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %970 = @func_1112() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %971 = %964.4;
  %972 = %965.1;
  %973 = @func_1979() /* ty=Tensor[(14, 10, 7), bool] */;
  %974 = %966.0;
  %975 = %967.0;
  %976 = %968.0;
  %977 = %969.0;
  %978 = %970.0;
  (%971, %972, %973, %974, %975, %976, %977, %978)
}

def @func_949() -> Tensor[(14, 10, 7), float64] {
  @func_947() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_3266() -> Tensor[(14, 10, 7), float64] {
  @func_3264() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_1575(%var_1573: Tensor[(16, 6, 11), uint16], %var_1574: Tensor[(16, 6, 11), uint16]) -> Tensor[(16, 6, 11), uint16] {
  @func_1571(%var_1573, %var_1574) /* ty=Tensor[(16, 6, 11), uint16] */
}

def @func_6688(%var_6687: Tensor[(15, 10, 12), float64]) -> (Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
  %984 = fn (%var_6666: Tensor[(15, 10, 12), float64]) -> (Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) {
    %979 = cast(%var_6666, dtype="float64") /* ty=Tensor[(15, 10, 12), float64] */;
    %980 = @func_1958() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %981 = erf(%979) /* ty=Tensor[(15, 10, 12), float64] */;
    %982 = @func_1103() /* ty=Tensor[(14, 10, 7), float32] */;
    %983 = %980.0;
    (%981, %982, %983)
  };
  %984(%var_6687) /* ty=(Tensor[(15, 10, 12), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */
}

def @func_5094() -> Tensor[(14, 10, 7), float64] {
  @func_5092() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_6314() -> (Tensor[(14, 10, 7), float64],) {
  %987 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %985 = @func_4236() /* ty=(Tensor[(14, 10, 7), uint64], Tensor[(14, 10, 7), float64]) */;
    %986 = %985.1;
    (%986,)
  };
  %987() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_1339() -> (Tensor[(14, 10, 7), float64],) {
  %990 = fn () -> (Tensor[(14, 10, 7), float64],) {
    %988 = @func_1200() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %989 = %988.0;
    (%989,)
  };
  %990() /* ty=(Tensor[(14, 10, 7), float64],) */
}

def @func_5978() -> (Tensor[(2, 14, 10), int16],) {
  @func_5976() /* ty=(Tensor[(2, 14, 10), int16],) */
}

def @func_5956() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  @func_5954() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */
}

def @func_1483(%var_1459: Tensor[(2, 11, 15), bool], %var_1474: Tensor[(980), float32]) -> (Tensor[(2, 11, 15), float64], Tensor[(14, 10, 7), bool], Tensor[(980), float32]) {
  %991 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 11, 15), bool] */;
  %992 = cast(%var_1459, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %993 = logical_and(%991, %992) /* ty=Tensor[(2, 11, 15), bool] */;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(2, 11, 15), float64] */;
  %995 = cast(%var_1474, dtype="float32") /* ty=Tensor[(980), float32] */;
  %996 = reshape(%995, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %997 = @func_463(%996) /* ty=(Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %998 = acos(%994) /* ty=Tensor[(2, 11, 15), float64] */;
  %999 = %997.0;
  (%998, %999, %var_1474)
}

def @func_3676() -> (Tensor[(14, 10, 7), float32],) {
  @func_3674() /* ty=(Tensor[(14, 10, 7), float32],) */
}

def @func_5435(%var_5409: Tensor[(11, 11, 14), float32], %var_5418: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) {
  %1000 = cast(%var_5409, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %1001 = rsqrt(%1000) /* ty=Tensor[(11, 11, 14), float32] */;
  %1002 = cast(%var_5418, dtype="int16") /* ty=Tensor[(11, 11, 14), int16] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="int16") /* ty=Tensor[(11, 11, 14), int16] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1006 = cast(%1001, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %1007 = bitwise_xor(%1004, %1005) /* ty=Tensor[(11, 11, 14), int16] */;
  %1008 = sqrt(%1006) /* ty=Tensor[(11, 11, 14), float32] */;
  (%1007, %1008)
}

def @func_6822(%var_6821: Tensor[(121, 14), float32]) -> (Tensor[(9, 9, 15), float64], Tensor[(11, 11, 14), int16], Tensor[(121, 14), float32], int8, Tensor[(13, 21), uint32], Tensor[(2340), int8]) {
  %1028 = fn (%var_6800: Tensor[(121, 14), float32]) -> (Tensor[(9, 9, 15), float64], Tensor[(11, 11, 14), int16], Tensor[(121, 14), float32], int8, Tensor[(13, 21), uint32], Tensor[(2340), int8]) {
    %1009 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
    %1010 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(9, 9, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1013 = cast(%var_6800, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
    %1014 = cast(%var_6800, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
    %1015 = reshape(%1013, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %1016 = reshape(%1014, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %1017 = @func_5435(%1015, %1016) /* ty=(Tensor[(11, 11, 14), int16], Tensor[(11, 11, 14), float32]) */;
    %1018 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 21), uint32] */, dtype="uint32") /* ty=Tensor[(13, 21), uint32] */;
    %1019 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 21), uint32] */, dtype="uint32") /* ty=Tensor[(13, 21), uint32] */;
    %1020 = cast(meta[relay.Constant][35] /* ty=Tensor[(2340), int8] */, dtype="int8") /* ty=Tensor[(2340), int8] */;
    %1021 = reshape(%1018, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint32] */;
    %1022 = reshape(%1019, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), uint32] */;
    %1023 = reshape(%1020, newshape=[2340]) /* ty=Tensor[(2340), int8] */;
    %1024 = @func_5725(%1021, %1022, %1023) /* ty=(Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) */;
    %1025 = divide(%1011, %1012) /* ty=Tensor[(9, 9, 15), float64] */;
    %1026 = %1017.0;
    %1027 = %1024.2;
    (%1025, %1026, %var_6800, %1027, meta[relay.Constant][34] /* ty=Tensor[(13, 21), uint32] */, meta[relay.Constant][35] /* ty=Tensor[(2340), int8] */)
  };
  %1028(%var_6821) /* ty=(Tensor[(9, 9, 15), float64], Tensor[(11, 11, 14), int16], Tensor[(121, 14), float32], int8, Tensor[(13, 21), uint32], Tensor[(2340), int8]) */
}

def @func_4307() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %1033 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
    %1029 = @func_376() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %1030 = @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */;
    %1031 = %1029.0;
    %1032 = %1030.1;
    (%1031, %1032)
  };
  %1033() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */
}

def @func_5729(%var_5726: Tensor[(7, 13, 3), uint32], %var_5727: Tensor[(7, 13, 3), uint32], %var_5728: Tensor[(2340), int8]) -> (Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) {
  %1045 = fn (%var_5697: Tensor[(7, 13, 3), uint32], %var_5698: Tensor[(7, 13, 3), uint32], %var_5717: Tensor[(2340), int8]) -> (Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) {
    %1034 = cast(%var_5698, dtype="uint32") /* ty=Tensor[(7, 13, 3), uint32] */;
    %1035 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1036 = cast(%var_5697, dtype="uint32") /* ty=Tensor[(7, 13, 3), uint32] */;
    %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1038 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1039 = cast(%var_5717, dtype="int8") /* ty=Tensor[(2340), int8] */;
    %1040 = reshape(%1038, newshape=[]) /* ty=int8 */;
    %1041 = reshape(%1039, newshape=[13, 12, 15]) /* ty=Tensor[(13, 12, 15), int8] */;
    %1042 = @func_894(%1040, %1041) /* ty=(Tensor[(13, 12, 15), int8], Tensor[(13, 12, 15), bool]) */;
    %1043 = maximum(%1036, %1037) /* ty=Tensor[(7, 13, 3), uint32] */;
    %1044 = %1042.0;
    (%1043, %1044, meta[relay.Constant][36] /* ty=int8 */, %var_5717)
  };
  %1045(%var_5726, %var_5727, %var_5728) /* ty=(Tensor[(7, 13, 3), uint32], Tensor[(13, 12, 15), int8], int8, Tensor[(2340), int8]) */
}

def @func_311() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %1046 = @func_75() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %1047 = %1046.0;
  %1048 = cast(%1047, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
  %1049 = reshape(%1048, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
  %1050 = @func_181(%1049) /* ty=(Tensor[(14, 10, 7), bool],) */;
  %1051 = %1050.0;
  (%1047, %1051)
}

def @func_1451(%var_1439: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) {
  %1052 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %1053 = cast(%var_1439, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %1054 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(12, 16, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1057 = rsqrt(%1052) /* ty=Tensor[(12, 16, 12), float32] */;
  %1058 = power(%1055, %1056) /* ty=Tensor[(12, 16, 12), float32] */;
  (%1057, %1058)
}

def @func_9222() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %1065 = fn () -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
    %1059 = @func_5460() /* ty=(Tensor[(14, 10, 7), float64],) */;
    %1060 = %1059.0;
    %1061 = cast(%1060, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %1062 = reshape(%1061, newshape=[14, 10, 7]) /* ty=Tensor[(14, 10, 7), float32] */;
    %1063 = @func_181(%1062) /* ty=(Tensor[(14, 10, 7), bool],) */;
    %1064 = %1063.0;
    (%1060, %1064)
  };
  %1065() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */
}

def @func_4916(%var_4914: Tensor[(3, 14, 9), int64], %var_4915: Tensor[(3, 14, 9), int64]) -> (Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) {
  @func_4912(%var_4914, %var_4915) /* ty=(Tensor[(3, 14, 9), int64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), int32], Tensor[(80), float64]) */
}

def @func_2765(%var_2699: Tensor[(14, 10, 7), float32], %var_2725: Tensor[(80), float64]) -> (Tensor[(14, 10, 7), int64], Tensor[(14, 10, 7), float32], Tensor[(80), float64], Tensor[(14, 10, 7), int32], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  %1066 = @func_859() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %1067 = %1066.3;
  %1068 = cast(%var_2699, dtype="int64") /* ty=Tensor[(14, 10, 7), int64] */;
  %1069 = shape_of(%1067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%1067, dtype="int64") /* ty=Tensor[(14, 10, 7), int64] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1072 = cast(%var_2725, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1073 = reshape(%1072, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %1074 = @func_2190(%1073) /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float32], Tensor[(1, 16, 5), float32], Tensor[(80), float64], Tensor[(14, 10, 7), bool]) */;
  %1075 = %1074.1;
  %1076 = @func_2326() /* ty=(Tensor[(14, 10, 7), float64],) */;
  %1077 = %1076.0;
  %1078 = cast(%1077, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %1079 = shape_of(%1075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%1075, dtype="int32") /* ty=Tensor[(14, 10, 7), int32] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1082 = @func_1822() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */;
  %1083 = @func_2575() /* ty=(Tensor[(2, 16, 10), int32], Tensor[(320), int32], Tensor[(14, 10, 7), bool]) */;
  %1084 = multiply(%1070, %1071) /* ty=Tensor[(14, 10, 7), int64] */;
  %1085 = @func_2260() /* ty=Tensor[(14, 10, 7), float32] */;
  %1086 = add(%1080, %1081) /* ty=Tensor[(14, 10, 7), int32] */;
  %1087 = %1082.0;
  %1088 = %1083.2;
  (%1084, %1085, %var_2725, %1086, %1087, %1088)
}

def @func_499() -> (Tensor[(14, 10, 7), bool],) {
  @func_497() /* ty=(Tensor[(14, 10, 7), bool],) */
}

def @func_313() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) {
  @func_311() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool]) */
}

def @func_8553() -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
  %1093 = fn () -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) {
    %1089 = @func_2986() /* ty=(Tensor[(14, 10, 7), float32],) */;
    %1090 = @func_4576() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), bool], Tensor[(80), float64], Tensor[(14, 10, 7), float32]) */;
    %1091 = %1089.0;
    %1092 = %1090.3;
    (%1091, %1092)
  };
  %1093() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32]) */
}

def @func_8133() -> Tensor[(14, 10, 7), float32] {
  @func_3487() /* ty=Tensor[(14, 10, 7), float32] */
}

def @func_7818(%var_7816: Tensor[(576, 4), float32], %var_7817: Tensor[(12, 16, 12), float32]) -> (Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(576, 4), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), int32], Tensor[(12, 16, 12), float64]) {
  @func_7814(%var_7816, %var_7817) /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), bool], Tensor[(576, 4), float32], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64], Tensor[(12, 16, 12), int32], Tensor[(12, 16, 12), float64]) */
}

def @func_183(%var_182: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool],) {
  %1108 = fn (%var_169: Tensor[(14, 10, 7), float32]) -> (Tensor[(14, 10, 7), bool],) {
    %1094 = @func_139() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %1095 = %1094.1;
    %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %1097 = exp(%1096) /* ty=Tensor[(14, 10, 7), float32] */;
    %1098 = cast(%var_169, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1100 = cast(%1097, dtype="float32") /* ty=Tensor[(14, 10, 7), float32] */;
    %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1102 = floor_mod(%1100, %1101) /* ty=Tensor[(14, 10, 7), float32] */;
    %1103 = cast(%1097, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
    %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%1102, dtype="bool") /* ty=Tensor[(14, 10, 7), bool] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1107 = logical_and(%1105, %1106) /* ty=Tensor[(14, 10, 7), bool] */;
    (%1107,)
  };
  %1108(%var_182) /* ty=(Tensor[(14, 10, 7), bool],) */
}

def @func_6927(%var_6925: Tensor[(2, 40), float64]) -> (Tensor[(2, 40), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(2, 14, 10), float32]) {
  @func_6924(%var_6925) /* ty=(Tensor[(2, 40), float64], Tensor[(1, 16, 5), float64], Tensor[(14, 10, 7), bool], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float32], Tensor[(2, 14, 10), float32]) */
}

def @func_7360() -> (Tensor[(14, 10, 7), float32],) {
  %1109 = @func_759() /* ty=(Tensor[(14, 10, 7), int8], Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
  %1110 = %1109.1;
  (%1110,)
}

def @func_2813(%var_2811: float64, %var_2812: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
  %1114 = fn (%var_2803: float64, %var_2804: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
    %1111 = cast(%var_2803, dtype="float64") /* ty=float64 */;
    %1112 = cast(%var_2804, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %1113 = mod(%1111, %1112) /* ty=Tensor[(13, 15, 16), float64] */;
    (%1113,)
  };
  %1114(%var_2811, %var_2812) /* ty=(Tensor[(13, 15, 16), float64],) */
}

def @func_8355(%var_8345: Tensor[(10, 2, 10), float64]) -> (Tensor[(10, 2, 10), float64],) {
  %1115 = cast(%var_8345, dtype="float64") /* ty=Tensor[(10, 2, 10), float64] */;
  %1116 = sqrt(%1115) /* ty=Tensor[(10, 2, 10), float64] */;
  (%1116,)
}

def @func_1824() -> (Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) {
  @func_1822() /* ty=(Tensor[(14, 10, 7), float64], Tensor[(14, 10, 7), float64]) */
}

def @func_8358(%var_8356: Tensor[(10, 2, 10), float64]) -> (Tensor[(10, 2, 10), float64],) {
  @func_8355(%var_8356) /* ty=(Tensor[(10, 2, 10), float64],) */
}

def @func_1454(%var_1452: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) {
  @func_1451(%var_1452) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 16, 12), float32]) */
}

def @func_6447() -> Tensor[(14, 10, 7), float64] {
  %1118 = fn () -> Tensor[(14, 10, 7), float64] {
    %1117 = @func_5013() /* ty=(Tensor[(14, 10, 7), float32], Tensor[(14, 10, 7), float64]) */;
    %1117.1
  };
  %1118() /* ty=Tensor[(14, 10, 7), float64] */
}

def @func_7830() -> (Tensor[(14, 10, 7), float32],) {
  @func_7828() /* ty=(Tensor[(14, 10, 7), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3479: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3484: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3516: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3521: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3526: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen205/build/output.py:3531: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
type GradCell[T] {
  Raw(T),
  One(fn () -> T),
  Zero(fn () -> T),
}

def @main() -> ((Tensor[(2, 15, 16), float32],), ()) {
  %0 = (meta[relay.Constant][0] /* ty=Tensor[(2, 15, 16), float32] */,);
  %1 = ();
  (%0, %1)
}

def @MultiplyGradCell[T](%multiply: fn (T, T) -> T, %l: GradCell[T], %r: GradCell[T]) -> GradCell[T] {
  %2 = (%l, %r);
  match (%2) {
    (Zero(_), _) => {
      %l
    },
    (_, Zero(_)) => {
      %r
    },
    (One(_), _) => {
      %r
    },
    (_, One(_)) => {
      %l
    },
    _ => {
      %3 = match (%l) {
        Raw(%x: T) => {
          %x
        },
        One(%x1: fn () -> T) => {
          %x1() /* ty=T */
        },
        Zero(%x2: fn () -> T) => {
          %x2() /* ty=T */
        },
      };
      %4 = match (%r) {
        Raw(%x3: T) => {
          %x3
        },
        One(%x4: fn () -> T) => {
          %x4() /* ty=T */
        },
        Zero(%x5: fn () -> T) => {
          %x5() /* ty=T */
        },
      };
      %5 = %multiply(%3, %4) /* ty=T */;
      Raw(%5) /* ty=GradCell[T] */
    },
  }
}

def @AddGradCell[T](%add: fn (T, T) -> T, %l1: GradCell[T], %r1: GradCell[T]) -> GradCell[T] {
  %6 = (%l1, %r1);
  match (%6) {
    (Zero(_), _) => {
      %r1
    },
    (_, Zero(_)) => {
      %l1
    },
    _ => {
      %7 = match (%l1) {
        Raw(%x6: T) => {
          %x6
        },
        One(%x7: fn () -> T) => {
          %x7() /* ty=T */
        },
        Zero(%x8: fn () -> T) => {
          %x8() /* ty=T */
        },
      };
      %8 = match (%r1) {
        Raw(%x9: T) => {
          %x9
        },
        One(%x10: fn () -> T) => {
          %x10() /* ty=T */
        },
        Zero(%x11: fn () -> T) => {
          %x11() /* ty=T */
        },
      };
      %9 = %add(%7, %8) /* ty=T */;
      Raw(%9) /* ty=GradCell[T] */
    },
  }
}

def @FromGradCell[T](%g: GradCell[T]) -> T {
  match (%g) {
    Raw(%x12: T) => {
      %x12
    },
    One(%x13: fn () -> T) => {
      %x13() /* ty=T */
    },
    Zero(%x14: fn () -> T) => {
      %x14() /* ty=T */
    },
  }
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

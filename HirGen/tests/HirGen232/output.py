import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_217 = relay.var("var_217", dtype = "float32", shape = (13, 3, 1))#candidate|217|(13, 3, 1)|var|float32
uop_218 = relay.asin(var_217.astype('float32')) # shape=(13, 3, 1)
output = uop_218
output2 = uop_218
func_227 = relay.Function([var_217,], output)
mod['func_227'] = func_227
mod = relay.transform.InferType()(mod)
mutated_mod['func_227'] = func_227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_228 = relay.var("var_228", dtype = "float32", shape = (13, 3, 1))#candidate|228|(13, 3, 1)|var|float32
func_227_call = mutated_mod.get_global_var('func_227')
call_229 = func_227_call(var_228)
output = call_229
func_230 = relay.Function([var_228], output)
mutated_mod['func_230'] = func_230
mutated_mod = relay.transform.InferType()(mutated_mod)
const_285 = relay.const([[[-2,-10,-10,6,7,-7,-4,7,6,3,-6,1],[4,9,-8,7,6,3,-8,-5,6,-3,10,4],[3,-2,-10,4,-3,-1,-8,4,-8,1,5,8]],[[-10,10,10,-6,1,-3,-10,-4,10,5,6,1],[4,9,-7,-9,-9,-5,-4,3,8,8,-4,1],[10,1,5,1,3,-9,8,-7,8,7,4,9]],[[7,-2,-10,5,8,7,8,-3,9,-1,-9,-3],[2,-8,1,2,5,-10,-6,-6,-1,-10,-2,-9],[-2,-7,1,-9,-1,3,4,-1,-9,3,-8,-2]],[[3,-5,4,5,6,-10,-3,2,-5,5,10,8],[9,-5,-2,3,10,10,3,3,-9,-8,9,6],[5,-5,7,4,-7,-2,-9,-6,-4,4,-4,-9]],[[-9,5,7,4,-3,8,-2,-8,3,-10,7,-3],[2,10,-6,9,8,-3,-7,10,4,2,10,5],[-9,8,-10,-7,-10,-8,-8,10,-3,4,2,10]],[[1,1,9,7,-2,-4,-7,5,-9,-2,10,-4],[8,2,1,-5,-1,4,-4,-2,5,9,6,-7],[-6,2,4,-8,-6,-2,10,1,-6,5,-5,6]],[[-10,2,-6,-3,-2,8,-2,10,-5,-9,10,8],[5,5,8,-2,6,-6,-4,5,-3,2,9,7],[6,9,-6,-3,-10,-2,10,9,-7,8,-4,-7]],[[-6,-4,1,-1,9,-5,8,-7,4,9,3,-10],[2,2,-1,-5,-8,-3,2,7,5,8,8,4],[-5,8,10,10,5,8,-1,-2,1,9,1,-5]]], dtype = "int32")#candidate|285|(8, 3, 12)|const|int32
var_286 = relay.var("var_286", dtype = "int32", shape = (8, 3, 12))#candidate|286|(8, 3, 12)|var|int32
bop_287 = relay.right_shift(const_285.astype('int32'), relay.reshape(var_286.astype('int32'), relay.shape_of(const_285))) # shape=(8, 3, 12)
output = bop_287
output2 = bop_287
func_299 = relay.Function([var_286,], output)
mod['func_299'] = func_299
mod = relay.transform.InferType()(mod)
var_300 = relay.var("var_300", dtype = "int32", shape = (8, 3, 12))#candidate|300|(8, 3, 12)|var|int32
output = func_299(var_300)
func_301 = relay.Function([var_300], output)
mutated_mod['func_301'] = func_301
mutated_mod = relay.transform.InferType()(mutated_mod)
const_423 = relay.const([[[7.624194,8.540824,1.297973,7.769520,6.304617,8.538280,-0.847391,9.270670,-4.910974,-8.964365,4.190066,-4.908772,4.627359,-0.373339],[-3.576612,6.132295,0.777689,-8.532234,-4.301981,-2.551130,-6.044216,-0.873634,5.039177,-4.278329,-3.359660,8.172704,3.681381,6.889545],[-2.477023,6.697365,-8.091626,-4.941256,8.253336,-2.480731,-2.575320,-4.158020,2.724256,7.061476,-9.920726,-0.998004,-6.963122,-9.890006],[5.107752,-7.622695,2.060804,5.046625,0.728737,-3.250890,-5.015598,-6.989529,1.980352,5.922628,-0.331692,-4.237142,7.093302,2.396251],[-5.438526,6.465282,-6.403564,-6.101163,9.151987,3.207894,6.449412,-9.370401,-8.417353,6.467295,6.894999,-7.408482,0.006598,-6.494283],[-6.105404,6.408365,-6.206900,-5.437059,-2.902291,-5.791887,-3.616785,-5.314660,8.976219,5.095474,-4.333485,-0.281060,-3.257090,2.071185],[2.504229,-5.111832,1.127172,-2.019678,-9.929465,-0.287627,7.713063,8.386174,-0.191148,-2.620584,-6.801798,-1.275012,-5.106515,-2.390277],[3.387240,-6.939217,6.747295,-4.566336,-5.264430,-8.860540,-5.728774,-3.716644,-8.869623,9.516681,7.494210,-8.642705,-2.116868,-0.116190],[1.504237,4.865667,-6.582991,0.938356,-0.574435,3.045512,1.433530,0.960324,-9.154729,5.007943,5.559632,-6.198397,-9.130257,-7.930761],[2.769691,3.630946,3.579908,3.056255,1.916286,-0.320594,6.708135,-2.255774,2.325902,-8.119696,6.401574,-3.778846,-2.835695,-7.939079],[-1.072135,4.671085,9.629791,-1.684958,2.996004,2.432769,1.657258,-7.123254,7.515366,3.442286,7.074114,-3.692508,3.686466,8.839451],[0.318920,4.311572,8.813116,2.926051,3.808154,2.421984,-2.157620,4.250594,-8.686012,-1.540615,8.149656,5.958884,5.162607,1.909560]],[[-7.646046,-6.546478,-6.118615,2.451196,0.565030,8.275968,2.015039,4.734369,1.722932,2.603888,9.576813,3.584691,7.863389,9.319720],[-9.368906,7.879831,0.154903,9.329518,8.274904,0.806942,3.227939,-5.075550,-2.308614,-0.147472,-2.704163,3.483242,0.502071,-7.590434],[7.827458,5.417136,2.582732,4.983741,9.671806,-1.807384,4.120704,9.604308,-0.843344,1.937447,7.081016,-4.038279,6.190907,0.344819],[-9.948538,0.366083,0.293411,-2.985455,-9.074914,-7.792110,-6.598981,-9.656750,-6.536342,-6.011317,5.755565,4.776267,-2.788258,2.950512],[-0.351646,-0.557134,-7.123256,-0.742074,7.283106,-3.673597,-1.152414,1.120181,-9.898472,4.435819,5.530768,0.350669,6.528773,6.261762],[5.650384,-7.272717,-5.184260,-5.126081,-1.654762,-5.302764,3.096537,6.255762,4.212070,-4.908046,3.715768,5.203662,-8.092021,9.475736],[0.796189,0.028380,6.309589,-1.421997,-3.091101,5.957853,-1.701487,-5.749984,-5.135551,8.928775,-7.696746,4.760519,3.728731,-9.621705],[-1.511481,-1.501365,8.097568,-1.701087,3.137189,-3.313548,0.921353,-0.439030,6.212174,-9.864294,2.026038,-5.880494,8.277090,4.675064],[-2.598613,-9.690770,2.950288,-0.237857,-0.006522,-3.514368,-1.751311,-2.003786,-4.623198,3.753476,8.759270,8.350738,3.009171,5.242354],[-2.950630,-8.153715,-5.704011,8.719619,3.250754,-7.105055,-7.214495,4.325984,2.957761,-3.291016,-9.096756,-5.253702,9.692286,-3.480957],[9.469852,-5.038157,-5.387028,-2.050131,7.046606,4.418936,5.252344,6.151716,-1.996163,-0.453217,-7.277166,8.425158,-5.196710,-3.705983],[4.768313,4.674984,-1.258777,-1.824472,-3.316444,-5.768381,-7.277393,-2.541088,7.850557,6.584718,-0.620054,-6.015877,6.905991,0.086816]],[[5.429666,5.555044,3.184004,0.055238,-3.175500,-8.415631,-8.519423,6.190632,-0.254962,-8.723504,7.065258,9.024905,-5.031904,-9.023558],[0.295935,2.964852,0.331850,-0.014505,2.199583,3.786474,9.184242,-3.658291,-5.847580,8.726224,4.560461,-2.196467,9.137606,-7.550245],[4.654984,8.846487,0.994239,0.525797,-4.611542,1.911092,1.568738,6.713061,-0.053427,-9.789796,1.505325,-6.159200,-4.728479,1.302020],[-1.117897,0.209758,-1.350911,8.327519,1.762682,2.036372,-4.990084,-6.210134,0.252107,-7.125248,2.772888,-3.118667,-1.423913,-4.641668],[1.154890,9.012701,0.314519,-3.179654,5.450207,0.307095,-5.200099,-7.318758,3.417263,3.066181,7.133437,2.913917,-8.284762,5.689592],[-9.015868,3.803914,-9.768395,7.318634,2.158266,9.993881,0.552930,-3.843726,8.570282,-5.814999,4.875225,1.874825,-5.372029,0.159535],[-3.706094,1.114315,-4.969217,6.675394,3.291621,6.934866,-6.384751,-7.315812,8.082733,3.798975,6.227398,-7.238202,0.203351,1.053376],[-4.627792,1.682917,-6.578937,4.373532,0.641488,4.735194,1.676286,-9.507218,3.731255,-6.389311,3.525029,-4.354376,7.508960,7.839220],[-0.090679,-5.796386,1.428943,-1.697213,8.832994,7.607288,-3.486270,0.650370,4.791877,6.248750,-8.428943,8.938412,1.740457,5.305058],[-5.566764,-0.443439,9.968603,0.614348,-6.055169,-5.601235,0.476908,-4.009033,-9.563806,-8.521449,4.526844,9.777695,2.913923,6.426234],[-5.139545,0.049527,5.900711,3.387952,0.528308,-6.547584,-6.882465,2.426627,-8.435197,9.783291,8.687024,-3.034728,5.406304,6.848594],[-4.040534,-1.599985,4.737968,-7.663624,0.988513,7.618566,-8.169905,-9.210252,4.994410,1.548615,5.677963,-0.759946,-7.495121,-6.270936]],[[-9.178114,-7.550044,-4.970953,1.951429,-0.031217,2.625551,-6.880647,-6.252524,-5.375772,2.606716,-6.605541,9.272923,-1.092161,8.062067],[-1.876646,-8.161739,4.410177,5.089294,7.638586,7.051162,-7.951765,0.895860,7.648188,-9.394515,-0.713243,3.217179,-8.393894,6.855800],[2.582026,6.904507,-0.310662,-8.425587,-9.609416,3.809279,7.341917,0.447953,0.718736,-9.925629,8.037266,-4.570584,-0.043435,-3.488854],[-7.071786,4.985936,-8.632868,8.374242,9.417830,-3.415808,-6.240963,7.988970,-4.676046,5.087571,-6.413336,1.684369,-7.224922,5.503486],[7.354245,4.847845,5.189348,8.887935,6.735383,-4.329955,8.656786,-0.079693,5.824945,7.725467,5.370871,4.111970,-9.764267,9.673844],[3.685908,2.490060,-1.244301,-3.784664,-4.649087,-2.988488,1.863585,-0.024764,5.498196,-7.847603,-9.162345,2.659607,-1.706411,6.496006],[8.927872,-9.262181,-2.953880,6.661332,-0.848745,-5.390610,-8.114954,1.895502,-9.346634,-4.866140,-5.457983,-7.408922,-3.425710,-1.842102],[-0.039025,0.268168,-7.960627,-8.159139,3.965159,-6.503824,-0.443949,-2.102989,6.878947,-6.071094,5.812567,1.340187,1.248017,4.227524],[6.997675,-4.955388,5.437151,3.418304,7.611985,-8.435518,-1.312573,9.956860,-3.688754,5.695927,6.089391,7.534212,-1.975612,-2.529583],[-5.844086,3.818417,-6.509505,4.068913,6.816768,8.030402,4.430313,7.095568,-7.668419,-4.802132,2.912557,-9.734689,0.790983,4.686109],[5.461059,1.641663,8.678558,3.427340,-6.148943,-3.645100,-3.328009,0.691422,2.791409,8.352538,8.315236,-8.286572,2.276042,3.160408],[-7.893969,-6.916526,-7.317394,2.978240,-0.548164,8.200127,-1.694121,-7.515294,-1.198262,-3.252474,-5.178194,2.024396,6.304033,-2.295518]],[[8.723503,8.111571,6.450697,7.821766,4.235951,9.136454,7.954311,-8.156313,-2.822811,-3.324567,-5.996258,9.718138,-1.238900,-7.777737],[-6.784515,-5.483757,-6.430124,-2.347917,1.384825,-1.409925,-8.143957,-9.848174,-2.525831,0.559184,2.415726,4.679962,-6.077079,3.550236],[-5.926642,-6.198881,-0.501477,-8.939410,-4.738161,-3.166860,-9.004387,-8.790871,6.401472,-3.613699,-6.942215,-7.664248,-1.780772,7.098758],[-0.664334,7.788931,3.476520,-7.203569,5.348655,-2.398917,9.562901,6.302494,9.955169,-2.664701,8.171350,4.685126,8.666289,0.818976],[1.680559,-7.517671,8.721698,-8.619999,-4.704982,3.080913,6.656327,6.590893,-5.372896,-1.623189,8.555148,-8.387161,-2.046058,-0.989915],[-7.736688,2.998359,-5.333781,9.836549,5.191417,-5.663068,-3.802393,9.277552,-7.139149,-7.455290,-2.947619,-8.411917,-2.019806,-4.836370],[-5.693560,-5.180804,-0.134495,3.761659,9.860392,4.745016,-8.936049,-6.576385,4.458386,5.686262,9.352419,-6.579054,-1.608516,8.833601],[-7.766718,8.114364,-1.617185,6.229994,8.932957,8.939437,0.166716,-6.500141,9.748231,0.301280,-7.058692,-6.451321,-5.977182,8.694278],[9.725010,9.921809,-5.512792,7.630660,-3.021140,-4.663669,9.641649,5.020653,-0.812196,-6.853543,-4.248820,-9.099273,-7.121001,-1.295737],[6.581491,-8.206252,-3.094306,-7.014482,-1.480234,6.241920,-9.278417,3.124897,-2.975255,8.672979,-3.301696,-9.228834,7.541862,3.678980],[1.549473,-4.121727,-4.618597,3.028633,2.239584,5.491547,2.575899,-8.863277,-2.989782,8.716011,-5.460520,8.285338,2.292688,-1.575734],[-6.680005,-7.283587,3.602295,4.596604,7.671981,4.217013,-3.189105,1.214675,0.628839,-7.307586,9.379137,-4.822816,-5.602479,-0.517761]],[[8.808816,-4.323016,-7.798037,5.655853,5.067740,2.948738,-7.774109,1.999410,-0.072251,-6.464406,0.873512,1.575299,8.694007,-9.157740],[-4.415977,4.148788,3.169285,3.115248,-9.913594,-7.377352,0.544913,5.755205,-0.367484,3.392676,4.029238,-8.320387,-0.189060,9.524030],[-4.924092,5.633383,-9.023932,-4.009529,-8.708372,6.153910,5.948730,-9.406471,-2.109503,-3.853617,6.046263,0.802400,4.799448,7.826748],[1.183717,8.511573,-1.874207,-8.940558,7.551505,2.504593,5.305251,8.945027,-8.769462,8.796436,7.448279,3.948844,7.980241,8.486610],[-6.870394,-6.317572,6.028789,3.212419,-1.488351,-9.147093,5.135391,3.992010,-7.790094,4.807092,0.997088,3.819525,-9.293567,6.383665],[6.047624,-5.702813,1.445725,-2.273724,1.899915,-0.921334,2.582832,8.014755,-9.046333,0.081142,6.045984,6.887323,-7.619637,9.703984],[5.999008,-2.765405,7.003757,1.935871,-6.830726,1.669347,2.703705,9.894445,-9.555848,2.190415,-3.017961,-8.208041,8.316390,-6.682128],[-1.667179,-7.159921,-1.284948,4.315159,-0.132434,-2.291540,-2.684973,-4.956225,5.900870,-8.915536,-9.667515,1.366925,1.348460,9.634342],[6.235574,-1.090043,3.531957,-9.871118,4.408161,-0.445713,-9.027638,-6.669279,-6.729196,-1.388371,8.065324,-6.570262,9.336376,-1.918032],[3.384577,7.793548,3.179287,-1.171473,6.659206,-5.952848,-5.772700,-3.380904,4.518379,6.248337,4.258248,6.127076,7.357117,-0.249143],[1.152454,5.554812,-4.542065,-3.369507,-7.311470,0.324370,3.978119,-6.955602,-2.470069,-9.340752,-1.374249,6.774505,7.093376,-8.709423],[-6.585979,7.128088,4.825202,-1.365873,-3.642314,3.164361,-0.880748,-0.215377,-4.699511,8.510275,1.204119,-0.711111,-2.392193,4.560787]],[[-1.669592,-0.566957,-8.345928,7.915622,-2.149670,-5.109986,-2.252723,9.033810,-4.555229,-8.363422,-1.651454,3.613957,4.305741,9.947424],[9.950880,8.757248,-0.918557,6.347740,-6.193984,-8.067276,-8.698367,0.952765,-5.428117,6.991719,-8.871172,9.937506,-7.784226,-9.377636],[-7.431101,2.228733,-6.120838,-2.198336,-6.405698,1.412198,-7.768079,0.391129,-6.295283,9.092539,5.128910,4.354548,-0.262964,-1.798837],[3.689801,-2.505200,0.404426,-1.810482,-1.043827,-7.571590,-9.007045,6.662238,-8.549958,0.471360,3.227295,7.529249,-7.580495,-5.113860],[-0.717352,6.680789,3.460734,6.539618,1.826488,-8.021624,-9.483639,-8.437101,8.896116,6.008442,-6.464314,-4.409231,4.830327,-7.998575],[4.143438,-6.005579,1.951890,0.756197,9.195433,1.283331,-2.974912,8.865291,6.865446,6.622451,2.621165,-8.268581,-4.101666,-5.468685],[-5.711823,4.327725,9.282958,9.079498,5.486567,-8.911689,-4.587543,9.699455,7.835903,5.385337,-6.323949,7.142979,-9.104488,5.502699],[3.185177,-8.279633,-0.283382,9.904758,-3.697626,-9.491372,5.217360,-5.509685,4.738148,4.890938,-5.019214,9.076949,2.627532,6.490133],[-8.028884,-5.855956,-1.272168,1.686169,-9.788717,-4.622616,-1.876964,-5.656162,1.595210,0.075900,-4.131181,-2.889535,0.686241,1.545444],[-9.158216,-4.427726,1.398730,-3.564684,-5.602862,-2.318311,-3.465748,1.451060,-3.924212,0.085503,-4.384806,-5.178469,7.307922,-8.352050],[-1.765327,6.056950,-1.371251,0.226036,5.807323,7.472461,9.852445,-0.159010,-5.278771,-0.563360,-1.595959,6.874323,-9.631697,1.862583],[-0.320184,4.454167,-8.043852,7.879788,-3.837857,-4.393113,9.036153,2.666190,-2.434604,-8.225139,2.247804,5.479731,-3.349054,7.958334]],[[-5.252235,-4.357823,-4.362100,5.288171,9.799803,7.479261,7.260300,5.597776,2.630560,3.725825,-7.286843,-5.621769,4.445737,5.772743],[-3.992877,-7.616031,-4.527317,4.337265,-7.596724,5.501388,-4.569589,-8.673206,-2.536354,-3.960967,-8.686399,2.282066,2.962649,6.441519],[4.942540,7.301354,4.074505,-3.938017,-3.340812,-8.270459,-7.984044,-0.285747,-0.796448,-0.354342,-2.359599,-0.293420,0.697000,-2.497655],[7.648850,1.284724,-4.743207,3.044482,-3.357024,4.763280,4.703963,-2.932053,6.076692,-4.935522,0.078048,5.519181,5.235470,-3.688002],[7.767455,-6.265062,-6.167567,-2.911425,-4.494434,-2.346404,9.941295,2.780664,0.832175,5.976799,2.897875,-0.026130,-7.643891,-9.770486],[5.932005,-5.541060,8.036475,-6.514784,-4.906173,6.322143,-5.916508,-0.634266,2.316012,-5.993791,2.968677,-9.608589,-7.418413,9.817116],[-5.739522,-3.938128,-0.600689,-7.969021,6.745771,-2.679074,8.067657,-1.562339,8.231585,-9.188008,6.527841,-2.050346,-9.715910,5.084204],[4.796700,3.563027,-3.091850,-0.764903,2.329964,1.549321,7.101908,-6.047642,0.450624,-8.921593,9.328059,9.559698,8.290017,4.610993],[-7.868799,-7.581666,3.464301,1.124015,-4.688557,9.246626,0.955633,-1.953895,-4.742668,7.025836,-0.737683,-7.555666,-3.517202,-6.815688],[5.307323,6.114518,-6.718833,-5.846950,-1.210772,0.046303,9.922515,-1.706232,7.755044,4.202354,8.142013,9.224408,-1.566554,-7.473048],[-3.242973,-9.982926,-9.999878,7.783102,-7.519431,3.633311,-5.701965,6.178142,5.215613,-1.700081,-7.552483,-9.701068,-6.624974,2.673915],[4.249544,-3.836880,-0.384546,-7.439996,-9.213463,3.822744,1.524777,7.248995,-4.353264,1.552737,-6.568375,-9.304991,2.334189,1.545015]],[[9.251751,-3.191091,-2.557714,-3.746989,7.709354,0.333367,-4.755179,-4.255523,3.958536,2.604062,-5.151025,3.605305,-8.958081,-6.525042],[-3.588291,-0.540221,-5.109450,4.315086,3.268969,-2.388273,-6.434006,-2.223749,-3.217522,-2.662930,4.244900,5.171825,-4.011454,-1.813061],[2.204209,-0.342456,-3.900475,7.347651,5.303356,2.812869,-6.784143,5.238493,-5.101266,3.174095,2.977917,-0.005705,-2.043111,-6.354420],[9.456806,5.414255,3.123464,-9.766826,-8.290322,5.255806,-9.183306,-8.092580,-6.911661,9.055162,-7.188880,7.397458,-8.343527,-1.272776],[-6.988141,0.068261,0.611000,-6.336724,-0.312179,9.483704,-6.179655,-7.701764,0.653307,8.701095,4.917692,-5.761824,4.929902,0.552863],[-4.208850,-6.996116,-9.930863,-5.490867,0.882744,1.427365,5.588762,-0.375852,7.655441,9.810042,-2.567506,-7.173662,8.913372,2.783596],[-5.842048,7.718458,-5.341919,8.123979,9.765036,-1.765100,-1.067434,2.190536,-7.506721,8.646828,-8.619392,9.809847,5.640229,-0.959000],[-9.069634,-5.919678,-0.338909,6.406520,0.193086,-3.813176,-6.347308,2.118851,-6.789043,0.180347,4.464381,-5.816572,9.698225,-8.382454],[7.673252,6.967066,-7.116114,-8.993470,1.056134,2.059264,3.319274,-6.760124,-6.201433,-2.869272,-3.623670,-4.810942,6.036155,0.669103],[-5.642528,2.331335,8.500982,6.553917,-8.147896,-4.864359,-8.872446,9.966884,3.197550,7.569451,1.580137,-1.282426,3.912630,6.454517],[0.024157,8.925385,-0.626227,4.335248,-3.608644,4.152418,8.899656,-6.029053,7.173941,7.826306,6.812446,8.421241,-0.989600,-1.524763],[-6.432087,-3.206615,0.820371,8.575738,1.963251,8.318283,6.911194,-2.830644,-3.714376,-8.308473,-6.232887,4.068406,3.700826,4.718116]],[[-0.924672,7.568333,6.866018,6.847718,-9.816020,8.344084,3.784424,2.527933,2.386152,5.634575,-3.773679,-4.942451,6.611153,9.659907],[-0.454541,7.165694,-1.018361,6.810868,-9.404169,-0.941942,8.086812,-0.387108,-0.513741,8.503380,-5.861651,-6.588505,8.996478,9.076181],[-8.639341,8.613355,6.251089,7.628064,0.839608,-0.240012,2.735203,-0.549741,-8.595217,-4.039568,-6.332259,-8.427863,-9.152986,-7.588819],[0.138087,0.563413,-9.354924,-7.934751,0.411295,1.710036,-8.100587,-5.693214,4.886431,-8.303234,-4.390678,-5.675221,2.426254,9.852341],[5.056011,9.005692,5.189946,-7.554423,9.919611,-3.406568,4.367820,6.325475,5.301378,6.819431,1.767203,-6.707110,-6.862403,-6.907255],[6.228486,-9.281246,5.399938,-0.488259,-9.222947,-8.450869,3.609712,-5.069196,0.586297,1.725195,6.077071,6.302031,-9.436495,-4.234978],[-1.183365,-4.482886,-3.418803,7.250804,-0.032288,6.525580,-2.728020,-8.315961,-1.756857,-5.616534,3.620669,-7.850226,5.468442,8.344170],[8.044360,-1.690521,-1.247031,3.353543,3.894366,2.511047,-6.376487,-9.346483,-9.156268,7.694658,5.620711,-3.510234,6.379954,-0.246669],[-0.233944,-0.024802,5.080286,-9.356591,-3.094202,7.167515,-3.834088,1.365581,8.324040,0.417920,2.917231,-6.845579,0.452785,2.795296],[4.719854,8.315227,3.203074,9.840337,-0.373035,-9.621930,0.415875,9.564591,-2.523644,7.267479,-4.200801,-4.811700,4.808883,3.282876],[7.571612,6.414781,-8.706405,8.767658,-9.365600,-2.969685,-8.595664,0.822048,-0.263229,6.799624,-7.872409,-8.868234,3.330866,-0.771027],[8.033797,3.411613,-1.481307,9.437389,6.393166,-5.256661,4.129526,8.650541,9.207080,-9.777023,9.786338,9.869742,-9.724124,-6.325120]],[[-5.017671,-1.881274,-3.289967,-9.146855,-2.631941,0.821220,-7.081522,5.750553,7.051911,4.187949,-4.918585,-9.899849,5.770400,1.159622],[-8.118221,-2.332946,-6.107723,-1.783363,-0.006171,8.492569,0.619934,2.806814,-5.471459,6.622078,8.831439,-5.718477,-8.908176,0.250731],[-0.376186,7.072197,-1.089440,2.857527,-7.158980,-5.301315,3.404031,7.742920,-4.829554,-8.003973,-2.843433,-2.055029,4.547286,2.150578],[-0.414445,9.424183,4.166252,5.049763,-8.200706,-1.451889,-1.865317,-8.053928,-8.362663,-3.389866,-9.412479,1.804993,4.803573,-4.474830],[-3.532052,-6.580011,-9.022093,-1.213211,9.119117,4.163580,-5.397084,-9.773816,-5.336958,-6.046411,4.171470,-9.371281,-4.763179,-3.679900],[8.445460,-9.406284,-9.700782,-9.799242,-0.183743,-5.679813,-6.924225,-3.468264,3.112026,-3.414213,8.199031,-5.933148,8.146488,-8.979683],[-1.769218,5.647173,8.994446,2.333214,6.717867,-2.689049,-0.427317,8.769040,-3.264246,-6.011788,-3.042610,-7.246015,8.346135,-3.009998],[7.680175,-5.235899,9.204469,8.319655,9.242418,-0.413825,9.710263,7.474208,3.633821,-5.910424,-8.312243,3.580031,4.552061,-5.221420],[-6.032413,-3.215886,4.293196,9.856152,-4.036878,6.385008,-2.975419,-4.252063,-4.837404,2.426866,-0.677322,2.079451,-4.386384,-8.728532],[-0.675949,0.262842,1.260647,-8.594090,-1.484134,-3.413759,2.734476,6.461028,0.390475,1.233787,7.574048,-5.467688,-4.305776,-6.763560],[-8.307167,4.489180,1.724969,-2.881408,-7.631505,2.509048,-4.059303,3.936965,6.316795,4.744447,1.933174,-8.304810,-2.115962,-6.671247],[-9.752274,9.480398,0.779290,-7.956715,3.740189,-5.051283,7.074899,2.197954,2.202687,7.790509,1.922762,8.719722,3.045510,1.280008]],[[-0.677155,1.142731,-0.126697,-6.200578,8.120896,-9.309085,8.586802,-4.335813,-3.166034,-1.926977,-8.771950,-6.131469,3.034422,-8.923765],[2.762494,-8.463650,-3.093262,-5.365535,-0.152056,-8.321628,2.154862,8.889296,5.808119,-3.143460,6.936436,1.282297,-3.402527,8.193691],[-4.615311,0.936480,3.876245,5.420235,1.918864,-9.771851,-8.729032,5.178422,4.934596,-4.771611,-5.750345,-8.581474,-2.546707,1.191458],[4.909366,-8.078349,6.061976,5.802499,0.290759,-6.575834,-6.348971,-5.289290,2.358097,5.118133,-3.943446,-4.687331,-9.716231,-4.844676],[-7.863484,9.843247,-3.197643,6.160631,9.963973,-7.377934,-7.228255,9.111175,4.510076,6.736688,4.894689,8.716865,4.727376,-2.444855],[-3.610542,-8.195416,1.557541,-2.779710,3.921892,7.408336,-7.933047,9.358972,-2.071518,-3.463985,-7.767931,-0.750456,-8.040700,-5.451536],[5.108753,0.351367,3.944696,0.464279,4.060461,8.990708,3.218178,-0.106978,-6.820831,-4.598495,-0.485668,5.458326,2.566721,6.462449],[1.785111,9.571931,-5.909107,0.509242,-3.897258,-8.210732,-2.060563,-4.617321,-7.910568,-6.847117,-3.768730,3.638776,2.677989,7.146130],[6.173728,-4.611563,-5.396498,6.407342,-0.921435,3.784749,4.370234,-0.608695,8.451894,-4.140288,1.102117,-6.234251,5.057528,9.640050],[-0.728138,1.209010,5.051566,7.201007,2.750321,-3.243704,7.550029,-9.413592,-1.793926,-6.566691,2.152623,4.638641,0.710940,-9.346714],[-5.299500,9.626815,3.750261,-0.990959,-0.323258,-9.532389,-7.600196,6.434612,-2.449580,3.243111,7.677637,-9.125963,-9.645180,9.698763],[-7.649803,-5.833408,6.231155,9.098563,9.934833,3.652660,0.296102,2.800020,3.772950,0.713865,4.944689,-5.683643,9.238462,6.230803]]], dtype = "float64")#candidate|423|(12, 12, 14)|const|float64
uop_424 = relay.exp(const_423.astype('float64')) # shape=(12, 12, 14)
uop_426 = relay.atan(const_423.astype('float64')) # shape=(12, 12, 14)
uop_432 = relay.cos(uop_424.astype('float32')) # shape=(12, 12, 14)
uop_435 = relay.sinh(const_423.astype('float32')) # shape=(12, 12, 14)
func_299_call = mod.get_global_var('func_299')
func_301_call = mutated_mod.get_global_var('func_301')
var_444 = relay.var("var_444", dtype = "int32", shape = (288,))#candidate|444|(288,)|var|int32
call_443 = func_299_call(relay.reshape(var_444.astype('int32'), [8, 3, 12]))
call_445 = func_299_call(relay.reshape(var_444.astype('int32'), [8, 3, 12]))
output = relay.Tuple([uop_426,uop_432,uop_435,call_443,var_444,])
output2 = relay.Tuple([uop_426,uop_432,uop_435,call_445,var_444,])
func_447 = relay.Function([var_444,], output)
mod['func_447'] = func_447
mod = relay.transform.InferType()(mod)
var_448 = relay.var("var_448", dtype = "int32", shape = (288,))#candidate|448|(288,)|var|int32
output = func_447(var_448)
func_449 = relay.Function([var_448], output)
mutated_mod['func_449'] = func_449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_604 = relay.var("var_604", dtype = "float32", shape = (8, 8, 13))#candidate|604|(8, 8, 13)|var|float32
var_605 = relay.var("var_605", dtype = "float32", shape = (8, 8, 13))#candidate|605|(8, 8, 13)|var|float32
bop_606 = relay.mod(var_604.astype('float32'), relay.reshape(var_605.astype('float32'), relay.shape_of(var_604))) # shape=(8, 8, 13)
uop_614 = relay.acos(var_604.astype('float64')) # shape=(8, 8, 13)
func_299_call = mod.get_global_var('func_299')
func_301_call = mutated_mod.get_global_var('func_301')
const_621 = relay.const([-4,-2,9,7,8,2,-4,-8,-5,9,6,-3,-9,-4,-6,-6,7,9,6,9,-5,-1,3,-7,-4,6,6,-7,-6,9,-7,6,-5,-1,2,-4,-8,5,-4,2,7,-6,-7,-9,-3,9,-5,3,10,10,3,-9,1,-6,6,-3,-6,-7,-3,10,-7,5,3,-2,3,7,8,-8,-1,3,2,10,6,-5,-6,-6,-3,6,10,-3,2,10,-7,10,-5,-5,3,-9,5,-10,8,-5,-9,-10,-1,-6,4,-6,6,-1,10,-10,-3,4,2,8,-1,2,4,-1,-5,-1,-2,-10,-2,1,-8,5,-1,-9,2,-4,10,3,6,-10,-2,9,-7,-4,1,3,6,1,8,10,-5,2,-10,1,10,8,4,8,8,10,-5,9,10,1,-7,-7,7,10,-6,-5,2,-10,1,-8,8,-8,-3,-8,-6,3,2,-8,1,8,8,-6,7,7,-4,8,-4,-8,-5,2,-7,-5,-6,10,8,7,-1,8,-10,7,1,7,6,-2,4,-10,-10,-2,5,-2,-9,-1,-1,-8,4,-7,5,-10,-1,-9,10,-6,4,5,-9,6,-7,8,-8,10,-4,-6,-1,9,1,-7,-9,9,2,-5,-2,-8,-10,8,-5,-9,-5,7,1,8,-3,-3,9,-8,-8,3,-5,-1,-9,2,-1,-10,-4,-4,2,9,8,-2,5,-7,2,-5,3,4,8,4,5,-6,3,-7,4,4,7,-9,3,-7,8,-4,9,2,3,7,-2,-10,2,1,3,-6], dtype = "int32")#candidate|621|(288,)|const|int32
call_620 = func_299_call(relay.reshape(const_621.astype('int32'), [8, 3, 12]))
call_622 = func_299_call(relay.reshape(const_621.astype('int32'), [8, 3, 12]))
var_634 = relay.var("var_634", dtype = "float64", shape = (8, 8, 13))#candidate|634|(8, 8, 13)|var|float64
bop_635 = relay.logical_and(uop_614.astype('bool'), relay.reshape(var_634.astype('bool'), relay.shape_of(uop_614))) # shape=(8, 8, 13)
output = relay.Tuple([bop_606,call_620,const_621,bop_635,])
output2 = relay.Tuple([bop_606,call_622,const_621,bop_635,])
func_639 = relay.Function([var_604,var_605,var_634,], output)
mod['func_639'] = func_639
mod = relay.transform.InferType()(mod)
var_640 = relay.var("var_640", dtype = "float32", shape = (8, 8, 13))#candidate|640|(8, 8, 13)|var|float32
var_641 = relay.var("var_641", dtype = "float32", shape = (8, 8, 13))#candidate|641|(8, 8, 13)|var|float32
var_642 = relay.var("var_642", dtype = "float64", shape = (8, 8, 13))#candidate|642|(8, 8, 13)|var|float64
output = func_639(var_640,var_641,var_642,)
func_643 = relay.Function([var_640,var_641,var_642,], output)
mutated_mod['func_643'] = func_643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_893 = relay.var("var_893", dtype = "float32", shape = (10, 16, 14))#candidate|893|(10, 16, 14)|var|float32
uop_894 = relay.erf(var_893.astype('float32')) # shape=(10, 16, 14)
output = relay.Tuple([uop_894,])
output2 = relay.Tuple([uop_894,])
func_903 = relay.Function([var_893,], output)
mod['func_903'] = func_903
mod = relay.transform.InferType()(mod)
var_904 = relay.var("var_904", dtype = "float32", shape = (10, 16, 14))#candidate|904|(10, 16, 14)|var|float32
output = func_903(var_904)
func_905 = relay.Function([var_904], output)
mutated_mod['func_905'] = func_905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1062 = relay.var("var_1062", dtype = "int32", shape = (15, 13, 11))#candidate|1062|(15, 13, 11)|var|int32
var_1063 = relay.var("var_1063", dtype = "int32", shape = (15, 13, 11))#candidate|1063|(15, 13, 11)|var|int32
bop_1064 = relay.bitwise_and(var_1062.astype('int32'), relay.reshape(var_1063.astype('int32'), relay.shape_of(var_1062))) # shape=(15, 13, 11)
output = bop_1064
output2 = bop_1064
func_1099 = relay.Function([var_1062,var_1063,], output)
mod['func_1099'] = func_1099
mod = relay.transform.InferType()(mod)
var_1100 = relay.var("var_1100", dtype = "int32", shape = (15, 13, 11))#candidate|1100|(15, 13, 11)|var|int32
var_1101 = relay.var("var_1101", dtype = "int32", shape = (15, 13, 11))#candidate|1101|(15, 13, 11)|var|int32
output = func_1099(var_1100,var_1101,)
func_1102 = relay.Function([var_1100,var_1101,], output)
mutated_mod['func_1102'] = func_1102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1314 = relay.var("var_1314", dtype = "int16", shape = (15, 3, 10))#candidate|1314|(15, 3, 10)|var|int16
const_1315 = relay.const([[[6,2,-3,8,8,10,2,10,5,3],[2,-5,-5,1,1,-6,3,2,2,9],[6,8,7,-5,-8,2,-8,-4,-3,-5]],[[-8,1,8,-9,-5,-10,10,-8,6,1],[6,3,-4,6,-4,10,-9,5,-6,8],[5,-2,-6,3,-6,5,2,5,-6,3]],[[-4,-6,-6,2,5,1,8,6,4,5],[6,3,7,-1,-10,7,-9,-7,-3,-5],[9,-10,-9,-10,-6,4,-4,-9,6,-5]],[[6,2,-4,8,-10,-6,1,5,-4,5],[-9,-3,10,3,4,4,-2,7,7,-1],[-10,-5,7,-3,6,-3,8,7,10,4]],[[10,5,-6,7,-8,8,7,9,5,5],[9,-6,3,-7,-5,-8,8,-8,6,8],[4,-1,1,-7,3,8,9,3,9,-7]],[[-10,1,8,4,7,-9,-10,-5,2,9],[-3,1,1,6,-1,-4,9,1,-7,5],[-7,-6,-5,-9,-3,4,3,8,9,-6]],[[10,-3,7,8,9,9,-8,-4,-8,-1],[9,-4,3,8,7,-2,4,-6,7,7],[7,-3,-3,-7,-8,-9,-6,-9,9,8]],[[-3,-3,-4,-10,-4,9,2,-10,7,-5],[8,1,-1,10,10,-5,10,2,10,-5],[8,8,5,7,7,-6,8,-8,10,8]],[[-8,2,1,-2,-5,-5,-2,-3,3,9],[-3,-5,-4,9,-1,-3,10,-6,9,-3],[-6,5,5,5,7,-10,-10,-1,-7,8]],[[9,-8,-5,1,-4,-8,3,6,-3,-8],[4,-3,2,-7,-6,7,-6,-2,9,7],[-8,-4,10,10,1,-4,-3,-9,10,-4]],[[-3,-10,5,-10,-7,-10,3,7,3,5],[-5,-9,5,-5,-4,-1,-9,-3,-7,1],[-1,-1,4,-6,-5,-1,1,1,5,-10]],[[5,5,-4,-10,-3,-5,1,-9,-5,-2],[-7,3,2,-1,-9,8,-2,-10,3,-7],[9,1,9,-7,-6,-5,1,-8,-1,3]],[[-9,6,6,-10,-5,5,1,6,-7,-4],[-9,3,-4,-6,-9,-7,-10,2,8,-2],[8,-7,-5,-1,-5,5,-2,5,-9,-3]],[[9,-7,-2,2,-8,4,-4,-7,5,3],[-10,3,7,10,-10,4,-4,8,-7,-7],[-7,-3,4,-3,-7,-9,5,1,-10,7]],[[5,-9,2,4,-8,-4,-3,-9,4,-8],[-6,-8,-10,4,1,2,-3,-2,8,4],[-8,-2,-3,10,3,-10,8,2,8,-8]]], dtype = "int16")#candidate|1315|(15, 3, 10)|const|int16
bop_1316 = relay.left_shift(var_1314.astype('int16'), relay.reshape(const_1315.astype('int16'), relay.shape_of(var_1314))) # shape=(15, 3, 10)
uop_1319 = relay.sin(bop_1316.astype('float32')) # shape=(15, 3, 10)
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
var_1322 = relay.var("var_1322", dtype = "float32", shape = (2, 416))#candidate|1322|(2, 416)|var|float32
call_1321 = relay.TupleGetItem(func_639_call(relay.reshape(var_1322.astype('float32'), [8, 8, 13]), relay.reshape(var_1322.astype('float32'), [8, 8, 13]), relay.reshape(var_1322.astype('float64'), [8, 8, 13]), ), 0)
call_1323 = relay.TupleGetItem(func_643_call(relay.reshape(var_1322.astype('float32'), [8, 8, 13]), relay.reshape(var_1322.astype('float32'), [8, 8, 13]), relay.reshape(var_1322.astype('float64'), [8, 8, 13]), ), 0)
bop_1328 = relay.subtract(uop_1319.astype('int64'), relay.reshape(bop_1316.astype('int64'), relay.shape_of(uop_1319))) # shape=(15, 3, 10)
func_447_call = mod.get_global_var('func_447')
func_449_call = mutated_mod.get_global_var('func_449')
const_1332 = relay.const([-10,-1,3,-8,9,-5,6,6,-1,7,8,7,10,7,5,-6,-7,5,-3,2,-8,-5,-1,2,-9,-5,9,-2,-6,-6,-3,8,-1,9,10,6,-10,-2,3,5,7,6,-4,4,-7,4,7,1,-7,-2,4,2,-8,-5,2,-2,1,-6,-8,8,-5,7,-4,-9,-9,-5,8,8,-6,8,4,9,-10,2,-7,3,-3,-1,-9,8,-3,2,4,9,3,-8,-9,-4,-1,-7,9,8,10,-10,2,-6,5,-8,10,-7,-5,1,3,3,2,-2,-1,4,4,10,-6,-10,-6,7,6,-8,10,-4,-5,-7,-8,9,-1,-1,-8,10,-9,2,9,-3,3,7,-3,6,-10,6,-2,-9,7,-6,3,1,-6,-1,-4,1,8,-3,-9,-8,2,8,8,-6,9,1,10,6,-7,-3,1,-10,-4,-9,-2,3,-2,9,-10,6,9,-1,-1,6,-4,-9,-5,-4,-2,1,2,9,4,-6,2,-4,-9,-9,4,8,-4,-2,6,7,1,-1,3,8,5,-4,6,-6,-2,5,10,-3,10,3,-1,1,10,4,-1,1,-8,3,-2,9,3,2,-9,8,-10,5,-1,5,10,5,4,9,2,6,-10,9,-10,7,-6,1,5,-9,-6,-10,-4,10,-2,1,-9,-9,1,2,-7,-5,5,-8,3,9,-2,8,5,-5,6,-2,-3,6,8,-9,9,7,9,-6,-3,-4,3,2,-9,-4,2,-2,8,-1,5,1,-4,-8,4,-9,-9,3], dtype = "int32")#candidate|1332|(288,)|const|int32
call_1331 = relay.TupleGetItem(func_447_call(relay.reshape(const_1332.astype('int32'), [288,])), 2)
call_1333 = relay.TupleGetItem(func_449_call(relay.reshape(const_1332.astype('int32'), [288,])), 2)
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
var_1342 = relay.var("var_1342", dtype = "float32", shape = (2240,))#candidate|1342|(2240,)|var|float32
call_1341 = relay.TupleGetItem(func_903_call(relay.reshape(var_1342.astype('float32'), [10, 16, 14])), 0)
call_1343 = relay.TupleGetItem(func_905_call(relay.reshape(var_1342.astype('float32'), [10, 16, 14])), 0)
func_299_call = mod.get_global_var('func_299')
func_301_call = mutated_mod.get_global_var('func_301')
call_1351 = func_299_call(relay.reshape(const_1332.astype('int32'), [8, 3, 12]))
call_1352 = func_299_call(relay.reshape(const_1332.astype('int32'), [8, 3, 12]))
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
call_1355 = relay.TupleGetItem(func_903_call(relay.reshape(var_1342.astype('float32'), [10, 16, 14])), 0)
call_1356 = relay.TupleGetItem(func_905_call(relay.reshape(var_1342.astype('float32'), [10, 16, 14])), 0)
func_1099_call = mod.get_global_var('func_1099')
func_1102_call = mutated_mod.get_global_var('func_1102')
var_1358 = relay.var("var_1358", dtype = "int32", shape = (2145,))#candidate|1358|(2145,)|var|int32
call_1357 = func_1099_call(relay.reshape(var_1358.astype('int32'), [15, 13, 11]), relay.reshape(var_1358.astype('int32'), [15, 13, 11]), )
call_1359 = func_1099_call(relay.reshape(var_1358.astype('int32'), [15, 13, 11]), relay.reshape(var_1358.astype('int32'), [15, 13, 11]), )
uop_1360 = relay.acos(var_1322.astype('float32')) # shape=(2, 416)
output = relay.Tuple([call_1321,bop_1328,call_1331,const_1332,call_1341,var_1342,call_1351,call_1355,call_1357,var_1358,uop_1360,])
output2 = relay.Tuple([call_1323,bop_1328,call_1333,const_1332,call_1343,var_1342,call_1352,call_1356,call_1359,var_1358,uop_1360,])
func_1362 = relay.Function([var_1314,var_1322,var_1342,var_1358,], output)
mod['func_1362'] = func_1362
mod = relay.transform.InferType()(mod)
mutated_mod['func_1362'] = func_1362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1362_call = mutated_mod.get_global_var('func_1362')
var_1364 = relay.var("var_1364", dtype = "int16", shape = (15, 3, 10))#candidate|1364|(15, 3, 10)|var|int16
var_1365 = relay.var("var_1365", dtype = "float32", shape = (2, 416))#candidate|1365|(2, 416)|var|float32
var_1366 = relay.var("var_1366", dtype = "float32", shape = (2240,))#candidate|1366|(2240,)|var|float32
var_1367 = relay.var("var_1367", dtype = "int32", shape = (2145,))#candidate|1367|(2145,)|var|int32
call_1363 = func_1362_call(var_1364,var_1365,var_1366,var_1367,)
output = call_1363
func_1368 = relay.Function([var_1364,var_1365,var_1366,var_1367,], output)
mutated_mod['func_1368'] = func_1368
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1592 = relay.const(7, dtype = "uint64")#candidate|1592|()|const|uint64
var_1593 = relay.var("var_1593", dtype = "uint64", shape = (6, 15, 4))#candidate|1593|(6, 15, 4)|var|uint64
bop_1594 = relay.left_shift(const_1592.astype('uint64'), var_1593.astype('uint64')) # shape=(6, 15, 4)
const_1611 = relay.const([[[9,10,5,6],[-5,-4,-9,-7],[9,6,5,6],[9,8,2,-7],[-7,6,1,8],[9,4,-8,10],[4,-5,9,5],[-1,-3,-6,-3],[9,7,-3,7],[-6,2,1,1],[-8,-6,-10,-5],[1,-5,10,2],[-9,-9,-3,-4],[7,-2,6,4],[2,10,-9,2]],[[-3,-9,-6,4],[9,8,10,-2],[8,5,-9,-9],[-9,10,4,-9],[2,-1,6,-4],[9,-8,3,-7],[-4,-8,-1,2],[6,7,-8,8],[-2,-6,6,-5],[1,-5,-3,-9],[5,10,2,6],[-7,-9,-7,3],[-8,10,-1,9],[10,8,6,-10],[5,-7,-5,-7]],[[5,-5,3,-4],[9,4,-10,-3],[9,-4,1,8],[-6,-2,-7,1],[-3,4,6,-8],[1,6,7,2],[3,10,9,-9],[-2,-6,-10,-3],[-5,2,5,6],[-1,7,-2,-3],[2,10,-1,6],[9,-2,-9,3],[-2,-5,4,4],[6,5,-10,-4],[2,-6,4,-6]],[[-6,-4,-3,-10],[4,1,9,-5],[-7,-4,9,-3],[-3,-3,3,-1],[-8,-3,-2,8],[-8,-3,-6,-3],[-7,2,-6,-8],[-4,-7,-10,5],[3,-3,-8,-10],[9,3,-2,-10],[3,6,9,-10],[4,-1,6,-6],[-1,-4,7,-5],[-7,-4,5,9],[-8,-9,8,-9]],[[7,-9,-5,9],[-2,-6,7,9],[-4,-5,7,-8],[9,-1,5,1],[1,4,-7,-5],[-6,-9,-6,10],[-1,8,-1,2],[-4,-8,4,-10],[1,4,-6,6],[10,8,-6,-6],[3,5,-2,3],[2,6,3,3],[-1,2,6,1],[5,-3,-6,-8],[-5,-5,1,-7]],[[-1,1,1,8],[10,9,-7,-3],[-8,3,-5,6],[-3,-1,9,7],[10,-2,3,1],[9,1,-8,8],[1,3,2,8],[-8,-10,-4,7],[-7,5,10,-7],[-5,6,-5,1],[-8,1,-4,5],[-5,-9,4,-5],[6,4,5,6],[2,-5,-6,10],[-3,-6,-10,-6]]], dtype = "uint64")#candidate|1611|(6, 15, 4)|const|uint64
bop_1612 = relay.equal(bop_1594.astype('bool'), relay.reshape(const_1611.astype('bool'), relay.shape_of(bop_1594))) # shape=(6, 15, 4)
output = relay.Tuple([bop_1612,])
output2 = relay.Tuple([bop_1612,])
func_1624 = relay.Function([var_1593,], output)
mod['func_1624'] = func_1624
mod = relay.transform.InferType()(mod)
mutated_mod['func_1624'] = func_1624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1625 = relay.var("var_1625", dtype = "uint64", shape = (6, 15, 4))#candidate|1625|(6, 15, 4)|var|uint64
func_1624_call = mutated_mod.get_global_var('func_1624')
call_1626 = func_1624_call(var_1625)
output = call_1626
func_1627 = relay.Function([var_1625], output)
mutated_mod['func_1627'] = func_1627
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1632 = relay.const([[[-0.737152,5.636022,-8.942920,5.098126,-4.175298,6.264837,-9.641588,5.399664,-1.727359,-0.685573,-6.648911,-9.557003,1.619656],[-5.440326,-9.071676,-0.148787,-5.625819,-0.671211,5.479761,-2.864594,2.874105,-1.046327,-4.261288,-3.018879,-1.134765,8.203080],[-3.190250,2.891482,8.353525,-5.009739,-2.371587,6.706228,-1.944799,8.591969,6.229363,4.251399,-3.356493,5.328659,-5.674119]],[[4.337004,-0.875779,5.685136,-8.592273,1.502523,5.349450,4.009198,-9.014342,-5.069775,-9.152526,-4.788814,7.354802,4.260514],[-2.235586,-8.200195,-7.819502,7.642805,7.316099,9.273216,-6.518661,7.398043,6.817646,6.544340,0.063391,-7.842328,5.549558],[-3.717916,2.404417,-1.574440,-8.976735,-7.262739,-3.830838,1.124218,-1.463341,-6.747082,1.292615,-3.590724,-0.803366,2.913499]]], dtype = "float32")#candidate|1632|(2, 3, 13)|const|float32
var_1633 = relay.var("var_1633", dtype = "float32", shape = (2, 3, 13))#candidate|1633|(2, 3, 13)|var|float32
bop_1634 = relay.maximum(const_1632.astype('float32'), relay.reshape(var_1633.astype('float32'), relay.shape_of(const_1632))) # shape=(2, 3, 13)
output = bop_1634
output2 = bop_1634
func_1646 = relay.Function([var_1633,], output)
mod['func_1646'] = func_1646
mod = relay.transform.InferType()(mod)
mutated_mod['func_1646'] = func_1646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1647 = relay.var("var_1647", dtype = "float32", shape = (2, 3, 13))#candidate|1647|(2, 3, 13)|var|float32
func_1646_call = mutated_mod.get_global_var('func_1646')
call_1648 = func_1646_call(var_1647)
output = call_1648
func_1649 = relay.Function([var_1647], output)
mutated_mod['func_1649'] = func_1649
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1660 = relay.const([[[7.201018,2.652175,-9.641994,5.674506,-0.967612,-6.910004],[8.208504,-4.042648,-8.187087,-0.112434,2.418356,-5.417454],[-6.521262,2.266080,7.720515,9.148463,1.417110,4.879350],[6.963380,2.805043,-0.977576,0.816809,-6.764362,3.972880],[-5.139355,-9.006465,-9.550355,5.784484,-6.741349,8.035301],[-5.926785,-2.628074,-6.645104,7.720275,9.506100,8.985565],[8.655359,5.665267,2.788381,-4.599991,-9.378739,0.558303],[6.432609,-5.711273,-5.908917,6.541709,-5.844888,-5.983137],[9.328532,-2.093044,-0.936896,0.339941,-6.678313,0.632097],[3.877519,4.621966,-4.331138,-4.104451,-1.303198,1.983350],[-6.924398,9.140335,-8.030920,5.205926,3.476136,-7.734688],[-2.153929,5.087245,-3.206086,-3.993569,-6.154760,-2.439449],[-9.868745,6.743045,7.988354,7.494514,9.402348,-0.217105]],[[-7.566831,-5.299059,7.587171,6.280476,-8.603579,0.832092],[9.271974,-5.367628,7.320070,-8.110105,7.363751,-8.875129],[-3.219527,-8.245825,-5.380498,-6.325617,8.342213,5.493248],[0.459494,-6.457256,1.014476,6.974988,3.398806,2.599427],[-2.429963,-7.434584,7.342658,-5.571119,7.139108,4.687103],[7.629815,-6.049002,-8.907782,7.399493,8.133179,4.332024],[6.085475,9.873957,-4.465316,-7.292553,1.963874,-9.395305],[2.305963,-7.555758,-7.256604,0.773649,2.329363,-4.170284],[1.433540,-8.111979,9.335118,0.869387,-7.878145,2.741218],[6.086250,8.217328,-4.320083,5.320032,-3.618337,-4.029718],[-5.121355,-8.578426,-9.879145,9.396001,-1.867088,-4.810512],[-7.336268,7.878024,-3.434387,8.000752,-0.710517,-2.114369],[9.668545,-8.144600,-7.931691,-5.768954,-6.359245,-5.133665]],[[6.671226,-5.770472,0.966227,4.595030,2.511334,-9.362892],[6.560696,1.298438,-7.950789,-9.640136,-5.336831,2.333012],[-6.935915,1.091415,-3.916337,9.293810,8.337313,-3.540504],[-6.564052,-9.850769,-5.034095,5.647495,4.385544,4.715197],[5.398545,6.201457,-8.634730,-9.206170,-2.962218,-8.677964],[5.344315,-1.089113,4.117537,-4.593288,-7.673436,8.704896],[3.202803,-0.372054,-1.297589,5.227388,0.320344,7.014720],[7.199579,-3.907810,6.073901,3.529157,-6.719393,0.617217],[-1.724656,4.160098,4.087728,8.971457,-4.682740,3.485098],[8.413078,-9.603082,8.824188,-3.876751,2.595627,-8.783438],[7.922551,8.157549,5.072618,-7.526053,-0.078917,-2.039322],[-7.122447,0.869095,1.380839,8.196210,5.357832,5.271331],[9.895229,6.916381,6.119630,7.480656,2.939569,-3.773615]],[[-6.941140,-3.940210,3.004455,-0.327911,-8.593657,-7.390644],[-9.185208,-6.896882,1.722197,-1.952013,-9.292835,2.951776],[8.945371,-9.742394,6.631758,9.353863,8.494710,9.517901],[-2.730443,5.825481,7.811784,-1.987786,3.535432,4.711604],[-8.518503,-2.217072,5.912905,-7.211805,-4.966901,-7.553018],[-0.450238,2.761482,4.695882,-6.081186,-1.974323,3.128382],[9.823412,0.313249,-3.275507,3.810845,-8.859467,2.061239],[7.591294,-7.466071,8.459504,9.123563,-3.184595,9.173063],[9.436959,9.072336,3.971137,6.282825,-4.286709,-6.835671],[4.855914,-9.908713,7.585689,-3.684884,3.130783,-4.076023],[3.793449,-7.301135,9.329059,7.414492,7.769178,-8.736807],[6.397520,0.458582,3.743950,3.131329,7.891679,-7.265088],[9.519791,9.134550,-3.523346,8.514589,-1.615225,3.587318]],[[-0.242833,-9.969699,-2.787838,-0.408954,2.040383,7.334876],[1.707844,5.347835,-4.544341,4.694877,-1.568732,6.214679],[0.884098,-3.673665,-3.596869,2.878835,3.665302,6.285357],[-2.355788,8.456241,0.967090,-0.680765,4.713494,-4.933361],[-5.740482,-4.888264,-6.144927,1.947192,-5.048418,1.550724],[2.181121,0.510762,7.828981,-3.034174,7.171713,1.513459],[9.613527,1.688070,3.574846,-0.560315,-8.837921,2.122534],[-1.198040,-6.143027,-1.055138,-2.601330,-2.882442,-5.281985],[-2.108426,5.593739,8.053335,-4.986030,9.247060,1.387462],[2.327065,-9.110937,-1.233217,4.409731,-8.120904,-3.647715],[7.010285,-1.419613,-4.943456,4.792352,-0.348546,-2.097691],[0.614022,-9.432679,6.857606,-8.865262,2.979335,-2.582716],[-6.530655,7.221144,0.269802,5.571957,-3.971238,-8.346108]],[[1.034262,0.688019,-3.693127,9.719782,-8.754312,-6.274999],[7.182135,6.517681,1.253901,7.562195,9.641091,-6.762015],[-8.094974,9.898805,-1.174892,3.447279,-8.806298,4.796658],[1.013617,-3.148217,-5.570709,7.210807,0.454015,-3.140020],[-6.084003,-7.681195,-2.606733,-9.142593,1.760943,2.737763],[1.705963,4.750548,2.704681,-6.980016,6.311856,6.298706],[-2.870388,5.380752,9.056500,-8.647998,5.693481,0.136878],[-9.407272,-1.669678,2.116264,5.607766,8.592677,-4.056721],[3.461949,7.673997,-7.104197,-3.523310,8.559795,-5.798366],[3.295223,-6.839926,-5.496731,5.875935,2.217053,-0.429187],[5.892840,2.745742,-1.764930,-6.944582,-8.124352,-4.803742],[-2.587838,5.645013,-9.691200,-7.873609,7.542324,9.810247],[-7.756901,-0.004855,-9.266877,-4.203355,-4.870373,-9.079201]]], dtype = "float64")#candidate|1660|(6, 13, 6)|const|float64
var_1661 = relay.var("var_1661", dtype = "float64", shape = (6, 13, 6))#candidate|1661|(6, 13, 6)|var|float64
bop_1662 = relay.floor_divide(const_1660.astype('float64'), relay.reshape(var_1661.astype('float64'), relay.shape_of(const_1660))) # shape=(6, 13, 6)
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
const_1671 = relay.const([-6.718114,-4.076465,5.986367,-0.175750,-2.112555,-2.792337,6.645995,6.086418,-6.419027,0.436757,-4.707018,-7.725003,-4.988935,9.709312,0.447994,3.728468,-9.814343,-6.590646,4.319081,-7.122373,-7.785479,3.501025,-9.178239,-5.268914,-0.351001,-9.483586,7.846599,6.412039,5.677562,2.732257,7.795177,-0.319933,-3.512522,5.043766,2.752256,8.755469,-2.849428,-9.685203,-9.227386,-5.961199,-0.142991,7.156454,0.353415,2.394597,4.376214,-0.174865,0.502943,-4.783764,9.257302,8.265640,2.524325,0.500610,1.869381,1.083656,-9.965957,-9.468283,-5.513830,-3.328691,-0.120016,-5.391008,-4.367792,-4.935719,-8.235009,-5.798364,-9.916416,-5.130941,-8.934687,-6.690698,9.488237,8.273592,8.260514,-9.491223,7.429583,8.341635,-7.340204,7.921431,-9.464754,-1.242404,9.547020,1.388235,-1.134330,5.448463,2.728618,-5.215054,2.288172,-7.048053,-7.612779,-3.179626,3.158574,6.575540,-3.380300,-0.753760,8.425264,8.841750,6.018325,-0.072342,-6.454795,1.391571,7.661531,8.059917,2.440930,3.215286,-9.182231,-2.694477,-8.820102,-6.111228,-7.419535,0.877263,4.953085,-2.923939,3.955561,7.504395,8.111316,6.604438,-2.531081,5.658636,-9.948032,3.640733,4.673636,-3.195350,-1.106987,-3.036948,-7.807292,-3.087618,-3.929141,-5.623238,3.583913,5.522300,-1.925438,-0.182322,5.013010,0.573627,-2.631539,2.137403,-4.039234,1.438298,-1.497783,5.749154,-1.112080,-0.987671,5.176997,-0.636034,-1.909133,5.548398,5.831155,-6.853154,4.899711,-1.013929,-9.764214,0.816022,-7.295376,0.987143,-4.853462,5.822291,-7.162483,0.671607,-7.762508,1.653443,-1.185596,-4.916551,-4.918680,-4.952200,-5.802149,7.368360,-9.750737,3.679628,-0.402314,3.143357,0.166878,0.113158,4.001863,9.029976,-1.143259,-2.446325,0.066088,-2.287884,9.454506,-8.864551,-3.252425,5.303232,-0.662884,6.571875,2.734570,-4.337778,5.884718,0.383679,-6.913289,-3.608339,2.306149,6.744282,4.218267,-4.992943,7.158971,-6.360454,-4.354708,-8.859258,-4.332376,0.888322,0.783280,1.393671,8.369220,0.782837,6.871343,2.189033,-6.213131,-0.061432,-2.899646,7.038782,1.760579,1.103632,2.322582,-9.747542,5.852367,5.027931,0.260952,8.334692,9.569412,2.354137,5.690267,9.690255,0.046897,7.858359,-9.442010,3.963248,8.106289,-7.326578,5.632148,-1.426235,-6.170737,8.911532,-4.787277,5.153500,6.931130,8.412407,8.339945,-4.826659,-2.745459,-7.878024,-9.893483,-6.641470,2.221563,-3.140714,4.593149,0.514421,9.532933,-4.747331,-2.904780,2.571125,-8.240923,-7.261338,-6.036915,-3.554102,-3.507987,7.349307,9.300136,-7.347209,-1.504296,2.000011,-7.989395,-1.315919,9.125098,7.853251,-4.686814,6.572681,2.513544,-6.141428,-7.342383,-4.466532,7.598950,-0.383674,3.060604,7.051337,1.420897,-8.424290,-9.629832,2.992028,9.566874,8.485089,-4.176403,-4.288036,-7.009471,5.628484,5.686106,5.275602,2.473023,8.430714,4.353485,9.418894,1.397345,-6.357267,-8.840045,2.113851,-7.964655,2.952508,0.856561,1.611294,-6.326499,3.952539,-3.241375,-4.995338,-2.023520,9.520527,4.819344,-7.703354,-4.740489,-1.671089,1.977795,-0.312424,-0.949706,-4.987988,3.804291,7.458737,-2.361165,0.207641,0.111578,-1.514298,-6.903860,0.987637,-8.865978,-1.927112,-5.478875,0.855668,6.412621,-2.690607,4.380653,5.775727,-3.799940,-2.625544,1.487867,1.310391,-4.280514,-5.101841,2.992913,-4.918507,-5.340459,-4.594905,0.642380,-9.020375,0.418454,-4.082723,8.830903,3.376178,-7.409910,-0.296886,-0.974197,-2.009274,8.525857,8.916814,5.181066,7.181074,-7.387840,-7.793411,9.687751,-0.476421,2.927201,-7.709181,1.286645,-2.611013,6.289679,4.818964,8.970186,-2.147141,6.792892,8.473888,3.055703,-1.129900,1.738686,8.360873,6.342905,3.795901,-3.412438,2.108622,-0.220323,5.737495,-7.865129,1.634446,4.546554,-8.877949,6.910932,3.167899,-0.266114,-7.185726,-6.559643,8.534190,-2.432820,1.537069,-1.797940,-5.119980,-1.785023,-8.325854,-7.894322,-7.496928,-3.854807,-5.588298,3.359915,-5.999526,7.947827,8.744254,4.286061,3.723049,1.719278,-3.314904,2.300608,-3.121066,2.736228,-6.363536,-0.858689,0.713821,-7.467529,-0.381570,3.544997,5.606170,-4.681153,-2.573104,3.782290,2.705095,-0.525420,-7.116886,-7.995917,-0.977098,-3.991107,7.448057,5.099235,0.385968,9.662646,6.039546,-9.220000,2.170268,6.716793,-1.886480,-5.085404,-0.392304,-3.122237,-0.099090,3.880453,-6.961272,-7.629612,4.591409,-2.299685,4.712302,-2.495965,-6.522560,9.217843,7.438993,1.505033,-3.059285,8.752547,9.486933,4.782746,-8.818506,-0.554256,-1.248993,1.862129,-0.779135,-3.080543,7.308216,4.548090,-5.665461,2.392870,1.274183,0.856705,-0.374091,-2.911786,-8.127669,-2.259679,1.829476,0.216678,8.473028,7.987300,-9.864425,9.419220,-6.415476,7.404347,0.819147,6.103568,-3.508912,-4.053458,9.332154,-4.151701,5.785771,9.694152,4.445309,-2.725081,6.957040,-6.157956,-3.468632,1.610019,-4.181890,2.138760,3.853586,6.472485,5.077667,6.128634,-9.530433,2.641557,-0.589225,-3.525504,1.130016,-9.432636,-6.650028,6.369273,-8.119788,-0.087224,4.396241,-5.204438,-3.901741,-8.369595,-9.550244,-5.085985,9.952008,-3.719664,-6.139626,3.666566,5.412144,-8.737071,5.274972,-3.422930,-5.306107,-0.750750,-5.237790,4.294418,-2.093585,8.412449,4.794625,-1.457285,7.865108,-2.575187,0.745554,1.510740,7.118201,2.279958,1.101342,-8.981213,-4.879601,-6.586223,6.506547,8.139909,1.119408,-1.906706,-0.717231,-5.448497,4.363219,-6.532246,-0.990342,-3.350718,0.145157,-8.980353,7.104587,1.248040,-5.506098,9.691348,0.160465,1.515563,8.364043,7.913118,-1.044071,6.569636,-0.694778,2.214052,8.011412,-3.671640,2.309122,-7.800382,7.948982,-1.981371,0.806441,3.030439,-1.553947,9.343667,5.855297,6.149310,-2.195888,9.349931,-5.835333,-8.525745,-3.943902,5.583168,4.691794,1.124163,3.148194,-0.438670,7.758725,0.128821,5.032221,9.830340,9.723318,-1.499161,0.667852,-4.285725,-1.839332,3.211084,5.782792,-1.536988,-3.558217,6.549594,7.897359,-0.377795,7.633305,-1.482099,5.245267,9.800033,1.410643,-1.538558,-5.308373,-5.232208,8.432806,5.200624,-5.829319,-6.592053,9.784646,-2.263366,6.208940,2.457266,-2.606061,9.435150,6.553490,-8.887159,5.010331,4.975001,3.984956,-7.476433,-5.524764,8.235179,-9.784847,8.003883,8.288168,-7.557844,7.572068,-3.112206,-8.788557,5.720099,-1.135699,-2.984572,-1.891313,5.432394,5.569776,5.164387,-5.398334,9.913675,-1.273552,-8.169015,-1.205090,-7.975178,9.163651,-3.242887,9.430313,0.304441,3.663173,8.416029,-8.377919,-3.063546,-4.589160,6.907707,-6.508260,8.110736,6.532801,8.499026,3.158834,0.251504,-4.662024,-1.359961,7.733390,1.815542,2.547990,9.120651,-3.383702,2.655908,3.310905,0.111513,5.295776,-7.637035,-5.249184,5.366204,8.003873,-1.834093,-0.519941,8.045737,7.507085,-1.553460,9.766774,-2.023453,4.353030,2.849684,-3.672326,2.058214,8.083827,-1.534629,3.002498,8.185637,4.763989,-2.327116,-4.403593,4.156257,-5.922538,-1.989902,2.187950,1.957167,4.982317,6.920244,1.328995,1.682502,-0.224495,2.885147,6.956552,1.954959,-0.167283,-7.580220,8.107095,-6.983810,-6.950774,-0.747996,0.238081,-4.763607,-9.999175,-6.539919,-3.245897,-7.492370,-6.485507,-1.766251,6.189249,-6.928733,2.523704,-6.959469,-1.808265,4.824291,-4.362614,0.552885,5.699269,-8.966696,9.630285,-9.920701,-2.893081,8.258607,-4.966028,5.282222,6.951296,1.290620,-1.423952,5.372580,5.277567,0.877442,-8.162011,5.046238,6.652159,0.496025,6.135264,-1.990296,8.008890,-2.343102,-8.753384,4.632158,2.315847,-0.246364,-4.654681,-3.885727,-1.048472,6.394600,-2.902753,9.382387,-0.029823,5.939607,-3.404629,-3.311897,7.225467,4.697080,-5.309886,0.643590,4.459269,9.434394,8.662101,1.373654,-7.716014,8.931414,-8.086438,-4.637242,8.037570,-4.520074,9.102176,9.174149,7.341188,-8.924999,4.831339,8.736470,-2.906157,2.923444,-7.661232,5.913354,7.156161,-7.243912,3.300474,2.824154,-3.106852,-6.182497,-8.090628,-7.621968,-2.085330,0.663921,-5.913255,5.247188,0.392513,-5.459940,2.726281,-4.079833,-2.512833,-0.739257,9.679623,8.444643,9.611661,-3.983649,5.657586,9.299955,2.557802,-6.932330,1.750714,-7.741839,-7.342495,5.512597,7.105667,-6.348484,-1.631277,1.833068,-9.817497,5.218254,5.448099,6.594553,-7.436584,-1.871295,9.156803,3.313470,-0.042964,-1.136981,-2.431519], dtype = "float32")#candidate|1671|(832,)|const|float32
call_1670 = relay.TupleGetItem(func_639_call(relay.reshape(const_1671.astype('float32'), [8, 8, 13]), relay.reshape(const_1671.astype('float32'), [8, 8, 13]), relay.reshape(const_1671.astype('float64'), [8, 8, 13]), ), 3)
call_1672 = relay.TupleGetItem(func_643_call(relay.reshape(const_1671.astype('float32'), [8, 8, 13]), relay.reshape(const_1671.astype('float32'), [8, 8, 13]), relay.reshape(const_1671.astype('float64'), [8, 8, 13]), ), 3)
func_227_call = mod.get_global_var('func_227')
func_230_call = mutated_mod.get_global_var('func_230')
const_1676 = relay.const([-7.313724,0.217862,-6.543995,1.979039,8.035196,2.513130,4.033491,3.843422,-3.234240,-5.513057,9.944661,-9.554217,-8.511137,-5.638999,9.990416,8.230025,-4.677603,-3.602916,-9.577761,-0.858718,4.843102,4.087884,-3.308658,8.090756,7.156996,-9.391212,8.565739,0.027161,9.794930,2.674991,8.547142,-5.478039,4.313486,-9.810987,-1.833340,-2.402464,-0.003172,-6.870380,-5.411152], dtype = "float32")#candidate|1676|(39,)|const|float32
call_1675 = func_227_call(relay.reshape(const_1676.astype('float32'), [13, 3, 1]))
call_1677 = func_227_call(relay.reshape(const_1676.astype('float32'), [13, 3, 1]))
func_227_call = mod.get_global_var('func_227')
func_230_call = mutated_mod.get_global_var('func_230')
call_1684 = func_227_call(relay.reshape(call_1675.astype('float32'), [13, 3, 1]))
call_1685 = func_227_call(relay.reshape(call_1675.astype('float32'), [13, 3, 1]))
output = relay.Tuple([bop_1662,call_1670,const_1671,call_1675,const_1676,call_1684,])
output2 = relay.Tuple([bop_1662,call_1672,const_1671,call_1677,const_1676,call_1685,])
func_1690 = relay.Function([var_1661,], output)
mod['func_1690'] = func_1690
mod = relay.transform.InferType()(mod)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1691 = relay.var("var_1691", dtype = "float64", shape = (6, 13, 6))#candidate|1691|(6, 13, 6)|var|float64
func_1690_call = mutated_mod.get_global_var('func_1690')
call_1692 = func_1690_call(var_1691)
output = call_1692
func_1693 = relay.Function([var_1691], output)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1730 = relay.const(4, dtype = "uint16")#candidate|1730|()|const|uint16
var_1731 = relay.var("var_1731", dtype = "uint16", shape = (1, 7, 6))#candidate|1731|(1, 7, 6)|var|uint16
bop_1732 = relay.logical_xor(const_1730.astype('uint16'), var_1731.astype('uint16')) # shape=(1, 7, 6)
output = bop_1732
output2 = bop_1732
func_1772 = relay.Function([var_1731,], output)
mod['func_1772'] = func_1772
mod = relay.transform.InferType()(mod)
mutated_mod['func_1772'] = func_1772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1773 = relay.var("var_1773", dtype = "uint16", shape = (1, 7, 6))#candidate|1773|(1, 7, 6)|var|uint16
func_1772_call = mutated_mod.get_global_var('func_1772')
call_1774 = func_1772_call(var_1773)
output = call_1774
func_1775 = relay.Function([var_1773], output)
mutated_mod['func_1775'] = func_1775
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1809 = relay.const([[[True,True,False,True],[False,False,True,True],[True,True,False,True],[False,False,False,True],[True,False,False,False],[False,True,False,False],[True,True,True,False],[True,False,False,True],[True,False,False,False],[False,True,True,True],[True,True,True,True],[True,True,False,False],[False,False,True,False]],[[False,True,True,True],[False,False,False,False],[True,False,True,False],[True,True,False,True],[False,True,True,True],[False,False,True,True],[True,True,False,True],[False,True,False,False],[False,True,True,False],[True,True,False,False],[False,True,True,True],[False,True,False,True],[True,True,False,True]],[[True,True,True,True],[True,True,False,True],[False,False,True,False],[True,False,False,True],[False,True,True,False],[False,False,True,True],[False,True,False,True],[True,False,False,False],[False,True,True,True],[False,False,False,False],[False,True,False,False],[True,True,True,True],[False,False,True,False]],[[True,False,True,True],[False,True,False,True],[False,False,True,False],[False,True,True,False],[True,True,True,True],[False,True,True,True],[False,False,True,False],[True,False,True,False],[True,False,True,True],[False,True,False,False],[True,True,False,True],[False,True,False,True],[False,True,True,False]],[[False,False,True,True],[True,False,True,False],[True,False,False,False],[True,True,True,True],[False,True,True,True],[False,True,True,True],[False,True,False,False],[False,True,False,False],[False,True,True,True],[False,True,True,True],[True,True,True,False],[False,False,True,False],[True,False,True,True]],[[True,False,False,True],[True,True,True,True],[False,True,False,False],[True,True,True,True],[False,False,False,False],[True,True,False,True],[True,False,True,False],[False,True,True,False],[True,False,True,True],[True,True,False,True],[False,False,False,True],[False,True,False,False],[False,False,False,True]],[[True,True,True,False],[True,False,False,True],[True,False,True,True],[False,True,False,True],[False,False,False,False],[True,False,False,True],[False,False,True,False],[True,False,True,False],[True,False,True,False],[True,True,True,False],[True,True,True,True],[False,True,False,False],[False,True,False,True]],[[True,False,False,True],[True,True,True,False],[True,True,False,False],[True,True,False,False],[True,False,True,False],[True,False,False,True],[False,False,True,False],[True,True,True,True],[False,True,False,True],[False,False,True,False],[True,True,False,False],[True,True,True,False],[True,False,False,False]],[[False,False,True,False],[True,False,False,False],[True,True,True,True],[False,False,False,True],[False,True,True,True],[True,True,True,False],[False,False,False,True],[False,False,True,True],[True,False,True,False],[False,False,False,False],[True,False,True,False],[False,False,True,False],[True,False,True,False]],[[True,False,False,False],[True,False,True,True],[True,True,False,False],[True,False,False,False],[False,False,False,True],[False,True,True,False],[True,False,False,True],[False,True,True,False],[False,False,False,True],[False,True,False,True],[False,True,True,False],[True,True,False,True],[False,False,False,False]]], dtype = "bool")#candidate|1809|(10, 13, 4)|const|bool
var_1810 = relay.var("var_1810", dtype = "bool", shape = (10, 13, 4))#candidate|1810|(10, 13, 4)|var|bool
bop_1811 = relay.logical_and(const_1809.astype('bool'), relay.reshape(var_1810.astype('bool'), relay.shape_of(const_1809))) # shape=(10, 13, 4)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
const_1815 = relay.const([[-9.253595,-3.559272,-2.157768],[-0.598809,-7.790354,-4.306375],[-8.151613,6.691687,8.269317],[9.451669,9.782484,-3.571733],[-1.225714,-7.023742,-1.785138],[-6.586655,5.648273,1.952693],[-4.518969,-0.838141,2.081917],[-7.445833,4.386336,-8.874091],[1.697426,9.721739,0.009971],[-3.154195,9.821009,-5.125441],[-6.497485,-0.482063,7.564808],[-2.287733,2.604866,-2.977092],[3.919283,-2.650828,-1.249963],[0.479128,2.467786,1.412383],[9.053291,-2.174410,-8.845132],[-3.036660,9.549366,6.956361],[-7.032839,-8.321706,-8.638551],[2.565637,8.411438,-7.303551],[-8.117101,9.206165,-7.916417],[-2.512631,4.356909,7.834635],[1.092113,-8.777238,-8.730707],[-2.024110,0.764758,0.133730],[8.771895,-7.063530,-9.358433],[6.776389,-8.772837,-3.993952],[9.050725,-1.461758,3.128645],[-3.499588,0.318599,7.977931]], dtype = "float32")#candidate|1815|(26, 3)|const|float32
call_1814 = func_1646_call(relay.reshape(const_1815.astype('float32'), [2, 3, 13]))
call_1816 = func_1646_call(relay.reshape(const_1815.astype('float32'), [2, 3, 13]))
output = relay.Tuple([bop_1811,call_1814,const_1815,])
output2 = relay.Tuple([bop_1811,call_1816,const_1815,])
func_1819 = relay.Function([var_1810,], output)
mod['func_1819'] = func_1819
mod = relay.transform.InferType()(mod)
mutated_mod['func_1819'] = func_1819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1820 = relay.var("var_1820", dtype = "bool", shape = (10, 13, 4))#candidate|1820|(10, 13, 4)|var|bool
func_1819_call = mutated_mod.get_global_var('func_1819')
call_1821 = func_1819_call(var_1820)
output = call_1821
func_1822 = relay.Function([var_1820], output)
mutated_mod['func_1822'] = func_1822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1903 = relay.var("var_1903", dtype = "uint8", shape = ())#candidate|1903|()|var|uint8
const_1904 = relay.const([[[-2,2,-4,3,-1,-6,5,3,-10,8,-10,4,2,8],[-6,1,3,-7,8,-2,1,3,-3,3,-9,-1,-4,10],[-3,-2,-3,8,-10,6,5,9,5,-3,8,-2,-7,-5],[8,-6,4,-9,-3,-4,1,1,7,5,1,10,4,-6],[7,-9,-9,-5,3,9,-2,-8,-2,-3,6,10,-6,7],[-2,-8,-8,-5,3,7,5,-1,10,4,-6,-2,-4,10],[-3,-9,-3,6,-5,-6,1,4,1,7,-3,-5,9,-3],[-10,-5,1,-7,-1,6,6,-4,-7,-6,-2,-10,-5,5],[-10,7,3,-2,5,9,-4,2,8,8,-4,2,7,-2],[4,-6,-8,-6,-6,5,8,7,-10,-4,7,-2,6,9],[-5,-8,2,7,9,-1,10,4,10,1,-2,-8,9,-2],[-3,8,3,1,2,-5,9,-5,10,10,3,-1,8,-4],[9,-2,6,-4,-8,4,1,2,-5,-3,-8,-6,4,-8],[7,9,-9,-10,-3,-5,7,10,9,2,-8,-9,-7,9],[-2,-6,-8,-5,-8,-3,-7,-1,-8,-4,4,10,-10,10]],[[6,1,-6,-7,3,-3,-6,3,5,-8,6,9,-10,2],[2,9,3,5,8,4,-5,4,3,3,-9,10,-4,5],[-10,4,-1,9,3,-3,-8,-2,-6,-2,-4,-7,-9,8],[6,9,-2,-7,8,-9,9,-3,1,-10,2,5,9,10],[-1,-3,-4,4,-5,-1,6,-3,-1,2,2,8,3,1],[-9,2,-9,-8,7,-1,2,5,-1,3,-5,-6,4,-2],[-1,-3,-5,-10,-9,-9,2,-9,1,4,-2,-4,1,-5],[-5,-6,-3,-7,-1,5,7,6,-4,-6,9,-7,-9,10],[-2,-7,-6,-3,9,5,9,1,6,5,-4,-6,-3,6],[5,-1,4,4,-10,-7,1,10,4,5,-1,-1,-3,8],[2,-9,-3,-4,10,-7,6,-3,7,-6,7,4,-2,-2],[4,3,5,2,4,-7,3,7,9,8,-3,9,-6,5],[8,2,-7,-7,-7,-4,-5,5,6,-1,2,-1,6,5],[2,1,-7,-1,8,-1,-9,3,-6,3,-8,7,8,5],[7,-7,9,-9,10,3,8,-10,10,10,-2,8,-1,-2]],[[-2,-4,-6,-7,8,-3,4,6,-1,10,10,7,-6,3],[-1,-8,-3,-1,-5,6,-2,2,5,1,-4,7,-10,-5],[-9,-4,5,-3,-6,7,-3,-3,-10,-3,2,-2,5,-10],[4,-1,-6,-5,-1,-7,-5,6,-7,-4,-5,3,3,6],[5,-2,3,-5,-2,-8,-1,8,9,-3,-5,3,-4,-9],[-2,-2,3,5,9,3,-10,-2,7,-6,-4,-5,6,8],[6,6,4,-2,-3,-1,9,-4,6,-2,6,1,9,-10],[6,4,7,8,7,8,-1,4,4,10,4,5,2,-3],[-4,3,-2,1,-6,-3,-3,6,-10,3,-6,4,-7,-1],[4,7,6,-7,-8,10,-1,10,1,-7,6,-5,-5,4],[5,-8,-9,7,8,6,4,3,-6,-9,-8,-8,-6,-9],[-9,2,8,4,-8,5,-5,-3,4,6,8,-6,2,5],[6,-1,-6,-10,-5,-4,-3,9,9,-9,-8,4,2,4],[-4,4,-2,-7,-9,3,-9,-7,5,2,-7,-6,10,3],[-9,-4,8,7,4,-6,-8,7,5,2,9,3,-9,-1]],[[8,8,2,4,-9,-8,4,-6,-5,10,6,-10,-7,2],[-10,2,-8,-9,2,8,6,-6,2,-1,-4,6,4,-6],[-7,-7,-3,6,7,10,1,-3,-6,7,1,-4,10,9],[-6,-5,3,-1,-10,8,4,-9,9,-4,-10,-2,1,-8],[-8,5,3,-8,-3,-5,-5,2,-2,-6,10,-6,1,3],[-6,2,-9,-9,-8,-9,3,6,6,7,7,-8,3,9],[-2,7,3,-3,6,-5,8,-7,-9,-10,1,2,3,6],[6,2,-10,-5,8,-5,9,-1,5,9,-3,8,8,-3],[-2,9,-6,5,9,9,9,4,-8,-6,-2,-7,-5,10],[-7,-6,-2,8,-5,-6,-4,-4,2,2,2,3,4,-9],[-4,-6,-2,1,-5,-3,-1,-7,-5,7,-6,7,6,1],[9,3,-1,-6,1,-8,-6,9,2,-10,4,4,6,-9],[1,-6,-4,-6,8,-9,-9,7,7,-1,-1,-8,8,-6],[-5,-9,-9,-7,-4,7,4,4,2,-9,7,-10,10,-3],[3,-5,6,-5,8,9,6,5,1,-5,1,4,3,4]]], dtype = "uint8")#candidate|1904|(4, 15, 14)|const|uint8
bop_1905 = relay.right_shift(var_1903.astype('uint8'), const_1904.astype('uint8')) # shape=(4, 15, 14)
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
const_1909 = relay.const([-2.281212,-0.404861,-6.750645,-1.681328,-4.950723,1.030893,-6.197045,-6.848636,-5.526561,9.146095,2.494754,-8.007519,-5.047033,9.200007,-0.008325,-9.057977,3.704469,-0.460804,5.036084,-3.917163,4.746277,8.960479,-8.591937,-5.152301,3.898939,-5.538682,-4.498783,-1.511975,-3.205572,-8.824507,0.285526,-6.592294,-6.757112,-8.897607,4.564141,6.095349,2.560941,4.758731,-3.520199,-5.824755,2.395527,-3.569098,7.179408,-4.258759,8.582734,2.109706,-7.207287,0.309874,-6.605393,-9.311263,-6.392333,-6.014373,-8.067290,8.915601,-7.843939,0.990683,-9.206929,9.635332,-8.554067,5.615421,6.303952,1.942654,-3.123041,-3.564864,-5.520474,8.516730,-0.204799,-9.443494,5.865664,9.019098,1.810145,9.220519,2.429332,-3.697745,6.929725,0.855910,-9.107429,-7.569833,3.797909,5.266623,4.849274,-8.689900,2.471016,-5.573798,-7.232543,-9.576838,-6.597227,6.882358,-3.667658,-5.827392,9.609298,-0.078825,-1.096699,9.629227,8.576071,5.391715,5.683994,-1.544193,9.403309,1.794493,2.272731,3.524908,3.254436,0.520982,-7.909070,7.559359,1.107207,5.765007,-2.011404,7.369684,-4.582561,-9.696795,-3.111759,-2.497428,-6.106295,8.276689,9.491174,2.034091,3.511259,-6.637195,-2.402668,3.203559,-2.621033,6.782123,7.927671,-0.013293,-1.047680,5.583439,-1.493816,-4.272119,9.026033,-0.693773,-8.885889,-9.649173,-9.199500,-1.231776,-2.116771,-6.869332,-0.742151,-1.037584,-8.390977,1.179040,4.755459,6.103923,-6.469242,-6.440130,1.852860,-3.942717,6.765929,8.870294,-3.708762,-8.029932,0.781246,8.302689,3.470055,-0.597017,-6.805877,-6.934480,-2.421066,6.553726,8.500635,1.256381,-6.589979,-2.596800,-5.160010,9.837951,1.456087,6.450100,-9.797234,1.941325,-7.372040,5.242639,7.391868,8.280627,6.986537,5.575450,-0.594465,3.304867,-1.721955,-9.803349,8.922765,8.329537,-0.481022,-0.319452,1.553679,-5.421139,7.475864,6.459805,7.251980,-7.751160,1.959716,6.171140,-2.615733,4.250854,-1.578220,3.953642,5.131519,7.453997,-3.583170,7.113141,2.143381,5.599050,4.063482,9.375633,9.357899,-1.619722,5.951351,3.106447,-2.789987,0.399136,-8.757093,6.310227,3.191876,1.251161,-9.235607,-4.543131,-2.513271,-5.346808,-5.096922,-7.260583,3.854169,-0.273244,-8.265349,7.691953,-9.432233,-5.172450,6.833833,5.975761,-8.194449,-2.152487,5.412524,-4.031022,2.732386,0.633292,-1.144325,0.036722,-3.957617,0.067259,6.810510,-9.614711,3.855213,1.249071,-4.688888,1.513156,7.583809,3.227069,-7.734436,4.010209,-9.754018,0.137755,-5.598497,-9.800489,6.253908,-4.884555,-3.754979,-2.878336,5.219246,3.017109,-1.043958,-8.505440,-9.997251,-3.251358,6.779070,-8.411679,1.287524,-2.917977,6.380256,-7.805355,-2.908476,0.912470,9.780215,-7.603105,9.814537,-2.650579,0.848792,-1.206880,-8.865528,-4.000195,-4.948536,5.170149,3.913157,5.712589,8.920832,8.922065,-3.824435,-2.926875,-2.024408,-0.438977,-1.191437,-1.451883,5.380119,-7.142082,6.458616,1.279985,6.073629,8.812137,6.492849,8.077188,4.512857,-3.108053,-1.044705,0.907457,-9.487707,-9.722205,5.466751,-2.635248,6.917580,-8.280353,8.437059,-4.870678,1.663033,2.182264,1.227098,0.357991,9.661996,-1.669770,-1.901241,2.246659,-5.420409,-4.202739,-8.830979,-3.608155,4.707976,-1.004295,8.865546,6.136293,7.945850,7.246233,-8.925819,8.720629,-5.773551,6.418731,6.660928,5.741296,-6.451072,3.682304,-8.352477,5.192806,0.966170,7.495359,-8.327778,6.804718,5.577918,-2.236538,2.424544,-3.749660,-7.984052,-1.983592,-5.619775,7.556520,3.959431,6.608081,-3.762941,7.664809,-3.524465,-4.984666,-6.089796,-1.689661,-7.044685,2.441374,-8.823732,-2.955376,7.788217,6.956815,-3.148477,-4.673808,3.162648,-5.159236,-2.204048,7.480217,-8.934307,-6.092281,3.438115,-6.260973,2.884806,6.449979,6.387214,-0.319157,5.110828,-9.080011,-9.619044,2.992649,-6.152699,-7.903024,-6.399929,-7.775411,9.594338,0.591443,5.257899,5.001942,5.007269,4.918596,-4.982056,4.663616,5.169879,8.962594,-6.889545,4.748949,-5.503680,-0.477776,-5.281367,0.200636,4.600304,-9.080642,7.349669,5.251674,0.995186,5.441977,3.111594,0.920953,4.137488,-8.883708,6.089103,-7.965308,6.478976,-4.187333,2.478461,-2.403101,-7.331427,-6.517293,-9.667184,-1.556470,-3.153786,2.882298,-6.596596,-4.672050,6.456272,-5.056500,-0.088810,3.258624,5.927111,4.759112,5.891292,3.287978,2.857016,9.801475,2.483396,2.536076,-1.175056,7.823374,0.588556,-0.569665,4.991093,8.780820,1.514078,4.700844,3.692577,-0.616905,-2.400091,-1.635548,1.938561,8.689303,-5.960935,-4.300949,1.678655,6.617066,5.405619,-2.920523,-5.043007,-8.083417,-0.037703,-7.392507,0.367343,-3.641937,-9.801463,3.474282,3.287222,5.383360,2.199700,-8.199687,5.925335,7.307838,8.890172,9.149436,2.780504,9.160286,-2.261389,3.506133,-8.895245,9.165175,0.683142,-2.702562,-9.166604,-1.296370,0.852147,-7.412678,-5.236184,8.444939,6.006518,-3.898519,0.725569,-7.951456,7.617834,8.550253,-6.006196,7.736885,5.548242,-2.895034,9.844491,7.335362,9.171369,6.611765,5.747370,4.024689,-2.026055,8.038434,7.536296,0.600177,-8.597358,2.089370,2.160386,-1.829488,-8.989744,-4.528034,3.264599,1.442272,-5.106913,-7.735124,8.771590,-3.180545,6.181332,0.881054,-7.479568,-8.630067,7.544561,3.957460,-0.958816,7.167058,-1.569379,-8.125985,5.033869,-0.781467,-5.506394,5.867933,-8.709011,5.190441,-0.913515,-9.722763,9.042437,1.501789,-4.807438,-3.072141,-3.125627,-4.959494,5.646342,-4.470456,-2.563277,-8.066193,8.997323,-6.780639,-3.397595,-9.396366,7.919817,3.744188,2.753799,7.807067,2.223026,-4.975915,-6.278288,-5.775101,8.613554,-9.563047,9.019298,-7.662699,8.448268,-0.762208,6.971964,-9.467322,6.822937,2.795858,-7.483976,4.148475,-8.958724,9.930177,-7.156703,2.009879,-9.700690,3.002798,-7.062574,-5.799482,-5.725541,4.578216,4.060069,-0.490089,6.320750,7.387494,7.817167,9.036012,-8.135867,-9.163997,-6.751211,-2.948958,9.582000,-4.360574,-7.768836,5.769854,8.237091,-3.165775,-6.150945,-7.853928,-0.525058,6.347942,-6.085168,-2.997124,0.604409,2.497182,-9.949682,-1.368615,8.395566,3.106255,-3.724416,-5.747437,-7.738449,-5.671463,-2.239054,-3.747847,7.265238,-3.063391,6.069829,-8.172322,2.385814,-0.340553,-4.739535,9.028721,-0.581103,8.566028,-0.505148,-8.375907,-7.170764,9.822457,0.557888,5.458122,-9.033744,-1.682107,-5.634245,-5.584980,-4.085135,1.032261,-9.585051,-5.822691,-3.556713,2.565848,-0.226254,6.774711,-1.210015,9.641608,-6.093716,-4.851857,-1.871874,-7.884908,-9.299817,-7.504109,-7.550598,9.415130,-6.945761,9.893981,1.638250,2.102935,-8.655816,-4.634709,-1.924959,1.974661,-1.640362,4.692475,-4.746259,-7.930826,-5.996319,-6.759244,-8.124064,6.647061,0.855197,1.712327,1.267648,-7.943421,7.964460,5.210965,-7.584365,3.473649,-0.247037,5.231829,-1.807555,7.225767,-4.644031,4.536477,2.431972,-3.845410,0.372219,0.821171,-6.660537,5.636170,-5.049033,3.222827,1.644471,-3.028821,7.165692,-9.524895,0.952474,9.390748,1.880901,-6.894084,6.280423,-0.552186,7.381053,-3.314512,2.796023,8.506635,-8.556987,2.645982,9.065618,2.563281,0.746244,4.978215,-5.395066,4.982308,8.279818,-7.345612,-1.542981,-2.341242,3.634268,4.899901,-9.027823,-2.043181,-9.277921,-2.669718,1.187680,-9.551032,5.768448,1.592172,-0.332717,-3.572850,7.167670,5.930604,7.911006,0.093113,-7.144120,1.039052,2.320723,7.659013,5.669672,-1.882160,0.857093,-2.143169,-3.194067,-7.491688,-3.175956,-1.052487,-9.536967,3.447645,7.414241,-1.487149,2.844410,-0.442925,2.736374,-8.137071,6.130659,-1.378764,-1.609926,-0.451107,-2.109168,1.015942,1.110027,-3.699534,4.458391,6.112374,-7.753211,-2.420599,6.507136,8.537302,-2.891733,-0.289551,-4.352124,7.728801,2.999095,3.343334,-2.560015,-9.217483,-4.664307,5.762653,-2.412475,3.134225,-7.419004,-8.620582,-3.164831,1.959235,-1.161308,8.219530,-4.783096,9.736004,-4.996003,6.655606,0.595027,-6.036796,0.630237,-5.659366,-1.493448,-8.808965,0.087197,-5.369253,-0.425091,7.485681,5.000620,3.362249,9.779538,5.816578,3.393916,-1.282612,-1.841333,3.918156,7.670723,3.813554,3.169002,-0.291973,8.155583,-6.895442,-7.061435,-6.709641,-0.336585,3.562848,-0.781329,9.858134,-4.232004,-2.614862,-1.218577,-2.700382,5.624660,1.204200,6.744091,-9.891069,5.471010,2.574687,-3.117446,3.852421], dtype = "float32")#candidate|1909|(832,)|const|float32
call_1908 = relay.TupleGetItem(func_639_call(relay.reshape(const_1909.astype('float32'), [8, 8, 13]), relay.reshape(const_1909.astype('float32'), [8, 8, 13]), relay.reshape(const_1909.astype('float64'), [8, 8, 13]), ), 2)
call_1910 = relay.TupleGetItem(func_643_call(relay.reshape(const_1909.astype('float32'), [8, 8, 13]), relay.reshape(const_1909.astype('float32'), [8, 8, 13]), relay.reshape(const_1909.astype('float64'), [8, 8, 13]), ), 2)
output = relay.Tuple([bop_1905,call_1908,const_1909,])
output2 = relay.Tuple([bop_1905,call_1910,const_1909,])
func_1919 = relay.Function([var_1903,], output)
mod['func_1919'] = func_1919
mod = relay.transform.InferType()(mod)
var_1920 = relay.var("var_1920", dtype = "uint8", shape = ())#candidate|1920|()|var|uint8
output = func_1919(var_1920)
func_1921 = relay.Function([var_1920], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2238 = relay.var("var_2238", dtype = "float64", shape = (15, 16, 5))#candidate|2238|(15, 16, 5)|var|float64
uop_2239 = relay.erf(var_2238.astype('float64')) # shape=(15, 16, 5)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
var_2247 = relay.var("var_2247", dtype = "float32", shape = (78,))#candidate|2247|(78,)|var|float32
call_2246 = func_1646_call(relay.reshape(var_2247.astype('float32'), [2, 3, 13]))
call_2248 = func_1646_call(relay.reshape(var_2247.astype('float32'), [2, 3, 13]))
output = relay.Tuple([uop_2239,call_2246,var_2247,])
output2 = relay.Tuple([uop_2239,call_2248,var_2247,])
func_2250 = relay.Function([var_2238,var_2247,], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
mutated_mod['func_2250'] = func_2250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mutated_mod.get_global_var('func_2250')
var_2252 = relay.var("var_2252", dtype = "float64", shape = (15, 16, 5))#candidate|2252|(15, 16, 5)|var|float64
var_2253 = relay.var("var_2253", dtype = "float32", shape = (78,))#candidate|2253|(78,)|var|float32
call_2251 = func_2250_call(var_2252,var_2253,)
output = call_2251
func_2254 = relay.Function([var_2252,var_2253,], output)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2485 = relay.var("var_2485", dtype = "uint32", shape = (4, 8, 6))#candidate|2485|(4, 8, 6)|var|uint32
var_2486 = relay.var("var_2486", dtype = "uint32", shape = (4, 8, 6))#candidate|2486|(4, 8, 6)|var|uint32
bop_2487 = relay.greater(var_2485.astype('bool'), relay.reshape(var_2486.astype('bool'), relay.shape_of(var_2485))) # shape=(4, 8, 6)
func_1099_call = mod.get_global_var('func_1099')
func_1102_call = mutated_mod.get_global_var('func_1102')
const_2493 = relay.const([2,-8,-10,5,-8,-9,-8,1,-5,10,-4,9,2,-8,-8,7,6,3,2,4,-4,2,-6,-3,-7,4,-5,-9,-2,-9,-4,10,-2,6,10,-1,-2,8,5,8,-6,3,3,8,3,-6,6,6,1,-9,1,9,4,-9,1,-10,10,-10,-7,10,8,6,-4,-1,4,7,-3,-9,4,-7,-5,-3,2,10,2,1,8,3,10,8,-5,9,1,-4,-6,-9,-9,10,6,3,1,-7,1,-4,5,7,7,9,-4,3,5,2,6,7,1,-9,2,-3,9,6,-9,5,6,4,-8,-1,2,-9,5,-10,4,1,7,-10,1,-2,6,-6,3,6,10,-6,-1,1,-3,-4,-10,6,9,6,2,10,-5,-4,-8,-2,6,-1,5,4,-2,-6,3,2,7,-2,5,-9,-8,-9,-3,-5,10,-9,5,-4,2,-9,-3,-7,-8,1,8,-4,-5,5,5,-9,3,10,9,-6,6,-6,-6,-9,-9,-10,10,-7,10,-3,9,9,-9,-1,5,-1,-3,-9,-9,7,-9,-9,2,4,-8,-6,10,-1,6,-9,-1,9,-9,-7,7,10,-1,-4,7,-7,-4,3,10,-5,10,-7,-6,7,7,8,7,9,-9,3,9,-10,-6,-9,9,-5,9,9,10,-5,-9,-10,-10,-4,-10,-4,10,-3,9,5,7,-4,-1,4,-9,8,-1,-4,-7,-2,9,5,-10,-6,-2,6,10,-8,2,-4,-2,-9,-3,7,-3,-7,5,-4,2,-5,-2,6,10,4,-9,-3,1,7,4,3,1,2,4,2,-5,-2,7,-8,3,6,-10,-4,-10,-6,3,6,1,-1,-3,3,-9,6,3,2,7,10,9,-10,-5,5,-10,-5,8,-8,-10,-10,5,6,1,-6,7,6,1,5,6,5,3,-9,-5,-2,9,3,-10,-4,6,9,-9,9,3,-6,-6,-5,1,9,-2,-1,5,-6,5,-7,-1,6,1,10,1,-3,4,-5,-3,-1,7,5,-7,8,1,3,-2,-4,4,9,7,-2,1,8,-4,-10,-2,-5,-7,1,10,2,2,-9,7,4,9,6,5,-5,-4,2,-9,5,1,4,9,-7,1,9,-3,1,-9,1,3,-5,-10,-1,5,7,-1,9,-8,-10,2,6,-10,-7,-7,5,6,-5,8,-7,3,6,4,1,-2,8,10,-9,-4,1,5,-9,7,-9,-1,5,10,-7,9,-6,-1,-6,10,-1,-2,-6,-8,9,-9,8,7,-6,-7,1,1,6,2,10,7,-8,4,5,-9,9,3,1,-3,6,8,-5,-5,-10,2,10,-3,-8,2,-3,8,-10,1,2,8,5,5,6,2,-6,-8,-6,5,-2,-5,-10,8,5,-1,5,-5,5,2,-8,9,-1,-2,-10,10,4,8,10,5,-7,-2,-8,-5,-5,-6,3,8,-2,8,-9,-5,-4,8,9,9,10,8,-6,-2,-10,-5,2,5,-8,-6,-3,-10,4,-5,1,-8,-5,10,-9,-6,1,-2,-9,-6,3,-1,-3,-5,1,9,-4,-5,-1,-4,-9,9,-2,-2,-9,-7,4,-9,1,3,6,3,9,10,-3,2,5,-2,2,9,4,-2,-3,5,-6,3,-2,-3,4,-3,-10,-7,-6,-3,2,-10,7,7,4,4,-10,-2,-3,5,8,2,-3,-2,-9,7,-8,-10,-10,7,-8,-4,5,-3,8,-6,6,-4,-1,9,-5,3,-5,10,-9,9,-5,-8,-6,-1,-10,3,-6,-6,5,-7,4,-6,3,4,3,3,-8,-10,-1,1,7,7,2,2,-1,-10,1,5,9,7,-5,-10,1,-7,1,4,-3,3,8,-5,-6,-5,-8,-10,2,-9,-10,-9,-8,-5,-8,9,2,7,9,1,6,2,-6,2,-4,6,9,6,4,8,-10,3,9,4,-5,-5,10,-4,-4,6,-7,-1,-10,6,8,-7,-3,2,4,1,-10,-8,-6,9,-1,7,9,-6,6,-4,8,-3,-4,2,-3,-5,9,-3,10,-6,-1,8,-10,-1,-6,1,8,4,10,-10,-9,6,-10,5,-5,8,-4,7,1,-10,-7,-1,-4,-7,-3,7,-1,1,4,-1,9,-4,-8,-6,-1,7,5,2,-5,6,-3,-7,8,6,-6,-10,6,5,-4,-2,5,-2,-7,2,1,-9,2,1,-6,9,-5,6,-2,-5,1,-1,9,9,-8,-10,-10,7,9,-2,-6,6,2,5,2,-10,9,1,7,-6,2,5,-6,-6,2,-9,-8,2,-8,4,6,5,5,3,-6,8,4,-4,6,7,-7,-6,1,5,-4,-1,2,4,-10,1,8,7,-3,-4,10,-8,-6,-2,-2,-10,5,-5,-7,-4,7,-4,5,7,-2,-10,2,9,-2,-9,-7,1,8,7,-8,-2,-6,-2,-10,2,1,8,8,1,8,6,-9,-9,4,4,-9,-7,-5,-8,7,10,-2,1,-6,3,2,-1,-4,-10,6,-10,-10,-2,7,1,1,-2,-10,6,7,9,-7,-2,1,-1,6,4,2,3,7,3,-5,-3,-10,-8,8,-6,-8,-8,-2,7,-4,-4,-6,-6,-10,1,6,2,-2,-4,-10,5,-1,-6,-4,1,-4,4,3,-3,1,-10,-5,-4,5,-7,-10,-2,7,-6,-10,1,-3,6,-5,10,-10,-4,3,3,-7,2,7,2,1,-7,6,-9,-4,-6,-1,-6,7,7,7,-9,-4,-6,4,-5,6,7,1,-3,-10,-4,7,3,10,-5,2,3,-6,5,7,-6,3,6,-1,6,8,-10,2,1,3,-8,2,1,2,-10,7,1,1,-3,-6,2,1,-1,7,-4,9,-7,5,1,-5,6,8,1,7,-4,5,9,1,-8,3,1,5,-3,8,-8,8,7,5,9,-4,-5,8,4,5,8,-5,9,8,10,9,-1,6,-5,7,-3,5,-9,-5,2,6,-7,8,-3,-10,-4,-5,-6,-4,1,2,-2,5,10,4,-9,2,1,2,8,-9,10,9,4,-6,-7,-3,5,-10,-8,-9,-5,3,-4,-2,-8,7,4,6,1,2,-10,7,-3,-2,-3,7,3,4,8,10,-8,8,4,7,-5,3,6,-1,-9,1,6,-10,10,6,1,-6,4,-10,-7,4,-9,-7,7,5,1,-9,-4,7,4,-3,-1,3,-4,-6,1,-5,6,-5,-10,-10,4,9,8,-3,-9,-7,-9,8,5,-6,-3,-7,3,-2,10,-7,1,2,1,-4,-4,-3,-3,-6,-6,-5,3,7,-1,10,-3,8,2,5,-7,-6,-10,-4,1,-1,4,7,7,-5,5,2,2,-1,-1,-10,5,-1,-4,-8,-7,-3,7,8,5,4,9,-5,-7,-7,-3,9,2,1,-5,4,-9,2,-8,2,4,-3,-4,-5,-5,1,1,5,10,-1,6,6,4,-3,-8,6,-1,-6,9,5,-4,-1,-6,8,2,-10,5,-6,-6,1,-4,-8,8,-7,5,-1,8,-4,8,-10,-1,9,-8,7,3,-10,9,-9,1,-3,10,5,-8,2,-1,6,-3,-10,-1,-5,-6,-1,-2,-3,-10,9,-2,8,3,6,2,-4,9,8,-2,6,9,-3,2,3,-4,-10,7,8,7,2,8,-6,1,-8,-8,-10,-4,9,-1,-5,-5,1,4,1,-3,-3,-2,-9,7,-5,2,4,-10,-1,5,6,-5,-3,-6,4,-1,10,8,-6,7,-9,-9,-4,-6,-2,4,-1,4,-10,10,10,1,-5,-7,3,2,-2,5,-2,4,-1,1,-7,-8,5,-1,9,3,10,-5,-4,4,-10,4,9,-7,6,2,10,10,-8,-10,-10,1,5,-2,-4,6,7,-7,10,7,-9,7,1,-7,-6,-7,2,-8,-3,7,-7,1,-5,-10,-2,8,10,-3,3,-9,6,7,4,-4,-4,-6,4,-6,-8,3,-3,-1,6,-3,3,8,-10,9,10,4,-6,6,-10,10,-9,7,-4,5,2,9,-2,5,3,7,-7,9,1,-3,8,-8,4,8,-4,8,-5,-9,5,10,-6,-5,-9,-4,10,1,1,-4,7,-3,-7,6,9,10,9,-3,-8,-8,3,-9,-1,10,2,-7,7,9,-10,-7,-10,2,-8,4,5,5,8,-10,4,1,5,-6,-5,-8,10,3,-4,-9,1,-8,-9,-4,-7,-4,-4,9,-2,-4,10,3,9,9,-10,-8,4,-5,9,8,4,8,-8,9,-10,8,-7,9,6,3,-6,4,7,3,-1,-3,-6,4,8,5,-8,-7,3,-3,5,4,7,3,1,1,10,6,-4,9,6,1,6,-1,5,-9,-1,4,-3,1,5,-6,5,9,4,5,-4,6,-2,1,2,-8,3,1,8,-9,-4,-8,-9,-2,6,3,-2,2,-7,-3,-2,-3,4,-4,6,7,-10,-10,-3,10,-10,3,-5,9,-7,2,-5,8,-1,-6,-6,8,10,-3,-2,6,9,7,-2,7,-9,9,-5,7,-9,-4,6,9,10,10,-8,-6,-4,10,-9,7,7,2,-3,10,2,7,6,5,-9,-9,-1,-3,-10,-3,3,5,-6,-3,-7,-2,-9,-8,-6,-2,-10,-3,8,8,-2,-6,-10,4,1,-8,-2,-9,1,7,-2,6,2,5,-7,9,-3,-4,-8,-1,-8,9,-9,-3,8,2,1,-4,-7,-6,-9,6,9,-4,-8,8,-4,-6,-5,-7,-10,-3,-7,5,-5,10,5,-5,-4,3,-6,8,8,-6,4,6,-10,-7,5,1,-5,5,5,-6,10,4,2,7,7,-3,-7,-5,5,6,-5,1,7,10,7,-4,-5,5,2,7,7,2,-6,-1,-8,4,-5,3,-10,-8,9,4,-10,-3,-10,4,10,-1,3,-1,10,-6,8,-9,-2,-7,-8,-9,9,3,-4,-7,10,-3,10,6,7,5,1,6,-10,6,-6,-6,-7,-4,-5,5,9,-10,10,-8,-8,-4,8,2,-5,-8,3,5,5,3,10,-7,6,5,5,-4,-8,-2,10,-4,4,7,-6,-1,2,2,10,9,1,1,-9,1,-3,2,8,-8,10,2,-8,8,7,-9,1,4,-4,-8,-9,-8,1,-6,10,3,-1,-7,-10,-6,6,5,-5,-1,-3,10,9,6,10,1,8,-7,1,-8,10,7,1,-7,-10,-5,-1,-6,-3,-4,-4,10,-1,3,-2,2,-8,9,-2,6,-7,6,6,-10,-4,-9,-9,2,-5,-3,-9,10,-5,-7,-7,10,3,-4,8,7,8,2,-4,-9,-1,-7,-9,-8,-8,-3,7,1,-1,-1,10,-3,-4,8,-1,-7,9,-5,-3,-3,7,9,9,-7,4,-1,6,3,-1,7,7,-4,-10,-5,1,7,5,-5,-4,7,10,4,-4,-7,-7,-4,-10,1,7,-4,-7,10,7,-8,-8,10,-5,-6,-3,-3,-7,5,7,-7,3,7,-2,-1,2,9,4,-8,6,-9,6,9,1,1,7,6,-9,1,-10,10,2,10,1,-7,1,-5,-10,-10,-6,10,-9,7,-9,-9,1,-1,-1,10,-10,-10,-5,-7,9,3,-10,-3,9,-7,8,-9,9,1,2,3,-10,-4,8,-7,1,-2,-5,10,-5,-4,4,2,-5,3,-6,-1,7,-9,-7,2,8,-10,1,9,-6,-10,6,6,-5,-9,5,-5,-3,9,-3,-9,7,6,-9,5,-7,8,7,3,2,2,1,-10,-4,-4,10,-9,-5,6,-9,-9], dtype = "int32")#candidate|2493|(2145,)|const|int32
call_2492 = func_1099_call(relay.reshape(const_2493.astype('int32'), [15, 13, 11]), relay.reshape(const_2493.astype('int32'), [15, 13, 11]), )
call_2494 = func_1099_call(relay.reshape(const_2493.astype('int32'), [15, 13, 11]), relay.reshape(const_2493.astype('int32'), [15, 13, 11]), )
bop_2497 = relay.logical_or(var_2485.astype('bool'), relay.reshape(bop_2487.astype('bool'), relay.shape_of(var_2485))) # shape=(4, 8, 6)
func_1690_call = mod.get_global_var('func_1690')
func_1693_call = mutated_mod.get_global_var('func_1693')
var_2513 = relay.var("var_2513", dtype = "float64", shape = (468,))#candidate|2513|(468,)|var|float64
call_2512 = relay.TupleGetItem(func_1690_call(relay.reshape(var_2513.astype('float64'), [6, 13, 6])), 3)
call_2514 = relay.TupleGetItem(func_1693_call(relay.reshape(var_2513.astype('float64'), [6, 13, 6])), 3)
output = relay.Tuple([call_2492,const_2493,bop_2497,call_2512,var_2513,])
output2 = relay.Tuple([call_2494,const_2493,bop_2497,call_2514,var_2513,])
func_2515 = relay.Function([var_2485,var_2486,var_2513,], output)
mod['func_2515'] = func_2515
mod = relay.transform.InferType()(mod)
var_2516 = relay.var("var_2516", dtype = "uint32", shape = (4, 8, 6))#candidate|2516|(4, 8, 6)|var|uint32
var_2517 = relay.var("var_2517", dtype = "uint32", shape = (4, 8, 6))#candidate|2517|(4, 8, 6)|var|uint32
var_2518 = relay.var("var_2518", dtype = "float64", shape = (468,))#candidate|2518|(468,)|var|float64
output = func_2515(var_2516,var_2517,var_2518,)
func_2519 = relay.Function([var_2516,var_2517,var_2518,], output)
mutated_mod['func_2519'] = func_2519
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2566 = relay.const([[[6.796389,-4.783538,-7.619917,8.024861,1.157427,8.529096,0.681347,0.409931,3.555790,-7.359312,4.663067,5.830183,3.047721,-4.492844],[6.549510,-0.720729,-4.608219,-7.742304,-3.959023,3.044065,6.601325,-4.616759,3.953901,-3.145410,5.255258,9.263966,3.455518,-8.222553],[5.320857,2.842271,0.074333,4.839018,-9.919874,-5.371911,0.679951,-5.421435,-1.187522,5.503293,5.427161,7.431698,-0.707269,2.901096],[2.668311,-0.530419,-4.288409,2.332521,9.686969,4.999506,-5.310200,4.312106,9.313292,7.660087,-0.747428,9.241846,-3.605592,8.071644],[-7.434793,-8.611931,-3.035028,-8.606175,-5.013951,-6.113724,-3.693358,8.949404,9.173698,6.726469,0.476874,2.982615,5.548105,1.891666],[2.761542,8.974789,8.539895,8.723546,-7.027295,-6.052575,5.093138,2.534798,-3.669200,-2.353320,1.953789,9.947006,-3.407099,-0.794683],[8.009851,1.417280,-8.130046,-3.729966,1.897198,-9.308101,1.374311,-5.769494,4.753301,3.959185,9.517219,-8.067624,2.680074,8.858722],[-3.429082,3.116607,2.495221,-9.684630,6.888279,2.103178,-8.622428,3.641444,-9.536103,-9.017115,1.771360,9.303907,4.290557,5.036400],[0.180576,9.280021,-5.395526,-7.183868,7.555030,-6.411759,2.181243,7.312139,4.195804,-1.000338,1.132860,2.694207,-0.021552,3.741855],[-6.791723,-0.237910,8.781650,2.153856,-9.327315,0.701302,-7.607444,1.930568,5.941525,5.777505,3.540152,-6.403048,-1.605811,2.894203],[-9.213709,6.702681,3.677354,9.815620,2.728986,-1.897796,-1.305680,8.495960,1.399762,-7.881178,-7.568189,4.010543,3.417374,-2.272232],[-6.921937,-2.013468,-0.740179,5.185412,0.430043,-7.173280,-6.402383,7.525626,-1.691097,9.382981,9.880885,-2.567041,-8.321349,4.858696],[7.559413,2.476396,6.467757,-2.756325,3.376026,6.950832,-5.594834,3.649940,-4.812636,3.765846,-6.092481,7.325044,3.794022,3.438596],[3.070250,6.415064,-4.720694,-9.508463,9.519087,4.971987,2.754925,6.850931,-4.586813,-8.383414,6.472463,3.733215,-3.803562,1.218964]],[[-7.932997,4.330230,6.412522,-4.601675,-6.678095,1.939592,8.886074,-1.759956,8.416787,4.124875,9.835154,9.703564,0.829565,-9.821323],[6.199349,4.236357,-1.520289,4.464083,-9.523217,0.488274,7.917839,-7.149281,9.164148,7.086580,-1.882624,-4.172932,-3.876854,1.073061],[-4.211342,5.094788,8.461377,4.234817,-4.424652,-1.058110,-8.634426,5.520912,-9.555937,-5.590565,-4.369648,8.828549,-5.347071,-7.134159],[6.935432,1.010823,0.089129,4.164520,3.604614,-7.165713,6.216481,-3.281127,-6.632400,7.340404,9.597063,-2.486138,6.947226,9.476339],[7.695227,-0.421641,2.631629,-7.087392,8.391116,0.176051,-6.129812,-7.012573,-6.420081,4.936243,-2.769226,-7.247692,1.337072,4.207490],[-0.844730,-0.986431,7.307522,-3.344111,-5.944371,8.488533,-8.783919,0.822298,6.728734,-0.648123,-7.364580,-7.474504,3.660972,9.888388],[-1.640636,9.968173,9.587450,-4.716817,0.066154,8.326652,-7.848457,0.571486,9.855895,8.870792,-2.054563,6.136879,-1.065435,0.251196],[-0.213329,-2.504345,8.186593,1.317867,4.728515,3.832395,-6.082735,9.080432,-4.377434,6.664960,6.555452,-0.992800,-9.706836,-6.286512],[5.930205,-5.483946,-1.789413,-1.386266,7.611022,-2.506265,-0.836761,3.938478,-5.171560,5.605312,2.019676,9.086691,5.878504,-5.757568],[4.073490,-6.598663,-2.459208,-7.831424,2.028674,-2.404957,-6.650679,-3.105363,9.451692,4.799231,-7.683752,-2.757417,7.166073,-5.960841],[1.843539,-5.979141,9.222454,6.663556,-6.148652,8.514073,8.383811,-7.869826,-3.228092,-6.781333,-8.634367,-2.130906,-2.671479,-5.207008],[-8.764171,-2.494390,9.070283,-9.592494,-6.023680,-8.549735,8.458805,-7.505496,2.894585,-0.990078,9.433528,9.013824,-2.781208,-2.609691],[-9.002740,-5.899320,2.663295,-4.595142,1.512488,-1.090428,3.598914,-9.970881,-3.468762,2.710036,9.192123,7.508318,-3.823417,-4.198416],[-9.863561,6.664341,0.210421,6.780898,-3.469697,6.611465,-9.971986,3.434224,-1.856055,-6.663884,3.440678,5.265080,1.083671,0.798797]],[[2.331181,-7.940929,5.765008,3.831923,2.999444,6.102690,-6.769360,-9.672257,-8.658425,-4.947952,0.185383,0.425505,-6.282260,-2.731154],[-9.808131,8.218702,4.654881,7.341155,0.459620,-1.173837,-0.018904,9.317181,-8.320352,0.642516,8.428153,-0.092942,9.173708,1.683100],[-2.782266,4.420076,-0.212997,-0.567282,7.395767,-9.601855,-9.330137,8.938932,-7.846096,-4.801352,-4.603728,-7.337871,9.574169,7.488485],[-6.475654,7.006246,-7.419834,6.425105,3.663870,-4.369986,-3.562094,-3.721964,2.622889,0.528897,-8.512853,8.739219,5.474251,-1.141786],[-6.267571,1.201327,2.167927,5.667151,-7.285970,-4.743996,-1.093138,-1.855471,3.031291,-3.556623,-4.255800,-5.476485,5.372069,-0.253135],[6.681570,2.038382,-6.280511,0.206933,8.442534,6.707029,1.442810,-5.619951,-0.839127,-7.175437,4.688958,8.618213,-5.271457,-4.586574],[9.437511,3.786453,0.741508,-8.267550,1.420421,7.090897,-3.178569,-8.163278,-3.845821,4.465476,9.774588,-5.733990,-3.737568,9.156445],[-4.774472,-8.646240,-3.629487,-5.586889,4.028120,9.396323,-2.769792,8.118650,7.730504,3.369509,-2.448428,-2.185921,-7.660826,-0.132903],[-7.337615,-2.257486,3.324312,-2.832248,-5.487357,-3.378899,9.253759,-6.953006,-8.946038,-2.000867,-5.924335,-7.567700,5.610600,-7.252633],[2.006229,-0.260222,-1.376268,-9.391864,-6.071512,7.019146,-8.366254,-9.690968,5.486591,4.685061,-6.366729,8.247507,3.124357,-6.247873],[9.586102,1.242309,0.702693,-7.457176,-1.080724,-2.219141,-8.023183,3.057043,3.975556,-8.052896,-6.122229,-9.172311,-3.281434,3.953951],[8.508162,-2.875931,6.689065,-6.456705,1.030242,-2.247528,9.503632,-2.679953,1.779830,-4.076833,8.787163,5.013899,3.398492,9.376348],[-6.062710,6.364213,-3.480906,-8.715888,6.140551,-5.297217,3.097075,-5.047876,2.179850,-7.022331,-4.784305,8.552338,-2.764566,-6.139763],[8.956583,3.700119,-4.313989,3.806576,-4.076785,-0.169163,-3.548950,-5.662391,-8.642273,3.139431,-8.711600,-8.586789,-8.615610,-3.461063]],[[-7.067057,-0.084318,-2.754023,9.814732,6.310365,6.975133,-4.471552,5.683219,1.752445,6.610771,1.398623,6.974055,-2.986835,-0.530784],[-7.276277,5.707029,2.678465,-2.782381,4.140767,3.506193,-8.478519,-1.400281,-2.008963,-9.520237,-3.934239,9.749702,-2.396620,2.877501],[-6.322035,5.024567,-3.363440,-6.240528,6.860989,-8.600697,-2.074347,4.269444,-4.949469,-6.999473,2.046311,-4.503075,-1.718442,6.454898],[7.935499,6.994198,1.737722,-3.369665,-0.967827,7.680626,6.338806,-2.687206,5.094697,-6.672872,-4.633652,9.444626,0.972545,2.262556],[2.516726,-0.804861,2.736005,7.188375,1.723193,-9.942619,-5.883928,7.844648,1.968394,7.556449,3.416416,5.346269,-2.431262,6.739858],[-0.302519,3.559894,-5.610692,-2.675875,-6.253420,-5.201821,3.262356,0.270785,-5.959341,0.749948,-8.207384,8.402675,1.300660,1.982771],[1.619924,8.818100,3.382691,6.412413,9.237138,7.852932,3.070869,5.078384,2.382658,-6.991482,1.264668,7.361541,5.001789,4.096841],[1.487367,-1.791031,3.290761,6.384972,9.698910,-1.977374,-7.828035,-1.517972,2.424303,1.969218,-0.655624,9.632201,2.407695,7.565645],[4.332525,1.736684,-2.629533,1.261578,-0.390118,-0.330183,0.919740,-9.180347,0.232622,-7.278524,-7.563071,9.185877,5.737793,-8.800146],[5.706050,5.734307,-8.137959,-0.581657,6.304366,-6.469031,-9.085634,1.681273,-2.286127,1.357481,-0.913023,-6.878938,5.359842,9.603795],[-8.360928,-9.232158,1.324488,-6.682940,-8.977597,-1.467367,-9.244644,7.547452,-3.729155,6.935609,-1.697980,-4.717215,-9.646603,2.659709],[-9.665636,-7.751849,-0.364300,-5.665784,9.139331,5.509253,5.925601,3.340410,6.208978,-6.472892,9.674933,-5.861351,5.281333,-6.046065],[9.208611,3.614580,-2.000424,9.571398,-7.087795,-5.572596,-0.964208,-1.452116,-3.484253,-7.862679,-1.608447,3.828401,-5.725701,-0.039931],[-0.573742,7.663451,-4.888375,4.153555,-1.767545,-6.202003,-7.724294,-1.327796,-8.224676,9.737554,-1.746696,-0.904707,-8.392226,-6.584528]]], dtype = "float64")#candidate|2566|(4, 14, 14)|const|float64
uop_2567 = relay.sigmoid(const_2566.astype('float64')) # shape=(4, 14, 14)
bop_2579 = relay.logical_and(uop_2567.astype('bool'), relay.reshape(const_2566.astype('bool'), relay.shape_of(uop_2567))) # shape=(4, 14, 14)
func_1819_call = mod.get_global_var('func_1819')
func_1822_call = mutated_mod.get_global_var('func_1822')
const_2586 = relay.const([True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True], dtype = "bool")#candidate|2586|(520,)|const|bool
call_2585 = relay.TupleGetItem(func_1819_call(relay.reshape(const_2586.astype('bool'), [10, 13, 4])), 0)
call_2587 = relay.TupleGetItem(func_1822_call(relay.reshape(const_2586.astype('bool'), [10, 13, 4])), 0)
func_1919_call = mod.get_global_var('func_1919')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_2590 = relay.var("var_2590", dtype = "uint8", shape = ())#candidate|2590|()|var|uint8
call_2589 = relay.TupleGetItem(func_1919_call(relay.reshape(var_2590.astype('uint8'), [])), 0)
call_2591 = relay.TupleGetItem(func_1921_call(relay.reshape(var_2590.astype('uint8'), [])), 0)
func_1099_call = mod.get_global_var('func_1099')
func_1102_call = mutated_mod.get_global_var('func_1102')
const_2595 = relay.const([-6,-1,-10,1,-7,-1,-9,-10,-6,-6,10,-1,-5,-1,5,3,-7,-8,-7,-6,-9,9,-7,-8,-1,9,6,-4,-10,3,-5,5,-1,10,3,10,4,-2,2,3,4,-7,-3,3,-7,9,5,5,-6,-5,2,10,9,-10,-2,6,-6,8,5,-5,10,-6,7,-2,-8,-3,-4,-10,-5,-6,3,2,-5,1,2,4,-1,8,2,2,-8,-2,-7,7,-3,8,-5,7,1,-7,5,4,2,3,-3,-5,9,-5,-2,-8,-7,4,7,9,-9,-10,10,10,5,5,6,10,9,-2,2,-9,6,-1,3,10,8,8,-3,9,2,7,6,-5,-7,-8,-7,-7,10,-6,10,7,-6,-6,-3,-9,7,-3,7,9,-3,10,4,2,7,-7,6,5,-8,2,-3,6,-9,4,5,10,10,9,-9,-10,-1,-1,2,10,6,3,5,1,8,-1,-1,-2,-1,7,-2,-4,3,-1,-3,8,4,-9,1,-4,9,2,4,-1,3,-3,-6,-9,4,5,-10,7,4,-3,-7,-4,2,-6,-7,3,6,8,-5,-10,-6,6,-8,2,-10,7,-3,6,4,-4,-1,-5,-5,1,-10,8,-8,2,1,7,10,-9,-4,8,6,-1,9,6,-8,3,-9,-4,9,-4,1,-10,-5,3,5,-9,5,8,5,9,2,-3,-5,8,6,-4,3,-9,-6,-10,-6,-2,9,5,5,-1,-8,-7,-5,8,-9,8,10,-2,10,5,-3,6,-8,-9,-5,-1,-7,7,-7,1,9,8,9,-4,-6,-4,10,2,-1,1,1,8,-2,10,-9,-5,-2,-6,5,-9,-2,9,-3,8,-1,-9,-4,-10,3,6,-3,-10,4,-6,-7,9,10,-1,-6,-6,-9,9,3,10,1,7,8,1,-5,-2,-3,-4,-8,5,-4,-3,7,8,3,-5,-5,10,-10,-9,9,-7,-4,-7,-6,8,-7,-6,-5,2,2,4,-10,5,7,-4,5,3,4,2,6,1,1,6,2,5,7,-5,6,-6,-2,-1,2,6,6,8,-8,-5,-6,6,-1,2,-10,5,-7,-9,1,-5,6,9,-9,-3,-5,7,-1,9,-6,10,-10,-2,-5,-5,2,9,3,-9,-6,9,-1,5,1,-4,7,-3,-10,-5,7,-1,-1,-5,2,-7,6,-2,-4,9,-2,-4,-8,7,5,2,1,-9,8,7,9,10,1,2,-10,-5,-7,-3,-8,-2,-2,3,10,8,-9,7,2,-3,9,10,-8,2,-4,10,-5,2,-7,-1,-8,-2,-7,-5,6,1,5,5,-6,1,-9,-9,3,2,-8,-6,3,5,9,-8,-8,-8,-10,-6,-9,-6,8,-3,-7,-1,-9,3,-5,3,-8,8,-1,9,-9,-2,4,7,3,4,-8,-7,2,-10,-8,-10,7,2,-4,1,-8,4,-1,5,-4,6,-6,6,4,-6,10,-9,-5,4,4,5,-10,-5,1,-5,-10,4,5,-5,-7,-3,6,3,-3,-3,4,-8,-6,-5,4,1,-4,-2,-6,-10,-6,9,3,7,10,-2,7,-9,4,1,6,1,-6,9,-8,2,-1,9,-4,-1,-6,9,6,6,3,-5,-9,9,9,-5,10,-4,10,-5,2,1,3,-1,9,9,7,1,2,9,-1,-2,-4,1,2,10,-4,-3,-2,-5,4,-5,8,4,9,3,8,10,-2,5,7,-9,8,-9,6,5,8,8,-7,7,-8,5,-6,7,6,-5,1,5,5,2,-7,-1,9,2,4,2,-10,7,4,5,9,-2,-3,10,10,-1,-10,-2,6,7,-1,-3,7,-8,-5,10,4,-4,8,7,7,5,-4,8,-10,1,5,-4,-5,3,7,6,7,8,-4,-3,7,-8,-6,-3,1,-8,8,-9,6,5,-5,-5,-10,8,-2,-3,-3,-9,7,-3,-6,7,5,-8,-7,-6,-3,7,-8,7,9,8,-3,9,1,-2,-5,10,2,2,-3,4,-3,-9,-7,10,10,-6,-9,7,-6,-4,8,10,-3,1,-3,2,-5,7,-1,6,9,6,-6,5,-10,3,-4,-7,-7,5,-3,-10,-1,-10,5,4,7,-9,3,-7,2,10,-4,7,7,-5,-10,-1,-1,-5,-9,10,9,1,3,4,7,-5,4,4,3,-6,-4,6,-9,2,10,-4,-1,-10,4,-2,-1,-3,9,8,7,-7,-10,4,1,-7,-8,-9,-7,-5,-4,-1,-6,-2,2,-6,-4,9,3,-3,-1,-5,-1,-10,-3,7,-4,4,5,-2,6,7,3,5,-1,-2,9,5,-2,-8,10,4,-8,-3,-6,1,4,-5,-5,-3,-9,1,2,7,1,-1,-3,-6,-5,3,3,-5,-1,6,-1,2,-5,7,9,3,1,2,7,4,-6,-5,-8,-7,-3,5,-3,-3,10,-6,-3,-8,1,8,-9,-1,-9,5,9,8,-7,5,10,8,7,10,3,6,-9,5,7,4,-4,-5,2,-4,-8,9,-6,-9,-3,3,-6,-1,3,4,3,8,-6,-2,-8,-7,7,4,5,4,-2,-3,6,-5,1,1,-7,1,1,2,-2,-6,9,10,-3,1,5,-4,-9,10,-8,1,-9,9,-8,1,-3,6,-9,5,5,9,-9,1,-4,5,-1,7,3,-9,-8,10,9,3,-6,-4,-4,1,8,9,-2,-1,-5,2,-6,-8,3,-8,-5,2,9,2,-1,-7,4,8,-4,-6,9,4,9,2,9,-6,-2,4,6,-7,9,-3,-1,7,-2,-4,-3,8,8,5,1,2,2,5,1,3,5,3,9,-1,6,-5,4,2,5,-1,-1,-8,-6,8,-2,-9,1,4,1,2,-3,-6,-2,8,10,-2,2,-3,-2,8,-4,-2,9,4,3,9,6,-2,-6,6,2,4,-9,-2,9,-6,9,7,-5,-9,-10,-4,-4,5,-9,-5,-8,-6,-7,7,-10,-9,2,-8,9,-5,4,7,10,-7,2,1,-10,-6,-5,2,-5,-6,-7,4,-10,6,10,3,5,10,-1,-7,8,-9,-6,8,-2,-10,9,-8,5,-4,-7,-7,-6,-10,-8,9,8,-8,-10,10,1,2,6,-8,4,-9,8,3,-3,-2,-10,8,10,4,2,-4,6,2,8,2,-3,-4,7,4,2,4,8,10,7,10,10,4,-3,-7,-8,4,-1,10,-10,1,-2,-6,6,10,3,-5,-5,-8,-7,1,3,-7,-8,2,3,1,-8,-6,6,10,-8,-10,-5,-3,-3,-8,-4,1,-1,-1,6,-2,3,-1,-5,-6,-7,8,-7,6,9,-6,-10,4,-10,8,9,2,-7,8,-5,7,-3,6,7,-9,8,7,10,1,-8,-10,8,-6,-7,1,1,6,2,-3,5,-3,-7,5,4,1,-5,-7,-1,2,-9,1,-10,5,10,10,10,-10,-4,6,1,7,6,-2,9,8,8,10,-6,-9,3,-2,3,-3,9,4,-9,-9,-9,6,5,-7,-1,1,4,-2,9,3,5,8,5,5,5,1,-3,3,8,2,-9,-9,-7,9,4,-8,7,-5,2,-8,-2,-2,-3,4,2,-3,3,3,2,5,-3,-6,-3,-5,-9,-1,-2,-5,-5,-8,-6,-8,-4,8,5,3,6,-10,-10,-3,8,9,4,-6,-4,-6,7,1,6,-7,-3,-9,-10,10,-4,9,5,-3,-6,8,3,-4,9,-10,-5,6,-7,-6,5,-7,9,4,-7,-4,6,-5,-5,7,-2,-9,-8,-4,-3,4,-10,-1,-8,-2,-10,8,-8,4,9,7,2,10,-4,-5,-9,-7,9,-8,10,1,-8,-7,1,-10,-5,-6,5,-7,2,-6,-8,-10,8,3,7,10,-5,2,8,-10,8,-2,-4,10,10,9,-8,4,-6,-3,-4,-8,10,5,-9,3,-1,-10,3,-2,-5,-10,9,-8,2,8,4,5,6,-2,-6,-2,-9,3,2,2,4,2,-7,-8,4,6,-2,4,2,-2,-2,-7,-7,-4,6,6,-9,5,1,-4,9,-4,1,-6,-5,-1,-3,9,-1,-10,-10,-8,7,2,7,2,6,-7,-4,-7,-3,8,-9,7,2,6,6,-9,-7,10,9,-2,-9,-1,5,-4,8,-6,2,6,3,-6,-4,-1,-7,9,-2,-2,-1,4,1,-4,-1,-8,4,-7,-4,5,7,2,-4,2,1,6,7,8,9,8,2,3,10,4,-10,-3,-2,2,6,-3,8,-1,-3,-2,2,-2,-8,2,-4,1,5,2,-8,5,-8,1,2,-10,2,7,2,8,-4,-7,9,6,-1,-1,-3,-3,7,-9,-7,-3,-1,-10,-10,4,-1,6,-8,-3,-1,7,1,6,-5,8,-6,-8,-3,-1,-9,1,-7,-1,9,3,8,-5,2,-8,8,9,-1,10,-5,9,9,5,6,10,-10,7,-7,-7,-4,5,3,6,1,9,9,2,-9,4,5,-3,9,2,-10,4,-6,-6,3,4,-7,9,-1,6,10,-5,5,1,-8,9,-4,2,4,-2,9,2,-8,-6,4,1,3,10,-6,2,-5,-3,-8,10,4,-10,7,1,-2,6,-8,-1,-3,-8,3,-4,-5,-7,2,4,9,-1,5,-4,8,5,7,6,9,2,6,-10,10,1,-7,10,-8,-4,10,1,8,-3,-4,-8,4,6,-3,-10,-4,-7,-7,-6,-7,-9,-8,6,-6,2,9,-4,-9,3,-7,-7,8,-1,-10,-2,-7,5,-1,1,1,9,3,-4,-4,-4,-2,1,6,4,8,4,-7,1,1,7,-3,-1,8,9,-4,2,-6,7,2,8,7,5,1,4,-8,-4,-5,-7,4,-6,1,-6,8,6,5,2,-6,-8,5,-10,10,3,-1,-10,-6,-3,2,-3,1,2,5,-7,-3,9,6,-10,-5,2,3,1,8,-8,3,3,-3,1,-1,1,5,3,-1,-6,7,-4,-3,2,1,4,-3,2,-1,6,-3,-5,8,8,2,8,5,10,7,7,-1,-3,-7,-2,8,-10,6,-9,-5,6,2,-7,-5,3,10,-9,-3,7,9,-8,-9,10,-8,-2,6,2,-3,5,9,-10,-9,10,-5,-2,6,1,-2,3,-10,5,-2,-3,10,-2,3,-6,3,4,10,-2,8,4,-4,10,-1,-7,-1,-7,-6,10,1,4,9,-1,4,9,-5,-9,-9,3,3,-2,-10,-7,-6,-8,2,-10,-9,-4,-2,-4,6,-8,-4,7,-10,-6,-8,9,-2,2,10,-5,-4,-2,3,-5,-1,6,-5,5,-5,-6,-5,-8,3,-9,5,1,-4,-6,-9,6,6,-7,8,-6,4,6,8,-4,-6,-3,-8,10,7,1,-9,-8,-2,7,9,-2,9,2,-2,10,1,10,-8,-3,8,-3,-2,3,-7,3,6,-9,-1,-2,-7,-4,-8,8,-7,-2,-7,-4,-7,-3,7,-8,-1,-8,8,-9,4,3,-10,-7,4,-3,-6,1,2,-6,10,-2,1,-5,-1,5,-8,5,-1,-4,-4,7,-2,1,-2,2,1,5,5,-10,-4,10,-3,-7,-9,-1,-6,3,7,-1,-9,3,1,1,-7,2,7,-3,-9,7,9,-3,6,-4,-7,4,-10,-5,6,-6,-8,6,2,-8,-10,-9,4,-6,7,5,-7,-10,-9,-7,-3,-10,1,8,7,-4,-2,-6,6,-9,3,7,-5,6,-3,1,-6,-9,-8,2,-5,-4,3,3,3,-2,-6,-6,-5,-6,-5,-6,-7], dtype = "int32")#candidate|2595|(2145,)|const|int32
call_2594 = func_1099_call(relay.reshape(const_2595.astype('int32'), [15, 13, 11]), relay.reshape(const_2595.astype('int32'), [15, 13, 11]), )
call_2596 = func_1099_call(relay.reshape(const_2595.astype('int32'), [15, 13, 11]), relay.reshape(const_2595.astype('int32'), [15, 13, 11]), )
uop_2600 = relay.sqrt(call_2589.astype('float64')) # shape=(4, 15, 14)
uop_2602 = relay.sqrt(call_2591.astype('float64')) # shape=(4, 15, 14)
bop_2616 = relay.not_equal(bop_2579.astype('bool'), relay.reshape(const_2566.astype('bool'), relay.shape_of(bop_2579))) # shape=(4, 14, 14)
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
const_2624 = relay.const([[-2.686356,-0.190662,-1.242812,-4.331375,-0.381758,3.327614,-9.184680,-4.464329,-4.232412,6.454505,-0.652730,-5.141209,-9.420604,1.616898,-7.190136,4.304329,6.369709,-1.931036,-0.818273,7.474747,8.892327,-2.233173,-8.072003,9.409961,-1.760798,-7.403583,-4.087734,-6.026702,-6.238793,3.729251,9.173749,0.759268,8.476396,0.697475,-9.167199,-5.225867,3.650604,-8.385271,5.433752,-0.572567,-6.880487,3.251162,-4.834512,6.225751,5.089515,0.690280,-9.147215,-7.993931,-2.082050,6.054829,-7.093420,-0.528022,9.511881,0.974157,-2.156948,-9.331878,-8.993955,9.373526,9.997951,2.284237,-0.121290,-5.143576,-2.354314,-1.279860,-8.018186,4.700561,3.376861,-3.437948,-5.254018,2.864869,6.251119,8.893654,5.107005,-0.840030,-6.776715,-2.249703,-9.520988,2.587035,7.123058,0.719052,2.872188,-0.470353,0.757247,6.398209,9.724139,-3.279170,-1.909132,-6.483308,1.801205,9.406724,2.856478,-1.908383,-0.077066,-3.984948,8.932524,9.573627,-8.355492,7.263550,-3.880304,-6.996673,1.712988,-0.528323,-7.269676,-0.596427],[-2.746485,9.093570,4.947876,7.185298,0.697795,7.857188,-6.313206,-4.610763,-3.931524,-0.113641,-9.775527,-0.291757,5.191210,-6.473799,-3.844066,7.557698,-6.331314,-0.483825,-3.611897,4.938673,6.939040,-2.972339,2.164804,-9.025707,-2.584916,-5.027385,7.573214,1.073970,9.539347,4.614167,-7.770148,-3.935202,5.376832,-5.641586,2.566124,-7.097967,-6.098122,-8.559837,6.382140,3.182248,9.350530,-6.138401,1.512300,9.803815,4.586426,-5.664313,-2.213360,-5.336650,9.150748,3.950029,-7.885098,8.975538,4.094665,-8.668242,-5.409127,-6.435394,6.406198,7.203198,-1.880626,-0.602508,9.833172,1.501114,3.524597,8.185167,-2.313810,5.961020,-7.487171,4.115808,-0.229379,-9.924975,-1.801277,-8.623037,-7.222816,-4.581186,8.814463,-4.083327,8.267428,-0.572670,-7.709165,4.348937,-4.120600,4.369527,0.933099,-2.320912,9.018708,-7.772557,-9.271759,4.833513,-2.538916,7.386328,-9.781596,-4.168012,-6.832821,4.942222,5.211434,0.157575,3.698755,-1.001717,-4.957234,1.921140,-2.523300,1.935697,-7.035355,9.135856],[-3.761898,-9.231632,-5.735385,-4.660060,2.419738,8.533525,-3.257170,1.918328,-5.607489,-4.912870,-2.708072,-3.441822,1.867024,6.707963,-0.043705,7.271830,-7.913788,-3.227825,-1.134089,9.968839,-4.679147,-1.214035,1.067560,-7.123103,-0.244233,-3.175900,-9.212954,0.498151,-0.346430,-4.557047,5.020244,7.985209,7.372665,-9.873813,-3.977785,-8.976518,2.178481,7.622175,-6.994020,-3.608655,-2.783469,6.326098,5.714792,9.178632,-8.241182,-6.787699,5.280722,4.914351,0.103507,-0.365891,1.245671,-9.655842,-7.000556,3.079071,-7.603630,5.098733,4.120848,9.840659,0.944764,-8.574530,-0.746159,9.401734,7.474607,7.296309,-0.357934,-8.074979,-5.224926,-9.679244,2.184880,6.297607,5.732266,-9.963835,3.318059,5.533273,-9.654193,-0.704682,5.762732,-7.455601,-6.234991,5.651765,-5.480667,-9.698562,1.169686,9.343830,0.251738,-7.235621,8.005297,2.088565,-3.818709,9.351119,-2.527574,-2.698569,8.290293,-0.458168,-4.249561,-6.704129,-8.843785,1.270071,-5.264184,-5.158675,0.011715,-5.069527,2.697697,9.775434],[8.693083,9.757797,6.050718,0.905406,-3.552130,-3.110092,5.371572,1.585836,-2.371994,0.753682,2.725261,-4.496630,-2.772234,1.114608,-9.419249,-4.006379,6.684586,5.476338,9.458670,3.306999,7.687746,-8.997939,5.167684,-6.260341,-5.074448,-4.076323,9.752716,-1.118955,1.936253,1.911705,-8.193808,2.090380,9.134595,-5.077109,0.216804,5.650637,-7.739360,-7.892585,6.650429,1.432704,-5.426351,-3.569753,-2.718342,-8.110721,-3.021844,0.802506,5.958755,3.167577,4.461069,0.600914,8.421236,3.483248,-4.167509,2.126402,-5.457087,5.298122,-9.100240,-3.162677,-9.481136,8.666679,3.880932,6.210247,2.339868,1.620885,4.901748,-7.239961,9.999828,-0.600586,1.514422,-7.231253,-1.506288,-9.302187,7.005117,8.317926,0.011392,-0.361624,1.918653,0.677857,-9.457534,5.203636,2.704204,1.234892,-7.238530,-3.883207,8.088180,0.003482,-3.265816,6.672490,1.333880,5.919119,8.235937,5.856562,-5.107532,3.863529,3.398162,-5.421263,-0.404731,-9.932208,0.853473,-1.463749,3.739470,-7.420376,-7.232254,4.610899],[-2.853187,-4.454772,-1.440821,-4.674160,9.328434,-1.005534,-1.919711,4.127093,-5.383587,8.216236,9.442893,-6.423446,-8.048302,-8.896077,-9.013521,-4.723327,8.037257,-0.151421,-9.146101,-6.713448,0.373218,-2.239751,5.192663,-5.242685,2.152923,0.360636,-4.505024,3.284989,-6.458514,3.167427,6.582368,6.281680,-3.843240,9.225760,-5.615037,-2.393947,-6.387830,0.047076,3.209762,2.616512,-5.418169,6.469064,-9.310546,4.902322,-8.022812,-1.744193,-3.432305,-3.844503,4.220423,2.828753,1.350903,0.201311,-3.705647,8.320198,8.863746,5.833157,8.309435,-6.100213,5.447180,-9.621581,-4.280547,-0.991629,-6.587800,6.578461,-0.867553,7.279401,6.476657,1.058006,-9.900659,7.199209,4.655575,5.573261,2.110331,-4.459168,0.989909,-9.956807,5.128823,-0.269843,-3.628563,-7.805725,-2.712170,-7.486213,-8.151228,2.335103,4.668875,-6.628475,4.029554,5.868776,9.921115,-5.191016,7.008969,-5.093951,7.430289,-4.275993,8.296838,-8.786220,5.102396,2.978981,-0.840798,-4.724291,9.940468,-4.173198,-3.324997,8.261993],[0.907255,-8.189586,-2.420162,-4.516333,3.785497,6.140906,8.683055,-2.298101,2.001374,-3.930211,-6.997918,3.298787,-9.817112,4.950957,3.877456,-2.788404,-5.522551,4.692687,-8.838616,-8.622374,3.060809,-4.518690,2.365143,2.700102,-5.159224,-6.129377,-1.777634,-4.162126,8.162275,9.456820,-6.475723,4.323704,-3.052342,0.659364,-1.217156,-8.213787,-5.481674,-4.662825,3.571489,-8.942315,-2.106447,-8.624780,-0.759051,5.332982,-7.182452,-5.974386,-6.045436,8.945481,5.077012,9.458527,-2.565421,0.315210,-4.174235,-5.376335,3.305443,7.027555,3.445731,-8.861994,-1.532313,6.042349,-0.933659,5.980544,-1.620424,9.235168,-7.387058,5.954544,-9.089792,2.738450,6.828891,-9.033880,-2.222201,-0.335994,0.074084,9.778921,-3.592480,6.567289,-4.523656,4.257449,6.349384,-3.683098,-5.831743,0.770372,-0.288190,0.354062,-2.911299,-9.883045,-2.606208,7.640625,3.729157,5.643875,4.899356,-0.121846,-4.987252,-7.231708,-9.958001,1.441130,5.195660,6.058778,6.725233,5.655963,-5.247766,-9.506541,-7.703116,4.984306],[-9.933135,5.257021,5.931090,4.187155,3.458269,6.119971,2.198938,-3.932421,8.547786,-2.727550,6.569140,1.019619,-5.799316,-2.514684,6.287867,-6.972282,-2.592638,2.393632,-7.589735,5.525983,5.276593,5.044294,3.710454,0.884020,-9.777279,9.809752,9.639973,4.216836,-1.747134,-1.135902,8.499317,1.976677,-8.239471,5.828761,-9.892862,-5.159626,-5.112578,-0.079140,-6.509672,-8.354398,9.310961,-7.263888,-5.559799,-6.626083,3.064729,-7.059345,-0.547467,-9.749697,1.188117,3.090793,6.691132,1.317504,7.565731,6.170090,8.420467,-1.729656,-6.811260,5.029181,9.140455,2.893569,-7.147430,2.495968,-1.651898,0.036767,-2.958469,3.887649,-7.733720,9.075866,-5.165342,1.058814,-9.163141,-0.597294,-0.610758,-0.659254,-2.132414,-1.224965,2.325917,6.725022,-7.751491,2.722392,2.645146,-5.701725,1.116470,1.988825,-9.682139,1.076466,5.144930,2.789245,7.734830,5.914946,-0.814996,-2.144402,3.082074,2.312632,-8.761405,-7.273668,5.209503,-3.389529,-2.695586,-4.523260,-1.088178,-8.236628,9.246759,-3.992032],[5.180698,-7.280272,1.743029,4.501023,-6.767140,-5.153074,-4.554406,-8.610633,3.646070,-8.277647,1.868044,1.526240,9.103125,5.364545,7.742970,3.197969,7.488316,-1.720681,0.507967,5.866301,-2.036058,-8.674806,4.662156,-1.385543,6.163577,-0.688796,5.897620,3.470873,5.649126,-1.148020,-5.711897,4.812525,2.508930,-1.557995,-3.676645,0.830008,-3.047150,4.716112,-5.805593,-5.695280,-4.994288,-3.276829,-8.917383,-6.229630,-4.371324,9.685214,2.550406,-5.494680,-1.041242,7.034429,1.932553,-1.707609,-0.985478,9.597779,6.398710,9.313306,-6.796108,-9.011915,5.658868,1.408596,3.289842,-2.789466,0.490593,5.203778,0.441881,-9.547800,3.035066,-0.153609,-9.321654,4.226043,-3.860337,-6.412224,-1.319239,2.238503,8.378273,-6.213511,6.926574,8.124022,9.751338,9.727153,3.637917,2.439469,-4.869252,6.341555,7.667086,-4.432904,2.782299,2.849815,3.173546,5.355123,5.440938,6.137900,-8.312977,2.371637,-6.739691,-1.832900,4.222386,-4.857618,-2.815459,-1.396052,-8.426391,4.573181,9.263795,-8.002171]], dtype = "float32")#candidate|2624|(8, 104)|const|float32
call_2623 = relay.TupleGetItem(func_639_call(relay.reshape(const_2624.astype('float32'), [8, 8, 13]), relay.reshape(const_2624.astype('float32'), [8, 8, 13]), relay.reshape(const_2624.astype('float64'), [8, 8, 13]), ), 2)
call_2625 = relay.TupleGetItem(func_643_call(relay.reshape(const_2624.astype('float32'), [8, 8, 13]), relay.reshape(const_2624.astype('float32'), [8, 8, 13]), relay.reshape(const_2624.astype('float64'), [8, 8, 13]), ), 2)
uop_2631 = relay.atan(uop_2567.astype('float32')) # shape=(4, 14, 14)
func_1362_call = mod.get_global_var('func_1362')
func_1368_call = mutated_mod.get_global_var('func_1368')
var_2637 = relay.var("var_2637", dtype = "int16", shape = (450,))#candidate|2637|(450,)|var|int16
const_2638 = relay.const([-4.886890,-8.439305,-5.083863,-9.573246,1.706780,-8.053733,8.035298,8.442726,5.441126,8.821816,4.262645,3.854873,-7.339609,-7.008484,1.308355,-2.156046,-9.306507,-6.416424,4.697723,-8.891923,-6.473635,0.026125,-1.975949,-9.618906,5.807848,9.924076,2.799165,9.059146,1.878002,-1.668059,-5.092617,-9.533871,9.815673,7.746103,6.038388,7.583696,-2.507119,4.517594,4.280204,-0.008234,4.586662,8.337073,-1.344931,-9.396954,-2.733334,-2.158129,-0.762394,-8.989626,-1.492216,-8.579796,4.812548,5.340325,-9.331713,-4.571991,-5.849623,-9.153693,0.205338,-3.122446,-0.089222,5.773414,2.249597,-9.866083,-4.242012,3.725797,-1.926905,-2.525350,-1.977283,-5.802909,-6.974036,-6.713808,5.924081,-3.231965,0.582153,6.991346,-0.638355,-8.707515,-9.545846,4.703946,3.442483,6.611645,-7.092855,-5.219538,0.033414,0.069295,5.929122,-7.006880,5.206025,0.806797,-2.747203,-7.624141,8.068907,-4.262346,2.292841,-0.644459,3.156159,8.916963,5.506232,-7.318721,-3.461734,-2.410673,1.307847,-5.825722,-2.553870,5.599281,-0.453480,5.832005,5.189677,-2.814327,6.522097,2.191731,-3.668287,-5.999492,-6.671861,3.279576,-3.016140,2.008889,-4.470998,-1.670219,0.340327,0.734999,-1.036895,-5.781116,2.076804,-1.945494,7.601910,8.860389,-2.310543,-8.455042,-2.450385,0.315146,8.198603,-9.885924,1.663633,-5.398401,4.132985,-9.506186,-9.872554,3.749697,8.766574,-1.434188,6.473113,0.069086,3.567355,0.457192,5.789166,0.188724,7.869631,-6.274860,-8.097907,3.954278,6.554059,5.243096,-8.731896,1.900203,5.394096,1.128612,4.125997,-8.304248,-7.143131,-3.402256,3.278538,-8.059468,4.549483,6.791953,-6.155024,0.282436,-7.958480,6.538490,5.838382,4.029408,4.491146,-5.073079,3.950620,1.364582,-9.628632,0.361801,4.022779,-3.264413,-3.389099,1.721243,-7.991889,-5.335166,7.575331,-1.309007,-9.081777,6.223889,-3.158512,-5.108972,3.709905,1.851972,2.406854,8.964563,-7.861528,-5.989856,6.071986,3.855981,-6.047520,-3.416415,-3.541830,7.944629,-8.723278,-2.710013,-8.722936,-3.387273,-1.249439,0.178234,-0.358624,9.893012,-4.592497,-4.817598,5.245254,8.289670,3.391601,0.101968,-5.023736,6.750768,-0.674771,9.459442,-5.240742,-6.763133,0.242338,1.730966,-9.011682,3.136332,-3.713585,-6.090428,1.539532,6.726571,1.365349,-8.007266,0.334665,7.628944,8.849066,-1.042760,-2.067627,7.742265,-6.276755,-5.178971,0.026801,9.883756,1.388449,7.446211,-8.114913,3.799130,5.008488,1.175813,0.439801,-0.114148,-6.565771,2.896080,6.907532,-9.036909,2.371854,-9.935069,-3.725028,-9.857769,3.561933,7.755130,-2.418118,-4.544759,-1.619510,1.390352,-6.185752,9.277120,-5.280975,8.009547,1.090682,-6.962552,-7.786409,1.674889,-4.169414,-7.007305,9.541544,3.786296,3.350710,2.536021,-4.553595,8.091433,5.147736,3.320908,3.004533,5.470380,-5.421567,9.875783,6.680416,-5.960319,-4.047398,3.272595,-3.588640,-4.763237,-3.898752,1.190998,-9.880612,3.202270,2.097316,4.851761,-5.654478,4.054237,-2.980482,9.445145,5.563138,-8.988921,6.733460,8.963692,-4.572660,5.176897,-6.412654,9.775568,5.999945,-6.688883,7.796017,-4.147653,-2.888798,2.579625,-3.889210,-5.339033,-0.690050,-6.438385,4.531109,9.906068,0.498334,-7.899995,2.409331,-3.666214,0.796050,-9.807443,-5.497824,-7.996545,-8.163289,-6.926947,-7.655617,3.965096,1.889479,-2.882726,4.630021,-3.321285,-8.303228,-1.526585,3.294889,6.704199,5.786024,7.856742,-5.970333,8.290519,7.583326,9.006382,-3.103984,-7.072362,-5.391513,-9.649857,-2.934708,-5.252355,-0.234455,1.462886,3.409517,-8.917285,-9.683704,4.551333,2.524813,1.408065,-7.284928,-8.873364,0.456197,-2.039534,-2.609881,-4.552278,4.683498,3.053027,5.186306,5.641445,0.234676,-3.324535,-5.722460,-2.993249,-0.904854,-4.715705,6.696743,0.789030,-6.084190,-7.197482,8.732063,7.224724,-7.173566,-6.473272,6.288440,-8.020977,9.681979,-1.456262,-3.225143,7.063674,8.783532,7.873045,-7.200579,6.820805,-3.729167,8.427024,-8.578576,1.805276,-2.461083,4.877791,0.759475,-3.184636,-7.831297,-6.675163,-9.857406,9.619714,-6.475185,-8.021060,7.700788,7.352901,5.863733,3.382328,4.460520,-3.436755,-8.500849,-6.932591,-4.356231,-2.142449,0.305742,1.526901,-2.041213,9.650152,-2.266777,-6.785519,-7.902234,6.563710,-9.769096,7.124644,4.129075,9.802867,7.738668,-4.729269,8.377804,-3.595655,6.708637,-8.389907,-6.463084,-7.560601,7.346109,4.345077,-8.073474,7.172606,1.536374,2.929637,1.459104,2.034707,-3.959193,-6.836183,-7.607004,-2.748821,-4.807529,-4.605124,6.584927,0.380263,4.307321,-6.593564,-7.090323,-8.278491,-3.916696,-1.189964,9.735243,9.625256,9.530941,0.016481,-0.276656,-1.773327,-2.099322,-9.682754,8.294346,-1.567414,-5.563004,7.013525,-0.836486,-5.749603,3.091059,-1.492707,-0.911732,-7.122579,6.454987,-1.195931,1.825150,2.920890,5.530244,8.940636,1.710418,9.203516,-3.000257,-7.979014,-6.227440,-1.667051,-1.835798,-6.527841,-6.510888,-8.006645,-8.178495,2.927245,4.036630,3.750507,-8.157150,-5.189923,-7.538101,5.810344,-6.344578,-2.849395,2.172274,-2.625646,2.450093,-3.384238,8.397970,-2.461514,0.147826,8.145447,-2.808414,8.171820,-2.523558,-2.049124,5.314666,7.907165,-9.806065,8.647838,-1.923747,2.058105,-4.458398,2.457070,-5.181643,-7.486167,-5.516145,2.078323,-5.826923,2.311385,-3.154035,-5.297232,-3.958390,7.904225,1.982340,-1.818624,-0.970030,2.473874,2.764067,-1.444338,-3.479299,-0.409762,-8.441946,1.275095,-7.807691,2.016716,6.819464,0.082818,-7.719652,-7.405785,7.701424,0.937241,-1.627873,-6.581859,-9.034466,9.375065,8.068028,1.355062,0.805280,3.854625,6.784174,-8.460606,-0.982089,-2.352009,-1.395575,-3.810382,6.793088,7.421246,-7.277948,-9.793884,-9.654738,-2.874789,8.850090,-6.455619,-5.788782,-2.526088,-7.461939,-6.827791,-6.900639,0.968131,3.841439,-5.970578,-5.534762,-8.322287,-7.514182,2.529727,2.919646,-1.531709,6.430638,6.942714,-7.810569,6.681531,8.670996,0.082972,9.696475,-0.124582,-5.721925,8.117975,4.135692,-8.868354,-6.463929,-3.396286,1.438736,-3.408505,5.403504,-6.502340,-8.018572,8.612613,-8.906001,5.578429,6.027717,-2.816676,5.227480,-6.227453,-0.331317,-6.297444,-0.016342,-1.277267,4.772781,-4.472471,-5.909867,1.163697,4.598719,-6.678471,0.499975,2.118555,-8.567516,1.844360,5.970796,-5.360548,-5.443404,0.951678,8.632264,-0.809288,-3.573683,-0.027568,9.113195,4.004184,-7.143274,-2.920776,-2.643960,-9.698549,-1.048527,-9.152762,-1.036726,6.380679,7.386345,1.618251,-9.116665,7.845833,0.718149,0.788232,7.130119,7.469111,5.576658,-6.123228,9.713128,-9.981499,-2.999966,2.815452,8.048576,7.853487,7.754896,7.280855,-4.363276,4.861723,-5.619907,-4.243486,5.264256,7.083651,-9.319077,-9.387643,2.779405,7.560604,5.165320,-3.459866,6.861548,1.088399,-7.939318,-7.181293,-8.173402,-3.375117,-3.078746,-1.514133,-5.022204,-4.711507,3.417911,-7.988537,1.310729,-3.118325,8.514283,0.202188,-3.058269,5.708858,-6.888846,9.815745,0.343365,0.266094,4.166205,-6.838781,-2.782675,-8.360011,1.601690,-8.400436,-7.866644,-2.305777,6.112434,-6.606318,-2.910444,-3.890435,3.662605,6.337494,-2.732729,-7.995339,6.513692,2.093590,-7.520034,7.033108,4.603075,-2.946126,0.750774,9.740935,0.214942,-5.544257,8.686171,-2.230913,0.366003,-4.628221,-6.192666,4.146605,2.272007,1.833258,-9.780102,0.359257,-5.337947,2.479832,-9.846387,-7.831744,-0.217175,-4.162683,-6.637588,-4.603267,-5.911422,6.226085,2.288234,-5.704267,8.421067,-9.404466,6.393156,7.105301,-7.434072,3.910792,1.013934,-4.448711,-0.849580,-3.907272,2.081844,-7.316199,3.576139,-4.875115,-4.616437,0.384127,7.017932,9.721399,9.727669,-1.373363,9.261023,5.417859,-3.200655,-9.365610,-3.133378,0.055893,9.892629,7.429699,6.917755,-0.623606,8.309457,1.314498,2.196822,7.812949,-4.598534,-0.655376,3.297248,-3.109983,9.797865,-8.632017,5.189003,9.065243,-6.992245,7.432316,2.424079,0.992014,1.440940,6.928582,-5.278817,-3.177548,-6.637515,-6.834619,-4.192076,4.838688,-5.214260,6.813774,7.719406,-4.864875,3.601654,6.151750,6.827558,2.866587,-8.240531,-1.517943,5.041396,1.038748,2.934608,2.119453,-7.932232,-9.282186,2.365122,2.818210,-1.630322,-3.448489,6.771054,-5.680999,-0.686667,-5.822363,-7.558851,8.311732,9.968452,-3.916455,1.661117,-6.267316,-8.581440,-7.666581,-6.773806,1.831101,2.751569,-2.827990,3.925499,-9.642671,0.169752,-4.743997,2.874075,2.660286,-3.125636,3.935698,-2.461969,-0.077961,-2.121055,-4.120774,-5.379440,-9.777410,1.038521,-1.728557,1.416093,-1.652546,8.476005,3.830917,3.292544,4.577301,-0.072029,0.791210,-0.376136,3.076294,-4.475724,7.930995,2.719293,-1.652323,9.578057,-4.382571,0.777146,6.789982,7.507841,0.691435,3.450468,0.376908,-9.154292,-7.663455,-9.918945,3.271988,5.696079,3.576223,-0.316888,8.844715,-3.409240,9.434084,9.959038,5.229389,6.305172,7.303579,7.581334,-0.617470,0.221678,3.351861,-6.185257,-7.633730,3.325848,4.710878,5.923359,1.019937,-4.389837,-2.320478,6.906223,-0.461092,-3.016514,-2.239745,-9.374607,4.574008,1.798512,6.088209,-5.054776,-3.974554,6.609986,4.009961,-3.607168,8.559140,4.815363,-1.795335,8.611136,7.417565,-9.977758,6.469613,-4.994640,-7.073401,6.423546,-8.155082,7.850566,-5.412270,-6.812863,-3.869710,-2.413171,9.704308,8.572468,3.619987,-1.160663,-7.475369,-8.340638,-4.727596,1.319495,-3.414266,-3.100747,-5.888348,9.890996,3.368411,-1.245967,9.675464,0.168871,3.873364,-0.276011,6.156708,7.458678,-4.449937,6.502730,1.896576,5.739258,-7.707667,-2.298662,-0.012735,7.670141,5.498025,8.922899,-4.761335,7.746361,4.799957,-5.764812,-7.219893,-8.722102,2.623169,5.250646,-9.160374,5.284125,0.559627,2.429883,8.750274,2.245334,7.412813,7.772572,9.928231,2.544657,6.564427,5.513360,9.492254,-5.395930,0.583407,3.718384,-0.039690,-7.371584,-0.512123,9.434087,-0.535932,-8.554964,5.878104,-7.986463,-1.696223,8.101860,3.922481,-4.720167,6.920954,-1.154494,-7.520190,-5.546271,-2.155581,-2.054299,5.122305,-3.383416,-0.383113,3.732366,4.731026,-9.900654,5.246290,9.603507,-1.167234,8.008978,-9.419943,3.750539,-2.143428,0.222031,-6.795494,6.390216,-0.282577,-2.578159,8.938142,-1.684172,1.462394,-2.994194,7.654231,3.799130,7.555311,8.895612,-8.627393,5.793706,-7.293091,0.503771,-0.177445,-1.050381,7.538578,-7.334196,-3.157387,8.499950,8.791867,-8.689043,1.297699,2.375189,2.257704,-0.327764,4.188592,-8.383322,-6.757692,-0.622708,-6.646045,8.786954,5.950174,-8.612080,7.499806,3.261689,-7.631782,0.046485,-7.522581,-5.007880,9.805583,9.994675,-8.435873,-3.388366,-7.438200,-2.564474,-6.712829,-0.857401,5.772707,8.118977,-7.450410,6.512717,3.523108,-8.128048,3.163480,5.646755,3.372156,5.799989,-2.785298,-2.863331,7.980466,6.358999,3.993401,2.216439,1.110388,2.850300,-3.979712,-7.113242,4.507117,8.171801,7.192384,7.881702,2.584446,5.483582,-2.881779,-6.316241,-8.215662,0.950060,6.219336,-1.743836,-7.979627,-4.757130,-4.271804,-3.631225,5.275127,6.828182,-5.913741,8.622064,8.141737,9.542963,3.362966,1.705027,1.085479,9.272030,-8.108919,9.427454,6.714404,0.267958,-3.987447,1.337389,1.483192,0.381811,8.608172,5.603113,4.815876,-4.022374,5.072310,-3.140064,3.987497,7.362276,4.049755,-0.336779,1.858548,-0.855063,0.761159,3.315835,-8.713658,-5.182371,-4.484416,5.722523,-3.865808,-8.849149,6.111391,-2.586464,-5.344543,-6.960646,8.493518,-5.287433,-6.391003,-0.734056,-0.105963,-4.896370,-7.169432,-5.235196,7.324342,-6.549266,6.163814,8.457541,9.578450,9.925459,8.836272,2.060607,-0.503147,1.379074,8.729242,-2.574001,-0.029753,-8.186552,9.458976,8.840842,-0.463205,-5.288484,-9.597548,5.046684,-7.935183,0.224783,-3.162541,-1.822092,-1.131135,-9.646030,3.217880,3.893733,9.735532,9.791691,-0.859300,7.200948,-5.876924,-6.560417,1.757607,2.730846,2.776045,-2.510408,2.887575,-2.342964,-5.340812,7.816805,-5.568178,1.678710,2.427114,-5.164963,1.887647,-3.561404,-9.299068,-6.022279,-1.319158,3.401259,-6.250542,-5.623185,-2.828180,8.381819,2.164754,-9.470329,7.075195,5.380226,-8.542314,-1.981109,-5.486747,-4.642810,-4.206736,-0.551144,-0.856647,-6.765039,7.863085,-5.466212,5.904842,7.146272,8.609847,-3.924413,6.307508,7.845525,-0.478081,-4.329560,-8.721571,9.640396,7.396438,-1.417131,2.461268,5.103899,1.904308,-1.971642,6.987224,0.008315,2.792228,-4.066529,3.519994,1.715676,8.325822,-4.870279,-0.053588,-1.864351,-3.123357,4.684410,0.352107,-9.552934,-9.284010,-8.339282,-2.498730,-5.640813,4.030600,2.999653,-4.297700,-4.020026,-4.390358,-7.786804,-6.060365,-8.323465,9.244213,-4.725395,-1.933705,2.925408,2.837777,3.636585,3.394286,-1.938733,-4.407749,9.645992,-5.544306,-4.950368,1.180777,3.184544,-6.410712,-8.351142,9.762000,-8.313952,9.167315,-2.800914,4.377772,1.257705,-5.156063,-5.423282,0.943526,3.762444,7.490031,-8.438295,-4.594328,0.401080,6.677838,-8.152973,-8.345666,0.165957,-0.255989,4.767202,6.216528,-0.151626,-1.369701,-6.850173,2.541900,9.453490,3.501930,2.630311,2.205445,-5.816569,-4.071093,5.370813,-1.790769,-8.844290,-0.127558,-5.571087,-5.801576,5.172049,7.471417,-0.687039,-4.261737,-2.682094,5.008049,5.975494,-5.803296,-3.495476,9.611112,9.062424,-1.940612,-2.844274,3.162678,-9.359760,-7.588747,-6.240101,5.737935,-5.983478,-0.098388,1.673157,-7.239821,-0.534740,3.646427,6.161476,-6.175290,-3.933721,-5.138170,-4.482884,7.275218,-7.373080,-7.773472,-7.175336,5.978565,5.696022,1.328542,-0.358813,-2.737888,-3.654063,2.746382,-1.967268,-7.067197,-2.001649,5.165561,7.769762,6.605843,-6.871089,-0.142538,6.446237,8.557804,-0.971324,0.469074,-8.421745,7.881680,8.311075,-8.369949,8.942005,-0.186743,-8.035586,-2.048790,3.821183,1.308687,5.587547,-4.560864,3.036539,-9.345017,-8.152892,-4.111634,0.250518,7.555296,-3.675414,-2.581459,-1.188978,3.797516,-8.551761,-4.524535,5.122720,-7.762914,-4.116722,7.523692,-6.475961,3.548498,-5.716111,-8.740624,9.682274,-3.268532,3.193689,1.534823,-4.691013,-3.534686,-4.846346,-4.268368,-2.851075,4.994989,9.116226,6.738605,-0.441576,-1.430525,-4.790747,-6.940043,-7.690256,-8.859601,9.002896,5.208742,-6.818737,-9.994306,1.687830,6.373338,0.426421,-3.200615,8.024616,9.735081,-3.484664,-3.651414,-7.888295,-9.479760,-1.200831,-5.275916,5.153388,7.587142,-0.511179,-4.629779,-5.572457,1.771262,-6.281721,-2.003263,8.521203,1.122708,5.822718,6.360700,-3.370451,-5.066312,-3.467264,-1.142578,-2.401290,1.675839,-9.573312,-6.290570,5.541612,-9.856595,3.173579,-7.696619,-6.557889,-5.415074,9.432017,4.020403,-1.025844,-2.247189,1.003053,-7.965530,-1.410532,-9.337304,7.546936,5.910085,-7.364780,7.642654,-4.552049,3.820797,3.495307,-4.102930,0.920311,2.723350,7.241518,-2.093722,-9.730841,7.077597,-5.826674,7.301692,-7.380619,9.748159,3.831914,5.855407,-9.822098,-7.388462,-1.890249,-0.647218,1.710406,2.865773,-9.910454,2.422689,-4.522071,2.701074,-2.785624,0.283892,-4.699407,5.686883,2.202982,8.331418,3.964064,5.981448,9.651095,7.497195,3.499985,7.070322,-3.110098,2.699125,9.654947,-0.490779,6.323129,2.660190,-4.239559,9.167567,7.935544,2.924972,7.455773,-7.918136,-8.997982,7.885095,9.299457,8.395314,4.340620,-7.202143,-2.782640,-2.174726,-0.925688,8.381709,-1.844845,-6.584087,7.727168,8.608818,6.208944,8.079448,7.791281,9.464751,-9.003913,0.427796,1.057146,-4.775108,-4.817452,-6.299259,-9.657936,9.337730,-7.044966,-6.212034,1.342351,-9.413376,-5.918909,-0.060865,-7.537366,-5.817663,5.816868,-7.610635,0.134048,-8.803467,3.077404,5.347897,-4.193451,1.634082,-5.215636,-2.622415,9.677079,-7.884410,1.265063,0.194595,0.864657,-0.706863,4.339684,5.515326,3.667335,-1.958476,-3.547261,0.260002,-5.764361,-0.454601,-7.342399,-1.485765,7.605874,6.018325,-4.341618,0.032437,-4.320970,-5.031325,-9.238640,7.095632,1.123591,9.105937,1.514429,-2.107028,6.211115,-3.632741,9.232534,6.497677,-4.615802,6.575109,7.209926,-7.607776,-2.010599,-2.344772,-5.152789,7.965348,9.548686,-5.610283,2.876590,3.296255,5.011829,-8.178710,-0.409427,1.222457,1.578669,0.553000,5.592197,-6.665813,-6.033945,4.644321,-7.322505,-5.558677,7.667967,-6.775877,7.959991,4.971365,-4.952381,-1.304020,4.178298,4.285351,-1.928759,8.879877,-0.495387,-4.653060,-2.742953,5.242605,-9.931594,3.738796,-2.690133,-1.175261,4.473469,-2.042706,8.000492,-0.642791,4.228202,8.513740,4.878402,4.072782,3.569217,-4.030648,5.287446,-5.580611,-1.983248,9.783617,-6.605730,-3.763226,5.971142,4.763802,0.935191,6.539079,5.716366,7.992242,-7.330469,-0.791229,-8.499026,1.684938,-6.894482,6.464750,5.512977,-7.749776,-6.314713,7.412661,3.789726,-3.010084,8.754562,9.224214,2.830774,9.188146,-0.425589,3.013047,-8.808163,-8.480397,-7.216264,0.822596,1.767958,4.669954,9.091159,1.624327,6.542863,9.232061,-6.979820,8.854407,2.760528,9.181239,-6.022016,-1.011699,9.408281,-2.061999,-5.832310,-4.806227,6.597282,2.981920,-9.328917,1.444757,1.066917,-0.636000,-4.115677,2.259025,-4.148577,0.919876,2.271011,-8.517297,-7.813032,-5.821175,-7.693223,-2.993754,4.759046,-6.047387,0.919667,9.165617,7.373106,-5.345984,-9.384162,2.832793,-4.016078,4.958203,6.538711,-1.325357,-5.328260,-8.696545,3.893927,-9.250645,9.876228,8.359667,6.126007,4.751607,-7.033235,-7.122093,8.677181,-0.433245,-1.930697,3.490005,1.720709,4.368609,-0.042824,-7.889166,5.285445,-2.297726,-1.353210,4.625580,0.025572,-8.114486,-7.299933,-3.398765,-7.312902,4.977609,-7.663218,-7.608266,-5.668046,-1.709998,-3.774012,6.071614,4.078168,-7.454026,3.626805,7.497513,-4.543053,-1.504785,-1.380063,-3.198473,0.284174,6.649904,-9.114702,9.352826,-1.265644,3.429733,3.836370,-8.669238,7.697747,-0.372768,-3.233991,3.594275,2.608321,2.410500,-0.028967,-5.852164,1.505503,5.311729,-2.895700,-1.803135,-8.862338,9.317844,-7.620860,1.142556,-8.957485,-2.726418,0.433982,2.387220,-5.190430,3.306079,-1.635876,-2.339568,4.998241,7.449621,1.115805,-2.382081,2.547705,0.944050,3.605242,2.374867,-2.158358,-5.767934,6.334766,-6.693233,-8.857673,-6.918235,0.266015,-6.258028,0.517018,-9.283036,-7.282662,-5.673824,-2.810226,5.959056,-5.412646,0.578688,6.750904,3.178505,8.765883,-1.606217,1.142972,-0.393952,8.504455,7.517988,-1.388698,1.874878,6.736702,1.167197,6.202290,7.467419,2.057387,-3.194931,0.822081,-1.287237,9.052406,-3.299146,4.850659,-8.338833,-9.969523,5.347877,3.479342,1.032599,5.438832,8.017366,8.290978,-7.244833,8.112718,8.724334,-1.382040,-8.489750,-1.407943,-9.806077,9.588766,2.668118,7.076668,3.133441,3.743344,8.564344,1.429124,-9.458235,6.452934,1.081688,1.747924,5.027779,-8.562724,-4.253217,2.371045,3.719823,2.949116,-8.564021,8.933155,7.522658,-9.602866,4.166605,2.423281,-3.060984,8.391416,-4.935504,1.438207,-3.226929,0.035135,-9.765395,-7.332995,1.268567,-7.519969,-6.889495,0.817326,6.450414,-1.716938,5.333588,-1.797642,-9.496501,-1.192317,-2.959538,8.376257,4.309433,2.103192,5.839615,2.720668,5.221478,-5.298046,-2.873581,-0.162035,9.445077,-6.246550,-1.863589,-0.881751,-6.592872,6.805467,-6.122275,-7.312151,3.505507,-4.691895,3.859302,-7.308545,6.383275,-5.292086,-8.993872,6.239899,8.838729,2.200701,-1.130362,-3.750896,-7.954069,-3.128783,-0.947254,-7.956636,-6.115604,-0.135486,0.800289,9.540160,6.475014,-4.996474,-9.820925,3.253762,3.401501,9.372436,3.106325,5.158061,-2.497217,-0.526525,-3.621681,-6.216451,3.703969,-1.934896,3.154762,-5.910123,5.891042,9.407381,-9.021158,3.557379,0.678898,-2.260831,-4.944012,-5.286208,2.478106,-8.298274,0.078540,-3.006131,2.196011,4.884570,-6.699607,-3.957124,-1.268750,1.142384,-6.287793,5.394927,-4.825844,-6.188481,7.309940,1.758040,-3.367281,-2.141767,-5.308463,-6.647569,1.493612,1.345931,7.609060,1.499906,8.194441,6.333144,2.982882,2.303427,-5.652703,-0.249840,-9.562868,-9.657534,4.704099,-3.866002,4.662883,-2.339407,0.846907,5.522111,1.544588,-9.593120,5.486011,-0.227981,-4.764646,-4.770198,-9.965785,-9.023414,-6.130032,5.518010,1.757915,-7.708437,-0.232025,8.212373,-3.970968,6.022379,0.150979,-1.211758,9.841616,5.056965,-3.164788,-0.999822,6.924874,7.736365,9.857054,8.574601,-8.484710,6.215969,-9.747702,-1.987350,4.158491,-7.950073,-5.395034,-4.733987,-7.474830,4.747242,5.391736,8.719855,7.944632,8.834173,5.034600,2.147456,-9.898165,-2.405203,-4.049708,1.207730,-7.011334,-7.766383,-1.969540,-4.218474,0.781525,5.806936,7.731142,6.461006,9.635437,7.893136,1.174100,-3.021171,-8.057773,5.148693,-1.935384,-7.730901,-2.687833,8.317774,0.067249,6.945606,5.972445,-9.620888,4.193088,6.152278,-1.405409,3.947690,-9.445811,2.426555,7.261851,5.499316,5.263043,-7.064248,-2.389933,-7.412632,-0.181753,-2.244751,-0.584020,-8.032976,-0.121159,-9.466380,8.871085,9.626045,8.283518,-6.827483,8.711960,-7.534319,2.327952,-3.994713,-8.216309,-1.356915,6.251336,0.479606,3.655100,2.671168,2.827995,-5.566107,-3.893118,-1.797350,-6.768125,-8.155680,-3.414492,-2.793049,2.178516,-7.079992,3.065634,-4.330939,5.023962,-2.224960,-5.636741,9.913856,5.226084,-4.434668,5.738461,3.389974,9.551327,0.560795,4.789878,0.324518,-9.479638,-6.220046,-0.790652,-5.238308,-9.196597,-4.515686,6.913445,1.444675,3.981464,-0.153555,-1.505814,-1.435231,4.635995,-9.557089,4.680553,8.238866,3.782031,8.897526,0.739353,0.429243,-7.264780,-4.191033,3.115240,-0.763408,8.835797,7.172029,6.015828,9.531005,0.044719,7.451844,0.648779,3.996725,-0.420800,0.237875,-3.164389,-2.864779,-6.686590,-6.500723,-3.995128,2.380050,3.755998,5.424738,-9.341557,7.957605,-6.920892,3.991458,-5.763246,-8.230020,8.146173,-4.426584,2.351051,4.923640,9.231059,7.517048,-7.164898,9.240990,-6.735656,-8.395116,3.432029,-3.457357,-9.382811,2.248122,-5.975614,-0.304018,2.697688,-6.426409,4.014335,2.073599,8.403207,-1.474398,5.265365,-8.102266,-1.633705,-2.209645,-1.546807,-8.610160,-7.725145,9.127435,4.765730,5.647267,-1.319559,8.980978,2.351710,-8.544145,-1.056287,-9.547558,-1.766145,1.759168,-4.889029,-7.442203,-9.642004,1.843208,9.702246,-5.896385,-3.050484,2.197082,1.607931,-6.035503,9.469626,0.537564,8.804477,3.465856,-0.594517,1.026725,0.179513,-1.693307,-8.419570,-5.180922,-3.821579,-6.863212,-3.361690,-8.980806,3.189526], dtype = "float32")#candidate|2638|(2240,)|const|float32
call_2636 = relay.TupleGetItem(func_1362_call(relay.reshape(var_2637.astype('int16'), [15, 3, 10]), relay.reshape(const_2624.astype('float32'), [2, 416]), relay.reshape(const_2638.astype('float32'), [2240,]), relay.reshape(call_2594.astype('int32'), [2145,]), ), 10)
call_2639 = relay.TupleGetItem(func_1368_call(relay.reshape(var_2637.astype('int16'), [15, 3, 10]), relay.reshape(const_2624.astype('float32'), [2, 416]), relay.reshape(const_2638.astype('float32'), [2240,]), relay.reshape(call_2594.astype('int32'), [2145,]), ), 10)
uop_2640 = relay.acos(uop_2631.astype('float32')) # shape=(4, 14, 14)
func_447_call = mod.get_global_var('func_447')
func_449_call = mutated_mod.get_global_var('func_449')
call_2642 = relay.TupleGetItem(func_447_call(relay.reshape(call_2623.astype('int32'), [288,])), 1)
call_2643 = relay.TupleGetItem(func_449_call(relay.reshape(call_2623.astype('int32'), [288,])), 1)
uop_2645 = relay.sqrt(uop_2631.astype('float32')) # shape=(4, 14, 14)
output = relay.Tuple([call_2585,const_2586,var_2590,call_2594,const_2595,uop_2600,bop_2616,call_2623,const_2624,call_2636,var_2637,const_2638,uop_2640,call_2642,uop_2645,])
output2 = relay.Tuple([call_2587,const_2586,var_2590,call_2596,const_2595,uop_2602,bop_2616,call_2625,const_2624,call_2639,var_2637,const_2638,uop_2640,call_2643,uop_2645,])
func_2651 = relay.Function([var_2590,var_2637,], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mutated_mod.get_global_var('func_2651')
var_2653 = relay.var("var_2653", dtype = "uint8", shape = ())#candidate|2653|()|var|uint8
var_2654 = relay.var("var_2654", dtype = "int16", shape = (450,))#candidate|2654|(450,)|var|int16
call_2652 = func_2651_call(var_2653,var_2654,)
output = call_2652
func_2655 = relay.Function([var_2653,var_2654,], output)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2670 = relay.var("var_2670", dtype = "int32", shape = (10, 2, 4))#candidate|2670|(10, 2, 4)|var|int32
var_2671 = relay.var("var_2671", dtype = "int32", shape = (10, 2, 4))#candidate|2671|(10, 2, 4)|var|int32
bop_2672 = relay.add(var_2670.astype('int32'), relay.reshape(var_2671.astype('int32'), relay.shape_of(var_2670))) # shape=(10, 2, 4)
func_1919_call = mod.get_global_var('func_1919')
func_1921_call = mutated_mod.get_global_var('func_1921')
const_2676 = relay.const(8, dtype = "uint8")#candidate|2676|()|const|uint8
call_2675 = relay.TupleGetItem(func_1919_call(relay.reshape(const_2676.astype('uint8'), [])), 0)
call_2677 = relay.TupleGetItem(func_1921_call(relay.reshape(const_2676.astype('uint8'), [])), 0)
output = relay.Tuple([bop_2672,call_2675,const_2676,])
output2 = relay.Tuple([bop_2672,call_2677,const_2676,])
func_2684 = relay.Function([var_2670,var_2671,], output)
mod['func_2684'] = func_2684
mod = relay.transform.InferType()(mod)
mutated_mod['func_2684'] = func_2684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2684_call = mutated_mod.get_global_var('func_2684')
var_2686 = relay.var("var_2686", dtype = "int32", shape = (10, 2, 4))#candidate|2686|(10, 2, 4)|var|int32
var_2687 = relay.var("var_2687", dtype = "int32", shape = (10, 2, 4))#candidate|2687|(10, 2, 4)|var|int32
call_2685 = func_2684_call(var_2686,var_2687,)
output = call_2685
func_2688 = relay.Function([var_2686,var_2687,], output)
mutated_mod['func_2688'] = func_2688
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2789 = relay.const([[[6,-9,7,3,1,-6,-8,-3,5,8],[-2,8,4,-2,-6,-6,4,-9,3,8],[7,6,-7,2,-7,-9,3,-8,7,5],[8,6,-7,4,-8,-7,-8,-8,-1,7],[1,8,3,-10,6,4,7,8,6,5],[6,-6,-6,-7,5,7,-10,-9,-3,-5],[-4,-4,8,4,-6,7,2,4,8,-5],[7,-10,-8,-2,-7,9,4,2,-5,-8]],[[-5,3,-8,5,10,8,1,4,6,10],[1,-5,-5,8,3,-1,1,-6,-2,-5],[-1,8,1,-3,8,-10,-5,5,-4,-9],[1,3,-5,10,-10,-8,8,-2,9,-7],[1,7,4,5,7,5,6,-9,-7,-10],[4,9,-5,-10,-8,-1,-4,-4,-10,-8],[-5,-6,-1,3,6,6,-1,-1,-5,3],[7,2,-4,-2,5,3,3,10,6,3]],[[-5,9,5,4,-2,5,1,-3,-4,-9],[-6,-1,-4,4,-4,-10,-9,7,-1,-6],[-8,-2,-6,3,-1,1,7,-8,-4,-8],[1,-7,9,6,5,-4,-1,-3,3,-9],[2,-10,3,-9,10,5,-9,4,6,-9],[10,-7,2,-9,8,7,-1,1,5,-1],[9,-8,10,-6,2,9,-9,-4,-8,5],[-3,8,-9,8,-8,3,-6,-4,5,-3]],[[7,2,2,-8,8,-8,6,-5,-4,-3],[3,-2,8,-7,7,-1,-6,10,-8,-8],[-2,9,4,-2,-8,-3,-10,-4,-10,-1],[-1,-1,5,4,-10,2,-1,-7,-7,-5],[4,8,4,2,2,-3,6,-1,5,-6],[10,-4,-9,7,-2,2,4,-1,1,6],[-7,-6,5,5,3,-5,-9,5,4,5],[6,-1,9,-9,-5,4,4,-4,9,10]],[[-3,4,-6,4,-1,-5,6,9,9,-6],[5,-8,-1,-9,-4,-2,-4,10,7,1],[3,-7,3,6,4,-8,-3,-7,9,-5],[-4,1,-3,-7,5,8,-3,6,-1,-10],[4,1,4,-2,-5,-7,3,-5,1,9],[-2,-1,-4,-1,-7,7,8,-9,-9,7],[-9,10,-4,-10,-9,-8,-6,5,6,-4],[-6,-6,-10,-9,7,10,2,-8,7,3]],[[7,-6,-2,4,7,-3,-8,9,6,-8],[4,1,-9,4,8,-3,-1,-9,-8,-9],[2,7,-2,1,-4,3,6,6,6,3],[-9,9,5,-1,5,-7,-3,-9,3,-3],[7,-7,-3,-10,4,10,-2,-1,1,10],[-3,10,-3,1,9,5,3,10,-4,2],[6,9,-3,4,6,7,-3,7,8,-4],[-3,2,10,9,-2,1,-5,7,5,-1]]], dtype = "uint8")#candidate|2789|(6, 8, 10)|const|uint8
const_2790 = relay.const([[[-9,-9,-7,3,-9,-8,-1,-7,5,-5],[-1,-2,-4,-8,-10,-3,7,4,-8,-8],[8,-5,10,-1,-3,-2,3,-9,3,-2],[-4,-10,8,-5,-4,3,-8,3,10,3],[-2,-10,-8,-4,6,4,2,3,1,-6],[10,9,8,7,7,1,-8,-6,2,9],[-5,-10,-8,-9,-10,4,-4,1,4,-10],[-2,8,-4,6,4,3,-8,-10,-5,-5]],[[-4,6,-1,-2,5,-4,4,4,-10,-5],[-8,6,1,-4,5,-9,10,6,2,-6],[1,3,4,5,-2,8,1,5,10,-6],[9,-3,-3,-10,-9,4,-6,7,-6,4],[5,7,-8,7,2,-4,-1,7,7,10],[4,8,-3,-10,1,9,9,-1,-10,6],[2,-2,10,8,9,-7,-4,-2,2,-7],[7,-9,4,5,8,6,5,4,7,3]],[[2,8,-5,-2,-2,1,7,-8,-10,6],[4,2,10,-5,10,3,-9,7,-1,2],[9,3,-1,-8,-3,3,-8,9,10,5],[1,1,10,4,6,3,9,-3,6,-5],[8,8,-2,-4,-8,-4,8,1,-3,9],[2,9,9,-4,-5,-6,5,-1,-1,-1],[5,-2,-1,2,7,-7,5,-10,8,-1],[-3,8,-3,6,3,4,3,2,8,-9]],[[-5,-6,4,7,2,-7,-7,4,3,5],[-7,5,-5,-5,-10,10,3,-8,-3,-1],[4,-9,-2,-10,-3,2,-6,-4,-5,-5],[-5,2,2,7,8,-8,5,-1,10,-3],[-8,5,-3,4,7,-2,-6,-2,-8,-2],[8,-7,9,1,1,4,-8,-5,7,-8],[-1,-9,-7,-3,-2,9,7,5,6,-5],[2,8,8,3,-3,2,-1,10,3,-3]],[[10,-7,8,5,1,-10,-9,5,4,-3],[-8,10,5,7,7,5,2,6,-5,3],[-1,9,3,-7,9,-3,-6,-6,7,9],[5,-1,5,6,-8,-5,6,-1,7,8],[-8,3,-6,-7,4,8,1,6,-9,-7],[3,-8,-6,-10,6,9,8,10,-2,-8],[-2,-8,6,-8,-8,3,-6,2,1,5],[9,3,-5,-1,1,-5,-6,5,-9,-10]],[[-5,2,-6,-3,8,8,1,3,6,5],[5,-10,5,4,6,4,-7,-5,3,-3],[8,-8,-5,-5,7,8,-1,3,-2,1],[1,1,2,-4,-6,5,10,-2,-4,-6],[8,1,2,7,-2,-4,-4,2,3,-10],[-7,-2,8,-2,1,-3,1,8,9,7],[-4,4,-6,-3,-6,-7,-5,8,10,-6],[-7,10,3,1,-3,-5,9,-4,-8,3]]], dtype = "uint8")#candidate|2790|(6, 8, 10)|const|uint8
bop_2791 = relay.add(const_2789.astype('uint8'), relay.reshape(const_2790.astype('uint8'), relay.shape_of(const_2789))) # shape=(6, 8, 10)
output = relay.Tuple([bop_2791,])
output2 = relay.Tuple([bop_2791,])
func_2799 = relay.Function([], output)
mod['func_2799'] = func_2799
mod = relay.transform.InferType()(mod)
output = func_2799()
func_2800 = relay.Function([], output)
mutated_mod['func_2800'] = func_2800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_2803 = relay.TupleGetItem(func_2799_call(), 0)
call_2804 = relay.TupleGetItem(func_2800_call(), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2254_call = mutated_mod.get_global_var('func_2254')
const_2840 = relay.const([-1.328154,0.072620,5.992065,7.526626,8.290217,1.711140,9.462261,7.879008,5.356826,4.618601,-8.938014,8.006393,-6.354082,-4.921368,-3.906587,5.144391,9.342961,-4.548844,-3.121249,9.294802,8.616829,0.511924,-4.403258,2.332862,3.866039,-2.732186,0.371583,-9.432392,7.224097,8.539312,-0.069121,-5.924169,-2.153231,-9.092936,9.859285,-6.815900,-7.620650,3.029159,-5.124279,8.392868,-5.444724,6.219799,3.117742,3.100338,3.134933,-0.242233,8.771063,5.451602,6.900241,-2.759891,0.826577,-9.454458,-8.026962,7.016762,-3.940377,0.469533,-3.004709,7.973145,-4.076034,-0.854443,7.502104,7.541279,-4.497035,-3.267560,4.957769,-7.516288,-2.060373,-3.494518,-8.982136,3.972120,-1.235159,2.728809,-4.188153,-1.777737,9.022369,-9.402349,-3.790561,8.846441,-2.835189,-7.950419,-2.836860,5.327355,7.523585,-0.349838,6.851255,9.925285,-6.255000,-5.999191,7.126452,1.194258,2.541357,9.865397,-1.108812,-0.396308,0.505039,-1.084607,2.296239,-0.223229,2.178322,3.618787,-5.911150,9.925224,8.314688,2.005476,-1.887036,-4.198244,-7.559524,0.301450,-8.265867,-2.594399,9.147630,-5.829622,-2.879033,6.903301,0.542175,-3.864365,4.084555,-9.456257,5.140437,4.343411,-9.404280,2.525855,-3.041021,7.407251,3.936318,-9.046325,-2.950672,5.331256,3.854582,1.311511,8.999230,-8.615039,7.328509,-4.707216,2.013671,-7.090180,9.052433,-5.007783,4.527060,-5.316089,5.674438,8.531225,3.470716,-5.631996,5.077031,4.083398,9.817930,-4.161419,-5.875300,5.151155,-2.547339,-8.583781,-8.752909,8.775745,-0.236375,-0.880655,-1.491740,-1.913840,-7.981201,-9.814898,-1.632672,7.822747,-5.836710,-7.044173,-5.776701,-7.183720,2.843824,-6.111016,4.187161,0.123711,3.569430,-7.822154,2.996246,-2.571293,0.624372,-2.478034,-5.192588,-7.433601,9.430777,-3.302287,-6.754049,-9.826288,9.156107,7.508476,0.170564,-4.517209,-5.080262,-1.647240,5.058356,-9.239155,-2.337296,-4.190500,-8.342275,5.189013,6.259196,7.788921,-4.342724,-7.637199,-7.621686,-8.183433,-0.670355,-6.254368,9.606347,6.884491,1.218615,-4.611276,-4.350339,6.084218,8.692423,-6.494187,-6.968737,-3.994893,2.599140,-7.335524,7.291979,5.256982,8.750896,-4.406985,7.913789,-2.288983,3.725332,-0.236165,4.425498,-4.571966,-1.638480,-6.949977,-1.039565,2.501335,8.800618,8.712637,-9.989654,-6.372085,4.227967,5.313546,-1.159076,9.103512,-8.321380,9.274333,9.389619,-4.485974,-1.395830,-3.855918,5.986865,5.457066,8.145815,9.943178,2.623713,-2.503278,2.170227,9.657689,6.600189,5.789936,-6.932581,1.636954,0.242990,2.370015,-6.055303,-7.781247,1.298358,-9.166815,0.072415,6.765506,-1.967999,5.886960,7.125851,0.441275,5.266149,-8.529254,-1.674920,-6.075427,0.750329,7.556665,1.238833,8.822521,1.904832,-5.294127,-1.890927,-9.566449,1.520116,-9.755730,-4.341382,9.938249,-1.693615,-7.340645,8.551107,-6.185875,-3.327546,8.643810,-0.135777,0.581906,-9.424265,-4.079911,9.218994,9.085929,-0.678851,3.632808,-2.347455,-4.090971,-5.282457,3.311505,7.569321,-5.549065,2.488159,-3.486704,-9.261076,-0.934206,6.164484,4.563197,0.022837,5.093849,-0.909920,-6.209275,7.696486,-0.450809,6.935368,9.523340,0.673481,3.359827,9.222035,-5.677217,5.212567,8.729629,7.765468,6.263357,3.846585,-2.936910,3.176347,-2.280721,-3.735046,-8.032773,-5.965118,-0.902882,9.375453,0.008108,3.932236,-2.014954,-8.928153,9.650082,2.662571,-7.048008,3.208774,-2.030442,5.494284,4.233647,5.092589,-4.050876,-0.851073,-7.636755,-7.412737,-4.597090,4.935244,-8.310809,-4.482909,-1.612050,-8.680829,6.101033,2.431894,-8.550204,-0.190011,-9.460866,0.743584,-5.840130,-6.678446,9.096751,-2.726218,-4.241209,-8.371267,3.965664,7.055451,-8.563469,-5.937940,0.823068,-4.051571,-4.298363,-2.429294,-3.061970,5.222239,1.650787,1.535637,-7.184203,-2.800719,-1.164730,0.468990,-6.033248,6.852837,-4.709192,-3.336799,3.106021,4.672354,2.264013,1.945391,9.066366,-7.999264,-2.574705,7.225017,5.454873,0.869755,8.657324,1.002151,0.618978,-8.512315,-1.780862,-7.261294,4.680985,-5.718220,4.168287,4.326952,-2.882150,5.988165,2.354018,-3.725263,-6.728659,-0.141381,-8.969477,6.789724,-7.884670,-1.663549,-9.970393,3.472299,-3.499024,0.838900,2.140787,7.258823,-9.005832,-2.691803,7.032798,9.983900,-1.371637,5.668808,2.137941,7.688245,1.650412,1.265760,-1.572263,8.132997,-0.614208,-0.409986,4.850865,7.944333,-8.490274,-5.033770,-2.556443,6.180699,2.172997,-1.755095,-2.703653,2.628449,4.614668,3.522287,5.269508,-5.740045,0.714000,9.509345,-8.956609,1.412186,-6.879097,0.954426,2.712440,6.684954,8.517154,9.465305,7.024099,6.029073,8.622135,-4.251561,-8.859376,-0.709037,0.140141,-1.827308,3.533538,-1.288150,8.793178,-5.553464,7.715764,-7.602124,4.596322,-1.553209,-2.776840,7.236434,-2.305315,-8.020609,8.893051,9.317995,-8.183616,-0.887413,8.901494,5.105325,-0.321537,0.026518,8.310837,3.718507,7.584520,-4.763356,7.237894,-9.257505,9.989223,-1.645005,1.840412,-4.039104,-6.819932,0.698847,0.434583,-0.042557,0.061871,1.918733,8.309928,8.855940,-2.123289,-0.064962,-7.992206,-5.347834,3.170194,-5.980469,-8.307518,-6.983476,8.972580,-2.509810,-1.909080,9.300174,-2.737407,4.497471,1.313595,-7.452823,-0.975480,9.017081,1.014722,-5.432756,6.034885,-0.973831,4.051228,-6.725206,-8.706537,-6.988238,7.561879,-6.722414,-8.427197,-8.740087,5.879853,-1.250226,0.634963,-5.655824,5.911080,-2.262537,9.260523,-0.854091,7.592277,6.639749,1.984009,3.634592,7.972224,-4.823757,9.775639,0.367028,3.139927,-2.089555,-2.476237,-5.223336,6.809814,-1.193210,2.446040,-5.549009,2.938853,-8.712874,0.939126,8.595502,-6.122584,-7.840830,-9.604612,-1.090933,9.436272,4.788767,7.461195,5.573652,-0.295695,3.524809,-3.753104,-2.267546,3.169954,-2.644531,-8.113807,-9.612680,7.473761,-4.570024,-9.107748,-6.933755,3.066099,4.206001,7.865000,-1.012356,-2.752527,6.009671,4.138433,-7.557082,-4.223193,7.713981,8.602247,7.676505,-1.583212,-4.936242,-9.202123,1.751264,-0.227363,-8.151603,8.093826,3.321412,-4.577068,4.574358,1.473378,9.820909,-3.774041,-8.168974,-4.986994,5.460830,-8.261726,2.851962,-6.616169,-5.164424,-9.691723,-2.062139,4.484729,4.298666,-4.006349,6.219839,8.763565,3.194070,3.163397,8.903760,-3.814464,3.623724,-6.637989,9.857316,1.902632,-5.669241,0.995854,3.989046,-5.286635,-7.244635,2.161955,-6.720137,-5.826607,2.391925,-2.307139,1.320313,4.189755,2.077863,-6.370665,-7.430434,-1.425075,0.082391,3.589844,4.419885,1.235763,-5.786510,2.540144,7.246226,-3.618177,-2.082863,2.210170,9.760132,-2.476915,2.935907,-9.814520,-0.283064,-6.517887,-8.705965,-4.817790,4.965491,4.208518,7.072314,3.178064,3.528966,3.016737,-9.212769,7.563406,0.090395,-0.268211,-2.217470,-5.106126,9.767677,-9.120418,-5.428051,5.803380,0.459248,3.949075,-0.230372,4.609675,-0.749878,5.176719,-2.488240,6.782077,-2.016447,-7.418701,-0.916827,1.070103,9.538763,8.434654,-0.189476,3.247891,1.547492,-2.431482,8.518073,0.884769,-0.493320,-7.313581,-5.036626,-0.363850,0.690501,9.241191,2.268031,-1.067437,0.147991,-1.989112,-4.125153,9.560695,-5.521421,9.392139,7.249049,-6.370982,3.542621,-8.311037,-1.882742,-4.236434,4.613165,8.139937,-0.652909,2.052466,2.859468,-9.678597,-3.812644,9.240650,7.139348,-1.311081,-0.951853,2.322281,-0.706591,4.704073,-0.315655,-0.494745,3.781022,7.919981,6.980788,2.173792,-8.644888,3.585180,9.661667,-2.066959,2.712276,-4.562195,9.380506,-5.987486,7.378601,-4.057973,7.474766,-8.332041,-0.774293,6.598407,-6.879263,-4.513883,-5.118940,6.024124,-5.151203,-4.319497,3.474004,5.474276,-5.937439,-4.569197,9.466908,-2.296245,5.914077,-4.616013,-7.905918,-4.569217,-7.020957,7.828384,-8.673412,1.099599,-9.876847,-0.623568,-8.781681,-7.942969,8.224232,-5.474645,9.836607,-9.166642,7.664187,-0.421614,-7.484201,4.203261,8.717135,1.371114,1.672483,0.055382,-0.654709,2.949045,5.267339,-6.244979,-2.499438,-5.936837,3.926386,5.788062,8.428968,-3.039414,-7.426785,-0.839411,-8.906927,7.574839,-2.054951,-2.007696,-0.095844,4.847305,8.019432,5.855383,8.120250,-6.424122,-8.416638,8.000805,1.202308,5.875488,0.918504,-8.122339,8.012927,-2.248897,-9.886894,-5.842788,-3.259717,-0.206311,1.265350,-7.207246,1.961720,9.404059,-1.715569,5.051431,-2.624137,3.566561,0.626395,-5.712856,9.854173,-4.518834,2.124719,-0.918015,4.734719,3.564611,-4.152217,2.030040,-9.288611,2.977686,4.722616,2.118785,5.882910,-1.581595,-3.301736,1.054637,0.435693,9.335682,7.980232,-1.761304,-5.969475,9.855065,5.128337,2.779121,-9.590636,-0.064054,0.074054,0.347609,-9.604866,3.038455,-6.725133,-7.865734,7.955527,-0.522754,-1.180436,6.595223,7.879468,3.096018,6.811208,-5.766678,-9.661838,7.286190,-7.407327,-9.690884,-2.875261,3.571249,3.545002,-0.835702,6.710601,6.310894,-7.461443,3.961342,6.327998,-3.015041,3.286894,-4.919959,-6.609907,5.250430,2.168232,4.523494,-5.983527,-4.421072,7.696408,-2.986088,-4.044419,-2.334502,-9.731285,-2.318331,-9.020596,-1.943729,0.401162,2.710294,-4.885809,0.491712,8.636627,-0.104970,6.048893,5.981298,3.275309,-5.938831,1.654917,-6.459197,-3.054670,8.953918,-6.540913,-7.660461,2.563412,3.747242,-9.355703,4.428930,8.663112,0.437073,-5.261003,6.640288,-0.092414,6.728777,-4.924471,5.794135,-5.467446,-9.868728,-8.839060,6.677290,-2.087243,-1.675462,3.305829,-2.710149,1.541364,7.860756,-7.560446,1.730739,-0.445424,-3.106104,5.735783,7.744966,2.120603,-5.760594,-9.482397,9.663091,-2.081685,-2.768923,6.181684,-7.463204,-2.269641,-6.935485,5.809795,-1.730870,6.153257,-5.897334,-0.549621,-6.975821,9.441089,-4.911769,-3.994179,2.057020,1.734328,-3.111219,-3.938910,8.668697,3.668513,-0.186797,6.452779,-8.468204,8.502765,3.391128,0.957584,5.250976,-8.152146,-9.102208,2.766504,7.751270,2.421273,0.677095,5.023794,6.225614,9.815470,5.762665,-9.334724,2.525352,-6.907491,0.323410,-3.593424,5.012369,-4.490971,-9.140298,8.474688,-4.280661,5.261228,-5.985692,-8.526481,1.582151,9.884857,2.924163,1.555813,-4.643836,4.382096,3.049506,-3.400261,0.010775,-6.638002,3.320151,9.683097,2.230111,7.764299,0.391629,1.806119,6.077496,9.637838,-6.443112,6.393087,7.429243,-5.576188,9.931455,2.085228,-2.229457,-5.921730,4.383885,1.959003,-7.872171,-6.600801,9.336164,0.503632,8.049264,9.274351,1.039158,-9.608211,6.267377,2.975736,7.470237,0.518522,-4.621616,6.458926,-7.348052,-2.265576,-4.640327,-6.034095,-1.825118,-3.814017,9.650736,1.414429,3.248227,9.431797,8.459688,1.380867,6.358118,-7.589240,-5.122325,9.973785,-8.366287,4.109408,-7.810214,-2.780329,5.957301,-7.680065,-4.242053,3.850313,5.514676,8.826855,0.374254,-6.543233,0.196999,6.404575,-2.857035,-0.325093,-7.330721,6.822544,-5.245594,-6.010393,0.465117,-2.770679,-2.096261,5.215950,-5.493791,-8.330542,7.425905,-4.086746,7.778919,-4.430117,-7.335388,8.087200,-0.269634,4.123648,-2.913141,3.002611,6.453466,-0.863037,3.896623,3.526647,-6.551575,-2.851793,-1.373345,-3.937667,-6.662531,-8.652304,-3.418114,3.106454,-5.316709,9.639143,-7.291622,-7.700514,-7.198795,-0.782191,-3.643413,0.902189,7.354691,-6.515388,-9.103919,-4.607881,3.406972,8.366270,-6.419833,8.352355,7.475254,4.668721,5.295370,0.879164,-5.856152,3.530283,-7.984560,6.719726,-6.281199,3.521435,7.683495,3.417025,-4.493468,-2.045337,-4.837267,-8.368824,-1.223007,3.066475,3.103053,4.596694,-9.579021,7.116888,3.922794,5.587809,-2.574878,-5.306154,-1.514514,4.955127,-9.046101,4.373600,2.564125,-5.130496,7.649608,6.244110,0.963408,5.027899,9.935511,-2.655453,0.665029,8.298073,-3.257254,5.398828,2.649873,-6.456443,-2.607884,-1.350798,7.247142,7.719013,6.792134,3.219841,2.386856,-3.608023,4.679472,6.680322,-6.342643,5.134630,-2.729819,1.694083,8.961604,3.273293,9.328633,1.661862,6.978093,-5.420688,8.022883,5.659615,-3.012125,8.287221,-1.729267,-4.001081,0.300198,4.396393,0.447542], dtype = "float64")#candidate|2840|(1200,)|const|float64
var_2841 = relay.var("var_2841", dtype = "float32", shape = (78,))#candidate|2841|(78,)|var|float32
call_2839 = relay.TupleGetItem(func_2250_call(relay.reshape(const_2840.astype('float64'), [15, 16, 5]), relay.reshape(var_2841.astype('float32'), [78,]), ), 0)
call_2842 = relay.TupleGetItem(func_2254_call(relay.reshape(const_2840.astype('float64'), [15, 16, 5]), relay.reshape(var_2841.astype('float32'), [78,]), ), 0)
func_2651_call = mod.get_global_var('func_2651')
func_2655_call = mutated_mod.get_global_var('func_2655')
var_2849 = relay.var("var_2849", dtype = "uint8", shape = ())#candidate|2849|()|var|uint8
const_2850 = relay.const([10,7,-7,-10,-2,10,4,-4,-7,-6,-9,-4,8,-7,4,4,-10,-6,2,1,8,-5,-3,3,-6,-8,-3,-8,-10,2,1,-1,-7,-7,2,-4,1,5,8,6,8,-9,-6,2,1,1,-9,4,-1,6,-9,6,-2,6,2,4,-5,10,9,7,-7,-4,1,6,-9,5,-5,-9,-3,-6,6,4,-2,-3,10,5,-10,-8,6,-5,6,-4,3,9,8,-3,-5,8,-5,10,-2,-3,-3,5,4,-6,-2,-3,-4,10,-8,-8,2,-2,-8,-2,-9,-5,5,4,2,4,-2,6,1,-8,3,-2,4,1,6,2,-8,10,9,-7,-5,2,7,-3,-7,7,-9,-4,3,-2,-9,-6,3,2,-9,-4,9,-2,-5,-5,6,-10,-1,5,-10,-4,-5,-7,6,2,-8,10,2,4,-6,10,10,-6,-6,6,-2,-6,3,-5,3,-6,2,10,9,1,-2,-7,1,-3,8,3,-10,-7,2,-1,9,-6,3,-5,10,8,-7,4,2,-4,-9,-10,-8,3,9,5,-1,-9,6,9,-1,8,3,5,1,8,10,10,-7,8,-7,5,3,-2,-9,-5,-9,-8,6,10,5,-9,7,3,-10,-1,-5,5,-2,8,-10,-4,7,3,-7,1,2,7,7,3,-10,-6,-3,-2,2,6,5,2,4,-3,10,-3,4,-4,-9,-2,-3,1,-1,-1,-4,-6,-9,-9,6,3,8,10,7,4,-1,2,-5,10,-9,9,-7,10,-5,-8,5,-7,-9,-4,1,10,-2,-7,-7,-3,9,-10,8,2,-3,2,-4,-8,6,-9,9,8,-4,-10,-2,-7,-6,-9,9,8,4,9,-1,-10,10,-3,-1,-4,-5,-5,-7,10,-1,10,10,1,9,3,8,8,-5,9,-1,-8,-7,-3,-5,-10,4,6,9,10,-9,10,8,-3,7,8,5,4,1,6,4,2,-5,2,8,-2,6,-4,7,9,1,4,5,6,7,4,8,-9,-6,9,-2,-3,-4,-3,4,7,-1,-1,-10,4,1,-1,6,3,1,-10,-4,3,9,9,10,-1,8,9,1,7,3,-2,-10,-5,-9,-3,-7,3,4,3,9,-5,8,-4,5,-2,3,-9,10,-1,-8,-4,-3,-5,8,-9,4,3,-7,-2,2,3,9,-8,6,2,6,-1,4,5,3,-10,-9,-10,1,1], dtype = "int16")#candidate|2850|(450,)|const|int16
call_2848 = relay.TupleGetItem(func_2651_call(relay.reshape(var_2849.astype('uint8'), []), relay.reshape(const_2850.astype('int16'), [450,]), ), 10)
call_2851 = relay.TupleGetItem(func_2655_call(relay.reshape(var_2849.astype('uint8'), []), relay.reshape(const_2850.astype('int16'), [450,]), ), 10)
output = relay.Tuple([call_2803,call_2839,const_2840,var_2841,call_2848,var_2849,const_2850,])
output2 = relay.Tuple([call_2804,call_2842,const_2840,var_2841,call_2851,var_2849,const_2850,])
func_2854 = relay.Function([var_2841,var_2849,], output)
mod['func_2854'] = func_2854
mod = relay.transform.InferType()(mod)
mutated_mod['func_2854'] = func_2854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2854_call = mutated_mod.get_global_var('func_2854')
var_2856 = relay.var("var_2856", dtype = "float32", shape = (78,))#candidate|2856|(78,)|var|float32
var_2857 = relay.var("var_2857", dtype = "uint8", shape = ())#candidate|2857|()|var|uint8
call_2855 = func_2854_call(var_2856,var_2857,)
output = call_2855
func_2858 = relay.Function([var_2856,var_2857,], output)
mutated_mod['func_2858'] = func_2858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_2860 = relay.TupleGetItem(func_2799_call(), 0)
call_2861 = relay.TupleGetItem(func_2800_call(), 0)
func_1362_call = mod.get_global_var('func_1362')
func_1368_call = mutated_mod.get_global_var('func_1368')
const_2863 = relay.const([[4],[-3],[4],[-3],[-4],[2],[3],[-7],[4],[-3],[-1],[-1],[8],[-7],[-3],[-5],[4],[-1],[-7],[1],[-9],[7],[8],[-2],[6],[-1],[8],[3],[7],[-6],[-4],[-9],[-1],[9],[5],[9],[-1],[-7],[-10],[1],[-6],[2],[6],[2],[7],[6],[-1],[2],[-5],[9],[-10],[-5],[5],[-10],[-3],[-1],[-3],[5],[-2],[5],[-4],[-3],[-5],[-6],[5],[-2],[4],[-6],[1],[5],[6],[3],[1],[-1],[4],[2],[-4],[-5],[-1],[3],[6],[3],[-5],[10],[4],[10],[-3],[1],[10],[9],[-5],[-3],[8],[-2],[-9],[-7],[10],[-7],[-10],[3],[-4],[5],[-5],[-3],[8],[8],[-3],[-4],[9],[3],[1],[-2],[-1],[-8],[-6],[6],[3],[7],[-10],[2],[2],[-1],[4],[-9],[-1],[10],[-4],[5],[-1],[-8],[-5],[9],[6],[5],[-6],[-3],[-10],[5],[-10],[-7],[-7],[-3],[9],[-6],[-10],[-1],[9],[-2],[-6],[10],[-5],[-2],[7],[-8],[-4],[-6],[-2],[-1],[6],[3],[-2],[-2],[4],[5],[-2],[-4],[7],[-5],[-7],[-1],[-10],[9],[-7],[-2],[8],[2],[10],[8],[-9],[-4],[9],[9],[5],[-2],[7],[-3],[-10],[8],[5],[-4],[-7],[-2],[10],[1],[-4],[-10],[4],[-8],[-5],[3],[-4],[10],[1],[5],[10],[-10],[4],[4],[-5],[-3],[1],[-1],[-5],[5],[-1],[-4],[7],[1],[2],[5],[-3],[-8],[8],[-3],[8],[-1],[1],[5],[-4],[8],[3],[10],[-5],[-9],[9],[8],[-10],[1],[8],[-2],[-1],[-5],[-6],[8],[3],[5],[9],[-5],[8],[-1],[1],[-1],[6],[10],[7],[10],[6],[10],[-8],[-1],[-6],[6],[-2],[10],[-8],[-9],[10],[9],[-3],[2],[2],[7],[9],[-9],[6],[9],[-6],[7],[-7],[-10],[-8],[3],[10],[-6],[2],[4],[-9],[-1],[8],[5],[-8],[6],[-9],[-4],[10],[3],[-4],[5],[-10],[-8],[8],[6],[4],[-4],[-7],[-6],[3],[-1],[-3],[-9],[6],[10],[-10],[-5],[-8],[5],[-8],[3],[-8],[2],[-6],[-10],[-10],[-9],[5],[-7],[-4],[2],[-4],[6],[-1],[-7],[-10],[1],[-7],[-5],[1],[2],[-8],[6],[1],[-4],[-10],[10],[-5],[-5],[-5],[-7],[5],[5],[1],[3],[-7],[5],[5],[7],[-5],[-2],[-9],[-9],[9],[3],[10],[-1],[8],[-5],[5],[-10],[4],[-8],[-7],[7],[-7],[-6],[-3],[1],[1],[-6],[-3],[-6],[-2],[-9],[10],[1],[-7],[2],[-3],[-5],[-8],[-7],[8],[-3],[-3],[1],[-5],[-7],[9],[-5],[-5],[10],[-5],[-7],[1],[-1],[5],[-10],[-7],[3],[3],[7],[1],[6],[-10],[-9],[-1],[-9],[1],[-7],[10],[-9],[-5],[7],[5],[3],[3],[7],[-4],[4],[-6],[-10],[-1],[-3],[7],[-3],[9],[1],[5],[7],[5],[8],[-2],[2],[10],[9],[-10],[-2],[10],[-3],[9],[-3]], dtype = "int16")#candidate|2863|(450, 1)|const|int16
var_2864 = relay.var("var_2864", dtype = "float32", shape = (832,))#candidate|2864|(832,)|var|float32
var_2865 = relay.var("var_2865", dtype = "float32", shape = (2240,))#candidate|2865|(2240,)|var|float32
const_2866 = relay.const([8,1,-1,-3,-6,-10,8,6,1,9,-10,-2,5,-6,-10,6,8,-4,-10,-2,9,-3,-2,-8,2,6,4,-4,1,-7,4,1,-1,-1,-3,9,-6,8,9,2,-3,-5,6,7,-1,2,-8,-7,9,1,-4,-5,-3,10,-1,3,-1,-3,8,-8,-6,4,5,-6,3,8,8,-8,6,-2,2,-3,4,2,9,2,-2,1,10,-4,5,-10,5,3,-8,10,-10,5,-8,7,10,-3,6,10,1,8,-7,-8,-8,6,6,8,-7,-10,-1,-2,-4,3,-1,7,8,8,6,10,1,-10,1,10,10,-5,-5,-1,-4,-1,9,6,5,-3,-4,-3,-8,-9,-10,7,1,2,-8,6,-7,-6,-9,4,-6,5,9,-4,-2,5,4,-3,-3,2,7,-5,7,1,-4,9,1,10,1,-10,-7,-4,-9,5,-1,-5,-4,-1,4,8,8,-7,-9,-2,3,5,6,-2,-6,7,3,-4,-4,8,10,5,-3,-6,1,5,9,-5,-1,10,-3,5,-2,-3,-7,-6,8,2,6,-6,-7,3,10,10,7,9,10,-6,-4,-1,-1,-5,-10,8,6,-3,4,-6,7,8,-10,4,2,2,-10,-6,-2,7,7,-8,-1,5,-8,-4,10,9,-8,8,4,7,-7,-4,-3,2,8,4,-2,7,-1,-5,10,9,-8,1,10,-5,-8,-5,9,10,9,7,2,-1,4,1,1,-3,8,-2,-1,-3,-7,-9,-10,-4,-2,8,6,6,-7,-5,7,-9,3,1,-8,2,-7,-2,1,-3,10,8,3,7,2,-10,1,4,-9,-7,-3,4,9,6,3,-4,3,8,-7,-7,8,-10,5,2,-10,4,-7,5,2,9,-5,8,-6,-5,5,4,9,2,-7,-9,5,-4,2,10,3,1,2,-5,8,-3,-1,-6,-8,-6,3,4,9,-10,-9,6,10,9,7,-2,3,-7,10,-5,-2,-7,-6,-4,-9,7,7,-10,-1,10,-3,4,-8,10,-6,8,8,6,-6,-1,5,5,-1,10,3,3,-2,2,8,8,9,-4,3,10,-10,-6,-9,8,5,-4,-8,6,4,2,2,-7,-7,-7,-3,-10,6,-8,5,4,4,2,-7,-3,-8,2,-4,10,-2,-10,4,7,-5,4,1,-2,8,-8,-4,-5,-6,4,-5,-1,-3,-3,-10,6,5,5,-10,4,3,-4,-5,-1,5,10,10,-9,2,-8,4,8,-6,9,2,-5,-5,3,-7,10,-8,1,2,8,4,6,2,7,-9,-3,10,-5,6,-7,-2,2,-1,-5,5,-7,-1,-6,9,10,-2,8,-10,8,-10,-8,4,-2,5,8,-3,6,9,7,-7,-7,-10,10,-7,6,3,-2,8,-2,1,10,6,-8,-9,-5,1,-5,7,1,-4,-3,-2,6,7,2,9,-2,1,-1,4,-9,8,-6,-9,-8,3,-10,6,-7,-3,1,-1,8,-2,2,-7,-10,5,1,-2,-9,-10,-10,-6,-9,5,10,2,8,8,-1,3,9,9,5,9,-4,4,7,-10,6,6,-1,-5,4,1,8,7,5,5,7,4,5,7,6,8,-3,10,-5,-5,10,-2,-1,4,-7,5,-5,5,-5,-1,10,-2,4,-10,-9,-7,2,-7,-10,-10,2,-1,4,-6,-8,9,8,2,-5,10,9,5,7,-6,-5,-6,-4,3,-2,-9,7,8,-1,-7,5,10,-7,7,7,2,4,8,-4,-7,1,5,-4,-5,-7,9,2,-8,-4,-4,10,4,6,1,-2,-4,-2,5,6,-1,2,7,-9,4,1,6,-6,7,-2,-9,5,-1,4,5,6,5,5,-4,8,-10,8,2,6,-5,6,-5,9,1,10,7,1,-3,-3,-3,-5,-10,8,-6,-1,-5,6,9,-5,-1,8,2,10,-8,-2,-4,1,-9,-5,-7,5,3,-3,-7,5,-5,7,-4,5,-10,2,-6,-7,6,-10,-10,5,4,-8,-8,10,7,3,2,3,6,7,10,9,-8,7,3,3,-1,10,-3,-3,6,4,-5,-2,-4,-3,5,-10,-10,-2,10,4,-6,1,5,-2,9,10,2,-4,-3,1,-10,10,10,5,-5,3,3,1,-7,8,-8,1,2,-4,-2,-2,8,2,-2,-9,-8,-10,-8,9,-5,-3,-7,1,-10,6,-2,4,-8,7,7,-9,-8,-4,-2,-4,-1,-10,-3,-10,7,-5,-4,-6,-7,-4,-9,-7,-4,5,-7,-4,6,-9,-4,2,-6,-10,-5,-3,-9,5,10,5,5,1,-9,-10,-1,-5,-9,8,-1,-6,-5,9,7,-2,-7,2,-6,-4,10,-9,-5,7,1,-9,-4,-1,5,-4,3,9,2,-2,4,5,-3,6,9,2,-9,-4,-6,-3,-4,-3,-3,-7,-4,5,-6,-6,5,7,-5,3,9,-10,-2,-8,-10,-3,3,-7,-10,7,-3,5,4,1,10,-7,3,6,10,2,-4,10,5,-6,-2,-1,5,4,-7,-9,10,3,-3,9,-2,-3,5,6,3,-5,5,1,-1,9,1,-4,-6,-4,-6,2,5,-6,9,2,-4,-8,-4,-8,5,4,7,-8,-5,-2,7,-10,-9,3,-8,1,-2,10,-9,3,-8,-1,3,6,2,-10,3,-1,6,-2,9,-8,-4,8,-9,-7,-6,-9,-6,8,6,6,5,2,1,10,7,10,-6,-5,9,-1,-10,7,-9,5,10,3,-9,1,-10,10,8,-9,10,1,-5,8,5,3,-8,-9,2,-6,-10,-2,7,-8,-4,1,-10,-5,7,2,9,-7,-8,5,-10,-10,1,1,-4,5,7,-3,-8,-3,4,-6,5,-7,-10,2,7,-4,-3,-6,-3,6,7,-8,10,2,9,6,-1,-6,9,-5,-1,5,-4,-3,-4,-7,-10,7,-6,-5,-7,10,4,-1,5,9,2,10,-5,-3,3,1,6,-3,-9,9,9,-3,7,-8,-7,6,1,7,8,6,-3,5,6,-4,-8,10,4,2,7,-2,9,6,-6,7,-5,7,3,-7,-2,4,6,7,9,-1,-1,1,-1,-9,1,10,2,-4,-9,-4,4,9,3,-1,-7,-9,5,8,6,-2,-5,3,-10,-10,7,-10,-3,-4,8,9,10,-4,5,-9,-9,-7,5,-10,6,6,8,-8,-8,7,10,9,-3,2,-5,10,4,-6,9,6,10,9,-1,-8,9,-2,3,-8,-4,-6,-3,-3,-8,-8,7,-2,-7,6,10,-4,9,-10,9,9,-8,4,-3,-8,6,-8,1,1,-1,-5,-10,1,-7,2,-9,-1,5,-8,-4,9,-4,4,-7,3,-1,10,-9,1,-2,-4,-3,7,4,-6,2,8,-2,-1,-7,-6,3,2,-7,-8,7,7,10,-5,9,-1,-7,-9,1,-6,2,-9,-8,-5,-7,1,6,1,3,-10,-7,5,8,-1,-4,7,8,1,8,-10,-2,8,-10,5,3,8,-4,4,-1,-3,3,-10,-8,9,-10,1,-10,1,-8,-7,-2,2,10,-10,-10,-5,-2,4,-10,6,-1,-4,-7,-5,3,-5,7,-5,-3,7,9,-6,8,1,-2,10,7,6,-8,9,1,8,-3,-4,-7,2,4,7,10,2,6,-7,3,-6,-6,-6,-3,6,9,-2,2,4,-4,8,10,7,-1,10,-10,6,-3,5,-9,10,9,-6,-10,7,-1,7,6,-9,10,2,6,-6,-2,-3,-1,9,-8,3,5,-9,8,10,-10,10,6,2,9,1,10,-4,-6,1,10,-2,-5,-3,-7,-6,10,8,7,10,-9,-1,4,8,-8,5,-4,-5,8,-9,-9,-3,-10,-8,3,6,8,1,-1,-3,-9,-9,3,-1,1,5,6,10,-3,4,6,-9,7,8,10,-1,8,-3,3,4,-5,-4,1,6,2,-1,2,-5,-2,9,2,5,9,5,-4,-7,-9,10,7,-5,6,7,8,6,-5,-5,2,-9,6,4,4,-8,2,-7,4,6,-10,9,-7,9,2,8,-2,5,-4,9,-10,-3,7,-9,-1,-2,-2,-8,-9,-10,3,-5,7,-4,-10,-9,3,3,1,10,9,-5,-6,9,-2,-4,-8,-9,-8,-8,-7,9,8,-10,3,2,-4,4,-10,5,3,6,-8,-8,7,7,2,3,-9,2,-5,-6,1,-8,5,4,3,-1,2,-9,7,2,5,1,10,-6,8,-3,1,2,7,4,-6,2,6,7,-1,-5,8,-8,1,-3,-5,-10,10,-10,9,-8,1,-3,5,-2,-10,-3,-3,7,5,3,-8,6,-6,-4,2,-10,-4,-10,2,5,9,10,-9,7,9,-5,4,3,-8,5,-1,-3,-7,-3,-6,-2,-8,-8,3,2,7,7,1,-1,8,-10,-2,-5,-9,9,9,-2,-8,-4,10,-1,5,6,9,-6,-5,6,-1,-8,9,6,1,-5,-2,1,6,7,-1,7,2,7,-10,-5,-5,-9,-10,-4,-5,-3,-9,1,6,7,2,-7,7,-4,-8,6,-3,8,2,-8,3,7,4,7,5,7,-8,-6,8,-2,2,-8,6,10,-9,6,8,2,-1,-3,-3,-6,5,-5,-3,-9,-6,-9,4,10,-8,3,-2,-9,6,-9,-2,-7,8,-10,-1,-3,-6,9,2,1,-8,7,1,-4,7,3,10,-6,4,-7,-3,-3,-3,-8,4,4,-4,-3,-6,-2,-2,-2,-7,-9,4,-7,8,-5,4,5,-3,-1,9,-1,-3,-8,8,-7,10,-7,2,3,-5,1,4,-9,-7,3,6,-3,-7,-6,-2,-1,7,-9,3,10,-2,9,-9,10,-9,-1,9,4,4,-4,-2,-1,2,-9,3,4,2,-9,2,-4,4,-5,-9,2,10,-2,-8,1,-4,-8,-2,4,8,3,-5,-2,-2,6,8,7,-2,10,1,-2,2,5,4,7,3,3,-9,-8,2,4,-10,9,7,3,-1,-4,7,-6,-9,3,3,9,-3,-2,-1,-6,-7,-4,-2,-4,-2,-5,-10,-9,6,-10,-10,-10,5,7,-10,8,7,2,9,-4,4,9,2,2,2,6,10,4,-10,1,5,9,-1,1,7,-10,-5,-5,-9,-5,-7,-4,7,-2,2,-8,7,6,8,-10,5,6,-1,8,-7,2,2,-3,-5,-7,-10,-1,-4,-5,-8,-9,-4,-2,-7,-6,1,-10,-3,3,10,4,-9,-7,4,7,-8,5,-3,-9,-9,-9,-3,7,-4,6,2,-3,7,-4,-1,-4,-9,-3,8,-7,8,-9,-4,7,-9,-1,-4,-2,2,1,10,6,-6,4,-10,-3,6,9,10,-10,-10,-10,5,5,-1,-5,-2,10,8,2,-6,8,8,-4,5,7,-6,10,-10,-1,1,-10,4,9,-4,4,7,-2,9,-3,-3,-2,1,10,-6,2,6,-10,-4,6,1,9,-4,-5,10,-9,-10,2,2,-3,-5,-6,9,-5,7,2,-3,-8,-4,2,-10,-5,-2,4,-10,-2,3,8,-6,-6,4,2,1,-6,4,-8,-9,-7,-1,4,-7,6,6,4,7,-6,-10,-2,-10,-7,-6,-9,8,-5,6,-10,-8,2,2,-8,6,2,4,-8,-2,-7,7,-5,-1,-6,2,9,-2,-5,-9,-3,-9,-2,1,-7,4,-1,-1,8,9,-8,-9,2,-10,-6,-2,-5,-8,-5,-6,9,-6,10,9,1,1,-10,8,2,10,8,-10,4,7,-4,10,2,-6,-5,-2,4,6], dtype = "int32")#candidate|2866|(2145,)|const|int32
call_2862 = relay.TupleGetItem(func_1362_call(relay.reshape(const_2863.astype('int16'), [15, 3, 10]), relay.reshape(var_2864.astype('float32'), [2, 416]), relay.reshape(var_2865.astype('float32'), [2240,]), relay.reshape(const_2866.astype('int32'), [2145,]), ), 9)
call_2867 = relay.TupleGetItem(func_1368_call(relay.reshape(const_2863.astype('int16'), [15, 3, 10]), relay.reshape(var_2864.astype('float32'), [2, 416]), relay.reshape(var_2865.astype('float32'), [2240,]), relay.reshape(const_2866.astype('int32'), [2145,]), ), 9)
bop_2878 = relay.floor_mod(const_2866.astype('float32'), const_2863.astype('float32')) # shape=(450, 2145)
output = relay.Tuple([call_2860,call_2862,var_2864,var_2865,bop_2878,])
output2 = relay.Tuple([call_2861,call_2867,var_2864,var_2865,bop_2878,])
func_2884 = relay.Function([var_2864,var_2865,], output)
mod['func_2884'] = func_2884
mod = relay.transform.InferType()(mod)
var_2885 = relay.var("var_2885", dtype = "float32", shape = (832,))#candidate|2885|(832,)|var|float32
var_2886 = relay.var("var_2886", dtype = "float32", shape = (2240,))#candidate|2886|(2240,)|var|float32
output = func_2884(var_2885,var_2886,)
func_2887 = relay.Function([var_2885,var_2886,], output)
mutated_mod['func_2887'] = func_2887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_2895 = relay.TupleGetItem(func_2799_call(), 0)
call_2896 = relay.TupleGetItem(func_2800_call(), 0)
output = relay.Tuple([call_2895,])
output2 = relay.Tuple([call_2896,])
func_2898 = relay.Function([], output)
mod['func_2898'] = func_2898
mod = relay.transform.InferType()(mod)
mutated_mod['func_2898'] = func_2898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mutated_mod.get_global_var('func_2898')
call_2899 = func_2898_call()
output = call_2899
func_2900 = relay.Function([], output)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_2962 = relay.TupleGetItem(func_2898_call(), 0)
call_2963 = relay.TupleGetItem(func_2900_call(), 0)
output = relay.Tuple([call_2962,])
output2 = relay.Tuple([call_2963,])
func_2966 = relay.Function([], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
output = func_2966()
func_2967 = relay.Function([], output)
mutated_mod['func_2967'] = func_2967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_2999 = relay.TupleGetItem(func_2799_call(), 0)
call_3000 = relay.TupleGetItem(func_2800_call(), 0)
output = relay.Tuple([call_2999,])
output2 = relay.Tuple([call_3000,])
func_3004 = relay.Function([], output)
mod['func_3004'] = func_3004
mod = relay.transform.InferType()(mod)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3005 = func_3004_call()
output = call_3005
func_3006 = relay.Function([], output)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_3058 = relay.TupleGetItem(func_2898_call(), 0)
call_3059 = relay.TupleGetItem(func_2900_call(), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2254_call = mutated_mod.get_global_var('func_2254')
var_3108 = relay.var("var_3108", dtype = "float64", shape = (1200,))#candidate|3108|(1200,)|var|float64
var_3109 = relay.var("var_3109", dtype = "float32", shape = (13, 6))#candidate|3109|(13, 6)|var|float32
call_3107 = relay.TupleGetItem(func_2250_call(relay.reshape(var_3108.astype('float64'), [15, 16, 5]), relay.reshape(var_3109.astype('float32'), [78,]), ), 1)
call_3110 = relay.TupleGetItem(func_2254_call(relay.reshape(var_3108.astype('float64'), [15, 16, 5]), relay.reshape(var_3109.astype('float32'), [78,]), ), 1)
const_3111 = relay.const([-5.515737,-8.116857,-0.708444,8.464962,-0.458193,-2.624090,0.830859,-5.056235,0.978604,-8.123668,-6.329911,1.933792,-8.695362,8.528797,-7.259225,-3.397464,-1.464360,6.159718,3.670335,6.841363,-3.974513,1.617675,-7.721592,5.764985,9.409098,7.831272,-2.556807,-0.453834,-0.837461,-4.664862,-9.701332,-4.428478,2.006093,-6.672002,-7.873637,-0.081152,7.573997,-2.578349,9.276308,9.824260,0.880927,0.111499,-4.184741,-7.270933,8.454960,1.195633,4.938649,-2.623837,3.294987,0.899148,7.806069,-3.490104,-9.473270,-8.135867,-3.817362,-7.150441,-3.862515,9.462861,6.791525,-9.020045,-6.965244,4.097455,2.633224,-7.285141,-5.525558,-7.658671,-1.520122,-8.575007,-1.156436,-9.559204,0.219398,-2.828505,-2.734449,-3.981159,-8.630116,5.859270,-6.603918,-0.737288,-6.018835,1.714376,7.825911,-5.469275,-7.028626,-8.318734,-3.458085,-9.899318,5.010522,7.690267,-0.062376,6.740741,-9.143621,-2.935082,7.332833,-2.703378,3.853550,-0.144922,-1.494094,-9.661988,-2.087325,4.405589,-1.744306,-2.242975,-8.146920,1.320739,2.715027,4.724223,1.948454,-2.582588,3.190684,4.638962,-2.380838,9.991334,-1.742996,-9.649185,-5.354241,8.315374,3.336095,-3.842024,-3.409417,-2.276735,-9.576180,5.580940,4.301606,5.224659,6.574730,-7.943886,-7.714999,-9.021051,3.506734,9.366817,-1.534010,-2.343046,-3.909620,2.196073,8.542052,-5.892600,-3.738964,0.098486,-6.973025,-3.345542,6.589083,7.584263,-1.306505,4.853771,-9.909232,3.745524,5.845145,-7.621250,-1.272397,-4.749677,-4.056097,7.038423,7.921289,-0.322902,3.617448,4.553999,3.556844,4.624342,-8.421328,-8.836134,4.229444,5.222423,4.430513,9.611339,6.834566,0.222617,-9.295965,-2.972795,-9.971502,0.412542,2.164808,-3.525229,-5.289270,-1.233747,-8.879460,1.455978,-5.771882,4.441402,6.708078,2.716223,-0.928767,-9.260384,-2.622508,-5.880621,1.417493,-8.462242,-5.047808,-7.864874,-3.700652,2.602439,5.554551,7.761114,3.680653,3.926153,5.715306,-0.941450,-5.746895,-7.543129,9.008375,5.965369,6.669206,-2.796268,-7.918763,-9.884599,3.123609,-3.039094,-1.482822,2.503158,-8.858364,-0.134069,7.771806,6.623264,7.002645,-7.503602,5.763215,-9.170935,-3.473524,-9.659321,5.599236,8.418290,0.136703,0.625551,2.800007,6.753745,5.056347,6.661285,-1.816438,-1.456825,0.358046,5.563721,-2.647948,0.140432,-0.943582,-2.415829,-6.527992,-7.520437,1.786648,8.077823,-9.190740,-4.855187,7.477449,8.567890,-1.028514,5.475221,-2.339368,-8.193825,-2.870116,7.205512,-5.882938,-0.140569,-9.608112,-1.379290,-8.715155,-1.779570,-8.149516,2.719200,5.358667,-3.529066,-2.807619,9.596224,-8.652654,-8.175207,3.471268,4.913960,6.166835,-2.974444,-6.359532,6.571110,-5.824671,-5.974359,-6.944550,-9.017094,-6.082252,0.824638,0.300087,1.562031,0.333582,-7.083643,-3.857264,-5.226683,-4.313734,5.316765,4.235427,3.665132,-1.596373,-9.303310,4.359298,-6.946098,3.645696,3.917546,-0.945359,-3.905624,-4.407555,-4.023521,-7.657077,-5.554287,8.501527,-3.844042,-9.303771,5.978552,4.450524,9.790778,-6.747273,-2.437038,6.685916,-4.596609,-5.495680,8.358218,-3.887427,2.243688,-7.020222,3.686659,1.323771,-6.730838,4.501779,1.837436,-9.235894,-9.092977,-1.253452,-5.115536,-3.476314,-0.964286,-3.343092,2.353531,3.168421,7.197857,-2.737891,-2.931579,-8.562362,4.388287,-0.451706,-5.359131,3.806371,6.567024,8.212093,4.101172,0.380959,5.191634,-6.979570,-0.499264,9.210763,7.870298,-7.267812,-1.140716,8.994665,-0.060524,-6.502659,-2.600783,1.996431,9.409952,5.892039,-2.046909,-8.584012,-7.812218,-4.766089,2.312848,7.658793,8.248085,-2.316947,-0.918215,3.598215,4.099358,-2.192204,4.765971,1.397297,-5.321941,-6.540625,9.903983,-8.657600,8.095642,-3.934888,7.458531,6.213669,5.558068,-2.256553,9.012813,3.787519,5.674521,-8.754744,9.623756,2.673491,7.171657,6.183133,2.936002,-8.516861,-3.765452,6.191774,-7.174461,4.408952,-8.343785,-0.050479,1.648413,-5.034835,0.687059,-2.163825,-8.568013,-3.295380,0.566021,9.954627,-4.908095,3.802463,-8.904606,-8.403064,9.436893,4.162519,4.148343,-5.619944,3.769388,8.997096,7.297822,3.734259,6.443538,6.172503,6.105041,4.850604,5.416905,3.536736,4.916917,-8.705762,9.266295,-6.460893,6.651117,1.334865,7.968280,6.784841,-7.086594,0.254202,5.878676,-0.040936,9.504233,-1.741717,-5.540473,-2.894829,4.650398,5.512362,-6.028185,7.982812,-3.834859,-0.187229,3.157717,-4.903513,4.680889,8.317886,8.614591,7.116366,-1.916265,3.247768,6.886255,-9.632114,-8.388985,5.049497,-9.409487,6.733760,-4.051324,-6.788578,8.077836,3.187174,-5.059029,9.881894,7.591319,-0.512059,-2.153743,-6.455420,-7.426732,-9.286543,-9.079584,0.332700,-7.931432,8.840963,1.994494,-4.846876,0.860574,5.307789,1.654220,8.915081,5.677046,-6.264371,1.989457,-0.372911,5.749750,-4.560392,-1.529123,-8.712451,-8.250858,1.668171,-4.152080,4.948797,-1.355117,2.466600,2.231964,-3.218666,4.740758,5.848062,1.259008,-6.216377,-6.913264,6.777693,-8.405281,-8.883420,4.699009,-4.532966,9.400231,4.166455,-5.410675,1.670820,5.862168,2.324255,-2.291812,3.258748,-4.741439,9.243653,0.676349,7.601741,-9.155886,-4.819582,-8.099386,4.605393,-8.543796,8.485497,-3.344007,9.286175,-8.557293,-4.205129,6.112217,-0.949392,6.074285,-4.970871,-2.054899,-7.474004,9.375400,2.562074,-8.929005,-1.686356,5.400807,1.739100,-8.809450,-3.791432,7.120557,-9.245730,-1.840940,-8.605904,-3.969047,-7.043455,2.407773,4.517576,-4.096078,-6.258484,-8.715195,3.238587,-9.297891,8.650017,7.798483,6.236521,-5.592592,3.029042,-4.440080,-6.816821,7.007153,-0.558866,8.350321,3.281194,-2.095349,-3.041542,-9.911570,-2.272774,7.387783,-1.792029,3.652748,8.873732,2.626212,8.898192,2.976591,-2.246385,-0.383814,9.065624,-8.683424,9.976956,-3.195920,3.739471,-5.895660,7.425805,1.400190,-9.650703,3.793458,-0.788371,1.997883,-1.050913,2.974229,7.634885,1.359204,-1.892730,3.284414,-3.156290,6.055677,7.876472,-4.820737,6.113399,-7.915814,-5.418277,-4.895272,-6.890103,-8.196031,-6.749626,0.458424,-8.422684,-3.286088,-1.726928,-7.288986,7.021989,7.541585,9.270427,9.470752,2.941409,4.076642,7.108267,5.877729,7.844964,-6.407057,5.652415,1.396424,8.275413,-2.339469,0.978095,-5.507289,1.175833,3.544721,8.388456,9.101181,-7.815656,8.586623,-3.353333,6.698490,-5.789866,1.077637,7.569020,1.064368,-3.152899,2.561589,7.276703,-7.035292,4.388868,0.142104,-4.700916,8.181924,9.182328,-0.009545,0.673996,3.000320,-4.506335,-9.624570,7.594887,-2.105290,1.509636,-6.603401,9.453122,3.328154,-4.470931,-7.121121,-4.499132,-3.709643,-8.725705,8.592741,-2.707578,4.390960,-4.520816,1.642227,-1.289401,8.508281,6.451475,-4.829280,8.492011,3.081308,-3.901591,-7.643385,8.304441,2.197547,-6.928446,-1.299747,5.928178,5.185987,6.006838,-9.434237,-8.518397,8.809031,7.652703,-9.946553,-8.074646,-3.121715,0.592562,8.875518,1.924699,-8.057372,9.727443,4.504395,2.364215,-8.002223,6.233622,-8.786036,4.552399,1.857620,5.020848,5.983520,9.588400,-9.973800,-2.691525,1.772299,-0.677970,7.988729,-0.283172,7.965398,0.785914,-0.205342,-5.035614,-4.104843,7.629310,-4.572629,-7.937771,-3.715911,6.984109,-7.941707,-7.093284,-5.965399,-2.940632,-0.280484,-0.240136,-2.259858,-0.963525,-1.382134,3.030421,-4.365357,-3.492570,2.448190,-6.889884,-9.947713,-1.492068,9.037516,-7.396170,-6.837023,-7.646980,-0.335774,-5.971591,-6.449343,9.108084,6.821983,-4.932322,3.239263,-3.374285,8.436662,-5.915866,-1.805311,-1.819650,4.734859,5.737216,1.527362,8.143926,-8.037310,-6.445161,-3.385292,3.184646,-1.194387,6.336399,-6.967084,-3.835510,-7.810075,1.613716,-5.381923,-8.591154,0.499760,2.183375,5.739574,-4.054427,-0.590376,3.052690,-8.649933,-5.181371,-7.767325,3.177617,6.320355,-1.202136,-3.748405,-5.896403,3.630284,0.752473,1.965254,-3.812479,2.274228,-0.003061,7.556864,-9.675638,0.485507,2.318183,-1.684366,-9.256072,-5.026504,4.647190,7.407696,4.570495,-3.961750,5.645124,8.543498,5.395304,-9.828098,-0.694519,3.730114,2.486762,7.548175,-5.322839,2.933739,4.257362,0.548479,8.410576,2.968731,3.321535,9.141381,2.489005,-4.458402,1.620989,-2.724162,5.626484,-5.983232,-4.254942,8.198458,2.246056,-7.285005,-2.397161,1.739003,-1.963781,3.490619,-3.333130,-8.725012,6.118263,-0.862164,2.309898,8.586609,-7.522124,7.301305,7.720525,3.575161,-2.250167,-5.417265,1.740807,-8.740191,-3.958530,-1.172789,-1.440013,-0.535902,9.784872,-0.018270,7.439603,5.669767,9.188860,5.035213,0.029081,6.528388,-5.606053,3.912322,1.541106,9.557470,4.539256,-4.532922,-4.190374,5.450902,-1.549885,-0.821167,6.246074,3.203324,-4.081610,-8.629987,-6.048494,6.102571,2.058893,-7.424477,-9.101990,-8.216073,6.488427,2.629590,3.231107,-9.423686,-5.384092,8.638883,-5.197537,-6.253683,7.485186,5.574633,-1.159655,-2.703644,2.501471,-3.368783,-3.538150,6.693103,-2.618341,7.206111,1.567991,1.688086,-1.757803,-6.157262,4.238210,-1.020444,9.454927,-3.436147,-0.769761,2.560741,-9.483775,-4.326052,-0.234772,-4.312400,-4.198734,-6.224518,5.863616,-4.094493,-4.693709,6.149760,4.441574,0.976480,0.505922,1.659941,-3.231329,9.526474,-3.059489,-0.662904,0.986302,2.685526,-8.759519,9.587555,3.052503,-8.028231,-2.233455,-4.435025,0.624813,-2.243572,0.711828,-6.985121,-8.574135,-4.096401,1.779344,4.018384,-2.407049,5.473507,-0.114801,-3.436337,-4.321695,-9.008550,-0.042955,-6.199622,-4.627478,-4.607508,-0.126368,6.064052,-7.465921,-7.960486,-2.731221,-1.452620,-5.971384,-4.022608,3.965687,9.566145,8.933990,-9.815647,-6.189888,1.904993,-2.667897,-8.506718,-5.248699,4.231269,-3.640456,6.522887,-3.951452,1.104116,3.100049,8.415471,-9.641367,-6.254121,-0.721993,-4.813598,5.175329,4.233313,2.657942,1.727128,-9.623939,1.509910,-3.110801,4.490111,-5.937284,6.086479,-9.072130,-2.492141,0.456982,-4.290361,-4.870864,-6.528475,-6.929592,8.927091,-1.911165,-4.770040,8.081418,6.461237,-2.037456,-1.078048,0.588311,-9.098688,2.139979,-2.032087,4.737037,-5.484587,7.233030,9.796477,9.144854,-1.082933,6.966463,-5.567420,-5.897839,-9.722553,-6.576231,1.939909,6.615813,-6.379254,7.080744,0.227106,3.250020,-0.123860,9.841212,5.757973,-5.208134,-1.598324,-1.922917,-7.325075,-9.161423,1.426685,-6.110665,-5.847778,-1.876473,-6.341891,1.278920,-5.670577,9.716021,-2.372314,-9.450964,8.048070,8.274549,2.710716,-1.091841,-5.075324,-9.268309,-9.333177,-4.167245,-5.560676,9.001813,-3.629022,3.267268,4.561490,5.885797,6.531710,2.473535,-8.255437,-7.955248,-1.126619,-4.767249,5.555031,-2.178322,7.308562,-2.890744,0.206444,-1.366166,-1.877756,-6.256575,-9.465691,0.877498,-0.453577,4.388873,4.225551,-5.779875,-4.668164,-1.774218,4.103150,9.811252,-7.332253,3.207567,3.349588,4.576878,4.875170,-0.112389,-2.307306,8.298759,-9.979778,1.817312,-9.158635,-6.233148,-0.313121,-5.850336,7.873249,-1.029375,4.279407,-5.679023,8.370182,-5.746479,2.406090,0.797857,8.702892,-1.405806,4.594674,2.090699,5.508912,-5.589449,9.880121,-8.091510,3.621424,-0.284365,-0.643765,0.127702,-0.197522,-9.184891,-1.564619,8.078689,-6.364157,-5.113019,-1.860971,6.301936,8.068481,4.537268,-1.469812,2.811163,0.223095,-3.554241,-3.307507,7.107106,7.776702,2.007875,5.578609,8.252695,-2.486253,7.190312,-7.182132,2.594656,2.525451,-0.136554,-1.423917,5.879697,0.573706,3.053906,2.674455,-8.633615,-2.418560,9.323583,6.296126,4.725277,-3.369921,-4.968126,1.466267,-8.736209,-0.075415,-6.208725,-7.932547,-6.304587,0.018107,-9.050799,8.475767,9.897832,-9.535497,0.203295,-8.926406,5.783156,-6.900783,5.878380,8.535328,-7.346772,-4.479648,-8.054915,-1.583645,-6.084999,-9.395598,-1.728868,4.858597,0.492422,-0.213164,3.532085,5.005781,7.802439,-3.156680,8.110372,-5.388770,-8.820498,-7.628784,-8.435518,8.995511,-0.234837,5.582554,4.723274,5.925862,-9.853850,-3.163370,-2.622206,-4.445076,5.278144,-9.188305,4.300586,-9.712101,3.779213,-7.400365,9.663712,-1.779451], dtype = "float64")#candidate|3111|(1200,)|const|float64
bop_3112 = relay.logical_xor(var_3108.astype('uint8'), relay.reshape(const_3111.astype('uint8'), relay.shape_of(var_3108))) # shape=(1200,)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3117 = relay.TupleGetItem(func_2966_call(), 0)
call_3118 = relay.TupleGetItem(func_2967_call(), 0)
output = relay.Tuple([call_3058,call_3107,var_3109,bop_3112,call_3117,])
output2 = relay.Tuple([call_3059,call_3110,var_3109,bop_3112,call_3118,])
func_3119 = relay.Function([var_3108,var_3109,], output)
mod['func_3119'] = func_3119
mod = relay.transform.InferType()(mod)
mutated_mod['func_3119'] = func_3119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3119_call = mutated_mod.get_global_var('func_3119')
var_3121 = relay.var("var_3121", dtype = "float64", shape = (1200,))#candidate|3121|(1200,)|var|float64
var_3122 = relay.var("var_3122", dtype = "float32", shape = (13, 6))#candidate|3122|(13, 6)|var|float32
call_3120 = func_3119_call(var_3121,var_3122,)
output = call_3120
func_3123 = relay.Function([var_3121,var_3122,], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_3183 = relay.TupleGetItem(func_3004_call(), 0)
call_3184 = relay.TupleGetItem(func_3006_call(), 0)
output = call_3183
output2 = call_3184
func_3190 = relay.Function([], output)
mod['func_3190'] = func_3190
mod = relay.transform.InferType()(mod)
mutated_mod['func_3190'] = func_3190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3191 = func_3190_call()
output = call_3191
func_3192 = relay.Function([], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_3228 = relay.TupleGetItem(func_2799_call(), 0)
call_3229 = relay.TupleGetItem(func_2800_call(), 0)
func_2651_call = mod.get_global_var('func_2651')
func_2655_call = mutated_mod.get_global_var('func_2655')
var_3239 = relay.var("var_3239", dtype = "uint8", shape = ())#candidate|3239|()|var|uint8
const_3240 = relay.const([8,-7,-9,-10,-5,-5,10,-3,8,-1,-8,1,3,-2,-2,-5,4,9,6,-10,-2,10,-8,-10,-4,7,1,-10,5,5,1,-10,-4,10,8,1,-4,-3,5,-9,2,10,5,-2,-2,-8,9,-7,6,-2,-7,6,3,4,-1,-6,-8,-10,6,3,-1,10,10,-2,5,5,-7,5,-10,-8,1,-8,2,-2,-2,-4,-6,4,4,-4,-9,2,10,6,6,5,-9,4,2,8,1,-8,8,4,-7,-10,-7,-2,10,9,3,-1,6,4,3,2,7,2,-10,-7,5,3,2,3,5,-9,-5,-1,-8,-10,8,-7,-2,10,5,10,9,-4,-9,4,-10,-2,-3,-7,-7,-4,-9,-2,9,-2,1,4,5,10,6,10,5,10,-5,1,-4,-9,-5,3,-2,8,-8,5,2,-9,-9,4,-1,4,-3,-7,1,1,4,-1,8,-2,-2,10,-2,4,-8,-7,-5,4,-7,7,5,-5,-2,5,-8,8,2,5,7,-5,-8,-3,-3,-10,-5,10,5,-9,4,6,-1,-1,2,-8,5,-5,6,-5,4,1,2,-1,7,-3,6,-2,-4,1,-10,7,10,8,10,5,9,-5,-7,8,-10,6,10,2,-4,-2,-10,10,8,8,-1,4,-10,1,-7,3,7,3,9,3,-10,8,5,2,5,-3,-4,6,-6,-3,-3,-10,8,-2,-3,-2,2,-3,-7,-2,4,1,-2,3,-4,-3,-3,-9,-8,-7,8,2,-9,-8,-9,-1,8,2,-8,10,-1,9,5,2,1,-4,9,10,2,-4,-2,5,-6,-2,4,-6,-4,-9,-7,2,-2,-8,4,-9,-9,7,-10,1,-3,-2,-4,4,-7,5,-5,1,-5,10,-8,6,-4,7,7,-1,1,-9,-4,-3,7,-3,4,2,5,-9,-1,-8,-9,-10,-5,9,4,2,-1,9,4,-2,7,10,-8,-5,-3,5,-10,-8,-5,4,5,9,3,-7,1,-5,-3,-2,-3,1,2,10,10,10,7,7,1,9,6,-3,5,-7,5,1,-10,6,6,-5,-5,4,-10,3,8,7,8,-1,10,-3,-1,2,7,-5,-5,-1,-7,2,7,1,9,-9,10,2,-2,-2,1,4,4,-3,10,-1,1,6,-1,5,-9,-7,-6,8,5,-1,-5,-4,-4,10,-1,3,-6,-1,-8,-5,1,-5,-10,-7], dtype = "int16")#candidate|3240|(450,)|const|int16
call_3238 = relay.TupleGetItem(func_2651_call(relay.reshape(var_3239.astype('uint8'), []), relay.reshape(const_3240.astype('int16'), [450,]), ), 10)
call_3241 = relay.TupleGetItem(func_2655_call(relay.reshape(var_3239.astype('uint8'), []), relay.reshape(const_3240.astype('int16'), [450,]), ), 10)
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
var_3245 = relay.var("var_3245", dtype = "float32", shape = (2240,))#candidate|3245|(2240,)|var|float32
call_3244 = relay.TupleGetItem(func_903_call(relay.reshape(var_3245.astype('float32'), [10, 16, 14])), 0)
call_3246 = relay.TupleGetItem(func_905_call(relay.reshape(var_3245.astype('float32'), [10, 16, 14])), 0)
bop_3247 = relay.greater(call_3238.astype('bool'), var_3239.astype('bool')) # shape=(450,)
bop_3250 = relay.greater(call_3241.astype('bool'), var_3239.astype('bool')) # shape=(450,)
func_2684_call = mod.get_global_var('func_2684')
func_2688_call = mutated_mod.get_global_var('func_2688')
const_3260 = relay.const([10,-2,9,-1,2,-7,5,3,-6,4,-8,8,5,-4,-9,3,4,-8,-3,-6,-2,5,3,-5,6,2,10,-9,-6,-1,-3,4,10,-2,2,-8,-1,10,-3,-4,6,-3,5,-1,-5,6,5,-9,2,7,-1,8,10,-7,-5,-1,6,9,-8,-2,3,2,6,4,-5,3,8,10,-9,10,-8,5,7,-5,6,-7,-5,-10,2,-10], dtype = "int32")#candidate|3260|(80,)|const|int32
call_3259 = relay.TupleGetItem(func_2684_call(relay.reshape(const_3260.astype('int32'), [10, 2, 4]), relay.reshape(const_3260.astype('int32'), [10, 2, 4]), ), 2)
call_3261 = relay.TupleGetItem(func_2688_call(relay.reshape(const_3260.astype('int32'), [10, 2, 4]), relay.reshape(const_3260.astype('int32'), [10, 2, 4]), ), 2)
output = relay.Tuple([call_3228,const_3240,call_3244,var_3245,bop_3247,call_3259,const_3260,])
output2 = relay.Tuple([call_3229,const_3240,call_3246,var_3245,bop_3250,call_3261,const_3260,])
func_3273 = relay.Function([var_3239,var_3245,], output)
mod['func_3273'] = func_3273
mod = relay.transform.InferType()(mod)
mutated_mod['func_3273'] = func_3273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3273_call = mutated_mod.get_global_var('func_3273')
var_3275 = relay.var("var_3275", dtype = "uint8", shape = ())#candidate|3275|()|var|uint8
var_3276 = relay.var("var_3276", dtype = "float32", shape = (2240,))#candidate|3276|(2240,)|var|float32
call_3274 = func_3273_call(var_3275,var_3276,)
output = call_3274
func_3277 = relay.Function([var_3275,var_3276,], output)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3398 = func_3190_call()
call_3399 = func_3190_call()
uop_3404 = relay.cos(call_3398.astype('float64')) # shape=(6, 8, 10)
uop_3406 = relay.cos(call_3399.astype('float64')) # shape=(6, 8, 10)
func_1819_call = mod.get_global_var('func_1819')
func_1822_call = mutated_mod.get_global_var('func_1822')
var_3411 = relay.var("var_3411", dtype = "bool", shape = (130, 4))#candidate|3411|(130, 4)|var|bool
call_3410 = relay.TupleGetItem(func_1819_call(relay.reshape(var_3411.astype('bool'), [10, 13, 4])), 2)
call_3412 = relay.TupleGetItem(func_1822_call(relay.reshape(var_3411.astype('bool'), [10, 13, 4])), 2)
func_1819_call = mod.get_global_var('func_1819')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_3415 = relay.TupleGetItem(func_1819_call(relay.reshape(var_3411.astype('bool'), [10, 13, 4])), 2)
call_3416 = relay.TupleGetItem(func_1822_call(relay.reshape(var_3411.astype('bool'), [10, 13, 4])), 2)
output = relay.Tuple([uop_3404,call_3410,var_3411,call_3415,])
output2 = relay.Tuple([uop_3406,call_3412,var_3411,call_3416,])
func_3424 = relay.Function([var_3411,], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3425 = relay.var("var_3425", dtype = "bool", shape = (130, 4))#candidate|3425|(130, 4)|var|bool
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3426 = func_3424_call(var_3425)
output = call_3426
func_3427 = relay.Function([var_3425], output)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3441 = relay.var("var_3441", dtype = "float64", shape = (13, 5, 3))#candidate|3441|(13, 5, 3)|var|float64
uop_3442 = relay.sqrt(var_3441.astype('float64')) # shape=(13, 5, 3)
var_3458 = relay.var("var_3458", dtype = "float64", shape = (13, 5, 3))#candidate|3458|(13, 5, 3)|var|float64
bop_3459 = relay.logical_xor(var_3441.astype('uint64'), relay.reshape(var_3458.astype('uint64'), relay.shape_of(var_3441))) # shape=(13, 5, 3)
func_227_call = mod.get_global_var('func_227')
func_230_call = mutated_mod.get_global_var('func_230')
var_3463 = relay.var("var_3463", dtype = "float32", shape = (13, 3))#candidate|3463|(13, 3)|var|float32
call_3462 = func_227_call(relay.reshape(var_3463.astype('float32'), [13, 3, 1]))
call_3464 = func_227_call(relay.reshape(var_3463.astype('float32'), [13, 3, 1]))
output = relay.Tuple([uop_3442,bop_3459,call_3462,var_3463,])
output2 = relay.Tuple([uop_3442,bop_3459,call_3464,var_3463,])
func_3475 = relay.Function([var_3441,var_3458,var_3463,], output)
mod['func_3475'] = func_3475
mod = relay.transform.InferType()(mod)
mutated_mod['func_3475'] = func_3475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3475_call = mutated_mod.get_global_var('func_3475')
var_3477 = relay.var("var_3477", dtype = "float64", shape = (13, 5, 3))#candidate|3477|(13, 5, 3)|var|float64
var_3478 = relay.var("var_3478", dtype = "float64", shape = (13, 5, 3))#candidate|3478|(13, 5, 3)|var|float64
var_3479 = relay.var("var_3479", dtype = "float32", shape = (13, 3))#candidate|3479|(13, 3)|var|float32
call_3476 = func_3475_call(var_3477,var_3478,var_3479,)
output = call_3476
func_3480 = relay.Function([var_3477,var_3478,var_3479,], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3497 = relay.var("var_3497", dtype = "float32", shape = (5, 8, 7))#candidate|3497|(5, 8, 7)|var|float32
uop_3498 = relay.asin(var_3497.astype('float32')) # shape=(5, 8, 7)
uop_3502 = relay.cosh(uop_3498.astype('float64')) # shape=(5, 8, 7)
func_2854_call = mod.get_global_var('func_2854')
func_2858_call = mutated_mod.get_global_var('func_2858')
const_3519 = relay.const([7.108602,8.825788,-0.929873,3.350278,3.171869,0.266813,5.817674,-9.635816,1.083321,-2.807886,-8.412364,-8.344523,-8.651664,2.196558,2.456009,-1.664099,1.551675,-7.379277,1.125902,-8.328837,0.997629,4.823218,2.595628,-8.666318,-8.343944,1.092298,3.785819,-0.975487,-9.299523,2.816389,-7.935352,-5.182653,5.246425,8.023373,-9.935933,5.162171,8.889065,9.258112,3.934602,0.300458,-8.287228,-9.159191,3.948867,8.937301,-0.617331,4.638756,-8.280767,8.862359,-5.583703,-9.034470,-3.224838,5.324621,9.166623,-2.561298,-0.411754,-5.422592,3.064332,-1.685137,-8.629483,-2.982850,-5.221019,0.083038,7.832257,-8.933991,-4.086273,-5.643967,3.254065,-6.062270,-3.738030,6.751354,0.284520,7.827256,-5.761540,7.073234,7.381350,-6.920542,0.063745,-2.905529], dtype = "float32")#candidate|3519|(78,)|const|float32
var_3520 = relay.var("var_3520", dtype = "uint8", shape = ())#candidate|3520|()|var|uint8
call_3518 = relay.TupleGetItem(func_2854_call(relay.reshape(const_3519.astype('float32'), [78,]), relay.reshape(var_3520.astype('uint8'), []), ), 2)
call_3521 = relay.TupleGetItem(func_2858_call(relay.reshape(const_3519.astype('float32'), [78,]), relay.reshape(var_3520.astype('uint8'), []), ), 2)
output = relay.Tuple([uop_3502,call_3518,const_3519,var_3520,])
output2 = relay.Tuple([uop_3502,call_3521,const_3519,var_3520,])
func_3532 = relay.Function([var_3497,var_3520,], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
var_3533 = relay.var("var_3533", dtype = "float32", shape = (5, 8, 7))#candidate|3533|(5, 8, 7)|var|float32
var_3534 = relay.var("var_3534", dtype = "uint8", shape = ())#candidate|3534|()|var|uint8
output = func_3532(var_3533,var_3534,)
func_3535 = relay.Function([var_3533,var_3534,], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3542 = relay.TupleGetItem(func_2966_call(), 0)
call_3543 = relay.TupleGetItem(func_2967_call(), 0)
func_1819_call = mod.get_global_var('func_1819')
func_1822_call = mutated_mod.get_global_var('func_1822')
var_3556 = relay.var("var_3556", dtype = "bool", shape = (5, 104))#candidate|3556|(5, 104)|var|bool
call_3555 = relay.TupleGetItem(func_1819_call(relay.reshape(var_3556.astype('bool'), [10, 13, 4])), 0)
call_3557 = relay.TupleGetItem(func_1822_call(relay.reshape(var_3556.astype('bool'), [10, 13, 4])), 0)
output = relay.Tuple([call_3542,call_3555,var_3556,])
output2 = relay.Tuple([call_3543,call_3557,var_3556,])
func_3558 = relay.Function([var_3556,], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3559 = relay.var("var_3559", dtype = "bool", shape = (5, 104))#candidate|3559|(5, 104)|var|bool
func_3558_call = mutated_mod.get_global_var('func_3558')
call_3560 = func_3558_call(var_3559)
output = call_3560
func_3561 = relay.Function([var_3559], output)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3576 = func_3190_call()
call_3577 = func_3190_call()
output = relay.Tuple([call_3576,])
output2 = relay.Tuple([call_3577,])
func_3592 = relay.Function([], output)
mod['func_3592'] = func_3592
mod = relay.transform.InferType()(mod)
output = func_3592()
func_3593 = relay.Function([], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_3594 = relay.TupleGetItem(func_2799_call(), 0)
call_3595 = relay.TupleGetItem(func_2800_call(), 0)
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
const_3606 = relay.const([9.488854,8.007454,-2.887798,4.306856,1.009141,0.070863,0.237596,-3.955323,2.184990,-1.310785,5.761944,0.800373,1.932854,1.595019,8.495428,-1.501534,-7.530871,1.581458,1.402067,-1.801296,-0.752479,8.964763,-1.981119,5.904275,9.447654,7.906984,6.073699,8.168544,5.507229,-2.455045,4.849907,-7.527606,-4.450451,-7.342218,-8.597647,-1.087444,-6.295829,-8.265081,4.046574,-3.477323,-5.820431,8.258677,-0.898724,-0.792244,9.510313,-1.060051,2.258595,-7.738410,-7.321327,1.639645,-0.784343,-9.046200,6.669356,1.227606,-3.502740,-3.780671,5.758187,0.570716,-8.448485,-2.881692,-1.673275,-6.716371,5.184751,9.497836,8.311043,-8.981785,-5.343736,-4.841117,9.791156,-3.847391,2.877657,-3.499653,-0.017092,2.568428,6.727289,9.103767,-9.549603,8.816630,-5.146629,-8.131760,-5.258999,1.653281,2.570271,-9.739896,2.102764,-2.408228,2.789142,-5.249834,-1.794704,-0.644276,5.088509,2.744115,8.356727,5.087833,2.361591,8.447354,-1.307639,-0.463977,-0.610674,-0.743113,7.310030,7.436007,-4.432010,7.180478,8.750115,-9.361906,4.529083,-7.159302,9.032212,-4.419442,4.977976,-3.264157,6.126001,9.746851,8.094237,2.545498,3.373596,-5.729523,-2.479253,-8.199584,0.862422,-1.534418,9.734527,-2.749617,-5.055865,1.420952,-1.059955,9.203995,1.268181,-4.379360,7.252634,9.772059,-2.019287,-0.661885,8.393670,-3.750262,8.199288,7.398611,4.767972,0.766059,3.703811,-9.933768,-7.524920,7.882384,-1.908232,5.229957,7.838400,-0.083114,-3.568013,1.861695,-8.970226,-6.361857,-3.592999,-2.174098,1.704525,-6.340705,-4.029999,6.171940,-6.584138,-0.216606,-4.960590,-5.131257,7.150726,0.767644,4.536886,1.582179,-1.493941,-1.470930,-9.061865,-0.217459,-1.635437,-8.359149,8.634999,-5.638729,-2.803154,8.338902,-0.144145,-0.103401,-2.965814,2.222395,-9.655543,7.403194,-0.125229,-3.839524,-1.295623,1.366504,9.618015,-0.156172,2.011785,-8.325689,9.690227,-8.729533,-0.145432,4.733935,-8.163726,-3.480259,-9.007407,7.338376,7.439316,7.012120,-9.703324,7.709095,-3.211447,5.750471,-2.622729,2.550921,6.664072,0.248583,-6.569044,-1.076902,1.555422,-3.485848,6.508241,-0.763124,5.868354,-5.332355,-3.340633,7.316981,2.929896,-8.454836,-5.994437,-4.925978,8.387335,0.283404,-6.099879,-8.713755,8.272196,4.595810,-2.731091,3.362774,7.425661,-7.579339,8.865598,-6.748120,-4.094111,-3.115582,-3.365158,-6.524208,-2.135173,-1.088681,0.549367,-6.152453,5.122957,4.217858,-5.726428,4.556954,5.441177,4.155830,0.083296,1.440189,9.127183,-0.370115,-7.368609,0.344795,4.428881,-8.622528,3.957743,8.401243,-5.603691,-1.445821,8.108916,7.570689,1.580460,-9.021685,-2.271834,-2.905244,3.025302,-9.041230,9.066358,2.758527,9.593189,-9.592620,-7.901641,2.628457,-3.016659,2.186803,0.527777,-9.890431,-2.547713,3.290979,7.813076,-9.554271,-9.069597,-1.562344,-7.942494,-9.900350,3.096313,-3.516344,-2.941508,2.345040,-9.831019,9.941038,7.875137,-9.607205,-8.837723,-4.913330,-4.209584,-3.118728,8.103982,-4.305098,-2.817560,0.515647,9.789736,-5.846591,0.573692,6.199595,-2.375592,3.370344,-8.819447,0.450022,7.916727,-5.697833,-7.855093,0.008937,-4.736423,-9.141051,-9.061992,-3.272157,9.522572,-0.362235,-6.308471,-8.427272,-9.619915,-1.025724,-0.159318,7.899009,-3.568031,2.232479,-4.992704,-3.480865,-5.679602,-0.519608,9.437083,4.736387,2.057845,0.073109,3.348927,-6.412626,-1.608243,-7.915825,3.558240,-4.391854,-4.299876,-4.127537,-6.403300,3.254802,6.324651,-7.275716,-8.031467,-9.856344,8.066408,-2.968193,7.608046,-2.257667,3.062718,-5.432912,-5.353113,-4.925447,-4.989087,1.050314,-4.574835,-6.132811,-3.390848,-8.952865,-5.295227,-4.684397,-0.928286,-6.255092,-2.408003,3.548536,6.758577,-3.476363,5.727394,-8.435996,9.049407,-4.429454,-1.264764,-4.054257,6.744903,-5.026852,1.095942,8.277365,6.193670,9.723381,-7.200083,2.481748,8.659760,0.487431,9.699933,-7.678766,-8.612716,-2.372226,2.953941,8.338647,4.933801,-1.189626,5.023962,-1.956407,3.348681,-2.278002,0.739256,-9.296928,0.223832,2.564152,6.536235,8.798073,-0.137090,7.399474,-0.529799,6.968207,-8.227973,-1.134476,1.326938,-4.868473,6.458083,9.929117,-5.784197,8.556705,6.392882,-2.371940,-4.964123,-2.281548,1.205828,5.948926,0.501908,0.796296,-8.877530,1.731640,7.986558,3.863345,-0.141349,2.269716,-2.838456,-8.722045,9.937170,-5.360357,-1.538617,-9.840895,-9.388160,-0.541483,-5.986879,5.026406,9.692032,0.961003,-4.077299,8.312474,5.971500,-1.378737,6.133047,9.877872,5.853887,9.284701,3.677999,-6.607028,5.395015,9.694536,-3.782438,-6.982145,1.123111,-2.168895,-1.335417,-7.075391,-0.515359,2.967887,2.947055,-3.096595,3.437367,-3.596683,-5.148110,-0.708232,7.834543,0.857251,4.278927,-7.394694,3.252422,-1.326568,-2.405760,8.434165,9.581164,7.175905,-2.463068,-1.581605,8.863886,-8.829109,7.784513,0.947971,-2.343240,-4.057646,-1.130494,-3.142015,-2.874983,-1.715945,2.395709,8.604626,-5.307519,6.805390,0.371803,-7.735475,-2.986593,-2.456665,-4.054444,9.268402,-8.139996,-7.814035,-3.293880,3.930268,9.098720,1.258980,0.413670,-2.701235,5.983514,-7.530786,2.700144,9.210385,2.027955,4.888495,9.975171,-4.138906,-9.371710,7.940523,9.706114,9.552289,-1.618192,6.768717,-3.765514,0.990911,8.444914,-6.240821,7.023111,7.227529,6.714115,-8.160950,4.661361,-7.073591,7.195268,-5.020803,-0.951874,8.132294,-9.858547,9.335708,-6.399001,1.072430,-2.785000,-6.693922,5.215423,7.186769,-0.597319,-6.016628,-4.620111,-6.570771,-8.082130,8.278798,-1.183546,4.099958,6.923032,0.255740,7.639873,-8.005128,-6.638320,7.690883,-1.893746,-3.446593,-5.155356,-7.625527,-6.938603,-9.546318,4.460276,1.978748,2.674467,-8.145601,5.651984,-1.896240,-6.015403,1.969463,-3.466037,6.162769,2.960654,8.366829,-0.723319,-2.598864,-2.335606,3.864002,-0.766984,-7.541340,8.595013,1.958132,-6.617925,8.718404,-5.359495,-4.220708,-9.500047,5.829987,4.858150,0.024905,-9.275132,-5.212457,6.839367,-1.081816,9.404704,7.333952,2.717777,8.686412,-1.090527,8.482543,9.065879,3.243998,7.267928,2.134197,-2.762024,-9.783350,6.370002,7.957305,-9.464666,-7.309590,-2.681722,-0.523797,-6.414015,-8.026785,-8.331637,6.360348,0.532226,4.025624,3.945076,4.888956,-3.017822,-0.042571,3.615072,-8.766753,2.886532,0.872027,-1.751841,-9.869518,0.430277,5.411046,-7.241630,-1.747296,-4.929436,-6.025961,-9.702194,3.348993,9.931310,-9.051053,3.733495,-1.252586,-8.894767,4.391778,5.840658,2.096704,-5.757707,-6.003758,-8.296489,-0.754541,8.714543,-1.380947,-3.184186,-8.749004,-7.679969,-8.768323,4.759725,-1.898558,-9.373477,-9.365377,0.434244,3.171949,-4.630541,-1.547525,-0.495796,5.635759,3.798357,2.685880,4.457180,4.040147,0.888064,-5.103471,-2.905114,-4.912977,-8.099750,-7.371720,-8.671486,3.491202,-2.461883,4.907718,-2.866053,-5.486580,6.543831,4.759928,7.970992,-4.898533,0.148160,8.214630,8.078547,-4.063386,-1.783161,-7.680786,-3.934945,6.281026,2.139475,8.457621,-5.889351,-6.838222,-0.631966,-3.916745,-6.224145,-0.298641,6.672408,-5.564543,5.971239,-5.809765,3.008159,-8.317982,-2.998491,-0.466925,8.626420,8.848045,7.437914,2.603851,-7.259575,5.031665,-4.075937,-0.632498,7.663379,-3.321145,8.708393,-8.055114,1.169003,4.770611,6.247170,-4.427654,9.850137,-3.207722,4.680270,-4.101855,3.781899,-9.753682,1.006976,-1.750386,5.290703,7.687138,2.547508,-3.070526,9.031904,2.790983,5.452000,0.048163,1.516621,-8.348410,3.501805,-9.927406,-2.942315,-5.266393,7.035901,9.917540,6.245190,-4.329534,-0.596464,-2.591540,-4.333901,-2.374657,9.614042,-5.792551,2.467715,4.962422,-9.746089,-1.482610,-8.042893,-5.217846,7.506456,6.238985,1.313637,3.777648,-7.318190,0.527807,9.949030,-9.349939,0.380304,-4.163824,0.180067,8.707510,6.505975,0.845940,-0.666279,-7.466091,2.466383,-1.412522,9.803280,-7.797900,6.079951,-2.897047,-1.604350,2.751581,5.723976,-8.151144,2.372556,-4.798250,5.687508,0.228694,-9.043344,8.458849,0.948889,-5.850414,-2.420525,-1.479637,-6.116989,-0.754545,6.680399,-2.310029,3.263402,-8.155939,-0.415672,-5.395969,-1.863551,7.657291,7.540113,-0.210192,-4.967497,3.754640,4.147257,6.676020,-2.833271,-4.313268,5.201406,-9.220022,-6.917580,-1.276241,-7.534709,-7.216470,-6.163343,2.845148,6.223744,-3.994547,-1.476743,-7.239318,3.661649,0.714507,7.921196,7.530524,-4.569013,-4.088685,-5.609117,8.995749,8.183232,3.585696,1.357717,8.487728,-5.682101,-9.264654,6.483187,9.395841,-3.502896,-8.387725,-8.627624,8.262667,1.389476,4.783074,-7.676043,-7.210922,9.126072,1.263589,-4.625283,4.744705,-5.000705,5.291659,-0.681338,-6.341439,3.130297,-1.282953,-3.419747,-5.047616,1.686756,-5.104150,-8.791618,3.527809,-8.012519,-8.104767,6.642448,-3.892240,-1.704310,9.463493,-0.629131,3.939818,-7.277889,1.048721,8.758845,6.485932,-0.018541,-5.535222,-5.891003,-4.606250,-7.010238,-1.886682,-0.246146,0.744080,-5.938406,8.587516,-8.905312,8.630760,-3.485760,-8.273012,-5.528038,5.217397,4.798398,-7.591902,5.787963,-7.321967,7.898354,-7.199968,5.225756,-3.047727,-0.826146,-2.549995,5.410064,-9.554503,2.833414,9.834360,-1.646544,-9.454976,6.818941,4.817802,7.598558,-3.140086,-6.485101,-6.155803,2.218871,-6.658295,-5.629884,-5.752706,-8.930061,7.764757,0.072154,8.591324,6.461299,5.889313,-0.894302,-7.792810,1.030112,6.715486,0.828368,8.146465,-6.611457,-7.194913,5.553342,-2.359866,7.097930,5.950005,1.317512,-0.482819,-4.917498,6.629404,9.440519,-2.019699,-6.369975,-5.261386,6.375842,-7.911698,5.973923,-1.140433,-4.154651,-5.695646,-8.681134,-9.383600,9.092240,1.638917,4.538896,-0.733728,-7.824760,4.203966,-2.533283,-5.230880,3.486021,-8.702168,1.539203,2.864925,2.139867,-6.531155,4.675357,8.802777,3.404054,-5.966746,4.247267,3.648858,1.530928,0.804360,2.572073,5.355337,-3.196421,8.614712,-1.568664,5.220194,5.600818,-3.997748,9.403676,9.115822,-9.740943,4.971246,-0.552340,9.222125,1.786019,-8.272510,-3.545975,5.317773,1.297085,-3.732516,-4.972422,3.098186,7.291025,-5.478674,-8.097934,-1.927844,-7.599370,-0.376953,-9.324652,-7.781043,-8.255681,-6.701569,1.816447,-5.419139,8.547829,-6.309071,-8.201379,8.772649,8.581666,-8.654194,8.404849,-9.720863,-5.807397,-1.176251,-4.249435,-2.891978,8.517359,2.978451,3.004832,8.444817,3.893114,-9.401475,-6.138177,2.381195,5.810217,0.587791,-5.780192,-8.621438,-7.544717,-6.884643,-1.781610,-3.550609,1.806935,-3.445519,7.775509,9.533553,1.806592,-2.680953,7.864594,-1.201747,-8.368417,0.299452,6.047751,5.846725,5.902300,8.671954,4.380695,0.649588,4.954210,5.051010,-4.813418,3.175818,-2.792632,5.107693,-8.912869,-7.265063,1.399237,7.823456,-0.581578,-1.625574,-4.496822,3.607742,9.999357,7.938940,-1.943080,5.004913,4.156616,-7.834575,0.357867,-7.921274,5.696165,-8.515298,-7.086719,-9.551802,-3.306073,-8.358277,-0.952956,-5.278372,0.050526,-5.607989,-0.623569,-8.616034,8.615295,5.897132,-2.561362,-8.814611,0.672074,-4.108997,-5.600991,-6.027261,3.982044,-8.735431,-6.806317,-4.354656,-8.522973,4.635156,-8.068933,-1.091319,-3.099914,-6.494059,0.588708,9.622714,3.420176,4.205558,-7.905783,4.336045,-0.891724,7.162389,-2.043172,-2.725750,-9.586956,-9.013228,7.386752,-5.291413,-2.692696,-8.004676,4.241224,-4.903381,3.808457,2.694423,9.724284,-8.626816,-9.322092,-9.628300,7.937174,0.022216,-1.454909,-0.322730,-4.751104,-2.092064,-5.016864,3.448056,-8.911340,-1.687299,1.070320,0.634295,-2.462786,-4.673064,2.171897,-8.235349,-8.616474,-9.682936,7.213675,-3.424416,-8.373891,-9.166557,-6.955009,-4.268193,-8.335834,-5.777056,-6.088202,-4.844387,9.056563,8.293142,-9.614820,3.116682,1.037850,3.956634,4.147912,8.443885,-5.461177,-5.127021,4.126950,9.350950,2.053833,8.756385,7.151905,6.714038,-7.335347,6.250551,-8.337344,6.989793,7.112811,-1.172121,6.073316,-6.378060,7.571207,-4.709709,1.917053,-0.071611,6.608783,2.441943,-8.215364,-4.258198,1.431980,6.077311,-7.723931,-0.952498,3.558908,-4.385185,-6.662967,6.159365,9.510253,-9.983820,5.584318,-4.059694,-7.413754,-5.062369,-7.819088,8.185808,-8.731287,3.712772,-7.434396,-4.817301,-4.363796,-6.286866,1.894520,-1.010670,4.310479,-1.454315,-2.642958,3.195893,-8.974045,9.168902,-3.991569,-9.393792,2.193544,-8.109564,0.245852,5.971338,9.935825,-8.643449,8.644711,-3.288219,7.880148,-4.613161,4.284497,-5.392857,6.139312,-4.500053,6.631333,-5.108643,-9.386091,-9.166978,-8.925425,4.138091,0.121486,-6.566125,-9.916640,3.412429,4.758836,0.413161,2.341206,-3.362547,6.006508,0.764005,-7.792394,1.689724,-3.153284,-4.761328,-1.170820,-0.525342,-9.892084,-3.440661,1.411204,-8.569882,4.855275,7.161328,-0.920020,2.120671,-7.494507,-5.502183,1.491367,6.144892,5.573391,-4.930384,1.591367,8.844712,4.154158,7.223536,3.167391,-2.321198,6.939459,1.432697,7.199588,-3.720725,7.850146,-7.913870,-9.631696,-7.426014,-8.503363,3.443552,-7.557365,8.716482,9.032214,-9.396926,-3.449824,9.079905,6.084689,0.945350,-0.617726,-4.029622,-7.034678,-2.082821,5.829188,-7.891803,8.108928,1.881334,-8.388892,1.556402,6.587474,-6.089401,-9.192335,-1.043101,9.985311,7.458582,2.533382,0.254572,-5.919156,-2.132892,4.222911,0.497344,8.922777,-3.685257,6.470001,3.655178,1.323135,6.560169,2.998008,2.666232,8.550158,-1.614990,5.442309,9.991664,1.456430,9.097419,-9.257031,3.347286,4.756621,-5.360447,-2.568635,-1.714777,0.398607,2.024014,9.602688,5.757962,0.128642,5.975993,-7.260758,1.831806,-4.963996,-7.711310,2.472581,-2.532470,4.454127,-5.919145,-1.969877,4.875399,-9.553139,9.579975,-7.648244,-1.338721,-0.456593,-2.311722,-5.394481,4.206189,-9.904753,-6.604433,5.449553,-2.050490,9.838419,-4.047431,9.097163,8.780159,6.049021,0.177848,-2.331030,0.132929,0.035344,4.112739,9.660872,3.225974,-7.470002,-6.627876,-9.729443,-1.800638,6.406754,-0.779794,-5.505675,-4.920297,-3.213232,5.672995,2.793180,5.911148,-1.899661,9.082313,9.285763,4.484668,-1.827040,-9.874925,6.819392,-9.684423,5.532313,9.356156,-3.429712,5.323077,-9.271354,0.179583,-9.014963,-3.215904,9.655043,-6.683474,-0.777135,-5.282615,8.158999,-3.952346,0.278770,4.345921,7.289019,8.461220,-1.849210,-2.355493,6.595207,3.463807,-3.136664,6.354484,0.732547,1.275697,1.417929,-1.830531,-3.295627,9.600003,7.453661,-3.988344,-3.530666,-3.675869,2.973328,5.532115,5.568331,-7.580858,-1.343517,1.902486,2.595940,-6.203833,7.072493,-3.637393,2.993312,6.885132,-5.484278,6.606117,3.962268,-8.813512,-9.372612,-5.220480,-6.747048,3.810095,-8.058746,-3.583825,6.864010,-9.991962,6.278503,-6.375027,8.891002,7.504923,-7.572291,-7.027743,-7.838360,-5.656227,-3.424044,-3.984932,7.110594,4.343144,0.825100,7.033397,-7.360342,6.868431,-6.713422,-9.088087,8.810085,-6.554399,-4.653743,-3.597798,4.623648,5.693044,6.470019,-0.021962,-7.819371,-9.015554,6.826951,-6.544573,4.364310,7.501344,-5.315271,8.109839,5.175605,5.461028,-0.303018,-7.540740,-0.168786,2.257564,-2.511361,-4.164460,-6.267091,-4.241467,-7.548015,1.647155,-7.896446,-9.438078,7.740895,-1.873617,5.736841,-9.252501,5.305005,5.530144,8.829520,3.357478,-0.918532,-9.116075,-0.328750,-3.244300,2.234945,7.343469,-3.694530,-7.427367,4.093494,-8.548965,-5.205122,1.453841,7.243643,0.842739,4.634648,-5.558895,-9.094284,-1.425971,3.793913,-6.803045,9.132015,-7.276900,7.812296,6.303182,-2.836052,5.340301,-4.912742,-3.938457,4.392499,-9.601840,7.208298,-7.989398,8.905962,-5.206816,6.323225,-5.226180,-7.111779,-9.263491,0.079391,2.202217,1.266877,6.357525,6.154082,7.675380,5.843168,5.095926,4.068920,9.216345,2.078292,2.869811,-0.167404,3.498839,4.078712,-1.130187,9.240749,-0.600600,-3.217078,-1.726049,3.173936,-3.908312,-1.138518,4.950401,8.989714,-0.809350,7.990113,6.468970,2.011303,-4.522985,-5.955372,-6.389400,-4.048886,-3.895774,-7.729720,-7.815033,-6.702712,-3.064862,0.198931,-9.810650,-3.676442,6.608850,0.651046,0.524833,2.082368,4.199759,-5.121359,3.292434,-2.297383,1.191927,-7.159508,-4.172321,-7.011560,1.149932,7.322062,-0.399730,7.847651,0.472596,-9.709768,3.247080,-2.825150,9.805897,-0.671858,-8.657785,-6.065625,7.643465,6.280196,-6.371767,2.747654,8.617836,5.619948,-6.137385,5.463700,6.994472,1.396542,8.677692,2.252944,-9.603910,9.492886,-4.576473,4.851311,9.969256,-6.239935,-5.308744,7.008228,-9.601055,-3.340172,6.661485,-2.374681,7.314526,-6.864324,3.222538,-2.327883,8.912640,-3.866031,5.263297,-5.258933,5.018276,-9.836351,-4.116360,3.060221,9.622205,2.159914,-1.896539,7.190000,6.620855,-8.257471,-5.755605,7.325200,7.403917,3.420004,3.498545,1.897133,-8.302161,-8.400693,7.161711,4.214288,4.476293,-8.231775,-3.144419,-0.740056,8.521083,7.877879,3.505224,9.831511,-3.852769,6.915657,-6.553310,-3.531906,8.406125,3.105384,2.878215,8.083601,-1.154430,-6.205009,2.833560,-8.730878,1.077035,-1.729032,-5.423788,7.223935,7.145928,-1.528634,4.570040,-9.803922,-3.595708,-0.330876,0.670349,-4.917642,8.335246,-4.299703,7.612144,7.866418,-5.594342,5.503188,0.387637,-9.217644,-6.926285,5.624010,4.678531,-6.224431,1.572712,5.548421,-6.295503,-3.725979,-6.313382,-6.074738,-9.836325,8.989213,-2.394487,0.915487,4.033104,-0.824135,7.927351,-8.301192,4.661417,-8.281869,5.933223,6.779407,3.535943,2.892385,3.116779,-7.538561,5.710160,-6.202275,-9.109241,5.697931,2.729941,2.496294,6.061294,-1.649265,-6.956333,-6.579363,-7.692826,3.819621,4.806240,-2.449571,1.704646,-9.503102,-6.651024,-7.047686,6.679647,-0.230288,4.585085,4.887563,1.205789,8.142999,-9.421996,5.441467,-0.077594,-1.557209,3.015461,-9.718235,6.299313,8.804619,4.190555,9.579288,-9.487688,-4.402452,8.086498,-7.942182,6.051798,3.690638,2.490865,-6.745632,0.860121,-2.409713,2.246480,4.733623,3.743078,-6.155722,-1.887337,6.832808,-5.231712,-5.546483,4.377091,-6.214046,6.545914,-1.556273,2.093849,-2.708527,-7.496664,5.769443,5.152236,-9.415887,-1.511073,6.238678,-0.337323,5.744247,-4.052077,5.836544,-1.577232,-5.329023,2.708109,2.579382,-3.827381,3.826479,-8.012915,-3.788335,-0.304690,-0.053002,-1.866119,1.770441,1.819683,9.349101,7.556109,8.249938,-0.663022,0.417738,6.969211,-5.342995,-7.904616,-5.019737,0.449775,-4.191212,4.829818,-3.007948,-7.938841,6.082085,-1.505327,-2.403529,1.933413,4.928077,8.345693,8.579573,8.791077,-2.157456,4.142404,-9.743378,-9.001135,-5.645453,-6.218403,5.098797,0.915558,-7.663092,8.166477,9.610411,-8.136803,-0.615339,8.572151,-3.394501,-5.209643,-2.346359,8.664311,-8.831751,4.990815,-9.441935,9.483204,-0.938316,-6.523074,-4.954725,1.204943,-4.767619,-8.337929,-9.139319,-4.167857,1.112836,6.325070,-6.070476,-4.317652,-3.696971,-7.063911,5.912075,-6.349405,-1.553518,-2.821074,-9.172564,-1.030829,-9.059756,-1.748937,-3.517313,6.000135,5.053996,1.240954,-7.027704,-5.126695,7.185785,0.271859,-4.141787,-3.893427,-4.164850,9.179125,2.775588,8.722563,-5.766506,-9.355755,-4.058540,-2.804852,-2.004602,2.277765,-9.708698,-9.590681,-5.560138,-1.890405,3.067555,4.335722,-5.057248,2.121119,-2.075733,5.779659,-3.253649,1.006905,5.282264,-4.925748,7.734711,-0.781465,5.758356,1.996351,-4.514886,-2.304802,1.483497,9.084946,-6.046995,1.769313,1.319399,7.820917,-8.522949,-8.784086,4.769278,3.143911,8.890692,-5.458462,-5.264081,-1.627978,5.107091,5.739980,4.245302,-4.359117,1.639863,-5.950549,-4.575892,-7.310067,9.584533,7.524555,0.168086,0.208110,-1.694416,4.365259,-1.755483,-3.288262,-3.698660,-3.394330,-1.029131,5.681646,-6.222828,9.732887,1.029540,5.521707,-2.937151,5.274357,8.568821,-2.690085,-8.603007,0.333705,-3.638264,3.083657,7.234801,-4.542149,-8.086793,4.676259,7.622443,-6.328119,-1.313471,5.728158,-7.535798,-8.316255,-7.776059,5.258741,-0.735669,1.955707,-3.850056,3.589678,-4.381672,-3.964704,7.110541,2.333985,-6.615945,8.700476,5.165327,9.698037,-7.397474,1.059889,2.777777,9.661688,4.204855,-0.688456,8.083482,7.195290,0.479710,7.997734,4.262199,9.945134,-5.968355,-9.182345,-6.912502,8.866464,4.992424,9.222859,6.520067,-8.246700,7.681865,0.061787,-4.269403,-2.577568,-4.832807,-2.506516,-9.628818,0.173489,3.548557,-4.498069,6.379758,-3.232446,-1.119527,2.123528,-5.700220,6.396430,-7.084143,7.844029,8.657303,-9.343335,2.496154,-5.199510,6.959594,-6.609978,6.955197,-6.038292,-3.612418,-7.676865,-4.106982,-6.437365,9.813034,-3.953219,-0.823893,5.460557,1.326278,6.906500,-9.075223,-2.108954,3.827608,-1.305053,8.128784,-6.104379,4.141876,-7.353249,-7.560954,1.990740,-6.913022,-7.278114,9.561716,0.305510,7.099880,3.916916,-3.803255,6.206876,-9.298324,-5.710953,-4.786510,9.183092,3.310695,5.214990,-4.954013,-8.683385,-7.426466,-2.098221,-1.092143,-4.265973,-2.281690,3.283670,2.215168,0.180852,3.072828,9.649313,-2.467900,3.087127,3.598439,5.982910,0.829775,-9.613677,-2.166623,1.754073,-7.400331,2.314216,8.487488,5.641705,7.643548,-4.657338,5.607148,0.062195,-1.951878,2.706047,5.274390,-4.680727,-2.124458,6.227125,5.930570,4.661511,-1.675335,-9.672921,-1.473709,5.446671,-6.478744,-7.925193,2.938857,2.170192,-1.433790,7.306877,-0.648519,1.733014,3.482175,2.895284,5.769021,-5.187078,9.917685,-9.216738,4.473392,-3.055672,0.655374,5.223759,-1.709863,3.464595,4.870013,-4.846564,-5.376916,5.928603,-7.507639,-7.944402,5.975263,-6.071718,1.820221,-6.464589,-9.886072,3.503454,0.800822,-8.458646,6.409916,0.929902,4.959766,-5.059968,7.252595,2.389980,3.286976,8.003614,-5.477676,3.829974,-2.369079,-7.847654,-6.356218,4.658437,-5.692839,0.100767,8.936351,3.701616,0.672885,-6.112348,1.364429,-6.440701,2.036448,4.205823,6.605563,3.353262,5.618105,-4.870945,5.027844,5.537293,-2.357165,-0.429096,6.506730,-7.056821,3.309169,8.696627,-4.201112,1.513549,-1.698762,7.197363,-8.522991,5.631731,6.432136,6.827354,5.582525,-1.647952,-5.962168,2.863691,-2.640133,-2.997773,-2.674798,-7.592748,8.199895,-9.231926,3.534059,-6.286809,5.529752,6.548349,9.473865,0.775862,3.083714,-6.256425,-8.235238,-3.484363,7.672721,9.606805,-6.128984,-3.513810,6.928474,8.322974,1.408032,-9.605719,-7.327223,5.350728,2.981308,-5.188313,-8.430156,-0.989386,6.184080,-8.089774,7.991421,-9.569205,3.958599,7.768669,-4.640025,2.237776,-5.624489,-7.628800,9.513351,5.247184], dtype = "float32")#candidate|3606|(2240,)|const|float32
call_3605 = relay.TupleGetItem(func_903_call(relay.reshape(const_3606.astype('float32'), [10, 16, 14])), 0)
call_3607 = relay.TupleGetItem(func_905_call(relay.reshape(const_3606.astype('float32'), [10, 16, 14])), 0)
bop_3608 = relay.maximum(const_3606.astype('uint64'), relay.reshape(call_3605.astype('uint64'), relay.shape_of(const_3606))) # shape=(2240,)
bop_3611 = relay.maximum(const_3606.astype('uint64'), relay.reshape(call_3607.astype('uint64'), relay.shape_of(const_3606))) # shape=(2240,)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_3612 = relay.TupleGetItem(func_2799_call(), 0)
call_3613 = relay.TupleGetItem(func_2800_call(), 0)
uop_3614 = relay.sinh(bop_3608.astype('float32')) # shape=(2240,)
uop_3616 = relay.sinh(bop_3611.astype('float32')) # shape=(2240,)
output = relay.Tuple([call_3594,call_3612,uop_3614,])
output2 = relay.Tuple([call_3595,call_3613,uop_3616,])
func_3632 = relay.Function([], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
mutated_mod['func_3632'] = func_3632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mutated_mod.get_global_var('func_3632')
call_3633 = func_3632_call()
output = call_3633
func_3634 = relay.Function([], output)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3682 = relay.TupleGetItem(func_2966_call(), 0)
call_3683 = relay.TupleGetItem(func_2967_call(), 0)
output = relay.Tuple([call_3682,])
output2 = relay.Tuple([call_3683,])
func_3690 = relay.Function([], output)
mod['func_3690'] = func_3690
mod = relay.transform.InferType()(mod)
output = func_3690()
func_3691 = relay.Function([], output)
mutated_mod['func_3691'] = func_3691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3758 = func_3190_call()
call_3759 = func_3190_call()
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
const_3774 = relay.const([8.054349,8.363827,9.735304,-0.668690,7.779741,6.631362,-0.976025,-3.938394,9.750497,-7.721811,-1.505414,9.981603,7.164837,-9.086195,8.626402,9.810716,2.325697,-8.328015,1.390788,-3.580021,-4.489935,3.859676,5.391284,-3.111193,3.982586,7.502922,5.797379,-7.645357,0.205391,1.753567,-5.350702,0.163419,9.372937,-6.218591,3.383193,0.820679,6.144830,-3.558118,2.222734,5.742510,1.986159,-6.796174,9.106960,6.446581,-0.880237,8.518009,-6.186493,-2.916038,-0.018264,-5.892139,-9.761128,0.606013,-8.001242,-5.523795,-1.709162,5.160222,-6.016720,-8.502175,-4.138959,0.714355,-8.275126,1.032274,2.252047,6.985151,9.859266,3.740113,6.099980,7.431252,5.256596,3.746371,0.513057,7.329938,0.518751,9.506044,-4.841297,-8.422998,3.441563,7.169887,5.364931,-1.889842,-1.010182,-2.672657,-5.536849,8.981772,2.246749,7.490123,7.605984,8.839580,-7.904678,-7.627750,9.644990,9.486856,1.639051,4.419101,0.647938,4.054804,-4.376134,-3.248747,7.163751,-6.418094,-3.180848,4.386059,-8.176989,-1.866585,0.563478,2.654109,3.515497,7.465348,2.737375,-9.113434,-4.911680,-3.958206,1.225535,9.459856,3.098698,-3.486170,4.671696,6.050646,-8.926371,-3.571734,0.617033,-1.246851,-3.806694,8.783438,-0.895329,7.946898,3.745452,7.723208,-5.476832,3.959111,-2.566292,4.429602,8.019987,-6.341973,2.044143,3.083123,-5.661094,1.443409,1.700097,4.478334,-7.534943,-4.390544,-3.963626,5.203595,-8.200347,-1.109583,-7.954432,-2.394357,0.624316,6.372364,0.129836,8.301872,-6.457369,-0.565272,0.408361,0.430586,-1.072756,7.552467,-7.684795,6.876261,1.669819,3.677025,-9.574063,4.230074,-2.997015,-3.715129,6.154390,-7.051614,-2.757490,3.309927,-8.317201,-7.176443,-8.891801,7.925516,-4.243022,1.466134,8.049706,7.340866,-5.004910,0.302035,6.738809,-0.102171,0.159450,-7.319193,3.881117,1.510564,-5.648143,2.727676,4.732435,8.100577,7.695108,7.219347,-6.593661,-6.856721,4.998021,5.411876,0.681639,9.819590,-3.842768,5.555573,9.832338,6.072209,-8.708768,-7.254749,-2.500153,3.972255,-8.092526,-9.432143,2.891001,7.680608,-5.951972,6.734365,-3.248105,-9.111320,-1.412640,-9.880475,-8.340502,5.029618,-2.503404,-0.475299,-5.642329,6.216701,-4.256974,0.727138,-9.364456,-7.441559,5.228260,3.216682,-0.922081,3.765680,7.514802,-5.179902,7.361937,-5.626189,4.997255,-6.716912,-9.106788,-7.489725,9.205606,-0.988764,-3.417734,-1.565116,-9.519667,0.223367,9.001548,5.267868,-1.375557,-3.709317,0.818439,-0.745475,5.558588,-9.482860,-3.173632,-7.706495,-4.507206,6.628927,4.079404,7.471947,1.974367,-2.772435,0.050121,0.579619,9.507254,5.043071,-8.716857,3.016768,9.639014,2.916932,-0.853615,8.649983,-0.712991,2.010652,6.028627,2.951093,8.423648,1.365778,5.859767,8.670388,8.879259,-3.879765,-8.757470,5.232938,0.465983,2.659735,9.364896,0.962204,2.917293,1.510522,1.137553,-6.828866,9.237014,4.467493,-3.162892,8.259890,1.323411,-4.374236,-3.095163,3.243103,-2.191089,5.539450,-5.758870,-2.351644,-3.078281,-3.247069,-1.609327,-9.021427,-4.348454,3.351437,-2.509650,-1.363084,-0.822469,3.468167,0.226200,-0.871692,2.592880,8.649024,-4.797217,-4.941036,7.283806,-6.862676,1.309136,2.786813,-3.115614,-4.367628,-2.717855,0.598104,8.036158,3.371342,4.574812,4.560532,3.757225,-4.341178,-3.894168,-4.142903,8.736201,0.749811,-4.170960,9.439729,2.257884,1.167622,-3.180758,-5.484376,-2.207386,-5.254963,-0.632490,-6.385107,-8.142833,2.110884,7.050598,9.742798,5.118089,1.096995,7.733692,-8.603362,5.345793,-9.401407,-6.467105,3.026859,-7.100477,3.700647,5.090824,2.999985,-3.775129,-4.940288,-2.523817,2.889069,2.219084,4.610926,6.011948,5.925923,-2.572892,-3.606615,1.706704,1.457518,-5.931882,-1.541995,-4.688604,2.796280,-5.888999,3.627512,8.557156,-9.167479,6.022074,-0.837470,-5.723590,3.305626,3.943502,6.558467,-8.056901,2.488045,8.795295,-5.966410,9.235903,2.519703,-3.111963,-1.336373,0.452233,-7.950098,2.581900,7.598733,-5.621253,-7.001616,-7.750309,-4.001865,-5.391094,8.561830,7.637684,0.731447,-4.556822,7.511294,4.942374,-8.668449,-3.109738,-9.542061,6.750625,4.490502,-6.780953,-8.976794,-3.051574,7.600599,-0.613320,-7.816679,1.063267,-9.495780,-5.613624,-4.746749,3.596755,-0.970243,3.479692,5.765839,-8.314712,-0.812616,-4.223453,-4.965201,-6.870468,8.833746,-0.635307,-1.888290,-9.812933,5.666969,-1.788181,-8.493391,7.018149,-7.781564,3.937484,2.228140,-9.924398,4.861895,-2.240519,8.649813,9.352845,6.252942,8.912732,2.311052,-7.410201,-8.400838,-3.487458,5.361528,-3.487376,-3.848535,2.374262,2.936056,-0.438355,0.821451,-3.105027,0.163530,3.723894,-3.251747,-1.909171,-6.573324,-0.804936,-7.536090,-9.763152,-1.584187,0.558644,-9.584313,5.925658,-9.658071,-3.072017,-4.118481,6.922804,0.031599,7.207285,3.532069,9.542763,-9.804468,-9.169209,6.899206,-1.476727,4.413528,-1.075298,3.266802,-6.406544,2.264096,1.479900,6.931849,7.457414,8.470997,-8.162515,3.325177,6.406668,-2.834671,-6.413487,-9.692294,5.934549,-7.354799,0.822308,8.965224,0.721524,4.866456,2.079800,9.452520,5.193725,6.822451,6.160646,0.010641,-7.187233,1.870557,5.648337,-5.484766,3.387104,9.936157,-5.082823,-1.369901,8.920087,-4.520429,7.269308,-4.262934,-4.656931,-7.204364,-5.509544,-5.756921,9.906724,9.019412,9.750050,-1.159239,-0.472903,-5.019914,-2.968314,-5.208371,-5.742516,-7.754948,1.590614,-4.248219,-5.064534,0.701811,-6.270843,-7.502655,8.579185,6.878130,9.553979,-9.359062,0.576403,-0.543297,7.290358,3.428790,3.175315,2.911251,-9.288816,-1.326385,3.412966,9.174173,-8.967113,0.707569,7.279891,-3.628582,-6.803318,-5.097819,0.506789,-4.419497,-1.015173,-8.727451,6.616127,-7.000090,3.566078,7.260542,-9.145379,8.115363,-7.472229,6.593699,8.645915,-3.662052,-7.819422,2.385213,8.068553,-3.894803,0.918290,2.847849,6.108910,1.307736,-5.908592,6.610089,9.863948,5.720977,9.659093,-3.722631,9.980259,3.418817,0.883196,6.896020,-1.231431,-7.557539,7.081540,-3.150394,0.578934,4.630243,-8.002021,4.745098,4.814918,9.547866,5.971612,7.368979,-1.569779,-3.125893,1.137948,-8.185181,2.682712,-2.224815,-7.879589,1.826152,-5.161353,-1.077510,2.996633,-0.642365,-8.852548,-3.226801,3.526430,-6.292863,-8.174364,-0.990053,3.123772,5.918561,5.235322,5.950663,-9.883742,-4.848764,1.672420,-7.470471,-2.332398,-6.260350,-2.809887,-2.671742,-2.643437,-2.201977,1.290292,0.735486,5.117651,7.387362,-0.309653,1.255068,-0.655668,7.935604,-5.755790,-0.591757,-5.162631,0.742097,9.478389,0.867535,2.749181,-5.851801,-8.317329,2.743792,-4.704797,-3.716435,3.948944,-9.092756,0.571099,8.974741,0.058634,-2.396749,-8.105790,-1.157627,7.418320,-8.291337,6.863382,8.534687,-5.053976,-7.342310,-8.195241,6.530801,-1.092970,1.244596,0.434793,0.950877,-6.474597,-2.152853,7.973097,4.376357,-9.919415,9.824669,-0.199545,7.142363,1.524624,-4.910206,8.984167,2.510924,5.175743,7.236875,-7.758417,7.931665,9.934654,4.673848,-0.034327,9.241147,-2.766325,1.870883,-0.454275,7.160896,-3.854684,2.412816,7.555136,6.740944,4.757746,7.071390,6.245838,-2.188435,3.129255,4.951818,-0.813864,-7.523205,-5.624825,-5.659421,8.129231,-4.757544,3.803526,9.888003,7.840400,5.588563,5.919878,-2.270518,5.707576,4.743188,-9.522361,-4.521305,-1.234105,-0.747423,-9.864898,1.396908,-7.004769,9.663296,8.349504,0.163099,6.383686,7.188404,9.189434,3.300085,-0.791236,3.809275,-1.686304,-6.815369,7.934198,5.935052,7.492543,1.674301,-1.058568,4.501378,7.035688,-8.417555,5.874883,5.800873,1.365798,4.605613,-5.333272,9.948801,-5.475306,3.658585,-5.410549,-9.874990,7.775328,0.968342,-0.025192,8.509791,9.450460,0.566430,6.630393,-8.566912,8.223188,-7.765082,-7.606453,-3.848008,1.847200,-4.184436,-7.465694,4.785767,-9.967266,-1.837902,4.523508,-2.457969,3.499704,0.252039,7.539861,-8.953670,1.647885,-0.519193,-5.386881,7.772224,-2.736872,1.242405,-9.558859,-6.983523,7.760465,2.453596,-7.470415,-3.713602,6.214986,-3.080334,8.291867,-7.303501,1.949889,-3.971463,3.401763,-3.377961,-6.083971,7.853336,-7.802180,1.410559,-5.530365,1.841089,1.568223,-9.963759,5.461702,2.684093,0.221056,-9.575059,-5.083790,-0.113215,-4.075904,2.456393,-4.741704,7.498625,-7.236708,1.344565], dtype = "float32")#candidate|3774|(832,)|const|float32
call_3773 = relay.TupleGetItem(func_639_call(relay.reshape(const_3774.astype('float32'), [8, 8, 13]), relay.reshape(const_3774.astype('float32'), [8, 8, 13]), relay.reshape(const_3774.astype('float64'), [8, 8, 13]), ), 2)
call_3775 = relay.TupleGetItem(func_643_call(relay.reshape(const_3774.astype('float32'), [8, 8, 13]), relay.reshape(const_3774.astype('float32'), [8, 8, 13]), relay.reshape(const_3774.astype('float64'), [8, 8, 13]), ), 2)
var_3786 = relay.var("var_3786", dtype = "int32", shape = (288,))#candidate|3786|(288,)|var|int32
bop_3787 = relay.minimum(call_3773.astype('float64'), relay.reshape(var_3786.astype('float64'), relay.shape_of(call_3773))) # shape=(288,)
bop_3790 = relay.minimum(call_3775.astype('float64'), relay.reshape(var_3786.astype('float64'), relay.shape_of(call_3775))) # shape=(288,)
var_3814 = relay.var("var_3814", dtype = "float32", shape = (832,))#candidate|3814|(832,)|var|float32
bop_3815 = relay.bitwise_or(const_3774.astype('uint64'), relay.reshape(var_3814.astype('uint64'), relay.shape_of(const_3774))) # shape=(832,)
func_1819_call = mod.get_global_var('func_1819')
func_1822_call = mutated_mod.get_global_var('func_1822')
var_3830 = relay.var("var_3830", dtype = "bool", shape = (520,))#candidate|3830|(520,)|var|bool
call_3829 = relay.TupleGetItem(func_1819_call(relay.reshape(var_3830.astype('bool'), [10, 13, 4])), 0)
call_3831 = relay.TupleGetItem(func_1822_call(relay.reshape(var_3830.astype('bool'), [10, 13, 4])), 0)
func_3558_call = mod.get_global_var('func_3558')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_3869 = relay.TupleGetItem(func_3558_call(relay.reshape(var_3830.astype('bool'), [5, 104])), 2)
call_3870 = relay.TupleGetItem(func_3561_call(relay.reshape(var_3830.astype('bool'), [5, 104])), 2)
output = relay.Tuple([call_3758,bop_3787,bop_3815,call_3829,var_3830,call_3869,])
output2 = relay.Tuple([call_3759,bop_3790,bop_3815,call_3831,var_3830,call_3870,])
func_3874 = relay.Function([var_3786,var_3814,var_3830,], output)
mod['func_3874'] = func_3874
mod = relay.transform.InferType()(mod)
var_3875 = relay.var("var_3875", dtype = "int32", shape = (288,))#candidate|3875|(288,)|var|int32
var_3876 = relay.var("var_3876", dtype = "float32", shape = (832,))#candidate|3876|(832,)|var|float32
var_3877 = relay.var("var_3877", dtype = "bool", shape = (520,))#candidate|3877|(520,)|var|bool
output = func_3874(var_3875,var_3876,var_3877,)
func_3878 = relay.Function([var_3875,var_3876,var_3877,], output)
mutated_mod['func_3878'] = func_3878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3913 = relay.TupleGetItem(func_2966_call(), 0)
call_3914 = relay.TupleGetItem(func_2967_call(), 0)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
var_3933 = relay.var("var_3933", dtype = "float32", shape = (78,))#candidate|3933|(78,)|var|float32
call_3932 = func_1646_call(relay.reshape(var_3933.astype('float32'), [2, 3, 13]))
call_3934 = func_1646_call(relay.reshape(var_3933.astype('float32'), [2, 3, 13]))
func_2884_call = mod.get_global_var('func_2884')
func_2887_call = mutated_mod.get_global_var('func_2887')
const_3947 = relay.const([-2.652939,-5.344027,-1.565830,4.512370,-0.409869,8.955865,-6.639386,-7.665879,-0.953443,-6.476724,1.694792,-5.340178,6.889438,1.471960,-6.386738,-6.469778,5.348377,-6.042004,7.327781,-6.863157,1.217381,6.310857,-0.479311,-3.321947,7.452857,5.296145,-1.276519,7.011416,9.569565,-1.331821,-2.444396,-8.380784,-6.240579,-6.027368,-8.810596,7.381316,-4.085564,-6.572326,8.762568,-0.146875,4.126141,4.087421,4.096590,-2.345376,2.672561,1.060182,3.042499,8.904992,-3.947277,0.008194,9.481574,3.552385,9.101940,-5.983602,-1.510804,8.817892,-3.795764,2.070219,1.113733,4.047195,9.023768,9.064191,-4.712241,-5.397428,-8.919508,-1.948742,-5.538590,2.299565,5.195325,-9.278911,-1.738052,7.219718,-9.313833,4.908943,-1.765304,-1.883147,3.286484,-7.597032,9.404382,-9.255846,-7.916767,7.214603,-2.005779,-4.883369,-0.514134,2.905748,6.950697,-8.800286,-3.120754,3.818479,-2.933446,-0.008652,3.297797,0.191369,6.891927,-4.091175,-8.735890,-4.431364,8.591795,-3.188327,-3.661614,-0.463425,2.994742,6.171566,-4.031912,-4.876208,4.013584,-3.091453,-8.992237,3.455069,-1.030093,0.786026,9.553981,5.415758,5.767970,-1.339502,-7.995527,4.440353,7.839116,9.581792,5.767015,-8.249321,-0.424047,-9.829312,8.792490,-1.902150,1.939859,-0.817102,9.284290,4.297356,-5.992986,-4.698835,3.606124,-1.112475,9.822590,-6.869611,6.860789,4.437306,-8.475725,-0.943936,2.607016,1.308448,5.502326,9.154822,8.363602,8.740834,-1.454242,-2.484664,3.958714,1.482068,-5.652179,6.268420,-2.564230,7.285198,-0.001912,-6.820720,-2.525371,0.692407,-7.225451,6.524101,5.161894,0.163778,-5.993558,5.745571,-0.105071,-8.262621,5.363065,-7.592776,-4.893767,-1.855541,-2.400673,-3.862324,-2.890583,-0.206038,-6.560665,-7.405908,-3.492741,-8.947156,-1.534629,-7.676075,-4.736175,0.153355,-4.946228,3.660270,-8.190893,-1.730370,8.594208,5.800999,-1.938914,-6.562234,6.725594,-4.968318,-5.792924,1.486903,1.718276,9.198007,-4.977046,8.416223,-8.968097,-9.491050,-4.005541,5.308627,6.753453,6.501208,-2.660339,8.236530,-5.500599,6.033998,-2.040090,3.855892,-3.355122,0.423793,-3.540660,-2.766522,6.675131,0.308526,8.604121,3.812438,0.546564,-0.690106,-6.776466,-3.373943,0.829805,8.390874,-0.426799,0.659232,8.263702,7.620539,4.898970,4.790441,-5.032972,-8.514117,2.097690,7.468141,-6.573901,7.264829,9.758258,-1.833362,7.276234,-4.114643,-3.892053,4.501160,-7.616010,8.381253,-7.636131,-1.339596,3.018514,-5.544495,8.163951,-5.202380,6.389087,-9.155618,4.912043,5.840253,8.057156,-4.742194,-2.655603,8.454848,-8.617002,-3.453531,1.665868,-1.488345,-8.608213,-1.076033,-5.419759,6.427906,-8.770479,-6.988051,-4.560727,-8.324288,6.437119,-1.917773,-5.034093,-9.452074,-7.124020,8.895928,1.305366,4.495660,-2.464749,6.180266,-7.804672,-9.655552,3.648585,-6.203143,0.825276,7.369487,4.810541,-5.151249,3.064636,-7.713583,6.961382,-5.219835,4.751554,-4.587018,0.135284,-9.879001,0.919668,-8.674636,4.636638,-0.942957,2.382951,2.868353,8.625338,4.877593,-0.199446,6.840582,2.892047,8.736381,6.218956,3.640311,6.478201,-8.923977,-7.559256,1.528390,0.756331,-6.744481,8.335130,4.111808,2.116194,-3.098253,-2.450065,-6.313278,3.992001,5.445013,1.079866,9.798578,-4.420527,4.203733,-9.191326,1.060167,8.174987,-0.711524,5.451377,9.889364,-2.047762,9.132019,0.675813,8.618689,1.088550,5.321776,0.650051,4.888813,-6.601962,-4.324180,-4.828643,-9.820732,-7.941324,-9.952186,-8.951046,-4.134348,0.308182,-5.995204,6.564921,3.688310,-2.616849,-6.217203,4.669388,1.227631,-5.302375,-3.095409,7.772592,-9.072049,-3.096113,-6.870006,6.060762,1.408943,-6.220217,0.291058,4.109878,-5.257247,-2.700406,9.018946,-8.521217,8.628922,4.924536,5.924955,3.928340,-6.762052,3.660695,-2.988973,5.868357,7.293237,0.764593,-1.265805,-2.887873,-2.021314,7.762300,-2.528704,1.676790,-9.047222,-4.854229,7.820421,-5.652472,0.710848,-9.968574,-4.799451,3.899044,0.157684,-3.273529,-0.026481,-6.155451,4.675547,-9.360417,-8.184693,-4.786851,-5.190425,-1.269545,-2.888609,8.418792,-7.945633,2.047038,-5.663624,7.531733,-4.084742,7.578148,-5.077754,7.415755,1.002485,9.650694,1.181216,-6.592561,-7.256088,-9.938358,9.892649,-3.535289,9.447525,-0.515391,5.575407,-8.849466,-8.744929,-7.583684,2.014870,-8.221343,0.862532,-7.000317,7.254800,1.893920,-7.891735,-3.896561,4.221271,8.357784,1.746898,-7.634915,7.595830,-7.048642,-7.097561,-1.017611,-6.905438,-8.126955,2.003958,3.169003,-6.316078,-0.576046,-7.349067,-1.342601,-8.581983,-0.849016,-0.505537,-2.096840,6.061095,2.199021,7.938990,-6.404316,-4.968376,7.312608,9.075600,0.300666,5.039879,-1.504463,-2.125895,-4.275495,0.871910,-3.341802,9.249545,0.095168,0.557084,5.359899,7.358142,4.692484,-1.356365,7.970249,7.374431,9.918645,-1.159641,-7.562418,0.122016,8.358976,1.202082,-7.068149,-0.714848,-2.208926,-8.817594,-3.484100,9.748411,7.110059,4.855974,5.067253,9.220251,4.446634,9.452004,1.858882,-4.646836,2.069230,-9.377633,5.982703,1.624489,4.422527,0.282128,0.457292,2.773131,-9.771134,1.172148,9.125295,5.343466,8.950502,-7.934555,0.320511,8.589752,-6.119560,-1.777838,3.649094,2.458104,9.930774,-6.560613,1.053237,6.036080,-3.859685,-7.697867,-2.034242,1.788855,-5.806683,-1.125056,-6.862340,-4.450940,9.108611,-3.244102,-9.529737,2.719236,-8.873931,2.571114,5.377284,-7.987668,3.372036,6.505885,-3.548298,0.085209,-5.349104,-4.615749,-8.449861,-1.209811,5.750634,-0.664979,-9.018758,4.171142,4.956982,1.757294,3.189960,9.006002,-3.319214,-2.793671,5.250566,7.029981,2.811150,-3.400259,-9.492610,-5.088239,-3.092472,6.614151,-5.423547,3.718501,2.189489,1.238921,-8.656261,-9.608839,2.999515,5.874649,-3.454601,2.483604,-3.262125,9.576627,-7.096302,-7.443849,-0.474233,1.311293,-8.524488,4.965263,9.240893,8.927601,2.383635,-5.313562,-4.761489,1.876303,-0.907751,5.295480,-5.405884,5.720159,-7.225206,3.292348,-6.929167,2.094839,-3.104522,-2.087900,2.945317,5.186347,1.008894,-2.238908,-7.347447,4.891458,-1.436847,0.025773,3.826610,0.084686,9.299199,3.491843,3.890174,-4.525169,6.952787,-1.914996,-2.133228,6.130662,1.285925,-0.597434,2.603227,5.150783,-7.169455,-4.392638,4.565606,8.944735,1.871667,-2.031499,8.133835,-4.736228,-4.993301,-7.129417,-9.476805,-9.343771,4.161384,4.368241,-2.619031,-6.558925,-2.811365,3.992422,-4.997426,-5.067283,4.444821,-7.803174,2.503939,0.557160,3.117865,0.076099,9.908502,-7.397277,-7.402318,5.817626,-7.854063,1.143722,-7.670411,-8.997042,9.377597,-1.298737,-8.079182,7.785894,1.240859,1.946006,-9.796634,8.384508,-7.952972,-4.989912,0.352220,-2.596229,5.062788,-8.886425,-6.986145,-0.161981,0.388970,-3.864848,-0.967294,-6.700310,-2.401512,-9.076965,-5.385055,-6.981466,3.225283,4.918487,-2.256960,-8.301155,9.691256,2.639546,-9.718202,4.076988,9.876435,8.361585,5.798339,1.820076,2.467781,4.346873,6.318317,-0.082070,-5.655739,-4.038572,0.234204,8.162728,7.199292,-1.781999,-8.012925,-4.811380,7.796316,6.098800,3.093858,-7.136181,6.308093,-6.587362,6.240693,5.663134,-5.982426,-3.543919,9.638741,-6.016068,1.123631,-1.573803,-7.673749,6.146902,-7.787200,-5.481653,2.686862,-2.066603,-2.160347,-3.683484,7.161281,-3.527333,6.519543,-1.478482,-2.780263,6.198373,6.249338,2.050741,-6.728691,-2.166949,-8.287255,-4.072967,4.421605,-4.436146,5.928169,-5.539852,-3.745957,-8.915244,5.341723,-2.907930,3.457203,2.196176,7.695045,-3.596546,2.488579,-2.848576,-6.768504,-2.236667,3.347078,7.877050,6.923291,-5.652362,-6.531890,2.539923,7.031541,1.989819,0.573671,5.802656,-7.264401,4.747559,-0.111730,9.434212,-3.841110,2.018715,-6.887206,1.456637,-6.842358,1.719617,-9.846344,-2.439953,8.267937,4.822053,4.411534,1.051540,-5.821981,5.370813,7.251315,0.092006,-4.742720,2.513376,-1.654645,-8.895045,-4.357004,8.874776,-4.831627,-1.085628,-3.947493,5.027464,6.149828,6.742998,9.861337,-9.032720,9.078215,-1.952204,-9.820105,-2.921401,-7.447487,9.384547,-5.131505,-1.353171,3.584568,-1.284180,-1.604627,8.985857,8.352347,6.551120,0.516090,2.337145,-1.293959,0.324540,3.341403,0.232521,-1.341341,0.023765,6.456775,-5.977745,-0.429331,-8.716189,-7.989178,-1.847894,-5.637559,-0.665148,-8.054212,-2.037823], dtype = "float32")#candidate|3947|(832,)|const|float32
const_3948 = relay.const([1.584511,4.083060,-3.716209,7.542819,-4.980298,-9.890427,-1.428255,8.308787,-7.189309,-1.153218,6.365551,-9.379763,-8.336517,-0.214220,-7.330529,1.929574,-4.026961,-6.391669,3.289802,7.008730,1.637449,-5.234545,-2.066516,-4.714082,-0.170444,-9.592953,4.314681,2.843068,8.661757,7.058149,0.620157,-9.084826,9.403306,-0.897627,-4.290352,-3.786785,8.462446,4.058363,-1.080777,-9.828450,1.024154,0.820877,-0.553287,-2.073547,-6.397115,6.457324,-5.826984,-3.511707,-7.166266,-2.878276,-1.073242,-9.428494,-4.105547,0.035441,6.153958,2.719404,-8.393808,1.459277,7.781424,8.312168,-5.487675,2.069752,-7.938577,-9.437542,9.639354,6.841409,-8.882149,8.962758,8.738867,0.043930,6.702454,0.472894,6.007096,-4.565723,5.911028,3.332775,-9.315921,-5.869564,-0.739850,-9.999966,-3.061256,8.637676,5.691642,6.106188,5.098964,-1.666654,7.918052,5.173671,-2.815114,9.659068,5.868767,7.932410,6.558573,-0.313359,7.385802,2.030835,-3.326135,-2.785035,-8.404923,-7.335569,-4.791610,-2.650908,2.625587,4.091722,4.927997,3.121467,2.265463,-3.746542,-0.972936,-6.225849,5.616746,8.129161,-4.938842,-8.962169,9.827965,-8.046163,5.463612,0.115615,-0.928245,-5.265914,2.194686,-0.409114,8.248466,-8.772192,8.620517,9.727701,-3.380981,-9.347415,-0.994320,3.264329,-5.676396,5.428999,-5.710781,-0.697976,3.388971,-3.593406,-4.909870,4.398978,-1.237870,6.637379,-9.314929,-9.177732,-6.923816,3.521301,4.433334,-8.847756,9.878672,1.063984,9.491295,-1.158273,7.005382,4.792575,-9.673438,4.748265,-9.376321,-6.238305,7.797601,-4.328016,-1.829541,-4.826669,-4.785973,8.774193,-7.303733,-2.660373,-3.814642,5.838537,6.195885,9.063177,6.839043,-8.000216,7.210665,6.022818,-8.420530,-7.699653,0.552264,-9.992426,-0.077540,3.947226,4.309323,-3.796377,4.347821,1.305866,-2.074327,-4.451338,6.934107,-1.296203,9.145199,7.311828,6.301358,-7.908456,-1.035919,-0.612244,-8.584320,7.791151,2.411574,9.061335,9.081712,-4.833544,4.267244,-0.961353,7.664953,-3.966992,-3.360661,-0.800017,6.440717,-2.967558,-9.806295,-0.163141,4.878491,-0.016603,1.476407,8.220133,-8.695291,7.659488,-9.885004,-0.485927,-8.694558,-8.399813,-7.305216,-7.543142,-0.297269,5.637884,4.740064,2.361257,3.324180,-9.960773,-0.654138,-5.089387,4.368125,-8.381015,0.904329,5.930178,5.044120,-4.557744,7.554278,-2.178392,4.897901,-2.589269,0.201406,1.271412,6.693715,-3.147557,3.000059,-6.267561,-8.384975,-4.613349,7.473624,1.227507,-2.191140,-9.216238,-9.626140,6.041885,-4.111372,-9.155974,0.099070,-7.619603,8.867972,-0.815949,9.838565,7.436516,-8.468965,8.125928,-8.633195,-3.452269,-6.719080,-9.616645,9.798262,8.227256,6.207758,-8.351445,6.579401,1.698008,1.311927,-6.817355,-9.017374,-2.145875,0.205585,-8.448106,-7.423500,-0.031778,7.694241,8.363767,-9.586834,-8.745976,-0.048523,8.040543,3.021580,2.785199,-1.789688,-0.155916,5.843019,0.660108,-7.175564,-9.449692,2.645165,-8.599886,0.108985,4.256316,-3.481081,2.647336,-0.773866,-2.505071,7.591643,-6.780186,5.823557,-0.080330,1.205188,-2.121436,3.143134,-4.856173,7.376778,2.607841,-4.185951,5.063557,-1.047808,-5.397482,5.475026,9.458026,-6.207202,-4.323391,-7.595252,-0.325936,2.572520,6.096160,-9.966511,8.812206,-6.649817,-0.266860,3.593679,1.283741,3.108830,3.970583,1.656006,0.295952,-6.411540,4.911005,4.866289,7.582892,-2.028227,0.436560,-4.908777,6.074071,-4.032744,-9.390792,7.256199,7.885306,6.213148,2.287028,3.181643,-4.182634,-1.662481,-0.789387,7.592884,-8.243798,6.147144,-5.990197,-0.050667,-7.571597,-0.054250,9.855528,5.269208,-8.856405,1.114520,1.331172,-8.606158,-2.180940,1.471246,-8.964642,-9.223171,6.648106,9.698153,-0.367645,8.458489,-5.681674,0.727358,5.219429,-8.865063,7.248517,8.540072,8.437348,-4.121907,-7.656077,-8.592229,-1.256022,-5.960630,-3.424321,-4.089900,9.917599,-3.842935,4.515165,8.089289,-1.506186,-6.299522,6.089607,-2.650299,5.012687,1.805654,-8.855690,9.567712,-2.972750,-3.130615,7.857738,1.384645,-4.931383,-6.769676,6.516126,-9.929908,3.360709,7.342090,-0.864455,7.409399,-9.905233,-9.433794,3.155106,-7.930702,5.673482,-3.969037,0.841974,5.156181,6.595474,3.839473,-4.475887,-7.984748,-1.224245,-9.184990,2.989916,-0.877444,-0.718618,6.482199,-6.191071,-0.658055,-3.839886,-9.762828,-8.505895,-0.750153,3.660433,6.537718,0.954144,-9.689008,3.609052,8.379562,-3.462596,7.393948,-6.233896,-1.581891,-9.628490,-5.941671,-2.752764,-2.961363,-8.998168,-3.650835,-7.340818,8.555833,-1.534504,0.565253,1.969693,-6.763043,-3.469270,-5.505759,-6.159368,-8.955400,4.321726,-3.443109,1.259434,9.638068,3.817546,-5.661782,7.872577,4.459782,1.603001,3.722927,2.735030,-6.818177,5.592751,-6.055991,-5.203719,-1.429661,4.559637,5.292771,0.695157,5.213929,-3.563499,-4.497857,2.093218,8.150582,-9.634055,7.029904,2.876800,-6.381052,1.149745,-9.169568,7.876689,6.627205,0.375103,7.703987,2.001384,5.857113,-2.996041,0.267387,-4.859523,-8.484236,-9.313931,-0.171490,-3.583373,-5.544479,-7.492805,1.950840,-3.759500,-7.302125,8.005557,-1.241082,-5.425629,-1.569765,-0.403906,1.274569,5.379912,7.478752,2.985932,5.089181,-5.287846,2.589914,-9.590423,-5.164857,-5.053800,8.746686,9.569201,-8.997141,1.371920,-6.041258,6.629653,-4.170301,-3.809455,-4.911240,-4.754443,9.709622,4.374636,8.656670,4.585424,-8.702718,-4.288625,4.577824,-0.217007,-1.862618,-3.320438,5.433679,-6.266318,-0.173926,1.122793,-8.516691,-8.156320,9.453130,6.795764,-8.540820,-8.906250,-2.350854,-7.865152,-8.915958,6.033349,-8.090176,-1.943376,1.194597,-0.662914,5.163774,-8.020573,2.022366,8.391786,9.230028,2.752575,9.823307,-7.356656,-6.474165,8.272137,3.434697,5.146533,-2.579514,7.743130,-1.495213,-2.477095,-3.816048,-2.831829,6.360701,-3.303663,-9.951238,-8.718588,6.307327,3.094533,5.937360,9.322215,4.707140,6.484772,-3.081399,-9.195068,-4.677956,-9.762091,2.787666,-9.722023,-4.122895,3.347437,-0.697742,-4.415515,8.303126,1.831074,-4.940004,0.922578,-6.155938,9.479461,-7.427692,7.744196,-2.335745,1.098854,-5.154069,6.729937,-1.132096,3.662911,-1.159627,-2.797651,3.318605,9.311461,-6.904108,-1.931032,6.458346,0.055353,5.994264,-4.096133,-9.672171,7.702131,6.816286,5.747100,-2.633331,-3.545693,-7.164029,-6.666164,-4.038190,9.916161,-1.679169,3.598058,-3.861231,6.386591,-3.871050,6.741662,9.601720,5.031574,4.741556,-4.614907,-9.639525,2.632842,-6.449972,-3.626924,8.627659,0.725380,8.162647,3.833177,-7.348922,8.229154,-4.530667,8.900602,-0.502168,-6.435401,-7.216482,1.066027,7.437897,8.318006,-1.983169,-4.557723,-0.267661,1.219688,2.337249,3.729823,-9.717662,-7.223833,0.368566,-6.091367,-0.535059,-6.709209,-1.471199,0.811779,-7.213668,0.322469,8.897598,-2.384425,2.815067,1.349127,-3.905981,-4.395268,-5.132619,7.446892,7.456181,6.575445,-3.522457,-1.756278,4.819080,-4.042313,-7.679626,-9.151849,4.830563,6.231679,-0.101126,3.855856,3.449228,8.890767,-4.147017,-5.710167,8.721094,-1.205424,6.932267,-9.225718,-7.931295,-7.734601,-1.206882,-6.348463,1.955787,-1.327058,0.583325,-7.633262,-9.774221,-3.161290,-5.422210,-8.132548,-1.417323,6.509890,8.287998,-9.765723,-5.607101,-9.225508,2.830078,-6.284050,4.704032,-3.015010,0.045510,2.371795,8.508072,-7.919558,-3.024657,0.736481,7.652881,-9.466927,-9.611769,5.074960,5.983973,6.701455,-9.703095,5.373872,-4.167733,-5.091036,-3.572158,2.015907,8.377896,7.450517,-3.045885,-5.454060,1.263515,-6.420010,5.324863,-1.935426,-8.680532,4.071857,-5.895545,-7.683284,2.822082,-2.010861,-0.456693,4.589807,6.516159,-5.186351,2.204941,-3.370827,5.234897,-8.489719,-9.434825,-8.344378,-1.497833,2.909025,-5.369446,0.104212,4.308366,-7.277869,-5.773423,0.295946,-8.998446,2.014699,0.530656,0.438358,1.546310,7.495747,-9.395712,-5.238144,-0.177347,1.367774,6.793334,-8.117018,-4.585702,-6.632414,-9.113864,2.263088,0.128717,-9.599163,-7.785295,-3.635066,1.698422,9.336107,5.012831,-4.485450,1.106639,-8.062061,-8.824538,9.829456,6.183871,5.403688,-9.729983,7.553982,-1.345445,-2.267717,0.647386,-3.730440,-5.564157,-9.083903,2.978483,9.864065,3.455004,1.354218,-1.030519,-8.016909,-2.794361,4.875166,-4.304548,8.965327,-2.260178,3.306843,-5.640513,-6.423259,1.839466,-5.635506,3.452418,-8.562641,8.925897,0.109738,-7.523220,-7.684126,8.813416,1.076647,-9.299921,-5.198679,-5.739161,-7.978226,8.093155,-4.194096,8.538904,8.993774,-8.566068,6.508236,9.703500,-5.432217,7.177683,9.257544,-8.983286,-6.338069,4.718700,-1.307627,2.582202,-7.432838,2.920293,1.931707,9.106244,-7.855649,-6.602176,6.971699,-9.902732,-7.192879,-3.749791,-5.178497,-6.882771,2.312712,-3.361777,-2.280682,-6.043668,-1.217227,5.741648,0.753487,4.107398,-2.451489,2.282818,6.075926,0.503846,9.461741,9.641734,6.317136,3.179270,6.771948,-8.017296,2.144594,-0.470652,-0.099207,6.688100,-6.703339,9.104586,3.281048,6.240868,-9.798148,-7.317885,-3.797487,-9.905221,5.013464,9.737847,2.217718,-8.774194,-5.581753,-8.898511,-8.368064,-6.473306,-7.431690,-7.255025,3.025865,7.351131,-3.190747,7.840708,0.420920,-1.591506,9.150647,-6.110548,8.700790,5.583707,7.238198,6.872930,-0.578953,0.840711,8.765614,-0.419361,3.632440,5.995918,7.426123,-2.806744,-0.931502,1.372991,-8.458897,-5.795523,5.698417,-7.369263,7.866458,-9.899942,2.524055,4.752197,1.463198,7.772303,2.862242,8.254905,-8.633549,7.491294,-7.986111,-2.715331,-4.721923,4.704205,7.127857,3.687342,6.442536,-3.154652,8.462301,5.136270,0.404799,5.989669,5.105047,7.176153,-9.807658,-7.091228,0.181610,-8.703776,3.264462,7.860577,0.545413,-8.676906,9.054708,9.686158,-4.285400,2.701542,-3.458055,-3.058889,3.642738,7.252462,-6.966228,7.026088,-0.590639,-7.674570,1.991018,-4.419657,-7.142910,3.777133,7.593763,-2.437652,0.518697,9.657202,-4.288957,-6.615240,4.936236,9.110770,8.656978,-8.055487,-1.947439,-1.926437,-9.503481,-6.189561,6.087035,-0.254081,0.353058,-2.368415,0.092207,-7.932399,1.574780,6.754709,-8.748665,-2.852540,3.464796,6.422900,3.534614,1.460662,2.844608,-9.051336,2.071137,6.919041,0.412148,-4.957053,-8.416418,-5.914700,7.304549,-3.380173,7.479668,0.873482,8.850556,-9.166175,-8.938434,0.103693,-1.712688,-8.681735,-8.365168,-4.873346,5.761781,-7.960867,3.671264,8.951276,8.259886,-3.096677,8.980346,0.917505,-3.579911,2.208147,-9.910103,-6.927850,4.265707,-9.224973,5.365569,7.626505,9.180998,-6.266792,9.099645,1.652516,6.090683,9.497292,-9.987580,-0.720115,-7.344639,8.444909,-9.720936,2.853989,3.490211,4.408187,-2.645637,7.215646,8.469298,-9.737692,-1.604019,9.293226,9.908399,-0.596255,8.344317,6.375894,-3.242920,-8.275299,-0.184668,-0.706733,-1.271137,-0.273809,8.182253,-2.859455,7.881868,5.162719,9.398397,-3.325336,0.748616,-7.589883,8.831339,-6.693953,-2.321646,-3.664175,6.367219,-3.319875,-0.716062,-0.647470,8.485593,-6.443909,-7.671104,-7.117282,-6.790943,-2.149429,3.877189,1.854905,-2.427744,-0.378187,-0.717849,-8.614212,-0.623488,6.430678,3.864346,-2.714564,6.637296,-8.369846,-5.379015,1.632826,9.196881,-0.779866,-2.760194,0.941246,8.554216,7.013549,-3.051721,0.901871,2.377220,3.126453,5.674907,8.952952,3.969559,-9.596931,-1.860006,-8.943917,1.469959,-9.091345,-1.619586,8.468945,4.823628,-8.565238,-0.717200,-7.540604,-5.437551,-5.241058,7.974486,-8.756109,6.732874,-4.684892,-5.012261,3.943254,6.907722,9.915254,1.405747,-3.053262,-9.840555,-5.732908,-9.542129,-1.169299,0.681603,-5.346308,-4.034019,5.887927,6.559680,0.404339,-9.396444,-1.702279,-9.822386,-9.759290,-9.906225,-1.477152,4.115646,9.493984,-1.918854,-3.557342,-0.035150,-6.746351,-6.805016,9.237440,-3.796319,1.633535,5.693161,-4.244577,-0.882042,-6.175377,0.002187,7.226435,9.240926,4.424560,-5.436974,4.464554,-9.287953,6.145823,4.627509,1.067438,0.328135,2.041441,-7.610029,-8.047259,-2.757393,3.554730,0.189514,-5.872553,9.869887,-2.553456,6.193933,-6.443017,-1.977465,-0.773750,-9.549559,1.325461,4.296146,6.486262,-1.681688,-4.762796,-9.364779,2.869925,-8.657931,-3.010622,8.282911,9.461337,1.555987,-8.856146,4.020363,7.158498,-8.688183,5.172840,1.169366,6.760752,-8.992539,-8.708059,2.003034,-8.148693,9.688981,0.463608,-9.454692,-6.141159,2.294887,1.292475,5.618999,-1.156512,3.164182,0.410948,-2.378387,-9.510711,-7.711356,2.006425,-1.933405,0.025585,1.781267,-5.867360,3.660653,0.764137,-5.919675,4.746063,9.510042,2.734113,5.132710,-9.234488,-3.179138,-8.083284,2.319883,-2.635328,-0.297606,-7.515074,6.630227,5.122494,0.444185,1.476787,5.373522,7.713548,-7.673730,3.793906,-3.165444,-0.530182,-5.063709,6.665857,-6.440946,-4.371083,-2.008665,-2.039076,9.387068,-8.876790,-6.273564,-8.045808,7.942921,5.494644,2.622865,1.191305,-7.331265,-3.784741,2.036977,-1.806709,6.138113,-6.043135,6.307638,5.319127,-9.832713,4.836437,8.233255,-4.697871,-9.940767,7.754903,-6.993809,2.615222,-4.773777,0.752951,1.221162,0.246648,-5.363307,-1.344385,0.464258,9.155811,-7.783244,-6.565337,-3.136068,-8.157260,-9.857845,-6.832537,-9.356144,0.649935,4.352265,-6.345565,9.463447,-3.268373,3.829999,6.201941,-7.566516,-6.026930,-3.375336,1.143993,8.575974,5.129277,8.754048,-5.186274,3.937814,-4.872434,3.049559,6.073032,-0.118746,-8.785867,1.465317,-5.401236,-0.069140,-6.075642,-6.185787,-0.888959,9.695810,2.768044,9.643125,-1.109391,-5.320862,-1.142946,-0.403354,-8.629166,1.822210,-2.154633,-8.794822,-4.562796,-9.872199,1.950252,-3.734355,-4.218723,6.483421,-4.377135,-1.813121,1.331110,5.519458,-3.777371,-9.568129,9.012964,4.598982,-1.662054,-1.329733,9.506345,4.307533,2.073319,-4.850410,8.531412,-0.203045,-1.504634,-0.854123,0.964008,2.739928,5.974743,-6.717026,4.040688,1.365709,1.826248,1.403379,-5.485984,-2.225128,-5.016066,6.931685,-7.579776,-8.593064,-1.499852,0.066882,-1.688765,1.888328,-4.205990,-2.607463,-6.326612,2.550019,-0.112018,-9.506924,1.202593,-9.415642,1.169501,1.186927,6.053925,-8.225797,-6.783167,6.366863,1.718414,2.927737,-4.986468,6.380691,9.229909,2.892513,4.053418,-9.979343,-1.110014,1.584633,-1.477386,5.041184,-4.458480,-7.981080,1.679364,7.197312,-4.074497,-2.694108,4.052917,2.426728,-1.880131,-4.048834,-9.566733,-1.563455,6.569827,-9.279319,-8.245486,-6.696003,-7.081359,-1.666707,-8.436839,-3.069661,-3.544607,-7.546198,-4.277150,-9.848220,-1.067611,7.084938,1.089416,3.964729,5.907768,-1.857429,9.637718,-3.658275,6.506876,-8.186387,-1.480739,3.982432,8.976384,-6.951618,4.197129,4.748547,1.251669,0.723395,-2.701125,-6.455964,-7.338470,-6.379574,9.514617,8.271828,4.174913,-0.895862,-2.892655,-6.052845,4.459438,-7.161205,2.472050,-0.927319,-6.914253,3.861176,-5.083970,-9.348265,-0.578002,4.919704,8.752885,4.379158,-0.869522,-4.861372,5.054155,-4.863165,-6.644211,1.805478,-6.729053,-2.431359,5.815497,-1.772864,2.492056,6.097714,5.816359,4.249295,3.234196,6.435808,1.709256,3.807408,-7.649351,3.580701,-6.791791,-9.590700,0.954529,5.073874,-6.377725,-7.605768,-0.274781,6.862667,-3.636116,-0.030525,5.895214,3.627330,2.235253,9.755604,5.074006,-4.813573,-3.676627,-8.690411,-8.527706,-9.901645,2.138730,-1.654984,-8.937784,0.145364,9.202021,9.001135,9.272649,1.757242,8.228598,-2.264768,3.312100,-6.502522,6.646242,4.943148,-0.685074,-1.421737,1.041981,9.776212,1.476424,-4.752756,-3.853719,8.335524,4.629860,-3.678079,-8.219581,3.117732,-6.782505,6.658089,-3.024931,0.015824,-1.712107,7.338079,-7.593203,-3.338340,6.199207,-4.863113,-7.651140,-5.571402,-8.206130,-9.720341,3.764475,8.720292,1.408494,-3.987229,1.522084,-2.235410,9.971208,9.083784,-5.507237,9.060098,1.604733,0.327055,-3.077701,2.837927,-5.624126,0.405035,4.833424,7.466374,2.670719,-9.485361,8.924260,-7.974793,-9.660055,8.994364,8.204941,4.405390,-7.139138,-1.049105,-5.755030,-3.809635,4.496711,-9.464185,-8.805761,6.460496,6.682712,-4.165422,-7.964362,-0.939035,6.059087,1.305898,-7.873253,0.495966,3.367541,6.704372,4.346254,4.376543,4.264901,1.370569,3.005891,0.247459,-5.336725,-6.481332,3.353191,-8.341245,-5.848679,1.796371,-7.976177,2.334498,7.285863,6.932478,-9.814826,2.540732,-9.477675,2.186728,-3.437839,6.789697,4.565331,0.677338,-4.647016,9.810654,-1.759509,7.988061,9.117017,-2.395776,-6.217634,4.238518,-6.629574,-5.960171,4.387811,0.336461,6.283840,-8.376913,-6.114360,6.119964,9.244545,4.970133,7.298157,-2.647269,2.916274,5.971443,-4.057399,1.564185,-3.289383,-8.697376,3.525129,3.529246,-1.400903,6.610304,4.279225,5.908101,2.678079,-6.975627,0.003728,6.789860,-9.194472,-7.759016,6.291037,4.150420,-6.707471,7.383567,0.737827,-1.929423,1.910453,-2.727431,-5.159616,8.185134,-9.834964,-9.132169,4.986680,9.728716,7.828040,-4.186794,2.962040,-6.025838,7.722116,4.522820,-0.128031,-7.450434,-9.185929,-8.588544,-6.307967,-9.053930,-7.981878,7.755648,2.048560,3.345803,-6.489666,5.833742,6.731688,5.578070,-2.390322,-6.723901,-9.376658,-3.633841,3.234000,4.296584,-5.599289,2.764762,7.254885,-9.935371,2.372395,5.362710,-6.030691,9.187564,-6.182437,-8.676619,2.181867,4.526594,-3.067920,-9.267791,-7.778861,6.391628,-3.694464,8.558065,6.419503,-1.449127,3.598364,7.366135,-5.551011,-7.885227,5.875968,3.253596,8.485587,3.537212,-8.665617,9.444680,4.421253,-6.822510,3.610023,3.859781,4.588945,8.445624,0.136578,-3.024024,0.724974,-1.887410,-2.158816,-0.305405,-1.366464,9.034645,2.043297,-7.358231,8.199780,-8.186435,-6.324462,-4.487509,6.104134,3.110403,-6.420207,1.348911,-8.111366,-8.449080,7.611938,-8.485415,-7.071054,1.245620,-1.214556,1.739037,-7.127082,7.288673,8.969306,-1.173452,7.444126,-1.952240,-8.197326,-1.103388,9.322206,3.761281,9.323664,2.956907,7.171674,8.876081,-2.544381,3.685047,4.133881,6.573198,-7.546992,5.658816,1.717689,0.773981,1.016503,-7.199190,9.830899,-6.895541,0.151558,-9.345030,-8.646811,2.664015,-6.793607,8.569742,2.480995,1.086061,-6.536844,9.212120,-8.728769,6.335728,-7.257199,-1.316151,1.720701,-8.580261,-8.758387,0.302002,9.457112,1.227615,-4.396374,6.497323,-6.159476,0.109362,2.662495,-7.938275,-3.205695,-4.878145,-9.088865,-0.830623,9.284010,-3.554579,9.195504,-1.837013,-4.345073,7.192318,-7.638365,-9.560860,4.141955,6.273728,2.240289,-7.826432,-8.015086,-3.347628,6.111956,-3.435234,-7.852978,9.755072,7.859763,-9.457283,0.009276,-3.699902,-5.395151,-2.198703,-8.303419,-8.543746,-0.410527,8.586030,9.878456,1.339911,-9.809332,0.510403,-1.313708,7.778122,-7.141508,-4.854676,1.850675,3.514451,2.388098,4.709564,-3.302262,0.180876,-1.176754,3.415773,1.156786,-0.585207,-7.073202,-6.305300,-8.274369,-3.641226,4.712197,0.970525,2.711203,-4.790190,-9.853847,7.354243,7.651537,8.863121,4.894878,-4.541024,3.355552,8.539197,-8.369650,8.512301,6.385637,-8.851320,-9.131443,1.724862,-4.261664,-9.364807,7.448048,3.847083,1.538682,-9.978572,5.874285,0.326699,5.490543,0.439589,-9.000034,6.817271,-9.447309,-2.928433,7.755931,5.022695,5.734496,-4.136558,7.843222,1.345956,4.155701,8.495824,-9.107399,1.951819,9.377902,-6.939800,1.609265,7.037005,8.174600,-8.790120,6.200898,-7.348855,-1.268213,9.470925,4.734185,-8.097098,-4.862788,3.043562,-3.890768,9.809636,6.576433,5.689091,5.197494,2.725425,-1.673763,6.394115,2.063658,-4.875821,-7.989112,3.350434,-3.070423,-1.139600,3.839779,-0.712061,4.471995,-2.781334,9.103709,3.536121,-7.524366,2.142852,4.732891,0.179293,-3.420662,-3.429300,9.108391,-0.823763,1.303716,6.070926,4.772027,-1.416779,8.386630,0.306093,-3.389794,7.693939,8.187119,3.889554,3.767700,1.369966,-6.500889,-1.504619,8.217658,3.520704,-5.208896,-9.337619,-1.805412,-8.012471,1.096722,-1.808116,-5.160562,-1.787299,-8.416966,-5.453318,-8.066125,-0.931799,3.392590,5.980777,7.979984,4.232239,2.648324,0.723330,-0.620779,5.713609,-8.986056,8.708348,0.859610,-8.077301,9.898055,6.484568,1.120297,-8.894688,-6.767749,3.516448,1.743612,2.571989,-3.495958,-8.229099,-4.359676,-9.199798,-5.514428,-2.180803,-2.323376,9.981509,3.832523,8.943721,-9.328238,-6.676019,8.205292,2.561982,-7.160653,4.033682,5.068669,-3.436727,0.603785,-1.388373,-4.112825,1.395929,-2.348449,6.377937,0.571039,-8.719463,-8.339452,3.916176,-1.142614,-4.978665,3.624602,-3.541816,-5.280872,7.931259,1.490390,7.215925,-9.735008,-7.337566,9.541441,-0.225234,4.738201,6.568385,4.114848,6.788454,1.521210,5.254803,-5.241420,4.658402,-6.280094,-9.194110,2.351384,5.590904,8.741253,-8.903649,2.721360,1.963454,2.940266,9.208090,9.804105,-3.239277,-1.257708,-2.414279,4.780115,1.856127,-0.821104,-5.338478,0.084237,9.127888,9.358466,-7.185601,-6.667282,8.666971,-9.533331,8.497579,-3.494043,-3.074997,2.988224,7.681897,-8.963224,-5.094580,-4.928291,-5.481219,-7.004614,-3.261217,3.269492,0.643526,7.525471,6.881056,1.943669,6.533917,1.079104,-8.208628,-9.252406,0.393758,5.348851,4.560012,-3.257118,6.235005,3.451929,6.614002,-4.825492,7.273943,6.943676,2.805287,8.530922,-8.686186,-7.324590,9.245327,-4.085745,-7.998964,-1.633087,-5.745836,9.758275,5.423971,2.304751,-0.585809,2.632285,6.687069,-1.451339,9.849246,-8.427736,-1.154814,1.038014,9.915193,8.799208,2.233937,-7.470802,-4.705412,2.934614,-1.638799,-2.498425,0.396380,-6.932901,9.617815,2.680566,-0.182964,-2.182899,7.381082,-7.687017,-8.896002,-9.653942,2.460964,3.749823,-3.789166,-0.502120,7.375750,3.811482,-4.829454,-2.870268,1.860665,1.472678,7.708374,-3.277826,1.034880,8.462635,-5.557080,2.987433,-7.029539,-7.038268,7.578787,-5.870220,1.098783,6.278337,5.825201,7.072829,-9.830613,6.344225,5.824854,-9.787015,-9.652781,-2.217831,8.724979,3.482690,-0.313982,-1.320533,-0.495854,-3.978798,2.240823,3.014831,0.580752,1.842234,8.701028,7.093695,-2.887471,4.294077,-2.902217,-2.424863,6.184708,6.944557,4.346688,-3.324263,-2.304418,0.895456,-3.651366,1.795432,-7.621748,8.191440,7.566023,-5.269714,-0.894083,-4.204938,9.574917,-8.778349,-6.011823,-5.261576,-3.534523,7.081814,3.121892,-8.864399,-4.896880,-0.351265,-0.689640,-5.630763,-8.126707,3.395499,0.743327,7.672123,-0.045486,8.690001,-6.541165,-7.843885,-7.436773,1.592447,0.446987,-4.616065,5.968372,-3.446375,-4.606759], dtype = "float32")#candidate|3948|(2240,)|const|float32
call_3946 = relay.TupleGetItem(func_2884_call(relay.reshape(const_3947.astype('float32'), [832,]), relay.reshape(const_3948.astype('float32'), [2240,]), ), 3)
call_3949 = relay.TupleGetItem(func_2887_call(relay.reshape(const_3947.astype('float32'), [832,]), relay.reshape(const_3948.astype('float32'), [2240,]), ), 3)
output = relay.Tuple([call_3913,call_3932,var_3933,call_3946,const_3947,const_3948,])
output2 = relay.Tuple([call_3914,call_3934,var_3933,call_3949,const_3947,const_3948,])
func_3951 = relay.Function([var_3933,], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3952 = relay.var("var_3952", dtype = "float32", shape = (78,))#candidate|3952|(78,)|var|float32
func_3951_call = mutated_mod.get_global_var('func_3951')
call_3953 = func_3951_call(var_3952)
output = call_3953
func_3954 = relay.Function([var_3952], output)
mutated_mod['func_3954'] = func_3954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_3961 = relay.TupleGetItem(func_2898_call(), 0)
call_3962 = relay.TupleGetItem(func_2900_call(), 0)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_3963 = relay.TupleGetItem(func_3690_call(), 0)
call_3964 = relay.TupleGetItem(func_3691_call(), 0)
output = relay.Tuple([call_3961,call_3963,])
output2 = relay.Tuple([call_3962,call_3964,])
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_4005 = relay.TupleGetItem(func_2898_call(), 0)
call_4006 = relay.TupleGetItem(func_2900_call(), 0)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
const_4009 = relay.const([[8.544151,8.523714,-4.390342,-0.601344,2.930777,4.773988],[5.040483,-6.566247,-9.648924,-7.175500,6.732613,5.859246],[2.284894,0.759719,2.175825,-8.792872,-6.684796,-7.452168],[8.712916,3.256566,-3.241693,8.713303,6.168582,3.910448],[-8.001134,4.456600,0.032970,-3.054029,9.203379,-3.274031],[4.213730,1.579850,-8.842970,2.343313,8.255709,-8.625036],[3.929355,2.341166,5.903954,4.880854,-4.176104,2.670836],[1.005818,9.159421,-2.194973,8.958487,-5.992568,2.301233],[-6.266085,-2.433996,-3.669957,4.111919,-9.083882,-7.869580],[-7.664712,-6.075076,3.770082,-5.700948,1.071813,1.597601],[6.589430,-7.415669,-0.864179,-3.422535,-6.516778,-5.232881],[1.110264,-0.449813,-3.356769,8.107203,-2.521200,2.529525],[-4.064556,7.387327,9.671084,3.225171,0.185471,-4.705381]], dtype = "float32")#candidate|4009|(13, 6)|const|float32
call_4008 = func_1646_call(relay.reshape(const_4009.astype('float32'), [2, 3, 13]))
call_4010 = func_1646_call(relay.reshape(const_4009.astype('float32'), [2, 3, 13]))
var_4020 = relay.var("var_4020", dtype = "uint8", shape = (6, 8, 10))#candidate|4020|(6, 8, 10)|var|uint8
bop_4021 = relay.left_shift(call_4005.astype('int32'), relay.reshape(var_4020.astype('int32'), relay.shape_of(call_4005))) # shape=(6, 8, 10)
bop_4024 = relay.left_shift(call_4006.astype('int32'), relay.reshape(var_4020.astype('int32'), relay.shape_of(call_4006))) # shape=(6, 8, 10)
output = relay.Tuple([call_4008,const_4009,bop_4021,])
output2 = relay.Tuple([call_4010,const_4009,bop_4024,])
func_4031 = relay.Function([var_4020,], output)
mod['func_4031'] = func_4031
mod = relay.transform.InferType()(mod)
var_4032 = relay.var("var_4032", dtype = "uint8", shape = (6, 8, 10))#candidate|4032|(6, 8, 10)|var|uint8
output = func_4031(var_4032)
func_4033 = relay.Function([var_4032], output)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_4089 = relay.TupleGetItem(func_2898_call(), 0)
call_4090 = relay.TupleGetItem(func_2900_call(), 0)
func_2651_call = mod.get_global_var('func_2651')
func_2655_call = mutated_mod.get_global_var('func_2655')
const_4106 = relay.const(9, dtype = "uint8")#candidate|4106|()|const|uint8
var_4107 = relay.var("var_4107", dtype = "int16", shape = (10, 45))#candidate|4107|(10, 45)|var|int16
call_4105 = relay.TupleGetItem(func_2651_call(relay.reshape(const_4106.astype('uint8'), []), relay.reshape(var_4107.astype('int16'), [450,]), ), 14)
call_4108 = relay.TupleGetItem(func_2655_call(relay.reshape(const_4106.astype('uint8'), []), relay.reshape(var_4107.astype('int16'), [450,]), ), 14)
bop_4123 = relay.minimum(var_4107.astype('uint16'), const_4106.astype('uint16')) # shape=(10, 45)
func_1362_call = mod.get_global_var('func_1362')
func_1368_call = mutated_mod.get_global_var('func_1368')
var_4129 = relay.var("var_4129", dtype = "float32", shape = (832, 1))#candidate|4129|(832, 1)|var|float32
var_4130 = relay.var("var_4130", dtype = "float32", shape = (2240,))#candidate|4130|(2240,)|var|float32
const_4131 = relay.const([-3,-6,10,-4,-1,-1,10,-3,-4,3,2,8,-5,-8,-6,-2,8,1,-5,2,10,3,7,-9,10,-2,-5,4,1,-1,-8,5,-3,3,3,-4,-1,3,4,-1,-5,7,-3,10,-2,10,5,6,-4,-6,8,-10,-6,9,6,-6,-4,10,3,-1,2,5,-9,-5,-1,1,-10,8,-7,-10,8,-3,7,10,-3,5,4,-3,10,-7,-9,-10,-1,-9,-9,1,-4,-10,8,-3,2,-6,-7,-9,-7,7,7,8,-8,-8,7,4,4,4,-3,2,-4,-2,-7,7,-9,1,2,8,6,6,-7,-5,-4,2,-8,3,-5,3,7,-6,-4,4,6,-7,8,-6,-6,6,1,-9,4,-1,6,1,-3,10,3,7,-6,10,10,8,10,-7,-4,10,-8,-7,4,-10,4,-6,5,-4,8,6,-3,-7,2,2,2,-4,-2,7,-10,2,-6,-10,-2,4,10,1,8,-4,3,6,9,-8,-4,4,-1,-7,5,-9,-2,8,-7,-3,8,-5,5,-8,3,3,8,-1,-6,-7,-6,9,-1,9,-9,-3,2,-7,1,-1,-1,4,-6,8,5,-4,-2,-10,1,1,4,6,-9,-4,10,5,-4,1,-3,-1,-6,1,9,1,1,-1,-5,2,9,6,-3,-1,1,-8,-10,-5,5,2,-7,5,6,-4,2,7,-4,-3,4,-6,3,-9,3,7,10,-2,-6,-7,-3,-5,9,-10,-3,-9,-6,-1,-9,4,-8,9,-2,-7,8,-3,4,-9,8,-5,-10,-9,1,7,-4,-1,-2,10,-9,-4,-10,-1,-5,-9,-8,5,9,6,5,10,-4,2,9,-2,9,-9,-3,3,-1,-2,-7,8,-2,-5,-10,8,6,-2,2,-3,-9,9,-3,1,-7,2,1,-9,8,2,1,-4,10,1,-7,2,-9,8,-5,5,-4,-5,10,-10,10,-6,5,-7,3,6,4,-8,9,4,-6,4,-9,7,-5,-6,10,-7,2,-10,3,7,-4,-8,-2,6,3,-8,-9,10,1,-10,-9,-7,-10,-6,-3,-8,-9,-9,-1,6,5,6,6,-9,-3,-9,-5,-3,-1,5,3,2,-4,-10,-6,-8,-2,-6,-2,7,-3,10,-1,2,-4,-8,2,9,-3,-10,-7,1,-5,-8,-1,2,1,3,-5,-6,3,3,5,1,1,6,-10,-7,-3,1,10,-9,7,3,-8,10,4,-7,7,7,-9,-6,-8,-5,-10,5,2,-10,-10,1,-3,-9,4,6,-2,-9,-5,-10,-10,4,-1,-9,-6,2,-4,-4,-3,6,7,-7,4,-9,-1,-2,6,-8,-8,2,7,-10,6,-8,6,-4,-7,-3,-7,7,-5,-8,6,8,4,-6,3,-10,1,-7,3,2,-4,-10,-9,-8,8,3,-3,-6,10,-6,9,9,-5,8,10,9,-5,5,-7,-6,1,7,-2,-9,-8,-3,-10,-8,1,-6,-4,-4,-5,2,-4,-7,10,6,-8,4,9,-4,2,-7,-5,-5,-7,9,10,4,-10,8,4,3,1,9,-7,-3,2,-5,1,8,-10,10,8,3,-4,9,-7,1,10,-1,2,7,2,-4,1,-2,1,-1,7,-7,7,10,-8,5,2,8,-8,1,8,-4,7,2,-10,-7,8,-10,1,10,-3,-1,9,-3,6,-8,9,-3,-9,-4,-9,6,6,2,-5,1,7,5,1,4,1,-2,-3,-7,-2,-1,-4,8,-2,1,5,5,4,-10,7,-2,6,-7,1,-3,-4,3,1,10,-4,-1,3,-10,8,-1,4,5,1,10,7,4,10,-1,-9,-4,-4,-1,-3,-3,1,-9,-1,-8,6,2,-3,-5,4,-4,9,-5,5,9,6,-10,-7,-5,-3,1,-1,3,9,-7,-3,5,8,-6,-7,10,6,2,9,4,-10,-1,9,-5,1,-3,-2,8,-10,3,-9,1,-5,1,-2,-7,-9,3,10,6,1,-8,8,5,10,7,2,-5,3,-2,10,-7,-6,4,-2,9,-10,10,-3,-9,-4,-2,-4,-7,2,2,-7,-10,-1,10,7,-9,-8,-8,-4,2,1,8,1,-2,3,5,-3,6,1,9,7,6,7,-6,9,10,-4,-5,4,-7,1,10,9,8,-1,-8,5,6,8,-2,10,6,2,8,-1,6,9,8,3,-5,-4,-5,-7,-10,2,1,-6,7,-2,-8,10,-7,-2,-4,-2,9,4,-5,-6,-5,9,-2,4,-4,4,9,6,2,10,2,7,-8,-7,3,7,2,3,-10,-3,1,-6,1,6,-1,1,8,7,10,-8,7,-10,-9,3,10,-4,3,-9,2,-8,-2,8,-9,-6,1,4,7,-7,7,-8,5,-7,-9,-1,-4,6,9,5,-1,1,-5,7,10,-2,3,-5,-9,-7,9,-1,-10,-8,-3,9,4,-5,4,2,-8,-3,2,1,8,-2,-7,-9,-2,-6,-10,10,-4,4,8,3,2,-7,4,8,8,-9,4,2,7,-2,2,10,6,-7,1,10,-8,10,7,-1,7,-9,-10,-9,-8,3,-3,-7,10,-3,4,4,10,-1,1,1,-6,3,1,2,-2,-9,-1,-4,-10,9,10,-5,9,-9,-2,2,-3,1,-6,-3,-1,3,-1,-10,-6,5,6,8,8,8,10,-7,5,-8,2,-9,-6,-4,9,-7,4,-3,-6,8,2,3,7,6,-7,-3,6,3,-4,10,-10,10,-1,-6,8,10,-9,-2,4,-8,-2,3,3,-1,-2,10,-10,-7,5,-7,-5,-1,-1,-9,-10,-7,8,-2,5,-7,6,8,-8,-6,-8,6,-9,8,-9,-4,-5,-3,10,-3,-1,-9,-8,3,-4,10,2,-7,-10,-9,-3,-10,-4,9,-2,-7,3,-2,-5,-8,5,-2,2,8,-4,3,-9,-4,-9,9,7,6,3,2,4,6,-8,8,6,3,2,7,-10,6,-6,-3,-10,5,-7,-1,7,-2,-6,4,-4,-1,-5,-10,9,-6,-3,-8,-6,-8,7,5,7,-8,6,4,-9,8,3,-10,-6,-9,-3,-3,9,-5,-9,2,-6,8,2,-3,8,6,-1,-6,-3,7,-2,-9,2,-7,2,8,10,1,-7,-5,-8,-6,9,8,-9,-10,-3,-9,-10,-5,-4,2,8,-7,8,2,5,4,2,-8,7,9,6,5,4,10,-5,-3,-6,2,2,-9,-1,-5,-7,1,2,3,10,7,2,-6,-10,1,-9,9,6,2,-4,-10,1,-6,5,-2,9,-1,-5,-7,-5,-2,-3,10,2,9,-9,9,-2,3,-4,2,-2,-2,9,-3,-10,-1,-7,-6,-2,-5,4,1,8,-1,8,-4,6,7,-5,-10,-5,-2,1,-1,1,-6,-9,10,2,8,5,-10,5,-6,8,-9,-6,-7,-9,2,4,4,4,9,-5,5,8,-3,-3,-7,-7,-5,-7,2,3,-5,-1,-10,-3,2,-5,-8,-2,-8,-9,7,-9,-9,-7,2,6,-6,-6,-3,-3,-5,-3,3,-3,2,4,-8,-4,-1,9,-8,1,-3,10,6,-2,-4,-5,4,-6,1,-6,2,7,10,7,10,-3,6,8,5,-6,-7,-5,-10,7,-10,-2,4,8,-5,3,-4,8,-8,-4,10,-3,3,-8,-9,-6,-2,3,-8,-2,-7,-10,-9,-3,-7,-1,10,-4,2,-8,10,1,-4,10,5,-7,-4,5,5,2,8,-1,-7,-1,-8,1,-5,-2,7,3,3,-6,6,10,-1,3,8,-6,-10,6,-6,-8,9,1,1,8,5,10,-5,-3,5,-6,2,9,-10,10,2,-6,9,5,-3,-3,-6,8,-5,8,6,4,7,-10,6,3,-9,9,8,5,8,8,2,5,-8,9,8,-4,5,-2,-3,1,3,9,5,-5,-3,-6,10,4,4,-3,-5,7,-10,-2,-3,-6,-4,-10,-8,-3,7,-8,1,-4,-3,7,-6,7,3,-3,-4,-3,-6,7,-5,7,-10,-8,6,3,-10,7,-7,4,-8,4,-7,-10,7,5,10,3,-6,10,-2,-1,-5,10,7,-10,2,6,-3,10,-6,4,-8,5,-8,8,-7,-6,-9,4,2,-10,-2,-4,3,-4,1,-4,-5,-5,-3,6,-3,-2,-9,-10,-2,5,-7,8,-3,10,10,-2,-4,-1,1,-6,-8,-9,-9,-7,-9,7,-1,9,-7,7,4,4,8,4,-1,-6,-1,7,3,-2,-8,2,2,-3,-10,-6,-2,2,-6,-1,-7,9,3,-9,-9,1,-8,9,4,-8,-4,9,-7,-6,-7,3,6,-1,5,5,9,-3,1,-6,6,1,10,-6,1,3,10,2,-5,5,3,6,-10,-8,5,-7,-1,10,8,-2,1,9,-9,-7,1,6,6,5,-5,6,-10,10,3,5,-10,-2,-2,2,9,-8,5,-6,8,-4,8,-2,5,2,-5,-9,3,4,2,9,-7,-6,10,1,5,2,9,4,9,-4,-4,-7,-6,-2,-7,4,7,6,1,-7,7,10,5,-10,9,-7,8,-9,7,5,-4,9,8,-1,5,3,-7,-5,-8,-7,10,-9,-9,5,2,9,-10,7,6,-4,6,-2,-4,-5,4,7,-7,-4,-5,-2,10,2,10,5,9,-6,1,-6,-4,5,-5,6,1,6,-1,-2,10,1,7,-7,-7,9,-10,3,8,-6,10,-2,-3,6,9,-7,6,-2,-5,-7,-3,-2,-3,-10,3,-3,7,-6,6,-6,-2,7,-10,10,7,10,6,-2,5,10,-8,-2,8,7,10,10,-6,-1,-5,4,8,1,-5,5,-5,-9,7,9,-9,-1,2,10,-10,6,2,5,-5,-6,-9,10,7,8,9,1,-6,7,-6,7,8,9,-5,-9,-3,9,-5,6,8,-8,-3,-7,3,-8,8,5,9,5,-2,-6,-9,-7,-6,8,8,3,5,2,-1,-7,6,-7,9,2,-6,6,-5,-2,5,5,6,-7,-7,8,-1,-8,-8,3,7,-9,-4,-8,6,-10,-2,4,-4,-10,2,-8,3,-10,-1,8,-6,10,-2,9,-8,8,-5,-7,-5,-1,-5,10,4,-10,-10,-2,-5,-8,-1,-4,-5,1,7,8,-7,1,-7,1,-10,8,-9,-8,-5,3,3,-6,-2,-8,-9,2,-7,-7,3,-8,8,5,-8,-4,-1,-8,-4,3,-3,6,-9,-5,3,-3,-1,1,8,-7,-1,9,5,8,-2,-9,6,-7,6,-3,6,-5,-8,-6,-2,-3,3,-9,-9,-2,-10,8,-6,2,8,3,1,3,-2,-6,-2,-9,10,3,-5,-4,6,4,6,-8,-9,-10,-6,-8,2,5,2,8,4,-5,8,7,-1,8,4,2,4,4,5,-10,-5,-8,3,-10,9,5,5,1,-2,3,-4,9,-7,10,4,-8,9,9,3,-8,-5,10,-4,5,-2,1,-3,6,3,3,-7,10,6,7,-7,4,9,-3,6,8,4,4,2,-7,-5,4,-1,10,-2,-1,-4,-2,-8,6,10,-10,5,-2,-3,2,1,-9,-8,2,-8,10,7,-4,6,-6,6,-3,-1,10,5,-1,-7,9,-1,-7,5,2,-9,6,6,6,-2,-5,-5,7,6,-6,-8,10,9,8,-5,5,-7,-1,-5,-9,7,9,10,10,4,8,-3,1,6,-6,-2,-6,4,-3,6,5,7,-3,-10,2,-3,3,-9,-7,-8,7,-6,10,-2,-8,-7,2,-6,9,-2,-7,-1,10,-7,-6,-2,4,8,9,-6], dtype = "int32")#candidate|4131|(2145,)|const|int32
call_4128 = relay.TupleGetItem(func_1362_call(relay.reshape(var_4107.astype('int16'), [15, 3, 10]), relay.reshape(var_4129.astype('float32'), [2, 416]), relay.reshape(var_4130.astype('float32'), [2240,]), relay.reshape(const_4131.astype('int32'), [2145,]), ), 5)
call_4132 = relay.TupleGetItem(func_1368_call(relay.reshape(var_4107.astype('int16'), [15, 3, 10]), relay.reshape(var_4129.astype('float32'), [2, 416]), relay.reshape(var_4130.astype('float32'), [2240,]), relay.reshape(const_4131.astype('int32'), [2145,]), ), 5)
var_4141 = relay.var("var_4141", dtype = "uint16", shape = (10, 45))#candidate|4141|(10, 45)|var|uint16
bop_4142 = relay.left_shift(bop_4123.astype('int64'), relay.reshape(var_4141.astype('int64'), relay.shape_of(bop_4123))) # shape=(10, 45)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_4146 = relay.TupleGetItem(func_2898_call(), 0)
call_4147 = relay.TupleGetItem(func_2900_call(), 0)
func_3558_call = mod.get_global_var('func_3558')
func_3561_call = mutated_mod.get_global_var('func_3561')
var_4162 = relay.var("var_4162", dtype = "bool", shape = (520,))#candidate|4162|(520,)|var|bool
call_4161 = relay.TupleGetItem(func_3558_call(relay.reshape(var_4162.astype('bool'), [5, 104])), 0)
call_4163 = relay.TupleGetItem(func_3561_call(relay.reshape(var_4162.astype('bool'), [5, 104])), 0)
output = relay.Tuple([call_4089,call_4105,call_4128,var_4129,var_4130,const_4131,bop_4142,call_4146,call_4161,var_4162,])
output2 = relay.Tuple([call_4090,call_4108,call_4132,var_4129,var_4130,const_4131,bop_4142,call_4147,call_4163,var_4162,])
func_4164 = relay.Function([var_4107,var_4129,var_4130,var_4141,var_4162,], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
var_4165 = relay.var("var_4165", dtype = "int16", shape = (10, 45))#candidate|4165|(10, 45)|var|int16
var_4166 = relay.var("var_4166", dtype = "float32", shape = (832, 1))#candidate|4166|(832, 1)|var|float32
var_4167 = relay.var("var_4167", dtype = "float32", shape = (2240,))#candidate|4167|(2240,)|var|float32
var_4168 = relay.var("var_4168", dtype = "uint16", shape = (10, 45))#candidate|4168|(10, 45)|var|uint16
var_4169 = relay.var("var_4169", dtype = "bool", shape = (520,))#candidate|4169|(520,)|var|bool
output = func_4164(var_4165,var_4166,var_4167,var_4168,var_4169,)
func_4170 = relay.Function([var_4165,var_4166,var_4167,var_4168,var_4169,], output)
mutated_mod['func_4170'] = func_4170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_4255 = relay.TupleGetItem(func_3690_call(), 0)
call_4256 = relay.TupleGetItem(func_3691_call(), 0)
var_4257 = relay.var("var_4257", dtype = "uint8", shape = (6, 8, 10))#candidate|4257|(6, 8, 10)|var|uint8
bop_4258 = relay.subtract(call_4255.astype('uint8'), relay.reshape(var_4257.astype('uint8'), relay.shape_of(call_4255))) # shape=(6, 8, 10)
bop_4261 = relay.subtract(call_4256.astype('uint8'), relay.reshape(var_4257.astype('uint8'), relay.shape_of(call_4256))) # shape=(6, 8, 10)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_4274 = relay.TupleGetItem(func_2799_call(), 0)
call_4275 = relay.TupleGetItem(func_2800_call(), 0)
uop_4281 = relay.rsqrt(call_4255.astype('float64')) # shape=(6, 8, 10)
uop_4283 = relay.rsqrt(call_4256.astype('float64')) # shape=(6, 8, 10)
output = relay.Tuple([bop_4258,call_4274,uop_4281,])
output2 = relay.Tuple([bop_4261,call_4275,uop_4283,])
func_4308 = relay.Function([var_4257,], output)
mod['func_4308'] = func_4308
mod = relay.transform.InferType()(mod)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4309 = relay.var("var_4309", dtype = "uint8", shape = (6, 8, 10))#candidate|4309|(6, 8, 10)|var|uint8
func_4308_call = mutated_mod.get_global_var('func_4308')
call_4310 = func_4308_call(var_4309)
output = call_4310
func_4311 = relay.Function([var_4309], output)
mutated_mod['func_4311'] = func_4311
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4360 = relay.const([[[3.150528,2.687200,4.375362],[-8.983686,-0.895138,2.457183],[0.334779,-1.664835,6.499337],[-4.199600,-9.140393,-3.709983],[1.820884,-3.442093,-1.114309],[-5.126712,-7.578534,2.345270],[-9.160729,-8.154062,6.643033],[3.691828,2.202908,1.695087],[4.521012,2.434702,-9.690731],[6.167479,-9.409555,-9.478101]],[[-1.689141,-7.473333,-9.939351],[-1.811037,0.044286,-6.759024],[-1.771844,4.488414,8.302878],[4.709808,7.087492,-1.076783],[-1.607745,0.085173,-8.356133],[2.713891,-5.966213,6.039017],[7.229899,4.988790,-0.340523],[0.294030,5.855320,-4.214532],[8.417329,4.426014,-3.416869],[-9.735374,-5.374947,0.445587]],[[4.606926,7.667213,-9.150893],[4.031918,-8.483881,1.594820],[-6.618073,8.776014,7.612086],[-1.841627,2.714887,9.009336],[-0.384780,-1.820690,1.254789],[2.884205,-4.694929,-6.512860],[7.779810,0.085891,-8.166632],[-0.569080,8.472464,-0.592773],[2.983681,-0.929856,4.161837],[-8.007857,8.172062,-5.841471]],[[-5.170128,-3.184749,-3.919969],[3.128340,-5.852885,8.751640],[6.802090,2.818600,2.052012],[-6.594863,-0.943649,-0.226349],[-0.067757,1.327634,2.783504],[7.464951,0.366809,5.095333],[-3.330201,3.480702,4.656655],[-0.552732,-4.111307,5.631025],[6.991336,-7.202900,-3.693625],[0.930239,2.841201,7.928617]],[[-8.558102,-7.449379,-3.606789],[9.437385,5.951419,1.507248],[5.226766,2.527139,4.951584],[-4.720652,-7.121443,-8.203849],[7.684153,-3.194846,3.219296],[6.119333,-6.052945,8.981763],[1.888587,3.679789,-4.540488],[6.085140,-3.784985,2.037379],[-0.349818,9.305803,4.249417],[4.186547,9.376323,4.156166]]], dtype = "float64")#candidate|4360|(5, 10, 3)|const|float64
var_4361 = relay.var("var_4361", dtype = "float64", shape = (5, 10, 3))#candidate|4361|(5, 10, 3)|var|float64
bop_4362 = relay.power(const_4360.astype('float64'), relay.reshape(var_4361.astype('float64'), relay.shape_of(const_4360))) # shape=(5, 10, 3)
bop_4367 = relay.add(bop_4362.astype('float64'), relay.reshape(const_4360.astype('float64'), relay.shape_of(bop_4362))) # shape=(5, 10, 3)
output = bop_4367
output2 = bop_4367
func_4376 = relay.Function([var_4361,], output)
mod['func_4376'] = func_4376
mod = relay.transform.InferType()(mod)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4377 = relay.var("var_4377", dtype = "float64", shape = (5, 10, 3))#candidate|4377|(5, 10, 3)|var|float64
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4378 = func_4376_call(var_4377)
output = call_4378
func_4379 = relay.Function([var_4377], output)
mutated_mod['func_4379'] = func_4379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_4415 = func_3190_call()
call_4416 = func_3190_call()
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
var_4423 = relay.var("var_4423", dtype = "float32", shape = (2240,))#candidate|4423|(2240,)|var|float32
call_4422 = relay.TupleGetItem(func_903_call(relay.reshape(var_4423.astype('float32'), [10, 16, 14])), 0)
call_4424 = relay.TupleGetItem(func_905_call(relay.reshape(var_4423.astype('float32'), [10, 16, 14])), 0)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_4436 = relay.TupleGetItem(func_3632_call(), 1)
call_4437 = relay.TupleGetItem(func_3634_call(), 1)
bop_4459 = relay.logical_or(var_4423.astype('bool'), relay.reshape(call_4422.astype('bool'), relay.shape_of(var_4423))) # shape=(2240,)
bop_4462 = relay.logical_or(var_4423.astype('bool'), relay.reshape(call_4424.astype('bool'), relay.shape_of(var_4423))) # shape=(2240,)
bop_4481 = relay.floor_divide(bop_4459.astype('float32'), relay.reshape(var_4423.astype('float32'), relay.shape_of(bop_4459))) # shape=(2240,)
bop_4484 = relay.floor_divide(bop_4462.astype('float32'), relay.reshape(var_4423.astype('float32'), relay.shape_of(bop_4462))) # shape=(2240,)
bop_4502 = relay.subtract(bop_4459.astype('uint8'), relay.reshape(var_4423.astype('uint8'), relay.shape_of(bop_4459))) # shape=(2240,)
bop_4505 = relay.subtract(bop_4462.astype('uint8'), relay.reshape(var_4423.astype('uint8'), relay.shape_of(bop_4462))) # shape=(2240,)
output = relay.Tuple([call_4415,call_4436,bop_4481,bop_4502,])
output2 = relay.Tuple([call_4416,call_4437,bop_4484,bop_4505,])
func_4510 = relay.Function([var_4423,], output)
mod['func_4510'] = func_4510
mod = relay.transform.InferType()(mod)
var_4511 = relay.var("var_4511", dtype = "float32", shape = (2240,))#candidate|4511|(2240,)|var|float32
output = func_4510(var_4511)
func_4512 = relay.Function([var_4511], output)
mutated_mod['func_4512'] = func_4512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_4602 = relay.TupleGetItem(func_3632_call(), 1)
call_4603 = relay.TupleGetItem(func_3634_call(), 1)
func_2250_call = mod.get_global_var('func_2250')
func_2254_call = mutated_mod.get_global_var('func_2254')
var_4606 = relay.var("var_4606", dtype = "float64", shape = (300, 4))#candidate|4606|(300, 4)|var|float64
var_4607 = relay.var("var_4607", dtype = "float32", shape = (78,))#candidate|4607|(78,)|var|float32
call_4605 = relay.TupleGetItem(func_2250_call(relay.reshape(var_4606.astype('float64'), [15, 16, 5]), relay.reshape(var_4607.astype('float32'), [78,]), ), 0)
call_4608 = relay.TupleGetItem(func_2254_call(relay.reshape(var_4606.astype('float64'), [15, 16, 5]), relay.reshape(var_4607.astype('float32'), [78,]), ), 0)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_4609 = relay.TupleGetItem(func_2898_call(), 0)
call_4610 = relay.TupleGetItem(func_2900_call(), 0)
output = relay.Tuple([call_4602,call_4605,var_4606,var_4607,call_4609,])
output2 = relay.Tuple([call_4603,call_4608,var_4606,var_4607,call_4610,])
func_4611 = relay.Function([var_4606,var_4607,], output)
mod['func_4611'] = func_4611
mod = relay.transform.InferType()(mod)
var_4612 = relay.var("var_4612", dtype = "float64", shape = (300, 4))#candidate|4612|(300, 4)|var|float64
var_4613 = relay.var("var_4613", dtype = "float32", shape = (78,))#candidate|4613|(78,)|var|float32
output = func_4611(var_4612,var_4613,)
func_4614 = relay.Function([var_4612,var_4613,], output)
mutated_mod['func_4614'] = func_4614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_4619 = relay.TupleGetItem(func_3632_call(), 1)
call_4620 = relay.TupleGetItem(func_3634_call(), 1)
output = relay.Tuple([call_4619,])
output2 = relay.Tuple([call_4620,])
func_4628 = relay.Function([], output)
mod['func_4628'] = func_4628
mod = relay.transform.InferType()(mod)
output = func_4628()
func_4629 = relay.Function([], output)
mutated_mod['func_4629'] = func_4629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_4643 = func_3190_call()
call_4644 = func_3190_call()
output = call_4643
output2 = call_4644
func_4655 = relay.Function([], output)
mod['func_4655'] = func_4655
mod = relay.transform.InferType()(mod)
output = func_4655()
func_4656 = relay.Function([], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4680 = relay.const([[[-7,-2,9,-7,-6,4,-6,8,-9,-1,6,-4,-4,5,-7,5],[4,-8,-5,-1,6,10,10,-1,9,-1,-5,7,8,-9,-5,-1],[-2,-3,-6,7,-10,1,7,8,5,-10,-4,2,-6,-9,5,-3],[-10,3,3,-9,9,2,3,-1,-9,1,-7,-5,5,-6,-3,9],[-5,3,-4,-10,2,10,-2,-6,-3,4,9,3,-3,-4,7,-4],[-8,2,-9,7,-6,9,-10,-9,-3,5,4,7,8,-6,7,-1],[6,6,-6,7,10,10,-10,-6,-3,4,-10,5,-2,-5,10,3],[7,-1,10,7,-3,-1,7,7,-8,-9,4,6,-4,7,7,2],[-7,9,3,9,-2,-3,10,8,3,-8,-1,4,-7,3,-1,8],[-10,-9,-10,2,-1,-10,5,2,-7,-4,7,6,-9,8,6,1]],[[-10,2,9,1,-7,4,10,9,-6,-6,2,-9,-2,2,10,7],[-2,-9,1,2,2,1,1,9,-2,4,-8,-5,-7,-10,10,8],[-4,-4,8,4,-3,-2,-4,6,6,10,-3,4,-3,9,-10,7],[4,1,-1,-2,10,1,-4,8,6,-6,4,-9,4,2,4,10],[-3,2,5,-8,-7,-7,-5,5,-4,8,-10,-4,-6,-8,6,-10],[6,4,-5,6,-1,-7,9,-8,2,10,-5,-6,-3,-1,2,-9],[-5,-2,5,-4,-1,5,-2,1,-10,-6,9,6,-4,-2,-10,7],[-6,-6,6,-9,5,-5,6,-1,-8,1,-8,-9,6,1,2,1],[-6,9,1,7,2,2,-9,-6,1,4,6,4,-3,-10,-2,3],[10,-9,1,-8,9,3,-5,5,-8,-5,-10,-8,3,-10,-9,-4]],[[6,-1,-3,-10,-8,-10,-1,9,2,6,3,7,-2,-5,-9,-9],[4,9,-8,10,1,-9,3,-2,1,8,-1,-2,-1,1,7,4],[1,-9,-4,7,8,-8,5,5,7,2,10,1,10,-3,4,-10],[-3,-6,-7,2,2,-6,9,2,7,-4,-7,-8,6,6,9,5],[-5,10,-7,-7,2,5,-7,5,-9,10,-3,5,-2,-9,6,-4],[8,-3,6,-5,3,10,-7,1,6,-3,2,10,8,-4,5,5],[3,10,6,-8,3,9,2,7,-3,-7,-6,-8,8,1,1,-9],[-2,4,4,8,-9,-9,-9,1,5,-1,-6,-7,3,8,-4,10],[3,7,-5,7,4,-9,10,-8,-9,-8,-8,-7,-7,-6,-1,-8],[-8,4,-9,-1,6,-7,9,3,-4,3,8,-2,-7,5,-5,-2]],[[7,8,8,-1,1,-1,5,8,-5,-3,1,9,4,-5,8,-1],[5,2,-1,8,-3,2,-2,-9,-9,3,8,9,-7,-2,-2,-1],[4,-10,8,-7,-6,-1,9,-7,-4,10,4,5,-4,6,10,2],[-1,-9,10,-2,-4,7,2,-4,6,-8,5,-2,10,4,-7,2],[-1,-9,-6,9,3,-5,-2,3,7,8,5,-1,-10,-3,-3,7],[7,-5,6,-4,2,3,-10,-3,8,-9,3,-9,6,2,-8,-3],[6,9,4,10,-3,-3,1,-10,-9,-5,-10,9,-6,-7,-1,-1],[-10,8,4,-3,3,7,-2,-5,5,-7,-4,-3,7,-9,2,-5],[10,8,1,10,9,-10,-6,4,-8,-8,-5,-5,1,-1,3,7],[9,-7,9,6,7,-1,-4,-6,-5,-3,5,7,1,1,3,-7]],[[-3,3,-4,-2,-7,-3,7,1,4,-6,-5,5,10,8,-3,-6],[-9,-2,7,3,-6,-5,6,9,-4,-8,-8,3,-10,1,-5,-4],[5,-9,-8,6,-1,-1,7,-6,4,7,9,-2,-10,4,2,-4],[-4,9,7,7,4,-4,7,1,-6,-5,-8,-3,2,6,5,-10],[2,10,5,-7,5,-10,-3,-4,-9,3,-6,6,4,-1,-1,-8],[10,-2,7,-4,1,7,-4,3,9,-3,-4,2,-10,-9,-2,3],[6,7,-5,6,-4,9,3,3,10,7,-2,4,-10,4,9,-5],[5,8,10,3,8,-2,-6,3,9,-1,-6,7,-7,9,-10,-1],[-4,-2,-3,-8,9,-4,-5,4,-6,6,-2,-10,-4,5,3,9],[-4,-4,8,-10,2,-3,-8,10,3,-7,-9,-6,-8,-6,-6,10]],[[4,7,-8,8,-10,8,9,3,3,1,-7,-4,-7,-5,3,-2],[-9,-10,5,-8,10,-4,-3,-5,5,10,-2,-6,-5,1,-6,7],[-4,-2,-5,-6,6,6,-5,8,6,1,-2,-6,-7,5,1,-9],[-8,-4,1,10,9,9,-8,5,2,-1,-2,1,3,1,7,9],[-10,10,4,-1,9,-9,4,10,-10,2,5,3,9,-2,-5,4],[5,-9,6,-5,9,-2,8,10,-3,3,-6,-6,10,1,-10,-1],[9,-7,1,1,-6,4,7,3,8,7,-2,-9,2,8,-5,8],[-10,-10,-7,-2,4,-6,-9,10,-4,-1,10,9,-10,-6,7,-8],[1,9,-8,10,6,-4,4,2,3,-6,-3,-4,1,7,-6,-6],[-2,-4,7,-4,-9,-8,4,-2,-3,-9,3,-9,-5,-4,-1,5]]], dtype = "int8")#candidate|4680|(6, 10, 16)|const|int8
var_4681 = relay.var("var_4681", dtype = "int8", shape = (6, 10, 16))#candidate|4681|(6, 10, 16)|var|int8
bop_4682 = relay.subtract(const_4680.astype('int8'), relay.reshape(var_4681.astype('int8'), relay.shape_of(const_4680))) # shape=(6, 10, 16)
func_3874_call = mod.get_global_var('func_3874')
func_3878_call = mutated_mod.get_global_var('func_3878')
var_4693 = relay.var("var_4693", dtype = "int32", shape = (288,))#candidate|4693|(288,)|var|int32
const_4694 = relay.const([-5.344429,-6.345400,7.884923,6.436522,7.184750,8.012010,-4.471148,0.724231,0.044419,1.273192,-1.692491,-5.999420,-4.641432,5.708545,-4.567790,2.432836,3.802464,-2.254647,-2.841714,-4.186212,-5.380219,2.587419,-0.653538,5.529625,7.810380,8.923919,1.268298,-7.165818,-5.788728,9.098342,-3.011235,8.171490,-7.668009,-2.912252,2.779148,6.301326,6.533579,8.975069,2.531575,7.300008,4.405698,-0.467809,5.949570,-3.822471,7.772420,-3.520295,-7.479926,3.090839,3.279944,0.482108,9.344251,4.394115,-3.643245,-1.189005,1.390691,-5.809215,-7.595310,9.197509,6.991972,2.608430,-5.005889,-4.888493,5.262453,8.057766,-1.956251,-8.499754,6.336471,-7.221982,-1.413202,-1.203075,-1.386719,-1.783792,8.433208,-3.496096,2.567667,2.883148,0.539589,-7.773699,-0.076734,-9.746315,-2.196610,-9.792815,-3.151516,4.384432,2.459152,-1.399989,-2.095947,-8.020214,8.528859,-1.764479,7.895751,-2.979241,-0.722252,5.450192,-1.872205,2.047899,-0.699226,0.541700,-6.837232,6.867854,-2.294838,9.050314,-3.978064,-7.986101,8.422525,-2.037617,8.912527,8.692304,9.190934,-3.352507,-5.074034,4.265263,4.799971,0.528240,2.489799,7.474951,4.889244,1.168664,-2.746950,0.901696,-8.382832,-9.255348,-3.199866,1.632098,9.113045,0.839513,3.105091,-9.465323,5.926460,-3.098092,2.712175,-3.038739,4.193854,-8.276884,-0.610603,7.932165,-2.794360,-9.687360,9.938290,-3.129803,8.323104,1.719426,-9.082788,4.504787,9.018061,9.410881,2.229035,6.318095,3.209573,-2.251664,4.502516,-9.145294,-1.003777,-8.775752,5.424048,-7.389013,8.293123,0.212517,7.304768,6.639623,6.404041,0.060754,7.821709,1.388936,3.989408,-5.328846,9.860727,-0.369800,3.670188,0.494391,5.606998,6.390441,1.470633,1.071021,0.132202,-9.104914,8.371163,4.527964,-9.274762,1.360386,-5.170794,7.465030,-1.784140,5.029197,-4.181987,-6.144844,-2.809718,-8.759940,0.321753,5.199650,6.514421,4.625314,1.334346,3.519573,3.307577,1.288280,-5.385897,2.197957,-1.245191,-1.611691,3.505474,8.521487,-0.237406,-8.308399,9.623520,-4.439677,4.704529,0.604634,-5.255603,-7.135552,3.305110,8.332114,-2.148010,-1.591185,-0.881264,-1.050192,-2.369896,7.426436,3.008423,-2.830490,2.826789,9.316787,-4.547222,-4.072834,0.550630,-9.736323,-1.842634,-5.088521,-8.676522,-8.689032,6.302996,-7.147092,-4.898129,-9.997736,3.306295,-5.800212,1.165279,7.887604,-6.370438,-4.498935,3.206517,-3.522925,6.476212,-8.133286,8.014624,-8.302968,1.456595,-3.612023,-5.185658,-4.771840,1.730647,4.603416,-4.474385,-0.435071,-4.954968,5.849041,0.611590,4.911036,-0.819141,-8.191199,-3.962340,9.327287,-8.292248,6.994094,-8.638020,-0.467177,-3.981493,3.468960,5.420672,4.283951,-1.825557,3.550437,-5.649584,-4.800806,-0.857618,0.353901,3.605215,4.407666,-0.176832,6.482157,-9.741239,0.500374,0.637038,2.228289,-6.603095,-1.051237,0.322545,5.553753,-8.261331,5.039919,-6.642641,-6.289774,4.806591,8.716802,-5.838695,-4.784215,6.682201,-3.557039,-4.325471,0.964432,-5.972719,-1.863601,4.739757,-0.951170,4.923023,-4.636419,-6.611727,-6.361277,-0.127758,3.406902,-3.643407,4.233231,9.587367,-1.933574,-2.612301,8.514158,7.469322,-4.198875,7.767529,-0.909144,-3.258516,-0.224194,4.700735,-3.716841,2.299557,5.024951,-5.955948,1.337043,-4.581969,8.657327,1.711632,5.953390,-7.919687,2.890991,-9.183464,3.859951,-8.018649,1.412425,-6.982933,-9.274273,-4.706012,7.715466,-7.071957,-4.063979,-1.016432,8.645050,-4.140893,-8.252950,5.721675,-6.941078,7.620302,-9.399743,-0.365884,-5.746489,-6.087427,-7.412608,-2.479389,4.730862,-2.134868,4.116203,9.840900,-9.552629,8.531447,0.069783,-1.902762,4.196286,8.105818,6.776171,4.973851,-3.891945,-0.204360,-0.151550,-0.797155,-3.834021,-9.845810,2.752417,-6.706639,3.871170,-1.202156,-9.742063,3.171471,-3.190303,-2.985698,-3.011760,4.031626,4.086066,9.904896,-1.994227,1.196283,-3.118686,-3.107146,2.725242,5.198980,6.676660,3.428414,-6.139247,5.842834,3.679939,-0.359114,8.505174,-6.355038,-2.359865,5.699173,1.678391,6.739137,-4.611731,9.126260,-4.640275,-6.714576,-8.310522,-5.020975,-7.614999,-6.162828,5.225471,4.999990,-9.670857,9.848949,4.230643,-3.216432,2.767217,-4.013096,7.531426,2.316549,-0.032498,5.955857,-9.961473,4.447115,9.442941,-0.448133,9.445594,-8.738799,-1.537695,-9.394386,-2.093123,-1.119165,-6.131678,8.792885,4.347377,2.593280,-6.884787,-7.678759,-1.095415,-1.411599,1.094476,-9.514642,-6.337871,6.852976,-4.739261,5.822633,-2.463649,-6.694981,-1.970892,-7.024566,2.415747,-2.305635,5.621642,-4.205395,-2.487303,1.555833,7.385259,-0.068420,-1.905588,-7.379167,0.729451,9.011247,-8.551614,-8.159143,1.297398,-4.993924,6.117684,6.135942,1.115561,-1.033611,-0.156270,-3.610871,-0.276264,1.336574,-1.949166,4.114829,2.674781,1.294439,0.744353,1.492042,-3.044628,1.242460,-5.220460,-6.939758,-6.262183,7.793991,7.698367,-5.162598,3.889229,-7.263786,-1.375151,3.176877,8.074026,8.777241,1.409983,9.958011,-3.183243,1.746393,0.198889,-1.953367,-1.625452,-1.370130,6.084576,0.119962,9.363298,-9.464296,-8.594114,1.290777,-4.807004,-3.487267,3.542543,-3.317868,-0.964207,-2.939716,5.584370,4.791491,3.274319,2.694710,-3.608230,8.927181,0.848931,8.257365,9.034558,8.063800,4.854581,8.178700,5.756615,-6.663925,5.737266,-4.967794,-1.920581,6.365636,2.068582,-4.734046,8.863613,0.402019,-2.302953,-8.476069,-1.818050,8.354323,6.997727,-5.381748,-4.420587,-4.162165,-0.794868,2.781521,-2.925682,-4.964641,5.350782,-4.986528,-3.992159,2.590510,-8.329582,-9.714415,4.797423,8.982583,3.734954,-5.489047,-3.051384,6.342426,8.984354,1.676374,7.731169,0.889521,5.457348,-7.887190,-0.380998,-6.822290,9.529285,0.948007,-7.411947,-0.006975,-5.008075,-3.576469,6.205801,2.077271,-0.209256,2.510847,-9.166433,-0.680455,-8.134810,5.598042,0.891226,8.901256,0.771316,1.413548,7.133518,7.350157,-9.088228,0.064289,2.490671,-8.874789,5.692300,-5.277213,4.914468,8.185183,9.632944,-3.462637,-1.896573,3.992924,-5.652349,-5.588697,-5.425072,4.180405,7.118375,9.710990,-5.898944,-2.356273,7.671842,3.617753,9.132092,-5.261974,-1.442404,1.676021,-6.709313,-4.209752,-2.099453,9.035589,-9.734248,8.725329,6.360865,-0.775999,2.397237,8.922577,4.497491,3.220864,-1.782929,9.360638,-2.298717,8.995511,-3.044678,0.065527,-5.738106,8.521753,6.147780,-8.371502,5.735550,-4.795532,1.736056,5.238236,7.236094,-7.320797,-0.670154,-4.871096,-1.056288,-8.296925,0.877222,2.280886,-5.655311,-6.302527,-8.436644,-2.204710,9.003712,-2.020881,-3.599757,-0.051753,-1.219057,8.749288,-9.100015,5.471281,-3.334436,7.297173,3.139186,0.889664,-7.534853,8.921263,8.365375,-4.555184,2.362992,9.453813,1.378675,1.422232,-2.804457,-2.594938,-7.711211,-1.097578,5.642946,-9.469343,-5.872295,-8.712351,5.692590,1.119995,8.059809,4.830472,-6.450599,4.035900,-9.966954,4.380554,6.656369,-6.757487,1.983202,-5.416494,-8.503519,3.309358,7.964877,3.768994,-4.637931,8.979654,9.604552,-2.621152,0.025585,2.905313,-5.674853,8.039099,-7.200099,4.288493,-5.872528,0.465041,-0.887555,3.891451,-8.813362,-1.758088,-4.255598,6.808881,-3.885076,6.282391,2.173390,-8.269034,-4.062961,4.026711,6.586685,-2.196434,0.750191,-0.404890,4.414519,5.446442,8.453999,-8.375262,2.063066,3.027766,4.314430,4.502035,5.760320,-8.722195,0.935574,-3.075604,-0.571955,-9.083804,-4.064371,6.575656,1.523953,-3.311625,-1.692342,-9.179854,-5.329805,3.881894,-6.299365,-3.799697,-1.681346,4.993475,-8.081855,-3.296381,1.275799,-5.619052,-9.716782,7.373803,-2.405107,-4.050132,-2.563195,-2.611087,-6.642272,-5.428941,2.514251,-6.979870,8.292795,7.294794,1.676523,-2.433636,5.392031,8.918120,-0.893390,4.595764,-7.282772,5.539013,-4.412769,5.716216,6.988823,9.041857,-0.405524,2.342705,-3.983247,0.966003,-9.484295,-7.144912,1.797414,5.629039,-7.582269,-4.739538,-2.121444,8.566983,-1.359379,8.999572,-9.172915,-9.458315,-2.511310,-6.160712,-7.235396,0.670978,1.058993,-7.284214,8.013029,-7.634508,-6.075815,-3.102656,-5.985677,4.636385,-1.295438,-2.086892,-8.263904,2.087976,-0.126621,4.712565,7.015294,-1.371358,-2.551216,6.396539,-2.158671,4.925182,5.661225,-3.411029,2.358656,-9.292530,-6.288248,-7.122352,4.699591,-6.937442,5.266421,-6.481476,-1.363703], dtype = "float32")#candidate|4694|(832,)|const|float32
const_4695 = relay.const([[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False]], dtype = "bool")#candidate|4695|(520, 1)|const|bool
call_4692 = relay.TupleGetItem(func_3874_call(relay.reshape(var_4693.astype('int32'), [288,]), relay.reshape(const_4694.astype('float32'), [832,]), relay.reshape(const_4695.astype('bool'), [520,]), ), 5)
call_4696 = relay.TupleGetItem(func_3878_call(relay.reshape(var_4693.astype('int32'), [288,]), relay.reshape(const_4694.astype('float32'), [832,]), relay.reshape(const_4695.astype('bool'), [520,]), ), 5)
output = relay.Tuple([bop_4682,call_4692,var_4693,const_4694,const_4695,])
output2 = relay.Tuple([bop_4682,call_4696,var_4693,const_4694,const_4695,])
func_4704 = relay.Function([var_4681,var_4693,], output)
mod['func_4704'] = func_4704
mod = relay.transform.InferType()(mod)
mutated_mod['func_4704'] = func_4704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4704_call = mutated_mod.get_global_var('func_4704')
var_4706 = relay.var("var_4706", dtype = "int8", shape = (6, 10, 16))#candidate|4706|(6, 10, 16)|var|int8
var_4707 = relay.var("var_4707", dtype = "int32", shape = (288,))#candidate|4707|(288,)|var|int32
call_4705 = func_4704_call(var_4706,var_4707,)
output = call_4705
func_4708 = relay.Function([var_4706,var_4707,], output)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4728 = relay.TupleGetItem(func_3592_call(), 0)
call_4729 = relay.TupleGetItem(func_3593_call(), 0)
func_4510_call = mod.get_global_var('func_4510')
func_4512_call = mutated_mod.get_global_var('func_4512')
const_4737 = relay.const([-1.630258,8.712151,-7.348338,0.860945,-6.375828,7.316875,8.933336,-4.181452,-1.310454,-2.747945,8.489576,6.071628,2.613933,4.103259,-6.997379,-3.462796,8.444652,-6.731228,2.814895,6.169634,-6.895104,-4.876126,-3.544735,1.534086,-4.868318,1.417628,-8.582362,0.574254,-2.027626,-4.951663,4.835208,6.045176,-3.583973,-4.170611,5.461625,-5.649812,-1.458361,9.380960,1.277491,-4.190301,-4.224936,1.222670,-8.795457,2.342638,6.683448,0.121047,-0.473967,-6.095569,3.668618,7.202914,-3.598380,-1.423802,-9.619301,4.902009,-7.657882,2.990741,8.570723,5.897609,6.074815,-7.187375,7.478638,9.648851,9.879583,-9.259911,-2.415521,9.452648,6.524872,-9.789258,-1.773556,-7.785404,7.800921,6.046483,-8.837269,-6.487437,9.933842,2.048566,7.213541,8.604995,-0.235562,0.762034,1.946836,9.283770,-4.661193,-7.320084,-8.280464,-8.486110,4.996836,-9.899524,-4.912235,8.760120,-5.455231,-4.068353,-7.880429,-4.383239,-0.356657,1.854878,-6.559695,-0.291851,-1.331943,8.712430,4.457780,-3.494368,-6.747367,1.313819,-2.832257,-9.032143,7.875179,-4.278314,-5.140083,-9.114008,-5.874303,-0.936527,-1.984972,9.255336,-4.700445,1.060090,-3.189164,-9.607603,9.526496,-7.927697,-4.930013,-3.069916,1.072525,4.283325,4.097517,-4.706874,-7.484080,-0.084309,-4.657903,0.737477,1.046777,-9.024471,3.405824,-1.304244,-2.713841,-3.689720,7.341908,-9.930253,7.892283,3.013918,0.201342,-7.908042,-9.415214,9.259492,-3.990146,7.174039,6.552686,-3.153472,-1.448677,1.800940,0.869179,-5.508318,-1.426543,7.705025,-7.819678,-5.885358,6.594883,7.710016,-0.837573,-5.090687,-5.217149,-0.253873,6.001682,-9.296407,4.811798,9.154717,1.523483,0.168373,-8.830062,8.489335,6.585537,9.333140,-9.065534,5.246178,6.076520,0.950091,4.233728,5.219417,-7.743379,3.216829,-9.903502,-6.788497,-2.851851,6.076156,3.709700,6.661841,7.319893,0.262397,-8.574221,-8.839839,-4.575760,5.880529,0.093460,-6.068937,-1.498492,4.122355,-8.268398,-0.894769,6.914843,-2.429699,-4.484949,-9.575648,-3.275094,2.853509,-7.747447,-8.413195,8.487189,-4.781814,-7.932685,1.899275,-3.966567,8.860975,-0.402263,7.384544,-0.195586,-9.724501,-9.781280,-7.007462,-4.813951,0.793812,1.737196,6.367418,3.014641,7.272991,3.210899,-3.185141,7.197683,-3.142408,1.435664,9.980120,8.709371,-5.881307,-0.539175,-4.444157,-9.582869,6.666442,5.976982,-3.695499,2.715706,1.347067,-7.012313,-2.820396,2.534950,-8.258328,4.316382,-0.139501,9.856766,-1.125709,2.725817,6.975922,-0.241408,1.575780,4.981743,-5.997720,3.309349,7.641134,8.324069,7.638049,0.373664,9.145786,-0.703209,4.957358,-6.953797,6.341909,2.124501,7.005161,-3.023774,0.663159,-1.430391,-2.594295,4.208451,-6.136671,3.701260,-7.337056,6.680435,1.567769,6.813273,1.440256,-1.457062,-4.546358,1.734543,4.415792,-0.664684,-6.727310,-9.937218,6.127733,-7.923922,-9.832531,1.547109,-3.857369,-4.258891,-9.925097,0.011600,9.141063,7.632982,8.332834,2.848084,-6.300005,3.367227,1.519035,1.336814,-6.237891,-3.528037,0.869389,5.974406,-1.362596,-1.218713,2.278901,-2.499504,5.563380,-8.086625,6.401771,-9.552630,-7.386122,-5.077087,4.312732,-7.415086,8.701105,4.894895,-0.184416,6.942249,-9.879369,-4.543747,2.687727,1.736692,-2.596897,8.066230,9.659283,2.882003,0.814138,2.457676,6.797614,-5.069387,-3.680239,5.475875,-3.966337,9.767571,-0.319275,5.029231,2.041534,3.363747,-0.985295,6.239903,-7.007084,5.908615,-0.015234,-3.836804,-7.337338,-2.804467,-1.308753,-9.899714,-2.309596,-4.636476,5.521626,-6.044822,-0.837135,-4.423465,-7.664116,-4.837444,-8.388761,7.746697,8.159471,-3.370504,-4.717581,-6.655031,-5.883667,-0.887571,2.487544,-4.352934,-5.686535,0.224368,-5.329832,0.841082,6.191112,0.160338,-7.600388,-8.794610,-9.389070,3.536224,3.367077,-4.046772,-0.065694,3.227891,9.379263,-5.635325,-2.784275,-2.905696,6.827047,-8.600608,6.796794,-1.746028,-8.318995,3.984791,9.161119,3.742201,3.321263,2.057350,-2.486231,9.777636,-0.340395,4.556714,9.032348,9.685633,-1.584665,7.126275,5.331038,1.163412,-8.650595,-8.963185,3.181807,-2.664727,1.882803,8.438161,-1.692961,4.858336,-1.358537,-2.810819,-8.285071,2.858706,0.883511,7.472084,-5.347420,-1.388835,7.044140,8.100489,-9.228430,6.317879,6.145503,-8.245988,0.866689,-1.122940,-8.954931,9.579537,-6.800517,7.903999,5.478771,-7.436985,1.648691,-3.162212,0.553541,-6.393150,-7.655929,-7.671986,-9.871561,7.254514,-5.066982,0.890862,-4.002595,-2.435592,3.238042,-5.023575,-4.459558,5.061800,1.484640,-3.981567,5.009840,2.630608,9.052489,1.806865,-3.204308,3.754625,-8.983141,7.034761,-9.497367,4.822119,-8.247890,-7.996571,-2.193457,-8.311762,-4.809524,-7.278908,6.384465,9.269148,5.851947,-3.150737,9.352479,9.872062,8.320282,2.318537,-5.341196,1.711313,-7.198789,3.224062,4.508716,6.148895,-2.338261,2.673836,0.135082,-9.259886,3.539829,-2.739203,8.150410,-6.685029,-6.860107,-4.212395,-9.506396,5.105743,6.966125,2.826366,3.500036,-1.812125,4.034284,2.588276,-2.789644,3.997247,6.759153,5.717199,3.420325,9.451730,0.758767,-6.714495,5.715514,-7.692653,-6.539327,-8.158287,-0.019147,-4.802372,-9.311548,-0.760089,6.024392,6.738811,2.030857,0.600007,-8.073424,4.451478,-2.860066,-7.978736,2.953132,2.434236,-3.411724,8.727038,-0.160209,-3.018207,-2.856366,-9.648492,0.273871,-9.642064,-9.213736,3.040199,-9.135239,-5.090503,5.150956,-3.082294,2.539319,-3.751849,1.476934,2.802453,2.090889,1.283761,-5.594856,-3.360519,4.560511,8.600213,-1.496438,-0.439476,7.289623,-2.647435,7.888163,4.392419,-3.179407,6.399111,-1.326559,0.949659,-1.170999,9.252101,-4.347806,-1.031252,-7.695949,0.485625,3.155171,1.022549,-6.120567,1.219737,-4.820711,2.898920,-1.534209,4.726313,4.297747,0.444174,9.117087,-0.551035,-6.086825,4.447469,-3.036291,1.320335,-8.278932,-9.476848,-6.848861,2.850209,4.841246,6.220543,5.331808,-6.653333,-1.084188,-4.625848,-0.601491,7.260442,-8.371068,2.470361,-0.793215,-3.801425,7.398112,2.219776,-3.355926,-9.157853,5.641011,4.526418,-2.282960,2.916458,4.824276,-0.149703,5.163318,-8.089924,-8.056688,-6.584353,4.723734,-7.993577,-7.728367,-8.186322,-1.319606,-2.237606,9.769251,-3.897490,6.620386,-3.423551,8.394056,-7.358896,-4.369678,-4.669531,-4.939206,0.288055,3.977573,-7.130696,-7.955575,-7.795125,4.273970,-6.584460,1.529278,4.238028,5.610476,6.584359,-3.215603,3.651561,7.177806,-0.326582,-6.907409,8.498648,8.058627,0.443174,-2.225297,-8.993256,-8.815720,-2.605761,6.319066,-5.356656,6.320921,0.261859,8.189558,2.934934,5.817676,-6.455920,7.377056,6.232424,7.118792,-0.840113,8.259778,-2.035194,-4.861641,7.220678,-9.193554,-8.179885,7.609009,2.246272,-8.726083,8.596889,-6.373240,4.412009,5.284598,-6.692973,-6.424921,9.900082,5.907202,4.330294,-0.663390,3.257872,5.575991,9.891553,-9.225734,3.526104,5.157896,-1.863789,6.409425,5.817133,-3.500298,6.336198,1.947249,-2.990856,-0.219454,-0.932544,-3.834282,0.627564,7.441143,1.409952,-5.774324,-0.822956,3.539222,8.461572,-7.951284,-1.443147,5.951312,7.802141,-1.137367,7.041738,-3.174187,4.909244,-0.727031,-1.600029,5.192455,2.671607,-6.275601,9.329120,-6.248043,-1.106230,-0.580254,9.302907,0.800350,-4.051454,6.549068,-7.712787,9.642995,-6.476499,3.392452,8.625790,-7.139017,-3.091420,-6.105171,7.324248,-4.690001,4.662124,-3.785671,-0.463397,-7.771954,3.592506,8.987509,1.465161,0.341920,-7.009186,-6.729695,-0.634305,-0.917597,4.300308,-8.645527,2.587971,9.711811,5.594474,6.891902,4.218919,-6.921810,8.720012,-1.611339,-1.692257,0.202153,-3.264915,-6.892255,-9.569481,7.818160,6.109966,-1.231655,4.808855,-9.510726,2.172406,-2.942084,0.392246,7.103544,-5.732943,1.947233,-0.124546,3.211007,-2.111463,6.501575,-0.347001,-2.938072,-0.946432,-1.237931,-9.378384,0.444497,0.992076,-1.853111,-3.828300,9.301164,-7.004949,-0.570062,0.392969,9.023156,8.930052,9.322659,-5.636787,-7.524843,-2.967169,-5.520223,0.134342,7.000214,8.251560,2.849288,3.557562,9.131358,3.699831,-8.077570,6.018093,-8.126657,-9.548742,9.394879,5.783713,-5.052271,-5.369657,2.800391,-1.409704,-9.172264,-4.884125,0.942986,9.760061,1.171248,-8.709758,6.434937,-6.577434,3.604048,3.608137,3.773006,-8.824391,6.325637,-6.549089,-4.461150,2.018725,-8.837024,-8.550342,0.002609,-4.367537,-5.148826,1.468395,8.886629,2.679308,-4.394315,3.983298,4.272473,3.868235,-9.338638,2.945736,-1.995663,-1.619736,0.063373,8.348751,-1.262007,7.797735,-3.990539,-6.871832,-8.399872,-2.608669,7.409411,-8.021241,3.344809,0.925736,1.576678,-6.120113,3.857244,8.849367,2.938374,5.532400,-6.821389,-2.942626,2.717522,-7.785753,-0.087050,5.912397,-4.780896,3.969721,1.332563,-9.610637,1.997554,7.621967,1.100646,6.661996,6.973915,-9.952733,-5.259454,-2.742920,2.401572,7.858396,-1.405157,6.069271,4.255275,-9.025157,5.903384,1.647405,-3.528952,4.024191,0.867749,-0.560309,-4.515757,0.852461,-5.376123,-6.032312,-2.861937,0.522643,-8.992058,-7.132797,8.414142,7.571036,3.035344,-9.716398,4.569730,6.064711,-9.748957,4.969814,-2.459194,6.496628,-1.962547,-6.471688,-6.361845,6.875239,7.762891,-1.976747,5.704953,5.200456,-2.153096,-5.301941,-9.222528,0.390315,4.429107,8.053180,3.256608,-5.428405,-8.569805,-3.549524,9.245336,-3.429165,5.740890,3.104506,-6.704661,0.238810,-4.935911,-6.503216,3.825089,-6.579789,-4.424066,-2.533568,-6.319665,7.133151,-6.285679,3.429191,-1.097589,-5.755156,-8.371194,-5.388792,-8.517365,-1.891947,1.487624,7.001825,-6.231724,1.263446,3.717509,-0.438406,8.906839,8.753006,3.389465,7.767485,-0.716228,-0.681975,7.025707,8.789026,-2.380777,0.938379,-0.843242,7.854926,-1.278081,3.282362,-5.994625,1.000329,0.082689,1.087628,-1.098023,-9.267349,-7.857383,2.980029,4.237797,-9.221668,-9.125648,2.134649,-4.253258,5.512162,-6.497315,7.968435,-8.671034,-4.541560,0.436045,5.011090,-9.016875,-9.480709,-7.162885,-6.905194,-4.935280,8.381461,-0.292977,1.442612,4.293181,9.648852,1.555322,5.874650,-9.929047,5.846811,5.943129,9.056009,1.977109,5.815142,8.751898,1.208351,-3.326220,4.482893,-2.646362,5.316114,9.007156,0.788505,4.074885,2.930180,-1.810758,7.074423,7.738443,8.511383,-3.621768,-4.532439,-8.761879,4.094852,-2.656300,-1.754280,4.113845,6.176262,-6.740061,7.225810,2.144131,8.607233,-2.026027,7.867312,1.563263,-9.253333,6.254997,-6.822975,-1.016933,-4.729633,-8.490824,8.876096,1.136956,-4.884308,7.229413,2.765292,-1.693604,-2.789853,-7.826410,-0.370632,-4.879130,3.860741,7.496552,-5.694494,-0.754159,2.528829,8.819368,-3.753197,3.024234,-3.190728,3.928588,9.214889,5.505122,-7.708096,2.460355,7.428151,6.285023,-1.128452,-4.851372,-4.647530,5.812056,6.225050,5.428701,6.477769,0.525305,6.134050,-5.999264,-4.593564,2.611144,5.498822,-9.874763,-8.311178,9.713608,-0.137490,1.835930,-0.147672,-0.868498,4.665818,-8.517666,-3.359630,8.929559,-8.319088,-9.782090,6.605426,1.713751,6.942242,6.823766,8.246874,-0.632852,3.488972,-9.012626,-8.797745,2.170035,-2.439671,4.130694,5.071045,7.091289,-7.270111,3.857325,4.317149,-2.878552,-6.121772,-7.181992,-9.503367,0.195602,2.683818,-7.513786,8.908349,2.874029,6.049223,-9.814742,2.246266,-1.431624,-8.100158,8.527989,-3.931305,-1.058225,-7.775179,-0.916536,8.564292,-1.913139,0.518769,-8.615897,-2.216723,4.331688,-1.579283,0.548473,1.773590,2.661765,1.450131,5.508223,-5.002241,-9.378191,-7.958860,-2.625781,-4.107506,-6.932557,9.938896,-9.219384,3.720641,1.012206,-9.642960,3.607017,-4.654883,5.700161,-9.779491,7.228622,-4.186281,1.985034,-0.111732,-0.279454,-9.216206,-4.060514,9.508394,9.958934,-7.971186,6.439979,3.587302,-5.431742,1.051747,7.303298,-2.200062,3.516358,-6.737158,-0.450087,-1.468164,-9.795360,3.074005,-2.359587,1.747560,3.849623,-3.310800,-7.803957,-8.831945,4.084212,-8.410257,6.863412,5.838826,7.946311,5.883191,-3.603273,-1.531442,-0.192539,3.205853,1.952120,-2.543432,3.867621,4.746697,9.212635,-2.323580,9.742315,4.559142,-3.606158,7.562556,3.955978,8.637944,-5.971259,-2.347509,1.024410,8.736347,-5.347964,-8.250951,-6.541754,-2.203176,0.280495,-9.006008,1.832913,4.694106,-5.891005,-5.821207,1.553890,2.178142,2.823285,-8.492001,-7.408742,8.297437,1.605429,-0.962437,9.984730,3.537519,7.860117,-1.684519,-4.940007,-9.502995,-6.494478,-3.053686,-3.223127,-5.138897,9.656693,5.555503,-0.050622,-9.042811,-5.142002,-4.256019,8.118095,-0.869639,1.528987,-7.217002,-1.282881,9.603442,7.072599,-4.985648,6.858623,1.359946,7.801497,-5.934901,-9.157527,9.987706,2.712329,-2.253063,-9.088421,-5.163318,5.170951,4.553059,5.265072,0.937753,-8.485403,6.264903,-8.410456,-2.693279,0.107530,8.611175,9.539433,-9.300664,-7.382176,-2.688699,6.405761,0.422998,3.739201,-2.270405,1.102930,1.420229,9.706493,0.060604,1.019731,6.190476,9.037493,-5.826302,3.886634,4.940020,-5.744021,-1.166935,-5.431638,-9.998422,-8.173484,1.971341,-2.617289,2.698930,7.836817,1.970764,-0.642591,4.440519,-9.419931,1.841270,-3.639516,0.545176,-1.588259,-0.154954,0.432005,-5.993331,4.619695,9.377887,-8.364451,1.426892,-9.808082,-9.622227,2.609972,-5.617876,-4.435800,1.238962,-9.547933,5.197950,1.062957,-7.413963,-0.814445,-8.493721,-5.036290,-1.011068,8.534323,-0.811751,-2.866031,-2.635897,-4.282632,6.714140,-3.767156,4.597193,-8.810075,5.487645,-2.153441,-9.070268,-9.616505,-7.061519,6.926650,7.264200,-0.232947,-9.497979,1.814145,-2.366315,6.703631,-6.502386,-5.148804,-0.044793,-0.461510,-8.579692,0.412792,8.315649,-6.055299,-1.707036,-0.087662,-6.891741,1.927479,-0.692413,3.249878,-9.165632,-7.402485,9.621026,-1.294455,1.659493,5.629928,8.723357,8.395363,6.561081,-8.961335,0.062099,8.849959,7.308742,-0.793408,5.666783,-7.740127,-5.957980,-3.086341,-3.318500,6.851077,2.874370,9.285498,-6.522877,-8.513106,-5.835903,7.556904,1.508756,5.136173,-6.327389,-0.700006,-8.767338,0.171294,-0.850001,-5.631760,9.965609,-0.672575,-6.200410,5.801267,-7.255688,-7.115091,1.762810,-9.155202,8.222246,4.102203,0.650072,3.237961,3.871778,-3.005943,7.260959,-0.608868,8.056625,5.943498,-0.096222,-3.290954,-5.577246,-5.058471,-8.563226,0.228709,-6.379653,5.989234,-7.279194,2.268881,-9.185540,7.885163,-4.741931,-0.120473,7.666604,-1.900244,-0.570760,-9.899545,6.766586,-9.185127,-1.376015,7.247263,0.529300,-1.977210,-2.018354,0.856906,-7.203983,-1.467230,-3.812077,-6.181339,-1.694792,7.350292,0.146409,-9.108182,-5.059222,-3.409875,-5.305734,-7.407788,1.768102,6.045164,-0.576834,-1.395760,-1.224214,-1.556728,3.294688,-1.108773,9.353183,-9.515816,2.222766,1.752551,-7.524623,-0.286314,-2.005517,-2.265686,-6.602486,6.091324,-7.981181,6.915536,-6.905997,8.651192,-8.912059,0.685834,1.970520,-6.995950,-9.865309,1.449808,5.988768,9.845476,-5.403018,0.775835,-2.017712,9.982850,-2.020160,6.257981,-7.157226,-9.499399,-2.985702,-4.820762,-6.437271,-3.409591,4.485423,2.853741,-0.694071,-6.264863,-0.489369,9.786133,-4.452444,9.482678,9.109963,5.412101,2.638533,-0.801681,7.724010,2.446187,3.109559,9.417501,8.559230,4.908253,5.798747,-0.694454,-7.367057,-9.344669,6.610401,5.354263,-5.012818,-2.567007,3.989368,3.138198,-8.276699,-4.723846,4.649613,-8.196593,-1.905400,-8.464225,8.041217,7.607130,-6.158465,-8.974369,0.086531,-3.842109,-2.352390,2.422607,4.255094,-1.842831,6.037468,0.169987,-0.146144,-0.793831,1.958960,0.071877,1.938332,-0.293041,-7.803977,9.999130,4.798184,-2.682834,6.067484,6.586956,-4.114426,-4.023323,-4.635940,-8.295158,5.016262,2.198375,5.070909,4.659170,5.472628,-2.668858,-6.053211,2.280386,6.734053,5.466340,7.776448,5.909652,-9.302468,8.887657,2.993246,-0.378836,-8.135694,-8.284792,-7.581429,1.570633,1.805387,9.476566,6.966944,2.771651,-7.018508,1.032511,4.902846,-6.566731,-4.988718,-4.809664,1.238660,-9.930986,-6.618992,-4.806728,-4.729752,-8.140894,6.102650,1.873433,-2.703794,-0.824325,5.691812,-3.145138,-5.375514,4.751125,5.193150,5.314316,-6.390883,-4.316637,-2.939354,6.393252,-9.611312,-0.830168,7.410104,4.262048,2.112931,0.041072,1.073972,8.689731,-0.246506,5.838491,9.926763,-3.452553,-9.081842,-9.335241,6.614445,-1.986786,-5.901386,-8.856359,-1.860217,4.008854,6.116272,8.037165,5.439955,-5.285920,7.434084,4.689823,-6.146802,-4.946195,-2.384031,5.555887,-4.049821,-4.155945,5.954232,-6.096694,-9.057158,8.656401,-7.075950,-1.758702,4.264466,8.819937,-8.387422,6.708215,6.924727,-7.758816,0.810089,7.103013,3.833960,-0.088036,-7.839471,-9.039868,-5.076301,-5.818344,-6.216940,-1.823842,-4.789504,-9.766290,-7.448788,5.970035,0.958263,-5.753630,-4.056176,-3.980484,3.821973,-5.948341,-7.461629,-7.095084,-1.081921,6.927805,0.978174,-8.854066,-1.524660,6.638202,1.761113,-7.002484,-2.507001,6.921893,-9.646530,-7.034501,-6.235057,-5.674748,4.255163,9.698734,4.178578,9.401529,6.107459,-9.681471,-2.682274,-3.114036,2.529121,0.930265,0.147040,-4.779431,-4.663578,9.815988,9.792538,9.552045,-7.799841,-4.251873,-7.275752,3.558805,1.387236,9.133600,0.774303,8.255310,-3.904937,-6.138131,1.338651,6.124365,9.360425,-7.656998,-3.078010,5.157407,4.801825,8.446404,5.890786,6.958126,-4.150235,8.394709,-6.707447,-5.889830,5.610710,1.147230,9.660645,-8.907585,4.099803,7.861785,8.184400,7.310336,-6.126894,-2.388846,7.680385,8.342197,-8.343219,0.080088,7.117814,7.855612,-0.402714,-1.709717,8.585468,-5.264802,2.179345,9.370526,-9.237081,5.390385,5.220970,6.379857,4.050436,-9.561427,3.870786,6.217396,-5.172647,5.867692,2.623226,-1.966210,-6.607984,1.737466,2.284704,-0.235189,8.778393,-3.890496,7.018264,6.128304,-6.322178,-3.052634,2.726966,4.848941,-9.787097,-3.605509,-5.155249,8.640044,8.898692,-7.733697,8.974705,3.955780,2.722494,0.060197,2.646413,7.586639,-8.151328,8.965434,7.720817,3.819900,2.860803,4.280615,6.239238,-3.798018,-9.112722,9.897005,-4.530260,-7.028957,-0.419930,-5.102710,6.453572,-4.155457,-4.242071,0.082977,-9.688879,3.043746,4.668749,1.239874,5.614782,5.347948,-7.111071,0.777405,1.823788,-9.007288,0.361376,5.029642,3.982943,4.903300,8.820900,3.894190,4.380671,4.225412,-4.468628,9.166376,1.753334,4.488597,5.218805,-7.142590,-6.633125,6.522282,5.072474,-2.129869,-7.124646,-1.426265,5.098340,7.308474,0.459334,8.460977,7.993241,2.527598,8.531459,-1.806808,-3.774599,-4.537169,-2.432067,-8.130323,-9.083944,-4.294433,-9.792076,0.180283,-9.018700,2.063927,4.266443,0.648530,6.078604,7.921780,7.295345,-0.419820,-5.908354,9.663941,-1.447290,7.683601,-9.299288,5.806086,-6.083912,-4.322505,4.007874,-2.281555,-3.832346,9.698777,7.090592,4.583697,-2.633699,-2.736994,-0.512914,7.003866,0.323958,2.744933,-8.297618,9.684371,6.245798,-8.613485,9.059717,-8.149589,-6.539721,9.059637,-3.945362,1.485817,-2.202946,-6.608517,2.380767,8.880796,-6.653009,-5.052800,0.905318,5.998573,-0.540272,0.758267,1.427546,3.872442,2.158412,6.852060,4.591377,4.444070,-8.601208,-1.512340,9.956759,-0.918243,3.765277,7.197403,-6.014492,7.786060,-6.041781,-7.279402,-0.775806,5.017619,8.833214,-1.839240,6.428768,-0.946558,4.889509,2.302428,5.579264,-2.773014,8.108637,9.621078,-9.819027,-0.280277,-2.578074,-5.626391,-0.589666,-8.292599,-9.220027,8.382427,-7.217614,0.507169,-2.614431,6.442954,5.853088,-8.413331,0.607354,-4.726642,0.953599,-8.425206,-0.559421,-3.729425,-7.191203,-1.443247,3.641286,0.934627,5.677123,1.902581,3.583651,1.158170,-0.989156,5.393502,-0.130056,-8.580363,-5.790784,8.777117,5.043673,-7.772571,-1.699337,3.877764,-9.517220,-0.044556,0.066772,5.288763,-9.456657,3.603371,5.600194,-5.632065,9.222674,6.746469,7.662379,-8.970655,-1.813142,-8.042176,2.045258,8.193002,-0.311541,0.871453,3.350752,1.096944,-3.498417,0.374463,0.379115,1.701396,-7.483726,3.117389,1.956229,-8.530302,-9.682487,-7.296505,-0.391681,7.919034,0.453469,3.429513,6.215849,-6.322892,1.980289,7.853982,2.903502,9.430430,4.275708,6.723635,-3.657480,4.712154,2.342520,-5.804071,5.453242,-7.051732,0.020021,4.408874,-1.100107,-4.211345,3.008473,0.233656,-0.594108,-9.228139,4.889166,-5.853870,-9.196439,-7.198078,0.367172,1.848959,-1.105868,-0.399859,6.331356,-3.843624,9.902758,-5.337565,4.795353,-3.819835,-2.659269,6.688651,-9.397499,-9.274933,7.893580,-9.742479,9.298329,7.538329,-4.227610,3.636032,-6.615756,7.693279,-3.440192,-3.341968,7.030887,0.541317,-6.702720,3.437968,-0.513279,8.905793,-9.552351,5.338032,8.076225,1.733448,-6.829855,-2.530822,6.383895,-9.743911,6.493047,2.517163,6.264274,-0.400439,6.785804,1.183113,8.645135,-1.460405,-8.892866,-3.714511,-8.689251,0.512702,-1.003867,6.344579,-4.118410,-9.427758,3.018653,-7.518651,-9.477667,-2.310211,2.756222,-5.749331,-0.535342,-6.039556,-8.660739,-7.095900,6.696385,4.050896,7.600833,6.576869,-1.306811,7.318332,2.409275,3.813135,6.745792,6.303686,1.997134,1.624896,-2.232462,-2.951806,-9.358016,-4.652689,6.831383,-8.864226,-3.862901,-8.115967,0.292164,-6.253421,2.414679,-4.496496,3.478700,0.630815,9.105488,-5.048620,2.991138,-3.839728,-3.036622,6.190575,-2.866690,-0.915625,9.909236,-2.272212,1.548935,7.752026,-1.913808,8.552929,9.455083,-2.294922,7.092487,4.273346,1.278269,5.329970,-4.138844,5.914078,-9.376508,6.463245,-2.376319,-9.002206,1.022844,9.278789,5.448875,7.575292,0.025103,-5.077978,3.900823,4.896281,9.272334,-1.071438,8.757057,1.132985,7.478565,6.203892,-2.933507,6.846449,0.629864,2.997102,5.249253,-7.017017,-4.389907,-1.534431,-8.223286,-2.084137,-0.792781,1.420819,7.047579,8.217013,2.656390,-2.796568,-8.488424,4.421844,-3.406754,-3.762002,-3.602117,1.388353,9.926239,-8.430290,3.461057,-1.409633,9.084272,-0.377713,-2.107908,4.265444,-6.016645,3.591000,-5.351075,8.150092,3.631085,-7.991528,-4.173871,-5.536035,3.617495,6.963831,2.621438,-7.811805,7.897815,6.888407,-8.195599,8.038070,0.093727,3.015163,-1.964392,-8.070604,4.242620,3.115744,-1.630469,0.123025,-5.214695,4.245147,-3.065924,-4.767587,-9.395108,8.989544,-0.880717,2.162890,7.795866,7.502450,3.782980,6.358757,2.311237,-2.578366,-0.798658,0.935421,-5.265668,1.359791,7.880129,-0.302132,8.017725,-4.606033,7.962860,1.651770,4.922971,-2.070626], dtype = "float32")#candidate|4737|(2240,)|const|float32
call_4736 = relay.TupleGetItem(func_4510_call(relay.reshape(const_4737.astype('float32'), [2240,])), 3)
call_4738 = relay.TupleGetItem(func_4512_call(relay.reshape(const_4737.astype('float32'), [2240,])), 3)
uop_4748 = relay.atanh(const_4737.astype('float32')) # shape=(2240,)
func_1919_call = mod.get_global_var('func_1919')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_4753 = relay.var("var_4753", dtype = "uint8", shape = ())#candidate|4753|()|var|uint8
call_4752 = relay.TupleGetItem(func_1919_call(relay.reshape(var_4753.astype('uint8'), [])), 0)
call_4754 = relay.TupleGetItem(func_1921_call(relay.reshape(var_4753.astype('uint8'), [])), 0)
uop_4758 = relay.sin(call_4728.astype('float32')) # shape=(6, 8, 10)
uop_4760 = relay.sin(call_4729.astype('float32')) # shape=(6, 8, 10)
output = relay.Tuple([call_4736,uop_4748,call_4752,var_4753,uop_4758,])
output2 = relay.Tuple([call_4738,uop_4748,call_4754,var_4753,uop_4760,])
func_4764 = relay.Function([var_4753,], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
var_4765 = relay.var("var_4765", dtype = "uint8", shape = ())#candidate|4765|()|var|uint8
output = func_4764(var_4765)
func_4766 = relay.Function([var_4765], output)
mutated_mod['func_4766'] = func_4766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4806 = relay.TupleGetItem(func_3592_call(), 0)
call_4807 = relay.TupleGetItem(func_3593_call(), 0)
func_4308_call = mod.get_global_var('func_4308')
func_4311_call = mutated_mod.get_global_var('func_4311')
call_4823 = relay.TupleGetItem(func_4308_call(relay.reshape(call_4806.astype('uint8'), [6, 8, 10])), 1)
call_4824 = relay.TupleGetItem(func_4311_call(relay.reshape(call_4806.astype('uint8'), [6, 8, 10])), 1)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4830 = relay.TupleGetItem(func_3981_call(), 0)
call_4831 = relay.TupleGetItem(func_3983_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4839 = relay.TupleGetItem(func_3981_call(), 0)
call_4840 = relay.TupleGetItem(func_3983_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4844 = relay.TupleGetItem(func_3981_call(), 0)
call_4845 = relay.TupleGetItem(func_3983_call(), 0)
uop_4852 = relay.atan(call_4839.astype('float64')) # shape=(6, 8, 10)
uop_4854 = relay.atan(call_4840.astype('float64')) # shape=(6, 8, 10)
output = relay.Tuple([call_4806,call_4823,call_4830,call_4844,uop_4852,])
output2 = relay.Tuple([call_4807,call_4824,call_4831,call_4845,uop_4854,])
func_4866 = relay.Function([], output)
mod['func_4866'] = func_4866
mod = relay.transform.InferType()(mod)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mutated_mod.get_global_var('func_4866')
call_4867 = func_4866_call()
output = call_4867
func_4868 = relay.Function([], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_4890 = relay.TupleGetItem(func_3690_call(), 0)
call_4891 = relay.TupleGetItem(func_3691_call(), 0)
func_4704_call = mod.get_global_var('func_4704')
func_4708_call = mutated_mod.get_global_var('func_4708')
var_4893 = relay.var("var_4893", dtype = "int8", shape = (960,))#candidate|4893|(960,)|var|int8
const_4894 = relay.const([-10,8,8,-1,-6,-6,-8,-3,8,-7,7,5,3,-9,-3,-1,3,8,-3,-2,2,7,8,6,-3,2,-2,-7,-2,-7,-5,9,6,-9,-8,7,10,10,3,7,-3,-9,5,-10,-2,-5,-5,-7,2,1,9,-2,3,9,9,5,3,7,-8,7,5,-9,6,3,-1,10,4,7,3,5,-1,6,-4,4,-9,2,-4,-6,6,-8,4,5,1,7,-9,8,5,-4,6,-1,-8,2,-5,-2,-8,7,10,1,-5,7,-3,6,10,4,-9,-4,-9,8,-5,-6,3,-6,-7,-6,7,8,10,-5,5,8,-8,2,-1,3,1,10,5,8,-2,4,-6,9,-8,6,-6,9,9,3,-2,-7,-8,-10,2,2,-10,5,-9,-4,9,-4,6,-10,7,-8,-10,3,-9,-10,10,-7,8,-8,6,-6,2,1,5,7,-7,-2,-10,-4,9,10,-5,10,8,-2,8,9,-10,-1,6,-7,-5,-9,-6,-1,-6,-2,9,6,-10,4,-6,1,5,-1,2,-3,8,9,4,9,-3,3,-5,-1,-7,4,-10,-7,6,6,-9,4,-1,-3,3,5,5,1,-6,4,9,-7,2,2,4,-6,8,-2,3,2,-5,5,6,9,-8,5,2,4,8,4,7,6,-9,4,2,-9,4,9,10,2,-3,-5,1,-9,-7,-2,2,-2,4,5,2,5,8,6,1,7,-8,-9,4,-9,-10,7,-7,-4,-3,-9,3,-10,7,2,-5,4,-1,-2], dtype = "int32")#candidate|4894|(288,)|const|int32
call_4892 = relay.TupleGetItem(func_4704_call(relay.reshape(var_4893.astype('int8'), [6, 10, 16]), relay.reshape(const_4894.astype('int32'), [288,]), ), 2)
call_4895 = relay.TupleGetItem(func_4708_call(relay.reshape(var_4893.astype('int8'), [6, 10, 16]), relay.reshape(const_4894.astype('int32'), [288,]), ), 2)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_4923 = relay.TupleGetItem(func_2799_call(), 0)
call_4924 = relay.TupleGetItem(func_2800_call(), 0)
func_2884_call = mod.get_global_var('func_2884')
func_2887_call = mutated_mod.get_global_var('func_2887')
const_4932 = relay.const([-4.591965,4.160325,-3.108945,-5.973229,-6.850930,-6.606441,1.921451,-5.196336,1.061020,5.646274,-4.346733,-5.608666,2.355848,-9.326665,-8.049406,7.123537,-3.304928,8.275668,-4.348639,-9.577059,0.361269,0.535359,9.280976,2.953737,-5.368718,-0.224039,-5.562547,-7.948263,-1.805235,4.480134,7.266794,8.557533,6.203348,-2.031900,-6.857452,1.406576,-6.985648,-3.297025,-3.044581,-0.966267,-7.909834,4.085420,9.100654,-7.455505,1.640888,-7.210218,0.551836,-8.526457,-6.042826,-4.037929,0.989916,3.908231,-7.291547,2.168160,8.286521,2.832643,-1.582850,6.672561,-1.391693,8.886639,9.201350,7.011047,0.774260,3.168128,-0.361669,-4.075466,4.997041,8.773269,9.592972,-3.101552,9.877115,1.176581,7.460763,7.439225,-9.722665,8.200311,2.988774,-3.724330,-9.382163,-2.575807,0.700229,-2.773024,-9.724602,-7.743864,7.301097,7.701875,7.079441,-2.685832,8.072787,-8.660730,0.934628,6.077233,-3.701222,9.387059,6.287613,-0.499284,3.850810,-7.389029,-6.690527,5.741629,3.060299,-1.800379,8.479811,6.001523,5.633586,3.436119,3.254562,0.494178,-2.351349,-0.435253,-9.347452,6.646863,-8.777294,-4.317119,-1.652782,-1.782308,-6.311109,-9.736846,9.003862,-3.732298,-0.923954,3.062481,-8.167904,5.740389,-5.891089,-9.824632,-4.554594,-9.424736,2.180672,-7.933863,-8.909764,-8.956482,6.886301,7.045122,-6.767650,8.654198,4.166388,3.489947,1.849582,-0.507214,-8.176953,5.673180,-2.095283,0.491875,-0.582234,-4.910747,-1.006585,4.790950,3.968673,7.246280,-3.472388,-4.148919,7.236100,1.552312,5.955569,-4.423457,-9.545929,-1.781703,2.187037,7.166758,1.234755,7.009199,-0.149173,-9.600986,2.228391,8.545429,-1.349666,5.074499,6.149112,8.804020,-1.490493,3.477052,7.806620,-8.394052,1.157979,-6.038781,1.149080,7.483703,-4.503749,0.488307,9.306344,4.248380,7.653538,4.114977,6.109773,8.506455,5.474548,-9.234658,-7.787093,1.347376,-0.598607,9.078534,0.788438,2.495610,-8.479580,2.356562,-1.177254,5.574008,4.189807,-2.725364,0.181273,5.033934,-3.974432,2.062197,-9.043657,7.430324,-9.883725,-7.145173,6.324353,0.062723,-5.687485,3.183597,6.135256,-8.554067,0.491300,1.589322,-6.498174,2.374356,4.938741,-8.888872,-8.263564,-2.778364,-2.690898,-1.989855,3.761483,0.296288,9.279000,-5.430316,7.160085,0.683874,7.942084,-9.584076,3.947702,2.196374,-2.539469,-4.691456,9.728332,-7.199855,5.633783,7.283537,-7.958104,3.496652,7.331509,9.327291,-1.948614,8.224291,0.948407,-6.913573,-0.618797,5.005866,3.950138,4.352590,8.792197,-7.418018,-5.188148,5.445045,-7.727305,-1.214405,-6.891720,-0.958737,0.096597,-2.940819,7.354894,7.236896,-9.763343,0.736891,0.862468,-1.324444,-7.997333,5.001542,-0.914871,6.499231,0.327424,-5.003912,9.862374,4.124315,2.219411,-7.570248,-4.006668,-5.589668,-8.526465,-0.508094,-4.718438,-3.140533,0.275562,5.077607,-0.616623,-6.226494,2.906225,0.499286,0.213778,4.890716,4.890736,-7.831320,4.638832,-4.399777,-8.512413,3.421661,-2.896478,1.898571,-5.595438,3.582308,9.169079,-4.966242,6.079145,-8.185955,-9.141984,5.267072,5.741108,2.018923,-7.964699,-1.135599,-2.336388,0.110441,-2.223920,-6.613050,7.658407,0.294772,2.208381,6.362179,-8.841626,-1.486160,1.430904,-5.646935,4.987208,-1.580571,1.188413,-6.382433,-4.277724,-3.378993,-3.597514,8.931112,8.743427,-9.014363,6.690013,8.375893,4.457477,-2.444138,0.988032,0.120262,6.448158,-6.876397,9.865472,-9.201422,-9.747050,-0.472539,-4.707450,-3.093657,-1.062113,-9.498679,8.643692,6.465760,6.542810,5.491067,-3.527203,8.316873,-6.195888,9.990871,-1.871205,-0.314527,-3.923574,2.367266,-4.094255,-6.642184,4.358486,-7.700689,-3.977545,6.930520,-0.915004,-5.071740,-4.756450,-5.791487,6.218395,-1.029921,2.845510,-4.613667,2.629886,-3.077694,-4.953840,-2.866432,-3.954350,-9.109378,0.613145,-3.568946,-5.196689,-2.342683,9.921415,-0.762013,-1.856220,-3.285203,9.986198,-9.225440,2.642068,-8.251506,9.097910,4.286852,-2.953043,3.145153,3.217201,7.239453,-8.519391,-5.912463,-2.006901,1.922386,9.838662,-3.270606,-3.911910,2.294832,-4.831156,5.549237,7.548624,2.612063,-4.032964,9.401992,-6.807901,-8.135452,-0.504690,-2.017854,8.352198,-1.536120,-2.161544,6.784514,7.078664,-7.583586,-6.701927,5.889347,-6.923657,0.624156,7.807649,-2.453655,3.499852,6.778499,-3.288997,-8.620948,1.624020,-4.090619,-3.261745,-5.599063,7.549806,3.638124,8.567116,7.138221,5.976456,-6.201442,5.877784,-8.298901,0.991109,-8.252011,-8.109399,0.800515,4.576157,9.421110,2.131053,8.256664,-5.031421,6.952079,-2.544122,0.844702,2.972475,-0.946267,-4.091750,-3.907156,-7.335536,0.609760,2.708490,-4.693052,8.390187,-6.622015,-1.075480,7.567208,-2.361049,-4.223033,0.752959,-6.276594,8.807286,4.118639,-0.399488,-8.677996,-2.799242,6.282635,-9.281257,6.738546,9.612173,0.484012,5.140477,-5.281319,1.647632,-5.729204,-5.260184,9.051226,-9.421962,0.972611,-8.508824,5.191870,-3.306237,5.957946,5.224417,-7.074198,-4.640639,-6.037207,-8.010057,-4.034467,5.799268,-4.041684,3.159779,6.663501,-5.801116,-3.003779,-9.118636,6.806724,-1.950890,-9.679496,6.418528,-3.734566,-1.991023,-4.583574,7.695423,-4.839484,6.887013,-4.310797,-6.014449,-6.865309,0.300985,-7.860058,4.967948,-3.342477,-7.628660,0.508987,0.235713,7.941667,-4.930341,-2.062063,-1.119096,-2.844971,0.069672,1.574959,-4.446727,-2.491437,-8.399173,-6.306915,-6.182419,-3.418755,9.278132,1.955557,1.580030,-1.493457,-1.934152,-7.000859,5.283465,-0.545923,3.392327,-3.233203,-8.904835,3.815021,0.391949,-9.196910,-6.103955,-1.421468,-1.357646,-1.402021,8.813843,0.749590,0.067399,-8.268462,-6.337192,2.054093,-8.853531,6.744900,-0.782284,-7.053078,-8.884291,-9.352412,3.712293,-6.926877,-2.905399,2.793927,8.397755,7.537279,-1.160942,9.761478,-9.493175,6.354814,1.654988,0.787250,8.589749,2.899072,-7.246771,8.224061,1.948223,0.411766,-0.315782,6.710503,8.602766,7.711130,-2.353738,-2.691092,3.234056,-6.874249,0.434164,5.353604,8.512271,-3.242177,-3.446169,1.069761,-4.653288,0.574484,0.371579,-4.444706,6.570401,8.696096,6.121044,-7.717340,2.765556,2.477881,0.371652,9.191322,3.127396,-5.880642,3.410400,7.945726,9.312910,0.476451,8.723217,7.580485,0.621874,3.532505,2.974846,7.892715,-6.268418,7.588489,9.990842,-6.583941,-6.808080,-9.934606,-5.319514,3.340371,-0.235205,-8.034915,0.269011,-9.805050,-0.883836,3.928092,-2.718371,-7.994405,9.515943,-7.592381,0.724068,3.201488,2.562545,6.041351,-5.234461,0.248572,8.039393,-5.386503,-5.879970,1.230655,-6.145224,-8.185152,-1.043778,9.187187,-3.642630,-7.296906,-7.869072,2.729302,-7.286158,1.158184,-3.765722,9.514108,9.708164,-0.515420,2.967455,-6.374921,-8.790481,-3.639387,-3.946832,-8.594401,5.869506,-7.126086,-2.978369,9.949998,-6.965342,9.528092,-7.807484,8.676197,7.220517,9.046202,8.738532,-7.345698,-8.248642,-1.848247,3.042729,1.700619,-3.370625,-7.966493,4.285237,0.954165,5.057984,-7.241505,4.453263,1.452658,4.569733,8.260232,-5.051067,-7.289165,-1.485329,7.934223,3.885445,-7.709190,-3.645466,9.249917,4.176138,-7.769452,5.954068,-0.401632,-3.128303,8.177881,-1.332784,-4.836897,0.338404,9.735304,-6.752260,5.138337,4.038457,7.751444,-4.911378,5.610559,3.470511,-7.521258,1.570035,3.463837,-5.134108,4.041256,-1.333096,-1.737587,6.144426,5.513319,-4.126151,2.490055,5.883968,-2.933474,5.886607,5.885955,3.681858,-5.371162,-9.255762,-7.720547,-7.031462,1.684644,2.799385,-1.976785,5.696508,-1.846212,-6.952420,2.264797,-5.765308,-4.303170,3.747730,-6.044006,3.006411,1.454775,8.956137,9.793804,-1.309611,-4.721107,-5.871987,-1.901161,-5.793505,6.849105,-9.541424,-5.251447,-8.270218,7.646744,-5.731446,-4.926360,-5.549683,6.117939,9.276959,5.042194,2.047291,-9.189134,0.667457,0.443078,7.877289,-5.631692,1.591039,0.051303,7.350411,-5.522699,-4.053023,-6.430130,-8.003821,-9.320237,-7.619305,3.861638,0.407601,3.218893,-3.180130,2.332752,0.657252,-7.537719,-6.412677,4.266034,-1.671052,-7.483903,-9.005967,3.860417,-0.309423,3.911726,2.878736,4.463231,-1.927189,2.389358,0.767913,-5.884153,6.269281,-0.244848,-1.319439,9.421249,2.759984,-4.323593,-0.568852,-1.202536,7.253023,5.422510,0.474061,-2.774423,7.823395,-6.468471,-9.094728,-1.443160,8.631029,1.547444], dtype = "float32")#candidate|4932|(832,)|const|float32
var_4933 = relay.var("var_4933", dtype = "float32", shape = (280, 8))#candidate|4933|(280, 8)|var|float32
call_4931 = relay.TupleGetItem(func_2884_call(relay.reshape(const_4932.astype('float32'), [832,]), relay.reshape(var_4933.astype('float32'), [2240,]), ), 3)
call_4934 = relay.TupleGetItem(func_2887_call(relay.reshape(const_4932.astype('float32'), [832,]), relay.reshape(var_4933.astype('float32'), [2240,]), ), 3)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4992 = relay.TupleGetItem(func_3592_call(), 0)
call_4993 = relay.TupleGetItem(func_3593_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3427_call = mutated_mod.get_global_var('func_3427')
var_5001 = relay.var("var_5001", dtype = "bool", shape = (520,))#candidate|5001|(520,)|var|bool
call_5000 = relay.TupleGetItem(func_3424_call(relay.reshape(var_5001.astype('bool'), [130, 4])), 0)
call_5002 = relay.TupleGetItem(func_3427_call(relay.reshape(var_5001.astype('bool'), [130, 4])), 0)
var_5040 = relay.var("var_5040", dtype = "float32", shape = (2240,))#candidate|5040|(2240,)|var|float32
bop_5041 = relay.equal(call_4931.astype('bool'), relay.reshape(var_5040.astype('bool'), relay.shape_of(call_4931))) # shape=(2240,)
bop_5044 = relay.equal(call_4934.astype('bool'), relay.reshape(var_5040.astype('bool'), relay.shape_of(call_4934))) # shape=(2240,)
func_3475_call = mod.get_global_var('func_3475')
func_3480_call = mutated_mod.get_global_var('func_3480')
var_5052 = relay.var("var_5052", dtype = "float64", shape = (195, 1))#candidate|5052|(195, 1)|var|float64
const_5053 = relay.const([-4.996759,3.524451,6.930898,6.545112,6.221070,-3.037638,-9.096727,4.652528,5.951742,3.281169,-1.633327,-8.812568,7.973115,1.410821,-9.691620,3.793564,-5.788902,-5.553650,-6.465392,1.584915,-5.137327,-7.521434,4.977981,-1.987191,-7.018140,1.892570,9.604233,-8.097805,7.922259,-4.366450,-0.762779,7.440119,-8.026105,8.733049,7.399935,-3.198979,-0.973314,-9.176365,-4.505489], dtype = "float32")#candidate|5053|(39,)|const|float32
call_5051 = relay.TupleGetItem(func_3475_call(relay.reshape(var_5052.astype('float64'), [13, 5, 3]), relay.reshape(var_5052.astype('float64'), [13, 5, 3]), relay.reshape(const_5053.astype('float32'), [13, 3]), ), 2)
call_5054 = relay.TupleGetItem(func_3480_call(relay.reshape(var_5052.astype('float64'), [13, 5, 3]), relay.reshape(var_5052.astype('float64'), [13, 5, 3]), relay.reshape(const_5053.astype('float32'), [13, 3]), ), 2)
bop_5064 = relay.multiply(var_5001.astype('int8'), var_5052.astype('int8')) # shape=(195, 520)
func_4308_call = mod.get_global_var('func_4308')
func_4311_call = mutated_mod.get_global_var('func_4311')
call_5072 = relay.TupleGetItem(func_4308_call(relay.reshape(call_4992.astype('uint8'), [6, 8, 10])), 2)
call_5073 = relay.TupleGetItem(func_4311_call(relay.reshape(call_4992.astype('uint8'), [6, 8, 10])), 2)
output = relay.Tuple([call_4890,call_4892,var_4893,const_4894,call_4923,const_4932,var_4933,call_4992,call_5000,bop_5041,call_5051,const_5053,bop_5064,call_5072,])
output2 = relay.Tuple([call_4891,call_4895,var_4893,const_4894,call_4924,const_4932,var_4933,call_4993,call_5002,bop_5044,call_5054,const_5053,bop_5064,call_5073,])
func_5080 = relay.Function([var_4893,var_4933,var_5001,var_5040,var_5052,], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
var_5081 = relay.var("var_5081", dtype = "int8", shape = (960,))#candidate|5081|(960,)|var|int8
var_5082 = relay.var("var_5082", dtype = "float32", shape = (280, 8))#candidate|5082|(280, 8)|var|float32
var_5083 = relay.var("var_5083", dtype = "bool", shape = (520,))#candidate|5083|(520,)|var|bool
var_5084 = relay.var("var_5084", dtype = "float32", shape = (2240,))#candidate|5084|(2240,)|var|float32
var_5085 = relay.var("var_5085", dtype = "float64", shape = (195, 1))#candidate|5085|(195, 1)|var|float64
output = func_5080(var_5081,var_5082,var_5083,var_5084,var_5085,)
func_5086 = relay.Function([var_5081,var_5082,var_5083,var_5084,var_5085,], output)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5115 = relay.TupleGetItem(func_3592_call(), 0)
call_5116 = relay.TupleGetItem(func_3593_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3427_call = mutated_mod.get_global_var('func_3427')
var_5121 = relay.var("var_5121", dtype = "bool", shape = (520,))#candidate|5121|(520,)|var|bool
call_5120 = relay.TupleGetItem(func_3424_call(relay.reshape(var_5121.astype('bool'), [130, 4])), 1)
call_5122 = relay.TupleGetItem(func_3427_call(relay.reshape(var_5121.astype('bool'), [130, 4])), 1)
var_5127 = relay.var("var_5127", dtype = "uint8", shape = (6, 8, 10))#candidate|5127|(6, 8, 10)|var|uint8
bop_5128 = relay.equal(call_5115.astype('bool'), relay.reshape(var_5127.astype('bool'), relay.shape_of(call_5115))) # shape=(6, 8, 10)
bop_5131 = relay.equal(call_5116.astype('bool'), relay.reshape(var_5127.astype('bool'), relay.shape_of(call_5116))) # shape=(6, 8, 10)
func_4628_call = mod.get_global_var('func_4628')
func_4629_call = mutated_mod.get_global_var('func_4629')
call_5137 = relay.TupleGetItem(func_4628_call(), 0)
call_5138 = relay.TupleGetItem(func_4629_call(), 0)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_5157 = relay.TupleGetItem(func_2799_call(), 0)
call_5158 = relay.TupleGetItem(func_2800_call(), 0)
output = relay.Tuple([call_5120,var_5121,bop_5128,call_5137,call_5157,])
output2 = relay.Tuple([call_5122,var_5121,bop_5131,call_5138,call_5158,])
func_5190 = relay.Function([var_5121,var_5127,], output)
mod['func_5190'] = func_5190
mod = relay.transform.InferType()(mod)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mutated_mod.get_global_var('func_5190')
var_5192 = relay.var("var_5192", dtype = "bool", shape = (520,))#candidate|5192|(520,)|var|bool
var_5193 = relay.var("var_5193", dtype = "uint8", shape = (6, 8, 10))#candidate|5193|(6, 8, 10)|var|uint8
call_5191 = func_5190_call(var_5192,var_5193,)
output = call_5191
func_5194 = relay.Function([var_5192,var_5193,], output)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mod.get_global_var('func_4628')
func_4629_call = mutated_mod.get_global_var('func_4629')
call_5203 = relay.TupleGetItem(func_4628_call(), 0)
call_5204 = relay.TupleGetItem(func_4629_call(), 0)
uop_5213 = relay.exp(call_5203.astype('float64')) # shape=(6, 8, 10)
uop_5215 = relay.exp(call_5204.astype('float64')) # shape=(6, 8, 10)
uop_5228 = relay.log2(uop_5213.astype('float32')) # shape=(6, 8, 10)
uop_5230 = relay.log2(uop_5215.astype('float32')) # shape=(6, 8, 10)
output = relay.Tuple([uop_5228,])
output2 = relay.Tuple([uop_5230,])
func_5240 = relay.Function([], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5241 = func_5240_call()
output = call_5241
func_5242 = relay.Function([], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_5280 = relay.TupleGetItem(func_3004_call(), 0)
call_5281 = relay.TupleGetItem(func_3006_call(), 0)
output = relay.Tuple([call_5280,])
output2 = relay.Tuple([call_5281,])
func_5290 = relay.Function([], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mutated_mod.get_global_var('func_5290')
call_5291 = func_5290_call()
output = call_5291
func_5292 = relay.Function([], output)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_5300 = relay.TupleGetItem(func_2966_call(), 0)
call_5301 = relay.TupleGetItem(func_2967_call(), 0)
func_1624_call = mod.get_global_var('func_1624')
func_1627_call = mutated_mod.get_global_var('func_1627')
var_5317 = relay.var("var_5317", dtype = "uint64", shape = (360,))#candidate|5317|(360,)|var|uint64
call_5316 = relay.TupleGetItem(func_1624_call(relay.reshape(var_5317.astype('uint64'), [6, 15, 4])), 0)
call_5318 = relay.TupleGetItem(func_1627_call(relay.reshape(var_5317.astype('uint64'), [6, 15, 4])), 0)
func_2854_call = mod.get_global_var('func_2854')
func_2858_call = mutated_mod.get_global_var('func_2858')
var_5321 = relay.var("var_5321", dtype = "float32", shape = (78,))#candidate|5321|(78,)|var|float32
const_5322 = relay.const(10, dtype = "uint8")#candidate|5322|()|const|uint8
call_5320 = relay.TupleGetItem(func_2854_call(relay.reshape(var_5321.astype('float32'), [78,]), relay.reshape(const_5322.astype('uint8'), []), ), 1)
call_5323 = relay.TupleGetItem(func_2858_call(relay.reshape(var_5321.astype('float32'), [78,]), relay.reshape(const_5322.astype('uint8'), []), ), 1)
output = relay.Tuple([call_5300,call_5316,var_5317,call_5320,var_5321,const_5322,])
output2 = relay.Tuple([call_5301,call_5318,var_5317,call_5323,var_5321,const_5322,])
func_5324 = relay.Function([var_5317,var_5321,], output)
mod['func_5324'] = func_5324
mod = relay.transform.InferType()(mod)
var_5325 = relay.var("var_5325", dtype = "uint64", shape = (360,))#candidate|5325|(360,)|var|uint64
var_5326 = relay.var("var_5326", dtype = "float32", shape = (78,))#candidate|5326|(78,)|var|float32
output = func_5324(var_5325,var_5326,)
func_5327 = relay.Function([var_5325,var_5326,], output)
mutated_mod['func_5327'] = func_5327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5339 = relay.TupleGetItem(func_3981_call(), 0)
call_5340 = relay.TupleGetItem(func_3983_call(), 0)
output = relay.Tuple([call_5339,])
output2 = relay.Tuple([call_5340,])
func_5349 = relay.Function([], output)
mod['func_5349'] = func_5349
mod = relay.transform.InferType()(mod)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5349_call = mutated_mod.get_global_var('func_5349')
call_5350 = func_5349_call()
output = call_5350
func_5351 = relay.Function([], output)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_5427 = relay.TupleGetItem(func_3690_call(), 0)
call_5428 = relay.TupleGetItem(func_3691_call(), 0)
func_4031_call = mod.get_global_var('func_4031')
func_4033_call = mutated_mod.get_global_var('func_4033')
call_5442 = relay.TupleGetItem(func_4031_call(relay.reshape(call_5427.astype('uint8'), [6, 8, 10])), 2)
call_5443 = relay.TupleGetItem(func_4033_call(relay.reshape(call_5427.astype('uint8'), [6, 8, 10])), 2)
output = relay.Tuple([call_5427,call_5442,])
output2 = relay.Tuple([call_5428,call_5443,])
func_5461 = relay.Function([], output)
mod['func_5461'] = func_5461
mod = relay.transform.InferType()(mod)
mutated_mod['func_5461'] = func_5461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5461_call = mutated_mod.get_global_var('func_5461')
call_5462 = func_5461_call()
output = call_5462
func_5463 = relay.Function([], output)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_5490 = relay.TupleGetItem(func_3690_call(), 0)
call_5491 = relay.TupleGetItem(func_3691_call(), 0)
output = call_5490
output2 = call_5491
func_5504 = relay.Function([], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
output = func_5504()
func_5505 = relay.Function([], output)
mutated_mod['func_5505'] = func_5505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_5530 = relay.TupleGetItem(func_3004_call(), 0)
call_5531 = relay.TupleGetItem(func_3006_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3427_call = mutated_mod.get_global_var('func_3427')
var_5533 = relay.var("var_5533", dtype = "bool", shape = (520,))#candidate|5533|(520,)|var|bool
call_5532 = relay.TupleGetItem(func_3424_call(relay.reshape(var_5533.astype('bool'), [130, 4])), 1)
call_5534 = relay.TupleGetItem(func_3427_call(relay.reshape(var_5533.astype('bool'), [130, 4])), 1)
func_3532_call = mod.get_global_var('func_3532')
func_3535_call = mutated_mod.get_global_var('func_3535')
var_5539 = relay.var("var_5539", dtype = "float32", shape = (280,))#candidate|5539|(280,)|var|float32
const_5540 = relay.const(-1, dtype = "uint8")#candidate|5540|()|const|uint8
call_5538 = relay.TupleGetItem(func_3532_call(relay.reshape(var_5539.astype('float32'), [5, 8, 7]), relay.reshape(const_5540.astype('uint8'), []), ), 3)
call_5541 = relay.TupleGetItem(func_3535_call(relay.reshape(var_5539.astype('float32'), [5, 8, 7]), relay.reshape(const_5540.astype('uint8'), []), ), 3)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_5544 = relay.TupleGetItem(func_2966_call(), 0)
call_5545 = relay.TupleGetItem(func_2967_call(), 0)
uop_5546 = relay.sin(call_5532.astype('float64')) # shape=(26, 3)
uop_5548 = relay.sin(call_5534.astype('float64')) # shape=(26, 3)
func_2854_call = mod.get_global_var('func_2854')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_5556 = relay.TupleGetItem(func_2854_call(relay.reshape(uop_5546.astype('float32'), [78,]), relay.reshape(call_5538.astype('uint8'), []), ), 2)
call_5557 = relay.TupleGetItem(func_2858_call(relay.reshape(uop_5546.astype('float32'), [78,]), relay.reshape(call_5538.astype('uint8'), []), ), 2)
bop_5563 = relay.greater(uop_5546.astype('bool'), const_5540.astype('bool')) # shape=(26, 3)
bop_5566 = relay.greater(uop_5548.astype('bool'), const_5540.astype('bool')) # shape=(26, 3)
output = relay.Tuple([call_5530,var_5533,call_5538,var_5539,call_5544,call_5556,bop_5563,])
output2 = relay.Tuple([call_5531,var_5533,call_5541,var_5539,call_5545,call_5557,bop_5566,])
func_5567 = relay.Function([var_5533,var_5539,], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mutated_mod.get_global_var('func_5567')
var_5569 = relay.var("var_5569", dtype = "bool", shape = (520,))#candidate|5569|(520,)|var|bool
var_5570 = relay.var("var_5570", dtype = "float32", shape = (280,))#candidate|5570|(280,)|var|float32
call_5568 = func_5567_call(var_5569,var_5570,)
output = call_5568
func_5571 = relay.Function([var_5569,var_5570,], output)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_5596 = relay.TupleGetItem(func_2799_call(), 0)
call_5597 = relay.TupleGetItem(func_2800_call(), 0)
output = relay.Tuple([call_5596,])
output2 = relay.Tuple([call_5597,])
func_5604 = relay.Function([], output)
mod['func_5604'] = func_5604
mod = relay.transform.InferType()(mod)
mutated_mod['func_5604'] = func_5604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5604_call = mutated_mod.get_global_var('func_5604')
call_5605 = func_5604_call()
output = call_5605
func_5606 = relay.Function([], output)
mutated_mod['func_5606'] = func_5606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5658 = relay.var("var_5658", dtype = "float64", shape = (4, 3, 5))#candidate|5658|(4, 3, 5)|var|float64
const_5659 = relay.const([[[-9.990594,-1.134157,-9.354671,0.151649,6.454952],[-3.631787,0.938294,-4.152682,-2.786110,2.225574],[1.217249,8.289963,3.643889,-1.030608,-2.779031]],[[1.064194,-5.999213,-9.403644,-6.472473,-8.077199],[0.055034,-0.672714,7.768619,4.135802,2.076399],[9.616648,-1.422968,9.679760,3.203689,1.920646]],[[8.024507,0.077309,-3.588795,5.251516,2.887011],[7.475022,-6.280796,5.341572,-9.118924,0.213869],[4.384136,-3.753392,-6.790027,3.309004,7.930045]],[[7.754857,-7.622583,-1.994376,-5.137628,4.192587],[7.528860,2.442745,-3.756774,-7.527148,9.006689],[-7.055554,-1.799319,-7.208231,-1.909372,-6.540103]]], dtype = "float64")#candidate|5659|(4, 3, 5)|const|float64
bop_5660 = relay.power(var_5658.astype('float64'), relay.reshape(const_5659.astype('float64'), relay.shape_of(var_5658))) # shape=(4, 3, 5)
bop_5664 = relay.bitwise_xor(const_5659.astype('uint16'), relay.reshape(var_5658.astype('uint16'), relay.shape_of(const_5659))) # shape=(4, 3, 5)
output = relay.Tuple([bop_5660,bop_5664,])
output2 = relay.Tuple([bop_5660,bop_5664,])
func_5668 = relay.Function([var_5658,], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5669 = relay.var("var_5669", dtype = "float64", shape = (4, 3, 5))#candidate|5669|(4, 3, 5)|var|float64
func_5668_call = mutated_mod.get_global_var('func_5668')
call_5670 = func_5668_call(var_5669)
output = call_5670
func_5671 = relay.Function([var_5669], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5678 = relay.var("var_5678", dtype = "float64", shape = (2, 2, 4))#candidate|5678|(2, 2, 4)|var|float64
uop_5679 = relay.log10(var_5678.astype('float64')) # shape=(2, 2, 4)
bop_5682 = relay.left_shift(uop_5679.astype('int32'), relay.reshape(var_5678.astype('int32'), relay.shape_of(uop_5679))) # shape=(2, 2, 4)
output = relay.Tuple([bop_5682,])
output2 = relay.Tuple([bop_5682,])
func_5685 = relay.Function([var_5678,], output)
mod['func_5685'] = func_5685
mod = relay.transform.InferType()(mod)
mutated_mod['func_5685'] = func_5685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5686 = relay.var("var_5686", dtype = "float64", shape = (2, 2, 4))#candidate|5686|(2, 2, 4)|var|float64
func_5685_call = mutated_mod.get_global_var('func_5685')
call_5687 = func_5685_call(var_5686)
output = call_5687
func_5688 = relay.Function([var_5686], output)
mutated_mod['func_5688'] = func_5688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_5720 = relay.TupleGetItem(func_3632_call(), 0)
call_5721 = relay.TupleGetItem(func_3634_call(), 0)
output = relay.Tuple([call_5720,])
output2 = relay.Tuple([call_5721,])
func_5722 = relay.Function([], output)
mod['func_5722'] = func_5722
mod = relay.transform.InferType()(mod)
output = func_5722()
func_5723 = relay.Function([], output)
mutated_mod['func_5723'] = func_5723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_5743 = func_3190_call()
call_5744 = func_3190_call()
uop_5750 = relay.sqrt(call_5743.astype('float32')) # shape=(6, 8, 10)
uop_5752 = relay.sqrt(call_5744.astype('float32')) # shape=(6, 8, 10)
output = relay.Tuple([uop_5750,])
output2 = relay.Tuple([uop_5752,])
func_5769 = relay.Function([], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5769_call = mutated_mod.get_global_var('func_5769')
call_5770 = func_5769_call()
output = call_5770
func_5771 = relay.Function([], output)
mutated_mod['func_5771'] = func_5771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5461_call = mod.get_global_var('func_5461')
func_5463_call = mutated_mod.get_global_var('func_5463')
call_5800 = relay.TupleGetItem(func_5461_call(), 0)
call_5801 = relay.TupleGetItem(func_5463_call(), 0)
output = relay.Tuple([call_5800,])
output2 = relay.Tuple([call_5801,])
func_5809 = relay.Function([], output)
mod['func_5809'] = func_5809
mod = relay.transform.InferType()(mod)
output = func_5809()
func_5810 = relay.Function([], output)
mutated_mod['func_5810'] = func_5810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5818 = relay.var("var_5818", dtype = "int16", shape = (12, 12, 6))#candidate|5818|(12, 12, 6)|var|int16
var_5819 = relay.var("var_5819", dtype = "int16", shape = (12, 12, 6))#candidate|5819|(12, 12, 6)|var|int16
bop_5820 = relay.less_equal(var_5818.astype('bool'), relay.reshape(var_5819.astype('bool'), relay.shape_of(var_5818))) # shape=(12, 12, 6)
output = relay.Tuple([bop_5820,])
output2 = relay.Tuple([bop_5820,])
func_5831 = relay.Function([var_5818,var_5819,], output)
mod['func_5831'] = func_5831
mod = relay.transform.InferType()(mod)
var_5832 = relay.var("var_5832", dtype = "int16", shape = (12, 12, 6))#candidate|5832|(12, 12, 6)|var|int16
var_5833 = relay.var("var_5833", dtype = "int16", shape = (12, 12, 6))#candidate|5833|(12, 12, 6)|var|int16
output = func_5831(var_5832,var_5833,)
func_5834 = relay.Function([var_5832,var_5833,], output)
mutated_mod['func_5834'] = func_5834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_5853 = relay.TupleGetItem(func_3690_call(), 0)
call_5854 = relay.TupleGetItem(func_3691_call(), 0)
output = relay.Tuple([call_5853,])
output2 = relay.Tuple([call_5854,])
func_5887 = relay.Function([], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mutated_mod.get_global_var('func_5887')
call_5888 = func_5887_call()
output = call_5888
func_5889 = relay.Function([], output)
mutated_mod['func_5889'] = func_5889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4655_call = mod.get_global_var('func_4655')
func_4656_call = mutated_mod.get_global_var('func_4656')
call_5932 = func_4655_call()
call_5933 = func_4655_call()
uop_5944 = relay.sigmoid(call_5932.astype('float64')) # shape=(6, 8, 10)
uop_5946 = relay.sigmoid(call_5933.astype('float64')) # shape=(6, 8, 10)
func_5349_call = mod.get_global_var('func_5349')
func_5351_call = mutated_mod.get_global_var('func_5351')
call_5949 = relay.TupleGetItem(func_5349_call(), 0)
call_5950 = relay.TupleGetItem(func_5351_call(), 0)
output = relay.Tuple([uop_5944,call_5949,])
output2 = relay.Tuple([uop_5946,call_5950,])
func_5961 = relay.Function([], output)
mod['func_5961'] = func_5961
mod = relay.transform.InferType()(mod)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mutated_mod.get_global_var('func_5961')
call_5962 = func_5961_call()
output = call_5962
func_5963 = relay.Function([], output)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_5991 = relay.TupleGetItem(func_3004_call(), 0)
call_5992 = relay.TupleGetItem(func_3006_call(), 0)
output = relay.Tuple([call_5991,])
output2 = relay.Tuple([call_5992,])
func_5998 = relay.Function([], output)
mod['func_5998'] = func_5998
mod = relay.transform.InferType()(mod)
output = func_5998()
func_5999 = relay.Function([], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6008 = relay.var("var_6008", dtype = "float64", shape = (10, 5, 11))#candidate|6008|(10, 5, 11)|var|float64
uop_6009 = relay.log10(var_6008.astype('float64')) # shape=(10, 5, 11)
output = uop_6009
output2 = uop_6009
func_6018 = relay.Function([var_6008,], output)
mod['func_6018'] = func_6018
mod = relay.transform.InferType()(mod)
mutated_mod['func_6018'] = func_6018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6019 = relay.var("var_6019", dtype = "float64", shape = (10, 5, 11))#candidate|6019|(10, 5, 11)|var|float64
func_6018_call = mutated_mod.get_global_var('func_6018')
call_6020 = func_6018_call(var_6019)
output = call_6020
func_6021 = relay.Function([var_6019], output)
mutated_mod['func_6021'] = func_6021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_6032 = relay.TupleGetItem(func_2898_call(), 0)
call_6033 = relay.TupleGetItem(func_2900_call(), 0)
output = relay.Tuple([call_6032,])
output2 = relay.Tuple([call_6033,])
func_6035 = relay.Function([], output)
mod['func_6035'] = func_6035
mod = relay.transform.InferType()(mod)
output = func_6035()
func_6036 = relay.Function([], output)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5769_call = mod.get_global_var('func_5769')
func_5771_call = mutated_mod.get_global_var('func_5771')
call_6052 = relay.TupleGetItem(func_5769_call(), 0)
call_6053 = relay.TupleGetItem(func_5771_call(), 0)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_6060 = relay.TupleGetItem(func_5998_call(), 0)
call_6061 = relay.TupleGetItem(func_5999_call(), 0)
output = relay.Tuple([call_6052,call_6060,])
output2 = relay.Tuple([call_6053,call_6061,])
func_6071 = relay.Function([], output)
mod['func_6071'] = func_6071
mod = relay.transform.InferType()(mod)
mutated_mod['func_6071'] = func_6071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6071_call = mutated_mod.get_global_var('func_6071')
call_6072 = func_6071_call()
output = call_6072
func_6073 = relay.Function([], output)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mod.get_global_var('func_5961')
func_5963_call = mutated_mod.get_global_var('func_5963')
call_6083 = relay.TupleGetItem(func_5961_call(), 0)
call_6084 = relay.TupleGetItem(func_5963_call(), 0)
func_1772_call = mod.get_global_var('func_1772')
func_1775_call = mutated_mod.get_global_var('func_1775')
const_6094 = relay.const([[3,3,-3],[-7,4,-10],[-2,-10,-7],[4,5,8],[-1,8,6],[-3,4,-1],[5,-5,-1],[5,-7,2],[9,-4,9],[2,6,3],[4,1,4],[-6,9,9],[-4,3,-7],[-5,-10,-3]], dtype = "uint16")#candidate|6094|(14, 3)|const|uint16
call_6093 = func_1772_call(relay.reshape(const_6094.astype('uint16'), [1, 7, 6]))
call_6095 = func_1772_call(relay.reshape(const_6094.astype('uint16'), [1, 7, 6]))
var_6097 = relay.var("var_6097", dtype = "float64", shape = (6, 8, 10))#candidate|6097|(6, 8, 10)|var|float64
bop_6098 = relay.greater(call_6083.astype('bool'), relay.reshape(var_6097.astype('bool'), relay.shape_of(call_6083))) # shape=(6, 8, 10)
bop_6101 = relay.greater(call_6084.astype('bool'), relay.reshape(var_6097.astype('bool'), relay.shape_of(call_6084))) # shape=(6, 8, 10)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_6115 = relay.TupleGetItem(func_5998_call(), 0)
call_6116 = relay.TupleGetItem(func_5999_call(), 0)
func_2884_call = mod.get_global_var('func_2884')
func_2887_call = mutated_mod.get_global_var('func_2887')
const_6134 = relay.const([-3.225340,4.401888,-1.787621,1.421146,8.628146,7.237350,-7.079865,7.469521,-0.580265,1.797575,-3.694957,-2.715408,5.819830,-3.637369,1.235750,-3.092075,-1.413351,8.214674,-2.959615,-2.739363,-9.621653,2.334650,-5.710096,0.863944,-9.420930,2.830029,-7.528435,2.580117,-3.336860,1.508654,-5.547089,5.992668,3.177942,6.179630,5.463529,0.427647,4.801467,-8.714612,4.975562,6.762203,5.996058,5.099179,-2.960027,7.843767,-5.706377,-5.449731,-2.788587,-6.984835,-3.526249,-8.491650,2.480578,-7.631808,-9.876878,-5.121318,-3.187086,-0.910793,-5.369349,-0.768045,-2.239082,0.004921,-9.832735,0.910307,0.437859,-4.452481,-4.416149,-7.735074,-8.331902,-0.980770,0.279202,-9.981275,-3.769235,0.006577,-2.576334,3.028915,-1.184855,-4.770070,-2.525050,0.652265,3.424351,-9.046705,-0.618337,0.703556,5.306752,-8.332345,-1.342921,-6.661349,5.711889,-9.073172,3.201327,-9.904513,-1.921538,-6.921274,8.929234,0.673180,2.143408,-5.768246,-7.657665,-2.304600,6.337449,-8.678542,-0.334238,5.336730,1.708710,0.399025,8.156375,-3.934594,-1.676753,6.570363,-4.522395,-0.207137,-8.164511,-1.423908,-5.025164,-1.123771,8.487087,-3.479664,8.791769,9.258841,5.065128,-8.726875,-8.193917,-8.032000,5.055254,-0.921484,-5.051154,-7.871244,9.857002,0.754597,8.747184,-2.376220,6.765501,-5.131755,-2.913138,4.537142,1.930863,-2.290797,-6.025740,-7.176959,-0.304463,8.138127,-9.799427,9.986923,-8.562576,7.003728,-4.588333,-6.019461,-3.254509,4.714403,-6.526355,-7.414067,-0.640525,-7.426895,-0.327241,-0.344311,3.239534,5.981397,5.961800,-1.681477,-9.168890,-6.014837,1.139129,-1.387300,3.971228,-5.136900,-9.316631,4.589887,8.565190,3.890294,4.358793,7.205806,9.179954,-1.407456,9.460034,7.950463,-2.110459,8.996660,-7.226726,-9.256541,7.711159,-1.183704,7.137914,-4.223071,7.077230,-9.563181,5.051410,1.944066,0.272504,-0.886794,-6.803732,-8.435235,6.882858,-6.451800,6.919954,7.918768,7.868215,-4.498685,-1.151331,-7.376836,-8.690370,-0.994547,-9.078508,-2.835837,9.724341,-5.550457,-7.857896,-8.079712,-0.678212,-7.139414,9.657180,-0.481178,6.746589,-9.043708,4.253190,7.752480,9.402634,-6.101402,7.568447,6.875267,6.599543,7.863969,-4.385785,2.249149,-1.635537,-5.044786,9.684535,1.536944,2.537067,-9.866667,-5.640830,-1.403383,0.467474,1.093129,-3.736442,3.863131,-5.547021,1.786240,4.772590,-8.179063,-0.154484,6.250304,3.065014,-5.416285,-1.814131,-6.546760,-2.026178,7.528790,1.992350,1.266481,3.313583,1.439597,2.347669,4.145084,3.447487,-5.970094,-8.891826,9.172381,-8.452219,2.755245,2.701125,8.746244,-8.292689,7.241932,0.623330,6.011819,-7.672678,7.089040,-3.553305,-1.105164,-6.443306,0.213870,-9.762494,-9.016936,5.362588,-8.088617,8.556572,-5.548384,-0.246539,5.257742,-2.402476,-9.071170,8.084029,-5.471667,-4.346382,4.808920,-3.920305,-1.763253,-8.426069,4.556144,-9.501636,-8.101110,-3.702589,2.541771,-7.347262,-6.503487,-7.250064,6.691495,-3.774052,2.790422,-2.600957,4.248656,6.520287,-9.926031,9.909273,9.890850,5.252904,7.259709,1.207404,-9.208317,-4.721967,-0.055941,8.027019,-7.166553,-2.393889,7.263194,9.212403,7.458569,-8.869864,-0.282294,8.987882,1.040541,1.268252,-6.799387,0.433341,-9.496350,-5.621652,-2.428003,7.192159,9.296093,-9.959890,-9.646707,-4.353506,3.611036,8.330557,-8.811002,5.945576,7.886413,-1.584992,3.787974,-5.025806,1.276952,7.281096,7.876324,6.563800,-4.842506,3.415329,1.776500,-8.066336,-5.764757,-0.837380,-8.748224,-0.204488,-5.104022,-7.014519,-3.450227,5.102646,5.680976,-8.957833,7.841292,7.883736,1.668639,2.488507,-5.632036,3.135469,1.561341,9.002600,-3.671292,-6.764553,9.421403,-0.146081,1.330004,8.021707,-3.550070,9.128356,0.782583,3.620210,5.729251,5.442084,-9.863541,-9.431053,-8.300069,-8.272364,4.184054,1.036352,5.927649,0.994831,-3.984844,5.103670,-1.084630,-7.544826,7.083622,-1.433003,-2.352199,1.458238,8.280714,8.596718,9.882220,-7.275962,-6.967026,7.301665,4.560707,-7.586536,-3.483779,9.169137,9.603839,-6.707110,7.641722,6.681657,7.248039,9.962200,6.472070,-6.918311,-1.488458,5.216514,6.947334,-1.487591,4.110662,-2.468128,-6.845143,-6.319991,8.691353,-5.615884,-8.908312,2.457296,-0.013529,-9.415034,3.422796,2.876186,8.740903,-0.703945,8.743670,9.011030,9.771246,-4.032055,7.770113,9.384537,-1.272158,-6.692122,-8.477544,-7.704881,-6.548226,-7.591482,4.169252,9.960142,-7.647792,0.152506,-4.542262,7.506399,-0.409998,0.996091,-0.878878,9.535789,-7.313788,8.429762,9.129343,-0.347044,-9.319892,5.221849,-5.528655,-3.940084,-6.517937,-9.843403,7.353715,-8.059506,-1.289428,3.727569,7.020308,2.452304,-1.144710,-6.005371,-2.984694,0.711587,0.387452,-3.160079,8.580965,-2.556612,8.006266,-7.545313,-3.117830,-6.886694,-3.667083,-8.875816,-2.989047,-2.218026,-9.086167,-7.892499,2.911480,-3.701260,-2.347241,-1.840314,6.835183,7.120371,1.428577,4.453758,4.442593,-8.555843,-4.038285,5.306224,-0.983072,4.644675,-3.010797,0.776973,-3.724444,-4.162640,9.107522,-2.499863,7.936244,4.940759,-7.837961,8.480340,-8.250856,2.389633,-3.496851,-1.368930,-9.349988,5.505022,1.099067,-6.764029,-5.536419,9.638485,5.142228,5.819840,8.794844,-3.318691,7.654372,0.225252,7.589077,-9.755524,8.950472,9.084076,6.309509,-9.646375,8.467927,-0.745089,5.265811,5.316296,0.011705,-3.869464,4.666241,-9.975239,-1.734981,0.584058,9.386470,4.130242,-0.040761,-4.937840,5.278665,-4.520193,-9.723944,3.617519,-3.375156,-0.466261,9.260548,4.582671,4.138362,8.590057,2.324826,-5.011566,9.892830,-7.679884,-8.829551,5.871470,7.223344,-0.480623,-0.625502,-5.479270,3.537025,-8.629872,1.704841,9.717697,-3.980414,-7.628953,4.579581,-3.051006,-5.725212,-7.764755,8.782426,-2.450915,-0.123012,-7.927419,-2.797615,3.618318,-0.104621,-8.318120,8.097038,-8.065370,6.059736,-3.488794,6.195425,0.008601,7.545111,-7.731015,1.313460,7.740541,-5.180493,-0.160274,-3.909640,-6.622419,4.098524,-5.340004,-9.920181,-4.834945,4.464816,9.163776,5.007695,-1.114212,-5.503534,-1.408588,-7.425975,6.512803,7.683398,0.601605,-4.293663,-4.282782,1.813249,-1.700541,-3.871618,2.822435,4.533536,-9.337435,8.084160,2.669798,-7.262327,9.121458,-6.205367,6.277265,-3.938711,6.471419,-1.283152,-7.958266,2.738669,2.461340,-7.307971,6.648605,6.914122,-5.146475,1.445931,8.842107,4.477297,-4.893137,2.855898,-9.760329,-6.494382,-7.817532,4.088980,-4.259973,-1.139949,-0.959678,-5.896356,-7.182738,-6.120944,-7.205019,9.613442,7.015694,-1.636046,-7.180984,2.239703,3.962555,-4.135993,-0.740761,3.432447,-0.860238,-1.615396,-3.827522,4.435577,7.863827,0.236636,1.272211,7.930399,-7.868443,-4.078518,6.891899,8.874705,3.461831,4.458558,4.404069,5.614927,-4.718311,3.459646,-3.015638,8.715296,-0.799517,-7.923797,4.945552,-0.958060,9.093489,-8.419436,-0.928703,-0.722001,-9.253604,6.413248,-9.562032,5.177673,-6.852254,1.950189,1.507259,-6.327796,5.513079,9.960294,-0.243953,-1.927839,-8.609736,6.527949,-3.885640,6.076128,6.007910,8.075804,2.055391,-8.679087,3.358969,-9.826583,-3.079826,-7.000944,0.791305,4.356557,5.946650,-4.782626,-0.986560,-1.680744,8.284777,8.302498,-1.470442,-2.980755,-8.066998,8.213732,-0.214483,-9.717015,3.356950,-8.939894,4.722057,-5.766607,-9.189650,-8.557209,-5.908192,2.560583,-7.209951,-5.845059,0.920892,-8.989200,5.711626,0.021803,-2.589733,5.580704,-9.151369,-0.225756,3.858360,-3.020939,2.886608,-2.189626,8.087622,2.900306,7.867191,-7.079147,-7.007395,-8.001081,4.008901,4.407049,6.954179,0.515988,7.230999,5.755969,-1.040367,-8.763960,1.395099,-9.408779,-9.764175,-6.337560,0.123584,0.879420,-5.867409,-0.649773,7.154147,2.673097,-1.246776,7.865057,-6.406184,-0.343868,-3.728859,7.307317,8.360047,4.795198,2.538043,0.028489,-9.286973,9.466434,-8.996616,-5.130255,7.280725,8.176225,-8.828193,7.213331,5.594970,-8.202269,-7.200629,5.863326,4.884803,-9.707530,7.624188,0.015217,-1.994406,-3.792652,-8.401240,-7.940373,-1.262308,4.218430,-1.658218,7.182588,-8.982429,-3.798382,6.507454,2.112902,-7.565915,-2.597076,4.301081,9.745367,-4.608646,4.869920,9.710165,-3.985626,4.399110,-1.471628,8.308236,1.876723,5.494608,-6.418927,-4.717706,9.808302,8.068511,-4.621030,-2.104007,-2.697461,5.400776,2.199579], dtype = "float32")#candidate|6134|(832,)|const|float32
var_6135 = relay.var("var_6135", dtype = "float32", shape = (2, 1120))#candidate|6135|(2, 1120)|var|float32
call_6133 = relay.TupleGetItem(func_2884_call(relay.reshape(const_6134.astype('float32'), [832,]), relay.reshape(var_6135.astype('float32'), [2240,]), ), 3)
call_6136 = relay.TupleGetItem(func_2887_call(relay.reshape(const_6134.astype('float32'), [832,]), relay.reshape(var_6135.astype('float32'), [2240,]), ), 3)
bop_6137 = relay.right_shift(call_6093.astype('uint64'), relay.reshape(const_6094.astype('uint64'), relay.shape_of(call_6093))) # shape=(1, 7, 6)
bop_6140 = relay.right_shift(call_6095.astype('uint64'), relay.reshape(const_6094.astype('uint64'), relay.shape_of(call_6095))) # shape=(1, 7, 6)
output = relay.Tuple([bop_6098,call_6115,call_6133,const_6134,var_6135,bop_6137,])
output2 = relay.Tuple([bop_6101,call_6116,call_6136,const_6134,var_6135,bop_6140,])
func_6144 = relay.Function([var_6097,var_6135,], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
var_6145 = relay.var("var_6145", dtype = "float64", shape = (6, 8, 10))#candidate|6145|(6, 8, 10)|var|float64
var_6146 = relay.var("var_6146", dtype = "float32", shape = (2, 1120))#candidate|6146|(2, 1120)|var|float32
output = func_6144(var_6145,var_6146,)
func_6147 = relay.Function([var_6145,var_6146,], output)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mod.get_global_var('func_5961')
func_5963_call = mutated_mod.get_global_var('func_5963')
call_6213 = relay.TupleGetItem(func_5961_call(), 1)
call_6214 = relay.TupleGetItem(func_5963_call(), 1)
func_5685_call = mod.get_global_var('func_5685')
func_5688_call = mutated_mod.get_global_var('func_5688')
var_6223 = relay.var("var_6223", dtype = "float64", shape = (16,))#candidate|6223|(16,)|var|float64
call_6222 = relay.TupleGetItem(func_5685_call(relay.reshape(var_6223.astype('float64'), [2, 2, 4])), 0)
call_6224 = relay.TupleGetItem(func_5688_call(relay.reshape(var_6223.astype('float64'), [2, 2, 4])), 0)
uop_6227 = relay.sinh(call_6222.astype('float32')) # shape=(2, 2, 4)
uop_6229 = relay.sinh(call_6224.astype('float32')) # shape=(2, 2, 4)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
const_6232 = relay.const([-3.541391,3.453544,-6.147463,6.703587,-5.730536,4.771831,0.111032,-5.518365,-8.290227,8.341519,5.232384,7.844705,-7.144258,-7.038361,-4.810239,8.437497,-3.403053,5.022432,9.126342,7.771046,-6.772461,6.176149,-9.973453,-4.730690,-4.436200,-1.134101,-2.948741,-2.734490,-2.821699,-9.949890,-9.616864,-1.634554,-6.737259,5.450983,-1.540423,-1.709314,6.772557,-5.315593,9.296904,1.530110,4.709660,-6.556141,7.367989,-4.908017,2.044611,-3.872541,-1.447153,-8.141162,-9.003301,4.153532,-6.645210,-6.202674,0.387710,1.755583,6.544235,-8.050910,-8.955726,1.749171,7.629904,-9.177886,-4.942990,9.546797,2.204967,-8.795455,5.130780,-2.961621,7.252954,-0.900294,9.376532,8.006232,-6.588117,7.148723,-3.335201,-6.666234,-3.901079,-8.936943,9.613118,-8.071670], dtype = "float32")#candidate|6232|(78,)|const|float32
call_6231 = func_1646_call(relay.reshape(const_6232.astype('float32'), [2, 3, 13]))
call_6233 = func_1646_call(relay.reshape(const_6232.astype('float32'), [2, 3, 13]))
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_6242 = relay.TupleGetItem(func_2966_call(), 0)
call_6243 = relay.TupleGetItem(func_2967_call(), 0)
func_1362_call = mod.get_global_var('func_1362')
func_1368_call = mutated_mod.get_global_var('func_1368')
var_6249 = relay.var("var_6249", dtype = "int16", shape = (450,))#candidate|6249|(450,)|var|int16
const_6250 = relay.const([[8.345113,-5.462628,2.118603,0.475211,9.781177,1.228039,-5.362107,-5.870301,2.405549,7.183356,-9.241996,-7.144713,9.348192,5.081573,-5.429071,6.835005,-4.393087,-4.059666,1.057532,1.539323,-3.147288,-6.460438,3.706075,-0.169601,9.871514,9.331590,-5.110665,5.785740,-7.963399,3.642025,-1.548001,-2.437417,-0.065202,-9.174524,-3.144857,-2.548689,-7.951439,-9.401271,-3.980911,-8.441491,-8.771026,6.918267,-5.767792,4.763026,7.183479,9.982596,0.207439,6.704034,-4.378377,6.395779,8.512907,3.112833,1.075782,-4.009747,5.334396,4.934671,-1.233519,-5.024459,2.509260,3.196847,-0.976499,-8.110323,1.080090,3.631959,-2.681164,-0.408534,6.344431,2.511619,4.544603,-9.413392,8.870982,0.222441,-6.503768,-7.016765,2.679917,-5.077538,-3.689000,1.402080,-9.333574,-3.819590,2.192181,6.450070,-2.195965,9.705499,-8.408162,-3.678426,2.197176,8.920240,8.265341,3.237012,-4.263797,-9.318911,0.177706,-0.270588,5.744179,-4.622205,2.549084,1.618825,-6.047514,-5.459701,-0.820403,-6.068959,-6.164158,7.084212,1.926817,-0.130272,-4.725607,9.480082,-7.377321,-2.670771,-4.647372,-3.448894,-3.377789,4.054520,3.166754,7.868138,7.042446,4.875655,7.561734,2.401756,-5.379253,-9.464587,9.299461,-0.323912,4.225470,5.374969,0.915961,-5.517433,0.242689,-1.783969,6.262353,-3.368659,-2.618222,-4.320044,-0.969114,-8.292691,5.609263,8.827296,-5.997298,-7.113212,-9.116317,0.553965,8.914192,2.233107,-6.723957,4.614166,9.306883,-5.914787,-2.401656,-3.677203,-7.517144,0.336835,8.718007,-8.301515,-1.339545,-2.452527,-6.093744,-9.169374,5.339707,-0.001463,0.788412,9.520480,7.775922,-0.717726,-6.709960,-9.837897,-6.652323,-1.921058,4.347358,1.351155,5.046291,-5.280144,-0.064095,9.184325,8.964427,9.724012,-2.172205,6.627583,-2.136074,0.761411,-6.697559,7.922330,3.397901,8.846886,3.344754,-7.286872,-3.645248,-0.959883,2.302710,-6.547335,-0.479525,7.340235,-1.073973,-1.403405,5.903946,6.819991,-2.848273,-0.307176,-3.636419,-1.949613,-3.714928,-8.560698,5.256467,7.447520,-3.006322,7.334959,0.916624,1.482668,-0.771982,-3.488129,8.282409,4.473125,5.199972,9.899448,9.444694,0.847812,-6.720468,-9.113070,-9.336022,-2.435113,8.162872,9.685104,7.477067,-8.833101,2.931932,6.291882,-8.580693,-2.537916,-5.639748,2.725623,1.858291,7.146343,-1.175415,3.087916,-1.339035,-3.707941,-0.691377,-3.086438,-0.072058,1.713695,-3.333631,4.761334,6.707843,-5.858716,1.104766,-4.096726,-2.797576,1.914847,2.895382,8.823906,-9.300653,-1.763167,-0.074583,-7.594567,2.378358,-5.351708,-3.459732,7.450665,8.022664,2.073835,2.740069,1.736943,-2.670091,3.790742,2.134643,9.121455,-4.476100,-8.817645,-2.590100,7.088958,-3.620031,4.047475,9.304927,1.951602,-2.226798,-1.666859,-4.647702,8.399335,-1.269697,-3.490533,-9.268444,3.093550,5.212729,1.026467,8.547839,-9.160773,-2.895400,-5.302033,-0.405857,-1.930862,1.396873,-7.405591,-1.780984,-0.139361,-1.048388,-9.934372,-0.364145,1.465798,-4.911303,8.002579,-0.263695,7.053718,-0.003496,-1.495403,8.248935,8.597179,0.035900,-8.485697,-6.827851,-2.182737,-9.632715,7.149415,1.764530,-1.856374,6.507681,2.944190,4.058266,-3.127896,-5.365142,-0.511452,2.142186,-2.360274,-5.152910,-4.928798,8.413696,6.152049,4.579334,-0.913074,-4.900985,-1.747405,3.305508,8.134810,6.558108,-2.529411,-7.673758,4.095548,-6.569558,3.586577,6.522582,2.799674,-4.393151,-4.694074,6.762955,-5.069496,7.068864,1.479500,-0.952469,-4.976519,-9.285137,-1.087144,0.733386,-3.995646,5.763755,-3.595977,2.455050,-9.627259,5.674525,-3.399070,3.914955,-3.850810,5.687462,6.845500,-2.841480,1.233316,-4.073035,0.676785,-9.439264,-8.326769,6.286881,-1.722961,-0.021952,5.418238,4.664092,8.388423,-0.024958,7.094159,0.540822,-8.538417,-1.400113,6.165668,9.055742,3.879665,-0.141090,1.705857,-3.403741,3.487381,-5.376838,-2.888420,-8.755769,2.153767,4.708682,-1.390563,4.087655,-8.887918,2.685403,2.975720,5.021753,-2.831169,-2.984053,3.051345,1.946663,4.488681,7.884078,0.194487,3.624137,2.967311,0.216262,-7.310749,-0.713160,0.402330,-2.073362,-1.349651,1.925751,9.527931,-1.443867,-9.247401],[5.545728,-8.884082,-5.976989,-4.587098,-7.240441,-7.193264,-4.489331,-6.441214,-8.732038,-6.536999,-3.142975,-0.219710,0.569169,8.651696,-9.642285,9.611219,-7.972668,2.745464,1.462940,-5.727651,8.667065,7.289936,0.181486,-9.444905,1.199675,-6.634412,8.401279,0.533379,1.605495,-2.967011,9.715771,2.414661,4.111789,-2.153382,0.485922,-9.427872,9.868371,-8.013432,-5.218830,-7.909798,6.207180,2.945943,0.496675,5.091322,-2.593724,4.219320,3.921180,0.048471,7.860830,2.391072,-3.627141,1.378828,1.283972,3.141856,-1.388147,-7.353513,-6.591484,-3.467866,-3.177811,-9.159808,2.078625,-5.356770,4.682128,-9.652367,7.291806,1.221414,5.633556,-0.747864,-9.194408,-4.891959,5.968186,-8.865153,7.505131,-2.932759,-9.746487,-5.498783,-3.624179,-5.573645,-4.345228,-1.991582,-1.677422,6.413009,-9.680516,-0.849225,7.091415,9.512155,1.271628,8.509599,-9.580892,5.184162,-4.028029,-5.555676,-1.803732,-6.302462,3.871193,6.220274,-9.873175,-2.624405,-6.491960,9.031672,5.724763,-8.316155,-4.145061,4.667007,4.675956,4.606972,-9.743679,-6.731437,-6.794610,4.426671,2.169441,8.832153,-6.347408,-2.971042,1.921648,-1.003088,-3.206091,0.447725,-9.663633,8.835860,3.527903,-1.323128,3.274248,2.979206,2.801874,0.606477,7.936498,9.594086,-1.105919,-3.767713,4.351130,6.887175,8.493458,1.628309,2.107257,-1.056385,3.030644,3.760626,9.948513,1.742002,0.884181,-6.298297,3.522553,-4.806583,6.667146,9.965726,-2.478496,8.265958,-2.477302,4.266363,1.132239,-6.429606,-5.040330,3.483435,-6.700287,9.120245,-8.831341,-7.374527,9.841091,4.434971,6.569142,7.296726,4.826170,-5.975410,4.095269,-4.209688,5.646820,-2.082248,-4.749029,9.741879,-4.714745,-2.492869,-4.521871,-1.720776,-4.330638,4.651861,8.333392,3.626408,4.128116,-0.621888,0.900832,2.496041,5.195793,3.865923,-8.936334,3.459712,1.821590,7.757383,-3.140233,1.649868,0.949742,3.816553,7.804562,-9.555946,-4.878295,-3.551519,4.068567,-0.130592,1.248370,-2.691370,-8.972918,-5.232376,3.237264,-6.559035,2.278162,-0.330207,-9.787725,4.682918,-0.382757,-7.902183,-9.244472,6.779772,-8.599421,3.536118,8.806376,2.645043,8.580324,2.260813,8.105323,-1.490042,1.599473,-2.047342,-6.062667,9.782036,5.398648,3.166885,-6.382447,0.094689,-5.087471,-8.915372,-2.373528,-7.066916,3.860749,-7.224110,1.706730,-6.220262,-3.379511,-1.316532,-9.755524,0.175176,2.347125,-1.543886,3.141413,-0.114475,-5.632315,9.716864,7.316332,-8.338253,4.966856,4.899177,8.520824,9.979488,-0.416473,6.941013,-1.287190,-1.617634,1.534493,3.599874,-6.518892,9.430566,8.240639,6.043601,-3.994580,4.326702,9.414316,-1.934438,-0.019636,-4.047713,0.541553,-9.881940,-5.847392,3.475903,2.886606,5.297091,-6.979439,-1.198556,2.257348,-8.940052,4.278616,-8.306691,1.509719,3.097549,-8.940216,-5.119659,0.505085,4.917487,-2.978066,-2.869325,-1.269388,0.917578,-8.512505,-6.776038,-9.799919,5.365094,-7.932211,-3.625073,-4.419934,-6.590896,4.098317,-3.858850,6.665403,-0.325427,-5.167101,0.982272,-3.578470,8.817863,-4.060863,9.131341,8.565452,-9.905668,-1.466027,0.570209,-3.618869,2.618691,-8.497782,2.773689,-9.786752,8.134441,-2.925532,6.875899,-6.918593,2.804680,-7.092348,3.428857,9.301191,8.090001,-3.597514,-3.102790,-3.479434,-8.499050,1.733328,-8.963127,1.237511,-9.577723,-3.338042,3.041942,-4.808771,5.368522,3.094710,-8.119639,-5.511885,-4.381773,-7.123904,-7.855735,-5.745865,-9.613785,-3.247081,8.241611,-5.666772,0.266450,0.745523,2.844966,0.071657,-5.042139,3.614419,8.707992,9.720518,-9.678169,-0.046101,-0.690463,9.899246,-9.982895,-8.531044,-8.346658,4.396515,8.788845,-9.454170,-1.484159,-6.476050,-4.507848,-7.436342,0.743130,6.355255,6.520989,-8.577842,-2.207619,-4.687083,8.477154,6.136267,-1.084765,3.988649,2.939678,-8.690174,5.409912,8.697809,4.172842,6.742211,4.604216,-4.240074,-6.512765,-0.288256,6.103112,8.039927,5.011146,-8.075579,0.304440,-8.322360,6.043910,5.870702,9.970293,-3.292425,-8.771740,0.934565,-6.828292,-1.174911,7.474411,1.246129,-2.476528,8.816726,4.818225,2.611063,-5.726191,-2.541357,-7.382814,-3.413045,-4.029693]], dtype = "float32")#candidate|6250|(2, 416)|const|float32
var_6251 = relay.var("var_6251", dtype = "float32", shape = (2240,))#candidate|6251|(2240,)|var|float32
var_6252 = relay.var("var_6252", dtype = "int32", shape = (1, 2145))#candidate|6252|(1, 2145)|var|int32
call_6248 = relay.TupleGetItem(func_1362_call(relay.reshape(var_6249.astype('int16'), [15, 3, 10]), relay.reshape(const_6250.astype('float32'), [2, 416]), relay.reshape(var_6251.astype('float32'), [2240,]), relay.reshape(var_6252.astype('int32'), [2145,]), ), 2)
call_6253 = relay.TupleGetItem(func_1368_call(relay.reshape(var_6249.astype('int16'), [15, 3, 10]), relay.reshape(const_6250.astype('float32'), [2, 416]), relay.reshape(var_6251.astype('float32'), [2240,]), relay.reshape(var_6252.astype('int32'), [2145,]), ), 2)
output = relay.Tuple([call_6213,var_6223,uop_6227,call_6231,const_6232,call_6242,call_6248,var_6249,const_6250,var_6251,var_6252,])
output2 = relay.Tuple([call_6214,var_6223,uop_6229,call_6233,const_6232,call_6243,call_6253,var_6249,const_6250,var_6251,var_6252,])
func_6254 = relay.Function([var_6223,var_6249,var_6251,var_6252,], output)
mod['func_6254'] = func_6254
mod = relay.transform.InferType()(mod)
var_6255 = relay.var("var_6255", dtype = "float64", shape = (16,))#candidate|6255|(16,)|var|float64
var_6256 = relay.var("var_6256", dtype = "int16", shape = (450,))#candidate|6256|(450,)|var|int16
var_6257 = relay.var("var_6257", dtype = "float32", shape = (2240,))#candidate|6257|(2240,)|var|float32
var_6258 = relay.var("var_6258", dtype = "int32", shape = (1, 2145))#candidate|6258|(1, 2145)|var|int32
output = func_6254(var_6255,var_6256,var_6257,var_6258,)
func_6259 = relay.Function([var_6255,var_6256,var_6257,var_6258,], output)
mutated_mod['func_6259'] = func_6259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_6295 = relay.TupleGetItem(func_2799_call(), 0)
call_6296 = relay.TupleGetItem(func_2800_call(), 0)
output = relay.Tuple([call_6295,])
output2 = relay.Tuple([call_6296,])
func_6318 = relay.Function([], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
output = func_6318()
func_6319 = relay.Function([], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6318_call = mod.get_global_var('func_6318')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_6359 = relay.TupleGetItem(func_6318_call(), 0)
call_6360 = relay.TupleGetItem(func_6319_call(), 0)
func_5080_call = mod.get_global_var('func_5080')
func_5086_call = mutated_mod.get_global_var('func_5086')
var_6371 = relay.var("var_6371", dtype = "int8", shape = (960,))#candidate|6371|(960,)|var|int8
const_6372 = relay.const([-3.025337,2.349373,-4.554621,-8.797307,0.353309,-7.141499,9.201159,6.392728,3.964050,-2.502220,4.095150,9.452789,-8.225487,1.343092,2.025214,-1.410428,-9.767881,-8.138520,0.981239,1.856219,5.009993,-6.533470,-3.332014,4.701621,1.111579,0.441126,-0.435198,-7.688621,4.836639,-2.282562,-6.415884,4.789494,-8.904195,9.911265,-6.119882,-0.222686,-2.153859,-4.096907,1.337030,8.372072,6.481350,9.703519,4.382735,-6.218506,6.806184,-1.451938,8.246325,-7.550299,1.121345,3.029071,9.629763,5.237082,1.463863,-1.947091,4.109801,9.359779,-4.579558,-8.302448,2.653933,6.909083,0.491981,-5.820508,2.813394,4.931580,-6.688455,-7.001401,-4.749177,5.626990,3.880850,-9.353994,7.570830,-4.607145,8.374283,-6.689193,0.315452,8.456683,7.566332,-5.947358,4.679595,5.584038,-4.529700,4.912427,4.060909,-9.528712,-7.336611,-5.828703,6.479759,8.583499,7.903882,8.032641,3.250497,-2.967096,-7.611450,3.455836,-5.733251,9.024799,-1.624979,3.111946,8.703400,4.793538,6.724988,-2.092509,-9.465089,6.548542,2.708423,-2.961957,7.682177,6.112772,3.207777,5.115268,3.248613,4.063846,0.400876,2.460385,-1.663445,-4.408860,-0.269924,-7.084078,2.253964,5.931223,-7.849746,7.548951,-5.096724,3.492023,-9.081141,3.581689,8.431516,4.214115,1.810024,-8.770715,9.427214,9.517163,9.914577,-3.048891,6.723430,5.556650,-9.102504,-4.227631,3.871892,-2.700575,-2.915722,3.672690,-8.663512,7.671330,7.128796,-1.545907,-0.347292,0.304904,9.021154,-7.251024,0.409639,5.125551,7.599248,-6.970159,0.541036,-9.238265,-8.169158,-3.398074,-0.901069,-6.747642,2.991175,6.212903,6.737064,8.886373,-9.080460,7.949846,9.027171,4.849250,-9.134915,7.645468,6.652378,-3.006773,3.246937,-9.807157,-4.979950,7.698208,6.966238,1.801476,4.992817,-3.101754,6.110722,6.744813,-2.584638,0.604296,-8.468818,-1.952034,-6.245307,8.873422,7.687765,7.668095,5.148039,2.407812,6.744633,4.816343,6.009581,9.416939,4.258990,7.445538,7.425903,1.357608,4.519305,0.880532,-3.075585,8.266021,5.198713,6.378568,-9.657368,2.076129,3.648871,-7.215151,-3.228093,0.545096,5.651630,3.719835,8.471579,-8.825506,8.221396,-6.609440,9.865399,8.745309,8.963428,4.817356,-0.598832,6.082350,7.313705,-8.243850,0.395903,0.607563,1.351219,-9.264098,5.068046,5.622472,-8.032543,-6.280951,-6.686988,-3.120934,-8.666879,0.798397,8.655370,2.501901,-0.092981,-9.765185,2.294396,-9.399920,9.380599,-6.606275,-0.977773,6.662504,2.298121,-6.984894,3.093059,4.003663,-1.829152,-4.062236,-6.318623,-1.759102,-2.008834,-5.342584,-7.117576,-5.197063,8.259386,6.586307,-6.810632,2.194526,-6.330701,5.139350,-1.511901,-9.893652,8.299723,-7.758842,-5.594220,9.444212,-6.377137,-5.892717,-6.688699,-9.400264,1.755189,1.343958,-4.730858,-4.355341,-9.708129,-6.137321,-9.696932,4.425965,-7.984064,2.860968,-4.543584,9.768000,6.306469,-3.198309,-7.790596,7.621752,-1.805425,8.433596,7.049847,3.440879,-3.995148,0.339067,-7.626384,-9.470094,-8.475763,2.414114,-5.738028,5.691289,0.235346,-3.041603,-7.157296,5.161234,-9.012391,7.110442,-8.738175,-7.888959,1.893328,-7.680258,-4.924782,-0.801161,-6.452051,-2.933244,-5.711252,-2.030268,8.099639,1.235192,1.772351,-4.296050,1.652656,1.576153,-0.945410,-6.798209,7.834985,-5.993455,-1.502476,9.943830,-8.535663,0.130848,5.800491,-9.193147,-9.668853,6.014107,0.703118,-0.736918,9.561468,-8.206757,2.967914,2.669444,8.737959,-1.703438,-6.078674,4.265046,5.933628,9.801225,-0.346121,8.531023,5.678303,-3.265122,-8.782219,-4.795988,7.103287,-0.449266,8.342307,4.195196,7.918153,-2.731000,8.188172,-2.433637,6.028941,-2.810949,-9.474483,-8.249367,-0.266941,-8.044700,7.760089,-9.970537,6.614152,6.082656,5.063387,-0.067081,0.642026,-9.216362,-2.559048,4.221279,4.252329,7.535336,-4.676462,0.188908,3.892093,3.714756,-7.454608,6.119453,-2.452906,4.328596,9.377185,-3.670732,-3.450156,-5.577480,-3.336447,-0.538353,6.989819,1.396322,-9.239834,-6.618049,-5.610102,-0.032878,4.249187,-1.407649,6.514798,2.542160,4.997228,2.574657,0.624326,-7.661938,1.282145,6.330220,3.064211,-4.962105,7.055005,3.521592,1.478946,9.385767,9.117325,-8.152591,0.135367,8.335730,-0.197712,-6.751435,-0.661840,5.895240,-0.745251,-1.225745,1.414508,1.698020,7.923482,-2.424667,-0.380078,-2.795095,6.415968,-5.848506,-3.201286,-4.205123,-9.609080,-7.658154,8.152146,1.698179,-4.948765,8.965633,-1.947800,5.386633,1.473804,-0.975168,6.199562,3.157539,-3.242389,6.345624,-2.429726,8.692062,-6.839310,1.611154,6.658466,2.224205,4.183513,4.774441,8.160825,7.935077,-5.307047,6.693064,-2.223166,-5.203148,-0.059177,-9.271045,3.626565,-0.190784,6.526501,-2.467015,-8.155474,8.608030,-8.238843,8.136162,9.199663,0.788460,5.832000,8.703658,8.786283,-3.847959,9.601569,-5.505012,-0.488961,-2.016002,4.440465,-3.416701,1.281325,4.948228,-9.694599,7.939986,6.231613,0.145279,3.391562,9.154078,-1.486171,8.822521,-4.805703,8.355496,-3.579091,-7.792167,-5.667425,3.223689,-4.114859,7.376893,8.140082,-7.570916,8.699153,4.281750,-9.728236,-9.515571,-0.138803,-7.880231,7.048693,7.833590,-5.776748,9.303508,-5.177060,-4.906969,1.051727,7.756874,-0.164475,-9.219909,4.185247,6.718822,-0.624519,2.012425,0.552328,2.142641,5.859551,-3.026634,-3.982382,-5.308730,-3.101697,-4.435229,-6.826914,-6.215321,0.300443,0.203047,4.054001,3.616267,-8.863843,-4.773851,-0.678595,-8.003961,9.729131,4.140944,1.245663,-1.923461,-6.727869,9.086439,7.892102,-5.483985,-2.863058,1.219989,-5.262825,9.383632,8.776418,-4.821124,6.726802,2.185782,8.647559,9.050853,-2.486191,-8.751833,-4.537784,-1.804482,9.573248,-0.078454,-4.754941,6.805273,-8.252914,2.240259,2.621935,-3.311765,-5.549138,4.547177,-2.043544,-2.605790,-2.795239,-8.760034,1.333629,-5.617709,8.646713,-4.864550,8.021400,-1.972581,1.290014,7.086552,2.299150,7.199536,-5.459144,9.826941,6.345534,7.959319,-3.712067,-9.333426,-6.946081,-9.897721,-8.846437,2.087388,8.853126,6.145027,9.905643,7.491573,-8.822984,0.044008,5.448167,-6.075060,-2.507489,-6.653571,7.919249,-7.945149,-0.638077,0.644131,-5.393930,-7.028169,-1.072427,-7.368212,-0.825942,-2.176736,-5.294260,3.419720,-0.194776,4.941798,-2.252226,4.893838,-6.774520,2.620283,-0.079164,6.890514,-6.933231,-7.790100,-7.408846,-1.348171,-7.215611,7.175337,-6.633083,-0.119102,-4.285291,-1.299192,-7.438569,-8.951074,3.092391,7.473630,-0.270385,-9.116547,-2.409588,0.859349,3.266374,1.636322,-9.028223,9.186064,-9.224967,1.770353,9.881662,8.075625,9.501999,-3.141271,6.967407,3.687324,2.252351,-0.408461,-1.385631,-0.652490,-6.804107,-9.319093,-2.065728,6.777171,1.324279,-6.374628,-4.702307,-4.664764,5.863186,3.696975,-6.491163,3.053076,-6.281738,9.076224,7.759583,4.884197,-8.269883,2.532369,6.641526,7.434307,1.251823,5.697622,8.481149,-2.185904,-8.297030,8.190574,-5.087135,-8.098411,3.260081,1.577006,1.370007,-2.719168,-7.543101,7.341920,-0.777693,9.170150,-0.691724,-9.726668,-4.734369,-2.923841,-5.425605,-3.106526,-7.725057,1.159672,-9.556940,8.203537,5.324610,3.949009,7.350539,2.891588,9.413395,5.979607,9.255924,6.642703,-9.864776,0.064469,-7.830611,3.250100,-8.025258,-4.184483,-5.892881,0.102481,4.031325,8.013056,0.899244,-8.427918,7.112272,-5.173135,0.421887,5.801639,2.048857,-6.210503,-8.098818,5.465826,9.498398,1.730073,3.229766,2.013959,-3.028111,1.195643,-2.106626,-9.532196,6.928702,-8.692380,8.250447,0.002571,-3.503508,-5.695403,2.275681,-5.921928,7.482012,-3.217513,-0.692336,4.355700,2.791416,-1.946476,-6.652213,9.430571,3.245742,0.997104,6.547938,5.842214,-5.410534,-1.758536,5.095540,-9.569968,5.261594,5.181655,2.074760,-1.647329,4.901754,-4.499693,8.045102,-8.584094,0.430484,3.421246,-6.488670,3.400866,-5.581376,-8.475066,-9.183609,-0.995002,-3.273653,3.573961,-9.358960,-3.259902,-1.712515,-2.284758,-6.434653,-0.206859,-9.424475,9.178799,-6.143436,5.227533,-1.119507,8.010275,1.333892,-7.087645,0.559932,2.810209,3.754778,-6.370754,-8.890960,-2.566022,1.303166,-4.970710,-0.556388,-5.544979,-6.291507,-8.897771,3.735418,8.735633,5.160171,-3.590424,8.712862,1.299909,9.968275,-7.837459,-7.253778,1.751905,1.161246,7.438130,2.465190,9.388941,9.266592,-2.123587,4.432891,2.717505,-1.563690,4.166143,1.177671,-0.882529,-6.728291,-4.272683,4.876691,-6.739479,-1.425674,7.537756,0.453818,5.297016,-1.205856,-4.899733,-4.209790,-5.779522,3.764532,-5.034172,-3.366726,-6.867334,-7.754938,6.539597,-3.975571,-1.249692,0.061492,-8.386044,-0.289459,-5.180047,8.924805,-9.756862,-9.351994,-8.951280,9.959733,4.866538,-3.227321,-4.060221,-4.511275,-8.579287,-2.112964,9.664199,-3.263891,-7.398246,-2.752306,1.316066,5.903685,4.341188,6.509451,-8.725620,-4.184478,-5.768959,4.147893,9.587435,1.835432,-2.494980,0.972101,3.065438,8.702615,-4.760596,-5.786369,1.587463,-7.492074,-8.026026,7.532031,-1.421201,-1.279776,-2.446951,9.219993,9.406758,9.521583,-4.848930,-2.644042,1.613869,-6.459389,1.139489,6.300589,-3.606474,5.172942,7.854876,0.563707,-7.995444,1.367301,9.637416,0.631807,7.234425,-7.768533,0.625181,1.815509,-9.866855,-4.653231,0.778968,1.314240,0.903936,-0.057523,6.939296,-1.388100,8.015969,-0.923138,1.769007,0.069716,-0.212264,-4.256541,-5.630541,-9.230707,7.759111,-8.834986,3.284311,8.962407,-0.134798,4.567287,9.562132,-2.041174,8.206501,-5.443504,-0.208285,5.840998,9.162038,-7.464491,-2.131874,5.175861,9.291445,-6.585919,2.286933,-6.239039,8.452076,6.712863,6.614592,2.939475,-3.414223,3.715408,6.126341,5.558314,5.216828,2.253070,8.999645,2.419476,-2.850895,3.510832,5.026181,-6.571222,0.020751,-2.133198,6.379304,-2.851570,7.356644,-6.536538,-0.397164,0.740931,3.506033,4.095062,9.906840,8.774881,-3.443829,6.051218,-2.414209,-9.931175,8.786653,7.673315,-9.474537,-6.937717,9.667226,5.281313,0.392020,0.752636,0.283471,6.729556,-3.086084,-4.108337,7.335383,-0.182795,9.896828,3.402056,5.582408,3.513139,-2.447463,7.541031,-6.487394,-8.412576,-1.112206,-6.029057,-0.101965,-3.007131,4.403578,-2.568779,8.023201,-2.056154,4.648335,0.471827,-8.796066,1.806610,4.314369,1.438587,6.351180,5.026927,9.789980,7.416161,4.300213,-6.941091,-0.951452,8.428435,-0.770690,6.581869,2.672996,-8.142430,1.231658,0.756260,4.643100,2.163121,-8.224497,-9.576544,-5.290733,1.261099,9.760794,-4.774822,-8.399877,1.020581,-2.428030,1.593296,-7.887512,1.236387,3.848240,-5.793400,9.001050,6.516107,-9.333718,-7.780940,9.202776,-6.418086,9.870189,-7.372081,-8.444647,-8.707607,-1.650730,-2.830785,-0.495190,3.355612,-2.578613,-7.901856,9.342383,8.619830,8.872037,-7.792601,-0.503283,4.320974,-4.941408,0.774038,-2.659955,4.204713,3.580235,0.503271,3.344515,6.133932,-7.824360,-9.879312,5.055762,4.055103,4.308611,8.470328,-2.468941,2.936141,7.821352,5.069930,3.334688,-2.637588,-3.215591,-6.311240,-6.877416,-7.486934,3.098029,-3.813740,-4.568701,6.442483,-4.772399,7.004866,1.369046,9.767396,-2.056231,-0.897921,9.860006,-5.400750,-1.915119,0.776828,6.270938,9.205754,-6.912650,7.064100,3.928614,-2.774829,-7.964561,-0.842692,6.691252,-4.788855,-5.766319,5.704490,9.893069,-0.852066,-6.694266,8.506659,3.383025,-3.506283,-4.455580,-2.824443,-7.760476,0.250334,2.870912,-0.215684,1.873871,-5.224403,-4.432138,9.272088,9.198678,6.456569,-7.778683,6.137725,-9.733713,6.757326,-6.539568,-1.146655,1.765142,1.841931,-1.193421,5.346076,-0.076398,5.821524,2.534249,-2.997057,-5.461317,-5.223609,-1.432732,-2.084676,7.045855,-0.025049,-5.405977,-0.520534,-2.826320,-2.031328,5.081065,5.350013,1.857536,-0.903965,7.212981,8.417557,6.422623,-4.969372,-5.976749,-4.093964,4.476118,9.462817,0.305535,6.847304,7.047743,-5.652919,8.072837,-9.087871,0.988918,1.134998,9.718134,-9.201641,-0.556799,8.104449,-7.216480,-3.663306,-7.115144,3.063374,6.869334,0.861084,-4.193920,5.633848,3.214805,-6.994226,6.388007,-0.875816,-6.403648,2.481454,8.940747,8.988956,-0.171308,3.681546,6.708718,-6.693178,4.466856,8.525851,-7.716109,2.129921,-5.174493,-6.106731,5.372528,6.090832,0.166113,-3.135745,8.738666,-8.031513,6.882777,-8.226292,-1.787845,4.186709,-2.008155,9.636572,-5.256004,4.260659,-0.965286,-0.451663,-4.329639,-4.529362,-5.864849,-8.007121,-4.881966,5.411646,5.398947,5.882049,-8.905467,0.845787,6.580234,7.662269,-9.763189,5.599319,-1.007255,-8.318170,2.752227,9.748981,-2.722524,1.738865,-0.213360,-7.498200,-9.019682,-7.508203,1.480671,4.353092,-6.116472,-0.491287,9.287283,-8.042235,7.210935,-5.872472,9.062325,-5.587370,-7.339614,-1.652832,-3.484650,-0.252551,-4.733402,3.432724,-0.743925,9.031955,-7.706849,0.229291,3.472499,3.308530,3.261060,7.362766,9.787424,-3.785543,1.452340,6.630035,1.953648,-3.912346,-7.792316,6.742003,-0.089415,4.515038,-5.040879,1.352980,-5.248598,-4.275861,-0.467348,-3.972931,0.227353,5.625746,-8.139548,-2.094716,-0.812765,4.309394,0.021035,-8.002781,8.935194,-7.358362,-3.998602,3.539942,-9.827127,-5.892630,2.998314,2.598661,0.285974,1.105724,3.420779,-6.053530,-6.428063,-0.168247,-5.826954,-8.896113,-8.242989,-3.833407,-3.020707,-1.680348,7.194603,2.596564,5.262766,-8.724261,-7.896403,-1.258851,3.067561,4.863258,8.414260,7.746328,-9.008048,6.199444,-1.601386,-4.796110,-2.365864,-3.090788,2.086228,-5.707644,-9.064714,-2.596064,5.248150,-7.281691,7.586516,-3.163267,0.647285,-7.419594,3.350018,-1.151161,9.793617,-3.355732,1.340974,-1.602314,4.084170,-2.311588,0.600700,-1.303117,0.329832,4.829997,-4.386025,5.614655,-4.303680,-0.554729,-5.260889,1.388281,9.452882,6.311617,-1.003813,8.261844,-6.980446,7.051675,-7.050929,-8.908951,-0.669637,-4.667972,-4.903105,-3.297022,-8.548783,-0.673793,-8.231719,-7.573334,-9.176814,-8.645957,6.869437,-5.190559,2.515829,0.409591,5.086277,-9.691236,-0.248598,-3.268261,-9.229268,4.844968,2.858975,8.286149,0.331206,7.676639,6.436024,9.714302,-7.372379,4.825415,7.362573,9.670023,-9.850055,8.735224,5.527625,8.315241,-0.774303,-3.352237,6.370154,0.068378,8.180797,-1.651993,6.092972,-1.338884,6.312022,7.095216,-9.373432,7.065363,-2.844929,1.613020,-9.058007,-2.098695,9.427904,6.918751,-6.326265,-3.654722,7.856276,8.746098,-8.947069,-9.534903,2.549318,-9.117261,0.166985,-0.468649,-6.160091,5.987099,4.470804,-9.437705,-5.537296,8.198226,-7.520127,-2.990824,-2.372963,-0.138033,7.040558,-5.489129,5.719822,9.559917,-9.398001,-9.057236,6.221115,8.762267,3.991482,-6.229453,7.799850,4.765573,0.794701,-1.042858,0.306643,-0.515956,2.268726,1.599185,1.861603,0.304404,-9.236866,2.147237,3.883772,-5.288686,-1.954505,-6.159731,-2.327264,4.376741,-7.499941,3.219000,9.664011,-5.675137,-0.238157,2.192782,-6.645554,4.032374,-9.742195,0.929998,-3.314061,3.491769,-7.497851,-4.991498,3.645638,-7.048558,1.971973,3.184238,2.961112,-2.937366,1.262456,8.590096,-6.150883,-6.730708,0.155702,9.366568,-2.458670,-5.179360,-2.274993,8.990489,5.431074,0.273417,-2.344024,8.384494,1.320559,3.009415,9.215552,-4.475577,-6.145831,-3.764863,-6.647169,8.242378,-8.929438,4.095722,-9.563016,-8.276446,-6.457747,5.098366,-9.749865,-1.903535,-3.306624,-5.944662,5.405779,7.173938,-5.994087,0.835107,4.780835,8.369950,9.096228,7.607745,1.421486,0.887183,9.381514,-2.043777,8.148061,4.089681,4.772240,7.822917,1.201844,-5.213615,-0.871367,-4.025735,-4.323370,-2.081678,7.405251,5.233828,1.521452,-6.142242,1.360769,2.281197,-6.943731,-1.213396,-2.519544,-6.561822,7.461559,6.547748,-5.588037,5.550087,8.340807,-8.548381,2.247836,-9.731575,-5.325681,-4.655001,5.556771,-8.211298,-5.807395,6.669823,-1.228373,-6.996040,-7.913085,-0.977080,-3.498985,2.725436,0.549297,-6.102830,-7.889804,2.085991,4.669131,-7.578095,9.391150,-4.288336,-4.326051,8.052786,3.798965,-6.486225,6.909948,1.793255,-5.470208,-3.820511,-7.174280,5.121560,7.580556,-8.909922,-8.386754,1.784952,8.469087,4.052931,-5.095966,4.939670,3.211533,2.698189,-0.293518,-7.567564,-6.999442,-1.526424,4.787206,7.544091,-7.603865,3.214624,-6.600501,2.556612,7.647172,1.407765,5.107121,7.160413,-8.283186,1.678161,4.529611,-1.071821,-0.007978,5.282821,-2.942328,-6.215830,-6.500623,5.279869,8.927202,-7.348717,6.399052,-3.514932,-6.883668,2.581746,-7.168822,6.536728,-1.173015,2.419677,-2.307380,-7.815113,0.121201,-5.027013,4.225890,6.170792,-4.457924,8.653191,1.105879,-6.018163,0.144109,5.695170,-1.795414,-0.553391,-3.731730,-9.139503,-0.235414,4.135562,3.307957,0.001704,9.943118,7.868755,-1.649337,0.748083,-9.289779,-2.148202,-1.567678,-0.985502,-9.964837,4.273194,-3.474970,-0.227822,5.236237,0.050693,0.026373,9.417238,5.145218,-7.008750,4.173228,8.452185,3.919574,4.307079,8.404801,-0.745706,-8.038281,-3.596800,4.561350,2.201997,-2.879145,-3.346123,5.832520,-1.957489,-4.106058,0.137413,1.463730,-5.622817,-6.947808,-1.466846,5.818875,4.973117,-7.042563,-1.780344,-9.983995,-9.842456,-6.560833,-8.969277,-4.280055,-6.430938,9.006431,-4.772742,5.764315,2.636900,1.876256,8.825738,0.668725,-4.777292,7.090196,4.686837,7.681553,-4.826667,-4.309573,6.496393,-4.131805,-0.632544,6.407337,-8.689459,0.886289,-1.730442,4.904837,5.490823,2.241186,-6.496062,-0.306113,-6.906784,-5.531246,-5.092298,-5.958623,6.434207,8.885176,-8.609304,1.128191,3.384705,8.563952,1.881767,-6.234745,8.382928,-3.084352,-0.940218,2.863659,-8.454311,1.876800,6.646343,6.021903,-6.350858,-4.474761,7.677810,4.490177,-4.047150,9.251260,7.156111,-1.162629,9.693059,2.647379,3.002014,-8.071695,-0.903467,-9.988167,6.169684,-8.368115,7.544588,8.695406,-5.696292,2.575646,9.478158,-8.707537,-6.259065,1.776897,-3.649543,2.976286,3.757416,3.978441,-3.610704,5.310999,3.494652,6.694910,-3.191721,-9.063275,-9.500667,1.956453,-4.428771,-6.802290,-7.266601,-7.979594,-8.429364,0.461555,3.242654,0.029936,-6.288651,-4.857996,3.793022,-4.439580,-4.387706,-0.681446,0.705614,-8.271785,-6.049584,-9.176582,-0.018248,3.771239,6.332700,-4.411038,4.238124,-2.896756,7.559767,-1.594555,-9.330952,-4.729776,6.085698,7.795646,0.005265,-7.590434,4.917042,-4.519552,0.805632,-1.130947,-4.892372,2.460543,5.133378,-4.228117,-6.232234,8.449829,5.906767,3.548775,-7.414881,2.045544,-4.295572,2.438993,2.317176,8.434750,3.975491,3.624931,3.717711,-7.534882,-6.396487,6.999288,5.113163,0.756833,-3.903663,9.596813,-1.300670,-9.663457,-2.025526,-0.613703,-9.441579,-1.578648,9.106343,1.544856,-8.298833,7.864079,-0.871857,-3.419221,2.932739,0.165277,-4.928151,2.297546,4.243620,-9.640240,2.955058,2.054989,-2.890775,-9.991714,3.075097,-7.582689,1.576542,-7.034807,-6.987343,6.114968,8.064660,-5.598428,4.646921,-3.726143,8.580523,-9.746661,9.852603,-7.778658,8.678871,9.252248,2.095780,-4.313057,-4.085359,-8.322927,3.221423,-8.633087,-6.792507,6.988220,-4.715566,1.014460,-8.036437,4.580242,8.476078,2.597037,-7.204189,-5.834006,6.961508,-9.029148,2.538286,-1.337521,-9.968575,8.922259,6.070338,-0.837512,-9.599680,-3.639922,7.365488,-7.259924,9.388854,5.345671,6.575721,4.990253,-1.614425,-9.872591,3.440550,4.617579,3.427269,-4.680006,4.045806,4.695033,-2.353678,-1.395988,0.248064,3.548206,-6.751286,-0.292609,-9.324299,-7.585287,7.748624,-3.419503,-6.963727,-7.406989,3.954935,-3.084849,7.326197,-9.119015,9.378061,7.617493,-1.599656,-9.166584,5.934493,-0.013980,-0.705172,-7.638104,6.587062,-5.336093,-1.893069,5.059651,-2.839537,-6.854185,6.045450,9.466017,9.510068,8.672200,3.031646,6.680778,-5.400292,-7.451849,-5.063428,-2.627749,-5.530354,7.923797,9.691436,-1.546646,5.880031,5.662936,0.834904,2.493298,8.668957,-7.603032,-9.814814,2.421819,2.828921,-9.345636,8.084141,5.462282,2.305411,-1.507114,-5.190238,-4.230247,-9.723442,-7.876269,6.967228,-5.357181,8.683121,3.212055,-3.841101,-9.070015,5.049618,-5.380646,-3.003224,-8.922183,-4.397821,-6.273657,2.385635,-4.852889,8.998570,1.586303,5.702155,3.464569,1.311483,-5.649519,-3.034525,5.010776,3.199081,-3.452800,-3.817226,-4.071696,8.280572,7.089220,3.715558,-1.570589,-0.469358,3.501973,-5.280233,-2.374323,-1.680126,5.535057,-6.635790,-0.894837,-6.910624,6.774664,0.760266,-1.325618,-6.774312,9.045997,1.763750,-2.170788,1.317117,5.345708,0.935638,1.134213,9.193415,-3.507695,-9.256330,3.158334,0.735441,1.885361,-9.850036,3.931320,6.492125,6.660081,8.270895,-7.775518,6.674847,-5.971464,-6.990392,-9.410529,-4.126308,7.100857,5.919866,-8.275436,2.431240,9.303649,4.169324,-9.582179,1.396969,6.360009,-7.385403,-4.707368,-5.949077,-7.848144,-8.181598,-0.151904,6.174971,6.185774,-6.538424,2.994149,9.504015,-8.579932,8.175265,3.830693,-2.485170,0.917369,6.458603,-3.586069,-4.965990,-8.029334,-6.399022,-6.744415,-8.646700,-9.462684,5.032373,-7.054361,4.260828,8.936683,6.900512,5.575242,9.781758,-5.625506,-2.041795,-8.886275,0.987440,-7.199792,2.146175,9.628869,-1.021465,3.521206,7.680492,9.337423,-4.797031,-1.904110,7.984745,9.538446,-7.409342,2.298065,-1.695204,-3.321765,-6.826487,5.522040,4.994812,6.023071,9.747612,4.106934,-9.591507,6.420307,0.870602,3.347276,6.042503,9.684717,-9.678480,3.948282,3.204269,3.532949,-2.913653,6.376134,7.460056,0.259577,7.576845,-8.369287,9.569812,-8.946920,0.605307,-6.711465,-5.246155,-7.360118,-9.393110,-8.157659,5.530569,-8.163620,-7.351658,7.982238,-7.289179,-1.526307,0.709194,-5.304327,-2.161969,2.429624,-7.025788,1.098466,-1.655439,0.907406,3.170589,-6.570486,8.188956,-3.280495,-8.044216,-0.112679,-9.031603,6.211774,9.465946,0.103364,-1.632056,5.607728,-1.953809,-1.074466,-5.985880,9.879766,7.828806,1.612982,-2.585231,-2.048077,2.877297,-9.556645,-0.233415,-0.237561,8.248396,8.378109,-1.666358,-4.265973,0.066416,7.327852,-8.634188,8.412917,-7.579895,8.160245,-0.949379,-9.613798,-5.685048,-7.161142,-3.103897,-7.073377,-1.855615,6.658810,-5.410061,3.531788,-3.470876,7.138977,8.770900,-8.393454,9.057931,3.849896,-8.068539,-4.190572,-2.571221,7.813987,0.544953,-5.227345,5.144529,-6.132956,3.133494,-5.537657,4.224692,-4.259420,-5.737399,-0.951214,-2.734336,-2.009232,9.066606,3.571148,9.487035,-7.793693,-0.105587,-5.098439,9.260182,1.192634,-5.010489,-7.728100], dtype = "float32")#candidate|6372|(2240,)|const|float32
var_6373 = relay.var("var_6373", dtype = "bool", shape = (520,))#candidate|6373|(520,)|var|bool
var_6374 = relay.var("var_6374", dtype = "float64", shape = (39, 5))#candidate|6374|(39, 5)|var|float64
call_6370 = relay.TupleGetItem(func_5080_call(relay.reshape(var_6371.astype('int8'), [960,]), relay.reshape(const_6372.astype('float32'), [280, 8]), relay.reshape(var_6373.astype('bool'), [520,]), relay.reshape(const_6372.astype('float32'), [2240,]), relay.reshape(var_6374.astype('float64'), [195, 1]), ), 11)
call_6375 = relay.TupleGetItem(func_5086_call(relay.reshape(var_6371.astype('int8'), [960,]), relay.reshape(const_6372.astype('float32'), [280, 8]), relay.reshape(var_6373.astype('bool'), [520,]), relay.reshape(const_6372.astype('float32'), [2240,]), relay.reshape(var_6374.astype('float64'), [195, 1]), ), 11)
func_227_call = mod.get_global_var('func_227')
func_230_call = mutated_mod.get_global_var('func_230')
call_6376 = func_227_call(relay.reshape(call_6370.astype('float32'), [13, 3, 1]))
call_6377 = func_227_call(relay.reshape(call_6370.astype('float32'), [13, 3, 1]))
bop_6380 = relay.add(call_6376.astype('uint8'), var_6373.astype('uint8')) # shape=(13, 3, 520)
bop_6383 = relay.add(call_6377.astype('uint8'), var_6373.astype('uint8')) # shape=(13, 3, 520)
output = relay.Tuple([call_6359,call_6370,var_6371,const_6372,var_6374,bop_6380,])
output2 = relay.Tuple([call_6360,call_6375,var_6371,const_6372,var_6374,bop_6383,])
func_6395 = relay.Function([var_6371,var_6373,var_6374,], output)
mod['func_6395'] = func_6395
mod = relay.transform.InferType()(mod)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6395_call = mutated_mod.get_global_var('func_6395')
var_6397 = relay.var("var_6397", dtype = "int8", shape = (960,))#candidate|6397|(960,)|var|int8
var_6398 = relay.var("var_6398", dtype = "bool", shape = (520,))#candidate|6398|(520,)|var|bool
var_6399 = relay.var("var_6399", dtype = "float64", shape = (39, 5))#candidate|6399|(39, 5)|var|float64
call_6396 = func_6395_call(var_6397,var_6398,var_6399,)
output = call_6396
func_6400 = relay.Function([var_6397,var_6398,var_6399,], output)
mutated_mod['func_6400'] = func_6400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_6428 = relay.TupleGetItem(func_3004_call(), 0)
call_6429 = relay.TupleGetItem(func_3006_call(), 0)
output = relay.Tuple([call_6428,])
output2 = relay.Tuple([call_6429,])
func_6439 = relay.Function([], output)
mod['func_6439'] = func_6439
mod = relay.transform.InferType()(mod)
output = func_6439()
func_6440 = relay.Function([], output)
mutated_mod['func_6440'] = func_6440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6477 = relay.var("var_6477", dtype = "float32", shape = (13, 12, 11))#candidate|6477|(13, 12, 11)|var|float32
uop_6478 = relay.atan(var_6477.astype('float32')) # shape=(13, 12, 11)
func_5722_call = mod.get_global_var('func_5722')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6483 = relay.TupleGetItem(func_5722_call(), 0)
call_6484 = relay.TupleGetItem(func_5723_call(), 0)
func_447_call = mod.get_global_var('func_447')
func_449_call = mutated_mod.get_global_var('func_449')
var_6500 = relay.var("var_6500", dtype = "int32", shape = (4, 72))#candidate|6500|(4, 72)|var|int32
call_6499 = relay.TupleGetItem(func_447_call(relay.reshape(var_6500.astype('int32'), [288,])), 2)
call_6501 = relay.TupleGetItem(func_449_call(relay.reshape(var_6500.astype('int32'), [288,])), 2)
bop_6527 = relay.greater(uop_6478.astype('bool'), relay.reshape(var_6477.astype('bool'), relay.shape_of(uop_6478))) # shape=(13, 12, 11)
bop_6530 = relay.maximum(bop_6527.astype('uint8'), relay.reshape(uop_6478.astype('uint8'), relay.shape_of(bop_6527))) # shape=(13, 12, 11)
bop_6535 = relay.floor_divide(bop_6530.astype('float32'), relay.reshape(uop_6478.astype('float32'), relay.shape_of(bop_6530))) # shape=(13, 12, 11)
output = relay.Tuple([call_6483,call_6499,var_6500,bop_6535,])
output2 = relay.Tuple([call_6484,call_6501,var_6500,bop_6535,])
func_6542 = relay.Function([var_6477,var_6500,], output)
mod['func_6542'] = func_6542
mod = relay.transform.InferType()(mod)
var_6543 = relay.var("var_6543", dtype = "float32", shape = (13, 12, 11))#candidate|6543|(13, 12, 11)|var|float32
var_6544 = relay.var("var_6544", dtype = "int32", shape = (4, 72))#candidate|6544|(4, 72)|var|int32
output = func_6542(var_6543,var_6544,)
func_6545 = relay.Function([var_6543,var_6544,], output)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5604_call = mod.get_global_var('func_5604')
func_5606_call = mutated_mod.get_global_var('func_5606')
call_6571 = relay.TupleGetItem(func_5604_call(), 0)
call_6572 = relay.TupleGetItem(func_5606_call(), 0)
output = call_6571
output2 = call_6572
func_6581 = relay.Function([], output)
mod['func_6581'] = func_6581
mod = relay.transform.InferType()(mod)
output = func_6581()
func_6582 = relay.Function([], output)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6611 = relay.var("var_6611", dtype = "float64", shape = ())#candidate|6611|()|var|float64
var_6612 = relay.var("var_6612", dtype = "float64", shape = (7, 1, 12))#candidate|6612|(7, 1, 12)|var|float64
bop_6613 = relay.floor_divide(var_6611.astype('float64'), var_6612.astype('float64')) # shape=(7, 1, 12)
output = relay.Tuple([bop_6613,])
output2 = relay.Tuple([bop_6613,])
func_6623 = relay.Function([var_6611,var_6612,], output)
mod['func_6623'] = func_6623
mod = relay.transform.InferType()(mod)
mutated_mod['func_6623'] = func_6623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6623_call = mutated_mod.get_global_var('func_6623')
var_6625 = relay.var("var_6625", dtype = "float64", shape = ())#candidate|6625|()|var|float64
var_6626 = relay.var("var_6626", dtype = "float64", shape = (7, 1, 12))#candidate|6626|(7, 1, 12)|var|float64
call_6624 = func_6623_call(var_6625,var_6626,)
output = call_6624
func_6627 = relay.Function([var_6625,var_6626,], output)
mutated_mod['func_6627'] = func_6627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4655_call = mod.get_global_var('func_4655')
func_4656_call = mutated_mod.get_global_var('func_4656')
call_6631 = func_4655_call()
call_6632 = func_4655_call()
output = relay.Tuple([call_6631,])
output2 = relay.Tuple([call_6632,])
func_6633 = relay.Function([], output)
mod['func_6633'] = func_6633
mod = relay.transform.InferType()(mod)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mutated_mod.get_global_var('func_6633')
call_6634 = func_6633_call()
output = call_6634
func_6635 = relay.Function([], output)
mutated_mod['func_6635'] = func_6635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_6659 = relay.TupleGetItem(func_3981_call(), 0)
call_6660 = relay.TupleGetItem(func_3983_call(), 0)
output = relay.Tuple([call_6659,])
output2 = relay.Tuple([call_6660,])
func_6668 = relay.Function([], output)
mod['func_6668'] = func_6668
mod = relay.transform.InferType()(mod)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6668_call = mutated_mod.get_global_var('func_6668')
call_6669 = func_6668_call()
output = call_6669
func_6670 = relay.Function([], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5722_call = mod.get_global_var('func_5722')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6677 = relay.TupleGetItem(func_5722_call(), 0)
call_6678 = relay.TupleGetItem(func_5723_call(), 0)
output = relay.Tuple([call_6677,])
output2 = relay.Tuple([call_6678,])
func_6690 = relay.Function([], output)
mod['func_6690'] = func_6690
mod = relay.transform.InferType()(mod)
mutated_mod['func_6690'] = func_6690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6690_call = mutated_mod.get_global_var('func_6690')
call_6691 = func_6690_call()
output = call_6691
func_6692 = relay.Function([], output)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mod.get_global_var('func_5504')
func_5505_call = mutated_mod.get_global_var('func_5505')
call_6696 = func_5504_call()
call_6697 = func_5504_call()
func_3632_call = mod.get_global_var('func_3632')
func_3634_call = mutated_mod.get_global_var('func_3634')
call_6720 = relay.TupleGetItem(func_3632_call(), 2)
call_6721 = relay.TupleGetItem(func_3634_call(), 2)
uop_6722 = relay.acos(call_6720.astype('float32')) # shape=(2240,)
uop_6724 = relay.acos(call_6721.astype('float32')) # shape=(2240,)
output = relay.Tuple([call_6696,uop_6722,])
output2 = relay.Tuple([call_6697,uop_6724,])
func_6725 = relay.Function([], output)
mod['func_6725'] = func_6725
mod = relay.transform.InferType()(mod)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mutated_mod.get_global_var('func_6725')
call_6726 = func_6725_call()
output = call_6726
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_6743 = relay.TupleGetItem(func_3004_call(), 0)
call_6744 = relay.TupleGetItem(func_3006_call(), 0)
func_5722_call = mod.get_global_var('func_5722')
func_5723_call = mutated_mod.get_global_var('func_5723')
call_6754 = relay.TupleGetItem(func_5722_call(), 0)
call_6755 = relay.TupleGetItem(func_5723_call(), 0)
func_447_call = mod.get_global_var('func_447')
func_449_call = mutated_mod.get_global_var('func_449')
var_6757 = relay.var("var_6757", dtype = "int32", shape = (288,))#candidate|6757|(288,)|var|int32
call_6756 = relay.TupleGetItem(func_447_call(relay.reshape(var_6757.astype('int32'), [288,])), 2)
call_6758 = relay.TupleGetItem(func_449_call(relay.reshape(var_6757.astype('int32'), [288,])), 2)
func_1646_call = mod.get_global_var('func_1646')
func_1649_call = mutated_mod.get_global_var('func_1649')
const_6761 = relay.const([1.464841,0.174140,8.138367,4.963561,1.046367,-0.541456,5.335324,7.638016,1.582886,3.565276,-0.681190,8.160121,0.855001,-0.422305,-3.302022,5.210577,-6.389197,2.276671,-3.003529,-7.543238,-5.428571,4.029111,3.189963,-9.841624,-0.728325,-5.389911,0.900142,-4.739449,-7.191222,1.575275,1.789072,-1.418873,9.928993,2.959715,8.543790,-0.833263,5.672497,1.593393,-7.440456,3.449415,7.620800,4.022341,7.548766,-8.123460,-4.883074,-3.941357,-3.489156,8.674601,-0.415823,8.644170,-6.599581,3.543761,-6.296352,-4.449195,2.258402,9.463232,1.015566,5.170120,-9.241830,-6.842321,3.698616,7.612839,5.535690,-0.350681,7.053999,0.484588,5.207376,3.483563,-9.232187,-0.278926,6.857190,-1.716548,-5.035057,2.771990,3.204777,6.291205,9.626894,-4.859867], dtype = "float32")#candidate|6761|(78,)|const|float32
call_6760 = func_1646_call(relay.reshape(const_6761.astype('float32'), [2, 3, 13]))
call_6762 = func_1646_call(relay.reshape(const_6761.astype('float32'), [2, 3, 13]))
var_6764 = relay.var("var_6764", dtype = "float32", shape = (78,))#candidate|6764|(78,)|var|float32
bop_6765 = relay.mod(const_6761.astype('float32'), relay.reshape(var_6764.astype('float32'), relay.shape_of(const_6761))) # shape=(78,)
bop_6784 = relay.subtract(bop_6765.astype('int64'), relay.reshape(call_6760.astype('int64'), relay.shape_of(bop_6765))) # shape=(78,)
bop_6787 = relay.subtract(bop_6765.astype('int64'), relay.reshape(call_6762.astype('int64'), relay.shape_of(bop_6765))) # shape=(78,)
output = relay.Tuple([call_6743,call_6754,call_6756,var_6757,bop_6784,])
output2 = relay.Tuple([call_6744,call_6755,call_6758,var_6757,bop_6787,])
func_6790 = relay.Function([var_6757,var_6764,], output)
mod['func_6790'] = func_6790
mod = relay.transform.InferType()(mod)
mutated_mod['func_6790'] = func_6790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6790_call = mutated_mod.get_global_var('func_6790')
var_6792 = relay.var("var_6792", dtype = "int32", shape = (288,))#candidate|6792|(288,)|var|int32
var_6793 = relay.var("var_6793", dtype = "float32", shape = (78,))#candidate|6793|(78,)|var|float32
call_6791 = func_6790_call(var_6792,var_6793,)
output = call_6791
func_6794 = relay.Function([var_6792,var_6793,], output)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mod.get_global_var('func_4628')
func_4629_call = mutated_mod.get_global_var('func_4629')
call_6799 = relay.TupleGetItem(func_4628_call(), 0)
call_6800 = relay.TupleGetItem(func_4629_call(), 0)
func_5324_call = mod.get_global_var('func_5324')
func_5327_call = mutated_mod.get_global_var('func_5327')
const_6843 = relay.const([[10,6,6,-5,-10,-9,-3,8,-1,-7,-1,-5,-8,-7,-8,-9,-2,6,-6,-9,7,1,-3,1,9,10,-5,-6,-8,7,1,6,-10,-3,3,-5,10,-10,5,8,-9,4,1,-10,5,9,-3,1,-7,-2,-6,1,-2,-10,-2,3,-5,7,8,-9,5,9,4,1,-6,-4,-9,10,-5,10,-9,1,1,1,7,2,-1,10,-3,-7,-4,-1,5,8,-2,-9,3,-4,-2,-4,9,9,-7,5,9,-8,2,-10,1,-1,6,3,-2,4,5,2,-3,6,-9,-1,3,-3,-7,6,-1,-10,-6,6,3,1,7,-4,4,2,8,-6,-3,10,2,-7,-2,1,3,6,-7,-3,-2,-7,-4,-4,2,-7,-8,4,-2,4,1,2,3,7,-6,-4,-7,7,-2,6,-10,1,-8,10,6,-4,7,1,3,-10,8,9,9,-7,-8,4,-3,-8,10,3,-9,-4,-2,-8,1,-5,-6,-6,-2,-3,-3,-8,4,9,1,-1,-8,1,-8,-8,9,-1,8,7,8,10,-10,10,-2,7,3,-6,-3,-3,-7,1,4,10,-9,4,8,-1,-2,-2,1,10,9,5,4,-2,-10,-7,-7,8,6,3,6,4,-4,2,8,-9,7,-7,-5,2,-6,-2,9,-8,4,1,-3,9,3,-5,3,-6,-10,-3,-5,-2,7,-3,4,1,1,7,9,5,7,-3,-4,5,5,2,-5,1,6,10,5,7,5,2,-2,-8,-7,-3,9,8,6,-3,4,-6,-10,-2,8,-1,-7,-9,-1,2,-7,10,3,-1,10,3,-10,6,-5,-2,-10,-8,-7,-8,3,6,-2,-7,6,5,3,-10,5,2,-4,3,-9,-1,-7,5,-8,3,7,7,9,9,-8,-5,-5,-2,-3,-3,7,1,2,5,6,1,7,9,10,8,-7,2,9,-8,-9,7,4,10,-3,-7]], dtype = "uint64")#candidate|6843|(1, 360)|const|uint64
const_6844 = relay.const([-9.927050,0.461766,-9.066133,-1.751907,-9.604392,9.484693,8.311476,1.593588,3.253538,2.443347,-1.419935,-3.361022,9.957806,-4.887056,8.228457,-4.693623,4.480346,9.436546,-6.073682,9.301581,7.565156,2.999838,9.986788,-8.160397,-4.811215,2.485186,-1.709111,-6.804589,4.070116,-7.825995,7.329885,-6.131568,-8.444472,7.496107,-2.438095,7.606399,1.077362,-2.175007,9.397064,-6.392707,-1.174039,-1.727293,9.345493,-7.773325,-6.703538,9.467851,8.633168,-0.574130,3.233390,-1.970627,3.491688,-1.533852,5.599269,4.869237,9.524481,-2.278351,-8.940994,-5.052490,8.339092,-7.799126,9.534662,-9.724690,9.802287,8.561702,-4.853143,-6.130121,5.499556,-0.214102,1.799574,-9.877784,9.677735,-6.240993,8.605665,-6.228201,6.862410,-4.343304,-3.483077,-1.400398], dtype = "float32")#candidate|6844|(78,)|const|float32
call_6842 = relay.TupleGetItem(func_5324_call(relay.reshape(const_6843.astype('uint64'), [360,]), relay.reshape(const_6844.astype('float32'), [78,]), ), 0)
call_6845 = relay.TupleGetItem(func_5327_call(relay.reshape(const_6843.astype('uint64'), [360,]), relay.reshape(const_6844.astype('float32'), [78,]), ), 0)
func_6254_call = mod.get_global_var('func_6254')
func_6259_call = mutated_mod.get_global_var('func_6259')
const_6849 = relay.const([[-8.446379,5.955451,-4.235236,9.611503,-4.966723,6.886486,-9.966169,0.566650,-0.092030,4.664478,-1.589676,-7.182646,-1.277652,4.063442,-5.264408,5.771310]], dtype = "float64")#candidate|6849|(1, 16)|const|float64
var_6850 = relay.var("var_6850", dtype = "int16", shape = (450,))#candidate|6850|(450,)|var|int16
const_6851 = relay.const([-9.663527,-7.526098,2.038359,9.192996,-8.982189,-8.756613,-4.711828,1.499178,-7.546224,0.134383,-2.967732,7.837705,7.372363,-2.152279,2.046827,2.651791,-9.749947,9.510235,9.381070,4.411424,0.457963,-1.725890,-3.685100,-8.430313,-6.313173,4.602836,-4.910893,2.427861,7.668469,7.683651,8.484313,-8.260769,-6.458993,5.773547,9.058413,3.165221,-8.823131,-6.777738,9.959809,-4.844615,-5.660399,9.779678,-1.377207,6.366500,-2.423260,3.824458,4.637424,0.632959,0.798501,5.115301,1.815008,6.258191,-1.194963,-6.627896,-4.247223,-0.045409,3.261253,1.354971,-7.348411,0.019035,4.825952,-3.507985,1.710319,0.774320,-0.393575,9.444128,6.532126,-6.641852,-4.698505,-4.327840,5.090444,9.359861,-4.933530,-9.819024,2.201320,5.730062,-7.439785,6.434055,6.670870,-7.895749,7.395190,4.639901,-5.974180,7.072848,-5.252868,8.913477,-1.509410,-1.806149,-4.661199,2.234124,5.546064,-7.973040,1.091909,1.298536,-8.599042,-5.605673,1.807129,9.944939,2.331681,-4.153197,-9.911737,4.277179,-7.760424,8.895233,7.496836,5.612683,0.647655,-4.215955,3.460524,5.512255,-8.255740,-7.360252,8.423353,4.409625,-9.491697,-6.056773,-8.794094,9.908378,-6.160832,6.615116,5.963588,-7.418257,-3.945984,0.494311,-5.200015,-5.523056,3.742192,-8.532862,-4.968060,6.587390,3.268732,4.359539,-8.322239,-0.479032,9.353856,-8.361958,-4.381350,7.054950,2.914339,6.137859,6.071463,-6.363315,-0.473027,1.387059,9.655640,2.665092,-7.397561,-2.126925,2.037507,1.569055,-4.871200,0.584509,-2.144311,1.231805,-5.808860,2.653125,-3.163817,-2.007888,-3.393592,4.675777,-8.179476,-1.013696,8.006353,9.369108,-2.244162,6.243986,-5.383696,3.459491,7.740543,8.139244,4.358628,2.583720,-6.174677,-5.408512,9.225548,-8.435421,-9.742030,5.140840,7.083663,-1.060570,2.843720,-5.149710,8.205739,1.704694,6.140774,-1.947900,1.863727,-6.239139,7.582551,8.644267,8.749727,-7.523296,-7.649163,0.778455,3.293952,0.594284,-3.849676,-0.972512,-2.914347,-4.777815,-4.481364,-7.588515,4.538577,-9.640602,-0.574718,8.577073,1.204679,3.516382,5.303404,-0.559914,7.732447,-7.514588,0.748723,3.890325,-2.789279,8.887086,-7.177300,-5.774795,8.547676,-4.985780,-7.211011,6.752983,7.854378,-5.591007,3.280862,9.849613,-8.270559,-0.478904,2.198944,5.946299,-2.294480,-9.017019,5.227170,-6.041213,1.991441,-6.358854,-7.317034,-7.250597,-7.281333,3.137179,9.700129,-3.676256,-6.041874,8.592722,-2.920801,5.059647,-0.586978,8.664644,-5.896628,-5.795570,-2.889828,-4.905695,-3.552989,7.837902,8.486814,-5.279829,2.681472,-7.586758,-1.950997,8.093853,9.049834,9.730115,3.225556,7.010413,-7.606540,4.054719,-0.674971,3.307798,-7.195011,3.188151,6.924531,-5.645730,3.657655,-9.051902,4.719729,-7.557732,-3.955747,-0.987200,7.916403,-8.765339,5.698747,-2.818678,0.682748,-1.383462,-5.852378,9.981203,0.259382,4.281804,-0.827151,-7.061889,3.220646,-1.147994,-8.367925,9.017542,-4.374328,8.252728,-3.630794,5.673921,-0.378785,2.729555,-5.951953,-6.501253,1.791223,-9.169356,-6.178635,4.664324,0.873529,4.369454,-0.566955,7.927364,-0.933360,-6.819456,0.967559,-9.922976,9.872697,-3.681907,-7.027329,4.978517,-9.452936,-1.053869,8.690778,6.477695,4.026533,-1.930521,7.060544,6.028459,3.404623,-5.201151,0.049330,-2.491586,7.435588,-3.700949,5.327977,3.368997,9.400693,-6.874562,9.200058,-1.754487,1.711547,-8.312480,-1.680640,-5.503405,0.935630,-6.148623,-2.543111,7.787021,-4.729965,3.099695,4.096144,1.630412,-3.190801,1.770826,3.002275,5.946863,1.561703,-1.195955,3.383568,3.816531,2.874191,6.525792,-6.914829,6.461834,5.223925,-8.288989,0.785131,5.756576,-1.271062,8.103146,-6.493069,-4.173616,-8.376593,-7.488562,1.827601,-4.654184,9.165645,-7.778017,-7.124960,-2.514089,4.997908,3.456506,9.713080,-6.389059,9.635783,5.597886,-4.731245,2.787505,-5.946101,-6.341125,8.416321,2.446813,4.423894,-8.405312,4.551095,2.665876,-5.427355,-4.563143,9.951910,5.646975,-6.553213,4.539049,-2.099811,-5.638612,-8.260611,-7.403944,3.022049,-5.481375,-3.552029,8.025605,-3.402312,-9.112030,8.053978,-8.458048,8.656532,5.453059,-7.367075,8.534695,-2.533945,-7.071321,-9.063676,-1.205693,-7.647083,-9.254178,-2.911515,-1.899160,-3.135807,7.136155,3.486106,9.830230,2.928319,7.038056,4.232100,-9.919400,-6.077628,-9.222794,5.162827,-9.548998,1.347417,-1.987905,-3.568841,-3.745770,8.833547,-3.951044,4.933392,-7.728095,5.318798,7.709388,-4.296894,-4.181216,-1.997459,7.449463,3.373795,2.709392,1.142862,-5.726121,-9.412284,-3.835640,-2.258923,0.521957,-2.573545,-2.005103,6.326538,-9.858959,9.625105,-4.199453,5.406227,-2.571294,0.025334,-5.464872,0.970084,6.558221,3.941352,-7.171025,-7.886486,-2.279729,8.923255,-5.631374,-0.696219,-5.281365,8.994219,7.835215,-9.526969,-0.461887,2.792796,-1.491685,1.514421,-4.750276,-5.283239,8.279930,-7.434839,9.042746,-5.912245,-5.673171,5.407856,5.788127,7.574177,2.323800,-6.311354,-3.717752,-5.983098,-7.822200,-5.073843,7.032139,0.876627,8.794633,-1.227876,9.732625,0.178475,2.403605,-2.976266,6.085670,8.058703,-9.650327,-5.226485,4.686975,9.552846,8.553028,-0.137709,-1.097718,6.049108,-8.249688,5.219659,-4.436472,0.378131,3.521062,-6.249919,-0.271691,4.646229,2.547832,7.642646,7.059240,2.618184,-1.506958,5.575052,4.048539,-8.458496,-5.333812,-1.742790,-9.630319,-9.509785,6.006242,7.216463,-7.523063,-3.318680,-0.505987,-9.141572,3.118962,-6.506959,5.073153,-3.470581,-7.463025,-0.404122,-7.653795,-4.026204,2.391496,-2.492122,8.324018,-5.026286,3.592437,-1.670278,-1.731787,4.084702,-8.288420,9.138573,4.649421,-8.639854,-0.811972,-9.323222,2.037605,-6.370534,2.168302,-7.626722,-3.355238,-0.374928,0.679194,2.760532,5.068695,1.979595,2.866246,6.225938,5.668951,-6.134452,1.341045,-4.718347,8.488730,5.917318,-7.777956,-0.794035,-3.518241,-4.097715,7.063934,2.641146,-4.123314,-9.814672,4.298740,-0.795171,9.299214,-6.113415,6.780376,-3.532177,4.302551,9.369541,1.905910,-7.000637,-1.681459,4.463033,1.632018,-1.251002,-9.769052,0.635583,-9.546316,-2.060129,-7.923792,-8.884976,4.377811,5.978713,-9.990386,-0.538920,-0.398544,0.885482,2.531999,-2.546686,4.822297,-0.227492,5.493282,5.140855,3.067755,8.100979,2.576869,0.450713,-7.459990,0.596324,2.010219,-6.920867,6.058976,-4.205450,6.085362,1.730526,2.560683,-9.317184,1.530824,5.781571,5.259287,-6.037622,-5.524252,7.552989,-9.627944,-7.595145,4.437761,3.994950,-9.074186,0.462381,-0.578967,3.222314,6.222576,-2.895421,4.289266,3.945776,6.863564,3.780313,-1.863895,-8.707156,-0.640385,-1.712804,-9.914937,-6.512639,-0.058627,-5.488201,-2.155669,-4.241961,7.150066,-2.485005,-9.579263,2.730509,8.600501,-3.940224,0.059424,8.565562,7.473064,3.407410,1.599206,-4.812839,-6.875190,7.719515,-6.436988,-1.200936,-9.868442,8.536807,-4.471678,-0.633445,5.481047,9.463554,-9.440132,-2.983251,9.325752,9.384147,6.996106,-2.358365,-4.006574,-7.447971,2.686487,-2.016045,7.504164,3.618759,-8.354316,-5.662955,-1.719292,-9.529036,-4.135896,-8.338155,9.271049,-2.609051,4.528066,-4.407786,-4.768937,1.307254,6.797415,-5.549947,7.367833,-9.762551,3.100515,6.582916,8.506528,-6.733198,0.271660,0.455981,-2.914600,3.624552,-4.309528,3.494754,8.436015,-9.072821,-3.705628,5.485083,-5.778693,5.980242,-4.598352,1.803136,6.842867,2.309163,-9.728932,6.169919,8.106493,0.629141,-6.737936,-6.604400,2.752693,-7.241114,3.327122,3.520852,1.756284,-6.064398,8.317985,7.455406,8.913134,7.481830,2.158308,8.321196,-4.738324,-9.627359,0.685169,-3.556160,-3.048449,1.827016,-7.386165,7.913058,7.390675,-5.517681,-6.176222,1.568237,-6.549017,7.520931,0.743242,-9.324451,0.640779,-7.163382,-9.691095,3.325519,7.710914,-1.649511,2.308774,-3.124015,0.850813,-8.579185,-0.796556,-5.772573,-9.705765,7.725962,-7.716973,3.645760,-1.623728,-4.786002,-6.614565,9.018970,-6.311489,-9.212055,-3.229148,2.255600,6.863013,7.221932,6.739365,-6.874319,3.640244,-6.225873,-7.230855,-1.040812,2.930045,9.044382,-2.927417,-7.509532,-8.395735,2.980518,2.324888,8.177431,-3.067752,-3.578089,-5.300750,2.232534,-2.736573,3.820313,-9.079938,-4.636434,-5.630757,9.406134,-0.822842,-2.965797,-7.457101,5.148291,-5.835289,-4.391864,0.280666,-2.701046,-6.907594,-1.193132,0.354582,4.266897,3.910330,-6.760651,7.270805,-7.342725,9.448749,-6.988693,-2.534266,9.479431,-1.127327,8.388073,-2.649514,7.968328,-6.006447,-4.482675,0.214611,6.574422,1.468450,7.698118,5.956982,-4.740593,-8.821576,3.440896,0.644593,0.624751,-9.126188,1.769484,-0.630139,5.416184,-7.318212,5.150539,3.424260,-5.488811,-6.454027,7.052589,-4.750053,-9.531467,2.729889,4.165034,-0.581643,-3.233043,-8.085559,2.974156,7.474774,3.018357,-5.610554,5.814832,9.002130,-7.630676,2.174479,5.982992,-1.777530,-2.542329,0.436212,-3.368595,-3.822502,6.513176,-7.331434,-0.451974,1.315649,-5.432137,-1.005103,-1.903551,9.770575,7.599351,-1.654152,-5.088472,-6.148803,-0.548857,5.729687,5.087334,-6.925005,-9.668454,2.667564,-7.309422,-1.568442,3.617081,-3.909835,-1.162367,-8.783227,1.332520,-0.936339,1.967283,-3.454175,7.031106,-2.629895,-7.990604,8.805771,-8.527668,4.862508,1.848963,7.617051,-8.434954,-7.161630,6.759518,-8.694980,-1.754064,3.319631,4.649570,2.611688,2.753758,2.868063,-1.438302,-5.943615,4.949390,5.925596,3.769609,2.501575,3.421927,-5.259792,7.033651,6.438905,2.484648,5.442877,-3.395398,4.303037,4.886357,5.947190,1.984456,-9.049980,0.728261,-0.570626,-4.791328,-5.549258,5.963388,-8.876391,2.164923,-2.292525,-7.495985,0.269220,0.518846,-2.642064,3.564560,-8.493108,5.481279,-9.364583,5.017900,3.736246,-0.909985,9.725156,-2.270185,-1.519864,2.022409,4.780741,1.347180,-7.744660,1.363633,4.069374,3.321540,-8.629367,-1.057138,3.969190,2.512105,5.159667,9.537951,7.163929,-6.932039,3.282288,3.090730,-0.517899,-8.567223,7.877696,2.701153,-5.171071,-9.995780,-2.106782,1.623385,-1.051582,-1.416947,7.415290,-7.489926,-2.949315,-3.463839,-4.216700,-9.292825,-9.940676,-1.206584,-3.528079,-9.957179,-0.963590,1.375127,1.629364,-0.726675,7.040911,5.370594,-5.189561,-2.882439,3.672968,9.227918,-0.523175,-4.350071,-5.033641,-4.299194,-9.256636,3.421199,6.150291,0.287452,-8.860283,4.085060,3.036510,-2.781622,-9.024989,-3.076663,4.762436,-3.777058,4.687936,2.411139,1.688846,-4.077643,-5.776990,-7.065129,1.545653,7.764621,6.351767,6.781228,9.274200,9.482723,-6.001616,1.281091,1.630285,2.732196,-2.596746,-2.015267,-2.054599,-8.610825,-0.203437,8.910626,-9.029069,7.723425,7.946975,-7.536200,-5.322319,-2.170806,6.391504,1.393935,8.505474,9.446289,2.545471,9.165331,1.463097,-6.749815,-9.699296,5.071508,-6.047957,2.779533,4.110816,0.562391,7.386839,5.232363,4.350494,6.174697,6.420406,0.249276,-4.672068,3.463757,-3.827246,8.273688,5.931012,9.618041,-4.816883,6.503129,1.185507,5.375260,-8.622960,9.713898,3.519786,9.749979,-4.044290,0.332249,0.695654,-4.688884,8.209621,8.663996,-4.186367,-9.873979,9.664704,-9.436113,-1.779557,4.841917,-6.554238,8.683564,5.546427,1.612474,7.289579,-2.668694,7.478735,-8.193690,-8.256827,2.951453,-6.306513,3.291569,6.154278,-5.520076,-4.445791,-6.395950,6.177205,-5.526040,-5.802069,-0.481011,1.692088,4.382695,1.300882,9.593532,7.729767,-8.895409,-9.063014,6.960872,1.311288,-9.524386,7.192625,5.859320,-8.230861,4.951907,8.466145,-3.852688,-7.490970,1.056507,6.857375,1.871696,7.608449,-0.756823,-2.040726,9.809528,-6.174580,5.995508,-6.568944,-9.934576,-6.050712,-5.281705,7.028305,-9.635503,-1.453016,0.919659,-6.782624,-8.516027,-5.611038,-1.867282,-6.218024,-2.460769,5.313835,-2.502080,-8.176620,-0.353727,-5.868760,-3.288750,4.356136,1.288704,-4.754720,9.959938,6.250829,-1.311533,-3.362043,-8.870675,-8.491227,0.129932,-1.076225,-4.884773,-5.100262,-5.369034,4.799753,-2.972166,6.357185,-3.299241,-5.168866,9.953411,9.381043,7.720734,-3.390357,-6.102666,0.497066,-8.434227,5.208104,-2.906704,6.917520,-4.678730,-9.562067,7.854484,-0.385882,6.669894,1.608269,-1.232807,3.813553,-8.818223,-4.133501,-0.472369,6.539954,2.203907,6.647852,-0.249787,-0.011550,9.669091,-8.183765,0.477880,-4.276659,1.727548,6.188819,-1.210064,-6.146218,-7.623289,2.967035,-9.796424,4.047505,9.245395,7.369558,3.634099,-2.835438,-9.771335,1.850971,6.451542,1.908771,9.616750,7.608989,4.491543,-6.132034,-0.806392,-3.213444,-1.159435,-8.473495,5.329598,-0.117703,-4.642015,3.383414,6.421935,-3.444608,0.149350,1.064134,-1.224812,-6.048726,-5.537933,2.328967,2.733212,7.131365,7.863834,9.277518,-1.894139,5.589660,4.690830,4.033826,1.362483,7.409612,7.415558,9.436722,9.464949,5.625682,-7.612566,-3.230108,7.642135,-6.564642,-1.805275,1.576847,5.659914,8.412503,7.510599,2.617182,-9.098931,5.176104,5.863908,8.007712,4.586857,3.850602,0.055726,0.341142,4.101617,2.169757,0.216818,-9.459094,8.350407,1.338175,7.176234,6.887994,-5.392815,7.036442,7.830575,-1.460459,-0.021637,-1.423208,-1.516865,-9.049481,4.016942,2.391017,-0.243852,0.156665,5.517349,-2.015134,7.954603,-7.811106,6.214340,-4.702111,-2.753373,2.590217,-4.940990,-9.754123,3.245188,-9.575149,-7.834244,3.571046,-2.232179,-1.971921,-4.700772,-8.856467,-9.676863,9.925015,-1.130039,-4.184310,-2.740683,2.146336,2.188440,5.547657,-4.137764,-6.219477,1.703844,9.372390,-4.127253,9.799256,0.428700,5.693020,-6.507661,3.542030,-5.080010,3.402028,9.951822,1.375506,-9.414794,6.164808,-1.639719,0.643111,1.153621,0.652081,-5.375085,-4.238509,-6.872908,3.841641,-1.084057,-9.813691,-2.168097,-1.654596,-7.087420,8.780384,-8.149113,-8.890299,-1.333583,3.924053,-8.378007,9.557241,3.606219,-2.845944,4.837450,0.850846,-7.390865,-4.565886,0.727767,-0.099560,-5.917559,4.043405,-0.748995,-7.334376,8.548184,8.205523,-8.548437,8.552009,-9.125167,-7.614182,3.551973,-2.501206,0.398076,1.825302,6.103801,-0.633633,9.910195,-9.364385,4.678952,-5.464892,-5.319638,7.701595,-3.721062,2.510508,-2.270096,3.804638,9.691116,-9.715551,-9.955589,4.488237,6.121071,-9.219928,2.373240,6.643560,2.218728,-9.730879,4.162316,-4.306617,-3.529245,-3.510073,8.793610,-0.565305,7.590278,3.478209,-7.772587,7.735177,8.099039,-2.850955,6.949386,4.058953,4.850966,-8.565659,8.079506,1.631879,-8.072743,2.999910,9.236091,-2.528068,-3.039138,-8.226125,5.905164,-8.115439,1.239553,4.310867,-6.737512,1.602142,-7.130475,-8.339397,5.862516,0.833352,-4.658307,6.850155,7.736506,-1.483544,-4.408882,-8.159877,4.422150,-3.329920,-2.744296,2.706382,-1.705670,-9.902507,-7.942844,2.764419,-8.784943,-5.644534,1.327982,-7.388504,5.344088,-2.316059,-3.913457,5.390843,1.129503,-6.844253,-3.621279,6.800494,1.299025,1.388073,-6.509436,9.756037,-4.323467,5.464016,9.264558,-3.436316,3.824494,-2.863680,1.042129,9.919176,2.944392,-9.517210,9.032925,8.525322,-5.174678,-6.694988,6.755239,8.039607,3.611520,2.061501,7.042088,-5.812183,-6.002112,-0.228529,-1.061196,-9.302228,6.107335,1.256298,-4.240300,7.894181,-6.694634,-2.014792,5.795862,4.335294,-2.959782,-2.730274,-1.118713,-5.306115,6.668635,-0.033648,-7.927423,-6.250048,-0.298671,-7.285133,-9.271548,9.529025,-4.808339,-2.039609,5.618806,-5.809936,-9.514263,7.691796,0.482415,4.323086,-3.316585,1.508319,-4.978140,6.076194,8.461974,-9.904673,7.710848,-3.482932,3.872679,-8.514974,-0.878367,-2.033921,2.574103,7.743927,-1.143498,7.467724,2.197055,0.757684,-5.871875,-6.330852,7.570730,5.256166,-7.911970,-3.596565,-1.515026,-3.811275,7.593759,9.777221,8.034841,-7.156653,1.745041,-2.532309,-8.918293,5.434434,-8.465910,-8.031073,-6.943190,8.893744,-7.126491,-9.619019,-9.095132,6.866546,2.013853,-2.513399,-2.557796,-4.795710,-3.155287,-3.941865,2.010681,-0.246388,1.748065,6.544741,-2.634599,-3.644639,-8.440393,-1.690417,6.815893,-1.562583,-0.050699,4.118353,0.961623,9.075872,3.989957,-5.451383,1.582655,-2.083552,-1.068709,-7.153816,-0.033647,4.654126,3.915351,6.432609,8.185803,1.518372,-1.795263,-9.499613,4.699413,-9.526407,2.236523,3.113364,2.799025,7.755075,8.453516,-2.766691,-7.591995,-3.864050,7.573156,7.237153,9.333862,0.733950,8.187089,-5.751793,7.190705,8.101862,8.760434,1.531073,0.757513,-6.029019,-3.605501,-8.270181,-2.292166,-7.452884,8.929845,1.595842,-8.460458,-6.705733,-5.768693,-8.465797,4.488478,8.253193,-3.169906,4.552665,9.339367,-0.576181,2.152840,0.927690,5.857533,5.199652,5.314981,-6.497601,6.600696,7.171063,4.450104,7.085036,-2.851476,4.427003,5.649357,-1.713136,6.747409,-9.877223,4.718896,-2.029239,5.269975,2.739826,-8.070126,8.547467,5.245468,-0.684484,-8.431153,0.353125,-6.089863,-8.944804,-8.101071,-1.210138,7.142767,-3.080886,-4.458220,-6.493965,-4.427362,-7.735114,7.686527,9.897443,6.530416,0.332463,9.102914,-5.221104,4.905809,-2.456206,6.745820,7.579184,9.102847,4.226211,3.321428,-9.314355,-7.280444,-7.629039,-1.621325,-6.561787,9.383277,4.335076,-3.095107,-0.288928,-1.932911,0.638355,-5.373105,1.887341,-6.155080,0.967007,-6.932209,-3.148044,4.965532,-8.174684,-9.962479,1.056311,-0.901496,-9.229056,-9.699056,-8.737957,7.526116,-1.699833,6.876405,-1.840455,-4.441923,7.198445,2.441483,6.185978,-0.747839,-5.833077,-1.566941,9.242541,-3.681564,-4.243881,-0.373986,-5.660869,-8.228154,7.792834,-2.453389,-6.478161,-1.501176,7.426389,0.208011,-9.133666,-2.452875,-2.970825,-1.706358,8.202734,7.739775,5.995213,-1.724883,-9.025375,-5.818394,-6.288633,8.124783,6.894457,-5.613054,0.789749,-6.749658,-6.699423,-7.657471,6.464913,-4.126529,8.167049,-6.308739,3.741104,-1.923570,-3.703554,-8.298668,5.445927,2.870587,0.321393,0.227713,3.812391,-9.944420,-5.295963,-4.521977,3.662461,-7.861115,-2.620602,7.086567,-6.623143,3.833150,-7.166370,8.918897,7.520015,-9.790313,1.906885,4.783512,7.072228,-2.350942,-7.996590,-5.507799,2.516233,5.240289,6.113466,9.125612,-0.897024,-6.838026,-2.358708,8.718539,-9.236315,-8.984695,5.770036,-3.685170,8.490859,3.391323,3.028426,5.070264,-5.795020,8.257036,2.688243,6.463578,1.231337,-7.448217,-7.794625,-9.981841,-6.131096,-7.416830,-7.589693,-6.197736,3.862355,-0.048657,3.162924,9.879161,-3.817875,-8.495963,5.433702,9.092000,0.665360,0.707377,0.820544,1.178218,-0.452174,-7.352590,-3.110331,0.909633,-4.420414,0.846952,2.682291,7.894108,5.614713,-1.837403,-0.223271,7.381070,6.802533,5.880013,-6.483327,-7.397656,-5.654582,-7.830929,-9.229893,-2.458510,7.282664,-6.836433,-8.801099,-0.085596,3.445628,-2.137502,-6.611949,-8.394049,-7.426664,4.321912,-3.591829,-7.092849,-0.057246,4.945210,-7.347548,3.988313,2.467033,-1.882672,6.536855,2.485085,1.289416,-9.826879,-4.479827,-2.350558,-3.546183,0.161472,6.615319,6.235552,-1.655547,-7.389957,-1.529759,-8.035802,-1.360491,9.734894,2.670203,-1.659735,5.083677,3.596457,8.489224,-8.035230,3.983432,-5.377401,0.080385,-8.600575,5.991970,-1.630848,-9.643189,3.101072,-4.262785,-0.570386,-5.597618,-4.952888,-4.835825,6.988831,6.803834,6.409719,8.053772,-6.070366,-0.477045,3.826279,6.884345,2.898970,-1.991917,-7.618819,-4.459835,4.883947,-0.009497,-0.627504,7.036766,-0.789738,2.860827,4.714242,-5.508383,-4.867798,-0.353832,-9.757163,8.787684,4.805496,-4.230112,-2.547811,-8.600375,7.588454,-7.076147,8.147720,9.677995,-4.783320,-7.208397,-1.851420,4.867014,1.128552,-7.803396,-4.465602,8.034388,5.320948,7.623513,-9.441669,1.771571,-5.975200,5.349110,0.344058,-1.320983,-1.794901,3.271289,4.314573,4.130844,-1.964064,-9.076296,7.798403,-6.372777,4.962855,5.217186,-4.077695,-8.679520,-2.895108,-3.698528,-5.311944,1.368616,8.456628,6.169159,-4.409993,7.658583,-2.878290,9.861878,-9.930848,8.351795,0.708721,5.995221,2.004703,0.008462,-7.682167,-2.338582,-7.152689,3.313058,-9.338822,-5.435054,4.574930,-6.244679,3.904955,3.005146,0.030256,9.595111,1.001843,-7.012933,-9.931311,-2.677056,-2.577226,-7.740796,7.268699,-0.257417,-5.174402,-9.934041,7.950422,-7.922993,-6.220244,-5.378549,-8.404254,-0.656867,-5.781684,-2.728014,-8.050232,8.689414,7.174682,6.240261,0.659809,7.739092,-3.283544,4.763478,-5.198011,-8.106968,-0.278432,-0.430110,6.316111,-4.763391,-2.593900,-1.238362,-0.538281,4.841007,7.290362,-5.729526,-1.069995,8.070397,5.462568,-3.642934,-7.189971,-3.782565,5.283199,7.272323,6.274187,7.869424,-1.529285,3.278581,0.531325,1.476074,1.149052,-7.135977,2.030435,1.598916,-5.774070,-2.773249,-5.063912,5.255960,7.047964,-2.364851,8.511515,-2.790436,-0.591782,-4.349659,-7.787625,-9.944209,6.611460,-0.994909,-7.676612,4.655729,2.952714,0.045210,-7.906241,-8.863362,6.713798,-8.769684,-1.589593,9.844903,-4.172289,-5.526153,4.117968,3.027874,7.386388,3.007378,7.447405,2.754785,-2.789371,-9.342147,1.385108,-6.325593,-1.565236,4.759988,-8.047187,1.019940,-3.591911,3.316607,-0.943217,-4.424836,-6.871960,-0.088033,-3.859413,4.258614,-3.727952,6.574175,-4.029781,1.308683,9.667674,8.753639,3.566789,-3.663912,-7.838254,3.499038,-9.359028,8.920226,2.863208,-3.192740,9.661427,-6.250257,-6.142983,9.816681,6.251756,6.677389,-9.077230,-6.358975,4.346717,4.751122,5.702004,-7.451844,9.650678,-4.654870,5.140250,-9.745824,-6.306977,7.202315,2.799702,5.808810,7.171326,0.347823,6.181193,2.770013,-0.055926,9.032132,5.780034,-8.279147,7.437858,4.884670,2.488794,6.588670,-6.236810,-2.082957,9.078790,-9.210212,-4.781839,-7.778451,-8.923915,-2.214103,8.866057,-7.510135,-3.719385,6.533152,4.045579,-4.669582,-9.053884,4.100808,-4.691859,-6.678031,4.537031,-2.907348,-3.917092,-6.781262,-5.481803,-3.523681,-7.894583,-5.937202,3.591880,-9.659300,-1.362995,3.876226,-5.057917,3.930023,5.400826,-7.440518,2.656510,-5.356335,-1.647323,-3.055491,-6.617677,-7.269280,9.721224,0.326894,-5.570656,6.142701,-6.307502,5.968464,8.329765,-5.235242,3.705105,-1.201550,9.019816,-2.853811,1.025811,1.603823,1.097296,-1.012036,-5.197667,8.224716,4.255105,-0.839110,-7.887950,-6.333345,-0.827645,-2.467983,7.431671,-1.047147,3.873305,-5.311281,6.696385,-6.145020,8.710818,9.649700,-1.042380,-2.975826,-1.555697,-5.897070,3.722849,-8.559618,1.557548,0.961414,8.080491,5.042122,-2.497995,7.661870,8.893763,7.051686,-4.573878,7.874235,5.345448,-8.535630], dtype = "float32")#candidate|6851|(2240,)|const|float32
var_6852 = relay.var("var_6852", dtype = "int32", shape = (2145,))#candidate|6852|(2145,)|var|int32
call_6848 = relay.TupleGetItem(func_6254_call(relay.reshape(const_6849.astype('float64'), [16,]), relay.reshape(var_6850.astype('int16'), [450,]), relay.reshape(const_6851.astype('float32'), [2240,]), relay.reshape(var_6852.astype('int32'), [1, 2145]), ), 5)
call_6853 = relay.TupleGetItem(func_6259_call(relay.reshape(const_6849.astype('float64'), [16,]), relay.reshape(var_6850.astype('int16'), [450,]), relay.reshape(const_6851.astype('float32'), [2240,]), relay.reshape(var_6852.astype('int32'), [1, 2145]), ), 5)
output = relay.Tuple([call_6799,call_6842,const_6843,const_6844,call_6848,const_6849,var_6850,const_6851,var_6852,])
output2 = relay.Tuple([call_6800,call_6845,const_6843,const_6844,call_6853,const_6849,var_6850,const_6851,var_6852,])
func_6856 = relay.Function([var_6850,var_6852,], output)
mod['func_6856'] = func_6856
mod = relay.transform.InferType()(mod)
var_6857 = relay.var("var_6857", dtype = "int16", shape = (450,))#candidate|6857|(450,)|var|int16
var_6858 = relay.var("var_6858", dtype = "int32", shape = (2145,))#candidate|6858|(2145,)|var|int32
output = func_6856(var_6857,var_6858,)
func_6859 = relay.Function([var_6857,var_6858,], output)
mutated_mod['func_6859'] = func_6859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_6919 = relay.TupleGetItem(func_2898_call(), 0)
call_6920 = relay.TupleGetItem(func_2900_call(), 0)
func_3532_call = mod.get_global_var('func_3532')
func_3535_call = mutated_mod.get_global_var('func_3535')
var_6943 = relay.var("var_6943", dtype = "float32", shape = (280,))#candidate|6943|(280,)|var|float32
const_6944 = relay.const(-6, dtype = "uint8")#candidate|6944|()|const|uint8
call_6942 = relay.TupleGetItem(func_3532_call(relay.reshape(var_6943.astype('float32'), [5, 8, 7]), relay.reshape(const_6944.astype('uint8'), []), ), 2)
call_6945 = relay.TupleGetItem(func_3535_call(relay.reshape(var_6943.astype('float32'), [5, 8, 7]), relay.reshape(const_6944.astype('uint8'), []), ), 2)
func_5190_call = mod.get_global_var('func_5190')
func_5194_call = mutated_mod.get_global_var('func_5194')
var_6951 = relay.var("var_6951", dtype = "bool", shape = (520, 1))#candidate|6951|(520, 1)|var|bool
call_6950 = relay.TupleGetItem(func_5190_call(relay.reshape(var_6951.astype('bool'), [520,]), relay.reshape(call_6919.astype('uint8'), [6, 8, 10]), ), 3)
call_6952 = relay.TupleGetItem(func_5194_call(relay.reshape(var_6951.astype('bool'), [520,]), relay.reshape(call_6919.astype('uint8'), [6, 8, 10]), ), 3)
output = relay.Tuple([call_6919,call_6942,var_6943,const_6944,call_6950,var_6951,])
output2 = relay.Tuple([call_6920,call_6945,var_6943,const_6944,call_6952,var_6951,])
func_6953 = relay.Function([var_6943,var_6951,], output)
mod['func_6953'] = func_6953
mod = relay.transform.InferType()(mod)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6953_call = mutated_mod.get_global_var('func_6953')
var_6955 = relay.var("var_6955", dtype = "float32", shape = (280,))#candidate|6955|(280,)|var|float32
var_6956 = relay.var("var_6956", dtype = "bool", shape = (520, 1))#candidate|6956|(520, 1)|var|bool
call_6954 = func_6953_call(var_6955,var_6956,)
output = call_6954
func_6957 = relay.Function([var_6955,var_6956,], output)
mutated_mod['func_6957'] = func_6957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6966 = relay.var("var_6966", dtype = "int16", shape = (15, 11, 5))#candidate|6966|(15, 11, 5)|var|int16
const_6967 = relay.const([[[10,-4,2,-8,-6],[-8,-7,2,-2,-10],[-1,-5,-1,4,-4],[-7,2,-1,-7,-5],[-5,-9,-7,-6,-1],[2,-9,8,8,7],[-3,-6,-10,-1,-8],[-9,-9,-7,1,-5],[-10,-2,-6,3,4],[-5,4,4,-8,10],[1,-1,8,-9,1]],[[-1,3,-2,-6,2],[-4,-9,-6,-4,-7],[-2,-4,9,1,10],[3,5,-5,-4,3],[-10,-1,-7,1,-1],[8,7,6,-3,-5],[1,4,-6,4,-9],[6,-5,-10,5,-6],[2,-2,5,6,-7],[10,-10,5,-3,-6],[9,4,10,-6,7]],[[-1,-5,7,-1,7],[5,7,4,-1,-4],[-1,-8,6,-3,1],[6,9,7,1,-1],[5,8,1,-5,-8],[9,1,-8,-5,9],[1,10,-7,9,4],[-6,8,-2,-5,1],[-7,7,-10,-4,6],[-3,-1,6,-9,-5],[5,-3,-7,-1,-3]],[[6,-5,-9,-7,-9],[8,-7,-6,-8,10],[-9,7,9,8,-6],[4,-2,-6,5,-4],[4,8,-5,-8,9],[-6,-4,-2,-7,-5],[-1,7,-10,-4,4],[-9,4,-4,10,-9],[2,7,10,-1,10],[-2,-4,6,-9,9],[10,6,5,-2,1]],[[-6,-9,-1,4,6],[7,-5,-6,-5,3],[10,1,-9,5,-3],[-5,1,2,2,3],[10,-7,-3,7,-6],[3,6,-2,-4,8],[-5,-6,6,-10,6],[8,5,10,-6,7],[9,-10,8,4,2],[7,7,-6,3,-1],[1,-4,5,-8,3]],[[5,-7,-1,-10,7],[8,-9,-9,-8,-3],[1,8,-4,-9,6],[-10,-6,-7,-4,-3],[-8,4,6,4,-6],[-2,-3,-10,5,-9],[-3,-1,6,7,2],[-10,3,-10,9,-10],[1,2,4,2,3],[-8,10,7,-5,7],[-6,-10,3,5,-3]],[[5,-9,-7,10,2],[-3,-2,-10,-1,3],[6,7,6,5,-1],[10,-2,4,-4,1],[10,6,6,-10,5],[-7,3,-7,3,2],[-2,-10,3,-6,-10],[3,-10,9,9,3],[5,2,-5,6,-3],[-1,-3,9,-7,-5],[1,-7,8,-7,7]],[[8,-1,7,3,5],[6,-1,9,6,-5],[4,-6,-7,7,1],[5,6,-4,-3,8],[1,5,2,-1,1],[7,4,-4,-10,-4],[-5,-2,8,-3,3],[10,-5,7,9,6],[-6,5,10,8,2],[-3,-4,7,-1,2],[4,-7,6,-8,3]],[[-7,9,-8,3,9],[9,-2,8,-4,2],[2,-7,6,-6,10],[-10,-8,-9,10,-2],[7,2,6,-9,-9],[-6,10,4,7,-2],[-7,2,-1,-2,2],[1,-7,9,3,4],[2,4,3,7,8],[-5,-2,-2,9,-6],[-10,-10,-2,-2,8]],[[6,8,-9,-10,9],[6,2,-2,-2,10],[9,7,-9,-10,-1],[-1,-6,8,9,4],[5,3,-9,-2,3],[-1,4,-4,4,-7],[2,-3,-6,8,1],[5,-3,3,-1,-4],[-9,-9,-10,7,8],[-10,-4,1,-6,-7],[-8,-2,9,4,10]],[[-4,-1,-3,5,7],[-6,4,-2,1,-1],[-4,1,3,-1,9],[2,-2,8,6,-7],[-7,-1,-2,7,10],[2,-8,-2,-2,-7],[-8,-6,-4,8,-8],[-4,-8,9,8,5],[-3,-4,7,-1,10],[-2,6,9,-2,1],[-1,-6,-2,1,10]],[[-9,-1,3,8,-9],[-1,7,8,-9,-2],[-2,-7,-4,-5,2],[10,-6,6,-1,3],[-5,2,2,-7,-4],[-3,-3,-5,3,3],[5,9,-4,-1,9],[6,8,5,2,5],[2,10,-10,4,9],[9,1,-7,10,10],[4,5,-6,4,-4]],[[-1,6,-6,10,-10],[-9,3,4,5,-8],[7,-10,3,-5,-3],[-5,9,-8,8,7],[7,6,6,-7,-5],[-5,-6,5,1,6],[10,10,5,-4,-8],[-2,7,-6,-7,5],[10,6,-4,-5,4],[-3,-3,4,3,-10],[1,7,-9,2,-5]],[[-1,8,1,2,-9],[5,1,-4,-7,-4],[-7,10,-2,6,6],[2,6,-7,-2,-3],[5,2,8,-10,-3],[4,9,6,5,-9],[3,8,-3,-8,-4],[-7,-1,-5,-7,5],[-1,-1,-5,4,-9],[10,-8,3,5,-6],[4,-8,-4,-3,-9]],[[-10,1,3,-8,-5],[1,1,6,-1,-7],[2,2,-6,4,-7],[10,-5,1,-9,4],[8,-1,-7,4,10],[4,-1,-1,-3,6],[9,-9,9,2,-1],[-1,-6,-9,-1,-10],[2,-2,-2,-2,9],[-5,6,-3,-4,-2],[-5,-3,7,-5,-4]]], dtype = "int16")#candidate|6967|(15, 11, 5)|const|int16
bop_6968 = relay.logical_xor(var_6966.astype('int16'), relay.reshape(const_6967.astype('int16'), relay.shape_of(var_6966))) # shape=(15, 11, 5)
output = relay.Tuple([bop_6968,])
output2 = relay.Tuple([bop_6968,])
func_6975 = relay.Function([var_6966,], output)
mod['func_6975'] = func_6975
mod = relay.transform.InferType()(mod)
mutated_mod['func_6975'] = func_6975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6976 = relay.var("var_6976", dtype = "int16", shape = (15, 11, 5))#candidate|6976|(15, 11, 5)|var|int16
func_6975_call = mutated_mod.get_global_var('func_6975')
call_6977 = func_6975_call(var_6976)
output = call_6977
func_6978 = relay.Function([var_6976], output)
mutated_mod['func_6978'] = func_6978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2799_call = mod.get_global_var('func_2799')
func_2800_call = mutated_mod.get_global_var('func_2800')
call_7023 = relay.TupleGetItem(func_2799_call(), 0)
call_7024 = relay.TupleGetItem(func_2800_call(), 0)
func_3190_call = mod.get_global_var('func_3190')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_7034 = func_3190_call()
call_7035 = func_3190_call()
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_7047 = relay.TupleGetItem(func_3004_call(), 0)
call_7048 = relay.TupleGetItem(func_3006_call(), 0)
func_6542_call = mod.get_global_var('func_6542')
func_6545_call = mutated_mod.get_global_var('func_6545')
var_7062 = relay.var("var_7062", dtype = "float32", shape = (1716,))#candidate|7062|(1716,)|var|float32
const_7063 = relay.const([10,-4,6,-3,10,-8,-1,5,-10,-2,-2,6,-5,-1,-3,-2,2,3,-1,-4,4,-6,-2,-6,7,-3,-8,-6,9,8,2,7,8,-3,-6,10,2,6,8,-8,-1,1,-9,4,4,10,-4,1,4,-2,2,4,-5,-8,4,7,7,5,-5,-2,3,-7,8,10,4,6,-4,-8,1,-4,-1,8,-9,2,4,-4,-9,-3,-3,-10,-6,2,7,1,-7,-2,-5,4,7,-9,3,5,6,-8,-2,-3,7,6,-7,-3,-1,-1,-9,-10,3,5,-1,-8,8,-6,-6,-7,-6,6,-2,-8,-6,-9,5,9,-7,6,5,-6,1,3,5,-10,-7,-6,5,-1,-2,4,-2,-5,-7,8,6,5,10,-5,-10,-7,9,-5,7,7,-8,7,6,-8,3,-7,2,6,-1,-6,-4,-7,6,9,-10,3,7,-8,1,6,-4,5,-4,-7,-10,6,-5,6,7,-5,10,-4,9,10,10,6,-8,3,9,-8,4,-2,-9,2,-2,10,6,-2,6,7,-7,-1,5,8,-3,-3,-10,-7,1,-4,6,-8,-6,9,2,9,10,-6,-5,9,3,-6,-6,4,2,-4,-2,1,3,-1,8,4,-1,3,9,3,-3,-6,1,8,-10,10,-3,1,2,10,-1,8,-7,5,2,-9,-8,-3,7,-10,2,-8,-4,-2,10,-8,8,-2,-8,2,-6,4,6,-2,-7,-7,-4,-5,-3,-5,-2,-5,-1,-7,5,-9,-10,4,10,-8,-8,-7,1,9], dtype = "int32")#candidate|7063|(288,)|const|int32
call_7061 = relay.TupleGetItem(func_6542_call(relay.reshape(var_7062.astype('float32'), [13, 12, 11]), relay.reshape(const_7063.astype('int32'), [4, 72]), ), 0)
call_7064 = relay.TupleGetItem(func_6545_call(relay.reshape(var_7062.astype('float32'), [13, 12, 11]), relay.reshape(const_7063.astype('int32'), [4, 72]), ), 0)
uop_7074 = relay.atanh(call_7034.astype('float64')) # shape=(6, 8, 10)
uop_7076 = relay.atanh(call_7035.astype('float64')) # shape=(6, 8, 10)
func_6975_call = mod.get_global_var('func_6975')
func_6978_call = mutated_mod.get_global_var('func_6978')
var_7083 = relay.var("var_7083", dtype = "int16", shape = (55, 15))#candidate|7083|(55, 15)|var|int16
call_7082 = relay.TupleGetItem(func_6975_call(relay.reshape(var_7083.astype('int16'), [15, 11, 5])), 0)
call_7084 = relay.TupleGetItem(func_6978_call(relay.reshape(var_7083.astype('int16'), [15, 11, 5])), 0)
output = relay.Tuple([call_7023,call_7047,call_7061,var_7062,const_7063,uop_7074,call_7082,var_7083,])
output2 = relay.Tuple([call_7024,call_7048,call_7064,var_7062,const_7063,uop_7076,call_7084,var_7083,])
func_7096 = relay.Function([var_7062,var_7083,], output)
mod['func_7096'] = func_7096
mod = relay.transform.InferType()(mod)
var_7097 = relay.var("var_7097", dtype = "float32", shape = (1716,))#candidate|7097|(1716,)|var|float32
var_7098 = relay.var("var_7098", dtype = "int16", shape = (55, 15))#candidate|7098|(55, 15)|var|int16
output = func_7096(var_7097,var_7098,)
func_7099 = relay.Function([var_7097,var_7098,], output)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_7198 = relay.TupleGetItem(func_3004_call(), 0)
call_7199 = relay.TupleGetItem(func_3006_call(), 0)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_7247 = relay.TupleGetItem(func_5998_call(), 0)
call_7248 = relay.TupleGetItem(func_5999_call(), 0)
func_5240_call = mod.get_global_var('func_5240')
func_5242_call = mutated_mod.get_global_var('func_5242')
call_7258 = relay.TupleGetItem(func_5240_call(), 0)
call_7259 = relay.TupleGetItem(func_5242_call(), 0)
func_4764_call = mod.get_global_var('func_4764')
func_4766_call = mutated_mod.get_global_var('func_4766')
var_7267 = relay.var("var_7267", dtype = "uint8", shape = ())#candidate|7267|()|var|uint8
call_7266 = relay.TupleGetItem(func_4764_call(relay.reshape(var_7267.astype('uint8'), [])), 4)
call_7268 = relay.TupleGetItem(func_4766_call(relay.reshape(var_7267.astype('uint8'), [])), 4)
output = relay.Tuple([call_7198,call_7247,call_7258,call_7266,var_7267,])
output2 = relay.Tuple([call_7199,call_7248,call_7259,call_7268,var_7267,])
func_7269 = relay.Function([var_7267,], output)
mod['func_7269'] = func_7269
mod = relay.transform.InferType()(mod)
var_7270 = relay.var("var_7270", dtype = "uint8", shape = ())#candidate|7270|()|var|uint8
output = func_7269(var_7270)
func_7271 = relay.Function([var_7270], output)
mutated_mod['func_7271'] = func_7271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5461_call = mod.get_global_var('func_5461')
func_5463_call = mutated_mod.get_global_var('func_5463')
call_7278 = relay.TupleGetItem(func_5461_call(), 0)
call_7279 = relay.TupleGetItem(func_5463_call(), 0)
output = relay.Tuple([call_7278,])
output2 = relay.Tuple([call_7279,])
func_7280 = relay.Function([], output)
mod['func_7280'] = func_7280
mod = relay.transform.InferType()(mod)
mutated_mod['func_7280'] = func_7280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7280_call = mutated_mod.get_global_var('func_7280')
call_7281 = func_7280_call()
output = call_7281
func_7282 = relay.Function([], output)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6035_call = mod.get_global_var('func_6035')
func_6036_call = mutated_mod.get_global_var('func_6036')
call_7309 = relay.TupleGetItem(func_6035_call(), 0)
call_7310 = relay.TupleGetItem(func_6036_call(), 0)
output = call_7309
output2 = call_7310
func_7327 = relay.Function([], output)
mod['func_7327'] = func_7327
mod = relay.transform.InferType()(mod)
output = func_7327()
func_7328 = relay.Function([], output)
mutated_mod['func_7328'] = func_7328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_7344 = relay.TupleGetItem(func_3592_call(), 0)
call_7345 = relay.TupleGetItem(func_3593_call(), 0)
func_3532_call = mod.get_global_var('func_3532')
func_3535_call = mutated_mod.get_global_var('func_3535')
const_7356 = relay.const([6.744581,0.528116,3.624152,8.855001,-9.423098,7.925059,3.564121,-6.694545,-0.831253,-3.761991,1.563381,-7.839155,8.705633,5.634713,-9.220446,-9.596106,-8.191459,-5.267212,9.124891,-4.302129,-5.903302,-4.939642,-4.715867,6.048323,-5.884754,-8.443141,4.377050,-6.502696,-5.429758,7.834340,-2.269161,-7.947638,8.729146,-4.948853,-5.339921,-5.743385,2.116734,-1.411982,-7.550174,-7.545275,-3.133986,-2.735530,7.329933,-2.637523,-2.117802,-6.094048,4.388686,-3.955057,-6.806827,-4.318680,3.071200,3.916815,2.775922,0.409756,-9.714641,3.733784,-9.964107,-5.523804,-0.669641,-7.867423,0.441077,4.055828,8.863297,7.562886,2.098299,8.924069,2.004392,5.152319,-1.118363,-6.353676,-5.820180,1.173551,8.047998,-9.391430,-7.094900,1.390970,-3.695579,9.686541,-0.074558,7.081760,-5.094767,-1.637477,3.491644,-8.918541,-9.782429,-0.894376,-2.663628,-0.992947,-5.487247,5.765264,2.063593,-1.657062,-4.311741,0.533875,-0.920317,-6.188112,9.919209,-2.264634,-8.525650,3.029800,1.671722,9.772626,2.902681,-6.224605,-3.883161,8.272164,-3.829068,0.251161,4.980527,3.054942,6.999941,-2.791267,-8.149108,-1.407999,2.239513,-3.128148,1.371979,3.399475,4.478422,-5.934002,9.174552,7.009007,1.043500,-9.825691,4.107795,0.304434,0.490102,-5.192677,-0.665217,-5.530371,-1.036711,2.144815,-7.896332,-4.569617,-0.109320,-3.021045,-2.039664,1.572950,-5.312803,-5.528624,4.322413,9.419353,9.531875,-1.520299,-3.312636,-0.334758,9.735829,-5.238009,-3.849591,3.321412,-2.296986,-2.823746,1.920157,-5.472414,-3.360996,-0.422702,-3.725865,-9.247116,7.011485,-5.432574,-5.567139,-3.935172,-9.212339,7.148810,1.007787,6.533012,-6.692310,4.650123,8.290486,-5.666527,-8.923236,1.162479,-0.308449,8.801392,-3.337502,0.782124,-4.413354,2.969507,-1.987586,3.255960,7.962341,4.195674,-0.519989,-2.552726,3.464156,8.467955,4.838123,-7.522591,9.901287,0.118142,7.799733,-7.154634,-4.674013,-6.644170,-0.599223,-1.515180,-9.084696,-2.292529,-1.098882,-9.990546,6.736187,-4.503193,-1.482058,-3.754407,-5.776976,-2.252449,-3.762998,6.809086,-4.910796,0.894816,4.269020,-9.371967,-2.163873,-2.822421,0.131353,-3.993807,9.339332,6.315564,4.015308,5.141053,8.260471,-6.550085,-5.981508,-2.472997,5.850205,8.834735,-7.147011,5.923965,-1.386089,3.832571,-3.135184,-3.821432,-0.857242,-0.759459,8.795922,1.403258,5.114510,-3.095504,4.118321,-0.970174,2.263204,1.176495,4.708713,-1.982324,1.339007,-3.963938,4.318877,3.240578,-1.787782,1.269990,8.786922,5.426119,-5.088876,-8.227147,-5.206279,1.926373,-5.461178,4.186817,6.385406,-4.375704,-8.913468,-0.423712,2.349971,1.503970,6.972362,-8.832898,-9.315991,4.363177,0.658293,-6.834572,-6.518936,7.600029,1.219339,0.777141,-0.990352,2.647163,-6.921489,-2.247976,1.493664,6.529712], dtype = "float32")#candidate|7356|(280,)|const|float32
const_7357 = relay.const(3, dtype = "uint8")#candidate|7357|()|const|uint8
call_7355 = relay.TupleGetItem(func_3532_call(relay.reshape(const_7356.astype('float32'), [5, 8, 7]), relay.reshape(const_7357.astype('uint8'), []), ), 2)
call_7358 = relay.TupleGetItem(func_3535_call(relay.reshape(const_7356.astype('float32'), [5, 8, 7]), relay.reshape(const_7357.astype('uint8'), []), ), 2)
output = relay.Tuple([call_7344,call_7355,const_7356,const_7357,])
output2 = relay.Tuple([call_7345,call_7358,const_7356,const_7357,])
func_7363 = relay.Function([], output)
mod['func_7363'] = func_7363
mod = relay.transform.InferType()(mod)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7364 = func_7363_call()
output = call_7364
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_7376 = relay.TupleGetItem(func_3981_call(), 0)
call_7377 = relay.TupleGetItem(func_3983_call(), 0)
output = call_7376
output2 = call_7377
func_7395 = relay.Function([], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
output = func_7395()
func_7396 = relay.Function([], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3004_call = mod.get_global_var('func_3004')
func_3006_call = mutated_mod.get_global_var('func_3006')
call_7404 = relay.TupleGetItem(func_3004_call(), 0)
call_7405 = relay.TupleGetItem(func_3006_call(), 0)
func_3951_call = mod.get_global_var('func_3951')
func_3954_call = mutated_mod.get_global_var('func_3954')
var_7407 = relay.var("var_7407", dtype = "float32", shape = (78,))#candidate|7407|(78,)|var|float32
call_7406 = relay.TupleGetItem(func_3951_call(relay.reshape(var_7407.astype('float32'), [78,])), 5)
call_7408 = relay.TupleGetItem(func_3954_call(relay.reshape(var_7407.astype('float32'), [78,])), 5)
const_7411 = relay.const([4.591341,9.565420,-0.414250,-1.517356,-4.265706,-1.576810,-7.191465,-2.377332,3.571582,-5.034198,-5.753704,9.017470,1.235356,-1.127434,4.861887,-1.541301,8.161608,7.906665,-8.380273,-6.992967,-0.038472,5.824697,1.577865,-1.885119,-7.231011,1.172935,-0.441358,5.514164,-2.291275,-8.913447,7.916307,-7.047264,-1.781410,6.287369,-6.466487,9.071467,-7.666315,6.180701,-0.174675,6.878973,-6.212258,-9.017153,9.026180,-8.750362,0.018216,3.195687,-8.214050,-8.120072,8.376382,2.914812,9.322425,-9.124993,3.585438,-1.860418,8.926573,1.096258,-4.596932,3.806033,8.972650,0.416828,-4.470786,2.294248,-4.571594,0.893264,2.502851,8.831564,5.994684,6.544258,-0.623991,5.894415,2.785611,1.997607,-8.663965,6.495914,8.386916,-7.545204,8.441938,-4.327318,2.452824,-9.169429,-2.493793,-1.630366,7.810776,8.197776,6.064376,-1.974243,8.248938,-2.559455,-6.237095,9.408349,-7.510353,8.399607,5.780022,7.854540,2.569136,-4.773186,-0.186022,6.369241,-8.701506,5.043650,2.636388,-1.800291,3.422318,-5.769622,-4.937870,8.996652,-2.716700,-1.099730,-8.613430,-6.744907,6.087824,-4.719751,7.275539,-5.346074,-6.339871,4.429986,5.830701,-6.775912,-1.884913,-7.927105,-3.741834,7.670036,-8.962297,-1.072572,-2.124092,-3.115285,0.090002,2.908330,-0.957027,-7.133596,7.074005,8.344538,7.582837,1.787087,-6.870741,-7.487176,-0.531388,9.524781,-1.943148,2.137688,7.747982,-1.860944,-2.697765,5.919452,0.863478,2.689235,-8.923228,1.986318,-3.235447,3.463580,-0.992407,1.569911,-7.963452,0.490363,7.705103,4.568269,-7.581392,4.565662,5.784922,-8.097378,8.552603,1.143712,-4.322936,6.900772,9.172373,1.937480,9.695000,-9.465443,-2.386162,-2.964683,4.156822,-0.982586,6.112310,-9.441293,-5.589559,-4.679272,1.653458,2.634433,-6.649155,-4.159186,-1.226336,-9.692258,2.420110,2.795756,-6.157994,6.117925,3.040276,-5.609077,2.373511,3.090553,2.542818,6.295865,6.314908,-1.230110,-0.505513,1.167312,-8.004823,-2.477471,6.849419,3.305038,9.819727,6.364522,-6.855866,0.137418,-7.456151,-3.632601,-8.283091,-6.180689,-2.487524,-7.536223,-2.437800,1.877658,3.657158,-4.306759,7.585550,-2.815423,-2.441380,4.709380,7.759728,-8.578116,1.082295,6.577417,5.356507,8.143508,-4.349045,-6.161499,-3.020025,-5.641718,5.575791,-2.828890,-6.972674,8.822009,-2.244235,-8.130518,5.918345,6.026425,4.049981,1.710099,1.733632,-7.032582,-0.508944,-4.835438,0.432114,-4.643523,1.052565,5.905836,1.518775,-9.877409,-9.033730,-4.776181,9.677766,-0.807668,-7.968391,3.088193,3.907012,-6.135860,-1.914279,-3.608761,6.128739,-4.834024,1.354465,-4.440069,-9.490634,-0.691461,1.985916,9.817935,-3.959359,2.870283,3.291697,-5.663969,1.879475,-8.191545,7.674659,5.466459,3.254644,7.921372,1.785966,3.901568,-8.873035,-6.664651,-3.218401,3.257376,-7.423405,-4.075296,3.656621,-9.575423,1.097783,4.678834,2.174739,3.258165,-7.576698,5.923209,-3.128625,-8.054086,-1.338013,1.814334,-9.901139,8.385739,5.054984,-3.715278,7.177142,5.523671,9.160765,3.203351,6.735539,3.214488,-4.790928,-8.114845,7.754495,8.187333,0.477345,2.637294,0.904699,-0.750912,-1.606326,-8.548751,9.447005,-9.268130,-7.993052,5.866685,-3.411860,8.799584,0.543397,4.925032,-8.558890,-8.318934,7.857353,4.066349,7.522741,-0.005089,-3.613467,1.271766,-2.327454,-9.444468,2.038216,6.523362,-9.523682,-7.508627,-2.981901,9.239332,9.735902,-7.463545,9.504584,6.008501,-2.789082,-9.372092,-0.924408,-7.205888,4.841241,9.954238,4.104856,-8.278083,-4.544607,5.495061,-7.519805,2.206570,0.446947,2.037666,-4.742555,3.237181,-7.576334,3.525636,5.967982,6.445237,2.151667,5.851934,0.171624,-7.992523,2.016221,-1.700586,-6.264973,6.854287,-1.191691,-3.956477,3.088060,5.301073,3.768579,7.723755,-0.381146,7.489032,6.401145,-0.885228,-5.898891,-6.972305,7.347907,-2.271736,8.204185,3.240295,-3.153161,-4.480879,5.867631,1.368274,-7.333218,7.121809,2.532841,-6.328874,4.820313,-2.734099,-9.992115,5.697771,8.661040,8.282336,7.254168,-0.218682,6.851426,-6.596398,-1.778032,3.976462,-9.770397,-6.123810,-9.234922,-3.412050,7.055839,4.004086,-2.786344,2.014256,-8.153895,-8.327022,7.467782,5.580888,3.431041,5.516302,6.608669,-0.811836,3.584395,-9.372580,-7.452644,-1.821260,9.903695,1.220467,-7.763530,1.429943,8.318045,9.042106,2.359264,6.399922,-3.264550,-7.692320,-2.573732,3.823451,1.322414,5.230686,-4.560855,-3.479204,9.084251,9.910825,-0.112721,3.652590,-4.412414,7.223165,2.151478,-2.381658,4.248014,-8.055609,-0.248465,-9.628047,5.772847,7.270963,1.516460,9.080227,2.404326,-1.598643,5.364759,7.578498,-7.012903,2.838373,-7.407183,7.458678,9.454051,8.428079,5.911357,8.098817,2.752097,0.242284,-6.744022,3.159123,9.542379,-7.438780,0.267520,8.567083,-7.160254,-3.354078,-6.429301,-4.757883,9.431433,4.879851,4.041777,0.067241,6.296031,5.804774,6.203777,8.168345,7.371435,5.122801,-7.980839,-1.523660,-4.286754,7.096952,3.698035,-4.546171,4.979048,9.945541,-5.297200,7.918878,3.794764,-0.559507,4.767948,-7.453228,4.826760,-8.709659,-8.969686,-6.178600,2.749355,2.126033,9.541477,0.440660,-6.120328,-5.487028,8.513863,-4.896491,-9.917449,4.427475,5.048055,-2.585014,5.769524,-2.557785,-7.696312,-9.710883,-5.592582,-6.609831,7.362494,-3.894231,-3.116282,0.255440,-1.477496,7.280612,-3.359191,-5.328565,-6.796226,-9.098521,9.691085,6.837691,8.242516,5.174921,5.372817,6.292895,8.208186,-6.256602,-5.753573,5.308120,-7.154927,-6.986367,4.968298,-8.257888,2.096179,-1.568343,5.313322,-6.291485,8.769736,-5.967109,1.851253,-5.947583,1.647491,3.794806,-4.291108,-7.896192,8.490298,2.365625,2.088754,-8.923901,-1.179060,-9.809125,-8.002041,-5.801784,-2.499933,-6.804682,-6.041916,4.180757,-4.166350,-1.188917,9.911971,9.715425,8.064100,-4.172192,-0.599773,6.479831,5.310092,-2.976183,2.008959,6.111967,2.493797,7.563829,-1.433172,7.065450,0.640494,5.139016,-7.606765,8.237059,6.137210,-5.071603,-4.676346,-2.410514,1.566341,8.462288,7.886379,2.643672,0.338494,5.552908,4.682337,-2.446960,-3.410825,3.030660,-1.152118,-5.669374,-6.329043,8.450733,-8.370657,-9.214451,-9.877386,-6.746439,9.916860,-0.371845,2.003939,-5.813958,-9.028161,3.585927,5.745586,4.997146,-6.689812,3.062357,-3.284995,7.503933,2.405570,4.090726,-4.631790,4.617835,0.996632,-4.984051,7.473065,2.933318,6.779734,-9.746542,1.222523,-5.201813,1.310825,4.047981,-2.810541,9.074954,-3.490898,9.710649,-0.316654,-3.346113,-1.637078,-0.829364,-3.164233,2.290240,4.347010,-6.861893,1.079433,-5.693476,-4.443906,-4.406127,-3.599072,-5.903814,-1.415696,5.432483,0.967168,-0.551932,-0.556154,5.269349,-5.060597,-7.085465,8.326632,9.075518,1.570549,7.733395,9.508002,-7.326112,5.303562,-6.798048,-8.850905,3.173917,-3.768239,4.537055,-7.667989,6.747759,3.429739,-9.076604,-8.868385,6.694620,3.116845,6.527187,1.904891,7.734123,7.521698,-0.097938,5.666421,8.341112,-9.374639,3.609337,3.914895,3.335121,-2.710510,6.985917,0.328450,4.045031,-7.550754,5.198536,-5.086881,-5.139456,9.658101,-6.464125,-5.727931,-7.000725,-2.381490,-4.242266,-0.039048,6.853246,0.675810,8.697256,0.398902,-9.961273,8.283039,7.968701,-0.441811,9.963966,1.556239,-7.277075,3.498688,-8.849267,-3.744093,-0.362563,-1.825818,-1.998000,-6.942244,2.838774,-9.936176,3.973581,3.403713,1.111140,5.476161,1.694871,-4.794646,-2.460791,-1.511184,-5.184218,5.345355,1.641321,-2.409430,-7.184087,2.301798,-7.096815,1.912827,-7.648546,7.806676,-0.853684,-5.627222,3.321009,6.683575,8.979001,-3.691173,4.680593,-2.656612,9.306559,-3.218784,1.381337,9.133149,3.969919,-2.443278,-5.321349,0.054393,-6.012253,-7.017278,1.445096,3.080179,-1.832798,-2.361884,-3.300772,-3.701372,1.753486,4.812657,2.854409,-8.423054,5.631471,-5.843325,-7.273160,-2.437278,0.025811,-2.400785,-1.978980,2.288429,1.215129,-6.024418,-7.541000,-8.859530,1.684508,5.685090,-1.062662,5.793168,-1.877304,2.337169,-1.563557,0.746357,5.977493,-9.294662,4.808667,-4.196185,8.522220,-1.859317,6.710030,3.207242,-7.659323,8.640089,-7.424453,-6.915490,-3.441448,-9.797503,7.333382,8.612531,9.733256,7.831289,0.782682,-7.458425,-2.169592,5.485994,9.639535,2.184117,9.651421,-3.051560,9.201839,-8.243727,5.728043,-5.402458,-2.895971,0.180769,9.001566,-1.309459,-3.706565,4.116148,-2.553387,-2.525034,1.720874,7.245123,6.897229,7.488971,2.637415,-6.632983,-9.017008,5.704566,-5.398117,-5.327657,2.639675,5.285518,6.001711,8.483768,2.485191,2.940984,9.644667,6.436355,9.059856,5.602677,-8.626539,2.898071,3.032086,7.728815,9.199753,7.656977,-1.982194,-3.850255,-0.551916,3.527710,3.700419,-6.088815,-6.764665,9.084204,-8.168397,-7.802150,6.582552,1.096957,-8.936280,-1.651744,4.891333,3.167084,-8.400037,0.148969,5.455816,-1.853797,-7.221629,1.664651,-1.557823,-6.860985,2.683443,0.035783,-1.202180,6.871442,1.782459,-7.920500,-5.202987,3.391560,3.875522,6.396959,5.408000,0.103080,-7.235606,-6.548775,-2.408673,-9.175872,5.897544,-5.314824,-8.422330,5.874157,6.831827,-8.296789,1.739865,0.301513,0.575518,4.680988,-9.523076,-1.709727,0.009187,-9.123932,3.419282,6.364209,-3.354081,-9.986066,-6.027886,1.517087,9.970090,4.050317,6.540700,9.009626,9.554577,6.855784,0.762300,-7.950368,9.145332,-4.218796,8.556142,2.369915,4.551254,9.008381,3.188509,-9.583128,-1.149424,7.788246,-2.062891,-9.232146,0.861248,2.594602,1.287241,2.215345,-3.730578,7.078458,-5.753307,-9.432374,-2.357035,0.686982,-9.860452,-3.971007,7.659194,-1.424835,-1.435436,1.599335,-5.141604,0.241799,-3.157185,-2.456441,-6.523976,1.001024,4.530648,7.275068,2.192888,8.467257,-6.144510,-0.359392,-1.527424,8.702369,-5.755556,-3.929575,8.493920,-7.032042,7.456658,1.946526,2.945398,-1.867570,-3.927888,-5.923246,-2.113774,0.770110,-5.499121,-5.269517,-8.313873,7.804399,-5.942955,2.295079,1.475126,2.601271,3.680183,2.945421,9.030653,3.845806,7.606496,2.315126,9.006914,-4.413169,3.196241,-2.165521,-6.254395,-9.518677,-6.921027,-9.875802,1.051734,-5.092015,-5.458723,9.563986,7.901661,1.680864,9.933899,-5.402592,2.176667,-9.387528,2.286741,-3.669047,-0.698926,-4.482337,8.264872,8.362490,-6.892182,3.674004,4.792174,0.615605,1.608180,2.975355,8.961118,1.297650,-2.283988,6.845776,9.624295,9.156294,-7.754805,-7.272725,-4.728712,7.677502,7.399445,-7.351259,0.213838,2.486585,-8.736837,6.133877,-1.632129,5.078817,-7.575229,-2.251009,-7.764604,-5.245877,6.576865,-6.902117,-7.008083,-7.583728,-3.697150,-0.833001,-5.701490,-8.848804,-2.459092,0.894002,5.782569,8.468334,9.128442,4.888448,5.390118,2.257181,-4.992740,-1.622657,7.826993,-1.487124,7.043231,9.225397,-7.967039,1.422531,-2.039471,9.435352,6.053848,2.505598,-7.328631,-0.752591,-1.588934,-3.488340,-5.774700,3.232571,3.734005,0.445967,-1.435542,1.146696,2.802314,9.850313,7.774730,6.397444,4.827615,8.811153,3.636082,1.082251,8.699144,-0.558856,3.958717,3.161017,7.808987,7.440807,-5.123977,-8.931793,0.974179,3.041675,-7.289852,1.060458,0.476774,4.323921,6.555134,7.728799,-1.745034,-1.548896,3.888371,-1.779766,-5.671378,4.178268,-1.706668,-9.914713,0.971517,-5.386768,-2.738412,-8.535067,1.055944,-7.082301,-2.334576,3.632584,1.485975,-7.837677,-9.361657,9.245074,9.808064,4.086095,-1.961169,9.991820,2.765266,6.931252,-7.051764,1.498604,6.473933,-3.247877,9.003667,-0.841516,6.902106,-1.078665,-9.004667,-0.718947,-6.122301,5.147866,-5.239184,-5.197039,4.512354,9.119279,6.202348,6.184504,9.364163,5.966012,4.083459,6.850930,-7.353174,-9.592015,-4.649171,-6.391718,-3.330436,0.411431,2.931883,-4.418172,-3.556954,-2.391825,6.976867,-0.731554,4.606775,3.759051,-9.975841,4.740766,-9.212281,0.997504,-4.838453,2.240393,3.456490,1.150855,1.629065,8.600761,-3.207584,3.147545,9.703263,-0.914876,5.066426,-9.457353,-2.751819,7.135493,5.729630,2.162304,-2.423564,5.813126,-6.554961,-4.340711,-6.218802,2.586334,0.048937,-7.019282,-0.844867,4.162745,8.063355,5.356947,0.345157,-2.901698,1.093218,7.764516,3.201182,-2.220831,3.077682,7.265051,-5.009896,-3.202093,6.827589,6.725407,5.666560,-9.588393,-1.248080,3.284690,-2.614155,-0.140402,9.832306,3.739446,-1.647293,-2.315761,4.797307,-9.384759,-1.253486,4.905137,1.138394,-1.702542,-0.003719,4.109352,-3.960866,-1.779108,9.063058,8.886770,-1.087596,8.073737,-3.367064,9.184432,4.740623,9.170209,-3.661281,7.202693,6.184101,5.296070,-6.822467,-0.770560,2.970583,5.318610,-7.108559,9.225364,-1.424752,8.999671,8.221237,-9.994258,-2.805345,-0.896480,-7.567796,0.291132,8.914853,2.981791,1.126389,6.177825,0.430792,9.844130,4.308005,-0.210877,8.432402,-8.894250,-6.375112,8.289908,-3.736187,-7.276095,-1.390611,6.061938,-9.659067,9.087254,-5.689070,-2.195306,-8.380022,8.573200,-1.840021,6.450226,-6.980534,-4.787973,-6.512138,5.428000,-6.544206,2.238221,6.824869,-1.498873,-2.303746,-0.997233,-7.560399,-2.927832,-2.680682,-2.497496,3.544836,7.965224,4.044082,6.009224,2.891681,4.819727,-3.428971,-1.642489,0.742149,6.102841,3.232986,-2.265515,-1.876036,-9.624912,1.347350,1.057134,-7.919805,-3.266343,5.064537,4.879830,-7.404000,-3.611940,0.468519,6.956679,0.969049,-6.015952,-5.752751,8.360155,2.114181,6.533982,-2.497500,-3.473399,4.079602,6.454760,-4.727341,-2.240099,1.583544,8.096493,1.195103,7.988163,4.740224,3.538194,-1.949610,-1.012520,-0.563844,-0.267693,-6.865160,1.691207,6.788227,-2.634420,2.950467,1.367661,8.366183,-5.222963,3.478975,-8.954690,6.230088,-1.906720,-3.059658,-4.087408,-6.632759,0.005680,4.071628,9.655839,0.792138,-5.294454,-1.172121,8.964010,-1.323964,-4.680261,0.954676,-3.889139,6.424664,6.738470,3.456723,-8.810215,-0.784071,-2.810279,2.443376,7.325955,-5.033172,6.488675,6.386575,-5.244074,-2.584279,8.524869,3.891542,3.313135,-2.211085,-6.064807,-6.429345,0.219931,4.337031,-2.938562,9.112081,6.890557,5.523438,-8.288160,-8.524636,-0.186417,-7.414714,-2.746981,2.826877,-3.555796,-1.641601,7.008670,8.357382,-1.026962,-5.613309,7.949869,-0.184706,3.941517,-2.545737,-9.196992,4.569343,9.143460,-1.518922,7.303190,4.096293,5.610435,1.356549,-9.703593,2.856780,3.634768,6.691498,-0.512174,1.948129,7.668170,9.773286,-0.289933,-3.151399,-4.565762,-6.405594,-0.860035,0.029899,6.936962,-6.721502,-0.305215,-2.308914,-5.079046,-8.867395,9.479793,-8.848875,8.812517,-5.626036,-3.469771,-7.573301,7.255610,5.954398,-3.239174,6.153539,4.782561,-6.321344,-8.543724,9.091600,-0.738957,5.651170,6.151545,4.801286,5.641991,2.894508,-5.355278,2.005975,-5.869788,-8.564662,7.245540,-2.586515,4.465723,-4.234488,-7.599335,-1.469847,-4.803621,-3.359967,-7.504271,-3.105969,-9.234246,9.828075,2.774931,-8.450357,2.057858,5.679224,4.718773,1.777911,-4.503680,-6.691323,9.752147,7.998271,-5.083854,-3.306184,4.702709,-9.422732,-3.758993,9.046769,-4.378523,4.197506,-2.757742,2.671570,-4.135128,-1.698229,-6.763505,0.190292,-4.495169,7.155161,7.220414,6.998228,1.626673,-6.245540,9.322731,6.448780,6.157717,-8.879096,3.171363,0.404676,-0.992645,-2.634930,-8.539196,0.299535,8.618983,1.318358,-6.477258,0.243965,6.168607,5.364211,4.551623,-0.555430,9.948754,-8.604501,-2.676581,-5.884708,-8.823048,-8.910188,7.693965,6.652024,-4.070451,2.718727,7.287863,-0.816222,-6.208238,4.351539,9.226057,-9.653716,-6.139918,8.632329,2.073622,-5.339053,8.242877,-0.831330,-7.509689,9.056025,3.622103,6.103753,7.075509,8.972077,3.904334,-6.655270,-6.256808,7.108192,8.508790,-9.090847,-7.197569,-7.738521,8.719776,-9.988366,-2.800862,-3.486485,-6.843540,-2.545639,-6.436290,6.569978,4.904098,-1.688336,5.031257,-5.841607,-3.147701,1.023526,6.917841,-3.412251,-7.748637,-9.683458,-6.213620,-1.224627,-2.821336,0.533681,-4.302157,-3.655790,-9.383153,-4.262848,-1.861554,-7.116441,3.522014,-7.342855,-5.020912,8.210387,0.343647,3.421699,-5.205237,7.841996,5.071099,5.320265,9.098172,3.613895,-3.402284,2.598880,-5.778157,-1.867048,9.102945,7.173417,2.854322,8.557990,-2.326987,6.099655,-1.434254,-9.689434,1.072677,-5.305996,4.058546,-3.053817,8.750703,9.361031,3.764548,0.490142,-6.027878,-7.226384,3.756384,-4.294411,7.503045,-9.256175,-8.980684,3.874633,2.355321,4.534281,1.747836,-5.721561,6.176954,-5.813684,5.811487,-2.012997,-7.444125,-0.881046,-9.916236,-3.743901,-2.346044,1.906185,6.117210,-5.570912,-1.386945,8.247973,0.654424,-7.917471,4.662275,6.133262,-6.275324,-8.883433,4.047369,-4.327684,-9.612642,4.121781,-5.620916,9.408176,2.821207,-5.537879,6.756150,4.714588,6.980610,-2.361726,-5.660032,-4.866283,9.923190,-0.876793,7.961849,-8.499039,0.234349,-9.870262,-8.176137,9.299779,4.737324,-6.707712,8.294068,2.444542,8.867491,-1.555912,5.655158,1.184523,1.988826,2.676704,-1.432066,-2.707935,8.461571,4.247572,9.602270,8.193401,-3.313327,5.118301,5.941172,7.861643,-2.211853,6.221727,-3.998693,-7.707983,-3.878126,-8.809890,3.922859,-3.941991,0.859562,7.067087,-8.232213,0.734519,-6.996438,-9.752332,7.886697,-8.769345,3.152786,1.741791,-2.549012,-2.333577,-7.381368,-7.664812,2.368086,-6.623424,-4.473109,0.803131,8.916535,-5.511582,-0.340026,6.001077,-8.157228,1.262159,7.599460,3.975028,2.817956,-5.193134,-2.297880,4.166530,7.354592,-5.797571,8.794424,-8.870370,-7.531553,-9.834980,-2.929378,-0.423769,-8.166180,-6.656427,-9.604167,1.277512,8.280897,5.466257,-4.083665,-3.755105,4.241580,-8.564409,-8.204583,8.269740,3.897394,5.006030,2.442920,-4.548763,-2.817318,-6.985553,-8.144471,-2.005748,2.298289,6.432167,-7.953474,-5.253285,-8.676728,2.050911,3.571020,0.950955,-3.465923,-9.679062,-3.407662,0.117583,-7.251203,8.057610,-9.574023,-7.725691,-8.948612,0.419254,2.647965,-2.573164,-2.957158,1.202155,-3.436075,-6.128238,9.346968,-8.458693,4.545734,-9.794937,3.742033,-5.369399,4.413611,-4.375025,-4.624133,1.847414,0.312889,8.536628,0.545041,2.668681,7.939394,-6.013456,7.008664,-2.247805,1.970831,-0.347912,3.412682,-9.686790,8.737354,-7.415642,-8.779952,-6.349846,7.287160,-7.300527,-0.329617,-0.628708,6.167067,-7.391930,9.651013,-0.018557,-5.400431,-4.545409,7.080036,-8.544425,4.159477,1.716645,-7.318342,0.262151,0.452852,-4.401839,7.424462,-8.097300,-8.981524,6.135813,5.820331,-3.836773,-4.070297,3.403074,7.397388,9.881167,-0.889435,-7.181847,-0.511260,-1.811760,1.378533,9.603075,2.548490,-3.109136,-1.948114,-8.597579,7.509043,4.962235,2.891983,8.341588,4.789545,7.048344,3.346860,-4.403294,7.274419,-1.998325,-7.438761,9.269567,4.276475,5.953992,-7.620696,6.746120,-1.984411,0.702838,-2.313519,-1.512434,4.613930,7.239903,8.569997,-5.547781,3.986100,-4.743938,-3.563905,7.693281,7.222371,-0.014650,-5.468851,9.179823,-3.854719,-6.264533,6.696008,-0.807667,-6.254769,-3.913505,-9.491500,-5.503216,3.063149,7.762746,6.861982,6.461622,7.016325,-4.459536,7.434767,-1.345364,-8.378096,-7.813519,8.805873,3.503867,2.123071,5.176280,-6.994713,9.545461,-0.435242,-6.801467,2.524189,-6.222062,8.067813,0.972545,-7.875681,-2.895575,-2.904933,3.691874,-6.951617,-8.137298,-9.944675,1.148864,1.531547,-3.788339,0.442916,2.215829,-3.337994,9.036467,-7.999368,-6.383872,-6.216808,-9.013579,-4.839178,-1.112860,-7.176076,-4.553076,-8.679682,5.394275,-2.127883,-9.168384,-0.735398,-0.765494,8.386607,-8.104396,-1.743994,1.327570,-0.047420,-5.491432,6.075134,5.780118,9.451370,-6.288208,7.625711,3.549573,4.983165,7.644255,-3.428470,-6.337489,4.564855,0.563541,0.571928,-0.369217,-5.932579,-3.502207,1.093371,8.489340,2.843930,-4.869191,-9.055193,-3.016045,1.250451,5.906936,-6.266929,-8.646300,2.117213,1.138463,-6.607505,-3.586246,-5.604211,-4.902334,-5.470659,-7.227196,9.679050,-4.993916,2.314045,4.241968,-7.295488,-0.995377,-5.432992,-0.762377,-2.148321,-2.650148,6.250774,-7.129746,-2.405813,5.243494,-1.575791,-7.167702,-7.807614,8.152530,-6.513178,8.543232,-6.323203,2.163300,-5.077317,-9.353245,6.125188,3.210990,3.334250,0.520725,-1.579131,-6.803040,-1.849647,-4.913064,3.499978,-2.260046,-4.366027,-2.980519,6.899678,5.835477,2.699680,7.748066,-2.397860,2.460855,-7.033430,2.383190,2.935051,6.635818,9.095508,-0.502221,-2.170780,-0.534172,-0.797978,2.992797,-6.557525,5.646727,-5.591740,-8.264320,7.747963,-5.403725,-2.797258,-4.456210,2.965002,-6.773892,8.207027,2.798350,2.408632,-7.449649,-1.472463,-7.485794,-1.276352,-9.639447,-6.008072,-4.828360,-7.377036,4.670488,-9.852611,-4.568909,7.042638,-8.775638,3.750016,-4.435496,5.723249,7.904684,-5.533890,-7.651667,2.232076,9.365823,-4.258669,-4.661969,-0.150212,5.841114,2.900023,-0.960538,-3.265228,-2.302895,-2.527285,9.517608,5.876167,1.581079,-4.054125,3.883710,-4.525554,2.949021,-0.375106,4.622391,5.041309,4.205328,-5.438083,3.982283,3.974420,6.417402,8.786299,1.567860,4.314716,-5.538049,0.819601,3.835663,0.075312,-6.221463,-3.190947,-1.665654,-0.555186,6.333315,-7.526592,-5.785374,-6.614960,1.094663,-5.233635,-8.310660,-2.804534,4.673101,-6.857267,5.993137,4.776537,2.182436,-9.833096,8.638278,-2.436296,8.901172,0.394441,-4.414366,4.125062,4.467322,-3.339407,7.555608,4.475383,-3.420144,-2.950766,8.978897,0.910989,5.013948,-6.626972,9.257639,6.337741,5.693253,-4.497816,-9.644325,-5.808084,6.502160,-6.139828,2.663026,6.657238,7.462987,2.748584,8.502742,-2.886780,-9.501414,6.810090,6.905113,3.591958,2.325456,-0.109421,7.824767,-5.953150,5.637061,-5.241686,-0.529124,2.519945,1.242618,-4.734928,8.405143,4.514942,2.340298,4.338705,-0.860520,-2.389492,-2.943852,0.856665,9.530413,-2.721990,-9.940778,6.842791,-7.065759,8.666340,2.978865,-6.694051,-1.822750,8.533677,-6.665108,-4.090892,1.659944,6.728201,0.853329,8.506955,-2.152761,8.912804,-9.396736,3.221209,4.129219,-5.108479,-7.152939,-3.122996,7.594572,-2.914207,-0.706633,-3.813933,1.491002,-0.835316,-6.784409,6.404902,7.043621,-3.188975,4.250039,3.254384,-8.352478,-7.484501,-5.477836,9.563683,-8.554048,-6.928286,-1.325748,-1.168138,-0.792195,-3.327225,-7.893069,0.751961,-4.085154,-2.443315,6.857415,9.688718,7.940793,-9.228826,-3.005119,4.695428,9.707034,4.453663,-5.069361,-0.519701,-5.840970,-8.363423,-6.726245,6.040669,6.353852,5.984184,0.586243], dtype = "float32")#candidate|7411|(2240,)|const|float32
bop_7412 = relay.mod(call_7406.astype('float64'), relay.reshape(const_7411.astype('float64'), relay.shape_of(call_7406))) # shape=(2240,)
bop_7415 = relay.mod(call_7408.astype('float64'), relay.reshape(const_7411.astype('float64'), relay.shape_of(call_7408))) # shape=(2240,)
func_2651_call = mod.get_global_var('func_2651')
func_2655_call = mutated_mod.get_global_var('func_2655')
const_7421 = relay.const(-1, dtype = "uint8")#candidate|7421|()|const|uint8
var_7422 = relay.var("var_7422", dtype = "int16", shape = (450,))#candidate|7422|(450,)|var|int16
call_7420 = relay.TupleGetItem(func_2651_call(relay.reshape(const_7421.astype('uint8'), []), relay.reshape(var_7422.astype('int16'), [450,]), ), 0)
call_7423 = relay.TupleGetItem(func_2655_call(relay.reshape(const_7421.astype('uint8'), []), relay.reshape(var_7422.astype('int16'), [450,]), ), 0)
var_7429 = relay.var("var_7429", dtype = "float32", shape = (2240,))#candidate|7429|(2240,)|var|float32
bop_7430 = relay.bitwise_and(const_7411.astype('int32'), relay.reshape(var_7429.astype('int32'), relay.shape_of(const_7411))) # shape=(2240,)
bop_7437 = relay.equal(var_7422.astype('bool'), const_7421.astype('bool')) # shape=(450,)
output = relay.Tuple([call_7404,var_7407,bop_7412,call_7420,bop_7430,bop_7437,])
output2 = relay.Tuple([call_7405,var_7407,bop_7415,call_7423,bop_7430,bop_7437,])
func_7440 = relay.Function([var_7407,var_7422,var_7429,], output)
mod['func_7440'] = func_7440
mod = relay.transform.InferType()(mod)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7440_call = mutated_mod.get_global_var('func_7440')
var_7442 = relay.var("var_7442", dtype = "float32", shape = (78,))#candidate|7442|(78,)|var|float32
var_7443 = relay.var("var_7443", dtype = "int16", shape = (450,))#candidate|7443|(450,)|var|int16
var_7444 = relay.var("var_7444", dtype = "float32", shape = (2240,))#candidate|7444|(2240,)|var|float32
call_7441 = func_7440_call(var_7442,var_7443,var_7444,)
output = call_7441
func_7445 = relay.Function([var_7442,var_7443,var_7444,], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7454 = relay.var("var_7454", dtype = "float64", shape = (1, 15, 3))#candidate|7454|(1, 15, 3)|var|float64
uop_7455 = relay.sin(var_7454.astype('float64')) # shape=(1, 15, 3)
var_7463 = relay.var("var_7463", dtype = "float64", shape = (16, 15, 3))#candidate|7463|(16, 15, 3)|var|float64
bop_7464 = relay.floor_divide(var_7454.astype('float64'), var_7463.astype('float64')) # shape=(16, 15, 3)
output = relay.Tuple([uop_7455,bop_7464,])
output2 = relay.Tuple([uop_7455,bop_7464,])
func_7469 = relay.Function([var_7454,var_7463,], output)
mod['func_7469'] = func_7469
mod = relay.transform.InferType()(mod)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7469_call = mutated_mod.get_global_var('func_7469')
var_7471 = relay.var("var_7471", dtype = "float64", shape = (1, 15, 3))#candidate|7471|(1, 15, 3)|var|float64
var_7472 = relay.var("var_7472", dtype = "float64", shape = (16, 15, 3))#candidate|7472|(16, 15, 3)|var|float64
call_7470 = func_7469_call(var_7471,var_7472,)
output = call_7470
func_7473 = relay.Function([var_7471,var_7472,], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6668_call = mod.get_global_var('func_6668')
func_6670_call = mutated_mod.get_global_var('func_6670')
call_7486 = relay.TupleGetItem(func_6668_call(), 0)
call_7487 = relay.TupleGetItem(func_6670_call(), 0)
output = call_7486
output2 = call_7487
func_7514 = relay.Function([], output)
mod['func_7514'] = func_7514
mod = relay.transform.InferType()(mod)
output = func_7514()
func_7515 = relay.Function([], output)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6581_call = mod.get_global_var('func_6581')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_7531 = func_6581_call()
call_7532 = func_6581_call()
func_1772_call = mod.get_global_var('func_1772')
func_1775_call = mutated_mod.get_global_var('func_1775')
var_7538 = relay.var("var_7538", dtype = "uint16", shape = (42,))#candidate|7538|(42,)|var|uint16
call_7537 = func_1772_call(relay.reshape(var_7538.astype('uint16'), [1, 7, 6]))
call_7539 = func_1772_call(relay.reshape(var_7538.astype('uint16'), [1, 7, 6]))
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_7540 = relay.TupleGetItem(func_2898_call(), 0)
call_7541 = relay.TupleGetItem(func_2900_call(), 0)
func_903_call = mod.get_global_var('func_903')
func_905_call = mutated_mod.get_global_var('func_905')
var_7545 = relay.var("var_7545", dtype = "float32", shape = (560, 4))#candidate|7545|(560, 4)|var|float32
call_7544 = relay.TupleGetItem(func_903_call(relay.reshape(var_7545.astype('float32'), [10, 16, 14])), 0)
call_7546 = relay.TupleGetItem(func_905_call(relay.reshape(var_7545.astype('float32'), [10, 16, 14])), 0)
bop_7551 = relay.add(call_7537.astype('int8'), relay.reshape(var_7538.astype('int8'), relay.shape_of(call_7537))) # shape=(1, 7, 6)
bop_7554 = relay.add(call_7539.astype('int8'), relay.reshape(var_7538.astype('int8'), relay.shape_of(call_7539))) # shape=(1, 7, 6)
output = relay.Tuple([call_7531,call_7540,call_7544,var_7545,bop_7551,])
output2 = relay.Tuple([call_7532,call_7541,call_7546,var_7545,bop_7554,])
func_7555 = relay.Function([var_7538,var_7545,], output)
mod['func_7555'] = func_7555
mod = relay.transform.InferType()(mod)
var_7556 = relay.var("var_7556", dtype = "uint16", shape = (42,))#candidate|7556|(42,)|var|uint16
var_7557 = relay.var("var_7557", dtype = "float32", shape = (560, 4))#candidate|7557|(560, 4)|var|float32
output = func_7555(var_7556,var_7557,)
func_7558 = relay.Function([var_7556,var_7557,], output)
mutated_mod['func_7558'] = func_7558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6035_call = mod.get_global_var('func_6035')
func_6036_call = mutated_mod.get_global_var('func_6036')
call_7590 = relay.TupleGetItem(func_6035_call(), 0)
call_7591 = relay.TupleGetItem(func_6036_call(), 0)
output = call_7590
output2 = call_7591
func_7607 = relay.Function([], output)
mod['func_7607'] = func_7607
mod = relay.transform.InferType()(mod)
mutated_mod['func_7607'] = func_7607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7607_call = mutated_mod.get_global_var('func_7607')
call_7608 = func_7607_call()
output = call_7608
func_7609 = relay.Function([], output)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mod.get_global_var('func_4628')
func_4629_call = mutated_mod.get_global_var('func_4629')
call_7642 = relay.TupleGetItem(func_4628_call(), 0)
call_7643 = relay.TupleGetItem(func_4629_call(), 0)
output = relay.Tuple([call_7642,])
output2 = relay.Tuple([call_7643,])
func_7644 = relay.Function([], output)
mod['func_7644'] = func_7644
mod = relay.transform.InferType()(mod)
output = func_7644()
func_7645 = relay.Function([], output)
mutated_mod['func_7645'] = func_7645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_7656 = relay.TupleGetItem(func_5998_call(), 0)
call_7657 = relay.TupleGetItem(func_5999_call(), 0)
output = call_7656
output2 = call_7657
func_7662 = relay.Function([], output)
mod['func_7662'] = func_7662
mod = relay.transform.InferType()(mod)
output = func_7662()
func_7663 = relay.Function([], output)
mutated_mod['func_7663'] = func_7663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7395_call = mod.get_global_var('func_7395')
func_7396_call = mutated_mod.get_global_var('func_7396')
call_7791 = func_7395_call()
call_7792 = func_7395_call()
func_5668_call = mod.get_global_var('func_5668')
func_5671_call = mutated_mod.get_global_var('func_5671')
const_7799 = relay.const([0.525588,-8.129055,9.636720,-4.183551,7.166457,6.679163,-1.058109,1.105138,-0.257763,-3.753128,6.087753,6.185299,3.766130,1.838110,-9.935016,5.818152,-1.772782,0.813218,-3.275919,-7.328098,9.991796,-4.022926,2.077670,0.401051,8.528182,2.816526,-3.821489,-1.482044,-6.040073,-3.198114,-9.143016,4.355035,1.378118,-4.971399,-6.355191,-1.495596,-6.907949,1.711288,-4.359622,5.153838,1.016236,-8.539752,-0.247971,2.998537,4.455427,8.588531,-4.565532,-9.433126,6.933338,4.799244,1.548712,4.470975,-5.323896,-8.337315,1.772588,-4.941169,-6.327532,9.768191,1.343383,-4.257990], dtype = "float64")#candidate|7799|(60,)|const|float64
call_7798 = relay.TupleGetItem(func_5668_call(relay.reshape(const_7799.astype('float64'), [4, 3, 5])), 1)
call_7800 = relay.TupleGetItem(func_5671_call(relay.reshape(const_7799.astype('float64'), [4, 3, 5])), 1)
func_639_call = mod.get_global_var('func_639')
func_643_call = mutated_mod.get_global_var('func_643')
var_7814 = relay.var("var_7814", dtype = "float32", shape = (832,))#candidate|7814|(832,)|var|float32
call_7813 = relay.TupleGetItem(func_639_call(relay.reshape(var_7814.astype('float32'), [8, 8, 13]), relay.reshape(var_7814.astype('float32'), [8, 8, 13]), relay.reshape(var_7814.astype('float64'), [8, 8, 13]), ), 3)
call_7815 = relay.TupleGetItem(func_643_call(relay.reshape(var_7814.astype('float32'), [8, 8, 13]), relay.reshape(var_7814.astype('float32'), [8, 8, 13]), relay.reshape(var_7814.astype('float64'), [8, 8, 13]), ), 3)
output = relay.Tuple([call_7791,call_7798,const_7799,call_7813,var_7814,])
output2 = relay.Tuple([call_7792,call_7800,const_7799,call_7815,var_7814,])
func_7816 = relay.Function([var_7814,], output)
mod['func_7816'] = func_7816
mod = relay.transform.InferType()(mod)
var_7817 = relay.var("var_7817", dtype = "float32", shape = (832,))#candidate|7817|(832,)|var|float32
output = func_7816(var_7817)
func_7818 = relay.Function([var_7817], output)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mod.get_global_var('func_6633')
func_6635_call = mutated_mod.get_global_var('func_6635')
call_7853 = relay.TupleGetItem(func_6633_call(), 0)
call_7854 = relay.TupleGetItem(func_6635_call(), 0)
output = call_7853
output2 = call_7854
func_7884 = relay.Function([], output)
mod['func_7884'] = func_7884
mod = relay.transform.InferType()(mod)
output = func_7884()
func_7885 = relay.Function([], output)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7890 = relay.var("var_7890", dtype = "uint64", shape = (8, 3, 14))#candidate|7890|(8, 3, 14)|var|uint64
var_7891 = relay.var("var_7891", dtype = "uint64", shape = (8, 3, 14))#candidate|7891|(8, 3, 14)|var|uint64
bop_7892 = relay.less_equal(var_7890.astype('bool'), relay.reshape(var_7891.astype('bool'), relay.shape_of(var_7890))) # shape=(8, 3, 14)
bop_7914 = relay.floor_divide(var_7890.astype('float32'), relay.reshape(var_7891.astype('float32'), relay.shape_of(var_7890))) # shape=(8, 3, 14)
output = relay.Tuple([bop_7892,bop_7914,])
output2 = relay.Tuple([bop_7892,bop_7914,])
func_7925 = relay.Function([var_7890,var_7891,], output)
mod['func_7925'] = func_7925
mod = relay.transform.InferType()(mod)
var_7926 = relay.var("var_7926", dtype = "uint64", shape = (8, 3, 14))#candidate|7926|(8, 3, 14)|var|uint64
var_7927 = relay.var("var_7927", dtype = "uint64", shape = (8, 3, 14))#candidate|7927|(8, 3, 14)|var|uint64
output = func_7925(var_7926,var_7927,)
func_7928 = relay.Function([var_7926,var_7927,], output)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_7995 = relay.TupleGetItem(func_4866_call(), 0)
call_7996 = relay.TupleGetItem(func_4868_call(), 0)
uop_8007 = relay.erf(call_7995.astype('float32')) # shape=(6, 8, 10)
uop_8009 = relay.erf(call_7996.astype('float32')) # shape=(6, 8, 10)
func_6623_call = mod.get_global_var('func_6623')
func_6627_call = mutated_mod.get_global_var('func_6627')
var_8031 = relay.var("var_8031", dtype = "float64", shape = ())#candidate|8031|()|var|float64
var_8032 = relay.var("var_8032", dtype = "float64", shape = (3, 28))#candidate|8032|(3, 28)|var|float64
call_8030 = relay.TupleGetItem(func_6623_call(relay.reshape(var_8031.astype('float64'), []), relay.reshape(var_8032.astype('float64'), [7, 1, 12]), ), 0)
call_8033 = relay.TupleGetItem(func_6627_call(relay.reshape(var_8031.astype('float64'), []), relay.reshape(var_8032.astype('float64'), [7, 1, 12]), ), 0)
func_4164_call = mod.get_global_var('func_4164')
func_4170_call = mutated_mod.get_global_var('func_4170')
var_8060 = relay.var("var_8060", dtype = "int16", shape = (5, 90))#candidate|8060|(5, 90)|var|int16
var_8061 = relay.var("var_8061", dtype = "float32", shape = (832,))#candidate|8061|(832,)|var|float32
var_8062 = relay.var("var_8062", dtype = "float32", shape = (2240,))#candidate|8062|(2240,)|var|float32
const_8063 = relay.const([False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True], dtype = "bool")#candidate|8063|(520,)|const|bool
call_8059 = relay.TupleGetItem(func_4164_call(relay.reshape(var_8060.astype('int16'), [10, 45]), relay.reshape(var_8061.astype('float32'), [832, 1]), relay.reshape(var_8062.astype('float32'), [2240,]), relay.reshape(var_8060.astype('uint16'), [10, 45]), relay.reshape(const_8063.astype('bool'), [520,]), ), 5)
call_8064 = relay.TupleGetItem(func_4170_call(relay.reshape(var_8060.astype('int16'), [10, 45]), relay.reshape(var_8061.astype('float32'), [832, 1]), relay.reshape(var_8062.astype('float32'), [2240,]), relay.reshape(var_8060.astype('uint16'), [10, 45]), relay.reshape(const_8063.astype('bool'), [520,]), ), 5)
output = relay.Tuple([uop_8007,call_8030,var_8031,var_8032,call_8059,var_8060,var_8061,var_8062,const_8063,])
output2 = relay.Tuple([uop_8009,call_8033,var_8031,var_8032,call_8064,var_8060,var_8061,var_8062,const_8063,])
func_8073 = relay.Function([var_8031,var_8032,var_8060,var_8061,var_8062,], output)
mod['func_8073'] = func_8073
mod = relay.transform.InferType()(mod)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8073_call = mutated_mod.get_global_var('func_8073')
var_8075 = relay.var("var_8075", dtype = "float64", shape = ())#candidate|8075|()|var|float64
var_8076 = relay.var("var_8076", dtype = "float64", shape = (3, 28))#candidate|8076|(3, 28)|var|float64
var_8077 = relay.var("var_8077", dtype = "int16", shape = (5, 90))#candidate|8077|(5, 90)|var|int16
var_8078 = relay.var("var_8078", dtype = "float32", shape = (832,))#candidate|8078|(832,)|var|float32
var_8079 = relay.var("var_8079", dtype = "float32", shape = (2240,))#candidate|8079|(2240,)|var|float32
call_8074 = func_8073_call(var_8075,var_8076,var_8077,var_8078,var_8079,)
output = call_8074
func_8080 = relay.Function([var_8075,var_8076,var_8077,var_8078,var_8079,], output)
mutated_mod['func_8080'] = func_8080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_8092 = relay.TupleGetItem(func_5290_call(), 0)
call_8093 = relay.TupleGetItem(func_5292_call(), 0)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_8108 = relay.TupleGetItem(func_5887_call(), 0)
call_8109 = relay.TupleGetItem(func_5889_call(), 0)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_8123 = relay.TupleGetItem(func_2966_call(), 0)
call_8124 = relay.TupleGetItem(func_2967_call(), 0)
func_299_call = mod.get_global_var('func_299')
func_301_call = mutated_mod.get_global_var('func_301')
const_8134 = relay.const([[1,-9,-5,4],[1,-9,-4,7],[-1,-2,9,1],[-4,-5,4,-3],[5,2,10,-10],[-3,-7,-9,5],[-1,5,6,-9],[-10,9,2,-9],[-5,-6,4,-5],[-4,-8,-5,1],[1,10,-3,-6],[-3,-6,-6,-1],[5,-3,3,8],[10,-10,-10,-3],[-8,-6,9,-3],[6,7,-4,2],[-6,-10,3,-8],[-5,-8,-1,4],[3,10,4,4],[3,-4,2,8],[-1,8,-6,6],[5,4,4,-5],[2,7,-9,7],[-4,2,-5,3],[7,-9,-8,-4],[-7,-10,10,6],[-1,7,-7,5],[-3,7,-5,3],[4,7,-7,6],[1,4,3,3],[-6,5,5,5],[5,8,-4,4],[-5,1,-3,-5],[-5,6,-9,-2],[-9,8,-7,2],[7,-1,-2,-9],[9,-8,-7,9],[-2,-9,-3,-7],[10,-6,10,-8],[-7,8,-8,-8],[-6,-9,1,-6],[2,5,-8,8],[2,6,10,-9],[-5,-10,-3,-7],[-7,2,6,-3],[5,4,4,3],[3,-8,-3,4],[5,8,4,-6],[4,3,8,-8],[7,6,3,-7],[-9,3,-3,8],[3,-5,3,-2],[-3,-7,-2,-4],[9,10,1,10],[6,2,10,-9],[-5,-2,8,-5],[10,2,9,10],[-7,-9,2,10],[1,-7,-1,-4],[1,-7,1,-7],[-6,-2,4,2],[-4,4,8,-4],[-8,-10,7,7],[3,6,6,6],[4,-6,1,2],[8,-1,-1,-7],[-6,-8,-2,-3],[-9,-10,4,-8],[5,-7,-3,-2],[-6,-9,-8,4],[3,10,-6,-2],[-4,1,-10,6]], dtype = "int32")#candidate|8134|(72, 4)|const|int32
call_8133 = func_299_call(relay.reshape(const_8134.astype('int32'), [8, 3, 12]))
call_8135 = func_299_call(relay.reshape(const_8134.astype('int32'), [8, 3, 12]))
func_7816_call = mod.get_global_var('func_7816')
func_7818_call = mutated_mod.get_global_var('func_7818')
const_8154 = relay.const([-0.756475,-6.136348,-0.464101,-9.312979,6.325567,2.416941,-9.145147,-3.473093,-3.876101,-7.412451,-8.195218,0.131370,-7.309347,5.240677,5.767563,-5.052220,-9.459776,-4.621874,3.953332,-7.958671,5.240861,1.717408,-8.717024,-5.449546,-5.943431,3.821799,-9.709695,-9.541657,-4.556848,-3.930004,6.198621,9.369940,4.992730,-6.437795,-5.827977,6.773011,-6.193646,-5.277156,-2.411421,3.904883,4.566881,0.847308,3.500745,-9.803389,7.602473,-4.303761,8.461393,-3.313275,0.864661,1.728203,7.569469,-5.105473,8.115813,-8.661974,3.082390,-5.673361,9.181231,-9.328756,-9.849835,-4.085356,-9.950524,-6.416906,-9.473482,-1.089488,7.301937,-1.375926,2.877876,-3.112816,4.700798,-4.669303,2.261603,8.333224,1.256486,6.126732,-2.585550,9.257561,-5.079516,7.848358,0.004074,6.911442,9.224248,4.406477,-6.705879,-6.414534,2.898636,-5.010618,4.371312,5.665831,6.968696,-1.631405,-2.181796,-6.877799,4.092053,7.447758,-4.397276,8.903923,-5.710688,-5.419278,5.150962,-4.942918,0.783929,2.619299,-8.676032,2.273589,9.125790,-2.355393,-1.527502,6.834557,-1.646268,-9.717410,9.284671,-7.593203,-6.026735,-7.170996,3.325853,-0.775729,1.837589,-4.099912,-3.828196,5.942357,8.998371,4.813401,2.206854,-2.123345,-8.240011,-2.892116,-9.760479,4.861112,0.200436,-2.497247,0.414982,7.719127,-1.507918,-3.390595,-8.840516,6.913014,0.695572,2.816062,5.955667,-1.885134,-7.980893,1.603962,-6.878920,4.521762,-9.040785,-5.365001,7.705101,-1.319100,8.589374,-1.792429,-3.085473,-8.778502,4.279478,-5.627205,6.845716,-4.999286,0.997703,-0.561467,-4.640846,8.413022,-8.796163,-5.016225,-7.230312,9.025834,-8.734750,5.122080,7.385949,-0.766883,1.156782,2.014391,-1.753074,-9.678028,7.946732,9.682592,-6.550442,-9.457226,-9.637316,-5.132943,5.398545,0.203097,-2.418550,6.018577,-5.787407,-3.798645,-1.912030,-0.016321,9.109290,0.894366,8.219385,-3.923224,3.342590,-0.817505,-1.474006,-6.730698,8.205540,7.242891,-6.023629,8.126585,-2.917692,-0.977117,-2.732288,8.664662,7.791692,-3.211087,0.065913,2.365055,-8.324552,0.127060,-9.226382,-7.976551,2.103852,9.045859,-0.888653,-2.240783,-4.921794,-8.865785,4.956361,-4.276598,-1.372794,6.729902,-2.206823,-9.684894,5.202277,8.314700,-5.206458,3.853172,1.208214,6.949189,2.578876,-4.006853,9.033333,-9.840245,3.916916,6.640279,-2.591978,8.547003,9.389225,6.761698,2.725490,3.675462,-9.793986,8.142728,8.865869,-9.156615,-7.129856,4.806470,0.359467,-8.451254,-8.896178,-9.541581,9.136438,5.469041,7.357103,4.232915,6.634602,-0.904653,7.717376,4.948556,7.756786,0.143133,4.303582,8.785141,9.856035,9.373568,6.791980,-1.186948,8.043573,-2.303140,-7.661134,-1.223826,-6.681143,0.963772,-2.635122,-5.664249,-7.958226,-9.953877,-3.530753,-1.469367,2.132838,-6.034890,1.921233,8.277282,-2.368433,-6.044009,7.176962,3.596727,9.906363,8.666359,3.703796,3.541753,-0.789255,1.685926,8.699377,-3.864898,4.584423,-4.281533,4.604790,-5.735873,6.105807,-0.294985,7.710641,-6.277112,-3.029388,-9.200901,0.351837,-0.981820,2.073701,2.112522,0.870453,-5.358971,-1.531666,-8.277955,-7.742011,8.963155,7.288762,5.991737,2.246289,0.538516,0.847528,-6.464384,-0.688849,-3.615690,-3.179227,-6.881206,1.517553,7.265972,0.415128,4.880440,-0.764561,0.386037,-0.721829,-2.743929,-0.963971,-2.657599,1.920900,9.657358,3.914579,-6.188234,2.075439,6.529384,0.780963,-9.808322,-9.578030,-1.366381,-5.247385,-0.902827,-5.400823,2.633762,9.667338,7.573334,-4.403399,-2.379064,-8.611808,3.299451,1.306622,3.040733,1.382182,-9.753357,7.682190,-4.114441,-7.221943,8.234947,9.240040,-5.891769,-3.680555,-5.073718,-2.552274,-6.659252,5.587795,-5.413013,-1.905152,4.156443,0.027240,-0.428083,-7.332244,-7.898191,9.685337,-8.342093,-1.610936,1.266686,-9.930935,9.379439,-4.719484,9.572755,-4.994978,7.390565,6.454901,-4.110930,-3.639739,-6.307263,-3.333222,4.285033,-1.525141,-1.085087,-0.103784,1.878965,8.930501,7.909940,-2.675056,0.239035,-1.767415,8.917519,2.648636,-9.532246,-4.159228,3.429437,-7.799391,0.516823,-6.770325,0.909113,7.006243,7.589413,-2.964448,8.023836,6.916624,2.694107,2.931797,-8.228984,-9.751541,-1.512553,7.205232,1.739090,-8.720379,-0.322711,1.988273,-2.880412,-8.274413,4.529006,-4.359612,0.578568,-1.937824,-1.045748,3.706547,-2.895902,9.406543,5.502020,-2.819253,-7.134113,6.435056,7.232874,0.368242,5.018600,9.894959,-9.360702,7.151822,-4.223727,-0.588673,7.496991,5.310889,0.391194,-0.358766,4.968322,-5.422386,-1.788759,-9.535309,-9.432406,7.963657,1.812960,-0.438207,-1.691903,3.252962,0.977593,8.189128,9.197254,4.949068,-6.522908,6.853038,-4.724565,1.662377,4.193061,6.837640,3.584414,-2.211157,2.257891,-2.315798,-6.496201,-0.835903,3.784421,4.436993,-2.975123,-0.643079,-2.221876,-7.264335,2.208977,1.543619,9.415529,-4.936142,1.473509,6.087385,0.270345,3.729483,1.481293,-5.372753,6.010030,-7.110064,-0.157723,-2.194873,-6.151416,0.689224,5.965060,2.800915,3.162261,3.616329,-3.359480,-5.709578,7.656414,6.304409,9.542331,7.856960,5.743626,5.324514,-0.424552,6.422987,-9.437207,-0.348148,6.867572,3.396085,0.174569,-9.157842,1.557778,-0.292779,-6.490022,-9.498961,4.347386,-9.630063,7.969161,-7.070887,-8.779409,-4.758139,-2.012214,-2.654870,-6.395691,2.816422,-6.895363,9.121457,-4.323541,-6.109112,-1.590816,-6.895735,2.152513,-0.138446,-1.741957,-6.590785,-6.165011,-2.778951,-1.962620,5.490378,-1.061585,-9.297934,-5.106482,-4.310472,5.687505,4.166186,1.655848,1.325096,-8.750129,5.427637,-1.780038,8.876675,3.096822,-2.584013,-9.661129,-1.994215,-1.792388,-5.605651,1.510252,2.144727,8.437471,-8.361228,-5.490628,7.661178,9.218999,-5.387105,9.412119,3.535691,0.447023,-4.494298,0.806958,-5.279677,5.529287,-7.275350,1.518949,-3.580861,-3.527368,-7.532759,-7.406294,2.518430,-2.150780,-0.566007,-1.255700,-7.167000,5.206767,7.807016,-3.269527,-6.684769,-9.856095,-0.166534,-4.186403,2.088202,8.888024,3.525698,2.785442,4.193450,-1.486843,4.058787,8.826649,-4.775590,-5.941688,4.784420,9.446606,8.733255,-4.698935,-6.061938,-2.305767,9.591128,5.669300,3.177883,-1.162278,-0.814583,-0.922840,3.415901,-2.852172,-0.195931,9.940335,5.718164,8.042604,0.931079,-3.177640,-8.284034,1.912396,-9.479269,4.542782,9.696488,-2.560983,-3.856250,-9.127375,2.800926,-2.851720,1.257865,9.451857,-6.297577,9.605994,2.575871,2.972770,-3.119651,5.578062,5.807430,9.584347,-0.699145,5.428413,-9.549568,-1.447944,-2.384942,-2.490581,7.956916,-2.830442,-8.658678,2.289402,0.722094,-4.618923,6.769924,-4.592251,-7.436859,0.111432,7.189786,4.719573,-9.074852,3.238741,-5.926152,1.445460,-5.133375,-4.443001,0.777437,-0.743353,-7.045912,6.210771,-7.798790,4.212352,9.200575,-1.151107,0.365904,-7.408769,7.028506,-2.182463,4.985045,7.043233,9.373110,9.381915,6.305985,0.506644,-9.627431,7.013675,-6.493091,4.612492,-7.989791,-0.993904,8.285434,4.498464,7.242849,6.830726,2.998492,-0.807875,-9.742056,-5.171326,0.544727,2.090559,-0.787699,-0.755524,1.487846,-2.842617,3.944381,9.878018,0.612992,-7.526668,-2.111019,-8.040361,-3.415310,-4.864464,-4.169558,4.981102,-3.488953,4.300385,9.484238,9.681371,1.889692,-1.668644,6.889763,0.811091,4.419227,5.351862,9.481651,8.821330,-5.567347,-5.960980,-4.834895,-1.883540,3.630703,6.633674,9.597775,0.214863,-5.929528,-3.616807,-0.747794,9.791934,6.720797,3.585751,-2.104520,-7.067991,5.688922,8.637864,-8.438223,-2.892381,3.023616,1.143523,5.180952,2.920035,-0.802160,9.108447,0.304410,-3.875586,3.090595,-7.706558,4.218861,-9.737027,7.384822,-0.366281,8.039249,5.220813,6.246656,9.847322,-8.588540,-4.170503,-8.383816,5.157501,-8.265811,-0.416797,1.241495,2.231439,-1.269632,4.691868,8.860987,4.782407,2.325338,4.005323,7.398246,3.119986,3.849928,8.037181,5.352327,-0.672968,-9.576262,9.876656,1.612060,-3.854593,-6.308197,7.023810,-1.863730,-8.621557,-7.674442,-6.263851,-3.867225,9.386095,9.081433,-8.954224,8.610720,0.719110,3.371431,9.375128,9.231283,-0.219637,-8.209161,-3.264258,4.968457,-8.907368,-7.305054,3.062321,-9.473228,7.152812,6.426885,-0.481613,-6.153533,9.481509,-1.714492,-0.538883,-1.293783,0.829537,-0.774178,1.051788,-7.245841,9.916053,-0.919586,3.985181], dtype = "float32")#candidate|8154|(832,)|const|float32
call_8153 = relay.TupleGetItem(func_7816_call(relay.reshape(const_8154.astype('float32'), [832,])), 4)
call_8155 = relay.TupleGetItem(func_7818_call(relay.reshape(const_8154.astype('float32'), [832,])), 4)
output = relay.Tuple([call_8092,call_8108,call_8123,call_8133,const_8134,call_8153,const_8154,])
output2 = relay.Tuple([call_8093,call_8109,call_8124,call_8135,const_8134,call_8155,const_8154,])
func_8164 = relay.Function([], output)
mod['func_8164'] = func_8164
mod = relay.transform.InferType()(mod)
mutated_mod['func_8164'] = func_8164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8164_call = mutated_mod.get_global_var('func_8164')
call_8165 = func_8164_call()
output = call_8165
func_8166 = relay.Function([], output)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_8167 = relay.TupleGetItem(func_2898_call(), 0)
call_8168 = relay.TupleGetItem(func_2900_call(), 0)
func_3273_call = mod.get_global_var('func_3273')
func_3277_call = mutated_mod.get_global_var('func_3277')
const_8170 = relay.const(5, dtype = "uint8")#candidate|8170|()|const|uint8
const_8171 = relay.const([6.987020,-0.666340,-2.427553,-2.326750,-7.788461,-0.386024,-5.912853,-9.090426,2.918850,2.311399,-9.573309,-6.595586,1.383266,-0.390123,3.749900,6.491086,-3.965036,-0.073138,-2.027453,4.934427,2.701602,3.720930,8.296518,7.314535,4.240803,-0.608306,6.058045,0.404470,-3.668487,1.610907,-0.023524,-8.812940,-4.127798,3.953587,6.457001,0.724064,-6.719324,-4.244741,6.451661,-8.509055,5.807828,-0.956065,1.141139,8.832808,-9.766547,-8.063784,1.444965,1.973953,5.617244,-3.826806,4.227516,8.561507,-5.972241,3.637719,9.627363,-0.854276,-5.370774,0.719301,-8.108001,0.283783,-5.557456,8.340215,-4.663584,1.091897,2.975660,-8.169865,-2.929053,-2.961387,-8.812606,-7.089040,9.874400,-0.331214,8.679892,5.216828,-5.165908,-7.155009,-5.689756,-6.384017,1.624629,0.980754,6.596341,7.509609,1.375498,-8.299560,-9.954172,-9.683854,6.278627,6.085532,-1.440910,-8.196096,-3.282530,5.471262,-4.295387,0.781809,-8.939783,-8.926905,4.959549,7.131550,3.630302,-6.315936,-6.587083,4.822253,3.182536,-6.619157,6.898715,-7.818268,-1.204739,9.582698,7.606494,-3.327442,5.362754,2.379855,-8.829217,3.550241,-6.964304,8.856081,-7.704107,-7.236764,-2.877991,-5.426061,1.354768,3.145265,-2.497943,-5.918187,1.735289,4.510811,3.206493,8.475897,0.607916,1.254000,-6.455326,-3.317967,7.468115,-5.921513,-6.953825,0.881334,9.769985,0.103646,5.795667,0.612415,-7.384534,9.891413,2.954480,2.811691,-2.894874,-1.613857,-2.442303,4.461927,2.902510,3.389830,-9.332787,1.853350,7.007875,-6.389428,-1.316860,4.596183,-3.208738,-1.752251,-6.961580,6.615848,-6.176102,7.104421,-8.697076,-1.741655,1.585332,0.529752,0.253071,9.582004,6.656900,3.525920,-2.839675,-4.225925,-9.463972,-0.436078,9.278791,7.202271,-4.464013,-7.188672,6.761413,-3.078902,-8.559978,0.220212,6.109539,-6.955745,-7.593926,-5.552774,-2.658212,4.799364,-0.928582,9.788095,5.835491,4.080541,-2.514643,9.670998,6.956124,-0.366549,4.208146,8.615761,-2.173877,-9.699327,8.359948,3.978792,0.374686,-1.652147,5.159953,1.863424,-3.508014,-4.213053,-2.747405,9.205149,3.866270,6.721798,9.309635,0.167071,-9.730215,-8.131866,0.091385,-7.098618,-7.811546,-5.451808,-3.088453,0.152006,-8.544572,6.063545,1.099854,-5.382343,-0.967415,0.532391,-9.585056,-8.498503,-8.184389,0.517782,-0.207554,7.422410,-8.448315,-9.834763,1.735555,-7.134168,2.343124,7.177742,-9.881441,-2.530979,9.588965,-9.368554,-2.576658,2.416336,7.722959,-2.139006,-8.839258,-5.600890,3.268694,1.400313,-1.428983,6.087704,-1.977240,-7.919105,-4.846337,7.798620,8.479605,-7.303928,-1.759647,-8.929206,-2.623044,-4.520261,-6.653778,7.058043,9.153508,2.719818,-6.780325,-0.001224,7.107151,8.818186,0.090299,9.200733,-5.389573,-3.282331,0.960588,-9.316065,-3.710537,-5.039146,-2.176496,-0.283081,9.677769,4.570595,-0.576803,-3.358852,3.535485,-3.695641,-9.111980,1.151565,9.133748,-2.401331,-7.651160,-6.290713,0.805369,-0.113082,-4.572064,8.586450,-2.612012,-0.154195,-2.773130,-9.795139,-4.012158,-0.782003,-9.302255,-9.969425,-9.800551,7.773268,8.768152,3.631057,-8.544987,-1.689633,-0.022772,-0.506988,4.576517,-1.266952,2.209187,6.644684,3.717455,0.877231,4.512603,6.675654,-7.345918,-6.917716,-0.976273,-7.958996,2.346800,5.231816,-4.302233,-8.256714,-8.768953,-6.895771,2.725459,-3.955906,0.618921,2.692753,4.444755,-6.806825,5.077495,4.900014,-4.956286,-4.496341,7.329892,-3.796585,-8.485530,2.708750,6.775200,-8.498300,7.731124,6.413570,-0.912499,5.475471,9.882656,5.518065,-6.706473,-4.571862,-3.682817,6.571700,-6.296568,-1.846387,-5.244345,-0.221490,9.413807,0.468236,9.813042,1.209641,6.875338,9.145110,7.959550,7.481780,9.476164,-1.350477,-4.626154,2.735864,2.176909,2.872520,5.090762,9.193860,1.771175,8.080419,6.588189,-8.515467,5.504959,1.118660,1.288666,3.385785,-4.446629,-5.007963,4.330327,-6.224416,2.524652,-0.471018,5.641288,2.897752,-3.178798,3.800651,-3.018974,-9.334128,8.448447,-6.391309,-2.627198,8.449713,0.147164,-2.125321,-5.483930,-2.427014,-0.294595,-7.516878,-1.901593,-7.808179,1.029330,2.220062,-7.045676,5.544401,3.917158,-7.462924,0.583779,0.934908,2.650577,1.740218,-7.657090,-7.459776,3.304953,-7.616798,-6.974422,-4.469917,-0.122897,0.417711,-5.533615,-0.210643,-6.071430,8.838465,-7.994173,7.957215,-1.766280,5.755685,-2.020700,-3.087709,9.037595,5.354042,4.681065,8.837645,0.390365,-0.649787,2.409535,-9.172530,1.773449,-6.163726,-4.033914,-3.418945,-9.837136,2.630081,1.735759,-9.971960,-7.264922,-2.280888,-2.458884,7.885788,9.743338,2.246726,-4.834294,-2.630820,7.601753,0.990056,-0.754475,5.690582,-7.958236,0.518656,-9.394525,-8.227159,-0.817455,-8.662268,-7.447088,-0.457557,-6.892941,-7.826760,5.934958,-6.421372,5.692819,-2.082888,9.194845,4.109972,-6.728267,0.472481,-7.205823,6.310181,0.040908,1.299307,9.681508,9.568900,8.679917,-1.614170,-5.002150,-6.433922,0.082789,-8.455487,-1.553801,-0.268076,-4.703158,9.688598,4.433729,2.357746,-6.658345,-2.597889,6.317926,2.157514,1.656073,5.421658,4.921376,-9.044904,4.782108,6.362143,-6.979536,-9.996305,-4.903431,7.168672,8.387770,-9.016787,-3.450423,2.401726,-8.966558,-8.614418,6.909536,4.523937,8.696887,1.413883,-4.698928,-0.227465,-6.794586,-1.977410,-5.425201,-6.617545,-8.819677,-1.392044,0.483121,-7.428416,-3.732267,4.631441,0.680541,-5.146450,-1.127706,7.163283,5.156525,2.835277,-6.623312,-1.192349,-7.516769,-4.997151,9.611265,3.431749,1.212247,-2.075386,-2.983997,1.607631,-7.390646,0.318846,4.509980,-0.625853,-5.979713,-4.076843,6.810918,-2.175242,4.837123,-8.638017,8.880852,3.674613,-0.966869,-8.212779,2.985195,-1.172014,-4.897456,2.935945,-7.427564,-8.414901,3.125410,0.889049,8.370677,-1.875084,1.152848,1.805979,-3.656908,9.476918,-4.586418,-3.999004,6.711716,6.323334,-8.906978,4.042923,-5.645584,8.048972,-2.505358,-9.455181,-3.302999,-2.119705,-4.330900,-2.243342,-4.680395,9.429201,-5.050268,-6.519228,-2.653125,3.359339,-7.518338,9.024060,-6.285850,5.747849,2.152267,-6.552146,-0.301352,3.226399,-8.500060,-2.306286,0.967751,9.537393,1.147174,8.256425,5.477742,-6.546311,0.671979,2.158992,-6.390687,-6.295394,-2.162262,-2.642084,4.551263,7.980867,8.481040,-9.960767,5.888889,-2.970288,-1.313858,-9.194636,-6.438039,0.958481,-1.803334,2.575162,8.066556,1.044581,-6.765897,6.723243,6.176104,0.473324,-2.654210,-6.699560,5.186252,-5.718382,-3.467550,-9.027633,4.167359,1.790199,-2.966330,-6.626178,-7.295827,0.611257,5.080057,3.264860,-3.058909,-1.084009,-5.471313,-4.122852,9.286337,8.672806,-5.457143,1.837392,-8.098980,4.096993,9.971095,-7.077070,9.137850,1.525105,-0.248206,-9.853295,4.278247,1.243670,9.427652,-4.864485,-0.411818,-6.424101,8.458368,-9.813142,-8.466502,-7.333766,-8.248935,-4.788122,-0.116856,-4.612316,-6.063198,0.472463,1.694466,9.861473,5.481205,-9.287517,-1.971760,-5.152670,-9.549982,3.762736,-5.612671,-2.087545,-5.007886,0.489430,-8.231359,-5.851027,-9.384253,6.783466,-8.021325,-2.740768,-4.307646,-9.036379,9.058928,-4.819487,9.828604,4.573326,6.255018,-1.963421,-5.648576,-7.831277,-8.648882,2.451394,7.662225,-2.849295,6.087560,9.660384,3.744776,-7.224798,-0.244171,-8.732240,-3.778913,6.280452,-9.068782,-7.123523,1.133568,7.766117,1.472997,-8.520196,2.926420,-1.661273,6.683373,-9.964993,2.503556,-2.106156,5.658702,-0.081363,-2.397483,3.325281,5.393512,8.150646,5.542578,-2.423633,5.767933,9.589465,-0.137700,3.212342,3.863413,-9.882099,0.036394,-2.434610,-5.541248,-3.739581,-3.456224,3.243020,0.517415,4.764358,8.309569,4.973553,-1.173352,-7.630224,2.670198,3.822880,5.536343,1.487224,-7.796271,-6.456465,-2.164501,5.910613,-1.854371,9.017307,0.662801,-9.362826,-7.704609,8.138150,-9.064269,5.260497,2.006577,-5.345632,6.864758,5.053521,8.846008,-9.512490,8.321961,3.226807,-4.302103,3.632761,5.136647,-1.502011,-3.443828,-7.932458,4.296904,-4.112560,-6.743118,-6.660585,-5.998486,3.766673,3.169665,-0.191586,6.609236,-4.600860,-8.327223,3.220592,-1.090416,5.588739,3.060125,3.576454,-2.719961,-4.956989,6.754571,-3.898391,-0.031107,3.449953,7.896098,-7.419719,2.269547,-9.597765,5.844532,9.244576,0.762653,-5.199784,3.237121,-4.883274,2.416063,-6.058247,2.613653,-3.647333,9.498428,8.481969,4.405842,5.067713,-8.189721,-2.878925,-6.332266,6.492688,1.945407,-3.060690,-7.878839,-4.704958,1.366509,-6.504980,9.331793,5.049326,-5.648454,8.109837,-2.291134,9.243046,-1.542480,-7.947896,8.823869,-1.762704,4.564385,9.012659,2.353218,4.600798,9.413571,0.003157,0.771285,9.106353,6.242735,1.207947,9.487754,8.920974,8.538799,-4.891815,3.887283,7.636526,-6.780610,-4.548334,-3.701251,-3.032762,3.094899,-2.941510,-0.244715,1.677941,-5.867635,-8.901361,1.263942,0.857057,4.035832,5.810747,-4.894676,-2.802974,-0.933619,6.222924,-1.950879,-0.922347,4.205840,-4.235425,-1.587753,-0.934740,3.497858,-3.355834,-3.000292,7.363988,-2.595231,-2.675592,7.609103,6.187193,-2.145454,-0.422250,-6.384322,-2.933807,0.162674,-9.895872,-0.538915,-2.829565,6.776835,-9.593760,-3.051388,9.916261,6.693415,1.384258,-1.558077,-4.434036,0.268559,-2.830477,1.508432,-1.660550,5.207430,-4.127473,7.237632,6.892139,6.949673,-4.973073,6.599635,-7.250697,1.932126,1.407631,-3.709492,-1.743272,-7.239001,-2.728812,-4.719849,-6.704332,7.015500,8.424624,5.590624,4.240398,4.591682,-5.693803,8.695995,7.167789,2.929137,2.648922,-6.415389,4.763592,-5.805474,-1.161224,-9.551149,-4.590331,7.964704,-8.904717,3.572552,7.385098,8.545914,7.900542,7.047737,-2.666252,-8.317334,-0.939147,4.450653,7.115814,3.809212,-8.068827,4.107345,0.868274,8.795820,1.913762,2.655962,9.541838,9.042164,-5.836879,3.262001,6.959434,-2.501450,-1.420234,9.673492,4.803939,5.882637,8.894612,-9.352219,4.417416,-2.014189,-5.494442,6.320677,2.985463,5.593200,2.219364,-6.169651,-2.896009,0.467560,-0.399729,-6.834528,3.264747,-0.898556,-5.962717,-7.719369,-4.218743,8.068618,-1.701185,-7.684222,4.061612,6.858215,-5.569504,9.362563,-5.911566,9.251840,2.859525,-9.069519,3.894504,5.288371,-8.248528,8.864880,0.644802,6.447263,4.626049,1.425103,8.094927,-2.938589,-6.812436,-0.104501,-0.771990,1.602194,-5.052992,-4.456776,-6.337802,5.972826,5.501228,9.930357,6.062144,7.591863,-3.176306,0.207324,3.970882,2.070929,4.521881,7.580027,1.796545,-4.178196,-6.963494,5.967345,-9.663055,5.677775,1.850307,-2.397451,-9.364735,-4.293027,-1.034701,-0.229217,2.221959,5.305541,-6.077427,-0.104019,-9.152506,4.253713,8.910520,0.158265,9.239210,-7.314454,-7.036992,-7.514941,-4.648305,2.536134,-8.829213,-3.027583,-2.859346,0.775114,-1.744448,-3.094450,-0.925890,-4.672262,0.928848,1.374477,-6.792752,6.062304,5.972898,8.125231,-1.560140,-9.920013,8.236183,-0.015629,7.925377,-6.172979,3.182544,-3.215576,-0.816389,-8.574912,-3.340050,-3.399572,3.854978,1.514550,4.654330,-3.225342,-6.074698,9.341364,2.017382,7.889724,0.368205,2.339154,-0.934244,-4.753063,-9.292492,-1.504733,-2.385640,1.566089,3.856515,-9.481346,-6.037277,-6.936364,-5.984060,-5.245850,-5.130116,-8.141130,8.215754,-2.945729,9.273287,-3.627535,4.816261,-0.653921,4.914097,3.619113,9.206145,-6.793307,-7.517642,-9.405850,-4.270930,9.748130,-5.446904,-3.762741,8.658459,1.120065,7.381339,-6.849929,6.653511,-6.019459,-5.798776,5.120502,-6.867060,0.848621,-8.665718,8.886931,-9.145786,9.485620,-6.074341,-4.248403,4.686759,-0.225845,0.014438,4.996219,4.132937,-4.495108,-2.880118,5.584351,9.862163,1.475768,-7.250868,-5.157816,8.382436,1.725117,4.233177,1.384007,-9.890568,1.469113,-6.259159,-1.335183,-5.287040,-4.559165,-4.305809,6.418791,-9.289972,1.633530,9.878471,-5.040841,-7.290219,-3.483207,8.461038,-5.775448,8.819728,-4.632951,-6.611310,-7.060856,5.505266,1.592872,-0.452289,5.213704,-3.433577,-2.628474,-8.524769,-4.853831,-4.229184,-1.524493,0.201721,7.199364,-7.556911,-0.413750,-0.886455,8.342496,5.483119,0.324420,-6.006825,5.265517,-3.333886,-9.551833,-7.580892,3.972478,-0.193892,-3.865380,-2.050187,-0.342046,5.519852,3.624188,5.415486,6.648865,-0.647929,1.324744,1.924979,8.202790,-2.639114,-9.994634,-2.031133,6.712767,2.051537,-8.613834,-5.470969,-9.173680,-0.110947,8.781959,4.179434,-5.338970,-4.934221,-2.580360,-0.138137,2.501212,3.016704,8.817609,3.668734,-8.131908,7.426245,-9.271807,-8.804537,2.058246,-8.877204,-3.126529,-4.942007,4.467831,-9.860237,-6.293400,7.744992,9.953982,-5.281936,2.026583,-6.345990,-5.080451,-6.566723,0.735158,-6.538069,6.939715,1.970934,-2.707880,5.000714,-1.195630,0.749477,-8.965558,-4.064684,1.295312,1.661540,-9.497215,3.883750,7.763182,8.859995,-1.880039,3.720041,8.271651,7.790861,-8.838458,4.221930,3.165985,-0.459076,-7.190507,5.459178,6.649095,-6.243028,-9.064944,-3.266053,5.675238,-4.204920,8.651415,-4.123155,1.106668,-5.199543,-7.343479,-2.090607,-2.177137,1.286815,-5.734969,0.857410,9.032541,6.189534,9.148123,8.921179,-5.525041,-1.742421,-6.844038,-3.022438,-6.348641,6.538999,-5.754546,-0.415502,-0.920855,3.956493,2.932922,-9.952022,-6.378953,-1.676308,-6.494280,4.606562,-2.040948,-7.864245,-9.839910,-6.737316,-6.755170,7.909314,2.737782,7.336572,7.160489,-2.929930,2.610515,-0.514483,4.026736,7.346594,-1.094120,-3.390467,-5.764651,1.513524,9.745052,-2.751071,-3.149524,-8.475774,7.178153,5.419294,5.158943,1.097676,2.603535,-0.141787,9.612027,-1.381855,-9.406254,-7.867010,1.467949,8.429719,3.473341,-4.158595,5.752241,6.350221,9.559652,-5.857782,9.660901,3.025698,3.920495,4.590527,-0.723357,-1.166230,-3.497740,1.475501,4.809026,-7.933616,-2.305825,-9.651596,4.557952,5.263725,-7.627660,5.468428,0.506988,-4.253591,3.871558,2.452828,8.751212,-2.984021,-2.063986,-6.404868,6.659375,-1.638931,5.005245,0.430334,8.710413,2.896320,-0.168472,1.706368,-0.540156,-5.720135,2.926419,2.255722,-0.292882,-6.812617,6.505311,-9.509857,1.610095,4.781105,4.482029,5.656853,1.820066,-3.811810,-7.236429,4.027178,-0.810941,-8.886003,-5.219336,-2.464691,7.516819,4.968038,3.373634,1.605557,1.425115,-1.018366,-2.557657,6.103191,-6.719633,8.384303,6.553962,9.270334,2.874634,8.181760,8.679634,-0.569812,-8.437616,-6.157870,6.122580,-3.512573,-7.097308,7.755373,-8.093851,-2.323973,-7.857340,9.214818,-1.181196,0.944575,-4.788094,3.804124,2.171837,2.379716,-7.659616,3.484745,5.907072,-8.408207,-0.961564,-8.338460,-5.306318,-6.798494,6.659350,-0.213080,-7.684807,3.909183,-0.019821,3.764444,-3.356368,7.229729,-1.320815,-7.382522,-6.988574,0.883526,-3.075674,6.240386,-2.077257,4.699365,-6.277327,2.555678,-2.149711,4.177103,-5.086407,-4.288678,7.138542,1.949882,-3.608500,-7.154275,-6.061190,-0.880758,0.570546,6.722080,3.102225,7.933012,-2.826465,-7.111651,8.265179,5.921126,-8.997819,-7.454151,0.764504,8.398592,5.254271,-2.122887,9.783559,-4.307093,-1.450027,-9.583425,1.755326,2.563909,9.411713,-3.893315,-4.986715,-8.888469,4.223061,-1.591773,-4.382001,-1.277860,1.692100,9.610220,4.028259,-4.092209,2.733786,0.328686,-5.490524,-1.750126,6.613359,3.326689,-1.193271,-3.434933,-9.200432,-4.734442,1.337085,4.547285,3.157003,4.196708,-4.241251,-0.741730,4.361667,-9.802564,4.529674,7.645156,1.869224,-8.120213,-2.038513,1.551365,8.832883,9.645582,9.417071,-2.888940,7.054017,9.972059,3.460560,6.038520,-6.838296,-1.501810,-9.781330,-8.969462,-7.344749,1.495101,4.124839,-4.589641,-7.621561,2.404304,-6.623166,-7.353065,-5.424081,6.298429,9.886340,-3.234879,5.218675,7.354097,-9.986963,2.452986,-7.425442,9.022698,-9.095327,5.320404,1.555609,-4.310328,-9.551669,3.602499,-1.669516,-3.954862,0.322662,9.181919,3.780842,-6.499585,-6.958953,0.330669,-5.491502,9.622353,-6.296970,7.585556,1.548749,4.818160,-4.603053,-0.852787,7.813017,-2.859448,2.339723,1.955323,3.479405,-9.064975,-9.805118,-5.904718,-0.784590,3.791574,-7.856198,-6.969815,-8.187290,9.146936,-3.613611,0.460193,-4.120987,-1.299167,-1.090582,3.895972,1.603067,5.817246,5.520447,-8.297421,8.684837,-3.425764,-7.038440,-4.312133,-1.411367,7.209180,9.831531,-9.672585,2.886427,-1.573229,0.895262,3.906449,5.773446,-5.218341,-5.159801,4.580192,-8.503248,-5.440687,-5.539955,7.448270,-3.488924,-6.395864,8.810137,-0.162981,9.793189,-8.954225,-1.249516,-0.463537,1.069223,-8.077484,1.962088,7.054794,6.515298,6.104399,-7.885507,-6.351453,0.225130,3.686305,2.959163,2.746526,-7.830849,1.859411,3.537294,-7.615677,-2.440303,5.542930,-7.936831,1.607001,-3.398839,-2.124824,1.960629,0.369644,4.131464,-5.138005,-2.737423,1.421027,8.884119,9.191823,-6.207058,6.786630,-5.338804,2.780777,-2.726584,-0.031694,2.462900,2.670183,0.189986,0.375596,2.061142,-8.634646,-0.829673,-6.809614,-3.154133,-4.260376,-8.793263,-2.137396,-5.558252,7.667950,-8.393372,3.041536,-9.075476,9.277911,-0.913044,-1.138007,-3.709861,1.939959,1.527541,-0.594479,-5.160607,-5.376159,0.481750,7.420445,-5.779344,-7.955053,9.251255,-7.310309,-6.577720,9.063604,0.962782,6.485355,-1.612552,-1.371646,-7.866052,-0.415465,2.230228,9.875970,6.071805,9.907598,-1.991470,-3.771589,6.755851,1.960795,-7.414277,-4.057059,7.391034,8.879235,0.617929,8.074971,7.558694,-5.687951,-8.393926,3.696397,-5.084596,-7.490566,-3.395108,-6.416480,0.034790,7.405539,4.970468,3.293961,2.710879,-4.945214,-8.957601,6.512491,4.112430,6.247837,5.687279,0.237536,7.566337,-2.222176,9.175401,4.021024,6.486438,-3.962357,9.871095,1.966175,9.829295,4.267819,9.934578,9.840967,-2.125933,-2.594453,2.579543,7.585814,0.767238,-1.402945,5.726865,-1.783732,-7.536661,3.602774,-1.373621,5.414957,-9.117857,-2.519675,3.892157,6.719521,-7.315663,0.944511,2.046237,-4.523211,8.016562,3.078993,-6.448762,4.871435,5.355856,-0.733125,3.517120,6.956961,-5.404487,7.267023,3.130912,8.038870,-7.365785,4.611784,-1.799634,2.185340,-9.666143,-0.877440,-8.757745,8.147868,-3.132749,6.099874,0.066137,8.369781,-1.889424,1.644498,6.737671,7.453326,-4.778736,-8.202507,-0.517724,-4.439207,-1.745294,-4.615398,-9.591352,-1.307252,2.592426,-6.567356,-4.866868,3.331942,-9.364891,-1.164256,6.781630,5.372307,-1.092599,-9.613608,1.596020,1.024822,5.738063,-6.352833,-1.348169,-7.058701,7.759034,-7.892453,5.088186,-0.736578,3.370843,1.669051,7.890235,-8.165487,-7.523166,-2.004491,3.977002,-4.979044,0.597556,-8.642472,8.119612,-8.282097,1.444453,8.106068,-2.350732,-9.374439,-3.310810,-8.532667,-8.610787,-9.423252,-9.858727,1.832399,-2.404093,-7.419215,-3.510720,2.956878,-7.373645,-2.453031,5.134640,-4.691730,-1.619722,0.144955,-2.158262,-5.576153,-5.019756,-0.907711,5.097262,-4.781561,2.163948,-9.887780,3.732344,0.220500,1.225320,1.579548,1.129728,-1.834171,-8.643903,2.808076,5.350052,3.478417,-0.921079,-2.862053,4.405228,5.852962,-9.675478,4.589911,-5.177103,2.431293,-9.076321,-0.091225,-9.984567,4.108265,-8.806208,0.799027,-9.757198,8.516076,-2.256028,9.813299,-0.114273,-2.850536,-0.637573,-6.858460,5.865548,-3.437649,-4.356269,6.858977,2.570489,3.423239,5.228728,5.953148,2.166127,-5.690455,0.515820,-2.825344,8.883382,-8.256710,-2.129546,-1.938828,-5.118098,1.302434,0.327061,7.892926,-3.751059,-8.428876,8.174040,0.811101,-2.727509,3.144470,7.012436,7.514158,-8.579221,-1.946618,-0.747306,-1.429326,0.687471,6.813191,7.546009,2.103298,2.255984,2.599858,-0.393285,5.631395,8.932184,-5.635901,-6.119313,2.116030,1.555672,9.322750,-7.594966,-9.063626,-4.169716,-8.986478,-4.755464,6.806822,9.155957,-4.969803,7.080493,-8.118274,-0.635453,-4.635895,-6.088374,-5.707971,1.050634,9.438278,6.173143,-9.951510,3.582132,7.454355,-5.214048,5.561782,-2.085130,2.633306,9.481824,-5.298743,-3.364997,0.354114,-9.383998,-0.784637,9.731032,0.009275,8.251569,-6.545480,-9.156143,-3.700009,-5.027839,-5.174623,-1.687769,2.242891,0.092714,7.593355,-5.166115,-5.991801,-4.572795,-2.089009,-1.564795,1.540750,8.694014,-3.846637,5.337489,7.873857,-8.688712,-8.573325,4.105084,-5.007812,9.243363,9.659645,-9.632911,-1.881349,-5.129242,9.118563,-6.263981,2.147546,-9.358850,9.063187,-6.246268,-0.450244,-2.569341,4.031292,-0.296151,-3.284722,-6.556813,0.004935,2.338834,6.888086,-8.931137,-4.154275,0.517287,6.136596,1.987808,-8.628096,1.496068,-1.814748,0.059537,5.340448,-9.319781,-4.245445,3.274117,0.243089,4.197634,3.331429,4.096460,6.767288,5.311646,1.781873,0.619124,-6.142840,-8.251024,8.320037,3.749131,6.224148,-2.773412,-9.491087,2.411146,7.743793,-3.278061,-9.735677,-9.465639,6.190815,-5.085956,1.431371,-1.988507,-8.576967,-5.067342,-7.279240,0.575260,3.555995,7.882702,8.344324,-2.417018,-9.100050,1.752078,-5.839872,-9.214548,3.022096,-1.709259,-9.519655,2.242941,7.120997,-0.548912,1.151707,4.019079,-4.022310,-4.608157,9.034067,-0.771430,6.551930,4.757843,0.463804,7.613421,-7.779911,6.776621,-0.909856,-1.782721,0.787321,-2.743532,-4.117021,3.046396,-4.955985,-0.847222,-0.930451,6.815911,5.690851,-7.384584,-1.713042,2.045265,8.294943,-2.093724,9.054200,-9.768369,4.072372,1.327954,-9.633683,-3.784957,-2.111511,4.746723,7.422415,4.277641,2.111699,-0.859217,9.825991,-7.467299,-3.447555,4.674029,1.997187,-3.691861,-8.231008,-2.135290,8.787368,3.429103,-3.735502,-3.772655,-4.840639,-4.808622,2.832989,6.466399,-4.218268,-0.979136,-7.058729,9.735500,4.846005,1.341343,9.746049,-6.478541,-4.122098,9.319501,-1.244322,0.337343,7.443283,-4.494837,-7.499229,6.435730,-3.790291,4.146132,9.027301,-5.251019,5.019520,-7.550773,-5.039348,2.201156,9.346830,1.342072,-1.736805,-8.893806,-9.611920,0.593735,-9.410375,8.419515,-4.031161,-9.782529,4.730088,-8.544434,-0.370348,-8.664428,5.165904,0.877142,-6.369640,0.762213,4.590481,-2.317440,-8.824703,-2.876935,-5.279700,8.066387,9.009863,6.930792,3.628987,0.134559,-1.686340,-4.195751,0.453529,-8.501930,-2.002448,-2.614059,4.314445,9.591017,-2.664708,7.774765,4.038195,2.438238,-6.618007,-4.277005,-4.914416,4.444899,3.485005,6.764304,7.204709,-2.995492,1.971160,-2.008634,9.057863,-4.460469,3.429566,-5.199223,9.383371,0.389091,-1.022962,3.465588,5.231826,-1.533867,-6.121555,5.581569,1.100957,2.572123,8.622418,-0.416810,2.000835,-3.667668,-2.688698,6.342951,8.102391], dtype = "float32")#candidate|8171|(2240,)|const|float32
call_8169 = relay.TupleGetItem(func_3273_call(relay.reshape(const_8170.astype('uint8'), []), relay.reshape(const_8171.astype('float32'), [2240,]), ), 3)
call_8172 = relay.TupleGetItem(func_3277_call(relay.reshape(const_8170.astype('uint8'), []), relay.reshape(const_8171.astype('float32'), [2240,]), ), 3)
output = relay.Tuple([call_8167,call_8169,const_8170,const_8171,])
output2 = relay.Tuple([call_8168,call_8172,const_8170,const_8171,])
func_8175 = relay.Function([], output)
mod['func_8175'] = func_8175
mod = relay.transform.InferType()(mod)
mutated_mod['func_8175'] = func_8175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mutated_mod.get_global_var('func_8175')
call_8176 = func_8175_call()
output = call_8176
func_8177 = relay.Function([], output)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5809_call = mod.get_global_var('func_5809')
func_5810_call = mutated_mod.get_global_var('func_5810')
call_8192 = relay.TupleGetItem(func_5809_call(), 0)
call_8193 = relay.TupleGetItem(func_5810_call(), 0)
output = call_8192
output2 = call_8193
func_8195 = relay.Function([], output)
mod['func_8195'] = func_8195
mod = relay.transform.InferType()(mod)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8195_call = mutated_mod.get_global_var('func_8195')
call_8196 = func_8195_call()
output = call_8196
func_8197 = relay.Function([], output)
mutated_mod['func_8197'] = func_8197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8210 = relay.var("var_8210", dtype = "uint64", shape = (5, 1, 7))#candidate|8210|(5, 1, 7)|var|uint64
var_8211 = relay.var("var_8211", dtype = "uint64", shape = (5, 13, 7))#candidate|8211|(5, 13, 7)|var|uint64
bop_8212 = relay.equal(var_8210.astype('bool'), var_8211.astype('bool')) # shape=(5, 13, 7)
func_2884_call = mod.get_global_var('func_2884')
func_2887_call = mutated_mod.get_global_var('func_2887')
const_8221 = relay.const([[0.669198],[-6.734666],[2.913516],[-1.799886],[-2.419427],[6.978834],[8.328267],[-9.079014],[6.460538],[-0.514314],[9.847922],[-4.377577],[8.229472],[-5.316888],[-6.830360],[7.893493],[2.249141],[-4.025847],[-0.742654],[5.122121],[-5.586395],[3.660025],[4.928018],[9.973508],[-2.927246],[-0.572477],[-9.414731],[-3.159479],[-1.779544],[-7.438448],[2.887153],[-0.182588],[0.668461],[6.437884],[1.159961],[5.961348],[5.796551],[1.216186],[-0.103956],[2.922369],[3.367543],[-9.531592],[-6.659888],[9.524692],[-7.142873],[5.480002],[9.709806],[-6.494652],[3.097264],[-3.327670],[2.364901],[-6.646130],[-3.711652],[8.224622],[-7.318329],[-1.075875],[-9.637753],[-1.655862],[1.141323],[-1.744095],[0.253371],[3.476791],[0.817041],[6.251048],[-6.368888],[-6.996449],[9.562834],[-6.290232],[-8.215066],[3.306282],[5.053267],[-1.955293],[-4.311638],[-7.737301],[-2.411249],[3.679091],[9.490303],[-6.348813],[5.648855],[9.492002],[8.589605],[6.635009],[-4.836152],[2.197381],[2.421230],[-9.982055],[-4.424429],[4.322240],[9.554705],[-6.127439],[-6.596675],[0.929493],[-6.139032],[-5.313687],[8.694539],[0.678793],[1.806470],[-9.222942],[7.361540],[4.363098],[-1.061948],[0.581693],[-8.210926],[2.236515],[-8.912528],[-8.838029],[-1.681942],[-5.279118],[2.098258],[-3.638602],[-8.543251],[-9.282537],[-8.501850],[-2.699811],[-0.877265],[-7.252353],[2.905004],[8.459037],[-7.505597],[2.964008],[-3.867915],[7.213973],[3.336257],[8.691615],[1.551220],[5.753097],[-1.700019],[2.059928],[-6.200503],[-3.502571],[0.957443],[9.943756],[-7.017241],[6.676619],[-9.310878],[7.800506],[-3.304331],[9.145308],[8.845737],[-4.824320],[-4.877426],[-2.195091],[0.173852],[9.094872],[1.212586],[-5.844275],[-1.825250],[4.065669],[-3.219141],[-6.500742],[9.387356],[2.946553],[-8.931258],[2.465194],[-2.855717],[-8.783506],[-1.826742],[0.586022],[5.834104],[3.483028],[-4.004069],[4.531976],[-1.364405],[2.888046],[9.394263],[6.483529],[3.578746],[-0.869437],[0.011718],[2.086149],[-6.765313],[-6.048372],[7.809633],[-3.643665],[-2.333381],[0.203355],[-3.550700],[5.879596],[-7.152915],[7.056226],[-1.525535],[-2.805880],[-3.792152],[-9.440838],[3.250330],[6.365212],[4.963682],[-7.772630],[6.058851],[0.688423],[-2.111251],[-7.955624],[-8.716458],[3.532892],[-3.605702],[-2.195755],[4.134887],[-3.503605],[-0.954325],[4.705930],[7.940077],[1.519908],[-1.027117],[2.972860],[-9.513839],[6.660950],[1.257707],[0.876443],[-7.731088],[-4.003172],[-8.799501],[6.406657],[-7.095041],[1.807140],[-5.462755],[-3.596497],[9.847792],[3.828034],[3.509516],[9.305510],[6.092677],[-4.295987],[-7.237012],[-1.336958],[0.978555],[7.015690],[-6.152110],[5.911225],[-8.043773],[5.671495],[-8.681567],[-0.934858],[8.030613],[9.943178],[-5.235219],[-7.620515],[-9.665248],[6.666758],[0.543666],[0.625064],[-6.699763],[-3.617086],[3.923605],[5.893674],[-2.270107],[7.004214],[-9.197233],[-2.795503],[7.811793],[-2.090608],[-6.580511],[0.471735],[-7.288819],[6.748944],[4.852110],[-1.409354],[7.557983],[-6.237768],[-9.959564],[-6.834931],[-6.948098],[2.966208],[-2.563206],[-5.598548],[-5.022382],[2.331260],[9.551216],[0.241618],[1.370167],[4.346808],[4.193203],[7.805036],[-9.622582],[9.874607],[3.479307],[1.868520],[2.381300],[6.239195],[-2.675177],[9.301203],[-3.822052],[7.354813],[-7.368093],[3.913841],[8.462195],[-5.185678],[-6.735712],[7.561496],[0.410759],[-8.689187],[0.083427],[-1.853518],[-7.158045],[-8.992194],[3.853224],[8.733920],[-0.606870],[2.526143],[3.148479],[5.845368],[-8.773518],[2.675590],[3.715608],[1.434585],[-7.079044],[8.789457],[-3.189802],[-6.000953],[6.798626],[1.175618],[7.696817],[9.404012],[-9.820004],[-6.510702],[5.599908],[-0.986694],[4.264430],[7.624043],[3.183974],[4.389905],[-2.779448],[8.001383],[-8.129295],[2.422622],[-3.202828],[-2.976076],[-0.853169],[3.878246],[-6.684095],[-0.155535],[3.022596],[4.510943],[6.238497],[4.391257],[-2.471394],[-1.330365],[-7.987685],[8.528228],[6.567561],[-8.924653],[9.721757],[2.270143],[-6.908018],[-2.783224],[-2.209398],[2.587638],[-1.279056],[-6.885138],[8.949287],[-0.700702],[-5.565982],[-5.424133],[-8.370020],[1.789207],[-3.501429],[3.783792],[-8.196058],[3.202409],[2.837031],[-5.640750],[7.441485],[-5.696772],[-9.390112],[2.577718],[-0.800223],[6.713168],[-4.653331],[3.819081],[5.662936],[-6.240642],[4.645014],[-7.018119],[2.459070],[-0.504558],[7.413229],[-9.358320],[-5.352699],[-1.706113],[-3.096211],[-7.109129],[3.224228],[2.898992],[8.279249],[-1.012270],[-3.210200],[5.478302],[-4.779210],[0.616435],[9.783865],[6.036709],[-4.242313],[4.500179],[-5.737812],[-9.732715],[6.228737],[2.046544],[-6.486183],[-4.684504],[-3.731585],[1.029217],[-8.268097],[-0.077955],[-3.372902],[-7.376007],[6.369428],[-7.643644],[2.840345],[8.259360],[-6.179211],[-5.809993],[-8.309011],[-1.757291],[5.243903],[5.975456],[-3.738285],[-0.708668],[1.056033],[9.575337],[-9.303276],[8.166416],[1.686708],[-0.324992],[-6.628694],[-2.014417],[7.342483],[-6.127532],[9.375297],[-3.661448],[-9.978464],[-6.843434],[-8.610042],[7.279342],[9.095691],[7.011583],[-0.478237],[9.659177],[7.161242],[-3.161619],[4.523084],[-1.800855],[-9.857728],[6.722261],[7.126652],[-0.577103],[6.277012],[-9.764702],[6.508097],[7.653827],[0.121685],[-3.230171],[9.690804],[9.355727],[8.404843],[-2.621686],[0.217343],[0.299612],[-3.908614],[6.997861],[5.501940],[3.098649],[-3.775538],[-9.701118],[9.483185],[-0.558895],[1.859927],[-6.221657],[-9.695827],[7.236381],[4.608591],[1.141121],[-7.428085],[-5.671643],[2.996592],[-4.792629],[6.091283],[9.957856],[-5.644858],[4.451822],[8.091736],[-2.759559],[0.204346],[5.218914],[-5.624996],[5.461857],[5.670375],[-1.484054],[-2.521363],[-3.616942],[-1.388143],[-9.999157],[-7.538658],[4.135235],[2.828117],[-8.269380],[-3.748477],[1.522453],[0.124003],[-8.550357],[9.080820],[5.012889],[-5.897641],[-2.564867],[0.471586],[-0.034935],[-2.455867],[4.834413],[-6.703941],[4.457532],[-5.366969],[-0.225506],[-0.873597],[-8.980939],[-6.152674],[6.246964],[-5.523345],[-3.422561],[5.198895],[5.944921],[8.382662],[-3.950359],[-3.299581],[-2.066026],[2.625865],[0.730650],[1.641237],[-0.940562],[8.548285],[0.961251],[2.163673],[-3.401551],[-8.925381],[-1.890658],[1.201609],[-4.756111],[0.505344],[-4.529792],[-1.311540],[-2.681328],[-5.284374],[0.193052],[3.696235],[0.202501],[-3.542236],[7.538049],[-7.918411],[-1.544893],[-4.704424],[-8.192597],[-7.923647],[0.048990],[6.475189],[-5.562355],[-1.789618],[4.315526],[-4.266087],[7.494083],[7.228350],[-5.946829],[4.219199],[0.774781],[7.456125],[-1.636193],[9.206668],[-6.816636],[2.484920],[6.579106],[0.950837],[5.638056],[3.294523],[4.383744],[8.512583],[2.688753],[4.983568],[6.715121],[6.527958],[-4.175083],[-2.647399],[5.404142],[6.278547],[5.827250],[7.398246],[-9.570219],[-5.515990],[-9.340768],[-7.394388],[3.044004],[-7.885090],[-0.758837],[8.330248],[9.699938],[3.850119],[7.311300],[-8.663830],[9.260674],[-7.549385],[9.065364],[5.973782],[7.679413],[1.860971],[9.221299],[9.798226],[6.327395],[-4.333604],[6.590656],[3.176747],[-4.338633],[0.441160],[-6.817282],[-2.640542],[4.047843],[6.759851],[-3.265799],[-3.277638],[-0.266611],[-7.029532],[-0.778999],[4.462362],[6.202818],[4.653287],[4.819512],[9.321990],[9.012380],[3.266919],[0.272453],[0.204555],[9.006770],[7.109489],[-1.123240],[5.822849],[4.023363],[-9.325891],[8.984549],[7.194395],[9.843693],[2.906584],[-7.894281],[8.742481],[9.247473],[6.268912],[-1.568739],[-7.432347],[8.001928],[-8.690708],[0.721446],[3.119339],[7.548797],[-0.292636],[3.526063],[5.926602],[5.177689],[2.894608],[-4.045862],[8.047746],[5.036188],[-2.174401],[-6.383478],[6.725000],[-5.326570],[1.190223],[6.468697],[-1.115607],[-2.554984],[4.304540],[-4.905176],[7.771120],[-8.086720],[5.645867],[4.954242],[-5.411092],[-8.438740],[-5.113109],[0.657079],[-0.121453],[1.395988],[-9.323864],[-8.858277],[5.386023],[9.999370],[-9.136674],[-3.759596],[4.096689],[-2.935490],[2.562629],[-4.014091],[8.474412],[-3.858732],[8.610351],[9.840782],[5.113973],[6.925315],[-1.596383],[-3.578478],[-3.469741],[-6.320176],[1.598163],[-8.848011],[3.659605],[-5.770893],[-1.587046],[4.055354],[6.003879],[-4.737255],[2.381520],[-1.066418],[-3.737882],[-2.129991],[-2.704368],[2.336019],[7.154471],[5.637761],[-5.269988],[1.189504],[1.741191],[-4.507361],[-2.301843],[5.238820],[3.564901],[-3.495406],[1.769098],[9.279982],[-9.100002],[-4.094318],[-9.531804],[-2.968057],[-7.672599],[-2.431076],[6.505061],[-7.232730],[9.254027],[4.003755],[-2.650533],[8.396769],[-2.834883],[8.641659],[3.176821],[4.783825],[-6.766623],[-1.370060],[5.909367],[-2.704230],[-3.851302],[-5.923543],[5.289516],[-2.039122],[3.397739],[-0.937216],[-2.957050],[6.274570],[-5.116236],[8.215730],[4.962063],[4.910707],[-7.802477],[-7.645750],[-9.305067],[1.220221],[-4.650997],[1.755475],[1.141733],[-1.403765],[6.452394],[-3.935300],[6.327355],[-4.159584],[-8.566869],[4.438902],[-0.851283],[-6.849615],[-8.371269],[3.132344],[3.127556],[8.643930],[-3.482939],[0.487773],[6.175727],[1.681089],[9.293260],[-1.242863],[7.879092],[-4.383243],[-8.734772],[-4.231220],[-5.491415],[-3.593562],[1.104299],[-1.546703],[-8.456814],[-4.942489],[-2.871682],[-8.221473],[-6.395646],[-3.721251],[-0.585957],[-6.591993],[7.236513],[1.937592],[-2.828989],[-2.712677],[-7.556255],[4.923106],[-4.565434],[7.898568],[5.214157],[-2.989718],[6.253200],[3.595200],[-3.798260],[0.882249],[4.249276],[-5.023467],[-4.262851],[-2.765207],[0.066862],[-2.176674],[7.151076],[-3.500724],[3.956126],[3.700313],[9.797982],[-3.662228],[-4.467151],[-5.595795],[1.772312],[2.263172],[7.707012],[2.216706],[-0.481787],[-4.023405],[-6.012923],[6.475793],[-0.954125],[-1.828761]], dtype = "float32")#candidate|8221|(832, 1)|const|float32
const_8222 = relay.const([8.830657,-9.072794,5.044102,-2.456973,-9.110023,8.333182,9.306978,-3.015311,0.781976,-2.260852,3.763381,9.389571,0.686238,9.677158,4.973876,0.570758,-3.682834,0.350425,9.598520,-3.384682,5.364412,2.576318,-3.015864,-1.548212,6.153246,6.696869,6.676356,-4.370975,-3.721156,5.417557,-3.865912,-5.078889,-7.963369,8.828995,9.873847,-4.123563,6.023620,-0.618198,9.460803,1.341259,5.796656,8.022169,-0.290465,5.927809,4.824640,-4.164934,5.661867,-9.520064,-3.754746,6.587167,3.950710,6.011748,-0.503916,-5.190214,-0.725270,-2.461614,-7.719149,-2.779187,5.777216,-9.414858,6.100176,5.484271,2.265931,-8.433992,5.319914,-3.804171,7.525443,4.850362,1.492016,7.221671,-8.146770,5.928767,5.317019,8.817403,2.845589,2.808397,-2.476761,0.666697,-7.161346,-6.620737,-2.845663,-8.263356,-1.134459,6.899228,6.609575,9.297637,-0.178966,4.175266,6.219471,-7.347082,-2.520561,4.271120,-3.054030,-5.581052,-3.862002,-9.017403,0.392336,2.513884,6.650824,5.759708,2.899110,-5.463970,1.316680,-8.676599,-0.854804,0.883524,-5.736711,6.488005,-8.705344,-2.389271,-9.009342,2.528239,8.799522,3.754756,7.289009,-2.735616,-2.590045,-8.560076,-4.569492,-2.044809,8.367850,2.081833,-2.566266,4.316162,-4.073611,0.601493,-5.256416,1.678265,7.149043,-0.923839,6.045487,-5.831692,5.117317,-6.728646,7.738997,-7.718913,-6.444014,-8.247616,9.380821,4.837417,3.252333,-7.129686,0.364180,-2.691621,5.913742,5.894745,0.042186,-9.214156,-1.750253,-9.739251,0.333112,2.806670,-4.857021,-4.138241,0.949464,0.722211,-5.560065,-3.918036,9.327872,1.072000,-5.372257,-8.874590,-8.905113,-2.017642,3.094549,-4.330895,-2.321280,-4.838808,2.891697,-3.788506,9.821286,-5.441255,9.726869,1.521151,8.029519,3.846706,-9.919889,2.502475,-1.822522,6.461167,-1.752342,-3.654069,6.906424,9.973719,9.719626,9.237507,2.702045,7.498125,2.528626,-0.261972,6.732871,-8.356887,1.475734,-6.574756,7.624601,5.920419,4.924333,-5.237450,-1.490682,0.683874,1.742105,-3.926906,-7.161201,-4.958838,0.305196,-7.903695,-4.273841,-7.022139,-1.212181,-7.312010,-3.321872,4.878662,2.561974,7.977737,4.187446,-4.157066,7.319579,-6.022561,-7.053638,5.261315,1.314338,-2.183684,-2.244731,7.019723,1.638244,4.516105,2.811737,8.476244,-1.832861,-8.128383,6.872065,9.764370,-9.957243,2.121399,-1.675477,-6.977584,-6.501818,3.719905,3.993010,-3.671786,-1.537636,-3.748960,-2.039547,5.981425,-4.292347,7.721753,-3.293957,7.700697,-8.437509,6.152433,0.203708,-9.936028,-5.345057,4.389468,-9.775167,-2.032374,4.927146,-4.891365,-1.469621,-6.543744,2.025299,-3.814647,-7.994437,-2.040386,-8.020668,6.890284,7.365690,-1.889900,-1.829142,0.944580,2.361097,9.331586,9.666165,-6.494278,9.904240,-4.076142,-2.181830,-7.237111,-4.240279,1.229573,-5.301027,3.826462,-5.970495,2.598176,1.736874,6.444051,-0.583929,6.865036,-2.747392,2.886793,-6.506523,0.171707,7.240817,-8.748659,-4.643280,-5.335187,-7.297553,2.490757,0.200066,6.121683,4.250993,5.780874,-6.509792,3.493813,8.157011,-2.908507,8.058872,-4.311458,-9.925130,-3.412994,8.895661,7.593456,-0.474445,-2.539544,-1.520451,-8.366131,9.942835,3.011712,-3.081869,-8.834695,-0.190462,-6.214232,-1.248659,-9.873091,6.127992,-7.301962,9.995911,-4.996582,-5.032997,-2.599314,3.517305,-8.021116,-3.766992,-3.365330,2.667497,-2.291531,7.449123,3.544587,-9.705337,-9.038495,-4.332176,-7.405055,5.700780,-1.551211,5.683937,-6.106308,8.708111,4.846883,-7.946399,2.142781,1.744701,8.416182,-4.627052,-0.351828,-8.103833,-5.837712,7.060108,6.321520,0.658528,-6.204352,-5.248624,5.946634,-2.817411,0.824254,-9.429569,-4.150808,2.792332,2.505637,-6.459820,-9.932944,-8.946788,3.604448,3.158572,-5.576087,-1.358102,7.213407,5.981201,2.799521,-8.040327,2.213187,6.438197,-1.041183,2.641090,-7.611776,4.280488,0.395129,9.541535,-8.076123,8.764184,0.188462,4.775069,-5.937015,-9.147823,-7.803882,-0.432542,2.430202,2.721135,-5.788595,5.605562,-2.468371,1.618988,0.287139,7.016953,1.328596,-6.870166,-7.460075,-0.405943,2.759435,-3.475537,1.877361,2.298268,-0.727940,-9.720525,9.601464,9.004041,-6.842748,3.357006,5.567140,7.724584,4.563462,-7.515666,-3.530808,-2.452319,2.061751,2.683789,-4.832236,2.606625,-5.743017,1.348344,-1.424544,4.445673,-7.765862,-0.971641,6.510015,-8.483100,9.982805,7.215121,0.785273,9.876350,-9.425179,6.498976,9.623737,-1.521378,-9.778681,-7.675058,-9.050116,-5.337198,-6.322558,1.678937,-4.877231,0.490242,-5.357200,4.936076,-5.966508,-6.209719,-1.688081,5.369028,-0.290077,9.680053,-8.391616,7.609200,0.455328,1.811064,-7.470948,-7.867929,-8.876351,2.196010,-0.765432,8.754840,5.138528,1.805052,9.798358,-6.272722,-9.835632,7.562530,3.321453,-6.909198,-2.798517,-8.881494,-0.501646,4.083976,-9.069983,0.391711,-8.762652,-6.002588,-7.042178,2.879741,-4.764030,2.819446,5.176489,1.258391,-4.039687,7.271997,7.783224,6.656435,-5.154320,5.040840,6.892027,9.575037,4.047407,-0.786184,-9.813313,1.320759,1.939840,8.182376,9.648211,4.006979,-0.878873,-3.829709,-6.997953,7.145250,9.474494,-5.496960,7.751178,-4.464215,1.336532,-7.341658,-9.632160,-1.082922,9.898961,-1.714329,3.139769,-2.037993,-8.730489,8.243385,-1.211260,-0.353955,5.305357,2.541993,-8.110019,7.564156,-7.554176,7.063072,-3.423049,-6.153174,-9.936755,-4.760527,-4.849721,8.243154,-4.551623,3.155375,-1.411354,-8.970842,-7.406817,-9.104485,8.163599,-7.464349,-4.080827,-0.988893,-3.899428,-2.449884,9.497241,-9.111161,4.928958,-9.694976,-2.598742,-0.957477,1.008549,1.060241,-9.721090,1.846279,8.668922,1.598566,2.325958,-8.500975,-2.411185,-1.241857,-9.579934,7.586154,3.612591,2.827439,-3.340459,-4.885498,-7.004555,9.204115,2.326833,-5.002465,5.680980,-0.616726,1.896391,-9.840238,5.957737,7.703226,5.517479,0.478387,-8.310916,-3.020634,6.145123,3.239736,-3.888153,-9.852282,0.214563,1.536898,4.871270,3.949562,-2.467229,-2.139507,7.781759,2.799494,6.834228,4.051846,9.510113,-9.738435,-0.496294,-7.393943,-2.272572,-3.760930,7.853263,-9.162982,-8.544884,7.410604,4.940128,-8.347060,7.893909,9.830369,9.763331,7.526330,4.061777,1.487175,0.268509,-2.216686,-3.688257,2.879648,-6.973829,-8.061765,4.934442,-4.682633,-7.557799,4.059972,-3.887261,-0.366010,1.701839,2.527499,5.482583,-4.912806,-5.149871,-0.220104,-7.992438,5.255113,-0.839092,2.989035,8.269628,-2.915948,-8.114253,-7.753676,2.361401,-0.665615,-3.795430,7.711904,-2.190694,-9.506432,-5.024177,-2.102096,-7.526909,-9.406648,3.756482,-3.934413,5.661367,-7.398155,8.867927,-6.831919,8.265331,4.155620,-2.054654,4.787500,3.516736,-6.246020,5.435667,-4.715531,-2.454191,-3.511232,-2.014101,-3.664257,4.472251,6.690582,6.412590,0.760805,2.516310,-6.370963,6.782114,-9.736725,9.788033,6.986446,4.362802,-2.928150,-3.192610,-3.147046,-6.954651,-2.828494,9.330702,-6.382165,5.587498,-4.144660,-2.831987,2.572752,-6.622531,-1.115796,-5.805243,-8.163892,0.147077,0.992066,9.752599,-5.984543,-2.968183,-8.338806,1.203637,9.480994,-0.997741,1.875056,-3.643572,6.081478,-0.340569,0.243837,8.276979,1.218209,-1.596702,-8.739652,-6.282819,8.592131,4.529021,-2.439828,-2.248928,3.349960,2.063286,-3.788966,7.268138,3.825471,4.560911,-9.561940,-9.458233,-4.226676,-8.057860,5.815608,7.985711,-5.401083,-8.512630,1.157579,-6.946029,1.835177,3.189342,8.582405,5.625299,3.275546,8.067991,4.707462,5.779097,4.621038,-1.331533,-0.495867,5.544146,-2.652866,3.180755,2.582711,6.492109,-6.635686,-6.590608,3.941163,-7.810523,-5.148799,9.267354,4.002526,5.913125,-5.770123,7.633893,-8.718663,5.800667,-4.568798,-7.215183,-2.877607,1.396695,5.725331,4.226136,9.302978,1.754782,2.614393,-6.129422,9.376748,1.036541,0.007572,-3.105912,-3.561403,9.626464,-2.058757,-1.267050,4.973711,1.572545,6.851901,3.174133,-1.126712,-8.328840,8.057091,6.231080,2.662445,3.428130,4.070753,-4.965411,6.138867,4.911194,8.286936,9.582355,3.714119,5.418096,4.110237,1.836504,4.704147,3.169300,-6.898847,0.341874,-8.733079,0.480698,-8.881382,0.335122,3.944053,-4.738648,-9.726614,3.909485,-4.904739,-8.040983,6.539992,-7.522135,5.202781,-3.195680,-5.769116,4.640792,-4.113068,-8.992627,-5.825170,-8.137016,-2.114228,4.851889,-3.486190,-5.003981,4.828514,-6.530843,8.082960,-7.281718,1.257079,-6.998883,-3.202971,-7.563908,-3.030712,-0.349984,-4.349799,-9.440566,5.990521,9.742863,-6.443685,-2.265147,-4.571260,8.907201,7.724442,-7.489044,-9.963959,-8.874311,3.632710,9.790194,-0.494522,-2.695659,-3.984857,8.912064,-0.197242,-7.846270,5.576172,5.821568,5.208672,5.833499,-3.768110,7.093188,-1.667375,3.732003,-7.854249,-0.478868,-2.409184,2.103936,4.602302,-2.714135,1.465095,3.074186,-4.020205,-6.974385,8.372330,-9.552475,-1.285618,-6.691686,-8.682134,-0.360907,-0.215241,7.721207,5.099727,6.868245,0.712979,2.157718,-0.366548,5.265490,9.704634,3.176419,2.009556,-9.987959,6.568434,6.174040,-7.455045,1.255075,-2.905152,-3.082307,4.174715,-9.782233,1.523919,-3.299199,-4.216523,-0.094816,8.463698,-8.599962,-7.827068,-2.095493,5.665722,7.170221,8.609566,-0.593869,9.744630,-9.891030,0.554291,8.643702,-5.237795,-2.788181,-6.693749,-6.293018,-7.568432,-7.957013,6.701261,3.520296,-2.878142,-5.205380,0.841082,9.793311,9.184357,4.101505,9.537436,-5.537187,-4.805717,-7.122103,3.044169,2.627829,-8.859760,-7.839928,-0.416521,-1.971237,-2.409968,4.281785,-2.843784,-4.922409,-6.411184,-3.042426,7.583635,5.783299,8.839556,-6.142418,-3.016039,8.603887,5.707931,-7.181637,5.434367,9.508249,0.696230,0.099953,5.080087,-5.877944,7.388192,0.835390,0.597499,4.528255,0.463317,1.661405,3.913381,-2.230759,8.340327,-7.805005,8.411991,-7.161492,-0.767095,-8.679074,-6.019505,2.281174,2.733133,-2.872595,4.470435,-0.658419,3.502739,-3.472362,-6.357449,8.962652,3.293805,-1.993169,9.167423,-1.676966,-2.872737,-8.176080,6.639880,-8.269518,-6.449986,9.285682,-6.180987,-3.646447,7.813646,-9.344349,7.233937,3.034292,-0.252831,-6.354541,6.165274,2.876333,6.606934,-1.226366,-4.959187,-9.467538,3.712242,-1.547999,3.904914,7.366255,-6.646630,-4.480028,7.245316,-3.644731,0.230268,-6.426154,9.886338,-5.214960,1.405959,7.912047,9.491387,-3.783777,3.679789,9.860312,-1.821007,-1.216496,-4.789230,-7.498608,-6.093858,2.164029,7.213392,-3.263291,-8.167780,-0.454120,2.885977,8.186489,1.236795,2.075634,-8.632697,8.209502,5.324108,7.089917,-3.891088,-7.609966,2.486784,-0.282484,0.634180,5.671190,4.597150,6.803358,-6.318896,0.252645,-2.428447,-8.319737,7.004604,4.397318,6.630860,5.948076,3.682739,7.562612,6.145802,9.896130,-5.695746,-5.055719,-8.867970,2.044334,-7.064089,-8.106888,0.538321,-8.032752,-4.972394,-0.680291,-6.896138,7.982757,8.425380,-7.079173,-1.301209,0.843869,0.344040,-0.026753,7.146970,-7.961963,5.541660,-2.866590,6.674690,4.872643,4.803752,-7.587115,9.486371,6.824983,-5.184664,-2.385969,8.346628,4.898008,6.880652,1.160381,0.494618,1.641809,-5.347325,-4.426860,-6.975759,-9.854229,2.821057,5.444509,-4.500881,8.123006,5.949474,-1.464544,5.335019,7.090208,2.001913,2.193552,-6.241225,1.403231,-8.667734,-5.771282,-7.868972,-3.438114,0.636887,-5.241696,-6.147777,-0.726905,1.022359,1.198657,0.863015,-3.878284,0.338625,1.237088,-7.982164,-5.093272,-6.619710,3.669443,2.972715,-4.233395,8.233148,8.222012,-3.658472,2.478782,-8.988028,-5.683452,9.904009,-1.896528,-8.763963,-0.685300,3.925752,-2.608784,-6.917914,-2.045412,4.511446,-2.677021,2.524226,2.334778,-1.240829,-1.280182,4.119446,-1.181414,8.927931,6.984745,-8.234908,-4.066892,-8.808377,-7.514798,-0.381186,2.681754,3.262116,-1.218754,7.400227,8.167243,6.529069,-7.025140,-7.995201,8.682049,3.647890,-8.304263,6.443762,9.015160,8.442694,-8.408585,-0.118786,5.894526,1.524645,6.090791,8.352595,-9.175169,-9.420257,6.804985,6.139641,-2.167523,4.672746,3.336735,1.716279,6.963452,-8.815385,-3.735109,6.495687,-3.763291,4.630535,3.180573,-0.602709,5.336127,-2.657733,-8.281741,-2.093025,-6.047819,1.914824,-4.456774,6.653483,1.085494,6.105325,-6.526656,1.998811,6.884742,-7.813460,-1.916847,2.671727,8.396229,-8.955154,4.424890,-3.974864,2.822316,5.451999,-4.714988,5.860806,-6.486484,4.689986,6.244724,-8.162547,-1.873742,1.432442,7.108977,-9.737530,-8.284046,-1.210527,6.308520,6.703933,-2.008336,-6.102765,1.315007,-7.844424,-9.663729,4.599991,3.241136,3.886568,-8.508835,-0.671768,7.904913,1.181562,8.349035,4.413743,-7.146639,9.620802,-0.940772,-5.592910,1.906723,3.672829,-8.718305,3.217334,-4.327770,1.048373,1.939813,1.534595,7.810145,-1.688378,-1.635025,1.254905,6.987210,-0.278401,9.911987,8.542124,7.501698,-2.850771,9.156727,9.326713,-0.954013,8.151928,-2.733004,-1.723274,6.917484,4.003038,9.032959,-1.795688,9.292803,-2.378734,2.963098,-3.881231,-9.113708,6.563197,-7.427548,-2.543344,2.580956,1.588127,-6.141061,9.086071,-8.443009,3.791234,-0.716751,-8.478880,-8.993279,-2.762660,6.295787,4.485375,1.317790,3.454639,6.153660,9.750560,1.740290,6.933656,-4.087417,8.008748,9.958220,-6.596420,4.487885,8.241767,8.803826,8.305657,-9.916805,5.674728,6.199922,-7.218474,-9.821760,-2.402693,-1.369743,1.694204,-8.077897,0.162881,4.613392,4.319950,1.063010,1.245123,-1.972009,4.011690,1.597889,1.157829,8.553523,6.393347,2.039325,-0.638561,0.262624,-5.659525,-0.045151,3.387513,-3.007005,-4.450687,-9.488775,-3.675054,2.720085,6.170319,-2.296443,5.105506,-2.922673,7.601102,-4.754840,7.784387,3.738685,-8.637490,-3.929352,-4.503958,-2.297081,-6.761950,-1.190407,-6.288580,-0.136323,-6.448815,-4.775091,-7.527306,-1.002481,-2.104994,9.015125,3.105263,3.081200,3.831455,6.192151,-9.218282,-6.716433,-5.597465,-7.679140,-1.838385,9.138778,8.149136,4.398059,-4.449371,-7.125050,-4.520620,3.071511,-7.273888,9.013741,-3.324995,8.066581,2.673732,7.178368,-3.282034,-3.797191,-2.004070,4.546352,2.116457,5.250851,1.066597,-3.595646,-7.077643,9.207047,-8.052564,-1.309072,5.522444,-5.774283,2.227983,3.737002,9.112733,7.073912,0.658536,4.628712,6.852505,-3.449730,-2.019763,-0.834992,-7.138773,-7.081842,1.654941,5.687314,-4.568541,4.882157,2.361054,-3.650697,-8.287610,-5.011155,-4.298842,-9.837925,3.560693,-3.032518,9.553805,-5.805849,-7.382853,-1.926430,8.241148,7.826182,2.335911,1.514892,5.255496,1.779036,9.978337,3.318110,-3.891239,1.951506,-1.729976,9.613925,2.775527,-2.886582,-4.133748,2.121771,-3.555555,-0.925213,0.511219,8.018663,8.502535,-3.885042,-7.501256,-1.783650,1.008947,-4.062599,-7.142325,9.034228,2.467888,1.923249,-8.429958,7.981554,5.797889,5.713761,-0.563032,2.006665,8.261744,-9.405283,2.808318,-3.835678,8.106846,8.715397,4.672793,6.172930,-6.738194,-4.797836,7.706946,1.025760,9.396935,3.316049,5.247034,2.000609,-2.400050,9.139605,8.571039,-0.028452,-4.582492,-9.978935,-7.849000,4.737979,-5.840187,7.899904,1.509397,3.910424,9.495119,-0.840375,1.353413,-5.895741,-4.136661,-1.976489,0.693897,-3.568706,-8.312371,5.535184,-5.282968,2.531357,1.483249,-3.439740,1.566995,9.109317,-7.693033,-9.372045,-5.066275,0.671921,-9.780989,-1.412017,-7.394810,4.954030,2.122882,2.604380,0.285219,-5.034269,7.433992,-3.734363,-2.962366,-6.174495,2.718190,5.116631,3.279962,-2.602672,-4.785101,1.653409,4.600021,0.738335,-4.911689,-9.561821,8.692225,-1.813426,4.274994,5.537260,-5.471528,-5.869927,-3.995213,0.866553,-5.930375,8.239530,-3.188695,1.363605,-8.722417,-5.107274,7.266919,-7.021988,-5.239278,-8.381917,6.535815,7.443242,2.637325,-2.717410,7.243689,7.138667,3.462908,-6.513522,5.275009,-1.558518,-0.416303,-0.984568,6.533305,-2.829121,5.888983,-9.422134,3.664571,4.568787,5.638876,-6.268125,5.811680,3.178436,2.276385,5.424702,6.764762,-0.606577,-4.767676,-9.877814,0.813487,4.202688,5.409571,-4.995627,-5.749777,6.979595,1.729192,-4.834600,2.684771,8.091943,-7.277668,9.045099,-9.451477,6.817460,8.953808,1.166428,2.771118,1.936343,-7.857720,8.880250,1.650534,-3.688487,-4.203414,-5.590466,-7.375313,-7.032563,-3.335682,8.655242,1.341344,8.751853,-3.877106,-6.308582,-0.419686,-6.384615,9.390420,5.895929,-0.909601,7.438667,-5.480032,-6.908146,3.149268,9.006855,-0.255948,5.278008,-7.700614,-2.053356,6.763196,-6.087205,2.870041,-7.897965,-3.316198,4.132513,7.068599,7.382458,-0.556084,7.180107,8.225167,5.763336,1.510775,6.730184,-0.868516,-4.835672,-6.774355,9.771815,1.676449,-7.574072,4.732190,-1.283832,-5.964783,-4.561181,8.379109,0.251817,7.564800,-7.970684,6.644091,-4.641189,-1.253763,2.014896,0.193677,-7.942321,-6.337706,-8.846188,-6.595615,-5.934008,-5.459526,-9.578772,-4.779490,-0.567186,-4.862453,-0.314968,3.005579,3.886652,8.402002,-0.801607,1.332776,8.817816,-9.014766,8.647348,-0.335957,6.799951,8.638361,-0.473895,1.918824,3.579688,-5.309590,1.818906,-0.519303,5.336594,3.493593,-0.807964,-4.400244,-8.308288,2.591766,1.538634,-4.390929,-9.023190,-5.494576,5.664228,-9.524200,-2.391900,0.336635,-1.863203,-0.797788,7.021289,1.866104,3.961417,-8.904957,-8.686448,4.174445,7.015706,3.627040,1.721384,5.324441,6.085452,6.319931,-1.632566,-7.557712,-3.538181,-1.350711,-5.000278,9.011409,8.883656,-3.156197,4.473627,0.922277,3.374546,4.750641,1.357946,8.647136,-8.246041,-7.287256,6.473822,3.871967,7.466422,-3.126322,5.145036,0.905001,3.420213,0.464092,-1.095928,9.888885,5.786350,-9.688886,8.126642,1.605025,5.210246,-3.723209,-7.660505,-9.590441,9.634939,-0.286819,1.940066,2.777693,2.639936,7.132015,-1.522007,1.719730,3.153790,-6.191283,4.710670,-4.742127,8.420225,-8.409001,-2.248783,6.956653,4.423365,4.651356,-2.265104,9.275701,1.678169,6.051601,0.885367,3.722263,-8.571364,-3.931658,8.722934,-5.868786,8.976827,1.144574,-6.003292,-4.897599,-2.254285,-2.411056,-2.951792,-0.091353,-6.939766,1.758525,-9.896165,6.951086,-9.525678,-1.283354,-5.565203,-5.231454,1.198206,-6.645756,3.798544,2.615410,-8.538763,-0.919347,6.599177,-8.994251,-8.040467,-1.201475,-5.565536,3.653916,7.455909,-2.828843,6.423619,9.096561,-9.598792,-5.827649,-4.128369,2.364167,2.851374,-2.647749,-8.261475,-4.290191,-9.840719,8.571540,-8.598821,-1.981315,5.889598,-0.964768,0.235482,1.377486,5.594779,8.992513,-8.142770,-1.850364,-7.153558,-8.627446,7.027362,5.339177,2.475975,-1.609661,-3.395160,7.962605,1.194750,-4.566909,-3.848527,3.884012,8.658608,8.266074,8.601500,4.314954,-7.288537,2.850795,-6.239554,-7.906466,8.258443,-2.979250,4.153733,5.424685,3.854103,8.587552,-4.409321,5.024146,-5.265476,1.020109,-2.509686,1.792897,-2.050537,-1.640774,-2.142462,6.035072,2.471642,3.022847,2.080319,8.687949,-9.227546,-4.374148,4.160984,-2.810936,7.071581,-5.923525,-6.828022,-6.693720,-1.752801,7.165624,7.529205,-2.878062,-5.485053,4.771442,4.219590,-7.888790,-3.947050,-6.319467,-6.681910,4.429738,-2.336430,3.422569,2.754948,0.716564,-2.520908,-6.761467,6.759759,-5.828095,-8.384143,-9.864120,3.155902,2.773523,4.275513,0.281042,-3.988747,0.575102,-3.892557,6.608595,4.064194,0.088395,-1.338636,0.909492,5.514071,0.383492,-0.724464,0.196949,9.328972,8.834801,-6.833462,-6.166030,6.917003,9.519507,3.850219,5.424536,3.572513,-6.952540,0.049658,-8.452656,-4.149503,-5.602895,0.307672,-6.861305,8.565968,2.972017,-5.711643,-8.269836,-6.521341,-5.197538,0.721306,-8.257635,-2.889204,-5.431180,-7.482879,-6.388346,-4.260591,6.747156,-3.684909,-2.926985,7.339629,8.360493,-5.193958,0.781028,7.171814,-7.692372,-5.299956,-1.973149,5.344003,-4.155531,7.214204,-0.738295,9.608914,9.691610,7.785867,8.462624,3.549401,0.783907,3.889251,-6.774694,-2.009716,9.610158,1.195764,8.008239,-1.193691,8.794362,2.250772,0.385577,0.232457,-0.348486,5.132661,-5.816970,0.971030,-5.911254,-2.020367,8.841964,4.876901,9.381657,-0.266870,6.715997,-1.968870,-1.171678,6.829496,3.056940,-6.224138,1.365760,7.119699,9.497673,0.229319,5.293212,-3.229931,-4.845609,4.616817,0.765890,2.613670,-5.496434,2.094368,3.543486,7.946521,3.134408,-5.342637,2.201608,-5.798504,-1.670520,-9.458264,-7.277658,9.453338,-9.813836,-4.561167,-7.197548,-8.908009,-4.097804,-4.448974,-1.314615,-6.926538,2.468326,8.084262,-2.654858,0.996678,6.557532,9.889858,4.905420,1.415860,4.862619,1.942806,3.856735,7.207045,2.713605,8.321708,0.933660,6.136432,-8.173800,3.221130,5.624538,-7.023191,-5.681631,-5.137609,-9.317628,2.954628,6.153757,8.436523,-2.173943,-9.238519,-9.593889,-0.264525,5.255654,2.495899,-2.181362,6.614688,1.028351,-9.348038,7.962854,5.770493,-1.167234,5.654911,2.614677,-4.609090,4.133160,8.418048,-1.839819,3.664646,-0.435211,-8.153187,3.558995,-4.457285,0.368301,-9.950314,4.269831,-7.958047,-7.710422,3.903437,-5.966880,-0.189836,7.302488,-6.370427,0.261190,8.867861,-8.104656,-2.590869,3.683060,-3.745631,2.763057,7.610051,5.171815,9.370445,-4.285713,2.276313,-4.752102,-4.804933,-6.079128,-1.833068,9.939218,6.784335,1.635100,1.548741,-6.561093,6.193774,1.794957,-5.263898,-1.736371,-9.301842,-7.606991,0.052758,1.406663,-1.867691,-2.578863,7.588444,3.178217,4.760544,-6.712486,2.285773,1.653421,7.885631,-1.815013,5.428199,2.634918,7.612049,9.050992,-0.198199,-4.714434,-1.318846,3.459522,-0.579610,-6.177494,9.691198,1.816027,1.183936,8.597052,0.561102,-0.421498,-1.021843,-8.006683,-2.159589,3.749205,5.052276,2.980816,-3.048318,2.595686,7.177246,5.509866,6.777919,-8.632325,5.756389,9.345781,9.666497,7.260948,6.534254,3.447989,4.927882,-4.743147,-2.204365,5.790615,9.627449,-9.921715,-0.733174,2.811094,-0.714633,1.422323,-0.138307,-8.834506,-3.187735,0.610519,2.118034,0.901375,1.984147,7.646570,-4.833111,0.557008,-4.671119,-0.469749,8.511505,-5.568099,8.413164,0.080532,-9.815466,8.050414,9.293612,-9.705281,7.543867,1.938463,0.148784,5.368267,3.144946,9.977148,-2.896828,0.353610,-3.610617,9.822957,1.256064,9.054739,-0.444432,-7.985705,8.133638,-7.884260,1.300815,-6.833627,9.454241,-8.891120,-2.275434,-6.489632,4.894292,-5.382943,7.486572,-7.706053,-0.207546,-8.939756,-5.492126,-5.899956,7.335743,6.411095,-7.918159,6.291839,6.700332,5.044052,-2.090679,-8.198433,1.653111,3.204802,-1.970248,5.909386,8.540362], dtype = "float32")#candidate|8222|(2240,)|const|float32
call_8220 = relay.TupleGetItem(func_2884_call(relay.reshape(const_8221.astype('float32'), [832,]), relay.reshape(const_8222.astype('float32'), [2240,]), ), 3)
call_8223 = relay.TupleGetItem(func_2887_call(relay.reshape(const_8221.astype('float32'), [832,]), relay.reshape(const_8222.astype('float32'), [2240,]), ), 3)
func_7280_call = mod.get_global_var('func_7280')
func_7282_call = mutated_mod.get_global_var('func_7282')
call_8224 = relay.TupleGetItem(func_7280_call(), 0)
call_8225 = relay.TupleGetItem(func_7282_call(), 0)
bop_8226 = relay.floor_divide(var_8210.astype('float32'), var_8211.astype('float32')) # shape=(5, 13, 7)
output = relay.Tuple([bop_8212,call_8220,const_8221,const_8222,call_8224,bop_8226,])
output2 = relay.Tuple([bop_8212,call_8223,const_8221,const_8222,call_8225,bop_8226,])
F = relay.Function([var_8210,var_8211,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8210,var_8211,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_213 = relay.const([[[-7,9,-10,4],[7,-3,3,9],[-1,1,7,-3],[6,10,9,9],[6,4,6,-6]],[[-3,9,2,-8],[-7,2,3,-6],[3,4,-7,8],[1,-1,-9,-2],[-7,-8,9,5]],[[5,1,-3,8],[1,5,-4,-5],[-6,2,5,-8],[4,-3,-2,-8],[-6,-6,8,-2]],[[-3,-8,4,2],[10,-7,-7,-7],[-1,-4,1,-9],[-5,-3,-6,-1],[-5,-7,-4,1]],[[4,-9,3,2],[10,-6,-9,5],[9,-6,-6,7],[8,2,-5,-6],[-1,8,2,-7]],[[-5,3,-7,8],[8,-2,-1,-6],[2,-8,9,6],[10,-5,5,7],[4,-5,-8,-6]],[[9,9,-6,8],[10,-5,-2,10],[-6,-6,-6,10],[-3,-2,10,-7],[7,-6,10,-1]],[[1,-1,8,5],[-8,-2,8,-6],[-8,3,-6,4],[4,-6,-5,-7],[4,7,1,5]],[[-7,-4,10,-5],[8,-6,-6,-8],[2,7,5,-2],[-1,-1,5,10],[5,-6,-3,5]],[[8,-6,4,9],[1,3,-9,3],[8,-2,1,4],[9,-3,10,4],[1,-4,-5,3]]], dtype = "uint16")#candidate|213|(10, 5, 4)|const|uint16
var_214 = relay.var("var_214", dtype = "uint16", shape = (10, 5, 4))#candidate|214|(10, 5, 4)|var|uint16
bop_215 = relay.logical_xor(const_213.astype('uint16'), relay.reshape(var_214.astype('uint16'), relay.shape_of(const_213))) # shape=(10, 5, 4)
uop_228 = relay.sinh(bop_215.astype('float64')) # shape=(10, 5, 4)
output = uop_228
output2 = uop_228
func_234 = relay.Function([var_214,], output)
mod['func_234'] = func_234
mod = relay.transform.InferType()(mod)
mutated_mod['func_234'] = func_234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_235 = relay.var("var_235", dtype = "uint16", shape = (10, 5, 4))#candidate|235|(10, 5, 4)|var|uint16
func_234_call = mutated_mod.get_global_var('func_234')
call_236 = func_234_call(var_235)
output = call_236
func_237 = relay.Function([var_235], output)
mutated_mod['func_237'] = func_237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_376 = relay.var("var_376", dtype = "float64", shape = (12, 6, 16))#candidate|376|(12, 6, 16)|var|float64
uop_377 = relay.cos(var_376.astype('float64')) # shape=(12, 6, 16)
uop_389 = relay.acosh(var_376.astype('float64')) # shape=(12, 6, 16)
output = relay.Tuple([uop_377,uop_389,])
output2 = relay.Tuple([uop_377,uop_389,])
func_394 = relay.Function([var_376,], output)
mod['func_394'] = func_394
mod = relay.transform.InferType()(mod)
var_395 = relay.var("var_395", dtype = "float64", shape = (12, 6, 16))#candidate|395|(12, 6, 16)|var|float64
output = func_394(var_395)
func_396 = relay.Function([var_395], output)
mutated_mod['func_396'] = func_396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_537 = relay.var("var_537", dtype = "float64", shape = (9, 5, 10))#candidate|537|(9, 5, 10)|var|float64
uop_538 = relay.log2(var_537.astype('float64')) # shape=(9, 5, 10)
output = uop_538
output2 = uop_538
func_550 = relay.Function([var_537,], output)
mod['func_550'] = func_550
mod = relay.transform.InferType()(mod)
mutated_mod['func_550'] = func_550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_551 = relay.var("var_551", dtype = "float64", shape = (9, 5, 10))#candidate|551|(9, 5, 10)|var|float64
func_550_call = mutated_mod.get_global_var('func_550')
call_552 = func_550_call(var_551)
output = call_552
func_553 = relay.Function([var_551], output)
mutated_mod['func_553'] = func_553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_669 = relay.var("var_669", dtype = "float32", shape = (15, 7, 5))#candidate|669|(15, 7, 5)|var|float32
uop_670 = relay.sinh(var_669.astype('float32')) # shape=(15, 7, 5)
bop_695 = relay.logical_and(uop_670.astype('bool'), relay.reshape(var_669.astype('bool'), relay.shape_of(uop_670))) # shape=(15, 7, 5)
output = bop_695
output2 = bop_695
func_698 = relay.Function([var_669,], output)
mod['func_698'] = func_698
mod = relay.transform.InferType()(mod)
mutated_mod['func_698'] = func_698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_699 = relay.var("var_699", dtype = "float32", shape = (15, 7, 5))#candidate|699|(15, 7, 5)|var|float32
func_698_call = mutated_mod.get_global_var('func_698')
call_700 = func_698_call(var_699)
output = call_700
func_701 = relay.Function([var_699], output)
mutated_mod['func_701'] = func_701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_897 = relay.var("var_897", dtype = "float64", shape = (9, 1, 3))#candidate|897|(9, 1, 3)|var|float64
uop_898 = relay.asin(var_897.astype('float64')) # shape=(9, 1, 3)
output = relay.Tuple([uop_898,])
output2 = relay.Tuple([uop_898,])
func_912 = relay.Function([var_897,], output)
mod['func_912'] = func_912
mod = relay.transform.InferType()(mod)
mutated_mod['func_912'] = func_912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_913 = relay.var("var_913", dtype = "float64", shape = (9, 1, 3))#candidate|913|(9, 1, 3)|var|float64
func_912_call = mutated_mod.get_global_var('func_912')
call_914 = func_912_call(var_913)
output = call_914
func_915 = relay.Function([var_913], output)
mutated_mod['func_915'] = func_915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1194 = relay.var("var_1194", dtype = "float64", shape = (16, 4, 14))#candidate|1194|(16, 4, 14)|var|float64
uop_1195 = relay.sinh(var_1194.astype('float64')) # shape=(16, 4, 14)
uop_1201 = relay.sin(uop_1195.astype('float64')) # shape=(16, 4, 14)
output = relay.Tuple([uop_1201,])
output2 = relay.Tuple([uop_1201,])
func_1204 = relay.Function([var_1194,], output)
mod['func_1204'] = func_1204
mod = relay.transform.InferType()(mod)
mutated_mod['func_1204'] = func_1204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1205 = relay.var("var_1205", dtype = "float64", shape = (16, 4, 14))#candidate|1205|(16, 4, 14)|var|float64
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1206 = func_1204_call(var_1205)
output = call_1206
func_1207 = relay.Function([var_1205], output)
mutated_mod['func_1207'] = func_1207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1263 = relay.var("var_1263", dtype = "float32", shape = (2, 8, 1))#candidate|1263|(2, 8, 1)|var|float32
uop_1264 = relay.asin(var_1263.astype('float32')) # shape=(2, 8, 1)
output = relay.Tuple([uop_1264,])
output2 = relay.Tuple([uop_1264,])
func_1270 = relay.Function([var_1263,], output)
mod['func_1270'] = func_1270
mod = relay.transform.InferType()(mod)
var_1271 = relay.var("var_1271", dtype = "float32", shape = (2, 8, 1))#candidate|1271|(2, 8, 1)|var|float32
output = func_1270(var_1271)
func_1272 = relay.Function([var_1271], output)
mutated_mod['func_1272'] = func_1272
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1405 = relay.const([[[-7,5,5,-2,2,-7,3,6,3,-10,6,3],[-4,-10,10,-6,-5,2,3,-2,-6,-5,5,6],[5,8,6,3,-6,4,5,3,-9,9,-1,-8],[-4,-9,-4,6,-9,-5,6,8,-2,-5,10,-6],[-5,4,8,6,-3,-8,7,10,-10,4,-4,-5],[-5,-1,2,-8,2,4,4,-1,-4,5,5,-1],[2,-9,8,-3,6,-1,-1,5,1,-5,-1,1],[5,1,5,5,7,-4,-9,9,-10,4,-9,7],[2,4,-8,1,5,5,3,-7,-7,-5,-7,4],[5,9,8,-6,7,4,-7,1,8,-1,-8,-1],[-9,-3,-3,4,-4,-3,-10,-3,-1,4,-5,-1],[1,-3,-2,7,-5,8,5,9,6,4,-3,2],[-5,1,1,2,-3,4,3,7,-10,-7,8,6],[8,-1,-6,-2,-9,-2,4,-4,-1,6,-8,4],[-9,-4,-7,-2,-8,-3,-6,-7,9,-7,3,3]],[[8,10,2,5,-4,-10,-9,5,9,-2,-4,-2],[-8,9,-10,7,-2,5,2,-7,1,9,-4,-7],[-4,-8,10,3,-8,-1,-5,-6,9,4,3,10],[-3,-6,-5,9,-6,8,-10,-5,-5,7,-7,8],[-6,7,-6,-7,-8,-5,8,2,5,-9,3,3],[10,-10,5,-3,2,4,9,-6,-4,1,5,5],[5,4,6,8,9,3,7,9,-5,7,6,-10],[2,-2,5,8,-1,-10,2,-3,5,7,1,9],[-8,-10,10,5,-1,9,-6,6,1,-4,-3,4],[-4,-1,-4,1,-7,-6,-10,8,-10,7,-6,-3],[10,-10,4,-2,2,3,4,-9,4,-9,-8,6],[-6,4,-6,8,4,-9,-9,-7,6,6,4,2],[-1,-2,8,7,-1,-5,-7,2,-9,8,-6,9],[-4,2,2,-8,5,-4,-10,-6,-1,9,-1,7],[-4,8,-9,1,-5,5,-7,2,5,-6,6,-7]],[[2,-3,8,5,-5,3,-1,9,-9,5,7,9],[-3,8,-6,4,-2,-3,7,4,10,-7,-4,-6],[1,1,9,4,5,-1,9,-1,4,-1,9,-4],[3,-9,-8,-9,10,-10,10,-3,6,-7,1,5],[-3,10,-2,-2,-6,1,10,4,8,9,6,2],[-5,-6,-1,4,5,-8,8,1,3,-5,-2,10],[-3,-7,-10,10,1,4,4,6,1,8,3,3],[-1,-8,-9,2,-9,10,9,-7,-5,2,8,-9],[-1,-10,6,10,-4,-10,-9,5,-3,-7,3,3],[-4,7,1,1,-5,-6,-6,10,-5,5,5,1],[-2,-10,-4,-5,8,-8,-10,-2,-4,7,5,2],[-10,-5,6,4,-6,-5,9,-7,-5,-7,6,1],[-10,-9,-8,6,-9,-4,6,-3,4,5,1,2],[8,1,3,-3,-2,7,-5,-7,-3,-9,1,-3],[1,10,-1,8,-6,-3,-10,-1,1,10,10,-10]],[[10,-3,-1,-8,6,4,4,5,10,-8,-4,-1],[-6,3,-10,-8,4,3,-10,10,3,-3,8,7],[-6,6,-6,7,10,10,4,-10,1,-4,6,-5],[9,-8,-6,5,-1,-5,10,1,-3,9,10,6],[5,-10,-5,2,5,-3,4,-4,-10,4,-3,1],[-7,-3,-2,-8,-10,-9,-3,1,2,10,1,-3],[-3,1,5,1,-2,8,-5,10,5,2,-10,-8],[6,-8,-10,-6,-9,10,-10,-5,5,-6,-10,-6],[8,4,9,-2,-8,2,3,-4,6,8,4,8],[-9,-8,5,-5,-1,10,-1,-7,-3,10,6,10],[-5,-7,4,-8,4,-3,1,-9,-6,-4,-1,7],[-9,-2,8,-8,2,4,3,-8,-10,-3,8,-3],[10,1,-8,7,-5,4,-3,-10,8,-9,-6,7],[8,6,3,-10,7,-8,2,-4,-4,-4,-9,-2],[-10,9,9,-1,9,3,-7,6,-6,10,-8,9]]], dtype = "int64")#candidate|1405|(4, 15, 12)|const|int64
var_1406 = relay.var("var_1406", dtype = "int64", shape = (4, 15, 12))#candidate|1406|(4, 15, 12)|var|int64
bop_1407 = relay.less_equal(const_1405.astype('bool'), relay.reshape(var_1406.astype('bool'), relay.shape_of(const_1405))) # shape=(4, 15, 12)
output = relay.Tuple([bop_1407,])
output2 = relay.Tuple([bop_1407,])
func_1412 = relay.Function([var_1406,], output)
mod['func_1412'] = func_1412
mod = relay.transform.InferType()(mod)
var_1413 = relay.var("var_1413", dtype = "int64", shape = (4, 15, 12))#candidate|1413|(4, 15, 12)|var|int64
output = func_1412(var_1413)
func_1414 = relay.Function([var_1413], output)
mutated_mod['func_1414'] = func_1414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1463 = relay.var("var_1463", dtype = "int16", shape = ())#candidate|1463|()|var|int16
const_1464 = relay.const([[[6,-1,6,9],[-1,-6,-2,5],[5,10,-7,7],[-7,2,3,-5],[2,6,-5,-8],[8,3,9,9],[-3,9,8,-5],[-2,-10,-3,-8],[8,-4,6,1],[6,-4,-9,8]],[[2,1,5,4],[5,4,8,4],[3,8,10,3],[-5,-4,10,8],[1,-1,-5,4],[8,1,-8,-9],[-3,-10,10,2],[10,10,7,-9],[5,-5,-4,2],[4,7,8,-5]],[[-5,-5,-8,-10],[2,8,6,-8],[-9,3,1,-5],[-9,-1,10,-10],[-2,-10,4,1],[-8,5,-8,6],[7,1,5,3],[10,-2,9,-3],[-9,-3,5,-6],[3,-8,6,6]]], dtype = "int16")#candidate|1464|(3, 10, 4)|const|int16
bop_1465 = relay.logical_xor(var_1463.astype('int16'), const_1464.astype('int16')) # shape=(3, 10, 4)
func_394_call = mod.get_global_var('func_394')
func_396_call = mutated_mod.get_global_var('func_396')
var_1472 = relay.var("var_1472", dtype = "float64", shape = (1152,))#candidate|1472|(1152,)|var|float64
call_1471 = relay.TupleGetItem(func_394_call(relay.reshape(var_1472.astype('float64'), [12, 6, 16])), 1)
call_1473 = relay.TupleGetItem(func_396_call(relay.reshape(var_1472.astype('float64'), [12, 6, 16])), 1)
func_394_call = mod.get_global_var('func_394')
func_396_call = mutated_mod.get_global_var('func_396')
call_1487 = relay.TupleGetItem(func_394_call(relay.reshape(call_1471.astype('float64'), [12, 6, 16])), 0)
call_1488 = relay.TupleGetItem(func_396_call(relay.reshape(call_1471.astype('float64'), [12, 6, 16])), 0)
func_1270_call = mod.get_global_var('func_1270')
func_1272_call = mutated_mod.get_global_var('func_1272')
var_1492 = relay.var("var_1492", dtype = "float32", shape = (4, 4))#candidate|1492|(4, 4)|var|float32
call_1491 = relay.TupleGetItem(func_1270_call(relay.reshape(var_1492.astype('float32'), [2, 8, 1])), 0)
call_1493 = relay.TupleGetItem(func_1272_call(relay.reshape(var_1492.astype('float32'), [2, 8, 1])), 0)
func_1270_call = mod.get_global_var('func_1270')
func_1272_call = mutated_mod.get_global_var('func_1272')
call_1496 = relay.TupleGetItem(func_1270_call(relay.reshape(var_1492.astype('float32'), [2, 8, 1])), 0)
call_1497 = relay.TupleGetItem(func_1272_call(relay.reshape(var_1492.astype('float32'), [2, 8, 1])), 0)
uop_1511 = relay.acos(call_1487.astype('float64')) # shape=(12, 6, 16)
uop_1513 = relay.acos(call_1488.astype('float64')) # shape=(12, 6, 16)
output = relay.Tuple([bop_1465,call_1471,var_1472,call_1491,var_1492,call_1496,uop_1511,])
output2 = relay.Tuple([bop_1465,call_1473,var_1472,call_1493,var_1492,call_1497,uop_1513,])
func_1516 = relay.Function([var_1463,var_1472,var_1492,], output)
mod['func_1516'] = func_1516
mod = relay.transform.InferType()(mod)
mutated_mod['func_1516'] = func_1516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1516_call = mutated_mod.get_global_var('func_1516')
var_1518 = relay.var("var_1518", dtype = "int16", shape = ())#candidate|1518|()|var|int16
var_1519 = relay.var("var_1519", dtype = "float64", shape = (1152,))#candidate|1519|(1152,)|var|float64
var_1520 = relay.var("var_1520", dtype = "float32", shape = (4, 4))#candidate|1520|(4, 4)|var|float32
call_1517 = func_1516_call(var_1518,var_1519,var_1520,)
output = call_1517
func_1521 = relay.Function([var_1518,var_1519,var_1520,], output)
mutated_mod['func_1521'] = func_1521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1620 = relay.var("var_1620", dtype = "uint32", shape = (6, 16, 12))#candidate|1620|(6, 16, 12)|var|uint32
var_1621 = relay.var("var_1621", dtype = "uint32", shape = (6, 16, 12))#candidate|1621|(6, 16, 12)|var|uint32
bop_1622 = relay.maximum(var_1620.astype('uint32'), relay.reshape(var_1621.astype('uint32'), relay.shape_of(var_1620))) # shape=(6, 16, 12)
output = bop_1622
output2 = bop_1622
func_1637 = relay.Function([var_1620,var_1621,], output)
mod['func_1637'] = func_1637
mod = relay.transform.InferType()(mod)
mutated_mod['func_1637'] = func_1637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mutated_mod.get_global_var('func_1637')
var_1639 = relay.var("var_1639", dtype = "uint32", shape = (6, 16, 12))#candidate|1639|(6, 16, 12)|var|uint32
var_1640 = relay.var("var_1640", dtype = "uint32", shape = (6, 16, 12))#candidate|1640|(6, 16, 12)|var|uint32
call_1638 = func_1637_call(var_1639,var_1640,)
output = call_1638
func_1641 = relay.Function([var_1639,var_1640,], output)
mutated_mod['func_1641'] = func_1641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1799 = relay.var("var_1799", dtype = "uint16", shape = ())#candidate|1799|()|var|uint16
var_1800 = relay.var("var_1800", dtype = "uint16", shape = (1, 13))#candidate|1800|(1, 13)|var|uint16
bop_1801 = relay.logical_xor(var_1799.astype('uint16'), var_1800.astype('uint16')) # shape=(1, 13)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
var_1805 = relay.var("var_1805", dtype = "float64", shape = (896,))#candidate|1805|(896,)|var|float64
call_1804 = relay.TupleGetItem(func_1204_call(relay.reshape(var_1805.astype('float64'), [16, 4, 14])), 0)
call_1806 = relay.TupleGetItem(func_1207_call(relay.reshape(var_1805.astype('float64'), [16, 4, 14])), 0)
func_234_call = mod.get_global_var('func_234')
func_237_call = mutated_mod.get_global_var('func_237')
const_1835 = relay.const([-5,2,3,10,9,-1,-10,5,4,8,4,4,-7,-7,4,4,2,9,-1,5,-9,-5,7,-4,3,-8,-7,7,9,-6,4,4,5,1,-4,-6,-3,3,-2,3,-8,4,-5,9,7,-9,-5,-6,8,-8,4,-7,-8,-4,-7,6,10,-1,3,1,5,-10,2,-3,-3,-3,5,-3,10,3,-6,3,3,1,3,-7,-1,-9,2,3,2,-4,8,2,-5,-5,6,-7,3,-6,-7,5,9,-10,7,-10,-1,-8,2,-7,4,9,2,-2,1,1,10,-7,1,4,1,9,-8,1,6,8,1,-2,1,-10,-2,2,9,3,-5,2,-10,-9,5,-10,-9,-10,6,-5,-6,1,10,-9,1,10,8,-3,2,-9,-2,-9,9,-3,-3,-4,-5,-8,8,-3,1,6,-7,10,-1,-8,9,-5,-9,5,-7,3,-6,7,10,5,-5,-5,-10,-2,5,7,9,4,10,-4,-10,1,9,10,-7,-5,5,-5,-4,-7,8,2,-6,9,-8,5,9,-4,3,2], dtype = "uint16")#candidate|1835|(200,)|const|uint16
call_1834 = func_234_call(relay.reshape(const_1835.astype('uint16'), [10, 5, 4]))
call_1836 = func_234_call(relay.reshape(const_1835.astype('uint16'), [10, 5, 4]))
func_912_call = mod.get_global_var('func_912')
func_915_call = mutated_mod.get_global_var('func_915')
var_1839 = relay.var("var_1839", dtype = "float64", shape = (27,))#candidate|1839|(27,)|var|float64
call_1838 = relay.TupleGetItem(func_912_call(relay.reshape(var_1839.astype('float64'), [9, 1, 3])), 0)
call_1840 = relay.TupleGetItem(func_915_call(relay.reshape(var_1839.astype('float64'), [9, 1, 3])), 0)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
var_1848 = relay.var("var_1848", dtype = "int64", shape = (720,))#candidate|1848|(720,)|var|int64
call_1847 = relay.TupleGetItem(func_1412_call(relay.reshape(var_1848.astype('int64'), [4, 15, 12])), 0)
call_1849 = relay.TupleGetItem(func_1414_call(relay.reshape(var_1848.astype('int64'), [4, 15, 12])), 0)
func_1270_call = mod.get_global_var('func_1270')
func_1272_call = mutated_mod.get_global_var('func_1272')
var_1854 = relay.var("var_1854", dtype = "float32", shape = (16,))#candidate|1854|(16,)|var|float32
call_1853 = relay.TupleGetItem(func_1270_call(relay.reshape(var_1854.astype('float32'), [2, 8, 1])), 0)
call_1855 = relay.TupleGetItem(func_1272_call(relay.reshape(var_1854.astype('float32'), [2, 8, 1])), 0)
bop_1860 = relay.less(call_1838.astype('bool'), relay.reshape(var_1839.astype('bool'), relay.shape_of(call_1838))) # shape=(9, 1, 3)
bop_1863 = relay.less(call_1840.astype('bool'), relay.reshape(var_1839.astype('bool'), relay.shape_of(call_1840))) # shape=(9, 1, 3)
var_1870 = relay.var("var_1870", dtype = "uint16", shape = (200,))#candidate|1870|(200,)|var|uint16
bop_1871 = relay.equal(const_1835.astype('bool'), relay.reshape(var_1870.astype('bool'), relay.shape_of(const_1835))) # shape=(200,)
bop_1878 = relay.maximum(call_1838.astype('uint16'), relay.reshape(bop_1860.astype('uint16'), relay.shape_of(call_1838))) # shape=(9, 1, 3)
bop_1881 = relay.maximum(call_1840.astype('uint16'), relay.reshape(bop_1863.astype('uint16'), relay.shape_of(call_1840))) # shape=(9, 1, 3)
output = relay.Tuple([bop_1801,call_1804,var_1805,call_1834,call_1847,var_1848,call_1853,var_1854,bop_1871,bop_1878,])
output2 = relay.Tuple([bop_1801,call_1806,var_1805,call_1836,call_1849,var_1848,call_1855,var_1854,bop_1871,bop_1881,])
func_1883 = relay.Function([var_1799,var_1800,var_1805,var_1839,var_1848,var_1854,var_1870,], output)
mod['func_1883'] = func_1883
mod = relay.transform.InferType()(mod)
mutated_mod['func_1883'] = func_1883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mutated_mod.get_global_var('func_1883')
var_1885 = relay.var("var_1885", dtype = "uint16", shape = ())#candidate|1885|()|var|uint16
var_1886 = relay.var("var_1886", dtype = "uint16", shape = (1, 13))#candidate|1886|(1, 13)|var|uint16
var_1887 = relay.var("var_1887", dtype = "float64", shape = (896,))#candidate|1887|(896,)|var|float64
var_1888 = relay.var("var_1888", dtype = "float64", shape = (27,))#candidate|1888|(27,)|var|float64
var_1889 = relay.var("var_1889", dtype = "int64", shape = (720,))#candidate|1889|(720,)|var|int64
var_1890 = relay.var("var_1890", dtype = "float32", shape = (16,))#candidate|1890|(16,)|var|float32
var_1891 = relay.var("var_1891", dtype = "uint16", shape = (200,))#candidate|1891|(200,)|var|uint16
call_1884 = func_1883_call(var_1885,var_1886,var_1887,var_1888,var_1889,var_1890,var_1891,)
output = call_1884
func_1892 = relay.Function([var_1885,var_1886,var_1887,var_1888,var_1889,var_1890,var_1891,], output)
mutated_mod['func_1892'] = func_1892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1990 = relay.var("var_1990", dtype = "float64", shape = (2, 2, 11))#candidate|1990|(2, 2, 11)|var|float64
uop_1991 = relay.rsqrt(var_1990.astype('float64')) # shape=(2, 2, 11)
func_394_call = mod.get_global_var('func_394')
func_396_call = mutated_mod.get_global_var('func_396')
var_1999 = relay.var("var_1999", dtype = "float64", shape = (24, 48))#candidate|1999|(24, 48)|var|float64
call_1998 = relay.TupleGetItem(func_394_call(relay.reshape(var_1999.astype('float64'), [12, 6, 16])), 0)
call_2000 = relay.TupleGetItem(func_396_call(relay.reshape(var_1999.astype('float64'), [12, 6, 16])), 0)
func_1516_call = mod.get_global_var('func_1516')
func_1521_call = mutated_mod.get_global_var('func_1521')
const_2010 = relay.const(4, dtype = "int16")#candidate|2010|()|const|int16
var_2011 = relay.var("var_2011", dtype = "float32", shape = (8, 2))#candidate|2011|(8, 2)|var|float32
call_2009 = relay.TupleGetItem(func_1516_call(relay.reshape(const_2010.astype('int16'), []), relay.reshape(var_1999.astype('float64'), [1152,]), relay.reshape(var_2011.astype('float32'), [4, 4]), ), 0)
call_2012 = relay.TupleGetItem(func_1521_call(relay.reshape(const_2010.astype('int16'), []), relay.reshape(var_1999.astype('float64'), [1152,]), relay.reshape(var_2011.astype('float32'), [4, 4]), ), 0)
const_2017 = relay.const([[[2.420522,0.842570,-2.323530,9.730730,-3.688122,7.191670,-4.345374,-4.901449,8.783338,0.518886,-5.588362],[4.876295,-4.869007,2.571724,1.511054,-0.592266,-3.918259,-8.223894,-7.195432,1.791578,-4.408598,4.238522]],[[7.863661,5.524486,-4.366623,5.172373,8.977231,-6.930206,-7.863636,1.567894,-5.704720,-6.961842,-9.596984],[0.777094,-1.021079,2.180970,0.242365,-4.060714,-8.555649,9.410139,-0.968521,2.535122,9.491114,-8.946895]]], dtype = "float64")#candidate|2017|(2, 2, 11)|const|float64
bop_2018 = relay.logical_and(uop_1991.astype('bool'), relay.reshape(const_2017.astype('bool'), relay.shape_of(uop_1991))) # shape=(2, 2, 11)
output = relay.Tuple([call_1998,var_1999,call_2009,const_2010,var_2011,bop_2018,])
output2 = relay.Tuple([call_2000,var_1999,call_2012,const_2010,var_2011,bop_2018,])
func_2026 = relay.Function([var_1990,var_1999,var_2011,], output)
mod['func_2026'] = func_2026
mod = relay.transform.InferType()(mod)
mutated_mod['func_2026'] = func_2026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2026_call = mutated_mod.get_global_var('func_2026')
var_2028 = relay.var("var_2028", dtype = "float64", shape = (2, 2, 11))#candidate|2028|(2, 2, 11)|var|float64
var_2029 = relay.var("var_2029", dtype = "float64", shape = (24, 48))#candidate|2029|(24, 48)|var|float64
var_2030 = relay.var("var_2030", dtype = "float32", shape = (8, 2))#candidate|2030|(8, 2)|var|float32
call_2027 = func_2026_call(var_2028,var_2029,var_2030,)
output = call_2027
func_2031 = relay.Function([var_2028,var_2029,var_2030,], output)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2283 = relay.var("var_2283", dtype = "float64", shape = (2, 7, 9))#candidate|2283|(2, 7, 9)|var|float64
uop_2284 = relay.tan(var_2283.astype('float64')) # shape=(2, 7, 9)
output = relay.Tuple([uop_2284,])
output2 = relay.Tuple([uop_2284,])
func_2292 = relay.Function([var_2283,], output)
mod['func_2292'] = func_2292
mod = relay.transform.InferType()(mod)
mutated_mod['func_2292'] = func_2292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2293 = relay.var("var_2293", dtype = "float64", shape = (2, 7, 9))#candidate|2293|(2, 7, 9)|var|float64
func_2292_call = mutated_mod.get_global_var('func_2292')
call_2294 = func_2292_call(var_2293)
output = call_2294
func_2295 = relay.Function([var_2293], output)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2349 = relay.var("var_2349", dtype = "uint16", shape = (16, 8, 10))#candidate|2349|(16, 8, 10)|var|uint16
var_2350 = relay.var("var_2350", dtype = "uint16", shape = (16, 8, 10))#candidate|2350|(16, 8, 10)|var|uint16
bop_2351 = relay.maximum(var_2349.astype('uint16'), relay.reshape(var_2350.astype('uint16'), relay.shape_of(var_2349))) # shape=(16, 8, 10)
output = relay.Tuple([bop_2351,])
output2 = relay.Tuple([bop_2351,])
func_2356 = relay.Function([var_2349,var_2350,], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
var_2358 = relay.var("var_2358", dtype = "uint16", shape = (16, 8, 10))#candidate|2358|(16, 8, 10)|var|uint16
var_2359 = relay.var("var_2359", dtype = "uint16", shape = (16, 8, 10))#candidate|2359|(16, 8, 10)|var|uint16
call_2357 = func_2356_call(var_2358,var_2359,)
output = call_2357
func_2360 = relay.Function([var_2358,var_2359,], output)
mutated_mod['func_2360'] = func_2360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2443 = relay.var("var_2443", dtype = "uint8", shape = ())#candidate|2443|()|var|uint8
var_2444 = relay.var("var_2444", dtype = "uint8", shape = (4, 14, 14))#candidate|2444|(4, 14, 14)|var|uint8
bop_2445 = relay.left_shift(var_2443.astype('uint8'), var_2444.astype('uint8')) # shape=(4, 14, 14)
uop_2448 = relay.sin(var_2444.astype('float64')) # shape=(4, 14, 14)
output = relay.Tuple([bop_2445,uop_2448,])
output2 = relay.Tuple([bop_2445,uop_2448,])
func_2452 = relay.Function([var_2443,var_2444,], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mutated_mod.get_global_var('func_2452')
var_2454 = relay.var("var_2454", dtype = "uint8", shape = ())#candidate|2454|()|var|uint8
var_2455 = relay.var("var_2455", dtype = "uint8", shape = (4, 14, 14))#candidate|2455|(4, 14, 14)|var|uint8
call_2453 = func_2452_call(var_2454,var_2455,)
output = call_2453
func_2456 = relay.Function([var_2454,var_2455,], output)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2484 = relay.var("var_2484", dtype = "float32", shape = (3, 6, 11))#candidate|2484|(3, 6, 11)|var|float32
const_2485 = relay.const([[[-6.171245,-9.300452,-5.935038,-6.473724,-6.756108,-5.157435,-6.588634,-2.009347,-0.396111,2.985600,8.457530],[3.971029,-9.292580,-8.228928,-7.643553,3.680567,1.726117,-3.601668,-6.148963,3.815961,4.692781,-0.174953],[2.109808,-5.139707,6.436633,-5.978472,-2.544570,-6.160491,2.981612,5.490301,7.481722,-1.192954,6.657737],[-8.133317,-0.254326,-7.968260,-8.179865,5.666570,7.647772,3.954745,2.130628,-0.966981,7.153177,8.394701],[6.326787,-7.212474,4.441739,8.033764,3.839437,-9.162436,6.861011,8.733276,-2.203605,-5.507253,-2.175555],[-8.216523,0.717026,1.002173,-3.599423,6.747152,7.228272,-7.571049,1.123299,2.839017,9.994249,-5.539864]],[[-0.999675,-4.129092,-8.374136,6.230527,-5.026365,-0.230423,-0.380104,-2.103592,-5.877583,-6.967265,1.143157],[8.190464,2.396079,1.481867,-2.857450,9.136625,3.937174,0.963289,-8.478273,-0.629023,0.869987,8.480902],[-9.745101,-0.241188,2.203323,8.183847,7.069725,8.742895,4.172768,7.390346,-0.072516,1.289665,2.246354],[6.922104,4.462169,-6.550625,3.603544,-6.384433,-3.162996,-2.901499,1.336447,-9.007138,-2.929610,7.450806],[4.360502,-1.569100,-4.832216,8.494619,-1.329288,3.996170,3.576651,-8.760490,8.044592,-2.536435,9.869515],[-4.086925,-7.617056,0.978205,-4.911196,4.120002,-6.150639,-3.132966,1.471636,-0.445205,-9.686150,8.499223]],[[8.366003,-6.385658,-4.838556,-4.439332,-9.659634,-0.047972,-0.361823,5.738027,5.385157,-3.854261,-7.036872],[-2.788003,-9.007257,-6.976942,-2.746049,-4.867376,0.928804,4.080341,-2.457410,-0.203480,-2.665639,8.113882],[-4.567977,2.895844,2.857495,4.877776,-5.098545,3.506834,-7.823185,-4.174434,1.290563,8.510915,9.013647],[-7.666440,-3.386245,-9.327698,-7.690507,2.905945,0.833637,-7.107955,-1.196647,-1.549396,1.543838,-5.517228],[1.122974,-6.888122,5.250054,-2.882661,-1.195763,-6.765673,7.610526,6.657919,7.592270,-6.815289,-0.639975],[5.584861,6.853419,4.838300,-1.592782,-5.230282,-8.516854,-9.915614,-5.878978,8.927082,-3.814783,-5.116472]]], dtype = "float32")#candidate|2485|(3, 6, 11)|const|float32
bop_2486 = relay.not_equal(var_2484.astype('bool'), relay.reshape(const_2485.astype('bool'), relay.shape_of(var_2484))) # shape=(3, 6, 11)
func_394_call = mod.get_global_var('func_394')
func_396_call = mutated_mod.get_global_var('func_396')
const_2504 = relay.const([-2.528339,-3.798287,-6.420060,-3.700801,6.883635,-2.560056,0.357005,-4.471928,-1.325706,-2.879159,0.566844,-1.263684,-6.025030,-4.577822,-7.834479,3.614763,0.670451,8.300549,4.254789,2.139594,-5.394189,-6.849141,5.445246,-8.949998,3.608191,1.835120,-6.714716,-9.989605,-0.965434,2.063240,-2.541262,0.693172,-7.672735,-0.329907,0.220375,-8.436214,1.036609,7.233153,2.795981,-1.045729,-0.365534,5.212897,6.958550,2.985636,-0.038418,-9.242837,2.591914,4.346343,-4.503158,5.480359,3.566628,3.954433,7.784160,-2.621438,6.096214,9.800486,-7.229469,-9.115477,-1.995706,-4.754154,-3.640770,8.050040,-8.193685,6.547217,-9.799934,-1.525255,-4.718220,-7.704584,-6.638180,-3.664756,9.528372,9.005819,-5.459377,9.136253,-0.612585,-1.838023,-2.783694,-1.055629,-4.142648,-2.072537,6.150724,-4.902697,-2.567355,3.351833,5.111563,-5.515557,7.669088,2.482845,-4.969219,-5.373228,-0.496066,3.572896,-0.905687,1.284027,-7.621462,-9.085713,2.666253,8.874265,6.972060,-8.247815,4.563084,-1.294298,0.435914,-1.643064,-0.697876,-6.908570,5.999965,-0.172734,6.096157,-8.900801,3.109737,2.441773,-3.912582,-2.326940,6.587035,-4.503766,-0.787070,6.181135,-7.227452,0.617605,-5.311987,3.343294,8.515082,-5.635447,-2.987569,-9.979747,2.015973,-2.882173,5.833994,7.578207,0.158198,7.116834,-8.588933,1.473440,-7.550973,-9.928325,-4.981273,5.635099,9.287704,8.590824,-3.555121,0.388240,5.711787,1.562171,-4.610832,-4.313193,8.205057,7.121893,-9.715376,-2.109497,3.951811,-1.705096,3.817883,-6.582560,5.464750,-3.419687,7.968848,7.599275,2.968066,1.583317,6.302152,0.866905,9.950709,3.342337,-8.235544,2.364227,-5.434331,7.776270,1.981535,-9.593533,9.252041,-5.167285,-7.183457,-0.716096,0.370980,8.344454,9.800214,9.488360,-7.389933,-4.234669,-7.890022,-4.647092,9.360365,-1.739900,9.320859,2.582656,3.053149,-2.631884,2.755396,8.577369,-3.360568,-2.418976,-3.591964,2.967507,-8.196540,0.522711,8.398746,2.709511,2.577152,1.176690,-1.223919,-1.702334,-7.942186,2.804297,6.580975,-0.891584,1.037756,6.253297,-4.483268,-5.764541,-4.345320,-7.371066,-9.665905,7.492409,5.767015,-1.813411,4.634360,-5.001635,8.584061,-8.900418,-3.783838,2.973568,6.672092,2.349302,3.030716,-2.149662,5.348775,8.415665,-2.171119,-4.871776,1.158980,8.468502,2.757651,-7.673848,6.747246,5.427406,-9.928276,9.272897,5.024333,7.315241,3.900463,-2.090676,-7.596930,-6.457880,-4.278820,8.262546,3.542776,4.211689,-9.548369,-2.257913,-2.593055,7.805217,-8.412405,-2.564015,-3.519786,-5.161182,4.921903,-9.511093,-0.272154,-3.784860,3.586412,-0.371608,-6.338418,6.336429,8.701569,-0.194010,9.855382,-2.048110,-3.527442,9.231849,3.335091,-2.286590,0.037472,-6.163691,5.987453,-6.401956,-2.764594,-8.792061,-2.283449,6.987898,4.145831,4.933377,-0.864529,-1.928553,-9.634636,9.985932,1.316436,-2.597334,-2.104140,-9.156876,3.074455,4.872370,9.438914,-2.421128,6.795846,6.263042,7.211238,-2.174234,2.433983,9.870570,-3.972895,1.789245,-2.604609,-5.336124,-6.636149,6.134524,-8.643019,-0.746481,-9.283590,4.838607,-8.631300,-5.104426,-4.972197,5.984295,0.678710,4.895837,9.315019,1.489883,7.062617,7.154779,-0.892647,9.612923,9.063649,-5.683147,3.061662,7.107509,-6.148361,4.879372,-4.836600,-6.781809,6.494142,-2.331761,-1.105986,8.533994,4.831507,-6.331849,7.602683,-8.146909,5.759805,-5.084145,0.944456,-3.419567,9.315604,-1.146937,8.471706,6.285224,-4.737056,1.714533,8.593166,-7.007217,1.668732,-0.222183,5.994560,7.796043,7.684899,7.454398,-9.531663,-3.241344,0.112957,4.450838,-8.413230,-5.586164,-2.341636,6.990886,-5.958317,9.726665,-7.078684,-2.322898,-1.568142,-8.548240,7.981441,-6.807166,-1.829861,9.650005,8.511990,-5.084241,6.145842,6.944057,-3.643852,7.704252,-2.628052,2.146662,-5.548755,-5.264342,1.883431,-9.454121,-9.216636,-8.369119,6.732153,4.489844,6.220987,-7.839726,-1.270128,-3.509152,4.051734,5.164759,-3.261627,-0.087815,-1.959305,-7.903420,-8.914973,-7.570811,5.667245,3.322387,-5.279427,-6.471114,-2.778838,-0.791056,-8.006351,6.640156,-7.323553,5.257064,5.209467,4.397184,4.274466,-6.943054,-0.729350,-9.029178,7.359054,-6.682058,-4.089033,0.207970,-0.308635,9.341802,1.053098,-9.823747,8.398581,-4.893119,0.531343,-0.638206,5.465975,-9.691466,8.689624,-4.113391,-2.504206,-4.567827,4.002813,7.441369,2.529800,-8.549283,-4.062959,-2.243765,-5.397656,-4.660184,-8.530826,-5.431930,0.711210,4.005260,-4.423817,-0.283665,5.884926,8.133000,-4.433815,-5.698342,-2.530501,-8.910573,5.887713,-3.930167,-8.193535,9.013210,-0.222270,-5.422036,2.997338,-6.865005,5.735003,-9.734469,-5.195750,3.714908,0.094877,-6.026923,-1.573290,-0.208915,-9.742850,-1.381726,2.550269,2.504402,3.852339,-1.003380,-2.344003,-6.012512,1.131596,-4.800378,1.675572,-5.894100,6.622707,-3.575812,-0.833215,1.121070,7.554997,1.399795,7.556322,-5.571483,-5.754571,1.248079,-0.336251,1.981847,5.540358,6.304334,4.799878,8.752035,-7.947175,6.277851,-0.866241,7.136316,-7.092361,-1.967880,-8.725128,-2.680321,4.215427,3.068151,-5.041798,2.947645,-6.073702,-2.011053,2.721930,-7.833576,1.977211,-2.665242,-9.649740,3.053602,-1.666051,-2.311913,7.934122,0.844931,0.461431,-8.876654,8.694926,4.031824,-3.784048,-7.279328,6.982242,7.657036,-4.095177,-7.878953,-8.748837,1.422061,3.903310,6.171231,-1.090175,-9.954946,4.369838,4.854685,-4.725969,-0.976305,-1.549050,-3.700436,1.108754,-0.639130,0.964483,-0.257629,9.763165,-3.899008,8.711390,5.638967,7.205459,4.772727,-6.601933,5.095836,6.546658,4.527111,-4.422614,3.415036,6.358711,2.840758,-0.013383,-7.614318,3.326028,3.603152,-0.859900,8.410150,-7.114059,-0.926608,9.165881,5.285432,7.142699,0.077023,5.320773,1.329830,-6.651177,0.941895,-2.616253,-3.585077,8.339206,9.160955,-0.204233,0.084187,6.976536,9.982311,0.732514,-1.985682,0.289183,8.855229,-5.316195,-3.631991,6.470993,-2.403615,7.668245,-3.207242,-0.499723,9.262406,-4.468455,8.400918,-0.471775,-0.350711,7.821068,9.580076,-2.938038,2.868982,1.865570,-3.041077,-5.076560,2.950674,6.649495,-3.656153,9.427810,8.256904,-6.401757,6.292265,5.027498,-3.808840,-9.780854,-2.796682,-5.385803,-2.186245,4.239925,9.602010,1.766239,4.150239,-1.386418,-5.273876,7.642007,3.904791,-2.803596,5.718455,-6.841655,-0.253325,9.772132,-2.511632,9.206659,4.564674,4.575446,-2.052039,2.857841,1.707643,9.724047,5.460403,6.508860,-3.800906,-7.874129,-7.565354,1.161247,0.814211,2.650198,2.736244,-5.347212,1.445930,3.942251,-7.469966,7.336942,-2.275821,1.561676,-8.740718,-9.357268,-3.721399,-1.232502,3.363679,-0.846309,-6.521595,-4.297424,-1.504146,-9.034646,-8.370611,1.950250,7.681443,7.580817,5.445043,3.822521,1.033062,-3.692850,-3.085793,-6.240314,-0.180449,8.927553,-4.710701,-1.691212,-1.034395,-7.041972,-6.026241,-0.122789,3.185387,7.087708,-7.561001,-4.388082,-6.559805,-5.139788,2.412342,8.126170,7.881713,-6.698788,-0.535436,-4.755875,6.770203,-4.620018,-1.541031,8.952942,-6.642831,-7.818673,-7.716585,-6.253988,9.075762,1.024398,-9.887809,-1.362419,1.312715,2.983568,-0.518532,6.191966,2.425775,8.814350,-6.386715,2.620532,-9.696604,9.524901,-8.611274,2.638026,-7.322413,-7.325125,7.956423,-5.744925,2.944270,5.017909,9.439264,8.256904,-6.918736,-0.931940,-0.675246,3.385094,6.252346,3.049158,-4.468028,1.911213,6.077869,0.782735,2.464040,-0.954157,-3.405523,-7.129301,-2.961798,-4.083526,-8.941020,2.262519,-2.546905,5.200268,3.474168,4.188312,-3.675277,6.426496,-5.346273,-6.611096,-8.209486,-2.842884,-1.500736,6.800915,-1.692809,4.787031,-9.149303,5.898638,6.623723,7.436548,8.921701,3.480824,9.184728,-5.451106,7.648412,1.796944,3.338883,-6.607979,-7.493253,-5.722208,1.237126,-0.116505,-9.844441,-9.818650,-6.996988,-7.342580,-6.786282,1.211791,-1.731640,7.813634,6.226820,-4.680713,-5.966589,-6.840502,-2.715910,-4.721093,6.909406,1.664900,-2.070080,7.917173,7.038407,5.335873,8.736806,-6.794740,-5.324037,-1.021176,-4.851238,-9.237331,5.398865,-3.739149,5.782214,-4.408296,8.983067,-9.419442,5.183899,-1.626191,8.569568,7.360989,5.879282,3.014004,3.258378,0.164695,-4.389156,0.697019,-1.006874,8.149439,-0.759227,-8.176467,8.345629,3.848791,6.171936,-6.895525,3.067074,1.195900,6.239210,-5.757380,-1.416673,-7.912612,1.830827,3.895996,8.629124,0.289263,-7.122366,8.430449,-2.813154,-6.712508,2.850999,5.908147,-9.347795,3.775927,7.999352,8.967792,3.244365,-6.652108,0.016702,-4.725599,-3.146478,-2.963529,-8.297735,-1.453510,-8.344380,-5.620418,8.040376,1.407073,-7.321946,1.873078,-6.948989,-6.376678,9.863136,9.391037,-2.559367,9.640389,1.485666,0.544688,-4.922710,7.123737,-0.874014,-9.284179,3.456699,-6.180413,-3.152842,4.414853,-1.514281,-5.596459,-0.078623,-7.288827,5.049599,2.763424,6.441293,-9.195121,-0.338201,-4.402823,2.535207,5.162097,-1.776418,5.335214,0.026567,-5.457024,-1.194794,1.646366,-7.654042,6.568254,-7.969722,-8.812180,4.818985,8.642182,-7.528763,-9.790881,-8.613652,-8.828225,1.783502,7.113500,-2.186869,-5.103309,-1.263082,5.782413,8.051489,-4.117185,8.753522,8.130316,-7.002448,8.119683,9.037533,-0.003157,1.120067,-1.013735,-4.128966,4.784633,5.457571,4.065488,-0.567819,-2.928871,6.880907,1.616151,-3.408429,0.665888,5.911471,4.629157,9.765494,-2.435290,9.241263,6.017196,-2.741157,-9.099822,3.690652,9.541124,2.055943,5.918411,-6.716468,2.096366,-5.937073,9.767350,3.090334,-7.243033,6.534899,5.504697,0.111958,-5.613002,-3.220809,-6.524479,1.002884,8.183758,0.837255,4.988288,9.307422,-0.600927,-7.169910,1.712427,9.535945,-7.849722,-7.189975,6.501484,-3.861910,6.514324,-9.976428,-3.809979,8.044914,-3.999471,9.247166,-6.171515,4.634665,-0.639762,5.364711,1.546025,8.750615,9.621872,-5.822543,8.158410,-4.409993,1.166717,-2.950822,-9.807565,3.396439,2.242233,8.440402,6.738186,-5.508363,-3.098770,4.617107,-0.851252,2.320379,-8.520430,-2.184230,-5.831207,-8.166643,-3.981101,-9.165320,-6.013005,8.714434,-1.483027,2.642817,8.555903,5.828850,8.100470,-2.764641,4.609609,5.745364,9.802577,6.989482,6.373583,1.245607,0.270017,-6.276080,3.183016,1.042192,-6.048516,7.736146,-5.797209,2.707670,3.592603,-5.974940,6.282008,-5.661929,5.699289,9.099919,8.586735,-1.444614,-6.170589,-9.835055,5.479970,8.207394,-5.019448,1.093089,5.163076,1.383472,-4.420384,4.997116,1.374290,-1.150271,3.105524,6.348073,-5.613571,2.934960,5.098521,-3.389066,7.156838,-1.739517,-3.569811,7.886256,8.458741,-1.153196,-0.255539,6.703326,8.649942,-4.852810,0.381473,1.338043,-4.898973,-3.027105,-2.917768,-4.911651,-7.116992,-9.294561,-4.633213,-4.222603,-3.718451,-1.903827,-1.414512,-3.311980,1.648940,7.687690,4.672248,7.154846,8.777705,4.981375,-4.575025,-0.411020,-2.332906,-8.401335,-5.267746,-7.678659,0.948098,4.603555,7.782310,-5.161366,-5.065756,5.809475,-9.021630,5.614547,7.592704,-1.620970,-8.391771,-5.946275,8.698390,-2.577824,-5.667502,-6.315981,7.724923,8.665567,6.460736,6.878877,4.689438,1.467531,8.557006,-2.242861,0.606950,1.634625,4.742541,0.228904,-0.469891,-0.726402,-1.464715,-6.887104,-1.145995,-9.925346,7.279570,6.282349,1.654382,3.737450,-9.979950,5.386464,-8.580858,1.191721,-2.183233,-5.985492,-2.974680,7.036259,5.206731,-9.525528,-3.470912,1.683526,1.464746,-0.477959,-1.077730,6.373781,8.991409,-4.945578,6.056015,7.267161,-9.390549,-8.537873,-4.815675,-9.449207], dtype = "float64")#candidate|2504|(1152,)|const|float64
call_2503 = relay.TupleGetItem(func_394_call(relay.reshape(const_2504.astype('float64'), [12, 6, 16])), 1)
call_2505 = relay.TupleGetItem(func_396_call(relay.reshape(const_2504.astype('float64'), [12, 6, 16])), 1)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
const_2508 = relay.const([3,2,-5,-6,-1,-6,-9,9,7,-9,-10,-5,-3,7,6,-1,9,-4,-8,-5,-9,1,-8,-2,-4,5,1,4,-8,7,-7,5,-2,10,1,-1,8,8,10,4,10,-9,1,7,2,-3,4,5,-9,8,-4,-10,-8,-10,-8,-4,4,-1,5,-6,4,6,-1,6,7,2,2,4,10,-10,-8,9,6,-9,-2,9,-6,3,-5,-7,-4,2,1,-6,9,1,10,1,4,8,7,-1,10,2,5,-8,8,-5,-7,2,-6,-7,-7,-2,-10,-4,-8,4,10,-3,-5,4,-2,-6,9,-9,3,1,4,-8,4,5,-8,9,-5,5,-5,7,7,8,-1,10,3,-3,-5,-5,-6,10,-9,4,-1,-8,-7,4,8,9,-1,3,-10,-4,9,3,-8,-9,-10,-5,-3,5,-5,3,5,3,3,-1,-4,8,-4,1,4,1,5,4,6,-6,-2,-6,-3,2,-9,-6,10,8,-7,-6,-9,6,2,1,-3,2,-8,-2,-1,4,9,-3,-6,-5,-8,-3,-9,-10,-10,2,8,7,-2,6,5,-3,9,-5,5,-7,2,-1,-10,-1,-1,-2,-7,-4,9,-2,9,-9,1,3,-6,10,-2,-9,9,-3,-3,1,5,8,-7,-8,-8,-5,3,-5,-10,-8,-4,-7,7,5,-4,-7,-2,-10,-7,-5,5,4,-10,8,-3,-4,-3,10,-8,7,1,-10,-1,2,-9,5,-9,-4,9,6,-8,9,-1,1,-5,-1,4,-9,-2,-5,10,-6,2,-7,-2,10,-5,-3,-7,-6,-1,-9,8,2,-3,-2,-8,3,8,10,2,2,-9,4,7,10,-6,-5,-9,6,-3,-4,-9,-2,6,9,-1,5,-3,-6,8,-10,-5,9,-1,5,-7,8,5,-5,9,-10,2,-10,4,-7,4,-7,4,2,-4,3,7,9,9,-2,5,-1,-7,4,-9,-6,-10,-1,-2,2,-1,9,-6,7,-10,8,-2,4,9,3,-1,-10,-5,-9,-3,2,8,9,8,1,-8,-5,7,-2,-9,6,-5,5,7,-6,5,-4,9,-6,3,5,6,2,1,-2,2,-10,-4,8,7,2,1,-4,1,-7,9,6,4,-9,-5,-3,8,-3,-10,-6,2,-10,5,-3,-8,-1,-4,10,-6,-3,9,5,1,2,8,10,-5,2,8,6,-6,1,-5,-8,-2,-1,8,10,5,-3,-1,2,-5,6,10,7,3,7,-1,-9,5,5,10,-3,9,-6,8,6,2,7,6,-9,-4,-6,-1,-9,7,-2,-1,-1,-10,3,-7,-3,1,-3,6,5,-8,6,-8,-10,8,3,6,2,-3,5,-3,10,-8,2,-7,-3,-10,6,3,2,-7,-3,-8,-6,9,4,-10,6,9,2,-5,-3,-4,-10,7,10,-8,5,-7,9,-4,8,9,-2,9,4,-10,8,8,-3,-3,-6,-6,-7,4,1,-10,2,2,-8,9,-7,-1,-3,7,1,-8,1,10,1,5,-3,-10,4,10,-4,-6,-8,-8,-3,6,6,-2,2,-4,-7,-4,4,5,7,-2,4,4,4,-2,8,2,4,1,-10,-8,4,7,-7,7,-8,6,6,6,1,-8,10,3,6,9,-8,2,8,-9,-2,10,5,5,-4,-1,3,-6,-9,-4,-4,2,-9,-6,-4,1,-1,-7,6,8,-5,7,-8,8,3,-4,-6,-8,3,-1,9,4,-4,8,4,-2,-7,-4,1,4,-5,-10,9,5,2,-8,1,-2,-2,7,-10,-5,-7,4,3,5,-8,-1,2,8,6,-6,-9,-2,-1,-7,7,8,2,-5,9,7,2,6,-7,-10,4,8,4,-4,-10,-6,4,-2,-5,3,6,5,9,-3,-8,7,-7,-5,8,6,10,-4,7,5,2,7,-8,-5,-6,3,-1,5,-7,1,-10], dtype = "int64")#candidate|2508|(720,)|const|int64
call_2507 = relay.TupleGetItem(func_1412_call(relay.reshape(const_2508.astype('int64'), [4, 15, 12])), 0)
call_2509 = relay.TupleGetItem(func_1414_call(relay.reshape(const_2508.astype('int64'), [4, 15, 12])), 0)
func_1883_call = mod.get_global_var('func_1883')
func_1892_call = mutated_mod.get_global_var('func_1892')
const_2525 = relay.const(10, dtype = "uint16")#candidate|2525|()|const|uint16
const_2526 = relay.const([5,-7,-10,3,-1,4,4,-5,6,-3,6,-3,4], dtype = "uint16")#candidate|2526|(13,)|const|uint16
var_2527 = relay.var("var_2527", dtype = "float64", shape = (896,))#candidate|2527|(896,)|var|float64
const_2528 = relay.const([[-7.419871],[-9.001109],[5.882194],[4.118306],[4.753749],[-0.958085],[3.126463],[6.592236],[-2.620205],[9.946223],[-3.152195],[-4.174842],[-2.750800],[4.516890],[5.323597],[-4.551625],[-3.836298],[6.462754],[-4.411327],[9.006052],[-3.265243],[-7.713336],[-3.221397],[5.919529],[-4.818977],[-9.802222],[-8.576546]], dtype = "float64")#candidate|2528|(27, 1)|const|float64
var_2529 = relay.var("var_2529", dtype = "float32", shape = (16,))#candidate|2529|(16,)|var|float32
var_2530 = relay.var("var_2530", dtype = "uint16", shape = (200,))#candidate|2530|(200,)|var|uint16
call_2524 = relay.TupleGetItem(func_1883_call(relay.reshape(const_2525.astype('uint16'), []), relay.reshape(const_2526.astype('uint16'), [1, 13]), relay.reshape(var_2527.astype('float64'), [896,]), relay.reshape(const_2528.astype('float64'), [27,]), relay.reshape(call_2507.astype('int64'), [720,]), relay.reshape(var_2529.astype('float32'), [16,]), relay.reshape(var_2530.astype('uint16'), [200,]), ), 3)
call_2531 = relay.TupleGetItem(func_1892_call(relay.reshape(const_2525.astype('uint16'), []), relay.reshape(const_2526.astype('uint16'), [1, 13]), relay.reshape(var_2527.astype('float64'), [896,]), relay.reshape(const_2528.astype('float64'), [27,]), relay.reshape(call_2507.astype('int64'), [720,]), relay.reshape(var_2529.astype('float32'), [16,]), relay.reshape(var_2530.astype('uint16'), [200,]), ), 3)
func_2026_call = mod.get_global_var('func_2026')
func_2031_call = mutated_mod.get_global_var('func_2031')
const_2535 = relay.const([4.050323,-3.599730,5.105170,-8.172905,-5.424402,6.240804,3.494136,0.415920,2.663100,-0.759316,-3.570222,9.857343,-0.997841,-0.963850,4.797600,1.018554,-9.265871,0.402175,-7.588197,4.439319,1.585374,-9.451109,8.363801,0.395585,5.439005,-3.658490,3.739859,4.962048,4.137525,5.081084,-3.396413,7.194100,-1.514584,-8.370555,-1.783695,-9.025884,-1.005869,0.927602,-3.016847,7.389253,-5.823118,-5.233826,5.765015,1.724517], dtype = "float64")#candidate|2535|(44,)|const|float64
call_2534 = relay.TupleGetItem(func_2026_call(relay.reshape(const_2535.astype('float64'), [2, 2, 11]), relay.reshape(const_2504.astype('float64'), [24, 48]), relay.reshape(var_2529.astype('float32'), [8, 2]), ), 5)
call_2536 = relay.TupleGetItem(func_2031_call(relay.reshape(const_2535.astype('float64'), [2, 2, 11]), relay.reshape(const_2504.astype('float64'), [24, 48]), relay.reshape(var_2529.astype('float32'), [8, 2]), ), 5)
func_2356_call = mod.get_global_var('func_2356')
func_2360_call = mutated_mod.get_global_var('func_2360')
var_2538 = relay.var("var_2538", dtype = "uint16", shape = (1280,))#candidate|2538|(1280,)|var|uint16
call_2537 = relay.TupleGetItem(func_2356_call(relay.reshape(var_2538.astype('uint16'), [16, 8, 10]), relay.reshape(var_2538.astype('uint16'), [16, 8, 10]), ), 0)
call_2539 = relay.TupleGetItem(func_2360_call(relay.reshape(var_2538.astype('uint16'), [16, 8, 10]), relay.reshape(var_2538.astype('uint16'), [16, 8, 10]), ), 0)
output = relay.Tuple([bop_2486,call_2503,const_2504,call_2507,const_2508,call_2524,const_2525,const_2526,var_2527,const_2528,var_2529,var_2530,call_2534,const_2535,call_2537,var_2538,])
output2 = relay.Tuple([bop_2486,call_2505,const_2504,call_2509,const_2508,call_2531,const_2525,const_2526,var_2527,const_2528,var_2529,var_2530,call_2536,const_2535,call_2539,var_2538,])
func_2543 = relay.Function([var_2484,var_2527,var_2529,var_2530,var_2538,], output)
mod['func_2543'] = func_2543
mod = relay.transform.InferType()(mod)
var_2544 = relay.var("var_2544", dtype = "float32", shape = (3, 6, 11))#candidate|2544|(3, 6, 11)|var|float32
var_2545 = relay.var("var_2545", dtype = "float64", shape = (896,))#candidate|2545|(896,)|var|float64
var_2546 = relay.var("var_2546", dtype = "float32", shape = (16,))#candidate|2546|(16,)|var|float32
var_2547 = relay.var("var_2547", dtype = "uint16", shape = (200,))#candidate|2547|(200,)|var|uint16
var_2548 = relay.var("var_2548", dtype = "uint16", shape = (1280,))#candidate|2548|(1280,)|var|uint16
output = func_2543(var_2544,var_2545,var_2546,var_2547,var_2548,)
func_2549 = relay.Function([var_2544,var_2545,var_2546,var_2547,var_2548,], output)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2566 = relay.var("var_2566", dtype = "float64", shape = (8, 4, 3))#candidate|2566|(8, 4, 3)|var|float64
uop_2567 = relay.cos(var_2566.astype('float64')) # shape=(8, 4, 3)
uop_2594 = relay.atanh(uop_2567.astype('float32')) # shape=(8, 4, 3)
output = uop_2594
output2 = uop_2594
func_2597 = relay.Function([var_2566,], output)
mod['func_2597'] = func_2597
mod = relay.transform.InferType()(mod)
mutated_mod['func_2597'] = func_2597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2598 = relay.var("var_2598", dtype = "float64", shape = (8, 4, 3))#candidate|2598|(8, 4, 3)|var|float64
func_2597_call = mutated_mod.get_global_var('func_2597')
call_2599 = func_2597_call(var_2598)
output = call_2599
func_2600 = relay.Function([var_2598], output)
mutated_mod['func_2600'] = func_2600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2625 = relay.var("var_2625", dtype = "uint8", shape = (4, 10, 14))#candidate|2625|(4, 10, 14)|var|uint8
var_2626 = relay.var("var_2626", dtype = "uint8", shape = (4, 10, 14))#candidate|2626|(4, 10, 14)|var|uint8
bop_2627 = relay.multiply(var_2625.astype('uint8'), relay.reshape(var_2626.astype('uint8'), relay.shape_of(var_2625))) # shape=(4, 10, 14)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
const_2641 = relay.const([-2.593193,-2.494041,8.734445,-3.803997,8.998553,-4.285047,4.055153,-4.759340,6.480881,-4.039331,3.261604,5.157466,6.797581,-2.556194,4.366244,-3.061078,-4.915960,1.905647,8.866263,-4.342097,-4.482298,0.175382,2.256833,-2.773927,5.094638,-1.196258,9.120300,3.969258,8.284899,9.577064,0.600181,-6.586621,-5.834670,2.725858,2.123364,6.225244,-1.756252,-4.324916,-7.462513,1.491076,0.290750,4.563696,6.336239,1.536248,-0.072328,-2.978038,-8.379342,-8.354766,-1.613198,7.888412,8.614091,0.818936,0.134016,1.136408,-3.307758,5.772448,-1.956422,-3.176000,4.319730,-2.941807,-8.891141,-0.661628,7.755088,0.930781,-4.316140,5.349426,6.821369,-2.157794,-9.363303,0.272982,-1.764086,8.544296,1.437092,-7.453281,5.806790,-1.463433,3.031585,3.617875,6.948962,-2.389497,3.412615,6.774180,-4.518826,2.240469,0.006905,8.869896,9.899360,-5.314964,-5.059579,0.174894,6.358972,0.491847,-8.009484,7.052082,-6.778588,-5.995563,-4.385510,-7.545041,7.464313,7.789614,-4.638497,-6.263934,5.142090,-5.329468,3.221650,-7.328627,-0.794024,-7.809366,-4.249958,-6.428347,2.407117,-1.191249,8.917294,9.639457,-6.515487,7.265124,6.174145,-0.270060,4.142675,1.480943,-6.109225,0.778599,4.595750,-1.928243,-5.424941,-5.353369,9.295215,3.628072,-8.585040,5.700105,8.619411,3.929659,-4.156494,-3.938511,0.714087,-6.722950,3.321973,-7.726863,9.900503,-5.513837,4.527355,-9.619703,4.103567,2.869572,-8.931309,-8.072623,-5.637412,-5.116442,0.550814,-4.308511,-2.624107,-8.783271,-5.463411,9.130516,9.581690,4.310226,-7.090480,0.087545,1.641502,0.130797,3.976770,-4.037597,-5.365990,-1.160161,3.706923,-0.010195,-3.542714,5.077996,2.787444,-5.580296,-1.255883,4.221858,7.613595,-4.682009,-9.299536,-1.098175,4.671771,7.049557,-5.229776,0.574960,-0.855025,1.562535,-1.935901,6.987306,0.547527,3.189288,-2.813859,0.818522,9.348972,-8.406360,4.698719,-6.909628,4.350715,-3.289803,0.782698,6.791161,4.572106,-6.588362,9.297267,3.325619,-5.322078,-2.792505,-9.595728,-5.706639,6.379176,8.285223,-9.454131,8.531380,0.668467,2.779000,8.414665,-8.251248,0.910519,5.107995,-4.951258,-5.915188,5.957605,0.241201,-1.222364,7.253515,9.496736,-1.697847,-9.118191,7.910269,-8.199340,2.978758,-0.539255,-2.550945,-7.648665,-4.617042,3.786131,3.612878,-0.496173,-9.036758,8.367940,-9.925478,-9.061371,-0.794090,5.041955,-2.934641,-5.354522,7.743630,3.504908,-6.238211,3.326430,-8.290662,2.581201,7.883882,1.267343,-5.519565,-3.994029,0.622316,-3.214544,7.707825,3.296037,1.123015,1.205080,-9.391022,-7.343620,9.637349,-9.751521,-6.056761,0.886858,2.654478,5.309927,6.054519,-6.654795,-7.272466,-6.331373,-6.430739,6.729443,7.132387,4.407620,0.820800,9.700311,7.943947,2.045757,3.206315,-2.937501,6.874263,5.619324,9.953653,5.909524,-2.684713,9.644044,9.600698,-0.658498,-9.033189,1.999219,3.430570,-1.519365,-4.789542,3.564185,-8.888245,-2.153640,7.817734,1.573301,6.620504,6.372157,-8.930220,5.878854,1.101477,3.803511,0.571184,-1.871459,1.435559,6.861499,-9.597839,0.936409,-6.244224,-3.273202,2.613715,-9.406934,-8.137833,-1.891484,0.425297,-9.489699,2.055606,-8.840483,-4.711614,-5.145914,8.548825,1.192983,-5.043297,-5.519181,-6.564172,-2.635172,-8.604217,6.401553,-1.490959,-7.938817,4.902672,9.651928,-4.928835,5.443307,-3.376931,-7.784911,1.961773,8.769548,-7.198677,1.386790,-1.536076,1.593345,-4.868758,7.067703,-8.122186,-9.476293,-3.315072,7.205317,2.638267,-5.934284,-2.664580,8.780613,-6.676730,0.623425,7.042737,-7.045501,-7.079525,-7.288164,-8.122369,-6.604773,9.571158,-4.354624,-9.808043,-4.811944,-0.202581,5.670941,6.760844,-4.977542,1.842312,1.651580,-0.451576,-2.502180,7.335660,-6.689418,-1.662232,-7.676843,9.617603,4.983442,-0.797450,-3.090951,-9.213488,0.631990,-0.004062,-3.118470,4.762263,-1.641983,0.156751,1.933238,-6.526659,-9.779389,-8.378362,-7.537984,2.792828,2.335065,-4.441415,-1.403010,1.596180,-0.080056,2.530352,9.680438,-7.162677,4.331483,-3.366370,-0.839674,-1.309396,9.250189,-1.907629,-9.908915,9.468464,2.669729,1.685609,3.067542,-5.003708,0.759820,-3.956482,-5.047673,-3.703841,-9.109202,-3.043369,8.001351,1.725499,2.861384,4.309410,3.968770,9.816313,-9.048593,-7.582671,9.920725,2.103742,-6.873797,2.132605,0.555744,-7.330732,-3.611875,-0.344101,4.220494,-5.147316,3.754172,8.657706,4.952767,-7.815775,9.594329,5.953679,8.375387,5.958860,-6.011422,-4.670088,5.873208,4.709766,-1.145814,6.065895,6.521266,-5.935539,7.631489,1.287370,3.999903,-9.419703,-4.362260,7.114425,3.124302,4.814567,-9.486013,4.461487,7.521299,7.039007,-9.869659,6.825334,4.104692,8.553061,9.626834,3.785758,-8.152120,-6.997325,1.089501,-9.518398,-5.882466,-5.274655,1.581958,-3.471626,-0.831625,-7.796611,2.437285,-8.843587,-5.563764,9.001434,-4.256199,-3.741610,0.054202,1.432507,-9.634425,4.062272,6.361009,3.756669,8.952874,2.881287,-6.831730,-6.280580,-2.728741,-7.867045,-4.518294,-5.057742,-8.882981,6.188284,2.240529,-3.045367,-3.390220,2.813772,4.253434,2.789555,-9.885973,-1.495713,-2.954312,-6.598651,5.233255,5.177088,6.915413,-4.641198,-5.252452,4.860318,-8.457987,-0.728184,4.799290,-7.423501,-1.320093,3.460182,0.710920,3.620270,-5.205474,-3.526066,-3.101673,-8.398933,5.810373,0.570075,-4.896971,-7.666822,-8.610539,-2.733977,-9.012087,-2.400054,-3.188391,6.192006,6.081092,7.107386,7.816972,9.990733,-6.217198,3.269077,-0.980245,5.795725,8.666414,0.598290,-6.660524,8.279384,5.214846,-4.609821,3.678607,9.019915,-2.551453,-6.117390,-9.571519,-3.442896,3.128407,-0.996960,-4.537836,2.552732,5.928783,-4.158501,-3.117505,-7.026502,9.380453,3.500493,7.182113,-1.445538,0.639115,1.184600,-0.063519,-2.891545,2.980519,-5.163147,6.895157,3.296561,-2.065472,-6.583794,4.400713,-2.113965,9.112524,7.988750,-6.312923,0.517199,-1.010067,1.807913,-2.855133,1.676870,9.704453,6.872082,4.175870,6.941645,-8.539887,-9.218163,3.617866,9.925977,-9.808916,1.305710,-5.959297,-8.537142,4.228471,9.228253,-1.743797,3.894331,-2.144206,-4.377269,1.880282,-8.680840,1.530288,0.817571,7.409717,-9.530310,0.556223,6.718023,-1.443630,-2.290608,8.089006,6.667366,-4.824705,7.790711,0.151257,-3.191521,-8.234004,0.041184,7.979412,-4.879465,1.409010,-7.683929,-2.878747,-8.973324,-9.628754,-5.190286,-8.729030,9.340892,-8.660291,-5.673355,-0.955190,-2.352755,5.025640,-8.676004,-5.681945,4.566896,3.684236,-4.856729,8.782885,-5.417292,3.998764,-1.799274,-9.922549,3.464291,-9.514606,8.147355,-4.926717,2.618121,0.638472,6.698172,-5.825920,7.765035,-6.918875,0.628437,-0.113247,4.017079,-8.211040,7.371373,4.891538,8.990312,-6.446162,-1.492641,-4.553502,-2.588652,-1.918944,3.260238,0.408928,-7.803682,-5.990130,6.818252,-0.066993,3.304191,-0.892525,1.997952,2.620854,-1.438464,2.323038,-9.583242,-0.911469,3.929401,-0.537634,-7.905640,8.086239,-2.432590,-4.376785,-9.557735,-7.959989,-5.842953,6.704344,8.991718,-2.231282,-6.220142,-9.003151,-9.093947,-7.892458,4.977147,-2.397265,-3.313159,3.320948,-0.575956,-3.529068,-1.218395,-7.969272,-0.283408,-8.410474,-3.515762,6.818122,5.434601,2.304447,-8.835993,6.128067,7.608267,8.657707,-8.246076,-5.612201,5.986867,4.506973,2.648005,-0.116805,2.103744,1.231546,2.982646,8.351950,0.677034,-5.679578,-6.674678,8.629681,-6.278638,6.819275,1.534924,2.750472,-9.382287,-3.696299,-7.787939,0.019571,-0.342616,2.292386,8.036259,-7.327475,9.990833,0.649293,-5.448549,6.800215,1.359190,1.399187,-1.134218,2.141774,-1.764557,0.084936,-7.468637,-5.073009,4.327747,5.530555,-4.345523,1.083795,-4.927916,1.803326,-8.209373,2.671861,3.720779,-6.674602,0.124472,3.567758,-3.264631,-7.113565,5.256444,2.229217,-3.435954,-6.319586,-6.613407,0.108196,-3.990462,7.106994,2.240480,-3.077421,-9.434256,8.187062,3.265887,1.138270,9.341458,-4.458811,-7.705964,2.831590,-2.937862,-0.012473,-9.043730,-5.476379,-8.854872,0.223985,-9.854282,9.570583,-4.162347,6.743785,1.250855,1.607673,-7.140934,5.935757,9.613356,-0.697036,-0.957439,-4.778934,-3.585917,4.320306,9.530701,-6.926782,8.929509,-1.234998,-0.324143,1.336570,-6.057276,-7.743776,-1.448018,7.191641,7.716029,-6.558190,-6.446628,-4.315685,3.314354,-2.391147,-5.217528,-0.781142,-9.919516,7.988377,-7.114640,-8.169023,-4.899171,-7.805785,-1.365195,-5.399212,3.464604,-2.998800,-3.927134,-0.730434,-6.229224,-6.827263,9.474289,-3.024859,2.809853,1.300275,-6.886057,-8.806721,-4.313848,-2.987065,-4.739774,-0.521210,6.511002,-8.864984,6.876512,7.521944,3.723508,-5.855293,-9.098540,-5.185226,2.270866,-0.474340,5.083576,-0.297444,8.514607,-6.681363,2.873425,1.167703,6.608549,-5.236302,-3.573467,3.714865,4.488607,-0.232694,-4.168553,3.728541,-7.539245,-5.492563,-2.732134,-5.471546,5.979875,-9.641491,6.586208,1.814955,3.936846,-1.413145,7.839288,7.350568,4.699318,-5.398793,-6.316682], dtype = "float64")#candidate|2641|(896,)|const|float64
call_2640 = relay.TupleGetItem(func_1204_call(relay.reshape(const_2641.astype('float64'), [16, 4, 14])), 0)
call_2642 = relay.TupleGetItem(func_1207_call(relay.reshape(const_2641.astype('float64'), [16, 4, 14])), 0)
output = relay.Tuple([bop_2627,call_2640,const_2641,])
output2 = relay.Tuple([bop_2627,call_2642,const_2641,])
func_2644 = relay.Function([var_2625,var_2626,], output)
mod['func_2644'] = func_2644
mod = relay.transform.InferType()(mod)
mutated_mod['func_2644'] = func_2644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2644_call = mutated_mod.get_global_var('func_2644')
var_2646 = relay.var("var_2646", dtype = "uint8", shape = (4, 10, 14))#candidate|2646|(4, 10, 14)|var|uint8
var_2647 = relay.var("var_2647", dtype = "uint8", shape = (4, 10, 14))#candidate|2647|(4, 10, 14)|var|uint8
call_2645 = func_2644_call(var_2646,var_2647,)
output = call_2645
func_2648 = relay.Function([var_2646,var_2647,], output)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2716 = relay.var("var_2716", dtype = "float64", shape = (15, 14, 7))#candidate|2716|(15, 14, 7)|var|float64
uop_2717 = relay.sinh(var_2716.astype('float64')) # shape=(15, 14, 7)
bop_2722 = relay.not_equal(uop_2717.astype('bool'), relay.reshape(var_2716.astype('bool'), relay.shape_of(uop_2717))) # shape=(15, 14, 7)
bop_2729 = relay.equal(uop_2717.astype('bool'), relay.reshape(bop_2722.astype('bool'), relay.shape_of(uop_2717))) # shape=(15, 14, 7)
output = bop_2729
output2 = bop_2729
func_2733 = relay.Function([var_2716,], output)
mod['func_2733'] = func_2733
mod = relay.transform.InferType()(mod)
var_2734 = relay.var("var_2734", dtype = "float64", shape = (15, 14, 7))#candidate|2734|(15, 14, 7)|var|float64
output = func_2733(var_2734)
func_2735 = relay.Function([var_2734], output)
mutated_mod['func_2735'] = func_2735
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2799 = relay.const(7, dtype = "int16")#candidate|2799|()|const|int16
var_2800 = relay.var("var_2800", dtype = "int16", shape = (13, 12, 2))#candidate|2800|(13, 12, 2)|var|int16
bop_2801 = relay.less_equal(const_2799.astype('bool'), var_2800.astype('bool')) # shape=(13, 12, 2)
bop_2804 = relay.logical_and(bop_2801.astype('bool'), const_2799.astype('bool')) # shape=(13, 12, 2)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
const_2811 = relay.const([-8,9,-3,-6,9,-3,-10,2,-6,7,-5,-9,1,3,-8,-7,9,6,6,-6,-3,-4,7,5,2,-9,10,3,-8,7,5,4,1,5,-9,-10,8,-7,2,10,-5,1,9,-7,2,-2,-1,10,-6,9,4,10,-5,-10,-9,3,9,9,9,4,-1,8,-3,-4,-3,-4,2,2,-1,8,-1,5,-6,8,2,9,-8,-5,-5,-2,2,9,10,-3,4,-2,-4,-6,3,8,-8,7,1,-9,-3,-9,8,2,9,-10,9,-9,1,3,-1,-7,5,-5,10,-5,8,1,-1,-4,8,-3,-8,-10,-10,-4,2,-10,-9,-5,10,3,5,-3,-7,-7,3,-4,4,3,-6,5,-10,7,1,-10,2,-10,-9,3,2,-3,-10,5,2,10,-4,-10,-1,6,8,4,9,-9,8,4,-4,2,-5,-9,-6,-9,-5,7,-7,-9,-8,7,8,-8,9,-6,-1,6,7,7,6,6,-6,-7,-7,-7,1,4,1,-8,6,-5,2,4,-9,-7,-8,8,5,4,4,-8,-5,-6,8,9,6,2,-7,1,9,3,-10,-1,6,8,-9,5,-1,-10,-5,-3,-5,2,1,-8,-1,8,-1,6,-8,-9,1,1,-7,10,-2,-4,6,-8,9,-9,-10,2,8,1,2,-3,4,-4,-4,4,7,-4,-3,-4,-2,-5,-10,4,-4,-5,4,9,1,10,10,-3,1,-4,2,9,8,4,2,7,-2,-4,10,4,-1,-9,6,1,-9,-4,-10,-5,-10,8,7,-9,8,5,1,1,2,4,-4,-7,-8,6,-5,-8,-9,6,2,7,1,9,-9,-3,-2,1,1,-1,-1,9,-7,9,-3,-4,-10,-4,10,2,-6,2,-1,-6,-5,3,3,1,1,5,-5,-9,-9,8,8,1,-5,6,8,-10,8,-8,-7,10,-9,2,-6,-10,3,4,-8,-9,-8,10,-6,8,6,-4,4,-1,-1,-8,-3,9,8,9,-8,8,-3,1,-9,-3,4,-7,3,1,10,-8,8,1,1,-2,10,5,8,-5,5,-1,-7,-7,-6,-4,-8,1,10,-3,-4,1,5,-9,4,-10,-4,-7,-7,3,5,-2,-2,10,-7,-4,-8,-6,3,-7,-1,-5,8,-8,-8,-10,10,5,-9,3,-8,6,2,-10,-9,-1,4,7,-7,8,-8,8,4,-10,-6,8,2,9,-8,-8,-8,7,-6,-5,-9,-8,-5,7,-10,4,-9,-2,-8,4,4,5,4,3,6,3,-4,4,-9,-1,-7,-7,-5,9,3,-1,9,6,-8,3,10,-3,7,6,-10,7,9,-6,-4,-2,-10,4,7,-3,1,-2,2,-7,-3,-4,-9,-10,6,7,-3,-7,-9,4,-2,-2,-3,-6,-10,-3,-8,-7,8,7,5,4,-10,1,-3,-7,2,-8,6,9,8,10,-8,5,2,2,6,5,10,-7,-3,-7,-6,1,10,-7,-1,-6,-1,7,-3,-3,8,8,6,-10,-2,5,4,9,5,10,-2,-6,-7,10,-5,-2,-5,-10,6,1,9,-5,1,6,-1,-1,-3,7,4,-4,4,-2,6,9,6,-1,5,7,-1,1,9,4,1,-6,3,-3,-5,6,-9,-5,-5,9,4,6,-10,9,1,5,-7,8,-8,6,8,-5,7,1,8,-3,-9,-10,-6,-10,4,-8,6,-2,-6,10,-10,-10,-4,-10,2,-7,-2,2,7,4,9,4,-7,2,5,-7,6,4,8,-4,-7,1,-9,-7,7,2,3,-3,-2,-4,-6,6,6,-4,5,-5,9,2,-3,8,10,7,-6,4,7,7,-8,-5,-4,-1,7,1,-5,7,4,7,-3,-9,-7,7,10,-7,-8,5,3,10,3,7,-8,6,-10,-8,-7,2,-2,8,-6,2,-9,-5,-2,-2,8,-3,-6,10], dtype = "int64")#candidate|2811|(720,)|const|int64
call_2810 = relay.TupleGetItem(func_1412_call(relay.reshape(const_2811.astype('int64'), [4, 15, 12])), 0)
call_2812 = relay.TupleGetItem(func_1414_call(relay.reshape(const_2811.astype('int64'), [4, 15, 12])), 0)
uop_2814 = relay.cosh(call_2810.astype('float32')) # shape=(4, 15, 12)
uop_2816 = relay.cosh(call_2812.astype('float32')) # shape=(4, 15, 12)
bop_2820 = relay.bitwise_and(uop_2814.astype('int16'), const_2799.astype('int16')) # shape=(4, 15, 12)
bop_2823 = relay.bitwise_and(uop_2816.astype('int16'), const_2799.astype('int16')) # shape=(4, 15, 12)
bop_2824 = relay.left_shift(uop_2814.astype('uint8'), relay.reshape(bop_2820.astype('uint8'), relay.shape_of(uop_2814))) # shape=(4, 15, 12)
bop_2827 = relay.left_shift(uop_2816.astype('uint8'), relay.reshape(bop_2823.astype('uint8'), relay.shape_of(uop_2816))) # shape=(4, 15, 12)
bop_2828 = relay.power(bop_2801.astype('float32'), const_2799.astype('float32')) # shape=(13, 12, 2)
func_1637_call = mod.get_global_var('func_1637')
func_1641_call = mutated_mod.get_global_var('func_1641')
var_2839 = relay.var("var_2839", dtype = "uint32", shape = (1152,))#candidate|2839|(1152,)|var|uint32
call_2838 = func_1637_call(relay.reshape(var_2839.astype('uint32'), [6, 16, 12]), relay.reshape(var_2839.astype('uint32'), [6, 16, 12]), )
call_2840 = func_1637_call(relay.reshape(var_2839.astype('uint32'), [6, 16, 12]), relay.reshape(var_2839.astype('uint32'), [6, 16, 12]), )
output = relay.Tuple([bop_2804,const_2811,bop_2824,bop_2828,call_2838,var_2839,])
output2 = relay.Tuple([bop_2804,const_2811,bop_2827,bop_2828,call_2840,var_2839,])
func_2843 = relay.Function([var_2800,var_2839,], output)
mod['func_2843'] = func_2843
mod = relay.transform.InferType()(mod)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mutated_mod.get_global_var('func_2843')
var_2845 = relay.var("var_2845", dtype = "int16", shape = (13, 12, 2))#candidate|2845|(13, 12, 2)|var|int16
var_2846 = relay.var("var_2846", dtype = "uint32", shape = (1152,))#candidate|2846|(1152,)|var|uint32
call_2844 = func_2843_call(var_2845,var_2846,)
output = call_2844
func_2847 = relay.Function([var_2845,var_2846,], output)
mutated_mod['func_2847'] = func_2847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2951 = relay.var("var_2951", dtype = "float32", shape = ())#candidate|2951|()|var|float32
var_2952 = relay.var("var_2952", dtype = "float32", shape = (4, 9, 3))#candidate|2952|(4, 9, 3)|var|float32
bop_2953 = relay.floor_mod(var_2951.astype('float32'), var_2952.astype('float32')) # shape=(4, 9, 3)
output = relay.Tuple([bop_2953,])
output2 = relay.Tuple([bop_2953,])
func_2974 = relay.Function([var_2951,var_2952,], output)
mod['func_2974'] = func_2974
mod = relay.transform.InferType()(mod)
var_2975 = relay.var("var_2975", dtype = "float32", shape = ())#candidate|2975|()|var|float32
var_2976 = relay.var("var_2976", dtype = "float32", shape = (4, 9, 3))#candidate|2976|(4, 9, 3)|var|float32
output = func_2974(var_2975,var_2976,)
func_2977 = relay.Function([var_2975,var_2976,], output)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3037 = relay.var("var_3037", dtype = "float32", shape = (3, 4, 7))#candidate|3037|(3, 4, 7)|var|float32
uop_3038 = relay.log(var_3037.astype('float32')) # shape=(3, 4, 7)
uop_3045 = relay.atanh(uop_3038.astype('float32')) # shape=(3, 4, 7)
output = relay.Tuple([uop_3045,])
output2 = relay.Tuple([uop_3045,])
func_3049 = relay.Function([var_3037,], output)
mod['func_3049'] = func_3049
mod = relay.transform.InferType()(mod)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3050 = relay.var("var_3050", dtype = "float32", shape = (3, 4, 7))#candidate|3050|(3, 4, 7)|var|float32
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3051 = func_3049_call(var_3050)
output = call_3051
func_3052 = relay.Function([var_3050], output)
mutated_mod['func_3052'] = func_3052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3186 = relay.var("var_3186", dtype = "float64", shape = (2, 12, 15))#candidate|3186|(2, 12, 15)|var|float64
uop_3187 = relay.cosh(var_3186.astype('float64')) # shape=(2, 12, 15)
var_3189 = relay.var("var_3189", dtype = "float64", shape = (2, 12, 15))#candidate|3189|(2, 12, 15)|var|float64
bop_3190 = relay.maximum(uop_3187.astype('int32'), relay.reshape(var_3189.astype('int32'), relay.shape_of(uop_3187))) # shape=(2, 12, 15)
output = relay.Tuple([bop_3190,])
output2 = relay.Tuple([bop_3190,])
func_3196 = relay.Function([var_3186,var_3189,], output)
mod['func_3196'] = func_3196
mod = relay.transform.InferType()(mod)
var_3197 = relay.var("var_3197", dtype = "float64", shape = (2, 12, 15))#candidate|3197|(2, 12, 15)|var|float64
var_3198 = relay.var("var_3198", dtype = "float64", shape = (2, 12, 15))#candidate|3198|(2, 12, 15)|var|float64
output = func_3196(var_3197,var_3198,)
func_3199 = relay.Function([var_3197,var_3198,], output)
mutated_mod['func_3199'] = func_3199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3226 = relay.var("var_3226", dtype = "float32", shape = (12, 1, 5))#candidate|3226|(12, 1, 5)|var|float32
uop_3227 = relay.log10(var_3226.astype('float32')) # shape=(12, 1, 5)
var_3232 = relay.var("var_3232", dtype = "float32", shape = (12, 16, 5))#candidate|3232|(12, 16, 5)|var|float32
bop_3233 = relay.bitwise_xor(uop_3227.astype('uint8'), var_3232.astype('uint8')) # shape=(12, 16, 5)
output = relay.Tuple([bop_3233,])
output2 = relay.Tuple([bop_3233,])
func_3244 = relay.Function([var_3226,var_3232,], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mutated_mod.get_global_var('func_3244')
var_3246 = relay.var("var_3246", dtype = "float32", shape = (12, 1, 5))#candidate|3246|(12, 1, 5)|var|float32
var_3247 = relay.var("var_3247", dtype = "float32", shape = (12, 16, 5))#candidate|3247|(12, 16, 5)|var|float32
call_3245 = func_3244_call(var_3246,var_3247,)
output = call_3245
func_3248 = relay.Function([var_3246,var_3247,], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3307 = relay.var("var_3307", dtype = "int64", shape = (14, 11, 13))#candidate|3307|(14, 11, 13)|var|int64
var_3308 = relay.var("var_3308", dtype = "int64", shape = (14, 11, 13))#candidate|3308|(14, 11, 13)|var|int64
bop_3309 = relay.greater(var_3307.astype('bool'), relay.reshape(var_3308.astype('bool'), relay.shape_of(var_3307))) # shape=(14, 11, 13)
output = bop_3309
output2 = bop_3309
func_3312 = relay.Function([var_3307,var_3308,], output)
mod['func_3312'] = func_3312
mod = relay.transform.InferType()(mod)
var_3313 = relay.var("var_3313", dtype = "int64", shape = (14, 11, 13))#candidate|3313|(14, 11, 13)|var|int64
var_3314 = relay.var("var_3314", dtype = "int64", shape = (14, 11, 13))#candidate|3314|(14, 11, 13)|var|int64
output = func_3312(var_3313,var_3314,)
func_3315 = relay.Function([var_3313,var_3314,], output)
mutated_mod['func_3315'] = func_3315
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3364 = relay.const([[[8,3,6,8,8,10,1,-2,-9,6]],[[3,4,8,-3,-1,-5,6,3,-1,-6]],[[9,3,-7,5,-8,-6,5,-9,9,7]]], dtype = "int16")#candidate|3364|(3, 1, 10)|const|int16
const_3365 = relay.const([[[-1,1,8,6,-1,1,9,8,2,4],[-9,9,-1,-1,-8,-2,1,2,-5,5]],[[-5,1,2,7,7,5,-2,3,1,-4],[7,8,9,-9,-10,2,1,-9,-3,1]],[[8,6,-8,-5,-5,10,5,9,-9,8],[-3,7,6,-6,-2,8,3,-2,-5,2]]], dtype = "int16")#candidate|3365|(3, 2, 10)|const|int16
bop_3366 = relay.bitwise_or(const_3364.astype('int16'), const_3365.astype('int16')) # shape=(3, 2, 10)
func_234_call = mod.get_global_var('func_234')
func_237_call = mutated_mod.get_global_var('func_237')
const_3375 = relay.const([-8,3,6,-2,-1,10,7,10,-7,-8,-5,9,-9,4,-8,3,7,-10,9,-3,-8,-10,2,4,6,-4,-6,5,-9,-5,-3,5,-4,6,-8,-4,9,1,5,5,-9,4,-2,-1,9,10,-4,-1,-1,-2,5,-5,-9,8,-2,-7,1,-6,-2,6,3,-3,-2,-5,-1,-3,-10,-1,-3,-5,3,5,3,9,-8,-7,10,8,-4,6,-8,4,-7,9,5,4,5,-3,1,-8,-6,10,4,-9,-10,8,6,-10,-8,-3,-4,-10,-8,-9,-7,-10,1,1,9,-8,9,-9,-7,-9,7,-7,-1,-9,-3,10,5,-3,1,6,3,8,-1,8,5,2,-9,2,7,1,-2,-10,-10,-7,-6,-2,8,-1,-9,6,6,10,8,-7,5,-5,-8,6,-7,-10,8,1,4,-3,-3,-8,9,-6,10,-2,-9,4,3,7,4,4,-9,-8,-9,7,1,2,-3,-7,-2,-2,7,10,7,-1,-3,5,-9,7,5,9,9,-8,-10,9,-3,4,-4,-1,10,-4], dtype = "uint16")#candidate|3375|(200,)|const|uint16
call_3374 = func_234_call(relay.reshape(const_3375.astype('uint16'), [10, 5, 4]))
call_3376 = func_234_call(relay.reshape(const_3375.astype('uint16'), [10, 5, 4]))
output = relay.Tuple([bop_3366,call_3374,const_3375,])
output2 = relay.Tuple([bop_3366,call_3376,const_3375,])
func_3378 = relay.Function([], output)
mod['func_3378'] = func_3378
mod = relay.transform.InferType()(mod)
mutated_mod['func_3378'] = func_3378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mutated_mod.get_global_var('func_3378')
call_3379 = func_3378_call()
output = call_3379
func_3380 = relay.Function([], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3383 = relay.TupleGetItem(func_3378_call(), 0)
call_3384 = relay.TupleGetItem(func_3380_call(), 0)
const_3385 = relay.const([[[8,5,6,4,4,-8,-5,2,-6,-8],[1,-10,-2,-4,3,-9,3,-1,-2,2]],[[9,4,6,6,1,7,-7,-8,9,4],[-9,5,4,2,2,-2,4,3,-2,-2]],[[-4,-6,3,10,6,-3,6,9,-5,8],[5,-6,-5,-10,9,-1,-10,-6,1,-4]]], dtype = "int16")#candidate|3385|(3, 2, 10)|const|int16
bop_3386 = relay.multiply(call_3383.astype('uint16'), relay.reshape(const_3385.astype('uint16'), relay.shape_of(call_3383))) # shape=(3, 2, 10)
bop_3389 = relay.multiply(call_3384.astype('uint16'), relay.reshape(const_3385.astype('uint16'), relay.shape_of(call_3384))) # shape=(3, 2, 10)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
var_3400 = relay.var("var_3400", dtype = "float32", shape = (525,))#candidate|3400|(525,)|var|float32
call_3399 = func_698_call(relay.reshape(var_3400.astype('float32'), [15, 7, 5]))
call_3401 = func_698_call(relay.reshape(var_3400.astype('float32'), [15, 7, 5]))
uop_3408 = relay.sigmoid(call_3383.astype('float64')) # shape=(3, 2, 10)
uop_3410 = relay.sigmoid(call_3384.astype('float64')) # shape=(3, 2, 10)
output = relay.Tuple([bop_3386,call_3399,var_3400,uop_3408,])
output2 = relay.Tuple([bop_3389,call_3401,var_3400,uop_3410,])
func_3411 = relay.Function([var_3400,], output)
mod['func_3411'] = func_3411
mod = relay.transform.InferType()(mod)
mutated_mod['func_3411'] = func_3411
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3412 = relay.var("var_3412", dtype = "float32", shape = (525,))#candidate|3412|(525,)|var|float32
func_3411_call = mutated_mod.get_global_var('func_3411')
call_3413 = func_3411_call(var_3412)
output = call_3413
func_3414 = relay.Function([var_3412], output)
mutated_mod['func_3414'] = func_3414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3425 = relay.TupleGetItem(func_3378_call(), 2)
call_3426 = relay.TupleGetItem(func_3380_call(), 2)
func_2543_call = mod.get_global_var('func_2543')
func_2549_call = mutated_mod.get_global_var('func_2549')
var_3428 = relay.var("var_3428", dtype = "float32", shape = (198,))#candidate|3428|(198,)|var|float32
const_3429 = relay.const([-6.990772,7.877136,0.314694,5.020384,6.682396,2.097222,-6.820920,-1.562751,0.642141,-3.986335,-9.265328,1.960102,-7.825102,-2.707908,-2.633725,-8.928946,-9.779443,2.975671,-0.003705,-5.873592,-9.857957,9.954743,-3.792327,8.725935,-5.152957,-0.627583,-1.678901,5.553552,-4.948018,-5.633988,2.697319,-7.804698,-3.687157,-7.313391,-8.161026,-4.088915,-4.137577,-6.808493,-7.246739,4.860197,8.366931,0.096695,9.085508,-0.360625,-9.760834,-3.656729,0.749280,4.108283,-7.927498,-1.942631,3.489274,4.239567,-8.384601,-8.129256,-3.061071,-5.090759,-4.702045,7.869012,-0.221103,4.820749,-0.505765,9.170401,-1.969301,9.230538,-2.537263,-8.562507,4.613892,2.128722,6.094612,-9.366479,2.229783,6.856249,-6.892783,1.104881,-1.889958,-9.917030,9.321265,-2.290872,-3.720794,-5.169047,5.831309,-1.100972,0.460419,9.300470,-8.797827,-5.112692,-0.078441,0.939386,-5.876585,1.867351,5.143756,6.218220,7.871164,0.035629,7.479067,-2.509802,-1.265413,3.095097,5.163408,-8.278577,-3.518804,4.596717,-3.337572,-6.672171,-0.534114,7.858237,1.048701,-0.056828,-4.625705,-3.515229,0.479041,-5.118066,-7.073276,5.573612,-9.724937,3.302911,-3.520697,8.685932,2.076246,8.087693,-2.637368,4.028064,7.802288,-1.697667,6.521569,-3.448979,-4.303167,-7.788270,-2.093162,-6.569771,7.949404,-0.056734,-4.076001,-4.702996,1.506425,3.822549,-4.775727,3.842941,-8.275854,3.486710,-1.150877,0.072919,0.323402,6.368597,7.321652,-9.846763,6.453055,4.178496,0.922908,6.283767,5.387656,-2.553937,-3.176292,-0.162674,8.576620,-2.408836,9.298000,-2.954065,-1.650030,-3.422930,6.097975,-0.591622,9.649314,4.588662,-9.719403,2.646164,7.698392,2.946992,8.926311,3.877357,-2.311481,0.697870,0.555114,-4.611299,0.882893,3.939582,5.070958,-7.735174,5.214627,0.146356,-2.247179,-3.217804,-6.206989,9.879886,3.810926,8.682212,4.952113,6.042620,-0.753260,-1.172308,-2.648337,6.601668,4.894945,8.215725,0.696614,-7.281808,0.873681,9.138829,1.908365,-6.730983,1.062904,-4.097410,-7.932132,1.426308,6.651036,-5.857519,-1.834592,6.342680,9.837205,-4.762910,-5.612052,8.154579,0.095341,4.789997,1.959850,0.571259,2.929536,1.281742,7.028468,8.885614,-6.671189,2.363259,9.756018,3.918947,1.652740,0.601691,-4.525610,1.360858,3.349170,-5.561989,-7.118115,-5.989348,9.614135,0.863195,-8.241713,2.774631,9.286355,6.108544,-4.056422,1.586207,3.067107,1.815083,1.850579,0.584531,2.895580,-7.620866,-7.566868,-4.979745,-0.581235,-4.676689,-3.999779,-0.239823,-3.981350,-8.004598,-3.561587,-9.119064,-2.599497,6.884229,2.378404,-5.319370,2.169351,-2.946333,5.578048,7.038879,2.561004,8.970709,-2.195757,8.289163,9.984927,0.633644,9.928310,4.143876,5.034887,-5.207421,-3.766608,7.188773,7.577007,4.338964,-4.796881,-9.619277,-2.854176,4.363492,0.277399,-9.897610,-4.514688,-0.283314,6.677407,3.836973,9.991807,5.259022,9.711205,8.462744,7.677437,9.234309,2.411266,2.385492,3.052960,-0.630508,6.235060,-4.639059,-1.663177,3.468388,-7.249593,-4.674276,-1.122942,6.575458,0.931224,-2.569176,5.838792,-3.364296,-6.418290,8.088069,3.289706,-3.124642,-7.815029,-6.436741,-6.569551,-4.777620,4.324024,-8.281441,5.080042,1.692847,-4.889694,9.674997,1.707392,-2.945068,7.864474,-1.082069,-6.717001,3.011200,5.290464,9.441418,9.499861,-4.648682,5.897368,7.840676,1.380452,6.077641,-7.858780,3.049358,-2.850575,7.173293,8.807159,-7.332684,3.219675,-3.420490,-1.409686,-5.364443,-1.941525,-4.805914,2.395805,-8.571095,-9.304814,-5.562479,-6.657720,-3.771110,6.766135,-9.179010,5.044287,-2.978687,-4.748863,3.804024,3.772731,-2.547543,3.297231,9.298347,-6.924727,5.610536,4.603636,-0.470069,8.969210,-7.362462,-0.030509,-6.262162,-8.809286,-1.501888,8.303736,1.159036,6.560738,-8.740813,-2.151291,4.230336,0.876425,8.365083,-8.575395,-0.525001,-0.677836,2.274537,2.123389,6.183612,-7.964090,-2.948973,0.392367,-2.459345,-8.768579,3.019405,-0.801674,1.388097,1.633269,-0.728015,-0.148115,-3.615231,-3.489297,-1.750471,5.335869,3.577495,5.069271,1.390651,3.556702,-3.436484,6.190636,-5.737352,-7.907982,2.130097,-6.944985,-3.721841,8.746781,3.521585,-1.270941,1.341937,8.979030,0.964089,9.715899,-7.075565,3.929126,-7.693064,-9.435821,-6.321115,-7.642933,9.871961,-4.060108,-3.310026,-1.429048,1.062543,9.582264,-4.954099,9.692376,7.247126,-5.866100,6.243178,-2.459300,-2.093302,-6.975091,-4.845953,5.680836,0.077575,0.679458,3.383759,6.045657,-2.372780,7.488834,-9.979284,-5.660194,3.634097,0.319435,-2.565892,-0.535870,-8.883129,-8.688754,-0.969191,-5.726477,2.099455,5.717297,5.767676,8.053564,0.303716,-0.082431,1.080269,6.982764,-3.479887,3.399067,7.389592,7.880818,-0.028488,-9.523470,9.478326,-5.264024,-4.281870,2.288338,-8.380351,2.776020,-7.775610,1.692643,-7.220761,-5.889668,3.150699,-1.281198,-9.336541,4.484431,7.290316,3.040476,-5.347204,2.812732,1.257862,2.616654,9.426248,2.182928,-1.106529,2.126624,8.101882,6.379195,3.929261,9.515396,-4.413880,-2.737778,-9.334050,-6.425652,9.367707,7.118898,5.763105,-3.310937,7.431112,-0.474206,1.149068,0.601562,7.922982,4.762028,-5.611941,-0.907852,3.587574,-5.685925,-8.954182,3.598662,-0.819702,-2.744391,7.500505,-5.328100,-8.918908,-2.458559,-9.598036,2.914502,5.303767,-5.641372,8.464382,-8.672774,8.267804,9.272380,3.382268,8.235895,6.296335,5.070031,-3.828282,-7.461356,-0.260300,-4.917872,-6.132332,1.081401,4.036837,8.861204,-5.067321,6.080052,-8.510610,-8.546133,3.744416,2.407076,9.988700,3.633661,-3.228164,8.388219,5.839251,9.852858,7.138359,1.432025,-3.723767,8.295148,-7.523355,-1.671585,2.706323,-6.008098,-9.251621,-1.994481,7.057234,6.068535,3.918197,-5.747644,3.406285,-5.297686,-0.956551,7.283422,-7.608724,-5.814597,4.826518,1.221498,5.983892,-4.347227,9.278858,6.927559,-2.014406,-9.608442,5.076382,-0.055871,-1.928787,2.908058,-8.395664,1.193285,-2.276856,0.305617,-4.135169,-2.637334,0.325299,5.429666,3.066522,3.851808,5.280679,7.855212,-2.258808,1.198483,-9.502879,-4.403717,2.887830,8.715374,4.944241,-5.629335,4.429079,3.357924,9.110752,7.310943,6.670888,-9.104806,-8.247014,-3.097199,-0.468148,8.020597,-4.949392,5.457258,2.402357,8.464792,-4.210400,-2.141875,5.152598,-8.171345,-3.707739,1.356311,-5.756914,9.979907,-6.886904,3.045398,6.637241,0.865926,-2.050034,-6.895795,-8.864685,-3.820029,6.614488,-4.271558,-4.711845,8.068395,0.228009,6.253535,-3.359728,-5.791342,-7.221431,0.875584,7.638095,7.973945,-9.640002,7.128162,-5.067451,8.976775,4.330418,-4.377802,-6.190788,-7.419155,-1.807504,6.106836,-5.355388,2.166844,4.240376,1.733034,-8.540754,2.317089,-0.815048,6.170207,-4.499121,-8.795406,-1.745109,-1.491410,-4.326264,-9.266836,-4.909382,0.541134,-2.788284,7.774640,-3.760649,-2.194695,7.720666,7.868583,-9.272139,-2.941569,6.668725,-7.266728,7.141753,-4.095557,-9.021489,6.719796,-7.054163,6.951398,1.558724,-5.509327,0.935032,-8.241095,-8.595625,-2.260853,-8.577461,-0.217059,8.315521,-2.646399,3.342507,-4.146471,5.089324,-3.319350,3.113881,-1.090675,-1.989736,-9.999293,4.475811,-0.408946,-5.289102,3.375988,-8.136233,-6.120752,-0.021027,-1.968650,4.497450,2.939220,-2.219019,-5.526276,-2.430632,1.344799,1.008319,-9.268504,-9.888895,0.165497,-4.311842,-9.592900,-8.785917,-1.451105,8.643889,-7.347181,-5.481649,0.349019,1.205271,-9.824216,9.435939,-7.405624,6.826405,7.336554,8.406036,-6.796343,4.930560,-9.602336,6.646998,4.032829,-8.715653,6.650309,7.735649,3.537267,-9.898169,-6.258541,3.852403,-9.865415,-7.907710,7.918096,-2.817230,6.184621,-7.487959,3.674673,-8.676334,-9.971701,-6.627549,6.408973,-3.328552,-1.820402,-6.040107,-7.536542,4.788633,-3.114882,6.252682,-4.801021,2.262473,8.647298,4.941533,4.237440,1.300339,-8.440787,6.088051,-0.357958,8.230128,-7.926757,0.179777,8.306758,-9.376308,-1.938498,8.848944,5.570372,-1.640042,-6.505783,-3.562392,-4.712326,4.675163,6.423003,-4.249623,5.026162,1.830904,-5.164017,-2.741031,6.049648,5.163374,-3.568131,-2.429383,-0.757729,9.196412,2.176345,-7.325057,4.720855,-2.640088,4.339167,-9.464144,-5.900239,-2.176844,3.631028,3.839597,3.189016,-4.160419,2.823349,-3.964156,-3.611005,2.745723,8.767250,1.164466,8.356665,7.021083,-5.761593,2.020769,4.458875,4.654188,6.439362,-4.199353,-1.597105,-4.241983,9.840830,0.067500,-2.348422,5.685680,-4.456579,5.512208,2.672576,-7.427602,-8.048057,-9.966203,-6.158531,-5.691280,-0.678190,-9.217026,-2.576343,3.412465,7.026954,1.551887,6.346091,7.857121,9.115514,7.626495,-9.968074,-4.417462,-8.355241,-0.497453,4.474538,-6.746087,4.129682,-5.552748,5.481650,-8.369902,-7.211299,5.389434,-0.378767,5.552506,5.967019,-5.088394,2.439688,-5.807245,-5.354069,-5.605869,-6.624712,8.200952,0.505604,4.967729,6.873172,-7.320054,1.734768,7.772778,-5.515020,4.918494,-8.546780,2.506830,-8.951423,9.630340], dtype = "float64")#candidate|3429|(896,)|const|float64
const_3430 = relay.const([[6.847342,7.133315,-6.137820,-6.049811],[-7.948365,-2.929316,-5.579989,8.313440],[-5.014967,4.125718,9.733122,-2.218617],[-8.980664,-0.583018,4.081768,3.193456]], dtype = "float32")#candidate|3430|(4, 4)|const|float32
const_3431 = relay.const([5,6,1,-3,9,-6,-6,9,4,-8,10,2,8,-1,8,1,-3,7,4,-5,-2,9,5,-7,7,5,-7,-9,-6,-8,-10,10,-5,-7,10,5,2,1,-1,-6,4,-6,-10,-7,-5,1,-3,9,1,-10,-8,3,6,7,2,6,5,-8,6,1,8,7,4,-1,3,-8,-4,-1,6,-10,3,4,-9,-1,8,8,-4,9,-2,5,-2,6,-5,-8,7,7,7,8,-6,3,-10,9,-10,6,-9,-7,3,6,-4,-6,6,1,-7,-1,9,-6,-7,-5,-1,8,1,10,-1,-1,-3,-6,-4,-2,7,5,-7,4,-4,-10,-9,5,-4,-5,1,1,-5,-3,-5,2,-8,9,6,1,2,4,-10,3,-2,-10,-6,-7,8,-10,6,-5,8,4,-7,5,6,5,8,1,-8,-7,2,3,-5,-2,-8,-7,-3,2,4,1,9,-8,-6,1,10,6,9,1,-6,-4,2,-1,-10,6,10,-6,3,-6,-10,1,-2,-3,8,-6,9,-9,1,7,-2,-5,-10,1,-4,-2,-5,-6,4,1,-5,8,-7,6,-6,-9,-8,3,7,3,5,6,2,9,3,-10,9,2,-5,-3,-3,-1,9,1,10,-7,-1,4,-5,9,-5,6,-7,9,7,4,6,-3,1,-3,7,-7,1,2,-6,-5,2,-6,-8,-2,9,-6,-5,-2,-2,7,-2,-8,6,2,4,5,-7,-6,6,-3,-8,-9,-8,7,-5,1,-1,-2,-10,-10,-2,-2,-8,5,8,8,-6,7,8,-6,-2,-10,-4,1,9,-10,-8,9,1,-7,-1,-3,2,1,-5,2,-1,-10,9,3,-3,-8,-3,7,10,-3,1,-7,7,4,6,1,10,-4,-5,6,10,-10,-2,7,1,2,7,6,1,7,-5,5,-2,-6,-6,6,8,-10,-1,2,-8,-5,-8,-10,10,-4,-8,2,-10,8,3,-3,-9,3,10,3,4,5,-10,10,-4,5,-3,-3,-7,8,-8,5,4,7,-5,-3,10,-2,-5,-10,-7,3,2,-5,-1,-9,6,4,3,-5,6,9,8,-6,-4,-3,9,-10,-4,-2,-10,1,6,-5,1,-7,-7,-2,-8,9,-3,2,10,5,-9,-6,9,-2,-7,1,-6,-4,7,-10,-4,-6,5,1,9,7,4,-4,5,7,4,1,-8,-5,-10,-9,-7,-1,2,6,-9,-9,8,-5,1,6,-2,7,9,7,10,4,-3,-10,9,6,10,-1,1,3,10,9,-4,3,10,-5,-6,-8,5,3,3,-2,-5,3,-10,7,-4,1,-5,-3,4,5,-8,8,2,-9,-1,10,-7,3,7,-7,-8,-1,5,-8,-4,9,-8,9,-8,-5,-1,-4,-7,-6,-7,-7,3,8,4,7,8,3,-2,-4,-1,9,3,2,8,-4,3,2,1,-6,-5,-6,10,9,-10,-2,3,4,-5,-7,4,-10,5,7,-1,3,-7,-10,-6,8,-3,6,-4,-3,-7,-3,-4,-10,-4,-4,-9,4,-6,2,3,-10,2,4,8,-4,10,8,10,-2,6,-1,5,-10,10,-6,3,1,4,1,5,-7,-5,-10,2,9,-1,2,8,8,-7,10,10,5,-7,4,-4,-10,5,-3,-5,4,7,-2,9,10,4,-5,-3,8,9,-5,-4,-3,6,-5,-2,-5,-4,-1,-8,-10,5,9,-6,-8,-1,-9,8,4,-9,3,8,8,6,7,-4,-8,-2,7,-4,-4,-7,-1,-4,9,4,3,-3,-5,2,-4,-1,-5,9,-5,-6,7,-2,10,-3,-7,2,-8,3,-5,7,3,-10,-5,10,-2,-6,10,9,-4,-1,-9,3,10,-3,2,2,2,-6,1,-4,2,3,-10,2,-5,6,-7,-1,4,-10,6,4,6,-4,5,1,9,-7,-6,-2,-3,-3,7,5,-10,10,9,-5,-5,1,6,-7,-5,2,5,-10,-4,1,9,-3,-3,6,-10,-6,-9,-4,8,-9,-8,-4,-7,-3,7,2,-10,-4,9,-6,2,-3,8,7,-9,-10,-7,9,-9,7,-8,2,4,-2,10,10,-9,-5,10,-4,-8,7,-1,9,1,-5,-5,-9,-5,-9,-1,8,-4,1,-5,-5,1,8,10,-1,-5,2,-3,8,5,4,-8,8,-7,6,-5,-5,-4,-8,2,5,-4,-5,1,-7,-1,-2,7,-1,-10,4,-9,-10,2,7,-7,-1,-3,-10,-10,-9,-1,-1,5,-1,-10,-8,6,6,-8,-3,-9,-8,1,-7,6,-3,8,-5,8,6,3,-1,-6,8,-1,-10,3,1,7,-6,-3,-10,-5,-4,1,2,-7,-2,9,-8,-10,9,8,7,9,8,2,-2,5,1,9,-1,-8,9,4,8,-8,7,-10,-1,10,10,9,1,10,-1,5,5,-6,1,-4,4,-9,-5,-7,-7,-8,-9,8,1,3,-7,4,2,-6,10,3,1,-2,10,-5,-6,-1,-9,6,7,2,8,7,5,-4,-5,-6,-10,3,10,6,-10,-3,-7,1,-10,9,-10,-9,-10,-10,1,-1,8,10,1,-8,-4,4,-1,5,-7,-1,-1,-3,-7,-5,-3,-1,10,1,-9,6,1,3,2,-5,-2,-7,-1,3,-3,8,5,-9,3,8,-10,-5,2,-2,6,5,-6,-3,3,6,-4,-4,-4,-6,2,8,8,-10,1,-7,1,-7,4,-5,5,3,-6,10,9,-8,2,10,9,-4,-1,-9,5,-1,-7,-8,-8,4,7,5,-4,4,8,9,3,8,-6,-8,5,2,6,6,10,-9,8,2,6,7,1,1,-9,1,8,-6,1,-8,-5,-2,-6,9,-4,3,8,-3,-6,-4,7,-10,-5,9,2,2,4,10,6,4,-4,-9,9,-3,10,9,3,2,6,3,-1,-5,10,4,7,-5,5,3,-9,8,-4,-5,-6,4,-2,-10,-3,-9,10,-10,-1,10,-10,-9,-1,-6,-6,1,-2,6,1,9,10,-10,1,-7,-4,10,2,-3,-10,6,-4,8,2,-9,9,-9,-6,-9,-9,-3,5,-7,5,-8,10,1,-2,9,-4,-9,8,3,-8,-5,1,10,-1,3,-10,3,8,4,-4,8,-3,10,-6,9,7,3,-2,-6,-1,-1,1,-10,9,-2,9,10,6,7,-4,8,-10,1,-3,5,5,6,1,6,-2,-2,8,-6,3,-8,8,10,6,-10,-6,4,2,-9,6,2,6,10,7,8,-7,-8,-2,-5,-8,9,1,-5,-1,-5,-10,6,2,-9,2,-10,4,8,-4,6,9,8,-7,10,-7,-9,-1,-4,1,-3,-1,-3,-8,-4,-3,6,6,-9,-7,2,-3,5,-8,-6,-2,-1,9,9,5,2,4,10,-4,-4,10,-6,-9,-7,-2,5,2,-9,1,10,3,-6,2,6,6,8,8,-1], dtype = "uint16")#candidate|3431|(1280,)|const|uint16
call_3427 = relay.TupleGetItem(func_2543_call(relay.reshape(var_3428.astype('float32'), [3, 6, 11]), relay.reshape(const_3429.astype('float64'), [896,]), relay.reshape(const_3430.astype('float32'), [16,]), relay.reshape(call_3425.astype('uint16'), [200,]), relay.reshape(const_3431.astype('uint16'), [1280,]), ), 14)
call_3432 = relay.TupleGetItem(func_2549_call(relay.reshape(var_3428.astype('float32'), [3, 6, 11]), relay.reshape(const_3429.astype('float64'), [896,]), relay.reshape(const_3430.astype('float32'), [16,]), relay.reshape(call_3425.astype('uint16'), [200,]), relay.reshape(const_3431.astype('uint16'), [1280,]), ), 14)
func_234_call = mod.get_global_var('func_234')
func_237_call = mutated_mod.get_global_var('func_237')
call_3436 = func_234_call(relay.reshape(call_3425.astype('uint16'), [10, 5, 4]))
call_3437 = func_234_call(relay.reshape(call_3425.astype('uint16'), [10, 5, 4]))
output = relay.Tuple([call_3425,call_3427,var_3428,const_3429,const_3430,const_3431,call_3436,])
output2 = relay.Tuple([call_3426,call_3432,var_3428,const_3429,const_3430,const_3431,call_3437,])
func_3438 = relay.Function([var_3428,], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
mutated_mod['func_3438'] = func_3438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3439 = relay.var("var_3439", dtype = "float32", shape = (198,))#candidate|3439|(198,)|var|float32
func_3438_call = mutated_mod.get_global_var('func_3438')
call_3440 = func_3438_call(var_3439)
output = call_3440
func_3441 = relay.Function([var_3439], output)
mutated_mod['func_3441'] = func_3441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3448 = relay.TupleGetItem(func_3378_call(), 1)
call_3449 = relay.TupleGetItem(func_3380_call(), 1)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3451 = relay.TupleGetItem(func_3378_call(), 0)
call_3452 = relay.TupleGetItem(func_3380_call(), 0)
uop_3466 = relay.asinh(call_3448.astype('float32')) # shape=(10, 5, 4)
uop_3468 = relay.asinh(call_3449.astype('float32')) # shape=(10, 5, 4)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
const_3479 = relay.const([4.932370,-2.302086,-3.395715,2.152763,4.060758,5.527640,4.074062,7.656650,7.196193,3.533485,8.542516,-1.348972,9.125553,8.697421,-2.884620,-4.582426,9.829430,6.313290,-5.760285,7.495949,6.711015,6.908064,-5.242021,-4.673458,-6.610438,2.450427,8.186115,2.680062,-9.156537,8.786818,-6.343356,9.376197,-8.831037,7.727126,6.972327,1.661024,-1.053152,-7.949633,5.645906,-5.094642,-1.141798,5.804024,3.831471,5.664377,-1.110589,-9.393090,-8.414826,-5.803766,-1.877169,-6.819978,-8.888235,-4.180532,-3.230543,1.838009,7.921917,4.823212,-4.877937,9.312386,-1.228780,4.478810,9.265844,8.951561,2.123873,-1.247108,-2.437873,-8.924002,-9.535888,6.527575,9.656002,9.611926,-7.757429,-4.310755,8.316847,-7.810507,-1.599525,-2.152367,0.640694,-8.583215,-1.871813,-0.988310,5.846764,8.798210,3.896144,-3.016558,-0.114932,4.880273,-3.832846,7.151873,6.794129,1.923256,2.981088,7.013607,-1.172214,-8.449237,-3.571047,4.249166,1.629579,-4.371340,3.050917,0.117605,-9.410193,-7.298123,-4.213918,-3.432183,3.548473,-5.658356,-6.373336,1.002820,3.590891,6.484864,-2.324170,5.703189,7.619868,-2.793542,-3.238262,-9.444974,-4.998725,3.692626,-6.437013,-8.260277,-7.576537,3.423360,-1.041654,8.554104,-6.715251,2.740519,7.629110,-4.462261,-0.174435,7.670366,-3.294192,4.994472,-9.142661,5.114483,9.173514,-9.236750,-2.321503,-5.815270,-3.953277,-5.644921,-1.301228,4.801474,-4.776380,-9.953868,-8.266548,6.612043,-5.937660,1.052914,-4.867341,9.212729,-1.873580,7.623069,9.911211,1.000801,0.255711,-2.221596,3.867318,7.565180,2.608786,7.276406,2.457199,-5.561951,7.678200,-4.248655,3.985449,4.401603,0.899762,-2.583042,-0.701972,-2.114517,-4.406915,5.787286,-1.822357,4.625021,5.203382,7.053359,-8.098238,-4.730381,2.156028,2.242268,-6.874464,-6.090017,6.366197,4.865239,-8.022666,5.656872,-3.023588,-6.107727,9.234751,6.648173,-4.648079,2.802435,-2.962385,0.483103,-2.410698,-8.624145,9.215784,-0.490061,-6.891919,5.378035,4.754659,6.715379,8.508182,-5.616808,0.825410,9.644769,-5.651473,-6.610528,-7.557824,-2.483774,-7.821612,-2.149293,2.629101,-5.365758,-0.261634,-8.227713,-2.014195,8.641274,0.834399,-8.728821,2.860994,5.526810,-8.633395,7.230344,9.055897,8.509549,-4.877053,1.742444,-9.359613,2.782391,7.447503,-6.683926,7.009647,-4.887344,1.426905,-4.276555,-0.922358,-4.460538,0.782584,-7.024807,4.339614,0.156157,1.071076,7.707085,-7.174548,-3.009466,-3.142024,-6.536197,-0.497165,0.651504,4.156056,2.357832,6.066567,0.676155,7.414233,9.680101,1.266798,-0.272420,5.646404,6.577834,1.991882,-9.407325,-8.689894,8.164602,5.586063,2.602167,-3.718288,-3.479783,-4.064854,9.508249,2.034424,9.088223,9.563006,3.921339,1.577822,-8.250242,-6.659951,5.672535,6.344020,-5.566081,0.813378,-6.794574,-4.280505,0.776497,-3.113721,-5.232991,6.048427,-3.629496,1.190702,5.035892,-0.127160,0.670000,-3.821562,-5.220848,-4.367197,-4.220080,-1.785019,3.825817,-6.811664,2.346086,2.138506,-6.909510,1.225400,7.197845,7.540023,-9.234729,1.170300,-9.542256,-4.191835,7.048604,3.913526,-5.274489,-2.087969,-0.223218,-2.126630,0.955085,1.589571,-6.399559,6.796535,-0.982308,-5.952468,-9.800961,-4.577368,-2.572380,0.098753,1.369630,6.323507,-8.609262,-2.097112,-4.790633,1.429510,-9.742348,-9.878310,2.673546,6.512092,-9.480227,-3.725239,5.740875,4.381752,5.292126,6.769997,-4.174607,-6.733851,9.471362,9.837784,0.767076,2.799691,-2.133862,-1.275422,8.630358,2.944159,-5.433660,7.163640,-5.328011,6.324946,1.127430,1.579247,2.726997,1.625914,-0.492145,3.473819,6.636440,7.462330,-0.105785,2.585150,8.265616,8.465488,0.236006,5.239392,1.809728,2.419849,-3.854004,-8.691598,7.015688,-0.715718,3.571098,2.715239,-8.727835,-3.589497,6.451878,1.302376,-3.672921,-6.084331,2.924221,3.337480,-7.175250,0.275542,0.154846,-4.339057,0.607531,-6.410970,-8.030468,0.161500,3.500933,5.202604,-6.061318,4.485089,9.906726,-7.661640,-9.630181,-0.295739,-0.127806,0.610522,4.753577,-3.990395,-9.506372,4.899408,6.281535,4.403080,-5.705202,1.053926,4.896766,6.145306,-6.847107,1.459038,-6.804826,7.556203,-1.477249,-3.342488,-6.000369,-3.915127,-7.728344,-9.015951,1.171033,-7.576456,-2.609735,-3.709109,-1.705238,2.577767,7.286329,9.355593,-6.605082,-6.011146,1.351094,-1.067847,-0.834732,-7.233560,5.560074,-4.701116,6.892712,-2.340062,-2.001058,6.160789,4.076014,7.704534,-2.311529,-3.987982,3.508601,4.174201,4.628891,-6.686691,-6.774106,-3.945963,0.131146,-2.772102,5.899067,3.610782,3.061661,7.540804,0.449658,3.725570,6.330509,-6.144383,8.839748,-3.020041,3.833065,-6.178951,7.937851,1.976820,3.497997,0.460275,1.699827,-0.248520,-6.578556,7.536016,-4.083802,8.328045,-6.756890,-9.872925,9.773067,-2.805347,2.487100,-3.901182,-0.993545,-5.600990,-2.102184,-0.498063,-8.504990,-1.395270,-0.406825,-9.291442,9.251207,7.205789,0.573925,4.585290,-2.029401,6.855277,-8.319511,-9.142640,-4.168495,-9.679917,3.060512,-7.292914,8.627003,-9.995975,-2.087946,-9.681722,-0.873405,1.747293,6.644768,-8.167980,-6.639478,6.199651,6.669309,1.085754,-6.871149,-5.683899,9.279062,5.515924,-2.772970,-8.601449,-3.471643,-8.786184,-1.094330,-8.061712,-7.899158,9.870944,8.398443,1.063740,8.401144,-9.556480,-2.367149,5.578361,0.232211,-6.749738,-6.497531,-5.487553,0.811607,2.780278,-4.309922,8.722861,-6.244668,0.485724,4.711397,-6.360275,-3.788554,9.003058,-6.603917,-0.242570,8.115285,1.292439,0.259413,3.942620,-3.220837,1.144271,-6.669024,5.173715,0.093732,-3.635349,2.650448,6.366724,2.306883,-1.631160,8.549347,7.947609,8.277250,-4.014652,-0.778397,6.460103,-5.795292,0.629099,9.410590,9.286804,-4.996346,8.479647,9.166769,6.388669,5.549007,-5.163656,-3.343355,-7.484306,-0.290975,-9.254682,-2.724289,3.413315,-9.258528,0.848959,6.833789,4.566874,3.087179,6.600048,5.231053,7.987381,-6.133049,-1.960248,-0.671512,-9.882869,3.237198,1.413752,-2.367081,7.346886,-3.500703,-3.270830,4.651322,4.520738,-2.606601,2.028032,3.904544,8.767039,-5.206410,-0.667346,-5.377956,0.544202,7.837987,0.722851,8.105655,4.520415,4.850022,2.692943,2.066882,7.824588,2.355924,8.395313,-8.564295,-8.145031,-0.775699,7.879712,2.060462,3.243076,2.472134,-2.448563,4.011178,-5.400286,3.814834,5.919648,-6.853984,5.269713,-1.275634,-5.974925,4.513405,8.448965,2.125028,-3.532113,-7.844279,-5.420657,-4.393237,-1.471230,-4.988440,-5.357380,4.934855,-2.719218,6.805761,0.968580,-0.306092,-0.616061,7.291082,-5.823501,-5.406536,8.355580,-5.079374,-0.297879,5.889859,-0.748036,-6.850903,1.757865,-6.102900,7.522257,3.072134,3.352447,4.539661,9.336725,-6.156700,0.086559,-1.732368,5.116189,-2.487553,9.264070,-5.079159,3.275206,3.476821,-7.480165,-9.236576,2.970073,1.748255,-0.393711,-9.059752,4.331980,3.383776,3.463344,2.428943,-8.692803,-9.629511,1.891058,1.283830,4.516063,-7.725297,-2.333627,-1.028543,-7.667695,1.086599,-2.933239,1.463673,-7.918674,-9.075810,-1.880059,-1.775421,-5.390455,2.515900,7.897242,-2.179187,7.169766,6.845776,-4.381055,7.510958,1.684058,6.039288,-4.268962,8.532274,3.484283,-0.546045,0.110126,-6.697731,3.560161,-7.172763,-9.774880,-5.476244,7.617850,0.018895,8.105587,-2.544476,3.253474,-4.523438,-8.832826,-0.102615,0.807138,-5.813055,4.651608,-3.408188,-6.615311,-6.093362,-9.041751,-6.690534,-3.873093,3.257783,-7.255980,-1.076757,4.855677,7.356840,-2.726090,8.562846,-3.101595,-9.836079,-1.435700,-3.561265,1.704748,7.625748,3.136155,0.054790,1.023336,0.794956,7.842875,-9.867305,-4.258554,-5.878154,9.843336,7.053118,4.762769,-4.683992,-4.066394,-2.967535,2.873398,0.531503,3.498924,-1.519909,3.720499,-9.923694,4.544457,3.666368,-6.985214,-6.533421,9.879369,0.661246,5.800296,-3.669321,6.576496,-1.118638,-5.704428,1.382651,-9.180896,1.523732,-2.851104,-3.822478,-2.261713,6.784923,-7.483451,-2.571161,9.485785,-0.866942,2.183592,8.375715,-4.642364,6.888476,9.861510,-3.699574,-4.152314,-3.883252,-7.735894,-5.150295,-4.173811,0.094513,1.825186,4.588650,-3.889766,-9.659881,-3.518815,-6.998582,3.706345,-1.877034,-4.457006,-2.422613,-9.606829,1.791562,-8.143993,1.227824,-9.386499,6.019462,-4.432365,-2.816889,-2.665475,6.160238,-4.183078,5.711936,7.925757,7.776534,0.573803,9.256767,-5.374489,-2.737163,-0.759452,3.994875,-8.454867,1.554237,5.242640,6.517812,-7.679467,8.135897,-5.166647,-3.799625,-6.492275,-8.142154,7.406433,6.409310,-1.761219,-6.683079,0.378787,5.350343,-1.895203,-7.987092,7.150293,-7.679492,-3.893604,-6.673691,-2.069119,2.458355,-2.477179,-5.333816,4.830968,2.194377,5.882243,-4.304759,-8.820581,9.562912,-7.771781,-8.620228,0.338834,2.654255,-7.034248,5.181160,-3.680977,0.766153,-3.868323,2.497180,4.795841,3.630772,-5.589808,6.759363,-6.452235,-6.522178,7.679808,-1.543538,9.960941,-2.089078,2.182828,-9.992284,-6.841406,8.117646], dtype = "float64")#candidate|3479|(896,)|const|float64
call_3478 = relay.TupleGetItem(func_1204_call(relay.reshape(const_3479.astype('float64'), [16, 4, 14])), 0)
call_3480 = relay.TupleGetItem(func_1207_call(relay.reshape(const_3479.astype('float64'), [16, 4, 14])), 0)
func_3411_call = mod.get_global_var('func_3411')
func_3414_call = mutated_mod.get_global_var('func_3414')
const_3491 = relay.const([-7.063893,9.619842,-4.894710,1.302217,3.517447,8.695217,-8.268233,-9.992754,0.975316,-0.094461,-0.490434,6.227237,0.116692,8.580120,2.076268,8.072537,-8.145115,-2.322078,-5.450900,-9.523894,-0.638119,-6.097903,1.872597,-4.186249,-1.768444,-5.108565,9.405173,4.117724,-5.351819,0.246990,-4.353485,7.045578,8.481784,-4.045620,-7.901575,1.366925,-7.812489,7.214168,9.677533,8.792436,-9.410158,-5.955772,9.630721,-8.697217,-7.209809,9.780922,1.268836,9.492618,-9.555920,-6.269181,-8.236255,6.872469,3.028643,-2.477716,-6.144300,8.158682,-6.937114,-7.829120,7.245058,5.238235,-3.487473,-6.654715,0.527237,-2.884311,6.672984,-5.408051,5.186217,3.994701,1.788337,8.023456,2.986847,-6.495446,-8.304000,2.831668,-1.103614,2.902937,8.006017,-4.853216,3.757798,-1.618242,1.997364,-7.260822,3.103572,-3.907672,8.131196,-8.290582,-9.207117,-6.000753,-8.744808,-7.769981,-0.304613,9.061388,7.819139,4.749506,6.766114,-3.493560,-5.957580,2.105857,-7.611596,-0.361310,3.307858,-8.031952,-4.461800,-6.016254,-6.226251,5.813402,-8.471393,-7.423861,-7.289693,-5.323623,5.187494,-3.196387,2.887378,6.274067,7.962364,7.840498,1.986235,-1.719954,2.367852,-6.395106,0.499167,-2.206670,-5.965912,-1.842572,-0.692439,-1.428917,7.864589,-8.316048,-1.371154,-3.954517,4.542740,-3.735109,5.672364,-8.469991,7.437117,-4.521878,-0.086435,-9.145680,1.662285,3.285460,3.183654,6.394753,5.579713,8.104205,-5.571184,1.512736,-5.706103,-4.448060,7.145497,-4.598615,0.060133,9.162627,1.871763,-7.084112,-1.094754,5.037877,-8.684778,-7.769626,-1.486824,0.330743,1.188476,-4.338162,3.244044,7.170413,-5.350541,3.243650,-0.271755,8.591964,6.031091,-3.506871,-6.468030,3.176467,5.881608,-0.064475,-4.273026,-4.941594,-7.661450,1.990555,3.404390,-5.528016,-0.729430,5.929856,5.273568,-2.930905,-7.367670,-5.509418,-4.940454,1.738716,-4.808956,7.941987,-5.691987,-9.708570,2.305466,-5.906879,5.874237,-7.853054,-7.686303,-5.375078,-2.799826,-8.110205,-5.637779,0.176646,2.056178,-8.877264,-2.009396,-9.021103,3.198703,-2.968380,-8.232354,5.683006,5.236213,4.177426,0.631937,3.144896,-6.556093,-9.129709,2.049660,-6.342799,8.985075,-3.346163,-6.626304,-8.209832,2.839894,-3.350986,7.640593,4.237061,9.372793,-7.275308,0.213875,3.103614,-6.729616,-0.003564,1.279088,-5.734733,8.456395,2.575890,6.254628,7.369384,-8.384990,-5.771256,6.329877,-6.353805,-0.473554,8.632957,6.243569,1.418856,-0.336328,8.222430,-6.511712,-9.159673,-4.930191,-5.090752,8.239490,-2.948285,3.664473,7.453948,9.477584,-4.869249,1.695011,5.866841,-5.751784,-4.423253,-4.147232,-2.918163,4.419259,-5.515844,-1.324772,9.355281,-8.725322,6.539723,-4.442047,-6.982078,6.545873,1.661924,-7.138503,5.421116,6.794059,4.011640,1.203299,8.586564,5.341647,-9.648933,-8.353930,1.501172,6.024591,-1.430594,-5.326883,0.579112,5.354260,-7.767449,0.024435,-2.637066,9.457868,-6.391722,-4.239552,4.569317,2.180717,9.573466,1.808238,-6.499734,-6.063542,-6.545847,4.002009,-0.466235,-2.900507,-3.648389,-7.933067,-2.920755,3.178875,-4.614008,-3.319275,6.017274,0.177596,3.585117,7.616084,3.216288,7.619273,-6.592646,-8.833907,0.517453,3.909449,-4.985088,0.502295,4.365578,-8.270751,-3.767677,4.730927,-0.848720,-2.993490,4.966095,-5.494369,5.218333,-4.539027,-2.291054,-3.261275,0.704047,-2.372433,9.257233,1.137921,-3.895013,-5.895206,-1.985127,-2.824466,-5.359098,2.471367,-5.501171,4.166940,5.540175,-5.643210,-2.100717,1.372736,-9.971066,9.638070,9.039477,1.664211,-0.882521,-6.387482,7.236837,-8.559404,-0.896463,-3.239679,0.144042,-3.117333,9.471889,-8.450498,-6.533571,-8.906601,3.486034,-2.891206,-6.256071,-6.507853,-2.010384,7.891428,4.918391,9.440917,9.233639,2.350262,9.890262,6.569129,-0.171916,-0.687255,-5.415479,2.241836,0.835072,-3.973324,4.283164,-2.764691,-4.469881,-1.234032,1.492306,8.951246,8.746890,7.019263,-0.512259,4.814510,9.123494,9.552450,-7.281766,3.814359,3.591262,4.761369,8.356885,-7.092338,-2.997657,0.785949,-1.515251,-7.140461,4.745838,6.845611,8.660262,-9.568039,-0.034382,-2.846566,0.934144,-8.281109,0.328874,8.957425,-7.303060,-9.855689,-6.230779,-5.042680,-0.665823,-2.316355,0.333379,-3.215381,7.665344,6.368975,-3.549437,-7.619172,5.926732,-6.351238,0.896396,8.680374,3.298418,-2.604647,-0.469351,5.055251,1.971309,-1.659161,4.930108,6.388330,-4.581208,-5.681879,-0.452618,-8.734368,-7.424447,5.952845,-1.317744,1.629829,-5.348823,-5.503812,-2.529162,-3.496044,4.043690,-9.203113,3.085121,1.168504,-7.884579,-9.840503,9.578362,5.018824,-2.938104,1.788926,1.887048,-8.085389,-0.360536,-1.747509,-5.316506,-0.045520,-4.262475,-0.982542,3.342208,6.645694,-6.060152,-6.086117,-9.413899,0.528530,-2.210230,5.970167,3.977196,-5.460598,-0.345376,-0.719818,3.097876,6.253375,-6.631096,5.300928,2.717824,5.156057,-4.790905,5.208952,6.517338,6.117922,7.018400,-5.389952,4.944541,-9.095676,9.637747,-1.227563,-2.258836,-3.387317,-9.168502,-5.354487,-3.934186,8.001905,1.281084,6.594625,3.736331,5.959359,-5.970661,9.136219,-0.120875,1.131580,-3.538986,-5.872866,3.340555,7.999081,-8.590545,-5.959633,-7.338601,1.150912,-6.748986,-4.355232,-5.698946,9.490270], dtype = "float32")#candidate|3491|(525,)|const|float32
call_3490 = relay.TupleGetItem(func_3411_call(relay.reshape(const_3491.astype('float32'), [525,])), 3)
call_3492 = relay.TupleGetItem(func_3414_call(relay.reshape(const_3491.astype('float32'), [525,])), 3)
output = relay.Tuple([call_3451,uop_3466,call_3478,const_3479,call_3490,const_3491,])
output2 = relay.Tuple([call_3452,uop_3468,call_3480,const_3479,call_3492,const_3491,])
func_3494 = relay.Function([], output)
mod['func_3494'] = func_3494
mod = relay.transform.InferType()(mod)
output = func_3494()
func_3495 = relay.Function([], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3540 = relay.TupleGetItem(func_3494_call(), 4)
call_3541 = relay.TupleGetItem(func_3495_call(), 4)
output = relay.Tuple([call_3540,])
output2 = relay.Tuple([call_3541,])
func_3544 = relay.Function([], output)
mod['func_3544'] = func_3544
mod = relay.transform.InferType()(mod)
mutated_mod['func_3544'] = func_3544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3544_call = mutated_mod.get_global_var('func_3544')
call_3545 = func_3544_call()
output = call_3545
func_3546 = relay.Function([], output)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3544_call = mod.get_global_var('func_3544')
func_3546_call = mutated_mod.get_global_var('func_3546')
call_3567 = relay.TupleGetItem(func_3544_call(), 0)
call_3568 = relay.TupleGetItem(func_3546_call(), 0)
func_1516_call = mod.get_global_var('func_1516')
func_1521_call = mutated_mod.get_global_var('func_1521')
var_3576 = relay.var("var_3576", dtype = "int16", shape = ())#candidate|3576|()|var|int16
const_3577 = relay.const([7.171766,-8.735985,-9.886443,-3.542693,1.600371,6.667851,0.543660,0.381574,2.324633,6.604800,5.546904,-2.274009,-1.585588,-4.271627,4.655764,-1.552935,8.684596,3.886647,-1.510716,4.678557,2.651051,4.889534,1.633793,-8.488920,8.766743,2.376824,-4.165029,7.661570,-7.169361,-7.645435,-4.136213,9.386676,5.523802,0.060891,-5.999767,-0.140447,6.423420,-0.494233,-4.661085,-1.266679,1.931544,-5.682960,1.509582,-4.542138,-6.683839,3.992405,1.937699,-3.172669,-9.353313,-3.957161,2.192601,-4.150879,3.025357,1.992555,7.883427,6.337849,9.049726,0.183512,4.316744,-2.665838,-1.280346,-4.470446,-3.806907,9.127332,-4.366951,8.169919,-2.634574,-4.784653,3.724763,3.001486,9.953040,4.351507,-1.568428,-5.238827,-1.446124,3.713791,-8.040293,-6.355166,7.427097,6.779327,-1.637314,0.139046,-7.306244,-2.865751,4.189984,9.167883,-9.756143,3.409051,0.759916,-1.880904,-8.723775,-6.926863,7.550539,-4.177981,-8.595848,-9.370715,-3.420086,8.106029,5.422075,-3.471605,5.020646,-6.594551,-3.704034,1.223668,7.826893,2.512758,1.659650,-9.144025,3.614770,8.489336,3.773445,-8.358258,1.618210,-3.608193,5.930752,0.627417,-7.438644,-6.203651,9.819020,-9.748506,1.632124,3.252786,-8.453569,4.654720,-2.116464,0.808101,-0.769213,5.902726,-7.127069,-1.869999,2.338871,-8.836580,4.055756,-1.803453,-4.411717,9.498984,8.638277,5.690775,9.112169,1.509684,9.330930,5.107812,-7.596695,-5.690086,-6.321205,-0.283417,-3.698185,-0.245721,9.435929,6.818710,2.918243,4.869382,3.995754,-4.768534,1.130000,-0.937795,9.500632,-2.913646,-4.619187,-9.823435,4.138032,-3.784157,8.685428,-9.557852,-9.605597,8.890292,-2.526528,-0.936429,0.641643,-6.748836,-7.444627,3.403747,-6.584317,2.869237,-9.248178,-5.129118,-9.770714,-5.865883,8.666259,-9.266805,-6.292936,0.555876,-6.302398,-8.896171,5.018827,-4.104954,1.797100,7.521360,5.305250,-8.690074,-7.906622,4.935107,-9.283513,-2.387439,-9.346756,0.708772,-5.646958,-0.728149,-1.891767,-1.412893,5.787768,3.055301,2.136331,0.132177,8.046535,-0.628967,-9.472856,-8.793092,8.114709,-5.396730,7.754827,-5.717565,-8.038325,-0.944870,4.665506,-4.843047,8.014649,1.957137,-0.536128,7.135882,0.052918,4.263183,4.050183,-1.016036,9.255764,6.325912,-9.916434,-3.989888,-1.082085,1.682150,-3.364379,-9.655204,5.855819,-3.048765,-5.444758,6.081211,9.071420,2.033844,-4.972013,-9.470251,-9.872341,-2.011358,2.053134,-4.959554,8.372782,-9.705734,5.038060,0.640305,-9.215589,6.765547,2.270529,-1.457225,1.015733,0.393682,2.198604,1.629541,8.212310,-1.526941,2.741378,-6.814770,-3.339727,-2.646228,-6.661145,-3.519081,6.857954,1.797239,-1.494669,5.470912,-5.945220,8.182889,-4.938655,7.693522,-1.664754,3.616057,-5.954023,-6.762223,-2.637363,8.070809,-6.513292,4.151401,4.419570,-2.895969,0.745261,1.033524,6.404432,6.155678,-3.808638,0.694666,1.688037,-9.105228,4.728743,-6.438500,3.359250,-4.763654,-2.963167,9.306993,-8.722656,9.915803,5.733850,5.843441,-6.777883,8.582305,-7.560317,8.779274,7.752940,5.462288,9.099616,-8.277210,0.262421,-8.988014,-2.219426,6.963545,-6.909009,-8.267125,-9.415636,-7.593718,1.292664,0.996016,-7.250557,0.816934,-8.887668,-8.230092,-2.385360,-1.931988,1.180771,2.600480,-3.607555,0.773991,-2.996827,-7.490990,0.135951,2.795364,-1.650517,-8.005256,4.758937,-4.327930,4.029730,2.660450,5.459774,8.705623,2.927627,9.765917,-5.399524,-0.638432,-7.054566,6.337619,5.024730,-1.220750,7.207985,-1.666190,-6.834292,-3.136237,-5.298202,-6.985534,0.822734,-8.238841,-1.375203,-6.968506,-2.421040,1.706617,9.773904,9.517901,6.365480,5.832590,-8.649174,-0.948670,-9.812836,-7.008369,-3.693026,5.843646,7.762687,-9.224534,7.927945,-2.623741,2.773664,-8.051854,-2.741508,7.123853,-2.121786,-2.679350,5.438757,6.466381,3.202093,-0.104747,-8.837476,9.113559,4.208669,-7.843139,-0.613066,6.419112,-1.432358,-9.449510,5.243055,1.016620,-3.562440,-9.111853,-4.537002,-4.917315,-6.214826,3.043781,-0.141323,-7.232048,0.004348,-1.242333,7.957092,1.402591,0.509796,-0.423833,-3.597749,-2.624628,0.475014,-0.524117,7.349312,4.358096,2.491394,-9.618650,7.357685,0.042668,6.950810,-1.991588,4.624738,0.874766,3.454636,7.096400,7.406960,6.603440,5.976198,-5.894245,-8.864653,-5.111394,-3.348827,3.483789,0.304447,-5.650606,-3.733941,0.327577,0.283006,-5.983794,-2.681641,-7.159306,-3.930532,-5.433219,8.877826,-0.113947,-5.195078,6.661932,3.273367,-0.371517,8.204217,-4.295965,4.675160,-9.403812,-8.625799,9.055505,-7.197701,-7.329738,2.383790,-8.173428,0.225316,-0.403332,1.479155,-4.104327,-2.929998,5.911946,-7.689790,4.081095,1.842578,-6.024312,2.414989,-2.361354,9.855917,-4.457641,6.119193,3.827368,8.744243,-5.345650,6.005432,8.235108,3.054244,5.665964,-3.967224,4.463692,-6.022337,4.742719,-3.183275,-0.776443,-3.551356,-4.131180,5.034232,-8.012020,-4.931618,-0.040002,-7.226123,2.143047,-1.024369,4.547994,-3.279038,8.998628,-6.329001,-2.677771,-3.370822,-1.981317,6.223228,1.654011,-9.791225,2.978225,-8.708277,-4.793829,5.556466,1.670359,-2.479909,5.603714,9.368862,-5.921397,8.415525,-0.729456,6.362366,9.796330,-5.117678,2.157206,-9.723575,6.410569,-6.966011,8.942097,4.385932,-7.947307,6.196962,-0.447622,-4.816084,-5.816298,1.558129,2.083433,5.461283,7.152300,6.683162,-2.950243,1.774411,1.095447,8.216161,-8.188694,0.460417,8.442947,-2.306470,0.974237,-9.379717,-5.007173,8.685364,-1.295491,-8.072558,-0.659195,-7.233046,-4.394702,-2.523098,-7.959165,-6.303489,-5.620025,8.251508,5.166905,-0.554210,-8.505437,-5.915176,-9.170948,-0.779424,5.644637,5.298610,6.849050,-6.242699,9.577108,7.752678,5.328021,-7.826938,4.269024,7.723007,7.010554,5.606896,-3.182759,6.518238,9.124095,7.330837,-6.972214,-3.467418,-2.100714,6.377832,0.182463,8.547451,5.513225,2.159561,2.848875,7.204680,-6.708019,-1.041137,-2.734700,6.915425,-6.902912,-9.074256,0.803716,-3.890197,-0.476415,-2.713886,-1.663399,-4.666168,5.947065,-9.489495,-1.558620,-1.195414,-5.833797,6.532397,-9.779778,8.567213,2.286069,6.375921,-7.522974,-5.529556,-2.855221,4.813051,2.133870,-0.051386,4.610976,8.144373,-6.971927,-4.037759,9.531357,3.939601,-5.115144,-6.894399,1.491813,5.563509,0.791864,-5.834021,-9.639400,-7.346812,1.136033,-4.058627,6.888288,-0.207975,2.946215,-7.279508,-8.903230,-7.195905,-6.684532,-2.143714,6.021033,-2.114806,5.262255,-8.904060,-7.303260,5.113063,4.970817,-5.062053,-9.717634,-2.745022,5.222036,-2.940266,-6.352917,-9.307384,5.166387,-0.394467,-8.042623,0.984497,8.121586,9.928834,-5.788318,7.419864,1.664385,-3.500344,-2.047294,5.836317,3.720402,5.027647,2.922665,0.600963,-9.830414,8.438677,-9.074939,9.415228,-5.343858,2.219995,5.135286,-1.706353,-3.217916,-1.580729,1.529155,-8.370853,9.457060,-4.287815,7.823642,8.875646,-9.531990,4.761172,4.159998,-9.232088,4.396828,-7.070050,5.724728,0.027220,0.283720,-1.118515,-4.860980,-3.982179,9.656785,-7.871330,-3.976025,-1.111747,-4.684899,9.595655,-5.630496,5.097710,8.511919,1.906833,-4.492697,-3.584007,-1.792762,-5.341933,1.669844,5.207356,1.887113,0.632285,0.871303,-1.873806,7.848357,-4.786231,-6.350720,-9.640686,4.049562,-6.660692,-0.967652,-1.164715,2.257123,0.933202,3.399074,2.415260,-1.660406,-1.440828,7.961939,6.467969,-5.884899,-9.580089,6.733633,-1.715122,-7.319571,-5.437683,6.102592,-5.604897,7.595607,0.228667,-1.075459,-5.760794,5.693710,-4.893326,9.501469,-5.446353,8.263847,-6.272236,4.451444,-0.288426,4.878618,-1.524651,1.693064,-9.369192,3.241648,9.039694,-6.158560,-3.884501,-8.909844,-9.865266,4.386324,9.425543,-7.928527,8.048622,-7.829390,8.209011,7.216298,-6.868802,-1.382194,9.148513,-2.920095,0.258842,-8.270104,-7.479287,7.964910,3.735740,9.377935,5.979477,-0.133635,0.452401,-3.739791,3.507645,9.215981,-6.324491,-2.178847,8.248250,-3.379142,9.718297,-3.141647,5.447387,1.178502,-3.540539,5.615608,-2.317641,2.294630,-0.201476,-4.690151,4.666166,4.254009,-6.298323,1.329637,-6.525319,-0.654455,0.509077,-7.478445,-0.132359,6.557276,-6.980953,3.908716,-6.322470,5.622242,-8.390572,-4.346814,0.235114,-9.286494,6.079256,8.252613,5.418680,-9.822365,-4.590092,-7.007368,-6.250162,-6.954134,-8.706010,1.060790,-2.725851,-0.981397,-7.764654,-8.169115,-8.974889,6.432039,-6.506078,-2.907200,1.519456,-3.722415,4.780416,-8.069495,-8.451130,-0.983196,-4.462205,-0.592644,-1.677130,-6.345127,3.029909,-8.515382,0.369649,-2.685766,-6.088232,0.042879,5.760282,-6.983784,-2.965479,-7.674184,2.024537,-4.909062,-2.740825,-1.007590,0.477935,2.714316,5.264910,-1.556643,-0.616107,-1.964578,1.037395,-5.288552,-4.112603,7.237437,0.410000,9.929143,8.531998,8.477277,-8.334909,-3.732988,-7.766153,3.690018,-9.022384,-6.454127,-0.462838,6.359985,-5.527283,-1.148997,-3.198856,-9.188930,3.048691,-4.440031,3.198228,-7.931984,5.583295,5.834511,-5.607795,1.826167,-1.929872,8.546808,9.382865,8.771186,-3.410648,-4.941866,9.822826,0.154416,-7.779370,7.156606,8.291784,-6.909458,5.178364,-8.390632,-6.096041,-7.705903,6.720440,8.141028,-4.430033,-8.502114,-0.875644,-1.200017,8.986410,-9.446343,0.524612,1.729492,2.401091,-9.772288,0.711766,-9.438569,-4.695853,5.531550,3.430393,-9.335911,7.672837,-5.498248,3.857420,3.534177,-8.775036,4.591349,-9.214496,-0.412359,-1.781169,-1.232468,6.409456,4.795921,5.621576,8.433825,8.946376,-4.037789,2.714741,-9.082680,3.907967,3.263003,3.711770,-1.990034,-2.854462,2.279472,4.269491,-5.820408,-7.303044,-1.386555,-2.170806,-1.660457,-2.687405,-7.939669,-1.152514,-8.026340,0.362705,2.334978,-0.136344,-8.258649,2.967629,1.376853,1.489737,3.810468,2.379097,7.866045,-5.338732,2.710433,-8.792588,-7.633221,-1.052059,3.724297,-8.084173,-2.809843,-3.940940,2.371167,-0.693066,-5.064913,4.993578,-4.051544,7.940246,-4.092451,9.064882,-0.739145,-8.040989,-8.690718,-8.154715,-8.923104,7.758566,9.726231,6.714252,5.319526,-8.639175,8.466600,1.197961,-6.063631,9.076919,-1.745830,0.276935,-5.829645,3.376876,-9.195617,-4.175274,8.309587,-8.432794,3.259364,3.286061,0.104719,-1.223214,3.774977,-8.970772,0.167852,1.172706,8.109910,-8.651313,-3.323269,-7.489951,6.198716,5.230268,-1.125379,-8.398664,2.328798,-2.808977,8.986577,5.864465,5.612766,-3.459449,7.918941,-3.661797,-2.320224,-2.649303,3.855423,-0.151235,-9.471753,3.148466,4.064944,-0.789819,2.221831,7.007424,-0.317920,-5.303362,0.572690,-6.196754,-8.114147,3.925556,3.679974,5.507090,-9.132361,-5.394847,1.133176,-5.117924,7.481017,6.001941,9.108270,3.007841,5.635071,8.393500,-2.256575,5.650271,9.153510,-0.888539,-3.178097,5.546617,9.016437,6.372600,0.371204,0.882062,0.904329,1.791476,0.913859,-7.438625,-7.895494,3.914669,7.156615,9.248957,5.971319,6.291332,0.830370,6.684762,-8.236847,7.176796,-7.386756,-2.895424,0.480382,-8.229439,-3.270698,1.148848,9.216172,-6.520097,7.245627,2.857739,6.167549,0.553190,8.052830,5.441814,1.335804,2.706015,8.764350,9.668531,0.596547,2.949178,-5.017775,6.158253,-9.191907,-9.649840,3.426147,-6.301835,4.256505,-4.894215,-7.378277,-9.951455,-4.340275,5.974443,-0.319553,6.833958,0.051503,4.602564,4.215268,0.714852,-0.297133,-0.866829,9.678170,-3.917170,-5.307135,2.255135,-3.641990,-1.919276,9.492632,-7.154662,6.219762,7.095556,6.833296,-7.399845,8.786732,-7.181080,-1.969113,-5.356631,0.857516,-2.228622,3.326936,1.088394,6.275024,-5.748274,3.665352], dtype = "float64")#candidate|3577|(1152,)|const|float64
var_3578 = relay.var("var_3578", dtype = "float32", shape = (4, 4))#candidate|3578|(4, 4)|var|float32
call_3575 = relay.TupleGetItem(func_1516_call(relay.reshape(var_3576.astype('int16'), []), relay.reshape(const_3577.astype('float64'), [1152,]), relay.reshape(var_3578.astype('float32'), [4, 4]), ), 0)
call_3579 = relay.TupleGetItem(func_1521_call(relay.reshape(var_3576.astype('int16'), []), relay.reshape(const_3577.astype('float64'), [1152,]), relay.reshape(var_3578.astype('float32'), [4, 4]), ), 0)
output = relay.Tuple([call_3567,call_3575,var_3576,const_3577,var_3578,])
output2 = relay.Tuple([call_3568,call_3579,var_3576,const_3577,var_3578,])
func_3583 = relay.Function([var_3576,var_3578,], output)
mod['func_3583'] = func_3583
mod = relay.transform.InferType()(mod)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mutated_mod.get_global_var('func_3583')
var_3585 = relay.var("var_3585", dtype = "int16", shape = ())#candidate|3585|()|var|int16
var_3586 = relay.var("var_3586", dtype = "float32", shape = (4, 4))#candidate|3586|(4, 4)|var|float32
call_3584 = func_3583_call(var_3585,var_3586,)
output = call_3584
func_3587 = relay.Function([var_3585,var_3586,], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3609 = relay.var("var_3609", dtype = "float32", shape = (13, 9, 9))#candidate|3609|(13, 9, 9)|var|float32
var_3610 = relay.var("var_3610", dtype = "float32", shape = (13, 9, 9))#candidate|3610|(13, 9, 9)|var|float32
bop_3611 = relay.not_equal(var_3609.astype('bool'), relay.reshape(var_3610.astype('bool'), relay.shape_of(var_3609))) # shape=(13, 9, 9)
output = relay.Tuple([bop_3611,])
output2 = relay.Tuple([bop_3611,])
func_3627 = relay.Function([var_3609,var_3610,], output)
mod['func_3627'] = func_3627
mod = relay.transform.InferType()(mod)
mutated_mod['func_3627'] = func_3627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mutated_mod.get_global_var('func_3627')
var_3629 = relay.var("var_3629", dtype = "float32", shape = (13, 9, 9))#candidate|3629|(13, 9, 9)|var|float32
var_3630 = relay.var("var_3630", dtype = "float32", shape = (13, 9, 9))#candidate|3630|(13, 9, 9)|var|float32
call_3628 = func_3627_call(var_3629,var_3630,)
output = call_3628
func_3631 = relay.Function([var_3629,var_3630,], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3641 = relay.TupleGetItem(func_3378_call(), 0)
call_3642 = relay.TupleGetItem(func_3380_call(), 0)
uop_3645 = relay.asinh(call_3641.astype('float32')) # shape=(3, 2, 10)
uop_3647 = relay.asinh(call_3642.astype('float32')) # shape=(3, 2, 10)
func_1516_call = mod.get_global_var('func_1516')
func_1521_call = mutated_mod.get_global_var('func_1521')
var_3658 = relay.var("var_3658", dtype = "int16", shape = ())#candidate|3658|()|var|int16
var_3659 = relay.var("var_3659", dtype = "float64", shape = (1152,))#candidate|3659|(1152,)|var|float64
const_3660 = relay.const([[-4.587074,4.261105,1.417886,5.653110,7.656865,-5.905590,-2.213620,3.756464],[-9.815697,4.904717,-7.703225,8.846283,-4.076902,9.950289,-1.213668,-7.360152]], dtype = "float32")#candidate|3660|(2, 8)|const|float32
call_3657 = relay.TupleGetItem(func_1516_call(relay.reshape(var_3658.astype('int16'), []), relay.reshape(var_3659.astype('float64'), [1152,]), relay.reshape(const_3660.astype('float32'), [4, 4]), ), 3)
call_3661 = relay.TupleGetItem(func_1521_call(relay.reshape(var_3658.astype('int16'), []), relay.reshape(var_3659.astype('float64'), [1152,]), relay.reshape(const_3660.astype('float32'), [4, 4]), ), 3)
output = relay.Tuple([uop_3645,call_3657,var_3658,var_3659,const_3660,])
output2 = relay.Tuple([uop_3647,call_3661,var_3658,var_3659,const_3660,])
func_3664 = relay.Function([var_3658,var_3659,], output)
mod['func_3664'] = func_3664
mod = relay.transform.InferType()(mod)
var_3665 = relay.var("var_3665", dtype = "int16", shape = ())#candidate|3665|()|var|int16
var_3666 = relay.var("var_3666", dtype = "float64", shape = (1152,))#candidate|3666|(1152,)|var|float64
output = func_3664(var_3665,var_3666,)
func_3667 = relay.Function([var_3665,var_3666,], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3669 = relay.TupleGetItem(func_3494_call(), 5)
call_3670 = relay.TupleGetItem(func_3495_call(), 5)
output = call_3669
output2 = call_3670
func_3687 = relay.Function([], output)
mod['func_3687'] = func_3687
mod = relay.transform.InferType()(mod)
output = func_3687()
func_3688 = relay.Function([], output)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3692 = relay.const([[[-0.658231,6.961594,7.552235,-5.686542,8.528477,-3.855945,6.835772,-2.751468,-1.900635],[4.214499,3.678650,-2.381035,4.978760,1.393378,-6.637392,-5.275167,-7.276312,-3.346905],[1.250245,-4.863625,4.760047,-7.056503,5.283087,2.311701,-3.770345,-6.481719,-2.887950],[-4.639207,-3.176152,-8.594632,3.834828,2.092095,2.390736,0.023998,-8.423807,3.771736],[2.109024,4.204025,-4.381941,-9.999861,4.534553,-6.134075,7.618835,-3.340195,-2.112606],[-1.774813,0.306851,9.295135,3.080571,-8.142270,-2.686046,9.758682,8.577767,-9.533960],[3.518380,-2.991887,8.215964,-5.484943,-1.819888,4.595272,-3.787140,-8.479761,4.291649],[-1.173599,-1.976428,8.252649,-7.427146,-2.145703,6.146110,1.781262,8.517537,2.882412],[-4.899527,2.049230,-6.922044,5.169244,6.104182,1.728308,8.058253,2.805658,-5.104549],[-0.736056,-2.525421,-2.883197,3.624586,-6.881991,-7.840309,5.236271,-7.640403,9.645323],[4.022397,6.363707,-3.314005,-7.215831,-9.827053,4.052664,-1.129254,2.989441,6.641320],[-0.472634,8.520482,8.183342,-5.756531,-2.274851,-7.168116,-8.219721,-5.865243,-6.110139],[-2.456524,-1.018123,-4.975312,8.610972,3.512172,6.692495,-2.962630,5.940537,3.747766]],[[0.497875,4.182954,-9.152330,8.738021,-6.583374,-4.675005,-1.941288,2.819543,7.384914],[9.013883,-3.386054,9.740283,7.053578,7.046149,2.858395,3.717518,-8.944389,-1.055749],[-7.290102,0.139474,2.880360,6.536195,-1.053864,-2.442670,0.387450,-1.940234,-6.086889],[5.579876,-4.689523,-3.910908,5.958458,-8.682222,-7.475480,-4.319815,4.323512,6.050870],[7.510831,-8.800525,1.426708,6.523607,-2.752900,-6.597897,9.058839,-7.477938,-2.433023],[9.495763,0.263256,-3.449814,-4.540718,-5.520559,-3.583881,-0.968424,7.063477,-3.731064],[9.571672,3.633307,2.112116,-8.107503,7.062389,-9.419109,5.169577,-6.408587,-8.875145],[8.053524,5.116926,-3.259354,7.755301,-8.727699,7.703412,-2.229393,-0.756913,8.194055],[0.992367,0.160520,-0.182764,6.687751,8.480279,-4.511696,-5.555818,6.596052,-5.490990],[4.666993,-3.657465,-0.321617,-7.984343,8.183411,-2.975317,1.880406,-8.069388,-0.938411],[-8.740931,7.776976,8.458842,0.319062,5.445545,-0.004795,-5.407822,4.728854,5.086239],[4.930750,-8.757782,-9.127500,7.904612,8.259256,-1.002444,-2.477218,3.951637,9.451805],[-8.799478,-9.833185,5.307258,6.548688,-6.131657,-1.907179,-9.391831,-4.130311,-2.728071]],[[7.611454,-9.685369,-8.724846,-9.616366,5.956961,-4.899800,7.736444,-5.589211,-3.814511],[-6.774203,4.154001,-4.252790,-5.454990,1.793685,-3.389347,7.289261,6.921520,-6.827649],[8.365197,1.043521,-8.937432,9.680482,-2.718540,3.208511,9.825902,-9.416982,-3.467941],[-5.105823,1.459928,5.455216,-9.395289,4.241286,-4.760690,8.708037,-3.004093,8.256823],[-7.507171,-4.347126,-3.494694,6.598267,6.428224,-4.743468,-4.674335,-0.166090,6.046094],[9.530502,2.605909,9.106519,-5.979811,7.097016,0.276667,3.958827,9.753918,-5.752415],[8.038668,2.382397,2.817375,7.368779,-2.353462,9.638632,0.195687,9.121918,5.926369],[8.144662,1.117776,8.595515,2.421684,-3.032105,-9.354119,-1.255520,-6.086998,2.925559],[9.569688,-6.021845,-9.024053,4.840189,-2.212509,-7.007468,-3.204532,-2.925515,-8.680064],[-9.967324,-4.907867,-2.313899,-5.596822,2.716872,-7.154605,-0.815914,5.748388,-4.741367],[6.490597,2.687099,-2.750698,1.070431,0.721695,3.527122,3.118921,0.091867,-3.398737],[0.325511,-6.074857,-4.258660,7.902381,6.014103,5.030835,-3.486568,1.325983,-2.076430],[-7.320809,-1.258312,8.593726,9.082756,-8.021163,1.895022,5.861607,3.366118,9.409129]],[[-0.485019,-0.103837,5.756250,9.080329,-7.174385,6.241598,7.438308,4.449711,-2.372586],[0.734719,4.300541,-4.690629,-9.719765,8.053747,-1.887694,7.887281,8.688364,-8.393692],[7.398823,1.111641,-0.813551,7.148240,-5.412431,-4.119878,4.069815,-7.012854,8.262789],[4.724929,-0.349772,7.836260,1.005509,-0.118645,-4.192622,0.285681,-7.844538,-3.766987],[-6.050433,-6.466111,-0.303450,5.785902,-0.904327,-6.773642,-0.665631,-5.642760,0.259991],[1.176837,-2.754741,1.850664,-2.345843,9.771798,1.398723,-0.775596,2.765112,-9.311894],[8.096414,5.914791,-5.374159,1.306313,-1.809549,9.402644,3.771308,-9.609285,-8.514829],[-3.391765,6.434382,-9.425110,0.662925,-8.866614,3.071593,-2.873591,-1.382321,4.330441],[-2.693311,7.908019,-8.945798,-3.158205,-4.426218,2.747656,-6.575426,6.591741,7.660291],[1.903441,-4.946184,2.483190,-1.538551,-7.465184,-7.157059,0.177441,-2.860908,7.637624],[-3.708013,-2.126705,-5.434532,7.019456,-4.138488,-1.847224,-9.766900,-9.639100,1.736391],[1.081393,-6.914308,-5.492412,7.929474,2.572819,3.979802,-1.986378,-0.246364,-2.786294],[-1.081994,6.869799,-7.202937,1.905067,3.666166,-8.282276,3.738204,2.621445,3.683283]],[[-3.902335,1.243762,7.839999,-4.915214,-4.931452,-5.956357,-1.222255,8.577195,9.798672],[0.249633,-9.756450,5.683913,-3.983220,-0.332654,-5.660372,2.559950,-3.620037,-3.888016],[7.866218,8.482036,7.411350,-7.180824,6.748663,9.350148,-6.743449,4.051732,-6.803714],[9.350669,6.311590,-6.097906,3.062943,2.692067,-4.799814,6.254623,-5.374333,-1.018007],[7.224347,5.602010,-5.619494,3.415617,-8.513972,9.950217,2.166421,2.442852,8.613493],[-5.104729,5.909569,-9.926322,2.845704,-1.831157,4.219066,1.317826,1.299765,4.592529],[-0.351012,-3.406702,4.558994,1.937254,-6.604475,2.993508,-6.996321,9.826882,7.933818],[7.922626,0.334456,9.768121,-8.113431,0.655974,2.543804,3.111799,-4.595097,-2.343778],[-4.696030,-8.338633,-2.414957,-5.745140,-7.915263,1.195021,5.608912,-7.783071,-6.892996],[5.895621,7.662405,-3.069822,1.914630,-5.777481,-1.317149,4.616643,-8.342838,5.303391],[-4.334254,7.581433,0.970363,-2.719294,0.583024,-6.662286,-9.501447,4.043122,-4.190852],[0.368217,2.693345,5.187226,-3.958930,-8.968725,0.273632,-0.384979,5.610215,-9.109151],[-2.904229,-0.982136,1.935406,6.603635,-2.536668,6.270802,-8.160409,6.444546,-4.811583]],[[9.299156,1.985828,0.944298,-4.251699,-8.966330,3.805339,-7.971098,-1.095583,-6.482631],[4.301612,1.159590,-4.232830,7.743989,9.955042,-1.965052,7.273316,6.298826,-0.511516],[2.139691,-3.081531,-5.218677,-9.784636,6.616016,5.623274,2.751795,8.160790,9.578493],[2.561756,-2.006612,0.505176,5.976543,4.918485,6.429731,3.411761,-7.248154,2.741895],[-4.066561,9.529442,-2.265101,3.852913,-9.357308,-8.526327,-8.846611,-1.524604,9.335701],[3.434195,-4.376518,1.460888,-3.986043,0.122773,-9.972063,-3.148451,-1.302247,-0.356465],[-0.629248,-2.979324,-7.716419,-5.825961,2.771517,6.468855,-4.105074,4.156928,4.811486],[3.509070,2.943575,-2.153008,7.742439,-4.357655,3.579581,-2.448869,-3.188642,-6.861817],[0.780166,6.481047,0.349520,6.882543,-0.902977,-4.733083,1.127574,8.727563,-6.369898],[-8.668552,-5.418381,-2.509701,2.931943,-4.940246,2.663272,-3.311602,5.277272,5.930160],[2.866881,2.710211,7.739785,3.627405,4.288630,-3.509481,6.042885,3.911270,6.764575],[9.790404,-2.764724,0.185685,-3.229581,-6.326666,0.189445,-5.360263,4.774349,-0.743314],[8.637551,0.786833,5.773332,9.585051,9.890988,-0.443980,-4.299785,5.791283,6.036315]],[[-9.132949,3.863675,-3.556733,7.499333,2.883520,-5.316498,6.166538,8.389181,-0.924179],[-7.783243,9.979533,-2.605228,7.991813,8.201128,3.474180,1.157506,-1.282187,-6.357872],[8.629421,3.691266,-5.435824,5.795303,-5.089018,3.277866,5.533917,-2.550936,9.385431],[-9.731880,2.521840,3.629854,4.417664,-0.211950,4.510463,-7.551338,-9.036602,7.231976],[1.278263,7.808890,-9.381162,-4.251865,-2.265662,-7.268904,5.966996,-6.799732,5.442857],[7.914542,-1.702903,-4.206296,-7.115474,9.505205,9.241231,-7.438604,9.168687,-7.225671],[-7.265758,3.090345,2.936409,-4.236071,-8.108926,3.941601,-1.989863,-7.902074,-2.181909],[8.301353,7.752071,-8.007073,4.370203,2.219568,-7.469084,-6.285790,-3.337286,7.641553],[-4.815380,-8.753158,3.783608,-4.149861,-2.604791,-4.182496,4.413220,-2.424000,-3.547771],[4.230886,9.881298,-7.761727,-3.913022,-5.936709,-9.831245,-3.311134,5.917850,-5.399283],[-4.031626,-1.424701,5.952883,-2.982630,-7.220861,-6.074888,5.570658,5.405815,-0.799208],[-9.762742,-6.894860,-0.995851,-2.534962,9.486779,0.974483,-6.002626,-8.466315,8.207343],[-3.965032,8.521228,-3.130288,6.629624,4.335210,-5.960786,1.031993,8.066499,6.853329]]], dtype = "float32")#candidate|3692|(7, 13, 9)|const|float32
uop_3693 = relay.log(const_3692.astype('float32')) # shape=(7, 13, 9)
output = relay.Tuple([uop_3693,])
output2 = relay.Tuple([uop_3693,])
func_3697 = relay.Function([], output)
mod['func_3697'] = func_3697
mod = relay.transform.InferType()(mod)
output = func_3697()
func_3698 = relay.Function([], output)
mutated_mod['func_3698'] = func_3698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3697_call = mod.get_global_var('func_3697')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_3704 = relay.TupleGetItem(func_3697_call(), 0)
call_3705 = relay.TupleGetItem(func_3698_call(), 0)
output = relay.Tuple([call_3704,])
output2 = relay.Tuple([call_3705,])
func_3712 = relay.Function([], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mutated_mod.get_global_var('func_3712')
call_3713 = func_3712_call()
output = call_3713
func_3714 = relay.Function([], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3688_call = mutated_mod.get_global_var('func_3688')
call_3730 = func_3687_call()
call_3731 = func_3687_call()
output = relay.Tuple([call_3730,])
output2 = relay.Tuple([call_3731,])
func_3750 = relay.Function([], output)
mod['func_3750'] = func_3750
mod = relay.transform.InferType()(mod)
output = func_3750()
func_3751 = relay.Function([], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3688_call = mutated_mod.get_global_var('func_3688')
call_3777 = func_3687_call()
call_3778 = func_3687_call()
output = call_3777
output2 = call_3778
func_3786 = relay.Function([], output)
mod['func_3786'] = func_3786
mod = relay.transform.InferType()(mod)
output = func_3786()
func_3787 = relay.Function([], output)
mutated_mod['func_3787'] = func_3787
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3816 = relay.const(1.537528, dtype = "float32")#candidate|3816|()|const|float32
const_3817 = relay.const([[[4.792639,-3.925086,6.274994,-1.002257,-3.349580,-7.537322,3.688768,-9.041886,6.038584,6.792656,2.044357,3.054039,-9.491699,-3.310486,5.147247]],[[5.923665,4.425257,9.526944,-4.371469,8.594797,7.134891,-2.221612,-3.037323,9.031912,-1.828750,1.455865,-5.666430,1.548344,2.052771,-8.188235]],[[1.318588,6.952640,3.920847,8.157362,9.354672,-2.280891,-5.143948,8.978778,5.221119,-6.368208,5.810131,7.260255,5.945239,-1.504754,7.670036]],[[7.052413,-0.160470,6.077091,-8.988346,-4.116426,0.540702,-9.043261,7.069733,-2.234070,-4.709561,-4.940528,-5.789817,4.591283,4.920116,9.791473]],[[-1.139291,7.802059,0.824084,-6.090383,-0.398305,8.055310,4.290414,4.895964,4.113812,0.568426,2.886058,8.916592,5.201784,3.644077,9.359484]],[[4.847588,5.413650,-3.934994,9.880415,-8.667491,1.117822,4.826030,0.785360,3.125754,4.650083,-0.738473,0.896366,-9.055221,-2.604740,9.130466]],[[-1.309033,3.944600,6.390033,0.869407,-3.099452,-0.740876,9.686357,-3.363297,6.944939,-1.934318,-6.377811,4.815750,-8.837916,4.879326,3.240955]],[[-6.292988,6.938120,0.549273,-7.743450,-5.017026,5.490644,-7.626930,-8.230021,7.803337,0.542621,-9.353542,7.713397,1.883901,-1.832855,-3.583914]],[[6.533418,4.892843,5.797044,4.603681,0.423627,-4.755319,5.777328,-3.056481,-5.035170,3.578224,4.899170,3.367086,4.643503,-8.460389,3.774326]],[[7.195804,-4.024489,-7.047787,5.587006,5.180224,9.680876,8.347169,-0.105249,-3.110971,-1.452193,-2.752581,-2.797384,-9.947286,-0.168207,1.126519]],[[4.150045,-3.582516,6.795556,7.760395,5.825394,-0.117388,5.816956,8.659350,2.717568,-6.223054,1.964663,8.388918,-6.004923,7.804099,-4.182328]],[[6.549822,8.277038,9.421202,-2.212426,6.305225,6.724767,-1.253018,-1.023471,0.019192,9.502503,8.855437,-2.204672,-4.761929,-0.353588,-5.831554]],[[-0.197013,-9.134776,0.415499,7.120404,9.063158,9.931679,-7.781185,7.052088,6.253172,-3.027277,-4.121418,0.928623,-5.026864,2.098158,5.841349]],[[2.143547,3.910808,9.438470,-1.828604,-3.417301,-9.948307,-5.975460,1.366050,5.083866,-8.646138,-6.378928,7.519374,-1.384357,7.478256,-2.279886]]], dtype = "float32")#candidate|3817|(14, 1, 15)|const|float32
bop_3818 = relay.greater(const_3816.astype('bool'), const_3817.astype('bool')) # shape=(14, 1, 15)
output = bop_3818
output2 = bop_3818
func_3826 = relay.Function([], output)
mod['func_3826'] = func_3826
mod = relay.transform.InferType()(mod)
output = func_3826()
func_3827 = relay.Function([], output)
mutated_mod['func_3827'] = func_3827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3884 = relay.var("var_3884", dtype = "uint8", shape = ())#candidate|3884|()|var|uint8
const_3885 = relay.const([[[-7,7,3,-9,-4,5,-3,9,4,-1],[-1,3,-6,4,-5,-7,5,8,-9,10],[3,5,-8,-1,-10,1,1,-7,-9,2],[-3,-6,6,8,-5,9,2,4,-10,-2],[9,4,-5,6,1,-10,10,-5,-2,-2],[-9,-4,6,-1,-3,7,-6,2,3,7],[-8,10,-3,-4,8,-1,-8,-10,-3,1],[3,7,-8,-3,5,-6,-7,2,-1,-6],[-4,-10,3,7,10,-3,-5,-4,-7,3],[-9,6,-5,-7,-7,-9,-3,3,6,4],[-9,1,-7,-6,-4,-10,-8,-10,-7,1],[-3,6,7,1,-1,-1,6,-2,-7,-9],[7,-3,-6,-8,-1,8,9,-9,1,-2],[-9,-3,-5,7,-1,-4,-6,3,-1,4],[2,-5,5,-1,-5,9,6,-6,6,4],[10,8,-6,-7,-6,8,-2,-10,8,-3]],[[6,5,-5,4,4,1,-7,-7,3,-9],[-4,6,-1,-5,10,2,-4,-8,9,2],[-10,-7,-5,-10,-10,-5,6,-4,-10,8],[9,-5,-8,-5,5,-10,4,3,-4,6],[-4,10,-4,8,5,5,-7,-8,5,2],[3,-8,1,-6,6,1,-5,-9,5,-5],[5,-6,-2,5,-10,-9,1,7,9,-7],[5,5,8,3,3,-6,9,1,8,1],[5,8,7,7,1,3,1,10,-1,-7],[-10,-3,6,-2,-9,10,-3,9,-8,-8],[-10,6,8,-3,8,5,2,7,-3,-10],[-2,-8,1,-4,4,9,-2,5,3,-1],[5,-1,8,-3,-8,5,5,4,-1,-6],[-10,-8,2,-4,-1,-5,3,-1,3,1],[-9,1,10,-10,2,7,-1,-6,-10,7],[7,6,-8,-10,3,2,10,5,-7,-2]],[[-1,4,-7,4,-1,7,-2,8,1,1],[-1,-7,-6,-2,7,5,4,1,-10,-9],[5,10,2,-7,8,-1,9,-2,10,10],[-8,5,-2,5,1,-2,-3,-4,-2,10],[-7,9,-6,-2,4,4,-5,-4,-5,-9],[-5,5,-5,3,-1,7,1,-5,8,-3],[-9,4,6,-1,9,9,2,1,4,7],[6,-3,-4,6,-6,-4,-8,1,8,-6],[3,-2,9,6,-9,7,9,-4,8,4],[-9,-1,9,-10,3,6,1,-4,-1,-6],[-3,6,4,-2,-10,-6,-5,7,-10,-2],[4,10,-6,-8,5,7,-8,10,3,-2],[-8,-3,9,8,-8,4,-10,7,-1,1],[10,5,-3,8,7,-10,-2,10,4,1],[-10,-3,-9,6,-7,7,-7,5,-5,5],[-7,-9,-9,-10,-6,-6,-6,-9,-1,-7]],[[2,-6,-6,6,-6,-5,7,9,2,-2],[2,7,6,7,8,6,7,6,2,5],[4,-8,4,8,1,-4,-7,5,6,-3],[-5,4,-10,5,4,-10,2,9,7,9],[7,-3,4,-10,-9,5,-9,-5,-9,10],[4,2,-8,-1,-8,5,6,2,5,2],[-4,-7,4,-3,-6,-6,3,-6,9,-5],[8,4,7,3,9,-3,2,5,4,1],[-1,8,-5,4,-2,2,-9,3,4,8],[-1,6,3,-9,9,4,-7,3,-9,-7],[-6,-8,-5,10,6,3,-9,3,10,8],[4,-1,-8,-4,-1,-7,-9,-1,7,4],[-9,3,7,1,-7,-9,3,-3,-4,8],[-7,-2,2,-1,-5,2,-3,4,-8,7],[4,-8,6,9,-8,7,4,4,-1,4],[-1,9,-1,3,-8,7,-6,2,-8,-6]],[[-10,4,10,-3,-4,-8,5,-8,-2,8],[-9,3,-3,1,-6,8,8,3,1,-1],[-2,9,-6,-4,5,-8,8,-4,-6,2],[2,9,1,7,5,4,-7,-5,-9,-3],[4,1,-5,-2,-9,-5,4,10,6,-7],[7,10,-6,1,5,-10,-5,2,-7,3],[1,-7,-1,-2,6,10,3,-9,7,6],[4,-3,-10,-1,9,3,3,5,-8,-3],[-8,-10,-2,-2,9,-1,8,1,8,3],[7,7,5,-4,-1,-7,-9,-10,6,-10],[-3,-7,6,7,2,-3,-5,9,-2,-4],[9,2,10,8,7,10,-10,9,7,-2],[-7,9,3,3,-4,-10,8,-2,-5,4],[-8,-2,-3,6,8,-2,1,6,-3,1],[3,10,-3,-10,3,-10,10,1,4,5],[3,6,1,10,-8,1,2,5,-4,-6]],[[10,-9,-10,4,-8,-4,8,-7,-2,5],[5,3,5,-3,-4,-7,-6,3,-7,-8],[7,7,1,-8,-8,3,7,3,6,3],[6,2,-6,-8,3,-1,-9,8,2,-3],[9,6,-3,-9,6,7,-2,3,-4,-5],[6,-7,-4,-7,3,7,-7,9,3,-9],[10,8,-6,1,4,9,2,7,5,2],[-3,1,3,9,7,-4,5,10,5,-5],[7,-8,-10,-3,-8,-4,-4,-10,6,-5],[-9,-2,9,10,-1,-2,7,-7,7,-5],[-5,-8,3,-7,7,-3,-1,5,-7,5],[-7,6,8,-4,-5,2,5,10,5,-8],[1,3,6,-1,10,-1,-2,-3,-2,7],[-4,-7,8,9,-7,10,-10,-8,-8,1],[5,-4,-1,-9,-2,2,7,4,-9,9],[-2,3,-1,-10,2,-6,3,7,-7,-9]],[[-5,4,2,-5,3,-8,4,-8,-4,3],[-10,-6,9,7,10,-4,8,-4,7,1],[7,6,-3,-8,5,-7,-2,-5,6,6],[7,8,-7,-6,-4,-6,-8,-4,-9,10],[-6,8,-9,9,-5,9,5,9,-2,6],[-2,10,-7,3,-9,-1,-1,2,-1,3],[-6,-10,-2,2,-4,3,-5,7,5,1],[6,-8,-10,-5,3,-1,-2,9,1,-9],[4,-10,5,2,-1,6,4,2,-6,8],[-7,-8,9,-7,1,-5,8,-5,-5,2],[9,-3,4,8,4,-7,5,4,-3,4],[6,2,-5,6,-5,5,-10,10,6,2],[-3,3,-4,-2,7,-2,3,7,-10,-7],[-5,2,3,-7,-9,-8,-6,10,7,7],[-6,-5,3,-9,6,2,10,-5,6,-9],[1,-5,8,8,-7,-9,4,-4,-7,1]],[[-10,-7,7,-3,-5,5,-2,2,-8,-7],[-7,-8,4,9,-6,7,5,8,7,4],[8,6,4,1,-10,8,9,-8,9,-6],[-10,-3,-8,-5,-4,5,-10,1,-2,-5],[5,10,9,-6,-7,-5,5,2,-9,-6],[-7,3,3,9,-8,-10,8,-4,-9,-7],[-3,5,-8,-9,3,-10,-8,6,-6,-9],[-1,-7,8,-8,-2,-5,-7,2,5,-4],[1,-9,-6,-2,-1,-9,1,-3,-9,-10],[-8,-7,5,-10,-3,3,10,-4,-4,-1],[1,-7,-9,-3,-3,-1,-10,-4,10,-9],[2,-8,1,-9,8,10,-3,4,-9,-10],[10,1,-10,4,3,-2,3,-5,9,1],[-7,9,-10,-2,9,-9,-3,-8,-7,2],[8,-3,1,-7,-6,-2,-9,-3,-5,6],[-6,5,-5,-4,-7,-2,-10,8,-5,-4]],[[3,-3,10,-9,-2,-8,-10,-10,6,-7],[10,-10,4,-2,2,1,-5,-6,-2,-9],[-10,3,-10,6,6,-10,3,-9,-7,8],[-8,-5,-5,9,7,-2,-4,8,-9,-1],[10,-3,1,-9,-2,10,-4,-6,-7,6],[2,-3,-4,-10,7,-8,-5,7,-5,-6],[3,-1,-2,-8,2,3,4,8,-6,1],[-2,-10,3,4,-6,-7,6,-8,2,7],[1,-8,5,3,6,9,-6,-6,-8,7],[1,-5,-9,-7,-8,-7,-6,4,-10,-5],[2,8,-2,-6,-7,8,-4,-6,5,-6],[-8,4,7,-7,6,7,5,5,-2,-2],[4,6,3,3,-5,-3,-3,9,6,10],[8,-1,3,-2,6,5,-2,-10,-2,4],[-3,2,-5,-7,-7,-6,-4,-7,2,-5],[3,-10,10,-1,4,-2,2,4,-5,2]],[[-10,4,-5,3,10,6,8,8,8,2],[5,-1,-10,-6,-8,6,9,3,10,-9],[-4,6,1,-1,5,10,-9,-9,-6,3],[-5,3,8,-6,-2,1,-10,-7,2,9],[-1,-7,10,9,-3,9,1,2,7,-10],[-2,4,-9,-4,-7,8,4,8,1,9],[2,-2,1,6,1,-7,-8,-7,-10,-6],[8,6,-9,-5,4,4,1,2,-9,9],[4,-5,5,-9,-4,3,-1,3,3,-2],[-1,6,-4,3,-9,-3,8,-7,-9,7],[3,7,-9,4,8,1,-2,-1,-9,10],[-7,-3,3,8,-8,7,-5,5,-5,-7],[5,-4,7,5,-2,-6,-8,-3,-10,-2],[8,-2,-6,-8,-8,-5,3,1,-7,-7],[-9,-5,3,9,1,-4,5,-3,-2,1],[5,4,7,1,-10,-2,-3,-10,-7,10]],[[2,-8,-9,-7,3,3,-8,-8,-2,1],[-7,-5,-10,-7,-5,6,10,-6,6,-1],[3,-6,1,-8,-3,9,9,-2,-10,-5],[-7,-4,-6,7,-4,-10,-2,-8,10,-10],[-2,-3,-4,10,-6,-8,-8,2,-1,-6],[9,1,-4,-8,4,9,6,9,-9,-3],[5,-9,-2,-5,-4,-7,8,-6,-7,-9],[2,-9,2,-8,8,-7,3,-4,-7,-7],[9,-3,1,1,4,1,10,4,-9,-2],[-6,-9,-2,-1,1,1,-1,1,6,2],[-2,7,4,-3,-4,1,1,-8,-5,6],[-6,-8,-5,-8,10,2,4,3,1,-2],[-10,-4,7,8,10,7,-2,2,3,10],[-2,5,-2,-4,6,-7,-3,1,-4,1],[4,-1,-3,6,4,9,-10,2,3,-4],[-3,7,-5,-5,7,4,-4,-10,9,4]],[[3,9,-8,-5,8,9,-2,7,-5,8],[-10,3,-9,-2,-10,4,-10,7,6,8],[-5,5,-3,7,-5,-10,-9,-9,-8,9],[-7,-3,5,-4,4,-7,7,6,-4,-10],[8,-6,-4,7,7,-2,-6,3,7,-4],[-7,1,3,-6,2,6,5,-9,6,-3],[-10,9,-3,9,8,-2,6,-1,-3,-6],[2,-5,3,-7,9,-5,-8,7,7,-1],[3,1,7,10,8,4,-9,8,4,4],[9,4,-4,-9,9,7,3,3,10,9],[1,-10,2,-4,-7,-10,8,4,-5,2],[-2,7,-6,5,-6,-6,8,1,7,-4],[6,1,-8,-7,-7,-8,-7,-4,7,-1],[-4,2,-4,-1,8,3,1,-9,10,-5],[-4,-8,8,-6,-3,-8,5,-8,2,-7],[-7,8,6,-9,1,5,-7,-8,5,9]],[[-2,-7,-8,-5,-6,-3,-5,-1,8,9],[-3,7,-7,4,3,-4,-2,-4,-5,1],[3,6,-6,-1,6,6,-6,1,1,9],[-1,-1,-3,-1,3,-2,9,6,-5,-10],[1,-2,10,-2,9,5,6,2,10,-8],[7,-1,5,2,6,-1,-9,-6,6,-1],[1,6,-1,-5,-2,-8,-2,-5,-8,-9],[8,-3,-4,-7,-7,9,4,5,2,10],[4,4,7,-7,6,-1,-9,-1,-3,7],[-9,-10,-10,10,-5,-9,-6,-7,10,-8],[-1,1,3,-4,4,-8,6,4,1,1],[4,-6,-2,-5,-8,-9,2,-10,-5,3],[6,10,9,9,10,7,1,-8,10,-5],[4,1,5,-3,8,10,9,-7,4,8],[7,1,3,-10,1,-3,-9,-5,6,7],[-3,-7,6,1,-9,7,-6,-3,-8,-2]],[[-8,5,7,-6,-7,-6,-9,-5,6,-7],[6,-10,-2,1,-8,8,10,-5,-3,-2],[5,5,1,-9,5,-10,1,3,-5,-3],[9,-10,7,6,8,2,-5,7,6,-3],[-3,-4,-4,-8,-1,-1,4,-1,-9,-1],[-4,10,10,5,5,-9,-10,-3,-9,-3],[-3,3,8,-6,-1,-5,10,4,3,7],[9,6,-10,6,-1,-2,-5,-2,8,-1],[-7,-4,2,-10,-9,-2,-5,-10,7,-6],[6,3,-10,-8,6,-7,-8,1,-9,4],[8,-8,4,9,5,2,-1,7,-1,-10],[-6,2,-8,-3,-4,2,-5,-6,-8,2],[8,7,8,-3,-8,-8,1,-8,4,3],[10,-9,-8,6,10,1,2,9,3,3],[-6,8,2,6,9,4,-7,-4,8,10],[10,5,-1,-3,6,-6,8,10,9,-6]]], dtype = "uint8")#candidate|3885|(14, 16, 10)|const|uint8
bop_3886 = relay.not_equal(var_3884.astype('bool'), const_3885.astype('bool')) # shape=(14, 16, 10)
output = bop_3886
output2 = bop_3886
func_3892 = relay.Function([var_3884,], output)
mod['func_3892'] = func_3892
mod = relay.transform.InferType()(mod)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3893 = relay.var("var_3893", dtype = "uint8", shape = ())#candidate|3893|()|var|uint8
func_3892_call = mutated_mod.get_global_var('func_3892')
call_3894 = func_3892_call(var_3893)
output = call_3894
func_3895 = relay.Function([var_3893], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3905 = relay.var("var_3905", dtype = "uint64", shape = (8, 15, 8))#candidate|3905|(8, 15, 8)|var|uint64
const_3906 = relay.const([[[2,1,-6,1,-6,-6,-10,6],[7,-4,-5,4,7,6,6,6],[-1,2,-3,-9,-1,-7,-4,-9],[-4,7,-7,-3,-6,6,2,2],[8,-1,6,-9,5,-10,-9,-9],[-1,4,-5,6,-7,5,-4,-5],[8,5,-7,3,-10,-2,1,4],[6,-1,5,6,10,5,6,-8],[9,-2,-10,10,-5,1,-4,7],[-4,-4,-6,3,10,1,2,-4],[-7,-7,9,-6,-2,4,1,7],[-2,4,-9,-5,9,-9,-9,1],[-9,-2,-8,5,-5,-7,2,4],[4,1,9,4,-6,-8,-4,-1],[-5,-3,3,-4,-9,-7,-4,-3]],[[10,-2,2,6,9,-2,-1,7],[-10,-1,-8,-1,6,6,-10,-8],[4,9,6,-5,9,7,2,8],[-2,-5,5,-7,-4,3,-3,4],[1,-7,-9,9,10,8,9,6],[-4,-2,-6,10,-4,-6,3,8],[3,10,-6,10,4,1,-1,-5],[-7,3,-7,-5,-7,-2,1,4],[-5,-6,3,8,3,9,6,8],[-2,-9,6,-2,5,3,5,-1],[-2,-1,2,-2,-7,-8,6,6],[-9,-7,-9,7,-6,-3,8,9],[-1,-4,-10,-10,7,1,6,-1],[4,-9,8,8,-4,5,5,3],[6,2,4,-4,2,4,5,-2]],[[-5,2,6,-7,3,4,8,5],[-5,-10,1,-1,9,10,1,5],[-2,9,-10,-10,-10,2,-2,-10],[6,-5,3,-7,-1,10,-8,10],[-1,7,7,4,-2,5,-5,-10],[-4,7,2,2,2,9,-7,1],[-10,-1,6,6,4,-3,-6,-10],[-9,-10,1,-6,3,3,4,10],[-2,3,-6,7,8,-9,-2,-5],[-3,4,6,-9,5,1,-7,5],[1,1,-5,-9,10,-9,6,5],[-10,5,1,7,7,-7,-10,-6],[-10,-10,5,2,-9,8,-7,-5],[2,-3,6,-8,9,-7,-10,9],[10,-9,-1,10,1,3,1,-7]],[[10,5,-1,6,10,8,-8,10],[-6,-3,-9,7,9,10,-10,2],[-8,-5,-9,8,6,-7,-2,-2],[-7,5,8,-10,4,6,8,3],[4,-4,10,-2,7,-3,-8,5],[-2,5,-4,6,4,1,3,-7],[-1,1,2,-10,-3,-8,-9,-10],[5,10,10,-5,-1,6,10,10],[6,-5,-5,9,-9,10,-10,-9],[-6,4,7,10,-6,2,4,1],[5,10,2,-7,4,7,2,9],[-4,-3,2,9,-4,6,-4,7],[3,-9,-5,-4,-6,3,8,5],[4,-5,5,-4,6,4,7,9],[-9,4,5,-4,-2,8,-10,-4]],[[-2,1,-4,6,-5,9,-4,-3],[-9,8,7,-6,1,-9,-8,5],[1,-7,1,4,-6,9,5,4],[8,-7,-3,6,-6,5,9,4],[-6,-6,6,2,-6,3,-2,5],[-8,9,-5,5,1,3,-2,1],[-10,6,10,8,-10,7,-8,5],[5,7,-8,-1,-6,8,-3,-7],[-9,-9,-10,3,9,-3,-2,-3],[2,-9,4,-9,6,6,8,4],[-6,-4,-1,-8,9,-7,10,2],[-10,2,10,-2,-9,-8,4,2],[-7,6,-5,10,6,9,-7,-9],[1,-1,-3,9,-3,-8,-9,5],[-9,3,3,-2,-1,6,1,5]],[[7,4,10,3,-10,-8,-3,4],[4,-10,9,8,2,-7,9,6],[9,9,3,5,-3,2,-8,2],[2,-10,3,-10,-4,-1,-1,3],[6,3,4,-3,-1,-4,9,-10],[7,1,-10,6,-10,-8,-3,4],[3,-9,5,3,-4,2,3,4],[4,2,8,9,-5,10,-2,-7],[2,-1,7,1,-10,-5,-9,-5],[-4,-8,-4,-10,-7,-7,5,-1],[2,-3,5,10,-1,8,-2,2],[9,8,-8,-2,-7,2,-5,-10],[-7,3,9,7,8,9,-10,6],[10,3,-2,-10,4,-2,7,5],[5,5,-1,1,10,9,-10,9]],[[3,-7,-7,-4,1,9,8,-3],[1,-6,-2,4,-8,2,-2,-7],[3,7,-10,-10,-1,-10,-2,-3],[-1,-7,-5,-3,-6,2,-5,2],[-4,7,-2,-7,-5,-3,8,-2],[-2,-1,2,3,-10,7,-5,-5],[-7,-2,-9,-1,6,3,-9,-4],[-6,1,1,-7,8,-6,2,-9],[6,-8,-10,1,-5,1,-1,-7],[10,-4,-10,1,4,1,1,-5],[-3,1,-1,1,-9,2,-5,-7],[-4,5,-4,4,-4,-6,-6,1],[3,5,6,-2,6,7,10,8],[6,10,10,10,8,8,-6,-3],[2,-2,4,3,7,-3,5,3]],[[-5,-1,-4,10,6,7,-8,10],[-10,8,8,4,-3,-2,-8,-8],[-7,-9,-10,4,8,8,6,6],[10,-2,7,-4,4,-9,-1,7],[-7,-9,-7,5,-8,3,-10,-2],[5,9,-1,-2,-8,-7,-7,-9],[3,1,2,-9,-8,-6,3,9],[3,2,10,9,5,9,2,-6],[5,-9,5,1,10,2,-7,-5],[-10,4,-1,1,1,-7,7,10],[-3,3,6,-1,-3,-2,-5,-1],[-2,-6,2,-8,-9,-7,-6,-10],[-5,7,9,8,1,2,-6,1],[-10,10,6,6,-1,-2,8,-8],[-9,4,2,-9,1,9,6,5]]], dtype = "uint64")#candidate|3906|(8, 15, 8)|const|uint64
bop_3907 = relay.equal(var_3905.astype('bool'), relay.reshape(const_3906.astype('bool'), relay.shape_of(var_3905))) # shape=(8, 15, 8)
func_3583_call = mod.get_global_var('func_3583')
func_3587_call = mutated_mod.get_global_var('func_3587')
const_3912 = relay.const(-3, dtype = "int16")#candidate|3912|()|const|int16
var_3913 = relay.var("var_3913", dtype = "float32", shape = (16,))#candidate|3913|(16,)|var|float32
call_3911 = relay.TupleGetItem(func_3583_call(relay.reshape(const_3912.astype('int16'), []), relay.reshape(var_3913.astype('float32'), [4, 4]), ), 4)
call_3914 = relay.TupleGetItem(func_3587_call(relay.reshape(const_3912.astype('int16'), []), relay.reshape(var_3913.astype('float32'), [4, 4]), ), 4)
func_3892_call = mod.get_global_var('func_3892')
func_3895_call = mutated_mod.get_global_var('func_3895')
call_3916 = func_3892_call(relay.reshape(const_3912.astype('uint8'), []))
call_3917 = func_3892_call(relay.reshape(const_3912.astype('uint8'), []))
func_2597_call = mod.get_global_var('func_2597')
func_2600_call = mutated_mod.get_global_var('func_2600')
const_3920 = relay.const([[-5.018661,-0.603872,7.200969,-6.069899,7.570544,5.804699,-0.578001,2.880097,-7.508373,7.323667,-6.984173,-8.870689,1.427093,9.556846,5.390716,8.756772,0.988125,-2.197096,-1.282989,3.294618,3.273775,6.948290,5.421734,3.724765],[-4.926408,6.552620,-5.069454,-1.094523,-4.418398,-6.560782,-6.755786,9.931487,8.272640,-1.360469,-0.694615,9.684387,8.649955,-1.808713,0.898917,-9.757390,-8.550651,-5.000250,1.556487,6.501433,8.095362,5.384947,0.402087,3.792720],[-7.538164,-8.406879,5.613513,-8.906965,-7.682553,5.094836,6.675396,1.114554,3.853734,-9.853090,-5.874094,-6.256326,3.530193,7.734870,-0.256389,0.272173,7.483844,-9.465762,9.520469,0.520499,3.436798,4.099838,-0.687598,-8.074963],[1.632381,-7.451279,-7.427662,5.420362,8.318007,-0.128506,9.396647,-2.010986,8.097789,1.332875,-1.187566,-4.707055,0.419703,-9.241219,-8.072985,0.482815,7.563768,-8.602168,8.419051,-8.935640,-4.024405,-1.215861,-4.844522,-5.818826]], dtype = "float64")#candidate|3920|(4, 24)|const|float64
call_3919 = func_2597_call(relay.reshape(const_3920.astype('float64'), [8, 4, 3]))
call_3921 = func_2597_call(relay.reshape(const_3920.astype('float64'), [8, 4, 3]))
output = relay.Tuple([bop_3907,call_3911,const_3912,var_3913,call_3916,call_3919,const_3920,])
output2 = relay.Tuple([bop_3907,call_3914,const_3912,var_3913,call_3917,call_3921,const_3920,])
func_3922 = relay.Function([var_3905,var_3913,], output)
mod['func_3922'] = func_3922
mod = relay.transform.InferType()(mod)
mutated_mod['func_3922'] = func_3922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3922_call = mutated_mod.get_global_var('func_3922')
var_3924 = relay.var("var_3924", dtype = "uint64", shape = (8, 15, 8))#candidate|3924|(8, 15, 8)|var|uint64
var_3925 = relay.var("var_3925", dtype = "float32", shape = (16,))#candidate|3925|(16,)|var|float32
call_3923 = func_3922_call(var_3924,var_3925,)
output = call_3923
func_3926 = relay.Function([var_3924,var_3925,], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3697_call = mod.get_global_var('func_3697')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_4001 = relay.TupleGetItem(func_3697_call(), 0)
call_4002 = relay.TupleGetItem(func_3698_call(), 0)
func_3312_call = mod.get_global_var('func_3312')
func_3315_call = mutated_mod.get_global_var('func_3315')
var_4004 = relay.var("var_4004", dtype = "int64", shape = (2002,))#candidate|4004|(2002,)|var|int64
call_4003 = func_3312_call(relay.reshape(var_4004.astype('int64'), [14, 11, 13]), relay.reshape(var_4004.astype('int64'), [14, 11, 13]), )
call_4005 = func_3312_call(relay.reshape(var_4004.astype('int64'), [14, 11, 13]), relay.reshape(var_4004.astype('int64'), [14, 11, 13]), )
output = relay.Tuple([call_4001,call_4003,var_4004,])
output2 = relay.Tuple([call_4002,call_4005,var_4004,])
func_4009 = relay.Function([var_4004,], output)
mod['func_4009'] = func_4009
mod = relay.transform.InferType()(mod)
var_4010 = relay.var("var_4010", dtype = "int64", shape = (2002,))#candidate|4010|(2002,)|var|int64
output = func_4009(var_4010)
func_4011 = relay.Function([var_4010], output)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4024 = relay.TupleGetItem(func_3750_call(), 0)
call_4025 = relay.TupleGetItem(func_3751_call(), 0)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_4043 = relay.TupleGetItem(func_3378_call(), 2)
call_4044 = relay.TupleGetItem(func_3380_call(), 2)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4053 = relay.TupleGetItem(func_3750_call(), 0)
call_4054 = relay.TupleGetItem(func_3751_call(), 0)
uop_4060 = relay.log(call_4053.astype('float64')) # shape=(525,)
uop_4062 = relay.log(call_4054.astype('float64')) # shape=(525,)
output = relay.Tuple([call_4024,call_4043,uop_4060,])
output2 = relay.Tuple([call_4025,call_4044,uop_4062,])
func_4072 = relay.Function([], output)
mod['func_4072'] = func_4072
mod = relay.transform.InferType()(mod)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mutated_mod.get_global_var('func_4072')
call_4073 = func_4072_call()
output = call_4073
func_4074 = relay.Function([], output)
mutated_mod['func_4074'] = func_4074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4145 = relay.TupleGetItem(func_3750_call(), 0)
call_4146 = relay.TupleGetItem(func_3751_call(), 0)
const_4149 = relay.const([9.472951,-9.062936,-0.557830,-3.088808,-1.882063,9.047761,-0.129531,-7.567351,-5.937123,-1.410383,7.482493,-8.590170,9.555828,2.542915,3.999977,6.286608,1.280434,6.834313,3.316760,-6.931392,-5.039158,4.605338,9.265440,7.084779,6.645510,3.611296,-4.653098,-6.635878,-8.126245,1.764438,-5.388059,-7.696046,2.405006,2.196501,-2.579735,-5.606992,-2.920295,8.779534,7.789583,9.977750,-7.663798,1.524701,-8.176745,-0.419181,1.939345,-1.058320,1.698622,7.013829,-2.899480,4.867459,7.418263,8.127955,0.399534,3.074025,-5.499261,3.306335,9.109247,3.877897,-6.204225,-5.795494,5.820666,0.459549,9.167943,9.102987,-1.769569,-7.951163,-2.462535,1.385780,-1.420478,-8.961679,5.411075,-0.027151,-8.031476,-4.383409,3.191691,-1.753712,-4.878845,8.872245,3.063427,7.799970,8.628636,2.595774,-5.594049,7.096030,2.080078,6.110649,4.614080,2.765790,1.016923,-4.628175,-0.328779,1.614773,4.874897,-6.767434,-8.965290,-1.097420,-1.171719,2.987529,-6.812033,5.302072,0.616239,-7.441500,-9.054494,-5.815119,0.864989,5.536067,-5.317250,-1.432478,8.712740,-2.100172,2.311010,-7.651404,-8.549903,-6.804103,-8.902480,-5.266094,-6.300984,3.966543,-5.598733,-7.520764,-5.181712,8.395723,-3.535485,-0.486958,-5.175470,6.290961,4.754663,7.950472,-5.424431,-5.816393,-4.801319,-2.754743,6.210620,1.573617,9.714837,-2.118568,7.070918,-1.746072,7.347308,-3.087364,6.145589,8.217341,5.983929,-6.027525,-9.300757,-1.660607,8.957895,0.323185,-8.974386,-8.753154,-9.571429,-1.219629,-1.776766,-9.782317,0.973236,-7.204812,-5.553353,-6.326971,-0.417976,4.647965,4.816866,5.138270,-9.245755,-2.501813,-6.647627,7.228507,9.150442,-1.023651,-1.522542,3.862400,6.691993,3.971038,-5.414862,4.473863,-5.464589,8.706033,0.282620,1.571097,-3.435904,-7.117396,-1.554669,9.024944,5.739440,-9.175310,-2.343269,-8.632199,8.961016,-2.167673,6.502591,-9.253303,-4.599249,3.118301,8.510979,-1.060768,-6.165800,-6.294845,-8.591516,-9.113031,5.422491,1.472306,5.322627,-1.037701,8.714734,-0.305739,-4.003540,4.666543,-5.878131,-0.806132,2.435965,7.969117,-1.336514,-1.412430,-1.309662,-3.062064,0.912780,1.106962,0.242507,9.695699,-7.422153,0.056580,7.505909,-8.511739,-9.180556,0.470992,3.183475,0.175157,-2.783002,-9.432825,0.243128,-3.544828,-3.827380,7.368769,8.723298,4.771780,-1.239095,7.541416,1.361844,6.488661,-3.439995,7.899631,-7.119473,8.321430,-7.592888,8.827931,4.560829,2.315990,0.504450,5.539484,5.586371,8.397608,-3.423886,1.932943,-0.825377,9.032935,2.885915,-4.362916,0.452145,-0.760102,2.826591,0.982748,-0.728661,-2.172990,5.860274,-3.411777,-2.372752,-0.497393,-0.692996,-1.891111,1.401399,-7.703585,-9.643761,-9.763203,-0.810327,-3.694931,-5.879334,-5.731402,-1.760101,-1.055383,7.722522,-2.427175,-8.551063,-0.395074,4.551207,1.042878,-3.173822,0.206257,-4.884154,-5.622679,9.561458,-0.552153,2.003993,-9.375393,-1.065371,9.166732,5.936863,7.366119,6.286661,2.339667,4.933090,6.509577,-7.292791,-4.672612,-6.714128,5.085653,0.174599,1.153111,7.068773,-6.905558,-1.939994,6.619080,-2.223169,-9.742450,-1.932785,-0.217538,-5.592550,7.538237,-3.457292,-4.857703,-9.498491,-2.107238,4.044531,-7.221550,7.950771,-7.858186,1.144770,-8.720242,2.093475,2.661731,-8.231660,3.917948,2.996759,5.606304,-9.245012,-4.528913,5.909111,1.486199,-0.841885,4.025347,-4.787188,8.064877,5.594790,4.851405,-7.929100,-9.573258,-5.754476,-6.815810,-7.899646,-4.733748,7.612354,-7.710542,0.620271,5.261557,1.099159,-8.182926,8.008980,2.357205,9.567304,6.105373,3.817609,-5.504595,3.010949,8.725483,-4.511323,-6.904100,-2.288806,-3.677432,-0.233384,0.708348,4.282694,-5.483278,-6.840781,7.861683,-0.425951,2.355812,4.286905,-5.407719,-3.696104,-5.473007,1.245210,-9.068211,2.624964,5.736498,9.000543,-9.031332,-1.109218,4.319064,-2.179837,-9.547254,8.999642,4.034166,5.989772,1.595804,2.463134,-3.562234,-6.445106,2.570251,-5.210373,-1.583141,5.157760,-1.393790,7.422809,-2.022729,-0.384281,-0.557242,6.924099,-7.897842,5.853263,-1.321686,-3.354671,3.561102,-5.587450,-6.118550,-0.191162,-0.487222,9.881422,4.029191,-9.549587,2.856393,9.939018,-4.508744,4.790927,9.991555,-1.074720,1.943153,7.542172,0.550395,7.419172,-0.278659,-1.629052,-0.827834,6.345075,-4.663965,7.374197,-9.506464,-3.128217,7.032767,-2.626333,-3.059549,2.110249,8.164432,9.960869,-3.581738,-1.551055,-8.654856,5.672336,3.165037,-5.849909,-4.501838,1.902954,-5.425484,8.430943,1.402008,5.839823,-5.845331,4.253435,7.288967,-8.187493,-8.308891,-6.088148,-7.926535,7.824698,-3.984164,8.793340,8.343966,4.496218,-7.967934,-6.529302,-8.695682,-4.716987,-4.619091,-1.610807,-9.368566,2.955683,-9.723984,9.479703,6.872350,-4.863348,-5.519371,-0.233906,-8.796955,-6.857303,-8.569762,-7.192435,-2.682751,6.380287,-3.679253,-8.392598,-9.202779,8.684081,0.281534,1.091003,2.779734,-1.107292,-1.177771,-4.156048,-8.653255,7.107096,5.259626,-7.869188,-8.694274,-9.516887,7.851861,9.950653,-2.320871,-7.601442,4.311645,-3.036799,5.144547,4.159924,1.275912,-8.921233,-0.001204,-5.807975,6.498740,2.201913,-2.129720,7.012670,-5.215813,3.709016,6.240472,-4.820568,-3.948154,-2.484880,6.028266,5.394653], dtype = "float32")#candidate|4149|(525,)|const|float32
bop_4150 = relay.bitwise_or(call_4145.astype('int64'), relay.reshape(const_4149.astype('int64'), relay.shape_of(call_4145))) # shape=(525,)
bop_4153 = relay.bitwise_or(call_4146.astype('int64'), relay.reshape(const_4149.astype('int64'), relay.shape_of(call_4146))) # shape=(525,)
uop_4157 = relay.tan(const_4149.astype('float32')) # shape=(525,)
func_2452_call = mod.get_global_var('func_2452')
func_2456_call = mutated_mod.get_global_var('func_2456')
var_4162 = relay.var("var_4162", dtype = "uint8", shape = ())#candidate|4162|()|var|uint8
var_4163 = relay.var("var_4163", dtype = "uint8", shape = (784,))#candidate|4163|(784,)|var|uint8
call_4161 = relay.TupleGetItem(func_2452_call(relay.reshape(var_4162.astype('uint8'), []), relay.reshape(var_4163.astype('uint8'), [4, 14, 14]), ), 0)
call_4164 = relay.TupleGetItem(func_2456_call(relay.reshape(var_4162.astype('uint8'), []), relay.reshape(var_4163.astype('uint8'), [4, 14, 14]), ), 0)
func_3583_call = mod.get_global_var('func_3583')
func_3587_call = mutated_mod.get_global_var('func_3587')
const_4175 = relay.const([[-3.483574,1.596884,1.377070,-0.372120,7.443770,0.144633,-4.604993,-9.222721,-8.631914,7.924795,8.702415,3.277779,5.634474,-9.280443,1.908995,-3.230000]], dtype = "float32")#candidate|4175|(1, 16)|const|float32
call_4174 = relay.TupleGetItem(func_3583_call(relay.reshape(var_4162.astype('int16'), []), relay.reshape(const_4175.astype('float32'), [4, 4]), ), 4)
call_4176 = relay.TupleGetItem(func_3587_call(relay.reshape(var_4162.astype('int16'), []), relay.reshape(const_4175.astype('float32'), [4, 4]), ), 4)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_4184 = relay.TupleGetItem(func_3378_call(), 0)
call_4185 = relay.TupleGetItem(func_3380_call(), 0)
output = relay.Tuple([bop_4150,uop_4157,call_4161,var_4162,var_4163,call_4174,const_4175,call_4184,])
output2 = relay.Tuple([bop_4153,uop_4157,call_4164,var_4162,var_4163,call_4176,const_4175,call_4185,])
func_4194 = relay.Function([var_4162,var_4163,], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
var_4195 = relay.var("var_4195", dtype = "uint8", shape = ())#candidate|4195|()|var|uint8
var_4196 = relay.var("var_4196", dtype = "uint8", shape = (784,))#candidate|4196|(784,)|var|uint8
output = func_4194(var_4195,var_4196,)
func_4197 = relay.Function([var_4195,var_4196,], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_4201 = relay.TupleGetItem(func_3378_call(), 0)
call_4202 = relay.TupleGetItem(func_3380_call(), 0)
uop_4220 = relay.cosh(call_4201.astype('float64')) # shape=(3, 2, 10)
uop_4222 = relay.cosh(call_4202.astype('float64')) # shape=(3, 2, 10)
uop_4225 = relay.sqrt(uop_4220.astype('float32')) # shape=(3, 2, 10)
uop_4227 = relay.sqrt(uop_4222.astype('float32')) # shape=(3, 2, 10)
output = relay.Tuple([uop_4225,])
output2 = relay.Tuple([uop_4227,])
func_4234 = relay.Function([], output)
mod['func_4234'] = func_4234
mod = relay.transform.InferType()(mod)
output = func_4234()
func_4235 = relay.Function([], output)
mutated_mod['func_4235'] = func_4235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_4256 = relay.TupleGetItem(func_3378_call(), 1)
call_4257 = relay.TupleGetItem(func_3380_call(), 1)
func_3583_call = mod.get_global_var('func_3583')
func_3587_call = mutated_mod.get_global_var('func_3587')
const_4259 = relay.const(-10, dtype = "int16")#candidate|4259|()|const|int16
const_4260 = relay.const([-3.483322,-3.965643,-7.560206,5.541104,-4.028572,2.083115,1.366620,-7.738769,-5.597644,5.850079,-2.604445,-2.557385,7.799205,8.756289,2.844971,-7.010426], dtype = "float32")#candidate|4260|(16,)|const|float32
call_4258 = relay.TupleGetItem(func_3583_call(relay.reshape(const_4259.astype('int16'), []), relay.reshape(const_4260.astype('float32'), [4, 4]), ), 3)
call_4261 = relay.TupleGetItem(func_3587_call(relay.reshape(const_4259.astype('int16'), []), relay.reshape(const_4260.astype('float32'), [4, 4]), ), 3)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
var_4273 = relay.var("var_4273", dtype = "float32", shape = (525,))#candidate|4273|(525,)|var|float32
call_4272 = func_698_call(relay.reshape(var_4273.astype('float32'), [15, 7, 5]))
call_4274 = func_698_call(relay.reshape(var_4273.astype('float32'), [15, 7, 5]))
func_4194_call = mod.get_global_var('func_4194')
func_4197_call = mutated_mod.get_global_var('func_4197')
var_4276 = relay.var("var_4276", dtype = "uint8", shape = (392, 2))#candidate|4276|(392, 2)|var|uint8
call_4275 = relay.TupleGetItem(func_4194_call(relay.reshape(const_4259.astype('uint8'), []), relay.reshape(var_4276.astype('uint8'), [784,]), ), 6)
call_4277 = relay.TupleGetItem(func_4197_call(relay.reshape(const_4259.astype('uint8'), []), relay.reshape(var_4276.astype('uint8'), [784,]), ), 6)
func_3697_call = mod.get_global_var('func_3697')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_4284 = relay.TupleGetItem(func_3697_call(), 0)
call_4285 = relay.TupleGetItem(func_3698_call(), 0)
output = relay.Tuple([call_4256,call_4258,const_4259,const_4260,call_4272,var_4273,call_4275,var_4276,call_4284,])
output2 = relay.Tuple([call_4257,call_4261,const_4259,const_4260,call_4274,var_4273,call_4277,var_4276,call_4285,])
func_4288 = relay.Function([var_4273,var_4276,], output)
mod['func_4288'] = func_4288
mod = relay.transform.InferType()(mod)
var_4289 = relay.var("var_4289", dtype = "float32", shape = (525,))#candidate|4289|(525,)|var|float32
var_4290 = relay.var("var_4290", dtype = "uint8", shape = (392, 2))#candidate|4290|(392, 2)|var|uint8
output = func_4288(var_4289,var_4290,)
func_4291 = relay.Function([var_4289,var_4290,], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3786_call = mod.get_global_var('func_3786')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_4315 = func_3786_call()
call_4316 = func_3786_call()
var_4319 = relay.var("var_4319", dtype = "float32", shape = (525,))#candidate|4319|(525,)|var|float32
bop_4320 = relay.floor_mod(call_4315.astype('float32'), relay.reshape(var_4319.astype('float32'), relay.shape_of(call_4315))) # shape=(525,)
bop_4323 = relay.floor_mod(call_4316.astype('float32'), relay.reshape(var_4319.astype('float32'), relay.shape_of(call_4316))) # shape=(525,)
func_3196_call = mod.get_global_var('func_3196')
func_3199_call = mutated_mod.get_global_var('func_3199')
const_4325 = relay.const([-0.300910,1.338580,9.386633,-7.499374,-5.841047,7.352913,7.331117,-2.151693,-2.346335,0.998060,-9.874428,6.829361,-1.234829,-9.308563,7.878567,5.377954,8.711514,-6.322674,-0.653143,2.582349,-3.123016,-7.135106,-2.197393,5.179070,-5.063586,2.812502,8.821895,-1.197694,3.112590,2.000275,1.451944,-9.936270,-5.227449,3.544008,5.484452,2.691743,5.450022,3.426587,-0.485066,3.462182,-6.057248,-9.486190,5.020503,7.064653,8.743561,7.829151,-4.409734,3.648206,6.244387,6.928298,-3.437423,-9.529012,-2.934093,1.552953,-7.342416,4.630690,6.737179,8.156040,6.142106,4.192819,5.283469,2.623553,2.199420,-6.287303,0.598510,3.152613,9.928919,7.456311,-5.914863,-9.881790,1.078798,0.768975,4.812941,4.431384,7.151644,9.399573,-9.810123,-7.800917,-6.176116,-1.494932,-0.492801,7.793812,3.628939,-4.208940,3.120636,-9.605654,-0.642465,0.023782,-1.242303,-1.059390,4.441840,8.363555,-9.103610,4.813705,-6.042251,-8.931518,-6.827878,-6.801731,3.881819,9.033005,-5.796102,1.014568,1.206523,-0.880571,-6.365110,8.877992,4.492129,7.375907,8.991888,-4.145364,-6.795271,-6.181198,-3.443180,-1.296683,7.011933,-1.991608,7.558415,2.134464,-0.370425,8.046661,-2.443901,-1.494194,1.699958,-7.852552,1.338703,-1.801735,7.265226,-2.777182,-7.067769,8.742134,-0.417674,2.299162,-6.754539,-5.028592,-7.667530,1.422533,-0.494556,-4.033884,8.765287,-3.746987,0.414251,-7.278808,-3.863913,-5.788895,5.436708,-7.512659,7.210816,3.367477,-2.285855,-8.375044,8.579435,-5.051756,-2.213590,6.934128,4.038479,-5.872887,1.999198,4.286863,8.267525,-2.581760,-9.274122,-2.472839,-7.966455,3.749173,1.335534,5.339842,5.585786,-5.236160,2.921860,0.364617,-3.241933,4.583814,-8.782768,0.779710,9.008247,-3.154370,-6.879707,9.681623,-4.085158,-5.427624,5.843427,7.892708,3.964320,-8.887880,0.225936,1.202830,5.288133,9.135469,6.371464,7.764047,-9.464593,-5.214503,-8.646702,8.297407,-4.343898,-3.497430,-6.834187,-0.552724,4.467799,-1.719079,-6.728714,-6.969540,-5.675711,8.210459,-5.802677,-1.993216,-4.705803,-4.415070,2.644608,-3.301923,5.816701,0.853975,-2.040977,1.757528,-3.344686,-5.391831,6.527796,-1.401409,0.820076,3.406326,-6.431719,-6.318564,7.758564,3.289150,3.014762,-8.438725,-3.954476,-5.412250,-9.450644,-8.171697,9.559399,2.681760,-0.227583,-0.335999,-0.955354,4.636352,-7.479320,1.785748,-3.054008,-7.179849,-9.745609,-6.304637,-2.963504,0.050953,-7.427974,0.829118,1.565334,-0.296791,-6.832101,6.043318,4.212922,3.122495,-5.217722,8.966421,7.121147,-8.362421,-3.750488,-0.402387,9.211488,4.640330,2.643828,4.525881,-2.373012,-8.099285,2.051786,8.556022,7.854664,-7.714617,5.431353,-2.193225,6.464177,7.046096,-7.392627,-5.086888,5.075848,1.656108,-6.481833,7.688577,1.085710,9.547420,4.941407,2.436989,4.773981,0.399768,8.108470,6.195152,-7.907880,-2.278551,-2.096801,2.679847,9.229883,-2.095582,5.770276,-9.262105,-7.900843,8.953551,-0.842740,-2.553684,-3.608082,-0.221193,1.842878,-3.876955,-7.199487,-1.563173,6.546066,1.960343,6.229733,-1.735210,8.604010,1.395411,-3.504457,-9.289619,1.545856,-8.809695,-4.491595,3.259127,-7.254917,9.901793,-5.322198,0.856654,7.236722,-6.018423,3.975646,-7.696563,1.425906,-3.311888,-4.663771,-6.168757,7.186001,-3.150979,-1.057622,4.246026,7.754973,8.473526,5.646882,-9.429875,4.104364,0.349847,6.134167,-4.824561,5.356670,0.672788,0.928952,8.897721,-8.165226,-0.378184,1.928034,-0.880044,-3.655254,-8.364652,-7.410264,6.218464,-5.694118,-5.145657,-2.476953,-6.627997,0.221775,4.558959,-9.790358,4.248535], dtype = "float64")#candidate|4325|(360,)|const|float64
call_4324 = relay.TupleGetItem(func_3196_call(relay.reshape(const_4325.astype('float64'), [2, 12, 15]), relay.reshape(const_4325.astype('float64'), [2, 12, 15]), ), 0)
call_4326 = relay.TupleGetItem(func_3199_call(relay.reshape(const_4325.astype('float64'), [2, 12, 15]), relay.reshape(const_4325.astype('float64'), [2, 12, 15]), ), 0)
func_2843_call = mod.get_global_var('func_2843')
func_2847_call = mutated_mod.get_global_var('func_2847')
var_4332 = relay.var("var_4332", dtype = "int16", shape = (312,))#candidate|4332|(312,)|var|int16
var_4333 = relay.var("var_4333", dtype = "uint32", shape = (1152,))#candidate|4333|(1152,)|var|uint32
call_4331 = relay.TupleGetItem(func_2843_call(relay.reshape(var_4332.astype('int16'), [13, 12, 2]), relay.reshape(var_4333.astype('uint32'), [1152,]), ), 5)
call_4334 = relay.TupleGetItem(func_2847_call(relay.reshape(var_4332.astype('int16'), [13, 12, 2]), relay.reshape(var_4333.astype('uint32'), [1152,]), ), 5)
output = relay.Tuple([bop_4320,call_4324,const_4325,call_4331,var_4332,var_4333,])
output2 = relay.Tuple([bop_4323,call_4326,const_4325,call_4334,var_4332,var_4333,])
func_4337 = relay.Function([var_4319,var_4332,var_4333,], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
var_4338 = relay.var("var_4338", dtype = "float32", shape = (525,))#candidate|4338|(525,)|var|float32
var_4339 = relay.var("var_4339", dtype = "int16", shape = (312,))#candidate|4339|(312,)|var|int16
var_4340 = relay.var("var_4340", dtype = "uint32", shape = (1152,))#candidate|4340|(1152,)|var|uint32
output = func_4337(var_4338,var_4339,var_4340,)
func_4341 = relay.Function([var_4338,var_4339,var_4340,], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_4364 = relay.TupleGetItem(func_3494_call(), 4)
call_4365 = relay.TupleGetItem(func_3495_call(), 4)
output = call_4364
output2 = call_4365
func_4373 = relay.Function([], output)
mod['func_4373'] = func_4373
mod = relay.transform.InferType()(mod)
mutated_mod['func_4373'] = func_4373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4373_call = mutated_mod.get_global_var('func_4373')
call_4374 = func_4373_call()
output = call_4374
func_4375 = relay.Function([], output)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4373_call = mod.get_global_var('func_4373')
func_4375_call = mutated_mod.get_global_var('func_4375')
call_4376 = func_4373_call()
call_4377 = func_4373_call()
func_4288_call = mod.get_global_var('func_4288')
func_4291_call = mutated_mod.get_global_var('func_4291')
var_4381 = relay.var("var_4381", dtype = "float32", shape = (525,))#candidate|4381|(525,)|var|float32
var_4382 = relay.var("var_4382", dtype = "uint8", shape = (784,))#candidate|4382|(784,)|var|uint8
call_4380 = relay.TupleGetItem(func_4288_call(relay.reshape(var_4381.astype('float32'), [525,]), relay.reshape(var_4382.astype('uint8'), [392, 2]), ), 3)
call_4383 = relay.TupleGetItem(func_4291_call(relay.reshape(var_4381.astype('float32'), [525,]), relay.reshape(var_4382.astype('uint8'), [392, 2]), ), 3)
func_3196_call = mod.get_global_var('func_3196')
func_3199_call = mutated_mod.get_global_var('func_3199')
var_4412 = relay.var("var_4412", dtype = "float64", shape = (360,))#candidate|4412|(360,)|var|float64
call_4411 = relay.TupleGetItem(func_3196_call(relay.reshape(var_4412.astype('float64'), [2, 12, 15]), relay.reshape(var_4412.astype('float64'), [2, 12, 15]), ), 0)
call_4413 = relay.TupleGetItem(func_3199_call(relay.reshape(var_4412.astype('float64'), [2, 12, 15]), relay.reshape(var_4412.astype('float64'), [2, 12, 15]), ), 0)
output = relay.Tuple([call_4376,call_4380,var_4381,var_4382,call_4411,var_4412,])
output2 = relay.Tuple([call_4377,call_4383,var_4381,var_4382,call_4413,var_4412,])
func_4426 = relay.Function([var_4381,var_4382,var_4412,], output)
mod['func_4426'] = func_4426
mod = relay.transform.InferType()(mod)
var_4427 = relay.var("var_4427", dtype = "float32", shape = (525,))#candidate|4427|(525,)|var|float32
var_4428 = relay.var("var_4428", dtype = "uint8", shape = (784,))#candidate|4428|(784,)|var|uint8
var_4429 = relay.var("var_4429", dtype = "float64", shape = (360,))#candidate|4429|(360,)|var|float64
output = func_4426(var_4427,var_4428,var_4429,)
func_4430 = relay.Function([var_4427,var_4428,var_4429,], output)
mutated_mod['func_4430'] = func_4430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_4477 = relay.TupleGetItem(func_3712_call(), 0)
call_4478 = relay.TupleGetItem(func_3714_call(), 0)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
var_4480 = relay.var("var_4480", dtype = "int64", shape = (720,))#candidate|4480|(720,)|var|int64
call_4479 = relay.TupleGetItem(func_1412_call(relay.reshape(var_4480.astype('int64'), [4, 15, 12])), 0)
call_4481 = relay.TupleGetItem(func_1414_call(relay.reshape(var_4480.astype('int64'), [4, 15, 12])), 0)
output = relay.Tuple([call_4477,call_4479,var_4480,])
output2 = relay.Tuple([call_4478,call_4481,var_4480,])
func_4482 = relay.Function([var_4480,], output)
mod['func_4482'] = func_4482
mod = relay.transform.InferType()(mod)
var_4483 = relay.var("var_4483", dtype = "int64", shape = (720,))#candidate|4483|(720,)|var|int64
output = func_4482(var_4483)
func_4484 = relay.Function([var_4483], output)
mutated_mod['func_4484'] = func_4484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3688_call = mutated_mod.get_global_var('func_3688')
call_4510 = func_3687_call()
call_4511 = func_3687_call()
func_4373_call = mod.get_global_var('func_4373')
func_4375_call = mutated_mod.get_global_var('func_4375')
call_4512 = func_4373_call()
call_4513 = func_4373_call()
uop_4514 = relay.atan(call_4512.astype('float32')) # shape=(3, 2, 10)
uop_4516 = relay.atan(call_4513.astype('float32')) # shape=(3, 2, 10)
const_4518 = relay.const([[[-2.684132,9.606954,-1.594512,6.035759,-7.224060,-5.252890,6.437462,-6.915628,1.962477,-1.735788],[-4.720095,-6.366454,-6.547772,9.280975,-8.855416,1.287576,-0.524620,9.272393,-2.770266,3.151051]],[[-9.821644,1.161142,9.372023,-7.840266,-2.963296,3.526149,-7.257741,-6.301533,-5.235496,8.090909],[-0.558162,4.981318,7.629213,-6.423304,5.274312,-2.860526,6.241518,7.060952,-4.039668,5.240386]],[[-6.044860,1.663171,7.856281,4.349728,-9.451728,-7.160400,-4.046865,2.737758,-9.136103,8.864705],[4.632564,1.242346,6.608025,-1.799538,-8.744235,1.553193,-8.658794,0.298194,-6.418838,5.410264]]], dtype = "float32")#candidate|4518|(3, 2, 10)|const|float32
bop_4519 = relay.divide(uop_4514.astype('float32'), relay.reshape(const_4518.astype('float32'), relay.shape_of(uop_4514))) # shape=(3, 2, 10)
bop_4522 = relay.divide(uop_4516.astype('float32'), relay.reshape(const_4518.astype('float32'), relay.shape_of(uop_4516))) # shape=(3, 2, 10)
output = relay.Tuple([call_4510,bop_4519,])
output2 = relay.Tuple([call_4511,bop_4522,])
func_4524 = relay.Function([], output)
mod['func_4524'] = func_4524
mod = relay.transform.InferType()(mod)
output = func_4524()
func_4525 = relay.Function([], output)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3826_call = mod.get_global_var('func_3826')
func_3827_call = mutated_mod.get_global_var('func_3827')
call_4526 = func_3826_call()
call_4527 = func_3826_call()
uop_4537 = relay.tan(call_4526.astype('float32')) # shape=(14, 1, 15)
uop_4539 = relay.tan(call_4527.astype('float32')) # shape=(14, 1, 15)
var_4540 = relay.var("var_4540", dtype = "float32", shape = (14, 3, 15))#candidate|4540|(14, 3, 15)|var|float32
bop_4541 = relay.minimum(uop_4537.astype('int8'), var_4540.astype('int8')) # shape=(14, 3, 15)
bop_4544 = relay.minimum(uop_4539.astype('int8'), var_4540.astype('int8')) # shape=(14, 3, 15)
func_3411_call = mod.get_global_var('func_3411')
func_3414_call = mutated_mod.get_global_var('func_3414')
var_4546 = relay.var("var_4546", dtype = "float32", shape = (1, 525))#candidate|4546|(1, 525)|var|float32
call_4545 = relay.TupleGetItem(func_3411_call(relay.reshape(var_4546.astype('float32'), [525,])), 0)
call_4547 = relay.TupleGetItem(func_3414_call(relay.reshape(var_4546.astype('float32'), [525,])), 0)
output = relay.Tuple([bop_4541,call_4545,var_4546,])
output2 = relay.Tuple([bop_4544,call_4547,var_4546,])
func_4549 = relay.Function([var_4540,var_4546,], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mutated_mod.get_global_var('func_4549')
var_4551 = relay.var("var_4551", dtype = "float32", shape = (14, 3, 15))#candidate|4551|(14, 3, 15)|var|float32
var_4552 = relay.var("var_4552", dtype = "float32", shape = (1, 525))#candidate|4552|(1, 525)|var|float32
call_4550 = func_4549_call(var_4551,var_4552,)
output = call_4550
func_4553 = relay.Function([var_4551,var_4552,], output)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_4555 = relay.TupleGetItem(func_3712_call(), 0)
call_4556 = relay.TupleGetItem(func_3714_call(), 0)
output = call_4555
output2 = call_4556
func_4557 = relay.Function([], output)
mod['func_4557'] = func_4557
mod = relay.transform.InferType()(mod)
output = func_4557()
func_4558 = relay.Function([], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3786_call = mod.get_global_var('func_3786')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_4561 = func_3786_call()
call_4562 = func_3786_call()
var_4567 = relay.var("var_4567", dtype = "float32", shape = (525,))#candidate|4567|(525,)|var|float32
bop_4568 = relay.equal(call_4561.astype('bool'), relay.reshape(var_4567.astype('bool'), relay.shape_of(call_4561))) # shape=(525,)
bop_4571 = relay.equal(call_4562.astype('bool'), relay.reshape(var_4567.astype('bool'), relay.shape_of(call_4562))) # shape=(525,)
func_2356_call = mod.get_global_var('func_2356')
func_2360_call = mutated_mod.get_global_var('func_2360')
var_4583 = relay.var("var_4583", dtype = "uint16", shape = (1280,))#candidate|4583|(1280,)|var|uint16
call_4582 = relay.TupleGetItem(func_2356_call(relay.reshape(var_4583.astype('uint16'), [16, 8, 10]), relay.reshape(var_4583.astype('uint16'), [16, 8, 10]), ), 0)
call_4584 = relay.TupleGetItem(func_2360_call(relay.reshape(var_4583.astype('uint16'), [16, 8, 10]), relay.reshape(var_4583.astype('uint16'), [16, 8, 10]), ), 0)
output = relay.Tuple([bop_4568,call_4582,var_4583,])
output2 = relay.Tuple([bop_4571,call_4584,var_4583,])
func_4594 = relay.Function([var_4567,var_4583,], output)
mod['func_4594'] = func_4594
mod = relay.transform.InferType()(mod)
var_4595 = relay.var("var_4595", dtype = "float32", shape = (525,))#candidate|4595|(525,)|var|float32
var_4596 = relay.var("var_4596", dtype = "uint16", shape = (1280,))#candidate|4596|(1280,)|var|uint16
output = func_4594(var_4595,var_4596,)
func_4597 = relay.Function([var_4595,var_4596,], output)
mutated_mod['func_4597'] = func_4597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_4614 = func_4557_call()
call_4615 = func_4557_call()
output = relay.Tuple([call_4614,])
output2 = relay.Tuple([call_4615,])
func_4618 = relay.Function([], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
output = func_4618()
func_4619 = relay.Function([], output)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4074_call = mutated_mod.get_global_var('func_4074')
call_4649 = relay.TupleGetItem(func_4072_call(), 2)
call_4650 = relay.TupleGetItem(func_4074_call(), 2)
output = relay.Tuple([call_4649,])
output2 = relay.Tuple([call_4650,])
func_4667 = relay.Function([], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
output = func_4667()
func_4668 = relay.Function([], output)
mutated_mod['func_4668'] = func_4668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4676 = relay.var("var_4676", dtype = "float32", shape = (7, 13, 12))#candidate|4676|(7, 13, 12)|var|float32
uop_4677 = relay.erf(var_4676.astype('float32')) # shape=(7, 13, 12)
func_3583_call = mod.get_global_var('func_3583')
func_3587_call = mutated_mod.get_global_var('func_3587')
const_4687 = relay.const(-7, dtype = "int16")#candidate|4687|()|const|int16
var_4688 = relay.var("var_4688", dtype = "float32", shape = (16,))#candidate|4688|(16,)|var|float32
call_4686 = relay.TupleGetItem(func_3583_call(relay.reshape(const_4687.astype('int16'), []), relay.reshape(var_4688.astype('float32'), [4, 4]), ), 1)
call_4689 = relay.TupleGetItem(func_3587_call(relay.reshape(const_4687.astype('int16'), []), relay.reshape(var_4688.astype('float32'), [4, 4]), ), 1)
output = relay.Tuple([uop_4677,call_4686,const_4687,var_4688,])
output2 = relay.Tuple([uop_4677,call_4689,const_4687,var_4688,])
func_4696 = relay.Function([var_4676,var_4688,], output)
mod['func_4696'] = func_4696
mod = relay.transform.InferType()(mod)
var_4697 = relay.var("var_4697", dtype = "float32", shape = (7, 13, 12))#candidate|4697|(7, 13, 12)|var|float32
var_4698 = relay.var("var_4698", dtype = "float32", shape = (16,))#candidate|4698|(16,)|var|float32
output = func_4696(var_4697,var_4698,)
func_4699 = relay.Function([var_4697,var_4698,], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3688_call = mutated_mod.get_global_var('func_3688')
call_4704 = func_3687_call()
call_4705 = func_3687_call()
output = relay.Tuple([call_4704,])
output2 = relay.Tuple([call_4705,])
func_4707 = relay.Function([], output)
mod['func_4707'] = func_4707
mod = relay.transform.InferType()(mod)
mutated_mod['func_4707'] = func_4707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4707_call = mutated_mod.get_global_var('func_4707')
call_4708 = func_4707_call()
output = call_4708
func_4709 = relay.Function([], output)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_4749 = func_4557_call()
call_4750 = func_4557_call()
uop_4771 = relay.cos(call_4749.astype('float64')) # shape=(7, 13, 9)
uop_4773 = relay.cos(call_4750.astype('float64')) # shape=(7, 13, 9)
bop_4794 = relay.mod(call_4749.astype('float32'), relay.reshape(uop_4771.astype('float32'), relay.shape_of(call_4749))) # shape=(7, 13, 9)
bop_4797 = relay.mod(call_4750.astype('float32'), relay.reshape(uop_4773.astype('float32'), relay.shape_of(call_4750))) # shape=(7, 13, 9)
func_2974_call = mod.get_global_var('func_2974')
func_2977_call = mutated_mod.get_global_var('func_2977')
const_4802 = relay.const(-5.247616, dtype = "float32")#candidate|4802|()|const|float32
const_4803 = relay.const([8.896725,-5.868752,1.284665,0.609628,0.865240,2.979315,-5.219013,3.909175,-7.168583,-3.013885,1.692503,-2.146273,-5.369647,-3.457105,-1.323296,-1.735821,-6.457328,-4.997302,3.239859,-5.221797,-2.407999,-9.413095,2.510293,-6.994828,3.485977,0.037814,-8.411361,8.472299,-7.190805,-2.112677,2.582343,2.673404,-9.736725,1.138654,3.664290,-3.081942,-2.774376,-1.624587,6.934310,3.759904,-0.882334,4.759895,-6.437012,6.112627,-1.642229,8.646849,-8.306658,-1.680372,-3.113950,-9.032909,2.649848,-3.004287,6.891854,-1.885967,2.505849,7.630581,-1.470532,-3.286266,-4.209005,-3.122205,-3.093426,-4.341873,-3.408752,8.069146,6.734631,-2.487303,-3.646043,-0.831027,-8.141825,-5.986980,-5.246576,0.185488,-2.070423,1.792003,6.350633,-4.102032,-2.165588,-7.792340,1.979155,5.748126,-1.377521,0.214087,-3.917745,-7.630292,-1.628105,5.772720,9.904695,-4.950972,-9.489052,-1.025514,3.215385,9.950429,0.318351,-8.339165,1.790425,4.465075,0.750363,3.700066,-9.382181,-2.537390,-5.069850,6.920449,-6.348737,-5.480700,-2.281755,-2.660683,7.711155,2.887738], dtype = "float32")#candidate|4803|(108,)|const|float32
call_4801 = relay.TupleGetItem(func_2974_call(relay.reshape(const_4802.astype('float32'), []), relay.reshape(const_4803.astype('float32'), [4, 9, 3]), ), 0)
call_4804 = relay.TupleGetItem(func_2977_call(relay.reshape(const_4802.astype('float32'), []), relay.reshape(const_4803.astype('float32'), [4, 9, 3]), ), 0)
var_4811 = relay.var("var_4811", dtype = "float32", shape = (4, 9, 3))#candidate|4811|(4, 9, 3)|var|float32
bop_4812 = relay.minimum(call_4801.astype('float32'), relay.reshape(var_4811.astype('float32'), relay.shape_of(call_4801))) # shape=(4, 9, 3)
bop_4815 = relay.minimum(call_4804.astype('float32'), relay.reshape(var_4811.astype('float32'), relay.shape_of(call_4804))) # shape=(4, 9, 3)
output = relay.Tuple([bop_4794,const_4802,const_4803,bop_4812,])
output2 = relay.Tuple([bop_4797,const_4802,const_4803,bop_4815,])
func_4825 = relay.Function([var_4811,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
mutated_mod['func_4825'] = func_4825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (4, 9, 3))#candidate|4826|(4, 9, 3)|var|float32
func_4825_call = mutated_mod.get_global_var('func_4825')
call_4827 = func_4825_call(var_4826)
output = call_4827
func_4828 = relay.Function([var_4826], output)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4837 = relay.var("var_4837", dtype = "float32", shape = (13, 1, 7))#candidate|4837|(13, 1, 7)|var|float32
uop_4838 = relay.atan(var_4837.astype('float32')) # shape=(13, 1, 7)
func_3411_call = mod.get_global_var('func_3411')
func_3414_call = mutated_mod.get_global_var('func_3414')
const_4844 = relay.const([8.373679,-1.853082,-0.205159,1.975676,-7.514092,-8.626761,-5.176209,-9.639749,2.474531,-4.633170,5.496097,2.138607,-2.544151,1.612356,-3.022062,-1.308346,8.590151,6.037754,0.486447,1.361352,-6.613667,-7.226130,-7.338563,3.057827,6.436969,4.657323,-7.689922,4.202446,3.549097,-2.075993,-8.806054,9.087019,7.960616,-4.241499,-9.968347,-3.369608,4.080683,9.164585,2.029640,3.427155,-0.410626,6.221540,3.244526,4.241058,-3.647805,-7.846164,-0.166365,-1.780794,8.342083,-4.290722,1.238070,-5.777301,3.197906,-8.430155,-1.696916,4.083250,-2.002306,6.700788,2.584567,4.068315,-4.868862,4.561506,2.381794,-2.233448,-0.511835,-3.013069,5.219547,-2.980565,-1.085306,3.199770,-7.654648,4.995061,9.995524,1.686385,-0.483213,-1.663768,-9.198116,0.626260,-9.995080,-0.058815,9.726809,-3.073910,8.013308,7.529134,5.706524,-0.561122,-9.750055,-2.967569,-0.254075,-0.314696,-3.822661,9.534343,-0.461016,3.684802,-1.584108,1.696032,-5.927314,-6.510171,-5.735091,-2.372022,-4.618615,-3.736064,-4.664067,7.360070,-5.335181,6.858610,-0.045790,5.819515,-4.080442,4.552249,7.342331,-3.979194,-7.878731,5.426882,-8.529638,-1.548627,9.401867,6.177426,-3.008116,-4.816220,5.962547,1.640252,7.234618,-4.958694,7.267688,-5.962748,9.607755,2.961629,-8.581867,-0.258879,-2.531831,3.737983,7.458528,5.634730,5.135103,-0.743601,-0.690200,0.347064,7.959850,9.303015,7.236678,8.443085,-6.275927,5.285692,7.233677,3.509837,-9.991769,0.972113,-8.998372,6.932940,2.461560,-9.615114,-8.229531,2.870998,6.622931,-0.495052,-9.382467,0.814510,-4.650325,2.477780,7.647205,8.251579,-7.299248,6.844112,-9.374708,-0.875162,0.001748,8.747080,-5.799623,4.849276,0.797409,2.363774,5.173408,-5.616682,2.808511,0.857004,-1.570342,-8.602483,-7.962342,0.099397,3.540097,-1.155587,-3.919002,-1.659918,-3.266579,9.021919,1.948779,5.459272,4.759746,1.113933,-7.850837,3.322830,9.119917,1.824975,-4.569947,-0.820995,-8.762894,-6.412352,-9.377393,-5.365016,-9.743724,-9.116143,-1.958025,-4.214523,6.396194,-2.850018,-9.184188,6.186543,5.109186,5.180148,7.630131,3.208574,-8.244634,7.443684,-4.840025,8.202434,1.970324,4.365555,-0.956653,1.547410,8.562386,7.360199,-2.782852,3.507288,0.359217,6.279474,4.835081,-9.546979,-2.424729,-7.528757,2.346284,2.977429,-0.950491,-6.185103,-9.144810,-4.183223,2.381019,1.169865,-7.992122,-9.813560,-7.093431,5.082646,-3.061708,9.123255,6.943357,-6.924100,-4.434409,1.659581,-3.078337,4.150074,6.471134,-2.562529,4.874769,-5.111750,-4.897813,5.578343,-7.875720,-3.192120,-2.265716,6.932643,-0.951826,7.727485,4.172510,8.086221,-4.822350,-5.673039,-3.606597,7.632232,8.987318,-6.034096,-4.803937,-2.186021,-3.945831,4.825492,-3.973525,-3.863264,-7.901029,8.249732,-6.168082,7.127905,2.179888,-6.183455,-2.577873,6.054779,-6.332180,-0.911504,5.642693,4.993953,7.647927,1.062582,-5.782600,-1.567468,0.551068,-3.062156,-1.396752,-8.757822,-7.901386,-7.474208,-6.556014,-9.235317,2.686007,8.691522,0.304583,-3.243531,-1.010034,-4.582167,4.040691,2.908577,0.427720,-1.426699,-3.094177,6.995398,0.338633,6.139352,-6.507571,-9.139064,-4.388514,-7.858147,9.773453,3.419091,-7.900969,-2.567882,-4.466398,-8.150641,5.532683,-3.726009,-2.764581,-9.170188,4.396897,5.127946,4.743501,7.957211,-4.337169,0.468527,-5.281782,7.856485,1.801023,-0.389466,4.457554,2.177815,8.720881,-7.116453,1.466620,5.122131,4.909680,-0.950488,8.173756,-3.802639,-0.199479,3.525542,-0.738118,5.190969,-8.175938,-9.165122,1.248688,-7.146850,1.030231,-4.155768,-4.752499,2.680701,-3.761758,-1.725502,5.748886,4.125454,7.822530,-0.718231,3.945981,2.457149,2.513334,-3.219485,1.104501,0.849134,5.411352,9.594827,5.016240,3.032003,8.591964,0.320308,3.684309,-3.599033,3.974731,-8.955964,-5.450117,-7.973599,1.477386,-9.279975,-1.193696,4.409607,5.828060,1.299074,4.173620,8.942178,-3.670811,8.066341,0.453528,-0.652264,-0.860888,-7.336339,-6.341496,-4.458628,7.924091,-9.234886,-3.590875,1.465512,8.626400,7.756892,-4.366557,9.712139,8.804575,-1.248206,-1.470175,-9.917193,7.951941,7.475051,4.377532,-4.204819,4.489139,-2.224219,-1.961651,0.752795,-1.344908,6.024280,5.764603,-8.435308,8.995258,-1.096657,4.829969,3.836143,7.194794,5.437839,-4.490959,6.855637,-8.828907,-1.805337,5.106825,-3.363613,-1.943148,-4.590852,-9.565364,-6.198681,7.917300,4.252591,4.026384,-1.063946,-9.166555,-3.562034,9.452953,-4.102903,1.887104,-3.914443,-7.997495,9.626124,-3.365787,8.963999,-4.674671,8.786011,-1.916355,-6.641160,0.656804,-8.183942,-6.027563,-9.296413,-1.828669,-0.259036,2.970585,-0.260240,9.197295,-7.875847,-9.400728,1.035657,-8.276479,-4.433201,0.569871,-5.622591,5.301787,-0.915180,9.447568,4.472663,2.416576,-6.919110,2.504927,3.911181,-2.757877,-2.196501,2.906896,3.383049,-5.589107,-0.464480,-2.461905,-0.332307,9.477076,-1.655211,-6.959770,-1.634845,5.004609,-3.020712,9.677205,7.370421,-6.776489,-6.063032,4.192211,1.305666,-5.833621,-3.988069,-7.295131,-6.328870,3.046644,2.261650,7.551352,-3.683268,-7.862570,4.081978,-8.169332,9.935715,-2.621072,-7.850520,9.702319,-6.030437,8.697952,-4.258348,5.404016,1.834772,7.819587,-5.399478,-1.938829], dtype = "float32")#candidate|4844|(525,)|const|float32
call_4843 = relay.TupleGetItem(func_3411_call(relay.reshape(const_4844.astype('float32'), [525,])), 2)
call_4845 = relay.TupleGetItem(func_3414_call(relay.reshape(const_4844.astype('float32'), [525,])), 2)
var_4848 = relay.var("var_4848", dtype = "float32", shape = (525,))#candidate|4848|(525,)|var|float32
bop_4849 = relay.maximum(const_4844.astype('int64'), relay.reshape(var_4848.astype('int64'), relay.shape_of(const_4844))) # shape=(525,)
bop_4869 = relay.logical_and(var_4837.astype('bool'), relay.reshape(uop_4838.astype('bool'), relay.shape_of(var_4837))) # shape=(13, 1, 7)
func_3826_call = mod.get_global_var('func_3826')
func_3827_call = mutated_mod.get_global_var('func_3827')
call_4879 = func_3826_call()
call_4880 = func_3826_call()
bop_4882 = relay.maximum(uop_4838.astype('uint8'), relay.reshape(var_4837.astype('uint8'), relay.shape_of(uop_4838))) # shape=(13, 1, 7)
uop_4887 = relay.acosh(uop_4838.astype('float32')) # shape=(13, 1, 7)
bop_4889 = relay.logical_xor(uop_4887.astype('int64'), relay.reshape(bop_4882.astype('int64'), relay.shape_of(uop_4887))) # shape=(13, 1, 7)
output = relay.Tuple([call_4843,bop_4849,bop_4869,call_4879,bop_4889,])
output2 = relay.Tuple([call_4845,bop_4849,bop_4869,call_4880,bop_4889,])
func_4900 = relay.Function([var_4837,var_4848,], output)
mod['func_4900'] = func_4900
mod = relay.transform.InferType()(mod)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mutated_mod.get_global_var('func_4900')
var_4902 = relay.var("var_4902", dtype = "float32", shape = (13, 1, 7))#candidate|4902|(13, 1, 7)|var|float32
var_4903 = relay.var("var_4903", dtype = "float32", shape = (525,))#candidate|4903|(525,)|var|float32
call_4901 = func_4900_call(var_4902,var_4903,)
output = call_4901
func_4904 = relay.Function([var_4902,var_4903,], output)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4707_call = mod.get_global_var('func_4707')
func_4709_call = mutated_mod.get_global_var('func_4709')
call_4947 = relay.TupleGetItem(func_4707_call(), 0)
call_4948 = relay.TupleGetItem(func_4709_call(), 0)
output = call_4947
output2 = call_4948
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mutated_mod.get_global_var('func_4949')
call_4950 = func_4949_call()
output = call_4950
func_4951 = relay.Function([], output)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4707_call = mod.get_global_var('func_4707')
func_4709_call = mutated_mod.get_global_var('func_4709')
call_4977 = relay.TupleGetItem(func_4707_call(), 0)
call_4978 = relay.TupleGetItem(func_4709_call(), 0)
output = relay.Tuple([call_4977,])
output2 = relay.Tuple([call_4978,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
output = func_4992()
func_4993 = relay.Function([], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4074_call = mutated_mod.get_global_var('func_4074')
call_4994 = relay.TupleGetItem(func_4072_call(), 0)
call_4995 = relay.TupleGetItem(func_4074_call(), 0)
output = call_4994
output2 = call_4995
func_5002 = relay.Function([], output)
mod['func_5002'] = func_5002
mod = relay.transform.InferType()(mod)
output = func_5002()
func_5003 = relay.Function([], output)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_5020 = relay.TupleGetItem(func_3712_call(), 0)
call_5021 = relay.TupleGetItem(func_3714_call(), 0)
const_5022 = relay.const([[[-9.458889,2.717914,-8.750941,-3.308012,-0.023216,-4.366644,4.136188,-7.010059,-5.556606],[0.983514,-2.010713,8.437185,3.876218,-2.134538,-8.374192,-1.064725,-4.722311,8.347886],[-5.679262,-8.995783,-1.444059,7.761611,6.573510,4.358261,2.863454,6.038999,-3.696841],[-6.858316,-8.669075,-5.053699,-2.958994,6.075495,-6.305888,-7.293378,5.159140,-2.650442],[3.039501,8.775428,8.708320,3.737676,8.872870,-8.974898,5.977799,-4.120620,1.245164],[1.551948,6.188681,-3.309511,4.168544,-7.047546,5.706392,-6.698379,5.608764,0.052545],[2.262819,8.414829,-4.035656,-8.592053,-0.992277,0.042889,7.034512,8.696843,-9.254185],[-7.525883,-5.816871,-5.508048,9.023520,2.006299,-0.297014,-0.580324,1.392135,-9.491509],[6.988540,5.266402,4.648421,-0.736171,3.750155,-4.165299,3.342507,-4.410682,9.641572],[-7.484197,2.783984,6.330403,-9.923108,8.493345,1.711136,6.131432,-3.198230,-8.755539],[-7.471769,-2.639913,0.431288,7.886293,-0.262428,-3.247796,-5.336919,-4.159110,-0.820913],[4.696757,7.028488,-4.392700,-0.232047,-7.440355,9.411845,4.460893,0.693218,9.560734],[-4.243477,6.862452,-6.656256,-6.770902,-8.588122,9.643061,2.384156,-0.421243,2.593274]],[[0.323270,-6.327954,7.060252,6.599722,1.035931,-3.033617,3.401019,0.855001,7.608633],[-7.823058,-6.688545,4.769742,-5.722888,-7.901405,4.905443,3.618566,-1.712050,-2.990241],[0.944992,-8.997032,-6.249686,-5.405822,5.936195,0.965065,9.229439,-2.832348,-9.345337],[9.263500,-1.917918,1.971693,-2.824409,6.710093,0.827132,-8.628593,6.708332,5.598096],[9.338511,5.617986,-7.789782,-3.426488,-9.944175,7.224668,-8.155806,2.915319,8.798950],[-4.287397,-7.301267,-9.411964,-8.740937,-8.278623,2.301908,3.926176,0.115202,6.202357],[2.266189,-9.571048,-3.707506,2.696633,-5.346253,-3.210625,1.754743,5.626485,-8.274327],[9.931969,-2.211177,-0.047116,-1.330690,8.502805,-8.891573,6.032368,-3.811610,5.406306],[2.770155,5.134746,-9.198742,4.347016,-3.593310,9.347422,-5.220554,9.393108,-5.873303],[-3.359884,-9.390252,1.758550,-4.784374,-3.163317,-6.153095,-7.962462,-9.503797,1.130922],[1.452216,1.665812,-2.156475,-7.696591,1.643604,0.641339,1.788821,-5.315334,2.873627],[-2.547925,-6.299318,-9.175618,-0.647620,4.364403,-8.511867,6.119337,5.021295,-6.334515],[8.112750,5.548314,-6.121029,0.415091,-2.384001,8.185540,4.959400,-2.032245,0.298408]],[[-2.857488,3.724872,-0.499918,-4.558767,3.013635,-4.827640,1.648207,-8.410062,2.679893],[-3.926281,-8.581800,-2.606180,-8.892440,1.469861,-7.642521,-4.545122,-2.467859,-9.780145],[6.544591,2.628274,-5.225984,-4.400634,0.019800,-1.433677,-9.308373,9.230343,-0.784367],[-9.687766,8.219265,4.625076,-6.666358,-1.966396,6.780682,-1.508799,-3.975491,5.333692],[9.716887,-6.525637,-0.714510,4.494095,8.236785,7.869439,5.011059,7.426724,8.096821],[-1.694718,-2.741314,-7.616613,2.190160,-5.626765,-2.083888,-0.882750,-5.041346,2.712013],[-5.062696,8.815638,0.934967,7.095069,-5.673168,-4.985268,0.953399,-2.101950,1.249275],[7.586600,9.538997,-2.780359,0.187085,9.745328,-5.247814,-7.927462,-1.138549,-4.848718],[-5.676662,-3.435798,-3.346633,-0.974670,3.996759,3.713630,2.995011,9.036229,9.376651],[8.875575,-7.697761,-1.447245,8.326877,3.175062,-4.161234,9.288528,9.789051,2.851022],[-1.580575,1.290646,-1.227048,4.512113,9.507470,-7.949755,-7.392794,3.309266,9.187692],[9.575562,-4.407523,-4.350922,3.873558,2.769814,1.888171,-9.537332,-6.851218,0.441723],[9.541657,9.476557,6.528120,7.736596,8.613909,-0.770440,-1.793692,5.352406,9.201349]],[[4.063560,2.306081,0.906768,1.215551,0.156913,-8.698246,6.496077,0.229525,-0.105453],[-9.358192,-6.441684,7.937635,-8.616851,4.426896,-7.604141,8.782670,5.829104,5.571748],[4.657182,-0.196861,-9.032548,4.859390,-4.465414,-0.272412,8.022225,-9.058872,-5.534110],[6.935739,6.926928,-9.374017,9.711850,9.245398,3.152113,8.842780,-1.891656,2.276373],[-0.102433,-1.674047,1.043278,-8.012645,6.576757,-5.949514,-1.683176,4.322028,-2.766345],[5.042239,5.809374,-7.146514,3.096409,-7.027422,-2.379761,7.356627,-1.140660,3.708380],[-0.916576,5.516834,3.753591,-5.929756,4.862524,9.822241,5.983537,1.983251,-2.615682],[7.825760,2.775086,0.197131,2.904873,0.468610,-4.026682,2.731910,-9.141671,-2.610648],[6.647063,2.038347,-2.881700,-6.368950,3.791648,7.244352,-9.543864,-4.702754,-9.410421],[7.365473,-4.166826,4.205050,3.564529,8.640102,5.636261,8.379376,-2.713688,0.271489],[-1.068077,5.263675,1.810150,0.237658,6.904832,-6.119406,0.840227,-7.237961,-5.607169],[-9.595973,-3.561812,4.474738,5.884832,-2.478362,3.472493,7.098419,-9.989841,1.877384],[2.943837,6.835893,-1.380146,-6.511240,7.034086,5.557900,-1.953073,7.617502,-1.979035]],[[3.247658,-7.466439,7.542514,0.590603,5.451991,8.313355,-4.186423,3.481076,-4.691899],[1.313270,2.934186,2.830546,-1.081004,-5.466487,-8.876915,-9.079505,-3.203782,-9.576791],[-3.372080,-1.692172,8.268658,-9.483453,-5.864067,1.297970,-8.538003,1.376697,5.756134],[-0.675416,2.808589,7.530667,9.347212,3.541761,-1.569860,-4.139078,4.610212,-7.813976],[-6.315866,-9.213730,-8.079991,4.596498,-6.154691,-0.417810,6.761850,6.334801,3.591379],[0.728698,-9.515719,4.032231,-3.154448,5.720260,-8.619376,-0.640261,0.554646,-7.791626],[-4.905757,-8.582528,-9.804168,-3.062627,0.821565,-6.103135,-0.910517,-1.571352,-8.863258],[-2.190340,9.884749,1.477974,0.144318,-8.561819,-4.063051,2.596287,0.893314,-5.083002],[-0.863518,8.785137,-2.218024,7.773398,9.781250,-7.808541,3.875336,-7.957941,-3.048675],[-5.189596,7.630930,-4.981878,3.808710,-3.665909,6.138601,4.809061,3.443111,-3.142681],[-0.395231,5.700158,1.292355,-1.179734,-4.469992,3.136056,-6.230835,-5.919797,-3.918789],[9.689601,-3.664937,-4.316132,-6.494173,-2.758045,3.030401,-6.362294,-6.164003,7.571799],[8.043824,-6.651553,3.885925,-9.141112,7.549263,1.040519,-8.163930,-0.741692,4.384118]],[[-6.420155,-5.248029,9.399915,7.328166,0.996921,5.198118,7.749545,-9.804575,-1.356513],[0.642052,3.468455,-2.849662,5.437593,-4.815369,3.979896,-4.058578,1.539037,-8.331295],[-6.878096,-7.518397,5.642815,0.028013,-0.510811,-7.368485,3.445731,-8.312163,2.525448],[4.024430,5.447972,-2.482464,7.938919,-2.377283,0.607304,-6.665383,0.405121,7.934684],[-0.202917,5.881245,0.751713,-6.250484,-7.994089,1.905309,2.717247,-7.971730,-6.798225],[4.199688,5.492509,7.710181,8.034783,9.703184,-0.415656,4.383948,5.130933,-8.645615],[4.605564,2.557946,5.763972,5.794920,5.205081,1.766788,-2.433019,-9.804781,-0.709388],[-8.208003,9.333957,-7.275585,-5.574256,-1.716388,4.836559,-8.387474,6.245537,-0.783518],[9.136791,4.866519,6.924403,-9.838026,-6.863685,1.398780,-1.826631,-4.790442,1.528166],[-3.492066,-2.800371,9.958588,6.830538,-3.840679,8.735659,7.524010,-4.862506,-8.170545],[9.835774,6.222267,6.272654,-9.402756,-0.484610,6.554433,-6.441557,-2.348476,-2.144399],[-7.545522,1.914183,1.127722,9.567264,9.846501,4.314981,2.433549,6.105212,-5.836832],[2.391792,-7.360583,1.828241,-7.720574,5.662305,5.276804,-2.316836,1.281735,-4.376376]],[[4.808823,4.043094,-3.555734,-6.222732,8.876590,-0.066831,-8.761672,3.442884,-5.316066],[-7.338959,-4.520121,6.422669,4.716965,4.108751,6.492701,0.455684,3.261731,-8.827085],[-3.258506,9.639000,-2.774285,5.446503,3.141252,0.884148,-6.167779,-4.428277,-7.183109],[-6.269666,-1.759603,-6.857900,6.447058,-5.912874,4.234050,-7.162545,8.942324,5.036122],[-2.428953,-1.228715,1.070007,8.506324,9.910742,-4.012386,2.978503,4.326193,-5.728962],[4.982086,-6.986398,-9.015444,-6.401340,8.491492,-3.130253,2.494931,2.649735,6.711062],[-2.452964,-0.569656,-0.492915,9.766034,7.675839,4.429974,-7.898548,-7.141167,-6.835037],[-6.782097,4.238098,-2.784795,0.806744,-4.968145,0.080622,6.386466,-5.706334,8.869379],[9.890328,-1.138464,-5.586496,-7.249535,8.735226,0.209939,-0.340494,-4.601896,4.341477],[6.424148,5.154753,4.858761,0.260268,-4.362604,5.777647,5.279883,-6.346947,1.935262],[6.891771,1.213005,-3.432271,9.260069,9.312006,5.773970,-2.019638,2.116397,-6.043343],[7.220666,1.783675,-0.414731,2.829271,6.575505,1.156040,-6.560505,9.375493,4.946828],[-4.007326,-9.273449,9.188237,-5.354674,-7.860606,9.716568,4.823442,2.505268,-8.276901]]], dtype = "float32")#candidate|5022|(7, 13, 9)|const|float32
bop_5023 = relay.logical_xor(call_5020.astype('int16'), relay.reshape(const_5022.astype('int16'), relay.shape_of(call_5020))) # shape=(7, 13, 9)
bop_5026 = relay.logical_xor(call_5021.astype('int16'), relay.reshape(const_5022.astype('int16'), relay.shape_of(call_5021))) # shape=(7, 13, 9)
func_2356_call = mod.get_global_var('func_2356')
func_2360_call = mutated_mod.get_global_var('func_2360')
const_5029 = relay.const([3,4,10,-3,6,-6,10,-4,-1,10,-9,7,10,-2,-6,-4,-1,-8,-6,9,4,-3,-1,7,-6,-3,5,-1,-6,8,5,10,10,-10,10,-10,-3,1,10,6,-6,-2,-9,-5,-5,-6,5,-8,-3,-3,8,-9,6,4,7,-3,9,5,-8,4,3,4,5,5,2,2,9,10,-1,-3,-6,-3,-4,4,9,7,-7,10,-5,-3,2,7,-7,9,1,10,2,2,-2,-10,-4,2,8,-5,-8,-1,4,-4,-5,10,-6,-3,4,4,2,8,9,-7,-6,3,9,-4,10,-5,-2,-10,5,-7,-9,-6,3,6,8,2,-6,-9,6,7,3,2,-6,4,-4,-2,-1,3,-6,9,-4,7,-5,4,-2,-9,4,-8,2,4,2,10,-4,-7,-5,4,7,-9,10,4,-6,-4,-4,3,-4,-3,-10,-10,-7,-7,-3,-10,-6,1,-2,-7,7,1,8,5,-8,10,1,-4,-5,1,-4,8,-1,8,-3,-6,-8,10,-8,10,5,-5,8,-7,4,2,-2,-8,7,-10,10,-1,-2,6,7,-7,-4,1,6,6,9,-8,6,5,3,-6,-3,3,7,5,-7,-8,-9,-2,8,-2,6,9,-5,5,-2,-3,5,10,7,-8,2,-5,5,-3,-7,-2,-5,3,7,-10,-7,6,8,6,3,-8,-9,3,2,9,-1,10,-3,-5,-1,1,-7,1,-5,9,-2,3,1,5,4,-3,-4,10,-4,-10,-2,-2,-10,-2,-4,4,-1,-7,-5,-8,-8,-3,-1,-2,1,-1,-10,2,8,6,-9,9,-5,2,1,-10,-10,1,-7,-8,4,-3,-2,6,-1,3,-1,9,9,8,3,10,1,5,-6,-10,2,-5,-8,-4,1,8,2,-10,9,10,5,5,3,8,5,-8,-1,9,3,-6,-3,-6,2,-5,-3,-2,6,6,9,9,-2,-9,9,10,-3,6,-3,-2,-10,5,-3,4,6,1,6,9,6,-10,-8,-6,-9,9,-7,-6,-8,-2,9,2,-6,1,2,9,-8,4,-9,6,-5,1,-6,10,-9,-6,-8,4,-3,7,4,5,5,5,4,-4,-4,2,4,-5,4,-3,-2,-6,1,2,7,7,-1,-8,4,1,-6,10,-4,-5,6,9,-5,5,-8,3,-6,-9,-3,-9,10,-6,4,-8,-3,-7,3,9,2,-5,-2,-8,-1,5,-8,2,4,-6,-6,-9,9,9,3,-9,-3,7,-5,2,-4,9,-1,9,10,8,-10,-4,2,-3,1,-9,-6,-8,1,-4,-8,8,5,9,-3,-9,1,-5,7,7,8,2,2,5,-1,10,-4,-1,6,-2,4,-3,7,7,4,3,9,7,5,-5,-3,-8,-5,-5,6,1,3,6,-2,5,6,-9,5,-6,-10,-9,-10,-1,3,-8,-7,10,3,-9,10,10,-6,-2,-4,3,1,-8,-6,-6,7,9,-2,-4,-6,7,-1,-3,5,7,-4,-7,2,-6,4,-9,-5,-7,-9,2,-5,5,-8,-2,2,4,10,10,9,-10,7,6,-10,-1,-3,8,3,-4,10,4,5,-7,-1,7,-1,3,-6,2,-3,7,-7,5,-6,9,-5,7,4,5,1,5,8,-3,-10,-10,-9,8,2,4,-2,-6,-7,-7,9,6,1,-5,3,3,3,6,-2,6,10,4,4,-1,4,-1,9,4,-1,10,9,5,9,-3,-6,9,-10,9,4,4,7,3,-1,5,10,-5,-9,10,-2,2,-6,5,5,-10,4,-9,7,5,10,1,-5,8,7,-5,3,-10,-8,4,10,4,-8,-3,4,-7,9,-6,-4,-2,2,-3,-5,-5,9,8,-5,-3,5,10,-5,-4,4,-1,-4,-1,-10,-5,-7,-2,2,-6,-2,10,5,5,-6,6,-10,-8,10,1,4,-7,-6,9,-8,-5,-4,-8,-6,10,-3,-3,3,-7,1,-5,6,5,-10,2,-9,-10,5,-3,4,-2,-10,-2,-6,-6,-9,-1,-2,8,3,1,10,-7,3,5,-5,-4,4,8,5,7,6,10,6,-1,10,1,5,-5,9,-6,7,-9,-6,-8,-4,4,3,-7,1,-8,-10,-3,10,-5,-5,3,-3,-10,-3,1,-3,5,-10,-7,-8,4,-7,-5,2,-3,-3,7,-3,6,-5,-1,-3,-8,-9,-3,-1,7,1,-2,5,10,-6,-5,-5,-2,9,1,-10,-2,6,-7,2,5,-7,-8,6,10,6,10,-8,2,-8,9,3,-8,-7,-8,-9,2,-1,10,-10,-1,8,8,8,3,-2,-3,-4,-6,5,9,6,-4,4,6,4,10,3,-8,-5,-6,-3,-6,1,7,-3,-4,8,7,1,3,5,5,-1,-8,4,-5,-6,-6,-2,-4,7,-5,-5,-4,8,-2,-3,10,2,2,3,-4,10,-5,-1,9,-9,3,-7,-2,8,-5,-1,-7,-2,-8,6,-1,2,-1,4,-2,-2,-9,-6,3,3,7,4,6,2,-10,-7,-7,8,-3,7,7,2,8,7,2,-1,5,-2,1,8,-4,-4,-4,-10,7,10,-7,-10,-10,6,6,-10,5,5,-8,9,5,-5,-6,-4,2,-4,8,-2,10,10,-9,8,-2,10,-3,-2,-2,9,-1,8,-9,-10,8,-7,4,-6,-8,7,-7,-2,7,1,2,-7,3,6,-2,10,10,10,-5,-9,9,4,6,-6,-1,-4,7,4,9,-3,-8,-2,-10,-4,-7,9,10,3,9,-1,-6,-3,-6,-4,-9,-7,8,7,10,-5,6,-4,-7,-4,-6,-9,10,7,9,1,6,6,5,-4,-7,-3,-2,1,4,6,-10,4,6,-6,-3,-4,-2,7,-6,-4,1,-5,-4,2,2,10,2,-4,7,5,6,3,2,5,10,-10,-7,-3,1,-3,-3,9,-8,4,-4,7,8,7,-9,-7,-4,-7,-2,-3,6,-8,-10,-4,1,-8,-9,-2,-5,7,3,-1,1,-7,-10,5,-8,-3,-1,9,-7,4,1,10,-5,2,-1,5,2,-4,-2,-8,-4,-1,10,-7,-8,-10,7,7,-9,1,1,-1,-6,7,5,-10,-8,4,-10,2,1,7,4,-1,-2,-2,-8,9,-7,4,2,3,-5,-6,9,5,2,10,-7,-6,3,3,10,-7,-8,10,-5,10,1,4,-7,-2,2,-2,4,7,5,-1,4,1,7,2,6,1,-9,1,-6,5,-6,-7,5,10,-6,5,6,-1,-1,6,-6,-7,4,3,3,-9,4,-1,-2,9,9,9,1,-10,-3,-10,-3,-6,-6,-6,6,10,-1,-9,2,-2,-3,6,-1,8,3,4,6,-3,-8,3,-6,4,-4,2,-2,-6,-7,10,-1,3,8,-1,9,9,5,-3,-7,-10,-1,-8,9,7,6,-2,-8,2,4,2,-9,1,5,7,-1], dtype = "uint16")#candidate|5029|(1280,)|const|uint16
call_5028 = relay.TupleGetItem(func_2356_call(relay.reshape(const_5029.astype('uint16'), [16, 8, 10]), relay.reshape(const_5029.astype('uint16'), [16, 8, 10]), ), 0)
call_5030 = relay.TupleGetItem(func_2360_call(relay.reshape(const_5029.astype('uint16'), [16, 8, 10]), relay.reshape(const_5029.astype('uint16'), [16, 8, 10]), ), 0)
output = relay.Tuple([bop_5023,call_5028,const_5029,])
output2 = relay.Tuple([bop_5026,call_5030,const_5029,])
func_5039 = relay.Function([], output)
mod['func_5039'] = func_5039
mod = relay.transform.InferType()(mod)
output = func_5039()
func_5040 = relay.Function([], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mod.get_global_var('func_4234')
func_4235_call = mutated_mod.get_global_var('func_4235')
call_5049 = relay.TupleGetItem(func_4234_call(), 0)
call_5050 = relay.TupleGetItem(func_4235_call(), 0)
output = relay.Tuple([call_5049,])
output2 = relay.Tuple([call_5050,])
func_5054 = relay.Function([], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
output = func_5054()
func_5055 = relay.Function([], output)
mutated_mod['func_5055'] = func_5055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mod.get_global_var('func_5039')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_5068 = relay.TupleGetItem(func_5039_call(), 2)
call_5069 = relay.TupleGetItem(func_5040_call(), 2)
var_5076 = relay.var("var_5076", dtype = "uint16", shape = (1280,))#candidate|5076|(1280,)|var|uint16
bop_5077 = relay.logical_and(call_5068.astype('bool'), relay.reshape(var_5076.astype('bool'), relay.shape_of(call_5068))) # shape=(1280,)
bop_5080 = relay.logical_and(call_5069.astype('bool'), relay.reshape(var_5076.astype('bool'), relay.shape_of(call_5069))) # shape=(1280,)
output = bop_5077
output2 = bop_5080
func_5084 = relay.Function([var_5076,], output)
mod['func_5084'] = func_5084
mod = relay.transform.InferType()(mod)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5085 = relay.var("var_5085", dtype = "uint16", shape = (1280,))#candidate|5085|(1280,)|var|uint16
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5086 = func_5084_call(var_5085)
output = call_5086
func_5087 = relay.Function([var_5085], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5111 = relay.const([[[0.302327],[-7.512742],[-9.714582],[8.766168],[1.932591],[-1.184948],[-6.180713],[6.622877],[-2.503265],[-9.506641],[2.860154],[2.660109]],[[2.355326],[-5.380474],[-4.537715],[-0.368140],[-3.047788],[0.492664],[-5.128389],[5.552316],[-2.463679],[4.021398],[1.501776],[0.495593]],[[2.848995],[-9.616541],[-6.487594],[4.817487],[8.035110],[-0.450539],[9.963378],[-8.990423],[-1.523074],[-9.320525],[-1.660716],[-6.230687]],[[-0.198181],[-7.583863],[-1.051487],[0.284156],[3.116685],[-0.472032],[-0.688243],[9.632876],[7.510672],[7.643277],[6.421552],[-0.981682]],[[-8.228682],[-8.417449],[-3.469548],[3.457603],[-5.531017],[-6.595323],[2.833449],[-3.417168],[-8.249455],[-0.050783],[-5.641687],[-9.521204]],[[-4.747257],[2.083949],[8.274539],[3.248677],[-2.017692],[2.215950],[-3.197296],[5.625168],[-6.282418],[2.244939],[-5.963444],[-1.875007]],[[8.266408],[8.783029],[-9.791926],[8.067296],[3.669801],[-3.954553],[5.317314],[-0.435529],[1.027858],[-0.241580],[0.278829],[-3.032778]],[[-9.458863],[8.371051],[4.830577],[7.841397],[8.058537],[1.165396],[-2.106776],[-9.663913],[7.229132],[6.087283],[-2.048541],[-9.558997]],[[8.854128],[3.222091],[3.612551],[-3.377251],[4.693569],[-9.200476],[3.803737],[3.165990],[-7.924751],[-1.402942],[-6.462538],[-5.462134]],[[-6.945533],[-3.428784],[-7.481171],[-0.658130],[1.083638],[-5.403752],[-5.588187],[-2.840840],[-0.122637],[-4.426687],[-6.446671],[-2.885261]],[[-6.180801],[-3.046895],[7.762308],[-9.820856],[-0.926335],[-6.181602],[-6.412807],[-6.690487],[-7.478901],[-3.130361],[3.112052],[5.374670]],[[5.274863],[5.546071],[5.008394],[-7.754727],[-9.390597],[-1.292182],[0.945420],[4.797895],[8.878752],[-9.527081],[1.153754],[-3.397316]],[[0.356411],[-0.319821],[7.827295],[8.704380],[5.532964],[8.680616],[-3.234174],[8.014969],[-9.085645],[6.542526],[-9.521131],[4.509182]],[[-9.499884],[8.439463],[-3.466357],[-2.371736],[-3.800591],[-5.009052],[-3.159146],[-5.817522],[-5.576501],[-6.173117],[9.689849],[1.183303]],[[-0.956785],[-8.986846],[-5.131485],[-3.037866],[2.777583],[-2.184040],[1.657552],[-0.940745],[8.519440],[-8.196563],[-6.627243],[5.289343]]], dtype = "float32")#candidate|5111|(15, 12, 1)|const|float32
uop_5112 = relay.acosh(const_5111.astype('float32')) # shape=(15, 12, 1)
func_3697_call = mod.get_global_var('func_3697')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_5115 = relay.TupleGetItem(func_3697_call(), 0)
call_5116 = relay.TupleGetItem(func_3698_call(), 0)
func_2026_call = mod.get_global_var('func_2026')
func_2031_call = mutated_mod.get_global_var('func_2031')
const_5118 = relay.const([5.750230,-3.783915,-7.653742,-3.466843,9.555960,-0.675169,1.159330,-5.991682,5.030359,0.454501,-3.120431,-6.259240,2.318852,7.199713,-6.788472,-5.729218,-7.266356,9.845577,0.253907,3.748950,3.817357,4.730535,2.127831,0.063008,7.827579,7.803882,-4.981969,-6.232115,-8.562618,-6.099329,-9.113629,-6.819087,9.935340,0.276144,-7.454557,7.017405,0.230110,-4.316466,-3.645192,9.649138,-3.522735,-3.051680,8.708480,5.033469], dtype = "float64")#candidate|5118|(44,)|const|float64
var_5119 = relay.var("var_5119", dtype = "float64", shape = (288, 4))#candidate|5119|(288, 4)|var|float64
var_5120 = relay.var("var_5120", dtype = "float32", shape = (16,))#candidate|5120|(16,)|var|float32
call_5117 = relay.TupleGetItem(func_2026_call(relay.reshape(const_5118.astype('float64'), [2, 2, 11]), relay.reshape(var_5119.astype('float64'), [24, 48]), relay.reshape(var_5120.astype('float32'), [8, 2]), ), 5)
call_5121 = relay.TupleGetItem(func_2031_call(relay.reshape(const_5118.astype('float64'), [2, 2, 11]), relay.reshape(var_5119.astype('float64'), [24, 48]), relay.reshape(var_5120.astype('float32'), [8, 2]), ), 5)
output = relay.Tuple([uop_5112,call_5115,call_5117,const_5118,var_5119,var_5120,])
output2 = relay.Tuple([uop_5112,call_5116,call_5121,const_5118,var_5119,var_5120,])
func_5123 = relay.Function([var_5119,var_5120,], output)
mod['func_5123'] = func_5123
mod = relay.transform.InferType()(mod)
var_5124 = relay.var("var_5124", dtype = "float64", shape = (288, 4))#candidate|5124|(288, 4)|var|float64
var_5125 = relay.var("var_5125", dtype = "float32", shape = (16,))#candidate|5125|(16,)|var|float32
output = func_5123(var_5124,var_5125,)
func_5126 = relay.Function([var_5124,var_5125,], output)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5055_call = mutated_mod.get_global_var('func_5055')
call_5149 = relay.TupleGetItem(func_5054_call(), 0)
call_5150 = relay.TupleGetItem(func_5055_call(), 0)
const_5155 = relay.const([[[-5.479430,-8.950578,0.235060,9.503745,-2.647926,6.930924,-2.293716,9.453730,8.268101,8.579089],[3.940339,6.942499,-1.095736,-9.069626,2.930317,-2.449713,2.395367,5.777358,8.002177,-1.136026]],[[-7.497374,-6.991111,4.517115,3.012847,-5.474521,-6.871728,9.528771,7.274464,9.419736,5.542658],[4.962615,-3.915102,-6.350861,3.501085,-7.275860,0.066558,9.591241,-8.832782,6.309328,-2.813357]],[[-5.181365,-5.068052,-6.631785,-1.736489,5.304621,8.308689,5.882583,-2.997427,8.743323,1.865244],[7.364096,9.271467,8.255071,8.408771,6.770434,-6.450463,-2.663327,-6.202861,-8.571500,-7.590426]]], dtype = "float32")#candidate|5155|(3, 2, 10)|const|float32
bop_5156 = relay.logical_xor(call_5149.astype('int16'), relay.reshape(const_5155.astype('int16'), relay.shape_of(call_5149))) # shape=(3, 2, 10)
bop_5159 = relay.logical_xor(call_5150.astype('int16'), relay.reshape(const_5155.astype('int16'), relay.shape_of(call_5150))) # shape=(3, 2, 10)
func_2026_call = mod.get_global_var('func_2026')
func_2031_call = mutated_mod.get_global_var('func_2031')
const_5178 = relay.const([-8.642158,-4.806658,-8.450718,-8.030706,6.897235,-3.513933,7.194524,5.516276,9.650632,-5.159538,-9.730616,8.363200,4.122554,-1.317396,-5.353340,2.087667,5.911223,6.737785,-8.404192,-2.676083,8.870912,-4.834314,5.510591,-5.017489,1.004575,6.769383,1.409111,-2.033344,-5.215559,-6.158548,-3.493537,7.994254,7.794885,7.575135,-9.009655,3.318784,7.880145,-4.813278,-7.969356,0.180475,3.173833,6.987877,-0.766585,2.691001], dtype = "float64")#candidate|5178|(44,)|const|float64
var_5179 = relay.var("var_5179", dtype = "float64", shape = (1152,))#candidate|5179|(1152,)|var|float64
const_5180 = relay.const([[0.499984],[-1.674767],[-4.255906],[-7.094474],[-2.987661],[0.010465],[-4.179023],[-0.649963],[7.404100],[-0.435039],[6.558582],[-5.385876],[1.159721],[-3.941146],[-8.179435],[-4.305841]], dtype = "float32")#candidate|5180|(16, 1)|const|float32
call_5177 = relay.TupleGetItem(func_2026_call(relay.reshape(const_5178.astype('float64'), [2, 2, 11]), relay.reshape(var_5179.astype('float64'), [24, 48]), relay.reshape(const_5180.astype('float32'), [8, 2]), ), 2)
call_5181 = relay.TupleGetItem(func_2031_call(relay.reshape(const_5178.astype('float64'), [2, 2, 11]), relay.reshape(var_5179.astype('float64'), [24, 48]), relay.reshape(const_5180.astype('float32'), [8, 2]), ), 2)
var_5182 = relay.var("var_5182", dtype = "int16", shape = (3, 10, 4))#candidate|5182|(3, 10, 4)|var|int16
bop_5183 = relay.floor_mod(call_5177.astype('float64'), relay.reshape(var_5182.astype('float64'), relay.shape_of(call_5177))) # shape=(3, 10, 4)
bop_5186 = relay.floor_mod(call_5181.astype('float64'), relay.reshape(var_5182.astype('float64'), relay.shape_of(call_5181))) # shape=(3, 10, 4)
output = relay.Tuple([bop_5156,const_5178,var_5179,const_5180,bop_5183,])
output2 = relay.Tuple([bop_5159,const_5178,var_5179,const_5180,bop_5186,])
func_5187 = relay.Function([var_5179,var_5182,], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5187_call = mutated_mod.get_global_var('func_5187')
var_5189 = relay.var("var_5189", dtype = "float64", shape = (1152,))#candidate|5189|(1152,)|var|float64
var_5190 = relay.var("var_5190", dtype = "int16", shape = (3, 10, 4))#candidate|5190|(3, 10, 4)|var|int16
call_5188 = func_5187_call(var_5189,var_5190,)
output = call_5188
func_5191 = relay.Function([var_5189,var_5190,], output)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mod.get_global_var('func_4234')
func_4235_call = mutated_mod.get_global_var('func_4235')
call_5193 = relay.TupleGetItem(func_4234_call(), 0)
call_5194 = relay.TupleGetItem(func_4235_call(), 0)
uop_5195 = relay.rsqrt(call_5193.astype('float32')) # shape=(3, 2, 10)
uop_5197 = relay.rsqrt(call_5194.astype('float32')) # shape=(3, 2, 10)
output = relay.Tuple([uop_5195,])
output2 = relay.Tuple([uop_5197,])
func_5200 = relay.Function([], output)
mod['func_5200'] = func_5200
mod = relay.transform.InferType()(mod)
mutated_mod['func_5200'] = func_5200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5200_call = mutated_mod.get_global_var('func_5200')
call_5201 = func_5200_call()
output = call_5201
func_5202 = relay.Function([], output)
mutated_mod['func_5202'] = func_5202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4074_call = mutated_mod.get_global_var('func_4074')
call_5248 = relay.TupleGetItem(func_4072_call(), 1)
call_5249 = relay.TupleGetItem(func_4074_call(), 1)
output = relay.Tuple([call_5248,])
output2 = relay.Tuple([call_5249,])
func_5250 = relay.Function([], output)
mod['func_5250'] = func_5250
mod = relay.transform.InferType()(mod)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5250_call = mutated_mod.get_global_var('func_5250')
call_5251 = func_5250_call()
output = call_5251
func_5252 = relay.Function([], output)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_5257 = relay.TupleGetItem(func_3750_call(), 0)
call_5258 = relay.TupleGetItem(func_3751_call(), 0)
uop_5268 = relay.sigmoid(call_5257.astype('float64')) # shape=(525,)
uop_5270 = relay.sigmoid(call_5258.astype('float64')) # shape=(525,)
output = relay.Tuple([uop_5268,])
output2 = relay.Tuple([uop_5270,])
func_5275 = relay.Function([], output)
mod['func_5275'] = func_5275
mod = relay.transform.InferType()(mod)
output = func_5275()
func_5276 = relay.Function([], output)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_5300 = relay.TupleGetItem(func_3494_call(), 1)
call_5301 = relay.TupleGetItem(func_3495_call(), 1)
func_2733_call = mod.get_global_var('func_2733')
func_2735_call = mutated_mod.get_global_var('func_2735')
const_5308 = relay.const([[-0.601396,6.245813,-0.852985,5.038892,8.002120,5.821768,-6.489243,3.380872,-4.177360,4.199384,4.140257,-3.947197,7.887520,3.559830,-7.237375,-0.126057,4.940960,4.073922,-3.403908,9.489581,-1.037749,1.361583,-4.193620,-4.646411,-9.117460,2.751310,3.062664,-1.384391,7.416967,0.938819,-5.788788,2.831842,1.421586,6.704981,7.981021,-3.785566,-4.265270,1.650395,-1.398264,2.210112,1.626008,-3.135538,-9.514048,2.991462,-1.094024,7.833408,-0.875040,-4.814818,6.136769,-3.135175,-5.254243,-5.667372,-6.480198,-7.439876,3.910416,-7.769286,-7.112818,-8.534232,4.866858,0.264841,-2.916129,7.423126,8.274611,-4.070894,5.724152,8.938839,7.330959,-5.201896,0.298521,-6.982953,8.929663,8.215701,1.207772,-8.306244,5.520952,-0.887649,5.790980,4.404392,-2.650392,9.019163,-4.331199,5.377667,8.779649,5.327920,-9.386460,2.084726,-3.357688,-8.960123,-9.983468,3.655431,-9.154741,4.269254,3.061831,-8.157023,4.681514,0.007497,-3.061812,5.798318,5.329612,1.717287,6.232150,0.102351,9.293817,0.301354,-7.035967,-5.878799,1.610106,-9.989990,-0.007304,-0.422685,9.782267,1.096353,-8.382727,7.472464,1.005404,-8.524053,0.176070,6.697862,3.508857,3.874400,4.775832,-5.573155,0.640803,1.980410,5.926779,2.548605,0.572986,-7.640693,-1.141501,4.597829,-7.659407,-0.081447,1.021437,3.516294,-9.929897,0.198467,-8.383683,-7.512293,-6.009402,3.200607,6.752253,-4.045612,5.880038,9.105065,-9.433386,9.504580,-1.165427,4.581961,7.853437,-8.971061,6.720387,1.194802,6.010710,0.366034,5.989750,7.277813,-7.379779,-9.732564,-5.906706,5.621964,-6.361541,-8.089320,-9.705228,6.707284,-8.911642,7.768330,3.462841,2.693061,7.806181,-2.745814,5.055649,7.189550,-3.820346,8.895680,2.925691,6.445541,1.345807,-5.760073,7.388523,-2.461997,6.406614,8.883710,-8.103029,2.580638,-3.105460,3.290906,4.407559,9.150261,-4.608223,4.754888,1.249933,3.878058,-7.789900,-2.060140,0.959462,4.777468,-1.924608,6.438201,4.179176,-5.900659,1.042177,4.150770,1.946412,-7.970869,3.577369,0.885627,-7.737760,5.867058,6.168158,3.645266,-0.729442,2.095550,7.345062,-1.559554,-4.941737,-4.581332,-2.068628,-4.056424,-1.701945,9.733109,-9.088556,-6.541215,4.251832,5.375459,6.367079,-6.505622,5.611133,7.307269,-2.735069,0.193162,-6.845517,-1.019602,2.954790,-1.997105,6.721755,8.814228,0.276474,0.868765,-6.777758,2.891928,9.197155,2.114531,6.146178,3.900933,-9.280282,-4.321955,1.592427,5.770185,-3.081913,-8.848501,9.001360,4.137683,-0.256445,-9.378972,-5.606122,-0.154546,0.330077,-8.787934,-8.499384,-4.744506,3.164839,-6.157887,-5.635642,6.392581,6.243169,-7.370877,-8.930990,8.806455,-9.731620,8.577588,4.312531,-7.618382,9.569916,-2.698786,0.393032,6.455168,2.125325,0.607994,1.096123,-6.594733,-0.570075,-4.961841,9.866519,3.637855,6.334455,-1.904157,8.019234,1.276912,5.647397,-8.474387,-0.030730,1.357902,9.392473,6.491078,-4.394565,-1.077168,7.997773,5.163408,-4.246282,-2.633303,3.665093,4.769862,-2.698575,6.654864,-4.381002,-4.781848,7.048547,-9.392769,-1.777790,-7.920190,-5.158290,5.659875,2.856634,-6.286830,-9.473119,2.660332,1.113660,-9.478587,9.707268,0.946750,5.297591,-6.024219,-5.242513,-5.437688,3.409617,4.483626,8.038079,5.254787,1.125077,-5.741944,-5.349732,2.505546,-1.242849,8.548808,6.263356,6.179025,-8.932908,-9.046517,2.298432,6.472854,0.484218,-0.254323,-4.772498,8.940329,7.831987,3.268874,1.027548,9.517110,-7.394254,9.270313,9.199818,-0.332704,-6.532202,-3.701535,2.363902,-2.459108,-5.060088,8.972394,-9.862854,-5.192538,4.059471,-6.637091,-5.875286,-1.386404,-8.882146,2.356059,0.957073,-7.835173,-3.926475,7.541941,-4.289836,-0.541337,-3.778494,0.579263,-5.885241,-2.749539,0.101772,-1.003664,-9.487822,-0.076165,-2.598301,-6.958141,-6.935055,4.372046,-8.270985,-5.722246,5.781357,5.059497,6.599530,-9.208171,5.059595,2.023451,7.244468,-4.141417,-3.515643,8.259902,-8.664922,-4.348340,-2.962731,8.194557,-1.379273,8.893076,-1.447364,5.764022,-4.418866,8.348345,-2.058124,-6.868082,-8.584984,1.735476,-3.840219,3.537145,4.958682,3.883475,-1.670764,-0.989271,-8.840563,-5.051821,-4.876323,-0.995054,5.530488,-9.650411,-4.864240,-7.576024,-6.795189,-5.992533,-4.420273,5.833398,5.681739,0.026188,-4.807515,3.707172,5.113794,4.049006,4.517999,-1.054801,-4.603744,7.769809,-9.079917,5.912436,6.317875,8.391776,-7.094755,5.957903,4.385385,8.816962,-2.672808,-6.543323,-7.670949,-8.123069,-1.425676,-4.769670,5.991070,5.791426,1.297247,-0.905262,-1.259947,-3.393991,6.256673,7.475752,-1.398658,-9.206852,4.041708,7.735802,-0.603396,7.192404,-0.870508,4.410943,0.269576,4.542717,-0.251112,-6.113014,6.875950,2.514811,-8.658907,9.899363,4.782045,-1.519587,1.074966,-0.246110,9.939944,-6.407872,3.181943,2.914212,-9.423307,-9.802254,2.552697,-0.494417,9.039293,6.184229,-8.437995,8.353832,-5.376708,-8.009287,0.318358,2.172135,-1.100510,-2.723163,-3.746899,2.846652,0.337676,6.976727,-9.201901,0.245473,5.769115,3.837538,-1.243089,4.599662,-9.869276,-0.818029,-1.174432,-0.031532,5.351009,-3.585742,2.322759,-5.103720,8.711260,7.972946,5.947255,-5.601635,5.034510,-4.107311,-5.057973,-7.584924,8.241653,-8.942777,-8.131073,2.541964,5.198375,9.592201,4.604209,7.030000,4.388010,-3.590692,-9.726141,5.961152,-9.358040,9.881079,2.574860,-6.404405,-2.336155,-1.818866,5.081813,-7.488386,-8.227949,1.611186,1.388254,-3.134483,0.167331,-8.924408,2.333047,4.815592,6.481620,-1.216509,-7.087723,-7.125994,2.421936,-3.353997,-8.367463,-7.481830,-7.990743,-2.073792,-8.559311,5.395793,7.554677,0.784110,9.912356,-5.595856,8.685081,-6.318729,7.005234,-8.512999,4.983009,-3.429103,4.299078,-1.437717,-0.317762,-3.224795,-1.577088,5.300563,5.320116,-8.880748,1.125604,6.078490,-3.828117,7.823570,-9.881853,-4.154592,-4.883164,5.978342,3.618396,5.939868,-0.630369,8.514944,6.032684,-4.924849,1.560516,-1.687305,-2.293236,-9.123468,6.429570,-2.087111,6.076142,4.450332,0.671439,-1.494872,5.680284,3.171584,6.670419,-0.246221,1.039533,5.776544,8.742118,3.563187,2.794842,-1.751462,5.796957,5.637970,-8.909771,-6.224171,9.217041,-2.206316,0.015194,8.110244,-5.909783,9.456536,-1.132158,2.334296,-8.296359,3.251494,-6.981670,-8.455222,4.244245,-5.454475,6.626163,5.948642,8.671595,6.947296,9.531296,4.813130,-8.912060,0.283438,9.274703,-5.069435,-0.742245,-4.617311,-7.454827,-5.770641,-4.069114,0.259718,-2.140971,-0.094609,-6.443990,-6.605084,-5.301341,-7.644090,-4.507383,-8.755591,-1.287606,-1.011352,-2.112895,6.055347,0.045170,-9.896166,-2.223789,4.892287,8.853366,2.485727,4.498091,2.637417,1.864913,-4.424783,-8.202726,-7.177042,-8.563791,7.800734,7.113665,1.869304,-5.167611,-5.565172,8.273945,1.221688,3.102954,-9.065217,-5.936581,3.802470,2.709014,-2.958884,-2.995415,-1.549901,0.396631,9.654077,-0.123915,1.308234,2.919303,-9.756985,-5.908219,7.037352,-1.493851,-1.599510,4.514766,-4.090750,-9.350364,-9.995667,7.697361,5.734992,-6.584722,3.504225,9.116502,-1.864507,-8.154440,9.526810,-6.103484,4.663381,-3.386180,-5.824861,8.653792,9.702894,2.507797,-1.074483,-6.365032,7.589029,-1.115526,-3.410655,1.914422,-5.745150,5.139601,-3.776927,-5.773990,-8.476734,-8.000195,8.786049,7.247762,3.086782,-8.473031,-7.630545,8.361413,-4.573436,-8.694838,7.698138,2.409087,-6.348241,5.404272,-6.403433,-2.741190,-7.786193,5.563078,-8.969111,-5.977639,3.877984,9.177268,-8.743112,2.524204,-6.006927,1.599175,-5.871621,-3.789773,4.710878,9.480326,0.442136,-2.175120,-4.735608,5.908943,-2.916862,-8.819718,7.771265,5.544954,-1.183448,-2.770139,7.563369,-3.253507,-9.093168,-0.940442,-1.267134,2.800084,1.021436,-0.317539,-4.093927,-3.220646,7.852542,-6.302324,-6.794293,-9.215344,4.628084,6.312887,-0.231746,-8.859630,-5.070292,-9.320521,-5.314254,4.704184,3.789546,-8.975478,8.894122,4.060281,2.792671,4.018069,3.352624,3.590949,-5.023792,3.575173,-0.996695,0.702141,-8.110021,-6.047797,-6.726607,-0.063723,2.497907,1.226852,9.309425,5.285652,-8.933992,-3.325066,7.313495,-4.877668,4.113494,-4.806181,2.078498,-0.239533,-6.394448,6.789689,-9.541280,-7.413912,-3.435851,6.508596,-2.951894,-9.185944,5.442316,0.954720,-4.796066,0.175468,9.948753,-2.643670,7.708294,3.384045,4.071709,-6.403630,-5.169112,8.982992,-1.898634,2.137672,5.496573,-8.802377,-2.492771,3.036991,9.648373,-7.499360,0.704922,-4.061423,-0.900307,-9.329178,-6.458164,7.015896,9.482441,7.413334,2.204993,0.178545,-4.678793,-8.576920,3.359711,-9.564310,-9.525951,4.854592,4.405359,-7.138422,4.107055,6.130011,-2.026251,4.710428,9.342425,8.997775,0.903177,7.209336,-5.885371,-7.539703,-6.421326,3.788917,-8.075330,-4.831195,-6.283534,6.528597,1.454909,0.954609,1.543065,7.331820,8.206215,-9.149534,8.930728,-7.192713,9.850904,0.700947,1.481898,-3.040518,-0.644414,2.873594,9.278901,-4.031237,4.433088,-3.225836,-8.509060,1.333305,3.780068,-1.454932,-3.431114,-6.369430,-0.744527,6.477222,-5.004555,2.439057,-8.894441,6.060567,2.098461,-8.055063,5.663286,1.601366,-6.117976,6.873613,-9.857097,2.609088,1.099300,-2.654583,7.543311,4.686280,0.599073,-7.488898,-4.223829,-7.768463,-9.451277,-3.546028,3.263402,1.218791,4.335864,3.811608,4.027139,-6.790422,9.703898,-5.885078,-8.626229,-7.698946,-6.705946,2.828211,8.475866,-5.539145,-8.347644,7.054103,-2.379936,1.598763,-6.870397,-8.934645,3.931943,-3.148640,7.044769,-6.262855,-0.659168,-4.558643,2.959652,9.080134,9.209748,-2.483472,1.193425,8.292337,7.865303,6.743173,-8.016427,8.862721,-6.578966,-6.114919,-1.126539,8.002018,9.552638,5.696008,7.453816,2.694116,-3.827493,-9.090336,-5.967014,4.173686,-7.893737,9.425839,-0.736416,4.950052,-9.676086,0.138707,-7.010385,0.488085,-4.000905,-6.396780,-3.495159,-2.898586,-9.475291,-4.273545,-7.547044,-2.523776,-1.835156,6.794340,-3.074831,7.844843,-1.193513,0.424710,7.271675,5.815661,9.079682,3.991158,2.343666,-7.082922,-5.761385,-9.650209,-5.628330,8.493758,-2.107061,-3.551076,9.177553,6.805935,-7.698591,-9.059638,-3.574562,7.694559,-8.459580,8.895204,-6.953699,1.888014,-6.133329,9.801433,-9.038796,8.540720,-2.838146,9.395104,0.453156,3.549847,7.626414,8.943457,7.085038,0.232235,3.201494,-9.453369,-7.671113,-6.726552,2.432186,1.434099,-4.435548,2.911184,-1.371863,1.086708,6.263657,4.975040,-6.559234,-9.134363,7.050364,2.652620,-3.472881,-4.888034,7.490490,6.437153,3.669103,-0.118499,9.909639,-1.706530,-4.807890,1.735823,-6.445493,-3.399344,7.855045,0.661259,-3.098634,6.982184,-2.006840,2.455437,-3.610712,-4.856330,-5.246058,-0.165091,-8.521570,1.770450,-2.536296,5.075003,-6.271718,8.269361,-5.431405,-9.947085,-4.730126,-5.708591,-6.565384,-2.061810,-3.335441,-5.815030,-3.076087,5.407139,6.065221,4.681371,1.512844,-2.430631,1.684786,-8.722388,-7.253311,-6.834991,-4.835719,8.395150,7.544770,-5.684858,9.783012,-4.667469,1.912174,-9.793386,-0.576292,-1.905498,-5.468740,1.266157,-3.951846,-3.308681,0.704298,0.120374,5.486750,-5.833397,0.010134,-0.169485,1.104088,-6.485172,-7.844211,4.196620,-8.025598,3.220510,-8.900396,-7.137229,-0.375974,-6.191899,-8.595007,0.979762,-5.869153,-2.810365,-7.781857,-6.921658,8.600419,-0.912413,-0.816623,-8.505485,2.365530,7.795951,4.129064,1.853072,-5.208220,5.098949,3.524718,-6.579270,-6.678570,1.210971,-6.906471,-4.185474,-4.956691,7.214568,-0.874054,-0.554568,7.147469,8.691404,6.778623,-9.699055,-4.364897,-0.236288,1.323167,-5.619061,4.454514,-6.722460,4.877156,3.016754,-3.695045,-0.923110,3.226608,-2.493127,8.474046,8.341235,-8.099233,-0.407492,0.508460,5.972264,-3.764933,-5.092293,9.640749,9.093184,0.720285,0.694995,4.562470,-0.892070,-1.759905,-9.831418,-3.146703,-8.095127,9.565391,-1.349714,-8.275951,2.969763,4.112181,-7.311741,0.943335,2.129456,1.895825,-0.475170,5.177998,8.793182,0.592369,1.482510,0.636426,0.825154,-7.886143,1.937971,1.896644,0.569946,-1.464364,5.519112,4.451885,-0.938792,3.642502,-0.698792,3.804765,-4.813173,9.323656,-9.553406,-5.708247,0.382039,3.892627,7.971078,-1.519221,4.769592,-4.254011,-3.718442,-7.918507,-1.215308,1.547687,-8.398721,-8.446101,9.261631,-2.790831,-2.744431,2.833871,5.293621,-3.454307,6.896368,-1.410445,5.925524,-4.134075,-6.252215,-0.963231,-7.048938,5.786262,-7.470578,-4.223761,2.424318,-7.676054,3.500465,-3.373777,-7.629434,4.643171,2.331712,3.832333,-3.209734,-3.929818,-8.391438,-2.650061,-7.697456,2.009849,0.305198,-7.681026,-1.881864,3.397322,6.256152,-3.816254,-1.130764,4.229981,8.608860,0.717489,-4.480002,7.234696,-7.211012,-2.404239,7.063702,-2.639642,1.985068,-2.521036,0.017557,3.086725,7.877788,-3.083571,6.112281,7.197974,-8.499536,-3.038415,-4.486137,6.040184,4.958036,3.871437,8.869381,-6.092251,-5.039361,-4.128160,-0.753401,-2.495430,-0.511707,7.880171,3.948678,-3.943931,4.340032,-9.538547,-7.283498,2.589059,8.736178,3.514576,-9.813210,3.345810,-5.343002,-6.636296,4.956672,-1.921352,5.260500,3.749640,-2.840773,1.801774,4.623325,1.377445,2.444804,0.748785,0.372621,-7.913880,-9.349738,-5.584476,7.652474,0.642426,-0.032110,-5.447984,-7.929004,-0.168933,-4.714863,-7.262216,6.665505,9.462615,-9.251311,-2.629061,3.167613,6.554528,-8.173111,-9.576888,-2.405277,1.416667,3.376276,6.429901,7.704866,-5.582948,1.638373,6.506946,-9.302008,3.345131,-1.722564,-5.360422,-6.371688,7.649825,-7.710642,9.600543,-5.076725,1.163913,-0.267285,3.669711,-5.381823,3.499256,-4.760040,-0.442634,-0.102946,-5.676675,6.775827,-0.074049,-5.356056,8.700942,-7.281766,-7.180273,3.854908,-3.358915,-9.311908,2.478548,-7.252541,-5.162891,-1.264668,2.527963,-4.032445,4.906104,5.548275,-8.316286,3.803126,-4.317996,-5.311992,-5.294586,-8.628818,9.745172,-1.481005,7.434148,-9.109399,-5.944885,-0.747918,0.319094,2.381880,3.252399,-2.312337,-0.190057,3.855814,0.096490,9.625835,5.664780,1.857476,-9.324358,2.373328,-1.485881,2.363003,-0.625172,-8.835034,1.256601,-9.541898,-5.317920,-9.299307,9.772120,2.294770,8.035475,-3.577990,-1.637242,9.597179,-8.645884,-3.516169,-5.586164,6.544195,-8.579804,-1.801535,9.277815,-7.571768,-7.565428,-5.559175,-5.747834,-2.675559,6.519103,-4.552040,-9.355801,-6.859374,-9.873550,9.562668,2.711316,-3.112764,4.340013,5.127595,1.700444,-2.152225,-2.591096,1.463656,0.639218,-1.272133,0.917964,-8.246220,-9.980248,-3.774618,-2.985143,-1.502936,-3.089931,9.106901,6.014021,-9.570662,-4.185054,-6.795111,1.475666,3.043688,-3.897919,6.617167,-8.717324,8.501750,5.298480,0.367730,-7.872451,3.348640,-6.683825]], dtype = "float64")#candidate|5308|(1, 1470)|const|float64
call_5307 = func_2733_call(relay.reshape(const_5308.astype('float64'), [15, 14, 7]))
call_5309 = func_2733_call(relay.reshape(const_5308.astype('float64'), [15, 14, 7]))
uop_5310 = relay.tan(call_5307.astype('float64')) # shape=(15, 14, 7)
uop_5312 = relay.tan(call_5309.astype('float64')) # shape=(15, 14, 7)
uop_5313 = relay.acos(uop_5310.astype('float64')) # shape=(15, 14, 7)
uop_5315 = relay.acos(uop_5312.astype('float64')) # shape=(15, 14, 7)
func_4900_call = mod.get_global_var('func_4900')
func_4904_call = mutated_mod.get_global_var('func_4904')
const_5326 = relay.const([1.142149,-3.770627,-9.240633,-8.671533,9.841790,-4.594335,-7.764257,-1.412212,6.942523,-1.433833,-2.808375,-9.050422,3.442757,-7.982480,5.169238,-5.569422,6.938337,6.536980,-2.567358,4.802181,-7.430494,-3.411226,8.600675,6.376033,6.931655,-2.713922,-4.189806,-0.490760,-8.267931,-3.300514,-3.192506,5.522173,2.218740,-4.398818,-7.311652,-5.809432,2.983526,9.653646,2.111446,8.078826,-3.075724,-5.440352,-0.113171,6.142544,6.854830,-3.906506,-8.253353,-5.662462,-2.283511,4.099744,-1.803089,3.752779,2.912431,-7.665975,7.355712,4.761512,-4.233159,-6.110232,-7.291146,5.683896,9.063174,-2.019811,3.540905,-2.222889,4.524209,-6.872253,8.495348,6.179179,9.678107,6.067018,-0.958120,-6.835988,6.138842,2.554028,-0.997536,0.988011,7.217419,-3.279741,-4.387912,-8.052492,-6.835680,-0.104735,5.280742,-7.499398,6.512519,7.080703,9.602845,-8.941969,1.722671,-5.669885,2.261706], dtype = "float32")#candidate|5326|(91,)|const|float32
const_5327 = relay.const([8.492067,-3.021187,9.724438,0.802350,-7.688480,-5.127776,2.983647,7.706483,1.869263,-6.054065,7.771241,3.928024,-9.877238,3.084442,7.334880,4.287658,3.277899,0.515217,-4.232845,-9.077013,1.561165,-7.078788,-9.350168,9.285705,-2.951850,-7.148054,9.434678,7.272567,-9.081391,-6.509508,-9.221560,-5.862334,1.854611,-5.888082,-1.414356,8.881521,6.170238,-6.053177,8.843009,9.398909,-9.909671,1.514257,-5.278880,9.680439,8.903386,-1.277212,1.429433,7.078634,-4.112734,-1.288666,-2.932737,-9.197194,1.080693,-4.345764,1.070337,-3.326700,5.291996,7.737037,4.307096,-2.368534,-2.605357,-3.599354,9.118950,1.746015,8.042783,3.220048,2.600397,-9.801804,-3.587473,9.511569,-0.987735,7.624990,0.958658,7.709295,2.072098,8.757088,1.411029,7.346407,-8.576370,-4.543053,6.605062,5.485362,-2.871277,5.487824,-6.864740,-8.100891,9.594872,-8.044034,-5.053076,5.390699,5.859237,-4.946725,-9.067227,-5.714295,-4.332283,-6.914412,-5.269002,-2.086788,4.605325,0.592334,-9.029561,9.916759,-2.415176,-1.002545,4.680662,-5.669303,-5.178856,5.504515,6.673362,4.552040,6.736872,4.391410,-6.907484,-0.968765,1.633430,4.792823,3.004360,4.246840,6.653595,-8.133708,2.803514,6.604999,9.562496,-1.243873,-4.823315,-4.013698,-8.087309,9.807185,7.131511,-4.340237,-4.241128,-4.138056,-6.644015,2.985300,2.725572,8.046348,-8.795298,6.231270,2.534701,-2.601149,6.845696,3.630813,-0.658001,-9.029857,-5.965683,7.364153,3.817703,-4.731163,3.871123,0.546776,-5.411920,-5.565373,0.033570,-2.942551,7.864816,3.418574,-0.886557,-3.325954,3.758438,-2.133907,-0.007488,-1.859602,-3.688403,6.379670,-5.699012,-7.593865,9.075055,-8.697354,-6.575084,-9.377976,9.302792,4.677068,-5.876093,4.372562,-5.217095,-9.437137,4.953062,-2.882512,4.325852,6.480561,-3.979341,-0.543085,-1.209037,0.895625,-0.029998,1.480027,5.109467,0.259468,-6.554007,8.182409,-0.166701,8.622328,2.736709,2.106554,-6.278600,-0.052540,1.411029,-7.397883,6.909983,-1.329206,5.330597,-9.463821,-8.893695,9.029721,-7.866627,-3.705664,-4.696248,-5.675567,8.456054,-3.519613,-1.130750,6.331648,-8.115766,-6.227299,4.441748,3.290291,-1.168569,5.465052,4.692622,7.206994,2.847704,-0.505986,-5.116490,8.481855,8.094145,9.040643,8.767951,5.512672,-0.517530,1.946373,-1.271657,8.909710,-6.347281,-9.309662,4.385041,5.783399,5.887011,-4.893010,-9.160327,9.585549,7.046142,-6.636317,0.260291,-7.475932,4.869326,7.263705,-8.208915,-2.372163,4.873876,-8.910319,-0.355102,-0.952291,-7.837488,1.057757,-9.816982,-4.102869,6.210934,-6.146438,-4.009258,7.516985,5.001299,1.927084,4.206537,-3.284857,-5.276481,2.602546,8.807242,-7.050286,-5.327781,-7.933381,1.463572,-7.880887,2.529614,1.187758,-4.553090,1.846904,-9.628892,4.112233,-3.433584,-4.418356,7.788462,-7.158171,2.112174,-6.706847,-4.231852,2.222235,6.787968,2.272981,-2.248686,-9.518752,9.375334,-6.651923,-4.766395,4.906563,-0.764225,-2.519897,0.531883,-1.160804,8.994967,-8.110281,0.561299,3.497758,7.813993,-6.670119,-6.005563,-1.896269,-7.533116,8.192932,3.916097,-4.423415,-8.201351,7.460186,4.231523,7.030677,-4.497003,-2.580303,7.070295,-7.776313,-9.604380,-7.020190,3.188751,-8.008761,-3.103411,-3.435726,-9.053353,5.077095,8.686919,-7.830061,-4.797607,-8.206925,2.109574,-8.484278,-2.969703,-8.974967,9.200637,8.821555,1.530231,3.643603,5.627060,8.756890,-2.948275,4.940331,8.035466,-6.505693,5.692908,-4.575601,9.260513,4.979957,0.640966,7.653686,-4.862940,5.000549,-5.166541,1.667880,9.906583,-4.657570,3.192601,6.572635,7.865830,-3.000194,-2.740001,-9.556502,-6.903272,-6.822303,8.701265,-5.084221,-9.029589,6.856841,-6.595367,6.321963,-9.759373,5.693491,2.950547,-5.742399,-4.636552,6.275265,-7.969463,8.086607,6.574249,-0.005647,0.801750,-0.301221,7.532609,-4.281486,9.827592,6.378447,2.003413,2.333550,9.697307,-1.634157,0.142713,8.111085,6.240456,-8.075659,-4.119287,6.250078,9.821495,0.381409,3.384652,1.390503,9.058103,-3.563196,4.243306,5.425502,-6.934537,5.076740,7.443656,0.996409,1.619145,4.473393,-3.383155,1.844678,1.319161,-9.083830,-0.569933,3.816229,-2.041084,3.402997,3.466574,9.972505,-2.372201,4.663162,4.758763,-6.821019,-8.169490,-7.783472,-8.044843,5.358024,-3.829955,-4.969354,3.846288,9.289355,-5.639437,6.368461,0.309140,4.776799,0.814308,-2.372375,0.708372,0.025238,-9.225716,-6.802981,4.125815,-1.810834,-0.490082,4.574228,-8.210433,6.087075,8.459015,3.295405,4.483710,-8.757683,5.200235,3.286490,4.301838,2.004367,-8.651053,-6.929333,6.725117,-8.014100,6.601134,6.446493,-6.811628,-4.343788,6.403996,-7.436987,-1.880444,-3.508727,7.346028,-9.690918,-2.417339,0.030552,-5.199800,3.100763,-5.573787,8.658203,7.772247,-0.808574,7.586208,1.202847,-9.940813,-9.115643,-3.762274,-8.911240,-3.274922,-5.522314,-4.345189,-7.542983,0.841389,-9.678305,5.515970,5.462198,-9.720114,-6.631530,7.110266,4.098001,5.403862,-5.095398,-3.954749,-3.159071,-4.957486,2.459359,-8.267713,3.234494,9.726376,9.260151,3.457452,7.437123,-8.078814,8.661320,0.405612,2.016965,-6.598541,-9.512900,7.868193,-2.786727,5.544473,-1.739552,4.680652,3.997023,-9.684086,2.701048,-5.707815,7.872526,-0.870784], dtype = "float32")#candidate|5327|(525,)|const|float32
call_5325 = relay.TupleGetItem(func_4900_call(relay.reshape(const_5326.astype('float32'), [13, 1, 7]), relay.reshape(const_5327.astype('float32'), [525,]), ), 4)
call_5328 = relay.TupleGetItem(func_4904_call(relay.reshape(const_5326.astype('float32'), [13, 1, 7]), relay.reshape(const_5327.astype('float32'), [525,]), ), 4)
func_3627_call = mod.get_global_var('func_3627')
func_3631_call = mutated_mod.get_global_var('func_3631')
const_5331 = relay.const([-7.193287,-5.081448,-8.872153,5.131860,-3.827014,5.374355,-8.817816,-2.010791,7.123176,7.448719,-4.533534,-8.569528,4.963306,1.152737,2.236925,9.239937,-9.265319,-5.108943,-7.968239,3.975422,-8.646834,-0.893791,2.913614,-5.811829,-9.282371,9.932883,-2.757361,-2.485584,-2.722143,-6.102231,-4.927453,-8.894753,7.552447,4.491842,-4.566378,4.326047,7.636402,2.199440,-1.334536,5.829821,-5.962841,9.659215,5.261468,-3.370788,4.932289,0.387990,5.243647,-5.520253,-6.158210,-6.668569,-9.880784,-4.118698,9.684323,8.147829,6.049582,8.625601,0.465266,-0.515246,-7.183509,-5.624641,2.360099,2.438362,0.156436,-5.292221,6.761193,-7.304538,-4.428036,-2.589667,7.307122,9.303745,-3.824132,-5.429448,8.646790,-0.772552,2.428472,-5.596781,7.129723,0.537100,6.757163,-3.874527,5.952295,7.603252,3.897733,7.584823,0.933249,9.843390,0.816455,9.574011,-6.513745,-4.395634,-7.225629,0.808750,-8.854377,5.248528,-5.190635,5.131497,-9.098582,0.333941,-9.616784,-4.036019,4.347015,1.441404,2.854802,7.012201,9.454304,-8.357084,-4.034755,0.741310,-9.342574,7.266910,-4.272910,-1.328124,7.017002,9.144907,2.961069,3.349735,3.228761,8.366333,1.346368,8.538168,6.814068,-3.238248,8.564938,-0.393965,-2.161142,-8.259582,-2.707481,-5.571832,-1.080552,2.521332,9.005012,-6.004780,-2.896918,-1.965319,-9.495501,-8.271146,3.724922,-0.945414,-9.466076,-7.284126,-1.611899,5.857632,-2.691292,-3.203138,2.843910,-5.033114,-7.399385,-6.462517,-6.997390,-1.227922,-2.673821,-6.266116,5.083119,-0.255390,-8.610302,4.273381,5.127236,5.676562,-9.606084,-9.799443,-4.997219,-1.649071,3.998870,8.688533,5.735026,-2.179143,-3.401934,5.212073,0.443534,3.947780,9.859602,-9.040761,3.735941,-0.961944,0.680104,-0.457571,9.895327,-5.744055,5.666188,-2.543029,0.033424,-5.997874,-5.429946,-8.904836,7.665156,5.956589,-3.431158,5.766321,2.094022,6.604957,-5.465338,-5.205533,-9.314458,-3.073290,-6.887712,5.813614,8.328259,3.387310,6.899444,-4.459437,7.984311,9.834191,8.929414,-1.721540,-3.534065,-9.438746,3.865053,-1.112221,8.764087,5.009822,-1.040325,-4.531488,-1.453970,5.332798,5.527155,-8.951255,2.440626,-7.822044,-6.825271,7.981742,-7.382147,5.606793,8.178218,6.253057,-7.288629,-6.629280,4.974433,-3.027103,3.070697,-9.249424,0.885743,2.309958,-0.197929,-3.203806,-2.172593,-8.624402,4.080454,-0.752249,4.431896,1.075091,-1.478801,-4.577621,-6.560230,0.707292,-4.245862,-6.359200,-9.181422,-1.414721,1.267632,3.638601,0.856784,-1.576046,4.230623,0.605928,1.344263,-4.377640,-3.457933,9.927587,-8.604038,-4.605991,-1.209626,-2.396000,9.112338,-7.330027,1.869736,-1.368360,4.851502,2.949655,-0.741341,8.965324,-2.786591,4.466815,8.129965,1.221375,-8.869322,-7.568318,0.524429,2.363207,-0.120571,7.798543,-3.637164,-2.842197,7.394772,-4.520644,-8.178885,9.135306,-7.979932,1.923822,1.023788,2.323540,6.268755,8.418872,-2.829774,4.578880,-9.760478,1.199983,-5.909056,-7.888596,6.033377,3.569043,-6.072223,-3.424003,-9.899480,-2.311253,7.380830,3.151066,-4.124182,5.827667,2.282096,7.264205,9.287561,-2.266019,-6.816209,5.807351,-4.431349,9.260205,3.061019,1.119777,3.207752,-6.108748,9.240616,7.908835,-1.438964,-8.333086,6.406115,1.384562,-2.192075,2.434693,-7.842660,9.310445,7.977263,0.557801,-7.532186,-5.920579,9.116601,-4.369819,-6.478173,-9.208879,-6.680272,5.423640,-5.463946,6.585650,-3.895236,5.858813,9.751003,3.699512,3.067130,-2.558055,0.414372,4.614991,8.289925,5.901430,-8.629557,-1.683268,3.079770,-7.520077,-1.466710,-8.750052,-9.122356,0.020034,-5.482410,0.896879,4.448069,-8.475432,-6.954864,5.183325,5.630648,-1.032964,-0.115059,7.224740,-1.659804,5.684877,9.736235,6.804417,6.396279,1.631260,-8.200930,9.736974,-6.618694,-8.717445,-0.343215,-3.709618,2.831757,1.965579,7.270382,7.572922,-8.438782,-6.143617,-5.270757,-3.277182,-0.069004,-0.833169,-0.464223,9.329276,4.863170,5.647107,3.768257,8.811670,-2.103876,0.637281,7.616075,8.883470,4.053229,9.739627,-4.733569,-0.045027,-1.819280,3.284511,-0.306608,8.696491,-7.168731,9.351458,8.472862,-4.163262,2.623777,5.962504,-9.279740,2.510624,0.144563,-4.807075,-4.139876,-6.882828,2.258472,0.773298,-5.831243,7.036907,7.351977,5.963427,2.643051,2.568866,9.083001,-4.648070,6.339233,5.491141,-6.764380,-4.170703,-5.665465,1.769539,-7.257844,-4.033589,-6.164273,-2.656227,-1.703990,-4.444843,4.158034,5.023147,-6.897607,2.072084,3.097892,-0.846419,-9.971898,-7.980797,-3.727707,-7.788538,-9.181775,1.842160,-5.215935,-4.341802,6.126639,-7.580985,-1.626682,6.716788,8.124954,0.919357,-5.806255,3.068702,-2.748355,9.381825,6.541292,-2.403709,-3.099667,-6.780362,0.664642,-6.365538,5.898119,4.084741,-8.283940,2.369264,4.718738,-3.847436,-3.089357,-3.644295,7.238190,7.189597,2.120965,-7.929706,-8.791003,-5.442882,7.934488,-1.083234,-9.698966,5.805823,5.868516,-2.668130,3.131489,-6.890391,-6.599026,-1.471875,-7.126256,1.927296,3.749411,-4.620533,-7.203333,3.023426,7.956811,2.348976,-2.642267,-6.241710,0.354532,-0.845835,5.836422,-3.340142,-3.919988,3.959075,4.000644,-5.756413,-6.860790,-3.114677,-9.209614,-0.545133,4.730304,1.136323,-8.695539,8.103433,-9.445981,-8.775703,-0.544012,-0.268028,-6.428582,-9.459595,-9.704310,-4.493392,2.876058,6.583521,7.895142,1.184533,3.116451,-8.406194,-4.985391,1.352745,7.234503,-0.361217,9.323787,-7.146640,-9.412360,4.985449,-3.729390,9.218455,-3.203471,1.235823,-6.635446,-2.024734,1.116005,-3.984554,4.461083,-7.564269,9.205816,-0.743254,4.636942,-2.583772,5.022067,-9.410295,-0.679488,5.388546,5.875063,-7.351916,9.055083,1.917051,1.379335,-3.204476,-0.569914,8.992392,8.283339,-7.061591,0.234094,-6.159234,-0.351266,-7.635584,-5.905126,3.372455,-8.578863,-4.027397,-5.849549,-5.817281,4.611748,-9.251223,3.657112,3.913474,-1.618483,-8.318638,0.790186,-3.764412,3.254154,-6.023346,7.611274,8.017330,4.526320,8.126428,-6.779550,5.405377,2.824720,9.849737,6.239480,7.282902,-3.437942,5.471741,5.979637,7.167902,-9.548556,-0.364045,5.322927,8.593204,4.850448,-1.499131,-6.101415,5.117704,-9.433994,7.817274,-1.182606,8.082644,-0.088445,-6.124064,-6.624200,-4.974978,4.911403,-4.717025,9.391091,7.994387,4.873812,-7.372397,4.676811,9.177210,-2.734319,3.594842,4.526811,9.175341,-9.652873,3.477830,4.416424,5.253836,8.035736,6.305010,-7.388708,4.047185,-4.084558,2.592347,-9.020729,5.419325,7.218319,8.695208,2.587538,-9.938225,-2.223660,9.531900,-7.645310,-3.310998,-8.381943,-1.382216,-1.762904,-9.610050,7.353326,-0.240703,-6.825938,-5.640464,-9.350022,4.966901,-9.353024,6.806699,4.480804,-7.078660,-2.643577,8.410651,-3.946068,3.903973,-9.809819,7.277789,6.503416,5.811657,-3.679422,-5.776841,0.188944,-4.590321,6.372335,-6.165079,-7.171070,-5.586204,9.976086,-8.539050,7.370221,-8.642631,9.923067,0.206709,9.878074,6.230544,-5.675629,-9.167397,9.852681,8.995101,4.386096,0.787138,-1.443011,-2.207239,-9.102625,6.711870,-0.227751,0.283631,-6.818925,-9.489919,0.373485,7.760032,2.761334,9.740322,-9.299735,-4.104352,-2.145733,-7.154603,5.847963,-2.670535,5.565057,-0.725620,9.642146,6.766234,-2.953006,4.243269,5.602427,-2.522071,-5.035722,1.493443,-0.245407,-4.352343,-3.978363,-2.259882,2.060318,5.912981,-6.274680,-6.945200,3.751846,7.439305,-0.820287,6.390650,0.617593,-6.920941,0.794141,4.074217,9.148614,-4.267238,-6.392643,-0.309949,8.215267,-1.274241,3.103668,7.278380,-0.204433,-7.964066,0.672202,9.631022,2.138442,-8.681003,1.015144,6.342836,-6.322342,-9.065605,-6.803446,-0.906620,-4.530110,2.626472,-8.415514,-0.876659,-3.134359,6.386228,-4.049449,-5.366976,-1.168338,-8.975650,-3.681659,5.062813,2.052061,4.582345,-2.547894,9.554174,-4.732973,-1.994926,3.452165,-2.538415,2.756337,9.313375,-3.741959,-4.930968,6.190220,-4.543047,-7.802104,-6.933307,-9.051511,0.262628,8.404712,6.539918,4.079053,-1.014333,9.392986,-3.180281,-2.491931,-3.091981,-0.758142,-2.770084,-6.571205,2.126209,-8.242362,-6.083902,-8.972565,1.763644,5.275263,6.733838,-4.232658,0.614189,-7.266072,-3.322281,-4.448329,7.835997,3.125477,-3.438834,2.851516,-7.461759,9.622790,-4.141908,-0.444311,8.178530,-1.361276,0.803039,4.104652,-4.231472,-6.042329,-8.241051,-8.453201,0.395170,0.992735,4.232592,-2.979136,-9.674412,-1.324519,5.137114,-6.464427,-3.623433,8.078760,7.910884,2.450527,5.747080,3.643048,-7.121835,7.097072,4.710802,1.317764,2.691280,6.903772,9.583066,-8.105979,-0.437698,0.745551,-0.141054,-9.091810,6.068603,2.816400,-9.829185,0.200458,-0.646239,-5.981847,5.984275,-6.356543,9.671450,0.414308,-2.246282,1.407379,-8.167218,7.293140,-5.304023,3.856273,3.594492,-5.494626,7.345702,-1.182860,-2.298019,8.715596,-0.063558,5.919549,1.577212,-5.121077,-3.983810,5.886280,5.288510,3.696275,-8.441597,1.226777,-4.483226,1.388431,0.749248,2.529717,7.061017,-5.544071,0.274951,5.463518,-2.695685,-4.446315,-8.651396,0.857817,-4.069975,7.431031,0.877278,0.570114,-3.614310,0.984551,-6.596838,8.466059,-7.461904,-7.495079,2.592718,-5.293318,0.442025,9.689449,-1.622977,6.776357,5.849475,-8.995519,-1.881102,-3.909930,-6.054367,-7.192202,5.758600,-2.762946,0.432736,8.741812,7.315635,-5.185785,-8.360930,-4.402900,7.951122,4.165264,-4.793376,2.290896,0.450840,5.805618,-5.487691,6.277317,5.228807,9.020855,-7.359023,-0.245058,-4.925885,-9.620205,-8.718313,-0.611194,6.580361,-4.979242,3.156182,-7.614880,-8.132540,-0.030029,9.832441,-7.283430,-8.625133,-8.154079,-1.752544,-6.446970,1.976269,5.795397,6.309045,5.125106,1.932330,-9.216642,-6.327527,-1.500435,-3.265029,9.182139,-7.809946,-2.892879,7.831903,6.980440,9.102325,-6.700938,-1.765699,-1.385195,4.293072,-3.872516,-3.090807,3.020870,9.724394,9.230027,1.979792,-4.777321,-1.004269,-7.013940,5.648042,3.405756,5.723796,7.595639,7.860274,9.166924,-8.816110,9.565189,-3.390483,6.805238,-0.202794,4.533120,8.167353,3.011178,-3.459938,4.267721,7.637926,3.721031,-3.947728,6.004185,-6.703857,2.095693,-5.705749,1.752952,9.178550,3.863263,9.913522,4.235772,-5.243951,-4.286808,-4.726340,-6.823193,-8.096556,-2.516025,-1.486122,-2.763574,-4.872939,8.329412,7.095137,7.413871,1.351151,-2.376520,7.074203,0.690472,6.486816,1.922101,7.856063,4.528977,1.570622,7.204415,1.804038,-1.295650,4.633437,2.307452,5.248370,5.776706,8.621375,8.462528,-6.180253,-1.935411,8.805857,7.667065,5.462441,-6.192544], dtype = "float32")#candidate|5331|(1053,)|const|float32
call_5330 = relay.TupleGetItem(func_3627_call(relay.reshape(const_5331.astype('float32'), [13, 9, 9]), relay.reshape(const_5331.astype('float32'), [13, 9, 9]), ), 0)
call_5332 = relay.TupleGetItem(func_3631_call(relay.reshape(const_5331.astype('float32'), [13, 9, 9]), relay.reshape(const_5331.astype('float32'), [13, 9, 9]), ), 0)
output = relay.Tuple([call_5300,const_5308,uop_5313,call_5325,const_5326,const_5327,call_5330,const_5331,])
output2 = relay.Tuple([call_5301,const_5308,uop_5315,call_5328,const_5326,const_5327,call_5332,const_5331,])
func_5334 = relay.Function([], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5334_call = mutated_mod.get_global_var('func_5334')
call_5335 = func_5334_call()
output = call_5335
func_5336 = relay.Function([], output)
mutated_mod['func_5336'] = func_5336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4618_call = mod.get_global_var('func_4618')
func_4619_call = mutated_mod.get_global_var('func_4619')
call_5353 = relay.TupleGetItem(func_4618_call(), 0)
call_5354 = relay.TupleGetItem(func_4619_call(), 0)
func_4194_call = mod.get_global_var('func_4194')
func_4197_call = mutated_mod.get_global_var('func_4197')
const_5369 = relay.const(3, dtype = "uint8")#candidate|5369|()|const|uint8
var_5370 = relay.var("var_5370", dtype = "uint8", shape = (2, 392))#candidate|5370|(2, 392)|var|uint8
call_5368 = relay.TupleGetItem(func_4194_call(relay.reshape(const_5369.astype('uint8'), []), relay.reshape(var_5370.astype('uint8'), [784,]), ), 0)
call_5371 = relay.TupleGetItem(func_4197_call(relay.reshape(const_5369.astype('uint8'), []), relay.reshape(var_5370.astype('uint8'), [784,]), ), 0)
func_5187_call = mod.get_global_var('func_5187')
func_5191_call = mutated_mod.get_global_var('func_5191')
const_5373 = relay.const([2.608978,-2.842972,6.769514,-8.544263,2.070720,9.204535,-1.216693,-8.169194,-7.534076,-4.350790,-5.238176,7.388626,0.635493,-6.731535,-2.757374,-7.766416,-7.319239,8.785714,2.630108,8.825428,-6.299379,0.315837,1.424615,0.325092,5.915280,7.912538,-7.526403,-6.631885,2.744346,5.367386,8.167326,9.373383,-4.752836,4.049701,0.540096,8.872162,7.652566,-2.273967,-7.537990,-2.701710,2.424432,7.441195,-1.948584,1.090000,-5.406469,7.055168,0.758673,4.640052,-3.504390,0.541643,3.740424,2.555266,-3.368089,5.155709,1.600526,-0.666491,-1.884547,6.858710,7.185231,-9.650313,2.581334,0.188521,-2.401737,-1.068700,5.198959,-3.357498,-0.755727,7.914295,-2.708687,8.166693,-3.385470,-7.905023,1.790735,1.269392,0.855890,-2.605862,-7.571583,4.897514,6.253705,9.020734,5.152440,6.174378,9.143419,-0.879363,-7.219781,4.236162,9.996172,6.702457,6.296009,-2.845499,-2.649961,2.345714,-5.609209,0.134746,8.962201,6.925999,5.639951,-6.130117,7.419634,-6.799408,8.941555,5.987597,7.103881,3.837010,3.780071,2.996314,0.971475,-8.788441,9.910104,4.821743,-2.309235,-3.104211,2.562574,-5.417228,5.576384,-5.494158,1.650628,-6.910214,-8.678282,4.586334,4.750051,9.873627,-9.836042,-1.032623,-5.234740,-2.419768,-0.787713,-2.148416,4.640759,1.721991,8.646816,6.562073,9.390512,8.334122,-8.915105,1.315687,-7.409232,-8.616529,9.602827,-0.926221,-9.793380,-9.366196,6.446802,-1.397918,-3.562139,-9.080432,-4.548879,-2.085759,7.423245,9.093974,-1.750426,7.262542,-0.129662,8.973296,-3.583494,4.758196,-5.578414,-0.922580,-2.601514,0.935032,-2.887756,-3.877891,2.886683,-4.900033,-2.923670,-9.900752,-4.586474,0.555076,8.781720,-5.725257,1.928423,-7.863684,-4.200576,4.020926,-8.535518,4.437919,-2.949774,5.845864,-8.632395,-8.852992,2.754354,5.814133,-9.254923,-0.503390,-5.743709,-1.988363,-2.316370,4.023113,2.988825,7.190147,1.522261,-4.072641,-8.488966,-0.092442,0.545571,-5.712061,2.617719,-0.617495,-0.508442,-1.318068,-6.223177,-9.503723,0.918662,8.293332,3.474762,-8.664454,1.076767,-3.707987,-6.357299,-6.239479,-0.440683,6.232107,-5.371617,7.362670,-4.602940,9.873933,-9.124257,-6.840139,-1.695976,-8.393425,-2.563466,-3.855404,3.225251,-3.467124,6.146759,0.972562,8.841558,-7.532021,0.839443,-2.971636,7.429003,-7.045566,-8.336459,6.898658,-7.558699,-9.741784,8.716620,-6.363468,3.255393,-2.048053,0.182564,-4.720753,-1.118191,-0.883811,1.870133,-6.571443,8.053491,-5.689397,4.579010,-1.281418,-5.489956,-5.761655,2.632547,-6.291919,4.250125,-8.150516,3.777456,4.018700,4.744459,7.495039,9.520155,3.957397,-9.670149,-7.325798,8.656642,0.480139,8.246166,1.049100,-7.309391,3.632923,7.850257,-1.431137,2.157331,-5.732199,6.786084,2.415025,4.228804,6.297050,-8.627106,9.974591,-3.243909,1.153204,5.820523,9.865788,0.622196,2.251176,-1.919806,7.171716,-4.247904,-7.057430,2.277374,-2.818821,-8.795477,-4.563155,4.176668,-9.196151,-2.340092,6.396999,7.149519,8.920365,2.631956,8.425959,-5.555159,4.010250,-4.919791,-0.130971,8.544243,7.752541,9.588781,5.872221,7.449396,-5.339771,5.852230,3.658770,-7.274166,2.073507,-6.695492,6.386927,7.946366,9.259146,-2.056744,8.455191,-5.249341,4.061572,-8.601831,-5.055906,3.083999,8.469538,-6.913111,3.097676,7.383282,-1.123101,4.809216,-6.732483,2.030636,-2.771769,-7.793275,0.221400,-6.809535,-8.537216,8.036870,5.904660,7.009658,-8.731523,7.504704,5.374883,-0.961469,-0.002048,1.853320,4.202620,-9.201961,0.804812,4.901557,3.009121,6.669427,5.762553,-5.942229,9.445452,4.031439,0.353387,2.873545,-1.763557,9.445517,3.852403,2.146778,9.047125,6.080389,-7.722306,2.390801,-6.623483,5.560920,-5.138184,-0.269409,-7.105025,0.147871,2.041138,-5.050497,-0.700218,-7.473849,-2.868106,-1.291671,-9.928467,-0.932192,5.004599,-7.778708,6.329471,4.113062,-5.837275,3.140173,7.415729,-1.763344,-0.964423,-2.918760,-2.073754,-1.205647,9.384742,-8.586138,-8.480854,-7.216882,0.136733,-7.247628,6.813755,-2.913731,7.759804,-6.204401,-6.821639,2.222373,0.655479,1.620883,9.989643,-4.103957,7.277450,-9.672491,-7.454931,7.417196,9.960566,-7.833063,4.510086,-3.424795,-4.356669,6.230798,-5.809835,2.320159,5.563684,9.722968,7.824246,9.202074,9.666357,-0.249877,-7.734342,2.128297,2.355248,-8.317426,-7.177011,-1.331741,7.065160,3.783325,-2.651423,6.401674,1.218914,-6.089130,1.598954,9.507468,5.474408,-9.641775,4.260559,-2.263191,9.901706,0.113461,6.223954,-8.494484,-3.775022,-4.520058,7.792512,-4.984522,2.882402,4.470158,-1.039511,1.485478,-0.242791,0.156039,2.586282,8.441534,5.525743,-0.833025,-6.041074,1.169749,-3.680781,8.143979,-4.944000,-8.767568,2.722854,-7.246350,4.769097,8.682071,1.295527,3.983914,-3.005781,6.953263,-3.515621,7.671208,-7.033621,2.636043,-3.071377,-2.095479,-5.669928,-1.909305,-8.024554,3.480783,-8.604209,-2.325852,2.613151,-4.200929,-4.014162,9.970631,3.426595,6.528536,-6.390096,-1.268937,1.520091,9.444927,-6.065235,7.333155,-9.582234,-6.881141,-5.380835,-5.909907,-1.631145,3.082367,-3.164806,0.659375,0.733709,9.245288,2.003568,7.660693,8.822014,-3.398580,-2.474364,-0.786392,-2.660481,-1.124023,2.658490,8.933449,7.997811,-0.967924,0.635621,-2.292635,-9.578619,-8.086622,5.004822,5.828112,-2.398706,-5.097290,8.706569,0.758886,2.950950,-1.806504,-8.717038,9.302118,4.702735,8.697880,0.556703,2.964364,-9.551685,-9.962214,0.176057,-2.817898,9.413633,7.962071,1.954151,4.037924,-0.257538,-8.643309,5.085710,-0.083497,7.787889,4.736491,5.988427,6.721526,7.114582,-8.886006,8.443795,-5.932775,2.615306,7.077381,6.908948,-4.898480,1.221609,-3.042116,-6.476956,8.715164,7.779399,-3.662401,7.214820,-3.437700,8.161043,-0.111810,6.513696,-7.278386,-1.014939,3.504220,-5.785163,0.017597,-1.487086,-0.776818,-9.088660,7.246245,-4.302696,9.517872,8.600155,-6.387786,-2.872788,7.193182,-5.515299,-6.148536,7.340379,-9.167509,1.175010,9.248469,4.959807,-3.774954,2.940164,9.290826,-4.228509,-5.112251,-3.043257,-9.110865,7.939511,-8.051475,0.060123,-4.287663,2.525036,-4.530486,-5.231599,-1.659757,8.899295,2.706814,-5.597392,0.605032,9.988858,-1.181245,-3.261070,-3.911768,-1.989072,9.160656,-3.738805,4.979061,-9.536300,-7.096726,6.448334,8.656420,-2.497203,-3.313703,9.686280,6.720409,7.545373,7.919130,-0.829240,0.338415,-6.376652,3.693766,-9.681497,-1.880182,-7.889480,3.208421,-6.067489,6.324505,5.106891,3.917829,4.457459,-2.550093,4.237723,-8.837651,9.881110,-0.587038,7.811544,-6.749008,-0.664617,-9.516234,-5.349871,0.150740,-8.042838,5.200772,-1.534170,7.675769,0.824179,-3.560986,4.415772,-5.586690,-2.323870,-5.700714,-4.407873,7.870524,-2.841054,-4.369998,2.795821,8.579206,-6.540858,4.490597,8.654465,-7.455548,-5.667145,2.065277,7.416137,7.064104,4.420171,1.612451,-4.320110,-2.765721,2.426057,5.835903,-3.034135,-9.109855,1.734139,4.381963,-2.630179,5.385866,-2.128086,-7.402548,9.175253,5.439371,-2.162662,-5.188352,0.718343,2.022792,8.400301,5.101754,4.464684,-1.816587,-1.940359,7.677886,7.007380,5.642471,-0.611354,-0.974964,7.291146,-0.300666,-1.839761,5.119398,2.987147,-1.826107,0.546032,9.975177,-5.944156,-7.141352,8.042989,2.198757,-2.582071,1.235909,8.977122,-2.812073,6.187305,-8.222963,-9.963105,-5.345477,-2.547979,-8.260734,-8.437220,-1.945969,-6.765001,0.998810,-8.519442,-0.851741,-7.812175,9.881232,7.095364,-7.952244,-3.384927,4.266183,-3.993302,3.767845,-8.448351,1.430116,6.975654,1.468449,-3.901778,6.765748,-5.642835,2.581961,9.964520,-2.787061,1.693187,-2.198046,7.935807,-1.982887,3.305546,-3.966378,6.840978,-1.388044,0.259609,-6.084283,7.700173,-9.641001,-9.994406,-4.253105,5.297999,-0.142810,2.995282,-6.556295,-4.613477,1.650109,-0.175129,-3.581913,1.683409,-3.473917,-2.094940,-1.530801,8.039261,5.597424,-2.706315,6.846383,-7.790304,-1.954334,-9.461231,-3.354135,1.992883,-0.609453,3.210422,-5.359669,-8.135032,3.726561,9.776973,-4.642973,6.527876,-0.469596,2.566329,6.970723,-7.117055,2.126429,-4.558844,4.427312,8.067754,-1.973704,-0.218534,8.281838,0.373975,-1.288939,-6.713780,8.115032,-7.394560,-0.395121,-5.752741,-8.084516,4.034075,2.442243,0.812964,-9.238892,2.707225,-6.042938,6.446721,-1.839768,-9.988477,1.382476,2.140304,-9.026700,0.340113,7.555524,-6.223138,-8.632501,3.246053,-1.485182,-1.229914,-6.806309,2.771142,-2.388165,-5.748523,4.572501,0.762227,-2.589005,-8.392407,-6.855494,4.754227,2.981576,3.817253,3.171937,7.859486,-6.817761,-1.161191,0.491220,2.344261,-5.410918,-0.454460,-5.108914,9.782190,-3.065966,-8.359013,3.422471,-8.903497,6.178320,-6.593315,7.796159,-0.942161,1.616815,-9.230058,-6.333047,-2.754552,3.639508,7.154361,-0.247207,-2.608526,-0.325697,-1.061327,-5.895011,-6.989080,-2.166530,5.069438,-8.239594,4.967602,-2.397521,3.047930,0.173119,-7.907922,-5.929650,9.542562,-5.556341,-4.953083,-7.198910,-2.873816,0.806480,-0.058393,4.200131,1.335084,-5.999465,2.283320,-4.448761,2.469086,9.519291,2.258705,6.989453,-1.304860,-2.522746,-2.397537,7.646417,-8.181189,0.897480,2.613532,-9.054812,8.686162,6.740510,7.591860,6.229138,-6.868624,-3.072656,-7.949581,-8.400822,2.388868,6.139079,4.364753,-3.085337,-8.871613,-9.619058,-2.012469,-8.292148,3.226311,2.853447,-4.297506,-2.259737,6.083490,-9.117719,-7.046955,-4.316486,5.355955,-8.074718,5.683005,-1.525151,-2.053179,6.233778,6.412094,-7.228580,4.913955,-8.024058,-5.558239,-1.792152,6.916977,-3.230922,8.292717,-4.254993,-2.432167,1.265425,3.193000,1.159755,6.973056,6.842109,9.824552,1.591530,0.852146,-9.167718,-6.347126,0.934539,5.202585,-2.825071,-7.713600,2.084170,4.671474,-5.697305,8.226993,-1.587356,-9.485220,3.569781,-9.957871,0.415598,-4.574028,1.802643,-9.491291,6.304246,-2.650647,7.743816,-6.488645,-9.944318,4.962682,-2.154533,-3.350282,5.662439,-8.021067,-4.062670,-4.067231,-4.948721,9.217109,1.726629,-4.842892,3.709951,-9.057453,-8.723010,-2.166059,-9.286098,1.182719,-6.612593,-8.018052,4.183145,-2.455771,4.125609,8.444630,-3.910055,8.707794,-3.600537,-2.469434,3.822524,-5.026718,5.743217,-2.211006,2.454854,-6.329790,8.821752,4.333735,-6.033622,8.083932,-1.718285,5.053149,9.342762,8.600064,2.148292,-2.090033,-3.691550,-2.984859,4.184862,-4.460028,-2.523035,-7.371974,7.285474,-2.989329,6.698132,2.876834,-6.278440,-5.260030,8.664735,-9.809474,2.551990,7.718316,2.384255,7.299735,-2.905364,9.889021,7.763170,9.455893,-1.709325,-9.016968,8.171676,2.128396,-3.701594,8.247307,1.958339,-5.686976,-5.883830,6.401545,8.853056,-3.026906,-6.770914,1.617003,6.787048,-8.497748,-1.217727,-6.770408,-6.226884,-7.726243,6.210492,-6.416434,4.522065,-3.312157,0.634717,7.920496,-6.478452,-3.239776,-3.349404,-5.514258,-6.983978,7.227791,9.017765,-6.053805,5.563117,3.946729,4.158971,-5.538224,-1.251573,-2.882018,-0.459337,6.085099,-0.061829,1.114617,0.202750,-0.595603,-6.032737,-0.065881,8.220491,7.388061,9.142049,-0.623279,-1.510911,2.854099,7.392986,-1.715279,-2.877962,-6.071855,-6.137348,3.540195,-5.367684,8.967988,3.540536,-9.051951,2.429868,3.521931,-5.043934,8.684071,-4.163618,-3.462924,-5.326461,0.323430,-1.028408,5.191928,1.800772,-8.462873,3.141600,-3.471664,2.530362,1.206225,-6.868699,-7.862695,-6.530002,-7.938162,-2.638504,-2.708937,0.746777,8.962239,-3.168929,-5.005674,0.339193,1.740121,1.587558,5.629700,-7.369333,1.735367,-6.203578,-9.138714], dtype = "float64")#candidate|5373|(1152,)|const|float64
const_5374 = relay.const([-7,-2,-1,3,6,9,8,-10,6,6,10,-1,5,-4,-6,-7,-6,-5,1,-8,-1,9,-6,-4,10,-8,1,-1,3,-1,6,3,8,2,5,4,-9,-7,-2,7,3,2,3,10,7,-6,-9,9,-8,-7,-1,10,6,4,8,-9,7,5,-5,7,-6,6,-3,-5,6,-3,-2,8,2,-5,-5,1,8,-3,1,-6,4,-4,-9,-9,10,-3,-7,-10,4,9,-2,3,-8,-4,6,-8,1,9,-1,-6,-10,-3,9,8,-1,-5,9,4,2,-10,9,1,10,-10,6,-1,-5,5,-8,-9,10,-3,-2,8], dtype = "int16")#candidate|5374|(120,)|const|int16
call_5372 = relay.TupleGetItem(func_5187_call(relay.reshape(const_5373.astype('float64'), [1152,]), relay.reshape(const_5374.astype('int16'), [3, 10, 4]), ), 1)
call_5375 = relay.TupleGetItem(func_5191_call(relay.reshape(const_5373.astype('float64'), [1152,]), relay.reshape(const_5374.astype('int16'), [3, 10, 4]), ), 1)
func_4072_call = mod.get_global_var('func_4072')
func_4074_call = mutated_mod.get_global_var('func_4074')
call_5377 = relay.TupleGetItem(func_4072_call(), 2)
call_5378 = relay.TupleGetItem(func_4074_call(), 2)
output = relay.Tuple([call_5353,call_5368,const_5369,var_5370,call_5372,const_5373,const_5374,call_5377,])
output2 = relay.Tuple([call_5354,call_5371,const_5369,var_5370,call_5375,const_5373,const_5374,call_5378,])
func_5389 = relay.Function([var_5370,], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5390 = relay.var("var_5390", dtype = "uint8", shape = (2, 392))#candidate|5390|(2, 392)|var|uint8
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5391 = func_5389_call(var_5390)
output = call_5391
func_5392 = relay.Function([var_5390], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_5394 = func_4557_call()
call_5395 = func_4557_call()
output = relay.Tuple([call_5394,])
output2 = relay.Tuple([call_5395,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
output = func_5401()
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5455 = relay.var("var_5455", dtype = "int8", shape = (8, 2, 16))#candidate|5455|(8, 2, 16)|var|int8
const_5456 = relay.const([[[-3,-4,6,1,-1,7,-9,9,2,3,2,-5,-1,-5,7,10],[6,-9,8,-4,-8,10,-5,-7,4,4,-2,-10,-4,-2,8,3]],[[8,8,5,-4,2,-2,4,7,-7,-5,-10,10,9,-8,-7,-2],[-4,-10,4,-4,1,-7,-3,-4,-7,-9,-3,2,-4,2,-1,6]],[[-7,-6,2,9,-4,-10,-3,9,-3,-7,-9,10,-9,-7,-7,6],[1,6,2,9,-4,-2,3,-6,-2,-5,-2,-6,-9,1,-8,-1]],[[1,-4,-5,-10,10,-7,-5,-1,8,8,3,2,9,-8,-4,-7],[8,-7,-2,3,1,7,3,-1,-4,-4,4,-8,1,1,-7,-10]],[[8,8,-6,-4,-9,1,8,6,2,10,-5,-9,6,-10,6,6],[7,4,2,-10,-8,6,2,2,9,-10,-2,-1,-8,-1,-10,8]],[[10,-3,-1,-5,4,9,-3,-2,4,-7,10,9,8,10,-7,-7],[4,9,-3,-6,-8,-4,7,3,5,-2,-7,-1,-8,-5,3,2]],[[-4,-3,-9,-5,-6,-6,-5,4,9,5,6,-3,10,9,-9,-1],[4,-1,4,10,7,3,-6,-1,5,-3,3,3,-3,7,5,-5]],[[3,-4,4,-5,1,-10,-6,-4,-9,10,-10,-7,7,-4,-3,5],[-7,-1,6,-1,-5,-6,3,10,4,6,-4,6,7,8,-1,4]]], dtype = "int8")#candidate|5456|(8, 2, 16)|const|int8
bop_5457 = relay.equal(var_5455.astype('bool'), relay.reshape(const_5456.astype('bool'), relay.shape_of(var_5455))) # shape=(8, 2, 16)
output = relay.Tuple([bop_5457,])
output2 = relay.Tuple([bop_5457,])
func_5460 = relay.Function([var_5455,], output)
mod['func_5460'] = func_5460
mod = relay.transform.InferType()(mod)
mutated_mod['func_5460'] = func_5460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5461 = relay.var("var_5461", dtype = "int8", shape = (8, 2, 16))#candidate|5461|(8, 2, 16)|var|int8
func_5460_call = mutated_mod.get_global_var('func_5460')
call_5462 = func_5460_call(var_5461)
output = call_5462
func_5463 = relay.Function([var_5461], output)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5467 = relay.var("var_5467", dtype = "int8", shape = (14, 6, 9))#candidate|5467|(14, 6, 9)|var|int8
var_5468 = relay.var("var_5468", dtype = "int8", shape = (14, 6, 9))#candidate|5468|(14, 6, 9)|var|int8
bop_5469 = relay.minimum(var_5467.astype('int8'), relay.reshape(var_5468.astype('int8'), relay.shape_of(var_5467))) # shape=(14, 6, 9)
output = bop_5469
output2 = bop_5469
func_5491 = relay.Function([var_5467,var_5468,], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mutated_mod.get_global_var('func_5491')
var_5493 = relay.var("var_5493", dtype = "int8", shape = (14, 6, 9))#candidate|5493|(14, 6, 9)|var|int8
var_5494 = relay.var("var_5494", dtype = "int8", shape = (14, 6, 9))#candidate|5494|(14, 6, 9)|var|int8
call_5492 = func_5491_call(var_5493,var_5494,)
output = call_5492
func_5495 = relay.Function([var_5493,var_5494,], output)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3697_call = mod.get_global_var('func_3697')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_5524 = relay.TupleGetItem(func_3697_call(), 0)
call_5525 = relay.TupleGetItem(func_3698_call(), 0)
uop_5543 = relay.sinh(call_5524.astype('float32')) # shape=(7, 13, 9)
uop_5545 = relay.sinh(call_5525.astype('float32')) # shape=(7, 13, 9)
output = relay.Tuple([uop_5543,])
output2 = relay.Tuple([uop_5545,])
func_5547 = relay.Function([], output)
mod['func_5547'] = func_5547
mod = relay.transform.InferType()(mod)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5547_call = mutated_mod.get_global_var('func_5547')
call_5548 = func_5547_call()
output = call_5548
func_5549 = relay.Function([], output)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_5570 = relay.TupleGetItem(func_4992_call(), 0)
call_5571 = relay.TupleGetItem(func_4993_call(), 0)
func_3049_call = mod.get_global_var('func_3049')
func_3052_call = mutated_mod.get_global_var('func_3052')
const_5579 = relay.const([-4.105967,-9.501026,5.002191,0.957465,2.063248,-9.113430,4.827496,4.339511,-6.343366,-1.023983,3.006990,1.285378,-5.105895,-5.141700,-6.371514,0.666126,2.786666,1.086261,3.056100,5.245836,-9.099738,1.245475,-6.677955,-6.889496,-4.071041,-7.587156,1.808755,-6.388142,-9.814795,-6.925588,-7.174244,0.922292,5.216002,-1.516020,6.909946,3.049185,-8.782168,6.088653,-6.970835,1.744134,8.560778,-3.519326,8.219594,-1.443974,0.798609,-4.153892,-5.628897,-5.139819,5.200481,-7.008180,-1.561276,-5.730008,9.519321,9.496678,8.812012,-4.744696,-0.915325,-1.355714,9.773091,3.350047,5.614266,7.899235,-7.669878,4.593463,-0.213992,-0.140099,-6.639353,1.997572,7.813909,1.259121,-3.390854,2.085947,-0.138260,-6.644385,-7.496861,2.721097,-4.451488,4.830974,-2.367600,-2.076468,2.732017,6.051841,8.078344,5.255969], dtype = "float32")#candidate|5579|(84,)|const|float32
call_5578 = relay.TupleGetItem(func_3049_call(relay.reshape(const_5579.astype('float32'), [3, 4, 7])), 0)
call_5580 = relay.TupleGetItem(func_3052_call(relay.reshape(const_5579.astype('float32'), [3, 4, 7])), 0)
func_4009_call = mod.get_global_var('func_4009')
func_4011_call = mutated_mod.get_global_var('func_4011')
const_5582 = relay.const([3,7,8,-2,2,-8,-2,10,-7,2,1,7,2,3,7,1,8,9,-3,8,2,2,10,-2,6,-9,6,2,4,-7,1,-2,-7,5,-3,7,9,-1,-1,6,-7,-6,-2,4,-2,-8,10,-4,-10,8,3,1,5,1,-3,3,1,-4,8,9,-8,4,7,-6,8,10,-7,3,1,8,-10,-5,-2,2,-8,9,7,7,-3,1,-4,5,4,-5,-4,10,-6,3,-7,-8,-7,4,-2,10,-3,-7,5,-10,9,-3,-8,7,7,2,6,-10,6,-10,4,-2,-2,4,10,-6,9,4,-2,3,-10,5,4,-10,9,9,-10,8,3,-1,6,-3,-9,-4,7,-10,2,-2,1,9,10,3,10,-3,-3,-7,4,-4,7,3,3,3,-1,4,-7,-3,-10,8,-8,-4,-7,-10,10,-3,-9,-3,8,-10,8,-2,-4,3,-1,-3,-4,-10,7,-2,-1,4,-9,-6,10,7,-9,-7,4,-8,-3,-4,7,7,-3,1,-4,-5,9,-2,-7,-10,-8,1,5,6,10,6,-3,1,4,9,-4,-2,8,-3,5,-3,-10,-6,2,4,2,-9,-3,-1,2,-6,6,1,-2,-1,10,9,-6,5,-6,2,-9,3,1,2,5,2,-5,-7,9,-3,10,1,6,-8,6,-2,-10,10,8,5,-9,-5,1,-1,-10,1,6,-7,-9,7,-4,-2,-4,6,-4,5,9,8,-2,10,3,1,5,-4,-3,-2,1,-3,-6,-9,9,4,4,8,10,5,9,-5,-3,9,-1,7,4,-1,7,3,-3,-6,10,2,-1,-3,2,3,6,-3,2,3,8,-6,-3,4,7,-3,-5,-7,10,5,10,9,-1,-7,2,8,-3,8,-5,-1,4,7,7,-6,-6,2,10,-1,6,5,-7,10,9,-5,-4,-5,2,-8,10,7,4,1,3,-6,-2,-6,3,-9,6,7,4,-8,5,-5,-1,-10,-2,-10,5,-3,-8,5,5,-6,-10,10,-4,-8,6,6,6,2,-1,4,-8,-2,-5,8,3,-8,-6,6,-9,-2,10,10,-6,-7,-5,-2,9,1,-2,-2,2,7,10,-9,2,2,9,-9,6,-3,-8,-8,-10,-8,8,7,-10,10,-10,9,-10,3,6,-6,7,-5,-6,-1,-10,9,7,-9,-2,8,-8,1,9,9,7,8,-7,-10,-6,1,8,-5,8,3,-5,-2,-10,-2,9,2,9,10,3,-10,9,-6,-1,-3,6,-9,-8,3,3,7,-1,6,1,7,-7,4,8,4,-2,8,-6,-9,7,-4,-1,2,10,-1,7,-6,5,-10,-1,-2,-3,10,-9,-6,1,7,-1,-4,-1,3,-3,2,-10,-10,-9,1,-3,3,-10,-8,-9,4,8,-2,-3,6,-5,-3,-3,3,7,3,-6,4,5,6,-9,-5,-8,-7,-5,6,-3,4,-4,-5,-4,-1,-5,4,-6,-6,-1,-1,2,-10,1,7,-5,-10,-2,7,3,6,-2,-10,3,3,-8,4,2,-7,10,-9,-8,1,1,-6,8,4,2,-8,1,10,-6,1,8,3,3,2,-10,-1,-3,-7,1,-10,-9,-8,10,2,-4,-5,1,10,-1,-5,-7,4,-7,2,-4,1,-1,-6,8,-8,-8,-5,-3,5,1,-5,-10,10,-9,5,5,9,-6,-6,2,9,6,-3,2,3,7,2,4,-5,2,-8,-6,2,3,-8,-1,9,4,-8,-7,10,6,1,3,5,-4,2,-4,-3,4,4,-10,-5,-4,-1,-2,4,2,-10,-1,-10,-1,-6,9,-2,1,-8,-8,3,6,2,4,9,-3,-1,-5,-3,7,9,-9,7,-6,10,10,5,-9,7,7,1,5,6,7,6,9,8,-8,-7,-1,-8,2,10,-2,-7,3,9,-2,-7,4,-10,1,-10,-4,3,6,8,-7,-1,5,8,-6,5,-3,6,8,-2,-4,5,-1,-3,10,-7,2,-5,-6,5,1,-1,-2,6,10,8,2,2,-4,2,-8,10,-7,-7,10,-6,-1,9,-3,-3,3,-7,-5,-8,-5,4,7,1,10,8,9,-3,2,-4,-7,8,-10,-4,-5,5,-1,3,-2,-6,2,2,-10,4,9,5,-6,-7,-9,3,-1,3,-5,4,1,-10,3,-6,9,3,9,5,2,-2,-2,4,-1,-7,-5,6,10,1,-9,4,-9,7,8,3,-5,10,10,-3,3,9,-3,-4,-10,6,-5,9,-1,2,-2,7,2,7,1,10,1,2,4,-9,-10,-8,-7,-9,-7,6,-9,-9,2,10,-7,7,-2,4,-4,4,9,-9,1,5,-2,-7,5,2,1,3,6,6,9,-6,2,-7,2,-7,5,-10,4,9,-3,-9,5,-2,1,9,-7,-3,4,2,-5,10,-3,-8,-8,-8,-8,-5,10,3,5,-1,4,-3,-1,6,-4,-7,-9,-3,2,9,-10,-4,-4,-2,-7,-3,-5,1,1,-4,-6,-1,-8,3,8,1,-10,8,1,7,3,9,6,5,-9,-4,2,1,10,1,8,5,6,-4,-3,7,10,-5,-7,-8,1,-1,-7,-6,-8,4,8,6,5,3,2,6,-5,10,3,-10,10,-9,6,4,2,-10,9,4,-7,-4,6,-10,-2,5,-10,10,-8,7,-6,-8,8,7,-5,3,-10,10,8,-7,4,-6,8,-6,-8,-2,3,3,7,9,2,5,-9,-8,-9,-7,-8,9,2,-4,-8,5,6,3,9,-7,-1,3,-9,7,5,-1,1,-10,-7,3,1,-7,7,2,1,9,2,-4,-4,-9,6,-5,-1,-2,-1,4,-5,1,-2,-10,-10,6,2,5,2,-6,-7,7,-5,-8,4,-10,-4,10,2,10,-10,8,-8,-9,-8,-9,7,-4,-3,-1,-6,-5,-10,8,-7,-7,-5,-1,7,-1,7,3,6,-8,-2,7,10,10,-8,-5,7,2,-7,4,2,-3,7,-7,-3,-3,4,7,-3,7,5,4,3,3,8,-4,-3,3,2,3,5,-4,-6,-4,-6,-10,-2,-3,10,-5,-3,3,5,-4,-6,-4,-2,1,-9,-9,-7,-8,-5,3,6,6,-6,-7,-4,10,9,2,-4,1,9,10,1,4,8,-1,-5,6,-7,2,4,-3,8,4,10,7,7,5,5,6,-9,8,6,-5,6,6,9,-3,-7,-3,4,6,7,-3,-5,4,8,7,-7,-8,-8,-3,6,-6,-4,-9,8,4,-9,8,6,5,7,9,-4,6,-1,-1,-6,-7,-7,-1,-2,-10,1,-4,-3,10,-10,-1,6,-8,-6,-4,-5,5,9,-7,-10,-3,-9,8,3,10,-9,-10,10,-3,-7,9,10,-6,-9,-2,-1,9,-10,-10,9,10,2,-6,-10,-9,8,8,1,8,6,8,-5,-7,-8,-1,6,-6,3,-1,10,9,7,5,1,7,-3,7,1,-6,9,-7,-9,7,4,-5,9,2,1,-3,1,2,-2,4,2,-4,7,10,-4,-10,-5,3,-10,10,-4,-8,3,-1,-10,10,-4,5,-6,9,-1,8,-7,10,8,3,-2,-7,10,10,10,1,6,7,-10,2,9,-7,-3,-6,-8,-10,-7,-7,-2,8,-9,-10,-7,-7,-7,-8,10,-3,-4,-1,7,3,10,-2,7,6,8,-2,-5,2,9,8,-7,10,1,2,-7,-3,-4,-9,6,-8,-3,1,-9,-2,5,8,3,3,-1,4,-1,5,4,8,-1,-6,9,4,10,-8,6,-7,4,-4,5,5,9,-1,3,-4,-10,-9,-6,8,-7,-1,2,5,-5,5,9,6,-7,2,8,4,-4,8,-4,-8,-5,-7,6,-7,10,-3,-9,8,7,7,4,3,4,10,10,-10,-6,3,6,-4,-9,7,5,-7,-5,-8,-6,9,-4,8,6,6,3,-5,-9,-9,-6,-10,4,-5,-10,8,-6,7,-5,-2,1,2,-1,-6,5,-1,-2,4,-6,2,2,5,-6,-9,-5,1,-1,1,1,-2,-3,-7,-4,10,10,10,-4,1,7,-1,1,10,9,5,1,6,2,8,4,10,9,-7,6,3,8,-6,9,2,-7,8,4,-1,-7,4,6,5,-3,8,-2,1,-8,8,4,3,-7,-1,-5,9,3,5,-7,-5,-5,-10,-8,5,-9,-1,-5,4,7,6,8,-6,-1,10,-1,10,2,1,2,-3,-10,-4,1,10,-5,-2,4,-6,6,2,-1,-3,2,-2,-1,3,-1,8,-7,10,7,-7,-9,-3,-6,-4,7,3,-3,-2,-10,-6,4,-3,-6,-6,-6,-1,5,3,9,10,7,5,-8,2,4,9,6,10,6,3,9,8,-8,-5,8,-4,1,-3,-6,7,7,-7,-9,-4,-5,6,3,-7,-4,-9,-10,-7,2,-1,7,6,5,8,10,-6,9,8,5,2,-10,2,-1,10,-1,2,1,3,-1,8,2,-8,-6,-2,4,2,4,3,-5,1,-5,7,10,2,2,5,-3,-5,-1,-2,3,-8,-10,-4,-5,-2,-7,6,10,9,5,-5,8,9,-9,6,-7,-10,-5,-1,-7,-9,-1,-2,-3,2,-6,8,9,3,2,-1,-4,-5,3,-9,10,-7,-5,3,-9,-5,2,-8,3,-8,-3,-4,-9,-5,-5,-7,4,-8,-2,-6,6,9,-7,8,10,-4,6,-9,-9,9,1,-10,9,-4,9,-5,1,4,1,-9,9,-4,-3,1,-9,7,6,7,-5,8,10,10,5,1,-7,9,-6,-2,7,-5,2,8,-9,-3,5,2,-5,9,8,8,-2,3,9,1,7,-2,-5,-8,7,-1,-5,10,-5,9,-10,-1,3,2,-7,8,8,6,-2,10,-8,-4,5,-2,-2,6,-10,-4,-8,5,-1,1,4,-5,-2,8,7,4,5,-2,6,8,-2,-9,3,6,-6,3,4,8,2,-7,-7,1,-4,-8,-1,-8,-3,3,-10,7,-8,8,10,-8,-2,-1,6,3,-7,2,-9,2,7,5,-8,5,-5,-8,9,-7,-2,1,4,-10,5,10,-4,6,-10,9,7,2,7,9,7,-8,-6,-9,-3,3,4,-1,-6,10,-2,-3,-4,-3,6,-8,7,4,-7,6,-5,-7,2,5,-7,-3,-5,7,1,2,-1,-2,8,-4,2,-6,-10,-6,-1,10,8,-8,-10,-4,-7,10,-9,-8,2,-4,3,1,-3,6,8,3,-9,-8,-5,10,9,2,4,-6,4,-1,10,-2,9,-6,-4,-2,9,2,4,-8,3,4,-1,-4,-10,4,8,-4,6,3,-10,-4,9,-5,-1,-10,4,-2,2,-10,4,6,-1,-9,2,-8,-9,3,10,2,2,6], dtype = "int64")#candidate|5582|(2002,)|const|int64
call_5581 = relay.TupleGetItem(func_4009_call(relay.reshape(const_5582.astype('int64'), [2002,])), 0)
call_5583 = relay.TupleGetItem(func_4011_call(relay.reshape(const_5582.astype('int64'), [2002,])), 0)
func_1637_call = mod.get_global_var('func_1637')
func_1641_call = mutated_mod.get_global_var('func_1641')
var_5586 = relay.var("var_5586", dtype = "uint32", shape = (1152,))#candidate|5586|(1152,)|var|uint32
call_5585 = func_1637_call(relay.reshape(var_5586.astype('uint32'), [6, 16, 12]), relay.reshape(var_5586.astype('uint32'), [6, 16, 12]), )
call_5587 = func_1637_call(relay.reshape(var_5586.astype('uint32'), [6, 16, 12]), relay.reshape(var_5586.astype('uint32'), [6, 16, 12]), )
output = relay.Tuple([call_5570,call_5578,const_5579,call_5581,const_5582,call_5585,var_5586,])
output2 = relay.Tuple([call_5571,call_5580,const_5579,call_5583,const_5582,call_5587,var_5586,])
func_5588 = relay.Function([var_5586,], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
var_5589 = relay.var("var_5589", dtype = "uint32", shape = (1152,))#candidate|5589|(1152,)|var|uint32
output = func_5588(var_5589)
func_5590 = relay.Function([var_5589], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5717 = relay.var("var_5717", dtype = "float32", shape = (16, 11, 12))#candidate|5717|(16, 11, 12)|var|float32
uop_5718 = relay.atan(var_5717.astype('float32')) # shape=(16, 11, 12)
output = relay.Tuple([uop_5718,])
output2 = relay.Tuple([uop_5718,])
func_5721 = relay.Function([var_5717,], output)
mod['func_5721'] = func_5721
mod = relay.transform.InferType()(mod)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5722 = relay.var("var_5722", dtype = "float32", shape = (16, 11, 12))#candidate|5722|(16, 11, 12)|var|float32
func_5721_call = mutated_mod.get_global_var('func_5721')
call_5723 = func_5721_call(var_5722)
output = call_5723
func_5724 = relay.Function([var_5722], output)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mod.get_global_var('func_5002')
func_5003_call = mutated_mod.get_global_var('func_5003')
call_5728 = func_5002_call()
call_5729 = func_5002_call()
uop_5737 = relay.acosh(call_5728.astype('float64')) # shape=(525,)
uop_5739 = relay.acosh(call_5729.astype('float64')) # shape=(525,)
func_5250_call = mod.get_global_var('func_5250')
func_5252_call = mutated_mod.get_global_var('func_5252')
call_5740 = relay.TupleGetItem(func_5250_call(), 0)
call_5741 = relay.TupleGetItem(func_5252_call(), 0)
output = relay.Tuple([uop_5737,call_5740,])
output2 = relay.Tuple([uop_5739,call_5741,])
func_5751 = relay.Function([], output)
mod['func_5751'] = func_5751
mod = relay.transform.InferType()(mod)
output = func_5751()
func_5752 = relay.Function([], output)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5790 = relay.TupleGetItem(func_4667_call(), 0)
call_5791 = relay.TupleGetItem(func_4668_call(), 0)
output = call_5790
output2 = call_5791
func_5792 = relay.Function([], output)
mod['func_5792'] = func_5792
mod = relay.transform.InferType()(mod)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5793 = func_5792_call()
output = call_5793
func_5794 = relay.Function([], output)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5055_call = mutated_mod.get_global_var('func_5055')
call_5819 = relay.TupleGetItem(func_5054_call(), 0)
call_5820 = relay.TupleGetItem(func_5055_call(), 0)
const_5821 = relay.const([[[-4.497580,7.811835,6.341844,-7.734295,1.271201,-5.826104,-9.308656,-4.327481,4.022788,5.609935],[9.027705,-8.947643,-8.796153,-8.265368,9.155918,5.574412,1.930360,7.705799,-8.716130,2.881553]],[[-3.480105,1.934152,7.255432,-2.233912,7.071945,-2.420541,7.903685,1.112323,-6.324442,-4.334409],[2.162383,1.389695,-8.211145,-1.769318,-1.506390,-0.832154,2.644120,0.935538,-5.127851,-4.717618]],[[-9.861656,-9.033375,0.523979,1.963373,-2.330814,8.531204,1.447443,-7.666532,-4.321681,-2.399095],[3.472350,9.974381,5.947482,8.850759,-9.594903,3.276124,-3.734956,-8.509601,4.174596,-2.958925]]], dtype = "float32")#candidate|5821|(3, 2, 10)|const|float32
bop_5822 = relay.subtract(call_5819.astype('uint8'), relay.reshape(const_5821.astype('uint8'), relay.shape_of(call_5819))) # shape=(3, 2, 10)
bop_5825 = relay.subtract(call_5820.astype('uint8'), relay.reshape(const_5821.astype('uint8'), relay.shape_of(call_5820))) # shape=(3, 2, 10)
output = bop_5822
output2 = bop_5825
func_5837 = relay.Function([], output)
mod['func_5837'] = func_5837
mod = relay.transform.InferType()(mod)
output = func_5837()
func_5838 = relay.Function([], output)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mod.get_global_var('func_4234')
func_4235_call = mutated_mod.get_global_var('func_4235')
call_5880 = relay.TupleGetItem(func_4234_call(), 0)
call_5881 = relay.TupleGetItem(func_4235_call(), 0)
output = call_5880
output2 = call_5881
func_5892 = relay.Function([], output)
mod['func_5892'] = func_5892
mod = relay.transform.InferType()(mod)
mutated_mod['func_5892'] = func_5892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5892_call = mutated_mod.get_global_var('func_5892')
call_5893 = func_5892_call()
output = call_5893
func_5894 = relay.Function([], output)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mod.get_global_var('func_5792')
func_5794_call = mutated_mod.get_global_var('func_5794')
call_5901 = func_5792_call()
call_5902 = func_5792_call()
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
const_5922 = relay.const([[2,-9,5,-6,-6,8,7,3,9,6,-8,10,6,-6,6,4,-6,-10,-4,7,-5,7,6,-1,-1,-4,2,8,2,2,2,7,1,-2,-6,-5,2,2,-2,-5,-2,10,1,-1,-2,10,-8,-5,-6,2,-3,-10,10,7,7,-5,-8,-2,-4,3,-5,-1,2,2,10,8,2,2,-2,-4,-10,-7,-5,-9,-5,5,7,-4,2,5,-9,-9,2,5,-2,-2,-9,3,1,4,-6,5,5,-2,-3,-10,1,5,1,-7,10,-7,10,2,-4,7,-5,3,2,-6,-4,9,-6,-9,6,-1,-7,5,10,9,4,-4,-8,1,-4,-7,5,-4,-2,-9,-10,5,1,-7,7,-5,-5,2,-5,3,9,-8,6,7,-6,6,-9,7,9,2,-3,-7,-7,-2,-1,4,7,-6,5,-10,-2,-10,7,4,3,-2,-5,3,-9,4,9,3,9,8,-5,-6,-5,7,-2,-8,8,-1,10,-5,-6,10,-5,1,4,-8,8,-3,10,4,4,-9,1,-5,2,1,-7,5,-6,9,-8,7,1,-8,4,5,6,-8,1,-2,-3,3,6,5,-6,1,1,7,-10,3,1,-1,1,5,-5,5,10,10,-5,7,9,-5,-8,2,-1,1,4,-8,3,5,2,8,7,9,2,5,-6,10,5,1,9,-8,5,-6,-1,10,10,-9,-5,10,6,9,-8,-5,2,-6,9,-2,2,-5,-8,8,3,6,6,5,5,-2,-2,-3,3,5,-5,-6,-6,10,8,-5,-7,-10,9,3,-9,7,3,8,-3,-10,2,7,-1,-4,-7,1,-10,-7,6,4,-6,-9,-3,9,-1,-4,4,-1,-8,-3,3,-1,5,-5,7,-6,-10,-3,3,-7,-8,-7,4,-7,-6,9,6,-4,5,2,9,-4,5,2,-7,2,1,10,-1,8,-9,7,-5,8,2,-2,10,-10,3,-2,-10,-8,8,-6,6,6,-9,3,-8,5,-1,-1,-5,3,-2,10,3,-2,-5,2,10,-9,3,-4,2,-2,-8,-1,3,-3,-3,6,-1,7,-5,-9,8,-6,9,3,9,4,8,2,-3,6,-6,-2,-9,4,9,-10,1,-8,-6,-4,6,-6,-7,-4,3,-8,2,-7,2,-4,-5,8,2,10,8,-7,-4,-9,-1,-5,4,-3,-5,5,2,-8,8,2,-3,10,-6,6,-1,-5,9,-5,3,-7,-8,4,6,4,-8,-5,-1,-2,3,-1,4,-5,5,-4,-9,7,-7,-5,4,6,10,-3,-6,1,5,-4,-7,-2,10,-3,10,6,4,8,-5,-10,-8,7,1,5,-10,-7,-9,-1,6,10,7,-1,9,9,-6,10,-5,7,-7,-4,-1,-3,-9,-9,-10,10,5,8,-1,-10,7,2,-9,10,1,-2,-2,-1,9,5,-1,5,-6,-3,-2,-5,-5,3,-6,-1,-4,7,5,-8,-2,-4,-9,10,-3,-2,6,-4,-6,4,-9,-7,7,10,4,6,4,-8,8,8,-10,6,10,6,8,-8,-6,-1,-10,5,-2,1,-1,-9,-8,-2,-9,-4,-10,-7,-2,-7,-9,-1,3,5,9,1,5,-8,-7,3,9,-5,10,9,-4,-2,9,3,1,7,-4,-9,8,-3,-10,-1,6,1,-7,-7,9,5,3,9,-8,6,-7,-10,-4,2,-9,-4,10,-10,6,-9,9,2,-5,-7,-9,2,8,3,-5,6,9,-1,-7,-7,10,-7,-1,2,4,-9,-4,1,3,6,10,-3,3,-9,7,-3,-3,8,1,-1,1,8,-9,9,-2,9,6,2,-6,-10,-6,-1,-1,-4,-1,7,-3,9,-3,-7,1,8,7,-7,-10,9,-9,-6,1,5,5,6,-7,3,5,-7,-5,6,-5,-9,9,5,-8,10,-1,3,-7,5,6,-3,7,7]], dtype = "int64")#candidate|5922|(1, 720)|const|int64
call_5921 = relay.TupleGetItem(func_1412_call(relay.reshape(const_5922.astype('int64'), [4, 15, 12])), 0)
call_5923 = relay.TupleGetItem(func_1414_call(relay.reshape(const_5922.astype('int64'), [4, 15, 12])), 0)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
call_5932 = func_698_call(relay.reshape(call_5901.astype('float32'), [15, 7, 5]))
call_5933 = func_698_call(relay.reshape(call_5901.astype('float32'), [15, 7, 5]))
output = relay.Tuple([call_5901,call_5921,const_5922,call_5932,])
output2 = relay.Tuple([call_5902,call_5923,const_5922,call_5933,])
func_5934 = relay.Function([], output)
mod['func_5934'] = func_5934
mod = relay.transform.InferType()(mod)
output = func_5934()
func_5935 = relay.Function([], output)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5401_call = mod.get_global_var('func_5401')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_5992 = relay.TupleGetItem(func_5401_call(), 0)
call_5993 = relay.TupleGetItem(func_5402_call(), 0)
uop_6008 = relay.atanh(call_5992.astype('float32')) # shape=(7, 13, 9)
uop_6010 = relay.atanh(call_5993.astype('float32')) # shape=(7, 13, 9)
func_4707_call = mod.get_global_var('func_4707')
func_4709_call = mutated_mod.get_global_var('func_4709')
call_6011 = relay.TupleGetItem(func_4707_call(), 0)
call_6012 = relay.TupleGetItem(func_4709_call(), 0)
func_3544_call = mod.get_global_var('func_3544')
func_3546_call = mutated_mod.get_global_var('func_3546')
call_6022 = relay.TupleGetItem(func_3544_call(), 0)
call_6023 = relay.TupleGetItem(func_3546_call(), 0)
bop_6024 = relay.minimum(call_5992.astype('int64'), relay.reshape(uop_6008.astype('int64'), relay.shape_of(call_5992))) # shape=(7, 13, 9)
bop_6027 = relay.minimum(call_5993.astype('int64'), relay.reshape(uop_6010.astype('int64'), relay.shape_of(call_5993))) # shape=(7, 13, 9)
func_912_call = mod.get_global_var('func_912')
func_915_call = mutated_mod.get_global_var('func_915')
var_6038 = relay.var("var_6038", dtype = "float64", shape = (27,))#candidate|6038|(27,)|var|float64
call_6037 = relay.TupleGetItem(func_912_call(relay.reshape(var_6038.astype('float64'), [9, 1, 3])), 0)
call_6039 = relay.TupleGetItem(func_915_call(relay.reshape(var_6038.astype('float64'), [9, 1, 3])), 0)
uop_6041 = relay.asinh(var_6038.astype('float32')) # shape=(27,)
func_4482_call = mod.get_global_var('func_4482')
func_4484_call = mutated_mod.get_global_var('func_4484')
var_6045 = relay.var("var_6045", dtype = "int64", shape = (720,))#candidate|6045|(720,)|var|int64
call_6044 = relay.TupleGetItem(func_4482_call(relay.reshape(var_6045.astype('int64'), [720,])), 1)
call_6046 = relay.TupleGetItem(func_4484_call(relay.reshape(var_6045.astype('int64'), [720,])), 1)
output = relay.Tuple([call_6011,call_6022,bop_6024,call_6037,uop_6041,call_6044,var_6045,])
output2 = relay.Tuple([call_6012,call_6023,bop_6027,call_6039,uop_6041,call_6046,var_6045,])
func_6047 = relay.Function([var_6038,var_6045,], output)
mod['func_6047'] = func_6047
mod = relay.transform.InferType()(mod)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6047_call = mutated_mod.get_global_var('func_6047')
var_6049 = relay.var("var_6049", dtype = "float64", shape = (27,))#candidate|6049|(27,)|var|float64
var_6050 = relay.var("var_6050", dtype = "int64", shape = (720,))#candidate|6050|(720,)|var|int64
call_6048 = func_6047_call(var_6049,var_6050,)
output = call_6048
func_6051 = relay.Function([var_6049,var_6050,], output)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mod.get_global_var('func_5792')
func_5794_call = mutated_mod.get_global_var('func_5794')
call_6056 = func_5792_call()
call_6057 = func_5792_call()
func_6047_call = mod.get_global_var('func_6047')
func_6051_call = mutated_mod.get_global_var('func_6051')
var_6059 = relay.var("var_6059", dtype = "float64", shape = (27,))#candidate|6059|(27,)|var|float64
var_6060 = relay.var("var_6060", dtype = "int64", shape = (720,))#candidate|6060|(720,)|var|int64
call_6058 = relay.TupleGetItem(func_6047_call(relay.reshape(var_6059.astype('float64'), [27,]), relay.reshape(var_6060.astype('int64'), [720,]), ), 0)
call_6061 = relay.TupleGetItem(func_6051_call(relay.reshape(var_6059.astype('float64'), [27,]), relay.reshape(var_6060.astype('int64'), [720,]), ), 0)
func_3544_call = mod.get_global_var('func_3544')
func_3546_call = mutated_mod.get_global_var('func_3546')
call_6068 = relay.TupleGetItem(func_3544_call(), 0)
call_6069 = relay.TupleGetItem(func_3546_call(), 0)
const_6074 = relay.const([-5.517846,3.984764,-5.335103,0.928946,9.588511,9.553084,-4.912806,4.774815,-1.469470,-5.272544,3.735542,-5.971263,9.429404,5.472739,-3.720961,-4.752075,-8.997372,7.427186,3.271569,3.374899,1.847749,-0.621358,4.983573,8.279568,-4.182244,6.696745,5.740607,-4.392694,-1.725859,3.072340,-5.848537,8.794169,6.832382,6.542286,-1.403397,9.284758,7.388016,6.611850,7.245791,7.369582,9.242994,-2.656267,-1.390066,6.975037,-8.448246,3.322920,-5.843865,-3.113588,4.653959,8.607359,-5.062695,8.898134,-6.143118,5.177963,-3.157810,5.232174,6.905111,-7.857820,-0.278449,7.942763,-9.248090,2.399411,2.507128,-5.648952,0.014679,-3.265808,-5.559496,-7.020474,9.939027,3.632719,-1.474908,2.252348,-8.193087,4.679248,0.760083,8.933482,-8.748644,-9.405356,-6.448041,-5.221604,-6.861821,-5.786614,0.808099,3.475195,-3.693550,-2.340371,-0.002595,-0.770339,5.944805,5.203541,-7.345676,7.509219,-6.078108,7.079285,-7.639208,-0.826000,-6.062036,-8.274341,1.701568,-7.045049,-6.569766,-2.197209,-0.300073,4.380874,4.115955,-1.216213,8.216256,-1.628513,-6.905167,0.631032,9.963345,2.415937,-0.949953,4.141291,-4.689339,7.457567,-8.794812,5.371626,-4.545858,6.376869,6.464281,-5.040734,5.246899,-8.788779,-9.920557,-9.880330,-0.780750,7.097186,2.666174,-8.037854,7.421651,-8.415076,-1.409955,-6.644875,-8.338459,-3.135644,-8.691917,9.617076,6.323660,1.636682,5.622368,6.159199,7.969621,-5.144573,-8.704395,-2.399012,-0.021388,2.144944,-3.122413,6.487069,4.760355,0.805136,-0.149249,2.804498,-2.880242,2.231401,0.243041,1.741205,-5.221720,2.690401,7.373620,-9.842427,4.969262,-5.559559,2.481307,-6.573071,4.209671,-9.120920,-8.867897,1.677905,-5.048516,-1.235333,0.431592,4.913175,0.775556,-7.278986,-3.806946,-7.612894,7.440398,-2.965218,6.373404,3.097167,-5.173811,-3.984589,-8.389446,5.924798,5.497310,-2.070576,-6.148692,-1.756627,-8.781354,-2.083159,7.101248,-6.709725,3.097419,9.526893,-0.042991,9.823107,7.308489,6.441560,9.604120,-5.630910,5.299079,0.237977,-8.331792,0.314016,6.046143,-1.445592,0.503674,8.120905,6.668954,3.644921,6.912175,-4.956755,-6.095025,-5.406293,-1.471598,-5.253228,1.617582,9.214042,3.522509,9.708859,-6.604555,0.672459,-5.204328,-3.059109,-1.082124,6.023048,-5.238571,-2.376966,-8.434212,-1.758369,5.994744,-8.551490,7.061283,7.063422,-1.064025,5.221442,-5.171084,-8.062183,6.020800,-6.388042,-3.641521,2.081830,0.627434,-4.619177,1.538461,-7.926960,9.365973,2.607293,5.314646,-9.394638,0.286324,-4.887160,-0.599533,2.158930,-9.913722,4.729124,7.757175,8.550036,-9.528142,-6.793731,0.592269,0.721324,9.691945,1.602051,4.416513,5.208686,2.397675,-7.062583,-5.476807,3.645744,6.658362,-4.302201,3.914441,0.246023,3.000695,3.803615,-9.888006,9.606303,-1.736699,-1.565925,-7.638050,-4.317691,-1.086505,-4.454581,-7.292488,6.289045,-0.523600,8.632727,8.374375,-3.559607,-9.588372,0.849529,-9.277576,6.938349,2.300462,-6.561563,0.862786,2.169554,1.037806,-3.030402,0.151494,4.260172,6.775621,-9.547089,9.694168,2.558455,-8.211821,-0.250458,-1.318659,8.527166,-3.231777,9.557607,3.169356,7.226617,-2.006561,-0.539620,7.611666,-7.414232,-2.518892,2.356536,2.949733,-4.152780,-0.576766,-9.010186,-8.064349,-3.547559,4.650394,-3.690738,4.257793,3.254312,2.065187,8.088012,0.030753,-8.335729,-4.801471,5.511639,-1.357206,-7.658778,-6.953671,9.557686,-1.655903,1.482533,-5.160010,-0.686077,8.069762,3.314948,-5.893333,2.067521,-4.505137,3.510120,-9.857189,-8.933672,-8.419915,6.644327,8.481456,9.117733,-9.632651,0.463522,-8.433326,-9.166837,3.337076,6.297356,1.183863,7.040727,-0.748399,-4.727907,1.571110,2.195138,4.461755,2.342879,-7.173497,6.894868,8.427693,2.889492,-6.004249,-0.881259,2.112959,2.853632,-1.856322,7.804072,-9.898031,4.394712,-3.560640,9.112046,9.241887,6.912176,-9.862821,4.676192,0.499489,4.233351,-9.879606,-7.043285,8.311262,-8.442266,-8.977301,-0.040343,-6.591865,2.001536,4.466325,-8.741695,5.340397,-5.850601,-5.293934,6.823483,-4.743395,-4.071724,-2.146865,-3.593138,-6.506536,-7.992933,-5.179500,5.783435,-7.315661,-0.264889,-8.675867,7.253563,-6.249224,3.803880,8.678024,-9.023504,5.106340,-1.348910,2.049321,-3.119675,-0.483664,3.023911,4.215494,3.802674,8.964023,3.555737,-0.042780,6.350668,-8.202254,-6.063126,0.216232,8.187841,3.582765,9.519511,4.241836,-6.643529,-0.376318,-6.326714,8.751416,5.200594,0.069104,-9.940983,1.914051,-5.700408,-2.961207,4.462953,-2.045124,-8.377953,1.498501,-6.790427,5.689050,-6.949309,-6.041155,-6.066331,-5.135526,-1.975414,-1.433175,3.144987,-0.835701,-6.024161,-8.107649,2.846503,-4.006693,-8.782555,1.827813,-9.470376,-3.598300,-1.913006,-9.629075,-0.312638,-0.700555,-3.052864,4.469833,6.958479,-3.045920,-1.465361,8.526398,3.373056,7.431357,4.293169,-4.633753,-9.267938,-0.323226,-9.145892,4.475556,6.463539,4.579228,-2.436997,-6.592403,9.924255,3.664347,3.904459,7.394584,1.681664,5.559089,1.324077,-1.412440,-1.647773,-1.888968,1.165669,4.402973,2.890609,8.285733,0.896698,9.386966,-1.828071,-5.495010,-2.266030,-8.282738,-0.565926,-6.608058,5.162750,4.036963,-7.722085,-7.937652,0.048382,-9.829849,6.707588,9.079981], dtype = "float64")#candidate|6074|(525,)|const|float64
bop_6075 = relay.logical_and(call_6056.astype('bool'), relay.reshape(const_6074.astype('bool'), relay.shape_of(call_6056))) # shape=(525,)
bop_6078 = relay.logical_and(call_6057.astype('bool'), relay.reshape(const_6074.astype('bool'), relay.shape_of(call_6057))) # shape=(525,)
func_4373_call = mod.get_global_var('func_4373')
func_4375_call = mutated_mod.get_global_var('func_4375')
call_6079 = func_4373_call()
call_6080 = func_4373_call()
output = relay.Tuple([call_6058,var_6059,var_6060,call_6068,bop_6075,call_6079,])
output2 = relay.Tuple([call_6061,var_6059,var_6060,call_6069,bop_6078,call_6080,])
func_6092 = relay.Function([var_6059,var_6060,], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mutated_mod.get_global_var('func_6092')
var_6094 = relay.var("var_6094", dtype = "float64", shape = (27,))#candidate|6094|(27,)|var|float64
var_6095 = relay.var("var_6095", dtype = "int64", shape = (720,))#candidate|6095|(720,)|var|int64
call_6093 = func_6092_call(var_6094,var_6095,)
output = call_6093
func_6096 = relay.Function([var_6094,var_6095,], output)
mutated_mod['func_6096'] = func_6096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5200_call = mod.get_global_var('func_5200')
func_5202_call = mutated_mod.get_global_var('func_5202')
call_6145 = relay.TupleGetItem(func_5200_call(), 0)
call_6146 = relay.TupleGetItem(func_5202_call(), 0)
var_6159 = relay.var("var_6159", dtype = "float32", shape = (3, 2, 10))#candidate|6159|(3, 2, 10)|var|float32
bop_6160 = relay.floor_mod(call_6145.astype('float32'), relay.reshape(var_6159.astype('float32'), relay.shape_of(call_6145))) # shape=(3, 2, 10)
bop_6163 = relay.floor_mod(call_6146.astype('float32'), relay.reshape(var_6159.astype('float32'), relay.shape_of(call_6146))) # shape=(3, 2, 10)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
var_6166 = relay.var("var_6166", dtype = "int64", shape = (4, 180))#candidate|6166|(4, 180)|var|int64
call_6165 = relay.TupleGetItem(func_1412_call(relay.reshape(var_6166.astype('int64'), [4, 15, 12])), 0)
call_6167 = relay.TupleGetItem(func_1414_call(relay.reshape(var_6166.astype('int64'), [4, 15, 12])), 0)
func_5334_call = mod.get_global_var('func_5334')
func_5336_call = mutated_mod.get_global_var('func_5336')
call_6168 = relay.TupleGetItem(func_5334_call(), 5)
call_6169 = relay.TupleGetItem(func_5336_call(), 5)
uop_6184 = relay.atanh(call_6165.astype('float32')) # shape=(4, 15, 12)
uop_6186 = relay.atanh(call_6167.astype('float32')) # shape=(4, 15, 12)
output = relay.Tuple([bop_6160,var_6166,call_6168,uop_6184,])
output2 = relay.Tuple([bop_6163,var_6166,call_6169,uop_6186,])
func_6191 = relay.Function([var_6159,var_6166,], output)
mod['func_6191'] = func_6191
mod = relay.transform.InferType()(mod)
mutated_mod['func_6191'] = func_6191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6191_call = mutated_mod.get_global_var('func_6191')
var_6193 = relay.var("var_6193", dtype = "float32", shape = (3, 2, 10))#candidate|6193|(3, 2, 10)|var|float32
var_6194 = relay.var("var_6194", dtype = "int64", shape = (4, 180))#candidate|6194|(4, 180)|var|int64
call_6192 = func_6191_call(var_6193,var_6194,)
output = call_6192
func_6195 = relay.Function([var_6193,var_6194,], output)
mutated_mod['func_6195'] = func_6195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6290 = relay.var("var_6290", dtype = "float32", shape = (8, 1, 6))#candidate|6290|(8, 1, 6)|var|float32
uop_6291 = relay.rsqrt(var_6290.astype('float32')) # shape=(8, 1, 6)
output = relay.Tuple([uop_6291,])
output2 = relay.Tuple([uop_6291,])
func_6293 = relay.Function([var_6290,], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
var_6294 = relay.var("var_6294", dtype = "float32", shape = (8, 1, 6))#candidate|6294|(8, 1, 6)|var|float32
output = func_6293(var_6294)
func_6295 = relay.Function([var_6294], output)
mutated_mod['func_6295'] = func_6295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_6348 = relay.TupleGetItem(func_3750_call(), 0)
call_6349 = relay.TupleGetItem(func_3751_call(), 0)
uop_6392 = relay.asin(call_6348.astype('float32')) # shape=(525,)
uop_6394 = relay.asin(call_6349.astype('float32')) # shape=(525,)
output = relay.Tuple([uop_6392,])
output2 = relay.Tuple([uop_6394,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

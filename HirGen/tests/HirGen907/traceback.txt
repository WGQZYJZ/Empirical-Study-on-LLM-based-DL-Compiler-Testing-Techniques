==========mod==========
#[version = "0.0.5"]
def @func_18674() -> (Tensor[(16, 15, 11), float64],) {
  %0 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11510(%var_11491: uint32, %var_11492: Tensor[(168), uint32], %var_11500: Tensor[(360), float32]) -> (Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 5), float64] */;
  %3 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 14, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 5), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %6 = cast(%var_11491, dtype="uint32") /* ty=uint32 */;
  %7 = cast(%var_11492, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %8 = reshape(%6, newshape=[]) /* ty=uint32 */;
  %9 = reshape(%7, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %10 = @func_9313(%8, %9) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %12 = cast(%var_11500, dtype="float32") /* ty=Tensor[(360), float32] */;
  %13 = reshape(%11, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %14 = reshape(%12, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %15 = @func_8161(%13, %14) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %16 = mod(%4, %5) /* ty=Tensor[(6, 14, 5), float64] */;
  %17 = %10.2;
  %18 = %15.2;
  (%16, %17, %var_11491, %var_11492, %18, meta[relay.Constant][2] /* ty=Tensor[(140), uint8] */, %var_11500)
}

def @func_17056(%var_17050: Tensor[(54), int64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(182), int64], Tensor[(8, 15, 3), float32], Tensor[(54), int64]) {
  %19 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %20 = @func_16379() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) */;
  %21 = cast(%var_17050, dtype="int64") /* ty=Tensor[(54), int64] */;
  %22 = cast(%var_17050, dtype="int64") /* ty=Tensor[(54), int64] */;
  %23 = reshape(%21, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %24 = reshape(%22, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %25 = @func_637(%23, %24) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) */;
  %26 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %27 = %19.0;
  %28 = %20.3;
  %29 = %25.1;
  (%26, %27, %28, %29, %var_17050)
}

def @main(%var_21097: Tensor[(5, 6, 14), float64]) -> Tensor[(5, 6, 14), float64] {
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %31 = shape_of(%var_21097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%var_21097, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%32, %33) /* ty=Tensor[(5, 6, 14), float64] */
}

def @func_14137(%var_14103: Tensor[(312, 2), uint32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) {
  %34 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %36 = cast(%var_14103, dtype="uint32") /* ty=Tensor[(312, 2), uint32] */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %38 = reshape(%36, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %39 = reshape(%37, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %40 = @func_11959(%38, %39) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
  %41 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
  %42 = log2(%35) /* ty=Tensor[(16, 15, 11), float32] */;
  %43 = %40.1;
  (%41, %42, %43, %var_14103, meta[relay.Constant][4] /* ty=Tensor[(112), float32] */)
}

def @func_16060(%var_16029: uint32, %var_16030: Tensor[(168), uint32], %var_16050: Tensor[(150, 14), float32], %var_16051: Tensor[(2640), float64], %var_16052: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 12, 7), uint32], uint32, Tensor[(168), uint32], Tensor[(13, 2, 7), int64], Tensor[(182), int64], Tensor[(112), float32], Tensor[(150, 14), float32], Tensor[(2640), float64], Tensor[(360), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
  %44 = cast(%var_16029, dtype="uint32") /* ty=uint32 */;
  %45 = cast(%var_16030, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %46 = reshape(%44, newshape=[]) /* ty=uint32 */;
  %47 = reshape(%45, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %48 = @func_9313(%46, %47) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %50 = cast(meta[relay.Constant][5] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %51 = reshape(%49, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %52 = reshape(%50, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %53 = @func_7089(%51, %52) /* ty=(Tensor[(13, 2, 7), int64],) */;
  %54 = cast(%var_16050, dtype="float32") /* ty=Tensor[(150, 14), float32] */;
  %55 = cast(%var_16051, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %56 = cast(%var_16052, dtype="float32") /* ty=Tensor[(360), float32] */;
  %57 = cast(meta[relay.Constant][6] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %58 = cast(meta[relay.Constant][7] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %59 = reshape(%54, newshape=[2100]) /* ty=Tensor[(2100), float32] */;
  %60 = reshape(%55, newshape=[16, 15, 11]) /* ty=Tensor[(16, 15, 11), float64] */;
  %61 = reshape(%56, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %62 = reshape(%57, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %63 = reshape(%58, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %64 = @func_14602(%59, %60, %61, %62, %63) /* ty=(Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) */;
  %65 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  %66 = %48.0;
  %67 = %53.0;
  %68 = %64.7;
  (%65, %66, %var_16029, %var_16030, %67, meta[relay.Constant][5] /* ty=Tensor[(182), int64] */, %68, %var_16050, %var_16051, %var_16052, meta[relay.Constant][6] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][7] /* ty=Tensor[(112), float32] */)
}

def @func_12254() -> (Tensor[(16, 15, 11), float64],) {
  %69 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %70 = %69.0;
  (%70,)
}

def @func_12829() -> Tensor[(3, 8, 5), float64] {
  %71 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 5), float64] */;
  erf(%71) /* ty=Tensor[(3, 8, 5), float64] */
}

def @func_12579() -> Tensor[(4, 16, 3), float64] {
  %72 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %72.0
}

def @func_19534() -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64]) {
  %73 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %74 = %73.0;
  %75 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%74, %75)
}

def @func_20191() -> Tensor[(192, 1), float64] {
  %76 = @func_18455() /* ty=(Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) */;
  %76.0
}

def @func_11653(%var_11645: uint32, %var_11646: Tensor[(168), uint32], %var_11647: Tensor[(360), float32]) -> (Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) {
  %77 = cast(%var_11645, dtype="uint32") /* ty=uint32 */;
  %78 = cast(%var_11646, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %79 = cast(%var_11647, dtype="float32") /* ty=Tensor[(360), float32] */;
  %80 = reshape(%77, newshape=[]) /* ty=uint32 */;
  %81 = reshape(%78, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %82 = reshape(%79, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %83 = @func_11510(%80, %81, %82) /* ty=(Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %84 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %85 = %84.2;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %87 = %83.5;
  %88 = exp(%86) /* ty=Tensor[(192, 1), float32] */;
  (%87, %var_11645, %var_11646, %var_11647, %88)
}

def @func_16743(%var_16722: Tensor[(420), bool]) -> (Tensor[(30), bool], Tensor[(5, 6, 14), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
  %89 = @func_13864() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) */;
  %90 = %89.2;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(30), bool] */;
  %92 = cast(%var_16722, dtype="bool") /* ty=Tensor[(420), bool] */;
  %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %94 = reshape(%91, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), bool] */;
  %95 = reshape(%92, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), bool] */;
  %96 = reshape(%93, newshape=[12, 84]) /* ty=Tensor[(12, 84), bool] */;
  %97 = @func_13377(%94, %95, %96) /* ty=(Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) */;
  %98 = %97.0;
  (%90, %98, %var_16722, meta[relay.Constant][9] /* ty=Tensor[(1008), bool] */)
}

def @func_14924() -> (Tensor[(16, 15, 11), float64], Tensor[(192), float64]) {
  %99 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %100 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %101 = %99.0;
  %102 = %100.2;
  (%101, %102)
}

def @func_12093() -> Tensor[(4, 16, 3), float64] {
  %103 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %103.1
}

def @func_7496(%var_7480: Tensor[(5, 7, 6), uint64], %var_7481: Tensor[(5, 7, 6), uint64], %var_7488: Tensor[(1008), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) {
  %104 = cast(%var_7481, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %105 = shape_of(%var_7480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_7480, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = cast(meta[relay.Constant][10] /* ty=Tensor[(1183, 1), float64] */, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %109 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %110 = cast(%var_7488, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %111 = reshape(%108, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %112 = reshape(%109, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %113 = reshape(%110, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %114 = @func_5759(%111, %112, %113) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %115 = greater(%106, %107) /* ty=Tensor[(5, 7, 6), bool] */;
  %116 = %114.3;
  (%115, %116, meta[relay.Constant][10] /* ty=Tensor[(1183, 1), float64] */, meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, %var_7488)
}

def @func_15991() -> (Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) {
  %117 = cast(meta[relay.Constant][12] /* ty=Tensor[(42, 6), float32] */, dtype="float32") /* ty=Tensor[(42, 6), float32] */;
  %118 = reshape(%117, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), float32] */;
  %119 = @func_13244(%118) /* ty=(Tensor[(2, 9, 14), float32],) */;
  %120 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %121 = %119.0;
  (%120, %121, meta[relay.Constant][12] /* ty=Tensor[(42, 6), float32] */)
}

def @func_13244(%var_13239: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float32],) {
  %122 = cast(%var_13239, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
  %123 = sigmoid(%122) /* ty=Tensor[(2, 9, 14), float32] */;
  (%123,)
}

def @func_17721(%var_17716: Tensor[(192, 6), float64]) -> Tensor[(192, 6), float32] {
  %124 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
  %125 = %124.1;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %127 = cast(%var_17716, dtype="float32") /* ty=Tensor[(192, 6), float32] */;
  floor_mod(%126, %127) /* ty=Tensor[(192, 6), float32] */
}

def @func_19839(%var_19820: Tensor[(16), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16), bool]) {
  %128 = @func_16964() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %129 = cast(%var_19820, dtype="bool") /* ty=Tensor[(16), bool] */;
  %130 = reshape(%129, newshape=[16]) /* ty=Tensor[(16), bool] */;
  %131 = @func_17271(%130) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) */;
  %132 = %128.0;
  %133 = %131.0;
  (%132, %133, %var_19820)
}

def @func_13816() -> (Tensor[(4, 16, 3), float64],) {
  %134 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%134,)
}

def @func_5783(%var_5772: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
  %135 = cast(%var_5772, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  acosh(%135) /* ty=Tensor[(9, 2, 9), float64] */
}

def @func_16208() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %136 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %137 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %138 = %136.0;
  (%137, %138)
}

def @func_14045() -> (Tensor[(4, 16, 3), float64],) {
  %139 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%139,)
}

def @func_15455(%var_15407: Tensor[(4, 16, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), int32], Tensor[(54), int64], Tensor[(624), uint32], Tensor[(112), float32], Tensor[(2, 2, 4), float64], Tensor[(16), bool]) {
  %140 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %141 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %142 = %141.0;
  %143 = cast(%var_15407, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %147 = cast(meta[relay.Constant][13] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %148 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %149 = reshape(%147, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %150 = reshape(%148, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %151 = @func_11959(%149, %150) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
  %152 = cast(meta[relay.Constant][15] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
  %153 = reshape(%152, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), bool] */;
  %154 = @func_14796(%153) /* ty=(Tensor[(2, 2, 4), float64],) */;
  %155 = %140.0;
  %156 = logical_xor(%145, %146) /* ty=Tensor[(4, 16, 3), int32] */;
  %157 = %151.2;
  %158 = %154.0;
  (%155, %156, %157, meta[relay.Constant][13] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, %158, meta[relay.Constant][15] /* ty=Tensor[(16), bool] */)
}

def @func_11186(%var_11181: Tensor[(6, 60), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(8, 15, 3), float32], Tensor[(6, 60), float32]) {
  %159 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %160 = cast(%var_11181, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %161 = cast(%var_11181, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %162 = reshape(%160, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %163 = reshape(%161, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %164 = %159.0;
  %165 = @func_583(%162, %163) /* ty=Tensor[(8, 15, 3), float32] */;
  (%164, %165, %var_11181)
}

def @func_17403(%var_17383: Tensor[(1, 60), int32], %var_17384: Tensor[(780), int32]) -> (Tensor[(16, 15, 11), float64], Tensor[(13, 10, 6), uint64], Tensor[(1, 60), int32], Tensor[(780), int32], Tensor[(1, 1008), bool]) {
  %166 = cast(%var_17383, dtype="int32") /* ty=Tensor[(1, 60), int32] */;
  %167 = cast(%var_17384, dtype="int32") /* ty=Tensor[(780), int32] */;
  %168 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 1008), bool] */, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
  %169 = reshape(%166, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
  %170 = reshape(%167, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
  %171 = reshape(%168, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %172 = @func_8877(%169, %170, %171) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
  %173 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %174 = %172.0;
  (%173, %174, %var_17383, %var_17384, meta[relay.Constant][16] /* ty=Tensor[(1, 1008), bool] */)
}

def @func_17637() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  %175 = @func_16964() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %176 = @func_15618() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %177 = @func_13710() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) */;
  %178 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %179 = %175.1;
  %180 = %176.0;
  %181 = %177.0;
  %182 = %178.0;
  (%179, %180, %181, %182)
}

def @func_13046(%var_13043: Tensor[(360), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %183 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %186 = cast(meta[relay.Constant][17] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %187 = cast(%var_13043, dtype="float32") /* ty=Tensor[(360), float32] */;
  %188 = reshape(%186, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %189 = reshape(%187, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %190 = @func_8161(%188, %189) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %191 = exp(%185) /* ty=Tensor[(16, 15, 11), float32] */;
  %192 = %190.2;
  (%191, %192, meta[relay.Constant][17] /* ty=Tensor[(140), uint8] */, %var_13043)
}

def @func_13418(%var_13412: Tensor[(35), float64]) -> (Tensor[(1, 3, 13), float32], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64]) {
  %193 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
  %194 = cast(-4.9432f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %195 = cast(%var_13412, dtype="float64") /* ty=Tensor[(35), float64] */;
  %196 = reshape(%194, newshape=[]) /* ty=float64 */;
  %197 = reshape(%195, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %198 = %193.2;
  %199 = @func_8056(%196, %197) /* ty=Tensor[(7, 5, ?), int32] */;
  (%198, %199, -4.9432f64 /* ty=float64 */, %var_13412)
}

def @func_13710() -> (Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) {
  %200 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %201 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %202 = cast(meta[relay.Constant][19] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %203 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %204 = reshape(%201, newshape=[]) /* ty=uint32 */;
  %205 = reshape(%202, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %206 = reshape(%203, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %207 = @func_11653(%204, %205, %206) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
  %208 = %200.1;
  %209 = %207.4;
  (%208, %209, meta[relay.Constant][18] /* ty=uint32 */, meta[relay.Constant][19] /* ty=Tensor[(168), uint32] */, meta[relay.Constant][20] /* ty=Tensor[(360), float32] */)
}

def @func_18226() -> (Tensor[(16, 15, 11), float64],) {
  %210 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
  (%210,)
}

def @func_17218() -> Tensor[(16, 15, 11), float64] {
  %211 = @func_16208() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */;
  %211.0
}

def @func_18232() -> (Tensor[(16, 15, 11), float64],) {
  %212 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %213 = %212.0;
  (%213,)
}

def @func_18259() -> Tensor[(16, 15, 11), float64] {
  @func_14685() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_11959(%var_11829: Tensor[(624), uint32], %var_11924: Tensor[(112), float32]) -> (Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) {
  %214 = cast(%var_11829, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %215 = cast(%var_11829, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %216 = cast(meta[relay.Constant][21] /* ty=Tensor[(54), int64] */, dtype="int64") /* ty=Tensor[(54), int64] */;
  %217 = reshape(%214, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %218 = reshape(%215, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %219 = reshape(%216, newshape=[9, 6]) /* ty=Tensor[(9, 6), int64] */;
  %220 = @func_8382(%217, %218, %219) /* ty=(Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) */;
  %221 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %222 = %221.1;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %224 = log(%223) /* ty=Tensor[(4, 16, 3), float64] */;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %226 = cast(%var_11924, dtype="float32") /* ty=Tensor[(112), float32] */;
  %227 = reshape(%226, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %228 = @func_10611(%227) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %229 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2100), float32] */, dtype="float32") /* ty=Tensor[(1, 2100), float32] */;
  %230 = reshape(%229, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float32] */;
  %231 = %220.2;
  %232 = cos(%225) /* ty=Tensor[(4, 16, 3), float64] */;
  %233 = %228.0;
  %234 = @func_3339(%230) /* ty=Tensor[(14, 10, 15), float32] */;
  (%231, %var_11829, meta[relay.Constant][21] /* ty=Tensor[(54), int64] */, %232, %233, %var_11924, %234, meta[relay.Constant][22] /* ty=Tensor[(1, 2100), float32] */)
}

def @func_19698(%var_19688: int8, %var_19689: Tensor[(1, 13, 2), int8]) -> Tensor[(1, 13, 2), bool] {
  %235 = cast(%var_19688, dtype="bool") /* ty=bool */;
  %236 = cast(%var_19689, dtype="bool") /* ty=Tensor[(1, 13, 2), bool] */;
  greater(%235, %236) /* ty=Tensor[(1, 13, 2), bool] */
}

def @func_19936() -> Tensor[(16, 15, 11), float64] {
  @func_13740() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_19108(%var_19056: Tensor[(16, 15, 11), float64]) -> (Tensor[(16, 15, 11), uint64], Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float64]) {
  %237 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %238 = %237.0;
  %239 = cast(%var_19056, dtype="uint64") /* ty=Tensor[(16, 15, 11), uint64] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="uint64") /* ty=Tensor[(16, 15, 11), uint64] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %243 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %244 = @func_18226() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %245 = multiply(%241, %242) /* ty=Tensor[(16, 15, 11), uint64] */;
  %246 = %243.0;
  %247 = %244.0;
  (%245, %246, %247)
}

def @func_12216(%var_12199: Tensor[(78, 2), float64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) {
  %248 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %249 = cast(%var_12199, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %250 = cast(%var_12199, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %251 = reshape(%249, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %252 = reshape(%250, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %253 = @func_9796(%251, %252) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %254 = %248.1;
  %255 = %253.1;
  (%254, %255, %var_12199)
}

def @func_18602(%var_18583: Tensor[(1008), bool]) -> (Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(16, 15, 11), float32]) {
  %256 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %257 = cast(%var_18583, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %258 = reshape(%256, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
  %259 = reshape(%257, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %260 = @func_938(%258, %259) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %261 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %263 = %260.1;
  %264 = acos(%262) /* ty=Tensor[(16, 15, 11), float32] */;
  (%263, meta[relay.Constant][23] /* ty=Tensor[(240), float32] */, %var_18583, %264)
}

def @func_12881() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %265 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  %266 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
  (%265, %266)
}

def @func_18729() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %267 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %268 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %269 = %267.0;
  (%268, %269)
}

def @func_20325() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
  %270 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %271 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %272 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %273 = %270.0;
  %274 = %271.4;
  %275 = %272.0;
  (%273, %274, %275)
}

def @func_14602(%var_14530: Tensor[(2100), float32], %var_14546: Tensor[(16, 15, 11), float64], %var_14566: Tensor[(360), float32], %var_14586: Tensor[(624), uint32], %var_14587: Tensor[(112), float32]) -> (Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
  %276 = cast(%var_14530, dtype="float32") /* ty=Tensor[(2100), float32] */;
  %277 = reshape(%276, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float32] */;
  %278 = @func_3339(%277) /* ty=Tensor[(14, 10, 15), float32] */;
  %279 = cast(%var_14530, dtype="int32") /* ty=Tensor[(2100), int32] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%278, dtype="int32") /* ty=Tensor[(14, 10, 15), int32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %283 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %284 = cast(%var_14546, dtype="int64") /* ty=Tensor[(16, 15, 11), int64] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="int64") /* ty=Tensor[(16, 15, 11), int64] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %288 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %289 = cast(%var_14566, dtype="float32") /* ty=Tensor[(360), float32] */;
  %290 = reshape(%288, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %291 = reshape(%289, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %292 = @func_8161(%290, %291) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %293 = cast(%var_14586, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %294 = cast(%var_14587, dtype="float32") /* ty=Tensor[(112), float32] */;
  %295 = reshape(%293, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %296 = reshape(%294, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %297 = @func_11959(%295, %296) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
  %298 = logical_xor(%281, %282) /* ty=Tensor[(14, 10, 15), int32] */;
  %299 = minimum(%286, %287) /* ty=Tensor[(16, 15, 11), int64] */;
  %300 = %292.0;
  %301 = %297.5;
  (%298, %299, %300, meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, %var_14566, %301, %var_14586, %var_14587)
}

def @func_10611(%var_10595: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
  %302 = cast(%var_10595, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
  %303 = atanh(%302) /* ty=Tensor[(2, 7, 8), float32] */;
  (%303,)
}

def @func_9639(%var_9619: Tensor[(4, 16, 3), float64]) -> (Tensor[(4, 16, 3), float64],) {
  %304 = cast(%var_9619, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %305 = asinh(%304) /* ty=Tensor[(4, 16, 3), float64] */;
  (%305,)
}

def @func_18510() -> (Tensor[(16, 15, 11), float32], Tensor[(3, 8, 5), float64], Tensor[(624), uint32]) {
  %306 = cast(meta[relay.Constant][25] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %307 = reshape(%306, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %308 = @func_15843(%307) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) */;
  %309 = @func_15947() /* ty=Tensor[(16, 15, 11), float32] */;
  %310 = %308.0;
  (%309, %310, meta[relay.Constant][25] /* ty=Tensor[(624), uint32] */)
}

def @func_3339(%var_3331: Tensor[(14, 10, 15), float32]) -> Tensor[(14, 10, 15), float32] {
  %311 = cast(%var_3331, dtype="float32") /* ty=Tensor[(14, 10, 15), float32] */;
  acosh(%311) /* ty=Tensor[(14, 10, 15), float32] */
}

def @func_13740() -> Tensor[(16, 15, 11), float64] {
  %312 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %312.0
}

def @func_13864() -> (Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
  %313 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %314 = cast(meta[relay.Constant][26] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %315 = cast(meta[relay.Constant][27] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %316 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %317 = reshape(%314, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), bool] */;
  %318 = reshape(%315, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), bool] */;
  %319 = reshape(%316, newshape=[12, 84]) /* ty=Tensor[(12, 84), bool] */;
  %320 = @func_13377(%317, %318, %319) /* ty=(Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) */;
  %321 = %313.0;
  %322 = %320.1;
  (%321, %322, meta[relay.Constant][26] /* ty=Tensor[(30), bool] */, meta[relay.Constant][27] /* ty=Tensor[(420), bool] */, meta[relay.Constant][28] /* ty=Tensor[(1008), bool] */)
}

def @func_13578(%var_13555: Tensor[(8, 78), uint32], %var_13560: Tensor[(168), uint32]) -> (Tensor[(4, 16, 3), float32], Tensor[(14, 10, 15), float32], Tensor[(8, 78), uint32], Tensor[(112, 1), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
  %323 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %324 = %323.0;
  %325 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 16, 3), float64] */, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %329 = cast(%var_13555, dtype="uint32") /* ty=Tensor[(8, 78), uint32] */;
  %330 = cast(meta[relay.Constant][30] /* ty=Tensor[(112, 1), float32] */, dtype="float32") /* ty=Tensor[(112, 1), float32] */;
  %331 = reshape(%329, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %332 = reshape(%330, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %333 = @func_11959(%331, %332) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
  %334 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %335 = cast(%var_13560, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %336 = reshape(%334, newshape=[]) /* ty=uint32 */;
  %337 = reshape(%335, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %338 = @func_9313(%336, %337) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %339 = power(%327, %328) /* ty=Tensor[(4, 16, 3), float32] */;
  %340 = %333.6;
  %341 = %338.1;
  (%339, %340, %var_13555, meta[relay.Constant][30] /* ty=Tensor[(112, 1), float32] */, %341, meta[relay.Constant][31] /* ty=uint32 */, %var_13560)
}

def @func_12787() -> (Tensor[(192, 1), float64],) {
  %342 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %343 = %342.2;
  (%343,)
}

def @func_14290(%var_14284: Tensor[(195, 9), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) {
  %344 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %345 = cast(%var_14284, dtype="uint64") /* ty=Tensor[(195, 9), uint64] */;
  %346 = cast(%var_14284, dtype="uint64") /* ty=Tensor[(195, 9), uint64] */;
  %347 = reshape(%345, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %348 = reshape(%346, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %349 = %344.0;
  %350 = @func_8035(%347, %348) /* ty=Tensor[(13, 15, 9), uint64] */;
  (%349, %350, %var_14284)
}

def @func_10015(%var_9998: Tensor[(13, 2, 16), float32]) -> (Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
  %351 = cast(%var_9998, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %352 = cast(meta[relay.Constant][32] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %353 = cast(meta[relay.Constant][32] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %354 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %355 = reshape(%352, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %356 = reshape(%353, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %357 = reshape(%354, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %358 = @func_6561(%355, %356, %357) /* ty=(Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %359 = sigmoid(%351) /* ty=Tensor[(13, 2, 16), float32] */;
  %360 = %358.2;
  (%359, %360, meta[relay.Constant][32] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][33] /* ty=Tensor[(360), float32] */)
}

def @func_20642() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(14, 144), float64], Tensor[(360), float32]) {
  %361 = @func_20496() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %362 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 144), float64] */, dtype="float64") /* ty=Tensor[(14, 144), float64] */;
  %363 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %364 = reshape(%362, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
  %365 = reshape(%363, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %366 = @func_16502(%364, %365) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) */;
  %367 = @func_13643() /* ty=Tensor[(16, 15, 11), float64] */;
  %368 = %361.0;
  %369 = %366.5;
  (%367, %368, %369, meta[relay.Constant][34] /* ty=Tensor[(14, 144), float64] */, meta[relay.Constant][35] /* ty=Tensor[(360), float32] */)
}

def @func_15125(%var_15039: Tensor[(16, 15, 11), float64], %var_15059: Tensor[(210, 1), uint64], %var_15060: Tensor[(1, 1008), bool]) -> (Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) {
  %370 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %371 = cast(%var_15039, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %375 = cast(%var_15059, dtype="uint64") /* ty=Tensor[(210, 1), uint64] */;
  %376 = cast(%var_15059, dtype="uint64") /* ty=Tensor[(210, 1), uint64] */;
  %377 = cast(%var_15060, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
  %378 = reshape(%375, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %379 = reshape(%376, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %380 = reshape(%377, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %381 = @func_7496(%378, %379, %380) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
  %382 = @func_14632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %385 = asin(%384) /* ty=Tensor[(4, 16, 3), float32] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %387 = less(%373, %374) /* ty=Tensor[(16, 15, 11), bool] */;
  %388 = %381.3;
  %389 = sin(%386) /* ty=Tensor[(4, 16, 3), float32] */;
  (%387, %388, %var_15059, %var_15060, %389)
}

def @func_11708() -> (Tensor[(4, 16, 3), float64],) {
  %390 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %391 = %390.1;
  (%391,)
}

def @func_5759(%var_5733: Tensor[(13, 7, 13), float64], %var_5737: Tensor[(240), float32], %var_5738: Tensor[(1008), bool]) -> (Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
  %392 = cast(%var_5733, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
  %393 = cast(%var_5737, dtype="float32") /* ty=Tensor[(240), float32] */;
  %394 = cast(%var_5738, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %395 = reshape(%393, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
  %396 = reshape(%394, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %397 = @func_938(%395, %396) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %398 = cast(%var_5737, dtype="float32") /* ty=Tensor[(240), float32] */;
  %399 = cast(%var_5738, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %400 = reshape(%398, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
  %401 = reshape(%399, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %402 = @func_938(%400, %401) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %403 = asin(%392) /* ty=Tensor[(13, 7, 13), float64] */;
  %404 = %397.3;
  %405 = %402.3;
  (%403, %404, %var_5737, %var_5738, %405)
}

def @func_17355(%var_17331: Tensor[(1, 5, 7), float64], %var_17332: Tensor[(8, 5, 7), float64], %var_17347: uint32) -> (Tensor[(8, 5, 7), bool], Tensor[(4, 16, 3), float64], Tensor[(1, 546), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
  %406 = cast(%var_17331, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
  %407 = cast(%var_17332, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %408 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 546), float32] */, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %409 = reshape(%408, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %410 = @func_16640(%409) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) */;
  %411 = cast(%var_17347, dtype="uint32") /* ty=uint32 */;
  %412 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %413 = reshape(%411, newshape=[]) /* ty=uint32 */;
  %414 = reshape(%412, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %415 = @func_9313(%413, %414) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %416 = greater_equal(%406, %407) /* ty=Tensor[(8, 5, 7), bool] */;
  %417 = %410.1;
  %418 = %415.1;
  (%416, %417, meta[relay.Constant][36] /* ty=Tensor[(1, 546), float32] */, %418, %var_17347, meta[relay.Constant][37] /* ty=Tensor[(168), uint32] */)
}

def @func_11725() -> Tensor[(4, 16, 3), float64] {
  %419 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %419.0
}

def @func_7555(%var_7515: Tensor[(1008), bool], %var_7526: Tensor[(182), int64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) {
  %420 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
  %421 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
  %422 = cast(meta[relay.Constant][39] /* ty=Tensor[(1183, 1), float64] */, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %423 = cast(meta[relay.Constant][40] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %424 = cast(%var_7515, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %425 = reshape(%422, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %426 = reshape(%423, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %427 = reshape(%424, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %428 = @func_5759(%425, %426, %427) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %429 = cast(%var_7526, dtype="int64") /* ty=Tensor[(182), int64] */;
  %430 = cast(%var_7526, dtype="int64") /* ty=Tensor[(182), int64] */;
  %431 = reshape(%429, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %432 = reshape(%430, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %433 = @func_7089(%431, %432) /* ty=(Tensor[(13, 2, 7), int64],) */;
  %434 = sigmoid(%420) /* ty=Tensor[(14, 3, 5), float64] */;
  %435 = asin(%421) /* ty=Tensor[(14, 3, 5), float64] */;
  %436 = %428.4;
  %437 = %433.0;
  (%434, %435, %436, meta[relay.Constant][39] /* ty=Tensor[(1183, 1), float64] */, meta[relay.Constant][40] /* ty=Tensor[(240), float32] */, %var_7515, %437, %var_7526)
}

def @func_18379() -> Tensor[(16, 15, 11), float64] {
  %438 = @func_14924() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(192), float64]) */;
  %438.0
}

def @func_8382(%var_8360: Tensor[(3, 13, 16), uint32], %var_8361: Tensor[(3, 13, 16), uint32], %var_8374: Tensor[(9, 6), int64]) -> (Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) {
  %439 = cast(%var_8361, dtype="uint32") /* ty=Tensor[(3, 13, 16), uint32] */;
  %440 = shape_of(%var_8360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_8360, dtype="uint32") /* ty=Tensor[(3, 13, 16), uint32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %443 = cast(meta[relay.Constant][41] /* ty=Tensor[(26, 7), int64] */, dtype="int64") /* ty=Tensor[(26, 7), int64] */;
  %444 = cast(meta[relay.Constant][41] /* ty=Tensor[(26, 7), int64] */, dtype="int64") /* ty=Tensor[(26, 7), int64] */;
  %445 = reshape(%443, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %446 = reshape(%444, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %447 = @func_7089(%445, %446) /* ty=(Tensor[(13, 2, 7), int64],) */;
  %448 = cast(%var_8374, dtype="int64") /* ty=Tensor[(9, 6), int64] */;
  %449 = cast(%var_8374, dtype="int64") /* ty=Tensor[(9, 6), int64] */;
  %450 = reshape(%448, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %451 = reshape(%449, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %452 = @func_637(%450, %451) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) */;
  %453 = right_shift(%441, %442) /* ty=Tensor[(3, 13, 16), uint32] */;
  %454 = %447.0;
  %455 = %452.0;
  (%453, %454, meta[relay.Constant][41] /* ty=Tensor[(26, 7), int64] */, %455, %var_8374)
}

def @func_14989() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) {
  %456 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %457 = @func_14490() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %458 = cast(meta[relay.Constant][42] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %459 = reshape(%458, newshape=[195, 9]) /* ty=Tensor[(195, 9), uint64] */;
  %460 = @func_14290(%459) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) */;
  %461 = %456.0;
  %462 = %457.0;
  %463 = %460.0;
  %464 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%461, %462, %463, meta[relay.Constant][42] /* ty=Tensor[(1755), uint64] */, %464)
}

def @func_11133() -> (Tensor[(16, 15, 11), float32],) {
  %465 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %466 = tan(%465) /* ty=Tensor[(16, 15, 11), float32] */;
  (%466,)
}

def @func_8161(%var_8158: Tensor[(140), uint8], %var_8159: Tensor[(180, 2), float32]) -> (Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) {
  %467 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %468 = cast(%var_8158, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %469 = cast(%var_8158, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %470 = cast(%var_8159, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %471 = reshape(%468, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %472 = reshape(%469, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %473 = reshape(%470, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %474 = @func_6561(%471, %472, %473) /* ty=(Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %475 = acosh(%467) /* ty=Tensor[(3, 14, 14), float64] */;
  %476 = %474.2;
  (%475, %476, %var_8158, %var_8159)
}

def @func_13632() -> (Tensor[(4, 16, 3), float64],) {
  %477 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%477,)
}

def @func_18164() -> Tensor[(2, 9, 14), float32] {
  %478 = @func_15991() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) */;
  %478.1
}

def @func_20487() -> Tensor[(192), float64] {
  %479 = @func_14924() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(192), float64]) */;
  %479.1
}

def @func_11477() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) {
  %480 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %481 = cast(meta[relay.Constant][45] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %482 = reshape(%481, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %483 = @func_9639(%482) /* ty=(Tensor[(4, 16, 3), float64],) */;
  %484 = %480.0;
  %485 = %483.0;
  (%484, %485, meta[relay.Constant][45] /* ty=Tensor[(192), float64] */)
}

def @func_18572() -> (Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float32]) {
  %486 = @func_18211() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %487 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %488 = %486.0;
  %489 = %487.0;
  (%488, %489)
}

def @func_20496() -> (Tensor[(16, 15, 11), float64],) {
  %490 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  (%490,)
}

def @func_16502(%var_16498: Tensor[(2016, 1), float64], %var_16499: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) {
  %491 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %492 = cast(meta[relay.Constant][46] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %493 = reshape(%492, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %494 = @func_12216(%493) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) */;
  %495 = cast(meta[relay.Constant][47] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %496 = reshape(%495, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %497 = @func_11244(%496) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) */;
  %498 = @func_16379() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) */;
  %499 = cast(%var_16498, dtype="float64") /* ty=Tensor[(2016, 1), float64] */;
  %500 = cast(%var_16499, dtype="float32") /* ty=Tensor[(360), float32] */;
  %501 = reshape(%499, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %502 = reshape(%500, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %503 = @func_12521(%501, %502) /* ty=(Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %504 = %491.1;
  %505 = %494.1;
  %506 = %497.7;
  %507 = %498.0;
  %508 = %503.1;
  (%504, %505, meta[relay.Constant][46] /* ty=Tensor[(156), float64] */, %506, meta[relay.Constant][47] /* ty=Tensor[(182), int64] */, %507, %508, %var_16498, %var_16499)
}

def @func_19925(%var_19901: Tensor[(6, 1, 4), float32]) -> (Tensor[(6, 1, 4), float64], Tensor[(6, 1, 4), float64]) {
  %509 = cast(%var_19901, dtype="float32") /* ty=Tensor[(6, 1, 4), float32] */;
  %510 = erf(%509) /* ty=Tensor[(6, 1, 4), float32] */;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(6, 1, 4), float64] */;
  %512 = cast(%510, dtype="float64") /* ty=Tensor[(6, 1, 4), float64] */;
  %513 = exp(%511) /* ty=Tensor[(6, 1, 4), float64] */;
  %514 = cosh(%512) /* ty=Tensor[(6, 1, 4), float64] */;
  (%513, %514)
}

def @func_19870(%var_19868: Tensor[(1344), int16]) -> (Tensor[(16, 15, 11), float32], Tensor[(12, 14, 8), bool], Tensor[(1344), int16]) {
  %515 = cast(%var_19868, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %516 = reshape(%515, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
  %517 = @func_15947() /* ty=Tensor[(16, 15, 11), float32] */;
  %518 = @func_16863(%516) /* ty=Tensor[(12, 14, 8), bool] */;
  (%517, %518, %var_19868)
}

def @func_16863(%var_16858: Tensor[(12, 14, 8), int16]) -> Tensor[(12, 14, 8), bool] {
  %519 = cast(%var_16858, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %520 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(12, 14, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 14, 8), int16] */, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%521, %522) /* ty=Tensor[(12, 14, 8), bool] */
}

def @func_9313(%var_9289: uint32, %var_9290: Tensor[(2, 12, 7), uint32]) -> (Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) {
  %523 = cast(%var_9289, dtype="uint32") /* ty=uint32 */;
  %524 = cast(%var_9290, dtype="uint32") /* ty=Tensor[(2, 12, 7), uint32] */;
  %525 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %526 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %527 = cast(meta[relay.Constant][50] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %528 = reshape(%525, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %529 = reshape(%526, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %530 = reshape(%527, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %531 = @func_7496(%528, %529, %530) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
  %532 = bitwise_xor(%523, %524) /* ty=Tensor[(2, 12, 7), uint32] */;
  %533 = %531.3;
  (%532, %533, meta[relay.Constant][49] /* ty=Tensor[(210), uint64] */, meta[relay.Constant][50] /* ty=Tensor[(1008), bool] */)
}

def @func_14490() -> (Tensor[(4, 16, 3), float64],) {
  %534 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %535 = %534.0;
  (%535,)
}

def @func_17271(%var_17244: Tensor[(16), bool]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) {
  %536 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %537 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %538 = cast(%var_17244, dtype="bool") /* ty=Tensor[(16), bool] */;
  %539 = reshape(%538, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), bool] */;
  %540 = @func_14796(%539) /* ty=(Tensor[(2, 2, 4), float64],) */;
  %541 = %540.0;
  %542 = cast(%541, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
  %543 = cast(meta[relay.Constant][51] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %544 = cast(meta[relay.Constant][51] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %545 = reshape(%543, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %546 = reshape(%544, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %547 = @func_9796(%545, %546) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %548 = %536.1;
  %549 = %537.0;
  %550 = asin(%542) /* ty=Tensor[(2, 2, 4), float32] */;
  %551 = %547.1;
  (%548, %549, %var_17244, %550, %551, meta[relay.Constant][51] /* ty=Tensor[(156), float64] */)
}

def @func_17568() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %552 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %553 = %552.0;
  %554 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
  (%553, %554)
}

def @func_13274(%var_13271: Tensor[(1, 168), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(7, 12, 2), float64], Tensor[(1, 168), float64]) {
  %555 = cast(%var_13271, dtype="float64") /* ty=Tensor[(1, 168), float64] */;
  %556 = reshape(%555, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), float64] */;
  %557 = @func_10389(%556) /* ty=(Tensor[(7, 12, 2), float64],) */;
  %558 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %559 = %557.0;
  (%558, %559, %var_13271)
}

def @func_20202(%var_20194: Tensor[(5, 14, 3), float32]) -> (Tensor[(5, 14, 3), float32],) {
  %560 = cast(%var_20194, dtype="float32") /* ty=Tensor[(5, 14, 3), float32] */;
  %561 = cos(%560) /* ty=Tensor[(5, 14, 3), float32] */;
  (%561,)
}

def @func_11305() -> (Tensor[(16, 15, 11), float64],) {
  %562 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  %565 = atanh(%564) /* ty=Tensor[(16, 15, 11), float64] */;
  (%565,)
}

def @func_12453() -> (Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) {
  %566 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %567 = cast(meta[relay.Constant][52] /* ty=Tensor[(39), float64] */, dtype="float64") /* ty=Tensor[(39), float64] */;
  %568 = reshape(%567, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %569 = @func_10729(%568) /* ty=Tensor[(1, 3, 13), float32] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(1, 3, 13), float64] */;
  %571 = reshape(%570, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %572 = cast(meta[relay.Constant][53] /* ty=Tensor[(39), float64] */, dtype="bool") /* ty=Tensor[(39), bool] */;
  %573 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(39), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %574 = cast(meta[relay.Constant][52] /* ty=Tensor[(39), float64] */, dtype="bool") /* ty=Tensor[(39), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?), bool] */;
  %576 = cast(meta[relay.Constant][54] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
  %577 = reshape(%576, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float32] */;
  %578 = @func_10015(%577) /* ty=(Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %579 = %566.1;
  %580 = @func_10729(%571) /* ty=Tensor[(1, 3, 13), float32] */;
  %581 = less(%574, %575) /* ty=Tensor[(39), bool] */;
  %582 = %578.1;
  %583 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
  (%579, %569, %580, %581, %582, meta[relay.Constant][54] /* ty=Tensor[(416), float32] */, %583)
}

def @func_14632() -> (Tensor[(4, 16, 3), float64],) {
  %584 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %585 = %584.0;
  (%585,)
}

def @func_14508() -> (Tensor[(4, 16, 3), float64],) {
  %586 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_14663(%var_14647: Tensor[(1, 546), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) {
  %588 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %589 = cast(%var_14647, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %590 = reshape(%589, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float32] */;
  %591 = %588.0;
  %592 = @func_6585(%590) /* ty=Tensor[(6, 7, 13), float32] */;
  %593 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
  (%591, %592, %var_14647, %593)
}

def @func_20273() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64], Tensor[(16, 15, 11), float64]) {
  %594 = @func_16179() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %595 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %596 = @func_16678() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) */;
  %597 = %594.0;
  %598 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  %599 = %595.0;
  %600 = %596.1;
  (%597, %598, %599, %600)
}

def @func_17794() -> (Tensor[(16, 15, 11), float64],) {
  %601 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %602 = %601.0;
  (%602,)
}

def @func_18908(%var_18770: float64, %var_18864: Tensor[(624), uint32]) -> (Tensor[(4, 16, 3), float64], float64, Tensor[(35), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(78, 2), float64], Tensor[(156), float64], Tensor[(1008), bool], Tensor[(1008), bool], Tensor[(3, 8, 5), float64], Tensor[(7, 5, 182), float64]) {
  %603 = @func_13710() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) */;
  %604 = @func_18729() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) */;
  %605 = cast(%var_18864, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %606 = reshape(%605, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %607 = @func_15843(%606) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) */;
  %608 = cast(meta[relay.Constant][56] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %609 = cast(meta[relay.Constant][57] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %610 = reshape(%608, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %611 = reshape(%609, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %612 = @func_8161(%610, %611) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %613 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %614 = reshape(%613, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %615 = @func_12216(%614) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) */;
  %616 = cast(meta[relay.Constant][59] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %617 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 182), int64] */, dtype="int64") /* ty=Tensor[(1, 182), int64] */;
  %618 = reshape(%616, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %619 = reshape(%617, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %620 = @func_7555(%618, %619) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
  %621 = cast(%var_18770, dtype="float64") /* ty=float64 */;
  %622 = cast(meta[relay.Constant][55] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %623 = reshape(%621, newshape=[]) /* ty=float64 */;
  %624 = reshape(%622, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %625 = @func_8056(%623, %624) /* ty=Tensor[(7, 5, ?), int32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(7, 5, ?), float32] */;
  %627 = asin(%626) /* ty=Tensor[(7, 5, ?), float32] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(7, 5, ?), float64] */;
  %629 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 182), int64] */, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %630 = %603.0;
  %631 = %604.0;
  %632 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %633 = %607.1;
  %634 = %612.2;
  %635 = %615.2;
  %636 = %620.5;
  %637 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  %638 = mod(%628, %629) /* ty=Tensor[(7, 5, 182), float64] */;
  (%630, %var_18770, meta[relay.Constant][55] /* ty=Tensor[(35), float64] */, %631, %632, %633, %var_18864, %634, meta[relay.Constant][56] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][57] /* ty=Tensor[(360), float32] */, %635, meta[relay.Constant][58] /* ty=Tensor[(156), float64] */, %636, meta[relay.Constant][59] /* ty=Tensor[(1008), bool] */, %637, %638)
}

def @func_17538() -> (Tensor[(4, 16, 3), float32], Tensor[(16, 15, 11), float64]) {
  %639 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %640 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %641 = %639.0;
  %642 = %640.0;
  (%641, %642)
}

def @func_12997(%var_12957: Tensor[(16, 7, 2), bool], %var_12972: Tensor[(16, 7, 2), bool]) -> (Tensor[(16, 7, 2), bool], Tensor[(16, 7, 2), uint32], Tensor[(3, 8, 5), float64]) {
  %643 = cast(%var_12957, dtype="bool") /* ty=Tensor[(16, 7, 2), bool] */;
  %644 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(16, 7, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 7, 2), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 2), bool] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %647 = cast(%var_12972, dtype="uint32") /* ty=Tensor[(16, 7, 2), uint32] */;
  %648 = shape_of(%var_12957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_12957, dtype="uint32") /* ty=Tensor[(16, 7, 2), uint32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %651 = logical_or(%645, %646) /* ty=Tensor[(16, 7, 2), bool] */;
  %652 = add(%649, %650) /* ty=Tensor[(16, 7, 2), uint32] */;
  %653 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  (%651, %652, %653)
}

def @func_11351(%var_11341: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) {
  %654 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %655 = cast(%var_11341, dtype="float32") /* ty=Tensor[(546), float32] */;
  %656 = reshape(%655, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float32] */;
  %657 = %654.0;
  %658 = @func_6585(%656) /* ty=Tensor[(6, 7, 13), float32] */;
  (%657, %658, %var_11341)
}

def @func_15814() -> (Tensor[(16, 15, 11), float32],) {
  %659 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %660 = %659.0;
  (%660,)
}

def @func_938(%var_899: Tensor[(16, 15, 1), float32], %var_920: Tensor[(1008), bool]) -> (Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
  %661 = cast(%var_899, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  %662 = sqrt(%661) /* ty=Tensor[(16, 15, 1), float32] */;
  %663 = cast(%var_899, dtype="int64") /* ty=Tensor[(16, 15, 1), int64] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%662, dtype="int64") /* ty=Tensor[(16, 15, 1), int64] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %667 = bitwise_and(%665, %666) /* ty=Tensor[(16, 15, ?), int64] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(16, 15, ?), float64] */;
  %669 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%662, dtype="float64") /* ty=Tensor[(16, 15, 1), float64] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %672 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %673 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %674 = reshape(%672, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %675 = reshape(%673, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %676 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %677 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %678 = reshape(%676, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %679 = reshape(%677, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %680 = divide(%670, %671) /* ty=Tensor[(16, 15, ?), float64] */;
  %681 = @func_839(%674, %675) /* ty=Tensor[(14, 6, 12), bool] */;
  %682 = @func_839(%678, %679) /* ty=Tensor[(14, 6, 12), bool] */;
  (%680, %681, %var_920, %682)
}

def @func_13473(%var_13435: Tensor[(16, 15, 10), uint32], %var_13436: Tensor[(16, 15, 10), uint32]) -> Tensor[(16, 15, 10), uint32] {
  %683 = cast(%var_13436, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
  %684 = shape_of(%var_13435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_13435, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%685, %686) /* ty=Tensor[(16, 15, 10), uint32] */
}

def @func_637(%var_603: Tensor[(3, 3, 6), int64], %var_631: Tensor[(3, 3, 6), int64]) -> (Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) {
  %687 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 1, 6), int64] */, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
  %688 = cast(%var_603, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %689 = cast(meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %690 = cast(meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %691 = reshape(%689, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %692 = reshape(%690, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %693 = cast(meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %694 = @func_583(%691, %692) /* ty=Tensor[(8, 15, 3), float32] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %696 = reshape(%693, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %697 = reshape(%695, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %698 = cast(meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %699 = cast(%694, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %700 = reshape(%698, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %701 = reshape(%699, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %702 = cast(meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %703 = cast(%694, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %704 = reshape(%702, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %705 = reshape(%703, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %706 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 1, 6), int64] */, dtype="uint8") /* ty=Tensor[(3, 1, 6), uint8] */;
  %707 = cast(%var_631, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
  %708 = less_equal(%687, %688) /* ty=Tensor[(3, 3, 6), bool] */;
  %709 = @func_583(%696, %697) /* ty=Tensor[(8, 15, 3), float32] */;
  %710 = @func_583(%700, %701) /* ty=Tensor[(8, 15, 3), float32] */;
  %711 = @func_583(%704, %705) /* ty=Tensor[(8, 15, 3), float32] */;
  %712 = bitwise_or(%706, %707) /* ty=Tensor[(3, 3, 6), uint8] */;
  (%708, %694, meta[relay.Constant][63] /* ty=Tensor[(360), float32] */, %709, %710, %711, %712)
}

def @func_15843(%var_15839: Tensor[(624), uint32]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) {
  %713 = @func_13215() /* ty=(Tensor[(3, 8, 5), float64],) */;
  %714 = cast(%var_15839, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %715 = reshape(%714, newshape=[312, 2]) /* ty=Tensor[(312, 2), uint32] */;
  %716 = @func_14137(%715) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) */;
  %717 = %713.0;
  %718 = %716.0;
  (%717, %718, %var_15839)
}

def @func_12665() -> Tensor[(16, 15, 11), float64] {
  %719 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %719.0
}

def @func_20919(%var_20852: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(8, 15, 3), bool], Tensor[(4, 16, 3), float64]) {
  %720 = @func_19163() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %721 = @func_19180() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) */;
  %722 = cast(%var_20852, dtype="float32") /* ty=Tensor[(360), float32] */;
  %723 = cast(%var_20852, dtype="float32") /* ty=Tensor[(360), float32] */;
  %724 = reshape(%722, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %725 = reshape(%723, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %726 = @func_583(%724, %725) /* ty=Tensor[(8, 15, 3), float32] */;
  %727 = cast(%var_20852, dtype="bool") /* ty=Tensor[(360), bool] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %731 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %732 = %720.0;
  %733 = %721.0;
  %734 = less_equal(%729, %730) /* ty=Tensor[(8, 15, 3), bool] */;
  %735 = %731.0;
  (%732, %733, %734, %735)
}

def @func_13180() -> Tensor[(16, 15, 11), float32] {
  %736 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %736.1
}

def @func_11403(%var_11395: Tensor[(9, 1008), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) {
  %737 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %738 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 1008), bool] */, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
  %739 = cast(meta[relay.Constant][65] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %740 = reshape(%738, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %741 = reshape(%739, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %742 = @func_7555(%740, %741) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
  %743 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 1008), bool] */, dtype="uint64") /* ty=Tensor[(1, 1008), uint64] */;
  %744 = cast(%var_11395, dtype="uint64") /* ty=Tensor[(9, 1008), uint64] */;
  %745 = %737.0;
  %746 = %742.7;
  %747 = subtract(%743, %744) /* ty=Tensor[(9, 1008), uint64] */;
  (%745, %746, meta[relay.Constant][65] /* ty=Tensor[(182), int64] */, %747)
}

def @func_11607() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  %748 = cast(meta[relay.Constant][66] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %749 = reshape(%748, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %750 = @func_9639(%749) /* ty=(Tensor[(4, 16, 3), float64],) */;
  %751 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
  %752 = %750.0;
  (%751, %752, meta[relay.Constant][66] /* ty=Tensor[(192, 1), float64] */)
}

def @func_14274() -> (Tensor[(16, 15, 11), float64],) {
  %753 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%753,)
}

def @func_16179() -> (Tensor[(4, 16, 3), float64],) {
  %754 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  (%754,)
}

def @func_14023() -> (Tensor[(16, 15, 11), float32], Tensor[(13, 2, 16), float32], Tensor[(2, 208), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
  %755 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %756 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 208), float32] */, dtype="float32") /* ty=Tensor[(2, 208), float32] */;
  %757 = reshape(%756, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float32] */;
  %758 = @func_10015(%757) /* ty=(Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %759 = cast(meta[relay.Constant][68] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %760 = reshape(%759, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %761 = @func_13046(%760) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %762 = %755.0;
  %763 = %758.0;
  %764 = %761.1;
  (%762, %763, meta[relay.Constant][67] /* ty=Tensor[(2, 208), float32] */, %764, meta[relay.Constant][68] /* ty=Tensor[(360), float32] */)
}

def @func_16678() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) {
  %765 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
  %766 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
  (%765, %766)
}

def @func_14685() -> Tensor[(16, 15, 11), float64] {
  %767 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %767.0
}

def @func_3994(%var_3984: uint16, %var_3985: Tensor[(16, 9, 1), uint16]) -> (Tensor[(16, 9, 1), uint16], Tensor[(16, 9, 1), float64]) {
  %768 = cast(%var_3984, dtype="uint16") /* ty=uint16 */;
  %769 = cast(%var_3985, dtype="uint16") /* ty=Tensor[(16, 9, 1), uint16] */;
  %770 = cast(%var_3985, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %771 = logical_xor(%768, %769) /* ty=Tensor[(16, 9, 1), uint16] */;
  %772 = atanh(%770) /* ty=Tensor[(16, 9, 1), float64] */;
  (%771, %772)
}

def @func_15329() -> (Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) {
  %773 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %774 = %773.0;
  %775 = cast(meta[relay.Constant][69] /* ty=Tensor[(16, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = @func_13215() /* ty=(Tensor[(3, 8, 5), float64],) */;
  %780 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %781 = greater_equal(%777, %778) /* ty=Tensor[(16, 15, 11), bool] */;
  %782 = %779.0;
  %783 = %780.0;
  (%781, %782, %783)
}

def @func_583(%var_546: Tensor[(8, 15, 3), float32], %var_547: Tensor[(8, 15, 3), float32]) -> Tensor[(8, 15, 3), float32] {
  %784 = cast(%var_547, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %785 = shape_of(%var_546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_546, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%786, %787) /* ty=Tensor[(8, 15, 3), float32] */
}

def @func_16766() -> (Tensor[(16, 15, 11), float64],) {
  %788 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%788,)
}

def @func_20969() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %789 = @func_16179() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %790 = %789.0;
  %791 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%790, %791)
}

def @func_18036(%var_18034: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float32], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32]) {
  %792 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %793 = cast(meta[relay.Constant][70] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %794 = cast(%var_18034, dtype="float32") /* ty=Tensor[(360), float32] */;
  %795 = reshape(%793, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %796 = reshape(%794, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %797 = @func_8161(%795, %796) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %798 = %792.0;
  %799 = %797.0;
  (%798, %799, meta[relay.Constant][70] /* ty=Tensor[(140), uint8] */, %var_18034)
}

def @func_13955() -> (Tensor[(16, 15, 11), float64],) {
  %800 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  (%800,)
}

def @func_13197() -> Tensor[(4, 16, 3), float64] {
  %801 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %801.0
}

def @func_19771() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), bool]) {
  %802 = @func_15329() /* ty=(Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) */;
  %803 = @func_13740() /* ty=Tensor[(16, 15, 11), float64] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_20666() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %805 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %806 = @func_17218() /* ty=Tensor[(16, 15, 11), float64] */;
  (%805, %806)
}

def @func_17968() -> (Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) {
  %807 = cast(meta[relay.Constant][71] /* ty=Tensor[(20, 120), uint32] */, dtype="uint32") /* ty=Tensor[(20, 120), uint32] */;
  %808 = cast(meta[relay.Constant][71] /* ty=Tensor[(20, 120), uint32] */, dtype="uint32") /* ty=Tensor[(20, 120), uint32] */;
  %809 = reshape(%807, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), uint32] */;
  %810 = reshape(%808, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), uint32] */;
  %811 = @func_13473(%809, %810) /* ty=Tensor[(16, 15, 10), uint32] */;
  %812 = cast(%811, dtype="uint64") /* ty=Tensor[(16, 15, 10), uint64] */;
  %813 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(20, 120), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %814 = cast(meta[relay.Constant][71] /* ty=Tensor[(20, 120), uint32] */, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %816 = @func_13740() /* ty=Tensor[(16, 15, 11), float64] */;
  %817 = maximum(%814, %815) /* ty=Tensor[(20, 120), uint64] */;
  (%816, %817)
}

def @func_8035(%var_8014: Tensor[(13, 15, 9), uint64], %var_8015: Tensor[(13, 15, 9), uint64]) -> Tensor[(13, 15, 9), uint64] {
  %818 = cast(%var_8015, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
  %819 = shape_of(%var_8014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_8014, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%820, %821) /* ty=Tensor[(13, 15, 9), uint64] */
}

def @func_6561(%var_6546: Tensor[(7, 5, 4), uint8], %var_6547: Tensor[(7, 5, 4), uint8], %var_6553: Tensor[(360), float32]) -> (Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
  %822 = cast(%var_6547, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
  %823 = shape_of(%var_6546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%var_6546, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %826 = cast(%var_6553, dtype="float32") /* ty=Tensor[(360), float32] */;
  %827 = cast(%var_6553, dtype="float32") /* ty=Tensor[(360), float32] */;
  %828 = reshape(%826, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %829 = reshape(%827, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %830 = greater(%824, %825) /* ty=Tensor[(7, 5, 4), bool] */;
  %831 = @func_583(%828, %829) /* ty=Tensor[(8, 15, 3), float32] */;
  (%830, %831, %var_6553)
}

def @func_20544() -> Tensor[(4, 16, 3), float64] {
  %832 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %832.2
}

def @func_13532() -> (Tensor[(16, 15, 11), float64],) {
  %833 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  (%833,)
}

def @func_14796(%var_14767: Tensor[(2, 2, 4), bool]) -> (Tensor[(2, 2, 4), float64],) {
  %834 = cast(%var_14767, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  %835 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(2, 2, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %838 = logical_and(%836, %837) /* ty=Tensor[(2, 2, 4), bool] */;
  %839 = cast(%838, dtype="float64") /* ty=Tensor[(2, 2, 4), float64] */;
  %840 = log2(%839) /* ty=Tensor[(2, 2, 4), float64] */;
  (%840,)
}

def @func_20979() -> Tensor[(16, 15, 11), float64] {
  %841 = @func_16854() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %841.0
}

def @func_13377(%var_13366: Tensor[(5, 6, 1), bool], %var_13367: Tensor[(5, 6, 14), bool], %var_13375: Tensor[(12, 84), bool]) -> (Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) {
  %842 = cast(%var_13366, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %843 = cast(%var_13367, dtype="bool") /* ty=Tensor[(5, 6, 14), bool] */;
  %844 = cast(%var_13375, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %845 = cast(%var_13375, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %846 = reshape(%844, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %847 = reshape(%845, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %848 = logical_and(%842, %843) /* ty=Tensor[(5, 6, 14), bool] */;
  %849 = @func_839(%846, %847) /* ty=Tensor[(14, 6, 12), bool] */;
  (%848, %849, %var_13375)
}

def @func_17906() -> Tensor[(1008), bool] {
  %850 = @func_13864() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) */;
  %850.4
}

def @func_8877(%var_8841: Tensor[(1, 10, 6), int32], %var_8842: Tensor[(13, 10, 6), int32], %var_8867: Tensor[(1008), bool]) -> (Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) {
  %851 = cast(%var_8841, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %852 = cast(%var_8842, dtype="bool") /* ty=Tensor[(13, 10, 6), bool] */;
  %853 = greater_equal(%851, %852) /* ty=Tensor[(13, 10, 6), bool] */;
  %854 = cast(%var_8841, dtype="uint64") /* ty=Tensor[(1, 10, 6), uint64] */;
  %855 = cast(%853, dtype="uint64") /* ty=Tensor[(13, 10, 6), uint64] */;
  %856 = cast(%var_8867, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %857 = cast(%var_8867, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %858 = reshape(%856, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %859 = reshape(%857, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %860 = right_shift(%854, %855) /* ty=Tensor[(13, 10, 6), uint64] */;
  %861 = @func_839(%858, %859) /* ty=Tensor[(14, 6, 12), bool] */;
  (%860, %861, %var_8867)
}

def @func_14717(%var_14715: Tensor[(39), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(1, 3, 13), float32], Tensor[(39), float64]) {
  %862 = cast(%var_14715, dtype="float64") /* ty=Tensor[(39), float64] */;
  %863 = reshape(%862, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %864 = @func_13643() /* ty=Tensor[(16, 15, 11), float64] */;
  %865 = @func_10729(%863) /* ty=Tensor[(1, 3, 13), float32] */;
  (%864, %865, %var_14715)
}

def @func_15182() -> Tensor[(16, 15, 11), float64] {
  @func_13066() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_9796(%var_9786: Tensor[(2, 13, 6), float64], %var_9787: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) {
  %866 = cast(%var_9787, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
  %867 = shape_of(%var_9786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%var_9786, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %870 = cast(%var_9786, dtype="float32") /* ty=Tensor[(2, 13, 6), float32] */;
  %871 = divide(%868, %869) /* ty=Tensor[(2, 13, 6), float64] */;
  %872 = sin(%870) /* ty=Tensor[(2, 13, 6), float32] */;
  (%871, %872)
}

def @func_20435() -> (Tensor[(192, 1), float64], Tensor[(192, 1), float64]) {
  %873 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
  %874 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
  %875 = %873.1;
  %876 = %874.1;
  (%875, %876)
}

def @func_15541() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %877 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %878 = @func_15182() /* ty=Tensor[(16, 15, 11), float64] */;
  %879 = %877.0;
  (%878, %879)
}

def @func_12043() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
  %880 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %881 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %882 = %880.0;
  %883 = %881.0;
  (%882, %883)
}

def @func_17007() -> (Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) {
  %884 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %885 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %886 = %884.0;
  %887 = %885.0;
  (%886, %887)
}

def @func_6585(%var_6582: Tensor[(6, 7, 13), float32]) -> Tensor[(6, 7, 13), float32] {
  %888 = cast(%var_6582, dtype="float32") /* ty=Tensor[(6, 7, 13), float32] */;
  log(%888) /* ty=Tensor[(6, 7, 13), float32] */
}

def @func_13215() -> (Tensor[(3, 8, 5), float64],) {
  %889 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  (%889,)
}

def @func_16964() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
  %890 = @func_16854() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %891 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %892 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %893 = %890.0;
  %894 = %891.0;
  %895 = %892.0;
  (%893, %894, %895)
}

def @func_16552(%var_16532: Tensor[(182), int64], %var_16545: Tensor[(4, 16, 3), float64]) -> (Tensor[(156, 1), float64], Tensor[(182), int64], Tensor[(4, 16, 3), int32]) {
  %896 = cast(%var_16532, dtype="int64") /* ty=Tensor[(182), int64] */;
  %897 = reshape(%896, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %898 = @func_11244(%897) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) */;
  %899 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %900 = %899.0;
  %901 = cast(%var_16545, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %905 = %898.2;
  %906 = bitwise_and(%903, %904) /* ty=Tensor[(4, 16, 3), int32] */;
  (%905, %var_16532, %906)
}

def @func_12779(%var_12731: Tensor[(11, 5, 6), float32], %var_12745: Tensor[(364), float32]) -> (Tensor[(11, 5, 6), float32], Tensor[(13, 4, 7), float32], Tensor[(364), float32], Tensor[(4, 16, 3), float64]) {
  %907 = cast(%var_12731, dtype="float32") /* ty=Tensor[(11, 5, 6), float32] */;
  %908 = cast(%var_12745, dtype="float32") /* ty=Tensor[(364), float32] */;
  %909 = reshape(%908, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), float32] */;
  %910 = tan(%907) /* ty=Tensor[(11, 5, 6), float32] */;
  %911 = @func_10849(%909) /* ty=Tensor[(13, 4, 7), float32] */;
  %912 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
  (%910, %911, %var_12745, %912)
}

def @func_15508() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %913 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %914 = %913.0;
  %915 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
  (%914, %915)
}

def @func_16115(%var_16099: Tensor[(4, 16, 3), float64]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) {
  %916 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %917 = %916.1;
  %918 = cast(%var_16099, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%917, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %922 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  %923 = floor_mod(%920, %921) /* ty=Tensor[(4, 16, 3), float32] */;
  (%922, %923)
}

def @func_839(%var_825: Tensor[(14, 6, 12), bool], %var_826: Tensor[(14, 6, 12), bool]) -> Tensor[(14, 6, 12), bool] {
  %924 = cast(%var_826, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %925 = shape_of(%var_825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%var_825, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%926, %927) /* ty=Tensor[(14, 6, 12), bool] */
}

def @func_19163() -> (Tensor[(4, 16, 3), float64],) {
  %928 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %929 = %928.0;
  (%929,)
}

def @func_10389(%var_10383: Tensor[(7, 12, 2), float64]) -> (Tensor[(7, 12, 2), float64],) {
  %930 = cast(%var_10383, dtype="float64") /* ty=Tensor[(7, 12, 2), float64] */;
  %931 = sigmoid(%930) /* ty=Tensor[(7, 12, 2), float64] */;
  (%931,)
}

def @func_13643() -> Tensor[(16, 15, 11), float64] {
  @func_11551() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_10849(%var_10843: Tensor[(13, 4, 7), float32]) -> Tensor[(13, 4, 7), float32] {
  %932 = cast(%var_10843, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  log2(%932) /* ty=Tensor[(13, 4, 7), float32] */
}

def @func_7089(%var_7082: Tensor[(13, 2, 7), int64], %var_7083: Tensor[(13, 2, 7), int64]) -> (Tensor[(13, 2, 7), int64],) {
  %933 = cast(%var_7083, dtype="int64") /* ty=Tensor[(13, 2, 7), int64] */;
  %934 = shape_of(%var_7082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%var_7082, dtype="int64") /* ty=Tensor[(13, 2, 7), int64] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %937 = right_shift(%935, %936) /* ty=Tensor[(13, 2, 7), int64] */;
  (%937,)
}

def @func_15947() -> Tensor[(16, 15, 11), float32] {
  %938 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %938.0
}

def @func_15791(%var_15789: Tensor[(1755), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) {
  %939 = cast(%var_15789, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %940 = reshape(%939, newshape=[195, 9]) /* ty=Tensor[(195, 9), uint64] */;
  %941 = @func_14290(%940) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) */;
  %942 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  %943 = %941.2;
  (%942, %943, %var_15789)
}

def @func_17696() -> Tensor[(192, ?), uint32] {
  %944 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %945 = %944.0;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %947 = erf(%946) /* ty=Tensor[(192, 1), float64] */;
  %948 = cast(%945, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(2), int32] */;
  %950 = cast(%947, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  bitwise_xor(%950, %951) /* ty=Tensor[(192, ?), uint32] */
}

def @func_17466() -> (Tensor[(16, 15, 11), float32],) {
  %952 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %953 = %952.0;
  (%953,)
}

def @func_19292(%var_19282: Tensor[(780), int32]) -> (Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) {
  %954 = cast(meta[relay.Constant][73] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %955 = cast(%var_19282, dtype="int32") /* ty=Tensor[(780), int32] */;
  %956 = cast(meta[relay.Constant][74] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %957 = reshape(%954, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
  %958 = reshape(%955, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
  %959 = reshape(%956, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %960 = @func_8877(%957, %958, %959) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
  %961 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %962 = %961.2;
  %963 = cast(%962, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %964 = cast(meta[relay.Constant][74] /* ty=Tensor[(1008), bool] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %965 = %960.2;
  %966 = floor_divide(%963, %964) /* ty=Tensor[(192, 1008), float32] */;
  (%965, meta[relay.Constant][73] /* ty=Tensor[(60), int32] */, %var_19282, %966)
}

def @func_13066() -> Tensor[(16, 15, 11), float64] {
  @func_12665() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_11244(%var_11233: Tensor[(182), int64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) {
  %967 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %968 = cast(meta[relay.Constant][75] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %969 = cast(meta[relay.Constant][75] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %970 = reshape(%968, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %971 = reshape(%969, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %972 = @func_9796(%970, %971) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %973 = cast(meta[relay.Constant][76] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %974 = cast(meta[relay.Constant][76] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %975 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 252), bool] */, dtype="bool") /* ty=Tensor[(4, 252), bool] */;
  %976 = reshape(%973, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %977 = reshape(%974, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %978 = reshape(%975, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %979 = @func_7496(%976, %977, %978) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
  %980 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 252), bool] */, dtype="bool") /* ty=Tensor[(4, 252), bool] */;
  %981 = cast(%var_11233, dtype="int64") /* ty=Tensor[(182), int64] */;
  %982 = reshape(%980, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %983 = reshape(%981, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %984 = @func_7555(%982, %983) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
  %985 = cast(meta[relay.Constant][78] /* ty=Tensor[(4, 252), bool] */, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
  %986 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(4, 252), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %987 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 252), bool] */, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %989 = %967.0;
  %990 = %972.0;
  %991 = %979.0;
  %992 = %984.1;
  %993 = multiply(%987, %988) /* ty=Tensor[(4, 252), int64] */;
  (%989, %990, meta[relay.Constant][75] /* ty=Tensor[(156, 1), float64] */, %991, meta[relay.Constant][76] /* ty=Tensor[(210), uint64] */, %992, %var_11233, %993)
}

def @func_12645(%var_12638: Tensor[(3, 56), uint32]) -> (Tensor[(1, 3, 13), float32], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(16, 15, 11), float64], Tensor[(168), uint32], uint32, Tensor[(3, 56), uint32], Tensor[(360), float32]) {
  %994 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
  %995 = %994.1;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
  %997 = cast(meta[relay.Constant][79] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %998 = reshape(%997, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %999 = @func_10611(%998) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %1000 = cast(meta[relay.Constant][80] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1001 = cast(%var_12638, dtype="uint32") /* ty=Tensor[(3, 56), uint32] */;
  %1002 = cast(meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1003 = reshape(%1000, newshape=[]) /* ty=uint32 */;
  %1004 = reshape(%1001, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %1005 = reshape(%1002, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1006 = @func_11653(%1003, %1004, %1005) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
  %1007 = log2(%996) /* ty=Tensor[(1, 3, 13), float32] */;
  %1008 = %999.0;
  %1009 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
  %1010 = %1006.2;
  (%1007, %1008, meta[relay.Constant][79] /* ty=Tensor[(112), float32] */, %1009, %1010, meta[relay.Constant][80] /* ty=uint32 */, %var_12638, meta[relay.Constant][81] /* ty=Tensor[(360), float32] */)
}

def @func_19180() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
  %1011 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %1012 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
  %1013 = %1011.0;
  (%1012, %1013)
}

def @func_13801() -> (Tensor[(4, 16, 3), float32],) {
  %1014 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %1015 = %1014.1;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %1017 = sqrt(%1016) /* ty=Tensor[(4, 16, 3), float32] */;
  (%1017,)
}

def @func_16854() -> (Tensor[(16, 15, 11), float64],) {
  %1018 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1019 = %1018.0;
  (%1019,)
}

def @func_20837() -> (Tensor[(4, 16, 3), float64],) {
  %1020 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_17193(%var_17086: Tensor[(8, 13, 15), float64], %var_17125: Tensor[(156), float64], %var_17178: Tensor[(35), float64]) -> (Tensor[(4, 16, 3), float64], Tensor[(8, 13, 15), int8], Tensor[(2, 13, 6), float32], Tensor[(156), bool], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64], Tensor[(13, 15, 9), uint64], Tensor[(1755), uint64]) {
  %1022 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1023 = cast(%var_17086, dtype="float64") /* ty=Tensor[(8, 13, 15), float64] */;
  %1024 = sigmoid(%1023) /* ty=Tensor[(8, 13, 15), float64] */;
  %1025 = cast(%var_17086, dtype="int8") /* ty=Tensor[(8, 13, 15), int8] */;
  %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%1024, dtype="int8") /* ty=Tensor[(8, 13, 15), int8] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1029 = cast(meta[relay.Constant][82] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1030 = cast(meta[relay.Constant][82] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1031 = reshape(%1029, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %1032 = reshape(%1030, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %1033 = @func_9796(%1031, %1032) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %1034 = cast(%var_17125, dtype="bool") /* ty=Tensor[(156), bool] */;
  %1035 = shape_of(meta[relay.Constant][82] /* ty=Tensor[(156), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1036 = cast(meta[relay.Constant][82] /* ty=Tensor[(156), float64] */, dtype="bool") /* ty=Tensor[(156), bool] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1038 = cast(2.3856f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1039 = cast(%var_17178, dtype="float64") /* ty=Tensor[(35), float64] */;
  %1040 = reshape(%1038, newshape=[]) /* ty=float64 */;
  %1041 = reshape(%1039, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %1042 = cast(meta[relay.Constant][83] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %1043 = cast(meta[relay.Constant][83] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %1044 = reshape(%1042, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %1045 = reshape(%1043, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %1046 = %1022.0;
  %1047 = add(%1027, %1028) /* ty=Tensor[(8, 13, 15), int8] */;
  %1048 = %1033.1;
  %1049 = equal(%1036, %1037) /* ty=Tensor[(156), bool] */;
  %1050 = @func_8056(%1040, %1041) /* ty=Tensor[(7, 5, ?), int32] */;
  %1051 = @func_8035(%1044, %1045) /* ty=Tensor[(13, 15, 9), uint64] */;
  (%1046, %1047, %1048, %1049, %1050, 2.3856f64 /* ty=float64 */, %var_17178, %1051, meta[relay.Constant][83] /* ty=Tensor[(1755), uint64] */)
}

def @func_12148(%var_12131: uint32, %var_12132: Tensor[(168), uint32], %var_12133: Tensor[(360), float32], %var_12136: Tensor[(91, 6), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(6, 7, 13), int64]) {
  %1052 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1053 = cast(%var_12131, dtype="uint32") /* ty=uint32 */;
  %1054 = cast(%var_12132, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %1055 = cast(%var_12133, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1056 = reshape(%1053, newshape=[]) /* ty=uint32 */;
  %1057 = reshape(%1054, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %1058 = reshape(%1055, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1059 = @func_11510(%1056, %1057, %1058) /* ty=(Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %1060 = cast(%var_12136, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %1061 = reshape(%1060, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1062 = @func_11351(%1061) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) */;
  %1063 = %1062.1;
  %1064 = cast(%var_12136, dtype="int64") /* ty=Tensor[(91, 6), int64] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%1063, dtype="int64") /* ty=Tensor[(6, 7, 13), int64] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1068 = %1052.0;
  %1069 = %1059.1;
  %1070 = minimum(%1066, %1067) /* ty=Tensor[(6, 7, 13), int64] */;
  (%1068, %1069, %var_12131, %var_12132, %var_12133, %1070)
}

def @func_14897() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %1071 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1072 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1073 = %1071.0;
  %1074 = %1072.0;
  (%1073, %1074)
}

def @func_15644() -> (Tensor[(1, 3, 13), float32],) {
  %1075 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
  %1076 = %1075.2;
  (%1076,)
}

def @func_18455() -> (Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) {
  %1077 = @func_17637() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %1078 = @func_17466() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1079 = %1077.3;
  %1080 = %1078.0;
  (%1079, %1080)
}

def @func_18211() -> (Tensor[(16, 15, 11), float32],) {
  %1081 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_16257(%var_16216: Tensor[(7, 15, 15), float64], %var_16231: Tensor[(2640), float64], %var_16232: Tensor[(210), uint64], %var_16233: Tensor[(1008), bool]) -> (Tensor[(1, 1008), bool], Tensor[(2640), float64], Tensor[(210), uint64], Tensor[(1008), bool], Tensor[(4, 16, 3), float64], Tensor[(7, 15, 15), float32], Tensor[(3, 8, 5), float64]) {
  %1083 = cast(%var_16231, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %1084 = cast(%var_16232, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %1085 = cast(%var_16233, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %1086 = reshape(%1083, newshape=[16, 15, 11]) /* ty=Tensor[(16, 15, 11), float64] */;
  %1087 = reshape(%1084, newshape=[210, 1]) /* ty=Tensor[(210, 1), uint64] */;
  %1088 = reshape(%1085, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), bool] */;
  %1089 = @func_15125(%1086, %1087, %1088) /* ty=(Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) */;
  %1090 = @func_14632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1091 = cast(%var_16216, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
  %1092 = sin(%1091) /* ty=Tensor[(7, 15, 15), float64] */;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(7, 15, 15), float32] */;
  %1094 = %1090.0;
  %1095 = cast(%1094, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %1096 = reshape(%1095, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %1097 = @func_16115(%1096) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) */;
  %1098 = %1089.3;
  %1099 = acos(%1093) /* ty=Tensor[(7, 15, 15), float32] */;
  %1100 = %1097.0;
  (%1098, %var_16231, %var_16232, %var_16233, %1094, %1099, %1100)
}

def @func_10729(%var_10712: Tensor[(1, 3, 13), float64]) -> Tensor[(1, 3, 13), float32] {
  %1101 = cast(%var_10712, dtype="float64") /* ty=Tensor[(1, 3, 13), float64] */;
  %1102 = erf(%1101) /* ty=Tensor[(1, 3, 13), float64] */;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
  acos(%1103) /* ty=Tensor[(1, 3, 13), float32] */
}

def @func_14374() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %1104 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %1105 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  %1106 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%1104, %1105, %1106)
}

def @func_20134(%var_20095: Tensor[(2, 7, 2), float32], %var_20096: Tensor[(2, 7, 2), float32], %var_20106: Tensor[(780), int32], %var_20119: int8, %var_20132: Tensor[(168), uint32]) -> (Tensor[(2, 7, 2), float32], Tensor[(14, 6, 12), bool], Tensor[(780), int32], Tensor[(360), float32], Tensor[(2016), float64], Tensor[(360), float32], Tensor[(1, 13, 2), bool], int8, Tensor[(26), int8], Tensor[(60, 1008), int8], uint32, Tensor[(168), uint32]) {
  %1107 = cast(%var_20096, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
  %1108 = shape_of(%var_20095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%var_20095, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1111 = cast(meta[relay.Constant][84] /* ty=Tensor[(60, 1), int32] */, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
  %1112 = cast(%var_20106, dtype="int32") /* ty=Tensor[(780), int32] */;
  %1113 = cast(meta[relay.Constant][85] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %1114 = reshape(%1111, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
  %1115 = reshape(%1112, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
  %1116 = reshape(%1113, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %1117 = @func_8877(%1114, %1115, %1116) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
  %1118 = cast(meta[relay.Constant][86] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1119 = cast(meta[relay.Constant][87] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1120 = reshape(%1118, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %1121 = reshape(%1119, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1122 = @func_12521(%1120, %1121) /* ty=(Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %1123 = cast(%var_20119, dtype="int8") /* ty=int8 */;
  %1124 = cast(meta[relay.Constant][88] /* ty=Tensor[(26), int8] */, dtype="int8") /* ty=Tensor[(26), int8] */;
  %1125 = reshape(%1123, newshape=[]) /* ty=int8 */;
  %1126 = reshape(%1124, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), int8] */;
  %1127 = cast(meta[relay.Constant][84] /* ty=Tensor[(60, 1), int32] */, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
  %1128 = cast(meta[relay.Constant][85] /* ty=Tensor[(1008), bool] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %1129 = cast(%var_20119, dtype="uint32") /* ty=uint32 */;
  %1130 = cast(%var_20132, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %1131 = cast(meta[relay.Constant][87] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1132 = reshape(%1129, newshape=[]) /* ty=uint32 */;
  %1133 = reshape(%1130, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %1134 = reshape(%1131, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1135 = @func_11653(%1132, %1133, %1134) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
  %1136 = power(%1109, %1110) /* ty=Tensor[(2, 7, 2), float32] */;
  %1137 = %1117.1;
  %1138 = %1122.5;
  %1139 = @func_19698(%1125, %1126) /* ty=Tensor[(1, 13, 2), bool] */;
  %1140 = logical_xor(%1127, %1128) /* ty=Tensor[(60, 1008), int8] */;
  %1141 = %1135.1;
  (%1136, %1137, %var_20106, %1138, meta[relay.Constant][86] /* ty=Tensor[(2016), float64] */, meta[relay.Constant][87] /* ty=Tensor[(360), float32] */, %1139, %var_20119, meta[relay.Constant][88] /* ty=Tensor[(26), int8] */, %1140, %1141, %var_20132)
}

def @func_11551() -> Tensor[(16, 15, 11), float64] {
  %1142 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1142.0
}

def @func_18988() -> Tensor[(16, 15, 11), float64] {
  @func_13340() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_20389(%var_20387: Tensor[(13, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(780), int32], Tensor[(192, 1008), float32], Tensor[(195, 9), uint64], Tensor[(1755), uint64], Tensor[(2, 9, 14), float32], Tensor[(192, 1008), float32], Tensor[(1, 3, 13), float32], Tensor[(13, 3), float64]) {
  %1143 = @func_17968() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) */;
  %1144 = cast(meta[relay.Constant][89] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %1145 = reshape(%1144, newshape=[780]) /* ty=Tensor[(780), int32] */;
  %1146 = @func_19292(%1145) /* ty=(Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) */;
  %1147 = %1146.3;
  %1148 = cast(%1147, dtype="float64") /* ty=Tensor[(192, 1008), float64] */;
  %1149 = sqrt(%1148) /* ty=Tensor[(192, 1008), float64] */;
  %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %1151 = cosh(%1150) /* ty=Tensor[(192, 1008), float32] */;
  %1152 = cast(%1151, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %1153 = cast(meta[relay.Constant][90] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %1154 = reshape(%1153, newshape=[1755]) /* ty=Tensor[(1755), uint64] */;
  %1155 = @func_15791(%1154) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) */;
  %1156 = cast(%1147, dtype="bool") /* ty=Tensor[(192, 1008), bool] */;
  %1157 = shape_of(%1149, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1158 = cast(%1149, dtype="bool") /* ty=Tensor[(192, 1008), bool] */;
  %1159 = dyn.reshape(%1156, %1157, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1160 = greater(%1158, %1159) /* ty=Tensor[(192, 1008), bool] */;
  %1161 = cast(meta[relay.Constant][91] /* ty=Tensor[(192, 1008), bool] */, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %1162 = shape_of(%1160, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1163 = cast(%1160, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1165 = cast(%var_20387, dtype="float64") /* ty=Tensor[(13, 3), float64] */;
  %1166 = reshape(%1165, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %1167 = %1143.0;
  %1168 = rsqrt(%1152) /* ty=Tensor[(192, 1008), float32] */;
  %1169 = %1155.1;
  %1170 = @func_18164() /* ty=Tensor[(2, 9, 14), float32] */;
  %1171 = floor_mod(%1163, %1164) /* ty=Tensor[(192, 1008), float32] */;
  %1172 = @func_10729(%1166) /* ty=Tensor[(1, 3, 13), float32] */;
  (%1167, meta[relay.Constant][89] /* ty=Tensor[(780), int32] */, %1168, %1169, meta[relay.Constant][90] /* ty=Tensor[(1755), uint64] */, %1170, %1171, %1172, %var_20387)
}

def @func_12521(%var_12458: Tensor[(16, 14, 9), float64], %var_12505: Tensor[(360), float32]) -> (Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %1173 = cast(%var_12458, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %1174 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(16, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(meta[relay.Constant][92] /* ty=Tensor[(16, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1177 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %1178 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %1179 = cast(meta[relay.Constant][93] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %1180 = cast(%var_12505, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1181 = reshape(%1179, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %1182 = reshape(%1180, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %1183 = @func_8161(%1181, %1182) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %1184 = floor_divide(%1175, %1176) /* ty=Tensor[(16, 14, 9), float64] */;
  %1185 = %1177.0;
  %1186 = %1178.0;
  %1187 = %1183.2;
  (%1184, %1185, %1186, %1187, meta[relay.Constant][93] /* ty=Tensor[(140), uint8] */, %var_12505)
}

def @func_16379() -> (Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) {
  %1188 = cast(meta[relay.Constant][94] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1189 = reshape(%1188, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %1190 = @func_16115(%1189) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) */;
  %1191 = cast(meta[relay.Constant][95] /* ty=Tensor[(9072), bool] */, dtype="bool") /* ty=Tensor[(9072), bool] */;
  %1192 = reshape(%1191, newshape=[9, 1008]) /* ty=Tensor[(9, 1008), bool] */;
  %1193 = @func_11403(%1192) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) */;
  %1194 = @func_15182() /* ty=Tensor[(16, 15, 11), float64] */;
  %1195 = %1190.0;
  %1196 = %1193.2;
  (%1194, %1195, meta[relay.Constant][94] /* ty=Tensor[(192), float64] */, %1196, meta[relay.Constant][95] /* ty=Tensor[(9072), bool] */)
}

def @func_8056(%var_8040: float64, %var_8041: Tensor[(7, 5, 1), float64]) -> Tensor[(7, 5, ?), int32] {
  %1197 = cast(%var_8040, dtype="float64") /* ty=float64 */;
  %1198 = cast(%var_8041, dtype="float64") /* ty=Tensor[(7, 5, 1), float64] */;
  %1199 = floor_divide(%1197, %1198) /* ty=Tensor[(7, 5, 1), float64] */;
  %1200 = cast(%var_8041, dtype="int32") /* ty=Tensor[(7, 5, 1), int32] */;
  %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1202 = cast(%1199, dtype="int32") /* ty=Tensor[(7, 5, 1), int32] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%1202, %1203) /* ty=Tensor[(7, 5, ?), int32] */
}

def @func_16640(%var_16617: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) {
  %1204 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1205 = @func_15508() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */;
  %1206 = @func_15618() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1207 = cast(%var_16617, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1208 = reshape(%1207, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
  %1209 = @func_14663(%1208) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) */;
  %1210 = cast(meta[relay.Constant][96] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %1211 = cast(meta[relay.Constant][96] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %1212 = cast(meta[relay.Constant][97] /* ty=Tensor[(54), int64] */, dtype="int64") /* ty=Tensor[(54), int64] */;
  %1213 = reshape(%1210, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %1214 = reshape(%1211, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %1215 = reshape(%1212, newshape=[9, 6]) /* ty=Tensor[(9, 6), int64] */;
  %1216 = @func_8382(%1213, %1214, %1215) /* ty=(Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) */;
  %1217 = %1204.0;
  %1218 = %1205.1;
  %1219 = %1206.0;
  %1220 = %1209.0;
  %1221 = %1216.0;
  (%1217, %1218, %1219, %1220, %var_16617, %1221, meta[relay.Constant][96] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][97] /* ty=Tensor[(54), int64] */)
}

def @func_16420() -> Tensor[(16, 15, 11), float64] {
  %1222 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1222.0
}

def @func_13340() -> Tensor[(16, 15, 11), float64] {
  @func_13066() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_15618() -> (Tensor[(16, 15, 11), float64],) {
  %1223 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1224 = %1223.0;
  (%1224,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_15793(%var_15792: Tensor[(1755), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) {
  %5 = fn (%var_15789: Tensor[(1755), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) {
    %0 = cast(%var_15789, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
    %1 = reshape(%0, newshape=[195, 9]) /* ty=Tensor[(195, 9), uint64] */;
    %2 = @func_14290(%1) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) */;
    %3 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
    %4 = %2.2;
    (%3, %4, %var_15789)
  };
  %5(%var_15792) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) */
}

def @func_18227() -> (Tensor[(16, 15, 11), float64],) {
  %7 = fn () -> (Tensor[(16, 15, 11), float64],) {
    %6 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
    (%6,)
  };
  %7() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_17637() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  %8 = @func_16964() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %9 = @func_15618() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %10 = @func_13710() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) */;
  %11 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %12 = %8.1;
  %13 = %9.0;
  %14 = %10.0;
  %15 = %11.0;
  (%12, %13, %14, %15)
}

def @func_16768() -> (Tensor[(16, 15, 11), float64],) {
  @func_16766() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_10731(%var_10730: Tensor[(1, 3, 13), float64]) -> Tensor[(1, 3, 13), float32] {
  %19 = fn (%var_10712: Tensor[(1, 3, 13), float64]) -> Tensor[(1, 3, 13), float32] {
    %16 = cast(%var_10712, dtype="float64") /* ty=Tensor[(1, 3, 13), float64] */;
    %17 = erf(%16) /* ty=Tensor[(1, 3, 13), float64] */;
    %18 = cast(%17, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
    acos(%18) /* ty=Tensor[(1, 3, 13), float32] */
  };
  %19(%var_10730) /* ty=Tensor[(1, 3, 13), float32] */
}

def @func_11246(%var_11245: Tensor[(182), int64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) {
  %47 = fn (%var_11233: Tensor[(182), int64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) {
    %20 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %23 = reshape(%21, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
    %24 = reshape(%22, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
    %25 = @func_9796(%23, %24) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
    %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 252), bool] */, dtype="bool") /* ty=Tensor[(4, 252), bool] */;
    %29 = reshape(%26, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %30 = reshape(%27, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %31 = reshape(%28, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %32 = @func_7496(%29, %30, %31) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 252), bool] */, dtype="bool") /* ty=Tensor[(4, 252), bool] */;
    %34 = cast(%var_11233, dtype="int64") /* ty=Tensor[(182), int64] */;
    %35 = reshape(%33, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %36 = reshape(%34, newshape=[182]) /* ty=Tensor[(182), int64] */;
    %37 = @func_7555(%35, %36) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
    %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 252), bool] */, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
    %39 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4, 252), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 252), bool] */, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %42 = %20.0;
    %43 = %25.0;
    %44 = %32.0;
    %45 = %37.1;
    %46 = multiply(%40, %41) /* ty=Tensor[(4, 252), int64] */;
    (%42, %43, meta[relay.Constant][0] /* ty=Tensor[(156, 1), float64] */, %44, meta[relay.Constant][1] /* ty=Tensor[(210), uint64] */, %45, %var_11233, %46)
  };
  %47(%var_11245) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) */
}

def @func_14796(%var_14767: Tensor[(2, 2, 4), bool]) -> (Tensor[(2, 2, 4), float64],) {
  %48 = cast(%var_14767, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  %49 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 2, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %52 = logical_and(%50, %51) /* ty=Tensor[(2, 2, 4), bool] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(2, 2, 4), float64] */;
  %54 = log2(%53) /* ty=Tensor[(2, 2, 4), float64] */;
  (%54,)
}

def @func_15183() -> Tensor[(16, 15, 11), float64] {
  %55 = fn () -> Tensor[(16, 15, 11), float64] {
    @func_13066() /* ty=Tensor[(16, 15, 11), float64] */
  };
  %55() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_14799(%var_14797: Tensor[(2, 2, 4), bool]) -> (Tensor[(2, 2, 4), float64],) {
  @func_14796(%var_14797) /* ty=(Tensor[(2, 2, 4), float64],) */
}

def @func_19110(%var_19109: Tensor[(16, 15, 11), float64]) -> (Tensor[(16, 15, 11), uint64], Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float64]) {
  %67 = fn (%var_19056: Tensor[(16, 15, 11), float64]) -> (Tensor[(16, 15, 11), uint64], Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float64]) {
    %56 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %57 = %56.0;
    %58 = cast(%var_19056, dtype="uint64") /* ty=Tensor[(16, 15, 11), uint64] */;
    %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%57, dtype="uint64") /* ty=Tensor[(16, 15, 11), uint64] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %62 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %63 = @func_18226() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %64 = multiply(%60, %61) /* ty=Tensor[(16, 15, 11), uint64] */;
    %65 = %62.0;
    %66 = %63.0;
    (%64, %65, %66)
  };
  %67(%var_19109) /* ty=(Tensor[(16, 15, 11), uint64], Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float64]) */
}

def @func_14047() -> (Tensor[(4, 16, 3), float64],) {
  @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_17056(%var_17050: Tensor[(54), int64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(182), int64], Tensor[(8, 15, 3), float32], Tensor[(54), int64]) {
  %68 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %69 = @func_16379() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) */;
  %70 = cast(%var_17050, dtype="int64") /* ty=Tensor[(54), int64] */;
  %71 = cast(%var_17050, dtype="int64") /* ty=Tensor[(54), int64] */;
  %72 = reshape(%70, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %73 = reshape(%71, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %74 = @func_637(%72, %73) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) */;
  %75 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %76 = %68.0;
  %77 = %69.3;
  %78 = %74.1;
  (%75, %76, %77, %78, %var_17050)
}

def @func_11709() -> (Tensor[(4, 16, 3), float64],) {
  %81 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %79 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
    %80 = %79.1;
    (%80,)
  };
  %81() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_16856() -> (Tensor[(16, 15, 11), float64],) {
  @func_16854() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_15845(%var_15844: Tensor[(624), uint32]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) {
  %88 = fn (%var_15839: Tensor[(624), uint32]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) {
    %82 = @func_13215() /* ty=(Tensor[(3, 8, 5), float64],) */;
    %83 = cast(%var_15839, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %84 = reshape(%83, newshape=[312, 2]) /* ty=Tensor[(312, 2), uint32] */;
    %85 = @func_14137(%84) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) */;
    %86 = %82.0;
    %87 = %85.0;
    (%86, %87, %var_15839)
  };
  %88(%var_15844) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) */
}

def @func_8382(%var_8360: Tensor[(3, 13, 16), uint32], %var_8361: Tensor[(3, 13, 16), uint32], %var_8374: Tensor[(9, 6), int64]) -> (Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) {
  %89 = cast(%var_8361, dtype="uint32") /* ty=Tensor[(3, 13, 16), uint32] */;
  %90 = shape_of(%var_8360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_8360, dtype="uint32") /* ty=Tensor[(3, 13, 16), uint32] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(26, 7), int64] */, dtype="int64") /* ty=Tensor[(26, 7), int64] */;
  %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(26, 7), int64] */, dtype="int64") /* ty=Tensor[(26, 7), int64] */;
  %95 = reshape(%93, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %96 = reshape(%94, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %97 = @func_7089(%95, %96) /* ty=(Tensor[(13, 2, 7), int64],) */;
  %98 = cast(%var_8374, dtype="int64") /* ty=Tensor[(9, 6), int64] */;
  %99 = cast(%var_8374, dtype="int64") /* ty=Tensor[(9, 6), int64] */;
  %100 = reshape(%98, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %101 = reshape(%99, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), int64] */;
  %102 = @func_637(%100, %101) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) */;
  %103 = right_shift(%91, %92) /* ty=Tensor[(3, 13, 16), uint32] */;
  %104 = %97.0;
  %105 = %102.0;
  (%103, %104, meta[relay.Constant][5] /* ty=Tensor[(26, 7), int64] */, %105, %var_8374)
}

def @func_16379() -> (Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) {
  %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %107 = reshape(%106, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %108 = @func_16115(%107) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) */;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(9072), bool] */, dtype="bool") /* ty=Tensor[(9072), bool] */;
  %110 = reshape(%109, newshape=[9, 1008]) /* ty=Tensor[(9, 1008), bool] */;
  %111 = @func_11403(%110) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) */;
  %112 = @func_15182() /* ty=Tensor[(16, 15, 11), float64] */;
  %113 = %108.0;
  %114 = %111.2;
  (%112, %113, meta[relay.Constant][6] /* ty=Tensor[(192), float64] */, %114, meta[relay.Constant][7] /* ty=Tensor[(9072), bool] */)
}

def @func_8161(%var_8158: Tensor[(140), uint8], %var_8159: Tensor[(180, 2), float32]) -> (Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) {
  %115 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %116 = cast(%var_8158, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %117 = cast(%var_8158, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %118 = cast(%var_8159, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %119 = reshape(%116, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %120 = reshape(%117, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %121 = reshape(%118, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %122 = @func_6561(%119, %120, %121) /* ty=(Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %123 = acosh(%115) /* ty=Tensor[(3, 14, 14), float64] */;
  %124 = %122.2;
  (%123, %124, %var_8158, %var_8159)
}

def @func_11306() -> (Tensor[(16, 15, 11), float64],) {
  %129 = fn () -> (Tensor[(16, 15, 11), float64],) {
    %125 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
    %128 = atanh(%127) /* ty=Tensor[(16, 15, 11), float64] */;
    (%128,)
  };
  %129() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_13645() -> Tensor[(16, 15, 11), float64] {
  @func_13643() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_16642(%var_16641: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) {
  %148 = fn (%var_16617: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) {
    %130 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %131 = @func_15508() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */;
    %132 = @func_15618() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %133 = cast(%var_16617, dtype="float32") /* ty=Tensor[(546), float32] */;
    %134 = reshape(%133, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
    %135 = @func_14663(%134) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) */;
    %136 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(54), int64] */, dtype="int64") /* ty=Tensor[(54), int64] */;
    %139 = reshape(%136, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
    %140 = reshape(%137, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
    %141 = reshape(%138, newshape=[9, 6]) /* ty=Tensor[(9, 6), int64] */;
    %142 = @func_8382(%139, %140, %141) /* ty=(Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) */;
    %143 = %130.0;
    %144 = %131.1;
    %145 = %132.0;
    %146 = %135.0;
    %147 = %142.0;
    (%143, %144, %145, %146, %var_16617, %147, meta[relay.Constant][9] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][10] /* ty=Tensor[(54), int64] */)
  };
  %148(%var_16641) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) */
}

def @func_10851(%var_10850: Tensor[(13, 4, 7), float32]) -> Tensor[(13, 4, 7), float32] {
  %150 = fn (%var_10843: Tensor[(13, 4, 7), float32]) -> Tensor[(13, 4, 7), float32] {
    %149 = cast(%var_10843, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
    log2(%149) /* ty=Tensor[(13, 4, 7), float32] */
  };
  %150(%var_10850) /* ty=Tensor[(13, 4, 7), float32] */
}

def @func_7558(%var_7556: Tensor[(1008), bool], %var_7557: Tensor[(182), int64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) {
  %169 = fn (%var_7515: Tensor[(1008), bool], %var_7526: Tensor[(182), int64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) {
    %151 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
    %152 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
    %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183, 1), float64] */, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
    %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %155 = cast(%var_7515, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %156 = reshape(%153, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
    %157 = reshape(%154, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %158 = reshape(%155, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %159 = @func_5759(%156, %157, %158) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
    %160 = cast(%var_7526, dtype="int64") /* ty=Tensor[(182), int64] */;
    %161 = cast(%var_7526, dtype="int64") /* ty=Tensor[(182), int64] */;
    %162 = reshape(%160, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
    %163 = reshape(%161, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
    %164 = @func_7089(%162, %163) /* ty=(Tensor[(13, 2, 7), int64],) */;
    %165 = sigmoid(%151) /* ty=Tensor[(14, 3, 5), float64] */;
    %166 = asin(%152) /* ty=Tensor[(14, 3, 5), float64] */;
    %167 = %159.4;
    %168 = %164.0;
    (%165, %166, %167, meta[relay.Constant][12] /* ty=Tensor[(1183, 1), float64] */, meta[relay.Constant][13] /* ty=Tensor[(240), float32] */, %var_7515, %168, %var_7526)
  };
  %169(%var_7556, %var_7557) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */
}

def @func_12779(%var_12731: Tensor[(11, 5, 6), float32], %var_12745: Tensor[(364), float32]) -> (Tensor[(11, 5, 6), float32], Tensor[(13, 4, 7), float32], Tensor[(364), float32], Tensor[(4, 16, 3), float64]) {
  %170 = cast(%var_12731, dtype="float32") /* ty=Tensor[(11, 5, 6), float32] */;
  %171 = cast(%var_12745, dtype="float32") /* ty=Tensor[(364), float32] */;
  %172 = reshape(%171, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), float32] */;
  %173 = tan(%170) /* ty=Tensor[(11, 5, 6), float32] */;
  %174 = @func_10849(%172) /* ty=Tensor[(13, 4, 7), float32] */;
  %175 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
  (%173, %174, %var_12745, %175)
}

def @func_14633() -> (Tensor[(4, 16, 3), float64],) {
  %178 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %176 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %177 = %176.0;
    (%177,)
  };
  %178() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_14926() -> (Tensor[(16, 15, 11), float64], Tensor[(192), float64]) {
  @func_14924() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(192), float64]) */
}

def @func_18232() -> (Tensor[(16, 15, 11), float64],) {
  %179 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %180 = %179.0;
  (%180,)
}

def @func_18380() -> Tensor[(16, 15, 11), float64] {
  %182 = fn () -> Tensor[(16, 15, 11), float64] {
    %181 = @func_14924() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(192), float64]) */;
    %181.0
  };
  %182() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_12521(%var_12458: Tensor[(16, 14, 9), float64], %var_12505: Tensor[(360), float32]) -> (Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %183 = cast(%var_12458, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %184 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(16, 14, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %187 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %188 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %189 = cast(meta[relay.Constant][15] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %190 = cast(%var_12505, dtype="float32") /* ty=Tensor[(360), float32] */;
  %191 = reshape(%189, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %192 = reshape(%190, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %193 = @func_8161(%191, %192) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %194 = floor_divide(%185, %186) /* ty=Tensor[(16, 14, 9), float64] */;
  %195 = %187.0;
  %196 = %188.0;
  %197 = %193.2;
  (%194, %195, %196, %197, meta[relay.Constant][15] /* ty=Tensor[(140), uint8] */, %var_12505)
}

def @func_11354(%var_11352: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) {
  @func_11351(%var_11352) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) */
}

def @func_12255() -> (Tensor[(16, 15, 11), float64],) {
  %200 = fn () -> (Tensor[(16, 15, 11), float64],) {
    %198 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
    %199 = %198.0;
    (%199,)
  };
  %200() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_11553() -> Tensor[(16, 15, 11), float64] {
  @func_11551() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_8038(%var_8036: Tensor[(13, 15, 9), uint64], %var_8037: Tensor[(13, 15, 9), uint64]) -> Tensor[(13, 15, 9), uint64] {
  %205 = fn (%var_8014: Tensor[(13, 15, 9), uint64], %var_8015: Tensor[(13, 15, 9), uint64]) -> Tensor[(13, 15, 9), uint64] {
    %201 = cast(%var_8015, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
    %202 = shape_of(%var_8014, dtype="int32") /* ty=Tensor[(3), int32] */;
    %203 = cast(%var_8014, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%203, %204) /* ty=Tensor[(13, 15, 9), uint64] */
  };
  %205(%var_8036, %var_8037) /* ty=Tensor[(13, 15, 9), uint64] */
}

def @func_13048(%var_13047: Tensor[(360), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %216 = fn (%var_13043: Tensor[(360), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
    %206 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
    %209 = cast(meta[relay.Constant][16] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %210 = cast(%var_13043, dtype="float32") /* ty=Tensor[(360), float32] */;
    %211 = reshape(%209, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %212 = reshape(%210, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
    %213 = @func_8161(%211, %212) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
    %214 = exp(%208) /* ty=Tensor[(16, 15, 11), float32] */;
    %215 = %213.2;
    (%214, %215, meta[relay.Constant][16] /* ty=Tensor[(140), uint8] */, %var_13043)
  };
  %216(%var_13047) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_10018(%var_10016: Tensor[(13, 2, 16), float32]) -> (Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
  @func_10015(%var_10016) /* ty=(Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_12783(%var_12781: Tensor[(11, 5, 6), float32], %var_12782: Tensor[(364), float32]) -> (Tensor[(11, 5, 6), float32], Tensor[(13, 4, 7), float32], Tensor[(364), float32], Tensor[(4, 16, 3), float64]) {
  @func_12779(%var_12781, %var_12782) /* ty=(Tensor[(11, 5, 6), float32], Tensor[(13, 4, 7), float32], Tensor[(364), float32], Tensor[(4, 16, 3), float64]) */
}

def @func_20919(%var_20852: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(8, 15, 3), bool], Tensor[(4, 16, 3), float64]) {
  %217 = @func_19163() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %218 = @func_19180() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) */;
  %219 = cast(%var_20852, dtype="float32") /* ty=Tensor[(360), float32] */;
  %220 = cast(%var_20852, dtype="float32") /* ty=Tensor[(360), float32] */;
  %221 = reshape(%219, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %222 = reshape(%220, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %223 = @func_583(%221, %222) /* ty=Tensor[(8, 15, 3), float32] */;
  %224 = cast(%var_20852, dtype="bool") /* ty=Tensor[(360), bool] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %229 = %217.0;
  %230 = %218.0;
  %231 = less_equal(%226, %227) /* ty=Tensor[(8, 15, 3), bool] */;
  %232 = %228.0;
  (%229, %230, %231, %232)
}

def @func_15457(%var_15456: Tensor[(4, 16, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), int32], Tensor[(54), int64], Tensor[(624), uint32], Tensor[(112), float32], Tensor[(2, 2, 4), float64], Tensor[(16), bool]) {
  %252 = fn (%var_15407: Tensor[(4, 16, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), int32], Tensor[(54), int64], Tensor[(624), uint32], Tensor[(112), float32], Tensor[(2, 2, 4), float64], Tensor[(16), bool]) {
    %233 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %234 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %235 = %234.0;
    %236 = cast(%var_15407, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
    %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %238 = cast(%235, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
    %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %240 = cast(meta[relay.Constant][17] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %241 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %242 = reshape(%240, newshape=[624]) /* ty=Tensor[(624), uint32] */;
    %243 = reshape(%241, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %244 = @func_11959(%242, %243) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
    %245 = cast(meta[relay.Constant][19] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
    %246 = reshape(%245, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), bool] */;
    %247 = @func_14796(%246) /* ty=(Tensor[(2, 2, 4), float64],) */;
    %248 = %233.0;
    %249 = logical_xor(%238, %239) /* ty=Tensor[(4, 16, 3), int32] */;
    %250 = %244.2;
    %251 = %247.0;
    (%248, %249, %250, meta[relay.Constant][17] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][18] /* ty=Tensor[(112), float32] */, %251, meta[relay.Constant][19] /* ty=Tensor[(16), bool] */)
  };
  %252(%var_15456) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), int32], Tensor[(54), int64], Tensor[(624), uint32], Tensor[(112), float32], Tensor[(2, 2, 4), float64], Tensor[(16), bool]) */
}

def @func_16180() -> (Tensor[(4, 16, 3), float64],) {
  %254 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %253 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
    (%253,)
  };
  %254() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_18602(%var_18583: Tensor[(1008), bool]) -> (Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(16, 15, 11), float32]) {
  %255 = cast(meta[relay.Constant][20] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %256 = cast(%var_18583, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %257 = reshape(%255, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
  %258 = reshape(%256, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %259 = @func_938(%257, %258) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %260 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %262 = %259.1;
  %263 = acos(%261) /* ty=Tensor[(16, 15, 11), float32] */;
  (%262, meta[relay.Constant][20] /* ty=Tensor[(240), float32] */, %var_18583, %263)
}

def @func_17193(%var_17086: Tensor[(8, 13, 15), float64], %var_17125: Tensor[(156), float64], %var_17178: Tensor[(35), float64]) -> (Tensor[(4, 16, 3), float64], Tensor[(8, 13, 15), int8], Tensor[(2, 13, 6), float32], Tensor[(156), bool], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64], Tensor[(13, 15, 9), uint64], Tensor[(1755), uint64]) {
  %264 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %265 = cast(%var_17086, dtype="float64") /* ty=Tensor[(8, 13, 15), float64] */;
  %266 = sigmoid(%265) /* ty=Tensor[(8, 13, 15), float64] */;
  %267 = cast(%var_17086, dtype="int8") /* ty=Tensor[(8, 13, 15), int8] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%266, dtype="int8") /* ty=Tensor[(8, 13, 15), int8] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %271 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %272 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %273 = reshape(%271, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %274 = reshape(%272, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %275 = @func_9796(%273, %274) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %276 = cast(%var_17125, dtype="bool") /* ty=Tensor[(156), bool] */;
  %277 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(156), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %278 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), float64] */, dtype="bool") /* ty=Tensor[(156), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?), bool] */;
  %280 = cast(2.3856f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %281 = cast(%var_17178, dtype="float64") /* ty=Tensor[(35), float64] */;
  %282 = reshape(%280, newshape=[]) /* ty=float64 */;
  %283 = reshape(%281, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %284 = cast(meta[relay.Constant][22] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %285 = cast(meta[relay.Constant][22] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %286 = reshape(%284, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %287 = reshape(%285, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %288 = %264.0;
  %289 = add(%269, %270) /* ty=Tensor[(8, 13, 15), int8] */;
  %290 = %275.1;
  %291 = equal(%278, %279) /* ty=Tensor[(156), bool] */;
  %292 = @func_8056(%282, %283) /* ty=Tensor[(7, 5, ?), int32] */;
  %293 = @func_8035(%286, %287) /* ty=Tensor[(13, 15, 9), uint64] */;
  (%288, %289, %290, %291, %292, 2.3856f64 /* ty=float64 */, %var_17178, %293, meta[relay.Constant][22] /* ty=Tensor[(1755), uint64] */)
}

def @func_20205(%var_20203: Tensor[(5, 14, 3), float32]) -> (Tensor[(5, 14, 3), float32],) {
  @func_20202(%var_20203) /* ty=(Tensor[(5, 14, 3), float32],) */
}

def @func_17796() -> (Tensor[(16, 15, 11), float64],) {
  @func_17794() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_11133() -> (Tensor[(16, 15, 11), float32],) {
  %294 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
  %295 = tan(%294) /* ty=Tensor[(16, 15, 11), float32] */;
  (%295,)
}

def @func_15949() -> Tensor[(16, 15, 11), float32] {
  @func_15947() /* ty=Tensor[(16, 15, 11), float32] */
}

def @func_14608(%var_14603: Tensor[(2100), float32], %var_14604: Tensor[(16, 15, 11), float64], %var_14605: Tensor[(360), float32], %var_14606: Tensor[(624), uint32], %var_14607: Tensor[(112), float32]) -> (Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
  %322 = fn (%var_14530: Tensor[(2100), float32], %var_14546: Tensor[(16, 15, 11), float64], %var_14566: Tensor[(360), float32], %var_14586: Tensor[(624), uint32], %var_14587: Tensor[(112), float32]) -> (Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
    %296 = cast(%var_14530, dtype="float32") /* ty=Tensor[(2100), float32] */;
    %297 = reshape(%296, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float32] */;
    %298 = @func_3339(%297) /* ty=Tensor[(14, 10, 15), float32] */;
    %299 = cast(%var_14530, dtype="int32") /* ty=Tensor[(2100), int32] */;
    %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
    %301 = cast(%298, dtype="int32") /* ty=Tensor[(14, 10, 15), int32] */;
    %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %303 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
    %304 = cast(%var_14546, dtype="int64") /* ty=Tensor[(16, 15, 11), int64] */;
    %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%303, dtype="int64") /* ty=Tensor[(16, 15, 11), int64] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %308 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %309 = cast(%var_14566, dtype="float32") /* ty=Tensor[(360), float32] */;
    %310 = reshape(%308, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %311 = reshape(%309, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
    %312 = @func_8161(%310, %311) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
    %313 = cast(%var_14586, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %314 = cast(%var_14587, dtype="float32") /* ty=Tensor[(112), float32] */;
    %315 = reshape(%313, newshape=[624]) /* ty=Tensor[(624), uint32] */;
    %316 = reshape(%314, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %317 = @func_11959(%315, %316) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
    %318 = logical_xor(%301, %302) /* ty=Tensor[(14, 10, 15), int32] */;
    %319 = minimum(%306, %307) /* ty=Tensor[(16, 15, 11), int64] */;
    %320 = %312.0;
    %321 = %317.5;
    (%318, %319, %320, meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, %var_14566, %321, %var_14586, %var_14587)
  };
  %322(%var_14603, %var_14604, %var_14605, %var_14606, %var_14607) /* ty=(Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) */
}

def @func_12153(%var_12149: uint32, %var_12150: Tensor[(168), uint32], %var_12151: Tensor[(360), float32], %var_12152: Tensor[(91, 6), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(6, 7, 13), int64]) {
  %342 = fn (%var_12131: uint32, %var_12132: Tensor[(168), uint32], %var_12133: Tensor[(360), float32], %var_12136: Tensor[(91, 6), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(6, 7, 13), int64]) {
    %323 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %324 = cast(%var_12131, dtype="uint32") /* ty=uint32 */;
    %325 = cast(%var_12132, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %326 = cast(%var_12133, dtype="float32") /* ty=Tensor[(360), float32] */;
    %327 = reshape(%324, newshape=[]) /* ty=uint32 */;
    %328 = reshape(%325, newshape=[168]) /* ty=Tensor[(168), uint32] */;
    %329 = reshape(%326, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %330 = @func_11510(%327, %328, %329) /* ty=(Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %331 = cast(%var_12136, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %332 = reshape(%331, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %333 = @func_11351(%332) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) */;
    %334 = %333.1;
    %335 = cast(%var_12136, dtype="int64") /* ty=Tensor[(91, 6), int64] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%334, dtype="int64") /* ty=Tensor[(6, 7, 13), int64] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %339 = %323.0;
    %340 = %330.1;
    %341 = minimum(%337, %338) /* ty=Tensor[(6, 7, 13), int64] */;
    (%339, %340, %var_12131, %var_12132, %var_12133, %341)
  };
  %342(%var_12149, %var_12150, %var_12151, %var_12152) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(6, 7, 13), int64]) */
}

def @func_843(%var_841: Tensor[(14, 6, 12), bool], %var_842: Tensor[(14, 6, 12), bool]) -> Tensor[(14, 6, 12), bool] {
  @func_839(%var_841, %var_842) /* ty=Tensor[(14, 6, 12), bool] */
}

def @func_6585(%var_6582: Tensor[(6, 7, 13), float32]) -> Tensor[(6, 7, 13), float32] {
  %343 = cast(%var_6582, dtype="float32") /* ty=Tensor[(6, 7, 13), float32] */;
  log(%343) /* ty=Tensor[(6, 7, 13), float32] */
}

def @func_7092(%var_7090: Tensor[(13, 2, 7), int64], %var_7091: Tensor[(13, 2, 7), int64]) -> (Tensor[(13, 2, 7), int64],) {
  %349 = fn (%var_7082: Tensor[(13, 2, 7), int64], %var_7083: Tensor[(13, 2, 7), int64]) -> (Tensor[(13, 2, 7), int64],) {
    %344 = cast(%var_7083, dtype="int64") /* ty=Tensor[(13, 2, 7), int64] */;
    %345 = shape_of(%var_7082, dtype="int32") /* ty=Tensor[(3), int32] */;
    %346 = cast(%var_7082, dtype="int64") /* ty=Tensor[(13, 2, 7), int64] */;
    %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %348 = right_shift(%346, %347) /* ty=Tensor[(13, 2, 7), int64] */;
    (%348,)
  };
  %349(%var_7090, %var_7091) /* ty=(Tensor[(13, 2, 7), int64],) */
}

def @func_15816() -> (Tensor[(16, 15, 11), float32],) {
  @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */
}

def @func_20273() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64], Tensor[(16, 15, 11), float64]) {
  %350 = @func_16179() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %351 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %352 = @func_16678() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) */;
  %353 = %350.0;
  %354 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  %355 = %351.0;
  %356 = %352.1;
  (%353, %354, %355, %356)
}

def @func_5785(%var_5784: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
  %358 = fn (%var_5772: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
    %357 = cast(%var_5772, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
    acosh(%357) /* ty=Tensor[(9, 2, 9), float64] */
  };
  %358(%var_5784) /* ty=Tensor[(9, 2, 9), float64] */
}

def @func_13215() -> (Tensor[(3, 8, 5), float64],) {
  %359 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  (%359,)
}

def @func_15130(%var_15127: Tensor[(16, 15, 11), float64], %var_15128: Tensor[(210, 1), uint64], %var_15129: Tensor[(1, 1008), bool]) -> (Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) {
  @func_15125(%var_15127, %var_15128, %var_15129) /* ty=(Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) */
}

def @func_18213() -> (Tensor[(16, 15, 11), float32],) {
  @func_18211() /* ty=(Tensor[(16, 15, 11), float32],) */
}

def @func_11188(%var_11187: Tensor[(6, 60), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(8, 15, 3), float32], Tensor[(6, 60), float32]) {
  %367 = fn (%var_11181: Tensor[(6, 60), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(8, 15, 3), float32], Tensor[(6, 60), float32]) {
    %360 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %361 = cast(%var_11181, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
    %362 = cast(%var_11181, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
    %363 = reshape(%361, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %364 = reshape(%362, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %365 = %360.0;
    %366 = @func_583(%363, %364) /* ty=Tensor[(8, 15, 3), float32] */;
    (%365, %366, %var_11181)
  };
  %367(%var_11187) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(8, 15, 3), float32], Tensor[(6, 60), float32]) */
}

def @func_20497() -> (Tensor[(16, 15, 11), float64],) {
  %369 = fn () -> (Tensor[(16, 15, 11), float64],) {
    %368 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
    (%368,)
  };
  %369() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_18511() -> (Tensor[(16, 15, 11), float32], Tensor[(3, 8, 5), float64], Tensor[(624), uint32]) {
  %375 = fn () -> (Tensor[(16, 15, 11), float32], Tensor[(3, 8, 5), float64], Tensor[(624), uint32]) {
    %370 = cast(meta[relay.Constant][25] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
    %371 = reshape(%370, newshape=[624]) /* ty=Tensor[(624), uint32] */;
    %372 = @func_15843(%371) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) */;
    %373 = @func_15947() /* ty=Tensor[(16, 15, 11), float32] */;
    %374 = %372.0;
    (%373, %374, meta[relay.Constant][25] /* ty=Tensor[(624), uint32] */)
  };
  %375() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(3, 8, 5), float64], Tensor[(624), uint32]) */
}

def @func_17794() -> (Tensor[(16, 15, 11), float64],) {
  %376 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %377 = %376.0;
  (%377,)
}

def @func_11514(%var_11511: uint32, %var_11512: Tensor[(168), uint32], %var_11513: Tensor[(360), float32]) -> (Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  %395 = fn (%var_11491: uint32, %var_11492: Tensor[(168), uint32], %var_11500: Tensor[(360), float32]) -> (Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
    %378 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 5), float64] */;
    %379 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 14, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 5), float64] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %382 = cast(%var_11491, dtype="uint32") /* ty=uint32 */;
    %383 = cast(%var_11492, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %384 = reshape(%382, newshape=[]) /* ty=uint32 */;
    %385 = reshape(%383, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
    %386 = @func_9313(%384, %385) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
    %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %388 = cast(%var_11500, dtype="float32") /* ty=Tensor[(360), float32] */;
    %389 = reshape(%387, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %390 = reshape(%388, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
    %391 = @func_8161(%389, %390) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
    %392 = mod(%380, %381) /* ty=Tensor[(6, 14, 5), float64] */;
    %393 = %386.2;
    %394 = %391.2;
    (%392, %393, %var_11491, %var_11492, %394, meta[relay.Constant][28] /* ty=Tensor[(140), uint8] */, %var_11500)
  };
  %395(%var_11511, %var_11512, %var_11513) /* ty=(Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_11607() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  %396 = cast(meta[relay.Constant][29] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %397 = reshape(%396, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
  %398 = @func_9639(%397) /* ty=(Tensor[(4, 16, 3), float64],) */;
  %399 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
  %400 = %398.0;
  (%399, %400, meta[relay.Constant][29] /* ty=Tensor[(192, 1), float64] */)
}

def @func_16745(%var_16744: Tensor[(420), bool]) -> (Tensor[(30), bool], Tensor[(5, 6, 14), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
  %411 = fn (%var_16722: Tensor[(420), bool]) -> (Tensor[(30), bool], Tensor[(5, 6, 14), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
    %401 = @func_13864() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) */;
    %402 = %401.2;
    %403 = cast(%402, dtype="bool") /* ty=Tensor[(30), bool] */;
    %404 = cast(%var_16722, dtype="bool") /* ty=Tensor[(420), bool] */;
    %405 = cast(meta[relay.Constant][30] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %406 = reshape(%403, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), bool] */;
    %407 = reshape(%404, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), bool] */;
    %408 = reshape(%405, newshape=[12, 84]) /* ty=Tensor[(12, 84), bool] */;
    %409 = @func_13377(%406, %407, %408) /* ty=(Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) */;
    %410 = %409.0;
    (%402, %410, %var_16722, meta[relay.Constant][30] /* ty=Tensor[(1008), bool] */)
  };
  %411(%var_16744) /* ty=(Tensor[(30), bool], Tensor[(5, 6, 14), bool], Tensor[(420), bool], Tensor[(1008), bool]) */
}

def @func_15543() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  @func_15541() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_14663(%var_14647: Tensor[(1, 546), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) {
  %412 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %413 = cast(%var_14647, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %414 = reshape(%413, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float32] */;
  %415 = %412.0;
  %416 = @func_6585(%414) /* ty=Tensor[(6, 7, 13), float32] */;
  %417 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
  (%415, %416, %var_14647, %417)
}

def @func_19927(%var_19926: Tensor[(6, 1, 4), float32]) -> (Tensor[(6, 1, 4), float64], Tensor[(6, 1, 4), float64]) {
  %424 = fn (%var_19901: Tensor[(6, 1, 4), float32]) -> (Tensor[(6, 1, 4), float64], Tensor[(6, 1, 4), float64]) {
    %418 = cast(%var_19901, dtype="float32") /* ty=Tensor[(6, 1, 4), float32] */;
    %419 = erf(%418) /* ty=Tensor[(6, 1, 4), float32] */;
    %420 = cast(%419, dtype="float64") /* ty=Tensor[(6, 1, 4), float64] */;
    %421 = cast(%419, dtype="float64") /* ty=Tensor[(6, 1, 4), float64] */;
    %422 = exp(%420) /* ty=Tensor[(6, 1, 4), float64] */;
    %423 = cosh(%421) /* ty=Tensor[(6, 1, 4), float64] */;
    (%422, %423)
  };
  %424(%var_19926) /* ty=(Tensor[(6, 1, 4), float64], Tensor[(6, 1, 4), float64]) */
}

def @func_16118(%var_16116: Tensor[(4, 16, 3), float64]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) {
  @func_16115(%var_16116) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) */
}

def @func_17468() -> (Tensor[(16, 15, 11), float32],) {
  @func_17466() /* ty=(Tensor[(16, 15, 11), float32],) */
}

def @func_14899() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  @func_14897() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_17968() -> (Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) {
  %425 = cast(meta[relay.Constant][31] /* ty=Tensor[(20, 120), uint32] */, dtype="uint32") /* ty=Tensor[(20, 120), uint32] */;
  %426 = cast(meta[relay.Constant][31] /* ty=Tensor[(20, 120), uint32] */, dtype="uint32") /* ty=Tensor[(20, 120), uint32] */;
  %427 = reshape(%425, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), uint32] */;
  %428 = reshape(%426, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), uint32] */;
  %429 = @func_13473(%427, %428) /* ty=Tensor[(16, 15, 10), uint32] */;
  %430 = cast(%429, dtype="uint64") /* ty=Tensor[(16, 15, 10), uint64] */;
  %431 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(20, 120), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(meta[relay.Constant][31] /* ty=Tensor[(20, 120), uint32] */, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %434 = @func_13740() /* ty=Tensor[(16, 15, 11), float64] */;
  %435 = maximum(%432, %433) /* ty=Tensor[(20, 120), uint64] */;
  (%434, %435)
}

def @func_20643() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(14, 144), float64], Tensor[(360), float32]) {
  %445 = fn () -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(14, 144), float64], Tensor[(360), float32]) {
    %436 = @func_20496() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %437 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 144), float64] */, dtype="float64") /* ty=Tensor[(14, 144), float64] */;
    %438 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %439 = reshape(%437, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
    %440 = reshape(%438, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %441 = @func_16502(%439, %440) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) */;
    %442 = @func_13643() /* ty=Tensor[(16, 15, 11), float64] */;
    %443 = %436.0;
    %444 = %441.5;
    (%442, %443, %444, meta[relay.Constant][32] /* ty=Tensor[(14, 144), float64] */, meta[relay.Constant][33] /* ty=Tensor[(360), float32] */)
  };
  %445() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(14, 144), float64], Tensor[(360), float32]) */
}

def @func_15508() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %446 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %447 = %446.0;
  %448 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
  (%447, %448)
}

def @func_20668() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  @func_20666() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_13801() -> (Tensor[(4, 16, 3), float32],) {
  %449 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %450 = %449.1;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %452 = sqrt(%451) /* ty=Tensor[(4, 16, 3), float32] */;
  (%452,)
}

def @func_17271(%var_17244: Tensor[(16), bool]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) {
  %453 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %454 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %455 = cast(%var_17244, dtype="bool") /* ty=Tensor[(16), bool] */;
  %456 = reshape(%455, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), bool] */;
  %457 = @func_14796(%456) /* ty=(Tensor[(2, 2, 4), float64],) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
  %460 = cast(meta[relay.Constant][34] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %461 = cast(meta[relay.Constant][34] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %462 = reshape(%460, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %463 = reshape(%461, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %464 = @func_9796(%462, %463) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %465 = %453.1;
  %466 = %454.0;
  %467 = asin(%459) /* ty=Tensor[(2, 2, 4), float32] */;
  %468 = %464.1;
  (%465, %466, %var_17244, %467, %468, meta[relay.Constant][34] /* ty=Tensor[(156), float64] */)
}

def @func_18036(%var_18034: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float32], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32]) {
  %469 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %470 = cast(meta[relay.Constant][35] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %471 = cast(%var_18034, dtype="float32") /* ty=Tensor[(360), float32] */;
  %472 = reshape(%470, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %473 = reshape(%471, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %474 = @func_8161(%472, %473) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %475 = %469.0;
  %476 = %474.0;
  (%475, %476, meta[relay.Constant][35] /* ty=Tensor[(140), uint8] */, %var_18034)
}

def @func_14024() -> (Tensor[(16, 15, 11), float32], Tensor[(13, 2, 16), float32], Tensor[(2, 208), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
  %487 = fn () -> (Tensor[(16, 15, 11), float32], Tensor[(13, 2, 16), float32], Tensor[(2, 208), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
    %477 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %478 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 208), float32] */, dtype="float32") /* ty=Tensor[(2, 208), float32] */;
    %479 = reshape(%478, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float32] */;
    %480 = @func_10015(%479) /* ty=(Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %481 = cast(meta[relay.Constant][37] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %482 = reshape(%481, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %483 = @func_13046(%482) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %484 = %477.0;
    %485 = %480.0;
    %486 = %483.1;
    (%484, %485, meta[relay.Constant][36] /* ty=Tensor[(2, 208), float32] */, %486, meta[relay.Constant][37] /* ty=Tensor[(360), float32] */)
  };
  %487() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(13, 2, 16), float32], Tensor[(2, 208), float32], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_8387(%var_8384: Tensor[(3, 13, 16), uint32], %var_8385: Tensor[(3, 13, 16), uint32], %var_8386: Tensor[(9, 6), int64]) -> (Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) {
  @func_8382(%var_8384, %var_8385, %var_8386) /* ty=(Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) */
}

def @func_9642(%var_9640: Tensor[(4, 16, 3), float64]) -> (Tensor[(4, 16, 3), float64],) {
  @func_9639(%var_9640) /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_20666() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %488 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %489 = @func_17218() /* ty=Tensor[(16, 15, 11), float64] */;
  (%488, %489)
}

def @func_14045() -> (Tensor[(4, 16, 3), float64],) {
  %490 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%490,)
}

def @func_20193() -> Tensor[(192, 1), float64] {
  @func_20191() /* ty=Tensor[(192, 1), float64] */
}

def @func_10015(%var_9998: Tensor[(13, 2, 16), float32]) -> (Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) {
  %491 = cast(%var_9998, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %492 = cast(meta[relay.Constant][38] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %494 = cast(meta[relay.Constant][39] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %495 = reshape(%492, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %496 = reshape(%493, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), uint8] */;
  %497 = reshape(%494, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %498 = @func_6561(%495, %496, %497) /* ty=(Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %499 = sigmoid(%491) /* ty=Tensor[(13, 2, 16), float32] */;
  %500 = %498.2;
  (%499, %500, meta[relay.Constant][38] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][39] /* ty=Tensor[(360), float32] */)
}

def @func_14720(%var_14718: Tensor[(39), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(1, 3, 13), float32], Tensor[(39), float64]) {
  @func_14717(%var_14718) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(1, 3, 13), float32], Tensor[(39), float64]) */
}

def @func_17220() -> Tensor[(16, 15, 11), float64] {
  @func_17218() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_20140(%var_20135: Tensor[(2, 7, 2), float32], %var_20136: Tensor[(2, 7, 2), float32], %var_20137: Tensor[(780), int32], %var_20138: int8, %var_20139: Tensor[(168), uint32]) -> (Tensor[(2, 7, 2), float32], Tensor[(14, 6, 12), bool], Tensor[(780), int32], Tensor[(360), float32], Tensor[(2016), float64], Tensor[(360), float32], Tensor[(1, 13, 2), bool], int8, Tensor[(26), int8], Tensor[(60, 1008), int8], uint32, Tensor[(168), uint32]) {
  %536 = fn (%var_20095: Tensor[(2, 7, 2), float32], %var_20096: Tensor[(2, 7, 2), float32], %var_20106: Tensor[(780), int32], %var_20119: int8, %var_20132: Tensor[(168), uint32]) -> (Tensor[(2, 7, 2), float32], Tensor[(14, 6, 12), bool], Tensor[(780), int32], Tensor[(360), float32], Tensor[(2016), float64], Tensor[(360), float32], Tensor[(1, 13, 2), bool], int8, Tensor[(26), int8], Tensor[(60, 1008), int8], uint32, Tensor[(168), uint32]) {
    %501 = cast(%var_20096, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
    %502 = shape_of(%var_20095, dtype="int32") /* ty=Tensor[(3), int32] */;
    %503 = cast(%var_20095, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
    %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %505 = cast(meta[relay.Constant][40] /* ty=Tensor[(60, 1), int32] */, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
    %506 = cast(%var_20106, dtype="int32") /* ty=Tensor[(780), int32] */;
    %507 = cast(meta[relay.Constant][41] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %508 = reshape(%505, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
    %509 = reshape(%506, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
    %510 = reshape(%507, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %511 = @func_8877(%508, %509, %510) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
    %512 = cast(meta[relay.Constant][42] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %513 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %514 = reshape(%512, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %515 = reshape(%513, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %516 = @func_12521(%514, %515) /* ty=(Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %517 = cast(%var_20119, dtype="int8") /* ty=int8 */;
    %518 = cast(meta[relay.Constant][44] /* ty=Tensor[(26), int8] */, dtype="int8") /* ty=Tensor[(26), int8] */;
    %519 = reshape(%517, newshape=[]) /* ty=int8 */;
    %520 = reshape(%518, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), int8] */;
    %521 = cast(meta[relay.Constant][40] /* ty=Tensor[(60, 1), int32] */, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
    %522 = cast(meta[relay.Constant][41] /* ty=Tensor[(1008), bool] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
    %523 = cast(%var_20119, dtype="uint32") /* ty=uint32 */;
    %524 = cast(%var_20132, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %525 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %526 = reshape(%523, newshape=[]) /* ty=uint32 */;
    %527 = reshape(%524, newshape=[168]) /* ty=Tensor[(168), uint32] */;
    %528 = reshape(%525, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %529 = @func_11653(%526, %527, %528) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
    %530 = power(%503, %504) /* ty=Tensor[(2, 7, 2), float32] */;
    %531 = %511.1;
    %532 = %516.5;
    %533 = @func_19698(%519, %520) /* ty=Tensor[(1, 13, 2), bool] */;
    %534 = logical_xor(%521, %522) /* ty=Tensor[(60, 1008), int8] */;
    %535 = %529.1;
    (%530, %531, %var_20106, %532, meta[relay.Constant][42] /* ty=Tensor[(2016), float64] */, meta[relay.Constant][43] /* ty=Tensor[(360), float32] */, %533, %var_20119, meta[relay.Constant][44] /* ty=Tensor[(26), int8] */, %534, %535, %var_20132)
  };
  %536(%var_20135, %var_20136, %var_20137, %var_20138, %var_20139) /* ty=(Tensor[(2, 7, 2), float32], Tensor[(14, 6, 12), bool], Tensor[(780), int32], Tensor[(360), float32], Tensor[(2016), float64], Tensor[(360), float32], Tensor[(1, 13, 2), bool], int8, Tensor[(26), int8], Tensor[(60, 1008), int8], uint32, Tensor[(168), uint32]) */
}

def @func_20275() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64], Tensor[(16, 15, 11), float64]) {
  @func_20273() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_8059(%var_8057: float64, %var_8058: Tensor[(7, 5, 1), float64]) -> Tensor[(7, 5, ?), int32] {
  %544 = fn (%var_8040: float64, %var_8041: Tensor[(7, 5, 1), float64]) -> Tensor[(7, 5, ?), int32] {
    %537 = cast(%var_8040, dtype="float64") /* ty=float64 */;
    %538 = cast(%var_8041, dtype="float64") /* ty=Tensor[(7, 5, 1), float64] */;
    %539 = floor_divide(%537, %538) /* ty=Tensor[(7, 5, 1), float64] */;
    %540 = cast(%var_8041, dtype="int32") /* ty=Tensor[(7, 5, 1), int32] */;
    %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %542 = cast(%539, dtype="int32") /* ty=Tensor[(7, 5, 1), int32] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    left_shift(%542, %543) /* ty=Tensor[(7, 5, ?), int32] */
  };
  %544(%var_8057, %var_8058) /* ty=Tensor[(7, 5, ?), int32] */
}

def @func_13741() -> Tensor[(16, 15, 11), float64] {
  %546 = fn () -> Tensor[(16, 15, 11), float64] {
    %545 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %545.0
  };
  %546() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_14290(%var_14284: Tensor[(195, 9), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) {
  %547 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %548 = cast(%var_14284, dtype="uint64") /* ty=Tensor[(195, 9), uint64] */;
  %549 = cast(%var_14284, dtype="uint64") /* ty=Tensor[(195, 9), uint64] */;
  %550 = reshape(%548, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %551 = reshape(%549, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), uint64] */;
  %552 = %547.0;
  %553 = @func_8035(%550, %551) /* ty=Tensor[(13, 15, 9), uint64] */;
  (%552, %553, %var_14284)
}

def @func_3998(%var_3996: uint16, %var_3997: Tensor[(16, 9, 1), uint16]) -> (Tensor[(16, 9, 1), uint16], Tensor[(16, 9, 1), float64]) {
  @func_3994(%var_3996, %var_3997) /* ty=(Tensor[(16, 9, 1), uint16], Tensor[(16, 9, 1), float64]) */
}

def @func_11478() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) {
  %560 = fn () -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) {
    %554 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %555 = cast(meta[relay.Constant][45] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %556 = reshape(%555, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
    %557 = @func_9639(%556) /* ty=(Tensor[(4, 16, 3), float64],) */;
    %558 = %554.0;
    %559 = %557.0;
    (%558, %559, meta[relay.Constant][45] /* ty=Tensor[(192), float64] */)
  };
  %560() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */
}

def @func_19872(%var_19871: Tensor[(1344), int16]) -> (Tensor[(16, 15, 11), float32], Tensor[(12, 14, 8), bool], Tensor[(1344), int16]) {
  %565 = fn (%var_19868: Tensor[(1344), int16]) -> (Tensor[(16, 15, 11), float32], Tensor[(12, 14, 8), bool], Tensor[(1344), int16]) {
    %561 = cast(%var_19868, dtype="int16") /* ty=Tensor[(1344), int16] */;
    %562 = reshape(%561, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
    %563 = @func_15947() /* ty=Tensor[(16, 15, 11), float32] */;
    %564 = @func_16863(%562) /* ty=Tensor[(12, 14, 8), bool] */;
    (%563, %564, %var_19868)
  };
  %565(%var_19871) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(12, 14, 8), bool], Tensor[(1344), int16]) */
}

def @func_938(%var_899: Tensor[(16, 15, 1), float32], %var_920: Tensor[(1008), bool]) -> (Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
  %566 = cast(%var_899, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  %567 = sqrt(%566) /* ty=Tensor[(16, 15, 1), float32] */;
  %568 = cast(%var_899, dtype="int64") /* ty=Tensor[(16, 15, 1), int64] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="int64") /* ty=Tensor[(16, 15, 1), int64] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %572 = bitwise_and(%570, %571) /* ty=Tensor[(16, 15, ?), int64] */;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(16, 15, ?), float64] */;
  %574 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%567, dtype="float64") /* ty=Tensor[(16, 15, 1), float64] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %577 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %578 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %579 = reshape(%577, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %580 = reshape(%578, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %581 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %582 = cast(%var_920, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %583 = reshape(%581, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %584 = reshape(%582, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %585 = divide(%575, %576) /* ty=Tensor[(16, 15, ?), float64] */;
  %586 = @func_839(%579, %580) /* ty=Tensor[(14, 6, 12), bool] */;
  %587 = @func_839(%583, %584) /* ty=Tensor[(14, 6, 12), bool] */;
  (%585, %586, %var_920, %587)
}

def @func_15125(%var_15039: Tensor[(16, 15, 11), float64], %var_15059: Tensor[(210, 1), uint64], %var_15060: Tensor[(1, 1008), bool]) -> (Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) {
  %588 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %589 = cast(%var_15039, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = cast(%var_15059, dtype="uint64") /* ty=Tensor[(210, 1), uint64] */;
  %594 = cast(%var_15059, dtype="uint64") /* ty=Tensor[(210, 1), uint64] */;
  %595 = cast(%var_15060, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
  %596 = reshape(%593, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %597 = reshape(%594, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %598 = reshape(%595, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %599 = @func_7496(%596, %597, %598) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
  %600 = @func_14632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %603 = asin(%602) /* ty=Tensor[(4, 16, 3), float32] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %605 = less(%591, %592) /* ty=Tensor[(16, 15, 11), bool] */;
  %606 = %599.3;
  %607 = sin(%604) /* ty=Tensor[(4, 16, 3), float32] */;
  (%605, %606, %var_15059, %var_15060, %607)
}

def @func_15993() -> (Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) {
  @func_15991() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) */
}

def @main(%var_21097: Tensor[(5, 6, 14), float64]) -> Tensor[(5, 6, 14), float64] {
  %608 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %609 = shape_of(%var_21097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%var_21097, dtype="float64") /* ty=Tensor[(5, 6, 14), float64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%610, %611) /* ty=Tensor[(5, 6, 14), float64] */
}

def @func_6588(%var_6586: Tensor[(6, 7, 13), float32]) -> Tensor[(6, 7, 13), float32] {
  @func_6585(%var_6586) /* ty=Tensor[(6, 7, 13), float32] */
}

def @func_14666(%var_14664: Tensor[(1, 546), float32]) -> (Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) {
  @func_14663(%var_14664) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(6, 7, 13), float32], Tensor[(1, 546), float32], Tensor[(4, 16, 3), float64]) */
}

def @func_17906() -> Tensor[(1008), bool] {
  %612 = @func_13864() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) */;
  %612.4
}

def @func_16506(%var_16504: Tensor[(2016, 1), float64], %var_16505: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) {
  @func_16502(%var_16504, %var_16505) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) */
}

def @func_19772() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), bool]) {
  %616 = fn () -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), bool]) {
    %613 = @func_15329() /* ty=(Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) */;
    %614 = @func_13740() /* ty=Tensor[(16, 15, 11), float64] */;
    %615 = %613.0;
    (%614, %615)
  };
  %616() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), bool]) */
}

def @func_10392(%var_10390: Tensor[(7, 12, 2), float64]) -> (Tensor[(7, 12, 2), float64],) {
  @func_10389(%var_10390) /* ty=(Tensor[(7, 12, 2), float64],) */
}

def @func_11351(%var_11341: Tensor[(546), float32]) -> (Tensor[(16, 15, 11), float32], Tensor[(6, 7, 13), float32], Tensor[(546), float32]) {
  %617 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %618 = cast(%var_11341, dtype="float32") /* ty=Tensor[(546), float32] */;
  %619 = reshape(%618, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float32] */;
  %620 = %617.0;
  %621 = @func_6585(%619) /* ty=Tensor[(6, 7, 13), float32] */;
  (%620, %621, %var_11341)
}

def @func_11551() -> Tensor[(16, 15, 11), float64] {
  %622 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %622.0
}

def @func_19937() -> Tensor[(16, 15, 11), float64] {
  %623 = fn () -> Tensor[(16, 15, 11), float64] {
    @func_13740() /* ty=Tensor[(16, 15, 11), float64] */
  };
  %623() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_12830() -> Tensor[(3, 8, 5), float64] {
  %625 = fn () -> Tensor[(3, 8, 5), float64] {
    %624 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 5), float64] */;
    erf(%624) /* ty=Tensor[(3, 8, 5), float64] */
  };
  %625() /* ty=Tensor[(3, 8, 5), float64] */
}

def @func_20970() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %629 = fn () -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
    %626 = @func_16179() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %627 = %626.0;
    %628 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_16060(%var_16029: uint32, %var_16030: Tensor[(168), uint32], %var_16050: Tensor[(150, 14), float32], %var_16051: Tensor[(2640), float64], %var_16052: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 12, 7), uint32], uint32, Tensor[(168), uint32], Tensor[(13, 2, 7), int64], Tensor[(182), int64], Tensor[(112), float32], Tensor[(150, 14), float32], Tensor[(2640), float64], Tensor[(360), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
  %630 = cast(%var_16029, dtype="uint32") /* ty=uint32 */;
  %631 = cast(%var_16030, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %632 = reshape(%630, newshape=[]) /* ty=uint32 */;
  %633 = reshape(%631, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %634 = @func_9313(%632, %633) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %635 = cast(meta[relay.Constant][48] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %636 = cast(meta[relay.Constant][48] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %637 = reshape(%635, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %638 = reshape(%636, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), int64] */;
  %639 = @func_7089(%637, %638) /* ty=(Tensor[(13, 2, 7), int64],) */;
  %640 = cast(%var_16050, dtype="float32") /* ty=Tensor[(150, 14), float32] */;
  %641 = cast(%var_16051, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %642 = cast(%var_16052, dtype="float32") /* ty=Tensor[(360), float32] */;
  %643 = cast(meta[relay.Constant][49] /* ty=Tensor[(624), uint32] */, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %644 = cast(meta[relay.Constant][50] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %645 = reshape(%640, newshape=[2100]) /* ty=Tensor[(2100), float32] */;
  %646 = reshape(%641, newshape=[16, 15, 11]) /* ty=Tensor[(16, 15, 11), float64] */;
  %647 = reshape(%642, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %648 = reshape(%643, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %649 = reshape(%644, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %650 = @func_14602(%645, %646, %647, %648, %649) /* ty=(Tensor[(14, 10, 15), int32], Tensor[(16, 15, 11), int64], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(112), float32], Tensor[(624), uint32], Tensor[(112), float32]) */;
  %651 = @func_12579() /* ty=Tensor[(4, 16, 3), float64] */;
  %652 = %634.0;
  %653 = %639.0;
  %654 = %650.7;
  (%651, %652, %var_16029, %var_16030, %653, meta[relay.Constant][48] /* ty=Tensor[(182), int64] */, %654, %var_16050, %var_16051, %var_16052, meta[relay.Constant][49] /* ty=Tensor[(624), uint32] */, meta[relay.Constant][50] /* ty=Tensor[(112), float32] */)
}

def @func_18573() -> (Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float32]) {
  %659 = fn () -> (Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float32]) {
    %655 = @func_18211() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %656 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %657 = %655.0;
    %658 = %656.0;
    (%657, %658)
  };
  %659() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(16, 15, 11), float32]) */
}

def @func_17908() -> Tensor[(1008), bool] {
  @func_17906() /* ty=Tensor[(1008), bool] */
}

def @func_13643() -> Tensor[(16, 15, 11), float64] {
  @func_11551() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_12094() -> Tensor[(4, 16, 3), float64] {
  %661 = fn () -> Tensor[(4, 16, 3), float64] {
    %660 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
    %660.1
  };
  %661() /* ty=Tensor[(4, 16, 3), float64] */
}

def @func_14924() -> (Tensor[(16, 15, 11), float64], Tensor[(192), float64]) {
  %662 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %663 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %664 = %662.0;
  %665 = %663.2;
  (%664, %665)
}

def @func_16966() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
  @func_16964() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */
}

def @func_12219(%var_12217: Tensor[(78, 2), float64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) {
  @func_12216(%var_12217) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) */
}

def @func_19701(%var_19699: int8, %var_19700: Tensor[(1, 13, 2), int8]) -> Tensor[(1, 13, 2), bool] {
  %668 = fn (%var_19688: int8, %var_19689: Tensor[(1, 13, 2), int8]) -> Tensor[(1, 13, 2), bool] {
    %666 = cast(%var_19688, dtype="bool") /* ty=bool */;
    %667 = cast(%var_19689, dtype="bool") /* ty=Tensor[(1, 13, 2), bool] */;
    greater(%666, %667) /* ty=Tensor[(1, 13, 2), bool] */
  };
  %668(%var_19699, %var_19700) /* ty=Tensor[(1, 13, 2), bool] */
}

def @func_12579() -> Tensor[(4, 16, 3), float64] {
  %669 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %669.0
}

def @func_11609() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */
}

def @func_13199() -> Tensor[(4, 16, 3), float64] {
  @func_13197() /* ty=Tensor[(4, 16, 3), float64] */
}

def @func_16421() -> Tensor[(16, 15, 11), float64] {
  %671 = fn () -> Tensor[(16, 15, 11), float64] {
    %670 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %670.0
  };
  %671() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_17723(%var_17722: Tensor[(192, 6), float64]) -> Tensor[(192, 6), float32] {
  %676 = fn (%var_17716: Tensor[(192, 6), float64]) -> Tensor[(192, 6), float32] {
    %672 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
    %673 = %672.1;
    %674 = cast(%673, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %675 = cast(%var_17716, dtype="float32") /* ty=Tensor[(192, 6), float32] */;
    floor_mod(%674, %675) /* ty=Tensor[(192, 6), float32] */
  };
  %676(%var_17722) /* ty=Tensor[(192, 6), float32] */
}

def @func_11727() -> Tensor[(4, 16, 3), float64] {
  @func_11725() /* ty=Tensor[(4, 16, 3), float64] */
}

def @func_12581() -> Tensor[(4, 16, 3), float64] {
  @func_12579() /* ty=Tensor[(4, 16, 3), float64] */
}

def @func_17007() -> (Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) {
  %677 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %678 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %679 = %677.0;
  %680 = %678.0;
  (%679, %680)
}

def @func_17355(%var_17331: Tensor[(1, 5, 7), float64], %var_17332: Tensor[(8, 5, 7), float64], %var_17347: uint32) -> (Tensor[(8, 5, 7), bool], Tensor[(4, 16, 3), float64], Tensor[(1, 546), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
  %681 = cast(%var_17331, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
  %682 = cast(%var_17332, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %683 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 546), float32] */, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %684 = reshape(%683, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %685 = @func_16640(%684) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(546), float32], Tensor[(3, 13, 16), uint32], Tensor[(624), uint32], Tensor[(54), int64]) */;
  %686 = cast(%var_17347, dtype="uint32") /* ty=uint32 */;
  %687 = cast(meta[relay.Constant][52] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %688 = reshape(%686, newshape=[]) /* ty=uint32 */;
  %689 = reshape(%687, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
  %690 = @func_9313(%688, %689) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
  %691 = greater_equal(%681, %682) /* ty=Tensor[(8, 5, 7), bool] */;
  %692 = %685.1;
  %693 = %690.1;
  (%691, %692, meta[relay.Constant][51] /* ty=Tensor[(1, 546), float32] */, %693, %var_17347, meta[relay.Constant][52] /* ty=Tensor[(168), uint32] */)
}

def @func_13955() -> (Tensor[(16, 15, 11), float64],) {
  %694 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  (%694,)
}

def @func_17538() -> (Tensor[(4, 16, 3), float32], Tensor[(16, 15, 11), float64]) {
  %695 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
  %696 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %697 = %695.0;
  %698 = %696.0;
  (%697, %698)
}

def @func_18605(%var_18603: Tensor[(1008), bool]) -> (Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(16, 15, 11), float32]) {
  @func_18602(%var_18603) /* ty=(Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(16, 15, 11), float32]) */
}

def @func_19294(%var_19293: Tensor[(780), int32]) -> (Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) {
  %712 = fn (%var_19282: Tensor[(780), int32]) -> (Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) {
    %699 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %700 = cast(%var_19282, dtype="int32") /* ty=Tensor[(780), int32] */;
    %701 = cast(meta[relay.Constant][54] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %702 = reshape(%699, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
    %703 = reshape(%700, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
    %704 = reshape(%701, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %705 = @func_8877(%702, %703, %704) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
    %706 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
    %707 = %706.2;
    %708 = cast(%707, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(1008), bool] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %710 = %705.2;
    %711 = floor_divide(%708, %709) /* ty=Tensor[(192, 1008), float32] */;
    (%710, meta[relay.Constant][53] /* ty=Tensor[(60), int32] */, %var_19282, %711)
  };
  %712(%var_19293) /* ty=(Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) */
}

def @func_18260() -> Tensor[(16, 15, 11), float64] {
  %713 = fn () -> Tensor[(16, 15, 11), float64] {
    @func_14685() /* ty=Tensor[(16, 15, 11), float64] */
  };
  %713() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_18166() -> Tensor[(2, 9, 14), float32] {
  @func_18164() /* ty=Tensor[(2, 9, 14), float32] */
}

def @func_18912(%var_18910: float64, %var_18911: Tensor[(624), uint32]) -> (Tensor[(4, 16, 3), float64], float64, Tensor[(35), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(78, 2), float64], Tensor[(156), float64], Tensor[(1008), bool], Tensor[(1008), bool], Tensor[(3, 8, 5), float64], Tensor[(7, 5, 182), float64]) {
  @func_18908(%var_18910, %var_18911) /* ty=(Tensor[(4, 16, 3), float64], float64, Tensor[(35), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(78, 2), float64], Tensor[(156), float64], Tensor[(1008), bool], Tensor[(1008), bool], Tensor[(3, 8, 5), float64], Tensor[(7, 5, 182), float64]) */
}

def @func_11405(%var_11404: Tensor[(9, 1008), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) {
  %725 = fn (%var_11395: Tensor[(9, 1008), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) {
    %714 = @func_11305() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %715 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 1008), bool] */, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
    %716 = cast(meta[relay.Constant][56] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
    %717 = reshape(%715, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %718 = reshape(%716, newshape=[182]) /* ty=Tensor[(182), int64] */;
    %719 = @func_7555(%717, %718) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
    %720 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 1008), bool] */, dtype="uint64") /* ty=Tensor[(1, 1008), uint64] */;
    %721 = cast(%var_11395, dtype="uint64") /* ty=Tensor[(9, 1008), uint64] */;
    %722 = %714.0;
    %723 = %719.7;
    %724 = subtract(%720, %721) /* ty=Tensor[(9, 1008), uint64] */;
    (%722, %723, meta[relay.Constant][56] /* ty=Tensor[(182), int64] */, %724)
  };
  %725(%var_11404) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(182), int64], Tensor[(182), int64], Tensor[(9, 1008), uint64]) */
}

def @func_19841(%var_19840: Tensor[(16), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16), bool]) {
  %732 = fn (%var_19820: Tensor[(16), bool]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16), bool]) {
    %726 = @func_16964() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
    %727 = cast(%var_19820, dtype="bool") /* ty=Tensor[(16), bool] */;
    %728 = reshape(%727, newshape=[16]) /* ty=Tensor[(16), bool] */;
    %729 = @func_17271(%728) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) */;
    %730 = %726.0;
    %731 = %729.0;
    (%730, %731, %var_19820)
  };
  %732(%var_19840) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16), bool]) */
}

def @func_17970() -> (Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) {
  @func_17968() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) */
}

def @func_15619() -> (Tensor[(16, 15, 11), float64],) {
  %735 = fn () -> (Tensor[(16, 15, 11), float64],) {
    %733 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %734 = %733.0;
    (%734,)
  };
  %735() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_17698() -> Tensor[(192, ?), uint32] {
  @func_17696() /* ty=Tensor[(192, ?), uint32] */
}

def @func_17569() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %739 = fn () -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
    %736 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %737 = %736.0;
    %738 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_13067() -> Tensor[(16, 15, 11), float64] {
  %740 = fn () -> Tensor[(16, 15, 11), float64] {
    @func_12665() /* ty=Tensor[(16, 15, 11), float64] */
  };
  %740() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_14989() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) {
  %741 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %742 = @func_14490() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %743 = cast(meta[relay.Constant][57] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %744 = reshape(%743, newshape=[195, 9]) /* ty=Tensor[(195, 9), uint64] */;
  %745 = @func_14290(%744) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) */;
  %746 = %741.0;
  %747 = %742.0;
  %748 = %745.0;
  %749 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%746, %747, %748, meta[relay.Constant][57] /* ty=Tensor[(1755), uint64] */, %749)
}

def @func_18731() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  @func_18729() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_3342(%var_3340: Tensor[(14, 10, 15), float32]) -> Tensor[(14, 10, 15), float32] {
  @func_3339(%var_3340) /* ty=Tensor[(14, 10, 15), float32] */
}

def @func_13532() -> (Tensor[(16, 15, 11), float64],) {
  %750 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  (%750,)
}

def @func_3994(%var_3984: uint16, %var_3985: Tensor[(16, 9, 1), uint16]) -> (Tensor[(16, 9, 1), uint16], Tensor[(16, 9, 1), float64]) {
  %751 = cast(%var_3984, dtype="uint16") /* ty=uint16 */;
  %752 = cast(%var_3985, dtype="uint16") /* ty=Tensor[(16, 9, 1), uint16] */;
  %753 = cast(%var_3985, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %754 = logical_xor(%751, %752) /* ty=Tensor[(16, 9, 1), uint16] */;
  %755 = atanh(%753) /* ty=Tensor[(16, 9, 1), float64] */;
  (%754, %755)
}

def @func_13341() -> Tensor[(16, 15, 11), float64] {
  %756 = fn () -> Tensor[(16, 15, 11), float64] {
    @func_13066() /* ty=Tensor[(16, 15, 11), float64] */
  };
  %756() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_11135() -> (Tensor[(16, 15, 11), float32],) {
  @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */
}

def @func_15330() -> (Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) {
  %768 = fn () -> (Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) {
    %757 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %758 = %757.0;
    %759 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
    %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
    %761 = cast(%758, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
    %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %763 = @func_13215() /* ty=(Tensor[(3, 8, 5), float64],) */;
    %764 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %765 = greater_equal(%761, %762) /* ty=Tensor[(16, 15, 11), bool] */;
    %766 = %763.0;
    %767 = %764.0;
    (%765, %766, %767)
  };
  %768() /* ty=(Tensor[(16, 15, 11), bool], Tensor[(3, 8, 5), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_17059(%var_17057: Tensor[(54), int64]) -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(182), int64], Tensor[(8, 15, 3), float32], Tensor[(54), int64]) {
  @func_17056(%var_17057) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(182), int64], Tensor[(8, 15, 3), float32], Tensor[(54), int64]) */
}

def @func_13534() -> (Tensor[(16, 15, 11), float64],) {
  @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_12666() -> Tensor[(16, 15, 11), float64] {
  %770 = fn () -> Tensor[(16, 15, 11), float64] {
    %769 = @func_12254() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %769.0
  };
  %770() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_17540() -> (Tensor[(4, 16, 3), float32], Tensor[(16, 15, 11), float64]) {
  @func_17538() /* ty=(Tensor[(4, 16, 3), float32], Tensor[(16, 15, 11), float64]) */
}

def @func_13957() -> (Tensor[(16, 15, 11), float64],) {
  @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_14139(%var_14138: Tensor[(312, 2), uint32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) {
  %781 = fn (%var_14103: Tensor[(312, 2), uint32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) {
    %771 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
    %772 = cast(%771, dtype="float32") /* ty=Tensor[(16, 15, 11), float32] */;
    %773 = cast(%var_14103, dtype="uint32") /* ty=Tensor[(312, 2), uint32] */;
    %774 = cast(meta[relay.Constant][59] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %775 = reshape(%773, newshape=[624]) /* ty=Tensor[(624), uint32] */;
    %776 = reshape(%774, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %777 = @func_11959(%775, %776) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
    %778 = @func_13197() /* ty=Tensor[(4, 16, 3), float64] */;
    %779 = log2(%772) /* ty=Tensor[(16, 15, 11), float32] */;
    %780 = %777.1;
    (%778, %779, %780, %var_14103, meta[relay.Constant][59] /* ty=Tensor[(112), float32] */)
  };
  %781(%var_14138) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32], Tensor[(624), uint32], Tensor[(312, 2), uint32], Tensor[(112), float32]) */
}

def @func_15991() -> (Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) {
  %782 = cast(meta[relay.Constant][60] /* ty=Tensor[(42, 6), float32] */, dtype="float32") /* ty=Tensor[(42, 6), float32] */;
  %783 = reshape(%782, newshape=[2, 9, 14]) /* ty=Tensor[(2, 9, 14), float32] */;
  %784 = @func_13244(%783) /* ty=(Tensor[(2, 9, 14), float32],) */;
  %785 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %786 = %784.0;
  (%785, %786, meta[relay.Constant][60] /* ty=Tensor[(42, 6), float32] */)
}

def @func_17009() -> (Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) {
  @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */
}

def @func_12883() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_12044() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
  %791 = fn () -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
    %787 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %788 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %789 = %787.0;
    %790 = %788.0;
    (%789, %790)
  };
  %791() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */
}

def @func_13382(%var_13379: Tensor[(5, 6, 1), bool], %var_13380: Tensor[(5, 6, 14), bool], %var_13381: Tensor[(12, 84), bool]) -> (Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) {
  @func_13377(%var_13379, %var_13380, %var_13381) /* ty=(Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) */
}

def @func_16556(%var_16554: Tensor[(182), int64], %var_16555: Tensor[(4, 16, 3), float64]) -> (Tensor[(156, 1), float64], Tensor[(182), int64], Tensor[(4, 16, 3), int32]) {
  @func_16552(%var_16554, %var_16555) /* ty=(Tensor[(156, 1), float64], Tensor[(182), int64], Tensor[(4, 16, 3), int32]) */
}

def @func_20922(%var_20920: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(8, 15, 3), bool], Tensor[(4, 16, 3), float64]) {
  @func_20919(%var_20920) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(8, 15, 3), bool], Tensor[(4, 16, 3), float64]) */
}

def @func_16865(%var_16864: Tensor[(12, 14, 8), int16]) -> Tensor[(12, 14, 8), bool] {
  %796 = fn (%var_16858: Tensor[(12, 14, 8), int16]) -> Tensor[(12, 14, 8), bool] {
    %792 = cast(%var_16858, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %793 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(12, 14, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 14, 8), int16] */, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%794, %795) /* ty=Tensor[(12, 14, 8), bool] */
  };
  %796(%var_16864) /* ty=Tensor[(12, 14, 8), bool] */
}

def @func_12881() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %797 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  %798 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
  (%797, %798)
}

def @func_14686() -> Tensor[(16, 15, 11), float64] {
  %800 = fn () -> Tensor[(16, 15, 11), float64] {
    %799 = @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */;
    %799.0
  };
  %800() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_18234() -> (Tensor[(16, 15, 11), float64],) {
  @func_18232() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_13817() -> (Tensor[(4, 16, 3), float64],) {
  %802 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %801 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
    (%801,)
  };
  %802() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_20191() -> Tensor[(192, 1), float64] {
  %803 = @func_18455() /* ty=(Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) */;
  %803.0
}

def @func_11657(%var_11654: uint32, %var_11655: Tensor[(168), uint32], %var_11656: Tensor[(360), float32]) -> (Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) {
  %816 = fn (%var_11645: uint32, %var_11646: Tensor[(168), uint32], %var_11647: Tensor[(360), float32]) -> (Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) {
    %804 = cast(%var_11645, dtype="uint32") /* ty=uint32 */;
    %805 = cast(%var_11646, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %806 = cast(%var_11647, dtype="float32") /* ty=Tensor[(360), float32] */;
    %807 = reshape(%804, newshape=[]) /* ty=uint32 */;
    %808 = reshape(%805, newshape=[168]) /* ty=Tensor[(168), uint32] */;
    %809 = reshape(%806, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %810 = @func_11510(%807, %808, %809) /* ty=(Tensor[(6, 14, 5), float64], Tensor[(210), uint64], uint32, Tensor[(168), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %811 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
    %812 = %811.2;
    %813 = cast(%812, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %814 = %810.5;
    %815 = exp(%813) /* ty=Tensor[(192, 1), float32] */;
    (%814, %var_11645, %var_11646, %var_11647, %815)
  };
  %816(%var_11654, %var_11655, %var_11656) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */
}

def @func_18211() -> (Tensor[(16, 15, 11), float32],) {
  %817 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %818 = %817.0;
  (%818,)
}

def @func_3339(%var_3331: Tensor[(14, 10, 15), float32]) -> Tensor[(14, 10, 15), float32] {
  %819 = cast(%var_3331, dtype="float32") /* ty=Tensor[(14, 10, 15), float32] */;
  acosh(%819) /* ty=Tensor[(14, 10, 15), float32] */
}

def @func_17466() -> (Tensor[(16, 15, 11), float32],) {
  %820 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %821 = %820.0;
  (%821,)
}

def @func_20389(%var_20387: Tensor[(13, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(780), int32], Tensor[(192, 1008), float32], Tensor[(195, 9), uint64], Tensor[(1755), uint64], Tensor[(2, 9, 14), float32], Tensor[(192, 1008), float32], Tensor[(1, 3, 13), float32], Tensor[(13, 3), float64]) {
  %822 = @func_17968() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(20, 120), uint64]) */;
  %823 = cast(meta[relay.Constant][62] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %824 = reshape(%823, newshape=[780]) /* ty=Tensor[(780), int32] */;
  %825 = @func_19292(%824) /* ty=(Tensor[(1008), bool], Tensor[(60), int32], Tensor[(780), int32], Tensor[(192, 1008), float32]) */;
  %826 = %825.3;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(192, 1008), float64] */;
  %828 = sqrt(%827) /* ty=Tensor[(192, 1008), float64] */;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %830 = cosh(%829) /* ty=Tensor[(192, 1008), float32] */;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %832 = cast(meta[relay.Constant][63] /* ty=Tensor[(1755), uint64] */, dtype="uint64") /* ty=Tensor[(1755), uint64] */;
  %833 = reshape(%832, newshape=[1755]) /* ty=Tensor[(1755), uint64] */;
  %834 = @func_15791(%833) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(195, 9), uint64], Tensor[(1755), uint64]) */;
  %835 = cast(%826, dtype="bool") /* ty=Tensor[(192, 1008), bool] */;
  %836 = shape_of(%828, dtype="int32") /* ty=Tensor[(2), int32] */;
  %837 = cast(%828, dtype="bool") /* ty=Tensor[(192, 1008), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %839 = greater(%837, %838) /* ty=Tensor[(192, 1008), bool] */;
  %840 = cast(meta[relay.Constant][64] /* ty=Tensor[(192, 1008), bool] */, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %842 = cast(%839, dtype="float32") /* ty=Tensor[(192, 1008), float32] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %844 = cast(%var_20387, dtype="float64") /* ty=Tensor[(13, 3), float64] */;
  %845 = reshape(%844, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %846 = %822.0;
  %847 = rsqrt(%831) /* ty=Tensor[(192, 1008), float32] */;
  %848 = %834.1;
  %849 = @func_18164() /* ty=Tensor[(2, 9, 14), float32] */;
  %850 = floor_mod(%842, %843) /* ty=Tensor[(192, 1008), float32] */;
  %851 = @func_10729(%845) /* ty=Tensor[(1, 3, 13), float32] */;
  (%846, meta[relay.Constant][62] /* ty=Tensor[(780), int32] */, %847, %848, meta[relay.Constant][63] /* ty=Tensor[(1755), uint64] */, %849, %850, %851, %var_20387)
}

def @func_13274(%var_13271: Tensor[(1, 168), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(7, 12, 2), float64], Tensor[(1, 168), float64]) {
  %852 = cast(%var_13271, dtype="float64") /* ty=Tensor[(1, 168), float64] */;
  %853 = reshape(%852, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), float64] */;
  %854 = @func_10389(%853) /* ty=(Tensor[(7, 12, 2), float64],) */;
  %855 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %856 = %854.0;
  (%855, %856, %var_13271)
}

def @func_14492() -> (Tensor[(4, 16, 3), float64],) {
  @func_14490() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_20436() -> (Tensor[(192, 1), float64], Tensor[(192, 1), float64]) {
  %861 = fn () -> (Tensor[(192, 1), float64], Tensor[(192, 1), float64]) {
    %857 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
    %858 = @func_17007() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(192, 1), float64]) */;
    %859 = %857.1;
    %860 = %858.1;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(192, 1), float64], Tensor[(192, 1), float64]) */
}

def @func_583(%var_546: Tensor[(8, 15, 3), float32], %var_547: Tensor[(8, 15, 3), float32]) -> Tensor[(8, 15, 3), float32] {
  %862 = cast(%var_547, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %863 = shape_of(%var_546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%var_546, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%864, %865) /* ty=Tensor[(8, 15, 3), float32] */
}

def @func_13418(%var_13412: Tensor[(35), float64]) -> (Tensor[(1, 3, 13), float32], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64]) {
  %866 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
  %867 = cast(-4.9432f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %868 = cast(%var_13412, dtype="float64") /* ty=Tensor[(35), float64] */;
  %869 = reshape(%867, newshape=[]) /* ty=float64 */;
  %870 = reshape(%868, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %871 = %866.2;
  %872 = @func_8056(%869, %870) /* ty=Tensor[(7, 5, ?), int32] */;
  (%871, %872, -4.9432f64 /* ty=float64 */, %var_13412)
}

def @func_14991() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) {
  @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */
}

def @func_16067(%var_16062: uint32, %var_16063: Tensor[(168), uint32], %var_16064: Tensor[(150, 14), float32], %var_16065: Tensor[(2640), float64], %var_16066: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 12, 7), uint32], uint32, Tensor[(168), uint32], Tensor[(13, 2, 7), int64], Tensor[(182), int64], Tensor[(112), float32], Tensor[(150, 14), float32], Tensor[(2640), float64], Tensor[(360), float32], Tensor[(624), uint32], Tensor[(112), float32]) {
  @func_16060(%var_16062, %var_16063, %var_16064, %var_16065, %var_16066) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(2, 12, 7), uint32], uint32, Tensor[(168), uint32], Tensor[(13, 2, 7), int64], Tensor[(182), int64], Tensor[(112), float32], Tensor[(150, 14), float32], Tensor[(2640), float64], Tensor[(360), float32], Tensor[(624), uint32], Tensor[(112), float32]) */
}

def @func_14376() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  @func_14374() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_12997(%var_12957: Tensor[(16, 7, 2), bool], %var_12972: Tensor[(16, 7, 2), bool]) -> (Tensor[(16, 7, 2), bool], Tensor[(16, 7, 2), uint32], Tensor[(3, 8, 5), float64]) {
  %873 = cast(%var_12957, dtype="bool") /* ty=Tensor[(16, 7, 2), bool] */;
  %874 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(16, 7, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 7, 2), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 2), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %877 = cast(%var_12972, dtype="uint32") /* ty=Tensor[(16, 7, 2), uint32] */;
  %878 = shape_of(%var_12957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%var_12957, dtype="uint32") /* ty=Tensor[(16, 7, 2), uint32] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %881 = logical_or(%875, %876) /* ty=Tensor[(16, 7, 2), bool] */;
  %882 = add(%879, %880) /* ty=Tensor[(16, 7, 2), uint32] */;
  %883 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  (%881, %882, %883)
}

def @func_18990() -> Tensor[(16, 15, 11), float64] {
  @func_18988() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_13217() -> (Tensor[(3, 8, 5), float64],) {
  @func_13215() /* ty=(Tensor[(3, 8, 5), float64],) */
}

def @func_15814() -> (Tensor[(16, 15, 11), float32],) {
  %884 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_20837() -> (Tensor[(4, 16, 3), float64],) {
  %886 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %887 = %886.0;
  (%887,)
}

def @func_20202(%var_20194: Tensor[(5, 14, 3), float32]) -> (Tensor[(5, 14, 3), float32],) {
  %888 = cast(%var_20194, dtype="float32") /* ty=Tensor[(5, 14, 3), float32] */;
  %889 = cos(%888) /* ty=Tensor[(5, 14, 3), float32] */;
  (%889,)
}

def @func_15510() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  @func_15508() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_17406(%var_17404: Tensor[(1, 60), int32], %var_17405: Tensor[(780), int32]) -> (Tensor[(16, 15, 11), float64], Tensor[(13, 10, 6), uint64], Tensor[(1, 60), int32], Tensor[(780), int32], Tensor[(1, 1008), bool]) {
  %899 = fn (%var_17383: Tensor[(1, 60), int32], %var_17384: Tensor[(780), int32]) -> (Tensor[(16, 15, 11), float64], Tensor[(13, 10, 6), uint64], Tensor[(1, 60), int32], Tensor[(780), int32], Tensor[(1, 1008), bool]) {
    %890 = cast(%var_17383, dtype="int32") /* ty=Tensor[(1, 60), int32] */;
    %891 = cast(%var_17384, dtype="int32") /* ty=Tensor[(780), int32] */;
    %892 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 1008), bool] */, dtype="bool") /* ty=Tensor[(1, 1008), bool] */;
    %893 = reshape(%890, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), int32] */;
    %894 = reshape(%891, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int32] */;
    %895 = reshape(%892, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %896 = @func_8877(%893, %894, %895) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */;
    %897 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
    %898 = %896.0;
    (%897, %898, %var_17383, %var_17384, meta[relay.Constant][66] /* ty=Tensor[(1, 1008), bool] */)
  };
  %899(%var_17404, %var_17405) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(13, 10, 6), uint64], Tensor[(1, 60), int32], Tensor[(780), int32], Tensor[(1, 1008), bool]) */
}

def @func_8165(%var_8163: Tensor[(140), uint8], %var_8164: Tensor[(180, 2), float32]) -> (Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) {
  @func_8161(%var_8163, %var_8164) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */
}

def @func_18456() -> (Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) {
  %904 = fn () -> (Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) {
    %900 = @func_17637() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
    %901 = @func_17466() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %902 = %900.3;
    %903 = %901.0;
    (%902, %903)
  };
  %904() /* ty=(Tensor[(192, 1), float64], Tensor[(16, 15, 11), float32]) */
}

def @func_13277(%var_13275: Tensor[(1, 168), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(7, 12, 2), float64], Tensor[(1, 168), float64]) {
  @func_13274(%var_13275) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(7, 12, 2), float64], Tensor[(1, 168), float64]) */
}

def @func_14490() -> (Tensor[(4, 16, 3), float64],) {
  %905 = @func_14045() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %906 = %905.0;
  (%906,)
}

def @func_20979() -> Tensor[(16, 15, 11), float64] {
  %907 = @func_16854() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %907.0
}

def @func_16208() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %908 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %909 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %910 = %908.0;
  (%909, %910)
}

def @func_641(%var_639: Tensor[(3, 3, 6), int64], %var_640: Tensor[(3, 3, 6), int64]) -> (Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) {
  @func_637(%var_639, %var_640) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) */
}

def @func_13581(%var_13579: Tensor[(8, 78), uint32], %var_13580: Tensor[(168), uint32]) -> (Tensor[(4, 16, 3), float32], Tensor[(14, 10, 15), float32], Tensor[(8, 78), uint32], Tensor[(112, 1), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
  %930 = fn (%var_13555: Tensor[(8, 78), uint32], %var_13560: Tensor[(168), uint32]) -> (Tensor[(4, 16, 3), float32], Tensor[(14, 10, 15), float32], Tensor[(8, 78), uint32], Tensor[(112, 1), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
    %911 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
    %912 = %911.0;
    %913 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 16, 3), float64] */, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
    %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
    %915 = cast(%912, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
    %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %917 = cast(%var_13555, dtype="uint32") /* ty=Tensor[(8, 78), uint32] */;
    %918 = cast(meta[relay.Constant][68] /* ty=Tensor[(112, 1), float32] */, dtype="float32") /* ty=Tensor[(112, 1), float32] */;
    %919 = reshape(%917, newshape=[624]) /* ty=Tensor[(624), uint32] */;
    %920 = reshape(%918, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %921 = @func_11959(%919, %920) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */;
    %922 = cast(meta[relay.Constant][69] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %923 = cast(%var_13560, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %924 = reshape(%922, newshape=[]) /* ty=uint32 */;
    %925 = reshape(%923, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), uint32] */;
    %926 = @func_9313(%924, %925) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */;
    %927 = power(%915, %916) /* ty=Tensor[(4, 16, 3), float32] */;
    %928 = %921.6;
    %929 = %926.1;
    (%927, %928, %var_13555, meta[relay.Constant][68] /* ty=Tensor[(112, 1), float32] */, %929, meta[relay.Constant][69] /* ty=uint32 */, %var_13560)
  };
  %930(%var_13579, %var_13580) /* ty=(Tensor[(4, 16, 3), float32], Tensor[(14, 10, 15), float32], Tensor[(8, 78), uint32], Tensor[(112, 1), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) */
}

def @func_13377(%var_13366: Tensor[(5, 6, 1), bool], %var_13367: Tensor[(5, 6, 14), bool], %var_13375: Tensor[(12, 84), bool]) -> (Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) {
  %931 = cast(%var_13366, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %932 = cast(%var_13367, dtype="bool") /* ty=Tensor[(5, 6, 14), bool] */;
  %933 = cast(%var_13375, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %934 = cast(%var_13375, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %935 = reshape(%933, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %936 = reshape(%934, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
  %937 = logical_and(%931, %932) /* ty=Tensor[(5, 6, 14), bool] */;
  %938 = @func_839(%935, %936) /* ty=Tensor[(14, 6, 12), bool] */;
  (%937, %938, %var_13375)
}

def @func_13476(%var_13474: Tensor[(16, 15, 10), uint32], %var_13475: Tensor[(16, 15, 10), uint32]) -> Tensor[(16, 15, 10), uint32] {
  %943 = fn (%var_13435: Tensor[(16, 15, 10), uint32], %var_13436: Tensor[(16, 15, 10), uint32]) -> Tensor[(16, 15, 10), uint32] {
    %939 = cast(%var_13436, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
    %940 = shape_of(%var_13435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %941 = cast(%var_13435, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
    %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_and(%941, %942) /* ty=Tensor[(16, 15, 10), uint32] */
  };
  %943(%var_13474, %var_13475) /* ty=Tensor[(16, 15, 10), uint32] */
}

def @func_16262(%var_16258: Tensor[(7, 15, 15), float64], %var_16259: Tensor[(2640), float64], %var_16260: Tensor[(210), uint64], %var_16261: Tensor[(1008), bool]) -> (Tensor[(1, 1008), bool], Tensor[(2640), float64], Tensor[(210), uint64], Tensor[(1008), bool], Tensor[(4, 16, 3), float64], Tensor[(7, 15, 15), float32], Tensor[(3, 8, 5), float64]) {
  %962 = fn (%var_16216: Tensor[(7, 15, 15), float64], %var_16231: Tensor[(2640), float64], %var_16232: Tensor[(210), uint64], %var_16233: Tensor[(1008), bool]) -> (Tensor[(1, 1008), bool], Tensor[(2640), float64], Tensor[(210), uint64], Tensor[(1008), bool], Tensor[(4, 16, 3), float64], Tensor[(7, 15, 15), float32], Tensor[(3, 8, 5), float64]) {
    %944 = cast(%var_16231, dtype="float64") /* ty=Tensor[(2640), float64] */;
    %945 = cast(%var_16232, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %946 = cast(%var_16233, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %947 = reshape(%944, newshape=[16, 15, 11]) /* ty=Tensor[(16, 15, 11), float64] */;
    %948 = reshape(%945, newshape=[210, 1]) /* ty=Tensor[(210, 1), uint64] */;
    %949 = reshape(%946, newshape=[1, 1008]) /* ty=Tensor[(1, 1008), bool] */;
    %950 = @func_15125(%947, %948, %949) /* ty=(Tensor[(16, 15, 11), bool], Tensor[(240), float32], Tensor[(210, 1), uint64], Tensor[(1, 1008), bool], Tensor[(4, 16, 3), float32]) */;
    %951 = @func_14632() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %952 = cast(%var_16216, dtype="float64") /* ty=Tensor[(7, 15, 15), float64] */;
    %953 = sin(%952) /* ty=Tensor[(7, 15, 15), float64] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(7, 15, 15), float32] */;
    %955 = %951.0;
    %956 = cast(%955, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
    %957 = reshape(%956, newshape=[4, 16, 3]) /* ty=Tensor[(4, 16, 3), float64] */;
    %958 = @func_16115(%957) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) */;
    %959 = %950.3;
    %960 = acos(%954) /* ty=Tensor[(7, 15, 15), float32] */;
    %961 = %958.0;
    (%959, %var_16231, %var_16232, %var_16233, %955, %960, %961)
  };
  %962(%var_16258, %var_16259, %var_16260, %var_16261) /* ty=(Tensor[(1, 1008), bool], Tensor[(2640), float64], Tensor[(210), uint64], Tensor[(1008), bool], Tensor[(4, 16, 3), float64], Tensor[(7, 15, 15), float32], Tensor[(3, 8, 5), float64]) */
}

def @func_13632() -> (Tensor[(4, 16, 3), float64],) {
  %963 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%963,)
}

def @func_18908(%var_18770: float64, %var_18864: Tensor[(624), uint32]) -> (Tensor[(4, 16, 3), float64], float64, Tensor[(35), float64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32], Tensor[(78, 2), float64], Tensor[(156), float64], Tensor[(1008), bool], Tensor[(1008), bool], Tensor[(3, 8, 5), float64], Tensor[(7, 5, 182), float64]) {
  %964 = @func_13710() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) */;
  %965 = @func_18729() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) */;
  %966 = cast(%var_18864, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %967 = reshape(%966, newshape=[624]) /* ty=Tensor[(624), uint32] */;
  %968 = @func_15843(%967) /* ty=(Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float64], Tensor[(624), uint32]) */;
  %969 = cast(meta[relay.Constant][71] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %970 = cast(meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %971 = reshape(%969, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %972 = reshape(%970, newshape=[180, 2]) /* ty=Tensor[(180, 2), float32] */;
  %973 = @func_8161(%971, %972) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(180, 2), float32]) */;
  %974 = cast(meta[relay.Constant][73] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %975 = reshape(%974, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %976 = @func_12216(%975) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) */;
  %977 = cast(meta[relay.Constant][74] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %978 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 182), int64] */, dtype="int64") /* ty=Tensor[(1, 182), int64] */;
  %979 = reshape(%977, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %980 = reshape(%978, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %981 = @func_7555(%979, %980) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64], Tensor[(14, 6, 12), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(13, 2, 7), int64], Tensor[(182), int64]) */;
  %982 = cast(%var_18770, dtype="float64") /* ty=float64 */;
  %983 = cast(meta[relay.Constant][70] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %984 = reshape(%982, newshape=[]) /* ty=float64 */;
  %985 = reshape(%983, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %986 = @func_8056(%984, %985) /* ty=Tensor[(7, 5, ?), int32] */;
  %987 = cast(%986, dtype="float32") /* ty=Tensor[(7, 5, ?), float32] */;
  %988 = asin(%987) /* ty=Tensor[(7, 5, ?), float32] */;
  %989 = cast(%988, dtype="float64") /* ty=Tensor[(7, 5, ?), float64] */;
  %990 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 182), int64] */, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %991 = %964.0;
  %992 = %965.0;
  %993 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  %994 = %968.1;
  %995 = %973.2;
  %996 = %976.2;
  %997 = %981.5;
  %998 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  %999 = mod(%989, %990) /* ty=Tensor[(7, 5, 182), float64] */;
  (%991, %var_18770, meta[relay.Constant][70] /* ty=Tensor[(35), float64] */, %992, %993, %994, %var_18864, %995, meta[relay.Constant][71] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, %996, meta[relay.Constant][73] /* ty=Tensor[(156), float64] */, %997, meta[relay.Constant][74] /* ty=Tensor[(1008), bool] */, %998, %999)
}

def @func_16964() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) {
  %1000 = @func_16854() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1001 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
  %1002 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1003 = %1000.0;
  %1004 = %1001.0;
  %1005 = %1002.0;
  (%1003, %1004, %1005)
}

def @func_13247(%var_13245: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float32],) {
  @func_13244(%var_13245) /* ty=(Tensor[(2, 9, 14), float32],) */
}

def @func_16766() -> (Tensor[(16, 15, 11), float64],) {
  %1006 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%1006,)
}

def @func_20326() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
  %1013 = fn () -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
    %1007 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %1008 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
    %1009 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
    %1010 = %1007.0;
    %1011 = %1008.4;
    %1012 = %1009.0;
    (%1010, %1011, %1012)
  };
  %1013() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) */
}

def @func_12454() -> (Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) {
  %1032 = fn () -> (Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) {
    %1014 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
    %1015 = cast(meta[relay.Constant][76] /* ty=Tensor[(39), float64] */, dtype="float64") /* ty=Tensor[(39), float64] */;
    %1016 = reshape(%1015, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
    %1017 = @func_10729(%1016) /* ty=Tensor[(1, 3, 13), float32] */;
    %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(1, 3, 13), float64] */;
    %1019 = reshape(%1018, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
    %1020 = cast(meta[relay.Constant][77] /* ty=Tensor[(39), float64] */, dtype="bool") /* ty=Tensor[(39), bool] */;
    %1021 = shape_of(meta[relay.Constant][76] /* ty=Tensor[(39), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1022 = cast(meta[relay.Constant][76] /* ty=Tensor[(39), float64] */, dtype="bool") /* ty=Tensor[(39), bool] */;
    %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1024 = cast(meta[relay.Constant][78] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
    %1025 = reshape(%1024, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float32] */;
    %1026 = @func_10015(%1025) /* ty=(Tensor[(13, 2, 16), float32], Tensor[(360), float32], Tensor[(140), uint8], Tensor[(360), float32]) */;
    %1027 = %1014.1;
    %1028 = @func_10729(%1019) /* ty=Tensor[(1, 3, 13), float32] */;
    %1029 = less(%1022, %1023) /* ty=Tensor[(39), bool] */;
    %1030 = %1026.1;
    %1031 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
    (%1027, %1017, %1028, %1029, %1030, meta[relay.Constant][78] /* ty=Tensor[(416), float32] */, %1031)
  };
  %1032() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */
}

def @func_9639(%var_9619: Tensor[(4, 16, 3), float64]) -> (Tensor[(4, 16, 3), float64],) {
  %1033 = cast(%var_9619, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %1034 = asinh(%1033) /* ty=Tensor[(4, 16, 3), float64] */;
  (%1034,)
}

def @func_11963(%var_11961: Tensor[(624), uint32], %var_11962: Tensor[(112), float32]) -> (Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) {
  @func_11959(%var_11961, %var_11962) /* ty=(Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) */
}

def @func_18676() -> (Tensor[(16, 15, 11), float64],) {
  @func_18674() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_12647(%var_12646: Tensor[(3, 56), uint32]) -> (Tensor[(1, 3, 13), float32], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(16, 15, 11), float64], Tensor[(168), uint32], uint32, Tensor[(3, 56), uint32], Tensor[(360), float32]) {
  %1052 = fn (%var_12638: Tensor[(3, 56), uint32]) -> (Tensor[(1, 3, 13), float32], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(16, 15, 11), float64], Tensor[(168), uint32], uint32, Tensor[(3, 56), uint32], Tensor[(360), float32]) {
    %1035 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
    %1036 = %1035.1;
    %1037 = cast(%1036, dtype="float32") /* ty=Tensor[(1, 3, 13), float32] */;
    %1038 = cast(meta[relay.Constant][79] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %1039 = reshape(%1038, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
    %1040 = @func_10611(%1039) /* ty=(Tensor[(2, 7, 8), float32],) */;
    %1041 = cast(meta[relay.Constant][80] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1042 = cast(%var_12638, dtype="uint32") /* ty=Tensor[(3, 56), uint32] */;
    %1043 = cast(meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1044 = reshape(%1041, newshape=[]) /* ty=uint32 */;
    %1045 = reshape(%1042, newshape=[168]) /* ty=Tensor[(168), uint32] */;
    %1046 = reshape(%1043, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %1047 = @func_11653(%1044, %1045, %1046) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
    %1048 = log2(%1037) /* ty=Tensor[(1, 3, 13), float32] */;
    %1049 = %1040.0;
    %1050 = @func_11551() /* ty=Tensor[(16, 15, 11), float64] */;
    %1051 = %1047.2;
    (%1048, %1049, meta[relay.Constant][79] /* ty=Tensor[(112), float32] */, %1050, %1051, meta[relay.Constant][80] /* ty=uint32 */, %var_12638, meta[relay.Constant][81] /* ty=Tensor[(360), float32] */)
  };
  %1052(%var_12646) /* ty=(Tensor[(1, 3, 13), float32], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(16, 15, 11), float64], Tensor[(168), uint32], uint32, Tensor[(3, 56), uint32], Tensor[(360), float32]) */
}

def @func_17218() -> Tensor[(16, 15, 11), float64] {
  %1053 = @func_16208() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */;
  %1053.0
}

def @func_16210() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  @func_16208() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) */
}

def @func_587(%var_585: Tensor[(8, 15, 3), float32], %var_586: Tensor[(8, 15, 3), float32]) -> Tensor[(8, 15, 3), float32] {
  @func_583(%var_585, %var_586) /* ty=Tensor[(8, 15, 3), float32] */
}

def @func_13197() -> Tensor[(4, 16, 3), float64] {
  %1054 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %1054.0
}

def @func_11959(%var_11829: Tensor[(624), uint32], %var_11924: Tensor[(112), float32]) -> (Tensor[(26, 7), int64], Tensor[(624), uint32], Tensor[(54), int64], Tensor[(4, 16, 3), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32], Tensor[(14, 10, 15), float32], Tensor[(1, 2100), float32]) {
  %1055 = cast(%var_11829, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %1056 = cast(%var_11829, dtype="uint32") /* ty=Tensor[(624), uint32] */;
  %1057 = cast(meta[relay.Constant][82] /* ty=Tensor[(54), int64] */, dtype="int64") /* ty=Tensor[(54), int64] */;
  %1058 = reshape(%1055, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %1059 = reshape(%1056, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), uint32] */;
  %1060 = reshape(%1057, newshape=[9, 6]) /* ty=Tensor[(9, 6), int64] */;
  %1061 = @func_8382(%1058, %1059, %1060) /* ty=(Tensor[(3, 13, 16), uint32], Tensor[(13, 2, 7), int64], Tensor[(26, 7), int64], Tensor[(3, 3, 6), bool], Tensor[(9, 6), int64]) */;
  %1062 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %1063 = %1062.1;
  %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %1065 = log(%1064) /* ty=Tensor[(4, 16, 3), float64] */;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(4, 16, 3), float64] */;
  %1067 = cast(%var_11924, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1068 = reshape(%1067, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %1069 = @func_10611(%1068) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %1070 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 2100), float32] */, dtype="float32") /* ty=Tensor[(1, 2100), float32] */;
  %1071 = reshape(%1070, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float32] */;
  %1072 = %1061.2;
  %1073 = cos(%1066) /* ty=Tensor[(4, 16, 3), float64] */;
  %1074 = %1069.0;
  %1075 = @func_3339(%1071) /* ty=Tensor[(14, 10, 15), float32] */;
  (%1072, %var_11829, meta[relay.Constant][82] /* ty=Tensor[(54), int64] */, %1073, %1074, %var_11924, %1075, meta[relay.Constant][83] /* ty=Tensor[(1, 2100), float32] */)
}

def @func_14509() -> (Tensor[(4, 16, 3), float64],) {
  %1078 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %1076 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %1077 = %1076.0;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_12525(%var_12523: Tensor[(16, 14, 9), float64], %var_12524: Tensor[(360), float32]) -> (Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) {
  @func_12521(%var_12523, %var_12524) /* ty=(Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_18988() -> Tensor[(16, 15, 11), float64] {
  @func_13340() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_9316(%var_9314: uint32, %var_9315: Tensor[(2, 12, 7), uint32]) -> (Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) {
  %1090 = fn (%var_9289: uint32, %var_9290: Tensor[(2, 12, 7), uint32]) -> (Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) {
    %1079 = cast(%var_9289, dtype="uint32") /* ty=uint32 */;
    %1080 = cast(%var_9290, dtype="uint32") /* ty=Tensor[(2, 12, 7), uint32] */;
    %1081 = cast(meta[relay.Constant][84] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %1082 = cast(meta[relay.Constant][84] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %1083 = cast(meta[relay.Constant][85] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1084 = reshape(%1081, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1085 = reshape(%1082, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1086 = reshape(%1083, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %1087 = @func_7496(%1084, %1085, %1086) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */;
    %1088 = bitwise_xor(%1079, %1080) /* ty=Tensor[(2, 12, 7), uint32] */;
    %1089 = %1087.3;
    (%1088, %1089, meta[relay.Constant][84] /* ty=Tensor[(210), uint64] */, meta[relay.Constant][85] /* ty=Tensor[(1008), bool] */)
  };
  %1090(%var_9314, %var_9315) /* ty=(Tensor[(2, 12, 7), uint32], Tensor[(240), float32], Tensor[(210), uint64], Tensor[(1008), bool]) */
}

def @func_942(%var_940: Tensor[(16, 15, 1), float32], %var_941: Tensor[(1008), bool]) -> (Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
  @func_938(%var_940, %var_941) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */
}

def @func_6565(%var_6562: Tensor[(7, 5, 4), uint8], %var_6563: Tensor[(7, 5, 4), uint8], %var_6564: Tensor[(360), float32]) -> (Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
  %1101 = fn (%var_6546: Tensor[(7, 5, 4), uint8], %var_6547: Tensor[(7, 5, 4), uint8], %var_6553: Tensor[(360), float32]) -> (Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
    %1091 = cast(%var_6547, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
    %1092 = shape_of(%var_6546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1093 = cast(%var_6546, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
    %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1095 = cast(%var_6553, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1096 = cast(%var_6553, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1097 = reshape(%1095, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %1098 = reshape(%1096, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %1099 = greater(%1093, %1094) /* ty=Tensor[(7, 5, 4), bool] */;
    %1100 = @func_583(%1097, %1098) /* ty=Tensor[(8, 15, 3), float32] */;
    (%1099, %1100, %var_6553)
  };
  %1101(%var_6562, %var_6563, %var_6564) /* ty=(Tensor[(7, 5, 4), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */
}

def @func_17696() -> Tensor[(192, ?), uint32] {
  %1102 = @func_12787() /* ty=(Tensor[(192, 1), float64],) */;
  %1103 = %1102.0;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %1105 = erf(%1104) /* ty=Tensor[(192, 1), float64] */;
  %1106 = cast(%1103, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %1107 = shape_of(%1105, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1108 = cast(%1105, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  bitwise_xor(%1108, %1109) /* ty=Tensor[(192, ?), uint32] */
}

def @func_13710() -> (Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) {
  %1110 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %1111 = cast(meta[relay.Constant][86] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1112 = cast(meta[relay.Constant][87] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %1113 = cast(meta[relay.Constant][88] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1114 = reshape(%1111, newshape=[]) /* ty=uint32 */;
  %1115 = reshape(%1112, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %1116 = reshape(%1113, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1117 = @func_11653(%1114, %1115, %1116) /* ty=(Tensor[(140), uint8], uint32, Tensor[(168), uint32], Tensor[(360), float32], Tensor[(192, 1), float32]) */;
  %1118 = %1110.1;
  %1119 = %1117.4;
  (%1118, %1119, meta[relay.Constant][86] /* ty=uint32 */, meta[relay.Constant][87] /* ty=Tensor[(168), uint32] */, meta[relay.Constant][88] /* ty=Tensor[(360), float32] */)
}

def @func_20488() -> Tensor[(192), float64] {
  %1121 = fn () -> Tensor[(192), float64] {
    %1120 = @func_14924() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(192), float64]) */;
    %1120.1
  };
  %1121() /* ty=Tensor[(192), float64] */
}

def @func_20981() -> Tensor[(16, 15, 11), float64] {
  @func_20979() /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_7496(%var_7480: Tensor[(5, 7, 6), uint64], %var_7481: Tensor[(5, 7, 6), uint64], %var_7488: Tensor[(1008), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) {
  %1122 = cast(%var_7481, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %1123 = shape_of(%var_7480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%var_7480, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1126 = cast(meta[relay.Constant][89] /* ty=Tensor[(1183, 1), float64] */, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %1127 = cast(meta[relay.Constant][90] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1128 = cast(%var_7488, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %1129 = reshape(%1126, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %1130 = reshape(%1127, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1131 = reshape(%1128, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
  %1132 = @func_5759(%1129, %1130, %1131) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
  %1133 = greater(%1124, %1125) /* ty=Tensor[(5, 7, 6), bool] */;
  %1134 = %1132.3;
  (%1133, %1134, meta[relay.Constant][89] /* ty=Tensor[(1183, 1), float64] */, meta[relay.Constant][90] /* ty=Tensor[(240), float32] */, %var_7488)
}

def @func_14717(%var_14715: Tensor[(39), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(1, 3, 13), float32], Tensor[(39), float64]) {
  %1135 = cast(%var_14715, dtype="float64") /* ty=Tensor[(39), float64] */;
  %1136 = reshape(%1135, newshape=[1, 3, 13]) /* ty=Tensor[(1, 3, 13), float64] */;
  %1137 = @func_13643() /* ty=Tensor[(16, 15, 11), float64] */;
  %1138 = @func_10729(%1136) /* ty=Tensor[(1, 3, 13), float32] */;
  (%1137, %1138, %var_14715)
}

def @func_11725() -> Tensor[(4, 16, 3), float64] {
  %1139 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1139.0
}

def @func_16679() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) {
  %1142 = fn () -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) {
    %1140 = @func_12093() /* ty=Tensor[(4, 16, 3), float64] */;
    %1141 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
    (%1140, %1141)
  };
  %1142() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64]) */
}

def @func_637(%var_603: Tensor[(3, 3, 6), int64], %var_631: Tensor[(3, 3, 6), int64]) -> (Tensor[(3, 3, 6), bool], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32], Tensor[(3, 3, 6), uint8]) {
  %1143 = cast(meta[relay.Constant][91] /* ty=Tensor[(3, 1, 6), int64] */, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
  %1144 = cast(%var_603, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %1145 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1146 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1147 = reshape(%1145, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1148 = reshape(%1146, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1149 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1150 = @func_583(%1147, %1148) /* ty=Tensor[(8, 15, 3), float32] */;
  %1151 = cast(%1150, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %1152 = reshape(%1149, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1153 = reshape(%1151, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1154 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1155 = cast(%1150, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %1156 = reshape(%1154, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1157 = reshape(%1155, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1158 = cast(meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1159 = cast(%1150, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %1160 = reshape(%1158, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1161 = reshape(%1159, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1162 = cast(meta[relay.Constant][91] /* ty=Tensor[(3, 1, 6), int64] */, dtype="uint8") /* ty=Tensor[(3, 1, 6), uint8] */;
  %1163 = cast(%var_631, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
  %1164 = less_equal(%1143, %1144) /* ty=Tensor[(3, 3, 6), bool] */;
  %1165 = @func_583(%1152, %1153) /* ty=Tensor[(8, 15, 3), float32] */;
  %1166 = @func_583(%1156, %1157) /* ty=Tensor[(8, 15, 3), float32] */;
  %1167 = @func_583(%1160, %1161) /* ty=Tensor[(8, 15, 3), float32] */;
  %1168 = bitwise_or(%1162, %1163) /* ty=Tensor[(3, 3, 6), uint8] */;
  (%1164, %1150, meta[relay.Constant][92] /* ty=Tensor[(360), float32] */, %1165, %1166, %1167, %1168)
}

def @func_10613(%var_10612: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
  %1171 = fn (%var_10595: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
    %1169 = cast(%var_10595, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
    %1170 = atanh(%1169) /* ty=Tensor[(2, 7, 8), float32] */;
    (%1170,)
  };
  %1171(%var_10612) /* ty=(Tensor[(2, 7, 8), float32],) */
}

def @func_20545() -> Tensor[(4, 16, 3), float64] {
  %1173 = fn () -> Tensor[(4, 16, 3), float64] {
    %1172 = @func_14989() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64], Tensor[(1755), uint64], Tensor[(16, 15, 11), float64]) */;
    %1172.2
  };
  %1173() /* ty=Tensor[(4, 16, 3), float64] */
}

def @func_17198(%var_17195: Tensor[(8, 13, 15), float64], %var_17196: Tensor[(156), float64], %var_17197: Tensor[(35), float64]) -> (Tensor[(4, 16, 3), float64], Tensor[(8, 13, 15), int8], Tensor[(2, 13, 6), float32], Tensor[(156), bool], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64], Tensor[(13, 15, 9), uint64], Tensor[(1755), uint64]) {
  @func_17193(%var_17195, %var_17196, %var_17197) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(8, 13, 15), int8], Tensor[(2, 13, 6), float32], Tensor[(156), bool], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64], Tensor[(13, 15, 9), uint64], Tensor[(1755), uint64]) */
}

def @func_839(%var_825: Tensor[(14, 6, 12), bool], %var_826: Tensor[(14, 6, 12), bool]) -> Tensor[(14, 6, 12), bool] {
  %1174 = cast(%var_826, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %1175 = shape_of(%var_825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1176 = cast(%var_825, dtype="bool") /* ty=Tensor[(14, 6, 12), bool] */;
  %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1176, %1177) /* ty=Tensor[(14, 6, 12), bool] */
}

def @func_12216(%var_12199: Tensor[(78, 2), float64]) -> (Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) {
  %1178 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
  %1179 = cast(%var_12199, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %1180 = cast(%var_12199, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %1181 = reshape(%1179, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %1182 = reshape(%1180, newshape=[2, 13, 6]) /* ty=Tensor[(2, 13, 6), float64] */;
  %1183 = @func_9796(%1181, %1182) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */;
  %1184 = %1178.1;
  %1185 = %1183.1;
  (%1184, %1185, %var_12199)
}

def @func_16854() -> (Tensor[(16, 15, 11), float64],) {
  %1186 = @func_13955() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1187 = %1186.0;
  (%1187,)
}

def @func_13181() -> Tensor[(16, 15, 11), float32] {
  %1189 = fn () -> Tensor[(16, 15, 11), float32] {
    %1188 = @func_12043() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float32]) */;
    %1188.1
  };
  %1189() /* ty=Tensor[(16, 15, 11), float32] */
}

def @func_12788() -> (Tensor[(192, 1), float64],) {
  %1192 = fn () -> (Tensor[(192, 1), float64],) {
    %1190 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
    %1191 = %1190.2;
    (%1191,)
  };
  %1192() /* ty=(Tensor[(192, 1), float64],) */
}

def @func_13421(%var_13419: Tensor[(35), float64]) -> (Tensor[(1, 3, 13), float32], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64]) {
  @func_13418(%var_13419) /* ty=(Tensor[(1, 3, 13), float32], Tensor[(7, 5, ?), int32], float64, Tensor[(35), float64]) */
}

def @func_15541() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64]) {
  %1193 = @func_12881() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) */;
  %1194 = @func_15182() /* ty=Tensor[(16, 15, 11), float64] */;
  %1195 = %1193.0;
  (%1194, %1195)
}

def @func_14274() -> (Tensor[(16, 15, 11), float64],) {
  %1196 = @func_12665() /* ty=Tensor[(16, 15, 11), float64] */;
  (%1196,)
}

def @func_18674() -> (Tensor[(16, 15, 11), float64],) {
  %1197 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1198 = %1197.0;
  (%1198,)
}

def @func_13634() -> (Tensor[(4, 16, 3), float64],) {
  @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_7501(%var_7498: Tensor[(5, 7, 6), uint64], %var_7499: Tensor[(5, 7, 6), uint64], %var_7500: Tensor[(1008), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) {
  @func_7496(%var_7498, %var_7499, %var_7500) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1008), bool], Tensor[(1183, 1), float64], Tensor[(240), float32], Tensor[(1008), bool]) */
}

def @func_17360(%var_17357: Tensor[(1, 5, 7), float64], %var_17358: Tensor[(8, 5, 7), float64], %var_17359: uint32) -> (Tensor[(8, 5, 7), bool], Tensor[(4, 16, 3), float64], Tensor[(1, 546), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) {
  @func_17355(%var_17357, %var_17358, %var_17359) /* ty=(Tensor[(8, 5, 7), bool], Tensor[(4, 16, 3), float64], Tensor[(1, 546), float32], Tensor[(240), float32], uint32, Tensor[(168), uint32]) */
}

def @func_15947() -> Tensor[(16, 15, 11), float32] {
  %1199 = @func_15814() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1199.0
}

def @func_19534() -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64]) {
  %1200 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
  %1201 = %1200.0;
  %1202 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%1201, %1202)
}

def @func_13712() -> (Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) {
  @func_13710() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(192, 1), float32], uint32, Tensor[(168), uint32], Tensor[(360), float32]) */
}

def @func_19164() -> (Tensor[(4, 16, 3), float64],) {
  %1205 = fn () -> (Tensor[(4, 16, 3), float64],) {
    %1203 = @func_13816() /* ty=(Tensor[(4, 16, 3), float64],) */;
    %1204 = %1203.0;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_16552(%var_16532: Tensor[(182), int64], %var_16545: Tensor[(4, 16, 3), float64]) -> (Tensor[(156, 1), float64], Tensor[(182), int64], Tensor[(4, 16, 3), int32]) {
  %1206 = cast(%var_16532, dtype="int64") /* ty=Tensor[(182), int64] */;
  %1207 = reshape(%1206, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %1208 = @func_11244(%1207) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) */;
  %1209 = @func_14508() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1210 = %1209.0;
  %1211 = cast(%var_16545, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %1212 = shape_of(%1210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%1210, dtype="int32") /* ty=Tensor[(4, 16, 3), int32] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1215 = %1208.2;
  %1216 = bitwise_and(%1213, %1214) /* ty=Tensor[(4, 16, 3), int32] */;
  (%1215, %var_16532, %1216)
}

def @func_14276() -> (Tensor[(16, 15, 11), float64],) {
  @func_14274() /* ty=(Tensor[(16, 15, 11), float64],) */
}

def @func_10389(%var_10383: Tensor[(7, 12, 2), float64]) -> (Tensor[(7, 12, 2), float64],) {
  %1217 = cast(%var_10383, dtype="float64") /* ty=Tensor[(7, 12, 2), float64] */;
  %1218 = sigmoid(%1217) /* ty=Tensor[(7, 12, 2), float64] */;
  (%1218,)
}

def @func_14374() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %1219 = @func_13066() /* ty=Tensor[(16, 15, 11), float64] */;
  %1220 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  %1221 = @func_11725() /* ty=Tensor[(4, 16, 3), float64] */;
  (%1219, %1220, %1221)
}

def @func_5763(%var_5760: Tensor[(13, 7, 13), float64], %var_5761: Tensor[(240), float32], %var_5762: Tensor[(1008), bool]) -> (Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
  %1236 = fn (%var_5733: Tensor[(13, 7, 13), float64], %var_5737: Tensor[(240), float32], %var_5738: Tensor[(1008), bool]) -> (Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) {
    %1222 = cast(%var_5733, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
    %1223 = cast(%var_5737, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1224 = cast(%var_5738, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1225 = reshape(%1223, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
    %1226 = reshape(%1224, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %1227 = @func_938(%1225, %1226) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
    %1228 = cast(%var_5737, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1229 = cast(%var_5738, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1230 = reshape(%1228, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), float32] */;
    %1231 = reshape(%1229, newshape=[1008]) /* ty=Tensor[(1008), bool] */;
    %1232 = @func_938(%1230, %1231) /* ty=(Tensor[(16, 15, ?), float64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */;
    %1233 = asin(%1222) /* ty=Tensor[(13, 7, 13), float64] */;
    %1234 = %1227.3;
    %1235 = %1232.3;
    (%1233, %1234, %var_5737, %var_5738, %1235)
  };
  %1236(%var_5760, %var_5761, %var_5762) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(14, 6, 12), bool], Tensor[(240), float32], Tensor[(1008), bool], Tensor[(14, 6, 12), bool]) */
}

def @func_13803() -> (Tensor[(4, 16, 3), float32],) {
  @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */
}

def @func_16115(%var_16099: Tensor[(4, 16, 3), float64]) -> (Tensor[(3, 8, 5), float64], Tensor[(4, 16, 3), float32]) {
  %1237 = @func_11607() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */;
  %1238 = %1237.1;
  %1239 = cast(%var_16099, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %1240 = shape_of(%1238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%1238, dtype="float32") /* ty=Tensor[(4, 16, 3), float32] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1243 = @func_12829() /* ty=Tensor[(3, 8, 5), float64] */;
  %1244 = floor_mod(%1241, %1242) /* ty=Tensor[(4, 16, 3), float32] */;
  (%1243, %1244)
}

def @func_16381() -> (Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) {
  @func_16379() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) */
}

def @func_17274(%var_17272: Tensor[(16), bool]) -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) {
  @func_17271(%var_17272) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(16), bool], Tensor[(2, 2, 4), float32], Tensor[(2, 13, 6), float32], Tensor[(156), float64]) */
}

def @func_17639() -> (Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) {
  @func_17637() /* ty=(Tensor[(4, 16, 3), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192, 1), float64]) */
}

def @func_8881(%var_8878: Tensor[(1, 10, 6), int32], %var_8879: Tensor[(13, 10, 6), int32], %var_8880: Tensor[(1008), bool]) -> (Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) {
  %1256 = fn (%var_8841: Tensor[(1, 10, 6), int32], %var_8842: Tensor[(13, 10, 6), int32], %var_8867: Tensor[(1008), bool]) -> (Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) {
    %1245 = cast(%var_8841, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
    %1246 = cast(%var_8842, dtype="bool") /* ty=Tensor[(13, 10, 6), bool] */;
    %1247 = greater_equal(%1245, %1246) /* ty=Tensor[(13, 10, 6), bool] */;
    %1248 = cast(%var_8841, dtype="uint64") /* ty=Tensor[(1, 10, 6), uint64] */;
    %1249 = cast(%1247, dtype="uint64") /* ty=Tensor[(13, 10, 6), uint64] */;
    %1250 = cast(%var_8867, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1251 = cast(%var_8867, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1252 = reshape(%1250, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
    %1253 = reshape(%1251, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), bool] */;
    %1254 = right_shift(%1248, %1249) /* ty=Tensor[(13, 10, 6), uint64] */;
    %1255 = @func_839(%1252, %1253) /* ty=Tensor[(14, 6, 12), bool] */;
    (%1254, %1255, %var_8867)
  };
  %1256(%var_8878, %var_8879, %var_8880) /* ty=(Tensor[(13, 10, 6), uint64], Tensor[(14, 6, 12), bool], Tensor[(1008), bool]) */
}

def @func_20839() -> (Tensor[(4, 16, 3), float64],) {
  @func_20837() /* ty=(Tensor[(4, 16, 3), float64],) */
}

def @func_13865() -> (Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
  %1267 = fn () -> (Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) {
    %1257 = @func_11133() /* ty=(Tensor[(16, 15, 11), float32],) */;
    %1258 = cast(meta[relay.Constant][93] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %1259 = cast(meta[relay.Constant][94] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %1260 = cast(meta[relay.Constant][95] /* ty=Tensor[(1008), bool] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1261 = reshape(%1258, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), bool] */;
    %1262 = reshape(%1259, newshape=[5, 6, 14]) /* ty=Tensor[(5, 6, 14), bool] */;
    %1263 = reshape(%1260, newshape=[12, 84]) /* ty=Tensor[(12, 84), bool] */;
    %1264 = @func_13377(%1261, %1262, %1263) /* ty=(Tensor[(5, 6, 14), bool], Tensor[(14, 6, 12), bool], Tensor[(12, 84), bool]) */;
    %1265 = %1257.0;
    %1266 = %1264.1;
    (%1265, %1266, meta[relay.Constant][93] /* ty=Tensor[(30), bool] */, meta[relay.Constant][94] /* ty=Tensor[(420), bool] */, meta[relay.Constant][95] /* ty=Tensor[(1008), bool] */)
  };
  %1267() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(14, 6, 12), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1008), bool]) */
}

def @func_18164() -> Tensor[(2, 9, 14), float32] {
  %1268 = @func_15991() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(2, 9, 14), float32], Tensor[(42, 6), float32]) */;
  %1268.1
}

def @func_13001(%var_12999: Tensor[(16, 7, 2), bool], %var_13000: Tensor[(16, 7, 2), bool]) -> (Tensor[(16, 7, 2), bool], Tensor[(16, 7, 2), uint32], Tensor[(3, 8, 5), float64]) {
  @func_12997(%var_12999, %var_13000) /* ty=(Tensor[(16, 7, 2), bool], Tensor[(16, 7, 2), uint32], Tensor[(3, 8, 5), float64]) */
}

def @func_20392(%var_20390: Tensor[(13, 3), float64]) -> (Tensor[(16, 15, 11), float64], Tensor[(780), int32], Tensor[(192, 1008), float32], Tensor[(195, 9), uint64], Tensor[(1755), uint64], Tensor[(2, 9, 14), float32], Tensor[(192, 1008), float32], Tensor[(1, 3, 13), float32], Tensor[(13, 3), float64]) {
  @func_20389(%var_20390) /* ty=(Tensor[(16, 15, 11), float64], Tensor[(780), int32], Tensor[(192, 1008), float32], Tensor[(195, 9), uint64], Tensor[(1755), uint64], Tensor[(2, 9, 14), float32], Tensor[(192, 1008), float32], Tensor[(1, 3, 13), float32], Tensor[(13, 3), float64]) */
}

def @func_13244(%var_13239: Tensor[(2, 9, 14), float32]) -> (Tensor[(2, 9, 14), float32],) {
  %1269 = cast(%var_13239, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
  %1270 = sigmoid(%1269) /* ty=Tensor[(2, 9, 14), float32] */;
  (%1270,)
}

def @func_14897() -> (Tensor[(4, 16, 3), float64], Tensor[(4, 16, 3), float64]) {
  %1271 = @func_11708() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1272 = @func_13632() /* ty=(Tensor[(4, 16, 3), float64],) */;
  %1273 = %1271.0;
  %1274 = %1272.0;
  (%1273, %1274)
}

def @func_19536() -> (Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64]) {
  @func_19534() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(4, 16, 3), float64]) */
}

def @func_18729() -> (Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64]) {
  %1275 = @func_13532() /* ty=(Tensor[(16, 15, 11), float64],) */;
  %1276 = @func_13340() /* ty=Tensor[(16, 15, 11), float64] */;
  %1277 = %1275.0;
  (%1276, %1277)
}

def @func_18039(%var_18037: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float32], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32]) {
  @func_18036(%var_18037) /* ty=(Tensor[(4, 16, 3), float32], Tensor[(3, 14, 14), float64], Tensor[(140), uint8], Tensor[(360), float32]) */
}

def @func_15645() -> (Tensor[(1, 3, 13), float32],) {
  %1280 = fn () -> (Tensor[(1, 3, 13), float32],) {
    %1278 = @func_12453() /* ty=(Tensor[(16, 15, 11), float32], Tensor[(1, 3, 13), float32], Tensor[(1, 3, 13), float32], Tensor[(39), bool], Tensor[(360), float32], Tensor[(416), float32], Tensor[(16, 15, 11), float64]) */;
    %1279 = %1278.2;
    (%1279,)
  };
  %1280() /* ty=(Tensor[(1, 3, 13), float32],) */
}

def @func_14293(%var_14291: Tensor[(195, 9), uint64]) -> (Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) {
  @func_14290(%var_14291) /* ty=(Tensor[(4, 16, 3), float64], Tensor[(13, 15, 9), uint64], Tensor[(195, 9), uint64]) */
}

def @func_19181() -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
  %1284 = fn () -> (Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) {
    %1281 = @func_13801() /* ty=(Tensor[(4, 16, 3), float32],) */;
    %1282 = @func_14685() /* ty=Tensor[(16, 15, 11), float64] */;
    %1283 = %1281.0;
    (%1282, %1283)
  };
  %1284() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float32]) */
}

def @func_16502(%var_16498: Tensor[(2016, 1), float64], %var_16499: Tensor[(360), float32]) -> (Tensor[(4, 16, 3), float64], Tensor[(2, 13, 6), float32], Tensor[(156), float64], Tensor[(4, 252), int64], Tensor[(182), int64], Tensor[(16, 15, 11), float64], Tensor[(16, 15, 11), float64], Tensor[(2016, 1), float64], Tensor[(360), float32]) {
  %1285 = @func_11477() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(192), float64]) */;
  %1286 = cast(meta[relay.Constant][96] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1287 = reshape(%1286, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %1288 = @func_12216(%1287) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float32], Tensor[(78, 2), float64]) */;
  %1289 = cast(meta[relay.Constant][97] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %1290 = reshape(%1289, newshape=[182]) /* ty=Tensor[(182), int64] */;
  %1291 = @func_11244(%1290) /* ty=(Tensor[(16, 15, 11), float32], Tensor[(2, 13, 6), float64], Tensor[(156, 1), float64], Tensor[(5, 7, 6), bool], Tensor[(210), uint64], Tensor[(14, 3, 5), float64], Tensor[(182), int64], Tensor[(4, 252), int64]) */;
  %1292 = @func_16379() /* ty=(Tensor[(16, 15, 11), float64], Tensor[(3, 8, 5), float64], Tensor[(192), float64], Tensor[(182), int64], Tensor[(9072), bool]) */;
  %1293 = cast(%var_16498, dtype="float64") /* ty=Tensor[(2016, 1), float64] */;
  %1294 = cast(%var_16499, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1295 = reshape(%1293, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %1296 = reshape(%1294, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1297 = @func_12521(%1295, %1296) /* ty=(Tensor[(16, 14, 9), float64], Tensor[(16, 15, 11), float64], Tensor[(4, 16, 3), float64], Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(360), float32]) */;
  %1298 = %1285.1;
  %1299 = %1288.1;
  %1300 = %1291.7;
  %1301 = %1292.0;
  %1302 = %1297.1;
  (%1298, %1299, meta[relay.Constant][96] /* ty=Tensor[(156), float64] */, %1300, meta[relay.Constant][97] /* ty=Tensor[(182), int64] */, %1301, %1302, %var_16498, %var_16499)
}

def @func_9799(%var_9797: Tensor[(2, 13, 6), float64], %var_9798: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) {
  %1310 = fn (%var_9786: Tensor[(2, 13, 6), float64], %var_9787: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) {
    %1303 = cast(%var_9787, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
    %1304 = shape_of(%var_9786, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1305 = cast(%var_9786, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
    %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1307 = cast(%var_9786, dtype="float32") /* ty=Tensor[(2, 13, 6), float32] */;
    %1308 = divide(%1305, %1306) /* ty=Tensor[(2, 13, 6), float64] */;
    %1309 = sin(%1307) /* ty=Tensor[(2, 13, 6), float32] */;
    (%1308, %1309)
  };
  %1310(%var_9797, %var_9798) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(2, 13, 6), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen907/build/output.py:3786: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen907/build/output.py", line 3791, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(420) tvmgen_default_fused_divide_kernel0(double* __restrict__ T_divide, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_divide[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


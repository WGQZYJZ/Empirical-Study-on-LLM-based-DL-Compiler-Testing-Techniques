==========mod==========
#[version = "0.0.5"]
def @func_14474() -> (Tensor[(11, 8, 12), float32], Tensor[(182), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %0 = @func_13445() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %3 = reshape(%1, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %4 = reshape(%2, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %5 = @func_7592(%3, %4) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %6 = %0.0;
  %7 = %5.4;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(182), float64] */, meta[relay.Constant][1] /* ty=Tensor[(780), uint8] */)
}

def @func_6956(%var_6894: Tensor[(540), uint8], %var_6900: Tensor[(260), float64], %var_6901: Tensor[(182), float64], %var_6951: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %8 = cast(%var_6894, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %9 = reshape(%8, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %10 = cast(%var_6900, dtype="float64") /* ty=Tensor[(260), float64] */;
  %11 = cast(%var_6901, dtype="float64") /* ty=Tensor[(182), float64] */;
  %12 = reshape(%10, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
  %13 = reshape(%11, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %14 = @func_987(%12, %13) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %16 = reshape(%15, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %17 = @func_3548(%16) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %18 = %17.0;
  %19 = cast(%18, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %20 = reshape(%19, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %21 = @func_3548(%20) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %22 = cast(%var_6951, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %23 = reshape(%22, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
  %24 = @func_1197(%23) /* ty=(Tensor[(13, 6, 10), uint8],) */;
  %25 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %26 = @func_5603(%9) /* ty=Tensor[(12, 15, 3), uint8] */;
  %27 = %14.0;
  %28 = %21.0;
  %29 = %24.0;
  (%25, %26, %var_6894, %27, %var_6900, %var_6901, %18, meta[relay.Constant][2] /* ty=Tensor[(396), uint8] */, %28, %29, %var_6951)
}

def @func_13269(%var_13265: Tensor[(30, 70), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(2100), float64], Tensor[(30, 70), float64], Tensor[(405), float32]) {
  %30 = @func_7621() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %31 = cast(%var_13265, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %33 = reshape(%31, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %34 = reshape(%32, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %35 = @func_10906(%33, %34) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) */;
  %36 = %30.0;
  %37 = %35.3;
  (%36, %37, %var_13265, meta[relay.Constant][3] /* ty=Tensor[(405), float32] */)
}

def @func_7151() -> Tensor[(11, 8, 12), float32] {
  %38 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %38.0
}

def @func_5603(%var_5599: Tensor[(12, 15, 3), uint8]) -> Tensor[(12, 15, 3), uint8] {
  %39 = cast(%var_5599, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
  %40 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(12, 15, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 15, 3), uint8] */, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%41, %42) /* ty=Tensor[(12, 15, 3), uint8] */
}

def @func_11394() -> Tensor[(11, 8, 12), float32] {
  %43 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %43.0
}

def @func_13364() -> (Tensor[(11, 8, 12), float32],) {
  %44 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%44,)
}

def @func_13354(%var_13341: Tensor[(7, 8, 1), int16], %var_13342: Tensor[(7, 8, 7), int16]) -> Tensor[(7, 8, 7), bool] {
  %45 = cast(%var_13341, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %46 = cast(%var_13342, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  greater_equal(%45, %46) /* ty=Tensor[(7, 8, 7), bool] */
}

def @func_12993() -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %47 = @func_11181() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
  %48 = @func_10736() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %49 = %47.0;
  %50 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %51 = @func_12151() /* ty=Tensor[(11, 8, 12), float32] */;
  %52 = %48.0;
  (%49, %50, %51, %52)
}

def @func_9695(%var_9673: Tensor[(10, 14, 6), float64]) -> (Tensor[(10, 14, 6), bool], Tensor[(10, 14, 6), float64]) {
  %53 = cast(%var_9673, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
  %54 = acos(%53) /* ty=Tensor[(10, 14, 6), float64] */;
  %55 = cast(%var_9673, dtype="bool") /* ty=Tensor[(10, 14, 6), bool] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="bool") /* ty=Tensor[(10, 14, 6), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %59 = cast(%var_9673, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
  %60 = greater(%57, %58) /* ty=Tensor[(10, 14, 6), bool] */;
  %61 = acosh(%59) /* ty=Tensor[(10, 14, 6), float64] */;
  (%60, %61)
}

def @func_1585(%var_1572: Tensor[(11, 12, 1), float64]) -> Tensor[(11, 12, 1), float64] {
  %62 = cast(%var_1572, dtype="float64") /* ty=Tensor[(11, 12, 1), float64] */;
  exp(%62) /* ty=Tensor[(11, 12, 1), float64] */
}

def @func_13144() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) {
  %63 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %64 = %63.0;
  %65 = @func_12369() /* ty=Tensor[(11, 8, 12), float64] */;
  (%64, %65)
}

def @func_7826(%var_7821: uint16, %var_7822: Tensor[(2, 10, 5), uint16]) -> (Tensor[(2, 10, 5), bool],) {
  %66 = cast(%var_7821, dtype="bool") /* ty=bool */;
  %67 = cast(%var_7822, dtype="bool") /* ty=Tensor[(2, 10, 5), bool] */;
  %68 = greater_equal(%66, %67) /* ty=Tensor[(2, 10, 5), bool] */;
  (%68,)
}

def @func_2346(%var_2319: Tensor[(14, 15, 10), float64]) -> (Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) {
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 10), float64] */;
  %70 = log(%69) /* ty=Tensor[(1, 15, 10), float64] */;
  %71 = cast(%70, dtype="uint8") /* ty=Tensor[(1, 15, 10), uint8] */;
  %72 = cast(%var_2319, dtype="uint8") /* ty=Tensor[(14, 15, 10), uint8] */;
  %73 = cast(meta[relay.Constant][6] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %74 = reshape(%73, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %75 = @func_249(%74) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %76 = minimum(%71, %72) /* ty=Tensor[(14, 15, 10), uint8] */;
  %77 = %75.0;
  (%76, %77, meta[relay.Constant][6] /* ty=Tensor[(945), float32] */)
}

def @func_7592(%var_7582: Tensor[(182), float64], %var_7583: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
  %79 = cast(meta[relay.Constant][8] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %80 = cast(%var_7582, dtype="float64") /* ty=Tensor[(182), float64] */;
  %81 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %82 = reshape(%78, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %83 = reshape(%79, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %84 = reshape(%80, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %85 = reshape(%81, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %86 = @func_6956(%82, %83, %84, %85) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %87 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %88 = %86.7;
  (%87, %88, meta[relay.Constant][7] /* ty=Tensor[(54, 10), uint8] */, meta[relay.Constant][8] /* ty=Tensor[(260), float64] */, %var_7582, %var_7583)
}

def @func_10502(%var_10484: int16) -> (Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) {
  %89 = @func_9031() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %90 = cast(%var_10484, dtype="int16") /* ty=int16 */;
  %91 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %92 = reshape(%90, newshape=[]) /* ty=int16 */;
  %93 = reshape(%91, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), int16] */;
  %94 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %95 = %89.0;
  %96 = @func_4312(%92, %93) /* ty=Tensor[(15, 2, 8), bool] */;
  %97 = %94.0;
  (%95, %96, %var_10484, meta[relay.Constant][9] /* ty=Tensor[(240), int16] */, %97)
}

def @func_7300(%var_7269: Tensor[(396), uint8], %var_7279: Tensor[(156), int8], %var_7284: Tensor[(896), float64], %var_7293: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) {
  %98 = cast(%var_7269, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %99 = reshape(%98, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %100 = @func_3548(%99) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %101 = cast(meta[relay.Constant][10] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %102 = reshape(%101, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %103 = @func_2228(%102) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
  %104 = %103.2;
  %105 = cast(%104, dtype="int32") /* ty=Tensor[(1183, 1), int32] */;
  %106 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %107 = cast(meta[relay.Constant][10] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?), int32] */;
  %109 = cast(%var_7279, dtype="int8") /* ty=Tensor[(156), int8] */;
  %110 = reshape(%109, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %111 = @func_2192(%110) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %112 = cast(%var_7284, dtype="float64") /* ty=Tensor[(896), float64] */;
  %113 = reshape(%112, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %114 = @func_551(%113) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %115 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %117 = sin(%116) /* ty=Tensor[(11, 8, 12), float32] */;
  %118 = cast(%var_7293, dtype="uint64") /* ty=Tensor[(11, 8, 12), uint64] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="uint64") /* ty=Tensor[(11, 8, 12), uint64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %122 = %100.0;
  %123 = right_shift(%107, %108) /* ty=Tensor[(1183), int32] */;
  %124 = %111.3;
  %125 = %114.0;
  %126 = add(%120, %121) /* ty=Tensor[(11, 8, 12), uint64] */;
  (%122, %var_7269, %123, %124, %var_7279, %125, %var_7284, %126)
}

def @func_8155(%var_8142: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(182), float64], Tensor[(780), uint8], Tensor[(11, 13, 10), bool], Tensor[(1430), int16]) {
  %127 = cast(meta[relay.Constant][11] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %128 = cast(%var_8142, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %129 = reshape(%127, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %130 = reshape(%128, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %131 = @func_7592(%129, %130) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %132 = cast(meta[relay.Constant][12] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %133 = cast(meta[relay.Constant][12] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %134 = reshape(%132, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %135 = reshape(%133, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %136 = @func_619(%134, %135) /* ty=(Tensor[(11, 13, 10), bool],) */;
  %137 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %138 = %131.1;
  %139 = %136.0;
  (%137, %138, meta[relay.Constant][11] /* ty=Tensor[(182), float64] */, %var_8142, %139, meta[relay.Constant][12] /* ty=Tensor[(1430), int16] */)
}

def @func_13067() -> Tensor[(11, 8, 12), float32] {
  %140 = @func_10736() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %140.0
}

def @func_10906(%var_10895: Tensor[(2100), float64], %var_10901: Tensor[(405), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) {
  %141 = cast(meta[relay.Constant][13] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %142 = cast(%var_10895, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %143 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %144 = reshape(%141, newshape=[3, 1, 8]) /* ty=Tensor[(3, 1, 8), float32] */;
  %145 = reshape(%142, newshape=[150, 14]) /* ty=Tensor[(150, 14), float64] */;
  %146 = reshape(%143, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %147 = @func_8064(%144, %145, %146) /* ty=(Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) */;
  %148 = %147.3;
  %149 = cast(%var_10901, dtype="bool") /* ty=Tensor[(405), bool] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(1), int32] */;
  %151 = cast(%148, dtype="bool") /* ty=Tensor[(405), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?), bool] */;
  %153 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  %154 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %155 = greater(%151, %152) /* ty=Tensor[(405), bool] */;
  (%153, %154, meta[relay.Constant][13] /* ty=Tensor[(24), float32] */, %var_10895, meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, %155)
}

def @func_6564() -> Tensor[(11, 8, 12), float32] {
  @func_6483() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_11920(%var_11877: Tensor[(11, 8, 12), float32], %var_11910: Tensor[(1183), float64]) -> (Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) {
  %156 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %157 = %156.1;
  %158 = cast(%var_11877, dtype="uint8") /* ty=Tensor[(11, 8, 12), uint8] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="uint8") /* ty=Tensor[(11, 8, 12), uint8] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %162 = cast(meta[relay.Constant][15] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %163 = reshape(%162, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %164 = @func_551(%163) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %165 = cast(meta[relay.Constant][16] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %166 = reshape(%165, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %167 = @func_2228(%166) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
  %168 = cast(%var_11910, dtype="uint32") /* ty=Tensor[(1183), uint32] */;
  %169 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %170 = cast(meta[relay.Constant][16] /* ty=Tensor[(1183), float64] */, dtype="uint32") /* ty=Tensor[(1183), uint32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %172 = subtract(%160, %161) /* ty=Tensor[(11, 8, 12), uint8] */;
  %173 = %164.0;
  %174 = %167.1;
  %175 = logical_xor(%170, %171) /* ty=Tensor[(1183), uint32] */;
  (%172, %173, meta[relay.Constant][15] /* ty=Tensor[(896), float64] */, %174, %175)
}

def @func_7056() -> (Tensor[(11, 8, 12), float32],) {
  %176 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%176,)
}

def @func_1197(%var_1188: Tensor[(13, 6, 10), uint8]) -> (Tensor[(13, 6, 10), uint8],) {
  %177 = cast(%var_1188, dtype="uint8") /* ty=Tensor[(13, 6, 10), uint8] */;
  %178 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 10), uint8] */, dtype="uint8") /* ty=Tensor[(13, 6, 10), uint8] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %181 = bitwise_and(%179, %180) /* ty=Tensor[(13, 6, 10), uint8] */;
  (%181,)
}

def @func_2192(%var_2168: Tensor[(1, 12, 13), int8]) -> (Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) {
  %182 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %183 = cast(%var_2168, dtype="bool") /* ty=Tensor[(1, 12, 13), bool] */;
  %184 = cast(meta[relay.Constant][19] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %185 = reshape(%184, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %186 = @func_551(%185) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %187 = cast(%var_2168, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %188 = not_equal(%182, %183) /* ty=Tensor[(1, 12, 13), bool] */;
  %189 = %186.0;
  %190 = log(%187) /* ty=Tensor[(1, 12, 13), float64] */;
  (%188, %189, meta[relay.Constant][19] /* ty=Tensor[(896), float64] */, %190)
}

def @func_9879() -> Tensor[(11, 8, 12), float32] {
  @func_7010() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_5477(%var_5457: Tensor[(5, 12, 14), int64]) -> Tensor[(5, 12, 14), uint32] {
  %191 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %192 = cast(%var_5457, dtype="int64") /* ty=Tensor[(5, 12, 14), int64] */;
  %193 = minimum(%191, %192) /* ty=Tensor[(5, 12, 14), int64] */;
  %194 = cast(-8 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
  %195 = cast(%193, dtype="uint32") /* ty=Tensor[(5, 12, 14), uint32] */;
  logical_xor(%194, %195) /* ty=Tensor[(5, 12, 14), uint32] */
}

def @func_8859(%var_8795: float64, %var_8850: Tensor[(780), uint8], %var_8852: Tensor[(150, 14), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(1183), int16], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(12, 1, 1), uint8], float64, Tensor[(12), float64], Tensor[(5, 12, 14), uint32], Tensor[(840), int64], Tensor[(11, 8, 12), float32], Tensor[(135, 3), float32], Tensor[(9, 60), uint8], Tensor[(780), uint8], Tensor[(3, 135), float32], Tensor[(150, 14), float64]) {
  %196 = cast(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %197 = reshape(%196, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %198 = @func_1428(%197) /* ty=Tensor[(13, 7, 13), float64] */;
  %199 = cast(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %203 = cast(%198, dtype="int16") /* ty=Tensor[(13, 7, 13), int16] */;
  %204 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %205 = cast(meta[relay.Constant][20] /* ty=Tensor[(1183), float64] */, dtype="int16") /* ty=Tensor[(1183), int16] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?), int16] */;
  %207 = cast(meta[relay.Constant][21] /* ty=Tensor[(81), uint8] */, dtype="uint8") /* ty=Tensor[(81), uint8] */;
  %208 = cast(meta[relay.Constant][22] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %209 = reshape(%207, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
  %210 = reshape(%208, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %211 = @func_5231(%209, %210) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
  %212 = cast(%var_8795, dtype="float64") /* ty=float64 */;
  %213 = cast(meta[relay.Constant][23] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %214 = reshape(%212, newshape=[]) /* ty=float64 */;
  %215 = reshape(%213, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
  %216 = @func_7418(%214, %215) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) */;
  %217 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %218 = reshape(%217, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int64] */;
  %219 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 60), uint8] */, dtype="uint8") /* ty=Tensor[(9, 60), uint8] */;
  %220 = cast(%var_8850, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %221 = bitwise_xor(%205, %206) /* ty=Tensor[(1183), int16] */;
  %222 = cast(%221, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %223 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %224 = cast(%var_8852, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
  %225 = reshape(%219, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %226 = reshape(%220, newshape=[130, 6]) /* ty=Tensor[(130, 6), uint8] */;
  %227 = reshape(%222, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %228 = reshape(%223, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
  %229 = reshape(%224, newshape=[15, 140]) /* ty=Tensor[(15, 140), float64] */;
  %230 = @func_7761(%225, %226, %227, %228, %229) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) */;
  %231 = @func_8583() /* ty=Tensor[(11, 8, 12), float32] */;
  %232 = power(%201, %202) /* ty=Tensor[(13, 7, 13), float64] */;
  %233 = %211.1;
  %234 = %216.1;
  %235 = @func_5477(%218) /* ty=Tensor[(5, 12, 14), uint32] */;
  %236 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %237 = %230.11;
  (%231, %232, %221, %233, meta[relay.Constant][21] /* ty=Tensor[(81), uint8] */, meta[relay.Constant][22] /* ty=Tensor[(1430), int16] */, %234, %var_8795, meta[relay.Constant][23] /* ty=Tensor[(12), float64] */, %235, meta[relay.Constant][24] /* ty=Tensor[(840), int64] */, %236, %237, meta[relay.Constant][25] /* ty=Tensor[(9, 60), uint8] */, %var_8850, meta[relay.Constant][26] /* ty=Tensor[(3, 135), float32] */, %var_8852)
}

def @func_13684() -> (Tensor[(11, 9, 4), uint8], Tensor[(12, 4, 14), float32]) {
  %238 = @func_9969() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) */;
  %239 = @func_11499() /* ty=Tensor[(12, 4, 14), float64] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(12, 4, 14), float32] */;
  %241 = %238.1;
  %242 = sinh(%240) /* ty=Tensor[(12, 4, 14), float32] */;
  (%241, %242)
}

def @func_8241(%var_8205: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64],) {
  %243 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %244 = cast(%var_8205, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = greater(%246, %247) /* ty=Tensor[(11, 8, 12), bool] */;
  %249 = cast(%var_8205, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %253 = divide(%251, %252) /* ty=Tensor[(11, 8, 12), float64] */;
  (%253,)
}

def @func_8021() -> Tensor[(11, 8, 12), float32] {
  %254 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  atan(%255) /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12330() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), float32]) {
  %256 = @func_10648() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %257 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %258 = cast(meta[relay.Constant][27] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %259 = reshape(%258, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %260 = @func_3548(%259) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %261 = %256.0;
  %262 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %263 = %257.0;
  %264 = %260.0;
  %265 = @func_8583() /* ty=Tensor[(11, 8, 12), float32] */;
  (%261, %262, %263, %264, meta[relay.Constant][27] /* ty=Tensor[(396), uint8] */, %265)
}

def @func_7241(%var_7196: Tensor[(1183), float64], %var_7221: uint64, %var_7222: Tensor[(3, 24), uint64], %var_7225: Tensor[(540), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) {
  %266 = cast(meta[relay.Constant][28] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %267 = cast(%var_7196, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %268 = reshape(%266, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %269 = reshape(%267, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %270 = @func_5729(%268, %269) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
  %271 = cast(%var_7221, dtype="uint64") /* ty=uint64 */;
  %272 = cast(%var_7222, dtype="uint64") /* ty=Tensor[(3, 24), uint64] */;
  %273 = reshape(%271, newshape=[]) /* ty=uint64 */;
  %274 = reshape(%272, newshape=[8, 1, 9]) /* ty=Tensor[(8, 1, 9), uint64] */;
  %275 = cast(%var_7225, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %276 = reshape(%275, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %277 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %278 = %270.0;
  %279 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %280 = @func_4118(%273, %274) /* ty=Tensor[(8, 1, 9), uint64] */;
  %281 = @func_5603(%276) /* ty=Tensor[(12, 15, 3), uint8] */;
  %282 = @func_7151() /* ty=Tensor[(11, 8, 12), float32] */;
  (%277, %278, meta[relay.Constant][28] /* ty=Tensor[(195), float64] */, %var_7196, %279, %280, %var_7221, %var_7222, %281, %var_7225, %282)
}

def @func_12749() -> (Tensor[(11, 8, 12), float32],) {
  %283 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%283,)
}

def @func_6745(%var_6703: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  %284 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %285 = cast(%var_6703, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%284, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %289 = cast(meta[relay.Constant][29] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %290 = reshape(%289, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %291 = @func_3548(%290) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %292 = mod(%287, %288) /* ty=Tensor[(11, 8, 12), float64] */;
  %293 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %294 = %291.0;
  (%292, %293, %294, meta[relay.Constant][29] /* ty=Tensor[(396), uint8] */)
}

def @func_7529(%var_7507: Tensor[(16, 7, 15), float32], %var_7508: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(1, 4, 4), float64], Tensor[(1, 16), float64], Tensor[(4, 8, 9), float64], Tensor[(288), float64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8]) {
  %295 = cast(%var_7508, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %296 = shape_of(%var_7507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_7507, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %299 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %300 = reshape(%299, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %301 = cast(meta[relay.Constant][31] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %302 = reshape(%301, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %303 = @func_322(%302) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
  %304 = cast(meta[relay.Constant][32] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %305 = reshape(%304, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %306 = minimum(%297, %298) /* ty=Tensor[(16, 7, 15), float32] */;
  %307 = @func_4274(%300) /* ty=Tensor[(1, 4, 4), float64] */;
  %308 = %303.0;
  %309 = @func_5603(%305) /* ty=Tensor[(12, 15, 3), uint8] */;
  (%306, %307, meta[relay.Constant][30] /* ty=Tensor[(1, 16), float64] */, %308, meta[relay.Constant][31] /* ty=Tensor[(288), float64] */, %309, meta[relay.Constant][32] /* ty=Tensor[(540), uint8] */)
}

def @func_13445() -> (Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) {
  %310 = @func_11844() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %311 = cast(meta[relay.Constant][33] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %312 = reshape(%311, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %313 = @func_2228(%312) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
  %314 = %313.2;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %316 = log10(%315) /* ty=Tensor[(1183, 1), float64] */;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %318 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 27), uint8] */, dtype="uint8") /* ty=Tensor[(3, 27), uint8] */;
  %319 = cast(meta[relay.Constant][35] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %320 = reshape(%318, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
  %321 = reshape(%319, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %322 = @func_5231(%320, %321) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
  %323 = %310.0;
  %324 = exp(%317) /* ty=Tensor[(1183, 1), float64] */;
  %325 = %322.1;
  (%323, meta[relay.Constant][33] /* ty=Tensor[(1183), float64] */, %324, %325, meta[relay.Constant][34] /* ty=Tensor[(3, 27), uint8] */, meta[relay.Constant][35] /* ty=Tensor[(1430), int16] */)
}

def @func_11015() -> Tensor[(11, 8, 12), float32] {
  %326 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %326.0
}

def @main(%var_14701: Tensor[(78, 2), int8]) -> (Tensor[(11, 8, 12), float32], Tensor[(78, 2), float64], Tensor[(78, 2), float32]) {
  %327 = cast(%var_14701, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %328 = tan(%327) /* ty=Tensor[(78, 2), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %330 = cast(%var_14701, dtype="int8") /* ty=Tensor[(78, 2), int8] */;
  %331 = reshape(%330, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %332 = @func_2192(%331) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %335 = shape_of(%328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %336 = cast(%328, dtype="float32") /* ty=Tensor[(78, 2), float32] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %338 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %339 = atan(%329) /* ty=Tensor[(78, 2), float64] */;
  %340 = multiply(%336, %337) /* ty=Tensor[(78, 2), float32] */;
  (%338, %339, %340)
}

def @func_11067() -> Tensor[(11, 8, 12), float32] {
  %341 = @func_10648() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %341.0
}

def @func_11829(%var_11685: Tensor[(15, 12, 5), float64], %var_11826: Tensor[(396), uint8]) -> (Tensor[(15, 12, 5), float64], Tensor[(896), float64], Tensor[(15, 12, 5), bool], Tensor[(4, 14, 16), bool], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), uint16], Tensor[(396), uint8], Tensor[(672), float64]) {
  %342 = cast(%var_11685, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
  %343 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %346 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(15, 12, 5), bool] */;
  %347 = shape_of(%var_11685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_11685, dtype="bool") /* ty=Tensor[(15, 12, 5), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = cast(meta[relay.Constant][37] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %351 = reshape(%350, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %352 = @func_551(%351) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %355 = sigmoid(%354) /* ty=Tensor[(4, 14, 16), float64] */;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(4, 14, 16), float32] */;
  %357 = rsqrt(%356) /* ty=Tensor[(4, 14, 16), float32] */;
  %358 = cast(%355, dtype="bool") /* ty=Tensor[(4, 14, 16), bool] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="bool") /* ty=Tensor[(4, 14, 16), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %362 = cast(%357, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %363 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %365 = cast(%var_11826, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %366 = cast(meta[relay.Constant][38] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %367 = reshape(%364, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %368 = reshape(%365, newshape=[396]) /* ty=Tensor[(396), uint8] */;
  %369 = reshape(%366, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %370 = @func_9243(%367, %368, %369) /* ty=(Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
  %371 = divide(%344, %345) /* ty=Tensor[(15, 12, 5), float64] */;
  %372 = less_equal(%348, %349) /* ty=Tensor[(15, 12, 5), bool] */;
  %373 = not_equal(%360, %361) /* ty=Tensor[(4, 14, 16), bool] */;
  %374 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %375 = sinh(%362) /* ty=Tensor[(4, 14, 16), float64] */;
  %376 = %370.3;
  (%371, meta[relay.Constant][37] /* ty=Tensor[(896), float64] */, %372, %373, %374, %375, %363, %376, %var_11826, meta[relay.Constant][38] /* ty=Tensor[(672), float64] */)
}

def @func_12883(%var_12857: Tensor[(13, 4, 8), float32], %var_12864: Tensor[(156), int8]) -> (Tensor[(13, 4, 8), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(156), int8], Tensor[(945), float32]) {
  %377 = cast(%var_12857, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
  %378 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(13, 4, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %381 = @func_12625() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %382 = cast(%var_12864, dtype="int8") /* ty=Tensor[(156), int8] */;
  %383 = reshape(%382, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %384 = @func_8633(%383) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) */;
  %385 = floor_mod(%379, %380) /* ty=Tensor[(13, 4, 8), float32] */;
  %386 = %381.0;
  %387 = %384.0;
  %388 = @func_10029() /* ty=Tensor[(945), float32] */;
  (%385, %386, %387, %var_12864, %388)
}

def @func_2634(%var_2626: Tensor[(14, 1, 10), float32]) -> Tensor[(14, 1, 10), float32] {
  %389 = cast(%var_2626, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
  cos(%389) /* ty=Tensor[(14, 1, 10), float32] */
}

def @func_6178(%var_6174: Tensor[(7, 6, 8), float32]) -> (Tensor[(7, 6, 8), float32],) {
  %390 = cast(%var_6174, dtype="float32") /* ty=Tensor[(7, 6, 8), float32] */;
  %391 = cosh(%390) /* ty=Tensor[(7, 6, 8), float32] */;
  (%391,)
}

def @func_8308(%var_8278: Tensor[(5, 156), uint8], %var_8279: Tensor[(1183), float64], %var_8281: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) {
  %392 = cast(meta[relay.Constant][40] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
  %393 = cast(%var_8278, dtype="uint8") /* ty=Tensor[(5, 156), uint8] */;
  %394 = cast(%var_8279, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %395 = cast(meta[relay.Constant][41] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %396 = cast(%var_8281, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %397 = reshape(%392, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %398 = reshape(%393, newshape=[130, 6]) /* ty=Tensor[(130, 6), uint8] */;
  %399 = reshape(%394, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %400 = reshape(%395, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
  %401 = reshape(%396, newshape=[15, 140]) /* ty=Tensor[(15, 140), float64] */;
  %402 = @func_7761(%397, %398, %399, %400, %401) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) */;
  %403 = cast(meta[relay.Constant][40] /* ty=Tensor[(54, 10), uint8] */, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %404 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %405 = %402.8;
  %406 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %407 = cosh(%403) /* ty=Tensor[(54, 10), float32] */;
  (%404, %405, %var_8278, %var_8279, meta[relay.Constant][41] /* ty=Tensor[(405), float32] */, %var_8281, %406, %407)
}

def @func_9789() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) {
  %408 = cast(meta[relay.Constant][42] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %409 = cast(meta[relay.Constant][42] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %410 = reshape(%408, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %411 = reshape(%409, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %412 = @func_619(%410, %411) /* ty=(Tensor[(11, 13, 10), bool],) */;
  %413 = cast(meta[relay.Constant][43] /* ty=Tensor[(78, 2), int8] */, dtype="int8") /* ty=Tensor[(78, 2), int8] */;
  %414 = reshape(%413, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %415 = @func_8633(%414) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) */;
  %416 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %417 = cast(meta[relay.Constant][44] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %418 = reshape(%417, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %419 = @func_249(%418) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %420 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %421 = cast(meta[relay.Constant][46] /* ty=Tensor[(100), uint16] */, dtype="uint16") /* ty=Tensor[(100), uint16] */;
  %422 = reshape(%420, newshape=[]) /* ty=uint16 */;
  %423 = reshape(%421, newshape=[2, 10, 5]) /* ty=Tensor[(2, 10, 5), uint16] */;
  %424 = @func_7826(%422, %423) /* ty=(Tensor[(2, 10, 5), bool],) */;
  %425 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %426 = %412.0;
  %427 = %415.3;
  %428 = %416.0;
  %429 = %419.0;
  %430 = %424.0;
  %431 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  (%425, %426, meta[relay.Constant][42] /* ty=Tensor[(1430), int16] */, %427, meta[relay.Constant][43] /* ty=Tensor[(78, 2), int8] */, %428, %429, meta[relay.Constant][44] /* ty=Tensor[(945), float32] */, %430, meta[relay.Constant][45] /* ty=uint16 */, meta[relay.Constant][46] /* ty=Tensor[(100), uint16] */, %431)
}

def @func_9294() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10736() -> (Tensor[(11, 8, 12), float32],) {
  %432 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%432,)
}

def @func_13770(%var_13762: int32) -> Tensor[(6, 9, 10), int32] {
  %433 = cast(%var_13762, dtype="int32") /* ty=int32 */;
  %434 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(6, 9, 10), int32] */;
  bitwise_or(%433, %434) /* ty=Tensor[(6, 9, 10), int32] */
}

def @func_7761(%var_7711: Tensor[(540), uint8], %var_7714: Tensor[(130, 6), uint8], %var_7740: Tensor[(1, 1183), float64], %var_7743: Tensor[(135, 3), float32], %var_7744: Tensor[(15, 140), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) {
  %435 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %437 = cast(%var_7711, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %438 = cast(meta[relay.Constant][48] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %439 = cast(meta[relay.Constant][49] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %440 = cast(%var_7714, dtype="uint8") /* ty=Tensor[(130, 6), uint8] */;
  %441 = reshape(%437, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %442 = reshape(%438, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %443 = reshape(%439, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %444 = reshape(%440, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %445 = @func_6956(%441, %442, %443, %444) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %446 = cast(meta[relay.Constant][50] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %447 = cast(%var_7740, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
  %448 = reshape(%446, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %449 = reshape(%447, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %450 = @func_5729(%448, %449) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
  %451 = cast(%var_7743, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %452 = cast(%var_7743, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %453 = cast(%var_7744, dtype="float64") /* ty=Tensor[(15, 140), float64] */;
  %454 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %455 = reshape(%451, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %456 = reshape(%452, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %457 = reshape(%453, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %458 = reshape(%454, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %459 = @func_5526(%455, %456, %457, %458) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %460 = acosh(%436) /* ty=Tensor[(11, 8, 12), float64] */;
  %461 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %462 = %445.4;
  %463 = %450.0;
  %464 = %459.7;
  (%460, %461, %462, %var_7711, meta[relay.Constant][48] /* ty=Tensor[(260), float64] */, meta[relay.Constant][49] /* ty=Tensor[(182), float64] */, %var_7714, %463, meta[relay.Constant][50] /* ty=Tensor[(195), float64] */, %var_7740, %464, %var_7743, %var_7744, meta[relay.Constant][51] /* ty=Tensor[(672), float64] */)
}

def @func_12607(%var_12602: Tensor[(336), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(7, 6, 8), float32], Tensor[(336), float32]) {
  %465 = @func_11844() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %466 = cast(%var_12602, dtype="float32") /* ty=Tensor[(336), float32] */;
  %467 = reshape(%466, newshape=[7, 6, 8]) /* ty=Tensor[(7, 6, 8), float32] */;
  %468 = @func_6178(%467) /* ty=(Tensor[(7, 6, 8), float32],) */;
  %469 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %470 = %465.0;
  %471 = %468.0;
  (%469, %470, %471, %var_12602)
}

def @func_9243(%var_9195: Tensor[(11, 8, 12), float32], %var_9230: Tensor[(396), uint8], %var_9241: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %472 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %473 = cast(%var_9195, dtype="int64") /* ty=Tensor[(11, 8, 12), int64] */;
  %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%472, dtype="int64") /* ty=Tensor[(11, 8, 12), int64] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %477 = cast(%var_9230, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %478 = reshape(%477, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %479 = @func_3548(%478) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %480 = bitwise_xor(%475, %476) /* ty=Tensor[(11, 8, 12), int64] */;
  %481 = cast(%480, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %482 = reshape(%481, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %483 = @func_7684(%482) /* ty=(Tensor[(11, 8, 12), uint16],) */;
  %484 = cast(%var_9241, dtype="float64") /* ty=Tensor[(672), float64] */;
  %485 = reshape(%484, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %486 = @func_1092(%485) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %487 = %479.0;
  %488 = %483.0;
  %489 = %486.0;
  (%480, %487, %var_9230, %488, %489, %var_9241)
}

def @func_12466(%var_12461: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
  %490 = cast(%var_12461, dtype="float64") /* ty=Tensor[(4, 2, 1), float64] */;
  acos(%490) /* ty=Tensor[(4, 2, 1), float64] */
}

def @func_8334() -> (Tensor[(11, 8, 12), float32],) {
  %491 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%491,)
}

def @func_11220() -> Tensor[(11, 8, 12), float64] {
  @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_12286(%var_12260: Tensor[(5, 156), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32], Tensor[(5, 156), uint8], Tensor[(1, 1183), float64], Tensor[(2100), float64], Tensor[(11, 8, 12), float32]) {
  %492 = cast(meta[relay.Constant][52] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %493 = cast(meta[relay.Constant][53] /* ty=Tensor[(100), uint16] */, dtype="uint16") /* ty=Tensor[(100), uint16] */;
  %494 = reshape(%492, newshape=[]) /* ty=uint16 */;
  %495 = reshape(%493, newshape=[2, 10, 5]) /* ty=Tensor[(2, 10, 5), uint16] */;
  %496 = @func_7826(%494, %495) /* ty=(Tensor[(2, 10, 5), bool],) */;
  %497 = cast(%var_12260, dtype="uint8") /* ty=Tensor[(5, 156), uint8] */;
  %498 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1183), float64] */, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
  %499 = cast(meta[relay.Constant][55] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %500 = reshape(%497, newshape=[5, 156]) /* ty=Tensor[(5, 156), uint8] */;
  %501 = reshape(%498, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %502 = reshape(%499, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %503 = @func_8308(%500, %501, %502) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) */;
  %504 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %505 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %506 = %496.0;
  %507 = %503.6;
  %508 = %504.0;
  (%505, %506, meta[relay.Constant][52] /* ty=uint16 */, meta[relay.Constant][53] /* ty=Tensor[(100), uint16] */, %507, %var_12260, meta[relay.Constant][54] /* ty=Tensor[(1, 1183), float64] */, meta[relay.Constant][55] /* ty=Tensor[(2100), float64] */, %508)
}

def @func_7418(%var_7401: float64, %var_7402: Tensor[(12, 1, 1), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) {
  %509 = cast(%var_7401, dtype="float64") /* ty=float64 */;
  %510 = cast(%var_7402, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %511 = cast(%var_7402, dtype="uint8") /* ty=Tensor[(12, 1, 1), uint8] */;
  %512 = cast(%var_7401, dtype="uint8") /* ty=uint8 */;
  %513 = floor_divide(%509, %510) /* ty=Tensor[(12, 1, 1), float64] */;
  %514 = add(%511, %512) /* ty=Tensor[(12, 1, 1), uint8] */;
  (%513, %514)
}

def @func_11499() -> Tensor[(12, 4, 14), float64] {
  %515 = @func_10701() /* ty=(Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) */;
  %515.2
}

def @func_4274(%var_4262: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
  %516 = cast(%var_4262, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
  exp(%516) /* ty=Tensor[(1, 4, 4), float64] */
}

def @func_8503(%var_8430: Tensor[(150, 14), float64], %var_8480: Tensor[(1183, 1), float64], %var_8481: uint64) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) {
  %517 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %518 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %519 = %518.0;
  %520 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %521 = cast(%520, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %522 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%519, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
  %526 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
  %527 = cast(%var_8430, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
  %528 = cast(meta[relay.Constant][57] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %529 = reshape(%525, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %530 = reshape(%526, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %531 = reshape(%527, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %532 = reshape(%528, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %533 = @func_5526(%529, %530, %531, %532) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %534 = cast(meta[relay.Constant][58] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %535 = reshape(%534, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %536 = cast(meta[relay.Constant][57] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %537 = reshape(%536, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %538 = @func_7950(%537) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %539 = cast(%var_8480, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %540 = cast(%var_8481, dtype="uint64") /* ty=uint64 */;
  %541 = cast(meta[relay.Constant][59] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %542 = @func_5603(%535) /* ty=Tensor[(12, 15, 3), uint8] */;
  %543 = cast(%542, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
  %544 = reshape(%539, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %545 = reshape(%540, newshape=[]) /* ty=uint64 */;
  %546 = reshape(%541, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
  %547 = reshape(%543, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %548 = @func_7241(%544, %545, %546, %547) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) */;
  %549 = %517.0;
  %550 = not_equal(%523, %524) /* ty=Tensor[(11, 8, 12), bool] */;
  %551 = %533.1;
  %552 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %553 = %538.3;
  %554 = %548.10;
  (%549, %550, %551, meta[relay.Constant][56] /* ty=Tensor[(9, 45), float32] */, %var_8430, meta[relay.Constant][57] /* ty=Tensor[(672), float64] */, %552, %542, meta[relay.Constant][58] /* ty=Tensor[(540), uint8] */, %553, %554, %var_8480, %var_8481, meta[relay.Constant][59] /* ty=Tensor[(72), uint64] */)
}

def @func_9362() -> (Tensor[(11, 8, 12), float32],) {
  %555 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %557 = asinh(%556) /* ty=Tensor[(11, 8, 12), float32] */;
  (%557,)
}

def @func_13608() -> (Tensor[(11, 8, 12), float32],) {
  %558 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
  %559 = %558.1;
  (%559,)
}

def @func_10767() -> (Tensor[(11, 8, 12), float32],) {
  %560 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%560,)
}

def @func_14532() -> (Tensor[(11, 8, 12), float32],) {
  %561 = @func_13976() /* ty=Tensor[(11, 8, 12), float32] */;
  (%561,)
}

def @func_551(%var_548: Tensor[(4, 14, 16), float64]) -> (Tensor[(4, 14, 16), float64],) {
  %562 = cast(%var_548, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %563 = tan(%562) /* ty=Tensor[(4, 14, 16), float64] */;
  (%563,)
}

def @func_13815() -> Tensor[(11, 8, 12), float32] {
  @func_10932() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13878(%var_13874: Tensor[(3, 132), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(3, 132), uint8]) {
  %564 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %565 = cast(%var_13874, dtype="uint8") /* ty=Tensor[(3, 132), uint8] */;
  %566 = reshape(%565, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %567 = @func_3548(%566) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %568 = %564.3;
  %569 = %567.0;
  (%568, %569, %var_13874)
}

def @func_13976() -> Tensor[(11, 8, 12), float32] {
  %570 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %570.0
}

def @func_12832() -> (Tensor[(11, 8, 12), float32],) {
  %571 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  (%571,)
}

def @func_3548(%var_3538: Tensor[(11, 9, 4), uint8]) -> (Tensor[(11, 9, 4), uint8],) {
  %572 = cast(%var_3538, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %573 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(11, 9, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 9, 4), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %576 = left_shift(%574, %575) /* ty=Tensor[(11, 9, 4), uint8] */;
  (%576,)
}

def @func_10627() -> Tensor[(11, 8, 12), float32] {
  @func_7151() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13514() -> Tensor[(11, 8, 12), float32] {
  @func_9811() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14329(%var_14305: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(224, 4), float64], Tensor[(896), float64], Tensor[(11, 8, 12), float32], Tensor[(182), float64]) {
  %577 = @func_13364() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %578 = cast(%var_14305, dtype="float64") /* ty=Tensor[(896), float64] */;
  %579 = reshape(%578, newshape=[224, 4]) /* ty=Tensor[(224, 4), float64] */;
  %580 = @func_12167(%579) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) */;
  %581 = cast(meta[relay.Constant][61] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %582 = reshape(%581, newshape=[13, 14]) /* ty=Tensor[(13, 14), float64] */;
  %583 = @func_11313(%582) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) */;
  %584 = %577.0;
  %585 = %580.2;
  %586 = %583.1;
  (%584, %585, %var_14305, %586, meta[relay.Constant][61] /* ty=Tensor[(182), float64] */)
}

def @func_9031() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %587 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %588 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%587, %588)
}

def @func_8633(%var_8610: Tensor[(156), int8]) -> (Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) {
  %589 = cast(%var_8610, dtype="int8") /* ty=Tensor[(156), int8] */;
  %590 = reshape(%589, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %591 = @func_2192(%590) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %592 = cast(meta[relay.Constant][62] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %593 = cast(%var_8610, dtype="int8") /* ty=Tensor[(156), int8] */;
  %594 = %591.2;
  %595 = cast(%594, dtype="float64") /* ty=Tensor[(896), float64] */;
  %596 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %598 = reshape(%592, newshape=[396]) /* ty=Tensor[(396), uint8] */;
  %599 = reshape(%593, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %600 = reshape(%595, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %601 = reshape(%597, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %602 = @func_7300(%598, %599, %600, %601) /* ty=(Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) */;
  %603 = %602.7;
  (%596, %594, %var_8610, %603, meta[relay.Constant][62] /* ty=Tensor[(396), uint8] */)
}

def @func_7621() -> (Tensor[(11, 8, 12), float32],) {
  %604 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%604,)
}

def @func_7684(%var_7669: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), uint16],) {
  %605 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %606 = cast(%var_7669, dtype="uint16") /* ty=Tensor[(11, 8, 12), uint16] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="uint16") /* ty=Tensor[(11, 8, 12), uint16] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %610 = right_shift(%608, %609) /* ty=Tensor[(11, 8, 12), uint16] */;
  (%610,)
}

def @func_14555() -> Tensor[(11, 8, 12), float64] {
  @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_10070() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %611 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %612 = @func_9294() /* ty=Tensor[(11, 8, 12), float32] */;
  %613 = %611.0;
  %614 = @func_9294() /* ty=Tensor[(11, 8, 12), float32] */;
  (%612, %613, %614)
}

def @func_13495() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %615 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %616 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%615, %616)
}

def @func_2228(%var_2225: Tensor[(1183, 1), float64]) -> (Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) {
  %617 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 13), float32] */;
  %618 = cast(%var_2225, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
  %619 = reshape(%618, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %620 = tan(%617) /* ty=Tensor[(7, 12, 13), float32] */;
  %621 = @func_1428(%619) /* ty=Tensor[(13, 7, 13), float64] */;
  (%620, %621, %var_2225)
}

def @func_10648() -> (Tensor[(11, 8, 12), float32],) {
  %622 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_11132() -> Tensor[(11, 8, 12), float32] {
  %624 = @func_10070() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %624.2
}

def @func_8904() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7950(%var_7897: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %625 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %626 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %630 = cast(%var_7897, dtype="float64") /* ty=Tensor[(672), float64] */;
  %631 = reshape(%630, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %632 = @func_1092(%631) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %633 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %634 = less_equal(%628, %629) /* ty=Tensor[(11, 8, 12), bool] */;
  %635 = %632.0;
  %636 = %633.0;
  %637 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%634, %635, %var_7897, %636, %637)
}

def @func_5526(%var_5491: Tensor[(9, 5, 9), float32], %var_5492: Tensor[(9, 5, 9), float32], %var_5500: Tensor[(2100), float64], %var_5512: Tensor[(672), float64]) -> (Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) {
  %638 = cast(%var_5500, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %639 = reshape(%638, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
  %640 = @func_2346(%639) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
  %641 = cast(%var_5512, dtype="float64") /* ty=Tensor[(672), float64] */;
  %642 = reshape(%641, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %643 = @func_1092(%642) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %644 = cast(%var_5492, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
  %645 = shape_of(%var_5491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_5491, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %648 = power(%646, %647) /* ty=Tensor[(9, 5, 9), float32] */;
  %649 = cast(%648, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  %650 = cast(meta[relay.Constant][65] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %651 = cast(meta[relay.Constant][66] /* ty=Tensor[(13, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
  %652 = reshape(%650, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
  %653 = reshape(%651, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %654 = @func_987(%652, %653) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
  %655 = %640.2;
  %656 = %643.0;
  %657 = tan(%649) /* ty=Tensor[(9, 5, 9), float64] */;
  %658 = %654.1;
  (%655, %var_5500, %656, %var_5512, %657, %658, meta[relay.Constant][65] /* ty=Tensor[(260), float64] */, meta[relay.Constant][66] /* ty=Tensor[(13, 14), float64] */)
}

def @func_11657() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %659 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %660 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %661 = %659.0;
  %662 = %660.0;
  %663 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  %664 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%661, %662, %663, %664)
}

def @func_5729(%var_5693: Tensor[(15, 1, 13), float64], %var_5697: Tensor[(1183), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) {
  %665 = cast(%var_5697, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %666 = reshape(%665, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
  %667 = cast(%var_5693, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  %668 = exp(%667) /* ty=Tensor[(15, 1, 13), float64] */;
  %669 = cast(%var_5693, dtype="uint16") /* ty=Tensor[(15, 1, 13), uint16] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%668, dtype="uint16") /* ty=Tensor[(15, 1, 13), uint16] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %673 = @func_1428(%666) /* ty=Tensor[(13, 7, 13), float64] */;
  %674 = bitwise_or(%671, %672) /* ty=Tensor[(15, ?, 13), uint16] */;
  (%673, %var_5697, %674)
}

def @func_9667() -> (Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %675 = cast(meta[relay.Constant][67] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %676 = reshape(%675, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %677 = @func_7950(%676) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %678 = cast(meta[relay.Constant][67] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %679 = reshape(%678, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %680 = @func_7950(%679) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %681 = cast(meta[relay.Constant][68] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %682 = reshape(%681, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
  %683 = @func_1197(%682) /* ty=(Tensor[(13, 6, 10), uint8],) */;
  %684 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %685 = %677.1;
  %686 = %680.3;
  %687 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %688 = %683.0;
  (%684, %685, meta[relay.Constant][67] /* ty=Tensor[(672), float64] */, %686, %687, %688, meta[relay.Constant][68] /* ty=Tensor[(780), uint8] */)
}

def @func_10029() -> Tensor[(945), float32] {
  %689 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %689.7
}

def @func_12204() -> Tensor[(11, 8, 12), float32] {
  @func_8904() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14080() -> (Tensor[(12, 4, 14), float64],) {
  %690 = @func_11499() /* ty=Tensor[(12, 4, 14), float64] */;
  (%690,)
}

def @func_9811() -> Tensor[(11, 8, 12), float32] {
  @func_7010() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13175() -> Tensor[(11, 8, 12), float32] {
  %691 = @func_11291() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %691.1
}

def @func_9176() -> Tensor[(11, 8, 12), float64] {
  %692 = @func_7151() /* ty=Tensor[(11, 8, 12), float32] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  cos(%693) /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_11678() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) {
  %694 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %695 = %694.6;
  %696 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  (%695, %696)
}

def @func_7140() -> Tensor[(11, 8, 12), float32] {
  @func_6575() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7001(%var_6979: Tensor[(5, 7, 13), float64]) -> (Tensor[(5, 7, 13), float64], float64, Tensor[(260), float64], Tensor[(182), float64]) {
  %697 = cast(%var_6979, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %698 = cast(meta[relay.Constant][69] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %699 = cast(meta[relay.Constant][70] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %700 = reshape(%698, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
  %701 = reshape(%699, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %702 = @func_987(%700, %701) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
  %703 = exp(%697) /* ty=Tensor[(5, 7, 13), float64] */;
  %704 = %702.2;
  (%703, %704, meta[relay.Constant][69] /* ty=Tensor[(260), float64] */, meta[relay.Constant][70] /* ty=Tensor[(182), float64] */)
}

def @func_12625() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %705 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %706 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %707 = %705.0;
  %708 = %706.0;
  (%707, %708)
}

def @func_10136(%var_10127: Tensor[(10, 10, 7), float32]) -> (Tensor[(10, 10, 7), float32],) {
  %709 = cast(%var_10127, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %710 = sqrt(%709) /* ty=Tensor[(10, 10, 7), float32] */;
  (%710,)
}

def @func_10208() -> Tensor[(672), float64] {
  %711 = @func_9667() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %711.2
}

def @func_519(%var_507: float64, %var_508: Tensor[(1, 13, 14), float64]) -> (Tensor[(1, 13, 14), bool],) {
  %712 = cast(%var_507, dtype="bool") /* ty=bool */;
  %713 = cast(%var_508, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
  %714 = greater(%712, %713) /* ty=Tensor[(1, 13, 14), bool] */;
  (%714,)
}

def @func_5231(%var_5175: Tensor[(9, 3, 3), uint8], %var_5196: Tensor[(1430), int16]) -> (Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) {
  %715 = cast(%var_5175, dtype="uint8") /* ty=Tensor[(9, 3, 3), uint8] */;
  %716 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(9, 3, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(meta[relay.Constant][71] /* ty=Tensor[(9, 3, 3), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 3), uint8] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %719 = cast(%var_5196, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %720 = cast(%var_5196, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %721 = reshape(%719, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %722 = reshape(%720, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %723 = @func_619(%721, %722) /* ty=(Tensor[(11, 13, 10), bool],) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="int32") /* ty=Tensor[(11, 13, 10), int32] */;
  %726 = shape_of(%var_5196, dtype="int32") /* ty=Tensor[(1), int32] */;
  %727 = cast(%var_5196, dtype="int32") /* ty=Tensor[(1430), int32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?), int32] */;
  %729 = right_shift(%717, %718) /* ty=Tensor[(9, 3, 3), uint8] */;
  %730 = minimum(%727, %728) /* ty=Tensor[(1430), int32] */;
  (%729, %730)
}

def @func_12151() -> Tensor[(11, 8, 12), float32] {
  @func_10967() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_4118(%var_4113: uint64, %var_4114: Tensor[(8, 1, 9), uint64]) -> Tensor[(8, 1, 9), uint64] {
  %731 = cast(%var_4113, dtype="uint64") /* ty=uint64 */;
  %732 = cast(%var_4114, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  multiply(%731, %732) /* ty=Tensor[(8, 1, 9), uint64] */
}

def @func_249(%var_244: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32],) {
  %733 = cast(%var_244, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
  %734 = atan(%733) /* ty=Tensor[(7, 9, 15), float32] */;
  (%734,)
}

def @func_9969() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) {
  %735 = @func_8082() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %736 = cast(meta[relay.Constant][72] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %737 = reshape(%736, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %738 = @func_3548(%737) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %739 = cast(meta[relay.Constant][73] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %740 = reshape(%739, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int64] */;
  %741 = @func_5477(%740) /* ty=Tensor[(5, 12, 14), uint32] */;
  %742 = cast(meta[relay.Constant][73] /* ty=Tensor[(840), int64] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="float32") /* ty=Tensor[(5, 12, 14), float32] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %746 = %735.0;
  %747 = %738.0;
  %748 = mod(%744, %745) /* ty=Tensor[(5, 12, 14), float32] */;
  (%746, %747, meta[relay.Constant][72] /* ty=Tensor[(396), uint8] */, %748)
}

def @func_9129(%var_9075: Tensor[(540), uint8], %var_9104: Tensor[(1, 336), float32], %var_9109: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) {
  %749 = cast(meta[relay.Constant][74] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %750 = cast(meta[relay.Constant][75] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %751 = cast(meta[relay.Constant][76] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %752 = cast(%var_9075, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %753 = reshape(%749, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %754 = reshape(%750, newshape=[]) /* ty=uint64 */;
  %755 = reshape(%751, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
  %756 = reshape(%752, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %757 = @func_7241(%753, %754, %755, %756) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) */;
  %758 = cast(%var_9104, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %759 = reshape(%758, newshape=[7, 6, 8]) /* ty=Tensor[(7, 6, 8), float32] */;
  %760 = @func_6178(%759) /* ty=(Tensor[(7, 6, 8), float32],) */;
  %761 = cast(meta[relay.Constant][75] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
  %762 = cast(%var_9109, dtype="float64") /* ty=Tensor[(12), float64] */;
  %763 = reshape(%761, newshape=[]) /* ty=float64 */;
  %764 = reshape(%762, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
  %765 = @func_7418(%763, %764) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) */;
  %766 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %767 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %768 = %757.7;
  %769 = %760.0;
  %770 = %765.1;
  (%766, %767, %768, meta[relay.Constant][74] /* ty=Tensor[(1183), float64] */, meta[relay.Constant][75] /* ty=uint64 */, meta[relay.Constant][76] /* ty=Tensor[(72), uint64] */, %var_9075, %769, %var_9104, %770, %var_9109)
}

def @func_11354() -> Tensor[(11, 8, 12), float32] {
  @func_9879() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_1359(%var_1342: Tensor[(14, 15, 1), int16], %var_1343: Tensor[(14, 15, 1), int16]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %771 = cast(%var_1343, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %772 = shape_of(%var_1342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%var_1342, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %775 = cast(meta[relay.Constant][77] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %776 = reshape(%775, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %777 = @func_1092(%776) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %778 = equal(%773, %774) /* ty=Tensor[(14, 15, ?), bool] */;
  %779 = %777.0;
  (%778, %779, meta[relay.Constant][77] /* ty=Tensor[(672), float64] */)
}

def @func_14419() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(11, 8, 12), float32]) {
  %780 = @func_13495() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %781 = @func_9969() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) */;
  %782 = @func_12059() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %783 = %780.1;
  %784 = %781.1;
  %785 = %782.0;
  (%783, %784, %785)
}

def @func_12369() -> Tensor[(11, 8, 12), float64] {
  @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_10351() -> (Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) {
  %786 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %787 = %786.5;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %789 = exp(%788) /* ty=Tensor[(11, 8, 12), float32] */;
  %790 = @func_10208() /* ty=Tensor[(672), float64] */;
  %791 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  (%789, %790, %791)
}

def @func_12846() -> Tensor[(11, 8, 12), float32] {
  @func_11354() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10701() -> (Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) {
  %792 = @func_10208() /* ty=Tensor[(672), float64] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(672), float64] */;
  %794 = reshape(%793, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %795 = @func_1092(%794) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
  %798 = @func_10029() /* ty=Tensor[(945), float32] */;
  %799 = acos(%797) /* ty=Tensor[(12, 4, 14), float64] */;
  (%792, %798, %799)
}

def @func_14507(%var_14502: Tensor[(2, 12, 5), float32]) -> (Tensor[(2, 12, 5), float32],) {
  %800 = cast(%var_14502, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %801 = acosh(%800) /* ty=Tensor[(2, 12, 5), float32] */;
  (%801,)
}

def @func_12517() -> (Tensor[(11, 8, 12), float32],) {
  %802 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  (%802,)
}

def @func_11099(%var_11083: Tensor[(81), uint8], %var_11097: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(14, 15, 10), uint8], Tensor[(2100), float64]) {
  %803 = cast(%var_11083, dtype="uint8") /* ty=Tensor[(81), uint8] */;
  %804 = cast(meta[relay.Constant][78] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %805 = reshape(%803, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
  %806 = reshape(%804, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %807 = @func_5231(%805, %806) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
  %808 = cast(%var_11097, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %809 = reshape(%808, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
  %810 = @func_2346(%809) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
  %811 = @func_9811() /* ty=Tensor[(11, 8, 12), float32] */;
  %812 = %807.1;
  %813 = %810.0;
  (%811, %812, %var_11083, meta[relay.Constant][78] /* ty=Tensor[(1430), int16] */, %813, %var_11097)
}

def @func_12167(%var_12162: Tensor[(224, 4), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) {
  %814 = cast(%var_12162, dtype="float64") /* ty=Tensor[(224, 4), float64] */;
  %815 = reshape(%814, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %816 = @func_11610(%815) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) */;
  %817 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  %818 = %816.1;
  (%817, %818, %var_12162)
}

def @func_4854(%var_4827: Tensor[(13, 13, 11), uint64], %var_4828: Tensor[(13, 13, 11), uint64], %var_4834: Tensor[(1, 240), int16], %var_4843: Tensor[(288), float64]) -> (Tensor[(13, 13, 11), bool], Tensor[(15, 2, 8), bool], int16, Tensor[(1, 240), int16], Tensor[(945), float32], Tensor[(288), float64], Tensor[(1, 13, 14), bool], Tensor[(182), float64]) {
  %819 = cast(%var_4828, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %820 = shape_of(%var_4827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_4827, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %823 = cast(meta[relay.Constant][79] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %824 = cast(%var_4834, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
  %825 = reshape(%823, newshape=[]) /* ty=int16 */;
  %826 = reshape(%824, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), int16] */;
  %827 = cast(%var_4843, dtype="float64") /* ty=Tensor[(288), float64] */;
  %828 = reshape(%827, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %829 = @func_322(%828) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
  %830 = cast(meta[relay.Constant][79] /* ty=int16 */, dtype="float64") /* ty=float64 */;
  %831 = cast(meta[relay.Constant][80] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %832 = reshape(%830, newshape=[]) /* ty=float64 */;
  %833 = reshape(%831, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %834 = @func_519(%832, %833) /* ty=(Tensor[(1, 13, 14), bool],) */;
  %835 = greater_equal(%821, %822) /* ty=Tensor[(13, 13, 11), bool] */;
  %836 = @func_4312(%825, %826) /* ty=Tensor[(15, 2, 8), bool] */;
  %837 = %829.1;
  %838 = %834.0;
  (%835, %836, meta[relay.Constant][79] /* ty=int16 */, %var_4834, %837, %var_4843, %838, meta[relay.Constant][80] /* ty=Tensor[(182), float64] */)
}

def @func_9510(%var_9448: Tensor[(336), float32], %var_9449: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(540), uint8], Tensor[(336), float32], Tensor[(12), float64], Tensor[(11, 8, 12), bool], Tensor[(11, 9, 4), uint8], Tensor[(5, 52), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %839 = cast(meta[relay.Constant][81] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %840 = cast(%var_9448, dtype="float32") /* ty=Tensor[(336), float32] */;
  %841 = cast(%var_9449, dtype="float64") /* ty=Tensor[(12), float64] */;
  %842 = reshape(%839, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %843 = reshape(%840, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
  %844 = reshape(%841, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %845 = @func_9129(%842, %843, %844) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) */;
  %846 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %848 = atanh(%847) /* ty=Tensor[(11, 8, 12), float32] */;
  %849 = cast(%846, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %853 = cast(meta[relay.Constant][81] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %854 = cast(meta[relay.Constant][82] /* ty=Tensor[(5, 52), float64] */, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %855 = cast(meta[relay.Constant][83] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %856 = cast(meta[relay.Constant][84] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %857 = reshape(%853, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %858 = reshape(%854, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %859 = reshape(%855, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %860 = reshape(%856, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %861 = @func_6956(%857, %858, %859, %860) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %862 = %845.1;
  %863 = logical_and(%851, %852) /* ty=Tensor[(11, 8, 12), bool] */;
  %864 = %861.6;
  (%862, meta[relay.Constant][81] /* ty=Tensor[(540), uint8] */, %var_9448, %var_9449, %863, %864, meta[relay.Constant][82] /* ty=Tensor[(5, 52), float64] */, meta[relay.Constant][83] /* ty=Tensor[(182), float64] */, meta[relay.Constant][84] /* ty=Tensor[(780), uint8] */)
}

def @func_7173(%var_7161: Tensor[(195), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32]) {
  %865 = cast(%var_7161, dtype="float64") /* ty=Tensor[(195), float64] */;
  %866 = cast(meta[relay.Constant][85] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %867 = reshape(%865, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %868 = reshape(%866, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %869 = @func_5729(%867, %868) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
  %870 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %872 = %869.0;
  %873 = tan(%871) /* ty=Tensor[(11, 8, 12), float32] */;
  (%872, %var_7161, meta[relay.Constant][85] /* ty=Tensor[(1183), float64] */, %873)
}

def @func_10967() -> Tensor[(11, 8, 12), float32] {
  @func_8021() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10932() -> Tensor[(11, 8, 12), float32] {
  @func_8021() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_6651(%var_6636: Tensor[(14, 4, 11), uint32]) -> Tensor[(14, 4, 11), uint32] {
  %874 = cast(meta[relay.Constant][86] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
  %875 = shape_of(%var_6636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_6636, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%876, %877) /* ty=Tensor[(14, 4, 11), uint32] */
}

def @func_12019(%var_11988: Tensor[(405), float32]) -> (Tensor[(780), float64], Tensor[(672), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(1183), float64]) {
  %878 = @func_9667() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %879 = %878.6;
  %880 = cast(%879, dtype="float64") /* ty=Tensor[(780), float64] */;
  %881 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
  %882 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
  %883 = cast(meta[relay.Constant][87] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %884 = cast(meta[relay.Constant][88] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %885 = reshape(%881, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %886 = reshape(%882, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %887 = reshape(%883, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %888 = reshape(%884, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %889 = @func_5526(%885, %886, %887, %888) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %890 = @func_11539() /* ty=Tensor[(11, 8, 12), float32] */;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %892 = cast(meta[relay.Constant][89] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %893 = reshape(%891, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %894 = reshape(%892, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %895 = @func_11920(%893, %894) /* ty=(Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) */;
  %896 = exp(%880) /* ty=Tensor[(780), float64] */;
  %897 = %889.3;
  %898 = %895.1;
  (%896, %897, %var_11988, meta[relay.Constant][87] /* ty=Tensor[(2100), float64] */, meta[relay.Constant][88] /* ty=Tensor[(672), float64] */, %890, %898, meta[relay.Constant][89] /* ty=Tensor[(1183), float64] */)
}

def @func_13759() -> (Tensor[(11, 8, 12), float32],) {
  %899 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  (%899,)
}

def @func_11539() -> Tensor[(11, 8, 12), float32] {
  %900 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %900.0
}

def @func_11610(%var_11591: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) {
  %901 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %902 = cast(%var_11591, dtype="float64") /* ty=Tensor[(896), float64] */;
  %903 = reshape(%902, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %904 = @func_551(%903) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %905 = %901.0;
  %906 = %904.0;
  (%905, %906, %var_11591)
}

def @func_619(%var_610: Tensor[(11, 13, 10), int16], %var_611: Tensor[(11, 13, 10), int16]) -> (Tensor[(11, 13, 10), bool],) {
  %907 = cast(%var_611, dtype="bool") /* ty=Tensor[(11, 13, 10), bool] */;
  %908 = shape_of(%var_610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%var_610, dtype="bool") /* ty=Tensor[(11, 13, 10), bool] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %911 = less(%909, %910) /* ty=Tensor[(11, 13, 10), bool] */;
  (%911,)
}

def @func_11949(%var_11945: Tensor[(182), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8]) {
  %912 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %914 = cast(%var_11945, dtype="float64") /* ty=Tensor[(182), float64] */;
  %915 = cast(meta[relay.Constant][90] /* ty=Tensor[(130, 6), uint8] */, dtype="uint8") /* ty=Tensor[(130, 6), uint8] */;
  %916 = reshape(%914, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %917 = reshape(%915, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %918 = @func_7592(%916, %917) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %919 = sigmoid(%913) /* ty=Tensor[(11, 8, 12), float64] */;
  %920 = %918.3;
  (%919, %920, %var_11945, meta[relay.Constant][90] /* ty=Tensor[(130, 6), uint8] */)
}

def @func_12059() -> (Tensor[(11, 8, 12), float32],) {
  %921 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %922 = %921.0;
  (%922,)
}

def @func_12687() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16) {
  %923 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %924 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %925 = %924.0;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %927 = sqrt(%926) /* ty=Tensor[(11, 8, 12), float64] */;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %929 = cast(meta[relay.Constant][91] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %930 = reshape(%929, newshape=[]) /* ty=int16 */;
  %931 = @func_10502(%930) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) */;
  %932 = %923.6;
  %933 = acos(%928) /* ty=Tensor[(11, 8, 12), float32] */;
  %934 = %931.1;
  (%932, %933, %934, meta[relay.Constant][91] /* ty=int16 */)
}

def @func_11291() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %935 = @func_11067() /* ty=Tensor[(11, 8, 12), float32] */;
  %936 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%935, %936)
}

def @func_6483() -> Tensor[(11, 8, 12), float32] {
  %937 = cast(meta[relay.Constant][92] /* ty=Tensor[(11, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  asin(%937) /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12109() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(2100), float64], Tensor[(1183), float64], uint64) {
  %938 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %939 = @func_10351() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) */;
  %940 = cast(meta[relay.Constant][93] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %941 = cast(meta[relay.Constant][94] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %942 = cast(meta[relay.Constant][95] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %943 = reshape(%940, newshape=[150, 14]) /* ty=Tensor[(150, 14), float64] */;
  %944 = reshape(%941, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %945 = reshape(%942, newshape=[]) /* ty=uint64 */;
  %946 = @func_8503(%943, %944, %945) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) */;
  %947 = %938.0;
  %948 = %939.0;
  %949 = %946.7;
  (%947, %948, %949, meta[relay.Constant][93] /* ty=Tensor[(2100), float64] */, meta[relay.Constant][94] /* ty=Tensor[(1183), float64] */, meta[relay.Constant][95] /* ty=uint64 */)
}

def @func_14057() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(672), float64]) {
  %950 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
  %951 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %952 = %950.1;
  %953 = %951.0;
  %954 = @func_10208() /* ty=Tensor[(672), float64] */;
  (%952, %953, %954)
}

def @func_13843() -> Tensor[(11, 8, 12), float32] {
  %955 = @func_11291() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %955.0
}

def @func_8064(%var_8039: Tensor[(3, 1, 8), float32], %var_8052: Tensor[(150, 14), float64], %var_8053: Tensor[(672), float64]) -> (Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) {
  %956 = cast(%var_8039, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
  %957 = sigmoid(%956) /* ty=Tensor[(3, 1, 8), float32] */;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(3, 1, 8), float64] */;
  %959 = cast(%var_8039, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
  %960 = cast(meta[relay.Constant][96] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %961 = cast(meta[relay.Constant][96] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %962 = cast(%var_8052, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
  %963 = cast(%var_8053, dtype="float64") /* ty=Tensor[(672), float64] */;
  %964 = reshape(%960, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %965 = reshape(%961, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %966 = reshape(%962, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %967 = reshape(%963, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %968 = @func_5526(%964, %965, %966, %967) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %969 = sinh(%958) /* ty=Tensor[(3, 1, 8), float64] */;
  %970 = rsqrt(%959) /* ty=Tensor[(3, 1, 8), float32] */;
  %971 = %968.5;
  (%969, %970, %971, meta[relay.Constant][96] /* ty=Tensor[(405), float32] */, %var_8052, %var_8053)
}

def @func_1092(%var_1081: Tensor[(12, 4, 14), float64]) -> (Tensor[(12, 4, 14), float64],) {
  %972 = cast(%var_1081, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
  %973 = rsqrt(%972) /* ty=Tensor[(12, 4, 14), float64] */;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
  %975 = shape_of(%var_1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_1081, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %978 = power(%976, %977) /* ty=Tensor[(12, 4, 14), float64] */;
  (%978,)
}

def @func_11313(%var_11297: Tensor[(13, 14), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) {
  %979 = @func_11181() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
  %980 = cast(%var_11297, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
  %981 = cast(meta[relay.Constant][97] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %982 = reshape(%980, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %983 = reshape(%981, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %984 = @func_7592(%982, %983) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %985 = cast(meta[relay.Constant][98] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %986 = reshape(%985, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %987 = @func_322(%986) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
  %988 = %979.0;
  %989 = %984.0;
  %990 = @func_10029() /* ty=Tensor[(945), float32] */;
  %991 = %987.1;
  (%988, %989, %var_11297, meta[relay.Constant][97] /* ty=Tensor[(780), uint8] */, %990, %991, meta[relay.Constant][98] /* ty=Tensor[(288), float64] */)
}

def @func_322(%var_303: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) {
  %992 = cast(%var_303, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %993 = cast(meta[relay.Constant][99] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %994 = reshape(%993, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %995 = @func_249(%994) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %996 = %995.0;
  %997 = cast(%996, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
  %998 = cosh(%992) /* ty=Tensor[(4, 8, 9), float64] */;
  %999 = sinh(%997) /* ty=Tensor[(7, 9, 15), float32] */;
  (%998, meta[relay.Constant][99] /* ty=Tensor[(945), float32] */, %999)
}

def @func_12785() -> Tensor[(11, 8, 12), float32] {
  %1000 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %1000.0
}

def @func_13227() -> (Tensor[(11, 8, 12), float64], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %1001 = cast(meta[relay.Constant][100] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %1002 = reshape(%1001, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
  %1003 = @func_1197(%1002) /* ty=(Tensor[(13, 6, 10), uint8],) */;
  %1004 = @func_9176() /* ty=Tensor[(11, 8, 12), float64] */;
  %1005 = %1003.0;
  (%1004, %1005, meta[relay.Constant][100] /* ty=Tensor[(780), uint8] */)
}

def @func_6102(%var_6084: Tensor[(11, 16, 11), float32]) -> (Tensor[(11, 16, 11), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  %1006 = cast(%var_6084, dtype="float32") /* ty=Tensor[(11, 16, 11), float32] */;
  %1007 = cast(meta[relay.Constant][101] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %1008 = reshape(%1007, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %1009 = @func_3548(%1008) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %1010 = cosh(%1006) /* ty=Tensor[(11, 16, 11), float32] */;
  %1011 = %1009.0;
  (%1010, %1011, meta[relay.Constant][101] /* ty=Tensor[(396), uint8] */)
}

def @func_11844() -> (Tensor[(11, 8, 12), float32],) {
  %1012 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1012,)
}

def @func_987(%var_964: Tensor[(10, 2, 13), float64], %var_972: Tensor[(182), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) {
  %1013 = cast(%var_964, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
  %1014 = shape_of(meta[relay.Constant][102] /* ty=Tensor[(10, 2, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(meta[relay.Constant][102] /* ty=Tensor[(10, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1017 = cast(-3.35794f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1018 = cast(%var_972, dtype="float64") /* ty=Tensor[(182), float64] */;
  %1019 = reshape(%1017, newshape=[]) /* ty=float64 */;
  %1020 = reshape(%1018, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %1021 = @func_519(%1019, %1020) /* ty=(Tensor[(1, 13, 14), bool],) */;
  %1022 = floor_mod(%1015, %1016) /* ty=Tensor[(10, 2, 13), float64] */;
  %1023 = %1021.0;
  (%1022, %1023, -3.35794f64 /* ty=float64 */, %var_972)
}

def @func_14164() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), float32]) {
  %1024 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
  %1025 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %1026 = %1024.1;
  %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %1028 = reshape(%1027, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %1029 = @func_6745(%1028) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) */;
  %1030 = %1029.2;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  %1032 = tan(%1031) /* ty=Tensor[(11, 9, 4), float64] */;
  %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %1034 = asinh(%1033) /* ty=Tensor[(11, 9, 4), float32] */;
  %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %1036 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  %1037 = %1025.0;
  %1038 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  %1039 = acos(%1035) /* ty=Tensor[(11, 9, 4), float32] */;
  (%1026, %1036, %1037, %1038, %1039)
}

def @func_4312(%var_4307: int16, %var_4308: Tensor[(15, 2, 8), int16]) -> Tensor[(15, 2, 8), bool] {
  %1040 = cast(%var_4307, dtype="bool") /* ty=bool */;
  %1041 = cast(%var_4308, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  not_equal(%1040, %1041) /* ty=Tensor[(15, 2, 8), bool] */
}

def @func_14547() -> Tensor[(11, 8, 12), float32] {
  @func_12785() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10562(%var_10559: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(945), float32], Tensor[(2100), float64]) {
  %1042 = cast(%var_10559, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %1043 = reshape(%1042, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
  %1044 = @func_2346(%1043) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
  %1045 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  %1046 = %1044.2;
  (%1045, %1046, %var_10559)
}

def @func_14593() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %1047 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %1048 = %1047.0;
  %1049 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1048, %1049)
}

def @func_8082() -> (Tensor[(11, 8, 12), float32],) {
  %1050 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1050,)
}

def @func_13091() -> (Tensor[(5, 11, 15), uint8], Tensor[(11, 8, 12), float32]) {
  %1051 = cast(meta[relay.Constant][104] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 15), uint8] */;
  %1052 = shape_of(meta[relay.Constant][103] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(meta[relay.Constant][103] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 15), uint8] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1055 = multiply(%1053, %1054) /* ty=Tensor[(5, 11, 15), uint8] */;
  %1056 = @func_13067() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1055, %1056)
}

def @func_14210() -> (Tensor[(1430), int32],) {
  %1057 = @func_13445() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) */;
  %1058 = %1057.3;
  (%1058,)
}

def @func_11435() -> Tensor[(100), uint16] {
  %1059 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %1059.10
}

def @func_7778() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7010() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_1428(%var_1418: Tensor[(13, 7, 13), float64]) -> Tensor[(13, 7, 13), float64] {
  %1060 = cast(3.35505f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1061 = cast(%var_1418, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
  subtract(%1060, %1061) /* ty=Tensor[(13, 7, 13), float64] */
}

def @func_11181() -> (Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %1062 = cast(meta[relay.Constant][105] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1063 = reshape(%1062, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1064 = @func_7950(%1063) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %1065 = @func_9176() /* ty=Tensor[(11, 8, 12), float64] */;
  %1066 = %1064.1;
  (%1065, %1066, meta[relay.Constant][105] /* ty=Tensor[(672), float64] */)
}

def @func_8583() -> Tensor[(11, 8, 12), float32] {
  %1067 = @func_8082() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %1067.0
}

def @func_14493() -> (Tensor[(11, 8, 12), float32],) {
  %1068 = @func_13514() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1068,)
}

def @func_13205() -> (Tensor[(11, 8, 12), float32],) {
  %1069 = @func_13144() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) */;
  %1070 = %1069.0;
  (%1070,)
}

def @func_6575() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2349(%var_2347: Tensor[(14, 15, 10), float64]) -> (Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) {
  @func_2346(%var_2347) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */
}

def @func_9791() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) {
  @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */
}

def @func_10906(%var_10895: Tensor[(2100), float64], %var_10901: Tensor[(405), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1 = cast(%var_10895, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %3 = reshape(%0, newshape=[3, 1, 8]) /* ty=Tensor[(3, 1, 8), float32] */;
  %4 = reshape(%1, newshape=[150, 14]) /* ty=Tensor[(150, 14), float64] */;
  %5 = reshape(%2, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %6 = @func_8064(%3, %4, %5) /* ty=(Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) */;
  %7 = %6.3;
  %8 = cast(%var_10901, dtype="bool") /* ty=Tensor[(405), bool] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(1), int32] */;
  %10 = cast(%7, dtype="bool") /* ty=Tensor[(405), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?), bool] */;
  %12 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  %13 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %14 = greater(%10, %11) /* ty=Tensor[(405), bool] */;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(24), float32] */, %var_10895, meta[relay.Constant][1] /* ty=Tensor[(672), float64] */, %14)
}

def @func_11355() -> Tensor[(11, 8, 12), float32] {
  %15 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_9879() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %15() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14547() -> Tensor[(11, 8, 12), float32] {
  @func_12785() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14475() -> (Tensor[(11, 8, 12), float32], Tensor[(182), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %24 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(182), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
    %16 = @func_13445() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) */;
    %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %18 = cast(meta[relay.Constant][3] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %19 = reshape(%17, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %20 = reshape(%18, newshape=[780]) /* ty=Tensor[(780), uint8] */;
    %21 = @func_7592(%19, %20) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
    %22 = %16.0;
    %23 = %21.4;
    (%22, %23, meta[relay.Constant][2] /* ty=Tensor[(182), float64] */, meta[relay.Constant][3] /* ty=Tensor[(780), uint8] */)
  };
  %24() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(182), float64], Tensor[(182), float64], Tensor[(780), uint8]) */
}

def @func_14420() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(11, 8, 12), float32]) {
  %31 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(11, 8, 12), float32]) {
    %25 = @func_13495() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %26 = @func_9969() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) */;
    %27 = @func_12059() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %28 = %25.1;
    %29 = %26.1;
    %30 = %27.0;
    (%28, %29, %30)
  };
  %31() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(11, 8, 12), float32]) */
}

def @func_10565(%var_10563: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(945), float32], Tensor[(2100), float64]) {
  @func_10562(%var_10563) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(945), float32], Tensor[(2100), float64]) */
}

def @func_12167(%var_12162: Tensor[(224, 4), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) {
  %32 = cast(%var_12162, dtype="float64") /* ty=Tensor[(224, 4), float64] */;
  %33 = reshape(%32, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %34 = @func_11610(%33) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) */;
  %35 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  %36 = %34.1;
  (%35, %36, %var_12162)
}

def @func_551(%var_548: Tensor[(4, 14, 16), float64]) -> (Tensor[(4, 14, 16), float64],) {
  %37 = cast(%var_548, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
  %38 = tan(%37) /* ty=Tensor[(4, 14, 16), float64] */;
  (%38,)
}

def @func_4316(%var_4314: int16, %var_4315: Tensor[(15, 2, 8), int16]) -> Tensor[(15, 2, 8), bool] {
  @func_4312(%var_4314, %var_4315) /* ty=Tensor[(15, 2, 8), bool] */
}

def @func_7011() -> Tensor[(11, 8, 12), float32] {
  %39 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %39() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_8064(%var_8039: Tensor[(3, 1, 8), float32], %var_8052: Tensor[(150, 14), float64], %var_8053: Tensor[(672), float64]) -> (Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) {
  %40 = cast(%var_8039, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
  %41 = sigmoid(%40) /* ty=Tensor[(3, 1, 8), float32] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(3, 1, 8), float64] */;
  %43 = cast(%var_8039, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %46 = cast(%var_8052, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
  %47 = cast(%var_8053, dtype="float64") /* ty=Tensor[(672), float64] */;
  %48 = reshape(%44, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %49 = reshape(%45, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %50 = reshape(%46, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %51 = reshape(%47, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %52 = @func_5526(%48, %49, %50, %51) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %53 = sinh(%42) /* ty=Tensor[(3, 1, 8), float64] */;
  %54 = rsqrt(%43) /* ty=Tensor[(3, 1, 8), float32] */;
  %55 = %52.5;
  (%53, %54, %55, meta[relay.Constant][4] /* ty=Tensor[(405), float32] */, %var_8052, %var_8053)
}

def @func_7421(%var_7419: float64, %var_7420: Tensor[(12, 1, 1), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) {
  %62 = fn (%var_7401: float64, %var_7402: Tensor[(12, 1, 1), float64]) -> (Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) {
    %56 = cast(%var_7401, dtype="float64") /* ty=float64 */;
    %57 = cast(%var_7402, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
    %58 = cast(%var_7402, dtype="uint8") /* ty=Tensor[(12, 1, 1), uint8] */;
    %59 = cast(%var_7401, dtype="uint8") /* ty=uint8 */;
    %60 = floor_divide(%56, %57) /* ty=Tensor[(12, 1, 1), float64] */;
    %61 = add(%58, %59) /* ty=Tensor[(12, 1, 1), uint8] */;
    (%60, %61)
  };
  %62(%var_7419, %var_7420) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) */
}

def @func_6180(%var_6179: Tensor[(7, 6, 8), float32]) -> (Tensor[(7, 6, 8), float32],) {
  %65 = fn (%var_6174: Tensor[(7, 6, 8), float32]) -> (Tensor[(7, 6, 8), float32],) {
    %63 = cast(%var_6174, dtype="float32") /* ty=Tensor[(7, 6, 8), float32] */;
    %64 = cosh(%63) /* ty=Tensor[(7, 6, 8), float32] */;
    (%64,)
  };
  %65(%var_6179) /* ty=(Tensor[(7, 6, 8), float32],) */
}

def @func_8083() -> (Tensor[(11, 8, 12), float32],) {
  %67 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %66 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
    (%66,)
  };
  %67() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_6566() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14164() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), float32]) {
  %68 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
  %69 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %70 = %68.1;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %72 = reshape(%71, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %73 = @func_6745(%72) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) */;
  %74 = %73.2;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  %76 = tan(%75) /* ty=Tensor[(11, 9, 4), float64] */;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %78 = asinh(%77) /* ty=Tensor[(11, 9, 4), float32] */;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(11, 9, 4), float32] */;
  %80 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  %81 = %69.0;
  %82 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  %83 = acos(%79) /* ty=Tensor[(11, 9, 4), float32] */;
  (%70, %80, %81, %82, %83)
}

def @func_10910(%var_10908: Tensor[(2100), float64], %var_10909: Tensor[(405), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) {
  @func_10906(%var_10908, %var_10909) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) */
}

def @func_7687(%var_7685: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), uint16],) {
  @func_7684(%var_7685) /* ty=(Tensor[(11, 8, 12), uint16],) */
}

def @func_11134() -> Tensor[(11, 8, 12), float32] {
  @func_11132() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12109() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(2100), float64], Tensor[(1183), float64], uint64) {
  %84 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %85 = @func_10351() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) */;
  %86 = cast(meta[relay.Constant][5] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %88 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %89 = reshape(%86, newshape=[150, 14]) /* ty=Tensor[(150, 14), float64] */;
  %90 = reshape(%87, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %91 = reshape(%88, newshape=[]) /* ty=uint64 */;
  %92 = @func_8503(%89, %90, %91) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) */;
  %93 = %84.0;
  %94 = %85.0;
  %95 = %92.7;
  (%93, %94, %95, meta[relay.Constant][5] /* ty=Tensor[(2100), float64] */, meta[relay.Constant][6] /* ty=Tensor[(1183), float64] */, meta[relay.Constant][7] /* ty=uint64 */)
}

def @func_12019(%var_11988: Tensor[(405), float32]) -> (Tensor[(780), float64], Tensor[(672), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(1183), float64]) {
  %96 = @func_9667() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
  %97 = %96.6;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(780), float64] */;
  %99 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
  %100 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
  %101 = cast(meta[relay.Constant][8] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %102 = cast(meta[relay.Constant][9] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %103 = reshape(%99, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %104 = reshape(%100, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %105 = reshape(%101, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
  %106 = reshape(%102, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %107 = @func_5526(%103, %104, %105, %106) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
  %108 = @func_11539() /* ty=Tensor[(11, 8, 12), float32] */;
  %109 = cast(%108, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %110 = cast(meta[relay.Constant][10] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %111 = reshape(%109, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %112 = reshape(%110, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %113 = @func_11920(%111, %112) /* ty=(Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) */;
  %114 = exp(%98) /* ty=Tensor[(780), float64] */;
  %115 = %107.3;
  %116 = %113.1;
  (%114, %115, %var_11988, meta[relay.Constant][8] /* ty=Tensor[(2100), float64] */, meta[relay.Constant][9] /* ty=Tensor[(672), float64] */, %108, %116, meta[relay.Constant][10] /* ty=Tensor[(1183), float64] */)
}

def @func_12369() -> Tensor[(11, 8, 12), float64] {
  @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_12517() -> (Tensor[(11, 8, 12), float32],) {
  %117 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  (%117,)
}

def @func_11923(%var_11921: Tensor[(11, 8, 12), float32], %var_11922: Tensor[(1183), float64]) -> (Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) {
  %138 = fn (%var_11877: Tensor[(11, 8, 12), float32], %var_11910: Tensor[(1183), float64]) -> (Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) {
    %118 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %119 = %118.1;
    %120 = cast(%var_11877, dtype="uint8") /* ty=Tensor[(11, 8, 12), uint8] */;
    %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %122 = cast(%119, dtype="uint8") /* ty=Tensor[(11, 8, 12), uint8] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %124 = cast(meta[relay.Constant][11] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
    %125 = reshape(%124, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
    %126 = @func_551(%125) /* ty=(Tensor[(4, 14, 16), float64],) */;
    %127 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %128 = reshape(%127, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
    %129 = @func_2228(%128) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
    %130 = cast(%var_11910, dtype="uint32") /* ty=Tensor[(1183), uint32] */;
    %131 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %132 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183), float64] */, dtype="uint32") /* ty=Tensor[(1183), uint32] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %134 = subtract(%122, %123) /* ty=Tensor[(11, 8, 12), uint8] */;
    %135 = %126.0;
    %136 = %129.1;
    %137 = logical_xor(%132, %133) /* ty=Tensor[(1183), uint32] */;
    (%134, %135, meta[relay.Constant][11] /* ty=Tensor[(896), float64] */, %136, %137)
  };
  %138(%var_11921, %var_11922) /* ty=(Tensor[(11, 8, 12), uint8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(13, 7, 13), float64], Tensor[(1183), uint32]) */
}

def @func_12846() -> Tensor[(11, 8, 12), float32] {
  @func_11354() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14082() -> (Tensor[(12, 4, 14), float64],) {
  @func_14080() /* ty=(Tensor[(12, 4, 14), float64],) */
}

def @func_11132() -> Tensor[(11, 8, 12), float32] {
  %139 = @func_10070() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %139.2
}

def @func_12022(%var_12020: Tensor[(405), float32]) -> (Tensor[(780), float64], Tensor[(672), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(1183), float64]) {
  @func_12019(%var_12020) /* ty=(Tensor[(780), float64], Tensor[(672), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(1183), float64]) */
}

def @func_6653(%var_6652: Tensor[(14, 4, 11), uint32]) -> Tensor[(14, 4, 11), uint32] {
  %144 = fn (%var_6636: Tensor[(14, 4, 11), uint32]) -> Tensor[(14, 4, 11), uint32] {
    %140 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
    %141 = shape_of(%var_6636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %142 = cast(%var_6636, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%142, %143) /* ty=Tensor[(14, 4, 11), uint32] */
  };
  %144(%var_6652) /* ty=Tensor[(14, 4, 11), uint32] */
}

def @func_7826(%var_7821: uint16, %var_7822: Tensor[(2, 10, 5), uint16]) -> (Tensor[(2, 10, 5), bool],) {
  %145 = cast(%var_7821, dtype="bool") /* ty=bool */;
  %146 = cast(%var_7822, dtype="bool") /* ty=Tensor[(2, 10, 5), bool] */;
  %147 = greater_equal(%145, %146) /* ty=Tensor[(2, 10, 5), bool] */;
  (%147,)
}

def @func_7830(%var_7828: uint16, %var_7829: Tensor[(2, 10, 5), uint16]) -> (Tensor[(2, 10, 5), bool],) {
  @func_7826(%var_7828, %var_7829) /* ty=(Tensor[(2, 10, 5), bool],) */
}

def @func_11952(%var_11950: Tensor[(182), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8]) {
  @func_11949(%var_11950) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8]) */
}

def @func_623(%var_621: Tensor[(11, 13, 10), int16], %var_622: Tensor[(11, 13, 10), int16]) -> (Tensor[(11, 13, 10), bool],) {
  @func_619(%var_621, %var_622) /* ty=(Tensor[(11, 13, 10), bool],) */
}

def @func_13446() -> (Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) {
  %164 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) {
    %148 = @func_11844() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %149 = cast(meta[relay.Constant][14] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %150 = reshape(%149, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
    %151 = @func_2228(%150) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
    %152 = %151.2;
    %153 = cast(%152, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
    %154 = log10(%153) /* ty=Tensor[(1183, 1), float64] */;
    %155 = cast(%154, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
    %156 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 27), uint8] */, dtype="uint8") /* ty=Tensor[(3, 27), uint8] */;
    %157 = cast(meta[relay.Constant][16] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %158 = reshape(%156, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
    %159 = reshape(%157, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
    %160 = @func_5231(%158, %159) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
    %161 = %148.0;
    %162 = exp(%155) /* ty=Tensor[(1183, 1), float64] */;
    %163 = %160.1;
    (%161, meta[relay.Constant][14] /* ty=Tensor[(1183), float64] */, %162, %163, meta[relay.Constant][15] /* ty=Tensor[(3, 27), uint8] */, meta[relay.Constant][16] /* ty=Tensor[(1430), int16] */)
  };
  %164() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) */
}

def @func_12288(%var_12287: Tensor[(5, 156), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32], Tensor[(5, 156), uint8], Tensor[(1, 1183), float64], Tensor[(2100), float64], Tensor[(11, 8, 12), float32]) {
  %182 = fn (%var_12260: Tensor[(5, 156), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32], Tensor[(5, 156), uint8], Tensor[(1, 1183), float64], Tensor[(2100), float64], Tensor[(11, 8, 12), float32]) {
    %165 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %166 = cast(meta[relay.Constant][18] /* ty=Tensor[(100), uint16] */, dtype="uint16") /* ty=Tensor[(100), uint16] */;
    %167 = reshape(%165, newshape=[]) /* ty=uint16 */;
    %168 = reshape(%166, newshape=[2, 10, 5]) /* ty=Tensor[(2, 10, 5), uint16] */;
    %169 = @func_7826(%167, %168) /* ty=(Tensor[(2, 10, 5), bool],) */;
    %170 = cast(%var_12260, dtype="uint8") /* ty=Tensor[(5, 156), uint8] */;
    %171 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1183), float64] */, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
    %172 = cast(meta[relay.Constant][20] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %173 = reshape(%170, newshape=[5, 156]) /* ty=Tensor[(5, 156), uint8] */;
    %174 = reshape(%171, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
    %175 = reshape(%172, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
    %176 = @func_8308(%173, %174, %175) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) */;
    %177 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %178 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
    %179 = %169.0;
    %180 = %176.6;
    %181 = %177.0;
    (%178, %179, meta[relay.Constant][17] /* ty=uint16 */, meta[relay.Constant][18] /* ty=Tensor[(100), uint16] */, %180, %var_12260, meta[relay.Constant][19] /* ty=Tensor[(1, 1183), float64] */, meta[relay.Constant][20] /* ty=Tensor[(2100), float64] */, %181)
  };
  %182(%var_12287) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32], Tensor[(5, 156), uint8], Tensor[(1, 1183), float64], Tensor[(2100), float64], Tensor[(11, 8, 12), float32]) */
}

def @func_991(%var_989: Tensor[(10, 2, 13), float64], %var_990: Tensor[(182), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) {
  @func_987(%var_989, %var_990) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */
}

def @func_8157(%var_8156: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(182), float64], Tensor[(780), uint8], Tensor[(11, 13, 10), bool], Tensor[(1430), int16]) {
  %196 = fn (%var_8142: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(182), float64], Tensor[(780), uint8], Tensor[(11, 13, 10), bool], Tensor[(1430), int16]) {
    %183 = cast(meta[relay.Constant][21] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %184 = cast(%var_8142, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %185 = reshape(%183, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %186 = reshape(%184, newshape=[780]) /* ty=Tensor[(780), uint8] */;
    %187 = @func_7592(%185, %186) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
    %188 = cast(meta[relay.Constant][22] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %189 = cast(meta[relay.Constant][22] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %190 = reshape(%188, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
    %191 = reshape(%189, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
    %192 = @func_619(%190, %191) /* ty=(Tensor[(11, 13, 10), bool],) */;
    %193 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %194 = %187.1;
    %195 = %192.0;
    (%193, %194, meta[relay.Constant][21] /* ty=Tensor[(182), float64] */, %var_8142, %195, meta[relay.Constant][22] /* ty=Tensor[(1430), int16] */)
  };
  %196(%var_8156) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(182), float64], Tensor[(780), uint8], Tensor[(11, 13, 10), bool], Tensor[(1430), int16]) */
}

def @func_10502(%var_10484: int16) -> (Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) {
  %197 = @func_9031() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %198 = cast(%var_10484, dtype="int16") /* ty=int16 */;
  %199 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %200 = reshape(%198, newshape=[]) /* ty=int16 */;
  %201 = reshape(%199, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), int16] */;
  %202 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %203 = %197.0;
  %204 = @func_4312(%200, %201) /* ty=Tensor[(15, 2, 8), bool] */;
  %205 = %202.0;
  (%203, %204, %var_10484, meta[relay.Constant][23] /* ty=Tensor[(240), int16] */, %205)
}

def @func_11500() -> Tensor[(12, 4, 14), float64] {
  %207 = fn () -> Tensor[(12, 4, 14), float64] {
    %206 = @func_10701() /* ty=(Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) */;
    %206.2
  };
  %207() /* ty=Tensor[(12, 4, 14), float64] */
}

def @func_9031() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %208 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %209 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%208, %209)
}

def @func_9813() -> Tensor[(11, 8, 12), float32] {
  @func_9811() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12332() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), float32]) {
  @func_12330() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), float32]) */
}

def @func_13495() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %210 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %211 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%210, %211)
}

def @func_1428(%var_1418: Tensor[(13, 7, 13), float64]) -> Tensor[(13, 7, 13), float64] {
  %212 = cast(3.35505f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %213 = cast(%var_1418, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
  subtract(%212, %213) /* ty=Tensor[(13, 7, 13), float64] */
}

def @func_4859(%var_4855: Tensor[(13, 13, 11), uint64], %var_4856: Tensor[(13, 13, 11), uint64], %var_4857: Tensor[(1, 240), int16], %var_4858: Tensor[(288), float64]) -> (Tensor[(13, 13, 11), bool], Tensor[(15, 2, 8), bool], int16, Tensor[(1, 240), int16], Tensor[(945), float32], Tensor[(288), float64], Tensor[(1, 13, 14), bool], Tensor[(182), float64]) {
  %234 = fn (%var_4827: Tensor[(13, 13, 11), uint64], %var_4828: Tensor[(13, 13, 11), uint64], %var_4834: Tensor[(1, 240), int16], %var_4843: Tensor[(288), float64]) -> (Tensor[(13, 13, 11), bool], Tensor[(15, 2, 8), bool], int16, Tensor[(1, 240), int16], Tensor[(945), float32], Tensor[(288), float64], Tensor[(1, 13, 14), bool], Tensor[(182), float64]) {
    %214 = cast(%var_4828, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %215 = shape_of(%var_4827, dtype="int32") /* ty=Tensor[(3), int32] */;
    %216 = cast(%var_4827, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %218 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %219 = cast(%var_4834, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
    %220 = reshape(%218, newshape=[]) /* ty=int16 */;
    %221 = reshape(%219, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), int16] */;
    %222 = cast(%var_4843, dtype="float64") /* ty=Tensor[(288), float64] */;
    %223 = reshape(%222, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
    %224 = @func_322(%223) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
    %225 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="float64") /* ty=float64 */;
    %226 = cast(meta[relay.Constant][25] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %227 = reshape(%225, newshape=[]) /* ty=float64 */;
    %228 = reshape(%226, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
    %229 = @func_519(%227, %228) /* ty=(Tensor[(1, 13, 14), bool],) */;
    %230 = greater_equal(%216, %217) /* ty=Tensor[(13, 13, 11), bool] */;
    %231 = @func_4312(%220, %221) /* ty=Tensor[(15, 2, 8), bool] */;
    %232 = %224.1;
    %233 = %229.0;
    (%230, %231, meta[relay.Constant][24] /* ty=int16 */, %var_4834, %232, %var_4843, %233, meta[relay.Constant][25] /* ty=Tensor[(182), float64] */)
  };
  %234(%var_4855, %var_4856, %var_4857, %var_4858) /* ty=(Tensor[(13, 13, 11), bool], Tensor[(15, 2, 8), bool], int16, Tensor[(1, 240), int16], Tensor[(945), float32], Tensor[(288), float64], Tensor[(1, 13, 14), bool], Tensor[(182), float64]) */
}

def @func_9970() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) {
  %249 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) {
    %235 = @func_8082() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %236 = cast(meta[relay.Constant][26] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
    %237 = reshape(%236, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
    %238 = @func_3548(%237) /* ty=(Tensor[(11, 9, 4), uint8],) */;
    %239 = cast(meta[relay.Constant][27] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %240 = reshape(%239, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int64] */;
    %241 = @func_5477(%240) /* ty=Tensor[(5, 12, 14), uint32] */;
    %242 = cast(meta[relay.Constant][27] /* ty=Tensor[(840), int64] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%241, dtype="float32") /* ty=Tensor[(5, 12, 14), float32] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %246 = %235.0;
    %247 = %238.0;
    %248 = mod(%244, %245) /* ty=Tensor[(5, 12, 14), float32] */;
    (%246, %247, meta[relay.Constant][26] /* ty=Tensor[(396), uint8] */, %248)
  };
  %249() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) */
}

def @func_13177() -> Tensor[(11, 8, 12), float32] {
  @func_13175() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7306(%var_7302: Tensor[(396), uint8], %var_7303: Tensor[(156), int8], %var_7304: Tensor[(896), float64], %var_7305: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) {
  @func_7300(%var_7302, %var_7303, %var_7304, %var_7305) /* ty=(Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) */
}

def @func_14057() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(672), float64]) {
  %250 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
  %251 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %252 = %250.1;
  %253 = %251.0;
  %254 = @func_10208() /* ty=Tensor[(672), float64] */;
  (%252, %253, %254)
}

def @func_13069() -> Tensor[(11, 8, 12), float32] {
  @func_13067() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10932() -> Tensor[(11, 8, 12), float32] {
  @func_8021() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_11222() -> Tensor[(11, 8, 12), float64] {
  @func_11220() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_1431(%var_1429: Tensor[(13, 7, 13), float64]) -> Tensor[(13, 7, 13), float64] {
  @func_1428(%var_1429) /* ty=Tensor[(13, 7, 13), float64] */
}

def @func_7142() -> Tensor[(11, 8, 12), float32] {
  @func_7140() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_5732(%var_5730: Tensor[(15, 1, 13), float64], %var_5731: Tensor[(1183), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) {
  %265 = fn (%var_5693: Tensor[(15, 1, 13), float64], %var_5697: Tensor[(1183), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) {
    %255 = cast(%var_5697, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %256 = reshape(%255, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
    %257 = cast(%var_5693, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
    %258 = exp(%257) /* ty=Tensor[(15, 1, 13), float64] */;
    %259 = cast(%var_5693, dtype="uint16") /* ty=Tensor[(15, 1, 13), uint16] */;
    %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%258, dtype="uint16") /* ty=Tensor[(15, 1, 13), uint16] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %263 = @func_1428(%256) /* ty=Tensor[(13, 7, 13), float64] */;
    %264 = bitwise_or(%261, %262) /* ty=Tensor[(15, ?, 13), uint16] */;
    (%263, %var_5697, %264)
  };
  %265(%var_5730, %var_5731) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */
}

def @func_10628() -> Tensor[(11, 8, 12), float32] {
  %266 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_7151() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %266() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13514() -> Tensor[(11, 8, 12), float32] {
  @func_9811() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7950(%var_7897: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %267 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %268 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %272 = cast(%var_7897, dtype="float64") /* ty=Tensor[(672), float64] */;
  %273 = reshape(%272, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %274 = @func_1092(%273) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %275 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %276 = less_equal(%270, %271) /* ty=Tensor[(11, 8, 12), bool] */;
  %277 = %274.0;
  %278 = %275.0;
  %279 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%276, %277, %var_7897, %278, %279)
}

def @func_2195(%var_2193: Tensor[(1, 12, 13), int8]) -> (Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) {
  @func_2192(%var_2193) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */
}

def @func_13516() -> Tensor[(11, 8, 12), float32] {
  @func_13514() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10138(%var_10137: Tensor[(10, 10, 7), float32]) -> (Tensor[(10, 10, 7), float32],) {
  %282 = fn (%var_10127: Tensor[(10, 10, 7), float32]) -> (Tensor[(10, 10, 7), float32],) {
    %280 = cast(%var_10127, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
    %281 = sqrt(%280) /* ty=Tensor[(10, 10, 7), float32] */;
    (%281,)
  };
  %282(%var_10137) /* ty=(Tensor[(10, 10, 7), float32],) */
}

def @func_10769() -> (Tensor[(11, 8, 12), float32],) {
  @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_7153() -> Tensor[(11, 8, 12), float32] {
  @func_7151() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13844() -> Tensor[(11, 8, 12), float32] {
  %284 = fn () -> Tensor[(11, 8, 12), float32] {
    %283 = @func_11291() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %283.0
  };
  %284() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14059() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(672), float64]) {
  @func_14057() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(672), float64]) */
}

def @func_11015() -> Tensor[(11, 8, 12), float32] {
  %285 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %285.0
}

def @func_8021() -> Tensor[(11, 8, 12), float32] {
  %286 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  atan(%287) /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14331(%var_14330: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(224, 4), float64], Tensor[(896), float64], Tensor[(11, 8, 12), float32], Tensor[(182), float64]) {
  %298 = fn (%var_14305: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(224, 4), float64], Tensor[(896), float64], Tensor[(11, 8, 12), float32], Tensor[(182), float64]) {
    %288 = @func_13364() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %289 = cast(%var_14305, dtype="float64") /* ty=Tensor[(896), float64] */;
    %290 = reshape(%289, newshape=[224, 4]) /* ty=Tensor[(224, 4), float64] */;
    %291 = @func_12167(%290) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) */;
    %292 = cast(meta[relay.Constant][29] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %293 = reshape(%292, newshape=[13, 14]) /* ty=Tensor[(13, 14), float64] */;
    %294 = @func_11313(%293) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) */;
    %295 = %288.0;
    %296 = %291.2;
    %297 = %294.1;
    (%295, %296, %var_14305, %297, meta[relay.Constant][29] /* ty=Tensor[(182), float64] */)
  };
  %298(%var_14330) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(224, 4), float64], Tensor[(896), float64], Tensor[(11, 8, 12), float32], Tensor[(182), float64]) */
}

def @func_11293() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  @func_11291() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_2636(%var_2635: Tensor[(14, 1, 10), float32]) -> Tensor[(14, 1, 10), float32] {
  %300 = fn (%var_2626: Tensor[(14, 1, 10), float32]) -> Tensor[(14, 1, 10), float32] {
    %299 = cast(%var_2626, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
    cos(%299) /* ty=Tensor[(14, 1, 10), float32] */
  };
  %300(%var_2635) /* ty=Tensor[(14, 1, 10), float32] */
}

def @func_14556() -> Tensor[(11, 8, 12), float64] {
  %301 = fn () -> Tensor[(11, 8, 12), float64] {
    @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
  };
  %301() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_13497() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  @func_13495() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_10209() -> Tensor[(672), float64] {
  %303 = fn () -> Tensor[(672), float64] {
    %302 = @func_9667() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
    %302.2
  };
  %303() /* ty=Tensor[(672), float64] */
}

def @func_14594() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %307 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
    %304 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %305 = %304.0;
    %306 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
    (%305, %306)
  };
  %307() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_325(%var_323: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) {
  @func_322(%var_323) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */
}

def @func_11680() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) {
  @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_8069(%var_8066: Tensor[(3, 1, 8), float32], %var_8067: Tensor[(150, 14), float64], %var_8068: Tensor[(672), float64]) -> (Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) {
  @func_8064(%var_8066, %var_8067, %var_8068) /* ty=(Tensor[(3, 1, 8), float64], Tensor[(3, 1, 8), float32], Tensor[(1, 13, 14), bool], Tensor[(405), float32], Tensor[(150, 14), float64], Tensor[(672), float64]) */
}

def @func_6575() -> Tensor[(11, 8, 12), float32] {
  @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13770(%var_13762: int32) -> Tensor[(6, 9, 10), int32] {
  %308 = cast(%var_13762, dtype="int32") /* ty=int32 */;
  %309 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(6, 9, 10), int32] */;
  bitwise_or(%308, %309) /* ty=Tensor[(6, 9, 10), int32] */
}

def @func_7953(%var_7951: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  @func_7950(%var_7951) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_3551(%var_3549: Tensor[(11, 9, 4), uint8]) -> (Tensor[(11, 9, 4), uint8],) {
  @func_3548(%var_3549) /* ty=(Tensor[(11, 9, 4), uint8],) */
}

def @func_9243(%var_9195: Tensor[(11, 8, 12), float32], %var_9230: Tensor[(396), uint8], %var_9241: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %310 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
  %311 = cast(%var_9195, dtype="int64") /* ty=Tensor[(11, 8, 12), int64] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="int64") /* ty=Tensor[(11, 8, 12), int64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %315 = cast(%var_9230, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %316 = reshape(%315, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %317 = @func_3548(%316) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %318 = bitwise_xor(%313, %314) /* ty=Tensor[(11, 8, 12), int64] */;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %320 = reshape(%319, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %321 = @func_7684(%320) /* ty=(Tensor[(11, 8, 12), uint16],) */;
  %322 = cast(%var_9241, dtype="float64") /* ty=Tensor[(672), float64] */;
  %323 = reshape(%322, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
  %324 = @func_1092(%323) /* ty=(Tensor[(12, 4, 14), float64],) */;
  %325 = %317.0;
  %326 = %321.0;
  %327 = %324.0;
  (%318, %325, %var_9230, %326, %327, %var_9241)
}

def @func_12519() -> (Tensor[(11, 8, 12), float32],) {
  @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_7173(%var_7161: Tensor[(195), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32]) {
  %328 = cast(%var_7161, dtype="float64") /* ty=Tensor[(195), float64] */;
  %329 = cast(meta[relay.Constant][31] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %330 = reshape(%328, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %331 = reshape(%329, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %332 = @func_5729(%330, %331) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
  %333 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %335 = %332.0;
  %336 = tan(%334) /* ty=Tensor[(11, 8, 12), float32] */;
  (%335, %var_7161, meta[relay.Constant][31] /* ty=Tensor[(1183), float64] */, %336)
}

def @func_10967() -> Tensor[(11, 8, 12), float32] {
  @func_8021() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_11539() -> Tensor[(11, 8, 12), float32] {
  %337 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %337.0
}

def @func_14166() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), float32]) {
  @func_14164() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), float32]) */
}

def @func_6748(%var_6746: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  @func_6745(%var_6746) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) */
}

def @func_10738() -> (Tensor[(11, 8, 12), float32],) {
  @func_10736() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_4312(%var_4307: int16, %var_4308: Tensor[(15, 2, 8), int16]) -> Tensor[(15, 2, 8), bool] {
  %338 = cast(%var_4307, dtype="bool") /* ty=bool */;
  %339 = cast(%var_4308, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  not_equal(%338, %339) /* ty=Tensor[(15, 2, 8), bool] */
}

def @func_12886(%var_12884: Tensor[(13, 4, 8), float32], %var_12885: Tensor[(156), int8]) -> (Tensor[(13, 4, 8), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(156), int8], Tensor[(945), float32]) {
  %352 = fn (%var_12857: Tensor[(13, 4, 8), float32], %var_12864: Tensor[(156), int8]) -> (Tensor[(13, 4, 8), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(156), int8], Tensor[(945), float32]) {
    %340 = cast(%var_12857, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
    %341 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(13, 4, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %342 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
    %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %344 = @func_12625() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %345 = cast(%var_12864, dtype="int8") /* ty=Tensor[(156), int8] */;
    %346 = reshape(%345, newshape=[156]) /* ty=Tensor[(156), int8] */;
    %347 = @func_8633(%346) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) */;
    %348 = floor_mod(%342, %343) /* ty=Tensor[(13, 4, 8), float32] */;
    %349 = %344.0;
    %350 = %347.0;
    %351 = @func_10029() /* ty=Tensor[(945), float32] */;
    (%348, %349, %350, %var_12864, %351)
  };
  %352(%var_12884, %var_12885) /* ty=(Tensor[(13, 4, 8), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(156), int8], Tensor[(945), float32]) */
}

def @func_10648() -> (Tensor[(11, 8, 12), float32],) {
  %353 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %354 = %353.0;
  (%354,)
}

def @func_8335() -> (Tensor[(11, 8, 12), float32],) {
  %356 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %355 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
    (%355,)
  };
  %356() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_6484() -> Tensor[(11, 8, 12), float32] {
  %358 = fn () -> Tensor[(11, 8, 12), float32] {
    %357 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
    asin(%357) /* ty=Tensor[(11, 8, 12), float32] */
  };
  %358() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_9177() -> Tensor[(11, 8, 12), float64] {
  %361 = fn () -> Tensor[(11, 8, 12), float64] {
    %359 = @func_7151() /* ty=Tensor[(11, 8, 12), float32] */;
    %360 = cast(%359, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
    cos(%360) /* ty=Tensor[(11, 8, 12), float64] */
  };
  %361() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_8507(%var_8504: Tensor[(150, 14), float64], %var_8505: Tensor[(1183, 1), float64], %var_8506: uint64) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) {
  %400 = fn (%var_8430: Tensor[(150, 14), float64], %var_8480: Tensor[(1183, 1), float64], %var_8481: uint64) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) {
    %362 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %363 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %364 = %363.0;
    %365 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %366 = cast(%365, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %367 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %368 = cast(%364, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %370 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
    %371 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
    %372 = cast(%var_8430, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
    %373 = cast(meta[relay.Constant][35] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %374 = reshape(%370, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %375 = reshape(%371, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %376 = reshape(%372, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
    %377 = reshape(%373, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %378 = @func_5526(%374, %375, %376, %377) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
    %379 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %380 = reshape(%379, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
    %381 = cast(meta[relay.Constant][35] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %382 = reshape(%381, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %383 = @func_7950(%382) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %384 = cast(%var_8480, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
    %385 = cast(%var_8481, dtype="uint64") /* ty=uint64 */;
    %386 = cast(meta[relay.Constant][37] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %387 = @func_5603(%380) /* ty=Tensor[(12, 15, 3), uint8] */;
    %388 = cast(%387, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
    %389 = reshape(%384, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
    %390 = reshape(%385, newshape=[]) /* ty=uint64 */;
    %391 = reshape(%386, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
    %392 = reshape(%388, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %393 = @func_7241(%389, %390, %391, %392) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) */;
    %394 = %362.0;
    %395 = not_equal(%368, %369) /* ty=Tensor[(11, 8, 12), bool] */;
    %396 = %378.1;
    %397 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
    %398 = %383.3;
    %399 = %393.10;
    (%394, %395, %396, meta[relay.Constant][34] /* ty=Tensor[(9, 45), float32] */, %var_8430, meta[relay.Constant][35] /* ty=Tensor[(672), float64] */, %397, %387, meta[relay.Constant][36] /* ty=Tensor[(540), uint8] */, %398, %399, %var_8480, %var_8481, meta[relay.Constant][37] /* ty=Tensor[(72), uint64] */)
  };
  %400(%var_8504, %var_8505, %var_8506) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), bool], Tensor[(2100), float64], Tensor[(9, 45), float32], Tensor[(150, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(1183, 1), float64], uint64, Tensor[(72), uint64]) */
}

def @func_1200(%var_1198: Tensor[(13, 6, 10), uint8]) -> (Tensor[(13, 6, 10), uint8],) {
  @func_1197(%var_1198) /* ty=(Tensor[(13, 6, 10), uint8],) */
}

def @func_7247(%var_7243: Tensor[(1183), float64], %var_7244: uint64, %var_7245: Tensor[(3, 24), uint64], %var_7246: Tensor[(540), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) {
  @func_7241(%var_7243, %var_7244, %var_7245, %var_7246) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) */
}

def @func_10072() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  @func_10070() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_10969() -> Tensor[(11, 8, 12), float32] {
  @func_10967() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_9134(%var_9131: Tensor[(540), uint8], %var_9132: Tensor[(1, 336), float32], %var_9133: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) {
  @func_9129(%var_9131, %var_9132, %var_9133) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) */
}

def @func_6956(%var_6894: Tensor[(540), uint8], %var_6900: Tensor[(260), float64], %var_6901: Tensor[(182), float64], %var_6951: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %401 = cast(%var_6894, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %402 = reshape(%401, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %403 = cast(%var_6900, dtype="float64") /* ty=Tensor[(260), float64] */;
  %404 = cast(%var_6901, dtype="float64") /* ty=Tensor[(182), float64] */;
  %405 = reshape(%403, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
  %406 = reshape(%404, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %407 = @func_987(%405, %406) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
  %408 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %409 = reshape(%408, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %410 = @func_3548(%409) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %413 = reshape(%412, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %414 = @func_3548(%413) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %415 = cast(%var_6951, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %416 = reshape(%415, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
  %417 = @func_1197(%416) /* ty=(Tensor[(13, 6, 10), uint8],) */;
  %418 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %419 = @func_5603(%402) /* ty=Tensor[(12, 15, 3), uint8] */;
  %420 = %407.0;
  %421 = %414.0;
  %422 = %417.0;
  (%418, %419, %var_6894, %420, %var_6900, %var_6901, %411, meta[relay.Constant][38] /* ty=Tensor[(396), uint8] */, %421, %422, %var_6951)
}

def @func_10650() -> (Tensor[(11, 8, 12), float32],) {
  @func_10648() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_8633(%var_8610: Tensor[(156), int8]) -> (Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) {
  %423 = cast(%var_8610, dtype="int8") /* ty=Tensor[(156), int8] */;
  %424 = reshape(%423, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %425 = @func_2192(%424) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %426 = cast(meta[relay.Constant][39] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %427 = cast(%var_8610, dtype="int8") /* ty=Tensor[(156), int8] */;
  %428 = %425.2;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(896), float64] */;
  %430 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %432 = reshape(%426, newshape=[396]) /* ty=Tensor[(396), uint8] */;
  %433 = reshape(%427, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %434 = reshape(%429, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %435 = reshape(%431, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
  %436 = @func_7300(%432, %433, %434, %435) /* ty=(Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) */;
  %437 = %436.7;
  (%430, %428, %var_8610, %437, meta[relay.Constant][39] /* ty=Tensor[(396), uint8] */)
}

def @func_13358(%var_13356: Tensor[(7, 8, 1), int16], %var_13357: Tensor[(7, 8, 7), int16]) -> Tensor[(7, 8, 7), bool] {
  @func_13354(%var_13356, %var_13357) /* ty=Tensor[(7, 8, 7), bool] */
}

def @func_4121(%var_4119: uint64, %var_4120: Tensor[(8, 1, 9), uint64]) -> Tensor[(8, 1, 9), uint64] {
  %440 = fn (%var_4113: uint64, %var_4114: Tensor[(8, 1, 9), uint64]) -> Tensor[(8, 1, 9), uint64] {
    %438 = cast(%var_4113, dtype="uint64") /* ty=uint64 */;
    %439 = cast(%var_4114, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
    multiply(%438, %439) /* ty=Tensor[(8, 1, 9), uint64] */
  };
  %440(%var_4119, %var_4120) /* ty=Tensor[(8, 1, 9), uint64] */
}

def @func_1362(%var_1360: Tensor[(14, 15, 1), int16], %var_1361: Tensor[(14, 15, 1), int16]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %450 = fn (%var_1342: Tensor[(14, 15, 1), int16], %var_1343: Tensor[(14, 15, 1), int16]) -> (Tensor[(14, 15, ?), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
    %441 = cast(%var_1343, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %442 = shape_of(%var_1342, dtype="int32") /* ty=Tensor[(3), int32] */;
    %443 = cast(%var_1342, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %445 = cast(meta[relay.Constant][40] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %446 = reshape(%445, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
    %447 = @func_1092(%446) /* ty=(Tensor[(12, 4, 14), float64],) */;
    %448 = equal(%443, %444) /* ty=Tensor[(14, 15, ?), bool] */;
    %449 = %447.0;
    (%448, %449, meta[relay.Constant][40] /* ty=Tensor[(672), float64] */)
  };
  %450(%var_1360, %var_1361) /* ty=(Tensor[(14, 15, ?), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */
}

def @func_13145() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) {
  %454 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) {
    %451 = @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %452 = %451.0;
    %453 = @func_12369() /* ty=Tensor[(11, 8, 12), float64] */;
    (%452, %453)
  };
  %454() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) */
}

def @func_5605(%var_5604: Tensor[(12, 15, 3), uint8]) -> Tensor[(12, 15, 3), uint8] {
  %459 = fn (%var_5599: Tensor[(12, 15, 3), uint8]) -> Tensor[(12, 15, 3), uint8] {
    %455 = cast(%var_5599, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
    %456 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 3), uint8] */, dtype="uint8") /* ty=Tensor[(12, 15, 3), uint8] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    logical_xor(%457, %458) /* ty=Tensor[(12, 15, 3), uint8] */
  };
  %459(%var_5604) /* ty=Tensor[(12, 15, 3), uint8] */
}

def @func_13207() -> (Tensor[(11, 8, 12), float32],) {
  @func_13205() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_9295() -> Tensor[(11, 8, 12), float32] {
  %460 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %460() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_8243(%var_8242: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64],) {
  %472 = fn (%var_8205: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64],) {
    %461 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
    %462 = cast(%var_8205, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %464 = cast(%461, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %466 = greater(%464, %465) /* ty=Tensor[(11, 8, 12), bool] */;
    %467 = cast(%var_8205, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
    %468 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
    %469 = cast(%466, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
    %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %471 = divide(%469, %470) /* ty=Tensor[(11, 8, 12), float64] */;
    (%471,)
  };
  %472(%var_8242) /* ty=(Tensor[(11, 8, 12), float64],) */
}

def @func_13228() -> (Tensor[(11, 8, 12), float64], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %478 = fn () -> (Tensor[(11, 8, 12), float64], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
    %473 = cast(meta[relay.Constant][42] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %474 = reshape(%473, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
    %475 = @func_1197(%474) /* ty=(Tensor[(13, 6, 10), uint8],) */;
    %476 = @func_9176() /* ty=Tensor[(11, 8, 12), float64] */;
    %477 = %475.0;
    (%476, %477, meta[relay.Constant][42] /* ty=Tensor[(780), uint8] */)
  };
  %478() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */
}

def @func_11291() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %479 = @func_11067() /* ty=Tensor[(11, 8, 12), float32] */;
  %480 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  (%479, %480)
}

def @func_1094(%var_1093: Tensor[(12, 4, 14), float64]) -> (Tensor[(12, 4, 14), float64],) {
  %488 = fn (%var_1081: Tensor[(12, 4, 14), float64]) -> (Tensor[(12, 4, 14), float64],) {
    %481 = cast(%var_1081, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
    %482 = rsqrt(%481) /* ty=Tensor[(12, 4, 14), float64] */;
    %483 = cast(%482, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
    %484 = shape_of(%var_1081, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%var_1081, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %487 = power(%485, %486) /* ty=Tensor[(12, 4, 14), float64] */;
    (%487,)
  };
  %488(%var_1093) /* ty=(Tensor[(12, 4, 14), float64],) */
}

def @func_8308(%var_8278: Tensor[(5, 156), uint8], %var_8279: Tensor[(1183), float64], %var_8281: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) {
  %489 = cast(meta[relay.Constant][43] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
  %490 = cast(%var_8278, dtype="uint8") /* ty=Tensor[(5, 156), uint8] */;
  %491 = cast(%var_8279, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %492 = cast(meta[relay.Constant][44] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %493 = cast(%var_8281, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %494 = reshape(%489, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %495 = reshape(%490, newshape=[130, 6]) /* ty=Tensor[(130, 6), uint8] */;
  %496 = reshape(%491, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
  %497 = reshape(%492, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
  %498 = reshape(%493, newshape=[15, 140]) /* ty=Tensor[(15, 140), float64] */;
  %499 = @func_7761(%494, %495, %496, %497, %498) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) */;
  %500 = cast(meta[relay.Constant][43] /* ty=Tensor[(54, 10), uint8] */, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %501 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %502 = %499.8;
  %503 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %504 = cosh(%500) /* ty=Tensor[(54, 10), float32] */;
  (%501, %502, %var_8278, %var_8279, meta[relay.Constant][44] /* ty=Tensor[(405), float32] */, %var_8281, %503, %504)
}

def @func_13067() -> Tensor[(11, 8, 12), float32] {
  %505 = @func_10736() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %505.0
}

def @func_9880() -> Tensor[(11, 8, 12), float32] {
  %506 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_7010() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %506() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12833() -> (Tensor[(11, 8, 12), float32],) {
  %508 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %507 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
    (%507,)
  };
  %508() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_9364() -> (Tensor[(11, 8, 12), float32],) {
  @func_9362() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_4276(%var_4275: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
  %510 = fn (%var_4262: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
    %509 = cast(%var_4262, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
    exp(%509) /* ty=Tensor[(1, 4, 4), float64] */
  };
  %510(%var_4275) /* ty=Tensor[(1, 4, 4), float64] */
}

def @func_12151() -> Tensor[(11, 8, 12), float32] {
  @func_10967() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_9668() -> (Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  %525 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
    %511 = cast(meta[relay.Constant][45] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %512 = reshape(%511, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %513 = @func_7950(%512) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %514 = cast(meta[relay.Constant][45] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %515 = reshape(%514, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %516 = @func_7950(%515) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %517 = cast(meta[relay.Constant][46] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %518 = reshape(%517, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), uint8] */;
    %519 = @func_1197(%518) /* ty=(Tensor[(13, 6, 10), uint8],) */;
    %520 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %521 = %513.1;
    %522 = %516.3;
    %523 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %524 = %519.0;
    (%520, %521, meta[relay.Constant][45] /* ty=Tensor[(672), float64] */, %522, %523, %524, meta[relay.Constant][46] /* ty=Tensor[(780), uint8] */)
  };
  %525() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */
}

def @func_10353() -> (Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) {
  @func_10351() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) */
}

def @func_8584() -> Tensor[(11, 8, 12), float32] {
  %527 = fn () -> Tensor[(11, 8, 12), float32] {
    %526 = @func_8082() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %526.0
  };
  %527() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7767(%var_7762: Tensor[(540), uint8], %var_7763: Tensor[(130, 6), uint8], %var_7764: Tensor[(1, 1183), float64], %var_7765: Tensor[(135, 3), float32], %var_7766: Tensor[(15, 140), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) {
  %558 = fn (%var_7711: Tensor[(540), uint8], %var_7714: Tensor[(130, 6), uint8], %var_7740: Tensor[(1, 1183), float64], %var_7743: Tensor[(135, 3), float32], %var_7744: Tensor[(15, 140), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) {
    %528 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %529 = cast(%528, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
    %530 = cast(%var_7711, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %531 = cast(meta[relay.Constant][47] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %532 = cast(meta[relay.Constant][48] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %533 = cast(%var_7714, dtype="uint8") /* ty=Tensor[(130, 6), uint8] */;
    %534 = reshape(%530, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %535 = reshape(%531, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %536 = reshape(%532, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %537 = reshape(%533, newshape=[780]) /* ty=Tensor[(780), uint8] */;
    %538 = @func_6956(%534, %535, %536, %537) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
    %539 = cast(meta[relay.Constant][49] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %540 = cast(%var_7740, dtype="float64") /* ty=Tensor[(1, 1183), float64] */;
    %541 = reshape(%539, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
    %542 = reshape(%540, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
    %543 = @func_5729(%541, %542) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
    %544 = cast(%var_7743, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
    %545 = cast(%var_7743, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
    %546 = cast(%var_7744, dtype="float64") /* ty=Tensor[(15, 140), float64] */;
    %547 = cast(meta[relay.Constant][50] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %548 = reshape(%544, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %549 = reshape(%545, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %550 = reshape(%546, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
    %551 = reshape(%547, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %552 = @func_5526(%548, %549, %550, %551) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */;
    %553 = acosh(%529) /* ty=Tensor[(11, 8, 12), float64] */;
    %554 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
    %555 = %538.4;
    %556 = %543.0;
    %557 = %552.7;
    (%553, %554, %555, %var_7711, meta[relay.Constant][47] /* ty=Tensor[(260), float64] */, meta[relay.Constant][48] /* ty=Tensor[(182), float64] */, %var_7714, %556, meta[relay.Constant][49] /* ty=Tensor[(195), float64] */, %var_7740, %557, %var_7743, %var_7744, meta[relay.Constant][50] /* ty=Tensor[(672), float64] */)
  };
  %558(%var_7762, %var_7763, %var_7764, %var_7765, %var_7766) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) */
}

def @func_10505(%var_10503: int16) -> (Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) {
  @func_10502(%var_10503) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) */
}

def @func_11395() -> Tensor[(11, 8, 12), float32] {
  %560 = fn () -> Tensor[(11, 8, 12), float32] {
    %559 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %559.0
  };
  %560() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_12153() -> Tensor[(11, 8, 12), float32] {
  @func_12151() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_9129(%var_9075: Tensor[(540), uint8], %var_9104: Tensor[(1, 336), float32], %var_9109: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) {
  %561 = cast(meta[relay.Constant][51] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %562 = cast(meta[relay.Constant][52] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %563 = cast(meta[relay.Constant][53] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %564 = cast(%var_9075, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %565 = reshape(%561, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %566 = reshape(%562, newshape=[]) /* ty=uint64 */;
  %567 = reshape(%563, newshape=[3, 24]) /* ty=Tensor[(3, 24), uint64] */;
  %568 = reshape(%564, newshape=[540]) /* ty=Tensor[(540), uint8] */;
  %569 = @func_7241(%565, %566, %567, %568) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) */;
  %570 = cast(%var_9104, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %571 = reshape(%570, newshape=[7, 6, 8]) /* ty=Tensor[(7, 6, 8), float32] */;
  %572 = @func_6178(%571) /* ty=(Tensor[(7, 6, 8), float32],) */;
  %573 = cast(meta[relay.Constant][52] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
  %574 = cast(%var_9109, dtype="float64") /* ty=Tensor[(12), float64] */;
  %575 = reshape(%573, newshape=[]) /* ty=float64 */;
  %576 = reshape(%574, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
  %577 = @func_7418(%575, %576) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) */;
  %578 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %579 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  %580 = %569.7;
  %581 = %572.0;
  %582 = %577.1;
  (%578, %579, %580, meta[relay.Constant][51] /* ty=Tensor[(1183), float64] */, meta[relay.Constant][52] /* ty=uint64 */, meta[relay.Constant][53] /* ty=Tensor[(72), uint64] */, %var_9075, %581, %var_9104, %582, %var_9109)
}

def @func_13271(%var_13270: Tensor[(30, 70), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(2100), float64], Tensor[(30, 70), float64], Tensor[(405), float32]) {
  %591 = fn (%var_13265: Tensor[(30, 70), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(2100), float64], Tensor[(30, 70), float64], Tensor[(405), float32]) {
    %583 = @func_7621() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %584 = cast(%var_13265, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
    %585 = cast(meta[relay.Constant][54] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
    %586 = reshape(%584, newshape=[2100]) /* ty=Tensor[(2100), float64] */;
    %587 = reshape(%585, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %588 = @func_10906(%586, %587) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(24), float32], Tensor[(2100), float64], Tensor[(672), float64], Tensor[(405), bool]) */;
    %589 = %583.0;
    %590 = %588.3;
    (%589, %590, %var_13265, meta[relay.Constant][54] /* ty=Tensor[(405), float32] */)
  };
  %591(%var_13270) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(2100), float64], Tensor[(30, 70), float64], Tensor[(405), float32]) */
}

def @func_13976() -> Tensor[(11, 8, 12), float32] {
  %592 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %592.0
}

def @func_10736() -> (Tensor[(11, 8, 12), float32],) {
  %593 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  (%593,)
}

def @func_8313(%var_8310: Tensor[(5, 156), uint8], %var_8311: Tensor[(1183), float64], %var_8312: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) {
  @func_8308(%var_8310, %var_8311, %var_8312) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(195), float64], Tensor[(5, 156), uint8], Tensor[(1183), float64], Tensor[(405), float32], Tensor[(2100), float64], Tensor[(11, 8, 12), float32], Tensor[(54, 10), float32]) */
}

def @func_11220() -> Tensor[(11, 8, 12), float64] {
  @func_9176() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_987(%var_964: Tensor[(10, 2, 13), float64], %var_972: Tensor[(182), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) {
  %594 = cast(%var_964, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
  %595 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(10, 2, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %598 = cast(-3.35794f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %599 = cast(%var_972, dtype="float64") /* ty=Tensor[(182), float64] */;
  %600 = reshape(%598, newshape=[]) /* ty=float64 */;
  %601 = reshape(%599, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %602 = @func_519(%600, %601) /* ty=(Tensor[(1, 13, 14), bool],) */;
  %603 = floor_mod(%596, %597) /* ty=Tensor[(10, 2, 13), float64] */;
  %604 = %602.0;
  (%603, %604, -3.35794f64 /* ty=float64 */, %var_972)
}

def @func_11678() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) {
  %605 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %606 = %605.6;
  %607 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  (%606, %607)
}

def @func_11658() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %614 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
    %608 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %609 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %610 = %608.0;
    %611 = %609.0;
    %612 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
    %613 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
    (%610, %611, %612, %613)
  };
  %614() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_12371() -> Tensor[(11, 8, 12), float64] {
  @func_12369() /* ty=Tensor[(11, 8, 12), float64] */
}

def @func_13091() -> (Tensor[(5, 11, 15), uint8], Tensor[(11, 8, 12), float32]) {
  %615 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 15), uint8] */;
  %616 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(meta[relay.Constant][56] /* ty=Tensor[(5, 11, 15), uint8] */, dtype="uint8") /* ty=Tensor[(5, 11, 15), uint8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %619 = multiply(%617, %618) /* ty=Tensor[(5, 11, 15), uint8] */;
  %620 = @func_13067() /* ty=Tensor[(11, 8, 12), float32] */;
  (%619, %620)
}

def @func_9695(%var_9673: Tensor[(10, 14, 6), float64]) -> (Tensor[(10, 14, 6), bool], Tensor[(10, 14, 6), float64]) {
  %621 = cast(%var_9673, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
  %622 = acos(%621) /* ty=Tensor[(10, 14, 6), float64] */;
  %623 = cast(%var_9673, dtype="bool") /* ty=Tensor[(10, 14, 6), bool] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="bool") /* ty=Tensor[(10, 14, 6), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = cast(%var_9673, dtype="float64") /* ty=Tensor[(10, 14, 6), float64] */;
  %628 = greater(%625, %626) /* ty=Tensor[(10, 14, 6), bool] */;
  %629 = acosh(%627) /* ty=Tensor[(10, 14, 6), float64] */;
  (%628, %629)
}

def @func_8905() -> Tensor[(11, 8, 12), float32] {
  %630 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %630() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10562(%var_10559: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(945), float32], Tensor[(2100), float64]) {
  %631 = cast(%var_10559, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %632 = reshape(%631, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
  %633 = @func_2346(%632) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
  %634 = @func_8904() /* ty=Tensor[(11, 8, 12), float32] */;
  %635 = %633.2;
  (%634, %635, %var_10559)
}

def @func_13609() -> (Tensor[(11, 8, 12), float32],) {
  %638 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %636 = @func_11678() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32]) */;
    %637 = %636.1;
    (%637,)
  };
  %638() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_9513(%var_9511: Tensor[(336), float32], %var_9512: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(540), uint8], Tensor[(336), float32], Tensor[(12), float64], Tensor[(11, 8, 12), bool], Tensor[(11, 9, 4), uint8], Tensor[(5, 52), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %665 = fn (%var_9448: Tensor[(336), float32], %var_9449: Tensor[(12), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(540), uint8], Tensor[(336), float32], Tensor[(12), float64], Tensor[(11, 8, 12), bool], Tensor[(11, 9, 4), uint8], Tensor[(5, 52), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
    %639 = cast(meta[relay.Constant][58] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %640 = cast(%var_9448, dtype="float32") /* ty=Tensor[(336), float32] */;
    %641 = cast(%var_9449, dtype="float64") /* ty=Tensor[(12), float64] */;
    %642 = reshape(%639, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %643 = reshape(%640, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
    %644 = reshape(%641, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %645 = @func_9129(%642, %643, %644) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(3, 24), uint64], Tensor[(1183), float64], uint64, Tensor[(72), uint64], Tensor[(540), uint8], Tensor[(7, 6, 8), float32], Tensor[(1, 336), float32], Tensor[(12, 1, 1), uint8], Tensor[(12), float64]) */;
    %646 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
    %647 = cast(%646, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
    %648 = atanh(%647) /* ty=Tensor[(11, 8, 12), float32] */;
    %649 = cast(%646, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %651 = cast(%648, dtype="bool") /* ty=Tensor[(11, 8, 12), bool] */;
    %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %653 = cast(meta[relay.Constant][58] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %654 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 52), float64] */, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
    %655 = cast(meta[relay.Constant][60] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %656 = cast(meta[relay.Constant][61] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %657 = reshape(%653, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %658 = reshape(%654, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %659 = reshape(%655, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %660 = reshape(%656, newshape=[780]) /* ty=Tensor[(780), uint8] */;
    %661 = @func_6956(%657, %658, %659, %660) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
    %662 = %645.1;
    %663 = logical_and(%651, %652) /* ty=Tensor[(11, 8, 12), bool] */;
    %664 = %661.6;
    (%662, meta[relay.Constant][58] /* ty=Tensor[(540), uint8] */, %var_9448, %var_9449, %663, %664, meta[relay.Constant][59] /* ty=Tensor[(5, 52), float64] */, meta[relay.Constant][60] /* ty=Tensor[(182), float64] */, meta[relay.Constant][61] /* ty=Tensor[(780), uint8] */)
  };
  %665(%var_9511, %var_9512) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(540), uint8], Tensor[(336), float32], Tensor[(12), float64], Tensor[(11, 8, 12), bool], Tensor[(11, 9, 4), uint8], Tensor[(5, 52), float64], Tensor[(182), float64], Tensor[(780), uint8]) */
}

def @func_9811() -> Tensor[(11, 8, 12), float32] {
  @func_7010() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13978() -> Tensor[(11, 8, 12), float32] {
  @func_13976() /* ty=Tensor[(11, 8, 12), float32] */
}

def @main(%var_14701: Tensor[(78, 2), int8]) -> (Tensor[(11, 8, 12), float32], Tensor[(78, 2), float64], Tensor[(78, 2), float32]) {
  %666 = cast(%var_14701, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %667 = tan(%666) /* ty=Tensor[(78, 2), float64] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %669 = cast(%var_14701, dtype="int8") /* ty=Tensor[(78, 2), int8] */;
  %670 = reshape(%669, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %671 = @func_2195(%670) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %672 = %671.0;
  %673 = cast(%672, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %674 = shape_of(%667, dtype="int32") /* ty=Tensor[(2), int32] */;
  %675 = cast(%667, dtype="float32") /* ty=Tensor[(78, 2), float32] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %677 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %678 = atan(%668) /* ty=Tensor[(78, 2), float64] */;
  %679 = multiply(%675, %676) /* ty=Tensor[(78, 2), float32] */;
  (%677, %678, %679)
}

def @func_11435() -> Tensor[(100), uint16] {
  %680 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %680.10
}

def @func_522(%var_520: float64, %var_521: Tensor[(1, 13, 14), float64]) -> (Tensor[(1, 13, 14), bool],) {
  %684 = fn (%var_507: float64, %var_508: Tensor[(1, 13, 14), float64]) -> (Tensor[(1, 13, 14), bool],) {
    %681 = cast(%var_507, dtype="bool") /* ty=bool */;
    %682 = cast(%var_508, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
    %683 = greater(%681, %682) /* ty=Tensor[(1, 13, 14), bool] */;
    (%683,)
  };
  %684(%var_520, %var_521) /* ty=(Tensor[(1, 13, 14), bool],) */
}

def @func_12786() -> Tensor[(11, 8, 12), float32] {
  %686 = fn () -> Tensor[(11, 8, 12), float32] {
    %685 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %685.0
  };
  %686() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_6102(%var_6084: Tensor[(11, 16, 11), float32]) -> (Tensor[(11, 16, 11), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  %687 = cast(%var_6084, dtype="float32") /* ty=Tensor[(11, 16, 11), float32] */;
  %688 = cast(meta[relay.Constant][62] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %689 = reshape(%688, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %690 = @func_3548(%689) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %691 = cosh(%687) /* ty=Tensor[(11, 16, 11), float32] */;
  %692 = %690.0;
  (%691, %692, meta[relay.Constant][62] /* ty=Tensor[(396), uint8] */)
}

def @func_12466(%var_12461: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
  %693 = cast(%var_12461, dtype="float64") /* ty=Tensor[(4, 2, 1), float64] */;
  acos(%693) /* ty=Tensor[(4, 2, 1), float64] */
}

def @func_12111() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(2100), float64], Tensor[(1183), float64], uint64) {
  @func_12109() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(2100), float64], Tensor[(1183), float64], uint64) */
}

def @func_12750() -> (Tensor[(11, 8, 12), float32],) {
  %695 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %694 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
    (%694,)
  };
  %695() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_249(%var_244: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32],) {
  %696 = cast(%var_244, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
  %697 = atan(%696) /* ty=Tensor[(7, 9, 15), float32] */;
  (%697,)
}

def @func_5234(%var_5232: Tensor[(9, 3, 3), uint8], %var_5233: Tensor[(1430), int16]) -> (Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) {
  %714 = fn (%var_5175: Tensor[(9, 3, 3), uint8], %var_5196: Tensor[(1430), int16]) -> (Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) {
    %698 = cast(%var_5175, dtype="uint8") /* ty=Tensor[(9, 3, 3), uint8] */;
    %699 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(9, 3, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 3, 3), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 3), uint8] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %702 = cast(%var_5196, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %703 = cast(%var_5196, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %704 = reshape(%702, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
    %705 = reshape(%703, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
    %706 = @func_619(%704, %705) /* ty=(Tensor[(11, 13, 10), bool],) */;
    %707 = %706.0;
    %708 = cast(%707, dtype="int32") /* ty=Tensor[(11, 13, 10), int32] */;
    %709 = shape_of(%var_5196, dtype="int32") /* ty=Tensor[(1), int32] */;
    %710 = cast(%var_5196, dtype="int32") /* ty=Tensor[(1430), int32] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?), int32] */;
    %712 = right_shift(%700, %701) /* ty=Tensor[(9, 3, 3), uint8] */;
    %713 = minimum(%710, %711) /* ty=Tensor[(1430), int32] */;
    (%712, %713)
  };
  %714(%var_5232, %var_5233) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */
}

def @func_11437() -> Tensor[(100), uint16] {
  @func_11435() /* ty=Tensor[(100), uint16] */
}

def @func_12609(%var_12608: Tensor[(336), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(7, 6, 8), float32], Tensor[(336), float32]) {
  %722 = fn (%var_12602: Tensor[(336), float32]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(7, 6, 8), float32], Tensor[(336), float32]) {
    %715 = @func_11844() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %716 = cast(%var_12602, dtype="float32") /* ty=Tensor[(336), float32] */;
    %717 = reshape(%716, newshape=[7, 6, 8]) /* ty=Tensor[(7, 6, 8), float32] */;
    %718 = @func_6178(%717) /* ty=(Tensor[(7, 6, 8), float32],) */;
    %719 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
    %720 = %715.0;
    %721 = %718.0;
    (%719, %720, %721, %var_12602)
  };
  %722(%var_12608) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(7, 6, 8), float32], Tensor[(336), float32]) */
}

def @func_8636(%var_8634: Tensor[(156), int8]) -> (Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) {
  @func_8633(%var_8634) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) */
}

def @func_12689() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16) {
  @func_12687() /* ty=(Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16) */
}

def @func_10070() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %723 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %724 = @func_9294() /* ty=Tensor[(11, 8, 12), float32] */;
  %725 = %723.0;
  %726 = @func_9294() /* ty=Tensor[(11, 8, 12), float32] */;
  (%724, %725, %726)
}

def @func_7529(%var_7507: Tensor[(16, 7, 15), float32], %var_7508: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(1, 4, 4), float64], Tensor[(1, 16), float64], Tensor[(4, 8, 9), float64], Tensor[(288), float64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8]) {
  %727 = cast(%var_7508, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %728 = shape_of(%var_7507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_7507, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %731 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %732 = reshape(%731, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %733 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %734 = reshape(%733, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %735 = @func_322(%734) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
  %736 = cast(meta[relay.Constant][66] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %737 = reshape(%736, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %738 = minimum(%729, %730) /* ty=Tensor[(16, 7, 15), float32] */;
  %739 = @func_4274(%732) /* ty=Tensor[(1, 4, 4), float64] */;
  %740 = %735.0;
  %741 = @func_5603(%737) /* ty=Tensor[(12, 15, 3), uint8] */;
  (%738, %739, meta[relay.Constant][64] /* ty=Tensor[(1, 16), float64] */, %740, meta[relay.Constant][65] /* ty=Tensor[(288), float64] */, %741, meta[relay.Constant][66] /* ty=Tensor[(540), uint8] */)
}

def @func_9362() -> (Tensor[(11, 8, 12), float32],) {
  %742 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %744 = asinh(%743) /* ty=Tensor[(11, 8, 12), float32] */;
  (%744,)
}

def @func_3548(%var_3538: Tensor[(11, 9, 4), uint8]) -> (Tensor[(11, 9, 4), uint8],) {
  %745 = cast(%var_3538, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %746 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(11, 9, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(meta[relay.Constant][67] /* ty=Tensor[(11, 9, 4), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %749 = left_shift(%747, %748) /* ty=Tensor[(11, 9, 4), uint8] */;
  (%749,)
}

def @func_252(%var_250: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32],) {
  @func_249(%var_250) /* ty=(Tensor[(7, 9, 15), float32],) */
}

def @func_7057() -> (Tensor[(11, 8, 12), float32],) {
  %751 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %750 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
    (%750,)
  };
  %751() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_12994() -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %758 = fn () -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
    %752 = @func_11181() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
    %753 = @func_10736() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %754 = %752.0;
    %755 = @func_6564() /* ty=Tensor[(11, 8, 12), float32] */;
    %756 = @func_12151() /* ty=Tensor[(11, 8, 12), float32] */;
    %757 = %753.0;
    (%754, %755, %756, %757)
  };
  %758() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_7622() -> (Tensor[(11, 8, 12), float32],) {
  %760 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %759 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
    (%759,)
  };
  %760() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_13815() -> Tensor[(11, 8, 12), float32] {
  @func_10932() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7176(%var_7174: Tensor[(195), float64]) -> (Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32]) {
  @func_7173(%var_7174) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32]) */
}

def @func_12848() -> Tensor[(11, 8, 12), float32] {
  @func_12846() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_6105(%var_6103: Tensor[(11, 16, 11), float32]) -> (Tensor[(11, 16, 11), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  @func_6102(%var_6103) /* ty=(Tensor[(11, 16, 11), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) */
}

def @func_13175() -> Tensor[(11, 8, 12), float32] {
  %761 = @func_11291() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
  %761.1
}

def @func_13773(%var_13771: int32) -> Tensor[(6, 9, 10), int32] {
  @func_13770(%var_13771) /* ty=Tensor[(6, 9, 10), int32] */
}

def @func_9033() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  @func_9031() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

def @func_12687() -> (Tensor[(7, 9, 15), float32], Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16) {
  %762 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %763 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %766 = sqrt(%765) /* ty=Tensor[(11, 8, 12), float64] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %768 = cast(meta[relay.Constant][68] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %769 = reshape(%768, newshape=[]) /* ty=int16 */;
  %770 = @func_10502(%769) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(15, 2, 8), bool], int16, Tensor[(240), int16], Tensor[(11, 8, 12), float32]) */;
  %771 = %762.6;
  %772 = acos(%767) /* ty=Tensor[(11, 8, 12), float32] */;
  %773 = %770.1;
  (%771, %772, %773, meta[relay.Constant][68] /* ty=int16 */)
}

def @func_7151() -> Tensor[(11, 8, 12), float32] {
  %774 = @func_7056() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %774.0
}

def @func_7595(%var_7593: Tensor[(182), float64], %var_7594: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
  %786 = fn (%var_7582: Tensor[(182), float64], %var_7583: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) {
    %775 = cast(meta[relay.Constant][69] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
    %776 = cast(meta[relay.Constant][70] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %777 = cast(%var_7582, dtype="float64") /* ty=Tensor[(182), float64] */;
    %778 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %779 = reshape(%775, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %780 = reshape(%776, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %781 = reshape(%777, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %782 = reshape(%778, newshape=[780]) /* ty=Tensor[(780), uint8] */;
    %783 = @func_6956(%779, %780, %781, %782) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */;
    %784 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
    %785 = %783.7;
    (%784, %785, meta[relay.Constant][69] /* ty=Tensor[(54, 10), uint8] */, meta[relay.Constant][70] /* ty=Tensor[(260), float64] */, %var_7582, %var_7583)
  };
  %786(%var_7593, %var_7594) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */
}

def @func_619(%var_610: Tensor[(11, 13, 10), int16], %var_611: Tensor[(11, 13, 10), int16]) -> (Tensor[(11, 13, 10), bool],) {
  %787 = cast(%var_611, dtype="bool") /* ty=Tensor[(11, 13, 10), bool] */;
  %788 = shape_of(%var_610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_610, dtype="bool") /* ty=Tensor[(11, 13, 10), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = less(%789, %790) /* ty=Tensor[(11, 13, 10), bool] */;
  (%791,)
}

def @func_11102(%var_11100: Tensor[(81), uint8], %var_11101: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(14, 15, 10), uint8], Tensor[(2100), float64]) {
  %803 = fn (%var_11083: Tensor[(81), uint8], %var_11097: Tensor[(2100), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(14, 15, 10), uint8], Tensor[(2100), float64]) {
    %792 = cast(%var_11083, dtype="uint8") /* ty=Tensor[(81), uint8] */;
    %793 = cast(meta[relay.Constant][71] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %794 = reshape(%792, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
    %795 = reshape(%793, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
    %796 = @func_5231(%794, %795) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
    %797 = cast(%var_11097, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %798 = reshape(%797, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
    %799 = @func_2346(%798) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
    %800 = @func_9811() /* ty=Tensor[(11, 8, 12), float32] */;
    %801 = %796.1;
    %802 = %799.0;
    (%800, %801, %var_11083, meta[relay.Constant][71] /* ty=Tensor[(1430), int16] */, %802, %var_11097)
  };
  %803(%var_11100, %var_11101) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(14, 15, 10), uint8], Tensor[(2100), float64]) */
}

def @func_5479(%var_5478: Tensor[(5, 12, 14), int64]) -> Tensor[(5, 12, 14), uint32] {
  %809 = fn (%var_5457: Tensor[(5, 12, 14), int64]) -> Tensor[(5, 12, 14), uint32] {
    %804 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %805 = cast(%var_5457, dtype="int64") /* ty=Tensor[(5, 12, 14), int64] */;
    %806 = minimum(%804, %805) /* ty=Tensor[(5, 12, 14), int64] */;
    %807 = cast(-8 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
    %808 = cast(%806, dtype="uint32") /* ty=Tensor[(5, 12, 14), uint32] */;
    logical_xor(%807, %808) /* ty=Tensor[(5, 12, 14), uint32] */
  };
  %809(%var_5478) /* ty=Tensor[(5, 12, 14), uint32] */
}

def @func_6962(%var_6958: Tensor[(540), uint8], %var_6959: Tensor[(260), float64], %var_6960: Tensor[(182), float64], %var_6961: Tensor[(780), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) {
  @func_6956(%var_6958, %var_6959, %var_6960, %var_6961) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(10, 2, 13), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 9, 4), uint8], Tensor[(13, 6, 10), uint8], Tensor[(780), uint8]) */
}

def @func_9698(%var_9696: Tensor[(10, 14, 6), float64]) -> (Tensor[(10, 14, 6), bool], Tensor[(10, 14, 6), float64]) {
  @func_9695(%var_9696) /* ty=(Tensor[(10, 14, 6), bool], Tensor[(10, 14, 6), float64]) */
}

def @func_6745(%var_6703: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8]) {
  %810 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %811 = cast(%var_6703, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %815 = cast(meta[relay.Constant][72] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %816 = reshape(%815, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %817 = @func_3548(%816) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %818 = mod(%813, %814) /* ty=Tensor[(11, 8, 12), float64] */;
  %819 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %820 = %817.0;
  (%818, %819, %820, meta[relay.Constant][72] /* ty=Tensor[(396), uint8] */)
}

def @func_11541() -> Tensor[(11, 8, 12), float32] {
  @func_11539() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_554(%var_552: Tensor[(4, 14, 16), float64]) -> (Tensor[(4, 14, 16), float64],) {
  @func_551(%var_552) /* ty=(Tensor[(4, 14, 16), float64],) */
}

def @func_13354(%var_13341: Tensor[(7, 8, 1), int16], %var_13342: Tensor[(7, 8, 7), int16]) -> Tensor[(7, 8, 7), bool] {
  %821 = cast(%var_13341, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %822 = cast(%var_13342, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  greater_equal(%821, %822) /* ty=Tensor[(7, 8, 7), bool] */
}

def @func_7004(%var_7002: Tensor[(5, 7, 13), float64]) -> (Tensor[(5, 7, 13), float64], float64, Tensor[(260), float64], Tensor[(182), float64]) {
  @func_7001(%var_7002) /* ty=(Tensor[(5, 7, 13), float64], float64, Tensor[(260), float64], Tensor[(182), float64]) */
}

def @func_12060() -> (Tensor[(11, 8, 12), float32],) {
  %825 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %823 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %824 = %823.0;
    (%824,)
  };
  %825() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_12205() -> Tensor[(11, 8, 12), float32] {
  %826 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_8904() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %826() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_13759() -> (Tensor[(11, 8, 12), float32],) {
  %827 = @func_11394() /* ty=Tensor[(11, 8, 12), float32] */;
  (%827,)
}

def @func_7001(%var_6979: Tensor[(5, 7, 13), float64]) -> (Tensor[(5, 7, 13), float64], float64, Tensor[(260), float64], Tensor[(182), float64]) {
  %828 = cast(%var_6979, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %829 = cast(meta[relay.Constant][73] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %830 = cast(meta[relay.Constant][74] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %831 = reshape(%829, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
  %832 = reshape(%830, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %833 = @func_987(%831, %832) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
  %834 = exp(%828) /* ty=Tensor[(5, 7, 13), float64] */;
  %835 = %833.2;
  (%834, %835, meta[relay.Constant][73] /* ty=Tensor[(260), float64] */, meta[relay.Constant][74] /* ty=Tensor[(182), float64] */)
}

def @func_10351() -> (Tensor[(11, 8, 12), float32], Tensor[(672), float64], Tensor[(11, 8, 12), float32]) {
  %836 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
  %837 = %836.5;
  %838 = cast(%837, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %839 = exp(%838) /* ty=Tensor[(11, 8, 12), float32] */;
  %840 = @func_10208() /* ty=Tensor[(672), float64] */;
  %841 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  (%839, %840, %841)
}

def @func_14211() -> (Tensor[(1430), int32],) {
  %844 = fn () -> (Tensor[(1430), int32],) {
    %842 = @func_13445() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(1183), float64], Tensor[(1183, 1), float64], Tensor[(1430), int32], Tensor[(3, 27), uint8], Tensor[(1430), int16]) */;
    %843 = %842.3;
    (%843,)
  };
  %844() /* ty=(Tensor[(1430), int32],) */
}

def @func_9248(%var_9245: Tensor[(11, 8, 12), float32], %var_9246: Tensor[(396), uint8], %var_9247: Tensor[(672), float64]) -> (Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  @func_9243(%var_9245, %var_9246, %var_9247) /* ty=(Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */
}

def @func_2346(%var_2319: Tensor[(14, 15, 10), float64]) -> (Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) {
  %845 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 10), float64] */;
  %846 = log(%845) /* ty=Tensor[(1, 15, 10), float64] */;
  %847 = cast(%846, dtype="uint8") /* ty=Tensor[(1, 15, 10), uint8] */;
  %848 = cast(%var_2319, dtype="uint8") /* ty=Tensor[(14, 15, 10), uint8] */;
  %849 = cast(meta[relay.Constant][76] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %850 = reshape(%849, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %851 = @func_249(%850) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %852 = minimum(%847, %848) /* ty=Tensor[(14, 15, 10), uint8] */;
  %853 = %851.0;
  (%852, %853, meta[relay.Constant][76] /* ty=Tensor[(945), float32] */)
}

def @func_12469(%var_12467: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
  @func_12466(%var_12467) /* ty=Tensor[(4, 2, 1), float64] */
}

def @func_13880(%var_13879: Tensor[(3, 132), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(3, 132), uint8]) {
  %860 = fn (%var_13874: Tensor[(3, 132), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(3, 132), uint8]) {
    %854 = @func_11657() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %855 = cast(%var_13874, dtype="uint8") /* ty=Tensor[(3, 132), uint8] */;
    %856 = reshape(%855, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
    %857 = @func_3548(%856) /* ty=(Tensor[(11, 9, 4), uint8],) */;
    %858 = %854.3;
    %859 = %857.0;
    (%858, %859, %var_13874)
  };
  %860(%var_13879) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(3, 132), uint8]) */
}

def @func_2192(%var_2168: Tensor[(1, 12, 13), int8]) -> (Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) {
  %861 = cast(meta[relay.Constant][77] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %862 = cast(%var_2168, dtype="bool") /* ty=Tensor[(1, 12, 13), bool] */;
  %863 = cast(meta[relay.Constant][78] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %864 = reshape(%863, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %865 = @func_551(%864) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %866 = cast(%var_2168, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %867 = not_equal(%861, %862) /* ty=Tensor[(1, 12, 13), bool] */;
  %868 = %865.0;
  %869 = log(%866) /* ty=Tensor[(1, 12, 13), float64] */;
  (%867, %868, meta[relay.Constant][78] /* ty=Tensor[(896), float64] */, %869)
}

def @func_7241(%var_7196: Tensor[(1183), float64], %var_7221: uint64, %var_7222: Tensor[(3, 24), uint64], %var_7225: Tensor[(540), uint8]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1183), float64], Tensor[(11, 8, 12), float32], Tensor[(8, 1, 9), uint64], uint64, Tensor[(3, 24), uint64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8], Tensor[(11, 8, 12), float32]) {
  %870 = cast(meta[relay.Constant][79] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %871 = cast(%var_7196, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %872 = reshape(%870, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %873 = reshape(%871, newshape=[1183]) /* ty=Tensor[(1183), float64] */;
  %874 = @func_5729(%872, %873) /* ty=(Tensor[(13, 7, 13), float64], Tensor[(1183), float64], Tensor[(15, ?, 13), uint16]) */;
  %875 = cast(%var_7221, dtype="uint64") /* ty=uint64 */;
  %876 = cast(%var_7222, dtype="uint64") /* ty=Tensor[(3, 24), uint64] */;
  %877 = reshape(%875, newshape=[]) /* ty=uint64 */;
  %878 = reshape(%876, newshape=[8, 1, 9]) /* ty=Tensor[(8, 1, 9), uint64] */;
  %879 = cast(%var_7225, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %880 = reshape(%879, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), uint8] */;
  %881 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %882 = %874.0;
  %883 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %884 = @func_4118(%877, %878) /* ty=Tensor[(8, 1, 9), uint64] */;
  %885 = @func_5603(%880) /* ty=Tensor[(12, 15, 3), uint8] */;
  %886 = @func_7151() /* ty=Tensor[(11, 8, 12), float32] */;
  (%881, %882, meta[relay.Constant][79] /* ty=Tensor[(195), float64] */, %var_7196, %883, %884, %var_7221, %var_7222, %885, %var_7225, %886)
}

def @func_12330() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), float32]) {
  %887 = @func_10648() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %888 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %889 = cast(meta[relay.Constant][80] /* ty=Tensor[(396), uint8] */, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %890 = reshape(%889, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %891 = @func_3548(%890) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %892 = %887.0;
  %893 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  %894 = %888.0;
  %895 = %891.0;
  %896 = @func_8583() /* ty=Tensor[(11, 8, 12), float32] */;
  (%892, %893, %894, %895, meta[relay.Constant][80] /* ty=Tensor[(396), uint8] */, %896)
}

def @func_13205() -> (Tensor[(11, 8, 12), float32],) {
  %897 = @func_13144() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float64]) */;
  %898 = %897.0;
  (%898,)
}

def @func_322(%var_303: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) {
  %899 = cast(%var_303, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %900 = cast(meta[relay.Constant][81] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %901 = reshape(%900, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %902 = @func_249(%901) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %903 = %902.0;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
  %905 = cosh(%899) /* ty=Tensor[(4, 8, 9), float64] */;
  %906 = sinh(%904) /* ty=Tensor[(7, 9, 15), float32] */;
  (%905, meta[relay.Constant][81] /* ty=Tensor[(945), float32] */, %906)
}

def @func_11949(%var_11945: Tensor[(182), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8]) {
  %907 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(11, 8, 12), float64] */;
  %909 = cast(%var_11945, dtype="float64") /* ty=Tensor[(182), float64] */;
  %910 = cast(meta[relay.Constant][82] /* ty=Tensor[(130, 6), uint8] */, dtype="uint8") /* ty=Tensor[(130, 6), uint8] */;
  %911 = reshape(%909, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %912 = reshape(%910, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %913 = @func_7592(%911, %912) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %914 = sigmoid(%908) /* ty=Tensor[(11, 8, 12), float64] */;
  %915 = %913.3;
  (%914, %915, %var_11945, meta[relay.Constant][82] /* ty=Tensor[(130, 6), uint8] */)
}

def @func_12170(%var_12168: Tensor[(224, 4), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) {
  @func_12167(%var_12168) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(224, 4), float64]) */
}

def @func_14549() -> Tensor[(11, 8, 12), float32] {
  @func_14547() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_6577() -> Tensor[(11, 8, 12), float32] {
  @func_6575() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_11844() -> (Tensor[(11, 8, 12), float32],) {
  %916 = @func_10627() /* ty=Tensor[(11, 8, 12), float32] */;
  (%916,)
}

def @func_14509(%var_14508: Tensor[(2, 12, 5), float32]) -> (Tensor[(2, 12, 5), float32],) {
  %919 = fn (%var_14502: Tensor[(2, 12, 5), float32]) -> (Tensor[(2, 12, 5), float32],) {
    %917 = cast(%var_14502, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
    %918 = acosh(%917) /* ty=Tensor[(2, 12, 5), float32] */;
    (%918,)
  };
  %919(%var_14508) /* ty=(Tensor[(2, 12, 5), float32],) */
}

def @func_10934() -> Tensor[(11, 8, 12), float32] {
  @func_10932() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7533(%var_7531: Tensor[(16, 7, 15), float32], %var_7532: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(1, 4, 4), float64], Tensor[(1, 16), float64], Tensor[(4, 8, 9), float64], Tensor[(288), float64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8]) {
  @func_7529(%var_7531, %var_7532) /* ty=(Tensor[(16, 7, 15), float32], Tensor[(1, 4, 4), float64], Tensor[(1, 16), float64], Tensor[(4, 8, 9), float64], Tensor[(288), float64], Tensor[(12, 15, 3), uint8], Tensor[(540), uint8]) */
}

def @func_13685() -> (Tensor[(11, 9, 4), uint8], Tensor[(12, 4, 14), float32]) {
  %925 = fn () -> (Tensor[(11, 9, 4), uint8], Tensor[(12, 4, 14), float32]) {
    %920 = @func_9969() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(5, 12, 14), float32]) */;
    %921 = @func_11499() /* ty=Tensor[(12, 4, 14), float64] */;
    %922 = cast(%921, dtype="float32") /* ty=Tensor[(12, 4, 14), float32] */;
    %923 = %920.1;
    %924 = sinh(%922) /* ty=Tensor[(12, 4, 14), float32] */;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(11, 9, 4), uint8], Tensor[(12, 4, 14), float32]) */
}

def @func_11182() -> (Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
  %931 = fn () -> (Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) {
    %926 = cast(meta[relay.Constant][83] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %927 = reshape(%926, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %928 = @func_7950(%927) /* ty=(Tensor[(11, 8, 12), bool], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */;
    %929 = @func_9176() /* ty=Tensor[(11, 8, 12), float64] */;
    %930 = %928.1;
    (%929, %930, meta[relay.Constant][83] /* ty=Tensor[(672), float64] */)
  };
  %931() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */
}

def @func_14494() -> (Tensor[(11, 8, 12), float32],) {
  %933 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %932 = @func_13514() /* ty=Tensor[(11, 8, 12), float32] */;
    (%932,)
  };
  %933() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_13817() -> Tensor[(11, 8, 12), float32] {
  @func_13815() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7779() -> Tensor[(11, 8, 12), float32] {
  %934 = fn () -> Tensor[(11, 8, 12), float32] {
    @func_6564() /* ty=Tensor[(11, 8, 12), float32] */
  };
  %934() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_6564() -> Tensor[(11, 8, 12), float32] {
  @func_6483() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_8863(%var_8860: float64, %var_8861: Tensor[(780), uint8], %var_8862: Tensor[(150, 14), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(1183), int16], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(12, 1, 1), uint8], float64, Tensor[(12), float64], Tensor[(5, 12, 14), uint32], Tensor[(840), int64], Tensor[(11, 8, 12), float32], Tensor[(135, 3), float32], Tensor[(9, 60), uint8], Tensor[(780), uint8], Tensor[(3, 135), float32], Tensor[(150, 14), float64]) {
  %977 = fn (%var_8795: float64, %var_8850: Tensor[(780), uint8], %var_8852: Tensor[(150, 14), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(1183), int16], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(12, 1, 1), uint8], float64, Tensor[(12), float64], Tensor[(5, 12, 14), uint32], Tensor[(840), int64], Tensor[(11, 8, 12), float32], Tensor[(135, 3), float32], Tensor[(9, 60), uint8], Tensor[(780), uint8], Tensor[(3, 135), float32], Tensor[(150, 14), float64]) {
    %935 = cast(meta[relay.Constant][84] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %936 = reshape(%935, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
    %937 = @func_1428(%936) /* ty=Tensor[(13, 7, 13), float64] */;
    %938 = cast(meta[relay.Constant][84] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%937, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %942 = cast(%937, dtype="int16") /* ty=Tensor[(13, 7, 13), int16] */;
    %943 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %944 = cast(meta[relay.Constant][84] /* ty=Tensor[(1183), float64] */, dtype="int16") /* ty=Tensor[(1183), int16] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?), int16] */;
    %946 = cast(meta[relay.Constant][85] /* ty=Tensor[(81), uint8] */, dtype="uint8") /* ty=Tensor[(81), uint8] */;
    %947 = cast(meta[relay.Constant][86] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
    %948 = reshape(%946, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), uint8] */;
    %949 = reshape(%947, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
    %950 = @func_5231(%948, %949) /* ty=(Tensor[(9, 3, 3), uint8], Tensor[(1430), int32]) */;
    %951 = cast(%var_8795, dtype="float64") /* ty=float64 */;
    %952 = cast(meta[relay.Constant][87] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %953 = reshape(%951, newshape=[]) /* ty=float64 */;
    %954 = reshape(%952, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
    %955 = @func_7418(%953, %954) /* ty=(Tensor[(12, 1, 1), float64], Tensor[(12, 1, 1), uint8]) */;
    %956 = cast(meta[relay.Constant][88] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %957 = reshape(%956, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int64] */;
    %958 = cast(meta[relay.Constant][89] /* ty=Tensor[(9, 60), uint8] */, dtype="uint8") /* ty=Tensor[(9, 60), uint8] */;
    %959 = cast(%var_8850, dtype="uint8") /* ty=Tensor[(780), uint8] */;
    %960 = bitwise_xor(%944, %945) /* ty=Tensor[(1183), int16] */;
    %961 = cast(%960, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %962 = cast(meta[relay.Constant][90] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
    %963 = cast(%var_8852, dtype="float64") /* ty=Tensor[(150, 14), float64] */;
    %964 = reshape(%958, newshape=[540]) /* ty=Tensor[(540), uint8] */;
    %965 = reshape(%959, newshape=[130, 6]) /* ty=Tensor[(130, 6), uint8] */;
    %966 = reshape(%961, newshape=[1, 1183]) /* ty=Tensor[(1, 1183), float64] */;
    %967 = reshape(%962, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
    %968 = reshape(%963, newshape=[15, 140]) /* ty=Tensor[(15, 140), float64] */;
    %969 = @func_7761(%964, %965, %966, %967, %968) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(260), float64], Tensor[(540), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(130, 6), uint8], Tensor[(13, 7, 13), float64], Tensor[(195), float64], Tensor[(1, 1183), float64], Tensor[(13, 14), float64], Tensor[(135, 3), float32], Tensor[(15, 140), float64], Tensor[(672), float64]) */;
    %970 = @func_8583() /* ty=Tensor[(11, 8, 12), float32] */;
    %971 = power(%940, %941) /* ty=Tensor[(13, 7, 13), float64] */;
    %972 = %950.1;
    %973 = %955.1;
    %974 = @func_5477(%957) /* ty=Tensor[(5, 12, 14), uint32] */;
    %975 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
    %976 = %969.11;
    (%970, %971, %960, %972, meta[relay.Constant][85] /* ty=Tensor[(81), uint8] */, meta[relay.Constant][86] /* ty=Tensor[(1430), int16] */, %973, %var_8795, meta[relay.Constant][87] /* ty=Tensor[(12), float64] */, %974, meta[relay.Constant][88] /* ty=Tensor[(840), int64] */, %975, %976, meta[relay.Constant][89] /* ty=Tensor[(9, 60), uint8] */, %var_8850, meta[relay.Constant][90] /* ty=Tensor[(3, 135), float32] */, %var_8852)
  };
  %977(%var_8860, %var_8861, %var_8862) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(13, 7, 13), float64], Tensor[(1183), int16], Tensor[(1430), int32], Tensor[(81), uint8], Tensor[(1430), int16], Tensor[(12, 1, 1), uint8], float64, Tensor[(12), float64], Tensor[(5, 12, 14), uint32], Tensor[(840), int64], Tensor[(11, 8, 12), float32], Tensor[(135, 3), float32], Tensor[(9, 60), uint8], Tensor[(780), uint8], Tensor[(3, 135), float32], Tensor[(150, 14), float64]) */
}

def @func_11067() -> Tensor[(11, 8, 12), float32] {
  %978 = @func_10648() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %978.0
}

def @func_1197(%var_1188: Tensor[(13, 6, 10), uint8]) -> (Tensor[(13, 6, 10), uint8],) {
  %979 = cast(%var_1188, dtype="uint8") /* ty=Tensor[(13, 6, 10), uint8] */;
  %980 = shape_of(meta[relay.Constant][91] /* ty=Tensor[(13, 6, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(meta[relay.Constant][91] /* ty=Tensor[(13, 6, 10), uint8] */, dtype="uint8") /* ty=Tensor[(13, 6, 10), uint8] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %983 = bitwise_and(%981, %982) /* ty=Tensor[(13, 6, 10), uint8] */;
  (%983,)
}

def @func_1587(%var_1586: Tensor[(11, 12, 1), float64]) -> Tensor[(11, 12, 1), float64] {
  %985 = fn (%var_1572: Tensor[(11, 12, 1), float64]) -> Tensor[(11, 12, 1), float64] {
    %984 = cast(%var_1572, dtype="float64") /* ty=Tensor[(11, 12, 1), float64] */;
    exp(%984) /* ty=Tensor[(11, 12, 1), float64] */
  };
  %985(%var_1586) /* ty=Tensor[(11, 12, 1), float64] */
}

def @func_11612(%var_11611: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) {
  %992 = fn (%var_11591: Tensor[(896), float64]) -> (Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) {
    %986 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %987 = cast(%var_11591, dtype="float64") /* ty=Tensor[(896), float64] */;
    %988 = reshape(%987, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
    %989 = @func_551(%988) /* ty=(Tensor[(4, 14, 16), float64],) */;
    %990 = %986.0;
    %991 = %989.0;
    (%990, %991, %var_11591)
  };
  %992(%var_11611) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(896), float64]) */
}

def @func_7300(%var_7269: Tensor[(396), uint8], %var_7279: Tensor[(156), int8], %var_7284: Tensor[(896), float64], %var_7293: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(1183), int32], Tensor[(1, 12, 13), float64], Tensor[(156), int8], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(11, 8, 12), uint64]) {
  %993 = cast(%var_7269, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %994 = reshape(%993, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), uint8] */;
  %995 = @func_3548(%994) /* ty=(Tensor[(11, 9, 4), uint8],) */;
  %996 = cast(meta[relay.Constant][92] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %997 = reshape(%996, newshape=[1183, 1]) /* ty=Tensor[(1183, 1), float64] */;
  %998 = @func_2228(%997) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */;
  %999 = %998.2;
  %1000 = cast(%999, dtype="int32") /* ty=Tensor[(1183, 1), int32] */;
  %1001 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1002 = cast(meta[relay.Constant][92] /* ty=Tensor[(1183), float64] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1004 = cast(%var_7279, dtype="int8") /* ty=Tensor[(156), int8] */;
  %1005 = reshape(%1004, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), int8] */;
  %1006 = @func_2192(%1005) /* ty=(Tensor[(1, 12, 13), bool], Tensor[(4, 14, 16), float64], Tensor[(896), float64], Tensor[(1, 12, 13), float64]) */;
  %1007 = cast(%var_7284, dtype="float64") /* ty=Tensor[(896), float64] */;
  %1008 = reshape(%1007, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
  %1009 = @func_551(%1008) /* ty=(Tensor[(4, 14, 16), float64],) */;
  %1010 = @func_6483() /* ty=Tensor[(11, 8, 12), float32] */;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
  %1012 = sin(%1011) /* ty=Tensor[(11, 8, 12), float32] */;
  %1013 = cast(%var_7293, dtype="uint64") /* ty=Tensor[(11, 8, 12), uint64] */;
  %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%1012, dtype="uint64") /* ty=Tensor[(11, 8, 12), uint64] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1017 = %995.0;
  %1018 = right_shift(%1002, %1003) /* ty=Tensor[(1183), int32] */;
  %1019 = %1006.3;
  %1020 = %1009.0;
  %1021 = add(%1015, %1016) /* ty=Tensor[(11, 8, 12), uint64] */;
  (%1017, %var_7269, %1018, %1019, %var_7279, %1020, %var_7284, %1021)
}

def @func_11069() -> Tensor[(11, 8, 12), float32] {
  @func_11067() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_14533() -> (Tensor[(11, 8, 12), float32],) {
  %1023 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %1022 = @func_13976() /* ty=Tensor[(11, 8, 12), float32] */;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_2230(%var_2229: Tensor[(1183, 1), float64]) -> (Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) {
  %1029 = fn (%var_2225: Tensor[(1183, 1), float64]) -> (Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) {
    %1024 = cast(meta[relay.Constant][93] /* ty=Tensor[(7, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 13), float32] */;
    %1025 = cast(%var_2225, dtype="float64") /* ty=Tensor[(1183, 1), float64] */;
    %1026 = reshape(%1025, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), float64] */;
    %1027 = tan(%1024) /* ty=Tensor[(7, 12, 13), float32] */;
    %1028 = @func_1428(%1026) /* ty=Tensor[(13, 7, 13), float64] */;
    (%1027, %1028, %var_2225)
  };
  %1029(%var_2229) /* ty=(Tensor[(7, 12, 13), float32], Tensor[(13, 7, 13), float64], Tensor[(1183, 1), float64]) */
}

def @func_9789() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) {
  %1030 = cast(meta[relay.Constant][94] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1031 = cast(meta[relay.Constant][94] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1032 = reshape(%1030, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %1033 = reshape(%1031, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), int16] */;
  %1034 = @func_619(%1032, %1033) /* ty=(Tensor[(11, 13, 10), bool],) */;
  %1035 = cast(meta[relay.Constant][95] /* ty=Tensor[(78, 2), int8] */, dtype="int8") /* ty=Tensor[(78, 2), int8] */;
  %1036 = reshape(%1035, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %1037 = @func_8633(%1036) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(896), float64], Tensor[(156), int8], Tensor[(11, 8, 12), uint64], Tensor[(396), uint8]) */;
  %1038 = @func_8334() /* ty=(Tensor[(11, 8, 12), float32],) */;
  %1039 = cast(meta[relay.Constant][96] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1040 = reshape(%1039, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float32] */;
  %1041 = @func_249(%1040) /* ty=(Tensor[(7, 9, 15), float32],) */;
  %1042 = cast(meta[relay.Constant][97] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1043 = cast(meta[relay.Constant][98] /* ty=Tensor[(100), uint16] */, dtype="uint16") /* ty=Tensor[(100), uint16] */;
  %1044 = reshape(%1042, newshape=[]) /* ty=uint16 */;
  %1045 = reshape(%1043, newshape=[2, 10, 5]) /* ty=Tensor[(2, 10, 5), uint16] */;
  %1046 = @func_7826(%1044, %1045) /* ty=(Tensor[(2, 10, 5), bool],) */;
  %1047 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
  %1048 = %1034.0;
  %1049 = %1037.3;
  %1050 = %1038.0;
  %1051 = %1041.0;
  %1052 = %1046.0;
  %1053 = @func_8021() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1047, %1048, meta[relay.Constant][94] /* ty=Tensor[(1430), int16] */, %1049, meta[relay.Constant][95] /* ty=Tensor[(78, 2), int8] */, %1050, %1051, meta[relay.Constant][96] /* ty=Tensor[(945), float32] */, %1052, meta[relay.Constant][97] /* ty=uint16 */, meta[relay.Constant][98] /* ty=Tensor[(100), uint16] */, %1053)
}

def @func_8023() -> Tensor[(11, 8, 12), float32] {
  @func_8021() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_5531(%var_5527: Tensor[(9, 5, 9), float32], %var_5528: Tensor[(9, 5, 9), float32], %var_5529: Tensor[(2100), float64], %var_5530: Tensor[(672), float64]) -> (Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) {
  %1075 = fn (%var_5491: Tensor[(9, 5, 9), float32], %var_5492: Tensor[(9, 5, 9), float32], %var_5500: Tensor[(2100), float64], %var_5512: Tensor[(672), float64]) -> (Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) {
    %1054 = cast(%var_5500, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %1055 = reshape(%1054, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
    %1056 = @func_2346(%1055) /* ty=(Tensor[(14, 15, 10), uint8], Tensor[(7, 9, 15), float32], Tensor[(945), float32]) */;
    %1057 = cast(%var_5512, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1058 = reshape(%1057, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
    %1059 = @func_1092(%1058) /* ty=(Tensor[(12, 4, 14), float64],) */;
    %1060 = cast(%var_5492, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
    %1061 = shape_of(%var_5491, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1062 = cast(%var_5491, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
    %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1064 = power(%1062, %1063) /* ty=Tensor[(9, 5, 9), float32] */;
    %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
    %1066 = cast(meta[relay.Constant][99] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1067 = cast(meta[relay.Constant][100] /* ty=Tensor[(13, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
    %1068 = reshape(%1066, newshape=[10, 2, 13]) /* ty=Tensor[(10, 2, 13), float64] */;
    %1069 = reshape(%1067, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %1070 = @func_987(%1068, %1069) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(1, 13, 14), bool], float64, Tensor[(182), float64]) */;
    %1071 = %1056.2;
    %1072 = %1059.0;
    %1073 = tan(%1065) /* ty=Tensor[(9, 5, 9), float64] */;
    %1074 = %1070.1;
    (%1071, %var_5500, %1072, %var_5512, %1073, %1074, meta[relay.Constant][99] /* ty=Tensor[(260), float64] */, meta[relay.Constant][100] /* ty=Tensor[(13, 14), float64] */)
  };
  %1075(%var_5527, %var_5528, %var_5529, %var_5530) /* ty=(Tensor[(945), float32], Tensor[(2100), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13, 14), bool], Tensor[(260), float64], Tensor[(13, 14), float64]) */
}

def @func_11313(%var_11297: Tensor[(13, 14), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) {
  %1076 = @func_11181() /* ty=(Tensor[(11, 8, 12), float64], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
  %1077 = cast(%var_11297, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
  %1078 = cast(meta[relay.Constant][101] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %1079 = reshape(%1077, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %1080 = reshape(%1078, newshape=[780]) /* ty=Tensor[(780), uint8] */;
  %1081 = @func_7592(%1079, %1080) /* ty=(Tensor[(11, 8, 12), float32], Tensor[(396), uint8], Tensor[(54, 10), uint8], Tensor[(260), float64], Tensor[(182), float64], Tensor[(780), uint8]) */;
  %1082 = cast(meta[relay.Constant][102] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1083 = reshape(%1082, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %1084 = @func_322(%1083) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(945), float32], Tensor[(7, 9, 15), float32]) */;
  %1085 = %1076.0;
  %1086 = %1081.0;
  %1087 = @func_10029() /* ty=Tensor[(945), float32] */;
  %1088 = %1084.1;
  (%1085, %1086, %var_11297, meta[relay.Constant][101] /* ty=Tensor[(780), uint8] */, %1087, %1088, meta[relay.Constant][102] /* ty=Tensor[(288), float64] */)
}

def @func_10767() -> (Tensor[(11, 8, 12), float32],) {
  %1089 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
  (%1089,)
}

def @func_11846() -> (Tensor[(11, 8, 12), float32],) {
  @func_11844() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_14080() -> (Tensor[(12, 4, 14), float64],) {
  %1090 = @func_11499() /* ty=Tensor[(12, 4, 14), float64] */;
  (%1090,)
}

def @func_13365() -> (Tensor[(11, 8, 12), float32],) {
  %1092 = fn () -> (Tensor[(11, 8, 12), float32],) {
    %1091 = @func_6575() /* ty=Tensor[(11, 8, 12), float32] */;
    (%1091,)
  };
  %1092() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_13093() -> (Tensor[(5, 11, 15), uint8], Tensor[(11, 8, 12), float32]) {
  @func_13091() /* ty=(Tensor[(5, 11, 15), uint8], Tensor[(11, 8, 12), float32]) */
}

def @func_13761() -> (Tensor[(11, 8, 12), float32],) {
  @func_13759() /* ty=(Tensor[(11, 8, 12), float32],) */
}

def @func_10030() -> Tensor[(945), float32] {
  %1094 = fn () -> Tensor[(945), float32] {
    %1093 = @func_9789() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 13, 10), bool], Tensor[(1430), int16], Tensor[(11, 8, 12), uint64], Tensor[(78, 2), int8], Tensor[(11, 8, 12), float32], Tensor[(7, 9, 15), float32], Tensor[(945), float32], Tensor[(2, 10, 5), bool], uint16, Tensor[(100), uint16], Tensor[(11, 8, 12), float32]) */;
    %1093.7
  };
  %1094() /* ty=Tensor[(945), float32] */
}

def @func_11017() -> Tensor[(11, 8, 12), float32] {
  @func_11015() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_7684(%var_7669: Tensor[(11, 8, 12), float32]) -> (Tensor[(11, 8, 12), uint16],) {
  %1095 = @func_7140() /* ty=Tensor[(11, 8, 12), float32] */;
  %1096 = cast(%var_7669, dtype="uint16") /* ty=Tensor[(11, 8, 12), uint16] */;
  %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(%1095, dtype="uint16") /* ty=Tensor[(11, 8, 12), uint16] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1100 = right_shift(%1098, %1099) /* ty=Tensor[(11, 8, 12), uint16] */;
  (%1100,)
}

def @func_7140() -> Tensor[(11, 8, 12), float32] {
  @func_6575() /* ty=Tensor[(11, 8, 12), float32] */
}

def @func_10702() -> (Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) {
  %1109 = fn () -> (Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) {
    %1101 = @func_10208() /* ty=Tensor[(672), float64] */;
    %1102 = cast(%1101, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1103 = reshape(%1102, newshape=[12, 4, 14]) /* ty=Tensor[(12, 4, 14), float64] */;
    %1104 = @func_1092(%1103) /* ty=(Tensor[(12, 4, 14), float64],) */;
    %1105 = %1104.0;
    %1106 = cast(%1105, dtype="float64") /* ty=Tensor[(12, 4, 14), float64] */;
    %1107 = @func_10029() /* ty=Tensor[(945), float32] */;
    %1108 = acos(%1106) /* ty=Tensor[(12, 4, 14), float64] */;
    (%1101, %1107, %1108)
  };
  %1109() /* ty=(Tensor[(672), float64], Tensor[(945), float32], Tensor[(12, 4, 14), float64]) */
}

def @func_11316(%var_11314: Tensor[(13, 14), float64]) -> (Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) {
  @func_11313(%var_11314) /* ty=(Tensor[(11, 8, 12), float64], Tensor[(11, 8, 12), float32], Tensor[(13, 14), float64], Tensor[(780), uint8], Tensor[(945), float32], Tensor[(945), float32], Tensor[(288), float64]) */
}

def @func_11832(%var_11830: Tensor[(15, 12, 5), float64], %var_11831: Tensor[(396), uint8]) -> (Tensor[(15, 12, 5), float64], Tensor[(896), float64], Tensor[(15, 12, 5), bool], Tensor[(4, 14, 16), bool], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), uint16], Tensor[(396), uint8], Tensor[(672), float64]) {
  %1145 = fn (%var_11685: Tensor[(15, 12, 5), float64], %var_11826: Tensor[(396), uint8]) -> (Tensor[(15, 12, 5), float64], Tensor[(896), float64], Tensor[(15, 12, 5), bool], Tensor[(4, 14, 16), bool], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), uint16], Tensor[(396), uint8], Tensor[(672), float64]) {
    %1110 = cast(%var_11685, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
    %1111 = shape_of(meta[relay.Constant][103] /* ty=Tensor[(15, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1112 = cast(meta[relay.Constant][103] /* ty=Tensor[(15, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
    %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1114 = cast(meta[relay.Constant][103] /* ty=Tensor[(15, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(15, 12, 5), bool] */;
    %1115 = shape_of(%var_11685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1116 = cast(%var_11685, dtype="bool") /* ty=Tensor[(15, 12, 5), bool] */;
    %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1118 = cast(meta[relay.Constant][104] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
    %1119 = reshape(%1118, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), float64] */;
    %1120 = @func_551(%1119) /* ty=(Tensor[(4, 14, 16), float64],) */;
    %1121 = %1120.0;
    %1122 = cast(%1121, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
    %1123 = sigmoid(%1122) /* ty=Tensor[(4, 14, 16), float64] */;
    %1124 = cast(%1123, dtype="float32") /* ty=Tensor[(4, 14, 16), float32] */;
    %1125 = rsqrt(%1124) /* ty=Tensor[(4, 14, 16), float32] */;
    %1126 = cast(%1123, dtype="bool") /* ty=Tensor[(4, 14, 16), bool] */;
    %1127 = shape_of(%1125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1128 = cast(%1125, dtype="bool") /* ty=Tensor[(4, 14, 16), bool] */;
    %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1130 = cast(%1125, dtype="float64") /* ty=Tensor[(4, 14, 16), float64] */;
    %1131 = @func_7010() /* ty=Tensor[(11, 8, 12), float32] */;
    %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(11, 8, 12), float32] */;
    %1133 = cast(%var_11826, dtype="uint8") /* ty=Tensor[(396), uint8] */;
    %1134 = cast(meta[relay.Constant][105] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1135 = reshape(%1132, newshape=[11, 8, 12]) /* ty=Tensor[(11, 8, 12), float32] */;
    %1136 = reshape(%1133, newshape=[396]) /* ty=Tensor[(396), uint8] */;
    %1137 = reshape(%1134, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %1138 = @func_9243(%1135, %1136, %1137) /* ty=(Tensor[(11, 8, 12), int64], Tensor[(11, 9, 4), uint8], Tensor[(396), uint8], Tensor[(11, 8, 12), uint16], Tensor[(12, 4, 14), float64], Tensor[(672), float64]) */;
    %1139 = divide(%1112, %1113) /* ty=Tensor[(15, 12, 5), float64] */;
    %1140 = less_equal(%1116, %1117) /* ty=Tensor[(15, 12, 5), bool] */;
    %1141 = not_equal(%1128, %1129) /* ty=Tensor[(4, 14, 16), bool] */;
    %1142 = @func_7778() /* ty=Tensor[(11, 8, 12), float32] */;
    %1143 = sinh(%1130) /* ty=Tensor[(4, 14, 16), float64] */;
    %1144 = %1138.3;
    (%1139, meta[relay.Constant][104] /* ty=Tensor[(896), float64] */, %1140, %1141, %1142, %1143, %1131, %1144, %var_11826, meta[relay.Constant][105] /* ty=Tensor[(672), float64] */)
  };
  %1145(%var_11830, %var_11831) /* ty=(Tensor[(15, 12, 5), float64], Tensor[(896), float64], Tensor[(15, 12, 5), bool], Tensor[(4, 14, 16), bool], Tensor[(11, 8, 12), float32], Tensor[(4, 14, 16), float64], Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), uint16], Tensor[(396), uint8], Tensor[(672), float64]) */
}

def @func_12626() -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
  %1150 = fn () -> (Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) {
    %1146 = @func_10767() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %1147 = @func_12517() /* ty=(Tensor[(11, 8, 12), float32],) */;
    %1148 = %1146.0;
    %1149 = %1147.0;
    (%1148, %1149)
  };
  %1150() /* ty=(Tensor[(11, 8, 12), float32], Tensor[(11, 8, 12), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

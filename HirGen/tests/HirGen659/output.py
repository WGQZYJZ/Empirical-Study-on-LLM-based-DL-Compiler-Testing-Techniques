import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_617 = relay.var("var_617", dtype = "float32", shape = (15, 9, 7))#candidate|617|(15, 9, 7)|var|float32
uop_618 = relay.tan(var_617.astype('float32')) # shape=(15, 9, 7)
bop_636 = relay.less(var_617.astype('bool'), relay.reshape(uop_618.astype('bool'), relay.shape_of(var_617))) # shape=(15, 9, 7)
const_639 = relay.const([[[False,True,True,True,False,False,True],[True,True,False,False,True,True,False],[True,False,False,False,True,True,True],[False,False,False,False,True,False,False],[False,True,False,False,True,True,True],[True,True,True,False,True,True,True],[False,False,True,True,False,True,True],[True,False,False,False,True,False,False],[False,False,False,False,True,False,False]],[[False,True,True,True,True,False,False],[False,True,True,False,False,False,True],[False,True,False,False,False,False,False],[True,False,False,True,False,False,True],[True,False,True,False,True,False,True],[False,True,True,False,False,False,False],[False,False,True,True,False,True,True],[False,True,True,True,True,True,False],[True,True,True,True,True,False,True]],[[False,False,False,True,True,False,True],[False,False,False,False,True,True,True],[True,True,False,True,False,True,False],[False,False,False,True,True,True,False],[False,True,True,True,True,False,False],[True,False,True,True,False,True,True],[True,True,True,False,False,True,True],[False,True,True,False,True,True,False],[True,False,False,True,True,False,False]],[[True,False,False,False,False,False,True],[False,True,False,False,False,True,False],[False,True,False,True,False,True,True],[True,True,True,False,True,False,False],[True,False,False,False,False,True,False],[False,True,True,False,False,True,False],[True,True,True,True,False,True,False],[False,False,False,True,True,True,False],[True,True,False,False,True,False,False]],[[True,True,False,True,False,True,False],[True,False,False,False,True,True,True],[True,False,False,True,True,False,True],[False,True,True,True,True,True,True],[False,True,True,False,True,True,True],[True,False,True,False,True,False,False],[False,True,False,False,False,False,True],[True,False,False,True,True,True,True],[False,False,False,True,False,False,True]],[[True,True,False,False,False,False,True],[True,False,True,True,True,True,True],[True,True,True,False,True,True,False],[True,True,True,True,True,True,False],[True,True,True,False,True,False,True],[True,False,False,False,False,True,True],[True,True,True,True,False,False,True],[False,True,True,True,False,False,False],[False,False,True,True,True,False,False]],[[False,False,True,True,False,True,True],[False,False,True,False,True,False,True],[False,False,False,False,True,False,True],[False,False,True,False,False,False,True],[False,True,True,False,True,False,False],[False,True,True,False,False,False,False],[True,False,True,True,False,False,True],[False,False,False,False,False,False,False],[True,False,True,True,True,True,True]],[[True,True,True,True,True,True,True],[True,True,False,False,False,True,False],[False,True,True,False,True,False,False],[False,False,False,True,False,False,False],[False,True,True,True,False,True,False],[True,False,True,False,True,True,True],[True,True,True,False,False,False,False],[False,False,True,False,False,True,True],[True,True,True,True,False,False,False]],[[True,True,False,False,True,True,True],[True,True,False,False,False,True,False],[False,True,True,False,False,False,False],[False,True,True,True,True,False,False],[True,True,False,False,False,False,True],[False,False,False,True,True,False,True],[True,True,False,True,False,True,False],[False,True,False,True,False,False,False],[True,False,True,True,True,True,True]],[[False,False,False,False,False,False,True],[True,False,False,False,True,False,True],[False,True,True,False,False,False,True],[True,False,False,False,False,True,True],[False,False,True,False,False,True,False],[False,False,True,True,False,True,True],[False,False,True,False,True,False,False],[False,False,False,True,False,False,True],[True,True,True,True,True,False,True]],[[False,True,True,False,True,False,False],[False,True,True,False,True,False,False],[True,True,False,True,True,False,False],[False,False,True,True,True,False,False],[True,False,True,True,False,False,True],[True,False,True,True,True,True,True],[True,True,True,False,False,False,True],[False,False,True,False,True,False,True],[False,True,True,True,True,False,False]],[[True,False,False,True,False,True,False],[True,False,False,False,False,True,False],[False,True,True,False,False,False,False],[True,True,True,True,False,False,True],[True,False,True,True,False,True,False],[False,True,False,False,True,False,False],[True,False,True,False,True,False,False],[True,True,True,False,False,False,False],[False,True,True,True,True,False,False]],[[False,False,False,False,True,True,False],[False,True,True,False,True,False,False],[True,False,False,False,True,True,True],[True,False,True,True,True,False,True],[False,False,True,False,False,False,True],[True,True,True,False,False,False,False],[False,False,False,True,True,False,True],[False,False,False,False,False,True,True],[True,True,False,True,False,False,False]],[[False,False,True,False,True,False,False],[True,True,False,True,True,False,False],[False,False,False,True,False,False,True],[False,False,False,True,True,True,True],[True,True,True,False,True,False,False],[False,False,False,True,True,False,True],[True,False,True,True,False,True,False],[True,False,True,True,False,False,True],[True,True,False,True,False,True,True]],[[True,True,True,True,True,True,False],[True,True,True,False,True,True,True],[True,False,False,False,False,True,False],[False,True,True,False,False,True,True],[False,False,False,True,True,True,False],[False,False,True,True,True,False,True],[False,True,True,True,False,True,False],[False,False,False,True,False,True,True],[False,False,False,True,False,False,False]]], dtype = "bool")#candidate|639|(15, 9, 7)|const|bool
bop_640 = relay.divide(bop_636.astype('float64'), relay.reshape(const_639.astype('float64'), relay.shape_of(bop_636))) # shape=(15, 9, 7)
output = relay.Tuple([bop_640,])
output2 = relay.Tuple([bop_640,])
func_709 = relay.Function([var_617,], output)
mod['func_709'] = func_709
mod = relay.transform.InferType()(mod)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_710 = relay.var("var_710", dtype = "float32", shape = (15, 9, 7))#candidate|710|(15, 9, 7)|var|float32
func_709_call = mutated_mod.get_global_var('func_709')
call_711 = func_709_call(var_710)
output = call_711
func_712 = relay.Function([var_710], output)
mutated_mod['func_712'] = func_712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_917 = relay.var("var_917", dtype = "int64", shape = (1, 2, 7))#candidate|917|(1, 2, 7)|var|int64
var_918 = relay.var("var_918", dtype = "int64", shape = (1, 2, 7))#candidate|918|(1, 2, 7)|var|int64
bop_919 = relay.less_equal(var_917.astype('bool'), relay.reshape(var_918.astype('bool'), relay.shape_of(var_917))) # shape=(1, 2, 7)
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
var_941 = relay.var("var_941", dtype = "float32", shape = (945,))#candidate|941|(945,)|var|float32
call_940 = relay.TupleGetItem(func_709_call(relay.reshape(var_941.astype('float32'), [15, 9, 7])), 0)
call_942 = relay.TupleGetItem(func_712_call(relay.reshape(var_941.astype('float32'), [15, 9, 7])), 0)
output = relay.Tuple([bop_919,call_940,var_941,])
output2 = relay.Tuple([bop_919,call_942,var_941,])
func_943 = relay.Function([var_917,var_918,var_941,], output)
mod['func_943'] = func_943
mod = relay.transform.InferType()(mod)
var_944 = relay.var("var_944", dtype = "int64", shape = (1, 2, 7))#candidate|944|(1, 2, 7)|var|int64
var_945 = relay.var("var_945", dtype = "int64", shape = (1, 2, 7))#candidate|945|(1, 2, 7)|var|int64
var_946 = relay.var("var_946", dtype = "float32", shape = (945,))#candidate|946|(945,)|var|float32
output = func_943(var_944,var_945,var_946,)
func_947 = relay.Function([var_944,var_945,var_946,], output)
mutated_mod['func_947'] = func_947
mutated_mod = relay.transform.InferType()(mutated_mod)
const_961 = relay.const([[[-10,-6,-10,-6,-8,-4,6,4,-10,5,-8,4,2,8,-7,-1],[-1,-1,-10,1,-2,6,10,-1,9,-4,2,10,9,9,-10,-5],[7,-2,-3,-7,-6,2,-5,10,8,10,1,-3,9,10,-2,10],[1,4,-5,-8,6,-8,-4,6,2,1,7,8,5,7,3,5],[-1,9,-4,4,-8,2,3,-3,3,10,7,7,-4,-1,4,-2],[-9,-9,-7,-2,7,6,-1,7,-2,-5,5,-4,8,5,-1,5],[7,2,8,8,7,7,2,3,1,6,2,4,-3,-10,-7,4],[-10,5,-10,5,-6,5,-8,-3,-6,4,6,8,6,-4,6,6]],[[-6,-5,-5,-2,-5,-8,-5,2,1,3,-4,7,-10,5,-2,-1],[-6,-5,-9,2,5,-8,3,4,-8,1,8,3,10,-4,-1,-1],[3,7,-2,-5,9,9,-3,-3,-2,2,2,-9,-3,5,10,-2],[1,-3,6,-1,-1,-4,3,-3,4,4,1,8,-8,10,10,-9],[9,5,-9,-10,-9,5,4,7,-5,3,8,-2,6,-2,-3,-9],[-4,10,3,4,-6,3,6,9,-5,-7,-4,7,10,6,2,-8],[10,-10,9,4,-2,7,-9,9,-7,-4,7,2,-3,-1,-4,9],[-4,-8,2,8,10,-2,-10,-2,-9,-9,-10,-4,-1,-7,-1,-8]],[[9,7,7,5,-1,-6,-10,-9,7,-5,-10,3,3,6,-10,8],[2,9,3,9,-1,-6,-5,1,-4,2,-7,-9,5,-4,-2,2],[-10,-5,7,8,9,10,-10,8,9,-9,-3,7,-4,2,-5,-1],[-5,9,-2,-9,-2,7,-10,-5,-2,-5,3,-4,-5,6,-9,7],[5,6,-3,-8,-4,7,7,4,6,-8,-1,9,-7,6,-2,-1],[-8,-2,-2,8,-5,-1,-6,-6,4,3,-4,-1,-7,-8,1,4],[6,10,8,5,2,-10,3,-1,9,2,8,8,-2,2,6,3],[-4,2,-3,-9,-7,3,6,6,-2,1,-4,5,5,-9,5,-5]],[[-5,5,5,2,3,-1,3,-6,-6,5,6,-5,-7,-2,-6,-3],[3,8,-2,-2,-10,-5,10,10,-8,7,-6,5,-7,-6,-3,4],[7,-5,-4,3,10,9,-9,8,-3,-9,7,2,10,-9,-9,10],[6,-4,-4,6,-6,4,3,3,4,3,-6,5,5,3,-6,-9],[-10,-5,-3,-6,6,-4,-1,5,1,-7,4,-4,-8,2,-10,8],[-7,4,-4,1,-2,10,-4,-7,2,-1,-7,-7,2,9,-4,3],[10,3,10,5,-9,-5,8,7,5,-10,2,9,9,-9,-5,-4],[2,10,-1,3,-7,-4,-10,9,-8,-2,-6,-6,9,8,6,8]],[[1,-1,2,-4,-2,-6,-1,2,5,8,4,-6,9,-6,10,-4],[-3,-5,9,-4,2,-7,-6,-10,2,-2,-4,-7,6,8,7,-9],[7,5,-5,-8,10,10,2,-7,-8,1,9,4,1,-1,4,-1],[4,-8,3,-8,9,9,5,-8,-6,6,-8,1,2,2,-2,10],[6,-6,2,-4,-9,-6,10,9,4,-1,6,6,4,8,10,3],[-6,7,-1,10,-5,-6,10,-2,1,-9,-7,-8,2,8,-6,9],[8,-1,-8,-10,-7,9,2,-2,-5,1,-7,-3,-7,-2,-2,6],[-7,-10,5,-10,-6,10,10,-2,-4,-9,4,-1,-4,7,-3,7]],[[-7,7,-9,-6,5,7,-9,-2,-4,3,2,-10,-6,4,9,1],[10,-9,4,8,-3,-7,-3,-5,-2,4,2,-2,-2,-8,-8,8],[7,-1,-3,4,-3,8,2,5,-2,7,5,-2,4,10,1,3],[5,10,-4,-6,5,-5,7,-8,10,-3,-3,-4,7,2,-3,-5],[-1,-8,7,-4,-10,-7,8,6,-1,3,-5,4,2,-9,2,-3],[7,8,7,-6,10,4,1,5,8,-7,-6,5,6,5,8,-1],[-3,-10,-10,7,-4,-9,8,6,-4,9,3,-10,-9,-6,-6,3],[7,-10,-4,8,-6,2,1,-2,-2,-6,6,-3,-4,-4,-8,-10]],[[2,2,6,3,-9,10,2,4,2,8,-6,4,2,10,5,-4],[1,3,10,-3,-1,-6,2,5,-1,-3,4,9,-5,7,-1,7],[1,-1,-7,7,-5,1,6,-3,-10,4,-6,-1,1,1,3,6],[-1,4,-9,-8,-5,-4,-6,7,-7,-2,-3,-4,-3,8,4,-9],[-9,4,3,6,2,8,-9,4,6,-9,-8,-3,7,-6,-5,7],[-5,4,5,-7,-10,-3,-10,6,-2,6,5,1,-3,4,-2,-2],[2,-5,7,-1,7,-7,2,4,6,6,-1,5,5,-4,8,4],[-3,6,10,-7,3,5,-5,1,-1,5,3,-8,9,5,-9,9]],[[5,1,5,4,2,-5,-10,-10,-5,-5,-7,7,6,-3,-1,6],[-8,-3,5,-4,7,-3,8,-8,-2,-1,7,-5,2,-5,-10,8],[7,4,-1,8,8,4,9,-6,4,-10,-7,-3,2,-1,10,4],[-5,9,5,-3,-1,6,1,-10,3,-8,-4,-9,-1,-1,-4,-8],[3,2,-7,8,3,7,-10,-1,-9,-3,-9,9,5,-1,-7,5],[-6,-6,5,10,-2,4,-6,-4,5,5,-10,-6,-8,-3,5,5],[-6,-4,-6,8,1,-9,8,-1,-1,-7,-5,-5,7,8,-5,-3],[3,-3,-2,-9,5,-2,-3,4,-1,4,-3,7,-6,-3,-7,3]]], dtype = "uint16")#candidate|961|(8, 8, 16)|const|uint16
var_962 = relay.var("var_962", dtype = "uint16", shape = (8, 8, 16))#candidate|962|(8, 8, 16)|var|uint16
bop_963 = relay.less_equal(const_961.astype('bool'), relay.reshape(var_962.astype('bool'), relay.shape_of(const_961))) # shape=(8, 8, 16)
output = bop_963
output2 = bop_963
func_966 = relay.Function([var_962,], output)
mod['func_966'] = func_966
mod = relay.transform.InferType()(mod)
mutated_mod['func_966'] = func_966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_967 = relay.var("var_967", dtype = "uint16", shape = (8, 8, 16))#candidate|967|(8, 8, 16)|var|uint16
func_966_call = mutated_mod.get_global_var('func_966')
call_968 = func_966_call(var_967)
output = call_968
func_969 = relay.Function([var_967], output)
mutated_mod['func_969'] = func_969
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1296 = relay.const([[[2.513744,7.106998,-7.214518,-0.540987,-7.870313],[-3.046489,-7.640875,-5.623723,-8.742416,3.623745],[2.626099,-0.590456,3.106253,8.985423,-9.977371],[-0.314364,-9.797468,9.597818,-2.770850,-0.183353],[0.257431,6.743750,0.336985,4.737010,-5.683322],[-6.642265,2.617458,-1.095459,-3.878967,2.344246],[0.161180,8.461225,6.534092,-4.522828,-9.743337],[-6.860104,-5.233412,4.192130,3.399333,0.417702],[9.462303,0.158602,-6.031702,-7.477728,-3.424832]],[[1.786597,8.700925,5.313387,3.193589,2.438069],[-7.330212,3.925446,1.460596,-0.398995,-2.549878],[-8.652948,8.571144,-4.717716,-3.170954,2.349428],[-9.925107,-5.594819,6.704437,-8.279695,3.770643],[-9.848653,6.212257,-9.277133,3.072879,-7.485021],[-9.535528,0.867293,-9.548570,2.413692,-7.915904],[1.942374,0.797627,9.761292,3.761161,5.996268],[0.673270,1.497591,-3.695329,0.850957,-5.670730],[8.539133,-8.468143,9.482562,-5.980765,8.819839]],[[3.208069,9.865365,-1.220879,6.710798,-1.874725],[4.537526,-4.880390,-6.343581,-4.049202,-3.933513],[4.467296,-3.803567,8.966816,9.334136,-6.872426],[-4.184448,2.163809,2.468127,-5.598579,-0.820857],[6.424182,-5.962659,-3.372573,-6.247542,-8.561498],[9.012264,-9.652514,-8.291491,8.331437,9.895317],[-3.451113,7.354658,8.129395,-6.343667,2.035600],[-7.600082,-8.823146,6.657611,-9.820937,1.660029],[-7.567451,-1.060817,-5.460203,-5.821628,-2.674162]],[[-8.829234,-1.621759,0.126106,-5.315623,1.505754],[-7.090068,-7.604429,4.056796,0.846102,-4.642068],[-7.293437,8.797883,7.225539,7.967973,-0.851917],[-4.765984,6.133458,-0.331174,-8.066498,-3.442236],[3.074615,-9.743516,0.585414,6.410018,5.777082],[8.158172,-8.870825,-8.158745,7.590026,-3.854998],[-0.017789,-0.576015,6.535491,-7.925560,3.986948],[1.604070,2.977502,-6.246969,0.331403,7.764259],[7.480210,5.960500,6.576071,-2.070484,7.801746]],[[-7.053224,2.638667,8.136538,-6.518301,-9.679320],[-0.528333,-0.642397,9.013592,-5.364133,-2.696850],[7.203506,4.698874,5.871308,7.290042,7.000986],[-8.734923,-7.945478,-7.619976,-1.621956,8.768724],[-5.562254,2.667734,3.569077,6.012223,6.755090],[0.650966,-5.715307,8.229717,0.451679,9.208183],[-1.804546,3.604357,8.222361,-4.485991,-8.661164],[-5.059603,-8.513912,5.297944,3.268812,5.852773],[-3.470364,0.910185,7.085918,-2.525165,6.575762]],[[1.696486,-0.795987,-5.380577,-4.575217,4.113333],[-2.653358,9.475512,0.789627,-7.224932,-2.120082],[-2.499300,-2.233111,6.179653,-2.083908,7.869755],[1.383221,8.107448,8.860192,9.162813,7.236433],[-8.692014,-4.280635,-5.103448,-9.095554,-7.468310],[-9.048320,0.809942,7.815615,0.848663,-6.426345],[4.648226,0.974253,7.046174,6.270278,8.988149],[-4.318249,-1.233101,3.353108,-0.098401,-4.663701],[-1.485859,7.191093,9.022186,-7.055361,3.384429]],[[8.902723,-1.947013,3.100790,3.781108,-5.444770],[6.252565,-9.502117,-3.913339,-5.554172,5.346356],[6.797167,-0.443754,2.079104,3.676182,-4.022660],[7.003207,-0.828892,-1.146740,7.759629,-0.484157],[-1.115775,-1.090855,0.883433,9.736164,-5.793339],[-5.325433,-9.723696,-3.576768,6.126624,-5.083216],[-6.712061,3.384969,2.866346,0.736568,-2.735531],[2.990218,6.356682,2.199349,-8.765910,8.260512],[-6.928399,-0.410872,-1.812858,-7.110202,9.179858]]], dtype = "float32")#candidate|1296|(7, 9, 5)|const|float32
const_1297 = relay.const([[[-4.903179,-8.411239,-3.630935,9.154630,9.136686],[-3.041006,-9.712562,2.043008,-8.077315,5.822886],[1.403626,6.446098,7.346302,9.639276,-1.771028],[-2.879176,6.464651,8.737185,-3.489907,-1.835900],[3.337338,8.496107,1.369644,-1.658568,6.514460],[-9.679870,6.328744,-0.392765,4.900934,2.899119],[-1.583216,6.200100,-7.138884,5.117453,3.053822],[-1.344852,-8.110807,-4.401627,8.589625,4.167361],[5.531078,9.247929,-2.538676,1.556587,4.954081]],[[7.968551,-0.438761,0.409051,9.437991,-1.999795],[1.234275,0.573333,-5.607575,0.278474,-0.853095],[-9.702808,-9.058555,9.257432,2.262827,-0.913747],[8.770398,-5.124651,-3.095590,5.799797,-1.305077],[-1.976241,-0.531336,-7.474598,-9.688678,-4.229865],[-0.790668,-6.379232,-3.161093,0.464644,-1.174260],[-3.065554,-2.749598,8.108952,1.379520,-1.264352],[-5.643831,7.024964,3.797362,6.327757,8.388302],[-4.920715,-4.950896,-5.841943,-3.417555,-7.416756]],[[2.260142,2.497875,8.573318,4.571922,8.561190],[8.191877,-4.742653,-9.216442,-6.417710,0.718965],[-3.402487,3.372405,-4.676704,1.111885,-0.102352],[9.309347,8.571117,9.664800,-3.195791,9.787807],[-3.222100,8.277024,8.544337,-7.243596,-0.938264],[4.165733,-6.131996,2.915176,-6.104629,1.637069],[5.699434,-6.655312,4.382698,5.359873,-5.967801],[7.707724,2.988510,-9.806662,3.348959,-9.674275],[-5.078525,-9.942721,9.261306,-0.857323,-7.955651]],[[-9.556705,-3.576329,-8.557982,-0.397478,1.989700],[-6.551999,5.753939,-0.847301,-2.589663,0.407702],[2.818832,-5.244879,-0.655191,4.987318,3.479587],[-9.651233,2.367831,6.882511,2.801089,-8.925938],[-6.416113,4.054423,-1.171335,1.882182,7.908426],[-6.401577,3.029215,-5.218167,-2.258553,-1.872481],[-2.649087,3.253381,6.657051,2.000061,-1.283411],[-7.313155,2.894246,-0.110972,9.068826,-8.381105],[-2.361116,7.651733,-4.274821,1.353467,6.678395]],[[-4.469767,1.331285,-6.728765,-3.001757,7.216212],[1.731906,-6.441028,6.197323,-4.243183,-7.041522],[-4.661329,4.717484,-1.432197,4.467012,-3.785026],[6.785794,-7.218516,-7.533484,-6.860267,8.678718],[3.191738,7.056843,9.866183,3.509796,9.897194],[-2.036455,-7.917692,9.329230,2.689597,7.597560],[4.843557,5.887765,0.672863,-7.675883,-5.967932],[8.713074,-6.766479,1.208039,5.135968,-4.550823],[2.759532,-3.289977,-3.731984,-0.697148,7.373631]],[[-4.817038,3.271287,-3.124956,9.577592,-5.243695],[-3.965735,-9.223920,-1.476988,-2.651987,-7.284978],[-7.095918,-9.994319,0.207779,-7.678980,-7.858064],[4.410848,-2.895117,-0.224397,5.449279,-5.875998],[-5.097989,8.142236,8.678335,-8.725955,-3.624923],[-6.645730,-8.214421,6.403128,-8.274725,-0.419935],[6.909888,7.768109,-7.913718,1.141925,9.089016],[7.706240,-4.676261,-0.164650,-2.806416,-1.811927],[2.903403,3.604988,5.772909,-4.478451,-6.047469]],[[-4.587548,-9.747429,8.313028,-2.964016,7.901906],[-5.973357,1.796871,6.662541,2.306275,-6.667297],[-6.770007,-2.620976,-9.728154,4.522533,4.268060],[4.838786,8.138857,3.242792,-0.505107,5.534708],[-0.170323,-8.174234,2.026604,9.490103,8.290637],[-6.459668,-7.777237,4.624942,-8.481793,0.996814],[-8.728876,1.901457,-6.909289,-9.053894,-1.444280],[-9.388502,-5.249696,-7.540045,3.155193,-3.108153],[-3.097351,-8.192590,6.949395,0.064264,-9.463430]]], dtype = "float32")#candidate|1297|(7, 9, 5)|const|float32
bop_1298 = relay.floor_divide(const_1296.astype('float32'), relay.reshape(const_1297.astype('float32'), relay.shape_of(const_1296))) # shape=(7, 9, 5)
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
var_1314 = relay.var("var_1314", dtype = "float32", shape = (945,))#candidate|1314|(945,)|var|float32
call_1313 = relay.TupleGetItem(func_709_call(relay.reshape(var_1314.astype('float32'), [15, 9, 7])), 0)
call_1315 = relay.TupleGetItem(func_712_call(relay.reshape(var_1314.astype('float32'), [15, 9, 7])), 0)
output = relay.Tuple([bop_1298,call_1313,var_1314,])
output2 = relay.Tuple([bop_1298,call_1315,var_1314,])
func_1328 = relay.Function([var_1314,], output)
mod['func_1328'] = func_1328
mod = relay.transform.InferType()(mod)
var_1329 = relay.var("var_1329", dtype = "float32", shape = (945,))#candidate|1329|(945,)|var|float32
output = func_1328(var_1329)
func_1330 = relay.Function([var_1329], output)
mutated_mod['func_1330'] = func_1330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1413 = relay.const([[[-6,-4,-4,5,-9,-10,7,1,-3],[-5,9,9,7,-6,-8,2,9,-6],[-10,10,-3,-6,10,-8,-10,6,-10],[-7,-10,4,3,1,-4,4,2,-3],[8,-5,-9,-3,-5,8,-6,4,9],[6,-6,3,-8,5,-5,-4,10,-3],[-4,7,7,-7,-4,1,-3,-5,-5],[-10,-7,2,-5,-5,6,5,-4,9],[10,4,-1,5,-3,-2,1,1,8],[10,-10,10,4,-5,-8,2,4,-1],[-3,6,9,4,1,9,-7,-3,-5],[2,-6,10,5,3,-7,2,-3,6],[10,3,5,9,1,10,6,-7,-1],[8,10,5,6,-9,-10,4,-7,9]],[[8,-6,1,7,8,-2,5,-6,1],[-2,9,-7,-6,-6,7,5,-5,-4],[-6,6,9,6,-7,-6,-4,-7,-10],[3,-7,-1,6,10,8,2,7,2],[5,9,-10,2,3,-8,-6,-1,2],[7,-1,-1,-1,6,10,-7,6,9],[-10,2,2,8,-1,-9,4,-2,3],[5,6,-5,7,-3,5,-9,-5,-10],[-10,-3,9,5,9,8,9,-7,5],[1,-3,5,6,-5,-6,8,-3,-9],[4,-8,9,9,1,5,8,-8,-2],[-9,10,1,-8,3,9,-8,4,-10],[-3,-3,4,2,3,5,4,4,-9],[-9,-4,-10,2,8,5,-1,4,5]],[[-1,2,-5,-9,-10,-3,8,5,2],[-4,5,-4,-7,-9,10,-1,-8,-5],[7,-4,-7,-5,6,-8,7,-7,-2],[-1,6,2,-3,-7,5,4,3,10],[-2,6,6,10,-6,4,-6,8,6],[-7,4,-7,-5,-4,8,10,-10,-2],[2,10,7,-7,10,6,-7,2,-7],[4,-10,10,-2,-2,1,-1,-3,1],[4,4,5,-7,-3,8,9,-3,10],[-9,-8,-7,4,-9,6,9,-2,-3],[3,1,-10,-7,1,-8,-7,-3,9],[-1,-5,-1,2,2,-1,3,4,9],[3,3,-7,-6,9,7,-9,-10,-1],[-7,9,9,2,-5,5,2,-1,5]],[[5,2,1,1,-10,-4,2,-7,1],[-2,-7,-1,2,-4,6,2,-9,7],[-6,9,1,-10,-5,5,-1,8,5],[-4,-3,-9,6,-2,6,6,-8,-9],[-10,-2,-3,10,-4,-6,10,-8,-6],[1,8,10,3,-7,3,-1,-6,8],[2,5,-8,6,3,-8,1,-3,-3],[5,1,8,-10,6,4,5,-2,1],[-3,10,1,5,9,10,-2,-7,-9],[-8,-6,4,8,3,2,-2,10,-3],[9,-2,-9,-10,9,6,4,8,-8],[-9,2,6,7,2,-9,-10,-4,-7],[-5,6,4,-4,7,10,4,2,1],[-3,8,-6,2,-5,8,-1,-9,-9]],[[-8,3,6,-1,-3,10,10,2,9],[-5,6,7,-4,-9,5,7,-2,9],[6,-2,-2,2,-6,-2,-4,5,-8],[4,-1,6,10,9,8,1,7,-2],[4,3,-8,-4,-1,-10,3,3,-4],[10,-4,5,-7,5,-10,3,1,-5],[-10,-1,9,-1,5,8,3,-5,-7],[9,1,-9,1,6,-9,-8,1,1],[-1,4,-6,-9,-10,-6,-7,2,8],[-8,5,-8,-6,-3,-8,-8,-7,-6],[5,-2,10,-10,2,4,3,-7,-9],[-3,3,-3,-4,-9,5,4,9,-3],[-1,-5,-6,2,-4,-10,-8,-7,2],[-2,-2,5,-6,-7,4,-3,4,-9]],[[8,10,4,2,-4,3,-2,-2,5],[4,-8,-6,3,-9,-7,7,-2,7],[8,6,-2,-8,5,1,-9,3,7],[10,-1,7,7,-5,-1,-5,-4,3],[-1,10,-2,5,-7,-9,-10,-6,-9],[-10,7,5,8,8,-10,-7,1,6],[10,7,2,4,6,-4,3,1,-9],[-9,-4,-8,8,-5,5,-4,-3,-4],[6,8,8,-9,5,-10,-6,-1,5],[-7,7,10,5,8,-7,-4,10,7],[3,-8,7,3,6,6,-5,2,8],[5,10,-3,8,9,1,-4,3,-5],[2,4,1,-9,6,10,5,-7,-1],[-1,-10,-6,4,7,4,8,9,-1]],[[-3,-7,-4,-4,4,-6,-4,5,5],[4,3,-9,-1,-10,8,-1,2,1],[-8,-6,6,9,-7,3,8,-3,9],[6,6,2,-7,-6,-4,-6,-10,5],[4,-8,-10,5,10,-9,-8,1,-2],[8,8,10,-1,-4,-1,-8,3,-8],[-7,-1,8,6,-8,10,1,-1,3],[3,-10,-4,-6,-7,-6,-1,5,10],[3,-9,-2,-3,8,6,-7,-5,7],[-1,-4,9,-3,-5,-2,2,-8,8],[-10,6,9,1,-2,5,6,10,4],[1,2,6,8,1,10,9,2,-10],[-7,7,7,-9,-9,4,10,3,-9],[6,-8,5,-6,-10,10,-1,10,6]],[[-1,-2,-6,6,-10,-8,9,-6,10],[-4,6,9,5,2,-8,-3,-5,-1],[-1,-9,-7,2,10,4,-1,-10,-4],[2,-9,-5,5,7,-4,1,7,-8],[6,2,-10,-9,7,-10,8,-10,-6],[-3,-4,-9,9,8,1,-4,-8,2],[-3,10,10,-10,-2,7,-7,7,1],[2,7,9,7,-4,10,-4,-8,-4],[4,9,6,2,-6,-5,-6,-10,8],[-2,1,-2,3,-5,-10,-1,2,-10],[6,2,-4,1,-5,-4,10,-1,-1],[3,9,-5,4,-5,6,5,-9,5],[5,3,9,-4,-3,-2,-8,-10,-3],[-5,-3,-5,8,-4,-8,-2,7,2]],[[5,6,3,-4,-5,7,3,8,4],[6,5,1,-9,8,-10,-3,-8,-3],[-9,1,3,-3,-2,4,-4,10,-2],[-5,-5,8,-3,10,-2,-2,2,-6],[-3,-3,9,1,-10,3,1,3,-2],[1,4,9,-6,8,6,5,2,-4],[-5,-4,-7,7,6,-6,-2,6,-10],[-1,-7,4,-2,7,-9,5,-8,-1],[6,5,-7,-2,7,3,4,2,5],[-9,7,1,6,9,4,1,7,2],[4,-3,6,6,1,3,8,-5,9],[2,-1,-1,3,5,-7,-4,-4,2],[2,-10,-8,1,7,2,1,1,-6],[-8,-4,9,-9,10,1,-3,-2,7]],[[6,-7,-3,6,4,9,10,1,10],[3,4,-3,7,-7,9,-8,-2,-5],[-5,-3,10,1,7,4,-3,-7,2],[1,7,10,-1,-8,-3,-10,-6,9],[4,4,5,9,4,-6,-9,10,6],[10,6,2,3,-2,-4,-4,5,10],[-7,8,6,-2,1,-10,9,4,-10],[-7,-8,-3,-9,1,-9,4,9,-7],[-3,1,-10,3,-3,-5,3,7,10],[-4,-10,-3,-5,3,8,-2,-1,-7],[3,10,-6,8,-4,1,-6,-5,3],[5,6,3,-10,-6,-7,1,2,-8],[6,-8,-3,-6,-7,5,-10,7,8],[9,6,-8,8,-4,3,-7,-8,-9]],[[5,9,-8,-9,7,-4,7,-3,-9],[-5,-4,-5,1,-6,-8,-9,4,-2],[-4,-9,-6,-8,-6,-5,3,10,-9],[6,9,-10,-1,-8,8,-5,3,-5],[-9,-4,-3,-10,9,6,6,-9,-6],[-10,9,-1,-9,1,-2,-1,-7,-4],[3,9,-5,-9,8,6,8,-2,5],[4,-10,8,-1,-1,-3,1,10,-8],[-6,5,-9,-10,8,-4,5,-9,-4],[7,5,4,-4,5,-6,8,-4,-7],[-6,7,-1,7,10,-1,10,-10,5],[-2,-8,4,2,5,6,6,-9,8],[-6,5,10,10,5,4,3,-10,6],[4,-5,3,-1,5,-4,1,7,-7]],[[4,-6,7,-1,-9,3,7,3,-8],[-7,-5,-2,-5,-10,9,-9,7,3],[7,-6,7,10,-9,-7,-9,-10,7],[7,5,6,7,6,-3,7,3,4],[5,5,9,4,8,-4,6,-9,-9],[2,2,-7,6,-3,-7,8,-3,7],[7,-9,3,-10,-3,9,-5,7,10],[-4,-9,-3,6,-10,4,-10,-7,6],[2,-1,6,-8,-5,-10,-8,1,-1],[-4,8,7,-1,3,-6,8,-4,5],[-10,-2,-8,10,-9,3,-7,-9,3],[7,3,-2,10,8,-10,5,-8,5],[-3,1,-7,-2,-5,7,8,-2,7],[-1,3,-2,-4,2,-6,-7,-3,-1]]], dtype = "uint64")#candidate|1413|(12, 14, 9)|const|uint64
var_1414 = relay.var("var_1414", dtype = "uint64", shape = (12, 14, 9))#candidate|1414|(12, 14, 9)|var|uint64
bop_1415 = relay.bitwise_or(const_1413.astype('uint64'), relay.reshape(var_1414.astype('uint64'), relay.shape_of(const_1413))) # shape=(12, 14, 9)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
const_1431 = relay.const([7,-5,9,8,-9,10,-6,-10,-1,-5,-9,-6,-8,-5,7,9,1,-5,-5,6,-10,9,-3,6,9,-6,8,3,-1,6,-4,3,10,6,5,-9,-2,10,7,-9,5,-9,9,8,-2,-7,-9,2,10,-5,3,9,-2,1,3,8,-5,-1,-10,-2,5,-7,-10,4,-8,-7,2,-4,-3,6,5,3,2,4,-5,2,-8,4,7,-9,6,-6,2,-5,-5,2,-6,3,9,7,6,3,10,3,3,4,10,10,-10,-8,3,-8,-4,-6,-8,6,4,-9,7,4,4,1,-8,7,-3,2,2,6,10,-9,-7,-4,6,-7,-5,-5,1,-4,-7,6,3,-8,7,-3,8,-5,10,-7,-3,1,9,5,-2,-8,10,-10,3,10,-2,7,8,6,-3,4,9,-2,-3,-8,-7,-5,2,10,3,-5,6,6,6,-1,7,3,-5,6,-1,3,3,-5,-5,-10,6,7,7,-7,7,10,-5,4,7,6,-6,-7,10,6,6,6,-9,-7,6,9,-2,-9,-1,7,-3,-5,-5,-10,4,-10,9,-6,1,-7,7,-4,7,6,-8,-6,-5,2,5,4,-5,2,4,-6,-1,-4,1,7,-1,7,-5,10,6,-1,1,4,2,4,6,-1,-5,7,-2,5,9,-3,-5,-6,5,5,3,-6,5,-2,-9,10,-7,1,3,-5,6,-7,-10,-3,8,-3,-5,-7,6,-3,-4,1,2,-3,6,7,5,-4,-5,-10,-2,8,-9,-10,-6,-3,8,2,-6,4,2,-5,-7,1,-5,-7,-3,6,3,10,9,-10,7,-6,8,4,-3,-10,-9,2,-4,-3,-7,-3,-5,8,6,8,3,-6,-5,-4,1,-9,-4,4,-2,-5,6,-7,-10,-2,4,-2,5,9,-8,8,-4,-10,8,6,-1,-6,10,-5,-10,-9,-8,-3,-8,-2,-5,8,7,-10,3,6,-9,-10,-8,9,3,-4,10,-3,2,-7,-10,-8,6,-4,6,-5,-2,3,-10,-10,2,-4,-3,-3,6,6,6,3,-4,2,-6,-4,-2,10,9,4,4,-6,-7,-6,8,7,5,-7,-8,8,6,6,-7,9,-6,1,-1,1,-5,-10,-6,-6,-10,8,2,4,8,-5,6,-2,6,-4,-10,6,-1,-8,-5,8,9,-3,-3,-10,-9,-5,10,-7,3,-7,8,10,-2,-8,5,4,3,-5,-6,-7,-2,10,-2,-10,10,-1,3,-10,2,-1,2,-10,-5,-1,-10,6,3,-5,2,-3,5,1,-7,-4,-6,5,2,-5,10,6,6,-3,-7,-3,6,-1,10,-8,2,-6,-6,-10,-8,-5,-1,-10,4,-6,-2,10,-5,-8,5,-1,-9,-7,10,5,-2,-6,-1,2,10,6,4,-7,-7,3,-10,-10,3,-3,-7,-3,-9,4,5,-5,3,-6,-5,6,-9,-5,5,-9,-5,3,3,10,5,1,-1,7,-6,-1,-8,-5,7,-6,-7,5,9,3,4,-1,-1,-10,-7,-6,-2,5,3,-6,2,-7,9,3,9,-8,-1,-3,3,3,-2,4,6,-5,1,-1,5,4,-7,-2,2,9,-2,6,-8,5,7,-8,-1,4,-4,7,-3,5,-7,-6,10,-2,2,8,-6,1,-4,-8,2,9,7,7,-6,-9,1,3,5,-6,3,6,-6,-5,-8,7,7,7,-1,-5,9,1,-1,3,-10,-2,2,-4,-9,-3,6,-8,-8,-10,-1,10,-10,2,-5,-9,6,10,1,8,-5,-6,3,-5,-9,1,-1,-10,10,-2,8,2,3,4,5,4,3,2,-4,-6,-5,4,8,5,-7,4,10,-9,-7,-9,-5,4,-4,5,-7,-2,-9,-6,-10,6,-10,3,8,5,5,10,8,9,2,10,6,-2,8,-4,1,-6,-2,-2,-8,-6,4,2,-1,4,4,3,-7,5,-4,-4,6,-7,6,1,-10,-9,-4,-6,2,8,-5,-4,-7,10,7,-8,3,-3,9,-4,-10,3,2,9,-9,-9,-8,-1,-3,6,-4,-3,10,-5,-10,7,-10,6,-10,-7,1,-7,3,6,6,6,-6,6,-6,6,10,10,4,3,2,-6,7,4,9,8,1,7,4,3,4,10,3,-1,5,-2,5,-1,-9,-4,4,6,-7,-3,6,-3,-5,2,2,-6,9,-5,8,-7,-3,-7,-5,4,-6,3,5,2,-8,10,8,-6,-6,1,8,-10,3,10,2,9,3,2,5,-9,-6,2,7,-3,10,-6,6,-1,-5,6,-9,7,-5,1,1,-5,-9,5,5,-6,3,-5,-9,-7,-9,2,-6,-9,8,-2,-10,-9,4,-4,1,-3,-3,3,-7,6,1,-4,-7,-7,5,-5,6,3,-6,-8,6,-1,-2,-10,-5,4,2,-3,3,5,1,4,-4,9,5,-8,3,-9,-4,-3,-3,4,-7,8,9,9,-5,-1,-1,8,-10,-6,-6,7,3,-10,10,-6,3,8,-7,-5,-9,1,7,-5,-6,1,5,-3,-9,-7,-10,-6,6,6,1,6,-8,-2,-6,3,10,-3,1,3,2,-10,2,-5,10,-2,3,-4,4,-5,5,-2,9,9,-5,1,-4,-10,-7,-5,-6,-9,-8,1,1,4,-3,2,-4,-3,3,6,5,4,-3,-8,-9,-10,-1,10,-7,9,-1,-4,-10,-5,3,10,9,9,-6,-1,-5,1,3,10,-6,-4,10,3,6,-6,-1,-6,-2,-2,-3,3,-7,-6], dtype = "uint16")#candidate|1431|(1024,)|const|uint16
call_1430 = func_966_call(relay.reshape(const_1431.astype('uint16'), [8, 8, 16]))
call_1432 = func_966_call(relay.reshape(const_1431.astype('uint16'), [8, 8, 16]))
output = relay.Tuple([bop_1415,call_1430,const_1431,])
output2 = relay.Tuple([bop_1415,call_1432,const_1431,])
func_1436 = relay.Function([var_1414,], output)
mod['func_1436'] = func_1436
mod = relay.transform.InferType()(mod)
mutated_mod['func_1436'] = func_1436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1437 = relay.var("var_1437", dtype = "uint64", shape = (12, 14, 9))#candidate|1437|(12, 14, 9)|var|uint64
func_1436_call = mutated_mod.get_global_var('func_1436')
call_1438 = func_1436_call(var_1437)
output = call_1438
func_1439 = relay.Function([var_1437], output)
mutated_mod['func_1439'] = func_1439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1531 = relay.var("var_1531", dtype = "float32", shape = (1, 13, 2))#candidate|1531|(1, 13, 2)|var|float32
uop_1532 = relay.asin(var_1531.astype('float32')) # shape=(1, 13, 2)
bop_1535 = relay.bitwise_or(var_1531.astype('int8'), relay.reshape(uop_1532.astype('int8'), relay.shape_of(var_1531))) # shape=(1, 13, 2)
bop_1549 = relay.maximum(var_1531.astype('uint32'), relay.reshape(bop_1535.astype('uint32'), relay.shape_of(var_1531))) # shape=(1, 13, 2)
output = relay.Tuple([bop_1549,])
output2 = relay.Tuple([bop_1549,])
func_1556 = relay.Function([var_1531,], output)
mod['func_1556'] = func_1556
mod = relay.transform.InferType()(mod)
mutated_mod['func_1556'] = func_1556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1557 = relay.var("var_1557", dtype = "float32", shape = (1, 13, 2))#candidate|1557|(1, 13, 2)|var|float32
func_1556_call = mutated_mod.get_global_var('func_1556')
call_1558 = func_1556_call(var_1557)
output = call_1558
func_1559 = relay.Function([var_1557], output)
mutated_mod['func_1559'] = func_1559
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1694 = relay.var("var_1694", dtype = "uint8", shape = (1, 5, 9))#candidate|1694|(1, 5, 9)|var|uint8
var_1695 = relay.var("var_1695", dtype = "uint8", shape = (9, 5, 9))#candidate|1695|(9, 5, 9)|var|uint8
bop_1696 = relay.less_equal(var_1694.astype('bool'), var_1695.astype('bool')) # shape=(9, 5, 9)
uop_1704 = relay.exp(bop_1696.astype('float32')) # shape=(9, 5, 9)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_1710 = relay.var("var_1710", dtype = "float32", shape = (945,))#candidate|1710|(945,)|var|float32
call_1709 = relay.TupleGetItem(func_1328_call(relay.reshape(var_1710.astype('float32'), [945,])), 1)
call_1711 = relay.TupleGetItem(func_1330_call(relay.reshape(var_1710.astype('float32'), [945,])), 1)
output = relay.Tuple([uop_1704,call_1709,var_1710,])
output2 = relay.Tuple([uop_1704,call_1711,var_1710,])
func_1712 = relay.Function([var_1694,var_1695,var_1710,], output)
mod['func_1712'] = func_1712
mod = relay.transform.InferType()(mod)
mutated_mod['func_1712'] = func_1712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1712_call = mutated_mod.get_global_var('func_1712')
var_1714 = relay.var("var_1714", dtype = "uint8", shape = (1, 5, 9))#candidate|1714|(1, 5, 9)|var|uint8
var_1715 = relay.var("var_1715", dtype = "uint8", shape = (9, 5, 9))#candidate|1715|(9, 5, 9)|var|uint8
var_1716 = relay.var("var_1716", dtype = "float32", shape = (945,))#candidate|1716|(945,)|var|float32
call_1713 = func_1712_call(var_1714,var_1715,var_1716,)
output = call_1713
func_1717 = relay.Function([var_1714,var_1715,var_1716,], output)
mutated_mod['func_1717'] = func_1717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2113 = relay.var("var_2113", dtype = "float64", shape = (14, 3, 4))#candidate|2113|(14, 3, 4)|var|float64
const_2114 = relay.const([[[-1.962524,-5.087629,9.081461,7.013747],[0.758939,-4.627653,4.455749,-9.266071],[-2.325029,1.451575,-4.121315,-4.119366]],[[6.498875,-0.590451,-5.424821,-8.819159],[1.068578,-7.339332,-3.590905,7.049537],[1.127105,-3.533638,1.312289,7.430866]],[[-1.836023,-4.224926,-0.268978,-3.642720],[0.180358,-5.474406,-8.615419,-2.799416],[1.357290,-4.426723,4.152951,9.719186]],[[2.781856,2.930752,-0.163332,2.877822],[4.388505,-3.526000,-1.425147,0.171335],[4.298032,-5.922945,-6.241563,3.444058]],[[6.799135,8.181257,-5.387999,-9.328385],[0.661585,-2.998546,-7.595885,-3.462774],[5.850591,1.000368,-7.096656,-1.048882]],[[-2.835156,6.849751,2.093032,2.895864],[3.958448,5.086481,5.503927,6.030162],[3.917366,8.850101,5.611341,5.499027]],[[-1.145320,5.789758,5.886963,-0.559838],[-8.580520,-6.589944,-1.372720,-8.549886],[8.937512,2.078656,4.848805,6.846717]],[[-1.280616,-1.303468,-0.212429,6.612520],[-8.236657,3.946577,-4.249766,-9.824205],[-3.467647,-2.979298,-0.655586,-2.768943]],[[0.482612,-5.456899,-5.229432,4.816398],[-7.608757,6.629971,-2.383987,1.646431],[1.655582,-1.376085,-0.243915,-7.078319]],[[-1.918770,-6.051266,1.578452,-0.199912],[-3.184658,-0.295349,-5.295345,-4.979769],[5.387746,3.174023,-4.367232,0.166311]],[[-5.660659,2.899211,-2.437176,9.006252],[-6.754701,9.891129,-9.956365,-9.068499],[-4.387893,1.969850,1.248119,-2.418724]],[[3.960869,-0.239660,-6.419386,5.507697],[6.858504,-3.422941,-2.978755,-8.360494],[4.591442,1.917598,1.720703,-1.244092]],[[-2.382885,-4.747601,5.090252,-5.658541],[2.565504,-0.059297,-7.917224,-0.510713],[-2.526958,1.534195,-8.090004,-2.377374]],[[7.346327,1.025290,5.999767,5.414059],[3.863054,2.542621,-3.177675,-0.394416],[-6.078500,1.561443,-4.491017,4.697382]]], dtype = "float64")#candidate|2114|(14, 3, 4)|const|float64
bop_2115 = relay.less_equal(var_2113.astype('bool'), relay.reshape(const_2114.astype('bool'), relay.shape_of(var_2113))) # shape=(14, 3, 4)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
var_2122 = relay.var("var_2122", dtype = "uint16", shape = (1024,))#candidate|2122|(1024,)|var|uint16
call_2121 = func_966_call(relay.reshape(var_2122.astype('uint16'), [8, 8, 16]))
call_2123 = func_966_call(relay.reshape(var_2122.astype('uint16'), [8, 8, 16]))
func_1436_call = mod.get_global_var('func_1436')
func_1439_call = mutated_mod.get_global_var('func_1439')
const_2125 = relay.const([-3,4,8,-3,-4,5,-4,-9,10,3,-6,1,1,3,3,7,-10,-1,4,-5,7,-10,3,-7,-1,-10,-5,4,2,-5,5,1,4,-6,-10,-7,-2,-9,-4,-9,-7,3,8,9,-7,7,8,-9,-1,-1,5,9,-4,-4,5,5,-10,7,8,-10,-2,-6,4,-3,10,8,-3,-5,-5,5,-2,-3,1,-2,6,5,-8,8,-8,-7,-4,-8,-3,-4,-1,8,9,6,3,-2,-10,7,-10,10,-6,10,3,9,-10,4,-1,-7,-6,-2,-2,8,-1,-10,9,-1,-6,-9,9,-4,-10,-2,-3,-1,3,9,-6,-9,-1,-10,-6,9,1,2,-5,-1,-5,6,-4,-8,-10,2,4,-5,-10,-7,-5,10,-4,8,-9,4,1,-3,-5,-2,5,-3,7,6,-2,-6,1,2,8,-7,-8,10,-9,4,3,-10,-2,-9,-10,6,10,-6,-6,8,-8,-1,-4,-6,6,-8,6,7,-1,-4,-1,-5,-2,2,1,4,-5,-6,7,-3,-3,-2,-8,-6,-5,-4,-3,-7,-9,-3,-9,2,1,2,-1,1,-5,-1,-9,-6,7,1,8,-5,9,9,-2,-1,-8,-10,-9,1,3,-8,10,9,3,-9,9,8,-9,-5,8,5,10,-3,8,2,-9,-6,-4,6,4,-10,7,-1,5,-1,-2,8,-4,1,-8,-5,-7,4,5,-1,-5,-4,-9,3,8,8,2,2,-9,-10,-9,-2,8,-8,-7,-4,9,7,2,3,-3,10,7,1,-8,-2,8,3,-1,-10,1,-1,3,-8,5,5,-2,-3,-8,6,-7,-4,4,2,-8,6,-10,10,4,-10,-1,8,1,-4,-6,-6,-1,-8,8,10,4,-7,-2,10,7,6,-5,3,6,5,-10,-6,1,-5,6,7,1,6,1,7,4,-5,-8,4,-10,7,-2,-10,-9,-4,-10,6,-4,-5,8,2,7,-2,-10,10,-5,-9,-2,-10,5,3,-4,9,3,5,-7,-5,8,1,4,-7,10,6,6,10,-9,-9,4,-2,-3,8,6,6,9,-10,-1,-1,-3,-5,-2,-10,-10,5,8,-2,-6,5,-4,-4,10,-7,2,-4,-5,-2,3,-10,-1,-8,-6,-2,-3,-4,9,1,5,10,5,2,2,1,-8,-10,-9,9,-1,8,9,-10,-4,-8,8,-6,-2,7,4,1,8,-10,2,-2,2,6,4,2,8,6,-7,-10,-3,-7,4,7,-1,-1,-8,-7,-5,-6,10,8,7,5,8,-5,4,-8,-1,-4,-3,7,-10,-4,9,3,-7,9,-6,-7,2,7,-5,-6,-1,-9,7,-8,10,1,1,1,6,-1,6,9,2,-4,1,3,2,8,8,6,9,9,1,7,10,2,-8,4,6,-8,9,1,-3,-1,-9,3,4,8,-2,5,-5,-9,-7,-2,10,10,-1,-1,3,9,8,-10,4,8,-2,-9,9,9,-9,-6,1,8,-10,8,2,-5,-7,-3,-4,-6,-3,5,-1,7,-5,10,-1,-8,9,4,3,-2,-4,-3,5,5,6,-9,4,8,-10,-5,-9,2,9,9,-5,4,5,8,-9,-7,2,-2,3,6,-10,-6,4,-7,4,-6,-7,8,10,-2,-8,-3,-9,9,-7,-7,5,-8,-1,-3,2,-2,10,3,-6,8,-5,6,-8,-6,-9,-1,-4,5,-5,10,6,6,-2,7,-1,-1,7,-10,2,7,-7,-8,-9,-8,-9,-2,10,4,-5,9,-7,-4,-10,7,-8,-5,-7,8,6,-2,4,-4,2,-8,9,2,-10,10,1,-1,-6,-8,9,-2,-3,4,8,4,5,6,-1,-2,7,10,1,-8,10,-1,3,-8,8,6,9,8,3,-10,2,-7,5,-8,-1,-5,-4,3,-10,4,2,-7,-9,7,-7,-8,8,-10,3,9,-6,-8,-1,-6,2,2,-9,7,2,-1,2,1,-3,2,1,-1,-8,-5,-9,-1,-2,-7,1,-10,9,-5,-9,10,7,1,5,-5,2,-1,3,-4,-6,6,6,-2,7,7,-4,-9,8,1,3,-8,5,4,1,3,-10,5,-6,2,-4,1,-3,-1,2,8,-7,8,6,-10,-1,-6,-3,-6,8,4,6,-10,-6,4,4,-1,8,2,1,-3,-6,-3,10,10,9,1,-9,-4,3,-3,10,5,3,-2,-1,9,5,-8,5,-2,4,-8,4,10,-10,4,6,7,-9,6,-5,-7,8,5,5,-8,3,-4,9,-6,-4,10,2,-1,-10,10,3,6,-3,7,-2,-9,-10,-4,4,10,2,1,-9,4,-9,-5,-2,-6,-5,4,-7,-2,5,-7,-8,8,9,6,2,-7,4,7,-4,2,-7,5,-9,-2,5,-5,8,-2,3,-7,10,7,-6,2,7,-9,10,10,-3,6,-4,10,4,-1,2,3,-1,-5,-5,1,1,-6,-6,-4,9,-8,3,-8,-1,-6,-8,4,9,8,-6,-6,1,-10,8,-7,-6,-1,4,-5,-10,-10,8,-8,3,9,-7,6,6,-4,-2,5,-9,-4,-6,9,-8,4,1,2,-10,-3,7,4,7,-2,-2,-6,3,-3,9,-7,-9,4,3,-5,-9,9,-2,-1,-2,10,8,-4,-6,-10,-6,-1,-7,8,2,-2,-4,9,5,-4,3,-2,10,3,-2,-10,-9,-5,7,-6,-7,-10,-9,-6,8,-3,4,3,-1,9,-9,-2,-9,7,-2,-4,3,-9,-2,-9,5,-3,-7,-4,-5,10,3,6,-2,-7,-8,-3,-5,-5,9,9,-4,-4,1,9,-4,-3,2,-8,-2,9,6,-1,6,7,-8,1,1,4,7,9,4,-8,-1,3,3,-1,5,1,-8,1,7,1,-7,-9,10,-6,1,-3,10,4,-9,4,1,-9,6,-6,-2,-8,-3,5,-6,-10,-5,-9,-10,-10,-10,-4,10,9,-5,-8,5,6,-4,3,-10,-6,7,-9,10,5,6,10,-5,1,-7,7,-4,10,-1,-9,-6,-7,-2,-8,-8,2,-6,-9,3,-1,10,2,10,-3,5,-4,-6,-3,-9,-1,-8,2,-7,-5,2,3,-3,-5,9,5,-9,8,-2,-4,-6,8,9,-5,1,-7,7,5,6,-4,8,-2,8,2,1,-1,-2,10,-10,-8,-7,4,-6,6,8,1,-9,1,-3,7,1,-2,6,-6,8,-7,-10,9,-1,10,-2,5,5,9,1,3,-4,4,-8,-8,4,-9,8,10,2,-9,2,8,-10,-7,-4,4,7,10,10,-10,-3,9,-1,-1,3,-9,-3,-4,7,5,-4,-1,-9,-6,1,3,7,5,3,10,7,-2,-8,5,-8,9,1,10,-3,9,2,-7,-4,-8,-8,2,8,6,-10,5,3,-9,4,-6,-6,10,-5,-1,-7,7,-5,-3,-4,-3,1,-2,10,1,-1,-2,2,-8,-6,7,6,-1,6,6,-2,-4,-6,9,10,-1,-9,-1,-4,-9,6,4,-1,-4,10,6,-10,-6,1,-4,7,3,10,-6,-2,5,-2,-1,5,-9,5,6,8,-2,9,-1,3,4,-7,-6,-7,9,1,2,5,-10,9,-8,9,-7,5,-5,-1,2,1,-8,-10,-8,7,4,3,4,1,2,-1,-8,-8,-5,-4,-8,-4,3,-3,4,3,4,3,2,10,-3,3,-7,6,10,8,7,4,7,-3,7,-8,-3,-9,-6,7,7,-1,-2,6,-7,2,10,3,5,-8,-1,-5,9,7,2,5,5,4,4,-1,-8,-6,1,4,7,-8,10,3,7,7,8,-9,-9,-2,6,-6,8,-1,-3,-5,-10,-9,8,10,-3,-5,8,-4,6,1,-1,6,-9,10,-5,2,-10,4,2,5,10,8,1,-6,-10,-9,-4,-2,-4,-6,-9,-2,1,9,1,-1,-4,-10,1,-2,-3,-3,9,-1,-8,-10,7,-8,-10,-2,-2,4,1,1,-10,-2,7,9,1,-7,-6,9,-2,2,7,5,-8,-5,2,1,-10,-2,-10,-1,10,-3,-6,2,9,-10,-9,-6,-3,-5,7,-5,-1,-4,-10,4,-2], dtype = "uint64")#candidate|2125|(1512,)|const|uint64
call_2124 = relay.TupleGetItem(func_1436_call(relay.reshape(const_2125.astype('uint64'), [12, 14, 9])), 1)
call_2126 = relay.TupleGetItem(func_1439_call(relay.reshape(const_2125.astype('uint64'), [12, 14, 9])), 1)
output = relay.Tuple([bop_2115,call_2121,var_2122,call_2124,const_2125,])
output2 = relay.Tuple([bop_2115,call_2123,var_2122,call_2126,const_2125,])
func_2145 = relay.Function([var_2113,var_2122,], output)
mod['func_2145'] = func_2145
mod = relay.transform.InferType()(mod)
mutated_mod['func_2145'] = func_2145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2145_call = mutated_mod.get_global_var('func_2145')
var_2147 = relay.var("var_2147", dtype = "float64", shape = (14, 3, 4))#candidate|2147|(14, 3, 4)|var|float64
var_2148 = relay.var("var_2148", dtype = "uint16", shape = (1024,))#candidate|2148|(1024,)|var|uint16
call_2146 = func_2145_call(var_2147,var_2148,)
output = call_2146
func_2149 = relay.Function([var_2147,var_2148,], output)
mutated_mod['func_2149'] = func_2149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2486 = relay.var("var_2486", dtype = "float32", shape = (7, 7, 3))#candidate|2486|(7, 7, 3)|var|float32
uop_2487 = relay.sqrt(var_2486.astype('float32')) # shape=(7, 7, 3)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
var_2494 = relay.var("var_2494", dtype = "uint16", shape = (1024,))#candidate|2494|(1024,)|var|uint16
call_2493 = func_966_call(relay.reshape(var_2494.astype('uint16'), [8, 8, 16]))
call_2495 = func_966_call(relay.reshape(var_2494.astype('uint16'), [8, 8, 16]))
output = relay.Tuple([uop_2487,call_2493,var_2494,])
output2 = relay.Tuple([uop_2487,call_2495,var_2494,])
func_2539 = relay.Function([var_2486,var_2494,], output)
mod['func_2539'] = func_2539
mod = relay.transform.InferType()(mod)
var_2540 = relay.var("var_2540", dtype = "float32", shape = (7, 7, 3))#candidate|2540|(7, 7, 3)|var|float32
var_2541 = relay.var("var_2541", dtype = "uint16", shape = (1024,))#candidate|2541|(1024,)|var|uint16
output = func_2539(var_2540,var_2541,)
func_2542 = relay.Function([var_2540,var_2541,], output)
mutated_mod['func_2542'] = func_2542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2676 = relay.var("var_2676", dtype = "float32", shape = (16, 10, 14))#candidate|2676|(16, 10, 14)|var|float32
var_2677 = relay.var("var_2677", dtype = "float32", shape = (16, 10, 14))#candidate|2677|(16, 10, 14)|var|float32
bop_2678 = relay.floor_mod(var_2676.astype('float32'), relay.reshape(var_2677.astype('float32'), relay.shape_of(var_2676))) # shape=(16, 10, 14)
output = relay.Tuple([bop_2678,])
output2 = relay.Tuple([bop_2678,])
func_2683 = relay.Function([var_2676,var_2677,], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2683_call = mutated_mod.get_global_var('func_2683')
var_2685 = relay.var("var_2685", dtype = "float32", shape = (16, 10, 14))#candidate|2685|(16, 10, 14)|var|float32
var_2686 = relay.var("var_2686", dtype = "float32", shape = (16, 10, 14))#candidate|2686|(16, 10, 14)|var|float32
call_2684 = func_2683_call(var_2685,var_2686,)
output = call_2684
func_2687 = relay.Function([var_2685,var_2686,], output)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2809 = relay.var("var_2809", dtype = "float64", shape = (11, 4, 3))#candidate|2809|(11, 4, 3)|var|float64
uop_2810 = relay.acos(var_2809.astype('float64')) # shape=(11, 4, 3)
output = uop_2810
output2 = uop_2810
func_2815 = relay.Function([var_2809,], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
var_2816 = relay.var("var_2816", dtype = "float64", shape = (11, 4, 3))#candidate|2816|(11, 4, 3)|var|float64
output = func_2815(var_2816)
func_2817 = relay.Function([var_2816], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3265 = relay.const([[[-3,3]],[[8,-6]],[[-9,8]],[[8,-8]],[[7,-4]],[[-7,-1]],[[10,-1]],[[-3,-1]],[[6,8]],[[5,-1]],[[-3,-6]],[[4,-9]],[[-7,-9]],[[-3,9]],[[-6,-2]]], dtype = "uint64")#candidate|3265|(15, 1, 2)|const|uint64
var_3266 = relay.var("var_3266", dtype = "uint64", shape = (15, 5, 2))#candidate|3266|(15, 5, 2)|var|uint64
bop_3267 = relay.bitwise_and(const_3265.astype('uint64'), var_3266.astype('uint64')) # shape=(15, 5, 2)
bop_3275 = relay.power(bop_3267.astype('float32'), const_3265.astype('float32')) # shape=(15, 5, 2)
bop_3289 = relay.equal(bop_3275.astype('bool'), relay.reshape(bop_3267.astype('bool'), relay.shape_of(bop_3275))) # shape=(15, 5, 2)
output = relay.Tuple([bop_3289,])
output2 = relay.Tuple([bop_3289,])
func_3303 = relay.Function([var_3266,], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
var_3304 = relay.var("var_3304", dtype = "uint64", shape = (15, 5, 2))#candidate|3304|(15, 5, 2)|var|uint64
output = func_3303(var_3304)
func_3305 = relay.Function([var_3304], output)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3650 = relay.var("var_3650", dtype = "float32", shape = (7, 11, 7))#candidate|3650|(7, 11, 7)|var|float32
uop_3651 = relay.asin(var_3650.astype('float32')) # shape=(7, 11, 7)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
const_3664 = relay.const([[3.105184],[-6.669613],[1.015503],[-5.347131],[3.497509],[-1.506299],[9.352189],[4.459517],[3.417644],[-1.842249],[0.140869],[0.859912],[-9.520983],[-2.573915],[-6.076531],[-2.435622],[-2.052910],[0.361613],[-0.476683],[1.428980],[7.282434],[9.426199],[8.419054],[-2.426983],[-1.821488],[6.238329],[2.926728],[-8.596443],[-0.349459],[4.640178],[-8.575862],[-1.002539],[-5.014804],[-6.522704],[8.659306],[-7.882275],[9.321154],[8.443046],[-4.551645],[-3.538516],[-5.812805],[-5.472195],[-2.641474],[-8.616412],[-8.408578],[-5.932570],[5.026622],[1.072736],[-1.360349],[-5.456443],[5.887158],[-5.684770],[-2.158844],[2.942172],[5.531844],[5.146070],[-4.123564],[-5.861338],[3.700700],[5.421887],[-3.943686],[-8.392532],[-4.636081],[9.803047],[1.652306],[-5.643553],[-6.161800],[3.713217],[-4.251341],[-3.162355],[-7.447260],[0.423723],[9.036466],[-5.018635],[-4.617854],[-0.671953],[6.066210],[-2.570188],[-0.446175],[-3.367050],[-1.636988],[-3.120568],[7.306201],[1.591270],[8.622266],[-5.134171],[-2.066233],[-7.377973],[5.099759],[-2.651541],[-0.722046],[-0.997046],[0.152141],[3.244573],[-1.257750],[8.877755],[-8.061335],[7.216340],[9.722662],[8.915369],[-9.063225],[8.776686],[1.703529],[2.772518],[-4.833998],[7.580492],[-0.006924],[-2.012509],[-0.845776],[-2.302424],[2.424355],[2.478121],[7.317960],[4.031940],[-8.106538],[4.116895],[-8.315494],[5.607248],[-1.542978],[-6.100112],[-3.523936],[2.995190],[0.495622],[-5.747984],[4.559790],[-2.550248],[-0.952409],[-2.547707],[9.875448],[-5.402878],[-3.083943],[-3.062522],[-5.959522],[5.596429],[-3.400691],[7.331724],[5.521325],[-1.349289],[-0.358827],[-6.474663],[7.619767],[-0.452765],[9.534590],[2.510387],[7.692213],[-3.754191],[-3.750453],[-1.680512],[-4.983752],[0.921950],[-1.354143],[1.146542],[-6.768231],[-3.452580],[-7.876057],[-1.996666],[-1.475938],[6.365343],[-7.947945],[-8.930843],[-5.612848],[2.523995],[8.634973],[-9.109299],[5.820799],[2.394118],[-5.846955],[3.358452],[-7.110235],[-9.695962],[8.214427],[-4.563693],[8.817558],[3.903010],[-1.796796],[2.639019],[-2.647647],[1.997228],[7.950544],[9.894827],[-3.742105],[-0.099331],[7.191999],[7.766089],[6.402216],[-3.063230],[-8.318937],[-3.118018],[-2.949000],[5.588237],[1.537584],[6.758530],[-1.108716],[-7.778376],[-8.837114],[-6.062305],[-2.684020],[-9.727752],[4.612498],[6.528318],[0.046547],[5.999407],[-5.685688],[1.887184],[0.596564],[0.775741],[-3.137019],[-8.518674],[-5.517223],[-4.233388],[-2.345846],[9.375416],[7.292111],[-4.153098],[2.360235],[1.748410],[1.122166],[-5.555062],[4.717893],[-6.418451],[2.485481],[5.630627],[-0.019475],[-6.240033],[-8.542307],[-9.182387],[7.016664],[9.028163],[2.538992],[7.245314],[8.489427],[9.336665],[3.357077],[-3.066341],[8.322429],[5.365393],[0.343193],[-9.141803],[-8.609759],[-1.129657],[4.926877],[1.341341],[-7.614399],[3.874381],[-9.760483],[-0.764779],[-3.246882],[-2.032096],[8.001637],[-2.160599],[7.251782],[6.243189],[-5.385816],[2.329265],[-2.466153],[-9.506119],[-2.829198],[0.302625],[-8.751096],[-6.571768],[7.385586],[5.869202],[-9.661884],[-0.933163],[-5.411769],[-5.415965],[-4.892617],[-1.915579],[-0.154964],[-7.577113],[3.475416],[-5.282257],[-4.284530],[-2.371472],[4.488625],[-7.727602],[3.571857],[-9.685558],[5.019393],[-6.755860],[0.154607],[-7.973806],[-3.723273],[-7.326888],[-7.777816],[-7.657303],[6.337797],[9.358506],[-0.168875],[4.056995],[-8.835289],[-3.696641],[6.627938],[1.763517],[7.197778],[-7.476344],[-6.663557],[5.676025],[-2.364196],[5.722711],[-2.377272],[-8.348438],[3.214157],[6.654620],[-5.801920],[0.458488],[-1.426280],[-2.553393],[-0.194076],[3.641336],[5.593838],[-2.166529],[-2.907539],[1.676940],[7.401375],[4.384383],[-4.868509],[-8.645769],[0.168939],[4.759716],[-5.363792],[-3.469053],[-7.369934],[-5.266045],[-9.002126],[4.948054],[4.620875],[8.364090],[5.097981],[-1.703666],[-9.182635],[-3.273618],[-6.859617],[-6.890576],[-4.825357],[2.521356],[-9.787472],[-2.124635],[-0.782208],[7.056482],[-6.274489],[1.201758],[-3.726159],[6.969065],[7.334212],[-9.557294],[2.927677],[-0.789135],[4.781351],[4.337587],[-1.229994],[-6.158413],[-0.564433],[5.395067],[5.143242],[1.922312],[5.879018],[-2.327629],[0.717181],[4.303579],[8.015756],[-0.742121],[-7.401850],[-5.996967],[6.496831],[-9.883544],[-6.925995],[-9.691027],[6.663871],[-5.824689],[-2.965796],[-6.007632],[-9.254621],[6.756447],[-0.068650],[-4.087595],[0.595953],[-9.461768],[4.483861],[0.183710],[-2.827160],[-2.621081],[3.411632],[5.823453],[-7.918963],[6.277458],[2.596179],[4.177706],[-6.551080],[0.195350],[5.887635],[3.728353],[1.907842],[5.360962],[-7.882667],[8.679069],[-9.393774],[-9.982841],[4.197312],[-2.156031],[1.304395],[-6.881789],[7.703424],[-4.317732],[0.638840],[-0.646550],[7.210251],[9.456033],[2.999482],[9.144173],[0.905308],[-5.608010],[-5.944502],[6.640075],[-8.682539],[9.613651],[-6.425498],[-1.526098],[2.932996],[7.338820],[-5.814775],[-7.854161],[7.049041],[-4.085466],[-4.455074],[5.349528],[3.139546],[9.011736],[-6.164499],[9.910333],[-1.084228],[-9.554288],[-3.022988],[-3.457890],[2.943551],[-0.657271],[3.009971],[8.595640],[-3.819339],[1.695672],[3.468960],[5.374366],[-7.389702],[-4.991334],[3.084133],[3.181538],[-0.867360],[-0.412846],[-6.328087],[2.771225],[6.182290],[7.911076],[-3.570943],[1.453718],[4.374371],[0.238105],[7.402332],[4.843123],[2.489585],[-1.678661],[8.852402],[-7.367017],[3.574108],[-7.249452],[2.385569],[0.098558],[-1.378852],[8.486408],[3.456304],[5.350306],[3.501238],[4.685467],[0.872033],[-1.278980],[-6.660357],[-9.770541],[-9.496695],[-7.649390],[2.809564],[3.521228],[-9.463304],[6.369806],[8.660784],[3.056498],[-8.990806],[2.619748],[8.357252],[-8.540887],[1.423744],[9.741682],[-6.989820],[8.973333],[-7.419519],[-6.247539],[5.293462],[-3.314883],[2.591475],[-0.410188],[-2.657353],[0.936800],[-3.157168],[-5.497332],[-2.625953],[2.430635],[7.068882],[8.022076],[-8.037049],[-1.268678],[-0.114211],[-9.888818],[-2.752771],[1.050104],[8.857934],[-1.683754],[8.825470],[-4.615883],[5.100749],[6.721349],[7.068025],[5.694116],[7.939439],[-0.540044],[-8.641094],[-8.584102],[-2.568759],[-5.287482],[4.832924],[-3.798986],[6.251971],[-1.722204],[-0.996778],[-0.472133],[5.669295],[2.167408],[-0.719820],[4.889820],[-5.870122],[5.094535],[-1.018222],[4.253358],[2.511781],[3.460695],[-5.494333],[8.411287],[5.864087],[-4.993090],[-2.022463],[1.545093],[7.947823],[-3.765649],[4.617452],[8.651172],[-8.716231],[-1.308568],[6.700093],[9.199228],[6.199207],[4.681464],[-8.818299],[5.154134],[2.188956],[8.463056],[0.572995],[2.004436],[-8.719681],[-0.836054],[-7.651825],[7.705282],[3.202164],[0.470240],[2.379561],[3.131570],[-9.972121],[-5.383093],[1.016486],[-8.256112],[-5.059293],[-7.596294],[-8.230449],[-2.131523],[2.380409],[-5.853087],[-1.631268],[-3.696622],[-5.052433],[-2.743469],[-6.149151],[-5.430846],[8.394266],[9.918080],[8.533388],[5.863707],[-7.220471],[0.572940],[6.770388],[2.574418],[-9.159820],[-3.114757],[2.499194],[-3.401356],[9.176582],[5.231455],[-9.592418],[-3.153782],[0.495757],[-8.211245],[0.116367],[-9.091808],[3.773303],[-9.993484],[5.264462],[-1.877136],[2.111591],[-7.090001],[9.390439],[-8.574478],[-9.470799],[9.829311],[-0.640066],[-2.740861],[0.593639],[-2.816051],[-1.029327],[-6.573157],[-6.718583],[-4.067727],[-2.289330],[8.163434],[-5.746496],[-5.910648],[8.621775],[-3.665810],[7.548930],[-8.122173],[7.015616],[7.985812],[-1.156441],[5.766623],[-5.340085],[-8.726082],[-6.057637],[-4.538223],[3.524769],[-8.432585],[5.734728],[-4.258243],[-3.492158],[-5.167293],[-0.348800],[2.213224],[7.701394],[-3.046863],[-1.191787],[-8.869637],[-8.415023],[4.472945],[-5.322632],[1.036095],[4.770028],[9.509288],[1.917747],[2.720380],[-2.790683],[6.413766],[2.115646],[-4.695308],[7.230287],[-3.841264],[-5.324971],[-0.064487],[8.384609],[0.190481],[7.064450],[-3.953280],[-7.097741],[0.802624],[2.012720],[8.225918],[1.436022],[-4.652287],[9.254627],[7.277915],[1.328763],[-5.193810],[8.843055],[-7.120787],[-9.113650],[-0.294912],[0.068059],[3.436214],[-5.321702],[7.332757],[9.156674],[9.259355],[0.503860],[2.924128],[-2.479511],[8.515453],[-1.003123],[4.524200],[-7.936375],[0.579054],[2.302618],[-3.351411],[-1.368744],[-2.679955],[-0.280702],[-8.412300],[7.489223],[-5.366020],[5.889350],[4.991544],[0.538794],[2.722420],[1.810999],[3.504143],[9.201144],[-4.585248],[-7.905079],[4.898795],[-7.797160],[6.398108],[0.972840],[4.659543],[7.694025],[4.282417],[8.237854],[-9.476359],[9.976298],[6.250118],[-3.264421],[-1.011836],[4.609268],[-6.815896],[6.846958],[-1.876700],[6.226167],[-6.325325],[1.948376],[6.527919],[-8.914151],[2.905546],[-2.885019],[-2.992436],[9.150187],[-8.784012],[-4.916888],[1.660315],[7.984578],[4.354653],[4.968047],[1.815181],[5.557986],[0.066281],[3.293556],[8.085717],[9.620421],[1.676234],[-4.391481],[4.954989],[1.629423],[6.311072],[-9.114377],[7.482853],[-5.635578],[-3.502097],[-4.016901],[-9.705024],[-3.704812],[-7.301368],[8.278007],[3.961631],[-9.802937],[-9.078472],[-1.897472],[6.191389],[9.524466],[0.804423],[4.008469],[0.923829],[0.407743],[-5.974897],[5.341532],[5.643266],[-3.003719],[6.350095],[4.500785],[6.971708],[-8.141436],[-0.505538],[1.490685],[-8.803510],[-8.132047],[5.515369],[1.876247],[4.096044],[-0.452647],[-2.128001],[-2.097650],[4.796102],[-3.374092],[-0.410610],[0.431733],[8.706891],[3.074696],[-7.454362],[0.501914],[9.226556],[-2.974262],[-0.811009],[-4.048119],[-7.031543],[1.377141],[-2.731480],[-8.557376],[-0.123513],[9.027841],[-2.385894],[-3.212949],[-3.956889],[7.389280],[4.620979],[0.942983],[-9.802295],[0.542930],[5.232686],[-2.975318],[-2.492888],[5.071823],[-5.717894],[6.018778],[-4.114598],[0.859433],[4.072531],[-3.429685],[-5.315912],[0.406473],[5.087164],[-5.297861],[-7.719085],[-8.327977],[2.251123],[-5.262208],[-6.409220],[9.170571],[0.445425],[4.237530],[3.685727],[4.112967],[9.082519],[-3.377171],[0.450481],[2.625501],[-0.634050],[9.892864],[8.933270],[3.270203],[-7.127692],[-7.005506],[1.953820],[7.863991],[-5.130512],[-1.432987],[-1.600355],[0.065355],[0.187473],[9.333185],[9.378613],[2.657067],[-6.995520],[-7.682304],[-3.229004],[8.721257],[9.975416],[0.645503],[4.300958],[-3.308213],[-7.823112],[9.034495],[-0.011262],[-4.692803],[-8.531123],[-7.678149],[-8.026209],[2.748386],[-4.269820],[-2.245267],[0.318546],[-5.815334],[5.315064],[5.971065],[-0.058860],[3.974540],[-2.324422],[6.645837],[5.728322],[6.466278],[3.866547],[2.649077],[1.599825],[4.731454],[-4.933917],[4.864828],[6.164086],[4.677574],[7.819998],[8.378351],[-3.204460],[-6.949037],[8.336094],[4.327136],[8.332244],[-4.656443],[-4.063491],[-4.504421],[-6.799656],[-6.722773],[0.686668],[6.915659],[5.155686],[-3.513124],[7.393359],[-0.223375],[-1.371159],[7.079531],[7.950248],[-5.788308],[9.425890],[4.758536],[-9.860516],[5.578647],[8.498525],[7.858359],[9.269142],[1.780671],[4.981841],[-2.926087],[7.538234],[-5.594517],[4.871093],[7.058837],[-5.442156],[-0.133766],[-0.345136],[-8.425658]], dtype = "float32")#candidate|3664|(945, 1)|const|float32
call_3663 = relay.TupleGetItem(func_1328_call(relay.reshape(const_3664.astype('float32'), [945,])), 1)
call_3665 = relay.TupleGetItem(func_1330_call(relay.reshape(const_3664.astype('float32'), [945,])), 1)
bop_3666 = relay.bitwise_and(const_3664.astype('uint32'), relay.reshape(call_3663.astype('uint32'), relay.shape_of(const_3664))) # shape=(945, 1)
bop_3669 = relay.bitwise_and(const_3664.astype('uint32'), relay.reshape(call_3665.astype('uint32'), relay.shape_of(const_3664))) # shape=(945, 1)
output = relay.Tuple([uop_3651,bop_3666,])
output2 = relay.Tuple([uop_3651,bop_3669,])
func_3671 = relay.Function([var_3650,], output)
mod['func_3671'] = func_3671
mod = relay.transform.InferType()(mod)
var_3672 = relay.var("var_3672", dtype = "float32", shape = (7, 11, 7))#candidate|3672|(7, 11, 7)|var|float32
output = func_3671(var_3672)
func_3673 = relay.Function([var_3672], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3707 = relay.var("var_3707", dtype = "int16", shape = (7, 4, 5))#candidate|3707|(7, 4, 5)|var|int16
const_3708 = relay.const([[[-6,9,5,7,7],[-1,8,-7,3,6],[9,-1,9,4,9],[-9,-2,-2,-2,4]],[[1,-4,1,2,5],[9,3,-5,-3,2],[-6,8,9,9,-7],[1,-10,-6,8,-4]],[[-10,-7,3,5,-8],[-2,8,-6,-8,-10],[-8,4,10,9,-2],[1,8,-4,9,-10]],[[6,3,10,3,-6],[6,8,2,-3,-5],[5,-6,-3,5,2],[1,5,-4,-5,6]],[[1,-5,-3,-6,7],[-3,7,-7,-2,2],[-8,-1,-7,10,1],[-3,-10,-3,5,-1]],[[-1,7,4,10,-8],[1,7,9,-9,8],[-6,4,9,-1,7],[7,6,9,1,9]],[[2,-3,4,-3,-10],[-2,-1,-2,-6,-3],[5,-4,-7,5,10],[5,-4,1,10,-10]]], dtype = "int16")#candidate|3708|(7, 4, 5)|const|int16
bop_3709 = relay.right_shift(var_3707.astype('int16'), relay.reshape(const_3708.astype('int16'), relay.shape_of(var_3707))) # shape=(7, 4, 5)
func_1712_call = mod.get_global_var('func_1712')
func_1717_call = mutated_mod.get_global_var('func_1717')
var_3714 = relay.var("var_3714", dtype = "uint8", shape = (45,))#candidate|3714|(45,)|var|uint8
var_3715 = relay.var("var_3715", dtype = "uint8", shape = (135, 3))#candidate|3715|(135, 3)|var|uint8
const_3716 = relay.const([2.472402,2.446232,0.922522,-7.756345,-3.283478,-5.333936,-9.025126,1.048200,9.908131,8.995802,9.065033,6.321433,0.663165,0.197084,-5.715257,-6.884527,-7.050056,-5.349325,-8.196593,9.723604,-1.823859,5.521729,-1.090375,-6.105408,-0.730333,-5.981393,-0.934101,1.529334,2.760794,-7.458805,-3.637356,6.758657,-9.206065,-9.441974,-1.438654,-9.206543,1.759167,-4.778569,-9.067694,3.955237,-5.827698,-9.155765,6.980396,-1.659681,-8.968743,-1.354448,9.964585,0.647301,-9.001358,-3.019077,2.167792,4.074152,0.448577,-5.478525,-0.825657,-0.596457,-1.428409,3.403524,8.327922,-9.061409,4.941811,-8.549254,-8.892534,-4.464976,5.000265,-6.179043,1.744998,-3.089558,2.297026,-2.036475,-9.471499,-5.153747,9.607210,1.687272,-6.177412,-1.154733,-3.282888,-9.524851,-7.653926,0.078426,-9.067374,9.449890,2.435852,-3.023657,-2.582676,8.593750,3.934192,2.931645,7.800807,2.811483,-1.099632,6.567727,-3.898823,-3.552356,6.224151,8.288866,9.326937,7.773014,-1.553724,2.940582,3.107953,5.550928,-9.652569,0.070903,2.493523,8.793733,6.180417,9.335083,1.533651,-0.062744,1.700708,-4.078011,-1.397665,-0.180798,7.859644,-6.603957,-9.943114,0.467114,-4.764450,-6.488229,-5.740402,-0.758713,0.248980,7.828622,2.530860,4.301419,8.182617,5.583069,4.585349,-5.908481,7.534674,5.895104,3.125715,-4.896843,-6.583324,2.719865,3.017637,-2.844783,2.711520,2.506803,4.411417,-4.272675,-0.696780,8.103399,9.861925,-5.874426,-3.774302,-2.665411,-9.599106,0.297964,5.581209,7.412830,-0.984709,1.346745,-4.980357,-5.277904,7.427265,-4.152344,-5.802695,-5.425883,-8.619576,-9.372595,-7.209900,-1.242045,-1.235626,6.382549,-7.391404,-5.151425,-7.496591,6.498374,-1.127709,7.346956,-4.954824,9.400808,9.008896,-1.220371,-6.158231,-6.561831,1.579154,5.675259,-6.763823,5.599217,-0.660476,-6.605968,-7.669335,9.554503,2.556963,-9.352311,-1.378683,9.252208,0.129046,1.937035,-0.164965,3.577023,-9.148819,8.407204,4.704993,-7.521265,-0.996383,2.261487,-9.591244,8.545767,0.769300,0.884975,5.309154,8.817857,-9.220402,-7.547811,-7.421326,-3.146795,4.849847,6.139370,-1.212792,-4.065390,-2.224881,9.939300,-8.011355,8.480319,1.892840,3.987670,8.221451,0.272173,-0.068841,-4.077448,0.644396,6.777119,6.172760,-8.412740,-8.389204,-7.400844,-3.776354,9.653879,1.487373,-9.146840,5.580378,8.724499,-3.479492,-2.354679,8.522272,5.642117,2.943395,6.856608,6.781640,4.157085,-8.367019,5.742681,0.563827,3.947186,9.337895,2.319879,4.997586,7.643844,-4.617462,-4.051144,-2.174724,-3.085571,9.044018,-6.207019,9.007615,-4.633201,-9.967899,-8.012054,8.714345,-7.489184,8.343870,8.931266,-4.947767,-2.633418,3.885227,-9.789907,-2.401314,3.937670,-9.402990,1.931153,9.384857,1.273407,6.646937,-6.998667,9.506660,0.230335,-6.467367,-5.398865,5.056434,2.380870,4.285294,-9.545674,2.408034,5.032854,-6.386683,9.451464,3.596394,8.532011,1.132173,4.086352,-4.217233,9.634607,7.152890,9.929751,4.769165,1.140049,9.202442,-6.508405,-7.205489,-4.223833,-7.085033,-9.996483,2.944362,-8.781659,4.906670,1.663847,-7.600703,2.137475,-7.844626,-3.558358,0.416415,8.584400,-3.888207,3.335586,2.016195,8.738006,-6.135026,5.709743,1.139826,-1.420364,9.833112,-1.465407,-3.681326,-2.313658,-0.069949,-9.392968,-7.060180,-6.517604,-3.884699,3.342055,-6.760763,1.288900,8.723272,-3.722516,7.689805,5.749520,-6.774013,-3.573343,2.941883,-1.285585,-9.043219,-5.888756,-5.301687,2.548334,-5.709303,-7.426853,7.475453,7.605057,0.291432,4.722694,-6.972735,1.615749,-0.773173,-7.364159,-8.210005,5.419540,8.499488,-6.821937,7.063049,-4.737242,-9.220937,-1.820822,6.039049,-9.613127,4.654100,8.415819,6.968873,-9.213966,-2.231247,0.195233,0.164903,4.722890,-9.547733,-8.168412,0.260591,-4.684771,-5.911420,5.633910,-8.122013,-8.098280,3.196367,-7.270674,-4.199474,-3.032249,1.856514,-2.815583,2.598246,9.793218,2.807495,2.310704,3.992636,-2.298792,-4.224889,3.310129,-8.934106,-5.196211,5.413666,-4.619665,9.136318,-8.853353,-9.256746,-4.464502,3.514444,-4.448128,0.872706,0.392248,5.244455,-0.841626,-8.932571,-7.833584,7.491087,-2.803167,4.051396,6.973572,-3.773895,6.396087,-3.663364,-3.238706,-3.305078,-7.026220,-5.458769,-1.993955,1.483194,4.983431,-1.243327,-6.325519,-8.120583,-7.667068,0.610175,-7.357573,9.782309,8.787340,7.377410,3.811536,-4.107328,-0.527214,-7.959163,-8.712695,4.050143,4.287058,9.894142,-0.917227,-4.744717,-4.258763,-8.209762,2.757830,-2.636393,7.853043,-0.825201,3.209577,-1.918758,2.396669,-7.358652,-1.611692,4.169038,1.647830,-8.101421,-6.389398,-2.567127,-3.004548,-4.661138,3.720510,-3.634197,-3.530948,6.786669,2.013363,5.321164,-0.191878,-3.811541,-1.701299,-7.644207,6.622670,2.616854,-6.493520,-4.076262,-6.164567,-3.795204,4.309776,-3.382087,-1.931397,-4.676435,3.269098,-2.735189,7.064273,-0.484712,0.402996,-8.560425,5.227387,-9.458718,9.570482,1.105324,7.660348,5.724709,-5.133572,5.953199,-0.856726,5.826323,6.309173,3.209830,-5.153589,-1.466270,0.999658,-3.532022,-7.233527,-0.662403,8.847026,5.749753,7.748712,-9.041642,-0.626358,-1.251778,0.103223,-1.207191,-3.327017,0.093837,-4.720194,-8.844387,-9.952539,-0.973660,0.646933,0.296824,-0.169779,-3.145279,5.302091,-1.476673,-4.838906,-8.721934,-1.117078,-5.215512,6.251632,2.622374,-6.674389,2.474486,3.787931,6.408378,-7.661726,7.844453,-9.163269,-3.598165,-5.275786,1.674054,-5.109037,-5.435728,6.711002,0.151691,2.990481,-5.091593,-5.114844,-4.282282,4.979233,-6.872660,-3.465891,4.504068,2.585695,7.846796,-1.060369,-8.393120,-2.521237,6.681876,-7.116774,-6.255367,6.081133,4.489421,-7.482570,6.856137,3.737834,7.955592,-1.629478,-7.560627,5.117296,8.685703,2.378957,-0.723541,4.639168,1.963416,-9.811763,6.267224,-9.571049,1.612979,-0.550901,-7.514238,-1.998816,-1.918157,-9.480774,1.757969,-0.321253,4.551642,-3.667993,1.204946,6.936543,1.130789,8.224856,-4.647404,8.124818,-0.061502,-1.019621,-6.365887,2.969747,1.242995,0.698219,3.443085,-5.156384,9.706763,-0.141009,-8.001012,5.317066,3.989953,-8.423292,-1.591522,3.454440,0.013614,-1.982207,-0.067090,-0.484414,5.592012,-3.903196,8.317294,-0.207797,-8.388826,-8.393314,-2.388167,-9.043521,-0.509614,3.851011,4.324361,4.665640,7.582317,-7.056809,4.284889,4.066590,-3.494320,2.533016,-7.109308,9.744372,-0.982350,3.933233,3.593112,-6.380686,-8.964861,0.756192,-7.551232,1.557618,-2.160183,-7.319448,-4.822573,-4.577356,1.167704,5.971325,4.962230,-3.598888,-4.207477,6.497248,-3.068398,2.198059,2.529456,-8.898133,8.531149,4.864079,9.608612,-2.480517,-9.749528,-3.680645,-7.178367,6.389219,-9.132413,-6.191178,-7.244213,0.350447,0.368554,7.427443,6.202015,4.827590,0.310831,-0.217126,-7.634375,0.901908,6.946259,-9.565325,8.950184,-2.738598,-5.189337,-4.497392,-9.027654,8.994259,-9.081889,-0.004154,-3.254438,-4.586639,1.717002,-1.623196,2.580058,-2.017181,2.414468,9.865808,-4.266616,0.574139,-9.135227,9.715858,0.218691,-6.489499,-4.510775,5.745219,-9.748225,-1.959635,-5.244975,6.902022,-1.892632,-9.415810,4.389495,-9.018632,3.673077,-2.530562,7.702628,-1.378754,-2.089217,-2.202826,-2.848085,9.343652,-1.343050,-5.145063,-9.988069,-3.774794,2.403154,-3.139811,-5.846514,-7.638205,-7.687292,2.111744,4.380701,-3.933922,3.120231,-7.527750,-0.964401,-5.392138,4.102823,6.024620,8.943815,5.931822,5.838585,5.009117,-0.051988,2.916958,-9.662396,7.463477,9.685683,8.841875,-3.718627,-7.775366,9.098093,7.582237,5.484784,-4.471557,4.684035,6.656896,4.255152,-8.370674,-0.815148,0.408399,1.946288,-2.838425,-9.360566,1.976714,5.347899,-3.569738,-4.177132,-3.918332,-7.542540,-0.123435,-9.775474,-6.842104,-7.039416,0.531871,9.408599,6.607737,3.046994,0.131523,5.737765,7.578182,-1.401555,7.148399,5.831468,-7.394982,-6.093040,4.662446,-0.665902,3.024576,6.603952,1.810510,9.689691,6.560220,5.824582,-4.537719,9.799634,6.310044,6.847033,-5.367347,-5.542535,9.293350,-3.108905,9.342465,-9.188204,1.321351,-9.615513,-7.684245,-7.169110,-5.773703,-5.052157,-1.913534,-4.406938,3.266831,2.204851,8.992272,-6.524180,-7.492872,2.198824,0.894428,-1.757877,1.701534,-8.095251,-5.704699,7.338163,-7.878987,-5.926016,5.996163,-1.330574,-9.768903,8.240612,-9.741090,-1.254886,-1.630083,-3.106348,-2.682249,-7.412560,4.683096,5.054703,2.903825,8.127347,3.372867,4.451358,-6.313651,3.703134,1.743817,-9.773750,6.569637,-4.540908,8.581058,1.177187,-8.463957,2.194726,-6.734162,9.840496,-3.083226,6.861835,-8.713530,-7.092188,4.924352,-6.806587,-4.235343,-4.165474,1.888338,5.574526,3.128720,-1.741256,5.039798,-5.221007,6.255904,5.279101,-3.253880,2.159496,1.813275,9.333151,8.086941,6.518149,6.199557,5.541852,8.821681,5.524569,-1.559548,-3.790276,5.112793,9.453960,-1.959694,-8.128063,-6.379335,-4.722616,-9.587652,-4.765990,7.692588,1.665030,7.230198,0.465590,-0.079515,4.770934,3.309388,-2.497802,-5.645986,0.684134,-0.274292,6.556789,5.268569,4.080742,-2.024984,2.880342,1.049266,-6.729621,-3.957008,2.574373,-7.066744,0.362333,-0.548654,-8.800568,1.389282,-7.413491,-9.950352,-6.201577,4.601549,7.862335,8.436051,0.133725,8.171771,7.441072,4.885742,-3.873763,-3.266349,7.749681,9.828960,3.830942,1.757880,0.195723,-4.837413,5.925866,9.263465,1.042153,-0.152074,9.939909,-8.592499,7.290086,-2.139943,0.196881,9.011892,5.704211], dtype = "float32")#candidate|3716|(945,)|const|float32
call_3713 = relay.TupleGetItem(func_1712_call(relay.reshape(var_3714.astype('uint8'), [1, 5, 9]), relay.reshape(var_3715.astype('uint8'), [9, 5, 9]), relay.reshape(const_3716.astype('float32'), [945,]), ), 1)
call_3717 = relay.TupleGetItem(func_1717_call(relay.reshape(var_3714.astype('uint8'), [1, 5, 9]), relay.reshape(var_3715.astype('uint8'), [9, 5, 9]), relay.reshape(const_3716.astype('float32'), [945,]), ), 1)
output = relay.Tuple([bop_3709,call_3713,var_3714,var_3715,const_3716,])
output2 = relay.Tuple([bop_3709,call_3717,var_3714,var_3715,const_3716,])
func_3730 = relay.Function([var_3707,var_3714,var_3715,], output)
mod['func_3730'] = func_3730
mod = relay.transform.InferType()(mod)
var_3731 = relay.var("var_3731", dtype = "int16", shape = (7, 4, 5))#candidate|3731|(7, 4, 5)|var|int16
var_3732 = relay.var("var_3732", dtype = "uint8", shape = (45,))#candidate|3732|(45,)|var|uint8
var_3733 = relay.var("var_3733", dtype = "uint8", shape = (135, 3))#candidate|3733|(135, 3)|var|uint8
output = func_3730(var_3731,var_3732,var_3733,)
func_3734 = relay.Function([var_3731,var_3732,var_3733,], output)
mutated_mod['func_3734'] = func_3734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3886 = relay.var("var_3886", dtype = "int16", shape = (15, 8, 1))#candidate|3886|(15, 8, 1)|var|int16
var_3887 = relay.var("var_3887", dtype = "int16", shape = (15, 8, 6))#candidate|3887|(15, 8, 6)|var|int16
bop_3888 = relay.bitwise_xor(var_3886.astype('int16'), var_3887.astype('int16')) # shape=(15, 8, 6)
func_3730_call = mod.get_global_var('func_3730')
func_3734_call = mutated_mod.get_global_var('func_3734')
var_3916 = relay.var("var_3916", dtype = "int16", shape = (140,))#candidate|3916|(140,)|var|int16
const_3917 = relay.const([[6,-10,8],[-3,-7,5],[-1,8,2],[8,9,-10],[-5,10,9],[-1,-5,-8],[-2,-2,-1],[4,5,-9],[-3,10,9],[9,-3,9],[10,4,2],[2,5,5],[-2,8,-3],[4,-6,-10],[-4,-10,-7]], dtype = "uint8")#candidate|3917|(15, 3)|const|uint8
var_3918 = relay.var("var_3918", dtype = "uint8", shape = (405, 1))#candidate|3918|(405, 1)|var|uint8
call_3915 = relay.TupleGetItem(func_3730_call(relay.reshape(var_3916.astype('int16'), [7, 4, 5]), relay.reshape(const_3917.astype('uint8'), [45,]), relay.reshape(var_3918.astype('uint8'), [135, 3]), ), 0)
call_3919 = relay.TupleGetItem(func_3734_call(relay.reshape(var_3916.astype('int16'), [7, 4, 5]), relay.reshape(const_3917.astype('uint8'), [45,]), relay.reshape(var_3918.astype('uint8'), [135, 3]), ), 0)
var_3925 = relay.var("var_3925", dtype = "int16", shape = (7, 4, 5))#candidate|3925|(7, 4, 5)|var|int16
bop_3926 = relay.add(call_3915.astype('float64'), relay.reshape(var_3925.astype('float64'), relay.shape_of(call_3915))) # shape=(7, 4, 5)
bop_3929 = relay.add(call_3919.astype('float64'), relay.reshape(var_3925.astype('float64'), relay.shape_of(call_3919))) # shape=(7, 4, 5)
func_2683_call = mod.get_global_var('func_2683')
func_2687_call = mutated_mod.get_global_var('func_2687')
const_3951 = relay.const([[-4.025263,-2.007046,-9.114456,-2.405985,9.852776,9.475021,-3.958843,9.169361,1.737502,-5.887162,8.517028,4.452205,-1.141720,6.718925,-5.109481,3.509173,-5.639758,3.104592,6.668941,-9.797210,-2.493347,4.991601,-2.109972,-9.858816,8.536340,6.390431,6.202459,-7.135814,-0.141883,2.268673,-3.178804,4.999035,-0.895215,-4.264000,9.673930,-7.310948,-8.406933,-3.794949,9.402869,-5.900736,2.407878,7.039177,5.824260,-2.528065,7.856569,-2.223073,-4.484513,-4.205508,-7.318457,2.572406,5.415175,6.000275,2.937040,-0.268127,5.850926,6.167716,3.458429,7.572651,7.903555,-8.206959,9.624168,-0.071032,-8.329649,7.345074,7.507654,-5.157437,-4.610739,-3.503091,6.103619,-2.865543,-5.115979,8.758563,-4.796791,-1.397480,-7.914440,-6.223166,6.665395,-1.304572,-2.754348,3.968969,-4.113136,-4.869735,0.510439,-3.978335,-9.149637,2.236604,5.878085,-1.631914,-3.488934,3.999980,5.247600,-0.189531,-4.930569,-8.947697,-8.681510,5.343879,-3.912748,-4.034024,-2.901126,-8.071120,3.692305,5.345210,6.431567,4.622022,-8.205492,-8.387769,-8.013439,5.302864,6.112892,1.126446,4.814063,-0.879516,1.183623,2.016835,-7.113207,-0.083065,-7.934740,-4.585632,6.981016,9.513125,-3.115988,2.917772,-2.933482,6.440560,-8.037361,-4.600435,6.885755,9.252790,8.201808,9.262508,3.225001,4.621883,5.214492,6.671614,0.863294,3.550589,-5.433270,0.088413,0.023473,6.673667,7.818601,5.194573,-0.492439,3.063759,9.420083,9.624392,-1.435834,-2.785245,-6.267048,-0.186577,-0.050843,8.420203,-8.788844,-2.877532,-2.304317,-1.482068,9.327394,-4.769013,-9.841959,0.404620],[-5.516591,-1.239075,2.845146,6.960473,-7.904051,-8.467118,0.171463,-5.448356,-0.723392,6.717745,-3.364508,-5.084507,8.946952,0.479202,9.457630,7.824996,-5.636707,-4.340930,8.289074,7.545729,-9.462996,-6.896404,-9.554436,9.419187,1.711728,6.047420,-5.246178,8.385862,-0.217354,-8.061320,4.168626,-6.739355,3.594090,-0.543767,-3.983365,6.699299,3.316085,-9.252596,-7.970469,-3.007337,-2.128959,0.790758,4.147375,-5.501583,6.127803,4.827272,-0.378274,-9.426672,0.702471,-0.037871,4.922461,-9.413182,-3.779785,-6.644797,-0.720013,-0.472296,-8.554547,-8.916978,2.259336,9.002072,2.498263,8.956872,-2.715976,4.981118,-0.553155,8.457307,7.679967,-3.267938,-7.676034,-3.970747,4.114692,8.568552,-7.249425,-6.368191,-7.318452,8.880084,-3.652345,-9.920636,-8.874619,-3.101322,5.053492,-9.857510,0.511587,-1.297714,3.527518,7.536796,-0.663873,-0.908453,-0.858735,-5.975697,3.852905,-9.954442,-0.912908,-3.974754,-6.283523,-5.449165,5.760289,4.050359,0.674662,-1.061178,-1.226336,-6.553668,1.846104,-0.241899,1.220168,-2.613852,-4.558409,-0.106408,3.412592,0.527473,-2.009188,-4.296947,5.750168,-0.662185,9.660475,0.073888,-8.158399,-9.336726,8.769906,4.067552,2.278788,6.129511,-3.335434,9.531871,-6.578413,-9.178060,-9.909010,-9.109552,-1.126529,-2.078723,-0.625310,1.774043,3.849753,-6.880819,-1.045526,4.199529,6.994034,7.388634,2.952451,-5.866282,-3.784880,-7.268946,3.425877,-7.303211,4.624456,1.622256,-6.536007,2.609572,1.896407,-8.829097,7.429623,1.323494,-5.332107,1.289696,0.135161,-5.739293,-1.225095,-1.662994,3.468510,6.306152],[-4.886474,-5.275525,1.124658,-4.705474,8.783081,7.007624,5.248268,-6.326003,4.593190,6.057610,4.339870,-1.514184,-9.829565,3.726113,8.888818,-5.238058,8.748874,0.165201,-9.314549,2.132700,-2.158761,0.387670,-5.580523,-2.740032,3.984591,-2.361704,3.856595,-1.611597,-3.172280,7.240160,-0.357978,4.945739,1.062900,-8.736779,-5.492551,8.521599,-1.112812,-1.814141,-9.367051,7.825802,-6.272366,-3.374965,-7.793969,8.190612,-3.853402,1.688927,9.856039,5.068006,2.160498,-1.921931,8.739362,-1.672372,-2.375517,-7.390643,5.146511,-1.538671,-7.270612,4.141347,9.376882,3.037148,-8.493547,-7.465848,8.957571,-7.830111,-0.273326,-7.880865,-0.191690,9.801284,-2.677569,-2.348264,3.545321,6.058376,8.101498,5.452569,-5.170699,7.848147,3.929502,-4.241303,0.901269,8.240993,6.693480,3.918494,-0.587680,9.032372,4.318487,5.741455,-7.254793,-0.636507,4.478833,0.648680,-8.298070,-5.907431,-9.766228,-5.013435,1.543618,5.896869,6.915290,1.517143,-8.784077,-6.297502,-1.330954,-2.661203,4.389124,-7.768344,-4.336743,-4.672271,-2.745165,-4.461452,9.242724,-0.884481,-5.667076,4.317621,4.556874,-4.332375,1.782701,4.635369,-0.477632,8.916592,-6.105970,-6.599398,6.013226,1.374427,-8.392597,-5.422488,-9.128363,-8.079740,7.524046,-0.183990,-5.335302,-8.720126,-1.535865,5.218383,4.610909,-4.858552,4.793465,4.990590,8.977239,-9.854826,-5.175012,5.047055,-0.436440,-0.998023,1.115831,-9.137940,5.869878,-4.534064,-3.559084,-5.483088,-7.788548,4.488888,6.406712,-7.458145,8.673448,-8.461298,4.421078,-4.482246,-8.142125,9.092991,9.746356,2.185081],[-3.519767,-7.171317,-4.324050,5.021126,8.348190,-8.888978,2.501206,5.533374,3.492914,-4.540742,1.608638,-3.864256,5.614148,-2.320303,5.761617,3.235029,3.821500,-3.382033,-7.174723,-2.557046,-5.394775,7.101948,2.963118,-7.885358,-3.068509,3.219652,3.312094,4.824215,-2.522283,-7.343636,-9.584861,1.840291,5.195541,0.128695,0.548217,-9.862674,-0.524974,8.001309,-5.605601,-3.278406,7.276837,2.122174,-0.649625,5.509974,-4.574108,-8.049897,-3.454655,-8.526559,-8.354442,2.288996,3.544845,3.998312,6.401240,1.647708,0.303794,3.886428,5.661005,3.315004,3.517573,-2.843632,-4.036338,-7.218887,0.696600,8.490230,-9.198031,7.928829,-1.515527,4.824667,-5.179046,5.477391,0.133971,-1.496252,6.030178,-9.755052,-1.943988,-9.909735,2.940668,2.475254,2.457474,-5.824183,-2.566614,4.310322,6.578819,-7.910326,3.553913,4.547101,-0.081640,-4.930945,5.193124,8.601308,3.421690,7.296499,-4.575126,6.849070,3.766264,-1.824103,-7.320675,-0.583357,-6.522170,3.039976,-3.661515,-1.654684,-5.593664,2.780203,4.961201,3.044990,-8.178202,-6.896171,-0.225987,3.012587,4.972699,2.630505,4.015215,7.332166,-5.008069,-5.793201,5.041748,-2.308626,8.700913,-8.019110,-7.822126,3.721987,-7.902279,6.321054,-0.733844,-6.386265,-0.655181,4.837307,0.769227,-5.822706,6.036807,-7.681543,6.888873,-6.437917,-0.670744,-4.601629,-4.108233,-9.520821,7.414039,6.443848,-6.092603,1.980786,8.834049,-9.061302,-7.264032,7.386898,0.801970,-0.508820,-6.035133,6.865009,3.135406,1.549447,-0.631368,-0.599012,2.051356,2.607357,8.637345,8.838801,8.170626,2.495399],[-7.799801,0.682980,1.015001,-7.780944,-2.470934,-1.945229,5.393994,7.398776,0.026826,5.173952,-8.709741,-1.398817,-3.878023,-9.179723,-3.147345,2.902999,-8.251909,-2.296521,-6.472509,8.616314,6.775828,4.102326,8.258542,-3.099456,-2.671003,-9.065164,-7.966703,7.253495,-9.128421,-7.902408,2.168410,9.388989,-1.532851,8.372728,-3.386372,1.438643,1.935820,7.641660,4.194216,4.448644,9.320216,-0.110098,9.563808,-8.700948,-2.962042,-1.512699,-6.956873,9.717169,5.827785,-7.640289,-7.728424,2.964078,-3.178246,-2.748165,-5.590481,9.043786,2.722544,2.024394,6.645005,-6.167784,-2.417495,-7.621866,-5.121009,9.067237,-6.193475,-3.439451,4.664847,-1.001331,-7.561411,-3.314401,8.780394,-4.709442,3.706334,8.129790,-3.617206,-0.455700,-4.314146,6.660010,5.585596,-1.298962,-9.711519,-2.136940,4.729631,3.107426,4.406552,-1.777680,-0.995755,-4.176501,0.292498,-0.983261,8.758741,-6.100714,6.432307,0.283233,2.147610,0.009198,-4.135946,7.995628,-7.837097,9.763358,-5.946187,-5.399481,-6.081474,0.450006,-0.146564,0.835993,-4.244692,4.016685,-9.522104,-3.704700,9.421015,8.023981,4.444910,2.661510,-9.930122,-4.332489,-0.174985,6.280597,0.283605,-0.443285,-5.481415,5.631216,-6.518533,8.253113,3.363435,-2.982649,8.937092,-4.537927,-3.943358,-2.781689,-0.754707,-9.099458,-1.906931,-0.844570,-5.928939,6.316343,-7.421399,8.867337,-0.620033,9.993569,5.246047,-2.586112,-0.167375,9.376269,-6.871514,8.671458,-2.191653,3.963009,5.741517,-3.160311,1.818174,-5.413700,7.410599,-5.308671,-5.478848,4.859649,3.898234,-8.667948,7.811270,-7.174457],[-6.370547,-6.623032,0.458435,3.734733,3.438002,-8.720631,3.031256,8.079837,4.449625,-7.231142,3.104778,5.142341,1.195038,-8.962415,2.062468,-4.908588,-4.093716,9.263385,0.446378,-3.745259,-3.898992,3.207515,-7.839760,-7.054039,-1.788886,3.999865,6.532741,-6.812261,1.593684,9.676685,0.769273,-9.074397,-0.147198,-1.295274,-3.049918,0.922537,9.376176,-4.989330,6.789138,0.574134,-6.006647,4.789863,8.372038,-3.434497,4.492485,-5.578596,-8.948908,-5.724486,-2.594087,-4.576376,-5.646588,0.306798,-4.697180,9.212239,3.350237,3.989707,3.226371,3.726294,-1.239386,7.186529,7.169175,-9.663777,-8.984468,-1.226368,0.061952,4.847504,-7.572049,-2.301071,3.330815,-0.205011,-7.437606,-0.720174,8.489595,8.984113,6.789143,9.654859,-8.692227,-8.403145,-7.364705,6.213169,5.982882,0.743914,0.613508,-8.794572,8.940475,4.434869,-8.019696,-9.094537,7.323954,0.543893,-2.671976,8.823344,3.015552,-0.868099,0.524669,0.753594,-0.946471,-3.002570,-1.049487,-8.348732,-7.865259,-0.618308,9.551140,-3.466223,-2.552796,-7.933231,-9.678869,2.977524,8.532155,0.349239,9.995358,-6.549998,-3.526569,9.970426,6.955112,-9.945209,-5.074975,7.607614,3.582820,-9.897262,7.964352,6.726275,0.496577,5.798412,-4.422712,2.554008,-2.904115,4.412381,-6.562488,7.206377,6.141732,6.269954,-6.570455,0.780651,-8.761240,9.933717,-6.018180,2.536624,9.469211,9.525279,-0.748554,3.431777,-2.423678,8.581512,-1.940463,-4.712870,-2.422123,6.700522,-8.190380,4.165748,-1.759123,1.923203,5.795014,-9.124357,6.644964,-3.288218,-0.708098,-2.361448,-2.938636,-9.134027],[8.476551,-7.937832,-3.475630,-2.016873,9.407044,-5.536852,3.589670,-6.434427,-8.642193,0.109981,-6.852235,9.686820,-6.159247,8.798156,0.912127,7.557172,2.282780,7.834380,5.370542,-3.948432,3.225978,-9.659455,-8.084062,5.661375,-0.089785,1.197835,-9.569340,4.684846,-7.704676,7.767344,-3.747588,-1.119432,3.225121,-5.259315,-8.282672,4.087838,2.083654,-8.578005,-3.564378,-4.261174,-3.267124,-8.032347,1.092329,7.022496,-0.949243,1.595274,4.465756,-5.961476,7.231930,2.363331,-5.326828,1.278396,3.869760,6.834725,3.296641,-3.480055,4.187803,-5.696567,-8.105707,0.141337,0.142294,-9.656190,-3.061378,1.288170,5.275117,4.463075,8.241438,6.096124,-1.956219,-1.722662,-7.353269,-6.157155,9.161528,-6.942932,-9.225372,8.779308,4.929565,8.195585,-5.220161,5.246725,4.758059,5.606601,-2.137472,9.740574,-1.680725,-5.300512,-8.913341,-4.809009,-4.437082,-1.042822,-8.555674,-1.832574,7.216301,-1.366409,-1.892566,0.318653,-9.444606,-2.360244,8.553883,-0.872522,3.931878,-8.400233,1.072059,-3.390084,-0.678341,-0.172144,-5.212761,-4.477606,-5.176049,1.219957,-5.435087,3.132093,-5.723172,0.596908,1.722742,2.985664,7.569566,7.023041,-4.609481,-3.663515,-1.684219,-8.504362,2.094895,-8.277690,9.535017,-1.540284,-3.911314,-8.497417,8.881255,-4.642622,0.008457,6.013900,4.816803,8.696642,-2.730946,-6.579484,8.934543,4.168490,8.020396,-3.161306,-5.204697,9.355368,-1.768971,1.174791,9.421824,7.132301,7.522602,1.669432,4.952323,-6.930828,-7.215331,-3.495739,7.741690,-8.988223,0.690708,1.262243,0.963634,-4.349148,8.308652,6.654194],[5.986064,8.770293,-8.604660,2.190707,-2.939897,2.722416,1.408901,-2.803440,-1.126793,7.430958,0.467873,1.634799,7.249743,7.238599,7.087202,-4.703459,5.213691,3.057747,-1.317737,8.677104,-6.051867,-3.135788,-0.268340,1.867993,1.540908,-7.968468,9.272974,-0.612063,6.692367,3.171940,-2.242338,7.421053,-5.948089,0.575243,4.604328,8.130487,-8.693028,7.932432,-1.460346,8.227095,-8.726831,-8.435292,1.265134,-8.192484,-8.277747,0.260886,7.665029,-8.152609,9.403267,4.011926,-4.655906,-8.270200,-1.782969,6.215059,-7.781363,-7.714462,-1.531310,6.688671,6.859880,-5.829079,5.111741,8.150883,-0.714618,-9.974275,0.427592,3.811303,-3.163763,-9.105386,6.635424,7.774649,-3.691342,-9.745544,6.965185,-4.842971,-9.682555,-8.249664,-6.340355,-6.485716,-7.886631,-6.915699,-1.672848,8.366864,-7.320785,0.867000,-3.336693,8.636324,4.288601,1.557407,1.947620,1.954048,6.469354,-7.573631,2.625452,-7.168250,9.705589,-8.648718,-0.564803,2.918247,3.396037,3.867596,5.366729,0.898676,-7.897427,7.685083,-6.028064,3.873793,7.567823,-0.539588,6.743406,-9.634407,0.492172,-0.704131,-4.437711,-2.787007,0.504332,9.546051,5.144870,2.691095,-0.496377,6.086487,7.172218,-6.304063,-9.643304,-1.349636,5.585256,6.428210,3.548606,3.227902,5.477575,0.398387,1.561179,4.551311,9.793992,-7.371005,-0.251060,8.063419,9.357129,-2.281023,-5.738915,5.900200,1.816673,-1.361162,-5.533745,-6.389840,-6.599388,-2.719042,4.591565,-3.959970,-8.975272,-9.004823,-8.488097,0.965638,1.620073,-8.674553,-0.834727,4.819193,-5.765559,-3.788293,0.157692,-1.256747],[-3.841576,7.179724,-7.513564,0.732583,7.315680,1.320127,8.278100,3.589412,-2.947485,-1.583599,1.552079,-9.054911,3.780266,-8.512431,-4.973456,-0.336098,-1.641388,-1.160846,4.385513,1.296262,9.932552,5.763056,3.394397,3.317516,-9.214029,-0.785526,6.539178,3.408397,5.286077,-1.846243,-6.224639,1.484314,-9.562891,9.885340,5.996949,-9.621148,-9.764505,7.465187,-6.228913,6.898235,-3.948008,-5.528876,4.108997,-7.069977,-9.462886,-6.019399,-3.107407,8.269030,0.772370,-8.492284,4.204218,2.874981,-3.609098,-4.305633,7.338161,1.726795,5.896716,2.761265,3.196684,-1.442526,-2.182587,-2.653739,-8.768991,-0.093906,0.254312,-4.805312,0.253965,-3.873407,-3.380604,8.242215,-8.336195,5.853560,-8.620761,-5.536429,-9.172027,7.443305,0.595349,0.522298,2.839692,1.388581,6.940194,-5.313097,5.997456,-2.084534,8.152561,8.638672,2.760049,8.449034,-6.814577,8.772250,-0.917195,8.215137,0.046585,3.388604,-3.268986,2.276484,-8.030034,8.016297,-8.667875,5.823712,8.794110,1.047672,9.074648,-2.129038,0.303865,6.488892,1.628999,2.750528,9.550627,1.223196,-1.581390,9.654023,-0.727576,-3.176101,8.045238,-4.802381,8.637035,5.512577,3.536241,-1.874771,8.389936,-6.766376,-2.698569,2.738306,3.955323,-0.649061,1.420479,-7.247895,-1.588429,-7.099351,1.513042,-1.907189,1.605809,1.779188,0.758149,2.948280,5.556940,9.840765,1.311666,-1.695287,-1.942502,-3.945969,-9.111380,1.756670,-2.360997,-4.887576,4.849328,-7.335107,-5.815738,2.426510,5.141771,4.959578,-3.729269,-3.908745,8.464868,-2.365965,5.808228,-6.349835,-4.963155,-5.078410],[7.134131,-8.364781,4.483802,5.449113,-1.257659,-8.247821,8.063862,2.341672,-7.459917,-7.830512,-9.391863,8.509328,6.355822,2.599492,-9.607143,-3.404077,2.493744,-7.782687,9.556617,-7.964117,-6.504194,5.547530,-4.261605,7.642791,2.039351,4.283657,8.620413,8.689637,-8.005775,-6.590668,6.180931,-5.192009,2.704220,7.701511,8.629090,-2.356983,-5.212102,8.242358,-6.668883,-2.910386,-4.138047,6.028169,-7.645020,1.441943,-1.609832,7.431634,-0.110237,-9.120581,-6.685308,2.731710,2.943786,8.483550,8.340581,9.631920,-2.254216,7.733218,7.186617,-1.998972,-8.181717,-0.530741,3.381011,-5.053021,2.927203,3.383790,-0.455062,4.222139,-4.563735,-7.049216,-9.876377,-6.752353,6.142638,1.496203,-9.462917,-2.406417,2.264503,8.567774,5.794404,6.458515,-5.380105,-6.976945,8.114919,2.623369,0.943729,7.244782,5.188471,-5.787884,-5.220510,9.780510,5.161822,2.943860,-5.459868,0.619228,-4.274620,-7.307914,5.647964,9.809207,0.223811,-2.325199,-2.686862,-5.046602,7.108280,-7.398449,-2.840133,8.343666,-1.548187,1.380304,3.935875,-8.304214,5.999260,8.274141,7.479070,5.485601,2.714211,8.274805,8.321077,4.500943,-4.020025,-4.570967,9.958085,-1.505627,-7.669555,-9.076532,-2.030882,9.137737,1.912050,-9.442744,-8.637267,9.545896,-9.202296,0.223240,-9.402936,-5.513722,7.378546,-9.937475,-6.257149,-0.555559,-0.569826,7.195803,6.942164,-5.054430,0.513591,1.024299,-4.195807,5.762827,-4.217034,-3.758957,4.331171,5.622277,-1.116427,9.261504,3.862052,6.382720,-9.079312,-0.766714,-3.638357,-8.047054,-5.304403,2.331641,8.483856,8.211050],[1.448071,-0.246120,-2.653302,7.334813,9.343729,-9.845089,-0.776177,-2.887462,-0.994190,-9.240350,5.542092,-1.292357,8.148784,-0.715205,-6.459227,-8.707959,-3.520921,-2.980040,-6.283695,8.625032,-7.566303,-7.923342,2.260393,1.831075,-3.573598,-7.981831,-4.175131,5.665880,-4.154386,-6.932225,6.797634,3.121440,-2.712793,-4.501719,6.326406,-0.599462,2.233284,9.132656,-1.184754,-6.637861,-2.090306,-7.097795,1.407060,-2.186001,-7.364969,-5.740080,3.908484,6.489831,4.612526,4.861870,1.183131,-5.472095,-6.780891,4.379356,-8.705033,9.295611,9.738713,-6.007861,8.127370,-6.176395,5.090128,1.563908,-2.359815,-7.796305,3.588091,7.476607,-8.909309,8.705189,8.340480,1.839979,2.753249,-4.579606,-3.417223,8.610618,-7.726403,8.622878,5.461315,-3.508402,5.936554,4.616723,-9.549088,7.816546,8.645985,-0.046267,-5.760469,-4.749415,-4.811466,-8.888830,4.873474,7.874298,2.026074,-4.003051,7.898499,9.371308,2.547644,4.345473,6.514074,-0.203523,-6.057989,9.997807,-9.198958,-4.105458,-3.310188,-0.352016,-0.219340,7.576949,-6.362800,-8.673721,6.947622,4.022829,3.479130,-3.028527,9.455835,3.146826,2.906711,-3.741717,-8.828323,6.655171,2.513257,4.256334,4.665761,-2.135695,-9.852217,6.415047,-3.159995,-4.976785,-9.637634,-5.149644,-3.818289,0.951406,-8.059877,5.632581,-8.492801,6.118107,-9.337004,6.994348,-8.997868,-7.659993,6.991436,-7.356584,-4.162171,1.718586,9.741561,-2.559730,1.745288,-8.117663,-8.708289,-9.433138,-7.175727,-2.260336,-2.903810,-3.066454,2.793104,1.882322,-7.783014,-0.248940,1.889037,7.165537,4.945032,-9.502300],[6.750678,-9.546060,-1.059750,-7.620329,4.141470,-2.880118,7.209647,-0.664853,4.421472,5.847354,3.510012,-4.687214,6.846378,5.791413,8.605782,7.833572,-7.089817,-9.721227,-3.640122,2.695656,-3.916611,-2.477359,-3.833299,-1.000513,-2.384562,-1.944876,-8.613406,-4.797086,-9.371529,-1.023008,5.722626,8.570743,-7.685420,3.800192,-3.685609,-8.213929,-2.290799,-6.147882,7.600329,-7.237197,-3.195008,1.000812,9.822652,-1.205363,5.409114,2.649149,-0.820854,6.099540,4.294894,-1.111843,5.890874,-4.445416,0.779638,7.579880,6.794124,-0.303872,-6.015875,-6.137999,-4.916836,2.370042,-3.551627,-1.912508,7.117413,3.656743,-1.855593,9.687415,-6.901629,6.416802,-8.071656,-2.203357,-4.739331,-0.765180,-2.303389,-3.417343,0.581079,-8.646538,4.564727,0.413406,-2.763247,4.286879,-1.245571,9.177701,-7.976772,-5.912713,7.816048,-9.357809,9.174729,-6.660894,-1.539950,-6.416698,-1.653408,4.845732,-5.505135,0.920248,2.114066,9.858950,5.347569,-7.449387,-1.687989,-4.205595,1.226763,0.769935,8.913917,-2.031224,0.663034,-6.231939,8.903242,9.833304,-0.654537,6.488284,0.347659,0.758135,4.034296,-0.962285,-1.515267,5.748386,1.343946,-4.843955,-2.625109,-3.369854,-3.754470,9.172432,-1.900718,1.166068,9.170888,-9.914584,3.202472,7.996436,9.562336,-8.222734,6.213624,9.043322,0.705703,4.489187,-8.209253,1.722644,-1.631322,3.092402,4.655086,7.876143,6.182811,9.308012,4.374002,6.886419,-3.116794,-7.055805,3.156829,-5.741697,-0.508283,-7.645967,-3.279444,2.219598,-5.479880,3.643202,1.065066,0.051017,2.159111,1.390089,1.836169,8.797328],[8.411357,8.446463,-4.055415,5.442135,-2.252618,7.201005,8.162096,0.646626,1.226863,5.138875,-9.940555,4.237478,5.904296,-1.069743,1.242816,-4.819010,-5.905296,4.508080,1.437264,4.948828,-2.627703,-7.866455,0.302466,-4.356950,2.506625,5.887112,-8.435619,8.661747,9.038442,-2.336101,9.282231,8.790854,3.450804,-3.256235,0.199266,-7.479598,9.568863,3.049508,-4.157533,6.413613,3.892288,0.109899,-2.766568,2.726262,4.385781,-5.746737,-0.366171,-9.249001,7.024968,9.035631,-0.736355,-4.293738,-8.046700,-2.573889,2.371249,-3.540211,-2.269392,-2.617089,-7.095709,-1.326367,-1.946829,6.529826,7.582902,-2.715449,-0.248873,5.311899,7.261561,-1.220815,-9.006901,-7.721339,5.748294,-9.454479,3.471043,-0.731709,0.884049,1.183026,6.231189,-3.002487,-5.342207,2.404281,-5.157539,3.686480,4.091454,-8.912415,-8.793656,6.002886,5.505240,3.605228,1.998359,9.893843,-1.962876,-6.007589,3.996448,-0.269331,7.446999,-9.371783,7.623362,6.339389,-7.271828,-4.974187,-6.016234,-1.237151,1.148234,-9.820568,4.392180,7.151393,-2.589687,5.634242,5.463139,7.629141,-5.840422,-8.574759,0.976048,-9.779341,3.443101,-7.499599,-0.554781,-8.232124,-5.626788,-9.953891,-4.657277,-6.384115,6.605814,-7.842867,7.829204,3.067150,1.448466,4.259160,1.431245,-9.909982,-1.790860,6.064205,7.944480,0.115519,-1.709603,2.377000,6.558942,-3.098987,-1.465969,8.837787,-4.064725,1.364211,6.814527,1.614101,-9.031179,8.805597,-3.082640,0.585160,-1.966444,-7.076187,5.123285,7.152845,3.433690,0.456685,-7.270930,5.105859,-0.476701,1.898853,-0.284932,-4.889468],[-0.078630,2.858134,-5.115535,1.661156,7.563465,-5.585652,1.642693,-6.924729,1.891313,-4.741615,-2.362946,-4.901126,-1.619506,-6.007384,-8.106043,6.710294,8.141247,-1.176103,-5.894669,-0.087515,9.676756,-2.419516,3.534772,9.654626,-6.182464,-7.460811,8.037962,1.637706,-0.440693,-4.424568,7.501669,-2.243857,3.553618,-7.822178,-2.595079,5.900575,1.489283,-9.852441,-3.874492,0.981363,-9.195689,-8.762690,2.476313,9.581178,0.960777,-9.827887,-2.147722,5.034307,3.761262,2.057965,5.982690,4.430479,-4.439152,7.230305,5.299776,7.189400,-3.987399,-3.297288,-2.507906,-9.698903,2.822591,-1.800618,3.917174,2.999233,3.727516,-1.560237,-7.862465,-1.421608,7.757588,2.293854,-6.556028,-4.416523,-7.348121,-4.845950,3.801069,1.635861,-7.942215,-8.292486,6.940060,-4.324223,-0.065683,8.700928,2.739255,5.245793,6.094943,6.835240,2.738231,9.577435,-1.007142,-4.194869,-6.723422,5.980741,2.500896,-1.278609,1.778571,-3.516100,7.894013,-8.415809,8.058865,7.386560,5.367782,-9.630344,3.326100,-9.563705,-6.560104,4.555905,-8.058297,4.600185,-1.676699,5.759950,-2.148685,4.251635,4.872317,-3.825079,3.230112,-1.755848,7.837778,2.850944,-6.085356,-5.578564,8.465200,2.020254,-9.052802,0.501775,-8.590732,9.556768,-5.784207,-0.133400,-7.330638,-2.414566,-5.363944,-8.995320,-6.726642,-9.272365,-8.394474,0.161501,-6.086974,5.027362,9.655526,4.636106,1.946842,-0.256150,0.562200,-0.378649,-3.432856,6.300474,3.702045,-2.134653,-0.332094,-4.649426,4.777836,-5.933823,-2.958786,5.213207,-7.954137,0.058080,4.684116,-1.363984,-4.065750,-4.656504]], dtype = "float32")#candidate|3951|(14, 160)|const|float32
call_3950 = relay.TupleGetItem(func_2683_call(relay.reshape(const_3951.astype('float32'), [16, 10, 14]), relay.reshape(const_3951.astype('float32'), [16, 10, 14]), ), 0)
call_3952 = relay.TupleGetItem(func_2687_call(relay.reshape(const_3951.astype('float32'), [16, 10, 14]), relay.reshape(const_3951.astype('float32'), [16, 10, 14]), ), 0)
func_3730_call = mod.get_global_var('func_3730')
func_3734_call = mutated_mod.get_global_var('func_3734')
call_3969 = relay.TupleGetItem(func_3730_call(relay.reshape(call_3915.astype('int16'), [7, 4, 5]), relay.reshape(const_3917.astype('uint8'), [45,]), relay.reshape(var_3918.astype('uint8'), [135, 3]), ), 0)
call_3970 = relay.TupleGetItem(func_3734_call(relay.reshape(call_3915.astype('int16'), [7, 4, 5]), relay.reshape(const_3917.astype('uint8'), [45,]), relay.reshape(var_3918.astype('uint8'), [135, 3]), ), 0)
func_2683_call = mod.get_global_var('func_2683')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_3973 = relay.TupleGetItem(func_2683_call(relay.reshape(const_3951.astype('float32'), [16, 10, 14]), relay.reshape(const_3951.astype('float32'), [16, 10, 14]), ), 0)
call_3974 = relay.TupleGetItem(func_2687_call(relay.reshape(const_3951.astype('float32'), [16, 10, 14]), relay.reshape(const_3951.astype('float32'), [16, 10, 14]), ), 0)
output = relay.Tuple([bop_3888,var_3916,const_3917,var_3918,bop_3926,call_3950,const_3951,call_3969,call_3973,])
output2 = relay.Tuple([bop_3888,var_3916,const_3917,var_3918,bop_3929,call_3952,const_3951,call_3970,call_3974,])
func_3982 = relay.Function([var_3886,var_3887,var_3916,var_3918,var_3925,], output)
mod['func_3982'] = func_3982
mod = relay.transform.InferType()(mod)
var_3983 = relay.var("var_3983", dtype = "int16", shape = (15, 8, 1))#candidate|3983|(15, 8, 1)|var|int16
var_3984 = relay.var("var_3984", dtype = "int16", shape = (15, 8, 6))#candidate|3984|(15, 8, 6)|var|int16
var_3985 = relay.var("var_3985", dtype = "int16", shape = (140,))#candidate|3985|(140,)|var|int16
var_3986 = relay.var("var_3986", dtype = "uint8", shape = (405, 1))#candidate|3986|(405, 1)|var|uint8
var_3987 = relay.var("var_3987", dtype = "int16", shape = (7, 4, 5))#candidate|3987|(7, 4, 5)|var|int16
output = func_3982(var_3983,var_3984,var_3985,var_3986,var_3987,)
func_3988 = relay.Function([var_3983,var_3984,var_3985,var_3986,var_3987,], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4037 = relay.var("var_4037", dtype = "int32", shape = (16, 15, 5))#candidate|4037|(16, 15, 5)|var|int32
var_4038 = relay.var("var_4038", dtype = "int32", shape = (16, 15, 5))#candidate|4038|(16, 15, 5)|var|int32
bop_4039 = relay.add(var_4037.astype('int32'), relay.reshape(var_4038.astype('int32'), relay.shape_of(var_4037))) # shape=(16, 15, 5)
func_1436_call = mod.get_global_var('func_1436')
func_1439_call = mutated_mod.get_global_var('func_1439')
const_4049 = relay.const([[-10],[3],[4],[-8],[4],[-10],[7],[5],[-5],[3],[-8],[3],[2],[4],[1],[-2],[10],[3],[-1],[-1],[-7],[4],[-5],[5],[8],[8],[-5],[-1],[1],[1],[-1],[5],[10],[-7],[10],[-8],[1],[1],[10],[5],[-6],[-8],[-4],[-9],[6],[10],[-5],[-1],[4],[-6],[6],[-1],[5],[-10],[-8],[5],[-8],[6],[-1],[10],[7],[5],[5],[-4],[3],[-5],[-5],[3],[-8],[7],[10],[3],[-6],[-3],[-6],[-6],[-10],[-4],[8],[6],[-10],[-8],[9],[5],[6],[5],[-5],[-5],[7],[-9],[10],[-5],[-6],[-7],[-7],[-6],[6],[-1],[7],[4],[1],[3],[-10],[-6],[6],[-10],[-1],[-7],[2],[-5],[-9],[-7],[7],[3],[6],[-9],[-7],[-3],[-1],[-3],[-6],[-3],[8],[8],[-6],[-10],[-4],[-3],[4],[4],[3],[9],[6],[-6],[2],[-3],[-2],[7],[-10],[1],[-8],[2],[-7],[2],[1],[5],[9],[-4],[5],[1],[-1],[8],[-5],[-5],[-2],[1],[-7],[-1],[-8],[-6],[-10],[4],[5],[2],[10],[-9],[-2],[-4],[4],[9],[6],[-5],[3],[-7],[-10],[1],[-6],[-9],[1],[-2],[7],[-1],[2],[3],[7],[-9],[4],[-5],[-1],[-7],[7],[-1],[10],[-5],[1],[3],[-3],[-6],[-2],[-1],[5],[-1],[4],[-3],[10],[6],[-7],[-2],[6],[2],[-7],[7],[9],[-6],[-4],[-1],[7],[-7],[2],[7],[-1],[1],[1],[7],[-5],[7],[3],[-3],[-9],[5],[-4],[-4],[10],[3],[1],[-4],[-1],[2],[-2],[-1],[7],[-8],[-2],[-5],[10],[6],[-8],[-6],[-2],[-10],[6],[-5],[1],[-1],[8],[8],[8],[6],[-7],[-2],[-10],[-10],[9],[-7],[-2],[3],[-1],[5],[8],[4],[5],[-1],[-6],[-6],[-7],[9],[-7],[6],[-2],[6],[-9],[1],[7],[-3],[1],[-1],[7],[-1],[9],[7],[6],[-3],[-4],[8],[3],[-1],[-10],[4],[10],[2],[-3],[8],[-5],[7],[6],[9],[-2],[4],[3],[-4],[-3],[9],[-1],[3],[-10],[-3],[-8],[-5],[1],[8],[-5],[-1],[1],[-3],[-9],[-1],[5],[-8],[-4],[-8],[-5],[-7],[3],[7],[-3],[-3],[-2],[-5],[2],[-9],[6],[3],[-1],[8],[1],[-2],[-6],[-9],[-3],[2],[9],[-4],[4],[6],[-1],[8],[5],[9],[-4],[3],[-2],[2],[-4],[-6],[7],[-2],[-7],[-1],[-10],[-6],[-2],[-8],[-6],[6],[5],[-7],[-4],[4],[2],[-6],[-2],[-7],[-7],[-8],[5],[-5],[10],[5],[10],[6],[-3],[-2],[-2],[7],[-8],[2],[1],[9],[-8],[-4],[2],[-10],[-3],[-8],[8],[-10],[-9],[-8],[-9],[-6],[9],[-9],[9],[-8],[-6],[10],[4],[-2],[-6],[-1],[8],[-7],[-6],[-1],[-1],[-3],[7],[1],[-1],[-3],[-5],[-9],[-2],[7],[-3],[4],[2],[8],[6],[2],[-6],[-8],[-9],[1],[1],[-1],[6],[5],[-8],[9],[1],[-3],[-5],[-10],[2],[-8],[6],[-3],[8],[9],[7],[-6],[-7],[-4],[3],[8],[-7],[8],[6],[2],[-9],[8],[8],[-2],[-7],[-6],[10],[-1],[4],[4],[1],[5],[5],[-9],[-1],[-8],[-1],[6],[2],[-8],[1],[-5],[-7],[-6],[4],[-2],[1],[10],[-9],[6],[-1],[-8],[3],[-4],[4],[-3],[-5],[3],[-5],[-4],[-10],[3],[-2],[-9],[3],[10],[-10],[-6],[6],[7],[9],[4],[8],[-7],[10],[-3],[8],[4],[-8],[-2],[8],[5],[-2],[-2],[-9],[8],[-1],[-4],[-10],[6],[-10],[10],[5],[-7],[-9],[-4],[-1],[-7],[-9],[1],[10],[-8],[2],[1],[-2],[-1],[6],[-2],[7],[1],[-10],[-1],[5],[-6],[-6],[2],[8],[6],[3],[1],[-4],[10],[6],[-8],[3],[7],[8],[4],[7],[-6],[7],[-9],[-10],[-5],[2],[-8],[10],[6],[-2],[-7],[6],[8],[-3],[7],[-4],[-2],[-3],[-6],[-8],[5],[8],[-8],[-3],[-2],[-9],[-10],[2],[-10],[4],[-4],[-2],[-9],[-9],[-5],[-7],[9],[-4],[-2],[3],[2],[3],[-8],[-1],[10],[8],[4],[-2],[5],[10],[-10],[-10],[10],[8],[-1],[-6],[-3],[-4],[-3],[-3],[-2],[9],[-3],[1],[-2],[-7],[5],[1],[-3],[7],[-10],[-6],[3],[-5],[-7],[-1],[9],[7],[9],[-9],[-10],[-3],[-6],[-2],[5],[-1],[-4],[1],[-9],[6],[-5],[6],[-5],[8],[-4],[4],[5],[-9],[-4],[-8],[-2],[-6],[-7],[6],[3],[3],[8],[-4],[4],[-8],[-10],[10],[-2],[4],[2],[4],[2],[2],[7],[7],[-1],[8],[2],[2],[-5],[-2],[-5],[-8],[-3],[-2],[6],[-1],[-8],[-2],[-5],[6],[1],[-5],[7],[9],[-10],[-7],[-5],[-1],[-9],[5],[8],[8],[3],[2],[-10],[3],[-2],[4],[-8],[1],[4],[-2],[-5],[9],[-3],[-1],[-2],[-9],[-10],[-10],[9],[2],[2],[1],[9],[-7],[-2],[-1],[-1],[10],[7],[-6],[-2],[-4],[10],[-3],[-9],[-10],[-8],[-2],[-7],[-9],[-9],[3],[-1],[3],[4],[-6],[8],[9],[6],[-7],[-6],[8],[10],[-3],[1],[5],[2],[-10],[-8],[-2],[-4],[-9],[10],[10],[-1],[-3],[-6],[2],[-10],[-4],[-7],[-1],[-4],[6],[3],[6],[-8],[-2],[4],[-4],[-1],[-3],[7],[2],[10],[-10],[-2],[10],[3],[-9],[3],[6],[10],[-8],[1],[9],[-1],[8],[8],[7],[5],[-7],[-10],[4],[10],[-10],[9],[-4],[5],[3],[-6],[-10],[5],[-4],[10],[-10],[-9],[-4],[3],[-2],[3],[8],[9],[1],[4],[2],[6],[-6],[1],[-3],[3],[8],[2],[1],[-1],[-2],[5],[8],[-4],[8],[7],[-9],[-3],[4],[-6],[5],[-2],[-1],[6],[-2],[5],[3],[6],[5],[-4],[-7],[4],[-2],[10],[1],[4],[-3],[-8],[3],[-6],[-10],[2],[2],[7],[-7],[2],[-10],[9],[-1],[1],[-3],[9],[-3],[2],[-2],[-4],[-1],[8],[-4],[3],[-5],[-5],[-9],[-10],[-1],[4],[6],[-4],[2],[-9],[-6],[7],[-9],[1],[9],[5],[6],[1],[-2],[8],[10],[9],[-7],[8],[-1],[-6],[-2],[-2],[-9],[4],[-6],[-3],[7],[-10],[3],[-2],[1],[-2],[6],[-10],[7],[-4],[10],[-9],[1],[-6],[-2],[-3],[-3],[8],[2],[10],[3],[6],[1],[8],[3],[-8],[10],[-9],[-1],[-1],[-3],[2],[7],[3],[-1],[-5],[-6],[6],[6],[-7],[10],[1],[3],[2],[-4],[-4],[5],[-5],[7],[-4],[-1],[-3],[-9],[-4],[6],[3],[7],[5],[-3],[-1],[-8],[-5],[3],[7],[-8],[-8],[-9],[7],[9],[2],[-5],[1],[-8],[-9],[1],[-7],[-6],[-6],[-2],[1],[-4],[-2],[10],[-1],[-3],[4],[6],[7],[2],[-5],[7],[-4],[4],[-4],[-2],[8],[-5],[-9],[10],[-4],[2],[8],[-5],[-4],[-2],[-8],[10],[-1],[-1],[-3],[-1],[-1],[3],[-3],[-9],[-5],[-7],[1],[-1],[-7],[-1],[-9],[-10],[-7],[5],[-3],[3],[7],[3],[9],[7],[5],[9],[3],[10],[-3],[8],[3],[-2],[8],[2],[-8],[-7],[-9],[2],[-6],[-1],[10],[8],[2],[-7],[8],[6],[-5],[4],[6],[5],[9],[8],[4],[-5],[9],[-1],[8],[4],[7],[4],[9],[9],[-8],[7],[10],[-7],[-6],[8],[-5],[2],[1],[-2],[-5],[10],[2],[-7],[5],[6],[10],[-7],[-7],[-9],[1],[5],[-2],[-1],[10],[-3],[-2],[7],[10],[6],[2],[9],[5],[-4],[2],[5],[1],[-1],[-9],[-6],[-6],[6],[-4],[5],[-8],[9],[2],[6],[6],[2],[-1],[3],[-9],[7],[-9],[-8],[3],[-4],[-6],[-1],[9],[-8],[2],[10],[2],[-7],[-1],[9],[7],[9],[-8],[-10],[1],[-8],[-4],[-3],[10],[5],[5],[-9],[-9],[4],[-7],[1],[8],[9],[-7],[4],[6],[4],[10],[-4],[-3],[4],[4],[7],[-10],[-5],[-3],[-2],[-4],[-6],[1],[-8],[-4],[6],[4],[-6],[-8],[-4],[-4],[8],[-3],[10],[9],[6],[2],[-6],[-4],[1],[-9],[-1],[8],[9],[-8],[10],[6],[-3],[-3],[5],[-6],[5],[5],[-2],[-6],[-6],[-9],[-7],[6],[2],[-10],[3],[2],[-5],[2],[7],[10],[-5],[-5],[-3],[-9],[5],[8],[4],[-9],[6],[-1],[-5],[9],[-6],[-7],[9],[6],[2],[1],[2],[6],[8],[9],[-8],[2],[-10],[-6],[-4],[7],[8],[-4],[3],[10],[-1],[3],[-3],[-1],[5],[-6],[-2],[8],[9],[-9],[9],[-4],[9],[-3],[-2],[-8],[-8],[-6],[-3],[3],[-9],[-2],[5],[-3],[4],[-9],[7],[9],[3],[-6],[6],[8],[8],[4],[-5],[9],[6],[-6],[-1],[-7],[-2],[-7],[2],[-3],[-1],[2],[5],[-3],[5],[2],[6],[5],[3],[3],[2],[-9],[6],[1],[6],[-5],[-3],[4],[6],[-10],[-7],[-3],[4],[-3],[9],[10],[-7],[6],[-7],[-3],[1],[9],[2],[1],[-1],[1],[3],[-8],[-1],[-7],[8],[4],[8],[-1],[4],[-7],[-10],[8],[-10],[-10],[-2],[-8],[4],[-6],[-1],[-7],[-10],[-4],[-10],[-3],[-7],[-3],[9],[-10],[2],[9],[-10],[1],[-6],[-1],[9],[6],[1],[-8],[-5],[9],[-3],[10],[4],[10],[-10],[2],[-7],[4],[-1],[2],[4],[-9],[-8],[-8],[-10],[-6],[9],[-7],[-3],[-9],[-6],[-3],[-5],[8],[-1],[-5],[-8],[2],[3],[-8],[6],[8],[-9],[-8],[-1],[-7],[9],[2],[6],[-9],[-10],[-4],[7],[4],[-5],[-3],[-8],[6],[-5],[2],[-1],[-3],[-7],[-4],[4],[-2],[8],[-3],[-3],[6],[-3],[8],[-1],[9],[-7],[2],[-9],[10],[-7],[-1],[-10],[5],[2],[-2],[9],[2],[9],[3],[2],[-4],[4],[1],[-10],[-9],[7],[-9],[-4],[6],[4],[-10],[8],[-5],[2],[4],[10],[7],[5],[-7],[-8],[3]], dtype = "uint64")#candidate|4049|(1512, 1)|const|uint64
call_4048 = relay.TupleGetItem(func_1436_call(relay.reshape(const_4049.astype('uint64'), [12, 14, 9])), 0)
call_4050 = relay.TupleGetItem(func_1439_call(relay.reshape(const_4049.astype('uint64'), [12, 14, 9])), 0)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
var_4060 = relay.var("var_4060", dtype = "uint16", shape = (1024,))#candidate|4060|(1024,)|var|uint16
call_4059 = func_966_call(relay.reshape(var_4060.astype('uint16'), [8, 8, 16]))
call_4061 = func_966_call(relay.reshape(var_4060.astype('uint16'), [8, 8, 16]))
func_1712_call = mod.get_global_var('func_1712')
func_1717_call = mutated_mod.get_global_var('func_1717')
const_4063 = relay.const([-10,2,2,3,9,7,-4,4,1,-1,1,7,5,-4,-7,-8,1,4,2,-1,5,-4,-4,-10,-8,-10,-8,-3,-9,9,2,-7,-9,-6,-8,-4,4,-3,-8,-5,-3,5,2,-4,9], dtype = "uint8")#candidate|4063|(45,)|const|uint8
var_4064 = relay.var("var_4064", dtype = "uint8", shape = (135, 3))#candidate|4064|(135, 3)|var|uint8
var_4065 = relay.var("var_4065", dtype = "float32", shape = (945,))#candidate|4065|(945,)|var|float32
call_4062 = relay.TupleGetItem(func_1712_call(relay.reshape(const_4063.astype('uint8'), [1, 5, 9]), relay.reshape(var_4064.astype('uint8'), [9, 5, 9]), relay.reshape(var_4065.astype('float32'), [945,]), ), 1)
call_4066 = relay.TupleGetItem(func_1717_call(relay.reshape(const_4063.astype('uint8'), [1, 5, 9]), relay.reshape(var_4064.astype('uint8'), [9, 5, 9]), relay.reshape(var_4065.astype('float32'), [945,]), ), 1)
output = relay.Tuple([bop_4039,call_4048,const_4049,call_4059,var_4060,call_4062,const_4063,var_4064,var_4065,])
output2 = relay.Tuple([bop_4039,call_4050,const_4049,call_4061,var_4060,call_4066,const_4063,var_4064,var_4065,])
func_4067 = relay.Function([var_4037,var_4038,var_4060,var_4064,var_4065,], output)
mod['func_4067'] = func_4067
mod = relay.transform.InferType()(mod)
var_4068 = relay.var("var_4068", dtype = "int32", shape = (16, 15, 5))#candidate|4068|(16, 15, 5)|var|int32
var_4069 = relay.var("var_4069", dtype = "int32", shape = (16, 15, 5))#candidate|4069|(16, 15, 5)|var|int32
var_4070 = relay.var("var_4070", dtype = "uint16", shape = (1024,))#candidate|4070|(1024,)|var|uint16
var_4071 = relay.var("var_4071", dtype = "uint8", shape = (135, 3))#candidate|4071|(135, 3)|var|uint8
var_4072 = relay.var("var_4072", dtype = "float32", shape = (945,))#candidate|4072|(945,)|var|float32
output = func_4067(var_4068,var_4069,var_4070,var_4071,var_4072,)
func_4073 = relay.Function([var_4068,var_4069,var_4070,var_4071,var_4072,], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4403 = relay.var("var_4403", dtype = "int32", shape = (13, 8, 9))#candidate|4403|(13, 8, 9)|var|int32
var_4404 = relay.var("var_4404", dtype = "int32", shape = (13, 8, 9))#candidate|4404|(13, 8, 9)|var|int32
bop_4405 = relay.right_shift(var_4403.astype('int32'), relay.reshape(var_4404.astype('int32'), relay.shape_of(var_4403))) # shape=(13, 8, 9)
func_2539_call = mod.get_global_var('func_2539')
func_2542_call = mutated_mod.get_global_var('func_2542')
const_4415 = relay.const([8.700260,-1.568698,-2.427111,-5.003458,8.408100,7.481566,2.930942,-4.487448,7.422510,-0.411454,-9.579346,-4.138886,5.075412,-3.555712,-1.897257,3.171248,7.140652,-9.655761,-7.971147,-2.726202,8.495552,1.884979,-1.692448,0.557243,0.453424,-6.039732,8.684894,4.056213,-0.371411,4.960509,-1.484529,-1.676870,-5.697542,6.377459,3.601007,3.246170,0.676162,-6.661406,-3.640884,-5.558628,6.535795,-1.553672,9.832437,2.925849,2.296934,-1.009020,1.380642,4.056461,-3.320305,-4.795450,-8.115554,-2.137537,7.377507,-9.699359,-1.909642,5.809344,4.642605,-0.877193,6.697560,-4.128236,-2.641412,-3.834483,-5.102743,-6.322496,8.168784,-0.988337,-2.024243,8.119218,2.308072,8.761582,-2.715015,0.191785,-7.100459,4.174211,4.871468,-1.123938,-2.389654,1.902490,0.028438,1.118596,2.850219,-8.027407,-3.648805,7.186510,5.027507,0.846285,9.962160,0.981935,-4.980142,5.557470,1.014119,-5.438293,5.841093,-7.105744,0.797700,8.624078,2.664639,-4.589755,1.799038,-3.286665,-8.818016,6.233052,-3.991158,-7.456839,4.450023,5.035209,8.510043,-9.764953,4.911851,3.195859,5.606047,9.063426,4.835360,-4.241550,4.646084,1.562403,2.473025,3.590359,-1.564476,-5.952290,-7.491207,-8.020068,1.185310,-8.456077,2.959388,8.239637,-6.852713,2.757009,-6.371599,-6.213812,-9.194721,-2.231351,-1.018259,-8.215539,4.170781,-1.217757,-6.744975,9.235756,-8.557849,-6.207937,-0.286228,-3.058097,5.382575,-1.991786,0.436453,8.928124,-3.570368], dtype = "float32")#candidate|4415|(147,)|const|float32
const_4416 = relay.const([1,-7,-1,-10,5,-9,-2,10,6,2,-10,10,2,-6,-2,7,10,4,-8,-4,-6,6,6,2,5,9,-8,7,-10,-1,6,8,2,9,-8,3,-6,4,6,-5,-3,6,1,9,8,8,8,2,-9,9,4,1,-2,3,2,9,-10,7,10,-7,-8,6,10,-5,1,-8,6,6,-6,-8,-6,-6,-3,10,-8,4,9,-9,10,-1,6,3,-1,-1,-7,-9,-5,-9,-5,4,3,9,-7,-4,2,7,7,3,-10,-8,3,-10,-2,9,-8,-3,10,-7,-2,-6,-8,-4,5,-6,-2,-2,2,5,2,3,8,5,10,9,-4,-6,-9,9,6,9,-10,2,4,7,-5,10,-8,3,8,10,8,4,6,1,9,-1,2,10,-5,6,7,5,-10,5,-2,-9,3,-8,-7,5,1,-6,9,1,-2,4,-2,7,7,1,9,10,3,4,-8,-9,-3,2,-10,-10,1,-6,-2,6,-6,-1,-6,8,-10,1,-1,7,-5,8,5,10,1,-8,8,6,-10,1,-7,-7,-1,-5,9,6,2,-9,-3,2,4,1,-3,-6,-4,-10,5,-10,-6,-9,-8,8,3,8,6,-2,-9,2,9,-8,4,6,5,-6,-2,7,1,1,-5,-2,10,-1,6,-4,3,10,9,-7,-1,-7,-9,2,-4,-6,3,-1,-1,-3,-8,-3,-8,-8,-6,-1,-9,1,-7,-2,7,9,5,4,-4,2,-3,-3,-8,6,-8,-3,7,9,-7,4,-8,-6,5,-8,5,1,4,9,-4,8,-5,-3,6,-6,-10,9,-5,10,2,-7,7,-7,1,-5,-4,-1,5,-1,3,-6,-2,-10,9,-7,7,10,-3,4,-6,2,-3,8,4,-9,-1,-1,-9,9,10,-8,1,8,-8,9,3,-3,4,-4,-3,7,-7,6,-7,3,3,4,-3,10,-7,3,-2,-6,-10,-5,3,-6,8,6,8,-5,-3,7,-3,7,-7,2,9,-4,-10,1,-10,-6,10,6,-3,3,9,-2,-6,-6,1,2,8,8,-6,-1,-7,-5,-1,9,1,10,1,-6,-4,1,8,5,3,4,-4,8,-4,-2,-5,8,4,-5,3,3,-4,1,2,-8,1,6,10,1,-8,-10,-6,8,8,5,7,-9,4,2,9,-3,-3,8,-5,-7,9,-6,8,5,7,9,9,4,-9,-9,6,9,-3,3,3,8,9,-9,8,-3,5,1,-10,-5,-9,5,8,-5,10,-8,-7,-7,2,1,9,9,6,7,-4,2,9,-9,5,10,1,8,-6,-4,10,-10,-1,-4,8,-2,-4,-6,-6,-1,-8,-4,-9,-6,-7,3,6,-8,-2,-4,2,3,-10,8,-5,-5,-10,-1,-3,-3,-5,-10,2,8,8,8,-7,5,-1,3,2,10,-9,10,-8,-4,1,-6,2,1,-7,10,-10,-3,-10,9,-6,-1,-10,9,-5,-2,7,-1,3,8,1,-6,-7,-5,5,6,-1,-6,-9,8,10,-10,10,-7,-5,5,-7,8,9,-10,7,8,4,-10,1,-6,-10,9,8,-2,-10,-9,-7,-10,10,5,-7,-5,8,-3,3,-9,4,2,-3,4,-1,-2,-10,7,4,7,-6,2,8,-3,5,-6,2,-2,2,10,-9,-4,-9,-10,4,6,-10,3,4,-10,8,9,-6,4,-6,-3,-9,3,7,-10,-1,-2,5,-10,1,-9,8,6,-6,1,-5,7,1,-1,-3,1,9,4,9,4,-4,9,-10,5,9,8,-10,7,6,10,-1,3,6,-4,3,-7,1,-10,-4,7,-1,-7,-1,-4,4,-6,7,-3,-9,10,-4,-1,-6,8,-8,-3,-1,1,7,-6,-9,4,-2,-9,-5,-6,-9,-6,10,4,8,-6,-10,-10,10,7,-8,5,9,4,-4,-3,-7,-7,2,4,1,-10,7,-7,3,6,5,3,5,8,-10,-2,1,-6,1,4,2,-10,-1,5,10,-7,-3,1,-10,9,9,8,1,2,6,3,-7,6,-1,-3,-2,-8,-3,-7,7,4,7,7,-6,1,4,-7,-6,-10,-3,8,3,4,-4,-8,7,8,-2,4,-1,-7,1,-7,-8,-4,9,-8,-7,-8,-3,3,-8,4,5,7,4,-2,-9,-2,5,10,9,8,-10,8,-3,-1,-1,9,2,-3,-2,-3,-3,10,2,-3,5,6,8,-9,4,-1,5,-2,-8,7,-9,2,7,1,-9,-8,-8,2,-10,-8,-10,-1,1,-2,-8,10,9,-9,-4,-6,5,-9,-10,-8,9,5,6,-4,1,7,-7,9,9,-4,8,-5,-4,7,-5,-6,-2,-6,9,5,-8,-9,9,4,-6,2,6,9,4,-8,1,-5,-5,3,-3,-3,-1,9,-10,2,9,2,-3,-9,-6,-8,-1,2,-6,-9,3,3,6,-8,4,4,3,-1,6,-3,-7,3,-6,3,10,-2,-5,1,-6,8,6,-3,6,7,-6,-8,3,-2,-6,10,8,-1,6,4,8,10,-4,6,9,-3,4,-9,-3,-4,5,-5,6,5,7,-4,3,-10,8,-6,9,-1,3,10,10,-4,-9,-7,-4,-9,-4,-5,-6,2,3,3,1,3,-6,9,8,-9,4,-2,-10,9,-3,-1,-1,4,-2,6,-1,-7,-3,-2,-4,5,-9,-8,9,3,4,-10,-8,1,-3,3,-5,2,-9,-8,-5,10,-2,-5,6,3,-3,-6,-9,-10,1,6,-4,-5], dtype = "uint16")#candidate|4416|(1024,)|const|uint16
call_4414 = relay.TupleGetItem(func_2539_call(relay.reshape(const_4415.astype('float32'), [7, 7, 3]), relay.reshape(const_4416.astype('uint16'), [1024,]), ), 1)
call_4417 = relay.TupleGetItem(func_2542_call(relay.reshape(const_4415.astype('float32'), [7, 7, 3]), relay.reshape(const_4416.astype('uint16'), [1024,]), ), 1)
output = relay.Tuple([bop_4405,call_4414,const_4415,const_4416,])
output2 = relay.Tuple([bop_4405,call_4417,const_4415,const_4416,])
func_4422 = relay.Function([var_4403,var_4404,], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
var_4423 = relay.var("var_4423", dtype = "int32", shape = (13, 8, 9))#candidate|4423|(13, 8, 9)|var|int32
var_4424 = relay.var("var_4424", dtype = "int32", shape = (13, 8, 9))#candidate|4424|(13, 8, 9)|var|int32
output = func_4422(var_4423,var_4424,)
func_4425 = relay.Function([var_4423,var_4424,], output)
mutated_mod['func_4425'] = func_4425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4495 = relay.var("var_4495", dtype = "float64", shape = (15, 1, 11))#candidate|4495|(15, 1, 11)|var|float64
uop_4496 = relay.log2(var_4495.astype('float64')) # shape=(15, 1, 11)
uop_4505 = relay.cos(var_4495.astype('float64')) # shape=(15, 1, 11)
output = relay.Tuple([uop_4496,uop_4505,])
output2 = relay.Tuple([uop_4496,uop_4505,])
func_4517 = relay.Function([var_4495,], output)
mod['func_4517'] = func_4517
mod = relay.transform.InferType()(mod)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4518 = relay.var("var_4518", dtype = "float64", shape = (15, 1, 11))#candidate|4518|(15, 1, 11)|var|float64
func_4517_call = mutated_mod.get_global_var('func_4517')
call_4519 = func_4517_call(var_4518)
output = call_4519
func_4520 = relay.Function([var_4518], output)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5338 = relay.var("var_5338", dtype = "float64", shape = (7, 7, 4))#candidate|5338|(7, 7, 4)|var|float64
uop_5339 = relay.atan(var_5338.astype('float64')) # shape=(7, 7, 4)
output = relay.Tuple([uop_5339,])
output2 = relay.Tuple([uop_5339,])
func_5344 = relay.Function([var_5338,], output)
mod['func_5344'] = func_5344
mod = relay.transform.InferType()(mod)
mutated_mod['func_5344'] = func_5344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5345 = relay.var("var_5345", dtype = "float64", shape = (7, 7, 4))#candidate|5345|(7, 7, 4)|var|float64
func_5344_call = mutated_mod.get_global_var('func_5344')
call_5346 = func_5344_call(var_5345)
output = call_5346
func_5347 = relay.Function([var_5345], output)
mutated_mod['func_5347'] = func_5347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7444 = relay.var("var_7444", dtype = "uint64", shape = (6, 3, 5))#candidate|7444|(6, 3, 5)|var|uint64
var_7445 = relay.var("var_7445", dtype = "uint64", shape = (6, 3, 5))#candidate|7445|(6, 3, 5)|var|uint64
bop_7446 = relay.add(var_7444.astype('uint64'), relay.reshape(var_7445.astype('uint64'), relay.shape_of(var_7444))) # shape=(6, 3, 5)
output = bop_7446
output2 = bop_7446
func_7449 = relay.Function([var_7444,var_7445,], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mutated_mod.get_global_var('func_7449')
var_7451 = relay.var("var_7451", dtype = "uint64", shape = (6, 3, 5))#candidate|7451|(6, 3, 5)|var|uint64
var_7452 = relay.var("var_7452", dtype = "uint64", shape = (6, 3, 5))#candidate|7452|(6, 3, 5)|var|uint64
call_7450 = func_7449_call(var_7451,var_7452,)
output = call_7450
func_7453 = relay.Function([var_7451,var_7452,], output)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7594 = relay.constdtype = "float64")#candidate|7594|(10, 12, 15)|const|float64
var_7595 = relay.var("var_7595", dtype = "float64", shape = (10, 12, 15))#candidate|7595|(10, 12, 15)|var|float64
bop_7596 = relay.multiply(const_7594.astype('float64'), relay.reshape(var_7595.astype('float64'), relay.shape_of(const_7594))) # shape=(10, 12, 15)
func_3671_call = mod.get_global_var('func_3671')
func_3673_call = mutated_mod.get_global_var('func_3673')
var_7602 = relay.var("var_7602", dtype = "float32", shape = (539,))#candidate|7602|(539,)|var|float32
call_7601 = relay.TupleGetItem(func_3671_call(relay.reshape(var_7602.astype('float32'), [7, 11, 7])), 0)
call_7603 = relay.TupleGetItem(func_3673_call(relay.reshape(var_7602.astype('float32'), [7, 11, 7])), 0)
output = relay.Tuple([bop_7596,call_7601,var_7602,])
output2 = relay.Tuple([bop_7596,call_7603,var_7602,])
func_7623 = relay.Function([var_7595,var_7602,], output)
mod['func_7623'] = func_7623
mod = relay.transform.InferType()(mod)
var_7624 = relay.var("var_7624", dtype = "float64", shape = (10, 12, 15))#candidate|7624|(10, 12, 15)|var|float64
var_7625 = relay.var("var_7625", dtype = "float32", shape = (539,))#candidate|7625|(539,)|var|float32
output = func_7623(var_7624,var_7625,)
func_7626 = relay.Function([var_7624,var_7625,], output)
mutated_mod['func_7626'] = func_7626
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7770 = relay.const([[[-8,8,-1,10,1,-3,4,-7],[-5,-10,8,2,10,-10,8,-9],[-6,2,7,7,-5,2,-4,-10],[9,-1,-1,-4,2,-6,-5,-9],[-1,10,2,5,-10,5,-5,4],[-8,-8,9,-4,9,5,4,-8]],[[-4,-2,-8,4,-3,3,-7,-3],[-5,5,-6,-6,8,10,5,8],[6,6,6,-3,10,-8,-4,-1],[3,-2,-3,-5,-2,-5,-3,-6],[3,-5,3,-8,4,9,9,7],[-4,-3,1,-9,3,10,7,4]],[[-10,-6,7,-6,-4,-10,-5,-8],[-8,-7,9,10,2,-7,-5,-8],[2,-8,10,3,-10,-8,8,3],[7,4,8,7,3,-10,6,5],[-9,-10,-8,-4,4,1,-8,-9],[-6,10,-7,5,-2,10,10,8]],[[2,-2,-3,-9,8,10,-6,-10],[3,8,6,2,10,-6,9,2],[5,2,-10,-4,10,-6,-4,1],[-6,-7,-4,-10,1,7,-3,-1],[-4,-4,-3,5,-4,-4,-9,6],[-5,10,10,-6,-8,-2,1,-9]],[[8,9,4,9,-5,6,9,9],[-3,-5,-1,-7,-1,9,-4,-5],[4,6,-8,-5,9,8,1,1],[-8,-10,-7,-7,-6,10,-7,-2],[9,-8,-4,-1,-4,10,8,-1],[10,-7,-8,5,1,2,8,-8]]], dtype = "uint16")#candidate|7770|(5, 6, 8)|const|uint16
var_7771 = relay.var("var_7771", dtype = "uint16", shape = (5, 6, 8))#candidate|7771|(5, 6, 8)|var|uint16
bop_7772 = relay.greater(const_7770.astype('bool'), relay.reshape(var_7771.astype('bool'), relay.shape_of(const_7770))) # shape=(5, 6, 8)
output = relay.Tuple([bop_7772,])
output2 = relay.Tuple([bop_7772,])
func_7789 = relay.Function([var_7771,], output)
mod['func_7789'] = func_7789
mod = relay.transform.InferType()(mod)
mutated_mod['func_7789'] = func_7789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7790 = relay.var("var_7790", dtype = "uint16", shape = (5, 6, 8))#candidate|7790|(5, 6, 8)|var|uint16
func_7789_call = mutated_mod.get_global_var('func_7789')
call_7791 = func_7789_call(var_7790)
output = call_7791
func_7792 = relay.Function([var_7790], output)
mutated_mod['func_7792'] = func_7792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7821 = relay.var("var_7821", dtype = "uint8", shape = ())#candidate|7821|()|var|uint8
const_7822 = relay.const([[[-10,8,-9,-3,7,-2,10,-1,-8,-8,4,-1,5,7,10]],[[7,-3,1,7,-10,-2,5,6,2,6,-6,-1,7,9,-3]],[[-9,10,-5,-4,7,-7,8,2,-6,7,6,4,-4,-3,-6]]], dtype = "uint8")#candidate|7822|(3, 1, 15)|const|uint8
bop_7823 = relay.right_shift(var_7821.astype('uint8'), const_7822.astype('uint8')) # shape=(3, 1, 15)
output = relay.Tuple([bop_7823,])
output2 = relay.Tuple([bop_7823,])
func_7838 = relay.Function([var_7821,], output)
mod['func_7838'] = func_7838
mod = relay.transform.InferType()(mod)
mutated_mod['func_7838'] = func_7838
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7839 = relay.var("var_7839", dtype = "uint8", shape = ())#candidate|7839|()|var|uint8
func_7838_call = mutated_mod.get_global_var('func_7838')
call_7840 = func_7838_call(var_7839)
output = call_7840
func_7841 = relay.Function([var_7839], output)
mutated_mod['func_7841'] = func_7841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7868 = relay.var("var_7868", dtype = "float64", shape = (14, 2, 4))#candidate|7868|(14, 2, 4)|var|float64
uop_7869 = relay.cos(var_7868.astype('float64')) # shape=(14, 2, 4)
bop_7878 = relay.floor_mod(uop_7869.astype('float32'), relay.reshape(var_7868.astype('float32'), relay.shape_of(uop_7869))) # shape=(14, 2, 4)
func_2539_call = mod.get_global_var('func_2539')
func_2542_call = mutated_mod.get_global_var('func_2542')
const_7884 = relay.const([-4.114707,-8.128444,5.086124,7.930310,-6.879096,-1.494231,-5.335103,-5.021079,1.374477,3.056206,-4.170128,0.845398,2.668718,6.497620,8.372340,6.784903,-6.991151,-9.971407,-4.961483,2.875150,-0.694452,-0.589669,-9.824916,7.682073,2.361442,-6.019511,-4.036793,4.980666,3.918972,-7.713160,-3.282464,-7.839214,-0.407917,-9.495452,-7.664144,8.160845,9.400002,9.273126,-1.982322,0.696500,7.918126,9.647170,6.330404,1.739064,5.624850,0.650055,-9.151977,2.045286,-2.777908,3.382533,9.499775,-9.921598,-4.114970,-3.968040,-9.475474,8.294596,8.499665,5.439615,5.746883,-1.713166,0.504598,-2.063972,9.060743,-6.079195,-9.153647,9.625593,-4.512351,-0.903771,3.048705,8.222921,8.227244,-9.573570,8.584557,5.984198,-8.181116,1.230958,-8.015772,9.910559,3.688911,9.575729,-0.716163,6.038657,-6.308839,8.332066,-8.168959,-4.116477,1.404210,8.806727,-0.873575,-5.084729,-1.795720,-9.512264,3.982257,-7.612238,3.817177,-8.302234,-1.997325,-2.711626,-4.342154,3.326921,-2.879276,-0.355401,-6.849211,-5.202715,-5.067134,3.099229,0.723562,5.698196,-6.013620,4.500662,-2.271840,3.975789,-1.996816,6.812695,7.616524,6.580110,-3.236294,-4.297399,8.305019,-0.439049,0.138614,-0.614286,9.752028,3.690805,-0.989099,-2.219377,4.907894,7.432154,9.475783,-4.599716,4.349254,2.612771,8.888123,-0.154438,-5.791977,-7.641739,6.773252,-5.124153,1.181015,-2.403419,8.078278,-7.350731,-7.966122,-1.034930,-9.562583,-4.292474,-4.975112], dtype = "float32")#candidate|7884|(147,)|const|float32
var_7885 = relay.var("var_7885", dtype = "uint16", shape = (1024,))#candidate|7885|(1024,)|var|uint16
call_7883 = relay.TupleGetItem(func_2539_call(relay.reshape(const_7884.astype('float32'), [7, 7, 3]), relay.reshape(var_7885.astype('uint16'), [1024,]), ), 1)
call_7886 = relay.TupleGetItem(func_2542_call(relay.reshape(const_7884.astype('float32'), [7, 7, 3]), relay.reshape(var_7885.astype('uint16'), [1024,]), ), 1)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
call_7890 = func_966_call(relay.reshape(call_7883.astype('uint16'), [8, 8, 16]))
call_7891 = func_966_call(relay.reshape(call_7883.astype('uint16'), [8, 8, 16]))
func_7838_call = mod.get_global_var('func_7838')
func_7841_call = mutated_mod.get_global_var('func_7841')
const_7915 = relay.const(5, dtype = "uint8")#candidate|7915|()|const|uint8
call_7914 = relay.TupleGetItem(func_7838_call(relay.reshape(const_7915.astype('uint8'), [])), 0)
call_7916 = relay.TupleGetItem(func_7841_call(relay.reshape(const_7915.astype('uint8'), [])), 0)
func_2539_call = mod.get_global_var('func_2539')
func_2542_call = mutated_mod.get_global_var('func_2542')
call_7923 = relay.TupleGetItem(func_2539_call(relay.reshape(const_7884.astype('float32'), [7, 7, 3]), relay.reshape(var_7885.astype('uint16'), [1024,]), ), 1)
call_7924 = relay.TupleGetItem(func_2542_call(relay.reshape(const_7884.astype('float32'), [7, 7, 3]), relay.reshape(var_7885.astype('uint16'), [1024,]), ), 1)
output = relay.Tuple([bop_7878,call_7883,const_7884,var_7885,call_7890,call_7914,const_7915,call_7923,])
output2 = relay.Tuple([bop_7878,call_7886,const_7884,var_7885,call_7891,call_7916,const_7915,call_7924,])
func_7934 = relay.Function([var_7868,var_7885,], output)
mod['func_7934'] = func_7934
mod = relay.transform.InferType()(mod)
mutated_mod['func_7934'] = func_7934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7934_call = mutated_mod.get_global_var('func_7934')
var_7936 = relay.var("var_7936", dtype = "float64", shape = (14, 2, 4))#candidate|7936|(14, 2, 4)|var|float64
var_7937 = relay.var("var_7937", dtype = "uint16", shape = (1024,))#candidate|7937|(1024,)|var|uint16
call_7935 = func_7934_call(var_7936,var_7937,)
output = call_7935
func_7938 = relay.Function([var_7936,var_7937,], output)
mutated_mod['func_7938'] = func_7938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8799 = relay.var("var_8799", dtype = "float32", shape = (16, 14, 5))#candidate|8799|(16, 14, 5)|var|float32
var_8800 = relay.var("var_8800", dtype = "float32", shape = (16, 14, 5))#candidate|8800|(16, 14, 5)|var|float32
bop_8801 = relay.mod(var_8799.astype('float32'), relay.reshape(var_8800.astype('float32'), relay.shape_of(var_8799))) # shape=(16, 14, 5)
output = relay.Tuple([bop_8801,])
output2 = relay.Tuple([bop_8801,])
func_8804 = relay.Function([var_8799,var_8800,], output)
mod['func_8804'] = func_8804
mod = relay.transform.InferType()(mod)
var_8805 = relay.var("var_8805", dtype = "float32", shape = (16, 14, 5))#candidate|8805|(16, 14, 5)|var|float32
var_8806 = relay.var("var_8806", dtype = "float32", shape = (16, 14, 5))#candidate|8806|(16, 14, 5)|var|float32
output = func_8804(var_8805,var_8806,)
func_8807 = relay.Function([var_8805,var_8806,], output)
mutated_mod['func_8807'] = func_8807
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9346 = relay.const([[[4.561461,0.226033,-3.625223,8.244981,6.368458,-9.707037,1.657957,6.360949,2.224505,8.129154],[1.205247,1.324191,7.568904,-8.043870,-9.085066,1.448559,8.127668,3.545755,5.778076,-3.477127]],[[-8.465318,-7.415323,-7.422918,-5.270836,1.967683,-7.954349,2.118024,2.262349,5.896583,2.792553],[9.404403,0.626223,2.991341,-3.480729,5.549247,-2.675795,2.114061,0.351349,-3.171442,6.388081]],[[4.536146,7.752530,-1.094043,3.962865,-3.740302,1.824708,-7.651041,-2.036046,2.160544,-9.575905],[-8.596505,-9.241196,3.869261,2.109710,8.104059,1.956335,-6.305977,7.143411,-6.851061,-1.037452]],[[5.473013,-1.019056,-6.285982,-2.513783,-7.805426,-9.110332,4.676931,-8.035333,-4.949384,-6.295888],[4.086247,8.735049,-3.914988,-8.161045,5.031107,-6.543667,-6.803147,-8.160483,5.175960,-0.442271]],[[-2.093725,-8.356826,6.966466,-8.735747,-2.479584,9.156072,4.305762,5.563343,8.582024,-2.654090],[-0.736989,-4.469932,9.067967,7.847996,9.775809,-9.124573,-8.185907,7.188814,-9.395963,-0.992493]]], dtype = "float64")#candidate|9346|(5, 2, 10)|const|float64
uop_9347 = relay.cosh(const_9346.astype('float64')) # shape=(5, 2, 10)
func_1712_call = mod.get_global_var('func_1712')
func_1717_call = mutated_mod.get_global_var('func_1717')
const_9356 = relay.const([2,-8,10,3,2,5,7,-8,10,-8,-1,-6,4,-6,-3,8,2,8,-9,-6,-1,9,-3,-4,-9,3,7,-10,1,-1,10,10,5,-4,9,7,8,-9,5,3,-4,-5,4,-5,-1], dtype = "uint8")#candidate|9356|(45,)|const|uint8
const_9357 = relay.const([-6,-3,-7,7,-4,-5,10,-5,-5,-8,3,-3,-9,3,-5,-3,-3,1,-1,3,3,-10,-10,-10,1,6,-1,2,7,2,-10,-2,9,-1,4,-6,2,1,-8,6,9,5,1,2,3,-10,6,3,9,-6,8,1,-7,-1,-5,6,1,6,7,1,-9,-2,-5,10,1,-9,9,10,-4,3,-1,3,-10,-5,-4,-8,9,10,9,10,-8,-10,8,-3,2,-2,-6,-7,4,5,10,3,-7,5,-2,5,-3,7,6,2,7,-5,8,9,-3,2,-2,-5,5,-5,7,7,9,-9,-3,5,6,-10,1,8,8,9,4,-8,-6,-8,-5,2,8,-8,-4,-10,4,-9,-3,-9,9,-8,-4,2,9,2,6,7,5,6,8,-2,-7,-7,9,1,6,1,-6,-9,-4,1,2,3,-3,7,-4,-6,-3,1,-9,-10,-2,4,-5,-6,-1,-8,-7,2,-9,-5,-9,5,-4,-4,9,-9,-6,-2,3,9,-7,8,-9,7,-9,-2,-1,-2,3,9,1,-6,8,-7,10,-6,-4,-2,-7,2,9,-6,-1,7,-6,10,2,-4,8,5,9,4,8,-6,-6,2,-2,-8,-9,-9,-1,4,-8,8,-2,-1,-4,4,-2,-10,-9,-4,3,6,-8,8,-5,-5,-3,-9,7,5,7,-5,2,-7,-8,-3,-2,-4,5,10,-6,-3,9,3,-3,7,-8,9,10,2,-9,-2,4,-3,-7,9,9,10,5,6,-2,8,-9,-1,-4,-10,7,-6,-5,-8,-2,-6,10,-1,-1,-2,3,-4,-10,-3,7,-9,-3,-5,-2,3,-9,-4,-6,5,5,-10,-9,1,1,-4,-7,-3,6,1,1,3,-2,1,4,-5,3,-9,2,-2,6,-1,8,3,10,-5,7,-2,-5,-7,7,9,-1,-2,10,6,-1,9,1,-7,-6,-3,-8,-4,-6,-5,-4,4,-5,-8,2,1,1,3,1,-2,-2,-2,9,-5,-8,7,7,9,10,6,-1,7,6,5,-2,6,1,-4,5,-5,-2,-7,6,10,5,-9,-3,-10,8,6,-2,2,10,6,-9,-10,-5,-1,-5], dtype = "uint8")#candidate|9357|(405,)|const|uint8
var_9358 = relay.var("var_9358", dtype = "float32", shape = (945,))#candidate|9358|(945,)|var|float32
call_9355 = relay.TupleGetItem(func_1712_call(relay.reshape(const_9356.astype('uint8'), [1, 5, 9]), relay.reshape(const_9357.astype('uint8'), [9, 5, 9]), relay.reshape(var_9358.astype('float32'), [945,]), ), 0)
call_9359 = relay.TupleGetItem(func_1717_call(relay.reshape(const_9356.astype('uint8'), [1, 5, 9]), relay.reshape(const_9357.astype('uint8'), [9, 5, 9]), relay.reshape(var_9358.astype('float32'), [945,]), ), 0)
func_3671_call = mod.get_global_var('func_3671')
func_3673_call = mutated_mod.get_global_var('func_3673')
var_9374 = relay.var("var_9374", dtype = "float32", shape = (1, 539))#candidate|9374|(1, 539)|var|float32
call_9373 = relay.TupleGetItem(func_3671_call(relay.reshape(var_9374.astype('float32'), [7, 11, 7])), 1)
call_9375 = relay.TupleGetItem(func_3673_call(relay.reshape(var_9374.astype('float32'), [7, 11, 7])), 1)
var_9380 = relay.var("var_9380", dtype = "float32", shape = (945,))#candidate|9380|(945,)|var|float32
bop_9381 = relay.add(var_9358.astype('int8'), relay.reshape(var_9380.astype('int8'), relay.shape_of(var_9358))) # shape=(945,)
output = relay.Tuple([uop_9347,call_9355,const_9356,const_9357,call_9373,var_9374,bop_9381,])
output2 = relay.Tuple([uop_9347,call_9359,const_9356,const_9357,call_9375,var_9374,bop_9381,])
func_9384 = relay.Function([var_9358,var_9374,var_9380,], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
var_9385 = relay.var("var_9385", dtype = "float32", shape = (945,))#candidate|9385|(945,)|var|float32
var_9386 = relay.var("var_9386", dtype = "float32", shape = (1, 539))#candidate|9386|(1, 539)|var|float32
var_9387 = relay.var("var_9387", dtype = "float32", shape = (945,))#candidate|9387|(945,)|var|float32
output = func_9384(var_9385,var_9386,var_9387,)
func_9388 = relay.Function([var_9385,var_9386,var_9387,], output)
mutated_mod['func_9388'] = func_9388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9649 = relay.var("var_9649", dtype = "uint16", shape = (13, 10, 9))#candidate|9649|(13, 10, 9)|var|uint16
var_9650 = relay.var("var_9650", dtype = "uint16", shape = (13, 10, 9))#candidate|9650|(13, 10, 9)|var|uint16
bop_9651 = relay.not_equal(var_9649.astype('bool'), relay.reshape(var_9650.astype('bool'), relay.shape_of(var_9649))) # shape=(13, 10, 9)
func_7449_call = mod.get_global_var('func_7449')
func_7453_call = mutated_mod.get_global_var('func_7453')
const_9656 = relay.const([4,-7,4,7,-4,-1,8,-5,8,6,-6,2,-5,10,9,-7,-9,-10,-8,-2,1,-1,7,-7,5,-4,-8,-8,5,10,1,7,-4,5,-3,4,-2,-2,-2,-3,2,-9,-4,-3,7,2,-3,-10,-7,10,-3,5,-1,4,4,2,5,-6,8,-9,-5,3,-2,-6,9,9,10,7,1,-7,-9,2,-10,-4,-2,-3,3,-4,2,-4,-7,3,8,-1,3,5,8,-7,-8,9], dtype = "uint64")#candidate|9656|(90,)|const|uint64
call_9655 = func_7449_call(relay.reshape(const_9656.astype('uint64'), [6, 3, 5]), relay.reshape(const_9656.astype('uint64'), [6, 3, 5]), )
call_9657 = func_7449_call(relay.reshape(const_9656.astype('uint64'), [6, 3, 5]), relay.reshape(const_9656.astype('uint64'), [6, 3, 5]), )
output = relay.Tuple([bop_9651,call_9655,const_9656,])
output2 = relay.Tuple([bop_9651,call_9657,const_9656,])
func_9681 = relay.Function([var_9649,var_9650,], output)
mod['func_9681'] = func_9681
mod = relay.transform.InferType()(mod)
var_9682 = relay.var("var_9682", dtype = "uint16", shape = (13, 10, 9))#candidate|9682|(13, 10, 9)|var|uint16
var_9683 = relay.var("var_9683", dtype = "uint16", shape = (13, 10, 9))#candidate|9683|(13, 10, 9)|var|uint16
output = func_9681(var_9682,var_9683,)
func_9684 = relay.Function([var_9682,var_9683,], output)
mutated_mod['func_9684'] = func_9684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9801 = relay.var("var_9801", dtype = "float64", shape = (6, 9, 8))#candidate|9801|(6, 9, 8)|var|float64
uop_9802 = relay.rsqrt(var_9801.astype('float64')) # shape=(6, 9, 8)
var_9822 = relay.var("var_9822", dtype = "float64", shape = (6, 9, 8))#candidate|9822|(6, 9, 8)|var|float64
bop_9823 = relay.mod(var_9801.astype('float64'), relay.reshape(var_9822.astype('float64'), relay.shape_of(var_9801))) # shape=(6, 9, 8)
output = relay.Tuple([uop_9802,bop_9823,])
output2 = relay.Tuple([uop_9802,bop_9823,])
func_9826 = relay.Function([var_9801,var_9822,], output)
mod['func_9826'] = func_9826
mod = relay.transform.InferType()(mod)
mutated_mod['func_9826'] = func_9826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9826_call = mutated_mod.get_global_var('func_9826')
var_9828 = relay.var("var_9828", dtype = "float64", shape = (6, 9, 8))#candidate|9828|(6, 9, 8)|var|float64
var_9829 = relay.var("var_9829", dtype = "float64", shape = (6, 9, 8))#candidate|9829|(6, 9, 8)|var|float64
call_9827 = func_9826_call(var_9828,var_9829,)
output = call_9827
func_9830 = relay.Function([var_9828,var_9829,], output)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10405 = relay.var("var_10405", dtype = "float32", shape = (6, 6, 9))#candidate|10405|(6, 6, 9)|var|float32
uop_10406 = relay.log10(var_10405.astype('float32')) # shape=(6, 6, 9)
func_7449_call = mod.get_global_var('func_7449')
func_7453_call = mutated_mod.get_global_var('func_7453')
var_10409 = relay.var("var_10409", dtype = "uint64", shape = (90,))#candidate|10409|(90,)|var|uint64
call_10408 = func_7449_call(relay.reshape(var_10409.astype('uint64'), [6, 3, 5]), relay.reshape(var_10409.astype('uint64'), [6, 3, 5]), )
call_10410 = func_7449_call(relay.reshape(var_10409.astype('uint64'), [6, 3, 5]), relay.reshape(var_10409.astype('uint64'), [6, 3, 5]), )
output = relay.Tuple([uop_10406,call_10408,var_10409,])
output2 = relay.Tuple([uop_10406,call_10410,var_10409,])
func_10422 = relay.Function([var_10405,var_10409,], output)
mod['func_10422'] = func_10422
mod = relay.transform.InferType()(mod)
mutated_mod['func_10422'] = func_10422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10422_call = mutated_mod.get_global_var('func_10422')
var_10424 = relay.var("var_10424", dtype = "float32", shape = (6, 6, 9))#candidate|10424|(6, 6, 9)|var|float32
var_10425 = relay.var("var_10425", dtype = "uint64", shape = (90,))#candidate|10425|(90,)|var|uint64
call_10423 = func_10422_call(var_10424,var_10425,)
output = call_10423
func_10426 = relay.Function([var_10424,var_10425,], output)
mutated_mod['func_10426'] = func_10426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10516 = relay.var("var_10516", dtype = "float32", shape = (5, 13, 8))#candidate|10516|(5, 13, 8)|var|float32
uop_10517 = relay.asinh(var_10516.astype('float32')) # shape=(5, 13, 8)
output = uop_10517
output2 = uop_10517
func_10521 = relay.Function([var_10516,], output)
mod['func_10521'] = func_10521
mod = relay.transform.InferType()(mod)
var_10522 = relay.var("var_10522", dtype = "float32", shape = (5, 13, 8))#candidate|10522|(5, 13, 8)|var|float32
output = func_10521(var_10522)
func_10523 = relay.Function([var_10522], output)
mutated_mod['func_10523'] = func_10523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10608 = relay.var("var_10608", dtype = "float32", shape = (7, 12, 13))#candidate|10608|(7, 12, 13)|var|float32
uop_10609 = relay.sigmoid(var_10608.astype('float32')) # shape=(7, 12, 13)
var_10621 = relay.var("var_10621", dtype = "float32", shape = (7, 12, 13))#candidate|10621|(7, 12, 13)|var|float32
bop_10622 = relay.equal(uop_10609.astype('bool'), relay.reshape(var_10621.astype('bool'), relay.shape_of(uop_10609))) # shape=(7, 12, 13)
output = relay.Tuple([bop_10622,])
output2 = relay.Tuple([bop_10622,])
func_10625 = relay.Function([var_10608,var_10621,], output)
mod['func_10625'] = func_10625
mod = relay.transform.InferType()(mod)
var_10626 = relay.var("var_10626", dtype = "float32", shape = (7, 12, 13))#candidate|10626|(7, 12, 13)|var|float32
var_10627 = relay.var("var_10627", dtype = "float32", shape = (7, 12, 13))#candidate|10627|(7, 12, 13)|var|float32
output = func_10625(var_10626,var_10627,)
func_10628 = relay.Function([var_10626,var_10627,], output)
mutated_mod['func_10628'] = func_10628
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11149 = relay.const([[[True,True,True,False,False,False,True,False,False]],[[False,True,True,True,False,False,False,False,True]],[[True,False,True,True,False,True,True,False,False]],[[True,False,True,True,False,False,True,False,True]],[[True,True,True,True,True,False,False,False,True]],[[False,True,True,True,False,True,True,False,True]],[[False,True,False,True,False,False,False,True,False]],[[False,False,True,True,True,False,False,False,False]],[[True,False,False,False,True,True,True,False,False]],[[False,True,False,False,False,True,False,True,True]],[[False,True,False,True,True,True,False,True,False]]], dtype = "bool")#candidate|11149|(11, 1, 9)|const|bool
var_11150 = relay.var("var_11150", dtype = "bool", shape = (11, 13, 9))#candidate|11150|(11, 13, 9)|var|bool
bop_11151 = relay.logical_and(const_11149.astype('bool'), var_11150.astype('bool')) # shape=(11, 13, 9)
output = bop_11151
output2 = bop_11151
func_11154 = relay.Function([var_11150,], output)
mod['func_11154'] = func_11154
mod = relay.transform.InferType()(mod)
var_11155 = relay.var("var_11155", dtype = "bool", shape = (11, 13, 9))#candidate|11155|(11, 13, 9)|var|bool
output = func_11154(var_11155)
func_11156 = relay.Function([var_11155], output)
mutated_mod['func_11156'] = func_11156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11331 = relay.var("var_11331", dtype = "float64", shape = (1, 4, 15))#candidate|11331|(1, 4, 15)|var|float64
uop_11332 = relay.exp(var_11331.astype('float64')) # shape=(1, 4, 15)
bop_11334 = relay.subtract(var_11331.astype('uint64'), relay.reshape(uop_11332.astype('uint64'), relay.shape_of(var_11331))) # shape=(1, 4, 15)
func_7623_call = mod.get_global_var('func_7623')
func_7626_call = mutated_mod.get_global_var('func_7626')
var_11341 = relay.var("var_11341", dtype = "float64", shape = (450, 4))#candidate|11341|(450, 4)|var|float64
var_11342 = relay.var("var_11342", dtype = "float32", shape = (539,))#candidate|11342|(539,)|var|float32
call_11340 = relay.TupleGetItem(func_7623_call(relay.reshape(var_11341.astype('float64'), [10, 12, 15]), relay.reshape(var_11342.astype('float32'), [539,]), ), 2)
call_11343 = relay.TupleGetItem(func_7626_call(relay.reshape(var_11341.astype('float64'), [10, 12, 15]), relay.reshape(var_11342.astype('float32'), [539,]), ), 2)
func_2683_call = mod.get_global_var('func_2683')
func_2687_call = mutated_mod.get_global_var('func_2687')
const_11346 = relay.const([[6.661227,-9.306409,7.490732,-2.564042,-7.586358,8.404416,1.506424,3.785364,4.751113,7.993179,-9.483271,2.715203,-7.088328,-3.435031,5.550086,2.986432,8.611309,1.534008,-8.366140,2.759309,5.733551,8.016590,-6.561461,8.762317,-8.971660,1.734811,-5.844142,9.692819,-3.140250,1.007396,3.409678,-6.358078,-1.572821,-7.964576,7.912964,2.513898,-4.544889,-3.742562,4.041745,8.070873,-4.042139,-1.931658,0.899547,2.234305,1.326222,2.799915,1.827611,9.561474,0.088769,-1.414778,7.871214,7.290535,7.223944,-0.979368,0.440616,-3.761481,3.858050,-4.309471,-5.107315,-4.344037,-6.102130,7.758928,1.237931,0.624646,-4.008177,-4.749539,7.812135,1.611316,5.751243,1.115915,2.494853,-3.907985,5.176574,-2.169471,-7.284833,5.028990,-8.879775,-7.080899,-7.915358,9.636207,-0.136055,-6.978740,8.337560,-9.681836,-4.231161,-6.158490,5.283492,-8.378113,9.874818,-7.144983,9.422313,1.799176,-8.879844,6.071637,4.446757,3.830180,-0.023770,-5.999204,-1.181287,-3.450906,-9.923482,-1.701296,7.177215,-7.221522,8.420376,-5.695454,8.359450,6.982885,-9.691123,-6.480837,7.794992,6.098801,9.023787,4.741648,-4.404872,-3.229244,-7.098906,-7.841068,2.107265,4.957481,3.825479,5.641109,2.676370,2.138210,-2.556442,6.714151,7.497631,8.230221,-1.019401,-2.582896,1.954833,-7.067888,-3.030900,6.367397,6.720925,-6.929116,6.895974,7.794861,-3.999666,-5.597812,-4.532869,-7.152707,-7.299682,8.532710,4.227663,0.333860,-3.910833,-8.230353,-8.135517,8.449591,-3.454049,-5.349050,2.682904,-1.443621,-1.731600,-9.228844,9.248185,2.455375,4.803692,-3.487514],[-1.080006,9.591572,2.910354,8.493577,1.189148,-8.447577,8.216671,0.483120,-6.933338,-8.630113,-9.435519,-6.583077,-0.742221,4.048772,-3.998296,-9.103659,8.121371,7.673962,0.181229,-4.508655,7.676278,8.393479,-5.410240,-1.265343,-5.369970,3.814304,3.789950,-9.000668,5.664241,9.241938,-5.210259,6.139832,2.257731,-2.706098,1.616436,-8.813013,0.480701,7.515985,-0.424881,3.175400,9.789747,-2.435664,-6.764840,-4.905273,-6.743841,0.745377,8.482513,4.784476,3.460460,9.114057,-8.476359,-1.139157,0.920543,7.334844,6.223118,2.693373,-8.219712,7.116153,-0.285351,-2.032728,-4.085690,9.633552,-4.748859,-2.788001,1.874162,5.501158,0.952107,4.235482,7.102284,7.973297,2.786471,4.696270,-0.903546,-3.141966,-1.081615,7.498039,-5.912575,-8.798868,3.323070,0.610153,8.977150,7.957272,-6.902754,8.392990,8.792416,-6.477910,8.157281,-5.242758,-2.516040,9.751940,-7.475171,0.833783,8.688428,9.044542,8.575472,9.384710,3.405795,3.154542,-8.337496,-0.857529,7.161949,-7.441614,-5.226889,-7.154385,-2.465678,-2.941149,0.081071,2.763732,8.180626,3.153103,6.022142,4.252954,2.433839,-4.811248,-1.986620,-0.322709,7.135559,-5.904852,0.395292,6.287264,-5.886647,-9.412315,9.490063,2.754913,0.591673,7.540124,6.285255,7.913787,-1.864288,-9.435641,-3.911573,-5.732542,-4.737709,-3.817171,-2.493924,2.239428,6.964872,-5.210662,1.696652,8.885690,-8.277601,-1.888962,-0.253161,4.322872,6.865520,3.651332,-3.788863,-0.478559,-3.421607,-8.936948,-7.507516,-3.733460,-0.322463,-7.828805,-1.670129,-5.425630,1.517169,-6.631947,-8.743660,-8.135944],[-5.690753,-5.083131,7.077767,0.153745,6.070618,-6.866937,4.952772,8.325994,2.907865,3.807511,7.831204,0.827891,-2.115052,-1.950779,1.010751,0.590623,-7.688166,-9.670553,-7.399189,-3.352121,6.769058,3.606051,2.352528,-7.096531,-5.928116,-9.327121,9.839544,-4.930779,7.345615,0.565994,0.423311,-0.219691,-7.245892,-2.988359,-3.157501,-8.047386,9.626128,-3.972941,-2.915353,-7.667466,1.986352,-8.841216,-8.312564,-8.726596,-6.641874,-6.257524,-8.032643,3.207895,3.448077,2.420614,-0.969723,6.573802,2.471096,-2.673752,1.507923,7.445960,3.069113,9.920750,-0.574793,-9.726611,8.824934,2.865531,6.338962,-9.907323,-0.133212,6.437136,4.629082,-1.331169,-0.261083,-3.185357,4.545731,-9.172539,-1.160609,-5.975691,-6.097486,5.770371,6.767627,8.652743,4.247308,0.266059,-8.428033,3.737003,-5.151643,-9.265344,-6.966417,-2.576927,-7.011722,0.590767,-0.793013,-4.814691,-4.571170,3.467267,-8.608166,-2.512682,-6.379025,3.484369,-1.621035,9.482857,-4.532875,-9.437994,-1.443101,8.251036,5.982895,2.979446,-2.816730,-5.986620,7.398020,4.406255,6.153880,-1.634550,3.855168,-3.198549,-0.766339,-3.740407,9.138931,8.324086,4.212893,9.294457,6.884563,5.344443,-6.103151,-1.984448,6.212569,1.470908,-5.647529,-2.214696,4.224102,2.210824,-5.369043,-0.758367,-4.522386,-3.010427,-7.143261,7.253627,-3.847423,-4.118158,-0.924957,9.190772,-8.366994,-0.577248,-7.514879,-2.271583,8.706742,9.214050,-3.001701,-7.311345,0.012277,-6.690321,-9.620977,-8.253173,-7.781453,4.789538,5.157786,-7.377967,1.031069,-2.781955,-9.718879,3.236100,8.622236,8.586030],[-3.795141,-9.564489,-0.570943,-7.496949,-3.233752,-1.833610,9.309666,-3.450493,-1.303001,-0.833166,6.515220,5.627888,2.451087,-4.217772,6.929991,-6.295735,8.304959,0.240569,-5.335840,-0.961750,-3.849718,6.079115,-3.128200,5.334900,4.714933,-2.913051,-4.151272,-5.282422,-1.114792,-2.515332,-0.306720,2.529634,-7.981211,-4.219969,-2.671640,8.006679,6.360477,-1.386877,-3.803639,-1.502309,7.931427,3.837950,-1.055132,-3.602835,-8.537902,-0.201614,6.176948,-7.452978,-4.938442,-9.934716,4.925364,-4.242871,9.158871,-0.959961,-4.487248,4.668946,9.066855,3.152540,-4.521805,-8.739286,0.670073,8.177220,-5.413311,-6.177304,-2.709309,-1.048150,-7.094477,-5.146476,5.934890,-2.086213,0.956873,-1.561126,-7.411421,-7.194269,2.954751,3.925234,6.623859,6.276791,-1.438523,4.269355,4.323766,-2.145223,-1.870818,3.004740,6.506555,3.455517,7.879859,8.641113,1.201058,-7.564695,-6.805580,8.113160,-7.486885,4.788211,-3.235922,-4.144132,-1.502204,-7.986283,7.644009,0.246591,5.040814,-2.509958,-3.908821,-3.096193,9.956820,-7.015377,-8.125928,-8.722664,-7.088145,5.003732,-8.446905,-7.811866,-4.674166,5.759403,-8.680239,-8.673183,7.005803,-0.716336,-9.666653,1.734426,0.705221,5.585083,-4.691258,2.563057,6.455108,4.806413,-8.733884,6.459806,-7.739569,-1.274151,8.474983,-1.672543,6.638457,-3.070535,8.724663,-8.213382,3.596496,-5.960002,0.352533,-1.510987,-8.628398,-9.201569,-0.868107,7.835947,-0.493831,4.694022,-3.035842,-9.307779,9.986417,0.598478,-2.747820,1.388349,8.660723,7.969466,6.706140,-0.875903,-7.429712,-3.891028,-7.145494,7.932084],[-3.390119,-0.719210,4.973285,-7.421299,5.723296,8.197885,3.664183,1.050945,8.602375,9.688267,-8.703391,-5.542376,-6.511646,8.699530,1.699516,7.238348,-1.807511,-4.289274,-2.657970,-9.167429,3.385866,-2.227648,-7.988633,8.685852,-9.010489,1.742891,-3.295428,2.387405,-6.204383,5.908369,-0.219983,8.921940,-3.341583,-6.247072,9.842461,-9.279784,-4.691131,8.078994,-2.604195,-2.831497,-0.914128,-4.235991,-5.102759,8.482460,-2.372906,-2.067470,-2.953897,4.382277,7.407310,7.102995,-9.185596,4.995953,-1.885087,-5.983859,-3.412449,-7.872921,-3.588605,2.874467,-0.707790,9.075597,-7.588747,4.545845,-6.692878,4.749380,-4.125176,-3.092359,5.981891,-8.817504,-7.551245,-5.257581,8.736152,0.361280,8.354977,-0.731564,-6.205577,8.416088,8.785891,3.440158,6.908022,-6.805596,7.427050,8.706617,-3.509816,8.488625,-6.863395,2.818773,-0.384470,7.458851,-2.372401,4.426839,5.424133,0.567374,-2.239957,-9.869896,2.657602,3.395559,8.964182,2.555908,-5.760057,0.140933,9.235386,8.066030,1.094082,8.033303,-1.254432,-7.912069,3.270026,0.105118,-4.594252,-1.758253,-8.134167,6.747441,-4.231059,7.420551,9.012903,7.749871,-4.599397,-7.955189,6.295095,7.075854,-1.081655,7.918315,4.591058,9.114197,4.881901,7.937946,-1.458581,2.071661,-4.197177,3.479170,4.892674,-5.361718,1.240454,-1.905496,-6.273463,8.407959,3.314427,5.948213,5.612756,0.152068,-0.022976,-1.270077,9.269423,1.961009,-9.589084,1.167847,8.400856,0.201025,-8.188384,7.795264,1.225524,9.960526,6.967441,4.308811,-0.635622,5.763127,-4.870090,7.521634,-7.822459,3.422746],[1.568227,-3.619668,-9.390186,-4.729882,4.744382,5.723960,-6.749529,-2.181626,7.846446,-3.911539,-8.482663,-6.188684,5.912666,-4.471219,-6.361636,-0.682917,-6.713511,-7.180774,9.552944,0.800925,-6.460064,1.420553,0.158000,1.812860,-5.703800,-2.546479,4.815319,5.662222,-7.420207,-7.451996,1.560552,7.727975,-9.050647,-7.043579,-1.649750,-1.933411,-5.363607,3.431162,3.385387,4.332707,-4.852011,-4.968311,-6.260573,-5.072063,1.631498,-2.046779,7.546475,-5.032331,1.509985,9.989043,-1.504922,6.945363,-9.349227,4.601336,8.074077,1.105532,-5.421146,3.544681,7.983439,-1.975377,3.919312,9.011039,-1.279186,-9.202366,-7.753870,0.974966,4.491837,1.292543,0.389209,-6.773453,1.943750,-8.660383,8.382433,7.297877,1.260133,-9.180789,-7.143148,9.634469,2.435867,-2.170507,-8.385379,0.972555,-3.567116,7.029115,4.378198,-8.046669,4.674413,-4.522201,5.914907,5.604067,5.305198,5.804266,4.705354,-6.420294,-8.486201,-2.375158,-3.492213,-3.814795,-8.418826,-7.202435,7.486806,7.119207,0.644619,-8.524832,0.749776,7.546092,3.952430,-2.585475,-3.564447,9.907206,7.628616,7.078348,1.223558,1.845371,7.148219,1.829614,-9.327979,5.970458,7.430238,-9.604318,6.996797,0.622371,-2.369796,2.110417,8.709210,0.695972,-1.851239,-5.313162,3.521732,4.624294,-4.931851,3.752420,6.156700,-1.289381,-4.001159,6.399789,9.518403,-7.544981,-3.706686,-3.949586,7.025454,0.363320,-7.779087,3.810625,7.880313,-0.975125,-8.510216,-8.892595,-4.950202,-6.817209,-1.884001,-4.258273,-3.148784,3.588274,-2.474396,-3.704319,-6.952212,2.121436,-6.942563,-6.251652],[0.172093,9.219274,-0.547533,-3.564904,-9.640571,-1.758836,-9.414726,-3.890597,6.797458,-5.070034,1.018843,2.615477,-1.387559,-6.348790,-4.774553,-4.780808,8.366032,8.791062,7.213577,-9.821034,-0.535832,-4.604363,3.072008,5.705147,4.861834,-1.504869,9.677653,-9.797302,-1.244968,-2.033441,0.837413,6.977347,-3.941332,-8.896073,-8.152455,7.640824,9.770966,6.366839,1.791514,-6.622917,-7.724037,6.315525,-2.157905,0.703634,5.220672,0.548678,-8.829177,8.162753,1.331369,8.456351,2.725573,-5.989100,-3.479541,9.643612,8.722164,-1.398129,7.403320,3.275635,5.911272,-0.145622,-6.922257,9.888013,-4.121899,5.942189,0.139603,2.065609,5.413259,3.891410,-7.506502,9.328100,-3.659563,8.594107,-4.456343,-0.949558,-6.762500,-8.640182,-4.014841,3.501331,-3.877386,0.238753,6.427473,-8.897087,-2.327955,5.461231,8.423710,-4.899146,-2.296324,1.674817,-9.904308,8.383336,-3.325543,4.852270,6.581476,-5.946776,3.529537,3.624044,-8.987367,-5.562401,-7.089083,0.935573,-7.696879,7.920444,-9.417384,7.095591,-4.811850,0.205384,-5.588708,-3.003205,4.400662,-6.932249,-1.153261,-1.268107,5.933575,9.437972,-5.538822,3.256175,8.287755,8.561032,3.347209,-7.524307,9.980156,1.628596,3.013649,-7.334340,-1.960188,1.401736,-6.114833,4.266014,-4.268743,3.818932,-4.777617,-3.345506,-7.588181,7.233559,-2.297943,1.010025,0.404837,-3.148151,-0.146983,8.431032,0.049125,8.425892,-9.608820,1.765927,-2.307289,3.037036,-3.373002,-7.908166,-2.028136,-9.506452,3.697369,-3.416912,-9.823619,2.634945,0.799089,2.438592,-9.945302,8.770553,-2.728087,4.305574],[2.197746,8.048531,-5.776478,-9.874439,0.599204,-0.405517,1.471999,1.338480,6.979218,-6.538519,4.252631,1.805435,4.748192,2.124184,6.809164,-3.116639,7.018993,-2.819823,3.056523,-1.368881,-3.321290,5.157507,-7.573158,0.210380,-7.139856,-0.800356,-1.585716,2.085718,-5.684894,9.312967,7.149090,3.477208,6.884146,7.570079,-4.861074,0.081369,-9.205975,-9.677271,1.169393,-8.348238,-4.906835,3.843090,-2.796091,-5.520285,5.861168,-6.590027,1.930098,-9.026480,-8.878606,6.345667,6.061398,2.603684,6.061030,-4.446936,1.961041,-2.361827,-7.610772,-9.571268,-7.060814,2.081282,-8.141070,7.651825,2.804663,-3.501918,7.017363,9.632356,-6.659385,-3.611638,-7.013745,-0.511788,6.579731,4.671110,1.761542,-8.147763,-7.961562,4.944020,1.059055,-9.690560,-3.527134,-7.489439,-1.967680,8.349425,-9.567091,1.720714,-1.921823,0.058980,-7.046708,2.249269,-4.272240,-5.206108,-0.200964,-6.291591,-5.090137,-4.963345,0.165853,-5.890479,-6.749051,2.969586,3.861114,-4.896610,-8.872993,7.418289,-3.546545,-5.136844,-7.775849,-3.367967,6.469162,-9.378065,7.380772,-8.917613,-5.475262,0.850130,-7.899103,6.897981,4.371356,-8.744049,0.951074,-8.979510,-2.477208,1.413329,4.535880,2.494670,-1.940759,-4.843738,5.500063,-0.332997,1.790496,-9.702194,-4.327287,8.089394,7.701208,-7.200224,4.995225,7.170447,7.218557,-8.543460,-2.117613,4.360333,-2.494575,-8.128816,7.738896,3.719288,-5.275656,-2.912987,3.196635,-4.996339,4.783280,-5.907835,-3.390706,4.244117,-8.747331,-3.484175,8.366096,9.397801,-1.727782,5.287006,-0.243857,-2.298513,9.717562,-2.177852],[5.139156,7.538326,7.253125,8.353593,3.343717,1.310789,1.183424,-1.477630,-3.748254,-3.953808,-7.178256,-6.561042,-6.992748,5.841457,3.325512,-9.553959,9.746350,-5.761580,1.787389,-9.318069,-9.190840,-1.175223,2.722267,-8.541146,-8.528142,-7.060497,3.270186,-2.348458,-3.575123,8.826864,2.305630,-2.226503,9.131191,5.125383,-9.526401,-5.148872,8.110134,-5.890939,1.364915,-6.783994,3.329304,-0.126132,2.286790,-5.836823,6.317780,-7.384979,-7.577658,9.210998,4.181474,-8.845291,-1.986331,-3.812877,-0.966094,-2.534337,2.105454,2.082043,-2.627758,3.085439,-5.915467,6.105586,3.957371,-3.671291,-4.265048,-1.832634,-1.377500,2.701454,5.094875,3.376730,8.272740,6.935732,-8.984100,7.221901,1.929366,8.287875,2.296629,8.669647,-5.665322,-2.702473,4.209720,-9.351615,0.003149,-4.035059,5.062375,-4.488137,6.721402,1.923589,2.969030,-0.436316,-9.403579,-6.612456,-7.025382,-2.676423,-4.564111,2.488404,4.208910,2.977200,-7.165145,8.086048,5.906843,-8.828556,-4.015697,5.621378,-9.597036,-9.184659,8.124160,-1.951395,-6.558058,-8.811045,2.638768,-0.721991,6.026503,-0.688620,2.980213,2.981988,0.004783,5.286595,5.329861,1.681154,6.969135,-3.668095,9.761732,-3.049569,-0.820661,-1.120761,8.371933,-9.557875,-3.758387,-7.119975,0.534333,5.040445,1.189023,-1.516520,4.730341,-1.466623,9.663593,5.055867,-7.600876,-5.323368,-4.013707,-1.853276,8.234049,-6.362855,0.301458,8.384349,-1.738971,-7.812166,3.952781,-5.030354,-9.781292,7.942174,-8.605334,-0.293301,3.772389,8.023470,6.783077,1.613652,-9.157149,3.659845,-8.861161,-7.816224],[3.672827,-1.125209,9.101190,1.683330,7.205058,1.344661,3.857583,-4.809309,-6.432907,-9.646029,-8.602122,-2.986527,0.025343,-4.598253,-8.327527,-8.741669,5.185240,3.335146,8.979402,3.528883,6.422317,-3.274091,-5.374772,6.699608,-5.592414,9.728642,1.370326,-5.941891,4.190877,-8.830683,8.906923,2.695524,2.346941,-3.983577,3.500629,-1.796034,-0.164392,1.665438,6.629406,-4.380056,-3.373210,-9.090245,9.642248,-1.519473,-9.830573,3.615017,6.386581,-7.832017,1.149350,4.836176,-9.652156,7.319827,0.703896,-3.414158,-1.522460,-4.500432,-3.691828,-0.750620,8.592858,-9.630045,-4.521227,-2.295476,-9.505604,-0.802436,0.308818,-7.667706,4.436102,-4.730994,-2.164065,-8.172291,4.419452,5.213112,1.434834,-0.751360,-9.784136,-6.004194,-4.352726,-2.456976,-5.743829,-9.733073,-0.801123,7.972666,-5.562998,-4.943311,-3.739026,6.049571,-3.051744,5.575367,2.018878,-6.731794,-6.527637,-4.277929,7.003020,1.019887,3.798137,4.612879,-6.871519,-7.820000,5.636925,3.196292,8.284550,8.550768,2.156123,0.406837,-9.707507,-4.113467,5.310541,8.955573,7.745030,-4.033001,-0.450976,1.780963,-5.378865,-0.387378,-6.666002,-6.869168,-0.082659,9.165640,-5.813023,-2.395131,6.210922,-1.932859,3.721969,0.700860,-9.968483,-3.834964,-7.698879,-1.326326,8.477956,-2.365678,-6.436163,5.201824,-5.996493,5.247489,5.283555,-1.242588,-1.491731,7.828910,-4.234653,6.377145,-4.682273,-7.154423,1.196137,-9.635542,5.868479,-3.908978,3.758926,-1.808172,0.902850,-2.551818,-8.572164,7.869787,8.762979,-0.734780,8.881502,6.055066,1.615588,-8.023053,-9.570161,8.126404],[4.413853,0.608232,6.073947,0.996135,3.723653,-2.049459,-1.603592,0.754484,-7.794290,6.810750,0.227764,-0.306922,-2.638127,9.236740,8.985773,-1.604731,-2.266463,3.558658,-0.530139,-1.440789,-6.859001,4.447449,-3.556390,3.678732,-0.319249,1.101583,7.351694,6.568805,-4.479278,-9.102827,5.382408,5.752339,-4.123020,-3.240865,6.889681,4.256656,9.197198,-4.641596,1.864995,-2.047323,-0.476605,7.495607,9.838844,-4.367576,3.112274,3.262247,6.156622,-0.466583,7.062145,-1.760983,-3.344479,9.365944,-9.215873,6.560920,5.209987,-2.610592,9.798964,2.586916,-7.485354,4.855256,-5.189548,-9.466924,1.018373,0.924788,4.255283,3.289595,0.525430,2.446000,-1.234400,1.607494,6.680688,2.338822,3.219418,9.667170,-8.925038,1.657019,-8.183767,2.296906,0.229362,-1.133267,-0.871601,-4.480670,-0.473435,-6.946399,-5.321835,-6.831635,1.238158,2.809495,-1.020164,-2.890644,5.036202,0.733093,3.508941,8.779314,-9.282170,-6.303536,0.642805,-8.929219,-2.673590,-2.354817,6.051022,-3.415266,-1.871459,7.108359,9.902472,-8.592122,-3.235499,-2.431202,-6.490353,-7.903817,4.563417,3.933994,7.398637,9.562103,-3.897091,-6.790199,-4.958972,-3.651320,-7.328298,-1.538308,0.815470,-9.158264,-2.528527,-8.473499,-2.571095,2.245829,6.945414,-9.751703,1.164617,-3.199962,9.985063,3.785193,-6.991251,4.527524,2.646987,-0.538518,-7.701434,-7.689462,3.876815,4.806130,7.257111,7.815588,6.882914,5.643852,4.941680,3.336743,1.950300,0.924777,-6.284063,-2.133069,-0.912305,1.647400,-8.421784,9.683697,-4.685915,2.696422,-1.596806,-0.141008,4.303417,-8.009072],[1.408105,0.625898,-6.514616,-3.782209,0.629007,-8.518255,1.836102,-0.752269,-6.207679,1.634627,-7.394572,-2.540780,-7.467916,3.607258,0.654451,-4.400735,3.102128,6.779681,-4.441672,-7.030377,-8.355358,2.874505,-4.136336,7.797353,-9.260476,3.662827,-1.080829,0.205107,-3.158140,-6.622982,-8.293981,5.771404,-1.021222,6.560303,-0.222146,8.872200,-7.196651,5.403912,-3.233657,7.373479,1.312575,-1.460117,4.408819,-0.563165,-6.268877,7.501754,-3.328460,-3.485218,9.873217,9.193249,7.300659,-5.860150,-3.270889,3.974399,4.288975,3.604241,7.196634,-3.432419,0.189157,4.728958,8.179141,-6.781613,3.718615,-0.290742,-3.376178,-2.499230,-7.459576,2.941612,-5.483882,-6.872321,-7.465176,8.942566,9.705031,-3.937516,-1.988297,-4.519773,-5.624252,0.302616,7.456769,-6.437680,-2.867965,1.292024,0.773386,5.679820,4.367657,5.448991,1.856564,-6.572489,-9.538629,4.691979,-6.532430,-5.727547,-1.905512,-6.370866,-0.089047,4.394672,6.006228,1.031251,2.290318,8.076074,-8.981439,-4.133857,6.910959,-0.684791,8.740931,-7.932414,5.358026,-4.166355,9.145797,8.145887,0.984434,-0.585456,-0.044115,-7.561100,-0.923065,-7.081732,-5.934458,-5.406980,3.180156,-3.818615,-5.208313,-4.228853,8.390762,8.556710,6.938469,-3.727326,3.139972,-0.915293,8.587275,0.105841,-2.932091,-5.110159,5.630532,-1.380125,-4.150064,6.794880,7.258447,-5.561561,4.232043,3.646162,9.172523,0.684569,-8.723880,-1.427713,-4.927213,3.763778,1.981959,-7.968484,-3.259528,-8.517758,6.006442,9.116146,9.434555,4.592078,8.979564,-4.732300,3.911574,6.002743,0.968421,1.717802],[-1.737604,-6.927373,-2.788981,-8.199743,4.832229,5.874550,-4.732649,3.651044,9.357179,-7.449288,-5.078048,5.649034,2.380717,6.079624,-6.021635,-9.588274,-7.570753,-0.127736,6.779841,2.493311,3.813140,7.529258,-5.395201,-9.328608,-6.283079,-0.883805,6.047773,-3.185311,0.828230,5.679650,-9.191849,-0.886337,-9.435026,3.457093,6.372224,-6.056109,-7.034098,-5.033147,-6.703189,-2.354847,-6.959194,5.605215,-5.080768,-4.162421,-6.154271,1.184277,8.858617,9.451998,-8.196984,-7.096044,4.918758,0.845612,-1.820414,-5.029274,-9.551310,7.613786,-4.003657,-0.580615,-7.842366,-6.975200,-1.283185,7.066952,8.216050,4.898987,-9.033338,3.171380,-4.560576,5.158698,-1.812604,9.117759,-1.150391,6.312805,-1.298165,4.625357,-0.858411,1.011453,1.729725,9.017466,7.261292,-4.907512,-9.344725,4.798193,-9.490452,7.674985,2.914161,0.483627,-5.635887,-6.926124,-9.861485,5.709404,7.873735,0.873435,-5.283577,2.967563,8.374778,9.814115,0.537702,-7.019917,9.756694,-9.819431,3.272559,-8.074424,5.718488,-6.513860,-9.150492,-8.151822,-8.251636,-9.627905,-7.259191,-3.540007,7.927475,5.046609,-4.129202,1.339941,-4.839923,-4.108545,0.897488,4.185776,8.041578,0.714592,8.888830,4.666443,2.229541,-7.967685,4.276358,-8.766817,-1.348653,4.811122,5.483340,-1.276576,6.915128,4.174566,9.178196,6.732177,-2.860674,-0.383251,-7.967251,9.362260,4.736743,-9.456545,-1.696282,-3.384357,-4.040370,-8.431263,-6.654343,0.364227,5.002143,-3.943328,0.995459,-2.926417,-7.593794,-4.032464,-2.517122,4.108027,4.262519,7.063563,-7.838380,9.498085,5.746265,-9.264044],[-4.423594,6.324510,0.539640,0.166994,9.306283,-2.889327,-2.858089,5.211416,1.281013,1.102831,-6.468922,-8.415189,-7.040305,7.916865,0.888558,7.661186,-8.457350,-8.125044,-8.832581,-3.649257,7.290971,-0.822312,1.682358,-3.846489,-9.772848,-9.418763,-2.230647,2.967473,-5.290315,4.221149,-6.105725,1.185931,7.087739,-3.540242,0.927760,-7.202150,-9.969732,5.779146,-9.929200,-6.952491,5.743790,5.224885,3.649222,-1.066665,5.911363,-4.655615,-9.999820,-4.894996,7.216922,5.800191,-8.734332,1.450344,-7.761539,-8.112891,-7.347293,2.329531,6.004186,-8.502354,5.517187,-0.248460,-1.818317,4.430997,5.050346,-6.611372,-5.448475,2.530935,3.184719,8.240795,2.096126,-4.669352,-2.362414,6.389019,-4.093505,2.897991,-8.178195,5.596145,-1.885286,0.660678,-0.747002,-7.234038,-8.704133,1.126720,-5.157428,8.340204,0.780908,8.680652,-0.773542,5.962377,-7.587464,-3.741592,8.685729,4.463401,-8.349612,3.159468,3.449514,-1.247844,0.350923,3.920272,-1.760098,-9.296907,1.785724,-4.838452,-0.123433,-0.770446,-3.019744,-9.642664,-8.919034,0.064014,-7.726715,-2.933278,-2.750184,0.193319,-9.482474,3.637558,-6.307555,-7.656131,7.122769,1.914931,5.602593,4.583289,-1.923963,9.964751,4.654484,-1.505690,7.376617,6.188613,6.978975,1.735047,-5.047761,-9.751577,-3.057901,-8.885160,9.983886,-1.763824,3.126705,-2.381825,1.365713,9.408641,-7.368654,-8.504897,-7.512733,2.298135,2.308590,4.226395,7.272911,-2.891909,8.435338,-8.874711,-4.667341,0.169151,-2.657031,9.567488,6.038578,-6.599636,-5.387004,8.964432,4.353306,-2.098571,8.762799,-2.254167]], dtype = "float32")#candidate|11346|(14, 160)|const|float32
call_11345 = relay.TupleGetItem(func_2683_call(relay.reshape(const_11346.astype('float32'), [16, 10, 14]), relay.reshape(const_11346.astype('float32'), [16, 10, 14]), ), 0)
call_11347 = relay.TupleGetItem(func_2687_call(relay.reshape(const_11346.astype('float32'), [16, 10, 14]), relay.reshape(const_11346.astype('float32'), [16, 10, 14]), ), 0)
output = relay.Tuple([bop_11334,call_11340,var_11341,var_11342,call_11345,const_11346,])
output2 = relay.Tuple([bop_11334,call_11343,var_11341,var_11342,call_11347,const_11346,])
func_11348 = relay.Function([var_11331,var_11341,var_11342,], output)
mod['func_11348'] = func_11348
mod = relay.transform.InferType()(mod)
mutated_mod['func_11348'] = func_11348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11348_call = mutated_mod.get_global_var('func_11348')
var_11350 = relay.var("var_11350", dtype = "float64", shape = (1, 4, 15))#candidate|11350|(1, 4, 15)|var|float64
var_11351 = relay.var("var_11351", dtype = "float64", shape = (450, 4))#candidate|11351|(450, 4)|var|float64
var_11352 = relay.var("var_11352", dtype = "float32", shape = (539,))#candidate|11352|(539,)|var|float32
call_11349 = func_11348_call(var_11350,var_11351,var_11352,)
output = call_11349
func_11353 = relay.Function([var_11350,var_11351,var_11352,], output)
mutated_mod['func_11353'] = func_11353
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11651 = relay.const(2, dtype = "int8")#candidate|11651|()|const|int8
var_11652 = relay.var("var_11652", dtype = "int8", shape = (16, 7, 11))#candidate|11652|(16, 7, 11)|var|int8
bop_11653 = relay.bitwise_or(const_11651.astype('int8'), var_11652.astype('int8')) # shape=(16, 7, 11)
var_11666 = relay.var("var_11666", dtype = "int8", shape = (5, 8, 3))#candidate|11666|(5, 8, 3)|var|int8
bop_11667 = relay.power(const_11651.astype('float64'), var_11666.astype('float64')) # shape=(5, 8, 3)
bop_11672 = relay.divide(const_11651.astype('float64'), var_11666.astype('float64')) # shape=(5, 8, 3)
bop_11676 = relay.logical_and(var_11652.astype('bool'), relay.reshape(bop_11653.astype('bool'), relay.shape_of(var_11652))) # shape=(16, 7, 11)
func_4422_call = mod.get_global_var('func_4422')
func_4425_call = mutated_mod.get_global_var('func_4425')
var_11680 = relay.var("var_11680", dtype = "int32", shape = (2, 468))#candidate|11680|(2, 468)|var|int32
call_11679 = relay.TupleGetItem(func_4422_call(relay.reshape(var_11680.astype('int32'), [13, 8, 9]), relay.reshape(var_11680.astype('int32'), [13, 8, 9]), ), 0)
call_11681 = relay.TupleGetItem(func_4425_call(relay.reshape(var_11680.astype('int32'), [13, 8, 9]), relay.reshape(var_11680.astype('int32'), [13, 8, 9]), ), 0)
output = relay.Tuple([bop_11667,bop_11672,bop_11676,call_11679,var_11680,])
output2 = relay.Tuple([bop_11667,bop_11672,bop_11676,call_11681,var_11680,])
func_11690 = relay.Function([var_11652,var_11666,var_11680,], output)
mod['func_11690'] = func_11690
mod = relay.transform.InferType()(mod)
mutated_mod['func_11690'] = func_11690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11690_call = mutated_mod.get_global_var('func_11690')
var_11692 = relay.var("var_11692", dtype = "int8", shape = (16, 7, 11))#candidate|11692|(16, 7, 11)|var|int8
var_11693 = relay.var("var_11693", dtype = "int8", shape = (5, 8, 3))#candidate|11693|(5, 8, 3)|var|int8
var_11694 = relay.var("var_11694", dtype = "int32", shape = (2, 468))#candidate|11694|(2, 468)|var|int32
call_11691 = func_11690_call(var_11692,var_11693,var_11694,)
output = call_11691
func_11695 = relay.Function([var_11692,var_11693,var_11694,], output)
mutated_mod['func_11695'] = func_11695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11703 = relay.var("var_11703", dtype = "uint16", shape = ())#candidate|11703|()|var|uint16
var_11704 = relay.var("var_11704", dtype = "uint16", shape = (6, 16, 4))#candidate|11704|(6, 16, 4)|var|uint16
bop_11705 = relay.multiply(var_11703.astype('uint16'), var_11704.astype('uint16')) # shape=(6, 16, 4)
func_3671_call = mod.get_global_var('func_3671')
func_3673_call = mutated_mod.get_global_var('func_3673')
const_11710 = relay.const([[1.354509,-5.953220,-8.309655,4.509450,-2.991495,-9.750666,-6.203366,0.855297,8.325624,8.032902,5.224634,-1.887415,6.236540,8.982599,9.648353,-4.829820,-6.198816,7.280781,-1.091613,-0.038185,5.972928,-5.368189,8.173845,3.234803,-9.350886,-4.253356,-4.839325,6.609483,-0.257903,4.456447,-8.078593,-6.300447,-7.580232,6.148244,-8.532312,-5.457820,5.845823,9.336711,-0.245718,5.930512,5.284341,-9.094568,-8.600977,1.824203,-1.339141,-9.499421,-4.204919,2.220066,-4.288407],[-2.128205,-8.191747,-6.270408,1.804378,-2.678867,0.451421,-6.273526,1.829338,-8.210117,-7.130507,-4.314174,-4.485247,0.526422,-2.081271,-0.710210,-8.207632,7.218686,9.845908,-8.789456,-8.091127,-5.330229,-3.004167,-2.405213,6.943059,1.466096,4.622788,-8.498639,-6.673904,-3.948113,-7.175913,-8.163596,1.947138,-8.859106,2.661422,7.891622,9.664690,0.316471,4.544937,-6.364644,-0.263206,-6.545787,3.790221,-9.168536,6.586285,-8.911663,1.781168,-7.800841,2.802492,9.400388],[3.453448,-2.855539,-9.081546,-0.752330,1.757026,-7.735276,-7.455176,4.681524,7.097628,0.540033,6.070222,-2.474867,-2.822116,4.015290,3.804723,7.120871,-1.704858,-9.399367,8.354298,-8.148761,6.984101,7.545434,9.857696,2.686585,-9.004378,3.718389,8.591601,-7.366407,-8.880757,3.962304,-3.569101,-3.493496,-1.231880,6.818988,3.118718,-9.308492,-0.286763,-3.687096,8.747734,-6.900700,6.107958,1.924668,3.455585,-5.569043,4.953529,-1.823695,-8.026681,-8.552888,1.487420],[5.586783,6.290430,7.134389,9.832653,-5.750166,3.552103,-0.042495,-4.136806,9.266758,8.003492,-1.958012,7.822340,-3.693864,8.215948,-8.468407,-3.095813,-3.191629,-9.960851,5.317578,6.811534,-7.076961,-0.806050,1.211945,-2.520529,-9.731576,0.261755,-5.616822,8.810952,-1.532382,-2.353803,0.573812,-5.934607,-8.671698,3.543925,-2.490898,5.544767,-4.972520,9.488901,8.251730,-9.302928,0.538827,-8.483534,2.166882,-9.999298,-8.940055,-0.168471,7.564085,7.647833,4.648364],[5.073663,-6.620598,-2.263630,-8.777275,-4.032252,3.692183,-4.661357,-2.834594,2.708699,-8.335058,-5.060654,-8.071518,2.051639,5.124119,3.790517,4.693420,8.398745,-9.207773,-6.445173,6.854138,-5.354440,-1.916262,-3.409491,2.531997,-6.145392,0.218144,-4.233932,9.974060,-3.659664,8.414372,-9.376658,-1.807388,-3.172473,2.548616,-6.547096,7.830208,-1.315765,4.441338,8.890456,-0.973982,-8.779705,-1.696160,1.622824,-2.793385,-2.091725,2.553298,5.228984,-7.611527,-0.352536],[-0.491624,9.233613,1.401391,6.210429,-2.364730,7.656434,-9.089732,-0.086955,3.649781,7.737692,6.127956,0.811946,-7.883869,1.668843,-7.343163,-1.359463,-4.293613,-1.896574,1.143925,-6.013099,-1.447161,-4.079786,3.808587,2.994658,-6.535922,5.638437,5.597801,0.795953,7.029615,-6.932975,-7.074364,-8.273607,-7.843881,1.784064,1.557119,6.435425,6.476431,-8.625068,5.366842,7.113050,-2.391517,6.543018,4.564572,1.322817,1.180452,-6.590690,2.595522,-4.437319,-0.119764],[6.579824,6.337394,7.155770,8.387256,-7.129434,-2.974626,-2.058003,-0.281290,-7.902603,-7.268457,-3.573359,7.964483,-8.201701,8.464439,6.597777,-0.592678,5.230332,8.927988,-4.666642,8.115185,0.352620,1.027881,-6.750055,-1.211377,3.373174,7.126848,-6.235562,7.000502,7.139505,-3.968976,-2.170771,0.587460,-0.822952,-2.150917,6.328559,9.922098,6.610381,5.046408,-3.174871,-7.138898,-5.049360,9.227387,5.212471,0.818025,-5.789251,3.503503,-8.584130,-1.156990,3.562542],[-4.111726,-8.694031,-5.654777,-4.500029,-2.531620,1.680239,-0.502965,-0.219753,-8.623374,-6.916222,-8.366867,9.366176,4.152444,-4.718487,2.026769,0.474982,0.742119,4.161609,3.954970,3.071355,8.435546,3.806682,-3.517156,1.944504,6.137923,9.336781,-8.643273,6.300081,-3.475118,-4.105295,4.595334,3.931034,6.108370,-6.170492,-7.948333,-7.698407,-6.772383,-6.896315,9.945498,-0.251939,3.079689,-9.409860,-4.442530,-5.759829,-7.148560,-5.143312,-5.898807,-9.778328,8.424900],[-1.638530,-5.027103,4.097515,-3.899772,8.500712,4.150235,-6.377617,2.648243,9.853862,-5.120136,2.805737,-6.462378,7.564556,8.413820,-4.169177,-5.646711,5.048842,-8.291634,-7.504786,-2.771008,-7.744606,3.789209,-1.715486,-5.463872,-6.937364,9.156681,5.782204,-2.365607,-4.406502,-2.149084,-5.036046,-9.452942,1.279581,-2.531907,9.633081,1.426712,-3.093995,9.461135,-9.688813,-7.989249,-1.414097,-6.880928,6.095166,-0.399425,-5.995378,9.690795,-0.102809,-5.623689,-6.117184],[8.356470,6.615984,0.848493,2.643028,2.817310,-8.926297,-5.630129,9.541653,-9.981534,5.034651,5.401768,0.041049,-1.553660,-5.863917,6.846197,9.675254,-1.139370,-5.067919,7.638407,-9.259381,5.743988,-2.524882,-8.562887,-0.036628,0.640203,3.167614,6.050671,0.034430,-4.553887,8.462762,-3.914955,-3.602207,3.587356,-7.175740,-6.224640,5.974669,-1.609544,-3.656000,-0.123325,2.763424,-8.332828,-1.200884,-6.109434,-3.430075,8.780859,-2.307572,-9.938150,-5.741515,4.229176],[-1.825727,-9.795679,0.954585,-9.521275,8.083961,-8.498817,-3.879328,8.876045,2.835585,-4.425197,4.400616,9.019503,4.136785,-5.098345,3.896912,-3.261219,-4.529426,-6.327683,3.515586,4.890731,9.898729,-4.441575,-3.985397,-7.582478,4.978839,8.608617,-4.898550,-2.188985,0.109076,4.929040,1.324311,-5.821732,-6.665520,8.828390,8.194447,-8.821034,1.754379,-9.132720,3.128929,8.953205,8.379613,7.487040,9.023186,2.530124,-1.690625,2.173846,0.522748,2.195065,-4.277009]], dtype = "float32")#candidate|11710|(11, 49)|const|float32
call_11709 = relay.TupleGetItem(func_3671_call(relay.reshape(const_11710.astype('float32'), [7, 11, 7])), 0)
call_11711 = relay.TupleGetItem(func_3673_call(relay.reshape(const_11710.astype('float32'), [7, 11, 7])), 0)
bop_11712 = relay.greater_equal(var_11704.astype('bool'), var_11703.astype('bool')) # shape=(6, 16, 4)
var_11718 = relay.var("var_11718", dtype = "float32", shape = (11, 49))#candidate|11718|(11, 49)|var|float32
bop_11719 = relay.minimum(const_11710.astype('int32'), relay.reshape(var_11718.astype('int32'), relay.shape_of(const_11710))) # shape=(11, 49)
func_943_call = mod.get_global_var('func_943')
func_947_call = mutated_mod.get_global_var('func_947')
var_11723 = relay.var("var_11723", dtype = "int64", shape = (1, 14))#candidate|11723|(1, 14)|var|int64
var_11724 = relay.var("var_11724", dtype = "float32", shape = (945,))#candidate|11724|(945,)|var|float32
call_11722 = relay.TupleGetItem(func_943_call(relay.reshape(var_11723.astype('int64'), [1, 2, 7]), relay.reshape(var_11723.astype('int64'), [1, 2, 7]), relay.reshape(var_11724.astype('float32'), [945,]), ), 1)
call_11725 = relay.TupleGetItem(func_947_call(relay.reshape(var_11723.astype('int64'), [1, 2, 7]), relay.reshape(var_11723.astype('int64'), [1, 2, 7]), relay.reshape(var_11724.astype('float32'), [945,]), ), 1)
bop_11734 = relay.logical_and(var_11718.astype('bool'), relay.reshape(const_11710.astype('bool'), relay.shape_of(var_11718))) # shape=(11, 49)
output = relay.Tuple([bop_11705,call_11709,bop_11712,bop_11719,call_11722,var_11723,var_11724,bop_11734,])
output2 = relay.Tuple([bop_11705,call_11711,bop_11712,bop_11719,call_11725,var_11723,var_11724,bop_11734,])
func_11738 = relay.Function([var_11703,var_11704,var_11718,var_11723,var_11724,], output)
mod['func_11738'] = func_11738
mod = relay.transform.InferType()(mod)
var_11739 = relay.var("var_11739", dtype = "uint16", shape = ())#candidate|11739|()|var|uint16
var_11740 = relay.var("var_11740", dtype = "uint16", shape = (6, 16, 4))#candidate|11740|(6, 16, 4)|var|uint16
var_11741 = relay.var("var_11741", dtype = "float32", shape = (11, 49))#candidate|11741|(11, 49)|var|float32
var_11742 = relay.var("var_11742", dtype = "int64", shape = (1, 14))#candidate|11742|(1, 14)|var|int64
var_11743 = relay.var("var_11743", dtype = "float32", shape = (945,))#candidate|11743|(945,)|var|float32
output = func_11738(var_11739,var_11740,var_11741,var_11742,var_11743,)
func_11744 = relay.Function([var_11739,var_11740,var_11741,var_11742,var_11743,], output)
mutated_mod['func_11744'] = func_11744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11751 = relay.var("var_11751", dtype = "uint64", shape = (5, 2, 16))#candidate|11751|(5, 2, 16)|var|uint64
var_11752 = relay.var("var_11752", dtype = "uint64", shape = (5, 2, 16))#candidate|11752|(5, 2, 16)|var|uint64
bop_11753 = relay.logical_xor(var_11751.astype('uint64'), relay.reshape(var_11752.astype('uint64'), relay.shape_of(var_11751))) # shape=(5, 2, 16)
bop_11756 = relay.add(var_11751.astype('uint32'), relay.reshape(bop_11753.astype('uint32'), relay.shape_of(var_11751))) # shape=(5, 2, 16)
output = relay.Tuple([bop_11756,])
output2 = relay.Tuple([bop_11756,])
func_11760 = relay.Function([var_11751,var_11752,], output)
mod['func_11760'] = func_11760
mod = relay.transform.InferType()(mod)
var_11761 = relay.var("var_11761", dtype = "uint64", shape = (5, 2, 16))#candidate|11761|(5, 2, 16)|var|uint64
var_11762 = relay.var("var_11762", dtype = "uint64", shape = (5, 2, 16))#candidate|11762|(5, 2, 16)|var|uint64
output = func_11760(var_11761,var_11762,)
func_11763 = relay.Function([var_11761,var_11762,], output)
mutated_mod['func_11763'] = func_11763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12106 = relay.var("var_12106", dtype = "uint64", shape = ())#candidate|12106|()|var|uint64
var_12107 = relay.var("var_12107", dtype = "uint64", shape = (4, 10, 10))#candidate|12107|(4, 10, 10)|var|uint64
bop_12108 = relay.left_shift(var_12106.astype('uint64'), var_12107.astype('uint64')) # shape=(4, 10, 10)
output = bop_12108
output2 = bop_12108
func_12118 = relay.Function([var_12106,var_12107,], output)
mod['func_12118'] = func_12118
mod = relay.transform.InferType()(mod)
mutated_mod['func_12118'] = func_12118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12118_call = mutated_mod.get_global_var('func_12118')
var_12120 = relay.var("var_12120", dtype = "uint64", shape = ())#candidate|12120|()|var|uint64
var_12121 = relay.var("var_12121", dtype = "uint64", shape = (4, 10, 10))#candidate|12121|(4, 10, 10)|var|uint64
call_12119 = func_12118_call(var_12120,var_12121,)
output = call_12119
func_12122 = relay.Function([var_12120,var_12121,], output)
mutated_mod['func_12122'] = func_12122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12206 = relay.var("var_12206", dtype = "int32", shape = ())#candidate|12206|()|var|int32
var_12207 = relay.var("var_12207", dtype = "int32", shape = (1, 5, 1))#candidate|12207|(1, 5, 1)|var|int32
bop_12208 = relay.minimum(var_12206.astype('int32'), var_12207.astype('int32')) # shape=(1, 5, 1)
output = bop_12208
output2 = bop_12208
func_12214 = relay.Function([var_12206,var_12207,], output)
mod['func_12214'] = func_12214
mod = relay.transform.InferType()(mod)
mutated_mod['func_12214'] = func_12214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12214_call = mutated_mod.get_global_var('func_12214')
var_12216 = relay.var("var_12216", dtype = "int32", shape = ())#candidate|12216|()|var|int32
var_12217 = relay.var("var_12217", dtype = "int32", shape = (1, 5, 1))#candidate|12217|(1, 5, 1)|var|int32
call_12215 = func_12214_call(var_12216,var_12217,)
output = call_12215
func_12218 = relay.Function([var_12216,var_12217,], output)
mutated_mod['func_12218'] = func_12218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12336 = relay.var("var_12336", dtype = "uint64", shape = (10, 3, 16))#candidate|12336|(10, 3, 16)|var|uint64
var_12337 = relay.var("var_12337", dtype = "uint64", shape = (10, 3, 16))#candidate|12337|(10, 3, 16)|var|uint64
bop_12338 = relay.greater(var_12336.astype('bool'), relay.reshape(var_12337.astype('bool'), relay.shape_of(var_12336))) # shape=(10, 3, 16)
output = bop_12338
output2 = bop_12338
func_12349 = relay.Function([var_12336,var_12337,], output)
mod['func_12349'] = func_12349
mod = relay.transform.InferType()(mod)
mutated_mod['func_12349'] = func_12349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12349_call = mutated_mod.get_global_var('func_12349')
var_12351 = relay.var("var_12351", dtype = "uint64", shape = (10, 3, 16))#candidate|12351|(10, 3, 16)|var|uint64
var_12352 = relay.var("var_12352", dtype = "uint64", shape = (10, 3, 16))#candidate|12352|(10, 3, 16)|var|uint64
call_12350 = func_12349_call(var_12351,var_12352,)
output = call_12350
func_12353 = relay.Function([var_12351,var_12352,], output)
mutated_mod['func_12353'] = func_12353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12965 = relay.var("var_12965", dtype = "float32", shape = (8, 11, 13))#candidate|12965|(8, 11, 13)|var|float32
uop_12966 = relay.acos(var_12965.astype('float32')) # shape=(8, 11, 13)
output = uop_12966
output2 = uop_12966
func_12986 = relay.Function([var_12965,], output)
mod['func_12986'] = func_12986
mod = relay.transform.InferType()(mod)
mutated_mod['func_12986'] = func_12986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12987 = relay.var("var_12987", dtype = "float32", shape = (8, 11, 13))#candidate|12987|(8, 11, 13)|var|float32
func_12986_call = mutated_mod.get_global_var('func_12986')
call_12988 = func_12986_call(var_12987)
output = call_12988
func_12989 = relay.Function([var_12987], output)
mutated_mod['func_12989'] = func_12989
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13292 = relay.const([[[5.441126],[-8.015138],[-5.026700],[6.359138],[-9.805721],[0.188803],[-0.539820],[-4.074664]],[[6.094685],[-3.986391],[1.556439],[-9.324660],[-7.378176],[-4.362665],[1.539512],[-7.833164]],[[-4.179375],[8.363953],[7.161020],[-5.342074],[6.659672],[-3.281164],[-8.872150],[-2.644917]],[[1.480357],[7.346747],[0.758823],[8.692391],[-4.308463],[2.746495],[2.490516],[-7.077665]],[[-9.056341],[-1.089835],[6.196775],[6.485924],[0.690705],[-5.200759],[-4.390566],[6.021914]],[[9.029903],[-4.176019],[-6.012587],[-8.940895],[-2.765402],[-4.716379],[6.227374],[8.161867]],[[-1.900871],[-3.154222],[-8.895488],[-5.032004],[5.844561],[-5.527617],[9.172944],[0.204334]],[[-6.681336],[1.621858],[3.132412],[6.892649],[6.270084],[-4.603653],[-5.193143],[-2.837523]],[[3.337340],[-6.898800],[-5.738900],[6.597498],[3.047513],[-8.306161],[-2.705697],[-5.236199]],[[3.557502],[3.344260],[0.937008],[-6.867031],[8.777980],[-8.077181],[6.979980],[-8.106158]]], dtype = "float64")#candidate|13292|(10, 8, 1)|const|float64
var_13293 = relay.var("var_13293", dtype = "float64", shape = (10, 8, 1))#candidate|13293|(10, 8, 1)|var|float64
bop_13294 = relay.floor_divide(const_13292.astype('float64'), relay.reshape(var_13293.astype('float64'), relay.shape_of(const_13292))) # shape=(10, 8, 1)
output = relay.Tuple([bop_13294,])
output2 = relay.Tuple([bop_13294,])
func_13298 = relay.Function([var_13293,], output)
mod['func_13298'] = func_13298
mod = relay.transform.InferType()(mod)
var_13299 = relay.var("var_13299", dtype = "float64", shape = (10, 8, 1))#candidate|13299|(10, 8, 1)|var|float64
output = func_13298(var_13299)
func_13300 = relay.Function([var_13299], output)
mutated_mod['func_13300'] = func_13300
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13855 = relay.const(10, dtype = "int32")#candidate|13855|()|const|int32
var_13856 = relay.var("var_13856", dtype = "int32", shape = (1, 12, 4))#candidate|13856|(1, 12, 4)|var|int32
bop_13857 = relay.less_equal(const_13855.astype('bool'), var_13856.astype('bool')) # shape=(1, 12, 4)
func_7934_call = mod.get_global_var('func_7934')
func_7938_call = mutated_mod.get_global_var('func_7938')
const_13862 = relay.const([-6.744553,-2.836032,-0.158745,-8.718715,6.439169,-5.337826,6.646038,-3.347359,5.081384,2.460080,-4.798730,-6.098473,2.329295,4.041183,-9.826905,6.078971,-8.879972,5.667304,-1.031299,9.570353,-4.419780,3.434244,-7.207186,7.551026,-2.062071,-1.211787,7.898986,-3.241350,5.776784,9.893293,-0.273639,-4.582374,-0.224996,0.108857,0.178016,8.921315,-7.303058,3.758043,-5.429860,-5.055125,-0.087159,9.597237,8.337856,-3.058689,4.830450,-5.880105,-3.408668,-3.566533,-5.094716,-4.923543,-8.631532,-5.342882,-8.277069,-5.450883,-8.832750,1.480422,4.235709,-4.067720,-0.082024,7.872208,-6.066603,6.962638,-9.418929,9.289930,2.775716,-6.845784,9.118538,-8.103387,1.414360,-5.741942,1.315726,-8.460055,-7.279719,9.249684,2.887665,-7.029616,-7.858010,1.329892,2.648850,-0.680994,-4.968036,9.011053,1.207672,2.973506,-9.570628,-6.342842,-1.386221,-9.348183,9.733361,9.244005,-3.855301,-8.005321,-8.589871,6.637647,-6.883075,-2.618526,-7.355225,5.332356,-7.125489,-5.261267,-6.846522,-1.447597,2.203916,-1.999784,5.664001,-2.548757,6.139846,-2.364860,-3.894619,-0.294250,7.829197,0.841484], dtype = "float64")#candidate|13862|(112,)|const|float64
var_13863 = relay.var("var_13863", dtype = "uint16", shape = (1024,))#candidate|13863|(1024,)|var|uint16
call_13861 = relay.TupleGetItem(func_7934_call(relay.reshape(const_13862.astype('float64'), [14, 2, 4]), relay.reshape(var_13863.astype('uint16'), [1024,]), ), 5)
call_13864 = relay.TupleGetItem(func_7938_call(relay.reshape(const_13862.astype('float64'), [14, 2, 4]), relay.reshape(var_13863.astype('uint16'), [1024,]), ), 5)
uop_13888 = relay.log2(var_13856.astype('float64')) # shape=(1, 12, 4)
func_943_call = mod.get_global_var('func_943')
func_947_call = mutated_mod.get_global_var('func_947')
const_13891 = relay.const([[-5],[-6],[7],[-7],[1],[-4],[-9],[-7],[4],[-6],[-4],[3],[10],[1]], dtype = "int64")#candidate|13891|(14, 1)|const|int64
var_13892 = relay.var("var_13892", dtype = "float32", shape = (1, 945))#candidate|13892|(1, 945)|var|float32
call_13890 = relay.TupleGetItem(func_943_call(relay.reshape(const_13891.astype('int64'), [1, 2, 7]), relay.reshape(const_13891.astype('int64'), [1, 2, 7]), relay.reshape(var_13892.astype('float32'), [945,]), ), 2)
call_13893 = relay.TupleGetItem(func_947_call(relay.reshape(const_13891.astype('int64'), [1, 2, 7]), relay.reshape(const_13891.astype('int64'), [1, 2, 7]), relay.reshape(var_13892.astype('float32'), [945,]), ), 2)
bop_13900 = relay.bitwise_xor(uop_13888.astype('uint16'), relay.reshape(bop_13857.astype('uint16'), relay.shape_of(uop_13888))) # shape=(1, 12, 4)
func_1436_call = mod.get_global_var('func_1436')
func_1439_call = mutated_mod.get_global_var('func_1439')
const_13904 = relay.const([2,8,3,6,10,-9,2,10,2,4,8,10,-1,-9,7,-9,3,4,1,-1,-7,-8,6,7,-1,-3,-6,5,6,-10,-9,6,6,8,-10,-10,9,8,-8,-3,-5,10,-9,-3,-8,-8,1,10,3,-5,-9,2,3,-3,-4,-9,-1,2,-1,-5,-7,-5,8,-4,-5,4,3,10,-7,-6,9,9,4,2,-8,6,1,-2,9,9,-6,-8,2,-9,-2,9,-10,-5,-4,2,5,5,-9,6,6,2,2,-5,9,-3,-8,-2,3,-5,-4,8,4,5,4,-3,-7,-2,-6,-3,-8,-6,1,5,5,2,6,1,5,5,-7,8,5,5,9,-6,6,-5,10,-10,1,-6,-4,-9,3,6,2,6,-8,-9,-10,-3,-7,-3,8,1,7,-6,-4,-8,9,-5,-2,10,-3,-6,-8,-9,-7,1,8,-7,-9,6,10,-10,-9,-3,7,2,4,3,5,6,-4,9,1,7,-1,-3,6,-1,8,10,7,5,8,-5,10,8,10,-6,-3,3,5,-6,-9,7,-1,5,9,-3,-8,1,-2,1,-6,5,9,7,3,-4,10,-4,-10,-1,10,5,2,5,-5,-8,-1,-2,10,-4,-3,-7,-10,4,-1,9,6,-9,-10,-2,9,5,2,10,-9,5,3,-4,7,2,-2,-9,-5,-9,-1,9,1,-9,3,5,4,-5,5,9,-7,8,-4,-10,-5,3,9,5,-5,-1,6,2,7,4,-5,4,3,-3,-10,3,1,-1,-7,-10,-5,-1,-8,-8,8,-9,-4,-9,4,2,-5,1,-3,8,-3,2,-9,6,4,2,-5,-9,3,-5,-7,5,4,-2,8,-8,-6,6,1,-3,-7,1,8,-2,5,10,-6,8,10,-8,-7,9,7,9,9,-5,8,2,-3,7,-4,3,-1,-2,8,9,-8,-1,4,-3,3,-1,3,5,10,5,8,-3,-7,-9,-5,-2,-7,-8,-4,-5,-8,-6,-2,6,-2,5,8,-10,-5,4,9,4,9,-6,2,8,10,8,4,3,6,-5,-7,1,-3,-1,1,8,-7,2,8,9,5,-9,3,4,-1,4,-5,-2,-10,-3,-8,10,7,-5,4,-2,-3,-8,2,-6,5,5,-2,8,-7,2,2,-3,4,4,3,-6,7,-3,-8,-6,-8,2,-5,4,3,-9,8,6,1,-7,-5,3,7,-3,-4,9,-7,3,-3,-5,-3,-3,-8,2,-8,4,-1,5,2,6,-6,-1,8,-4,3,9,-6,6,1,1,-6,-5,3,-9,-10,4,-10,9,-9,8,6,7,-10,-4,-2,4,-10,-6,-9,-10,8,6,-7,5,-2,9,10,8,10,3,-6,1,-6,-1,-2,5,-4,-9,8,8,-6,-7,-4,6,-6,-5,6,10,-5,-8,-1,10,-3,-8,-4,2,5,6,-6,-3,-3,-7,-6,-2,8,-7,-2,4,-5,-8,-1,1,-2,5,-1,-2,-7,-5,4,4,-7,10,-8,-5,-9,4,-5,-7,-1,-5,-3,7,6,2,1,-3,-7,-10,-9,9,-9,-1,-7,-3,3,1,7,-5,-3,-2,-3,5,-7,-6,-9,6,8,-4,6,-5,5,4,-7,-4,5,5,10,9,-4,-6,10,2,-1,-4,2,-7,-9,-1,-9,-7,9,-6,3,-8,10,9,-6,-9,5,-4,-5,8,-2,-2,-1,7,2,-1,-9,-9,3,-9,9,3,-1,5,-8,4,9,10,7,-2,-3,4,-3,10,-3,2,7,7,4,6,4,-1,5,5,-1,1,-1,5,-7,10,2,-1,-9,6,2,-3,-1,-9,8,-6,-10,-2,-1,-7,-1,-8,10,1,2,1,9,-10,10,7,-3,6,2,-8,-4,3,1,8,3,-1,9,8,-7,10,-6,-3,4,4,-9,10,7,-9,-5,10,-10,-2,2,-9,-8,6,8,3,-1,1,-9,-3,6,-5,-1,-10,5,-10,-2,7,9,-4,-5,10,-5,-5,-4,9,10,-3,-8,-4,5,-1,4,-6,1,10,8,1,-3,-6,-5,-6,-8,8,2,-8,-9,-3,-8,5,-9,-7,-7,10,5,6,10,4,3,-5,-5,1,3,6,2,-3,6,-8,8,-2,6,10,-4,-6,-8,3,4,-5,7,-10,-3,-10,3,-2,7,-4,4,9,-10,-6,-5,-2,-4,-6,8,-7,-9,10,6,4,5,-8,-4,10,1,-2,6,5,-1,-8,9,10,4,-3,-1,6,5,-7,-1,2,-3,-8,8,-7,-8,-8,2,-6,-7,9,-6,-3,8,-7,-9,1,-3,10,-6,-2,6,1,7,4,-8,1,-7,2,-8,-6,-10,-10,-10,6,-1,-10,8,3,-1,-9,-2,-3,-7,-8,-6,4,1,-10,-4,7,-7,-10,-8,-10,4,8,-2,-6,-7,-7,-9,10,-3,-1,9,2,-4,-2,-7,-1,-6,6,-1,-10,-7,1,6,-5,2,-5,3,8,2,-10,-4,10,2,-9,-10,-3,-4,4,6,8,-7,-8,2,8,7,3,-10,3,-10,-7,9,-1,4,2,7,7,-3,-6,2,7,3,3,4,7,6,6,6,8,-5,10,-10,-5,2,6,-5,-5,4,4,-4,1,7,-7,5,2,8,1,1,-1,-7,-8,1,-3,-1,-2,-7,5,10,-8,-7,-6,-4,-3,5,9,10,-8,-1,7,-7,-5,1,10,-1,-10,-9,-5,5,10,-1,-4,4,-3,3,7,8,8,-3,1,-7,4,7,-10,7,-4,9,-1,-2,-10,-6,-6,-10,-4,-5,10,-7,-1,-6,-9,-3,3,-3,-6,1,-9,-6,1,-1,10,-1,-1,5,-5,3,5,-8,-9,-5,5,5,-2,9,7,-10,10,-7,2,-3,4,2,3,8,-1,8,-8,8,-4,-5,10,7,-9,-9,8,-9,-7,10,10,-3,-10,5,-6,7,-3,-10,-10,-1,3,1,1,2,10,1,1,-1,6,10,-2,-3,-9,-5,2,-9,7,6,3,-9,1,3,1,4,1,-1,-1,7,9,-1,10,-8,4,-7,2,-10,-4,-7,-10,-4,7,3,10,-9,1,-10,4,8,-1,-4,10,6,-8,1,-5,8,-10,1,-2,9,-4,6,8,-5,10,-10,5,6,-10,-3,2,9,4,-4,-2,-10,3,-4,2,7,-9,4,-4,7,-7,-9,4,3,-9,4,9,8,2,2,-9,7,8,2,-2,-4,-1,-10,-2,-3,-7,2,1,-9,-2,-8,-9,-1,-8,7,-3,-1,-7,-1,1,9,1,5,3,-6,4,-6,-10,-10,-1,8,-9,10,9,6,-7,9,8,9,-9,-6,8,-6,10,-7,-2,-5,-4,-8,8,5,10,-3,-8,-10,7,10,10,6,-1,-1,7,-3,-10,-6,-6,4,-2,4,9,-9,-2,4,4,-1,2,-7,7,2,4,8,6,5,8,10,-3,-6,9,-6,1,-9,1,-3,-9,-8,2,2,-9,-6,6,6,8,-2,-3,1,6,-8,9,7,-8,-2,2,-8,2,-8,1,-6,8,-5,6,5,-7,1,4,-5,-3,-3,-10,-6,7,9,-9,-9,2,-8,-2,-10,-3,7,7,2,-7,-6,7,9,7,-4,-4,-5,-6,5,-3,-9,6,-8,5,4,8,-3,4,-9,-2,9,-3,-4,-7,-9,4,1,-1,2,10,2,-7,-2,-6,10,-3,6,5,-7,7,-5,1,10,6,1,-9,3,-5,7,-6,-1,-7,-7,5,5,7,4,7,-1,9,6,-5,5,5,-3,-8,10,-1,8,-8,-9,-4,-4,-10,-1,-8,-6,9,5,3,3,-2,5,-9,-1,-7,-3,-7,9,5,-6,-10,-6,-6,-10,-10,-8,-5,8,-7,10,-1,-4,-1,6,4,9,-4,10,-7,-9,-3,-9,-2,-4,-8,-5,-9,-9,-2,6,-9,-10,3,5,2,7,10,6,7,-3,4,5,-8,4,1,8,7,5,9,10,-3,-7,-6,-7,10,-7,-9,-8,7,7,-9,10,-4,-6,6,-4,-4,1,5,1,9,2,10,-7,9,9,-8,6,5,-4,-9,-7,1], dtype = "uint64")#candidate|13904|(1512,)|const|uint64
call_13903 = relay.TupleGetItem(func_1436_call(relay.reshape(const_13904.astype('uint64'), [12, 14, 9])), 0)
call_13905 = relay.TupleGetItem(func_1439_call(relay.reshape(const_13904.astype('uint64'), [12, 14, 9])), 0)
bop_13908 = relay.multiply(uop_13888.astype('uint64'), relay.reshape(bop_13857.astype('uint64'), relay.shape_of(uop_13888))) # shape=(1, 12, 4)
output = relay.Tuple([call_13861,const_13862,var_13863,call_13890,const_13891,var_13892,bop_13900,call_13903,const_13904,bop_13908,])
output2 = relay.Tuple([call_13864,const_13862,var_13863,call_13893,const_13891,var_13892,bop_13900,call_13905,const_13904,bop_13908,])
func_13911 = relay.Function([var_13856,var_13863,var_13892,], output)
mod['func_13911'] = func_13911
mod = relay.transform.InferType()(mod)
var_13912 = relay.var("var_13912", dtype = "int32", shape = (1, 12, 4))#candidate|13912|(1, 12, 4)|var|int32
var_13913 = relay.var("var_13913", dtype = "uint16", shape = (1024,))#candidate|13913|(1024,)|var|uint16
var_13914 = relay.var("var_13914", dtype = "float32", shape = (1, 945))#candidate|13914|(1, 945)|var|float32
output = func_13911(var_13912,var_13913,var_13914,)
func_13915 = relay.Function([var_13912,var_13913,var_13914,], output)
mutated_mod['func_13915'] = func_13915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13933 = relay.var("var_13933", dtype = "bool", shape = ())#candidate|13933|()|var|bool
var_13934 = relay.var("var_13934", dtype = "bool", shape = (8, 15, 15))#candidate|13934|(8, 15, 15)|var|bool
bop_13935 = relay.logical_or(var_13933.astype('bool'), var_13934.astype('bool')) # shape=(8, 15, 15)
output = relay.Tuple([bop_13935,])
output2 = relay.Tuple([bop_13935,])
func_13939 = relay.Function([var_13933,var_13934,], output)
mod['func_13939'] = func_13939
mod = relay.transform.InferType()(mod)
var_13940 = relay.var("var_13940", dtype = "bool", shape = ())#candidate|13940|()|var|bool
var_13941 = relay.var("var_13941", dtype = "bool", shape = (8, 15, 15))#candidate|13941|(8, 15, 15)|var|bool
output = func_13939(var_13940,var_13941,)
func_13942 = relay.Function([var_13940,var_13941,], output)
mutated_mod['func_13942'] = func_13942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14032 = relay.var("var_14032", dtype = "float64", shape = (14, 4, 16))#candidate|14032|(14, 4, 16)|var|float64
uop_14033 = relay.sinh(var_14032.astype('float64')) # shape=(14, 4, 16)
output = relay.Tuple([uop_14033,])
output2 = relay.Tuple([uop_14033,])
func_14049 = relay.Function([var_14032,], output)
mod['func_14049'] = func_14049
mod = relay.transform.InferType()(mod)
var_14050 = relay.var("var_14050", dtype = "float64", shape = (14, 4, 16))#candidate|14050|(14, 4, 16)|var|float64
output = func_14049(var_14050)
func_14051 = relay.Function([var_14050], output)
mutated_mod['func_14051'] = func_14051
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14480 = relay.const([[[-8.435561,-8.173979,4.713015,1.906324,-6.226395,-0.507082,-9.961321,-4.411059,0.362920,-4.990523,7.691721,9.442690],[1.811204,-1.174914,-3.203342,-5.484592,4.616253,-9.817287,1.953851,-3.323398,-8.553509,-1.226568,1.973563,9.437540],[-2.811726,3.332601,-0.243155,4.342007,0.333484,1.871379,8.478245,-5.739748,-1.905893,2.676677,-7.616909,-8.287232],[0.268483,5.514571,2.813171,2.523093,-0.951642,1.068024,4.365826,3.859927,0.714892,0.755388,-5.907503,9.797371],[-1.549454,-0.568176,2.703878,-0.314295,0.181901,8.439821,-1.766292,9.505299,6.834464,3.568675,0.705188,0.548287],[0.922845,-4.808761,-8.081261,3.866813,-4.250577,5.101135,-6.199615,-7.915821,-9.608198,-8.734155,0.709694,2.462990],[7.883949,6.460879,0.460307,1.641178,5.256514,-4.056891,1.246754,8.753169,8.483293,4.103932,-4.311734,-7.433567],[5.397945,9.767744,-2.707604,-4.125096,3.660171,-3.684434,-1.003408,8.700041,6.744782,-3.782647,3.291441,6.752823],[-0.474117,-3.996416,-4.476975,3.445885,-9.500427,-7.338268,-3.380610,-5.024227,4.411468,-8.331538,-0.557156,1.879047],[-1.556346,-4.901252,5.124224,-6.094695,6.229724,-3.228699,8.843765,0.624466,-7.923302,-9.372155,-9.157626,-2.172828]],[[-9.025104,-2.939429,5.962445,-3.357318,7.408199,1.149968,-4.618417,-0.816106,9.717691,-0.714959,1.491370,-0.764725],[1.711448,-4.597006,9.248018,3.095940,4.238466,-0.389771,-3.541926,-4.307322,3.800783,-2.709798,-1.036023,1.803591],[-9.650201,-2.773409,-0.528682,1.165577,-6.224491,7.335554,4.815516,7.609753,-6.372199,0.407494,-8.615039,-2.592927],[5.509793,-3.982393,-8.904362,6.437250,9.874014,-0.634203,-4.904218,8.745059,6.713336,-8.080279,-8.299573,6.770992],[5.580251,2.673825,5.482426,-1.316028,-6.431683,-8.024295,-8.001189,3.618461,9.497840,0.764992,-0.268140,-9.753246],[-0.444281,-5.918724,-9.752838,1.868837,-8.651605,-7.267153,9.142924,-6.044641,2.410225,-5.030767,1.556943,2.558285],[3.091890,-4.255599,4.280168,3.755919,-5.314441,-6.165071,7.865504,-5.118482,-0.977297,9.092047,7.264176,-6.516034],[-9.338247,4.141804,-4.060980,8.452397,5.829611,1.297532,-0.629228,-4.564073,-5.548922,-6.840657,4.667068,9.211136],[0.854075,8.338798,8.815203,7.041373,-7.514229,6.915743,8.688868,-6.067871,-3.920018,9.774616,-2.193336,5.246811],[1.026429,-6.842862,4.627209,-7.157517,3.866858,0.662047,5.811353,-0.051178,8.649780,9.586666,-7.277958,-3.855608]],[[9.130518,-4.670943,9.378211,9.207476,7.694746,3.266559,6.375754,2.606174,6.909066,6.412368,7.846249,-9.572440],[1.320288,2.376945,2.672369,4.302360,5.167329,-0.020195,0.145190,4.151678,-0.624965,7.941636,0.186343,-7.169003],[-5.165605,2.117991,0.160913,-2.202714,5.927578,5.473316,4.151324,-1.881992,-7.882557,-0.555054,-9.851792,-2.049417],[-5.688489,-4.487305,-8.550859,5.362033,0.364034,-0.981420,-4.329703,2.793910,-5.291635,4.527949,7.938673,-6.965474],[-4.796913,-4.462567,7.942811,3.094274,-4.465302,0.072969,-4.216529,3.853709,7.323325,8.649128,2.168380,-5.739759],[7.766331,9.530754,2.530582,-7.233782,-1.071146,-0.611013,2.027952,-0.175768,3.565030,-3.841109,-0.415178,5.250712],[0.990960,0.014513,-7.087152,-6.579392,1.967871,-8.948478,0.087752,7.818503,0.827946,7.157357,3.335081,9.194062],[4.247531,7.722813,3.985314,-4.601651,6.131291,6.645375,0.469843,0.959616,-8.180075,9.806846,-7.910158,3.127614],[-2.448329,-7.604330,-5.537017,-1.853639,6.066229,6.163600,2.481449,2.600815,-6.297380,-7.219972,-3.490424,-5.153060],[4.976947,-4.954747,-8.140811,-5.202872,1.405577,5.465947,-5.867441,8.241890,1.389321,-6.838828,-9.165702,4.199586]],[[3.531085,-3.893487,2.727421,-5.412591,-9.948704,-9.818467,-0.060042,2.747034,5.500323,-7.413723,3.792842,6.679036],[-0.366940,3.379366,0.600300,6.532377,-3.747971,-0.559660,9.285872,-4.504710,3.586659,-6.914048,7.209987,9.706611],[-3.713954,-1.243924,-8.445690,-8.451050,-7.649918,3.588630,-3.684353,-8.750202,8.397856,-2.524510,2.296297,-9.954447],[9.485760,-4.966235,0.643920,8.746913,1.273265,1.914783,3.863292,3.371234,2.342709,2.715464,1.121354,-1.679396],[-9.356788,1.476620,6.883340,7.939907,4.501765,-9.984193,8.234850,-6.972274,2.871405,-7.649668,-8.074791,-0.749987],[8.199859,8.326903,1.102498,1.577433,4.549204,6.080838,-4.534661,6.856602,6.654299,-9.435144,-8.685017,3.196995],[-5.296209,-5.793783,7.018304,-7.537377,0.170544,-0.678937,1.604124,-9.262377,-4.659929,-5.695715,-8.493593,-5.308466],[2.863452,6.508745,-0.245112,8.210796,-6.129508,2.559867,0.125618,-8.061217,9.712416,9.141320,-3.947779,3.357092],[-9.704834,-1.441240,-5.277105,-7.950451,0.679636,5.831993,-7.360611,3.933861,-7.644684,2.045176,-0.918573,-0.200552],[-0.402917,5.628593,-4.561448,9.113525,-0.813857,0.848286,1.785613,-7.733409,8.152805,-9.832950,-6.655337,2.533402]],[[-3.338388,-7.674339,-8.152978,-5.948158,2.388757,-4.719683,2.996700,-4.560420,7.753316,-0.960540,1.013936,7.976190],[-2.479718,-4.763454,9.703198,9.941591,-4.772105,8.705523,0.097615,8.939774,2.923893,-5.344152,-3.971704,-5.239326],[-5.820203,-3.147147,6.734990,8.487947,7.699621,-1.822341,2.725692,-8.146030,-1.975392,-1.266378,8.468723,-1.357765],[0.725550,2.882391,9.183670,4.220433,-1.636990,2.497096,-8.344971,1.222508,-8.140502,-8.249762,-4.546936,-3.497012],[-7.811482,-6.695180,-0.311814,-6.264917,4.641192,3.904261,5.952226,-6.556926,-4.619246,7.652700,-8.811268,-9.427507],[4.944407,-3.224191,0.727559,-7.991879,-3.476702,-7.255269,0.674227,-4.823280,-6.384453,6.932158,5.740498,-8.203388],[6.967405,-1.443144,-5.542168,-0.163553,6.632543,9.072243,9.739269,3.847743,-8.183338,3.077827,-3.591400,-0.022555],[6.416571,5.201503,-8.313184,3.121606,6.141170,2.710689,-2.899105,1.442304,2.392103,0.897820,-9.855185,-5.425261],[-8.323583,-1.567991,5.856547,2.009655,-3.743588,2.895351,-1.517257,-8.369690,-6.457567,-2.638524,-1.193764,9.422634],[-2.180338,-6.341035,4.904507,-6.799022,-3.942964,-0.475352,2.800673,0.477729,-5.751023,-9.671463,0.022899,0.309055]],[[8.389557,-8.539803,3.558477,7.208212,-7.138396,9.593467,-3.705285,9.870411,-3.270807,-5.054448,-9.759963,-7.386531],[8.357258,9.448760,0.201170,-5.861657,-5.755057,-1.288969,-3.711423,-4.611175,-9.791242,-5.361266,4.700411,0.652850],[-6.177779,1.002253,8.990289,2.300374,0.466661,8.341285,7.386648,9.961237,3.751440,-3.105616,3.054885,-7.099031],[-9.618293,-1.501184,3.423030,1.701843,4.074344,-8.235303,-5.025804,1.616477,-1.269259,1.563498,0.808961,-7.899877],[-6.217540,-0.874205,6.958241,2.873445,-7.876678,8.995852,-6.025148,5.612509,6.914660,-4.634095,0.873040,9.178365],[3.023193,-9.807032,6.615177,6.178357,7.484785,7.318614,-7.653471,-3.480026,-2.824939,-9.349579,-3.496669,9.168970],[3.543240,-5.655134,6.047022,2.840214,-4.265993,0.184421,-0.979030,8.055626,3.685399,-4.761192,-8.117374,-4.303509],[-8.798214,3.992791,-7.523558,-5.369296,-9.617148,-4.220961,6.866782,-3.686164,6.358241,1.967099,-4.849927,5.573085],[-4.960613,-9.918687,-5.276144,5.706669,5.253109,-7.422910,6.456990,-2.211764,2.068682,-1.484766,-0.338563,-0.869334],[-0.763832,8.729724,-9.936094,-4.423139,-6.514964,8.841765,6.657342,4.428212,7.361837,-8.274302,-2.858375,0.900016]],[[-7.723017,-1.074293,-0.443570,-4.794703,5.798104,-7.353667,3.840147,-2.035472,5.540156,-5.754696,-2.313110,4.521890],[4.131786,6.421077,-2.478189,3.714937,-4.651100,9.307719,-6.309906,3.463279,5.726709,-2.292478,7.436833,-8.827968],[-1.852455,2.575186,-9.764882,4.521740,3.579725,-6.559058,9.051417,-2.289042,4.166013,-4.489217,5.883308,6.141806],[7.865488,0.406547,-9.385131,1.923416,4.067310,-1.392589,-0.953382,6.821248,-6.757865,8.074386,-1.537117,9.497104],[-3.428084,5.610608,8.012533,-1.885749,-0.430714,7.188775,-5.407643,-1.766535,-5.989470,0.253997,-2.843480,-9.136874],[-8.168759,-7.051071,5.071835,6.128913,0.165046,2.571664,9.251927,-4.215030,-7.012544,5.649396,-7.629277,-5.286359],[-3.337098,1.637723,-0.385092,2.257593,-2.544602,0.221482,6.975510,5.497736,-5.883426,5.535809,-4.296529,2.831698],[-5.524417,7.001608,-7.412921,1.021508,-7.546101,8.142548,-9.698803,5.125026,-0.524829,-4.309206,5.329070,9.853612],[-0.565575,-3.211068,-4.249735,7.381796,-5.567672,1.995109,-8.117604,0.392904,-5.222002,-3.610671,9.964834,5.055336],[-2.955940,6.402318,6.096106,0.837037,7.130353,-5.664386,-4.069734,-6.672413,9.459452,4.236487,-5.594926,-5.829690]],[[-7.977908,6.965084,-8.308638,1.428967,-0.430124,6.108356,2.347661,-2.886538,-9.925425,-4.399320,-4.851359,0.556385],[2.350662,-4.913159,9.400613,-8.916812,3.186379,8.721988,-8.954295,-1.819320,1.801305,-0.678603,2.084426,0.921473],[5.336183,-3.899328,5.808977,5.699772,-3.082373,-7.119422,-5.355401,5.180702,9.964521,-8.160430,-7.046822,-2.757202],[-7.493943,-1.713698,2.281452,1.296051,-5.275951,1.340820,1.510308,-3.481429,-1.372546,6.858368,8.573467,-0.803087],[4.526566,-8.619381,1.349385,0.422112,8.547028,8.084750,1.446528,1.222308,-8.211360,2.773117,-8.626386,-0.366377],[5.167353,9.985485,-2.951609,7.042881,-9.268941,0.383845,-0.801278,0.418884,7.046636,8.605689,7.881839,-9.758666],[9.303994,1.488217,7.721304,-3.801939,9.582609,4.479067,6.982512,1.861685,-8.274539,7.398898,5.268490,-2.466164],[-4.673427,-7.622557,-8.312899,6.857467,-2.709708,0.805017,-9.595777,-9.126582,-8.640761,-5.933730,-3.971065,3.776091],[-5.593343,-9.554116,-7.580012,-1.565607,-7.211430,-4.233814,8.563220,-7.466954,5.958518,0.826471,3.544152,0.408893],[9.477312,5.012271,-9.177989,-2.715760,1.931081,-7.290962,8.658994,-3.067885,9.565330,7.301085,7.061888,8.008448]],[[4.508930,-3.601049,-0.955855,-4.884941,3.882852,-4.706846,0.178269,7.515109,5.012522,-0.720070,-5.405597,-0.031544],[7.182171,1.880098,4.062500,8.486560,3.714125,5.963055,-8.036025,-2.453858,4.946248,0.169842,2.044853,5.128868],[-8.315665,-2.369325,5.861264,3.626095,-6.098261,1.068387,4.914738,-8.690210,-9.299355,-2.488294,-2.289485,8.291018],[9.150044,-8.607563,6.952344,6.426778,4.112935,-4.152606,-5.186048,5.293397,-2.214429,-2.266699,-8.279262,5.764539],[-2.048731,6.334060,-8.913458,-1.280907,5.336098,-0.987508,0.716953,-3.687812,7.919605,2.105859,-6.728216,-9.879424],[1.206189,-2.186136,-3.783919,-5.007868,-8.197794,1.196325,-8.363028,-3.626955,-0.524484,-3.885177,5.319669,-5.163298],[-4.934711,-6.036189,-1.452286,8.664657,-5.685247,3.674273,0.668086,9.690954,2.852206,-1.623763,6.938757,7.708367],[-3.112670,1.158713,9.712475,-9.473642,5.484914,-5.876950,-8.651156,6.136490,-7.893670,5.231000,-6.163552,3.979229],[2.051507,-9.530049,-6.776692,-4.031080,6.074088,-5.039764,1.761749,-7.701030,-6.363864,-9.656624,5.095483,9.382689],[5.246109,4.104512,0.419537,0.406313,2.880718,4.525621,-6.107253,-4.721243,2.034638,-7.567281,1.982769,8.318592]],[[0.811122,-1.296701,1.382382,-8.760070,-2.390061,4.156420,-7.544904,-4.110666,-0.832055,-9.674631,2.249867,-9.779002],[3.885428,7.549535,-4.963227,-6.268436,7.362743,-5.263700,-7.243466,4.412123,-6.475749,7.672304,3.243995,-0.732807],[4.948865,-1.683829,1.907233,-5.649454,0.755622,-2.781325,-7.093072,-9.351316,5.449046,3.047313,5.283524,9.235870],[1.257810,0.775128,-8.234634,-6.391904,-0.034139,3.322421,4.216776,-5.212675,2.477440,-3.966077,-9.300601,2.416692],[9.741976,7.040358,4.713357,5.182314,0.154928,-0.780529,-4.980944,-3.659655,6.600021,9.882578,0.543469,-3.646121],[-5.406608,-9.487011,1.572380,-9.325792,-7.963309,2.074880,-4.232022,-6.120158,1.156062,-5.786077,4.530947,-1.237421],[-6.907452,-1.157485,-6.455757,-1.660073,1.924758,9.478420,9.230962,-6.448541,3.902279,5.722023,-7.843148,-8.150905],[-6.090676,7.890850,0.871729,3.690492,5.532221,5.460962,-8.605900,-4.325424,-1.609266,-7.073468,-5.811807,-9.512878],[-6.129490,3.191295,0.515833,9.128470,-8.568804,-6.610665,-7.608911,7.077196,1.483218,2.152796,7.545957,6.903647],[3.471131,1.951607,-2.574348,-6.606867,9.596031,8.090328,7.071518,7.398903,-8.688780,2.421461,3.129768,-2.640199]],[[8.040393,-6.638698,-8.700089,-9.927535,3.973025,8.328684,4.299820,-3.644440,2.331955,-7.633699,-2.669427,9.769002],[1.157188,-0.797273,3.241332,5.978729,-8.378867,0.010108,3.354641,6.037999,9.261445,3.727093,-7.390956,-1.799687],[4.184568,-8.342831,-5.773862,-6.649648,-3.766095,-1.689975,-6.404487,-0.903672,7.713478,6.856821,5.034593,3.569561],[9.570975,-4.953760,-4.442175,4.412013,0.455241,-3.310629,2.281578,1.192615,8.515797,-9.991490,6.265005,-6.523264],[-6.913162,4.572754,-7.489748,9.912544,6.418347,5.370945,-4.511716,-3.191915,-4.403496,1.537757,9.909636,0.525999],[-6.776712,-6.430220,-1.715820,-9.858652,-7.591859,0.260600,-5.662026,-5.876010,-1.068606,2.979387,6.399816,-8.063773],[-4.645006,6.843700,-3.717245,-2.256537,-3.369697,-5.787166,-4.554190,-5.155458,-9.207502,6.058684,-8.766101,0.207650],[-6.738947,4.193134,-4.119489,2.121195,1.924188,-9.729518,-5.811557,-4.059745,-1.697271,9.281962,4.064909,8.218754],[8.201054,-3.308318,5.407917,-9.069579,-5.585632,2.127256,4.059304,-1.323782,5.668141,-2.589691,0.936654,9.627710],[8.790167,-8.277812,-4.179414,3.791191,8.374148,0.035989,7.393684,-8.364414,3.965926,-9.651768,-9.600062,1.152962]],[[0.835464,6.774199,-9.597875,-2.489717,-5.106192,-2.746183,2.157342,-9.892853,1.616534,7.962326,-2.072028,-8.264779],[7.702699,-7.748192,9.771301,8.024222,-9.995512,-7.255740,4.039919,-5.401570,0.116229,-6.690295,-6.600180,2.161976],[-3.949175,-6.083146,-1.907566,-2.690264,1.292343,-8.312573,-2.883256,-7.120992,-0.070816,2.605044,1.535386,3.483733],[-2.296770,2.929591,5.077315,-2.016165,2.695686,-0.595336,-0.572622,8.029184,3.154448,-8.673151,-7.889816,-4.158098],[9.468319,-4.867177,-7.311823,-5.278512,-0.045340,7.398696,-2.661458,1.881123,2.564210,-7.485395,3.760346,3.907282],[1.217017,-4.783970,-2.916232,-4.365648,7.576310,5.289865,8.681867,-5.468543,7.500537,6.809016,-4.527099,-6.507167],[-5.894920,7.531169,-4.107713,-2.877010,-0.090922,6.621854,-6.835516,5.108826,3.880062,9.084707,-0.694823,-6.010848],[4.883256,4.882012,-2.927242,4.067787,-2.354595,-3.608887,-8.522262,-9.577370,-7.969700,5.391401,-3.267552,-0.470533],[8.033112,-1.633976,5.792233,-5.895349,-8.670426,-3.892178,1.201251,3.200679,-1.246165,-8.514573,-2.458270,-3.170782],[2.177209,9.610009,-2.997780,6.665001,1.699578,4.509270,-2.308957,-4.625641,7.849850,2.465869,-4.229495,9.209165]]], dtype = "float64")#candidate|14480|(12, 10, 12)|const|float64
uop_14481 = relay.cos(const_14480.astype('float64')) # shape=(12, 10, 12)
func_7449_call = mod.get_global_var('func_7449')
func_7453_call = mutated_mod.get_global_var('func_7453')
const_14498 = relay.const([9,3,1,-8,-8,6,-10,-5,3,-8,-3,-5,-5,-6,-3,3,3,4,9,5,-2,-1,-5,9,-4,-10,-10,-10,1,7,5,8,6,-1,3,2,4,-10,-2,8,8,3,-2,-2,8,-9,-9,-10,10,-2,9,10,9,-6,-1,-7,2,-8,2,9,9,-5,-8,5,-8,1,-3,5,-1,5,5,2,1,-4,-1,-2,-3,-1,4,9,5,3,10,-1,7,4,7,9,-7,-2], dtype = "uint64")#candidate|14498|(90,)|const|uint64
call_14497 = func_7449_call(relay.reshape(const_14498.astype('uint64'), [6, 3, 5]), relay.reshape(const_14498.astype('uint64'), [6, 3, 5]), )
call_14499 = func_7449_call(relay.reshape(const_14498.astype('uint64'), [6, 3, 5]), relay.reshape(const_14498.astype('uint64'), [6, 3, 5]), )
func_1712_call = mod.get_global_var('func_1712')
func_1717_call = mutated_mod.get_global_var('func_1717')
const_14503 = relay.const([-1,-2,-8,-6,-5,1,-3,-7,-1,-4,-8,-5,2,6,-6,-5,-1,-9,-4,-2,-10,-4,-7,-5,-7,1,3,-10,2,10,8,6,-2,10,10,6,-4,4,-3,-10,-7,6,7,-6,-3], dtype = "uint8")#candidate|14503|(45,)|const|uint8
var_14504 = relay.var("var_14504", dtype = "uint8", shape = (405, 1))#candidate|14504|(405, 1)|var|uint8
const_14505 = relay.const([[-1.227597,-3.980532,-7.524941,0.437047,-4.727491,6.093126,9.999284,-7.787107,-7.560815,-4.341810,-2.784905,9.642902,7.586836,9.042435,-9.908617,3.861175,-9.338254,9.759725,9.562087,-4.471323,7.461950,3.569225,9.765724,8.007440,-7.483934,-2.627997,-7.452635,5.247671,-7.737812,-5.025154,8.456622,-1.991870,8.082089,-7.886557,-6.337082,-3.753118,4.412893,4.282551,5.864862,-7.802286,-2.617682,-1.803638,-1.319604,5.250447,-8.290445,7.108815,8.293773,-2.126153,9.672516,-5.948273,6.857667,2.275419,-0.833137,-6.900534,9.569247,6.819823,7.777501,8.634247,3.198824,4.398486,-3.727198,4.917152,-7.791096,-4.929139,0.520424,6.514072,2.760869,2.523517,4.038634,-9.396257,-4.270562,6.043170,0.682652,-2.796937,2.332116,3.011694,-5.399298,7.733579,-6.645798,7.726773,-2.598824,-4.682859,1.483064,7.712589,1.270208,-3.678661,5.694741,-5.189591,-3.793577,6.457909,-6.154182,3.916990,-5.745171,4.850199,-4.051007,-1.790541,1.473280,-9.617466,-5.295671,-0.120400,8.128097,4.307777,-6.273386,-0.335472,-7.814121,-7.475107,-4.404502,-7.799053,-3.286017,3.100259,-0.334643,-1.986287,-1.661057,-8.527653,-2.932141,0.271327,8.245630,2.118898,-5.668712,-7.382851,9.418196,0.682721,-9.232091,-3.974249,4.134122,2.010368,1.408656,3.911621,0.365932,-3.448529,-5.551493,1.527739,4.556106,7.214886,-4.217462,-8.497769,-7.202424,3.845073,9.425425,-0.266372,2.450890,-1.439775,5.446996,1.704738,-2.424444,-9.708608,6.048577,-3.138454,-7.435700,-7.230589,-6.923303,1.986077,-3.418526,2.318173,-9.880080,-5.734617,-5.316451,9.341042,-8.012477,-9.798240,-4.348491,-6.805123,-3.341112,-3.102520,-7.722120,-7.530073,-7.595457,-9.667186,-7.740783,-8.610208,7.709707,2.005395,-3.581440,8.448712,2.721574,0.007770,-0.277638,1.388877,-7.702735,-0.756722,-5.946732,3.275807,-1.347674,4.685402,-0.119388,3.373456,-2.233912,0.158220,9.336189,0.599927,-3.351104,5.741769,-3.193312,1.083336,-1.158068,-8.939989,-5.485178,8.377443,6.030066,-8.814893,5.537303,6.692271,-1.278777,-0.084816,7.056402,-9.838415,-0.100520,-9.418892,-1.548826,5.749523,0.063518,6.992011,-7.823794,-3.549481,6.546767,8.436730,7.207346,-2.787456,1.774147,9.459687,-6.047690,-1.148916,5.063568,-1.482737,-7.129659,7.842375,4.012686,-7.342317,5.559930,9.554072,5.872822,1.724260,2.490583,-0.372094,-6.526484,9.944021,0.019727,5.859071,-3.035085,-7.976605,-6.497006,2.398560,-8.119474,4.752321,-4.338345,-1.528366,3.420137,-2.960653,3.726973,6.900255,5.889954,-0.426550,-3.502339,9.332026,0.416628,8.614607,6.387019,2.141397,-7.507196,-5.358734,9.142462,-5.079367,-5.539356,0.725734,0.425333,-7.152397,2.274495,5.961007,-2.706314,3.702918,-5.610172,6.361985,7.486348,1.280916,6.256879,-4.124307,-3.096835,3.585400,-9.048416,-9.990457,3.859033,-5.705122,-4.320178,-9.262593,-2.807889,-9.682361,3.081745,9.927979,8.963696,-3.602731,-9.399146,8.820285,-5.383382,3.865336,-2.550515,-2.866385,-3.371527,-5.203111,6.215995,-2.288215,-7.990002,-6.311412,-1.252751,-4.142517,4.249008,5.709725,-1.930576,-7.725562,8.976828,1.767060,-8.786739,-4.512748,-4.995773,4.576988,4.878250,7.736879,-9.651413,0.148976,1.828733,-1.314156,6.448743,-9.066763,9.367478,-2.479252,6.349332,-2.312511,1.031974,-3.497592,6.904704,4.943167,5.797570,2.211654,9.458477,4.061277,-2.279200,3.013634,5.103415,3.215513,-0.968298,5.842398,0.144945,5.570528,-7.644867,-0.409246,0.810657,6.125678,3.463886,5.151727,0.441753,3.476375,-1.242897,1.610055,0.077493,-9.634742,-8.432164,8.457835,6.223410,7.556865,-6.218241,-9.854835,8.763150,6.063940,-8.620089,3.175361,7.070145,4.610019,1.193307,5.335318,-9.843736,9.637342,1.542078,-2.023228,3.520305,4.039005,-1.912351,-8.501601,9.827066,-7.603576,-6.490874,1.465423,-1.723661,1.244023,-0.585067,-3.346616,2.971259,8.447024,-0.347590,5.691058,7.199997,-1.927158,-8.364876,-1.985101,-1.776506,8.516117,-0.357675,-0.905739,-3.480576,1.328925,-7.705377,1.876133,9.141667,-8.321823,-0.230730,6.485555,-9.063281,8.507917,-9.058214,-3.592944,-2.647133,9.621639,7.639562,-6.855429,-9.000479,-5.118579,4.430592,-8.971780,-6.458422,5.696897,-8.176644,4.162838,-8.493542,-7.850141,-3.298945,6.807633,-1.707700,7.545194,-2.367481,8.577535,3.425203,4.933300,5.783821,4.491853,-9.063330,2.681728,-5.166505,-1.113180,8.542125,9.755572,9.031286,2.534152,-1.798400,8.627139,-4.336898,7.562369,-3.444550,-4.182046,-3.088388,-1.349600,-4.252141,0.469458,-8.445046,9.590343,-4.589131,4.887906,5.983914,-5.645464,4.386002,-2.315987,-6.232293,-3.420032,-6.095482,0.202808,-7.483821,-4.551567,3.841960,9.284986,9.543123,9.324711,-1.856558,6.763466,6.448087,4.685643,-5.285642,-8.955241,3.167039,3.054654,-5.069496,-9.842809,-2.530953,3.657077,-5.528870,5.509870,-2.253403,-0.445806,4.539959,-3.285626,4.513149,-0.994406,-0.519459,-0.511655,9.250489,1.362644,-7.104912,-3.147385,-0.416989,-1.265736,4.734208,-9.696050,6.542380,-3.275660,5.518081,8.960751,-3.213329,-6.887354,7.422914,-9.054110,-8.702177,-6.031343,4.756783,-9.404531,-2.841595,-3.892193,-2.289287,6.736258,3.032499,9.287483,0.686105,4.884448,-5.471286,-6.369912,4.343780,-3.568267,-5.226882,-2.523367,1.873366,-7.851304,-5.136710,8.758252,6.479684,-0.489485,-8.204828,2.889345,-0.417517,3.104932,-0.739270,-1.581918,-5.878078,-8.717399,1.369954,-4.906830,7.832064,4.560422,-2.356858,-7.183599,5.485859,-7.505012,-1.212692,4.075232,0.642040,1.290011,-6.359194,9.625602,-4.685129,-0.982879,-5.602947,8.720926,4.412107,8.882272,7.474426,6.182927,-5.598650,3.746609,-5.065036,-5.550920,2.863383,7.760158,8.777544,6.144785,-6.789406,-1.309065,-9.342661,-5.052662,-3.870202,8.028873,-0.386803,-2.847737,0.228807,2.358777,3.283604,4.902380,-7.488333,-8.677907,8.653040,1.102477,0.922131,-9.627187,4.359271,4.191333,2.879658,-7.850555,-0.632608,-2.632120,-4.422250,7.831549,9.752813,-6.145212,5.997673,-5.939496,-6.003644,8.955709,1.358842,-5.248607,-4.713930,-4.865117,-2.904350,0.041443,5.691734,-3.522674,-5.306466,1.788782,-6.959392,9.401364,9.091741,-2.251215,9.321613,3.905554,-4.907991,-9.076171,-2.266451,-1.840252,4.961307,8.826182,1.264508,-5.229958,6.451655,-3.180619,0.965042,1.264971,3.400762,2.565406,2.617519,3.513767,-2.143175,6.656121,-0.866815,9.480206,5.037815,-2.725735,5.283605,-4.335498,5.568007,-0.153477,-0.657788,2.981438,-3.425378,8.770511,3.701428,7.030117,-9.356009,-2.708118,-4.543000,-4.014070,-1.197568,-7.569897,8.227375,-6.187171,4.928205,6.157933,1.854406,4.689442,9.337724,8.273088,5.838831,-2.912602,7.304226,-1.893585,9.418762,-5.728898,-8.528665,5.847822,0.163134,-1.333823,-9.606758,3.159805,-6.923302,2.371003,4.779473,-4.292710,9.265444,-9.587505,-0.411154,-4.195838,2.129087,3.533717,-7.281702,0.827601,7.690041,-0.459024,6.174222,9.279598,0.655122,-1.867848,9.489139,2.852735,1.819408,-0.105411,1.641182,7.509585,2.834922,-1.438689,7.358886,5.206380,8.384187,7.361564,5.431225,-5.699682,6.669622,9.163045,0.529811,-0.663712,-7.263940,-0.133200,0.626779,-9.389518,7.615185,-0.239589,-6.509662,1.590996,-9.831827,7.030054,5.160103,-3.897264,-9.183988,5.779523,-3.418855,-4.759073,-8.387958,-8.551441,0.128068,-4.532775,8.409012,3.758140,7.933607,8.354399,5.694238,9.362370,-3.068947,-1.999661,-2.859365,0.014845,2.371780,3.292556,-6.839712,5.636245,2.229043,-4.225995,6.225082,-0.723252,-3.064663,-2.002948,-3.599604,-0.250537,2.592865,5.508401,6.341275,-2.578444,1.020341,-9.004175,-9.012279,6.998440,-9.947465,-1.017245,9.738234,-4.228055,2.269756,-9.453496,-9.746161,-7.101345,4.183336,6.555992,-4.417817,1.459663,-9.288019,-8.680837,8.426037,-6.410451,2.492016,3.019856,1.180944,3.811684,-2.562608,6.003101,-4.999362,-3.094256,9.688538,-6.631834,-5.749412,1.012025,-5.681914,0.905325,3.886204,8.134956,-8.465404,-3.274494,-7.161090,-2.425433,4.654113,0.386387,-9.435613,0.552503,-9.193755,5.723629,1.917462,2.565568,-6.019784,4.652315,-2.151923,5.284252,-1.816380,-7.770079,3.162605,0.509965,-8.779291,-1.175301,6.471533,6.467944,-7.437062,-1.181503,9.694095,7.854208,-2.960085,-3.931642,0.660766,7.632462,0.112370,-0.122000,4.372182,9.872704,-1.060453,-3.491231,7.272499,3.829832,-2.021276,0.958042,8.845073,-1.281713,7.604710,-4.531275,-7.378317,-4.781829,-9.037347,-6.673566,1.952901,7.863984,6.812414,3.511951,1.092995,-1.280355,-8.309147,-6.687917,-5.281342,2.219505,8.764676,-1.467935,3.450852,3.112543,7.340474,8.360715,5.073101,5.208999,-3.471207,2.368344,7.457886,-6.336380,2.550331,-1.960758,9.818895,2.548751,3.510150,-2.939950,2.713653,-9.796809,3.799931,7.835173,6.098288,1.418681,2.352024,1.642507,0.498845,-3.201532,-3.330640,-4.665903,-1.522249,-7.189255,-0.042306,-5.725863,-3.628916,-7.996132,5.491412,-5.518565,-5.119760,-9.327167,-1.335453,5.235719,7.693786,-1.713042,-5.150610,5.802239,7.290418,-0.447796,-2.304371,9.243764,-1.245772,-3.967907,8.998176,-8.987864,8.482379,6.517721,-1.499673,5.133843,-1.313112,-1.814471,-8.319764,8.337402,2.821805,9.174980,-5.064404,7.745457,1.612718,-6.834580,-4.976634,-1.989604,-1.196819,-3.085341,-9.111465,-0.125327,0.044356,5.733280,9.154632,5.128150,4.088493,-5.931647,6.908342,-3.164046,-8.586470,1.032693,4.738980,-5.841517,4.207558,-3.669443,-7.664331,-7.951958,4.534673,6.654943,-2.309790]], dtype = "float32")#candidate|14505|(1, 945)|const|float32
call_14502 = relay.TupleGetItem(func_1712_call(relay.reshape(const_14503.astype('uint8'), [1, 5, 9]), relay.reshape(var_14504.astype('uint8'), [9, 5, 9]), relay.reshape(const_14505.astype('float32'), [945,]), ), 1)
call_14506 = relay.TupleGetItem(func_1717_call(relay.reshape(const_14503.astype('uint8'), [1, 5, 9]), relay.reshape(var_14504.astype('uint8'), [9, 5, 9]), relay.reshape(const_14505.astype('float32'), [945,]), ), 1)
bop_14515 = relay.less_equal(uop_14481.astype('bool'), relay.reshape(const_14480.astype('bool'), relay.shape_of(uop_14481))) # shape=(12, 10, 12)
func_4517_call = mod.get_global_var('func_4517')
func_4520_call = mutated_mod.get_global_var('func_4520')
var_14522 = relay.var("var_14522", dtype = "float64", shape = (165,))#candidate|14522|(165,)|var|float64
call_14521 = relay.TupleGetItem(func_4517_call(relay.reshape(var_14522.astype('float64'), [15, 1, 11])), 1)
call_14523 = relay.TupleGetItem(func_4520_call(relay.reshape(var_14522.astype('float64'), [15, 1, 11])), 1)
bop_14527 = relay.logical_or(const_14498.astype('bool'), var_14504.astype('bool')) # shape=(405, 90)
bop_14530 = relay.subtract(var_14522.astype('int16'), var_14504.astype('int16')) # shape=(405, 165)
output = relay.Tuple([call_14497,call_14502,const_14503,const_14505,bop_14515,call_14521,bop_14527,bop_14530,])
output2 = relay.Tuple([call_14499,call_14506,const_14503,const_14505,bop_14515,call_14523,bop_14527,bop_14530,])
func_14533 = relay.Function([var_14504,var_14522,], output)
mod['func_14533'] = func_14533
mod = relay.transform.InferType()(mod)
var_14534 = relay.var("var_14534", dtype = "uint8", shape = (405, 1))#candidate|14534|(405, 1)|var|uint8
var_14535 = relay.var("var_14535", dtype = "float64", shape = (165,))#candidate|14535|(165,)|var|float64
output = func_14533(var_14534,var_14535,)
func_14536 = relay.Function([var_14534,var_14535,], output)
mutated_mod['func_14536'] = func_14536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14799 = relay.var("var_14799", dtype = "uint32", shape = (1, 6, 7))#candidate|14799|(1, 6, 7)|var|uint32
var_14800 = relay.var("var_14800", dtype = "uint32", shape = (3, 6, 7))#candidate|14800|(3, 6, 7)|var|uint32
bop_14801 = relay.bitwise_or(var_14799.astype('uint32'), var_14800.astype('uint32')) # shape=(3, 6, 7)
func_13911_call = mod.get_global_var('func_13911')
func_13915_call = mutated_mod.get_global_var('func_13915')
var_14811 = relay.var("var_14811", dtype = "int32", shape = (48,))#candidate|14811|(48,)|var|int32
var_14812 = relay.var("var_14812", dtype = "uint16", shape = (2, 512))#candidate|14812|(2, 512)|var|uint16
const_14813 = relay.const([-6.772144,7.935910,-3.385413,-5.302967,9.440711,3.217493,-3.441402,-9.539309,-7.883069,9.619752,3.988173,9.645392,-1.177026,-9.458027,-7.539708,7.842614,8.755732,6.958497,4.346637,-2.877510,6.452051,6.515563,-7.364077,9.284067,-5.458446,-8.476384,4.113339,2.877849,3.546393,5.481106,0.379717,2.696371,7.474213,-5.449109,-6.593175,6.457433,-6.346951,2.068282,1.371827,7.477782,-4.763870,0.968589,7.590268,7.388734,1.596497,-9.677519,6.641973,9.298973,8.008022,9.716530,-4.276271,9.306928,1.183384,3.472167,-7.759636,-9.263558,-5.113826,-8.298229,-8.499560,4.749071,-3.255009,5.680962,6.732775,-6.987072,-7.044421,-6.731883,9.740366,-7.815363,-7.504044,0.261164,-5.777249,6.921382,9.894980,0.133914,3.272994,9.229757,-6.876473,6.273278,8.176780,-1.323870,-3.225872,-8.822914,5.586504,-9.060454,-1.730588,-1.917673,-1.762723,-5.483692,5.876171,3.886051,-6.576256,-9.535534,7.601522,-9.576979,8.722117,6.603751,8.576034,5.512904,-7.556665,-4.751719,0.012057,8.921522,1.510936,-5.289129,8.059828,7.646436,-0.637104,0.392978,-7.282994,6.943280,-2.542846,6.002427,-3.062457,-5.892493,-7.109168,-8.901944,2.643647,0.234748,0.625823,3.791109,-9.727639,-7.157983,-1.629932,-4.488258,9.068950,4.138561,-2.945123,6.822895,3.939365,3.814164,-5.373854,-1.991962,-5.021736,-3.378607,4.330753,-5.436291,6.639466,-5.702949,-6.034142,-3.040396,-1.925593,-4.601392,-1.618260,-6.093694,3.164211,2.986487,6.394060,-5.221740,-3.380355,0.766037,-8.082026,1.767805,-4.765035,-6.085021,-3.094379,-3.303582,-7.426717,-1.666093,-8.338035,-9.034794,-3.913764,8.125277,7.152023,2.367871,4.803090,9.266491,0.666724,1.560493,4.634048,-7.990883,-9.256004,-9.199852,5.862828,9.660616,7.975121,-6.689675,6.525811,6.237933,5.665603,-0.141192,5.807160,-6.423277,-6.691156,-6.970914,7.978776,-3.263008,3.763168,-1.847638,0.129837,-0.522188,-1.220617,-4.460097,4.483843,-6.308521,4.821875,6.020543,5.556869,2.889738,6.830132,0.927274,-1.956422,-8.362943,-1.469533,1.538319,-2.235382,6.513056,-3.099382,-3.934450,9.654988,-8.842976,-6.146679,-8.604290,1.003792,1.142594,7.617658,-2.957281,-5.137301,-3.674208,0.074854,-4.195149,9.311415,-2.892645,-2.133187,0.715267,-3.316142,-4.140067,9.788891,-5.081040,-5.510059,0.936851,-5.779266,3.933154,-1.434311,6.982651,1.677118,1.224900,8.748110,-2.723205,0.085995,-5.567601,4.120995,-3.478176,7.713898,-7.429107,-1.893649,3.704404,6.397032,-4.436721,-1.132606,3.219180,6.167990,8.688994,0.671483,-9.901779,9.029821,-6.205100,3.240106,-2.669034,5.770859,-6.736561,-6.232767,-3.180498,4.244688,-1.725752,-1.592773,9.600898,-1.219334,7.483206,5.229523,-0.066485,-6.016991,3.233414,1.728812,-4.729635,-9.175997,5.438628,-8.082883,-2.260381,-6.142221,-3.918429,0.367704,-8.604439,-8.554809,8.429521,-0.424633,-5.343390,-8.800764,-8.854233,5.326846,-5.528237,-0.760379,4.475117,3.599716,-3.807594,-3.805655,-5.972637,-3.721838,3.952460,-6.684970,-3.901736,6.241466,0.272821,3.110770,1.979100,-5.726071,-4.628840,9.893535,-4.403376,-7.056937,-1.559487,1.801239,-2.789780,-3.687816,-4.422570,-8.626884,8.438138,4.228142,4.905370,-8.440713,-0.245508,-1.639424,5.550662,-2.338954,-7.148735,-7.964379,9.635325,5.209636,-4.772103,7.090415,0.879633,7.506639,3.515698,7.067039,3.861201,-2.015813,3.905913,7.936269,-5.152985,-0.658980,-9.780008,-1.957624,-3.674254,9.573116,8.020284,4.602379,-4.113552,8.638342,5.621932,-3.418849,-4.731964,-1.663919,4.520012,6.933713,3.972543,-9.558553,-3.070240,8.866627,-5.719386,5.506247,-7.000079,-6.673322,-8.316959,-2.650707,6.400054,-4.309778,6.812532,8.720781,-3.793894,0.658605,-9.910194,6.000035,-0.342071,5.202282,6.196473,-3.875701,0.449943,-2.052771,-4.340946,2.209363,1.107131,5.162976,8.813077,4.901390,9.398762,1.519505,-7.858792,1.572514,-8.913748,-0.380571,2.635507,6.148060,7.999542,-1.594738,-5.917840,7.103772,-6.516888,6.921839,9.824559,1.513669,0.266133,-7.846171,-0.347404,-4.945867,-9.919393,-9.892696,8.237206,-3.939471,-0.142931,-0.948767,4.328689,-1.231425,-3.790950,1.306890,4.660825,6.577204,3.060892,-7.100483,1.891005,-8.224467,5.651676,6.471341,-3.370113,-1.764604,4.207058,-6.278329,-7.531972,-2.802817,-8.634770,9.079508,-3.415066,-8.696609,-4.635064,3.869496,7.105834,-8.440035,0.159959,1.338791,1.546356,-5.332145,-9.981326,8.595315,8.972214,3.034697,2.720184,7.888590,6.508777,-4.704244,8.890778,3.778611,3.301351,3.524950,-0.271174,1.825307,-5.435047,-5.108452,-0.639000,-1.641684,3.146661,0.956109,-4.206329,-7.265081,-1.437539,1.315675,6.983634,-6.802511,-4.257837,0.443244,-7.890908,0.187125,-7.526077,2.855005,9.275497,-5.285534,3.563377,-7.410104,3.619779,-1.453993,3.987758,8.543967,-6.803314,5.278475,0.260535,3.816210,6.725881,0.798196,-0.192222,-8.630017,-2.039343,-0.190517,-0.867809,7.259485,-5.032365,1.773972,6.806955,-1.292184,-9.680594,2.529712,-3.122391,8.006237,5.233217,1.644461,8.253295,3.526643,-8.651134,-0.953461,-1.586008,-8.620268,2.773715,-1.047529,-9.558000,-0.701985,5.076623,1.460073,6.707645,3.803200,6.199955,-8.606653,7.521779,-3.923489,-8.651607,-7.280292,-4.351938,3.556280,1.825464,-2.917034,-5.362265,-8.949434,-4.006373,3.301806,3.247135,-6.490668,6.693913,6.583371,4.272991,-5.622726,-1.522382,-7.108404,-0.606191,-1.180194,-0.824860,7.371879,-2.346594,-0.679305,0.122489,-4.720415,-0.998884,1.141188,2.073734,-0.658382,-3.898420,-8.063266,-8.256528,4.706981,-9.803980,-2.471331,4.314044,1.985287,5.983033,-2.049845,4.848575,7.744709,-5.079361,3.977743,-9.931890,-6.871266,5.890453,3.140520,9.742482,-2.408501,3.877754,-8.511563,-8.234434,-4.032241,5.094970,2.960667,0.683397,8.280240,6.140017,1.287991,-4.657606,1.336436,9.977365,0.329350,9.835089,-4.319807,-6.819730,7.771399,8.921426,0.710118,4.077559,3.002033,1.795047,-8.465891,-6.370527,-1.979351,8.998218,-0.012453,2.530876,0.798552,2.288530,0.727051,3.778169,-6.377503,-4.541237,0.629211,-1.583757,-6.145439,9.768726,0.582093,-5.186012,9.058866,5.285666,-6.792715,3.946206,4.337834,-4.317588,4.706865,-8.048888,-4.550239,5.673974,-8.161155,-6.840745,5.957126,5.011583,0.994139,7.755569,8.319256,-3.087941,9.529176,7.045916,-7.693818,9.666707,7.694822,-8.165942,-1.567960,-1.812472,6.055663,6.342002,-3.111795,2.812884,-4.508220,-8.806088,9.081593,-4.722562,9.586438,-7.349327,6.116555,3.975677,5.089875,-4.733269,8.999613,-0.964468,7.552117,3.556715,-4.511845,-1.362434,6.187555,-6.239434,1.460995,2.297259,-0.266735,6.608846,0.185743,6.259403,-8.338630,-3.500517,-7.938226,-3.856580,-2.944576,3.951682,0.275022,-8.345118,9.778666,5.066275,8.183654,1.053514,-0.893224,2.168973,5.346298,-6.724725,-6.186932,6.868964,9.761789,-4.261511,1.072925,-7.408692,7.919518,-8.386134,3.003891,-9.811971,-1.944798,8.835166,-8.215295,3.475216,4.466992,4.187521,-6.891732,-3.306641,-7.983753,-6.189479,-4.124875,-4.777773,7.107284,-6.831788,1.075892,1.792441,-9.377267,-4.598712,6.630982,-9.892642,-2.779484,-1.574400,-8.304092,-2.152380,8.662142,9.251589,-0.738664,-6.820728,-4.337484,-2.801624,3.961035,8.877426,-6.036536,-0.590845,4.231157,-4.856005,-4.800314,0.022197,9.470641,0.246604,-5.273846,8.908185,4.327489,-9.652198,-0.842968,6.603813,-6.622462,-6.235137,-0.613393,-6.576215,5.456649,8.895734,4.284802,8.288574,9.058659,7.299673,3.055862,-9.247712,-5.912073,-8.046396,6.554431,-3.309432,-3.747664,7.956204,1.591077,7.055908,-3.112738,-0.738935,6.193684,7.498646,0.933153,-3.296112,3.226044,4.469221,3.157583,-9.257416,3.571808,-5.942619,2.439055,-0.685718,9.046994,-1.053865,9.376776,0.758796,-3.253805,0.422683,2.982253,-0.958079,-5.037391,8.617887,7.258065,-7.469419,-4.590884,-9.024204,-3.099504,0.152063,-0.938995,-2.109034,-2.467117,-1.169600,-2.690885,-6.024398,2.775451,-8.206643,-0.928274,7.246527,2.883356,-7.864419,-3.757473,-4.276401,-2.484745,-6.620026,4.130911,-6.570214,-7.221328,-9.498794,-4.677592,0.281593,3.828108,4.473706,3.395778,8.021070,-0.587303,-9.161968,-8.366125,-5.735644,-9.187884,-9.377276,4.884739,-1.409995,2.007512,-3.146288,0.362015,-0.142859,5.497304,8.514931,-9.923669,6.352840,-4.888197,-6.643859,-4.259165,2.524696,3.005267,-2.563246,-3.317593,8.018660,9.332096,2.670044,7.688378,9.884868,6.483773,6.956727,6.461368,9.934346,-0.578103,0.959379,-0.807674,-0.094875,-2.145160,-9.131082,7.670762,-4.763539,7.570763,3.206895,3.991655,1.438748,1.218709,3.391953,7.463072,2.339391,-6.788409,1.171289,9.960099,-8.850299,-6.923306,7.925846,-0.115570,6.336365,3.899508,-9.200537,1.400011,-5.585301,-7.949653,-5.066000,-9.354648,-2.065645,-8.925003,9.987176,6.728506,9.766686,-8.397830,2.357388,-4.679043,-1.961404,5.313320,0.249585,-0.169966,-6.731657,0.528959,-8.675921,-2.281671,-8.077407,-7.398351,-1.205711,3.785837,-6.024714,-5.977947,3.988520,-8.952421,0.865679,-7.743768,-1.668951,-9.559358,-6.736379,4.320600,1.934585,0.479367,-9.107300,7.267758,5.937892,-1.780565,-6.316161,5.434926,-1.072281,9.981505,9.941827,-6.613521,-5.162015,-0.827750,-9.685246,0.596881,8.980257,6.444717,3.090205,1.548362,6.153161,-0.666741,-5.846102,3.432442,4.407528,-7.838076,1.914754,-7.798971,4.224876,-1.581879,6.598701,6.570192,-4.191532,-5.383409,0.360620,-2.640464,-0.146961,-9.620259,-4.842950,5.541858], dtype = "float32")#candidate|14813|(945,)|const|float32
call_14810 = relay.TupleGetItem(func_13911_call(relay.reshape(var_14811.astype('int32'), [1, 12, 4]), relay.reshape(var_14812.astype('uint16'), [1024,]), relay.reshape(const_14813.astype('float32'), [1, 945]), ), 2)
call_14814 = relay.TupleGetItem(func_13915_call(relay.reshape(var_14811.astype('int32'), [1, 12, 4]), relay.reshape(var_14812.astype('uint16'), [1024,]), relay.reshape(const_14813.astype('float32'), [1, 945]), ), 2)
func_12986_call = mod.get_global_var('func_12986')
func_12989_call = mutated_mod.get_global_var('func_12989')
var_14821 = relay.var("var_14821", dtype = "float32", shape = (1144,))#candidate|14821|(1144,)|var|float32
call_14820 = func_12986_call(relay.reshape(var_14821.astype('float32'), [8, 11, 13]))
call_14822 = func_12986_call(relay.reshape(var_14821.astype('float32'), [8, 11, 13]))
uop_14828 = relay.log2(bop_14801.astype('float32')) # shape=(3, 6, 7)
func_14049_call = mod.get_global_var('func_14049')
func_14051_call = mutated_mod.get_global_var('func_14051')
var_14839 = relay.var("var_14839", dtype = "float64", shape = (896,))#candidate|14839|(896,)|var|float64
call_14838 = relay.TupleGetItem(func_14049_call(relay.reshape(var_14839.astype('float64'), [14, 4, 16])), 0)
call_14840 = relay.TupleGetItem(func_14051_call(relay.reshape(var_14839.astype('float64'), [14, 4, 16])), 0)
func_12118_call = mod.get_global_var('func_12118')
func_12122_call = mutated_mod.get_global_var('func_12122')
var_14860 = relay.var("var_14860", dtype = "uint64", shape = ())#candidate|14860|()|var|uint64
const_14861 = relay.const([[-5,-8,-1,-10,-7,-3,-4,-1,-5,10,10,6,4,7,5,3,8,-4,-10,-1,1,-7,-7,8,1,9,6,3,-1,1,-10,7,6,6,8,-6,5,4,10,-1,-9,-6,6,-6,2,2,-4,9,-10,7],[-6,9,-4,1,-4,-7,-3,-8,4,5,-3,-7,7,6,-3,-7,4,10,8,4,-6,-5,-5,9,8,3,-4,-6,-6,-8,5,-8,3,7,-1,-3,3,7,10,-5,-3,-8,9,-6,8,4,3,-2,-1,-8],[-1,1,-9,-10,-6,5,-5,6,9,-9,-8,-10,-4,-5,-1,-9,-6,-6,3,-1,-3,8,-3,2,-6,9,-3,-3,1,-3,-3,-7,-5,1,9,6,-2,1,-1,-7,3,1,7,2,3,2,-10,-4,-2,-2],[1,-6,-6,-8,8,-4,-3,7,-10,-8,4,3,-1,-8,4,-5,-10,9,7,-3,-5,6,-3,-6,3,7,5,1,7,-8,-1,-7,5,-9,5,7,-8,-8,9,-3,1,10,-2,-2,2,1,5,6,-5,-2],[4,2,4,2,-7,6,5,-2,6,-5,5,2,5,8,1,-2,-1,7,-6,1,-4,-9,-10,7,8,4,9,1,-2,-5,1,9,4,9,7,-3,-4,1,7,2,9,9,10,3,1,8,-5,-5,-5,1],[2,-2,-8,4,10,-3,10,8,-1,5,-8,1,-1,4,-1,-7,-9,-3,3,-6,-1,-1,-10,2,-1,1,-1,-5,-1,8,6,-6,6,3,5,2,10,-9,-4,10,-2,-5,5,5,10,7,1,-10,3,6],[-5,-5,4,3,-9,-5,6,-3,-1,7,2,-7,7,1,3,9,-8,2,10,-1,-2,1,-8,9,3,-1,9,-9,7,6,7,-7,10,8,9,-3,8,7,6,-5,1,5,4,-6,-4,-1,8,10,1,1],[9,-9,6,3,3,3,4,5,4,10,-4,2,1,1,10,-2,-6,8,-8,-7,10,8,-10,3,2,3,-6,-7,5,-1,-2,5,-3,-3,3,5,-10,7,-5,3,6,3,-8,-1,10,1,-4,-1,7,-1]], dtype = "uint64")#candidate|14861|(8, 50)|const|uint64
call_14859 = func_12118_call(relay.reshape(var_14860.astype('uint64'), []), relay.reshape(const_14861.astype('uint64'), [4, 10, 10]), )
call_14862 = func_12118_call(relay.reshape(var_14860.astype('uint64'), []), relay.reshape(const_14861.astype('uint64'), [4, 10, 10]), )
bop_14863 = relay.less_equal(uop_14828.astype('bool'), var_14860.astype('bool')) # shape=(3, 6, 7)
func_1712_call = mod.get_global_var('func_1712')
func_1717_call = mutated_mod.get_global_var('func_1717')
const_14872 = relay.const([[5],[2],[1],[2],[-2],[-9],[-5],[6],[4],[-7],[-5],[-6],[3],[-9],[-4],[-7],[-10],[8],[8],[-5],[-6],[9],[-1],[5],[1],[10],[-6],[-7],[6],[3],[4],[8],[6],[5],[-7],[4],[-7],[5],[8],[-5],[3],[-6],[-4],[9],[8]], dtype = "uint8")#candidate|14872|(45, 1)|const|uint8
var_14873 = relay.var("var_14873", dtype = "uint8", shape = (405,))#candidate|14873|(405,)|var|uint8
call_14871 = relay.TupleGetItem(func_1712_call(relay.reshape(const_14872.astype('uint8'), [1, 5, 9]), relay.reshape(var_14873.astype('uint8'), [9, 5, 9]), relay.reshape(const_14813.astype('float32'), [945,]), ), 2)
call_14874 = relay.TupleGetItem(func_1717_call(relay.reshape(const_14872.astype('uint8'), [1, 5, 9]), relay.reshape(var_14873.astype('uint8'), [9, 5, 9]), relay.reshape(const_14813.astype('float32'), [945,]), ), 2)
output = relay.Tuple([call_14810,var_14811,var_14812,const_14813,call_14820,var_14821,call_14838,var_14839,call_14859,const_14861,bop_14863,call_14871,const_14872,var_14873,])
output2 = relay.Tuple([call_14814,var_14811,var_14812,const_14813,call_14822,var_14821,call_14840,var_14839,call_14862,const_14861,bop_14863,call_14874,const_14872,var_14873,])
func_14876 = relay.Function([var_14799,var_14800,var_14811,var_14812,var_14821,var_14839,var_14860,var_14873,], output)
mod['func_14876'] = func_14876
mod = relay.transform.InferType()(mod)
var_14877 = relay.var("var_14877", dtype = "uint32", shape = (1, 6, 7))#candidate|14877|(1, 6, 7)|var|uint32
var_14878 = relay.var("var_14878", dtype = "uint32", shape = (3, 6, 7))#candidate|14878|(3, 6, 7)|var|uint32
var_14879 = relay.var("var_14879", dtype = "int32", shape = (48,))#candidate|14879|(48,)|var|int32
var_14880 = relay.var("var_14880", dtype = "uint16", shape = (2, 512))#candidate|14880|(2, 512)|var|uint16
var_14881 = relay.var("var_14881", dtype = "float32", shape = (1144,))#candidate|14881|(1144,)|var|float32
var_14882 = relay.var("var_14882", dtype = "float64", shape = (896,))#candidate|14882|(896,)|var|float64
var_14883 = relay.var("var_14883", dtype = "uint64", shape = ())#candidate|14883|()|var|uint64
var_14884 = relay.var("var_14884", dtype = "uint8", shape = (405,))#candidate|14884|(405,)|var|uint8
output = func_14876(var_14877,var_14878,var_14879,var_14880,var_14881,var_14882,var_14883,var_14884,)
func_14885 = relay.Function([var_14877,var_14878,var_14879,var_14880,var_14881,var_14882,var_14883,var_14884,], output)
mutated_mod['func_14885'] = func_14885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15492 = relay.var("var_15492", dtype = "float32", shape = (16, 14, 6))#candidate|15492|(16, 14, 6)|var|float32
uop_15493 = relay.cos(var_15492.astype('float32')) # shape=(16, 14, 6)
bop_15500 = relay.floor_mod(uop_15493.astype('float64'), relay.reshape(var_15492.astype('float64'), relay.shape_of(uop_15493))) # shape=(16, 14, 6)
uop_15505 = relay.asinh(uop_15493.astype('float32')) # shape=(16, 14, 6)
func_7838_call = mod.get_global_var('func_7838')
func_7841_call = mutated_mod.get_global_var('func_7841')
const_15520 = relay.const(-4, dtype = "uint8")#candidate|15520|()|const|uint8
call_15519 = relay.TupleGetItem(func_7838_call(relay.reshape(const_15520.astype('uint8'), [])), 0)
call_15521 = relay.TupleGetItem(func_7841_call(relay.reshape(const_15520.astype('uint8'), [])), 0)
func_11738_call = mod.get_global_var('func_11738')
func_11744_call = mutated_mod.get_global_var('func_11744')
var_15530 = relay.var("var_15530", dtype = "uint16", shape = (6, 64))#candidate|15530|(6, 64)|var|uint16
const_15531 = relay.const([-9.198837,0.498989,-9.148351,-9.345989,-5.628649,8.229345,0.891123,0.273625,-7.367614,0.278836,6.572650,-3.174672,-5.549865,9.557574,4.641132,-5.737288,-9.372143,-4.414857,2.159739,-2.744865,-8.248970,1.218710,-3.886340,-1.683821,-9.404605,6.171768,9.592729,6.971617,-3.308649,2.010588,-1.913245,7.119695,-6.807637,-4.766812,-6.708553,3.636282,-9.259294,1.414651,-2.254626,-9.478963,7.211639,-5.620704,3.550574,-6.092088,0.413625,4.208215,-3.423969,-5.426567,-0.373938,-7.679107,-1.794499,5.434615,1.728498,0.425694,4.606003,-4.403002,3.994347,2.782843,-8.798481,0.363144,-2.937219,-0.066828,6.480158,4.262648,7.556466,3.736334,1.293391,-5.521018,2.367443,-8.111580,0.285642,0.089024,-8.312102,4.170508,-7.000204,-8.264939,-5.283012,9.001978,4.940317,6.726480,4.277864,-1.125646,-0.448747,0.879556,8.703827,-5.001647,-6.709403,6.761640,-7.469342,6.021295,3.643069,4.145722,-2.115263,-6.129836,9.141951,-8.781332,-8.131235,-0.239482,-8.112905,-2.241062,0.769334,-6.564222,-7.660264,-8.563571,4.460666,4.746460,8.347520,-4.771694,-4.863028,-3.468427,-2.457300,-6.536806,4.625544,0.112307,-5.425857,7.298325,-5.523149,8.319130,-6.120594,-1.110331,4.021697,-3.586743,-9.194450,3.251804,7.970635,9.852844,-2.075615,-4.879812,-7.105392,8.873551,3.016732,-8.346877,7.379259,-6.175517,-9.544579,9.006644,2.377815,-5.308622,-8.146915,-5.488395,3.955325,4.039812,6.061064,-1.370184,-7.098601,-5.810523,-9.445951,0.718463,-1.348276,1.279805,-4.858658,-4.529376,9.570131,-9.382909,-1.352483,0.198318,-2.448187,-2.426414,3.215225,3.254283,-6.008541,7.702723,-6.291249,-4.776433,5.511214,4.895627,-0.636997,6.060582,3.055946,9.662416,-2.245390,8.758356,-7.927081,-9.730620,-5.535739,4.053799,9.626633,-6.890528,5.669903,-3.187491,-6.875906,9.395152,5.496110,-3.812191,-3.165983,2.911350,1.757617,6.928635,-3.194530,1.680102,7.637263,6.319845,2.110343,-0.878535,7.642742,8.163687,7.468670,-5.644843,3.067504,8.565082,7.093960,-5.688136,2.136749,-8.421887,2.046026,2.444113,-7.337770,1.668542,-4.068850,-2.338271,-8.901435,2.569129,-6.815617,7.219231,2.021042,2.554591,3.061613,8.654200,7.971270,-8.399887,3.981969,2.426491,-6.018142,7.000850,9.282107,-4.430123,-2.846195,0.595161,-3.009659,-7.637222,3.800779,-1.239845,-9.006854,0.906136,3.171076,-1.603954,3.206813,-9.320642,3.574727,-4.285353,9.654952,-6.832834,2.930682,9.573890,-2.575368,5.626316,1.752847,-9.007125,2.989900,-3.890680,1.945399,5.892497,-6.932502,1.476747,4.772657,-7.250359,-2.873444,-5.836978,-6.144134,7.014906,-1.985600,-6.058857,-2.126078,5.928388,2.144757,-9.185886,-0.012951,2.270191,3.473090,-9.467010,2.579746,-0.246558,-8.952412,0.812374,-2.900327,5.980825,6.098760,-6.053307,2.783414,2.948509,8.120954,9.294406,7.554223,5.889949,2.403225,3.633895,-1.201689,2.310118,7.746984,-5.486192,9.451349,-1.525864,5.197011,4.178810,-6.850056,8.784487,-5.118115,3.867034,-4.148777,0.317348,1.904451,-1.663900,-6.911709,-7.259933,-9.672066,2.609303,-7.189799,-5.677021,-0.001356,-1.249678,-7.242095,7.748780,8.927462,-8.119296,5.548833,4.509579,-9.310392,-5.971425,3.505472,-9.929936,1.141388,-9.702402,3.473584,-5.817645,-7.355344,-0.151053,-1.359211,3.553723,2.669013,7.729694,7.241648,8.643986,-8.851143,-5.748463,-2.612551,1.364340,-5.388016,7.691803,-8.407844,-4.914728,4.786741,4.954546,-2.564861,2.101852,-4.369514,-9.038871,6.043083,-3.105473,4.988167,-5.677980,8.421427,-0.908492,6.886267,-4.246783,8.028131,-7.241791,4.510391,-7.449138,-3.915516,3.680576,7.680668,7.516074,9.999242,-5.571606,-4.131269,-7.401763,8.488654,-5.489345,3.735857,-2.169142,7.397031,9.688409,0.729951,-3.327065,3.753951,-6.523803,2.082553,7.882898,7.679615,8.174205,-5.578374,-1.572058,-6.071810,-3.468455,4.305445,-4.517066,2.255893,6.620104,-3.273082,0.265016,-3.781071,-4.359765,5.602011,-2.652981,0.171521,-9.614710,-3.021737,6.426048,5.972177,-9.032433,1.644688,2.462137,-6.702148,5.837324,-0.936228,-6.570273,-3.519183,-1.953259,-9.935385,5.799185,1.767440,-5.394240,-1.366231,-1.570378,1.401394,-7.680853,-1.077469,-3.023799,-6.709604,3.195457,-2.690865,2.090675,-4.576276,-9.016139,3.037142,-6.038902,5.693933,-4.523424,6.774478,-1.553943,9.997903,9.792906,-8.873483,-0.261973,4.928682,-6.460047,2.851017,-5.495207,0.710607,-2.026288,-7.869684,9.534355,4.271323,7.790026,8.444563,-6.377461,-0.840485,-1.900800,0.147404,-5.438738,-9.743317,-5.033518,-6.107085,2.124134,9.170043,-7.706065,-3.346369,2.995093,7.580667,-5.319447,-1.709529,3.796278,-5.351601,-6.465468,-2.954434,-7.788426,8.549509,-0.584668,-3.239129,7.428359,-1.739646,1.722472,-6.050717,-5.819263,-0.509063,-1.075711,9.863881,0.743605,7.995710,4.496916,-6.188365,-8.795333,-1.322179,-8.350914,-8.656658,-8.582479,3.315962,8.040204,7.610721,-1.156846,4.522429,-7.310525,-8.847308,-2.076491,2.528101,-9.166977,-8.254320,0.275849,1.551552,1.348452,-9.630021,-8.274379,3.085026,9.499465,-8.006931,-3.055813,-3.744623,-2.207329,3.165276,-5.400349,4.167589,-9.462768,5.958956,-2.733173,1.705410,-2.848117,-1.253887,-4.183397,-5.627027,-9.981255,8.538152,-4.917018,0.121221,-3.510152,-8.808700,-3.023864,2.354214,5.387515,-1.268469,-7.498396,5.858749,9.260507,4.759837,3.647102,1.701867,-2.666730,5.377486,-3.280390,-1.004854], dtype = "float32")#candidate|15531|(539,)|const|float32
const_15532 = relay.const([-6,3,-7,-8,8,10,4,6,-2,2,2,7,5,9], dtype = "int64")#candidate|15532|(14,)|const|int64
var_15533 = relay.var("var_15533", dtype = "float32", shape = (945,))#candidate|15533|(945,)|var|float32
call_15529 = relay.TupleGetItem(func_11738_call(relay.reshape(const_15520.astype('uint16'), []), relay.reshape(var_15530.astype('uint16'), [6, 16, 4]), relay.reshape(const_15531.astype('float32'), [11, 49]), relay.reshape(const_15532.astype('int64'), [1, 14]), relay.reshape(var_15533.astype('float32'), [945,]), ), 2)
call_15534 = relay.TupleGetItem(func_11744_call(relay.reshape(const_15520.astype('uint16'), []), relay.reshape(var_15530.astype('uint16'), [6, 16, 4]), relay.reshape(const_15531.astype('float32'), [11, 49]), relay.reshape(const_15532.astype('int64'), [1, 14]), relay.reshape(var_15533.astype('float32'), [945,]), ), 2)
output = relay.Tuple([bop_15500,uop_15505,call_15519,const_15520,call_15529,var_15530,const_15531,const_15532,var_15533,])
output2 = relay.Tuple([bop_15500,uop_15505,call_15521,const_15520,call_15534,var_15530,const_15531,const_15532,var_15533,])
func_15543 = relay.Function([var_15492,var_15530,var_15533,], output)
mod['func_15543'] = func_15543
mod = relay.transform.InferType()(mod)
mutated_mod['func_15543'] = func_15543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15543_call = mutated_mod.get_global_var('func_15543')
var_15545 = relay.var("var_15545", dtype = "float32", shape = (16, 14, 6))#candidate|15545|(16, 14, 6)|var|float32
var_15546 = relay.var("var_15546", dtype = "uint16", shape = (6, 64))#candidate|15546|(6, 64)|var|uint16
var_15547 = relay.var("var_15547", dtype = "float32", shape = (945,))#candidate|15547|(945,)|var|float32
call_15544 = func_15543_call(var_15545,var_15546,var_15547,)
output = call_15544
func_15548 = relay.Function([var_15545,var_15546,var_15547,], output)
mutated_mod['func_15548'] = func_15548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15672 = relay.var("var_15672", dtype = "int8", shape = (14, 11, 4))#candidate|15672|(14, 11, 4)|var|int8
const_15673 = relay.const([[[10,-10,-4,8],[-1,7,-5,-5],[5,-10,8,7],[-9,-5,7,10],[7,2,5,3],[1,5,3,9],[-2,8,-6,9],[9,-4,8,-6],[5,6,7,5],[7,4,-10,10],[3,3,5,7]],[[-8,2,4,-10],[-7,-9,4,-4],[4,3,-2,7],[10,-7,1,-1],[-4,6,-5,6],[-1,-4,-1,-9],[6,-10,-4,-6],[-6,-1,8,8],[9,7,-10,-3],[10,-7,-8,5],[-8,-6,3,-1]],[[6,7,-6,-5],[9,-10,-7,-2],[-2,7,7,6],[8,-10,-4,9],[4,6,-3,6],[3,2,9,-6],[-5,3,-4,7],[-2,4,-9,8],[8,-5,4,-4],[-9,6,10,-3],[4,7,6,1]],[[-3,6,7,7],[-7,-8,-6,-8],[9,-5,4,4],[-3,-6,-2,-6],[2,-9,7,8],[-8,5,-9,9],[4,4,1,8],[8,-2,2,5],[2,-7,-10,5],[9,2,-2,5],[6,-6,9,2]],[[9,-8,-5,-9],[9,-8,-8,8],[10,9,-2,7],[-6,-6,8,-2],[3,-2,-7,5],[-6,6,5,-3],[-6,8,7,-8],[10,-9,4,-9],[-3,7,-9,-7],[-7,-9,7,-9],[6,-10,5,-7]],[[-2,5,-8,-4],[5,-3,6,-9],[3,5,-2,2],[2,-3,10,3],[-6,9,-5,7],[8,4,1,7],[1,-3,-6,5],[7,-8,7,10],[-2,-9,3,6],[-7,-5,4,-2],[4,10,-10,-2]],[[2,-3,-1,-4],[1,-9,1,-8],[-4,9,-5,-2],[6,-10,8,3],[-4,-9,-9,-8],[-8,5,-2,10],[-5,3,1,10],[-1,6,-6,7],[5,-5,-1,-3],[1,8,2,-9],[-6,9,-2,-5]],[[-3,10,9,-9],[5,1,10,5],[-3,-5,9,-3],[10,4,-3,5],[-1,-7,-2,7],[4,-3,3,8],[-9,10,-8,-6],[-7,2,-9,-7],[-10,3,3,-1],[-9,3,-2,-7],[-3,2,-1,2]],[[7,9,-9,-10],[-3,2,4,-4],[10,4,-8,5],[-9,-5,-3,10],[10,-10,6,-1],[3,-6,9,-2],[9,10,-9,1],[2,-10,-2,7],[-10,3,8,-6],[9,10,1,-4],[-7,8,-9,-8]],[[4,6,-10,9],[3,-7,-8,-2],[2,3,-3,6],[3,-8,4,3],[-3,3,3,5],[-6,7,-3,10],[-10,-3,-2,-2],[2,7,-7,-3],[1,-6,-9,-10],[-1,-8,-5,-4],[-3,-5,5,-2]],[[-9,-2,-1,-9],[-2,-9,-3,-8],[6,-3,-6,6],[-3,6,2,4],[9,10,-2,2],[-1,6,10,2],[-2,10,3,9],[9,-5,-5,2],[6,2,10,-1],[7,-7,-3,-6],[6,-5,10,-7]],[[1,-9,3,-8],[5,5,6,-6],[-7,-1,-4,7],[2,8,-8,-2],[9,5,5,10],[-5,-3,3,5],[2,2,4,-3],[1,-8,-10,-8],[-4,-2,-6,6],[7,2,1,-10],[5,7,1,-6]],[[5,1,-4,6],[-10,6,-9,5],[4,-6,7,7],[7,-3,-6,-3],[3,-6,-1,-5],[-9,6,5,-3],[-1,3,-4,1],[-4,2,-3,1],[-8,-3,1,9],[10,9,-7,6],[9,5,2,7]],[[-2,8,-5,-1],[9,-10,-5,10],[4,-1,-10,-8],[-8,4,-3,-8],[1,10,6,-7],[-7,-3,7,8],[-1,-4,-7,1],[7,5,-6,5],[-8,1,8,7],[8,10,3,9],[-8,-6,7,-10]]], dtype = "int8")#candidate|15673|(14, 11, 4)|const|int8
bop_15674 = relay.logical_xor(var_15672.astype('int8'), relay.reshape(const_15673.astype('int8'), relay.shape_of(var_15672))) # shape=(14, 11, 4)
func_11760_call = mod.get_global_var('func_11760')
func_11763_call = mutated_mod.get_global_var('func_11763')
var_15678 = relay.var("var_15678", dtype = "uint64", shape = (160,))#candidate|15678|(160,)|var|uint64
call_15677 = relay.TupleGetItem(func_11760_call(relay.reshape(var_15678.astype('uint64'), [5, 2, 16]), relay.reshape(var_15678.astype('uint64'), [5, 2, 16]), ), 0)
call_15679 = relay.TupleGetItem(func_11763_call(relay.reshape(var_15678.astype('uint64'), [5, 2, 16]), relay.reshape(var_15678.astype('uint64'), [5, 2, 16]), ), 0)
output = relay.Tuple([bop_15674,call_15677,var_15678,])
output2 = relay.Tuple([bop_15674,call_15679,var_15678,])
func_15690 = relay.Function([var_15672,var_15678,], output)
mod['func_15690'] = func_15690
mod = relay.transform.InferType()(mod)
var_15691 = relay.var("var_15691", dtype = "int8", shape = (14, 11, 4))#candidate|15691|(14, 11, 4)|var|int8
var_15692 = relay.var("var_15692", dtype = "uint64", shape = (160,))#candidate|15692|(160,)|var|uint64
output = func_15690(var_15691,var_15692,)
func_15693 = relay.Function([var_15691,var_15692,], output)
mutated_mod['func_15693'] = func_15693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15921 = relay.var("var_15921", dtype = "float64", shape = (1, 14, 3))#candidate|15921|(1, 14, 3)|var|float64
uop_15922 = relay.log2(var_15921.astype('float64')) # shape=(1, 14, 3)
output = uop_15922
output2 = uop_15922
func_15924 = relay.Function([var_15921,], output)
mod['func_15924'] = func_15924
mod = relay.transform.InferType()(mod)
var_15925 = relay.var("var_15925", dtype = "float64", shape = (1, 14, 3))#candidate|15925|(1, 14, 3)|var|float64
output = func_15924(var_15925)
func_15926 = relay.Function([var_15925], output)
mutated_mod['func_15926'] = func_15926
mutated_mod = relay.transform.InferType()(mutated_mod)
const_16636 = relay.const([[[-5.855708,-2.698933,4.405208,-4.948399,6.787253,2.634058,-6.899735,6.626952,7.345691,9.247842,-0.557900,-0.687738,-5.674722],[-7.346195,-1.357681,2.179873,-8.456872,-7.582011,-1.429103,1.186928,5.870471,-0.515396,-7.236287,-8.404799,-4.039986,-5.083908],[2.451253,-7.098103,9.850827,7.474951,-4.557346,3.777389,-5.504677,0.766123,-4.568883,-3.221370,5.178464,0.600590,-0.395270],[-6.136230,-1.291437,3.156003,7.219751,6.667848,3.667598,-7.503860,2.174180,-3.385407,1.657723,0.567528,-3.748303,3.816203]],[[-5.133349,-1.070713,-5.367121,4.031611,2.584497,-2.916438,-9.298332,-7.258984,-8.768953,-1.250374,-7.473152,2.046584,-4.652981],[6.370217,5.792736,-3.381266,-5.251452,-5.426860,9.517549,3.886813,5.681775,3.557889,9.759681,1.640726,-3.770867,3.401572],[-8.870660,-6.119944,9.979324,3.263882,-8.098447,-1.753157,-5.894202,6.660867,-2.997214,9.410585,-0.144888,-1.915531,-0.275301],[8.741088,5.800158,4.415132,-6.598641,-1.048676,6.186357,-2.360273,0.746556,-4.508231,9.620702,-5.109106,-7.537521,9.865058]],[[-1.713008,-3.081561,0.615792,-3.299105,6.401828,-8.433187,5.322592,4.273991,9.763622,7.419362,4.438641,-9.272182,6.222330],[-1.477145,-0.094795,0.730220,0.030984,6.973084,9.654029,0.816118,0.609128,-4.905980,-4.084010,-4.691480,9.463671,6.333809],[0.686722,-4.031948,-8.048091,8.583504,-5.224345,5.325482,-1.732249,2.464211,-3.130707,-0.342379,-1.581792,1.954158,2.770833],[-8.768947,5.518645,6.156338,-7.003450,4.166779,-1.521636,2.030946,8.897352,8.199279,-7.643818,-2.735907,7.885212,-7.641294]],[[5.986624,0.346411,4.335123,-5.583710,5.126464,-7.768726,6.233018,-0.366886,-6.777068,-9.624796,-5.564187,6.288630,-3.011973],[-0.238271,0.765143,-2.852966,-0.526981,3.919985,2.814666,-9.327885,5.214217,-2.679059,-5.426394,-4.762929,1.735768,6.842760],[-2.174747,-4.245891,-9.551454,2.545541,5.531802,-0.596233,0.116970,-4.882869,4.645672,9.042070,9.734490,9.590023,-1.014718],[-8.599028,1.839491,3.632439,-1.874357,-4.715608,-3.941156,-9.709068,8.676837,5.622984,-6.473268,-6.251949,-7.418617,-4.449758]],[[9.630352,-5.412032,-0.682544,9.102672,-0.620567,5.774994,-8.372121,4.127193,9.331196,8.295656,-2.329798,1.511742,-8.037630],[9.520232,2.337518,-4.636887,0.640739,-6.079431,1.366626,6.220056,1.387893,-5.755955,7.013654,-1.007075,-8.277073,8.110529],[4.629496,8.825826,-6.681374,-1.299126,2.964721,9.470546,7.931360,-0.352632,8.536897,-1.902644,-7.683194,0.216596,-6.075984],[3.584281,4.222246,-0.599560,7.894902,-1.488764,-7.344620,-5.623260,9.626134,-8.456963,3.274501,0.414459,1.535611,5.074458]],[[-5.559231,6.672789,1.115762,6.619200,2.648394,9.700663,-7.072042,5.587365,-8.452061,-7.316167,8.471296,7.215666,2.540849],[4.663762,-6.533836,-4.977281,1.271591,-8.531464,-0.082126,4.533956,9.401024,4.213523,-8.664323,-6.275330,-0.006640,-6.655938],[7.467077,-1.644363,-3.127518,9.581438,2.513662,-1.525786,9.007961,0.190397,-0.828690,-1.049103,5.987209,0.074883,-8.214121],[-7.616173,-6.074018,-0.085087,-6.024264,-6.611693,-8.911043,-3.427666,-9.359991,9.764079,0.035884,5.772565,9.669095,9.928576]],[[2.124114,6.099149,-6.037344,-9.866506,-3.458032,-1.455583,-5.988789,-8.731038,0.486666,-6.062179,5.127144,2.263515,-5.998784],[-7.283828,-7.706920,-1.610186,8.598206,7.144588,0.153160,-7.965088,-2.982318,2.465961,-8.224524,-0.110592,-8.596557,0.957796],[-3.611656,-3.257896,2.038697,-3.525608,-0.632273,-9.419392,-1.412516,7.582064,2.295746,-1.409581,-0.214368,-5.393891,3.861359],[-3.980038,7.552214,7.673935,6.635221,-3.689726,-7.247933,-9.599376,9.352735,-6.710143,5.769973,-4.621933,-5.089345,-5.509933]],[[-8.572387,2.681106,3.873953,2.667922,8.210109,-1.858538,-8.725135,0.878439,-5.946697,0.425210,-0.272374,0.541040,2.789269],[9.325813,-5.880944,-1.253800,-4.980514,-1.452414,-3.913700,5.478166,-5.076190,-6.113534,-8.561260,-0.622964,5.938481,6.637720],[5.317198,7.296373,-6.704550,-0.666892,2.393416,2.428102,-6.345867,5.798792,2.076289,-3.254090,3.501353,-8.722965,0.823240],[-3.668330,-0.667330,-9.275564,-7.990086,-4.634439,-2.454866,-2.310779,8.220558,-0.595332,5.491567,-3.162455,-4.831972,8.910591]],[[7.462991,7.378383,-9.928315,-3.236514,4.863382,-5.295444,-3.125226,-3.323928,-9.680702,-9.686554,-3.968577,0.793209,4.398072],[-3.106283,5.776302,1.506981,7.651236,2.531232,-7.074332,-1.061732,-8.221473,6.127529,5.461666,-2.587695,-4.118226,-5.767810],[8.737076,4.217518,9.901577,-3.681563,6.727973,-2.252363,-9.429732,-7.083356,8.351292,5.577556,7.264548,-7.673677,-9.572439],[-3.774497,-5.702512,-2.567846,3.786797,-4.033946,6.426715,8.471752,-0.393403,-0.411142,3.287993,6.746595,2.650172,-8.852852]],[[2.909447,-3.061885,1.024678,1.489147,3.414364,9.508568,8.421186,8.214974,-1.350143,5.054513,-6.846208,-2.415496,-7.396251],[-1.801917,-1.149547,-0.567890,-9.162433,5.161729,-9.130827,6.102397,-7.846045,-9.352441,-6.750516,3.248245,-6.372897,5.991579],[-8.705456,-7.491580,1.835918,-0.091806,4.737134,1.771190,2.367891,-3.550401,3.264224,5.651803,-3.878842,5.743667,-4.876577],[-8.043964,4.408220,4.000074,4.366099,-1.044786,9.122632,-6.149468,-7.006101,-9.749823,-1.068504,0.378110,-3.561247,-9.899148]],[[-7.024049,7.039921,-3.790784,5.417753,7.890550,8.641589,-9.178574,5.749130,-6.456332,-0.614628,0.341752,5.410586,8.239084],[-9.743426,2.130529,3.654222,-5.208368,-7.569744,-2.855963,8.637872,8.368426,-0.455052,-5.014828,2.083093,7.511784,5.110545],[-0.829702,-2.337744,8.207366,5.396687,5.088657,-0.307041,5.054244,-1.882496,-8.758321,9.198762,-5.059414,7.714805,0.286349],[-2.076448,7.677269,7.484285,-1.536045,3.545519,-2.291354,-0.747756,8.963983,-4.184150,-0.638870,-0.399649,-2.703630,-0.142907]],[[2.839640,3.130157,-4.383663,5.776532,-4.578864,0.438818,5.549581,-9.704004,5.100344,1.965285,-0.016422,3.211711,3.740187],[3.427821,9.868511,-0.304909,-0.550213,6.968781,0.643444,-1.806660,5.678520,-2.377232,-3.433569,1.451563,-9.679560,5.993479],[-2.541682,6.537940,-2.340393,3.289356,-3.085973,2.243398,8.634665,4.591821,9.892584,-5.589318,6.352632,7.611960,-7.535903],[0.148459,-4.754607,3.319792,1.980855,-4.210251,9.043367,2.950795,1.466512,-5.879226,6.528981,-0.716513,7.046038,2.127266]],[[6.250784,4.676732,7.587717,-9.318006,1.362104,-3.136248,-9.973114,-8.467446,-1.150382,1.837279,-0.140793,5.854846,0.458797],[4.383410,-8.365760,5.240071,6.796138,7.464705,7.715450,-8.296988,9.238751,5.721666,7.119860,-7.618095,8.421793,-3.412265],[1.566013,6.809116,8.066436,-5.117211,-6.891539,5.736744,-2.840061,-1.830231,1.908384,-8.297387,-8.788592,-7.680485,0.322504],[3.497145,0.163093,1.390798,8.196488,2.271814,6.107951,3.912314,-5.423981,8.597759,0.898413,-8.618247,8.052560,-5.217340]]], dtype = "float64")#candidate|16636|(13, 4, 13)|const|float64
uop_16637 = relay.log10(const_16636.astype('float64')) # shape=(13, 4, 13)
bop_16646 = relay.logical_xor(uop_16637.astype('int16'), relay.reshape(const_16636.astype('int16'), relay.shape_of(uop_16637))) # shape=(13, 4, 13)
output = relay.Tuple([bop_16646,])
output2 = relay.Tuple([bop_16646,])
func_16653 = relay.Function([], output)
mod['func_16653'] = func_16653
mod = relay.transform.InferType()(mod)
output = func_16653()
func_16654 = relay.Function([], output)
mutated_mod['func_16654'] = func_16654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16653_call = mod.get_global_var('func_16653')
func_16654_call = mutated_mod.get_global_var('func_16654')
call_16669 = relay.TupleGetItem(func_16653_call(), 0)
call_16670 = relay.TupleGetItem(func_16654_call(), 0)
output = relay.Tuple([call_16669,])
output2 = relay.Tuple([call_16670,])
func_16674 = relay.Function([], output)
mod['func_16674'] = func_16674
mod = relay.transform.InferType()(mod)
mutated_mod['func_16674'] = func_16674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16674_call = mutated_mod.get_global_var('func_16674')
call_16675 = func_16674_call()
output = call_16675
func_16676 = relay.Function([], output)
mutated_mod['func_16676'] = func_16676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16674_call = mod.get_global_var('func_16674')
func_16676_call = mutated_mod.get_global_var('func_16676')
call_16730 = relay.TupleGetItem(func_16674_call(), 0)
call_16731 = relay.TupleGetItem(func_16676_call(), 0)
output = call_16730
output2 = call_16731
func_16732 = relay.Function([], output)
mod['func_16732'] = func_16732
mod = relay.transform.InferType()(mod)
output = func_16732()
func_16733 = relay.Function([], output)
mutated_mod['func_16733'] = func_16733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16653_call = mod.get_global_var('func_16653')
func_16654_call = mutated_mod.get_global_var('func_16654')
call_16889 = relay.TupleGetItem(func_16653_call(), 0)
call_16890 = relay.TupleGetItem(func_16654_call(), 0)
var_16891 = relay.var("var_16891", dtype = "int16", shape = (13, 4, 13))#candidate|16891|(13, 4, 13)|var|int16
bop_16892 = relay.equal(call_16889.astype('bool'), relay.reshape(var_16891.astype('bool'), relay.shape_of(call_16889))) # shape=(13, 4, 13)
bop_16895 = relay.equal(call_16890.astype('bool'), relay.reshape(var_16891.astype('bool'), relay.shape_of(call_16890))) # shape=(13, 4, 13)
func_9681_call = mod.get_global_var('func_9681')
func_9684_call = mutated_mod.get_global_var('func_9684')
var_16905 = relay.var("var_16905", dtype = "uint16", shape = (390, 3))#candidate|16905|(390, 3)|var|uint16
call_16904 = relay.TupleGetItem(func_9681_call(relay.reshape(var_16905.astype('uint16'), [13, 10, 9]), relay.reshape(var_16905.astype('uint16'), [13, 10, 9]), ), 2)
call_16906 = relay.TupleGetItem(func_9684_call(relay.reshape(var_16905.astype('uint16'), [13, 10, 9]), relay.reshape(var_16905.astype('uint16'), [13, 10, 9]), ), 2)
func_966_call = mod.get_global_var('func_966')
func_969_call = mutated_mod.get_global_var('func_969')
const_16922 = relay.const([[-10,3,4,4,7,7,3,-2],[9,8,-8,7,-7,7,-10,2],[-8,3,-4,-1,8,8,-3,10],[-4,-8,-9,-2,7,-10,10,7],[7,-1,7,-4,7,-8,-4,-2],[9,3,-9,6,-4,-3,8,-2],[1,8,5,-5,-3,5,-3,6],[-9,2,5,1,2,-4,3,-7],[-1,-4,-4,3,4,-3,-4,-3],[-9,10,10,-3,-7,-5,3,7],[-5,-2,-2,6,-2,-4,-9,1],[1,2,-5,6,-2,-2,-2,-8],[-2,8,5,9,-5,4,-2,-2],[4,-4,10,1,-2,-8,-6,3],[-9,9,7,9,-2,3,-6,7],[-10,-3,3,-4,-10,9,-9,1],[3,1,-9,9,-3,-5,9,3],[3,2,9,-10,8,-3,2,-6],[8,-7,8,-8,10,2,-5,9],[-10,-5,6,-7,3,-1,6,9],[5,-10,-2,3,-2,-3,9,-7],[2,-7,-5,3,4,2,3,3],[9,-10,2,5,8,10,-8,8],[9,10,-10,2,7,6,-7,-8],[2,7,1,7,10,9,-6,-9],[2,7,-10,-6,2,7,-10,-8],[-2,8,7,-3,5,-4,-8,-4],[-2,-2,1,-1,1,4,2,-4],[7,8,-9,2,10,7,-8,-8],[-3,5,10,8,-6,3,-6,-4],[10,8,10,5,5,8,4,-6],[-8,-10,-8,2,-3,-2,1,-4],[6,2,2,-6,1,10,1,2],[-8,-2,3,10,6,-6,6,1],[4,9,-3,10,-10,9,8,-5],[-6,-5,-8,6,5,-4,-4,6],[-8,-3,-10,7,5,3,9,-2],[-2,5,-1,5,-5,-8,4,8],[-9,-5,3,-8,9,-6,7,5],[-6,-9,-1,3,-3,-6,5,1],[4,10,7,8,7,-4,1,-4],[-10,-1,9,-7,-5,1,7,-5],[-7,8,4,2,7,8,5,-4],[4,6,-9,6,-5,7,1,1],[-6,-4,5,2,1,-10,1,-1],[-9,-10,7,-6,5,4,-5,3],[-4,-4,2,2,7,8,-6,-4],[-6,-7,4,-7,1,4,8,9],[-6,-2,-10,-10,6,4,-8,1],[7,-1,5,10,1,2,-3,3],[6,8,10,3,-7,-10,-9,3],[10,5,-3,-1,-8,6,-4,3],[-4,5,8,-2,5,1,4,10],[-7,-9,-9,-5,-3,-2,-9,6],[5,-7,-9,9,-2,8,4,10],[-4,-2,-9,-1,5,1,6,7],[-9,4,5,2,6,3,-9,-1],[-2,-5,7,5,-9,8,-4,-7],[-1,-10,8,6,-1,2,-2,2],[-6,-6,1,7,-8,5,9,-4],[7,-1,-6,-7,-5,-9,-3,-10],[-6,-4,-8,6,5,7,-5,6],[-6,7,3,-3,6,-5,10,10],[4,4,-4,-7,2,-2,-8,1],[5,-10,-5,-9,2,3,-1,-10],[6,6,-4,8,-8,5,1,2],[5,6,-2,2,-9,7,-8,7],[-1,-8,6,1,8,-2,3,5],[-7,-9,-6,-4,-7,-6,-2,-1],[-6,9,4,-9,-7,1,6,-7],[9,-3,-8,1,-10,10,-2,4],[-1,1,3,10,-3,-8,-9,4],[-3,-4,-4,4,-3,-5,-7,-4],[-1,4,7,4,6,-10,8,-2],[3,-2,2,2,-2,10,-5,8],[9,10,7,-5,7,-8,3,6],[8,4,5,3,2,-9,-8,-5],[-10,-3,10,-1,-7,-1,-1,-6],[-4,6,8,-7,5,-9,4,9],[2,2,-4,-8,4,-1,4,-1],[-10,8,-6,-10,2,3,-5,9],[-6,9,5,-1,7,-3,1,-9],[-1,-9,-3,-10,-8,10,-7,1],[9,-3,9,5,-8,-7,4,-8],[-5,6,5,3,-8,7,2,-9],[9,-7,-10,4,-3,-4,7,4],[10,1,5,-9,7,-10,-5,9],[-5,-4,-1,2,9,4,10,1],[-7,7,6,-9,-5,3,-10,-6],[1,1,-8,9,-8,7,-1,2],[-1,-4,-7,2,-1,-2,7,9],[9,3,10,-9,5,10,4,-5],[-1,4,1,-1,-10,5,-2,7],[-4,-9,2,-5,-3,4,7,4],[6,9,3,2,-3,-1,1,8],[-8,-2,-4,9,3,7,-1,-1],[9,6,8,-5,5,9,2,3],[-4,-2,3,-8,-5,8,7,4],[-9,-10,-8,-9,-9,-9,6,2],[-7,10,8,-8,-4,10,8,-9],[-4,-4,-2,-3,3,-1,-4,-9],[-1,-2,-7,-3,-9,-2,5,-1],[-8,1,-10,-10,-8,2,-8,-4],[-9,10,-9,5,-4,-2,-8,-1],[-2,8,-9,-6,1,-9,-8,8],[3,1,8,7,-5,-4,4,9],[8,-7,-6,-1,1,-6,7,6],[1,-10,-5,5,-8,1,2,9],[9,-6,10,-2,1,2,3,8],[5,-6,-6,10,-10,7,3,4],[3,7,-7,-6,8,-6,6,-6],[3,3,3,-5,-6,-6,2,3],[10,-1,-10,7,5,-2,7,-5],[-1,2,-4,6,-1,3,2,9],[7,-1,8,-6,1,-5,-5,1],[-1,-10,1,-6,-10,-6,-6,-6],[-4,9,-5,5,4,-6,-2,-5],[-1,-7,4,-5,-4,-9,-5,-3],[-4,-2,-9,6,-9,-2,-1,-6],[-5,7,8,-2,-4,-3,7,-9],[-8,1,10,-9,-4,-3,-10,-9],[2,2,9,-4,-8,3,3,-8],[5,-8,-1,-5,8,9,-7,-4],[-6,8,-2,-10,9,6,7,3],[-5,8,-8,8,1,7,-6,6],[7,7,8,10,1,1,1,-10],[7,-4,-1,4,-2,1,-1,-9],[-4,-8,6,-2,-5,4,1,2]], dtype = "uint16")#candidate|16922|(128, 8)|const|uint16
call_16921 = func_966_call(relay.reshape(const_16922.astype('uint16'), [8, 8, 16]))
call_16923 = func_966_call(relay.reshape(const_16922.astype('uint16'), [8, 8, 16]))
func_11690_call = mod.get_global_var('func_11690')
func_11695_call = mutated_mod.get_global_var('func_11695')
var_16927 = relay.var("var_16927", dtype = "int8", shape = (1232,))#candidate|16927|(1232,)|var|int8
var_16928 = relay.var("var_16928", dtype = "int8", shape = (30, 4))#candidate|16928|(30, 4)|var|int8
const_16929 = relay.const([[5],[10],[-6],[2],[1],[3],[-4],[10],[3],[7],[6],[9],[9],[5],[-1],[2],[4],[-6],[8],[-4],[6],[10],[2],[4],[-9],[-1],[6],[7],[1],[-9],[-2],[-10],[10],[7],[-6],[10],[8],[-3],[-1],[8],[-6],[5],[8],[9],[3],[-4],[6],[5],[2],[7],[-5],[-9],[6],[-5],[-9],[-5],[1],[8],[3],[1],[-5],[4],[10],[9],[-1],[7],[3],[9],[8],[-6],[-7],[3],[-2],[-7],[8],[2],[-2],[-7],[4],[-4],[2],[1],[7],[-7],[-5],[3],[6],[2],[-9],[-5],[-7],[-2],[-3],[-3],[5],[-2],[-1],[2],[-6],[-5],[2],[3],[-6],[-7],[3],[1],[1],[3],[2],[-9],[-5],[2],[5],[-4],[-5],[-1],[8],[8],[-8],[10],[9],[5],[5],[-1],[6],[-4],[2],[-7],[-1],[9],[-1],[-6],[4],[-7],[-9],[6],[-8],[-7],[9],[-10],[10],[5],[9],[1],[4],[-8],[10],[-6],[-6],[-9],[-7],[4],[-7],[10],[8],[2],[5],[2],[-1],[6],[4],[-10],[7],[-3],[10],[1],[-8],[-5],[-3],[3],[-5],[1],[-4],[6],[7],[1],[-5],[10],[-1],[-9],[4],[8],[-3],[6],[-8],[-9],[-6],[4],[5],[-7],[1],[8],[3],[10],[-8],[4],[-8],[-3],[-7],[-1],[10],[9],[2],[7],[-5],[-4],[2],[-2],[9],[-8],[-2],[-8],[-7],[3],[9],[-9],[6],[4],[5],[-9],[-6],[5],[-4],[-5],[-9],[-9],[-7],[1],[-7],[-8],[-2],[7],[8],[8],[-3],[-4],[-2],[8],[-5],[9],[8],[-5],[7],[1],[-4],[-2],[9],[-4],[1],[10],[1],[-6],[2],[8],[-9],[-1],[7],[3],[6],[7],[2],[-4],[-9],[8],[10],[-7],[-2],[3],[6],[-1],[-8],[-1],[-10],[8],[8],[-6],[5],[1],[-10],[-5],[9],[-3],[-2],[4],[8],[3],[8],[3],[-8],[-4],[6],[-7],[1],[6],[-9],[4],[-2],[6],[3],[-4],[-5],[-9],[10],[-3],[-2],[-3],[6],[-1],[7],[8],[10],[-1],[-9],[6],[9],[3],[6],[-9],[3],[-5],[8],[5],[-9],[2],[-6],[2],[-4],[-8],[-2],[-5],[4],[-8],[-9],[9],[8],[8],[3],[1],[4],[7],[-6],[7],[2],[3],[10],[8],[5],[6],[-3],[-5],[-10],[-9],[10],[2],[5],[-5],[-8],[1],[6],[5],[-9],[1],[9],[7],[4],[-4],[-8],[-7],[5],[2],[1],[-1],[8],[1],[5],[1],[1],[7],[1],[3],[-7],[-2],[-2],[-3],[2],[-4],[-3],[-2],[-6],[-6],[-8],[-4],[-8],[8],[-6],[-7],[-10],[10],[-1],[6],[2],[-4],[7],[-7],[-10],[-2],[9],[9],[9],[-1],[10],[10],[8],[-9],[-6],[-10],[-7],[3],[-2],[-6],[1],[-3],[6],[-10],[-9],[9],[-8],[9],[-10],[-6],[-3],[5],[3],[-5],[6],[9],[1],[-10],[4],[-1],[-2],[2],[1],[7],[-10],[-10],[-1],[5],[2],[-1],[3],[-8],[2],[1],[-1],[-10],[-5],[4],[-4],[1],[-5],[-8],[-9],[10],[-5],[2],[1],[-2],[1],[2],[10],[-4],[6],[4],[8],[-5],[8],[9],[6],[-9],[-10],[-1],[-2],[-7],[-10],[4],[1],[-4],[-3],[-7],[4],[3],[-5],[9],[2],[4],[-10],[5],[10],[6],[1],[8],[9],[10],[-2],[2],[9],[8],[-8],[5],[5],[-3],[6],[9],[-10],[-4],[7],[6],[7],[8],[5],[3],[-7],[-9],[-8],[-6],[6],[9],[7],[-6],[5],[9],[-5],[7],[-1],[9],[-7],[9],[3],[-1],[-4],[5],[-8],[10],[2],[-4],[7],[10],[8],[-3],[-2],[-4],[-7],[5],[3],[-3],[6],[-5],[-2],[-2],[2],[-5],[9],[2],[-3],[-6],[-9],[6],[-3],[6],[-8],[3],[8],[-10],[2],[7],[10],[-6],[7],[6],[-4],[7],[-3],[9],[-5],[-4],[-5],[10],[-4],[4],[-4],[1],[-4],[1],[-4],[3],[9],[1],[-4],[-10],[7],[-3],[10],[6],[6],[9],[4],[2],[-6],[9],[-1],[-9],[-2],[-2],[1],[5],[-7],[-2],[4],[10],[-9],[-7],[-8],[9],[3],[-5],[-10],[-5],[-5],[9],[1],[5],[2],[5],[-5],[-3],[-4],[7],[1],[-8],[-6],[9],[7],[10],[-2],[-9],[-1],[-1],[10],[-7],[8],[9],[-2],[6],[2],[8],[-6],[6],[2],[7],[-7],[9],[9],[-10],[-3],[-5],[-9],[-7],[-1],[-4],[4],[3],[-10],[7],[-6],[-8],[-1],[10],[-4],[-10],[-9],[1],[7],[1],[-8],[1],[9],[-6],[-4],[3],[-7],[5],[-7],[-5],[-7],[-1],[10],[-8],[-10],[5],[6],[-4],[3],[-3],[2],[8],[-8],[-5],[-10],[-7],[7],[-7],[10],[4],[-4],[9],[-8],[-4],[2],[-7],[-5],[4],[-10],[8],[9],[-8],[3],[-5],[-1],[-2],[9],[-5],[-4],[-5],[8],[1],[-7],[-7],[-3],[-8],[10],[1],[1],[4],[-5],[9],[8],[1],[4],[-8],[-10],[-6],[-5],[-5],[-7],[1],[8],[1],[-9],[3],[3],[-10],[-9],[5],[-6],[6],[4],[-4],[-4],[-7],[1],[10],[-1],[-9],[10],[-6],[6],[-6],[-6],[-8],[5],[-10],[-5],[-6],[-5],[-4],[1],[6],[-7],[-6],[-6],[1],[-10],[-7],[-9],[-3],[-9],[3],[-9],[-5],[-4],[-1],[-4],[-8],[-1],[-9],[-9],[-9],[1],[-7],[8],[-5],[3],[1],[9],[-6],[-8],[7],[-3],[3],[1],[1],[4],[9],[3],[-6],[-6],[-10],[-10],[-10],[-8],[9],[3],[-7],[1],[10],[-4],[2],[-10],[-5],[-8],[6],[3],[4],[-6],[10],[1],[1],[5],[2],[-10],[10],[5],[3],[-6],[10],[1],[-10],[3],[-10],[8],[-6],[-1],[-3],[-5],[-2],[9],[-10],[-5],[-10],[3],[-5],[-10],[-3],[-8],[-4],[2],[3],[7],[10],[1],[8],[6],[-4],[10],[10],[-6],[2],[-1],[-8],[5],[-5],[-10],[-10],[6],[-10],[2],[7],[-5],[-8],[7],[-10],[4],[-10],[4],[-4],[-10],[8],[9],[10],[10],[2],[-7],[1],[-2],[-6],[-9],[-5],[-8],[-10],[4],[5],[-4],[7],[-3],[-7],[-6],[-8],[-10],[2],[-9],[4],[-7],[-3],[-5],[-9]], dtype = "int32")#candidate|16929|(936, 1)|const|int32
call_16926 = relay.TupleGetItem(func_11690_call(relay.reshape(var_16927.astype('int8'), [16, 7, 11]), relay.reshape(var_16928.astype('int8'), [5, 8, 3]), relay.reshape(const_16929.astype('int32'), [2, 468]), ), 1)
call_16930 = relay.TupleGetItem(func_11695_call(relay.reshape(var_16927.astype('int8'), [16, 7, 11]), relay.reshape(var_16928.astype('int8'), [5, 8, 3]), relay.reshape(const_16929.astype('int32'), [2, 468]), ), 1)
output = relay.Tuple([bop_16892,call_16904,var_16905,call_16921,const_16922,call_16926,var_16927,var_16928,const_16929,])
output2 = relay.Tuple([bop_16895,call_16906,var_16905,call_16923,const_16922,call_16930,var_16927,var_16928,const_16929,])
func_16934 = relay.Function([var_16891,var_16905,var_16927,var_16928,], output)
mod['func_16934'] = func_16934
mod = relay.transform.InferType()(mod)
var_16935 = relay.var("var_16935", dtype = "int16", shape = (13, 4, 13))#candidate|16935|(13, 4, 13)|var|int16
var_16936 = relay.var("var_16936", dtype = "uint16", shape = (390, 3))#candidate|16936|(390, 3)|var|uint16
var_16937 = relay.var("var_16937", dtype = "int8", shape = (1232,))#candidate|16937|(1232,)|var|int8
var_16938 = relay.var("var_16938", dtype = "int8", shape = (30, 4))#candidate|16938|(30, 4)|var|int8
output = func_16934(var_16935,var_16936,var_16937,var_16938,)
func_16939 = relay.Function([var_16935,var_16936,var_16937,var_16938,], output)
mutated_mod['func_16939'] = func_16939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16653_call = mod.get_global_var('func_16653')
func_16654_call = mutated_mod.get_global_var('func_16654')
call_16953 = relay.TupleGetItem(func_16653_call(), 0)
call_16954 = relay.TupleGetItem(func_16654_call(), 0)
output = call_16953
output2 = call_16954
func_16955 = relay.Function([], output)
mod['func_16955'] = func_16955
mod = relay.transform.InferType()(mod)
mutated_mod['func_16955'] = func_16955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16955_call = mutated_mod.get_global_var('func_16955')
call_16956 = func_16955_call()
output = call_16956
func_16957 = relay.Function([], output)
mutated_mod['func_16957'] = func_16957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16732_call = mod.get_global_var('func_16732')
func_16733_call = mutated_mod.get_global_var('func_16733')
call_16970 = func_16732_call()
call_16971 = func_16732_call()
output = relay.Tuple([call_16970,])
output2 = relay.Tuple([call_16971,])
func_16975 = relay.Function([], output)
mod['func_16975'] = func_16975
mod = relay.transform.InferType()(mod)
output = func_16975()
func_16976 = relay.Function([], output)
mutated_mod['func_16976'] = func_16976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16653_call = mod.get_global_var('func_16653')
func_16654_call = mutated_mod.get_global_var('func_16654')
call_16994 = relay.TupleGetItem(func_16653_call(), 0)
call_16995 = relay.TupleGetItem(func_16654_call(), 0)
func_11348_call = mod.get_global_var('func_11348')
func_11353_call = mutated_mod.get_global_var('func_11353')
const_17032 = relay.const([4.670120,-9.822557,7.575191,9.414209,3.888896,-3.501175,2.604369,3.670495,9.505872,3.714011,-1.766657,7.586558,9.360432,5.156467,4.377157,-5.431581,5.809745,-9.170976,0.360844,-9.001228,7.027594,-5.987750,9.773450,4.177484,2.867300,5.890951,5.333056,5.858669,-7.605762,0.131057,-0.692977,-4.066485,-1.836083,-5.611666,0.079628,5.111835,0.591666,8.817413,8.430470,1.135870,-9.922455,6.043851,1.057597,-1.609751,4.540932,-2.882023,1.370696,3.213416,4.151861,3.533874,-1.997806,-2.068336,-3.050399,-1.915838,-0.698295,9.076871,3.473257,-0.242079,0.416628,-9.318631], dtype = "float64")#candidate|17032|(60,)|const|float64
const_17033 = relay.const([[-4.524784,5.963377],[5.853042,-9.581397],[1.985149,-5.697967],[6.580751,-4.382153],[2.908326,4.802176],[-6.543472,-7.646710],[9.714838,5.700780],[-9.290659,7.942653],[-8.866438,0.499622],[-0.994401,9.210758],[-2.943523,0.966278],[-7.651735,-8.290298],[3.304447,-9.473516],[7.111710,-2.513522],[-4.143732,-5.885142],[1.951276,5.252023],[5.948654,5.429244],[9.671137,6.447553],[-8.781827,2.060215],[-0.437515,-3.740891],[3.114567,-8.588854],[0.325343,0.562921],[-7.989577,5.085572],[4.325029,3.045526],[3.814783,-9.336031],[7.482798,-6.572129],[-3.993006,5.736479],[-2.469107,3.745633],[-4.797899,-0.401101],[-3.492532,6.708857],[1.707272,-0.428123],[7.146657,7.556223],[4.575702,4.719822],[-0.338878,-1.493202],[5.202243,1.372058],[-6.076625,5.659223],[-6.419722,-2.290224],[4.573051,-1.499095],[-9.301107,6.856557],[-7.616764,-5.684799],[-1.984561,0.841666],[-7.452451,-7.846443],[3.553461,6.659391],[-7.577945,-9.906079],[-3.594035,9.966167],[-8.907690,-3.993521],[6.608768,-9.438144],[9.640771,0.923122],[1.417082,-6.277753],[-7.204069,7.976363],[-3.549969,2.514370],[-8.209010,-2.619018],[7.104540,-4.154083],[6.634570,-8.563858],[9.998347,-5.575082],[-5.374257,-0.865222],[-8.801729,9.506128],[0.649478,-1.521665],[4.281722,-6.628275],[3.083444,-3.332265],[6.759674,-0.754675],[4.132652,3.560154],[-1.887082,8.854868],[1.864685,-7.431691],[-9.625187,-5.052101],[-0.973608,-9.507552],[6.268348,6.540726],[1.011631,7.328588],[5.180393,3.674206],[-1.682215,2.625847],[-4.597762,2.421778],[-3.104342,-9.253793],[5.790492,6.615501],[7.525001,2.980444],[-4.761604,-0.240156],[-4.020164,-8.729754],[5.392736,8.804881],[-2.444699,-8.864101],[7.075225,-6.217462],[3.907338,9.273181],[-8.696820,1.782893],[-2.034709,-5.087083],[5.782234,-5.317835],[-2.031812,4.311652],[-4.910015,6.634910],[9.829745,0.373794],[-9.415229,4.999305],[-4.673389,-3.788299],[4.743762,2.227016],[7.655062,-2.186677],[-3.813421,-6.533948],[-7.509008,-5.489300],[-4.048775,7.784795],[-4.731314,3.554482],[4.097226,-2.493478],[5.245053,-6.319188],[-2.773175,-1.488784],[8.666985,6.191345],[1.005573,-2.900265],[4.628508,-3.096796],[-4.708633,-1.517101],[-7.786609,7.257706],[-7.551311,-5.409977],[1.761537,-4.804308],[-7.458609,1.140938],[2.718999,9.500497],[-2.930998,-9.936614],[-7.339948,-8.659383],[0.473686,0.265314],[-7.585542,6.763396],[3.202475,-9.859549],[-4.053053,-1.645303],[6.617189,-0.288891],[-7.936438,4.488256],[8.408800,2.656744],[-1.409524,-1.626366],[-2.463482,2.571595],[9.002506,9.409242],[-8.949654,3.612237],[-0.607760,8.633511],[2.493603,-0.145936],[8.698872,-5.894166],[-7.577150,5.926290],[0.290642,-5.061953],[8.829736,-2.406161],[-9.520543,2.186800],[8.331070,3.054203],[5.857336,0.416676],[-3.683865,-0.623888],[0.160196,-6.204591],[-4.263424,-1.040310],[8.907298,4.774585],[1.431756,9.944955],[3.032752,-3.839911],[7.623965,-4.004156],[9.411672,4.984189],[-5.106444,7.520565],[3.612490,5.400357],[0.772667,8.633997],[-6.706873,-5.599137],[8.634732,4.376060],[-2.018366,6.487134],[9.157784,-8.996093],[-4.394908,-8.210359],[-5.968138,-6.774369],[2.287757,1.733007],[-9.601264,5.344123],[-7.150452,-0.283982],[-7.379344,-6.874788],[1.786814,-5.250996],[-3.549531,3.316307],[3.385472,2.011022],[-0.039636,0.813888],[4.028857,-1.155997],[2.035180,-1.013313],[2.345344,9.520993],[-7.582770,3.996476],[-0.113133,-3.293274],[-7.897722,6.364995],[0.063486,0.219866],[-9.459742,6.345174],[-7.466044,1.616313],[9.901274,0.360033],[-1.543016,-8.406116],[-2.059379,3.029596],[-5.547623,1.770670],[3.105526,-4.812297],[5.952790,-6.595206],[-9.485593,7.994532],[-6.031961,-8.267621],[-4.017156,-2.567306],[0.497580,3.082490],[-9.912864,-3.814900],[-3.304512,-8.840050],[-6.234840,-5.994538],[-2.405179,6.214529],[-7.092892,9.557627],[-7.227918,8.664996],[8.346088,6.424625],[-4.381913,8.271163],[5.474254,2.749484],[4.790858,-5.429375],[-6.532750,-9.325092],[7.425561,6.299211],[-8.654261,-0.359197],[3.822959,-6.064535],[-7.864505,6.708193],[-9.733382,9.343405],[-8.614890,-8.152949],[-5.015715,6.971525],[1.023564,-9.748326],[2.455346,2.092320],[-5.589708,-7.987250],[7.899142,5.036804],[8.491724,-7.254503],[1.948097,5.275703],[8.225637,0.196566],[-1.614250,-1.599202],[-9.609627,2.240194],[4.772531,-6.492555],[-8.549384,1.352117],[0.565723,8.109648],[4.692700,-7.967116],[-2.980028,-8.140404],[7.816701,5.831478],[-3.850662,-8.928525],[-1.867342,-0.722668],[-7.978378,-7.121462],[-4.694689,-8.949166],[-9.971781,-9.293730],[7.944787,-9.610553],[-5.691367,8.402233],[-3.788939,-2.049901],[1.003690,-7.243327],[-9.292114,6.191898],[2.615089,3.075178],[1.836224,3.818698],[-0.036375,8.489747],[-3.685982,6.620444],[-4.548261,7.184873],[5.949867,3.242386],[-0.344407,4.066864],[-5.493563,8.063115],[-1.639913,2.104900],[-4.048791,8.418199],[-8.402308,-0.692380],[-4.248294,-7.742926],[3.831493,2.177707],[5.968965,6.401413],[-9.929298,-4.369972],[2.088913,-6.523795],[-5.396964,1.657241],[-1.931123,0.004490],[7.307392,-6.401308],[4.557467,-6.615940],[-9.996459,-7.745402],[-8.757831,6.588172],[-9.952246,0.612297],[4.573344,8.727359],[-5.435021,-2.563566],[7.042152,0.983913],[7.511070,-0.749390],[-9.231950,7.625957],[-6.427151,-1.758400],[5.031006,-1.526220],[1.769042,6.939434],[8.794233,2.664197],[3.634938,6.037785],[8.389893,3.719818],[-2.289522,-6.086510],[-6.672147,9.449954],[0.986711,4.619040],[7.914356,-5.000044],[-9.423135,8.036788],[-4.160271,6.417262],[-9.622604,-4.381506],[9.077790,-1.183325],[2.603807,0.732342],[0.864254,-3.453120],[-7.752462,1.569772],[4.390764,7.027454],[-4.914048,-8.046802],[5.823338,-9.589805],[-1.776246,6.940805],[7.078696,9.645869],[-7.695871,-3.283779],[8.388125,-9.811235],[6.573502,2.894769],[7.868370,-2.937021],[2.952372,-8.889355],[-4.320302,-9.658058],[9.937169,-6.380860],[6.539786,2.637935],[-5.356922,7.522509],[2.885237,-8.196704],[-8.439338,9.911550],[-0.840907,4.880530],[-6.805404,-5.409249],[-9.158311,6.889074],[-6.409266,-8.153837],[1.921516,-0.340256],[-9.148381,5.464097],[8.357100,-3.138768],[3.941671,-9.922919],[4.770919,5.793092],[0.006611,-1.784917],[-2.805525,-2.931564],[3.835663,5.295603],[-9.116481,8.406765],[0.742786,-9.184551],[-1.480568,-9.969887],[1.962749,4.824259],[-9.676226,-1.185771],[-8.630261,-0.725266],[2.467705,4.186269],[8.128845,3.474378],[-1.476988,-3.337447],[-2.434397,0.957779],[0.487506,-4.562093],[-5.030080,6.223958],[9.792231,-1.365619],[-7.347453,-9.217193],[5.313270,6.266667],[-7.745452,4.757946],[2.224570,9.741213],[-5.581272,-3.780894],[-7.987830,-4.441886],[-6.215310,-7.214386],[-4.604025,6.964665],[4.520178,-4.655156],[7.667934,1.266279],[-2.211021,1.798475],[9.159389,3.425535],[7.073204,6.526767],[2.476948,-4.612604],[-1.380873,3.572534],[9.797212,9.547772],[-1.349888,-9.337758],[4.175088,-0.333302],[-3.404003,8.634652],[-2.997537,1.579390],[-3.934698,7.874567],[7.966645,9.393629],[-6.203175,-1.121385],[7.154300,-2.291747],[0.026394,-0.572511],[4.279792,-6.485477],[-8.400805,9.745433],[1.338759,-5.320273],[9.406650,6.854727],[2.267833,-4.100312],[0.750298,2.560022],[4.697367,-5.949302],[-6.703466,1.875994],[3.922454,6.404164],[-7.951459,-0.258674],[-1.504817,0.068332],[8.228098,-4.133168],[-1.352990,-6.996265],[5.030804,-5.946569],[-2.942695,2.113561],[1.756078,-1.038379],[-5.452655,-0.095345],[-9.886985,-0.739095],[4.667982,-8.299231],[-3.147294,6.904399],[-6.063974,-1.941374],[-9.408948,-2.547950],[-7.275621,5.404267],[-4.646779,-4.302878],[-4.193716,0.201945],[-5.957049,7.261903],[-9.963597,-5.780516],[-6.245989,4.861405],[5.304129,-3.384542],[-2.465421,-2.057691],[-5.482120,6.718940],[6.358631,7.379304],[-8.898089,-7.582406],[1.441531,9.087471],[-9.689723,-2.485274],[6.454454,9.773194],[-8.654971,-0.120028],[-0.610464,8.332680],[8.624905,7.177557],[-9.088085,-9.524114],[-0.576255,8.172088],[-9.414395,4.027371],[-8.206609,0.160182],[5.868930,7.097720],[-1.831333,-1.587061],[-9.812944,1.862960],[-7.285362,9.790634],[5.031922,-5.990778],[-5.893837,7.640237],[-5.628132,8.404353],[2.529165,-4.702755],[7.888064,-2.028051],[-1.267461,-6.984031],[-2.517595,-2.613730],[7.924332,3.988057],[7.352997,-5.666085],[-5.143794,-6.066331],[-7.902943,7.163635],[-7.683409,-5.281580],[6.019526,1.539605],[6.785368,1.481062],[8.223394,2.260280],[5.006103,3.998469],[-2.550023,-7.936676],[-2.659403,7.028753],[7.301939,-2.491440],[-5.974771,8.730855],[5.726791,8.778806],[2.372752,-9.232176],[-9.213021,4.056753],[-4.570467,-2.275763],[-5.998875,8.687853],[8.569302,5.730259],[-1.503340,-7.859749],[-2.538851,-1.171992],[-9.492317,-0.243707],[-9.208849,-8.965402],[-4.870636,-2.811644],[2.746418,3.846622],[-4.778393,-8.629529],[7.468744,-9.161086],[7.745763,7.736632],[-8.913852,5.457332],[8.511224,-6.647997],[-0.681280,4.642829],[-9.115599,2.184508],[-7.429012,0.937181],[-1.619942,9.078912],[1.582671,9.967141],[-5.492132,-7.704268],[-9.253896,-5.517967],[-5.467873,-9.449147],[7.431656,9.093705],[7.748978,4.378297],[-2.955531,-8.549742],[-1.303205,-6.415997],[3.897297,-4.663451],[-6.157918,7.735646],[-0.902448,7.924691],[-1.012280,1.105080],[8.646197,-2.932429],[-8.849396,-6.724905],[-9.316254,3.869245],[-3.207382,5.096025],[2.922804,-8.681330],[-8.868293,-3.718959],[7.936376,8.538094],[2.790082,0.108538],[-5.832787,-2.525869],[-6.757927,5.186627],[5.776659,2.421132],[-3.965621,-0.114543],[8.641382,-7.288933],[-3.569426,-7.781372],[-1.790957,4.758876],[3.300057,-8.488902],[-8.243557,-5.235574],[0.894996,-8.174453],[-9.362444,9.093731],[-1.668479,-3.370067],[-8.676878,3.996505],[5.153445,-0.891853],[-1.262541,-1.562903],[-9.196861,3.822903],[2.811775,6.351807],[0.483098,9.783930],[-9.553002,-5.231083],[-1.531386,-8.285001],[4.573201,3.509209],[9.360830,-6.469919],[-4.585729,6.088704],[7.272617,7.674625],[-9.840619,-6.819735],[-1.205169,3.196777],[-8.148667,5.608565],[-8.470935,5.696660],[-4.159826,1.392198],[-1.927249,9.156289],[-9.817034,3.024596],[1.763732,-2.716631],[-7.652190,6.276722],[-5.099887,2.159926],[-3.322422,-9.209293],[-5.595889,2.607253],[-5.813303,-5.029642],[-2.698946,6.089561],[6.500200,5.312385],[-9.474418,-2.540339],[-9.083686,8.255039],[5.254319,4.532500],[-6.865440,-2.416167],[6.122296,6.805230],[-9.603205,-5.852831],[3.434412,3.832122],[-7.279081,2.860446],[-0.532625,9.972124],[4.643898,-5.695600],[0.583727,-4.106849],[5.083248,-1.936224],[-1.055970,-1.760945],[-6.133428,-7.483862],[0.621636,-5.935847],[-5.675986,-8.138264],[0.260800,9.435914],[-5.461551,3.461848],[8.088363,3.821851],[5.320042,1.704504],[5.513006,-2.442437],[-3.716447,7.635406],[4.556352,6.469044],[9.555250,-4.673712],[-7.713973,9.962741],[5.160096,-0.621448],[4.096936,5.908463],[-0.741261,-8.160770],[2.841551,8.761183],[1.059856,7.030023],[-9.147953,-8.534527],[-2.221787,-9.111185],[-6.099337,8.169334],[7.613715,-7.082569],[-0.319127,6.646548],[-2.071441,-4.635449],[-4.827757,0.136883],[6.091106,-8.788636],[-1.075614,9.105605],[-2.716613,7.201220],[-2.816572,-7.077759],[-3.393701,-3.180242],[8.505373,3.972851],[4.621203,6.270771],[9.641639,-2.433795],[0.575270,-3.198945],[3.930648,-3.025153],[-7.963693,2.072060],[-2.218314,-7.739418],[-1.312076,4.514622],[-2.771658,-7.424951],[0.801775,5.323567],[-9.349660,2.217182],[7.815290,3.359643],[0.722451,-2.219989],[4.599173,-0.459691],[3.635251,5.400161],[1.676992,0.427442],[5.411521,-4.698836],[7.050700,-1.603539],[6.685805,2.092468],[4.404345,0.856119],[-1.886302,-9.400825],[6.827580,-4.073326],[6.120542,5.517273],[-9.202124,-2.044310],[-3.369193,-8.833773],[1.693432,5.713450],[-6.882230,7.413138],[-3.444717,8.449663],[-5.197537,-7.345006],[-0.736760,-8.977454],[-4.371587,7.585793],[8.812052,4.407118],[-4.841100,3.795242],[-8.383638,-1.781849],[-8.575103,-8.833269],[-9.429678,2.021840],[-2.567190,8.488266],[-7.527719,-1.054020],[5.361012,-9.241283],[-8.794182,-0.189163],[1.960264,-0.583752],[-9.302119,4.934135],[-4.887440,3.580309],[9.372262,0.763454],[5.818142,-8.947785],[-7.430414,-0.757964],[-6.257579,-5.900777],[-4.520839,6.416953],[9.746974,7.208614],[-1.107492,-3.091798],[1.233828,-0.201026],[-3.241536,-7.406193],[-0.522435,-8.243490],[7.588099,-7.998755],[2.036928,-6.792058],[4.525866,3.284756],[6.831738,-3.357392],[9.794039,-1.107484],[7.974428,8.521355],[-8.728832,4.763753],[8.778266,-8.113406],[-2.836478,-5.043737],[8.847357,-8.334893],[3.460607,8.781478],[-6.055103,-1.163696],[-3.705916,-5.160461],[6.841420,-9.854575],[9.925757,-2.628815],[0.934050,-4.549023],[5.197735,0.672928],[8.323790,3.513867],[4.320579,-8.955463],[0.630252,-7.809157],[2.828409,6.629546],[-6.572153,2.252563],[8.366173,-5.574240],[-6.789667,-5.564417],[-7.080353,-7.018930],[5.124943,-0.580248],[2.405483,2.863375],[3.659255,-0.426915],[-7.549245,-4.780495],[3.872726,3.910885],[2.899669,4.274717],[-1.017803,-5.449032],[3.819045,-7.405330],[-2.422470,-5.192524],[5.196711,-3.949612],[8.063065,-5.271019],[-5.846411,-2.314536],[-5.858197,-1.071241],[-9.756163,1.614405],[-3.288848,7.673051],[-1.996862,-9.746731],[-8.089924,-6.401609],[-9.980512,-6.645882],[-6.917042,-2.484868],[7.113018,-0.075715],[-6.558149,-5.986526],[0.324763,4.692857],[8.680676,9.959299],[-6.782065,-7.016154],[-9.498526,4.354590],[-0.108314,-8.361054],[-3.342138,6.927692],[-6.403655,2.835535],[6.770131,1.420458],[3.970830,-0.720239],[2.350039,-8.518026],[9.659169,-8.965871],[-5.673879,1.655014],[9.909643,9.317352],[-2.852613,-1.283009],[-2.161821,5.207894],[6.609059,-5.504022],[8.813697,9.980041],[7.245372,-1.018356],[-8.797594,-3.193020],[-8.751698,5.897517],[-9.964719,8.091179],[-8.027305,0.675355],[3.590523,-2.104089],[9.512463,8.359403],[1.534550,5.344604],[4.954036,7.925934],[-5.873141,-7.216079],[7.902255,-5.993553],[-7.796368,-7.306759],[3.999326,7.465944],[-9.702539,1.896346],[1.835856,-2.112427],[4.459822,3.485119],[-8.739320,9.749221],[-9.325505,7.077215],[3.406773,7.818787],[-1.127280,-8.701216],[0.362225,-3.515720],[6.649209,7.311723],[2.245354,6.586624],[9.377478,3.052327],[-5.050816,-9.027163],[-6.174647,-3.419979],[-4.046944,9.514816],[-1.521934,-4.506081],[3.561592,0.981497],[1.328616,7.024320],[5.273288,6.913758],[1.548621,-6.691341],[8.583812,4.500482],[-5.475624,-8.280401],[4.193015,2.135759],[5.751013,-0.644228],[3.378756,-2.845452],[-8.521963,6.985364],[-9.478073,2.037671],[0.831653,9.576997],[-8.557318,-1.655870],[5.504497,7.708846],[-7.860449,-3.366020],[0.150826,-0.901940],[-5.482741,1.342005],[1.385001,-9.988505],[1.191286,9.090623],[1.094379,-3.384887],[6.244152,1.185517],[6.265744,-3.012398],[9.794287,9.732720],[4.743737,1.713110],[-3.765091,-5.683963],[9.403568,-4.686175],[-6.645794,0.056046],[-0.809135,-9.365430],[-4.996482,-2.646308],[-4.760549,5.217187],[6.769351,-9.621118],[3.070002,1.870128],[-0.531783,3.009065],[-7.685044,7.552122],[4.107467,0.654244],[-9.786221,-0.759749],[3.587139,-7.173254],[2.280364,1.144913],[-7.034756,7.042412],[-0.010213,-9.076349],[-2.277070,-1.795029],[4.014179,-4.335568],[2.859763,-0.715736],[4.970498,-8.742887],[-6.383805,-0.994573],[2.435667,-6.713633],[-0.781197,8.769278],[-4.708634,9.717237],[1.342258,-5.718697],[9.000092,0.556583],[-4.331538,-5.915056],[-1.313306,-7.468471],[1.164467,-6.804892],[-0.876321,9.291261],[-8.632576,7.887784],[-8.585224,-3.867686],[0.590633,-7.151101],[3.212389,4.902469],[7.409201,1.772779],[-1.549777,-2.577843],[-1.552329,-7.926171],[-2.456835,0.135479],[-6.905331,4.824240],[-3.126436,-6.241941],[-8.330885,-7.125926],[9.034402,2.664226],[-9.513861,-5.641883],[-4.734161,-3.874428],[-9.491694,-4.559349],[-3.862574,2.586576],[-1.843155,0.887305],[-7.974832,-9.032160],[-2.621018,-3.493625],[-9.347989,9.543407],[-7.549548,-8.751187],[-3.993094,-3.943722],[0.331432,5.888397],[-3.709069,5.227325],[-5.089100,4.345100],[-2.874633,6.383764],[2.768878,-0.295690],[-3.390712,-6.001998],[-9.946443,0.184951],[4.796570,3.006891],[-7.692409,6.561304],[0.630298,-3.166364],[2.170644,5.719357],[4.720202,1.178043],[-2.029497,1.054532],[3.221687,-5.687611],[-0.735192,-4.480644],[4.730933,-7.728176],[4.349140,-3.812976],[-0.837286,-1.310304],[7.427984,-2.033909],[-3.395407,5.691061],[2.274129,9.407316],[-0.634309,-2.149709],[-1.692835,-9.417504],[-3.251395,3.908530],[-2.525656,7.905702],[-7.947805,0.053982],[0.116724,3.943441],[7.231463,-7.175630],[9.565609,5.822181],[1.152649,-1.623990],[-1.676685,1.183014],[6.885886,-0.370510],[6.126500,8.757437],[6.749903,0.099910],[-3.212035,8.145035],[6.944867,-2.724107],[8.374122,-4.768253],[-3.948334,-1.218878],[2.221914,1.044386],[1.451169,8.167279],[1.833629,-8.548334],[6.122300,8.290020],[-7.032001,2.203308],[1.402586,-5.069299],[2.519068,4.454113],[4.983031,-9.612282],[-3.012833,-2.957583],[-7.986761,-0.952708],[-0.632931,-0.859811],[-6.900644,1.412462],[-3.229902,-6.141423],[-6.903677,4.233192],[7.315095,6.138218],[-5.258529,5.871724],[-2.734148,-3.787494],[4.944496,-3.296177],[-5.343650,1.009336],[7.572446,0.187378],[2.218821,6.598886],[3.729678,3.194329],[6.616367,4.441350],[3.292290,-8.209419],[-3.966756,-5.012081],[0.876102,2.583547],[3.397465,-3.321792],[6.391450,1.346620],[1.691429,6.137534],[8.702557,9.067568],[0.868710,-5.318633],[-9.979582,-8.370497],[-1.087411,-6.642914],[-7.683376,8.756592],[6.547584,-4.268297],[2.472275,2.818814],[-9.655448,9.087341],[-6.567575,-8.625527],[-5.353575,-6.532099],[-4.752412,4.473918],[6.666527,-8.788910],[-2.896540,7.274804],[-1.431831,-0.735350],[9.176299,-2.613891],[-3.711948,5.365100],[5.209387,2.295022],[5.478207,-7.254842],[-9.426579,-6.776867],[7.142175,0.802312],[-1.871665,8.059170],[-5.263442,-4.246139],[-4.938358,9.851947],[0.319683,6.528750],[5.789856,-2.200242],[-1.021944,-0.045315],[-2.164056,-9.336146],[2.334376,0.535959],[-1.246034,-3.519995],[0.720387,3.939083],[-1.346264,-7.269759],[9.162175,-7.931267],[-9.555362,8.297071],[3.243960,-8.548866],[-9.031365,0.106292],[-3.748197,9.258950],[-7.198113,-0.919076],[0.609347,1.977797],[-2.515900,1.292897],[3.264314,-1.833679],[-4.281564,-1.419553],[6.781572,8.756969],[4.823454,-0.584747],[-7.070104,-4.126274],[1.298357,-2.459031],[-7.993206,-6.818370],[5.261654,8.577400],[2.051133,9.637782],[2.732319,2.436878],[-8.919648,9.012204],[-1.714524,4.601174],[3.186098,5.196675],[-2.614149,1.344470],[4.177149,-6.172711],[0.111427,3.304061],[8.127621,-7.813984],[-5.737524,-2.994688],[3.056145,-4.219424],[1.054946,-1.110191],[6.925405,2.895475],[5.567020,4.282194],[8.487392,8.232093],[0.504668,3.110984],[1.757393,8.717914],[-2.373560,-3.150542],[0.273891,4.115697],[3.030431,-0.863943],[5.013784,-7.631805],[-1.895587,5.109197],[6.342867,5.884241],[0.654168,-1.037663],[-3.198252,-4.588123],[8.141010,-3.034443],[7.176642,1.591868],[3.462744,2.675229],[3.550093,8.789430],[6.571833,4.403008],[-1.695374,9.247563],[-0.001257,-9.443333],[-6.272893,9.082529],[-7.651460,-1.910376],[8.911054,-2.504280],[5.462205,1.191834],[7.486918,4.280552],[8.059212,-7.999359],[5.384350,3.203396],[5.647381,-3.605916],[-0.072868,0.170308],[-2.062644,-2.777484],[9.271905,-2.184690],[-8.558172,3.309562],[8.071617,8.885789],[-3.165640,-2.424616],[3.384288,3.297360],[2.050166,-5.988270],[0.157609,-7.041795],[-8.239568,3.915983],[1.758508,-6.774111]], dtype = "float64")#candidate|17033|(900, 2)|const|float64
const_17034 = relay.const([[0.716109,3.904462,-7.950786,4.865570,5.980069,-4.980105,-4.041127,3.212608,1.344238,9.723982,1.005436,-1.916535,-8.771280,6.795359,-0.339372,-8.901669,-9.408885,1.019356,2.857600,-1.792202,-4.038885,-8.402759,-0.187141,6.572672,5.638502,-0.476453,-9.085833,5.453346,-3.271574,7.138042,-2.910697,-7.614528,0.240450,-1.398085,-2.461025,3.710535,2.087007,0.940354,4.002768,9.019177,7.183598,8.009758,-2.728589,3.326282,3.534918,-5.821423,-3.066913,0.569018,-5.101021],[-4.800374,-3.928697,7.197065,-7.802834,-0.730727,-1.713378,-5.064736,6.302646,7.988318,-2.811898,2.023921,5.644479,-8.374539,-9.234519,4.417316,1.164201,-8.331699,8.335966,0.567295,-4.519217,8.762586,1.635297,1.136591,6.794550,-8.116211,5.899154,8.361021,4.682410,-1.414533,3.962109,7.376216,-0.897517,7.878609,3.855568,7.694727,-6.975686,-4.078499,-6.273445,-7.333852,-1.675590,-3.857926,-3.309046,-8.403567,9.231090,-3.773293,-4.176915,5.272114,7.636543,-7.400790],[7.995265,-1.839634,-3.599014,0.432308,-9.353723,-1.366957,-8.468574,-4.355435,6.635244,7.910471,-2.764843,7.315293,6.773941,6.101665,5.865983,9.433343,3.713987,-0.865856,3.555277,-8.993533,-0.809551,-8.556574,2.890932,1.578902,-8.471599,2.897788,-1.992064,6.029585,6.508655,-9.676511,9.557604,1.424577,-8.931847,-3.167487,8.941635,7.662711,-4.407142,4.201090,9.592464,-9.589335,3.596571,-6.569428,-7.813732,3.458364,-3.621672,3.525632,9.306869,-0.112894,-3.893703],[1.688578,5.027206,2.345095,2.939577,-3.059742,-5.367305,-6.013942,-2.567600,5.308244,-0.466990,3.365562,0.173013,-5.316898,3.568728,-2.893042,-1.155820,-2.947375,-1.753812,6.221688,-6.239398,-1.257760,-5.910195,-6.917934,1.100359,6.804204,-7.621863,-4.096751,0.761162,-1.621344,5.987816,4.550866,8.136526,-0.660699,5.364097,9.649352,3.078246,-4.145142,-5.764279,-8.016064,0.620637,3.412767,-3.426722,7.370702,8.011948,3.781742,-9.461419,-5.607134,-8.485351,4.788975],[-6.308780,2.265014,4.820651,4.935814,-3.987965,9.111033,8.042454,8.565843,7.627187,-7.893814,-8.516161,0.651567,-8.087546,-4.487311,-0.132649,-2.080436,-4.446816,-9.121231,-1.233858,3.311015,-2.274844,-6.540859,-2.093980,1.036930,-0.033849,-0.725284,4.458160,5.584983,6.999925,-7.698518,8.208312,-1.710729,-3.795040,0.643414,-3.121973,0.703515,-1.743681,-1.152437,4.042329,-2.951885,0.361922,1.321049,-6.374438,-6.715800,-5.748510,-3.416765,-5.415888,-6.116824,4.274972],[9.683400,-9.436539,-6.983497,-0.329000,0.597033,0.609367,5.077394,-4.760013,0.521678,8.139447,-7.846861,6.333098,0.703892,0.503553,-3.745326,-4.547597,-6.372986,7.644052,4.889692,-7.590408,4.364937,-2.651849,-5.061447,5.018405,6.319556,-1.779791,6.967202,-5.750123,9.014782,-1.998370,1.355799,8.606955,2.823060,-3.211815,-7.991051,-5.081327,-3.212695,-3.516715,2.475134,5.911448,-3.958457,5.338964,3.744573,-4.221706,9.387275,-2.692733,6.124591,2.617099,-4.155495],[4.313603,-2.420073,8.202180,-0.379474,0.661575,3.327998,4.420108,-2.151461,6.409452,-0.275543,-4.416189,-3.813220,-4.518153,-2.370280,3.912975,-1.357884,3.350149,-2.710878,0.972594,-8.407213,-8.833909,6.065880,0.483044,-3.859730,1.094208,2.631568,3.208556,9.260670,2.087036,8.758557,-4.876989,-8.552840,-8.979595,-7.180433,5.291261,-7.463666,9.879013,9.209098,-0.023245,9.152320,3.541926,3.666422,8.253511,-8.872416,4.619417,1.699735,5.568038,8.439849,-0.216557],[-5.074999,3.937285,8.190504,-8.599870,0.206345,5.743048,1.319747,8.097171,3.025692,4.244560,-0.064807,4.530706,-8.921837,7.284719,-4.224765,-4.641949,7.093928,9.983878,-9.377835,-3.550419,-9.352930,-5.018493,-1.163268,6.675399,-7.014291,8.120532,1.984079,-5.113526,-2.229403,2.223884,5.759609,8.397986,5.138129,-8.315027,-8.619971,-8.636304,-9.511991,-3.249953,-4.246371,-0.871552,-8.964164,3.814021,-8.085750,-4.399694,4.629238,1.201225,4.612418,-6.411205,0.880837],[-0.506454,5.569712,6.681350,7.300629,-4.800512,7.673845,3.718062,-6.122902,0.191313,-2.766994,3.616403,9.709311,6.743090,2.556923,-7.582368,-4.983623,0.596940,5.015065,5.158717,-0.908627,-2.290555,-4.788687,-5.719423,5.898609,7.249595,5.266415,7.250261,8.816025,3.034591,-5.146541,0.724561,-0.485213,-3.118966,7.451761,-6.436463,9.996834,4.746143,-0.157156,3.485058,9.740137,-2.374954,7.718940,-8.376725,-0.185528,-8.641719,0.809092,1.778554,-7.246205,0.833151],[7.913296,8.640397,-1.304448,-5.354738,-9.732805,-1.270423,-2.069238,-0.851704,3.137821,-9.732452,-8.326050,-4.228836,-8.045714,6.004718,-7.162698,0.812968,3.375225,-1.925818,8.883181,-6.197469,-3.377753,-6.702833,0.122599,2.491533,5.900018,-8.423728,-1.622157,5.549885,-6.243723,8.195614,8.788084,-7.810824,2.059332,-1.845650,4.867755,3.527665,-7.391826,-5.255227,-6.894245,-0.637481,5.244978,-7.287453,1.627896,0.737666,-9.736542,-3.479007,0.923991,-0.539655,-1.706057],[9.156421,-8.937738,9.436034,-7.560634,-0.726493,3.416550,-8.455154,-2.596225,-2.693300,-3.081169,0.046539,-8.377734,-8.119275,8.541808,5.271742,-0.982115,5.351779,7.545642,4.529880,9.517777,-6.615856,-1.274903,4.989938,2.261706,-3.563967,1.549103,8.559611,-5.606383,8.677875,-1.273665,8.696532,-6.478745,9.312194,8.489708,9.547011,7.660221,-8.048400,3.704979,-4.025215,0.806210,-2.286959,-0.711233,1.077816,-4.950107,-6.421659,1.044988,9.439300,2.618861,0.765572]], dtype = "float32")#candidate|17034|(11, 49)|const|float32
call_17031 = relay.TupleGetItem(func_11348_call(relay.reshape(const_17032.astype('float64'), [1, 4, 15]), relay.reshape(const_17033.astype('float64'), [450, 4]), relay.reshape(const_17034.astype('float32'), [539,]), ), 4)
call_17035 = relay.TupleGetItem(func_11353_call(relay.reshape(const_17032.astype('float64'), [1, 4, 15]), relay.reshape(const_17033.astype('float64'), [450, 4]), relay.reshape(const_17034.astype('float32'), [539,]), ), 4)
output = relay.Tuple([call_16994,call_17031,const_17032,const_17033,const_17034,])
output2 = relay.Tuple([call_16995,call_17035,const_17032,const_17033,const_17034,])
func_17056 = relay.Function([], output)
mod['func_17056'] = func_17056
mod = relay.transform.InferType()(mod)
output = func_17056()
func_17057 = relay.Function([], output)
mutated_mod['func_17057'] = func_17057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16732_call = mod.get_global_var('func_16732')
func_16733_call = mutated_mod.get_global_var('func_16733')
call_17116 = func_16732_call()
call_17117 = func_16732_call()
uop_17118 = relay.exp(call_17116.astype('float64')) # shape=(13, 4, 13)
uop_17120 = relay.exp(call_17117.astype('float64')) # shape=(13, 4, 13)
bop_17123 = relay.maximum(call_17116.astype('float64'), relay.reshape(uop_17118.astype('float64'), relay.shape_of(call_17116))) # shape=(13, 4, 13)
bop_17126 = relay.maximum(call_17117.astype('float64'), relay.reshape(uop_17120.astype('float64'), relay.shape_of(call_17117))) # shape=(13, 4, 13)
output = relay.Tuple([bop_17123,])
output2 = relay.Tuple([bop_17126,])
func_17145 = relay.Function([], output)
mod['func_17145'] = func_17145
mod = relay.transform.InferType()(mod)
output = func_17145()
func_17146 = relay.Function([], output)
mutated_mod['func_17146'] = func_17146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16975_call = mod.get_global_var('func_16975')
func_16976_call = mutated_mod.get_global_var('func_16976')
call_17170 = relay.TupleGetItem(func_16975_call(), 0)
call_17171 = relay.TupleGetItem(func_16976_call(), 0)
uop_17184 = relay.log2(call_17170.astype('float64')) # shape=(13, 4, 13)
uop_17186 = relay.log2(call_17171.astype('float64')) # shape=(13, 4, 13)
output = uop_17184
output2 = uop_17186
func_17187 = relay.Function([], output)
mod['func_17187'] = func_17187
mod = relay.transform.InferType()(mod)
mutated_mod['func_17187'] = func_17187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17187_call = mutated_mod.get_global_var('func_17187')
call_17188 = func_17187_call()
output = call_17188
func_17189 = relay.Function([], output)
mutated_mod['func_17189'] = func_17189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17145_call = mod.get_global_var('func_17145')
func_17146_call = mutated_mod.get_global_var('func_17146')
call_17377 = relay.TupleGetItem(func_17145_call(), 0)
call_17378 = relay.TupleGetItem(func_17146_call(), 0)
output = relay.Tuple([call_17377,])
output2 = relay.Tuple([call_17378,])
func_17379 = relay.Function([], output)
mod['func_17379'] = func_17379
mod = relay.transform.InferType()(mod)
output = func_17379()
func_17380 = relay.Function([], output)
mutated_mod['func_17380'] = func_17380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17145_call = mod.get_global_var('func_17145')
func_17146_call = mutated_mod.get_global_var('func_17146')
call_17400 = relay.TupleGetItem(func_17145_call(), 0)
call_17401 = relay.TupleGetItem(func_17146_call(), 0)
uop_17412 = relay.sin(call_17400.astype('float32')) # shape=(13, 4, 13)
uop_17414 = relay.sin(call_17401.astype('float32')) # shape=(13, 4, 13)
func_9384_call = mod.get_global_var('func_9384')
func_9388_call = mutated_mod.get_global_var('func_9388')
var_17436 = relay.var("var_17436", dtype = "float32", shape = (945,))#candidate|17436|(945,)|var|float32
var_17437 = relay.var("var_17437", dtype = "float32", shape = (539,))#candidate|17437|(539,)|var|float32
call_17435 = relay.TupleGetItem(func_9384_call(relay.reshape(var_17436.astype('float32'), [945,]), relay.reshape(var_17437.astype('float32'), [1, 539]), relay.reshape(var_17436.astype('float32'), [945,]), ), 6)
call_17438 = relay.TupleGetItem(func_9388_call(relay.reshape(var_17436.astype('float32'), [945,]), relay.reshape(var_17437.astype('float32'), [1, 539]), relay.reshape(var_17436.astype('float32'), [945,]), ), 6)
output = relay.Tuple([uop_17412,call_17435,var_17436,var_17437,])
output2 = relay.Tuple([uop_17414,call_17438,var_17436,var_17437,])
func_17441 = relay.Function([var_17436,var_17437,], output)
mod['func_17441'] = func_17441
mod = relay.transform.InferType()(mod)
mutated_mod['func_17441'] = func_17441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17441_call = mutated_mod.get_global_var('func_17441')
var_17443 = relay.var("var_17443", dtype = "float32", shape = (945,))#candidate|17443|(945,)|var|float32
var_17444 = relay.var("var_17444", dtype = "float32", shape = (539,))#candidate|17444|(539,)|var|float32
call_17442 = func_17441_call(var_17443,var_17444,)
output = call_17442
func_17445 = relay.Function([var_17443,var_17444,], output)
mutated_mod['func_17445'] = func_17445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16653_call = mod.get_global_var('func_16653')
func_16654_call = mutated_mod.get_global_var('func_16654')
call_17457 = relay.TupleGetItem(func_16653_call(), 0)
call_17458 = relay.TupleGetItem(func_16654_call(), 0)
output = call_17457
output2 = call_17458
func_17463 = relay.Function([], output)
mod['func_17463'] = func_17463
mod = relay.transform.InferType()(mod)
mutated_mod['func_17463'] = func_17463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17463_call = mutated_mod.get_global_var('func_17463')
call_17464 = func_17463_call()
output = call_17464
func_17465 = relay.Function([], output)
mutated_mod['func_17465'] = func_17465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17187_call = mod.get_global_var('func_17187')
func_17189_call = mutated_mod.get_global_var('func_17189')
call_17525 = func_17187_call()
call_17526 = func_17187_call()
uop_17543 = relay.atan(call_17525.astype('float64')) # shape=(13, 4, 13)
uop_17545 = relay.atan(call_17526.astype('float64')) # shape=(13, 4, 13)
output = uop_17543
output2 = uop_17545
func_17551 = relay.Function([], output)
mod['func_17551'] = func_17551
mod = relay.transform.InferType()(mod)
output = func_17551()
func_17552 = relay.Function([], output)
mutated_mod['func_17552'] = func_17552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17551_call = mod.get_global_var('func_17551')
func_17552_call = mutated_mod.get_global_var('func_17552')
call_17597 = func_17551_call()
call_17598 = func_17551_call()
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
const_17600 = relay.const([4.074305,-5.698418,9.029424,6.956763,-2.897419,2.398811,2.774317,-6.805068,2.752759,8.730945,1.962021,7.899212,2.110350,6.772542,-3.002319,-0.323367,8.462705,-1.036760,3.120890,4.159037,8.578817,-5.089775,-5.473015,0.743937,-2.394558,-4.071255,-4.328300,4.560239,8.322154,-4.094891,0.275027,-2.872376,7.306763,4.718595,-6.916617,-1.478350,-9.795710,7.174384,-3.584713,-9.012803,7.598626,-2.950593,-5.483570,3.466898,5.134854,0.262555,-6.258936,4.692497,-7.210572,-2.616456,1.847491,-9.556820,6.448846,-2.704519,-4.723636,-4.109548,6.725512,-2.277087,-1.035537,-0.943546,7.063982,-9.458334,5.488559,-0.733687,5.791540,-3.133532,2.232417,-5.523502,-1.945448,-1.918945,0.362890,-2.819852,-1.210337,-9.957330,-5.947368,-4.611687,6.076004,9.324384,-3.209075,-9.671271,-5.933798,-8.654834,-4.139516,7.829463,5.412437,0.483926,-2.824055,-1.459951,-1.713118,-3.093638,7.188275,1.696139,7.208179,4.109776,-3.596660,8.307799,-7.374560,-0.607991,-2.252775,-6.746271,-8.888110,-1.470192,2.298852,7.706649,-7.936991,9.458849,-5.574304,-5.617808,9.178145,7.094315,9.228301,3.791448,-3.183202,-2.784683,5.497629,-0.133436,7.595278,-3.673594,8.533396,-6.406572,3.984661,3.916908,-3.448311,-2.150175,0.051751,5.045637,-5.678883,3.233644,4.572567,-8.564604,-1.592333,-3.142249,9.719018,-7.299674,-3.067762,-2.245821,-3.160948,4.545392,0.759474,3.895592,9.774876,-2.860703,7.250239,-6.526263,2.082944,4.052181,7.279379,3.623770,-4.447765,-8.527860,1.614018,4.062158,-4.620569,-9.911551,-9.671446,2.766674,2.629394,9.586926,3.607381,7.049173,-7.517242,-9.706610,-4.636785,1.900670,1.787081,1.662981,-0.592995,2.526765,8.065250,7.063175,1.054953,8.306063,-8.594738,6.860447,-6.289013,-9.185980,1.969548,-8.545233,9.374500,-0.228885,8.976075,2.965877,-4.694532,3.959400,-0.052859,7.447767,9.796069,-1.304386,-4.164575,8.977920,-3.382873,0.676875,-0.150789,6.977935,9.798423,-3.661368,8.582640,3.991810,-6.068417,9.295246,9.559074,-2.206657,0.972631,-2.449194,-0.298986,-7.934891,1.753087,-3.041591,-3.437011,9.052220,-6.382617,-8.149235,1.817561,0.054483,-6.657534,2.975767,-4.783015,-3.251908,-7.602163,4.504587,-5.370730,-4.606271,9.045428,1.255396,-0.959846,-9.125872,9.314783,6.859061,-2.336977,-6.921930,0.008936,-9.564560,-8.001483,-9.852452,9.597873,5.144433,1.299872,9.808757,3.544979,-7.402513,-4.154900,-5.047628,-4.479301,-3.325299,-1.725737,1.709211,-5.500198,9.642953,6.617632,-4.020297,1.096652,-9.825770,4.469360,-3.310818,4.747930,-0.904989,0.844668,1.217720,-0.725439,-9.341221,-6.564469,4.928334,5.487461,6.174137,-3.347964,2.494726,-0.963812,-6.200445,3.767459,-8.966864,-1.397348,-6.667317,5.464568,7.111649,-0.011802,-2.259725,7.308265,2.927009,2.530621,8.911078,-8.816964,7.605543,1.178496,-2.915912,-9.684166,3.175595,-6.057011,-4.163957,9.570254,3.770226,5.128921,-9.146673,5.886140,8.843670,5.648308,-8.388695,4.332685,-2.943156,-9.145944,-8.728098,0.725689,8.830945,1.077481,8.236008,7.228257,-8.277204,-7.912364,6.370497,5.269109,-9.707528,-5.763707,-5.283608,0.279387,-7.373063,-9.757206,-8.279996,-0.712766,9.629716,-0.279829,-3.124036,7.056762,-5.862899,1.549923,-2.014936,4.751342,6.720941,6.584640,6.459510,-4.129315,-0.485352,-8.995933,-9.596019,-7.842020,9.952206,-0.054712,-1.165260,-8.992232,-8.245063,8.666115,-0.849477,2.678763,-1.613339,-7.622726,1.766356,4.030527,3.419458,2.858090,-0.601588,7.244511,-0.410730,8.299776,2.692374,0.170923,9.671784,-1.520085,3.650789,-2.276830,8.940446,-1.546232,3.301658,-1.969044,4.617678,7.446552,-9.078821,0.400882,-4.703083,0.397496,5.829736,9.788552,9.329144,-8.215084,-7.654819,-8.141495,7.820865,-1.185557,-7.442417,8.253104,-6.348069,8.217279,3.665102,1.689354,2.196605,-4.258609,-1.686423,-3.429821,6.981344,-2.358208,4.838727,0.713788,8.973594,7.504895,4.269426,-7.930455,4.255963,-1.833151,-5.353103,9.597341,-8.190603,-6.463733,8.687999,1.719984,-6.582267,-4.089184,-2.899012,-1.830265,-1.408808,-0.072954,7.700629,7.560722,-0.845582,5.179368,-5.454892,6.316152,-6.814707,7.404710,-7.371766,6.097687,-8.101020,-6.611366,9.830368,2.110758,-4.220737,2.959020,-5.401688,2.785733,-3.893458,9.888146,0.661536,-4.567049,0.516068,1.780449,-7.227413,-1.673182,5.638136,6.470164,4.162070,-3.129960,-0.302410,0.524987,-1.169347,-7.582699,-4.069783,0.650175,-0.968531,5.381702,1.894958,6.611418,2.602680,8.197515,-4.488482,-0.537800,3.493612,5.692692,-5.087671,-1.956084,0.810063,-2.149340,-6.178263,5.176610,2.759172,-6.836993,-7.488256,-5.974593,4.368429,-2.112921,-2.879876,-9.658924,6.853702,-3.980555,-9.070926,-6.315172,9.846765,2.693756,9.560522,-2.892546,-6.312454,1.059934,-5.754212,-2.852759,3.183366,1.135656,4.619836,7.130280,5.032712,9.358939,-7.512749,-9.289692,-5.228038,-1.489945,-6.914735,-4.319337,2.753730,5.433677,5.966348,-4.768769,-9.926538,-7.169705,3.199615,-1.200496,3.263000,-2.446585,-6.631086,1.775926,1.654784,-6.196236,-3.463191,-1.756158,-1.301141,5.792864,2.438945,5.058537,3.225874,-1.575528,5.318269,-9.257878,-1.940615,5.644676,2.517200,7.976793,-1.011044,-5.755550,-7.976012,-4.056902,3.900095,-4.087446,8.883428,-2.804665,5.858080,7.072038,-1.778641,-7.864468,3.784602,7.565167,-4.699782,6.024558,-7.654606,-7.807955,-5.058673,6.941732,-0.895826,-3.246164,0.982181,4.169710,9.159143,-8.304863,-0.845939,-7.759248,-0.962170,-5.794906,-0.321075,4.293557,6.386209,5.771545,-4.378295,1.458602,-8.179792,6.838198,3.674034,0.909859,8.494249,-2.020566,-0.650110,5.799782,-6.255213,3.019677,4.668594,7.623899,-7.972997,-9.372158,8.895129,-1.464920,-9.692716,-0.657130,-6.223064,-0.778465,3.034980,5.548148,-3.167720,-3.063592,-2.024340,0.559449,-2.616581,-7.391547,-4.934776,1.360560,0.905324,5.974880,7.112132,8.624690,5.959159,-6.926443,-3.203879,-2.377254,-4.117341,5.117156,9.940686,2.098085,2.353483,-5.336302,-3.548190,5.233648,2.382807,5.808525,-6.058776,-7.582203,1.376868,-1.519575,-4.162330,-6.544099,0.485944,3.646747,-3.329015,-2.291178,5.852355,4.614718,5.760518,7.731376,-8.840011,4.583391,8.356161,-1.112288,-5.294213,-8.840078,-8.093486,-6.642890,-2.446446,-4.332065,-7.822236,-6.288483,4.534238,6.126841,-3.612431,-2.300928,-8.393903,-2.501931,9.467433,-3.198942,0.886781,4.242280,8.899030,-9.750429,8.268566,-5.653584,7.596697,9.552638,9.878799,7.819476,9.956291,-1.767569,-5.032008,1.218996,8.816626,4.177387,-7.497297,-8.783553,-0.686683,8.015193,7.029075,3.169360,-2.757277,-8.004208,-7.462914,-3.441940,4.490546,4.193637,0.451496,1.392733,-9.214359,0.562018,1.138291,-4.083309,-8.838171,-3.679243,0.222581,5.676247,-0.860907,7.463531,5.375714,8.787828,-9.786705,-5.947643,6.857090,5.200442,7.845819,1.945087,-5.990277,-1.892603,3.314719,4.608148,4.221746,4.954307,-0.906519,-8.457424,-0.447250,-4.765733,-7.458145,-2.267387,-1.074976,8.596760,-7.495535,2.340071,-9.898815,-9.245927,-7.663712,-7.769960,-9.319507,5.652427,5.668791,-6.648453,4.570879,-4.801082,-3.930661,-5.484067,-5.285192,-6.058529,-1.136115,-6.022910,5.052721,-5.291867,-3.314354,3.809268,-9.482594,2.033703,-6.311139,8.877511,-9.417986,2.996486,-6.950298,5.816604,7.183156,-4.395172,8.723523,-5.060577,8.452027,-2.649390,-0.415771,-8.065626,1.210949,-8.131644,4.011090,2.049363,8.399940,-9.433813,-0.287026,2.492807,1.130470,2.599430,-4.912487,-1.924753,1.198051,8.059227,-1.261350,-1.493240,0.426155,-8.430473,9.501115,-7.526702,-6.561356,-2.316687,-6.134023,7.722822,0.650301,6.611116,-9.085806,2.191162,-4.924890,5.988337,-5.161903,-6.786626,-8.245195,3.687797,6.422669,6.672336,-4.900060,-2.161160,7.167634,5.149753,0.581442,-9.242355,-1.767110,7.079875,-6.522728,0.691938,-1.191325,-0.510926,-7.187526,-7.120901,7.643365,-0.933428,-2.472613,-8.120331,-1.223122,-2.423005,-3.342829,9.604861,9.835674,-3.414512,-0.528996,-8.555108,2.852607,1.820816,-4.131739,3.018719,4.348980,-0.580862,0.991287,5.388862,-6.550717,6.269653,-2.967136,8.123527,4.593922,9.035203,7.511529,-2.937412,-6.895856,8.653692,-4.708346,-3.081856,-3.587538,0.161909,-6.248523,6.960723,-9.875682,2.553756,0.411231,-1.224498,-5.562528,-8.637139,-6.742896,3.107790,4.593665,8.717989,8.622836,7.863008,-3.523964,9.408877,-4.188953,6.108399,4.513704,1.334300,7.465646,7.290914,-0.442544,-8.260532,1.577065,1.961085,-1.186741,-5.544655,9.269190,6.034215,-6.867453,-0.232004,1.010748,5.864088,-4.505288,9.647412,2.551363,-4.876418,8.799101,-1.360821,-1.132305,1.237625,-6.736529,-6.892936,8.640475,-1.669649,5.410283,-0.185891,-6.206514,1.142392,8.722713,2.746017,-3.166064,-6.197007,-3.699929,-1.617931,-9.234445,7.481259,8.726865,-5.378239,5.089187,-9.813867,5.468730,3.198354,-0.223756,2.719461,0.817809,-0.569170,-9.411571,1.199715,2.296118,9.505634,1.406018,0.819974,-3.144822,-0.456710,-0.737144,-7.629187,4.748245,1.475964,1.767991,7.928543,5.968400,-6.325188,-0.564188,-1.479526,8.384158,-6.978463,-0.727423,5.436888,8.657121,-1.390612,-7.840327,-6.322864,-0.383187,0.631739,-5.320964,7.349048,7.432312,8.572505,7.051166,3.812595,9.842205,-9.268061,2.048502,-8.964095,2.179441,-8.653847,-7.533918,9.651794,8.780834,-8.379381,-0.260317,4.298640,9.603870,5.453555,0.172839,0.155794,-1.514217,-1.818234,9.218002,4.458588,-7.461297,-3.389769], dtype = "float32")#candidate|17600|(945,)|const|float32
call_17599 = relay.TupleGetItem(func_1328_call(relay.reshape(const_17600.astype('float32'), [945,])), 2)
call_17601 = relay.TupleGetItem(func_1330_call(relay.reshape(const_17600.astype('float32'), [945,])), 2)
bop_17603 = relay.divide(call_17599.astype('float64'), relay.reshape(const_17600.astype('float64'), relay.shape_of(call_17599))) # shape=(945,)
bop_17606 = relay.divide(call_17601.astype('float64'), relay.reshape(const_17600.astype('float64'), relay.shape_of(call_17601))) # shape=(945,)
func_13911_call = mod.get_global_var('func_13911')
func_13915_call = mutated_mod.get_global_var('func_13915')
const_17619 = relay.const([9,-4,-1,3,3,9,-6,-6,2,-3,-1,-1,-2,9,5,3,-7,-2,3,8,9,-4,10,5,9,-4,-6,9,7,1,8,-8,2,5,7,-1,-3,-3,-5,4,6,-4,-5,2,3,-6,9,5], dtype = "int32")#candidate|17619|(48,)|const|int32
const_17620 = relay.const([[-2,7,10,1,-5,8,-8,3,-10,4,-2,2,-9,10,10,7,6,1,-3,7,-3,-8,-1,4,-9,7,-7,5,-3,-5,4,5,6,-7,10,9,-10,6,-1,3,7,3,-10,-10,-1,5,9,-7,-8,5,8,-3,2,-10,-8,-5,6,2,6,8,-9,5,7,-4,-6,-2,3,-5,-5,-10,-1,-9,-2,-2,5,6,-4,-3,-4,-3,3,9,1,3,-10,-8,-5,-7,-9,5,-8,7,3,1,6,10,-1,7,2,9,-10,-4,-5,-4,-1,-10,2,-2,-7,2,9,5,10,4,-4,5,-10,-1,-3,1,3,-4,-9,10,9,3,6,10,2,8,-6,9,6,-3,4,5,-7,4,3,-4,-6,10,5,-7,-3,2,-2,7,1,-8,-8,-6,-10,-1,-4,7,3,3,-9,-4,7,-4,-9,8,-3,-6,-9,-5,3,-6,-2,9,2,3,4,4,5,2,-8,-3,9,3,-4,-1,-6,-5,9,6,-6,5,-6,3,6,5,-8,-7,8,6,-2,-8,-1,-9,-7,-4,-5,4,7,-5,3,-8,-8,7,-9,-7,-8,-9,10,-3,-4,1,-7,3,10,-8,-7,3,5,3,-3,-5,7,-3,-4,3,1,-9,9,-4,-9,-4,-1,4,-9,10,-7,-4,-8,3,-1,-2,-2,-3,-5,10,9,2],[10,-6,3,2,10,8,3,2,10,8,-8,-3,-10,-7,-6,9,-7,7,-10,3,3,7,-3,-9,4,-4,-10,5,7,-9,3,1,10,1,4,-7,5,4,5,-8,-3,-3,-7,-3,10,-9,7,-4,-7,8,-1,10,-10,-2,8,-6,-2,3,7,6,-9,4,-7,4,7,5,6,-4,10,3,-7,8,-2,-1,-1,8,-3,8,3,6,-6,8,8,10,7,5,-6,5,8,-7,-4,8,7,1,-10,10,8,9,9,2,-5,-1,-2,9,4,-8,2,10,-4,1,-6,1,8,-9,-1,4,10,9,4,3,-5,-8,6,6,9,-5,10,-8,-8,-5,10,5,5,-3,1,8,-4,2,-6,-2,-8,1,-5,-6,8,9,3,7,7,8,3,-3,6,-8,4,9,-1,9,9,-8,-9,6,-3,1,-2,-8,-6,-3,4,7,5,9,-4,3,-4,-4,-10,-6,-3,4,7,-2,1,-5,1,5,8,2,-2,9,8,10,2,-2,4,-10,-8,-4,-8,-7,3,-4,6,2,3,-6,5,-8,6,1,7,-9,-4,7,-3,10,6,6,-10,-10,2,-3,-5,-3,2,-1,5,-6,-4,-10,5,3,-4,3,-7,-8,-2,3,3,-8,-10,-3,-10,6,10,-1,6,8,10,7,-6,-4,5,6,5,-2],[-5,-2,4,9,3,-10,-1,-2,-2,8,-3,6,2,-7,-8,-4,4,9,5,1,-5,1,-9,-9,-4,-9,-9,-7,9,-10,3,-1,1,4,-8,-5,5,-3,1,-7,8,1,1,10,2,-8,-5,5,-10,5,-3,3,8,-4,7,-1,-7,2,-10,7,-2,8,-3,7,-1,1,3,-4,1,8,-1,-1,-1,6,5,3,8,7,6,5,4,-3,-2,-8,9,1,6,6,-4,1,6,7,9,7,5,3,10,8,7,6,-1,5,8,-7,6,2,-3,-7,-2,-8,-6,8,-10,-9,2,2,2,-3,1,-1,-9,8,-1,-6,9,1,6,-5,-6,3,10,1,3,10,-3,8,5,6,2,10,6,9,1,-6,8,2,5,10,7,-1,-3,6,6,6,4,1,7,1,4,4,-7,2,2,-9,3,1,8,6,9,-3,-7,-4,4,4,-5,2,9,-5,5,1,-5,-4,2,-8,-1,6,3,6,-5,5,-1,1,10,-10,-1,3,-3,-8,8,-6,7,10,-1,-9,-7,6,1,9,-3,-6,-9,-10,-7,-9,-4,-5,8,3,2,-6,6,8,-9,-1,-5,7,-6,-8,7,10,-4,-4,-2,2,1,-4,7,-6,-10,-9,4,1,-4,2,8,-5,-9,-5,-8,-7,-2,-7,5,-7,2,2],[-3,5,3,1,1,6,-6,1,7,-2,8,-9,-5,-10,4,3,8,-7,5,-4,7,-8,-10,-7,-6,-7,-10,-9,-3,-4,-4,4,-2,5,-2,-8,1,-10,-5,-10,-7,7,-3,4,9,3,-4,-7,10,6,5,3,-9,8,1,5,7,7,10,6,-9,5,7,-10,6,-1,9,6,6,-10,-4,-4,8,-10,3,10,-6,5,-4,2,-8,-10,8,5,-2,10,-1,-6,8,-9,-4,2,3,5,2,-9,2,-9,5,-4,-10,-2,1,-4,-6,1,-4,-3,-2,-6,6,7,5,6,-2,7,-7,5,-7,-8,-3,-4,-3,4,5,-2,-7,1,-4,2,-9,8,-7,3,-1,8,9,-1,-1,10,6,9,8,5,-6,6,7,-1,-6,-8,-3,-10,-8,-7,-7,5,8,9,5,-9,-3,6,8,4,-2,-2,-7,-9,5,-6,-4,8,-6,-9,-4,-1,3,7,-7,-7,1,3,-2,-7,-10,-1,-5,-10,7,1,10,-8,-3,6,6,-6,5,-7,4,5,-6,-2,-7,-1,4,6,5,-6,-9,-8,-8,-3,6,1,3,-7,4,9,4,4,3,-1,-5,7,-1,-10,9,-1,3,-6,10,9,-5,-3,-10,6,-8,2,-5,-9,5,-5,-3,1,8,4,3,10,-2,6,10,7,-8,-3,-9,-9]], dtype = "uint16")#candidate|17620|(4, 256)|const|uint16
call_17618 = relay.TupleGetItem(func_13911_call(relay.reshape(const_17619.astype('int32'), [1, 12, 4]), relay.reshape(const_17620.astype('uint16'), [1024,]), relay.reshape(call_17599.astype('float32'), [1, 945]), ), 1)
call_17621 = relay.TupleGetItem(func_13915_call(relay.reshape(const_17619.astype('int32'), [1, 12, 4]), relay.reshape(const_17620.astype('uint16'), [1024,]), relay.reshape(call_17599.astype('float32'), [1, 945]), ), 1)
var_17625 = relay.var("var_17625", dtype = "float32", shape = (945,))#candidate|17625|(945,)|var|float32
bop_17626 = relay.logical_xor(const_17600.astype('uint16'), relay.reshape(var_17625.astype('uint16'), relay.shape_of(const_17600))) # shape=(945,)
output = relay.Tuple([call_17597,bop_17603,call_17618,const_17619,const_17620,bop_17626,])
output2 = relay.Tuple([call_17598,bop_17606,call_17621,const_17619,const_17620,bop_17626,])
func_17633 = relay.Function([var_17625,], output)
mod['func_17633'] = func_17633
mod = relay.transform.InferType()(mod)
mutated_mod['func_17633'] = func_17633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17634 = relay.var("var_17634", dtype = "float32", shape = (945,))#candidate|17634|(945,)|var|float32
func_17633_call = mutated_mod.get_global_var('func_17633')
call_17635 = func_17633_call(var_17634)
output = call_17635
func_17636 = relay.Function([var_17634], output)
mutated_mod['func_17636'] = func_17636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17056_call = mod.get_global_var('func_17056')
func_17057_call = mutated_mod.get_global_var('func_17057')
call_17687 = relay.TupleGetItem(func_17056_call(), 2)
call_17688 = relay.TupleGetItem(func_17057_call(), 2)
func_1556_call = mod.get_global_var('func_1556')
func_1559_call = mutated_mod.get_global_var('func_1559')
const_17704 = relay.const([-8.870073,0.180167,-2.019680,-7.472181,-2.727150,4.315648,7.384257,-0.388509,-6.844504,1.254348,0.719213,-5.248467,-5.919329,2.687511,1.725584,9.297751,1.763750,0.981735,3.353156,-0.175443,-7.230407,6.385087,-9.643001,8.890690,7.744753,-8.339883], dtype = "float32")#candidate|17704|(26,)|const|float32
call_17703 = relay.TupleGetItem(func_1556_call(relay.reshape(const_17704.astype('float32'), [1, 13, 2])), 0)
call_17705 = relay.TupleGetItem(func_1559_call(relay.reshape(const_17704.astype('float32'), [1, 13, 2])), 0)
uop_17708 = relay.acos(call_17703.astype('float64')) # shape=(1, 13, 2)
uop_17710 = relay.acos(call_17705.astype('float64')) # shape=(1, 13, 2)
output = relay.Tuple([call_17687,const_17704,uop_17708,])
output2 = relay.Tuple([call_17688,const_17704,uop_17710,])
func_17713 = relay.Function([], output)
mod['func_17713'] = func_17713
mod = relay.transform.InferType()(mod)
mutated_mod['func_17713'] = func_17713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17713_call = mutated_mod.get_global_var('func_17713')
call_17714 = func_17713_call()
output = call_17714
func_17715 = relay.Function([], output)
mutated_mod['func_17715'] = func_17715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16975_call = mod.get_global_var('func_16975')
func_16976_call = mutated_mod.get_global_var('func_16976')
call_17744 = relay.TupleGetItem(func_16975_call(), 0)
call_17745 = relay.TupleGetItem(func_16976_call(), 0)
output = relay.Tuple([call_17744,])
output2 = relay.Tuple([call_17745,])
func_17753 = relay.Function([], output)
mod['func_17753'] = func_17753
mod = relay.transform.InferType()(mod)
mutated_mod['func_17753'] = func_17753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17753_call = mutated_mod.get_global_var('func_17753')
call_17754 = func_17753_call()
output = call_17754
func_17755 = relay.Function([], output)
mutated_mod['func_17755'] = func_17755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17463_call = mod.get_global_var('func_17463')
func_17465_call = mutated_mod.get_global_var('func_17465')
call_17793 = func_17463_call()
call_17794 = func_17463_call()
output = relay.Tuple([call_17793,])
output2 = relay.Tuple([call_17794,])
func_17815 = relay.Function([], output)
mod['func_17815'] = func_17815
mod = relay.transform.InferType()(mod)
output = func_17815()
func_17816 = relay.Function([], output)
mutated_mod['func_17816'] = func_17816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17463_call = mod.get_global_var('func_17463')
func_17465_call = mutated_mod.get_global_var('func_17465')
call_17843 = func_17463_call()
call_17844 = func_17463_call()
func_11690_call = mod.get_global_var('func_11690')
func_11695_call = mutated_mod.get_global_var('func_11695')
const_17874 = relay.const([6,4,1,-5,-10,-2,-9,3,6,-8,1,9,-3,-10,-4,-7,-6,-2,-7,-7,8,-5,-4,10,4,-1,9,4,-10,-2,7,3,-2,-2,1,-8,-1,-9,-1,-5,8,-1,7,-8,-10,-1,2,10,-10,7,-4,-2,9,-9,10,-5,-3,5,4,5,4,10,-10,3,5,-3,4,3,9,-4,-8,-7,-7,-1,6,6,-1,-9,7,5,2,10,-3,1,-6,1,4,-5,10,4,1,7,6,-5,8,4,7,-5,-8,-4,-1,-8,-3,-8,8,-1,1,1,6,10,-7,3,10,-4,-4,5,-3,2,6,1,3,-3,3,-4,9,2,-10,-9,3,-3,4,-4,-10,5,8,10,-9,8,6,-1,-7,10,-10,-10,-4,1,8,3,2,4,3,3,-6,5,2,6,3,-7,-6,-5,7,-6,-1,-2,8,-3,1,-4,7,-6,9,8,-9,4,-1,4,5,2,-1,-9,4,2,7,10,-9,-3,-10,10,-8,-5,-3,7,-10,-2,-5,2,2,-5,-1,-3,1,9,-8,1,1,-5,4,2,10,7,-4,7,2,-5,6,3,5,-9,9,9,7,-6,-7,-6,-2,-4,-1,-2,-2,-8,-4,-6,-5,2,-6,-5,8,-5,-10,1,6,-6,-6,-4,5,7,-4,-10,7,-2,6,7,1,-8,6,2,-3,-1,-9,9,8,5,8,-3,-1,9,4,-1,1,5,9,9,6,-2,6,10,7,8,-5,10,5,3,-7,-6,6,-6,-9,-8,5,-1,-3,-7,-8,-8,7,7,9,-3,6,7,-1,6,7,6,-6,-5,7,1,-10,-6,-9,10,5,-6,-5,1,-7,-5,-3,-6,-7,7,-6,7,9,2,-8,-8,8,-2,-9,8,-1,10,-5,2,9,3,-2,-1,4,9,-8,5,-2,-10,3,7,-10,-8,5,-4,-3,-2,-9,-6,-8,7,3,-5,-2,-6,-10,8,9,-6,10,-1,-9,8,7,1,8,-3,-1,-5,-1,7,-3,-3,1,-9,1,3,-2,-8,-4,4,8,-2,8,-1,8,2,2,-4,-5,5,-2,6,9,4,-4,5,8,10,-5,-4,-10,4,2,-5,2,4,8,1,5,-1,4,8,3,7,-10,1,-7,-10,-5,-7,6,-3,3,-4,-9,-5,10,4,-3,1,10,-3,-9,8,-1,2,-6,2,1,6,-10,1,-6,1,-4,5,6,-2,5,10,-5,-3,-9,10,10,10,-9,-10,-7,-8,-3,6,-3,4,-10,-3,-7,6,1,8,2,-3,-10,-9,2,-8,2,-4,-4,-4,3,1,-6,-9,-3,-10,6,7,4,3,-5,3,-6,-2,-7,7,6,1,-3,8,-7,10,-2,9,4,4,-4,-7,-5,-1,7,-4,3,2,-8,-3,-9,-10,1,6,3,7,8,6,-4,8,2,-4,-9,-3,9,2,9,8,1,-9,6,2,3,7,-4,1,-7,2,-3,3,-3,3,-8,3,-7,-6,10,4,5,-1,6,-4,8,1,1,5,-2,5,9,9,-2,-8,-10,-8,-6,3,-10,7,3,9,-5,-7,5,4,3,2,8,-10,4,3,-6,2,-3,3,-8,-9,1,7,-9,-1,-6,-8,5,-3,5,-9,-4,6,-1,-1,-3,1,6,1,-2,-8,7,1,5,3,1,2,4,-1,6,5,2,-5,-7,-4,1,5,9,2,-9,-7,-10,4,-4,10,-8,-3,-2,-9,-7,5,-6,-5,-6,2,-5,-6,5,-8,6,2,2,4,-4,-2,5,-8,-10,5,-2,-3,-3,2,10,8,-8,10,6,4,7,2,5,-1,2,1,3,3,-3,-6,4,9,-8,2,2,-5,-1,-1,6,-1,7,4,-6,-8,9,9,1,5,-8,-3,-2,9,5,2,-1,-10,5,-10,9,7,3,-3,-6,2,-5,2,3,-1,-3,-10,5,3,-1,8,-1,10,-3,-6,1,-10,-5,4,-6,-6,7,5,5,-10,1,8,5,5,1,4,9,10,6,2,6,-3,8,-5,-6,-1,2,-8,-7,4,4,2,10,9,-6,10,-3,-7,10,3,-6,4,4,-7,-7,-1,-7,-4,4,4,6,-4,-6,-7,-10,6,-5,-5,2,-9,3,10,2,-8,9,8,8,4,10,2,-4,-7,-9,-7,6,-2,4,8,7,-4,-10,2,4,-1,9,-6,4,-1,8,5,-2,3,-10,3,9,-4,10,6,-1,-8,-2,3,-10,10,2,3,4,-3,-7,2,4,4,1,5,6,-4,8,4,-2,7,10,2,-6,-8,9,-10,7,6,1,-2,5,-5,1,-4,-4,1,-2,9,7,-2,9,-9,5,6,9,5,2,-8,9,-10,-4,8,3,4,7,6,10,-4,-3,3,8,7,-9,-5,-6,3,7,5,-9,9,7,-1,3,3,6,9,5,-4,-10,3,5,5,7,1,9,3,-5,4,-2,3,7,1,-7,-8,-5,2,-9,1,7,4,-2,-3,-1,-5,5,10,2,-4,8,8,5,5,-7,9,-10,9,10,-1,6,-4,5,-3,-9,10,10,-5,5,8,8,-5,8,2,-3,-9,-8,2,-10,4,3,-9,9,-10,3,6,3,10,5,-1,5,-9,-6,-10,-9,6,-6,7,-8,-2,2,4,9,-7,8,-5,10,9,7,10,2,8,-4,3,-1,-5,-3,8,-3,-8,-3,-5,7,6,-1,-9,-6,-1,1,2,-1,5,-6,-7,8,-9,8,-3,-7,-8,7,3,6,4,10,-9,3,-6,-7,-7,2,-5,1,5,8,8,3,-1,-5,-6,10,-7,-3,9,10,4,-1,2,10,-10,3,6,-9,-6,-9,-9,-10,-2,-3,-3,-7,5,-10,10,4,-8,7,-2,-8,-1,1,-8,8,5,10,-4,-7,-5,-4,6,-6,-5,-6,-9,7,1,-10,2,8,-9,5,5,10,10,-4,4,-9,-3,7,-9,-2,6,-1,9,-6,-8,-2,5,-1,-6,1,5,8,-5,9,-3,6,2,8,7,-2,4,-5,5,-6,-3,2,9,7,7,9,7,-9,-3,2,10,-4,-7,-5,-7,5,10,-9,7,2,-9,6,-6,-7,-2,8,3,8,1,4,6,9,9,4,3,2,7,-10,-4,6,5,10,6,-10,1,6,-5,1,2,-10,1,8,1,-5,-2,1,-4,5,-6,10,1,5,10,2,3,-8,-5,6,-4,-10,-1,6,-1,7,8,-7,3,8,7,-9,3,7,-4,5,2,-4,8,10,1,-7,7,1,-3], dtype = "int8")#candidate|17874|(1232,)|const|int8
const_17875 = relay.const([-9,2,-2,2,-10,3,4,-8,-7,10,-8,-8,-10,-8,8,-4,-2,8,5,-9,9,-10,-9,-5,-7,-6,-3,-1,-5,-7,4,9,10,-9,9,4,2,-3,2,-1,7,7,4,-5,9,-4,-5,-1,2,4,2,1,3,6,6,-6,5,-2,-3,9,-9,5,4,1,-7,-9,-4,-4,-8,4,-10,-4,-6,-3,3,1,5,-8,-3,6,5,-1,-8,7,5,-10,4,9,2,8,-6,-9,-4,-9,-7,9,10,2,2,6,1,-2,1,4,5,-1,1,-1,9,4,-3,-8,10,3,-9,1,4,-6,7,10], dtype = "int8")#candidate|17875|(120,)|const|int8
var_17876 = relay.var("var_17876", dtype = "int32", shape = (936,))#candidate|17876|(936,)|var|int32
call_17873 = relay.TupleGetItem(func_11690_call(relay.reshape(const_17874.astype('int8'), [16, 7, 11]), relay.reshape(const_17875.astype('int8'), [5, 8, 3]), relay.reshape(var_17876.astype('int32'), [2, 468]), ), 2)
call_17877 = relay.TupleGetItem(func_11695_call(relay.reshape(const_17874.astype('int8'), [16, 7, 11]), relay.reshape(const_17875.astype('int8'), [5, 8, 3]), relay.reshape(var_17876.astype('int32'), [2, 468]), ), 2)
func_11348_call = mod.get_global_var('func_11348')
func_11353_call = mutated_mod.get_global_var('func_11353')
const_17883 = relay.const([7.955724,0.289560,6.130867,-2.850924,-1.391590,-8.449153,9.956048,-8.957107,-4.903010,-7.443799,-8.445768,-5.911921,-7.826043,-2.607042,7.352238,-4.784242,-4.209945,-2.167168,-8.318012,-0.911928,9.446031,-5.413798,-2.676994,2.051056,-3.102525,-1.830642,4.871355,-3.656077,7.282826,6.848258,2.857969,-3.160673,2.189461,3.799848,1.929884,6.379521,-9.786000,2.685948,-5.386469,8.083507,-1.635142,9.505447,2.474811,3.570837,-8.380447,8.832986,-4.499274,5.555322,6.035677,-9.953861,-0.374161,2.889573,7.763233,3.590729,8.497502,-8.583847,5.406105,9.860245,1.610489,5.584620], dtype = "float64")#candidate|17883|(60,)|const|float64
var_17884 = relay.var("var_17884", dtype = "float64", shape = (1800,))#candidate|17884|(1800,)|var|float64
var_17885 = relay.var("var_17885", dtype = "float32", shape = (11, 49))#candidate|17885|(11, 49)|var|float32
call_17882 = relay.TupleGetItem(func_11348_call(relay.reshape(const_17883.astype('float64'), [1, 4, 15]), relay.reshape(var_17884.astype('float64'), [450, 4]), relay.reshape(var_17885.astype('float32'), [539,]), ), 1)
call_17886 = relay.TupleGetItem(func_11353_call(relay.reshape(const_17883.astype('float64'), [1, 4, 15]), relay.reshape(var_17884.astype('float64'), [450, 4]), relay.reshape(var_17885.astype('float32'), [539,]), ), 1)
bop_17891 = relay.bitwise_and(call_17882.astype('int64'), relay.reshape(var_17885.astype('int64'), relay.shape_of(call_17882))) # shape=(539,)
bop_17894 = relay.bitwise_and(call_17886.astype('int64'), relay.reshape(var_17885.astype('int64'), relay.shape_of(call_17886))) # shape=(539,)
func_11348_call = mod.get_global_var('func_11348')
func_11353_call = mutated_mod.get_global_var('func_11353')
call_17895 = relay.TupleGetItem(func_11348_call(relay.reshape(const_17883.astype('float64'), [1, 4, 15]), relay.reshape(var_17884.astype('float64'), [450, 4]), relay.reshape(call_17882.astype('float32'), [539,]), ), 2)
call_17896 = relay.TupleGetItem(func_11353_call(relay.reshape(const_17883.astype('float64'), [1, 4, 15]), relay.reshape(var_17884.astype('float64'), [450, 4]), relay.reshape(call_17882.astype('float32'), [539,]), ), 2)
func_2145_call = mod.get_global_var('func_2145')
func_2149_call = mutated_mod.get_global_var('func_2149')
var_17907 = relay.var("var_17907", dtype = "float64", shape = (168,))#candidate|17907|(168,)|var|float64
var_17908 = relay.var("var_17908", dtype = "uint16", shape = (1024,))#candidate|17908|(1024,)|var|uint16
call_17906 = relay.TupleGetItem(func_2145_call(relay.reshape(var_17907.astype('float64'), [14, 3, 4]), relay.reshape(var_17908.astype('uint16'), [1024,]), ), 3)
call_17909 = relay.TupleGetItem(func_2149_call(relay.reshape(var_17907.astype('float64'), [14, 3, 4]), relay.reshape(var_17908.astype('uint16'), [1024,]), ), 3)
output = relay.Tuple([call_17843,call_17873,const_17874,const_17875,var_17876,const_17883,var_17884,bop_17891,call_17895,call_17906,var_17907,var_17908,])
output2 = relay.Tuple([call_17844,call_17877,const_17874,const_17875,var_17876,const_17883,var_17884,bop_17894,call_17896,call_17909,var_17907,var_17908,])
func_17913 = relay.Function([var_17876,var_17884,var_17885,var_17907,var_17908,], output)
mod['func_17913'] = func_17913
mod = relay.transform.InferType()(mod)
mutated_mod['func_17913'] = func_17913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17913_call = mutated_mod.get_global_var('func_17913')
var_17915 = relay.var("var_17915", dtype = "int32", shape = (936,))#candidate|17915|(936,)|var|int32
var_17916 = relay.var("var_17916", dtype = "float64", shape = (1800,))#candidate|17916|(1800,)|var|float64
var_17917 = relay.var("var_17917", dtype = "float32", shape = (11, 49))#candidate|17917|(11, 49)|var|float32
var_17918 = relay.var("var_17918", dtype = "float64", shape = (168,))#candidate|17918|(168,)|var|float64
var_17919 = relay.var("var_17919", dtype = "uint16", shape = (1024,))#candidate|17919|(1024,)|var|uint16
call_17914 = func_17913_call(var_17915,var_17916,var_17917,var_17918,var_17919,)
output = call_17914
func_17920 = relay.Function([var_17915,var_17916,var_17917,var_17918,var_17919,], output)
mutated_mod['func_17920'] = func_17920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17939 = relay.var("var_17939", dtype = "float32", shape = (7, 15, 11))#candidate|17939|(7, 15, 11)|var|float32
uop_17940 = relay.atanh(var_17939.astype('float32')) # shape=(7, 15, 11)
func_10521_call = mod.get_global_var('func_10521')
func_10523_call = mutated_mod.get_global_var('func_10523')
const_17943 = relay.const([-2.961456,-7.137905,-1.145475,-4.464836,-2.829180,-0.567239,8.110109,4.984446,-6.220735,3.562280,-7.104145,1.568929,9.753780,-7.133501,-1.471589,7.541590,-6.912636,-3.418547,-8.714302,2.404368,4.918046,-5.846574,7.898591,-4.811533,-4.687693,8.720911,-2.893206,-4.157825,-5.492784,-8.679606,9.433855,0.756034,9.256654,-7.232595,-9.417229,8.940768,6.573475,4.267554,9.695160,3.332401,3.984741,-6.095558,4.860076,6.982182,4.090747,-4.861851,3.118069,-2.013486,7.148607,9.322645,2.784560,-5.080679,-7.390854,1.701773,3.054502,1.798552,-3.729325,-2.466357,-3.908275,4.014874,1.787985,-6.329215,-7.904323,-8.087494,6.035306,8.357510,-5.035354,8.008266,2.585751,-8.077994,1.434967,6.214097,2.475021,-6.717858,-5.998811,8.658013,1.715515,-9.814364,3.937726,-3.478091,-6.192230,2.252918,8.548858,4.554733,9.439780,7.815493,2.529981,-9.256244,-9.115099,-3.240526,7.016657,-9.516828,0.318005,-6.191151,5.113694,0.217531,-0.398619,-5.212580,-0.099823,0.347612,4.371412,-8.332580,5.603278,6.118880,4.369741,-6.800998,-8.398467,-2.239243,-4.063716,-0.576907,5.880922,1.903739,-2.504449,4.632341,-6.683033,-7.531229,7.952038,-9.954746,-4.317724,-5.989445,-7.993769,-6.887983,6.770570,-2.047500,6.157081,-9.686182,6.705622,-1.342316,4.531963,-6.219546,-9.813231,-3.447428,8.802467,9.364111,-3.356439,-5.613841,-9.586086,4.587577,3.126743,9.649607,-2.004718,2.235787,-8.569391,1.363155,4.946060,6.350244,1.721545,8.393938,-7.545542,-5.422341,-8.184824,1.648584,5.054638,-6.293423,4.241547,1.099139,8.685686,2.134818,-3.064560,-0.354540,-3.006772,-4.557013,4.978426,-3.655682,-5.288760,-3.647272,6.670942,1.434328,3.013870,4.440226,-8.785700,-8.375794,4.069173,3.050859,3.095693,9.208635,0.399850,5.724930,4.650271,-7.870306,-7.279869,-2.999749,6.107076,-0.473125,-7.817927,4.400561,-2.295552,-0.046761,6.889113,2.827450,5.765998,-2.218724,-1.582708,2.190173,5.224053,6.756871,5.151177,-0.671629,-4.690532,8.260550,-8.581722,8.890302,-8.596174,7.099617,3.253350,-7.528523,0.213544,4.458868,-0.601637,-3.541062,-4.199380,9.955306,8.984094,-8.997997,-6.435525,-1.188930,-0.984160,2.345437,-5.450736,-1.907784,-6.428313,-1.757767,1.510586,4.210866,2.879476,-0.943505,-7.137459,8.817225,1.650987,4.054358,4.782925,-8.534134,7.839724,-7.501724,-0.863374,1.503431,-0.529912,7.646554,5.456363,8.016180,-1.884972,-4.224837,-6.928744,-9.183765,-0.471121,2.557584,-6.548181,1.158017,-7.449627,9.244025,3.194761,5.088926,-0.243688,7.636846,5.555930,-2.062031,-8.037865,-7.628946,-3.210772,-1.234514,-8.663492,-6.671921,-6.697499,-5.404537,-7.147566,5.299166,-6.597853,3.970767,0.928980,-1.145691,6.421812,-3.468862,-6.468598,-4.519911,-2.848290,1.310932,1.380281,4.000176,1.068760,-4.796307,9.431241,1.381007,-2.359941,-6.038601,-8.700603,-1.499703,-5.947784,0.873118,-4.988276,6.641549,9.914367,6.822114,2.772071,-9.454459,9.148746,-9.003662,-3.726613,-3.441991,-7.005200,0.776878,-1.975799,-2.000155,-2.356865,4.403955,-8.630564,7.973491,3.158004,-4.667676,1.491278,9.071106,3.142423,8.860344,-8.230550,-5.223967,3.434090,2.976915,6.687736,-7.360044,5.498252,-2.220928,-0.397558,4.873470,0.551452,-2.612966,-3.993805,0.159259,1.161105,-5.303419,-6.787299,-2.705550,-6.965469,4.939349,-9.417414,0.709869,8.130169,2.599577,-0.266965,7.505343,-2.189056,-2.697232,-6.343991,-1.325860,8.142696,4.530696,7.969024,0.325914,9.788375,1.812055,-6.771739,8.527236,6.728925,4.701571,-4.218997,8.133628,2.841639,3.011774,1.278867,2.483407,-7.257917,-7.580462,2.189803,1.796640,7.642507,-2.930501,-0.658744,3.873588,-0.345451,2.152412,-3.998452,2.683520,-6.367072,9.597050,-1.907913,-2.574987,5.069411,-2.242449,-1.108012,0.937899,-8.517326,3.605927,1.626402,-7.122397,-3.428682,-6.645317,-6.092003,-0.365957,1.905897,-5.066207,-4.949404,-0.140970,-7.437970,-0.704276,2.276991,-8.677542,4.930649,-9.943758,-6.586737,-0.277066,-7.029616,0.116840,-9.838468,0.176661,0.170354,2.821056,8.130974,4.725202,-7.219320,-0.901743,2.014357,-7.867660,5.253140,-8.310304,8.454626,-7.334742,8.318139,9.288274,6.633771,3.926851,-8.799442,-0.741147,9.249999,5.092356,-4.164368,4.037121,-2.669180,-3.460553,-7.371193,-0.256106,-5.293247,1.701988,-6.542312,3.619590,3.407476,5.187506,-2.880229,3.286661,4.145836,5.510900,9.070917,-8.859263,-8.899775,0.672239,6.405510,6.227908,-3.927996,3.472747,6.808324,-4.931126,-7.221531,-3.369220,2.012682,-3.468191,6.716699,-0.687353,-6.272392,-1.079087,-5.853845,2.578916,1.442337,3.707788,9.097365,8.056437,3.935533,1.676497,9.802943,-6.568990,-3.140481,7.164001,3.983106,-1.852448,-4.282920,-3.482554,-3.230232,-0.470797,-1.589706,8.304784,2.493027,-6.111150,-9.508428,-0.185289,-9.237936,-7.160281,5.443311,-7.016018,-0.882487,-8.600300,3.839910,4.159476,-4.951421,-0.644748,9.448093,-0.703581,-8.136491,9.604541,-6.511159,-0.832646,8.560032,9.541480,-9.478720,6.205770,-8.083802,-2.514512,-8.439683,0.199258,4.649009,-4.151741,9.101626,4.506238,7.543344,-1.553706,-2.643738,-6.692473,-6.639521,-8.412684,3.657495,3.838727,0.009163,-2.091206,5.117891,-7.278906], dtype = "float32")#candidate|17943|(520,)|const|float32
call_17942 = func_10521_call(relay.reshape(const_17943.astype('float32'), [5, 13, 8]))
call_17944 = func_10521_call(relay.reshape(const_17943.astype('float32'), [5, 13, 8]))
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
var_17947 = relay.var("var_17947", dtype = "float32", shape = (945,))#candidate|17947|(945,)|var|float32
call_17946 = relay.TupleGetItem(func_709_call(relay.reshape(var_17947.astype('float32'), [15, 9, 7])), 0)
call_17948 = relay.TupleGetItem(func_712_call(relay.reshape(var_17947.astype('float32'), [15, 9, 7])), 0)
uop_17961 = relay.atan(var_17939.astype('float64')) # shape=(7, 15, 11)
uop_17972 = relay.sqrt(uop_17961.astype('float32')) # shape=(7, 15, 11)
func_17187_call = mod.get_global_var('func_17187')
func_17189_call = mutated_mod.get_global_var('func_17189')
call_17974 = func_17187_call()
call_17975 = func_17187_call()
output = relay.Tuple([uop_17940,call_17942,const_17943,call_17946,var_17947,uop_17972,call_17974,])
output2 = relay.Tuple([uop_17940,call_17944,const_17943,call_17948,var_17947,uop_17972,call_17975,])
func_17976 = relay.Function([var_17939,var_17947,], output)
mod['func_17976'] = func_17976
mod = relay.transform.InferType()(mod)
var_17977 = relay.var("var_17977", dtype = "float32", shape = (7, 15, 11))#candidate|17977|(7, 15, 11)|var|float32
var_17978 = relay.var("var_17978", dtype = "float32", shape = (945,))#candidate|17978|(945,)|var|float32
output = func_17976(var_17977,var_17978,)
func_17979 = relay.Function([var_17977,var_17978,], output)
mutated_mod['func_17979'] = func_17979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17981 = relay.var("var_17981", dtype = "float64", shape = (6, 10, 10))#candidate|17981|(6, 10, 10)|var|float64
var_17982 = relay.var("var_17982", dtype = "float64", shape = (6, 10, 10))#candidate|17982|(6, 10, 10)|var|float64
bop_17983 = relay.divide(var_17981.astype('float64'), relay.reshape(var_17982.astype('float64'), relay.shape_of(var_17981))) # shape=(6, 10, 10)
uop_18000 = relay.log(var_17981.astype('float32')) # shape=(6, 10, 10)
uop_18014 = relay.atanh(uop_18000.astype('float64')) # shape=(6, 10, 10)
func_11690_call = mod.get_global_var('func_11690')
func_11695_call = mutated_mod.get_global_var('func_11695')
const_18017 = relay.const([2,-8,-3,3,-2,9,-8,6,2,3,-5,3,7,-4,-1,-6,-3,1,-9,-5,-9,-10,5,-8,-5,-1,2,-10,-2,-9,9,7,-2,-2,-1,2,1,6,10,-5,5,-5,9,-7,2,-5,-3,-5,-9,6,3,-1,-1,-2,-2,-8,-2,3,10,4,8,-3,10,-8,4,-2,-1,1,1,-5,-10,-2,-5,6,7,-7,9,-7,-9,-9,-8,-10,-5,1,6,-9,-8,-3,-7,8,10,10,7,-10,2,-9,-2,9,4,3,5,-8,-4,6,1,5,3,-3,-3,-7,4,-5,-7,-4,-6,10,-1,-6,1,-6,8,-4,-5,3,7,2,8,-10,2,7,-2,-9,7,-8,7,-9,-5,10,-7,7,3,-7,-7,-7,2,-8,10,7,-3,4,-9,9,-5,4,-1,7,-2,-4,-3,1,4,-2,-7,2,6,-1,10,-8,10,8,-5,-3,1,-8,-10,-2,6,-1,-4,2,2,4,-5,6,4,-5,8,6,7,4,2,-4,-1,-1,7,-5,-9,10,9,1,1,-2,6,-8,1,10,1,2,-8,-7,8,-3,-10,3,10,-5,-10,2,5,8,-4,-1,-4,-9,8,7,-9,-7,7,10,-5,-10,4,-10,-4,6,1,-4,-2,5,-8,-8,-7,8,6,-1,5,-6,3,-7,-6,-4,-10,-2,-1,4,1,8,6,10,-8,-1,-4,3,2,-4,-4,-7,-9,9,-6,-1,5,-5,-9,-3,7,9,2,9,-1,4,3,2,-10,2,-1,1,4,7,2,-10,5,-10,-1,-2,-2,-8,10,7,-8,-4,-3,7,4,1,-3,4,-10,6,5,-4,6,4,-1,-4,1,1,6,1,1,3,-5,-3,-5,-8,7,-9,-3,9,-5,6,4,2,-5,-7,9,2,10,10,-6,-8,-10,8,-2,-1,1,-7,-5,2,-1,6,-10,3,6,5,-4,7,-2,1,-9,2,-10,-2,5,-4,-4,6,3,-5,-3,-10,-5,-2,9,10,-4,9,-3,-10,6,7,-6,-5,-2,-7,1,3,4,1,-9,-3,-5,-8,5,7,1,3,-8,-8,9,9,-3,-5,10,-10,9,1,-8,-2,-6,-4,6,-8,-8,-5,10,-6,-8,9,7,6,-5,-9,7,-3,4,-4,9,-5,6,3,-5,10,7,1,1,9,-6,6,-2,10,8,-6,-6,1,10,10,2,9,9,3,-7,3,-1,-9,-8,6,-3,-3,3,10,8,9,10,-9,-7,-1,5,10,-5,-6,7,8,-6,6,-7,-3,6,6,9,5,8,-10,1,6,6,8,-5,3,9,1,6,2,-5,8,-4,9,10,-4,9,5,-1,1,1,-9,3,-6,-3,9,-7,-1,-1,-2,10,-9,5,4,-9,5,-7,10,-4,9,7,7,-6,-6,9,-7,3,7,2,-7,8,-2,-6,-7,1,8,-3,-3,-3,5,6,-2,7,-10,-5,-1,10,-8,-6,-7,-10,-6,-1,-3,7,-8,-1,5,-4,-7,1,-1,-1,-7,3,-3,-10,5,7,8,7,8,-10,6,-7,2,10,1,2,8,4,10,8,7,-3,-9,3,-6,2,7,-4,-9,4,-8,10,4,5,9,-9,-9,5,3,-7,3,1,-9,10,-3,-8,3,-7,3,10,7,2,2,-6,-5,3,10,-9,3,7,-6,-5,4,-5,-5,-2,-4,8,2,-10,7,-7,9,8,-9,-8,-1,-3,6,-5,-5,-3,1,-7,-5,2,-10,9,-6,3,-1,10,5,-10,-3,2,-1,-9,6,5,-2,-3,5,4,-8,-7,-10,-4,10,8,8,3,6,-2,-9,4,-2,-4,1,-8,-8,2,2,5,-10,7,-4,7,-4,2,4,3,-7,4,-8,6,7,-6,-6,1,3,-3,-8,-8,-9,-6,-8,-10,-7,-2,-7,10,8,5,6,-9,-5,7,3,8,6,7,-10,-1,-1,1,-3,4,-7,-5,-6,-4,-7,6,8,3,5,-2,-7,3,5,-6,7,10,-8,8,1,6,-5,-9,-4,1,-4,-4,5,7,-3,8,2,3,5,5,-5,6,-3,5,1,9,-8,-4,-2,10,-5,-3,-8,-8,-10,-1,-6,-7,3,-8,-9,-10,2,7,-9,7,-7,3,-9,-10,-6,5,9,-2,-5,9,-9,-10,-4,-3,6,-5,4,-10,-8,3,-5,-7,2,9,4,-3,8,2,-10,3,8,-1,-7,-5,-3,-1,7,-3,1,-8,1,-6,5,-10,-6,1,10,-4,4,4,-8,-6,-6,7,4,-10,7,3,-7,-6,-6,7,-10,-5,-2,2,5,-6,8,8,-9,6,-8,5,-1,-8,-8,5,6,2,2,-8,1,-9,9,8,8,3,4,1,1,-4,-2,6,-2,6,2,10,9,-2,-7,-6,6,-10,9,6,9,-8,-1,-3,-5,-5,-4,-10,-4,-3,3,-5,1,9,-7,10,7,10,-4,-10,-9,-8,2,8,-2,-7,10,-6,-7,1,-10,-9,2,-4,10,7,-1,-4,3,-6,-3,-2,5,4,-2,6,-7,-10,6,-5,-10,-10,5,1,-6,-7,-10,-1,-6,8,9,2,1,-5,8,3,-10,6,-7,-7,3,-3,2,1,9,8,3,2,-1,-1,6,-6,9,6,-8,2,-9,-6,8,-9,-7,5,-6,-6,-5,-8,2,-9,-6,8,10,-5,4,-9,9,9,4,7,-2,-7,-9,8,-8,2,-6,6,-8,-4,-4,-7,1,-8,2,5,8,9,-8,9,-7,-10,1,8,8,-4,-7,5,6,4,-1,-10,-2,6,-9,6,6,-7,-1,-6,7,9,-8,-3,-8,-2,6,9,4,-8,10,9,7,3,-10,-6,9,-2,-2,3,4,10,-1,9,-4,-10,-10,-10,-4,-4,-2,-5,10,7,-4,3,-8,-9,-3,6,-3,2,3,10,-7,-6,-9,-9,10,-10,-8,4,7,7,-10,-7,-7,-8,-3,2,5,8,-8,-2,6,-5,-6,-2,-10,2,10,-5,-8,-9,-3,10,8,-3,-6,-7,8,7,-8,-4,-8,10,-6,8,10,-5,-10,-1,3,-7,1,-1,7,-1,-1,-5,3,-8,10,3,3,3,10,-4,-9,4,-6,-9,7,9,-8,4,2,10,-9,-2,-10,-8,10,-5,-2,9,6,-2,-9,-8,7,-8,-5,1,-3,8,9,-4,-5,-5,10,4,3,6,9,9,-7,3,7,-7,8,-4,9,-3,8,3,4,-3,-5,1,4,-10,-6,4,6,4,7,10,-5,-2,2,3,5,5,5,-4,5,-10,6,8,5,7,-9], dtype = "int8")#candidate|18017|(1232,)|const|int8
var_18018 = relay.var("var_18018", dtype = "int8", shape = (120,))#candidate|18018|(120,)|var|int8
const_18019 = relay.const([-9,9,9,7,4,1,1,-1,-10,-4,2,-10,3,-5,3,5,6,-5,-8,10,-4,-9,6,-7,10,5,-3,10,-2,7,10,1,-5,-3,-9,-4,-2,8,-6,4,-6,-7,-4,5,3,-3,-5,1,3,5,-6,4,6,8,5,-10,-1,-2,-6,-2,10,-4,-2,-8,-10,6,6,4,2,-3,-3,9,-10,10,-9,-4,10,3,4,6,6,8,1,-1,-5,9,-9,-6,1,-6,-8,7,-10,-9,-4,6,6,10,-9,2,9,-4,10,-9,5,1,-8,3,-1,-10,-7,6,4,5,-9,9,-6,8,10,9,3,-1,8,-6,-6,7,7,-1,9,6,10,-8,6,-4,-3,4,-5,-4,-10,-4,-9,10,-4,6,-6,3,-8,2,-7,2,1,6,2,-9,-10,-9,-3,2,-1,-1,3,-2,-7,6,-1,3,-6,-8,-9,-1,9,6,10,-1,10,-7,-8,-3,3,6,-8,6,10,-2,-10,-5,-6,10,3,-8,-3,-6,-6,-5,-10,3,-2,2,4,10,-1,-2,8,-3,-3,-3,-8,9,-8,2,-7,-6,7,-2,5,4,9,-5,10,-9,10,1,-1,-3,5,6,2,1,-1,-2,-7,4,-4,4,-8,-7,4,-8,8,-3,9,-7,1,-2,-2,-1,-3,-4,8,9,2,-6,-3,9,-6,-6,-2,-5,2,-7,2,-5,5,-1,9,8,-7,-6,-1,-4,9,-1,5,-6,-7,-1,-1,5,-8,-10,8,6,4,-8,1,1,3,3,-10,-5,9,8,-4,7,-9,9,-5,-3,-9,4,-4,-9,7,-5,10,5,-7,3,-4,-5,7,10,-9,3,-5,-7,9,4,-10,4,10,-1,-2,10,5,1,-7,8,-4,-3,7,8,6,2,2,7,-5,8,-3,3,4,-1,-5,-7,9,7,-8,2,8,1,1,-9,6,-6,-8,8,3,2,-10,6,-7,-5,-10,10,-4,8,-8,-4,6,5,8,-5,5,-8,6,-6,9,-1,-2,-8,3,4,3,-8,-9,-5,6,-8,9,8,2,-10,7,1,-2,6,3,7,-7,6,-5,2,3,6,8,7,8,-2,-7,-4,1,4,-7,1,3,-9,10,-4,3,-5,2,4,9,6,-8,7,-10,5,-2,-3,-8,5,-6,-3,9,-4,3,-2,4,10,-8,-3,-10,6,-9,-6,1,-8,-10,-10,10,9,-1,-8,1,-9,7,-7,-2,-6,4,-9,5,4,10,-4,7,6,8,-3,1,8,-3,4,10,10,4,-10,9,-2,-7,9,-2,2,-6,9,-8,-5,3,-10,-9,-8,-10,-2,2,7,-2,5,-9,4,-5,-5,9,4,1,-9,-4,5,-5,2,1,-9,6,-7,-3,2,-3,1,-1,7,10,-4,3,8,-4,-7,10,8,-2,-2,-5,4,-3,1,1,6,4,-6,7,2,6,6,7,-3,8,-5,10,-10,-4,7,-1,-9,-2,9,-10,-3,-2,6,5,-8,5,-6,1,-9,9,4,-8,-2,-7,2,-3,8,3,5,-1,1,-4,-2,2,-2,9,10,9,10,2,5,-6,-3,7,9,10,-6,6,1,-1,-9,-9,8,1,-5,-1,-10,-5,5,2,-10,3,-5,7,-7,9,1,-6,-7,8,-4,6,3,9,-3,-2,-1,2,4,-4,-8,-10,2,-9,-5,-4,-3,4,-10,-5,-2,-8,4,1,-9,-10,9,-7,7,1,-10,-10,-3,-10,7,-8,6,4,-7,-7,-1,3,-6,2,-6,-5,9,-1,2,-7,-9,-8,2,5,8,-6,-9,-10,9,10,6,-4,-3,-9,-6,-1,-3,2,-2,5,-8,-10,9,-4,3,-6,9,6,-2,-4,1,-7,-6,-10,-5,10,-3,2,2,2,10,-6,5,9,-9,8,-10,-2,4,-7,-6,-4,-7,3,-4,5,-3,1,5,7,-4,-3,2,1,9,8,-4,4,-1,-9,2,-9,6,-4,1,-6,10,9,7,9,9,1,10,-5,4,7,9,-2,-5,8,10,1,3,4,-2,-8,-2,4,-6,-4,4,-8,-5,-10,9,-8,-1,-10,9,-6,9,-1,3,-5,-8,-9,2,7,-10,-10,2,9,-5,10,7,6,-10,-8,-6,-1,-4,7,8,3,-9,-6,-1,6,7,1,-2,9,5,6,-2,4,-7,-2,-4,-2,8,-6,6,6,-10,7,-5,5,-4,1,-5,-2,7,9,8,6,3,8,4,3,2,-5,6,7,10,-6,3,9,-1,-3,10,-9,-1,-2,-1,-10,-5,-10,-6,1,-2,-3,4,-7,10,5,7,-5,-1,5,2,-6,10,-7,10,-2,-4,9,7,-2,6,-9,3,1,-2,9,2,2,9,8,-9,4,-7,3,9,-1,7,7,-7,-6,-7,-3,-8,10,-6,7,-3,3,3,2,-3,6,6,-10,4,-1,10,-1,-1,-6,-1,4,-3,4,5,8,10,8,9,-10,-5,-7,3,3,-9,2,-3,6,5,4,5], dtype = "int32")#candidate|18019|(936,)|const|int32
call_18016 = relay.TupleGetItem(func_11690_call(relay.reshape(const_18017.astype('int8'), [16, 7, 11]), relay.reshape(var_18018.astype('int8'), [5, 8, 3]), relay.reshape(const_18019.astype('int32'), [2, 468]), ), 1)
call_18020 = relay.TupleGetItem(func_11695_call(relay.reshape(const_18017.astype('int8'), [16, 7, 11]), relay.reshape(var_18018.astype('int8'), [5, 8, 3]), relay.reshape(const_18019.astype('int32'), [2, 468]), ), 1)
func_943_call = mod.get_global_var('func_943')
func_947_call = mutated_mod.get_global_var('func_947')
var_18039 = relay.var("var_18039", dtype = "int64", shape = (14,))#candidate|18039|(14,)|var|int64
const_18040 = relay.const([-1.328023,-0.074969,4.274817,5.843059,7.472677,-4.283232,4.273965,-6.796132,6.805640,2.314183,-5.136934,9.891222,7.084825,-7.497078,6.230549,8.521952,-9.738386,-0.741079,2.781319,5.623610,4.171362,4.073916,-7.244545,9.053235,-5.516692,0.308874,-0.674513,-5.011099,-9.942457,-5.761021,0.198712,5.928819,6.263759,6.594832,-5.108974,-3.792417,9.863211,-0.979594,2.794917,6.718037,9.718590,-4.797527,5.550120,7.228374,5.520554,2.659092,-3.977350,9.506033,-1.968747,-1.749767,9.165936,7.057444,-8.601705,1.980937,9.291152,5.912282,8.521080,-4.905927,-7.634173,-9.353633,1.971348,-5.682560,-7.528837,-2.210429,8.549452,0.251853,5.285435,3.012455,2.877488,7.548069,3.265806,2.450091,-5.217133,9.600675,7.368737,7.724995,-6.511189,-8.414849,0.024141,5.048109,-5.862117,2.368130,4.376297,4.416121,6.986121,4.836504,-7.374544,3.541595,-7.782176,6.893807,-6.512130,5.072388,0.354355,-9.066839,-1.464031,2.999919,-8.125643,-0.785569,0.265752,-7.213887,-0.707801,3.484242,-3.221822,9.813165,5.323520,0.619063,8.314008,-8.224368,-2.089629,9.758149,6.778663,8.436708,-0.613170,8.781154,-4.225224,-1.205391,-2.279560,2.607024,5.087324,7.152125,0.934722,-8.289748,0.278108,1.418214,3.187831,-0.491505,7.588970,2.146737,5.240823,6.607549,-2.642615,-4.926996,6.094172,-6.309425,2.226709,-2.021530,-2.901215,8.633073,8.166177,4.606555,-6.608693,5.521877,-8.845888,2.051892,-5.315958,5.383109,-8.027250,4.333074,7.608985,-3.615329,9.637707,7.084190,-4.261488,-0.699965,-5.560762,-9.318256,8.646005,-5.634493,-8.449628,-2.020702,2.230571,-2.784261,6.106981,6.803667,5.549820,2.439381,-9.202271,-5.224725,-8.181147,4.632531,-9.063989,1.287431,4.159194,7.986702,1.279162,-6.185320,7.640581,-3.679743,-7.281061,2.374061,-0.099671,1.808164,-0.785978,9.447977,-6.668711,0.986644,-8.673213,-1.607036,-8.585678,-7.792642,5.231860,-2.106511,0.310568,-1.042841,3.965377,9.244764,-0.916843,-6.372679,-9.378826,5.842106,-1.508431,0.016232,9.471426,9.383454,-0.564621,7.668530,-6.366715,-5.052468,4.880199,-0.969644,3.174333,-7.493593,-3.001527,-6.206976,-7.847970,9.486009,-2.493388,5.434660,-2.616723,7.715058,-7.624934,7.684059,9.897841,-6.363165,-2.265249,8.756731,-8.786686,3.165284,-5.662456,6.607377,-9.538163,-3.075231,-8.359776,-4.499750,-3.377412,4.631313,9.874983,7.892571,-9.726721,9.597851,-0.379067,-0.404569,-0.251193,3.569565,8.016279,2.144999,8.755399,-7.872590,0.516491,1.245070,8.069180,6.206830,0.384221,1.022126,-2.644051,-1.595660,6.117454,-9.086091,-6.442822,-7.112793,-3.354644,5.300942,0.023074,0.986780,1.217589,-8.013543,4.663233,1.602071,4.997717,2.446212,3.383146,-6.028144,-3.246053,-9.367979,1.162152,6.100035,-0.062629,7.455827,-6.469463,-0.529102,4.900364,-0.186162,-8.605790,6.193494,-6.869318,-5.497528,-7.372303,-7.550567,4.306184,-7.285826,-6.034842,-8.359473,-3.819607,-3.999852,7.270624,-3.956284,-2.856297,7.053061,-9.158915,-5.547562,9.753415,-7.143973,9.037990,8.271348,3.097446,1.050101,0.878215,-6.390227,-0.773449,-3.934690,-5.416318,-1.694169,-8.340556,1.880372,9.253696,3.495630,-5.161627,-2.269308,8.103058,-1.370190,2.277356,-2.619054,-5.286919,7.356123,3.455434,-7.534627,-4.348792,-3.864697,-7.596011,-9.250757,0.574673,3.305978,1.808278,-4.842682,2.041556,-4.148629,-7.682023,1.006536,5.167959,4.613996,-8.715822,-4.319536,7.312380,7.760351,7.568418,3.925157,-0.543044,-8.753277,-8.912127,-2.027691,-8.190992,3.328174,7.366464,0.194937,4.377166,6.248292,-6.463430,-8.005723,9.557594,1.911511,8.094574,5.115065,7.794845,-0.984179,-1.183048,9.900022,5.447569,-9.099197,9.469598,8.601157,-6.446500,9.100770,5.518605,-7.822415,6.992292,3.381199,-0.455551,-0.122136,-8.495675,-8.456903,8.773334,9.265718,-9.287488,5.261900,4.804223,-3.850996,-1.642275,-4.176111,8.836080,-3.574108,4.328123,-2.982390,-1.640810,8.061646,7.897718,-2.412272,-2.049233,3.566178,1.605913,-8.211648,4.279246,-3.720766,-0.648680,5.249266,-7.121448,7.762315,7.185388,5.001550,-6.377029,2.765876,-6.577936,0.510149,9.303285,2.287628,7.801029,-1.359067,-8.370423,-1.653092,6.665282,4.990591,5.955180,0.070512,-4.259996,1.715372,-1.269691,-8.038689,-6.614443,7.372215,-2.179684,-1.166682,-1.001731,-7.656696,5.046614,-6.834636,5.555327,-6.481846,-3.965074,2.131206,3.109266,7.901653,8.800639,-6.954403,4.117758,-0.449992,6.138809,-5.958704,1.328702,-9.748253,4.922077,3.570329,-3.234155,-8.298054,-5.787253,4.458514,-9.712438,9.472442,-7.859719,0.881989,1.785836,8.860343,-6.935192,-7.916795,2.230470,-2.226443,6.217181,0.623435,-4.212282,-3.606579,4.543014,-4.756028,5.518258,-2.926771,4.135825,2.007042,7.261521,3.333546,-5.949953,4.505246,0.286593,5.516049,8.710002,-0.586502,-4.119130,-4.492778,0.486666,4.524099,-5.648944,-9.224686,1.596015,-2.378443,8.048625,-3.000065,-7.444750,9.223256,1.725836,-5.189727,7.476735,-9.274272,-6.637659,7.154888,1.201474,-6.245587,-0.128703,-0.433452,-3.469227,-8.928143,-0.400731,-6.046335,-5.882901,-8.590766,-5.473839,5.000137,-5.600697,9.529575,-0.117226,-1.679298,5.009841,-2.390959,5.554709,2.162160,6.223082,7.072811,-2.471977,-4.670974,4.374770,-6.476281,-2.188959,2.010491,-7.499297,8.542353,-7.120644,-4.485782,-3.927631,8.285158,5.152706,5.499367,1.784789,8.807584,-0.987996,-8.244125,-7.412395,7.753415,-2.340203,0.765201,1.729521,-1.022705,-3.140098,1.810212,3.504029,3.659689,7.497077,3.113273,6.993957,-2.919433,8.969080,-3.673944,-4.465456,-3.182745,-1.935820,8.072716,-1.498514,9.079726,-9.028254,5.800829,-8.100346,2.192740,0.354432,-5.969701,4.002165,6.784526,1.957404,-3.673882,0.992095,6.710980,4.615720,-6.532826,-9.495512,-2.013501,-5.028555,-5.771791,-9.493313,4.605637,-8.230126,9.059336,-6.359636,-3.470494,-7.564597,0.033004,3.971694,5.951262,5.726723,-1.927089,-1.712914,4.445092,-4.296074,4.187674,4.490555,3.727828,-9.645135,1.782267,4.838970,-1.195584,-6.539540,3.882903,-8.515420,-5.210682,-6.292925,9.322099,-4.998427,-8.110133,-0.974967,8.884528,-6.687025,-5.195390,0.762446,9.733886,8.721426,-5.897485,-0.287810,-7.785430,1.388114,-8.038639,9.639550,-2.081963,-1.189369,9.854919,-2.384664,-8.816698,2.304521,7.374030,-2.624525,6.143622,-6.927794,-2.592099,7.192575,-2.251972,5.447100,2.131060,-4.888930,-4.484167,-7.672615,-0.221324,3.124599,3.817678,9.213289,4.439074,6.444357,8.340396,2.639346,-9.790502,-6.629416,6.711080,-3.306275,1.599428,-6.209505,5.400752,4.909648,0.548317,3.550245,3.976011,8.251964,-2.355852,1.577869,-2.749958,2.531716,7.503898,5.725858,-2.661333,4.254995,3.169770,0.917572,-0.378388,-8.745222,9.018892,-6.122523,-0.877635,-9.699316,3.388029,-4.707891,-3.550101,-5.221254,-1.241347,-9.367765,7.786955,-5.117551,3.257890,-6.149089,-9.152094,0.654327,-4.244236,-5.075299,5.948004,7.010170,-2.137680,-2.347420,-5.313986,-6.757790,2.071871,7.384542,3.109159,1.345447,0.735859,-9.337324,-1.868950,-7.993957,-8.802323,6.022762,9.943022,-9.100715,-4.781146,-9.786782,3.974730,3.707237,4.942048,-9.294648,-6.940929,8.857721,7.056463,6.872281,8.379704,-9.859306,-9.612949,8.962940,-5.052420,9.405581,-5.762850,9.987267,5.340918,-0.145474,6.517651,9.894626,-1.914344,-8.656528,-8.904847,5.516972,1.724615,5.016466,4.941313,1.990191,-0.921586,8.384606,-3.684462,7.203976,1.963632,-2.296279,-1.690421,3.754515,-2.180514,-3.501647,4.434805,-5.184405,8.767490,3.842677,-7.414773,-1.837118,7.130014,8.845849,9.749109,8.493296,6.169421,2.404758,1.729534,-7.100450,-2.151922,5.916816,1.734603,-4.660546,7.896733,9.929558,-9.756020,8.986838,2.036629,0.315972,3.665865,-3.393424,-4.827622,-3.172266,-4.082075,9.112827,7.510073,-3.720735,-9.924036,5.276069,-3.074835,4.126032,-3.748803,3.790293,-7.820952,-7.822107,7.452728,-7.988963,9.256105,-2.938061,0.486889,-9.195268,-4.409482,2.622949,-4.130724,-3.414063,-6.363239,3.864027,-9.795788,-5.877987,-9.010614,-8.013672,5.566496,6.040094,9.479623,-7.757740,-6.071326,6.619311,-6.594471,4.007760,0.254682,1.445145,-3.927330,8.325259,3.329160,1.722359,-8.673823,-9.640100,-4.173519,-5.854502,4.939929,-6.938165,-0.838383,-3.914358,7.862464,4.528083,4.064684,-8.607767,3.908970,3.601070,4.817939,-3.559495,-2.961194,-6.468619,2.339763,9.804321,7.864265,-6.881556,9.464572,-9.677438,-8.672871,-8.446232,0.157929,4.076721,-6.258497,3.633825,5.478175,5.785671,-0.232131,-0.927249,6.348278,-5.930949,-7.707702,-6.180906,6.945891,-2.146042,-0.298988,-9.535281,9.902526,-4.570363,-6.764668,0.799917,-1.891336,5.924569,-6.058048,-3.103354,8.624536,1.784964,4.144083,-8.884017,-0.272021,-3.248302,5.336889,-9.359322,8.207587,-0.845680,4.032477,2.974511,-4.571967,-8.776976,6.795331,-2.030357,-6.613020,-4.173707,0.181131,-7.984164,9.900392,-9.950037,6.873054,6.942016,-5.977193,-6.142964,5.269216,9.860069,3.977559,5.442218,-7.898667,6.726127,4.593496,-4.966508,-7.005949,-5.655057,8.593818,-4.898696,-5.504980,9.041973,2.860310,-2.990840,-5.382822,7.851930,6.463242,-5.739155,-4.660580,-6.123520,9.902102,1.387540,-4.298582,8.262210,-0.153266,-3.846462,2.101000,9.587704,-8.981356,7.353015,9.962974,-1.772452,7.174090,-7.036685,-9.541752,1.039078,5.331931,-4.745758,6.574830,-8.573605,3.345545,-9.660942,-4.736330,-8.248211,2.310966,3.671475,-1.529607,0.736689], dtype = "float32")#candidate|18040|(945,)|const|float32
call_18038 = relay.TupleGetItem(func_943_call(relay.reshape(var_18039.astype('int64'), [1, 2, 7]), relay.reshape(var_18039.astype('int64'), [1, 2, 7]), relay.reshape(const_18040.astype('float32'), [945,]), ), 0)
call_18041 = relay.TupleGetItem(func_947_call(relay.reshape(var_18039.astype('int64'), [1, 2, 7]), relay.reshape(var_18039.astype('int64'), [1, 2, 7]), relay.reshape(const_18040.astype('float32'), [945,]), ), 0)
bop_18042 = relay.left_shift(uop_18014.astype('int32'), relay.reshape(uop_18000.astype('int32'), relay.shape_of(uop_18014))) # shape=(6, 10, 10)
output = relay.Tuple([bop_17983,call_18016,const_18017,var_18018,const_18019,call_18038,var_18039,const_18040,bop_18042,])
output2 = relay.Tuple([bop_17983,call_18020,const_18017,var_18018,const_18019,call_18041,var_18039,const_18040,bop_18042,])
F = relay.Function([var_17981,var_17982,var_18018,var_18039,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_17981,var_17982,var_18018,var_18039,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

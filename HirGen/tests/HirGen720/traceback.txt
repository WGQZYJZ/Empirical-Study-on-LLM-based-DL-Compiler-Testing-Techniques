==========mod==========
#[version = "0.0.5"]
def @func_19782(%var_19773: Tensor[(7, 1, 10), uint16], %var_19774: Tensor[(7, 13, 10), uint16]) -> (Tensor[(7, 13, 10), bool],) {
  %0 = cast(%var_19773, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %1 = cast(%var_19774, dtype="bool") /* ty=Tensor[(7, 13, 10), bool] */;
  %2 = not_equal(%0, %1) /* ty=Tensor[(7, 13, 10), bool] */;
  (%2,)
}

def @func_16645() -> (Tensor[(16, 8, 11), float64],) {
  %3 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
  %4 = %3.0;
  (%4,)
}

def @func_1804() -> Tensor[(16, 8, 11), float64] {
  @func_766() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15849() -> (Tensor[(16, 8, 11), float64],) {
  %5 = @func_13983() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %6 = %5.0;
  (%6,)
}

def @func_3563() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %7 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %8 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %9 = %7.0;
  %10 = %8.0;
  (%9, %10)
}

def @func_13932() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %11 = @func_13361() /* ty=Tensor[(16, 8, 11), float64] */;
  %12 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  (%11, %12)
}

def @func_8918() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %13 = @func_3690() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %14 = %13.0;
  %15 = @func_6208() /* ty=Tensor[(576), float32] */;
  %16 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  (%14, %15, %16)
}

def @func_17103() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %17 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %18 = %17.3;
  %19 = @func_12901() /* ty=Tensor[(576), float32] */;
  (%18, %19)
}

def @func_5591(%var_5524: Tensor[(5, 10, 7), float64]) -> (Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %20 = cast(%var_5524, dtype="float64") /* ty=Tensor[(5, 10, 7), float64] */;
  %21 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %22 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %23 = asinh(%20) /* ty=Tensor[(5, 10, 7), float64] */;
  %24 = %21.0;
  %25 = %22.0;
  (%23, %24, %25)
}

def @func_13182() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) {
  %26 = @func_11423() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %27 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %28 = @func_9842() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) */;
  %29 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %30 = %26.0;
  %31 = %27.0;
  %32 = %28.1;
  %33 = %29.0;
  (%30, %31, %32, %33)
}

def @func_15272() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %34 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %35 = @func_10485() /* ty=(Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %36 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %37 = %34.0;
  %38 = %35.2;
  %39 = %36.4;
  (%37, %38, %39)
}

def @func_11094() -> Tensor[(16, 8, 11), float64] {
  %40 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %40.0
}

def @func_14277() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %41 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %42 = %41.1;
  %43 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  (%42, %43)
}

def @func_641() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) {
  %44 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %45 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %46 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  %49 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %50 = %44.0;
  %51 = %45.2;
  %52 = cos(%48) /* ty=Tensor[(16, 8, 11), float32] */;
  %53 = @func_575() /* ty=Tensor[(576), float32] */;
  %54 = %49.2;
  (%50, %51, %52, %53, %54)
}

def @func_9842() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) {
  %55 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %58 = reshape(%57, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %59 = @func_1127(%58) /* ty=(Tensor[(16, 8, 11), int16],) */;
  %60 = %59.0;
  %61 = @func_6002() /* ty=Tensor[(14, 15, 6), float32] */;
  (%56, %60, %61)
}

def @func_12215(%var_12203: Tensor[(16, 9, 14), uint64]) -> (Tensor[(16, 9, 14), uint64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %62 = cast(%var_12203, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %63 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 9, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 9, 14), uint64] */, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %66 = @func_5496() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %67 = multiply(%64, %65) /* ty=Tensor[(16, 9, 14), uint64] */;
  %68 = %66.0;
  %69 = @func_6208() /* ty=Tensor[(576), float32] */;
  (%67, %68, %69)
}

def @func_8199(%var_8194: Tensor[(90), float32]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
  %70 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %71 = cast(%var_8194, dtype="float32") /* ty=Tensor[(90), float32] */;
  %72 = reshape(%71, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %73 = @func_2473(%72) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
  %74 = %70.1;
  %75 = %73.1;
  (%74, %75, %var_8194)
}

def @func_17413(%var_17383: Tensor[(360), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(605), uint64], Tensor[(576), float32]) {
  %76 = cast(%var_17383, dtype="float64") /* ty=Tensor[(360), float64] */;
  %77 = reshape(%76, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %78 = @func_6964(%77) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) */;
  %79 = @func_14234() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %80 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %81 = %78.3;
  %82 = @func_15512() /* ty=Tensor[(605), uint64] */;
  %83 = %79.0;
  (%80, %81, %var_17383, %82, %83)
}

def @func_3505(%var_3498: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), uint32] {
  %84 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %85 = %84.1;
  %86 = cast(%var_3498, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%88, %89) /* ty=Tensor[(16, 8, 11), uint32] */
}

def @func_6511() -> (Tensor[(16, 8, 11), float64],) {
  %90 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %91 = %90.0;
  (%91,)
}

def @func_10674() -> Tensor[(4, 9, 16), float32] {
  %92 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %92.6
}

def @func_20113() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %93 = @func_16580() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %94 = @func_19501() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %95 = %93.0;
  %96 = %94.1;
  (%95, %96)
}

def @func_13728() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %97 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %98 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %99 = %97.0;
  %100 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  %101 = %98.0;
  %102 = @func_9584() /* ty=Tensor[(576), float32] */;
  (%99, %100, %101, %102)
}

def @func_19082() -> (Tensor[(576), float32],) {
  %103 = @func_575() /* ty=Tensor[(576), float32] */;
  (%103,)
}

def @func_1410() -> (Tensor[(16, 8, 11), float64],) {
  %104 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %105 = %104.1;
  (%105,)
}

def @func_5131() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %106 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %107 = %106.2;
  %108 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
  (%107, %108)
}

def @func_13556() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %109 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %110 = @func_8145() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %111 = @func_10325() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %112 = %109.0;
  %113 = %110.1;
  %114 = %111.0;
  (%112, %113, %114)
}

def @func_3789() -> (Tensor[(16, 8, 11), float64],) {
  %115 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
  (%115,)
}

def @func_13601() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %116 = @func_12730() /* ty=Tensor[(16, 8, 11), float32] */;
  %117 = @func_2367() /* ty=Tensor[(576), float32] */;
  (%116, %117)
}

def @func_16425() -> Tensor[(16, 8, 11), float64] {
  @func_15150() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6208() -> Tensor[(576), float32] {
  %118 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %118.0
}

def @func_17131(%var_17118: Tensor[(7, 3, 12), bool], %var_17119: Tensor[(7, 3, 12), bool], %var_17127: Tensor[(30), float64]) -> (Tensor[(7, 3, 12), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64]) {
  %119 = cast(%var_17119, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %120 = shape_of(%var_17118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%var_17118, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %123 = cast(%var_17127, dtype="float64") /* ty=Tensor[(30), float64] */;
  %124 = cast(%var_17127, dtype="float64") /* ty=Tensor[(30), float64] */;
  %125 = reshape(%123, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
  %126 = reshape(%124, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
  %127 = logical_and(%121, %122) /* ty=Tensor[(7, 3, 12), bool] */;
  %128 = @func_9564(%125, %126) /* ty=Tensor[(5, 2, 3), float64] */;
  (%127, %128, %var_17127)
}

def @func_16029() -> (Tensor[(16, 8, 11), float32],) {
  %129 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %130 = %129.0;
  (%130,)
}

def @func_3601(%var_3596: int8, %var_3597: Tensor[(4, 13, 4), int8]) -> Tensor[(4, 13, 4), int8] {
  %131 = cast(%var_3596, dtype="int8") /* ty=int8 */;
  %132 = cast(%var_3597, dtype="int8") /* ty=Tensor[(4, 13, 4), int8] */;
  multiply(%131, %132) /* ty=Tensor[(4, 13, 4), int8] */
}

def @func_18576() -> Tensor[(14, 15, 6), float32] {
  @func_11730() /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_2290() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  %133 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %134 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %135 = reshape(%134, newshape=[144]) /* ty=Tensor[(144), uint64] */;
  %136 = @func_924(%135) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %137 = %133.1;
  %138 = %136.2;
  %139 = @func_575() /* ty=Tensor[(576), float32] */;
  (%137, %138, meta[relay.Constant][1] /* ty=Tensor[(144), uint64] */, %139)
}

def @func_11423() -> (Tensor[(16, 8, 11), float64],) {
  %140 = @func_11001() /* ty=Tensor[(16, 8, 11), float64] */;
  (%140,)
}

def @func_11307(%var_11261: Tensor[(6, 3, 15), uint64], %var_11262: Tensor[(6, 3, 15), uint64], %var_11272: Tensor[(30), float64]) -> (Tensor[(6, 3, 15), bool], Tensor[(6, 3, 15), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %141 = cast(%var_11262, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
  %142 = shape_of(%var_11261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_11261, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = cast(%var_11261, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
  %146 = shape_of(%var_11262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%var_11262, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %149 = cast(%var_11272, dtype="float64") /* ty=Tensor[(30), float64] */;
  %150 = cast(%var_11272, dtype="float64") /* ty=Tensor[(30), float64] */;
  %151 = reshape(%149, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
  %152 = reshape(%150, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
  %153 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %154 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %155 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %156 = greater_equal(%143, %144) /* ty=Tensor[(6, 3, 15), bool] */;
  %157 = less_equal(%147, %148) /* ty=Tensor[(6, 3, 15), bool] */;
  %158 = @func_9564(%151, %152) /* ty=Tensor[(5, 2, 3), float64] */;
  %159 = %153.3;
  %160 = %154.1;
  %161 = %155.0;
  (%156, %157, %158, %var_11272, %159, %160, %161)
}

def @func_8145() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %162 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %163 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %164 = %162.0;
  %165 = %163.1;
  (%164, %165)
}

def @func_18498() -> (Tensor[(16, 8, 11), float64],) {
  %166 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %167 = %166.1;
  (%167,)
}

def @func_17817() -> Tensor[(16, 8, 11), float64] {
  %168 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %168.0
}

def @func_3915() -> (Tensor[(576), float32],) {
  %169 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %170 = %169.0;
  (%170,)
}

def @func_11923() -> (Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
  %171 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %172 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %173 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %174 = reshape(%172, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %175 = reshape(%173, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %176 = @func_5266(%174, %175) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
  %177 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %178 = %171.2;
  %179 = %176.0;
  %180 = %177.0;
  (%178, %179, meta[relay.Constant][2] /* ty=Tensor[(605), uint64] */, %180)
}

def @func_9103() -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) {
  %181 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %182 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %185 = reshape(%184, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %186 = @func_1291(%185) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %187 = cast(meta[relay.Constant][3] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %188 = reshape(%187, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %189 = @func_5591(%188) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %190 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %191 = %181.1;
  %192 = @func_5414() /* ty=Tensor[(16, 8, 11), float64] */;
  %193 = %186.0;
  %194 = %189.0;
  %195 = %190.0;
  (%191, %183, %192, %193, %194, meta[relay.Constant][3] /* ty=Tensor[(350), float64] */, %195)
}

def @func_12850() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %196 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %197 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %198 = %196.3;
  %199 = %197.2;
  (%198, %199)
}

def @func_14166() -> (Tensor[(16, 8, 11), float64],) {
  %200 = @func_13437() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %201 = %200.0;
  (%201,)
}

def @func_8826(%var_8785: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) {
  %202 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 13, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
  %203 = shape_of(%var_8785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%var_8785, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %206 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %207 = divide(%204, %205) /* ty=Tensor[(5, 13, 14), float64] */;
  %208 = %206.1;
  (%207, %208)
}

def @func_1127(%var_1098: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), int16],) {
  %209 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %210 = %209.0;
  %211 = cast(%var_1098, dtype="int16") /* ty=Tensor[(16, 8, 11), int16] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="int16") /* ty=Tensor[(16, 8, 11), int16] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %215 = maximum(%213, %214) /* ty=Tensor[(16, 8, 11), int16] */;
  (%215,)
}

def @func_11569() -> Tensor[(16, 8, 11), float64] {
  %216 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %216.0
}

def @func_13669(%var_13621: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), bool]) {
  %217 = cast(%var_13621, dtype="uint64") /* ty=Tensor[(1, 144), uint64] */;
  %218 = reshape(%217, newshape=[1, 144]) /* ty=Tensor[(1, 144), uint64] */;
  %219 = @func_6670(%218) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) */;
  %220 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %221 = %219.1;
  %222 = cast(%221, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %223 = reshape(%222, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %224 = @func_13361() /* ty=Tensor[(16, 8, 11), float64] */;
  %225 = %220.0;
  %226 = @func_10069(%223) /* ty=Tensor[(16, 8, 11), bool] */;
  (%224, %221, %var_13621, %225, %226)
}

def @func_12192() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) {
  %227 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %228 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  %229 = %227.1;
  (%228, %229)
}

def @func_20146() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %230 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %231 = @func_18905() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %232 = %230.3;
  %233 = %231.0;
  (%232, %233)
}

def @func_1349() -> (Tensor[(16, 8, 11), float32],) {
  %234 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %235 = %234.0;
  (%235,)
}

def @func_7572() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %236 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %237 = %236.0;
  %238 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  (%237, %238)
}

def @func_19559(%var_19538: Tensor[(350, 1), float64], %var_19539: Tensor[(55, 11), uint64], %var_19540: Tensor[(60), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(5, ?, 12), float64], Tensor[(3, 30), float32], Tensor[(350, 1), float64], Tensor[(55, 11), uint64], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %239 = @func_18019() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %240 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %241 = cast(%var_19538, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
  %242 = cast(%var_19539, dtype="uint64") /* ty=Tensor[(55, 11), uint64] */;
  %243 = cast(%var_19540, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %244 = reshape(%240, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %245 = reshape(%241, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %246 = reshape(%242, newshape=[605]) /* ty=Tensor[(605), uint64] */;
  %247 = reshape(%243, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %248 = @func_9386(%244, %245, %246, %247) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
  %249 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %250 = %239.0;
  %251 = %248.10;
  %252 = %249.0;
  (%250, %251, meta[relay.Constant][5] /* ty=Tensor[(3, 30), float32] */, %var_19538, %var_19539, %var_19540, %252)
}

def @func_6002() -> Tensor[(14, 15, 6), float32] {
  %253 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 6), float32] */;
  asin(%253) /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_17151() -> (Tensor[(576), float32],) {
  %254 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %255 = %254.0;
  (%255,)
}

def @func_2329() -> (Tensor[(576), float32],) {
  %256 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %257 = %256.0;
  (%257,)
}

def @func_20158() -> Tensor[(16, 8, 11), float32] {
  @func_7137() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_11121(%var_11113: float32, %var_11114: Tensor[(28), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(14, 1, 2), float32], float32, Tensor[(28), float32]) {
  %258 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %259 = cast(%var_11113, dtype="float32") /* ty=float32 */;
  %260 = cast(%var_11114, dtype="float32") /* ty=Tensor[(28), float32] */;
  %261 = reshape(%259, newshape=[]) /* ty=float32 */;
  %262 = reshape(%260, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float32] */;
  %263 = @func_10170(%261, %262) /* ty=(Tensor[(14, 1, 2), float32],) */;
  %264 = %258.0;
  %265 = %263.0;
  (%264, %265, %var_11113, %var_11114)
}

def @func_14741() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %266 = @func_13833() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %267 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %268 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %269 = %266.0;
  %270 = %267.0;
  %271 = @func_5414() /* ty=Tensor[(16, 8, 11), float64] */;
  %272 = %268.0;
  (%269, %270, %271, %272)
}

def @func_6175(%var_6168: Tensor[(3, 9, 8), uint64], %var_6173: Tensor[(350), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  %273 = cast(%var_6168, dtype="bool") /* ty=Tensor[(3, 9, 8), bool] */;
  %274 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(3, 9, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 9, 8), uint64] */, dtype="bool") /* ty=Tensor[(3, 9, 8), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = cast(%var_6173, dtype="float64") /* ty=Tensor[(350), float64] */;
  %278 = reshape(%277, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %279 = @func_5591(%278) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %280 = less(%275, %276) /* ty=Tensor[(3, 9, 8), bool] */;
  %281 = %279.1;
  (%280, %281, %var_6173)
}

def @func_14672() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32]) {
  %282 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %283 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %284 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %285 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %286 = %282.1;
  %287 = %283.0;
  %288 = %284.1;
  %289 = %285.0;
  %290 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  (%286, %287, %288, %289, %290)
}

def @func_695() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %291 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %292 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %293 = %291.0;
  %294 = %292.0;
  %295 = @func_575() /* ty=Tensor[(576), float32] */;
  (%293, %294, %295)
}

def @func_11397() -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %296 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %297 = @func_8161() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %298 = %296.0;
  %299 = %297.0;
  %300 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
  (%298, %299, %300)
}

def @func_17026() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %301 = @func_13932() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %302 = @func_15827() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(384), float64]) */;
  %303 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %304 = %301.1;
  %305 = %302.0;
  %306 = %303.0;
  (%304, %305, %306)
}

def @func_16269(%var_16259: Tensor[(12, 42), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(8, 9, 7), float32], Tensor[(12, 42), float32]) {
  %307 = @func_14847() /* ty=(Tensor[(576), float32],) */;
  %308 = @func_14564() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) */;
  %309 = cast(%var_16259, dtype="float32") /* ty=Tensor[(12, 42), float32] */;
  %310 = reshape(%309, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %311 = @func_5336(%310) /* ty=(Tensor[(8, 9, 7), float32],) */;
  %312 = %307.0;
  %313 = %308.0;
  %314 = %311.0;
  (%312, %313, %314, %var_16259)
}

def @func_3338(%var_3324: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
  %315 = cast(%var_3324, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %316 = exp(%315) /* ty=Tensor[(5, 12, 6), float64] */;
  (%316,)
}

def @func_5065() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) {
  %317 = @func_4431() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) */;
  %318 = cast(meta[relay.Constant][8] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %319 = reshape(%318, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
  %320 = @func_1215(%319) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
  %321 = %317.1;
  %322 = %320.1;
  (%321, %322, meta[relay.Constant][8] /* ty=Tensor[(144), uint64] */)
}

def @func_9564(%var_9559: Tensor[(5, 2, 3), float64], %var_9560: Tensor[(5, 2, 3), float64]) -> Tensor[(5, 2, 3), float64] {
  %323 = cast(%var_9560, dtype="float64") /* ty=Tensor[(5, 2, 3), float64] */;
  %324 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%var_9559, dtype="float64") /* ty=Tensor[(5, 2, 3), float64] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%325, %326) /* ty=Tensor[(5, 2, 3), float64] */
}

def @func_11001() -> Tensor[(16, 8, 11), float64] {
  %327 = @func_9103() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) */;
  %327.1
}

def @func_5447() -> Tensor[(16, 8, 11), float64] {
  @func_5414() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_3214() -> (Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %328 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 13, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %329 = log(%328) /* ty=Tensor[(15, 13, 14), float32] */;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(15, 13, 14), float64] */;
  %331 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %332 = reshape(%331, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
  %333 = @func_1215(%332) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
  %334 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %335 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %336 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %337 = %336.1;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(576), float32] */;
  %339 = reshape(%338, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %340 = @func_83(%339) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %341 = exp(%330) /* ty=Tensor[(15, 13, 14), float64] */;
  %342 = %333.1;
  %343 = %334.1;
  %344 = %335.0;
  %345 = %340.0;
  (%341, %342, meta[relay.Constant][10] /* ty=Tensor[(144), uint64] */, %343, %344, %337, %345)
}

def @func_2051(%var_2021: Tensor[(10, 16, 5), float32]) -> (Tensor[(10, 16, 5), float32],) {
  %346 = cast(-0.546405f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %347 = cast(%var_2021, dtype="float32") /* ty=Tensor[(10, 16, 5), float32] */;
  %348 = power(%346, %347) /* ty=Tensor[(10, 16, 5), float32] */;
  (%348,)
}

def @func_7587(%var_7575: Tensor[(10, 16, 1), float32]) -> Tensor[(10, 16, 1), float32] {
  %349 = cast(%var_7575, dtype="float32") /* ty=Tensor[(10, 16, 1), float32] */;
  sqrt(%349) /* ty=Tensor[(10, 16, 1), float32] */
}

def @func_10325() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %350 = @func_2290() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %351 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %352 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %353 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  %354 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
  %355 = %350.3;
  %356 = %351.0;
  %357 = %352.0;
  (%353, %354, %355, %356, %357)
}

def @func_10643() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) {
  %358 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
  %359 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %360 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %361 = %360.0;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %363 = reshape(%362, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %364 = @func_1291(%363) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %365 = %358.0;
  %366 = %359.0;
  %367 = %364.2;
  %368 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  (%365, %366, %361, %367, %368)
}

def @func_15419() -> Tensor[(576), float32] {
  %369 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %369.1
}

def @func_8594() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %370 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %371 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %372 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  %373 = %370.0;
  %374 = %371.1;
  %375 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  (%372, %373, %374, %375)
}

def @func_18231() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %376 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %377 = %376.2;
  %378 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  (%377, %378)
}

def @func_11592() -> (Tensor[(16, 8, 11), float64],) {
  %379 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %380 = %379.0;
  (%380,)
}

def @func_1674(%var_1671: Tensor[(6, 3, 5), float32]) -> Tensor[(6, 3, 5), float32] {
  %381 = cast(%var_1671, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
  erf(%381) /* ty=Tensor[(6, 3, 5), float32] */
}

def @func_13490() -> Tensor[(576), float32] {
  %382 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %382.4
}

def @func_11444() -> Tensor[(16, 8, 11), float64] {
  %383 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %383.0
}

def @func_766() -> Tensor[(16, 8, 11), float64] {
  %384 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %384.0
}

def @func_409() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) {
  %385 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %386 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %387 = reshape(%386, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %388 = @func_83(%387) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %389 = asinh(%385) /* ty=Tensor[(16, 8, 11), float64] */;
  %390 = %388.0;
  (%389, %390, meta[relay.Constant][12] /* ty=Tensor[(576), float32] */)
}

def @func_19183() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(3, 9, 8), float64], Tensor[(16, 8, 11), float64]) {
  %391 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %392 = @func_2664() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %393 = cast(meta[relay.Constant][13] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %394 = cast(meta[relay.Constant][14] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %395 = reshape(%393, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
  %396 = reshape(%394, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %397 = @func_8346(%395, %396) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %400 = @func_13556() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %401 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %402 = %391.0;
  %403 = @func_12662() /* ty=Tensor[(576), float32] */;
  %404 = %392.1;
  %405 = sin(%399) /* ty=Tensor[(3, 9, 8), float64] */;
  %406 = %400.2;
  (%401, %402, %403, meta[relay.Constant][13] /* ty=Tensor[(90), float32] */, meta[relay.Constant][14] /* ty=Tensor[(350), float64] */, %404, %405, %406)
}

def @func_5266(%var_5230: Tensor[(11, 11, 5), uint64], %var_5231: Tensor[(11, 11, 5), uint64]) -> (Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) {
  %407 = cast(%var_5231, dtype="uint64") /* ty=Tensor[(11, 11, 5), uint64] */;
  %408 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_5230, dtype="uint64") /* ty=Tensor[(11, 11, 5), uint64] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %411 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %412 = bitwise_or(%409, %410) /* ty=Tensor[(11, 11, 5), uint64] */;
  %413 = %411.6;
  (%412, %413)
}

def @func_16167() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32]) {
  %414 = @func_12555() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) */;
  %415 = %414.1;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %417 = exp(%416) /* ty=Tensor[(6, 4, 16), float64] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
  %419 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %420 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %421 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %422 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  %423 = @func_11001() /* ty=Tensor[(16, 8, 11), float64] */;
  %424 = atan(%418) /* ty=Tensor[(6, 4, 16), float32] */;
  %425 = %419.0;
  %426 = %420.0;
  %427 = %421.1;
  (%422, %423, %424, %425, %426, %427)
}

def @func_14847() -> (Tensor[(576), float32],) {
  %428 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %429 = %428.0;
  (%429,)
}

def @func_10135(%var_10113: Tensor[(1, 90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1, 90), float32], Tensor[(576), float32]) {
  %430 = cast(%var_10113, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %431 = reshape(%430, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %432 = @func_8199(%431) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %433 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %434 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  %435 = %432.1;
  %436 = %433.0;
  (%434, %435, %var_10113, %436)
}

def @func_18389() -> Tensor[(16, 8, 11), float64] {
  %437 = @func_17286() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %437.0
}

def @func_7742(%var_7720: Tensor[(16, 10), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(10, 16, 1), float32], Tensor[(16, 10), float32], Tensor[(16, 8, 11), float32]) {
  %438 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %439 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %440 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %441 = cast(%var_7720, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
  %442 = reshape(%441, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %443 = %438.0;
  %444 = @func_5447() /* ty=Tensor[(16, 8, 11), float64] */;
  %445 = %439.0;
  %446 = %440.0;
  %447 = @func_7587(%442) /* ty=Tensor[(10, 16, 1), float32] */;
  %448 = @func_7137() /* ty=Tensor[(16, 8, 11), float32] */;
  (%443, %444, %445, %446, %447, %var_7720, %448)
}

def @func_15344() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %449 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %450 = @func_12192() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) */;
  %451 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
  %452 = %449.0;
  %453 = %450.0;
  %454 = %451.0;
  %455 = @func_9155() /* ty=Tensor[(16, 8, 11), float64] */;
  (%452, %453, %454, %455)
}

def @func_19984() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(4, 8, 10), float64], Tensor[(320), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
  %456 = @func_13601() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %457 = cast(meta[relay.Constant][15] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %458 = reshape(%457, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float64] */;
  %459 = @func_19312(%458) /* ty=(Tensor[(4, 8, 10), float64],) */;
  %460 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %461 = @func_11094() /* ty=Tensor[(16, 8, 11), float64] */;
  %462 = @func_14420() /* ty=Tensor[(16, 8, 11), float64] */;
  %463 = %456.0;
  %464 = %459.0;
  %465 = @func_11535() /* ty=Tensor[(4, 9, 16), float32] */;
  %466 = %460.0;
  (%461, %462, %463, %464, meta[relay.Constant][15] /* ty=Tensor[(320), float64] */, %465, %466)
}

def @func_2745() -> (Tensor[(16, 8, 11), float64],) {
  %467 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %468 = %467.0;
  (%468,)
}

def @func_5210() -> (Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %469 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %470 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %471 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %473 = reshape(%472, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %474 = @func_83(%473) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %475 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %476 = %469.0;
  %477 = %470.0;
  %478 = %474.0;
  (%475, %471, %476, %477, %478)
}

def @func_10697() -> Tensor[(16, 8, 11), float64] {
  @func_5447() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15294() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %479 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %480 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %481 = %479.0;
  %482 = %480.0;
  (%481, %482)
}

def @func_2823() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %483 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %484 = %483.0;
  %485 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  (%484, %485)
}

def @func_1964() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %486 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %487 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %488 = %486.1;
  %489 = %487.0;
  (%488, %489)
}

def @func_6056() -> Tensor[(16, 8, 11), float64] {
  %490 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %490.2
}

def @func_19337() -> (Tensor[(576), float32], Tensor[(576), float32]) {
  %491 = @func_12662() /* ty=Tensor[(576), float32] */;
  %492 = @func_6208() /* ty=Tensor[(576), float32] */;
  (%491, %492)
}

def @func_19501() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %493 = @func_17151() /* ty=(Tensor[(576), float32],) */;
  %494 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %497 = reshape(%496, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %498 = @func_11346(%497) /* ty=(Tensor[(16, 8, 11), float64],) */;
  %499 = %493.0;
  %500 = %498.0;
  (%499, %495, %500)
}

def @func_20410() -> (Tensor[(576), float32],) {
  %501 = @func_14361() /* ty=(Tensor[(576), float32],) */;
  %502 = %501.0;
  (%502,)
}

def @func_3002() -> Tensor[(16, 8, 11), float64] {
  %503 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  %506 = rsqrt(%505) /* ty=Tensor[(16, 8, 11), float32] */;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  sin(%507) /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_4128() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %508 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %509 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %510 = %509.1;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %512 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %513 = %508.1;
  %514 = exp(%511) /* ty=Tensor[(16, 8, 11), float64] */;
  %515 = %512.0;
  (%513, %514, %515)
}

def @func_20198(%var_20194: Tensor[(90), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(90), float32]) {
  %516 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %517 = cast(%var_20194, dtype="float32") /* ty=Tensor[(90), float32] */;
  %518 = reshape(%517, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %519 = @func_8199(%518) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %520 = %516.0;
  %521 = %519.0;
  (%520, %521, %var_20194)
}

def @func_3653() -> (Tensor[(576), float32],) {
  %522 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %523 = %522.0;
  (%523,)
}

def @func_7364() -> Tensor[(16, 8, 11), float64] {
  %524 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %524.0
}

def @func_7443() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %525 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %526 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %527 = %525.0;
  %528 = %526.0;
  (%527, %528)
}

def @func_13270() -> Tensor[(576), float32] {
  %529 = @func_8145() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %529.1
}

def @func_12424(%var_12375: Tensor[(350), float64], %var_12419: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
  %530 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
  %531 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %532 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %533 = cast(%var_12375, dtype="float64") /* ty=Tensor[(350), float64] */;
  %534 = reshape(%532, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
  %535 = reshape(%533, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %536 = @func_8346(%534, %535) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
  %537 = cast(%var_12375, dtype="float64") /* ty=Tensor[(350), float64] */;
  %538 = cast(%var_12419, dtype="float64") /* ty=Tensor[(910), float64] */;
  %539 = reshape(%538, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %540 = @func_9898(%539) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) */;
  %541 = %530.0;
  %542 = %531.0;
  %543 = %536.1;
  %544 = tan(%537) /* ty=Tensor[(350), float64] */;
  %545 = %540.2;
  (%541, %542, %543, meta[relay.Constant][16] /* ty=Tensor[(15, 6), float32] */, %544, %545, %var_12419)
}

def @func_4542() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %546 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %547 = %546.1;
  %548 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  (%547, %548)
}

def @func_15506() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %549 = @func_11952() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %550 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %551 = @func_13932() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %552 = %549.0;
  %553 = %550.1;
  %554 = %551.1;
  (%552, %553, %554)
}

def @func_17286() -> (Tensor[(16, 8, 11), float64],) {
  %555 = @func_13135() /* ty=Tensor[(16, 8, 11), float64] */;
  (%555,)
}

def @func_4997() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
  %556 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %557 = @func_4771() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %558 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %559 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
  %560 = %556.0;
  %561 = %557.3;
  %562 = @func_2367() /* ty=Tensor[(576), float32] */;
  %563 = %558.0;
  (%559, %560, %561, %562, %563)
}

def @func_2223() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) {
  %564 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %565 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %566 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %567 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %568 = reshape(%567, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
  %569 = @func_1215(%568) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
  %570 = %569.2;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(16, 9, ?), float64] */;
  %572 = acos(%571) /* ty=Tensor[(16, 9, ?), float64] */;
  %573 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), uint64] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(16, 9, ?), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = %564.0;
  %578 = %565.0;
  %579 = %566.0;
  %580 = greater_equal(%575, %576) /* ty=Tensor[(16, 9, ?), bool] */;
  (%577, %578, %579, %580)
}

def @func_9155() -> Tensor[(16, 8, 11), float64] {
  @func_6056() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6964(%var_6932: Tensor[(5, 12, 6), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) {
  %581 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %582 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %583 = cast(meta[relay.Constant][18] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %584 = cast(meta[relay.Constant][18] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %585 = reshape(%583, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %586 = reshape(%584, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %587 = @func_5266(%585, %586) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
  %588 = @func_5426() /* ty=(Tensor[(576), float32],) */;
  %589 = cast(meta[relay.Constant][19] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %590 = reshape(%589, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %591 = @func_3338(%590) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %592 = %591.0;
  %593 = cast(%var_6932, dtype="bool") /* ty=Tensor[(5, 12, 6), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(5, 12, 6), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = %582.0;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %599 = reshape(%598, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %600 = @func_1291(%599) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %601 = cast(meta[relay.Constant][18] /* ty=Tensor[(605), uint64] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %602 = acosh(%601) /* ty=Tensor[(605), float32] */;
  %603 = cast(meta[relay.Constant][18] /* ty=Tensor[(605), uint64] */, dtype="bool") /* ty=Tensor[(605), bool] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(1), int32] */;
  %605 = cast(%602, dtype="bool") /* ty=Tensor[(605), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?), bool] */;
  %607 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %608 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  %609 = %581.0;
  %610 = %587.0;
  %611 = %588.0;
  %612 = logical_or(%595, %596) /* ty=Tensor[(5, 12, 6), bool] */;
  %613 = %600.0;
  %614 = less_equal(%605, %606) /* ty=Tensor[(605), bool] */;
  %615 = %607.1;
  (%608, %609, %597, %610, meta[relay.Constant][19] /* ty=Tensor[(360), float64] */, %611, %612, %613, %614, %615)
}

def @func_12100() -> Tensor[(16, 8, 11), float64] {
  %616 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %616.0
}

def @func_14086() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %617 = @func_5210() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %618 = @func_12269() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %619 = %617.0;
  %620 = @func_10697() /* ty=Tensor[(16, 8, 11), float64] */;
  %621 = %618.1;
  (%619, %620, %621)
}

def @func_6400() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %622 = @func_5496() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %623 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %624 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %625 = %622.0;
  %626 = %623.3;
  %627 = @func_6208() /* ty=Tensor[(576), float32] */;
  %628 = %624.0;
  (%625, %626, %627, %628)
}

def @func_8390() -> (Tensor[(16, 8, 11), float64],) {
  %629 = @func_2001() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) */;
  %630 = %629.0;
  (%630,)
}

def @func_13241() -> Tensor[(16, 8, 11), float64] {
  @func_8023() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15552() -> Tensor[(16, 8, 11), float64] {
  @func_14132() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15565() -> Tensor[(16, 8, 11), float64] {
  %631 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %631.0
}

def @func_19862(%var_19831: Tensor[(10, 16, 5), uint16], %var_19832: Tensor[(10, 16, 5), uint16]) -> (Tensor[(10, 16, 5), bool],) {
  %632 = cast(%var_19832, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
  %633 = shape_of(%var_19831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_19831, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %636 = greater_equal(%634, %635) /* ty=Tensor[(10, 16, 5), bool] */;
  (%636,)
}

def @func_6477() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %637 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %638 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  %639 = %637.0;
  (%638, %639)
}

def @func_20451() -> (Tensor[(576), float32],) {
  %640 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %641 = %640.0;
  (%641,)
}

def @func_1512() -> (Tensor[(16, 8, 11), float64],) {
  %642 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %643 = %642.0;
  (%643,)
}

def @func_8506() -> (Tensor[(16, 8, 11), float64],) {
  %644 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %645 = %644.0;
  (%645,)
}

def @func_4908(%var_4896: uint64) -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %646 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %647 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %648 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %649 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %650 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %651 = cast(%var_4896, dtype="uint64") /* ty=uint64 */;
  %652 = cast(meta[relay.Constant][20] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %653 = reshape(%651, newshape=[]) /* ty=uint64 */;
  %654 = reshape(%652, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
  %655 = @func_3465(%653, %654) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %656 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %657 = %646.2;
  %658 = %647.0;
  %659 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
  %660 = %648.0;
  %661 = %649.0;
  %662 = %650.0;
  %663 = %655.1;
  %664 = %656.0;
  (%657, %658, %659, %660, %661, %662, %663, %var_4896, meta[relay.Constant][20] /* ty=Tensor[(60), uint64] */, %664)
}

def @func_14234() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %665 = @func_11952() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %666 = @func_8084() /* ty=Tensor[(576), float32] */;
  %667 = %665.0;
  (%666, %667)
}

def @func_13880(%var_13876: Tensor[(504), int16]) -> (Tensor[(16, 9, ?), float32], Tensor[(3, 14, 12), int16], Tensor[(504), int16]) {
  %668 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %669 = cast(%var_13876, dtype="int16") /* ty=Tensor[(504), int16] */;
  %670 = cast(%var_13876, dtype="int16") /* ty=Tensor[(504), int16] */;
  %671 = reshape(%669, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int16] */;
  %672 = reshape(%670, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int16] */;
  %673 = @func_9755(%671, %672) /* ty=(Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) */;
  %674 = %668.1;
  %675 = %673.0;
  (%674, %675, %var_13876)
}

def @func_18713() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
  %676 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %677 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %678 = @func_18498() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %679 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %680 = %676.0;
  %681 = %677.0;
  %682 = %678.0;
  %683 = @func_15512() /* ty=Tensor[(605), uint64] */;
  %684 = %679.0;
  (%680, %681, %682, %683, %684)
}

def @func_839(%var_819: Tensor[(16, 9, 1), uint64], %var_820: Tensor[(16, 9, 1), uint64]) -> (Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %685 = cast(%var_820, dtype="uint64") /* ty=Tensor[(16, 9, 1), uint64] */;
  %686 = shape_of(%var_819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_819, dtype="uint64") /* ty=Tensor[(16, 9, 1), uint64] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %689 = right_shift(%687, %688) /* ty=Tensor[(16, 9, ?), uint64] */;
  %690 = cast(%var_819, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="float64") /* ty=Tensor[(16, 9, ?), float64] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %694 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %695 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %696 = power(%692, %693) /* ty=Tensor[(16, 9, ?), float64] */;
  %697 = %694.1;
  %698 = %695.0;
  (%696, %697, %698)
}

def @func_18905() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %699 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %700 = %699.1;
  %701 = @func_15552() /* ty=Tensor[(16, 8, 11), float64] */;
  (%700, %701)
}

def @func_15679() -> (Tensor[(2, 12, 11), float32], Tensor[(576), float32]) {
  %702 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  %703 = @func_11745() /* ty=(Tensor[(576), float32],) */;
  %704 = erf(%702) /* ty=Tensor[(2, 12, 11), float32] */;
  %705 = %703.0;
  (%704, %705)
}

def @func_3898() -> (Tensor[(16, 8, 11), float64],) {
  %706 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %707 = %706.1;
  (%707,)
}

def @func_11730() -> Tensor[(14, 15, 6), float32] {
  @func_6002() /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_20356() -> Tensor[(16, 8, 11), float64] {
  %708 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %708.0
}

def @func_18184() -> Tensor[(16, 8, 11), float64] {
  %709 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %709.0
}

def @func_1473() -> (Tensor[(16, 8, 11), float64],) {
  %710 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %711 = %710.0;
  (%711,)
}

def @func_12555() -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) {
  %712 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %713 = cast(meta[relay.Constant][22] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %714 = reshape(%713, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float64] */;
  %715 = @func_5392(%714) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) */;
  %716 = %715.3;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %718 = reshape(%717, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %719 = @func_6886(%718) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
  %720 = %712.0;
  %721 = %719.2;
  (%720, %716, meta[relay.Constant][22] /* ty=Tensor[(384), float64] */, %721)
}

def @func_2115() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %722 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %723 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %724 = %722.2;
  %725 = %723.0;
  (%724, %725)
}

def @func_15741() -> (Tensor[(16, 8, 11), float64],) {
  %726 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %727 = %726.0;
  (%727,)
}

def @func_11255() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %728 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %729 = @func_8892() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %730 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %731 = %728.0;
  %732 = %729.0;
  (%730, %731, %732)
}

def @func_14361() -> (Tensor[(576), float32],) {
  %733 = @func_2367() /* ty=Tensor[(576), float32] */;
  (%733,)
}

def @func_1291(%var_1288: Tensor[(1408), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) {
  %734 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  %735 = cast(%734, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
  %736 = log10(%735) /* ty=Tensor[(4, 9, 16), float64] */;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %738 = cast(%var_1288, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %739 = reshape(%738, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %740 = @func_1127(%739) /* ty=(Tensor[(16, 8, 11), int16],) */;
  %741 = sinh(%737) /* ty=Tensor[(4, 9, 16), float32] */;
  %742 = %740.0;
  (%741, %742, %var_1288)
}

def @func_14261(%var_14257: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64], Tensor[(910), float64]) {
  %743 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %744 = cast(%var_14257, dtype="float64") /* ty=Tensor[(910), float64] */;
  %745 = reshape(%743, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %746 = reshape(%744, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %747 = @func_12424(%745, %746) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) */;
  %748 = @func_5879() /* ty=Tensor[(16, 8, 11), float32] */;
  %749 = %747.0;
  (%748, %749, meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, %var_14257)
}

def @func_2367() -> Tensor[(576), float32] {
  %750 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %750.4
}

def @func_14961() -> Tensor[(576), float32] {
  %751 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %751.0
}

def @func_8106() -> Tensor[(16, 8, 11), float64] {
  %752 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %752.0
}

def @func_19289() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %753 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %754 = @func_12595() /* ty=Tensor[(576), float32] */;
  %755 = %753.1;
  (%754, %755)
}

def @func_8161() -> (Tensor[(16, 8, 11), float64],) {
  %756 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %757 = %756.2;
  (%757,)
}

def @func_16676() -> (Tensor[(16, 8, 11), float64],) {
  %758 = @func_15017() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %759 = %758.0;
  (%759,)
}

def @func_18069() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %760 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %761 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %762 = %760.0;
  %763 = %761.0;
  (%762, %763)
}

def @func_4664() -> Tensor[(16, 8, 11), float64] {
  %764 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %764.0
}

def @func_6626() -> Tensor[(16, 8, 11), float64] {
  %765 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %765.0
}

def @func_11346(%var_11330: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), float64],) {
  %766 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %767 = %766.0;
  %768 = cast(%var_11330, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %772 = mod(%770, %771) /* ty=Tensor[(16, 8, 11), float64] */;
  (%772,)
}

def @func_10797() -> (Tensor[(16, 8, 11), float64],) {
  %773 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %774 = %773.1;
  (%774,)
}

def @func_8023() -> Tensor[(16, 8, 11), float64] {
  %775 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %775.1
}

def @func_6670(%var_6662: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) {
  %776 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %777 = cast(%var_6662, dtype="uint64") /* ty=Tensor[(1, 144), uint64] */;
  %778 = reshape(%777, newshape=[144]) /* ty=Tensor[(144), uint64] */;
  %779 = @func_924(%778) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %780 = %776.0;
  %781 = %779.1;
  (%780, %781, %var_6662)
}

def @func_13135() -> Tensor[(16, 8, 11), float64] {
  @func_1877() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15512() -> Tensor[(605), uint64] {
  %782 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %782.2
}

def @func_13833() -> (Tensor[(16, 8, 11), float64],) {
  %783 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %784 = %783.1;
  (%784,)
}

def @func_12901() -> Tensor[(576), float32] {
  %785 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %785.0
}

def @func_17166() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %786 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %787 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %788 = %786.0;
  %789 = %787.0;
  (%788, %789)
}

def @func_18654() -> Tensor[(576), float32] {
  @func_12662() /* ty=Tensor[(576), float32] */
}

def @func_7839(%var_7806: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) {
  %790 = cast(%var_7806, dtype="uint64") /* ty=Tensor[(196), uint64] */;
  %791 = reshape(%790, newshape=[196]) /* ty=Tensor[(196), uint64] */;
  %792 = @func_5790(%791) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) */;
  %793 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %794 = cast(meta[relay.Constant][24] /* ty=Tensor[(36, 16), float32] */, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %795 = reshape(%794, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %796 = @func_83(%795) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %797 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %798 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
  %799 = %792.3;
  %800 = %793.1;
  %801 = %796.0;
  %802 = %797.0;
  (%798, %799, %var_7806, %800, %801, meta[relay.Constant][24] /* ty=Tensor[(36, 16), float32] */, %802)
}

def @func_8301() -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %803 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %804 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %805 = %803.0;
  %806 = %804.1;
  %807 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %808 = @func_5879() /* ty=Tensor[(16, 8, 11), float32] */;
  (%805, %806, %807, %808)
}

def @func_8980() -> (Tensor[(16, 8, 11), float64],) {
  %809 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
  (%809,)
}

def @func_15017() -> (Tensor[(16, 8, 11), float64],) {
  %810 = @func_14420() /* ty=Tensor[(16, 8, 11), float64] */;
  (%810,)
}

def @func_11645() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
  %811 = cast(meta[relay.Constant][25] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %812 = reshape(%811, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), float64] */;
  %813 = @func_8826(%812) /* ty=(Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) */;
  %814 = @func_575() /* ty=Tensor[(576), float32] */;
  %815 = %813.1;
  (%814, %815, meta[relay.Constant][25] /* ty=Tensor[(910), float64] */)
}

def @func_12488() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %816 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %817 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %818 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %819 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %820 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %821 = %816.1;
  %822 = %817.1;
  %823 = %818.0;
  %824 = %819.1;
  %825 = %820.0;
  (%821, %822, %823, %824, %825)
}

def @func_18019() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %826 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %827 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %828 = %826.0;
  %829 = %827.0;
  (%828, %829)
}

def @func_2651() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %830 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %831 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %832 = %830.2;
  %833 = @func_2367() /* ty=Tensor[(576), float32] */;
  %834 = %831.0;
  (%832, %833, %834)
}

def @func_15150() -> Tensor[(16, 8, 11), float64] {
  @func_13135() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6847() -> (Tensor[(16, 8, 11), float64],) {
  %835 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %836 = %835.1;
  (%836,)
}

def @func_11868() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %837 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %838 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %839 = %837.0;
  %840 = %838.1;
  (%839, %840)
}

def @func_20379() -> (Tensor[(16, 8, 11), float64],) {
  %841 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %842 = %841.0;
  (%842,)
}

def @func_17492() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %843 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %844 = @func_11592() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %845 = %843.0;
  %846 = %844.0;
  (%845, %846)
}

def @func_1001() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %847 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  %849 = asin(%848) /* ty=Tensor[(16, 8, 11), float32] */;
  %850 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  (%849, %850)
}

def @func_1843() -> (Tensor[(16, 8, 11), float64],) {
  %851 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_15811() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %853 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %854 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %855 = %853.0;
  %856 = %854.0;
  (%855, %856)
}

def @func_1877() -> Tensor[(16, 8, 11), float64] {
  %857 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %857.0
}

def @func_9386(%var_9337: Tensor[(90), float32], %var_9338: Tensor[(350), float64], %var_9360: Tensor[(605), uint64], %var_9378: Tensor[(60), uint64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  %858 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %859 = cast(meta[relay.Constant][26] /* ty=Tensor[(98, 2), uint64] */, dtype="uint64") /* ty=Tensor[(98, 2), uint64] */;
  %860 = reshape(%859, newshape=[196]) /* ty=Tensor[(196), uint64] */;
  %861 = @func_7839(%860) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) */;
  %862 = cast(meta[relay.Constant][26] /* ty=Tensor[(98, 2), uint64] */, dtype="float32") /* ty=Tensor[(98, 2), float32] */;
  %863 = cast(%var_9337, dtype="float32") /* ty=Tensor[(90), float32] */;
  %864 = cast(%var_9338, dtype="float64") /* ty=Tensor[(350), float64] */;
  %865 = reshape(%863, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
  %866 = reshape(%864, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %867 = @func_8346(%865, %866) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
  %868 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %869 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %870 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %871 = reshape(%869, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %872 = reshape(%870, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %873 = @func_5266(%871, %872) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
  %874 = cast(%var_9378, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %875 = reshape(%874, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %876 = @func_5693(%875) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
  %877 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %878 = %858.0;
  %879 = %861.1;
  %880 = log10(%862) /* ty=Tensor[(98, 2), float32] */;
  %881 = %867.1;
  %882 = %868.0;
  %883 = %873.0;
  %884 = %876.1;
  (%877, %878, %879, %880, %881, %var_9337, %var_9338, %882, %883, %var_9360, %884, %var_9378)
}

def @func_2473(%var_2465: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
  %885 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %886 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %887 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %888 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %889 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %890 = cast(%var_2465, dtype="float32") /* ty=Tensor[(90), float32] */;
  %891 = reshape(%890, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %892 = %885.1;
  %893 = %886.0;
  %894 = %887.0;
  %895 = %888.0;
  %896 = @func_575() /* ty=Tensor[(576), float32] */;
  %897 = %889.0;
  %898 = @func_1674(%891) /* ty=Tensor[(6, 3, 5), float32] */;
  (%892, %893, %894, %895, %896, %897, %898, %var_2465)
}

def @func_12629() -> Tensor[(16, 8, 11), float32] {
  @func_5879() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_15003() -> Tensor[(16, 8, 11), float64] {
  %899 = @func_2664() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %899.1
}

def @func_13437() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %900 = @func_2001() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) */;
  %901 = @func_12555() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) */;
  %902 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %903 = %900.0;
  %904 = %901.0;
  %905 = %902.0;
  (%903, %904, %905)
}

def @func_14618() -> (Tensor[(16, 8, 11), float64],) {
  %906 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %907 = %906.0;
  (%907,)
}

def @func_9618() -> (Tensor[(16, 8, 11), float64],) {
  %908 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %909 = %908.0;
  (%909,)
}

def @func_15438() -> (Tensor[(16, 8, 11), float64],) {
  %910 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %911 = %910.0;
  (%911,)
}

def @func_3690() -> (Tensor[(16, 8, 11), float64],) {
  %912 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %913 = %912.0;
  (%913,)
}

def @func_10485() -> (Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %914 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %915 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %916 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %917 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
  %918 = %914.0;
  %919 = %915.0;
  %920 = %916.1;
  (%917, %918, %919, %920)
}

def @func_5496() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %921 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %922 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %923 = %921.0;
  %924 = %922.0;
  %925 = @func_1877() /* ty=Tensor[(16, 8, 11), float64] */;
  (%923, %924, %925)
}

def @func_2601() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %926 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %927 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %928 = %927.0;
  %929 = cast(%928, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %930 = %926.0;
  %931 = atanh(%929) /* ty=Tensor[(16, 8, 11), float64] */;
  (%930, %931)
}

def @func_2135() -> (Tensor[(16, 8, 11), float64],) {
  %932 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %933 = %932.0;
  (%933,)
}

def @func_2664() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %934 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %935 = %934.0;
  %936 = @func_1877() /* ty=Tensor[(16, 8, 11), float64] */;
  (%935, %936)
}

def @func_12989() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %937 = @func_11094() /* ty=Tensor[(16, 8, 11), float64] */;
  %938 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  (%937, %938)
}

def @func_6293() -> (Tensor[(576), float32],) {
  %939 = @func_575() /* ty=Tensor[(576), float32] */;
  (%939,)
}

def @func_13983() -> (Tensor[(16, 8, 11), float64],) {
  %940 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %941 = %940.0;
  (%941,)
}

def @func_881() -> Tensor[(16, 8, 11), float64] {
  %942 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %942.1
}

def @func_2691() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %943 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %944 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %945 = %943.0;
  %946 = %944.0;
  (%945, %946)
}

def @func_6835() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %947 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %948 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %949 = reshape(%948, newshape=[]) /* ty=uint64 */;
  %950 = @func_6272(%949) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %951 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %952 = reshape(%951, newshape=[]) /* ty=uint64 */;
  %953 = @func_6272(%952) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %954 = %947.1;
  %955 = %950.0;
  %956 = @func_575() /* ty=Tensor[(576), float32] */;
  %957 = %953.0;
  (%954, %955, meta[relay.Constant][27] /* ty=uint64 */, %956, %957)
}

def @func_1061() -> (Tensor[(16, 8, 11), float64],) {
  %958 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  (%958,)
}

def @func_561() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
  %959 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %960 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %961 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %962 = %959.0;
  %963 = %960.2;
  %964 = %961.2;
  (%962, %963, %964)
}

def @func_9975(%var_9962: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) {
  %965 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %966 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %967 = cast(%var_9962, dtype="float64") /* ty=Tensor[(360), float64] */;
  %968 = reshape(%967, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %969 = @func_3338(%968) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %970 = %965.0;
  %971 = %966.0;
  %972 = %969.0;
  (%970, %971, %972, %var_9962)
}

def @func_18346(%var_18337: Tensor[(208), int8]) -> (Tensor[(576), float32], Tensor[(15, 13, 14), float32], Tensor[(6, 7, 3), uint8], Tensor[(208), int8]) {
  %973 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %974 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
  %975 = %974.1;
  %976 = cast(%975, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %977 = cast(%var_18337, dtype="int8") /* ty=Tensor[(208), int8] */;
  %978 = reshape(%977, newshape=[208]) /* ty=Tensor[(208), int8] */;
  %979 = @func_7297(%978) /* ty=(Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %980 = %973.2;
  %981 = sigmoid(%976) /* ty=Tensor[(15, 13, 14), float32] */;
  %982 = %979.9;
  (%980, %981, %982, %var_18337)
}

def @func_9499() -> (Tensor[(16, 8, 11), float64],) {
  %983 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %984 = %983.0;
  (%984,)
}

def @func_6272(%var_6243: uint64) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
  %985 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %986 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %987 = cast(%var_6243, dtype="uint64") /* ty=uint64 */;
  %988 = reshape(%987, newshape=[]) /* ty=uint64 */;
  %989 = @func_4908(%988) /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */;
  %990 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %991 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %992 = cast(meta[relay.Constant][28] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %993 = reshape(%992, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %994 = @func_2473(%993) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
  %995 = %985.0;
  %996 = %986.0;
  %997 = %989.5;
  %998 = %990.0;
  %999 = %991.0;
  %1000 = %994.5;
  (%995, %996, %997, %var_6243, %998, %999, %1000, meta[relay.Constant][28] /* ty=Tensor[(90), float32] */)
}

def @func_924(%var_916: Tensor[(144), uint64]) -> (Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  %1001 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1002 = exp(%1001) /* ty=Tensor[(6, 11, 1), float32] */;
  %1003 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1007 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1008 = cast(%var_916, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1009 = cast(%var_916, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1010 = reshape(%1008, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1011 = reshape(%1009, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1012 = @func_839(%1010, %1011) /* ty=(Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1013 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1014 = power(%1005, %1006) /* ty=Tensor[(6, 11, ?), float32] */;
  %1015 = %1007.2;
  %1016 = %1012.0;
  %1017 = %1013.2;
  (%1014, %1015, %1016, %var_916, %1017)
}

def @func_1577() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %1018 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1019 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1020 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1021 = %1020.2;
  %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1023 = reshape(%1022, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %1024 = @func_83(%1023) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %1025 = %1018.0;
  %1026 = %1019.0;
  %1027 = %1024.0;
  (%1025, %1026, %1021, %1027)
}

def @func_15827() -> (Tensor[(16, 8, 11), float32], Tensor[(384), float64]) {
  %1028 = @func_11509() /* ty=(Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1029 = @func_12629() /* ty=Tensor[(16, 8, 11), float32] */;
  %1030 = %1028.3;
  (%1029, %1030)
}

def @func_10170(%var_10156: float32, %var_10157: Tensor[(14, 1, 2), float32]) -> (Tensor[(14, 1, 2), float32],) {
  %1031 = cast(%var_10156, dtype="float32") /* ty=float32 */;
  %1032 = cast(%var_10157, dtype="float32") /* ty=Tensor[(14, 1, 2), float32] */;
  %1033 = subtract(%1031, %1032) /* ty=Tensor[(14, 1, 2), float32] */;
  (%1033,)
}

def @func_17315() -> (Tensor[(16, 8, 11), float64],) {
  %1034 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_10069(%var_10062: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), bool] {
  %1036 = @func_6847() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1037 = %1036.0;
  %1038 = cast(%var_10062, dtype="bool") /* ty=Tensor[(16, 8, 11), bool] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="bool") /* ty=Tensor[(16, 8, 11), bool] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1040, %1041) /* ty=Tensor[(16, 8, 11), bool] */
}

def @func_5790(%var_5748: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) {
  %1042 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1043 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1044 = cast(%var_5748, dtype="uint64") /* ty=Tensor[(196), uint64] */;
  %1045 = reshape(%1044, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), uint64] */;
  %1046 = @func_3397(%1045) /* ty=(Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) */;
  %1047 = %1042.1;
  %1048 = %1043.2;
  %1049 = %1046.1;
  (%1047, %1048, %1049, %var_5748)
}

def @func_16580() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1050 = @func_11745() /* ty=(Tensor[(576), float32],) */;
  %1051 = @func_15565() /* ty=Tensor[(16, 8, 11), float64] */;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_3302() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1053 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1054 = %1053.0;
  %1055 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1054, %1055)
}

def @func_15094() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1056 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1057 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
  %1058 = @func_14961() /* ty=Tensor[(576), float32] */;
  %1059 = %1056.0;
  %1060 = %1057.0;
  (%1058, %1059, %1060)
}

def @func_7876() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1061 = @func_5065() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) */;
  %1062 = @func_4997() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1063 = %1061.0;
  %1064 = %1062.2;
  (%1063, %1064)
}

def @func_18271(%var_18253: Tensor[(16, 5, 13), uint8], %var_18254: Tensor[(16, 5, 13), uint8]) -> (Tensor[(16, 5, 13), uint8], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1065 = cast(%var_18254, dtype="uint8") /* ty=Tensor[(16, 5, 13), uint8] */;
  %1066 = shape_of(%var_18253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%var_18253, dtype="uint8") /* ty=Tensor[(16, 5, 13), uint8] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1069 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1070 = logical_xor(%1067, %1068) /* ty=Tensor[(16, 5, 13), uint8] */;
  %1071 = %1069.2;
  %1072 = @func_13270() /* ty=Tensor[(576), float32] */;
  (%1070, %1071, %1072)
}

def @func_15661(%var_15647: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
  %1073 = cast(%var_15647, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1074 = reshape(%1073, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %1075 = @func_11569() /* ty=Tensor[(16, 8, 11), float64] */;
  %1076 = @func_1674(%1074) /* ty=Tensor[(6, 3, 5), float32] */;
  (%1075, %1076, %var_15647)
}

def @func_19312(%var_19303: Tensor[(4, 8, 10), float64]) -> (Tensor[(4, 8, 10), float64],) {
  %1077 = cast(%var_19303, dtype="float64") /* ty=Tensor[(4, 8, 10), float64] */;
  %1078 = sqrt(%1077) /* ty=Tensor[(4, 8, 10), float64] */;
  (%1078,)
}

def @func_20276() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %1079 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1080 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1081 = reshape(%1080, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %1082 = @func_14522(%1081) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) */;
  %1083 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1084 = %1079.1;
  %1085 = %1082.0;
  %1086 = %1083.0;
  (%1084, %1085, meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */, %1086)
}

def @func_12662() -> Tensor[(576), float32] {
  @func_575() /* ty=Tensor[(576), float32] */
}

def @func_1711() -> Tensor[(4, 9, 16), float32] {
  @func_590() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_9755(%var_9728: Tensor[(3, 14, 12), int16], %var_9729: Tensor[(3, 14, 12), int16]) -> (Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) {
  %1087 = cast(%var_9729, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %1088 = shape_of(%var_9728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(%var_9728, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1091 = cast(%var_9729, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %1092 = multiply(%1089, %1090) /* ty=Tensor[(3, 14, 12), int16] */;
  %1093 = cosh(%1091) /* ty=Tensor[(3, 14, 12), float32] */;
  (%1092, %1093)
}

def @func_4431() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) {
  %1094 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1095 = cast(meta[relay.Constant][31] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1096 = cast(meta[relay.Constant][32] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1097 = reshape(%1095, newshape=[]) /* ty=uint64 */;
  %1098 = reshape(%1096, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
  %1099 = @func_3465(%1097, %1098) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1100 = %1094.0;
  %1101 = %1099.2;
  (%1100, %1101, meta[relay.Constant][31] /* ty=uint64 */, meta[relay.Constant][32] /* ty=Tensor[(60), uint64] */)
}

def @func_16476() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1102 = @func_15438() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1103 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %1104 = %1102.0;
  %1105 = %1103.2;
  (%1104, %1105)
}

def @func_1215(%var_1202: Tensor[(8, 18), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) {
  %1106 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1107 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1108 = cast(%var_1202, dtype="uint64") /* ty=Tensor[(8, 18), uint64] */;
  %1109 = reshape(%1108, newshape=[144]) /* ty=Tensor[(144), uint64] */;
  %1110 = @func_924(%1109) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %1111 = %1106.2;
  %1112 = %1107.0;
  %1113 = %1110.2;
  (%1111, %1112, %1113, %var_1202)
}

def @func_3397(%var_3369: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) {
  %1114 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 14, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2, 14, 1), uint64] */;
  %1115 = cast(%var_3369, dtype="uint64") /* ty=Tensor[(2, 14, 7), uint64] */;
  %1116 = cast(%var_3369, dtype="bool") /* ty=Tensor[(2, 14, 7), bool] */;
  %1117 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 14, 1), uint64] */, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %1118 = right_shift(%1114, %1115) /* ty=Tensor[(2, 14, 7), uint64] */;
  %1119 = logical_or(%1116, %1117) /* ty=Tensor[(2, 14, 7), bool] */;
  %1120 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  (%1118, %1119, %1120)
}

def @func_3771() -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) {
  %1121 = @func_2290() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %1122 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1123 = %1121.2;
  %1124 = %1122.0;
  (%1123, %1124)
}

def @func_5639() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1125 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1126 = @func_5426() /* ty=(Tensor[(576), float32],) */;
  %1127 = %1125.0;
  %1128 = %1126.0;
  (%1127, %1128)
}

def @func_4209(%var_4204: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(360), float64], Tensor[(5, 12, 6), float64]) {
  %1129 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1130 = cast(%var_4204, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1131 = reshape(%1130, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %1132 = @func_3338(%1131) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %1133 = %1132.0;
  %1134 = cast(%1133, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %1135 = %1129.0;
  %1136 = sigmoid(%1134) /* ty=Tensor[(5, 12, 6), float64] */;
  (%1135, %var_4204, %1136)
}

def @func_7223() -> (Tensor[(16, 8, 11), float64],) {
  %1137 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1137,)
}

def @func_2912() -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(3, 30), float32]) {
  %1138 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1139 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %1140 = reshape(%1139, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %1141 = %1138.0;
  %1142 = @func_1674(%1140) /* ty=Tensor[(6, 3, 5), float32] */;
  (%1141, %1142, meta[relay.Constant][34] /* ty=Tensor[(3, 30), float32] */)
}

def @func_12269() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1143 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  %1144 = @func_7137() /* ty=Tensor[(16, 8, 11), float32] */;
  (%1143, %1144)
}

def @func_14522(%var_14501: Tensor[(60), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) {
  %1145 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1146 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1147 = cast(%var_14501, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1148 = reshape(%1147, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %1149 = @func_5693(%1148) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
  %1150 = %1145.0;
  %1151 = %1146.0;
  %1152 = %1149.0;
  (%1150, %1151, %1152, %var_14501)
}

def @func_16798() -> (Tensor[(16, 9, ?), float32],) {
  %1153 = @func_16003() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %1154 = %1153.0;
  (%1154,)
}

def @func_2969() -> (Tensor[(16, 8, 11), float64],) {
  %1155 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1156 = %1155.1;
  (%1156,)
}

def @func_5426() -> (Tensor[(576), float32],) {
  %1157 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1158 = %1157.2;
  (%1158,)
}

def @func_12615() -> (Tensor[(16, 8, 11), float64],) {
  %1159 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_19654() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1161 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1162 = @func_18713() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %1163 = @func_14132() /* ty=Tensor[(16, 8, 11), float64] */;
  %1164 = %1161.0;
  %1165 = %1162.0;
  (%1163, %1164, %1165)
}

def @func_5814() -> Tensor[(16, 8, 11), float64] {
  %1166 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1166.1
}

def @func_2001() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) {
  %1167 = @func_1577() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %1168 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1169 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1170 = reshape(%1168, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1171 = reshape(%1169, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1172 = @func_839(%1170, %1171) /* ty=(Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1173 = %1167.1;
  %1174 = %1172.0;
  (%1173, %1174, meta[relay.Constant][35] /* ty=Tensor[(144), uint64] */)
}

def @func_1815() -> (Tensor[(576), float32],) {
  %1175 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1176 = %1175.1;
  (%1176,)
}

def @func_11952() -> (Tensor[(16, 8, 11), float64],) {
  %1177 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1177,)
}

def @func_6745() -> (Tensor[(16, 8, 11), float64],) {
  %1178 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1179 = %1178.1;
  (%1179,)
}

def @func_10394() -> (Tensor[(14, 10, 1), float64],) {
  %1180 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
  (%1180,)
}

def @func_13804() -> (Tensor[(576), float32],) {
  %1181 = @func_9584() /* ty=Tensor[(576), float32] */;
  (%1181,)
}

def @func_14444() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1182 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1183 = @func_12901() /* ty=Tensor[(576), float32] */;
  %1184 = %1182.0;
  (%1183, %1184)
}

def @func_16762(%var_16736: Tensor[(8, 2, 6), float64], %var_16750: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), float64] {
  %1185 = cast(%var_16736, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1186 = acosh(%1185) /* ty=Tensor[(8, 2, 6), float64] */;
  %1187 = cast(%var_16750, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1186, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1189, %1190) /* ty=Tensor[(8, 2, 6), float64] */
}

def @func_10933() -> Tensor[(16, 8, 11), float32] {
  %1191 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1191.0
}

def @func_20327(%var_20319: Tensor[(6, 11, 9), float32]) -> Tensor[(6, 11, 9), float32] {
  %1192 = cast(%var_20319, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %1193 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(6, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1194, %1195) /* ty=Tensor[(6, 11, 9), float32] */
}

def @func_5879() -> Tensor[(16, 8, 11), float32] {
  %1196 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1197 = %1196.0;
  %1198 = cast(%1197, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  acosh(%1198) /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_5693(%var_5683: Tensor[(60), uint64]) -> (Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  %1199 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1200 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %1201 = cast(False /* ty=bool */, dtype="uint64") /* ty=uint64 */;
  %1202 = cast(%var_5683, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1203 = reshape(%1201, newshape=[]) /* ty=uint64 */;
  %1204 = reshape(%1202, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
  %1205 = @func_3465(%1203, %1204) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1206 = logical_or(%1199, %1200) /* ty=Tensor[(4, 4, 13), bool] */;
  %1207 = %1205.0;
  (%1206, %1207, %var_5683)
}

def @func_18871() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64]) {
  %1208 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1209 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1210 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1211 = %1208.0;
  %1212 = @func_18654() /* ty=Tensor[(576), float32] */;
  %1213 = %1209.2;
  %1214 = %1210.0;
  %1215 = @func_18419() /* ty=Tensor[(605), uint64] */;
  (%1211, %1212, %1213, %1214, %1215)
}

def @func_1645() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1216 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1217 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1218 = %1216.2;
  %1219 = %1217.0;
  (%1218, %1219)
}

def @func_17926() -> Tensor[(16, 8, 11), float32] {
  %1220 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %1220.2
}

def @func_12889() -> (Tensor[(576), float32], Tensor[(14, 10, 1), float64]) {
  %1221 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1222 = %1221.0;
  %1223 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
  (%1222, %1223)
}

def @func_9551() -> (Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) {
  %1224 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1225 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %1226 = %1224.2;
  %1227 = cast(%1226, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %1228 = reshape(%1227, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %1229 = %1225.0;
  %1230 = @func_3505(%1228) /* ty=Tensor[(16, 8, 11), uint32] */;
  (%1226, %1229, %1230)
}

def @func_17899() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(72, 2), uint64], Tensor[(16, 8, 11), float64]) {
  %1231 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1232 = cast(meta[relay.Constant][38] /* ty=Tensor[(72, 2), uint64] */, dtype="uint64") /* ty=Tensor[(72, 2), uint64] */;
  %1233 = reshape(%1232, newshape=[1, 144]) /* ty=Tensor[(1, 144), uint64] */;
  %1234 = @func_6670(%1233) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) */;
  %1235 = %1231.0;
  %1236 = %1234.0;
  %1237 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1235, %1236, meta[relay.Constant][38] /* ty=Tensor[(72, 2), uint64] */, %1237)
}

def @func_8731() -> (Tensor[(16, 8, 11), float64],) {
  %1238 = @func_5210() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %1239 = %1238.2;
  (%1239,)
}

def @func_8052() -> Tensor[(4, 9, 16), float32] {
  @func_1711() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_13361() -> Tensor[(16, 8, 11), float64] {
  @func_12100() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_16003() -> (Tensor[(16, 9, ?), float32],) {
  %1240 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_476() -> (Tensor[(16, 8, 11), float64],) {
  %1242 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1243 = %1242.0;
  (%1243,)
}

def @func_5392(%var_5356: Tensor[(6, 4, 16), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) {
  %1244 = cast(meta[relay.Constant][39] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1245 = reshape(%1244, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %1246 = @func_2473(%1245) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
  %1247 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1248 = cast(%var_5356, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %1249 = log10(%1248) /* ty=Tensor[(6, 4, 16), float64] */;
  %1250 = cast(%1249, dtype="int64") /* ty=Tensor[(6, 4, 16), int64] */;
  %1251 = shape_of(%var_5356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1252 = cast(%var_5356, dtype="int64") /* ty=Tensor[(6, 4, 16), int64] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1254 = left_shift(%1252, %1253) /* ty=Tensor[(6, 4, 16), int64] */;
  %1255 = cast(%1254, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1256 = shape_of(%1249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1249, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1259 = %1246.0;
  %1260 = %1247.0;
  %1261 = logical_and(%1257, %1258) /* ty=Tensor[(6, 4, 16), bool] */;
  (%1259, meta[relay.Constant][39] /* ty=Tensor[(90), float32] */, %1260, %1261)
}

def @func_14420() -> Tensor[(16, 8, 11), float64] {
  %1262 = @func_11423() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1262.0
}

def @func_19224() -> (Tensor[(16, 8, 11), float64],) {
  %1263 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1264 = %1263.0;
  (%1264,)
}

def @func_3886() -> (Tensor[(16, 8, 11), float32],) {
  %1265 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %1266 = %1265.1;
  (%1266,)
}

def @func_19105() -> Tensor[(16, 8, 11), float64] {
  @func_10697() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_12595() -> Tensor[(576), float32] {
  %1267 = @func_8918() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1267.1
}

def @func_5336(%var_5330: Tensor[(8, 9, 7), float32]) -> (Tensor[(8, 9, 7), float32],) {
  %1268 = cast(%var_5330, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %1269 = sin(%1268) /* ty=Tensor[(8, 9, 7), float32] */;
  (%1269,)
}

def @func_590() -> Tensor[(4, 9, 16), float32] {
  %1270 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1270.1
}

def @func_18780() -> Tensor[(16, 8, 11), float64] {
  %1271 = @func_8731() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1271.0
}

def @func_19248() -> (Tensor[(576), float32],) {
  %1272 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1273 = %1272.1;
  (%1273,)
}

def @func_7675(%var_7654: Tensor[(5, 13, 1), uint16], %var_7655: Tensor[(5, 13, 1), uint16]) -> (Tensor[(5, 13, ?), uint16], Tensor[(384), float64], Tensor[(384), float64]) {
  %1274 = cast(%var_7655, dtype="uint16") /* ty=Tensor[(5, 13, 1), uint16] */;
  %1275 = shape_of(%var_7654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1276 = cast(%var_7654, dtype="uint16") /* ty=Tensor[(5, 13, 1), uint16] */;
  %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1278 = cast(meta[relay.Constant][40] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1279 = reshape(%1278, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %1280 = @func_6886(%1279) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
  %1281 = multiply(%1276, %1277) /* ty=Tensor[(5, 13, ?), uint16] */;
  %1282 = %1280.2;
  (%1281, %1282, meta[relay.Constant][40] /* ty=Tensor[(384), float64] */)
}

def @func_10023() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1283 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1284 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1285 = %1283.0;
  %1286 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  %1287 = %1284.2;
  (%1285, %1286, %1287)
}

def @func_19998() -> (Tensor[(16, 8, 11), float32],) {
  %1288 = @func_10023() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1289 = %1288.2;
  (%1289,)
}

def @func_8346(%var_8329: Tensor[(9, 5, 2), float32], %var_8335: Tensor[(175, 2), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) {
  %1290 = cast(meta[relay.Constant][41] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %1291 = cast(%var_8335, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %1292 = reshape(%1290, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint64] */;
  %1293 = reshape(%1291, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1294 = @func_6175(%1292, %1293) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) */;
  %1295 = cast(%var_8329, dtype="float32") /* ty=Tensor[(9, 5, 2), float32] */;
  %1296 = atanh(%1295) /* ty=Tensor[(9, 5, 2), float32] */;
  %1297 = cast(%1296, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
  %1298 = %1294.0;
  %1299 = erf(%1297) /* ty=Tensor[(9, 5, 2), float64] */;
  (%1298, meta[relay.Constant][41] /* ty=Tensor[(216), uint64] */, %var_8335, %1299)
}

def @func_12923() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1300 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1301 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1302 = %1300.0;
  %1303 = %1301.0;
  (%1302, %1303)
}

def @func_6338() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1304 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1305 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1306 = @func_4771() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1307 = %1304.1;
  %1308 = %1305.0;
  %1309 = %1306.2;
  (%1307, %1308, %1309)
}

def @func_3146(%var_3114: Tensor[(8, 100), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 16, 5), float64], Tensor[(8, 100), float32]) {
  %1310 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1311 = cast(%var_3114, dtype="float32") /* ty=Tensor[(8, 100), float32] */;
  %1312 = reshape(%1311, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), float32] */;
  %1313 = @func_2051(%1312) /* ty=(Tensor[(10, 16, 5), float32],) */;
  %1314 = %1313.0;
  %1315 = cast(%var_3114, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
  %1316 = shape_of(%1314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1317 = cast(%1314, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1319 = cast(%var_3114, dtype="float32") /* ty=Tensor[(8, 100), float32] */;
  %1320 = %1310.0;
  %1321 = floor_divide(%1317, %1318) /* ty=Tensor[(10, 16, 5), float64] */;
  %1322 = log(%1319) /* ty=Tensor[(8, 100), float32] */;
  (%1320, %1321, %1322)
}

def @func_20584() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1323 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1324 = @func_15017() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1325 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %1326 = %1323.0;
  %1327 = %1324.0;
  %1328 = %1325.0;
  (%1326, %1327, %1328)
}

def @func_11175() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1329 = @func_7443() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1330 = @func_10933() /* ty=Tensor[(16, 8, 11), float32] */;
  %1331 = %1329.0;
  (%1330, %1331)
}

def @func_5414() -> Tensor[(16, 8, 11), float64] {
  %1332 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1332.1
}

def @func_11535() -> Tensor[(4, 9, 16), float32] {
  @func_8052() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_1435(%var_1421: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1333 = cast(%var_1421, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %1334 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1335 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1336 = exp(%1333) /* ty=Tensor[(5, 14, 4), float64] */;
  %1337 = %1334.0;
  %1338 = %1335.0;
  (%1336, %1337, %1338)
}

def @func_20309(%var_20291: Tensor[(5, 13, 15), float64], %var_20300: Tensor[(350), float64]) -> (Tensor[(5, 13, 15), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  %1339 = cast(%var_20291, dtype="float64") /* ty=Tensor[(5, 13, 15), float64] */;
  %1340 = log(%1339) /* ty=Tensor[(5, 13, 15), float64] */;
  %1341 = cast(%1340, dtype="float32") /* ty=Tensor[(5, 13, 15), float32] */;
  %1342 = cast(%var_20300, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1343 = reshape(%1342, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %1344 = @func_5591(%1343) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1345 = cos(%1341) /* ty=Tensor[(5, 13, 15), float32] */;
  %1346 = %1344.1;
  (%1345, %1346, %var_20300)
}

def @func_8084() -> Tensor[(576), float32] {
  %1347 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1347.0
}

def @func_6886(%var_6875: Tensor[(384), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) {
  %1348 = cast(%var_6875, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1349 = reshape(%1348, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float64] */;
  %1350 = @func_5392(%1349) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) */;
  %1351 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  %1352 = %1350.3;
  (%1351, %1352, %var_6875)
}

def @func_11745() -> (Tensor[(576), float32],) {
  %1353 = @func_9584() /* ty=Tensor[(576), float32] */;
  (%1353,)
}

def @func_18447() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1354 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1355 = @func_7443() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1356 = %1354.1;
  %1357 = %1355.0;
  (%1356, %1357)
}

def @main(%var_20589: Tensor[(8, 13, 5), float32]) -> (Tensor[(8, 13, 5), float32], Tensor[(8, 13, 5), uint64], Tensor[(8, 13, 5), float32]) {
  %1358 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %1359 = shape_of(%var_20589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1360 = cast(%var_20589, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1362 = cast(%var_20589, dtype="uint64") /* ty=Tensor[(8, 13, 5), uint64] */;
  %1363 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(8, 13, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1364 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 13, 5), float32] */, dtype="uint64") /* ty=Tensor[(8, 13, 5), uint64] */;
  %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1366 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %1367 = floor_divide(%1360, %1361) /* ty=Tensor[(8, 13, 5), float32] */;
  %1368 = minimum(%1364, %1365) /* ty=Tensor[(8, 13, 5), uint64] */;
  %1369 = tan(%1366) /* ty=Tensor[(8, 13, 5), float32] */;
  (%1367, %1368, %1369)
}

def @func_12730() -> Tensor[(16, 8, 11), float32] {
  %1370 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1370.0
}

def @func_14932() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1371 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1372 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1373 = %1371.0;
  %1374 = %1372.0;
  (%1373, %1374)
}

def @func_14132() -> Tensor[(16, 8, 11), float64] {
  %1375 = @func_13182() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) */;
  %1375.1
}

def @func_3465(%var_3429: uint64, %var_3430: Tensor[(5, 1, 12), uint64]) -> (Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1376 = cast(%var_3429, dtype="uint64") /* ty=uint64 */;
  %1377 = cast(%var_3430, dtype="uint64") /* ty=Tensor[(5, 1, 12), uint64] */;
  %1378 = subtract(%1376, %1377) /* ty=Tensor[(5, 1, 12), uint64] */;
  %1379 = cast(%1378, dtype="float64") /* ty=Tensor[(5, 1, 12), float64] */;
  %1380 = shape_of(%var_3430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1381 = cast(%var_3430, dtype="float64") /* ty=Tensor[(5, 1, 12), float64] */;
  %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1383 = mod(%1381, %1382) /* ty=Tensor[(5, ?, 12), float64] */;
  %1384 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  %1385 = @func_2367() /* ty=Tensor[(576), float32] */;
  (%1383, %1384, %1385)
}

def @func_4291() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1386 = @func_4128() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1387 = @func_2115() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %1388 = %1387.1;
  %1389 = cast(%1388, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %1390 = @func_2115() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %1391 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1392 = %1386.0;
  %1393 = acos(%1389) /* ty=Tensor[(16, 8, 11), float64] */;
  %1394 = %1390.0;
  %1395 = %1391.0;
  (%1392, %1393, %1394, %1395)
}

def @func_797() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1396 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1397 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1398 = %1396.0;
  %1399 = %1397.0;
  %1400 = @func_575() /* ty=Tensor[(576), float32] */;
  (%1398, %1399, %1400)
}

def @func_17792(%var_17787: Tensor[(576), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float64]) {
  %1401 = @func_10485() /* ty=(Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1402 = cast(%var_17787, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1403 = reshape(%1402, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %1404 = @func_83(%1403) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %1405 = %1404.0;
  %1406 = cast(%1405, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
  %1407 = %1401.2;
  %1408 = @func_10697() /* ty=Tensor[(16, 8, 11), float64] */;
  %1409 = acos(%1406) /* ty=Tensor[(4, 9, 16), float64] */;
  (%1407, %1408, %var_17787, %1409)
}

def @func_9898(%var_9892: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) {
  %1410 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1411 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1412 = cast(%var_9892, dtype="float64") /* ty=Tensor[(910), float64] */;
  %1413 = reshape(%1412, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), float64] */;
  %1414 = @func_8826(%1413) /* ty=(Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) */;
  %1415 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1416 = %1410.0;
  %1417 = %1411.0;
  %1418 = %1414.1;
  %1419 = %1415.4;
  (%1416, %1417, %1418, %var_9892, %1419)
}

def @func_16324(%var_16290: int8, %var_16291: Tensor[(3, 16, 1), int8]) -> (Tensor[(3, 16, 1), int32], Tensor[(3, 16, ?), float64]) {
  %1420 = cast(%var_16290, dtype="int8") /* ty=int8 */;
  %1421 = cast(%var_16291, dtype="int8") /* ty=Tensor[(3, 16, 1), int8] */;
  %1422 = subtract(%1420, %1421) /* ty=Tensor[(3, 16, 1), int8] */;
  %1423 = cast(%var_16290, dtype="bool") /* ty=bool */;
  %1424 = cast(%1422, dtype="bool") /* ty=Tensor[(3, 16, 1), bool] */;
  %1425 = equal(%1423, %1424) /* ty=Tensor[(3, 16, 1), bool] */;
  %1426 = cast(%1425, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %1427 = tan(%1426) /* ty=Tensor[(3, 16, 1), float64] */;
  %1428 = cast(%1427, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %1429 = acos(%1428) /* ty=Tensor[(3, 16, 1), float32] */;
  %1430 = cast(%1429, dtype="int32") /* ty=Tensor[(3, 16, 1), int32] */;
  %1431 = cast(%var_16290, dtype="int32") /* ty=int32 */;
  %1432 = cast(%1425, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %1433 = shape_of(%1429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1434 = cast(%1429, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %1435 = dyn.reshape(%1432, %1433, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1436 = logical_xor(%1430, %1431) /* ty=Tensor[(3, 16, 1), int32] */;
  %1437 = maximum(%1434, %1435) /* ty=Tensor[(3, 16, ?), float64] */;
  (%1436, %1437)
}

def @func_4189() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1438 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1439 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1440 = %1438.0;
  %1441 = %1439.0;
  (%1440, %1441)
}

def @func_12817(%var_12776: Tensor[(10, 15, 15), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 15, 15), float32], Tensor[(576), float32]) {
  %1442 = cast(%var_12776, dtype="float64") /* ty=Tensor[(10, 15, 15), float64] */;
  %1443 = sigmoid(%1442) /* ty=Tensor[(10, 15, 15), float64] */;
  %1444 = cast(%1443, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %1445 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %1446 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %1447 = rsqrt(%1444) /* ty=Tensor[(10, 15, 15), float32] */;
  %1448 = %1445.0;
  (%1446, %1447, %1448)
}

def @func_18419() -> Tensor[(605), uint64] {
  %1449 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %1449.2
}

def @func_9584() -> Tensor[(576), float32] {
  %1450 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1450.0
}

def @func_9031(%var_8985: Tensor[(15, 3, 11), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(160), float32], Tensor[(15, 3, 11), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1451 = cast(meta[relay.Constant][43] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %1452 = reshape(%1451, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %1453 = cast(%var_8985, dtype="float32") /* ty=Tensor[(15, 3, 11), float32] */;
  %1454 = exp(%1453) /* ty=Tensor[(15, 3, 11), float32] */;
  %1455 = cast(%var_8985, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %1456 = shape_of(%1454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1457 = cast(%1454, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %1458 = dyn.reshape(%1455, %1456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1459 = @func_8892() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %1460 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1461 = @func_7587(%1452) /* ty=Tensor[(10, 16, 1), float32] */;
  %1462 = greater(%1457, %1458) /* ty=Tensor[(15, 3, 11), bool] */;
  %1463 = %1459.1;
  %1464 = %1460.0;
  (%1461, meta[relay.Constant][43] /* ty=Tensor[(160), float32] */, %1462, %1463, %1464)
}

def @func_16911(%var_16845: Tensor[(36, 10), float64], %var_16855: Tensor[(36, 10), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(5, 12, 6), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(36, 10), float32]) {
  %1465 = @func_13728() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1466 = @func_16676() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1467 = cast(%var_16845, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
  %1468 = reshape(%1467, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %1469 = @func_3338(%1468) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %1470 = %1469.0;
  %1471 = cast(%1470, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %1472 = reshape(%1471, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %1473 = @func_9975(%1472) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) */;
  %1474 = cast(%var_16855, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %1475 = shape_of(%var_16845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1476 = cast(%var_16845, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1478 = less_equal(%1476, %1477) /* ty=Tensor[(36, 10), bool] */;
  %1479 = cast(%1478, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %1480 = %1465.2;
  %1481 = %1466.0;
  %1482 = %1473.0;
  %1483 = @func_12629() /* ty=Tensor[(16, 8, 11), float32] */;
  %1484 = log2(%1479) /* ty=Tensor[(36, 10), float32] */;
  (%1480, %1481, %1470, %1482, %1483, %1484)
}

def @func_14337() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1485 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1486 = @func_8084() /* ty=Tensor[(576), float32] */;
  %1487 = %1485.0;
  (%1486, %1487)
}

def @func_11509() -> (Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1488 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %1489 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408), float64] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %1490 = reshape(%1489, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %1491 = @func_1127(%1490) /* ty=(Tensor[(16, 8, 11), int16],) */;
  %1492 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1493 = reshape(%1492, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %1494 = @func_6886(%1493) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
  %1495 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %1496 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1497 = %1488.3;
  %1498 = %1491.0;
  %1499 = %1494.2;
  %1500 = %1495.1;
  %1501 = %1496.0;
  (%1497, %1498, meta[relay.Constant][44] /* ty=Tensor[(1408), float64] */, %1499, meta[relay.Constant][45] /* ty=Tensor[(384), float64] */, %1500, %1501)
}

def @func_7320() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) {
  %1502 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1503 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %1504 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1505 = %1502.0;
  %1506 = %1503.0;
  %1507 = %1504.0;
  (%1505, %1506, %1507)
}

def @func_7329() -> Tensor[(14, 10, 1), float64] {
  %1508 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 1), float64] */;
  rsqrt(%1508) /* ty=Tensor[(14, 10, 1), float64] */
}

def @func_575() -> Tensor[(576), float32] {
  %1509 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1509.1
}

def @func_18100(%var_18094: Tensor[(15, 11, 11), uint8]) -> (Tensor[(15, 11, 11), uint8],) {
  %1510 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 11, 11), uint8] */, dtype="uint8") /* ty=Tensor[(15, 11, 11), uint8] */;
  %1511 = shape_of(%var_18094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1512 = cast(%var_18094, dtype="uint8") /* ty=Tensor[(15, 11, 11), uint8] */;
  %1513 = dyn.reshape(%1510, %1511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1514 = minimum(%1512, %1513) /* ty=Tensor[(15, 11, 11), uint8] */;
  (%1514,)
}

def @func_18955() -> Tensor[(576), float32] {
  @func_14961() /* ty=Tensor[(576), float32] */
}

def @func_13060() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1515 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1516 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1517 = %1515.0;
  %1518 = %1516.0;
  (%1517, %1518)
}

def @func_14564() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
  %1519 = @func_11535() /* ty=Tensor[(4, 9, 16), float32] */;
  %1520 = cast(%1519, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %1521 = sin(%1520) /* ty=Tensor[(4, 9, 16), float32] */;
  %1522 = @func_7364() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1521, %1522)
}

def @func_4499() -> Tensor[(16, 8, 11), float64] {
  %1523 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1523.1
}

def @func_17944() -> (Tensor[(605), uint64], Tensor[(576), float32]) {
  %1524 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %1525 = @func_17103() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %1526 = %1524.2;
  %1527 = %1525.1;
  (%1526, %1527)
}

def @func_6570() -> (Tensor[(16, 9, ?), float32],) {
  %1528 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1529 = %1528.1;
  %1530 = cast(%1529, dtype="float32") /* ty=Tensor[(16, 9, ?), float32] */;
  %1531 = log(%1530) /* ty=Tensor[(16, 9, ?), float32] */;
  (%1531,)
}

def @func_7297(%var_7238: Tensor[(208), int8]) -> (Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1532 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %1533 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1534 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %1535 = dyn.reshape(%1532, %1533, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1536 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1537 = cast(%var_7238, dtype="int8") /* ty=Tensor[(208), int8] */;
  %1538 = reshape(%1536, newshape=[]) /* ty=int8 */;
  %1539 = reshape(%1537, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), int8] */;
  %1540 = cast(meta[relay.Constant][51] /* ty=Tensor[(1408), float64] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %1541 = reshape(%1540, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %1542 = @func_1291(%1541) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %1543 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1544 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %1545 = reshape(%1544, newshape=[]) /* ty=uint64 */;
  %1546 = @func_4908(%1545) /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */;
  %1547 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 7, 3), int8] */, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %1548 = cos(%1547) /* ty=Tensor[(6, 7, 3), float32] */;
  %1549 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 7, 3), int8] */, dtype="uint8") /* ty=Tensor[(6, 7, 3), uint8] */;
  %1550 = shape_of(%1548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1551 = cast(%1548, dtype="uint8") /* ty=Tensor[(6, 7, 3), uint8] */;
  %1552 = dyn.reshape(%1549, %1550, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1553 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1554 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1555 = bitwise_xor(%1534, %1535) /* ty=Tensor[(6, 7, 3), int8] */;
  %1556 = @func_3601(%1538, %1539) /* ty=Tensor[(4, 13, 4), int8] */;
  %1557 = %1542.1;
  %1558 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %1559 = %1543.0;
  %1560 = %1546.2;
  %1561 = right_shift(%1551, %1552) /* ty=Tensor[(6, 7, 3), uint8] */;
  %1562 = %1553.0;
  %1563 = %1554.4;
  (%1555, %1556, meta[relay.Constant][50] /* ty=int8 */, %var_7238, %1557, meta[relay.Constant][51] /* ty=Tensor[(1408), float64] */, %1558, %1559, %1560, %1561, %1562, %1563)
}

def @func_83(%var_78: Tensor[(4, 9, 16), float32]) -> (Tensor[(4, 9, 16), float32],) {
  %1564 = cast(%var_78, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %1565 = cos(%1564) /* ty=Tensor[(4, 9, 16), float32] */;
  (%1565,)
}

def @func_4771() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1566 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1567 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1568 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1569 = @func_575() /* ty=Tensor[(576), float32] */;
  %1570 = %1566.4;
  %1571 = %1567.0;
  %1572 = %1568.0;
  (%1569, %1570, %1571, %1572)
}

def @func_1774() -> (Tensor[(16, 8, 11), float64],) {
  %1573 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1574 = %1573.0;
  (%1574,)
}

def @func_8892() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %1575 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1576 = %1575.2;
  %1577 = @func_6208() /* ty=Tensor[(576), float32] */;
  (%1576, %1577)
}

def @func_7137() -> Tensor[(16, 8, 11), float32] {
  %1578 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1578.0
}

def @func_17060() -> (Tensor[(16, 8, 11), float64],) {
  %1579 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1580 = %1579.0;
  (%1580,)
}

def @func_20533() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), bool], Tensor[(576), float32]) {
  %1581 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1582 = %1581.1;
  %1583 = cast(%1582, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %1584 = reshape(%1583, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %1585 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1586 = @func_10069(%1584) /* ty=Tensor[(16, 8, 11), bool] */;
  %1587 = %1585.2;
  (%1582, %1586, %1587)
}

def @func_15052() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1588 = @func_14086() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1589 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1590 = %1588.2;
  %1591 = %1589.1;
  (%1590, %1591)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_477() -> (Tensor[(16, 8, 11), float64],) {
  %2 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %0 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_16799() -> (Tensor[(16, 9, ?), float32],) {
  %5 = fn () -> (Tensor[(16, 9, ?), float32],) {
    %3 = @func_16003() /* ty=(Tensor[(16, 9, ?), float32],) */;
    %4 = %3.0;
    (%4,)
  };
  %5() /* ty=(Tensor[(16, 9, ?), float32],) */
}

def @func_5065() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) {
  %6 = @func_4431() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %8 = reshape(%7, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
  %9 = @func_1215(%8) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
  %10 = %6.1;
  %11 = %9.1;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(144), uint64] */)
}

def @func_9392(%var_9388: Tensor[(90), float32], %var_9389: Tensor[(350), float64], %var_9390: Tensor[(605), uint64], %var_9391: Tensor[(60), uint64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  @func_9386(%var_9388, %var_9389, %var_9390, %var_9391) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */
}

def @func_9898(%var_9892: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) {
  %12 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %13 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %14 = cast(%var_9892, dtype="float64") /* ty=Tensor[(910), float64] */;
  %15 = reshape(%14, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), float64] */;
  %16 = @func_8826(%15) /* ty=(Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) */;
  %17 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %18 = %12.0;
  %19 = %13.0;
  %20 = %16.1;
  %21 = %17.4;
  (%18, %19, %20, %var_9892, %21)
}

def @func_15680() -> (Tensor[(2, 12, 11), float32], Tensor[(576), float32]) {
  %26 = fn () -> (Tensor[(2, 12, 11), float32], Tensor[(576), float32]) {
    %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
    %23 = @func_11745() /* ty=(Tensor[(576), float32],) */;
    %24 = erf(%22) /* ty=Tensor[(2, 12, 11), float32] */;
    %25 = %23.0;
    (%24, %25)
  };
  %26() /* ty=(Tensor[(2, 12, 11), float32], Tensor[(576), float32]) */
}

def @func_3886() -> (Tensor[(16, 8, 11), float32],) {
  %27 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %28 = %27.1;
  (%28,)
}

def @func_5594(%var_5592: Tensor[(5, 10, 7), float64]) -> (Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_5591(%var_5592) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_10137(%var_10136: Tensor[(1, 90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1, 90), float32], Tensor[(576), float32]) {
  %36 = fn (%var_10113: Tensor[(1, 90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1, 90), float32], Tensor[(576), float32]) {
    %29 = cast(%var_10113, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
    %30 = reshape(%29, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %31 = @func_8199(%30) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
    %32 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %33 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
    %34 = %31.1;
    %35 = %32.0;
    (%33, %34, %var_10113, %35)
  };
  %36(%var_10136) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1, 90), float32], Tensor[(576), float32]) */
}

def @func_5395(%var_5393: Tensor[(6, 4, 16), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) {
  @func_5392(%var_5393) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) */
}

def @func_12215(%var_12203: Tensor[(16, 9, 14), uint64]) -> (Tensor[(16, 9, 14), uint64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %37 = cast(%var_12203, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %38 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(16, 9, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 9, 14), uint64] */, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %41 = @func_5496() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %42 = multiply(%39, %40) /* ty=Tensor[(16, 9, 14), uint64] */;
  %43 = %41.0;
  %44 = @func_6208() /* ty=Tensor[(576), float32] */;
  (%42, %43, %44)
}

def @func_17792(%var_17787: Tensor[(576), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float64]) {
  %45 = @func_10485() /* ty=(Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %46 = cast(%var_17787, dtype="float32") /* ty=Tensor[(576), float32] */;
  %47 = reshape(%46, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %48 = @func_83(%47) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %49 = %48.0;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
  %51 = %45.2;
  %52 = @func_10697() /* ty=Tensor[(16, 8, 11), float64] */;
  %53 = acos(%50) /* ty=Tensor[(4, 9, 16), float64] */;
  (%51, %52, %var_17787, %53)
}

def @func_10326() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %62 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %54 = @func_2290() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
    %55 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %56 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %57 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
    %58 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
    %59 = %54.3;
    %60 = %55.0;
    %61 = %56.0;
    (%57, %58, %59, %60, %61)
  };
  %62() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_16646() -> (Tensor[(16, 8, 11), float64],) {
  %65 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %63 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
    %64 = %63.0;
    (%64,)
  };
  %65() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_2290() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  %66 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %68 = reshape(%67, newshape=[144]) /* ty=Tensor[(144), uint64] */;
  %69 = @func_924(%68) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
  %70 = %66.1;
  %71 = %69.2;
  %72 = @func_575() /* ty=Tensor[(576), float32] */;
  (%70, %71, meta[relay.Constant][3] /* ty=Tensor[(144), uint64] */, %72)
}

def @func_19984() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(4, 8, 10), float64], Tensor[(320), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
  %73 = @func_13601() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %75 = reshape(%74, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float64] */;
  %76 = @func_19312(%75) /* ty=(Tensor[(4, 8, 10), float64],) */;
  %77 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %78 = @func_11094() /* ty=Tensor[(16, 8, 11), float64] */;
  %79 = @func_14420() /* ty=Tensor[(16, 8, 11), float64] */;
  %80 = %73.0;
  %81 = %76.0;
  %82 = @func_11535() /* ty=Tensor[(4, 9, 16), float32] */;
  %83 = %77.0;
  (%78, %79, %80, %81, meta[relay.Constant][4] /* ty=Tensor[(320), float64] */, %82, %83)
}

def @func_2653() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_3565() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_13833() -> (Tensor[(16, 8, 11), float64],) {
  %84 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %85 = %84.1;
  (%85,)
}

def @func_8893() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %89 = fn () -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
    %86 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
    %87 = %86.2;
    %88 = @func_6208() /* ty=Tensor[(576), float32] */;
    (%87, %88)
  };
  %89() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */
}

def @func_5641() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_12851() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %94 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %90 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %91 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %92 = %90.3;
    %93 = %91.2;
    (%92, %93)
  };
  %94() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_13135() -> Tensor[(16, 8, 11), float64] {
  @func_1877() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_14961() -> Tensor[(576), float32] {
  %95 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %95.0
}

def @func_9386(%var_9337: Tensor[(90), float32], %var_9338: Tensor[(350), float64], %var_9360: Tensor[(605), uint64], %var_9378: Tensor[(60), uint64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  %96 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(98, 2), uint64] */, dtype="uint64") /* ty=Tensor[(98, 2), uint64] */;
  %98 = reshape(%97, newshape=[196]) /* ty=Tensor[(196), uint64] */;
  %99 = @func_7839(%98) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) */;
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(98, 2), uint64] */, dtype="float32") /* ty=Tensor[(98, 2), float32] */;
  %101 = cast(%var_9337, dtype="float32") /* ty=Tensor[(90), float32] */;
  %102 = cast(%var_9338, dtype="float64") /* ty=Tensor[(350), float64] */;
  %103 = reshape(%101, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
  %104 = reshape(%102, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %105 = @func_8346(%103, %104) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
  %106 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %107 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %108 = cast(%var_9360, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %109 = reshape(%107, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %110 = reshape(%108, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %111 = @func_5266(%109, %110) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
  %112 = cast(%var_9378, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %113 = reshape(%112, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %114 = @func_5693(%113) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
  %115 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %116 = %96.0;
  %117 = %99.1;
  %118 = log10(%100) /* ty=Tensor[(98, 2), float32] */;
  %119 = %105.1;
  %120 = %106.0;
  %121 = %111.0;
  %122 = %114.1;
  (%115, %116, %117, %118, %119, %var_9337, %var_9338, %120, %121, %var_9360, %122, %var_9378)
}

def @func_86(%var_84: Tensor[(4, 9, 16), float32]) -> (Tensor[(4, 9, 16), float32],) {
  @func_83(%var_84) /* ty=(Tensor[(4, 9, 16), float32],) */
}

def @func_3898() -> (Tensor[(16, 8, 11), float64],) {
  %123 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %124 = %123.1;
  (%124,)
}

def @func_11125(%var_11123: float32, %var_11124: Tensor[(28), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(14, 1, 2), float32], float32, Tensor[(28), float32]) {
  @func_11121(%var_11123, %var_11124) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(14, 1, 2), float32], float32, Tensor[(28), float32]) */
}

def @func_12218(%var_12216: Tensor[(16, 9, 14), uint64]) -> (Tensor[(16, 9, 14), uint64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_12215(%var_12216) /* ty=(Tensor[(16, 9, 14), uint64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_3465(%var_3429: uint64, %var_3430: Tensor[(5, 1, 12), uint64]) -> (Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %125 = cast(%var_3429, dtype="uint64") /* ty=uint64 */;
  %126 = cast(%var_3430, dtype="uint64") /* ty=Tensor[(5, 1, 12), uint64] */;
  %127 = subtract(%125, %126) /* ty=Tensor[(5, 1, 12), uint64] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(5, 1, 12), float64] */;
  %129 = shape_of(%var_3430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%var_3430, dtype="float64") /* ty=Tensor[(5, 1, 12), float64] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %132 = mod(%130, %131) /* ty=Tensor[(5, ?, 12), float64] */;
  %133 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  %134 = @func_2367() /* ty=Tensor[(576), float32] */;
  (%132, %133, %134)
}

def @func_14279() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_14277() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_10645() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) {
  @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_13492() -> Tensor[(576), float32] {
  @func_13490() /* ty=Tensor[(576), float32] */
}

def @func_5336(%var_5330: Tensor[(8, 9, 7), float32]) -> (Tensor[(8, 9, 7), float32],) {
  %135 = cast(%var_5330, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %136 = sin(%135) /* ty=Tensor[(8, 9, 7), float32] */;
  (%136,)
}

def @func_3400(%var_3398: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) {
  @func_3397(%var_3398) /* ty=(Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) */
}

def @func_12630() -> Tensor[(16, 8, 11), float32] {
  %137 = fn () -> Tensor[(16, 8, 11), float32] {
    @func_5879() /* ty=Tensor[(16, 8, 11), float32] */
  };
  %137() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_8202(%var_8200: Tensor[(90), float32]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
  @func_8199(%var_8200) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */
}

def @func_10675() -> Tensor[(4, 9, 16), float32] {
  %139 = fn () -> Tensor[(4, 9, 16), float32] {
    %138 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %138.6
  };
  %139() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_11925() -> (Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
  @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_1645() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %140 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %141 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %142 = %140.2;
  %143 = %141.0;
  (%142, %143)
}

def @func_1514() -> (Tensor[(16, 8, 11), float64],) {
  @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_5639() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %144 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %145 = @func_5426() /* ty=(Tensor[(576), float32],) */;
  %146 = %144.0;
  %147 = %145.0;
  (%146, %147)
}

def @func_3146(%var_3114: Tensor[(8, 100), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 16, 5), float64], Tensor[(8, 100), float32]) {
  %148 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %149 = cast(%var_3114, dtype="float32") /* ty=Tensor[(8, 100), float32] */;
  %150 = reshape(%149, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), float32] */;
  %151 = @func_2051(%150) /* ty=(Tensor[(10, 16, 5), float32],) */;
  %152 = %151.0;
  %153 = cast(%var_3114, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="float64") /* ty=Tensor[(10, 16, 5), float64] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %157 = cast(%var_3114, dtype="float32") /* ty=Tensor[(8, 100), float32] */;
  %158 = %148.0;
  %159 = floor_divide(%155, %156) /* ty=Tensor[(10, 16, 5), float64] */;
  %160 = log(%157) /* ty=Tensor[(8, 100), float32] */;
  (%158, %159, %160)
}

def @func_11255() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %161 = @func_6293() /* ty=(Tensor[(576), float32],) */;
  %162 = @func_8892() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
  %163 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %164 = %161.0;
  %165 = %162.0;
  (%163, %164, %165)
}

def @func_20146() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %166 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %167 = @func_18905() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %168 = %166.3;
  %169 = %167.0;
  (%168, %169)
}

def @func_8084() -> Tensor[(576), float32] {
  %170 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %170.0
}

def @func_14619() -> (Tensor[(16, 8, 11), float64],) {
  %173 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %171 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %172 = %171.0;
    (%172,)
  };
  %173() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_1512() -> (Tensor[(16, 8, 11), float64],) {
  %174 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %175 = %174.0;
  (%175,)
}

def @func_6400() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %176 = @func_5496() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %177 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %178 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %179 = %176.0;
  %180 = %177.3;
  %181 = @func_6208() /* ty=Tensor[(576), float32] */;
  %182 = %178.0;
  (%179, %180, %181, %182)
}

def @func_6628() -> Tensor[(16, 8, 11), float64] {
  @func_6626() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_1410() -> (Tensor[(16, 8, 11), float64],) {
  %183 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %184 = %183.1;
  (%184,)
}

def @func_927(%var_925: Tensor[(144), uint64]) -> (Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  @func_924(%var_925) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */
}

def @func_14741() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %185 = @func_13833() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %186 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %187 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %188 = %185.0;
  %189 = %186.0;
  %190 = @func_5414() /* ty=Tensor[(16, 8, 11), float64] */;
  %191 = %187.0;
  (%188, %189, %190, %191)
}

def @func_5696(%var_5694: Tensor[(60), uint64]) -> (Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  @func_5693(%var_5694) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */
}

def @func_15005() -> Tensor[(16, 8, 11), float64] {
  @func_15003() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_19785(%var_19783: Tensor[(7, 1, 10), uint16], %var_19784: Tensor[(7, 13, 10), uint16]) -> (Tensor[(7, 13, 10), bool],) {
  %195 = fn (%var_19773: Tensor[(7, 1, 10), uint16], %var_19774: Tensor[(7, 13, 10), uint16]) -> (Tensor[(7, 13, 10), bool],) {
    %192 = cast(%var_19773, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
    %193 = cast(%var_19774, dtype="bool") /* ty=Tensor[(7, 13, 10), bool] */;
    %194 = not_equal(%192, %193) /* ty=Tensor[(7, 13, 10), bool] */;
    (%194,)
  };
  %195(%var_19783, %var_19784) /* ty=(Tensor[(7, 13, 10), bool],) */
}

def @func_18499() -> (Tensor[(16, 8, 11), float64],) {
  %198 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %196 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %197 = %196.1;
    (%197,)
  };
  %198() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_9105() -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) {
  @func_9103() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_16425() -> Tensor[(16, 8, 11), float64] {
  @func_15150() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_10935() -> Tensor[(16, 8, 11), float32] {
  @func_10933() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_590() -> Tensor[(4, 9, 16), float32] {
  %199 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %199.1
}

def @func_4771() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %200 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %201 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %202 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %203 = @func_575() /* ty=Tensor[(576), float32] */;
  %204 = %200.4;
  %205 = %201.0;
  %206 = %202.0;
  (%203, %204, %205, %206)
}

def @func_13437() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %207 = @func_2001() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) */;
  %208 = @func_12555() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) */;
  %209 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %210 = %207.0;
  %211 = %208.0;
  %212 = %209.0;
  (%210, %211, %212)
}

def @func_9552() -> (Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) {
  %220 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) {
    %213 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %214 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %215 = %213.2;
    %216 = cast(%215, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %217 = reshape(%216, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
    %218 = %214.0;
    %219 = @func_3505(%217) /* ty=Tensor[(16, 8, 11), uint32] */;
    (%215, %218, %219)
  };
  %220() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */
}

def @func_4773() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_4771() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_3303() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %224 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %221 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %222 = %221.0;
    %223 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_11177() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_11175() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_5212() -> (Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  @func_5210() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */
}

def @main(%var_20589: Tensor[(8, 13, 5), float32]) -> (Tensor[(8, 13, 5), float32], Tensor[(8, 13, 5), uint64], Tensor[(8, 13, 5), float32]) {
  %225 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %226 = shape_of(%var_20589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_20589, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %229 = cast(%var_20589, dtype="uint64") /* ty=Tensor[(8, 13, 5), uint64] */;
  %230 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(8, 13, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 13, 5), float32] */, dtype="uint64") /* ty=Tensor[(8, 13, 5), uint64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %233 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %234 = floor_divide(%227, %228) /* ty=Tensor[(8, 13, 5), float32] */;
  %235 = minimum(%231, %232) /* ty=Tensor[(8, 13, 5), uint64] */;
  %236 = tan(%233) /* ty=Tensor[(8, 13, 5), float32] */;
  (%234, %235, %236)
}

def @func_11747() -> (Tensor[(576), float32],) {
  @func_11745() /* ty=(Tensor[(576), float32],) */
}

def @func_16911(%var_16845: Tensor[(36, 10), float64], %var_16855: Tensor[(36, 10), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(5, 12, 6), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(36, 10), float32]) {
  %237 = @func_13728() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %238 = @func_16676() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %239 = cast(%var_16845, dtype="float64") /* ty=Tensor[(36, 10), float64] */;
  %240 = reshape(%239, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %241 = @func_3338(%240) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %242 = %241.0;
  %243 = cast(%242, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %244 = reshape(%243, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %245 = @func_9975(%244) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) */;
  %246 = cast(%var_16855, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %247 = shape_of(%var_16845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %248 = cast(%var_16845, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %250 = less_equal(%248, %249) /* ty=Tensor[(36, 10), bool] */;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %252 = %237.2;
  %253 = %238.0;
  %254 = %245.0;
  %255 = @func_12629() /* ty=Tensor[(16, 8, 11), float32] */;
  %256 = log2(%251) /* ty=Tensor[(36, 10), float32] */;
  (%252, %253, %242, %254, %255, %256)
}

def @func_12617() -> (Tensor[(16, 8, 11), float64],) {
  @func_12615() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_13363() -> Tensor[(16, 8, 11), float64] {
  @func_13361() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_11003() -> Tensor[(16, 8, 11), float64] {
  @func_11001() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15440() -> (Tensor[(16, 8, 11), float64],) {
  @func_15438() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_15018() -> (Tensor[(16, 8, 11), float64],) {
  %258 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %257 = @func_14420() /* ty=Tensor[(16, 8, 11), float64] */;
    (%257,)
  };
  %258() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_10933() -> Tensor[(16, 8, 11), float32] {
  %259 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %259.0
}

def @func_14087() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %265 = fn () -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %260 = @func_5210() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %261 = @func_12269() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %262 = %260.0;
    %263 = @func_10697() /* ty=Tensor[(16, 8, 11), float64] */;
    %264 = %261.1;
    (%262, %263, %264)
  };
  %265() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_12597() -> Tensor[(576), float32] {
  @func_12595() /* ty=Tensor[(576), float32] */
}

def @func_6293() -> (Tensor[(576), float32],) {
  %266 = @func_575() /* ty=Tensor[(576), float32] */;
  (%266,)
}

def @func_10395() -> (Tensor[(14, 10, 1), float64],) {
  %268 = fn () -> (Tensor[(14, 10, 1), float64],) {
    %267 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
    (%267,)
  };
  %268() /* ty=(Tensor[(14, 10, 1), float64],) */
}

def @func_19986() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(4, 8, 10), float64], Tensor[(320), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
  @func_19984() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(4, 8, 10), float64], Tensor[(320), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_5591(%var_5524: Tensor[(5, 10, 7), float64]) -> (Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %269 = cast(%var_5524, dtype="float64") /* ty=Tensor[(5, 10, 7), float64] */;
  %270 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %271 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %272 = asinh(%269) /* ty=Tensor[(5, 10, 7), float64] */;
  %273 = %270.0;
  %274 = %271.0;
  (%272, %273, %274)
}

def @func_1674(%var_1671: Tensor[(6, 3, 5), float32]) -> Tensor[(6, 3, 5), float32] {
  %275 = cast(%var_1671, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
  erf(%275) /* ty=Tensor[(6, 3, 5), float32] */
}

def @func_2913() -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(3, 30), float32]) {
  %281 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(3, 30), float32]) {
    %276 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %277 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %278 = reshape(%277, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
    %279 = %276.0;
    %280 = @func_1674(%278) /* ty=Tensor[(6, 3, 5), float32] */;
    (%279, %280, meta[relay.Constant][7] /* ty=Tensor[(3, 30), float32] */)
  };
  %281() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(3, 30), float32]) */
}

def @func_11731() -> Tensor[(14, 15, 6), float32] {
  %282 = fn () -> Tensor[(14, 15, 6), float32] {
    @func_6002() /* ty=Tensor[(14, 15, 6), float32] */
  };
  %282() /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_19865(%var_19863: Tensor[(10, 16, 5), uint16], %var_19864: Tensor[(10, 16, 5), uint16]) -> (Tensor[(10, 16, 5), bool],) {
  %288 = fn (%var_19831: Tensor[(10, 16, 5), uint16], %var_19832: Tensor[(10, 16, 5), uint16]) -> (Tensor[(10, 16, 5), bool],) {
    %283 = cast(%var_19832, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
    %284 = shape_of(%var_19831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %285 = cast(%var_19831, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %287 = greater_equal(%285, %286) /* ty=Tensor[(10, 16, 5), bool] */;
    (%287,)
  };
  %288(%var_19863, %var_19864) /* ty=(Tensor[(10, 16, 5), bool],) */
}

def @func_3149(%var_3147: Tensor[(8, 100), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 16, 5), float64], Tensor[(8, 100), float32]) {
  @func_3146(%var_3147) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(10, 16, 5), float64], Tensor[(8, 100), float32]) */
}

def @func_11311(%var_11308: Tensor[(6, 3, 15), uint64], %var_11309: Tensor[(6, 3, 15), uint64], %var_11310: Tensor[(30), float64]) -> (Tensor[(6, 3, 15), bool], Tensor[(6, 3, 15), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %310 = fn (%var_11261: Tensor[(6, 3, 15), uint64], %var_11262: Tensor[(6, 3, 15), uint64], %var_11272: Tensor[(30), float64]) -> (Tensor[(6, 3, 15), bool], Tensor[(6, 3, 15), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %289 = cast(%var_11262, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
    %290 = shape_of(%var_11261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %291 = cast(%var_11261, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %293 = cast(%var_11261, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
    %294 = shape_of(%var_11262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %295 = cast(%var_11262, dtype="bool") /* ty=Tensor[(6, 3, 15), bool] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %297 = cast(%var_11272, dtype="float64") /* ty=Tensor[(30), float64] */;
    %298 = cast(%var_11272, dtype="float64") /* ty=Tensor[(30), float64] */;
    %299 = reshape(%297, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
    %300 = reshape(%298, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
    %301 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %302 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %303 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %304 = greater_equal(%291, %292) /* ty=Tensor[(6, 3, 15), bool] */;
    %305 = less_equal(%295, %296) /* ty=Tensor[(6, 3, 15), bool] */;
    %306 = @func_9564(%299, %300) /* ty=Tensor[(5, 2, 3), float64] */;
    %307 = %301.3;
    %308 = %302.1;
    %309 = %303.0;
    (%304, %305, %306, %var_11272, %307, %308, %309)
  };
  %310(%var_11308, %var_11309, %var_11310) /* ty=(Tensor[(6, 3, 15), bool], Tensor[(6, 3, 15), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_9755(%var_9728: Tensor[(3, 14, 12), int16], %var_9729: Tensor[(3, 14, 12), int16]) -> (Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) {
  %311 = cast(%var_9729, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %312 = shape_of(%var_9728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_9728, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %315 = cast(%var_9729, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %316 = multiply(%313, %314) /* ty=Tensor[(3, 14, 12), int16] */;
  %317 = cosh(%315) /* ty=Tensor[(3, 14, 12), float32] */;
  (%316, %317)
}

def @func_16324(%var_16290: int8, %var_16291: Tensor[(3, 16, 1), int8]) -> (Tensor[(3, 16, 1), int32], Tensor[(3, 16, ?), float64]) {
  %318 = cast(%var_16290, dtype="int8") /* ty=int8 */;
  %319 = cast(%var_16291, dtype="int8") /* ty=Tensor[(3, 16, 1), int8] */;
  %320 = subtract(%318, %319) /* ty=Tensor[(3, 16, 1), int8] */;
  %321 = cast(%var_16290, dtype="bool") /* ty=bool */;
  %322 = cast(%320, dtype="bool") /* ty=Tensor[(3, 16, 1), bool] */;
  %323 = equal(%321, %322) /* ty=Tensor[(3, 16, 1), bool] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %325 = tan(%324) /* ty=Tensor[(3, 16, 1), float64] */;
  %326 = cast(%325, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %327 = acos(%326) /* ty=Tensor[(3, 16, 1), float32] */;
  %328 = cast(%327, dtype="int32") /* ty=Tensor[(3, 16, 1), int32] */;
  %329 = cast(%var_16290, dtype="int32") /* ty=int32 */;
  %330 = cast(%323, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %331 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%327, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %334 = logical_xor(%328, %329) /* ty=Tensor[(3, 16, 1), int32] */;
  %335 = maximum(%332, %333) /* ty=Tensor[(3, 16, ?), float64] */;
  (%334, %335)
}

def @func_7138() -> Tensor[(16, 8, 11), float32] {
  %337 = fn () -> Tensor[(16, 8, 11), float32] {
    %336 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %336.0
  };
  %337() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_13669(%var_13621: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), bool]) {
  %338 = cast(%var_13621, dtype="uint64") /* ty=Tensor[(1, 144), uint64] */;
  %339 = reshape(%338, newshape=[1, 144]) /* ty=Tensor[(1, 144), uint64] */;
  %340 = @func_6670(%339) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) */;
  %341 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %342 = %340.1;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %344 = reshape(%343, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %345 = @func_13361() /* ty=Tensor[(16, 8, 11), float64] */;
  %346 = %341.0;
  %347 = @func_10069(%344) /* ty=Tensor[(16, 8, 11), bool] */;
  (%345, %342, %var_13621, %346, %347)
}

def @func_20411() -> (Tensor[(576), float32],) {
  %350 = fn () -> (Tensor[(576), float32],) {
    %348 = @func_14361() /* ty=(Tensor[(576), float32],) */;
    %349 = %348.0;
    (%349,)
  };
  %350() /* ty=(Tensor[(576), float32],) */
}

def @func_1711() -> Tensor[(4, 9, 16), float32] {
  @func_590() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_17317() -> (Tensor[(16, 8, 11), float64],) {
  @func_17315() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_12890() -> (Tensor[(576), float32], Tensor[(14, 10, 1), float64]) {
  %354 = fn () -> (Tensor[(576), float32], Tensor[(14, 10, 1), float64]) {
    %351 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %352 = %351.0;
    %353 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
    (%352, %353)
  };
  %354() /* ty=(Tensor[(576), float32], Tensor[(14, 10, 1), float64]) */
}

def @func_1217(%var_1216: Tensor[(8, 18), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) {
  %363 = fn (%var_1202: Tensor[(8, 18), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) {
    %355 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %356 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %357 = cast(%var_1202, dtype="uint64") /* ty=Tensor[(8, 18), uint64] */;
    %358 = reshape(%357, newshape=[144]) /* ty=Tensor[(144), uint64] */;
    %359 = @func_924(%358) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
    %360 = %355.2;
    %361 = %356.0;
    %362 = %359.2;
    (%360, %361, %362, %var_1202)
  };
  %363(%var_1216) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */
}

def @func_19250() -> (Tensor[(576), float32],) {
  @func_19248() /* ty=(Tensor[(576), float32],) */
}

def @func_5269(%var_5267: Tensor[(11, 11, 5), uint64], %var_5268: Tensor[(11, 11, 5), uint64]) -> (Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) {
  %371 = fn (%var_5230: Tensor[(11, 11, 5), uint64], %var_5231: Tensor[(11, 11, 5), uint64]) -> (Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) {
    %364 = cast(%var_5231, dtype="uint64") /* ty=Tensor[(11, 11, 5), uint64] */;
    %365 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %366 = cast(%var_5230, dtype="uint64") /* ty=Tensor[(11, 11, 5), uint64] */;
    %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %368 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %369 = bitwise_or(%366, %367) /* ty=Tensor[(11, 11, 5), uint64] */;
    %370 = %368.6;
    (%369, %370)
  };
  %371(%var_5267, %var_5268) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */
}

def @func_12924() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %376 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %372 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %373 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %374 = %372.0;
    %375 = %373.0;
    (%374, %375)
  };
  %376() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_12989() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %377 = @func_11094() /* ty=Tensor[(16, 8, 11), float64] */;
  %378 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  (%377, %378)
}

def @func_2825() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_11094() -> Tensor[(16, 8, 11), float64] {
  %379 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %379.0
}

def @func_18447() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %380 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %381 = @func_7443() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %382 = %380.1;
  %383 = %381.0;
  (%382, %383)
}

def @func_10643() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) {
  %384 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
  %385 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %386 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %389 = reshape(%388, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %390 = @func_1291(%389) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %391 = %384.0;
  %392 = %385.0;
  %393 = %390.2;
  %394 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  (%391, %392, %387, %393, %394)
}

def @func_13061() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %399 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %395 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
    %396 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %397 = %395.0;
    %398 = %396.0;
    (%397, %398)
  };
  %399() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_19315(%var_19313: Tensor[(4, 8, 10), float64]) -> (Tensor[(4, 8, 10), float64],) {
  @func_19312(%var_19313) /* ty=(Tensor[(4, 8, 10), float64],) */
}

def @func_17166() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %400 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %401 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %402 = %400.0;
  %403 = %401.0;
  (%402, %403)
}

def @func_1412() -> (Tensor[(16, 8, 11), float64],) {
  @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_17153() -> (Tensor[(576), float32],) {
  @func_17151() /* ty=(Tensor[(576), float32],) */
}

def @func_11096() -> Tensor[(16, 8, 11), float64] {
  @func_11094() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_1816() -> (Tensor[(576), float32],) {
  %406 = fn () -> (Tensor[(576), float32],) {
    %404 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %405 = %404.1;
    (%405,)
  };
  %406() /* ty=(Tensor[(576), float32],) */
}

def @func_18390() -> Tensor[(16, 8, 11), float64] {
  %408 = fn () -> Tensor[(16, 8, 11), float64] {
    %407 = @func_17286() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %407.0
  };
  %408() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_5339(%var_5337: Tensor[(8, 9, 7), float32]) -> (Tensor[(8, 9, 7), float32],) {
  @func_5336(%var_5337) /* ty=(Tensor[(8, 9, 7), float32],) */
}

def @func_767() -> Tensor[(16, 8, 11), float64] {
  %410 = fn () -> Tensor[(16, 8, 11), float64] {
    %409 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %409.0
  };
  %410() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15741() -> (Tensor[(16, 8, 11), float64],) {
  %411 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %412 = %411.0;
  (%412,)
}

def @func_14444() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %413 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %414 = @func_12901() /* ty=Tensor[(576), float32] */;
  %415 = %413.0;
  (%414, %415)
}

def @func_6338() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %416 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %417 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %418 = @func_4771() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %419 = %416.1;
  %420 = %417.0;
  %421 = %418.2;
  (%419, %420, %421)
}

def @func_8829(%var_8827: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) {
  @func_8826(%var_8827) /* ty=(Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_882() -> Tensor[(16, 8, 11), float64] {
  %423 = fn () -> Tensor[(16, 8, 11), float64] {
    %422 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %422.1
  };
  %423() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_16005() -> (Tensor[(16, 9, ?), float32],) {
  @func_16003() /* ty=(Tensor[(16, 9, ?), float32],) */
}

def @func_11444() -> Tensor[(16, 8, 11), float64] {
  %424 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %424.0
}

def @func_6175(%var_6168: Tensor[(3, 9, 8), uint64], %var_6173: Tensor[(350), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  %425 = cast(%var_6168, dtype="bool") /* ty=Tensor[(3, 9, 8), bool] */;
  %426 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(3, 9, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 9, 8), uint64] */, dtype="bool") /* ty=Tensor[(3, 9, 8), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %429 = cast(%var_6173, dtype="float64") /* ty=Tensor[(350), float64] */;
  %430 = reshape(%429, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %431 = @func_5591(%430) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %432 = less(%427, %428) /* ty=Tensor[(3, 9, 8), bool] */;
  %433 = %431.1;
  (%432, %433, %var_6173)
}

def @func_9033(%var_9032: Tensor[(15, 3, 11), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(160), float32], Tensor[(15, 3, 11), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %448 = fn (%var_8985: Tensor[(15, 3, 11), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(160), float32], Tensor[(15, 3, 11), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %434 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
    %435 = reshape(%434, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
    %436 = cast(%var_8985, dtype="float32") /* ty=Tensor[(15, 3, 11), float32] */;
    %437 = exp(%436) /* ty=Tensor[(15, 3, 11), float32] */;
    %438 = cast(%var_8985, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
    %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(%437, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %442 = @func_8892() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
    %443 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %444 = @func_7587(%435) /* ty=Tensor[(10, 16, 1), float32] */;
    %445 = greater(%440, %441) /* ty=Tensor[(15, 3, 11), bool] */;
    %446 = %442.1;
    %447 = %443.0;
    (%444, meta[relay.Constant][9] /* ty=Tensor[(160), float32] */, %445, %446, %447)
  };
  %448(%var_9032) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(160), float32], Tensor[(15, 3, 11), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_16678() -> (Tensor[(16, 8, 11), float64],) {
  @func_16676() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_15663(%var_15662: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
  %453 = fn (%var_15647: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
    %449 = cast(%var_15647, dtype="float32") /* ty=Tensor[(90), float32] */;
    %450 = reshape(%449, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
    %451 = @func_11569() /* ty=Tensor[(16, 8, 11), float64] */;
    %452 = @func_1674(%450) /* ty=Tensor[(6, 3, 5), float32] */;
    (%451, %452, %var_15647)
  };
  %453(%var_15662) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */
}

def @func_18781() -> Tensor[(16, 8, 11), float64] {
  %455 = fn () -> Tensor[(16, 8, 11), float64] {
    %454 = @func_8731() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %454.0
  };
  %455() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_18907() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_18905() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_1061() -> (Tensor[(16, 8, 11), float64],) {
  %456 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
  (%456,)
}

def @func_10069(%var_10062: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), bool] {
  %457 = @func_6847() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %458 = %457.0;
  %459 = cast(%var_10062, dtype="bool") /* ty=Tensor[(16, 8, 11), bool] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%458, dtype="bool") /* ty=Tensor[(16, 8, 11), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%461, %462) /* ty=Tensor[(16, 8, 11), bool] */
}

def @func_8025() -> Tensor[(16, 8, 11), float64] {
  @func_8023() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_576() -> Tensor[(576), float32] {
  %464 = fn () -> Tensor[(576), float32] {
    %463 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %463.1
  };
  %464() /* ty=Tensor[(576), float32] */
}

def @func_7590(%var_7588: Tensor[(10, 16, 1), float32]) -> Tensor[(10, 16, 1), float32] {
  @func_7587(%var_7588) /* ty=Tensor[(10, 16, 1), float32] */
}

def @func_15150() -> Tensor[(16, 8, 11), float64] {
  @func_13135() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_17795(%var_17793: Tensor[(576), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float64]) {
  @func_17792(%var_17793) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float64]) */
}

def @func_7678(%var_7676: Tensor[(5, 13, 1), uint16], %var_7677: Tensor[(5, 13, 1), uint16]) -> (Tensor[(5, 13, ?), uint16], Tensor[(384), float64], Tensor[(384), float64]) {
  %474 = fn (%var_7654: Tensor[(5, 13, 1), uint16], %var_7655: Tensor[(5, 13, 1), uint16]) -> (Tensor[(5, 13, ?), uint16], Tensor[(384), float64], Tensor[(384), float64]) {
    %465 = cast(%var_7655, dtype="uint16") /* ty=Tensor[(5, 13, 1), uint16] */;
    %466 = shape_of(%var_7654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%var_7654, dtype="uint16") /* ty=Tensor[(5, 13, 1), uint16] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %469 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %470 = reshape(%469, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %471 = @func_6886(%470) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
    %472 = multiply(%467, %468) /* ty=Tensor[(5, 13, ?), uint16] */;
    %473 = %471.2;
    (%472, %473, meta[relay.Constant][10] /* ty=Tensor[(384), float64] */)
  };
  %474(%var_7676, %var_7677) /* ty=(Tensor[(5, 13, ?), uint16], Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_19185() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(3, 9, 8), float64], Tensor[(16, 8, 11), float64]) {
  @func_19183() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(3, 9, 8), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_83(%var_78: Tensor[(4, 9, 16), float32]) -> (Tensor[(4, 9, 16), float32],) {
  %475 = cast(%var_78, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %476 = cos(%475) /* ty=Tensor[(4, 9, 16), float32] */;
  (%476,)
}

def @func_7839(%var_7806: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) {
  %477 = cast(%var_7806, dtype="uint64") /* ty=Tensor[(196), uint64] */;
  %478 = reshape(%477, newshape=[196]) /* ty=Tensor[(196), uint64] */;
  %479 = @func_5790(%478) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) */;
  %480 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %481 = cast(meta[relay.Constant][11] /* ty=Tensor[(36, 16), float32] */, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %482 = reshape(%481, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %483 = @func_83(%482) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %484 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %485 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
  %486 = %479.3;
  %487 = %480.1;
  %488 = %483.0;
  %489 = %484.0;
  (%485, %486, %var_7806, %487, %488, meta[relay.Constant][11] /* ty=Tensor[(36, 16), float32] */, %489)
}

def @func_8594() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %490 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %491 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %492 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  %493 = %490.0;
  %494 = %491.1;
  %495 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  (%492, %493, %494, %495)
}

def @func_3888() -> (Tensor[(16, 8, 11), float32],) {
  @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */
}

def @func_11535() -> Tensor[(4, 9, 16), float32] {
  @func_8052() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_14421() -> Tensor[(16, 8, 11), float64] {
  %497 = fn () -> Tensor[(16, 8, 11), float64] {
    %496 = @func_11423() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %496.0
  };
  %497() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_7445() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_7443() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_18232() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %501 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %498 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %499 = %498.2;
    %500 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
    (%499, %500)
  };
  %501() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_6004() -> Tensor[(14, 15, 6), float32] {
  @func_6002() /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_6179(%var_6177: Tensor[(3, 9, 8), uint64], %var_6178: Tensor[(350), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  @func_6175(%var_6177, %var_6178) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) */
}

def @func_3214() -> (Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %502 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 13, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %503 = log(%502) /* ty=Tensor[(15, 13, 14), float32] */;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(15, 13, 14), float64] */;
  %505 = cast(meta[relay.Constant][13] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %506 = reshape(%505, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
  %507 = @func_1215(%506) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
  %508 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %509 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %510 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %511 = %510.1;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(576), float32] */;
  %513 = reshape(%512, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %514 = @func_83(%513) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %515 = exp(%504) /* ty=Tensor[(15, 13, 14), float64] */;
  %516 = %507.1;
  %517 = %508.1;
  %518 = %509.0;
  %519 = %514.0;
  (%515, %516, meta[relay.Constant][13] /* ty=Tensor[(144), uint64] */, %517, %518, %511, %519)
}

def @func_7330() -> Tensor[(14, 10, 1), float64] {
  %521 = fn () -> Tensor[(14, 10, 1), float64] {
    %520 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 1), float64] */;
    rsqrt(%520) /* ty=Tensor[(14, 10, 1), float64] */
  };
  %521() /* ty=Tensor[(14, 10, 1), float64] */
}

def @func_18656() -> Tensor[(576), float32] {
  @func_18654() /* ty=Tensor[(576), float32] */
}

def @func_15850() -> (Tensor[(16, 8, 11), float64],) {
  %524 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %522 = @func_13983() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_2051(%var_2021: Tensor[(10, 16, 5), float32]) -> (Tensor[(10, 16, 5), float32],) {
  %525 = cast(-0.546405f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %526 = cast(%var_2021, dtype="float32") /* ty=Tensor[(10, 16, 5), float32] */;
  %527 = power(%525, %526) /* ty=Tensor[(10, 16, 5), float32] */;
  (%527,)
}

def @func_3397(%var_3369: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) {
  %528 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 14, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2, 14, 1), uint64] */;
  %529 = cast(%var_3369, dtype="uint64") /* ty=Tensor[(2, 14, 7), uint64] */;
  %530 = cast(%var_3369, dtype="bool") /* ty=Tensor[(2, 14, 7), bool] */;
  %531 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 14, 1), uint64] */, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %532 = right_shift(%528, %529) /* ty=Tensor[(2, 14, 7), uint64] */;
  %533 = logical_or(%530, %531) /* ty=Tensor[(2, 14, 7), bool] */;
  %534 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  (%532, %533, %534)
}

def @func_18349(%var_18347: Tensor[(208), int8]) -> (Tensor[(576), float32], Tensor[(15, 13, 14), float32], Tensor[(6, 7, 3), uint8], Tensor[(208), int8]) {
  @func_18346(%var_18347) /* ty=(Tensor[(576), float32], Tensor[(15, 13, 14), float32], Tensor[(6, 7, 3), uint8], Tensor[(208), int8]) */
}

def @func_10024() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %540 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %535 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %536 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
    %537 = %535.0;
    %538 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
    %539 = %536.2;
    (%537, %538, %539)
  };
  %540() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_15813() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_15811() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_16272(%var_16270: Tensor[(12, 42), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(8, 9, 7), float32], Tensor[(12, 42), float32]) {
  @func_16269(%var_16270) /* ty=(Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(8, 9, 7), float32], Tensor[(12, 42), float32]) */
}

def @func_3469(%var_3467: uint64, %var_3468: Tensor[(5, 1, 12), uint64]) -> (Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_3465(%var_3467, %var_3468) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_3563() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %541 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %542 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %543 = %541.0;
  %544 = %542.0;
  (%543, %544)
}

def @func_14849() -> (Tensor[(576), float32],) {
  @func_14847() /* ty=(Tensor[(576), float32],) */
}

def @func_4910(%var_4909: uint64) -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %564 = fn (%var_4896: uint64) -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
    %545 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %546 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %547 = @func_3653() /* ty=(Tensor[(576), float32],) */;
    %548 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %549 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %550 = cast(%var_4896, dtype="uint64") /* ty=uint64 */;
    %551 = cast(meta[relay.Constant][16] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %552 = reshape(%550, newshape=[]) /* ty=uint64 */;
    %553 = reshape(%551, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
    %554 = @func_3465(%552, %553) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %555 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %556 = %545.2;
    %557 = %546.0;
    %558 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
    %559 = %547.0;
    %560 = %548.0;
    %561 = %549.0;
    %562 = %554.1;
    %563 = %555.0;
    (%556, %557, %558, %559, %560, %561, %562, %var_4896, meta[relay.Constant][16] /* ty=Tensor[(60), uint64] */, %563)
  };
  %564(%var_4909) /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_1677(%var_1675: Tensor[(6, 3, 5), float32]) -> Tensor[(6, 3, 5), float32] {
  @func_1674(%var_1675) /* ty=Tensor[(6, 3, 5), float32] */
}

def @func_2693() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_8346(%var_8329: Tensor[(9, 5, 2), float32], %var_8335: Tensor[(175, 2), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) {
  %565 = cast(meta[relay.Constant][17] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %566 = cast(%var_8335, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %567 = reshape(%565, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint64] */;
  %568 = reshape(%566, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %569 = @func_6175(%567, %568) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) */;
  %570 = cast(%var_8329, dtype="float32") /* ty=Tensor[(9, 5, 2), float32] */;
  %571 = atanh(%570) /* ty=Tensor[(9, 5, 2), float32] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
  %573 = %569.0;
  %574 = erf(%572) /* ty=Tensor[(9, 5, 2), float64] */;
  (%573, meta[relay.Constant][17] /* ty=Tensor[(216), uint64] */, %var_8335, %574)
}

def @func_20309(%var_20291: Tensor[(5, 13, 15), float64], %var_20300: Tensor[(350), float64]) -> (Tensor[(5, 13, 15), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  %575 = cast(%var_20291, dtype="float64") /* ty=Tensor[(5, 13, 15), float64] */;
  %576 = log(%575) /* ty=Tensor[(5, 13, 15), float64] */;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(5, 13, 15), float32] */;
  %578 = cast(%var_20300, dtype="float64") /* ty=Tensor[(350), float64] */;
  %579 = reshape(%578, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %580 = @func_5591(%579) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %581 = cos(%577) /* ty=Tensor[(5, 13, 15), float32] */;
  %582 = %580.1;
  (%581, %582, %var_20300)
}

def @func_20198(%var_20194: Tensor[(90), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(90), float32]) {
  %583 = @func_3653() /* ty=(Tensor[(576), float32],) */;
  %584 = cast(%var_20194, dtype="float32") /* ty=Tensor[(90), float32] */;
  %585 = reshape(%584, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %586 = @func_8199(%585) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %587 = %583.0;
  %588 = %586.0;
  (%587, %588, %var_20194)
}

def @func_17413(%var_17383: Tensor[(360), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(605), uint64], Tensor[(576), float32]) {
  %589 = cast(%var_17383, dtype="float64") /* ty=Tensor[(360), float64] */;
  %590 = reshape(%589, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %591 = @func_6964(%590) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) */;
  %592 = @func_14234() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %593 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %594 = %591.3;
  %595 = @func_15512() /* ty=Tensor[(605), uint64] */;
  %596 = %592.0;
  (%593, %594, %var_17383, %595, %596)
}

def @func_5426() -> (Tensor[(576), float32],) {
  %597 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %598 = %597.2;
  (%598,)
}

def @func_6209() -> Tensor[(576), float32] {
  %600 = fn () -> Tensor[(576), float32] {
    %599 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %599.0
  };
  %600() /* ty=Tensor[(576), float32] */
}

def @func_7297(%var_7238: Tensor[(208), int8]) -> (Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %601 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %602 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 7, 3), int8] */, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %605 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %606 = cast(%var_7238, dtype="int8") /* ty=Tensor[(208), int8] */;
  %607 = reshape(%605, newshape=[]) /* ty=int8 */;
  %608 = reshape(%606, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), int8] */;
  %609 = cast(meta[relay.Constant][21] /* ty=Tensor[(1408), float64] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %610 = reshape(%609, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %611 = @func_1291(%610) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %612 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %613 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %614 = reshape(%613, newshape=[]) /* ty=uint64 */;
  %615 = @func_4908(%614) /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */;
  %616 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 7, 3), int8] */, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %617 = cos(%616) /* ty=Tensor[(6, 7, 3), float32] */;
  %618 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 7, 3), int8] */, dtype="uint8") /* ty=Tensor[(6, 7, 3), uint8] */;
  %619 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%617, dtype="uint8") /* ty=Tensor[(6, 7, 3), uint8] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %622 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %623 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %624 = bitwise_xor(%603, %604) /* ty=Tensor[(6, 7, 3), int8] */;
  %625 = @func_3601(%607, %608) /* ty=Tensor[(4, 13, 4), int8] */;
  %626 = %611.1;
  %627 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  %628 = %612.0;
  %629 = %615.2;
  %630 = right_shift(%620, %621) /* ty=Tensor[(6, 7, 3), uint8] */;
  %631 = %622.0;
  %632 = %623.4;
  (%624, %625, meta[relay.Constant][20] /* ty=int8 */, %var_7238, %626, meta[relay.Constant][21] /* ty=Tensor[(1408), float64] */, %627, %628, %629, %630, %631, %632)
}

def @func_9499() -> (Tensor[(16, 8, 11), float64],) {
  %633 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %634 = %633.0;
  (%634,)
}

def @func_1775() -> (Tensor[(16, 8, 11), float64],) {
  %637 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %635 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %636 = %635.0;
    (%636,)
  };
  %637() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_17819() -> Tensor[(16, 8, 11), float64] {
  @func_17817() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6295() -> (Tensor[(576), float32],) {
  @func_6293() /* ty=(Tensor[(576), float32],) */
}

def @func_2369() -> Tensor[(576), float32] {
  @func_2367() /* ty=Tensor[(576), float32] */
}

def @func_3692() -> (Tensor[(16, 8, 11), float64],) {
  @func_3690() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_4212(%var_4210: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(360), float64], Tensor[(5, 12, 6), float64]) {
  @func_4209(%var_4210) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(360), float64], Tensor[(5, 12, 6), float64]) */
}

def @func_13137() -> Tensor[(16, 8, 11), float64] {
  @func_13135() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15554() -> Tensor[(16, 8, 11), float64] {
  @func_15552() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_7877() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %642 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %638 = @func_5065() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) */;
    %639 = @func_4997() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %640 = %638.0;
    %641 = %639.2;
    (%640, %641)
  };
  %642() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_18421() -> Tensor[(605), uint64] {
  @func_18419() /* ty=Tensor[(605), uint64] */
}

def @func_15514() -> Tensor[(605), uint64] {
  @func_15512() /* ty=Tensor[(605), uint64] */
}

def @func_19183() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(3, 9, 8), float64], Tensor[(16, 8, 11), float64]) {
  %643 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %644 = @func_2664() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %645 = cast(meta[relay.Constant][22] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %646 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %647 = reshape(%645, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
  %648 = reshape(%646, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %649 = @func_8346(%647, %648) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
  %650 = %649.0;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %652 = @func_13556() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %653 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %654 = %643.0;
  %655 = @func_12662() /* ty=Tensor[(576), float32] */;
  %656 = %644.1;
  %657 = sin(%651) /* ty=Tensor[(3, 9, 8), float64] */;
  %658 = %652.2;
  (%653, %654, %655, meta[relay.Constant][22] /* ty=Tensor[(90), float32] */, meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, %656, %657, %658)
}

def @func_20534() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), bool], Tensor[(576), float32]) {
  %666 = fn () -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), bool], Tensor[(576), float32]) {
    %659 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %660 = %659.1;
    %661 = cast(%660, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %662 = reshape(%661, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
    %663 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %664 = @func_10069(%662) /* ty=Tensor[(16, 8, 11), bool] */;
    %665 = %663.2;
    (%660, %664, %665)
  };
  %666() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), bool], Tensor[(576), float32]) */
}

def @func_17027() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %673 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
    %667 = @func_13932() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %668 = @func_15827() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(384), float64]) */;
    %669 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %670 = %667.1;
    %671 = %668.0;
    %672 = %669.0;
    (%670, %671, %672)
  };
  %673() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_16766(%var_16764: Tensor[(8, 2, 6), float64], %var_16765: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), float64] {
  @func_16762(%var_16764, %var_16765) /* ty=Tensor[(8, 2, 6), float64] */
}

def @func_13602() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %676 = fn () -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
    %674 = @func_12730() /* ty=Tensor[(16, 8, 11), float32] */;
    %675 = @func_2367() /* ty=Tensor[(576), float32] */;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */
}

def @func_11511() -> (Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_11509() /* ty=(Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_15003() -> Tensor[(16, 8, 11), float64] {
  %677 = @func_2664() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %677.1
}

def @func_11569() -> Tensor[(16, 8, 11), float64] {
  %678 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %678.0
}

def @func_18873() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64]) {
  @func_18871() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64]) */
}

def @func_11745() -> (Tensor[(576), float32],) {
  %679 = @func_9584() /* ty=Tensor[(576), float32] */;
  (%679,)
}

def @func_8826(%var_8785: Tensor[(5, 13, 14), float64]) -> (Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) {
  %680 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 13, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
  %681 = shape_of(%var_8785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_8785, dtype="float64") /* ty=Tensor[(5, 13, 14), float64] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %684 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %685 = divide(%682, %683) /* ty=Tensor[(5, 13, 14), float64] */;
  %686 = %684.1;
  (%685, %686)
}

def @func_1293(%var_1292: Tensor[(1408), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) {
  %696 = fn (%var_1288: Tensor[(1408), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) {
    %687 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
    %688 = cast(%687, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
    %689 = log10(%688) /* ty=Tensor[(4, 9, 16), float64] */;
    %690 = cast(%689, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
    %691 = cast(%var_1288, dtype="float64") /* ty=Tensor[(1408), float64] */;
    %692 = reshape(%691, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
    %693 = @func_1127(%692) /* ty=(Tensor[(16, 8, 11), int16],) */;
    %694 = sinh(%690) /* ty=Tensor[(4, 9, 16), float32] */;
    %695 = %693.0;
    (%694, %695, %var_1288)
  };
  %696(%var_1292) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */
}

def @func_9564(%var_9559: Tensor[(5, 2, 3), float64], %var_9560: Tensor[(5, 2, 3), float64]) -> Tensor[(5, 2, 3), float64] {
  %697 = cast(%var_9560, dtype="float64") /* ty=Tensor[(5, 2, 3), float64] */;
  %698 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_9559, dtype="float64") /* ty=Tensor[(5, 2, 3), float64] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%699, %700) /* ty=Tensor[(5, 2, 3), float64] */
}

def @func_2224() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) {
  %718 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) {
    %701 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %702 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %703 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %704 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
    %705 = reshape(%704, newshape=[8, 18]) /* ty=Tensor[(8, 18), uint64] */;
    %706 = @func_1215(%705) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(8, 18), uint64]) */;
    %707 = %706.2;
    %708 = cast(%707, dtype="float64") /* ty=Tensor[(16, 9, ?), float64] */;
    %709 = acos(%708) /* ty=Tensor[(16, 9, ?), float64] */;
    %710 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), uint64] */, dtype="bool") /* ty=Tensor[(144), bool] */;
    %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
    %712 = cast(%709, dtype="bool") /* ty=Tensor[(16, 9, ?), bool] */;
    %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %714 = %701.0;
    %715 = %702.0;
    %716 = %703.0;
    %717 = greater_equal(%712, %713) /* ty=Tensor[(16, 9, ?), bool] */;
    (%714, %715, %716, %717)
  };
  %718() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */
}

def @func_9103() -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) {
  %719 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %720 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %721 = %720.0;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %723 = reshape(%722, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
  %724 = @func_1291(%723) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
  %725 = cast(meta[relay.Constant][26] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %726 = reshape(%725, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), float64] */;
  %727 = @func_5591(%726) /* ty=(Tensor[(5, 10, 7), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %728 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %729 = %719.1;
  %730 = @func_5414() /* ty=Tensor[(16, 8, 11), float64] */;
  %731 = %724.0;
  %732 = %727.0;
  %733 = %728.0;
  (%729, %721, %730, %731, %732, meta[relay.Constant][26] /* ty=Tensor[(350), float64] */, %733)
}

def @func_15507() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %740 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %734 = @func_11952() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %735 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %736 = @func_13932() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %737 = %734.0;
    %738 = %735.1;
    %739 = %736.1;
    (%737, %738, %739)
  };
  %740() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_3916() -> (Tensor[(576), float32],) {
  %743 = fn () -> (Tensor[(576), float32],) {
    %741 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %742 = %741.0;
    (%742,)
  };
  %743() /* ty=(Tensor[(576), float32],) */
}

def @func_15421() -> Tensor[(576), float32] {
  @func_15419() /* ty=Tensor[(576), float32] */
}

def @func_5449() -> Tensor[(16, 8, 11), float64] {
  @func_5447() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6672(%var_6671: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) {
  %750 = fn (%var_6662: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) {
    %744 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %745 = cast(%var_6662, dtype="uint64") /* ty=Tensor[(1, 144), uint64] */;
    %746 = reshape(%745, newshape=[144]) /* ty=Tensor[(144), uint64] */;
    %747 = @func_924(%746) /* ty=(Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
    %748 = %744.0;
    %749 = %747.1;
    (%748, %749, %var_6662)
  };
  %750(%var_6671) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) */
}

def @func_11647() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
  @func_11645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) */
}

def @func_2329() -> (Tensor[(576), float32],) {
  %751 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %752 = %751.0;
  (%752,)
}

def @func_3791() -> (Tensor[(16, 8, 11), float64],) {
  @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_4499() -> Tensor[(16, 8, 11), float64] {
  %753 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %753.1
}

def @func_2691() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %754 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
  %755 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %756 = %754.0;
  %757 = %755.0;
  (%756, %757)
}

def @func_11399() -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_11397() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_13439() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_13437() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_7842(%var_7840: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) {
  @func_7839(%var_7840) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(196), uint64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(36, 16), float32], Tensor[(576), float32]) */
}

def @func_1843() -> (Tensor[(16, 8, 11), float64],) {
  %758 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %759 = %758.0;
  (%759,)
}

def @func_6571() -> (Tensor[(16, 9, ?), float32],) {
  %764 = fn () -> (Tensor[(16, 9, ?), float32],) {
    %760 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %761 = %760.1;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(16, 9, ?), float32] */;
    %763 = log(%762) /* ty=Tensor[(16, 9, ?), float32] */;
    (%763,)
  };
  %764() /* ty=(Tensor[(16, 9, ?), float32],) */
}

def @func_5210() -> (Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %765 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %766 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %767 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
  %769 = reshape(%768, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %770 = @func_83(%769) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %771 = @func_1711() /* ty=Tensor[(4, 9, 16), float32] */;
  %772 = %765.0;
  %773 = %766.0;
  %774 = %770.0;
  (%771, %767, %772, %773, %774)
}

def @func_3003() -> Tensor[(16, 8, 11), float64] {
  %780 = fn () -> Tensor[(16, 8, 11), float64] {
    %775 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %776 = %775.0;
    %777 = cast(%776, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
    %778 = rsqrt(%777) /* ty=Tensor[(16, 8, 11), float32] */;
    %779 = cast(%778, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    sin(%779) /* ty=Tensor[(16, 8, 11), float64] */
  };
  %780() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_19312(%var_19303: Tensor[(4, 8, 10), float64]) -> (Tensor[(4, 8, 10), float64],) {
  %781 = cast(%var_19303, dtype="float64") /* ty=Tensor[(4, 8, 10), float64] */;
  %782 = sqrt(%781) /* ty=Tensor[(4, 8, 10), float64] */;
  (%782,)
}

def @func_11923() -> (Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
  %783 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %784 = cast(meta[relay.Constant][27] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %785 = cast(meta[relay.Constant][27] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
  %786 = reshape(%784, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %787 = reshape(%785, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
  %788 = @func_5266(%786, %787) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
  %789 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %790 = %783.2;
  %791 = %788.0;
  %792 = %789.0;
  (%790, %791, meta[relay.Constant][27] /* ty=Tensor[(605), uint64] */, %792)
}

def @func_1966() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_17105() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  @func_17103() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */
}

def @func_19082() -> (Tensor[(576), float32],) {
  %793 = @func_575() /* ty=Tensor[(576), float32] */;
  (%793,)
}

def @func_5790(%var_5748: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) {
  %794 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %795 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %796 = cast(%var_5748, dtype="uint64") /* ty=Tensor[(196), uint64] */;
  %797 = reshape(%796, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), uint64] */;
  %798 = @func_3397(%797) /* ty=(Tensor[(2, 14, 7), uint64], Tensor[(2, 14, 7), bool], Tensor[(4, 9, 16), float32]) */;
  %799 = %794.1;
  %800 = %795.2;
  %801 = %798.1;
  (%799, %800, %801, %var_5748)
}

def @func_13361() -> Tensor[(16, 8, 11), float64] {
  @func_12100() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_5815() -> Tensor[(16, 8, 11), float64] {
  %803 = fn () -> Tensor[(16, 8, 11), float64] {
    %802 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %802.1
  };
  %803() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_11645() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
  %804 = cast(meta[relay.Constant][28] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %805 = reshape(%804, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), float64] */;
  %806 = @func_8826(%805) /* ty=(Tensor[(5, 13, 14), float64], Tensor[(16, 8, 11), float64]) */;
  %807 = @func_575() /* ty=Tensor[(576), float32] */;
  %808 = %806.1;
  (%807, %808, meta[relay.Constant][28] /* ty=Tensor[(910), float64] */)
}

def @func_16328(%var_16326: int8, %var_16327: Tensor[(3, 16, 1), int8]) -> (Tensor[(3, 16, 1), int32], Tensor[(3, 16, ?), float64]) {
  @func_16324(%var_16326, %var_16327) /* ty=(Tensor[(3, 16, 1), int32], Tensor[(3, 16, ?), float64]) */
}

def @func_6837() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_11952() -> (Tensor[(16, 8, 11), float64],) {
  %809 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  (%809,)
}

def @func_4432() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) {
  %818 = fn () -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) {
    %810 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %811 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %812 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %813 = reshape(%811, newshape=[]) /* ty=uint64 */;
    %814 = reshape(%812, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
    %815 = @func_3465(%813, %814) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %816 = %810.0;
    %817 = %815.2;
    (%816, %817, meta[relay.Constant][29] /* ty=uint64 */, meta[relay.Constant][30] /* ty=Tensor[(60), uint64] */)
  };
  %818() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32], uint64, Tensor[(60), uint64]) */
}

def @func_4542() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %819 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %820 = %819.1;
  %821 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
  (%820, %821)
}

def @func_12490() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  @func_12488() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_11509() -> (Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %822 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
  %823 = cast(meta[relay.Constant][31] /* ty=Tensor[(1408), float64] */, dtype="float64") /* ty=Tensor[(1408), float64] */;
  %824 = reshape(%823, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
  %825 = @func_1127(%824) /* ty=(Tensor[(16, 8, 11), int16],) */;
  %826 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %827 = reshape(%826, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %828 = @func_6886(%827) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
  %829 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %830 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %831 = %822.3;
  %832 = %825.0;
  %833 = %828.2;
  %834 = %829.1;
  %835 = %830.0;
  (%831, %832, meta[relay.Constant][31] /* ty=Tensor[(1408), float64] */, %833, meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, %834, %835)
}

def @func_2367() -> Tensor[(576), float32] {
  %836 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %836.4
}

def @func_1845() -> (Tensor[(16, 8, 11), float64],) {
  @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_1647() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_20114() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %841 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %837 = @func_16580() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %838 = @func_19501() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %839 = %837.0;
    %840 = %838.1;
    (%839, %840)
  };
  %841() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_642() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) {
  %853 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    %842 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %843 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %844 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %845 = %844.0;
    %846 = cast(%845, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
    %847 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %848 = %842.0;
    %849 = %843.2;
    %850 = cos(%846) /* ty=Tensor[(16, 8, 11), float32] */;
    %851 = @func_575() /* ty=Tensor[(576), float32] */;
    %852 = %847.2;
    (%848, %849, %850, %851, %852)
  };
  %853() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */
}

def @func_13490() -> Tensor[(576), float32] {
  %854 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %854.4
}

def @func_1129(%var_1128: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), int16],) {
  %862 = fn (%var_1098: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), int16],) {
    %855 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %856 = %855.0;
    %857 = cast(%var_1098, dtype="int16") /* ty=Tensor[(16, 8, 11), int16] */;
    %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%856, dtype="int16") /* ty=Tensor[(16, 8, 11), int16] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %861 = maximum(%859, %860) /* ty=Tensor[(16, 8, 11), int16] */;
    (%861,)
  };
  %862(%var_1128) /* ty=(Tensor[(16, 8, 11), int16],) */
}

def @func_20148() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_20146() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_6966(%var_6965: Tensor[(5, 12, 6), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) {
  %898 = fn (%var_6932: Tensor[(5, 12, 6), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) {
    %863 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %864 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %865 = cast(meta[relay.Constant][33] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
    %866 = cast(meta[relay.Constant][33] /* ty=Tensor[(605), uint64] */, dtype="uint64") /* ty=Tensor[(605), uint64] */;
    %867 = reshape(%865, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
    %868 = reshape(%866, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint64] */;
    %869 = @func_5266(%867, %868) /* ty=(Tensor[(11, 11, 5), uint64], Tensor[(4, 9, 16), float32]) */;
    %870 = @func_5426() /* ty=(Tensor[(576), float32],) */;
    %871 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %872 = reshape(%871, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
    %873 = @func_3338(%872) /* ty=(Tensor[(5, 12, 6), float64],) */;
    %874 = %873.0;
    %875 = cast(%var_6932, dtype="bool") /* ty=Tensor[(5, 12, 6), bool] */;
    %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%874, dtype="bool") /* ty=Tensor[(5, 12, 6), bool] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %879 = %864.0;
    %880 = cast(%879, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %881 = reshape(%880, newshape=[1408]) /* ty=Tensor[(1408), float64] */;
    %882 = @func_1291(%881) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), int16], Tensor[(1408), float64]) */;
    %883 = cast(meta[relay.Constant][33] /* ty=Tensor[(605), uint64] */, dtype="float32") /* ty=Tensor[(605), float32] */;
    %884 = acosh(%883) /* ty=Tensor[(605), float32] */;
    %885 = cast(meta[relay.Constant][33] /* ty=Tensor[(605), uint64] */, dtype="bool") /* ty=Tensor[(605), bool] */;
    %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(1), int32] */;
    %887 = cast(%884, dtype="bool") /* ty=Tensor[(605), bool] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?), bool] */;
    %889 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
    %890 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
    %891 = %863.0;
    %892 = %869.0;
    %893 = %870.0;
    %894 = logical_or(%877, %878) /* ty=Tensor[(5, 12, 6), bool] */;
    %895 = %882.0;
    %896 = less_equal(%887, %888) /* ty=Tensor[(605), bool] */;
    %897 = %889.1;
    (%890, %891, %879, %892, meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, %893, %894, %895, %896, %897)
  };
  %898(%var_6965) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(576), float32], Tensor[(5, 12, 6), bool], Tensor[(4, 9, 16), float32], Tensor[(605), bool], Tensor[(16, 8, 11), float64]) */
}

def @func_9568(%var_9566: Tensor[(5, 2, 3), float64], %var_9567: Tensor[(5, 2, 3), float64]) -> Tensor[(5, 2, 3), float64] {
  @func_9564(%var_9566, %var_9567) /* ty=Tensor[(5, 2, 3), float64] */
}

def @func_9843() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) {
  %906 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) {
    %899 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %900 = %899.0;
    %901 = cast(%900, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %902 = reshape(%901, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
    %903 = @func_1127(%902) /* ty=(Tensor[(16, 8, 11), int16],) */;
    %904 = %903.0;
    %905 = @func_6002() /* ty=Tensor[(14, 15, 6), float32] */;
    (%900, %904, %905)
  };
  %906() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) */
}

def @func_2970() -> (Tensor[(16, 8, 11), float64],) {
  %909 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %907 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %908 = %907.1;
    (%908,)
  };
  %909() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_16031() -> (Tensor[(16, 8, 11), float32],) {
  @func_16029() /* ty=(Tensor[(16, 8, 11), float32],) */
}

def @func_13835() -> (Tensor[(16, 8, 11), float64],) {
  @func_13833() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_20201(%var_20199: Tensor[(90), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(90), float32]) {
  @func_20198(%var_20199) /* ty=(Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(90), float32]) */
}

def @func_10798() -> (Tensor[(16, 8, 11), float64],) {
  %912 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %910 = @func_2601() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %911 = %910.1;
    (%911,)
  };
  %912() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_14263(%var_14262: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64], Tensor[(910), float64]) {
  %920 = fn (%var_14257: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64], Tensor[(910), float64]) {
    %913 = cast(meta[relay.Constant][35] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %914 = cast(%var_14257, dtype="float64") /* ty=Tensor[(910), float64] */;
    %915 = reshape(%913, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %916 = reshape(%914, newshape=[910]) /* ty=Tensor[(910), float64] */;
    %917 = @func_12424(%915, %916) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) */;
    %918 = @func_5879() /* ty=Tensor[(16, 8, 11), float32] */;
    %919 = %917.0;
    (%918, %919, meta[relay.Constant][35] /* ty=Tensor[(350), float64] */, %var_14257)
  };
  %920(%var_14262) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64], Tensor[(910), float64]) */
}

def @func_16427() -> Tensor[(16, 8, 11), float64] {
  @func_16425() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_2476(%var_2474: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
  @func_2473(%var_2474) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */
}

def @func_2054(%var_2052: Tensor[(10, 16, 5), float32]) -> (Tensor[(10, 16, 5), float32],) {
  @func_2051(%var_2052) /* ty=(Tensor[(10, 16, 5), float32],) */
}

def @func_11257() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */
}

def @func_8052() -> Tensor[(4, 9, 16), float32] {
  @func_1711() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_11593() -> (Tensor[(16, 8, 11), float64],) {
  %923 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %921 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %922 = %921.0;
    (%922,)
  };
  %923() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_5132() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %927 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %924 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %925 = %924.2;
    %926 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
    (%925, %926)
  };
  %927() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_18019() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %928 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %929 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %930 = %928.0;
  %931 = %929.0;
  (%930, %931)
}

def @func_20452() -> (Tensor[(576), float32],) {
  %934 = fn () -> (Tensor[(576), float32],) {
    %932 = @func_6293() /* ty=(Tensor[(576), float32],) */;
    %933 = %932.0;
    (%933,)
  };
  %934() /* ty=(Tensor[(576), float32],) */
}

def @func_11424() -> (Tensor[(16, 8, 11), float64],) {
  %936 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %935 = @func_11001() /* ty=Tensor[(16, 8, 11), float64] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_3690() -> (Tensor[(16, 8, 11), float64],) {
  %937 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %938 = %937.0;
  (%938,)
}

def @func_13805() -> (Tensor[(576), float32],) {
  %940 = fn () -> (Tensor[(576), float32],) {
    %939 = @func_9584() /* ty=Tensor[(576), float32] */;
    (%939,)
  };
  %940() /* ty=(Tensor[(576), float32],) */
}

def @func_9620() -> (Tensor[(16, 8, 11), float64],) {
  @func_9618() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_17493() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %945 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %941 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %942 = @func_11592() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %943 = %941.0;
    %944 = %942.0;
    (%943, %944)
  };
  %945() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_11537() -> Tensor[(4, 9, 16), float32] {
  @func_11535() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_5497() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %951 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
    %946 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %947 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %948 = %946.0;
    %949 = %947.0;
    %950 = @func_1877() /* ty=Tensor[(16, 8, 11), float64] */;
    (%948, %949, %950)
  };
  %951() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_12819(%var_12818: Tensor[(10, 15, 15), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 15, 15), float32], Tensor[(576), float32]) {
  %959 = fn (%var_12776: Tensor[(10, 15, 15), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(10, 15, 15), float32], Tensor[(576), float32]) {
    %952 = cast(%var_12776, dtype="float64") /* ty=Tensor[(10, 15, 15), float64] */;
    %953 = sigmoid(%952) /* ty=Tensor[(10, 15, 15), float64] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
    %955 = @func_3653() /* ty=(Tensor[(576), float32],) */;
    %956 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
    %957 = rsqrt(%954) /* ty=Tensor[(10, 15, 15), float32] */;
    %958 = %955.0;
    (%956, %957, %958)
  };
  %959(%var_12818) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(10, 15, 15), float32], Tensor[(576), float32]) */
}

def @func_12488() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %960 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %961 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %962 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %963 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %964 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %965 = %960.1;
  %966 = %961.1;
  %967 = %962.0;
  %968 = %963.1;
  %969 = %964.0;
  (%965, %966, %967, %968, %969)
}

def @func_12615() -> (Tensor[(16, 8, 11), float64],) {
  %970 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %971 = %970.0;
  (%971,)
}

def @func_20313(%var_20311: Tensor[(5, 13, 15), float64], %var_20312: Tensor[(350), float64]) -> (Tensor[(5, 13, 15), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) {
  @func_20309(%var_20311, %var_20312) /* ty=(Tensor[(5, 13, 15), float32], Tensor[(16, 8, 11), float64], Tensor[(350), float64]) */
}

def @func_7300(%var_7298: Tensor[(208), int8]) -> (Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_7297(%var_7298) /* ty=(Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_15052() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %972 = @func_14086() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %973 = @func_3302() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %974 = %972.2;
  %975 = %973.1;
  (%974, %975)
}

def @func_15345() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %983 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %976 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %977 = @func_12192() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) */;
    %978 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
    %979 = %976.0;
    %980 = %977.0;
    %981 = %978.0;
    %982 = @func_9155() /* ty=Tensor[(16, 8, 11), float64] */;
    (%979, %980, %981, %982)
  };
  %983() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_15272() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %984 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %985 = @func_10485() /* ty=(Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %986 = @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
  %987 = %984.0;
  %988 = %985.2;
  %989 = %986.4;
  (%987, %988, %989)
}

def @func_19502() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %998 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %990 = @func_17151() /* ty=(Tensor[(576), float32],) */;
    %991 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %992 = %991.0;
    %993 = cast(%992, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %994 = reshape(%993, newshape=[16, 8, 11]) /* ty=Tensor[(16, 8, 11), float64] */;
    %995 = @func_11346(%994) /* ty=(Tensor[(16, 8, 11), float64],) */;
    %996 = %990.0;
    %997 = %995.0;
    (%996, %992, %997)
  };
  %998() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_2137() -> (Tensor[(16, 8, 11), float64],) {
  @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_2331() -> (Tensor[(576), float32],) {
  @func_2329() /* ty=(Tensor[(576), float32],) */
}

def @func_9618() -> (Tensor[(16, 8, 11), float64],) {
  %999 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1000 = %999.0;
  (%1000,)
}

def @func_1879() -> Tensor[(16, 8, 11), float64] {
  @func_1877() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_2135() -> (Tensor[(16, 8, 11), float64],) {
  %1001 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1002 = %1001.0;
  (%1002,)
}

def @func_18275(%var_18273: Tensor[(16, 5, 13), uint8], %var_18274: Tensor[(16, 5, 13), uint8]) -> (Tensor[(16, 5, 13), uint8], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_18271(%var_18273, %var_18274) /* ty=(Tensor[(16, 5, 13), uint8], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_7365() -> Tensor[(16, 8, 11), float64] {
  %1004 = fn () -> Tensor[(16, 8, 11), float64] {
    %1003 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1003.0
  };
  %1004() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_10699() -> Tensor[(16, 8, 11), float64] {
  @func_10697() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_3601(%var_3596: int8, %var_3597: Tensor[(4, 13, 4), int8]) -> Tensor[(4, 13, 4), int8] {
  %1005 = cast(%var_3596, dtype="int8") /* ty=int8 */;
  %1006 = cast(%var_3597, dtype="int8") /* ty=Tensor[(4, 13, 4), int8] */;
  multiply(%1005, %1006) /* ty=Tensor[(4, 13, 4), int8] */
}

def @func_11870() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_11868() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_18271(%var_18253: Tensor[(16, 5, 13), uint8], %var_18254: Tensor[(16, 5, 13), uint8]) -> (Tensor[(16, 5, 13), uint8], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1007 = cast(%var_18254, dtype="uint8") /* ty=Tensor[(16, 5, 13), uint8] */;
  %1008 = shape_of(%var_18253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%var_18253, dtype="uint8") /* ty=Tensor[(16, 5, 13), uint8] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1011 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1012 = logical_xor(%1009, %1010) /* ty=Tensor[(16, 5, 13), uint8] */;
  %1013 = %1011.2;
  %1014 = @func_13270() /* ty=Tensor[(576), float32] */;
  (%1012, %1013, %1014)
}

def @func_13883(%var_13881: Tensor[(504), int16]) -> (Tensor[(16, 9, ?), float32], Tensor[(3, 14, 12), int16], Tensor[(504), int16]) {
  @func_13880(%var_13881) /* ty=(Tensor[(16, 9, ?), float32], Tensor[(3, 14, 12), int16], Tensor[(504), int16]) */
}

def @func_14168() -> (Tensor[(16, 8, 11), float64],) {
  @func_14166() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_17416(%var_17414: Tensor[(360), float64]) -> (Tensor[(4, 9, 16), float32], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(605), uint64], Tensor[(576), float32]) {
  @func_17413(%var_17414) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(11, 11, 5), uint64], Tensor[(360), float64], Tensor[(605), uint64], Tensor[(576), float32]) */
}

def @func_6746() -> (Tensor[(16, 8, 11), float64],) {
  %1017 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1015 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1016 = %1015.1;
    (%1016,)
  };
  %1017() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_12101() -> Tensor[(16, 8, 11), float64] {
  %1019 = fn () -> Tensor[(16, 8, 11), float64] {
    %1018 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1018.0
  };
  %1019() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_18103(%var_18101: Tensor[(15, 11, 11), uint8]) -> (Tensor[(15, 11, 11), uint8],) {
  @func_18100(%var_18101) /* ty=(Tensor[(15, 11, 11), uint8],) */
}

def @func_18021() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_18019() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_19655() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1025 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %1020 = @func_15506() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1021 = @func_18713() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
    %1022 = @func_14132() /* ty=Tensor[(16, 8, 11), float64] */;
    %1023 = %1020.0;
    %1024 = %1021.0;
    (%1022, %1023, %1024)
  };
  %1025() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_5693(%var_5683: Tensor[(60), uint64]) -> (Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) {
  %1026 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1027 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %1028 = cast(False /* ty=bool */, dtype="uint64") /* ty=uint64 */;
  %1029 = cast(%var_5683, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1030 = reshape(%1028, newshape=[]) /* ty=uint64 */;
  %1031 = reshape(%1029, newshape=[5, 1, 12]) /* ty=Tensor[(5, 1, 12), uint64] */;
  %1032 = @func_3465(%1030, %1031) /* ty=(Tensor[(5, ?, 12), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1033 = logical_or(%1026, %1027) /* ty=Tensor[(4, 4, 13), bool] */;
  %1034 = %1032.0;
  (%1033, %1034, %var_5683)
}

def @func_11868() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1035 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1036 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1037 = %1035.0;
  %1038 = %1036.1;
  (%1037, %1038)
}

def @func_13728() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1039 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1040 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1041 = %1039.0;
  %1042 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
  %1043 = %1040.0;
  %1044 = @func_9584() /* ty=Tensor[(576), float32] */;
  (%1041, %1042, %1043, %1044)
}

def @func_6477() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1045 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1046 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_16269(%var_16259: Tensor[(12, 42), float32]) -> (Tensor[(576), float32], Tensor[(4, 9, 16), float32], Tensor[(8, 9, 7), float32], Tensor[(12, 42), float32]) {
  %1048 = @func_14847() /* ty=(Tensor[(576), float32],) */;
  %1049 = @func_14564() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) */;
  %1050 = cast(%var_16259, dtype="float32") /* ty=Tensor[(12, 42), float32] */;
  %1051 = reshape(%1050, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %1052 = @func_5336(%1051) /* ty=(Tensor[(8, 9, 7), float32],) */;
  %1053 = %1048.0;
  %1054 = %1049.0;
  %1055 = %1052.0;
  (%1053, %1054, %1055, %var_16259)
}

def @func_411() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) {
  @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */
}

def @func_561() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
  %1056 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1057 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1058 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1059 = %1056.0;
  %1060 = %1057.2;
  %1061 = %1058.2;
  (%1059, %1060, %1061)
}

def @func_17151() -> (Tensor[(576), float32],) {
  %1062 = @func_2329() /* ty=(Tensor[(576), float32],) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_8982() -> (Tensor[(16, 8, 11), float64],) {
  @func_8980() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_16168() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32]) {
  %1078 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32]) {
    %1064 = @func_12555() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) */;
    %1065 = %1064.1;
    %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
    %1067 = exp(%1066) /* ty=Tensor[(6, 4, 16), float64] */;
    %1068 = cast(%1067, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
    %1069 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1070 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
    %1071 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1072 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
    %1073 = @func_11001() /* ty=Tensor[(16, 8, 11), float64] */;
    %1074 = atan(%1068) /* ty=Tensor[(6, 4, 16), float32] */;
    %1075 = %1069.0;
    %1076 = %1070.0;
    %1077 = %1071.1;
    (%1072, %1073, %1074, %1075, %1076, %1077)
  };
  %1078() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32]) */
}

def @func_18905() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1079 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1080 = %1079.1;
  %1081 = @func_15552() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1080, %1081)
}

def @func_8199(%var_8194: Tensor[(90), float32]) -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
  %1082 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1083 = cast(%var_8194, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1084 = reshape(%1083, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %1085 = @func_2473(%1084) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
  %1086 = %1082.1;
  %1087 = %1085.1;
  (%1086, %1087, %var_8194)
}

def @func_13730() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_13728() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_8596() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_12194() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) {
  @func_12192() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) */
}

def @func_13672(%var_13670: Tensor[(1, 144), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), bool]) {
  @func_13669(%var_13670) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), bool]) */
}

def @func_10174(%var_10172: float32, %var_10173: Tensor[(14, 1, 2), float32]) -> (Tensor[(14, 1, 2), float32],) {
  @func_10170(%var_10172, %var_10173) /* ty=(Tensor[(14, 1, 2), float32],) */
}

def @func_8391() -> (Tensor[(16, 8, 11), float64],) {
  %1090 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1088 = @func_2001() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) */;
    %1089 = %1088.0;
    (%1089,)
  };
  %1090() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_12902() -> Tensor[(576), float32] {
  %1092 = fn () -> Tensor[(576), float32] {
    %1091 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %1091.0
  };
  %1092() /* ty=Tensor[(576), float32] */
}

def @func_18100(%var_18094: Tensor[(15, 11, 11), uint8]) -> (Tensor[(15, 11, 11), uint8],) {
  %1093 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 11, 11), uint8] */, dtype="uint8") /* ty=Tensor[(15, 11, 11), uint8] */;
  %1094 = shape_of(%var_18094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(%var_18094, dtype="uint8") /* ty=Tensor[(15, 11, 11), uint8] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1097 = minimum(%1095, %1096) /* ty=Tensor[(15, 11, 11), uint8] */;
  (%1097,)
}

def @func_3654() -> (Tensor[(576), float32],) {
  %1100 = fn () -> (Tensor[(576), float32],) {
    %1098 = @func_1815() /* ty=(Tensor[(576), float32],) */;
    %1099 = %1098.0;
    (%1099,)
  };
  %1100() /* ty=(Tensor[(576), float32],) */
}

def @func_18069() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1101 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1102 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1103 = %1101.0;
  %1104 = %1102.0;
  (%1103, %1104)
}

def @func_9501() -> (Tensor[(16, 8, 11), float64],) {
  @func_9499() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_5881() -> Tensor[(16, 8, 11), float32] {
  @func_5879() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_842(%var_840: Tensor[(16, 9, 1), uint64], %var_841: Tensor[(16, 9, 1), uint64]) -> (Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1119 = fn (%var_819: Tensor[(16, 9, 1), uint64], %var_820: Tensor[(16, 9, 1), uint64]) -> (Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1105 = cast(%var_820, dtype="uint64") /* ty=Tensor[(16, 9, 1), uint64] */;
    %1106 = shape_of(%var_819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1107 = cast(%var_819, dtype="uint64") /* ty=Tensor[(16, 9, 1), uint64] */;
    %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1109 = right_shift(%1107, %1108) /* ty=Tensor[(16, 9, ?), uint64] */;
    %1110 = cast(%var_819, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
    %1111 = shape_of(%1109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1112 = cast(%1109, dtype="float64") /* ty=Tensor[(16, 9, ?), float64] */;
    %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1114 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1115 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %1116 = power(%1112, %1113) /* ty=Tensor[(16, 9, ?), float64] */;
    %1117 = %1114.1;
    %1118 = %1115.0;
    (%1116, %1117, %1118)
  };
  %1119(%var_840, %var_841) /* ty=(Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_16580() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1120 = @func_11745() /* ty=(Tensor[(576), float32],) */;
  %1121 = @func_15565() /* ty=Tensor[(16, 8, 11), float64] */;
  %1122 = %1120.0;
  (%1121, %1122)
}

def @func_8980() -> (Tensor[(16, 8, 11), float64],) {
  %1123 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1123,)
}

def @func_16582() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_16580() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_9155() -> Tensor[(16, 8, 11), float64] {
  @func_6056() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_13880(%var_13876: Tensor[(504), int16]) -> (Tensor[(16, 9, ?), float32], Tensor[(3, 14, 12), int16], Tensor[(504), int16]) {
  %1124 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %1125 = cast(%var_13876, dtype="int16") /* ty=Tensor[(504), int16] */;
  %1126 = cast(%var_13876, dtype="int16") /* ty=Tensor[(504), int16] */;
  %1127 = reshape(%1125, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int16] */;
  %1128 = reshape(%1126, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int16] */;
  %1129 = @func_9755(%1127, %1128) /* ty=(Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) */;
  %1130 = %1124.1;
  %1131 = %1129.0;
  (%1130, %1131, %var_13876)
}

def @func_6340() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_4209(%var_4204: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(360), float64], Tensor[(5, 12, 6), float64]) {
  %1132 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1133 = cast(%var_4204, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1134 = reshape(%1133, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
  %1135 = @func_3338(%1134) /* ty=(Tensor[(5, 12, 6), float64],) */;
  %1136 = %1135.0;
  %1137 = cast(%1136, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %1138 = %1132.0;
  %1139 = sigmoid(%1137) /* ty=Tensor[(5, 12, 6), float64] */;
  (%1138, %var_4204, %1139)
}

def @func_14166() -> (Tensor[(16, 8, 11), float64],) {
  %1140 = @func_13437() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_1435(%var_1421: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1142 = cast(%var_1421, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %1143 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1144 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1145 = exp(%1142) /* ty=Tensor[(5, 14, 4), float64] */;
  %1146 = %1143.0;
  %1147 = %1144.0;
  (%1145, %1146, %1147)
}

def @func_14362() -> (Tensor[(576), float32],) {
  %1149 = fn () -> (Tensor[(576), float32],) {
    %1148 = @func_2367() /* ty=Tensor[(576), float32] */;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(576), float32],) */
}

def @func_2002() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) {
  %1158 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) {
    %1150 = @func_1577() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %1151 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
    %1152 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
    %1153 = reshape(%1151, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
    %1154 = reshape(%1152, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
    %1155 = @func_839(%1153, %1154) /* ty=(Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1156 = %1150.1;
    %1157 = %1155.0;
    (%1156, %1157, meta[relay.Constant][38] /* ty=Tensor[(144), uint64] */)
  };
  %1158() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64]) */
}

def @func_7223() -> (Tensor[(16, 8, 11), float64],) {
  %1159 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1159,)
}

def @func_6849() -> (Tensor[(16, 8, 11), float64],) {
  @func_6847() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_12732() -> Tensor[(16, 8, 11), float32] {
  @func_12730() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_1577() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  %1160 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1161 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1162 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1163 = %1162.2;
  %1164 = cast(%1163, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1165 = reshape(%1164, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %1166 = @func_83(%1165) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %1167 = %1160.0;
  %1168 = %1161.0;
  %1169 = %1166.0;
  (%1167, %1168, %1163, %1169)
}

def @func_1713() -> Tensor[(4, 9, 16), float32] {
  @func_1711() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_2117() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  @func_2115() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */
}

def @func_1002() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1174 = fn () -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
    %1170 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
    %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
    %1172 = asin(%1171) /* ty=Tensor[(16, 8, 11), float32] */;
    %1173 = @func_881() /* ty=Tensor[(16, 8, 11), float64] */;
    (%1172, %1173)
  };
  %1174() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_11121(%var_11113: float32, %var_11114: Tensor[(28), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(14, 1, 2), float32], float32, Tensor[(28), float32]) {
  %1175 = @func_6511() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1176 = cast(%var_11113, dtype="float32") /* ty=float32 */;
  %1177 = cast(%var_11114, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1178 = reshape(%1176, newshape=[]) /* ty=float32 */;
  %1179 = reshape(%1177, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float32] */;
  %1180 = @func_10170(%1178, %1179) /* ty=(Tensor[(14, 1, 2), float32],) */;
  %1181 = %1175.0;
  %1182 = %1180.0;
  (%1181, %1182, %var_11113, %var_11114)
}

def @func_13183() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) {
  %1191 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) {
    %1183 = @func_11423() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1184 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1185 = @func_9842() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(14, 15, 6), float32]) */;
    %1186 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1187 = %1183.0;
    %1188 = %1184.0;
    %1189 = %1185.1;
    %1190 = %1186.0;
    (%1187, %1188, %1189, %1190)
  };
  %1191() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) */
}

def @func_9157() -> Tensor[(16, 8, 11), float64] {
  @func_9155() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15552() -> Tensor[(16, 8, 11), float64] {
  @func_14132() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_697() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_18957() -> Tensor[(576), float32] {
  @func_18955() /* ty=Tensor[(576), float32] */
}

def @func_5415() -> Tensor[(16, 8, 11), float64] {
  %1193 = fn () -> Tensor[(16, 8, 11), float64] {
    %1192 = @func_1645() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %1192.1
  };
  %1193() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_1473() -> (Tensor[(16, 8, 11), float64],) {
  %1194 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_2115() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %1196 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1197 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1198 = %1196.2;
  %1199 = %1197.0;
  (%1198, %1199)
}

def @func_12991() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_12989() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_4998() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
  %1208 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
    %1200 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1201 = @func_4771() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1202 = @func_3653() /* ty=(Tensor[(576), float32],) */;
    %1203 = @func_3002() /* ty=Tensor[(16, 8, 11), float64] */;
    %1204 = %1200.0;
    %1205 = %1201.3;
    %1206 = @func_2367() /* ty=Tensor[(576), float32] */;
    %1207 = %1202.0;
    (%1203, %1204, %1205, %1206, %1207)
  };
  %1208() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */
}

def @func_12270() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1211 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %1209 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
    %1210 = @func_7137() /* ty=Tensor[(16, 8, 11), float32] */;
    (%1209, %1210)
  };
  %1211() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_19999() -> (Tensor[(16, 8, 11), float32],) {
  %1214 = fn () -> (Tensor[(16, 8, 11), float32],) {
    %1212 = @func_10023() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1213 = %1212.2;
    (%1213,)
  };
  %1214() /* ty=(Tensor[(16, 8, 11), float32],) */
}

def @func_18654() -> Tensor[(576), float32] {
  @func_12662() /* ty=Tensor[(576), float32] */
}

def @func_3900() -> (Tensor[(16, 8, 11), float64],) {
  @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_16003() -> (Tensor[(16, 9, ?), float32],) {
  %1215 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_6057() -> Tensor[(16, 8, 11), float64] {
  %1218 = fn () -> Tensor[(16, 8, 11), float64] {
    %1217 = @func_2223() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool]) */;
    %1217.2
  };
  %1218() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_14565() -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
  %1223 = fn () -> (Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) {
    %1219 = @func_11535() /* ty=Tensor[(4, 9, 16), float32] */;
    %1220 = cast(%1219, dtype="float32") /* ty=Tensor[(4, 9, 16), float32] */;
    %1221 = sin(%1220) /* ty=Tensor[(4, 9, 16), float32] */;
    %1222 = @func_7364() /* ty=Tensor[(16, 8, 11), float64] */;
    (%1221, %1222)
  };
  %1223() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_14338() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1227 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %1224 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %1225 = @func_8084() /* ty=Tensor[(576), float32] */;
    %1226 = %1224.0;
    (%1225, %1226)
  };
  %1227() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_15274() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_15272() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_14277() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1228 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1229 = %1228.1;
  %1230 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1229, %1230)
}

def @func_16676() -> (Tensor[(16, 8, 11), float64],) {
  %1231 = @func_15017() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1232 = %1231.0;
  (%1232,)
}

def @func_3789() -> (Tensor[(16, 8, 11), float64],) {
  %1233 = @func_766() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1233,)
}

def @func_20380() -> (Tensor[(16, 8, 11), float64],) {
  %1236 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1234 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1235 = %1234.0;
    (%1235,)
  };
  %1236() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_17901() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(72, 2), uint64], Tensor[(16, 8, 11), float64]) {
  @func_17899() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(72, 2), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_3341(%var_3339: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
  @func_3338(%var_3339) /* ty=(Tensor[(5, 12, 6), float64],) */
}

def @func_6274(%var_6273: uint64) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
  %1253 = fn (%var_6243: uint64) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) {
    %1237 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1238 = @func_3886() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %1239 = cast(%var_6243, dtype="uint64") /* ty=uint64 */;
    %1240 = reshape(%1239, newshape=[]) /* ty=uint64 */;
    %1241 = @func_4908(%1240) /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], uint64, Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */;
    %1242 = @func_3789() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1243 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1244 = cast(meta[relay.Constant][39] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %1245 = reshape(%1244, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %1246 = @func_2473(%1245) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
    %1247 = %1237.0;
    %1248 = %1238.0;
    %1249 = %1241.5;
    %1250 = %1242.0;
    %1251 = %1243.0;
    %1252 = %1246.5;
    (%1247, %1248, %1249, %var_6243, %1250, %1251, %1252, meta[relay.Constant][39] /* ty=Tensor[(90), float32] */)
  };
  %1253(%var_6273) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */
}

def @func_19084() -> (Tensor[(576), float32],) {
  @func_19082() /* ty=(Tensor[(576), float32],) */
}

def @func_11001() -> Tensor[(16, 8, 11), float64] {
  %1254 = @func_9103() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(5, 10, 7), float64], Tensor[(350), float64], Tensor[(16, 8, 11), float64]) */;
  %1254.1
}

def @func_12192() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32]) {
  %1255 = @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */;
  %1256 = @func_11444() /* ty=Tensor[(16, 8, 11), float64] */;
  %1257 = %1255.1;
  (%1256, %1257)
}

def @func_16029() -> (Tensor[(16, 8, 11), float32],) {
  %1258 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1259 = %1258.0;
  (%1259,)
}

def @func_16762(%var_16736: Tensor[(8, 2, 6), float64], %var_16750: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), float64] {
  %1260 = cast(%var_16736, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1261 = acosh(%1260) /* ty=Tensor[(8, 2, 6), float64] */;
  %1262 = cast(%var_16750, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1263 = shape_of(%1261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1264 = cast(%1261, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1264, %1265) /* ty=Tensor[(8, 2, 6), float64] */
}

def @func_3507(%var_3506: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), uint32] {
  %1272 = fn (%var_3498: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), uint32] {
    %1266 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1267 = %1266.1;
    %1268 = cast(%var_3498, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
    %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%1267, dtype="uint32") /* ty=Tensor[(16, 8, 11), uint32] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    left_shift(%1270, %1271) /* ty=Tensor[(16, 8, 11), uint32] */
  };
  %1272(%var_3506) /* ty=Tensor[(16, 8, 11), uint32] */
}

def @func_4544() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_17899() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(72, 2), uint64], Tensor[(16, 8, 11), float64]) {
  %1273 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1274 = cast(meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint64] */, dtype="uint64") /* ty=Tensor[(72, 2), uint64] */;
  %1275 = reshape(%1274, newshape=[1, 144]) /* ty=Tensor[(1, 144), uint64] */;
  %1276 = @func_6670(%1275) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(1, 144), uint64]) */;
  %1277 = %1273.0;
  %1278 = %1276.0;
  %1279 = @func_8106() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1277, %1278, meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint64] */, %1279)
}

def @func_2823() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1280 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1281 = %1280.0;
  %1282 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1281, %1282)
}

def @func_12555() -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) {
  %1283 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1284 = cast(meta[relay.Constant][41] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1285 = reshape(%1284, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float64] */;
  %1286 = @func_5392(%1285) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) */;
  %1287 = %1286.3;
  %1288 = cast(%1287, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %1289 = reshape(%1288, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %1290 = @func_6886(%1289) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */;
  %1291 = %1283.0;
  %1292 = %1290.2;
  (%1291, %1287, meta[relay.Constant][41] /* ty=Tensor[(384), float64] */, %1292)
}

def @func_5793(%var_5791: Tensor[(196), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) {
  @func_5790(%var_5791) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(2, 14, 7), bool], Tensor[(196), uint64]) */
}

def @func_7574() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_15152() -> Tensor[(16, 8, 11), float64] {
  @func_15150() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_2651() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1293 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1294 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1295 = %1293.2;
  %1296 = @func_2367() /* ty=Tensor[(576), float32] */;
  %1297 = %1294.0;
  (%1295, %1296, %1297)
}

def @func_14934() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_15827() -> (Tensor[(16, 8, 11), float32], Tensor[(384), float64]) {
  %1298 = @func_11509() /* ty=(Tensor[(16, 9, ?), bool], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(384), float64], Tensor[(384), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1299 = @func_12629() /* ty=Tensor[(16, 8, 11), float32] */;
  %1300 = %1298.3;
  (%1299, %1300)
}

def @func_13934() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_13932() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_9586() -> Tensor[(576), float32] {
  @func_9584() /* ty=Tensor[(576), float32] */
}

def @func_17315() -> (Tensor[(16, 8, 11), float64],) {
  %1301 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1302 = %1301.0;
  (%1302,)
}

def @func_17817() -> Tensor[(16, 8, 11), float64] {
  %1303 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1303.0
}

def @func_1964() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1304 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1305 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
  %1306 = %1304.1;
  %1307 = %1305.0;
  (%1306, %1307)
}

def @func_14673() -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32]) {
  %1317 = fn () -> (Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32]) {
    %1308 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %1309 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %1310 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1311 = @func_8390() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1312 = %1308.1;
    %1313 = %1309.0;
    %1314 = %1310.1;
    %1315 = %1311.0;
    %1316 = @func_590() /* ty=Tensor[(4, 9, 16), float32] */;
    (%1312, %1313, %1314, %1315, %1316)
  };
  %1317() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32]) */
}

def @func_14446() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_14444() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_6512() -> (Tensor[(16, 8, 11), float64],) {
  %1320 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1318 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1319 = %1318.0;
    (%1319,)
  };
  %1320() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_15566() -> Tensor[(16, 8, 11), float64] {
  %1322 = fn () -> Tensor[(16, 8, 11), float64] {
    %1321 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1321.0
  };
  %1322() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_2292() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  @func_2290() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */
}

def @func_592() -> Tensor[(4, 9, 16), float32] {
  @func_590() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_798() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1328 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %1323 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
    %1324 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1325 = %1323.0;
    %1326 = %1324.0;
    %1327 = @func_575() /* ty=Tensor[(576), float32] */;
    (%1325, %1326, %1327)
  };
  %1328() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_18871() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64]) {
  %1329 = @func_2135() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1330 = @func_6338() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1331 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1332 = %1329.0;
  %1333 = @func_18654() /* ty=Tensor[(576), float32] */;
  %1334 = %1330.2;
  %1335 = %1331.0;
  %1336 = @func_18419() /* ty=Tensor[(605), uint64] */;
  (%1332, %1333, %1334, %1335, %1336)
}

def @func_19226() -> (Tensor[(16, 8, 11), float64],) {
  @func_19224() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_8023() -> Tensor[(16, 8, 11), float64] {
  %1337 = @func_5131() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1337.1
}

def @func_7587(%var_7575: Tensor[(10, 16, 1), float32]) -> Tensor[(10, 16, 1), float32] {
  %1338 = cast(%var_7575, dtype="float32") /* ty=Tensor[(10, 16, 1), float32] */;
  sqrt(%1338) /* ty=Tensor[(10, 16, 1), float32] */
}

def @func_14963() -> Tensor[(576), float32] {
  @func_14961() /* ty=Tensor[(576), float32] */
}

def @func_8086() -> Tensor[(576), float32] {
  @func_8084() /* ty=Tensor[(576), float32] */
}

def @func_17061() -> (Tensor[(16, 8, 11), float64],) {
  %1341 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1339 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1340 = %1339.0;
    (%1340,)
  };
  %1341() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_18071() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_18069() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_1475() -> (Tensor[(16, 8, 11), float64],) {
  @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_10697() -> Tensor[(16, 8, 11), float64] {
  @func_5447() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_18955() -> Tensor[(576), float32] {
  @func_14961() /* ty=Tensor[(576), float32] */
}

def @func_12663() -> Tensor[(576), float32] {
  %1342 = fn () -> Tensor[(576), float32] {
    @func_575() /* ty=Tensor[(576), float32] */
  };
  %1342() /* ty=Tensor[(576), float32] */
}

def @func_20158() -> Tensor[(16, 8, 11), float32] {
  @func_7137() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_18346(%var_18337: Tensor[(208), int8]) -> (Tensor[(576), float32], Tensor[(15, 13, 14), float32], Tensor[(6, 7, 3), uint8], Tensor[(208), int8]) {
  %1343 = @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1344 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
  %1345 = %1344.1;
  %1346 = cast(%1345, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %1347 = cast(%var_18337, dtype="int8") /* ty=Tensor[(208), int8] */;
  %1348 = reshape(%1347, newshape=[208]) /* ty=Tensor[(208), int8] */;
  %1349 = @func_7297(%1348) /* ty=(Tensor[(6, 7, 3), int8], Tensor[(4, 13, 4), int8], int8, Tensor[(208), int8], Tensor[(16, 8, 11), int16], Tensor[(1408), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(6, 7, 3), uint8], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1350 = %1343.2;
  %1351 = sigmoid(%1346) /* ty=Tensor[(15, 13, 14), float32] */;
  %1352 = %1349.9;
  (%1350, %1351, %1352, %var_18337)
}

def @func_16915(%var_16913: Tensor[(36, 10), float64], %var_16914: Tensor[(36, 10), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(5, 12, 6), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(36, 10), float32]) {
  @func_16911(%var_16913, %var_16914) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(5, 12, 6), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(36, 10), float32]) */
}

def @func_10487() -> (Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_10485() /* ty=(Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_5428() -> (Tensor[(576), float32],) {
  @func_5426() /* ty=(Tensor[(576), float32],) */
}

def @func_10485() -> (Tensor[(14, 10, 1), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1353 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1354 = @func_8594() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1355 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1356 = @func_7329() /* ty=Tensor[(14, 10, 1), float64] */;
  %1357 = %1353.0;
  %1358 = %1354.0;
  %1359 = %1355.1;
  (%1356, %1357, %1358, %1359)
}

def @func_4190() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1364 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1360 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1361 = @func_1774() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1362 = %1360.0;
    %1363 = %1361.0;
    (%1362, %1363)
  };
  %1364() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_4129() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1373 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %1365 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1366 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
    %1367 = %1366.1;
    %1368 = cast(%1367, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %1369 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %1370 = %1365.1;
    %1371 = exp(%1368) /* ty=Tensor[(16, 8, 11), float64] */;
    %1372 = %1369.0;
    (%1370, %1371, %1372)
  };
  %1373() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_2665() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1377 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1374 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1375 = %1374.0;
    %1376 = @func_1877() /* ty=Tensor[(16, 8, 11), float64] */;
    (%1375, %1376)
  };
  %1377() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_11175() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  %1378 = @func_7443() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1379 = @func_10933() /* ty=Tensor[(16, 8, 11), float32] */;
  %1380 = %1378.0;
  (%1379, %1380)
}

def @func_17135(%var_17132: Tensor[(7, 3, 12), bool], %var_17133: Tensor[(7, 3, 12), bool], %var_17134: Tensor[(30), float64]) -> (Tensor[(7, 3, 12), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64]) {
  %1391 = fn (%var_17118: Tensor[(7, 3, 12), bool], %var_17119: Tensor[(7, 3, 12), bool], %var_17127: Tensor[(30), float64]) -> (Tensor[(7, 3, 12), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64]) {
    %1381 = cast(%var_17119, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %1382 = shape_of(%var_17118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1383 = cast(%var_17118, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %1384 = dyn.reshape(%1381, %1382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1385 = cast(%var_17127, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1386 = cast(%var_17127, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1387 = reshape(%1385, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
    %1388 = reshape(%1386, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float64] */;
    %1389 = logical_and(%1383, %1384) /* ty=Tensor[(7, 3, 12), bool] */;
    %1390 = @func_9564(%1387, %1388) /* ty=Tensor[(5, 2, 3), float64] */;
    (%1389, %1390, %var_17127)
  };
  %1391(%var_17132, %var_17133, %var_17134) /* ty=(Tensor[(7, 3, 12), bool], Tensor[(5, 2, 3), float64], Tensor[(30), float64]) */
}

def @func_10072(%var_10070: Tensor[(16, 8, 11), float64]) -> Tensor[(16, 8, 11), bool] {
  @func_10069(%var_10070) /* ty=Tensor[(16, 8, 11), bool] */
}

def @func_13557() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1398 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %1392 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1393 = @func_8145() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1394 = @func_10325() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1395 = %1392.0;
    %1396 = %1393.1;
    %1397 = %1394.0;
    (%1395, %1396, %1397)
  };
  %1398() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_20585() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1405 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
    %1399 = @func_1815() /* ty=(Tensor[(576), float32],) */;
    %1400 = @func_15017() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1401 = @func_6293() /* ty=(Tensor[(576), float32],) */;
    %1402 = %1399.0;
    %1403 = %1400.0;
    %1404 = %1401.0;
    (%1402, %1403, %1404)
  };
  %1405() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_3605(%var_3603: int8, %var_3604: Tensor[(4, 13, 4), int8]) -> Tensor[(4, 13, 4), int8] {
  @func_3601(%var_3603, %var_3604) /* ty=Tensor[(4, 13, 4), int8] */
}

def @func_14133() -> Tensor[(16, 8, 11), float64] {
  %1407 = fn () -> Tensor[(16, 8, 11), float64] {
    %1406 = @func_13182() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), int16], Tensor[(16, 8, 11), float64]) */;
    %1406.1
  };
  %1407() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_15054() -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) {
  @func_15052() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_1438(%var_1436: Tensor[(5, 14, 4), float64]) -> (Tensor[(5, 14, 4), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_1435(%var_1436) /* ty=(Tensor[(5, 14, 4), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_19248() -> (Tensor[(576), float32],) {
  %1408 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1409 = %1408.1;
  (%1409,)
}

def @func_4292() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1420 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %1410 = @func_4128() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1411 = @func_2115() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
    %1412 = %1411.1;
    %1413 = cast(%1412, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %1414 = @func_2115() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
    %1415 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1416 = %1410.0;
    %1417 = acos(%1413) /* ty=Tensor[(16, 8, 11), float64] */;
    %1418 = %1414.0;
    %1419 = %1415.0;
    (%1416, %1417, %1418, %1419)
  };
  %1420() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_6847() -> (Tensor[(16, 8, 11), float64],) {
  %1421 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1422 = %1421.1;
  (%1422,)
}

def @func_12730() -> Tensor[(16, 8, 11), float32] {
  %1423 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
  %1423.0
}

def @func_20357() -> Tensor[(16, 8, 11), float64] {
  %1425 = fn () -> Tensor[(16, 8, 11), float64] {
    %1424 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1424.0
  };
  %1425() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_12595() -> Tensor[(576), float32] {
  %1426 = @func_8918() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1426.1
}

def @func_7320() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) {
  %1427 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1428 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
  %1429 = @func_4542() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1430 = %1427.0;
  %1431 = %1428.0;
  %1432 = %1429.0;
  (%1430, %1431, %1432)
}

def @func_18419() -> Tensor[(605), uint64] {
  %1433 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %1433.2
}

def @func_563() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) {
  @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */
}

def @func_20329(%var_20328: Tensor[(6, 11, 9), float32]) -> Tensor[(6, 11, 9), float32] {
  %1438 = fn (%var_20319: Tensor[(6, 11, 9), float32]) -> Tensor[(6, 11, 9), float32] {
    %1434 = cast(%var_20319, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
    %1435 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(6, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1436 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
    %1437 = dyn.reshape(%1434, %1435, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%1436, %1437) /* ty=Tensor[(6, 11, 9), float32] */
  };
  %1438(%var_20328) /* ty=Tensor[(6, 11, 9), float32] */
}

def @func_13932() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1439 = @func_13361() /* ty=Tensor[(16, 8, 11), float64] */;
  %1440 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1439, %1440)
}

def @func_8350(%var_8348: Tensor[(9, 5, 2), float32], %var_8349: Tensor[(175, 2), float64]) -> (Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) {
  @func_8346(%var_8348, %var_8349) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */
}

def @func_19338() -> (Tensor[(576), float32], Tensor[(576), float32]) {
  %1443 = fn () -> (Tensor[(576), float32], Tensor[(576), float32]) {
    %1441 = @func_12662() /* ty=Tensor[(576), float32] */;
    %1442 = @func_6208() /* ty=Tensor[(576), float32] */;
    (%1441, %1442)
  };
  %1443() /* ty=(Tensor[(576), float32], Tensor[(576), float32]) */
}

def @func_19106() -> Tensor[(16, 8, 11), float64] {
  %1444 = fn () -> Tensor[(16, 8, 11), float64] {
    @func_10697() /* ty=Tensor[(16, 8, 11), float64] */
  };
  %1444() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_1877() -> Tensor[(16, 8, 11), float64] {
  %1445 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1445.0
}

def @func_9759(%var_9757: Tensor[(3, 14, 12), int16], %var_9758: Tensor[(3, 14, 12), int16]) -> (Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) {
  @func_9755(%var_9757, %var_9758) /* ty=(Tensor[(3, 14, 12), int16], Tensor[(3, 14, 12), float32]) */
}

def @func_2746() -> (Tensor[(16, 8, 11), float64],) {
  %1448 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1446 = @func_695() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1447 = %1446.0;
    (%1447,)
  };
  %1448() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_1805() -> Tensor[(16, 8, 11), float64] {
  %1449 = fn () -> Tensor[(16, 8, 11), float64] {
    @func_766() /* ty=Tensor[(16, 8, 11), float64] */
  };
  %1449() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_5447() -> Tensor[(16, 8, 11), float64] {
  @func_5414() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_12427(%var_12425: Tensor[(350), float64], %var_12426: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
  %1466 = fn (%var_12375: Tensor[(350), float64], %var_12419: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) {
    %1450 = @func_10643() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(1408), float64], Tensor[(16, 8, 11), float64]) */;
    %1451 = @func_2329() /* ty=(Tensor[(576), float32],) */;
    %1452 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
    %1453 = cast(%var_12375, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1454 = reshape(%1452, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float32] */;
    %1455 = reshape(%1453, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
    %1456 = @func_8346(%1454, %1455) /* ty=(Tensor[(3, 9, 8), bool], Tensor[(216), uint64], Tensor[(175, 2), float64], Tensor[(9, 5, 2), float64]) */;
    %1457 = cast(%var_12375, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1458 = cast(%var_12419, dtype="float64") /* ty=Tensor[(910), float64] */;
    %1459 = reshape(%1458, newshape=[910]) /* ty=Tensor[(910), float64] */;
    %1460 = @func_9898(%1459) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) */;
    %1461 = %1450.0;
    %1462 = %1451.0;
    %1463 = %1456.1;
    %1464 = tan(%1457) /* ty=Tensor[(350), float64] */;
    %1465 = %1460.2;
    (%1461, %1462, %1463, meta[relay.Constant][43] /* ty=Tensor[(15, 6), float32] */, %1464, %1465, %var_12419)
  };
  %1466(%var_12425, %var_12426) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(216), uint64], Tensor[(15, 6), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64]) */
}

def @func_3772() -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) {
  %1471 = fn () -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) {
    %1467 = @func_2290() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) */;
    %1468 = @func_1349() /* ty=(Tensor[(16, 8, 11), float32],) */;
    %1469 = %1467.2;
    %1470 = %1468.0;
    (%1469, %1470)
  };
  %1471() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */
}

def @func_17288() -> (Tensor[(16, 8, 11), float64],) {
  @func_17286() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_8054() -> Tensor[(4, 9, 16), float32] {
  @func_8052() /* ty=Tensor[(4, 9, 16), float32] */
}

def @func_8147() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  @func_8145() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */
}

def @func_14235() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1475 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %1472 = @func_11952() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1473 = @func_8084() /* ty=Tensor[(576), float32] */;
    %1474 = %1472.0;
    (%1473, %1474)
  };
  %1475() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_15811() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1476 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1477 = @func_14932() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1478 = %1476.0;
  %1479 = %1477.0;
  (%1478, %1479)
}

def @func_16477() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1484 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %1480 = @func_15438() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1481 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
    %1482 = %1480.0;
    %1483 = %1481.2;
    (%1482, %1483)
  };
  %1484() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_2602() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1491 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1485 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %1486 = @func_561() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(576), float32]) */;
    %1487 = %1486.0;
    %1488 = cast(%1487, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %1489 = %1485.0;
    %1490 = atanh(%1488) /* ty=Tensor[(16, 8, 11), float64] */;
    (%1489, %1490)
  };
  %1491() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_14524(%var_14523: Tensor[(60), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) {
  %1500 = fn (%var_14501: Tensor[(60), uint64]) -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) {
    %1492 = @func_1815() /* ty=(Tensor[(576), float32],) */;
    %1493 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1494 = cast(%var_14501, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %1495 = reshape(%1494, newshape=[60]) /* ty=Tensor[(60), uint64] */;
    %1496 = @func_5693(%1495) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
    %1497 = %1492.0;
    %1498 = %1493.0;
    %1499 = %1496.0;
    (%1497, %1498, %1499, %var_14501)
  };
  %1500(%var_14523) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) */
}

def @func_7322() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) {
  @func_7320() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), float32], Tensor[(576), float32]) */
}

def @func_19563(%var_19560: Tensor[(350, 1), float64], %var_19561: Tensor[(55, 11), uint64], %var_19562: Tensor[(60), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(5, ?, 12), float64], Tensor[(3, 30), float32], Tensor[(350, 1), float64], Tensor[(55, 11), uint64], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %1515 = fn (%var_19538: Tensor[(350, 1), float64], %var_19539: Tensor[(55, 11), uint64], %var_19540: Tensor[(60), uint64]) -> (Tensor[(16, 8, 11), float64], Tensor[(5, ?, 12), float64], Tensor[(3, 30), float32], Tensor[(350, 1), float64], Tensor[(55, 11), uint64], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
    %1501 = @func_18019() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1502 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %1503 = cast(%var_19538, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
    %1504 = cast(%var_19539, dtype="uint64") /* ty=Tensor[(55, 11), uint64] */;
    %1505 = cast(%var_19540, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %1506 = reshape(%1502, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %1507 = reshape(%1503, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %1508 = reshape(%1504, newshape=[605]) /* ty=Tensor[(605), uint64] */;
    %1509 = reshape(%1505, newshape=[60]) /* ty=Tensor[(60), uint64] */;
    %1510 = @func_9386(%1506, %1507, %1508, %1509) /* ty=(Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(196), uint64], Tensor[(98, 2), float32], Tensor[(216), uint64], Tensor[(90), float32], Tensor[(350), float64], Tensor[(16, 8, 11), float64], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(5, ?, 12), float64], Tensor[(60), uint64]) */;
    %1511 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1512 = %1501.0;
    %1513 = %1510.10;
    %1514 = %1511.0;
    (%1512, %1513, meta[relay.Constant][44] /* ty=Tensor[(3, 30), float32] */, %var_19538, %var_19539, %var_19540, %1514)
  };
  %1515(%var_19560, %var_19561, %var_19562) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(5, ?, 12), float64], Tensor[(3, 30), float32], Tensor[(350, 1), float64], Tensor[(55, 11), uint64], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_14847() -> (Tensor[(576), float32],) {
  %1516 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1517 = %1516.0;
  (%1517,)
}

def @func_7744(%var_7743: Tensor[(16, 10), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(10, 16, 1), float32], Tensor[(16, 10), float32], Tensor[(16, 8, 11), float32]) {
  %1529 = fn (%var_7720: Tensor[(16, 10), float32]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(10, 16, 1), float32], Tensor[(16, 10), float32], Tensor[(16, 8, 11), float32]) {
    %1518 = @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1519 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1520 = @func_1815() /* ty=(Tensor[(576), float32],) */;
    %1521 = cast(%var_7720, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
    %1522 = reshape(%1521, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
    %1523 = %1518.0;
    %1524 = @func_5447() /* ty=Tensor[(16, 8, 11), float64] */;
    %1525 = %1519.0;
    %1526 = %1520.0;
    %1527 = @func_7587(%1522) /* ty=Tensor[(10, 16, 1), float32] */;
    %1528 = @func_7137() /* ty=Tensor[(16, 8, 11), float32] */;
    (%1523, %1524, %1525, %1526, %1527, %var_7720, %1528)
  };
  %1529(%var_7743) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(10, 16, 1), float32], Tensor[(16, 10), float32], Tensor[(16, 8, 11), float32]) */
}

def @func_4664() -> Tensor[(16, 8, 11), float64] {
  %1530 = @func_2691() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1530.0
}

def @func_8507() -> (Tensor[(16, 8, 11), float64],) {
  %1533 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1531 = @func_797() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1532 = %1531.0;
    (%1532,)
  };
  %1533() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_15829() -> (Tensor[(16, 8, 11), float32], Tensor[(384), float64]) {
  @func_15827() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(384), float64]) */
}

def @func_18714() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
  %1543 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) {
    %1534 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %1535 = @func_8506() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1536 = @func_18498() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1537 = @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1538 = %1534.0;
    %1539 = %1535.0;
    %1540 = %1536.0;
    %1541 = @func_15512() /* ty=Tensor[(605), uint64] */;
    %1542 = %1537.0;
    (%1538, %1539, %1540, %1541, %1542)
  };
  %1543() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_19290() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
  %1547 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float32]) {
    %1544 = @func_3563() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1545 = @func_12595() /* ty=Tensor[(576), float32] */;
    %1546 = %1544.1;
    (%1545, %1546)
  };
  %1547() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */
}

def @func_15419() -> Tensor[(576), float32] {
  %1548 = @func_12923() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1548.1
}

def @func_13241() -> Tensor[(16, 8, 11), float64] {
  @func_8023() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_13243() -> Tensor[(16, 8, 11), float64] {
  @func_13241() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_695() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1549 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1550 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1551 = %1549.0;
  %1552 = %1550.0;
  %1553 = @func_575() /* ty=Tensor[(576), float32] */;
  (%1551, %1552, %1553)
}

def @func_4666() -> Tensor[(16, 8, 11), float64] {
  @func_4664() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_4501() -> Tensor[(16, 8, 11), float64] {
  @func_4499() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_2473(%var_2465: Tensor[(90), float32]) -> (Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) {
  %1554 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1555 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1556 = @func_1843() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1557 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1558 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1559 = cast(%var_2465, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1560 = reshape(%1559, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %1561 = %1554.1;
  %1562 = %1555.0;
  %1563 = %1556.0;
  %1564 = %1557.0;
  %1565 = @func_575() /* ty=Tensor[(576), float32] */;
  %1566 = %1558.0;
  %1567 = @func_1674(%1560) /* ty=Tensor[(6, 3, 5), float32] */;
  (%1561, %1562, %1563, %1564, %1565, %1566, %1567, %var_2465)
}

def @func_17945() -> (Tensor[(605), uint64], Tensor[(576), float32]) {
  %1572 = fn () -> (Tensor[(605), uint64], Tensor[(576), float32]) {
    %1568 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
    %1569 = @func_17103() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(576), float32]) */;
    %1570 = %1568.2;
    %1571 = %1569.1;
    (%1570, %1571)
  };
  %1572() /* ty=(Tensor[(605), uint64], Tensor[(576), float32]) */
}

def @func_11446() -> Tensor[(16, 8, 11), float64] {
  @func_11444() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_7225() -> (Tensor[(16, 8, 11), float64],) {
  @func_7223() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_19224() -> (Tensor[(16, 8, 11), float64],) {
  %1573 = @func_7572() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1574 = %1573.0;
  (%1574,)
}

def @func_6479() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_6477() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_18577() -> Tensor[(14, 15, 6), float32] {
  %1575 = fn () -> Tensor[(14, 15, 6), float32] {
    @func_11730() /* ty=Tensor[(14, 15, 6), float32] */
  };
  %1575() /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_17103() -> (Tensor[(16, 8, 11), float32], Tensor[(576), float32]) {
  %1576 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1577 = %1576.3;
  %1578 = @func_12901() /* ty=Tensor[(576), float32] */;
  (%1577, %1578)
}

def @func_11571() -> Tensor[(16, 8, 11), float64] {
  @func_11569() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_9977(%var_9976: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) {
  %1587 = fn (%var_9962: Tensor[(360), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) {
    %1579 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1580 = @func_3653() /* ty=(Tensor[(576), float32],) */;
    %1581 = cast(%var_9962, dtype="float64") /* ty=Tensor[(360), float64] */;
    %1582 = reshape(%1581, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float64] */;
    %1583 = @func_3338(%1582) /* ty=(Tensor[(5, 12, 6), float64],) */;
    %1584 = %1579.0;
    %1585 = %1580.0;
    %1586 = %1583.0;
    (%1584, %1585, %1586, %var_9962)
  };
  %1587(%var_9976) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(5, 12, 6), float64], Tensor[(360), float64]) */
}

def @func_8302() -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  %1594 = fn () -> (Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
    %1588 = @func_6570() /* ty=(Tensor[(16, 9, ?), float32],) */;
    %1589 = @func_2823() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
    %1590 = %1588.0;
    %1591 = %1589.1;
    %1592 = @func_4664() /* ty=Tensor[(16, 8, 11), float64] */;
    %1593 = @func_5879() /* ty=Tensor[(16, 8, 11), float32] */;
    (%1590, %1591, %1592, %1593)
  };
  %1594() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_11348(%var_11347: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), float64],) {
  %1602 = fn (%var_11330: Tensor[(16, 8, 11), float64]) -> (Tensor[(16, 8, 11), float64],) {
    %1595 = @func_2745() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1596 = %1595.0;
    %1597 = cast(%var_11330, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %1598 = shape_of(%1596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1599 = cast(%1596, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
    %1600 = dyn.reshape(%1597, %1598, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1601 = mod(%1599, %1600) /* ty=Tensor[(16, 8, 11), float64] */;
    (%1601,)
  };
  %1602(%var_11347) /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_18449() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  @func_18447() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_5879() -> Tensor[(16, 8, 11), float32] {
  %1603 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1604 = %1603.0;
  %1605 = cast(%1604, dtype="float32") /* ty=Tensor[(16, 8, 11), float32] */;
  acosh(%1605) /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_15095() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1611 = fn () -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1606 = @func_6835() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %1607 = @func_9551() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), uint32]) */;
    %1608 = @func_14961() /* ty=Tensor[(576), float32] */;
    %1609 = %1606.0;
    %1610 = %1607.0;
    (%1608, %1609, %1610)
  };
  %1611() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_13984() -> (Tensor[(16, 8, 11), float64],) {
  %1614 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1612 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1613 = %1612.0;
    (%1613,)
  };
  %1614() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_8145() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32]) {
  %1615 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1616 = @func_5639() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
  %1617 = %1615.0;
  %1618 = %1616.1;
  (%1617, %1618)
}

def @func_8919() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1623 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
    %1619 = @func_3690() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1620 = %1619.0;
    %1621 = @func_6208() /* ty=Tensor[(576), float32] */;
    %1622 = @func_4499() /* ty=Tensor[(16, 8, 11), float64] */;
    (%1620, %1621, %1622)
  };
  %1623() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_20160() -> Tensor[(16, 8, 11), float32] {
  @func_20158() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_17168() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  @func_17166() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_9901(%var_9899: Tensor[(910), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) {
  @func_9898(%var_9899) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(910), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_8107() -> Tensor[(16, 8, 11), float64] {
  %1625 = fn () -> Tensor[(16, 8, 11), float64] {
    %1624 = @func_1473() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1624.0
  };
  %1625() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_6002() -> Tensor[(14, 15, 6), float32] {
  %1626 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 6), float32] */;
  asin(%1626) /* ty=Tensor[(14, 15, 6), float32] */
}

def @func_6888(%var_6887: Tensor[(384), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) {
  %1632 = fn (%var_6875: Tensor[(384), float64]) -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) {
    %1627 = cast(%var_6875, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1628 = reshape(%1627, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float64] */;
    %1629 = @func_5392(%1628) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) */;
    %1630 = @func_1804() /* ty=Tensor[(16, 8, 11), float64] */;
    %1631 = %1629.3;
    (%1630, %1631, %var_6875)
  };
  %1632(%var_6887) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64]) */
}

def @func_17926() -> Tensor[(16, 8, 11), float32] {
  %1633 = @func_11255() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32]) */;
  %1633.2
}

def @func_15438() -> (Tensor[(16, 8, 11), float64],) {
  %1634 = @func_1410() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1635 = %1634.0;
  (%1635,)
}

def @func_1579() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  @func_1577() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */
}

def @func_13271() -> Tensor[(576), float32] {
  %1637 = fn () -> Tensor[(576), float32] {
    %1636 = @func_8145() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32]) */;
    %1636.1
  };
  %1637() /* ty=Tensor[(576), float32] */
}

def @func_14743() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) {
  @func_14741() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */
}

def @func_11397() -> (Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1638 = @func_3771() /* ty=(Tensor[(144), uint64], Tensor[(16, 8, 11), float32]) */;
  %1639 = @func_8161() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1640 = %1638.0;
  %1641 = %1639.0;
  %1642 = @func_6056() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1640, %1641, %1642)
}

def @func_10170(%var_10156: float32, %var_10157: Tensor[(14, 1, 2), float32]) -> (Tensor[(14, 1, 2), float32],) {
  %1643 = cast(%var_10156, dtype="float32") /* ty=float32 */;
  %1644 = cast(%var_10157, dtype="float32") /* ty=Tensor[(14, 1, 2), float32] */;
  %1645 = subtract(%1643, %1644) /* ty=Tensor[(14, 1, 2), float32] */;
  (%1645,)
}

def @func_1063() -> (Tensor[(16, 8, 11), float64],) {
  @func_1061() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_8732() -> (Tensor[(16, 8, 11), float64],) {
  %1648 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1646 = @func_5210() /* ty=(Tensor[(4, 9, 16), float32], Tensor[(4, 9, 16), float32], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */;
    %1647 = %1646.2;
    (%1647,)
  };
  %1648() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_12557() -> (Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) {
  @func_12555() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool], Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_924(%var_916: Tensor[(144), uint64]) -> (Tensor[(6, 11, ?), float32], Tensor[(16, 8, 11), float32], Tensor[(16, 9, ?), float64], Tensor[(144), uint64], Tensor[(576), float32]) {
  %1649 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1650 = exp(%1649) /* ty=Tensor[(6, 11, 1), float32] */;
  %1651 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1652 = shape_of(%1650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1653 = cast(%1650, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %1654 = dyn.reshape(%1651, %1652, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1655 = @func_641() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %1656 = cast(%var_916, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1657 = cast(%var_916, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %1658 = reshape(%1656, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1659 = reshape(%1657, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), uint64] */;
  %1660 = @func_839(%1658, %1659) /* ty=(Tensor[(16, 9, ?), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */;
  %1661 = @func_409() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) */;
  %1662 = power(%1653, %1654) /* ty=Tensor[(6, 11, ?), float32] */;
  %1663 = %1655.2;
  %1664 = %1660.0;
  %1665 = %1661.2;
  (%1662, %1663, %1664, %var_916, %1665)
}

def @func_6626() -> Tensor[(16, 8, 11), float64] {
  %1666 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1666.0
}

def @func_6402() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  @func_6400() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 9, ?), bool], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */
}

def @func_1350() -> (Tensor[(16, 8, 11), float32],) {
  %1669 = fn () -> (Tensor[(16, 8, 11), float32],) {
    %1667 = @func_1001() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64]) */;
    %1668 = %1667.0;
    (%1668,)
  };
  %1669() /* ty=(Tensor[(16, 8, 11), float32],) */
}

def @func_14932() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1670 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1671 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1672 = %1670.0;
  %1673 = %1671.0;
  (%1672, %1673)
}

def @func_15512() -> Tensor[(605), uint64] {
  %1674 = @func_11923() /* ty=(Tensor[(16, 8, 11), float32], Tensor[(11, 11, 5), uint64], Tensor[(605), uint64], Tensor[(16, 8, 11), float64]) */;
  %1674.2
}

def @func_5392(%var_5356: Tensor[(6, 4, 16), float64]) -> (Tensor[(16, 8, 11), float32], Tensor[(90), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 4, 16), bool]) {
  %1675 = cast(meta[relay.Constant][47] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1676 = reshape(%1675, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %1677 = @func_2473(%1676) /* ty=(Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(6, 3, 5), float32], Tensor[(90), float32]) */;
  %1678 = @func_1512() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1679 = cast(%var_5356, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %1680 = log10(%1679) /* ty=Tensor[(6, 4, 16), float64] */;
  %1681 = cast(%1680, dtype="int64") /* ty=Tensor[(6, 4, 16), int64] */;
  %1682 = shape_of(%var_5356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1683 = cast(%var_5356, dtype="int64") /* ty=Tensor[(6, 4, 16), int64] */;
  %1684 = dyn.reshape(%1681, %1682, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1685 = left_shift(%1683, %1684) /* ty=Tensor[(6, 4, 16), int64] */;
  %1686 = cast(%1685, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1687 = shape_of(%1680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1688 = cast(%1680, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1689 = dyn.reshape(%1686, %1687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1690 = %1677.0;
  %1691 = %1678.0;
  %1692 = logical_and(%1688, %1689) /* ty=Tensor[(6, 4, 16), bool] */;
  (%1690, meta[relay.Constant][47] /* ty=Tensor[(90), float32] */, %1691, %1692)
}

def @func_6835() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], uint64, Tensor[(576), float32], Tensor[(16, 8, 11), float64]) {
  %1693 = @func_4291() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
  %1694 = cast(meta[relay.Constant][48] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1695 = reshape(%1694, newshape=[]) /* ty=uint64 */;
  %1696 = @func_6272(%1695) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %1697 = cast(meta[relay.Constant][48] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1698 = reshape(%1697, newshape=[]) /* ty=uint64 */;
  %1699 = @func_6272(%1698) /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32], Tensor[(16, 8, 11), float32], uint64, Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(90), float32]) */;
  %1700 = %1693.1;
  %1701 = %1696.0;
  %1702 = @func_575() /* ty=Tensor[(576), float32] */;
  %1703 = %1699.0;
  (%1700, %1701, meta[relay.Constant][48] /* ty=uint64 */, %1702, %1703)
}

def @func_15295() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1708 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
    %1704 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1705 = @func_476() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1706 = %1704.0;
    %1707 = %1705.0;
    (%1706, %1707)
  };
  %1708() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) */
}

def @func_18185() -> Tensor[(16, 8, 11), float64] {
  %1710 = fn () -> Tensor[(16, 8, 11), float64] {
    %1709 = @func_3898() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1709.0
  };
  %1710() /* ty=Tensor[(16, 8, 11), float64] */
}

def @func_17928() -> Tensor[(16, 8, 11), float32] {
  @func_17926() /* ty=Tensor[(16, 8, 11), float32] */
}

def @func_3216() -> (Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) {
  @func_3214() /* ty=(Tensor[(15, 13, 14), float64], Tensor[(16, 8, 11), float64], Tensor[(144), uint64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(4, 9, 16), float32]) */
}

def @func_409() -> (Tensor[(16, 8, 11), float64], Tensor[(4, 9, 16), float32], Tensor[(576), float32]) {
  %1711 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 11), float64] */;
  %1712 = cast(meta[relay.Constant][50] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %1713 = reshape(%1712, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float32] */;
  %1714 = @func_83(%1713) /* ty=(Tensor[(4, 9, 16), float32],) */;
  %1715 = asinh(%1711) /* ty=Tensor[(16, 8, 11), float64] */;
  %1716 = %1714.0;
  (%1715, %1716, meta[relay.Constant][50] /* ty=Tensor[(576), float32] */)
}

def @func_15743() -> (Tensor[(16, 8, 11), float64],) {
  @func_15741() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_9584() -> Tensor[(576), float32] {
  %1717 = @func_1815() /* ty=(Tensor[(576), float32],) */;
  %1717.0
}

def @func_5067() -> (Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) {
  @func_5065() /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(144), uint64]) */
}

def @func_7443() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1718 = @func_2969() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1719 = @func_6745() /* ty=(Tensor[(16, 8, 11), float64],) */;
  %1720 = %1718.0;
  %1721 = %1719.0;
  (%1720, %1721)
}

def @func_17286() -> (Tensor[(16, 8, 11), float64],) {
  %1722 = @func_13135() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1722,)
}

def @func_20277() -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
  %1731 = fn () -> (Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) {
    %1723 = @func_8301() /* ty=(Tensor[(16, 9, ?), float32], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
    %1724 = cast(meta[relay.Constant][51] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %1725 = reshape(%1724, newshape=[60]) /* ty=Tensor[(60), uint64] */;
    %1726 = @func_14522(%1725) /* ty=(Tensor[(576), float32], Tensor[(16, 8, 11), float64], Tensor[(4, 4, 13), bool], Tensor[(60), uint64]) */;
    %1727 = @func_10797() /* ty=(Tensor[(16, 8, 11), float64],) */;
    %1728 = %1723.1;
    %1729 = %1726.0;
    %1730 = %1727.0;
    (%1728, %1729, meta[relay.Constant][51] /* ty=Tensor[(60), uint64] */, %1730)
  };
  %1731() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(576), float32], Tensor[(60), uint64], Tensor[(16, 8, 11), float64]) */
}

def @func_7572() -> (Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float64]) {
  %1732 = @func_1964() /* ty=(Tensor[(16, 8, 11), float64], Tensor[(16, 8, 11), float32]) */;
  %1733 = %1732.0;
  %1734 = @func_5814() /* ty=Tensor[(16, 8, 11), float64] */;
  (%1733, %1734)
}

def @func_11954() -> (Tensor[(16, 8, 11), float64],) {
  @func_11952() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_8162() -> (Tensor[(16, 8, 11), float64],) {
  %1737 = fn () -> (Tensor[(16, 8, 11), float64],) {
    %1735 = @func_2651() /* ty=(Tensor[(576), float32], Tensor[(576), float32], Tensor[(16, 8, 11), float64]) */;
    %1736 = %1735.2;
    (%1736,)
  };
  %1737() /* ty=(Tensor[(16, 8, 11), float64],) */
}

def @func_3338(%var_3324: Tensor[(5, 12, 6), float64]) -> (Tensor[(5, 12, 6), float64],) {
  %1738 = cast(%var_3324, dtype="float64") /* ty=Tensor[(5, 12, 6), float64] */;
  %1739 = exp(%1738) /* ty=Tensor[(5, 12, 6), float64] */;
  (%1739,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen720/build/output.py:6741: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen720/build/output.py", line 6746, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(520) tvmgen_default_fused_floor_divide_kernel0(float* __restrict__ T_floor_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_floor_divide[(((int)threadIdx.x))] = floorf((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(520) tvmgen_default_fused_cast_reshape_minimum_kernel0(uint64_t* __restrict__ T_minimum, uint64_t* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_minimum[(((int)threadIdx.x))] = min(placeholder[(((int)threadIdx.x))], ((uint64_t)placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


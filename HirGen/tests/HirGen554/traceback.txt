==========mod==========
#[version = "0.0.5"]
def @func_586(%var_562: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) {
  %0 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1 = cast(%var_562, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
  %2 = acos(%1) /* ty=Tensor[(3, 14, 5), float64] */;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
  %4 = %0.0;
  %5 = sigmoid(%3) /* ty=Tensor[(3, 14, 5), float64] */;
  (%4, %5)
}

def @func_7243() -> (Tensor[(3, 2, 16), float64],) {
  %6 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %7 = %6.0;
  (%7,)
}

def @func_412(%var_402: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
  %8 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %9 = %8.0;
  %10 = cast(%var_402, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%12, %13) /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_1914() -> Tensor[(3, 2, 16), int16] {
  %14 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %14.1
}

def @func_6069() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %15 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %16 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %17 = %15.1;
  (%16, %17)
}

def @func_494(%var_470: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
  %18 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %19 = %18.0;
  %20 = cast(%var_470, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%19, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %24 = cast(%var_470, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %25 = reshape(%24, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %26 = right_shift(%22, %23) /* ty=Tensor[(3, 2, 16), int16] */;
  %27 = @func_412(%25) /* ty=Tensor[(3, 2, 16), int16] */;
  (%26, %27)
}

def @func_3441(%var_3429: int8) -> Tensor[(14, 1, 3), int8] {
  %28 = cast(%var_3429, dtype="int8") /* ty=int8 */;
  %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 3), int8] */, dtype="int8") /* ty=Tensor[(14, 1, 3), int8] */;
  add(%28, %29) /* ty=Tensor[(14, 1, 3), int8] */
}

def @func_12819() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %30 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %33 = reshape(%31, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %34 = reshape(%32, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %35 = %30.5;
  %36 = @func_7849(%33, %34) /* ty=Tensor[(12, 2, 5), float64] */;
  (%35, %36, meta[relay.Constant][1] /* ty=Tensor[(120), uint16] */)
}

def @func_17358() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %37 = @func_9261() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %38 = @func_15237() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %39 = %37.1;
  %40 = %38.0;
  (%39, %40)
}

def @func_13257() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %41 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %42 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %43 = %41.0;
  %44 = %42.4;
  (%43, %44)
}

def @func_5588() -> (Tensor[(3, 2, 16), float64],) {
  %45 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_1515() -> (Tensor[(3, 2, 16), float32],) {
  %47 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %50 = cosh(%49) /* ty=Tensor[(3, 2, 16), float32] */;
  (%50,)
}

def @func_2437() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %51 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %52 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %53 = %51.1;
  (%52, %53)
}

def @func_12325() -> (Tensor[(3, 2, 16), int16], Tensor[(1, 9, 9), float32]) {
  %54 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %55 = @func_4716() /* ty=Tensor[(3, 2, 16), int16] */;
  %56 = %54.0;
  (%55, %56)
}

def @func_9379() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %58 = reshape(%57, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %59 = @func_7776(%58) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %60 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
  %61 = %59.0;
  %62 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%60, %61, meta[relay.Constant][2] /* ty=Tensor[(81), float32] */, %62)
}

def @func_9824(%var_9800: Tensor[(768, 7), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(768, 7), float64], Tensor[(768, ?), uint16], Tensor[(768, ?), uint8]) {
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %64 = erf(%63) /* ty=Tensor[(768, 1), float32] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
  %66 = cast(%var_9800, dtype="float64") /* ty=Tensor[(768, 7), float64] */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
  %68 = reshape(%67, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), float64] */;
  %69 = @func_6678(%68) /* ty=(Tensor[(8, 6, 16), float64],) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="int64") /* ty=Tensor[(8, 6, 16), int64] */;
  %72 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="int64") /* ty=Tensor[(768, 1), int64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %75 = subtract(%73, %74) /* ty=Tensor[(768, ?), int64] */;
  %76 = cast(%75, dtype="uint16") /* ty=Tensor[(768, ?), uint16] */;
  %77 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="uint16") /* ty=Tensor[(768, 1), uint16] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(768, 1), float64] */, dtype="uint8") /* ty=Tensor[(768, 1), uint8] */;
  %81 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
  %82 = cast(%64, dtype="uint8") /* ty=Tensor[(768, 1), uint8] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %84 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  %85 = divide(%65, %66) /* ty=Tensor[(768, 7), float64] */;
  %86 = bitwise_xor(%78, %79) /* ty=Tensor[(768, ?), uint16] */;
  %87 = logical_xor(%82, %83) /* ty=Tensor[(768, ?), uint8] */;
  (%84, %85, %86, %87)
}

def @func_9624() -> (Tensor[(3, 2, 16), float64],) {
  %88 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %89 = %88.1;
  (%89,)
}

def @func_8812() -> Tensor[(3, 2, 16), float64] {
  %90 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %90.0
}

def @func_10056() -> (Tensor[(3, 2, 16), float64],) {
  %91 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %92 = %91.0;
  (%92,)
}

def @func_1576() -> Tensor[(3, 2, 16), float32] {
  %93 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %94 = %93.1;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  sinh(%95) /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_13202() -> (Tensor[(3, 2, 16), float64],) {
  %96 = @func_13013() /* ty=Tensor[(3, 2, 16), float64] */;
  (%96,)
}

def @func_999() -> Tensor[(3, 2, 16), float64] {
  %97 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %98 = %97.0;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  log10(%99) /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_634() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %100 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %101 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %102 = %101.1;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %104 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %105 = %100.0;
  %106 = acosh(%103) /* ty=Tensor[(3, 2, 16), float64] */;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_15381() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %108 = @func_14556() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %109 = %108.0;
  %110 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%109, %110)
}

def @func_3146() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %111 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %112 = %111.1;
  %113 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%112, %113)
}

def @func_5024() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %114 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %115 = %114.1;
  %116 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%115, %116)
}

def @func_11328(%var_11294: Tensor[(6, 10, 2), uint32]) -> (Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %117 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 10, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 10, 2), uint32] */;
  %118 = shape_of(%var_11294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_11294, dtype="uint32") /* ty=Tensor[(6, 10, 2), uint32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %121 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %122 = @func_10346() /* ty=(Tensor[(81), float32],) */;
  %123 = bitwise_or(%119, %120) /* ty=Tensor[(6, 10, 2), uint32] */;
  %124 = %121.0;
  %125 = %122.0;
  (%123, %124, %125)
}

def @func_278() -> (Tensor[(3, 2, 16), float64],) {
  %126 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %127 = %126.0;
  (%127,)
}

def @func_500() -> (Tensor[(3, 2, 16), float64],) {
  %128 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %129 = %128.0;
  (%129,)
}

def @func_16032(%var_15977: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %130 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %131 = @func_9585() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %132 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %134 = reshape(%133, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %135 = @func_2140(%134) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %136 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %137 = @func_15790() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %138 = cast(%var_15977, dtype="float64") /* ty=Tensor[(462), float64] */;
  %139 = reshape(%138, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), float64] */;
  %140 = @func_3363(%139) /* ty=(Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) */;
  %141 = @func_15661() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %142 = %130.0;
  %143 = %131.0;
  %144 = %135.0;
  %145 = %136.1;
  %146 = %137.1;
  %147 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %148 = %140.0;
  %149 = @func_3723() /* ty=Tensor[(3, 2, 16), float64] */;
  %150 = %141.0;
  %151 = @func_8073() /* ty=Tensor[(3, 2, 16), float64] */;
  (%132, %142, %143, %144, %145, %146, %147, %148, %var_15977, %149, %150, %151)
}

def @func_5797() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %152 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %153 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %154 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %155 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
  %156 = %152.0;
  %157 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  %158 = %153.0;
  %159 = %154.0;
  %160 = %155.1;
  (%156, %157, %158, %159, %160)
}

def @func_16866() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %161 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %162 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %163 = %161.1;
  %164 = %162.1;
  (%163, %164)
}

def @func_3061() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %165 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %166 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %167 = cast(meta[relay.Constant][5] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %168 = reshape(%167, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
  %169 = @func_1409(%168) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
  %170 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %171 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %172 = %165.2;
  %173 = %166.3;
  %174 = %169.1;
  %175 = %170.0;
  %176 = %171.0;
  (%172, %173, %174, meta[relay.Constant][5] /* ty=Tensor[(54, 10), uint32] */, %175, %176)
}

def @func_1288() -> (Tensor[(3, 2, 16), float64],) {
  %177 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %178 = %177.0;
  (%178,)
}

def @func_16367() -> (Tensor[(3, 2, 16), float64],) {
  %179 = @func_8880() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %180 = %179.0;
  (%180,)
}

def @func_5695() -> (Tensor[(81), int8], Tensor[(3, 2, 16), float64]) {
  %181 = @func_4902() /* ty=(Tensor[(81), int8],) */;
  %182 = %181.0;
  %183 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%182, %183)
}

def @func_8566(%var_8553: Tensor[(8, 6, 12), float32], %var_8554: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), int64],) {
  %184 = cast(%var_8554, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %185 = shape_of(%var_8553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%var_8553, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %188 = mod(%186, %187) /* ty=Tensor[(8, 6, 12), float32] */;
  %189 = cast(%188, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %190 = shape_of(%var_8553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_8553, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %193 = bitwise_xor(%191, %192) /* ty=Tensor[(8, 6, 12), int64] */;
  (%193,)
}

def @func_10431() -> (Tensor[(3, 2, 16), float64],) {
  %194 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %195 = %194.0;
  (%195,)
}

def @func_3605() -> (Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) {
  %196 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 14), float64] */;
  %197 = log2(%196) /* ty=Tensor[(3, 3, 14), float64] */;
  %198 = cast(%197, dtype="int8") /* ty=Tensor[(3, 3, 14), int8] */;
  %199 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int8") /* ty=Tensor[(3, 3, 14), int8] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %202 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %203 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %206 = cast(%197, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %207 = cos(%206) /* ty=Tensor[(3, 3, 14), float32] */;
  %208 = cast(%197, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %209 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %212 = floor_mod(%210, %211) /* ty=Tensor[(3, 3, 14), float32] */;
  %213 = cast(%212, dtype="int16") /* ty=Tensor[(3, 3, 14), int16] */;
  %214 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%207, dtype="int16") /* ty=Tensor[(3, 3, 14), int16] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %217 = bitwise_or(%200, %201) /* ty=Tensor[(3, 3, 14), int8] */;
  %218 = mod(%204, %205) /* ty=Tensor[(3, 3, 14), float32] */;
  %219 = left_shift(%215, %216) /* ty=Tensor[(3, 3, 14), int16] */;
  (%217, %218, %219)
}

def @func_6706() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %220 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %221 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %222 = %220.1;
  %223 = %221.1;
  (%222, %223)
}

def @func_8630(%var_8622: Tensor[(3, 27), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 27), float32]) {
  %224 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %225 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %226 = cast(%var_8622, dtype="float32") /* ty=Tensor[(3, 27), float32] */;
  %227 = reshape(%226, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
  %228 = @func_3300(%227) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %229 = @func_7576() /* ty=Tensor[(3, 2, 16), int16] */;
  %230 = %224.0;
  %231 = %225.1;
  %232 = %228.4;
  (%229, %230, %231, %232, %var_8622)
}

def @func_6791() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) {
  %233 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %234 = cast(meta[relay.Constant][8] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %235 = reshape(%234, newshape=[3, 3, 14]) /* ty=Tensor[(3, 3, 14), int16] */;
  %236 = @func_5943(%235) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) */;
  %237 = %233.2;
  %238 = %236.0;
  (%237, %238, meta[relay.Constant][8] /* ty=Tensor[(126), int16] */)
}

def @func_7360(%var_7356: Tensor[(4, 3, 9), float32]) -> Tensor[(4, 3, 9), float32] {
  %239 = cast(%var_7356, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  atanh(%239) /* ty=Tensor[(4, 3, 9), float32] */
}

def @func_5404() -> (Tensor[(3, 2, 16), int16],) {
  %240 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  (%240,)
}

def @func_6884() -> (Tensor[(3, 2, 16), int16],) {
  %241 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %242 = %241.4;
  (%242,)
}

def @func_10806() -> (Tensor[(3, 2, 16), float64],) {
  %243 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %244 = %243.4;
  (%244,)
}

def @func_14453(%var_14372: Tensor[(14, 8, 7), uint64]) -> (Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %245 = cast(meta[relay.Constant][9] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %246 = reshape(%245, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %247 = @func_494(%246) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
  %248 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 8, 7), uint64] */, dtype="uint64") /* ty=Tensor[(14, 8, 7), uint64] */;
  %249 = shape_of(%var_14372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%var_14372, dtype="uint64") /* ty=Tensor[(14, 8, 7), uint64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %252 = multiply(%250, %251) /* ty=Tensor[(14, 8, 7), uint64] */;
  %253 = cast(%252, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
  %254 = shape_of(%var_14372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_14372, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = %247.0;
  %258 = greater_equal(%255, %256) /* ty=Tensor[(14, 8, 7), bool] */;
  %259 = @func_5637() /* ty=Tensor[(3, 2, 16), float64] */;
  %260 = @func_12968() /* ty=Tensor[(3, 2, 16), float64] */;
  (%257, meta[relay.Constant][9] /* ty=Tensor[(96), float64] */, %258, %259, %260)
}

def @func_2640() -> Tensor[(3, 2, 16), float64] {
  %261 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %261.0
}

def @func_12700() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %262 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %263 = @func_10726() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %264 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %265 = %262.1;
  %266 = %263.0;
  %267 = %264.0;
  (%265, %266, %267)
}

def @func_2976() -> (Tensor[(3, 2, 16), float64],) {
  %268 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %269 = %268.0;
  (%269,)
}

def @func_9035() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %270 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %271 = cast(meta[relay.Constant][11] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %272 = cast(meta[relay.Constant][11] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %273 = reshape(%271, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %274 = reshape(%272, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %275 = %270.1;
  %276 = @func_7849(%273, %274) /* ty=Tensor[(12, 2, 5), float64] */;
  (%275, %276, meta[relay.Constant][11] /* ty=Tensor[(120), uint16] */)
}

def @func_9468() -> (Tensor[(3, 2, 16), float64],) {
  %277 = @func_3124() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %278 = %277.2;
  (%278,)
}

def @func_11258() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) {
  %279 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %280 = cast(meta[relay.Constant][12] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %281 = reshape(%280, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
  %282 = @func_1409(%281) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
  %283 = %279.1;
  %284 = %282.0;
  %285 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  (%283, %284, meta[relay.Constant][12] /* ty=Tensor[(54, 10), uint32] */, %285)
}

def @func_1269() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %286 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %287 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %288 = %286.2;
  %289 = %287.0;
  (%288, %289)
}

def @func_12158() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %290 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %291 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %292 = %290.0;
  %293 = %291.1;
  (%292, %293)
}

def @func_3510() -> (Tensor[(3, 2, 16), float64],) {
  %294 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %295 = %294.0;
  %296 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%295, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %300 = mod(%298, %299) /* ty=Tensor[(3, 2, 16), float64] */;
  (%300,)
}

def @func_15790() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %301 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %302 = %301.0;
  %303 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  (%302, %303)
}

def @func_6548() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %304 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %305 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %306 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %307 = @func_1629() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %308 = %304.0;
  %309 = %305.1;
  %310 = %306.1;
  %311 = %307.0;
  (%308, %309, %310, %311)
}

def @func_15295() -> (Tensor[(3, 3, 14), float32],) {
  %312 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %315 = sinh(%314) /* ty=Tensor[(3, 3, 14), float32] */;
  (%315,)
}

def @func_17661() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %316 = @func_12947() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %317 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %318 = @func_14609() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %319 = %316.0;
  %320 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %321 = %317.0;
  %322 = %318.1;
  (%319, %320, %321, %322)
}

def @func_7660() -> Tensor[(3, 2, 16), int16] {
  %323 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %323.0
}

def @func_8989() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %324 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
  %325 = @func_7379() /* ty=Tensor[(3, 2, 16), float32] */;
  (%324, %325)
}

def @func_13073() -> Tensor[(3, 2, 16), float64] {
  @func_767() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_17917() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %326 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %327 = %326.1;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %329 = reshape(%328, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %330 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %331 = @func_7285() /* ty=Tensor[(3, 2, 16), float64] */;
  %332 = @func_412(%329) /* ty=Tensor[(3, 2, 16), int16] */;
  %333 = @func_10076() /* ty=Tensor[(3, 2, 16), float64] */;
  %334 = %330.1;
  (%327, %331, %332, %333, %334)
}

def @func_3300(%var_3280: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %335 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %336 = cast(%var_3280, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %337 = reshape(%336, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
  %338 = @func_727(%337) /* ty=(Tensor[(1, 9, 9), float32],) */;
  %339 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %340 = %335.0;
  %341 = %338.0;
  %342 = @func_1576() /* ty=Tensor[(3, 2, 16), float32] */;
  %343 = %339.1;
  (%340, %341, %var_3280, %342, %343)
}

def @func_394() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %344 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %345 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %346 = %344.0;
  %347 = %345.0;
  (%346, %347)
}

def @func_16773() -> (Tensor[(3, 2, 16), float64],) {
  %348 = @func_14556() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %349 = %348.0;
  (%349,)
}

def @func_13013() -> Tensor[(3, 2, 16), float64] {
  @func_4482() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4234() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1, 81), float32]) {
  %350 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %351 = %350.1;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %353 = reshape(%352, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %354 = @func_2140(%353) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %355 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 81), float32] */, dtype="float32") /* ty=Tensor[(1, 81), float32] */;
  %356 = reshape(%355, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
  %357 = @func_3300(%356) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %358 = %354.1;
  %359 = %357.4;
  (%351, %358, %359, meta[relay.Constant][14] /* ty=Tensor[(1, 81), float32] */)
}

def @func_4164() -> (Tensor[(3, 2, 16), float64],) {
  %360 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %361 = %360.0;
  (%361,)
}

def @func_1047() -> (Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %362 = cast(meta[relay.Constant][15] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %363 = reshape(%362, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
  %364 = @func_727(%363) /* ty=(Tensor[(1, 9, 9), float32],) */;
  %365 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %366 = %365.1;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %368 = reshape(%367, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %369 = @func_494(%368) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
  %370 = cast(%366, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %371 = %364.0;
  %372 = %369.1;
  %373 = acos(%370) /* ty=Tensor[(3, 2, 16), float64] */;
  %374 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%371, meta[relay.Constant][15] /* ty=Tensor[(81), float32] */, %372, %373, %374)
}

def @func_9930() -> Tensor[(210), float64] {
  %375 = @func_7933() /* ty=(Tensor[(210), float64],) */;
  %375.0
}

def @func_14137() -> (Tensor[(3, 2, 16), float64],) {
  %376 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%376,)
}

def @func_10086() -> Tensor[(3, 2, 16), float64] {
  @func_9940() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5943(%var_5925: Tensor[(3, 3, 14), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) {
  %377 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %378 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %379 = %378.2;
  %380 = cast(%var_5925, dtype="bool") /* ty=Tensor[(3, 3, 14), bool] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%379, dtype="bool") /* ty=Tensor[(3, 3, 14), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = %377.0;
  %385 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
  %386 = greater(%382, %383) /* ty=Tensor[(3, 3, 14), bool] */;
  (%384, %385, %386)
}

def @func_1926(%var_1916: Tensor[(2, 2, 15), int16], %var_1917: Tensor[(2, 2, 15), int16]) -> (Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) {
  %387 = cast(%var_1917, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %388 = shape_of(%var_1916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_1916, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %391 = @func_1664() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %392 = logical_xor(%389, %390) /* ty=Tensor[(2, 2, 15), int16] */;
  %393 = %391.1;
  (%392, %393)
}

def @func_11945(%var_11930: Tensor[(108), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
  %394 = cast(%var_11930, dtype="float32") /* ty=Tensor[(108), float32] */;
  %395 = reshape(%394, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
  %396 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %397 = @func_7360(%395) /* ty=Tensor[(4, 3, 9), float32] */;
  (%396, %397, %var_11930)
}

def @func_13911() -> Tensor[(210), float64] {
  %398 = @func_13744() /* ty=(Tensor[(210), float64],) */;
  %398.0
}

def @func_15694() -> Tensor[(3, 2, 16), float64] {
  %399 = @func_10806() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %399.0
}

def @func_17069() -> (Tensor[(3, 2, 16), float64], Tensor[(1440), uint32], Tensor[(90), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %400 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %401 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %402 = reshape(%401, newshape=[90]) /* ty=Tensor[(90), uint32] */;
  %403 = @func_8539(%402) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) */;
  %404 = @func_14002() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %405 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %406 = %400.1;
  %407 = %403.3;
  %408 = %404.0;
  %409 = %405.0;
  (%406, %407, meta[relay.Constant][16] /* ty=Tensor[(90), uint32] */, %408, %409)
}

def @func_15590(%var_15533: Tensor[(2, 6, 7), int64], %var_15534: Tensor[(2, 6, 7), int64]) -> Tensor[(2, 6, 7), bool] {
  %410 = cast(%var_15534, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %411 = shape_of(%var_15533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_15533, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%412, %413) /* ty=Tensor[(2, 6, 7), bool] */
}

def @func_3175(%var_3167: int32, %var_3168: Tensor[(3, 3, 13), int32]) -> (Tensor[(3, 3, 13), bool],) {
  %414 = cast(%var_3167, dtype="bool") /* ty=bool */;
  %415 = cast(%var_3168, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %416 = less_equal(%414, %415) /* ty=Tensor[(3, 3, 13), bool] */;
  (%416,)
}

def @func_12410() -> (Tensor[(3, 2, 16), int16],) {
  %417 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %418 = %417.4;
  (%418,)
}

def @func_15079(%var_15022: Tensor[(750), float32], %var_15073: Tensor[(144, 4), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(784), uint64], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(144, 4), float64]) {
  %419 = @func_11848() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %420 = cast(meta[relay.Constant][17] /* ty=Tensor[(784), uint64] */, dtype="uint64") /* ty=Tensor[(784), uint64] */;
  %421 = reshape(%420, newshape=[14, 8, 7]) /* ty=Tensor[(14, 8, 7), uint64] */;
  %422 = @func_14453(%421) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %423 = cast(%var_15022, dtype="float32") /* ty=Tensor[(750), float32] */;
  %424 = reshape(%423, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), float32] */;
  %425 = cast(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="float32") /* ty=Tensor[(144, 4), float32] */;
  %426 = reshape(%425, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
  %427 = @func_10008(%426) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %428 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %429 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %430 = cast(%var_15073, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %431 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %434 = %419.0;
  %435 = %422.4;
  %436 = @func_11347(%424) /* ty=Tensor[(15, 5, 10), float32] */;
  %437 = %427.5;
  %438 = %428.0;
  %439 = %429.0;
  %440 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
  %441 = add(%432, %433) /* ty=Tensor[(144, 4), float64] */;
  (%434, %435, meta[relay.Constant][17] /* ty=Tensor[(784), uint64] */, %436, %var_15022, %437, %438, %439, %440, %441)
}

def @func_3124() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %442 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %443 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %444 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %445 = %442.1;
  %446 = %443.0;
  (%444, %445, %446)
}

def @func_10008(%var_9977: Tensor[(6, 96), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %447 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %448 = cast(%var_9977, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %449 = cast(%var_9977, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %450 = reshape(%448, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %451 = reshape(%449, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %452 = @func_8566(%450, %451) /* ty=(Tensor[(8, 6, 12), int64],) */;
  %453 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %454 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %455 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  %456 = %447.0;
  %457 = %452.0;
  %458 = %453.2;
  %459 = %454.0;
  %460 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
  (%455, %456, %457, %var_9977, %458, %459, %460)
}

def @func_4043() -> Tensor[(3, 2, 16), float64] {
  @func_1937() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_16358() -> (Tensor[(3, 2, 16), float64],) {
  %461 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %462 = %461.1;
  (%462,)
}

def @func_7613() -> (Tensor[(3, 2, 16), float64],) {
  %463 = @func_7285() /* ty=Tensor[(3, 2, 16), float64] */;
  (%463,)
}

def @func_7285() -> Tensor[(3, 2, 16), float64] {
  %464 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %464.0
}

def @func_4585() -> Tensor[(3, 2, 16), float64] {
  @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_1937() -> Tensor[(3, 2, 16), float64] {
  @func_1317() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9184() -> (Tensor[(3, 2, 16), float64],) {
  %465 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %466 = %465.0;
  (%466,)
}

def @func_7673() -> Tensor[(3, 2, 16), int16] {
  %467 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %467.0
}

def @func_13608(%var_13580: Tensor[(30), int16], %var_13605: bool, %var_13606: Tensor[(13), bool]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(81), bool], bool, Tensor[(1008), float64], bool, Tensor[(13), bool]) {
  %468 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %469 = cast(%var_13580, dtype="int16") /* ty=Tensor[(30), int16] */;
  %470 = reshape(%469, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), int16] */;
  %471 = @func_4149(%470) /* ty=(Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) */;
  %472 = cast(meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %473 = cast(%var_13605, dtype="bool") /* ty=bool */;
  %474 = cast(%var_13606, dtype="bool") /* ty=Tensor[(13), bool] */;
  %475 = reshape(%472, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float64] */;
  %476 = reshape(%473, newshape=[]) /* ty=bool */;
  %477 = reshape(%474, newshape=[13]) /* ty=Tensor[(13), bool] */;
  %478 = @func_12572(%475, %476, %477) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %479 = %468.0;
  %480 = %471.2;
  %481 = @func_4762() /* ty=Tensor[(81), bool] */;
  %482 = %478.2;
  (%479, %480, %var_13580, %481, %482, meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, %var_13605, %var_13606)
}

def @func_12657(%var_12626: Tensor[(7, 4, 13), uint32]) -> (Tensor[(7, 4, 13), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
  %483 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 4, 13), uint32] */, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
  %484 = shape_of(%var_12626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_12626, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = @func_10943() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %488 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %489 = equal(%485, %486) /* ty=Tensor[(7, 4, 13), bool] */;
  %490 = %487.1;
  %491 = %488.0;
  (%489, %490, %491)
}

def @func_7318() -> Tensor[(3, 2, 16), float64] {
  %492 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %492.0
}

def @func_4149(%var_4094: Tensor[(5, 2, 3), int16]) -> (Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) {
  %493 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 2, 3), int16] */, dtype="int16") /* ty=Tensor[(5, 2, 3), int16] */;
  %494 = shape_of(%var_4094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_4094, dtype="int16") /* ty=Tensor[(5, 2, 3), int16] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %497 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %500 = cast(%498, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %501 = cast(%498, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %502 = reshape(%499, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %503 = reshape(%500, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %504 = reshape(%501, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %505 = @func_2541(%502, %503, %504) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %506 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %509 = reshape(%508, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %510 = @func_2140(%509) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %511 = subtract(%495, %496) /* ty=Tensor[(5, 2, 3), int16] */;
  %512 = %505.0;
  %513 = %510.0;
  (%511, %498, %512, %507, %513)
}

def @func_10076() -> Tensor[(3, 2, 16), float64] {
  @func_6574() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_1629() -> (Tensor[(3, 2, 16), float64],) {
  %514 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_15661() -> (Tensor[(3, 2, 16), float64],) {
  %516 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %517 = %516.0;
  (%517,)
}

def @func_12947() -> (Tensor[(3, 2, 16), float64],) {
  %518 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %519 = %518.4;
  (%519,)
}

def @func_12968() -> Tensor[(3, 2, 16), float64] {
  %520 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %520.0
}

def @func_4762() -> Tensor[(81), bool] {
  %521 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %522 = %521.1;
  %523 = cast(meta[relay.Constant][22] /* ty=Tensor[(81), float32] */, dtype="bool") /* ty=Tensor[(81), bool] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(1), int32] */;
  %525 = cast(%522, dtype="bool") /* ty=Tensor[(81), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%525, %526) /* ty=Tensor[(81), bool] */
}

def @func_10544(%var_10532: Tensor[(1, 117), int32]) -> (Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %527 = @func_4902() /* ty=(Tensor[(81), int8],) */;
  %528 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %529 = cast(%var_10532, dtype="int32") /* ty=Tensor[(1, 117), int32] */;
  %530 = reshape(%528, newshape=[]) /* ty=int32 */;
  %531 = reshape(%529, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), int32] */;
  %532 = @func_3175(%530, %531) /* ty=(Tensor[(3, 3, 13), bool],) */;
  %533 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %534 = %527.0;
  %535 = %532.0;
  %536 = %533.3;
  %537 = @func_6574() /* ty=Tensor[(3, 2, 16), float64] */;
  (%534, %535, -3 /* ty=int32 */, %var_10532, %536, %537)
}

def @func_11736() -> (Tensor[(3, 2, 16), float32],) {
  %538 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %539 = %538.1;
  (%539,)
}

def @func_8854() -> (Tensor[(3, 2, 16), float64],) {
  %540 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
  (%540,)
}

def @func_8880() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %541 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %542 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %543 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %544 = %541.0;
  %545 = %542.0;
  %546 = %543.0;
  (%544, %545, %546)
}

def @func_4914() -> Tensor[(3, 2, 16), float64] {
  %547 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %547.1
}

def @func_14825() -> (Tensor[(3, 2, 16), float64],) {
  %548 = @func_10806() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %549 = %548.0;
  (%549,)
}

def @func_14274() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %550 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %551 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %552 = %550.0;
  %553 = %551.0;
  (%552, %553)
}

def @func_4482() -> Tensor[(3, 2, 16), float64] {
  @func_767() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_936(%var_932: Tensor[(7, 10, 15), float32]) -> Tensor[(7, 10, 15), float32] {
  %554 = cast(%var_932, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
  tan(%554) /* ty=Tensor[(7, 10, 15), float32] */
}

def @func_10313() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %555 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %556 = cast(meta[relay.Constant][23] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %557 = reshape(%556, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), float64] */;
  %558 = @func_3363(%557) /* ty=(Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) */;
  %559 = @func_8388() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %560 = %555.0;
  %561 = %558.1;
  %562 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %563 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
  %564 = %559.1;
  (%560, %561, meta[relay.Constant][23] /* ty=Tensor[(462), float64] */, %562, %563, %564)
}

def @func_2885() -> Tensor[(3, 2, 16), int16] {
  %565 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %565.0
}

def @func_5161() -> Tensor[(3, 2, 16), float64] {
  %566 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %566.0
}

def @func_10174() -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %567 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %568 = @func_10076() /* ty=Tensor[(3, 2, 16), float64] */;
  %569 = %567.2;
  (%568, %569)
}

def @func_3218() -> (Tensor[(3, 2, 16), float64],) {
  %570 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %571 = %570.0;
  (%571,)
}

def @func_11780(%var_11770: Tensor[(4, 14, 9), float64]) -> (Tensor[(81), bool], Tensor[(4, 14, 9), uint64]) {
  %572 = cast(%var_11770, dtype="float64") /* ty=Tensor[(4, 14, 9), float64] */;
  %573 = atanh(%572) /* ty=Tensor[(4, 14, 9), float64] */;
  %574 = cast(%var_11770, dtype="uint64") /* ty=Tensor[(4, 14, 9), uint64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="uint64") /* ty=Tensor[(4, 14, 9), uint64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %578 = @func_4762() /* ty=Tensor[(81), bool] */;
  %579 = minimum(%576, %577) /* ty=Tensor[(4, 14, 9), uint64] */;
  (%578, %579)
}

def @func_17131(%var_17102: Tensor[(9, 16, 4), float32]) -> (Tensor[(9, 16, 4), float32], Tensor[(3, 2, 16), float32]) {
  %580 = cast(%var_17102, dtype="float32") /* ty=Tensor[(9, 16, 4), float32] */;
  %581 = cosh(%580) /* ty=Tensor[(9, 16, 4), float32] */;
  %582 = @func_10044() /* ty=Tensor[(3, 2, 16), float32] */;
  (%581, %582)
}

def @func_12587(%var_12579: uint16, %var_12580: Tensor[(12, 8, 2), uint16]) -> Tensor[(12, 8, 2), uint16] {
  %583 = cast(%var_12579, dtype="uint16") /* ty=uint16 */;
  %584 = cast(%var_12580, dtype="uint16") /* ty=Tensor[(12, 8, 2), uint16] */;
  maximum(%583, %584) /* ty=Tensor[(12, 8, 2), uint16] */
}

def @func_3405() -> Tensor[(3, 2, 16), float64] {
  %585 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %585.0
}

def @func_6323() -> (Tensor[(3, 2, 16), float64],) {
  %586 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_8279() -> Tensor[(3, 2, 16), float64] {
  %588 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %588.0
}

def @func_1409(%var_1392: Tensor[(3, 15, 12), uint32]) -> (Tensor[(3, 15, 12), bool], Tensor[(210), float64]) {
  %589 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 12), uint32] */, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %590 = shape_of(%var_1392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%var_1392, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %594 = greater(%591, %592) /* ty=Tensor[(3, 15, 12), bool] */;
  %595 = %593.2;
  (%594, %595)
}

def @func_3363(%var_3338: Tensor[(6, 11, 7), float64]) -> (Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) {
  %596 = cast(%var_3338, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
  %597 = tan(%596) /* ty=Tensor[(6, 11, 7), float64] */;
  %598 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%597, %598)
}

def @func_767() -> Tensor[(3, 2, 16), float64] {
  %599 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %599.0
}

def @func_2783() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %600 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %601 = %600.1;
  %602 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  (%601, %602)
}

def @func_1292() -> Tensor[(3, 2, 16), float64] {
  %603 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %603.1
}

def @func_5624() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %604 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %607 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  %608 = exp(%606) /* ty=Tensor[(3, 2, 16), float32] */;
  (%607, %608)
}

def @func_6185() -> (Tensor[(3, 2, 16), float64],) {
  %609 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %610 = %609.1;
  (%610,)
}

def @func_14868() -> (Tensor[(3, 2, 16), float64],) {
  %611 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%611,)
}

def @func_13937(%var_13926: Tensor[(16, 1, 6), uint64]) -> (Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) {
  %612 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %613 = cast(%var_13926, dtype="uint64") /* ty=Tensor[(16, 1, 6), uint64] */;
  %614 = @func_5576() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %615 = add(%612, %613) /* ty=Tensor[(16, 1, 6), uint64] */;
  %616 = %614.0;
  (%615, %616)
}

def @func_16889() -> Tensor[(3, 2, 16), float64] {
  %617 = @func_8989() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */;
  %617.0
}

def @func_16949() -> (Tensor[(3, 2, 16), float64],) {
  %618 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %619 = %618.0;
  (%619,)
}

def @func_17437() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) {
  %620 = @func_16866() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %621 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %622 = cast(meta[relay.Constant][26] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %623 = reshape(%622, newshape=[6, 10, 2]) /* ty=Tensor[(6, 10, 2), uint32] */;
  %624 = @func_11328(%623) /* ty=(Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */;
  %625 = %620.1;
  %626 = %621.1;
  %627 = %624.1;
  (%625, %626, %627, meta[relay.Constant][26] /* ty=Tensor[(120), uint32] */)
}

def @func_3723() -> Tensor[(3, 2, 16), float64] {
  %628 = @func_3124() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %628.2
}

def @func_673() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
  %629 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %630 = %629.1;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %632 = reshape(%631, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %633 = @func_412(%632) /* ty=Tensor[(3, 2, 16), int16] */;
  (%630, %633)
}

def @func_14962() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %634 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %635 = @func_7540() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %636 = %634.0;
  %637 = %635.2;
  (%636, %637)
}

def @func_16629() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %638 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %639 = @func_6791() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) */;
  %640 = %638.0;
  %641 = %639.0;
  (%640, %641)
}

def @func_2318() -> (Tensor[(3, 2, 16), int16],) {
  %642 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  (%642,)
}

def @func_5542(%var_5537: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(540), uint32]) {
  %643 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %644 = cast(%var_5537, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %645 = reshape(%644, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
  %646 = @func_1409(%645) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
  %647 = %643.0;
  %648 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
  %649 = %646.1;
  (%647, %648, %649, %var_5537)
}

def @func_6514() -> (Tensor[(8, 15, 8), float32], Tensor[(8, 15, 8), float32]) {
  %650 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %651 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %652 = atanh(%650) /* ty=Tensor[(8, 15, 8), float32] */;
  %653 = log2(%651) /* ty=Tensor[(8, 15, 8), float32] */;
  (%652, %653)
}

def @func_320() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %654 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %655 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %658 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %659 = %654.0;
  %660 = sin(%657) /* ty=Tensor[(3, 2, 16), float32] */;
  %661 = %658.0;
  (%659, %660, %661)
}

def @func_12477() -> (Tensor[(3, 2, 16), float64],) {
  %662 = @func_11848() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %663 = %662.0;
  (%663,)
}

def @func_14858() -> Tensor[(3, 2, 16), float64] {
  %664 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %664.0
}

def @func_10726() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %665 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %666 = @func_3146() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %667 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %668 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %669 = %665.3;
  %670 = %666.0;
  %671 = %667.1;
  %672 = %668.0;
  (%669, %670, %671, %672)
}

def @func_11177() -> (Tensor[(3, 2, 16), float64],) {
  %673 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  (%673,)
}

def @func_7576() -> Tensor[(3, 2, 16), int16] {
  %674 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %674.0
}

def @func_13714() -> Tensor[(3, 2, 16), float64] {
  %675 = @func_1664() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %675.0
}

def @func_4935() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %676 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %677 = @func_4914() /* ty=Tensor[(3, 2, 16), float64] */;
  %678 = %676.0;
  (%677, %678)
}

def @func_9722() -> (Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  %679 = @func_9428() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %680 = cast(meta[relay.Constant][28] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %681 = reshape(%680, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), float64] */;
  %682 = @func_6678(%681) /* ty=(Tensor[(8, 6, 16), float64],) */;
  %683 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %684 = %679.0;
  %685 = %682.0;
  %686 = %683.0;
  (%684, %685, meta[relay.Constant][28] /* ty=Tensor[(768), float64] */, %686)
}

def @func_2993(%var_2986: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(540), uint32]) {
  %687 = cast(%var_2986, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %688 = reshape(%687, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
  %689 = @func_1409(%688) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
  %690 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  %691 = %689.1;
  (%690, %691, %var_2986)
}

def @func_10044() -> Tensor[(3, 2, 16), float32] {
  @func_7379() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_2868() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
  %692 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %693 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %694 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %695 = %692.0;
  %696 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %697 = %693.0;
  %698 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  %699 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  %700 = %694.0;
  (%695, %696, %697, %698, %699, %700)
}

def @func_13954() -> (Tensor[(3, 2, 16), float64], Tensor[(462), float64]) {
  %701 = @func_6706() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %702 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %703 = %701.0;
  %704 = %702.2;
  (%703, %704)
}

def @func_16914() -> Tensor[(3, 2, 16), float64] {
  %705 = @func_14962() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %705.1
}

def @func_1131() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %706 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %707 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %708 = %706.2;
  %709 = %707.2;
  (%708, %709)
}

def @func_8209() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %710 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %711 = @func_6548() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %712 = %710.0;
  %713 = %711.1;
  (%712, %713)
}

def @func_10253() -> (Tensor[(3, 2, 16), int16],) {
  %714 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %715 = %714.0;
  (%715,)
}

def @func_15398() -> Tensor[(3, 2, 16), float64] {
  @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_6678(%var_6674: Tensor[(8, 6, 16), float64]) -> (Tensor[(8, 6, 16), float64],) {
  %716 = cast(%var_6674, dtype="float64") /* ty=Tensor[(8, 6, 16), float64] */;
  %717 = rsqrt(%716) /* ty=Tensor[(8, 6, 16), float64] */;
  (%717,)
}

def @func_6146() -> (Tensor[(3, 2, 16), float64],) {
  %718 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %719 = %718.0;
  (%719,)
}

def @func_8164() -> Tensor[(3, 2, 16), float64] {
  %720 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %720.0
}

def @func_7540() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %721 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %722 = @func_6069() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %723 = @func_6146() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %724 = %721.0;
  %725 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  %726 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %727 = %722.1;
  %728 = %723.0;
  (%724, %725, %726, %727, %728)
}

def @func_17768(%var_17744: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64]) {
  %729 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %730 = cast(%var_17744, dtype="float64") /* ty=Tensor[(462), float64] */;
  %731 = reshape(%730, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %732 = @func_16032(%731) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %733 = @func_17437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) */;
  %734 = %729.0;
  %735 = %732.0;
  %736 = %733.1;
  (%734, %735, %var_17744, %736)
}

def @func_8073() -> Tensor[(3, 2, 16), float64] {
  %737 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %737.0
}

def @func_7849(%var_7817: Tensor[(12, 2, 5), uint16], %var_7818: Tensor[(12, 2, 5), uint16]) -> Tensor[(12, 2, 5), float64] {
  %738 = cast(%var_7818, dtype="uint16") /* ty=Tensor[(12, 2, 5), uint16] */;
  %739 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_7817, dtype="uint16") /* ty=Tensor[(12, 2, 5), uint16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %742 = maximum(%740, %741) /* ty=Tensor[(12, 2, 5), uint16] */;
  %743 = cast(%742, dtype="uint64") /* ty=Tensor[(12, 2, 5), uint64] */;
  %744 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%var_7817, dtype="uint64") /* ty=Tensor[(12, 2, 5), uint64] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %747 = right_shift(%745, %746) /* ty=Tensor[(12, 2, 5), uint64] */;
  %748 = cast(%747, dtype="float64") /* ty=Tensor[(12, 2, 5), float64] */;
  %749 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_7817, dtype="float64") /* ty=Tensor[(12, 2, 5), float64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%750, %751) /* ty=Tensor[(12, 2, 5), float64] */
}

def @func_16306() -> (Tensor[(3, 2, 16), float64],) {
  %752 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %753 = %752.1;
  (%753,)
}

def @func_13744() -> (Tensor[(210), float64],) {
  %754 = @func_1363() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %755 = %754.0;
  (%755,)
}

def @func_14108() -> Tensor[(210), float64] {
  %756 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %756.2
}

def @func_12932() -> (Tensor[(3, 2, 16), int16], Tensor[(9, 3, 8), bool], Tensor[(216), float64]) {
  %757 = @func_12410() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %758 = cast(meta[relay.Constant][29] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %759 = reshape(%758, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
  %760 = @func_8033(%759) /* ty=(Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %761 = %757.0;
  %762 = %760.0;
  (%761, %762, meta[relay.Constant][29] /* ty=Tensor[(216), float64] */)
}

def @func_14556() -> (Tensor[(3, 2, 16), float64],) {
  %763 = @func_13013() /* ty=Tensor[(3, 2, 16), float64] */;
  (%763,)
}

def @func_12769() -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %764 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %765 = @func_9930() /* ty=Tensor[(210), float64] */;
  %766 = %764.0;
  (%765, %766)
}

def @func_1992(%var_1961: Tensor[(13, 7, 12), int64], %var_1962: Tensor[(13, 7, 12), int64]) -> (Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %767 = cast(%var_1962, dtype="bool") /* ty=Tensor[(13, 7, 12), bool] */;
  %768 = shape_of(%var_1961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_1961, dtype="bool") /* ty=Tensor[(13, 7, 12), bool] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %771 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %772 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %773 = not_equal(%769, %770) /* ty=Tensor[(13, 7, 12), bool] */;
  %774 = %771.0;
  %775 = %772.0;
  (%773, %774, %775)
}

def @func_6416(%var_6374: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
  %776 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %777 = %776.0;
  %778 = cast(%var_6374, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %779 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%777, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %782 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %783 = %782.0;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %785 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %786 = reshape(%784, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %787 = reshape(%785, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %788 = @func_839(%786, %787) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %789 = floor_mod(%780, %781) /* ty=Tensor[(3, 2, 16), float32] */;
  %790 = %788.4;
  (%789, %783, %790, meta[relay.Constant][30] /* ty=Tensor[(210), float64] */)
}

def @func_1317() -> Tensor[(3, 2, 16), float64] {
  @func_1292() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_7716(%var_7695: bool, %var_7696: Tensor[(1, 13), bool]) -> Tensor[(1, 13), bool] {
  %791 = cast(%var_7695, dtype="bool") /* ty=bool */;
  %792 = cast(%var_7696, dtype="bool") /* ty=Tensor[(1, 13), bool] */;
  logical_and(%791, %792) /* ty=Tensor[(1, 13), bool] */
}

def @func_10346() -> (Tensor[(81), float32],) {
  %793 = @func_6030() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */;
  %794 = %793.2;
  (%794,)
}

def @func_8539(%var_8492: Tensor[(90), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) {
  %795 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %796 = cast(%var_8492, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %797 = cast(meta[relay.Constant][31] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
  %798 = cast(meta[relay.Constant][32] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %799 = %795.1;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %801 = cast(meta[relay.Constant][33] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %802 = reshape(%796, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint32] */;
  %803 = reshape(%797, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), uint32] */;
  %804 = reshape(%798, newshape=[5, 210]) /* ty=Tensor[(5, 210), float32] */;
  %805 = reshape(%800, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %806 = reshape(%801, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %807 = @func_5467(%802, %803, %804, %805, %806) /* ty=(Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) */;
  %808 = @func_3890() /* ty=(Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) */;
  %809 = %807.0;
  %810 = %808.0;
  (%799, %809, %var_8492, meta[relay.Constant][31] /* ty=Tensor[(1440), uint32] */, meta[relay.Constant][32] /* ty=Tensor[(1050), float32] */, meta[relay.Constant][33] /* ty=Tensor[(210), float64] */, %810)
}

def @func_2276() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %811 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %812 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %813 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %814 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %815 = %811.1;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %817 = reshape(%816, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %818 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %819 = %812.1;
  %820 = %813.0;
  %821 = %814.1;
  %822 = @func_750(%817) /* ty=Tensor[(3, 2, 16), int16] */;
  %823 = %818.0;
  (%815, %819, %820, %821, %822, %823)
}

def @func_7379() -> Tensor[(3, 2, 16), float32] {
  @func_7139() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_2541(%var_2471: Tensor[(3, 2, 16), float32], %var_2495: Tensor[(3, 2, 16), float32], %var_2515: Tensor[(3, 2, 16), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %824 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %825 = %824.0;
  %826 = cast(%var_2471, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %830 = cast(%var_2471, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %831 = asinh(%830) /* ty=Tensor[(3, 2, 16), float32] */;
  %832 = cast(%var_2495, dtype="int64") /* ty=Tensor[(3, 2, 16), int64] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="int64") /* ty=Tensor[(3, 2, 16), int64] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %836 = @func_1515() /* ty=(Tensor[(3, 2, 16), float32],) */;
  %837 = cast(%var_2515, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %838 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%831, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %841 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %842 = power(%828, %829) /* ty=Tensor[(3, 2, 16), float64] */;
  %843 = bitwise_or(%834, %835) /* ty=Tensor[(3, 2, 16), int64] */;
  %844 = %836.0;
  %845 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %846 = floor_divide(%839, %840) /* ty=Tensor[(3, 2, 16), float32] */;
  %847 = %841.0;
  (%842, %843, %844, %845, %846, %847)
}

def @func_4902() -> (Tensor[(81), int8],) {
  %848 = @func_4762() /* ty=Tensor[(81), bool] */;
  %849 = @func_4762() /* ty=Tensor[(81), bool] */;
  %850 = cast(%849, dtype="int8") /* ty=Tensor[(81), int8] */;
  %851 = shape_of(%848, dtype="int32") /* ty=Tensor[(1), int32] */;
  %852 = cast(%848, dtype="int8") /* ty=Tensor[(81), int8] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?), int8] */;
  %854 = maximum(%852, %853) /* ty=Tensor[(81), int8] */;
  (%854,)
}

def @func_3890() -> (Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) {
  %855 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %856 = cast(%855, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %857 = reshape(%856, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %858 = @func_2140(%857) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %859 = %858.1;
  %860 = cast(%859, dtype="int8") /* ty=Tensor[(3, 2, 16), int8] */;
  %861 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%855, dtype="int8") /* ty=Tensor[(3, 2, 16), int8] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %864 = multiply(%862, %863) /* ty=Tensor[(3, 2, 16), int8] */;
  %865 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
  (%864, %865)
}

def @func_8317() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %866 = @func_5576() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %867 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %868 = %866.0;
  %869 = %867.0;
  (%868, %869)
}

def @func_10943() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %870 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %871 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
  %872 = %870.4;
  (%871, %872)
}

def @func_8176() -> Tensor[(3, 2, 16), float64] {
  @func_2721() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_1605() -> (Tensor[(3, 2, 16), float64],) {
  %873 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%873,)
}

def @func_1885() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %874 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %875 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  %876 = %874.0;
  (%875, %876)
}

def @func_6574() -> Tensor[(3, 2, 16), float64] {
  @func_5161() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4574() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %877 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %878 = @func_3510() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %879 = %878.0;
  %880 = cast(%879, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %881 = reshape(%880, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %882 = @func_2140(%881) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %883 = %877.0;
  %884 = %882.1;
  (%883, %879, %884)
}

def @func_16518() -> (Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
  %885 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
  %886 = cast(meta[relay.Constant][34] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %887 = reshape(%886, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %888 = @func_15130(%887) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) */;
  %889 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %890 = %885.1;
  %891 = %888.2;
  %892 = %889.1;
  (%890, %891, meta[relay.Constant][34] /* ty=Tensor[(30), int16] */, %892)
}

def @func_14529() -> (Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
  %893 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %894 = @func_4762() /* ty=Tensor[(81), bool] */;
  %895 = cast(%894, dtype="float32") /* ty=Tensor[(81), float32] */;
  %896 = %893.1;
  %897 = asin(%895) /* ty=Tensor[(81), float32] */;
  (%896, %897)
}

def @func_1296() -> (Tensor[(3, 2, 16), float64],) {
  %898 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %899 = %898.1;
  (%899,)
}

def @func_2721() -> Tensor[(3, 2, 16), float64] {
  %900 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %900.0
}

def @func_9082() -> Tensor[(3, 2, 16), float64] {
  %901 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %901.0
}

def @func_15891() -> Tensor[(3, 2, 16), float64] {
  %902 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %902.0
}

def @main(%var_17990: Tensor[(54, 10), uint32], %var_18001: Tensor[(54, 10), bool]) -> (Tensor[(3, 2, 16), float64], Tensor[(54, 10), int64]) {
  %903 = @func_6069() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %904 = @func_11258() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) */;
  %905 = %904.2;
  %906 = cast(%var_17990, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(2), int32] */;
  %908 = cast(%905, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %910 = logical_or(%908, %909) /* ty=Tensor[(54, 10), bool] */;
  %911 = cast(%var_18001, dtype="int64") /* ty=Tensor[(54, 10), int64] */;
  %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(2), int32] */;
  %913 = cast(%910, dtype="int64") /* ty=Tensor[(54, 10), int64] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %915 = %903.1;
  %916 = bitwise_or(%913, %914) /* ty=Tensor[(54, 10), int64] */;
  (%915, %916)
}

def @func_4987() -> (Tensor[(3, 2, 16), float64],) {
  %917 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %918 = %917.1;
  (%918,)
}

def @func_15237() -> (Tensor[(3, 2, 16), float64],) {
  %919 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
  (%919,)
}

def @func_5637() -> Tensor[(3, 2, 16), float64] {
  @func_2721() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_7322() -> Tensor[(3, 2, 16), float64] {
  %920 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %920.0
}

def @func_8587() -> (Tensor[(3, 2, 16), float32],) {
  %921 = @func_7379() /* ty=Tensor[(3, 2, 16), float32] */;
  (%921,)
}

def @func_2375() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %922 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %923 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %924 = %922.1;
  %925 = %923.0;
  (%924, %925)
}

def @func_14576() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %926 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %927 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
  %928 = %926.0;
  %929 = %927.3;
  (%928, %929)
}

def @func_5877() -> (Tensor[(3, 2, 16), float64],) {
  %930 = @func_3812() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %931 = %930.0;
  (%931,)
}

def @func_9052() -> Tensor[(3, 2, 16), int8] {
  %932 = @func_3890() /* ty=(Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) */;
  %932.0
}

def @func_11122(%var_11066: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(81), float32]) {
  %933 = cast(%var_11066, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
  %934 = sigmoid(%933) /* ty=Tensor[(1, 3, 14), float64] */;
  %935 = cast(%var_11066, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
  %936 = acosh(%935) /* ty=Tensor[(1, 3, 14), float64] */;
  %937 = cast(%936, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %938 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%934, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %941 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %942 = greater_equal(%939, %940) /* ty=Tensor[(?, 3, 14), bool] */;
  %943 = %941.0;
  (%942, %943)
}

def @func_4330() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
  %944 = @func_1515() /* ty=(Tensor[(3, 2, 16), float32],) */;
  %945 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %946 = %944.0;
  %947 = %945.0;
  (%946, %947)
}

def @func_8033(%var_8018: Tensor[(9, 3, 8), float64]) -> (Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %948 = cast(%var_8018, dtype="bool") /* ty=Tensor[(9, 3, 8), bool] */;
  %949 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(9, 3, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 3, 8), float64] */, dtype="bool") /* ty=Tensor[(9, 3, 8), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %953 = greater(%950, %951) /* ty=Tensor[(9, 3, 8), bool] */;
  %954 = %952.0;
  %955 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%953, %954, %955)
}

def @func_839(%var_800: Tensor[(96), float64], %var_824: Tensor[(210), float64]) -> (Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %956 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 5, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 3), float32] */;
  %957 = cast(%var_800, dtype="float64") /* ty=Tensor[(96), float64] */;
  %958 = reshape(%957, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %959 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %960 = cast(%var_824, dtype="float64") /* ty=Tensor[(210), float64] */;
  %961 = reshape(%960, newshape=[3, 14, 5]) /* ty=Tensor[(3, 14, 5), float64] */;
  %962 = @func_586(%961) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) */;
  %963 = cast(%var_800, dtype="float64") /* ty=Tensor[(96), float64] */;
  %964 = reshape(%963, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %965 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %966 = atan(%956) /* ty=Tensor[(15, 5, 3), float32] */;
  %967 = @func_750(%958) /* ty=Tensor[(3, 2, 16), int16] */;
  %968 = %959.0;
  %969 = %962.0;
  %970 = @func_412(%964) /* ty=Tensor[(3, 2, 16), int16] */;
  %971 = %965.0;
  (%966, %967, %var_800, %968, %969, %var_824, %970, %971)
}

def @func_5576() -> (Tensor[(3, 2, 16), float64],) {
  %972 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  (%972,)
}

def @func_16164(%var_16142: Tensor[(2520), float64], %var_16149: Tensor[(1248), uint32], %var_16150: Tensor[(210), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(12, 13, 8), uint32], Tensor[(1248), uint32], Tensor[(210), float64]) {
  %973 = cast(%var_16142, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %974 = reshape(%973, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float64] */;
  %975 = @func_5115(%974) /* ty=(Tensor[(12, 14, 15), float64],) */;
  %976 = cast(%var_16149, dtype="uint32") /* ty=Tensor[(1248), uint32] */;
  %977 = cast(%var_16149, dtype="uint32") /* ty=Tensor[(1248), uint32] */;
  %978 = cast(%var_16150, dtype="float64") /* ty=Tensor[(210), float64] */;
  %979 = reshape(%976, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), uint32] */;
  %980 = reshape(%977, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), uint32] */;
  %981 = reshape(%978, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %982 = @func_12204(%979, %980, %981) /* ty=(Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %983 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
  %984 = %975.0;
  %985 = %982.0;
  (%983, %984, %var_16142, %985, %var_16149, %var_16150)
}

def @func_8682(%var_8680: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) {
  %986 = cast(%var_8680, dtype="float32") /* ty=Tensor[(81), float32] */;
  %987 = reshape(%986, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
  %988 = @func_7075(%987) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) */;
  %989 = @func_7139() /* ty=Tensor[(3, 2, 16), float32] */;
  %990 = %988.4;
  (%989, %990, %var_8680)
}

def @func_16468() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %991 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %992 = cast(meta[relay.Constant][37] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
  %993 = reshape(%992, newshape=[1, 117]) /* ty=Tensor[(1, 117), int32] */;
  %994 = @func_10544(%993) /* ty=(Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %995 = @func_15508() /* ty=(Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %996 = @func_8587() /* ty=(Tensor[(3, 2, 16), float32],) */;
  %997 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
  %998 = %991.0;
  %999 = %994.5;
  %1000 = %995.1;
  %1001 = %996.0;
  (%997, %998, %999, meta[relay.Constant][37] /* ty=Tensor[(117), int32] */, %1000, %1001)
}

def @func_14769() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1002 = cast(meta[relay.Constant][38] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1003 = cast(meta[relay.Constant][38] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1004 = reshape(%1002, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1005 = reshape(%1003, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1006 = @func_3812() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1007 = @func_10056() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1008 = @func_11053() /* ty=Tensor[(3, 2, 16), float64] */;
  %1009 = @func_7849(%1004, %1005) /* ty=Tensor[(12, 2, 5), float64] */;
  %1010 = %1006.1;
  %1011 = @func_12968() /* ty=Tensor[(3, 2, 16), float64] */;
  %1012 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  %1013 = %1007.0;
  (%1008, %1009, meta[relay.Constant][38] /* ty=Tensor[(120), uint16] */, %1010, %1011, %1012, %1013)
}

def @func_9940() -> Tensor[(3, 2, 16), float64] {
  @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_11649() -> (Tensor[(3, 2, 16), float64],) {
  %1014 = @func_3723() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1014,)
}

def @func_1363() -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %1015 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1016 = %1015.2;
  %1017 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1016, %1017)
}

def @func_7776(%var_7763: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %1018 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1019 = cast(%var_7763, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1020 = reshape(%1019, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
  %1021 = @func_3300(%1020) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1022 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1023 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %1024 = %1018.0;
  %1025 = %1021.4;
  %1026 = %1022.0;
  (%1023, %1024, %1025, %var_7763, %1026)
}

def @func_2140(%var_2114: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) {
  %1027 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
  %1028 = cast(%var_2114, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1030 = cast(%1027, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1032 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1033 = less_equal(%1030, %1031) /* ty=Tensor[(3, 2, 16), bool] */;
  %1034 = %1032.0;
  (%1033, %1034)
}

def @func_10922() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1035 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1036 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1037 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1038 = %1035.1;
  %1039 = %1036.0;
  %1040 = %1037.0;
  (%1038, %1039, %1040)
}

def @func_1865() -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1041 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
  %1042 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 2, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1041, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1046 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1047 = reshape(%1046, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1048 = cast(%1041, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1049 = reshape(%1048, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1050 = @func_494(%1049) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
  %1051 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1052 = greater(%1044, %1045) /* ty=Tensor[(3, 2, 16), bool] */;
  %1053 = @func_412(%1047) /* ty=Tensor[(3, 2, 16), int16] */;
  %1054 = %1050.0;
  %1055 = %1051.2;
  (%1052, %1053, %1054, %1055)
}

def @func_17545() -> (Tensor[(3, 2, 16), float64], Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1056 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1057 = %1056.0;
  %1058 = cast(%1057, dtype="uint64") /* ty=Tensor[(3, 2, 16), uint64] */;
  %1059 = reshape(%1058, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint64] */;
  %1060 = @func_13937(%1059) /* ty=(Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) */;
  %1061 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1062 = @func_10358() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1063 = %1060.0;
  %1064 = %1061.0;
  %1065 = %1062.0;
  (%1057, %1063, %1064, %1065)
}

def @func_2041() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1066 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1067 = %1066.0;
  %1068 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1067, %1068)
}

def @func_13545() -> (Tensor[(3, 2, 16), float64],) {
  %1069 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1070 = %1069.3;
  (%1070,)
}

def @func_1675() -> Tensor[(3, 2, 16), float64] {
  %1071 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1071.0
}

def @func_5200() -> Tensor[(3, 2, 16), float64] {
  %1072 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1072.1
}

def @func_17221() -> Tensor[(3, 2, 16), int16] {
  %1073 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1073.4
}

def @func_4716() -> Tensor[(3, 2, 16), int16] {
  %1074 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1074.0
}

def @func_8360() -> Tensor[(3, 2, 16), float64] {
  %1075 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1075.1
}

def @func_5467(%var_5416: Tensor[(1, 9, 10), uint32], %var_5417: Tensor[(16, 9, 10), uint32], %var_5428: Tensor[(5, 210), float32], %var_5432: Tensor[(96), float64], %var_5437: Tensor[(210, 1), float64]) -> (Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) {
  %1076 = cast(%var_5416, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
  %1077 = cast(%var_5417, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %1078 = cast(%var_5432, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1079 = reshape(%1078, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1080 = @func_412(%1079) /* ty=Tensor[(3, 2, 16), int16] */;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1082 = cast(%var_5437, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1083 = reshape(%1081, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1084 = reshape(%1082, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1085 = @func_839(%1083, %1084) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1086 = cast(%1080, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1087 = reshape(%1086, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1088 = cast(%var_5428, dtype="float32") /* ty=Tensor[(5, 210), float32] */;
  %1089 = reshape(%1088, newshape=[7, 10, 15]) /* ty=Tensor[(7, 10, 15), float32] */;
  %1090 = @func_936(%1089) /* ty=Tensor[(7, 10, 15), float32] */;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %1092 = shape_of(%var_5428, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1093 = cast(%var_5428, dtype="float64") /* ty=Tensor[(5, 210), float64] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1095 = cast(%var_5417, dtype="float64") /* ty=Tensor[(16, 9, 10), float64] */;
  %1096 = sin(%1095) /* ty=Tensor[(16, 9, 10), float64] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(16, 9, 10), float64] */;
  %1098 = greater(%1076, %1077) /* ty=Tensor[(16, 9, 10), bool] */;
  %1099 = %1085.3;
  %1100 = @func_750(%1087) /* ty=Tensor[(3, 2, 16), int16] */;
  %1101 = divide(%1093, %1094) /* ty=Tensor[(5, 210), float64] */;
  %1102 = cos(%1097) /* ty=Tensor[(16, 9, 10), float64] */;
  (%1098, %1080, %var_5432, %1099, %var_5437, %1100, %1101, %1102)
}

def @func_14626() -> Tensor[(3, 2, 16), float64] {
  %1103 = @func_8880() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1103.0
}

def @func_13903() -> (Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
  %1104 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1105 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %1106 = %1104.0;
  %1107 = %1105.2;
  (%1106, %1107)
}

def @func_15130(%var_15104: Tensor[(30), int16]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
  %1108 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1109 = cast(%var_15104, dtype="int16") /* ty=Tensor[(30), int16] */;
  %1110 = reshape(%1109, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), int16] */;
  %1111 = @func_4149(%1110) /* ty=(Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) */;
  %1112 = %1108.0;
  %1113 = %1111.2;
  %1114 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1112, %1113, %var_15104, %1114)
}

def @func_17315(%var_17269: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 2, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  %1115 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %1116 = cast(%var_17269, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %1117 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(3, 9, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1120 = @func_8989() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */;
  %1121 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
  %1122 = cosh(%1115) /* ty=Tensor[(3, 9, 6), float64] */;
  %1123 = subtract(%1118, %1119) /* ty=Tensor[(3, 9, 6), float32] */;
  %1124 = %1120.0;
  %1125 = %1121.2;
  %1126 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1122, %1123, %1124, %1125, %1126)
}

def @func_1152() -> (Tensor[(3, 2, 16), int16],) {
  %1127 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1128 = %1127.1;
  (%1128,)
}

def @func_1664() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1129 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1130 = %1129.0;
  %1131 = cast(%1130, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1132 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1133 = sqrt(%1131) /* ty=Tensor[(3, 2, 16), float64] */;
  %1134 = %1132.0;
  (%1133, %1134)
}

def @func_3065() -> (Tensor[(3, 2, 16), float64],) {
  %1135 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1136 = %1135.1;
  (%1136,)
}

def @func_7185() -> Tensor[(3, 2, 16), float64] {
  %1137 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1137.1
}

def @func_3676() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) {
  %1138 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %1139 = %1138.1;
  %1140 = cast(%1139, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %1141 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  %1142 = exp(%1140) /* ty=Tensor[(3, 3, 14), float32] */;
  (%1141, %1142)
}

def @func_727(%var_712: Tensor[(1, 9, 9), float32]) -> (Tensor[(1, 9, 9), float32],) {
  %1143 = cast(%var_712, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
  %1144 = log10(%1143) /* ty=Tensor[(1, 9, 9), float32] */;
  (%1144,)
}

def @func_7139() -> Tensor[(3, 2, 16), float32] {
  %1145 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1145.0
}

def @func_16546() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1146 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %1147 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1148 = %1146.1;
  %1149 = %1147.2;
  %1150 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1148, %1149, %1150)
}

def @func_4640() -> (Tensor[(3, 2, 16), float64],) {
  %1151 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_15824() -> (Tensor[(3, 3, 14), int16],) {
  %1153 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %1154 = %1153.2;
  (%1154,)
}

def @func_6246() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %1155 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1156 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1157 = @func_1576() /* ty=Tensor[(3, 2, 16), float32] */;
  %1158 = %1155.5;
  %1159 = %1156.0;
  (%1157, %1158, %1159)
}

def @func_12572(%var_12516: Tensor[(7, 16, 9), float64], %var_12528: bool, %var_12529: Tensor[(13), bool]) -> (Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1160 = cast(%var_12516, dtype="float64") /* ty=Tensor[(7, 16, 9), float64] */;
  %1161 = asinh(%1160) /* ty=Tensor[(7, 16, 9), float64] */;
  %1162 = cast(%1161, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %1163 = cast(%var_12528, dtype="bool") /* ty=bool */;
  %1164 = cast(%var_12529, dtype="bool") /* ty=Tensor[(13), bool] */;
  %1165 = reshape(%1163, newshape=[]) /* ty=bool */;
  %1166 = reshape(%1164, newshape=[1, 13]) /* ty=Tensor[(1, 13), bool] */;
  %1167 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1168 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1169 = acos(%1162) /* ty=Tensor[(7, 16, 9), float32] */;
  %1170 = @func_7716(%1165, %1166) /* ty=Tensor[(1, 13), bool] */;
  %1171 = %1167.1;
  %1172 = %1168.0;
  (%1169, %1170, %var_12528, %var_12529, %1171, %1172)
}

def @func_4079() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1173 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1174 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1175 = %1173.0;
  %1176 = %1174.1;
  (%1175, %1176)
}

def @func_15508() -> (Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %1177 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
  %1178 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1179 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1180 = %1177.2;
  %1181 = %1178.0;
  %1182 = %1179.0;
  (%1180, %1181, %1182)
}

def @func_11053() -> Tensor[(3, 2, 16), float64] {
  @func_1675() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_3812() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1183 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1184 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1185 = %1183.1;
  %1186 = %1184.0;
  (%1185, %1186)
}

def @func_17950() -> (Tensor[(3, 2, 16), int16], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64]) {
  %1187 = cast(meta[relay.Constant][41] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %1188 = reshape(%1187, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), float32] */;
  %1189 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1190 = @func_7576() /* ty=Tensor[(3, 2, 16), int16] */;
  %1191 = @func_11347(%1188) /* ty=Tensor[(15, 5, 10), float32] */;
  %1192 = %1189.0;
  (%1190, %1191, meta[relay.Constant][41] /* ty=Tensor[(750), float32] */, %1192)
}

def @func_15364() -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %1193 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1194 = @func_13073() /* ty=Tensor[(3, 2, 16), float64] */;
  %1195 = %1193.2;
  (%1194, %1195)
}

def @func_7905() -> (Tensor[(3, 2, 16), float64], Tensor[(81), int8]) {
  %1196 = @func_3510() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1197 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
  %1198 = %1196.0;
  %1199 = %1197.0;
  (%1198, %1199)
}

def @func_1222() -> Tensor[(3, 2, 16), float64] {
  %1200 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  cos(%1201) /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_11865() -> (Tensor[(3, 2, 16), float64],) {
  %1202 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1203 = %1202.0;
  (%1203,)
}

def @func_923() -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %1204 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1205 = %1204.0;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1207 = reshape(%1206, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1208 = @func_412(%1207) /* ty=Tensor[(3, 2, 16), int16] */;
  %1209 = cast(%1205, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1210 = shape_of(%1208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%1208, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1213 = cast(%1205, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1214 = cast(meta[relay.Constant][42] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1215 = reshape(%1213, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1216 = reshape(%1214, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1217 = @func_839(%1215, %1216) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1218 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1219 = logical_and(%1211, %1212) /* ty=Tensor[(3, 2, 16), bool] */;
  %1220 = cast(%1219, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1221 = reshape(%1220, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1222 = %1217.6;
  %1223 = %1218.0;
  %1224 = @func_750(%1221) /* ty=Tensor[(3, 2, 16), int16] */;
  (%1219, %1222, meta[relay.Constant][42] /* ty=Tensor[(210), float64] */, %1223, %1224)
}

def @func_7293() -> Tensor[(3, 2, 16), float32] {
  %1225 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %1225.0
}

def @func_5355(%var_5338: Tensor[(60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) {
  %1226 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1227 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1228 = @func_1363() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %1229 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %1230 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %1231 = cast(%var_5338, dtype="int16") /* ty=Tensor[(60), int16] */;
  %1232 = cast(%var_5338, dtype="int16") /* ty=Tensor[(60), int16] */;
  %1233 = reshape(%1231, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), int16] */;
  %1234 = reshape(%1232, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), int16] */;
  %1235 = @func_1926(%1233, %1234) /* ty=(Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) */;
  %1236 = %1226.0;
  %1237 = %1227.1;
  %1238 = %1228.0;
  %1239 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %1240 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %1241 = %1229.0;
  %1242 = %1230.1;
  %1243 = %1235.1;
  (%1236, %1237, %1238, %1239, %1240, %1241, %1242, %1243, %var_5338)
}

def @func_7075(%var_7011: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) {
  %1244 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1245 = cast(%var_7011, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %1246 = erf(%1245) /* ty=Tensor[(81, 1), float32] */;
  %1247 = cast(%var_7011, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %1248 = reshape(%1247, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
  %1249 = @func_727(%1248) /* ty=(Tensor[(1, 9, 9), float32],) */;
  %1250 = %1249.0;
  %1251 = cast(%1250, dtype="uint32") /* ty=Tensor[(1, 9, 9), uint32] */;
  %1252 = shape_of(%1246, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1253 = cast(%1246, dtype="uint32") /* ty=Tensor[(81, 1), uint32] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1255 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1256 = cast(%1246, dtype="bool") /* ty=Tensor[(81, 1), bool] */;
  %1257 = shape_of(%1250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1258 = cast(%1250, dtype="bool") /* ty=Tensor[(1, 9, 9), bool] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1260 = @func_2640() /* ty=Tensor[(3, 2, 16), float64] */;
  %1261 = %1244.1;
  %1262 = right_shift(%1253, %1254) /* ty=Tensor[(81, ?), uint32] */;
  %1263 = %1255.1;
  %1264 = greater(%1258, %1259) /* ty=Tensor[(?, 9, 9), bool] */;
  (%1260, %1261, %1262, %1263, %1264)
}

def @func_12204(%var_12161: Tensor[(12, 13, 8), uint32], %var_12162: Tensor[(12, 13, 8), uint32], %var_12174: Tensor[(210), float64]) -> (Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %1265 = cast(%var_12162, dtype="uint32") /* ty=Tensor[(12, 13, 8), uint32] */;
  %1266 = shape_of(%var_12161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%var_12161, dtype="uint32") /* ty=Tensor[(12, 13, 8), uint32] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1269 = cast(%var_12174, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1270 = reshape(%1269, newshape=[3, 14, 5]) /* ty=Tensor[(3, 14, 5), float64] */;
  %1271 = @func_586(%1270) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) */;
  %1272 = bitwise_and(%1267, %1268) /* ty=Tensor[(12, 13, 8), uint32] */;
  %1273 = %1271.0;
  %1274 = @func_10086() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1272, %1273, %var_12174, %1274)
}

def @func_750(%var_743: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
  %1275 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1276 = %1275.0;
  %1277 = cast(%var_743, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %1278 = shape_of(%1276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1279 = cast(%1276, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%1279, %1280) /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_6436(%var_6433: Tensor[(3, 5, 5), float32]) -> Tensor[(3, 5, 5), float32] {
  %1281 = cast(%var_6433, dtype="float32") /* ty=Tensor[(3, 5, 5), float32] */;
  erf(%1281) /* ty=Tensor[(3, 5, 5), float32] */
}

def @func_10358() -> (Tensor[(3, 2, 16), float64],) {
  %1282 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1283 = %1282.0;
  (%1283,)
}

def @func_14304(%var_14298: Tensor[(1092), int64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1092), int64]) {
  %1284 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1285 = cast(%var_14298, dtype="int64") /* ty=Tensor[(1092), int64] */;
  %1286 = cast(%var_14298, dtype="int64") /* ty=Tensor[(1092), int64] */;
  %1287 = reshape(%1285, newshape=[13, 7, 12]) /* ty=Tensor[(13, 7, 12), int64] */;
  %1288 = reshape(%1286, newshape=[13, 7, 12]) /* ty=Tensor[(13, 7, 12), int64] */;
  %1289 = @func_1992(%1287, %1288) /* ty=(Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1290 = %1284.0;
  %1291 = %1289.1;
  (%1290, %1291, %var_14298)
}

def @func_7933() -> (Tensor[(210), float64],) {
  %1292 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1293 = %1292.2;
  (%1293,)
}

def @func_14609() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %1294 = @func_13202() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1295 = @func_11736() /* ty=(Tensor[(3, 2, 16), float32],) */;
  %1296 = @func_8209() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1297 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
  %1298 = %1294.0;
  %1299 = %1295.0;
  %1300 = %1296.1;
  (%1297, %1298, %1299, %1300)
}

def @func_9261() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1301 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1302 = %1301.0;
  %1303 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  %1304 = @func_8279() /* ty=Tensor[(3, 2, 16), float64] */;
  %1305 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1302, %1303, %1304, %1305)
}

def @func_14002() -> (Tensor[(3, 2, 16), float64],) {
  %1306 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1306,)
}

def @func_13110(%var_13095: Tensor[(216), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(216), float64]) {
  %1307 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %1308 = cast(%var_13095, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1309 = reshape(%1308, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
  %1310 = @func_8033(%1309) /* ty=(Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1311 = %1307.2;
  %1312 = %1310.2;
  (%1311, %1312, %var_13095)
}

def @func_7970() -> Tensor[(210), float64] {
  %1313 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1313.2
}

def @func_9428() -> (Tensor[(3, 2, 16), float64],) {
  %1314 = @func_9082() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1314,)
}

def @func_6030() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %1315 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1316 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1317 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1318 = %1315.2;
  %1319 = %1316.0;
  %1320 = %1317.0;
  (%1318, %1319, %1320)
}

def @func_10222() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %1321 = @func_7933() /* ty=(Tensor[(210), float64],) */;
  %1322 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  %1323 = @func_7293() /* ty=Tensor[(3, 2, 16), float32] */;
  %1324 = %1321.0;
  %1325 = @func_6574() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1322, %1323, %1324, %1325)
}

def @func_9585() -> (Tensor[(3, 2, 16), float64],) {
  %1326 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1327 = %1326.0;
  (%1327,)
}

def @func_17139() -> (Tensor[(3, 2, 16), int16],) {
  %1328 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  (%1328,)
}

def @func_11848() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1329 = @func_1937() /* ty=Tensor[(3, 2, 16), float64] */;
  %1330 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1329, %1330)
}

def @func_13515(%var_13417: Tensor[(10, 13, 16), float32], %var_13423: Tensor[(10, 13, 16), float32], %var_13497: Tensor[(81), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(10, 13, 16), float64], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(10, 13, 16), uint64], Tensor[(81), float32], Tensor[(81), float32]) {
  %1331 = cast(%var_13423, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %1332 = shape_of(%var_13417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1333 = cast(%var_13417, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1335 = @func_5404() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1336 = cast(%var_13417, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %1337 = acos(%1336) /* ty=Tensor[(10, 13, 16), float32] */;
  %1338 = cast(%1337, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %1339 = cast(meta[relay.Constant][43] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %1340 = reshape(%1339, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float64] */;
  %1341 = @func_5115(%1340) /* ty=(Tensor[(12, 14, 15), float64],) */;
  %1342 = @func_3676() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) */;
  %1343 = @func_10431() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1344 = cast(%var_13417, dtype="uint64") /* ty=Tensor[(10, 13, 16), uint64] */;
  %1345 = shape_of(%1337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1346 = cast(%1337, dtype="uint64") /* ty=Tensor[(10, 13, 16), uint64] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1348 = cast(%var_13497, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1349 = reshape(%1348, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %1350 = @func_8682(%1349) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) */;
  %1351 = mod(%1333, %1334) /* ty=Tensor[(10, 13, 16), float32] */;
  %1352 = %1335.0;
  %1353 = asin(%1338) /* ty=Tensor[(10, 13, 16), float64] */;
  %1354 = %1341.0;
  %1355 = %1342.1;
  %1356 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
  %1357 = %1343.0;
  %1358 = minimum(%1346, %1347) /* ty=Tensor[(10, 13, 16), uint64] */;
  %1359 = %1350.2;
  (%1351, %1352, %1353, %1354, meta[relay.Constant][43] /* ty=Tensor[(2520), float64] */, %1355, %1356, %1357, %1358, %1359, %var_13497)
}

def @func_3796() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1360 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1361 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1362 = %1360.4;
  %1363 = %1361.1;
  (%1362, %1363)
}

def @func_14069() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1364 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1365 = @func_5637() /* ty=Tensor[(3, 2, 16), float64] */;
  %1366 = %1364.4;
  (%1365, %1366)
}

def @func_1328() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %1367 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %1368 = %1367.0;
  %1369 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1368, %1369)
}

def @func_15263() -> Tensor[(3, 2, 16), float64] {
  %1370 = @func_10726() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1370.1
}

def @func_16730(%var_16719: Tensor[(1, 60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(60), int16], Tensor[(1, 60), int16]) {
  %1371 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1372 = cast(%var_16719, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
  %1373 = reshape(%1372, newshape=[60]) /* ty=Tensor[(60), int16] */;
  %1374 = @func_5355(%1373) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) */;
  %1375 = %1371.0;
  %1376 = %1374.8;
  (%1375, %1376, %var_16719)
}

def @func_4070() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1377 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1378 = %1377.0;
  %1379 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1378, %1379)
}

def @func_12881() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %1380 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1381 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1382 = reshape(%1380, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1383 = reshape(%1381, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1384 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  %1385 = @func_7849(%1382, %1383) /* ty=Tensor[(12, 2, 5), float64] */;
  (%1384, %1385, meta[relay.Constant][44] /* ty=Tensor[(120), uint16] */)
}

def @func_11347(%var_11343: Tensor[(15, 5, 10), float32]) -> Tensor[(15, 5, 10), float32] {
  %1386 = cast(%var_11343, dtype="float32") /* ty=Tensor[(15, 5, 10), float32] */;
  cos(%1386) /* ty=Tensor[(15, 5, 10), float32] */
}

def @func_13685() -> (Tensor[(3, 2, 16), float64],) {
  %1387 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1388 = %1387.0;
  (%1388,)
}

def @func_16044() -> (Tensor[(3, 3, 14), float32],) {
  %1389 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %1390 = %1389.1;
  (%1390,)
}

def @func_8388() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1391 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1392 = %1391.0;
  %1393 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1392, %1393)
}

def @func_2101() -> Tensor[(3, 2, 16), int16] {
  %1394 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1394.0
}

def @func_15159() -> (Tensor[(3, 2, 16), float64],) {
  %1395 = @func_10358() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1396 = %1395.0;
  (%1396,)
}

def @func_11798() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1397 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  %1398 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1397, %1398)
}

def @func_13370() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %1399 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1400 = @func_12700() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1401 = @func_10922() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1402 = %1399.1;
  %1403 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
  %1404 = %1400.0;
  %1405 = %1401.1;
  %1406 = @func_10044() /* ty=Tensor[(3, 2, 16), float32] */;
  (%1402, %1403, %1404, %1405, %1406)
}

def @func_5115(%var_5107: Tensor[(12, 14, 15), float64]) -> (Tensor[(12, 14, 15), float64],) {
  %1407 = cast(%var_5107, dtype="float64") /* ty=Tensor[(12, 14, 15), float64] */;
  %1408 = log(%1407) /* ty=Tensor[(12, 14, 15), float64] */;
  (%1408,)
}

def @func_17850() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1409 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1410 = @func_16696() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1411 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %1412 = %1409.0;
  %1413 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
  %1414 = %1410.2;
  (%1411, %1412, %1413, %1414)
}

def @func_11576() -> Tensor[(3, 2, 16), float64] {
  %1415 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1415.1
}

def @func_12377(%var_12363: Tensor[(2, 6, 6), float64], %var_12364: Tensor[(2, 6, 6), float64], %var_12371: Tensor[(2, 6, 6), float64]) -> (Tensor[(2, 6, 6), float64], Tensor[(2, 6, 6), float32]) {
  %1416 = cast(%var_12364, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %1417 = shape_of(%var_12363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1418 = cast(%var_12363, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %1419 = dyn.reshape(%1416, %1417, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1420 = cast(%var_12371, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %1421 = shape_of(%var_12363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1422 = cast(%var_12363, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %1423 = dyn.reshape(%1420, %1421, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1424 = floor_divide(%1418, %1419) /* ty=Tensor[(2, 6, 6), float64] */;
  %1425 = multiply(%1422, %1423) /* ty=Tensor[(2, 6, 6), float32] */;
  (%1424, %1425)
}

def @func_16696() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1426 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1427 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1428 = %1426.0;
  %1429 = %1427.0;
  %1430 = @func_13714() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1428, %1429, %1430)
}

def @func_4940() -> (Tensor[(3, 2, 16), float64],) {
  %1431 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1431,)
}

def @func_16095() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1432 = @func_15237() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1433 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1434 = %1432.0;
  %1435 = %1433.0;
  (%1434, %1435)
}

def @func_17465() -> Tensor[(3, 2, 16), float64] {
  %1436 = @func_10922() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1436.0
}

def @func_13045() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1437 = @func_6146() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1438 = @func_11177() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1439 = @func_8164() /* ty=Tensor[(3, 2, 16), float64] */;
  %1440 = %1437.0;
  %1441 = %1438.0;
  (%1439, %1440, %1441)
}

def @func_196() -> (Tensor[(3, 2, 16), float64],) {
  %1442 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1443 = asin(%1442) /* ty=Tensor[(3, 2, 16), float64] */;
  (%1443,)
}

def @func_6103() -> (Tensor[(3, 2, 16), float64],) {
  %1444 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1444,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10431() -> (Tensor[(3, 2, 16), float64],) {
  %0 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_2438() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %5 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %2 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %3 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
    %4 = %2.1;
    (%3, %4)
  };
  %5() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_17663() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_17661() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_13371() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %14 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
    %6 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %7 = @func_12700() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %8 = @func_10922() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %9 = %6.1;
    %10 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
    %11 = %7.0;
    %12 = %8.1;
    %13 = @func_10044() /* ty=Tensor[(3, 2, 16), float32] */;
    (%9, %10, %11, %12, %13)
  };
  %14() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */
}

def @func_1866() -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %30 = fn () -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
    %15 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 2, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%15, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %21 = reshape(%20, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %22 = cast(%15, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %23 = reshape(%22, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %24 = @func_494(%23) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
    %25 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %26 = greater(%18, %19) /* ty=Tensor[(3, 2, 16), bool] */;
    %27 = @func_412(%21) /* ty=Tensor[(3, 2, 16), int16] */;
    %28 = %24.0;
    %29 = %25.2;
    (%26, %27, %28, %29)
  };
  %30() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_16044() -> (Tensor[(3, 3, 14), float32],) {
  %31 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %32 = %31.1;
  (%32,)
}

def @func_6548() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %33 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %34 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %35 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %36 = @func_1629() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %37 = %33.0;
  %38 = %34.1;
  %39 = %35.1;
  %40 = %36.0;
  (%37, %38, %39, %40)
}

def @func_13912() -> Tensor[(210), float64] {
  %42 = fn () -> Tensor[(210), float64] {
    %41 = @func_13744() /* ty=(Tensor[(210), float64],) */;
    %41.0
  };
  %42() /* ty=Tensor[(210), float64] */
}

def @func_7576() -> Tensor[(3, 2, 16), int16] {
  %43 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %43.0
}

def @func_13744() -> (Tensor[(210), float64],) {
  %44 = @func_1363() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %45 = %44.0;
  (%45,)
}

def @func_16630() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %50 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %46 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %47 = @func_6791() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) */;
    %48 = %46.0;
    %49 = %47.0;
    (%48, %49)
  };
  %50() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_17360() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_17358() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_17438() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) {
  %59 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) {
    %51 = @func_16866() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %52 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %54 = reshape(%53, newshape=[6, 10, 2]) /* ty=Tensor[(6, 10, 2), uint32] */;
    %55 = @func_11328(%54) /* ty=(Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */;
    %56 = %51.1;
    %57 = %52.1;
    %58 = %55.1;
    (%56, %57, %58, meta[relay.Constant][1] /* ty=Tensor[(120), uint32] */)
  };
  %59() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) */
}

def @func_196() -> (Tensor[(3, 2, 16), float64],) {
  %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %61 = asin(%60) /* ty=Tensor[(3, 2, 16), float64] */;
  (%61,)
}

def @func_14139() -> (Tensor[(3, 2, 16), float64],) {
  @func_14137() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_3725() -> Tensor[(3, 2, 16), float64] {
  @func_3723() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_2101() -> Tensor[(3, 2, 16), int16] {
  %62 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %62.0
}

def @func_9428() -> (Tensor[(3, 2, 16), float64],) {
  %63 = @func_9082() /* ty=Tensor[(3, 2, 16), float64] */;
  (%63,)
}

def @func_11947(%var_11946: Tensor[(108), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
  %68 = fn (%var_11930: Tensor[(108), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) {
    %64 = cast(%var_11930, dtype="float32") /* ty=Tensor[(108), float32] */;
    %65 = reshape(%64, newshape=[4, 3, 9]) /* ty=Tensor[(4, 3, 9), float32] */;
    %66 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
    %67 = @func_7360(%65) /* ty=Tensor[(4, 3, 9), float32] */;
    (%66, %67, %var_11930)
  };
  %68(%var_11946) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(4, 3, 9), float32], Tensor[(108), float32]) */
}

def @func_10058() -> (Tensor[(3, 2, 16), float64],) {
  @func_10056() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_11053() -> Tensor[(3, 2, 16), float64] {
  @func_1675() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5695() -> (Tensor[(81), int8], Tensor[(3, 2, 16), float64]) {
  %69 = @func_4902() /* ty=(Tensor[(81), int8],) */;
  %70 = %69.0;
  %71 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%70, %71)
}

def @func_17919() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_17917() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4987() -> (Tensor[(3, 2, 16), float64],) {
  %72 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %73 = %72.1;
  (%73,)
}

def @func_9084() -> Tensor[(3, 2, 16), float64] {
  @func_9082() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_3797() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %78 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
    %74 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %75 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %76 = %74.4;
    %77 = %75.1;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_14530() -> (Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
  %84 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
    %79 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
    %80 = @func_4762() /* ty=Tensor[(81), bool] */;
    %81 = cast(%80, dtype="float32") /* ty=Tensor[(81), float32] */;
    %82 = %79.1;
    %83 = asin(%81) /* ty=Tensor[(81), float32] */;
    (%82, %83)
  };
  %84() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */
}

def @func_14577() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %89 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %85 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %86 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
    %87 = %85.0;
    %88 = %86.3;
    (%87, %88)
  };
  %89() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4941() -> (Tensor[(3, 2, 16), float64],) {
  %91 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %90 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%90,)
  };
  %91() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_2142(%var_2141: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) {
  %100 = fn (%var_2114: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) {
    %92 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
    %93 = cast(%var_2114, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(%92, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %97 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %98 = less_equal(%95, %96) /* ty=Tensor[(3, 2, 16), bool] */;
    %99 = %97.0;
    (%98, %99)
  };
  %100(%var_2141) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */
}

def @func_3146() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %101 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %102 = %101.1;
  %103 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  (%102, %103)
}

def @func_7675() -> Tensor[(3, 2, 16), int16] {
  @func_7673() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_5590() -> (Tensor[(3, 2, 16), float64],) {
  @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_8566(%var_8553: Tensor[(8, 6, 12), float32], %var_8554: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), int64],) {
  %104 = cast(%var_8554, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %105 = shape_of(%var_8553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_8553, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %108 = mod(%106, %107) /* ty=Tensor[(8, 6, 12), float32] */;
  %109 = cast(%108, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %110 = shape_of(%var_8553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%var_8553, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %113 = bitwise_xor(%111, %112) /* ty=Tensor[(8, 6, 12), int64] */;
  (%113,)
}

def @func_10924() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_10922() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_11576() -> Tensor[(3, 2, 16), float64] {
  %114 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %114.1
}

def @func_6885() -> (Tensor[(3, 2, 16), int16],) {
  %117 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %115 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
    %116 = %115.4;
    (%116,)
  };
  %117() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_7542() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_7540() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_6187() -> (Tensor[(3, 2, 16), float64],) {
  @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_7360(%var_7356: Tensor[(4, 3, 9), float32]) -> Tensor[(4, 3, 9), float32] {
  %118 = cast(%var_7356, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  atanh(%118) /* ty=Tensor[(4, 3, 9), float32] */
}

def @func_12208(%var_12205: Tensor[(12, 13, 8), uint32], %var_12206: Tensor[(12, 13, 8), uint32], %var_12207: Tensor[(210), float64]) -> (Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %129 = fn (%var_12161: Tensor[(12, 13, 8), uint32], %var_12162: Tensor[(12, 13, 8), uint32], %var_12174: Tensor[(210), float64]) -> (Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
    %119 = cast(%var_12162, dtype="uint32") /* ty=Tensor[(12, 13, 8), uint32] */;
    %120 = shape_of(%var_12161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(%var_12161, dtype="uint32") /* ty=Tensor[(12, 13, 8), uint32] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %123 = cast(%var_12174, dtype="float64") /* ty=Tensor[(210), float64] */;
    %124 = reshape(%123, newshape=[3, 14, 5]) /* ty=Tensor[(3, 14, 5), float64] */;
    %125 = @func_586(%124) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) */;
    %126 = bitwise_and(%121, %122) /* ty=Tensor[(12, 13, 8), uint32] */;
    %127 = %125.0;
    %128 = @func_10086() /* ty=Tensor[(3, 2, 16), float64] */;
    (%126, %127, %var_12174, %128)
  };
  %129(%var_12205, %var_12206, %var_12207) /* ty=(Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_16096() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %134 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %130 = @func_15237() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %131 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %132 = %130.0;
    %133 = %131.0;
    (%132, %133)
  };
  %134() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_10222() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %135 = @func_7933() /* ty=(Tensor[(210), float64],) */;
  %136 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
  %137 = @func_7293() /* ty=Tensor[(3, 2, 16), float32] */;
  %138 = %135.0;
  %139 = @func_6574() /* ty=Tensor[(3, 2, 16), float64] */;
  (%136, %137, %138, %139)
}

def @func_10806() -> (Tensor[(3, 2, 16), float64],) {
  %140 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %141 = %140.4;
  (%141,)
}

def @func_7972() -> Tensor[(210), float64] {
  @func_7970() /* ty=Tensor[(210), float64] */
}

def @func_16548() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_16546() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_14455(%var_14454: Tensor[(14, 8, 7), uint64]) -> (Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %158 = fn (%var_14372: Tensor[(14, 8, 7), uint64]) -> (Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %142 = cast(meta[relay.Constant][3] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %143 = reshape(%142, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %144 = @func_494(%143) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
    %145 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 8, 7), uint64] */, dtype="uint64") /* ty=Tensor[(14, 8, 7), uint64] */;
    %146 = shape_of(%var_14372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%var_14372, dtype="uint64") /* ty=Tensor[(14, 8, 7), uint64] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %149 = multiply(%147, %148) /* ty=Tensor[(14, 8, 7), uint64] */;
    %150 = cast(%149, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
    %151 = shape_of(%var_14372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(%var_14372, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %154 = %144.0;
    %155 = greater_equal(%152, %153) /* ty=Tensor[(14, 8, 7), bool] */;
    %156 = @func_5637() /* ty=Tensor[(3, 2, 16), float64] */;
    %157 = @func_12968() /* ty=Tensor[(3, 2, 16), float64] */;
    (%154, meta[relay.Constant][3] /* ty=Tensor[(96), float64] */, %155, %156, %157)
  };
  %158(%var_14454) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_17770(%var_17769: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64]) {
  %167 = fn (%var_17744: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64]) {
    %159 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %160 = cast(%var_17744, dtype="float64") /* ty=Tensor[(462), float64] */;
    %161 = reshape(%160, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %162 = @func_16032(%161) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %163 = @func_17437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(120), uint32]) */;
    %164 = %159.0;
    %165 = %162.0;
    %166 = %163.1;
    (%164, %165, %var_17744, %166)
  };
  %167(%var_17769) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7141() -> Tensor[(3, 2, 16), float32] {
  @func_7139() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_12577(%var_12574: Tensor[(7, 16, 9), float64], %var_12575: bool, %var_12576: Tensor[(13), bool]) -> (Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_12572(%var_12574, %var_12575, %var_12576) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4080() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %172 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %168 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %169 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %170 = %168.0;
    %171 = %169.1;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_5945(%var_5944: Tensor[(3, 3, 14), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) {
  %183 = fn (%var_5925: Tensor[(3, 3, 14), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) {
    %173 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %174 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
    %175 = %174.2;
    %176 = cast(%var_5925, dtype="bool") /* ty=Tensor[(3, 3, 14), bool] */;
    %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%175, dtype="bool") /* ty=Tensor[(3, 3, 14), bool] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %180 = %173.0;
    %181 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
    %182 = greater(%178, %179) /* ty=Tensor[(3, 3, 14), bool] */;
    (%180, %181, %182)
  };
  %183(%var_5944) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) */
}

def @func_7243() -> (Tensor[(3, 2, 16), float64],) {
  %184 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %185 = %184.0;
  (%185,)
}

def @func_17140() -> (Tensor[(3, 2, 16), int16],) {
  %187 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %186 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
    (%186,)
  };
  %187() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_7578() -> Tensor[(3, 2, 16), int16] {
  @func_7576() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_9626() -> (Tensor[(3, 2, 16), float64],) {
  @func_9624() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_16369() -> (Tensor[(3, 2, 16), float64],) {
  @func_16367() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_7935() -> (Tensor[(210), float64],) {
  @func_7933() /* ty=(Tensor[(210), float64],) */
}

def @func_13937(%var_13926: Tensor[(16, 1, 6), uint64]) -> (Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) {
  %188 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %189 = cast(%var_13926, dtype="uint64") /* ty=Tensor[(16, 1, 6), uint64] */;
  %190 = @func_5576() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %191 = add(%188, %189) /* ty=Tensor[(16, 1, 6), uint64] */;
  %192 = %190.0;
  (%191, %192)
}

def @func_12572(%var_12516: Tensor[(7, 16, 9), float64], %var_12528: bool, %var_12529: Tensor[(13), bool]) -> (Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %193 = cast(%var_12516, dtype="float64") /* ty=Tensor[(7, 16, 9), float64] */;
  %194 = asinh(%193) /* ty=Tensor[(7, 16, 9), float64] */;
  %195 = cast(%194, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %196 = cast(%var_12528, dtype="bool") /* ty=bool */;
  %197 = cast(%var_12529, dtype="bool") /* ty=Tensor[(13), bool] */;
  %198 = reshape(%196, newshape=[]) /* ty=bool */;
  %199 = reshape(%197, newshape=[1, 13]) /* ty=Tensor[(1, 13), bool] */;
  %200 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %201 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %202 = acos(%195) /* ty=Tensor[(7, 16, 9), float32] */;
  %203 = @func_7716(%198, %199) /* ty=Tensor[(1, 13), bool] */;
  %204 = %200.1;
  %205 = %201.0;
  (%202, %203, %var_12528, %var_12529, %204, %205)
}

def @func_8074() -> Tensor[(3, 2, 16), float64] {
  %207 = fn () -> Tensor[(3, 2, 16), float64] {
    %206 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %206.0
  };
  %207() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9037() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  @func_9035() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) */
}

def @func_4585() -> Tensor[(3, 2, 16), float64] {
  @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_12933() -> (Tensor[(3, 2, 16), int16], Tensor[(9, 3, 8), bool], Tensor[(216), float64]) {
  %214 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(9, 3, 8), bool], Tensor[(216), float64]) {
    %208 = @func_12410() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %210 = reshape(%209, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
    %211 = @func_8033(%210) /* ty=(Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %212 = %208.0;
    %213 = %211.0;
    (%212, %213, meta[relay.Constant][6] /* ty=Tensor[(216), float64] */)
  };
  %214() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(9, 3, 8), bool], Tensor[(216), float64]) */
}

def @func_16034(%var_16033: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %237 = fn (%var_15977: Tensor[(462), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %215 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %216 = @func_9585() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %217 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
    %218 = cast(%217, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %219 = reshape(%218, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %220 = @func_2140(%219) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
    %221 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %222 = @func_15790() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %223 = cast(%var_15977, dtype="float64") /* ty=Tensor[(462), float64] */;
    %224 = reshape(%223, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), float64] */;
    %225 = @func_3363(%224) /* ty=(Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) */;
    %226 = @func_15661() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %227 = %215.0;
    %228 = %216.0;
    %229 = %220.0;
    %230 = %221.1;
    %231 = %222.1;
    %232 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
    %233 = %225.0;
    %234 = @func_3723() /* ty=Tensor[(3, 2, 16), float64] */;
    %235 = %226.0;
    %236 = @func_8073() /* ty=Tensor[(3, 2, 16), float64] */;
    (%217, %227, %228, %229, %230, %231, %232, %233, %var_15977, %234, %235, %236)
  };
  %237(%var_16033) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(6, 11, 7), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4903() -> (Tensor[(81), int8],) {
  %245 = fn () -> (Tensor[(81), int8],) {
    %238 = @func_4762() /* ty=Tensor[(81), bool] */;
    %239 = @func_4762() /* ty=Tensor[(81), bool] */;
    %240 = cast(%239, dtype="int8") /* ty=Tensor[(81), int8] */;
    %241 = shape_of(%238, dtype="int32") /* ty=Tensor[(1), int32] */;
    %242 = cast(%238, dtype="int8") /* ty=Tensor[(81), int8] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?), int8] */;
    %244 = maximum(%242, %243) /* ty=Tensor[(81), int8] */;
    (%244,)
  };
  %245() /* ty=(Tensor[(81), int8],) */
}

def @func_4070() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %246 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %247 = %246.0;
  %248 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%247, %248)
}

def @func_15382() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %252 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %249 = @func_14556() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %250 = %249.0;
    %251 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
    (%250, %251)
  };
  %252() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7615() -> (Tensor[(3, 2, 16), float64],) {
  @func_7613() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_9430() -> (Tensor[(3, 2, 16), float64],) {
  @func_9428() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_5201() -> Tensor[(3, 2, 16), float64] {
  %254 = fn () -> Tensor[(3, 2, 16), float64] {
    %253 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %253.1
  };
  %254() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_1269() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %255 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %256 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %257 = %255.2;
  %258 = %256.0;
  (%257, %258)
}

def @func_17661() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %259 = @func_12947() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %260 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %261 = @func_14609() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %262 = %259.0;
  %263 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %264 = %260.0;
  %265 = %261.1;
  (%262, %263, %264, %265)
}

def @func_5161() -> Tensor[(3, 2, 16), float64] {
  %266 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %266.0
}

def @func_6030() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %267 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %268 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %269 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %270 = %267.2;
  %271 = %268.0;
  %272 = %269.0;
  (%270, %271, %272)
}

def @func_8389() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %276 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %273 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %274 = %273.0;
    %275 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
    (%274, %275)
  };
  %276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_12326() -> (Tensor[(3, 2, 16), int16], Tensor[(1, 9, 9), float32]) {
  %280 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(1, 9, 9), float32]) {
    %277 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %278 = @func_4716() /* ty=Tensor[(3, 2, 16), int16] */;
    %279 = %277.0;
    (%278, %279)
  };
  %280() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(1, 9, 9), float32]) */
}

def @func_16949() -> (Tensor[(3, 2, 16), float64],) {
  %281 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %282 = %281.0;
  (%282,)
}

def @func_396() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_8541(%var_8540: Tensor[(90), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) {
  %299 = fn (%var_8492: Tensor[(90), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) {
    %283 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %284 = cast(%var_8492, dtype="uint32") /* ty=Tensor[(90), uint32] */;
    %285 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), uint32] */, dtype="uint32") /* ty=Tensor[(1440), uint32] */;
    %286 = cast(meta[relay.Constant][8] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
    %287 = %283.1;
    %288 = cast(%287, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %289 = cast(meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %290 = reshape(%284, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint32] */;
    %291 = reshape(%285, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), uint32] */;
    %292 = reshape(%286, newshape=[5, 210]) /* ty=Tensor[(5, 210), float32] */;
    %293 = reshape(%288, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %294 = reshape(%289, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
    %295 = @func_5467(%290, %291, %292, %293, %294) /* ty=(Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) */;
    %296 = @func_3890() /* ty=(Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) */;
    %297 = %295.0;
    %298 = %296.0;
    (%287, %297, %var_8492, meta[relay.Constant][7] /* ty=Tensor[(1440), uint32] */, meta[relay.Constant][8] /* ty=Tensor[(1050), float32] */, meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, %298)
  };
  %299(%var_8540) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) */
}

def @func_11780(%var_11770: Tensor[(4, 14, 9), float64]) -> (Tensor[(81), bool], Tensor[(4, 14, 9), uint64]) {
  %300 = cast(%var_11770, dtype="float64") /* ty=Tensor[(4, 14, 9), float64] */;
  %301 = atanh(%300) /* ty=Tensor[(4, 14, 9), float64] */;
  %302 = cast(%var_11770, dtype="uint64") /* ty=Tensor[(4, 14, 9), uint64] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="uint64") /* ty=Tensor[(4, 14, 9), uint64] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %306 = @func_4762() /* ty=Tensor[(81), bool] */;
  %307 = minimum(%304, %305) /* ty=Tensor[(4, 14, 9), uint64] */;
  (%306, %307)
}

def @func_4235() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1, 81), float32]) {
  %318 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1, 81), float32]) {
    %308 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %309 = %308.1;
    %310 = cast(%309, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %311 = reshape(%310, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %312 = @func_2140(%311) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
    %313 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 81), float32] */, dtype="float32") /* ty=Tensor[(1, 81), float32] */;
    %314 = reshape(%313, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
    %315 = @func_3300(%314) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %316 = %312.1;
    %317 = %315.4;
    (%309, %316, %317, meta[relay.Constant][10] /* ty=Tensor[(1, 81), float32] */)
  };
  %318() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1, 81), float32]) */
}

def @func_752(%var_751: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
  %325 = fn (%var_743: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
    %319 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %320 = %319.0;
    %321 = cast(%var_743, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
    %323 = cast(%320, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%323, %324) /* ty=Tensor[(3, 2, 16), int16] */
  };
  %325(%var_751) /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_16046() -> (Tensor[(3, 3, 14), float32],) {
  @func_16044() /* ty=(Tensor[(3, 3, 14), float32],) */
}

def @func_5474(%var_5469: Tensor[(1, 9, 10), uint32], %var_5470: Tensor[(16, 9, 10), uint32], %var_5471: Tensor[(5, 210), float32], %var_5472: Tensor[(96), float64], %var_5473: Tensor[(210, 1), float64]) -> (Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) {
  @func_5467(%var_5469, %var_5470, %var_5471, %var_5472, %var_5473) /* ty=(Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) */
}

def @func_5115(%var_5107: Tensor[(12, 14, 15), float64]) -> (Tensor[(12, 14, 15), float64],) {
  %326 = cast(%var_5107, dtype="float64") /* ty=Tensor[(12, 14, 15), float64] */;
  %327 = log(%326) /* ty=Tensor[(12, 14, 15), float64] */;
  (%327,)
}

def @func_7295() -> Tensor[(3, 2, 16), float32] {
  @func_7293() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_5798() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %337 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
    %328 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %329 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %330 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
    %331 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
    %332 = %328.0;
    %333 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
    %334 = %329.0;
    %335 = %330.0;
    %336 = %331.1;
    (%332, %333, %334, %335, %336)
  };
  %337() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_635() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %346 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %338 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %339 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %340 = %339.1;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %342 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %343 = %338.0;
    %344 = acosh(%341) /* ty=Tensor[(3, 2, 16), float64] */;
    %345 = %342.0;
    (%343, %344, %345)
  };
  %346() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4072() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_11347(%var_11343: Tensor[(15, 5, 10), float32]) -> Tensor[(15, 5, 10), float32] {
  %347 = cast(%var_11343, dtype="float32") /* ty=Tensor[(15, 5, 10), float32] */;
  cos(%347) /* ty=Tensor[(15, 5, 10), float32] */
}

def @func_11649() -> (Tensor[(3, 2, 16), float64],) {
  %348 = @func_3723() /* ty=Tensor[(3, 2, 16), float64] */;
  (%348,)
}

def @func_11259() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) {
  %356 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) {
    %349 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %350 = cast(meta[relay.Constant][11] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
    %351 = reshape(%350, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
    %352 = @func_1409(%351) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
    %353 = %349.1;
    %354 = %352.0;
    %355 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
    (%353, %354, meta[relay.Constant][11] /* ty=Tensor[(54, 10), uint32] */, %355)
  };
  %356() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) */
}

def @func_14069() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %357 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %358 = @func_5637() /* ty=Tensor[(3, 2, 16), float64] */;
  %359 = %357.4;
  (%358, %359)
}

def @func_14771() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_14769() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_3723() -> Tensor[(3, 2, 16), float64] {
  %360 = @func_3124() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %360.2
}

def @func_7245() -> (Tensor[(3, 2, 16), float64],) {
  @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_4587() -> Tensor[(3, 2, 16), float64] {
  @func_4585() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_15826() -> (Tensor[(3, 3, 14), int16],) {
  @func_15824() /* ty=(Tensor[(3, 3, 14), int16],) */
}

def @func_10077() -> Tensor[(3, 2, 16), float64] {
  %361 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_6574() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %361() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_15238() -> (Tensor[(3, 2, 16), float64],) {
  %363 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %362 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
    (%362,)
  };
  %363() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_17358() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %364 = @func_9261() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %365 = @func_15237() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %366 = %364.1;
  %367 = %365.0;
  (%366, %367)
}

def @func_16889() -> Tensor[(3, 2, 16), float64] {
  %368 = @func_8989() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */;
  %368.0
}

def @func_1926(%var_1916: Tensor[(2, 2, 15), int16], %var_1917: Tensor[(2, 2, 15), int16]) -> (Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) {
  %369 = cast(%var_1917, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %370 = shape_of(%var_1916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_1916, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %373 = @func_1664() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %374 = logical_xor(%371, %372) /* ty=Tensor[(2, 2, 15), int16] */;
  %375 = %373.1;
  (%374, %375)
}

def @func_3605() -> (Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) {
  %376 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 14), float64] */;
  %377 = log2(%376) /* ty=Tensor[(3, 3, 14), float64] */;
  %378 = cast(%377, dtype="int8") /* ty=Tensor[(3, 3, 14), int8] */;
  %379 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int8") /* ty=Tensor[(3, 3, 14), int8] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %382 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %383 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %386 = cast(%377, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %387 = cos(%386) /* ty=Tensor[(3, 3, 14), float32] */;
  %388 = cast(%377, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %389 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 14), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %392 = floor_mod(%390, %391) /* ty=Tensor[(3, 3, 14), float32] */;
  %393 = cast(%392, dtype="int16") /* ty=Tensor[(3, 3, 14), int16] */;
  %394 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%387, dtype="int16") /* ty=Tensor[(3, 3, 14), int16] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %397 = bitwise_or(%380, %381) /* ty=Tensor[(3, 3, 14), int8] */;
  %398 = mod(%384, %385) /* ty=Tensor[(3, 3, 14), float32] */;
  %399 = left_shift(%395, %396) /* ty=Tensor[(3, 3, 14), int16] */;
  (%397, %398, %399)
}

def @func_12819() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %400 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %401 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %402 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %403 = reshape(%401, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %404 = reshape(%402, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %405 = %400.5;
  %406 = @func_7849(%403, %404) /* ty=Tensor[(12, 2, 5), float64] */;
  (%405, %406, meta[relay.Constant][14] /* ty=Tensor[(120), uint16] */)
}

def @func_5578() -> (Tensor[(3, 2, 16), float64],) {
  @func_5576() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_3677() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) {
  %412 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) {
    %407 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
    %408 = %407.1;
    %409 = cast(%408, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
    %410 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
    %411 = exp(%409) /* ty=Tensor[(3, 3, 14), float32] */;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) */
}

def @func_9379() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %413 = cast(meta[relay.Constant][15] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %414 = reshape(%413, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %415 = @func_7776(%414) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %416 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
  %417 = %415.0;
  %418 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%416, %417, meta[relay.Constant][15] /* ty=Tensor[(81), float32] */, %418)
}

def @func_10087() -> Tensor[(3, 2, 16), float64] {
  %419 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_9940() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %419() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_10046() -> Tensor[(3, 2, 16), float32] {
  @func_10044() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_3510() -> (Tensor[(3, 2, 16), float64],) {
  %420 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %421 = %420.0;
  %422 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%421, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %426 = mod(%424, %425) /* ty=Tensor[(3, 2, 16), float64] */;
  (%426,)
}

def @func_16546() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %427 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %428 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %429 = %427.1;
  %430 = %428.2;
  %431 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  (%429, %430, %431)
}

def @func_1318() -> Tensor[(3, 2, 16), float64] {
  %432 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_1292() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %432() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_15509() -> (Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %439 = fn () -> (Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %433 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
    %434 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %435 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %436 = %433.2;
    %437 = %434.0;
    %438 = %435.0;
    (%436, %437, %438)
  };
  %439() /* ty=(Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_8210() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %444 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %440 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %441 = @func_6548() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %442 = %440.0;
    %443 = %441.1;
    (%442, %443)
  };
  %444() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_2641() -> Tensor[(3, 2, 16), float64] {
  %446 = fn () -> Tensor[(3, 2, 16), float64] {
    %445 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %445.0
  };
  %446() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4484() -> Tensor[(3, 2, 16), float64] {
  @func_4482() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_2722() -> Tensor[(3, 2, 16), float64] {
  %448 = fn () -> Tensor[(3, 2, 16), float64] {
    %447 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %447.0
  };
  %448() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_17318(%var_17316: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 2, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  @func_17315(%var_17316) /* ty=(Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 2, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_4989() -> (Tensor[(3, 2, 16), float64],) {
  @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_12590(%var_12588: uint16, %var_12589: Tensor[(12, 8, 2), uint16]) -> Tensor[(12, 8, 2), uint16] {
  %451 = fn (%var_12579: uint16, %var_12580: Tensor[(12, 8, 2), uint16]) -> Tensor[(12, 8, 2), uint16] {
    %449 = cast(%var_12579, dtype="uint16") /* ty=uint16 */;
    %450 = cast(%var_12580, dtype="uint16") /* ty=Tensor[(12, 8, 2), uint16] */;
    maximum(%449, %450) /* ty=Tensor[(12, 8, 2), uint16] */
  };
  %451(%var_12588, %var_12589) /* ty=Tensor[(12, 8, 2), uint16] */
}

def @func_14137() -> (Tensor[(3, 2, 16), float64],) {
  %452 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%452,)
}

def @func_6185() -> (Tensor[(3, 2, 16), float64],) {
  %453 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %454 = %453.1;
  (%454,)
}

def @func_1001() -> Tensor[(3, 2, 16), float64] {
  @func_999() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_7719(%var_7717: bool, %var_7718: Tensor[(1, 13), bool]) -> Tensor[(1, 13), bool] {
  %457 = fn (%var_7695: bool, %var_7696: Tensor[(1, 13), bool]) -> Tensor[(1, 13), bool] {
    %455 = cast(%var_7695, dtype="bool") /* ty=bool */;
    %456 = cast(%var_7696, dtype="bool") /* ty=Tensor[(1, 13), bool] */;
    logical_and(%455, %456) /* ty=Tensor[(1, 13), bool] */
  };
  %457(%var_7717, %var_7718) /* ty=Tensor[(1, 13), bool] */
}

def @func_16308() -> (Tensor[(3, 2, 16), float64],) {
  @func_16306() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_3607() -> (Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) {
  @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */
}

def @func_8361() -> Tensor[(3, 2, 16), float64] {
  %459 = fn () -> Tensor[(3, 2, 16), float64] {
    %458 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %458.1
  };
  %459() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8855() -> (Tensor[(3, 2, 16), float64],) {
  %461 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %460 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
    (%460,)
  };
  %461() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_1153() -> (Tensor[(3, 2, 16), int16],) {
  %464 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %462 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %463 = %462.1;
    (%463,)
  };
  %464() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_2103() -> Tensor[(3, 2, 16), int16] {
  @func_2101() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_16773() -> (Tensor[(3, 2, 16), float64],) {
  %465 = @func_14556() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %466 = %465.0;
  (%466,)
}

def @func_5357(%var_5356: Tensor[(60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) {
  %485 = fn (%var_5338: Tensor[(60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) {
    %467 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %468 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %469 = @func_1363() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
    %470 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
    %471 = @func_4330() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
    %472 = cast(%var_5338, dtype="int16") /* ty=Tensor[(60), int16] */;
    %473 = cast(%var_5338, dtype="int16") /* ty=Tensor[(60), int16] */;
    %474 = reshape(%472, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), int16] */;
    %475 = reshape(%473, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), int16] */;
    %476 = @func_1926(%474, %475) /* ty=(Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) */;
    %477 = %467.0;
    %478 = %468.1;
    %479 = %469.0;
    %480 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
    %481 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
    %482 = %470.0;
    %483 = %471.1;
    %484 = %476.1;
    (%477, %478, %479, %480, %481, %482, %483, %484, %var_5338)
  };
  %485(%var_5356) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) */
}

def @func_12377(%var_12363: Tensor[(2, 6, 6), float64], %var_12364: Tensor[(2, 6, 6), float64], %var_12371: Tensor[(2, 6, 6), float64]) -> (Tensor[(2, 6, 6), float64], Tensor[(2, 6, 6), float32]) {
  %486 = cast(%var_12364, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %487 = shape_of(%var_12363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_12363, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %490 = cast(%var_12371, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %491 = shape_of(%var_12363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_12363, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %494 = floor_divide(%488, %489) /* ty=Tensor[(2, 6, 6), float64] */;
  %495 = multiply(%492, %493) /* ty=Tensor[(2, 6, 6), float32] */;
  (%494, %495)
}

def @func_15296() -> (Tensor[(3, 3, 14), float32],) {
  %500 = fn () -> (Tensor[(3, 3, 14), float32],) {
    %496 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
    %497 = %496.0;
    %498 = cast(%497, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
    %499 = sinh(%498) /* ty=Tensor[(3, 3, 14), float32] */;
    (%499,)
  };
  %500() /* ty=(Tensor[(3, 3, 14), float32],) */
}

def @func_16915() -> Tensor[(3, 2, 16), float64] {
  %502 = fn () -> Tensor[(3, 2, 16), float64] {
    %501 = @func_14962() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %501.1
  };
  %502() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9930() -> Tensor[(210), float64] {
  %503 = @func_7933() /* ty=(Tensor[(210), float64],) */;
  %503.0
}

def @func_13110(%var_13095: Tensor[(216), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(216), float64]) {
  %504 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %505 = cast(%var_13095, dtype="float64") /* ty=Tensor[(216), float64] */;
  %506 = reshape(%505, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
  %507 = @func_8033(%506) /* ty=(Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %508 = %504.2;
  %509 = %507.2;
  (%508, %509, %var_13095)
}

def @func_17466() -> Tensor[(3, 2, 16), float64] {
  %511 = fn () -> Tensor[(3, 2, 16), float64] {
    %510 = @func_10922() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %510.0
  };
  %511() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4575() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %520 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %512 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %513 = @func_3510() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %514 = %513.0;
    %515 = cast(%514, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %516 = reshape(%515, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %517 = @func_2140(%516) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
    %518 = %512.0;
    %519 = %517.1;
    (%518, %514, %519)
  };
  %520() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_1606() -> (Tensor[(3, 2, 16), float64],) {
  %522 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %521 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%521,)
  };
  %522() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_11124(%var_11123: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(81), float32]) {
  %534 = fn (%var_11066: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(81), float32]) {
    %523 = cast(%var_11066, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
    %524 = sigmoid(%523) /* ty=Tensor[(1, 3, 14), float64] */;
    %525 = cast(%var_11066, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
    %526 = acosh(%525) /* ty=Tensor[(1, 3, 14), float64] */;
    %527 = cast(%526, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
    %528 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %529 = cast(%524, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %531 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %532 = greater_equal(%529, %530) /* ty=Tensor[(?, 3, 14), bool] */;
    %533 = %531.0;
    (%532, %533)
  };
  %534(%var_11123) /* ty=(Tensor[(?, 3, 14), bool], Tensor[(81), float32]) */
}

def @func_13940(%var_13938: Tensor[(16, 1, 6), uint64]) -> (Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) {
  @func_13937(%var_13938) /* ty=(Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) */
}

def @func_1365() -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  @func_1363() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7970() -> Tensor[(210), float64] {
  %535 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %535.2
}

def @func_15079(%var_15022: Tensor[(750), float32], %var_15073: Tensor[(144, 4), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(784), uint64], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(144, 4), float64]) {
  %536 = @func_11848() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %537 = cast(meta[relay.Constant][17] /* ty=Tensor[(784), uint64] */, dtype="uint64") /* ty=Tensor[(784), uint64] */;
  %538 = reshape(%537, newshape=[14, 8, 7]) /* ty=Tensor[(14, 8, 7), uint64] */;
  %539 = @func_14453(%538) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(14, 8, 7), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %540 = cast(%var_15022, dtype="float32") /* ty=Tensor[(750), float32] */;
  %541 = reshape(%540, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), float32] */;
  %542 = cast(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="float32") /* ty=Tensor[(144, 4), float32] */;
  %543 = reshape(%542, newshape=[6, 96]) /* ty=Tensor[(6, 96), float32] */;
  %544 = @func_10008(%543) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %545 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %546 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %547 = cast(%var_15073, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %548 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %549 = cast(meta[relay.Constant][18] /* ty=Tensor[(144, 4), float32] */, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %551 = %536.0;
  %552 = %539.4;
  %553 = @func_11347(%541) /* ty=Tensor[(15, 5, 10), float32] */;
  %554 = %544.5;
  %555 = %545.0;
  %556 = %546.0;
  %557 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
  %558 = add(%549, %550) /* ty=Tensor[(144, 4), float64] */;
  (%551, %552, meta[relay.Constant][17] /* ty=Tensor[(784), uint64] */, %553, %var_15022, %554, %555, %556, %557, %558)
}

def @func_16951() -> (Tensor[(3, 2, 16), float64],) {
  @func_16949() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_3365(%var_3364: Tensor[(6, 11, 7), float64]) -> (Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) {
  %562 = fn (%var_3338: Tensor[(6, 11, 7), float64]) -> (Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) {
    %559 = cast(%var_3338, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
    %560 = tan(%559) /* ty=Tensor[(6, 11, 7), float64] */;
    %561 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
    (%560, %561)
  };
  %562(%var_3364) /* ty=(Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_10347() -> (Tensor[(81), float32],) {
  %565 = fn () -> (Tensor[(81), float32],) {
    %563 = @func_6030() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */;
    %564 = %563.2;
    (%564,)
  };
  %565() /* ty=(Tensor[(81), float32],) */
}

def @func_6104() -> (Tensor[(3, 2, 16), float64],) {
  %567 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %566 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%566,)
  };
  %567() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13045() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %568 = @func_6146() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %569 = @func_11177() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %570 = @func_8164() /* ty=Tensor[(3, 2, 16), float64] */;
  %571 = %568.0;
  %572 = %569.0;
  (%570, %571, %572)
}

def @func_9724() -> (Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_8035(%var_8034: Tensor[(9, 3, 8), float64]) -> (Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %581 = fn (%var_8018: Tensor[(9, 3, 8), float64]) -> (Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %573 = cast(%var_8018, dtype="bool") /* ty=Tensor[(9, 3, 8), bool] */;
    %574 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(9, 3, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 3, 8), float64] */, dtype="bool") /* ty=Tensor[(9, 3, 8), bool] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %577 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %578 = greater(%575, %576) /* ty=Tensor[(9, 3, 8), bool] */;
    %579 = %577.0;
    %580 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%578, %579, %580)
  };
  %581(%var_8034) /* ty=(Tensor[(9, 3, 8), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_3175(%var_3167: int32, %var_3168: Tensor[(3, 3, 13), int32]) -> (Tensor[(3, 3, 13), bool],) {
  %582 = cast(%var_3167, dtype="bool") /* ty=bool */;
  %583 = cast(%var_3168, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %584 = less_equal(%582, %583) /* ty=Tensor[(3, 3, 13), bool] */;
  (%584,)
}

def @func_6576() -> Tensor[(3, 2, 16), float64] {
  @func_6574() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_10359() -> (Tensor[(3, 2, 16), float64],) {
  %587 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %585 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %586 = %585.0;
    (%586,)
  };
  %587() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13014() -> Tensor[(3, 2, 16), float64] {
  %588 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_4482() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %588() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4915() -> Tensor[(3, 2, 16), float64] {
  %590 = fn () -> Tensor[(3, 2, 16), float64] {
    %589 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %589.1
  };
  %590() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_6069() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %591 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %592 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %593 = %591.1;
  (%592, %593)
}

def @func_3126() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_3124() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_12947() -> (Tensor[(3, 2, 16), float64],) {
  %594 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %595 = %594.4;
  (%595,)
}

def @func_7613() -> (Tensor[(3, 2, 16), float64],) {
  %596 = @func_7285() /* ty=Tensor[(3, 2, 16), float64] */;
  (%596,)
}

def @func_278() -> (Tensor[(3, 2, 16), float64],) {
  %597 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %598 = %597.0;
  (%598,)
}

def @func_10546(%var_10545: Tensor[(1, 117), int32]) -> (Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %610 = fn (%var_10532: Tensor[(1, 117), int32]) -> (Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %599 = @func_4902() /* ty=(Tensor[(81), int8],) */;
    %600 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %601 = cast(%var_10532, dtype="int32") /* ty=Tensor[(1, 117), int32] */;
    %602 = reshape(%600, newshape=[]) /* ty=int32 */;
    %603 = reshape(%601, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), int32] */;
    %604 = @func_3175(%602, %603) /* ty=(Tensor[(3, 3, 13), bool],) */;
    %605 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %606 = %599.0;
    %607 = %604.0;
    %608 = %605.3;
    %609 = @func_6574() /* ty=Tensor[(3, 2, 16), float64] */;
    (%606, %607, -3 /* ty=int32 */, %var_10532, %608, %609)
  };
  %610(%var_10545) /* ty=(Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_8570(%var_8568: Tensor[(8, 6, 12), float32], %var_8569: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), int64],) {
  @func_8566(%var_8568, %var_8569) /* ty=(Tensor[(8, 6, 12), int64],) */
}

def @func_7906() -> (Tensor[(3, 2, 16), float64], Tensor[(81), int8]) {
  %615 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(81), int8]) {
    %611 = @func_3510() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %612 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
    %613 = %611.0;
    %614 = %612.0;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(81), int8]) */
}

def @func_1047() -> (Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %616 = cast(meta[relay.Constant][20] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %617 = reshape(%616, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
  %618 = @func_727(%617) /* ty=(Tensor[(1, 9, 9), float32],) */;
  %619 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %620 = %619.1;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %622 = reshape(%621, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %623 = @func_494(%622) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */;
  %624 = cast(%620, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %625 = %618.0;
  %626 = %623.1;
  %627 = acos(%624) /* ty=Tensor[(3, 2, 16), float64] */;
  %628 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%625, meta[relay.Constant][20] /* ty=Tensor[(81), float32] */, %626, %627, %628)
}

def @func_16169(%var_16166: Tensor[(2520), float64], %var_16167: Tensor[(1248), uint32], %var_16168: Tensor[(210), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(12, 13, 8), uint32], Tensor[(1248), uint32], Tensor[(210), float64]) {
  @func_16164(%var_16166, %var_16167, %var_16168) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(12, 13, 8), uint32], Tensor[(1248), uint32], Tensor[(210), float64]) */
}

def @func_12970() -> Tensor[(3, 2, 16), float64] {
  @func_12968() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_7852(%var_7850: Tensor[(12, 2, 5), uint16], %var_7851: Tensor[(12, 2, 5), uint16]) -> Tensor[(12, 2, 5), float64] {
  %643 = fn (%var_7817: Tensor[(12, 2, 5), uint16], %var_7818: Tensor[(12, 2, 5), uint16]) -> Tensor[(12, 2, 5), float64] {
    %629 = cast(%var_7818, dtype="uint16") /* ty=Tensor[(12, 2, 5), uint16] */;
    %630 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%var_7817, dtype="uint16") /* ty=Tensor[(12, 2, 5), uint16] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %633 = maximum(%631, %632) /* ty=Tensor[(12, 2, 5), uint16] */;
    %634 = cast(%633, dtype="uint64") /* ty=Tensor[(12, 2, 5), uint64] */;
    %635 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %636 = cast(%var_7817, dtype="uint64") /* ty=Tensor[(12, 2, 5), uint64] */;
    %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %638 = right_shift(%636, %637) /* ty=Tensor[(12, 2, 5), uint64] */;
    %639 = cast(%638, dtype="float64") /* ty=Tensor[(12, 2, 5), float64] */;
    %640 = shape_of(%var_7817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %641 = cast(%var_7817, dtype="float64") /* ty=Tensor[(12, 2, 5), float64] */;
    %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%641, %642) /* ty=Tensor[(12, 2, 5), float64] */
  };
  %643(%var_7850, %var_7851) /* ty=Tensor[(12, 2, 5), float64] */
}

def @func_1629() -> (Tensor[(3, 2, 16), float64],) {
  %644 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %645 = %644.0;
  (%645,)
}

def @func_1677() -> Tensor[(3, 2, 16), float64] {
  @func_1675() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_3148() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_3146() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_5163() -> Tensor[(3, 2, 16), float64] {
  @func_5161() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8587() -> (Tensor[(3, 2, 16), float32],) {
  %646 = @func_7379() /* ty=Tensor[(3, 2, 16), float32] */;
  (%646,)
}

def @func_4482() -> Tensor[(3, 2, 16), float64] {
  @func_767() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_12478() -> (Tensor[(3, 2, 16), float64],) {
  %649 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %647 = @func_11848() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %648 = %647.0;
    (%648,)
  };
  %649() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_15130(%var_15104: Tensor[(30), int16]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
  %650 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %651 = cast(%var_15104, dtype="int16") /* ty=Tensor[(30), int16] */;
  %652 = reshape(%651, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), int16] */;
  %653 = @func_4149(%652) /* ty=(Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) */;
  %654 = %650.0;
  %655 = %653.2;
  %656 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  (%654, %655, %var_15104, %656)
}

def @func_13047() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_1289() -> (Tensor[(3, 2, 16), float64],) {
  %659 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %657 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %658 = %657.0;
    (%658,)
  };
  %659() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_4640() -> (Tensor[(3, 2, 16), float64],) {
  %660 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_8178() -> Tensor[(3, 2, 16), float64] {
  @func_8176() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_11849() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %664 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %662 = @func_1937() /* ty=Tensor[(3, 2, 16), float64] */;
    %663 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%662, %663)
  };
  %664() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_16696() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %665 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %666 = @func_7243() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %667 = %665.0;
  %668 = %666.0;
  %669 = @func_13714() /* ty=Tensor[(3, 2, 16), float64] */;
  (%667, %668, %669)
}

def @func_3067() -> (Tensor[(3, 2, 16), float64],) {
  @func_3065() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_17070() -> (Tensor[(3, 2, 16), float64], Tensor[(1440), uint32], Tensor[(90), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %680 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(1440), uint32], Tensor[(90), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %670 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %671 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
    %672 = reshape(%671, newshape=[90]) /* ty=Tensor[(90), uint32] */;
    %673 = @func_8539(%672) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(16, 9, 10), bool], Tensor[(90), uint32], Tensor[(1440), uint32], Tensor[(1050), float32], Tensor[(210), float64], Tensor[(3, 2, 16), int8]) */;
    %674 = @func_14002() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %675 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %676 = %670.1;
    %677 = %673.3;
    %678 = %674.0;
    %679 = %675.0;
    (%676, %677, meta[relay.Constant][21] /* ty=Tensor[(90), uint32] */, %678, %679)
  };
  %680() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1440), uint32], Tensor[(90), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_12659(%var_12658: Tensor[(7, 4, 13), uint32]) -> (Tensor[(7, 4, 13), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
  %690 = fn (%var_12626: Tensor[(7, 4, 13), uint32]) -> (Tensor[(7, 4, 13), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
    %681 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 4, 13), uint32] */, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
    %682 = shape_of(%var_12626, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%var_12626, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %685 = @func_10943() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %686 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %687 = equal(%683, %684) /* ty=Tensor[(7, 4, 13), bool] */;
    %688 = %685.1;
    %689 = %686.0;
    (%687, %688, %689)
  };
  %690(%var_12658) /* ty=(Tensor[(7, 4, 13), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */
}

def @func_13113(%var_13111: Tensor[(216), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(216), float64]) {
  @func_13110(%var_13111) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(216), float64]) */
}

def @func_938(%var_937: Tensor[(7, 10, 15), float32]) -> Tensor[(7, 10, 15), float32] {
  %692 = fn (%var_932: Tensor[(7, 10, 15), float32]) -> Tensor[(7, 10, 15), float32] {
    %691 = cast(%var_932, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
    tan(%691) /* ty=Tensor[(7, 10, 15), float32] */
  };
  %692(%var_937) /* ty=Tensor[(7, 10, 15), float32] */
}

def @func_924() -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %714 = fn () -> (Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %693 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %694 = %693.0;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %696 = reshape(%695, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %697 = @func_412(%696) /* ty=Tensor[(3, 2, 16), int16] */;
    %698 = cast(%694, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%697, dtype="bool") /* ty=Tensor[(3, 2, 16), bool] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %702 = cast(%694, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %703 = cast(meta[relay.Constant][23] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %704 = reshape(%702, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %705 = reshape(%703, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %706 = @func_839(%704, %705) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %707 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %708 = logical_and(%700, %701) /* ty=Tensor[(3, 2, 16), bool] */;
    %709 = cast(%708, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %710 = reshape(%709, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %711 = %706.6;
    %712 = %707.0;
    %713 = @func_750(%710) /* ty=Tensor[(3, 2, 16), int16] */;
    (%708, %711, meta[relay.Constant][23] /* ty=Tensor[(210), float64] */, %712, %713)
  };
  %714() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_11578() -> Tensor[(3, 2, 16), float64] {
  @func_11576() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_2546(%var_2543: Tensor[(3, 2, 16), float32], %var_2544: Tensor[(3, 2, 16), float32], %var_2545: Tensor[(3, 2, 16), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  @func_2541(%var_2543, %var_2544, %var_2545) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_7319() -> Tensor[(3, 2, 16), float64] {
  %716 = fn () -> Tensor[(3, 2, 16), float64] {
    %715 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %715.0
  };
  %716() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_1297() -> (Tensor[(3, 2, 16), float64],) {
  %719 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %717 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %718 = %717.1;
    (%718,)
  };
  %719() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_4937() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_3890() -> (Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) {
  %720 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %722 = reshape(%721, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %723 = @func_2140(%722) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %724 = %723.1;
  %725 = cast(%724, dtype="int8") /* ty=Tensor[(3, 2, 16), int8] */;
  %726 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%720, dtype="int8") /* ty=Tensor[(3, 2, 16), int8] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %729 = multiply(%727, %728) /* ty=Tensor[(3, 2, 16), int8] */;
  %730 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
  (%729, %730)
}

def @func_9186() -> (Tensor[(3, 2, 16), float64],) {
  @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_9586() -> (Tensor[(3, 2, 16), float64],) {
  %733 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %731 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %732 = %731.0;
    (%732,)
  };
  %733() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_10056() -> (Tensor[(3, 2, 16), float64],) {
  %734 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %735 = %734.0;
  (%735,)
}

def @func_14610() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %743 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
    %736 = @func_13202() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %737 = @func_11736() /* ty=(Tensor[(3, 2, 16), float32],) */;
    %738 = @func_8209() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %739 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
    %740 = %736.0;
    %741 = %737.0;
    %742 = %738.1;
    (%739, %740, %741, %742)
  };
  %743() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_7287() -> Tensor[(3, 2, 16), float64] {
  @func_7285() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5545(%var_5543: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(540), uint32]) {
  @func_5542(%var_5543) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(540), uint32]) */
}

def @func_9052() -> Tensor[(3, 2, 16), int8] {
  %744 = @func_3890() /* ty=(Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) */;
  %744.0
}

def @func_11736() -> (Tensor[(3, 2, 16), float32],) {
  %745 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %746 = %745.1;
  (%746,)
}

def @func_12160() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_12158() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_13904() -> (Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
  %751 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
    %747 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %748 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
    %749 = %747.0;
    %750 = %748.2;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(210), float64]) */
}

def @func_9035() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %752 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %753 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %754 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %755 = reshape(%753, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %756 = reshape(%754, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %757 = %752.1;
  %758 = @func_7849(%755, %756) /* ty=Tensor[(12, 2, 5), float64] */;
  (%757, %758, meta[relay.Constant][24] /* ty=Tensor[(120), uint16] */)
}

def @func_414(%var_413: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
  %765 = fn (%var_402: Tensor[(3, 2, 16), float64]) -> Tensor[(3, 2, 16), int16] {
    %759 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %760 = %759.0;
    %761 = cast(%var_402, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%763, %764) /* ty=Tensor[(3, 2, 16), int16] */
  };
  %765(%var_413) /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_1049() -> (Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7776(%var_7763: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %766 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %767 = cast(%var_7763, dtype="float32") /* ty=Tensor[(81), float32] */;
  %768 = reshape(%767, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
  %769 = @func_3300(%768) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %770 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %771 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %772 = %766.0;
  %773 = %769.4;
  %774 = %770.0;
  (%771, %772, %773, %var_7763, %774)
}

def @func_10433() -> (Tensor[(3, 2, 16), float64],) {
  @func_10431() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_15695() -> Tensor[(3, 2, 16), float64] {
  %776 = fn () -> Tensor[(3, 2, 16), float64] {
    %775 = @func_10806() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %775.0
  };
  %776() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5624() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %777 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %780 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  %781 = exp(%779) /* ty=Tensor[(3, 2, 16), float32] */;
  (%780, %781)
}

def @func_15083(%var_15081: Tensor[(750), float32], %var_15082: Tensor[(144, 4), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(784), uint64], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(144, 4), float64]) {
  @func_15079(%var_15081, %var_15082) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(784), uint64], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(144, 4), float64]) */
}

def @func_16698() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_16696() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_1223() -> Tensor[(3, 2, 16), float64] {
  %784 = fn () -> Tensor[(3, 2, 16), float64] {
    %782 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
    %783 = cast(%782, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    cos(%783) /* ty=Tensor[(3, 2, 16), float64] */
  };
  %784() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_11800() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_11798() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7540() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %785 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %786 = @func_6069() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %787 = @func_6146() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %788 = %785.0;
  %789 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  %790 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
  %791 = %786.1;
  %792 = %787.0;
  (%788, %789, %790, %791, %792)
}

def @func_16469() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %804 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
    %793 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %794 = cast(meta[relay.Constant][25] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
    %795 = reshape(%794, newshape=[1, 117]) /* ty=Tensor[(1, 117), int32] */;
    %796 = @func_10544(%795) /* ty=(Tensor[(81), int8], Tensor[(3, 3, 13), bool], int32, Tensor[(1, 117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %797 = @func_15508() /* ty=(Tensor[(768), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %798 = @func_8587() /* ty=(Tensor[(3, 2, 16), float32],) */;
    %799 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
    %800 = %793.0;
    %801 = %796.5;
    %802 = %797.1;
    %803 = %798.0;
    (%799, %800, %801, meta[relay.Constant][25] /* ty=Tensor[(117), int32] */, %802, %803)
  };
  %804() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(117), int32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */
}

def @func_1516() -> (Tensor[(3, 2, 16), float32],) {
  %809 = fn () -> (Tensor[(3, 2, 16), float32],) {
    %805 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %806 = %805.0;
    %807 = cast(%806, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
    %808 = cosh(%807) /* ty=Tensor[(3, 2, 16), float32] */;
    (%808,)
  };
  %809() /* ty=(Tensor[(3, 2, 16), float32],) */
}

def @func_7673() -> Tensor[(3, 2, 16), int16] {
  %810 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %810.0
}

def @func_16732(%var_16731: Tensor[(1, 60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(60), int16], Tensor[(1, 60), int16]) {
  %817 = fn (%var_16719: Tensor[(1, 60), int16]) -> (Tensor[(3, 2, 16), float64], Tensor[(60), int16], Tensor[(1, 60), int16]) {
    %811 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %812 = cast(%var_16719, dtype="int16") /* ty=Tensor[(1, 60), int16] */;
    %813 = reshape(%812, newshape=[60]) /* ty=Tensor[(60), int16] */;
    %814 = @func_5355(%813) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), int8], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(60), int16]) */;
    %815 = %811.0;
    %816 = %814.8;
    (%815, %816, %var_16719)
  };
  %817(%var_16731) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(60), int16], Tensor[(1, 60), int16]) */
}

def @func_17223() -> Tensor[(3, 2, 16), int16] {
  @func_17221() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_13746() -> (Tensor[(210), float64],) {
  @func_13744() /* ty=(Tensor[(210), float64],) */
}

def @func_10254() -> (Tensor[(3, 2, 16), int16],) {
  %820 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %818 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %819 = %818.0;
    (%819,)
  };
  %820() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_15593(%var_15591: Tensor[(2, 6, 7), int64], %var_15592: Tensor[(2, 6, 7), int64]) -> Tensor[(2, 6, 7), bool] {
  %825 = fn (%var_15533: Tensor[(2, 6, 7), int64], %var_15534: Tensor[(2, 6, 7), int64]) -> Tensor[(2, 6, 7), bool] {
    %821 = cast(%var_15534, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %822 = shape_of(%var_15533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %823 = cast(%var_15533, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%823, %824) /* ty=Tensor[(2, 6, 7), bool] */
  };
  %825(%var_15591, %var_15592) /* ty=Tensor[(2, 6, 7), bool] */
}

def @func_15891() -> Tensor[(3, 2, 16), float64] {
  %826 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %826.0
}

def @func_13074() -> Tensor[(3, 2, 16), float64] {
  %827 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_767() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %827() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9932() -> Tensor[(210), float64] {
  @func_9930() /* ty=Tensor[(210), float64] */
}

def @func_2977() -> (Tensor[(3, 2, 16), float64],) {
  %830 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %828 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %829 = %828.0;
    (%829,)
  };
  %830() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13608(%var_13580: Tensor[(30), int16], %var_13605: bool, %var_13606: Tensor[(13), bool]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(81), bool], bool, Tensor[(1008), float64], bool, Tensor[(13), bool]) {
  %831 = @func_9184() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %832 = cast(%var_13580, dtype="int16") /* ty=Tensor[(30), int16] */;
  %833 = reshape(%832, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), int16] */;
  %834 = @func_4149(%833) /* ty=(Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) */;
  %835 = cast(meta[relay.Constant][26] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %836 = cast(%var_13605, dtype="bool") /* ty=bool */;
  %837 = cast(%var_13606, dtype="bool") /* ty=Tensor[(13), bool] */;
  %838 = reshape(%835, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float64] */;
  %839 = reshape(%836, newshape=[]) /* ty=bool */;
  %840 = reshape(%837, newshape=[13]) /* ty=Tensor[(13), bool] */;
  %841 = @func_12572(%838, %839, %840) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1, 13), bool], bool, Tensor[(13), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %842 = %831.0;
  %843 = %834.2;
  %844 = @func_4762() /* ty=Tensor[(81), bool] */;
  %845 = %841.2;
  (%842, %843, %var_13580, %844, %845, meta[relay.Constant][26] /* ty=Tensor[(1008), float64] */, %var_13605, %var_13606)
}

def @func_4149(%var_4094: Tensor[(5, 2, 3), int16]) -> (Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) {
  %846 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 2, 3), int16] */, dtype="int16") /* ty=Tensor[(5, 2, 3), int16] */;
  %847 = shape_of(%var_4094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%var_4094, dtype="int16") /* ty=Tensor[(5, 2, 3), int16] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %850 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %853 = cast(%851, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %854 = cast(%851, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %855 = reshape(%852, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %856 = reshape(%853, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %857 = reshape(%854, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %858 = @func_2541(%855, %856, %857) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %859 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %862 = reshape(%861, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %863 = @func_2140(%862) /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), float64]) */;
  %864 = subtract(%848, %849) /* ty=Tensor[(5, 2, 3), int16] */;
  %865 = %858.0;
  %866 = %863.0;
  (%864, %851, %865, %860, %866)
}

def @func_7379() -> Tensor[(3, 2, 16), float32] {
  @func_7139() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_3065() -> (Tensor[(3, 2, 16), float64],) {
  %867 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %868 = %867.1;
  (%868,)
}

def @func_14769() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %869 = cast(meta[relay.Constant][28] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %870 = cast(meta[relay.Constant][28] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %871 = reshape(%869, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %872 = reshape(%870, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %873 = @func_3812() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %874 = @func_10056() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %875 = @func_11053() /* ty=Tensor[(3, 2, 16), float64] */;
  %876 = @func_7849(%871, %872) /* ty=Tensor[(12, 2, 5), float64] */;
  %877 = %873.1;
  %878 = @func_12968() /* ty=Tensor[(3, 2, 16), float64] */;
  %879 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  %880 = %874.0;
  (%875, %876, meta[relay.Constant][28] /* ty=Tensor[(120), uint16] */, %877, %878, %879, %880)
}

def @func_9624() -> (Tensor[(3, 2, 16), float64],) {
  %881 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %882 = %881.1;
  (%882,)
}

def @func_320() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %883 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %884 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %885 = %884.0;
  %886 = cast(%885, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %887 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %888 = %883.0;
  %889 = sin(%886) /* ty=Tensor[(3, 2, 16), float32] */;
  %890 = %887.0;
  (%888, %889, %890)
}

def @func_8991() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  @func_8989() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */
}

def @func_9826(%var_9825: Tensor[(768, 7), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(768, 7), float64], Tensor[(768, ?), uint16], Tensor[(768, ?), uint8]) {
  %916 = fn (%var_9800: Tensor[(768, 7), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(768, 7), float64], Tensor[(768, ?), uint16], Tensor[(768, ?), uint8]) {
    %891 = cast(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
    %892 = erf(%891) /* ty=Tensor[(768, 1), float32] */;
    %893 = cast(%892, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
    %894 = cast(%var_9800, dtype="float64") /* ty=Tensor[(768, 7), float64] */;
    %895 = cast(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
    %896 = reshape(%895, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), float64] */;
    %897 = @func_6678(%896) /* ty=(Tensor[(8, 6, 16), float64],) */;
    %898 = %897.0;
    %899 = cast(%898, dtype="int64") /* ty=Tensor[(8, 6, 16), int64] */;
    %900 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %901 = cast(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="int64") /* ty=Tensor[(768, 1), int64] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %903 = subtract(%901, %902) /* ty=Tensor[(768, ?), int64] */;
    %904 = cast(%903, dtype="uint16") /* ty=Tensor[(768, ?), uint16] */;
    %905 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %906 = cast(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="uint16") /* ty=Tensor[(768, 1), uint16] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %908 = cast(meta[relay.Constant][29] /* ty=Tensor[(768, 1), float64] */, dtype="uint8") /* ty=Tensor[(768, 1), uint8] */;
    %909 = shape_of(%892, dtype="int32") /* ty=Tensor[(2), int32] */;
    %910 = cast(%892, dtype="uint8") /* ty=Tensor[(768, 1), uint8] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %912 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
    %913 = divide(%893, %894) /* ty=Tensor[(768, 7), float64] */;
    %914 = bitwise_xor(%906, %907) /* ty=Tensor[(768, ?), uint16] */;
    %915 = logical_xor(%910, %911) /* ty=Tensor[(768, ?), uint8] */;
    (%912, %913, %914, %915)
  };
  %916(%var_9825) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(768, 7), float64], Tensor[(768, ?), uint16], Tensor[(768, ?), uint8]) */
}

def @func_17221() -> Tensor[(3, 2, 16), int16] {
  %917 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %917.4
}

def @func_15824() -> (Tensor[(3, 3, 14), int16],) {
  %918 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
  %919 = %918.2;
  (%919,)
}

def @func_8589() -> (Tensor[(3, 2, 16), float32],) {
  @func_8587() /* ty=(Tensor[(3, 2, 16), float32],) */
}

def @func_3179(%var_3177: int32, %var_3178: Tensor[(3, 3, 13), int32]) -> (Tensor[(3, 3, 13), bool],) {
  @func_3175(%var_3177, %var_3178) /* ty=(Tensor[(3, 3, 13), bool],) */
}

def @func_5405() -> (Tensor[(3, 2, 16), int16],) {
  %921 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %920 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
    (%920,)
  };
  %921() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_8684(%var_8683: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) {
  %927 = fn (%var_8680: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) {
    %922 = cast(%var_8680, dtype="float32") /* ty=Tensor[(81), float32] */;
    %923 = reshape(%922, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
    %924 = @func_7075(%923) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) */;
    %925 = @func_7139() /* ty=Tensor[(3, 2, 16), float32] */;
    %926 = %924.4;
    (%925, %926, %var_8680)
  };
  %927(%var_8683) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) */
}

def @func_15893() -> Tensor[(3, 2, 16), float64] {
  @func_15891() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_10008(%var_9977: Tensor[(6, 96), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %928 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %929 = cast(%var_9977, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %930 = cast(%var_9977, dtype="float32") /* ty=Tensor[(6, 96), float32] */;
  %931 = reshape(%929, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %932 = reshape(%930, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %933 = @func_8566(%931, %932) /* ty=(Tensor[(8, 6, 12), int64],) */;
  %934 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
  %935 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %936 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  %937 = %928.0;
  %938 = %933.0;
  %939 = %934.2;
  %940 = %935.0;
  %941 = @func_7660() /* ty=Tensor[(3, 2, 16), int16] */;
  (%936, %937, %938, %var_9977, %939, %940, %941)
}

def @func_4763() -> Tensor[(81), bool] {
  %948 = fn () -> Tensor[(81), bool] {
    %942 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %943 = %942.1;
    %944 = cast(meta[relay.Constant][30] /* ty=Tensor[(81), float32] */, dtype="bool") /* ty=Tensor[(81), bool] */;
    %945 = shape_of(%943, dtype="int32") /* ty=Tensor[(1), int32] */;
    %946 = cast(%943, dtype="bool") /* ty=Tensor[(81), bool] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater_equal(%946, %947) /* ty=Tensor[(81), bool] */
  };
  %948() /* ty=Tensor[(81), bool] */
}

def @func_729(%var_728: Tensor[(1, 9, 9), float32]) -> (Tensor[(1, 9, 9), float32],) {
  %951 = fn (%var_712: Tensor[(1, 9, 9), float32]) -> (Tensor[(1, 9, 9), float32],) {
    %949 = cast(%var_712, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
    %950 = log10(%949) /* ty=Tensor[(1, 9, 9), float32] */;
    (%950,)
  };
  %951(%var_728) /* ty=(Tensor[(1, 9, 9), float32],) */
}

def @func_6247() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %957 = fn () -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %952 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %953 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %954 = @func_1576() /* ty=Tensor[(3, 2, 16), float32] */;
    %955 = %952.5;
    %956 = %953.0;
    (%954, %955, %956)
  };
  %957() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_9381() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_14071() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_14069() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_9941() -> Tensor[(3, 2, 16), float64] {
  %958 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %958() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5588() -> (Tensor[(3, 2, 16), float64],) {
  %959 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_15791() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %964 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %961 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %962 = %961.0;
    %963 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
    (%962, %963)
  };
  %964() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_7661() -> Tensor[(3, 2, 16), int16] {
  %966 = fn () -> Tensor[(3, 2, 16), int16] {
    %965 = @func_3796() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %965.0
  };
  %966() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_12968() -> Tensor[(3, 2, 16), float64] {
  %967 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %967.0
}

def @func_15160() -> (Tensor[(3, 2, 16), float64],) {
  %970 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %968 = @func_10358() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %969 = %968.0;
    (%969,)
  };
  %970() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_2783() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %971 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %972 = %971.1;
  %973 = @func_1675() /* ty=Tensor[(3, 2, 16), float64] */;
  (%972, %973)
}

def @func_6071() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_6069() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_2541(%var_2471: Tensor[(3, 2, 16), float32], %var_2495: Tensor[(3, 2, 16), float32], %var_2515: Tensor[(3, 2, 16), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %974 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %975 = %974.0;
  %976 = cast(%var_2471, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%975, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %980 = cast(%var_2471, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %981 = asinh(%980) /* ty=Tensor[(3, 2, 16), float32] */;
  %982 = cast(%var_2495, dtype="int64") /* ty=Tensor[(3, 2, 16), int64] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%981, dtype="int64") /* ty=Tensor[(3, 2, 16), int64] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %986 = @func_1515() /* ty=(Tensor[(3, 2, 16), float32],) */;
  %987 = cast(%var_2515, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %988 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%981, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %991 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %992 = power(%978, %979) /* ty=Tensor[(3, 2, 16), float64] */;
  %993 = bitwise_or(%984, %985) /* ty=Tensor[(3, 2, 16), int64] */;
  %994 = %986.0;
  %995 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %996 = floor_divide(%989, %990) /* ty=Tensor[(3, 2, 16), float32] */;
  %997 = %991.0;
  (%992, %993, %994, %995, %996, %997)
}

def @func_7933() -> (Tensor[(210), float64],) {
  %998 = @func_3061() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %999 = %998.2;
  (%999,)
}

def @func_4935() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1000 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1001 = @func_4914() /* ty=Tensor[(3, 2, 16), float64] */;
  %1002 = %1000.0;
  (%1001, %1002)
}

def @func_1915() -> Tensor[(3, 2, 16), int16] {
  %1004 = fn () -> Tensor[(3, 2, 16), int16] {
    %1003 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
    %1003.1
  };
  %1004() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_5542(%var_5537: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(540), uint32]) {
  %1005 = @func_4987() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1006 = cast(%var_5537, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1007 = reshape(%1006, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
  %1008 = @func_1409(%1007) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
  %1009 = %1005.0;
  %1010 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
  %1011 = %1008.1;
  (%1009, %1010, %1011, %var_5537)
}

def @func_13716() -> Tensor[(3, 2, 16), float64] {
  @func_13714() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8176() -> Tensor[(3, 2, 16), float64] {
  @func_2721() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8632(%var_8631: Tensor[(3, 27), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 27), float32]) {
  %1021 = fn (%var_8622: Tensor[(3, 27), float32]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 27), float32]) {
    %1012 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %1013 = @func_3605() /* ty=(Tensor[(3, 3, 14), int8], Tensor[(3, 3, 14), float32], Tensor[(3, 3, 14), int16]) */;
    %1014 = cast(%var_8622, dtype="float32") /* ty=Tensor[(3, 27), float32] */;
    %1015 = reshape(%1014, newshape=[81, 1]) /* ty=Tensor[(81, 1), float32] */;
    %1016 = @func_3300(%1015) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %1017 = @func_7576() /* ty=Tensor[(3, 2, 16), int16] */;
    %1018 = %1012.0;
    %1019 = %1013.1;
    %1020 = %1016.4;
    (%1017, %1018, %1019, %1020, %var_8622)
  };
  %1021(%var_8631) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 27), float32]) */
}

def @func_6418(%var_6417: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
  %1037 = fn (%var_6374: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(210), float64]) {
    %1022 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1023 = %1022.0;
    %1024 = cast(%var_6374, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
    %1025 = shape_of(%1023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1026 = cast(%1023, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
    %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1028 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %1029 = %1028.0;
    %1030 = cast(%1029, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %1031 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1032 = reshape(%1030, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %1033 = reshape(%1031, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1034 = @func_839(%1032, %1033) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1035 = floor_mod(%1026, %1027) /* ty=Tensor[(3, 2, 16), float32] */;
    %1036 = %1034.4;
    (%1035, %1029, %1036, meta[relay.Constant][31] /* ty=Tensor[(210), float64] */)
  };
  %1037(%var_6417) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(210), float64]) */
}

def @func_11178() -> (Tensor[(3, 2, 16), float64],) {
  %1039 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1038 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_10728() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_10726() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_6324() -> (Tensor[(3, 2, 16), float64],) {
  %1042 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1040 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1041 = %1040.0;
    (%1041,)
  };
  %1042() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_12411() -> (Tensor[(3, 2, 16), int16],) {
  %1045 = fn () -> (Tensor[(3, 2, 16), int16],) {
    %1043 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %1044 = %1043.4;
    (%1044,)
  };
  %1045() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_14860() -> Tensor[(3, 2, 16), float64] {
  @func_14858() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_12701() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1052 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1046 = @func_4574() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1047 = @func_10726() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1048 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1049 = %1046.1;
    %1050 = %1047.0;
    %1051 = %1048.0;
    (%1049, %1050, %1051)
  };
  %1052() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7293() -> Tensor[(3, 2, 16), float32] {
  %1053 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
  %1053.0
}

def @func_11055() -> Tensor[(3, 2, 16), float64] {
  @func_11053() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_10313() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1054 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1055 = cast(meta[relay.Constant][32] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %1056 = reshape(%1055, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), float64] */;
  %1057 = @func_3363(%1056) /* ty=(Tensor[(6, 11, 7), float64], Tensor[(3, 2, 16), float64]) */;
  %1058 = @func_8388() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1059 = %1054.0;
  %1060 = %1057.1;
  %1061 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
  %1062 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
  %1063 = %1058.1;
  (%1059, %1060, meta[relay.Constant][32] /* ty=Tensor[(462), float64] */, %1061, %1062, %1063)
}

def @func_999() -> Tensor[(3, 2, 16), float64] {
  %1064 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1065 = %1064.0;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  log10(%1066) /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8989() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  %1067 = @func_5200() /* ty=Tensor[(3, 2, 16), float64] */;
  %1068 = @func_7379() /* ty=Tensor[(3, 2, 16), float32] */;
  (%1067, %1068)
}

def @func_4716() -> Tensor[(3, 2, 16), int16] {
  %1069 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1069.0
}

def @func_12883() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  @func_12881() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) */
}

def @func_10175() -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %1073 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
    %1070 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %1071 = @func_10076() /* ty=Tensor[(3, 2, 16), float64] */;
    %1072 = %1070.2;
    (%1071, %1072)
  };
  %1073() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */
}

def @func_10726() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1074 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1075 = @func_3146() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1076 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1077 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1078 = %1074.3;
  %1079 = %1075.0;
  %1080 = %1076.1;
  %1081 = %1077.0;
  (%1078, %1079, %1080, %1081)
}

def @func_14870() -> (Tensor[(3, 2, 16), float64],) {
  @func_14868() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_15662() -> (Tensor[(3, 2, 16), float64],) {
  %1084 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1082 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1083 = %1082.0;
    (%1083,)
  };
  %1084() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_4718() -> Tensor[(3, 2, 16), int16] {
  @func_4716() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_16164(%var_16142: Tensor[(2520), float64], %var_16149: Tensor[(1248), uint32], %var_16150: Tensor[(210), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(12, 13, 8), uint32], Tensor[(1248), uint32], Tensor[(210), float64]) {
  %1085 = cast(%var_16142, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %1086 = reshape(%1085, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float64] */;
  %1087 = @func_5115(%1086) /* ty=(Tensor[(12, 14, 15), float64],) */;
  %1088 = cast(%var_16149, dtype="uint32") /* ty=Tensor[(1248), uint32] */;
  %1089 = cast(%var_16149, dtype="uint32") /* ty=Tensor[(1248), uint32] */;
  %1090 = cast(%var_16150, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1091 = reshape(%1088, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), uint32] */;
  %1092 = reshape(%1089, newshape=[12, 13, 8]) /* ty=Tensor[(12, 13, 8), uint32] */;
  %1093 = reshape(%1090, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1094 = @func_12204(%1091, %1092, %1093) /* ty=(Tensor[(12, 13, 8), uint32], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
  %1095 = @func_7673() /* ty=Tensor[(3, 2, 16), int16] */;
  %1096 = %1087.0;
  %1097 = %1094.0;
  (%1095, %1096, %var_16142, %1097, %var_16149, %var_16150)
}

def @func_14964() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_14962() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7186() -> Tensor[(3, 2, 16), float64] {
  %1099 = fn () -> Tensor[(3, 2, 16), float64] {
    %1098 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1098.1
  };
  %1099() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_17315(%var_17269: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 2, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  %1100 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %1101 = cast(%var_17269, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %1102 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(3, 9, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1105 = @func_8989() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */;
  %1106 = @func_9722() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) */;
  %1107 = cosh(%1100) /* ty=Tensor[(3, 9, 6), float64] */;
  %1108 = subtract(%1103, %1104) /* ty=Tensor[(3, 9, 6), float32] */;
  %1109 = %1105.0;
  %1110 = %1106.2;
  %1111 = @func_7318() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1107, %1108, %1109, %1110, %1111)
}

def @func_2785() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_14826() -> (Tensor[(3, 2, 16), float64],) {
  %1114 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1112 = @func_10806() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1113 = %1112.0;
    (%1113,)
  };
  %1114() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_11651() -> (Tensor[(3, 2, 16), float64],) {
  @func_11649() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_5024() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1115 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1116 = %1115.1;
  %1117 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1116, %1117)
}

def @func_1133() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_3406() -> Tensor[(3, 2, 16), float64] {
  %1119 = fn () -> Tensor[(3, 2, 16), float64] {
    %1118 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1118.0
  };
  %1119() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_15133(%var_15131: Tensor[(30), int16]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
  @func_15130(%var_15131) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_1363() -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %1120 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1121 = %1120.2;
  %1122 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1121, %1122)
}

def @func_7324() -> Tensor[(3, 2, 16), float64] {
  @func_7322() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_3444(%var_3442: int8) -> Tensor[(14, 1, 3), int8] {
  @func_3441(%var_3442) /* ty=Tensor[(14, 1, 3), int8] */
}

def @func_3813() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1127 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1123 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1124 = @func_2437() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1125 = %1123.1;
    %1126 = %1124.0;
    (%1125, %1126)
  };
  %1127() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_9082() -> Tensor[(3, 2, 16), float64] {
  %1128 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1128.0
}

def @func_7363(%var_7361: Tensor[(4, 3, 9), float32]) -> Tensor[(4, 3, 9), float32] {
  @func_7360(%var_7361) /* ty=Tensor[(4, 3, 9), float32] */
}

def @func_14109() -> Tensor[(210), float64] {
  %1130 = fn () -> Tensor[(210), float64] {
    %1129 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %1129.2
  };
  %1130() /* ty=Tensor[(210), float64] */
}

def @func_14627() -> Tensor[(3, 2, 16), float64] {
  %1132 = fn () -> Tensor[(3, 2, 16), float64] {
    %1131 = @func_8880() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1131.0
  };
  %1132() /* ty=Tensor[(3, 2, 16), float64] */
}

def @main(%var_17990: Tensor[(54, 10), uint32], %var_18001: Tensor[(54, 10), bool]) -> (Tensor[(3, 2, 16), float64], Tensor[(54, 10), int64]) {
  %1133 = @func_6071() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1134 = @func_11259() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 15, 12), bool], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64]) */;
  %1135 = %1134.2;
  %1136 = cast(%var_17990, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1138 = cast(%1135, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1140 = logical_or(%1138, %1139) /* ty=Tensor[(54, 10), bool] */;
  %1141 = cast(%var_18001, dtype="int64") /* ty=Tensor[(54, 10), int64] */;
  %1142 = shape_of(%1140, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1143 = cast(%1140, dtype="int64") /* ty=Tensor[(54, 10), int64] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1145 = %1133.1;
  %1146 = bitwise_or(%1143, %1144) /* ty=Tensor[(54, 10), int64] */;
  (%1145, %1146)
}

def @func_15264() -> Tensor[(3, 2, 16), float64] {
  %1148 = fn () -> Tensor[(3, 2, 16), float64] {
    %1147 = @func_10726() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1147.1
  };
  %1148() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_8881() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1155 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1149 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1150 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1151 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1152 = %1149.0;
    %1153 = %1150.0;
    %1154 = %1151.0;
    (%1152, %1153, %1154)
  };
  %1155() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_16519() -> (Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
  %1164 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) {
    %1156 = @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */;
    %1157 = cast(meta[relay.Constant][34] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %1158 = reshape(%1157, newshape=[30]) /* ty=Tensor[(30), int16] */;
    %1159 = @func_15130(%1158) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) */;
    %1160 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1161 = %1156.1;
    %1162 = %1159.2;
    %1163 = %1160.1;
    (%1161, %1162, meta[relay.Constant][34] /* ty=Tensor[(30), int16] */, %1163)
  };
  %1164() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(30), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_4044() -> Tensor[(3, 2, 16), float64] {
  %1165 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_1937() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %1165() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_4152(%var_4150: Tensor[(5, 2, 3), int16]) -> (Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) {
  @func_4149(%var_4150) /* ty=(Tensor[(5, 2, 3), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), bool]) */
}

def @func_16306() -> (Tensor[(3, 2, 16), float64],) {
  %1166 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1167 = %1166.1;
  (%1167,)
}

def @func_4642() -> (Tensor[(3, 2, 16), float64],) {
  @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_4165() -> (Tensor[(3, 2, 16), float64],) {
  %1170 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1168 = @func_4079() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1169 = %1168.0;
    (%1169,)
  };
  %1170() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_1938() -> Tensor[(3, 2, 16), float64] {
  %1171 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_1317() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %1171() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9054() -> Tensor[(3, 2, 16), int8] {
  @func_9052() /* ty=Tensor[(3, 2, 16), int8] */
}

def @func_496(%var_495: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
  %1182 = fn (%var_470: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) {
    %1172 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1173 = %1172.0;
    %1174 = cast(%var_470, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %1175 = shape_of(%1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1176 = cast(%1173, dtype="int16") /* ty=Tensor[(3, 2, 16), int16] */;
    %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1178 = cast(%var_470, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %1179 = reshape(%1178, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %1180 = right_shift(%1176, %1177) /* ty=Tensor[(3, 2, 16), int16] */;
    %1181 = @func_412(%1179) /* ty=Tensor[(3, 2, 16), int16] */;
    (%1180, %1181)
  };
  %1182(%var_495) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16]) */
}

def @func_9262() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1188 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1183 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1184 = %1183.0;
    %1185 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
    %1186 = @func_8279() /* ty=Tensor[(3, 2, 16), float64] */;
    %1187 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1184, %1185, %1186, %1187)
  };
  %1188() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_1412(%var_1410: Tensor[(3, 15, 12), uint32]) -> (Tensor[(3, 15, 12), bool], Tensor[(210), float64]) {
  @func_1409(%var_1410) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */
}

def @func_3512() -> (Tensor[(3, 2, 16), float64],) {
  @func_3510() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_5878() -> (Tensor[(3, 2, 16), float64],) {
  %1191 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1189 = @func_3812() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1190 = %1189.0;
    (%1190,)
  };
  %1191() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_322() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_7322() -> Tensor[(3, 2, 16), float64] {
  %1192 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1192.0
}

def @func_6791() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) {
  %1193 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1194 = cast(meta[relay.Constant][35] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1195 = reshape(%1194, newshape=[3, 3, 14]) /* ty=Tensor[(3, 3, 14), int16] */;
  %1196 = @func_5943(%1195) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), bool]) */;
  %1197 = %1193.2;
  %1198 = %1196.0;
  (%1197, %1198, meta[relay.Constant][35] /* ty=Tensor[(126), int16] */)
}

def @func_7075(%var_7011: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) {
  %1199 = @func_1328() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1200 = cast(%var_7011, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %1201 = erf(%1200) /* ty=Tensor[(81, 1), float32] */;
  %1202 = cast(%var_7011, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %1203 = reshape(%1202, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
  %1204 = @func_727(%1203) /* ty=(Tensor[(1, 9, 9), float32],) */;
  %1205 = %1204.0;
  %1206 = cast(%1205, dtype="uint32") /* ty=Tensor[(1, 9, 9), uint32] */;
  %1207 = shape_of(%1201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1208 = cast(%1201, dtype="uint32") /* ty=Tensor[(81, 1), uint32] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1210 = @func_4935() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1211 = cast(%1201, dtype="bool") /* ty=Tensor[(81, 1), bool] */;
  %1212 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%1205, dtype="bool") /* ty=Tensor[(1, 9, 9), bool] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1215 = @func_2640() /* ty=Tensor[(3, 2, 16), float64] */;
  %1216 = %1199.1;
  %1217 = right_shift(%1208, %1209) /* ty=Tensor[(81, ?), uint32] */;
  %1218 = %1210.1;
  %1219 = greater(%1213, %1214) /* ty=Tensor[(?, 9, 9), bool] */;
  (%1215, %1216, %1217, %1218, %1219)
}

def @func_1631() -> (Tensor[(3, 2, 16), float64],) {
  @func_1629() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13519(%var_13516: Tensor[(10, 13, 16), float32], %var_13517: Tensor[(10, 13, 16), float32], %var_13518: Tensor[(81), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(10, 13, 16), float64], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(10, 13, 16), uint64], Tensor[(81), float32], Tensor[(81), float32]) {
  %1249 = fn (%var_13417: Tensor[(10, 13, 16), float32], %var_13423: Tensor[(10, 13, 16), float32], %var_13497: Tensor[(81), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(10, 13, 16), float64], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(10, 13, 16), uint64], Tensor[(81), float32], Tensor[(81), float32]) {
    %1220 = cast(%var_13423, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1221 = shape_of(%var_13417, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1222 = cast(%var_13417, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1224 = @func_5404() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %1225 = cast(%var_13417, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1226 = acos(%1225) /* ty=Tensor[(10, 13, 16), float32] */;
    %1227 = cast(%1226, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1228 = cast(meta[relay.Constant][36] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
    %1229 = reshape(%1228, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float64] */;
    %1230 = @func_5115(%1229) /* ty=(Tensor[(12, 14, 15), float64],) */;
    %1231 = @func_3676() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 3, 14), float32]) */;
    %1232 = @func_10431() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1233 = cast(%var_13417, dtype="uint64") /* ty=Tensor[(10, 13, 16), uint64] */;
    %1234 = shape_of(%1226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1235 = cast(%1226, dtype="uint64") /* ty=Tensor[(10, 13, 16), uint64] */;
    %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1237 = cast(%var_13497, dtype="float32") /* ty=Tensor[(81), float32] */;
    %1238 = reshape(%1237, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %1239 = @func_8682(%1238) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(?, 9, 9), bool], Tensor[(81), float32]) */;
    %1240 = mod(%1222, %1223) /* ty=Tensor[(10, 13, 16), float32] */;
    %1241 = %1224.0;
    %1242 = asin(%1227) /* ty=Tensor[(10, 13, 16), float64] */;
    %1243 = %1230.0;
    %1244 = %1231.1;
    %1245 = @func_4585() /* ty=Tensor[(3, 2, 16), float64] */;
    %1246 = %1232.0;
    %1247 = minimum(%1235, %1236) /* ty=Tensor[(10, 13, 16), uint64] */;
    %1248 = %1239.2;
    (%1240, %1241, %1242, %1243, meta[relay.Constant][36] /* ty=Tensor[(2520), float64] */, %1244, %1245, %1246, %1247, %1248, %var_13497)
  };
  %1249(%var_13516, %var_13517, %var_13518) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(10, 13, 16), float64], Tensor[(12, 14, 15), float64], Tensor[(2520), float64], Tensor[(3, 3, 14), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(10, 13, 16), uint64], Tensor[(81), float32], Tensor[(81), float32]) */
}

def @func_10944() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  %1253 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
    %1250 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
    %1251 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
    %1252 = %1250.4;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_13258() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1258 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1254 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1255 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1256 = %1254.0;
    %1257 = %1255.4;
    (%1256, %1257)
  };
  %1258() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_8165() -> Tensor[(3, 2, 16), float64] {
  %1260 = fn () -> Tensor[(3, 2, 16), float64] {
    %1259 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1259.0
  };
  %1260() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5118(%var_5116: Tensor[(12, 14, 15), float64]) -> (Tensor[(12, 14, 15), float64],) {
  @func_5115(%var_5116) /* ty=(Tensor[(12, 14, 15), float64],) */
}

def @func_13956() -> (Tensor[(3, 2, 16), float64], Tensor[(462), float64]) {
  @func_13954() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(462), float64]) */
}

def @func_17133(%var_17132: Tensor[(9, 16, 4), float32]) -> (Tensor[(9, 16, 4), float32], Tensor[(3, 2, 16), float32]) {
  %1264 = fn (%var_17102: Tensor[(9, 16, 4), float32]) -> (Tensor[(9, 16, 4), float32], Tensor[(3, 2, 16), float32]) {
    %1261 = cast(%var_17102, dtype="float32") /* ty=Tensor[(9, 16, 4), float32] */;
    %1262 = cosh(%1261) /* ty=Tensor[(9, 16, 4), float32] */;
    %1263 = @func_10044() /* ty=Tensor[(3, 2, 16), float32] */;
    (%1262, %1263)
  };
  %1264(%var_17132) /* ty=(Tensor[(9, 16, 4), float32], Tensor[(3, 2, 16), float32]) */
}

def @func_6438(%var_6437: Tensor[(3, 5, 5), float32]) -> Tensor[(3, 5, 5), float32] {
  %1266 = fn (%var_6433: Tensor[(3, 5, 5), float32]) -> Tensor[(3, 5, 5), float32] {
    %1265 = cast(%var_6433, dtype="float32") /* ty=Tensor[(3, 5, 5), float32] */;
    erf(%1265) /* ty=Tensor[(3, 5, 5), float32] */
  };
  %1266(%var_6437) /* ty=Tensor[(3, 5, 5), float32] */
}

def @func_15399() -> Tensor[(3, 2, 16), float64] {
  %1267 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_2640() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %1267() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_12881() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  %1268 = cast(meta[relay.Constant][37] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1269 = cast(meta[relay.Constant][37] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %1270 = reshape(%1268, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1271 = reshape(%1269, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint16] */;
  %1272 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  %1273 = @func_7849(%1270, %1271) /* ty=Tensor[(12, 2, 5), float64] */;
  (%1272, %1273, meta[relay.Constant][37] /* ty=Tensor[(120), uint16] */)
}

def @func_839(%var_800: Tensor[(96), float64], %var_824: Tensor[(210), float64]) -> (Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1274 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 5, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 3), float32] */;
  %1275 = cast(%var_800, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1276 = reshape(%1275, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1277 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1278 = cast(%var_824, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1279 = reshape(%1278, newshape=[3, 14, 5]) /* ty=Tensor[(3, 14, 5), float64] */;
  %1280 = @func_586(%1279) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) */;
  %1281 = cast(%var_800, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1282 = reshape(%1281, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1283 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1284 = atan(%1274) /* ty=Tensor[(15, 5, 3), float32] */;
  %1285 = @func_750(%1276) /* ty=Tensor[(3, 2, 16), int16] */;
  %1286 = %1277.0;
  %1287 = %1280.0;
  %1288 = @func_412(%1282) /* ty=Tensor[(3, 2, 16), int16] */;
  %1289 = %1283.0;
  (%1284, %1285, %var_800, %1286, %1287, %var_824, %1288, %1289)
}

def @func_5626() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) {
  @func_5624() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32]) */
}

def @func_16891() -> Tensor[(3, 2, 16), float64] {
  @func_16889() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_3219() -> (Tensor[(3, 2, 16), float64],) {
  %1292 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1290 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1291 = %1290.0;
    (%1291,)
  };
  %1292() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_14306(%var_14305: Tensor[(1092), int64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1092), int64]) {
  %1301 = fn (%var_14298: Tensor[(1092), int64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1092), int64]) {
    %1293 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1294 = cast(%var_14298, dtype="int64") /* ty=Tensor[(1092), int64] */;
    %1295 = cast(%var_14298, dtype="int64") /* ty=Tensor[(1092), int64] */;
    %1296 = reshape(%1294, newshape=[13, 7, 12]) /* ty=Tensor[(13, 7, 12), int64] */;
    %1297 = reshape(%1295, newshape=[13, 7, 12]) /* ty=Tensor[(13, 7, 12), int64] */;
    %1298 = @func_1992(%1296, %1297) /* ty=(Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1299 = %1293.0;
    %1300 = %1298.1;
    (%1299, %1300, %var_14298)
  };
  %1301(%var_14305) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(1092), int64]) */
}

def @func_16867() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1306 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1302 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
    %1303 = @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1304 = %1302.1;
    %1305 = %1303.1;
    (%1304, %1305)
  };
  %1306() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_9184() -> (Tensor[(3, 2, 16), float64],) {
  %1307 = @func_5797() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1308 = %1307.0;
  (%1308,)
}

def @func_8318() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1313 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1309 = @func_5576() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1310 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1311 = %1309.0;
    %1312 = %1310.0;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_14868() -> (Tensor[(3, 2, 16), float64],) {
  %1314 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1314,)
}

def @func_4331() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
  %1319 = fn () -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
    %1315 = @func_1515() /* ty=(Tensor[(3, 2, 16), float32],) */;
    %1316 = @func_1152() /* ty=(Tensor[(3, 2, 16), int16],) */;
    %1317 = %1315.0;
    %1318 = %1316.0;
    (%1317, %1318)
  };
  %1319() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */
}

def @func_17547() -> (Tensor[(3, 2, 16), float64], Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_17545() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_6707() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1324 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1320 = @func_2041() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1321 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1322 = %1320.1;
    %1323 = %1321.1;
    (%1322, %1323)
  };
  %1324() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_502() -> (Tensor[(3, 2, 16), float64],) {
  @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_7381() -> Tensor[(3, 2, 16), float32] {
  @func_7379() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_16367() -> (Tensor[(3, 2, 16), float64],) {
  %1325 = @func_8880() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_10224() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_10315() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_7285() -> Tensor[(3, 2, 16), float64] {
  %1327 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1327.0
}

def @func_1293() -> Tensor[(3, 2, 16), float64] {
  %1329 = fn () -> Tensor[(3, 2, 16), float64] {
    %1328 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1328.1
  };
  %1329() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_6032() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  @func_6030() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */
}

def @func_14557() -> (Tensor[(3, 2, 16), float64],) {
  %1331 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1330 = @func_13013() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1330,)
  };
  %1331() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_3062() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1344 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1332 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1333 = @func_2868() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */;
    %1334 = cast(meta[relay.Constant][39] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
    %1335 = reshape(%1334, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
    %1336 = @func_1409(%1335) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
    %1337 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1338 = @func_2976() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1339 = %1332.2;
    %1340 = %1333.3;
    %1341 = %1336.1;
    %1342 = %1337.0;
    %1343 = %1338.0;
    (%1339, %1340, %1341, meta[relay.Constant][39] /* ty=Tensor[(54, 10), uint32] */, %1342, %1343)
  };
  %1344() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(54, 10), uint32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_673() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
  %1345 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1346 = %1345.1;
  %1347 = cast(%1346, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1348 = reshape(%1347, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1349 = @func_412(%1348) /* ty=Tensor[(3, 2, 16), int16] */;
  (%1346, %1349)
}

def @func_5576() -> (Tensor[(3, 2, 16), float64],) {
  %1350 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1350,)
}

def @func_6147() -> (Tensor[(3, 2, 16), float64],) {
  %1353 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1351 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1352 = %1351.0;
    (%1352,)
  };
  %1353() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_11350(%var_11348: Tensor[(15, 5, 10), float32]) -> Tensor[(15, 5, 10), float32] {
  @func_11347(%var_11348) /* ty=Tensor[(15, 5, 10), float32] */
}

def @func_394() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1354 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1355 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1356 = %1354.0;
  %1357 = %1355.0;
  (%1356, %1357)
}

def @func_2320() -> (Tensor[(3, 2, 16), int16],) {
  @func_2318() /* ty=(Tensor[(3, 2, 16), int16],) */
}

def @func_3302(%var_3301: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %1367 = fn (%var_3280: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
    %1358 = @func_1288() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1359 = cast(%var_3280, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
    %1360 = reshape(%1359, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float32] */;
    %1361 = @func_727(%1360) /* ty=(Tensor[(1, 9, 9), float32],) */;
    %1362 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1363 = %1358.0;
    %1364 = %1361.0;
    %1365 = @func_1576() /* ty=Tensor[(3, 2, 16), float32] */;
    %1366 = %1362.1;
    (%1363, %1364, %var_3280, %1365, %1366)
  };
  %1367(%var_3301) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(1, 9, 9), float32], Tensor[(81, 1), float32], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_3441(%var_3429: int8) -> Tensor[(14, 1, 3), int8] {
  %1368 = cast(%var_3429, dtype="int8") /* ty=int8 */;
  %1369 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 1, 3), int8] */, dtype="int8") /* ty=Tensor[(14, 1, 3), int8] */;
  add(%1368, %1369) /* ty=Tensor[(14, 1, 3), int8] */
}

def @func_1675() -> Tensor[(3, 2, 16), float64] {
  %1370 = @func_1605() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1370.0
}

def @func_13613(%var_13610: Tensor[(30), int16], %var_13611: bool, %var_13612: Tensor[(13), bool]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(81), bool], bool, Tensor[(1008), float64], bool, Tensor[(13), bool]) {
  @func_13608(%var_13610, %var_13611, %var_13612) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(30), int16], Tensor[(81), bool], bool, Tensor[(1008), float64], bool, Tensor[(13), bool]) */
}

def @func_15365() -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %1374 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
    %1371 = @func_9379() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %1372 = @func_13073() /* ty=Tensor[(3, 2, 16), float64] */;
    %1373 = %1371.2;
    (%1372, %1373)
  };
  %1374() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */
}

def @func_14962() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1375 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1376 = @func_7540() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1377 = %1375.0;
  %1378 = %1376.2;
  (%1377, %1378)
}

def @func_12821() -> (Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) {
  @func_12819() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(12, 2, 5), float64], Tensor[(120), uint16]) */
}

def @func_2886() -> Tensor[(3, 2, 16), int16] {
  %1380 = fn () -> Tensor[(3, 2, 16), int16] {
    %1379 = @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
    %1379.0
  };
  %1380() /* ty=Tensor[(3, 2, 16), int16] */
}

def @func_7078(%var_7076: Tensor[(81, 1), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) {
  @func_7075(%var_7076) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81, ?), uint32], Tensor[(3, 2, 16), float64], Tensor[(?, 9, 9), bool]) */
}

def @func_11783(%var_11781: Tensor[(4, 14, 9), float64]) -> (Tensor[(81), bool], Tensor[(4, 14, 9), uint64]) {
  @func_11780(%var_11781) /* ty=(Tensor[(81), bool], Tensor[(4, 14, 9), uint64]) */
}

def @func_280() -> (Tensor[(3, 2, 16), float64],) {
  @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_1131() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1381 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1382 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1383 = %1381.2;
  %1384 = %1382.2;
  (%1383, %1384)
}

def @func_198() -> (Tensor[(3, 2, 16), float64],) {
  @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_2278() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_2276() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_8280() -> Tensor[(3, 2, 16), float64] {
  %1386 = fn () -> Tensor[(3, 2, 16), float64] {
    %1385 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1385.0
  };
  %1386() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_7779(%var_7777: Tensor[(81), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  @func_7776(%var_7777) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_500() -> (Tensor[(3, 2, 16), float64],) {
  %1387 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1388 = %1387.0;
  (%1388,)
}

def @func_11866() -> (Tensor[(3, 2, 16), float64],) {
  %1391 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1389 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1390 = %1389.0;
    (%1390,)
  };
  %1391() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_5638() -> Tensor[(3, 2, 16), float64] {
  %1392 = fn () -> Tensor[(3, 2, 16), float64] {
    @func_2721() /* ty=Tensor[(3, 2, 16), float64] */
  };
  %1392() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_5467(%var_5416: Tensor[(1, 9, 10), uint32], %var_5417: Tensor[(16, 9, 10), uint32], %var_5428: Tensor[(5, 210), float32], %var_5432: Tensor[(96), float64], %var_5437: Tensor[(210, 1), float64]) -> (Tensor[(16, 9, 10), bool], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(210, 1), float64], Tensor[(3, 2, 16), int16], Tensor[(5, 210), float64], Tensor[(16, 9, 10), float64]) {
  %1393 = cast(%var_5416, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
  %1394 = cast(%var_5417, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %1395 = cast(%var_5432, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1396 = reshape(%1395, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1397 = @func_412(%1396) /* ty=Tensor[(3, 2, 16), int16] */;
  %1398 = cast(%1397, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1399 = cast(%var_5437, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1400 = reshape(%1398, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1401 = reshape(%1399, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1402 = @func_839(%1400, %1401) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1403 = cast(%1397, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1404 = reshape(%1403, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1405 = cast(%var_5428, dtype="float32") /* ty=Tensor[(5, 210), float32] */;
  %1406 = reshape(%1405, newshape=[7, 10, 15]) /* ty=Tensor[(7, 10, 15), float32] */;
  %1407 = @func_936(%1406) /* ty=Tensor[(7, 10, 15), float32] */;
  %1408 = cast(%1407, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %1409 = shape_of(%var_5428, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1410 = cast(%var_5428, dtype="float64") /* ty=Tensor[(5, 210), float64] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1412 = cast(%var_5417, dtype="float64") /* ty=Tensor[(16, 9, 10), float64] */;
  %1413 = sin(%1412) /* ty=Tensor[(16, 9, 10), float64] */;
  %1414 = cast(%1413, dtype="float64") /* ty=Tensor[(16, 9, 10), float64] */;
  %1415 = greater(%1393, %1394) /* ty=Tensor[(16, 9, 10), bool] */;
  %1416 = %1402.3;
  %1417 = @func_750(%1404) /* ty=Tensor[(3, 2, 16), int16] */;
  %1418 = divide(%1410, %1411) /* ty=Tensor[(5, 210), float64] */;
  %1419 = cos(%1414) /* ty=Tensor[(16, 9, 10), float64] */;
  (%1415, %1397, %var_5432, %1416, %var_5437, %1417, %1418, %1419)
}

def @func_2318() -> (Tensor[(3, 2, 16), int16],) {
  %1420 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
  (%1420,)
}

def @func_1995(%var_1993: Tensor[(13, 7, 12), int64], %var_1994: Tensor[(13, 7, 12), int64]) -> (Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1430 = fn (%var_1961: Tensor[(13, 7, 12), int64], %var_1962: Tensor[(13, 7, 12), int64]) -> (Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1421 = cast(%var_1962, dtype="bool") /* ty=Tensor[(13, 7, 12), bool] */;
    %1422 = shape_of(%var_1961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1423 = cast(%var_1961, dtype="bool") /* ty=Tensor[(13, 7, 12), bool] */;
    %1424 = dyn.reshape(%1421, %1422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1425 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
    %1426 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1427 = not_equal(%1423, %1424) /* ty=Tensor[(13, 7, 12), bool] */;
    %1428 = %1425.0;
    %1429 = %1426.0;
    (%1427, %1428, %1429)
  };
  %1430(%var_1993, %var_1994) /* ty=(Tensor[(13, 7, 12), bool], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_12949() -> (Tensor[(3, 2, 16), float64],) {
  @func_12947() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_1886() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1434 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1431 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1432 = @func_767() /* ty=Tensor[(3, 2, 16), float64] */;
    %1433 = %1431.0;
    (%1432, %1433)
  };
  %1434() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_3892() -> (Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) {
  @func_3890() /* ty=(Tensor[(3, 2, 16), int8], Tensor[(3, 2, 16), float64]) */
}

def @func_2869() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
  %1444 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) {
    %1435 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1436 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1437 = @func_2783() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
    %1438 = %1435.0;
    %1439 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    %1440 = %1436.0;
    %1441 = @func_2721() /* ty=Tensor[(3, 2, 16), float64] */;
    %1442 = @func_1914() /* ty=Tensor[(3, 2, 16), int16] */;
    %1443 = %1437.0;
    (%1438, %1439, %1440, %1441, %1442, %1443)
  };
  %1444() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(81), float32]) */
}

def @func_1271() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_1269() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_675() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) {
  @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */
}

def @func_14275() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1449 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
    %1445 = @func_10222() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float32], Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */;
    %1446 = @func_4940() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1447 = %1445.0;
    %1448 = %1446.0;
    (%1447, %1448)
  };
  %1449() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_1930(%var_1928: Tensor[(2, 2, 15), int16], %var_1929: Tensor[(2, 2, 15), int16]) -> (Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) {
  @func_1926(%var_1928, %var_1929) /* ty=(Tensor[(2, 2, 15), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_588(%var_587: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) {
  %1456 = fn (%var_562: Tensor[(3, 14, 5), float64]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) {
    %1450 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1451 = cast(%var_562, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
    %1452 = acos(%1451) /* ty=Tensor[(3, 14, 5), float64] */;
    %1453 = cast(%1452, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
    %1454 = %1450.0;
    %1455 = sigmoid(%1453) /* ty=Tensor[(3, 14, 5), float64] */;
    (%1454, %1455)
  };
  %1456(%var_587) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 14, 5), float64]) */
}

def @func_12770() -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
  %1460 = fn () -> (Tensor[(210), float64], Tensor[(3, 2, 16), float64]) {
    %1457 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1458 = @func_9930() /* ty=Tensor[(210), float64] */;
    %1459 = %1457.0;
    (%1458, %1459)
  };
  %1460() /* ty=(Tensor[(210), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_10922() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1461 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1462 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1463 = @func_5877() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1464 = %1461.1;
  %1465 = %1462.0;
  %1466 = %1463.0;
  (%1464, %1465, %1466)
}

def @func_5697() -> (Tensor[(81), int8], Tensor[(3, 2, 16), float64]) {
  @func_5695() /* ty=(Tensor[(81), int8], Tensor[(3, 2, 16), float64]) */
}

def @func_17545() -> (Tensor[(3, 2, 16), float64], Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1467 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1468 = %1467.0;
  %1469 = cast(%1468, dtype="uint64") /* ty=Tensor[(3, 2, 16), uint64] */;
  %1470 = reshape(%1469, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint64] */;
  %1471 = @func_13937(%1470) /* ty=(Tensor[(16, 1, 6), uint64], Tensor[(3, 2, 16), float64]) */;
  %1472 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1473 = @func_10358() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1474 = %1471.0;
  %1475 = %1472.0;
  %1476 = %1473.0;
  (%1468, %1474, %1475, %1476)
}

def @func_2995(%var_2994: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(540), uint32]) {
  %1482 = fn (%var_2986: Tensor[(540), uint32]) -> (Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(540), uint32]) {
    %1477 = cast(%var_2986, dtype="uint32") /* ty=Tensor[(540), uint32] */;
    %1478 = reshape(%1477, newshape=[3, 15, 12]) /* ty=Tensor[(3, 15, 12), uint32] */;
    %1479 = @func_1409(%1478) /* ty=(Tensor[(3, 15, 12), bool], Tensor[(210), float64]) */;
    %1480 = @func_2101() /* ty=Tensor[(3, 2, 16), int16] */;
    %1481 = %1479.1;
    (%1480, %1481, %var_2986)
  };
  %1482(%var_2994) /* ty=(Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(540), uint32]) */
}

def @func_2042() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1486 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1483 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1484 = %1483.0;
    %1485 = @func_1292() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1484, %1485)
  };
  %1486() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_6515() -> (Tensor[(8, 15, 8), float32], Tensor[(8, 15, 8), float32]) {
  %1491 = fn () -> (Tensor[(8, 15, 8), float32], Tensor[(8, 15, 8), float32]) {
    %1487 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
    %1488 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
    %1489 = atanh(%1487) /* ty=Tensor[(8, 15, 8), float32] */;
    %1490 = log2(%1488) /* ty=Tensor[(8, 15, 8), float32] */;
    (%1489, %1490)
  };
  %1491() /* ty=(Tensor[(8, 15, 8), float32], Tensor[(8, 15, 8), float32]) */
}

def @func_8813() -> Tensor[(3, 2, 16), float64] {
  %1493 = fn () -> Tensor[(3, 2, 16), float64] {
    %1492 = @func_634() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1492.0
  };
  %1493() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_11798() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1494 = @func_4043() /* ty=Tensor[(3, 2, 16), float64] */;
  %1495 = @func_7322() /* ty=Tensor[(3, 2, 16), float64] */;
  (%1494, %1495)
}

def @func_13545() -> (Tensor[(3, 2, 16), float64],) {
  %1496 = @func_1865() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1497 = %1496.3;
  (%1497,)
}

def @func_6574() -> Tensor[(3, 2, 16), float64] {
  @func_5161() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_2377() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_13686() -> (Tensor[(3, 2, 16), float64],) {
  %1500 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1498 = @func_6103() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1499 = %1498.0;
    (%1499,)
  };
  %1500() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_10011(%var_10009: Tensor[(6, 96), float32]) -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) {
  @func_10008(%var_10009) /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(8, 6, 12), int64], Tensor[(6, 96), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */
}

def @func_16359() -> (Tensor[(3, 2, 16), float64],) {
  %1503 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1501 = @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1502 = %1501.1;
    (%1502,)
  };
  %1503() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_11738() -> (Tensor[(3, 2, 16), float32],) {
  @func_11736() /* ty=(Tensor[(3, 2, 16), float32],) */
}

def @func_7139() -> Tensor[(3, 2, 16), float32] {
  %1504 = @func_6246() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1504.0
}

def @func_12382(%var_12379: Tensor[(2, 6, 6), float64], %var_12380: Tensor[(2, 6, 6), float64], %var_12381: Tensor[(2, 6, 6), float64]) -> (Tensor[(2, 6, 6), float64], Tensor[(2, 6, 6), float32]) {
  @func_12377(%var_12379, %var_12380, %var_12381) /* ty=(Tensor[(2, 6, 6), float64], Tensor[(2, 6, 6), float32]) */
}

def @func_11330(%var_11329: Tensor[(6, 10, 2), uint32]) -> (Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
  %1514 = fn (%var_11294: Tensor[(6, 10, 2), uint32]) -> (Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) {
    %1505 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 10, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 10, 2), uint32] */;
    %1506 = shape_of(%var_11294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1507 = cast(%var_11294, dtype="uint32") /* ty=Tensor[(6, 10, 2), uint32] */;
    %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1509 = @func_3218() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1510 = @func_10346() /* ty=(Tensor[(81), float32],) */;
    %1511 = bitwise_or(%1507, %1508) /* ty=Tensor[(6, 10, 2), uint32] */;
    %1512 = %1509.0;
    %1513 = %1510.0;
    (%1511, %1512, %1513)
  };
  %1514(%var_11329) /* ty=(Tensor[(6, 10, 2), uint32], Tensor[(3, 2, 16), float64], Tensor[(81), float32]) */
}

def @func_768() -> Tensor[(3, 2, 16), float64] {
  %1516 = fn () -> Tensor[(3, 2, 16), float64] {
    %1515 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1515.0
  };
  %1516() /* ty=Tensor[(3, 2, 16), float64] */
}

def @func_9469() -> (Tensor[(3, 2, 16), float64],) {
  %1519 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1517 = @func_3124() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1518 = %1517.2;
    (%1518,)
  };
  %1519() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_2375() -> (Tensor[(81), float32], Tensor[(3, 2, 16), float64]) {
  %1520 = @func_1047() /* ty=(Tensor[(1, 9, 9), float32], Tensor[(81), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1521 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1522 = %1520.1;
  %1523 = %1521.0;
  (%1522, %1523)
}

def @func_1409(%var_1392: Tensor[(3, 15, 12), uint32]) -> (Tensor[(3, 15, 12), bool], Tensor[(210), float64]) {
  %1524 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 15, 12), uint32] */, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %1525 = shape_of(%var_1392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1526 = cast(%var_1392, dtype="bool") /* ty=Tensor[(3, 15, 12), bool] */;
  %1527 = dyn.reshape(%1524, %1525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1528 = @func_923() /* ty=(Tensor[(3, 2, 16), bool], Tensor[(3, 2, 16), int16], Tensor[(210), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16]) */;
  %1529 = greater(%1526, %1527) /* ty=Tensor[(3, 15, 12), bool] */;
  %1530 = %1528.2;
  (%1529, %1530)
}

def @func_1665() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1537 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1531 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1532 = %1531.0;
    %1533 = cast(%1532, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %1534 = @func_196() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1535 = sqrt(%1533) /* ty=Tensor[(3, 2, 16), float64] */;
    %1536 = %1534.0;
    (%1535, %1536)
  };
  %1537() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_843(%var_841: Tensor[(96), float64], %var_842: Tensor[(210), float64]) -> (Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  @func_839(%var_841, %var_842) /* ty=(Tensor[(15, 5, 3), float32], Tensor[(3, 2, 16), int16], Tensor[(96), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(210), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */
}

def @func_14858() -> Tensor[(3, 2, 16), float64] {
  %1538 = @func_12477() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1538.0
}

def @func_1577() -> Tensor[(3, 2, 16), float32] {
  %1542 = fn () -> Tensor[(3, 2, 16), float32] {
    %1539 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1540 = %1539.1;
    %1541 = cast(%1540, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
    sinh(%1541) /* ty=Tensor[(3, 2, 16), float32] */
  };
  %1542() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_9722() -> (Tensor[(3, 2, 16), float64], Tensor[(8, 6, 16), float64], Tensor[(768), float64], Tensor[(3, 2, 16), float64]) {
  %1543 = @func_9428() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1544 = cast(meta[relay.Constant][44] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1545 = reshape(%1544, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), float64] */;
  %1546 = @func_6678(%1545) /* ty=(Tensor[(8, 6, 16), float64],) */;
  %1547 = @func_6185() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1548 = %1543.0;
  %1549 = %1546.0;
  %1550 = %1547.0;
  (%1548, %1549, meta[relay.Constant][44] /* ty=Tensor[(768), float64] */, %1550)
}

def @func_13203() -> (Tensor[(3, 2, 16), float64],) {
  %1552 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1551 = @func_13013() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1551,)
  };
  %1552() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13547() -> (Tensor[(3, 2, 16), float64],) {
  @func_13545() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_17917() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1553 = @func_13045() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1554 = %1553.1;
  %1555 = cast(%1554, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1556 = reshape(%1555, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1557 = @func_2375() /* ty=(Tensor[(81), float32], Tensor[(3, 2, 16), float64]) */;
  %1558 = @func_7285() /* ty=Tensor[(3, 2, 16), float64] */;
  %1559 = @func_412(%1556) /* ty=Tensor[(3, 2, 16), int16] */;
  %1560 = @func_10076() /* ty=Tensor[(3, 2, 16), float64] */;
  %1561 = %1557.1;
  (%1554, %1558, %1559, %1560, %1561)
}

def @func_1329() -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
  %1565 = fn () -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) {
    %1562 = @func_673() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16]) */;
    %1563 = %1562.0;
    %1564 = @func_1222() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1563, %1564)
  };
  %1565() /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_17851() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1572 = fn () -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
    %1566 = @func_5588() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1567 = @func_16696() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
    %1568 = @func_5161() /* ty=Tensor[(3, 2, 16), float64] */;
    %1569 = %1566.0;
    %1570 = @func_999() /* ty=Tensor[(3, 2, 16), float64] */;
    %1571 = %1567.2;
    (%1568, %1569, %1570, %1571)
  };
  %1572() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_10808() -> (Tensor[(3, 2, 16), float64],) {
  @func_10806() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_13714() -> Tensor[(3, 2, 16), float64] {
  %1573 = @func_1664() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1573.0
}

def @func_17951() -> (Tensor[(3, 2, 16), int16], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64]) {
  %1580 = fn () -> (Tensor[(3, 2, 16), int16], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64]) {
    %1574 = cast(meta[relay.Constant][45] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
    %1575 = reshape(%1574, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), float32] */;
    %1576 = @func_4640() /* ty=(Tensor[(3, 2, 16), float64],) */;
    %1577 = @func_7576() /* ty=Tensor[(3, 2, 16), int16] */;
    %1578 = @func_11347(%1575) /* ty=Tensor[(15, 5, 10), float32] */;
    %1579 = %1576.0;
    (%1577, %1578, meta[relay.Constant][45] /* ty=Tensor[(750), float32] */, %1579)
  };
  %1580() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(15, 5, 10), float32], Tensor[(750), float32], Tensor[(3, 2, 16), float64]) */
}

def @func_16775() -> (Tensor[(3, 2, 16), float64],) {
  @func_16773() /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_2276() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1581 = @func_394() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1582 = @func_1885() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1583 = @func_278() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1584 = @func_320() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64]) */;
  %1585 = %1581.1;
  %1586 = cast(%1585, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %1587 = reshape(%1586, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %1588 = @func_1296() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1589 = %1582.1;
  %1590 = %1583.0;
  %1591 = %1584.1;
  %1592 = @func_750(%1587) /* ty=Tensor[(3, 2, 16), int16] */;
  %1593 = %1588.0;
  (%1585, %1589, %1590, %1591, %1592, %1593)
}

def @func_10044() -> Tensor[(3, 2, 16), float32] {
  @func_7379() /* ty=Tensor[(3, 2, 16), float32] */
}

def @func_13954() -> (Tensor[(3, 2, 16), float64], Tensor[(462), float64]) {
  %1594 = @func_6706() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1595 = @func_10313() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(462), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1596 = %1594.0;
  %1597 = %1595.2;
  (%1596, %1597)
}

def @func_3124() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  %1598 = @func_1131() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) */;
  %1599 = @func_500() /* ty=(Tensor[(3, 2, 16), float64],) */;
  %1600 = @func_1317() /* ty=Tensor[(3, 2, 16), float64] */;
  %1601 = %1598.1;
  %1602 = %1599.0;
  (%1600, %1601, %1602)
}

def @func_12158() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64]) {
  %1603 = @func_6884() /* ty=(Tensor[(3, 2, 16), int16],) */;
  %1604 = @func_4070() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */;
  %1605 = %1603.0;
  %1606 = %1604.1;
  (%1605, %1606)
}

def @func_6793() -> (Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) {
  @func_6791() /* ty=(Tensor[(3, 2, 16), int16], Tensor[(3, 2, 16), float64], Tensor[(126), int16]) */
}

def @func_6550() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_6548() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_6680(%var_6679: Tensor[(8, 6, 16), float64]) -> (Tensor[(8, 6, 16), float64],) {
  %1609 = fn (%var_6674: Tensor[(8, 6, 16), float64]) -> (Tensor[(8, 6, 16), float64],) {
    %1607 = cast(%var_6674, dtype="float64") /* ty=Tensor[(8, 6, 16), float64] */;
    %1608 = rsqrt(%1607) /* ty=Tensor[(8, 6, 16), float64] */;
    (%1608,)
  };
  %1609(%var_6679) /* ty=(Tensor[(8, 6, 16), float64],) */
}

def @func_5026() -> (Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) {
  @func_5024() /* ty=(Tensor[(3, 2, 16), float64], Tensor[(3, 2, 16), float64]) */
}

def @func_14003() -> (Tensor[(3, 2, 16), float64],) {
  %1611 = fn () -> (Tensor[(3, 2, 16), float64],) {
    %1610 = @func_8360() /* ty=Tensor[(3, 2, 16), float64] */;
    (%1610,)
  };
  %1611() /* ty=(Tensor[(3, 2, 16), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen554/build/output.py", line 5952, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:32:05] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


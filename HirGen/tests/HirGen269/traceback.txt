==========mod==========
#[version = "0.0.5"]
def @func_3764(%var_3760: Tensor[(105), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) {
  %0 = cast(%var_3760, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1 = reshape(%0, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float32] */;
  %2 = @func_3553(%1) /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) */;
  %3 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %4 = %2.3;
  (%3, %4, %var_3760)
}

def @func_156() -> Tensor[(1, 9, 8), float32] {
  %5 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %5.1
}

def @func_1289() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %6 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %7 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %8 = %6.0;
  %9 = %7.0;
  (%8, %9)
}

def @func_2493() -> Tensor[(750), int32] {
  %10 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %11 = %10.4;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(750), float32] */, dtype="int32") /* ty=Tensor[(750), int32] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %14 = cast(%11, dtype="int32") /* ty=Tensor[(750), int32] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), int32] */;
  minimum(%14, %15) /* ty=Tensor[(750), int32] */
}

def @func_2580(%var_2543: Tensor[(7, 8, 13), float32], %var_2551: Tensor[(840), float32], %var_2557: Tensor[(8, 384), float64]) -> (Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) {
  %16 = cast(%var_2543, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
  %17 = cast(%var_2551, dtype="float32") /* ty=Tensor[(840), float32] */;
  %18 = reshape(%17, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %19 = @func_176(%18) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %20 = cast(%var_2557, dtype="float64") /* ty=Tensor[(8, 384), float64] */;
  %21 = reshape(%20, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %22 = @func_1651(%21) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %23 = sqrt(%16) /* ty=Tensor[(7, 8, 13), float32] */;
  %24 = %19.1;
  %25 = %22.2;
  (%23, %24, %var_2551, %25, %var_2557)
}

def @func_786() -> Tensor[(12, 9, 8), bool] {
  @func_226() /* ty=Tensor[(12, 9, 8), bool] */
}

def @func_4929(%var_4927: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(750), float32], Tensor[(504, 2), float32], Tensor[(750), float32]) {
  %26 = @func_1911() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(504, 2), float32] */, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %28 = cast(%var_4927, dtype="float32") /* ty=Tensor[(750), float32] */;
  %29 = reshape(%27, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %30 = reshape(%28, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %31 = @func_2273(%29, %30) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) */;
  %32 = %26.0;
  %33 = %31.4;
  (%32, %33, meta[relay.Constant][1] /* ty=Tensor[(504, 2), float32] */, %var_4927)
}

def @func_1984(%var_1954: Tensor[(1536, 2), float64]) -> (Tensor[(1536, 2), float32], Tensor[(11, 6, 5), float32], Tensor[(330), float64], Tensor[(1, 9, 8), float32]) {
  %34 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %35 = %34.2;
  %36 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(1536, 2), uint64] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(2), int32] */;
  %38 = cast(%35, dtype="uint64") /* ty=Tensor[(1536, 2), uint64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %40 = bitwise_or(%38, %39) /* ty=Tensor[(1536, 2), uint64] */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(1536, 2), uint64] */, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(2), int32] */;
  %43 = cast(%40, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float64] */, dtype="float64") /* ty=Tensor[(330), float64] */;
  %46 = reshape(%45, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
  %47 = add(%43, %44) /* ty=Tensor[(1536, 2), float32] */;
  %48 = @func_1387(%46) /* ty=Tensor[(11, 6, 5), float32] */;
  %49 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  (%47, %48, meta[relay.Constant][3] /* ty=Tensor[(330), float64] */, %49)
}

def @func_5259() -> (Tensor[(1, 9, 8), float32],) {
  %50 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %51 = %50.0;
  (%51,)
}

def @func_4720(%var_4645: Tensor[(6, 7, 1), float32], %var_4694: Tensor[(6, 7, 14), float32]) -> (Tensor[(6, 7, 1), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float32], Tensor[(3072), float64], Tensor[(6, 7, 14), float32]) {
  %52 = cast(%var_4645, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
  %53 = @func_3308() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %55 = reshape(%54, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %56 = cast(%var_4645, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %57 = tan(%56) /* ty=Tensor[(6, 7, 1), float64] */;
  %58 = cast(%57, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
  %59 = log(%58) /* ty=Tensor[(6, 7, 1), float32] */;
  %60 = cast(%59, dtype="uint16") /* ty=Tensor[(6, 7, 1), uint16] */;
  %61 = cast(%var_4694, dtype="uint16") /* ty=Tensor[(6, 7, 14), uint16] */;
  %62 = bitwise_or(%60, %61) /* ty=Tensor[(6, 7, 14), uint16] */;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(6, 7, 14), float32] */;
  %64 = exp(%52) /* ty=Tensor[(6, 7, 1), float32] */;
  %65 = %53.0;
  %66 = @func_2536(%55) /* ty=Tensor[(1536, 2), float32] */;
  %67 = asin(%63) /* ty=Tensor[(6, 7, 14), float32] */;
  (%64, %65, %66, meta[relay.Constant][4] /* ty=Tensor[(3072), float64] */, %67)
}

def @func_3291() -> Tensor[(750), int32] {
  @func_2493() /* ty=Tensor[(750), int32] */
}

def @func_1651(%var_1626: Tensor[(1536, 2), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %68 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %69 = %68.2;
  %70 = cast(%var_1626, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(2), int32] */;
  %72 = cast(%69, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %74 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %77 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
  %78 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
  %79 = power(%72, %73) /* ty=Tensor[(1536, 2), float64] */;
  %80 = sqrt(%76) /* ty=Tensor[(1, 9, 8), float32] */;
  %81 = %77.0;
  (%78, %79, %80, %81)
}

def @func_573(%var_471: Tensor[(16, 12, 16), float64], %var_472: Tensor[(16, 12, 16), float64]) -> (Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) {
  %82 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %83 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %84 = %83.0;
  %85 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %86 = %85.0;
  %87 = cast(%86, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %88 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%84, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %92 = reshape(%91, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %93 = @func_176(%92) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %94 = cast(%var_472, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %95 = shape_of(%var_471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_471, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %98 = add(%96, %97) /* ty=Tensor[(16, 12, 16), float64] */;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %100 = shape_of(%var_472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_472, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %103 = %82.0;
  %104 = right_shift(%89, %90) /* ty=Tensor[(?, 9, 8), int8] */;
  %105 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
  %106 = %93.1;
  %107 = floor_mod(%101, %102) /* ty=Tensor[(16, 12, 16), float32] */;
  (%103, %104, %105, %106, meta[relay.Constant][5] /* ty=Tensor[(840), float32] */, %107)
}

def @func_4170(%var_4124: Tensor[(12, 9, 8), uint32], %var_4156: Tensor[(840, 1), float32], %var_4157: Tensor[(3072), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(14, 52), float32], Tensor[(840, 1), float32], Tensor[(3072), float64], Tensor[(1, 9, 8), float32]) {
  %108 = @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */;
  %109 = cast(%108, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
  %110 = cast(%var_4124, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 52), float32] */, dtype="float32") /* ty=Tensor[(14, 52), float32] */;
  %112 = cast(%var_4156, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %113 = cast(%var_4157, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %114 = reshape(%111, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), float32] */;
  %115 = reshape(%112, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %116 = reshape(%113, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
  %117 = @func_2580(%114, %115, %116) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) */;
  %118 = @func_2468() /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %119 = less(%109, %110) /* ty=Tensor[(12, 9, 8), bool] */;
  %120 = %117.1;
  %121 = %118.1;
  (%119, %120, meta[relay.Constant][6] /* ty=Tensor[(14, 52), float32] */, %var_4156, %var_4157, %121)
}

def @func_1209() -> Tensor[(1, 9, 8), float32] {
  @func_319() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_4342(%var_4327: Tensor[(10, 10, 6), int16], %var_4332: Tensor[(3120), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(3120), int64], Tensor[(10, 10, 6), float64]) {
  %122 = cast(%var_4332, dtype="int64") /* ty=Tensor[(3120), int64] */;
  %123 = reshape(%122, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int64] */;
  %124 = @func_2170(%123) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) */;
  %125 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %126 = cast(%var_4327, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
  %127 = less_equal(%125, %126) /* ty=Tensor[(10, 10, 6), bool] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(10, 10, 6), float64] */;
  %129 = %124.0;
  %130 = cos(%128) /* ty=Tensor[(10, 10, 6), float64] */;
  (%129, %var_4332, %130)
}

def @func_981(%var_962: Tensor[(750), float32], %var_966: Tensor[(4, 9, 8), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) {
  %131 = cast(%var_962, dtype="float32") /* ty=Tensor[(750), float32] */;
  %132 = reshape(%131, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
  %133 = @func_917(%132) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
  %134 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %135 = cast(%134, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %136 = cast(%var_966, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
  %137 = %133.0;
  %138 = greater(%135, %136) /* ty=Tensor[(4, 9, 8), bool] */;
  (%137, %var_962, %138)
}

def @func_3620(%var_3606: Tensor[(39, 5), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(13, 1, 15), float32], Tensor[(39, 5), float32]) {
  %139 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %140 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
  %141 = cast(%var_3606, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %142 = reshape(%141, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float32] */;
  %143 = cast(%var_3606, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %144 = %139.0;
  %145 = %140.1;
  %146 = @func_3255(%142) /* ty=Tensor[(13, 1, 15), float32] */;
  %147 = sigmoid(%143) /* ty=Tensor[(39, 5), float32] */;
  (%144, %145, %146, %147)
}

def @func_4918(%var_4874: Tensor[(3, 14, 8), float64]) -> (Tensor[(3, 14, 8), float64], Tensor[(195), float32], Tensor[(13, ?, 15), float32], Tensor[(1, 9, 8), float32]) {
  %148 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %149 = shape_of(%var_4874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_4874, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %152 = cast(meta[relay.Constant][9] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %153 = reshape(%152, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float32] */;
  %154 = @func_3255(%153) /* ty=Tensor[(13, 1, 15), float32] */;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(13, 1, 15), float64] */;
  %156 = atan(%155) /* ty=Tensor[(13, 1, 15), float64] */;
  %157 = cast(%154, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
  %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%156, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %161 = @func_1289() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %162 = minimum(%150, %151) /* ty=Tensor[(3, 14, 8), float64] */;
  %163 = power(%159, %160) /* ty=Tensor[(13, ?, 15), float32] */;
  %164 = %161.0;
  (%162, meta[relay.Constant][9] /* ty=Tensor[(195), float32] */, %163, %164)
}

def @func_4317() -> (Tensor[(1, 9, 8), float32],) {
  %165 = @func_3653() /* ty=Tensor[(1, 9, 8), float64] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %167 = cos(%166) /* ty=Tensor[(1, 9, 8), float32] */;
  (%167,)
}

def @func_2697() -> Tensor[(?, 9, 8), uint32] {
  %168 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  %169 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %170 = cast(%169, dtype="uint32") /* ty=Tensor[(1, 9, 8), uint32] */;
  %171 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%168, dtype="uint32") /* ty=Tensor[(1, 9, 8), uint32] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%172, %173) /* ty=Tensor[(?, 9, 8), uint32] */
}

def @func_1585() -> (Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  %174 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %176 = cast(meta[relay.Constant][10] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %177 = reshape(%175, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %178 = reshape(%176, newshape=[6, 12, 14]) /* ty=Tensor[(6, 12, 14), float32] */;
  %179 = @func_1090(%177, %178) /* ty=(Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) */;
  %180 = %179.2;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(6, 12, 1), float64] */;
  %182 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%174, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %185 = mod(%183, %184) /* ty=Tensor[(?, 9, 8), float64] */;
  %186 = cast(%185, dtype="float64") /* ty=Tensor[(?, 9, 8), float64] */;
  %187 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %188 = %187.2;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %191 = reshape(%190, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
  %192 = @func_917(%191) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
  %193 = asinh(%186) /* ty=Tensor[(?, 9, 8), float64] */;
  %194 = exp(%189) /* ty=Tensor[(1, 9, 8), float64] */;
  %195 = %192.0;
  (meta[relay.Constant][10] /* ty=Tensor[(1008), float32] */, %193, %194, %195, meta[relay.Constant][11] /* ty=Tensor[(750), float32] */)
}

def @func_1911() -> (Tensor[(1, 9, 8), float32],) {
  %196 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  (%196,)
}

def @func_290(%var_284: Tensor[(9, 6, 16), float64]) -> (Tensor[(9, 6, 16), float64], Tensor[(1, 9, 8), float32]) {
  %197 = cast(%var_284, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %198 = acos(%197) /* ty=Tensor[(9, 6, 16), float64] */;
  %199 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  (%198, %199)
}

def @func_2023() -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %200 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %201 = %200.2;
  %202 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  (%201, %202)
}

def @func_271() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  %203 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %205 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  %206 = acosh(%204) /* ty=Tensor[(1, 9, 8), float64] */;
  (%205, %206)
}

def @func_3653() -> Tensor[(1, 9, 8), float64] {
  %207 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %207.0
}

def @func_758() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %208 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %209 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %210 = cast(%209, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %211 = log(%210) /* ty=Tensor[(1, 9, 8), float64] */;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %213 = cast(%211, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %214 = %208.0;
  %215 = log2(%212) /* ty=Tensor[(1, 9, 8), float32] */;
  %216 = erf(%213) /* ty=Tensor[(1, 9, 8), float64] */;
  %217 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  (%214, %215, %216, %217)
}

def @func_2923(%var_2870: Tensor[(882, 1), float32], %var_2872: Tensor[(50, 15), float32], %var_2881: Tensor[(360), float32], %var_2885: Tensor[(882, 6), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) {
  %218 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %219 = cast(%var_2870, dtype="float32") /* ty=Tensor[(882, 1), float32] */;
  %220 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %221 = cast(%var_2872, dtype="float32") /* ty=Tensor[(50, 15), float32] */;
  %222 = reshape(%219, newshape=[882]) /* ty=Tensor[(882), float32] */;
  %223 = reshape(%220, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %224 = reshape(%221, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %225 = @func_1357(%222, %223, %224) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) */;
  %226 = %218.3;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %228 = cast(meta[relay.Constant][13] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %230 = cast(%var_2881, dtype="float32") /* ty=Tensor[(360), float32] */;
  %231 = reshape(%227, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float64] */;
  %232 = reshape(%228, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float64] */;
  %233 = reshape(%229, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float32] */;
  %234 = reshape(%230, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %235 = @func_2416(%231, %232, %233, %234) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) */;
  %236 = cast(%var_2870, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
  %237 = cast(%var_2885, dtype="float64") /* ty=Tensor[(882, 6), float64] */;
  %238 = floor_mod(%236, %237) /* ty=Tensor[(882, 6), float64] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(882, 6), float32] */;
  %240 = sqrt(%239) /* ty=Tensor[(882, 6), float32] */;
  %241 = cast(%var_2885, dtype="uint32") /* ty=Tensor[(882, 6), uint32] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(%240, dtype="uint32") /* ty=Tensor[(882, 6), uint32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %245 = %225.0;
  %246 = %235.9;
  %247 = right_shift(%243, %244) /* ty=Tensor[(882, 6), uint32] */;
  (%226, %245, meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, %var_2872, %246, meta[relay.Constant][13] /* ty=Tensor[(720), float64] */, meta[relay.Constant][14] /* ty=Tensor[(1080), float32] */, %var_2881, %247)
}

def @func_356() -> (Tensor[(1, 9, 8), float32],) {
  %248 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %249 = %248.0;
  (%249,)
}

def @func_867() -> Tensor[(6, 9, 8), float64] {
  %250 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %250.1
}

def @func_3405(%var_3377: Tensor[(12, 9, 8), float32]) -> (Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) {
  %251 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  %252 = cast(%251, dtype="int64") /* ty=Tensor[(1, 9, 8), int64] */;
  %253 = cast(%var_3377, dtype="int64") /* ty=Tensor[(12, 9, 8), int64] */;
  %254 = cast(%251, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %255 = cast(%var_3377, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %256 = logical_and(%254, %255) /* ty=Tensor[(12, 9, 8), bool] */;
  %257 = cast(%256, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %258 = exp(%257) /* ty=Tensor[(12, 9, 8), float32] */;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %260 = subtract(%252, %253) /* ty=Tensor[(12, 9, 8), int64] */;
  %261 = sinh(%259) /* ty=Tensor[(12, 9, 8), float32] */;
  (%260, %261)
}

def @func_1357(%var_1350: Tensor[(882), float32], %var_1351: Tensor[(1008), float32], %var_1352: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) {
  %262 = cast(%var_1350, dtype="float32") /* ty=Tensor[(882), float32] */;
  %263 = cast(%var_1351, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %264 = cast(%var_1352, dtype="float32") /* ty=Tensor[(750), float32] */;
  %265 = reshape(%262, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float32] */;
  %266 = reshape(%263, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %267 = reshape(%264, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %268 = @func_1151(%265, %266, %267) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %269 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  %270 = %268.1;
  (%269, %270, %var_1350, %var_1351, %var_1352)
}

def @func_4439() -> Tensor[(750), float32] {
  %271 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %271.0
}

def @func_2170(%var_2147: Tensor[(13, 16, 15), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) {
  %272 = cast(%var_2147, dtype="int64") /* ty=Tensor[(13, 16, 15), int64] */;
  %273 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 16, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 16, 15), int64] */, dtype="int64") /* ty=Tensor[(13, 16, 15), int64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %276 = @func_1926() /* ty=(Tensor[(?, 9, 8), float64],) */;
  %277 = maximum(%274, %275) /* ty=Tensor[(13, 16, 15), int64] */;
  %278 = %276.0;
  (%277, %278)
}

def @func_3047() -> Tensor[(1, 9, 8), float32] {
  %279 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %279.1
}

def @func_1418() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) {
  %280 = cast(meta[relay.Constant][16] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %281 = cast(meta[relay.Constant][16] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %282 = reshape(%280, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
  %283 = reshape(%281, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
  %284 = @func_573(%282, %283) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) */;
  %285 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
  %286 = %284.3;
  (%285, %286, meta[relay.Constant][16] /* ty=Tensor[(1536, 2), float64] */)
}

def @func_2416(%var_2307: Tensor[(1, 9, 8), float64], %var_2340: Tensor[(10, 9, 8), float64], %var_2349: Tensor[(15, 9, 8), float32], %var_2382: Tensor[(360), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
  %287 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %288 = cast(%var_2307, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %289 = cast(%var_2340, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
  %290 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 1560), int64] */, dtype="int64") /* ty=Tensor[(2, 1560), int64] */;
  %291 = reshape(%290, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int64] */;
  %292 = @func_2170(%291) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) */;
  %293 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %294 = %293.0;
  %295 = cast(%var_2307, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %299 = logical_or(%297, %298) /* ty=Tensor[(?, 9, 8), bool] */;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(?, 9, 8), float32] */;
  %301 = cosh(%300) /* ty=Tensor[(?, 9, 8), float32] */;
  %302 = cast(%301, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
  %303 = cast(%var_2349, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
  %304 = logical_or(%302, %303) /* ty=Tensor[(15, 9, 8), bool] */;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %306 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
  %307 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
  %308 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
  %309 = reshape(%306, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %310 = reshape(%307, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %311 = reshape(%308, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %312 = @func_841(%309, %310, %311) /* ty=(Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) */;
  %313 = cast(%301, dtype="uint32") /* ty=Tensor[(?, 9, 8), uint32] */;
  %314 = cast(%304, dtype="uint32") /* ty=Tensor[(15, 9, 8), uint32] */;
  %315 = cast(%var_2382, dtype="float32") /* ty=Tensor[(360), float32] */;
  %316 = reshape(%315, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %317 = @func_1242(%316) /* ty=(Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %318 = cast(meta[relay.Constant][19] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %319 = reshape(%318, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %320 = @func_176(%319) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %321 = %287.0;
  %322 = less(%288, %289) /* ty=Tensor[(10, 9, 8), bool] */;
  %323 = %292.0;
  %324 = log(%305) /* ty=Tensor[(15, 9, 8), float32] */;
  %325 = %312.1;
  %326 = add(%313, %314) /* ty=Tensor[(15, 9, 8), uint32] */;
  %327 = %317.1;
  %328 = %320.0;
  (%321, %322, %323, meta[relay.Constant][17] /* ty=Tensor[(2, 1560), int64] */, %324, %325, meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, %326, %327, %var_2382, %328, meta[relay.Constant][19] /* ty=Tensor[(840), float32] */)
}

def @func_3255(%var_3252: Tensor[(13, 1, 15), float32]) -> Tensor[(13, 1, 15), float32] {
  %329 = cast(%var_3252, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
  log(%329) /* ty=Tensor[(13, 1, 15), float32] */
}

def @func_395() -> Tensor[(1, 9, 8), float32] {
  @func_319() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_4939(%var_4935: Tensor[(12, 4, 4), float32]) -> Tensor[(12, 4, 4), bool] {
  %330 = cast(%var_4935, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
  %331 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(12, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%332, %333) /* ty=Tensor[(12, 4, 4), bool] */
}

def @func_2536(%var_2526: Tensor[(1536, 2), float64]) -> Tensor[(1536, 2), float32] {
  %334 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %335 = %334.2;
  %336 = cast(%var_2526, dtype="int8") /* ty=Tensor[(1536, 2), int8] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(2), int32] */;
  %338 = cast(%335, dtype="int8") /* ty=Tensor[(1536, 2), int8] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %340 = bitwise_xor(%338, %339) /* ty=Tensor[(1536, 2), int8] */;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  exp(%341) /* ty=Tensor[(1536, 2), float32] */
}

def @func_3055() -> (Tensor[(1, 9, 8), float32],) {
  %342 = @func_2230() /* ty=Tensor[(1, 9, 8), float32] */;
  (%342,)
}

def @func_2763() -> (Tensor[(12, 9, 8), bool],) {
  %343 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
  (%343,)
}

def @func_1896(%var_1886: Tensor[(750), float32], %var_1890: Tensor[(840), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(4, 9, 8), bool], Tensor[(750), float32], Tensor[(288), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
  %344 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %345 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
  %346 = cast(%var_1886, dtype="float32") /* ty=Tensor[(750), float32] */;
  %347 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %348 = reshape(%346, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %349 = reshape(%347, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), float32] */;
  %350 = @func_981(%348, %349) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) */;
  %351 = cast(%var_1890, dtype="float32") /* ty=Tensor[(840), float32] */;
  %352 = reshape(%351, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %353 = @func_176(%352) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %354 = %344.0;
  %355 = %345.1;
  %356 = %350.2;
  %357 = %353.0;
  (%354, %355, %356, %var_1886, meta[relay.Constant][21] /* ty=Tensor[(288), float32] */, %357, %var_1890)
}

def @func_2014() -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
  %358 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %359 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
  (%358, %359)
}

def @func_1090(%var_1069: Tensor[(6, 12, 1), float32], %var_1070: Tensor[(6, 12, 14), float32]) -> (Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) {
  %360 = cast(%var_1069, dtype="bool") /* ty=Tensor[(6, 12, 1), bool] */;
  %361 = cast(%var_1070, dtype="bool") /* ty=Tensor[(6, 12, 14), bool] */;
  %362 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %363 = cast(%var_1069, dtype="float64") /* ty=Tensor[(6, 12, 1), float64] */;
  %364 = not_equal(%360, %361) /* ty=Tensor[(6, 12, 14), bool] */;
  %365 = %362.0;
  %366 = cos(%363) /* ty=Tensor[(6, 12, 1), float64] */;
  (%364, %365, %366)
}

def @func_3553(%var_3466: Tensor[(5, 7, 3), float32]) -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) {
  %367 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(96, 32), float64] */, dtype="float64") /* ty=Tensor[(96, 32), float64] */;
  %369 = reshape(%368, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %370 = @func_1651(%369) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %372 = shape_of(%var_3466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_3466, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %375 = cast(%var_3466, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %376 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %379 = minimum(%377, %378) /* ty=Tensor[(5, 7, 3), float32] */;
  %380 = cast(%379, dtype="int16") /* ty=Tensor[(5, 7, 3), int16] */;
  %381 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int16") /* ty=Tensor[(5, 7, 3), int16] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %384 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %385 = %367.1;
  %386 = %370.3;
  %387 = greater_equal(%373, %374) /* ty=Tensor[(5, 7, 3), bool] */;
  %388 = maximum(%382, %383) /* ty=Tensor[(5, 7, 3), int16] */;
  %389 = acosh(%384) /* ty=Tensor[(5, 7, 3), float32] */;
  (%385, %386, meta[relay.Constant][22] /* ty=Tensor[(96, 32), float64] */, %387, %388, %389)
}

def @func_1806() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) {
  %390 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %391 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  %392 = %390.1;
  %393 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
  (%391, %392, %393)
}

def @func_2635(%var_2626: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), int32] {
  %394 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %395 = %394.2;
  %396 = cast(%395, dtype="int32") /* ty=Tensor[(1, 9, 8), int32] */;
  %397 = cast(%var_2626, dtype="int32") /* ty=Tensor[(12, 9, 8), int32] */;
  right_shift(%396, %397) /* ty=Tensor[(12, 9, 8), int32] */
}

def @func_4030() -> Tensor[(6, 9, 8), bool] {
  %398 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %398.0
}

def @func_5017(%var_5002: Tensor[(1568), float32]) -> (Tensor[(?, 9, 8), float64], Tensor[(1568), float32], Tensor[(14, 16, 7), float64]) {
  %399 = @func_1926() /* ty=(Tensor[(?, 9, 8), float64],) */;
  %400 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %401 = reshape(%400, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float32] */;
  %402 = @func_2941(%401) /* ty=Tensor[(14, 16, 7), float32] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %404 = %399.0;
  %405 = asin(%403) /* ty=Tensor[(14, 16, 7), float64] */;
  (%404, %var_5002, %405)
}

def @func_2849() -> (Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) {
  %406 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %407 = @func_2468() /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %408 = %407.0;
  %409 = cast(%408, dtype="int32") /* ty=Tensor[(?, 9, 8), int32] */;
  %410 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 9, 8), float64] */, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
  %411 = cast(%408, dtype="float64") /* ty=Tensor[(?, 9, 8), float64] */;
  %412 = sin(%411) /* ty=Tensor[(?, 9, 8), float64] */;
  %413 = cast(%408, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%412, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %418 = %406.4;
  %419 = maximum(%409, %410) /* ty=Tensor[(7, 9, 8), int32] */;
  %420 = less_equal(%415, %416) /* ty=Tensor[(?, 9, 8), bool] */;
  %421 = %417.0;
  (%418, %419, %420, %421)
}

def @func_5216() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  %422 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %423 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %424 = %422.0;
  %425 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  %426 = %423.0;
  (%424, %425, %426)
}

def @func_802() -> (Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) {
  %427 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %428 = cast(%427, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %429 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %430 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 9, 8), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %431 = logical_and(%428, %429) /* ty=Tensor[(6, 9, 8), bool] */;
  %432 = log(%430) /* ty=Tensor[(6, 9, 8), float64] */;
  (%431, %432)
}

def @func_4856() -> (Tensor[(1, 9, 8), float32],) {
  %433 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %434 = %433.1;
  (%434,)
}

def @func_4502(%var_4472: Tensor[(2, 7, 5), float32]) -> (Tensor[(2, 7, 5), bool], Tensor[(2, 7, 5), int32]) {
  %435 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 5), float32] */;
  %436 = sqrt(%435) /* ty=Tensor[(2, 7, 5), float32] */;
  %437 = cast(%var_4472, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 7, 5), float32] */, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
  %442 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%436, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %445 = less(%439, %440) /* ty=Tensor[(2, 7, 5), bool] */;
  %446 = add(%443, %444) /* ty=Tensor[(2, 7, 5), int32] */;
  (%445, %446)
}

def @func_935() -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
  %447 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %448 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %449 = %447.0;
  %450 = %448.1;
  (%449, %450)
}

def @func_2052() -> (Tensor[(6, 9, 8), bool],) {
  %451 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %452 = %451.0;
  (%452,)
}

def @func_127() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %453 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %454 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %455 = %453.0;
  %456 = %454.0;
  (%455, %456)
}

def @func_319() -> Tensor[(1, 9, 8), float32] {
  %457 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %457.0
}

def @func_3061() -> Tensor[(1, 9, 8), float64] {
  %458 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %458.2
}

def @func_1926() -> (Tensor[(?, 9, 8), float64],) {
  %459 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %460 = %459.1;
  (%460,)
}

def @func_226() -> Tensor[(12, 9, 8), bool] {
  %461 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %462 = cast(%461, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %463 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  less_equal(%462, %463) /* ty=Tensor[(12, 9, 8), bool] */
}

def @func_2503(%var_2496: Tensor[(3, 1, 15), int8], %var_2497: Tensor[(3, 14, 15), int8]) -> Tensor[(3, 14, 15), bool] {
  %464 = cast(%var_2496, dtype="bool") /* ty=Tensor[(3, 1, 15), bool] */;
  %465 = cast(%var_2497, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  greater(%464, %465) /* ty=Tensor[(3, 14, 15), bool] */
}

def @func_3677(%var_3670: uint16, %var_3671: Tensor[(6, 1, 4), uint16]) -> (Tensor[(6, 1, 4), uint16],) {
  %466 = cast(%var_3670, dtype="uint16") /* ty=uint16 */;
  %467 = cast(%var_3671, dtype="uint16") /* ty=Tensor[(6, 1, 4), uint16] */;
  %468 = bitwise_and(%466, %467) /* ty=Tensor[(6, 1, 4), uint16] */;
  (%468,)
}

def @func_2273(%var_2245: Tensor[(504, 2), float32], %var_2246: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) {
  %469 = cast(meta[relay.Constant][28] /* ty=Tensor[(882), float32] */, dtype="float32") /* ty=Tensor[(882), float32] */;
  %470 = cast(%var_2245, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %471 = cast(%var_2246, dtype="float32") /* ty=Tensor[(750), float32] */;
  %472 = reshape(%469, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float32] */;
  %473 = reshape(%470, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %474 = reshape(%471, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %475 = @func_1151(%472, %473, %474) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %476 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %477 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %478 = %475.0;
  %479 = %476.0;
  (%477, %478, meta[relay.Constant][28] /* ty=Tensor[(882), float32] */, %var_2245, %var_2246, %479)
}

def @func_1151(%var_1097: Tensor[(14, 9, 7), float32], %var_1141: Tensor[(1008), float32], %var_1149: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  %480 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %481 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %482 = cast(%var_1097, dtype="float32") /* ty=Tensor[(14, 9, 7), float32] */;
  %483 = log(%482) /* ty=Tensor[(14, 9, 7), float32] */;
  %484 = cast(%var_1097, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %488 = %480.0;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %490 = cast(%var_1141, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %491 = reshape(%489, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %492 = reshape(%490, newshape=[6, 12, 14]) /* ty=Tensor[(6, 12, 14), float32] */;
  %493 = @func_1090(%491, %492) /* ty=(Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) */;
  %494 = cast(%var_1149, dtype="float32") /* ty=Tensor[(750), float32] */;
  %495 = reshape(%494, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
  %496 = @func_917(%495) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
  %497 = %481.1;
  %498 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
  %499 = mod(%486, %487) /* ty=Tensor[(14, 9, 7), float64] */;
  %500 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
  %501 = %493.2;
  %502 = %496.0;
  (%488, %497, %498, %499, %500, %501, %var_1141, %502, %var_1149)
}

def @func_1242(%var_1224: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %503 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %506 = cast(%var_1224, dtype="int8") /* ty=Tensor[(5, 9, 8), int8] */;
  %507 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %508 = multiply(%505, %506) /* ty=Tensor[(5, 9, 8), int8] */;
  %509 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  %510 = %507.3;
  (%508, %509, %510)
}

def @func_2978() -> Tensor[(?, 9, 8), uint32] {
  @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */
}

def @func_2468() -> (Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %511 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  %512 = @func_1806() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) */;
  %513 = %512.1;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %515 = shape_of(%511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%511, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %518 = @func_1289() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %519 = divide(%516, %517) /* ty=Tensor[(?, 9, 8), float64] */;
  %520 = %518.0;
  (%519, %520)
}

def @func_209() -> Tensor[(1, 9, 8), float32] {
  @func_156() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_841(%var_810: Tensor[(11, 7, 7), int32], %var_811: Tensor[(11, 7, 7), int32], %var_821: Tensor[(11, 7, 7), int32]) -> (Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) {
  %521 = cast(%var_811, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %522 = shape_of(%var_810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%var_810, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = cast(%var_821, dtype="int16") /* ty=Tensor[(11, 7, 7), int16] */;
  %526 = shape_of(%var_810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%var_810, dtype="int16") /* ty=Tensor[(11, 7, 7), int16] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %529 = equal(%523, %524) /* ty=Tensor[(11, 7, 7), bool] */;
  %530 = maximum(%527, %528) /* ty=Tensor[(11, 7, 7), int16] */;
  (%529, %530)
}

def @func_451() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %531 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %532 = %531.0;
  %533 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  (%532, %533)
}

def @func_685() -> Tensor[(1, 9, 8), float32] {
  %534 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %534.0
}

def @func_1059(%var_1033: Tensor[(6, 9, 8), float64]) -> (Tensor[(6, 9, 8), float64], Tensor[(11, 7, 7), bool], Tensor[(539), float64], Tensor[(1, 9, 8), float32]) {
  %535 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
  %536 = cast(%var_1033, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %540 = cast(meta[relay.Constant][29] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
  %541 = cast(meta[relay.Constant][29] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
  %542 = cast(meta[relay.Constant][29] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
  %543 = reshape(%540, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %544 = reshape(%541, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %545 = reshape(%542, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
  %546 = @func_841(%543, %544, %545) /* ty=(Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) */;
  %547 = cast(meta[relay.Constant][29] /* ty=Tensor[(539), int32] */, dtype="float64") /* ty=Tensor[(539), float64] */;
  %548 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %549 = divide(%538, %539) /* ty=Tensor[(6, 9, 8), float64] */;
  %550 = %546.0;
  %551 = rsqrt(%547) /* ty=Tensor[(539), float64] */;
  %552 = %548.0;
  (%549, %550, %551, %552)
}

def @func_176(%var_163: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) {
  %553 = cast(%var_163, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
  %554 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %555 = exp(%553) /* ty=Tensor[(14, 5, 12), float32] */;
  %556 = %554.0;
  (%555, %556)
}

def @func_101() -> (Tensor[(1, 9, 8), float32],) {
  %557 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %558 = %557.0;
  (%558,)
}

def @main(%var_5301: Tensor[(1008), float32], %var_5302: Tensor[(250, 3), float32], %var_5316: Tensor[(12, 9, 8), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(250, 3), float32], Tensor[(12, 9, 8), bool]) {
  %559 = cast(%var_5301, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %560 = cast(%var_5302, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
  %561 = reshape(%559, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %562 = reshape(%560, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %563 = @func_2273(%561, %562) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) */;
  %564 = %563.0;
  %565 = cast(%564, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %566 = cast(%var_5316, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %567 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  %568 = greater(%565, %566) /* ty=Tensor[(12, 9, 8), bool] */;
  (%567, %var_5301, %var_5302, %568)
}

def @func_46() -> (Tensor[(1, 9, 8), float32],) {
  %569 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %570 = acos(%569) /* ty=Tensor[(1, 9, 8), float64] */;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %572 = tan(%571) /* ty=Tensor[(1, 9, 8), float32] */;
  (%572,)
}

def @func_2230() -> Tensor[(1, 9, 8), float32] {
  @func_1209() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_4988() -> (Tensor[(1, 9, 8), float64],) {
  %573 = @func_3653() /* ty=Tensor[(1, 9, 8), float64] */;
  (%573,)
}

def @func_1387(%var_1376: Tensor[(11, 6, 5), float64]) -> Tensor[(11, 6, 5), float32] {
  %574 = cast(%var_1376, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
  %575 = acosh(%574) /* ty=Tensor[(11, 6, 5), float64] */;
  %576 = cast(%var_1376, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%578, %579) /* ty=Tensor[(11, 6, 5), float32] */
}

def @func_917(%var_904: Tensor[(5, 10, 15), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) {
  %580 = cast(%var_904, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
  %581 = cos(%580) /* ty=Tensor[(5, 10, 15), float32] */;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
  %583 = exp(%582) /* ty=Tensor[(5, 10, 15), float64] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %589 = greater(%586, %587) /* ty=Tensor[(5, 10, 15), bool] */;
  %590 = %588.0;
  (%589, %590)
}

def @func_637(%var_603: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %591 = cast(%var_603, dtype="float64") /* ty=Tensor[(4, 5, 11), float64] */;
  %592 = atanh(%591) /* ty=Tensor[(4, 5, 11), float64] */;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
  %594 = cos(%593) /* ty=Tensor[(4, 5, 11), float32] */;
  %595 = cast(%var_603, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %599 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %600 = mod(%597, %598) /* ty=Tensor[(4, 5, 11), float32] */;
  %601 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %602 = %599.0;
  (%600, %601, %602)
}

def @func_3308() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %603 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %604 = %603.0;
  %605 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  (%604, %605)
}

def @func_5103() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %606 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %607 = @func_4856() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %608 = %606.0;
  %609 = %607.0;
  (%608, %609)
}

def @func_5238() -> (Tensor[(12, 9, 8), bool], Tensor[(12, 9, 8), float32]) {
  %610 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %612 = reshape(%611, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float32] */;
  %613 = @func_3405(%612) /* ty=(Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) */;
  %614 = %613.1;
  (%610, %614)
}

def @func_1704() -> Tensor[(1, 9, 8), float32] {
  %615 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %615.1
}

def @func_5084() -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(12, 9, 8), bool]) {
  %616 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %617 = %616.0;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %619 = @func_1806() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) */;
  %620 = @func_3061() /* ty=Tensor[(1, 9, 8), float64] */;
  %621 = atan(%618) /* ty=Tensor[(1, 9, 8), float64] */;
  %622 = %619.2;
  (%620, %621, %622)
}

def @func_2941(%var_2936: Tensor[(14, 16, 7), float32]) -> Tensor[(14, 16, 7), float32] {
  %623 = cast(%var_2936, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %624 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%625, %626) /* ty=Tensor[(14, 16, 7), float32] */
}

def @func_3948() -> (Tensor[(1, 9, 8), float32], Tensor[(3072), float32], Tensor[(1536, 2), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32], Tensor[(?, 9, 8), uint32]) {
  %627 = cast(meta[relay.Constant][32] /* ty=Tensor[(3072), float64] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %628 = cast(meta[relay.Constant][32] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %629 = reshape(%628, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %630 = @func_1651(%629) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %631 = %630.1;
  %632 = cast(meta[relay.Constant][32] /* ty=Tensor[(3072), float64] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
  %634 = cast(%631, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %636 = cast(meta[relay.Constant][33] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %637 = reshape(%636, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %638 = @func_3764(%637) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) */;
  %639 = @func_3047() /* ty=Tensor[(1, 9, 8), float32] */;
  %640 = tan(%627) /* ty=Tensor[(3072), float32] */;
  %641 = mod(%634, %635) /* ty=Tensor[(1536, 2), float32] */;
  %642 = %638.1;
  %643 = @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */;
  (%639, %640, %641, %642, meta[relay.Constant][33] /* ty=Tensor[(105), float32] */, %643)
}

def @func_1488(%var_1470: Tensor[(750), float32], %var_1471: Tensor[(288), float32]) -> (Tensor[(750), float32], Tensor[(750), float32], Tensor[(288), float32], Tensor[(?, 9, 8), int8], Tensor[(?, 9, 8), bool], Tensor[(12, 9, 8), float64]) {
  %644 = cast(%var_1470, dtype="float32") /* ty=Tensor[(750), float32] */;
  %645 = cast(%var_1471, dtype="float32") /* ty=Tensor[(288), float32] */;
  %646 = reshape(%644, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %647 = reshape(%645, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), float32] */;
  %648 = @func_981(%646, %647) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) */;
  %649 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %651 = sigmoid(%650) /* ty=Tensor[(1, 9, 8), float32] */;
  %652 = cast(%649, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %656 = greater_equal(%654, %655) /* ty=Tensor[(?, 9, 8), bool] */;
  %657 = cast(%649, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="int8") /* ty=Tensor[(?, 9, 8), int8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %661 = cast(%656, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
  %662 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%651, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %665 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
  %667 = %648.1;
  %668 = bitwise_and(%659, %660) /* ty=Tensor[(?, 9, 8), int8] */;
  %669 = equal(%663, %664) /* ty=Tensor[(?, 9, 8), bool] */;
  %670 = rsqrt(%666) /* ty=Tensor[(12, 9, 8), float64] */;
  (%667, %var_1470, %var_1471, %668, %669, %670)
}

def @func_4259(%var_4205: Tensor[(3072), float64], %var_4211: Tensor[(882), float32], %var_4213: Tensor[(360), float32], %var_4214: Tensor[(5292), float32]) -> (Tensor[(6, 9, 8), bool], Tensor[(7, 9, 8), int32], Tensor[(1, 9, 8), float32], Tensor[(728), float32], Tensor[(1, 840), float32], Tensor[(3072), float64], Tensor[(1080), float32], Tensor[(5, 150), float32], Tensor[(360), float32], Tensor[(5292), float32], Tensor[(882), int32]) {
  %671 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %672 = cast(meta[relay.Constant][34] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %673 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %674 = cast(%var_4205, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %675 = reshape(%672, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), float32] */;
  %676 = reshape(%673, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %677 = reshape(%674, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
  %678 = @func_2580(%675, %676, %677) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) */;
  %679 = cast(%var_4211, dtype="float32") /* ty=Tensor[(882), float32] */;
  %680 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 150), float32] */, dtype="float32") /* ty=Tensor[(5, 150), float32] */;
  %681 = cast(%var_4213, dtype="float32") /* ty=Tensor[(360), float32] */;
  %682 = cast(%var_4214, dtype="float32") /* ty=Tensor[(5292), float32] */;
  %683 = reshape(%679, newshape=[882, 1]) /* ty=Tensor[(882, 1), float32] */;
  %684 = reshape(%680, newshape=[50, 15]) /* ty=Tensor[(50, 15), float32] */;
  %685 = reshape(%681, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %686 = reshape(%682, newshape=[882, 6]) /* ty=Tensor[(882, 6), float32] */;
  %687 = @func_2923(%683, %684, %685, %686) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) */;
  %688 = cast(%var_4211, dtype="float32") /* ty=Tensor[(882), float32] */;
  %689 = log10(%688) /* ty=Tensor[(882), float32] */;
  %690 = cast(%var_4211, dtype="int32") /* ty=Tensor[(882), int32] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(1), int32] */;
  %692 = cast(%689, dtype="int32") /* ty=Tensor[(882), int32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?), int32] */;
  %694 = @func_4030() /* ty=Tensor[(6, 9, 8), bool] */;
  %695 = %671.1;
  %696 = %678.3;
  %697 = %687.6;
  %698 = multiply(%692, %693) /* ty=Tensor[(882), int32] */;
  (%694, %695, %696, meta[relay.Constant][34] /* ty=Tensor[(728), float32] */, meta[relay.Constant][35] /* ty=Tensor[(1, 840), float32] */, %var_4205, %697, meta[relay.Constant][36] /* ty=Tensor[(5, 150), float32] */, %var_4213, %var_4214, %698)
}

def @func_4542() -> Tensor[(7, 9, 8), int32] {
  %699 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %699.1
}

def @func_5250() -> (Tensor[(1, 9, 8), float32],) {
  %700 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %701 = %700.3;
  (%701,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1585() -> (Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  %0 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  %1 = cast(%0, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %3 = reshape(%1, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %4 = reshape(%2, newshape=[6, 12, 14]) /* ty=Tensor[(6, 12, 14), float32] */;
  %5 = @func_1090(%3, %4) /* ty=(Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) */;
  %6 = %5.2;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(6, 12, 1), float64] */;
  %8 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%0, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %11 = mod(%9, %10) /* ty=Tensor[(?, 9, 8), float64] */;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(?, 9, 8), float64] */;
  %13 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %14 = %13.2;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %17 = reshape(%16, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
  %18 = @func_917(%17) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
  %19 = asinh(%12) /* ty=Tensor[(?, 9, 8), float64] */;
  %20 = exp(%15) /* ty=Tensor[(1, 9, 8), float64] */;
  %21 = %18.0;
  (meta[relay.Constant][0] /* ty=Tensor[(1008), float32] */, %19, %20, %21, meta[relay.Constant][1] /* ty=Tensor[(750), float32] */)
}

def @func_1704() -> Tensor[(1, 9, 8), float32] {
  %22 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %22.1
}

def @func_3056() -> (Tensor[(1, 9, 8), float32],) {
  %24 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %23 = @func_2230() /* ty=Tensor[(1, 9, 8), float32] */;
    (%23,)
  };
  %24() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_5104() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %29 = fn () -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
    %25 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %26 = @func_4856() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %27 = %25.0;
    %28 = %26.0;
    (%27, %28)
  };
  %29() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_1913() -> (Tensor[(1, 9, 8), float32],) {
  @func_1911() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_127() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %30 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %31 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %32 = %30.0;
  %33 = %31.0;
  (%32, %33)
}

def @func_2053() -> (Tensor[(6, 9, 8), bool],) {
  %36 = fn () -> (Tensor[(6, 9, 8), bool],) {
    %34 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
    %35 = %34.0;
    (%35,)
  };
  %36() /* ty=(Tensor[(6, 9, 8), bool],) */
}

def @func_1491(%var_1489: Tensor[(750), float32], %var_1490: Tensor[(288), float32]) -> (Tensor[(750), float32], Tensor[(750), float32], Tensor[(288), float32], Tensor[(?, 9, 8), int8], Tensor[(?, 9, 8), bool], Tensor[(12, 9, 8), float64]) {
  %64 = fn (%var_1470: Tensor[(750), float32], %var_1471: Tensor[(288), float32]) -> (Tensor[(750), float32], Tensor[(750), float32], Tensor[(288), float32], Tensor[(?, 9, 8), int8], Tensor[(?, 9, 8), bool], Tensor[(12, 9, 8), float64]) {
    %37 = cast(%var_1470, dtype="float32") /* ty=Tensor[(750), float32] */;
    %38 = cast(%var_1471, dtype="float32") /* ty=Tensor[(288), float32] */;
    %39 = reshape(%37, newshape=[750]) /* ty=Tensor[(750), float32] */;
    %40 = reshape(%38, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), float32] */;
    %41 = @func_981(%39, %40) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) */;
    %42 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
    %43 = cast(%42, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
    %44 = sigmoid(%43) /* ty=Tensor[(1, 9, 8), float32] */;
    %45 = cast(%42, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
    %47 = cast(%44, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %49 = greater_equal(%47, %48) /* ty=Tensor[(?, 9, 8), bool] */;
    %50 = cast(%42, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
    %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
    %52 = cast(%49, dtype="int8") /* ty=Tensor[(?, 9, 8), int8] */;
    %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %54 = cast(%49, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
    %55 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
    %56 = cast(%44, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %58 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
    %59 = cast(%58, dtype="float64") /* ty=Tensor[(12, 9, 8), float64] */;
    %60 = %41.1;
    %61 = bitwise_and(%52, %53) /* ty=Tensor[(?, 9, 8), int8] */;
    %62 = equal(%56, %57) /* ty=Tensor[(?, 9, 8), bool] */;
    %63 = rsqrt(%59) /* ty=Tensor[(12, 9, 8), float64] */;
    (%60, %var_1470, %var_1471, %61, %62, %63)
  };
  %64(%var_1489, %var_1490) /* ty=(Tensor[(750), float32], Tensor[(750), float32], Tensor[(288), float32], Tensor[(?, 9, 8), int8], Tensor[(?, 9, 8), bool], Tensor[(12, 9, 8), float64]) */
}

def @func_5216() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  %65 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %66 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %67 = %65.0;
  %68 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  %69 = %66.0;
  (%67, %68, %69)
}

def @main(%var_5301: Tensor[(1008), float32], %var_5302: Tensor[(250, 3), float32], %var_5316: Tensor[(12, 9, 8), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(250, 3), float32], Tensor[(12, 9, 8), bool]) {
  %70 = cast(%var_5301, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %71 = cast(%var_5302, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
  %72 = reshape(%70, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %73 = reshape(%71, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %74 = @func_2277(%72, %73) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %77 = cast(%var_5316, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %78 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
  %79 = greater(%76, %77) /* ty=Tensor[(12, 9, 8), bool] */;
  (%78, %var_5301, %var_5302, %79)
}

def @func_1911() -> (Tensor[(1, 9, 8), float32],) {
  %80 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  (%80,)
}

def @func_451() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %81 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %82 = %81.0;
  %83 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  (%82, %83)
}

def @func_3553(%var_3466: Tensor[(5, 7, 3), float32]) -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) {
  %84 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(96, 32), float64] */, dtype="float64") /* ty=Tensor[(96, 32), float64] */;
  %86 = reshape(%85, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %87 = @func_1651(%86) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %89 = shape_of(%var_3466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%var_3466, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %92 = cast(%var_3466, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %93 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %96 = minimum(%94, %95) /* ty=Tensor[(5, 7, 3), float32] */;
  %97 = cast(%96, dtype="int16") /* ty=Tensor[(5, 7, 3), int16] */;
  %98 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="int16") /* ty=Tensor[(5, 7, 3), int16] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %101 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 3), float32] */;
  %102 = %84.1;
  %103 = %87.3;
  %104 = greater_equal(%90, %91) /* ty=Tensor[(5, 7, 3), bool] */;
  %105 = maximum(%99, %100) /* ty=Tensor[(5, 7, 3), int16] */;
  %106 = acosh(%101) /* ty=Tensor[(5, 7, 3), float32] */;
  (%102, %103, meta[relay.Constant][2] /* ty=Tensor[(96, 32), float64] */, %104, %105, %106)
}

def @func_4723(%var_4721: Tensor[(6, 7, 1), float32], %var_4722: Tensor[(6, 7, 14), float32]) -> (Tensor[(6, 7, 1), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float32], Tensor[(3072), float64], Tensor[(6, 7, 14), float32]) {
  %123 = fn (%var_4645: Tensor[(6, 7, 1), float32], %var_4694: Tensor[(6, 7, 14), float32]) -> (Tensor[(6, 7, 1), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float32], Tensor[(3072), float64], Tensor[(6, 7, 14), float32]) {
    %107 = cast(%var_4645, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
    %108 = @func_3308() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %109 = cast(meta[relay.Constant][4] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %110 = reshape(%109, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
    %111 = cast(%var_4645, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
    %112 = tan(%111) /* ty=Tensor[(6, 7, 1), float64] */;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
    %114 = log(%113) /* ty=Tensor[(6, 7, 1), float32] */;
    %115 = cast(%114, dtype="uint16") /* ty=Tensor[(6, 7, 1), uint16] */;
    %116 = cast(%var_4694, dtype="uint16") /* ty=Tensor[(6, 7, 14), uint16] */;
    %117 = bitwise_or(%115, %116) /* ty=Tensor[(6, 7, 14), uint16] */;
    %118 = cast(%117, dtype="float32") /* ty=Tensor[(6, 7, 14), float32] */;
    %119 = exp(%107) /* ty=Tensor[(6, 7, 1), float32] */;
    %120 = %108.0;
    %121 = @func_2536(%110) /* ty=Tensor[(1536, 2), float32] */;
    %122 = asin(%118) /* ty=Tensor[(6, 7, 14), float32] */;
    (%119, %120, %121, meta[relay.Constant][4] /* ty=Tensor[(3072), float64] */, %122)
  };
  %123(%var_4721, %var_4722) /* ty=(Tensor[(6, 7, 1), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float32], Tensor[(3072), float64], Tensor[(6, 7, 14), float32]) */
}

def @func_4264(%var_4260: Tensor[(3072), float64], %var_4261: Tensor[(882), float32], %var_4262: Tensor[(360), float32], %var_4263: Tensor[(5292), float32]) -> (Tensor[(6, 9, 8), bool], Tensor[(7, 9, 8), int32], Tensor[(1, 9, 8), float32], Tensor[(728), float32], Tensor[(1, 840), float32], Tensor[(3072), float64], Tensor[(1080), float32], Tensor[(5, 150), float32], Tensor[(360), float32], Tensor[(5292), float32], Tensor[(882), int32]) {
  %152 = fn (%var_4205: Tensor[(3072), float64], %var_4211: Tensor[(882), float32], %var_4213: Tensor[(360), float32], %var_4214: Tensor[(5292), float32]) -> (Tensor[(6, 9, 8), bool], Tensor[(7, 9, 8), int32], Tensor[(1, 9, 8), float32], Tensor[(728), float32], Tensor[(1, 840), float32], Tensor[(3072), float64], Tensor[(1080), float32], Tensor[(5, 150), float32], Tensor[(360), float32], Tensor[(5292), float32], Tensor[(882), int32]) {
    %124 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
    %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
    %126 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %127 = cast(%var_4205, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %128 = reshape(%125, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), float32] */;
    %129 = reshape(%126, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %130 = reshape(%127, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
    %131 = @func_2580(%128, %129, %130) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) */;
    %132 = cast(%var_4211, dtype="float32") /* ty=Tensor[(882), float32] */;
    %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 150), float32] */, dtype="float32") /* ty=Tensor[(5, 150), float32] */;
    %134 = cast(%var_4213, dtype="float32") /* ty=Tensor[(360), float32] */;
    %135 = cast(%var_4214, dtype="float32") /* ty=Tensor[(5292), float32] */;
    %136 = reshape(%132, newshape=[882, 1]) /* ty=Tensor[(882, 1), float32] */;
    %137 = reshape(%133, newshape=[50, 15]) /* ty=Tensor[(50, 15), float32] */;
    %138 = reshape(%134, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %139 = reshape(%135, newshape=[882, 6]) /* ty=Tensor[(882, 6), float32] */;
    %140 = @func_2923(%136, %137, %138, %139) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) */;
    %141 = cast(%var_4211, dtype="float32") /* ty=Tensor[(882), float32] */;
    %142 = log10(%141) /* ty=Tensor[(882), float32] */;
    %143 = cast(%var_4211, dtype="int32") /* ty=Tensor[(882), int32] */;
    %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(1), int32] */;
    %145 = cast(%142, dtype="int32") /* ty=Tensor[(882), int32] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), int32] */;
    %147 = @func_4030() /* ty=Tensor[(6, 9, 8), bool] */;
    %148 = %124.1;
    %149 = %131.3;
    %150 = %140.6;
    %151 = multiply(%145, %146) /* ty=Tensor[(882), int32] */;
    (%147, %148, %149, meta[relay.Constant][5] /* ty=Tensor[(728), float32] */, meta[relay.Constant][6] /* ty=Tensor[(1, 840), float32] */, %var_4205, %150, meta[relay.Constant][7] /* ty=Tensor[(5, 150), float32] */, %var_4213, %var_4214, %151)
  };
  %152(%var_4260, %var_4261, %var_4262, %var_4263) /* ty=(Tensor[(6, 9, 8), bool], Tensor[(7, 9, 8), int32], Tensor[(1, 9, 8), float32], Tensor[(728), float32], Tensor[(1, 840), float32], Tensor[(3072), float64], Tensor[(1080), float32], Tensor[(5, 150), float32], Tensor[(360), float32], Tensor[(5292), float32], Tensor[(882), int32]) */
}

def @func_1587() -> (Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */
}

def @func_101() -> (Tensor[(1, 9, 8), float32],) {
  %153 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %154 = %153.0;
  (%154,)
}

def @func_1389(%var_1388: Tensor[(11, 6, 5), float64]) -> Tensor[(11, 6, 5), float32] {
  %161 = fn (%var_1376: Tensor[(11, 6, 5), float64]) -> Tensor[(11, 6, 5), float32] {
    %155 = cast(%var_1376, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
    %156 = acosh(%155) /* ty=Tensor[(11, 6, 5), float64] */;
    %157 = cast(%var_1376, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
    %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %159 = cast(%156, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
    %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%159, %160) /* ty=Tensor[(11, 6, 5), float32] */
  };
  %161(%var_1388) /* ty=Tensor[(11, 6, 5), float32] */
}

def @func_2277(%var_2275: Tensor[(504, 2), float32], %var_2276: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) {
  @func_2273(%var_2275, %var_2276) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_397() -> Tensor[(1, 9, 8), float32] {
  @func_395() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_4989() -> (Tensor[(1, 9, 8), float64],) {
  %163 = fn () -> (Tensor[(1, 9, 8), float64],) {
    %162 = @func_3653() /* ty=Tensor[(1, 9, 8), float64] */;
    (%162,)
  };
  %163() /* ty=(Tensor[(1, 9, 8), float64],) */
}

def @func_395() -> Tensor[(1, 9, 8), float32] {
  @func_319() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_1242(%var_1224: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %164 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %167 = cast(%var_1224, dtype="int8") /* ty=Tensor[(5, 9, 8), int8] */;
  %168 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %169 = multiply(%166, %167) /* ty=Tensor[(5, 9, 8), int8] */;
  %170 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  %171 = %168.3;
  (%169, %170, %171)
}

def @func_686() -> Tensor[(1, 9, 8), float32] {
  %173 = fn () -> Tensor[(1, 9, 8), float32] {
    %172 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %172.0
  };
  %173() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_2023() -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %174 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %175 = %174.2;
  %176 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  (%175, %176)
}

def @func_273() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */
}

def @func_1986(%var_1985: Tensor[(1536, 2), float64]) -> (Tensor[(1536, 2), float32], Tensor[(11, 6, 5), float32], Tensor[(330), float64], Tensor[(1, 9, 8), float32]) {
  %193 = fn (%var_1954: Tensor[(1536, 2), float64]) -> (Tensor[(1536, 2), float32], Tensor[(11, 6, 5), float32], Tensor[(330), float64], Tensor[(1, 9, 8), float32]) {
    %177 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
    %178 = %177.2;
    %179 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(1536, 2), uint64] */;
    %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(2), int32] */;
    %181 = cast(%178, dtype="uint64") /* ty=Tensor[(1536, 2), uint64] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %183 = bitwise_or(%181, %182) /* ty=Tensor[(1536, 2), uint64] */;
    %184 = cast(meta[relay.Constant][8] /* ty=Tensor[(1536, 2), uint64] */, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
    %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(2), int32] */;
    %186 = cast(%183, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
    %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %188 = cast(meta[relay.Constant][9] /* ty=Tensor[(330), float64] */, dtype="float64") /* ty=Tensor[(330), float64] */;
    %189 = reshape(%188, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
    %190 = add(%186, %187) /* ty=Tensor[(1536, 2), float32] */;
    %191 = @func_1387(%189) /* ty=Tensor[(11, 6, 5), float32] */;
    %192 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
    (%190, %191, meta[relay.Constant][9] /* ty=Tensor[(330), float64] */, %192)
  };
  %193(%var_1985) /* ty=(Tensor[(1536, 2), float32], Tensor[(11, 6, 5), float32], Tensor[(330), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_5260() -> (Tensor[(1, 9, 8), float32],) {
  %196 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %194 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %195 = %194.0;
    (%195,)
  };
  %196() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_46() -> (Tensor[(1, 9, 8), float32],) {
  %197 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %198 = acos(%197) /* ty=Tensor[(1, 9, 8), float64] */;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %200 = tan(%199) /* ty=Tensor[(1, 9, 8), float32] */;
  (%200,)
}

def @func_129() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_803() -> (Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) {
  %207 = fn () -> (Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) {
    %201 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
    %202 = cast(%201, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %203 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
    %204 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 9, 8), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
    %205 = logical_and(%202, %203) /* ty=Tensor[(6, 9, 8), bool] */;
    %206 = log(%204) /* ty=Tensor[(6, 9, 8), float64] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */
}

def @func_292(%var_291: Tensor[(9, 6, 16), float64]) -> (Tensor[(9, 6, 16), float64], Tensor[(1, 9, 8), float32]) {
  %211 = fn (%var_284: Tensor[(9, 6, 16), float64]) -> (Tensor[(9, 6, 16), float64], Tensor[(1, 9, 8), float32]) {
    %208 = cast(%var_284, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
    %209 = acos(%208) /* ty=Tensor[(9, 6, 16), float64] */;
    %210 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
    (%209, %210)
  };
  %211(%var_291) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_2698() -> Tensor[(?, 9, 8), uint32] {
  %218 = fn () -> Tensor[(?, 9, 8), uint32] {
    %212 = @func_1704() /* ty=Tensor[(1, 9, 8), float32] */;
    %213 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
    %214 = cast(%213, dtype="uint32") /* ty=Tensor[(1, 9, 8), uint32] */;
    %215 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
    %216 = cast(%212, dtype="uint32") /* ty=Tensor[(1, 9, 8), uint32] */;
    %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_xor(%216, %217) /* ty=Tensor[(?, 9, 8), uint32] */
  };
  %218() /* ty=Tensor[(?, 9, 8), uint32] */
}

def @func_320() -> Tensor[(1, 9, 8), float32] {
  %220 = fn () -> Tensor[(1, 9, 8), float32] {
    %219 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %219.0
  };
  %220() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_2764() -> (Tensor[(12, 9, 8), bool],) {
  %222 = fn () -> (Tensor[(12, 9, 8), bool],) {
    %221 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
    (%221,)
  };
  %222() /* ty=(Tensor[(12, 9, 8), bool],) */
}

def @func_1706() -> Tensor[(1, 9, 8), float32] {
  @func_1704() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_1928() -> (Tensor[(?, 9, 8), float64],) {
  @func_1926() /* ty=(Tensor[(?, 9, 8), float64],) */
}

def @func_2172(%var_2171: Tensor[(13, 16, 15), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) {
  %230 = fn (%var_2147: Tensor[(13, 16, 15), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) {
    %223 = cast(%var_2147, dtype="int64") /* ty=Tensor[(13, 16, 15), int64] */;
    %224 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(13, 16, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 16, 15), int64] */, dtype="int64") /* ty=Tensor[(13, 16, 15), int64] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %227 = @func_1926() /* ty=(Tensor[(?, 9, 8), float64],) */;
    %228 = maximum(%225, %226) /* ty=Tensor[(13, 16, 15), int64] */;
    %229 = %227.0;
    (%228, %229)
  };
  %230(%var_2171) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) */
}

def @func_639(%var_638: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %243 = fn (%var_603: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
    %231 = cast(%var_603, dtype="float64") /* ty=Tensor[(4, 5, 11), float64] */;
    %232 = atanh(%231) /* ty=Tensor[(4, 5, 11), float64] */;
    %233 = cast(%232, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
    %234 = cos(%233) /* ty=Tensor[(4, 5, 11), float32] */;
    %235 = cast(%var_603, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
    %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %237 = cast(%234, dtype="float32") /* ty=Tensor[(4, 5, 11), float32] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %239 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %240 = mod(%237, %238) /* ty=Tensor[(4, 5, 11), float32] */;
    %241 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
    %242 = %239.0;
    (%240, %241, %242)
  };
  %243(%var_638) /* ty=(Tensor[(4, 5, 11), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_920(%var_918: Tensor[(5, 10, 15), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) {
  @func_917(%var_918) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */
}

def @func_209() -> Tensor[(1, 9, 8), float32] {
  @func_156() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_4174(%var_4171: Tensor[(12, 9, 8), uint32], %var_4172: Tensor[(840, 1), float32], %var_4173: Tensor[(3072), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(14, 52), float32], Tensor[(840, 1), float32], Tensor[(3072), float64], Tensor[(1, 9, 8), float32]) {
  %258 = fn (%var_4124: Tensor[(12, 9, 8), uint32], %var_4156: Tensor[(840, 1), float32], %var_4157: Tensor[(3072), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(14, 52), float32], Tensor[(840, 1), float32], Tensor[(3072), float64], Tensor[(1, 9, 8), float32]) {
    %244 = @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */;
    %245 = cast(%244, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
    %246 = cast(%var_4124, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
    %247 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 52), float32] */, dtype="float32") /* ty=Tensor[(14, 52), float32] */;
    %248 = cast(%var_4156, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
    %249 = cast(%var_4157, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %250 = reshape(%247, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), float32] */;
    %251 = reshape(%248, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %252 = reshape(%249, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
    %253 = @func_2580(%250, %251, %252) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) */;
    %254 = @func_2468() /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
    %255 = less(%245, %246) /* ty=Tensor[(12, 9, 8), bool] */;
    %256 = %253.1;
    %257 = %254.1;
    (%255, %256, meta[relay.Constant][13] /* ty=Tensor[(14, 52), float32] */, %var_4156, %var_4157, %257)
  };
  %258(%var_4171, %var_4172, %var_4173) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(14, 52), float32], Tensor[(840, 1), float32], Tensor[(3072), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_3048() -> Tensor[(1, 9, 8), float32] {
  %260 = fn () -> Tensor[(1, 9, 8), float32] {
    %259 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
    %259.1
  };
  %260() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_758() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %261 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %262 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %264 = log(%263) /* ty=Tensor[(1, 9, 8), float64] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %266 = cast(%264, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %267 = %261.0;
  %268 = log2(%265) /* ty=Tensor[(1, 9, 8), float32] */;
  %269 = erf(%266) /* ty=Tensor[(1, 9, 8), float64] */;
  %270 = @func_685() /* ty=Tensor[(1, 9, 8), float32] */;
  (%267, %268, %269, %270)
}

def @func_577(%var_575: Tensor[(16, 12, 16), float64], %var_576: Tensor[(16, 12, 16), float64]) -> (Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) {
  @func_573(%var_575, %var_576) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) */
}

def @func_3677(%var_3670: uint16, %var_3671: Tensor[(6, 1, 4), uint16]) -> (Tensor[(6, 1, 4), uint16],) {
  %271 = cast(%var_3670, dtype="uint16") /* ty=uint16 */;
  %272 = cast(%var_3671, dtype="uint16") /* ty=Tensor[(6, 1, 4), uint16] */;
  %273 = bitwise_and(%271, %272) /* ty=Tensor[(6, 1, 4), uint16] */;
  (%273,)
}

def @func_3291() -> Tensor[(750), int32] {
  @func_2493() /* ty=Tensor[(750), int32] */
}

def @func_3408(%var_3406: Tensor[(12, 9, 8), float32]) -> (Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) {
  @func_3405(%var_3406) /* ty=(Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) */
}

def @func_4941(%var_4940: Tensor[(12, 4, 4), float32]) -> Tensor[(12, 4, 4), bool] {
  %278 = fn (%var_4935: Tensor[(12, 4, 4), float32]) -> Tensor[(12, 4, 4), bool] {
    %274 = cast(%var_4935, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
    %275 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%276, %277) /* ty=Tensor[(12, 4, 4), bool] */
  };
  %278(%var_4940) /* ty=Tensor[(12, 4, 4), bool] */
}

def @func_103() -> (Tensor[(1, 9, 8), float32],) {
  @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_271() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  %279 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
  %281 = @func_209() /* ty=Tensor[(1, 9, 8), float32] */;
  %282 = acosh(%280) /* ty=Tensor[(1, 9, 8), float64] */;
  (%281, %282)
}

def @func_3653() -> Tensor[(1, 9, 8), float64] {
  %283 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %283.0
}

def @func_2230() -> Tensor[(1, 9, 8), float32] {
  @func_1209() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_2638(%var_2636: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), int32] {
  @func_2635(%var_2636) /* ty=Tensor[(12, 9, 8), int32] */
}

def @func_48() -> (Tensor[(1, 9, 8), float32],) {
  @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_178(%var_177: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) {
  %288 = fn (%var_163: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) {
    %284 = cast(%var_163, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
    %285 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %286 = exp(%284) /* ty=Tensor[(14, 5, 12), float32] */;
    %287 = %285.0;
    (%286, %287)
  };
  %288(%var_177) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_3556(%var_3554: Tensor[(5, 7, 3), float32]) -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) {
  @func_3553(%var_3554) /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) */
}

def @func_3950() -> (Tensor[(1, 9, 8), float32], Tensor[(3072), float32], Tensor[(1536, 2), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32], Tensor[(?, 9, 8), uint32]) {
  @func_3948() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(3072), float32], Tensor[(1536, 2), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32], Tensor[(?, 9, 8), uint32]) */
}

def @func_786() -> Tensor[(12, 9, 8), bool] {
  @func_226() /* ty=Tensor[(12, 9, 8), bool] */
}

def @func_4929(%var_4927: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(750), float32], Tensor[(504, 2), float32], Tensor[(750), float32]) {
  %289 = @func_1911() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %290 = cast(meta[relay.Constant][15] /* ty=Tensor[(504, 2), float32] */, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %291 = cast(%var_4927, dtype="float32") /* ty=Tensor[(750), float32] */;
  %292 = reshape(%290, newshape=[504, 2]) /* ty=Tensor[(504, 2), float32] */;
  %293 = reshape(%291, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %294 = @func_2273(%292, %293) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) */;
  %295 = %289.0;
  %296 = %294.4;
  (%295, %296, meta[relay.Constant][15] /* ty=Tensor[(504, 2), float32] */, %var_4927)
}

def @func_2493() -> Tensor[(750), int32] {
  %297 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %298 = %297.4;
  %299 = cast(meta[relay.Constant][16] /* ty=Tensor[(750), float32] */, dtype="int32") /* ty=Tensor[(750), int32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(1), int32] */;
  %301 = cast(%298, dtype="int32") /* ty=Tensor[(750), int32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?), int32] */;
  minimum(%301, %302) /* ty=Tensor[(750), int32] */
}

def @func_936() -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
  %307 = fn () -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
    %303 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
    %304 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
    %305 = %303.0;
    %306 = %304.1;
    (%305, %306)
  };
  %307() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */
}

def @func_2421(%var_2417: Tensor[(1, 9, 8), float64], %var_2418: Tensor[(10, 9, 8), float64], %var_2419: Tensor[(15, 9, 8), float32], %var_2420: Tensor[(360), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
  %350 = fn (%var_2307: Tensor[(1, 9, 8), float64], %var_2340: Tensor[(10, 9, 8), float64], %var_2349: Tensor[(15, 9, 8), float32], %var_2382: Tensor[(360), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
    %308 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %309 = cast(%var_2307, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %310 = cast(%var_2340, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
    %311 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 1560), int64] */, dtype="int64") /* ty=Tensor[(2, 1560), int64] */;
    %312 = reshape(%311, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int64] */;
    %313 = @func_2170(%312) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) */;
    %314 = @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
    %315 = %314.0;
    %316 = cast(%var_2307, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %318 = cast(%315, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %320 = logical_or(%318, %319) /* ty=Tensor[(?, 9, 8), bool] */;
    %321 = cast(%320, dtype="float32") /* ty=Tensor[(?, 9, 8), float32] */;
    %322 = cosh(%321) /* ty=Tensor[(?, 9, 8), float32] */;
    %323 = cast(%322, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
    %324 = cast(%var_2349, dtype="bool") /* ty=Tensor[(15, 9, 8), bool] */;
    %325 = logical_or(%323, %324) /* ty=Tensor[(15, 9, 8), bool] */;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
    %327 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
    %328 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
    %329 = cast(meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, dtype="int32") /* ty=Tensor[(539, 1), int32] */;
    %330 = reshape(%327, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %331 = reshape(%328, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %332 = reshape(%329, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %333 = @func_841(%330, %331, %332) /* ty=(Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) */;
    %334 = cast(%322, dtype="uint32") /* ty=Tensor[(?, 9, 8), uint32] */;
    %335 = cast(%325, dtype="uint32") /* ty=Tensor[(15, 9, 8), uint32] */;
    %336 = cast(%var_2382, dtype="float32") /* ty=Tensor[(360), float32] */;
    %337 = reshape(%336, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %338 = @func_1242(%337) /* ty=(Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %340 = reshape(%339, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
    %341 = @func_176(%340) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
    %342 = %308.0;
    %343 = less(%309, %310) /* ty=Tensor[(10, 9, 8), bool] */;
    %344 = %313.0;
    %345 = log(%326) /* ty=Tensor[(15, 9, 8), float32] */;
    %346 = %333.1;
    %347 = add(%334, %335) /* ty=Tensor[(15, 9, 8), uint32] */;
    %348 = %338.1;
    %349 = %341.0;
    (%342, %343, %344, meta[relay.Constant][17] /* ty=Tensor[(2, 1560), int64] */, %345, %346, meta[relay.Constant][18] /* ty=Tensor[(539, 1), int32] */, %347, %348, %var_2382, %349, meta[relay.Constant][19] /* ty=Tensor[(840), float32] */)
  };
  %350(%var_2417, %var_2418, %var_2419, %var_2420) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) */
}

def @func_1210() -> Tensor[(1, 9, 8), float32] {
  %351 = fn () -> Tensor[(1, 9, 8), float32] {
    @func_319() /* ty=Tensor[(1, 9, 8), float32] */
  };
  %351() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_2539(%var_2537: Tensor[(1536, 2), float64]) -> Tensor[(1536, 2), float32] {
  @func_2536(%var_2537) /* ty=Tensor[(1536, 2), float32] */
}

def @func_1289() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %352 = @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
  %353 = @func_271() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */;
  %354 = %352.0;
  %355 = %353.0;
  (%354, %355)
}

def @func_2585(%var_2582: Tensor[(7, 8, 13), float32], %var_2583: Tensor[(840), float32], %var_2584: Tensor[(8, 384), float64]) -> (Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) {
  @func_2580(%var_2582, %var_2583, %var_2584) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) */
}

def @func_3948() -> (Tensor[(1, 9, 8), float32], Tensor[(3072), float32], Tensor[(1536, 2), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32], Tensor[(?, 9, 8), uint32]) {
  %356 = cast(meta[relay.Constant][20] /* ty=Tensor[(3072), float64] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %357 = cast(meta[relay.Constant][20] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %358 = reshape(%357, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %359 = @func_1651(%358) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %360 = %359.1;
  %361 = cast(meta[relay.Constant][20] /* ty=Tensor[(3072), float64] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(2), int32] */;
  %363 = cast(%360, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %365 = cast(meta[relay.Constant][21] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %366 = reshape(%365, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %367 = @func_3764(%366) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) */;
  %368 = @func_3047() /* ty=Tensor[(1, 9, 8), float32] */;
  %369 = tan(%356) /* ty=Tensor[(3072), float32] */;
  %370 = mod(%363, %364) /* ty=Tensor[(1536, 2), float32] */;
  %371 = %367.1;
  %372 = @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */;
  (%368, %369, %370, %371, meta[relay.Constant][21] /* ty=Tensor[(105), float32] */, %372)
}

def @func_1651(%var_1626: Tensor[(1536, 2), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %373 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %374 = %373.2;
  %375 = cast(%var_1626, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
  %377 = cast(%374, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %379 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %382 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
  %383 = @func_786() /* ty=Tensor[(12, 9, 8), bool] */;
  %384 = power(%377, %378) /* ty=Tensor[(1536, 2), float64] */;
  %385 = sqrt(%381) /* ty=Tensor[(1, 9, 8), float32] */;
  %386 = %382.0;
  (%383, %384, %385, %386)
}

def @func_917(%var_904: Tensor[(5, 10, 15), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) {
  %387 = cast(%var_904, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
  %388 = cos(%387) /* ty=Tensor[(5, 10, 15), float32] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
  %390 = exp(%389) /* ty=Tensor[(5, 10, 15), float64] */;
  %391 = cast(%388, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %396 = greater(%393, %394) /* ty=Tensor[(5, 10, 15), bool] */;
  %397 = %395.0;
  (%396, %397)
}

def @func_2580(%var_2543: Tensor[(7, 8, 13), float32], %var_2551: Tensor[(840), float32], %var_2557: Tensor[(8, 384), float64]) -> (Tensor[(7, 8, 13), float32], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(1, 9, 8), float32], Tensor[(8, 384), float64]) {
  %398 = cast(%var_2543, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
  %399 = cast(%var_2551, dtype="float32") /* ty=Tensor[(840), float32] */;
  %400 = reshape(%399, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %401 = @func_176(%400) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %402 = cast(%var_2557, dtype="float64") /* ty=Tensor[(8, 384), float64] */;
  %403 = reshape(%402, newshape=[1536, 2]) /* ty=Tensor[(1536, 2), float64] */;
  %404 = @func_1651(%403) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %405 = sqrt(%398) /* ty=Tensor[(7, 8, 13), float32] */;
  %406 = %401.1;
  %407 = %404.2;
  (%405, %406, %var_2551, %407, %var_2557)
}

def @func_1291() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_1289() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_2469() -> (Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  %418 = fn () -> (Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
    %408 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
    %409 = @func_1806() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) */;
    %410 = %409.1;
    %411 = cast(%410, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
    %412 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %413 = cast(%408, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
    %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %415 = @func_1289() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %416 = divide(%413, %414) /* ty=Tensor[(?, 9, 8), float64] */;
    %417 = %415.0;
    (%416, %417)
  };
  %418() /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_2015() -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
  %421 = fn () -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) {
    %419 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
    %420 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
    (%419, %420)
  };
  %421() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */
}

def @func_2506(%var_2504: Tensor[(3, 1, 15), int8], %var_2505: Tensor[(3, 14, 15), int8]) -> Tensor[(3, 14, 15), bool] {
  %424 = fn (%var_2496: Tensor[(3, 1, 15), int8], %var_2497: Tensor[(3, 14, 15), int8]) -> Tensor[(3, 14, 15), bool] {
    %422 = cast(%var_2496, dtype="bool") /* ty=Tensor[(3, 1, 15), bool] */;
    %423 = cast(%var_2497, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
    greater(%422, %423) /* ty=Tensor[(3, 14, 15), bool] */
  };
  %424(%var_2504, %var_2505) /* ty=Tensor[(3, 14, 15), bool] */
}

def @func_226() -> Tensor[(12, 9, 8), bool] {
  %425 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
  %426 = cast(%425, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  less_equal(%426, %427) /* ty=Tensor[(12, 9, 8), bool] */
}

def @func_4345(%var_4343: Tensor[(10, 10, 6), int16], %var_4344: Tensor[(3120), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(3120), int64], Tensor[(10, 10, 6), float64]) {
  %437 = fn (%var_4327: Tensor[(10, 10, 6), int16], %var_4332: Tensor[(3120), int64]) -> (Tensor[(13, 16, 15), int64], Tensor[(3120), int64], Tensor[(10, 10, 6), float64]) {
    %428 = cast(%var_4332, dtype="int64") /* ty=Tensor[(3120), int64] */;
    %429 = reshape(%428, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int64] */;
    %430 = @func_2170(%429) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(?, 9, 8), float64]) */;
    %431 = cast(meta[relay.Constant][23] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %432 = cast(%var_4327, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
    %433 = less_equal(%431, %432) /* ty=Tensor[(10, 10, 6), bool] */;
    %434 = cast(%433, dtype="float64") /* ty=Tensor[(10, 10, 6), float64] */;
    %435 = %430.0;
    %436 = cos(%434) /* ty=Tensor[(10, 10, 6), float64] */;
    (%435, %var_4332, %436)
  };
  %437(%var_4343, %var_4344) /* ty=(Tensor[(13, 16, 15), int64], Tensor[(3120), int64], Tensor[(10, 10, 6), float64]) */
}

def @func_1093(%var_1091: Tensor[(6, 12, 1), float32], %var_1092: Tensor[(6, 12, 14), float32]) -> (Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) {
  %445 = fn (%var_1069: Tensor[(6, 12, 1), float32], %var_1070: Tensor[(6, 12, 14), float32]) -> (Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) {
    %438 = cast(%var_1069, dtype="bool") /* ty=Tensor[(6, 12, 1), bool] */;
    %439 = cast(%var_1070, dtype="bool") /* ty=Tensor[(6, 12, 14), bool] */;
    %440 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %441 = cast(%var_1069, dtype="float64") /* ty=Tensor[(6, 12, 1), float64] */;
    %442 = not_equal(%438, %439) /* ty=Tensor[(6, 12, 14), bool] */;
    %443 = %440.0;
    %444 = cos(%441) /* ty=Tensor[(6, 12, 1), float64] */;
    (%442, %443, %444)
  };
  %445(%var_1091, %var_1092) /* ty=(Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) */
}

def @func_1361(%var_1358: Tensor[(882), float32], %var_1359: Tensor[(1008), float32], %var_1360: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) {
  %455 = fn (%var_1350: Tensor[(882), float32], %var_1351: Tensor[(1008), float32], %var_1352: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) {
    %446 = cast(%var_1350, dtype="float32") /* ty=Tensor[(882), float32] */;
    %447 = cast(%var_1351, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %448 = cast(%var_1352, dtype="float32") /* ty=Tensor[(750), float32] */;
    %449 = reshape(%446, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float32] */;
    %450 = reshape(%447, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %451 = reshape(%448, newshape=[750]) /* ty=Tensor[(750), float32] */;
    %452 = @func_1151(%449, %450, %451) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
    %453 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
    %454 = %452.1;
    (%453, %454, %var_1350, %var_1351, %var_1352)
  };
  %455(%var_1358, %var_1359, %var_1360) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) */
}

def @func_2943(%var_2942: Tensor[(14, 16, 7), float32]) -> Tensor[(14, 16, 7), float32] {
  %460 = fn (%var_2936: Tensor[(14, 16, 7), float32]) -> Tensor[(14, 16, 7), float32] {
    %456 = cast(%var_2936, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
    %457 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(14, 16, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%458, %459) /* ty=Tensor[(14, 16, 7), float32] */
  };
  %460(%var_2942) /* ty=Tensor[(14, 16, 7), float32] */
}

def @func_357() -> (Tensor[(1, 9, 8), float32],) {
  %463 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %461 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %462 = %461.0;
    (%462,)
  };
  %463() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_5218() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) {
  @func_5216() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64]) */
}

def @func_2635(%var_2626: Tensor[(12, 9, 8), float64]) -> Tensor[(12, 9, 8), int32] {
  %464 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %465 = %464.2;
  %466 = cast(%465, dtype="int32") /* ty=Tensor[(1, 9, 8), int32] */;
  %467 = cast(%var_2626, dtype="int32") /* ty=Tensor[(12, 9, 8), int32] */;
  right_shift(%466, %467) /* ty=Tensor[(12, 9, 8), int32] */
}

def @func_4441() -> Tensor[(750), float32] {
  @func_4439() /* ty=Tensor[(750), float32] */
}

def @func_760() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  @func_758() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_841(%var_810: Tensor[(11, 7, 7), int32], %var_811: Tensor[(11, 7, 7), int32], %var_821: Tensor[(11, 7, 7), int32]) -> (Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) {
  %468 = cast(%var_811, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %469 = shape_of(%var_810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_810, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %472 = cast(%var_821, dtype="int16") /* ty=Tensor[(11, 7, 7), int16] */;
  %473 = shape_of(%var_810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_810, dtype="int16") /* ty=Tensor[(11, 7, 7), int16] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %476 = equal(%470, %471) /* ty=Tensor[(11, 7, 7), bool] */;
  %477 = maximum(%474, %475) /* ty=Tensor[(11, 7, 7), int16] */;
  (%476, %477)
}

def @func_453() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_2979() -> Tensor[(?, 9, 8), uint32] {
  %478 = fn () -> Tensor[(?, 9, 8), uint32] {
    @func_2697() /* ty=Tensor[(?, 9, 8), uint32] */
  };
  %478() /* ty=Tensor[(?, 9, 8), uint32] */
}

def @func_3257(%var_3256: Tensor[(13, 1, 15), float32]) -> Tensor[(13, 1, 15), float32] {
  %480 = fn (%var_3252: Tensor[(13, 1, 15), float32]) -> Tensor[(13, 1, 15), float32] {
    %479 = cast(%var_3252, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
    log(%479) /* ty=Tensor[(13, 1, 15), float32] */
  };
  %480(%var_3256) /* ty=Tensor[(13, 1, 15), float32] */
}

def @func_4504(%var_4503: Tensor[(2, 7, 5), float32]) -> (Tensor[(2, 7, 5), bool], Tensor[(2, 7, 5), int32]) {
  %493 = fn (%var_4472: Tensor[(2, 7, 5), float32]) -> (Tensor[(2, 7, 5), bool], Tensor[(2, 7, 5), int32]) {
    %481 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 5), float32] */;
    %482 = sqrt(%481) /* ty=Tensor[(2, 7, 5), float32] */;
    %483 = cast(%var_4472, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
    %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%482, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %487 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 5), float32] */, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
    %488 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %489 = cast(%482, dtype="int32") /* ty=Tensor[(2, 7, 5), int32] */;
    %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %491 = less(%485, %486) /* ty=Tensor[(2, 7, 5), bool] */;
    %492 = add(%489, %490) /* ty=Tensor[(2, 7, 5), int32] */;
    (%491, %492)
  };
  %493(%var_4503) /* ty=(Tensor[(2, 7, 5), bool], Tensor[(2, 7, 5), int32]) */
}

def @func_2232() -> Tensor[(1, 9, 8), float32] {
  @func_2230() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_211() -> Tensor[(1, 9, 8), float32] {
  @func_209() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_1926() -> (Tensor[(?, 9, 8), float64],) {
  %494 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %495 = %494.1;
  (%495,)
}

def @func_1654(%var_1652: Tensor[(1536, 2), float64]) -> (Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_1651(%var_1652) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(1536, 2), float64], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_3681(%var_3679: uint16, %var_3680: Tensor[(6, 1, 4), uint16]) -> (Tensor[(6, 1, 4), uint16],) {
  @func_3677(%var_3679, %var_3680) /* ty=(Tensor[(6, 1, 4), uint16],) */
}

def @func_5019(%var_5018: Tensor[(1568), float32]) -> (Tensor[(?, 9, 8), float64], Tensor[(1568), float32], Tensor[(14, 16, 7), float64]) {
  %503 = fn (%var_5002: Tensor[(1568), float32]) -> (Tensor[(?, 9, 8), float64], Tensor[(1568), float32], Tensor[(14, 16, 7), float64]) {
    %496 = @func_1926() /* ty=(Tensor[(?, 9, 8), float64],) */;
    %497 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %498 = reshape(%497, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float32] */;
    %499 = @func_2941(%498) /* ty=Tensor[(14, 16, 7), float32] */;
    %500 = cast(%499, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
    %501 = %496.0;
    %502 = asin(%500) /* ty=Tensor[(14, 16, 7), float64] */;
    (%501, %var_5002, %502)
  };
  %503(%var_5018) /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1568), float32], Tensor[(14, 16, 7), float64]) */
}

def @func_1807() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) {
  %508 = fn () -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) {
    %504 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %505 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
    %506 = %504.1;
    %507 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
    (%505, %506, %507)
  };
  %508() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) */
}

def @func_4318() -> (Tensor[(1, 9, 8), float32],) {
  %512 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %509 = @func_3653() /* ty=Tensor[(1, 9, 8), float64] */;
    %510 = cast(%509, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
    %511 = cos(%510) /* ty=Tensor[(1, 9, 8), float32] */;
    (%511,)
  };
  %512() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_4543() -> Tensor[(7, 9, 8), int32] {
  %514 = fn () -> Tensor[(7, 9, 8), int32] {
    %513 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
    %513.1
  };
  %514() /* ty=Tensor[(7, 9, 8), int32] */
}

def @func_868() -> Tensor[(6, 9, 8), float64] {
  %516 = fn () -> Tensor[(6, 9, 8), float64] {
    %515 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
    %515.1
  };
  %516() /* ty=Tensor[(6, 9, 8), float64] */
}

def @func_2928(%var_2924: Tensor[(882, 1), float32], %var_2925: Tensor[(50, 15), float32], %var_2926: Tensor[(360), float32], %var_2927: Tensor[(882, 6), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) {
  %547 = fn (%var_2870: Tensor[(882, 1), float32], %var_2872: Tensor[(50, 15), float32], %var_2881: Tensor[(360), float32], %var_2885: Tensor[(882, 6), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) {
    %517 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
    %518 = cast(%var_2870, dtype="float32") /* ty=Tensor[(882, 1), float32] */;
    %519 = cast(meta[relay.Constant][26] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %520 = cast(%var_2872, dtype="float32") /* ty=Tensor[(50, 15), float32] */;
    %521 = reshape(%518, newshape=[882]) /* ty=Tensor[(882), float32] */;
    %522 = reshape(%519, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %523 = reshape(%520, newshape=[750]) /* ty=Tensor[(750), float32] */;
    %524 = @func_1357(%521, %522, %523) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(882), float32], Tensor[(1008), float32], Tensor[(750), float32]) */;
    %525 = %517.3;
    %526 = cast(%525, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
    %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %528 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %529 = cast(%var_2881, dtype="float32") /* ty=Tensor[(360), float32] */;
    %530 = reshape(%526, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float64] */;
    %531 = reshape(%527, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float64] */;
    %532 = reshape(%528, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float32] */;
    %533 = reshape(%529, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %534 = @func_2416(%530, %531, %532, %533) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(10, 9, 8), bool], Tensor[(13, 16, 15), int64], Tensor[(2, 1560), int64], Tensor[(15, 9, 8), float32], Tensor[(11, 7, 7), int16], Tensor[(539, 1), int32], Tensor[(15, 9, 8), uint32], Tensor[(1, 9, 8), float32], Tensor[(360), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) */;
    %535 = cast(%var_2870, dtype="float64") /* ty=Tensor[(882, 1), float64] */;
    %536 = cast(%var_2885, dtype="float64") /* ty=Tensor[(882, 6), float64] */;
    %537 = floor_mod(%535, %536) /* ty=Tensor[(882, 6), float64] */;
    %538 = cast(%537, dtype="float32") /* ty=Tensor[(882, 6), float32] */;
    %539 = sqrt(%538) /* ty=Tensor[(882, 6), float32] */;
    %540 = cast(%var_2885, dtype="uint32") /* ty=Tensor[(882, 6), uint32] */;
    %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(2), int32] */;
    %542 = cast(%539, dtype="uint32") /* ty=Tensor[(882, 6), uint32] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %544 = %524.0;
    %545 = %534.9;
    %546 = right_shift(%542, %543) /* ty=Tensor[(882, 6), uint32] */;
    (%525, %544, meta[relay.Constant][26] /* ty=Tensor[(1008), float32] */, %var_2872, %545, meta[relay.Constant][27] /* ty=Tensor[(720), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */, %var_2881, %546)
  };
  %547(%var_2924, %var_2925, %var_2926, %var_2927) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1008), float32], Tensor[(50, 15), float32], Tensor[(360), float32], Tensor[(720), float64], Tensor[(1080), float32], Tensor[(360), float32], Tensor[(882, 6), uint32]) */
}

def @func_3293() -> Tensor[(750), int32] {
  @func_3291() /* ty=Tensor[(750), int32] */
}

def @func_1899(%var_1897: Tensor[(750), float32], %var_1898: Tensor[(840), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(4, 9, 8), bool], Tensor[(750), float32], Tensor[(288), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
  %562 = fn (%var_1886: Tensor[(750), float32], %var_1890: Tensor[(840), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(4, 9, 8), bool], Tensor[(750), float32], Tensor[(288), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) {
    %548 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %549 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
    %550 = cast(%var_1886, dtype="float32") /* ty=Tensor[(750), float32] */;
    %551 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %552 = reshape(%550, newshape=[750]) /* ty=Tensor[(750), float32] */;
    %553 = reshape(%551, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), float32] */;
    %554 = @func_981(%552, %553) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) */;
    %555 = cast(%var_1890, dtype="float32") /* ty=Tensor[(840), float32] */;
    %556 = reshape(%555, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
    %557 = @func_176(%556) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
    %558 = %548.0;
    %559 = %549.1;
    %560 = %554.2;
    %561 = %557.0;
    (%558, %559, %560, %var_1886, meta[relay.Constant][29] /* ty=Tensor[(288), float32] */, %561, %var_1890)
  };
  %562(%var_1897, %var_1898) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(4, 9, 8), bool], Tensor[(750), float32], Tensor[(288), float32], Tensor[(14, 5, 12), float32], Tensor[(840), float32]) */
}

def @func_5239() -> (Tensor[(12, 9, 8), bool], Tensor[(12, 9, 8), float32]) {
  %568 = fn () -> (Tensor[(12, 9, 8), bool], Tensor[(12, 9, 8), float32]) {
    %563 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
    %564 = cast(%563, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
    %565 = reshape(%564, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), float32] */;
    %566 = @func_3405(%565) /* ty=(Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) */;
    %567 = %566.1;
    (%563, %567)
  };
  %568() /* ty=(Tensor[(12, 9, 8), bool], Tensor[(12, 9, 8), float32]) */
}

def @func_3308() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  %569 = @func_101() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %570 = %569.0;
  %571 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  (%570, %571)
}

def @func_2536(%var_2526: Tensor[(1536, 2), float64]) -> Tensor[(1536, 2), float32] {
  %572 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
  %573 = %572.2;
  %574 = cast(%var_2526, dtype="int8") /* ty=Tensor[(1536, 2), int8] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %576 = cast(%573, dtype="int8") /* ty=Tensor[(1536, 2), int8] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %578 = bitwise_xor(%576, %577) /* ty=Tensor[(1536, 2), int8] */;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(1536, 2), float32] */;
  exp(%579) /* ty=Tensor[(1536, 2), float32] */
}

def @func_2025() -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) {
  @func_2023() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_3766(%var_3765: Tensor[(105), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) {
  %585 = fn (%var_3760: Tensor[(105), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) {
    %580 = cast(%var_3760, dtype="float32") /* ty=Tensor[(105), float32] */;
    %581 = reshape(%580, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float32] */;
    %582 = @func_3553(%581) /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(96, 32), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), int16], Tensor[(5, 7, 3), float32]) */;
    %583 = @func_156() /* ty=Tensor[(1, 9, 8), float32] */;
    %584 = %582.3;
    (%583, %584, %var_3760)
  };
  %585(%var_3765) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(5, 7, 3), bool], Tensor[(105), float32]) */
}

def @func_4921(%var_4919: Tensor[(3, 14, 8), float64]) -> (Tensor[(3, 14, 8), float64], Tensor[(195), float32], Tensor[(13, ?, 15), float32], Tensor[(1, 9, 8), float32]) {
  @func_4918(%var_4919) /* ty=(Tensor[(3, 14, 8), float64], Tensor[(195), float32], Tensor[(13, ?, 15), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_1061(%var_1060: Tensor[(6, 9, 8), float64]) -> (Tensor[(6, 9, 8), float64], Tensor[(11, 7, 7), bool], Tensor[(539), float64], Tensor[(1, 9, 8), float32]) {
  %604 = fn (%var_1033: Tensor[(6, 9, 8), float64]) -> (Tensor[(6, 9, 8), float64], Tensor[(11, 7, 7), bool], Tensor[(539), float64], Tensor[(1, 9, 8), float32]) {
    %586 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
    %587 = cast(%var_1033, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
    %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%586, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
    %592 = cast(meta[relay.Constant][30] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
    %593 = cast(meta[relay.Constant][30] /* ty=Tensor[(539), int32] */, dtype="int32") /* ty=Tensor[(539), int32] */;
    %594 = reshape(%591, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %595 = reshape(%592, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %596 = reshape(%593, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), int32] */;
    %597 = @func_841(%594, %595, %596) /* ty=(Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) */;
    %598 = cast(meta[relay.Constant][30] /* ty=Tensor[(539), int32] */, dtype="float64") /* ty=Tensor[(539), float64] */;
    %599 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %600 = divide(%589, %590) /* ty=Tensor[(6, 9, 8), float64] */;
    %601 = %597.0;
    %602 = rsqrt(%598) /* ty=Tensor[(539), float64] */;
    %603 = %599.0;
    (%600, %601, %602, %603)
  };
  %604(%var_1060) /* ty=(Tensor[(6, 9, 8), float64], Tensor[(11, 7, 7), bool], Tensor[(539), float64], Tensor[(1, 9, 8), float32]) */
}

def @func_3655() -> Tensor[(1, 9, 8), float64] {
  @func_3653() /* ty=Tensor[(1, 9, 8), float64] */
}

def @func_788() -> Tensor[(12, 9, 8), bool] {
  @func_786() /* ty=Tensor[(12, 9, 8), bool] */
}

def @func_1419() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) {
  %612 = fn () -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) {
    %605 = cast(meta[relay.Constant][31] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
    %606 = cast(meta[relay.Constant][31] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
    %607 = reshape(%605, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
    %608 = reshape(%606, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
    %609 = @func_573(%607, %608) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) */;
    %610 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
    %611 = %609.3;
    (%610, %611, meta[relay.Constant][31] /* ty=Tensor[(1536, 2), float64] */)
  };
  %612() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */
}

def @func_4439() -> Tensor[(750), float32] {
  %613 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
  %613.0
}

def @func_4918(%var_4874: Tensor[(3, 14, 8), float64]) -> (Tensor[(3, 14, 8), float64], Tensor[(195), float32], Tensor[(13, ?, 15), float32], Tensor[(1, 9, 8), float32]) {
  %614 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %615 = shape_of(%var_4874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_4874, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %618 = cast(meta[relay.Constant][33] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %619 = reshape(%618, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float32] */;
  %620 = @func_3255(%619) /* ty=Tensor[(13, 1, 15), float32] */;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(13, 1, 15), float64] */;
  %622 = atan(%621) /* ty=Tensor[(13, 1, 15), float64] */;
  %623 = cast(%620, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="float32") /* ty=Tensor[(13, 1, 15), float32] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %627 = @func_1289() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %628 = minimum(%616, %617) /* ty=Tensor[(3, 14, 8), float64] */;
  %629 = power(%625, %626) /* ty=Tensor[(13, ?, 15), float32] */;
  %630 = %627.0;
  (%628, meta[relay.Constant][33] /* ty=Tensor[(195), float32] */, %629, %630)
}

def @func_3310() -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_3308() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_573(%var_471: Tensor[(16, 12, 16), float64], %var_472: Tensor[(16, 12, 16), float64]) -> (Tensor[(1, 9, 8), float32], Tensor[(?, 9, 8), int8], Tensor[(12, 9, 8), bool], Tensor[(1, 9, 8), float32], Tensor[(840), float32], Tensor[(16, 12, 16), float32]) {
  %631 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %632 = @func_46() /* ty=(Tensor[(1, 9, 8), float32],) */;
  %633 = %632.0;
  %634 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %635 = %634.0;
  %636 = cast(%635, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %637 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%633, dtype="int8") /* ty=Tensor[(1, 9, 8), int8] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %640 = cast(meta[relay.Constant][34] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %641 = reshape(%640, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %642 = @func_176(%641) /* ty=(Tensor[(14, 5, 12), float32], Tensor[(1, 9, 8), float32]) */;
  %643 = cast(%var_472, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %644 = shape_of(%var_471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%var_471, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %647 = add(%645, %646) /* ty=Tensor[(16, 12, 16), float64] */;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %649 = shape_of(%var_472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_472, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %652 = %631.0;
  %653 = right_shift(%638, %639) /* ty=Tensor[(?, 9, 8), int8] */;
  %654 = @func_226() /* ty=Tensor[(12, 9, 8), bool] */;
  %655 = %642.1;
  %656 = floor_mod(%650, %651) /* ty=Tensor[(16, 12, 16), float32] */;
  (%652, %653, %654, %655, meta[relay.Constant][34] /* ty=Tensor[(840), float32] */, %656)
}

def @func_5251() -> (Tensor[(1, 9, 8), float32],) {
  %659 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %657 = @func_2849() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */;
    %658 = %657.3;
    (%658,)
  };
  %659() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_157() -> Tensor[(1, 9, 8), float32] {
  %661 = fn () -> Tensor[(1, 9, 8), float32] {
    %660 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
    %660.1
  };
  %661() /* ty=Tensor[(1, 9, 8), float32] */
}

def @func_984(%var_982: Tensor[(750), float32], %var_983: Tensor[(4, 9, 8), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) {
  %670 = fn (%var_962: Tensor[(750), float32], %var_966: Tensor[(4, 9, 8), float32]) -> (Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) {
    %662 = cast(%var_962, dtype="float32") /* ty=Tensor[(750), float32] */;
    %663 = reshape(%662, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
    %664 = @func_917(%663) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
    %665 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
    %666 = cast(%665, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
    %667 = cast(%var_966, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
    %668 = %664.0;
    %669 = greater(%666, %667) /* ty=Tensor[(4, 9, 8), bool] */;
    (%668, %var_962, %669)
  };
  %670(%var_982, %var_983) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(750), float32], Tensor[(4, 9, 8), bool]) */
}

def @func_4030() -> Tensor[(6, 9, 8), bool] {
  %671 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %671.0
}

def @func_1156(%var_1153: Tensor[(14, 9, 7), float32], %var_1154: Tensor[(1008), float32], %var_1155: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  @func_1151(%var_1153, %var_1154, %var_1155) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */
}

def @func_4032() -> Tensor[(6, 9, 8), bool] {
  @func_4030() /* ty=Tensor[(6, 9, 8), bool] */
}

def @func_1151(%var_1097: Tensor[(14, 9, 7), float32], %var_1141: Tensor[(1008), float32], %var_1149: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) {
  %672 = @func_127() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %673 = @func_802() /* ty=(Tensor[(6, 9, 8), bool], Tensor[(6, 9, 8), float64]) */;
  %674 = cast(%var_1097, dtype="float32") /* ty=Tensor[(14, 9, 7), float32] */;
  %675 = log(%674) /* ty=Tensor[(14, 9, 7), float32] */;
  %676 = cast(%var_1097, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %680 = %672.0;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %682 = cast(%var_1141, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %683 = reshape(%681, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %684 = reshape(%682, newshape=[6, 12, 14]) /* ty=Tensor[(6, 12, 14), float32] */;
  %685 = @func_1090(%683, %684) /* ty=(Tensor[(6, 12, 14), bool], Tensor[(1, 9, 8), float32], Tensor[(6, 12, 1), float64]) */;
  %686 = cast(%var_1149, dtype="float32") /* ty=Tensor[(750), float32] */;
  %687 = reshape(%686, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), float32] */;
  %688 = @func_917(%687) /* ty=(Tensor[(5, 10, 15), bool], Tensor[(1, 9, 8), float32]) */;
  %689 = %673.1;
  %690 = @func_319() /* ty=Tensor[(1, 9, 8), float32] */;
  %691 = mod(%678, %679) /* ty=Tensor[(14, 9, 7), float64] */;
  %692 = @func_867() /* ty=Tensor[(6, 9, 8), float64] */;
  %693 = %685.2;
  %694 = %688.0;
  (%680, %689, %690, %691, %692, %693, %var_1141, %694, %var_1149)
}

def @func_2273(%var_2245: Tensor[(504, 2), float32], %var_2246: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(882), float32], Tensor[(504, 2), float32], Tensor[(750), float32], Tensor[(1, 9, 8), float32]) {
  %695 = cast(meta[relay.Constant][35] /* ty=Tensor[(882), float32] */, dtype="float32") /* ty=Tensor[(882), float32] */;
  %696 = cast(%var_2245, dtype="float32") /* ty=Tensor[(504, 2), float32] */;
  %697 = cast(%var_2246, dtype="float32") /* ty=Tensor[(750), float32] */;
  %698 = reshape(%695, newshape=[14, 9, 7]) /* ty=Tensor[(14, 9, 7), float32] */;
  %699 = reshape(%696, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %700 = reshape(%697, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %701 = @func_1151(%698, %699, %700) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(1, 9, 8), float32], Tensor[(14, 9, 7), float64], Tensor[(6, 9, 8), float64], Tensor[(6, 12, 1), float64], Tensor[(1008), float32], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %702 = @func_451() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */;
  %703 = @func_395() /* ty=Tensor[(1, 9, 8), float32] */;
  %704 = %701.0;
  %705 = %702.0;
  (%703, %704, meta[relay.Constant][35] /* ty=Tensor[(882), float32] */, %var_2245, %var_2246, %705)
}

def @func_4857() -> (Tensor[(1, 9, 8), float32],) {
  %708 = fn () -> (Tensor[(1, 9, 8), float32],) {
    %706 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
    %707 = %706.1;
    (%707,)
  };
  %708() /* ty=(Tensor[(1, 9, 8), float32],) */
}

def @func_2850() -> (Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) {
  %725 = fn () -> (Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) {
    %709 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
    %710 = @func_2468() /* ty=(Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float32]) */;
    %711 = %710.0;
    %712 = cast(%711, dtype="int32") /* ty=Tensor[(?, 9, 8), int32] */;
    %713 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 9, 8), float64] */, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
    %714 = cast(%711, dtype="float64") /* ty=Tensor[(?, 9, 8), float64] */;
    %715 = sin(%714) /* ty=Tensor[(?, 9, 8), float64] */;
    %716 = cast(%711, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
    %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %718 = cast(%715, dtype="bool") /* ty=Tensor[(?, 9, 8), bool] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %720 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %721 = %709.4;
    %722 = maximum(%712, %713) /* ty=Tensor[(7, 9, 8), int32] */;
    %723 = less_equal(%718, %719) /* ty=Tensor[(?, 9, 8), bool] */;
    %724 = %720.0;
    (%721, %722, %723, %724)
  };
  %725() /* ty=(Tensor[(750), float32], Tensor[(7, 9, 8), int32], Tensor[(?, 9, 8), bool], Tensor[(1, 9, 8), float32]) */
}

def @func_1245(%var_1243: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) {
  @func_1242(%var_1243) /* ty=(Tensor[(5, 9, 8), int8], Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32]) */
}

def @func_3063() -> Tensor[(1, 9, 8), float64] {
  @func_3061() /* ty=Tensor[(1, 9, 8), float64] */
}

def @func_3622(%var_3621: Tensor[(39, 5), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(13, 1, 15), float32], Tensor[(39, 5), float32]) {
  %735 = fn (%var_3606: Tensor[(39, 5), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(13, 1, 15), float32], Tensor[(39, 5), float32]) {
    %726 = @func_356() /* ty=(Tensor[(1, 9, 8), float32],) */;
    %727 = @func_935() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64]) */;
    %728 = cast(%var_3606, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
    %729 = reshape(%728, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), float32] */;
    %730 = cast(%var_3606, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
    %731 = %726.0;
    %732 = %727.1;
    %733 = @func_3255(%729) /* ty=Tensor[(13, 1, 15), float32] */;
    %734 = sigmoid(%730) /* ty=Tensor[(39, 5), float32] */;
    (%731, %732, %733, %734)
  };
  %735(%var_3621) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(6, 9, 8), float64], Tensor[(13, 1, 15), float32], Tensor[(39, 5), float32]) */
}

def @func_2495() -> Tensor[(750), int32] {
  @func_2493() /* ty=Tensor[(750), int32] */
}

def @func_846(%var_843: Tensor[(11, 7, 7), int32], %var_844: Tensor[(11, 7, 7), int32], %var_845: Tensor[(11, 7, 7), int32]) -> (Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) {
  @func_841(%var_843, %var_844, %var_845) /* ty=(Tensor[(11, 7, 7), bool], Tensor[(11, 7, 7), int16]) */
}

def @func_4932(%var_4930: Tensor[(750), float32]) -> (Tensor[(1, 9, 8), float32], Tensor[(750), float32], Tensor[(504, 2), float32], Tensor[(750), float32]) {
  @func_4929(%var_4930) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(750), float32], Tensor[(504, 2), float32], Tensor[(750), float32]) */
}

def @func_3405(%var_3377: Tensor[(12, 9, 8), float32]) -> (Tensor[(12, 9, 8), int64], Tensor[(12, 9, 8), float32]) {
  %736 = @func_1209() /* ty=Tensor[(1, 9, 8), float32] */;
  %737 = cast(%736, dtype="int64") /* ty=Tensor[(1, 9, 8), int64] */;
  %738 = cast(%var_3377, dtype="int64") /* ty=Tensor[(12, 9, 8), int64] */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(1, 9, 8), bool] */;
  %740 = cast(%var_3377, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %741 = logical_and(%739, %740) /* ty=Tensor[(12, 9, 8), bool] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %743 = exp(%742) /* ty=Tensor[(12, 9, 8), float32] */;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(12, 9, 8), float32] */;
  %745 = subtract(%737, %738) /* ty=Tensor[(12, 9, 8), int64] */;
  %746 = sinh(%744) /* ty=Tensor[(12, 9, 8), float32] */;
  (%745, %746)
}

def @func_5085() -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(12, 9, 8), bool]) {
  %754 = fn () -> (Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(12, 9, 8), bool]) {
    %747 = @func_1418() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(1536, 2), float64]) */;
    %748 = %747.0;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(1, 9, 8), float64] */;
    %750 = @func_1806() /* ty=(Tensor[(1, 9, 8), float32], Tensor[(1, 9, 8), float32], Tensor[(12, 9, 8), bool]) */;
    %751 = @func_3061() /* ty=Tensor[(1, 9, 8), float64] */;
    %752 = atan(%749) /* ty=Tensor[(1, 9, 8), float64] */;
    %753 = %750.2;
    (%751, %752, %753)
  };
  %754() /* ty=(Tensor[(1, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(12, 9, 8), bool]) */
}

def @func_3061() -> Tensor[(1, 9, 8), float64] {
  %755 = @func_1585() /* ty=(Tensor[(1008), float32], Tensor[(?, 9, 8), float64], Tensor[(1, 9, 8), float64], Tensor[(5, 10, 15), bool], Tensor[(750), float32]) */;
  %755.2
}

def @func_228() -> Tensor[(12, 9, 8), bool] {
  @func_226() /* ty=Tensor[(12, 9, 8), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

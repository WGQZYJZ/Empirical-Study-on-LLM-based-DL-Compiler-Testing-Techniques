import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_161 = relay.var("var_161", dtype = "float32", shape = (16, 6, 11))#candidate|161|(16, 6, 11)|var|float32
uop_162 = relay.erf(var_161.astype('float32')) # shape=(16, 6, 11)
output = uop_162
output2 = uop_162
func_226 = relay.Function([var_161,], output)
mod['func_226'] = func_226
mod = relay.transform.InferType()(mod)
var_227 = relay.var("var_227", dtype = "float32", shape = (16, 6, 11))#candidate|227|(16, 6, 11)|var|float32
output = func_226(var_227)
func_228 = relay.Function([var_227], output)
mutated_mod['func_228'] = func_228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_432 = relay.var("var_432", dtype = "float64", shape = (5, 11, 8))#candidate|432|(5, 11, 8)|var|float64
uop_433 = relay.log2(var_432.astype('float64')) # shape=(5, 11, 8)
func_226_call = mod.get_global_var('func_226')
func_228_call = mutated_mod.get_global_var('func_228')
const_436 = relay.const([-6.608372,9.381500,-8.927657,-1.984636,4.652548,7.160404,-3.378741,5.917772,-6.684072,-5.167882,-2.368635,-7.747529,-0.170972,-3.814538,7.651457,-6.480178,1.724731,4.486259,4.162033,-8.938989,3.746497,-4.769648,-4.975495,8.925157,1.929945,2.221337,3.496153,-7.416313,-4.223427,-5.565415,8.313872,-2.314089,-8.262759,-3.511974,4.116404,9.540485,-4.059059,-7.371931,3.038583,-2.589305,4.427435,1.607574,9.413698,5.176363,-5.092203,5.730206,-8.758053,1.552357,1.537390,-2.795948,-3.234088,-3.594631,9.739020,2.129890,-9.149028,2.451482,7.759087,6.337216,-7.996346,5.242392,-9.531255,0.950477,-8.267554,1.610967,-0.432796,-3.625426,0.030573,-4.846880,8.683917,-7.553889,0.664983,-8.972182,-0.497422,1.199269,-4.870347,8.359701,-9.520695,5.645705,1.143307,-1.039460,8.334056,-1.511536,0.940573,0.123290,-8.800157,6.961837,-6.692989,5.918748,2.412338,2.240669,4.232393,-0.264599,5.782697,-7.448471,-3.337309,2.554894,2.949099,0.479311,-9.558107,4.549707,-7.142756,-0.651877,-9.233944,2.388914,-4.256706,4.779909,4.957992,2.077876,-5.745581,-4.776195,4.965445,-3.107785,0.920587,0.562875,-3.716960,1.652943,3.907395,0.588553,9.688156,6.603891,-6.136787,0.162960,-1.470075,-5.597818,-1.729367,-1.753761,-6.459052,-4.314191,-2.506411,1.615852,-4.674224,1.456818,-0.143282,-7.757145,0.387959,-4.643996,-9.865456,4.314999,-6.355216,4.946457,-2.003843,-3.386324,-8.550374,2.056428,1.195136,-8.951191,1.716891,6.198431,-4.107533,2.507810,-2.294783,0.777134,9.842375,8.245141,3.152299,-5.003923,-5.431780,-7.826884,0.168071,3.628673,7.422561,-9.198107,0.856285,-4.225316,9.180580,9.585863,5.131017,5.143427,-6.113185,1.963559,4.613376,3.808535,-2.908380,4.100407,0.466557,-1.961166,-1.465687,2.922969,1.048401,1.617809,3.836905,-9.127134,-3.285484,2.482473,-5.090457,-6.083431,-8.365506,-6.212557,4.015008,-1.233640,-8.512648,3.986895,-7.935526,7.414384,1.652377,-0.328862,3.815561,5.565437,-6.162898,-2.552426,0.018614,0.307256,7.769183,1.398770,3.093512,1.954580,-0.338961,-8.338683,-7.560034,-3.837661,-2.667939,-5.135859,9.768975,3.327326,0.927916,2.339601,-2.187058,-5.321370,-2.019328,2.430770,-3.386022,2.144488,7.962295,4.640255,3.928021,7.498029,-8.855444,-7.193829,-6.713129,-3.079766,7.747533,-1.692294,-3.147907,5.418952,-6.156457,-7.586034,-9.577283,-3.811686,1.513037,6.777735,0.529695,-6.008509,-9.292981,-2.953885,3.756886,-8.315199,-6.429849,-5.115908,-5.269358,8.786975,-9.666745,5.069441,7.569603,5.328002,5.271916,-8.555911,6.686367,-1.151642,5.343766,-1.206650,9.570667,7.876047,-5.062793,-6.404473,-4.278119,4.618991,7.922446,5.067746,-0.594655,3.427079,8.076240,5.737886,1.383523,-7.064047,-5.046255,7.677185,-6.577127,4.474932,-7.950476,7.637151,9.418966,-9.448899,6.961544,0.791813,-4.150156,8.542778,-2.720098,-4.979930,-7.317386,-9.142163,-2.212107,6.404846,2.890951,6.627916,-8.085882,-9.384170,1.832005,0.613623,-6.548882,3.518801,1.635406,-7.452226,5.889137,0.890510,9.026818,-5.068670,9.225576,-7.899151,-2.068418,9.826946,-1.842650,-4.607498,-3.216758,-9.957574,-3.007454,3.990433,-0.859551,-7.501801,-7.693404,-7.668561,9.295757,4.730491,-1.857647,9.263112,8.471694,7.285144,-3.047958,-4.524653,3.727528,1.323275,-9.869829,-9.670581,-0.282188,-6.817489,-4.157705,6.147974,8.449198,6.428161,-0.271136,-7.723853,5.845651,-6.345671,0.883764,-3.482385,8.169729,-5.548087,-8.255630,1.440573,4.914634,1.280845,-5.858316,-1.910830,-5.628906,3.825557,-6.761248,-3.982528,9.524258,-8.196284,7.597149,-3.055610,-6.885599,-3.114615,1.315998,-0.605309,9.473713,-5.607260,-3.733038,5.324179,-4.060282,1.718171,-0.427541,-9.091997,-0.164414,-4.313910,8.768720,4.866952,-8.874948,-9.392642,0.580648,-6.759625,9.122466,-7.397696,8.976820,-8.812628,-3.437585,5.253266,4.204074,-9.553818,-2.438072,-8.984709,1.023383,2.920106,3.567714,1.998529,-8.039377,-8.811790,9.297287,4.987870,-4.048883,-2.657863,-5.795555,-4.527991,-5.178240,6.567980,5.549106,-3.497917,5.672137,-6.903212,-9.847745,8.801112,-7.616953,-5.805727,-5.672843,-2.630928,0.804979,5.462584,-2.415557,0.262367,0.455377,7.271507,-5.240920,4.629355,-6.399113,3.645585,-7.931005,0.151527,-9.356929,-5.922111,-2.048729,9.373799,0.753365,9.244823,-3.724150,-4.042462,7.674956,5.221602,-0.524072,-0.695843,-4.740053,6.165362,-2.556938,8.997912,-4.514224,-9.187391,1.801446,-4.445775,-0.505114,-3.699674,-4.924183,-6.718322,6.949497,-6.561326,9.989497,-7.195914,-2.644994,-8.665622,-1.693410,0.093527,2.423246,0.458877,8.460996,1.960183,0.516310,2.630598,5.041008,-8.144751,2.727302,-5.682521,1.448245,-6.323730,-2.404009,-0.911129,6.284529,0.479267,7.478975,8.448263,-3.347535,6.374951,-9.918313,4.265833,-0.724236,-1.424279,-7.546649,-6.759907,6.914548,4.486092,9.347756,1.898928,3.311297,5.387896,2.146005,-9.084322,-6.462638,-8.802641,-2.721931,-1.366318,2.708001,-4.653208,5.529294,6.196118,5.333707,-7.555400,-4.433930,7.983907,-3.713506,8.121877,1.482286,6.038120,3.589438,4.452933,3.744941,-0.781580,-1.883428,3.230196,-9.673870,9.997878,6.171674,-9.438190,9.430544,-5.590686,7.187530,0.370697,7.677813,-8.254999,-5.309954,-4.498133,7.335305,-7.377650,7.145824,9.874453,-0.775251,2.138769,-2.380971,-6.547373,-0.150887,9.731629,-6.362044,-1.193198,2.480919,-8.056236,-6.940657,2.772253,7.187725,-9.197227,8.348715,-3.497805,-5.908276,-2.397717,-4.599569,-2.326244,2.052141,-2.923419,-1.672825,0.959050,4.643360,-6.454897,-1.917925,9.139656,6.757612,-0.320912,9.997634,9.462918,-4.866796,-9.554171,-7.821152,0.920564,-0.487813,4.387154,9.339078,-3.978857,-7.958964,-0.547592,-1.400976,-2.070039,6.772636,5.916834,-5.097042,-7.733461,-9.636487,8.449417,5.127971,-9.615798,-3.511360,8.518436,-3.104694,-5.329456,-3.561201,0.830931,-9.959752,-0.130886,-5.863069,-3.386767,-7.895221,4.588194,7.968763,7.570862,-8.924466,-3.780134,7.279997,-7.796393,3.498524,-9.669407,4.178206,-0.862193,-5.891544,-0.793086,-3.737823,8.085817,1.007018,4.214454,5.026039,-3.318109,-5.111470,-3.022545,-2.951227,1.984529,6.184122,7.337581,4.231140,-6.912249,-9.626664,-6.405296,7.397481,-6.699788,3.293295,5.404999,-6.973002,-5.364293,-8.642034,2.923255,2.666799,-1.784206,-8.321199,5.583117,3.124982,9.688232,-7.161560,0.002920,6.835723,4.036305,0.734337,6.403533,-5.283597,2.139464,-9.487088,0.613672,5.423172,-1.567723,8.981874,-6.396448,2.583275,-4.402203,1.573390,9.125430,6.872537,1.616366,4.622894,5.597840,-8.534256,-3.993989,4.806826,-2.242727,2.982087,-4.345677,5.690885,-2.754415,1.344718,-2.243577,-1.036002,2.865250,-0.385247,-8.580128,-7.056274,4.618776,-0.536095,5.546737,6.928604,7.046652,1.444661,2.755097,-4.636203,9.991822,0.273973,-2.899718,-0.162759,0.287614,4.225431,-8.688388,6.508976,-8.056223,-3.273160,7.153511,-9.071868,-5.927278,8.106679,-4.181702,4.579995,0.906003,7.643827,-8.914750,7.634644,1.462339,-1.481137,-1.117404,6.022719,7.446895,1.842354,-3.951806,9.153605,6.605029,-4.421684,-0.658372,4.184594,-4.531932,-7.565089,-9.430922,0.251120,-6.260944,-9.055808,0.347496,2.983201,8.465612,-2.278991,-0.885461,-4.873071,-4.199745,0.401505,0.856348,-6.537491,-3.611597,-6.147249,-4.783903,-9.140275,1.819954,-2.750149,-1.664041,-2.856665,-6.070771,8.559145,-2.559025,-9.179690,7.772444,-0.125696,-2.643754,-1.020544,8.779157,-1.049159,-9.705943,-1.261575,3.728085,6.431229,-6.583102,8.073065,-8.844256,-4.808486,-2.353397,7.494552,-5.715630,-4.606234,-0.924052,1.364681,-3.739808,4.683595,-1.497914,-3.976641,-2.671925,-3.474064,6.613620,0.514737,-4.586691,9.484419,-4.558161,-2.804597,-1.478488,-6.992834,-4.720359,-8.031362,7.651500,9.086637,2.932296,9.824786,7.973823,-6.017090,2.817405,-1.647912,3.133563,-1.282820,-4.496160,1.016046,-9.583904,4.773161,8.568514,9.926699,-2.696759,2.838433,-9.725592,0.026923,-8.070175,1.274978,-5.317025,9.586470,2.151955,4.080624,7.884168,-0.108370,-6.128146,-0.182836,9.492436,-0.836997,-8.377462,5.962695,-9.366857,5.532288,-8.009003,-8.227328,-8.776951,3.031853,-9.764755,-5.056329,9.528351,4.398616,-3.823309,8.474634,8.974271,5.546413,2.931692,-7.422229,-0.771764,-9.170528,-1.729837,0.328294,7.578867,-7.313018,5.878087,2.959803,9.759738,2.279006,-5.006694,7.248073,-3.992589,3.034798,3.605635,-7.159592,5.672857,6.527627,2.978138,9.662765,3.819163,-7.469798,-3.061138,1.341947,-4.491749,6.278417,3.356744,-4.809919,-9.659115,-6.766823,-2.908702,1.944233,0.068506,5.992142,0.561316,1.806164,0.939461,2.808120,8.280320,8.298959,7.134947,-2.452505,-3.317457,0.726712,3.382962,-8.698415,-1.021352,6.631107,-7.784832,-4.321693,7.436600,-9.441110,-8.796481,-1.593744,-6.630759,6.662142,9.546952,0.209531,4.845090,-8.545494,-6.475738,-9.385416,-0.115813,-6.382955,-2.341463,-0.274582,3.279379,-7.564896,-4.561381,8.154283,9.325182,2.402892,9.258224,-7.650490,9.122762,6.450468,2.062076,-6.472590,8.373057,6.804835,4.033833,-2.152436,-4.170761,-2.990587,5.196146,-9.270935,0.413073,9.104008,-7.131077,2.226745,-0.667599,8.770655,-4.864721,2.940637,-7.137551,0.372078,-5.633387,-6.167738,1.618358,-4.963278,1.368221,7.121462,-1.371095,5.021096,-5.151279,-8.341020,4.932837,-2.527061,0.828134,2.308409,-1.195510,2.489540,-6.786303,-7.033404,6.443535,7.703121,4.648599,2.976791,6.399586,-4.743685,8.940000,4.272359,-8.140585,-8.248990,2.885514,7.145150,-7.151142,4.699787,7.613314,-3.409133,-3.294730,5.362904,-9.139998,2.129411,5.732325,4.068248,-7.009239,5.808729,3.955604,-3.426384,4.077501,-1.443930,-1.510410,5.981799,8.271937,-1.074392,3.347253,8.389145,-7.415666,6.312655,-7.211062,-3.434745,0.409062,1.927008,2.368307,-6.373540,-1.115341,5.623919,-3.443734,-3.131535,-9.461318,2.334756,-1.532020,-3.658695,6.249260,-1.515841,-4.757225,-7.232193,-5.364477,-2.224172,1.573194,-9.568639,-6.210463,-6.581716,-5.959122,-8.972313,-7.926436,-1.014479,7.370584,1.968838,3.632131,-1.705276,6.127223,2.017909,2.885449,2.964795,-5.769959,-7.225040,3.604078,6.310048,6.095966,1.101464,8.676686,-4.174562,-7.376561,1.246339,7.221462,5.649841,-7.368617,-8.898536,4.394462,-3.083757,3.150653,-7.876454,-3.595342,3.011011,5.247633,0.512456,-6.088297,9.710065,0.945093,-7.069249,5.206320,6.214783,7.814493,8.317477,-3.668054,-6.442961,-0.074142,-4.756400,3.764506,-5.626170,-6.202426,9.401876,6.465624,2.823280,-7.734046,2.040054,-1.640494], dtype = "float32")#candidate|436|(1056,)|const|float32
call_435 = func_226_call(relay.reshape(const_436.astype('float32'), [16, 6, 11]))
call_437 = func_226_call(relay.reshape(const_436.astype('float32'), [16, 6, 11]))
output = relay.Tuple([uop_433,call_435,const_436,])
output2 = relay.Tuple([uop_433,call_437,const_436,])
func_438 = relay.Function([var_432,], output)
mod['func_438'] = func_438
mod = relay.transform.InferType()(mod)
var_439 = relay.var("var_439", dtype = "float64", shape = (5, 11, 8))#candidate|439|(5, 11, 8)|var|float64
output = func_438(var_439)
func_440 = relay.Function([var_439], output)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_543 = relay.var("var_543", dtype = "int32", shape = ())#candidate|543|()|var|int32
var_544 = relay.var("var_544", dtype = "int32", shape = (10, 1, 16))#candidate|544|(10, 1, 16)|var|int32
bop_545 = relay.minimum(var_543.astype('int32'), var_544.astype('int32')) # shape=(10, 1, 16)
output = bop_545
output2 = bop_545
func_553 = relay.Function([var_543,var_544,], output)
mod['func_553'] = func_553
mod = relay.transform.InferType()(mod)
var_554 = relay.var("var_554", dtype = "int32", shape = ())#candidate|554|()|var|int32
var_555 = relay.var("var_555", dtype = "int32", shape = (10, 1, 16))#candidate|555|(10, 1, 16)|var|int32
output = func_553(var_554,var_555,)
func_556 = relay.Function([var_554,var_555,], output)
mutated_mod['func_556'] = func_556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1222 = relay.var("var_1222", dtype = "uint8", shape = ())#candidate|1222|()|var|uint8
const_1223 = relay.const([[[-6,-5,-3,-8,7,7,-4,-6,-7,-2,9,6],[10,10,8,9,6,-4,4,-7,7,-9,-4,4]],[[5,4,8,5,-7,-7,4,8,-1,-10,-4,5],[3,-2,8,-8,-6,5,2,3,5,-4,-5,3]],[[-3,-10,-10,-2,-9,-1,2,8,-2,1,4,-5],[5,2,-10,-5,-5,-3,2,-9,-2,5,-10,4]],[[-7,7,-1,2,2,6,-6,8,-8,8,8,10],[-10,4,10,-3,4,-10,-4,1,-6,-9,-9,-8]],[[10,6,5,-8,3,-4,-3,-9,1,-2,-4,3],[3,6,1,-9,-8,-10,1,8,1,6,-3,1]],[[-6,10,-9,10,7,1,10,10,5,2,10,-1],[-4,-5,1,2,10,-5,-7,8,-3,-3,-1,2]]], dtype = "uint8")#candidate|1223|(6, 2, 12)|const|uint8
bop_1224 = relay.maximum(var_1222.astype('uint8'), const_1223.astype('uint8')) # shape=(6, 2, 12)
uop_1227 = relay.asinh(bop_1224.astype('float64')) # shape=(6, 2, 12)
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
const_1241 = relay.const([-7,-6,-7,6,7,-8,-2,10,-9,-10,-3,-2,-4,-7,8,-4,9,1,5,3,1,-5,-4,-7,-4,-7,7,3,4,4,8,-6,7,4,7,6,-9,-10,-5,-5,-7,-3,4,6,10,1,-7,6,6,-6,7,10,-2,-8,1,-4,-8,5,-7,-1,2,-6,8,-10,1,-7,7,-2,-2,-6,6,3,8,-5,8,1,-7,-8,-8,7,-4,8,4,10,2,8,5,1,9,8,1,7,8,-1,4,8,4,9,5,3,5,-3,-5,4,10,1,-5,1,4,2,2,5,-3,4,-6,-5,-10,-3,-3,-7,3,6,8,3,-9,-9,-4,-7,-3,-7,9,1,-10,-2,-3,10,9,-4,-5,-9,2,5,4,-3,4,5,-9,3,-3,6,8,-2,4,-5,2,1,-2,8,-2,-5], dtype = "int32")#candidate|1241|(160,)|const|int32
call_1240 = func_553_call(relay.reshape(var_1222.astype('int32'), []), relay.reshape(const_1241.astype('int32'), [10, 1, 16]), )
call_1242 = func_553_call(relay.reshape(var_1222.astype('int32'), []), relay.reshape(const_1241.astype('int32'), [10, 1, 16]), )
output = relay.Tuple([uop_1227,call_1240,const_1241,])
output2 = relay.Tuple([uop_1227,call_1242,const_1241,])
func_1247 = relay.Function([var_1222,], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
mutated_mod['func_1247'] = func_1247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1248 = relay.var("var_1248", dtype = "uint8", shape = ())#candidate|1248|()|var|uint8
func_1247_call = mutated_mod.get_global_var('func_1247')
call_1249 = func_1247_call(var_1248)
output = call_1249
func_1250 = relay.Function([var_1248], output)
mutated_mod['func_1250'] = func_1250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1843 = relay.var("var_1843", dtype = "float64", shape = (15, 10, 13))#candidate|1843|(15, 10, 13)|var|float64
var_1844 = relay.var("var_1844", dtype = "float64", shape = (15, 10, 13))#candidate|1844|(15, 10, 13)|var|float64
bop_1845 = relay.mod(var_1843.astype('float64'), relay.reshape(var_1844.astype('float64'), relay.shape_of(var_1843))) # shape=(15, 10, 13)
output = relay.Tuple([bop_1845,])
output2 = relay.Tuple([bop_1845,])
func_1854 = relay.Function([var_1843,var_1844,], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
mutated_mod['func_1854'] = func_1854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mutated_mod.get_global_var('func_1854')
var_1856 = relay.var("var_1856", dtype = "float64", shape = (15, 10, 13))#candidate|1856|(15, 10, 13)|var|float64
var_1857 = relay.var("var_1857", dtype = "float64", shape = (15, 10, 13))#candidate|1857|(15, 10, 13)|var|float64
call_1855 = func_1854_call(var_1856,var_1857,)
output = call_1855
func_1858 = relay.Function([var_1856,var_1857,], output)
mutated_mod['func_1858'] = func_1858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2491 = relay.var("var_2491", dtype = "bool", shape = ())#candidate|2491|()|var|bool
var_2492 = relay.var("var_2492", dtype = "bool", shape = (12, 8, 8))#candidate|2492|(12, 8, 8)|var|bool
bop_2493 = relay.logical_or(var_2491.astype('bool'), var_2492.astype('bool')) # shape=(12, 8, 8)
func_226_call = mod.get_global_var('func_226')
func_228_call = mutated_mod.get_global_var('func_228')
var_2500 = relay.var("var_2500", dtype = "float32", shape = (1056, 1))#candidate|2500|(1056, 1)|var|float32
call_2499 = func_226_call(relay.reshape(var_2500.astype('float32'), [16, 6, 11]))
call_2501 = func_226_call(relay.reshape(var_2500.astype('float32'), [16, 6, 11]))
func_438_call = mod.get_global_var('func_438')
func_440_call = mutated_mod.get_global_var('func_440')
var_2509 = relay.var("var_2509", dtype = "float64", shape = (440,))#candidate|2509|(440,)|var|float64
call_2508 = relay.TupleGetItem(func_438_call(relay.reshape(var_2509.astype('float64'), [5, 11, 8])), 2)
call_2510 = relay.TupleGetItem(func_440_call(relay.reshape(var_2509.astype('float64'), [5, 11, 8])), 2)
func_1247_call = mod.get_global_var('func_1247')
func_1250_call = mutated_mod.get_global_var('func_1250')
call_2511 = relay.TupleGetItem(func_1247_call(relay.reshape(var_2491.astype('uint8'), [])), 1)
call_2512 = relay.TupleGetItem(func_1250_call(relay.reshape(var_2491.astype('uint8'), [])), 1)
output = relay.Tuple([bop_2493,call_2499,var_2500,call_2508,var_2509,call_2511,])
output2 = relay.Tuple([bop_2493,call_2501,var_2500,call_2510,var_2509,call_2512,])
func_2519 = relay.Function([var_2491,var_2492,var_2500,var_2509,], output)
mod['func_2519'] = func_2519
mod = relay.transform.InferType()(mod)
var_2520 = relay.var("var_2520", dtype = "bool", shape = ())#candidate|2520|()|var|bool
var_2521 = relay.var("var_2521", dtype = "bool", shape = (12, 8, 8))#candidate|2521|(12, 8, 8)|var|bool
var_2522 = relay.var("var_2522", dtype = "float32", shape = (1056, 1))#candidate|2522|(1056, 1)|var|float32
var_2523 = relay.var("var_2523", dtype = "float64", shape = (440,))#candidate|2523|(440,)|var|float64
output = func_2519(var_2520,var_2521,var_2522,var_2523,)
func_2524 = relay.Function([var_2520,var_2521,var_2522,var_2523,], output)
mutated_mod['func_2524'] = func_2524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2591 = relay.var("var_2591", dtype = "float32", shape = (15, 9, 10))#candidate|2591|(15, 9, 10)|var|float32
var_2592 = relay.var("var_2592", dtype = "float32", shape = (15, 9, 10))#candidate|2592|(15, 9, 10)|var|float32
bop_2593 = relay.greater(var_2591.astype('bool'), relay.reshape(var_2592.astype('bool'), relay.shape_of(var_2591))) # shape=(15, 9, 10)
output = relay.Tuple([bop_2593,])
output2 = relay.Tuple([bop_2593,])
func_2603 = relay.Function([var_2591,var_2592,], output)
mod['func_2603'] = func_2603
mod = relay.transform.InferType()(mod)
var_2604 = relay.var("var_2604", dtype = "float32", shape = (15, 9, 10))#candidate|2604|(15, 9, 10)|var|float32
var_2605 = relay.var("var_2605", dtype = "float32", shape = (15, 9, 10))#candidate|2605|(15, 9, 10)|var|float32
output = func_2603(var_2604,var_2605,)
func_2606 = relay.Function([var_2604,var_2605,], output)
mutated_mod['func_2606'] = func_2606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2668 = relay.var("var_2668", dtype = "float32", shape = (5, 16, 16))#candidate|2668|(5, 16, 16)|var|float32
uop_2669 = relay.tan(var_2668.astype('float32')) # shape=(5, 16, 16)
output = uop_2669
output2 = uop_2669
func_2674 = relay.Function([var_2668,], output)
mod['func_2674'] = func_2674
mod = relay.transform.InferType()(mod)
mutated_mod['func_2674'] = func_2674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2675 = relay.var("var_2675", dtype = "float32", shape = (5, 16, 16))#candidate|2675|(5, 16, 16)|var|float32
func_2674_call = mutated_mod.get_global_var('func_2674')
call_2676 = func_2674_call(var_2675)
output = call_2676
func_2677 = relay.Function([var_2675], output)
mutated_mod['func_2677'] = func_2677
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2996 = relay.constdtype = "float32")#candidate|2996|(16, 12, 13)|const|float32
uop_2997 = relay.log2(const_2996.astype('float32')) # shape=(16, 12, 13)
func_2519_call = mod.get_global_var('func_2519')
func_2524_call = mutated_mod.get_global_var('func_2524')
var_3004 = relay.var("var_3004", dtype = "bool", shape = ())#candidate|3004|()|var|bool
var_3005 = relay.var("var_3005", dtype = "bool", shape = (768,))#candidate|3005|(768,)|var|bool
var_3006 = relay.var("var_3006", dtype = "float32", shape = (1056, 1))#candidate|3006|(1056, 1)|var|float32
const_3007 = relay.const([0.047032,6.637844,-0.285773,0.461405,-2.672054,-7.988353,6.278452,-5.302213,3.516174,-8.484344,1.983551,-5.413795,-4.753795,-2.650552,9.040579,-9.352814,-6.269534,-5.819542,-4.131374,9.365617,5.953161,2.361336,-1.467642,7.709332,-0.825043,-0.050651,-1.822406,1.605289,-9.331667,3.868263,-5.082054,-4.663323,6.070994,-8.966360,-9.513288,-6.234695,4.205483,-1.343301,-5.327837,2.437968,-7.126224,-8.449369,8.145270,4.307185,-1.124391,7.296366,-5.833906,5.227705,-0.246697,1.461748,9.109884,1.349962,0.280696,-8.713281,4.200389,-3.742919,-8.338921,-6.354449,-2.238848,0.904348,-5.152305,-8.861912,-7.623792,2.826056,4.767432,1.262623,-3.171979,1.412274,4.128500,5.305521,6.180608,-5.811451,9.877620,7.237578,-2.271406,-5.109582,-0.457249,-7.531009,-0.301047,1.123445,-0.399771,6.659138,0.300617,0.135990,-6.330901,6.303640,-8.026493,8.172470,0.344539,-3.055068,4.957404,-5.704609,8.586302,-0.073341,-2.312861,3.013402,3.375373,-0.922474,6.190635,2.812882,-6.648137,9.565199,-1.781445,-3.769555,-2.141029,9.334224,6.033012,7.002934,-2.436987,5.015483,8.450442,-3.870110,5.549593,-5.985730,-6.268673,-4.986268,-6.841945,8.958848,1.203925,-6.553919,-3.965090,6.813588,-2.208539,-6.391923,7.950563,7.660090,-5.639497,9.718296,-7.070959,-9.984607,0.940032,-6.839127,8.137650,-7.922720,0.601408,-8.821694,-0.259517,-5.933220,-2.411872,-5.529858,-1.669314,-0.912664,0.765380,-4.029745,3.100570,-8.329705,7.275752,7.421231,-3.150345,3.988524,-7.358480,-4.742388,-1.550490,0.962666,3.676463,-4.089367,-0.566041,0.702312,-8.860405,9.975321,-2.149833,-3.884172,-9.224335,-8.632424,8.112996,3.113202,3.039448,-9.941557,-3.626193,-3.602773,9.360193,6.424609,-6.544481,3.392181,-8.920073,-3.536382,-7.419382,-6.487119,-1.663284,-2.708854,9.205549,-2.982021,2.606687,-6.704482,-7.274335,5.730023,7.576817,0.010439,1.153084,-7.184559,-9.965717,9.745105,1.383169,5.910534,-0.458000,7.072479,3.032448,6.675116,-2.533321,-3.826898,-5.826376,7.167067,-9.318261,7.106259,2.593584,8.163269,9.426810,5.200816,3.859568,-2.780741,-4.216343,3.340536,3.972782,-3.118015,-1.908740,6.002438,-8.258280,-7.157003,2.342870,4.262614,1.544241,-6.552756,2.945251,6.757154,9.539465,-3.352414,9.374507,7.948845,-1.650287,-7.031702,2.969538,-0.490318,-5.160949,-7.391020,-6.509604,7.382790,2.270954,-7.089324,5.500974,7.791766,-5.502223,-9.080766,6.982293,-4.677515,7.620397,-4.845337,-3.155517,-5.699085,1.149161,9.930230,-4.314084,0.561945,-0.053361,-7.602144,7.223327,-1.774460,-6.247317,6.418169,1.196950,4.033788,-7.951155,4.447711,-5.183589,-7.454294,-7.053386,-6.524235,-3.428796,-0.455625,1.551964,-2.976412,-0.957918,-9.897419,9.959315,-2.080441,-8.694209,9.676835,7.556796,7.904892,-9.614461,0.008980,7.073449,-2.375993,4.647426,5.830114,7.824182,1.408376,-5.222050,-2.484510,6.503693,-5.380720,0.954779,3.677529,-7.192094,-1.704793,-3.084194,-4.958730,8.102168,3.133151,3.390018,-6.071668,-1.353596,9.179372,3.473250,-7.827814,-1.469576,-1.876175,-1.386169,2.933034,3.786372,1.919429,4.852629,2.029477,-4.547457,-4.864012,0.401167,4.873592,-0.084824,4.209043,-8.135229,8.794320,-7.906946,-7.850747,6.661152,-6.874230,-8.503464,-7.117272,5.279751,-0.248512,-1.404603,1.627170,9.460768,8.232579,0.941747,-5.719791,-6.188098,9.486725,3.806528,7.518832,8.494608,9.467325,0.625497,2.423046,-9.928374,5.538910,-7.813460,-8.379083,7.943494,-6.582557,-9.597773,-2.453712,-2.751572,-1.115418,-8.998957,-6.978476,6.151107,7.258485,8.408381,6.004724,-2.732667,-7.287068,0.951302,7.634567,-7.297649,-6.154537,-5.088907,4.030923,-3.538917,-3.355707,3.742302,-1.237634,7.737597,2.322272,-3.735093,-8.258531,4.657004,-2.532976,6.257441,4.971395,4.218729,5.823320,4.151955,-7.460262,-9.558162,-7.643662,3.375816,-2.790322,-7.648193,8.179357,-3.278279,6.685948,-2.616842,-1.744099,4.133743,9.265363,4.055038,-2.750662,9.152223,-3.525823,-5.957295,1.274404,1.660233,-0.909129,2.317240,2.313732,5.736842,-2.105415,-1.259900,9.065020,-1.662120,-8.830343,4.839452,-0.437813,3.504574,-8.469695,3.636212,7.156099,0.900930,-9.800183,3.245598,-4.729092,2.346326,-9.874451,-9.580856,8.728893,-3.799407,-4.716727,8.877478,-7.935068,-5.481200,-6.710802,-7.673508,-1.442181,5.790389,-9.695566,-2.213936,0.228385,6.362919,8.157884,7.337415,4.615159], dtype = "float64")#candidate|3007|(440,)|const|float64
call_3003 = relay.TupleGetItem(func_2519_call(relay.reshape(var_3004.astype('bool'), []), relay.reshape(var_3005.astype('bool'), [12, 8, 8]), relay.reshape(var_3006.astype('float32'), [1056, 1]), relay.reshape(const_3007.astype('float64'), [440,]), ), 5)
call_3008 = relay.TupleGetItem(func_2524_call(relay.reshape(var_3004.astype('bool'), []), relay.reshape(var_3005.astype('bool'), [12, 8, 8]), relay.reshape(var_3006.astype('float32'), [1056, 1]), relay.reshape(const_3007.astype('float64'), [440,]), ), 5)
output = relay.Tuple([uop_2997,call_3003,var_3004,var_3005,var_3006,const_3007,])
output2 = relay.Tuple([uop_2997,call_3008,var_3004,var_3005,var_3006,const_3007,])
func_3026 = relay.Function([var_3004,var_3005,var_3006,], output)
mod['func_3026'] = func_3026
mod = relay.transform.InferType()(mod)
mutated_mod['func_3026'] = func_3026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mutated_mod.get_global_var('func_3026')
var_3028 = relay.var("var_3028", dtype = "bool", shape = ())#candidate|3028|()|var|bool
var_3029 = relay.var("var_3029", dtype = "bool", shape = (768,))#candidate|3029|(768,)|var|bool
var_3030 = relay.var("var_3030", dtype = "float32", shape = (1056, 1))#candidate|3030|(1056, 1)|var|float32
call_3027 = func_3026_call(var_3028,var_3029,var_3030,)
output = call_3027
func_3031 = relay.Function([var_3028,var_3029,var_3030,], output)
mutated_mod['func_3031'] = func_3031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3319 = relay.var("var_3319", dtype = "uint8", shape = (12, 10, 13))#candidate|3319|(12, 10, 13)|var|uint8
var_3320 = relay.var("var_3320", dtype = "uint8", shape = (12, 10, 13))#candidate|3320|(12, 10, 13)|var|uint8
bop_3321 = relay.left_shift(var_3319.astype('uint8'), relay.reshape(var_3320.astype('uint8'), relay.shape_of(var_3319))) # shape=(12, 10, 13)
output = relay.Tuple([bop_3321,])
output2 = relay.Tuple([bop_3321,])
func_3334 = relay.Function([var_3319,var_3320,], output)
mod['func_3334'] = func_3334
mod = relay.transform.InferType()(mod)
var_3335 = relay.var("var_3335", dtype = "uint8", shape = (12, 10, 13))#candidate|3335|(12, 10, 13)|var|uint8
var_3336 = relay.var("var_3336", dtype = "uint8", shape = (12, 10, 13))#candidate|3336|(12, 10, 13)|var|uint8
output = func_3334(var_3335,var_3336,)
func_3337 = relay.Function([var_3335,var_3336,], output)
mutated_mod['func_3337'] = func_3337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3523 = relay.var("var_3523", dtype = "bool", shape = (9, 11, 7))#candidate|3523|(9, 11, 7)|var|bool
var_3524 = relay.var("var_3524", dtype = "bool", shape = (9, 11, 7))#candidate|3524|(9, 11, 7)|var|bool
bop_3525 = relay.logical_and(var_3523.astype('bool'), relay.reshape(var_3524.astype('bool'), relay.shape_of(var_3523))) # shape=(9, 11, 7)
func_3026_call = mod.get_global_var('func_3026')
func_3031_call = mutated_mod.get_global_var('func_3031')
const_3555 = relay.const(False, dtype = "bool")#candidate|3555|()|const|bool
var_3556 = relay.var("var_3556", dtype = "bool", shape = (2, 384))#candidate|3556|(2, 384)|var|bool
const_3557 = relay.const([-2.762752,3.997206,0.278645,7.564533,-1.691962,4.997577,3.471569,-2.426413,5.398815,7.598216,3.063840,-8.873338,-8.525606,-8.516621,-0.450879,-0.767576,9.928058,0.800035,-4.507999,7.483896,8.003595,0.623491,2.116589,-5.030878,9.656400,3.716562,8.841710,2.340412,-0.658017,-3.340273,9.370403,-3.237575,-4.145265,6.315813,-2.885574,2.976642,4.865385,-6.347816,-4.233641,0.003318,-2.838900,-5.995305,-2.780132,4.377423,2.073482,9.064067,-3.169697,8.148868,-9.046441,0.748681,2.262661,-8.449740,3.626563,-1.441358,1.424154,-9.283083,-6.444153,-9.105432,-9.765682,-4.964328,0.553392,-9.419608,6.893429,-8.034678,-7.898801,-0.138534,-6.866413,-4.707706,8.564087,4.637421,-8.215271,-7.207463,-1.395215,-4.140727,-7.787151,-6.535423,-6.490588,4.651202,0.511477,7.300715,-7.336236,3.551381,-0.199319,-1.950696,-8.813625,2.997474,1.082029,-0.777076,-8.216600,-7.931945,3.928229,-8.519907,4.773897,9.740340,5.595327,-4.666649,-9.407818,-6.713785,8.402649,-7.627687,-9.874460,9.020391,1.202864,2.038474,-9.999008,-1.817869,-6.577829,3.905323,-8.157851,-8.157118,-2.388858,7.970087,5.845973,5.704969,3.411165,-1.413574,0.543252,4.465728,5.306607,-6.302829,1.792403,7.977328,8.035293,2.262868,5.259380,8.682945,4.118773,-0.025711,-6.893192,9.053773,0.043081,7.525605,0.840996,7.555237,5.283778,-4.750631,-7.125506,3.659950,6.390367,-4.501224,-5.360427,-8.893951,-8.280956,-6.467071,-5.488902,-9.326340,-4.872619,8.792197,6.046704,-6.910283,-6.636424,0.498772,3.835190,6.666573,7.503070,2.910369,9.532037,8.238982,7.649967,2.201383,-3.539054,9.776114,8.302970,-2.260245,-4.452129,-5.817886,-6.090239,1.568091,-7.675771,-4.169940,-3.632944,4.704057,7.737352,-7.782537,1.392570,-6.515851,4.098267,-9.979543,-5.157612,0.513849,2.820536,-1.155720,9.593706,2.582741,-9.253997,-3.195267,-2.680639,-8.770626,-9.006799,-5.671375,-0.823139,7.718862,-6.717098,8.456470,2.991925,0.910458,-4.410078,-4.430369,-0.630905,7.790399,4.507666,4.018319,3.010688,8.236170,-8.705738,2.409102,-4.280125,1.159109,-7.516278,-8.332839,6.217773,2.037538,9.076223,-7.125807,4.711099,-8.274800,3.717090,-7.680697,9.377524,-5.459031,9.078890,2.568035,7.654858,8.195149,9.665378,5.747963,5.451205,-5.887052,-8.180726,-2.357752,-9.159331,-4.286397,3.872473,-9.679081,-3.617175,-7.313817,6.569677,7.052000,-6.986838,-6.658998,-5.770668,1.186803,-5.097570,-8.833843,-9.927112,2.185142,8.533175,-7.504631,-9.920392,-8.655228,4.569757,1.073210,-2.876995,0.662679,5.455001,-7.107849,1.619497,8.545200,7.974767,-5.219803,8.749240,-0.311751,7.797354,0.943776,8.836078,-0.192131,-3.335150,5.693055,4.520657,-6.693651,4.711091,-5.824416,-8.902795,-1.607026,-6.543017,5.595396,-2.355718,-5.401041,-3.108447,-3.211256,6.080235,-0.647467,-6.715923,-9.880007,3.335319,-9.771178,3.742721,9.739963,-6.677738,5.938630,7.248301,-2.148817,-5.555211,9.981933,-1.946408,3.699116,2.853782,-1.053405,9.470758,8.850285,7.729485,5.046086,-4.640090,-3.265165,4.938289,5.302029,-3.696474,-6.096773,1.623328,8.178670,4.773485,1.921392,-1.857890,-0.653593,5.366539,-8.728611,7.146412,5.189225,3.530289,1.755185,-0.432053,7.461150,-3.151972,3.800397,4.817142,-4.922800,5.977540,4.473204,9.730779,-7.750939,3.843015,6.467176,-5.655612,0.271817,-9.455340,-4.568325,0.640737,1.941846,-2.029813,3.891427,5.643071,-6.984510,-2.831895,-3.062423,-8.510875,-2.383341,-0.677829,-6.016730,-8.333686,-1.242930,-1.402263,4.880025,-1.824671,-2.021219,-6.839760,-5.160112,1.181511,-5.492873,5.740505,2.382640,1.535202,7.436605,9.117882,1.694037,7.950225,-2.516425,-8.649233,-4.200794,-9.685262,0.553609,-9.940000,-6.311362,1.690470,7.571066,4.238998,-8.696492,-0.093337,-9.583007,4.382081,-9.583973,6.337351,3.884551,-7.197187,-4.383219,-1.688289,4.936990,-7.593908,-8.112793,8.913864,-9.964202,-3.093659,6.990235,-5.110771,-7.683115,6.750241,4.620900,5.034547,5.840722,-2.217252,-3.602742,2.525946,6.748430,0.706752,8.122946,-2.365486,2.660430,-5.824283,2.722582,9.786446,5.514527,-0.347851,5.388231,2.544888,-7.993748,0.037327,-2.237920,-9.251206,-9.616089,5.978943,-1.750596,0.749822,-4.483819,9.944341,-8.232335,3.698083,1.843225,-3.888665,0.619109,5.657367,8.182474,-5.018570,-7.891215,-2.067673,-5.820863,-6.053124,4.714339,-2.013431,-4.361390,0.050182,-1.938130,-8.684799,4.179748,7.944623,-2.747781,-7.942916,0.409396,9.550050,8.034825,-7.172424,7.264424,9.928493,-3.926159,-4.842008,3.781933,8.224103,-8.825536,0.055885,6.587081,-1.119727,-0.287619,0.722315,4.334364,0.942579,-9.069276,-4.585550,-9.294730,-7.047070,7.046693,4.018824,0.393142,9.158011,-4.224699,9.293853,2.177877,9.531126,-2.607757,5.742112,2.532376,-2.679186,-1.654903,2.933854,-6.873137,2.036466,-5.159343,-8.320224,0.236124,3.145512,1.948409,4.698691,-8.144981,-1.954378,-6.328953,-6.591084,-7.055691,9.156835,1.177482,8.198564,9.573028,-6.479456,-4.124205,9.004981,-0.093032,1.343829,9.219178,-1.467719,-9.360126,-0.662648,-6.866214,-0.670479,9.922180,9.754383,5.260835,3.528725,1.514096,-3.135756,-6.717179,0.879294,4.254698,-6.936537,-3.223656,-8.579431,8.514160,2.416935,-3.188290,-0.967340,9.041887,-4.073967,8.886445,5.673233,3.736638,-9.724018,2.684613,-0.338244,-1.365622,1.068051,3.668448,2.280572,-9.991732,-0.157321,6.536342,2.828825,-4.788504,9.109056,0.374988,-4.045780,-4.078829,-4.501026,2.610026,-2.685219,-6.940688,-1.481861,-9.018178,-6.252066,-3.488226,5.088584,-0.575340,-2.603307,-8.436957,-3.596689,5.291986,7.840045,3.541702,7.247650,-9.515737,-9.024856,-4.111002,7.350717,8.224590,3.262194,-3.133998,6.776812,4.178948,-0.402599,8.150409,1.986861,8.864121,-5.112232,0.018100,5.154277,-9.644751,-2.207104,-9.963835,7.386460,5.544260,6.198729,9.486353,-3.382127,8.778156,-0.123799,5.590335,3.672386,-4.165427,8.679128,0.571815,-0.531979,4.793726,-2.544297,-5.272778,2.714285,4.286274,8.362120,1.838589,2.757649,-8.854763,5.640575,-8.251957,3.810856,-2.297946,-0.467654,0.988935,3.352664,5.353551,1.918166,2.650659,4.570956,2.396584,6.996342,0.348122,3.688262,4.416167,5.029559,4.076111,-5.013942,-1.300524,-9.238827,2.694677,-0.049968,7.343306,-2.696948,-5.471797,0.148525,5.499154,-9.109393,-2.660290,-8.780512,-0.618600,7.583315,-6.619805,2.749077,-8.975796,7.391315,-2.540188,-3.959431,7.775474,-0.868576,-7.801483,0.634458,9.718229,-3.982542,-7.152969,0.910517,0.429185,-9.986658,-4.967208,-9.800134,3.129921,0.462730,9.569760,-2.336431,-0.684631,-7.179045,-9.211628,-9.977657,9.086530,2.744527,-0.034260,-6.679603,5.752842,1.403791,-1.228484,-2.578573,2.779768,2.185429,6.072328,1.475876,8.706794,8.685991,-6.054595,9.894736,-1.603070,5.889308,1.610038,-0.825999,-5.288990,-4.762465,3.531190,9.527704,-6.438991,7.224012,-5.961668,-8.579118,-4.946375,9.780781,4.671876,-7.284642,-4.178590,-3.664649,7.679240,-4.604403,4.238087,4.939208,-8.675058,6.524616,8.528203,-7.791925,-5.958391,6.449820,-7.546645,8.289226,3.170884,-9.472914,3.306686,1.730521,4.429681,-3.293130,5.251228,-0.693674,-4.123523,-2.303855,-0.062967,7.316578,1.879259,-4.387245,-3.504225,-2.105976,1.798393,2.269204,2.873759,-5.142751,-9.356409,8.014698,-0.822220,8.364739,-0.256132,-2.597483,1.379835,9.382444,7.374110,-0.211604,9.732997,1.438619,5.416824,5.222711,-5.445772,-4.610805,-6.431769,-0.631483,0.804661,-1.802597,6.071318,-5.007633,-8.650345,-1.306523,7.391784,4.028735,2.380914,-1.739282,7.798754,3.503002,8.914841,9.853571,-9.247292,-8.511956,8.095471,7.681051,5.833340,3.673518,7.634346,4.011074,9.434656,1.402443,-6.972179,4.178775,8.738924,2.305154,-1.516106,-1.374606,-4.972647,-9.383473,6.180530,-9.741146,-3.876505,0.906468,6.816580,-6.982487,5.300325,6.592942,5.732652,-4.151918,-3.998397,8.486948,-1.529177,1.529102,-7.392601,-0.968313,1.282473,5.584353,4.103211,1.143612,6.889820,5.032813,4.173892,-9.166889,1.085482,9.918140,-7.038033,8.616161,-9.069231,6.342331,-2.254654,5.201176,3.984448,5.242770,9.539365,1.490760,1.455798,8.438140,-1.108324,5.673035,-5.040204,6.953537,-3.272720,1.664816,5.241388,2.797801,8.702057,4.172298,9.822901,4.227740,3.519161,-4.030805,8.995210,3.799913,2.182965,3.179389,8.031901,7.709144,1.727435,-0.292603,3.434968,6.499989,-1.357010,3.586507,7.652920,-7.926794,-9.050589,8.270017,3.491347,8.497316,-5.772847,-4.738546,1.961440,5.413589,8.486432,4.550544,0.656252,5.726957,8.254956,-4.277881,9.427781,6.243896,7.975758,8.927131,9.344561,5.454692,2.595861,7.752582,5.076913,-6.256335,-2.448200,-8.220034,-6.718075,-3.348629,-5.692832,-8.191000,8.720002,5.509519,4.092330,7.513216,0.362989,-5.604849,0.873013,3.397089,-5.881654,1.252570,6.441178,-2.675827,7.887572,6.885585,2.579146,6.808955,5.451019,3.863160,8.749493,3.471243,-5.333749,9.987416,8.715933,-9.431105,-1.724067,5.093580,8.267412,7.593066,-5.117434,5.098696,6.021251,-9.635309,3.488385,2.855726,0.831755,-3.716781,-7.584470,9.674258,-1.931067,9.864388,4.104245,7.676129,-3.940397,9.010608,5.937570,5.789348,1.248805,-5.051417,5.520255,8.988155,-7.135802,-5.265458,0.265247,5.149079,-2.407000,0.144467,9.336334,-1.379973,6.026560,-4.685800,-3.667185,4.529641,7.942529,1.263486,4.030177,8.713527,-8.724125,-8.694405,6.488658,7.669030,-7.396377,6.442240,3.339477,-8.020353,9.113544,-4.273945,-8.431123,1.729384,3.290282,-4.229143,6.741533,-2.031834,-4.075524,-0.002594,-1.772225,6.693597,-7.956559,-2.205191,-8.793367,-8.769916,8.456929,-5.281546,5.971571,-5.603671,-9.592284,0.042831,-7.785026,7.012605,3.467220,1.618673,7.226520,-1.595741,8.098021,-4.999565,1.049578,-9.757661,7.257757,-8.121029,-6.226884,1.796856,-8.675828,1.086012,-1.150152,4.004236,-1.531048,-7.470477,4.950281,5.403141,2.712513,-8.003558,-3.595857,-0.524104,2.173001,-0.133331,3.963017,-5.212059,5.411160,-4.747759,-0.867313,7.634315,-3.536147,7.375799,-1.360295,4.176773,-6.921341,1.897430,-9.432742,-8.523653,-4.949621,9.990469,-4.356140,9.967783,4.800928,8.555787,5.096014,-9.129203,-2.274829,3.930071,-4.662569,3.332360,9.127471,-8.323637,-1.895988,8.498838,0.755947,-5.905581,7.219924,6.215650,8.887968,-0.433043,2.950902,8.495049,-0.596653,1.086707,1.394454,4.487298,4.929142,-0.295222,-8.531658,-5.397400,-7.570107,4.062955,3.817627,5.807320,-0.290633,4.963972,-1.535625,8.579973,-8.608340,-0.991503,2.358331], dtype = "float32")#candidate|3557|(1056,)|const|float32
call_3554 = relay.TupleGetItem(func_3026_call(relay.reshape(const_3555.astype('bool'), []), relay.reshape(var_3556.astype('bool'), [768,]), relay.reshape(const_3557.astype('float32'), [1056, 1]), ), 5)
call_3558 = relay.TupleGetItem(func_3031_call(relay.reshape(const_3555.astype('bool'), []), relay.reshape(var_3556.astype('bool'), [768,]), relay.reshape(const_3557.astype('float32'), [1056, 1]), ), 5)
uop_3562 = relay.sigmoid(bop_3525.astype('float32')) # shape=(9, 11, 7)
output = relay.Tuple([call_3554,const_3555,var_3556,const_3557,uop_3562,])
output2 = relay.Tuple([call_3558,const_3555,var_3556,const_3557,uop_3562,])
func_3586 = relay.Function([var_3523,var_3524,var_3556,], output)
mod['func_3586'] = func_3586
mod = relay.transform.InferType()(mod)
var_3587 = relay.var("var_3587", dtype = "bool", shape = (9, 11, 7))#candidate|3587|(9, 11, 7)|var|bool
var_3588 = relay.var("var_3588", dtype = "bool", shape = (9, 11, 7))#candidate|3588|(9, 11, 7)|var|bool
var_3589 = relay.var("var_3589", dtype = "bool", shape = (2, 384))#candidate|3589|(2, 384)|var|bool
output = func_3586(var_3587,var_3588,var_3589,)
func_3590 = relay.Function([var_3587,var_3588,var_3589,], output)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3722 = relay.var("var_3722", dtype = "uint64", shape = (3, 14, 5))#candidate|3722|(3, 14, 5)|var|uint64
var_3723 = relay.var("var_3723", dtype = "uint64", shape = (3, 14, 5))#candidate|3723|(3, 14, 5)|var|uint64
bop_3724 = relay.greater(var_3722.astype('bool'), relay.reshape(var_3723.astype('bool'), relay.shape_of(var_3722))) # shape=(3, 14, 5)
func_2603_call = mod.get_global_var('func_2603')
func_2606_call = mutated_mod.get_global_var('func_2606')
var_3728 = relay.var("var_3728", dtype = "float32", shape = (1350,))#candidate|3728|(1350,)|var|float32
call_3727 = relay.TupleGetItem(func_2603_call(relay.reshape(var_3728.astype('float32'), [15, 9, 10]), relay.reshape(var_3728.astype('float32'), [15, 9, 10]), ), 0)
call_3729 = relay.TupleGetItem(func_2606_call(relay.reshape(var_3728.astype('float32'), [15, 9, 10]), relay.reshape(var_3728.astype('float32'), [15, 9, 10]), ), 0)
output = relay.Tuple([bop_3724,call_3727,var_3728,])
output2 = relay.Tuple([bop_3724,call_3729,var_3728,])
func_3738 = relay.Function([var_3722,var_3723,var_3728,], output)
mod['func_3738'] = func_3738
mod = relay.transform.InferType()(mod)
var_3739 = relay.var("var_3739", dtype = "uint64", shape = (3, 14, 5))#candidate|3739|(3, 14, 5)|var|uint64
var_3740 = relay.var("var_3740", dtype = "uint64", shape = (3, 14, 5))#candidate|3740|(3, 14, 5)|var|uint64
var_3741 = relay.var("var_3741", dtype = "float32", shape = (1350,))#candidate|3741|(1350,)|var|float32
output = func_3738(var_3739,var_3740,var_3741,)
func_3742 = relay.Function([var_3739,var_3740,var_3741,], output)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4077 = relay.const([[[-7,-2,8,-8,-3,3,-5,8,-8],[-3,9,3,-4,-2,-1,-2,6,3]],[[3,-3,10,-2,-3,-4,-1,7,-8],[5,-1,-9,-2,1,7,3,5,-8]],[[-2,-1,-1,7,1,-3,-2,3,5],[-6,-4,-4,10,3,-1,-2,1,9]],[[8,3,-8,10,-5,5,-6,-7,-9],[1,6,7,-5,4,4,-8,-7,-4]],[[9,7,9,-6,-5,3,-1,5,8],[-9,-1,-9,-6,7,-1,-8,-5,6]],[[7,8,4,5,-6,7,10,-9,8],[-8,-6,-8,6,-9,1,6,7,9]],[[5,-7,2,-7,9,-7,-3,-3,-10],[7,-7,6,10,-5,5,-8,-5,3]]], dtype = "uint32")#candidate|4077|(7, 2, 9)|const|uint32
var_4078 = relay.var("var_4078", dtype = "uint32", shape = (7, 2, 9))#candidate|4078|(7, 2, 9)|var|uint32
bop_4079 = relay.right_shift(const_4077.astype('uint32'), relay.reshape(var_4078.astype('uint32'), relay.shape_of(const_4077))) # shape=(7, 2, 9)
func_3026_call = mod.get_global_var('func_3026')
func_3031_call = mutated_mod.get_global_var('func_3031')
var_4084 = relay.var("var_4084", dtype = "bool", shape = ())#candidate|4084|()|var|bool
var_4085 = relay.var("var_4085", dtype = "bool", shape = (768,))#candidate|4085|(768,)|var|bool
var_4086 = relay.var("var_4086", dtype = "float32", shape = (1056,))#candidate|4086|(1056,)|var|float32
call_4083 = relay.TupleGetItem(func_3026_call(relay.reshape(var_4084.astype('bool'), []), relay.reshape(var_4085.astype('bool'), [768,]), relay.reshape(var_4086.astype('float32'), [1056, 1]), ), 3)
call_4087 = relay.TupleGetItem(func_3031_call(relay.reshape(var_4084.astype('bool'), []), relay.reshape(var_4085.astype('bool'), [768,]), relay.reshape(var_4086.astype('float32'), [1056, 1]), ), 3)
func_1854_call = mod.get_global_var('func_1854')
func_1858_call = mutated_mod.get_global_var('func_1858')
var_4098 = relay.var("var_4098", dtype = "float64", shape = (130, 15))#candidate|4098|(130, 15)|var|float64
call_4097 = relay.TupleGetItem(func_1854_call(relay.reshape(var_4098.astype('float64'), [15, 10, 13]), relay.reshape(var_4098.astype('float64'), [15, 10, 13]), ), 0)
call_4099 = relay.TupleGetItem(func_1858_call(relay.reshape(var_4098.astype('float64'), [15, 10, 13]), relay.reshape(var_4098.astype('float64'), [15, 10, 13]), ), 0)
output = relay.Tuple([bop_4079,call_4083,var_4084,var_4085,var_4086,call_4097,var_4098,])
output2 = relay.Tuple([bop_4079,call_4087,var_4084,var_4085,var_4086,call_4099,var_4098,])
func_4110 = relay.Function([var_4078,var_4084,var_4085,var_4086,var_4098,], output)
mod['func_4110'] = func_4110
mod = relay.transform.InferType()(mod)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4110_call = mutated_mod.get_global_var('func_4110')
var_4112 = relay.var("var_4112", dtype = "uint32", shape = (7, 2, 9))#candidate|4112|(7, 2, 9)|var|uint32
var_4113 = relay.var("var_4113", dtype = "bool", shape = ())#candidate|4113|()|var|bool
var_4114 = relay.var("var_4114", dtype = "bool", shape = (768,))#candidate|4114|(768,)|var|bool
var_4115 = relay.var("var_4115", dtype = "float32", shape = (1056,))#candidate|4115|(1056,)|var|float32
var_4116 = relay.var("var_4116", dtype = "float64", shape = (130, 15))#candidate|4116|(130, 15)|var|float64
call_4111 = func_4110_call(var_4112,var_4113,var_4114,var_4115,var_4116,)
output = call_4111
func_4117 = relay.Function([var_4112,var_4113,var_4114,var_4115,var_4116,], output)
mutated_mod['func_4117'] = func_4117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4260 = relay.var("var_4260", dtype = "int16", shape = ())#candidate|4260|()|var|int16
var_4261 = relay.var("var_4261", dtype = "int16", shape = (14, 7, 1))#candidate|4261|(14, 7, 1)|var|int16
bop_4262 = relay.bitwise_and(var_4260.astype('int16'), var_4261.astype('int16')) # shape=(14, 7, 1)
func_226_call = mod.get_global_var('func_226')
func_228_call = mutated_mod.get_global_var('func_228')
var_4270 = relay.var("var_4270", dtype = "float32", shape = (8, 132))#candidate|4270|(8, 132)|var|float32
call_4269 = func_226_call(relay.reshape(var_4270.astype('float32'), [16, 6, 11]))
call_4271 = func_226_call(relay.reshape(var_4270.astype('float32'), [16, 6, 11]))
func_1247_call = mod.get_global_var('func_1247')
func_1250_call = mutated_mod.get_global_var('func_1250')
call_4277 = relay.TupleGetItem(func_1247_call(relay.reshape(var_4260.astype('uint8'), [])), 0)
call_4278 = relay.TupleGetItem(func_1250_call(relay.reshape(var_4260.astype('uint8'), [])), 0)
func_2603_call = mod.get_global_var('func_2603')
func_2606_call = mutated_mod.get_global_var('func_2606')
var_4294 = relay.var("var_4294", dtype = "float32", shape = (1350,))#candidate|4294|(1350,)|var|float32
call_4293 = relay.TupleGetItem(func_2603_call(relay.reshape(var_4294.astype('float32'), [15, 9, 10]), relay.reshape(var_4294.astype('float32'), [15, 9, 10]), ), 0)
call_4295 = relay.TupleGetItem(func_2606_call(relay.reshape(var_4294.astype('float32'), [15, 9, 10]), relay.reshape(var_4294.astype('float32'), [15, 9, 10]), ), 0)
uop_4302 = relay.log10(call_4269.astype('float32')) # shape=(16, 6, 11)
uop_4304 = relay.log10(call_4271.astype('float32')) # shape=(16, 6, 11)
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
const_4319 = relay.const([-3,-7,-2,-9,-6,-1,2,7,8,3,10,8,-9,5,8,-7,10,6,-4,-2,-7,1,3,-5,3,-7,-8,-6,-6,4,-4,-4,5,-4,-7,1,1,5,9,5,8,6,-4,2,1,3,6,-8,9,2,-10,2,-5,5,7,-8,1,10,6,7,-7,-3,-2,-6,4,-9,-10,-8,-5,3,-5,6,4,-3,-7,8,-5,-9,-3,-7,2,1,-6,9,4,-5,2,4,7,-8,10,-10,-6,-3,3,-6,-8,7,8,5,-7,-10,2,-6,-3,-5,2,-9,2,7,-2,10,-4,3,-10,-5,-1,-7,10,1,-10,8,2,10,7,-1,2,8,6,-9,2,-7,-8,-3,10,4,2,3,7,-10,-1,-5,2,-1,7,-7,4,9,10,2,9,1,-8,-5,-6,-1,-6,3,2,-6], dtype = "int32")#candidate|4319|(160,)|const|int32
call_4318 = func_553_call(relay.reshape(var_4260.astype('int32'), []), relay.reshape(const_4319.astype('int32'), [10, 1, 16]), )
call_4320 = func_553_call(relay.reshape(var_4260.astype('int32'), []), relay.reshape(const_4319.astype('int32'), [10, 1, 16]), )
output = relay.Tuple([bop_4262,var_4270,call_4277,call_4293,var_4294,uop_4302,call_4318,const_4319,])
output2 = relay.Tuple([bop_4262,var_4270,call_4278,call_4295,var_4294,uop_4304,call_4320,const_4319,])
func_4333 = relay.Function([var_4260,var_4261,var_4270,var_4294,], output)
mod['func_4333'] = func_4333
mod = relay.transform.InferType()(mod)
mutated_mod['func_4333'] = func_4333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4333_call = mutated_mod.get_global_var('func_4333')
var_4335 = relay.var("var_4335", dtype = "int16", shape = ())#candidate|4335|()|var|int16
var_4336 = relay.var("var_4336", dtype = "int16", shape = (14, 7, 1))#candidate|4336|(14, 7, 1)|var|int16
var_4337 = relay.var("var_4337", dtype = "float32", shape = (8, 132))#candidate|4337|(8, 132)|var|float32
var_4338 = relay.var("var_4338", dtype = "float32", shape = (1350,))#candidate|4338|(1350,)|var|float32
call_4334 = func_4333_call(var_4335,var_4336,var_4337,var_4338,)
output = call_4334
func_4339 = relay.Function([var_4335,var_4336,var_4337,var_4338,], output)
mutated_mod['func_4339'] = func_4339
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4642 = relay.const([[[5,-5,-5,-9,-3,1,-9,-1,6,-3,-10,-3,-3,9,3],[-7,6,-9,-6,-1,5,2,-2,4,8,9,4,-6,-8,10],[-7,-2,-10,1,-1,6,4,-2,4,8,-5,-1,1,-5,-2],[-8,1,-1,-3,8,7,-10,5,-9,7,-10,4,-9,-9,-2],[9,-2,-4,-3,5,10,7,-3,1,-1,9,1,1,8,6],[2,2,8,-5,2,4,2,-2,-4,-6,1,6,-1,-2,8],[-9,-3,-4,-8,2,9,-9,-9,-7,-4,-8,10,-5,-1,-10],[-6,9,9,-10,10,-6,-10,-1,8,2,3,-4,-1,4,9],[1,2,-5,-1,9,-7,-4,1,-5,-5,10,-6,3,-5,-1],[2,10,-2,-8,-7,8,-3,2,8,-3,-4,-1,7,-8,-10],[9,-3,-7,-1,9,1,6,8,9,5,6,-5,2,2,8],[-10,-5,5,7,-8,-6,2,4,9,-5,-5,8,10,4,1],[-4,-9,4,-3,-10,7,-10,7,8,-9,-4,4,6,1,5],[-4,-3,-2,-6,7,-5,-1,3,1,8,2,4,-2,-1,-2],[5,9,-8,-6,-5,-8,7,-7,1,-2,8,1,-4,-2,-5],[3,-8,-9,-5,-9,-6,-1,10,5,-6,10,-5,-3,3,-3]],[[-10,10,3,6,-2,8,-4,5,7,-7,9,6,-10,2,-6],[4,3,6,1,4,7,-3,3,6,8,-4,3,-2,10,-6],[10,4,4,-9,-2,-8,7,1,-1,-9,-4,-7,-4,10,4],[-2,-8,8,-8,4,-2,-2,-8,-10,-4,8,-3,-5,-4,10],[-2,2,1,-1,7,-3,-2,9,-8,6,7,9,9,-6,8],[-2,-10,-2,4,-4,-1,-9,1,-2,6,-10,4,-4,3,7],[-6,4,3,1,-1,8,1,6,7,3,-8,10,-4,4,-2],[9,-1,-8,-8,4,5,3,1,-9,9,-6,5,-10,10,-6],[-6,2,5,4,10,-5,9,-10,9,-1,-1,7,2,-7,-3],[5,-8,-9,-7,-8,-10,-2,1,9,1,-10,6,-10,-7,9],[10,3,10,-10,-6,6,1,5,9,-2,4,5,-1,6,-2],[2,-8,-1,-9,-7,-1,-1,8,4,1,-10,-10,-5,-7,-3],[-8,4,-1,6,8,-5,4,-1,3,2,1,-9,4,-4,-6],[4,1,10,5,-4,-7,1,-6,-6,8,-4,-9,-10,8,-7],[-2,-8,9,6,4,-8,-8,4,3,-6,-9,10,7,2,5],[-2,10,-9,-10,4,5,-8,-1,9,-4,5,-5,-1,4,-8]],[[3,-3,9,-4,6,-4,-10,-4,-5,-4,-7,-2,1,-5,-7],[3,2,-4,9,2,4,8,8,-4,6,2,7,6,-7,7],[5,-5,8,-9,-5,-4,-7,-4,6,-10,8,-8,7,-6,-6],[-10,1,-5,7,5,5,3,-4,6,7,-4,7,-9,-5,-1],[-6,-1,8,-7,2,-7,3,-8,6,-9,-2,-7,5,5,1],[-3,7,-5,10,8,-5,-6,4,7,9,-5,7,10,-6,-3],[9,3,8,10,1,9,-2,6,10,-10,-9,8,4,9,-2],[-8,-6,6,-10,-1,4,-9,-6,6,10,3,-10,-7,-10,8],[-7,-5,-9,9,9,2,-2,4,8,2,-6,7,-9,-2,-1],[2,-7,10,-10,-5,1,-2,8,8,8,4,-6,-1,7,5],[4,-5,4,6,6,-3,-9,-7,3,-3,-7,6,-9,-10,10],[6,3,-6,-9,-1,4,-2,-2,-7,6,7,-8,7,-8,6],[2,-4,1,2,-4,5,-10,10,7,7,9,7,5,-5,-10],[-4,2,9,-10,5,5,-10,8,7,9,-7,7,6,-7,-8],[-3,-1,-10,2,1,-2,9,3,3,-1,1,-3,-1,2,-1],[6,3,-10,-10,-3,-10,-9,-10,-6,-10,7,6,-4,8,-6]]], dtype = "int64")#candidate|4642|(3, 16, 15)|const|int64
var_4643 = relay.var("var_4643", dtype = "int64", shape = (3, 16, 15))#candidate|4643|(3, 16, 15)|var|int64
bop_4644 = relay.add(const_4642.astype('int64'), relay.reshape(var_4643.astype('int64'), relay.shape_of(const_4642))) # shape=(3, 16, 15)
output = relay.Tuple([bop_4644,])
output2 = relay.Tuple([bop_4644,])
func_4663 = relay.Function([var_4643,], output)
mod['func_4663'] = func_4663
mod = relay.transform.InferType()(mod)
var_4664 = relay.var("var_4664", dtype = "int64", shape = (3, 16, 15))#candidate|4664|(3, 16, 15)|var|int64
output = func_4663(var_4664)
func_4665 = relay.Function([var_4664], output)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4855 = relay.constdtype = "float32")#candidate|4855|(12, 14, 11)|const|float32
uop_4856 = relay.atanh(const_4855.astype('float32')) # shape=(12, 14, 11)
func_2674_call = mod.get_global_var('func_2674')
func_2677_call = mutated_mod.get_global_var('func_2677')
const_4861 = relay.const([-8.012915,-0.199276,8.432561,-6.169579,-3.556666,6.057977,7.838734,-8.301924,0.477714,-7.436919,3.558673,-1.033436,0.802508,-8.145487,-5.399677,9.281565,-2.029847,7.260219,-4.181942,5.105327,2.104417,-8.188766,-8.133654,3.559309,-7.850634,-7.112065,2.277901,-9.368978,2.789819,6.061628,1.275579,-7.869968,-9.815716,1.088809,-6.697530,-5.484810,4.463935,-3.816895,0.862537,-7.849871,3.774395,6.984175,6.712582,-3.119165,2.660805,-7.356541,-6.192148,-3.157928,4.409061,0.417117,-6.164723,4.168762,-2.862089,-2.135646,-9.699820,4.390126,0.657887,-9.629040,3.725171,9.472392,9.799061,2.129662,-0.687156,-0.653312,2.777289,3.873459,2.516067,9.459672,-3.431511,0.908876,-3.984983,9.035465,-0.617435,4.705676,-0.436670,-7.020726,-2.022608,2.889407,3.801806,-1.384892,0.320943,5.957627,5.136026,-0.906964,-3.821288,-4.274584,3.759862,-0.796134,3.321672,8.892363,-3.992544,6.599815,3.290229,2.247574,2.939474,5.668335,-7.585461,8.634767,5.431583,6.164816,-0.730777,5.015384,1.366442,5.142224,2.808820,-3.681063,-6.728440,-0.326182,-7.603431,-8.751470,-9.420271,-9.503431,-5.963112,-3.952771,-7.222998,2.531736,4.745163,-0.673458,-1.627654,8.882683,-2.604658,7.264383,-1.352438,-0.279666,-5.987207,-2.442662,-7.040339,1.898394,-9.217226,-3.364467,5.217262,3.922347,-0.448861,-0.200386,3.442785,-2.238785,7.906488,-2.559129,-3.772809,0.602251,-2.701540,8.038927,-1.202054,5.701790,-9.856149,1.275625,-7.348772,-4.086975,-3.148848,7.842421,-6.921725,5.516848,-7.355887,9.247645,-6.837365,4.321979,-6.779389,1.437977,1.669008,-6.060868,3.087590,8.936667,-9.689607,-9.491748,-7.697990,0.594216,-3.255068,7.159693,-1.304343,9.126856,2.116109,4.625964,8.591088,-3.870676,-9.691906,-1.791396,1.730615,7.459037,4.170709,-9.319779,9.741687,-8.304868,4.588496,-0.196780,1.924407,-9.435894,-7.286298,-3.069548,0.681072,-0.636166,6.750969,3.565302,4.641569,9.750194,-6.820650,-4.740679,6.312535,7.355505,-0.924234,-3.903225,8.218513,-8.752572,3.424675,1.784882,-7.111397,-0.898159,-1.202800,-0.820313,-4.007818,-8.377988,6.772292,-7.662295,-1.431031,6.196737,-8.651119,-5.324744,0.251520,4.131754,4.365975,0.922094,5.048219,-7.899085,5.278025,5.689242,-3.679826,-4.565725,-5.452704,-0.178582,1.528969,-5.012440,5.545551,6.134401,3.089363,8.395594,-0.317760,-9.258396,-2.938889,5.334345,6.720392,0.854440,0.671395,-9.407373,1.732097,-5.507753,-4.901003,-6.762894,4.502089,-5.259836,-6.549677,8.547159,-9.024362,-1.864184,-8.718515,-3.215220,-9.348616,1.486712,-8.041368,-9.791839,-7.470971,-6.178478,0.818900,1.826389,-2.128578,1.083900,1.588096,8.554852,0.026133,6.020448,-6.991118,4.372359,5.188162,-6.265799,-5.859493,6.431179,9.396272,-6.646784,-6.386309,5.469155,8.736959,-1.401339,0.516936,5.380994,7.496668,0.502709,-0.549716,3.413627,7.227462,1.448350,-8.980035,9.936699,-1.263228,-4.130480,3.959126,-9.812057,-5.051076,0.318284,-6.488743,-6.687503,0.236198,6.051252,9.678677,-7.244004,-5.179141,-4.447762,-4.003356,-8.323236,3.380394,-2.811518,-6.958588,-6.457357,8.182577,4.087643,-4.178851,4.119925,2.390739,6.557925,8.564083,1.225429,-2.599667,-4.227324,2.729957,7.932155,2.309872,1.170871,-8.684719,2.698803,-6.041709,-0.768247,-5.084910,-8.021914,-8.687075,-5.563367,2.612264,-3.005582,-3.551454,3.898291,5.160199,-2.523826,-2.230019,3.311515,6.157111,-2.731629,4.474046,-0.217358,-1.171638,3.237271,6.461069,8.949355,6.444888,-1.638303,-4.984309,-5.544376,-3.158634,3.645542,-8.312698,-8.612584,6.405553,2.466296,7.121659,-6.396276,4.403207,-1.117181,-7.355388,6.331844,0.827567,4.581486,3.980741,-1.936890,-7.959499,-5.001387,-7.348748,0.948510,0.937630,-5.299412,-8.247648,8.678293,-4.250480,-4.846021,1.196594,-3.946312,3.373626,-5.816649,5.933116,1.669316,-6.993511,0.565816,-0.303438,-8.451047,8.090828,-2.168329,-3.182117,7.742959,4.062491,9.886904,-8.795464,-0.706676,1.569097,-6.338902,0.353243,-6.078736,-5.324538,-8.626940,-9.743044,-5.796302,0.868059,-3.773848,-7.626092,-7.213670,9.750137,-5.139744,5.048514,-1.232749,-2.110496,-9.066926,-8.418346,2.655634,-3.624068,7.823084,7.056477,-5.709193,-3.566383,-1.583165,0.996125,-7.331106,-2.510176,-1.834370,4.781327,-2.479969,7.960407,5.353201,0.449488,-4.542195,-3.842611,0.148913,-4.091711,-8.930883,-0.544325,1.865904,7.677250,-7.596917,2.884856,-5.014799,9.780939,-6.635186,5.274521,-6.289400,-1.545950,-9.337299,-3.175118,-0.748219,1.409544,7.895615,3.361151,4.230741,2.894330,-4.687145,-0.537461,7.364260,2.874733,7.959987,-2.349912,-1.256910,-6.416828,5.633475,-4.364206,5.948016,0.291430,0.741334,-2.580542,2.837381,-3.896834,-0.541558,-9.907173,9.074792,7.946844,-6.771852,-0.692402,-5.958366,6.471292,-0.420598,-0.372285,-7.113209,-6.396534,-6.869290,-8.555738,-7.537194,-8.435312,-9.182557,1.803613,-8.587715,-9.231567,-7.138510,4.970823,0.886288,-6.393590,-0.180450,-1.431135,-5.796280,-0.879898,3.221857,7.772777,-5.145472,-7.764154,-3.609160,-7.344307,-6.331810,-9.724274,1.577410,3.857583,-7.842231,-2.809615,-1.211700,6.277850,-6.325161,-8.812631,6.145116,0.390076,6.239594,-4.760810,6.829940,-1.124997,1.843735,-8.576263,6.391812,6.074111,-9.417634,-1.864403,-6.935619,0.426672,-4.880676,-5.779109,1.794433,2.621316,4.849923,0.460824,-1.461723,-5.909246,-6.167247,-0.890617,9.027411,4.246615,-7.919272,-4.479126,-2.913133,6.383981,6.432120,-3.843764,2.620438,2.203576,7.719754,-2.733064,2.588024,4.255510,3.578278,6.905916,6.100911,-1.882241,-1.053700,4.726439,4.219892,4.887754,-8.828071,9.822880,4.528332,1.523603,0.221928,-7.469274,-0.484164,-5.276788,-7.343149,-2.878990,5.736759,6.420187,-3.007806,-2.983161,5.069429,-4.522594,6.794761,1.813199,3.190582,5.003626,-8.017316,4.548603,5.183061,5.092062,6.637231,9.395516,-7.175142,-6.948991,4.391468,-6.915551,5.840063,5.227459,3.692216,3.221476,3.035610,0.041715,5.787982,-6.589559,9.408828,-8.649262,-3.531765,4.077071,-9.600849,4.134295,-8.630962,-2.860448,-1.198098,-3.585298,-7.506260,-7.015866,-5.762845,-1.408431,-3.748259,-7.438936,-3.754375,-2.075888,-2.408156,4.482674,-2.295426,6.993744,9.780541,-4.283311,0.403953,5.200498,-8.877594,0.338599,2.248281,-5.234509,-7.367082,4.545639,6.125618,3.982900,7.393980,-6.057367,4.943885,-1.740699,1.891987,5.661984,5.788660,3.829338,-4.225861,-7.769655,-9.626420,-4.586344,5.309556,8.639546,1.055423,0.900617,4.255026,-7.466672,8.695657,1.869309,8.863929,2.983012,6.791649,8.606448,7.893607,-9.039974,-9.933381,-0.129235,-0.865384,7.875375,2.314227,0.885168,-6.679759,6.174653,-8.702271,9.431139,7.573830,5.437476,9.200119,8.557922,-9.538309,-5.084493,-1.168694,6.240806,-2.747993,-9.938234,0.589590,-9.770162,-3.474434,7.234861,6.822910,-1.345693,5.855505,3.890538,-1.489091,2.627081,-6.010089,-1.389713,-7.346503,-8.970528,-4.392223,-5.444204,-2.900432,7.174267,6.461245,2.333444,0.786558,2.280448,3.474263,9.497669,8.502356,8.882626,-6.086463,-2.610844,5.958912,0.763011,-6.437706,3.950499,3.064083,5.213366,9.280915,9.722449,-7.748061,3.443286,8.749732,-1.319206,8.701490,3.016874,9.025141,-5.900153,-0.678675,-9.001068,-4.334644,0.824272,-6.598104,-8.848377,4.718394,0.767861,-0.775018,-3.597320,4.577334,4.640191,-7.787129,7.219852,-3.943930,-1.882846,2.072255,0.541997,-3.982461,0.503203,9.082529,-2.084859,3.146187,4.474547,-1.168532,-6.951211,-3.399011,-7.185659,-2.100607,-0.646355,6.524518,7.312929,1.909972,-6.589944,5.773485,-8.546203,9.920095,8.187663,-8.450724,7.516026,-3.948161,2.091714,4.938713,7.735301,7.483657,-4.646026,-6.901263,0.120635,1.330826,8.894084,-6.500765,3.637934,-3.105870,-6.250233,7.977151,7.436052,2.720415,-8.961483,-3.278955,-3.185339,7.800525,4.907408,-2.310856,4.515404,-8.904545,-0.626431,4.114963,7.054323,8.704868,-5.621112,0.936467,-3.436267,-0.488797,6.842320,4.409318,-4.304434,-8.771940,-3.812328,5.942744,-5.050507,3.031887,-6.409592,3.208775,-8.618357,7.322533,2.039171,7.803496,-4.609847,5.011437,-9.482806,4.044984,4.049214,-5.168244,9.619407,-4.330611,-9.468677,-8.418559,-3.564845,-9.744997,-3.198723,5.286928,-0.086469,-7.514464,0.361630,-4.765950,-1.130330,-7.135979,2.374384,5.236882,-2.708325,1.897948,9.887577,9.964159,1.150224,9.503222,-8.482823,7.435328,4.527552,3.819859,9.619122,-3.384657,3.701009,-6.545502,-6.913363,1.431602,4.363576,6.426765,9.732307,-4.391454,-1.699029,-1.483652,-4.864876,3.967065,2.045660,-8.414955,-5.998988,-7.492756,-1.293369,-2.511599,3.508023,7.632100,-7.100073,7.172019,-2.593925,-9.665071,6.924631,1.661038,4.475807,5.314704,6.831473,8.245210,5.589662,0.221401,-3.607423,-2.629949,-1.083298,-6.023490,-4.935640,-1.533397,0.647476,1.366057,8.222412,2.060676,9.314643,-3.275989,-2.624420,-5.186738,6.200323,7.698369,5.112701,0.906824,-1.431039,4.722669,-5.621160,1.208667,-9.181239,-2.621754,3.002826,-7.181542,6.372530,4.765857,4.068386,6.862037,1.264590,-0.694800,-4.425787,-7.771489,-6.148580,2.072476,5.363123,-4.781748,7.692441,-1.405587,-2.026922,0.611524,5.172056,-7.689949,-5.737652,7.460429,-1.968563,-9.427792,-5.176744,7.393243,-5.304070,3.445164,4.294938,-5.141258,-6.126076,4.999222,9.512840,-1.188035,9.667701,9.219121,-4.842376,-0.163567,2.200224,8.274949,4.464450,-8.051908,3.448912,-3.982007,0.366727,5.391054,3.741324,8.846548,1.983995,6.577155,-0.212331,-3.324273,7.249945,4.832159,-9.050402,-2.384042,-6.162718,6.478015,-7.562163,-5.611161,-8.253931,-2.133590,3.511475,4.414822,3.965717,4.083951,7.028293,7.248156,-5.325138,3.083148,9.439208,7.240150,-7.598773,-1.896383,-6.891985,2.434021,-9.314689,-0.749025,6.382683,8.871064,-6.962909,-9.523268,-2.690304,-8.597378,-2.958847,2.214561,-4.509632,8.210369,-1.959524,8.315035,5.203619,4.450745,-2.561267,1.025515,8.673594,7.532849,8.841094,-3.067564,1.610817,7.843262,-9.094415,1.233285,7.804966,-4.660169,-2.676083,-0.883720,-9.328242,-7.659119,5.140623,-7.113383,-7.510668,-7.374353,6.475242,7.492491,4.172249,-8.271785,-8.635240,-8.511269,0.840401,0.069032,4.662445,0.648914,4.057070,-2.833678,0.359351,-2.778188,-2.294763,6.305949,8.688761,-5.928892,9.067364,-5.099912,8.396896,4.133051,8.790636,-3.868821,-9.268352,-2.810015,2.121384,-3.837492,2.835876,-2.087491,6.940995,4.896605,1.007685,-0.061830,3.258381,-6.612380,2.212495,3.278110,-1.989744,7.348271,0.828509,-5.305652,8.495056,1.826730,9.671495,-3.917586,7.595936,7.110939,-1.443976,-3.348887,1.182723,-4.417474,-2.693498,0.065745,7.685842,-5.149514,3.771661,-7.564626,8.920663,3.894486,9.035051,-2.595162,-7.023651,6.286725,1.083527,-8.633904,-7.669472,4.286608,-4.060139,6.258404,-1.815068,-5.519485,6.575538,-7.957862,-8.599751,8.818135,4.446069,-9.630709,-7.006145,-5.803434,1.317376,-3.511569,9.516229,1.229036,-3.517195,-7.956571,-3.897707,-0.417831,6.002290,-1.725676,8.667080,7.549092,4.812717,-7.610094,-5.062033,2.157488,0.059816,5.685201,-8.802032,-6.850255,-7.087360,7.134657,1.524267,-1.140092,-9.961056,-5.236801,-3.116175,-4.605295,6.462669,0.456120,-3.336460,-1.211228,-3.118926,-9.569746,-8.078450,-0.443320,7.877471,2.740177,5.120881,8.766350,-9.635805,3.255001,-1.015967,1.765928,-7.554602,5.521255,4.191290,-5.721370,1.963316,-0.815733,3.987146,-4.960378,-8.555348,5.026394,6.235963,0.396991,-9.085518,9.098645,1.696462,7.721850,8.759130,-4.128268,-9.835801,6.313949,4.601887,8.065384,-4.493589,-0.855743,7.498618,-6.459903,-2.522502,-6.683746,4.519175,6.970663,-6.762975,-1.723495,8.619942,0.319678,-8.370842,-6.079422,-6.263680,-2.652473,1.118714,-1.593235,5.797931,-9.914824,-6.059378,-2.060728,-9.473029,-7.925649,-2.366940,-6.844117,9.200378,5.108560,-2.556722,-3.269226,5.386676,0.022935,2.030372,9.380294,1.868385,-4.587624,7.427405,0.329630,9.124008,-5.578815,-2.052721,1.786365,-0.314962,9.101225,-7.889792,-9.008314,6.094961,9.553690,8.194671,3.225505,-3.779499,-2.735004,-1.173632,6.802268,-6.078888,-3.172822,-0.350331,-2.394557,-0.210347,-0.648726,0.334738,4.498281,-2.722235,7.990869,1.414094,-6.372330,1.374013,2.205349,-8.117959,1.833049,0.314642,-7.722577,2.919657,-8.218787,-1.188374,9.053212,1.681886,-6.335757,7.256564,4.784005,-6.633928,-5.793759,8.442329,-5.885624,-5.700579,-2.761393,0.086613,8.323255,4.572589,-2.540753,-1.912490,-2.767640,-4.089230,-4.421531,-7.733544,1.609465,9.865588,-5.539860,4.420505,8.793949,-9.324290,3.010738,-0.009867,7.114840,9.437017,0.570014,2.809655,0.301126,3.467039,9.207804,-6.550870,-4.771643,-1.622515,-8.933839,2.705560,5.931175,2.771232,1.824726,6.654173,5.470740,5.020715,3.125961], dtype = "float32")#candidate|4861|(1280,)|const|float32
call_4860 = func_2674_call(relay.reshape(const_4861.astype('float32'), [5, 16, 16]))
call_4862 = func_2674_call(relay.reshape(const_4861.astype('float32'), [5, 16, 16]))
uop_4870 = relay.tan(uop_4856.astype('float32')) # shape=(12, 14, 11)
uop_4876 = relay.sinh(const_4855.astype('float32')) # shape=(12, 14, 11)
func_2603_call = mod.get_global_var('func_2603')
func_2606_call = mutated_mod.get_global_var('func_2606')
var_4880 = relay.var("var_4880", dtype = "float32", shape = (1350,))#candidate|4880|(1350,)|var|float32
call_4879 = relay.TupleGetItem(func_2603_call(relay.reshape(var_4880.astype('float32'), [15, 9, 10]), relay.reshape(var_4880.astype('float32'), [15, 9, 10]), ), 0)
call_4881 = relay.TupleGetItem(func_2606_call(relay.reshape(var_4880.astype('float32'), [15, 9, 10]), relay.reshape(var_4880.astype('float32'), [15, 9, 10]), ), 0)
var_4884 = relay.var("var_4884", dtype = "float32", shape = (12, 14, 11))#candidate|4884|(12, 14, 11)|var|float32
bop_4885 = relay.divide(uop_4870.astype('float64'), relay.reshape(var_4884.astype('float64'), relay.shape_of(uop_4870))) # shape=(12, 14, 11)
output = relay.Tuple([call_4860,const_4861,uop_4876,call_4879,var_4880,bop_4885,])
output2 = relay.Tuple([call_4862,const_4861,uop_4876,call_4881,var_4880,bop_4885,])
func_4892 = relay.Function([var_4880,var_4884,], output)
mod['func_4892'] = func_4892
mod = relay.transform.InferType()(mod)
var_4893 = relay.var("var_4893", dtype = "float32", shape = (1350,))#candidate|4893|(1350,)|var|float32
var_4894 = relay.var("var_4894", dtype = "float32", shape = (12, 14, 11))#candidate|4894|(12, 14, 11)|var|float32
output = func_4892(var_4893,var_4894,)
func_4895 = relay.Function([var_4893,var_4894,], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4985 = relay.const([[[0.388785,4.945550,-8.048412,-8.759095,4.221329,7.888201,-7.025037,-5.852892,2.428993]],[[-8.358374,-8.941402,3.533460,1.959622,4.176635,-3.307801,9.134214,2.051889,-6.370721]],[[6.075026,-0.965119,5.930610,5.524879,6.111515,5.643692,5.668847,-2.711499,9.883969]],[[9.022383,-6.483621,9.718813,5.176508,-1.868305,0.858547,-7.511139,-5.847391,9.723064]],[[-8.591523,3.067557,9.636112,8.798126,0.142824,-0.345745,0.931507,1.912227,3.003838]],[[6.458247,-1.909110,1.891084,-9.660708,-9.522650,-7.532922,3.395727,-8.821548,-3.398656]],[[3.047775,0.630470,4.771026,9.423607,2.696550,8.543102,8.730620,2.407662,-8.870719]],[[6.021666,1.830083,6.272547,-1.585839,-2.604890,-5.488545,-8.698047,-6.085968,-7.838028]],[[8.285180,7.569190,-8.422353,5.694554,7.826262,2.575789,-3.154595,-5.578331,7.290181]],[[7.554111,-3.661399,-8.210941,8.617088,6.908386,-9.074132,9.145351,3.404401,-5.589215]],[[0.031589,-2.553657,0.061926,5.532564,-0.637526,4.549982,2.128028,3.406523,-6.051738]],[[-8.621915,-3.957991,-2.717539,7.272106,4.504327,-3.273948,1.323329,5.695451,-6.594445]],[[0.334318,-4.662302,3.063705,9.149432,5.309043,9.323263,4.881417,1.693929,6.547903]],[[-4.575962,3.050374,6.301717,-0.447981,-1.846805,-6.209826,-9.710902,-4.962783,-9.952178]]], dtype = "float32")#candidate|4985|(14, 1, 9)|const|float32
var_4986 = relay.var("var_4986", dtype = "float32", shape = (14, 6, 9))#candidate|4986|(14, 6, 9)|var|float32
bop_4987 = relay.add(const_4985.astype('float32'), var_4986.astype('float32')) # shape=(14, 6, 9)
output = relay.Tuple([bop_4987,])
output2 = relay.Tuple([bop_4987,])
func_5000 = relay.Function([var_4986,], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
var_5001 = relay.var("var_5001", dtype = "float32", shape = (14, 6, 9))#candidate|5001|(14, 6, 9)|var|float32
output = func_5000(var_5001)
func_5002 = relay.Function([var_5001], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5100 = relay.var("var_5100", dtype = "uint16", shape = ())#candidate|5100|()|var|uint16
var_5101 = relay.var("var_5101", dtype = "uint16", shape = (7, 4, 1))#candidate|5101|(7, 4, 1)|var|uint16
bop_5102 = relay.bitwise_xor(var_5100.astype('uint16'), var_5101.astype('uint16')) # shape=(7, 4, 1)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_5114 = relay.const([-1,4,-8,2,-7,4,3,-7,-8,-4,10,-1,-1,6,-8,4,-6,1,-5,10,3,7,9,-8,-1,-10,-10,-8,5,4,-4,3,7,6,6,5,1,7,4,-9,-8,9,-9,-1,-2,-10,-5,8,8,3,1,5,-10,2,-6,2,-9,5,10,6,3,8,-10,10,-2,4,-3,-5,-9,-6,7,2,8,8,3,10,10,6,6,-8,8,-2,-8,3,-4,-6,-8,-9,-6,-6,8,7,-6,8,8,2,7,-9,1,-4,-1,-7,9,-5,2,-3,9,-10,2,1,-3,6,-7,5,-4,-2,-9,6,-5,-4,4,9,7,10,-7,-9,-4,-10,-9,8,6,-10,10,-5,-9,-4,-6,8,-4,5,9,-4,1,3,-1,-5,2,-3,3,1,-7,-7,-10,10,-3,-5,-1,5,-3,3,-9,4,-4,-6,-5,3,2,6,-6,5,-3,2,-7,7,-3,-7,-7,-6,8,-1,10,6,3,5,-2,9,-9,7,-9,-10,-5,7,-10,4,-6,2,9,8,-3,3,1,9,4,8,2,-8,-6,8,7,-3,-9,6,4,3,-7,1,10,-10,7,8,7,-6,-10,-7,10,-9,-5,-8,3,6,-8,9,-8,2,8,-7,-7,-8,-9,5,4,-8,-3,10,8,5,3,-5,3,-6,-9,-6,6,-7,-8,4,-10,-3,-1,-8,-8,-6,-7,10,8,2,9,-8,-3,-9,9,5,8,-2,-2,9,-1,1,-5,9,8,-5,-9,-1,-7,-3,8,6,7,-6,-8,1,1,9,-6,1,10,-1,8,1,-6,2,6,9,-7,4,-9,7,10,8,-4,10,-5,-3,6,-8,2,-4,9,-2,8,2,-5,-7,-4,-1,-4,-4,-1,-3,5,-9,5,-5,-7,-1,-7,4,1,-6,-6,5,7,10,8,-7,7,2,-1,6,-6,-5,-9,6,8,-5,1,6,-1,8,-2,-6,2,10,-5,-1,3,-5,-3,-2,-4,-9,9,3,-4,3,7,-4,7,10,2,4,-7,10,3,3,1,2,-7,-3,-7,6,6,-3,-6,7,-6,7,-4,-5,1,4,-8,-3,3,-6,10,6,-2,3,4,7,-2,5,-3,3,-8,3,3,-1,-10,9,-8,10,-4,9,-2,9,-3,10,-5,-8,-9,-9,7,-3,8,10,6,8,-2,7,-3,10,1,10,2,-6,-8,-7,6,3,9,10,5,5,-2,5,-9,9,-2,3,-6,-7,6,9,-2,-6,10,-8,3,-6,4,-2,4,-10,-10,-2,-5,-1,5,-3,-6,9,4,-1,-9,-3,8,-7,-7,-9,-1,5,2,-7,8,3,8,10,-9,8,-9,4,-8,-10,-7,2,-1,-6,-5,-9,4,8,4,-3,-10,5,-3,9,-8,-6,1,7,-7,7,7,-6,8,2,-2,8,-5,3,10,9,2,-6,-3,5,7,1,-7,-6,1,-10,-2,-4,9,-7,9,8,-1,-4,-9,-6,10,2,-6,-6,-8,-7,3,9,9,3,-4,-9,7,-3,4,-5,-9,-6,7,2,-6,-8,-2,-1,5,-9,8,7,-3,4,-10,-4,5,-3,-9,8,6,4,-2,-7,10,-7,-3,-6,5,-6,6,-3,7,3,-1,-1,6,-4,-2,-7,-6,3,-1,10,6,10,-3,4,8,-7,-10,-7,4,7,2,-10,-10,-2,9,-8,5,10,-2,-7,4,3,-2,10,-2,4,3,-4,5,6,5,1,-4,7,7,-8,8,5,-2,8,4,-9,7,9,-7,-8,-9,-2,1,-8,-3,-7,8,3,-9,-3,6,-9,5,-3,-3,7,-1,2,8,8,8,4,-9,5,1,-2,-2,-8,-9,1,3,1,-7,-5,6,-8,-1,10,1,-8,5,-9,-1,6,-7,9,7,5,-4,10,-4,-4,-5,4,10,-10,2,-4,6,10,-6,-5,-10,8,-3,-5,9,3,-2,1,9,-6,1,-3,-9,10,5,-10,-8,-10,-7,7,4,1,6,-7,3,5,3,-9,-4,-10,6,3,-6,-4,-8,8,-10,-8,-3,9,-10,10,-6,-8,9,1,-5,9,9,-6,-2,-1,-5,9,5,4,4,-1,-2,-3,6,-6,2,4,-9,-10,-5,5,9,-8,2,2,-5,-10,-1,-7,9,-7,3,2,-2,-6,3,-10,7,-9,-1,7,-3,2,10,-10,-5,9,8,1,-4,-10,-10,1,8,6,-2,-5,2,8,7,2,-5,-1,4,5,-10,-7,5,6,10,5,9,-9,-7,4,5,7,10,-4,-9,4,-4,-10,1,-4,-9,6,-9,10,2,-10,-3,6,5,10,9,-5,-7,3,2,2,8,-1,1,-5,-5,-9,-3,2,4,-4,-5,5,-4,1,-8,7,-9,5,10,-4,-6,-5,-7,-7,-10,4,-9,-9,-9,-9,3,5,4,3,-1,-1,9,7,5,-9,-4,10,3,-6,-10,-9,3,-7,5,3,9,4,9,4,-5,7,-5,5,-8,10,8,-3,5,-7,9,6,-3,-6,2,-6,-4,-6,-2,8,-2,10,-10,-2,-10,-3,1,7,-10,8,-4,8,-9,-8,7,-3,-4,10,5,-9,1,5,3,-7,6,4,-10,-9,-9,10,-1,-5,-7,9,9,6,-1,-3,5,-7,5,-3,4,-2,9,8,-6,-6,-10,-4,4,10,-2,-8,-2,10,-6,10,6,-2,-5,-4,-3,-5,-5,3,-8,-5,-5,7,-9,5,-1,5,1,10,-10,-9,5,10,-3,-9,6,-3,-6,10,-9,-1,4,-6,7,-10,-4,-2,5,9,4,2,2,1,-6,-3,8,5,-2,-6,1,-6,7,2,-9,-1,-8,3,8,8,-6,9,5,-7,-7,5,-9,10,8,-9,2,-10,-4,-10,8,6,-1,8,-1,4,-8,-3,-2,4,-5,-9,-6,9,3,-2,-9,2,7,7,-7,-5,4,1,-1,7,1,-4,6,-4,-5,7,7,8,-3,2,-8,4,-5,7,3,3,-10,8,-4,-5,9,5,-3,-9,-9,-6,-8,-8,-9,-8,-1,-4,-9,8,-5,2,-5,1,1,-8,-3,-7,7,1,-4,-8,-1,7,5,5,8,-3,6,3,-3,8,-7,6,-2,-10,7,1,-10,-10,-4,2,-2,-5,8,8,10,9,2,-1,-2,3,1,-7,-4,4,2,10,-3,-2,4,6,7,1,-3,-6,-7,6,6,-9,-10,8,2,-6,2,8,10,-2,-9,8,7,-7,-4,-4,-8,-3,-5,10,9,-2,6,9,-4,-4,-3,-7,6,-9,-8,-5,4,-5,-8,-8,-3,-10,-2,6,1,1,2,-6,-3,-3,8,7,3,-2,-7,8,3,-8,8,-3,3,4,-1,6,-7,-4,4,-6,-3,9,-1,1,-6,8,-4,4,-4,-3,-1,10,-5,-3,-8,-7,7,1,3,-1,1,-5,-2,-4,-9,3,5,8,-8,10,-9,-6,-3,6,1,4,-1,-8,-10,-1,-7,-1,-8,4,-1,3,-1,8,-6,-1,6,-8,6,9,-8,7,5,-10,6,-8,-10,6,-9,-7,-3,-3,-4,3,9,-6,-2,-4,10,9,-10,2,9,-1,-6,-5,-5,-5,1,8,2,9,-6,1,7,-3,-7,6,5,-6,4,-8,-2,-7,-3,-5,9,-10,-8,-3,1,1,1,5,5,-6,5,-9,1,1,10,-10,1,6,-3,4,2,-3,5,10,-1,8,-4,-4,2,10,3,-3,-2,-4,5,-8,-7,4,10,1,-4,-9,7,-5,9,3,7,-6,4,-5,-10,-9,-5,9,9,-7,1,1,-9,9,4,-10,9,-10,-8,5,10,-6,-9,8,-7,10,3,5,10,10,7,4,5,-8,-1,-10,-7,3,1,3,-10,-5,-4,5,-6,7,4,-7,5,2,10,-6,8,2,-3,-7,-8,4,-3,-8,-3,-2,6,5,-7,-7,9,-6,3,6,5,-6,6,-6,10,-9,9,-1,-3,8,3,6,1,1,-2,-9,-2,9,-7,-8,1,2,-9,6,-9,-1,-2,-8,-1,-6,-6,1,1,6,6,-7,-3,8,-3,-5,1,-7,-7,5,-2,2,-7,7,-2,8,-9,5,-5,6,-9,10,-9,2,-2,3,-9,5,5,-4,5,4,-8,-7,-4,-2,-6,-3,-1,-10,-2,-8,-5,7,-5,8,2,5,3,-2,7,-7], dtype = "uint8")#candidate|5114|(1560,)|const|uint8
call_5113 = relay.TupleGetItem(func_3334_call(relay.reshape(const_5114.astype('uint8'), [12, 10, 13]), relay.reshape(const_5114.astype('uint8'), [12, 10, 13]), ), 0)
call_5115 = relay.TupleGetItem(func_3337_call(relay.reshape(const_5114.astype('uint8'), [12, 10, 13]), relay.reshape(const_5114.astype('uint8'), [12, 10, 13]), ), 0)
output = relay.Tuple([bop_5102,call_5113,const_5114,])
output2 = relay.Tuple([bop_5102,call_5115,const_5114,])
func_5123 = relay.Function([var_5100,var_5101,], output)
mod['func_5123'] = func_5123
mod = relay.transform.InferType()(mod)
var_5124 = relay.var("var_5124", dtype = "uint16", shape = ())#candidate|5124|()|var|uint16
var_5125 = relay.var("var_5125", dtype = "uint16", shape = (7, 4, 1))#candidate|5125|(7, 4, 1)|var|uint16
output = func_5123(var_5124,var_5125,)
func_5126 = relay.Function([var_5124,var_5125,], output)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5377 = relay.var("var_5377", dtype = "uint16", shape = (8, 8, 4))#candidate|5377|(8, 8, 4)|var|uint16
var_5378 = relay.var("var_5378", dtype = "uint16", shape = (8, 8, 4))#candidate|5378|(8, 8, 4)|var|uint16
bop_5379 = relay.multiply(var_5377.astype('uint16'), relay.reshape(var_5378.astype('uint16'), relay.shape_of(var_5377))) # shape=(8, 8, 4)
func_3738_call = mod.get_global_var('func_3738')
func_3742_call = mutated_mod.get_global_var('func_3742')
const_5399 = relay.const([[-6,-10,1,3,-8,4,7,1,8,1,2,-3,7,-3,-4,8,9,10,-4,7,4,-1,-9,-1,2,8,3,2,-5,-3,-5,9,-10,3,-4,3,-2,-10,-9,-9,-5,4,-10,10,-9,-4,-5,-2,4,9,6,7,-10,-10,-8,-7,5,2,6,-1,-8,-3,10,10,-1,-1,2,-8,4,1,-8,-6,-10,10,-4,-2,8,5,-3,1,3,4,9,-8,-9,-7,-7,-1,3,2,-2,8,-2,-7,8,-2,1,4,7,5,1,4,-6,3,-6,-9,-9,-10,1,-9,-7,-8,6,-10,-6,-2,10,-4,-3,-8,-4,-7,5,8,-7,5,-8,4,-6,1,-1,10,-9,10,5,-10,4,-2,5,4,-6,7,3,10,-8,-1,1,2,8,-3,7,-10,1,1,3,-9,6,3,-7,-9,1,4,3,-6,-6,-4,2,-8,-9,10,-6,-10,-3,4,-3,5,-6,10,4,10,6,-7,-1,3,3,1,10,-4,4,7,4,3,-2,7,10,-8,-5,-5,9,6,9,1,-1,-6,-4,2,4,8,-10,-4]], dtype = "uint64")#candidate|5399|(1, 210)|const|uint64
const_5400 = relay.const([7.627830,-0.712369,4.549214,-5.319245,-1.120346,8.775141,3.807573,-9.073861,-0.348490,8.543797,0.652308,-5.498913,6.032541,-9.334183,5.240325,6.000111,-6.139098,0.763767,-8.414189,-7.923147,-8.900671,-9.926212,4.493308,3.125074,-5.921914,0.455810,-5.113547,2.432117,-8.794304,-1.893167,2.343281,-9.518156,0.179425,0.714577,5.269419,-6.038855,2.914192,-2.842288,1.721713,-1.640016,-5.441950,3.222569,7.269868,0.271159,4.550031,-3.554653,9.465187,-2.766735,-3.206786,-1.514906,6.349255,7.395650,-7.502210,-9.023908,6.434923,6.248506,-3.412557,-4.023474,0.758806,8.381841,9.948644,7.309586,8.359495,4.314114,8.153736,7.821823,-9.311218,3.551536,-3.348247,9.200886,6.750968,-1.727724,5.030578,0.387631,-6.801856,0.269416,-2.043532,-1.852418,-8.995412,1.068762,7.942751,1.264876,-6.411343,-2.616695,-7.269669,-5.532692,-5.424402,6.978603,-2.106716,-5.183422,6.331578,-7.163603,-7.998186,6.116586,9.855000,-2.173539,-1.439821,-9.137020,9.982775,7.746642,-5.551251,8.630999,-2.415966,7.815666,5.020764,9.264970,4.538829,6.282831,-0.228114,2.334164,1.009687,8.943901,1.837295,-2.698976,-5.031412,-9.346018,-9.370453,-0.917167,-5.005557,6.476899,2.316790,-9.540495,-2.044424,2.770522,5.266796,-2.106549,-3.205886,-5.587691,-0.758164,-9.955547,-9.876151,2.894238,-1.931181,-6.858824,6.867967,3.413169,-1.813797,-8.587654,6.680901,-7.671066,-8.834972,8.296910,-9.415731,-9.419914,5.687372,6.520307,0.455700,-6.284635,-7.820819,-1.965101,-5.136091,8.672274,3.966122,3.424291,0.001565,6.744698,4.885254,-8.868191,-3.793402,-9.522754,-7.103637,-7.630455,-2.731383,4.366244,1.007200,2.063681,5.174253,-8.067616,-2.191825,2.661732,5.788610,9.241392,-8.062334,-0.727645,-9.427651,-0.837876,9.263969,-1.952455,7.782070,-2.492193,8.048271,-2.147243,-2.787209,9.810957,-9.360713,-3.647153,-3.061243,-5.854362,-0.725033,7.088437,9.435521,5.893053,-5.678741,7.927333,2.634031,-2.592485,9.511423,-3.424456,-5.944529,-0.307799,-3.986101,-9.180717,-4.378472,6.284504,-8.037806,2.523176,-4.573345,-6.229563,-0.113583,-0.747337,2.159002,-2.062178,1.651080,2.574554,-2.975917,6.327759,-3.861686,5.118853,-6.582477,2.412439,-1.482902,9.221713,5.480808,3.366617,4.820309,-8.581004,0.579265,9.592709,5.128136,-5.538931,-2.849020,-2.786580,5.879868,2.262628,6.596397,-4.218010,3.196706,-9.938913,7.962965,-6.966984,-1.885007,-6.263194,8.683097,-9.397476,-8.497539,-3.003421,-1.796311,9.663754,2.853817,-0.795941,-0.578566,-9.114764,-2.710872,-8.995799,-1.546936,-6.684746,1.204745,-3.935869,-4.484316,0.746074,4.023605,0.335538,0.312233,-1.823169,3.329909,5.585458,0.146848,0.594934,-6.202297,-0.278202,-8.592018,1.481236,2.307705,-2.065036,3.844270,-0.446148,9.795341,-1.415269,-6.624681,5.288969,5.903512,4.143835,-9.011339,-9.629594,8.311307,-1.931324,5.475825,8.479121,6.188291,-1.430195,-4.819974,-9.770309,-7.125486,-1.989780,3.527242,-4.726539,-0.848902,0.059250,-7.627492,5.994021,-5.943756,5.543330,-2.018443,-7.069999,-6.740710,-3.784084,5.684270,5.204944,1.801471,6.856341,3.438004,-5.109691,0.208549,4.700198,4.249742,0.022095,-6.868943,-7.736801,-7.161856,-8.220419,6.404921,9.179197,1.653383,2.217561,-6.892019,5.311588,-5.882601,6.123092,-1.474085,-9.053797,6.792222,1.343872,-1.769368,-6.373775,4.177693,-9.699377,7.351709,7.415131,-3.057467,-4.960992,4.557917,-8.899799,8.002005,-6.421140,-5.415230,0.717314,-9.102987,6.496356,-3.071605,5.546600,5.843054,2.380457,4.893076,6.405137,3.180652,-0.801977,-8.646784,-2.239869,-5.966123,5.248852,3.201625,4.368295,3.785310,6.608154,-1.366180,7.975061,-7.715625,9.910146,-7.112169,8.387231,-7.524176,-5.666065,-3.697286,-6.488878,4.850616,-4.610114,-7.859906,4.377423,-6.341813,-8.009394,3.187248,-9.402833,-6.877673,-8.734930,9.613614,-6.016131,1.105016,-3.599572,8.522351,0.226591,-3.878515,-3.467409,1.548714,-1.883365,-9.431345,-2.153339,0.337898,3.640626,-8.606476,-7.785193,3.045075,7.992422,6.896077,-7.414485,-2.065951,-9.553646,9.864516,-0.548349,-7.280800,2.628578,4.430549,-0.254705,-1.471445,-7.478468,0.693947,-4.324604,3.615115,-0.887022,5.366893,0.843441,-6.140362,-9.845152,-0.137023,-8.648695,-7.111541,7.189206,7.887336,-2.382601,3.495322,3.581897,6.528513,1.319623,3.327794,7.818884,3.129981,2.484277,-1.359501,1.799021,-5.477947,4.927191,3.437868,-2.613370,3.012076,9.579952,3.565720,2.576959,-4.824288,7.957339,-3.154292,8.353258,5.777440,8.465287,-0.284253,6.319564,-4.769243,7.078191,5.008334,8.995639,-1.832012,-5.081678,8.274601,-8.427332,-3.157926,6.299972,8.045750,-0.133352,3.487978,-6.698406,9.828233,-2.382539,9.195168,0.247013,1.647484,5.401526,9.610306,7.368116,7.524875,0.171915,1.907929,8.528779,1.279612,-5.766221,4.007141,-0.018185,-2.607050,7.327927,1.093069,-8.768753,1.021341,-8.406826,1.489130,8.152471,-9.495586,2.868148,9.622830,-3.288743,-0.595263,-0.764169,0.249829,-6.706099,0.378700,4.359521,2.084073,-1.714960,0.621499,5.228360,-1.805603,-4.285381,6.459192,2.094907,-2.396450,6.098723,-8.080629,-5.423970,6.797938,8.814905,-5.898748,5.755068,-8.816683,-7.007891,-2.909365,8.407273,-2.455914,0.390584,0.988522,8.546226,-5.183660,-9.946509,-2.969724,8.535831,-5.548847,-4.401052,5.104524,-8.771265,6.751673,-9.839111,-4.867597,6.464173,5.059360,4.895470,2.660545,-7.644123,3.002663,-0.631483,5.528744,2.482897,-8.483115,8.153411,3.618323,0.495550,-6.706141,7.738906,2.666347,-4.979846,9.439192,2.573957,-6.765457,2.384003,5.123333,6.248894,2.261014,-3.338728,-9.275354,1.060212,0.087853,7.290750,-7.564371,-2.757604,9.625222,-1.171928,-2.676010,3.078453,7.907686,6.929749,-7.350692,-3.817269,3.152401,1.113744,-9.916167,-1.456330,7.533916,5.353668,-8.222740,-8.771102,-1.429812,-8.533709,-8.159022,0.674491,-8.785590,-5.999369,2.358825,-5.520552,6.421494,3.192400,7.730665,3.048926,8.234681,-5.156820,9.395728,6.095373,-2.508492,-2.480364,3.475118,-3.344101,-9.288900,-4.625494,3.679473,8.453672,-0.773644,-3.873987,-2.952136,-9.859957,8.339875,7.915573,0.851212,-8.884234,-2.195706,3.113381,3.324431,-1.070639,-3.888263,5.826685,6.220118,9.705867,9.857523,9.561601,3.634570,5.972154,9.007940,0.053512,8.191213,-9.210070,1.481215,5.006033,6.843453,-1.995032,-4.659313,-4.883794,-2.484329,9.659320,1.976534,0.017824,7.477007,2.935938,6.841490,0.488987,3.820321,0.493241,6.190003,7.293718,-3.866657,8.946229,0.877193,-4.029661,8.104322,-3.607666,1.078268,0.603765,-9.073054,4.502095,-7.593931,4.582750,-0.959310,-3.708218,2.595674,-3.201384,4.734185,2.097757,1.051793,2.682476,3.717959,-3.975700,4.625170,3.101313,-9.298417,-4.869252,-7.862818,-5.324036,-6.490143,-9.250623,-0.649303,1.058948,-8.064104,3.454570,-5.984514,-1.926570,-5.221253,-2.854133,4.574578,9.149058,-2.169306,-4.121921,8.732836,1.496993,5.391413,-6.440404,6.030962,3.028666,-2.224404,3.230101,9.066629,-8.821873,-8.974449,-0.580161,0.922323,-6.213792,1.958721,-4.086926,4.471935,-7.753266,8.684133,0.802396,-1.199010,1.755999,3.992422,9.544093,-6.960931,-7.814183,6.262560,-5.358560,-8.840385,-9.635593,7.924883,2.107034,6.511574,2.746932,-2.660019,3.631531,-8.287609,4.085060,8.713337,-5.202501,-1.837872,0.109288,9.798587,-7.167305,-1.621498,3.556563,1.147992,-5.447841,-6.883892,-8.927116,-3.323749,8.309636,-7.176557,-6.060703,-5.002588,8.203227,1.014148,-3.029258,9.208542,3.376312,2.122150,4.837838,7.824885,6.722678,-3.514136,-3.710521,1.377297,9.697063,-1.926573,-1.702113,-0.047333,2.400678,-0.277043,5.848625,4.097783,6.115889,6.112688,5.918846,-1.940740,0.778496,-7.058714,-9.656573,0.573540,4.803381,0.525863,-8.794769,-4.906694,-6.638413,6.980257,-6.262668,-7.687448,-2.869703,-1.623489,-3.518363,-0.608437,3.767093,3.878840,1.655549,9.762038,-6.881705,-9.625695,5.837629,-0.559401,3.096841,3.068441,-6.254738,7.718416,1.663632,5.162632,-8.815846,6.760198,-6.604544,4.073538,-4.898030,7.487146,-4.327704,8.119332,-9.998978,6.145120,-0.174795,5.356607,-7.804506,5.688898,-1.462823,1.935578,-0.695454,4.695145,4.078647,-2.301715,5.690008,-3.834792,0.211125,9.890257,8.687382,1.107013,8.358904,6.621822,1.390267,-2.708273,3.129886,7.098550,-6.716278,-1.963443,6.852986,9.293143,-2.935394,-5.912692,-7.441825,2.529915,-5.972544,9.935590,2.809976,7.838874,0.441855,7.533094,2.788913,-9.714062,6.782651,2.073810,-5.729159,7.452286,-5.567974,-2.788430,-0.945221,4.753556,4.960665,-8.888869,8.592296,2.485388,5.827393,5.552410,2.378445,1.505053,-6.036517,-8.509468,4.995272,-1.070496,8.964945,-5.853486,-8.282345,3.474026,-8.440948,4.797625,8.877304,-5.782935,4.249207,-0.551106,-2.500191,7.195339,-8.803985,1.802453,8.710256,-4.714045,-8.688411,-2.671076,-6.844945,-8.087622,-5.318045,-1.024014,1.529624,-9.463083,-5.769967,4.365655,-4.918136,5.520903,-2.087280,3.251487,-3.961173,0.628266,-6.342395,-0.237657,5.538021,-6.876574,-2.783143,1.897455,7.501179,-4.396264,-6.660860,-4.420306,-2.282138,-9.578202,-3.903867,-2.952590,0.891240,-5.050504,-6.500025,-8.923836,9.259171,8.044727,9.576711,8.350463,-9.200086,-2.440148,-2.141655,-8.237956,-6.334702,5.425835,-3.126386,-1.516030,9.997319,2.674386,1.668670,3.362497,-6.510473,-2.163835,-8.986890,2.783806,0.423093,4.528230,-5.123008,-5.542345,-4.042371,-9.099611,9.042779,-4.555460,4.173081,-5.032767,9.595012,5.664384,-0.753281,6.123737,-8.142808,-4.067780,-8.640898,3.503182,4.273202,-6.284502,2.336898,-2.032847,4.669630,-0.769470,-0.533939,3.524911,-2.491532,-4.497255,-6.908632,7.659813,-4.505953,-1.464611,-8.647109,4.360747,5.718228,1.958486,-5.103171,2.649537,8.611666,-1.417164,5.160409,5.381540,6.390958,-3.806196,-1.458302,-0.735215,9.006029,6.160005,-6.632590,2.740251,-7.520001,-2.033712,-3.623175,-7.438022,7.213679,-8.376659,-1.618593,3.773722,7.964815,4.572187,0.660638,-2.861537,-3.260583,-1.945509,-1.676649,-9.727934,3.189873,-8.834888,4.534028,7.323935,4.367080,2.724779,2.775034,4.422167,-3.285610,-4.195041,-7.846093,9.838624,2.041688,1.760587,2.334716,-7.479736,1.842344,0.423984,-5.995621,3.978984,-5.854210,3.191139,8.118437,-1.974551,-9.470225,-3.026010,0.659817,2.908155,5.615902,-3.217623,3.395320,7.140861,0.854100,9.045810,7.688520,-1.321722,2.361083,-3.983078,-9.030033,-0.834200,0.779374,-4.865106,-6.666750,1.056192,-4.933324,5.553508,7.095415,-7.355039,1.256900,-6.643875,5.923551,-2.135611,-1.689366,1.633495,4.912839,4.551490,-3.988940,5.279555,-0.031207,7.324058,-9.463870,-3.981414,6.784518,6.572383,-7.324818,-7.249044,-5.808362,-2.775254,0.073011,4.706114,4.067536,5.221755,-8.054663,4.885346,-8.525037,-4.949892,6.840525,-9.855660,1.290822,2.861231,5.811434,5.368739,-9.536173,-0.458737,-6.104843,-2.007370,3.893966,1.374506,-5.556523,-3.102594,6.047678,2.455813,3.412263,-4.153931,5.671586,-0.889064,5.939499,-8.122814,2.270692,5.427407,1.906393,3.988173,3.171247,-6.796163,3.791009,-0.103308,5.141930,7.924699,4.121377,-4.950932,7.985331,2.503508,-0.321788,-4.730197,7.996079,4.688204,8.573175,0.536368,-0.768866,-6.130851,-0.070660,-7.662431,1.613580,-4.295352,3.371056,1.459124,3.976334,0.942425,0.638054,6.992995,7.684542,6.242322,7.713735,-3.162819,-5.838305,-8.516663,5.910942,9.141517,-3.305581,-5.754556,-9.738757,8.070166,-7.968877,8.671722,-4.322897,-9.025792,-3.716186,6.437291,-1.311785,2.406636,-2.594932,2.218314,-1.246951,-4.423972,-9.187718,2.324105,0.196933,-0.497931,9.630829,8.324506,-7.398499,-8.550326,8.932965,7.400645,8.324490,-7.543016,-1.798677,1.519811,-1.405863,0.285287,-3.667992,8.371631,1.588375,-4.938646,-6.796232,1.606309,4.695567,2.656430,6.503078,9.225549,1.527545,-2.348438,0.160788,-0.058901,-8.585357,4.990287,-3.434875,-1.904059,-3.350658,8.129546,-1.123706,-6.297621,-9.157997,-1.240517,-7.923957,-4.662036,0.401055,0.657258,-9.911029,1.110540,4.515191,-3.307213,2.914142,-3.028895,8.230614,-9.285466,-9.481617,4.589286,-4.100132,-1.652844,5.940135,-7.234129,7.665025,-5.025887,-0.125769,-1.001200,-4.148326,3.340979,4.669567,3.678066,2.645703,-9.639636,-3.283433,-4.718204,7.360299,7.242435,2.996014,-9.647689,5.388146,0.811809,-5.942856,-1.245860,-1.826507,-4.834915,4.610265,-7.393005,-8.151773,-8.645959,-1.948771,4.043863,3.629239,4.212608,9.685739,0.563979,-8.736450,-4.579930,8.884303,3.028770,-3.019601,3.113605,2.195949,8.092571,9.741381,6.299729,-3.530947,1.236073,2.534250,5.033304,-9.667080,-2.426177,4.654608,3.924922,6.381735,-7.089665,8.233700,6.518870,2.977875,-2.188415,-5.852268,-7.218992,-2.262558,-2.105906,-5.762080,-6.020826,-9.352410,8.727853,9.795605,-9.231465,6.758873,8.720444,6.078611,-3.561417,3.428847,6.054738,-0.487092,-3.512914,7.089158,-5.779605,-2.733566,0.606220,5.095539,-5.984858,1.240277,0.617637,1.210135,3.938639,5.024923,3.166949,-5.113257,-2.906308,0.628799,-8.061274,0.392261,-2.868077,8.212188,9.047235,3.353974,-0.106241,-7.427446,2.478218,-5.683939,-4.467661,-8.029161,-4.471069,-2.588454,3.346019,3.979968,5.345088,4.359091,2.260212,5.480907,9.342779,-9.295543,2.817420,-7.324839,2.491084,-7.764683,-7.218717,3.754896,0.241595,-9.396509,5.370115,-5.227851,-4.688654,0.145824,9.027579,-3.032702,3.122843,-8.276268,-4.002563,6.017553,2.413599,3.739607,3.873499,-1.690953], dtype = "float32")#candidate|5400|(1350,)|const|float32
call_5398 = relay.TupleGetItem(func_3738_call(relay.reshape(const_5399.astype('uint64'), [3, 14, 5]), relay.reshape(const_5399.astype('uint64'), [3, 14, 5]), relay.reshape(const_5400.astype('float32'), [1350,]), ), 0)
call_5401 = relay.TupleGetItem(func_3742_call(relay.reshape(const_5399.astype('uint64'), [3, 14, 5]), relay.reshape(const_5399.astype('uint64'), [3, 14, 5]), relay.reshape(const_5400.astype('float32'), [1350,]), ), 0)
bop_5402 = relay.floor_divide(bop_5379.astype('float64'), relay.reshape(var_5378.astype('float64'), relay.shape_of(bop_5379))) # shape=(8, 8, 4)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_5408 = relay.const([5,6,-6,-10,-6,-5,-9,2,-3,1,6,5,1,5,3,1,-8,4,7,-2,2,7,6,7,6,3,10,-3,5,6,8,7,-4,9,6,-6,3,-10,-3,-8,-7,-10,-6,-9,3,-10,5,-8,-2,-10,-10,-7,-10,-2,5,1,-1,-8,3,10,5,8,9,8,-3,-10,-7,-8,5,1,9,2,4,-7,-9,3,-6,7,7,9,-6,-4,5,3,1,-9,-5,-10,-3,5,1,8,-1,5,10,9,-2,-10,-3,6,-6,-4,-6,-1,-1,-10,6,-2,-5,-8,-10,5,-8,-6,10,4,-6,9,5,2,-6,-8,2,-3,6,4,-6,5,-3,-4,-4,-9,9,4,-7,9,9,-8,-7,10,2,-7,-2,-4,-5,10,-9,10,6,-3,10,-8,1,-2,9,-4,-3,-3,5,-1,-6,-10,9,-4,-5,2,10,6,8,-2,7,9,-6,6,10,4,8,10,5,6,8,7,8,9,-1,-2,-6,-8,-5,-6,4,8,3,3,1,-7,-7,-9,8,-2,1,-5,9,1,-2,9,-6,-7,-7,6,10,-7,8,6,3,2,4,-1,5,-6,-7,-2,-2,-4,1,-4,-5,-10,6,10,-3,-3,2,-9,4,-5,-10,7,-7,-10,-3,9,-7,3,-4,5,5,-6,10,7,1,-6,-8,5,-4,-4,-1,-6,-2,4,-2,-3,4,6,-7,9,-3,-10,-8,8,10,-8,3,-9,-3,-10,1,1,-5,1,-8,-1,-7,-3,6,8,3,6,2,-10,-10,9,8,-9,7,-6,-2,7,5,-6,-1,-6,-10,10,-10,6,-5,-1,5,7,-10,6,-9,3,2,7,-4,10,5,-8,2,-5,9,9,6,5,-8,-9,-1,-1,2,8,10,1,-8,4,-1,7,7,-3,4,2,-8,-1,3,-3,1,-2,9,-8,-2,-7,3,4,-3,-4,6,1,7,4,3,7,-9,4,-6,-3,7,3,5,10,6,-5,10,-8,-5,6,-10,-1,-6,4,-9,10,8,-8,3,-1,3,-3,1,9,4,3,10,2,10,10,7,-7,-5,10,-2,9,8,-8,3,-4,-5,-10,4,3,-10,-3,-4,3,-5,9,3,-5,-10,-1,-2,-10,3,-10,-6,1,7,-4,-4,4,8,-9,1,-6,-6,-6,2,-3,-7,-2,-9,8,6,-9,-9,-2,-8,1,-4,2,2,10,3,-10,10,5,4,-5,7,3,-9,-2,7,-6,-10,10,-6,7,6,2,-9,3,-10,8,-6,-3,7,2,1,-4,8,-5,6,4,1,-6,-2,-6,9,10,-4,-10,8,-6,2,2,-3,4,10,1,-3,4,6,-8,3,-10,-10,-1,-4,9,-4,-6,9,8,10,-3,-6,10,6,-9,-7,7,9,8,-4,9,-10,-6,-5,-10,-6,7,1,-4,-5,-5,1,-10,1,-4,-6,10,-6,-9,-3,-5,4,-10,9,-2,-6,7,-1,8,4,5,-2,8,-3,10,-5,-6,-7,4,10,-2,-4,-4,3,-7,3,-9,-8,5,-3,1,10,-9,-4,4,-10,2,5,-9,7,5,9,-7,10,-10,4,1,9,-2,-2,6,-3,5,4,6,3,5,5,9,-1,8,-2,-1,8,3,10,-3,-8,10,-6,7,-8,-9,2,10,-1,-1,9,2,-5,-1,-6,7,3,-10,-4,6,7,6,-7,7,9,9,-9,-7,-9,9,-3,9,-4,4,-6,-9,-10,-4,-5,5,8,2,-6,-4,-7,10,9,-5,10,10,-4,9,-6,-10,-6,5,-8,3,-7,-1,-2,-6,2,-4,3,-8,-3,-10,4,1,5,-5,-4,1,7,-6,4,-2,3,9,-9,2,8,4,2,-1,3,1,6,7,-3,4,6,4,-1,-5,1,-4,-1,-10,-4,-9,-9,-4,-10,8,-5,1,-6,1,7,8,7,-9,-10,1,-4,-3,-3,-5,8,-8,-6,4,-3,1,-1,10,-3,-6,9,-7,10,-5,-6,7,6,5,-4,5,-4,-7,-7,4,-5,-3,10,9,-1,-4,-5,-9,6,-4,-4,10,-7,-4,-4,-6,-9,-5,-10,-8,9,8,-4,-6,2,3,-10,6,9,-6,8,-2,-1,-3,-3,4,6,-7,-8,1,4,-7,-8,-4,3,-10,1,8,-10,5,-4,5,-10,10,-7,9,8,8,1,5,-1,6,6,4,-5,-9,-7,-10,-9,4,-3,9,-10,-7,10,-6,-6,1,-6,-10,-5,1,5,6,2,-4,-2,6,2,3,-7,3,9,7,-10,-6,6,-4,9,-9,-9,-7,5,-2,-9,1,4,-1,-7,-10,-5,-9,-4,-4,-4,-5,5,5,-5,1,2,2,-3,10,-9,-4,-7,-5,-7,-5,3,5,1,-10,-6,10,2,-5,3,4,6,-6,2,-5,2,1,9,3,-5,-6,-5,-3,8,-1,-5,-3,-2,7,2,-2,-1,8,-8,-2,6,-6,-4,-6,-8,3,2,6,7,-10,5,-1,-7,-8,10,10,10,6,6,6,1,-7,5,8,7,1,10,-8,-3,-1,-8,10,8,2,8,-8,-7,-1,-10,-6,-7,-7,-1,3,3,8,7,-1,-1,-1,-1,9,7,10,-1,4,-5,4,-8,-9,-2,-4,4,6,-10,-8,9,9,-7,3,7,-5,-8,8,5,7,-4,-8,8,-8,4,-9,1,-9,9,4,9,8,-8,3,6,3,-3,-10,9,-7,-4,-6,-4,-3,8,1,-7,-5,7,-10,-8,-3,-8,-1,-3,-9,-5,-1,-1,2,-2,-9,3,-5,1,-3,2,9,-1,6,9,2,-2,2,5,-5,8,7,-7,2,-10,7,1,10,8,-9,-1,2,-3,-9,10,-7,-7,2,7,-1,8,-8,8,2,-6,-5,-1,-2,-1,3,4,-4,4,-6,9,-7,7,-6,5,-1,9,10,2,4,-3,-7,-9,-10,4,-6,-3,-9,-10,3,5,6,9,3,8,-5,6,-9,-10,10,7,8,-8,-10,4,-4,9,-2,-6,10,-4,-4,-4,7,-2,-1,-10,-10,-7,-7,-4,-1,-10,1,-2,7,-5,-8,4,4,-2,-6,5,-5,6,5,-2,3,1,-8,-7,1,-8,1,-6,-9,-2,-5,2,-9,-1,-8,-3,4,7,1,9,-5,10,-8,-3,-7,3,-1,-1,3,7,2,2,-7,2,-4,9,7,-5,8,-5,2,8,-4,6,-8,7,-4,-9,-10,1,1,3,-1,-6,-6,-5,-8,-4,1,-8,-2,10,7,-10,-10,3,3,1,6,-7,8,-3,-7,9,-4,7,-5,3,-10,-1,4,-4,-1,2,-4,-2,-1,1,1,-5,10,-10,-3,-8,-5,-3,-4,5,2,5,-6,-8,-3,6,8,8,5,2,-2,-9,9,6,-9,-3,10,-6,-6,-5,3,2,3,1,7,-4,-6,-7,-6,-10,-4,5,10,2,6,-6,9,4,7,9,-1,-4,5,1,2,6,6,-4,3,-4,-3,9,8,5,-1,9,7,-8,-3,-6,2,-5,-3,7,-4,4,1,1,-9,5,1,1,-7,10,7,9,6,-10,-2,5,-7,-3,-2,-10,-3,2,-10,9,1,-9,5,-10,1,-10,-6,-9,3,3,-8,-8,-1,2,3,-1,3,5,-8,-9,-4,10,-5,4,10,-5,4,9,6,-7,5,5,7,-5,4,2,4,-9,10,5,1,-10,3,-8,-1,10,-4,3,5,-4,2,7,7,-5,9,1,-1,-5,-8,-5,-10,4,-10,-3,5,-3,3,-4,-8,-9,10,7,1,-6,-4,8,6,10,-7,8,-10,10,1,-6,-3,-5,5,2,3,4,9,-3,-2,-8,6,2,6,-1,-3,7,-2,-9,-6,4,9,1,10,2,7,-2,7,-2,3,2,-10,4,-5,10,3,3,2,1,-7,3,-2,-10,-8,-4,6,8,8,10,4,5,4,1,-3,7,5,6,4,8,8,2,9,10,4,9,7,-5,-3,8,-9,7,-4,1,9,-9,-1,-1,-5,-6,-8,-4,10,-10,8,-10,-1,-10,10,-3,1,7,7,4,8,10,6,3,-5,-10,8,-1,7,-6,-3,7,2,-7,10,2,1,4,-6,-3,1,-6,-3,10,10,-6,-6,8,7,-9,-9,6,3,-7,-10,-1,-6,-2,6,9,-9,-9,-2,-2,-2], dtype = "uint8")#candidate|5408|(1560,)|const|uint8
call_5407 = relay.TupleGetItem(func_3334_call(relay.reshape(const_5408.astype('uint8'), [12, 10, 13]), relay.reshape(const_5408.astype('uint8'), [12, 10, 13]), ), 0)
call_5409 = relay.TupleGetItem(func_3337_call(relay.reshape(const_5408.astype('uint8'), [12, 10, 13]), relay.reshape(const_5408.astype('uint8'), [12, 10, 13]), ), 0)
output = relay.Tuple([call_5398,const_5399,const_5400,bop_5402,call_5407,const_5408,])
output2 = relay.Tuple([call_5401,const_5399,const_5400,bop_5402,call_5409,const_5408,])
func_5430 = relay.Function([var_5377,var_5378,], output)
mod['func_5430'] = func_5430
mod = relay.transform.InferType()(mod)
var_5431 = relay.var("var_5431", dtype = "uint16", shape = (8, 8, 4))#candidate|5431|(8, 8, 4)|var|uint16
var_5432 = relay.var("var_5432", dtype = "uint16", shape = (8, 8, 4))#candidate|5432|(8, 8, 4)|var|uint16
output = func_5430(var_5431,var_5432,)
func_5433 = relay.Function([var_5431,var_5432,], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5523 = relay.var("var_5523", dtype = "uint16", shape = (3, 1, 11))#candidate|5523|(3, 1, 11)|var|uint16
var_5524 = relay.var("var_5524", dtype = "uint16", shape = (3, 12, 11))#candidate|5524|(3, 12, 11)|var|uint16
bop_5525 = relay.bitwise_xor(var_5523.astype('uint16'), var_5524.astype('uint16')) # shape=(3, 12, 11)
func_438_call = mod.get_global_var('func_438')
func_440_call = mutated_mod.get_global_var('func_440')
const_5531 = relay.const([3.763856,2.899421,6.623598,-3.558462,7.526867,-5.059025,-3.875244,9.651395,-5.548390,-6.036446,-7.537129,-2.399898,9.084218,0.602842,9.579113,-2.833893,9.953931,-8.447220,-9.292652,-1.264022,-2.578943,9.621348,-9.654497,-8.449402,5.669883,1.330774,8.843082,0.204384,-4.264681,7.899743,-9.362128,-4.316831,5.253281,-1.390733,4.541421,8.626205,-1.319189,1.154615,6.716655,4.412151,-4.423590,7.170122,-1.839941,-2.242884,4.600866,3.368250,-1.503002,5.410999,-7.154209,9.496876,-0.548123,9.361577,-6.371425,-1.309090,-6.031337,-4.260055,-1.974003,-3.627545,1.635385,5.124032,-1.060998,-6.386084,-1.005381,9.698711,5.821559,8.603031,4.694703,-3.084436,3.589429,-6.504851,1.614007,-6.501775,-2.439667,-0.861598,4.984443,-1.139660,-1.715642,-9.924119,3.443926,-4.554950,5.989002,-4.282900,-4.658493,-0.559849,3.649953,-7.718043,7.157655,-2.991518,6.587713,0.484999,-6.780876,9.270849,-5.356193,-9.457005,7.511343,5.136210,-3.533012,9.824553,-1.942991,-1.114321,-8.085351,-8.142972,0.809512,9.459129,-8.141723,0.703264,9.593256,5.468664,4.700862,6.744558,-6.025513,7.274078,-4.359218,-1.610395,-4.977476,1.036376,5.144586,-4.356907,-4.554713,5.182428,3.980481,-4.123995,3.039562,-0.998979,8.087761,0.654126,-3.600675,-6.315445,-3.372288,-3.427775,3.884794,3.637303,3.614122,8.029502,-4.123314,-3.210180,7.417589,-1.000917,6.413266,0.919774,-2.249194,-0.805402,3.913978,2.418116,6.532665,-4.813934,6.207051,4.005203,-4.097092,1.410625,-8.413273,-5.570114,-4.047166,-3.365624,3.968710,-6.139244,9.240204,0.346129,6.366074,-8.975734,-0.503383,5.735711,-1.525607,-0.346761,8.823619,6.982047,-7.181124,5.871481,-4.877349,-6.423188,-2.734401,1.563176,8.746513,-8.059118,-1.778541,-4.062083,-4.894011,-9.710459,-3.455233,8.107758,-8.015843,6.448118,-0.981525,3.100569,9.568932,-0.182395,-4.676763,9.102802,-2.528052,-5.618584,-7.750154,6.013171,-9.914613,7.256991,9.130482,-2.466438,-8.888108,-7.215338,1.660871,2.827958,0.394754,-6.828419,-6.324696,2.350521,0.393994,2.025785,-9.506608,-3.687778,-5.265532,-7.590214,-7.880204,-3.320831,-1.699468,6.778044,-9.424297,-3.008349,7.339096,-8.351433,-8.415980,-1.545558,3.233184,3.950708,4.554703,0.728994,-9.520573,7.952246,-3.289040,5.798313,-5.830523,-3.461707,1.156640,-4.184867,6.755243,-9.978412,-7.416314,-2.753968,-7.880279,-2.656639,4.107520,-9.607958,7.958860,9.024480,9.585071,-8.594998,7.334515,-5.990832,-5.842505,6.628887,9.891604,4.683263,7.908490,-5.235739,-8.526289,0.951626,-6.846587,0.009217,3.473181,1.738249,8.044359,-1.576446,1.539476,5.315989,0.758325,9.615484,8.543946,-1.606193,-9.436361,-2.556086,4.743652,3.257466,2.927072,6.310249,7.268204,3.713755,6.156132,9.680064,7.274442,-4.793635,-9.578587,7.028751,-0.469317,-2.123948,-9.875911,3.801210,-7.448714,9.853414,1.247156,-3.669593,-0.563380,9.457909,6.223473,-6.562001,-6.293550,6.171601,-0.193964,-3.581835,-2.307073,-5.989543,4.720972,3.809440,-0.444390,-7.055250,0.405388,-5.996982,-3.018826,8.422833,-8.578726,-7.788726,-5.254226,4.465096,7.710279,-3.988072,-7.749534,-4.511317,-7.270111,6.868283,1.398108,5.816833,-8.103358,-9.902403,8.029875,-2.097337,8.057071,-3.066503,-1.632495,-8.429752,3.680162,-6.197480,2.976305,-7.207218,-4.839176,-7.501050,6.572195,-2.987083,0.665747,-1.482192,7.534157,1.327317,-7.316916,-2.957758,6.848479,-4.122072,0.529927,5.382779,8.363408,3.542796,6.658063,1.824513,8.008298,9.720860,-0.863601,6.201568,-9.459254,-9.882357,5.479815,-2.712984,-4.907367,7.032604,2.981000,-1.104181,-6.694966,-5.354721,-3.911712,-0.165376,7.014042,-7.463915,-7.166565,6.493337,-2.700468,4.029940,3.424458,7.880555,-9.973123,2.600641,8.643184,-5.676843,6.137617,5.398711,5.895086,6.593546,4.486963,-5.981633,-1.620868,7.399056,-1.979916,-7.246439,-2.844300,6.668088,-3.123338,-0.591873,-9.571639,-8.766676,7.474265,9.001576,6.599253,0.089402,8.433947,-4.472491,-3.310756,-5.917636,-8.206997,-6.693712,-2.310525,5.791296,-6.356201,-4.250125,5.715539,7.604262,9.093885,2.952480,6.057699,3.931979,-2.719415,-3.587859,9.436945,8.637346,1.365066,-2.045976,8.718359,1.988220,6.383112,1.464597,-2.163252,1.690146,7.914187,-8.738823,-3.285861,1.583331,-5.539969,0.311527,1.709047,1.801075,-0.699008,-9.614526,-3.804990,2.326001,-4.294267,-9.175709,7.213513,-8.692139], dtype = "float64")#candidate|5531|(440,)|const|float64
call_5530 = relay.TupleGetItem(func_438_call(relay.reshape(const_5531.astype('float64'), [5, 11, 8])), 1)
call_5532 = relay.TupleGetItem(func_440_call(relay.reshape(const_5531.astype('float64'), [5, 11, 8])), 1)
output = relay.Tuple([bop_5525,call_5530,const_5531,])
output2 = relay.Tuple([bop_5525,call_5532,const_5531,])
func_5543 = relay.Function([var_5523,var_5524,], output)
mod['func_5543'] = func_5543
mod = relay.transform.InferType()(mod)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5543_call = mutated_mod.get_global_var('func_5543')
var_5545 = relay.var("var_5545", dtype = "uint16", shape = (3, 1, 11))#candidate|5545|(3, 1, 11)|var|uint16
var_5546 = relay.var("var_5546", dtype = "uint16", shape = (3, 12, 11))#candidate|5546|(3, 12, 11)|var|uint16
call_5544 = func_5543_call(var_5545,var_5546,)
output = call_5544
func_5547 = relay.Function([var_5545,var_5546,], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5667 = relay.var("var_5667", dtype = "float64", shape = (8, 8, 3))#candidate|5667|(8, 8, 3)|var|float64
uop_5668 = relay.log(var_5667.astype('float64')) # shape=(8, 8, 3)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_5671 = relay.const([[8,7,10,-6,4,-6,-5,9,8,1,-2,-4,2,6,6,8,-1,2,10,2,-3,6,-1,-10,-2,-10,10,9,-8,1,-5,7,-1,-5,6,-4,-10,-5,-9,9,-7,-4,-7,-10,8,-6,-8,6,2,2,-3,-7,1,1,8,-9,-10,-2,8,1,-3,8,8,5,-7,7,5,10,-7,-6,-4,-10,2,3,-5,-5,-9,-2,-6,8,5,-3,9,-8,6,-3,-1,-5,6,2,-2,2,9,-10,-2,-10,4,-9,7,-1,-1,5,7,6,10,5,-4,-3,10,10,2,10,3,10,5,3,8,-10,8,8,-4,9,-9,-5,-6,2,-4,5,-10,-7],[8,2,10,9,-8,7,10,-1,8,8,10,-3,2,2,-3,-8,-1,-7,10,10,-2,1,-2,-1,-8,-6,10,-3,-9,6,-7,3,3,-8,5,-3,4,-1,6,-7,-2,3,4,4,-2,-5,5,7,-9,10,-5,-3,7,-5,5,-5,7,-8,-3,-4,3,6,-9,-5,-9,2,-8,-5,6,-5,-6,-7,8,5,6,-8,9,8,-8,6,-7,-1,1,9,-8,8,7,-6,-1,-8,-10,-7,-10,-9,-7,6,-1,-1,5,-2,4,-6,7,6,2,-4,-10,-1,7,1,-3,10,-5,8,10,-2,2,-7,-9,7,-7,-4,-4,-1,5,5,-8,5,5,-5],[5,-1,-5,-8,-1,6,7,-9,4,-2,-2,8,1,5,-9,10,8,-3,-10,-7,-5,1,4,-5,-9,-9,1,3,3,9,-8,5,10,1,8,-1,5,-7,3,7,-6,-3,4,-10,-3,10,-7,9,3,-9,10,-6,-5,3,-4,8,-7,-8,4,-9,-8,-10,3,6,9,-9,-7,-5,-7,-10,9,2,8,6,-9,-1,-5,5,10,6,-9,10,9,8,-4,-8,6,-10,9,8,-2,-8,-10,4,6,-9,6,-1,-5,-2,9,5,-9,10,10,7,-9,-8,8,8,2,9,7,5,-8,4,-9,3,-3,-8,-2,-2,10,9,1,-1,7,1,9,7],[-4,-5,1,1,-10,4,3,-3,7,10,1,1,1,-3,9,-8,-2,-6,-10,6,3,3,7,9,-2,-2,-2,1,6,-4,4,7,-6,1,-7,7,7,8,-10,8,5,4,-2,1,-1,-2,-10,2,-4,-3,10,-3,-1,-2,7,10,-1,-1,1,10,8,6,-5,-3,1,-9,5,-9,2,-5,3,-5,2,-7,8,3,-3,6,-7,-4,5,9,-5,8,10,-10,-1,-7,-9,-5,4,-4,7,3,-9,2,8,5,2,3,-9,4,6,-2,-6,3,-5,4,-7,7,4,9,3,-7,9,6,3,-7,-3,-5,6,-8,-4,-6,-1,-6,-2,-9,1,1],[-6,-8,-9,9,6,1,-1,-4,3,-8,2,-9,9,1,-4,1,-1,10,-6,2,-2,-3,-3,-9,-6,1,1,2,10,1,8,-7,-3,-1,-7,-10,-5,1,9,-4,-9,2,-9,-9,2,4,-1,10,-7,10,3,2,-2,-6,6,-5,7,2,-6,4,10,7,-10,-5,8,-2,7,9,-8,2,6,-9,-7,-10,4,10,-3,-9,-3,-9,-2,-4,-4,8,-9,-8,-8,-10,9,-9,-6,-1,3,10,-4,1,-2,5,-7,10,5,-2,6,-9,4,2,-4,-6,2,-7,9,-2,-2,-6,10,-6,7,-10,-2,10,7,-3,-6,10,-7,4,-2,6,3,-4],[10,-10,7,-2,8,-4,-5,-6,8,-8,-2,10,9,7,-9,-5,-10,-8,6,8,1,9,-9,-4,2,1,-4,-7,10,-5,4,10,6,2,7,5,2,-1,-2,7,8,-7,2,7,7,-10,1,-6,-7,8,6,1,1,8,-10,-9,-4,3,2,7,10,-2,-9,-8,7,-2,3,-1,-7,8,-6,6,-5,8,-8,7,-4,9,-7,10,4,7,5,-2,10,8,6,8,2,9,2,-8,-2,10,3,-3,1,-4,9,9,-5,5,-10,5,10,-1,-7,-9,-5,10,6,-7,-3,-3,7,2,-8,7,10,1,-5,2,-1,-1,-9,-6,-4,4,-4,-8],[1,-4,6,9,3,-8,2,10,-5,2,4,1,-9,-3,-5,5,-2,-7,2,8,7,6,10,-5,-7,-8,-4,-8,5,-7,6,-8,-5,-1,-2,4,5,-1,4,-1,-2,3,-8,-1,6,-5,2,-1,8,-3,10,-2,-5,-1,10,3,1,-9,9,-3,-8,7,4,6,-1,4,6,8,10,2,3,1,-1,4,10,5,8,9,-10,-5,4,4,-7,3,4,-9,-9,1,-1,-2,-6,1,8,7,-5,-1,-2,-10,7,-8,9,8,-8,-9,-5,1,7,5,-10,-7,5,-5,-5,5,10,-3,-3,-6,9,9,8,5,-2,3,3,8,-10,-4,-9,6],[-4,-6,-7,7,10,10,-8,3,5,1,-8,5,-1,2,10,9,5,1,10,10,6,7,-6,1,8,9,-10,-1,-5,-2,1,7,9,-1,-7,-8,-2,-4,-7,2,-8,9,-7,-8,-5,5,2,-1,-1,-9,-3,1,3,-6,2,-6,-8,8,-7,-8,-7,-8,9,9,4,-10,4,-4,7,-7,-9,9,10,-5,-4,-3,9,1,3,-8,7,-5,7,7,-1,-5,9,-10,-1,-10,-1,5,4,-6,5,5,-9,-2,2,-2,-6,-5,-1,6,1,7,8,-2,10,-3,-9,7,-1,-6,-8,9,-5,9,-1,-6,-2,6,4,4,3,9,8,-2,4,-5],[8,4,-8,7,-7,-2,3,9,-4,-3,4,3,-7,2,-4,-2,9,-4,-9,6,2,-5,6,6,8,-10,-1,-4,-7,2,3,4,9,9,-8,4,-5,-7,-2,4,4,10,-5,6,1,5,-1,6,-6,-8,1,4,-8,8,6,9,6,-7,-4,-4,8,-8,8,-9,-10,9,-8,9,8,7,1,-3,-5,-7,3,5,3,-2,-9,7,9,-3,3,-4,-1,-2,-7,7,-7,-3,10,-4,5,-5,-9,6,-10,-5,-10,1,-10,-4,-2,-8,-9,-1,-3,1,-3,2,9,-9,6,-2,-3,-8,6,1,-4,8,2,-2,4,-2,-8,-10,4,-5,-5,7],[-10,2,-8,5,-2,7,10,-10,3,-5,8,-7,5,3,9,-10,6,4,-5,-7,-1,2,4,-8,-5,5,8,-8,-5,7,-2,2,8,-1,6,1,-2,9,-4,10,-1,3,-8,6,-1,-9,9,10,-1,2,10,-5,6,-6,-2,-10,-3,4,-3,9,5,-8,3,-2,10,2,-7,2,-8,2,7,4,-4,-3,1,2,2,-10,7,-9,-8,-6,-5,-6,7,4,-1,-3,-7,3,-10,5,4,-7,7,-7,5,10,4,-5,-8,-4,-7,6,-5,5,-4,7,6,-9,8,-10,1,-4,-7,-5,-8,-4,6,-3,8,4,8,8,-5,-9,-4,7,8,-10],[2,10,2,7,1,-9,-9,1,-6,5,7,-6,2,6,-7,-5,-10,1,8,-2,-9,9,5,9,-10,-5,-8,-8,6,-10,-10,4,-9,-6,2,-5,-10,-2,4,-8,-6,1,-6,4,-5,-5,-9,-7,-3,-5,-4,7,-5,-10,-10,3,-3,-10,3,9,8,5,6,-8,-6,5,3,3,-2,-9,3,-10,6,5,6,9,9,-1,-7,-3,2,-4,-1,7,2,-6,7,1,-6,3,10,5,-8,-4,7,-8,9,-8,-9,-4,10,-5,-5,-8,-3,-10,7,-2,-4,-9,-8,-2,9,7,-2,10,-10,6,-1,6,-9,7,-4,10,7,-8,8,-2,-7,-4],[2,10,-9,7,5,4,-2,2,9,-1,-3,1,-7,6,-4,3,-6,-9,-1,5,-2,10,9,7,3,-4,6,-6,10,9,6,-1,-4,9,9,-1,-2,-4,-10,1,-10,10,10,-1,1,4,3,-2,-6,-4,5,-5,-6,-2,-9,-2,5,6,-9,4,8,-9,-3,-8,2,-3,9,5,-6,-2,9,-3,7,8,8,-7,-1,-7,-7,-3,-9,7,-4,-3,-1,-5,-8,-3,-10,2,6,-2,6,-3,-6,-4,-5,-3,5,-1,-1,-5,5,-6,2,10,-7,-6,4,8,6,-7,2,1,-7,4,-9,9,-8,8,4,1,-2,6,6,8,-7,4,6,-7]], dtype = "uint8")#candidate|5671|(12, 130)|const|uint8
call_5670 = relay.TupleGetItem(func_3334_call(relay.reshape(const_5671.astype('uint8'), [12, 10, 13]), relay.reshape(const_5671.astype('uint8'), [12, 10, 13]), ), 0)
call_5672 = relay.TupleGetItem(func_3337_call(relay.reshape(const_5671.astype('uint8'), [12, 10, 13]), relay.reshape(const_5671.astype('uint8'), [12, 10, 13]), ), 0)
func_438_call = mod.get_global_var('func_438')
func_440_call = mutated_mod.get_global_var('func_440')
const_5680 = relay.const([0.477933,1.955563,-8.162084,-8.146412,-1.543718,0.115519,-3.809725,1.008953,6.864509,-5.150371,-8.972165,-3.474892,-8.478220,-7.704640,-6.121251,5.755732,-7.550636,-3.727503,-0.503776,1.753992,3.495809,3.386507,8.946050,-3.375629,-9.285900,2.564989,8.521715,2.505911,-3.940892,5.736711,-3.193313,-9.051918,9.953668,6.842970,3.646325,-2.876282,3.107881,-4.830551,-9.133448,-3.586865,8.871638,9.617738,7.867519,1.309329,1.528372,-2.813684,4.849191,-3.422249,7.512584,-8.137042,-1.080580,-1.891667,-3.437833,-4.803174,6.063507,-5.762155,-8.134748,-4.112529,-0.113195,0.949638,-1.511146,-8.887025,-0.467062,4.891965,-3.941747,-8.300568,-3.026400,2.754517,8.879128,-3.602606,-6.347570,-4.291146,-4.469277,-7.571220,-5.915430,-4.358270,0.643415,-4.693849,-8.072916,1.290982,6.276358,2.713912,-6.351027,9.321637,6.860344,8.561923,-4.116378,-4.893395,-7.660848,1.432523,9.562389,2.923893,-0.044469,-3.548594,3.137686,-4.657993,-7.563210,4.246082,-9.689245,-6.212435,-0.936117,7.143075,0.096857,8.073277,-6.051565,-4.124113,6.071749,-2.396464,8.588684,-6.401813,-1.674171,-6.904952,-3.114834,-1.689088,-4.292764,-2.524428,-1.565980,2.037196,-8.362405,7.557050,4.750520,-3.529459,4.368993,9.721063,0.939088,-8.283957,-1.102166,-5.462542,-3.444913,1.657808,-5.863412,3.183241,9.384994,-1.431872,8.642999,-1.930289,-6.472237,7.047372,9.662866,-9.065025,-2.794296,-7.992790,1.237660,-7.580872,4.507256,-4.479598,5.026407,-0.577491,-1.833456,-6.055736,-0.321090,1.353682,5.657495,6.661625,5.026450,-5.010196,-4.694335,-8.043363,6.400000,1.802917,-1.810070,-2.346379,4.966647,-7.714840,-1.019171,6.985051,5.549538,0.325914,-0.143212,8.265258,-9.303557,5.787960,-2.167994,5.333140,-0.365023,0.092558,-1.715601,2.116717,-6.182493,-4.742935,-3.676767,-3.841125,-9.503354,7.346341,-3.392291,-8.278788,-9.200791,8.952755,1.059206,-9.598568,8.967817,-0.963430,-8.333503,4.064540,3.325491,6.661812,5.530537,0.539445,0.365742,-9.989632,9.465200,-5.636354,4.186664,-8.270868,-5.424959,-9.559425,-1.117842,-3.359253,-8.934564,-1.280838,3.529794,-2.087714,2.254075,-0.793830,-6.355303,-9.214406,0.733528,6.967469,-9.783806,0.306601,-7.790906,-8.415106,-7.668904,6.328774,-5.814286,-9.010892,4.316771,-4.634127,-5.970354,7.375821,-8.556435,-2.341390,5.258448,-5.603944,1.945117,-8.150359,4.662191,4.648024,6.582174,7.415166,-0.368238,3.432649,-4.949642,-3.877242,-1.752003,8.407306,8.809639,-7.727715,3.996923,-7.232441,-2.401451,-0.960051,5.703172,7.281597,3.411276,-7.537944,-4.016111,0.902050,7.480700,9.662197,-8.752712,-7.573687,-2.378809,-0.920789,4.901870,0.261518,0.460486,-3.668143,8.163314,-7.609685,-2.273891,-5.953566,-6.166988,3.624369,3.597850,-8.774591,5.660170,2.377946,7.268808,0.129435,-8.053742,9.440447,-8.148318,-6.109775,8.526365,-7.175767,3.662835,3.513296,1.313793,4.028322,8.274142,-8.016744,6.317838,7.288701,9.535701,3.753926,9.913087,4.222301,-8.899003,8.693610,-9.479258,3.109797,-9.682275,-3.988871,4.258457,-0.865908,2.207735,5.692679,-2.974107,6.822921,9.312256,6.723211,4.151303,6.995758,-4.990135,-3.568101,-5.883526,-9.343178,-8.416905,-0.520736,-1.798425,-9.657721,2.594077,-1.279593,-9.589491,8.521251,2.341766,-7.234522,-3.666037,-3.462683,-7.656538,3.157822,4.285478,3.602564,-2.589391,1.996111,-0.493785,-3.018141,-5.295458,2.623295,4.363832,-4.038750,1.404224,0.731929,-5.241638,-4.291230,-7.608894,-8.822240,1.711439,0.492831,8.814918,3.019561,6.839220,-7.975051,-0.937649,-7.733144,-2.443600,-0.689222,-8.890572,9.482012,-4.855837,1.664320,-8.121387,-5.237720,-1.023472,5.578010,-1.620915,0.720558,6.035538,2.559972,-0.041817,2.850046,5.376316,-6.592481,7.966073,-3.968591,-6.208659,9.891664,5.560101,-0.704198,5.350312,-7.740761,-1.023458,0.998332,3.345001,-1.475490,0.278645,-0.177517,6.086349,-6.389212,9.881652,-0.759996,-1.483715,-7.419648,2.649036,2.884566,-1.286329,4.517474,-5.494423,-0.268982,7.681704,8.091066,-6.472460,1.140678,-8.262849,6.492605,3.305464,8.108273,0.806933,8.554781,6.777178,9.223517,-4.487130,-0.853477,-2.158583,-9.489692,0.463932,-2.110209,-5.865388,-4.445727,0.089279,-0.013462,9.125637,-1.202213,1.855912,-5.358688,2.884724,-4.419800,-2.362784,-3.342261,-3.078356,-6.153589,-6.685689,9.774260,9.842870,1.018636,5.111467,1.967859,-1.996373,4.309186], dtype = "float64")#candidate|5680|(440,)|const|float64
call_5679 = relay.TupleGetItem(func_438_call(relay.reshape(const_5680.astype('float64'), [5, 11, 8])), 1)
call_5681 = relay.TupleGetItem(func_440_call(relay.reshape(const_5680.astype('float64'), [5, 11, 8])), 1)
func_4892_call = mod.get_global_var('func_4892')
func_4895_call = mutated_mod.get_global_var('func_4895')
const_5695 = relay.const([9.484128,-1.754076,5.383507,3.185898,-1.785892,-8.305640,-2.066807,0.400952,2.138348,-2.496476,-6.714755,-1.397130,-2.936889,-2.153437,-6.996919,-8.353729,-7.072573,-5.633326,4.566191,4.169229,-1.219803,9.465375,2.723272,-6.628158,6.791143,-0.208060,0.810381,2.824330,5.729535,3.753645,-4.839940,5.504650,-0.659750,3.349521,5.582773,-2.141440,-4.193149,-4.626174,-7.439563,-4.180303,6.025407,8.140107,1.254781,8.553515,-4.963603,-1.613795,-0.566288,-5.670365,-8.194331,-9.045978,-8.717567,8.632277,-9.553710,6.656797,-5.288056,7.113634,-2.924669,-0.114710,5.560060,5.181788,-6.012471,-5.158787,4.477192,-0.498411,-6.225630,-0.871032,0.135590,9.264148,1.548973,-2.054203,-1.645527,-8.605126,-3.511458,9.991508,-9.789043,-0.796174,-9.071641,6.006178,0.762477,3.522245,-0.156474,-6.351706,4.862666,0.001931,-0.747709,-8.846065,5.839887,-8.250342,1.262521,2.444429,-0.775180,5.371089,7.658247,-9.310690,-6.421596,-1.612922,6.516763,-2.714580,2.104321,-5.398553,0.478873,-3.085935,5.253838,-8.390994,-9.840837,-2.188833,3.993674,-0.491576,-0.571653,0.001716,-3.368113,4.375020,8.192196,0.060582,8.331675,-6.944532,-2.018387,-4.352089,1.317351,8.780891,-0.698738,-9.489825,4.433803,-3.783402,-4.209174,-9.984360,-7.155047,-9.344691,5.928668,-1.964946,8.258681,2.907351,7.064532,3.647319,-4.343584,5.686778,-9.178485,9.553506,-9.698046,6.437324,1.405262,5.473900,7.710315,8.319497,3.206496,-6.954323,6.399010,1.638670,0.618046,6.936083,5.289378,-8.961224,8.519296,2.105637,-5.792164,-0.164130,-4.416506,1.247871,1.001839,-8.280806,-5.588589,-9.964250,-5.280628,-0.607342,-4.136878,4.054020,-7.007526,-7.513491,0.486129,2.154515,-1.114161,-8.654084,-9.421409,2.865099,-3.618284,-6.348890,-2.222070,-1.961820,-7.977596,-7.678314,7.126674,-4.050364,3.527620,3.841828,-5.381561,-3.245360,-8.397668,1.413184,-1.804824,-9.059168,-5.217771,8.056802,6.049363,7.762440,1.896987,8.874633,-9.153384,-2.014426,-4.177965,-4.861742,3.645597,8.267134,1.148025,-9.922961,1.853729,2.422844,9.395503,-1.025995,-6.073351,0.983572,0.722660,-7.734267,-9.770437,-8.304539,-6.524820,-2.776138,8.999485,4.912048,-2.922223,3.820203,9.634655,-9.609546,5.146123,1.429210,-4.906391,3.059440,7.946579,6.614944,8.086240,-3.742158,8.388994,9.169060,7.908937,7.956311,-3.267655,5.971397,3.444175,-6.893821,8.376825,3.379576,-8.558419,9.861176,-0.382187,-6.650251,-3.764425,-4.341781,5.908350,9.993163,-4.018958,-4.387548,9.716525,-9.650342,0.141902,9.996697,9.461186,7.718258,-6.470380,0.937707,1.024960,-8.735406,2.769935,9.238162,-3.281481,3.477410,-9.995205,4.017154,8.609868,-4.295155,-3.853102,7.461567,-0.258558,-9.144623,-3.267095,-9.777546,5.941951,3.410561,7.631814,8.160083,9.961949,-2.796960,-7.423675,0.972333,-9.915125,1.349474,-1.483905,-6.757008,8.553404,1.743943,-9.453242,8.534024,-8.717914,-7.211486,-6.100429,2.695152,-9.024089,3.686922,7.576628,3.000028,-2.308066,-3.619738,0.653590,-1.724456,4.615777,-5.614745,8.228210,8.511520,7.883512,1.416651,0.912239,3.561278,-5.504431,7.964625,-3.369981,8.992630,1.462583,4.400553,-0.874330,9.961951,9.834312,-1.444724,6.072257,-6.305730,5.407173,-8.300230,-8.042638,8.996033,-8.028810,-9.166863,0.454935,-5.453527,9.383623,2.218479,4.992121,-0.083855,7.439050,4.373589,-0.578138,2.563394,3.742010,0.635666,2.241401,-3.462956,5.786897,-7.618458,0.419700,9.494557,-3.459971,-8.435192,2.707293,-6.220084,1.266716,3.255944,6.921830,-0.760536,6.170133,-5.618502,-9.262549,-7.003213,6.572411,-1.174627,8.537703,-3.135081,-2.912941,5.923970,4.063138,-6.820792,7.419622,-6.966144,-7.677272,9.160009,-9.243417,3.015808,9.369169,-3.170685,-1.371143,8.405693,-9.502789,-8.602041,-1.428045,-6.650583,4.927783,0.499361,1.659023,-5.895740,-3.479871,9.323689,8.753415,9.822642,-5.529998,-7.841773,-9.079137,9.064715,0.605600,1.690650,1.111319,7.667388,2.485562,-2.025933,-3.381412,-5.589948,-8.178702,-4.624891,-3.531309,-9.413896,4.026917,-3.637407,-9.328901,8.735740,7.744707,-9.414913,-1.476293,4.980100,-7.913293,-0.184515,-6.309737,0.427837,-6.921385,8.437751,8.976989,-3.947562,-8.433352,-1.058842,-3.941577,-5.121371,-5.692149,-6.211135,-3.675973,-0.632429,6.586889,1.758818,-2.381041,9.374982,-6.841721,3.296176,-0.362674,6.293869,-5.637949,-6.708994,6.977672,-9.139965,9.599452,-6.922258,1.920379,-0.760584,-6.574715,-2.349866,-5.449273,5.834496,-0.777492,-9.484142,-2.437311,7.825113,9.310746,6.327489,-2.759049,-0.180754,7.676781,6.802110,-8.011341,2.385612,-3.387954,0.131337,7.396728,6.460276,8.803921,0.867166,7.440091,0.579317,-6.947182,2.785317,-4.881386,-7.197019,0.822830,-5.824937,2.961324,-5.268601,-1.922169,-5.790284,-6.105855,3.759592,1.283612,-1.828403,-3.742128,1.774985,-9.868263,2.530601,-3.151784,-8.435163,-1.655593,3.613712,5.485976,2.913886,8.395086,9.793508,9.610800,-8.577779,8.122270,-2.983454,-6.804309,-8.926696,-6.337347,6.463137,2.788920,-0.954015,5.071322,4.065195,1.447783,-2.239232,-2.252633,0.413018,-8.773670,-7.495506,-2.881067,7.721047,-3.520302,9.497214,-9.822841,-8.164438,7.843128,8.060967,-5.720993,9.673802,7.045740,3.086940,1.305921,9.136417,-5.314968,-2.284455,-1.118497,6.101923,3.874970,-0.682783,1.315677,-3.443186,5.855094,6.013710,-8.701516,-7.260323,-7.866404,-1.573022,-0.361598,-8.283792,0.500204,9.567449,-1.930688,3.076056,8.309630,6.193530,-1.555328,4.839964,4.674999,1.593463,3.666272,3.954142,5.360964,-4.214889,-3.108185,-9.019969,6.702846,8.298482,-4.410994,2.389210,-2.956652,3.517840,-2.806759,0.742052,8.578615,-7.272258,-4.016526,0.308493,9.214312,6.612527,-6.860162,8.381016,7.286436,2.450659,1.823517,1.037740,-5.653308,-2.429573,-0.232766,-4.466172,4.382193,-2.448679,8.523555,6.799738,4.842651,-6.182101,9.943644,6.972762,-9.413314,-3.897211,-4.714633,-1.497271,-7.254422,3.820434,-5.938384,6.280533,-0.947381,0.779471,0.258658,-8.140383,6.152012,-2.641690,9.390215,4.107359,-8.063995,4.194543,7.088330,3.576558,3.969145,-4.312092,5.418750,1.572415,-7.003923,7.464043,6.888265,-7.204756,-1.917664,1.423323,7.967132,4.247847,8.856262,-6.445379,-4.314628,-2.967577,-5.284195,2.448681,-4.171755,-0.365607,7.834645,-8.024299,2.123284,8.743064,8.043600,5.037904,5.667798,8.943630,-1.360561,-4.975613,2.229404,-3.954128,6.542342,1.304228,-3.525045,-6.561715,1.395400,-0.026073,-9.464542,-7.996756,5.710599,-8.247647,7.755183,0.299125,5.521472,-1.522734,-0.754429,-1.081098,4.143250,-7.227055,1.997491,8.037200,7.497937,-0.961327,-4.785303,-1.776069,-9.277379,-0.397552,-9.290108,1.010349,2.840244,-9.108275,-1.225018,-8.615267,9.082639,3.527775,0.891568,4.583636,9.052490,-4.643805,8.144542,9.815383,1.579211,4.159308,7.046646,4.079334,-6.355678,-0.589402,9.800067,-5.185669,2.606006,9.364414,6.327389,-3.107826,-2.884149,-4.234895,3.472483,-9.200195,9.909678,-6.139948,-6.686996,-1.139781,5.283202,-4.900640,1.769698,2.535409,-8.929678,7.376121,-7.482748,-0.352850,4.227906,-5.506660,-9.469017,2.948321,-4.541375,-6.937968,-3.920762,2.193049,-4.364021,-0.283276,9.955307,-7.869770,-5.488509,5.516888,0.643374,-5.595757,-7.431501,6.382071,7.085216,-4.181108,-1.393165,-6.968313,1.156927,2.213930,3.349617,5.324996,2.583557,5.643367,-1.126489,-1.156977,-2.028935,-6.412190,7.081867,-5.620741,-0.355463,-4.335318,0.014288,6.676512,2.528924,-4.146513,-2.664686,5.816258,-2.121263,-9.795998,5.504119,-2.865671,2.757643,-3.040197,1.265142,3.005672,5.215222,-6.676526,-2.628404,-6.390506,-8.532925,5.170346,-5.682341,8.707337,3.922373,1.065567,-8.452468,-5.496362,-2.080039,2.390297,1.688439,-1.551906,-3.156257,-1.521350,-1.068083,-3.806426,2.829873,-5.402941,-4.568793,-1.121542,4.092992,-2.316835,-4.774916,6.024341,5.251199,-7.671206,8.196293,-9.800060,1.373963,-7.705570,3.262908,9.940894,-6.352497,-6.974470,1.642201,-0.453647,4.650744,-1.063623,-4.490416,-3.559709,-2.346634,-1.320967,7.502683,-1.604964,1.046691,3.633558,7.528048,-4.165490,-1.101045,3.969650,7.197430,-7.644935,-9.755543,-4.693643,-8.004128,8.219109,8.747667,-7.289206,-5.766570,-7.266163,7.064083,-7.452556,-3.171440,4.276127,0.226954,-6.904372,-7.851864,6.350023,2.670415,6.958562,6.319656,4.800607,2.070832,0.685254,-2.163491,6.377254,6.110865,-6.925924,-0.533007,-4.364613,-9.389651,0.465133,7.108840,-5.907233,-3.279300,-1.533160,-9.000607,3.577209,4.610004,3.875587,-4.519912,-9.923344,-2.614717,3.632186,-7.040893,-1.589250,-7.859269,9.782039,2.223848,-6.772951,-3.471654,6.900193,-7.297791,-1.084365,7.658011,3.685773,-3.957935,-1.810196,3.833262,-0.547247,2.044113,-2.961326,-3.500331,-0.349563,1.834630,9.793982,6.682547,-5.402975,4.171752,-4.969119,-6.281495,-3.862160,9.314392,0.134917,-3.806284,-8.974273,0.614986,7.000249,-3.552704,5.503522,5.539606,0.614644,6.801619,-0.231624,-7.668179,9.156611,0.775584,-2.917073,-2.479076,2.205611,3.290564,0.605859,-1.757765,-6.468681,-0.655813,6.321001,-2.888950,-1.352630,-0.296632,1.999767,9.973866,-3.851381,-2.659035,5.807842,-8.411966,-9.445386,-6.758486,-2.905501,-7.718392,-9.314821,-2.191182,-6.688810,-4.714630,-4.404682,-1.680712,-5.165586,9.743051,-7.244981,0.966719,-9.411498,-2.819806,2.486583,-9.321310,2.668578,-3.559163,3.682237,6.588362,9.821553,5.167051,0.439666,3.039050,0.496918,-4.297171,7.722919,-6.897090,5.805263,-9.939151,4.241583,1.954899,3.316067,-2.498958,-8.275113,2.965204,-3.116049,-2.039085,-0.910851,8.153935,-1.952877,0.793504,7.054337,9.276663,-2.242583,1.369207,2.770567,-7.456987,-2.143231,3.547089,8.128841,-0.717094,3.167454,6.227444,8.528350,-7.588098,-5.017893,1.451258,1.985382,-0.077547,-4.376583,7.172133,-5.005331,-6.043643,2.814530,-0.259785,-1.136299,-1.740170,9.100209,0.362289,-6.871390,-2.763068,0.071867,-7.913238,-9.779657,-9.193433,-5.459843,-8.478481,-7.406842,9.235415,9.425298,-5.492230,-0.644398,7.698648,-1.531218,-6.974185,-0.151912,9.780640,-8.903043,-5.834821,-3.555157,5.313121,6.281450,-9.937154,3.996545,9.711357,6.823196,-8.726055,-1.561621,8.144875,3.086298,3.133186,-6.937080,3.414122,-1.152514,2.665515,4.463739,3.333120,0.124468,-8.195226,4.469885,1.479506,1.472458,-8.344616,1.621024,-8.336280,-9.997189,9.618066,-4.521151,5.700610,-2.188696,5.783863,-9.520078,-9.764508,-9.810361,-9.770818,-3.839014,-0.659648,5.428072,3.855014,-1.074634,6.921951,1.853741,8.661931,-4.408790,-5.541712,-5.731339,-6.437160,-4.287930,-3.415152,4.243073,-2.602172,-7.966516,0.162614,-6.828952,-2.676238,-1.616119,0.315165,-7.903916,0.519597,4.316676,-1.064688,4.505650,-5.344325,1.412526,1.159513,0.983167,4.310680,-9.234490,-3.677473,2.183154,-9.463814,-9.178694,-2.197003,-3.855616,6.023335,7.709917,6.790336,-8.053404,8.369782,-8.256976,-2.040785,-9.782067,1.302761,-0.241575,3.949961,8.138434,0.259174,9.048276,-9.020148,6.200983,-6.796629,0.234700,-1.157812,7.888119,-8.407140,-2.028156,-6.272451,-5.015118,9.837337,5.739068,-2.660974,-7.852142,-2.751136,8.533223,-0.743033,6.418695,-4.507968,-9.966521,-5.685534,-0.699471,-3.474388,-8.748168,3.708589,-2.067646,3.706070,-5.723691,-0.692410,-7.186557,-4.057968,-3.482167,-3.436244,6.181188,-3.313021,1.077885,-6.716601,3.098627,-9.871959,2.718921,-2.144956,8.253771,6.094987,-1.237527,-9.993881,-9.834347,-5.119683,9.420138,-0.730958,2.731131,1.270882,-5.298182,-6.795980,-2.550398,9.790413,1.186459,6.901356,2.260739,-0.901579,7.672861,-6.689846,2.916715,-4.284806,-2.042226,-2.434208,4.695607,-4.214515,1.674570,-5.417461,-4.398016,9.383678,8.391241,-4.060413,8.090568,-2.949704,1.656782,-5.083182,-5.123404,-6.919038,-8.531904,-7.834563,-8.471594,5.352391,-4.919157,7.115651,4.521472,-9.480180,7.710936,0.029699,0.670367,7.065855,8.843610,2.627116,-5.924830,-1.032246,-4.607921,0.172346,6.403679,-6.018069,-8.247085,-3.902585,-0.771418,-0.392309,3.539642,-9.980141,-8.933850,-9.822180,-7.212218,9.169237,4.741128,3.656493,-3.352928,-3.899643,2.373297,2.664262,-1.650589,0.497407,-8.083724,-1.782590,0.215191,-1.373304,1.041241,1.490971,8.455444,-9.646575,-1.790454,-1.257116,-1.531975,6.215324,-1.091953,6.594714,-0.516855,6.134720,4.542113,0.283390,3.902451,-8.107189,-8.641985,-0.023130,-2.947792,-1.629168,-1.056957,8.792299,8.248208,-1.781703,-3.771489,-2.887264,-7.006190,4.832817,9.104153,-9.063133,2.001907,1.654011,3.337752,8.397236,3.265904,-7.760148,-9.395554,-4.900877,-2.276143,9.368314,8.901425,-7.546084,-2.469725,7.758942,-1.816908,-8.166844,-5.929551,5.202371,2.427715,1.905949,-1.512942,-9.406952,0.871205,-3.956169,7.899169,-7.639027,4.543610,-2.953445,8.344730,5.956947,2.829909,3.421399,-9.057319,3.757839,0.498232,-1.679137,2.361782,-8.192454,5.339442,-9.410368,2.039593,2.910126,1.013584,-8.891494,2.490305,-9.390858,5.176768,-5.648126,-2.678320,9.837363,-7.979277,4.625423,-9.962978,6.420833,-3.420465,-1.818663,-3.831638,-9.215116,5.171754,-2.025089,1.800275,0.789834,-6.732281,-3.076966,-3.404302,-1.312574,4.155576,-1.945040,-4.824126,1.507698,0.697084,-0.441366,-0.809447,-5.681767,8.274028,-0.126497,7.077239,3.963784,-8.277416,4.754676,6.264611,0.617034,0.019509,-3.669223,6.778050,9.234004,3.386612,7.132272,-2.211366,0.561326,-4.439132,-9.366452,0.119057,-9.403401,7.951748,-5.186222,8.902958,0.303993,6.870279], dtype = "float32")#candidate|5695|(1350,)|const|float32
var_5696 = relay.var("var_5696", dtype = "float32", shape = (1, 1848))#candidate|5696|(1, 1848)|var|float32
call_5694 = relay.TupleGetItem(func_4892_call(relay.reshape(const_5695.astype('float32'), [1350,]), relay.reshape(var_5696.astype('float32'), [12, 14, 11]), ), 3)
call_5697 = relay.TupleGetItem(func_4895_call(relay.reshape(const_5695.astype('float32'), [1350,]), relay.reshape(var_5696.astype('float32'), [12, 14, 11]), ), 3)
const_5698 = relay.const([[[9.647872,5.466671,8.792920],[7.327676,-7.662993,-7.251226],[-3.336218,-3.698086,-3.080680],[-5.971217,-1.819843,8.224487],[-1.545258,-4.925966,9.519655],[9.501044,1.792384,0.017870],[-3.154940,2.036877,-5.889138],[9.274206,4.578546,9.354021]],[[-0.623798,4.696181,1.278140],[-0.926786,-5.479655,-2.640070],[-0.729039,-8.125081,4.368888],[0.447621,9.808597,-9.118046],[-7.661992,-5.260716,4.780431],[7.904016,-4.265046,3.379965],[2.292803,0.974944,-7.617632],[7.044842,5.600336,-7.631334]],[[-3.633231,1.318858,-4.630587],[6.772576,6.363521,-6.234356],[0.996154,-6.496629,4.878876],[4.305428,5.074484,-9.434466],[-7.727105,-1.530776,8.203750],[-8.002026,-1.202951,8.102545],[1.533118,9.825494,6.787915],[-0.872981,5.340215,-7.769579]],[[-9.622445,-8.618370,-6.320438],[0.667961,-5.078739,6.152355],[-2.041430,6.218983,1.588114],[8.795606,2.905013,6.927118],[0.316702,4.450116,-4.886298],[0.592392,7.087249,-0.650594],[-8.595668,8.020484,5.026413],[-6.446029,-3.552380,1.431142]],[[0.499090,7.621276,9.126610],[3.472059,-2.408568,-2.825760],[-5.824041,2.746756,7.402717],[3.656917,0.907219,-8.007172],[8.700810,-1.941480,1.689921],[2.926099,-2.422021,8.622456],[9.345189,-1.918198,-6.070466],[-9.210289,-7.080602,-9.321751]],[[6.916031,0.389036,-8.906718],[-9.355175,8.539102,-5.405978],[-6.540261,7.689049,-1.837523],[-3.518961,9.166680,9.144358],[7.022257,-6.892425,5.029007],[2.178100,-4.598553,6.339230],[3.097934,9.739444,-7.654728],[7.217436,9.688389,3.785466]],[[8.371081,-0.168808,0.731752],[-4.145587,9.084040,-0.813192],[-6.237240,-7.147746,0.985544],[2.015825,8.479948,4.498244],[-0.208102,-0.407535,5.077752],[0.089149,7.443646,5.993234],[2.054292,-3.673256,-1.946706],[8.837068,-7.826455,7.330774]],[[7.678975,-7.035530,8.896127],[-2.048604,-2.688978,-7.541541],[2.085888,9.449819,4.389395],[6.137167,-4.261635,8.628510],[-7.760902,6.894079,-5.050932],[-4.428389,-1.876455,-5.716712],[-4.107523,5.385622,2.967920],[-4.248925,-6.858332,-7.446147]]], dtype = "float64")#candidate|5698|(8, 8, 3)|const|float64
bop_5699 = relay.bitwise_xor(uop_5668.astype('int64'), relay.reshape(const_5698.astype('int64'), relay.shape_of(uop_5668))) # shape=(8, 8, 3)
var_5714 = relay.var("var_5714", dtype = "float32", shape = (2, 1848))#candidate|5714|(2, 1848)|var|float32
bop_5715 = relay.divide(var_5696.astype('float32'), var_5714.astype('float32')) # shape=(2, 1848)
output = relay.Tuple([call_5670,const_5671,call_5679,const_5680,call_5694,const_5695,bop_5699,bop_5715,])
output2 = relay.Tuple([call_5672,const_5671,call_5681,const_5680,call_5697,const_5695,bop_5699,bop_5715,])
func_5719 = relay.Function([var_5667,var_5696,var_5714,], output)
mod['func_5719'] = func_5719
mod = relay.transform.InferType()(mod)
mutated_mod['func_5719'] = func_5719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5719_call = mutated_mod.get_global_var('func_5719')
var_5721 = relay.var("var_5721", dtype = "float64", shape = (8, 8, 3))#candidate|5721|(8, 8, 3)|var|float64
var_5722 = relay.var("var_5722", dtype = "float32", shape = (1, 1848))#candidate|5722|(1, 1848)|var|float32
var_5723 = relay.var("var_5723", dtype = "float32", shape = (2, 1848))#candidate|5723|(2, 1848)|var|float32
call_5720 = func_5719_call(var_5721,var_5722,var_5723,)
output = call_5720
func_5724 = relay.Function([var_5721,var_5722,var_5723,], output)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5945 = relay.var("var_5945", dtype = "float64", shape = (3, 1, 13))#candidate|5945|(3, 1, 13)|var|float64
const_5946 = relay.const([[[-3.786449,3.568422,-3.237248,3.819938,7.519119,6.533068,5.437073,0.276444,-2.213834,-9.707339,0.115790,-3.222915,7.602315],[3.833298,-8.178211,0.933970,4.098851,-2.892475,-2.881066,-7.713399,-2.547921,-4.650001,-3.430563,2.280567,1.535595,0.528082]],[[0.943542,5.660140,-7.117284,-8.544558,-9.082150,1.523580,-4.240072,5.484441,-7.264633,-6.155274,9.917767,-7.736611,-5.555034],[-2.223812,-8.887046,9.873099,4.951614,-3.360248,3.613866,8.325144,-6.169642,1.668251,-2.178452,4.948110,-9.568925,-2.385967]],[[-6.315053,7.041807,-5.983294,-8.319394,7.060866,-2.751860,8.719262,-7.313764,1.407628,-8.519195,3.870729,-3.705524,-6.829663],[-8.719564,-2.807197,0.090494,4.038039,6.342000,-6.499442,-2.570527,8.705847,8.224507,2.068864,1.640240,0.529940,-4.012237]]], dtype = "float64")#candidate|5946|(3, 2, 13)|const|float64
bop_5947 = relay.floor_mod(var_5945.astype('float64'), const_5946.astype('float64')) # shape=(3, 2, 13)
func_3738_call = mod.get_global_var('func_3738')
func_3742_call = mutated_mod.get_global_var('func_3742')
const_5953 = relay.const([-5,6,-10,-3,7,2,-9,-10,3,-5,-5,-10,-7,8,-5,1,-7,-6,-4,-9,6,-8,2,-3,10,-3,-3,7,-3,9,-9,10,7,-3,6,3,3,-6,-9,-2,-9,6,-10,-3,2,-3,-2,7,10,2,9,-5,-7,7,-1,7,-4,3,7,-10,-8,2,-7,-9,8,-10,-7,1,-9,-9,9,-2,8,8,-1,-6,3,-7,8,5,7,7,2,5,-8,2,10,-2,-9,-6,1,1,2,4,6,-8,-7,-5,4,-10,6,-2,8,-7,-6,-1,-4,1,-10,6,4,-7,10,10,3,8,4,8,-4,10,7,-9,4,5,-4,-8,-6,9,-10,-7,9,-4,5,-6,8,-1,9,-8,-1,-7,-5,-3,-3,-4,-1,5,8,6,5,4,-10,-10,6,-4,-10,-2,-5,5,-5,-10,-2,8,-6,3,6,5,-4,-7,-3,-7,-1,8,-2,-5,-2,7,9,5,-10,7,6,6,-6,-10,3,2,6,9,2,7,10,-1,-1,-4,-3,-9,-4,-8,-7,9,-6,3,10,-10,-7,-10,2,5,8,-4], dtype = "uint64")#candidate|5953|(210,)|const|uint64
var_5954 = relay.var("var_5954", dtype = "float32", shape = (1350,))#candidate|5954|(1350,)|var|float32
call_5952 = relay.TupleGetItem(func_3738_call(relay.reshape(const_5953.astype('uint64'), [3, 14, 5]), relay.reshape(const_5953.astype('uint64'), [3, 14, 5]), relay.reshape(var_5954.astype('float32'), [1350,]), ), 0)
call_5955 = relay.TupleGetItem(func_3742_call(relay.reshape(const_5953.astype('uint64'), [3, 14, 5]), relay.reshape(const_5953.astype('uint64'), [3, 14, 5]), relay.reshape(var_5954.astype('float32'), [1350,]), ), 0)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_5975 = relay.const([[9,7,8,-9,10,10,6,4,-2,-8,4,2,-4,-6,10,-10,-2,4,8,4,-5,-2,8,2,-6,6,2,7,-10,-8,7,-3,9,-8,1,5,-8,6,4,5,-2,1,-7,-9,3,1,-5,10,10,-1,2,6,2,8,-1,9,4,-7,-10,9,-4,-7,5,-5,7,-7,-9,-9,-6,-8,-9,-2,8,-5,-8,4,-5,2,-10,4,-2,-6,-5,-3,-3,-1,9,7,-5,-6,7,6,10,-1,-7,-6,7,2,-9,6,-8,-6,10,-2,6,-9,-7,4,-5,8,9,2,7,9,-7,-10,9,1,9,-6,3,-7,-10,-10,5,6,-3,9,2,-8,10,3,-3,-1,-10,-1,-2,-7,-1,-7,6,-8,2,1,-5,3,8,-9,4,7,-8,-9,7,3,3,-2,-3,-8,-10,-1,9,-2,-1,7,-2,-1,3,1,6,-5,1,-9,-8,1,7,4,-5,-2,9,2,-6,-2,-3,-6,-6,-1,8,3,-9,3,6,2,4,-6,3,-6,10,-5,-2,5,4,9,6,-6,-6,-10,8,4,4,-7,-9,-8,-1,-4,-6,3,5,-9,-3,5,-8,4,5,-10,-7,9,-9,6,2,5,9,7,9,4,-5,-3,-3,8,4,-10,4,8,-6,3,4,-5,5,8,10,-6,-10,7,-6,1,3,-3,-1,-8,7,5,9,-6,-2,8,8,-6,-1,-2,-5,8,-6,-5,-2,-2,-6,10,-6,2,3,-9,-4,-1,-5,-1,-8,10,-10,9,-8,2,-9,-1,-1,3,5,-8,7,3,2,4,-2,2,-9,-5,3,3,10,-8,-9,8,5,2,-3,3,6,3,-2,-2,-7,8,-4,1,6,-6,2,-8,10,-8,4,10,1,-10,10,5,-10,-7,-5,8,-8,8,-10,7,-8,-5,-8,-2,8,-5,-5,6,-5,-10,9,-4,2,-9,10,-4,-4,-9,-4,3,-3,10,1,3,-9,10,1,-7,6,7,5,-4,-2,1,-4,-10,5,6,8,-3,2,-2,-7,-8,-8,-1,-10,-2,-8,8,7,10,10,9,-5,2,8,-2,5,-2,-9,-8,9,-1,10,8,9,-3,-4,-4,7,-8,-2,-3,-2,-1,-7,-2,-6,-3,2,8,-9,-10,-5,2,2,8,10,-10,6,7,-2,-8,-10,9,-4,5,7,-6,2,6,-6,8,6,2,1,5,-6,4,-6,2,-7,1,4,8,-5,-10,9,-9,-7,-6,8,-4,4,2,10,-8,-3,-2,-8,3,-5,4,-2,-8,4,9,-3,8,-10,7,-4,-8,-8,4,-1,9,1,-9,-8,3,-8,6,7,1,4,-9,7,-7,-8,-10,7,6,-7,-2,9,-9,-8,-2,-6,-2,3,1,9,-4,9,5,-5,6,3,7,3,-2,-10,6,7,8,-9,7,-7,4,-5,3,-7,4,-7,3,6,1,-8,-3,6,5,10,-5,3,4,6,1,-6,-3,-5,-1,2,8,10,4,-3,-1,-3,2,6,5,3,3,-1,2,-3,-9,-6,6,8,-4,-1,4,3,-9,3,-9,1,6,10,-8,-3,-9,-3,7,-5,2,7,-9,3,-7,3,5,-10,8,10,-5,4,-4,-9,8,-3,1,10,8,9,2,-1,-5,-7,-1,8,10,1,9,-4,-7,1,6,-7,7,-10,-7,-5,4,-7,10,10,-9,3,-3,7,5,8,-9,6,3,6,-8,4,4,-6,9,2,9,6,-2,1,-10,9,-4,-5,2,6,-2,-2,2,-1,-6,-8,10,-4,-6,-2,-4,6,-7,-4,2,-8,10,3,10,4,-8,-8,8,-3,-8,1,-5,9,-7,10,3,-8,-10,7,-6,5,-7,4,-8,10,-1,10,-5,7,-2,-3,-7,-1,3,-8,-1,3,-9,-3,-4,-4,1,1,3,-2,-7,3,8,-10,2,-8,-2,-10,9,-7,-6,10,-5,5,-8,-6,-2,8,10,8,5,-6,-8,9,2,2,9,7,-2,-3,-9,-5,5,-2,-1,-9,-10,-7,-1,-8,2,-1,2,4,-10,6,5,4,-5,7,9,-6,10,7,-10,4,-7,-3,-3,-4,-6],[-4,-2,-1,5,4,-5,-2,2,6,-4,-3,7,1,5,-5,-4,1,9,2,1,9,6,1,-3,-1,-7,-10,-2,-6,-4,9,-4,-3,-6,9,1,-5,1,7,3,3,-2,-6,-3,3,-3,-5,-7,-2,-5,2,10,5,1,7,7,4,4,4,-2,3,1,4,10,3,-6,-3,2,2,-7,-9,-1,-6,5,-10,-8,4,-5,-1,4,-10,9,-1,-1,-4,1,7,-8,-7,-2,10,4,-3,-10,-3,6,-7,1,6,10,-2,-3,5,1,-4,2,7,8,4,2,-4,-5,3,-8,7,1,3,10,7,1,-6,-5,-1,-3,-1,-4,-5,-6,4,9,6,-1,-4,-6,-4,-4,1,5,2,-9,-5,10,2,10,3,-7,1,-7,-1,-8,9,-5,-1,4,-8,-8,4,3,-3,-3,-4,5,-8,-2,5,-4,-10,-7,-7,4,-2,8,-10,3,6,2,-6,-7,1,-5,-7,-1,8,-10,6,2,-4,-3,3,-10,4,1,10,6,7,-6,-2,3,-2,7,-5,-6,-9,-5,-7,-1,8,-2,-10,-8,4,3,-10,6,-7,9,-1,-5,6,-3,7,-5,-10,1,-5,-8,2,5,-6,-3,-5,7,7,-8,-3,7,9,-5,7,8,7,-3,5,-1,2,-6,-6,4,-6,-6,3,9,5,10,9,8,-4,-5,10,2,9,10,2,9,-6,8,-10,3,10,9,-1,-5,7,-6,5,-10,7,-8,-2,10,1,9,-3,-7,6,-2,3,2,7,-7,-7,5,-7,-6,1,8,1,5,10,7,-10,-10,8,2,-3,8,-8,-5,-5,5,-6,7,-2,1,6,5,9,-6,-1,-2,7,-4,2,-9,2,-4,9,-6,-6,3,7,6,5,-4,-10,3,-6,-2,8,-7,7,9,-3,-9,1,10,1,-3,10,5,4,9,4,-8,7,5,7,2,-8,-10,4,-7,8,3,7,-9,-5,3,-4,-4,-6,-4,4,2,8,2,-2,7,1,7,10,-3,6,8,4,-10,-2,3,10,-9,7,-2,-4,-8,-1,-5,5,-7,3,-3,-7,9,-7,5,-10,-8,8,6,9,7,3,10,-3,8,-10,2,4,-9,6,8,10,2,4,-2,-4,-2,2,-4,6,-10,5,-8,-5,-7,10,-6,-1,-10,4,7,-10,6,10,-8,4,-7,-2,-7,9,-8,9,-1,10,-5,-3,6,-3,5,2,2,-3,-4,-1,2,7,2,3,6,5,2,8,-1,-8,-6,2,-8,-6,-10,5,8,-1,8,4,-9,-9,-6,9,-8,6,1,2,2,4,-5,-3,1,-5,-10,-4,1,2,-10,7,-9,-4,8,10,3,4,-2,-5,3,-3,3,1,-3,-1,5,-5,-8,5,-4,-8,8,9,10,-5,3,3,-7,8,-9,-7,7,-9,10,1,-10,2,-2,7,4,5,2,-3,-4,1,2,-8,-7,-1,2,2,4,9,7,-10,-10,8,10,-2,-4,8,10,-4,4,5,-9,7,1,1,-3,-8,-3,6,-8,10,1,8,5,-10,9,-4,-10,-4,-6,-10,-8,-4,5,-6,8,4,5,3,-6,-10,8,-3,-4,1,4,1,-10,-2,-4,-7,-8,6,-7,-5,1,7,-7,10,-1,-3,4,6,-8,-8,-1,-7,-10,-2,1,9,3,3,-8,3,-4,4,-10,-2,9,3,9,-8,-2,-3,8,-6,7,2,2,5,-2,6,9,2,-9,9,4,6,-8,8,-2,6,4,7,3,-2,10,9,-5,7,-6,2,4,6,9,-7,-6,10,-10,6,10,-10,-7,8,-4,5,-3,-9,-7,6,-9,-8,-5,5,-7,1,-10,-8,4,8,-2,7,4,-2,-1,8,3,-4,-4,6,-3,-1,-9,-1,-4,10,-2,3,3,6,6,-5,-9,7,-10,-9,9,-6,-6,1,6,5,-10,-3,-4,8,-4,-10,2,10,-10,2,6,10,-7,-1,-4,-10,-5,-7,3,-2,8,3,9,9,2,-1,-1,2,5,10,10,-4,-2,-7,-6,-3,-8,4,2,9,5,4,-4,-6,8,6,4,4,-3,-1,7]], dtype = "uint8")#candidate|5975|(2, 780)|const|uint8
call_5974 = relay.TupleGetItem(func_3334_call(relay.reshape(const_5975.astype('uint8'), [12, 10, 13]), relay.reshape(const_5975.astype('uint8'), [12, 10, 13]), ), 0)
call_5976 = relay.TupleGetItem(func_3337_call(relay.reshape(const_5975.astype('uint8'), [12, 10, 13]), relay.reshape(const_5975.astype('uint8'), [12, 10, 13]), ), 0)
func_226_call = mod.get_global_var('func_226')
func_228_call = mutated_mod.get_global_var('func_228')
var_5985 = relay.var("var_5985", dtype = "float32", shape = (1056,))#candidate|5985|(1056,)|var|float32
call_5984 = func_226_call(relay.reshape(var_5985.astype('float32'), [16, 6, 11]))
call_5986 = func_226_call(relay.reshape(var_5985.astype('float32'), [16, 6, 11]))
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
const_5990 = relay.const([[True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True]], dtype = "bool")#candidate|5990|(1, 693)|const|bool
var_5991 = relay.var("var_5991", dtype = "bool", shape = (768,))#candidate|5991|(768,)|var|bool
call_5989 = relay.TupleGetItem(func_3586_call(relay.reshape(const_5990.astype('bool'), [9, 11, 7]), relay.reshape(const_5990.astype('bool'), [9, 11, 7]), relay.reshape(var_5991.astype('bool'), [2, 384]), ), 1)
call_5992 = relay.TupleGetItem(func_3590_call(relay.reshape(const_5990.astype('bool'), [9, 11, 7]), relay.reshape(const_5990.astype('bool'), [9, 11, 7]), relay.reshape(var_5991.astype('bool'), [2, 384]), ), 1)
output = relay.Tuple([bop_5947,call_5952,const_5953,var_5954,call_5974,const_5975,call_5984,var_5985,call_5989,const_5990,var_5991,])
output2 = relay.Tuple([bop_5947,call_5955,const_5953,var_5954,call_5976,const_5975,call_5986,var_5985,call_5992,const_5990,var_5991,])
func_5994 = relay.Function([var_5945,var_5954,var_5985,var_5991,], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mutated_mod.get_global_var('func_5994')
var_5996 = relay.var("var_5996", dtype = "float64", shape = (3, 1, 13))#candidate|5996|(3, 1, 13)|var|float64
var_5997 = relay.var("var_5997", dtype = "float32", shape = (1350,))#candidate|5997|(1350,)|var|float32
var_5998 = relay.var("var_5998", dtype = "float32", shape = (1056,))#candidate|5998|(1056,)|var|float32
var_5999 = relay.var("var_5999", dtype = "bool", shape = (768,))#candidate|5999|(768,)|var|bool
call_5995 = func_5994_call(var_5996,var_5997,var_5998,var_5999,)
output = call_5995
func_6000 = relay.Function([var_5996,var_5997,var_5998,var_5999,], output)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6240 = relay.var("var_6240", dtype = "float64", shape = (2, 3, 4))#candidate|6240|(2, 3, 4)|var|float64
uop_6241 = relay.atanh(var_6240.astype('float64')) # shape=(2, 3, 4)
output = uop_6241
output2 = uop_6241
func_6244 = relay.Function([var_6240,], output)
mod['func_6244'] = func_6244
mod = relay.transform.InferType()(mod)
var_6245 = relay.var("var_6245", dtype = "float64", shape = (2, 3, 4))#candidate|6245|(2, 3, 4)|var|float64
output = func_6244(var_6245)
func_6246 = relay.Function([var_6245], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6356 = relay.const([[[-7,-2],[-10,-8],[5,-6],[9,3],[-6,-10],[2,-3],[-2,9],[-4,-5]],[[-5,-5],[-3,2],[5,6],[-3,-3],[-6,1],[-5,-2],[-5,-4],[-1,-10]],[[-7,3],[-6,-5],[-2,-6],[-4,6],[-3,7],[3,-2],[10,5],[-6,-10]],[[-10,10],[-10,8],[8,9],[-2,-1],[3,-1],[-5,5],[1,-9],[-7,-8]],[[3,-2],[5,-7],[3,-4],[-4,-9],[10,3],[5,3],[10,-10],[10,-3]],[[-6,-8],[-6,-3],[-2,5],[1,-2],[6,-8],[-5,-6],[2,3],[6,5]],[[-10,4],[-7,-4],[-3,2],[1,-4],[-1,-9],[-3,5],[-4,7],[2,-1]],[[-4,-6],[-1,7],[-9,9],[7,8],[-8,-6],[3,8],[10,5],[-7,4]]], dtype = "uint16")#candidate|6356|(8, 8, 2)|const|uint16
const_6357 = relay.const([[[-2,6],[-1,-1],[-1,8],[9,4],[6,-1],[5,7],[-4,9],[3,-7]],[[-5,10],[6,-8],[-4,-2],[6,2],[3,1],[9,-9],[-8,6],[10,-8]],[[-6,2],[-10,10],[1,-8],[-9,-8],[-2,-2],[7,-6],[2,8],[-5,9]],[[-5,-3],[3,8],[5,-10],[-6,9],[-7,9],[-4,1],[-6,8],[-5,3]],[[7,-4],[1,-4],[-10,5],[3,2],[-6,-6],[-7,-4],[5,-6],[-8,8]],[[-7,10],[6,8],[-8,-2],[6,-3],[-8,-1],[-7,9],[9,-2],[-4,-6]],[[5,-3],[-10,9],[-4,1],[8,4],[-6,-10],[-2,-4],[-2,-9],[9,9]],[[1,-6],[-3,-1],[7,-8],[-7,-10],[7,-5],[-7,-1],[-7,9],[-6,-9]]], dtype = "uint16")#candidate|6357|(8, 8, 2)|const|uint16
bop_6358 = relay.greater(const_6356.astype('bool'), relay.reshape(const_6357.astype('bool'), relay.shape_of(const_6356))) # shape=(8, 8, 2)
output = bop_6358
output2 = bop_6358
func_6366 = relay.Function([], output)
mod['func_6366'] = func_6366
mod = relay.transform.InferType()(mod)
output = func_6366()
func_6367 = relay.Function([], output)
mutated_mod['func_6367'] = func_6367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_6418 = func_6366_call()
call_6419 = func_6366_call()
var_6428 = relay.var("var_6428", dtype = "bool", shape = (8, 8, 2))#candidate|6428|(8, 8, 2)|var|bool
bop_6429 = relay.less(call_6418.astype('bool'), relay.reshape(var_6428.astype('bool'), relay.shape_of(call_6418))) # shape=(8, 8, 2)
bop_6432 = relay.less(call_6419.astype('bool'), relay.reshape(var_6428.astype('bool'), relay.shape_of(call_6419))) # shape=(8, 8, 2)
output = relay.Tuple([bop_6429,])
output2 = relay.Tuple([bop_6432,])
func_6435 = relay.Function([var_6428,], output)
mod['func_6435'] = func_6435
mod = relay.transform.InferType()(mod)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6436 = relay.var("var_6436", dtype = "bool", shape = (8, 8, 2))#candidate|6436|(8, 8, 2)|var|bool
func_6435_call = mutated_mod.get_global_var('func_6435')
call_6437 = func_6435_call(var_6436)
output = call_6437
func_6438 = relay.Function([var_6436], output)
mutated_mod['func_6438'] = func_6438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_6468 = func_6366_call()
call_6469 = func_6366_call()
uop_6475 = relay.log10(call_6468.astype('float64')) # shape=(8, 8, 2)
uop_6477 = relay.log10(call_6469.astype('float64')) # shape=(8, 8, 2)
func_6435_call = mod.get_global_var('func_6435')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_6483 = relay.TupleGetItem(func_6435_call(relay.reshape(uop_6475.astype('bool'), [8, 8, 2])), 0)
call_6484 = relay.TupleGetItem(func_6438_call(relay.reshape(uop_6475.astype('bool'), [8, 8, 2])), 0)
output = relay.Tuple([uop_6475,call_6483,])
output2 = relay.Tuple([uop_6477,call_6484,])
func_6496 = relay.Function([], output)
mod['func_6496'] = func_6496
mod = relay.transform.InferType()(mod)
mutated_mod['func_6496'] = func_6496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mutated_mod.get_global_var('func_6496')
call_6497 = func_6496_call()
output = call_6497
func_6498 = relay.Function([], output)
mutated_mod['func_6498'] = func_6498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_6520 = relay.TupleGetItem(func_6496_call(), 1)
call_6521 = relay.TupleGetItem(func_6498_call(), 1)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
const_6527 = relay.const([-4.367247,-5.869246,-7.053965,1.980293,2.595322,-1.898857,8.986144,-8.152508,-9.800227,-2.361242,0.960771,8.866524,-9.604350,-1.288847,6.443896,-6.055585,-5.399502,-5.776683,-0.033729,-6.198195,1.093940,-7.575514,6.496074,1.732699], dtype = "float64")#candidate|6527|(24,)|const|float64
call_6526 = func_6244_call(relay.reshape(const_6527.astype('float64'), [2, 3, 4]))
call_6528 = func_6244_call(relay.reshape(const_6527.astype('float64'), [2, 3, 4]))
output = relay.Tuple([call_6520,call_6526,const_6527,])
output2 = relay.Tuple([call_6521,call_6528,const_6527,])
func_6533 = relay.Function([], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mutated_mod.get_global_var('func_6533')
call_6534 = func_6533_call()
output = call_6534
func_6535 = relay.Function([], output)
mutated_mod['func_6535'] = func_6535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_6563 = func_6366_call()
call_6564 = func_6366_call()
func_4892_call = mod.get_global_var('func_4892')
func_4895_call = mutated_mod.get_global_var('func_4895')
var_6570 = relay.var("var_6570", dtype = "float32", shape = (1350,))#candidate|6570|(1350,)|var|float32
const_6571 = relay.const([-3.952989,-0.292283,5.414275,8.660512,3.154664,1.154248,-8.508835,-3.798897,5.973117,-8.792898,-6.430011,-3.383659,7.208140,-8.578096,-4.030265,-8.665302,-2.744314,8.260954,-5.179281,-1.286663,-4.492198,-3.641127,-4.829407,-2.297330,1.825187,1.644419,-1.818779,-7.698294,-5.435446,6.222302,2.634984,-1.043010,-9.521730,8.647873,-5.656840,8.656262,4.899719,-8.024220,-8.252682,1.102268,6.345418,-6.403252,-8.561542,4.917959,3.194894,-2.131660,-6.774835,-3.930027,-7.770111,9.401650,6.812044,1.868732,-8.888215,-9.908901,5.163931,-2.667982,-2.066497,-6.201090,-4.206359,-1.762980,-3.814005,-3.013252,9.553424,-7.902724,-1.295644,-3.616406,-4.872565,-7.147834,4.803600,2.227681,-4.182366,6.193976,-2.166742,-4.182893,6.814802,2.590284,9.943129,-5.441598,-1.937767,-5.199290,-8.975268,4.836005,-3.486392,-7.785832,-3.773709,-5.428997,5.469853,-9.667398,-6.513602,-9.285135,7.414140,8.806245,9.363096,5.915630,-0.836575,-9.668509,-3.824431,9.071224,6.207017,4.492796,-9.235633,2.597185,8.992496,8.443909,-8.040744,-2.727743,3.852285,-7.335637,4.692004,7.393846,9.677403,2.388372,8.288684,-2.317452,-1.422473,-3.889383,-6.750291,-3.159251,2.828321,3.753649,-3.541529,0.001895,0.552336,-4.122896,3.451697,3.518936,-2.867310,2.864232,2.852827,-8.549015,7.568466,-7.893726,-0.988907,6.306013,0.989393,4.437994,-4.325603,8.264335,-0.078451,1.949561,6.560073,-4.845536,9.187671,9.475176,-8.852464,-7.565246,8.102786,4.315233,5.135444,7.510997,4.672002,-1.961423,-5.078922,1.105199,-5.600632,-5.351808,9.641982,1.111610,-4.422711,-6.929041,-2.808414,-4.763647,8.842727,-7.889138,5.259104,4.831236,-5.027058,-8.768347,-6.322032,-8.701676,-7.735530,-0.645969,8.787308,-1.023846,1.476003,-4.866547,4.107300,6.839961,-0.931026,-3.759852,6.096132,-4.533192,4.021714,-5.740321,4.540400,-7.327259,-9.068665,8.003750,-8.853464,1.001489,-8.817737,-8.028574,3.652419,5.713586,6.451856,2.180100,2.092502,-0.779132,-9.822752,-6.438643,1.653038,-2.848684,-0.792017,-0.672492,0.133220,-5.631533,7.899094,-0.850015,-3.418169,3.495124,0.463360,-4.977489,-6.513740,5.798274,-2.879634,-6.984405,5.316654,3.853773,2.691482,-0.145048,1.053897,-4.843034,3.857522,4.304591,-6.366865,5.570510,9.658650,8.362368,8.090028,6.283254,-3.250521,8.579390,-5.531114,7.104707,-3.087958,-1.708947,-4.355300,8.945411,3.214727,1.257536,1.608921,6.452483,6.467728,-7.937670,-4.104361,-7.622066,-2.252746,-9.964406,-6.154847,-1.689054,0.123441,-1.784025,9.324035,-7.405892,7.410699,9.317933,-7.323367,9.706043,7.894474,-2.272375,3.829222,-2.302630,2.311353,-1.140801,2.124022,-7.003666,-5.770420,-5.456009,-4.511030,-3.992922,4.702368,-0.419456,9.485152,4.493526,-7.768146,-3.287317,-2.830702,1.540689,5.011514,6.140195,-4.116009,2.535384,-3.619105,-2.900860,-8.831872,-1.990416,-9.749724,-5.884873,5.599177,-1.786222,6.529452,2.708017,-4.961595,3.167682,5.042468,-3.914985,7.868215,-4.899765,8.636147,-4.029524,8.955865,2.458615,-1.572266,6.414831,9.686459,4.639849,-6.498027,-2.491383,4.856059,-0.410510,-7.965382,-5.495274,4.427914,-3.416392,3.273778,-2.245879,3.734807,3.465764,6.014561,7.434957,-6.978466,-7.934038,-3.889293,7.491355,-5.536964,-9.330656,-7.432000,-6.253232,8.556646,1.717341,-5.488052,5.934146,9.483679,9.413863,-8.349385,-4.230186,8.794722,0.854864,8.059217,7.662310,2.026371,4.352603,-4.619103,3.569429,-6.695973,-0.366741,-5.698493,-6.343305,-8.306757,1.988192,7.218410,-5.620047,-7.381744,-0.838044,-1.022745,9.826296,1.958291,-2.705755,7.872694,2.735078,-4.177668,-5.028621,7.647513,-2.284310,-8.278743,-0.918932,0.089957,-3.485032,6.540159,-4.533752,-5.928677,6.840094,-1.217719,5.970370,9.929162,9.926717,-2.002270,-8.111666,-8.116927,-2.866802,-7.650864,-3.903141,6.868823,0.658716,1.494084,-3.170391,-1.783288,1.657430,3.243846,-7.621278,4.654470,-9.307921,1.028687,-9.421220,-9.110545,-3.073390,8.700597,-4.483936,3.997588,4.452457,7.969913,-4.552911,7.574290,-0.912457,-1.483348,5.614724,-1.977122,4.979848,5.660668,-0.287949,-6.796101,-2.860911,8.131249,-9.222766,5.638419,-0.416700,-7.643385,-0.006283,-9.893773,-4.370598,0.470856,9.427906,-1.324348,0.350905,-0.154199,1.036815,-4.596752,-4.468996,-7.875580,-1.046802,4.646445,6.905424,2.829298,2.509916,-7.074024,-6.468964,-8.071012,-8.852293,-7.547898,-2.050325,2.256314,-6.458959,3.110931,8.772431,2.973305,7.362518,-3.295958,-7.130991,-9.735149,-2.978343,-9.105652,-2.300257,-8.439672,3.988144,-1.033525,9.339098,8.546050,6.922597,-1.567499,-2.308595,-9.007782,-7.097393,-7.896949,-2.796145,7.456460,-8.942708,4.026467,-4.254027,3.049450,8.051469,2.873135,7.355300,-3.059901,7.526440,2.946042,-6.413505,-5.970398,7.237235,-2.559274,1.034063,-9.945122,9.720544,2.492796,2.601749,5.670587,-8.446981,0.404103,9.184158,3.819027,-0.890074,-3.797076,-0.690632,-0.088708,-0.130253,-1.062965,-9.691214,5.883769,-2.283576,5.017498,4.161723,-4.686093,1.557361,4.462064,9.452642,6.938815,1.613168,8.218666,-4.316872,3.436293,-3.900042,3.421757,-7.013672,-7.972512,0.161314,-0.032199,-5.656632,-2.963711,-2.626259,-2.327361,-9.601673,-6.244063,0.852359,-3.304679,4.930607,-2.907783,7.308425,-1.519889,-2.668868,-1.593981,-1.459835,-4.973541,-3.093117,-4.667291,-1.590449,-4.555037,-9.057703,2.579563,-8.760310,-0.198461,5.054169,1.977911,-6.932007,4.073025,-3.638453,-8.180033,-3.447257,9.144697,6.377980,-4.807790,-0.289673,5.314196,6.975350,0.752885,-6.224892,8.309593,-6.244392,-5.359499,-5.621286,-1.689089,7.624788,7.170695,4.166042,-0.296688,-9.440957,1.615555,-7.840789,2.325218,7.584825,1.822562,-4.043399,4.333329,-6.906701,3.695363,4.104075,0.495287,-3.548762,7.333615,-8.710514,7.586379,-0.589661,1.006128,3.948846,-9.802104,1.305864,-8.484559,-3.192289,7.425248,7.805605,5.161308,-2.504921,0.742255,1.261400,-8.256702,2.935584,-6.202228,-6.272782,-1.655350,-8.690144,-2.819760,-6.067863,-2.995082,8.309121,2.581254,-2.294432,8.583280,-8.329438,-2.395101,0.404907,6.434507,-3.514129,-1.344762,1.428041,-0.001080,6.091821,-1.397864,3.917026,-5.763997,-2.087048,5.554110,-7.115892,8.007749,9.447421,-3.475321,-5.027753,4.433508,9.348302,-4.204961,-7.188770,7.949719,0.684942,-2.169725,-0.566291,2.984704,-5.225486,9.011254,-8.545429,2.863200,-5.316638,-6.950773,2.488247,6.637913,-2.007160,-9.558659,-6.574535,-0.807006,9.093777,-4.386607,-5.065872,-6.180237,-2.480904,5.832105,-1.073581,4.220425,2.252002,2.488562,7.336753,2.397806,-5.580580,9.189834,3.422386,0.297824,-3.748921,-3.837023,6.857416,2.494565,9.777643,-6.640039,-7.079001,-2.763332,-3.936834,-2.306178,4.688095,0.873343,8.840846,-4.403814,-3.805062,4.854478,-1.652114,2.537396,-6.428292,0.579256,-0.292858,6.996580,9.290784,-6.972482,-5.852620,-3.505791,-3.886034,8.768653,-8.688318,1.573027,3.040750,1.132962,-0.852361,-8.120606,7.050523,-0.761923,0.561593,-3.087630,-7.503302,-1.712046,-0.447245,-8.506409,-7.976417,-2.895594,7.717343,-0.354299,1.510856,-6.394753,-8.918985,-0.263911,2.800962,5.257002,0.134401,1.675374,-3.699980,-2.001972,-6.323680,-0.134754,-1.317569,1.945778,-5.274970,6.045933,2.942211,6.008898,-5.438808,-5.451660,8.482150,-2.196805,8.126215,-0.666617,-8.263577,-7.228988,7.366892,6.821386,-5.466604,5.302113,-6.555461,-1.653500,3.634504,-9.102364,4.122656,8.515027,-4.910002,3.493615,7.886997,-1.770613,-2.417841,9.178245,9.820539,-1.925478,9.801159,-7.786283,-1.579302,-5.425603,-1.259634,5.320820,4.691311,-0.397289,-0.554662,1.558902,4.943906,7.560858,4.270950,6.101203,-2.088584,-0.144140,-3.597253,9.302410,8.659349,-7.060643,-6.706127,7.280425,-0.572392,-5.408277,-9.255632,-4.479259,1.583497,9.710313,-0.004744,9.552607,-1.438354,4.160264,-2.557996,3.995961,-6.650146,8.235305,8.834799,-4.382378,8.658044,8.245783,-2.590172,8.738778,3.042292,-4.080354,-0.364386,-6.934323,3.654272,4.979841,6.911112,5.222732,-7.884299,-7.746469,-0.885597,0.958008,1.737884,1.934375,-5.261921,5.324964,9.139079,-1.756448,1.658472,6.503145,-6.354443,-0.548797,8.800806,4.532844,9.573313,-5.084153,-5.434030,1.854344,-4.874317,2.315689,7.645502,-9.748723,5.420119,-3.600826,-0.420678,4.039567,-6.390368,-2.901656,-4.994230,8.094326,8.021777,6.647698,0.592677,-2.102427,5.538039,2.163052,-7.368090,4.638901,-6.152825,2.110533,5.144294,2.796581,-1.350614,-5.723698,1.912306,-6.639731,7.408860,-6.535137,-6.337313,-6.820995,-2.023541,6.250677,1.385266,-1.241078,-4.163122,-3.911726,3.407815,-4.724101,1.434168,-9.877309,-0.319331,-8.404108,-4.455718,1.595055,3.226335,-6.764228,2.715526,-8.221020,-1.003335,-4.124188,-7.185049,0.576717,-9.205219,-6.698103,-7.437719,-0.839735,9.683972,-5.073106,6.397727,2.226172,1.525994,-6.872219,5.483674,0.912412,-8.101352,-2.205608,5.581617,-9.426639,2.017744,4.446571,7.321835,7.074815,-3.746791,-8.833157,0.882567,-5.425721,0.638256,8.823137,-1.353379,-8.640842,-5.639612,6.565498,-8.991610,3.000738,-8.869801,3.510469,-5.218620,4.409352,-1.055453,-9.310002,5.561956,-5.770539,1.782988,8.416086,8.643599,-6.057041,-8.908987,3.386653,6.180421,8.279841,3.947699,5.662353,6.212924,8.671326,-3.688130,7.335372,-8.110437,-8.600562,6.972806,9.089196,-0.435093,-9.611995,-2.411399,6.332657,-2.540046,4.512534,-2.651039,1.447064,1.920107,3.594185,-4.673279,9.924002,2.954124,-5.883966,3.824104,5.330113,-8.935121,9.051354,1.825924,-4.089208,7.692828,2.436899,3.004334,9.532262,2.583813,-8.211989,9.644332,7.531670,-0.953149,4.516594,0.608124,3.553349,-2.151034,-8.380589,5.795343,0.066298,0.186418,-3.799337,4.659275,6.222037,3.571326,-0.680999,-1.963912,7.065935,8.535652,-9.847484,9.426405,-0.569343,-5.115822,4.597731,-5.014603,-9.007789,5.201622,-4.218751,-5.744197,-2.498390,8.018044,-8.257912,-4.059567,-5.631360,-5.158453,-7.131892,-7.088187,0.118177,-5.225696,7.580437,4.353107,-0.110348,-2.038763,1.329846,-1.207934,-5.104569,-5.050616,1.298884,-1.485786,9.000812,7.434001,-4.429052,-7.902244,-8.650665,-1.762258,7.117048,-2.733551,9.345523,-4.284716,1.337478,-9.445600,5.824138,5.798989,0.610096,-2.320354,-9.528649,-3.721664,-7.071933,2.626126,8.357679,-5.675926,1.193773,-2.842448,8.413481,-5.489977,-5.924788,3.596760,2.622816,-8.977198,-0.073181,7.123843,-1.283362,-3.549437,1.284753,-7.616701,3.785867,0.773308,8.053332,7.045805,2.726012,0.072165,-9.196727,9.545687,6.130714,-6.599593,-9.023065,2.579257,-8.978840,1.105323,4.108504,-3.449734,-3.176377,4.563062,-4.380750,2.888215,-9.374185,1.879244,1.674612,0.945047,-2.197279,-1.829635,1.717133,-1.339158,8.233091,6.331609,7.077081,-1.338317,-0.790459,6.868712,-7.539678,-0.439605,6.837802,-8.018176,-7.504884,-0.591242,2.385071,3.413907,-5.794811,-3.457435,-0.865030,-3.486871,-3.507759,2.558627,-1.793951,3.629886,7.365063,-0.241019,3.940436,4.930746,-6.678415,-4.426808,4.521457,-3.812028,1.805041,2.019650,0.964995,5.861099,-8.341502,-1.522185,6.114422,-0.144304,9.173482,-3.234801,7.293132,-2.486874,9.581103,4.661880,-9.334470,-3.834552,8.764918,6.086205,3.288007,-2.951949,-0.196442,-2.897212,-9.286785,-1.123837,6.335025,-1.075630,5.124611,-5.339759,5.986184,1.967945,-4.083732,-2.469008,2.342917,-0.393593,-4.953268,6.871836,4.694093,6.069502,-4.711261,7.513717,-8.504231,-1.362077,-3.418765,-6.968758,-3.100044,2.835580,4.690592,-4.059368,-7.847190,6.135618,3.719790,3.012634,-7.199960,-5.214278,-9.231771,5.987569,7.870972,-4.424992,-7.667028,-3.026990,-1.575985,7.971164,1.833383,9.399138,-9.784893,-2.651668,9.808678,-5.139490,-4.425872,-2.231890,-4.563078,3.736455,7.666261,2.140855,-7.405920,-9.123593,-0.499190,-4.316866,-9.645103,6.753750,-8.868182,-5.743289,7.625179,-8.735825,-3.723679,-3.116600,-5.329197,-9.626200,-6.994288,7.996892,7.756041,5.381777,-5.285506,6.898137,7.690377,8.271524,2.740307,7.480624,7.210483,-8.381280,-3.630122,-3.718838,0.512700,-1.204802,7.784879,-1.185478,-0.516379,-4.119523,-9.376410,5.587436,-2.747277,1.824723,-9.328238,-4.048481,-3.707105,6.627327,7.199728,6.986200,9.746987,-3.551842,-6.183891,8.505154,2.947055,4.945007,-7.915664,8.954513,6.233344,-4.829453,-6.440134,7.859438,3.283329,4.854584,0.616337,3.085655,7.522787,4.706500,1.591642,-9.218061,-4.161016,-0.195711,-6.214991,7.905287,-5.859986,7.466953,-6.321486,-9.892689,-0.365081,-5.671697,-8.346622,-2.875011,-9.366906,6.062339,-6.314490,-0.233711,2.244001,5.832846,-8.180142,-2.977523,-9.535169,0.939211,-1.992551,5.411596,-2.048865,-9.109436,9.100714,-6.137128,-6.922046,9.660071,0.246603,3.175066,-0.045022,-3.440771,9.351636,-8.273885,-9.218129,-5.390608,7.045528,5.008124,-3.044508,-4.973488,-1.539133,6.754766,4.225743,-4.004711,-6.744280,9.292944,-3.164805,2.514890,-8.042887,-3.960896,-1.839190,-3.934170,-3.855761,6.853131,0.635109,-1.973224,-7.937545,3.386204,6.139294,-7.323377,0.461983,-9.105354,2.984594,-1.209386,2.854774,-4.321751,2.055157,8.056275,7.584457,-8.083424,3.066089,-6.227241,-3.293016,2.827791,3.635481,4.021838,9.403258,8.623592,-2.970874,5.397780,-0.626115,4.846532,-2.244478,1.121140,8.729319,-6.094638,-7.425294,-3.783773,-5.694408,-2.835167,5.231224,9.563008,-7.496495,9.536136,-8.784500,-3.733075,-2.435786,-6.546821,2.711912,-1.923251,-5.924591,0.665413,-3.784179,5.828834,9.460917,-3.527085,-7.683863,1.292499,-3.886907,1.152710,2.779736,9.197600,1.938754,-1.755627,6.401369,2.368926,-3.786951,9.154974,-4.675087,9.190081,-0.594466,-9.950277,9.393298,0.086043,-6.089677,-6.113366,0.676724,4.448044,-1.249046,2.372261,4.750177,4.066301,6.724491,-7.190603,9.467099,6.648688,1.616398,-3.488429,3.426525,7.862091,-6.976418,-3.220794,2.529915,-3.789637,0.839011,-7.787494,-2.410013,-5.949502,-9.750158,1.023943,5.542795,4.864135,-4.859527,8.504035,-8.751083,6.118880,7.622211,-7.772937,-5.639769,-2.220480,-6.903279,-0.502988,-1.367060,-9.892483,5.453084,-7.305075,-4.893388,8.425265,-4.120959,-1.139491,0.933151,8.327581,1.530794,-4.234635,8.778726,-7.591169,9.207107,-6.267508,4.734483,-6.357271,8.947056,8.362321,-6.214849,-5.727414,-5.358564,8.712127,3.366142,-4.217518,-5.498655,-6.636007,5.125259,1.479787,5.570717,-9.673486,-1.777953,9.220765,5.769975,8.012456,0.987901,-3.288707,8.859590,-6.619478,5.276962,0.617723,3.066901,5.925995,-2.345250,0.838050,-2.171386,1.241277,-6.172975,-4.893291,5.400220,2.646969,-6.539106,-8.021566,-5.273030,-4.512576,7.093299,8.184969,8.251025,6.583129,-6.608211,6.615921,-5.417804,1.443244,8.690372,1.321364,-8.496571,9.765056,-7.082780,-8.275824,-1.677881,-6.820341,-6.173617,-4.487852,-2.437567,-4.717066,-8.654868,-6.703817,-7.545509,8.187435,3.925327,-0.545003,-4.448340,-5.713670,-6.838981,8.126587,4.825314,-7.175906,4.447133,1.823075,6.842504,-0.865299,6.789244,-8.813955,8.656058,9.356401,-6.855449,-7.788631,-3.189418,-1.908172,3.116859,1.420190,6.444232,-4.247683,9.524508,4.685702,3.611206,-5.182095,-0.554655,-0.175777,3.139402,-8.578892,-1.815630,-7.072744,-2.516925,0.259864,-2.945877,-2.257170,-7.031010,-3.712762,4.595428,-8.068745,-1.370629,5.219256,-5.980278,-2.341243,-5.010340,2.020272,2.056746,3.292128,-3.869122,1.315278,9.773848,3.554374,-0.756200,5.139704,8.843103,3.822240,2.003535,-0.102907,-0.993610,6.890964,5.457895,7.865682,-4.857164,-3.375354,9.022737,8.642907,-7.855628,2.540781,-2.414211,-3.982573,-2.843758,6.512557,-3.903865,3.254248,-7.789641,6.257557,-6.012537,-0.353739,8.396864,7.963214,-2.985155,-3.859620,6.895401,-9.761057,-4.109450,2.286658,-2.242134,-8.819733,-4.818377,9.823520,-8.720703,7.880226,-8.016315,6.662807,-2.619074,-9.322502,5.530684,3.532924,-6.581489,9.279024,-8.644480,-6.689425,8.884636,-7.259682,-3.763007,5.347634,-2.527840,0.878356,-4.641753,9.984235,-4.483375,-0.855143,-4.019085,-3.322824,2.480046,9.016885,6.794187,-2.208114,7.113903,-0.037182,-9.024098,-4.252978,-8.393894,2.451402,6.017116,-6.736478,7.740054,8.433329,-4.503775,-2.371806,6.687014,-8.475713,5.468040,-9.470722,2.836168,5.004663,-1.668172,-1.669619,0.987111,4.522475,-5.249592,-6.338633,-3.728773,5.565882,-2.112881,-2.244798,-8.576839,-2.981473,4.738137,-5.451138,4.355922,3.742892,1.779977,8.068444,8.983415,5.261549,-0.375773,7.646992,-7.521387,7.030592,4.119535,-9.043086,-2.722015,4.690555,3.808202,-2.810208,0.147678,-3.585335,-9.802765,-5.014757,5.099226,7.509101,2.011771,-8.262189,-0.619639,-5.651412,-3.480332,7.552849,7.031788,-1.845358,-7.828182,-1.540614,-9.835266,-1.868861,-7.072695,3.832336,3.548950,2.605858,5.344538,-6.444089,5.568820,0.562457,7.334373,7.938606,-5.036300,-7.352944,-4.882224,-2.116057,1.736019,0.907056,6.675710,1.860965,-0.405225,-8.238620,0.263559,0.003287,6.968247,-0.940229,8.321274,-4.449585,6.490762,-5.633532,1.924876,9.417207,0.506191,-5.938105,3.768249,1.984400,-1.543207,6.180197,-8.019759,-4.325640,-3.733641,8.705522,-4.924850,5.794708,-1.282139,-2.709801,-5.447011,-1.444685,-0.382970,3.173044,5.740657,9.168869,-4.045799,3.061863,8.551839,-1.118936,-9.357216,1.460631,8.610322,-8.637561,-0.333208,4.938025,-1.158183,6.982697,-6.071164,-6.269928,5.435812,2.881826,8.411691,6.902586,3.788008,-3.316017,4.917247,-8.544486,-5.445423,-0.148969,9.610505,8.739299,2.842034,9.843608,5.989686,8.384870,0.560678,-3.560346,7.816948,-8.520755,-3.431079,-3.954010,-1.224458,-4.053330,-5.923364,-2.657425,3.430586,2.413453,-1.086485,-5.924367,3.417450,-6.938255,5.406688,2.775750,-2.374373,8.895362,-8.378544,-9.007329,-7.335754,9.787652,6.135686,1.708318,1.213601,-7.734374,5.325652,-2.104341,-7.810451,3.615541,6.718061,8.393528,-9.862195,-3.457666,-2.083816,-8.775709,-7.897281,0.327842,3.665963,-2.557898,-2.628342,-1.088153,2.149420,-5.485210,7.887776,8.880695,-7.643987,3.526700,7.194305,7.441807,-5.270985,7.384898,7.210566,2.704796,6.593054,2.072233,-4.122119,3.927286,-6.390553,8.733761,9.539057,3.552556,5.348985,2.712400,-4.203778,7.626082,-1.195649,4.775561,4.738701,-2.457921,-0.538477,-6.327508,0.304134,4.575967,7.694126,1.074632,6.223831,-1.058330,4.646267,-2.767549,-7.853308,6.396830,-9.372138,-3.730066,6.796251,-0.068604,6.111014,-4.405731,-4.062099,-0.359288,-7.639146,-1.659281,-5.796828,2.385831,-5.859846,-2.740874], dtype = "float32")#candidate|6571|(1848,)|const|float32
call_6569 = relay.TupleGetItem(func_4892_call(relay.reshape(var_6570.astype('float32'), [1350,]), relay.reshape(const_6571.astype('float32'), [12, 14, 11]), ), 4)
call_6572 = relay.TupleGetItem(func_4895_call(relay.reshape(var_6570.astype('float32'), [1350,]), relay.reshape(const_6571.astype('float32'), [12, 14, 11]), ), 4)
var_6575 = relay.var("var_6575", dtype = "bool", shape = (8, 8, 2))#candidate|6575|(8, 8, 2)|var|bool
bop_6576 = relay.equal(call_6563.astype('bool'), relay.reshape(var_6575.astype('bool'), relay.shape_of(call_6563))) # shape=(8, 8, 2)
bop_6579 = relay.equal(call_6564.astype('bool'), relay.reshape(var_6575.astype('bool'), relay.shape_of(call_6564))) # shape=(8, 8, 2)
output = relay.Tuple([call_6569,var_6570,const_6571,bop_6576,])
output2 = relay.Tuple([call_6572,var_6570,const_6571,bop_6579,])
func_6582 = relay.Function([var_6570,var_6575,], output)
mod['func_6582'] = func_6582
mod = relay.transform.InferType()(mod)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6582_call = mutated_mod.get_global_var('func_6582')
var_6584 = relay.var("var_6584", dtype = "float32", shape = (1350,))#candidate|6584|(1350,)|var|float32
var_6585 = relay.var("var_6585", dtype = "bool", shape = (8, 8, 2))#candidate|6585|(8, 8, 2)|var|bool
call_6583 = func_6582_call(var_6584,var_6585,)
output = call_6583
func_6586 = relay.Function([var_6584,var_6585,], output)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_6669 = func_6366_call()
call_6670 = func_6366_call()
output = relay.Tuple([call_6669,])
output2 = relay.Tuple([call_6670,])
func_6707 = relay.Function([], output)
mod['func_6707'] = func_6707
mod = relay.transform.InferType()(mod)
mutated_mod['func_6707'] = func_6707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mutated_mod.get_global_var('func_6707')
call_6708 = func_6707_call()
output = call_6708
func_6709 = relay.Function([], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_6718 = relay.TupleGetItem(func_6533_call(), 1)
call_6719 = relay.TupleGetItem(func_6535_call(), 1)
func_2603_call = mod.get_global_var('func_2603')
func_2606_call = mutated_mod.get_global_var('func_2606')
const_6724 = relay.const([-1.245652,-1.881638,0.986512,5.089788,-6.007366,1.450618,-2.197604,-7.099785,-4.376483,1.954859,-5.023347,-4.302416,-5.406647,2.554408,8.768282,3.219106,3.838019,9.671434,5.496065,0.168072,-9.007749,-0.501946,-8.001829,9.452925,7.427509,3.286381,-2.162108,0.786182,3.271582,-7.851626,3.429217,-0.020391,-9.287084,-2.102984,-9.534857,1.929171,-7.784036,-9.944252,-9.132402,1.943142,-7.484529,3.099183,-7.107241,-3.195575,3.873705,-0.723108,-8.153652,9.588973,-4.440068,-1.687642,-2.589154,8.359619,4.532210,4.539833,0.222275,5.458555,8.436929,-8.516528,-8.371131,2.550631,-8.419246,-7.264894,-7.639142,1.290715,3.953437,-2.940061,7.866220,-5.633988,2.165376,-2.253765,-4.831336,-9.908154,-9.303771,-0.464947,4.249009,-2.280848,1.676331,-1.589382,-2.118281,7.842565,-5.788900,4.990499,2.052467,-0.479921,5.991307,-3.189699,4.019319,7.088041,5.574683,-1.969809,5.902886,-0.653243,5.754067,0.810007,-0.573882,-2.856080,-3.066346,-2.855617,8.262085,-5.222822,0.731147,9.318288,4.736147,-9.453383,-5.713444,-3.694132,3.330262,-4.220523,7.382149,2.884583,-8.921848,-0.999092,0.038269,3.743760,-3.033180,-3.311156,-5.972314,-4.594874,-6.179884,-4.058060,6.653725,8.535377,-7.407306,4.782083,9.683881,3.321959,-0.719055,-0.339986,0.414815,8.424669,6.797717,8.794143,8.838149,9.016683,1.791494,-0.780715,-2.767200,4.705821,9.328246,1.357222,7.977217,5.997231,-7.887632,-1.702500,5.934316,5.115960,1.583053,-5.973587,-3.744467,-9.342715,8.559579,-0.494127,-7.626101,-2.916614,1.233484,-3.925390,4.312157,-4.058679,4.771342,7.958567,-1.173716,1.682998,8.912758,-4.685539,-8.773090,8.972958,5.049949,2.206681,-2.506337,-5.521126,6.579654,-1.314449,-2.231843,7.698083,7.259336,-7.080468,9.366604,0.049422,0.848349,9.606814,6.038061,0.665737,-7.798913,-5.351392,6.284759,-0.026140,-0.214409,3.699658,-7.393280,-4.121925,7.180950,2.656492,8.614720,9.535788,3.883699,-6.413952,-7.114902,0.035360,-8.679209,9.865866,-3.795977,4.846709,-8.906420,4.853929,7.597740,6.798680,-1.716823,1.049966,5.607724,-1.727588,8.912209,0.339532,0.796260,9.169843,7.281427,0.054259,-6.373306,-1.835655,7.122828,0.539974,1.482364,0.249111,-8.028277,0.934819,6.418072,-7.224989,-8.255163,-3.151968,-1.635643,-6.377831,-6.893387,-8.081054,-9.506624,-4.144745,-5.310251,-2.481960,-3.901198,-3.142127,-7.579772,-5.250203,2.621157,7.892406,3.958770,0.538275,7.066298,2.622481,1.892968,-1.783268,-5.677059,6.007723,8.496766,-6.713350,6.071609,-2.874847,5.990671,-0.392701,4.851025,-4.586185,6.418094,-6.866604,7.611789,4.633873,9.383605,-6.750339,-2.425627,3.377614,8.812019,9.362853,-2.348185,6.107468,-9.174578,-3.268526,4.444985,-1.317239,8.926973,8.275262,-4.745223,5.907429,-6.690277,5.518270,-6.454397,-1.454294,9.747185,-9.272858,7.967234,1.318822,6.048638,9.140549,-6.841300,-0.973865,8.059386,4.157926,-9.955028,2.852484,-8.416558,0.243434,4.847473,9.720666,3.318980,-0.901624,6.187576,-8.393861,-3.751966,5.827270,-4.878876,-4.358355,5.889062,8.171918,-7.645607,-1.719275,-1.831748,3.847559,-7.045997,-7.991443,1.025166,-5.147049,-3.101610,4.058923,6.677946,2.817410,-9.826554,8.573459,8.086469,7.746294,2.786171,9.597950,4.388996,-9.070800,0.422869,3.554909,2.748561,6.790043,8.200720,-0.060525,1.388924,-5.032782,0.099145,9.303005,-7.328533,5.127304,-4.107132,3.140290,4.360644,4.887485,-6.595119,9.573494,3.924218,5.793717,-0.388133,3.663334,-8.643009,1.004622,9.886650,-4.079393,-6.162807,5.347528,-7.176019,-4.987268,-6.999976,-3.015820,9.743140,1.813746,-6.527175,4.141183,-8.515366,-1.637503,-6.067145,5.492823,-6.855318,9.099904,7.772498,-9.049455,-2.944474,7.681535,-3.926051,3.814202,-3.172448,-0.645274,-3.305953,6.859303,-1.750963,8.648757,9.862515,-0.168708,-2.400548,-4.466940,4.207902,-3.231990,-4.145909,-9.003779,7.830034,-0.479378,-4.796724,7.221747,-1.936970,-8.890057,-6.260090,9.324775,-0.019562,-7.220468,1.555797,-6.904112,8.696504,-4.670571,-8.763943,-0.072857,0.349173,9.838772,-6.144760,-2.759944,3.022634,5.714744,-0.482139,-0.647289,6.113526,4.630728,1.001876,6.813082,-7.857076,-8.335824,-0.193543,7.385239,9.725532,-3.372666,0.409370,-8.193724,6.132246,-5.494833,-8.456012,-7.837437,4.779230,0.831389,8.951018,5.885624,-6.912490,-7.674040,6.646786,-9.998170,7.269005,-7.609792,5.186075,6.821462,-9.535944,-4.114180,-9.630188,-8.092735,3.371220,0.268849,-9.557068,-4.242896,-3.170730,-4.875323,-5.830699,7.457876,7.458895,-5.603542,-4.183653,2.611759,-3.660790,-4.261318,-0.945778,-6.923720,-3.446699,-5.442242,8.740197,3.335622,7.382334,6.568277,9.950015,9.986436,-8.129849,8.840215,-8.058249,0.624816,6.298568,4.639736,1.399638,3.441729,3.656884,-6.744698,-6.270484,2.702649,6.377434,-2.989892,5.788104,4.201965,8.520770,-4.824669,7.384209,-0.472552,1.272378,-0.496602,-5.912606,-1.459048,1.443401,-0.037724,0.614275,-8.961878,-3.661644,2.092296,-0.487380,2.895993,2.527243,8.001396,5.500505,0.832404,-4.119019,6.205387,4.943870,-3.941043,7.531040,1.846593,-8.172360,8.143388,-7.155203,-9.225860,-1.452740,-5.209433,-2.980578,-3.496082,-5.499736,-5.166720,-6.526307,5.141595,-7.698915,-0.603890,-2.712056,-5.051726,6.489698,0.322702,-0.204760,9.778467,2.939796,-2.718835,7.858351,8.512960,6.478326,-0.946347,-9.507160,2.198227,-5.646069,-2.881290,1.855975,9.695579,-6.664462,-1.971482,5.738640,2.478790,-7.140971,-1.268464,0.924373,0.197866,8.423384,-4.561903,6.867702,-1.940550,6.191452,-5.496179,1.556201,-7.645236,-7.975198,-0.080459,-8.326652,-4.042447,-9.957260,-5.456051,-6.846879,-5.904218,-5.121112,3.538086,-0.259105,8.664909,-2.973854,1.366369,4.055997,-0.929290,-9.656311,9.383507,-9.650798,8.000593,-1.221169,-8.623611,7.815124,1.596489,3.697319,3.527883,-8.912958,-0.564544,-2.467722,2.512756,7.042112,6.820317,-8.257148,-8.534250,-5.159180,8.569002,1.443814,-8.388486,-1.977178,-3.217386,-8.607559,-3.649728,-0.146266,-3.346444,-8.729164,9.880860,5.021937,5.660357,4.073861,-8.636926,-3.764149,3.944575,-3.477314,-9.202614,6.352311,-4.903452,5.184485,-7.043338,0.821690,-4.900884,-0.688811,0.362173,0.506681,-1.972194,-4.058923,-8.969627,-9.994310,6.618121,5.101307,-3.623458,-8.708904,6.470681,9.300381,-5.285214,-6.149672,-0.588165,-7.282394,-7.850386,-1.138937,-2.208117,3.308569,1.640180,-3.424624,-3.016965,1.290644,-5.694445,-5.530880,8.116927,-1.747134,-3.094452,-5.975038,0.931522,7.312504,-7.876916,-5.066788,-8.606036,-0.668893,-0.858907,-5.170658,-5.038437,6.988821,-3.111906,-1.109775,4.374963,4.995451,5.746407,-1.322333,-5.850981,-0.455099,8.580164,6.034965,2.250613,-8.959381,1.527145,-2.747270,-3.062108,-8.889530,5.227202,-1.308019,6.257632,7.644094,7.278741,-4.498000,7.885349,7.194526,1.663211,-8.775691,-8.104148,-6.966189,-6.952647,8.042858,-0.215871,7.468420,6.839343,-5.191780,8.956842,0.343439,2.337729,-0.306802,3.046910,-0.837103,-4.114665,0.978740,6.038434,-8.369307,-6.158615,-6.580643,-0.414966,5.464031,4.816643,-9.820830,7.789728,1.882998,9.543598,1.938750,7.756856,-3.074402,-6.491308,-9.488266,8.982494,6.324886,5.509034,6.556877,2.764703,3.312293,-0.537472,6.635205,1.856798,2.480942,-9.929847,0.607458,-6.945364,-1.706361,2.974819,-6.195998,8.546358,5.875465,7.203839,-9.876566,4.437817,6.330282,-0.757097,4.456685,6.690208,-5.117784,6.133417,-5.133901,0.603780,-0.184169,7.207787,-1.677612,0.379958,4.836000,-6.695668,3.142074,3.459774,9.991915,-1.741464,-1.254470,9.857086,4.407967,-4.581962,-3.598399,-7.121375,0.319460,7.378101,9.635302,9.639726,6.471214,-9.017938,7.280838,4.652201,6.365524,6.546158,-4.434917,3.706507,4.216563,6.224384,0.264371,-0.030346,6.474971,-4.729310,-2.978149,-0.415616,0.147085,5.598815,-0.433373,-5.865408,-2.099030,4.412773,-8.852665,-2.148392,9.969581,-6.737074,-8.643763,8.912726,-9.277274,-3.449573,5.624112,8.342768,4.645843,8.832368,2.439933,-6.474229,6.542408,-7.941465,-1.894158,4.865029,-5.253759,-9.640513,-6.741262,6.847005,-7.530155,-1.606877,-9.231836,-2.997282,-3.784390,8.595965,7.553780,5.313851,-6.404840,6.814684,-5.887710,-1.117135,-0.658183,4.141541,-3.291715,7.076896,-6.577110,-0.229151,2.033015,1.845171,-9.712345,-3.153178,-3.838331,-4.523848,7.008758,2.466492,-6.826977,3.454203,-0.965164,8.318459,6.031065,3.923161,-4.669006,-3.378324,5.697397,4.444771,-4.338284,6.348656,2.082801,0.499289,2.071509,4.795480,-4.137831,-4.824072,4.612190,4.918265,8.983151,3.954092,-1.853241,9.405175,3.291788,1.689068,-4.978227,-2.294895,-5.572761,7.974689,-3.816529,4.193907,6.362237,4.173669,-7.443753,3.733719,-6.720944,7.274605,-8.496412,-9.591065,-4.262932,7.828318,-2.245013,-8.332729,-6.797024,5.445228,-4.105131,4.927489,-5.670717,2.090718,-2.429527,-6.147438,4.165199,4.667574,2.933122,5.053288,-6.529217,-4.337807,-3.644500,6.132265,-8.827495,8.385723,-2.707326,-5.337734,0.495620,4.218778,-9.976536,-1.987201,4.145741,2.460088,5.665183,-2.847090,-4.118362,7.755544,-1.902934,0.917617,1.780574,0.361396,6.446968,-7.888190,1.062485,-4.156876,-9.446617,2.223962,6.029478,-5.736089,5.796175,-1.960870,7.483991,-7.595225,-0.641769,0.164497,-8.699534,2.979150,-2.323165,6.080129,8.121371,-5.661166,-7.408003,-5.634059,-0.624152,5.744957,7.419209,9.404800,7.906454,-4.847785,5.160234,0.765328,3.512025,-3.248641,-8.570311,2.102798,7.765393,7.300578,-6.402318,7.913152,-5.040121,-9.062167,-4.825229,4.419805,-5.077616,-7.882248,7.068138,6.607722,-8.739898,-1.843487,3.487223,1.060630,6.968352,7.226332,-6.193742,3.860849,9.581093,-3.287720,8.926560,6.496561,-6.574350,-4.128787,1.820599,-4.728783,2.107007,-2.562121,-1.951457,4.376623,1.776990,5.199642,-8.642632,-0.931601,0.615780,4.984963,-5.752205,-1.538933,-5.639577,-7.338378,-4.400323,-7.343789,-5.285797,7.973173,-2.595136,-1.938790,1.576747,0.930486,-5.198051,8.093102,-7.832331,4.273366,2.628342,2.474937,-5.052148,8.743017,-8.446196,-1.635783,-2.632262,-4.888172,-1.759489,-9.015227,-4.332061,6.470284,-3.656345,-5.886124,-6.985272,4.653557,5.823315,6.860004,3.608639,2.010238,-6.414715,-1.880129,4.775630,9.878914,5.005484,8.046342,6.097862,6.139148,6.010776,9.203299,2.911604,0.094422,4.148730,-7.173836,3.965870,7.925315,3.239611,-0.051483,-2.771799,-2.911916,-6.826505,3.033083,2.222894,3.914132,6.561115,-8.929441,6.166536,8.953200,-8.524211,2.900626,6.725799,-7.022659,-8.529467,6.988432,-6.626767,8.105976,5.938858,1.853540,7.974165,3.591413,8.965871,3.940077,4.921747,4.848737,-2.283816,9.068958,7.327555,-8.696272,7.746807,-5.843785,4.266896,-8.467015,8.988864,9.894425,-6.547959,6.812201,-6.949021,-1.650850,4.946203,-8.308660,2.884360,-5.296846,5.914239,-4.809201,-6.581018,-5.273857,-0.018229,5.876771,-0.310491,-4.491539,1.790873,-1.236376,-8.908038,-4.609633,7.379954,5.433146,-4.560443,0.031892,-2.491053,-8.215753,5.497902,4.333028,6.148038,2.902091,8.094747,-3.476124,1.752295,4.222822,-7.592194,3.137897,-0.516713,-3.079199,-5.960953,-8.331772,1.846789,-8.163205,0.704770,4.803980,-0.479148,4.658097,-6.503738,-4.160363,-5.218971,-2.340933,5.081947,-7.882023,-9.910654,1.336651,1.437549,-4.196018,-7.318011,7.954625,-3.095603,9.099774,0.328199,-2.166637,-9.719173,0.257014,-9.311003,1.412930,2.146356,5.683126,-6.577358,3.256172,-4.609053,2.354278,-6.528230,5.179131,6.665074,1.930365,9.922220,-0.715657,-6.909100,-3.465923,5.851346,2.966093,-1.399208,2.808448,6.516552,-7.371018,-8.928159,-3.178854,-7.983523,2.944240,-8.958704,-6.671973,-8.111804,-5.041551,-6.641034,-8.336482,-9.267195,-7.838388,-5.248176,-3.668487,-0.382692,-8.850717,-0.239331,4.897541,-1.276127,-5.215219,8.793389,-1.931115,2.084634,9.954229,1.873326,-8.865308,0.799539,-2.112034,-8.931372,3.315933,8.547509,5.766920,-2.900136,-7.147556,9.604213,-2.765949,2.610934,-5.799118,7.913790,-6.916209,1.319582,-5.694823,-6.870945,4.278491,5.643764,6.041639,-1.407831,-2.174156,-4.609920,4.579836,3.837480,-0.271670,-3.380292,-8.021741,-4.770046,-9.292146,0.601457,-6.050328,-1.731268,-5.749162,-6.420224,-6.984999,-4.717726,-2.974047,-5.820014,-0.058239,4.414802,-0.971378,1.604685,2.152271,-7.983250,-1.246807,-5.603431,8.947949,-3.866799,6.964350,7.894527,4.214216,-8.437007,-1.647705,5.006245,5.589395,-0.210475,-9.536286,-8.649793,2.728586,7.632179,-8.148102,1.027829,-2.849029,5.788493,-1.439178,-3.418195,-8.009060,6.717835,1.739156,5.216899,5.131201,-3.868771,6.453947,7.438556,5.651637,-4.013069,9.658174,8.151113,5.159908,7.317966,-8.156622,5.436893,-4.390795,7.230262,6.909881,-7.091067,-2.328763,-4.566468,6.429980,6.198558,2.882427,-5.529348,0.217007,-0.255635,-4.078706,-0.157032,9.780881,9.768935,6.952016,6.808960,5.791639,3.903598,8.879675,-7.591540,-9.960547,2.600718,1.547142,-2.259068,-3.369850,-9.120616,-2.570824,5.192268,-6.783751,9.066851,6.857552,9.873229,1.964327,4.846849,-2.027001,2.406890,8.421031,-0.173969,4.300343,5.861162,-2.303733,-5.568003,-8.688915,-4.196769,0.301998,-2.695462,2.427068,7.050716,4.969733,7.821397,-1.627293,-0.870077,6.127455,5.000969,2.370430,-4.194409,-3.668731,-6.154605,-6.998407,8.621998,-1.370869,0.920736,4.814149,-5.948969,3.469314,2.120305,9.629713,1.500298,-9.938670,4.542738,3.646549,3.863795,-0.499802,-0.012737,3.019773], dtype = "float32")#candidate|6724|(1350,)|const|float32
call_6723 = relay.TupleGetItem(func_2603_call(relay.reshape(const_6724.astype('float32'), [15, 9, 10]), relay.reshape(const_6724.astype('float32'), [15, 9, 10]), ), 0)
call_6725 = relay.TupleGetItem(func_2606_call(relay.reshape(const_6724.astype('float32'), [15, 9, 10]), relay.reshape(const_6724.astype('float32'), [15, 9, 10]), ), 0)
func_1247_call = mod.get_global_var('func_1247')
func_1250_call = mutated_mod.get_global_var('func_1250')
var_6728 = relay.var("var_6728", dtype = "uint8", shape = ())#candidate|6728|()|var|uint8
call_6727 = relay.TupleGetItem(func_1247_call(relay.reshape(var_6728.astype('uint8'), [])), 1)
call_6729 = relay.TupleGetItem(func_1250_call(relay.reshape(var_6728.astype('uint8'), [])), 1)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
var_6731 = relay.var("var_6731", dtype = "uint8", shape = (1560,))#candidate|6731|(1560,)|var|uint8
call_6730 = relay.TupleGetItem(func_3334_call(relay.reshape(var_6731.astype('uint8'), [12, 10, 13]), relay.reshape(var_6731.astype('uint8'), [12, 10, 13]), ), 0)
call_6732 = relay.TupleGetItem(func_3337_call(relay.reshape(var_6731.astype('uint8'), [12, 10, 13]), relay.reshape(var_6731.astype('uint8'), [12, 10, 13]), ), 0)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6745 = func_6244_call(relay.reshape(call_6718.astype('float64'), [2, 3, 4]))
call_6746 = func_6244_call(relay.reshape(call_6718.astype('float64'), [2, 3, 4]))
func_1854_call = mod.get_global_var('func_1854')
func_1858_call = mutated_mod.get_global_var('func_1858')
var_6750 = relay.var("var_6750", dtype = "float64", shape = (1950,))#candidate|6750|(1950,)|var|float64
call_6749 = relay.TupleGetItem(func_1854_call(relay.reshape(var_6750.astype('float64'), [15, 10, 13]), relay.reshape(var_6750.astype('float64'), [15, 10, 13]), ), 0)
call_6751 = relay.TupleGetItem(func_1858_call(relay.reshape(var_6750.astype('float64'), [15, 10, 13]), relay.reshape(var_6750.astype('float64'), [15, 10, 13]), ), 0)
output = relay.Tuple([call_6718,call_6723,const_6724,call_6727,var_6728,call_6730,var_6731,call_6745,call_6749,var_6750,])
output2 = relay.Tuple([call_6719,call_6725,const_6724,call_6729,var_6728,call_6732,var_6731,call_6746,call_6751,var_6750,])
func_6762 = relay.Function([var_6728,var_6731,var_6750,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mutated_mod.get_global_var('func_6762')
var_6764 = relay.var("var_6764", dtype = "uint8", shape = ())#candidate|6764|()|var|uint8
var_6765 = relay.var("var_6765", dtype = "uint8", shape = (1560,))#candidate|6765|(1560,)|var|uint8
var_6766 = relay.var("var_6766", dtype = "float64", shape = (1950,))#candidate|6766|(1950,)|var|float64
call_6763 = func_6762_call(var_6764,var_6765,var_6766,)
output = call_6763
func_6767 = relay.Function([var_6764,var_6765,var_6766,], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_6769 = relay.TupleGetItem(func_6533_call(), 2)
call_6770 = relay.TupleGetItem(func_6535_call(), 2)
output = relay.Tuple([call_6769,])
output2 = relay.Tuple([call_6770,])
func_6811 = relay.Function([], output)
mod['func_6811'] = func_6811
mod = relay.transform.InferType()(mod)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mutated_mod.get_global_var('func_6811')
call_6812 = func_6811_call()
output = call_6812
func_6813 = relay.Function([], output)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_6832 = relay.TupleGetItem(func_6533_call(), 0)
call_6833 = relay.TupleGetItem(func_6535_call(), 0)
output = call_6832
output2 = call_6833
func_6837 = relay.Function([], output)
mod['func_6837'] = func_6837
mod = relay.transform.InferType()(mod)
output = func_6837()
func_6838 = relay.Function([], output)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_6845 = relay.TupleGetItem(func_6811_call(), 0)
call_6846 = relay.TupleGetItem(func_6813_call(), 0)
func_2674_call = mod.get_global_var('func_2674')
func_2677_call = mutated_mod.get_global_var('func_2677')
var_6880 = relay.var("var_6880", dtype = "float32", shape = (1280,))#candidate|6880|(1280,)|var|float32
call_6879 = func_2674_call(relay.reshape(var_6880.astype('float32'), [5, 16, 16]))
call_6881 = func_2674_call(relay.reshape(var_6880.astype('float32'), [5, 16, 16]))
func_5994_call = mod.get_global_var('func_5994')
func_6000_call = mutated_mod.get_global_var('func_6000')
var_6893 = relay.var("var_6893", dtype = "float64", shape = (39,))#candidate|6893|(39,)|var|float64
var_6894 = relay.var("var_6894", dtype = "float32", shape = (1350,))#candidate|6894|(1350,)|var|float32
var_6895 = relay.var("var_6895", dtype = "float32", shape = (1056,))#candidate|6895|(1056,)|var|float32
var_6896 = relay.var("var_6896", dtype = "bool", shape = (768,))#candidate|6896|(768,)|var|bool
call_6892 = relay.TupleGetItem(func_5994_call(relay.reshape(var_6893.astype('float64'), [3, 1, 13]), relay.reshape(var_6894.astype('float32'), [1350,]), relay.reshape(var_6895.astype('float32'), [1056,]), relay.reshape(var_6896.astype('bool'), [768,]), ), 0)
call_6897 = relay.TupleGetItem(func_6000_call(relay.reshape(var_6893.astype('float64'), [3, 1, 13]), relay.reshape(var_6894.astype('float32'), [1350,]), relay.reshape(var_6895.astype('float32'), [1056,]), relay.reshape(var_6896.astype('bool'), [768,]), ), 0)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
const_6945 = relay.const([3.883312,-2.205363,1.628342,3.510687,-0.257623,5.518657,-8.564843,1.837319,0.306196,-5.123993,3.096894,-7.588857,-0.068411,-9.055832,6.225745,2.286023,-8.706848,5.520789,5.098149,-9.168708,-0.752160,4.506709,9.070267,8.797035,6.157461,-6.369573,-0.409974,7.167444,-8.382937,8.334524,6.992995,-0.013190,-7.661271,-2.947647,-2.794974,2.066338,-9.401188,5.610880,7.341733,1.732876,5.528695,-5.852588,-9.950707,-9.012000,2.765621,-3.013722,8.314424,-9.102667,-0.089601,6.717947,6.364188,4.446130,-6.327038,3.424604,-9.020390,-3.326150,-5.465765,9.496598,-3.056584,0.551235,9.170247,-7.391239,2.375202,3.495911,3.874053,-9.285288,6.220852,9.040531,8.046963,-9.751276,8.625691,7.183036,0.423300,-1.790529,-8.259359,9.252974,1.500758,-8.535971,9.797507,-9.101789,4.523312,0.426723,-9.698949,-8.084508,-8.027646,6.487436,6.102262,7.886511,-5.317445,-7.007934,-1.559277,-9.081769,3.102847,-9.600446,-1.472080,-8.564362,1.324639,2.086071,-5.687819,1.324487,-9.451518,-1.692474,6.870142,-8.305892,6.046160,1.242850,-2.433588,0.698711,-9.554434,-4.319880,-4.948107,-1.894762,8.553819,6.280886,9.328217,-8.532680,-2.760043,0.465852,-0.334816,8.401797,-3.470174,5.622334,-6.821093,2.355582,-7.323591,-7.568823,-2.474896,3.924361,-3.293977,5.688520,8.933214,1.723698,-7.720377,-8.078405,-8.083523,-5.446140,-9.970997,2.227478,-4.017455,1.945637,2.040185,5.507765,8.637818,9.371096,6.342550,4.741971,-6.055010,-7.161643,-1.781928,6.417639,-0.172459,7.288661,-0.392550,-1.416821,2.935972,2.090275,2.307471,-5.965070,3.727738,-4.791659,-1.635925,-9.608189,-5.769568,3.238355,8.951573,1.587961,-5.814361,-1.477454,5.917927,4.713787,-4.173153,2.689158,0.753674,-0.015970,6.939179,-0.991374,1.560091,-6.671299,5.174964,-8.318565,4.396597,0.908572,-1.536046,-7.848331,-9.456414,1.494421,-0.181985,-0.388897,-0.332401,2.295668,8.700824,-2.991817,-0.721869,-6.807988,-9.447950,-1.747401,-0.102968,-7.884529,2.536925,-5.124982,-2.982888,-4.194672,9.573038,2.555527,-2.091170,4.552566,-0.594457,-0.428119,1.225891,-4.485376,3.735441,7.185462,-5.914537,-1.770668,-1.238521,3.760488,-0.574596,9.521861,-7.253582,-9.030824,7.664126,-7.660528,1.028148,-5.998880,5.303867,-0.555537,5.374602,-4.032017,7.464459,3.916712,-9.573031,2.799889,7.293138,-1.054030,7.930747,-3.533426,-2.421433,-3.697681,2.126981,-9.906189,1.905218,5.842149,-1.907570,2.517774,-2.427355,9.247663,3.278515,-9.358559,-1.577106,4.889965,9.002051,-9.108410,-4.780687,1.088209,-7.350537,4.637069,-7.017105,-1.333568,-5.573235,1.377205,1.243098,5.954428,2.797883,4.642692,-0.715836,1.749511,-2.787897,-5.833595,-3.609273,-9.060913,7.721636,-1.519276,-9.071678,3.390610,-6.559960,2.856345,8.471424,9.181882,-3.034707,-2.158440,8.613097,-8.343235,-9.955260,-8.145515,-3.074326,5.442377,-5.781151,-2.186272,-4.261633,-2.571721,-7.141542,-2.705180,-9.972333,-5.489429,-7.766420,-1.260230,-7.815818,9.561697,2.680618,9.206715,-3.258266,1.009260,-7.919629,2.295842,8.163938,-4.706920,-9.942328,-5.298189,-5.834864,0.242368,7.721338,-8.574269,4.129984,-8.938843,4.026380,-3.182779,-0.054209,2.928457,8.360265,-7.116001,-1.114583,-4.986873,0.172643,0.203626,9.042737,1.084403,-9.523039,-7.983998,9.400046,-8.349240,-8.422211,1.654666,6.083691,-2.932750,2.369402,1.033457,6.286977,-9.558936,-9.448224,-3.466640,2.277813,0.649536,9.902803,9.510316,-0.344353,4.113484,-0.245609,-9.656762,6.770449,6.496528,8.951121,-2.219266,-4.366470,6.117071,0.818473,7.171844,3.689431,-2.205783,-8.104197,-5.070089,-6.214482,-4.687835,-6.124163,-5.691547,6.257933,-1.166054,-2.906455,8.552740,-3.381933,-9.619234,-4.445267,-7.857993,-3.078563,-9.155361,-2.546430,9.698630,-5.878339,4.576305,-4.772033,2.856383,1.610324,-7.676151,-7.478239,7.116572,3.983300,-3.016768,7.823763,6.243551,-5.771576,-9.355464,-8.559562,0.431832,0.061986,7.544611,-1.928557,3.353204,9.626929,8.699639,6.757274,-3.203150,-2.130298,-0.881217,4.071620,0.082970,6.522853,-7.574138,-8.520767,9.081889,-5.884185,7.769020,4.176149,7.925056,0.425583,-2.798306,6.828279,3.788756,-1.023310,0.131793,6.041041,7.948533,-3.721779,4.439047,7.903256,1.558239,0.224945,-6.926623,0.072391,4.945367,-5.367376,-1.737312,-3.180142,-9.264370,2.269897,-8.839376,-1.273764,-0.574121,0.391087,8.691191,-5.005790,8.717634,-7.415382,-8.017094,4.484819,-8.544795,1.674071,2.731387,-8.333156,-0.806118,6.261910,-7.463557,-4.042871,-2.668604,-6.383443,-2.800606,-5.653438,5.449727,8.950614,6.519383,1.648081,1.739180,-4.159307,9.039062,-2.437922,-6.992404,-7.459961,4.016868,4.030697,0.702507,-0.261199,-0.563885,0.948932,5.784477,7.234474,7.117976,-0.331430,-7.352626,5.738994,8.958403,2.675974,8.493886,-3.256899,4.112422,-7.700378,-9.279474,-1.050749,-4.737526,-8.192472,7.188177,-9.424897,-6.111076,4.859026,2.314043,-2.243240,-0.736645,-2.221280,-5.869558,-6.330693,4.157507,-2.863413,8.656676,-7.130991,-0.364420,4.591889,5.403290,-6.203963,-5.666184,-7.541712,-5.670265,-5.180163,-6.312650,-9.608318,-5.002078,-7.571363,7.081086,8.098524,-8.144131,-0.819340,-9.561020,-3.013095,1.535506,2.977576,-5.746415,3.794415,6.523588,9.687074,9.742213,-5.058888,-1.728968,0.626183,6.429396,2.453408,-6.715182,-2.022086,5.185063,-2.917183,8.094156,0.001822,5.731988,-8.031172,-7.951181,1.895156,6.994143,7.310446,-4.006157,2.756260,8.784306,1.676522,3.769729,-5.542259,-5.448882,9.241351,8.338967,9.499716,-3.988630,5.857854,8.554620,-7.503623,-6.712862,1.059745,-5.503497,-9.932202,3.569138,0.062012,7.595018,7.186240,8.592351,0.179886,2.688136,4.252149,-1.094326,0.157865,1.259630,-6.030443,7.848173,5.915874,-5.998628,-1.593145,7.109285,-1.902052,0.892367,6.914071,6.232757,1.858191,3.358712,-2.302293,5.042080,-9.351411,8.933758,-2.221296,-4.487989,-7.764380,4.005474,-3.288016,-7.273452,0.468236,-0.046332,-3.997109,2.824777,2.549257,3.748114,-8.685567,5.197319,2.025205,0.498075,5.922558,0.051537,4.716209,-1.681620,-4.395847,-2.817566,7.250750,-8.032021,-5.087345,0.489861,-1.992805,7.264041,-5.626960,3.757875,8.854618,8.505718,-6.033239,-6.227012,-1.462814,2.750107,-0.183515,-2.116392,7.847491,8.571407,3.494220,9.016586,5.807679,-5.474535,3.359121,-5.855322,5.069053,7.314854,-1.239100,6.446820,4.135909,2.828561,-4.920171,2.719064,-8.080627,-7.076956,0.127797,-6.785580,-0.716141,-0.064808,-7.825302,5.340189,4.108927,-8.785258,-2.013830,-2.164153,-8.617417,0.614550,6.892416,-3.031081,-8.075802,9.027308,-2.662382,-8.427503,8.588286,-8.805736,3.097977,6.140295,1.331617,5.083194,3.396864,1.065128,2.652297,-8.935295,7.255097,1.513084,2.166643,8.141968,-5.498191,1.631633,7.928211,5.517543,6.491580,6.269372,-3.225767,-2.071418,-4.330302,-1.180302,3.951716,-5.098871,9.175989,-0.973880,7.483527,3.944457,1.921544,8.627291,-1.431310,-0.131588,9.860077,-4.808683,-8.912957,1.782778,-6.499512,-4.303936,-4.015528,-0.320054,-8.701894,2.858920,8.219777,5.540769,0.724311,3.516640,-1.188843,6.215052,6.005179,3.330563,-7.470721,-0.906431,-2.920771,-1.881294,0.090373,1.860817,3.778020,5.067620,2.870315,-9.480465,2.359176,-8.881267,3.241286,4.139685,-7.654602,-5.140429,2.447452,4.311856,8.851544,2.205431,1.910652,8.895430,5.317488,8.139348,2.461917,6.819466,4.140495,-2.744419,8.824145,6.737619,7.700745,-3.138992,-6.566573,-1.707412,-2.039826,-5.722506,-2.304549,-5.320012,2.060934,-9.663740,8.022680,5.366015], dtype = "float32")#candidate|6945|(756,)|const|float32
call_6944 = relay.TupleGetItem(func_5000_call(relay.reshape(const_6945.astype('float32'), [14, 6, 9])), 0)
call_6946 = relay.TupleGetItem(func_5002_call(relay.reshape(const_6945.astype('float32'), [14, 6, 9])), 0)
func_6837_call = mod.get_global_var('func_6837')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_6956 = func_6837_call()
call_6957 = func_6837_call()
const_6996 = relay.const([5.881816,3.730926,6.152405,-3.185191,6.823490,8.688275,9.169645,-1.490072,-4.048964,-2.502027,1.688025,-2.384308,4.150585,-5.240796,6.523507,-2.895892,6.357105,6.931765,-3.132390,-8.521355,3.135452,-1.741051,-4.999644,-0.126809,-4.291669,0.836539,4.909244,6.567474,6.802215,0.652574,7.633419,-1.523843,6.956197,-3.489823,6.016598,9.070404,-8.857182,-9.943891,-3.784537,-0.607343,5.262241,-9.672707,4.595186,8.559816,0.980498,6.995543,-7.810040,7.602634,-7.119838,-7.588683,7.515229,-6.604956,3.212142,-5.656779,7.428325,9.220370,0.797867,9.261727,8.949176,2.528137,-9.936631,3.507678,-5.413203,-6.991397,-5.955502,2.199675,9.496997,-8.658049,-0.439170,-2.418543,7.268720,-9.528615,-7.919576,2.978138,-0.335719,-1.977729,-5.816517,-4.207007,1.324398,4.496828,8.701309,5.955158,-2.997737,0.335381,-6.746688,9.437278,6.491173,-9.068142,6.888988,0.079308,2.157248,-4.787777,-9.245977,-3.313314,-6.544594,0.079798,-1.356022,-1.043376,-5.780716,8.539975,4.474873,-7.087678,-3.456217,-9.505561,1.439383,-4.368571,-8.695735,-3.403788,2.788646,-3.657198,-1.724205,8.057585,-3.610329,4.886918,8.620628,0.920169,0.797885,-1.472979,4.975964,-5.089979,-6.142165,7.079536,5.047675,4.036555,-0.702332,-1.885320,-2.578532,-6.826207,6.753117,5.329649,-8.483449,-3.727483,8.831278,-2.173615,0.628457,1.145473,8.230603,-7.427488,-1.999764,8.416619,4.819373,3.205054,1.363232,-5.074669,8.862397,7.682310,7.463231,-9.500051,-9.833146,7.376426,3.727381,-3.863650,2.521037,5.232118,-5.239607,-7.755263,5.095882,5.697034,6.757252,7.646176,-0.225978,7.209268,-4.500225,-7.477019,-2.982769,2.021086,-6.797607,-7.047276,-5.939090,0.255835,-3.214889,1.843501,4.690119,-9.940576,-1.042343,7.713069,-1.294726,-1.709584,-5.667916,-0.083936,-1.994886,-1.995150,5.783410,-9.537763,2.697654,-1.814016,-3.609229,3.788963,0.676491,-4.139729,5.843486,-2.856501,-0.382879,1.609922,0.964448,5.093786,5.073280,-9.873890,-3.463076,-1.747077,-6.816531,9.244960,-8.949546,-5.431107,-8.907963,-9.719157,-4.710770,-1.945727,1.821291,-5.812345,9.592965,4.148691,9.546931,5.301957,-3.301486,7.220065,-2.597722,4.721481,4.699298,-6.865524,2.473885,-9.612292,7.273201,-7.174051,-8.683748,9.494020,2.192733,-7.471471,-5.369436,-5.139812,3.565250,5.081059,4.173588,1.644605,-1.711321,-8.583795,-4.391136,-9.104063,5.944044,-2.739527,8.246479,1.633890,-0.823287,3.851255,3.707938,-0.050197,-7.824250,4.543006,-2.409445,-0.761458,-7.853393,-0.088233,5.343352,7.713887,-2.668613,-8.281607,2.219657,-8.770532,5.928792,5.010187,3.328740,-0.228625,7.555822,6.658395,-1.709977,9.002483,9.122662,5.895128,-0.650584,5.597382,-2.687846,-4.116218,-3.455973,-2.920067,-8.900711,-7.729701,9.761286,5.069184,-8.029653,-6.813325,6.655877,-5.000766,-9.794753,6.651669,-6.241340,7.071633,4.534487,-9.911915,-4.791625,3.534540,-2.572104,-7.307170,-8.169793,4.226893,9.490638,3.472717,7.757550,7.916174,8.443791,-9.017198,4.653366,5.060554,6.098885,-1.441956,-6.215879,-4.829362,-2.654599,-1.141152,2.028508,1.283011,0.884410,5.021037,-6.310164,-1.594772,1.435258,7.758334,-3.039287,6.165763,7.688727,5.542974,-8.970832,-3.245816,6.719719,6.488049,-0.441159,9.083940,-6.776493,-0.379170,7.210158,-4.318434,1.179053,5.396212,-9.412463,8.238485,1.308634,0.139279,6.349613,-5.481711,-1.021267,2.085861,-2.292007,7.914416,8.149482,-0.601424,-4.766781,3.282535,-2.228869,-1.793871,-8.447815,-9.028255,-8.378964,5.173714,-2.704198,-7.770611,7.907185,6.735142,-2.073771,-1.714230,9.458740,-3.524373,-5.108366,8.816631,1.980078,5.703721,-4.827918,8.682460,-8.801922,-9.665385,-2.092200,2.400561,-8.272679,5.259408,5.769634,-9.571316,-7.409422,2.477528,-3.352148,-3.516945,-1.894460,4.210572,8.613017,8.701892,7.924878,-4.291939,5.352979,-1.452615,9.025849,-8.829486,5.809600,9.857209,-5.026361,-8.458011,2.817632,-4.810812,3.282310,-9.407195,-8.203492,-1.129382,9.662159,8.610740,-4.966474,-7.195470,0.238222,7.324464,8.649431,1.657762,5.614300,4.050986,-4.555037,-1.878401,1.355622,-5.669116,-5.378348,-8.812208,-0.361195,-7.557555,4.647825,-9.659558,-9.398311,2.430113,-2.099853,1.665169,8.099503,-9.001783,-5.337401,1.202204,-6.723918,6.818859,-6.646303,-1.689769,6.241705,1.576661,-9.445331,8.745851,7.681340,-0.056124,0.571386,0.777892,-5.555006,-8.013119,-2.486180,9.024963,-5.793831,-7.622410,-7.409666,6.775911,6.156905,-8.401230,-9.000194,-3.719232,-2.258684,4.455441,-9.821597,-2.277632,-9.694292,4.009103,-1.931238,5.130155,7.687336,1.397030,1.058733,1.296156,-8.802927,-7.919681,-7.355074,-6.463347,7.489623,-3.242463,3.892267,6.462698,-0.352770,-2.078052,2.710051,0.303738,9.453025,-7.585098,3.878421,-5.061773,9.817647,-6.719660,9.835209,-0.078751,-3.064449,5.340609,-9.951399,1.895541,7.927974,7.787155,-7.123655,-9.097480,-3.117487,-8.576235,-0.506752,5.600712,5.216227,3.367730,-7.845772,7.831307,3.533518,-1.405115,6.973455,-1.668738,-0.325644,1.537795,-1.320504,-8.544888,-6.819844,-2.350025,1.674807,-3.913257,2.993576,-3.981678,-4.610784,-4.537413,-7.416695,5.340643,-5.613984,-9.406587,2.709934,0.174878,6.445206,-9.398129,-2.371831,3.648133,-9.001607,-6.675106,2.997742,-3.166953,7.047091,0.057484,2.957790,5.314586,-3.159590,-1.107366,-6.644889,1.297600,-8.913696,3.815490,-6.492557,-9.335573,9.935493,-7.339310,8.822511,-5.747262,8.708624,-9.735623,-8.805714,2.049428,-0.825812,-5.229185,9.066491,-3.692316,-6.139368,3.594661,-5.158911,0.681989,-4.188730,5.489055,-7.999570,-9.004974,6.124009,9.670358,1.539000,8.269927,-9.227173,-9.742972,0.256910,4.207552,-5.509863,0.988726,0.164908,-9.754692,-3.285015,4.643504,8.704552,9.063853,5.619255,-2.232293,9.107755,-0.522953,-0.589509,7.151954,9.283711,8.991333,7.981790,0.047238,8.835108,7.791186,3.762621,3.646089,-1.633096,9.036929,6.715652,-1.771222,9.776827,-0.783982,4.141211,-7.819334,0.150460,6.444659,-1.499136,3.417732,-6.491305,0.221110,0.437907,5.444934,7.933300,6.608581,-0.655664,9.743160,-4.148258,1.840620,-0.883078,4.095769,3.506444,-7.938068,7.198793,-5.173085,-0.039862,4.721716,-5.175483,-0.038472,6.535515,-3.311334,0.707536,-9.483816,8.994766,-6.467838,4.391642,8.047864,-6.018758,-9.222859,9.489075,1.392433,-3.127794,-3.293935,1.311296,4.605305,-2.316894,5.989514,1.961207,-8.596638,5.708718,-5.341537,-4.644601,-9.870150,-6.403005,-1.779479,6.850464,1.219038,-0.902448,-2.922878,-3.678375,-0.861490,6.497040,8.262642,8.945769,4.564133,-4.473418,8.137891,-7.354741,7.015064,-4.370412,-7.819369,5.544644,-8.621415,7.687302,-3.921296,-8.966384,9.627286,-5.618430,-0.261821,-3.796371,-6.249849,-4.207220,1.591457,8.314760,4.869779,-3.699683,9.667034,2.105035,7.190468,-1.894291,0.109043,-5.077483,-7.415906,5.190725,3.866846,5.252093,-5.408795,7.380313,-5.932635,-0.290199,8.309570,8.638374,-3.667465,-7.231701,-7.069349,3.390790,8.643802,-7.026028,-9.409286,-3.855044,2.211998,-8.969876,9.810811,3.602275,-3.972392,7.362348,-8.452662,2.273627,-1.920922,-5.280042,-4.758364,-9.630322,0.070088,-2.949802,-2.422137,7.396283,-5.564773,1.361838,-2.969129,5.542899,-1.737815,-7.162196,5.613866,5.839163,3.741527,-4.769843,-3.731120,8.000451,8.033745,1.810769,-5.211591,1.799735,-5.935023,1.524909,3.040133,-7.089555,4.607534,-5.135358,-2.083490,-9.075226,5.423675,9.302976,9.130671,-4.865769,-1.118509,-7.974374,-9.442349,4.730294,-2.804945,5.487069,3.159752,2.845386,-9.040621,-7.884650,-8.705132,-6.081695,9.863302,8.363469,-6.135871,-0.348467,7.467943,-6.956166,-8.479538,8.732062,-7.932123,1.098278,-1.052572,-5.565578,-7.085853,7.423469,-8.866400,9.926480,9.725381,-1.271386,-9.435916,2.728080,-6.366693,3.990913,2.956472,3.718645,-3.894771,-5.641476,-8.617634,3.459184,4.165968,7.374337,7.380570,1.824796,0.687471,-3.808145,-2.096416,6.367570,1.183588,-6.544780,5.206741,-1.910335,-7.424110,-3.701764,-4.671792,0.069679,-9.090758,3.534607,4.457382,6.911436,-0.662087,-5.544761,2.670379,1.441897,5.173654,4.987702,-1.003867,-9.124071,-2.718192,8.643483,-5.447630,-2.772493,1.228277,-4.442158,9.452436,4.733444,-1.066218,-3.782529,9.785102,-5.727796,1.654353,-5.031393,-2.109515,-5.713128,7.528828,9.920674,9.300895,5.532884,7.654429,5.539958,6.808024,-4.534588,9.210951,3.874773,9.055040,6.247383,8.955196,-9.444081,-9.021027,7.054103,-1.537688,2.836592,-5.099388,-6.400493,1.060522,-3.701587,-8.716076,-0.689337,-6.104991,-5.662698,0.710750,-9.974572,0.072789,-2.619913,-7.319653,-0.720572,-0.396904,-9.288523,-8.879745,-7.713852,-7.397040,-5.111955,-3.417425,-0.689901,-7.893623,-6.725929,-3.094891,-3.597919,5.760426,5.401274,-1.055759,-1.249282,-0.343743,-8.873020,6.954533,-0.709302,7.485032,-9.565984,6.515089,-2.328410,1.415126,4.002309,-7.138426,-4.403775,0.384074,0.171466,1.630087,-2.348169,-6.532116,-5.011613,-5.287455,7.337248,4.051344,6.268563,7.544370,-0.816321,-9.564936,-0.929242,7.298526,-1.162472,3.549021,6.992841,6.613639,-2.423533,-9.072898,2.914251,9.095288,-6.589473,-2.401450,9.725358,-6.435681,-8.826060,4.461140,1.758144,4.711281,6.990090,3.208042,7.743878,1.273217,-6.811576,-5.256802,-9.062978,-4.106393,-6.316137,-7.363393,-6.499204,0.027531,4.359126,-4.765134,-4.802098,-7.166892,-7.734308,-7.177998,-9.769673,7.566465,9.120314,-2.126245,4.983434,-4.580733,5.404239,0.399037,8.289994,-2.440356,4.884741,6.130672,3.434179,-5.869423,4.717152,9.108124,-0.517815,-0.102602,8.014129,6.797628,-2.478683,-9.047733,-9.836488,8.762420,6.443851,-9.387858,-0.715133,-5.535765,5.806800,7.318093,5.948230,-3.804509,9.284009,0.941442,2.408874,6.146280,-4.140916,9.399522,7.572494,2.058275,-5.799969,-1.083064,2.897976,-0.915694,9.405930,-5.201887,1.577131,-2.918841,1.938997,6.459163,-2.018728,-9.426505,-6.152335,9.367278,5.598933,-9.226484,-9.687244,-7.953397,5.828255,-3.176831,0.218742,3.171698,8.111438,2.607452,4.101243,6.349854,-5.905859,7.238432,8.948811,-5.898205,0.384534,-1.547308,7.986114,7.283702,-2.517986,4.079437,-5.008325,-6.108527,-3.663054,9.421670,-1.497815,1.114331,-9.841387,8.333150,7.445422,-3.475218,4.771956,-2.197714,-5.925851,8.913898,1.360097,-2.239433,-4.656858,1.220966,-4.822825,-0.893222,8.192489,5.406792,-1.096714,6.868539,0.180716,-0.683644,2.666524,0.633192,5.809514,-7.146635,-3.394213,-6.042052,9.848506,5.957595,-6.041426,-3.687720,-5.300205,-1.754243,-1.368929,-1.105475], dtype = "float32")#candidate|6996|(1056,)|const|float32
bop_6997 = relay.power(var_6895.astype('float32'), relay.reshape(const_6996.astype('float32'), relay.shape_of(var_6895))) # shape=(1056,)
output = relay.Tuple([call_6845,call_6879,var_6880,call_6892,var_6893,var_6894,var_6896,call_6944,const_6945,call_6956,bop_6997,])
output2 = relay.Tuple([call_6846,call_6881,var_6880,call_6897,var_6893,var_6894,var_6896,call_6946,const_6945,call_6957,bop_6997,])
func_7006 = relay.Function([var_6880,var_6893,var_6894,var_6895,var_6896,], output)
mod['func_7006'] = func_7006
mod = relay.transform.InferType()(mod)
mutated_mod['func_7006'] = func_7006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7006_call = mutated_mod.get_global_var('func_7006')
var_7008 = relay.var("var_7008", dtype = "float32", shape = (1280,))#candidate|7008|(1280,)|var|float32
var_7009 = relay.var("var_7009", dtype = "float64", shape = (39,))#candidate|7009|(39,)|var|float64
var_7010 = relay.var("var_7010", dtype = "float32", shape = (1350,))#candidate|7010|(1350,)|var|float32
var_7011 = relay.var("var_7011", dtype = "float32", shape = (1056,))#candidate|7011|(1056,)|var|float32
var_7012 = relay.var("var_7012", dtype = "bool", shape = (768,))#candidate|7012|(768,)|var|bool
call_7007 = func_7006_call(var_7008,var_7009,var_7010,var_7011,var_7012,)
output = call_7007
func_7013 = relay.Function([var_7008,var_7009,var_7010,var_7011,var_7012,], output)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_7021 = func_6366_call()
call_7022 = func_6366_call()
output = relay.Tuple([call_7021,])
output2 = relay.Tuple([call_7022,])
func_7032 = relay.Function([], output)
mod['func_7032'] = func_7032
mod = relay.transform.InferType()(mod)
output = func_7032()
func_7033 = relay.Function([], output)
mutated_mod['func_7033'] = func_7033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mod.get_global_var('func_7032')
func_7033_call = mutated_mod.get_global_var('func_7033')
call_7046 = relay.TupleGetItem(func_7032_call(), 0)
call_7047 = relay.TupleGetItem(func_7033_call(), 0)
uop_7066 = relay.sin(call_7046.astype('float32')) # shape=(8, 8, 2)
uop_7068 = relay.sin(call_7047.astype('float32')) # shape=(8, 8, 2)
func_6435_call = mod.get_global_var('func_6435')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_7069 = relay.TupleGetItem(func_6435_call(relay.reshape(uop_7066.astype('bool'), [8, 8, 2])), 0)
call_7070 = relay.TupleGetItem(func_6438_call(relay.reshape(uop_7066.astype('bool'), [8, 8, 2])), 0)
func_3738_call = mod.get_global_var('func_3738')
func_3742_call = mutated_mod.get_global_var('func_3742')
var_7076 = relay.var("var_7076", dtype = "uint64", shape = (105, 2))#candidate|7076|(105, 2)|var|uint64
var_7077 = relay.var("var_7077", dtype = "float32", shape = (1350,))#candidate|7077|(1350,)|var|float32
call_7075 = relay.TupleGetItem(func_3738_call(relay.reshape(var_7076.astype('uint64'), [3, 14, 5]), relay.reshape(var_7076.astype('uint64'), [3, 14, 5]), relay.reshape(var_7077.astype('float32'), [1350,]), ), 0)
call_7078 = relay.TupleGetItem(func_3742_call(relay.reshape(var_7076.astype('uint64'), [3, 14, 5]), relay.reshape(var_7076.astype('uint64'), [3, 14, 5]), relay.reshape(var_7077.astype('float32'), [1350,]), ), 0)
output = relay.Tuple([uop_7066,call_7069,call_7075,var_7076,var_7077,])
output2 = relay.Tuple([uop_7068,call_7070,call_7078,var_7076,var_7077,])
func_7081 = relay.Function([var_7076,var_7077,], output)
mod['func_7081'] = func_7081
mod = relay.transform.InferType()(mod)
var_7082 = relay.var("var_7082", dtype = "uint64", shape = (105, 2))#candidate|7082|(105, 2)|var|uint64
var_7083 = relay.var("var_7083", dtype = "float32", shape = (1350,))#candidate|7083|(1350,)|var|float32
output = func_7081(var_7082,var_7083,)
func_7084 = relay.Function([var_7082,var_7083,], output)
mutated_mod['func_7084'] = func_7084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_7194 = func_6366_call()
call_7195 = func_6366_call()
output = relay.Tuple([call_7194,])
output2 = relay.Tuple([call_7195,])
func_7196 = relay.Function([], output)
mod['func_7196'] = func_7196
mod = relay.transform.InferType()(mod)
mutated_mod['func_7196'] = func_7196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mutated_mod.get_global_var('func_7196')
call_7197 = func_7196_call()
output = call_7197
func_7198 = relay.Function([], output)
mutated_mod['func_7198'] = func_7198
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7201 = relay.const([[[8,8,9,-7,7,-2,5,6,-5,9]],[[-8,3,-3,-3,-8,9,-9,1,-8,-2]],[[6,-2,9,8,6,4,-6,-6,-9,2]],[[-3,5,-1,-9,-7,-5,-6,-3,-4,9]],[[-10,-6,1,5,-2,-9,-1,7,3,2]],[[7,-10,-4,-8,-5,10,1,4,-9,-1]],[[-10,-6,-7,5,-8,-1,-2,-8,5,7]],[[-2,-7,-3,6,-4,3,-9,4,-3,-9]],[[6,8,10,-6,-1,-7,10,-9,-7,-6]],[[-1,-4,9,10,9,-5,-1,2,-8,-8]],[[-1,-3,1,5,4,-8,10,9,1,1]],[[3,6,-8,5,9,4,-10,-3,6,8]],[[7,9,1,-7,1,4,-6,6,-9,10]],[[4,-7,9,-3,8,-7,1,-2,-5,-5]],[[-9,-8,9,8,5,-3,-10,-1,-2,5]],[[10,-5,-9,-1,8,-1,-5,1,-5,10]]], dtype = "uint16")#candidate|7201|(16, 1, 10)|const|uint16
var_7202 = relay.var("var_7202", dtype = "uint16", shape = (16, 11, 10))#candidate|7202|(16, 11, 10)|var|uint16
bop_7203 = relay.bitwise_or(const_7201.astype('uint16'), var_7202.astype('uint16')) # shape=(16, 11, 10)
uop_7206 = relay.exp(bop_7203.astype('float64')) # shape=(16, 11, 10)
output = uop_7206
output2 = uop_7206
func_7209 = relay.Function([var_7202,], output)
mod['func_7209'] = func_7209
mod = relay.transform.InferType()(mod)
var_7210 = relay.var("var_7210", dtype = "uint16", shape = (16, 11, 10))#candidate|7210|(16, 11, 10)|var|uint16
output = func_7209(var_7210)
func_7211 = relay.Function([var_7210], output)
mutated_mod['func_7211'] = func_7211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_7230 = relay.TupleGetItem(func_6496_call(), 1)
call_7231 = relay.TupleGetItem(func_6498_call(), 1)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_7243 = relay.TupleGetItem(func_6707_call(), 0)
call_7244 = relay.TupleGetItem(func_6709_call(), 0)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
const_7247 = relay.const([8.795477,8.064511,2.768529,-2.486995,-1.277810,-2.843123,9.937986,2.082779,-1.014099,-8.513092,-6.351717,-9.092452,-1.852793,-3.418550,2.457275,-6.208419,-3.738257,-8.181674,-1.997133,-2.839273,6.998451,4.587599,7.692019,-3.071064,4.575065,-3.824222,-5.247243,-0.240941,5.784973,9.093506,-1.051734,6.551618,9.937582,-4.092645,1.841739,-0.092623,-6.793462,5.937367,-1.110926,7.072370,-6.339952,2.840520,2.554440,-9.244449,-4.835817,0.638154,9.091563,-5.623275,-8.677310,-3.547327,7.708364,-0.326985,-3.345883,4.765092,-0.681507,9.286352,-5.708095,7.987896,-2.973594,8.411638,0.629650,8.785944,4.710266,6.191422,-0.244283,4.214621,-0.720435,2.405160,-9.721359,4.826887,-2.326699,5.757451,2.932027,-2.147589,-4.260479,3.296187,-6.657391,-8.854335,-3.874573,8.058710,4.713359,-9.598574,5.385012,4.468891,-1.947512,-4.597984,1.528740,7.686483,-8.695176,-8.446821,1.128882,4.829515,-5.600507,-4.962972,1.172817,1.448227,-4.833082,4.593415,-6.583397,9.485745,3.236299,4.064964,-7.523417,-7.751372,-9.962099,6.313511,-5.058664,1.797824,4.079763,3.712381,6.460707,6.179404,-9.590251,1.165240,8.445089,0.548000,-6.578387,9.443213,9.108985,-9.504717,-4.522409,-5.576862,-9.267991,6.184231,6.986891,-8.675144,-5.010689,-3.216663,-1.725743,1.858641,0.318938,6.784913,7.052213,-5.892858,-6.918732,-0.284652,-1.794861,1.527176,-9.524168,-0.806619,1.199853,-5.479085,5.446579,-9.940275,3.176582,3.815345,-8.126173,-4.982480,-7.281742,-1.823695,4.341605,7.063202,4.895529,-0.292294,-8.330437,1.651905,-3.621191,2.371163,3.865782,8.028018,9.601775,5.740048,4.025249,9.378375,-3.457119,-1.186818,-3.191107,9.802388,-3.531526,2.629607,3.755468,-3.728537,-1.972379,1.083409,4.408043,-8.994781,4.959660,-7.334354,-4.316224,-8.313189,-7.978726,-5.164641,0.008702,-8.457455,-4.282650,-6.392031,8.965611,2.603876,-2.864054,2.295209,4.970810,-6.079702,9.301581,-3.434070,-6.003816,-2.125594,5.644654,7.825879,-9.744310,0.825376,0.766964,-8.107737,-1.526796,-9.198293,-3.676519,0.479772,-0.925848,9.526891,-2.941345,4.998623,-3.821733,0.476176,-6.573711,-4.546037,3.315728,3.355975,2.734187,1.774128,9.399753,-2.341778,2.368406,-5.181658,6.608443,8.477770,6.775622,-4.223471,-1.923651,4.311128,-9.156793,2.166441,6.061734,-7.793048,2.321163,4.969541,-9.500382,-4.488991,7.212565,7.020495,-2.629168,-8.266674,1.884298,-2.988262,9.532449,-9.997019,7.426584,1.024957,9.691385,-5.763495,7.780212,0.418068,1.289481,0.291960,-0.481714,-5.995753,7.726416,-8.739247,8.526710,-4.438314,6.512727,2.334349,-4.213478,9.971866,-1.571911,-5.288891,9.610351,8.835391,-3.094289,5.774521,5.108332,4.959152,0.737359,8.389475,-7.677542,0.273094,7.012492,2.117760,0.243826,4.734532,-5.402252,6.691749,1.510430,-4.272270,9.195149,6.423708,2.920627,5.142799,-8.314980,-9.370940,-0.801990,-4.438075,-3.882735,9.939516,8.793834,5.584960,2.286022,3.262111,-9.021483,-4.847036,-1.668138,-6.009688,-1.159876,-1.808270,8.430714,-8.016422,-3.052607,1.840142,-1.738053,-4.414064,6.998334,3.675007,-1.628622,7.372784,-0.142333,-6.388923,7.064867,7.743074,-9.326265,8.798469,-8.370208,6.165081,-2.045978,2.379058,7.824066,-7.985222,5.769964,1.813372,5.687850,-7.411015,-3.109062,-3.009090,-1.776921,-6.869632,2.762976,-1.130348,4.981549,-8.573083,-7.396323,-8.022022,2.891202,-4.302597,-3.528016,-7.323526,-2.124965,4.333037,0.148266,2.092907,7.409608,-2.784176,0.637630,-4.464484,-6.666334,-0.205459,-9.649251,-7.499469,-4.712797,6.061053,5.183914,-8.817222,-7.228279,-0.591478,1.659540,6.163129,7.071920,3.270077,-2.876783,8.908491,-2.816827,7.059754,-4.226228,-3.741530,-3.879049,4.972416,4.573004,-8.355790,-2.144685,4.897205,-8.034587,-2.700703,-9.594077,-3.945183,-1.135725,7.151273,9.825709,7.690827,-0.795582,-1.179474,5.286435,-9.992892,8.507670,9.618323,-2.615789,3.478399,3.989870,-6.396978,0.725391,6.444410,2.258264,-1.510672,1.177431,-5.741235,3.520610,8.181505,0.186977,8.836756,-3.804465,-9.083186,5.504463,3.702043,6.148113,-6.524173,-3.972654,-8.506280,-1.082570,-3.222367,1.560236,-3.863953,-8.469594,1.237038,4.458464,-8.374374,7.070356,-6.256261,1.821573,-1.862778,-1.065340,2.387961,-8.865328,-0.396724,4.835411,-2.302448,5.586391,3.110478,-2.294363,7.633890,-9.217244,4.062215,-5.380574,-6.190330,2.276360,7.083498,-0.490074,-5.441989,-9.858337,9.639581,-0.520350,-5.054408,-0.993774,5.928449,5.531424,1.088498,-0.806415,3.619623,-5.496216,-6.892282,-3.595513,0.046857,6.362952,0.205658,-5.271343,1.357327,5.943214,0.935976,2.912374,-5.923232,0.071638,-0.829985,2.695365,5.348229,-8.776403,9.578492,8.753233,0.533788,1.343154,-2.463811,6.927626,-5.109306,-6.596925,2.868559,-2.429548,-1.889072,8.044294,2.515004,-3.082549,-5.723753,8.141722,-3.933857,3.175733,2.161901,-4.616274,-9.922332,9.055733,-9.890916,-4.757079,5.436444,-3.828996,5.984178,0.698646,-3.237968,6.389116,-6.721644,-0.321095,7.807378,-4.103516,-4.935243,-9.797033,-4.661922,8.249223,4.783670,-5.753283,-3.465537,-5.297722,-2.666229,3.217327,-4.438677,-6.780635,5.548241,3.897161,-7.170364,0.736162,-0.096156,2.833304,7.725422,-7.990921,3.953877,3.933451,4.163960,5.155783,9.406676,-6.723936,8.811664,-6.079187,3.357766,9.258677,2.219935,6.794833,-3.179543,9.006717,6.763060,9.979862,-3.062993,2.104232,-4.458734,-7.557122,5.658202,0.373893,7.753551,7.405717,4.591644,-2.514214,8.164509,7.687083,-4.394854,2.310513,-2.296190,-5.446175,4.782375,-2.651512,-7.995747,-2.174039,3.114374,-0.374381,5.746158,5.109556,-7.915577,-2.971548,8.369067,-0.998593,-4.022252,-3.823841,-9.666863,3.258817,-6.707101,3.245684,-6.064395,-5.131900,-3.097037,-1.797846,-9.319715,-8.114554,3.574479,-8.796753,-3.552453,4.005410,-5.728630,7.174042,-6.204003,-9.547959,-8.850118,-1.955371,2.002772,-1.124758,4.635751,-8.474778,8.231615,1.135513,6.160959,3.727068,-0.887008,-6.661556,-8.790892,7.417997,-9.114206,6.654912,6.405226,-6.945003,-0.695250,-3.912339,1.210199,6.368499,-3.715099,-9.798932,-4.829192,8.926536,-6.360163,9.575713,-0.328843,0.754947,1.169248,8.778713,-4.988576,7.016094,4.099035,2.550590,-3.616545,3.258890,8.819669,-8.153651,7.123594,-8.221389,4.899291,4.806916,-5.650882,0.327216,3.511801,-4.672936,-9.393217,9.051514,-2.804712,-6.015246,4.750821,5.896413,7.637347,4.949896,1.529749,-8.664841,8.697312,-5.640911,6.630573,7.746950,8.770193,-0.173785,-5.814895,2.100645,-1.717184,2.519337,2.153461,-3.789165,1.372101,8.350942,5.216524,3.710175,1.782940,-7.199584,7.588338,-3.264881,-3.552793,-9.916592,-2.119935,4.679112,-0.564647,-5.237345,4.916660,-8.945836,-5.324795,1.423688,-5.153755,0.159184,5.291892,-2.795644,1.872399,0.890069,0.076282,-9.984172,8.305486,0.679679,3.807904,3.552080,-4.095509,3.897122,0.019575,1.884039,1.375170,-2.843383,-4.707410,-2.286941,4.210681,9.625880,5.806475,-9.396636,7.768015,-5.977560,2.435954,7.255011,-8.823738,4.521691,-5.317494,5.146800,2.199251,-5.958205,-5.831047,1.036737,-4.156802,-5.943771,8.785902,-1.589276,-7.062588,9.548634,-5.313279,-1.256265,8.092202,-4.313354,-5.136718,6.940606,6.880721,3.204994,-3.476346,6.554119,-6.221123,8.089005,-4.243483,-1.635462,-7.618121,3.947563,2.441136,5.686181,2.770209,-5.913408,2.514182,1.846704,8.938754,-5.785342,5.641407,-6.048296,-5.923482,2.040208,3.546610,2.374756,7.486380,-2.149657,-9.174952,1.609684,3.457402,6.050991,-3.240866,-5.295237,-0.587104], dtype = "float32")#candidate|7247|(756,)|const|float32
call_7246 = relay.TupleGetItem(func_5000_call(relay.reshape(const_7247.astype('float32'), [14, 6, 9])), 0)
call_7248 = relay.TupleGetItem(func_5002_call(relay.reshape(const_7247.astype('float32'), [14, 6, 9])), 0)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
call_7255 = relay.TupleGetItem(func_5000_call(relay.reshape(call_7246.astype('float32'), [14, 6, 9])), 0)
call_7256 = relay.TupleGetItem(func_5002_call(relay.reshape(call_7246.astype('float32'), [14, 6, 9])), 0)
func_438_call = mod.get_global_var('func_438')
func_440_call = mutated_mod.get_global_var('func_440')
const_7265 = relay.const([-9.838870,2.419708,1.859774,-2.240713,-6.534687,-5.267946,-6.449046,7.626864,3.934275,4.358779,2.793169,6.442969,-3.604769,0.342896,-5.863398,6.241223,-4.947215,-4.084424,-1.929917,3.959587,-2.512537,-5.229735,7.310769,7.210957,7.369324,-9.689923,8.529361,6.755431,8.449333,6.889946,-7.523150,-8.611746,-3.436730,2.672259,-4.025957,0.234462,-4.547285,8.773572,1.070402,-5.846967,8.958277,7.062430,-7.768843,-8.240277,-6.966680,5.820707,-1.958380,3.929084,-7.664617,1.076219,1.100944,0.786605,1.093520,7.704400,4.045253,7.594667,-1.136082,3.493315,-9.734888,6.468810,-6.283401,6.093832,-6.418489,8.298142,3.322486,0.770353,8.061575,-6.446890,6.235486,8.270828,3.455865,8.436328,3.137202,7.902482,-9.153939,-0.215697,4.408646,-8.952862,-2.893135,8.712763,-8.679584,8.856155,9.135956,-7.288652,4.728822,-6.193665,9.978368,3.023209,-1.550212,-2.721254,2.695110,2.635162,-5.523783,-0.895543,5.282405,0.936415,4.626448,4.764992,-2.902136,0.210590,9.736826,6.094321,-7.256633,-7.657897,3.801498,3.192001,2.328868,8.533290,-4.405176,1.893252,2.137676,-6.534350,9.570296,-3.356726,7.092937,0.455434,5.554970,6.125643,6.474009,-9.536133,-5.839688,1.010629,4.553615,-2.317797,7.371533,3.445605,-0.549362,8.441177,-9.548448,1.506200,5.267819,-7.262580,6.856826,-6.373311,5.321339,0.580296,1.645349,-7.034681,-3.517969,-2.533789,-6.948136,-7.947441,7.360997,-6.037621,8.455142,-0.405324,-3.885666,4.029688,-7.797399,2.716052,4.040118,-0.967329,0.987637,8.164159,0.020756,1.118392,2.260652,-5.547091,3.640433,-8.345891,-0.552024,-9.542276,-5.745735,7.440146,2.133337,-0.839173,0.638382,3.630109,1.131007,-8.613770,2.886112,-9.583446,-8.867638,6.656294,0.300890,-3.351306,-1.679362,1.314854,6.254316,-9.260791,7.556035,8.525125,8.363571,8.649322,5.991019,0.741019,-4.688012,0.260070,-0.510761,-4.952031,9.105811,7.898852,4.314386,-4.168118,8.915617,-9.919146,6.160630,-4.300428,-1.627738,-6.177455,3.633820,-5.543715,6.608026,-6.707551,2.342668,-8.851618,-1.048593,-0.253976,-6.370943,-4.528386,0.689706,-2.127574,-9.654147,8.830981,-2.661760,-0.091875,5.898442,5.892202,-0.462019,-0.316386,2.655400,-2.453630,2.898732,1.077315,6.022988,0.722235,-0.086291,-8.003305,-1.057538,-6.643275,2.265104,5.560094,1.277826,4.080078,-5.517886,0.734758,-3.510495,5.671228,4.076518,3.713548,-0.928399,8.210386,-7.701692,4.163219,-7.585217,-3.742692,-7.337477,-2.990279,-6.886588,-4.104173,-0.281432,-8.195576,9.981088,-7.142753,4.746470,-8.934081,-8.630525,-4.808349,9.453917,-0.269568,2.293586,1.156001,-0.978060,-2.725369,8.636454,8.133704,-7.874428,3.385769,-5.413760,-0.554382,1.158413,9.795572,4.189610,1.352242,-5.539351,-9.965729,-0.248434,5.756503,4.087630,6.199449,-1.258055,-1.929126,1.887003,2.474565,1.344049,2.665972,-3.091784,8.679419,-2.471149,-6.938392,-9.601599,8.005229,-1.380681,3.544762,-2.776168,-5.070625,2.779727,5.674836,-1.730812,-1.284592,7.816120,9.449645,5.415504,6.065912,4.446874,-5.814759,-0.077112,-3.901797,-7.075536,-9.762827,-0.931463,-6.791638,-6.165679,-7.980700,-7.559975,-6.466347,-4.656604,3.611144,-4.644911,-0.220826,-5.678107,7.845073,-0.239366,6.558312,6.542980,7.022999,-1.108063,-1.897839,9.364414,-7.278524,4.379211,0.124622,-1.224983,9.315096,5.037342,-0.742201,-6.623923,-3.119413,4.862651,-6.652260,-8.214469,-5.541755,7.089207,9.355823,-6.136660,-4.904904,-9.006938,0.143975,-3.709894,-1.000030,-4.610616,8.111173,-5.400216,7.798794,3.614995,9.078415,3.965046,-7.319382,-5.559287,-4.658765,6.287889,-8.464809,-5.098567,-8.742351,6.289386,7.420544,6.311883,-9.647571,-9.803674,8.302672,6.433354,7.241760,0.990768,0.220298,3.508013,-7.269566,-9.060260,9.871033,-5.342741,8.827682,-5.333992,-1.940004,3.908500,2.098423,-3.941530,7.914037,0.764298,0.919673,6.006335,-7.186978,-7.281980,3.329654,-5.442725,3.412217,6.708379,-5.622444,4.140275,3.191218,5.353626,0.909836,-6.932350,-7.843229,1.653565,-0.142996,-0.017574,-3.032940,0.468322,-6.181578,-5.829550,-1.561303,-2.851243,3.855057,7.060908,6.251247,3.271248,5.955637,7.255717,-4.018487,5.345679,8.418239,9.393223,-1.039238,-5.693059,-3.965277,-4.110636,-3.258925,1.000063,4.633799,-5.914536,-2.647626,5.704268,7.312562,9.100190,6.372707,-8.462118,-0.325058,-0.811572,-7.573678,1.073696,5.033195], dtype = "float64")#candidate|7265|(440,)|const|float64
call_7264 = relay.TupleGetItem(func_438_call(relay.reshape(const_7265.astype('float64'), [5, 11, 8])), 2)
call_7266 = relay.TupleGetItem(func_440_call(relay.reshape(const_7265.astype('float64'), [5, 11, 8])), 2)
output = relay.Tuple([call_7230,call_7243,call_7246,const_7247,call_7255,call_7264,const_7265,])
output2 = relay.Tuple([call_7231,call_7244,call_7248,const_7247,call_7256,call_7266,const_7265,])
func_7273 = relay.Function([], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mutated_mod.get_global_var('func_7273')
call_7274 = func_7273_call()
output = call_7274
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_7343 = relay.TupleGetItem(func_6496_call(), 1)
call_7344 = relay.TupleGetItem(func_6498_call(), 1)
func_4663_call = mod.get_global_var('func_4663')
func_4665_call = mutated_mod.get_global_var('func_4665')
var_7356 = relay.var("var_7356", dtype = "int64", shape = (720,))#candidate|7356|(720,)|var|int64
call_7355 = relay.TupleGetItem(func_4663_call(relay.reshape(var_7356.astype('int64'), [3, 16, 15])), 0)
call_7357 = relay.TupleGetItem(func_4665_call(relay.reshape(var_7356.astype('int64'), [3, 16, 15])), 0)
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
var_7402 = relay.var("var_7402", dtype = "int32", shape = ())#candidate|7402|()|var|int32
const_7403 = relay.const([-8,-4,1,10,-2,7,-3,7,2,-9,-5,1,-2,10,-1,-7,2,-9,-9,8,-8,-1,-7,1,2,-2,-4,-9,-3,-6,-1,-5,-6,5,-5,-7,7,-4,-6,6,4,7,8,8,4,-10,-9,-6,-1,-10,-4,-9,-5,-7,-9,-1,8,-3,-3,-10,7,9,-4,10,-6,2,-7,10,6,-5,10,-10,-3,5,-5,10,-6,7,6,5,-10,-3,-10,1,10,-2,9,9,8,7,-2,7,-9,-7,-2,6,-1,-8,-2,8,-4,-4,-4,-6,-8,8,-3,-7,-1,-7,9,6,-4,3,-3,10,3,2,-7,-2,1,-3,8,5,4,-2,-7,5,3,5,-2,5,9,3,-6,-8,-8,1,1,-3,10,-8,-6,-6,4,6,8,-9,1,-10,-10,3,-1,4,-2,7,-4,9,-1,-10], dtype = "int32")#candidate|7403|(160,)|const|int32
call_7401 = func_553_call(relay.reshape(var_7402.astype('int32'), []), relay.reshape(const_7403.astype('int32'), [10, 1, 16]), )
call_7404 = func_553_call(relay.reshape(var_7402.astype('int32'), []), relay.reshape(const_7403.astype('int32'), [10, 1, 16]), )
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_7430 = relay.TupleGetItem(func_7273_call(), 5)
call_7431 = relay.TupleGetItem(func_7275_call(), 5)
output = relay.Tuple([call_7343,call_7355,var_7356,call_7401,var_7402,const_7403,call_7430,])
output2 = relay.Tuple([call_7344,call_7357,var_7356,call_7404,var_7402,const_7403,call_7431,])
func_7447 = relay.Function([var_7356,var_7402,], output)
mod['func_7447'] = func_7447
mod = relay.transform.InferType()(mod)
mutated_mod['func_7447'] = func_7447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7447_call = mutated_mod.get_global_var('func_7447')
var_7449 = relay.var("var_7449", dtype = "int64", shape = (720,))#candidate|7449|(720,)|var|int64
var_7450 = relay.var("var_7450", dtype = "int32", shape = ())#candidate|7450|()|var|int32
call_7448 = func_7447_call(var_7449,var_7450,)
output = call_7448
func_7451 = relay.Function([var_7449,var_7450,], output)
mutated_mod['func_7451'] = func_7451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_7481 = func_6366_call()
call_7482 = func_6366_call()
func_438_call = mod.get_global_var('func_438')
func_440_call = mutated_mod.get_global_var('func_440')
const_7485 = relay.const([-7.722376,-4.740551,4.563332,-6.161708,1.941978,9.901815,-8.146661,-3.848155,-1.594336,-2.919084,9.500711,-2.137197,4.373203,-2.474781,-1.001653,-2.327029,2.323092,3.525535,-9.663422,9.263614,5.953814,-8.767335,4.967758,-5.289924,0.665227,0.751278,-6.899988,-9.474108,-8.262127,-3.097208,-8.611523,7.759800,1.870365,-0.599552,2.475407,3.056036,9.366186,-7.922649,-7.826283,-5.029310,-5.849872,-0.145063,-2.514973,-3.037777,-6.068817,7.981865,9.155606,-1.445974,9.150389,-5.894556,-2.577646,9.277743,-4.516870,0.572848,-4.365032,-4.421431,4.816488,8.530922,-8.682209,-9.111047,-3.653515,9.245832,3.838225,-7.762040,5.766131,1.785916,-9.378282,4.842980,-2.755946,6.952077,-9.786650,6.381235,1.594834,9.594202,-1.792349,-2.887567,5.054249,1.787822,2.665057,5.195798,-6.292104,6.820084,-9.395467,5.979644,9.649308,6.346530,2.574869,6.413483,-7.826666,-4.851805,-8.084831,1.343471,-5.912290,-2.079823,2.916904,-0.213946,-8.959473,-4.001084,-1.657773,-9.966032,2.253342,-4.875636,-4.108100,6.508838,-7.564302,-0.228123,-7.296216,0.008184,-0.075328,-2.883901,4.196945,7.336680,-3.238780,-6.814650,-5.585620,-8.487457,9.124143,-0.419792,-6.224164,-6.391955,1.254032,-0.302894,-8.502367,-1.268742,8.127279,-1.177549,-2.006887,4.707904,-2.545689,6.332737,-3.299090,-8.555957,-7.127398,5.329825,-0.751251,-5.811276,-5.131000,3.332374,-0.716004,0.713151,-1.317293,-1.240292,-0.779703,-9.813870,-6.795503,1.505892,2.030758,-0.947617,-5.436319,5.399848,5.487166,-6.498404,-5.281169,-3.050142,2.903146,-1.765749,-6.605912,-3.183682,-6.629842,0.644445,9.584028,0.892436,-9.699430,-8.005907,-5.230322,9.072206,8.790753,5.654465,5.165718,-9.303574,-6.138437,-7.383701,-7.061258,1.798628,0.170026,0.254913,9.767415,-6.498524,-9.682911,-2.327762,-9.790870,-9.479340,2.221469,0.263687,4.201429,7.945530,-3.330700,-1.733855,9.021590,-6.697966,-8.502080,7.479455,-3.118786,1.963311,-8.721464,9.584022,7.413238,2.766813,-4.811041,9.592034,-7.053926,8.797032,6.538058,6.892963,2.569056,1.350149,6.265017,7.007923,-3.150863,-1.049402,-8.409133,3.111877,2.619470,-0.312735,7.885023,-2.111682,-8.310666,4.493791,7.339198,-2.850456,-8.008285,9.991428,-5.319924,5.803076,1.647349,-7.786319,-1.969190,-7.738112,-0.770690,3.027459,-4.440489,1.996768,8.549690,-3.223095,-9.657568,5.625944,6.684891,-0.208012,0.080615,-0.558675,-3.370801,-2.896657,4.291529,-3.605204,2.936444,6.968773,0.564292,-8.761180,2.870209,-5.295795,-1.556015,-9.008867,-6.566153,1.057630,2.907106,-3.630930,-7.027866,-3.943358,4.828671,8.174422,-1.700740,3.128159,-2.276002,-7.239123,-9.756235,0.192458,-0.655042,-1.684898,-0.877248,-9.990167,-8.630572,3.403022,4.302647,-2.066821,7.335096,6.450410,-1.025916,1.392388,-6.098070,7.119012,-4.617638,1.211044,-4.848966,7.434473,-5.404317,-1.082641,0.015216,0.224307,4.864184,8.104943,-7.468562,-4.995504,5.194985,6.135357,4.431538,6.791394,4.487602,-2.394123,-2.602929,-9.793692,8.257160,4.432161,3.288732,1.224404,-4.059810,5.971947,0.507132,-4.628126,2.911054,8.866839,-0.110035,4.470209,5.885489,2.237044,5.755253,-3.219966,9.139323,8.720512,2.963642,2.776554,-8.068122,-4.288287,9.944884,-7.670679,-1.864311,3.916122,-1.662508,-9.821936,1.280509,-2.142996,1.734348,3.940184,-3.055828,7.348402,-3.720839,-5.443794,6.754539,-9.135186,2.892793,-3.562218,-6.161001,-2.238736,-2.449202,2.803244,-8.049313,-9.971106,-9.001316,-8.876813,3.672074,-9.403258,7.677648,-9.041662,9.338218,0.753213,6.264660,-7.216377,6.356969,8.104976,5.933444,2.824245,-0.042292,-6.198565,-6.305726,4.801872,-5.668041,8.489755,-2.718275,7.350344,-6.567671,-6.256459,-8.504602,-5.173518,7.466842,0.379729,-2.012749,9.206452,-1.692405,5.162661,-6.214500,-6.781920,9.565873,-7.829845,2.131418,0.456943,-3.207411,-1.252217,5.556412,7.154168,-4.184184,2.179210,9.424110,3.466590,-4.100907,-6.985465,4.817826,-3.649122,-8.582416,5.591540,-8.919464,-7.337162,-3.805634,5.644411,8.978775,4.571413,8.920227,-2.404174,7.592255,-6.107371,-4.975865,-4.278595,-7.387413,-8.385633,-7.349788,-5.498447,1.948072,9.356924,3.899605,5.676485,3.974290,-6.837547,2.273957,-1.588211,-4.506560,4.370563,1.914638,3.882855,-5.387557,4.731805,7.529509,7.461789,-8.833645,-8.872403,4.585158,-3.056369,-5.306193,6.973718,5.888940,-3.215939,-3.002672,-8.646280], dtype = "float64")#candidate|7485|(440,)|const|float64
call_7484 = relay.TupleGetItem(func_438_call(relay.reshape(const_7485.astype('float64'), [5, 11, 8])), 0)
call_7486 = relay.TupleGetItem(func_440_call(relay.reshape(const_7485.astype('float64'), [5, 11, 8])), 0)
func_2519_call = mod.get_global_var('func_2519')
func_2524_call = mutated_mod.get_global_var('func_2524')
const_7489 = relay.const(True, dtype = "bool")#candidate|7489|()|const|bool
var_7490 = relay.var("var_7490", dtype = "bool", shape = (768,))#candidate|7490|(768,)|var|bool
var_7491 = relay.var("var_7491", dtype = "float32", shape = (1056,))#candidate|7491|(1056,)|var|float32
call_7488 = relay.TupleGetItem(func_2519_call(relay.reshape(const_7489.astype('bool'), []), relay.reshape(var_7490.astype('bool'), [12, 8, 8]), relay.reshape(var_7491.astype('float32'), [1056, 1]), relay.reshape(call_7484.astype('float64'), [440,]), ), 0)
call_7492 = relay.TupleGetItem(func_2524_call(relay.reshape(const_7489.astype('bool'), []), relay.reshape(var_7490.astype('bool'), [12, 8, 8]), relay.reshape(var_7491.astype('float32'), [1056, 1]), relay.reshape(call_7484.astype('float64'), [440,]), ), 0)
func_6435_call = mod.get_global_var('func_6435')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_7494 = relay.TupleGetItem(func_6435_call(relay.reshape(call_7481.astype('bool'), [8, 8, 2])), 0)
call_7495 = relay.TupleGetItem(func_6438_call(relay.reshape(call_7481.astype('bool'), [8, 8, 2])), 0)
output = relay.Tuple([call_7481,call_7484,const_7485,call_7488,const_7489,var_7490,var_7491,call_7494,])
output2 = relay.Tuple([call_7482,call_7486,const_7485,call_7492,const_7489,var_7490,var_7491,call_7495,])
func_7496 = relay.Function([var_7490,var_7491,], output)
mod['func_7496'] = func_7496
mod = relay.transform.InferType()(mod)
mutated_mod['func_7496'] = func_7496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7496_call = mutated_mod.get_global_var('func_7496')
var_7498 = relay.var("var_7498", dtype = "bool", shape = (768,))#candidate|7498|(768,)|var|bool
var_7499 = relay.var("var_7499", dtype = "float32", shape = (1056,))#candidate|7499|(1056,)|var|float32
call_7497 = func_7496_call(var_7498,var_7499,)
output = call_7497
func_7500 = relay.Function([var_7498,var_7499,], output)
mutated_mod['func_7500'] = func_7500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_7513 = relay.TupleGetItem(func_6533_call(), 0)
call_7514 = relay.TupleGetItem(func_6535_call(), 0)
output = call_7513
output2 = call_7514
func_7519 = relay.Function([], output)
mod['func_7519'] = func_7519
mod = relay.transform.InferType()(mod)
output = func_7519()
func_7520 = relay.Function([], output)
mutated_mod['func_7520'] = func_7520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_7546 = relay.TupleGetItem(func_6707_call(), 0)
call_7547 = relay.TupleGetItem(func_6709_call(), 0)
output = call_7546
output2 = call_7547
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
output = func_7550()
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mod.get_global_var('func_7032')
func_7033_call = mutated_mod.get_global_var('func_7033')
call_7570 = relay.TupleGetItem(func_7032_call(), 0)
call_7571 = relay.TupleGetItem(func_7033_call(), 0)
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
var_7573 = relay.var("var_7573", dtype = "int32", shape = ())#candidate|7573|()|var|int32
const_7574 = relay.const([-3,-10,2,5,1,4,-6,8,5,10,7,4,1,-3,4,6,5,-8,9,8,7,-10,7,5,-10,-2,5,10,-6,8,9,7,2,-4,-3,1,-4,-2,-10,5,-10,-7,-2,4,-2,-8,-6,6,2,-9,2,-4,-4,9,3,-6,-10,-1,1,-10,8,3,-5,-2,-1,-4,4,1,-6,1,-6,-4,9,-1,-1,-3,-9,2,9,10,8,3,2,9,-8,-7,7,-3,9,1,6,-8,2,8,-8,1,6,10,-10,6,-9,-4,-6,-7,2,-4,1,3,6,7,4,1,-4,8,8,-3,10,-7,6,-3,3,-9,3,-2,-7,-2,6,3,-2,3,-6,1,6,2,6,-2,-5,5,-7,7,-3,7,2,-9,-10,6,-1,-1,9,-8,-1,3,-5,3,5,-6,-9,-10,-2,5], dtype = "int32")#candidate|7574|(160,)|const|int32
call_7572 = func_553_call(relay.reshape(var_7573.astype('int32'), []), relay.reshape(const_7574.astype('int32'), [10, 1, 16]), )
call_7575 = func_553_call(relay.reshape(var_7573.astype('int32'), []), relay.reshape(const_7574.astype('int32'), [10, 1, 16]), )
output = relay.Tuple([call_7570,call_7572,var_7573,const_7574,])
output2 = relay.Tuple([call_7571,call_7575,var_7573,const_7574,])
func_7583 = relay.Function([var_7573,], output)
mod['func_7583'] = func_7583
mod = relay.transform.InferType()(mod)
var_7584 = relay.var("var_7584", dtype = "int32", shape = ())#candidate|7584|()|var|int32
output = func_7583(var_7584)
func_7585 = relay.Function([var_7584], output)
mutated_mod['func_7585'] = func_7585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_7651 = relay.TupleGetItem(func_7273_call(), 2)
call_7652 = relay.TupleGetItem(func_7275_call(), 2)
output = relay.Tuple([call_7651,])
output2 = relay.Tuple([call_7652,])
func_7653 = relay.Function([], output)
mod['func_7653'] = func_7653
mod = relay.transform.InferType()(mod)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mutated_mod.get_global_var('func_7653')
call_7654 = func_7653_call()
output = call_7654
func_7655 = relay.Function([], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6837_call = mod.get_global_var('func_6837')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_7668 = func_6837_call()
call_7669 = func_6837_call()
output = call_7668
output2 = call_7669
func_7687 = relay.Function([], output)
mod['func_7687'] = func_7687
mod = relay.transform.InferType()(mod)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mutated_mod.get_global_var('func_7687')
call_7688 = func_7687_call()
output = call_7688
func_7689 = relay.Function([], output)
mutated_mod['func_7689'] = func_7689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_7721 = relay.TupleGetItem(func_7273_call(), 6)
call_7722 = relay.TupleGetItem(func_7275_call(), 6)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_7727 = relay.TupleGetItem(func_6811_call(), 0)
call_7728 = relay.TupleGetItem(func_6813_call(), 0)
func_1247_call = mod.get_global_var('func_1247')
func_1250_call = mutated_mod.get_global_var('func_1250')
var_7733 = relay.var("var_7733", dtype = "uint8", shape = ())#candidate|7733|()|var|uint8
call_7732 = relay.TupleGetItem(func_1247_call(relay.reshape(var_7733.astype('uint8'), [])), 0)
call_7734 = relay.TupleGetItem(func_1250_call(relay.reshape(var_7733.astype('uint8'), [])), 0)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_7740 = func_6366_call()
call_7741 = func_6366_call()
output = relay.Tuple([call_7721,call_7727,call_7732,var_7733,call_7740,])
output2 = relay.Tuple([call_7722,call_7728,call_7734,var_7733,call_7741,])
func_7752 = relay.Function([var_7733,], output)
mod['func_7752'] = func_7752
mod = relay.transform.InferType()(mod)
mutated_mod['func_7752'] = func_7752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7753 = relay.var("var_7753", dtype = "uint8", shape = ())#candidate|7753|()|var|uint8
func_7752_call = mutated_mod.get_global_var('func_7752')
call_7754 = func_7752_call(var_7753)
output = call_7754
func_7755 = relay.Function([var_7753], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7790 = relay.const([[[-1.298768,2.844739,-6.131375,-4.213439,-9.576448,0.660715,-3.180110,-1.816862,-7.049557,7.937117,-4.216412,-9.546339,-1.733059],[-3.723401,0.941440,5.211606,7.701758,-7.983506,6.496302,-3.144570,4.084911,-8.437158,4.611822,5.427825,0.730833,-6.221711]],[[2.474807,-5.040076,3.318711,0.586011,-5.128682,-0.893741,2.553821,-9.043218,4.077794,2.548836,-2.017578,-0.922084,-6.502665],[7.849619,-2.266780,5.372744,-9.913647,7.009049,0.741040,5.111604,-3.802799,9.409856,-8.857854,-8.089459,-4.123244,-9.006079]]], dtype = "float32")#candidate|7790|(2, 2, 13)|const|float32
uop_7791 = relay.log10(const_7790.astype('float32')) # shape=(2, 2, 13)
output = relay.Tuple([uop_7791,])
output2 = relay.Tuple([uop_7791,])
func_7800 = relay.Function([], output)
mod['func_7800'] = func_7800
mod = relay.transform.InferType()(mod)
output = func_7800()
func_7801 = relay.Function([], output)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_7814 = relay.TupleGetItem(func_7800_call(), 0)
call_7815 = relay.TupleGetItem(func_7801_call(), 0)
output = relay.Tuple([call_7814,])
output2 = relay.Tuple([call_7815,])
func_7821 = relay.Function([], output)
mod['func_7821'] = func_7821
mod = relay.transform.InferType()(mod)
output = func_7821()
func_7822 = relay.Function([], output)
mutated_mod['func_7822'] = func_7822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_7849 = relay.TupleGetItem(func_7800_call(), 0)
call_7850 = relay.TupleGetItem(func_7801_call(), 0)
uop_7851 = relay.cos(call_7849.astype('float64')) # shape=(2, 2, 13)
uop_7853 = relay.cos(call_7850.astype('float64')) # shape=(2, 2, 13)
output = relay.Tuple([uop_7851,])
output2 = relay.Tuple([uop_7853,])
func_7857 = relay.Function([], output)
mod['func_7857'] = func_7857
mod = relay.transform.InferType()(mod)
output = func_7857()
func_7858 = relay.Function([], output)
mutated_mod['func_7858'] = func_7858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_7864 = func_6366_call()
call_7865 = func_6366_call()
var_7866 = relay.var("var_7866", dtype = "bool", shape = (8, 8, 2))#candidate|7866|(8, 8, 2)|var|bool
bop_7867 = relay.power(call_7864.astype('float32'), relay.reshape(var_7866.astype('float32'), relay.shape_of(call_7864))) # shape=(8, 8, 2)
bop_7870 = relay.power(call_7865.astype('float32'), relay.reshape(var_7866.astype('float32'), relay.shape_of(call_7865))) # shape=(8, 8, 2)
output = bop_7867
output2 = bop_7870
func_7887 = relay.Function([var_7866,], output)
mod['func_7887'] = func_7887
mod = relay.transform.InferType()(mod)
mutated_mod['func_7887'] = func_7887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7888 = relay.var("var_7888", dtype = "bool", shape = (8, 8, 2))#candidate|7888|(8, 8, 2)|var|bool
func_7887_call = mutated_mod.get_global_var('func_7887')
call_7889 = func_7887_call(var_7888)
output = call_7889
func_7890 = relay.Function([var_7888], output)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_7901 = relay.TupleGetItem(func_7196_call(), 0)
call_7902 = relay.TupleGetItem(func_7198_call(), 0)
output = relay.Tuple([call_7901,])
output2 = relay.Tuple([call_7902,])
func_7903 = relay.Function([], output)
mod['func_7903'] = func_7903
mod = relay.transform.InferType()(mod)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mutated_mod.get_global_var('func_7903')
call_7904 = func_7903_call()
output = call_7904
func_7905 = relay.Function([], output)
mutated_mod['func_7905'] = func_7905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_7935 = relay.TupleGetItem(func_7653_call(), 0)
call_7936 = relay.TupleGetItem(func_7655_call(), 0)
output = call_7935
output2 = call_7936
func_7948 = relay.Function([], output)
mod['func_7948'] = func_7948
mod = relay.transform.InferType()(mod)
output = func_7948()
func_7949 = relay.Function([], output)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_7986 = relay.TupleGetItem(func_7653_call(), 0)
call_7987 = relay.TupleGetItem(func_7655_call(), 0)
var_8040 = relay.var("var_8040", dtype = "float32", shape = (14, 6, 9))#candidate|8040|(14, 6, 9)|var|float32
bop_8041 = relay.not_equal(call_7986.astype('bool'), relay.reshape(var_8040.astype('bool'), relay.shape_of(call_7986))) # shape=(14, 6, 9)
bop_8044 = relay.not_equal(call_7987.astype('bool'), relay.reshape(var_8040.astype('bool'), relay.shape_of(call_7987))) # shape=(14, 6, 9)
output = bop_8041
output2 = bop_8044
func_8071 = relay.Function([var_8040,], output)
mod['func_8071'] = func_8071
mod = relay.transform.InferType()(mod)
var_8072 = relay.var("var_8072", dtype = "float32", shape = (14, 6, 9))#candidate|8072|(14, 6, 9)|var|float32
output = func_8071(var_8072)
func_8073 = relay.Function([var_8072], output)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8081 = relay.var("var_8081", dtype = "float64", shape = (14, 14, 13))#candidate|8081|(14, 14, 13)|var|float64
const_8082 = relay.constdtype = "float64")#candidate|8082|(14, 14, 13)|const|float64
bop_8083 = relay.floor_mod(var_8081.astype('float64'), relay.reshape(const_8082.astype('float64'), relay.shape_of(var_8081))) # shape=(14, 14, 13)
uop_8097 = relay.cos(const_8082.astype('float32')) # shape=(14, 14, 13)
output = relay.Tuple([bop_8083,uop_8097,])
output2 = relay.Tuple([bop_8083,uop_8097,])
func_8108 = relay.Function([var_8081,], output)
mod['func_8108'] = func_8108
mod = relay.transform.InferType()(mod)
mutated_mod['func_8108'] = func_8108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8109 = relay.var("var_8109", dtype = "float64", shape = (14, 14, 13))#candidate|8109|(14, 14, 13)|var|float64
func_8108_call = mutated_mod.get_global_var('func_8108')
call_8110 = func_8108_call(var_8109)
output = call_8110
func_8111 = relay.Function([var_8109], output)
mutated_mod['func_8111'] = func_8111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_8262 = relay.TupleGetItem(func_6811_call(), 0)
call_8263 = relay.TupleGetItem(func_6813_call(), 0)
var_8265 = relay.var("var_8265", dtype = "float64", shape = (24,))#candidate|8265|(24,)|var|float64
bop_8266 = relay.divide(call_8262.astype('float64'), relay.reshape(var_8265.astype('float64'), relay.shape_of(call_8262))) # shape=(24,)
bop_8269 = relay.divide(call_8263.astype('float64'), relay.reshape(var_8265.astype('float64'), relay.shape_of(call_8263))) # shape=(24,)
func_7752_call = mod.get_global_var('func_7752')
func_7755_call = mutated_mod.get_global_var('func_7755')
var_8271 = relay.var("var_8271", dtype = "uint8", shape = ())#candidate|8271|()|var|uint8
call_8270 = relay.TupleGetItem(func_7752_call(relay.reshape(var_8271.astype('uint8'), [])), 3)
call_8272 = relay.TupleGetItem(func_7755_call(relay.reshape(var_8271.astype('uint8'), [])), 3)
func_6435_call = mod.get_global_var('func_6435')
func_6438_call = mutated_mod.get_global_var('func_6438')
const_8274 = relay.const([True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False], dtype = "bool")#candidate|8274|(128,)|const|bool
call_8273 = relay.TupleGetItem(func_6435_call(relay.reshape(const_8274.astype('bool'), [8, 8, 2])), 0)
call_8275 = relay.TupleGetItem(func_6438_call(relay.reshape(const_8274.astype('bool'), [8, 8, 2])), 0)
func_7857_call = mod.get_global_var('func_7857')
func_7858_call = mutated_mod.get_global_var('func_7858')
call_8286 = relay.TupleGetItem(func_7857_call(), 0)
call_8287 = relay.TupleGetItem(func_7858_call(), 0)
output = relay.Tuple([bop_8266,call_8270,var_8271,call_8273,const_8274,call_8286,])
output2 = relay.Tuple([bop_8269,call_8272,var_8271,call_8275,const_8274,call_8287,])
func_8288 = relay.Function([var_8265,var_8271,], output)
mod['func_8288'] = func_8288
mod = relay.transform.InferType()(mod)
var_8289 = relay.var("var_8289", dtype = "float64", shape = (24,))#candidate|8289|(24,)|var|float64
var_8290 = relay.var("var_8290", dtype = "uint8", shape = ())#candidate|8290|()|var|uint8
output = func_8288(var_8289,var_8290,)
func_8291 = relay.Function([var_8289,var_8290,], output)
mutated_mod['func_8291'] = func_8291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_8303 = relay.TupleGetItem(func_6496_call(), 1)
call_8304 = relay.TupleGetItem(func_6498_call(), 1)
output = call_8303
output2 = call_8304
func_8307 = relay.Function([], output)
mod['func_8307'] = func_8307
mod = relay.transform.InferType()(mod)
output = func_8307()
func_8308 = relay.Function([], output)
mutated_mod['func_8308'] = func_8308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_8381 = relay.TupleGetItem(func_7196_call(), 0)
call_8382 = relay.TupleGetItem(func_7198_call(), 0)
uop_8393 = relay.log2(call_8381.astype('float64')) # shape=(8, 8, 2)
uop_8395 = relay.log2(call_8382.astype('float64')) # shape=(8, 8, 2)
func_7209_call = mod.get_global_var('func_7209')
func_7211_call = mutated_mod.get_global_var('func_7211')
const_8398 = relay.const([[1,7,9,4,-1,-9,-7,-5,10,-1,-9,-8,-4,-1,1,3,9,1,9,3,-10,-7,1,-9,-5,1,-5,-3,6,-7,7,8,-2,-8,-4,5,3,3,3,-4,6,-2,-8,1,9,2,10,4,9,-4,-10,9,2,7,7,4,9,-4,1,3,-5,-5,-5,6,-10,-10,-1,6,-2,9,-6,-5,-8,-4,-6,8,3,8,-2,-3,7,5,-2,-3,3,8,-6,-6,1,5,8,1,-7,-9,-5,3,8,2,-8,6,9,-3,-6,9,-9,-7,8,-8,8,5,-4,5,-8,-1,4,-10,-3,7,-3,7,1,-1,-1,-3,8,2,8,-1,-6,3,-2,-4,7,2,-2,-2,-4,-1,1,6,3,1,-7,6,-7,-5,3,3,5,-1,-6,-9,7,-7,-5,8,-1,7,-5,3,-5,10,10,-9,-9,-3,5,-7,-1,1,-9,3,-9,-10,-7,-6,-1,-10,2,-9,4,-7,-3,1,1,1,-10,2,7,6,4,6,-10,10,8,2,9,-10,8,-6,3,10,2,-5,-3,2,-4,-7,-7,-8,-6,8,2,8,1,-8,3,-8,-2,-5,7,-4,-8,-7,8,1,-8,1,-8,9,-5,4,8,3,8,-5,-5,-7,-2,9,2,5,-10,-9,5,10,6,8,-7,-4,-10,9,7,-8,10,10,7,9,2,-8,7,-7,-1,7,-7,-2,-9,2,-6,-7,-10,-6,4,6,7,-5,3,7,8,-1,-6,-3,5,5,10,8,10,-8,-3,-2,-10,5,10,7,-10,6,3,-5,9,-2,1,-6,5,-7,10,-9,10,-2,-7,-10,-7,-5,8,-3,-9,3,-4,-10,6,-7,1,-5,-3,-1,7,-9,10,7,5,4,-4,3,9,-6,3,9,3,-4,2,7,7,-4,-2,-4,2,1,8,-3,-9,3,-6,7,8,-6,-7,10,10,10,8,1,5,-5,7,-1,8,-10,6,-6,9,7,-6,9,-4,8,-4,-1,2,-1,5,-7,5,9,-7,8,-6,3,3,-8,2,8,-6,4,-4,-8,6,-3,-7,2,9,3,4,-7,-9,-1,-10,6,7,-5,4,1,-3,8,-9,3,10,-3,-1,9,-5,10,9,-3,-5,-9,-6,-8,5,6,-8,-3,-6,-3,9,8,4,1,-5,2,-7,-10,1,1,-3,3,-7,-10,-5,1,-6,-9,-10,-8,7,6,10,6,-3,1,-3,7,-1,4,-1,9,7,-10,8,-3,-7,-10,4,-2,4,-10,6,-8,6,4,-8,-5,-2,-1,4,-7,2,9,5,2,-5,-6,-2,9,-4,-3,7,-9,-6,9,-4,-10,6,-4,-3,10,-9,-10,-1,-8,3,9,-3,8,9,-9,6,3,1,4,-4,-3,-3,5,-5,10,6,9,-10,-9,4,3,-9,3,4,5,4,-10,-4,-2,9,8,-3,-7,4,3,-5,-10,-3,-4,2,4,9,6,8,-2,-2,-4,-7,-10,-8,1,-9,8,7,10,3,-7,7,-8,3,-4,2,10,9,-2,-2,2,5,-3,4,-2,-7,-1,-4,1,-1,-2,5,4,-3,2,-9,-7,4,9,-5,-7,1,9,9,7,-7,2,-3,7,-3,3,3,10,-2,-7,1,-9,2,-10,-8,-10,5,8,-8,-8,-5,-7,-1,-8,-6,-1,-9,-9,-8,1,-7,-4,4,-2,6,5,1,10,7,-6,-2,-9,-7,3,7,-3,6,-7,-9,1,1,7,-8,-3,-6,7,3,-1,4,8,-8,6,-10,2,-5,5,1,-7,10,5,8,3,7,4,6,3,-4,-7,3,4,-6,-4,-10,7,1,-5,3,-2,10,4,-9,1,7,8,9,9,-10,2,4,-1,9,-5,1,-3,-5,-6,-5,8,5,3,9,-9,5,-10,-9,5,4,-10,-5,-8,1,7,-1,7,2,-1,-2,-1,-10,-7,1,-6,-9,-1,-9,-7,3,6,8,1,3,-2,-2,5,1,2,-3,-6,-5,1,6,-6,-3,-10,-6,-2,4,-6,-6,-8,-3,10,9,2,-4,9,2,-6,8,7,-8,-4,4,7,-1,10,5,1,5,9,-6,-7,6,5,-9,1,-3,10,-3,1,3,-7,9,-4,3,4,-4,10,-4,5,9,-3,-10,-4,-9,6,-4,10,-5,10,8,7,-6,-1,6,-6,-3,-9,-1,6,10,3,7,9,-8,9,-4,-7,5,-1,-3,6,-5,8,10,7,8,-5,-3,-6,-5,6,-1,-8,-10,-5,-5,10,-6,7,4,7,3,-6,6,9,7,9,-8,-2,7,1,8,5,2,1,5,8,10,6,6,-7,1,-10,-4,-7,-10,6,-10,4],[-2,-7,-5,-7,-9,-2,10,-9,-7,2,-1,-6,-7,-1,-3,8,1,2,-2,-2,-4,9,8,-7,-7,6,-7,-1,5,1,4,-1,9,-3,-4,6,-3,-4,-3,4,9,9,4,-10,9,-7,3,10,-5,2,9,-7,-3,1,-1,7,9,-8,6,-4,-9,10,10,3,4,-5,5,5,-5,5,3,8,8,5,-3,-8,9,-6,7,-6,-7,4,-5,2,-5,-9,-9,-10,-4,2,3,10,8,-5,-5,8,4,-6,2,10,-4,-8,6,1,-5,7,-3,-4,-5,7,-9,-4,8,-3,-9,-10,4,6,-7,9,-2,-4,5,5,6,-2,9,-10,-7,9,-8,8,6,3,3,-5,-10,9,6,7,-7,9,-8,-5,3,-2,-1,-4,-6,-10,9,-5,6,-6,9,-6,-4,-2,-3,-7,1,9,10,8,-8,-7,6,6,6,-4,-5,1,3,-2,-2,-5,10,6,-5,8,-3,-10,6,10,-8,-9,3,2,5,6,-7,-2,-5,7,-1,5,9,-4,1,-9,6,-2,7,-9,-2,-2,6,-3,10,-2,4,-6,3,8,-4,5,-6,-1,4,7,-4,4,1,-10,-9,4,10,-6,2,10,-4,7,1,3,9,1,7,1,3,2,6,5,8,10,9,9,3,1,6,-3,-2,-8,10,-10,3,-6,10,4,7,1,1,7,-5,-2,-2,8,9,-6,7,5,8,6,5,7,3,-7,-7,2,3,-5,-9,1,-10,9,3,-7,7,10,-3,-5,-4,-3,-7,2,-1,6,-1,9,4,-9,4,-7,-9,-5,3,-1,4,-5,-10,-2,-4,-10,5,-6,-9,-5,1,6,-8,-2,-4,-9,8,-9,1,-9,2,-1,1,8,-4,-7,-5,-3,-5,-6,-8,7,-9,4,10,8,-5,10,8,-9,3,7,8,-2,7,-2,-3,2,-5,-5,-2,-8,-1,4,-8,-4,-9,-8,-3,10,10,-6,2,6,-6,4,-1,-4,3,-4,1,2,8,-6,2,-10,9,7,4,1,-4,8,7,10,8,-1,-1,-8,6,-8,10,-3,4,2,-1,9,-8,-3,-9,-5,6,-7,-10,5,-6,6,-1,-7,-9,4,-2,7,10,-2,-2,7,4,6,6,2,6,-10,-7,3,-5,-5,-2,6,-4,-10,-7,6,-8,5,-6,9,-5,9,7,-7,1,-9,6,-2,6,-9,-10,4,9,-3,6,-9,1,2,-1,10,3,-2,7,-1,9,-5,5,6,-9,-1,3,6,7,1,7,10,3,10,8,-2,-1,4,6,-10,-1,10,10,-7,3,6,1,1,6,3,-3,10,4,2,8,-5,-4,2,-2,-2,8,7,2,3,-1,5,-3,-10,1,-9,3,-7,-10,2,9,-6,-1,-6,3,4,-6,-8,4,-8,-7,3,10,8,8,-3,-1,1,4,-7,-7,-8,10,3,-3,10,-7,-1,-10,8,-6,-4,-2,1,4,-10,10,5,-6,-5,-9,-9,7,-3,9,-6,4,2,-9,-9,-4,6,-9,-6,-1,-3,6,-7,4,-10,1,5,-8,-9,-1,-1,-9,9,-10,-6,7,-1,3,-6,8,-7,-5,-4,1,-1,-4,-9,1,-5,-6,4,-10,6,3,-10,1,-9,10,-1,-9,-7,-5,9,8,-9,-5,-6,7,8,-6,-10,6,3,-3,8,7,6,-4,9,9,4,10,10,-4,7,7,-6,7,10,4,-1,-5,-6,-3,1,-5,-5,7,-4,4,-10,1,3,-5,-7,2,3,-8,-6,-4,-1,4,-5,1,-3,-3,7,8,3,4,-4,9,-2,6,7,7,-8,6,-5,5,4,-10,5,1,-3,7,9,-5,-4,-1,1,-9,-10,-4,-3,-2,8,-6,-1,-8,-1,-2,-2,1,9,7,1,-1,-2,-7,-4,2,2,5,-4,-6,2,5,-6,-2,-8,7,6,2,10,4,8,-8,-5,-4,9,-6,-1,-5,-7,3,5,-7,-5,10,10,-1,-4,-1,-3,-10,6,-1,6,3,2,-1,6,-9,-8,-8,7,-9,10,9,-6,6,-2,-10,-5,-4,-10,6,-4,9,-4,-2,-8,-1,2,2,7,-1,-8,-9,-3,2,7,-7,2,3,-3,-8,-6,9,-9,8,-10,-6,10,-1,-8,4,2,-4,-9,2,-2,3,1,7,-5,-5,6,5,-7,-6,-1,10,-2,-8,3,-3,2,4,9,1,-8,1,10,-9,4,3,6,9,-10,-10,-8,-8,2,4,-5,7,3,-9,-4,9,-4,5,6,9,-4,-8,4,3,-2,-7,-3,-2,2,9,-2,8,-1,-7,7,-2,6,3,10,8,-4,6,-1,4,-2,1,-1,9,10]], dtype = "uint16")#candidate|8398|(2, 880)|const|uint16
call_8397 = func_7209_call(relay.reshape(const_8398.astype('uint16'), [16, 11, 10]))
call_8399 = func_7209_call(relay.reshape(const_8398.astype('uint16'), [16, 11, 10]))
output = relay.Tuple([uop_8393,call_8397,const_8398,])
output2 = relay.Tuple([uop_8395,call_8399,const_8398,])
func_8401 = relay.Function([], output)
mod['func_8401'] = func_8401
mod = relay.transform.InferType()(mod)
output = func_8401()
func_8402 = relay.Function([], output)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8468 = relay.var("var_8468", dtype = "float32", shape = (10, 9, 4))#candidate|8468|(10, 9, 4)|var|float32
uop_8469 = relay.log(var_8468.astype('float32')) # shape=(10, 9, 4)
output = relay.Tuple([uop_8469,])
output2 = relay.Tuple([uop_8469,])
func_8472 = relay.Function([var_8468,], output)
mod['func_8472'] = func_8472
mod = relay.transform.InferType()(mod)
mutated_mod['func_8472'] = func_8472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8473 = relay.var("var_8473", dtype = "float32", shape = (10, 9, 4))#candidate|8473|(10, 9, 4)|var|float32
func_8472_call = mutated_mod.get_global_var('func_8472')
call_8474 = func_8472_call(var_8473)
output = call_8474
func_8475 = relay.Function([var_8473], output)
mutated_mod['func_8475'] = func_8475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_8485 = relay.TupleGetItem(func_7800_call(), 0)
call_8486 = relay.TupleGetItem(func_7801_call(), 0)
func_6837_call = mod.get_global_var('func_6837')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_8492 = func_6837_call()
call_8493 = func_6837_call()
func_5543_call = mod.get_global_var('func_5543')
func_5547_call = mutated_mod.get_global_var('func_5547')
var_8501 = relay.var("var_8501", dtype = "uint16", shape = (33,))#candidate|8501|(33,)|var|uint16
var_8502 = relay.var("var_8502", dtype = "uint16", shape = (396,))#candidate|8502|(396,)|var|uint16
call_8500 = relay.TupleGetItem(func_5543_call(relay.reshape(var_8501.astype('uint16'), [3, 1, 11]), relay.reshape(var_8502.astype('uint16'), [3, 12, 11]), ), 1)
call_8503 = relay.TupleGetItem(func_5547_call(relay.reshape(var_8501.astype('uint16'), [3, 1, 11]), relay.reshape(var_8502.astype('uint16'), [3, 12, 11]), ), 1)
func_7209_call = mod.get_global_var('func_7209')
func_7211_call = mutated_mod.get_global_var('func_7211')
var_8509 = relay.var("var_8509", dtype = "uint16", shape = (1760,))#candidate|8509|(1760,)|var|uint16
call_8508 = func_7209_call(relay.reshape(var_8509.astype('uint16'), [16, 11, 10]))
call_8510 = func_7209_call(relay.reshape(var_8509.astype('uint16'), [16, 11, 10]))
output = relay.Tuple([call_8485,call_8492,call_8500,var_8501,var_8502,call_8508,var_8509,])
output2 = relay.Tuple([call_8486,call_8493,call_8503,var_8501,var_8502,call_8510,var_8509,])
func_8516 = relay.Function([var_8501,var_8502,var_8509,], output)
mod['func_8516'] = func_8516
mod = relay.transform.InferType()(mod)
var_8517 = relay.var("var_8517", dtype = "uint16", shape = (33,))#candidate|8517|(33,)|var|uint16
var_8518 = relay.var("var_8518", dtype = "uint16", shape = (396,))#candidate|8518|(396,)|var|uint16
var_8519 = relay.var("var_8519", dtype = "uint16", shape = (1760,))#candidate|8519|(1760,)|var|uint16
output = func_8516(var_8517,var_8518,var_8519,)
func_8520 = relay.Function([var_8517,var_8518,var_8519,], output)
mutated_mod['func_8520'] = func_8520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_8553 = relay.TupleGetItem(func_7903_call(), 0)
call_8554 = relay.TupleGetItem(func_7905_call(), 0)
output = call_8553
output2 = call_8554
func_8560 = relay.Function([], output)
mod['func_8560'] = func_8560
mod = relay.transform.InferType()(mod)
output = func_8560()
func_8561 = relay.Function([], output)
mutated_mod['func_8561'] = func_8561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_8571 = relay.TupleGetItem(func_7903_call(), 0)
call_8572 = relay.TupleGetItem(func_7905_call(), 0)
output = call_8571
output2 = call_8572
func_8581 = relay.Function([], output)
mod['func_8581'] = func_8581
mod = relay.transform.InferType()(mod)
mutated_mod['func_8581'] = func_8581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8581_call = mutated_mod.get_global_var('func_8581')
call_8582 = func_8581_call()
output = call_8582
func_8583 = relay.Function([], output)
mutated_mod['func_8583'] = func_8583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8560_call = mod.get_global_var('func_8560')
func_8561_call = mutated_mod.get_global_var('func_8561')
call_8635 = func_8560_call()
call_8636 = func_8560_call()
output = relay.Tuple([call_8635,])
output2 = relay.Tuple([call_8636,])
func_8651 = relay.Function([], output)
mod['func_8651'] = func_8651
mod = relay.transform.InferType()(mod)
output = func_8651()
func_8652 = relay.Function([], output)
mutated_mod['func_8652'] = func_8652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_8667 = relay.TupleGetItem(func_6533_call(), 2)
call_8668 = relay.TupleGetItem(func_6535_call(), 2)
output = relay.Tuple([call_8667,])
output2 = relay.Tuple([call_8668,])
func_8678 = relay.Function([], output)
mod['func_8678'] = func_8678
mod = relay.transform.InferType()(mod)
output = func_8678()
func_8679 = relay.Function([], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8307_call = mod.get_global_var('func_8307')
func_8308_call = mutated_mod.get_global_var('func_8308')
call_8683 = func_8307_call()
call_8684 = func_8307_call()
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
var_8692 = relay.var("var_8692", dtype = "int32", shape = ())#candidate|8692|()|var|int32
var_8693 = relay.var("var_8693", dtype = "int32", shape = (160,))#candidate|8693|(160,)|var|int32
call_8691 = func_553_call(relay.reshape(var_8692.astype('int32'), []), relay.reshape(var_8693.astype('int32'), [10, 1, 16]), )
call_8694 = func_553_call(relay.reshape(var_8692.astype('int32'), []), relay.reshape(var_8693.astype('int32'), [10, 1, 16]), )
output = relay.Tuple([call_8683,call_8691,var_8692,var_8693,])
output2 = relay.Tuple([call_8684,call_8694,var_8692,var_8693,])
func_8733 = relay.Function([var_8692,var_8693,], output)
mod['func_8733'] = func_8733
mod = relay.transform.InferType()(mod)
mutated_mod['func_8733'] = func_8733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8733_call = mutated_mod.get_global_var('func_8733')
var_8735 = relay.var("var_8735", dtype = "int32", shape = ())#candidate|8735|()|var|int32
var_8736 = relay.var("var_8736", dtype = "int32", shape = (160,))#candidate|8736|(160,)|var|int32
call_8734 = func_8733_call(var_8735,var_8736,)
output = call_8734
func_8737 = relay.Function([var_8735,var_8736,], output)
mutated_mod['func_8737'] = func_8737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_8758 = func_6366_call()
call_8759 = func_6366_call()
output = call_8758
output2 = call_8759
func_8787 = relay.Function([], output)
mod['func_8787'] = func_8787
mod = relay.transform.InferType()(mod)
mutated_mod['func_8787'] = func_8787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mutated_mod.get_global_var('func_8787')
call_8788 = func_8787_call()
output = call_8788
func_8789 = relay.Function([], output)
mutated_mod['func_8789'] = func_8789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6837_call = mod.get_global_var('func_6837')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_8839 = func_6837_call()
call_8840 = func_6837_call()
output = call_8839
output2 = call_8840
func_8872 = relay.Function([], output)
mod['func_8872'] = func_8872
mod = relay.transform.InferType()(mod)
mutated_mod['func_8872'] = func_8872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8872_call = mutated_mod.get_global_var('func_8872')
call_8873 = func_8872_call()
output = call_8873
func_8874 = relay.Function([], output)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_8900 = relay.TupleGetItem(func_6811_call(), 0)
call_8901 = relay.TupleGetItem(func_6813_call(), 0)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_8924 = relay.TupleGetItem(func_7196_call(), 0)
call_8925 = relay.TupleGetItem(func_7198_call(), 0)
output = relay.Tuple([call_8900,call_8924,])
output2 = relay.Tuple([call_8901,call_8925,])
func_8933 = relay.Function([], output)
mod['func_8933'] = func_8933
mod = relay.transform.InferType()(mod)
mutated_mod['func_8933'] = func_8933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8933_call = mutated_mod.get_global_var('func_8933')
call_8934 = func_8933_call()
output = call_8934
func_8935 = relay.Function([], output)
mutated_mod['func_8935'] = func_8935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7949_call = mutated_mod.get_global_var('func_7949')
call_9013 = func_7948_call()
call_9014 = func_7948_call()
output = relay.Tuple([call_9013,])
output2 = relay.Tuple([call_9014,])
func_9038 = relay.Function([], output)
mod['func_9038'] = func_9038
mod = relay.transform.InferType()(mod)
mutated_mod['func_9038'] = func_9038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9038_call = mutated_mod.get_global_var('func_9038')
call_9039 = func_9038_call()
output = call_9039
func_9040 = relay.Function([], output)
mutated_mod['func_9040'] = func_9040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_9053 = relay.TupleGetItem(func_7653_call(), 0)
call_9054 = relay.TupleGetItem(func_7655_call(), 0)
func_5123_call = mod.get_global_var('func_5123')
func_5126_call = mutated_mod.get_global_var('func_5126')
var_9057 = relay.var("var_9057", dtype = "uint16", shape = ())#candidate|9057|()|var|uint16
var_9058 = relay.var("var_9058", dtype = "uint16", shape = (28,))#candidate|9058|(28,)|var|uint16
call_9056 = relay.TupleGetItem(func_5123_call(relay.reshape(var_9057.astype('uint16'), []), relay.reshape(var_9058.astype('uint16'), [7, 4, 1]), ), 2)
call_9059 = relay.TupleGetItem(func_5126_call(relay.reshape(var_9057.astype('uint16'), []), relay.reshape(var_9058.astype('uint16'), [7, 4, 1]), ), 2)
output = relay.Tuple([call_9053,call_9056,var_9057,var_9058,])
output2 = relay.Tuple([call_9054,call_9059,var_9057,var_9058,])
func_9069 = relay.Function([var_9057,var_9058,], output)
mod['func_9069'] = func_9069
mod = relay.transform.InferType()(mod)
mutated_mod['func_9069'] = func_9069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9069_call = mutated_mod.get_global_var('func_9069')
var_9071 = relay.var("var_9071", dtype = "uint16", shape = ())#candidate|9071|()|var|uint16
var_9072 = relay.var("var_9072", dtype = "uint16", shape = (28,))#candidate|9072|(28,)|var|uint16
call_9070 = func_9069_call(var_9071,var_9072,)
output = call_9070
func_9073 = relay.Function([var_9071,var_9072,], output)
mutated_mod['func_9073'] = func_9073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_9078 = relay.TupleGetItem(func_7653_call(), 0)
call_9079 = relay.TupleGetItem(func_7655_call(), 0)
func_1854_call = mod.get_global_var('func_1854')
func_1858_call = mutated_mod.get_global_var('func_1858')
var_9084 = relay.var("var_9084", dtype = "float64", shape = (1950,))#candidate|9084|(1950,)|var|float64
call_9083 = relay.TupleGetItem(func_1854_call(relay.reshape(var_9084.astype('float64'), [15, 10, 13]), relay.reshape(var_9084.astype('float64'), [15, 10, 13]), ), 0)
call_9085 = relay.TupleGetItem(func_1858_call(relay.reshape(var_9084.astype('float64'), [15, 10, 13]), relay.reshape(var_9084.astype('float64'), [15, 10, 13]), ), 0)
uop_9090 = relay.log10(var_9084.astype('float32')) # shape=(1950,)
bop_9101 = relay.less_equal(uop_9090.astype('bool'), relay.reshape(var_9084.astype('bool'), relay.shape_of(uop_9090))) # shape=(1950,)
output = relay.Tuple([call_9078,call_9083,bop_9101,])
output2 = relay.Tuple([call_9079,call_9085,bop_9101,])
func_9104 = relay.Function([var_9084,], output)
mod['func_9104'] = func_9104
mod = relay.transform.InferType()(mod)
var_9105 = relay.var("var_9105", dtype = "float64", shape = (1950,))#candidate|9105|(1950,)|var|float64
output = func_9104(var_9105)
func_9106 = relay.Function([var_9105], output)
mutated_mod['func_9106'] = func_9106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_9111 = relay.TupleGetItem(func_7903_call(), 0)
call_9112 = relay.TupleGetItem(func_7905_call(), 0)
output = call_9111
output2 = call_9112
func_9116 = relay.Function([], output)
mod['func_9116'] = func_9116
mod = relay.transform.InferType()(mod)
output = func_9116()
func_9117 = relay.Function([], output)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_9161 = relay.TupleGetItem(func_7800_call(), 0)
call_9162 = relay.TupleGetItem(func_7801_call(), 0)
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_9163 = relay.TupleGetItem(func_8401_call(), 2)
call_9164 = relay.TupleGetItem(func_8402_call(), 2)
output = relay.Tuple([call_9161,call_9163,])
output2 = relay.Tuple([call_9162,call_9164,])
func_9182 = relay.Function([], output)
mod['func_9182'] = func_9182
mod = relay.transform.InferType()(mod)
mutated_mod['func_9182'] = func_9182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9182_call = mutated_mod.get_global_var('func_9182')
call_9183 = func_9182_call()
output = call_9183
func_9184 = relay.Function([], output)
mutated_mod['func_9184'] = func_9184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_9235 = relay.TupleGetItem(func_7800_call(), 0)
call_9236 = relay.TupleGetItem(func_7801_call(), 0)
func_2674_call = mod.get_global_var('func_2674')
func_2677_call = mutated_mod.get_global_var('func_2677')
const_9250 = relay.const([2.282363,4.235390,5.560868,4.933607,5.854844,3.306940,-5.496382,-9.890112,-0.350621,-3.940946,-2.080030,9.057753,6.113459,-8.814961,-9.586222,-9.890689,-1.004890,2.051870,9.444094,8.452116,9.058227,2.453467,-8.251792,1.575543,6.981222,-9.112326,-8.854177,7.173175,5.305307,-2.205308,2.698168,4.725282,6.904226,0.028889,1.271680,3.316285,2.830071,-9.766672,-1.727715,-4.992989,5.558709,7.598697,-8.666960,-3.398395,0.621006,-2.460562,2.235161,-3.510190,-9.955090,8.587318,9.312320,-2.697195,7.112248,-5.454091,-8.957446,4.271024,7.675097,7.594856,2.512219,7.570655,2.445675,8.036764,9.830922,9.639339,3.786839,9.279375,6.594276,3.593719,-3.733852,-5.609072,-3.142578,0.121811,-9.151457,-9.418869,-6.904633,-4.002312,8.896866,-7.646599,-6.188936,-3.814670,-5.863783,-0.496354,4.904340,-4.329214,7.702427,5.948434,3.428922,-7.998254,3.993709,0.282065,-1.086760,3.920204,-0.160319,3.601069,5.218972,-6.599903,7.543271,3.208102,9.174834,7.438198,-7.476797,-1.320908,8.760048,-2.443302,3.738497,-6.254661,7.949359,7.998469,5.227297,-0.044341,-7.416134,-0.761126,1.670196,0.204676,8.452491,-1.672430,4.622912,2.047208,8.103543,6.488664,-6.563478,-1.032322,-0.087164,0.389577,-2.232029,-3.791528,-9.758059,2.063151,7.087060,-6.582843,8.643140,-1.142685,-8.538822,1.840196,7.731643,-6.713801,-6.333443,-0.331187,3.472597,-0.656769,3.375239,-6.777650,1.433528,-6.887232,-7.075301,5.117305,4.766078,-6.847324,-8.567405,8.077252,1.291375,1.125320,-4.557129,-7.694469,0.723420,-9.077858,7.375817,-9.578930,-9.971906,0.782602,-2.401794,-7.769426,6.155873,6.452722,-2.615338,6.494887,-9.744342,9.729504,-2.820613,-0.673271,-4.341769,4.416945,-5.931596,-2.122767,-4.841801,6.426944,-5.971557,-4.302689,4.065193,0.261098,-4.513527,6.938329,2.760664,5.649060,-2.672906,3.757346,-1.439150,-6.797360,6.378039,3.862824,4.508086,-2.883179,-0.689754,7.208126,-3.344721,2.864393,5.074490,0.799067,4.020594,6.207394,3.908370,-6.136794,6.370445,-8.106516,0.844035,-3.092812,-5.845841,4.344873,7.944102,-4.608618,7.373425,-0.111141,-6.397988,-9.146495,-2.869575,4.012657,-9.673389,-9.416904,8.381370,-6.696390,-6.585350,2.646495,7.474190,-5.600331,5.006654,-1.288779,-3.692863,4.434083,7.098551,7.429191,4.311418,5.620849,-7.835045,2.124684,-1.494263,3.161961,-0.535849,7.571098,7.084608,-5.846997,7.367721,5.284017,5.419967,-6.068942,-1.976455,6.507261,0.836051,-7.679898,-2.391971,6.635568,7.686833,4.735994,6.234632,-9.491559,-0.976658,7.495539,3.735098,-1.408414,8.372959,2.402094,-8.965168,-7.634337,5.390033,0.437059,-6.469682,-3.277621,9.178510,-0.498495,9.853579,5.234173,7.200207,0.620358,-7.750137,-6.940161,-3.945778,2.409484,-5.536338,-9.811300,-4.928733,8.622864,-6.054398,6.182856,1.498341,-7.231559,-0.207341,5.211560,-5.047371,-0.238794,-5.998293,9.294865,4.370609,3.891049,-1.779251,4.716425,1.032248,8.049880,9.438393,-4.350176,-8.738636,2.642428,-8.015795,0.974895,2.187094,6.317028,-1.236940,-1.605001,-4.381666,9.618067,-2.089259,9.289308,9.758572,4.371957,3.060167,9.407596,0.047119,-9.498129,7.424179,-1.727407,-3.675418,-9.716658,-2.978954,-4.007081,-4.564101,8.191253,-9.627109,2.256510,-7.650375,-3.444211,-0.597832,9.068756,-2.257417,9.698704,4.550205,-9.562872,-8.126943,-5.485512,-1.129046,7.344210,-8.162241,8.963226,6.379236,-2.438587,2.140875,-0.822985,4.924397,8.383656,5.570872,1.811096,2.979431,-2.939856,9.265440,-9.645696,2.710941,-2.379407,9.761909,7.971015,-8.711255,-6.529193,-8.618419,3.083281,-1.808321,-8.124800,-6.768534,2.456366,5.969222,9.193097,-9.148355,-9.451043,3.953258,-2.552620,-7.457639,9.501887,8.292989,5.307207,-7.615230,9.357446,3.346278,3.677958,-6.617510,8.528833,-8.245724,-3.086637,1.695975,1.525381,9.022349,9.245451,9.842186,4.292194,-9.751009,-2.251222,1.706691,9.891382,1.264695,-8.269330,4.680460,-4.791768,-6.040606,5.816861,9.460103,-7.500516,-8.713810,4.185744,4.977800,-8.369495,7.765769,-4.155520,5.188454,5.872424,-8.976331,-6.763553,-7.179812,-4.254532,1.227354,-1.262687,-6.703770,7.539117,-9.248046,-9.980685,4.268555,8.635620,6.536401,-5.485503,4.878190,-0.486548,3.161762,-0.645730,1.913002,4.237156,-2.968195,2.753784,-1.402127,7.343533,0.102007,-4.726504,-4.184928,4.754297,-1.001358,-2.192318,-2.008833,8.052152,5.820667,1.218752,-6.601350,4.379085,-3.974176,5.775718,-9.450215,1.999283,-4.377804,-5.917414,8.635561,7.720027,0.879988,0.200096,-9.473131,-9.944075,-8.268439,-6.067923,-4.838662,0.867381,-9.514242,9.056875,6.555572,8.518540,4.112408,9.945611,8.870163,-4.593039,-0.675093,-3.095812,-7.288007,5.323004,-8.493955,-9.731435,2.284134,1.154589,-3.614841,-6.094449,2.748955,-3.119117,-7.068651,3.379946,-3.309770,-0.823031,-3.761931,2.683197,6.803775,5.401874,-1.613580,-8.153078,-7.064621,2.784101,2.012926,-3.785259,4.228648,1.916342,-6.805052,-2.788658,-1.879703,-2.709395,2.050254,6.099810,-3.710493,3.596711,-4.469527,-3.828260,3.242381,-4.938204,-2.187595,-1.025578,5.382602,1.100733,-5.480581,-2.116878,-9.840992,6.106909,-3.110423,9.257978,-3.980366,5.025070,-9.046618,1.290014,9.295673,-6.710096,-2.597950,-3.331538,-4.033988,-8.450323,3.444584,2.185399,4.854916,8.943294,-7.882458,-2.151273,4.665404,3.859707,8.810876,-1.299335,-9.154472,-9.287000,3.932275,-6.829381,-9.419198,-1.919825,2.245219,-2.815481,0.730476,-2.471165,-8.563401,-7.685147,-4.627450,5.345043,-7.465439,9.103461,9.548414,5.030737,-2.923892,-5.210535,-8.993394,-2.870547,8.588090,-4.371502,-1.572067,-7.803051,4.128001,4.592011,-4.335303,-9.359586,-3.160638,-4.444123,1.920879,-7.928485,8.650622,5.880373,2.673186,-3.490462,-2.551161,2.953731,2.829214,1.404558,-9.354468,4.982189,8.851394,6.703431,6.948886,9.013129,-3.232594,-4.408990,3.330954,1.335027,1.143695,7.806438,6.377602,-0.841992,-9.573663,8.171928,-7.435188,1.254853,-5.996995,4.532381,-6.228001,6.098768,-8.918330,3.940303,1.022503,3.170443,-2.840953,-8.326434,9.730186,-2.374853,-6.774999,2.113478,-4.357127,-8.252253,1.311300,-2.403702,6.180369,-7.069785,4.277492,0.623003,4.807493,5.251274,2.960260,4.158523,9.185180,-8.447296,3.664795,-5.283161,-2.842911,7.732740,3.204589,-6.334858,2.336100,-6.157057,-3.207073,4.391949,-1.601137,1.301198,-9.682149,8.897027,-5.456542,4.025352,8.737060,-8.674413,-9.759934,4.640103,7.714993,-3.267322,4.985552,-7.515998,-7.771857,0.574142,-4.723716,-4.015047,2.688031,-6.375356,8.932798,0.649907,-0.818971,1.703624,0.310850,-1.683042,-9.108708,7.580163,9.329632,7.580509,4.828018,1.210484,6.878253,-1.046585,8.750077,-1.982192,-8.934591,1.555979,5.824015,-1.071942,1.106968,-6.240426,8.345652,6.266667,9.194174,1.316532,1.760047,-9.798815,-0.815074,7.562215,-6.217691,2.838213,-3.477146,9.605599,0.323828,-1.801869,-4.865552,-0.574528,3.634161,-6.992087,-3.980646,7.578497,-4.911510,-9.178921,5.788366,-3.456387,1.238254,-3.211862,-8.830718,-4.107626,3.629216,8.211795,5.755897,-1.442646,0.786046,1.093757,-1.801267,-1.911858,-2.074650,5.016340,-0.724463,2.540835,1.767410,5.702999,2.991894,0.117848,7.220900,-7.414316,-7.398589,4.253195,-2.264590,7.347810,8.864531,3.608216,-2.372723,6.148015,6.466479,1.602827,0.534647,-6.175051,-2.910522,8.085360,-9.415242,-5.603891,-0.140087,8.508477,-9.718215,7.168089,-7.634791,9.430959,-2.866271,3.624660,-5.410526,-4.674955,-8.471777,-0.850816,1.876902,-3.710856,-6.830810,-6.638977,-3.040841,2.668594,5.820463,-6.434092,9.548799,-9.876952,8.338183,3.310334,-4.678017,9.000294,4.071627,7.002654,5.318214,-5.282572,-7.325634,1.309733,-6.485000,8.022729,6.978165,1.630428,-5.127658,-7.681289,-2.824637,9.746254,-0.866485,9.602936,-0.461808,-7.124155,-3.107000,1.089289,9.498948,2.354217,6.541196,6.144368,-6.539309,-3.776612,4.929036,-2.349044,-8.816750,-0.431417,-8.474020,-7.916688,4.742900,1.242711,-5.536437,-2.927763,3.059605,3.529158,2.029118,3.803453,-4.870041,-0.792699,9.892467,8.858541,-8.422559,-5.600585,6.611337,4.586238,8.237667,-7.772427,-0.298589,7.822401,-8.506639,-8.938210,-8.033550,1.196524,2.031272,-1.493507,6.678364,5.334786,0.909508,-3.956733,-4.958708,0.718714,-0.339431,7.293125,6.980041,-7.171220,-5.795587,8.734158,2.732206,2.859933,-0.881737,3.458208,9.218345,9.793684,-7.844477,1.491839,2.067099,-9.685016,-3.123995,-7.451814,-2.594831,4.036080,-5.005596,9.715788,6.444202,-3.180748,-1.918000,7.236345,-9.696093,4.489385,6.139432,-5.580383,9.054702,-7.631089,-7.005380,4.486154,-3.690691,6.967421,2.690885,-1.734329,9.546697,-9.941245,-4.940081,1.703952,-5.674260,1.987500,8.434452,6.815263,-9.320936,-0.904628,-9.326827,7.508463,-0.307588,8.031364,-2.797404,7.164326,8.048954,3.032105,0.750743,-1.181768,3.447199,6.846943,1.726185,-0.056904,0.072373,5.734230,-8.277904,-2.087633,8.221149,4.496616,8.893510,-7.916778,-2.888673,-6.838488,-8.709718,-1.151957,-5.785413,8.792268,-1.198392,5.345507,-1.580971,4.885423,9.315791,-7.390141,-6.794333,-0.200449,-0.702891,-5.929519,1.234599,-8.416973,7.431456,4.149915,3.031994,-6.698214,-1.737882,9.532149,-6.029154,-3.762948,-4.559281,-8.654884,-0.156321,-7.266950,9.336025,1.061687,3.265256,2.642808,-2.052786,-8.261622,2.202941,2.873417,-8.124178,-8.896014,-2.184571,-5.200291,6.069261,7.780713,-8.360071,-9.646453,-4.704120,-4.517199,-2.634904,-4.550546,-3.209686,-1.572323,0.278950,-3.414793,-0.307121,-7.831064,9.731614,4.381745,-4.557171,-0.921435,-4.529349,-3.216846,-3.907732,-5.504665,-0.064019,-8.132827,3.458308,-4.062415,-7.267586,-4.188379,-8.485581,9.242534,8.189597,-4.662402,4.864433,-6.315475,-0.171976,-4.074444,8.236663,5.941860,-9.417269,7.868214,-7.667036,-3.343314,-3.411209,0.431129,-3.491874,-0.935487,6.156953,2.226944,1.925694,-3.395689,-0.953415,-8.305360,2.662181,-2.033788,3.304332,4.681842,4.163504,5.425502,-2.968289,-3.638487,8.825260,-5.797879,-0.283445,-1.125132,-2.273339,9.319662,1.385352,-4.550315,9.604407,-3.371565,-6.913269,-7.353163,-3.097883,9.550410,-8.955097,6.431605,-0.608969,-9.664154,6.604171,-3.163030,8.195269,-5.938276,-2.560397,1.937014,3.658537,-3.504055,6.006304,-4.759285,-2.593018,-0.691636,3.845072,0.680466,0.779638,-7.635732,-3.552433,-3.402649,-3.398156,-7.973066,-3.337006,-6.170154,-8.014019,7.610477,0.730660,4.771399,-2.573401,-0.350493,5.100311,1.737149,8.744079,4.878248,7.656803,5.884115,-5.806849,-1.685021,2.699678,6.619181,3.482134,4.345806,-5.969826,9.393080,-3.781756,-8.967117,5.413168,0.558695,-4.017945,-0.154041,-9.665759,4.695449,9.451424,1.676474,3.161480,-5.378969,-3.919942,2.853975,-8.159009,9.139671,2.995121,-1.479039,1.915865,8.136477,-4.624413,4.893913,-1.541302,-3.355451,-0.907889,-7.572491,-6.895549,0.940173,6.202656,2.896386,5.399426,-8.024648,-5.640546,0.280416,-7.934123,5.213485,-2.721952,-1.626171,-1.324214,-3.518467,-4.484483,-2.121905,-0.784019,0.217777,-7.363612,1.631427,9.700409,-1.552098,1.035659,-7.318732,2.503296,-5.264940,-5.371686,-4.207114,0.960513,-6.671292,7.566263,-9.875520,-9.698084,4.018012,-9.010545,-0.350996,6.185334,-1.710242,-6.110413,-2.009169,-5.728171,4.431657,5.698272,9.705362,-6.709330,9.982204,-8.870658,2.739523,9.518746,-7.590378,-8.194507,-0.048283,9.722935,-6.702803,7.493890,5.401250,3.259793,-1.608432,-3.487325,-6.363254,6.709200,3.778657,5.263798,-5.975734,5.061444,1.218277,2.885217,5.674628,-8.381334,-5.043680,1.078760,7.287542,-7.892924,9.448810,-5.096234,-7.234919,8.600035,2.863852,-9.918300,-7.382714,-3.503045,9.488935,8.816683,6.345687,-9.528489,1.646602,8.358709,6.527908,-4.861085,5.286826,-9.567428,4.929197,6.031429,-5.246563,-2.988420,9.801620,-5.907453,6.803634,-3.922136,1.676909,-3.456042,-1.767316,-3.856939,-5.238943,-0.100260,7.156504,1.543668,8.358067,4.116555,-5.366218,-2.523261,7.479930,8.509757,-4.310440,4.887781,-8.364137,-9.795405,3.783794,-4.177226,1.118611,9.011342,6.306930,6.331736,3.582723,3.252528,7.320672,-5.820108,-5.524311,1.774619,4.950706,1.438333,-2.803346,-3.465385,-3.402622,4.875703,5.403720,-0.469398,9.391834,4.612289,-2.629706,0.498180,-1.149140,-2.324821,7.250883,0.564311,-4.348920,-3.890130,-4.160900,8.118900,-1.867953,3.345398,1.784429,-3.235004,3.943586,-6.956667,-6.769091,3.099640,8.266429,-3.821771,2.882915,6.212730,-3.663305,6.914306,-4.751390,8.821779,4.327219,-9.295765,-3.048196,-5.708803,2.158978,4.264379,-9.895911,-4.020794,0.825015,-4.019052,6.120575,-2.976004,3.306380,-8.180441,-9.155429,-7.605716,-5.617109,6.137361,-0.573029,9.568544,-6.159734,5.775238,8.331491,-8.244686,-5.666629,-1.627474,-3.530805], dtype = "float32")#candidate|9250|(1280,)|const|float32
call_9249 = func_2674_call(relay.reshape(const_9250.astype('float32'), [5, 16, 16]))
call_9251 = func_2674_call(relay.reshape(const_9250.astype('float32'), [5, 16, 16]))
output = relay.Tuple([call_9235,call_9249,const_9250,])
output2 = relay.Tuple([call_9236,call_9251,const_9250,])
func_9252 = relay.Function([], output)
mod['func_9252'] = func_9252
mod = relay.transform.InferType()(mod)
output = func_9252()
func_9253 = relay.Function([], output)
mutated_mod['func_9253'] = func_9253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mod.get_global_var('func_7032')
func_7033_call = mutated_mod.get_global_var('func_7033')
call_9273 = relay.TupleGetItem(func_7032_call(), 0)
call_9274 = relay.TupleGetItem(func_7033_call(), 0)
output = call_9273
output2 = call_9274
func_9275 = relay.Function([], output)
mod['func_9275'] = func_9275
mod = relay.transform.InferType()(mod)
output = func_9275()
func_9276 = relay.Function([], output)
mutated_mod['func_9276'] = func_9276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_9301 = relay.TupleGetItem(func_6707_call(), 0)
call_9302 = relay.TupleGetItem(func_6709_call(), 0)
func_8071_call = mod.get_global_var('func_8071')
func_8073_call = mutated_mod.get_global_var('func_8073')
var_9313 = relay.var("var_9313", dtype = "float32", shape = (18, 42))#candidate|9313|(18, 42)|var|float32
call_9312 = func_8071_call(relay.reshape(var_9313.astype('float32'), [14, 6, 9]))
call_9314 = func_8071_call(relay.reshape(var_9313.astype('float32'), [14, 6, 9]))
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
call_9322 = relay.TupleGetItem(func_5000_call(relay.reshape(call_9312.astype('float32'), [14, 6, 9])), 0)
call_9323 = relay.TupleGetItem(func_5002_call(relay.reshape(call_9312.astype('float32'), [14, 6, 9])), 0)
output = relay.Tuple([call_9301,call_9312,var_9313,call_9322,])
output2 = relay.Tuple([call_9302,call_9314,var_9313,call_9323,])
func_9342 = relay.Function([var_9313,], output)
mod['func_9342'] = func_9342
mod = relay.transform.InferType()(mod)
mutated_mod['func_9342'] = func_9342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9343 = relay.var("var_9343", dtype = "float32", shape = (18, 42))#candidate|9343|(18, 42)|var|float32
func_9342_call = mutated_mod.get_global_var('func_9342')
call_9344 = func_9342_call(var_9343)
output = call_9344
func_9345 = relay.Function([var_9343], output)
mutated_mod['func_9345'] = func_9345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_9384 = relay.TupleGetItem(func_7273_call(), 5)
call_9385 = relay.TupleGetItem(func_7275_call(), 5)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_9396 = relay.TupleGetItem(func_7273_call(), 3)
call_9397 = relay.TupleGetItem(func_7275_call(), 3)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
call_9416 = relay.TupleGetItem(func_5000_call(relay.reshape(call_9396.astype('float32'), [14, 6, 9])), 0)
call_9417 = relay.TupleGetItem(func_5002_call(relay.reshape(call_9396.astype('float32'), [14, 6, 9])), 0)
output = relay.Tuple([call_9384,call_9396,call_9416,])
output2 = relay.Tuple([call_9385,call_9397,call_9417,])
func_9434 = relay.Function([], output)
mod['func_9434'] = func_9434
mod = relay.transform.InferType()(mod)
mutated_mod['func_9434'] = func_9434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9434_call = mutated_mod.get_global_var('func_9434')
call_9435 = func_9434_call()
output = call_9435
func_9436 = relay.Function([], output)
mutated_mod['func_9436'] = func_9436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_9468 = relay.TupleGetItem(func_6496_call(), 0)
call_9469 = relay.TupleGetItem(func_6498_call(), 0)
func_7496_call = mod.get_global_var('func_7496')
func_7500_call = mutated_mod.get_global_var('func_7500')
const_9489 = relay.const([False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False], dtype = "bool")#candidate|9489|(768,)|const|bool
const_9490 = relay.const([5.680801,7.414535,8.661073,-1.007558,5.004649,-3.383863,5.345796,-0.316757,2.358045,-8.176951,8.953150,-4.710890,-1.922895,-4.855677,-5.748072,-4.916138,8.734039,3.586105,-4.244556,-9.866422,-4.941287,3.830452,-7.814926,-9.110278,2.192409,-0.059071,-2.168093,-2.981666,-8.524461,-4.416676,-4.937853,-0.023281,-2.670988,0.090394,3.722916,9.175291,-0.187727,7.427505,-9.406235,-5.322659,-1.722189,-7.332836,4.853595,-7.070028,5.442471,-3.413485,6.777374,-4.990849,-0.882937,-4.622689,5.837992,0.719525,-3.260729,-5.820661,1.512928,-0.582260,2.573170,-3.968878,5.175616,-7.293959,8.772724,4.007731,6.909756,-1.041970,5.282011,6.129795,-9.519497,-8.653854,-2.097421,-4.961575,2.326354,9.579461,9.776076,7.902835,-3.951056,-6.574414,9.519184,-0.119998,4.698457,-4.165665,8.209819,2.055240,9.215470,-4.429749,-4.752768,0.519375,-7.418919,-1.247256,-0.957885,-2.697752,4.754434,-7.370697,-8.884105,7.514011,3.403050,-9.367869,2.729464,5.249134,7.306207,-4.049950,-7.258147,6.043202,2.413132,-5.572339,-1.922495,-2.743155,1.101919,-6.621825,-0.587835,4.603136,6.003456,-1.742754,0.828192,9.460690,-3.239167,-1.687667,6.964436,6.216411,6.383803,-3.153866,-3.795197,2.072968,2.506991,-5.185724,8.899416,-6.583636,7.112565,-7.920477,-2.205044,-5.176280,9.651248,6.658198,-2.678379,9.386797,-0.807507,6.784870,2.523769,8.105480,-8.109908,-4.249708,4.425311,6.821701,5.780559,-5.905783,4.185787,-0.253077,2.477401,-4.200131,-8.068455,-8.377676,3.822845,-8.918233,-0.575109,-8.446515,6.601829,1.670406,5.331562,9.960867,-6.906546,-5.725142,-3.583275,-8.751056,-0.378248,-1.468732,7.921488,3.004418,-9.972929,3.838385,2.389610,-6.274342,-3.482691,-8.363596,-2.943549,-1.447018,8.433029,-0.009281,-1.608364,3.804431,4.968457,6.696307,-6.579547,-0.559608,-4.416798,-2.351440,6.265274,-6.158565,-8.428566,0.754785,9.961608,7.998360,-0.128118,-7.998519,-4.510494,0.332200,4.719825,-0.436672,6.581913,8.546581,-7.459358,-2.977874,-3.729788,9.501914,2.343625,8.187645,3.297305,8.154189,-3.077319,-9.270198,2.181868,2.367270,-6.565911,6.549851,-6.608255,-3.484890,-9.130359,-1.194888,9.880055,7.025307,-7.379080,0.927409,7.278521,0.711398,5.515369,-4.687700,7.371234,6.144341,-2.313087,3.707682,2.868425,2.761227,-7.548648,-6.094833,-5.084641,-6.439266,-7.133776,-1.187338,-8.919155,-3.859805,2.119872,3.793715,-0.322332,-6.278267,6.916253,5.600062,1.205432,-0.788003,-2.303553,-8.395518,-6.306679,3.142645,-5.659026,-1.463236,8.515335,-8.114559,6.778371,6.422690,2.033122,-5.914328,4.342581,3.454012,6.324731,9.400421,9.838178,-6.318783,-6.009882,-7.465308,6.249616,-3.944053,0.709942,6.497115,-1.256707,-6.755135,-0.872454,-3.254928,-2.155776,2.998160,0.930294,4.932794,-0.673279,-1.546350,9.994282,0.486418,7.997949,4.212091,2.547187,6.983512,0.663847,9.821330,5.265451,-9.846442,7.333658,8.995584,-4.381579,9.435451,-1.787766,1.181084,0.505211,-1.832416,-5.496778,6.065827,-3.037465,4.440685,5.693272,7.545801,-6.267900,-1.135968,6.709170,-8.835135,6.773128,-9.788387,1.028698,4.381672,7.161243,0.599770,-7.608815,7.299696,-7.338478,-2.464140,4.929329,-2.295507,7.527804,3.795900,-3.929126,-1.232807,-9.045015,1.996038,2.293870,-1.739521,-7.765746,-3.840695,-2.389753,1.112684,0.086233,-2.390993,5.455224,-4.240343,-3.127223,-9.291096,-3.923471,-0.805275,1.831083,-8.952808,-0.024992,8.870678,3.140765,6.854613,8.474366,-7.684068,1.973659,3.044684,8.937638,2.629760,-9.136126,-1.211279,4.326766,7.045884,-3.113709,3.682952,-1.814564,6.450439,-2.444630,6.873649,6.727297,-6.623362,3.783274,2.798104,-7.082141,-2.037058,-5.601998,5.510805,1.872028,6.329172,-4.115175,-9.518733,7.205067,-0.915739,4.457183,-0.008393,7.005030,6.309084,-0.545005,4.224862,7.235266,8.925099,-9.232223,2.130005,6.177260,5.805542,4.704652,-8.883259,8.859249,3.426270,5.674976,9.366124,-1.064551,9.202583,-4.612650,8.236275,-4.369408,2.419231,8.347960,-1.085303,8.972469,4.111394,0.693288,-7.759514,-8.418265,6.805149,8.463815,5.727401,2.241247,-2.578559,8.325942,-7.003316,7.017391,0.225340,-7.391295,9.786094,1.403842,8.868086,4.033472,-0.241831,0.187922,5.167345,-5.684836,-2.455522,6.496224,6.657008,8.076542,-7.843979,-5.641065,5.619765,9.103835,-1.330203,3.169527,2.951989,9.752028,2.848175,-6.312767,2.190271,8.998988,-2.724400,7.727645,4.253273,7.737763,3.425819,3.188595,6.306503,3.766348,-8.612696,6.169077,2.599105,4.869501,1.966848,3.884906,-5.367282,-5.654614,3.527730,1.505158,-3.866522,-7.858285,-1.397577,3.481705,-4.308892,4.461711,8.630089,0.749858,-0.874846,5.333436,-3.397718,-1.482373,8.578018,2.749641,-8.941416,-0.405187,-3.971646,-7.795806,-3.433110,-4.112007,9.649977,6.854837,-2.190631,9.469665,6.850514,-5.787028,-5.986239,4.613971,8.510936,-6.673130,1.961773,7.664248,-9.303464,-4.740875,4.198331,6.529278,-3.124364,0.924002,5.905663,1.825942,-2.620253,-2.529846,2.677088,-6.147770,0.847810,-6.332075,3.903888,-7.820535,-5.376174,3.446368,3.140117,-3.103778,5.082956,-1.675343,-6.794636,-5.383378,2.688956,7.403227,-6.772886,0.928511,6.012909,-2.572139,8.983714,-9.959287,6.015930,9.000294,-0.776646,-8.222219,-6.257877,8.954648,7.298164,1.830638,-3.718321,8.481916,-0.327206,-5.732501,-9.768271,2.897381,9.389472,7.979455,0.116541,1.000879,-5.283163,7.012057,-3.212666,-1.831994,-1.475508,-7.112986,-8.415938,0.525250,5.233745,-7.732225,-3.694885,9.888364,0.839110,-4.310779,-4.218941,4.762030,-3.403281,0.506918,8.466307,-1.070509,7.930682,-0.573860,-2.584256,-8.222314,-4.744128,1.650553,-1.561968,-0.659168,-4.698694,-3.647492,2.150214,2.201452,9.535091,-2.762666,-7.943932,-9.276192,-1.172262,-3.188587,5.217137,-6.155318,0.547079,-7.548415,-9.679829,-3.015668,-8.643225,2.892917,-6.626826,3.019220,4.059418,-5.684025,-0.656633,8.226901,2.522884,3.812158,1.695868,-7.458322,4.537243,-8.290011,-0.505240,-8.062886,-2.577268,-2.282826,6.304247,-2.053547,1.365575,-7.316656,6.704233,-7.029675,4.961464,1.299447,9.273790,-6.061945,0.889737,5.071293,5.100354,-9.500619,5.081221,-2.287835,-4.791315,-9.759185,9.524676,7.604802,-1.724423,6.530998,5.827500,-5.253393,1.193706,9.843686,-2.113896,-8.582532,1.803858,5.908930,0.767747,7.512104,-0.840496,3.847802,-4.210662,-4.273623,2.011011,7.413192,7.516488,7.719533,-8.756174,0.646759,9.322303,-1.826294,-1.760592,-4.453701,4.532802,0.823216,8.753736,6.185597,5.783138,-1.071677,7.971876,7.737556,-5.268923,0.484778,1.769911,8.853124,-3.916024,9.800714,6.423817,-6.363355,8.586553,-9.728156,6.311707,1.640625,8.658557,4.247513,9.551191,2.803734,9.916289,-7.741962,4.348495,-2.778426,5.373402,-5.912053,7.191768,4.738541,-5.472472,9.213619,7.634135,-7.443866,-7.180883,0.961987,-9.346500,6.898049,-6.726918,4.849862,7.548115,9.225614,8.995705,4.818705,7.500171,-3.328454,-3.195369,6.333153,-6.478832,3.650611,6.964527,-0.323434,2.759741,6.476062,7.214105,-2.870128,-8.956964,8.423064,7.937751,-3.376060,3.632468,0.452626,-4.979152,0.296706,-1.852893,-6.190625,8.226072,-1.062993,-3.612174,-9.817385,-4.150462,4.182231,1.015740,-8.060074,4.316413,0.807810,3.317065,1.845744,5.601615,-4.428896,1.189172,9.252819,0.087201,8.507508,6.244234,5.604437,-4.132013,7.108098,0.362929,2.061837,-4.895416,2.842134,9.310364,-1.151629,6.216098,-4.382383,6.714092,-0.268621,6.360000,-1.102479,8.438914,-8.225387,-8.805416,6.870348,-0.748713,6.367866,6.220370,-3.342715,7.698593,8.509046,-5.826514,6.766662,2.355488,-8.908208,9.672480,-8.383963,5.940692,3.100184,-5.139405,9.194029,2.795676,2.066801,-7.420148,3.936781,-8.034717,-0.460794,-2.486558,-3.822970,5.550670,3.482700,-3.324042,-1.133088,-6.110546,5.464704,-6.989538,5.441981,1.315112,8.253522,4.123436,0.856597,9.585998,-8.651585,9.870175,-5.455585,3.590814,-9.580272,5.257597,2.761187,-2.895865,-1.311322,-5.830086,-2.594280,-9.628345,6.496552,-2.891827,-6.536658,-3.369997,6.983929,0.181548,2.056351,3.653684,-3.579516,-0.305932,8.982175,4.612091,9.599500,4.584726,6.726251,1.994505,0.401911,-2.131677,-2.884899,-6.041783,-1.303416,4.088987,5.793990,0.076305,3.056766,3.228105,-9.656141,-8.444091,-9.856228,9.208066,8.215589,-6.877117,-9.282107,-3.977725,-1.756220,3.670489,1.564466,-4.261428,0.123680,-6.214537,4.388028,7.673663,-1.309373,3.590520,-5.921014,8.880822,-4.363893,-1.812653,-0.017057,8.112225,-7.099077,6.962185,8.529116,-6.812185,-9.681801,3.467208,-2.828275,3.089779,-7.332516,-3.687960,-4.461482,-8.559416,5.119781,8.022529,-7.157656,-5.577917,5.676391,-4.620267,2.366932,-8.451887,7.697694,7.368081,-2.599238,2.347314,-7.013393,4.415888,3.789104,2.036626,1.823578,-5.322723,3.581883,-5.104916,-4.014673,3.225898,8.839430,7.455322,4.858107,-5.465461,-4.031165,-8.010358,2.288164,5.310391,7.393956,-0.027216,6.608768,-5.204889,3.108573,-8.761302,6.120837,-2.609403,0.369935,-5.802189,-3.861742,-9.355434,-1.550425,8.301594,1.452647,-3.778977,8.224988,5.358039,9.280363,7.147744,-6.757517,-7.420494,5.344207,-0.739001,0.096742,3.946175,9.210272,-5.594358,-1.422755,-5.165765,-2.341556,7.352665,7.053073,-9.881963,-9.529654,6.317814,8.962149,3.594133,-1.663182,6.161518,-6.955395,-2.393291,6.161641,6.143278,-7.552831,9.209231,-1.334357,8.499652,0.097642,-6.011186,7.224313,-7.547981,1.115249,-4.898956,9.443996,1.441414,-9.532642,6.957455,-9.790010,-2.117303,-9.666630,1.776496,-9.414386,-7.893493,0.771440,8.102660,6.393604,7.511046,9.145815,-9.357354,-5.305832,-1.481504,2.180616,-9.483698,-4.750603,4.541734,-5.947124,1.156100,7.560451,-2.422283,-6.678275,4.701310,1.544815,7.954843,-5.994570,5.430233,3.111598,-3.951713,1.497295,3.609900,5.303988,4.097889,5.628091,-2.630702,-7.329791,0.105904,-9.061099,-4.656060,-9.437251,1.392816,-7.881444,3.615330,-1.597307,-5.159652,-3.505536,-0.441712,-6.389691,0.560173,-9.399722,-1.978562,-6.730527,-1.515417,5.554738,-2.106558,-1.594484,-6.840116,-1.602750,-3.972100,6.557275,-5.776373,-3.343291,9.260032,-2.990064,4.853172,-5.397635,-7.159022,7.417417,-9.320212,9.498952,-7.077657,-5.423236,-9.359386,-0.342867,1.465126,-6.991515,3.236049,-2.446102,0.614706,8.025821,-8.207760,3.009509,-9.763132,9.651280,4.379550,6.840691,-3.875326,-4.547863,-1.689958,2.958319,1.199935,-8.195759,8.037059,9.642488,7.495540,9.329473,6.313494,-7.907686,1.321073,-3.199641,4.559874], dtype = "float32")#candidate|9490|(1056,)|const|float32
call_9488 = relay.TupleGetItem(func_7496_call(relay.reshape(const_9489.astype('bool'), [768,]), relay.reshape(const_9490.astype('float32'), [1056,]), ), 5)
call_9491 = relay.TupleGetItem(func_7500_call(relay.reshape(const_9489.astype('bool'), [768,]), relay.reshape(const_9490.astype('float32'), [1056,]), ), 5)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_9517 = relay.TupleGetItem(func_6707_call(), 0)
call_9518 = relay.TupleGetItem(func_6709_call(), 0)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_9526 = relay.TupleGetItem(func_6707_call(), 0)
call_9527 = relay.TupleGetItem(func_6709_call(), 0)
func_8581_call = mod.get_global_var('func_8581')
func_8583_call = mutated_mod.get_global_var('func_8583')
call_9536 = func_8581_call()
call_9537 = func_8581_call()
func_8872_call = mod.get_global_var('func_8872')
func_8874_call = mutated_mod.get_global_var('func_8874')
call_9539 = func_8872_call()
call_9540 = func_8872_call()
func_7519_call = mod.get_global_var('func_7519')
func_7520_call = mutated_mod.get_global_var('func_7520')
call_9546 = func_7519_call()
call_9547 = func_7519_call()
func_6435_call = mod.get_global_var('func_6435')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_9548 = relay.TupleGetItem(func_6435_call(relay.reshape(call_9526.astype('bool'), [8, 8, 2])), 0)
call_9549 = relay.TupleGetItem(func_6438_call(relay.reshape(call_9526.astype('bool'), [8, 8, 2])), 0)
output = relay.Tuple([call_9468,call_9488,const_9489,const_9490,call_9517,call_9526,call_9536,call_9539,call_9546,call_9548,])
output2 = relay.Tuple([call_9469,call_9491,const_9489,const_9490,call_9518,call_9527,call_9537,call_9540,call_9547,call_9549,])
func_9560 = relay.Function([], output)
mod['func_9560'] = func_9560
mod = relay.transform.InferType()(mod)
output = func_9560()
func_9561 = relay.Function([], output)
mutated_mod['func_9561'] = func_9561
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9562 = relay.const([[[5,3,-7,8,-2,1,-4,2,-1,-5,-9,10],[5,-10,-3,1,2,-5,10,-10,-6,10,3,-5],[4,7,-6,5,-1,6,-3,-3,-4,-3,-2,9],[-8,-1,2,-5,-5,2,-1,3,-3,-3,-10,1],[-7,-10,-9,-10,-9,8,-6,-10,7,-2,-8,-10],[6,7,-2,-9,5,9,-10,3,-9,-3,-5,-5],[4,3,-2,2,6,5,-8,-8,-6,8,-5,5],[1,-8,10,1,9,-5,8,-3,7,-4,-4,9],[-1,-8,-6,-10,-3,-3,2,-7,9,3,9,4],[6,10,-10,4,6,10,6,-6,8,6,-3,-2],[6,2,3,-1,1,1,-2,5,-6,9,4,-5],[-5,4,-3,-2,2,-4,7,-4,-1,-2,-9,-3],[3,-10,-7,3,3,10,4,7,-6,-2,8,-1],[-2,-4,-3,7,10,5,10,9,-5,-3,3,-6],[-1,-1,-4,-8,7,-7,-2,8,-2,9,-3,7],[-9,7,-10,-10,9,8,6,-10,-1,-5,1,-6]],[[10,-7,6,-1,6,-9,-2,5,-2,7,-2,-1],[5,-7,3,9,9,-6,-2,9,8,-4,9,-4],[-6,-7,9,3,-7,-10,6,-6,7,-9,1,-7],[-8,-1,-2,-7,7,9,3,-10,4,3,-9,-4],[-10,-7,3,-2,-7,-7,10,-9,8,-3,-10,3],[10,4,4,-10,-1,7,-3,4,-4,2,4,2],[-9,-7,5,3,-8,9,-2,-6,5,6,4,1],[2,-3,5,10,-10,1,7,-3,10,6,-10,-5],[-8,5,1,-2,-9,9,10,-8,-8,-6,-4,1],[10,5,2,6,-3,3,-9,8,10,4,9,-10],[10,4,-6,7,4,7,4,-7,-6,-2,7,-7],[-7,9,-2,5,-7,-5,5,9,3,-5,-9,3],[-5,4,-3,9,3,-10,-6,-6,-5,6,-2,7],[-10,10,5,9,-8,-1,6,-3,-7,2,7,8],[9,-1,-8,-4,-1,10,-10,7,1,-9,8,-4],[4,-10,-5,4,-2,-5,-3,9,-7,-1,7,5]],[[6,5,-7,-10,-8,-3,-1,-9,1,-3,4,8],[10,-8,-9,-5,10,-10,-8,9,5,8,-10,6],[10,-6,1,6,5,-6,-9,-1,10,6,-6,-3],[9,-4,10,-2,9,-7,-2,-10,6,-3,-7,-4],[8,5,4,-4,3,4,7,-6,-4,7,-5,-4],[4,-10,2,10,-3,-3,-6,2,4,-3,-1,-9],[3,10,-4,-10,10,1,-3,3,7,3,-4,1],[10,-8,4,-4,5,4,8,8,-6,-3,2,-5],[1,-2,-2,2,-8,10,2,-8,10,4,8,10],[-3,-4,-9,3,4,7,-8,-7,1,-10,-3,-8],[4,5,-6,-7,7,3,8,-6,-9,10,1,-8],[7,7,-8,-5,9,-4,4,-3,3,-5,-1,-7],[3,10,7,8,5,3,2,-8,7,-7,5,2],[-5,-1,7,9,-7,5,6,-5,-9,-8,8,2],[-10,-6,9,5,4,-2,-5,-2,9,-4,1,10],[10,10,4,3,3,8,-9,7,8,4,-10,4]],[[2,-6,9,-2,4,9,8,-1,-3,-10,-2,6],[6,-3,-4,8,7,10,2,9,8,7,1,-4],[6,9,-2,-6,-2,-7,-8,-4,-10,2,-8,9],[8,9,-3,6,-8,-7,-9,-1,4,9,4,6],[2,6,-9,-6,-3,8,10,5,-8,-10,-7,-10],[-10,2,4,8,4,-6,10,-9,6,1,1,4],[10,6,5,-8,-5,-9,-6,7,-8,2,4,3],[9,6,9,9,3,7,-1,3,7,7,6,5],[8,5,1,3,-1,-1,-10,10,-6,-1,3,-5],[5,-6,-7,-6,10,-10,-9,-4,4,1,-8,7],[-9,2,-2,4,10,-8,-1,-3,-8,-4,8,7],[5,-5,-8,-6,-1,-9,-7,10,-5,4,5,-8],[4,9,-2,-3,-2,-8,5,7,4,8,-1,7],[-9,3,-2,-6,-3,-8,1,9,-4,-4,-1,-4],[9,6,-2,-7,6,6,8,-6,-9,5,-10,3],[-1,2,8,-9,-9,8,-8,4,-2,3,4,-3]],[[6,3,2,9,-3,-9,8,-9,-1,-8,-1,-4],[-5,-4,-8,4,-5,-1,4,-2,2,1,9,7],[-6,-10,9,9,3,-5,-8,-9,7,-2,2,2],[-5,-6,-3,-4,-7,-6,-10,-8,-6,-6,-1,9],[-6,3,-5,6,7,2,-2,-9,-3,-5,7,6],[8,10,-8,9,10,-6,8,4,-1,-5,5,3],[-8,10,4,1,-9,-3,-1,-3,-8,-5,10,-10],[-8,-5,1,-2,10,6,-10,-8,-9,-6,-7,1],[-1,-10,8,1,6,-10,7,8,3,-1,-3,2],[2,-4,8,-4,6,9,5,1,-9,8,2,-3],[-10,-8,5,-6,-9,-8,10,7,8,-9,7,6],[-10,9,-2,8,7,6,-9,1,-5,-4,-2,10],[-8,-3,-8,8,3,1,-2,-9,9,2,-8,-6],[1,9,-3,-3,7,-4,7,4,-1,-7,-5,1],[10,4,8,4,-9,5,9,1,-6,-10,8,4],[8,-2,6,1,-9,-7,-4,-6,-1,5,1,-7]],[[-2,1,-2,1,6,4,-7,9,9,-4,-6,-6],[-3,8,-8,2,-3,-1,-6,4,-6,-4,-5,-10],[1,-9,-6,4,7,-3,7,6,8,3,-10,6],[5,-8,4,-7,1,2,3,7,5,5,-5,10],[-10,7,-9,-5,-6,-7,10,7,-1,1,2,4],[-9,-1,-1,8,-3,-1,-2,9,9,10,1,3],[4,-6,3,8,-8,-6,10,-10,3,-7,8,-4],[-5,6,-10,8,6,-2,1,-1,-9,-9,5,3],[-1,-4,10,5,2,9,-2,-8,10,-7,2,-1],[-7,1,10,-1,-6,-1,4,-10,-5,10,8,4],[-8,9,1,2,-2,1,6,-4,-10,7,-9,2],[-9,-1,-10,5,8,-9,-5,8,-3,9,2,2],[-8,-5,7,3,10,5,1,-8,-5,9,-6,-9],[-5,-8,4,8,-8,-9,2,3,5,10,7,8],[-2,3,-3,1,-3,-6,9,-10,-9,-6,-2,1],[-6,-7,8,6,-2,2,-5,7,1,6,-9,1]]], dtype = "uint64")#candidate|9562|(6, 16, 12)|const|uint64
var_9563 = relay.var("var_9563", dtype = "uint64", shape = (6, 16, 12))#candidate|9563|(6, 16, 12)|var|uint64
bop_9564 = relay.less(const_9562.astype('bool'), relay.reshape(var_9563.astype('bool'), relay.shape_of(const_9562))) # shape=(6, 16, 12)
func_5430_call = mod.get_global_var('func_5430')
func_5433_call = mutated_mod.get_global_var('func_5433')
var_9571 = relay.var("var_9571", dtype = "uint16", shape = (256,))#candidate|9571|(256,)|var|uint16
call_9570 = relay.TupleGetItem(func_5430_call(relay.reshape(var_9571.astype('uint16'), [8, 8, 4]), relay.reshape(var_9571.astype('uint16'), [8, 8, 4]), ), 4)
call_9572 = relay.TupleGetItem(func_5433_call(relay.reshape(var_9571.astype('uint16'), [8, 8, 4]), relay.reshape(var_9571.astype('uint16'), [8, 8, 4]), ), 4)
func_7081_call = mod.get_global_var('func_7081')
func_7084_call = mutated_mod.get_global_var('func_7084')
const_9577 = relay.const([-5,2,4,-2,10,8,10,6,9,-8,-1,-2,4,8,3,6,-10,6,4,3,-7,-3,8,10,-9,-8,1,-9,-2,-2,-2,4,9,-6,-7,-9,9,1,1,-5,-10,-1,3,-5,6,-9,-8,-10,3,1,2,6,2,-1,1,-3,8,-1,1,5,3,-6,7,9,-2,9,8,7,5,3,1,6,-8,-2,2,8,3,10,10,1,-8,5,-8,-6,-10,6,4,3,-10,3,-4,9,5,-9,-7,-6,-3,-2,5,3,-6,-7,2,2,-6,-3,-6,-10,-4,-7,-1,7,-7,-4,-7,-8,-9,-5,6,2,4,4,10,4,-5,4,-5,-10,7,7,-5,9,1,-3,-1,10,-2,7,10,-5,-2,1,-9,-2,-6,-2,-3,3,5,2,4,-1,-6,-8,2,1,4,1,-2,-10,3,9,3,1,-1,3,-7,-10,7,-1,-3,2,4,-1,-8,5,4,-9,-8,-6,5,2,8,-7,2,-3,-10,-2,-10,-1,3,2,-9,-4,-1,-4,2,10,-8,4,-5,-4,-1,9,9,-10,7,-2,2,3], dtype = "uint64")#candidate|9577|(210,)|const|uint64
var_9578 = relay.var("var_9578", dtype = "float32", shape = (675, 2))#candidate|9578|(675, 2)|var|float32
call_9576 = relay.TupleGetItem(func_7081_call(relay.reshape(const_9577.astype('uint64'), [105, 2]), relay.reshape(var_9578.astype('float32'), [1350,]), ), 1)
call_9579 = relay.TupleGetItem(func_7084_call(relay.reshape(const_9577.astype('uint64'), [105, 2]), relay.reshape(var_9578.astype('float32'), [1350,]), ), 1)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_9586 = relay.TupleGetItem(func_6811_call(), 0)
call_9587 = relay.TupleGetItem(func_6813_call(), 0)
output = relay.Tuple([bop_9564,call_9570,var_9571,call_9576,const_9577,var_9578,call_9586,])
output2 = relay.Tuple([bop_9564,call_9572,var_9571,call_9579,const_9577,var_9578,call_9587,])
func_9596 = relay.Function([var_9563,var_9571,var_9578,], output)
mod['func_9596'] = func_9596
mod = relay.transform.InferType()(mod)
mutated_mod['func_9596'] = func_9596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9596_call = mutated_mod.get_global_var('func_9596')
var_9598 = relay.var("var_9598", dtype = "uint64", shape = (6, 16, 12))#candidate|9598|(6, 16, 12)|var|uint64
var_9599 = relay.var("var_9599", dtype = "uint16", shape = (256,))#candidate|9599|(256,)|var|uint16
var_9600 = relay.var("var_9600", dtype = "float32", shape = (675, 2))#candidate|9600|(675, 2)|var|float32
call_9597 = func_9596_call(var_9598,var_9599,var_9600,)
output = call_9597
func_9601 = relay.Function([var_9598,var_9599,var_9600,], output)
mutated_mod['func_9601'] = func_9601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6837_call = mod.get_global_var('func_6837')
func_6838_call = mutated_mod.get_global_var('func_6838')
call_9651 = func_6837_call()
call_9652 = func_6837_call()
func_5719_call = mod.get_global_var('func_5719')
func_5724_call = mutated_mod.get_global_var('func_5724')
var_9656 = relay.var("var_9656", dtype = "float64", shape = (48, 4))#candidate|9656|(48, 4)|var|float64
const_9657 = relay.const([6.479766,1.186937,4.102108,8.275229,-9.679013,-1.138682,-5.610489,-1.745305,8.008065,9.754523,5.205953,1.294592,-8.192061,0.150668,-9.843032,0.432521,-8.247937,4.532717,1.110860,1.311341,3.646989,-1.408528,-3.976511,4.215747,-9.999288,6.816420,-9.062111,3.123241,-6.208931,-5.213797,-0.731040,8.168411,-9.859982,-4.228230,1.809892,-6.621797,-7.062773,-3.376569,9.106337,-9.776382,4.548315,-0.625376,-6.013635,-3.705342,-9.880438,4.078445,-8.950471,-8.083867,5.569925,-8.417842,-6.993758,2.832380,9.401390,-8.997762,6.479125,-7.280938,-2.195317,-9.561414,2.825451,-1.716362,9.744517,-8.325230,-7.829598,8.234540,4.977248,-9.151129,-8.532613,-5.600028,0.402377,-3.750379,4.462449,9.770468,8.799125,4.107490,-3.744599,0.992422,3.904397,5.440163,-2.193037,-1.935927,5.460229,4.905065,-9.848731,3.194632,-7.597914,9.994289,0.606078,-7.579652,-2.141546,4.142931,7.207732,1.914649,-3.162634,-9.633813,0.105718,-3.545208,5.102230,-3.654857,-7.747704,4.230692,2.893692,-1.738921,-2.441927,-5.604145,-9.338073,9.707485,-9.320190,4.444020,-7.799333,0.484140,-5.701346,-7.902439,0.836853,6.108204,-5.890284,6.405396,3.770586,-7.597821,-7.977927,2.103093,-0.181902,-6.672264,5.730323,0.406434,5.766871,5.652821,8.741503,8.076348,-5.113692,-1.339501,3.565536,-2.750833,3.284146,-7.246639,8.839891,8.053875,0.448239,-1.607527,8.866535,-7.832783,-5.727671,-8.830928,9.156465,2.869986,-3.013648,-3.237099,4.836823,9.811851,-3.208954,-0.772950,7.878518,2.916684,0.193698,9.834580,-1.890318,5.567314,4.028887,-5.463825,2.594458,-5.064606,2.956590,3.653731,8.467141,1.198171,4.121209,-1.602688,7.560904,5.329234,8.781569,8.261334,-4.705709,0.393592,-2.352304,-2.545433,0.665756,-7.497351,9.047180,9.298865,-3.750758,-4.215560,-8.012279,-0.134537,4.912588,-7.450168,-0.871961,-5.129488,-7.618901,-7.371617,9.590284,-1.525291,0.116118,7.016510,-7.097800,2.447760,7.203150,-1.324066,-4.542946,-4.245168,-2.841485,7.129615,-1.245778,7.948108,6.105904,-1.563901,-1.960000,5.988424,2.527612,1.971528,0.960510,-4.513252,-7.292199,-7.796851,3.903370,-3.985321,3.809986,-7.664063,1.904106,-3.514405,1.684244,4.441498,7.661684,8.623664,8.556874,-3.765568,8.115171,-9.728887,-7.227857,6.271424,5.673150,7.783423,1.856937,-8.870610,-3.175650,0.973418,8.235535,0.420968,8.330842,3.979880,4.693876,7.381831,-2.989704,3.939733,-8.995994,-2.656856,-0.717018,-1.721481,6.956707,4.773908,7.077277,3.807787,1.982367,6.528863,8.506069,-6.211642,-4.788681,-1.006532,2.465477,2.803353,-4.695354,6.914091,-9.606043,-5.114127,-8.768882,8.085007,-1.783209,0.157432,3.112705,-6.644159,1.348020,-2.483976,-6.747933,6.751958,-3.644387,1.964599,-6.593580,2.355740,-3.596987,3.723031,6.938230,-4.955187,1.340939,-6.251688,-6.108662,-3.510568,2.996665,2.180028,5.594449,3.380864,-6.873289,-2.470425,2.900033,7.950772,4.392372,-3.825652,8.670850,-0.689271,-3.131346,0.255754,6.046568,9.764799,-7.885839,-9.929913,2.509240,3.108280,-8.078180,-5.053081,-2.089270,2.572425,-8.991052,-1.093585,-5.642655,8.907994,1.600099,9.486274,-9.098878,0.420290,2.482016,-7.150643,9.905413,-9.550640,4.470336,9.708852,-9.971183,1.717890,3.547205,-7.777995,-7.577436,-9.837533,1.002445,-5.853059,-8.875783,-8.700603,4.489257,-7.883832,9.992270,-5.877611,-1.781789,-3.044373,-2.140358,5.457181,2.641987,5.115173,2.845543,-8.125361,4.159566,-1.143095,-8.893753,9.372072,1.457796,0.154472,7.755962,8.163322,2.213009,-6.321421,9.152898,4.039771,-4.951738,-9.710082,5.626066,-0.106174,6.980944,-4.012548,8.012573,2.531093,-7.253338,1.891194,-2.474385,6.240687,-7.823138,8.173371,2.928825,6.664166,1.839332,-2.026815,-0.913365,2.539397,6.119630,2.618656,-2.201708,-5.462555,6.618410,-4.344822,-6.920155,-3.570838,7.306854,8.650923,-2.047746,-8.383496,-7.688886,-8.026080,6.159553,2.992418,-1.001693,-1.202743,9.795472,7.943940,-2.788785,6.690707,3.525386,-2.687387,6.380881,0.923516,-6.254427,-8.068342,-2.239465,6.115274,-6.752070,7.036324,0.226208,8.438058,-2.288282,-4.127721,-3.059190,1.620394,5.808437,2.705804,4.449159,-2.786837,-5.736260,8.408762,-5.524597,1.282381,1.007522,3.374959,-6.088552,3.210160,0.529838,5.723876,1.842745,1.386323,-0.946781,-3.784872,7.988169,2.185919,2.125850,1.831203,1.768889,-7.613969,0.035458,-1.079084,1.566510,-3.209789,3.566198,-3.283940,-0.071926,5.381224,-4.018746,9.652827,-3.168470,-6.135456,9.806691,5.355793,-1.759502,1.998480,8.978559,7.589704,8.589422,7.073997,8.885355,-9.306873,2.321519,7.323887,6.021528,-4.711944,8.021917,7.667554,-0.777694,-5.660604,-0.237007,-7.654974,1.692095,-8.669563,4.168128,9.396158,-7.007910,-8.261245,7.182388,5.254873,-8.408325,-4.455122,-3.476891,-6.100413,9.981610,1.471596,-2.692691,2.737717,7.187709,7.401704,-0.033687,-7.108334,-5.048019,-7.695416,-9.486973,-2.701682,6.469543,-3.798505,-5.864850,-0.055149,7.429817,2.318886,6.761462,6.422239,6.887260,9.699568,5.918397,-0.762511,8.811048,2.032012,-5.994781,-3.070631,5.372605,-3.312117,-5.983566,3.763928,-6.935828,4.617848,0.897855,5.526848,1.841991,-8.799060,-7.738408,-3.746376,-4.107454,9.521622,7.805731,-4.560411,-4.322167,-1.364499,-6.929038,0.243457,3.422419,-7.464919,0.217476,5.898391,1.115003,-5.906395,-7.091859,2.147384,-6.504698,3.626713,-7.391105,-7.256448,-6.193876,2.433372,-4.074456,-5.377263,-3.765030,9.688547,-2.254611,-5.831904,-0.232747,1.615806,-9.353827,0.111967,5.005781,-3.342499,5.823920,-0.034484,-8.307749,-7.148095,-2.766343,-0.726267,5.876535,2.708790,-8.125575,5.278847,-7.949560,4.538442,6.745036,5.200742,4.176731,7.507743,2.326318,9.234722,8.021717,-4.573851,-9.861772,-6.332102,-9.465256,2.589629,-1.441303,-8.931398,1.246103,8.594017,-7.683319,9.853147,-0.494384,-9.024432,-6.410613,5.631904,8.748765,-1.463900,-7.646335,-7.084849,-4.355887,1.511534,-5.955173,4.592520,8.623454,1.634806,2.032881,-1.439421,4.129353,4.275706,-1.226822,5.578995,8.077600,1.004210,8.328838,-8.439813,7.289014,-7.659115,4.333792,4.579957,-6.448866,4.411499,4.578088,2.232412,-9.092915,-3.780905,-2.869334,1.186382,9.482325,9.843993,-0.913772,-0.565701,-3.816484,4.841923,-8.253006,-9.327571,7.253399,2.552125,3.003177,4.331408,7.653911,-0.438581,-4.075606,1.371471,-1.312081,-8.729130,6.977174,-6.829823,7.433722,1.936455,-4.058934,-1.239686,5.882915,-0.298456,-7.322972,2.339273,-7.648053,0.884394,4.209871,-7.686997,-7.293557,-3.307506,-0.562432,8.557934,-5.490009,5.847056,-1.729797,6.190323,4.040126,7.130031,9.195983,-1.115200,-3.121743,-0.293242,-7.884253,-0.425105,1.094978,-4.347378,0.609711,7.060271,3.334909,1.896436,-3.756719,8.884905,-8.445567,-8.901420,1.295108,8.459680,-4.530390,6.835082,8.284266,1.028263,-8.616798,-9.641054,5.324544,-6.530218,-2.181678,8.737982,-1.633189,5.605237,8.229198,-7.858136,-6.490431,-5.326144,-4.597438,6.867789,6.036538,-6.184537,3.599440,-2.242027,6.734293,0.548188,-8.105084,-3.496609,7.330021,2.611994,3.316611,-3.285943,-9.804783,9.298968,-0.501097,-8.463258,8.001633,-5.103871,9.123572,-7.888728,9.973008,-3.800389,-1.321815,-4.732253,-0.510569,-4.379631,8.486767,6.713006,9.635480,-1.543808,-9.789706,-7.172043,-6.482553,-1.414311,8.891207,-5.658275,-7.410918,-5.574012,7.145443,-2.568459,-1.438393,-4.394436,3.016814,8.693754,-1.454056,5.100756,-1.486188,-5.244141,-3.505405,-2.312354,5.460946,-1.310409,-9.940129,-9.266102,8.677058,9.820597,4.944892,5.385476,-9.996535,-8.762306,0.704659,5.669347,2.112617,-7.475045,-1.970564,5.462879,4.582438,9.095040,-3.099951,9.304803,-3.918372,4.316262,-8.580875,9.989415,-3.126303,3.000133,2.935078,9.204204,2.341526,-3.945442,1.418247,1.486361,3.856189,-0.807725,8.514138,5.161051,-6.594573,5.391093,6.008193,6.876635,-7.119054,0.655432,4.197858,-4.005027,-0.106579,-2.510273,-7.924168,-9.293917,-7.117774,3.905798,6.450329,-4.944582,-2.962376,-6.192611,-7.977632,5.311802,0.344069,-5.005695,5.841692,4.604719,7.795648,0.388981,7.941953,6.016704,-3.904052,4.765507,8.538750,-0.200776,-4.632059,5.660165,-9.790842,1.195805,-4.533406,5.897302,9.826661,2.979999,-8.057914,-5.449473,5.992848,-5.087213,7.243545,1.033256,9.178010,-3.373138,-5.602185,-5.491813,-7.798540,-1.425516,9.421979,-5.631666,-4.717014,2.463820,0.861519,0.560685,7.699667,-1.034667,7.906614,5.074064,9.732330,-9.420069,9.053333,9.025221,2.703395,-9.325195,2.906722,5.168131,6.555616,-2.894542,-5.713279,7.440336,8.272438,-2.854070,6.444726,2.594672,7.537726,-9.639446,-2.132400,-2.470583,-8.298814,-0.080572,-2.693480,1.505836,-6.758536,-5.797141,1.617755,-5.326620,2.359581,-3.438280,-7.241715,-4.377717,4.889623,5.972282,-9.220061,1.465508,-7.468512,-2.105500,5.527804,-7.022306,0.308067,7.786674,-4.559465,-2.739892,-5.416936,-9.952287,-6.067743,7.995371,-6.662458,-9.621481,-6.701161,4.928686,8.373674,7.524970,5.199620,2.913584,-2.008955,-2.563103,-9.525368,6.057103,3.970163,-1.244033,-3.579579,0.060094,-1.337784,7.402432,-3.839505,9.607157,-4.289014,-9.476425,0.250169,-3.139567,-0.706286,-8.264360,2.511092,-6.160890,-1.381197,9.233692,-2.543105,5.763347,-6.526767,0.793948,9.662888,-7.687508,-2.153879,0.950050,-8.598389,3.016315,-3.163106,-9.634506,9.445891,-9.064391,7.180161,-3.523380,4.714403,-4.410548,-4.434462,-0.414817,-2.526901,8.014494,0.108040,-8.836323,5.412977,7.198712,-6.283312,4.583691,-2.694593,0.639329,6.059357,8.206523,0.295917,-5.961291,4.833949,1.306520,-6.391138,-7.824437,4.583702,5.859268,5.064325,6.880088,-7.168562,8.203200,-1.336562,-2.736386,9.506595,-9.045291,9.911579,-4.197561,2.180867,3.882207,6.185814,-9.385226,-9.586688,7.573018,-8.314213,2.856085,4.786125,1.988329,2.083647,-7.433499,8.276970,5.996619,5.871650,6.369239,7.369940,-2.232709,6.629969,-8.256937,4.618451,2.690822,-7.473434,-0.649895,5.495995,0.615016,-5.349904,4.357433,0.158745,-0.686872,1.437480,7.214614,-0.963867,0.766156,-1.319635,-6.180554,2.715192,5.742269,-0.515976,8.270791,4.877814,0.472281,-2.583236,1.360379,4.534254,5.306751,-6.654692,-2.066481,-8.045333,-9.472666,9.529259,-6.816157,-6.384283,-7.613418,-3.752439,-0.937098,-7.142400,6.904706,3.669021,-8.884412,-0.864241,1.521791,9.909645,-5.308587,7.643816,-6.925564,1.667095,5.658627,9.516671,-9.396217,6.437232,7.250796,-7.737540,4.552965,-9.808393,8.512421,8.845557,7.965256,-1.357076,-5.436344,-7.372332,-5.151013,-6.635471,2.789310,3.594953,1.308406,-4.720638,-3.040500,3.273346,-3.232606,-6.410272,-3.680331,-9.521559,-4.270445,1.321367,-8.658407,1.397032,3.569685,-4.777470,8.536219,9.650151,0.617790,-6.966481,-5.236576,1.414230,6.446373,-9.160196,3.530329,8.666466,2.289504,-3.489261,-7.414796,-0.150766,6.716596,-5.397345,-2.635204,5.299126,5.067522,-8.135263,7.055447,5.005719,8.236151,8.790454,-7.925940,-6.459189,7.451679,-9.390303,-3.453549,-2.103784,0.326878,2.865967,-3.519597,6.518396,-4.616813,1.947943,8.325572,-3.596672,6.783862,6.771415,-6.066660,7.825731,9.265099,4.811361,3.636649,9.829403,-0.597553,-2.704136,-7.596630,-8.019640,7.684365,-2.217976,-9.957526,2.776987,-0.674271,-7.485693,-5.214344,7.780975,0.644365,-2.682930,-1.489252,6.820048,-7.100900,5.773334,-8.219197,1.285124,3.415765,-1.183930,-9.062547,0.086793,5.425664,3.224723,-8.515562,5.572884,9.287826,-4.555292,2.148929,-8.295030,2.307593,-9.127863,9.099642,-7.862780,-9.299202,1.630005,-6.972874,1.464623,-3.769267,-7.262673,6.296589,-5.762225,8.292697,-6.503727,-1.887424,-0.404650,-4.660075,9.853114,-5.218179,1.460837,9.168674,8.059798,6.602891,3.778009,7.792721,-1.471550,0.484915,5.506462,1.115833,5.666481,-9.160598,-0.923791,6.543270,-6.630307,5.301143,-9.040722,-8.712945,-5.210450,-9.831073,5.310335,0.786784,7.714977,-7.717443,9.246470,-0.103735,-7.011251,-7.534565,-2.662223,-5.428311,3.554839,-6.781089,-5.988533,4.909901,-4.053705,-8.398954,9.017271,-0.733228,-8.864291,9.854480,-2.089591,0.343443,-3.064618,8.027966,0.219614,-0.637628,6.104347,-5.852216,5.067563,2.614299,1.639536,-7.484396,5.414760,8.348641,3.929881,-7.278678,9.580063,-8.379490,4.122439,-5.506450,-5.622320,-4.236411,8.388962,9.034885,-8.075482,-9.646404,5.619252,0.697459,7.445408,-1.930488,2.286742,8.692446,-3.230546,9.800778,2.808766,-2.415180,-7.840100,-8.224737,8.869710,-5.230520,-9.145424,-6.542175,6.274107,-3.216878,-7.658525,-5.163233,0.494604,-4.202341,1.092641,-7.765617,5.309072,-9.782220,5.072791,6.570769,8.740361,-8.783705,9.591036,1.999935,-9.708189,1.246975,-8.116766,5.205679,1.637885,-0.209563,0.272181,-0.044911,7.108729,-7.889869,4.492975,-8.241307,8.003048,-7.383744,5.467314,-1.259965,9.851916,-4.274053,6.138566,-6.475101,-0.963457,1.324232,4.076862,-9.551821,4.329739,8.152086,4.585304,9.812545,-4.115378,4.181880,8.883012,-1.884424,9.202264,-5.902311,-4.807587,-9.491555,5.223475,-4.671735,5.632566,-6.112897,0.273363,9.631865,2.087181,4.922810,-7.273148,4.166420,-0.739480,-1.378462,-0.287970,-8.482219,9.743514,3.529603,5.981568,7.751296,9.718015,7.152174,5.714901,2.438371,8.952920,5.141415,0.118183,4.685968,-0.025211,0.336413,-1.300693,7.715384,-4.335481,0.171283,-8.864005,-3.318913,-8.917926,-3.140197,-4.950810,-0.977430,-0.630055,2.808559,-0.177215,-4.786559,9.954755,7.168835,6.657027,6.472976,-5.907000,6.225995,-6.775854,-1.925437,7.920233,-8.944334,-4.287250,0.723863,-3.804254,-7.594890,5.846938,4.310196,-9.725880,1.671227,0.276186,-6.990712,2.455086,-6.412545,1.279754,-8.905926,1.749947,7.079217,5.821833,8.691533,7.801623,-7.732003,-9.246469,7.273743,-0.583598,-5.639336,-8.868272,9.927667,0.070075,3.136908,-2.824685,3.064273,-6.672750,7.195829,-1.067507,-5.807887,-3.033770,-7.114457,-7.554910,-3.284455,-5.756638,5.351260,8.901861,-7.603063,-7.215318,9.483770,6.138778,0.087467,1.424004,6.710103,7.949818,-6.378499,-8.837817,-6.446220,-7.185265,-0.894639,3.293326,0.727915,-0.869279,6.120363,1.205090,-6.550367,-7.053773,5.641614,-5.858949,6.450728,-4.358598,-6.850275,-9.812794,0.410230,8.538574,-0.025777,0.129702,9.357225,1.043784,5.539643,5.833264,-6.062224,8.176431,-0.160652,-1.849018,4.210145,0.931261,-6.072114,-1.754318,-2.330266,0.765691,-4.521730,7.021083,-4.174371,5.358935,4.320105,7.227229,-0.445698,6.987625,8.688867,-4.819740,-0.327794,-0.497877,1.638157,1.400243,-3.894273,-4.195167,8.600826,-1.848086,8.480931,4.451990,-3.428068,-8.592066,6.515073,1.057624,8.200327,1.836268,4.463940,-4.576922,-6.827634,0.839219,-6.830381,-4.916173,1.778921,-5.449139,-3.363758,6.065981,-4.058574,9.448504,-4.387727,-1.407165,-0.029790,2.319393,1.670323,-7.066600,8.775597,-3.071836,-3.277756,-4.805493,8.536020,-7.233490,-7.158644,1.840767,9.697266,3.456651,8.270822,3.175946,2.118755,-8.587265,7.584673,5.812654,-3.305547,-2.292654,-1.534875,-1.553512,4.790291,3.442152,-8.028046,6.314299,1.004453,2.457680,-2.699900,-0.313199,-2.081592,8.587577,6.936306,-3.020557,-2.927019,-0.815251,0.984354,3.995678,7.681641,4.461634,8.606785,0.007186,1.321672,0.901941,-6.941447,5.145841,-6.526612,-8.245060,6.966673,7.843728,5.459409,-1.257330,-6.364863,-1.560613,-7.643004,-8.383307,-1.403148,-8.177290,-1.883171,4.228382,8.539915,1.337702,1.014867,-6.348109,6.761495,8.322212,9.178615,9.046963,8.974654,-6.494449,8.946819,8.293340,-0.051185,0.058926,6.384303,6.318331,-4.905118,7.590591,-1.273039,-6.105832,3.315252,8.859041,-4.591288,5.306044,-4.956294,4.141100,-8.821207,2.941118,1.338468,7.650529,3.821235,1.902389,-8.231340,-0.144844,-6.226490,-9.808001,-4.106815,0.274320,-8.093858,-4.628144,-0.060258,8.033829,-3.644147,2.848831,1.139038,-5.467067,-3.271158,-0.174821,-6.345998,4.804122,-5.931796,8.797889,4.189194,1.353935,1.798825,-9.153813,8.579467,-6.424579,-7.140274,5.460537,-2.856963,1.696504,-5.326015,7.030697,-9.687853,0.982668,-3.291650,1.761696,9.292397,-5.332992,-7.693888,-0.059949,-2.349152,7.695307,3.418688,-9.075107,-5.106185,-1.637200,-0.354298,-2.760131,-5.180112,6.403446,-6.470915,9.350090,1.039660,-4.231699,-1.601190,0.541699,0.491320,-9.484206,-7.719547,-1.388155,-8.664950,2.780115,2.601816,7.120706,9.496786,-0.800916,3.380563,-6.738117,9.240983,-9.552311,6.653006,-7.240798,-2.752930,0.357513,-6.594744,2.826251,-9.539920,9.568415,-1.366772,-5.726450,8.790413,3.449650,-0.749917,8.577336,-0.149555,4.824986,9.050349,-5.619346,-7.918618,-9.804885,-1.367885,3.783514,-4.683542,-5.761501,6.883502,3.716937,8.403122,8.807883,-4.416101,-8.794585,-3.860823,-8.621410,1.619341,8.187588,9.866259,-4.137589,-6.809777,-1.997332,-1.585108,6.808897,1.730782,-1.094809,-1.870630,-0.830487,-3.905855,3.692553,2.157400,9.951222,7.039372,-1.483809,-5.209251,-5.462170,0.623080,-7.758286,5.385267,0.365508,-2.929687,4.510485,-5.212439,8.386080,-1.068886,6.080597,-5.207206,7.714269,-6.159703,-9.475371,-6.798484,6.590183,-5.324296,-3.413617,0.648392,-9.642800,2.871695,-0.510766,-7.222883,7.361666,8.713307,-5.348148,3.555060,4.868227,8.470734,-5.379926,-5.839025,8.158832,8.353482,-2.608958,-2.674102,-2.450540,-3.086592,6.329269,-6.731848,-3.862680,2.643049,-8.039380,-0.269581,-6.784711,5.658109,8.857380,-1.544886,-0.762840,-1.074425,6.216305,-3.696595,2.441034,-1.753054,2.783503,3.030666,-6.632101,-5.915756,4.853742,-6.591646,-6.561468,-4.164489,9.268554,5.599121,9.654443,-6.522998,-6.597776,-6.187693,-5.841620,-9.087615,-3.927900,6.662102,-9.414308,1.681849,-3.041965,-9.630303,3.733052,-3.039170,4.682383,5.835413,-5.058193,6.329583,-3.376352,-4.803978,6.308006,-8.666968,-4.190816,-3.614210,7.330649,-1.417146,-0.697246,-9.607333,0.518272,-2.244989,-3.657292,3.496481,-9.223615,4.296156,9.391380,2.774387,-4.818704,-6.894643,8.086684,-9.715850,-2.247332,-8.027634,3.602510,-0.354910,9.682537,2.487634,-0.222553,-1.452997,-4.563772,5.670160,0.241823,-6.778951,-8.776959,-4.971897,3.618813,-8.264571,9.376935,-8.463460,-8.318232,-7.410506,-3.040895,0.586703,-2.169794,3.063297,-8.328610,-3.040048,9.733593,1.605960,5.404867,4.686568,-0.971088,-2.013172,-5.318550,-1.629775,-1.951148,-0.268598,3.640737,1.960358,-2.826880,-4.799327,-2.892665,-4.662081,6.912525,6.995541,-2.950546,3.689755], dtype = "float32")#candidate|9657|(1848,)|const|float32
const_9658 = relay.const([0.443808,-4.159706,8.789082,-8.137601,-6.767483,6.480586,-9.892716,8.604679,-1.957628,-2.849718,-5.187734,1.049177,-7.657798,7.952376,-7.529891,4.701371,4.647072,8.663764,-6.343048,0.155283,-4.493817,3.030030,-3.062211,0.077510,1.186008,-9.738569,8.346759,-9.315813,-4.230037,9.171000,8.802383,-0.587958,-4.463541,-9.003083,9.111240,-3.093199,-5.262282,-8.476240,-5.316400,4.539305,8.709708,5.797456,8.317060,-3.017887,-1.085690,5.438239,-8.538203,-4.710061,5.915485,-1.427564,-4.337540,-3.275399,-3.519145,5.710253,-3.402868,-8.837373,-3.847866,9.546106,0.810878,0.646216,1.095241,-6.508368,1.072966,7.341964,9.064517,3.787327,-8.223952,-7.878552,8.431333,2.999371,-2.911513,4.693743,-7.813263,5.760470,5.697332,0.775154,7.001194,-3.668793,-2.860204,7.685807,0.623106,1.523966,3.689390,6.058349,6.590945,-3.972311,-9.872409,-0.912956,-4.696654,4.970118,-7.908734,4.298169,-5.991831,-5.207245,4.419369,-0.412625,9.017958,-1.905011,4.109403,4.545268,-8.255234,-2.572019,2.800916,2.806066,-6.593709,0.922451,1.507346,-4.565333,2.128700,-1.023703,8.546669,7.853996,-0.395020,7.710123,0.705010,-5.751438,-3.501872,0.029775,8.005555,-4.388774,1.164428,4.460403,-4.867391,-0.735255,-4.356186,-8.291605,4.169741,-8.282152,9.571872,2.646998,-8.554580,-5.648451,-9.879102,7.124823,2.532456,-3.669349,1.734549,4.363369,7.426350,7.239752,3.568287,7.776201,-7.127275,-1.445708,0.584217,-7.026612,-5.632950,2.850207,-1.653940,-0.498730,-7.501305,-9.100521,-9.012078,7.804437,6.417719,-0.469495,-5.114849,2.692974,1.136577,-3.884593,7.923592,0.074650,1.134971,4.236460,4.380969,2.542019,-2.216922,3.912420,-4.931993,-3.248365,-7.841618,-5.543462,5.237614,7.322460,9.357511,1.325976,-3.023584,-5.163312,8.247215,-5.109606,-0.567992,-4.597901,8.158433,6.827907,-6.283500,-3.950938,-4.435119,1.064631,-9.630658,7.991522,-6.216646,0.206190,5.748267,0.061276,6.457096,1.069673,5.551996,-8.051027,5.306969,-0.781005,5.407526,-9.516163,5.855954,2.926914,-3.747106,-2.618785,-8.009244,-9.822244,2.340593,-7.509267,4.705123,-5.788366,-7.151753,0.092900,4.709884,9.556730,-3.817210,-0.504419,-1.058470,-8.120552,-5.951128,1.761351,-8.621865,-1.087536,7.030588,-9.670131,-8.958735,-1.401089,6.768285,2.175861,3.543169,7.260036,-6.104364,-5.958334,-0.550790,-5.169386,3.515350,4.404409,6.089199,2.676402,-9.128340,8.071880,0.962357,6.859667,6.847539,6.687923,-9.157947,6.325942,-0.505373,9.502569,-0.680431,-3.399247,1.497909,1.581376,5.822955,-4.729837,-6.518462,6.087009,8.676696,-9.381044,9.012708,8.528985,-6.909907,-7.074069,-9.992480,9.135805,5.995459,-2.947790,1.650132,0.894755,2.471412,2.174623,0.182080,8.899928,0.445307,-9.023653,0.222347,-2.808801,-5.764523,-5.390623,-6.767372,3.373155,9.501388,1.747654,3.741499,-3.444016,-4.887008,-5.063210,-8.716230,-9.349349,8.104265,-3.254801,-2.925312,-8.040300,6.890865,-5.064862,8.645983,-4.263923,4.817655,4.426677,-6.641550,8.805896,8.173939,1.255171,0.240199,-7.772974,-6.600452,7.123660,0.247759,0.151045,3.224889,5.232301,8.993627,9.304275,3.819259,6.664667,-1.052466,-4.108767,-2.472740,4.394435,9.215954,-0.467026,-6.786120,-1.337693,0.810917,1.803704,9.666867,6.311996,-6.739086,-4.415483,-4.439870,1.140748,-2.580927,-9.446007,7.883343,5.208456,2.572836,-5.346305,5.399822,-6.193235,-7.529106,6.533537,-5.421370,-5.533219,-0.913902,-9.810658,-6.853681,8.333115,9.915488,8.599161,-9.879163,1.212693,-9.424559,0.044058,-2.974000,6.954746,6.398509,0.621640,0.883516,-0.722811,-8.198943,-8.311849,6.364460,7.038878,-4.375106,7.312814,7.660425,-5.019188,1.580984,-1.877553,9.317173,-0.480527,-4.031227,-4.609995,-5.335154,7.398902,9.959845,8.179987,-5.746594,9.943020,-5.179035,4.621450,7.748729,2.217198,5.678431,7.756809,2.578029,-7.222761,9.388459,-9.939178,4.536057,-5.857984,4.614643,7.947063,-1.532283,-2.950006,-5.124378,3.631662,-8.916825,-7.965124,-2.930798,-7.867981,8.542030,6.105638,-4.301107,-9.254001,-0.857277,-2.874779,9.026093,4.511209,0.591140,-8.465696,5.971851,8.169274,-1.008120,8.918572,3.658709,4.719689,-6.052387,2.770427,-2.262127,4.992471,-8.089678,-2.295279,3.881652,-8.745995,-4.487527,-6.847673,-1.414329,6.901467,8.799278,0.677275,-6.522464,-7.963193,3.831890,3.124476,0.013468,-1.450680,9.954453,7.135197,-4.098297,3.747543,-1.383568,-7.248164,5.052608,-6.752887,6.197434,-7.378421,-9.533857,-7.148011,-2.669149,9.249549,-5.000305,-5.510242,-8.891802,3.073098,1.951725,8.271463,-8.034572,-7.549724,1.596330,4.838756,-2.770965,1.515950,-1.950034,-8.410868,5.249048,-0.631830,-3.440225,4.163075,0.345788,1.519695,6.140661,-2.448149,8.393414,-6.794803,6.565046,6.516378,1.255966,-1.690694,-2.609741,-4.424328,-0.446020,-2.204048,6.894892,-7.734285,-8.046040,2.205670,-4.930383,7.060298,-8.306215,5.043780,2.570116,8.733988,8.570755,-9.925489,0.485240,3.793604,-5.218316,-1.416220,-8.649856,-1.755717,-6.233098,-2.827618,6.709446,-8.555947,8.889611,-3.731404,-8.597309,0.708873,6.061919,-0.734075,7.667277,1.583683,4.311104,2.070159,-5.272428,-8.607550,-8.792645,7.088048,-3.524541,4.195836,9.672033,3.530765,-1.380220,9.343993,-6.844880,-5.667371,-0.048921,8.278742,6.808255,0.768191,-1.818386,-8.805939,-6.467874,9.846265,-5.880280,8.967330,-4.566272,1.359210,0.444702,-5.158762,-7.111101,9.235866,-3.571139,-3.152724,-6.362505,0.350018,9.626171,5.401857,-3.016462,5.058134,1.952508,-7.352417,0.433181,-1.324712,7.493136,-2.938327,6.124553,-5.247562,3.353904,7.965069,-9.433790,-4.206049,3.194130,4.276269,-0.790550,-9.805224,5.763345,0.828021,-1.533761,-8.384698,2.989837,-5.640447,-8.432070,-3.597860,5.268440,7.905161,2.974318,-9.140235,9.306004,-0.641371,-2.531042,-3.489118,0.270384,-9.633872,1.658299,5.728928,5.718280,-8.242130,-3.598779,8.615754,-8.626616,7.099373,6.621890,-8.350763,-4.537043,-9.913476,5.396390,-9.246448,8.844534,3.318792,1.486455,2.434734,-1.531845,8.083300,-9.367681,-4.719633,4.793410,-8.487919,9.468828,-2.740973,1.090607,-4.997317,4.453610,-2.022203,7.902213,6.964769,-2.125303,-7.282916,-3.000353,-6.635561,-6.010909,-3.473850,-0.645363,-7.981472,8.741971,4.254461,-9.878641,-1.212635,4.166206,-3.468163,-4.296950,2.023036,-1.009941,0.600173,6.559874,9.216241,-0.185952,-1.484030,5.807426,8.114395,6.723595,3.700739,-6.185396,3.578755,-0.654092,2.116662,2.927556,-9.991400,-1.734197,0.808867,2.228438,2.424950,-6.150656,-0.284142,9.860255,-5.584339,5.336481,-4.582691,7.348645,2.435174,2.634053,-0.062113,0.755023,-6.086531,-5.973847,-6.613800,-9.375955,-1.185602,4.616697,-4.338436,-3.654765,8.717542,5.973622,4.617638,2.276860,-9.561245,4.525975,2.322930,5.394349,-3.181020,2.448935,7.904797,1.625424,-0.498310,2.515507,9.769748,-5.685578,9.200983,-7.816291,-9.826382,4.763275,-2.476480,-0.979228,1.602705,6.496741,7.404932,-4.763079,-0.751641,-4.888140,-2.732929,-0.857626,3.639169,-6.524058,-0.128943,-5.403084,-6.468290,3.266279,-5.157989,3.828934,-1.806657,-9.203853,1.018555,-3.734190,-8.921551,2.469585,-6.516789,-7.448209,-6.392345,-0.532477,2.291436,4.822161,-0.404327,-8.573611,-4.822709,6.510748,-3.317586,9.789114,-5.950927,9.228258,-5.821217,-9.279888,-8.030690,1.109762,3.740374,6.617548,-0.006027,3.048695,-6.302472,9.545601,8.903928,7.478155,-0.674210,2.634239,-2.691404,3.288722,9.726137,-4.208842,-0.690775,-3.750732,9.190949,-2.050798,4.591127,9.921442,4.874026,-9.224450,5.996232,-6.654204,-9.019499,-0.086784,9.879972,-2.250367,3.574300,-9.222166,-0.810331,-5.084398,0.138812,2.925652,-2.871349,-9.907359,8.430403,-4.472688,-0.821500,9.358234,-2.410800,8.554637,0.639498,0.411000,-0.613288,5.573839,-3.751662,0.053131,-5.332235,-7.283258,3.032615,3.693681,-9.539928,4.229714,-2.508605,6.148558,-1.937634,-0.928338,-7.379361,2.484906,-1.658093,5.753759,-0.867649,-2.814723,0.645598,1.596701,0.393322,-0.038918,-4.682066,-2.122377,-9.039935,5.528210,-4.683407,-4.229366,9.776011,-4.582874,-3.379217,5.634160,-6.885983,-9.179970,-6.239382,-6.863257,-7.735702,2.631406,-5.233363,0.883149,-9.363480,3.690080,2.431245,8.033100,5.464981,-1.024339,-9.884114,-3.109935,5.342370,-5.670163,-6.133550,1.082238,0.784169,8.705789,-1.613768,-5.678521,-5.794715,8.464919,-2.879797,-2.084338,-9.384578,8.420820,-1.137913,6.191084,-3.873817,-1.814708,-8.217702,4.424142,-6.464571,6.136621,-4.832209,9.237935,-7.238521,-3.288844,-7.610268,-3.369003,9.205849,7.911052,-1.331002,4.589959,-6.549265,8.517925,5.071116,6.649192,-7.610941,-7.742957,-4.935557,1.163187,-5.478554,0.931643,-0.556353,-1.956410,-5.502651,-4.534686,-3.712367,3.420328,2.246238,-9.415908,-5.388740,-8.319551,-2.830372,0.393475,2.964896,3.747815,-6.537890,-9.591410,0.646823,-8.631759,-6.970257,-3.826576,-1.615549,8.847262,-2.879595,-5.957667,5.402410,3.511817,0.978318,5.687221,6.350453,-1.427999,3.031662,3.784718,7.495808,-6.837438,-7.509268,1.953391,8.353187,-5.229201,-9.371877,-7.773235,1.194751,1.169166,-9.027787,5.137340,-7.728780,0.701076,-4.867284,-7.962328,-4.525523,5.332545,4.039380,3.601107,-6.921701,-9.118670,-0.906460,-3.277596,3.348967,-4.844050,-5.038747,0.393819,1.337907,7.641411,4.773791,-5.998152,-6.053020,-9.540908,-4.183524,-5.877740,3.183316,9.825127,0.446884,-6.761721,8.191478,-3.479796,-8.838307,-6.025783,-8.903632,-1.624452,7.179288,2.968277,-5.946880,8.084189,5.864203,5.883473,0.572620,-1.580379,0.909559,0.011139,1.654098,-6.389487,9.701166,-7.065808,-4.153067,-7.114397,2.561649,-0.990992,2.305664,-7.587919,7.058994,-2.604623,-6.605262,-0.806551,0.356435,-1.178276,4.316066,-8.830013,-7.386851,9.817644,0.572705,-2.940805,7.189816,3.097997,7.017665,-6.604138,7.720692,2.595442,3.320589,1.019214,0.010429,-6.679963,2.549143,5.974886,2.733349,-8.418761,-1.167841,0.725518,7.439932,3.945376,-6.783324,-9.449996,-5.748535,0.002190,4.716878,-2.180356,-0.799903,0.085098,9.294924,0.738571,3.024482,-0.865430,2.785625,-7.349672,-6.880393,7.311167,4.249920,-7.065124,3.521418,9.871890,3.012821,9.384907,-6.789892,1.025861,3.196538,-1.158088,-7.038038,4.296914,-7.173777,9.656914,7.922639,4.445471,-1.312065,-8.461175,9.395017,-4.682833,8.786612,3.907862,-4.198824,0.943755,5.216256,2.890596,-7.234049,7.640815,-4.225159,6.613712,6.907035,-4.567812,3.697264,8.265849,-6.744375,0.474210,1.120388,-4.202799,7.847864,-3.845169,7.304883,-6.576503,-3.165800,2.545619,-3.496216,-6.467705,8.349030,7.395208,8.852012,-6.581713,-2.320743,2.608771,-2.632075,-3.741816,3.893967,-9.762395,-0.001475,8.318556,3.209415,4.509272,9.003679,2.807078,-8.372996,7.096885,-3.097066,7.874383,4.289433,-8.740877,-8.601598,7.197250,6.435539,9.935550,0.715325,-1.300530,4.807271,-5.338800,3.932613,3.483825,3.175715,9.022193,-8.785819,-5.404182,2.371787,4.595602,7.952147,-7.767137,9.147921,-1.188963,-5.241143,1.575125,-7.859240,-6.874763,2.194762,0.548487,7.253124,-2.258251,-8.048161,6.769153,-2.244425,2.500098,-7.229386,-3.028683,1.001295,-9.558795,-9.774525,5.123363,0.454031,-3.663007,-5.084165,7.545929,1.688045,4.100667,9.651536,6.596277,-9.021907,0.976655,-5.964832,-5.646867,1.531060,2.447832,-4.713486,-5.308181,5.941246,-2.741737,7.370040,2.485436,-6.895460,-2.469684,1.629302,1.973609,-0.883410,-0.223972,-1.789901,4.257696,8.804356,9.838091,9.280974,-6.193917,2.177960,-7.267314,-3.869020,7.816904,4.564135,-1.535411,9.985775,-0.376290,6.903599,8.923006,7.707765,0.331049,4.935023,-2.071935,-7.275589,5.072568,9.755165,-9.241335,4.224953,-8.661453,2.036534,-8.302109,-7.706545,0.837019,0.021208,-3.064746,8.693951,-9.871386,-8.364662,9.833823,9.462226,-7.434694,7.338515,-2.481702,-7.338994,9.628246,-3.077314,8.021232,-7.824843,-6.773566,9.592771,-1.227126,-3.983882,7.124234,7.533647,3.771951,-5.029026,7.643508,8.216535,-5.845533,3.273736,4.967726,8.354581,-7.430430,7.229319,-9.348853,1.043007,6.340243,5.224996,1.501565,-5.303145,2.448366,-3.970918,-3.335218,-9.831847,-9.656862,-5.134856,5.197757,-4.121194,2.052576,-1.859236,-7.421917,-9.986149,5.820960,-2.381141,-3.524907,-7.892592,8.247878,-6.874462,-4.905244,7.934614,-7.263740,-1.193056,7.970232,-7.667895,2.410470,-3.987864,-6.809339,2.037904,-8.456796,-7.485254,-9.184694,-0.404322,-4.009374,7.081997,-2.881387,1.922158,-9.447631,-6.893884,-7.260120,-2.013403,-9.644226,2.689450,6.539620,-8.606777,-8.016648,-4.649186,0.061902,4.378628,-5.891971,-5.678995,9.947654,4.436512,-1.579737,9.148606,-2.297169,-0.702751,2.190073,-4.817875,-2.202060,-4.595883,4.356884,-8.170507,-1.913222,-6.858538,-8.571142,5.496144,-3.141813,-2.303454,-0.993887,3.868342,5.655821,6.069925,7.370159,-1.182622,8.384752,6.278087,9.803088,0.726975,5.672117,-1.479428,9.272310,3.153876,0.303530,-5.217859,2.892707,-2.315764,5.202685,4.725783,7.602691,-6.473503,5.192574,-8.526484,2.898899,-3.296563,3.203750,6.670720,-1.860346,3.486416,-0.809755,4.053323,6.432871,-2.325107,-8.654006,-4.349609,6.283354,-0.398660,-8.516099,-0.852173,-8.633685,-6.684851,5.772370,-6.485474,-0.261571,1.213307,9.878378,-1.765191,8.603030,0.775176,0.547604,3.872713,4.241586,0.035287,-4.903337,4.897169,-4.200125,7.081947,0.101506,3.144754,5.086121,-7.799199,8.615693,3.234691,-5.279646,-6.992826,-8.937835,-1.337062,3.651584,1.275878,4.824646,2.787603,-1.460009,-3.116525,-6.966788,5.908522,-7.030017,3.485857,5.182628,-7.839239,5.718502,1.009231,2.594195,9.904631,6.193141,-4.968192,-3.306564,-8.044936,-8.545295,-3.224287,-7.495286,-3.933395,-0.629719,-5.407564,7.971181,5.760281,-0.500649,-2.891164,-8.521902,-8.572877,2.043283,9.008639,-8.134336,-1.616110,-5.029626,-4.682817,1.384946,1.400050,-4.920463,9.158812,7.917788,-5.051950,9.827727,9.730140,5.411350,9.906077,-9.217282,-0.712161,-6.181896,-5.975512,9.508449,7.534342,2.120567,-0.720679,-6.651879,4.040842,-4.160130,6.468702,7.533480,-0.072901,4.172549,7.607540,-9.346330,-5.558488,-0.636405,1.027010,2.625017,-0.100460,7.628397,-4.463779,-5.038866,4.292859,-9.128838,-3.891023,7.921686,-1.807867,-8.692029,8.635383,1.554616,1.383365,-9.510905,2.422978,3.290999,-0.555963,9.798831,4.395361,9.544560,-5.008760,2.748764,2.702887,9.193644,5.746433,2.445736,-8.455356,2.738729,-6.908353,-3.351947,7.192686,-2.881734,8.821474,9.182631,9.186932,5.444648,-2.344841,5.362539,-3.936647,5.547282,-7.128114,-1.774410,1.253064,5.336450,5.412812,7.505368,3.885442,-2.128247,2.018810,3.536438,-6.522483,7.978606,-5.113483,-2.194237,3.413325,-7.696313,-3.089834,0.255960,-8.162185,-7.179794,-8.690939,6.524756,7.963935,-5.116790,0.835985,1.436954,5.564522,-7.426958,8.588114,-5.300854,-0.664647,2.385522,0.355642,-1.696449,1.980064,5.887196,-5.342694,8.190846,-8.886651,5.288227,-9.318403,-3.212941,0.764551,1.938125,9.880539,9.087234,-5.083053,5.307812,7.120567,-5.720923,-5.286830,8.118524,-5.461216,-0.322297,-9.182855,-9.113480,-2.935510,-7.510238,1.002830,7.632915,2.898961,-9.792298,3.749592,6.991515,3.132585,3.086055,4.160970,-4.900459,6.757819,9.088753,-3.094965,-0.456550,-9.879736,-3.716313,-1.128373,-1.606890,0.650224,-8.516548,-6.680985,4.079502,2.304396,4.922565,6.678417,-4.770321,-9.921498,3.263772,4.614825,-2.728257,-0.096769,0.026943,-8.673080,1.626694,-2.693026,-3.437507,2.222684,-0.771605,-5.529169,-3.558404,5.668389,-0.634689,-6.073403,5.915229,-5.424062,7.009097,-4.762492,3.975410,-3.395627,-7.574333,-9.632477,-5.708273,6.854702,-8.092114,-9.422690,0.269595,3.817044,-5.622696,5.427977,5.143212,3.478893,7.100952,6.790963,-6.343547,1.992676,-5.648853,5.331021,3.770295,3.387554,-7.478995,-7.223621,-1.546113,1.152117,7.372069,-5.051027,-2.291503,8.120008,1.842802,0.791582,3.179625,6.904389,-4.738294,-8.214194,3.709963,-5.463094,8.223565,3.415535,-8.232098,-6.525029,-1.385237,2.387175,-1.990744,-3.934093,0.468374,7.659577,-6.807003,2.433669,1.774930,-5.269929,6.880894,-7.994058,-3.162225,-9.472347,5.722427,-3.630336,6.814638,-7.535614,5.704990,-3.079234,-0.836430,0.424448,-5.360797,-2.856432,-6.552175,-4.867148,3.286397,-2.234202,-6.752501,-5.501046,-1.576098,9.234168,-5.385051,8.662618,-5.244380,7.028400,-2.389486,3.283908,5.747097,-0.255652,0.628334,0.613397,-7.150521,-3.465548,4.690517,-3.903822,2.702424,8.417996,2.086124,6.468206,-0.123572,5.951664,7.718383,9.895894,-5.494641,-4.329122,-8.545774,-1.440783,-3.924640,-7.852317,7.068276,1.565494,-7.248548,4.767072,8.150058,-2.774727,2.872190,-8.024881,-9.281633,5.624331,-6.620447,-0.305911,4.737362,6.986854,3.018683,0.193294,-2.630301,-1.541772,-7.188481,-3.654316,-2.962269,9.476210,-9.126825,8.079951,-6.163592,7.282274,-0.750411,0.054029,-9.072693,7.419980,-1.795080,1.824405,0.196358,-0.483551,0.301254,-3.705316,6.109579,0.295990,2.023380,-0.539428,7.004075,-6.241982,-8.039253,5.331038,-8.295595,-1.650746,-3.083270,0.333992,3.145017,8.858299,1.047442,8.636951,9.392224,-5.969727,9.009086,-1.050148,3.391259,-1.193003,9.152692,-1.087002,1.699175,-5.810079,-2.225169,1.976973,4.492629,-3.084780,-6.818931,1.397334,-1.170456,2.619953,8.351895,-6.590159,-5.706121,-9.271136,4.648880,-9.085731,2.496117,-7.343542,-2.705899,-4.425840,-0.873493,-6.367891,-4.470272,-5.889027,-7.373263,-8.171726,-7.721959,-9.522248,9.635337,-3.879514,4.358922,4.094285,1.077509,4.565982,-6.957919,-0.384956,-7.254951,8.051558,-5.393116,-7.712267,3.482954,-5.303369,8.460864,4.946080,6.790981,8.339664,-6.012805,-5.737944,-8.179407,3.580204,0.443468,5.259363,9.799997,-8.617206,1.057791,-2.356473,5.516369,-2.411330,9.071155,9.019655,3.136120,3.783845,-1.078117,4.165346,9.720882,6.017649,-7.488171,6.427027,5.531317,-4.172587,-6.161703,-3.359505,2.480245,-0.557000,-4.189511,-0.837969,4.983290,4.389730,1.099257,-9.088911,7.434712,4.671611,9.521969,1.637427,-6.441100,3.407963,-9.643626,-1.541169,-7.650133,-3.726008,-6.166792,-6.301908,3.145065,9.036826,-2.443545,4.098542,5.151797,-4.863192,9.870172,-5.953714,4.317965,-3.209996,2.088197,6.223622,-8.863934,-2.174770,-7.680851,-3.290672,-8.336171,-0.474623,7.712661,-8.356803,-8.263947,0.141998,4.339271,7.814278,2.194397,-1.527287,-7.185312,-0.568894,-8.536226,-7.025896,3.337459,-8.525041,-8.893895,2.998647,-7.514447,3.067062,-9.080708,9.704063,-6.864802,-6.590940,-7.637592,-6.378329,-6.067426,8.494318,8.390960,-1.070839,-3.021236,-9.990612,1.330947,9.001339,0.347570,1.183872,4.485379,0.002992,9.012922,-3.549347,9.755333,9.851423,4.749880,-5.013101,-6.285154,-4.088889,4.553320,8.313021,-3.382582,-5.541712,5.003564,2.913699,-7.624022,-7.792105,-4.977835,-8.003490,9.019196,7.654595,-7.174847,7.631588,-9.020590,-3.809397,-5.693579,7.831459,-2.479955,9.380998,4.963819,-5.148968,5.396879,4.350676,0.931337,5.009251,0.899159,-9.294645,-1.500501,-4.480234,3.686629,-8.845236,1.550133,-8.095369,-9.260069,1.336117,-1.215581,7.670857,2.024504,5.171440,-4.100807,3.946167,5.654833,-4.174600,-7.699183,8.405122,4.872519,8.665427,9.270927,-9.054221,8.497120,3.247228,0.790819,-1.526791,7.091604,-3.718776,-1.059841,-1.699856,4.295154,-6.635295,9.743859,0.794994,6.162875,0.084542,-8.619113,-1.071373,-5.651596,9.484107,4.504025,-8.065847,6.608263,-3.015172,-0.150607,6.897039,9.212649,3.435017,5.912935,5.992886,-0.793637,5.349903,-6.492979,-2.248910,9.558153,2.833252,6.127615,-2.620102,-6.325069,6.650524,3.751173,-9.543492,-5.401575,3.014750,-5.580755,-4.525419,-3.418679,6.463981,-3.885733,7.280307,8.982017,-9.188129,-7.831520,7.785099,1.801042,5.640588,1.245853,-8.567787,-3.757849,-1.061670,-5.991395,4.164144,-4.318417,-4.867124,-7.012448,4.127093,-6.432994,0.460932,-3.443106,8.092783,6.443835,-4.600907,-7.757693,-6.081114,-1.555467,0.500307,0.100640,6.682340,5.308798,-2.252420,9.423598,6.696492,2.451912,-8.884819,9.652758,-9.353235,1.661984,1.555733,9.779531,-0.801875,-1.537478,-9.888220,-7.020989,-6.600106,4.763627,8.302384,-8.916588,-4.448488,7.169647,0.267869,-0.048338,9.039371,-8.061114,4.553024,-3.678940,7.814221,4.323609,0.146834,-6.667119,0.740792,-3.375989,-9.058772,4.294648,2.386656,-6.477366,7.373954,-3.874350,-3.133630,-4.921250,-5.902495,9.918223,7.510419,2.896942,-7.825396,-6.484117,-6.446823,-3.569707,5.947482,9.715611,4.823408,2.229818,6.111342,4.362105,-2.963557,8.529030,8.256085,6.278309,-3.933163,6.181495,-7.662455,-9.639263,-3.379179,0.626257,7.324378,-4.298883,-7.488147,7.668978,6.300695,0.707346,-3.738398,-5.857240,0.452847,3.962837,7.086672,-9.040084,-9.289722,-8.520353,-7.375255,1.000643,-8.078658,-2.857579,5.282681,-0.577949,-0.724154,7.509144,5.296816,-5.542925,4.514294,-2.670175,-9.283104,-2.542567,6.760116,-4.277486,-2.487962,9.097674,6.421323,-8.322604,-8.223246,-5.694190,-1.024930,8.631491,6.048091,7.481146,6.885224,5.103506,-2.245458,5.316273,-2.705989,9.237166,1.938509,-4.318471,-4.267661,8.194545,2.905368,-4.438930,1.862011,9.252652,9.177749,5.144579,-7.041396,4.883197,-4.483328,4.273480,-8.599302,-4.025005,0.755687,-6.723964,2.435675,-4.070434,8.549405,-0.513310,1.579291,-6.988396,-1.265240,5.011543,-7.321907,-2.366753,3.562838,-6.534916,-0.179360,8.522568,8.691980,-5.713851,-2.852574,6.355268,8.245817,-4.149046,-5.756325,0.301230,9.203063,4.192643,7.387382,-7.170457,1.291706,-7.818805,8.535114,-7.401132,-7.320670,3.348252,6.359367,-8.307857,8.950135,5.288575,7.262090,-9.256249,-6.167751,0.511448,0.191439,-6.259017,-8.703125,5.599237,9.868107,-2.105482,-9.466303,-5.701712,-5.698535,-7.369643,6.659891,4.322718,-7.361897,4.750464,-0.703211,9.111841,9.193972,-8.607265,-0.139177,2.388711,7.921594,5.272375,-1.087161,-0.464276,7.848363,-6.797120,-3.656404,9.145008,7.035698,6.443283,7.647041,-3.179920,1.216693,-5.313468,-3.850995,4.942288,1.133254,4.412794,-3.445197,2.300591,-1.059702,-2.263551,2.333577,3.668558,9.069643,-6.951285,0.833357,6.805332,-3.025816,8.730450,6.539498,-9.889452,0.419388,-6.531085,5.359078,4.917861,8.906105,1.348500,-7.342411,-0.886263,6.743273,-7.200640,4.257272,7.197257,-7.987187,-0.236113,1.735578,-5.543688,-5.574874,-3.330565,-2.360862,2.006431,-1.078863,6.721245,7.626776,-7.547906,-3.645109,-2.854444,-4.045458,2.117697,-4.365994,-0.685335,2.410391,-1.652816,-6.990138,4.525071,2.622401,-7.121833,9.643298,-8.055766,9.374264,-2.150833,7.283168,7.498558,-6.671294,-6.333979,-1.839102,0.004701,-0.096494,8.867349,-0.100864,9.560813,4.390460,8.528207,8.697874,-3.077652,-1.102312,4.501428,5.981055,5.813025,7.607383,-6.823538,6.563111,0.042630,7.200966,-0.068170,-0.688549,7.118233,2.099086,-4.837430,-4.701691,-6.781411,2.743786,1.071912,-2.647887,1.260338,-3.660236,-0.995276,4.883238,5.978515,-0.808150,-1.999062,-2.486748,5.021065,4.660884,-7.963726,-0.984297,-7.247036,-7.234752,-3.544225,5.872906,9.024116,1.100614,6.439676,4.457994,3.714586,-4.444795,-9.096402,-3.276885,-9.867153,-1.528502,8.655276,1.217504,-0.962889,9.151488,7.953799,-1.762712,4.792331,-9.665662,-6.604537,5.407490,9.408520,-8.415479,-6.582828,1.778227,-3.916261,-0.617736,-0.005271,1.277373,9.956337,3.750396,6.348740,3.109496,9.633478,4.418788,-4.155554,-0.406279,-6.968102,8.320836,0.911337,-1.025230,-4.606320,7.405836,-0.305746,-3.605277,-5.965036,-0.302718,8.130875,-3.745381,4.176016,7.259335,-3.045805,-3.173777,-0.061933,-4.005197,-1.335925,9.292020,0.665308,-1.687240,5.244068,8.290908,-6.343422,-4.581690,-7.835094,2.600358,-4.212690,2.222949,-1.211207,-9.962777,6.125513,-9.916418,9.665829,0.035327,-6.096066,-5.903227,-4.471377,9.859061,-0.754043,-4.456250,-0.230279,-8.073977,-2.556546,-1.356213,2.830188,7.264588,2.641716,4.596229,2.245608,1.219812,-2.697036,-5.283047,5.427830,0.505987,9.874900,-6.259720,7.367466,-4.938114,-7.145845,-8.986383,0.018434,3.703417,2.701309,1.333813,7.227889,9.499215,2.317214,-7.861414,4.797859,-4.236440,6.854986,8.324725,0.297027,2.801085,-6.207898,-2.670646,1.365376,-2.725628,-4.997908,-8.259466,-5.444947,4.989530,6.622536,-3.922834,7.722100,6.855479,-3.111500,-9.843716,-6.257322,8.900921,4.069261,1.976421,5.329053,-0.755970,3.248868,6.467004,-2.478258,4.554155,-6.105241,-1.491402,-9.345041,3.768960,-3.663780,0.098314,1.610551,4.923492,-6.569792,1.491382,-1.200431,2.826384,-0.955199,4.031251,4.097442,-4.275841,3.998516,0.766370,-2.633023,-0.883172,-4.768518,-1.608947,-6.186127,1.077031,-3.233928,7.493752,-1.058079,-0.080750,1.818441,9.181216,7.497294,7.187866,-3.090116,-5.000371,1.429465,-5.941373,-5.106532,6.128242,-2.664081,2.660903,6.328801,-1.294259,4.348570,8.548024,-3.879376,5.157780,-8.423109,-2.276206,-4.327182,-0.412750,5.394902,3.356911,9.593267,3.436212,3.343061,-9.725116,9.106637,-9.000961,6.269479,5.850398,-0.077995,4.926968,2.240250,-1.717253,2.402836,9.573901,1.479597,-0.406659,8.864423,-6.732490,8.279083,-1.753310,7.147786,5.613885,-1.253613,2.186638,-8.705223,8.077896,-3.225821,6.964035,-8.286203,2.082573,9.620173,-5.682324,6.030825,-9.937692,3.681537,9.966471,7.338521,-6.538675,4.962553,0.731751,-9.769299,-7.228982,-7.299124,-9.965217,-8.762692,-0.812228,-8.669239,8.526589,1.100766,-3.374304,-6.173536,-2.703027,-2.382162,8.790491,-9.617854,2.470455,6.861382,0.001721,1.978044,6.981324,8.127595,-0.315970,-6.291285,8.569503,6.035371,2.151464,9.843778,3.684060,-4.146180,-9.841812,9.633098,5.988864,0.634491,-1.344928,6.946627,-7.682899,0.290841,-0.189896,-6.150059,-4.342021,3.024086,5.583331,3.176586,-0.049838,2.917405,-5.347320,8.345555,-1.050355,-4.800060,6.301268,-1.317990,3.057804,-5.423434,5.328290,3.544916,-2.617500,7.119111,-4.071195,0.281811,-4.288092,0.672953,4.456656,8.146515,1.747216,8.947135,0.158656,-0.865648,5.150850,-1.769105,-1.291175,-8.866549,-8.387058,-3.176434,-2.778408,4.716049,4.717439,6.304632,2.295414,-8.021431,2.320697,-2.216399,9.107129,1.645486,0.535346,4.679053,2.169813,5.845944,-1.160888,-9.726399,1.137432,0.735182,-4.790510,7.321417,8.647470,-5.107590,2.618187,6.791221,-9.964451,-7.030327,-5.944039,8.555616,9.381643,3.865306,-0.394149,7.307345,-3.938290,-4.133954,1.202222,-1.292295,5.417095,7.610734,9.601957,8.902919,7.580844,-1.214281,-7.507947,-4.421877,-9.473250,4.968166,9.673583,-1.282702,6.950311,6.709427,-5.727258,-9.845107,-9.717088,9.684683,-3.436833,6.109625,-2.383866,-5.826774,6.965511,-1.682626,-3.815541,4.548671,-9.900443,6.518245,-5.573373,8.004140,4.047375,4.479837,1.861365,6.571280,5.575649,-8.934727,-7.441331,-8.234192,9.629273,8.610286,-9.958053,3.734362,-9.379619,4.299154,0.885654,-3.985109,-0.320110,5.231061,-2.523676,4.292966,7.372227,2.954260,-3.938472,-5.363361,-3.246661,-2.316016,-1.041020,-0.871317,-5.988360,2.360719,-3.032017,-3.358945,2.045315,-5.015250,3.553186,-3.804842,5.587288,-5.102697,2.997496,7.611960,8.699913,0.959571,-5.078534,-5.372046,0.453696,-0.783785,2.255707,-2.675707,-2.493347,-5.590563,-3.933972,2.774321,-7.838969,-0.802191,-7.500943,-2.220145,2.356530,3.053039,6.510805,-2.611826,2.377620,-0.832679,-3.880186,-0.853806,2.741230,-8.170792,7.249124,-8.394521,2.351528,9.551573,-2.192944,1.415678,3.365904,1.878454,5.064137,6.384266,0.012522,9.257857,-3.104625,-1.725904,4.257779,-4.838739,-7.133450,-7.693207,3.417461,4.122148,0.787095,4.822762,0.475635,7.030395,-5.411560,-8.915295,-1.372273,7.644275,1.599606,6.158918,-9.000399,2.249522,-8.610069,2.014161,3.271529,8.771924,8.835970,-5.008694,-5.367602,7.967556,-6.227657,-9.850219,-6.600241,-7.691572,6.384259,-5.395159,3.045602,0.357801,0.574071,8.847058,3.866157,-7.213608,4.822914,-5.663106,-5.163642,-5.417610,1.181270,-8.006320,3.328691,7.698305,-3.984654,-9.625343,7.761814,0.865663,-2.804644,5.188527,8.166700,3.322449,-4.225869,-7.045197,8.838878,-3.634492,0.441392,-1.977163,4.402017,-0.616821,7.617317,0.368696,-4.340596,-4.453642,8.495024,-6.953117,3.956370,1.525420,5.160357,-6.204393,-4.034111,2.469914,6.421762,-8.771024,1.892477,-4.975081,-3.226298,0.508387,-9.175141,9.009781,-6.616861,2.553079,6.010749,2.287970,-2.065432,-8.267385,-8.811681,5.098353,3.837267,-9.427378,-9.066599,-7.796254,-1.754423,6.965607,8.593427,-1.615534,-8.911365,2.904910,-4.938999,0.503818,-9.072725,-3.197676,1.790498,6.260764,3.879233,-3.645353,-3.538351,-0.659962,-3.886414,-8.058485,5.294095,2.942945,-8.151217,8.402956,-7.706289,5.078278,-4.812621,9.768521,4.588498,0.342662,2.755630,-6.777721,-0.785786,-1.966652,-3.206311,-8.847171,-2.689873,-1.390734,-7.835009,7.091794,-6.135388,6.156209,-1.169524,-2.488093,4.582600,9.330268,7.617279,9.499577,-0.939384,7.049534,-2.538641,-9.686680,5.960149,0.167628,2.828662,-1.605009,4.234622,-4.431543,0.013932,-3.518801,-4.591872,6.397973,3.279856,8.612051,-6.571017,5.455094,-4.348856,3.938374,-8.385004,6.670143,-3.175626,3.563701,-2.557117,3.517804,-1.843306,-2.856583,8.971894,3.070502,-4.259092,6.080134,8.272319,1.694507,-1.420212,5.796282,3.813608,-8.974426,8.740256,-4.931731,-4.959909,6.163099,8.282694,7.964353,6.087331,6.341026,-7.277984,-8.726996,7.420047,6.126207,7.279579,-7.897380,-6.921905,-2.312230,-8.699268,9.226866,-0.086542,-4.870393,-6.613023,4.008191,-0.439915,-7.051825,4.625465,-3.095499,-6.745042,-4.249092,-9.231969,9.850558,-0.905049,-5.292134,-2.432952,9.841272,-6.396933,-4.084745,1.331548,-3.190716,-1.150674,-7.791717,-4.130798,9.560261,3.921312,-9.944645,-2.686601,-7.816524,1.509430,-8.630797,-5.726330,-0.654095,8.000413,9.853343,-1.977367,-1.662776,-6.259325,-9.117614,8.376977,-3.727111,-4.746644,-1.160745,-9.955705,9.646662,-5.943038,7.221676,1.871281,6.090579,-5.356763,8.544863,9.357155,3.357718,3.239060,-6.607342,1.869943,0.598967,6.880882,8.371558,-0.643158,3.466371,-2.675324,9.653673,-0.053828,-2.104617,2.297381,-2.956386,4.341472,5.240738,0.258978,5.306056,-4.460036,-7.725348,-5.025577,7.555770,-8.102677,4.782890,0.560374,-8.699547,-9.121489,-2.217267,5.354182,-7.139552,-3.529573,1.558062,0.871290,3.625929,8.791154,4.508550,8.756044,-9.727542,1.841412,-5.664454,-4.618808,-2.328714,5.152208,-3.008859,6.115874,6.865559,-5.420759,-7.255933,9.172482,2.965236,9.711987,-3.992135,0.585836,1.760580,7.551523,5.154937,-2.639069,-9.000723,-3.603203,-7.584303,9.273740,-9.946208,-0.912542,4.216987,-5.670252,-3.955914,0.478834,-5.908501,1.174827,8.968567,2.207864,-8.338202,-9.034234,2.662466,-9.013218,0.695906,3.881077,6.387837,-1.944516,8.162094,-6.434340,-2.691086,-8.577430,-6.317109,-0.240577,-1.815062,1.119013,-0.884595,0.630141,-9.247274,3.656148,4.174801,3.082186,6.716229,6.339555,-4.179264,-6.880968,4.265304,2.359435,3.113916,2.668452,7.956143,-9.132867,9.433508,0.374383,5.917432,0.687726,0.809175,-1.526615,-4.013672,9.410073,9.033430,1.823432,4.103029,-8.286564,7.347216,-4.608962,-1.288559,-3.553972,5.850963,-7.695215,-8.815589,0.063584,-2.032213,-3.007993,-9.486984,-3.438986,-8.490373,-2.323618,-5.342555,-5.557285,6.888174,0.589651,0.764194,1.187594,9.871106,-2.295740,4.299774,-7.734957,6.229480,-4.736486,-5.060257,0.453941,-1.266836,-6.057154,-3.190253,-5.289120,-9.458527,-8.233989,2.263221,-4.477891,6.905465,5.098745,-0.358818,-1.673487,-8.188111,1.900399,1.795770,6.231336,4.243752,3.676383,-0.275256,7.257396,8.451690,8.080510,4.959627,3.927109,-0.958901,5.997265,-0.544746,-7.742273,-3.151318,-9.045674,-2.820626,7.555340,6.317880,4.481872,4.813706,-1.962316,-9.682831,0.672940,4.227235,-0.269261,9.067268,2.530191,-6.444937,0.744117,9.164411,-2.522088,7.068102,6.058918,-2.491997,6.364738,7.820376,-1.998788,7.305081,5.966000,1.572112,-6.915191,8.584474,-8.888751,1.424383,-0.380889,8.652949,-6.234332,5.738898,-1.113555,-8.636307,3.383672,3.748795,-9.560655,8.097687,-2.682570,0.867705,-5.338655,-7.498021,-3.466649,-6.962777,-1.608560,-8.640048,-5.382009,9.416004,0.882156,-8.433653,1.852508,0.299001,-5.566082,-6.762714,0.113077,2.283132,-8.254240,-1.925654,5.453750,-7.382888,0.534006,-8.091972,-5.781403,-2.239468,-2.123692,-8.876037,-5.606629,7.873195,-8.560953,6.710787,2.300541,7.686503,-9.035073,9.227601,-0.367966,-7.333567,-8.272379,-2.845488,-3.619746,-0.137338,0.096364,-2.680309,-7.681147,5.129326,9.170587,-7.338349,5.575560,6.078734,-5.335251,-9.419253,-9.522211,-2.691069,6.288030,6.199227,9.259768,-5.217026,-9.565270,-5.422725,-1.885561,9.677483,7.756831,6.066825,-1.944777,-0.970080,0.432760,0.651536,9.085120,-3.943646,-2.551646,-0.334708,3.984134,0.740876,-4.309269,1.379776,0.031658,-2.095289,-3.863035,1.154376,-6.021048,0.025775,-3.778827,2.506428,-0.856941,7.531660,9.958977,-7.416887,-2.830392,-4.192060,-0.284035,-6.705700,8.726963,-0.548939,-0.362742,-8.945795,6.721879,-1.613748,-3.809993,-8.165455,6.341133,-8.556600,7.564181,9.055916,-7.992094,-5.707806,2.015209,-3.692200,-0.884523,7.940667,-0.338484,1.427892,5.292984,-3.896369,-7.608316,7.305673,-1.811077,-3.381239,-2.495485,0.809243,-7.463070,2.980493,-5.715996,-1.625354,-6.186495,3.753077,9.353728,3.422948,-7.723832,-8.171067,-7.687841,-0.096452,2.630698,-5.468553,2.802495,-0.452716,-7.569484,3.606909,9.720892,8.751084,1.941556,7.646588,2.501960,-6.033242,-8.011094,-7.921064,-5.153877,8.432168,-7.724039,3.920505,7.065398,6.794372,-6.725729,5.183872,-7.806282,4.652554,2.739878,-1.258773,1.175245,2.603230,5.679621,-6.737473,-6.614132,-6.885445,-4.426549,-5.254582,0.821456,2.831735,6.853085,-2.418848,5.026070,7.406242,-4.317065,3.315102,-3.333351,7.417098,0.589305,1.199667,9.629058,-3.570953,-6.325654,0.868875,-3.761587,3.260927,7.788064,5.143366,1.916138,-1.145473,-8.763896,-6.418851,-4.393457,-0.762336,3.062977,5.532540,6.122467,-9.274562,2.728089,-8.478808,-6.354860,6.766181,5.926700,-8.461993,0.506769,-3.034041,9.812251,7.189600,-7.478267,1.062660,6.047640,-5.470007,-2.725901,-5.221866,-0.652696,1.390764,-7.468626,8.131369,7.869672,7.585696,-7.945808,-8.167857,-0.838278,6.725086,4.458146,-5.758978,2.205135,-7.919220,-0.570701,1.291349,7.029697,7.436676,6.319770,5.597241,8.087676,-6.728812,-7.653093,1.688298,-2.494358,0.067914,8.961848,-6.634233,-4.863554,-1.831916,-8.284706,8.730914,-6.341623,4.027739,7.679040,-5.483531,0.994520,-8.055003,8.717288,-5.539847,-2.940083,2.234649,-2.548251,8.816603,-4.210710,1.842186,4.844540,-3.194169,1.936624,-7.595914,-9.201068,5.985923,0.633141,7.912438,7.170738,-3.453326,8.247586,1.229161,6.412266,-8.751708,-6.427290,-0.066150,0.514423,4.360261,0.842255,8.195559,-9.321634,6.913630,1.755170,-3.698114,0.151071,-8.049222,9.872137,-7.680402,-5.292955,-9.425671,-2.931169,9.727184,-8.310213,-6.867363,-8.045152,7.753905,3.954217,-1.078656,-3.192569,1.413265,6.763080,-0.434328,-7.650383,4.501128,-7.922027,0.863024,1.320396,-1.953508,-5.653007,9.327715,-3.654506,9.795616,4.345258,-1.211167,8.063324,2.870413,-5.403252,0.375071,-0.188535,1.837198,-5.164155,6.323278,9.511962,8.350155,1.466704,-1.950338,-5.733026,8.583341,8.528659,9.139333,5.696115,2.699378,-2.012254,-0.588614,-5.311735,0.763354,3.600316,-7.969423,-1.064676,-4.260020,-2.944761,-2.711798,-6.480499,-5.578990,7.434142,-3.571437,7.685532,-7.254087,-7.715729,-3.570151,9.391131,-4.509560,0.163874,4.819702,-6.318368,8.479738,6.699628,7.063252,3.353727,9.139685,9.349571,3.299782,-0.619065,5.722801,2.329562,9.018200,2.643876,3.684524,-2.749643,5.666016,-5.608591,4.946629,-3.321970,1.143468,-9.589540,-4.309054,4.591376,-5.213105,-1.575149,-4.726214,-1.342693,-3.472936,2.723691,-1.462702,-0.440037,2.896168,-9.720788,-1.770088,8.010373,-5.717819,8.817284,-2.251952,-3.587803,-6.473724,-6.907016,-2.273655,-6.372006,-3.132676,-0.373839,0.004685,-2.504304,9.075659,3.915639,0.315132,-6.267538,-0.171944,4.976543,-8.594256,-8.919434,-5.872106,7.062962,9.508068,7.193727,-7.746219,-6.509910,-3.453462,-2.448570,6.385752,-4.805598,-0.420808,-1.606587,-5.688323,7.274048,3.982099,6.030036,-4.364057,2.017789,-9.349917,-4.285610,-1.793938,-1.295764,2.002470,0.057661,-1.386475,-8.434267,-4.982873,4.638918,-5.077786,9.068153,-1.324770,1.442220,0.466858,-6.896528,0.595216,-7.574387,9.040728,-4.389487,6.540408,9.451241,9.721720,3.929643,-4.396791,-7.666357,2.120205,3.955519,-9.583828,1.029339,3.168365,8.619150,-4.837060,-6.675940,-4.489674,-7.524072,-7.824859,8.436053,9.932781,8.882167,-1.935161,-1.559778,8.071836,0.926828,-6.962422,-8.379720,7.040059,-6.314803], dtype = "float32")#candidate|9658|(3696,)|const|float32
call_9655 = relay.TupleGetItem(func_5719_call(relay.reshape(var_9656.astype('float64'), [8, 8, 3]), relay.reshape(const_9657.astype('float32'), [1, 1848]), relay.reshape(const_9658.astype('float32'), [2, 1848]), ), 5)
call_9659 = relay.TupleGetItem(func_5724_call(relay.reshape(var_9656.astype('float64'), [8, 8, 3]), relay.reshape(const_9657.astype('float32'), [1, 1848]), relay.reshape(const_9658.astype('float32'), [2, 1848]), ), 5)
func_4892_call = mod.get_global_var('func_4892')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_9661 = relay.TupleGetItem(func_4892_call(relay.reshape(call_9655.astype('float32'), [1350,]), relay.reshape(const_9657.astype('float32'), [12, 14, 11]), ), 1)
call_9662 = relay.TupleGetItem(func_4895_call(relay.reshape(call_9655.astype('float32'), [1350,]), relay.reshape(const_9657.astype('float32'), [12, 14, 11]), ), 1)
output = relay.Tuple([call_9651,call_9655,var_9656,const_9657,const_9658,call_9661,])
output2 = relay.Tuple([call_9652,call_9659,var_9656,const_9657,const_9658,call_9662,])
func_9671 = relay.Function([var_9656,], output)
mod['func_9671'] = func_9671
mod = relay.transform.InferType()(mod)
var_9672 = relay.var("var_9672", dtype = "float64", shape = (48, 4))#candidate|9672|(48, 4)|var|float64
output = func_9671(var_9672)
func_9673 = relay.Function([var_9672], output)
mutated_mod['func_9673'] = func_9673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_9735 = relay.TupleGetItem(func_7800_call(), 0)
call_9736 = relay.TupleGetItem(func_7801_call(), 0)
output = call_9735
output2 = call_9736
func_9748 = relay.Function([], output)
mod['func_9748'] = func_9748
mod = relay.transform.InferType()(mod)
output = func_9748()
func_9749 = relay.Function([], output)
mutated_mod['func_9749'] = func_9749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8678_call = mod.get_global_var('func_8678')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_9777 = relay.TupleGetItem(func_8678_call(), 0)
call_9778 = relay.TupleGetItem(func_8679_call(), 0)
output = call_9777
output2 = call_9778
func_9782 = relay.Function([], output)
mod['func_9782'] = func_9782
mod = relay.transform.InferType()(mod)
mutated_mod['func_9782'] = func_9782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9782_call = mutated_mod.get_global_var('func_9782')
call_9783 = func_9782_call()
output = call_9783
func_9784 = relay.Function([], output)
mutated_mod['func_9784'] = func_9784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_9799 = func_7687_call()
call_9800 = func_7687_call()
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_9805 = relay.TupleGetItem(func_6533_call(), 2)
call_9806 = relay.TupleGetItem(func_6535_call(), 2)
output = relay.Tuple([call_9799,call_9805,])
output2 = relay.Tuple([call_9800,call_9806,])
func_9811 = relay.Function([], output)
mod['func_9811'] = func_9811
mod = relay.transform.InferType()(mod)
output = func_9811()
func_9812 = relay.Function([], output)
mutated_mod['func_9812'] = func_9812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7949_call = mutated_mod.get_global_var('func_7949')
call_9813 = func_7948_call()
call_9814 = func_7948_call()
output = call_9813
output2 = call_9814
func_9816 = relay.Function([], output)
mod['func_9816'] = func_9816
mod = relay.transform.InferType()(mod)
output = func_9816()
func_9817 = relay.Function([], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7857_call = mod.get_global_var('func_7857')
func_7858_call = mutated_mod.get_global_var('func_7858')
call_9847 = relay.TupleGetItem(func_7857_call(), 0)
call_9848 = relay.TupleGetItem(func_7858_call(), 0)
func_6582_call = mod.get_global_var('func_6582')
func_6586_call = mutated_mod.get_global_var('func_6586')
var_9871 = relay.var("var_9871", dtype = "float32", shape = (1350,))#candidate|9871|(1350,)|var|float32
var_9872 = relay.var("var_9872", dtype = "bool", shape = (128,))#candidate|9872|(128,)|var|bool
call_9870 = relay.TupleGetItem(func_6582_call(relay.reshape(var_9871.astype('float32'), [1350,]), relay.reshape(var_9872.astype('bool'), [8, 8, 2]), ), 2)
call_9873 = relay.TupleGetItem(func_6586_call(relay.reshape(var_9871.astype('float32'), [1350,]), relay.reshape(var_9872.astype('bool'), [8, 8, 2]), ), 2)
output = relay.Tuple([call_9847,call_9870,var_9871,var_9872,])
output2 = relay.Tuple([call_9848,call_9873,var_9871,var_9872,])
func_9883 = relay.Function([var_9871,var_9872,], output)
mod['func_9883'] = func_9883
mod = relay.transform.InferType()(mod)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9883_call = mutated_mod.get_global_var('func_9883')
var_9885 = relay.var("var_9885", dtype = "float32", shape = (1350,))#candidate|9885|(1350,)|var|float32
var_9886 = relay.var("var_9886", dtype = "bool", shape = (128,))#candidate|9886|(128,)|var|bool
call_9884 = func_9883_call(var_9885,var_9886,)
output = call_9884
func_9887 = relay.Function([var_9885,var_9886,], output)
mutated_mod['func_9887'] = func_9887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9748_call = mod.get_global_var('func_9748')
func_9749_call = mutated_mod.get_global_var('func_9749')
call_9917 = func_9748_call()
call_9918 = func_9748_call()
output = call_9917
output2 = call_9918
func_9929 = relay.Function([], output)
mod['func_9929'] = func_9929
mod = relay.transform.InferType()(mod)
mutated_mod['func_9929'] = func_9929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9929_call = mutated_mod.get_global_var('func_9929')
call_9930 = func_9929_call()
output = call_9930
func_9931 = relay.Function([], output)
mutated_mod['func_9931'] = func_9931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_9945 = relay.TupleGetItem(func_6707_call(), 0)
call_9946 = relay.TupleGetItem(func_6709_call(), 0)
func_7081_call = mod.get_global_var('func_7081')
func_7084_call = mutated_mod.get_global_var('func_7084')
var_9954 = relay.var("var_9954", dtype = "uint64", shape = (210,))#candidate|9954|(210,)|var|uint64
const_9955 = relay.const([[-5.872594,-5.925688,-0.820494,0.626720,6.644073,2.404520,5.245190,-1.608779,1.776913,-2.162448],[-0.674305,7.529016,-3.549346,7.112532,3.860224,-1.062313,7.833169,-5.847215,-5.988062,4.086831],[9.513966,-9.432429,-9.185303,8.384989,-3.403671,9.663320,-2.283325,8.184803,2.370669,-4.835296],[-1.782486,-4.549720,8.643069,5.452959,-7.618470,5.461229,-8.707584,-6.127733,1.203212,-1.491140],[0.199059,-4.461125,-5.803040,-1.410964,-4.056315,-1.197698,6.591600,9.707051,7.608005,4.134462],[7.626530,9.436152,-5.132584,8.366342,-7.233772,7.793371,9.692346,3.787097,0.351000,-2.231605],[-7.220483,-0.518476,3.851548,-6.272087,-3.175421,9.739026,8.371754,5.228301,-1.965051,9.330963],[-5.151685,7.233594,-7.728275,2.479500,-4.007952,3.084693,-7.242837,7.247669,7.476946,-7.458671],[6.598524,-6.249403,6.379054,-3.711968,-9.333410,-6.043531,-0.833036,-2.463408,-1.403298,-3.944746],[1.963494,-6.724627,4.113835,-1.903466,9.211578,-8.796650,-7.774015,3.140674,2.907958,5.663561],[8.025935,-5.223673,4.672427,-2.925401,4.290793,9.107447,0.050600,-5.172779,2.978740,0.847227],[-5.795787,4.682778,-0.050774,-1.173848,-9.773131,1.152878,8.558008,1.004300,0.104631,-3.656386],[-2.744107,5.211220,6.190565,-0.571737,-6.143475,-5.368361,4.195646,7.390452,-8.655717,9.432340],[-7.431148,3.481886,5.476246,-3.585812,-8.047576,1.268121,-8.110585,-5.594464,-3.686458,-0.309922],[1.108780,5.824090,-4.928702,-1.570463,-1.470431,8.178922,6.758125,-7.506537,3.808166,7.199055],[-7.621913,-1.729011,8.502562,-6.280570,6.383669,0.990402,2.253884,-4.331451,8.940687,1.891638],[-1.486138,-7.189774,4.299499,-9.722765,-8.919042,-8.294298,-0.361598,4.854739,-8.458774,-8.860694],[3.849469,-8.911269,-2.509913,-0.440481,4.145392,-8.441144,7.721205,8.575583,7.586741,5.330629],[2.368744,-6.991868,6.804561,-2.778780,-5.959688,7.708121,-5.796240,-4.012070,-8.104374,-6.936275],[-1.002796,-8.259623,-4.869101,-7.310932,6.407945,8.356247,-2.350509,8.365972,5.350115,3.951876],[-5.150708,7.501234,-7.486254,5.488231,9.977203,-1.273469,-5.468786,7.136830,0.265118,8.239183],[9.449610,5.492568,-4.924612,0.559828,-3.496213,0.594145,-1.090261,7.027718,4.260682,9.031500],[3.963874,-1.059433,-6.297946,-0.309655,-5.810052,6.453210,-0.831592,1.240610,0.292365,-0.102646],[8.218058,-6.511643,6.657959,-2.951936,-5.801220,5.693124,9.108132,-2.327123,5.492744,9.376272],[-5.282753,7.104313,-2.118340,2.245072,-7.106938,4.263909,-8.072321,4.819536,-6.609588,-8.054306],[7.665389,-0.655864,0.456906,2.599991,7.081521,-7.137541,7.922536,-7.131025,-5.082924,6.345963],[9.049846,-9.390819,-5.652803,6.568721,0.932840,6.083560,4.360765,-5.131083,-9.848898,0.670814],[-1.788783,7.345275,-8.799721,7.674100,-4.809697,2.255336,-3.017574,8.673561,0.022493,9.880846],[-4.564357,3.311400,-3.616802,-7.521110,4.641796,-5.162169,-9.010511,4.052775,8.264431,0.947999],[2.934625,4.860434,4.091800,-1.160625,-6.725585,5.835102,0.199496,-9.947752,-8.536411,-8.909099],[7.447567,-2.742307,8.645120,-0.108532,-5.598964,-4.272815,-8.974501,6.141675,-1.152918,-7.907941],[2.739621,8.432483,-8.953715,-7.468311,-0.841838,3.475400,3.280624,5.263291,2.742061,2.262284],[-7.058949,-5.371774,-2.074317,-0.764122,8.316477,5.056996,-9.297208,8.453100,-1.950820,-1.563927],[1.304614,-5.115223,5.662489,5.156375,9.758988,-6.733210,-0.372516,-0.038726,2.573932,9.663492],[3.490022,4.942471,6.830026,8.664181,7.135134,-6.587008,3.329110,7.106345,9.802249,8.948997],[-1.165089,-7.176912,-3.412563,1.190505,1.695841,9.519796,4.002479,-1.928784,5.032903,-1.120406],[3.157070,5.225769,-6.966252,0.256155,2.984503,-7.582299,2.627088,-3.681768,-9.344816,7.321222],[-8.214778,-2.860625,5.817218,-3.767789,-4.708568,9.625703,-7.275441,-7.378925,-3.593902,-2.868646],[9.652086,7.075368,6.693206,-6.166615,6.472076,0.511415,-8.103509,3.613233,-9.266710,2.348196],[-6.976426,2.198289,5.054675,7.106742,9.558770,-3.755745,6.412715,3.326527,1.025779,-4.289836],[8.758121,1.295985,2.972160,-9.080154,-5.987386,2.670996,-5.839377,2.945193,-4.256945,8.446942],[-6.130857,-3.702579,7.148190,-0.071601,-4.748886,6.808904,-7.446626,6.038336,5.781182,-0.297797],[7.126051,6.048509,-7.724396,-5.116551,4.199342,-8.627329,6.381933,3.217766,6.234968,4.211688],[-0.855444,9.117058,4.846881,9.841278,-4.957379,0.454838,1.787556,-7.848820,9.064854,-4.658888],[-4.746869,8.049640,-9.811490,7.296799,-8.463446,0.746974,6.401268,-6.379094,1.877299,-0.608273],[0.474815,-4.008555,-7.906602,-3.784552,0.106076,-0.939320,7.889569,9.910492,3.186429,5.093902],[3.408826,-4.428784,-7.991958,-2.479972,-2.848894,5.971770,-8.954750,-3.199853,-1.974353,-7.988481],[-0.814559,-4.252412,-4.519962,8.012019,-8.195551,-1.330807,0.571037,-4.227195,0.550016,4.055237],[2.103126,5.308352,-0.351964,-4.860227,-4.365199,-2.600525,-6.164859,-2.725546,-1.058384,-9.935410],[3.773133,4.424174,6.421830,-1.852841,-0.807075,3.312265,-5.929024,9.174153,-3.119395,-6.423048],[-4.802828,2.879689,7.662809,-6.070977,0.450298,-0.450055,2.037785,0.545902,3.129290,4.783129],[-8.952722,-1.185883,4.172436,7.051511,4.861221,-0.130138,8.395717,-6.995206,7.826951,-9.993596],[3.071486,8.977762,-8.535998,-0.381645,-0.829541,3.883342,-2.618031,-8.671449,2.102368,6.613913],[4.011167,9.490187,-0.208360,3.937325,-0.471205,-9.559550,-0.288489,-3.682362,1.128082,-2.822254],[-1.280379,-1.400976,0.049145,-0.569580,-0.227041,-6.084147,5.774025,-8.138312,0.322415,1.355080],[-8.539144,-6.507381,-3.716008,6.943576,5.870222,7.932502,-1.350812,-2.455413,-6.911629,-0.308839],[-5.894195,-6.979839,-3.398210,4.845891,-7.045133,7.613876,0.492353,1.035243,-1.935638,9.669139],[3.269391,6.694840,-6.156673,1.990221,-5.056831,2.303289,-1.303851,-3.855557,0.343157,4.618762],[6.297978,-3.169948,-5.537121,-4.453075,-8.788658,-0.190334,-8.946890,9.665753,0.931791,-6.541227],[5.116408,-6.903758,7.732792,-1.017898,5.644542,8.266542,8.841256,9.847193,1.486029,-4.687979],[2.106803,9.967323,9.146434,-8.588066,-4.183395,-2.934950,-0.516705,0.982328,-0.717805,-2.162674],[0.189943,-0.541782,9.911986,-2.990672,5.716715,0.336401,4.856654,-7.719141,3.769896,5.199223],[5.562948,2.111654,5.231570,-1.011808,4.258927,7.324360,-2.599128,4.775155,1.696913,-8.612766],[-1.804171,0.086654,4.320691,-7.563971,-7.218704,-8.593521,-4.423516,6.436493,-9.199357,8.267677],[5.912841,5.043638,-8.528377,7.207179,-3.591340,-2.597962,1.510930,9.359949,8.163570,-7.135617],[5.703040,-3.374988,-2.320357,3.123510,2.668572,-0.386778,6.811540,-9.541171,-7.322668,4.725287],[5.074981,-7.781500,2.114410,7.578464,4.810975,-5.470533,-0.539288,-0.220204,1.385939,-4.281066],[-6.577015,3.960189,-8.830120,1.936682,7.791554,4.438991,-9.308123,-7.217944,3.817452,9.334884],[8.273119,-3.718146,-4.677220,-9.288829,-5.876840,-9.396943,-1.240402,9.170100,7.763858,6.576485],[5.431421,7.812220,-2.149366,-1.829475,-7.397449,3.283636,4.193689,2.009681,-4.751505,7.234780],[-4.248158,-8.457096,2.773199,7.022583,-7.110123,-7.410890,-4.273602,-2.181860,4.387732,-3.017177],[-6.921767,3.392975,8.895019,3.366023,-9.741997,7.327973,-5.923147,5.380996,1.663529,-4.843648],[-3.413367,5.292528,-3.844332,5.938293,-5.517800,0.253866,8.359869,0.600784,-7.034094,2.004035],[9.965293,3.677752,-3.181258,-0.551043,-8.460582,6.428304,8.722586,8.337722,-2.867218,0.475729],[-3.170158,4.390368,0.636677,3.449584,3.886568,-5.696297,7.118061,-5.326402,8.910556,6.904420],[4.887530,-0.077316,3.493203,4.525094,-9.194836,4.451604,0.149249,0.892015,0.411328,-2.297850],[5.321250,6.329832,5.398652,-9.707281,-0.076418,-5.785106,-6.964665,-9.589771,-3.876813,-1.955239],[-1.862339,4.003665,-0.233705,-0.207281,4.986282,1.823368,-8.869119,0.391785,-3.860066,-7.574221],[7.957784,9.265662,9.624047,-4.708647,0.583172,-1.753225,-9.635064,5.871256,-0.010155,-2.005794],[4.141641,-3.427134,-5.930843,3.035060,1.529283,-2.314834,-7.225074,4.869542,6.797490,0.347026],[-7.532966,0.921952,2.383731,7.738130,-0.006245,-6.840944,9.092024,0.668796,-0.791368,3.270866],[-3.589725,2.474139,6.240015,-0.032516,-7.793525,0.219116,-3.024471,0.454410,7.293618,3.143891],[-6.934763,7.787016,2.129651,3.613716,3.352213,0.850520,-4.968135,-6.498439,6.471751,7.619151],[-5.837795,-7.622539,7.554203,0.916628,0.161376,-0.389603,-9.351664,6.595202,5.083015,1.662014],[8.659006,-8.170659,0.001342,7.192726,-0.014983,-0.782019,3.541552,9.022175,-5.919877,-9.211192],[7.400316,3.629675,-3.608780,3.090183,-2.895747,5.861991,-9.361107,9.660378,-0.476570,-1.030959],[0.199433,-6.734477,-5.454336,7.112647,-4.719334,-3.540349,4.362015,4.980649,-5.448396,5.602222],[8.224192,4.326181,-3.905296,-8.883706,1.388515,5.415441,4.287982,-8.117401,0.825546,3.986584],[9.363930,-4.773341,4.775020,-9.029435,-7.996271,-5.185964,-8.591689,9.562395,9.860894,-2.594760],[3.562912,4.217722,9.841870,-1.016046,-5.856437,-5.166773,7.048149,-1.062312,-6.644656,-4.152208],[-3.456927,-4.164163,-0.104110,2.974469,8.847627,3.000507,-7.025553,-2.762635,-8.481113,-5.809859],[-4.666109,-3.868946,6.536024,-3.442941,0.186041,7.017537,-9.146706,1.854288,2.600184,-2.540078],[-1.976879,4.686034,-0.945491,-2.684064,-4.516084,0.458577,1.165261,-9.128426,-3.367464,-8.679630],[-3.649823,8.591137,0.335006,7.279076,-0.243061,-4.667307,3.705998,1.772825,5.220267,-2.004007],[-7.447340,-4.596234,4.049620,4.625093,8.085628,-9.710107,2.219566,-6.657911,-1.027262,8.694855],[6.564879,5.257553,-3.561791,8.159431,-4.109720,2.508603,1.742060,-5.662807,4.360891,9.289590],[2.902757,-3.373625,9.534501,4.246244,-1.171992,-2.700107,-9.909467,1.870288,-1.034733,-9.576822],[-4.846320,-8.732901,6.526479,6.744350,-0.660289,-9.590894,-1.395166,-1.877730,4.137723,1.669529],[-4.396038,-1.949521,1.850318,2.724025,-0.580564,-4.871803,-0.857279,-9.425156,2.476807,-6.924232],[-6.914633,5.020291,9.982998,3.353849,8.935855,-8.425027,-2.603045,0.111356,-5.287465,-2.526406],[-5.320823,-1.436506,5.439093,3.817254,-0.637888,-1.641771,-9.381514,9.349542,2.330947,-6.122101],[8.654203,-9.554399,8.405279,1.588115,5.164623,-7.335600,-1.958531,-1.275996,-8.683539,-3.468909],[8.987688,8.484657,-4.102908,5.380438,8.377198,-7.830197,-8.173955,4.537496,-6.506731,-8.720560],[-3.824551,-2.970654,0.899409,-2.356667,-1.010881,-5.757296,8.059747,1.352908,-1.690301,6.604380],[-0.159027,-4.207766,-4.170167,4.596747,-1.557196,-6.728858,-7.898957,7.468465,2.737194,6.826486],[-7.745682,8.081139,-8.545343,3.055446,3.329124,-5.336054,-2.017705,9.506039,-0.671108,-6.424790],[-1.180814,5.532253,2.343162,-6.000947,-9.030423,-5.611550,9.575979,-9.457004,-5.275213,-5.149824],[-2.039323,1.651249,2.821267,-5.399786,0.289741,-3.294593,3.798420,6.057606,-5.163029,-0.871830],[8.691483,1.349352,-0.990254,-2.086027,5.581258,1.340704,-8.016713,-5.315844,9.845433,6.894516],[2.887481,-1.204444,-6.008758,5.934893,9.783247,7.483959,-3.649346,4.587986,3.238521,0.648880],[-2.069138,-3.693562,-5.080941,-1.532431,6.814165,-9.651092,7.639139,-6.119019,-8.731885,-3.729066],[3.197977,9.002685,-5.403706,-3.802351,-5.018506,-2.009316,-9.695449,7.372379,8.164840,-7.641947],[-3.012496,-3.109302,6.178843,7.161665,-4.442219,7.053738,5.982775,-5.029977,3.826903,8.976548],[-2.754564,-1.102094,6.647536,1.807550,0.193364,7.260135,4.779982,3.656238,-7.914992,-3.242363],[-5.864483,-6.868650,-0.269725,9.820876,-7.907997,-6.485961,-5.404825,8.891689,-0.697514,7.549628],[0.818569,5.818953,-0.322775,7.109044,5.884229,8.254459,-2.557337,-5.275908,-8.395564,-1.997295],[-9.406359,-0.585753,-0.965949,-8.458091,-3.682140,-8.932554,3.471107,-7.490375,1.654839,-4.012463],[-2.916051,-7.619940,-6.930850,1.578762,2.110483,5.635293,-9.065910,-9.429432,8.858934,-9.748903],[-0.135266,4.638061,-8.381724,0.348045,-3.615149,6.074277,-9.819395,2.727248,-6.892669,1.525382],[-3.189798,2.172219,-8.894962,9.933228,6.538604,-4.842333,6.515219,2.559674,9.286278,7.072383],[-7.764594,-5.807771,-7.738833,0.749124,8.131069,-2.087050,5.079509,-1.592405,-0.423103,-7.214832],[9.578206,4.586468,-3.024924,2.531311,-3.164759,2.670832,9.576805,9.213191,5.365837,-0.487617],[0.160653,9.881252,-1.950618,7.360846,6.275850,-8.794041,-8.268431,0.487338,-7.808891,-2.270387],[3.572379,-6.020525,-5.776252,7.996709,-8.344414,-8.746646,-7.906432,7.041105,3.914537,9.752350],[-1.389035,-2.803571,-0.259755,8.170409,-1.696735,5.929092,-3.702651,-3.308822,6.449472,-5.412291],[0.965969,5.314845,-8.185038,-8.847215,4.245135,5.555976,-2.726439,-8.639165,5.146274,9.848781],[-6.005284,-6.611061,-8.631965,9.167960,-1.174751,-4.551175,-7.361193,6.150754,-1.256879,-6.252883],[-5.384934,6.282994,5.075797,9.980719,3.053548,-3.825843,1.132469,-3.354586,3.923416,6.403327],[-6.639058,1.174063,6.000950,9.918784,6.597948,-1.976484,8.400880,-0.862607,5.540153,-6.737509],[-5.648122,-8.272231,1.709204,-1.073224,-3.572871,-8.493560,2.903304,0.689993,-6.883860,-1.737344],[5.136927,5.203465,-7.051308,6.699836,9.026817,-5.345906,8.182445,9.724459,-6.017463,5.985149],[1.077208,6.770837,-4.475620,-9.957980,5.046411,-2.026148,8.933856,-3.486480,5.115641,0.982945],[9.925520,-8.668701,7.076857,8.135356,4.499128,-5.009106,-4.037679,9.493260,3.887153,1.110088],[-2.101216,0.956571,-0.204809,0.419488,8.151819,-9.473337,2.366357,8.782758,3.252767,-8.207146],[-9.368617,5.540465,-7.817020,2.644163,-9.561702,-8.157724,-7.261723,-2.858218,1.289833,-9.192285]], dtype = "float32")#candidate|9955|(135, 10)|const|float32
call_9953 = relay.TupleGetItem(func_7081_call(relay.reshape(var_9954.astype('uint64'), [105, 2]), relay.reshape(const_9955.astype('float32'), [1350,]), ), 1)
call_9956 = relay.TupleGetItem(func_7084_call(relay.reshape(var_9954.astype('uint64'), [105, 2]), relay.reshape(const_9955.astype('float32'), [1350,]), ), 1)
output = relay.Tuple([call_9945,call_9953,var_9954,const_9955,])
output2 = relay.Tuple([call_9946,call_9956,var_9954,const_9955,])
func_9961 = relay.Function([var_9954,], output)
mod['func_9961'] = func_9961
mod = relay.transform.InferType()(mod)
mutated_mod['func_9961'] = func_9961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9962 = relay.var("var_9962", dtype = "uint64", shape = (210,))#candidate|9962|(210,)|var|uint64
func_9961_call = mutated_mod.get_global_var('func_9961')
call_9963 = func_9961_call(var_9962)
output = call_9963
func_9964 = relay.Function([var_9962], output)
mutated_mod['func_9964'] = func_9964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_9980 = relay.TupleGetItem(func_8401_call(), 1)
call_9981 = relay.TupleGetItem(func_8402_call(), 1)
output = relay.Tuple([call_9980,])
output2 = relay.Tuple([call_9981,])
func_9986 = relay.Function([], output)
mod['func_9986'] = func_9986
mod = relay.transform.InferType()(mod)
output = func_9986()
func_9987 = relay.Function([], output)
mutated_mod['func_9987'] = func_9987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9748_call = mod.get_global_var('func_9748')
func_9749_call = mutated_mod.get_global_var('func_9749')
call_9992 = func_9748_call()
call_9993 = func_9748_call()
output = relay.Tuple([call_9992,])
output2 = relay.Tuple([call_9993,])
func_9997 = relay.Function([], output)
mod['func_9997'] = func_9997
mod = relay.transform.InferType()(mod)
mutated_mod['func_9997'] = func_9997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9997_call = mutated_mod.get_global_var('func_9997')
call_9998 = func_9997_call()
output = call_9998
func_9999 = relay.Function([], output)
mutated_mod['func_9999'] = func_9999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_10025 = relay.TupleGetItem(func_7273_call(), 1)
call_10026 = relay.TupleGetItem(func_7275_call(), 1)
func_3026_call = mod.get_global_var('func_3026')
func_3031_call = mutated_mod.get_global_var('func_3031')
var_10039 = relay.var("var_10039", dtype = "bool", shape = ())#candidate|10039|()|var|bool
var_10040 = relay.var("var_10040", dtype = "bool", shape = (768,))#candidate|10040|(768,)|var|bool
var_10041 = relay.var("var_10041", dtype = "float32", shape = (1056,))#candidate|10041|(1056,)|var|float32
call_10038 = relay.TupleGetItem(func_3026_call(relay.reshape(var_10039.astype('bool'), []), relay.reshape(var_10040.astype('bool'), [768,]), relay.reshape(var_10041.astype('float32'), [1056, 1]), ), 3)
call_10042 = relay.TupleGetItem(func_3031_call(relay.reshape(var_10039.astype('bool'), []), relay.reshape(var_10040.astype('bool'), [768,]), relay.reshape(var_10041.astype('float32'), [1056, 1]), ), 3)
output = relay.Tuple([call_10025,call_10038,var_10039,var_10040,var_10041,])
output2 = relay.Tuple([call_10026,call_10042,var_10039,var_10040,var_10041,])
func_10053 = relay.Function([var_10039,var_10040,var_10041,], output)
mod['func_10053'] = func_10053
mod = relay.transform.InferType()(mod)
mutated_mod['func_10053'] = func_10053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10053_call = mutated_mod.get_global_var('func_10053')
var_10055 = relay.var("var_10055", dtype = "bool", shape = ())#candidate|10055|()|var|bool
var_10056 = relay.var("var_10056", dtype = "bool", shape = (768,))#candidate|10056|(768,)|var|bool
var_10057 = relay.var("var_10057", dtype = "float32", shape = (1056,))#candidate|10057|(1056,)|var|float32
call_10054 = func_10053_call(var_10055,var_10056,var_10057,)
output = call_10054
func_10058 = relay.Function([var_10055,var_10056,var_10057,], output)
mutated_mod['func_10058'] = func_10058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10071 = relay.var("var_10071", dtype = "int8", shape = (5, 1, 13))#candidate|10071|(5, 1, 13)|var|int8
var_10072 = relay.var("var_10072", dtype = "int8", shape = (5, 4, 13))#candidate|10072|(5, 4, 13)|var|int8
bop_10073 = relay.equal(var_10071.astype('bool'), var_10072.astype('bool')) # shape=(5, 4, 13)
bop_10082 = relay.left_shift(var_10072.astype('uint16'), var_10071.astype('uint16')) # shape=(5, 4, 13)
uop_10100 = relay.sinh(bop_10073.astype('float64')) # shape=(5, 4, 13)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_10110 = relay.const([-1,-2,8,-2,-4,-10,5,5,1,9,9,9,-1,-8,-3,2,6,2,2,6,8,-2,2,-1,3,8,-1,1,-1,1,-7,-9,-7,-8,-4,-6,-10,5,8,-6,4,-2,-2,1,3,7,-2,-7,-9,9,9,6,-6,3,7,-4,3,7,10,-9,9,6,-4,2,8,-7,-9,-8,1,2,1,10,3,-1,5,-9,-8,8,8,5,1,2,-2,8,4,-3,7,2,1,4,-5,-2,8,5,8,-1,-2,3,-5,-9,-3,5,8,-10,1,6,-7,-9,8,2,-3,-7,5,-9,2,-3,-4,3,-8,-2,-6,-4,-9,-9,-6,3,1,-4,-9,-1,3,-6,-4,9,-1,-10,-1,10,-9,7,8,-5,-9,9,2,-10,6,1,6,-2,1,4,6,2,-2,1,8,-3,6,6,4,4,4,1,-3,7,-7,-8,4,10,-10,6,-8,-4,2,4,-9,-7,-4,-3,3,3,-10,5,-10,9,-6,7,-3,2,-4,-1,-5,-6,-9,5,8,4,-8,1,3,-9,5,7,-6,5,-5,3,-7,8,5,-9,-3,10,-1,-1,-10,-3,6,-5,9,4,-6,-4,3,8,5,-2,8,2,-6,-4,-3,1,7,2,6,9,-1,5,-3,6,10,-10,4,10,5,4,10,-5,-3,-4,3,1,4,-9,-10,-7,-5,-1,-9,6,-6,9,-8,-5,-3,10,-10,-1,-8,3,7,8,-7,8,-1,-9,7,-3,6,5,-6,-9,-9,-3,3,5,-6,-2,6,-10,-4,-4,-10,-5,-6,8,-7,-10,-7,5,9,-2,5,-7,-1,7,-9,-6,9,-5,-2,-7,-2,-7,-2,-1,-4,-3,4,-9,-10,-2,-1,-7,-2,5,7,-4,1,-10,-6,3,5,-9,7,-5,8,5,8,10,-6,3,-9,2,10,4,-4,-8,-2,-7,-6,-5,2,4,3,7,8,-1,-8,-8,9,-6,6,4,-10,-6,-5,-3,-10,6,-2,1,4,-9,-8,-3,-7,-2,5,-1,-8,3,6,10,-4,1,9,6,-7,6,-9,4,9,1,3,1,6,5,-10,2,-1,-2,7,4,2,-9,10,-9,9,-5,1,-4,-7,-1,-3,-5,-5,5,-4,6,-10,6,-10,10,-6,-4,10,4,-8,-6,-7,5,7,-6,8,4,-10,-7,9,2,4,-2,5,-2,2,-1,-9,5,-8,-7,-4,4,5,-4,1,-10,1,9,-10,6,9,5,6,5,10,10,-3,7,10,-2,5,-7,-6,2,-5,9,8,1,-3,-7,8,-6,6,9,-5,6,-3,-8,-7,-6,-9,-6,1,10,-6,7,-6,5,8,-7,-6,-3,-6,-7,-1,7,10,-6,5,-4,-3,-4,-6,5,4,-7,5,-9,-10,5,-3,-3,8,-3,5,3,-2,1,6,4,-5,10,10,2,10,-3,-2,4,-4,-2,-8,-9,1,-8,3,9,-2,10,10,4,-1,-1,-3,-2,5,8,-8,4,4,-8,-6,6,6,2,8,-8,-4,10,5,6,6,3,-10,7,1,-2,-2,4,2,6,3,9,-2,-7,-10,8,9,-4,-10,-5,-6,-7,7,8,7,-1,7,-10,-6,-7,1,4,1,-9,9,-2,-2,3,10,9,3,-10,8,1,-6,-4,-6,-5,6,-9,-9,-10,-10,8,-2,5,-7,-8,-4,2,-9,-7,5,-5,-7,6,3,-6,-8,-1,3,8,3,-6,-6,7,5,4,9,8,2,-1,-9,10,-3,-8,8,-6,-3,-10,-1,6,-4,-5,-10,8,-9,10,7,-7,-10,-7,-10,-3,-7,2,1,-5,8,5,-3,1,3,-9,-1,1,1,2,-2,6,8,-9,-6,4,-6,-4,-2,-10,8,5,8,-1,-5,4,-7,-9,8,6,4,-10,6,9,8,-5,1,-6,-6,-9,1,8,-4,5,-7,-8,8,3,-9,-4,-4,-5,-8,5,9,5,-9,-8,-4,-7,-5,-3,-2,-8,1,-9,-2,-7,5,-4,-5,-4,4,9,6,-10,-10,5,9,2,5,2,-6,-8,2,5,3,-4,-3,6,9,-2,8,1,-9,9,4,3,-2,-1,3,4,7,-4,10,-10,5,-8,-7,2,1,2,-3,-5,6,-1,-2,-6,2,-9,-1,1,-9,10,-7,-2,6,-4,-8,3,-5,-4,9,7,-1,4,-5,9,4,-10,4,9,-9,-8,-2,-1,-7,-7,7,8,10,10,-8,9,-10,3,4,-5,-7,-10,-6,-7,7,9,-7,2,10,-3,2,-2,-3,-10,9,8,8,4,-8,-7,4,-9,-3,-8,-2,5,5,8,-4,-2,4,10,9,-6,-6,2,-8,-5,-1,-8,-6,-6,-10,-6,1,-1,10,-6,7,8,8,-7,10,-9,-5,-3,-10,1,-1,6,4,8,-9,5,-8,-3,-2,5,2,-4,-1,-7,3,-2,-4,-8,-6,-4,-3,-2,3,-9,6,8,8,-5,6,1,-2,8,1,-4,-4,-1,9,-8,-1,-7,1,-6,-7,7,5,-5,-10,2,-10,-6,7,1,-3,10,8,-2,5,7,1,5,3,-4,4,-2,-2,-9,8,-7,-1,-6,6,-9,7,1,1,5,-8,4,-7,-6,-5,-10,-5,3,-5,6,-8,-2,-10,-5,1,-4,1,2,-6,-8,3,3,6,7,-6,5,-7,-9,2,-7,-3,1,-1,-1,1,-6,-7,6,7,-7,6,7,10,8,7,2,-8,-4,-10,-4,6,7,10,-9,7,-2,-1,-4,-2,-1,-10,10,8,7,-1,-8,10,10,-1,7,-8,-10,-7,-8,-1,-1,-1,-10,-7,8,-5,-6,-4,-5,7,4,2,-4,10,-9,8,3,10,-2,-8,6,-7,-8,-9,7,-6,1,4,-8,-5,7,-6,-7,-2,5,9,3,4,-6,-6,-10,3,2,-7,4,-9,9,1,-4,-5,3,4,10,9,2,-1,8,4,-3,-4,4,10,-1,-9,2,-5,8,10,7,3,5,-2,8,-6,-6,10,4,-1,-8,9,4,4,-3,-7,-6,-10,4,3,-9,-5,-9,-4,4,5,8,4,8,-4,-4,1,-5,10,-6,-3,4,-9,4,4,-1,-4,5,-10,7,3,-9,3,9,3,-6,10,6,-3,-5,2,7,4,3,-4,2,-4,-4,-6,8,-8,-8,6,-2,-6,-5,-2,4,4,-1,-8,4,3,6,-10,-1,-3,-1,-2,-6,-9,-9,-3,6,-2,6,10,-3,7,-4,-6,-9,1,7,-2,-6,-6,-1,-1,8,6,5,-3,10,-10,9,9,-6,-10,8,6,5,2,-2,-7,-6,4,10,10,9,6,5,-8,8,3,-1,1,-2,-4,-3,7,-3,-3,-10,4,-2,-7,-6,7,2,1,1,-1,-4,-9,5,8,-9,-2,-3,-8,7,-1,10,-8,-8,-8,-2,1,-4,-2,-8,-9,-1,-8,7,9,-3,8,6,10,6,4,8,3,6,3,6,-5,-2,3,-10,3,1,-1,-9,5,-8,3,-2,10,-2,4,-4,6,1,-7,-2,-6,-4,-1,7,-8,5,-3,-8,5,-5,-7,-9,8,4,2,-8,10,5,-6,-9,9,6,9,2,-1,6,-7,2,-4,1,-4,-4,2,6,-4,-2,9,5,-3,5,-4,-3,5,-4,-4,6,-5,-10,2,5,-3,10,-7,9,2,4,-4,-6,-2,9,-7,-2,5,-9,10,-6,-3,2,-3,-9,-6,2,-10,10,-1,10,3,-2,5,-9,7,7,-4,-7,-1,-4,9,-8,4,-3,-8,5,-4,-2,-10,4,-6,7,-10,-9,-3,10,6,-3,10,5,6,1,-9,-8,6,8,1,-4,-10,-1,-5,-6,-1,-1,-2,8,8,-9,2,10,1,2,3,-2,10,-7,6,-3,-10,-9,3,-4,7,-10,3,1,-7,-6,10,3,-5,2,-4,10,9,8,-9,5,-8,-6,-6,-6,9,-3,-4,-6,9,-10,-3,8,-4,-6,-1,-8,7,-1,-3,5,-1,-1,-7,3,7,8,6,3,-2,-2,3,1,5,4,9,10,-10,-4,-9,4,10,7,-9,5,-1,-6,6,4,-9,9,-8,9,-1,-6,2,8,3,10,-6,-5,2,1,9,1,-4,10,-9,-1,-4,1,-6,-7,-4,10,4,7,7,5,-5,-5,-7,10,-4,6,-9,-5,6,5], dtype = "uint8")#candidate|10110|(1560,)|const|uint8
call_10109 = relay.TupleGetItem(func_3334_call(relay.reshape(const_10110.astype('uint8'), [12, 10, 13]), relay.reshape(const_10110.astype('uint8'), [12, 10, 13]), ), 0)
call_10111 = relay.TupleGetItem(func_3337_call(relay.reshape(const_10110.astype('uint8'), [12, 10, 13]), relay.reshape(const_10110.astype('uint8'), [12, 10, 13]), ), 0)
uop_10115 = relay.asinh(uop_10100.astype('float64')) # shape=(5, 4, 13)
bop_10117 = relay.logical_xor(uop_10100.astype('int64'), relay.reshape(bop_10082.astype('int64'), relay.shape_of(uop_10100))) # shape=(5, 4, 13)
output = relay.Tuple([call_10109,const_10110,uop_10115,bop_10117,])
output2 = relay.Tuple([call_10111,const_10110,uop_10115,bop_10117,])
func_10130 = relay.Function([var_10071,var_10072,], output)
mod['func_10130'] = func_10130
mod = relay.transform.InferType()(mod)
mutated_mod['func_10130'] = func_10130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10130_call = mutated_mod.get_global_var('func_10130')
var_10132 = relay.var("var_10132", dtype = "int8", shape = (5, 1, 13))#candidate|10132|(5, 1, 13)|var|int8
var_10133 = relay.var("var_10133", dtype = "int8", shape = (5, 4, 13))#candidate|10133|(5, 4, 13)|var|int8
call_10131 = func_10130_call(var_10132,var_10133,)
output = call_10131
func_10134 = relay.Function([var_10132,var_10133,], output)
mutated_mod['func_10134'] = func_10134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9811_call = mod.get_global_var('func_9811')
func_9812_call = mutated_mod.get_global_var('func_9812')
call_10240 = relay.TupleGetItem(func_9811_call(), 1)
call_10241 = relay.TupleGetItem(func_9812_call(), 1)
func_9275_call = mod.get_global_var('func_9275')
func_9276_call = mutated_mod.get_global_var('func_9276')
call_10242 = func_9275_call()
call_10243 = func_9275_call()
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_10249 = relay.TupleGetItem(func_6496_call(), 0)
call_10250 = relay.TupleGetItem(func_6498_call(), 0)
output = relay.Tuple([call_10240,call_10242,call_10249,])
output2 = relay.Tuple([call_10241,call_10243,call_10250,])
func_10252 = relay.Function([], output)
mod['func_10252'] = func_10252
mod = relay.transform.InferType()(mod)
mutated_mod['func_10252'] = func_10252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10252_call = mutated_mod.get_global_var('func_10252')
call_10253 = func_10252_call()
output = call_10253
func_10254 = relay.Function([], output)
mutated_mod['func_10254'] = func_10254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7519_call = mod.get_global_var('func_7519')
func_7520_call = mutated_mod.get_global_var('func_7520')
call_10268 = func_7519_call()
call_10269 = func_7519_call()
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_10285 = relay.TupleGetItem(func_7800_call(), 0)
call_10286 = relay.TupleGetItem(func_7801_call(), 0)
output = relay.Tuple([call_10268,call_10285,])
output2 = relay.Tuple([call_10269,call_10286,])
func_10296 = relay.Function([], output)
mod['func_10296'] = func_10296
mod = relay.transform.InferType()(mod)
mutated_mod['func_10296'] = func_10296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10296_call = mutated_mod.get_global_var('func_10296')
call_10297 = func_10296_call()
output = call_10297
func_10298 = relay.Function([], output)
mutated_mod['func_10298'] = func_10298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8307_call = mod.get_global_var('func_8307')
func_8308_call = mutated_mod.get_global_var('func_8308')
call_10367 = func_8307_call()
call_10368 = func_8307_call()
output = relay.Tuple([call_10367,])
output2 = relay.Tuple([call_10368,])
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9038_call = mod.get_global_var('func_9038')
func_9040_call = mutated_mod.get_global_var('func_9040')
call_10414 = relay.TupleGetItem(func_9038_call(), 0)
call_10415 = relay.TupleGetItem(func_9040_call(), 0)
func_6582_call = mod.get_global_var('func_6582')
func_6586_call = mutated_mod.get_global_var('func_6586')
const_10419 = relay.const([4.974499,-1.957671,-5.888922,-8.594446,-3.353200,3.516766,2.702150,-6.809324,-2.216260,-8.316100,-4.081229,7.968629,-5.511640,-6.137648,-8.842803,7.270327,2.406126,-8.321725,-5.506791,5.242915,-7.127317,-7.445081,-2.676390,-4.063535,9.381672,-5.811291,-9.104615,2.380548,-2.289961,-8.604629,-6.595796,9.017394,3.679588,1.396382,-3.162537,8.983014,5.119334,-1.387188,-6.512034,-1.206082,-6.543530,9.894879,0.481629,0.290970,-5.559096,-9.342685,-0.674302,-4.554052,-1.026247,1.073406,-5.390609,6.736720,-7.066610,2.499516,-2.860033,-4.616381,2.674786,9.541695,1.103774,-2.903649,-9.621138,-9.641722,-0.637276,5.358228,-4.656253,6.947155,7.502879,8.848308,2.769536,-4.412533,-5.659592,-5.169203,9.528399,-3.463597,-4.201376,-3.503843,-1.809707,8.846427,-0.610857,3.152134,7.793694,0.108687,4.952293,6.233904,-9.281580,-0.363107,-9.642107,-4.534032,7.145992,-5.094186,5.603360,-5.898018,8.361243,4.889988,-3.640788,7.666540,9.127174,-3.439310,8.091452,7.605789,-8.785506,-6.731972,-7.042095,-5.271192,-9.521450,-5.602287,4.399620,1.379639,-9.178711,-9.489453,1.295046,5.919323,9.210407,5.395356,0.991035,-5.222482,-7.814558,-3.473732,6.704542,-1.669674,-8.281788,1.751298,-7.943508,-4.215885,1.937671,9.585667,-6.278258,-7.103169,8.195903,-6.908202,-7.941349,-1.032565,-6.023841,-2.643480,2.591590,0.497796,0.433253,0.725321,1.051614,-2.183725,8.999777,0.089017,-6.081501,0.862957,5.858739,-6.779666,-3.464572,-9.075753,-8.903318,-4.221726,-9.689396,7.313825,-9.084672,9.596658,-7.007442,9.470793,9.081613,-4.056371,-6.155795,0.602622,2.333408,2.001335,-2.282403,-0.547444,-2.962727,-7.787704,-8.263780,-1.113913,5.537100,-1.225911,-5.642130,5.292402,-5.750930,0.705305,7.585755,-6.725859,8.678869,-0.333755,-1.621741,-4.830816,3.369977,3.732889,-9.779848,-9.349867,6.593535,3.379463,-5.213845,7.271870,-3.943540,0.029866,-8.987105,5.657992,-3.884388,4.871581,-3.218389,1.881518,8.764494,-3.892576,0.185772,5.279093,2.858196,-0.295859,4.616900,5.499986,-9.299310,8.000408,-3.781416,-0.843570,-0.566698,5.646379,5.210659,-2.850590,5.654088,-9.989964,8.545755,7.007151,4.990379,8.216946,-5.160171,-6.392581,8.326511,9.234756,-8.019372,-2.403556,0.381514,-6.256428,3.269690,4.826829,1.702398,1.316527,6.032408,2.982725,-4.500003,6.396943,9.114019,4.942363,4.258544,9.081724,0.356026,-4.962277,5.304191,0.666814,2.070640,-9.011739,1.490943,-1.316619,-4.221275,6.388339,-8.361926,0.777846,-8.188603,-6.087257,5.961386,-5.196734,-4.069831,-0.354541,3.368968,-6.030731,-4.193385,2.824801,-9.672673,2.317608,7.201667,2.964590,0.173043,-7.313332,1.556779,-2.088910,-9.045416,6.114484,4.309205,-9.086537,-5.889508,-8.351667,5.217754,-7.219257,1.361624,4.414256,-9.055428,-8.668264,5.782568,2.919567,6.994379,-3.317823,-3.210738,-8.678787,8.769589,-5.542013,3.932476,-3.029208,-4.629035,-9.723047,-3.532260,9.489934,-0.250470,4.778719,-2.693086,7.905561,-6.250134,1.705841,8.019225,-2.325716,-7.648536,-8.709812,4.646019,6.551338,7.974799,4.080617,5.731524,-3.907279,-1.631698,1.515687,4.365016,5.880973,-6.453204,-4.261282,-1.498215,-5.290718,-9.754867,0.318135,-3.254008,0.179305,-9.554970,6.361578,0.888001,-0.032366,0.568870,-5.203524,-3.127758,-0.574660,-7.679961,-1.986460,-7.076818,-9.226716,-7.807157,-7.770669,-0.748844,-0.818659,1.647649,-7.323946,-4.796178,-0.599817,-3.762896,-3.917793,-7.806237,-4.382626,1.787235,-8.687070,7.535765,-9.464016,-2.067440,-8.383146,4.384693,4.118411,9.967567,1.725243,-4.707851,1.444740,0.655688,4.187331,8.325539,-0.164855,2.967171,-2.772018,2.443084,-5.531613,7.946006,-8.390243,7.447565,3.686456,7.589196,-1.378524,6.900945,1.953831,8.731739,-0.617069,-0.486242,-1.332434,5.246354,-2.223938,7.700205,-9.451149,-5.564769,6.385514,4.065286,-4.293564,-3.022085,-3.895347,-6.050839,-0.166166,2.893857,-0.294524,6.931447,6.138758,4.310040,-5.892926,-2.885504,-4.840572,2.248198,-8.616512,-1.190329,-8.266112,-5.841754,-0.812559,-2.023073,-4.710445,-5.667637,9.422460,0.712402,-0.811467,-7.476330,-9.257882,-3.147394,5.765739,-7.535843,-6.252769,-7.291449,0.026334,6.071806,-3.617064,-5.177721,2.271655,7.302862,5.381152,3.669277,-5.474153,-9.507607,-3.891341,6.748172,-7.943643,-7.805590,-3.453907,7.657982,3.641706,-1.572910,-3.509852,-1.129517,6.125025,-5.097278,4.742219,-5.368294,-2.728337,-1.920880,0.651794,-9.905337,8.920955,-4.009076,-8.098306,-4.820388,1.286536,6.054925,9.871098,8.660968,7.234087,9.516520,-9.669779,-7.352089,-1.759725,0.600512,-1.755241,-3.748396,-1.210580,-7.323193,-8.831372,-0.780437,9.641758,-1.193957,-4.063638,0.583547,8.192763,-1.449374,-4.750910,-9.854713,7.475773,7.830603,-5.123705,0.368607,-7.526989,9.235461,-0.317922,-9.992106,1.990786,1.042715,8.600532,0.466621,0.024886,-3.703606,9.722708,2.808180,-6.270854,-7.934097,-5.406654,-4.727129,9.822195,5.938350,9.072786,7.220334,-1.781851,-6.964393,9.905665,3.096414,6.097043,9.154223,-0.032843,4.951854,4.884120,2.094206,-3.243033,-7.752104,3.145994,9.162235,-3.087208,6.556630,7.203947,-7.790697,-7.112757,-1.929443,4.737414,-2.936349,-6.328364,-9.159676,2.547834,8.718727,9.406717,-9.232717,0.706625,-3.752226,-3.391092,2.636686,5.859332,0.929015,1.715519,-6.080154,6.551603,-6.260048,-9.100895,7.128697,6.540922,0.567691,-2.290769,3.269644,-2.736923,3.762764,-3.249045,-7.570581,-6.975036,7.290805,5.546480,-2.328229,-9.622850,-5.154889,-0.699191,-7.955705,-4.446643,-7.034235,1.972811,5.783359,2.285151,4.204031,0.606124,-8.863188,3.137269,9.761808,1.580724,0.311825,-3.971506,-9.210272,6.750720,-1.203783,9.134471,-6.513717,4.243716,-3.285555,4.927021,-6.980349,8.908982,-7.762398,-0.662857,-1.790634,-8.015456,4.671025,9.238154,6.989579,-2.996236,4.026053,-7.214584,6.269726,0.640812,2.364433,8.929292,5.952401,-7.718240,8.750596,2.450478,-4.411482,6.762138,-0.748607,4.695560,4.013464,-0.503491,6.992151,-3.455058,-2.332116,-7.095847,-2.616708,2.800227,9.455536,-2.170199,-0.125120,-9.332561,7.079324,-3.238035,-9.574427,9.661513,6.636272,-2.243110,-7.170768,4.007606,-0.651227,-1.370862,1.859575,-6.663904,9.969294,7.042733,-2.814902,-0.443723,1.702185,-1.557838,0.791512,7.975290,5.382409,3.805048,0.338892,-2.520360,9.346368,-6.932660,-3.824802,0.717023,0.662581,0.004194,-7.632847,8.777836,-0.956024,2.340722,7.666992,-7.538743,1.291293,4.336625,5.408450,-8.410226,-0.760129,1.589721,-3.440119,9.782720,-0.696499,2.176701,-3.122706,-3.651859,-9.967840,-8.615443,3.911063,-2.791767,0.764148,6.272421,2.781450,5.851106,-2.904800,-5.711136,3.715953,6.791407,-1.668286,-8.545291,0.945513,0.573824,-2.450661,-1.207311,2.875783,-8.599056,-5.584466,5.108584,-1.781517,8.035187,8.186642,7.567978,6.010063,-0.094704,5.667850,5.024285,-4.791570,9.002875,-6.701870,-0.609065,-5.570330,-5.880332,-7.309450,7.168208,-5.420985,2.098243,-6.574811,-8.860955,7.360338,-6.190501,6.623454,-2.381582,-0.398294,2.252213,8.845661,-5.828460,-8.974124,-0.517298,-9.404385,8.041428,-9.115799,1.315698,0.962502,2.464690,-3.055054,-4.732533,7.496445,9.323265,-8.125202,-6.501842,-5.188852,7.329953,-8.124594,5.506129,0.306020,5.470425,-4.970974,6.328368,7.156356,-3.710920,-1.704297,5.510044,9.280291,4.732787,0.462596,4.308852,2.382795,9.424513,-7.456715,-5.875684,5.012016,-2.265706,-4.435625,-3.376961,-2.314633,-4.962121,0.781444,-6.187369,-5.720440,-4.777569,0.165577,-6.411078,-4.370977,-5.013919,-7.694129,9.968735,0.483062,8.827291,7.452472,8.440630,4.154137,-5.484106,4.743389,6.462431,-1.106581,-0.242210,-1.018302,-6.346410,-2.752665,9.050321,-1.721815,-2.096844,-2.150229,7.059176,4.094118,7.007532,-7.408752,1.510464,-1.101522,-1.433056,-8.319207,3.492422,0.173700,-0.154218,-4.751148,-1.000039,-0.577221,-6.510212,7.566089,-4.257506,-7.532403,1.634244,6.191393,0.590053,0.604131,-3.353173,-5.619876,-8.828311,-9.508492,1.340445,6.081272,2.979919,-7.992624,-1.478531,1.451394,4.513062,8.795655,0.907479,7.783761,-8.073041,-6.455928,5.589633,-1.083751,-1.402060,-0.893691,-7.802688,0.192950,2.622238,0.333737,6.006824,-7.783896,1.640908,0.026050,-7.428943,3.728501,-2.793153,8.093727,-1.912663,2.682208,-9.699168,-4.115706,9.189912,-5.457938,2.852376,3.757313,0.896059,3.221375,9.483855,9.158894,-5.775288,-2.417376,-8.850120,-5.336743,-7.481241,7.896486,2.288298,6.233481,6.970110,6.531110,1.811135,-7.309522,-7.078790,7.355143,-0.197819,6.366946,6.033205,3.271012,7.905083,-9.661177,-2.417144,6.599529,6.546052,-5.642913,-4.836530,-3.639432,-2.595027,-4.318345,-6.433493,-0.036131,-7.653783,6.621535,-1.807533,8.269922,-8.318883,4.253974,4.256158,-4.288840,5.320047,-0.635773,-3.380593,3.217076,2.324277,6.939631,-1.539340,-1.215884,3.025479,-4.145184,2.442596,-7.405680,-3.025866,-4.370176,-9.341788,-7.633753,9.636555,7.382366,8.851868,2.053164,9.620837,3.145908,-9.553012,-6.553680,9.245622,2.785099,4.100890,9.067438,2.469063,3.670119,-9.066104,4.149944,-7.816088,-9.805918,-0.655800,-8.106984,-1.327204,2.807630,-7.658092,2.963587,-1.513709,-6.944965,-7.315236,7.300117,0.660997,2.542718,5.776097,2.049722,1.357462,7.441956,5.014679,8.587059,7.159865,6.573485,7.709752,-9.214300,9.940707,9.974525,-8.818996,-4.926818,0.154290,9.566566,-7.583941,8.280946,-2.971120,8.742730,-0.618049,-6.606094,8.381171,4.195181,-6.860360,9.291565,-6.114730,0.081148,3.928448,-0.434717,8.172929,3.394763,7.955403,7.667964,-8.679229,3.421617,-3.629816,-8.682141,0.214127,-0.943176,0.377609,-5.359271,-3.718614,-8.748903,4.863452,-5.403471,0.949571,-1.671546,-2.918957,-9.247304,8.686577,-5.367130,9.593082,4.639369,-3.964445,-9.074420,4.111681,-3.705932,-0.099783,-7.350372,6.347549,-4.407190,-9.445208,8.973651,5.666808,7.805005,-0.411127,-9.632196,4.827937,-4.269983,1.048290,8.217994,8.475867,-4.556890,0.126821,3.183493,5.808370,6.360151,8.844428,5.501384,-4.331846,2.931994,-3.294299,5.295790,3.519575,1.965937,-2.686207,-8.593480,-5.758608,-5.461888,5.594195,9.822125,3.556711,-0.966147,9.344595,3.149985,4.547440,-7.788489,-7.883489,3.015906,-8.780234,-4.312442,9.758385,-6.972650,3.030022,2.521323,3.220681,-5.764914,6.578437,0.908404,-3.535878,3.665240,4.157909,0.923090,4.849086,1.001531,9.526856,-7.174951,-4.990116,5.659140,0.157345,-1.928693,6.135807,-3.447734,-5.814255,4.998263,-9.687237,-6.096666,7.391004,-2.530494,-0.081130,-3.864280,6.581266,-3.316627,8.333998,-5.532901,4.830194,6.713748,5.112708,8.598231,0.554168,-5.508976,8.907922,2.413676,-8.582459,8.170749,-5.084933,-5.047655,2.162218,0.482952,-0.646015,5.801096,5.117070,-8.662063,-9.467630,-1.126808,9.273888,-0.362097,7.634289,3.268733,8.103024,-6.351064,-8.561141,2.287237,2.954862,-7.716719,-9.497019,1.378059,4.124044,-6.384604,-9.381128,6.944243,0.974050,-8.043560,-1.021644,-4.623305,7.958748,7.174401,-7.977935,1.238064,2.926863,3.968153,2.665628,5.411274,1.395936,0.425875,-4.159451,1.188608,-9.364632,-4.418650,0.394330,-3.678093,6.873851,-3.763714,-5.436893,-6.203795,8.062885,-3.578538,-4.005223,8.424325,6.239163,4.952595,-1.190252,-1.553906,0.448834,6.530445,1.662434,2.106342,6.612502,-2.705725,4.984157,1.104767,7.663712,9.708996,-7.630843,7.661557,5.620956,5.807753,7.213151,-0.827035,5.006340,3.928257,6.426795,4.081813,-5.974519,8.433386,-8.909760,-5.732803,-6.832532,-4.248634,2.716056,-0.810001,-9.561709,-3.434061,1.643699,-7.533368,-9.845323,-1.887098,-7.466601,-6.108906,2.785621,-8.266938,-5.414516,3.989669,1.628047,6.059214,1.461549,3.221125,-4.723553,7.626538,8.074136,-9.684743,6.818558,8.081824,-5.312521,-6.326652,4.657743,-5.514277,-6.823150,-5.923508,2.219517,-9.618187,-1.864445,-0.830660,7.386546,-9.041842,-9.115208,-4.283169,2.799510,4.712086,7.853341,-7.759858,8.722159,-3.803170,-6.333705,2.892328,6.316190,6.438843,7.538881,-4.425063,8.953595,8.810148,3.295627,-3.577402,-7.671356,-9.274646,6.606184,-3.891990,2.436385,-2.370653,-5.392493,9.339542,1.918311,0.141199,6.919988,9.309960,-3.384861,-6.186878,-6.110515,0.311395,-3.583638,-4.986199,-7.656145,-7.242194,-2.909678,2.870713,-0.103943,-1.267098,1.002044,0.292903,7.116336,-4.773559,2.925042,7.807716,9.946937,-2.732958,-3.640612,3.108302,-5.754520,6.122156,2.886870,1.306572,6.189726,9.801747,3.051493,8.713168,-4.406092,-4.991642,-7.101009,4.845004,-6.189982,-6.715660,0.612016,3.412693,4.452418,-2.933569,-3.817486,1.208700,8.744323,-7.551663,1.922247,6.720193,7.503747,2.185911,7.921863,4.842863,5.746106,-9.827596,-7.132883,-9.670104,-8.221268,-2.517714,-2.551897,5.915859,-8.590950,-9.155546,5.944489,9.335627,6.111924,8.637079,-4.616525,1.999812,-4.656055,-8.348865,1.111962,-0.562424,7.644197,-3.155386,-4.169939,4.560560,-6.971535,-6.447655,6.388505,-6.745460,3.389346,2.982781,9.219000,5.654130,-3.321901,-1.535367,-3.509217,-4.651627,0.373449,4.555489,-1.932353,-5.390663,-3.938824,-6.742050,6.317606,-1.835472,-4.087435,-2.427721,-4.531373,6.591316,7.418741,5.770919,2.615153,5.616000,-8.082101,-9.171515,1.204068,6.871701,-3.692220,2.662443,6.250967,-6.639815,3.056121,0.718253,-5.857244,-7.971958,-5.918066,8.759198,6.866025,-3.217713,1.916446,-2.036341,3.765800,-7.138893,-7.209666,1.750963,2.405521,2.752827,-3.550120,5.024284,-5.174618], dtype = "float32")#candidate|10419|(1350,)|const|float32
var_10420 = relay.var("var_10420", dtype = "bool", shape = (128,))#candidate|10420|(128,)|var|bool
call_10418 = relay.TupleGetItem(func_6582_call(relay.reshape(const_10419.astype('float32'), [1350,]), relay.reshape(var_10420.astype('bool'), [8, 8, 2]), ), 2)
call_10421 = relay.TupleGetItem(func_6586_call(relay.reshape(const_10419.astype('float32'), [1350,]), relay.reshape(var_10420.astype('bool'), [8, 8, 2]), ), 2)
var_10428 = relay.var("var_10428", dtype = "float32", shape = (1848,))#candidate|10428|(1848,)|var|float32
bop_10429 = relay.subtract(call_10418.astype('int8'), relay.reshape(var_10428.astype('int8'), relay.shape_of(call_10418))) # shape=(1848,)
bop_10432 = relay.subtract(call_10421.astype('int8'), relay.reshape(var_10428.astype('int8'), relay.shape_of(call_10421))) # shape=(1848,)
uop_10440 = relay.sin(bop_10429.astype('float32')) # shape=(1848,)
uop_10442 = relay.sin(bop_10432.astype('float32')) # shape=(1848,)
output = relay.Tuple([call_10414,const_10419,var_10420,uop_10440,])
output2 = relay.Tuple([call_10415,const_10419,var_10420,uop_10442,])
func_10446 = relay.Function([var_10420,var_10428,], output)
mod['func_10446'] = func_10446
mod = relay.transform.InferType()(mod)
mutated_mod['func_10446'] = func_10446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10446_call = mutated_mod.get_global_var('func_10446')
var_10448 = relay.var("var_10448", dtype = "bool", shape = (128,))#candidate|10448|(128,)|var|bool
var_10449 = relay.var("var_10449", dtype = "float32", shape = (1848,))#candidate|10449|(1848,)|var|float32
call_10447 = func_10446_call(var_10448,var_10449,)
output = call_10447
func_10450 = relay.Function([var_10448,var_10449,], output)
mutated_mod['func_10450'] = func_10450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_10463 = relay.TupleGetItem(func_7196_call(), 0)
call_10464 = relay.TupleGetItem(func_7198_call(), 0)
func_9986_call = mod.get_global_var('func_9986')
func_9987_call = mutated_mod.get_global_var('func_9987')
call_10468 = relay.TupleGetItem(func_9986_call(), 0)
call_10469 = relay.TupleGetItem(func_9987_call(), 0)
func_4333_call = mod.get_global_var('func_4333')
func_4339_call = mutated_mod.get_global_var('func_4339')
const_10476 = relay.const(-1, dtype = "int16")#candidate|10476|()|const|int16
const_10477 = relay.const([-1,-8,-9,6,-4,-7,2,9,6,-7,-8,-5,-7,-6,-1,7,-1,3,-8,6,-5,-2,4,-7,7,-3,8,-3,-4,-5,7,-9,9,-10,2,-6,9,-6,-1,-3,4,3,-4,10,7,-3,9,5,-3,-4,1,1,-10,-4,9,-1,-3,-8,-3,5,4,-6,-1,9,-8,-10,-5,-10,10,-7,-1,-2,5,3,8,9,9,3,8,7,-4,-6,10,5,-8,-6,1,7,-10,3,2,10,-1,3,-4,7,7,-9], dtype = "int16")#candidate|10477|(98,)|const|int16
const_10478 = relay.const([-3.729660,-7.374539,-1.229550,-8.346578,-2.876034,-5.736450,-7.238579,-3.290218,-4.536998,9.655540,2.149563,-6.416486,-0.691510,7.635952,7.104079,9.733180,1.216210,0.998405,-9.654968,3.931240,6.989440,1.956916,-2.042888,-0.310620,3.199549,0.543752,-3.715399,5.356932,-5.889446,-3.704732,-2.599607,-8.934739,-8.517724,9.553149,3.430552,8.257963,0.741874,-5.217189,-5.033871,-8.364023,9.196401,1.323649,-8.518383,-3.635257,2.325138,-0.361528,-3.227373,1.931045,-2.339313,2.995065,5.744937,8.951380,9.576036,8.771560,-2.729446,2.217646,5.426481,6.333276,-1.176481,-8.848445,-3.379462,2.612017,0.928409,3.705183,8.467979,2.293511,3.207765,7.451736,3.344357,1.681589,7.979650,1.301523,2.478448,-1.511648,-6.523240,3.182826,3.288349,0.247355,5.834898,-2.473055,1.790646,3.148319,-8.241008,1.399352,9.844250,1.025536,3.143558,2.510625,1.719863,-8.766061,9.793749,8.343714,-8.430433,1.612284,9.125813,9.319679,-9.861403,-8.092568,5.268570,-2.409695,-4.000663,9.310438,-2.412678,-4.532072,-6.848718,1.538820,-2.869019,-8.033002,5.892469,-7.079150,-8.118536,6.594171,-9.650953,5.773318,4.825248,4.887728,-0.067803,1.476595,2.331377,-8.944545,4.995143,1.615076,-9.566301,-4.697281,-2.084386,9.586058,-1.260431,2.155594,-9.491903,5.647711,-0.219241,3.194835,9.069437,0.618685,-3.433340,3.602079,0.095921,8.844585,-4.715915,6.741271,-9.256560,8.162757,2.737049,3.734614,-0.592614,8.045498,7.449364,8.273490,6.545140,-1.694931,-8.155353,6.526932,-0.007170,-2.890285,0.574388,8.070451,-6.863746,-9.093748,5.071153,1.106560,-3.494669,-1.470117,5.187765,5.679944,-3.225047,-8.858405,3.106024,-1.196040,-2.134436,-1.639305,-3.259336,3.769320,6.670955,-5.356870,5.401627,-6.014385,-5.985862,-2.053840,-9.391769,6.235138,4.923175,6.570343,6.999479,-0.472379,-8.991897,0.049450,4.508991,2.999358,2.579976,2.192180,8.692060,-1.778980,0.484729,9.060307,-2.745341,-7.678939,-5.573092,-0.349452,-5.735909,1.135097,-6.079593,7.590667,8.121552,-6.283850,0.586222,-6.031329,6.279847,-5.100916,3.960790,-1.339895,-0.874863,0.110915,-9.346343,9.856334,-5.333025,-4.431793,1.275534,-7.739211,-1.582686,2.392064,3.866563,8.731099,4.371239,5.765150,8.704292,-6.094806,-7.578665,3.514517,-7.855230,6.054473,4.095103,3.366091,-4.870116,-3.138551,-8.528269,-3.322964,0.108612,-3.192248,6.439739,6.583845,6.708309,1.694718,4.757477,-8.001395,7.176091,-4.368528,8.245502,6.376885,-7.481932,3.859376,-5.833852,-4.700472,4.007691,-6.856500,-3.290329,7.558241,9.162553,3.997344,0.398480,-4.133743,-1.480859,-3.619618,-3.862019,4.971845,6.249656,9.171851,-0.465691,3.367430,-2.452294,-4.603098,1.511184,-4.845881,-2.348181,1.706726,-1.381387,-8.428189,-8.496835,-6.590826,4.842873,0.940557,-3.727159,-0.520462,-4.434799,-2.717681,3.053623,9.086257,4.323697,6.594739,-3.718065,6.657328,3.814616,7.991107,-5.055505,-8.734694,2.975261,-4.804115,0.034069,-6.196613,-8.724768,-7.562299,6.097049,-5.157306,-4.516762,5.391955,-3.461091,3.556789,-6.687882,-5.556375,-0.608681,-5.328125,-5.168427,-2.059668,7.382421,-5.441679,0.521316,0.905249,-7.151111,6.979315,-5.651881,3.728302,-0.759341,-8.163725,0.978481,4.779741,0.329657,9.218566,4.749183,4.696404,-0.081949,-3.573502,7.472171,9.376102,-6.452144,-9.737403,2.619637,2.722299,-1.918110,-2.668629,-1.965876,5.237643,-5.495339,-1.402630,-9.778563,-8.923995,2.900480,5.835783,9.030206,-3.578676,4.504029,-9.530379,8.125611,-4.465196,3.940164,2.782343,9.593858,4.752280,-5.651409,6.691427,-6.179036,3.327903,-6.468193,-1.500079,3.544995,9.354269,8.526025,0.481692,-7.771580,-4.175009,0.616485,3.815005,-5.974876,-1.433595,-6.244908,-7.940518,7.877682,-5.000586,-3.139461,9.363719,-8.935377,-4.928380,-9.365297,-0.162118,-7.092776,-4.715703,-6.051644,-0.361553,7.183902,6.252635,-2.683451,-1.106516,-1.829327,2.366869,5.626597,-8.557634,-0.058640,4.541634,9.124680,0.952580,-7.574282,1.882260,9.446494,9.860675,-7.269066,7.076083,-7.438498,-6.192898,-4.367611,4.608576,8.021435,2.212697,7.189819,-6.728102,-9.104571,-2.721102,-1.848282,-2.839999,2.376393,-7.026421,-2.093075,-2.758396,5.066436,1.998864,-5.574084,6.831459,5.176864,0.102007,6.808787,8.350827,7.007252,-5.792683,5.419939,-9.307626,-8.156852,-7.864831,-6.988514,-7.021815,0.674011,7.766379,-4.260119,0.860282,-1.622101,-2.409592,8.575849,2.834414,6.720268,-1.575537,-0.737804,0.923944,7.944208,-3.297382,-1.136029,6.168585,-7.963963,-3.420403,3.801840,-9.889501,-7.670451,7.955521,-3.663420,7.523153,-8.885430,-1.722146,-9.005579,6.074848,1.741240,6.045788,-7.591261,-4.472407,2.529235,-2.013253,-1.898727,-8.846567,9.628739,-3.175096,3.747531,-3.001496,2.843446,-5.974776,-9.032801,6.294860,4.238147,-7.880439,6.801255,5.632174,0.521802,7.604985,-3.433294,-5.622820,5.588548,-4.378745,-8.384168,-7.264718,2.268145,7.813706,0.104655,-6.494738,2.836105,-0.304094,9.032083,-9.601421,9.673609,-9.158913,3.226458,-7.609295,-5.951544,4.074852,6.299264,-0.296781,5.641976,-0.871116,9.127775,6.428274,3.946764,7.345248,8.333950,4.915200,-6.176195,1.078893,9.842118,-3.505704,-6.152509,-3.736462,-2.044734,-9.887316,4.343048,-1.013987,3.560028,2.859002,8.303232,9.551293,-3.966817,-8.079954,8.051159,5.763953,9.418556,-1.109781,2.102071,1.446688,0.438721,1.856038,-2.038569,1.478028,-3.881949,7.240202,-9.982662,-0.473421,0.475714,0.618189,-3.728693,7.451814,-6.891422,1.437729,6.044870,5.800299,3.890201,4.902861,-4.138195,5.450182,4.222185,1.255593,-8.990127,8.148068,-9.598921,-7.292414,8.702301,-1.699627,5.896038,7.210205,-9.239675,5.812802,-2.462022,4.744093,-5.562560,8.825863,5.378795,4.590469,-5.678033,-7.042036,2.659703,-7.545372,-0.697509,-7.435985,-3.622440,-1.615617,9.568918,-5.477298,-1.614018,-8.071635,4.645129,4.821592,-6.551166,-5.991176,3.407353,6.480140,8.030931,3.309601,-3.540931,8.593741,9.376266,1.170647,7.756930,-3.164952,-2.510303,-8.505221,-4.687520,-0.061523,-5.426625,-9.418855,3.381195,-7.388524,3.788508,2.458888,-7.649489,-2.980685,-4.572182,-9.471313,-7.948761,-9.605699,0.454184,-3.365725,-7.643510,0.010037,4.640135,-3.882218,9.813983,8.647264,-2.490613,0.895035,0.322533,-6.872454,9.486005,0.042028,-9.578163,-0.736715,7.735632,4.449081,-3.781459,-6.798519,-7.011383,-6.977380,-4.810753,-9.570081,-1.201272,6.604918,-5.810625,-7.621414,-1.528315,2.468940,3.414103,-9.410939,-8.173207,-6.129184,-5.798164,-8.247919,2.772722,3.923152,-8.842742,-9.076403,1.912702,-7.778183,0.888352,7.870330,-2.174018,-4.911325,9.623668,-4.571847,9.668556,-2.084794,-7.905719,-3.068012,8.578125,9.945306,-6.713733,4.596259,6.386402,1.862104,-0.071951,-0.168113,5.720235,-2.924648,5.566780,-4.063758,4.002398,3.587346,6.710899,0.703590,8.586139,-2.809749,-9.534926,1.854623,0.421374,-7.476663,5.131867,-7.782043,-7.028951,9.316622,-5.327383,-2.258083,-2.936603,4.140139,3.788096,7.840090,1.877288,-5.766643,7.279968,0.498832,-9.085922,-4.417954,-2.755753,-2.426532,1.524814,-1.371123,7.008415,9.144197,-0.128410,3.477161,7.799225,-8.103639,-1.128358,-2.699556,-6.451808,-7.357244,7.214468,8.462754,-6.496304,-8.110802,1.530046,9.492713,3.913236,4.943290,3.947737,-3.532093,6.097479,3.583165,7.185423,3.883681,4.905484,8.261428,-0.810476,-1.498694,-4.195713,-0.117657,5.922162,5.200744,-0.577578,8.091153,2.339031,-4.124074,-0.928066,6.693901,8.386215,-7.952026,-6.669103,3.830898,-5.712987,6.243149,0.987235,-3.488473,8.071951,4.642428,-3.489925,9.288517,-2.551402,-2.562324,9.717395,6.320133,-7.040430,8.856337,4.756668,8.876108,-6.344551,-3.433823,-5.272557,1.741492,-8.828440,5.129297,6.633335,8.468365,-2.699287,-9.655502,2.306419,-7.332272,2.433748,-7.819048,1.414691,-8.558911,7.401467,8.158853,-1.641150,1.396588,2.909766,5.916177,-1.614059,6.149854,2.558631,-3.415309,3.912653,-8.165693,5.484505,5.377160,5.301746,-3.347240,-8.282115,-8.776970,-7.537308,-5.500705,7.189299,-5.102348,-0.291544,-3.569378,-1.529082,-5.411242,-1.426180,-0.276693,4.435132,-3.078253,-6.069247,7.124072,-4.004222,8.045167,-0.417830,-4.417663,0.542536,0.966644,-9.021696,6.548802,-6.402525,-4.858718,8.831466,-4.298332,-6.834449,3.424448,-3.875182,-2.738889,-5.609245,4.055119,9.171207,-1.907765,9.438917,-4.500262,-0.269835,-8.771382,3.581297,0.195043,4.168686,9.034360,-2.598397,-3.706443,-2.163898,5.863552,-0.949983,3.575611,-1.014479,0.768214,8.170127,-5.031925,8.488513,-8.112975,2.342385,7.444760,-1.824899,8.254190,3.487850,0.016321,-7.434469,3.587693,0.333761,-3.840328,-7.196281,1.776907,2.627593,9.440319,-4.817585,0.050304,5.531324,3.372711,9.958177,-8.495106,-5.613511,-3.622954,-0.752265,-1.992636,-2.874960,-6.469783,-5.422326,-6.073660,7.120641,-5.742282,-2.973976,4.152796,6.206108,3.220364,2.627423,3.792795,2.780248,-1.233437,4.465943,1.826301,5.220417,9.347761,-6.918370,2.972213,0.489357,0.082092,5.151490,-8.853575,7.149047,-9.800534,3.149621,8.293722,8.195810,9.671475,-3.898978,1.713713,-3.790945,7.668279,-5.916694,-5.463435,-3.639133,7.649662,-8.163152,-7.365941,8.950579,2.867723,7.442721,0.522321,-5.368928,1.097652,-4.729793,4.700209,3.808122,9.926894,9.660589,-4.111290,9.874634,-6.463370,2.190021,-8.733055,3.986635,5.103455,-0.882223,6.104115,0.761300,8.232223,3.335918,-8.402217,7.440279,4.929074,2.154792,-5.816259,8.524402,4.247580,-0.451335,-1.762560,2.122223,-8.809562,-6.754326,-4.064111,-6.750778,9.906724,-8.608050,3.960700,0.442887,3.560449,-3.288156,-1.681798,-1.048601,-6.005955,2.499134,-2.663133,-7.564524,-9.508349,-8.284733,4.607404,-4.653293,4.022190,-4.971637,-1.155893,0.032503,7.087576,7.196125,7.769335,0.122027,-8.073591,-9.504615,1.292373,4.354238,-2.096857,-0.678355,3.052954,-6.534642,-1.131163,8.448425,5.596125,-7.419036,-8.012620,-3.897662,8.667957,3.685366,-8.507938,-6.091301,-7.991885,6.176746,6.559768,-8.090724,-3.044985,1.309483,-2.744729,0.793354,7.101164,-3.800330,3.738867,-6.552717,-9.699989,4.664350,6.633000,-2.786506,8.926749,-2.038548,5.625151,5.515326,-1.806443,-0.663465,5.382018,-0.904410,4.271815,-0.056684,1.772082,3.000736,-6.528513,-1.136213,-1.101212,-9.522597,-5.061841,9.825709,3.129866,2.100753,6.938036,-8.412982,3.976783,-1.933924,1.466420,6.847618,9.233523,-5.312697,4.538242,2.698077,0.872673,-9.614001,0.345774,-2.186687,-9.956388,-6.153729,1.149692,4.345189,2.912513], dtype = "float32")#candidate|10478|(1056,)|const|float32
var_10479 = relay.var("var_10479", dtype = "float32", shape = (1350,))#candidate|10479|(1350,)|var|float32
call_10475 = relay.TupleGetItem(func_4333_call(relay.reshape(const_10476.astype('int16'), []), relay.reshape(const_10477.astype('int16'), [14, 7, 1]), relay.reshape(const_10478.astype('float32'), [8, 132]), relay.reshape(var_10479.astype('float32'), [1350,]), ), 2)
call_10480 = relay.TupleGetItem(func_4339_call(relay.reshape(const_10476.astype('int16'), []), relay.reshape(const_10477.astype('int16'), [14, 7, 1]), relay.reshape(const_10478.astype('float32'), [8, 132]), relay.reshape(var_10479.astype('float32'), [1350,]), ), 2)
func_7209_call = mod.get_global_var('func_7209')
func_7211_call = mutated_mod.get_global_var('func_7211')
call_10482 = func_7209_call(relay.reshape(call_10468.astype('uint16'), [16, 11, 10]))
call_10483 = func_7209_call(relay.reshape(call_10468.astype('uint16'), [16, 11, 10]))
bop_10484 = relay.floor_mod(var_10479.astype('float64'), const_10476.astype('float64')) # shape=(1350,)
bop_10494 = relay.floor_divide(const_10476.astype('float64'), call_10468.astype('float64')) # shape=(16, 11, 10)
bop_10497 = relay.floor_divide(const_10476.astype('float64'), call_10469.astype('float64')) # shape=(16, 11, 10)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
const_10507 = relay.const([-1.812738,8.600610,-7.332029,-2.667305,-9.364631,4.792393,-4.860901,4.267484,-2.129123,-1.497021,-7.092996,-7.440412,-3.356376,0.743943,-9.897587,7.932833,2.182140,-0.348287,5.030035,-9.629748,1.009318,-8.300044,-3.958491,2.514216], dtype = "float64")#candidate|10507|(24,)|const|float64
call_10506 = func_6244_call(relay.reshape(const_10507.astype('float64'), [2, 3, 4]))
call_10508 = func_6244_call(relay.reshape(const_10507.astype('float64'), [2, 3, 4]))
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_10509 = relay.TupleGetItem(func_7903_call(), 0)
call_10510 = relay.TupleGetItem(func_7905_call(), 0)
output = relay.Tuple([call_10463,call_10475,const_10477,const_10478,call_10482,bop_10484,bop_10494,call_10506,const_10507,call_10509,])
output2 = relay.Tuple([call_10464,call_10480,const_10477,const_10478,call_10483,bop_10484,bop_10497,call_10508,const_10507,call_10510,])
func_10511 = relay.Function([var_10479,], output)
mod['func_10511'] = func_10511
mod = relay.transform.InferType()(mod)
mutated_mod['func_10511'] = func_10511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10512 = relay.var("var_10512", dtype = "float32", shape = (1350,))#candidate|10512|(1350,)|var|float32
func_10511_call = mutated_mod.get_global_var('func_10511')
call_10513 = func_10511_call(var_10512)
output = call_10513
func_10514 = relay.Function([var_10512], output)
mutated_mod['func_10514'] = func_10514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7821_call = mod.get_global_var('func_7821')
func_7822_call = mutated_mod.get_global_var('func_7822')
call_10526 = relay.TupleGetItem(func_7821_call(), 0)
call_10527 = relay.TupleGetItem(func_7822_call(), 0)
var_10547 = relay.var("var_10547", dtype = "float32", shape = (2, 2, 13))#candidate|10547|(2, 2, 13)|var|float32
bop_10548 = relay.power(call_10526.astype('float32'), relay.reshape(var_10547.astype('float32'), relay.shape_of(call_10526))) # shape=(2, 2, 13)
bop_10551 = relay.power(call_10527.astype('float32'), relay.reshape(var_10547.astype('float32'), relay.shape_of(call_10527))) # shape=(2, 2, 13)
output = bop_10548
output2 = bop_10551
func_10558 = relay.Function([var_10547,], output)
mod['func_10558'] = func_10558
mod = relay.transform.InferType()(mod)
mutated_mod['func_10558'] = func_10558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10559 = relay.var("var_10559", dtype = "float32", shape = (2, 2, 13))#candidate|10559|(2, 2, 13)|var|float32
func_10558_call = mutated_mod.get_global_var('func_10558')
call_10560 = func_10558_call(var_10559)
output = call_10560
func_10561 = relay.Function([var_10559], output)
mutated_mod['func_10561'] = func_10561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9986_call = mod.get_global_var('func_9986')
func_9987_call = mutated_mod.get_global_var('func_9987')
call_10632 = relay.TupleGetItem(func_9986_call(), 0)
call_10633 = relay.TupleGetItem(func_9987_call(), 0)
func_10252_call = mod.get_global_var('func_10252')
func_10254_call = mutated_mod.get_global_var('func_10254')
call_10636 = relay.TupleGetItem(func_10252_call(), 1)
call_10637 = relay.TupleGetItem(func_10254_call(), 1)
output = relay.Tuple([call_10632,call_10636,])
output2 = relay.Tuple([call_10633,call_10637,])
func_10655 = relay.Function([], output)
mod['func_10655'] = func_10655
mod = relay.transform.InferType()(mod)
mutated_mod['func_10655'] = func_10655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10655_call = mutated_mod.get_global_var('func_10655')
call_10656 = func_10655_call()
output = call_10656
func_10657 = relay.Function([], output)
mutated_mod['func_10657'] = func_10657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_10682 = relay.TupleGetItem(func_6533_call(), 0)
call_10683 = relay.TupleGetItem(func_6535_call(), 0)
output = call_10682
output2 = call_10683
func_10696 = relay.Function([], output)
mod['func_10696'] = func_10696
mod = relay.transform.InferType()(mod)
output = func_10696()
func_10697 = relay.Function([], output)
mutated_mod['func_10697'] = func_10697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_10720 = relay.TupleGetItem(func_6811_call(), 0)
call_10721 = relay.TupleGetItem(func_6813_call(), 0)
output = call_10720
output2 = call_10721
func_10729 = relay.Function([], output)
mod['func_10729'] = func_10729
mod = relay.transform.InferType()(mod)
output = func_10729()
func_10730 = relay.Function([], output)
mutated_mod['func_10730'] = func_10730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mod.get_global_var('func_7032')
func_7033_call = mutated_mod.get_global_var('func_7033')
call_10804 = relay.TupleGetItem(func_7032_call(), 0)
call_10805 = relay.TupleGetItem(func_7033_call(), 0)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_10806 = relay.TupleGetItem(func_7196_call(), 0)
call_10807 = relay.TupleGetItem(func_7198_call(), 0)
func_9434_call = mod.get_global_var('func_9434')
func_9436_call = mutated_mod.get_global_var('func_9436')
call_10808 = relay.TupleGetItem(func_9434_call(), 0)
call_10809 = relay.TupleGetItem(func_9436_call(), 0)
uop_10813 = relay.tan(call_10808.astype('float64')) # shape=(1056,)
uop_10815 = relay.tan(call_10809.astype('float64')) # shape=(1056,)
uop_10836 = relay.sin(uop_10813.astype('float32')) # shape=(1056,)
uop_10838 = relay.sin(uop_10815.astype('float32')) # shape=(1056,)
output = relay.Tuple([call_10804,call_10806,uop_10836,])
output2 = relay.Tuple([call_10805,call_10807,uop_10838,])
func_10844 = relay.Function([], output)
mod['func_10844'] = func_10844
mod = relay.transform.InferType()(mod)
mutated_mod['func_10844'] = func_10844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10844_call = mutated_mod.get_global_var('func_10844')
call_10845 = func_10844_call()
output = call_10845
func_10846 = relay.Function([], output)
mutated_mod['func_10846'] = func_10846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_10928 = relay.TupleGetItem(func_6496_call(), 1)
call_10929 = relay.TupleGetItem(func_6498_call(), 1)
output = relay.Tuple([call_10928,])
output2 = relay.Tuple([call_10929,])
func_10931 = relay.Function([], output)
mod['func_10931'] = func_10931
mod = relay.transform.InferType()(mod)
mutated_mod['func_10931'] = func_10931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10931_call = mutated_mod.get_global_var('func_10931')
call_10932 = func_10931_call()
output = call_10932
func_10933 = relay.Function([], output)
mutated_mod['func_10933'] = func_10933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mod.get_global_var('func_7032')
func_7033_call = mutated_mod.get_global_var('func_7033')
call_10943 = relay.TupleGetItem(func_7032_call(), 0)
call_10944 = relay.TupleGetItem(func_7033_call(), 0)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
const_10957 = relay.const([-8,3,2,4,3,-6,-7,-5,-8,-2,8,-6,-10,1,-6,7,-9,-7,8,-10,1,4,-10,2,-5,6,8,4,-10,8,-7,9,-7,-1,-10,-6,5,-1,-10,1,-7,-9,-9,-7,-9,-7,1,-4,-4,3,-4,-7,8,-1,2,4,-9,6,-7,8,-9,-4,-1,-7,3,-1,9,-7,-5,-7,-2,-8,-7,10,-7,-2,3,7,6,3,5,8,9,5,4,2,-5,7,-5,8,7,-10,-7,6,-2,5,-2,-3,8,6,-10,-8,-9,8,3,-5,7,-3,-2,-8,-10,2,-3,3,-1,-5,-9,7,-9,-3,-1,5,4,2,6,10,10,8,-5,7,3,-8,-5,2,7,8,-4,8,10,-3,10,2,5,5,2,7,-6,-8,7,-4,-5,-6,3,6,6,10,3,7,-2,10,-8,9,-2,-2,-7,5,9,1,-7,-7,-4,-10,9,-7,-2,6,3,-4,2,-4,-4,-1,10,5,6,-10,-9,9,8,2,2,1,-3,10,3,-6,-1,-10,-10,-8,-10,-9,1,-8,6,10,-10,-5,10,-2,-7,1,-7,1,-9,4,-1,8,-2,10,8,10,-3,-3,-10,5,3,-7,9,8,1,5,4,4,4,8,2,-2,-2,-7,1,-10,-7,5,-7,2,-2,9,-4,5,-7,-10,2,-3,8,-7,-1,1,5,4,8,1,-6,-7,-3,6,7,8,-9,-4,-4,-4,-9,5,-3,-6,-6,1,7,-10,-4,2,-6,1,-3,10,7,4,-1,9,-5,-4,-2,-3,-7,-1,3,2,-4,-5,-1,6,-9,5,-9,-3,-1,-7,4,-4,-5,1,8,7,8,1,-7,7,-9,-7,7,3,8,1,-2,-2,9,4,9,-9,5,6,1,9,6,-8,-7,2,-3,-7,7,-1,-7,4,-8,10,-5,7,-10,5,2,10,6,-5,5,3,5,10,9,-5,7,2,4,9,6,1,-9,7,4,-2,6,-1,-9,1,5,7,-5,-5,10,4,-9,-6,-7,4,7,-8,-3,-3,10,-2,-2,-8,-10,8,8,-8,7,9,-8,-3,9,7,-4,4,-4,10,5,-5,-10,9,-4,-9,2,5,1,5,1,3,2,-9,4,-4,-7,8,-1,7,3,-6,-6,-4,-1,6,-1,-7,-6,9,8,-1,-2,4,5,1,-9,-2,10,-1,-7,2,4,2,8,10,-7,-2,-1,4,-10,-7,-4,6,-6,-4,2,2,-5,-5,-8,-10,-7,5,9,-7,6,9,-2,-5,-10,3,5,9,2,5,-1,4,-7,8,-10,-6,9,-8,8,1,-2,-3,2,9,6,-1,-8,6,5,3,9,2,3,-10,5,3,8,6,-8,3,8,-2,10,-2,-2,-10,2,-10,4,-10,-5,-6,-8,2,-5,1,-10,10,1,-7,-4,-3,-1,-5,-4,1,7,2,-8,-1,-9,8,3,1,1,6,-7,4,-1,2,-4,-3,-8,4,9,-3,-8,-10,-1,7,-1,7,-10,-5,-2,6,-7,4,-6,-5,6,5,-1,6,-8,-3,-6,6,-5,-8,-7,10,-5,-1,-7,-6,-6,-8,8,8,9,-4,4,-2,10,-6,6,2,2,-2,2,3,-1,-3,-5,2,4,10,5,-7,-1,3,-8,-9,-8,1,-9,8,-5,8,3,5,-5,5,6,6,-6,-5,1,7,2,-9,-2,2,9,-9,-1,8,-9,5,-7,-3,7,-7,9,-8,-4,6,6,-5,-10,-5,-9,7,8,-3,3,7,-3,10,10,7,-7,-2,-2,5,-1,5,5,-6,-5,9,-7,10,5,-4,-10,-1,-5,-9,9,-3,6,8,9,6,7,4,6,-5,-5,-5,1,1,8,5,6,10,5,5,4,-9,-9,-4,-6,5,10,-6,8,7,9,-5,-9,7,3,-9,3,9,-9,-8,-3,-8,-5,-4,-4,-10,4,-8,-10,-8,-8,3,2,-5,6,10,10,-4,4,7,8,5,-3,-6,9,-8,-8,-8,5,-3,-9,-2,-3,-6,-2,-7,10,-4,-4,-8,4,-9,8,-3,3,4,1,2,10,-10,-1,-5,-8,6,9,6,1,-6,-3,2,6,-9,-9,2,-9,4,-9,10,9,-1,1,4,3,1,-10,3,8,-5,-2,-6,9,-10,-10,8,-8,10,8,-1,3,-8,-6,10,-4,-1,-4,-7,7,-3,-8,6,2,5,-9,1,-10,-6,-4,10,-3,-6,8,-2,-3,-1,8,6,3,-9,10,4,-3,-8,-7,6,-9,-7,-6,-1,-3,-9,-10,-10,8,5,1,10,2,-10,-6,8,-9,-2,3,-5,6,9,10,-10,1,8,9,-6,4,7,-4,-5,10,-7,9,-1,-5,2,10,-6,9,2,10,8,-4,3,-10,1,6,-4,10,-1,-6,2,6,8,10,7,8,5,10,1,8,1,10,10,-1,-4,-5,6,4,1,3,-5,1,4,2,3,-7,-6,10,-6,-9,9,-9,-7,8,-9,8,-2,6,2,1,-9,-8,5,3,8,-6,-5,-1,-9,4,9,-2,1,-7,7,6,8,3,3,-9,-9,7,9,8,-4,6,4,-4,-7,8,3,-1,10,-6,-1,2,-7,4,7,-4,6,-6,-7,3,-3,7,5,-9,-4,-7,-10,-7,-10,-3,-4,-9,6,-1,8,-6,-5,9,4,6,-2,5,6,7,2,2,-8,6,-8,8,3,7,10,9,-3,-2,-1,-5,8,2,3,-5,7,-8,2,-9,3,-2,-1,6,7,-8,-6,5,4,-3,-1,1,-2,3,6,-9,-9,1,2,-5,-7,7,-6,7,-10,-1,9,-1,1,-6,-7,8,-4,7,8,6,6,1,6,6,-6,-6,-10,-7,10,-10,8,2,-8,-9,4,-4,-7,-6,10,-8,8,-1,-1,-9,-2,6,8,-2,-9,-3,-4,-5,1,-5,-3,7,-7,2,-9,-8,2,10,4,-4,-5,-7,-3,2,-4,-5,2,-10,2,-8,3,-3,10,4,-9,8,-7,-3,-7,-4,-5,-10,3,-7,-4,-8,-3,-1,-8,8,3,-1,8,1,-2,8,6,-6,2,5,-10,-10,-6,7,-7,-3,-10,-1,10,-6,8,10,6,4,1,1,-2,6,3,4,-8,-10,-1,7,-6,-6,10,10,-3,-3,6,6,6,-8,3,1,-8,10,-6,3,-3,-6,-4,-9,3,-9,-8,6,7,3,5,3,-6,5,1,2,4,7,8,-4,7,-1,10,-9,1,-9,7,-4,-5,3,-6,10,-4,-9,-2,-5,-8,-6,-4,-7,6,-5,-6,-5,7,-6,2,-2,-4,1,6,7,-4,4,9,-5,7,-9,9,3,2,7,-7,2,-2,7,3,-3,6,-3,9,1,7,9,2,2,-1,-7,9,-10,-6,-8,1,-4,-7,4,-6,-1,5,-1,-2,-8,-1,3,-6,-1,-10,-9,-10,-1,-1,-4,2,-2,-5,-1,-5,10,-7,7,6,6,-7,-10,-8,-4,8,6,3,-6,-10,-5,-9,2,-8,9,-5,1,-10,8,3,-8,2,-10,3,-5,-4,-7,-9,-7,8,-2,-1,-8,5,-8,10,9,2,-8,5,8,-8,-2,-6,4,7,8,1,8,1,-4,1,-4,-3,6,10,9,8,4,4,-9,-6,-8,2,4,-1,-8,-4,-5,-5,-6,4,-2,9,-10,6,4,6,-10,8,-6,4,1,-4,-6,-9,5,-8,-8,5,-9,-7,2,7,-4,9,5,-1,3,5,6,2,7,-10,-6,-5,3,-10,-5,-10,3,8,5,4,-5,-7,-3,4,-6,5,7,-9,-1,-7,7,7,7,7,3,9,-10,-10,-3,3,9,3,9,8,2,-10,5,8,1,3,7,-3,-8,2,-9,1,4,-8,6,4,-1,7,-2,-7,8,-8,-4,4,7,-1,2,6,6,8,10,-9,8,9,9,-4,8,6,6,1,-7,-10,6,4,2,5,-5,6,-10,-5,1,-10,5,10,-5,3,-7,10,2,7,-5,9,7,-5,-8,-8,2,-9,-3,8,-2,-1,-5,2,6,-3,-2,-2,8,5,-8,7,10,-8,-7,-10,-9,-9,3,-4,-1,-9,1,-1,9,-7,9,-10,1,2,4,8,5,8,9,9,10,2,-1,2,-8,-8,2,6,8,3,1,5,-9,4,-6,-9], dtype = "uint8")#candidate|10957|(1560,)|const|uint8
call_10956 = relay.TupleGetItem(func_3334_call(relay.reshape(const_10957.astype('uint8'), [12, 10, 13]), relay.reshape(const_10957.astype('uint8'), [12, 10, 13]), ), 0)
call_10958 = relay.TupleGetItem(func_3337_call(relay.reshape(const_10957.astype('uint8'), [12, 10, 13]), relay.reshape(const_10957.astype('uint8'), [12, 10, 13]), ), 0)
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
call_10967 = relay.TupleGetItem(func_10931_call(), 0)
call_10968 = relay.TupleGetItem(func_10933_call(), 0)
uop_10969 = relay.log2(call_10956.astype('float64')) # shape=(12, 10, 13)
uop_10971 = relay.log2(call_10958.astype('float64')) # shape=(12, 10, 13)
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_10980 = relay.TupleGetItem(func_7196_call(), 0)
call_10981 = relay.TupleGetItem(func_7198_call(), 0)
func_7447_call = mod.get_global_var('func_7447')
func_7451_call = mutated_mod.get_global_var('func_7451')
const_11002 = relay.const([-3,-4,-1,-7,-4,-7,-1,1,8,4,-7,4,-2,-10,3,-3,-6,-9,2,2,-8,2,-1,-7,-3,5,-10,3,-3,10,-6,4,-2,9,-8,-9,-1,6,-6,-1,4,8,-4,-3,-3,2,-8,3,1,3,10,-6,4,3,6,8,9,-3,6,1,-1,-9,1,-8,-2,2,4,5,3,-8,1,9,2,4,-2,-7,7,-3,-10,1,-5,-5,2,-6,9,3,2,9,-6,3,-7,-2,-8,1,7,9,-4,10,6,2,-2,5,-9,-9,9,-4,2,-1,2,-10,5,-10,4,8,7,-7,-6,-4,-9,1,-7,-6,-10,1,2,-10,1,-7,-1,-6,4,-9,6,-5,-8,-2,-1,4,-7,3,6,-6,5,-1,8,-7,1,-3,1,1,-6,4,3,-1,5,-2,9,-6,-3,5,4,-4,-7,-3,8,-8,9,2,-2,-4,8,5,-6,-6,-10,10,2,-1,2,-7,-8,-5,-9,-10,-1,-7,2,6,7,-9,-2,2,-5,-1,9,-7,7,3,-8,-8,-7,8,8,-1,6,1,9,10,-6,-10,10,-1,9,2,9,6,6,-7,-8,9,-8,-9,-4,10,-1,5,8,-8,-10,-2,-2,-4,2,3,10,3,-2,5,-3,-6,-5,-8,6,8,8,-4,-10,-1,2,4,5,9,2,-5,-1,1,-3,7,-5,-5,6,-7,8,1,-1,-3,4,6,-8,-3,6,-4,-3,6,5,4,1,-10,-7,-10,-7,5,-4,1,5,-10,-10,-8,3,-4,7,2,9,-6,2,-7,8,-4,4,-4,-9,-10,7,3,-3,-2,5,8,-5,-2,-2,-8,10,3,-5,-5,-9,5,-2,-10,5,3,6,-6,6,8,5,-8,-5,-1,6,-9,8,5,-2,4,4,1,-1,-1,-3,6,-4,-2,-7,-3,8,10,-6,7,9,-9,-1,5,5,10,4,5,2,8,2,-2,1,-8,6,-7,9,10,-6,3,-8,9,-10,-9,-2,2,8,6,-6,8,-2,-9,-3,-4,-3,-10,1,-4,-4,3,-1,1,9,-9,-2,8,-4,-6,7,5,6,-10,5,-7,-6,4,-5,5,2,10,-2,9,-5,-4,2,2,-5,4,6,-6,2,-8,-6,-5,-10,2,1,-10,6,-3,-3,6,-7,7,-2,4,4,-2,-8,9,-2,-9,-4,-3,3,9,-9,6,-5,-9,-8,10,-6,2,-1,-1,-4,6,-7,8,-5,8,2,-1,-6,2,3,6,6,5,-1,-8,5,2,-5,4,9,-3,3,-8,4,3,-3,9,6,-5,-10,-3,1,9,-10,-3,4,-10,9,5,7,1,6,-7,5,3,-9,2,-4,5,5,-10,5,7,-5,7,2,-2,-9,-3,3,2,10,1,7,7,3,1,7,-1,-10,-4,8,1,7,6,9,3,3,5,-1,2,-8,-1,2,-7,4,-5,9,4,9,7,7,9,-5,2,5,-9,10,9,-6,4,-10,-2,4,-7,5,3,8,-6,4,-9,5,-3,-10,6,-1,-5,9,1,5,-8,-6,6,3,-6,-1,8,-3,-8,-5,8,-5,8,10,5,9,-6,4,-8,-4,-4,7,9,-2,2,3,5,3,-10,-3,8,10,-5,-8,9,-7,-6,-4,-6,-6,-6,-8,-5,-4,-4,1,7,6,4,-6,5,-8,8,8,10,2,-2,-9,-3,-1,-10,-9,-4,2,8,-2,3,-5,-2,7,-8,-10,-1,-5,-3,-1,3,-3,-4,4,5,6,8,9,8,-3,-4,5,3,-10,-10,-9,-1,-7,-7,9,-1,-10,-10,-8,-4,5,6,-5,-1,3,-8,-2,7,5,4,-6,3,-3,-6,1,4,9,-5,-8,1,-8,6,-7,-1,6,8,-2,9,-4,-6,4,1,9,8,-2,9,-8,-2,-7,-9,10,-7], dtype = "int64")#candidate|11002|(720,)|const|int64
var_11003 = relay.var("var_11003", dtype = "int32", shape = ())#candidate|11003|()|var|int32
call_11001 = relay.TupleGetItem(func_7447_call(relay.reshape(const_11002.astype('int64'), [720,]), relay.reshape(var_11003.astype('int32'), []), ), 4)
call_11004 = relay.TupleGetItem(func_7451_call(relay.reshape(const_11002.astype('int64'), [720,]), relay.reshape(var_11003.astype('int32'), []), ), 4)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
const_11016 = relay.const([-7.833003,7.739575,1.514842,5.763470,1.896801,2.964633,8.392520,9.584251,-0.142138,-1.869772,9.055998,-8.113759,6.199678,-9.248427,8.660808,-9.528369,-1.450372,3.084924,-7.937857,2.045379,-4.177625,3.048375,8.196577,2.346740], dtype = "float64")#candidate|11016|(24,)|const|float64
call_11015 = func_6244_call(relay.reshape(const_11016.astype('float64'), [2, 3, 4]))
call_11017 = func_6244_call(relay.reshape(const_11016.astype('float64'), [2, 3, 4]))
func_10296_call = mod.get_global_var('func_10296')
func_10298_call = mutated_mod.get_global_var('func_10298')
call_11019 = relay.TupleGetItem(func_10296_call(), 1)
call_11020 = relay.TupleGetItem(func_10298_call(), 1)
func_7857_call = mod.get_global_var('func_7857')
func_7858_call = mutated_mod.get_global_var('func_7858')
call_11023 = relay.TupleGetItem(func_7857_call(), 0)
call_11024 = relay.TupleGetItem(func_7858_call(), 0)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_11035 = func_7550_call()
call_11036 = func_7550_call()
output = relay.Tuple([call_10943,const_10957,call_10967,uop_10969,call_10980,call_11001,const_11002,var_11003,call_11015,const_11016,call_11019,call_11023,call_11035,])
output2 = relay.Tuple([call_10944,const_10957,call_10968,uop_10971,call_10981,call_11004,const_11002,var_11003,call_11017,const_11016,call_11020,call_11024,call_11036,])
func_11061 = relay.Function([var_11003,], output)
mod['func_11061'] = func_11061
mod = relay.transform.InferType()(mod)
var_11062 = relay.var("var_11062", dtype = "int32", shape = ())#candidate|11062|()|var|int32
output = func_11061(var_11062)
func_11063 = relay.Function([var_11062], output)
mutated_mod['func_11063'] = func_11063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9782_call = mod.get_global_var('func_9782')
func_9784_call = mutated_mod.get_global_var('func_9784')
call_11076 = func_9782_call()
call_11077 = func_9782_call()
output = relay.Tuple([call_11076,])
output2 = relay.Tuple([call_11077,])
func_11085 = relay.Function([], output)
mod['func_11085'] = func_11085
mod = relay.transform.InferType()(mod)
output = func_11085()
func_11086 = relay.Function([], output)
mutated_mod['func_11086'] = func_11086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9560_call = mod.get_global_var('func_9560')
func_9561_call = mutated_mod.get_global_var('func_9561')
call_11178 = relay.TupleGetItem(func_9560_call(), 5)
call_11179 = relay.TupleGetItem(func_9561_call(), 5)
func_7752_call = mod.get_global_var('func_7752')
func_7755_call = mutated_mod.get_global_var('func_7755')
var_11192 = relay.var("var_11192", dtype = "uint8", shape = ())#candidate|11192|()|var|uint8
call_11191 = relay.TupleGetItem(func_7752_call(relay.reshape(var_11192.astype('uint8'), [])), 3)
call_11193 = relay.TupleGetItem(func_7755_call(relay.reshape(var_11192.astype('uint8'), [])), 3)
output = relay.Tuple([call_11178,call_11191,var_11192,])
output2 = relay.Tuple([call_11179,call_11193,var_11192,])
func_11201 = relay.Function([var_11192,], output)
mod['func_11201'] = func_11201
mod = relay.transform.InferType()(mod)
var_11202 = relay.var("var_11202", dtype = "uint8", shape = ())#candidate|11202|()|var|uint8
output = func_11201(var_11202)
func_11203 = relay.Function([var_11202], output)
mutated_mod['func_11203'] = func_11203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9986_call = mod.get_global_var('func_9986')
func_9987_call = mutated_mod.get_global_var('func_9987')
call_11221 = relay.TupleGetItem(func_9986_call(), 0)
call_11222 = relay.TupleGetItem(func_9987_call(), 0)
func_8288_call = mod.get_global_var('func_8288')
func_8291_call = mutated_mod.get_global_var('func_8291')
const_11232 = relay.const([6.886694,-9.351627,1.024282,-3.516365,4.043718,-2.288934,-7.745252,3.566276,8.084512,-8.607017,-1.714652,-4.032734,6.047528,-1.523837,-5.047344,3.147356,0.416939,-9.231564,-9.282276,7.994450,-8.528015,-1.373388,4.635563,9.985942], dtype = "float64")#candidate|11232|(24,)|const|float64
const_11233 = relay.const(-4, dtype = "uint8")#candidate|11233|()|const|uint8
call_11231 = relay.TupleGetItem(func_8288_call(relay.reshape(const_11232.astype('float64'), [24,]), relay.reshape(const_11233.astype('uint8'), []), ), 2)
call_11234 = relay.TupleGetItem(func_8291_call(relay.reshape(const_11232.astype('float64'), [24,]), relay.reshape(const_11233.astype('uint8'), []), ), 2)
output = relay.Tuple([call_11221,call_11231,const_11232,const_11233,])
output2 = relay.Tuple([call_11222,call_11234,const_11232,const_11233,])
func_11244 = relay.Function([], output)
mod['func_11244'] = func_11244
mod = relay.transform.InferType()(mod)
mutated_mod['func_11244'] = func_11244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11244_call = mutated_mod.get_global_var('func_11244')
call_11245 = func_11244_call()
output = call_11245
func_11246 = relay.Function([], output)
mutated_mod['func_11246'] = func_11246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9560_call = mod.get_global_var('func_9560')
func_9561_call = mutated_mod.get_global_var('func_9561')
call_11292 = relay.TupleGetItem(func_9560_call(), 7)
call_11293 = relay.TupleGetItem(func_9561_call(), 7)
output = relay.Tuple([call_11292,])
output2 = relay.Tuple([call_11293,])
func_11298 = relay.Function([], output)
mod['func_11298'] = func_11298
mod = relay.transform.InferType()(mod)
mutated_mod['func_11298'] = func_11298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11298_call = mutated_mod.get_global_var('func_11298')
call_11299 = func_11298_call()
output = call_11299
func_11300 = relay.Function([], output)
mutated_mod['func_11300'] = func_11300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7519_call = mod.get_global_var('func_7519')
func_7520_call = mutated_mod.get_global_var('func_7520')
call_11379 = func_7519_call()
call_11380 = func_7519_call()
output = call_11379
output2 = call_11380
func_11389 = relay.Function([], output)
mod['func_11389'] = func_11389
mod = relay.transform.InferType()(mod)
output = func_11389()
func_11390 = relay.Function([], output)
mutated_mod['func_11390'] = func_11390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_11425 = relay.TupleGetItem(func_6496_call(), 1)
call_11426 = relay.TupleGetItem(func_6498_call(), 1)
output = call_11425
output2 = call_11426
func_11439 = relay.Function([], output)
mod['func_11439'] = func_11439
mod = relay.transform.InferType()(mod)
output = func_11439()
func_11440 = relay.Function([], output)
mutated_mod['func_11440'] = func_11440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7949_call = mutated_mod.get_global_var('func_7949')
call_11450 = func_7948_call()
call_11451 = func_7948_call()
output = call_11450
output2 = call_11451
func_11457 = relay.Function([], output)
mod['func_11457'] = func_11457
mod = relay.transform.InferType()(mod)
output = func_11457()
func_11458 = relay.Function([], output)
mutated_mod['func_11458'] = func_11458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11565 = relay.var("var_11565", dtype = "int64", shape = (2, 7, 7))#candidate|11565|(2, 7, 7)|var|int64
var_11566 = relay.var("var_11566", dtype = "int64", shape = (2, 7, 7))#candidate|11566|(2, 7, 7)|var|int64
bop_11567 = relay.less(var_11565.astype('bool'), relay.reshape(var_11566.astype('bool'), relay.shape_of(var_11565))) # shape=(2, 7, 7)
output = bop_11567
output2 = bop_11567
func_11574 = relay.Function([var_11565,var_11566,], output)
mod['func_11574'] = func_11574
mod = relay.transform.InferType()(mod)
var_11575 = relay.var("var_11575", dtype = "int64", shape = (2, 7, 7))#candidate|11575|(2, 7, 7)|var|int64
var_11576 = relay.var("var_11576", dtype = "int64", shape = (2, 7, 7))#candidate|11576|(2, 7, 7)|var|int64
output = func_11574(var_11575,var_11576,)
func_11577 = relay.Function([var_11575,var_11576,], output)
mutated_mod['func_11577'] = func_11577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10252_call = mod.get_global_var('func_10252')
func_10254_call = mutated_mod.get_global_var('func_10254')
call_11620 = relay.TupleGetItem(func_10252_call(), 1)
call_11621 = relay.TupleGetItem(func_10254_call(), 1)
output = call_11620
output2 = call_11621
func_11623 = relay.Function([], output)
mod['func_11623'] = func_11623
mod = relay.transform.InferType()(mod)
mutated_mod['func_11623'] = func_11623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11623_call = mutated_mod.get_global_var('func_11623')
call_11624 = func_11623_call()
output = call_11624
func_11625 = relay.Function([], output)
mutated_mod['func_11625'] = func_11625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10655_call = mod.get_global_var('func_10655')
func_10657_call = mutated_mod.get_global_var('func_10657')
call_11626 = relay.TupleGetItem(func_10655_call(), 1)
call_11627 = relay.TupleGetItem(func_10657_call(), 1)
func_8560_call = mod.get_global_var('func_8560')
func_8561_call = mutated_mod.get_global_var('func_8561')
call_11690 = func_8560_call()
call_11691 = func_8560_call()
func_7821_call = mod.get_global_var('func_7821')
func_7822_call = mutated_mod.get_global_var('func_7822')
call_11692 = relay.TupleGetItem(func_7821_call(), 0)
call_11693 = relay.TupleGetItem(func_7822_call(), 0)
func_7583_call = mod.get_global_var('func_7583')
func_7585_call = mutated_mod.get_global_var('func_7585')
const_11699 = relay.const(6, dtype = "int32")#candidate|11699|()|const|int32
call_11698 = relay.TupleGetItem(func_7583_call(relay.reshape(const_11699.astype('int32'), [])), 3)
call_11700 = relay.TupleGetItem(func_7585_call(relay.reshape(const_11699.astype('int32'), [])), 3)
uop_11730 = relay.acos(call_11690.astype('float32')) # shape=(8, 8, 2)
uop_11732 = relay.acos(call_11691.astype('float32')) # shape=(8, 8, 2)
output = relay.Tuple([call_11626,call_11692,call_11698,const_11699,uop_11730,])
output2 = relay.Tuple([call_11627,call_11693,call_11700,const_11699,uop_11732,])
func_11734 = relay.Function([], output)
mod['func_11734'] = func_11734
mod = relay.transform.InferType()(mod)
output = func_11734()
func_11735 = relay.Function([], output)
mutated_mod['func_11735'] = func_11735
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11786 = relay.const([[[-7.513199],[7.145369],[-5.303003],[-4.338302],[2.959014],[6.113104],[8.927639]],[[-8.611268],[9.701231],[1.777406],[7.562769],[-8.343707],[3.908660],[9.687177]]], dtype = "float32")#candidate|11786|(2, 7, 1)|const|float32
uop_11787 = relay.cos(const_11786.astype('float32')) # shape=(2, 7, 1)
bop_11793 = relay.equal(const_11786.astype('bool'), relay.reshape(uop_11787.astype('bool'), relay.shape_of(const_11786))) # shape=(2, 7, 1)
output = relay.Tuple([bop_11793,])
output2 = relay.Tuple([bop_11793,])
func_11796 = relay.Function([], output)
mod['func_11796'] = func_11796
mod = relay.transform.InferType()(mod)
mutated_mod['func_11796'] = func_11796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11796_call = mutated_mod.get_global_var('func_11796')
call_11797 = func_11796_call()
output = call_11797
func_11798 = relay.Function([], output)
mutated_mod['func_11798'] = func_11798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9434_call = mod.get_global_var('func_9434')
func_9436_call = mutated_mod.get_global_var('func_9436')
call_11828 = relay.TupleGetItem(func_9434_call(), 0)
call_11829 = relay.TupleGetItem(func_9436_call(), 0)
output = call_11828
output2 = call_11829
func_11830 = relay.Function([], output)
mod['func_11830'] = func_11830
mod = relay.transform.InferType()(mod)
output = func_11830()
func_11831 = relay.Function([], output)
mutated_mod['func_11831'] = func_11831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11843 = relay.var("var_11843", dtype = "float32", shape = (1, 6, 15))#candidate|11843|(1, 6, 15)|var|float32
uop_11844 = relay.acos(var_11843.astype('float32')) # shape=(1, 6, 15)
func_3334_call = mod.get_global_var('func_3334')
func_3337_call = mutated_mod.get_global_var('func_3337')
var_11869 = relay.var("var_11869", dtype = "uint8", shape = (1560,))#candidate|11869|(1560,)|var|uint8
call_11868 = relay.TupleGetItem(func_3334_call(relay.reshape(var_11869.astype('uint8'), [12, 10, 13]), relay.reshape(var_11869.astype('uint8'), [12, 10, 13]), ), 0)
call_11870 = relay.TupleGetItem(func_3337_call(relay.reshape(var_11869.astype('uint8'), [12, 10, 13]), relay.reshape(var_11869.astype('uint8'), [12, 10, 13]), ), 0)
output = relay.Tuple([uop_11844,call_11868,var_11869,])
output2 = relay.Tuple([uop_11844,call_11870,var_11869,])
func_11881 = relay.Function([var_11843,var_11869,], output)
mod['func_11881'] = func_11881
mod = relay.transform.InferType()(mod)
var_11882 = relay.var("var_11882", dtype = "float32", shape = (1, 6, 15))#candidate|11882|(1, 6, 15)|var|float32
var_11883 = relay.var("var_11883", dtype = "uint8", shape = (1560,))#candidate|11883|(1560,)|var|uint8
output = func_11881(var_11882,var_11883,)
func_11884 = relay.Function([var_11882,var_11883,], output)
mutated_mod['func_11884'] = func_11884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11389_call = mod.get_global_var('func_11389')
func_11390_call = mutated_mod.get_global_var('func_11390')
call_11895 = func_11389_call()
call_11896 = func_11389_call()
func_9997_call = mod.get_global_var('func_9997')
func_9999_call = mutated_mod.get_global_var('func_9999')
call_11909 = relay.TupleGetItem(func_9997_call(), 0)
call_11910 = relay.TupleGetItem(func_9999_call(), 0)
func_8733_call = mod.get_global_var('func_8733')
func_8737_call = mutated_mod.get_global_var('func_8737')
const_11926 = relay.const(8, dtype = "int32")#candidate|11926|()|const|int32
var_11927 = relay.var("var_11927", dtype = "int32", shape = (2, 80))#candidate|11927|(2, 80)|var|int32
call_11925 = relay.TupleGetItem(func_8733_call(relay.reshape(const_11926.astype('int32'), []), relay.reshape(var_11927.astype('int32'), [160,]), ), 3)
call_11928 = relay.TupleGetItem(func_8737_call(relay.reshape(const_11926.astype('int32'), []), relay.reshape(var_11927.astype('int32'), [160,]), ), 3)
func_7006_call = mod.get_global_var('func_7006')
func_7013_call = mutated_mod.get_global_var('func_7013')
var_11933 = relay.var("var_11933", dtype = "float32", shape = (1280,))#candidate|11933|(1280,)|var|float32
const_11934 = relay.const([-6.173620,8.731215,-4.751866,-9.285769,-7.501037,-1.038300,6.790577,-1.385797,-5.748912,-1.928364,-0.838793,5.940395,5.676672,0.630365,-2.159888,-1.081374,-0.141296,-3.297869,-4.379045,3.122601,-9.322630,1.541107,-7.990626,-3.685760,7.657873,0.191238,5.004314,-5.736803,0.136379,8.746194,-7.844014,-0.874738,-9.946078,-1.787176,1.897225,8.476007,1.187461,7.767808,-0.291642], dtype = "float64")#candidate|11934|(39,)|const|float64
const_11935 = relay.const([6.485133,0.399337,0.859406,3.731047,-3.572133,-0.234662,-8.623768,-7.603020,2.647951,0.418317,8.582827,-6.765155,-6.191000,-2.443972,-3.900114,-1.375845,-4.306606,8.800527,-9.335715,1.530998,-9.392057,0.908332,-7.857212,4.201999,-5.434619,-9.076080,-9.114024,-4.937438,-3.717521,-0.140232,-9.260453,-9.262703,-2.075491,4.048199,9.781208,-3.664825,-9.124476,-2.116929,6.915738,3.276109,-8.492913,6.126662,-6.048592,3.299876,-6.430137,2.048846,-1.860423,-0.200078,0.086364,3.359968,-1.251688,-4.455996,-1.117005,6.266737,5.501025,3.521121,-5.969005,-7.472624,-1.735745,9.028257,9.010743,-4.843873,4.419814,-5.007155,-0.902325,0.657582,3.652985,7.372594,-9.721220,0.721129,6.033901,-3.718612,6.349159,-8.433001,-8.880810,0.492111,-1.111839,-9.190095,-3.819108,-7.355140,-3.471928,7.219871,-4.523014,2.753708,6.980274,-6.076449,0.426884,-8.421716,2.002358,0.682882,5.577121,6.879790,-7.394480,6.818421,-4.904377,4.969202,0.257799,7.962519,5.721301,-3.767777,8.065120,-9.820465,5.696138,-5.776779,5.728880,5.873847,-6.172000,8.482448,-9.511749,6.443998,-9.644258,2.481001,2.118200,2.292682,-1.696213,0.646668,-2.709930,-6.200710,-0.871890,-2.928914,-9.055109,-3.892637,-0.807884,2.130404,-4.183594,-5.120310,1.344656,-3.392023,-9.199724,-4.828309,-5.565533,-1.426429,9.169862,-6.985974,9.271622,7.702697,-6.276079,-9.189214,1.776623,6.093088,-3.131102,1.286792,-3.110505,-9.443960,4.155731,0.404605,-5.493109,6.190676,-8.205867,-9.012659,-5.067823,-2.291394,4.761663,-2.094850,-0.909799,0.094365,1.064695,8.585213,-7.482711,-2.432655,-7.240918,2.474809,8.293226,-4.962493,0.867601,-1.301019,-3.190546,-9.490227,9.180236,8.221187,5.336951,4.951823,9.452283,-5.035314,-4.124500,6.176111,-9.497966,-2.688475,4.186365,8.424959,8.875293,4.673635,-6.765788,2.323855,-7.886126,-9.027925,7.581471,-0.326026,-6.297272,1.604188,5.587757,0.944435,5.433912,8.258388,-3.452046,8.988139,-4.521339,2.088773,0.833772,4.389787,7.009843,3.842377,5.332560,6.817802,-9.321875,-3.139981,-0.233467,4.740777,5.942939,-2.266694,8.179098,9.595341,-7.140509,7.702616,-9.844911,1.826931,-1.878217,-9.019606,-9.767456,2.213034,-2.259306,-2.092849,0.136020,2.022014,2.461739,-6.003093,1.330721,-4.528053,-8.178107,6.387336,-0.867309,3.710005,3.512442,-2.758138,6.136971,-2.837154,-7.185587,-8.702221,-9.501619,-3.748705,-7.428669,9.410839,7.732733,1.649254,5.887779,-8.591415,-1.779449,-6.298144,6.600642,7.356183,-1.474385,6.094916,1.041609,-5.934504,6.291285,6.423927,3.237395,2.934661,-8.773063,-0.818952,-2.710005,-2.762936,-3.378033,-6.285857,1.465663,6.678951,-8.061238,-8.027873,-8.143749,8.224409,-7.184938,1.923038,5.309333,-6.399562,-4.413654,7.981668,6.386041,6.292887,-5.524833,7.495054,3.565090,1.112075,7.483091,2.491747,-1.120707,4.198801,6.754924,-8.495653,-2.468612,6.611690,-2.934377,2.600194,-5.797660,2.702366,-2.464225,-2.936134,0.718853,9.504309,-1.111650,7.887905,-8.678043,1.229151,3.959414,-2.142191,-8.098241,-9.224312,4.094035,-7.745798,-1.297381,-1.732366,-1.118142,1.220439,0.615615,9.565186,8.231947,-9.732901,9.821629,-4.193113,-4.096796,-1.038252,-3.814665,8.245362,-0.724801,7.852030,0.858308,-0.180347,-2.538139,-8.688715,-8.388148,7.875460,-9.916437,8.002796,2.552865,-0.302635,6.319430,-6.286591,-3.597623,9.232183,3.727858,4.818544,-4.884082,9.992695,3.534181,-6.776831,8.685130,-0.951250,-5.439438,3.742639,8.710426,2.526915,4.354256,-6.169887,6.024273,-2.032341,-7.221565,9.394388,8.260703,5.908294,-9.212552,0.579056,-2.890049,4.158185,6.732992,-1.191309,2.326241,0.808944,-6.025663,-0.526390,1.849816,-3.678233,-9.615126,2.255473,-6.926027,8.139042,-7.871222,-1.198746,-1.430980,0.860085,5.822944,-0.713864,2.420654,9.768503,7.239340,1.582419,-4.307039,-1.290657,-2.518385,0.348077,-6.724440,5.952959,1.197569,6.041654,-7.540538,5.239855,9.749127,-1.611510,-8.993826,-2.676810,6.232706,-6.351331,2.728080,-8.623579,-3.096257,0.303972,-5.945491,-9.113641,-4.642071,1.699255,-0.130469,-0.111135,-7.884438,1.083954,-7.765156,-9.779426,5.412701,-7.935972,6.019569,-1.883128,-6.331665,8.697413,3.101860,-3.537830,4.895098,-8.274529,-5.036931,9.704840,1.159854,9.815419,-6.950373,0.417042,5.167635,6.741185,-8.014629,-9.526075,1.678542,-5.730080,3.270105,-6.094267,-8.943868,2.373607,-7.462040,-4.299511,6.649368,3.697784,1.000433,9.894167,-1.784823,-0.774797,5.441759,6.857019,-3.811021,5.452412,-8.731136,-9.240565,-9.068778,-2.312158,9.070104,-7.657176,-5.355139,-7.851144,-5.690608,-6.388800,-1.939352,1.413560,-9.935317,-3.776962,-6.753370,-2.983549,-0.063085,-8.838253,-2.117371,8.594372,2.637967,-5.288466,3.141585,7.679624,6.339512,7.578087,-5.727629,3.685145,8.956777,4.015987,4.811591,8.371750,0.902918,-6.256738,-0.534430,0.472776,4.511182,7.625973,-8.563622,-1.368820,4.332434,-2.627009,-1.138558,-3.065227,1.218033,-5.999039,0.654362,-0.835288,2.929658,5.204252,-1.577788,0.158562,-0.277713,3.839874,3.789613,-7.403036,3.816440,7.296701,-4.176531,2.568182,5.664606,-6.222795,8.532108,3.685492,0.925126,-8.038138,7.116710,1.941192,0.186829,6.746117,-7.881099,1.235740,-0.937601,-2.919716,-8.985561,-6.647111,1.801126,-2.192103,-7.376029,6.656693,-5.335757,5.303834,8.813072,-0.473029,4.771666,6.366073,2.286943,7.532853,9.681899,9.186531,-1.833305,-5.312042,-6.711857,-7.893493,-0.926798,7.504470,-0.502005,4.402155,2.168220,-4.293496,8.318355,8.460394,-7.517112,-1.317478,-0.612436,2.904553,9.011404,-4.860720,-0.819638,-6.238786,-0.929944,-3.338399,9.837348,-8.822477,6.922781,0.501485,-6.216432,5.776698,-7.682894,2.634125,9.127122,5.748330,-5.504608,5.033331,-8.326396,9.768492,3.348925,6.373057,0.742586,8.254819,-6.270835,6.516675,8.053525,4.604537,-6.318959,-9.735432,2.378580,2.628077,8.624671,8.370238,-9.817163,-8.284162,-7.172313,-9.055482,0.651516,-0.888725,8.900054,1.192861,-1.618547,-0.600628,7.489814,4.008454,-4.081052,-9.125506,4.585111,6.956566,-4.596811,5.203380,-6.744000,5.038932,6.420713,3.763950,6.028883,-6.491003,-4.320919,0.798630,9.058893,-9.463994,8.795494,-4.304170,-1.583628,-5.287561,2.855603,7.048692,-8.477893,-7.489430,-6.509861,-7.510013,-9.619229,-4.578804,7.498563,-8.006566,-7.960423,-1.519577,6.687109,-4.476664,-8.677611,-7.359912,-1.518161,0.881530,-8.838234,-8.462022,-9.654939,9.429906,9.523518,5.501349,0.350849,-2.609593,-6.353871,8.776723,9.038546,-0.773464,-2.089227,9.441586,-7.093814,6.584816,-6.952842,-5.091384,-8.068417,2.912384,1.104192,-7.529997,-3.966931,-9.757488,4.481978,-9.024281,7.800402,4.054041,-5.602633,-5.983324,5.004164,6.086125,9.046607,-1.457330,6.766818,-2.736637,-6.887322,0.169217,1.271619,-0.662397,7.929307,4.077291,2.929475,9.686062,3.116920,-0.713619,7.067065,5.526938,9.650003,5.984260,8.367759,5.482204,-7.161329,9.105054,-6.789466,9.246858,-5.840683,-8.040636,1.532638,5.313682,6.892973,7.237937,-3.602540,-6.420017,3.270698,-7.293977,6.604773,-1.223554,7.092398,8.409753,5.410663,8.377139,7.692122,6.445353,5.295074,4.277568,4.464853,-2.172942,2.959212,1.955053,-5.468071,-5.463323,-5.034890,6.872003,-7.672782,2.469740,7.324888,4.924007,4.899410,4.827783,-6.470357,4.354125,-8.326315,4.834835,-0.812129,-4.301441,-7.120348,-7.308341,7.444954,-3.042558,-9.658923,-6.731994,8.253853,-5.568605,-9.428848,9.006714,7.004516,-8.612476,-7.763050,5.134315,6.916072,5.049273,-9.010627,-6.771515,-7.128838,5.561417,-9.386597,-6.668402,-7.130458,-6.276474,4.220809,8.783141,2.139538,-3.298570,9.069995,-0.994115,5.317781,-3.498917,-2.683810,3.908710,-2.594180,0.084246,-9.563984,-6.154633,1.962344,-6.262652,-2.750973,0.314850,3.480967,-3.695306,9.676319,9.798873,-8.001104,1.447048,-7.904780,0.570841,5.715111,-7.721083,2.012430,-9.704213,5.877713,4.932187,-9.993118,2.986398,-9.473836,-8.886112,5.422420,-8.304607,-0.554567,-6.801500,-2.926563,0.811183,-0.536353,-9.578392,-4.758600,-3.342057,6.377543,6.651912,-2.530651,7.717794,-4.771498,5.414948,-5.080084,-9.895913,9.213353,4.856712,-5.099444,2.874616,-4.816673,-4.531618,1.688570,3.642959,-5.246262,-2.496161,5.441541,4.582955,-8.524786,2.840041,-7.263262,9.137163,-6.713274,-4.653474,9.231041,-9.929231,9.814071,-8.470480,7.728632,3.609997,-7.492228,0.611933,1.851126,-6.234507,0.106076,-5.649835,8.972800,2.139114,4.214542,-7.664509,7.444911,-9.865456,-2.860180,9.690587,-2.400152,6.971400,5.820181,0.413407,-0.895000,-8.001782,7.711454,4.403783,-8.095254,8.513674,-6.899400,-2.304363,-7.039506,-9.404668,4.665393,-1.490879,-1.586231,-7.627068,-7.533090,6.878309,9.981109,-1.710987,-2.593022,3.366898,-3.079907,-4.938150,4.408679,4.910968,-2.404415,-4.111555,2.550282,2.811508,-3.981618,6.889729,0.431145,1.220399,-1.775761,-0.514481,-0.768753,8.194217,-1.562868,4.019716,-5.595418,6.423337,8.670173,-2.185107,-2.626961,-8.630032,-8.324568,-8.146488,-8.788189,-4.409227,3.196170,-0.708082,4.653925,8.170252,0.026691,2.779487,2.835798,-6.762762,-1.466880,3.080847,7.705878,0.144054,-4.556391,2.687783,-5.664735,9.516940,-0.810356,6.227210,-3.164978,3.654633,0.768719,1.026043,5.260537,4.884385,2.771332,5.912516,7.706239,-7.620231,-1.695719,-2.898278,2.729943,-9.353142,4.561980,5.721104,-7.667385,-3.633219,6.277349,-3.541050,9.581956,-1.088406,9.374504,4.819578,8.467755,-9.469269,-7.546375,-6.302307,-5.177591,0.814724,-0.236257,4.218191,-4.644094,-4.511205,-4.149971,-0.262597,8.693905,-8.658530,-6.626337,5.668804,6.583087,7.056312,-0.389181,5.282569,2.225772,6.507145,-5.990196,-2.585762,-2.945166,-4.282719,-6.611311,-5.663930,-5.056609,-2.615689,9.822398,-1.582897,1.042399,-3.303437,8.657429,-7.258071,-5.447550,-9.400959,4.944380,4.505211,2.666809,-7.252041,5.176799,6.841164,0.759149,-3.837424,8.551716,1.435729,7.971103,4.295850,3.093900,6.718560,1.698553,-3.188628,-6.702941,-4.793829,-0.456511,8.103800,2.408155,5.919223,-2.046491,9.349721,-1.450021,-1.728416,-9.922626,-1.767412,-1.222212,-8.754037,1.724061,-3.852658,-8.202303,1.702417,1.353460,-9.564080,-4.814630,5.612948,-5.503321,-2.261370,4.540926,-0.180115,-5.165370,9.044569,-5.902172,-3.971965,3.609214,9.139024,8.967765,-0.947392,-9.484975,-9.077221,-7.498098,2.719796,-3.089543,0.050139,3.446894,-2.984190,-5.372374,-9.791382,4.484480,-3.824248,1.432318,-5.214662,-0.140664,8.691079,-0.875836,4.817492,8.559941,6.539653,5.870603,9.236224,-6.778402,-1.497586,9.490462,7.103865,-3.285414,1.455104,2.885962,-6.142298,-3.339847,-8.719587,1.174966,3.370216,3.870233,1.209358,3.093753,3.658375,-3.025449,-7.180908,-1.936807,-9.499895,3.038763,-4.512949,6.263599,7.166089,-9.627870,-3.383576,2.352636,-0.713003,-4.724061,2.303846,-0.490740,7.643053,7.450251,-6.622466,6.369305,-1.485812,3.775508,-6.021011,7.715166,-2.534750,7.607139,-0.189254,6.327133,6.910050,-2.697236,6.899027,5.501444,8.107384,2.228944,-7.552265,-5.998226,1.138445,8.587174,-6.226604,5.499916,-1.082524,-9.634403,-7.482813,7.074095,9.696383,-3.549780,-5.284519,-7.313747,-7.378182,-4.948317,-5.311455,5.568806,-3.566233,1.388840,-4.618396,4.906592,-4.180625,9.869564,3.410661,-3.806132,-4.350381,-8.553326,6.961274,-5.426073,-9.151587,-6.207191,7.865718,-8.633019,0.160531,-3.918296,8.978329,-2.790147,4.469332,-8.336646,8.800064,-2.258993,5.617559,-8.714128,4.067406,8.944453,8.514358,-7.007377,9.999136,-5.982887,2.787068,-0.476915,7.557102,-2.434184,-3.040613,1.894563,2.606304,3.248983,-0.873416,5.607562,-6.316289,8.907972,8.526436,-5.959670,8.072372,3.873326,-2.199728,9.113983,-8.907527,-1.123362,-0.088676,-3.887036,9.909417,-7.130320,-9.383474,5.458623,-3.443573,-3.240884,2.098480,2.463414,-8.800361,4.920730,-2.496792,-9.357109,-1.891964,-4.939727,-7.617766,-3.804629,-0.730703,-5.952294,3.362334,-2.484399,-1.610022,0.036349,3.528971,-7.525102,2.612760,-2.046005,-3.268624,-2.151865,-8.625093,3.648443,-2.107682,-8.452312,5.038582,1.108767,3.332668,-1.296919,-6.284716,5.398561,-3.949869,7.519963,6.230563,-6.078690,-8.400814,-9.064141,5.291432,-6.314404,9.507569,-0.749298,0.605001,2.876276,5.594727,-8.727383,8.421404,-4.798024,-6.294012,8.302117,0.590967,0.189469,2.846083,-0.984155,-0.760509,-2.039348,-6.846783,-3.363187,-5.957036,-6.406805,4.822567,8.413305,-8.195767,4.215924,-5.889638,-0.486507,-6.210014,9.480612,2.468107,-6.833268,-9.322628,5.923925,7.097810,-1.443375,-3.195638,-8.177878,-1.496986,-4.362272,2.466563,2.964781,2.901416,7.610985,9.144928,0.555346,8.639148,-6.366222,-2.326361,-1.861832,9.720084,1.568647,4.098893,-8.709641,7.671760,-7.995476,-5.224597,-7.492416,3.886673,3.786383,5.113815,0.513372,-1.769604,-8.630152,1.188252,-0.169500,-2.555326,-7.822898,9.236978,0.512541,-9.192357,1.142361,8.154110,-5.016640,-3.823581,3.808543,-3.487975,-9.193768,2.933029,1.758320,2.697326,6.711081,1.773738,5.466495,-3.304210,5.364128,-4.474303,8.313016,6.852047,-9.652509,2.573386,7.882669,-0.026385,-5.349436,-7.772562,-8.660684,-6.748205,6.643539,-7.310864,-7.406099,9.589275,1.918400,6.625938,8.740416,-0.851321,-6.889111,-0.012958,0.396394,9.839759,-7.916013,5.761981,1.765627,-5.050264,9.232943,7.363835,-7.329375,4.415238,-3.123464,-6.053498,9.797375,6.097027,1.716952,5.806534,-8.333616,-6.301391,1.383210,0.007419], dtype = "float32")#candidate|11935|(1350,)|const|float32
const_11936 = relay.const([-5.469779,7.029592,-2.582911,-7.598959,8.682185,-3.844362,6.393684,-4.230239,3.534921,3.918939,-5.320645,-8.951146,9.555441,-5.800766,-1.561102,4.594068,-4.637853,6.576380,-5.821139,1.557524,-1.497271,-4.978419,5.730625,-1.486224,8.274139,-2.629297,-1.241902,1.641980,-9.006299,-9.035456,1.854327,-6.286584,-6.000803,-8.179632,5.565459,-1.487521,-5.018404,-0.608138,2.970137,-4.094637,-6.456047,-8.911679,-0.819932,0.422358,2.007787,3.478037,7.222481,-1.163491,9.733946,-6.642087,-3.005347,-4.688574,-3.624717,-3.561278,-6.691427,-2.278758,0.047164,5.943417,-3.959943,6.874348,-4.587002,-9.128565,-1.461301,-3.386414,-6.292297,-8.517891,9.818738,9.960495,4.026501,-3.345834,-7.173748,9.141152,1.578167,3.636308,1.116747,-6.782976,4.678511,7.500219,1.953726,7.967258,7.963251,6.560207,2.561675,-5.179135,-0.066610,-0.758285,3.446470,3.152684,-6.138529,-9.576779,9.035413,7.041176,7.429396,-9.972712,-5.089057,-1.378741,4.403703,4.762776,-9.174181,-7.399735,-9.326226,-8.901980,-3.362523,-0.331379,-8.251001,-5.425688,2.471642,9.039595,-0.685489,-1.126018,1.872659,-1.856284,-2.904393,1.726277,0.487781,7.714992,-1.584120,6.216280,4.391429,9.091443,-4.335858,8.452967,-2.866661,1.594921,-5.916402,7.454254,-3.490202,9.300357,1.952578,-2.300157,-4.222380,-8.971692,3.797824,6.543429,-6.031398,-9.128358,-8.365912,-5.230122,-9.105004,2.848220,9.070637,1.074014,5.481312,-4.058155,8.733433,8.259215,4.358483,5.154126,-8.195102,4.661607,0.442820,4.249709,-9.406387,-8.764055,1.131536,2.922666,2.394115,1.859166,1.821173,7.854907,-2.205035,-5.157233,8.780497,-3.207663,-4.418491,-0.768956,0.799659,1.847411,1.286782,1.307776,-3.435970,-7.164174,3.106099,-7.629585,6.633441,7.340567,-1.375277,6.874760,9.987281,4.497067,-6.801272,-5.178725,-9.110578,8.610239,5.325732,-7.864296,4.200157,8.601342,-7.077490,-1.029173,-9.202928,7.795064,8.769302,-8.750093,-6.207369,4.723887,8.681682,1.572511,7.823112,9.033117,6.620638,-4.626882,-0.816239,9.195585,5.763750,6.164354,4.422597,6.225070,9.005573,-3.849171,5.628345,-6.927336,1.475408,-6.502563,-0.849079,8.055494,-5.682455,9.467553,-6.491617,1.412408,-2.827680,7.773261,-0.651615,-2.336993,-5.440440,6.594399,-5.708499,-4.939874,7.405225,2.932747,-2.072247,7.128959,-6.163010,-7.150164,7.898004,4.435870,-0.188740,-7.646252,7.615826,-0.014248,0.764009,5.702333,-9.915182,8.410538,7.448906,1.108137,2.462073,-4.811044,7.839864,-9.856692,-7.173210,-6.771516,-5.613211,1.179664,-6.788505,1.305902,-0.652987,7.950540,-7.437054,-2.418861,9.936751,-7.659659,1.629783,6.813377,3.526452,1.036308,5.250671,-0.927078,-7.973113,7.579696,4.621458,-4.945957,7.826767,-3.912261,-9.961601,1.400868,0.848078,6.387074,-9.860410,6.749195,-2.418859,-8.991382,9.515212,-6.012571,-0.068942,-3.771329,-0.913216,0.566273,-8.605719,-4.127349,8.342920,9.441826,7.612712,6.595013,6.945753,3.195335,8.263962,3.266973,-5.521561,2.653745,1.796843,-5.993143,-7.086817,0.199903,-9.550167,-3.380888,-6.220667,-7.893303,-0.166884,3.759815,-9.290630,7.034538,-3.559427,-6.460225,-2.345389,-8.146990,2.940290,-2.426283,-2.277202,6.784110,2.755727,-3.760876,7.657468,5.547157,-7.961313,0.645571,0.012256,8.658656,6.674417,-8.178509,9.868534,7.097519,9.724514,-9.936570,0.905474,-6.724065,1.135572,-4.172012,4.404101,-5.247154,7.831647,6.880222,8.999186,-5.355676,-2.958768,-6.005860,0.463913,4.132521,8.583727,7.706606,1.175563,9.682878,-1.849718,4.689308,9.221508,-5.772945,5.482030,0.481966,-0.546498,9.442247,-4.517526,-4.232886,1.919737,1.751996,8.855210,7.982410,-9.093013,-6.804890,9.608662,1.560421,8.684164,8.774105,3.798344,2.313430,-4.731337,-0.688906,0.861241,3.955893,-1.704972,6.116991,7.571336,-1.896378,-7.060485,-6.484623,-2.493882,-5.657640,0.583786,-9.784976,2.290840,-1.457762,-5.412969,-4.411465,2.926260,-4.142593,-3.550200,-4.327541,7.155873,-9.250840,3.295680,7.473020,-5.585283,6.577536,5.781355,-5.020177,-0.843853,-1.422824,6.843099,-7.698443,-0.041616,3.558664,-8.629158,-6.417127,-6.992684,6.457501,-2.213617,-4.902980,5.849260,-4.664251,6.994360,6.785135,-1.165378,7.778311,-5.516309,-1.998390,-4.935340,-0.412934,3.427501,-5.972986,6.660498,0.571295,-1.581890,-5.846335,-6.764985,-8.563027,8.912559,2.205009,-2.861479,3.161460,-3.441707,4.712219,0.208262,5.869168,1.730754,5.570889,-4.302554,-5.715165,-6.159163,-0.956689,3.440830,-8.289269,-9.936817,-3.256478,-7.930884,4.447368,-1.172237,-6.274888,-8.487910,-9.746930,4.348925,-2.316384,8.163458,9.749328,0.567475,-8.717848,-9.209963,6.277710,-4.221508,8.993740,-7.196874,8.461576,-9.201533,-8.836346,2.670316,-0.584173,-6.972614,-2.188702,1.755120,7.600447,6.105803,9.096549,6.876591,-9.684365,2.291568,-0.730098,8.428261,-1.573788,4.601039,-1.741216,2.905108,-2.714962,-8.425806,0.504382,-1.262770,-6.367581,-9.988023,0.108689,8.187783,7.602927,-7.246545,-4.130148,2.017779,1.103881,6.174006,-0.890445,-6.841535,9.988811,1.067145,-4.914547,7.009237,-2.735838,-4.456925,9.466407,6.736905,-4.052641,4.063190,9.219420,9.225980,1.710352,2.481069,-3.453033,-6.314371,-4.612528,-6.655920,2.581402,4.877383,-2.860588,-4.996409,9.863586,-3.553885,0.854760,-5.762199,7.177493,0.940960,4.582153,-1.795180,-6.206326,6.039916,-4.440468,2.720939,6.076406,3.234528,-9.846321,-6.525936,-3.946366,-2.682918,-2.619491,-0.050920,-9.208029,-0.549019,-9.622070,3.243709,-9.508477,6.595080,8.571172,-4.113733,-8.207478,-9.423396,8.489214,-3.583756,6.829807,1.974360,-2.808766,3.859969,7.293605,-9.893578,-7.581020,-2.564438,-6.754580,-6.267615,-4.283347,-8.289462,-5.851374,-6.877624,7.377417,0.356390,8.012022,-5.174380,7.904583,-5.744776,-4.529840,-6.005084,1.729301,8.974036,2.704338,0.057744,-6.134481,-1.122736,-6.857349,8.651792,1.868658,-0.294446,5.828070,-0.403124,5.833352,-3.129232,1.302649,-7.595888,4.804359,-9.019153,2.559138,7.486504,-9.004132,9.932465,-7.469851,-2.485749,1.641042,-1.555713,-8.617875,3.079042,2.111763,3.663411,7.589308,3.108210,5.263393,2.685652,4.371745,-9.574326,-6.096034,-3.667459,-2.862312,-6.944924,-0.035603,3.227376,-2.151951,-3.649548,-2.157791,-0.218565,9.195514,-9.898466,-9.543670,-7.432754,-5.360307,5.855791,-8.876959,6.068152,-0.577457,-9.943336,-8.709499,6.987106,6.690857,2.063475,1.147843,1.823812,4.444370,7.104970,6.127673,-8.015074,0.684339,-4.164155,7.872252,-6.004311,5.656949,-0.139809,-9.092407,-7.742268,3.721375,5.380054,-5.010265,-9.942358,4.597900,1.618797,2.994511,-3.010961,9.165961,-5.054653,3.027893,-3.683097,7.900933,-1.274286,6.761138,7.646861,-8.320008,4.461371,9.124147,1.007726,-8.602511,9.005802,-4.271232,-5.534217,-1.459343,-6.981044,6.404453,3.046818,-7.658286,8.454494,-2.604314,-8.429157,8.117522,0.477700,4.005899,7.583902,7.757818,9.705900,6.363221,2.243493,-1.915602,0.579338,4.099747,5.855367,-5.230878,3.791839,2.305085,-1.652883,2.618671,-6.493521,-8.015145,-9.720535,-7.239465,9.115675,9.073810,-7.303721,-0.669076,-3.625684,-6.226440,8.664408,-7.551260,7.904661,4.803482,-4.702496,-7.057954,9.918839,6.725280,-5.304512,-2.578509,5.998809,1.976231,3.340600,9.851851,6.065192,6.392084,-9.768668,1.774437,-5.404704,2.038465,1.217516,2.435619,-7.628898,6.183467,-4.779166,-6.818853,9.700636,9.361654,-6.073551,-9.797250,-0.320066,-2.438962,3.131387,1.644103,-7.421364,5.198135,-2.362413,6.648960,5.446571,7.700067,-4.781743,5.219498,5.349641,-6.637864,6.810826,6.955155,9.080702,-4.263978,5.177256,-6.654416,2.577141,-8.959043,-1.109708,-3.081020,-6.045531,9.332477,-3.526150,-4.171878,-1.331407,8.187891,-4.198844,6.230465,-2.335467,-9.400277,0.053070,-9.432797,-2.210904,-7.865906,-2.512573,-4.685527,2.810532,1.131630,-4.322664,9.463751,-6.581164,-5.753522,-9.595862,-5.854237,-2.677964,-4.243081,7.529212,-4.621601,7.362726,-4.791105,6.324915,-8.431533,8.576365,-5.095150,-8.837228,-1.568002,-7.137257,1.951799,-2.916574,-7.145554,-4.406630,7.306425,6.118599,-8.881784,-5.115475,-3.071581,3.904919,-8.773843,-5.639670,7.624934,7.490295,3.758154,-7.832018,-6.362822,9.623768,4.523108,3.974514,5.822813,-9.579003,-9.244466,3.586241,0.446301,7.007114,0.541773,-2.404366,-0.234066,-0.726306,-3.855843,-2.174723,2.981458,4.911430,-7.123556,8.134019,2.032983,9.331508,5.708248,-7.806650,9.573630,-7.200376,8.339321,7.203551,-0.414272,6.618625,2.260967,7.768065,2.970074,4.622147,-9.865570,-5.359036,6.306919,3.929264,-6.449671,1.289847,1.486972,-1.111104,-7.309249,0.823981,3.846356,0.080734,-8.169077,3.279941,0.434936,1.044925,-1.349299,6.590014,1.415815,-5.050115,-3.021785,-9.880555,0.593182,-2.095061,-7.186177,6.812318,5.312518,-6.729455,0.152666,9.767751,2.456889,-3.752701,-3.037215,2.057819,-7.842655,5.189069,0.990978,6.344301,-7.929038,-2.780952,0.286121,-5.904510,1.279318,-6.334230,3.842999,4.483500,9.561052,-0.614493,-3.232699,1.785877,6.467942,5.275144,-9.542609,0.818335,5.863226,-8.258240,7.358247,8.454280,0.405658,-0.887065,1.652932,8.837986,5.449652,7.606347,6.869324,2.341226,3.537128,1.796191,0.236429,2.106571,7.070368,2.284958,-5.623124,3.458657,-2.179380,-8.849258,7.191745,-0.447551,0.505044,-8.242200,6.381275,8.474544,0.642530,-0.114913,-6.888050,1.747431,7.889571,-9.985963,7.327556,-7.776051,6.796860,6.166697,-6.763114,-4.322691,3.966247,2.638195,-3.499313,-0.500936,4.880310,-9.679436,-7.883921,9.916509,-4.094951,8.847528,9.272992,9.629659,0.231339,-8.489624,7.967946,7.453707,5.751222,9.979076,-5.945265,4.702851,-2.894255,3.116441,0.356462,2.807763,-2.415251,9.366969,-5.555711,7.184089,-8.477591,1.222575,-2.258770,-0.889172,2.874814,9.956841,3.914365,-3.246547,-1.546832,-4.723957,-1.849953,9.396888,5.166872,5.167561,7.973774,3.584596,-8.816463,5.489891,3.859575,-1.558148,3.883756,-3.910724,6.831129,1.672062,-4.138492,6.951296,9.629929,-9.336796,-9.838604,-0.646101,-9.923314,4.630547,-7.695035,2.705806,-0.361300,2.503566,6.993773,6.824666,-5.424028,-2.559959,-0.815836,2.608529,-5.534664,-8.734081,7.410955,-0.735444,-6.949044,-1.907330,8.506549,2.257859,-0.186367,6.275363,-9.423494,-4.142125,8.957472,-6.605527,-3.585124,2.495442,8.153191,4.499107,-9.227336,-4.753685,3.086289,-0.311799,-2.794354,4.354549,-5.733086,-9.734461,0.632666,5.316428,5.006961,-0.459673,6.028187,-9.143583,-1.988000,-3.852921,5.226806,9.349708,6.691099], dtype = "float32")#candidate|11936|(1056,)|const|float32
const_11937 = relay.const([True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True], dtype = "bool")#candidate|11937|(768,)|const|bool
call_11932 = relay.TupleGetItem(func_7006_call(relay.reshape(var_11933.astype('float32'), [1280,]), relay.reshape(const_11934.astype('float64'), [39,]), relay.reshape(const_11935.astype('float32'), [1350,]), relay.reshape(const_11936.astype('float32'), [1056,]), relay.reshape(const_11937.astype('bool'), [768,]), ), 8)
call_11938 = relay.TupleGetItem(func_7013_call(relay.reshape(var_11933.astype('float32'), [1280,]), relay.reshape(const_11934.astype('float64'), [39,]), relay.reshape(const_11935.astype('float32'), [1350,]), relay.reshape(const_11936.astype('float32'), [1056,]), relay.reshape(const_11937.astype('bool'), [768,]), ), 8)
bop_11942 = relay.divide(call_11909.astype('float32'), const_11926.astype('float32')) # shape=(2, 2, 13)
bop_11945 = relay.divide(call_11910.astype('float32'), const_11926.astype('float32')) # shape=(2, 2, 13)
output = relay.Tuple([call_11895,call_11925,var_11927,call_11932,var_11933,const_11934,const_11935,const_11936,const_11937,bop_11942,])
output2 = relay.Tuple([call_11896,call_11928,var_11927,call_11938,var_11933,const_11934,const_11935,const_11936,const_11937,bop_11945,])
func_11966 = relay.Function([var_11927,var_11933,], output)
mod['func_11966'] = func_11966
mod = relay.transform.InferType()(mod)
var_11967 = relay.var("var_11967", dtype = "int32", shape = (2, 80))#candidate|11967|(2, 80)|var|int32
var_11968 = relay.var("var_11968", dtype = "float32", shape = (1280,))#candidate|11968|(1280,)|var|float32
output = func_11966(var_11967,var_11968,)
func_11969 = relay.Function([var_11967,var_11968,], output)
mutated_mod['func_11969'] = func_11969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7949_call = mutated_mod.get_global_var('func_7949')
call_11994 = func_7948_call()
call_11995 = func_7948_call()
var_12010 = relay.var("var_12010", dtype = "float32", shape = (14, 6, 9))#candidate|12010|(14, 6, 9)|var|float32
bop_12011 = relay.less_equal(call_11994.astype('bool'), relay.reshape(var_12010.astype('bool'), relay.shape_of(call_11994))) # shape=(14, 6, 9)
bop_12014 = relay.less_equal(call_11995.astype('bool'), relay.reshape(var_12010.astype('bool'), relay.shape_of(call_11995))) # shape=(14, 6, 9)
func_8560_call = mod.get_global_var('func_8560')
func_8561_call = mutated_mod.get_global_var('func_8561')
call_12023 = func_8560_call()
call_12024 = func_8560_call()
output = relay.Tuple([bop_12011,call_12023,])
output2 = relay.Tuple([bop_12014,call_12024,])
func_12028 = relay.Function([var_12010,], output)
mod['func_12028'] = func_12028
mod = relay.transform.InferType()(mod)
mutated_mod['func_12028'] = func_12028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12029 = relay.var("var_12029", dtype = "float32", shape = (14, 6, 9))#candidate|12029|(14, 6, 9)|var|float32
func_12028_call = mutated_mod.get_global_var('func_12028')
call_12030 = func_12028_call(var_12029)
output = call_12030
func_12031 = relay.Function([var_12029], output)
mutated_mod['func_12031'] = func_12031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10252_call = mod.get_global_var('func_10252')
func_10254_call = mutated_mod.get_global_var('func_10254')
call_12033 = relay.TupleGetItem(func_10252_call(), 1)
call_12034 = relay.TupleGetItem(func_10254_call(), 1)
output = call_12033
output2 = call_12034
func_12065 = relay.Function([], output)
mod['func_12065'] = func_12065
mod = relay.transform.InferType()(mod)
mutated_mod['func_12065'] = func_12065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12065_call = mutated_mod.get_global_var('func_12065')
call_12066 = func_12065_call()
output = call_12066
func_12067 = relay.Function([], output)
mutated_mod['func_12067'] = func_12067
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12208 = relay.const(9.000465, dtype = "float32")#candidate|12208|()|const|float32
var_12209 = relay.var("var_12209", dtype = "float32", shape = (14, 7, 13))#candidate|12209|(14, 7, 13)|var|float32
bop_12210 = relay.floor_mod(const_12208.astype('float32'), var_12209.astype('float32')) # shape=(14, 7, 13)
output = bop_12210
output2 = bop_12210
func_12218 = relay.Function([var_12209,], output)
mod['func_12218'] = func_12218
mod = relay.transform.InferType()(mod)
var_12219 = relay.var("var_12219", dtype = "float32", shape = (14, 7, 13))#candidate|12219|(14, 7, 13)|var|float32
output = func_12218(var_12219)
func_12220 = relay.Function([var_12219], output)
mutated_mod['func_12220'] = func_12220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8872_call = mod.get_global_var('func_8872')
func_8874_call = mutated_mod.get_global_var('func_8874')
call_12226 = func_8872_call()
call_12227 = func_8872_call()
output = relay.Tuple([call_12226,])
output2 = relay.Tuple([call_12227,])
func_12246 = relay.Function([], output)
mod['func_12246'] = func_12246
mod = relay.transform.InferType()(mod)
mutated_mod['func_12246'] = func_12246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12246_call = mutated_mod.get_global_var('func_12246')
call_12247 = func_12246_call()
output = call_12247
func_12248 = relay.Function([], output)
mutated_mod['func_12248'] = func_12248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12351 = relay.var("var_12351", dtype = "float32", shape = (1, 12, 7))#candidate|12351|(1, 12, 7)|var|float32
uop_12352 = relay.cos(var_12351.astype('float32')) # shape=(1, 12, 7)
bop_12355 = relay.divide(uop_12352.astype('float64'), relay.reshape(var_12351.astype('float64'), relay.shape_of(uop_12352))) # shape=(1, 12, 7)
output = relay.Tuple([bop_12355,])
output2 = relay.Tuple([bop_12355,])
func_12364 = relay.Function([var_12351,], output)
mod['func_12364'] = func_12364
mod = relay.transform.InferType()(mod)
mutated_mod['func_12364'] = func_12364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12365 = relay.var("var_12365", dtype = "float32", shape = (1, 12, 7))#candidate|12365|(1, 12, 7)|var|float32
func_12364_call = mutated_mod.get_global_var('func_12364')
call_12366 = func_12364_call(var_12365)
output = call_12366
func_12367 = relay.Function([var_12365], output)
mutated_mod['func_12367'] = func_12367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11244_call = mod.get_global_var('func_11244')
func_11246_call = mutated_mod.get_global_var('func_11246')
call_12394 = relay.TupleGetItem(func_11244_call(), 2)
call_12395 = relay.TupleGetItem(func_11246_call(), 2)
output = relay.Tuple([call_12394,])
output2 = relay.Tuple([call_12395,])
func_12405 = relay.Function([], output)
mod['func_12405'] = func_12405
mod = relay.transform.InferType()(mod)
output = func_12405()
func_12406 = relay.Function([], output)
mutated_mod['func_12406'] = func_12406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11439_call = mod.get_global_var('func_11439')
func_11440_call = mutated_mod.get_global_var('func_11440')
call_12424 = func_11439_call()
call_12425 = func_11439_call()
func_11244_call = mod.get_global_var('func_11244')
func_11246_call = mutated_mod.get_global_var('func_11246')
call_12438 = relay.TupleGetItem(func_11244_call(), 2)
call_12439 = relay.TupleGetItem(func_11246_call(), 2)
func_11881_call = mod.get_global_var('func_11881')
func_11884_call = mutated_mod.get_global_var('func_11884')
const_12461 = relay.const([2.788006,2.250682,-8.884512,5.340600,-9.964667,-4.588443,2.805092,9.591012,6.014386,5.121942,3.980320,6.386675,0.636500,-6.667042,-7.644537,-4.321273,-1.224327,-6.423226,3.526649,-0.882980,-7.724038,4.896432,0.355814,-7.865721,2.560414,8.747193,0.552374,3.673535,-3.862354,4.967828,4.331489,-9.797876,7.462167,8.838243,-6.588459,-7.803202,-7.509340,-0.674979,1.356652,-5.927856,9.137391,0.163327,8.238584,9.279522,-2.091812,-8.658364,-4.993746,4.501470,6.277305,-9.469727,-0.130787,-1.486809,4.444799,-0.608467,-2.465087,9.064172,-9.561041,-6.270260,-2.800926,-5.751340,-2.650091,-7.371487,9.963419,-0.280016,-7.268194,1.465665,-9.257099,-9.987255,-8.856810,-7.972160,0.289210,-9.241590,-5.692244,0.139013,-7.257560,4.936833,9.109590,5.767586,2.765866,1.579808,0.553856,-1.827649,1.012489,8.341451,-9.190917,-2.990738,8.805551,6.266467,9.355734,-2.130430], dtype = "float32")#candidate|12461|(90,)|const|float32
var_12462 = relay.var("var_12462", dtype = "uint8", shape = (6, 260))#candidate|12462|(6, 260)|var|uint8
call_12460 = relay.TupleGetItem(func_11881_call(relay.reshape(const_12461.astype('float32'), [1, 6, 15]), relay.reshape(var_12462.astype('uint8'), [1560,]), ), 1)
call_12463 = relay.TupleGetItem(func_11884_call(relay.reshape(const_12461.astype('float32'), [1, 6, 15]), relay.reshape(var_12462.astype('uint8'), [1560,]), ), 1)
output = relay.Tuple([call_12424,call_12438,call_12460,const_12461,var_12462,])
output2 = relay.Tuple([call_12425,call_12439,call_12463,const_12461,var_12462,])
func_12472 = relay.Function([var_12462,], output)
mod['func_12472'] = func_12472
mod = relay.transform.InferType()(mod)
mutated_mod['func_12472'] = func_12472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12473 = relay.var("var_12473", dtype = "uint8", shape = (6, 260))#candidate|12473|(6, 260)|var|uint8
func_12472_call = mutated_mod.get_global_var('func_12472')
call_12474 = func_12472_call(var_12473)
output = call_12474
func_12475 = relay.Function([var_12473], output)
mutated_mod['func_12475'] = func_12475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_12525 = relay.TupleGetItem(func_6707_call(), 0)
call_12526 = relay.TupleGetItem(func_6709_call(), 0)
func_9748_call = mod.get_global_var('func_9748')
func_9749_call = mutated_mod.get_global_var('func_9749')
call_12534 = func_9748_call()
call_12535 = func_9748_call()
output = relay.Tuple([call_12525,call_12534,])
output2 = relay.Tuple([call_12526,call_12535,])
func_12549 = relay.Function([], output)
mod['func_12549'] = func_12549
mod = relay.transform.InferType()(mod)
mutated_mod['func_12549'] = func_12549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12549_call = mutated_mod.get_global_var('func_12549')
call_12550 = func_12549_call()
output = call_12550
func_12551 = relay.Function([], output)
mutated_mod['func_12551'] = func_12551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10655_call = mod.get_global_var('func_10655')
func_10657_call = mutated_mod.get_global_var('func_10657')
call_12571 = relay.TupleGetItem(func_10655_call(), 0)
call_12572 = relay.TupleGetItem(func_10657_call(), 0)
output = relay.Tuple([call_12571,])
output2 = relay.Tuple([call_12572,])
func_12579 = relay.Function([], output)
mod['func_12579'] = func_12579
mod = relay.transform.InferType()(mod)
output = func_12579()
func_12580 = relay.Function([], output)
mutated_mod['func_12580'] = func_12580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9997_call = mod.get_global_var('func_9997')
func_9999_call = mutated_mod.get_global_var('func_9999')
call_12595 = relay.TupleGetItem(func_9997_call(), 0)
call_12596 = relay.TupleGetItem(func_9999_call(), 0)
func_2519_call = mod.get_global_var('func_2519')
func_2524_call = mutated_mod.get_global_var('func_2524')
const_12600 = relay.const(False, dtype = "bool")#candidate|12600|()|const|bool
const_12601 = relay.const([True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True], dtype = "bool")#candidate|12601|(768,)|const|bool
var_12602 = relay.var("var_12602", dtype = "float32", shape = (1056,))#candidate|12602|(1056,)|var|float32
const_12603 = relay.const([[-5.648241,-1.415747,4.342978,-7.629170],[-7.688661,-4.015862,0.537722,4.107071],[1.251728,8.836953,-3.644050,-0.195130],[-2.114360,3.443856,-4.279870,-1.705947],[-9.966725,9.880324,-4.606922,1.147250],[0.907076,2.219809,-0.425606,-6.392346],[-3.515494,6.007156,7.924897,4.642419],[1.696550,6.862182,9.118369,-1.037817],[-3.363203,4.389217,1.229905,-1.029146],[6.992476,-5.685674,-8.113333,2.602088],[-5.774000,9.530836,-1.277876,3.235159],[4.631541,8.538101,-9.956807,-7.854644],[2.121536,-2.222311,-8.847669,7.002781],[-0.845527,0.614881,1.392494,7.977428],[-3.409685,7.336477,0.471290,-9.464004],[5.839801,3.012568,-7.416573,5.762400],[-4.955918,-6.538002,-8.924306,-8.293797],[1.458337,7.675675,-4.319498,-2.181961],[5.966316,0.009217,-5.221286,3.398580],[2.046396,-2.057830,-8.306826,3.486026],[4.237666,5.968489,1.472580,-7.438756],[1.258562,8.465618,-3.124406,-0.583919],[-7.814562,-1.453498,-6.981605,-6.067325],[5.676505,4.732386,-6.394951,-1.754447],[-5.455941,5.655004,3.302374,7.617738],[6.524618,-8.122019,-2.756950,5.426878],[-0.979398,-9.428727,8.594001,-6.370336],[3.895849,-0.001853,-4.000553,4.695014],[-3.608923,-4.340711,-7.601514,0.866377],[9.552825,6.638053,-4.214518,-8.316196],[-9.188238,5.217579,9.518138,-0.468997],[3.579457,6.853158,7.531178,0.117832],[6.013651,7.188923,4.599299,-1.332163],[-4.086356,-3.055103,-8.643326,8.398192],[9.674356,2.753316,-4.334272,6.061122],[-7.483880,5.312381,6.998181,-3.850302],[6.333695,-6.432257,-9.754336,3.775915],[-3.164345,4.775025,-4.343410,-5.637373],[-7.522980,-1.560376,3.386060,-9.731656],[-0.503314,-5.155346,-4.733096,3.844066],[-9.391093,-4.259462,-7.744354,-9.263657],[-2.557982,9.040341,-3.800998,-1.298235],[8.509747,-4.607769,5.306474,2.183530],[-6.163017,1.253242,-5.573468,-8.616712],[3.577999,9.042909,-4.536948,-8.565857],[9.823177,4.915415,4.818333,-7.561300],[6.962251,-8.501233,-8.155144,-8.785285],[8.112483,3.679931,-6.249507,-5.827290],[3.172721,0.999210,7.530129,-9.620666],[-5.334908,8.641541,7.609219,-6.114988],[-9.756347,7.342711,-7.471888,0.633880],[-7.412879,3.977964,2.995639,-4.368865],[3.574327,-2.821066,9.388829,-3.362151],[8.133236,-5.399488,8.733702,1.513748],[4.811241,-6.342412,-2.429283,7.935072],[7.832096,-1.364559,-3.316892,4.898287],[-3.183856,7.390990,-2.588238,0.657499],[7.292606,-2.335304,7.625260,-5.776199],[7.577147,-0.921395,-3.851199,-0.679423],[8.589912,-9.178734,7.238892,6.229770],[-9.386963,0.323352,-5.492636,-6.598462],[-7.031380,7.251323,-8.436489,-6.685351],[-7.749986,1.136802,-5.067368,-3.567379],[-7.390717,-6.214686,-2.444772,-3.237867],[-2.863131,5.475806,-6.366014,-1.734794],[1.411763,-3.464938,7.871991,2.958784],[-0.667065,-8.136581,-6.481655,-9.786826],[-3.806432,-7.514868,-2.264415,8.072028],[-8.510843,-0.618957,-8.632555,-4.832622],[-7.048347,2.327841,7.923343,9.445423],[6.844252,9.053812,7.017451,6.540550],[-9.260158,-9.700276,-8.293712,5.425490],[2.182041,9.576184,-7.825892,0.300005],[6.860015,-8.448765,4.573275,-9.991048],[4.498581,-3.405230,7.950587,-5.076586],[6.826235,-5.243018,-2.807347,-0.460576],[9.120119,7.879683,3.736389,-7.631371],[7.931786,-3.705229,0.824508,-5.768734],[-3.051327,9.008382,-8.011632,5.565825],[-2.667306,3.518581,0.043338,-9.175311],[3.286503,-1.247066,-0.781254,1.492424],[7.304836,-8.076815,-7.749344,8.828368],[3.474493,-0.872988,0.024917,5.457960],[-9.623926,-9.267282,5.600300,-9.273901],[4.100742,1.423217,-7.004945,6.913989],[-0.570143,-5.046449,-1.545049,2.592192],[-1.081793,5.317852,5.226324,6.249137],[2.569336,8.583455,7.250911,-4.405737],[-0.787667,-9.535464,-6.031809,-8.866403],[-0.232758,-9.819390,1.583459,-1.036780],[8.273689,8.846106,5.169438,-5.917353],[-1.205241,9.170021,-8.033782,-4.963731],[3.451425,4.966447,8.630554,6.507383],[-2.612389,-1.266462,6.937866,7.609941],[6.244070,-3.379090,3.703874,5.535214],[-2.966994,3.241592,-1.920856,-0.765423],[5.729191,-0.826415,9.216556,-6.837235],[0.098097,1.271455,8.342406,4.298166],[6.652304,9.404309,4.072550,0.675533],[2.422265,-8.159210,-4.443067,-7.132230],[-5.497503,-8.141729,-7.190898,0.506169],[-0.563647,-9.832900,2.394732,-5.105709],[5.646255,0.278955,-7.367309,7.284848],[-5.617518,-1.746950,-8.652143,-2.821147],[7.012829,-5.998197,3.507869,6.553499],[2.738826,8.678463,2.293218,7.123300],[-5.103987,4.770265,3.127862,-7.153515],[-4.261635,0.393975,7.505613,3.602536],[-4.219928,-0.295248,5.705266,4.043549],[-5.025843,7.088470,-0.044289,-0.743144]], dtype = "float64")#candidate|12603|(110, 4)|const|float64
call_12599 = relay.TupleGetItem(func_2519_call(relay.reshape(const_12600.astype('bool'), []), relay.reshape(const_12601.astype('bool'), [12, 8, 8]), relay.reshape(var_12602.astype('float32'), [1056, 1]), relay.reshape(const_12603.astype('float64'), [440,]), ), 5)
call_12604 = relay.TupleGetItem(func_2524_call(relay.reshape(const_12600.astype('bool'), []), relay.reshape(const_12601.astype('bool'), [12, 8, 8]), relay.reshape(var_12602.astype('float32'), [1056, 1]), relay.reshape(const_12603.astype('float64'), [440,]), ), 5)
uop_12605 = relay.sqrt(call_12595.astype('float32')) # shape=(2, 2, 13)
uop_12607 = relay.sqrt(call_12596.astype('float32')) # shape=(2, 2, 13)
func_1854_call = mod.get_global_var('func_1854')
func_1858_call = mutated_mod.get_global_var('func_1858')
const_12616 = relay.const([-5.051929,3.527488,-6.587759,-7.355055,5.843775,6.352530,3.494016,-3.840783,-0.331878,-2.012742,4.491394,-9.496510,-9.599187,-4.592432,-5.389549,5.342747,-0.220377,-2.354786,7.894554,6.238282,8.170235,9.599772,-4.316335,-5.357701,-9.083676,2.978930,-0.218540,0.668099,2.433637,-9.301069,6.160880,-7.785210,6.512926,-0.546783,-6.393319,8.025670,-7.457415,-2.217144,-2.879164,2.052190,6.269287,-7.091456,-2.335765,-7.022633,8.107691,-1.672510,1.000117,5.979468,2.219710,9.133286,9.458890,-0.075756,3.119415,-2.585426,7.703161,-4.445198,1.971289,-1.708557,-2.799361,0.662516,1.125017,-7.974986,-3.343484,2.152108,7.979397,4.992254,-1.717672,-6.065094,-5.319936,1.596769,6.950129,-7.745448,6.173597,-0.299874,-0.894673,9.111917,3.345297,-4.085222,7.709673,-8.708089,-9.257795,-0.436573,3.245038,-9.298192,9.093042,6.651876,9.123518,5.164784,-6.966757,-0.691745,1.207935,-4.977136,4.287141,1.165228,5.337471,2.391802,2.105496,-7.029553,-9.316697,7.603357,-6.093271,-2.405927,-3.806654,-8.087665,-7.364568,2.312544,8.186542,-8.699182,-7.048044,6.254395,9.019939,7.921224,-9.302564,3.956833,-7.287885,8.264673,7.586565,-4.278576,4.383645,-3.188152,8.370247,-2.404114,-4.805039,1.310226,-2.786503,-7.968858,4.492571,-9.630568,5.117638,6.431493,-2.355213,-8.185506,-1.807298,-5.552175,-8.130305,7.898838,-8.370502,-5.082391,0.831083,-9.777727,-2.244074,4.597756,-9.148544,-5.086108,-8.370608,-4.189145,-5.968971,-0.380682,6.055543,-0.383044,-0.621427,-3.666559,4.567331,1.475592,-8.672287,-9.868267,-5.615326,9.026012,-0.938765,-2.924268,6.458304,6.298801,4.999830,-6.214047,-4.337928,-2.318240,0.763220,-9.182057,9.744326,7.023189,6.100929,4.270357,3.658880,-3.222863,-1.429146,-6.486041,9.844332,3.174561,-6.454978,-4.686196,-8.191657,6.894486,3.779985,0.868806,7.301699,-5.617451,-8.752827,-7.933697,-7.219981,9.046092,1.806933,-2.875998,-4.224592,0.692300,-0.485414,0.246403,1.510152,-4.987841,-9.916367,2.854579,-4.514862,-7.962544,8.838582,-3.792542,-8.430712,-8.248967,-3.753508,-5.119768,-5.417960,9.104075,9.156762,-3.188074,9.732170,4.845404,-1.981268,5.823855,4.637419,6.769726,-1.487987,-1.977839,-7.696377,-0.725961,-9.084180,6.282756,-3.936932,6.561745,0.756553,-8.729417,-7.695744,3.490371,1.857839,5.337329,-9.604897,7.935964,-9.780823,6.088641,9.500424,0.514158,3.495398,-0.053209,6.802660,4.623183,9.197062,9.509000,-1.300888,-9.686321,8.616750,-3.793858,8.537044,-5.328979,4.422810,-6.846692,0.008302,-1.248743,-9.834061,2.815640,-7.253070,-3.526294,-5.450913,6.138981,-1.797180,-4.685551,6.154045,-3.967378,8.804524,3.227843,-9.867696,2.808575,3.323950,-5.251317,-7.643244,-4.809501,8.393558,9.346080,-8.778776,-2.952020,-6.400544,7.289739,4.654372,-4.784015,-5.184674,4.260523,4.343207,8.892406,2.740931,-2.572702,2.871925,-1.127165,-2.278319,-3.435587,1.319971,3.324282,-7.879978,7.290205,-9.728837,-0.848357,5.382668,-4.288712,-4.886515,-1.294869,0.905521,8.553319,2.314751,5.145922,4.744258,-8.559380,-3.719628,3.585065,-3.725211,-1.912606,-4.689693,-5.287697,3.242933,1.652596,-3.778702,8.884643,-2.402999,-0.107955,-0.434249,2.435422,2.042320,-7.464325,-9.641383,-2.724974,5.036683,0.149808,3.872093,4.914630,-7.881937,-2.610376,-9.309845,8.011821,6.259234,-9.729370,8.332103,5.396912,-3.150298,2.193873,5.909002,3.188039,-9.108833,3.648155,-8.519483,-2.076963,6.408640,4.262273,-6.675646,-4.435785,-8.958344,-8.707653,2.100218,7.956408,9.498683,-8.882372,-6.286489,5.556422,-4.630400,2.980834,-5.900866,-5.971081,-9.124455,3.421654,-8.655924,-7.981992,5.028295,-2.880981,4.082566,-1.906577,-9.474439,6.448755,-1.437452,-7.327293,5.919235,-3.985463,3.473407,3.497629,-8.641398,1.678487,5.324910,-2.434038,-6.869287,0.498114,-9.074590,-6.611754,-8.960497,7.553866,5.793922,5.952465,9.896995,-3.041070,-2.984343,6.543642,-7.094132,3.557352,-7.378814,-7.678218,5.472533,-2.404036,6.012741,-0.070687,2.324000,1.054498,1.431094,0.032438,-6.445842,-0.399729,-2.998107,2.964951,-5.811017,-6.893739,-9.166802,8.695216,-2.226565,1.219483,-2.207848,8.013572,-3.470122,-5.674974,5.652309,-7.306804,0.343453,8.885237,-9.732851,8.930555,2.765754,-8.619313,-7.723778,7.783801,9.521819,1.719105,8.359887,9.059448,2.919417,9.554205,-8.128085,-4.708313,-3.232587,2.388903,-7.795220,6.375599,-9.993502,-1.818795,5.395408,3.011104,-0.930312,2.183181,4.136690,2.689801,-0.749657,1.547697,2.682991,0.589457,5.029605,-0.976586,9.529089,-8.611508,5.364354,-3.333077,-9.120172,-7.898461,-5.818012,-5.188317,-4.785203,-8.056116,8.649807,7.910119,5.888396,-9.479184,5.898125,9.135503,4.558870,-5.036776,-0.913729,3.303738,-2.033375,8.132923,9.304306,-4.422793,-2.664150,8.441701,1.018880,-9.494255,3.356252,9.867766,9.417182,2.879769,-3.689917,-5.388784,-4.903818,-0.135606,7.561008,-0.723357,6.125268,-5.965836,2.806871,2.325366,5.305041,-7.010892,4.353309,0.982770,-4.466581,9.218820,1.737042,2.976021,5.458871,-2.110749,3.506113,-9.055674,-2.516624,-5.397559,-7.556595,-1.038283,4.677711,-1.009171,-1.169043,-7.116008,-0.590522,-6.871209,4.131769,6.618891,2.652965,2.430126,-6.332459,4.699454,-5.810510,1.949966,-0.282876,-6.180396,-0.652462,-1.875344,5.551923,8.483091,-6.951624,0.995922,3.684331,-9.091770,-5.929525,5.750614,4.047391,2.851559,7.453007,-5.390884,-3.705251,1.530714,9.437270,-2.347694,-6.831385,-7.792846,1.577363,-5.401977,4.499577,9.335390,-8.940103,-9.035694,9.822612,-5.097089,-7.849448,-0.061624,0.735498,9.359382,8.094148,8.076012,1.104191,-2.461912,1.283304,2.232145,-5.535345,6.245834,-6.088876,-6.111530,3.115611,-8.341235,-5.921091,4.961546,-0.612062,-1.282700,-6.195414,-1.256158,-0.926777,-4.381438,3.558451,-9.360043,-6.435261,6.905187,5.737867,-8.834449,-7.400991,0.034397,-8.471470,-8.338724,7.752495,-2.735416,2.257695,-2.285386,-3.330516,0.414719,-2.097131,0.464162,3.061499,1.872564,-9.500947,-9.526700,-0.469990,5.365512,-9.108018,-7.907336,2.296812,3.632400,6.264240,-8.730186,-5.722956,9.900629,7.822754,7.711047,0.266721,2.355572,-0.978834,-8.341451,1.894261,0.992993,-8.521642,-8.100092,0.212151,-5.106010,2.179200,-1.966313,-3.272448,-4.835288,-6.020507,9.819998,8.158442,0.378571,-7.858634,-8.815406,-0.616088,2.542035,2.118422,-8.750099,2.769813,5.984830,5.477009,-9.839634,-5.112199,1.787682,-1.676099,-5.181677,9.786228,3.343152,-4.898490,-3.654630,-4.706687,6.784027,7.074483,-4.942202,-7.562024,6.798302,1.808532,0.655092,-3.631564,-0.467727,6.767247,-8.219214,-5.955118,-9.436405,-0.018069,0.437068,-7.846641,-8.699403,-4.167462,-6.568231,4.644534,-9.679189,3.511665,-2.347567,-0.513197,-9.799763,9.828462,2.566684,9.255635,-4.823009,-4.686396,-9.502530,-8.557700,-2.464852,8.185265,7.622401,-0.032907,4.491334,-8.781650,7.689097,-2.137444,-5.243211,0.334482,8.219955,-4.866392,-8.179343,-4.497887,8.642680,4.562473,6.118385,1.314835,0.561363,6.989953,2.930883,-8.795040,-7.706853,8.497990,3.173557,-2.674994,4.480470,-3.090535,4.510783,-5.930427,-3.938182,-9.751205,-6.485513,-3.906466,2.541803,-6.883120,9.993784,-3.296716,6.315871,5.736615,-1.012084,7.220221,-9.737916,6.164241,-4.753763,-4.544279,3.066383,6.932474,-0.751000,-2.152250,5.223563,3.348362,5.348051,-3.588576,5.479968,2.800067,-2.430740,0.542290,3.883192,-4.856769,-3.961494,-7.712110,-0.528102,2.655953,8.373154,-7.696471,-2.678253,-2.615535,8.306454,-1.776711,-3.295683,-0.060246,-0.897068,6.548649,-7.272668,-9.505628,-6.203650,1.625900,-4.905209,-7.491024,-8.825444,-4.870773,-4.633004,-2.352966,4.826181,-6.582053,6.546039,-0.997420,-7.709280,1.857033,-2.276806,5.538822,-3.060763,8.321039,7.610251,-9.157798,-0.699701,-7.341240,3.210455,2.064438,0.379209,-9.683188,-7.708299,-3.318997,-5.974370,-8.856327,0.994345,-8.647417,-2.026051,-2.514662,6.894811,8.006477,7.482957,-0.095670,-0.647991,-2.965902,4.891442,-7.518014,0.536852,-4.765368,-3.659903,-6.966460,-9.719592,8.619139,-7.000304,-5.436139,9.981185,-2.509392,8.420634,8.836328,-0.671797,1.585116,1.179207,5.525868,-3.745598,-0.613076,-3.044051,9.375587,2.542799,5.345591,-8.349516,3.016615,8.519414,7.618614,-4.533473,3.266783,-2.569428,-2.554814,-8.096115,-8.754778,8.245319,-3.101168,-3.764542,-8.233887,-9.164085,7.758932,2.435728,-7.931084,-6.719776,1.440778,1.410919,1.687751,8.942083,3.192926,-5.560574,3.329939,-8.503948,5.036491,6.314357,5.520798,-5.580418,-7.047542,1.634115,-1.809289,-5.308752,0.564511,-3.343377,1.636028,-7.092348,-0.172315,7.640077,4.950989,7.997568,-7.067437,-3.179094,-8.437478,-2.361717,6.374669,-3.628192,-0.646292,5.704379,-7.687855,-1.947862,-8.914580,-0.094959,8.762533,-3.452675,9.863029,-9.202078,-2.798650,9.574478,1.608587,8.874419,-0.844239,-5.439252,2.576393,-3.784488,-3.605441,2.547318,3.240411,6.673850,1.265272,1.002031,5.964275,-5.580433,9.202674,-2.026437,-2.973347,9.562048,7.308392,3.632588,4.273647,-4.045192,-9.393379,-2.379934,5.227334,7.707710,7.858374,-8.932443,-9.486094,-2.395912,-9.028611,-3.448848,4.044127,6.955529,3.630163,1.019604,-6.967618,-7.665568,1.748881,0.318702,-8.801083,-6.461819,5.614467,-2.207388,9.681602,6.899002,-5.022505,-2.957968,4.408935,-2.598818,-5.008991,-6.375131,-7.136053,-6.334958,7.708861,-4.809444,-0.207884,-6.925197,2.642942,5.008005,2.486174,5.655387,-1.942664,8.428511,5.239104,-0.457371,6.115308,0.790618,-5.269563,-7.638936,2.305729,4.398675,2.240371,0.585544,9.450971,8.818173,-1.380582,-1.157064,5.569209,-4.572200,6.612719,-0.836140,7.586141,-7.890222,4.980003,-3.168202,-5.027589,-5.112665,9.920545,-0.649534,-0.545703,9.632869,-2.028651,9.564247,-6.298144,0.586444,7.789625,-0.593498,5.442840,-3.830651,9.147617,3.985417,-4.778761,9.878462,2.049958,-3.715753,-0.651033,-3.031462,4.693240,-8.072461,-3.553077,-4.800698,4.865063,-5.819625,2.986730,-4.283930,3.072124,-2.590197,7.110280,5.247951,-1.607387,2.771923,-0.060834,6.298228,7.263411,4.471542,9.504652,2.696753,-7.905643,0.379950,-5.040545,6.455055,6.889060,-6.761675,0.122321,-3.346703,2.503443,-6.675154,9.207676,-8.897858,9.646451,-7.100065,1.825022,-8.808347,-0.233656,2.323166,6.623070,-1.166610,1.921571,0.387340,7.207908,-2.105893,9.067594,-2.380586,-0.534592,-4.105393,-3.402057,8.496376,-3.270094,0.725594,9.913150,-2.647791,3.997170,-5.996274,6.419900,-7.007528,3.317564,8.038625,9.127952,9.145979,-5.968976,-2.174011,2.370032,-4.926902,1.311103,-9.087349,0.233180,6.177210,6.256810,7.401688,7.850966,3.593218,-7.284488,-2.517943,-2.493835,0.298190,3.321811,0.328666,3.285690,-2.236584,-2.840591,-9.692478,3.834851,-2.721655,8.832991,4.589880,8.938857,7.459890,-9.928055,-0.833661,4.539072,3.332168,3.092735,8.209501,2.519964,5.660246,-1.274463,6.049369,0.972013,9.825281,3.342208,8.990705,5.219906,-1.198520,-8.215658,0.846224,-7.104342,-3.075213,0.325540,4.676196,-2.611127,-8.368242,-5.720956,-0.655351,-3.242226,-1.631140,4.976299,-1.850276,-0.563398,-6.506666,2.440486,-3.967617,-9.622616,9.056710,9.035708,-5.864479,5.941160,-4.335035,-3.666267,3.974140,-8.267689,-4.968048,-0.754863,5.839287,4.150412,0.300493,1.847543,4.815440,4.458789,3.915645,9.501260,-6.214663,7.516864,-1.031496,8.967114,-5.823890,8.805994,9.883774,2.408465,-3.849430,-6.579258,-4.245531,0.494348,-9.340562,-7.988115,1.217614,7.955812,6.372602,1.643499,1.974302,4.897444,-5.723915,-6.441099,-5.818024,-0.345678,4.234116,0.565080,-9.365131,1.573888,4.752964,2.847468,0.485880,-7.225225,1.382019,-8.983547,-2.213207,-2.185214,-9.488808,0.426317,-5.468169,8.794909,-8.297506,3.597964,2.843718,9.436233,9.382760,-0.806396,-6.942510,5.751657,-4.238854,-3.947204,5.868812,1.264281,8.531516,6.670976,4.800324,0.780073,1.024015,-4.446188,2.676736,7.987017,-5.628962,5.861219,-6.355481,-3.291625,-4.400316,6.894989,4.177976,5.604835,7.312655,6.965602,9.993943,3.955845,6.620147,-1.629166,6.415403,8.205986,1.565283,-6.124057,3.058496,-1.819419,0.615406,-7.397152,-2.489070,-7.068217,-5.894388,-8.071777,-0.432364,-1.367562,-3.760206,3.363704,-2.061713,0.083134,8.639467,6.513956,8.230021,9.336231,0.405525,4.689559,0.502624,-8.771363,1.949399,-0.963982,-3.999552,-3.123459,5.276341,-5.146816,-1.713568,7.879713,-6.818947,7.893891,-8.610088,-0.778168,-5.761730,2.779571,1.135437,2.320983,2.123553,1.878482,-3.300166,-6.811367,3.608711,5.106772,-6.439454,6.135343,9.233871,-1.651320,3.105673,1.467367,6.313198,-3.481040,-8.994275,1.720383,6.503917,7.503920,-7.244992,1.571353,9.146142,-7.987607,9.131488,-3.812073,-4.816141,-5.443625,3.981928,7.554562,-8.961181,-3.334522,2.304942,-4.247324,-9.854241,-8.034096,3.961997,-9.328065,-0.645203,2.703814,-0.592859,-4.985822,-3.934506,9.853575,-3.109934,-6.908599,-0.122153,-3.611226,0.068363,-4.402253,-3.598580,-1.138232,-8.302149,-9.035352,5.256626,-3.651198,4.203021,-0.585956,9.401401,-3.002210,-5.703938,-9.064619,7.801078,-2.279669,-9.744887,-6.183326,7.599486,-0.484788,1.287881,-5.192861,-3.156484,-5.956932,1.586475,-8.286927,-3.105618,0.537590,3.472045,2.658110,-7.705223,5.144129,-5.709026,2.474719,5.902268,6.159400,8.836220,2.709412,-2.689623,2.286150,9.875034,-5.170342,-7.056631,-8.983028,-5.614209,-2.934637,-1.531018,2.437615,0.326508,-9.097896,-7.854568,1.573724,-7.821902,-1.732550,2.012644,-4.523922,2.859877,-4.444896,-9.720675,6.750587,7.098025,6.063667,-3.684007,-1.081653,-4.694720,-1.036250,7.344367,-9.432333,-5.084298,-6.456063,-1.231487,-7.334392,-0.219094,-5.031935,-3.483312,8.518207,9.508628,3.199030,7.453156,-5.028055,-8.800613,-2.580089,-3.060181,3.622124,0.820081,-2.355335,3.825277,0.620069,-8.850327,-9.088135,-1.601247,-3.354016,1.755652,1.881552,2.592186,-2.919664,-5.028530,4.538687,2.326513,3.235961,9.689761,-3.095925,7.217603,-2.069086,3.179514,-2.453886,-2.829035,-6.157991,-8.996466,-9.023054,4.775034,5.435160,6.495691,-2.311527,-9.328760,-9.486141,-7.241843,-6.771700,-1.894045,7.451597,5.755183,0.817494,-8.495014,7.400250,7.420780,-7.503496,-6.684588,-9.958099,8.189271,-7.261875,8.061509,5.190409,-0.568508,8.230957,-2.844823,-0.919848,-8.294670,7.158064,9.605592,7.160396,-4.266108,9.375191,6.841217,-7.010412,4.267995,-6.181054,5.802085,-7.940331,0.125333,1.771625,-2.668809,-7.547711,3.406403,2.236766,-6.484668,-2.273896,-6.745149,-1.733865,1.578603,-7.974308,4.949480,5.480625,-3.374840,-7.889006,8.573917,1.601173,-9.514986,-7.643691,9.428703,-3.189892,-4.101279,-3.318726,9.084515,6.162071,-7.313200,6.645538,-7.522273,-9.728425,-6.150909,8.758874,-1.365040,9.292607,-6.416582,4.845820,8.823409,3.897182,-8.168156,-5.588086,-6.417790,-2.063347,-1.121535,4.648915,7.180255,0.200749,-8.633583,1.208889,-5.873518,4.480614,1.622475,-7.936437,3.615479,-9.847340,-5.285642,2.863337,-3.530149,5.331981,0.809767,-3.678787,-8.152002,-6.812697,-5.502858,-3.538181,-6.528726,1.352804,-9.550233,-2.503512,5.153083,5.895794,4.731612,6.468421,-5.206424,-4.477424,1.863832,-6.232797,0.062578,-1.197825,3.620271,-9.604774,3.441083,4.310623,4.705012,1.155221,-8.984357,-3.758896,5.329488,-0.572355,-9.429880,2.727062,3.065488,-9.895197,-9.973156,-5.646598,5.749999,4.119382,-1.536028,-9.738364,-7.514177,-1.321046,-2.679182,-0.021896,-6.906408,4.932042,-7.917923,-9.218651,4.602629,-0.457380,-1.212528,9.669500,5.754891,-4.529133,8.868219,7.830978,-3.042390,-2.772583,7.766426,-0.262631,9.784857,-2.440508,-6.329967,6.357403,4.326940,9.959116,-6.862971,0.736359,3.160177,6.512778,-6.458863,-5.865003,5.218046,8.139331,9.964296,-5.894998,-7.516200,-7.610685,-8.623195,-0.070761,6.735160,6.411795,-0.445921,9.230745,-4.627878,-0.756173,-8.295404,1.159793,2.821994,-9.158851,-4.583243,-8.266257,6.528510,3.624178,-6.316600,-4.820868,0.627131,-5.730941,-7.658522,4.323055,-9.891254,-2.306203,-4.112389,-7.384395,-6.288978,-1.013357,-9.957602,1.104172,-2.344931,9.601178,-3.540706,-6.211732,3.355763,2.509357,6.309067,-3.299118,-7.521169,-9.257396,-8.646106,7.890076,9.263778,8.441333,-8.392087,1.528136,4.414858,6.781438,-2.896250,1.439173,-6.345873,-6.076510,7.320800,-8.179682,6.383661,-7.231632,4.299639,-4.746093,4.283890,-5.738865,7.425565,-9.189620,-4.289540,-5.802243,-1.724386,-0.288590,0.404217,-1.756617,8.266410,-2.939749,4.547885,-5.654051,-9.089936,6.850499,-0.805878,4.551950,3.762008,-3.714890,-1.369263,9.875464,-5.088097,1.469981,-2.923957,-5.133170,-2.848219,-4.141275,5.532165,3.574080,2.285348,-0.681305,-2.908025,9.221125,1.191410,-7.445806,6.563103,-4.669110,2.109568,8.969770,7.682672,-0.656241,-5.193335,1.115203,2.700337,-4.664656,8.200438,7.485692,-8.017972,-8.402453,-5.193656,8.434016,-1.326066,-9.326731,-5.287568,1.173997,8.346252,0.650596,-6.415734,-3.359889,0.020249,-6.887184,8.536416,0.451395,4.015379,5.872631,-7.990435,1.916080,6.898310,-5.667685,7.447774,9.982157,5.607912,-8.382943,-2.116004,-4.896363,6.822540,-7.816478,-0.735061,2.717891,4.340162,3.637162,5.286384,-1.899835,-9.407234,-9.809627,-4.457274,2.399447,7.759664,5.511462,-3.289557,4.862050,9.738588,-6.964433,2.593111,8.674815,-0.834404,-5.236753,9.808204,-1.184123,-8.166768,8.597641,4.101938,-9.417301,-4.838421,-4.172064,2.961603,7.857295,6.219903,-7.898344,8.264988,-2.788124,2.716019,5.212367,4.903418,-3.508558,0.861448,8.998387,-7.061001,2.370889,8.033839,8.519929,2.833546,7.346908,-5.587385,-7.219217,1.595927,-8.459405,3.841827,9.676169,1.575266,-2.236227,6.431155,6.096245,-3.536879,5.070642,-9.802652,-4.160006,5.428031,6.534107,-4.624037,8.639415,-8.042432,-5.585047,7.472352,-4.343450,3.655725,4.722380,-7.852513,0.035155,6.904197,2.262952,9.456610,-3.124866,0.727523,8.243635,9.384007,-3.379174,-7.384065,8.217039,-8.829159,-9.527957,1.722190,8.098714,3.345362,-2.707335,5.804522,-5.150093,4.521283,2.503538,-8.342967,-4.630356,3.440386,3.983644,1.634970,3.170258,7.588006,-4.722107,-6.235139,-9.043753,-6.269214,-2.242697,-4.566272,-3.631810,0.594461,4.364331,-5.138405,6.212873,-2.544554,7.541416,-6.716337,3.980039,7.166943,-8.703215,2.437542,7.588803,2.985707,2.027505,-4.463134,3.595623,7.257171,-2.985803,2.940292,6.517701,-6.749911,6.682268,-7.484124,-2.708753,-1.730342,7.513483,-5.725480,5.664202,-0.815320,8.310860,5.781856,9.509060,6.349998,-8.068986,6.004671,-1.645087,5.734575,-4.556282,1.879166,3.157012,4.477147,7.359682,9.058676,9.457231,-8.535498,-8.189930,-3.789970,-4.173847,0.237505,-4.542199,9.089551,9.487009,-6.639211,-0.133777,-5.137063,-8.497380,-4.370366,9.516068,-2.237403,4.614584,-2.046517,-9.611188,4.510485,-3.768254,-5.484481,-8.123371,-1.481397,-1.101790,6.565421,-2.069003,-5.040377,-7.321594,-7.329715,-7.770748,-1.109689,6.685416,3.951725,0.894582,3.096964,-8.716092,-2.291674,3.929269,-9.421153,-0.815785,-8.457503,3.048565,4.565432,5.290976,-0.862185,-8.951801,2.013670,3.497847,-4.144123,-5.233777,-1.039333,9.860997,5.667111,9.063014,-3.192074,4.825832,-8.570148,8.094126,-2.086531,-9.982359,-8.286314,-0.221603,-5.240797,-3.517704,-8.413317,-8.056634,4.911622,-6.745369,-5.058050,-0.007187,1.819023,0.671261,5.410509,1.287137,3.723655,-8.182759,-6.438135,-8.405211,-8.350096,2.775613,6.701827,1.156688,4.714725], dtype = "float64")#candidate|12616|(1950,)|const|float64
call_12615 = relay.TupleGetItem(func_1854_call(relay.reshape(const_12616.astype('float64'), [15, 10, 13]), relay.reshape(const_12616.astype('float64'), [15, 10, 13]), ), 0)
call_12617 = relay.TupleGetItem(func_1858_call(relay.reshape(const_12616.astype('float64'), [15, 10, 13]), relay.reshape(const_12616.astype('float64'), [15, 10, 13]), ), 0)
func_9069_call = mod.get_global_var('func_9069')
func_9073_call = mutated_mod.get_global_var('func_9073')
const_12631 = relay.const([10,-2,-7,-7,-8,2,-4,10,6,1,2,10,9,-4,-8,7,9,4,8,6,-8,7,-3,-8,-8,4,-1,6], dtype = "uint16")#candidate|12631|(28,)|const|uint16
call_12630 = relay.TupleGetItem(func_9069_call(relay.reshape(const_12600.astype('uint16'), []), relay.reshape(const_12631.astype('uint16'), [28,]), ), 1)
call_12632 = relay.TupleGetItem(func_9073_call(relay.reshape(const_12600.astype('uint16'), []), relay.reshape(const_12631.astype('uint16'), [28,]), ), 1)
const_12633 = relay.const([[[-4.587119,-4.921180,1.639274,3.218680,3.664540,-3.691522,2.840162,-7.806243,-8.837214,1.705311,3.650818,8.342238,6.892170],[4.267609,-1.559104,-7.488720,-5.574742,-3.159852,-1.898940,-8.142859,-2.945540,-0.764262,5.051145,5.387888,-0.031012,-7.909728]],[[0.134689,-6.519449,-4.690197,9.234862,3.247452,6.017124,-9.404564,6.851367,-2.610325,-5.877472,7.020979,-1.085774,-9.910761],[-7.070907,-3.353131,-7.043498,-3.735870,6.625639,5.844286,-1.789661,-5.962991,-4.926185,2.792174,1.323553,6.608318,-6.410455]]], dtype = "float32")#candidate|12633|(2, 2, 13)|const|float32
bop_12634 = relay.minimum(uop_12605.astype('int64'), relay.reshape(const_12633.astype('int64'), relay.shape_of(uop_12605))) # shape=(2, 2, 13)
bop_12637 = relay.minimum(uop_12607.astype('int64'), relay.reshape(const_12633.astype('int64'), relay.shape_of(uop_12607))) # shape=(2, 2, 13)
bop_12648 = relay.multiply(uop_12605.astype('uint8'), relay.reshape(const_12633.astype('uint8'), relay.shape_of(uop_12605))) # shape=(2, 2, 13)
bop_12651 = relay.multiply(uop_12607.astype('uint8'), relay.reshape(const_12633.astype('uint8'), relay.shape_of(uop_12607))) # shape=(2, 2, 13)
output = relay.Tuple([call_12599,const_12600,const_12601,var_12602,const_12603,call_12615,const_12616,call_12630,const_12631,bop_12634,bop_12648,])
output2 = relay.Tuple([call_12604,const_12600,const_12601,var_12602,const_12603,call_12617,const_12616,call_12632,const_12631,bop_12637,bop_12651,])
func_12656 = relay.Function([var_12602,], output)
mod['func_12656'] = func_12656
mod = relay.transform.InferType()(mod)
mutated_mod['func_12656'] = func_12656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12657 = relay.var("var_12657", dtype = "float32", shape = (1056,))#candidate|12657|(1056,)|var|float32
func_12656_call = mutated_mod.get_global_var('func_12656')
call_12658 = func_12656_call(var_12657)
output = call_12658
func_12659 = relay.Function([var_12657], output)
mutated_mod['func_12659'] = func_12659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_12671 = relay.TupleGetItem(func_7903_call(), 0)
call_12672 = relay.TupleGetItem(func_7905_call(), 0)
func_11623_call = mod.get_global_var('func_11623')
func_11625_call = mutated_mod.get_global_var('func_11625')
call_12673 = func_11623_call()
call_12674 = func_11623_call()
func_7519_call = mod.get_global_var('func_7519')
func_7520_call = mutated_mod.get_global_var('func_7520')
call_12675 = func_7519_call()
call_12676 = func_7519_call()
output = relay.Tuple([call_12671,call_12673,call_12675,])
output2 = relay.Tuple([call_12672,call_12674,call_12676,])
func_12684 = relay.Function([], output)
mod['func_12684'] = func_12684
mod = relay.transform.InferType()(mod)
output = func_12684()
func_12685 = relay.Function([], output)
mutated_mod['func_12685'] = func_12685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_12731 = func_7687_call()
call_12732 = func_7687_call()
func_11061_call = mod.get_global_var('func_11061')
func_11063_call = mutated_mod.get_global_var('func_11063')
var_12736 = relay.var("var_12736", dtype = "int32", shape = ())#candidate|12736|()|var|int32
call_12735 = relay.TupleGetItem(func_11061_call(relay.reshape(var_12736.astype('int32'), [])), 7)
call_12737 = relay.TupleGetItem(func_11063_call(relay.reshape(var_12736.astype('int32'), [])), 7)
bop_12743 = relay.floor_mod(call_12731.astype('float64'), call_12735.astype('float64')) # shape=(8, 8, 2)
bop_12746 = relay.floor_mod(call_12732.astype('float64'), call_12737.astype('float64')) # shape=(8, 8, 2)
output = relay.Tuple([var_12736,bop_12743,])
output2 = relay.Tuple([var_12736,bop_12746,])
func_12756 = relay.Function([var_12736,], output)
mod['func_12756'] = func_12756
mod = relay.transform.InferType()(mod)
mutated_mod['func_12756'] = func_12756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12757 = relay.var("var_12757", dtype = "int32", shape = ())#candidate|12757|()|var|int32
func_12756_call = mutated_mod.get_global_var('func_12756')
call_12758 = func_12756_call(var_12757)
output = call_12758
func_12759 = relay.Function([var_12757], output)
mutated_mod['func_12759'] = func_12759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12765 = relay.var("var_12765", dtype = "float32", shape = (1, 1, 16))#candidate|12765|(1, 1, 16)|var|float32
uop_12766 = relay.asin(var_12765.astype('float32')) # shape=(1, 1, 16)
output = uop_12766
output2 = uop_12766
func_12768 = relay.Function([var_12765,], output)
mod['func_12768'] = func_12768
mod = relay.transform.InferType()(mod)
mutated_mod['func_12768'] = func_12768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12769 = relay.var("var_12769", dtype = "float32", shape = (1, 1, 16))#candidate|12769|(1, 1, 16)|var|float32
func_12768_call = mutated_mod.get_global_var('func_12768')
call_12770 = func_12768_call(var_12769)
output = call_12770
func_12771 = relay.Function([var_12769], output)
mutated_mod['func_12771'] = func_12771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11085_call = mod.get_global_var('func_11085')
func_11086_call = mutated_mod.get_global_var('func_11086')
call_12827 = relay.TupleGetItem(func_11085_call(), 0)
call_12828 = relay.TupleGetItem(func_11086_call(), 0)
func_6762_call = mod.get_global_var('func_6762')
func_6767_call = mutated_mod.get_global_var('func_6767')
const_12847 = relay.const(3, dtype = "uint8")#candidate|12847|()|const|uint8
const_12848 = relay.const([9,6,-9,4,-1,8,-9,-2,7,8,-5,-8,-2,7,9,9,-6,-3,7,-4,-6,4,5,6,1,-3,-8,-9,4,-6,-6,2,-1,8,10,-6,4,-2,5,-1,1,-5,5,-1,-10,3,-3,7,-7,4,8,-4,10,-3,5,5,10,-4,6,5,4,1,2,-3,-6,8,9,-6,9,5,-5,-9,2,9,1,-3,3,-2,5,-8,6,-5,-10,-3,-2,3,1,-2,7,1,7,-1,-2,-9,-2,-8,-1,-1,-5,9,7,7,-6,-2,-2,9,9,-2,-6,-7,-8,-7,9,-1,4,-4,-6,10,-1,4,-3,3,-6,-2,7,-1,6,5,5,2,10,2,-8,-7,-5,10,-6,2,9,-4,-3,3,-4,5,-6,1,-2,1,5,6,-7,-10,9,-6,-5,-7,7,10,-10,-1,9,-4,4,10,3,1,-2,4,-4,2,-1,2,10,-1,6,-1,-3,5,-10,9,10,-3,5,-4,10,-2,8,10,5,-10,-3,-3,4,6,-2,-9,-8,-5,-2,2,8,2,8,-1,5,-2,-2,7,-5,-2,-1,-1,3,-10,6,6,7,-9,-10,-6,4,5,2,-2,8,-6,-4,6,5,-2,-9,7,4,9,-6,1,2,6,2,5,-1,-7,-7,10,-10,-5,1,-4,-7,1,9,-3,-1,-7,6,-1,2,-2,2,5,6,-8,1,4,-5,1,-10,-7,5,4,-5,-2,4,9,8,7,-3,1,-6,-2,-1,-7,9,-1,-7,10,9,-2,-6,8,-5,7,9,4,4,-10,-10,3,-2,-8,9,-2,1,-3,5,8,8,1,-3,7,-2,-2,6,6,2,-7,-3,1,-3,1,-8,9,4,5,7,-7,-9,-5,-6,10,-6,-9,6,-5,4,6,-4,-8,-6,-10,-5,6,-7,8,2,1,7,-9,10,1,-9,-8,1,-3,-10,-4,1,-10,8,2,-10,-10,-5,-9,4,-8,6,-7,-3,7,-3,-10,-8,-3,-10,8,9,8,-8,8,-8,6,4,4,4,-1,-2,-3,1,9,-2,3,7,-5,8,-9,-2,2,-6,3,8,9,5,2,-10,7,-8,-5,-2,1,8,8,-5,-5,-9,-3,2,-6,-5,-3,9,-9,10,5,-8,4,6,-3,-6,-2,-7,-3,6,-6,-10,-6,-8,-8,-10,-2,9,2,2,8,6,-5,6,3,-7,-5,-9,6,7,-8,8,5,8,7,-7,-9,5,-7,2,-5,1,6,10,-7,-7,-5,-7,-2,-10,-6,-4,-9,9,-1,5,7,-3,-8,-4,-3,-10,-6,9,-1,-7,-5,1,1,9,8,6,-2,10,-6,-6,5,-7,4,-9,8,-1,-8,-8,-2,-8,3,-8,5,-6,2,1,-10,6,-8,-9,2,9,2,-6,-4,-5,-10,-5,-10,-7,-5,-8,9,-6,-1,-3,-5,-1,-10,3,3,3,2,-10,1,5,-8,-10,8,-3,-3,4,-7,-6,3,-10,-7,2,3,2,-9,-9,-9,-3,-6,-10,3,6,-10,-8,10,-1,-3,8,3,1,6,-9,8,6,8,-1,-9,-10,9,-1,-6,-8,5,6,-8,2,-6,1,-2,-7,10,-1,7,7,9,-5,-2,5,-10,7,-9,-2,-9,8,9,-2,-7,9,4,10,-5,10,1,-5,8,9,-1,2,-7,1,-10,-6,-8,1,-2,-7,7,4,-3,-8,-1,10,-1,1,-7,-3,-7,-1,5,-7,4,-4,1,10,-9,9,-7,-3,3,8,8,4,10,10,-1,2,3,6,-6,-2,-7,6,-9,-4,-4,-2,-6,8,4,-1,9,10,-1,-7,-5,3,-9,-5,9,1,-4,4,1,-5,-1,10,2,-3,-6,-10,-1,-2,2,-9,9,-4,4,4,-1,-10,7,-4,8,2,8,-7,-6,7,8,-9,-7,1,-3,7,-4,-8,-7,-10,8,10,-7,-2,6,1,7,-1,4,-8,-9,-1,-3,3,-9,-6,-8,-2,-3,-6,-4,-5,8,7,-9,1,3,-10,10,8,-10,-8,-1,1,-3,-7,5,-9,-9,7,5,-8,9,-7,-3,10,-9,2,-7,6,-2,-10,-4,-2,-7,-10,4,-3,6,-1,4,2,10,-5,-7,-8,3,-5,-6,7,5,-8,-5,-3,-2,10,6,1,-8,-2,7,-3,7,-5,-7,6,2,-1,6,8,8,4,-1,-1,-9,-5,4,-7,8,-4,6,4,-4,3,-9,-8,10,-3,6,2,-7,-2,-5,-2,10,-7,-5,-4,-6,-1,-9,-1,2,10,8,-3,-8,-7,-3,7,6,2,3,-2,-3,3,3,-1,-8,1,4,10,-9,7,6,9,-6,-3,7,9,10,1,5,-8,-4,6,5,2,-3,-9,-2,2,9,8,-3,-7,-8,6,-2,-6,-5,6,10,-7,-8,-3,5,10,-3,4,-7,6,-1,3,-9,2,3,6,-10,8,9,8,-9,2,1,5,-6,7,5,1,-9,8,4,7,6,2,7,3,-10,-5,8,-1,4,2,-8,-3,-7,-10,6,-5,-1,2,-6,-3,8,1,1,-2,2,4,6,-8,2,-4,-5,5,-5,-5,9,-9,-7,5,-4,3,-1,-5,-8,-10,1,3,2,-4,-4,-9,-9,2,-1,-4,-5,1,7,1,-9,8,-4,7,-8,4,-10,-4,3,4,2,9,6,1,3,1,-4,1,-9,-7,-9,-6,4,-7,6,1,1,5,-7,1,2,-2,-10,-6,3,-5,-4,3,-2,5,4,-6,-5,10,-9,1,-4,10,8,-4,-9,5,-1,3,1,-9,-5,7,6,-1,-10,-8,5,-10,-4,-6,-3,-8,1,6,-3,-4,10,8,1,-2,-2,-7,6,10,4,-3,-10,1,-4,5,2,8,3,9,-5,-4,1,4,1,-9,3,-1,-5,-6,9,-8,1,6,-4,-5,-6,-8,2,-4,7,1,-5,4,-5,1,-10,-9,-7,-4,-10,9,-9,2,-10,-8,2,-6,-2,-9,1,-2,-2,-1,-8,9,-3,5,-7,5,5,-4,-1,-6,-1,9,-6,2,-4,7,9,1,6,3,-2,1,-2,-6,5,5,10,9,-6,6,-5,3,8,-7,-9,10,-1,-1,-5,-5,3,-10,5,-9,-2,3,7,-3,-2,-1,-1,4,-3,-4,-4,-1,-10,-7,2,-7,10,-4,-10,2,-7,2,-6,-1,-1,-7,3,-1,-1,-9,-4,-5,-8,3,-8,-9,10,5,8,-6,3,4,-3,1,3,5,6,-6,-1,-2,6,3,3,-3,-4,-9,-4,2,-10,-9,3,-4,4,-3,1,-1,7,2,-2,10,-5,4,6,7,1,2,-2,2,8,-10,-3,5,-6,9,-3,-7,-9,-10,-9,2,-4,3,-3,-1,-10,-10,-5,4,-4,-1,-3,-7,-1,9,5,9,8,-7,-7,-1,-3,-2,6,2,-9,6,1,-6,10,2,9,-7,3,5,6,7,-7,-8,6,-2,2,9,-1,8,10,-9,1,-5,1,4,-6,-7,-1,7,-4,2,-6,9,-6,9,7,5,5,2,-2,3,9,-2,-6,8,7,-4,-3,-2,-2,-4,-8,-6,-1,-1,7,10,6,6,2,-2,6,-3,10,7,-6,-10,-10,-7,9,5,-2,1,8,9,-3,-8,-6,-7,4,-8,-5,-5,7,7,2,1,6,3,3,-3,-5,-5,-9,9,6,-4,-8,-5,2,2,-3,-9,8,2,-8,-6,-5,-3,-5,10,10,2,4,6,3,-2,-2,5,7,-1,-4,7,10,-4,2,8,-7,-3,-10,-8,6,9,-5,10,-6,6,-10,7,-4,-6,-4,-10,5,-1,2,-7,-3,8,5,-9,-9,-8,9,8,8,-10,6,-1,-3,7,-4,-6,3,5,2,-6,1,9,-1,5,-10,-2,-7,9,-5,-7,-1,8,-7,-1,-6,-9,4,1,8,7,-3,6,9,-3,-4,-7,-5,10,-7,2,-9,-4,-10,10,-1,6,3,-7,1,-9,2,1,-1,9,3,3,2,-7,-2,-2,2,-10,-2,-7,7,-6,-4,-6,8,-4,7,-3,7,-3,6,4,3,-3,1,6,8,6,-10,8,8,-1,1,5,-5,-7,-4,-9,6,-2,1,-6,-1,-2,7,-3,2,-1,7,1,6,10,-2,9,-10,7,-10,-2,-9,5,4,2,-9,9,1,-7,9,-1,6,-8,-10], dtype = "uint8")#candidate|12848|(1560,)|const|uint8
var_12849 = relay.var("var_12849", dtype = "float64", shape = (1950,))#candidate|12849|(1950,)|var|float64
call_12846 = relay.TupleGetItem(func_6762_call(relay.reshape(const_12847.astype('uint8'), []), relay.reshape(const_12848.astype('uint8'), [1560,]), relay.reshape(var_12849.astype('float64'), [1950,]), ), 4)
call_12850 = relay.TupleGetItem(func_6767_call(relay.reshape(const_12847.astype('uint8'), []), relay.reshape(const_12848.astype('uint8'), [1560,]), relay.reshape(var_12849.astype('float64'), [1950,]), ), 4)
func_9182_call = mod.get_global_var('func_9182')
func_9184_call = mutated_mod.get_global_var('func_9184')
call_12851 = relay.TupleGetItem(func_9182_call(), 1)
call_12852 = relay.TupleGetItem(func_9184_call(), 1)
bop_12865 = relay.bitwise_or(call_12846.astype('int16'), const_12848.astype('int16')) # shape=(1560,)
bop_12868 = relay.bitwise_or(call_12850.astype('int16'), const_12848.astype('int16')) # shape=(1560,)
uop_12870 = relay.tan(call_12851.astype('float64')) # shape=(2, 880)
uop_12872 = relay.tan(call_12852.astype('float64')) # shape=(2, 880)
bop_12881 = relay.logical_or(call_12851.astype('bool'), relay.reshape(uop_12870.astype('bool'), relay.shape_of(call_12851))) # shape=(2, 880)
bop_12884 = relay.logical_or(call_12852.astype('bool'), relay.reshape(uop_12872.astype('bool'), relay.shape_of(call_12852))) # shape=(2, 880)
uop_12890 = relay.atanh(uop_12870.astype('float64')) # shape=(2, 880)
uop_12892 = relay.atanh(uop_12872.astype('float64')) # shape=(2, 880)
uop_12893 = relay.sqrt(uop_12890.astype('float64')) # shape=(2, 880)
uop_12895 = relay.sqrt(uop_12892.astype('float64')) # shape=(2, 880)
uop_12904 = relay.rsqrt(uop_12893.astype('float32')) # shape=(2, 880)
uop_12906 = relay.rsqrt(uop_12895.astype('float32')) # shape=(2, 880)
bop_12910 = relay.mod(uop_12870.astype('float64'), call_12846.astype('float64')) # shape=(2, 880)
bop_12913 = relay.mod(uop_12872.astype('float64'), call_12850.astype('float64')) # shape=(2, 880)
output = relay.Tuple([call_12827,const_12847,var_12849,bop_12865,bop_12881,uop_12904,bop_12910,])
output2 = relay.Tuple([call_12828,const_12847,var_12849,bop_12868,bop_12884,uop_12906,bop_12913,])
func_12914 = relay.Function([var_12849,], output)
mod['func_12914'] = func_12914
mod = relay.transform.InferType()(mod)
mutated_mod['func_12914'] = func_12914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12915 = relay.var("var_12915", dtype = "float64", shape = (1950,))#candidate|12915|(1950,)|var|float64
func_12914_call = mutated_mod.get_global_var('func_12914')
call_12916 = func_12914_call(var_12915)
output = call_12916
func_12917 = relay.Function([var_12915], output)
mutated_mod['func_12917'] = func_12917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10729_call = mod.get_global_var('func_10729')
func_10730_call = mutated_mod.get_global_var('func_10730')
call_12937 = func_10729_call()
call_12938 = func_10729_call()
output = relay.Tuple([call_12937,])
output2 = relay.Tuple([call_12938,])
func_12945 = relay.Function([], output)
mod['func_12945'] = func_12945
mod = relay.transform.InferType()(mod)
output = func_12945()
func_12946 = relay.Function([], output)
mutated_mod['func_12946'] = func_12946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9748_call = mod.get_global_var('func_9748')
func_9749_call = mutated_mod.get_global_var('func_9749')
call_12986 = func_9748_call()
call_12987 = func_9748_call()
func_11085_call = mod.get_global_var('func_11085')
func_11086_call = mutated_mod.get_global_var('func_11086')
call_12994 = relay.TupleGetItem(func_11085_call(), 0)
call_12995 = relay.TupleGetItem(func_11086_call(), 0)
func_9275_call = mod.get_global_var('func_9275')
func_9276_call = mutated_mod.get_global_var('func_9276')
call_13000 = func_9275_call()
call_13001 = func_9275_call()
uop_13010 = relay.sinh(call_12986.astype('float64')) # shape=(2, 2, 13)
uop_13012 = relay.sinh(call_12987.astype('float64')) # shape=(2, 2, 13)
func_9038_call = mod.get_global_var('func_9038')
func_9040_call = mutated_mod.get_global_var('func_9040')
call_13015 = relay.TupleGetItem(func_9038_call(), 0)
call_13016 = relay.TupleGetItem(func_9040_call(), 0)
output = relay.Tuple([call_12994,call_13000,uop_13010,call_13015,])
output2 = relay.Tuple([call_12995,call_13001,uop_13012,call_13016,])
func_13053 = relay.Function([], output)
mod['func_13053'] = func_13053
mod = relay.transform.InferType()(mod)
mutated_mod['func_13053'] = func_13053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13053_call = mutated_mod.get_global_var('func_13053')
call_13054 = func_13053_call()
output = call_13054
func_13055 = relay.Function([], output)
mutated_mod['func_13055'] = func_13055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8933_call = mod.get_global_var('func_8933')
func_8935_call = mutated_mod.get_global_var('func_8935')
call_13058 = relay.TupleGetItem(func_8933_call(), 0)
call_13059 = relay.TupleGetItem(func_8935_call(), 0)
output = call_13058
output2 = call_13059
func_13064 = relay.Function([], output)
mod['func_13064'] = func_13064
mod = relay.transform.InferType()(mod)
mutated_mod['func_13064'] = func_13064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13064_call = mutated_mod.get_global_var('func_13064')
call_13065 = func_13064_call()
output = call_13065
func_13066 = relay.Function([], output)
mutated_mod['func_13066'] = func_13066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9182_call = mod.get_global_var('func_9182')
func_9184_call = mutated_mod.get_global_var('func_9184')
call_13229 = relay.TupleGetItem(func_9182_call(), 0)
call_13230 = relay.TupleGetItem(func_9184_call(), 0)
output = call_13229
output2 = call_13230
func_13254 = relay.Function([], output)
mod['func_13254'] = func_13254
mod = relay.transform.InferType()(mod)
output = func_13254()
func_13255 = relay.Function([], output)
mutated_mod['func_13255'] = func_13255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11734_call = mod.get_global_var('func_11734')
func_11735_call = mutated_mod.get_global_var('func_11735')
call_13337 = relay.TupleGetItem(func_11734_call(), 3)
call_13338 = relay.TupleGetItem(func_11735_call(), 3)
func_7496_call = mod.get_global_var('func_7496')
func_7500_call = mutated_mod.get_global_var('func_7500')
var_13347 = relay.var("var_13347", dtype = "bool", shape = (768, 1))#candidate|13347|(768, 1)|var|bool
var_13348 = relay.var("var_13348", dtype = "float32", shape = (1056,))#candidate|13348|(1056,)|var|float32
call_13346 = relay.TupleGetItem(func_7496_call(relay.reshape(var_13347.astype('bool'), [768,]), relay.reshape(var_13348.astype('float32'), [1056,]), ), 7)
call_13349 = relay.TupleGetItem(func_7500_call(relay.reshape(var_13347.astype('bool'), [768,]), relay.reshape(var_13348.astype('float32'), [1056,]), ), 7)
output = relay.Tuple([call_13337,call_13346,var_13347,var_13348,])
output2 = relay.Tuple([call_13338,call_13349,var_13347,var_13348,])
func_13350 = relay.Function([var_13347,var_13348,], output)
mod['func_13350'] = func_13350
mod = relay.transform.InferType()(mod)
var_13351 = relay.var("var_13351", dtype = "bool", shape = (768, 1))#candidate|13351|(768, 1)|var|bool
var_13352 = relay.var("var_13352", dtype = "float32", shape = (1056,))#candidate|13352|(1056,)|var|float32
output = func_13350(var_13351,var_13352,)
func_13353 = relay.Function([var_13351,var_13352,], output)
mutated_mod['func_13353'] = func_13353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12065_call = mod.get_global_var('func_12065')
func_12067_call = mutated_mod.get_global_var('func_12067')
call_13420 = func_12065_call()
call_13421 = func_12065_call()
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
var_13426 = relay.var("var_13426", dtype = "bool", shape = (693,))#candidate|13426|(693,)|var|bool
var_13427 = relay.var("var_13427", dtype = "bool", shape = (768,))#candidate|13427|(768,)|var|bool
call_13425 = relay.TupleGetItem(func_3586_call(relay.reshape(var_13426.astype('bool'), [9, 11, 7]), relay.reshape(var_13426.astype('bool'), [9, 11, 7]), relay.reshape(var_13427.astype('bool'), [2, 384]), ), 4)
call_13428 = relay.TupleGetItem(func_3590_call(relay.reshape(var_13426.astype('bool'), [9, 11, 7]), relay.reshape(var_13426.astype('bool'), [9, 11, 7]), relay.reshape(var_13427.astype('bool'), [2, 384]), ), 4)
output = relay.Tuple([call_13420,call_13425,var_13426,var_13427,])
output2 = relay.Tuple([call_13421,call_13428,var_13426,var_13427,])
func_13449 = relay.Function([var_13426,var_13427,], output)
mod['func_13449'] = func_13449
mod = relay.transform.InferType()(mod)
mutated_mod['func_13449'] = func_13449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13449_call = mutated_mod.get_global_var('func_13449')
var_13451 = relay.var("var_13451", dtype = "bool", shape = (693,))#candidate|13451|(693,)|var|bool
var_13452 = relay.var("var_13452", dtype = "bool", shape = (768,))#candidate|13452|(768,)|var|bool
call_13450 = func_13449_call(var_13451,var_13452,)
output = call_13450
func_13453 = relay.Function([var_13451,var_13452,], output)
mutated_mod['func_13453'] = func_13453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11244_call = mod.get_global_var('func_11244')
func_11246_call = mutated_mod.get_global_var('func_11246')
call_13471 = relay.TupleGetItem(func_11244_call(), 3)
call_13472 = relay.TupleGetItem(func_11246_call(), 3)
func_6762_call = mod.get_global_var('func_6762')
func_6767_call = mutated_mod.get_global_var('func_6767')
const_13476 = relay.const([7,9,-9,10,3,-9,3,-4,-8,-8,-4,-7,-6,-3,-3,10,-4,3,-8,-1,-5,3,-2,1,-8,8,9,-6,-6,-4,1,10,3,-9,8,-3,-2,3,1,-6,6,10,1,-2,7,7,10,-5,5,-3,6,10,-10,4,8,2,-3,-9,10,-1,-9,-7,10,-1,8,9,-10,1,-1,-3,4,5,10,2,-7,-9,5,-7,-9,-9,-4,10,7,-8,-6,-9,8,8,8,-10,-4,3,-6,-4,1,-2,4,-1,-3,1,-9,10,4,5,-9,-9,3,-10,-2,-4,10,8,-9,-4,9,4,8,7,-3,4,-9,-4,-4,-1,-1,-9,-2,2,7,6,3,-4,-5,3,-3,-1,-1,-5,9,1,-3,-10,9,-8,10,-10,7,4,-5,1,3,2,-7,10,5,8,4,-6,-10,7,10,2,3,1,-2,-6,6,-10,-7,3,-2,1,-8,10,1,9,7,3,7,6,8,-2,-1,9,3,-9,4,-4,9,2,1,3,3,8,10,7,7,4,4,-8,-7,5,-9,6,10,7,-1,1,-8,4,-4,-8,2,1,-7,-6,-5,8,9,3,-1,-3,3,-6,3,-1,-1,-8,-10,1,-9,4,6,-10,-5,4,-5,8,-1,1,4,-10,10,8,-8,-9,-3,-1,-2,-6,5,-3,-7,8,-5,3,-8,4,3,-10,-8,10,-10,2,3,1,8,-8,-4,4,-5,1,-1,3,-7,-9,-10,8,-9,1,10,3,5,4,10,-3,6,8,8,-5,2,2,10,-1,-2,-4,6,2,-9,-3,6,-3,9,-2,-1,-4,9,-5,5,2,10,-2,3,8,-2,-2,8,-3,-5,5,-1,10,-2,3,-3,-7,-10,7,-4,-7,5,-7,3,9,-4,-5,-1,5,2,-1,2,5,-6,9,-7,-8,-6,-7,-4,10,-1,1,9,-7,5,-3,-7,-2,1,7,-8,2,10,4,6,-10,-8,-10,8,-8,-9,-1,-9,1,4,10,3,-5,-9,-6,2,3,8,7,-5,10,-3,-2,6,4,1,10,-4,-8,-4,10,-2,-6,-8,-6,-5,7,-1,-2,-2,7,-10,9,1,-1,-4,1,-5,4,-7,6,-1,9,4,9,10,1,-2,-8,-10,8,-9,7,5,9,4,-3,10,8,-5,-2,-2,7,-3,-9,-3,6,7,7,-7,-1,4,7,-7,-10,2,7,4,10,-10,-2,-5,4,6,-3,10,5,9,7,-8,6,10,-4,9,4,2,-2,-6,10,-8,4,-6,-1,10,-10,-7,-8,2,-9,-7,-2,-9,-7,-3,-7,-9,-8,-10,1,8,-10,-10,10,-2,6,-4,-10,5,1,4,8,1,-10,6,4,-5,-9,-5,-8,9,-8,-2,-9,-6,2,8,-5,5,-9,1,5,8,-10,2,-1,9,6,-8,8,-5,5,-10,2,8,-8,-7,-4,6,9,1,9,-9,-3,1,-2,4,10,10,1,5,8,4,-8,-7,8,-7,7,-1,-7,-4,1,-8,3,-2,7,-6,9,8,-10,-4,-10,5,-9,10,1,4,-3,10,10,10,9,-4,-8,4,7,4,9,7,-8,-5,-2,-10,1,8,-3,-3,-6,1,-9,-2,4,-4,-7,-2,-7,-3,-6,-3,-2,2,-3,6,-2,-5,-3,-7,-5,10,1,7,9,-8,-3,-5,4,-10,4,6,4,-7,8,-2,3,7,3,4,5,8,3,-3,-3,-3,9,-3,3,-10,1,6,-5,10,6,-2,5,1,5,4,6,-7,9,10,7,2,1,6,2,3,-1,1,5,6,5,-10,-9,8,4,-7,7,10,1,5,1,3,3,10,5,9,-5,-1,-5,-10,6,-1,1,2,-7,-5,-6,-2,4,8,7,-9,8,7,-10,2,6,-10,7,1,2,-4,-6,-7,10,2,-5,-2,-3,-6,-5,3,-4,-2,-9,-4,-1,-7,-7,-9,-2,-6,2,-7,6,1,4,5,-7,10,2,-6,4,-1,-8,10,1,-6,-4,1,-8,3,6,-1,-7,-10,-5,-1,10,2,2,7,-9,-10,5,5,4,7,-6,-7,-7,9,3,-1,-3,2,-4,-1,-1,-8,-4,4,-10,2,-7,-8,-5,-6,-10,1,9,-9,2,8,2,-4,8,8,8,6,6,4,5,-10,-9,6,-4,-1,-6,-4,4,7,-7,-3,-5,-4,7,2,8,-4,-5,-4,-7,9,-3,-2,-2,-2,3,8,8,-9,-10,4,-7,2,1,2,1,1,-4,-5,-1,-9,-6,-2,-9,-7,6,-6,10,-4,3,10,5,2,-4,10,-5,10,6,-4,-7,-5,-2,5,-10,-6,-4,9,-8,1,-9,5,-1,-5,-1,3,2,10,-10,10,3,-5,2,8,-6,-10,-1,-8,2,-1,-6,8,4,-4,2,-6,-9,5,6,9,-4,6,-6,10,-2,10,5,6,7,-6,5,7,5,-5,-5,1,-7,-5,-3,-10,5,-3,-9,2,10,-6,-1,8,3,7,2,-7,6,2,6,6,-2,-4,7,-7,-5,1,4,-4,-7,-4,8,7,-5,5,1,-5,-8,3,6,-4,1,-8,9,1,-4,6,-10,8,-4,-5,2,-7,10,8,10,-6,1,5,10,7,-2,-8,8,8,-8,-6,-4,3,-4,9,-4,2,-10,7,-4,-6,9,-1,-9,-8,1,-7,8,-8,-10,-6,-1,-2,-9,3,-5,-10,-2,-3,9,7,-7,4,2,-10,10,-9,-8,1,1,-9,-2,1,1,4,5,-1,-6,10,8,2,-7,8,-3,-3,5,-1,4,-3,-5,-6,-10,5,-1,-6,6,-6,1,10,-4,-6,-6,8,-8,6,9,6,-8,-3,-7,-9,-7,7,8,-1,10,-1,-4,-8,-1,-8,6,-8,-8,-5,-2,-7,7,8,-1,10,-6,-8,4,-5,-2,-5,-8,5,6,10,-4,8,10,9,-4,-3,-3,-3,10,-10,-2,3,8,5,-9,1,-3,-5,4,6,-4,-10,-1,4,2,4,-8,3,6,-1,4,-10,-2,10,10,6,5,3,-1,-7,-10,5,7,-8,-6,2,3,-7,-7,-3,-2,-3,8,-5,2,2,-1,1,-6,3,-10,-4,-6,-7,7,-2,-10,-10,-2,7,-4,-7,5,5,9,-5,-2,9,9,3,-8,7,-9,-6,1,-4,-2,2,-8,-9,6,5,3,7,10,8,-2,-7,3,1,-9,-10,5,8,-10,10,3,3,-9,-9,-10,-8,3,7,-1,1,5,-10,-5,4,7,1,-1,-7,-7,-1,3,-1,-7,4,7,7,-9,2,5,-9,-10,-4,7,1,-10,-10,4,-1,2,-8,-3,10,-1,-3,-6,9,-5,1,8,5,-4,3,10,8,1,8,-10,5,-1,-8,-5,5,1,3,7,7,4,-1,8,-4,-5,5,3,7,-10,-10,-1,4,-10,3,-4,-3,4,5,-3,-1,5,4,-5,9,5,2,-6,-9,-3,6,-5,-10,-2,9,5,-4,5,6,8,-9,7,-8,-8,-1,-9,2,7,1,6,5,-1,2,6,7,-7,6,8,9,10,8,-9,3,2,-7,5,2,2,1,-3,-3,-5,-4,-4,-10,3,4,-10,-9,-1,5,-8,-10,-2,-10,9,5,4,-8,4,-1,-8,10,1,2,-6,6,3,-6,-8,10,-10,1,6,-10,-1,-9,9,-7,-1,-2,6,-10,-5,4,3,-1,10,-6,-3,-9,1,-3,9,9,-1,-6,-1,7,-5,1,4,-2,4,-1,6,3,-9,-6,-8,-6,-9,7,-1,8,-3,5,-9,-4,-4,-3,-6,-8,5,-3,2,-2,-4,-1,-3,-2,-7,6,3,-10,6,7,-2,-6,10,7,-1,-1,10,-9,-10,-9,-7,5,-6,6,10,5,8,-6,3,8,-6,8,-2,9,7,1,5,-3,-10,-5,2,-2,-3,9,-4,9,-8,6,-3,6,-4,-3,2,2,-7,-2,-6,9,3,-5,-7,-6,1,-8,8,-4,10,1,-5,6,9,9,4,-5,8,-5,4,1,-5,2,3,-6,-3,-5,-10,-8,-10,-4,-9,-1,-9,-3,8,-10,4,-6,6,-10,-9,-7,9,-9,6,-3,-2,-3,1,-4,1,3,4,4,1,10,10,-2,5,-8,-5,-8,-7,6,7,8,1,-5,1,6,-3,4,6,-4,5], dtype = "uint8")#candidate|13476|(1560,)|const|uint8
const_13477 = relay.const([1.551278,-4.044644,9.034772,2.610024,-5.901642,-6.444784,-3.362767,-2.183887,-7.282688,1.863439,-3.912677,-4.607245,8.678788,3.571114,-2.410723,2.770385,1.260057,1.764442,-4.941826,5.555830,-1.847796,6.752557,0.609719,6.618914,8.000131,5.983604,-0.025697,-1.270676,7.078552,0.423802,-5.425477,4.602321,-4.369882,-9.098318,-7.176866,9.276042,9.390309,6.106155,-2.567836,-7.641570,1.500061,-3.978274,-7.169790,-8.451563,-5.197646,4.975970,-6.338035,-2.655814,7.527834,8.285905,-1.412365,5.333591,5.698024,6.615551,8.989982,-7.892737,7.373629,7.258560,9.438372,3.528417,6.860677,-9.350722,-7.321419,-3.691720,-5.322792,1.102517,5.928890,-7.246162,8.124994,-6.010260,-4.434033,0.022921,2.151378,0.431882,-0.404427,-6.896061,0.335732,-4.249299,3.193249,1.124144,-8.609291,4.096159,4.773057,2.712291,6.729100,-4.763727,-9.700562,8.431965,-7.308003,-6.829856,1.172822,-8.209464,0.314806,-4.905423,9.191371,-5.864667,-0.217336,9.237905,-3.925715,-3.766000,7.559840,7.939351,7.998620,3.688474,7.510681,-5.671705,4.349239,6.502615,8.591334,0.049166,7.372891,3.971867,3.228571,-4.974683,4.639589,3.390863,7.005796,-0.804171,2.085006,-7.862241,4.154724,-2.655182,7.177075,1.310988,6.430797,4.418726,6.178241,4.387570,-4.357133,-1.884998,-2.174219,-0.900411,-9.578050,-3.640002,-8.257957,-7.395301,-1.373716,-4.450618,-2.468987,-1.456390,5.358270,-4.912642,-2.864071,1.070175,0.882198,-4.129914,-9.184182,1.870435,1.995508,-9.809038,-0.382642,9.363234,5.357744,-4.380327,-4.157786,-3.948463,9.995254,-5.783571,-6.473527,-6.215963,0.732931,4.936299,3.396930,-8.870198,5.073164,-2.797527,6.784066,-9.744218,-7.504028,-0.418899,7.452546,-0.510241,9.926333,6.325733,-6.556521,-2.642273,-3.482312,8.281792,-9.795219,1.405320,9.435654,-3.728479,4.157301,0.152462,7.963200,-1.630719,-9.145048,6.234167,7.287132,9.749901,-2.438322,1.281799,-3.381715,-9.497572,-0.389258,-3.298983,-4.949812,-9.803512,2.308495,9.067538,0.580162,7.212708,-7.753116,-8.235283,5.015579,0.672755,1.761614,3.147377,-8.423932,-1.216211,0.793471,-6.969989,2.609388,3.382640,-8.474357,-4.200856,8.451756,-2.874567,-8.966572,2.857464,-5.561542,-6.198057,-3.330588,5.804632,0.330977,0.524379,-8.719342,-7.928476,2.905450,-0.316270,-3.496229,7.562029,9.991009,1.046399,-4.039866,3.575490,-9.357019,-7.873320,1.573311,8.905001,-2.176167,3.954755,-4.662911,-1.336346,-2.467778,0.014711,0.294267,-3.067535,-5.962772,1.883396,-4.726104,-9.008107,-0.713418,5.634302,-0.835310,-0.928138,-1.654407,-7.810215,-5.136231,-4.962222,5.622282,7.068758,-9.803928,5.845422,-1.202478,-8.267796,-0.437165,8.198866,7.459432,-9.862516,4.087676,-7.443671,2.527029,-9.116035,-0.576536,-2.804967,-1.084053,-7.915066,1.696668,-6.654562,-8.149407,-5.151084,4.893316,6.541705,0.434505,-4.389681,5.416322,-7.845396,9.148675,-1.222375,1.555392,-7.727961,-1.597495,-5.531848,-0.960031,6.093640,8.151473,8.186874,8.022117,-6.606855,2.811682,3.942483,0.064907,4.438204,-0.305569,-3.097389,-8.854716,-4.181771,-9.654626,-1.960308,2.495966,4.943635,9.914079,1.288693,-6.020464,9.139611,-5.013652,-2.333209,-2.600834,8.744018,6.959741,-2.503412,-4.652118,-9.585273,-1.102081,4.385608,8.714990,-1.352889,-4.355390,0.742017,8.862276,-1.889372,-3.312590,-7.656484,-1.409795,9.289563,3.591478,2.697914,-5.756375,-8.821132,-6.973521,-8.067183,4.855832,-9.864575,-5.281799,-0.713339,4.301596,-5.060848,6.352308,-0.851923,-0.160310,2.877729,-9.982164,7.532623,-7.768895,1.831304,7.293351,-0.237605,-2.969667,-2.947853,4.943449,7.780153,3.778991,-1.601888,-1.722473,-8.271993,-8.021455,-3.514074,-7.124338,-2.502926,-8.528937,4.763313,2.185815,-7.411518,3.030200,6.028533,6.717785,7.509355,-8.058276,2.835505,-5.591170,7.700734,2.592651,2.131829,8.616304,-5.550619,0.440623,9.956390,-9.020158,0.393054,3.310553,-2.621468,6.907282,6.180057,7.281813,-8.747803,3.922498,-0.787732,7.473610,-4.911063,6.577235,-3.305099,5.929368,-1.162159,6.727057,0.346791,-8.819567,0.549788,2.651139,4.203275,2.630947,-1.778667,9.891524,8.373242,0.690725,2.179262,3.165062,9.760057,3.703649,-5.757163,6.454686,7.023332,4.831087,4.655007,-8.438255,0.453829,-9.744101,-4.572464,-3.654537,9.451308,6.872581,7.542150,-8.754487,4.337920,-5.100998,6.939699,2.429602,2.424107,5.444254,0.850668,6.389856,-0.163783,0.302278,0.523494,-3.255327,9.535409,6.035727,-9.368913,1.134126,3.366044,5.550244,-5.155863,-8.360900,7.459900,-1.065186,0.954801,1.826895,-5.968165,-1.907837,7.825095,-6.549915,-1.054128,9.894137,1.308510,6.542263,-9.321036,5.145990,7.896573,-6.982080,-1.007886,-0.561507,-3.035659,5.744445,-9.067375,-0.141021,-9.981232,-3.151625,-5.637187,-3.840028,-1.444642,-0.521561,-9.820840,4.526089,9.881552,6.711126,5.691193,0.184533,0.625908,-7.683150,-7.126623,5.484787,7.034534,-2.890060,6.265583,5.957640,-5.065221,-8.500516,-5.788819,-9.822243,8.606130,0.244988,5.673055,-5.660093,3.407002,-0.687209,1.523153,-0.133947,1.157969,-9.287586,7.698943,7.996186,-5.834742,2.665179,6.141841,-1.972287,9.418588,8.807893,1.182714,1.645439,-8.343166,-7.454802,-0.080369,-3.268574,9.091096,-7.199048,6.239930,-3.367361,-1.069578,-8.143237,-9.588946,-6.339139,-1.709383,-8.762595,-5.136221,-6.122892,-4.197525,-8.911091,9.831697,-8.990302,-5.966556,-8.819110,-6.197044,5.626392,-0.564703,4.963115,-1.349877,-7.359772,3.911968,-6.924063,-0.052261,0.698968,-1.240152,3.434096,-1.121547,-4.154858,9.165557,-6.784349,-9.587888,-6.965748,3.618047,6.163272,5.246553,-5.763151,-4.265926,-2.223680,1.211347,4.832872,-8.363539,-8.710765,3.378337,5.685603,1.978088,-1.539235,3.886040,-3.045298,-8.905294,-6.441588,3.359815,5.200698,-2.486604,-1.029773,6.083085,8.265369,8.662337,-8.657585,-6.684582,5.067001,-7.334861,8.685260,-3.569054,-1.084836,7.409102,-0.638753,-6.965432,5.324968,-6.280224,-8.723733,6.849287,5.819300,7.824323,3.404902,3.616929,8.552600,6.269449,2.036785,-8.111350,-2.804543,-2.920689,-1.862670,-7.218940,2.036275,-1.576403,-3.158963,3.289665,-2.830694,-4.986494,2.410546,-4.254782,2.638470,0.873771,4.577947,-2.662064,-1.462441,-7.839971,0.170580,-7.554171,7.020227,7.095559,-2.140411,1.853491,5.170146,8.202303,3.998514,-1.001838,0.987637,6.739000,1.519394,-7.567535,1.694075,4.651939,-7.657456,9.929230,-5.976024,6.177491,-0.605228,5.481069,-0.112851,-7.376927,-8.190766,-8.922140,-1.613091,-9.573742,-3.917818,3.070531,5.156462,-5.065661,-9.030918,-3.575347,-9.625862,-6.952059,-8.028326,6.138052,-5.700437,0.065293,-0.591908,-3.157998,1.591628,-2.235702,7.028500,0.612947,-7.878058,-4.827514,-7.873790,9.439474,8.878807,6.818176,7.874853,-0.509335,-0.447948,-9.017524,-7.827671,8.722727,4.909075,7.449571,-4.669165,-3.598416,-5.661358,0.121312,6.155329,-3.615096,-6.278428,-6.171345,-9.982795,1.266963,-2.656571,5.464758,-0.307145,7.446656,-2.451720,0.208948,4.767144,-7.799687,-8.938926,-8.470617,-6.542257,-2.891822,-0.311120,5.321817,-2.248538,0.547823,-8.591279,8.812226,-2.320594,2.880339,2.962287,9.015047,-7.712732,-5.263035,8.265966,-1.957436,5.739545,2.581227,3.105527,-5.319172,8.996023,5.700039,-7.008811,2.691516,5.812110,-0.757693,2.935169,9.648919,9.227100,-9.467683,8.269469,-4.324329,-1.963310,-8.705997,-4.842685,0.652204,5.568489,-9.666417,1.665667,-2.369518,-5.833226,9.780403,-5.978233,1.590936,-3.458062,-5.808516,-5.016603,4.724128,-3.664096,-3.256493,-6.946780,7.758085,-0.225476,-0.060431,8.071134,-5.061839,4.733765,3.671632,8.783874,3.596844,-5.316506,8.165967,-8.520367,1.563751,-8.736369,-4.586401,2.070036,-6.895667,1.290802,1.757512,5.315679,-4.360016,2.549350,-7.302548,-4.566236,5.431537,-6.240954,6.801013,6.054111,1.795271,-2.323299,-7.086392,8.467421,-3.396133,8.046274,2.746741,0.946688,5.089161,2.296576,4.988165,9.308399,8.360592,1.276938,5.526223,6.242375,5.664205,-7.516295,-7.127534,-3.125306,-8.910037,-9.978055,7.697585,1.056001,0.421259,-2.741372,-9.211452,3.815713,1.344199,-1.021243,9.854285,-2.986376,5.725341,-8.877152,-6.475772,-8.501562,3.891804,3.030204,7.404469,5.292446,4.894378,4.693213,-4.877738,6.474425,-4.673345,-4.976445,-9.092651,-6.343927,1.805245,6.227913,4.127882,-7.657964,-3.375302,0.261146,-5.592928,-5.162952,2.970191,1.958827,-8.202678,1.497903,-2.752580,-1.813594,-5.542435,-4.534835,-3.100492,-0.555623,-8.435863,-6.786138,-6.332639,-2.486669,-0.488199,-0.863891,-4.211147,8.394868,6.108484,8.410867,-8.654003,-5.873864,-8.532617,-6.166416,-2.910023,0.499222,5.477278,0.565890,9.192023,-5.834755,1.399323,7.219420,-6.247782,-9.172120,-6.050437,1.986717,-5.978303,9.998919,3.201096,0.312259,-5.933433,-6.804125,-3.869226,3.952709,4.572714,9.940807,5.303105,-4.279348,-9.064444,3.458713,3.637215,5.034701,-8.177730,-2.049823,8.976927,9.905564,-4.189228,5.398090,9.309302,1.293741,5.019191,6.614168,4.151765,-7.446958,6.404087,-3.291473,5.386772,-1.588487,7.213125,8.919051,-1.051146,-7.545809,-7.186129,8.834811,3.865209,-6.680976,5.145967,1.220839,6.626430,-5.952099,3.265548,9.434217,2.341849,-3.338662,1.766675,9.591181,-3.683192,-3.663045,2.376658,-9.785982,-8.876771,1.685917,8.183467,0.382457,2.035774,2.243075,-1.746310,9.235556,-9.660210,-9.764938,3.837461,8.624944,-3.741730,-5.181866,9.192584,-2.441610,3.096272,9.296830,-8.820637,4.441469,7.492567,-3.196123,-0.329315,9.527173,9.513185,-9.458046,9.610241,-8.970455,1.326280,7.763995,5.666607,4.744252,-7.096474,7.601193,3.861756,-1.910061,0.360454,-3.470991,-4.217985,-3.560845,-2.824524,-5.243187,-6.059579,2.285513,2.027652,-8.134334,-3.645420,7.461815,7.178919,6.495717,6.845096,2.758741,-0.589404,-5.696449,9.336027,-4.010161,1.725561,9.780781,5.986406,-1.057287,3.153667,9.563454,-7.858791,-4.398446,-0.363102,-5.178101,3.229802,-1.757556,8.167915,-2.915647,-0.213195,-5.004221,1.096190,7.212562,-9.091503,4.915385,1.734056,0.226649,8.862484,7.379675,9.945744,-2.471611,9.773635,-5.788128,4.302174,2.906119,5.296427,-5.321105,5.776034,6.274856,3.198179,4.090027,-0.342432,-7.186359,6.941273,2.450920,2.239364,4.737465,-4.749042,2.851123,5.316144,0.782017,5.830336,0.683758,-5.204380,-4.377565,-0.166002,-0.908805,4.511955,-4.579555,-5.233770,1.321272,0.768156,-2.898963,6.531421,-9.432728,-0.331277,2.122461,4.646168,-1.556201,-9.313254,9.472006,-6.501874,9.641334,-3.548316,-4.116963,1.865565,-3.850929,1.459845,-5.121557,-1.182281,4.584938,0.703512,-0.419373,2.478129,-4.254779,-8.999966,-2.245070,3.997964,-9.822558,-8.440535,-2.004414,-3.417829,-7.527061,5.700587,-0.463591,5.507165,-9.950580,8.842898,2.875964,4.628535,-6.063871,5.657515,-2.051519,-7.128380,-5.832855,-9.480530,-7.827814,8.782490,-6.546233,4.897910,4.763865,-5.896937,8.590408,-4.625288,-9.793560,-4.594706,7.341485,-2.815679,-7.339122,-5.516973,4.611572,0.394428,-7.374514,-8.455581,8.202609,9.734539,0.049282,-3.941566,7.739212,7.051590,-1.647470,-2.549816,-4.714931,-0.242381,6.022773,3.200999,0.304009,-3.645615,-2.823407,-0.238159,8.361152,-0.416130,5.533676,3.833702,2.627067,-8.413392,0.509762,-3.150958,7.001699,-3.794915,7.836575,4.381433,3.804678,-4.566585,8.235169,5.106265,8.675278,6.201591,1.006232,4.680884,7.929991,-8.841019,2.943366,-6.129700,4.554845,9.731030,5.738541,3.579341,0.656996,-7.254023,-7.317034,7.478492,8.448196,-7.879601,0.987733,6.341241,-3.185567,7.098191,-7.953183,-8.319652,5.769496,3.442859,2.392410,4.924917,-0.392968,4.760531,6.720837,-6.220213,2.763913,6.322985,2.754259,4.017738,2.777494,0.067756,0.920143,7.393757,7.886144,3.487495,-6.501829,4.583687,-3.554628,0.008576,2.199932,-8.248180,6.231634,-5.796244,-8.858203,-3.197971,-9.130660,-1.149817,2.159855,-3.633481,-5.465593,5.573303,-4.621557,2.120509,7.136121,4.670889,3.338290,2.619691,2.784413,8.901398,-1.248231,7.871290,7.723094,-6.494162,-2.225353,6.921536,-5.255164,1.826561,-7.676476,7.502016,9.210766,-9.236420,-4.551041,7.087633,9.246650,9.274774,-7.035099,3.971663,-3.151526,3.121402,-8.936388,2.894037,7.345423,-2.057418,-7.068708,-0.291900,-4.679176,-1.994991,-1.025331,-3.457082,-4.892030,7.770979,4.580048,-5.630174,-9.055420,-9.306671,-5.089880,6.925465,-4.859087,7.576508,2.725179,-5.513455,0.944732,-3.994687,8.248668,0.578764,6.368707,-9.402994,9.122815,-9.065528,-2.514489,1.833401,4.496873,5.985596,-9.260114,-4.191412,-7.296482,9.447606,0.634004,7.892537,-0.199098,-2.530569,-6.787824,-3.964664,2.053033,3.651071,6.220986,-0.492143,-9.040885,-3.468185,2.207147,-2.884611,-4.706122,8.613048,-4.206633,-8.805422,3.860222,-4.649541,4.327542,-9.508538,5.264922,3.777224,-8.696093,3.954086,3.491120,3.752500,-8.994048,-4.800549,5.169079,-3.315512,-2.915684,-5.602048,9.428990,8.173746,-1.062899,7.791451,-4.196212,-7.433161,7.937634,5.939539,-4.203028,9.451760,-9.415421,7.288897,3.870525,3.448001,-7.186508,2.100037,-2.104885,-1.289408,-4.306115,1.570848,-3.668750,0.123316,0.401000,-6.625574,1.323927,4.185195,7.182381,2.698303,-1.633074,5.506405,4.783690,4.335048,1.986153,-2.224205,0.845594,-8.930321,6.633391,8.303933,-7.746377,-1.356720,0.245797,-0.487822,-9.245999,7.194238,-3.115521,3.844142,-3.508600,-4.305001,6.952769,8.936395,-8.306679,-9.204868,-8.214405,-0.009183,-1.261503,-9.330517,-9.125183,-5.725826,5.882696,-2.590953,-2.348356,9.186455,-1.008588,6.195451,-9.195311,-2.202133,-0.070637,-1.335667,4.626717,-5.227703,-2.112946,4.978300,8.510107,3.804186,-8.450311,-1.424541,-8.318865,8.515999,1.231757,-3.769936,7.137262,-5.966784,1.151078,-6.903221,-4.414474,-9.574305,-4.489120,9.418785,-6.308186,-6.205876,-5.847319,6.726724,-6.747929,2.520355,3.882565,7.007093,6.337822,7.501281,-4.228987,8.040158,-3.227120,7.502569,4.168568,-5.199944,-0.367650,-9.199185,7.908858,7.344098,-9.358891,-3.645609,-6.016622,9.365065,4.654112,-8.809085,-6.287843,-9.168083,-8.600848,8.891007,7.708175,9.966463,-4.552948,-5.630759,7.639802,0.496677,1.847968,-1.093238,8.867295,1.325553,-6.724898,7.676356,3.667048,6.828310,7.115627,3.869815,-0.295525,-9.553988,1.524402,-2.077626,-4.029577,-4.662066,9.237427,8.572242,-4.217907,-6.927409,7.144227,-9.124410,3.358910,-5.212469,-1.698790,3.282043,-9.148803,-5.989201,5.442062,-9.571296,-4.939320,8.294173,5.890208,2.794162,1.877396,-2.730912,5.752291,0.125844,-6.978225,8.750863,2.409614,0.464176,3.513557,8.565553,8.878384,-9.900261,9.247471,4.058685,9.987433,-4.479143,-1.075380,0.591012,1.680034,6.100366,-1.390590,5.014525,7.421446,6.722159,-5.711656,1.823600,-9.146527,3.495873,4.003113,3.081984,5.855245,2.001729,-1.271032,9.454103,8.891138,-6.843201,-8.610887,-4.534998,-2.238075,-2.711133,-7.391204,-6.778389,6.436083,-5.066980,8.279837,5.004628,-3.441989,-2.682209,3.912079,-0.473865,-5.054319,-2.451411,-0.190867,8.781480,-1.718427,9.699416,7.223565,-5.746875,-9.904716,-6.422156,-5.937104,-6.141950,-6.553791,0.137498,6.198145,3.127797,-4.197259,-1.802551,-4.232523,-7.267398,0.441117,4.770493,7.118615,3.707556,5.603398,3.980853,-0.316609,-9.178739,2.891186,-7.211220,5.415547,-1.174460,-1.876800,5.530866,-0.321091,9.453264,2.411482,9.247713,-6.241929,-0.134799,-8.375553,6.287059,-4.111223,6.825220,-7.391261,-6.795134,5.016290,0.317122,2.768807,-7.912309,-5.400977,3.794279,5.446774,1.416132,2.132329,7.921873,1.614488,-2.561784,-6.782905,6.536310,-8.939707,-8.641805,6.521157,5.894578,-6.382544,-9.349316,8.960436,5.416299,-8.504043,6.835698,-8.123707,3.419621,0.954019,4.243444,-3.085928,-6.306658,-4.201147,-7.820342,0.242007,-4.761137,-7.150238,-5.154422,-5.368476,-3.567430,-1.368618,6.078053,-0.882360,8.233177,-4.123896,9.445699,9.936323,2.662476,-5.822288,4.370473,3.161831,-6.986806,4.502981,-9.482482,-3.123458,-1.365402,-2.489893,9.667440,6.391564,-6.301564,-8.271611,-9.961309,-5.925507,8.114331,5.551717,-2.714125,0.821478,-0.665653,3.640381,-9.791864,2.593478,2.463348,-0.551234,-6.843343,0.969641,-7.941063,-6.802740,0.521693,-7.279469,-7.700380,-1.670744,1.671826,0.669222,-7.772610,-3.744116,-4.292888,6.089727,2.670515,-2.674596,8.245614,-0.546645,7.938518,-1.458442,9.003148,-8.727417,3.033460,-6.023557,-5.693903,-9.803697,7.859776,6.764033,7.394013,5.252484,8.911160,-9.508546,7.315597,-1.661305,-6.832778,6.956659,6.527883,6.756953,-7.270045,4.485121,1.593736,5.751412,-9.263223,-8.722207,-8.057672,-0.382042,4.109488,-5.509801,-2.060006,-2.856529,-9.145160,-3.894072,7.091213,-3.247955,-8.810684,-9.539355,8.647050,-2.716343,-2.758585,2.801475,-3.067512,-3.375520,7.196684,-7.623238,7.651143,-6.117750,-4.325766,-4.147351,-9.684736,-4.220781,-9.575135,-3.927563,-8.101218,-9.046707,0.679913,0.240518,7.554006,6.300087,0.881283,-5.137797,-2.409884,-8.889210,-2.626571,-9.063501,9.598103,3.372660,5.568333,0.617735,-8.124497,2.230135,-9.073615,6.972379,-4.320826,-2.203027,-8.002128,5.008522,1.355641,5.335409,-2.769215,-8.991961,-0.215138,1.674378,5.355420,-3.020907,-0.527037,9.025493,-3.748537,1.150741,6.984764,-7.928359,-7.753470,9.047491,3.370227,1.306435,-2.316139,5.920423,0.772587,3.554604,-9.863349,-6.433926,2.615686,4.878161,-4.880499,-1.518704,-6.283801,8.594721,-9.160321,-6.846233,-5.876977,3.349410,3.868068,3.850897,-8.163461,7.712022,-8.408038,2.043788,9.420057,-9.876211,4.536671,2.544260,6.967909,4.006550,1.109091,-4.688617,3.885412,8.866184,-2.677572,-6.901501,1.802968,4.362264,9.031017,4.061512,3.729450,4.012487,-4.927592,-2.978915,7.009663,-2.025271,7.293464,-9.702514,-6.663044,7.818496,6.761445,5.439541,9.827075,-9.066543,-6.415039,6.639381,8.974260,-3.413723,-7.114637,-3.714811,-6.215690,-4.254048,5.505172,3.164977,-0.870830,-8.801580,-8.700886,-0.088246,6.839407,-3.842100,-8.585068,7.470004,-6.311381,-4.185695,0.430454,4.082958,0.211355,0.457196,-8.241627,-1.350520,-4.821394,-8.231551,2.168840,-5.379555,-7.819865,-4.847743,7.477378,-3.212860,8.040254,-0.895781,5.789427,5.612065,0.792261,2.716305,4.558779,2.397850,8.684728,-5.071633,-7.667634,2.784141,2.289557,-3.144812,3.482756,4.077954,8.467127,6.852035,5.187172,7.946195,-7.780942,-5.852537,-6.605569,3.772162,-5.511919,-5.026297,-6.235254,1.078740,8.785385,-4.765174,-7.253864,-5.933307,6.351617,0.763887,-5.067095,-7.049379,4.932937,-7.968579,-5.761791,4.930292,8.751617,3.973418,1.154221,6.906111,-1.724764,-6.883336,0.140661,-8.966090,-5.552125,8.834999,-5.169760,0.080238,6.674187,-5.635369,4.733587,-9.530122,8.288332,7.751577,-7.008074,-3.641665,-3.153649,8.365715,3.311346,3.042390,7.827358,-9.991614,-8.737054,-2.272262,5.993727,1.759373,-3.272223,5.309006,9.768168,8.321419,3.547454,6.810404,-6.805617,-2.490848,-4.765266,1.307501,-0.381451,-1.139676,-0.947744,-6.595734,0.098464,-7.413938,5.173962,8.281211,-3.006513,-4.800119,-2.450138,-1.011451,9.590710,-6.620135,-7.690410,8.294617,9.364513,2.788335,-3.399737,2.629138,0.952882,-3.054455,9.746881,6.340851,-4.542272,-5.404280,6.629769,9.685842,8.735046,9.631859,8.839343,-1.154544,-8.199264,-5.361690,-3.084395,-2.561108,-2.882428,-0.741396,-2.293025,7.158149,-5.681627,-3.039700,-3.099062,-6.569671,0.123215,4.441604,-6.497017,-8.234924,4.318609,-9.004335,-8.382334], dtype = "float64")#candidate|13477|(1950,)|const|float64
call_13475 = relay.TupleGetItem(func_6762_call(relay.reshape(call_13471.astype('uint8'), []), relay.reshape(const_13476.astype('uint8'), [1560,]), relay.reshape(const_13477.astype('float64'), [1950,]), ), 8)
call_13478 = relay.TupleGetItem(func_6767_call(relay.reshape(call_13471.astype('uint8'), []), relay.reshape(const_13476.astype('uint8'), [1560,]), relay.reshape(const_13477.astype('float64'), [1950,]), ), 8)
output = relay.Tuple([call_13471,call_13475,const_13476,const_13477,])
output2 = relay.Tuple([call_13472,call_13478,const_13476,const_13477,])
func_13479 = relay.Function([], output)
mod['func_13479'] = func_13479
mod = relay.transform.InferType()(mod)
mutated_mod['func_13479'] = func_13479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13479_call = mutated_mod.get_global_var('func_13479')
call_13480 = func_13479_call()
output = call_13480
func_13481 = relay.Function([], output)
mutated_mod['func_13481'] = func_13481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12065_call = mod.get_global_var('func_12065')
func_12067_call = mutated_mod.get_global_var('func_12067')
call_13587 = func_12065_call()
call_13588 = func_12065_call()
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_13607 = relay.TupleGetItem(func_8401_call(), 1)
call_13608 = relay.TupleGetItem(func_8402_call(), 1)
func_11244_call = mod.get_global_var('func_11244')
func_11246_call = mutated_mod.get_global_var('func_11246')
call_13611 = relay.TupleGetItem(func_11244_call(), 0)
call_13612 = relay.TupleGetItem(func_11246_call(), 0)
func_8872_call = mod.get_global_var('func_8872')
func_8874_call = mutated_mod.get_global_var('func_8874')
call_13615 = func_8872_call()
call_13616 = func_8872_call()
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_13618 = relay.TupleGetItem(func_6811_call(), 0)
call_13619 = relay.TupleGetItem(func_6813_call(), 0)
output = relay.Tuple([call_13587,call_13607,call_13611,call_13615,call_13618,])
output2 = relay.Tuple([call_13588,call_13608,call_13612,call_13616,call_13619,])
func_13626 = relay.Function([], output)
mod['func_13626'] = func_13626
mod = relay.transform.InferType()(mod)
output = func_13626()
func_13627 = relay.Function([], output)
mutated_mod['func_13627'] = func_13627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_13630 = relay.TupleGetItem(func_7800_call(), 0)
call_13631 = relay.TupleGetItem(func_7801_call(), 0)
output = call_13630
output2 = call_13631
func_13634 = relay.Function([], output)
mod['func_13634'] = func_13634
mod = relay.transform.InferType()(mod)
output = func_13634()
func_13635 = relay.Function([], output)
mutated_mod['func_13635'] = func_13635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mod.get_global_var('func_8787')
func_8789_call = mutated_mod.get_global_var('func_8789')
call_13639 = func_8787_call()
call_13640 = func_8787_call()
func_12684_call = mod.get_global_var('func_12684')
func_12685_call = mutated_mod.get_global_var('func_12685')
call_13658 = relay.TupleGetItem(func_12684_call(), 1)
call_13659 = relay.TupleGetItem(func_12685_call(), 1)
func_553_call = mod.get_global_var('func_553')
func_556_call = mutated_mod.get_global_var('func_556')
var_13695 = relay.var("var_13695", dtype = "int32", shape = ())#candidate|13695|()|var|int32
const_13696 = relay.const([-2,8,-9,-10,3,-3,-8,2,-4,9,-10,-3,-8,7,3,-8,3,4,4,10,4,6,-10,-10,-1,-8,7,10,-4,-7,-2,-3,-3,-1,-10,4,-6,-6,1,3,-6,-5,-2,8,3,-4,-2,-4,-5,2,5,1,-6,-8,-4,9,1,3,-10,-9,8,-7,-10,7,-5,-3,5,-2,1,-8,-2,-3,10,8,6,-2,-1,-7,10,-10,-5,7,-5,10,10,8,-2,7,-8,-1,-2,-3,10,8,5,6,9,7,4,-9,-5,6,-2,9,-8,6,-1,-5,-8,4,-10,-1,-4,4,-8,-2,-4,2,1,-5,2,-1,8,-8,10,10,-2,1,-1,-6,10,4,6,7,7,-10,-3,4,6,10,3,8,-10,3,-1,-10,7,-4,-10,-4,-5,8,3,1,-5,9,-10,-7,-3,-2], dtype = "int32")#candidate|13696|(160,)|const|int32
call_13694 = func_553_call(relay.reshape(var_13695.astype('int32'), []), relay.reshape(const_13696.astype('int32'), [10, 1, 16]), )
call_13697 = func_553_call(relay.reshape(var_13695.astype('int32'), []), relay.reshape(const_13696.astype('int32'), [10, 1, 16]), )
output = relay.Tuple([call_13639,call_13658,call_13694,var_13695,const_13696,])
output2 = relay.Tuple([call_13640,call_13659,call_13697,var_13695,const_13696,])
func_13702 = relay.Function([var_13695,], output)
mod['func_13702'] = func_13702
mod = relay.transform.InferType()(mod)
mutated_mod['func_13702'] = func_13702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13703 = relay.var("var_13703", dtype = "int32", shape = ())#candidate|13703|()|var|int32
func_13702_call = mutated_mod.get_global_var('func_13702')
call_13704 = func_13702_call(var_13703)
output = call_13704
func_13705 = relay.Function([var_13703], output)
mutated_mod['func_13705'] = func_13705
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13724 = relay.const([[[5,7],[-10,-5],[-5,-1],[-5,2],[7,-5],[-2,1],[10,-4],[7,4],[-4,5]],[[10,-10],[2,-5],[6,-10],[5,-1],[2,9],[-3,10],[1,-1],[9,-10],[-7,-3]]], dtype = "int32")#candidate|13724|(2, 9, 2)|const|int32
var_13725 = relay.var("var_13725", dtype = "int32", shape = (2, 9, 2))#candidate|13725|(2, 9, 2)|var|int32
bop_13726 = relay.bitwise_and(const_13724.astype('int32'), relay.reshape(var_13725.astype('int32'), relay.shape_of(const_13724))) # shape=(2, 9, 2)
var_13735 = relay.var("var_13735", dtype = "int32", shape = (2, 9, 2))#candidate|13735|(2, 9, 2)|var|int32
bop_13736 = relay.left_shift(const_13724.astype('uint32'), relay.reshape(var_13735.astype('uint32'), relay.shape_of(const_13724))) # shape=(2, 9, 2)
func_5719_call = mod.get_global_var('func_5719')
func_5724_call = mutated_mod.get_global_var('func_5724')
const_13742 = relay.const([[4.827613,5.355038,5.186557,4.341824,-4.710317,-7.552801,4.911576,-3.615084,1.662856,-7.252786,1.959245,-0.721141,-1.918827,7.737792,2.184632,-9.452455,3.959918,8.438346,-7.985654,-8.973325,-3.742983,-4.759825,7.609302,4.638122,4.480722,-1.920727,8.476680,-5.597860,-8.269260,-9.295138,5.569176,3.850980,-6.596722,-7.316146,2.333338,4.791849,4.565462,0.014697,-0.685312,0.686689,-2.462385,-3.308311,-9.085055,8.245833,-9.904775,-1.764478,-2.330557,8.819945,-5.584667,-1.104652,-6.345086,8.363810,1.634205,4.147454,8.844554,5.293905,-4.277379,8.982927,-8.649586,-0.538649,9.981778,-8.261058,-1.130509,-2.110733,6.696478,-0.482716,7.879667,2.557579,-1.144616,-5.492531,8.590419,-0.788258,-3.731213,-6.288115,-3.363697,8.623207,5.878510,-2.899141,4.747708,-8.619020,6.407298,5.635376,4.886277,4.452425,2.707655,0.052852,6.293816,-7.045923,-3.208257,-9.887496,5.299737,-0.319544,6.930043,-5.094820,8.882482,-8.180359],[2.826002,1.125984,-0.791166,7.578376,3.334326,9.033828,-0.240284,-0.909798,-7.688920,5.867823,-4.810792,4.321742,-2.221433,3.245705,-7.194711,-3.445385,2.839811,-7.922895,-2.383746,5.270257,0.970584,-9.193335,-4.103436,-0.807031,2.929521,4.307056,3.702943,-8.298642,-0.842034,2.674598,6.570235,9.319088,-9.625802,-8.292326,0.365237,-5.185827,-3.878066,-6.996772,9.531906,-6.272216,-3.137150,-1.631592,-1.264436,-4.454520,-9.637524,5.606939,6.638860,-4.381198,8.037985,5.068426,-1.398528,5.092120,-9.979210,-2.389258,-6.394600,2.648012,-3.815807,-8.801202,-1.311777,6.711751,-7.552904,-6.339143,8.906638,0.313596,0.615145,2.853738,-6.330676,0.505567,-7.384574,-4.505235,-7.794210,-2.512832,-5.457508,4.659126,7.329292,0.026403,1.820153,2.275881,4.861518,0.578601,9.931697,-2.035196,5.736882,2.393868,7.354104,-4.740599,0.540582,-5.714219,7.654229,-6.100774,8.403460,1.535953,8.098140,1.093441,1.163771,3.670657]], dtype = "float64")#candidate|13742|(2, 96)|const|float64
var_13743 = relay.var("var_13743", dtype = "float32", shape = (1848,))#candidate|13743|(1848,)|var|float32
const_13744 = relay.const([-3.980624,-7.037143,-0.660332,2.024949,-7.816243,-1.689172,-6.446794,4.919183,2.898294,-2.535334,6.741238,3.730426,4.162445,-4.885090,5.170279,-4.623601,1.887541,0.115234,1.815807,-7.705020,-3.732732,8.579796,-8.735576,-1.817941,-5.462333,-6.558557,1.837788,3.876496,-2.421751,8.774109,7.233691,-2.789255,3.830355,2.922588,-2.060290,-1.542979,-0.750482,8.367529,-1.396645,-9.954546,-0.020303,8.156366,0.888956,1.958109,-3.737269,9.236698,-6.593455,-0.606130,-4.161044,-6.661371,0.662899,3.987439,0.794851,-5.504607,2.704727,-4.432946,-2.011625,5.065232,-2.705009,4.797435,5.811418,-4.939424,-9.796227,6.100348,-4.052147,-5.682913,1.286158,-5.175923,-6.019629,-5.281533,9.243215,-1.884471,-9.463769,6.083421,-6.115072,5.423235,-9.918154,8.159126,5.701798,0.011595,-9.032916,2.905284,8.933333,-4.822859,7.847264,0.429230,3.349348,-6.444623,7.280875,-8.484033,-2.754811,-8.829366,-3.742232,-4.574396,-9.322195,6.025921,6.396237,-0.365488,-9.278947,-3.627188,-8.460152,7.037657,8.977981,2.458068,4.959586,-0.230618,-9.405628,-5.677183,-3.283845,-4.077473,-5.268248,-0.216017,-4.835859,0.200461,0.755063,-2.905621,7.116496,-4.930889,2.910879,-8.313184,0.377397,7.269406,7.554763,-2.582889,-6.002772,-0.747679,3.983973,-1.482625,-7.648274,-7.379563,4.741665,2.693431,-2.450586,-8.604572,7.832076,7.638236,6.120537,-0.137811,-1.655728,5.892656,9.623666,-3.285192,-5.667615,4.138340,-9.365748,-7.076389,-3.828995,-0.913938,2.254216,4.463986,3.534856,-5.835685,6.496780,1.425667,9.731692,-1.688035,5.978116,4.402778,9.257819,-1.865578,9.434079,5.260168,-0.346656,-4.088454,-5.474955,-5.458989,-6.698985,5.945209,-4.391279,-7.973286,0.987300,-7.396801,8.802425,-0.246563,-0.556828,-5.670958,6.967142,-9.106637,8.172004,-7.896482,-0.412376,-2.709477,7.024530,-5.509240,-5.341094,6.272206,9.632627,-1.901684,-3.215351,1.171340,3.317920,-2.245367,6.785730,-2.015690,2.777110,4.128133,-6.169034,2.456080,1.664163,7.857174,-9.350902,2.443795,-7.079650,-3.808040,-6.283721,-6.846849,5.748060,-1.153132,4.114705,6.710097,9.116726,-6.369325,-7.246530,3.184571,9.983137,-6.000512,-6.710543,9.753580,3.415680,7.910847,8.011794,-8.981503,-7.231752,3.779390,6.964200,-0.340995,4.231319,-1.594739,-1.173302,4.879826,-4.026280,8.311823,3.043783,-4.308254,-7.778111,-0.301137,6.471097,-1.254195,-5.173175,6.590894,4.375811,-5.852250,-6.259003,-4.627643,6.910298,-4.347043,1.628164,-4.958038,-1.166521,-0.305091,-4.320199,-2.102779,5.077541,1.653074,-1.153236,3.147510,-2.346314,4.474987,2.566812,-3.830882,2.602030,-4.747232,-3.998232,-5.601003,6.341742,-5.138391,7.937943,5.593670,4.951245,-4.201373,5.468105,9.579929,-4.005188,-5.891912,3.793255,-2.941293,8.308783,5.364048,0.163550,-8.680772,-6.721150,-7.854136,2.337810,-5.193699,-5.901945,3.351106,5.054146,6.059442,9.149702,9.552722,-8.135565,8.264203,-4.235270,-1.436288,-8.499790,8.015495,6.092176,5.931497,8.088783,1.833394,-4.395396,-8.938718,-3.376049,6.334290,0.914084,-9.922184,-5.837782,-7.726441,-9.726568,-7.056826,3.275284,-2.384585,0.909214,-3.741035,4.058059,-6.777487,-3.834729,2.023653,0.194897,-9.178065,5.445461,-5.373209,-7.679036,7.806271,5.104381,-3.837245,2.799875,4.377765,-1.014878,6.933429,-7.634287,0.936818,-5.224591,8.896080,-3.870266,5.581408,-9.722924,6.039819,-7.869357,9.084173,0.343307,-9.469644,-2.105143,8.065094,1.754937,0.289592,4.695338,-5.053178,5.518320,3.191206,5.088332,-1.766358,-9.215201,7.543920,-4.230180,5.667833,-6.546809,-4.971480,6.303914,2.581458,-7.830206,-4.450049,0.609219,-9.360117,-2.584313,-5.520929,-0.492656,0.235136,4.450516,0.903412,-1.394862,9.290239,-0.564277,8.994196,2.882279,3.520704,5.330870,7.491885,-8.891439,-5.195801,1.775926,1.550052,9.869326,1.189056,6.997740,-2.926328,7.209766,-9.880535,6.631775,7.088197,-4.802641,-0.233558,7.428634,-2.422468,7.144808,-7.852220,-1.438569,-8.659476,4.615938,-8.373425,-1.738624,-4.482483,-8.983810,-3.598376,-0.754906,-5.256327,-9.534553,4.664035,4.445280,8.021243,-4.407152,4.178843,0.419299,-4.557162,5.772801,8.566713,7.304078,2.549966,-9.800396,1.063541,-6.049591,9.979278,-7.522479,-2.687649,3.873819,4.871402,6.547008,-8.399635,-4.222845,4.220434,2.939235,-0.284538,-6.960623,-0.638133,3.618471,-0.773397,7.326646,-7.994162,-2.488199,1.838985,-4.014292,3.495596,-1.232117,3.755035,-0.446604,-9.270117,9.783003,-0.570563,7.797398,6.022812,-1.470280,-5.296253,5.078290,2.133719,4.271128,2.163800,8.102461,1.174013,-0.232875,8.432351,-7.307369,-0.599054,-8.893775,1.464925,9.317913,-0.112506,-7.364391,-1.447108,8.643621,0.830547,-4.455219,-7.712189,1.214447,0.060515,-0.291494,-0.542596,5.385471,5.977381,5.276555,4.156114,2.621117,-1.559814,-7.074640,0.048906,2.892014,-1.912163,-0.440495,9.064165,-1.910017,2.033645,7.846299,2.620442,4.129816,-7.786642,-7.116231,5.703707,4.917020,8.952353,-1.676920,9.590561,-2.829903,-2.630914,4.137009,-4.144851,-0.919765,-4.294422,-6.035698,-3.530140,-4.416308,-0.699021,-7.011138,-3.009793,-4.693500,8.101513,1.347816,-6.320906,-6.704444,-8.958707,-2.830121,-1.379641,-1.106032,9.644605,-8.930223,-9.203931,-6.855571,1.074836,3.830125,0.551483,-5.732541,-4.973873,0.326551,3.232061,0.222093,0.537148,-2.350940,9.065558,5.920571,1.776150,-1.222132,-2.928892,8.721684,-3.647671,-4.930432,-5.315483,-5.345654,-9.791066,0.672057,-1.371601,3.867565,-8.008188,6.693053,-2.441374,-4.222515,-4.334935,-0.425252,-8.435973,5.957660,-7.570586,-4.442060,-6.260247,4.120712,-1.912454,-8.596550,-2.451649,3.092678,2.696928,-7.689466,4.497820,-6.727071,6.337650,-7.543134,-2.801915,-2.901773,9.751285,7.983943,-0.184201,-2.048462,0.319566,7.644906,-9.443609,-6.869955,2.519431,-7.623844,-5.119099,-2.239047,5.779084,8.318608,-1.487354,-5.861631,-9.028439,3.309270,-1.155507,2.447910,-5.495536,2.829397,4.760528,8.375867,-7.464678,1.042453,-6.179785,0.195472,8.740377,2.762078,-2.458447,4.750292,1.662020,7.953846,9.059292,0.046080,5.344396,-9.393514,-0.953896,6.654059,1.680793,0.828856,1.124457,1.789361,3.257060,-0.961792,-6.971301,-6.114619,4.848978,-5.272460,3.105458,-5.838127,-9.626250,9.096185,-0.797940,-8.206820,-6.004184,1.274852,-6.072179,-5.618020,8.089188,0.695142,-2.659697,0.965178,-3.012693,-5.168960,4.792443,-0.649024,-5.625254,5.864746,2.656153,-9.790268,2.579525,9.648316,1.807489,-3.132291,-5.306548,-7.114462,7.568195,-3.404175,6.693763,0.734956,-2.734798,8.696160,-8.422371,7.866731,-8.125282,1.999979,-0.787375,9.871402,-6.864881,-6.301347,5.297635,7.263879,3.465509,-0.644246,4.048751,4.643752,-3.979549,-2.575593,9.576235,-2.972930,1.475482,-7.758887,-6.317864,2.705971,4.391700,9.811694,6.630453,9.686816,7.076055,1.137894,-6.969710,-3.513080,4.073874,3.284657,-0.626867,-9.890772,7.048678,9.464253,-5.640344,-4.188322,1.286423,3.172105,-9.869021,1.704537,-9.322392,-3.939697,3.241415,8.704229,9.838156,-8.048915,-4.623379,-9.790509,8.156288,9.822924,-9.966126,7.148362,-3.229013,-9.778064,5.727764,-8.358036,1.523446,-9.719830,8.563323,9.330559,-1.920907,-5.366976,5.151496,-6.754298,2.707982,-1.064794,0.402409,3.163678,-4.822799,0.970927,9.808963,-0.408999,-7.509394,8.884312,-9.550355,1.760052,-2.234502,-9.211657,-8.700503,-1.646800,-6.946307,3.944247,-8.934883,2.416912,4.404132,8.440869,-2.296366,2.693716,-8.174596,-7.904677,2.967189,-3.604040,-5.825113,0.369987,0.710056,-6.844271,6.830005,-2.122581,-3.589934,-3.541320,-3.388251,-3.848042,3.230935,4.048868,-6.303249,9.993782,0.651458,-8.106602,-7.099357,-4.481035,1.041358,3.399736,0.010372,1.750226,-5.290955,8.001786,7.270537,5.015080,3.828199,-8.164344,1.863076,0.528566,7.750103,-6.083706,-4.322784,-2.653677,9.852795,-9.856927,5.613598,-6.014564,9.285572,-1.447491,5.346006,-0.099111,-0.225788,-1.619631,-1.976316,6.825584,5.142067,0.588943,-3.872036,-4.080222,1.064459,-7.662616,-9.347841,-8.275545,-0.115805,-0.619719,4.588112,-4.602865,2.342210,8.669504,3.809409,-8.849934,-3.666304,-9.303899,7.336705,-7.726660,8.064566,5.239789,7.657448,2.423573,-9.484493,8.368234,-5.659575,6.796892,-8.371496,8.228964,8.724650,9.806828,1.454508,8.042266,-7.454859,-6.941710,-2.374328,1.773051,5.943582,-8.658230,-9.665452,0.871905,9.343804,-9.210520,0.399845,6.541203,9.773918,-3.031735,-0.045074,7.472400,2.600185,-7.849467,4.852091,2.124555,5.278549,-9.067776,6.273964,-7.980288,7.990724,6.684822,5.470622,0.477778,1.139134,5.226447,3.261320,-2.889354,-9.046556,8.300855,-2.993928,1.085470,-6.551326,6.536286,4.043022,-6.720447,-9.700537,-8.725107,4.594044,6.370088,1.031073,-5.341010,8.182495,-3.165630,-2.799653,-2.302422,-6.381461,-0.697941,0.618656,0.835792,8.487488,6.974676,0.345298,4.038785,-0.854599,9.526187,-2.103006,-4.063453,-3.006031,6.538054,-0.303328,7.799397,3.779871,8.702394,3.603706,-3.422299,0.019467,-1.881959,9.906713,7.998888,-8.701707,1.548845,-7.783572,8.270789,-0.472630,2.362833,-9.568261,-1.088851,-9.008137,-7.473896,-3.976246,4.295292,0.245973,-9.139413,3.559807,-0.451053,-9.547414,-3.482769,3.735610,1.552847,6.781772,3.965593,8.025685,2.090822,8.197668,0.236782,-2.961440,7.296323,-4.209519,-8.877469,7.646425,-5.045023,9.454382,5.819271,-5.167806,-7.988804,4.004901,2.747218,1.309253,7.737691,-9.258489,-6.224725,4.477545,-1.602740,1.816230,9.478719,0.118904,-5.528487,0.596472,-7.322534,-9.161183,5.061933,-1.533386,-9.490114,7.529817,-7.898130,-0.971634,4.128933,7.625747,-0.366057,-5.722942,3.504294,1.311251,-0.061080,6.608379,-6.902812,-4.962581,-8.096161,-1.443981,-6.959336,-3.580373,6.888055,-7.961103,-8.002007,9.544982,-4.215922,-3.431687,9.309236,-6.256687,-8.143068,-9.456114,9.612006,-6.177962,3.818658,8.770206,9.506324,3.321342,-0.618878,2.355910,7.129429,4.459011,-4.252578,9.842996,2.632937,-2.695205,-1.173370,-9.934981,2.159053,8.803131,6.723280,-0.924486,-2.594949,-7.550826,7.412032,2.101755,-1.161562,7.533874,-1.147164,-9.038166,-9.977790,-6.670073,-7.636382,-8.150368,5.829004,-4.387284,-8.310247,7.292409,-9.086688,-3.207494,6.260492,-3.104988,-9.943519,0.489410,8.271908,0.667163,-1.163883,-5.910873,-8.687201,-5.239704,-8.830698,5.118846,9.819886,2.741184,-9.652276,-0.553005,9.769024,5.610331,-9.554020,-9.377438,-6.226051,6.911529,5.562642,8.274959,-0.632800,-7.880331,2.321716,-7.294203,-7.954045,-1.021553,3.039610,6.878682,-1.268525,-4.403039,4.960225,-9.781653,-8.885912,-4.861454,7.091635,-6.983803,6.491527,-2.765329,-6.151723,3.935598,-6.336653,1.989761,-6.169900,-7.480604,3.541467,9.369289,5.134120,-6.573944,3.006387,-1.956040,5.455217,0.301400,5.694908,4.556236,-3.848363,-7.372984,-3.371230,-5.729743,-0.112067,2.199252,7.211950,-8.159551,-9.300596,2.085957,6.820947,-0.319805,-8.827294,7.560718,0.239070,9.049898,-4.210103,-7.971617,9.305910,4.131008,0.751417,3.896372,-1.901591,-0.316755,-5.064191,-1.816064,5.120204,-4.725390,-2.624992,2.440817,-2.931413,0.960419,-1.921158,-5.980974,-2.636423,-4.925821,-2.994550,4.314393,7.092424,-8.464325,9.686512,-4.459841,1.955371,-4.800528,-2.423230,-6.373687,-6.059982,5.153645,2.084038,-3.972464,-0.195351,-6.412911,-6.445081,8.561082,0.626424,3.761872,-7.933304,5.811346,6.549465,-8.191291,6.283340,-2.316363,-0.029192,-5.084442,4.721843,-4.560189,7.016078,2.068824,-3.333008,-6.864911,-4.053659,-4.459595,5.382732,-4.754160,9.309601,-0.521499,9.633205,-8.486864,7.772245,-1.846130,3.566661,-6.961543,7.192199,-4.965572,-9.923843,8.577224,-7.533886,3.683576,8.178027,-2.336377,-8.672094,3.481388,-0.323893,-1.099108,-3.062084,-5.203069,4.813353,3.086750,-0.731239,-8.351946,-6.009216,8.454339,2.578027,-1.239479,2.613219,9.672448,0.530034,2.112057,-8.422814,6.762138,-3.205745,-6.969622,-6.532332,-1.653560,6.519034,6.363674,-4.647899,-8.524558,-9.193951,-5.448605,-7.800232,8.146124,-2.217730,7.473196,-1.671590,-9.687189,-0.645888,-2.987646,-5.113114,-7.651449,6.113677,9.659859,-2.059166,1.359602,-0.702406,-5.099274,5.266881,-9.517299,5.200548,-6.002518,1.985591,-9.179986,5.584228,-0.415681,-3.705884,1.692938,0.294916,5.251397,5.181756,-5.289335,8.458445,-4.717448,-0.963092,-2.886970,-2.942728,-4.681713,2.273127,9.748612,8.430641,-2.712823,-4.265393,-6.124557,-8.362880,-9.357112,-0.019280,2.239530,7.011005,2.319727,1.634724,9.545085,-9.415876,6.756910,3.227113,7.047289,-9.149950,-5.590561,4.291236,-0.216682,-2.756564,0.883212,1.041374,-1.267659,-7.214084,1.793011,-7.857556,0.412200,-5.030939,-5.058825,-3.425437,-7.983305,-4.691952,8.786674,5.859024,1.664148,-4.328642,5.910369,-7.569678,6.782930,3.186798,-7.160494,9.798260,-1.009292,-9.559530,8.749369,-2.506421,0.553901,-2.518998,1.214883,7.744396,-6.275876,8.905480,3.389531,0.221610,9.249950,3.602435,-5.245710,6.134527,-0.209261,-8.984820,-5.484046,-7.676448,6.919144,0.387118,-5.147032,2.285183,-2.811439,-8.684137,-8.404871,-3.894808,-0.602134,8.160929,2.308408,-2.118971,-2.389295,2.906025,6.471653,3.487164,6.492090,9.547594,9.673984,-9.383183,-3.851148,2.867860,-7.821255,-0.950485,-0.951398,-0.061013,-2.959584,1.327297,6.702653,-4.521729,-2.605474,6.684001,-4.583798,-4.671507,4.916721,1.260077,2.247453,2.896040,1.419366,2.877792,5.226310,2.427859,-3.029740,7.409489,0.626061,-6.690498,8.905519,4.475778,6.091587,8.859365,-8.551231,-5.758154,6.268931,-2.711514,5.945525,-9.899235,7.489710,-6.642147,3.073877,3.500566,2.130392,-5.689438,4.652946,-2.774942,6.328387,0.055382,1.758186,-0.663269,4.768426,5.554432,-0.233118,-7.031622,3.964955,5.666416,-6.477677,8.171707,-8.867298,-3.860452,-4.747900,-8.553171,-2.692475,9.545305,4.736571,-6.853940,-4.594832,1.389735,-6.396528,-8.323649,7.770797,-1.140945,-3.873878,1.052638,4.860355,-6.499503,4.222305,-2.222203,2.555972,6.391606,2.748322,4.127480,8.789199,-9.110428,-6.507302,3.270933,-3.287554,0.889961,6.143265,9.005640,-5.508425,-7.484794,7.113492,7.833511,4.249456,3.101627,9.968715,-3.251974,-5.193039,-0.646286,-6.621655,-2.529072,1.962682,9.230174,-4.656899,9.934857,9.520032,-6.896262,-6.625237,5.201870,-5.718212,-8.186581,3.477040,-4.821685,7.390922,2.970685,-1.027264,-7.399096,6.755849,0.722917,7.190112,7.573382,-0.712748,1.190296,0.903521,-5.260630,3.730852,6.801458,-6.308171,-6.401410,-8.245371,3.636979,3.484928,-4.609495,9.838256,5.909435,9.637443,2.433016,-2.504630,-5.107021,9.419783,-8.614203,-4.465731,-7.221987,9.091369,-9.776650,-2.138830,6.476742,-1.356487,-7.719876,4.824119,-7.367337,-8.944626,-8.343069,-7.283840,4.065849,-2.315148,-5.102384,7.490737,1.818273,-1.707092,3.590464,7.809492,-6.581159,-5.132541,9.102230,-7.356805,-1.881904,-3.881573,-1.935056,-2.159384,-1.912062,6.945568,8.046224,2.665825,5.112184,-2.822995,-4.368731,5.269796,1.727350,-8.662534,3.378697,-8.905505,4.225415,5.492450,2.505718,4.427996,-4.643660,9.397453,-4.977864,-5.672071,-7.356059,-2.500117,-9.198084,6.488699,4.573636,-3.162611,6.590464,4.598171,9.058917,-9.933382,-2.330437,6.941249,-9.442354,-9.533708,6.720576,-8.526370,3.245776,8.366688,3.354966,-0.280575,-2.766254,0.663663,3.587186,-2.615900,0.315621,-7.974718,8.506339,-5.861988,-4.533853,-3.749677,4.808650,2.605426,0.947532,-5.070855,0.350531,9.849105,-5.027403,3.487349,2.723682,-0.551845,-2.018509,-8.655949,-3.258627,8.324132,4.485601,9.733863,4.789051,-5.816347,7.448786,2.265361,2.921851,-4.911537,6.129143,5.446300,2.179933,-9.001524,-7.862017,5.105222,7.986462,7.826978,-4.582716,-6.232318,7.576339,-8.124453,3.641427,-0.221914,8.354191,-8.115915,-6.935177,0.554569,-2.340477,-5.595538,5.806201,4.198386,-6.905399,5.668983,4.197717,-6.090630,-1.356115,7.965722,-5.579233,-9.601668,-7.767734,0.605572,0.399266,9.442226,-7.953077,-8.287955,1.839693,-4.048848,3.209543,2.739653,0.985528,1.772869,-3.112973,-7.306585,-7.012682,-6.560736,3.242642,-8.960643,7.578063,-1.343958,3.344934,0.101576,9.075618,-8.960515,9.558699,4.209166,-7.065394,6.727837,-6.955022,4.138005,-5.913181,7.811532,8.194847,-5.176723,0.208658,-3.287584,-3.510431,-0.313153,-4.333721,-2.159646,-5.113449,-8.180712,-4.435576,1.591628,3.784619,-7.016749,8.439950,-8.308019,3.293147,9.792840,5.311913,3.820847,8.051746,3.997844,-9.952706,5.209058,-5.491059,9.751878,1.751330,4.271480,-0.640603,4.262725,4.068833,-5.058637,-1.064482,-3.959729,-2.814087,9.840261,0.993506,3.340928,-5.978781,-0.902625,-2.635189,-5.125921,-2.332318,4.453315,8.534489,-2.399152,-1.753514,7.988090,-3.511575,-0.791388,3.120852,-7.873606,7.618775,-2.308419,8.804002,-0.922628,6.823310,3.707901,-1.194083,-5.234960,3.420582,-0.169626,4.557321,7.678288,4.195718,-1.014406,3.657196,7.089158,-5.687835,6.292243,-2.480567,-0.829716,-8.349243,-2.672822,-3.984774,-3.009991,2.973142,4.661101,-2.204479,6.390972,-7.906398,-0.983342,-0.747763,-0.289451,9.953675,-9.693664,9.455563,5.747987,1.572994,-1.974933,-4.250441,6.589186,-7.852370,1.648576,5.002530,-2.197900,-0.100202,-0.639904,6.013934,-9.021104,-1.207142,-2.884530,3.260896,5.387648,8.584742,-1.751571,-6.403664,-4.435695,-0.841096,8.915144,-7.810238,2.624426,-3.033141,2.475601,2.497655,-0.099986,5.340114,6.365813,7.864107,8.364326,9.019745,-5.663166,6.562161,-6.665433,-4.508453,-3.002204,7.557388,-5.730235,7.483034,4.957930,2.011646,-5.620936,0.922489,3.716436,-0.058534,5.688901,-9.373008,6.791002,-8.678790,1.663102,3.145233,1.624199,2.617558,-3.808376,-4.860227,6.303860,5.324312,-7.716813,-7.666177,8.596830,-0.420736,-1.374050,8.222748,-5.072059,8.311721,-4.413289,4.129728,0.431563,9.837543,5.340317,-5.956507,6.915931,-1.255404,-2.992525,1.543437,3.970689,-3.828482,-2.979192,4.944470,-8.584897,-7.280652,7.830541,-7.378943,4.041447,-0.872720,8.739749,1.299377,7.281084,-1.194691,-3.350184,3.674161,8.507575,3.012540,8.304918,6.883272,2.046630,8.933249,2.906978,-2.756110,9.513013,-3.284331,8.238912,-7.560678,1.370126,-6.551139,-7.111087,-4.654381,7.024324,-7.834073,-0.474170,-2.403867,1.999130,4.707272,-7.303269,5.005270,-0.654725,-7.171666,-9.054326,-8.834324,-7.312979,5.178134,7.741335,-7.850911,-9.320435,0.415550,-7.378934,-7.641575,4.722322,7.537289,7.365647,-2.331199,-8.942138,4.919347,2.514497,-9.385771,-0.179212,-8.789640,3.410110,5.361577,7.247975,9.982469,-4.049066,-0.241207,3.565932,9.613971,-6.848052,-6.779124,5.048520,6.475239,-4.414081,-4.777636,-1.902624,-8.913746,7.434306,4.824345,-9.453561,5.871763,-1.961368,9.162078,1.763986,1.229295,-5.383049,-9.345092,6.222688,-3.871141,1.913494,1.686265,2.542339,-9.820093,9.104224,-9.446647,-6.780305,-1.362290,3.120609,-2.641687,5.780628,-2.819177,6.467466,1.657925,3.264947,-7.371263,-0.782339,-4.969775,8.736151,-7.768403,-4.019472,9.476836,-7.913177,2.353634,2.181486,-9.846385,9.856995,-0.987507,9.605655,-4.763128,7.667804,-2.767056,-8.452983,3.135609,7.196076,-9.494410,-2.435728,-2.715332,7.368799,-4.204217,4.693138,2.810001,-3.723969,0.759118,5.738195,-4.015386,5.916356,-3.604061,5.159990,3.342265,-4.479290,-9.622172,0.940233,6.630584,-7.694555,1.442073,5.891204,4.219983,-1.339405,9.489661,-7.162738,-9.801960,-7.103962,2.101672,1.325905,-3.909577,-6.581540,-5.722776,5.749256,-8.422302,-2.440115,7.136140,2.730951,0.839282,-8.955135,9.750528,-5.188014,-5.848596,2.228822,-1.548050,-1.642115,-1.887281,3.036756,4.944695,-7.924872,-9.077022,2.551288,-0.909088,-5.609300,5.891131,2.398491,5.787147,-3.945526,-2.349817,7.374160,-7.040561,-9.547480,-3.788450,-5.790881,-3.252460,-2.492377,5.295952,4.492573,-8.849388,0.645925,-7.804414,-7.819852,-9.504297,3.362911,-3.036420,8.175163,-9.785410,8.470341,6.432186,-4.342855,0.319891,-3.017833,3.941563,-6.858708,-4.159254,8.847273,-8.663515,-9.187236,-5.695359,-8.495488,3.611920,-7.194131,0.143946,-5.189202,8.188170,-2.573206,1.492875,4.312470,-0.319045,-0.194727,6.589923,2.692638,-9.725546,-3.694751,4.951072,0.156588,-7.190911,8.863895,-9.537505,-9.241197,-1.957088,-7.859831,9.252269,-5.727358,4.295405,-8.350779,-2.566988,1.409302,-2.524076,-6.373176,-3.952079,-1.623010,4.025019,-0.999930,3.206465,4.347505,8.011161,-9.076460,7.903170,7.971882,6.641149,4.219802,9.456075,-1.367306,-8.383980,-6.558170,5.470070,0.188158,-9.288410,-5.509982,-5.907050,5.975791,2.656407,-7.289082,1.802166,3.951814,-1.969943,-8.364324,8.381068,2.700199,8.085882,-7.348659,-1.179383,9.754673,0.132230,-4.491904,5.351237,-7.860156,4.150702,5.651856,-0.823982,-8.128480,0.392421,-4.097046,6.537455,-4.221278,6.819027,2.441809,-7.615142,-8.193136,-3.520006,9.542895,3.929052,-8.390891,7.836796,0.279076,2.849088,-2.069371,-8.352009,6.852485,-5.547724,1.218437,0.513465,8.525832,9.243525,0.237359,-6.219925,-6.402618,-8.821851,3.101680,-2.979698,8.956360,-0.453899,1.263404,9.483498,-4.264562,-7.719822,4.809900,1.951692,-4.069936,6.223684,-0.740314,-0.882307,3.317594,-9.379375,-8.265957,9.952902,-0.711009,9.722654,-4.557336,-3.090279,-0.309931,-2.925714,-7.259586,-7.452810,4.216572,3.748360,-8.875323,-0.034157,-5.860592,-8.311612,6.906798,2.075314,4.697307,4.469655,3.145276,-4.766506,3.199573,6.097007,-1.348079,-9.364842,0.251154,-8.334224,7.062297,8.247410,5.649831,6.640638,2.340267,-6.183514,0.121536,8.465543,4.457253,8.137601,-4.809621,8.094148,-6.398475,-8.097913,2.343778,4.318061,6.856778,-6.031252,-7.185931,-5.651030,-3.964022,-0.138589,-8.263236,-9.979848,-8.605128,-5.967745,8.235819,1.825575,3.412081,9.289690,-9.970210,-0.580929,-7.707252,-1.980729,-7.841421,-4.224523,4.330748,-6.439386,-9.224576,-1.120127,-0.622881,-2.493932,-1.186035,-1.866861,2.144626,-9.894278,-5.129593,-9.391056,1.953467,-3.947301,1.634526,1.637402,8.254478,-8.546660,-2.577499,-0.565116,-5.571935,-5.709865,7.436986,-2.181984,2.559462,-5.409663,5.313926,-4.282646,-8.050978,-0.973490,7.671193,-6.546252,-3.557467,2.914503,1.624874,9.792449,-3.277299,-1.981453,-7.766199,-2.080931,4.659818,-6.759351,5.256873,-8.508929,7.340371,6.112411,-4.509744,7.837727,5.972328,7.612312,5.854875,-7.262768,9.664250,5.592771,6.358528,0.192959,-1.795473,-5.831436,-7.838519,4.344483,4.744615,-7.724354,3.277226,-6.886819,-6.175825,8.749130,4.763091,3.807374,0.331743,-2.187109,1.448586,4.536947,2.616850,0.815241,-6.380836,0.561005,-4.971308,7.752647,-0.277762,-2.538600,-4.417697,-8.958863,2.162551,-6.157380,-1.166593,1.922661,-0.583311,6.229456,-1.921887,9.281215,-8.280375,1.021393,-3.619262,-4.496599,-4.400253,-6.457624,-4.405266,-1.973141,-8.669289,-0.868461,-5.572767,-4.572809,9.741532,-3.159610,3.078804,-3.412426,4.689044,-1.705276,8.634564,-4.428495,6.682471,-3.630757,3.546499,5.087443,8.613903,-5.623453,1.277606,-8.865219,-5.659625,1.462475,-7.378514,4.052172,3.933497,7.938832,-0.200213,-8.201777,-6.253816,-8.994675,-2.558888,-2.841331,8.097129,3.825827,1.842956,2.106025,-6.273451,0.015985,8.981827,-0.183326,-7.021101,1.408374,3.446887,-3.932720,-3.163487,8.220012,-7.487280,-0.963939,-5.198532,6.909036,4.857507,-1.384608,0.598625,-3.019585,-4.261023,3.921619,-9.860107,-9.443412,-1.320522,-1.867742,7.725363,7.692587,0.130638,6.655756,2.832042,7.752709,-9.244254,6.600084,-3.736599,-1.314318,-3.905555,7.895681,-8.382046,5.446332,7.486547,3.032216,8.067998,-0.932112,-9.786415,7.686027,-9.053144,-9.426806,-9.370511,-5.599367,7.401687,0.853049,-8.222205,-0.827194,-1.018138,-4.211211,7.963319,-3.997377,-4.946472,0.119882,3.270455,2.228555,-6.014329,-5.498149,3.976183,6.581730,1.131831,-6.025634,4.443583,-1.762988,-7.186693,2.529498,-2.497072,5.742146,2.571665,3.010756,4.235102,-0.686429,-5.671576,-9.069109,-4.434479,-6.915325,-4.336113,6.753600,5.250164,-4.480589,-9.227371,-0.670009,1.276323,-6.242853,-1.474741,3.175858,-3.949120,0.501477,-0.145660,-9.695598,7.584036,-6.279064,7.092333,-3.257646,9.636173,3.558021,-0.220826,-8.543666,3.162499,-2.681908,-8.097827,2.040813,-1.262360,2.482334,-9.956162,8.655667,-3.671046,4.568058,7.676935,1.033130,-0.864304,6.975158,-4.963288,6.990404,-5.119316,4.513940,3.924086,9.494130,-8.502121,2.218911,-2.446910,-6.527079,-3.068649,-3.504139,2.021156,5.168894,-1.436656,6.942517,-7.747472,-8.276753,-9.745912,-6.297006,-1.441422,6.276047,-1.041674,8.955886,5.594937,-7.902339,-3.536249,-2.895188,-9.918103,0.555084,-7.929820,6.855761,6.843222,5.738110,0.888445,-8.694242,8.185343,-7.673244,-9.929871,-9.059064,-4.831693,2.162747,3.708736,-9.507586,4.014962,2.552479,-5.469863,9.213259,-9.050175,-0.684113,-0.456432,-3.799783,-6.599731,0.610323,-5.461225,0.196220,-8.109090,9.559182,-0.151196,4.209349,-9.045244,5.002522,1.566666,-8.486131,6.816746,-0.631795,2.383753,3.089931,1.762941,-3.024647,-3.195917,-4.039371,5.674959,-0.298060,-9.341876,8.480598,-4.056020,3.777477,1.143178,-3.786170,-7.152099,-2.319942,9.059186,-9.557927,2.584307,-1.304243,-6.315528,-4.072703,2.302787,4.800163,0.673185,-8.576340,6.380065,6.199620,2.508365,1.258981,-2.249989,-1.159027,6.682833,8.749223,1.861376,-5.910195,-3.628400,5.223155,6.621652,1.330197,-3.488197,3.068993,-9.106870,-9.242826,-2.388965,2.158299,-8.459721,-2.419307,-8.963705,-6.938008,4.810744,3.556523,1.961276,9.521480,7.470958,8.489501,-2.570378,5.217831,-5.107513,6.282453,4.651258,6.090507,-0.593835,2.716248,2.928732,-9.842503,-2.054740,9.675428,7.754168,4.608655,6.226976,-1.107839,7.705662,-2.795939,6.352554,-8.802814,4.920779,-7.768744,2.403751,-5.362144,5.626564,2.489703,8.195153,-5.244597,-6.825980,2.412184,-2.427623,7.852276,-0.474661,4.718905,8.760388,-2.047798,-2.973386,-4.801440,9.730767,-1.802781,-8.294389,-7.336303,-9.313523,-3.302901,-9.314001,3.573580,0.961432,-8.682495,-0.785251,8.611319,7.365987,-4.345232,4.082813,1.465567,-1.617819,5.873196,-9.235880,-3.630857,-9.522560,8.657681,-0.847033,-3.495110,5.426948,9.619629,-6.567630,-0.150269,1.658569,2.663407,9.664972,9.497583,3.647382,-9.807401,-5.007374,-1.991215,4.142692,-0.051902,-3.471928,6.656521,7.245728,-0.520907,-7.542014,-4.870954,3.067502,-6.901196,-8.172010,-1.012185,-2.424461,9.591606,8.835752,-3.356523,2.544864,2.127659,8.297187,-9.130721,2.523679,-6.369381,0.908083,4.814412,5.540151,9.666162,3.324853,0.828776,2.352082,0.890432,-2.676364,4.497699,-2.279508,-8.468284,-3.519256,-9.166822,9.463114,3.788617,1.107758,7.076643,-3.512561,4.746568,8.175034,1.471279,0.573454,2.746393,-9.148814,-8.298033,8.302344,-8.004568,5.657454,-6.411151,-8.576920,5.802206,-3.755725,-2.581673,7.660395,1.340138,-8.366540,7.068680,6.963101,5.816107,-4.159638,-6.682643,-3.581393,2.734907,2.534711,-2.798325,0.654495,-8.787400,3.403430,-9.259425,-3.335875,8.086328,-1.933052,-6.389565,0.486038,-1.087625,9.635857,-7.634888,4.933216,2.076127,5.509676,-7.945176,9.317776,-7.446983,5.240736,-7.781533,-4.720979,-5.565868,-2.344166,-0.621728,2.856381,7.674241,2.907399,-3.501086,8.630683,-5.729078,-3.936953,7.254059,8.894545,-9.641313,-9.472699,-1.908268,-6.361079,-7.712085,3.036119,-8.137028,7.641904,-4.865601,1.939721,8.250354,-7.955834,3.780947,7.007527,7.281572,0.206039,9.918433,-9.184279,-5.931518,1.635133,2.852764,-0.379822,3.433236,-7.264421,-1.848090,-5.930564,-6.192551,4.018089,7.797363,5.096250,7.412194,-3.182989,-5.740589,-3.792556,7.100699,2.270578,2.455047,3.851159,3.326366,-2.266016,5.051745,-8.623987,3.925145,-3.335836,-1.260748,7.275099,-9.859373,-8.200392,-2.474502,0.746133,-9.977272,6.235870,-6.560784,-0.736447,-0.478696,-2.361767,-4.381827,6.196769,-4.792676,-3.770099,1.846931,9.103380,-6.843398,0.753180,-4.161991,-9.035572,4.240015,-4.177263,-1.035642,-5.671803,9.944363,3.722471,1.313139,-1.964114,-0.467090,-2.986932,-5.433181,4.095296,4.266344,-6.299983,0.761677,1.359301,-6.852769,4.981747,-6.700800,4.686979,-1.824421,3.717499,7.262708,4.755903,3.317148,-9.469330,8.009956,-1.543514,-7.741745,6.807591,3.197809,-9.339522,-4.203165,9.802331,2.408775,7.137337,0.368201,0.449862,-8.431019,-8.035847,-5.135835,7.263630,-5.059050,4.178399,-2.689232,-2.792073,5.350414,4.942555,-5.086453,-6.813018,3.334625,3.406721,6.673925,-3.156558,-8.742578,3.072730,1.209333,-6.378123,-8.005818,-1.936348,-8.693201,-8.251677,0.256089,-0.022708,-5.328440,-2.145065,-8.047247,-3.358927,-4.164083,0.231859,1.379526,-8.081107,8.640737,-1.202551,-5.149660,6.835794,-5.793411,-7.358509,8.336449,7.250341,7.211597,-5.893895,-2.644457,8.996059,1.507203,4.700090,3.851779,5.811942,-1.011326,-3.041737,-9.865567,-9.182607,-4.878592,-6.473701,1.880291,0.508835,3.089493,-6.970388,7.187421,3.304877,-8.393510,9.855546,-9.781774,-8.448225,7.833523,5.525767,-7.279272,-4.632192,-2.240772,2.182017,-7.363658,-0.584107,-0.318823,9.540823,6.123148,-1.176045,9.968301,5.721937,-4.737606,1.838856,9.471518,6.832680,-1.110352,-0.010763,-6.078876,-8.269441,-5.607698,3.862726,6.998317,-0.752365,4.105470,-6.098346,1.644039,-1.010020,9.770421,2.523644,-1.286025,0.699631,-0.339119,9.496309,5.900652,1.932217,-2.165657,-8.095513,-7.802096,-9.044874,6.298720,-1.686252,3.804464,-1.168544,-3.684159,8.813825,-5.469424,5.021706,-6.241718,0.990947,-2.220691,7.189226,3.560397,-8.708668,6.507486,9.676625,3.330279,6.036686,-0.550295,-1.322790,5.478633,0.395191,-1.958131,-5.677274,1.681638,-8.916125,-1.109140,9.601370,2.670946,1.994612,-7.429805,3.887814,8.416054,-3.319509,-2.933090,-0.075351,-8.976223,0.351819,7.116509,7.132954,0.341170,-5.158318,-0.908871,-1.919994,-2.389997,-7.960245,-9.688508,-5.069863,-6.457444,-7.926274,8.885796,-1.917722,-6.282716,-9.266262,1.528570,3.413711,6.035249,-0.104343,4.420918,4.962904,2.532372,-0.564393,9.677783,0.674966,-6.385129,-4.906738,-7.945245,1.746130,-3.221002,-2.959611,-9.524007,8.165375,-4.453413,9.755488,-5.207168,1.562690,-7.083598,2.629804,-0.650264,0.764626,-5.831271,8.890926,-1.298538,-2.259481,-1.120514,-8.893302,-3.664225,6.029002,5.295474,-6.265932,5.813480,8.556418,8.391903,-4.072133,8.758446,-4.997657,8.414018,0.890791,9.783753,9.056641,-0.601534,-5.086280,9.249149,6.511540,-2.593186,-5.977309,0.595499,7.809523,-8.122351,7.976776,8.629501,-1.573089,8.571437,-3.969567,4.237892,-7.051111,3.329683,-4.664985,-5.768138,6.733749,0.903215,1.005782,-5.733114,4.774740,-1.141304,-9.778936,9.149408,-0.086683,-0.621348,0.156916,-9.602857,-8.773015,-8.035212,-7.789048,-6.470333,1.577974,1.128692,4.787226,7.698788,5.841705,4.535355,1.435140,-2.537665,4.756909,-7.341017,-4.750603,-3.021885,-2.439283,9.990832,-8.220407,-4.145373,0.532056,-9.352194,1.672899,2.229056,9.492089,1.814552,1.286448,-0.089921,-5.069633,6.154666,-6.580930,3.420727,-8.501618,3.713298,5.615107,-9.982931,-7.591128,7.963888,-7.372535,-2.591855,0.598637,-3.905262,8.632276,5.150793,9.130034,-9.396887,-3.649645,-1.505690,-8.435094,2.730474,-0.369143,-1.881755,-6.078598,-4.960169,-6.622782,-4.532728,-1.021411,9.131289,-0.444869,-0.867639,3.954289,9.961845,-5.155771,2.577316,0.625964,-9.583843,-8.973841,-8.221627,-4.008426,-8.265810,7.552087,-5.691757,5.799316,5.117026,-9.089077,-2.047456,-8.644750,-5.593008,0.092642,4.699744,-2.199955,-9.516663,-0.037886,-0.241217,-8.170733,-7.124679,2.201479,1.469348,-2.750624,-9.024732,-4.531739,-9.704645,-9.837485,-8.557607,-7.280735,1.763433,6.880061,-8.303393,-6.195111,4.476009,0.023035,1.627581,-0.471062,3.704113,2.358061,-7.984254,-5.443134,0.201277,7.856202,4.924093,8.194386,-8.902569,-9.565960,7.093728,0.054334,9.940716,-5.706055,-7.928371,-6.548568,2.787472,6.416208,0.702201,-0.694112,0.465896,-7.499235,-8.342610,6.772533,6.664470,1.018873,-1.287906,7.546026,8.679318,-4.841764,-6.554542,1.509787,2.072825,4.833888,6.591205,4.405688,5.921761,6.989289,4.531110,5.164072,-3.543772,2.439529,4.794099,7.332879,-0.123066,-5.102911,-1.820732,-7.589773,9.031739,-9.781472,-0.335382,1.072093,-0.408426,2.929018,7.830235,-6.830739,1.708552,-4.525483,-4.603008,3.178417,-0.692203,9.273379,8.231705,-1.213262,-0.573073,9.467067,-4.984407,-5.704726,6.779916,-0.512656,-5.648885,9.049653,4.888868,5.217729,1.506483,-9.303861,-8.925136,-2.978459,-2.439220,-1.325751,0.591114,8.798690,-5.418466,-0.440833,1.716355,-2.962501,1.332865,7.256223,-6.023028,-3.594935,2.842445,3.412046,8.912350,8.453082,-7.487550,-9.520052,-3.909867,1.421744,9.431692,-7.637975,-4.246950,2.638018,-8.500154,-9.842235,3.031830,-9.491400,-3.372582,-8.158560,2.340542,1.118033,-0.298020,-1.667207,4.646357,3.106435,6.828114,9.103805,0.907728,-6.342765,3.188043,-6.999847,8.244600,4.057215,-0.679853,0.093225,5.591397,9.370326,-7.716039,-8.937068,4.678807,9.272097,-3.905240,-5.553861,4.896607,7.482683,-8.905640,4.849579,5.960210,2.417701,-5.681565,2.570223,3.229654,2.894500,-3.612133,4.872539,-9.543688,2.325288,8.311965,-0.324025,-7.651071,4.089610,1.606147,-7.064665,1.939689,-4.917661,4.271379,6.317457,-5.195214,-1.283320,8.096670,-8.383358,-9.701810,-3.190064,8.416132,-0.237402,-6.182514,-0.149647,-5.183908,-4.587743,-9.825617,-6.696183,8.564081,-1.814716,-0.679887,-6.552174,-4.799860,8.978472,-4.507450,-8.650365,-7.478181,9.738012,-8.741701,-0.619942,7.576896,-5.552250,6.337126,1.124877,7.873289,-0.962824,-2.399806,8.980314,6.333882,-1.608658,-0.512172,-2.274107,7.394492,9.575190,4.259372,6.820857,0.695043,2.576301,-9.332858,8.317088,-8.885136,9.558387,-1.024379,-9.266756,-0.887664,-3.101969,9.015230,6.947697,-9.244372,2.786752,3.034754,-7.721195,-1.526350,1.981530,-3.642486,-3.971793,0.745783,-1.999412,-5.171483,0.532513,7.009222,0.227152,-2.342098,6.914955,-2.372087,3.082898,0.464913,-4.881240,4.948640,-3.219126,-4.560594,-7.798598,4.680123,4.656399,2.756404,-6.538096,-5.332436,-2.284357,-5.624134,-2.182443,-4.039265,-7.559183,9.769464,6.847778,0.892060,9.756002,5.107798,8.328174,-4.471951,-6.155392,8.276698,-7.505774,7.120488,3.015842,-7.542065,-1.262277,8.954527,9.385543,2.506259,8.567167,-4.703598,-3.760852,-0.015215,-1.300406,-5.067015,4.203364,1.959545,-8.375334,-0.778691,3.430347,2.322506,0.356375,-1.145164,6.501325,3.546555,-0.127396,9.600537,0.458284,-3.371140,-5.436158,3.064468,0.156151,0.594286,4.053692,9.736368,7.439148,-6.223396,0.716043,4.128017,-3.833367,0.844285,-7.610355,8.476677,-4.631462,-4.495189,-5.106265,-2.847977,-5.610146,6.127063,3.815560,-3.892577,0.953129,8.823877,-5.087434,-9.030275,-0.453437,2.351962,-0.770968,-9.945725,4.336757,-0.249138,-1.864105,8.766201,-3.779151,-3.643456,3.562765,-7.165481,7.634687,6.878092,-2.926779,-9.704180,6.128519,-0.802611,-4.866389,-2.112005,0.296549,-9.403025,-5.939659,-3.224165,-7.497600,-3.235784,-5.687920,0.329449,8.901739,9.498186,-7.631006,-1.583282,3.059887,3.202552,6.145334,4.653534,-0.747519,3.744648,8.949692,-0.480856,-1.898057,4.391808,2.032944,9.111640,4.375650,4.737230,-0.737508,0.996730,-1.367624,-7.504859,9.623506,-3.506877,9.956455,-4.611579,5.513270,-3.093725,9.445665,-7.632076,-9.057972,4.334707,-9.873967,3.801531,-8.968597,8.069155,-0.884696,7.632374,8.852827,2.758147,1.472756,-4.203663,-9.332632,-7.724637,-5.801589,1.707918,-9.269139,3.904479,0.193325,-3.724202,1.692479,-0.660112,7.888345,9.152220,6.675197,4.917529,-1.984649,4.581232,-6.470112,2.877024,6.335996,-5.256772,6.023615,-7.294288,-3.969834,8.810176,-1.572765,5.210660,1.209492,2.574461,-2.066029,7.583391,-5.715335,0.516220,-6.181270,7.732629,5.835609,-0.125235,8.301407,1.259650,7.027904,-6.600975,-1.425753,5.550113,-7.863486,-1.686939,9.662656,-0.868772,3.365944,-1.955362,-4.977346,5.084956,1.886503,-2.147030,-9.885144,6.146779,-2.540166,-2.063462,3.156747,-5.024860,-6.870357,-6.990401,-1.542386,2.079604,1.029425,-7.980826,8.429208,9.347581,2.301357,-3.554603,-8.749591,4.107418,0.581340,9.051407,6.733444,-9.852429,4.754289,1.772670,6.028675,5.469821,-8.647388,-5.350336,9.052761,7.320627,-1.517600,-3.567303,8.051197,1.377966,5.477395,7.323886,8.962575,-2.486579,2.713116,-0.037312,-6.014421,7.029174,0.048529,1.568717,9.675708,3.611293,-1.377275,-2.212574,3.766554,-1.860410,6.330234,1.143512,8.380323,0.722003,3.180164,-3.209338,5.391931,1.158854,4.646726,2.310947,0.141922,-1.063038,-8.345329,3.411650,1.789303,0.563617,5.176923,8.861912,-9.627160,5.957485,-1.901830,-4.559412,4.892866,0.580144,-0.367032,-6.819896,4.840203,8.142461,9.409365,-4.671004,-7.402771,4.426464,-3.953757,-5.389747,9.576519,3.003663,0.206363,2.437579,7.874326], dtype = "float32")#candidate|13744|(3696,)|const|float32
call_13741 = relay.TupleGetItem(func_5719_call(relay.reshape(const_13742.astype('float64'), [8, 8, 3]), relay.reshape(var_13743.astype('float32'), [1, 1848]), relay.reshape(const_13744.astype('float32'), [2, 1848]), ), 5)
call_13745 = relay.TupleGetItem(func_5724_call(relay.reshape(const_13742.astype('float64'), [8, 8, 3]), relay.reshape(var_13743.astype('float32'), [1, 1848]), relay.reshape(const_13744.astype('float32'), [2, 1848]), ), 5)
var_13752 = relay.var("var_13752", dtype = "float64", shape = (2, 96))#candidate|13752|(2, 96)|var|float64
bop_13753 = relay.less_equal(const_13742.astype('bool'), relay.reshape(var_13752.astype('bool'), relay.shape_of(const_13742))) # shape=(2, 96)
output = relay.Tuple([bop_13726,bop_13736,call_13741,var_13743,const_13744,bop_13753,])
output2 = relay.Tuple([bop_13726,bop_13736,call_13745,var_13743,const_13744,bop_13753,])
func_13768 = relay.Function([var_13725,var_13735,var_13743,var_13752,], output)
mod['func_13768'] = func_13768
mod = relay.transform.InferType()(mod)
mutated_mod['func_13768'] = func_13768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13768_call = mutated_mod.get_global_var('func_13768')
var_13770 = relay.var("var_13770", dtype = "int32", shape = (2, 9, 2))#candidate|13770|(2, 9, 2)|var|int32
var_13771 = relay.var("var_13771", dtype = "int32", shape = (2, 9, 2))#candidate|13771|(2, 9, 2)|var|int32
var_13772 = relay.var("var_13772", dtype = "float32", shape = (1848,))#candidate|13772|(1848,)|var|float32
var_13773 = relay.var("var_13773", dtype = "float64", shape = (2, 96))#candidate|13773|(2, 96)|var|float64
call_13769 = func_13768_call(var_13770,var_13771,var_13772,var_13773,)
output = call_13769
func_13774 = relay.Function([var_13770,var_13771,var_13772,var_13773,], output)
mutated_mod['func_13774'] = func_13774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12945_call = mod.get_global_var('func_12945')
func_12946_call = mutated_mod.get_global_var('func_12946')
call_13822 = relay.TupleGetItem(func_12945_call(), 0)
call_13823 = relay.TupleGetItem(func_12946_call(), 0)
func_9782_call = mod.get_global_var('func_9782')
func_9784_call = mutated_mod.get_global_var('func_9784')
call_13853 = func_9782_call()
call_13854 = func_9782_call()
output = relay.Tuple([call_13822,call_13853,])
output2 = relay.Tuple([call_13823,call_13854,])
func_13869 = relay.Function([], output)
mod['func_13869'] = func_13869
mod = relay.transform.InferType()(mod)
mutated_mod['func_13869'] = func_13869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13869_call = mutated_mod.get_global_var('func_13869')
call_13870 = func_13869_call()
output = call_13870
func_13871 = relay.Function([], output)
mutated_mod['func_13871'] = func_13871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11244_call = mod.get_global_var('func_11244')
func_11246_call = mutated_mod.get_global_var('func_11246')
call_13926 = relay.TupleGetItem(func_11244_call(), 1)
call_13927 = relay.TupleGetItem(func_11246_call(), 1)
output = relay.Tuple([call_13926,])
output2 = relay.Tuple([call_13927,])
func_13950 = relay.Function([], output)
mod['func_13950'] = func_13950
mod = relay.transform.InferType()(mod)
output = func_13950()
func_13951 = relay.Function([], output)
mutated_mod['func_13951'] = func_13951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_13957 = relay.TupleGetItem(func_8401_call(), 2)
call_13958 = relay.TupleGetItem(func_8402_call(), 2)
var_13967 = relay.var("var_13967", dtype = "uint16", shape = (2, 880))#candidate|13967|(2, 880)|var|uint16
bop_13968 = relay.floor_divide(call_13957.astype('float64'), relay.reshape(var_13967.astype('float64'), relay.shape_of(call_13957))) # shape=(2, 880)
bop_13971 = relay.floor_divide(call_13958.astype('float64'), relay.reshape(var_13967.astype('float64'), relay.shape_of(call_13958))) # shape=(2, 880)
output = bop_13968
output2 = bop_13971
func_13980 = relay.Function([var_13967,], output)
mod['func_13980'] = func_13980
mod = relay.transform.InferType()(mod)
var_13981 = relay.var("var_13981", dtype = "uint16", shape = (2, 880))#candidate|13981|(2, 880)|var|uint16
output = func_13980(var_13981)
func_13982 = relay.Function([var_13981], output)
mutated_mod['func_13982'] = func_13982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10655_call = mod.get_global_var('func_10655')
func_10657_call = mutated_mod.get_global_var('func_10657')
call_14004 = relay.TupleGetItem(func_10655_call(), 0)
call_14005 = relay.TupleGetItem(func_10657_call(), 0)
func_11830_call = mod.get_global_var('func_11830')
func_11831_call = mutated_mod.get_global_var('func_11831')
call_14006 = func_11830_call()
call_14007 = func_11830_call()
output = relay.Tuple([call_14004,call_14006,])
output2 = relay.Tuple([call_14005,call_14007,])
func_14012 = relay.Function([], output)
mod['func_14012'] = func_14012
mod = relay.transform.InferType()(mod)
output = func_14012()
func_14013 = relay.Function([], output)
mutated_mod['func_14013'] = func_14013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13950_call = mod.get_global_var('func_13950')
func_13951_call = mutated_mod.get_global_var('func_13951')
call_14105 = relay.TupleGetItem(func_13950_call(), 0)
call_14106 = relay.TupleGetItem(func_13951_call(), 0)
func_11439_call = mod.get_global_var('func_11439')
func_11440_call = mutated_mod.get_global_var('func_11440')
call_14130 = func_11439_call()
call_14131 = func_11439_call()
output = relay.Tuple([call_14105,call_14130,])
output2 = relay.Tuple([call_14106,call_14131,])
func_14133 = relay.Function([], output)
mod['func_14133'] = func_14133
mod = relay.transform.InferType()(mod)
output = func_14133()
func_14134 = relay.Function([], output)
mutated_mod['func_14134'] = func_14134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14186 = relay.var("var_14186", dtype = "float64", shape = (12, 16, 6))#candidate|14186|(12, 16, 6)|var|float64
const_14187 = relay.const([[[-9.804036,3.490476,2.873488,-0.074285,2.562355,-4.797066],[8.018400,4.200510,-3.923513,1.531995,8.037178,6.111959],[3.558648,2.079868,6.745057,-3.251177,7.093782,7.070912],[6.940737,-1.880648,-2.544341,-9.924954,4.399373,6.753475],[-8.323991,-3.855858,6.743628,6.367472,3.046825,6.290490],[6.568109,-0.207582,8.901293,1.755687,-8.040813,-0.897332],[2.000619,-0.597139,-1.180263,-4.564290,-9.395012,-1.754789],[-8.693045,-7.432341,-1.993179,-5.272323,8.245342,-3.622764],[8.288687,-0.965761,8.845714,-0.042744,8.064837,8.388766],[-8.874335,6.409113,9.287858,-1.148374,5.192454,2.491376],[9.513251,-0.855635,0.637208,9.472113,-5.214876,-1.876288],[-8.305305,-6.744692,6.342089,3.782893,5.388544,-1.918081],[-0.641028,-4.643218,-3.090224,8.568633,-4.469476,-7.769496],[-9.430797,-1.863363,1.657392,2.729979,4.272095,-5.673112],[9.747288,-1.526574,-6.992153,4.152796,-8.869552,-2.879612],[-3.441924,-4.048662,8.842693,-3.894734,-0.085364,9.723138]],[[8.352287,-7.497699,-9.613189,2.519786,-2.241045,7.969326],[-2.715151,-1.392373,-6.677398,3.559604,-3.014562,9.883359],[9.294826,-5.477813,-9.627735,4.229583,-9.821928,-1.179300],[-6.948208,-6.690628,-6.503236,0.579970,5.378694,7.015910],[4.146358,-9.399569,-6.558357,0.194797,3.761457,5.935519],[1.126794,0.741852,-9.483383,5.415449,2.722303,-5.501534],[1.375736,-1.582484,4.434770,-8.894852,3.617870,-1.232045],[3.259487,9.903866,1.078172,-4.969421,3.506398,-8.401408],[-2.754585,6.446570,-5.714928,5.926603,8.896557,-8.959619],[8.491237,8.374106,4.790604,-9.771155,-1.123179,5.263798],[-0.221940,-7.564267,2.476648,-1.464354,-3.441024,1.844018],[3.668324,-5.085440,-3.896304,3.659261,-6.170684,-4.738608],[-2.935379,-4.110394,-3.529842,4.675511,9.697526,9.750805],[-8.979782,-5.411902,8.005378,2.420776,-6.455062,8.208249],[-6.413042,-5.054404,-7.913339,-2.915135,8.201836,5.101257],[-6.053644,5.655192,-1.903448,-4.836768,-9.977113,-2.809078]],[[-0.330947,-4.695889,3.681042,-6.312210,-4.950613,-4.371982],[1.280092,9.585168,8.133783,7.726081,0.167167,-5.391603],[8.019557,8.676701,9.383477,4.058886,7.526415,3.833627],[8.355514,6.892964,-9.322876,-0.977963,-5.591358,9.893411],[-9.456832,-1.526032,5.215295,-2.245816,3.326452,-9.063739],[1.172222,0.900048,5.046272,5.553074,-1.642639,-1.385316],[8.175888,-2.637278,-5.763223,9.263680,-1.601231,2.878490],[-1.777755,-2.053835,3.170366,3.652671,-5.889912,8.773843],[3.923554,8.833734,7.649043,-4.647505,-5.222252,9.480956],[-5.638333,-9.117589,-2.078228,-8.671478,7.826077,-2.308566],[4.250847,2.642324,-7.384190,7.395262,1.405051,6.923423],[-9.720519,8.443298,6.578322,-8.500232,-2.306532,-2.290874],[-7.258070,1.801754,-0.688576,-3.604848,4.612727,1.530760],[-4.392706,1.176108,8.904565,5.924616,4.775245,8.110077],[6.531817,-1.353283,-2.525012,-0.180128,-0.702029,-3.375896],[8.823582,-9.325061,-9.377980,0.213263,4.096327,-0.328008]],[[1.993288,-8.784908,6.379912,4.262796,0.447999,-9.242451],[6.757332,-0.047447,-9.179615,-1.246831,2.758176,5.201012],[-0.029852,3.248406,5.968060,0.597138,6.424903,8.549980],[6.942650,5.295543,5.603053,-9.782006,-4.042889,-1.653243],[0.476537,-3.585111,6.524843,-8.776590,-0.332036,1.220347],[2.796637,6.128247,4.555397,2.780439,0.550568,4.344427],[-9.504999,0.155842,8.056533,-7.740133,-4.308975,7.200110],[-0.172552,-8.240895,8.786782,-8.703753,-6.525539,4.900080],[7.527783,-2.050757,2.307090,6.632370,3.200193,-9.550238],[-3.549535,9.829605,-2.952453,-2.040399,-3.122818,5.705460],[4.623800,-4.498753,0.743404,8.685505,4.946511,-7.865433],[1.012231,-8.772726,-8.858253,7.775803,0.663939,-9.168841],[-4.154457,-9.708295,5.615391,-2.011498,-5.821626,-6.232506],[2.040405,-0.343451,9.120682,7.709253,-9.285515,6.095690],[3.609925,6.488888,2.885019,-5.213376,-8.531881,-0.648953],[-2.877444,-0.296532,1.054022,6.860773,-3.729585,9.907410]],[[-6.618781,9.978745,0.565091,8.440986,5.353441,1.437151],[-6.073957,-6.474061,0.897945,-6.851116,-0.496494,-6.186353],[2.961831,-4.587285,1.082869,1.106976,-0.002319,-1.413567],[3.118589,-9.788406,-9.956491,2.147568,7.760362,4.572090],[-1.810150,0.831297,8.180238,3.367239,1.053775,-2.129630],[0.585090,-9.172679,-2.792010,3.646601,-6.422746,8.690571],[-9.852468,-5.368680,-4.410570,-4.446597,2.385520,3.418553],[6.531459,-0.252993,-3.066619,2.561795,-7.194951,-2.495687],[-4.039138,2.627305,5.872243,9.006699,0.399850,-9.327835],[9.212917,0.930333,-2.049020,0.257706,1.403518,-2.424225],[8.831049,9.435639,5.388251,-3.825253,-6.609288,-3.455102],[-8.061922,3.319460,7.116254,-5.112765,-4.460178,-9.559020],[-2.767127,-9.346357,8.988248,-0.243392,-8.064197,-9.245260],[1.460561,7.425645,-5.749911,6.615193,5.954688,2.639566],[-0.933333,3.796316,0.480377,7.987779,-8.789932,9.718760],[-3.344380,-5.530299,1.811034,-0.255407,4.229060,-2.875705]],[[-2.519108,7.314502,-2.374705,-6.366240,-3.684279,8.846623],[1.225288,8.294129,-2.084224,9.642317,-8.998383,8.296646],[2.426958,-0.485726,0.558092,-5.503165,7.311506,7.825347],[-8.310396,-2.165161,-7.649260,-4.728312,1.521791,7.385292],[-9.994782,-3.620134,-5.031622,3.337741,-7.490155,-3.410781],[-7.650376,0.624879,-8.611961,-4.015028,-5.066393,5.241455],[-2.999794,4.584050,-4.933375,-5.540981,8.828708,9.434867],[-2.086770,1.896553,4.929001,8.786807,0.281325,4.247556],[1.422007,-4.987626,-4.280361,-5.103904,-6.108227,-8.278308],[-4.494171,8.945885,-9.755772,2.065946,3.715536,3.551873],[2.254139,6.882491,2.577663,-2.034349,-9.680202,-0.575453],[6.638336,8.456034,-7.941182,-9.531106,-6.201193,1.259295],[-0.952625,-3.022340,8.068947,-6.365343,-4.569476,9.010394],[-9.443300,-4.071271,0.992323,-4.609555,-2.838434,-2.862437],[5.652870,7.768457,-5.467271,-5.292403,-8.991790,0.788658],[-1.633364,-6.512345,8.246274,-2.232823,7.908588,-7.835606]],[[-6.557117,0.087841,-0.790057,1.659150,-9.675576,-5.234906],[1.090346,-4.584852,9.560604,-1.679937,4.397209,-3.871967],[-4.690373,7.274002,2.369003,-3.545371,-7.548425,-0.497963],[7.847844,-2.561464,4.689196,6.581015,-7.752889,-8.102551],[6.375628,6.195507,8.394091,1.961745,3.587045,6.279245],[-5.094564,-9.511359,-8.964486,3.472655,-6.837297,1.919894],[-2.407638,0.452612,-9.189018,-1.016885,-5.871452,3.772306],[2.895001,1.094623,6.361425,-1.445576,2.482041,-8.056875],[0.396502,3.563794,7.808869,6.625830,2.060617,-6.788751],[-4.802769,2.205728,3.877837,-8.314840,0.295547,7.710198],[8.723772,-2.026370,-9.007935,-9.266478,4.037223,5.873034],[-0.507950,-5.724902,0.643109,-1.490749,-1.938383,-0.487313],[-5.768271,-4.742577,2.966084,-1.275569,0.411943,8.845387],[4.899680,-8.384495,0.762111,1.887715,-1.210140,-0.025510],[2.546485,-1.643777,-0.731533,8.331006,1.720613,9.374168],[4.718140,4.551295,-1.679733,-9.155443,-8.621626,-5.624124]],[[-2.073665,-8.069060,-3.422666,5.088738,9.871155,8.122262],[-7.990282,-3.905507,-0.593397,-0.701717,7.704563,1.344868],[-8.522166,4.101637,-2.464869,2.704649,6.858353,7.447291],[-3.599626,8.477096,-9.997654,4.973363,2.472407,2.301890],[2.475808,5.694777,5.043690,9.631863,-0.537943,4.493784],[-2.416636,-8.623519,-2.858576,4.077238,-1.845019,-9.532074],[0.629146,0.939033,4.385144,9.936826,6.960141,1.404694],[9.198264,-6.292668,9.992287,-0.688289,-1.027429,7.472890],[-5.848912,3.400580,-8.671723,-5.007850,-8.153306,-2.010566],[-1.163135,-9.633460,6.993159,-9.605092,-8.641662,-5.717297],[-1.159127,-2.960616,9.689429,8.044092,-7.640848,-0.637033],[-1.501564,4.493623,5.055272,-5.563219,4.270673,8.800131],[-5.506715,0.912261,-7.042944,-0.897546,-2.203194,-3.872391],[2.439163,9.693419,-6.680524,-2.410824,-3.375582,2.357231],[1.027401,2.254576,4.579043,9.964684,1.550087,-8.566291],[7.296555,-2.955675,3.399435,5.516974,2.024060,8.681307]],[[5.815407,-9.240062,7.328692,0.345601,-5.196406,0.604938],[3.290203,5.346784,3.231870,-4.020742,7.956466,-9.090339],[4.250689,2.631928,-8.876620,0.561131,-4.548475,-0.953188],[1.261510,-1.612947,-8.054122,1.079679,4.180294,-2.937234],[9.745959,8.076055,-1.651432,7.159978,2.606316,-2.549755],[7.762551,6.343416,8.033661,5.853731,0.627614,-7.470291],[2.139871,2.856553,0.858896,8.925072,1.154994,5.491058],[-0.796259,9.076033,9.286984,-1.681408,7.453063,-5.369296],[4.247353,-0.409617,8.978561,-7.197475,-1.888974,9.720429],[-2.300406,-1.929846,8.898295,9.867086,8.773628,-8.368355],[-2.659991,1.500413,-6.622616,-4.787056,-1.385702,4.167201],[-4.093094,-0.142448,4.502941,-2.599865,9.520344,9.042615],[-4.993649,-6.393731,-4.517536,-5.179173,4.333449,-8.825799],[0.920605,3.652141,6.011227,8.439500,5.577941,4.418565],[-5.338840,-9.277670,-2.154406,-4.869905,-1.057915,-6.494736],[9.211156,8.751716,7.099340,8.231826,-8.953487,-7.402318]],[[6.246665,0.394749,2.178443,4.397836,-6.153860,0.089388],[-2.484600,5.541738,6.139004,4.230168,-2.772759,9.732987],[-4.707797,-5.780946,-9.828584,0.646452,4.942175,-9.536284],[3.289663,-6.878589,7.309445,-0.201202,5.581391,-9.056766],[-8.453705,-1.816258,-6.966955,-9.665596,-0.643891,5.252936],[3.622094,-0.986799,-8.789061,9.254838,-5.816954,1.271307],[-5.467832,0.347471,-9.622036,-8.703039,3.597704,0.768570],[-3.611564,5.516795,9.510556,1.661189,3.295657,3.300433],[-4.103890,8.625918,-3.104081,-3.496031,-8.905963,-0.882581],[3.887540,2.668075,6.994692,-1.131764,-3.859116,-5.512721],[0.855701,-2.436327,2.628461,-1.643360,1.743899,2.113369],[-3.383701,-7.234232,0.323092,5.493664,6.839753,-9.151150],[-1.635102,-7.197077,-2.376300,-2.673384,7.638943,-0.738374],[-8.894494,-7.784349,-4.909246,7.623610,-5.166710,4.294478],[-6.665416,-0.188711,-1.058710,2.447988,-1.080722,8.942969],[-8.950318,-6.250293,9.855567,3.786016,1.759102,5.815908]],[[4.299113,-4.898446,-5.568191,0.622627,1.137353,-8.701558],[-2.540125,-5.918007,7.436398,5.401785,1.145228,6.338269],[-0.608213,-2.503429,5.693064,4.379894,-8.035819,-7.079687],[-2.181616,6.636129,6.333272,7.479549,5.662132,-2.782748],[5.100174,4.623357,9.269129,8.200735,2.636909,0.503620],[4.828911,1.108521,4.721068,-2.680534,3.969234,9.356620],[2.156601,4.461995,-3.582505,-6.858610,4.683516,-6.256696],[-5.982238,4.049692,9.662280,-9.101522,6.513519,-1.888615],[1.013693,-6.548195,-5.246741,-9.018529,-4.571989,3.142069],[5.626886,1.612118,1.894932,-1.911785,0.007491,6.952187],[-7.712071,-9.930449,2.143633,-7.071691,2.703283,8.532876],[-3.253199,-3.858054,2.895974,6.577219,7.908459,-1.398598],[-0.585787,-4.080835,-4.812599,-3.157641,-8.172499,-7.317451],[8.068221,-3.757505,-9.258909,0.205890,3.779855,1.511165],[1.983417,-9.198806,1.129666,0.825426,9.166543,-8.845274],[2.389627,-7.985233,8.341133,1.230418,-1.413841,2.127418]],[[1.008105,8.775456,-4.384013,-9.624516,-4.213409,-0.748580],[3.483855,3.294945,-5.198191,-3.781392,2.579531,3.391183],[8.383558,5.511530,-1.514384,-6.679525,2.338723,6.310653],[7.680164,1.840734,-6.087540,0.800798,0.262997,-7.297747],[-9.962044,8.343045,5.955556,-8.621764,1.469631,-7.754873],[5.147842,-6.919200,6.453317,-8.432418,6.007828,-1.878213],[-3.015799,3.935986,-1.325008,9.808996,-8.045615,-0.142345],[6.295959,-8.866449,4.876180,-7.781573,-6.458187,3.622262],[-9.236618,-3.339967,-2.565621,7.631539,-9.717721,-6.022668],[-7.017648,-1.614511,4.031393,2.238113,6.814217,0.971180],[-8.255349,1.756358,-6.927741,-6.142069,6.376977,-8.288136],[6.309733,-9.978537,-1.550046,0.434819,-0.065982,3.302963],[-4.620449,-8.184281,0.939486,-2.769866,6.036386,-5.941126],[4.842691,3.330055,3.458890,-3.245460,5.791291,-0.711637],[5.249390,9.815554,8.981951,8.766372,0.767711,-3.244176],[-5.307533,-2.188420,-3.590938,0.984048,-3.452914,-7.321227]]], dtype = "float64")#candidate|14187|(12, 16, 6)|const|float64
bop_14188 = relay.divide(var_14186.astype('float64'), relay.reshape(const_14187.astype('float64'), relay.shape_of(var_14186))) # shape=(12, 16, 6)
output = bop_14188
output2 = bop_14188
func_14195 = relay.Function([var_14186,], output)
mod['func_14195'] = func_14195
mod = relay.transform.InferType()(mod)
var_14196 = relay.var("var_14196", dtype = "float64", shape = (12, 16, 6))#candidate|14196|(12, 16, 6)|var|float64
output = func_14195(var_14196)
func_14197 = relay.Function([var_14196], output)
mutated_mod['func_14197'] = func_14197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9252_call = mod.get_global_var('func_9252')
func_9253_call = mutated_mod.get_global_var('func_9253')
call_14206 = relay.TupleGetItem(func_9252_call(), 0)
call_14207 = relay.TupleGetItem(func_9253_call(), 0)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_14208 = relay.TupleGetItem(func_7800_call(), 0)
call_14209 = relay.TupleGetItem(func_7801_call(), 0)
func_9596_call = mod.get_global_var('func_9596')
func_9601_call = mutated_mod.get_global_var('func_9601')
var_14218 = relay.var("var_14218", dtype = "uint64", shape = (1, 1152))#candidate|14218|(1, 1152)|var|uint64
const_14219 = relay.const([-9,-7,-8,4,-3,3,-1,-1,5,-2,-7,10,10,6,-3,6,-1,-6,2,-8,-4,9,8,-6,4,-9,-10,4,-10,-10,7,-6,10,7,3,5,6,3,-7,-8,7,-4,6,-9,-10,9,6,4,-9,-8,-8,-8,-8,-8,-1,8,2,5,1,4,4,7,-1,5,-3,2,5,-6,2,10,8,1,9,10,1,-1,1,6,8,4,6,5,-6,6,2,-3,-5,4,10,6,-10,-8,-5,-5,-10,6,-2,7,9,10,-1,-4,5,10,10,9,-3,2,-3,-10,-3,9,5,-7,-1,-6,8,-1,-7,-10,-9,8,-6,-7,-7,-4,-3,-8,-2,5,-10,8,-2,-2,-1,6,9,-9,4,6,5,2,6,8,-4,3,-7,-3,1,-8,8,-10,7,4,9,3,-3,-4,4,6,9,4,-10,3,-4,4,4,-1,-7,-2,-6,-2,1,-9,-2,-5,-4,-4,-5,8,9,-1,7,-4,8,3,-5,4,-1,-3,8,3,-6,-10,6,-2,1,-10,7,3,1,1,10,-4,-10,5,4,2,5,-2,-2,-9,-2,-1,2,6,9,1,-5,-2,1,-3,-5,6,-8,2,5,-3,10,-5,8,-6,-1,8,-4,-8,-8,-10,7,3,-4,-7,6,-7,-2,9,-4,-8,-5,-10,7,-2,1,7,9,5], dtype = "uint16")#candidate|14219|(256,)|const|uint16
const_14220 = relay.const([[-9.008059,-8.826731,0.396687,0.045331,5.960251,-2.658928,4.293856,4.748290,3.675403,-4.718861,5.856103,-0.296174,2.199222,-1.766411,2.789007,-4.725827,-7.483707,7.724924,0.986746,3.962833,4.849848,7.835041,2.622137,-5.585105,-7.324645,-7.016080,-0.304910,-8.803373,-7.522569,4.604200,7.393278,3.505210,2.033205,4.660168,-3.022603,4.266182,-2.769500,-5.410708,-7.788851,-5.288739,-7.244400,-9.990209,3.020799,-4.303510,5.081352,4.987067,1.658074,-1.476556,-4.251397,-0.489968,-0.882521,-7.477185,-1.325178,-1.223018,9.509874,9.927835,9.802797,1.049479,-9.378546,-4.223609,6.512186,9.158104,1.328336,7.966575,2.847845,-2.940395,-7.661980,1.027539,5.555104,7.210857,-2.564712,-0.926287,-3.493238,6.104210,8.089163,-2.412641,4.493193,-3.173750,4.695083,-9.405836,8.255041,-6.199329,-2.587084,-8.631968,3.107221,-7.762180,8.287244,-4.529125,-7.320523,-6.962535,6.298376,4.104086,-5.754868,5.594406,0.085792,3.059384,-9.028823,-1.676979,8.535708,0.682455,-2.956428,-8.717122,-0.339543,8.988918,-4.556064,5.608280,-9.403257,0.954055,-5.910494,-2.410743,-2.465113,-8.933625,7.587765,6.238216,5.061296,-1.022059,3.804697,5.302789,0.540205,-7.749101,5.162484,6.459917,-3.220193,-8.643622,-1.188834,2.678914,-6.872617,5.323192,-2.687441,-4.469660,3.229217,-5.564181,-8.170571,9.971489,-3.228527,3.881079,8.964309,-1.647571,3.075242,-3.846993,3.212155,8.091274,9.448647,-4.313073,8.406222,6.540702,2.310076,9.110030,-0.395148,2.732590,3.043217,-0.410481,1.233813,-8.309526,7.088289,-7.707770,-8.788871,8.857120,5.315255,-8.703609,-9.663440,0.693350,5.868006,8.113299,8.483717,-6.674538,-5.114795,7.568716,9.986403,-4.814561,-6.099918,-6.115967,-6.793468,-0.076784,1.816867,1.842545,1.012895,5.610817,9.992882,-1.033325,4.668425,8.659053,6.714238,6.707016,5.713462,3.283011,7.628904,-9.235881,3.792828,7.901384,9.111901,8.546950,8.111958,9.093005,1.186962,-7.746261,0.504171,-1.231402,-9.641635,9.104112,-7.817170,-6.988564,-2.660657,6.951724,7.355800,-1.310385,8.434860,6.035029,-2.231728,-2.491814,-5.922231,-7.235074,-6.762336,-4.995095,8.706382,-1.141511,4.192978,0.842966,-0.765772,5.115660,7.076607,-4.152096,8.161369,7.381090,9.007181,-1.047309,-9.228745,7.598735,3.180974,-1.623060,1.502885,-3.695375,2.782015,9.509233,8.529357,2.120649,-0.865584,3.685370,-0.451780,-7.661553,-2.418649,6.785681,1.288596,-0.374777,3.426569,3.736797,8.196564,0.070970,9.666497,-7.362337,8.697103,1.628624,-5.014230,-1.222539,-7.286627,-3.633455,8.209400,0.685828,-6.286117,9.099362,-2.325800,-7.012754,2.454455,-5.624750,-2.722487,8.032087,0.609051,-0.450725,3.636000,-5.836928,8.179860,2.469632,-9.818042,6.820589,-9.363649,-2.116866,-7.846522,-9.352832,-4.330249,-5.997075,-9.425773,4.186447,9.825513,0.826044,-4.750219,-0.789586,-5.989299,-9.212220,-6.468522,4.433067,-7.583891,-6.670577,-0.458335,-4.467085,7.863276,-6.908848,-1.244497,4.192463,2.968984,7.992740,-5.802706,6.794882,3.795503,-3.517694,3.927084,-8.679462,6.713554,-5.077197,3.646041,2.411605,-1.389931,-4.755614,8.895844,-5.045591,-9.458969,-9.248182,8.022139,6.380271,7.165113,-2.729326,4.100186,-9.204464,3.653448,1.533970,-8.494087,-0.069297,-6.927392,0.659558,-4.267472,-7.695720,9.982289,-3.419526,-8.627042,6.039010,1.821634,-4.783269,-2.014029,1.515472,-4.004250,0.188681,6.094528,2.075012,-4.123232,4.064006,-1.928647,-7.401035,-5.329589,-0.122648,-3.752805,-5.376528,0.628655,4.675357,-1.917112,-3.755597,3.763498,6.238084,1.014520,-0.441692,0.980724,-2.671500,4.266276,-1.307665,9.564715,-2.377705,-5.012364,4.859516,3.459047,-9.520136,-2.921796,-7.943654,-2.094206,-2.802472,-7.996347,7.987091,8.753106,4.237342,-5.266201,-0.484261,-9.452734,-8.723658,-4.584512,1.755844,-3.834570,7.424081,-0.405603,-4.385297,7.840762,-4.502255,0.974994,1.927531,7.947864,6.647266,-9.148489,-6.621223,-3.460037,-8.500766,-0.360091,-3.037477,1.865751,7.968682,-0.429302,-0.041758,6.084447,4.464114,-2.528195,0.917689,-0.098891,-1.779501,-9.905566,6.843496,5.401254,6.568148,6.967328,-3.632508,1.147521,-4.673069,4.368391,5.673292,1.435384,3.743382,-4.294937,-6.977440,7.843150,9.008918,8.585533,-1.010167,-6.971517,-7.516109,6.798467,-9.151825,0.628725,-0.705997,7.059407,0.329584,7.745806,2.752027,1.404268,-4.005180,-8.995359,-9.943708,-1.574158,-5.026538,2.827943,0.755438,4.809773,7.907055,-2.256367,5.300598,-3.989646,3.247836],[0.334333,3.004152,-1.510126,9.547972,0.970607,-3.942749,-2.271727,0.056956,7.022243,-3.952583,-1.787732,8.864494,-8.590685,9.203736,2.426880,-1.778784,0.022421,0.347535,8.999509,-4.330686,3.937382,-3.805088,5.610862,2.809641,-0.556737,6.272223,4.277742,-6.535780,1.433566,-0.603572,-4.272994,9.956643,-9.227979,3.005349,6.025941,7.709905,-1.253576,-9.620633,0.772279,-2.452835,9.256321,-9.742264,6.672407,-5.620049,-0.620066,6.692940,3.325987,-1.920595,-0.839997,0.952216,5.082981,-0.653069,1.203013,4.025002,-2.767764,-2.114498,1.103595,-1.718615,7.737101,5.548777,-9.918083,-8.122766,5.072865,8.945100,-2.646106,8.692526,4.239192,2.982299,-0.647077,6.455073,4.801931,0.901081,4.678005,5.581981,-7.795034,-7.746889,1.097705,6.650237,-3.198322,-1.033031,4.837864,-5.969823,0.446947,1.966268,2.247954,-9.734489,8.942272,4.123449,-8.903754,0.513655,-7.310159,0.968023,3.318265,-9.265983,5.243503,-5.676838,9.488538,-3.008312,9.596149,-3.345581,-3.310159,0.964421,-6.985327,-6.829949,8.221730,-1.634920,-2.554380,4.275624,-8.137626,2.397914,8.009762,-4.197612,-1.050374,3.645606,0.002816,-4.637267,5.619181,2.405151,4.039145,-3.333594,8.992426,-6.324680,-6.596191,9.022291,9.009189,-1.921965,1.193902,4.969139,4.304170,0.552263,5.883770,0.319315,9.029858,-3.808258,-6.054104,5.330805,6.557501,1.616682,1.723003,-9.010153,4.199121,1.642701,-5.636748,4.549424,-2.103034,-4.049759,-7.902150,-3.984660,-5.509066,-6.473332,7.508586,-5.443985,6.463289,-4.791498,8.050593,-1.625847,5.671060,7.730474,-6.311210,-5.316435,0.040976,-7.519712,-1.052194,3.351190,-4.652526,0.212736,6.031118,-7.321303,-0.501328,8.628001,-2.553911,-7.303745,-9.486439,7.612874,-4.886718,7.091976,-7.495350,-2.107978,-1.970698,6.404581,7.458637,-8.267255,-5.667844,-4.525367,7.031245,-1.554624,2.954341,1.118965,-1.642817,-8.702983,-9.224725,-6.384980,-4.663827,5.354523,-6.249534,3.043762,-3.430832,-0.332884,-5.454299,4.473448,6.678343,0.360633,-0.795022,-7.552159,5.460505,-3.006226,-0.648827,-4.640402,0.906070,3.523938,-7.022715,6.275701,-2.160042,-0.714653,-9.407901,-8.688921,1.758491,-1.518195,-6.356288,4.769650,-4.691151,-9.263914,-6.398216,8.922585,-0.543239,-7.982186,7.809157,4.160736,8.969665,-2.114612,5.830338,3.156287,2.523470,8.260189,-2.174553,8.356848,-0.881767,2.016631,3.164721,-8.731594,3.955191,-3.155534,-8.316474,-4.353950,6.366712,-4.873827,0.957874,-3.264916,3.513838,0.336291,-5.756142,-0.830437,-4.954500,2.599014,-1.676356,6.522488,-6.854477,-5.240811,-3.888838,5.692233,-4.788517,-2.302038,9.271976,-0.936154,-5.328588,8.804324,-9.682981,2.282093,9.311909,-1.904677,-1.580367,-2.502989,-3.705940,-3.306913,8.772388,-1.424840,3.988186,-8.916271,2.148775,5.868404,-5.527311,-6.057756,9.098233,8.676262,8.372828,-6.630948,3.815789,-6.209776,-8.173776,-2.141789,-3.244570,4.828326,-0.986449,3.749366,-2.910990,7.142595,4.537720,6.066812,-8.987396,6.364436,2.844815,0.567074,-9.057120,-9.435190,-7.748807,9.931706,5.381344,-4.031934,-5.263614,-5.855613,3.759442,0.734432,4.828601,3.676746,1.336154,8.944553,-4.223235,8.831472,4.504127,3.829108,7.287754,-0.673407,7.143706,-4.541789,-9.128141,-9.967936,-9.876449,-2.285428,2.324853,6.535727,1.560185,5.514988,-0.477268,-0.400134,-7.847669,7.798740,-3.141168,-9.109747,9.151350,7.209777,3.808848,1.104168,9.690587,-8.450019,0.338112,3.745662,-8.657617,-5.194327,-1.693424,-9.875425,2.861395,-8.867551,-6.416907,2.454926,6.770063,8.175118,9.583059,-2.699348,9.835041,7.645013,7.921091,8.283525,6.913723,-7.867826,-9.875814,-1.509864,-6.642460,-2.568893,5.477205,-3.320346,-6.868178,-2.935217,-3.275206,0.357865,7.572516,-8.345976,7.957466,-3.948891,-4.767385,-9.972552,-2.658077,-0.367838,9.115886,7.875638,-3.067790,2.208398,0.155812,-6.168843,9.559622,6.692053,-5.767311,5.759204,0.522771,-2.641511,-1.283542,9.776546,7.744791,9.603088,-8.977263,-9.514125,9.961467,5.853090,7.958517,-7.622050,2.741810,2.179446,-6.554039,-5.838698,-3.128142,1.501575,9.391092,8.642650,-8.729561,-9.725411,8.922422,0.942730,-3.878096,-0.735310,0.960948,-0.262683,-9.872771,-8.552639,-0.166283,4.829926,-7.956835,8.099258,1.942610,-4.187590,-7.309005,-1.330088,5.269230,-8.688608,-5.366060,9.491401,6.080753,6.234018,5.051627,-9.994679,-3.385136,7.208393,-0.322598,-2.234839,0.688808,0.552993,6.131600,-5.622501,-9.972137,1.351259,0.900232,-4.959042],[-6.745293,-8.130797,5.374640,-5.329782,-5.733551,-3.067282,-8.279507,-7.529794,-4.544520,5.191091,7.288710,-5.753454,-2.020314,5.524288,0.161412,9.115441,2.940247,2.895372,-8.628924,-1.450340,6.560135,-5.291286,9.209280,-9.203048,-6.464396,-5.615823,5.546380,9.998108,-7.855781,2.148332,-4.097744,4.143427,-6.412609,8.247008,-8.633174,-7.731238,-6.622444,-7.017306,5.878653,0.846092,-1.350417,-7.052996,0.266349,-9.045432,-3.252582,0.799030,-9.616553,-8.138104,1.028721,7.974832,2.949053,-2.179103,-7.233637,1.837461,0.475078,-4.660175,-3.079948,3.191740,-2.611030,6.967855,1.043595,-0.694834,-1.253655,-3.375871,-3.834209,7.850054,8.973934,7.146543,-2.303429,-0.117807,-1.094784,-2.738792,3.760745,-6.415963,2.447337,-2.006391,-0.763823,-7.821042,5.799812,-8.706427,-9.382458,2.374800,1.836484,-7.281897,4.159191,4.809709,9.087994,8.529676,2.171272,-2.803930,8.347273,7.323855,6.443208,-7.679041,3.412794,-6.767360,2.701464,0.709661,3.562845,-7.736555,-0.310299,-4.956404,2.428923,-4.119954,9.844908,5.038905,6.082670,-8.084758,-7.851212,4.738260,3.102396,-6.766682,9.116423,-5.893909,4.870370,-7.403558,-1.099229,9.851483,-5.578141,9.150343,-4.534350,-2.699619,6.358047,8.631061,-2.717382,6.796251,-6.403575,-1.877191,-8.477629,-3.631282,7.444519,4.784038,5.872161,-9.273655,4.756868,8.670858,-1.775366,6.567057,-8.488955,-5.990498,-3.194865,4.739057,4.534875,-7.437068,-3.669146,5.245791,2.940480,0.730181,1.816328,-7.959623,1.585460,-7.671728,-2.818186,-2.847989,-6.343976,9.424119,-6.448543,-0.354405,-4.651769,2.112237,8.682119,-5.554400,-4.540958,-7.262804,4.770019,-0.237236,-9.057420,7.497522,-0.915317,-7.466685,-9.719086,7.081716,-3.852214,-2.728942,2.729296,8.069159,-8.048323,2.711650,2.556309,-2.956106,3.843944,-1.838553,7.641512,-3.274970,1.693616,1.457458,-6.952525,-0.946653,-6.516352,6.024962,3.424291,-7.171674,-2.443777,-3.491127,5.034571,3.171262,6.620150,1.057426,5.824623,-1.724687,-7.811423,-1.214997,9.746580,4.132961,3.593083,4.229053,2.530066,-3.254130,6.125734,0.995336,0.372287,5.115303,-9.178270,1.751427,-9.384307,-4.555287,4.814675,5.742378,-1.461888,-0.277466,6.299578,-0.820005,-7.098415,8.121162,4.253588,-1.428240,4.744122,2.378839,-5.506115,6.485495,-8.323089,9.564489,-4.928482,-6.708538,4.232985,-5.809686,-6.898182,2.250450,4.923272,3.329135,-3.995048,6.170323,3.007515,7.751678,0.485358,0.106257,6.319165,-7.872712,1.827285,-0.873188,7.145570,-6.086030,2.419009,-2.241466,-1.889399,1.800189,-9.248600,-4.183362,8.448993,1.647630,-5.819355,-1.506513,-4.760905,1.973343,-6.964571,-1.429091,-7.393963,6.353118,8.349175,-0.693752,7.409767,-6.102051,-6.012028,-0.359347,-2.161937,-1.915275,-1.632878,-1.077651,0.378657,-4.099528,5.029894,-5.495814,5.036198,5.299160,1.132625,-5.066560,7.978776,-8.184918,0.048996,2.799525,5.769225,-3.558990,4.549511,-1.765286,-3.620459,-5.058447,7.139852,5.686481,-8.852957,3.464208,-3.198245,2.337665,-4.448674,4.778420,-3.085408,-0.701678,4.928901,0.474060,2.996908,4.625489,-8.285659,-9.299014,-5.050067,6.751513,-4.437393,7.695969,-4.661888,3.677073,-4.754580,5.783483,2.599228,-7.036985,-9.589941,0.874189,5.969549,-1.800680,-3.662705,-1.845822,-0.220352,-3.684068,-9.788074,-4.495679,-5.487313,-2.454892,-8.910275,3.151234,7.547837,-2.676004,8.089028,1.230092,7.023382,-7.109255,-6.946213,-4.891601,-7.895837,-0.513313,-9.663716,-2.853809,-5.246920,-2.600289,-4.074101,-5.790949,3.101780,8.630843,0.639903,-2.767453,-6.452477,-4.442827,2.431920,-7.628809,9.876395,-7.781392,7.874611,-9.602630,3.875464,-5.924364,-6.081899,6.744985,-1.535059,-8.791307,-2.272324,-5.629647,-2.478441,3.440208,5.580365,6.753864,-0.436342,1.772213,-6.244234,6.694670,-1.281639,9.429401,9.601983,-0.335428,-7.008921,7.846460,8.868777,3.359561,-8.869461,0.142132,-2.452326,4.178666,0.460595,-6.155660,-0.489060,2.179118,-6.124219,-4.037856,-2.356994,3.114567,7.409026,4.120502,-1.872140,-7.248291,6.801105,-4.856838,3.560204,8.569286,-7.931722,-5.575570,9.209206,8.956864,7.506442,6.217625,7.694567,-7.167688,0.706959,9.503933,-1.282864,2.055712,-7.582035,-6.273708,1.033325,-3.475521,3.473436,-6.115421,-0.098379,-7.965204,4.666115,8.314565,-4.824319,-4.407374,5.045968,2.114004,5.759522,-0.068902,7.589525,9.878191,-1.406242,-2.955421,9.097543,-6.547274,9.839106,2.925575,3.003304,3.824647,-5.017629,3.623456,1.955587,2.665722]], dtype = "float32")#candidate|14220|(3, 450)|const|float32
call_14217 = relay.TupleGetItem(func_9596_call(relay.reshape(var_14218.astype('uint64'), [6, 16, 12]), relay.reshape(const_14219.astype('uint16'), [256,]), relay.reshape(const_14220.astype('float32'), [675, 2]), ), 1)
call_14221 = relay.TupleGetItem(func_9601_call(relay.reshape(var_14218.astype('uint64'), [6, 16, 12]), relay.reshape(const_14219.astype('uint16'), [256,]), relay.reshape(const_14220.astype('float32'), [675, 2]), ), 1)
output = relay.Tuple([call_14206,call_14208,call_14217,var_14218,const_14219,const_14220,])
output2 = relay.Tuple([call_14207,call_14209,call_14221,var_14218,const_14219,const_14220,])
func_14222 = relay.Function([var_14218,], output)
mod['func_14222'] = func_14222
mod = relay.transform.InferType()(mod)
var_14223 = relay.var("var_14223", dtype = "uint64", shape = (1, 1152))#candidate|14223|(1, 1152)|var|uint64
output = func_14222(var_14223)
func_14224 = relay.Function([var_14223], output)
mutated_mod['func_14224'] = func_14224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13064_call = mod.get_global_var('func_13064')
func_13066_call = mutated_mod.get_global_var('func_13066')
call_14230 = func_13064_call()
call_14231 = func_13064_call()
output = call_14230
output2 = call_14231
func_14239 = relay.Function([], output)
mod['func_14239'] = func_14239
mod = relay.transform.InferType()(mod)
mutated_mod['func_14239'] = func_14239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14239_call = mutated_mod.get_global_var('func_14239')
call_14240 = func_14239_call()
output = call_14240
func_14241 = relay.Function([], output)
mutated_mod['func_14241'] = func_14241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mod.get_global_var('func_7800')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_14338 = relay.TupleGetItem(func_7800_call(), 0)
call_14339 = relay.TupleGetItem(func_7801_call(), 0)
output = call_14338
output2 = call_14339
func_14349 = relay.Function([], output)
mod['func_14349'] = func_14349
mod = relay.transform.InferType()(mod)
mutated_mod['func_14349'] = func_14349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14349_call = mutated_mod.get_global_var('func_14349')
call_14350 = func_14349_call()
output = call_14350
func_14351 = relay.Function([], output)
mutated_mod['func_14351'] = func_14351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_14442 = func_7687_call()
call_14443 = func_7687_call()
func_7196_call = mod.get_global_var('func_7196')
func_7198_call = mutated_mod.get_global_var('func_7198')
call_14452 = relay.TupleGetItem(func_7196_call(), 0)
call_14453 = relay.TupleGetItem(func_7198_call(), 0)
func_9929_call = mod.get_global_var('func_9929')
func_9931_call = mutated_mod.get_global_var('func_9931')
call_14460 = func_9929_call()
call_14461 = func_9929_call()
output = relay.Tuple([call_14442,call_14452,call_14460,])
output2 = relay.Tuple([call_14443,call_14453,call_14461,])
func_14468 = relay.Function([], output)
mod['func_14468'] = func_14468
mod = relay.transform.InferType()(mod)
output = func_14468()
func_14469 = relay.Function([], output)
mutated_mod['func_14469'] = func_14469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8652_call = mutated_mod.get_global_var('func_8652')
call_14477 = relay.TupleGetItem(func_8651_call(), 0)
call_14478 = relay.TupleGetItem(func_8652_call(), 0)
output = relay.Tuple([call_14477,])
output2 = relay.Tuple([call_14478,])
func_14482 = relay.Function([], output)
mod['func_14482'] = func_14482
mod = relay.transform.InferType()(mod)
output = func_14482()
func_14483 = relay.Function([], output)
mutated_mod['func_14483'] = func_14483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_14502 = relay.TupleGetItem(func_7653_call(), 0)
call_14503 = relay.TupleGetItem(func_7655_call(), 0)
uop_14506 = relay.sqrt(call_14502.astype('float64')) # shape=(14, 6, 9)
uop_14508 = relay.sqrt(call_14503.astype('float64')) # shape=(14, 6, 9)
func_6366_call = mod.get_global_var('func_6366')
func_6367_call = mutated_mod.get_global_var('func_6367')
call_14509 = func_6366_call()
call_14510 = func_6366_call()
func_8516_call = mod.get_global_var('func_8516')
func_8520_call = mutated_mod.get_global_var('func_8520')
var_14515 = relay.var("var_14515", dtype = "uint16", shape = (33,))#candidate|14515|(33,)|var|uint16
const_14516 = relay.const([[-7,6,-7,10,3,-5,4,-9,-6,-2,7,-9,10,-7,-4,-7,10,-4,-8,-2,-2,9,7,-8,-7,3,6,5,1,-3,1,-6,5,-9,-6,-3,-7,6,-2,-8,-7,-3,2,1,9,8,3,-2,-6,3,-1,-2,-1,-4,-5,10,-1,6,-2,-7,-2,5,-9,-6,-8,-8,-5,9,3,9,-6,-1,-5,-2,-4,9,4,-3,-1,-7,-10,-1,-7,3,4,9,10,-8,-5,-1,9,-8,6,-5,10,7,1,7,10,10,-1,-5,7,5,6,-4,7,-10,-3,9,1,3,6,1,-9,10,-8,-10,-10,10,2,3,-5,-2,9,10,-9,-1,-5,1,-3,-6],[7,7,-3,-3,10,6,-6,2,2,-5,-8,-6,-1,1,-9,5,2,-3,-1,-2,10,-8,8,4,-3,1,-7,6,-5,2,-3,1,-10,-4,1,-4,6,9,-4,-4,-4,-10,-3,9,-5,-3,7,-6,8,-10,6,2,-5,-5,-6,6,5,10,-6,3,1,10,2,7,-7,-1,-10,-6,3,-4,2,8,-9,3,-9,-5,-4,10,-4,-8,-1,-6,1,6,3,3,-1,3,9,-3,4,-1,-6,6,6,-1,-10,-8,8,5,5,9,8,7,-7,8,-10,-2,9,-6,-2,4,3,5,9,3,7,-1,3,4,8,-3,-2,7,-5,-8,10,-10,-5,6,-4,-7],[10,-6,6,3,2,2,-3,3,2,6,5,-8,-1,-4,1,6,9,-4,-9,-9,-3,3,10,5,-9,-5,-6,-7,-7,-4,2,2,9,6,-3,9,6,3,9,-9,8,7,8,3,-2,-6,4,-8,3,2,-1,-3,2,4,-5,-4,-10,9,2,5,-10,10,10,8,4,-1,-9,-1,-4,6,9,-4,-10,8,6,8,6,-9,-8,2,-5,4,-1,6,-1,5,-4,-10,2,8,1,4,-6,4,8,-3,-10,8,3,5,8,-3,-10,7,-10,2,1,-9,-8,8,-8,8,9,7,2,3,5,2,-10,7,-4,-1,4,-1,-2,8,-1,8,-4,1,1,6]], dtype = "uint16")#candidate|14516|(3, 132)|const|uint16
const_14517 = relay.const([-9,-5,-2,7,5,3,4,8,-7,-10,-10,-2,-10,4,-8,2,-7,-6,-7,2,6,7,-3,6,3,-7,-10,-3,-1,-4,3,8,4,-10,-9,-10,-10,-9,-3,2,-10,-10,-7,9,-9,9,-9,-3,3,4,6,10,-5,8,5,6,9,4,-9,8,-7,2,-5,1,-6,9,10,-7,-10,3,-5,9,-4,-3,-7,1,-7,-10,-5,10,5,-5,-9,-10,-5,4,-9,-5,-5,6,-1,-6,9,1,-8,-7,-2,-7,-5,2,7,2,-7,9,-7,-4,1,7,7,-5,-10,-5,5,5,-9,1,-3,4,-4,-3,-7,9,8,-7,7,7,4,-2,-6,-10,4,-4,6,8,-10,-1,8,6,-10,-1,5,-4,2,10,5,-4,3,7,-6,9,5,-3,-4,9,2,-8,-7,-7,-10,-6,7,3,8,9,-4,9,10,2,-1,-7,10,1,10,6,-5,5,2,1,-10,3,-1,-3,4,-7,6,-1,1,-4,10,-1,2,-6,-5,-6,7,9,4,9,5,5,9,-8,8,1,3,4,1,-2,8,1,1,-5,10,-3,1,-8,5,-3,7,-2,10,-6,9,5,-9,-5,8,5,6,-5,-7,-9,9,5,8,6,5,-6,1,-4,-2,1,10,8,-4,-5,5,3,-6,10,8,-1,-8,-9,-2,9,1,2,6,9,2,-10,6,1,-6,9,6,8,8,-5,10,4,6,5,5,-1,-6,2,-8,7,3,-5,5,-3,1,-3,3,-4,-3,-10,-3,-3,-4,2,-9,4,-4,-9,4,-1,-1,8,4,-3,-9,7,-6,2,7,-3,-2,6,-8,6,-8,-9,-3,-3,8,-6,-2,10,3,-9,-5,-7,-9,-4,8,1,7,5,8,9,-7,-5,-7,-7,7,3,10,1,-2,8,-5,8,-8,1,2,-2,-6,7,1,6,-2,10,-8,1,3,8,8,-9,-8,4,2,-10,-4,2,1,-3,-6,4,3,-1,-7,-4,6,3,6,7,-5,4,2,-7,3,-7,-3,2,6,-2,-4,-8,-2,6,10,5,10,9,7,-6,-3,9,4,10,7,-5,-8,3,5,9,-5,-5,4,-9,-7,1,-8,6,4,-1,9,3,-10,9,-8,-3,3,-7,9,9,-1,-5,-1,-8,-10,7,9,-9,4,4,-8,-4,2,-9,-7,6,7,4,6,-4,-5,6,-10,-2,-2,-6,-1,1,-4,-6,-9,9,-8,7,-9,8,3,-7,-8,-7,3,-3,6,10,4,-10,-10,10,-4,-10,7,6,-4,1,1,-2,-1,-1,-9,-8,-6,-8,7,-4,7,3,-4,4,-1,-9,4,7,8,-4,-6,2,1,10,-9,9,10,10,1,1,-8,4,-2,7,6,7,-4,-8,10,-2,-4,-7,-5,6,10,9,8,1,-4,-9,2,4,6,10,2,7,5,8,-10,5,2,1,9,9,10,6,6,9,-4,10,-3,9,2,7,2,5,7,-5,5,2,3,-1,-7,-5,-1,6,3,-3,3,-10,-3,-8,-8,-9,-8,-10,6,-2,-2,-6,1,9,5,10,2,-2,4,7,4,6,-6,3,-10,9,-1,6,-4,5,-7,-9,6,7,-3,3,-2,-1,5,-4,-10,-8,-7,2,-9,5,5,-8,5,-10,-10,10,-2,-10,-5,-4,7,-6,6,8,-7,3,6,1,-5,-2,6,6,-2,-6,3,2,10,6,7,1,-4,-4,-6,-4,9,-5,-7,-2,-9,6,8,4,7,4,-2,8,9,-8,8,-5,7,2,5,5,-4,-8,10,-10,1,-2,3,1,-5,-7,3,2,6,-8,-9,4,3,-8,5,-3,-4,-9,7,8,-3,7,-1,-9,-2,-7,-9,6,5,6,-4,6,6,-4,7,6,-9,7,-9,-8,-3,-6,7,6,-8,4,3,-9,-7,-3,4,-6,4,6,10,-6,8,5,4,9,-6,-3,3,8,-2,4,-2,-3,-4,10,3,-6,10,6,5,-5,8,-7,-7,-3,-10,8,-9,-10,10,-8,-8,3,8,-1,7,-3,3,10,-7,-2,1,-10,-3,-5,2,7,10,7,9,10,-5,3,-4,-9,-5,9,3,8,10,10,-9,-2,-6,6,9,3,10,2,-8,-7,4,-1,-7,-4,2,-1,-10,9,-1,3,-4,4,2,-10,-8,5,4,10,5,-8,-9,-10,-1,-5,6,4,4,-6,7,1,2,9,4,-5,5,-7,-2,3,6,8,6,3,-4,-8,-4,6,5,-10,-7,7,8,-6,1,-6,5,-10,-9,-3,-4,4,2,-2,7,7,6,-4,9,7,-9,-6,10,-7,3,-2,3,-4,7,-3,9,6,5,10,-2,-4,3,-7,-8,-1,-6,-9,-10,5,1,10,9,5,-10,6,3,2,9,-10,4,1,6,-1,3,4,4,-3,-1,-7,-3,-2,-4,-4,-6,4,-8,9,3,2,6,3,1,-4,-4,5,5,-8,4,2,8,9,10,-2,10,10,-4,-7,-9,-9,-2,-2,2,4,4,5,3,-8,3,-6,7,-8,-1,6,-6,4,-1,-2,8,10,-1,2,10,7,-3,6,-10,-1,-9,-2,-5,-10,-3,-9,6,1,-4,-5,4,-6,6,-6,-6,9,7,-10,-6,-7,3,-9,7,10,4,6,7,6,-5,10,-3,-9,-8,3,9,4,7,-1,-5,4,6,1,1,5,-2,-9,3,5,5,5,7,-8,-3,9,-1,9,-2,-1,10,10,10,-8,7,4,1,-8,1,5,4,-3,-6,2,-3,-4,8,6,5,-3,-7,-6,8,-7,9,-2,5,-10,8,-10,5,-5,-9,-3,2,7,-4,-8,-7,1,8,-9,-9,-3,-10,-7,8,-10,-10,1,10,1,-9,6,3,-1,1,1,10,-6,-8,7,-2,3,1,-5,-10,-5,-3,-6,-10,-7,-9,-2,6,-9,-8,2,-3,-5,-7,-5,7,7,-3,-8,1,6,6,9,6,8,-6,8,-3,4,-3,8,-1,10,9,-8,5,-2,-4,3,-9,-5,-9,-4,6,-2,-1,7,-5,-7,-6,7,-1,-10,-10,-6,-4,-3,6,7,9,8,-2,-1,3,3,5,9,-7,-2,4,5,10,2,9,-7,1,-6,2,9,-5,3,2,-5,-2,7,6,-5,4,-4,9,9,7,-2,-3,4,-5,8,-8,-8,2,6,9,-8,-1,4,-4,-9,-10,-1,5,-1,-4,-10,3,-5,-5,-3,-4,-7,-3,-2,-6,1,-3,-9,10,9,-10,-8,-6,8,-4,6,-3,-1,-4,5,-6,-7,3,-7,7,-8,-4,-10,7,-2,10,-9,10,9,-6,5,-3,3,8,8,6,2,10,2,3,-10,-3,4,-2,-9,-7,2,-5,-5,-3,-8,-9,-2,-6,8,-10,10,1,9,9,2,2,-6,-9,2,6,-2,2,-3,10,-10,2,-4,-6,-6,10,-10,2,-1,-9,-4,5,-9,1,9,-3,-2,7,-8,8,7,-2,4,7,6,10,-2,-5,4,-2,7,-2,-2,4,3,4,4,8,-1,-5,2,6,-2,2,-8,9,-10,6,-9,2,4,3,-3,8,-8,10,8,-2,8,6,-10,3,7,2,10,9,1,4,5,-7,-2,-2,2,9,-10,5,-2,-10,6,5,9,1,-8,-5,4,-5,-8,7,5,-9,2,6,2,3,9,5,-1,-9,9,1,5,-2,-5,4,-8,6,9,-4,-8,-1,6,-7,10,8,-10,-5,-7,8,7,-3,-9,4,8,8,-6,3,5,-1,-5,-6,-5,10,9,5,1,10,-4,-7,4,-10,-4,-2,-4,4,9,-4,3,8,1,-8,1,4,4,-10,7,-9,-3,-10,4,-8,-5,1,4,10,5,10,7,1,-5,8,-9,3,-7,-10,-10,-8,-1,-5,-10,-4,2,-1,8,-10,3,5,4,7,-4,6,5,10,-5,-3,-7,-2,-1,-10,6,-5,8,2,-9,-7,6,-8,-9,9,1,-9,-10,-1,-5,-3,-1,-2,8,4,3,-2,-7,1,9,10,-3,10,3,8,2,-8,10,5,4,-7,1,5,10,-5,-6,-8,-5,6,-8,5,6,5,5,-3,-9,5,10,9,-6,8,9,-2,-2,4,3,-2,-3,4,-6,9,7,-5,-6,6,1,5,-8,6,-7,2,8,-10,2,2,-5,5,-5,-1,-7,2,-1,-7,5,-10,2,4,-9,-4,2,-1,7,9,4,-2,6,-8,10,-7,7,-9,1,-2,10,1,3,9,6,9,-7,-3,-4,2,-6,-3,8,5,-5,-2,-4,9,5,-5,-5,4,-7,4,10,7,7,-3,2,-4,7,-4,-9,10,8,-6,2,-4,7,-10,8,-6,-7,-7,9,6,7,8,-2,9,-4,2,5,4,-7,-2,2,-7,-7,10,8,-1,-5,-3,7,-6,9,6,-5,9,-7,-7,8,-9,-10,10,-6,-3,10,-7,-7,8,2,-1,6,-9,8,-1,-9,1,1,7,2,8,5,-9,-8,-8,2,-9,7,1,-3,-2,-5,2,-4,-3,9,8,-7,-6,-1,7,-6,-2,-4,10,7,10,7,-8,-2,-9,4,-7,-2,8,-9,-9,-1,8,5,-3,-2,-4,8,1,-7,-1,6,10,10,3,2,4,2,9,10,10,6,2,-10,-3,1,-5,-1,7,4,-3,-10,10,-9,-3,-10], dtype = "uint16")#candidate|14517|(1760,)|const|uint16
call_14514 = relay.TupleGetItem(func_8516_call(relay.reshape(var_14515.astype('uint16'), [33,]), relay.reshape(const_14516.astype('uint16'), [396,]), relay.reshape(const_14517.astype('uint16'), [1760,]), ), 0)
call_14518 = relay.TupleGetItem(func_8520_call(relay.reshape(var_14515.astype('uint16'), [33,]), relay.reshape(const_14516.astype('uint16'), [396,]), relay.reshape(const_14517.astype('uint16'), [1760,]), ), 0)
output = relay.Tuple([uop_14506,call_14509,call_14514,var_14515,const_14516,const_14517,])
output2 = relay.Tuple([uop_14508,call_14510,call_14518,var_14515,const_14516,const_14517,])
func_14529 = relay.Function([var_14515,], output)
mod['func_14529'] = func_14529
mod = relay.transform.InferType()(mod)
var_14530 = relay.var("var_14530", dtype = "uint16", shape = (33,))#candidate|14530|(33,)|var|uint16
output = func_14529(var_14530)
func_14531 = relay.Function([var_14530], output)
mutated_mod['func_14531'] = func_14531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8307_call = mod.get_global_var('func_8307')
func_8308_call = mutated_mod.get_global_var('func_8308')
call_14573 = func_8307_call()
call_14574 = func_8307_call()
output = relay.Tuple([call_14573,])
output2 = relay.Tuple([call_14574,])
func_14577 = relay.Function([], output)
mod['func_14577'] = func_14577
mod = relay.transform.InferType()(mod)
mutated_mod['func_14577'] = func_14577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14577_call = mutated_mod.get_global_var('func_14577')
call_14578 = func_14577_call()
output = call_14578
func_14579 = relay.Function([], output)
mutated_mod['func_14579'] = func_14579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13053_call = mod.get_global_var('func_13053')
func_13055_call = mutated_mod.get_global_var('func_13055')
call_14659 = relay.TupleGetItem(func_13053_call(), 0)
call_14660 = relay.TupleGetItem(func_13055_call(), 0)
func_13064_call = mod.get_global_var('func_13064')
func_13066_call = mutated_mod.get_global_var('func_13066')
call_14661 = func_13064_call()
call_14662 = func_13064_call()
output = relay.Tuple([call_14659,call_14661,])
output2 = relay.Tuple([call_14660,call_14662,])
func_14668 = relay.Function([], output)
mod['func_14668'] = func_14668
mod = relay.transform.InferType()(mod)
output = func_14668()
func_14669 = relay.Function([], output)
mutated_mod['func_14669'] = func_14669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14672 = relay.var("var_14672", dtype = "float64", shape = (12, 14, 9))#candidate|14672|(12, 14, 9)|var|float64
uop_14673 = relay.atan(var_14672.astype('float64')) # shape=(12, 14, 9)
func_4333_call = mod.get_global_var('func_4333')
func_4339_call = mutated_mod.get_global_var('func_4339')
const_14699 = relay.const(8, dtype = "int16")#candidate|14699|()|const|int16
var_14700 = relay.var("var_14700", dtype = "int16", shape = (98,))#candidate|14700|(98,)|var|int16
var_14701 = relay.var("var_14701", dtype = "float32", shape = (1056,))#candidate|14701|(1056,)|var|float32
var_14702 = relay.var("var_14702", dtype = "float32", shape = (1350, 1))#candidate|14702|(1350, 1)|var|float32
call_14698 = relay.TupleGetItem(func_4333_call(relay.reshape(const_14699.astype('int16'), []), relay.reshape(var_14700.astype('int16'), [14, 7, 1]), relay.reshape(var_14701.astype('float32'), [8, 132]), relay.reshape(var_14702.astype('float32'), [1350,]), ), 2)
call_14703 = relay.TupleGetItem(func_4339_call(relay.reshape(const_14699.astype('int16'), []), relay.reshape(var_14700.astype('int16'), [14, 7, 1]), relay.reshape(var_14701.astype('float32'), [8, 132]), relay.reshape(var_14702.astype('float32'), [1350,]), ), 2)
output = relay.Tuple([uop_14673,call_14698,const_14699,var_14700,var_14701,var_14702,])
output2 = relay.Tuple([uop_14673,call_14703,const_14699,var_14700,var_14701,var_14702,])
func_14714 = relay.Function([var_14672,var_14700,var_14701,var_14702,], output)
mod['func_14714'] = func_14714
mod = relay.transform.InferType()(mod)
var_14715 = relay.var("var_14715", dtype = "float64", shape = (12, 14, 9))#candidate|14715|(12, 14, 9)|var|float64
var_14716 = relay.var("var_14716", dtype = "int16", shape = (98,))#candidate|14716|(98,)|var|int16
var_14717 = relay.var("var_14717", dtype = "float32", shape = (1056,))#candidate|14717|(1056,)|var|float32
var_14718 = relay.var("var_14718", dtype = "float32", shape = (1350, 1))#candidate|14718|(1350, 1)|var|float32
output = func_14714(var_14715,var_14716,var_14717,var_14718,)
func_14719 = relay.Function([var_14715,var_14716,var_14717,var_14718,], output)
mutated_mod['func_14719'] = func_14719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mod.get_global_var('func_8787')
func_8789_call = mutated_mod.get_global_var('func_8789')
call_14806 = func_8787_call()
call_14807 = func_8787_call()
output = relay.Tuple([call_14806,])
output2 = relay.Tuple([call_14807,])
func_14820 = relay.Function([], output)
mod['func_14820'] = func_14820
mod = relay.transform.InferType()(mod)
output = func_14820()
func_14821 = relay.Function([], output)
mutated_mod['func_14821'] = func_14821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9811_call = mod.get_global_var('func_9811')
func_9812_call = mutated_mod.get_global_var('func_9812')
call_14903 = relay.TupleGetItem(func_9811_call(), 1)
call_14904 = relay.TupleGetItem(func_9812_call(), 1)
func_8651_call = mod.get_global_var('func_8651')
func_8652_call = mutated_mod.get_global_var('func_8652')
call_14924 = relay.TupleGetItem(func_8651_call(), 0)
call_14925 = relay.TupleGetItem(func_8652_call(), 0)
output = relay.Tuple([call_14903,call_14924,])
output2 = relay.Tuple([call_14904,call_14925,])
func_14935 = relay.Function([], output)
mod['func_14935'] = func_14935
mod = relay.transform.InferType()(mod)
output = func_14935()
func_14936 = relay.Function([], output)
mutated_mod['func_14936'] = func_14936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6496_call = mod.get_global_var('func_6496')
func_6498_call = mutated_mod.get_global_var('func_6498')
call_14981 = relay.TupleGetItem(func_6496_call(), 1)
call_14982 = relay.TupleGetItem(func_6498_call(), 1)
output = call_14981
output2 = call_14982
func_14985 = relay.Function([], output)
mod['func_14985'] = func_14985
mod = relay.transform.InferType()(mod)
mutated_mod['func_14985'] = func_14985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14985_call = mutated_mod.get_global_var('func_14985')
call_14986 = func_14985_call()
output = call_14986
func_14987 = relay.Function([], output)
mutated_mod['func_14987'] = func_14987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_14993 = relay.TupleGetItem(func_7273_call(), 6)
call_14994 = relay.TupleGetItem(func_7275_call(), 6)
uop_14998 = relay.erf(call_14993.astype('float64')) # shape=(440,)
uop_15000 = relay.erf(call_14994.astype('float64')) # shape=(440,)
output = relay.Tuple([uop_14998,])
output2 = relay.Tuple([uop_15000,])
func_15008 = relay.Function([], output)
mod['func_15008'] = func_15008
mod = relay.transform.InferType()(mod)
mutated_mod['func_15008'] = func_15008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15008_call = mutated_mod.get_global_var('func_15008')
call_15009 = func_15008_call()
output = call_15009
func_15010 = relay.Function([], output)
mutated_mod['func_15010'] = func_15010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
call_15019 = relay.TupleGetItem(func_10931_call(), 0)
call_15020 = relay.TupleGetItem(func_10933_call(), 0)
output = call_15019
output2 = call_15020
func_15021 = relay.Function([], output)
mod['func_15021'] = func_15021
mod = relay.transform.InferType()(mod)
output = func_15021()
func_15022 = relay.Function([], output)
mutated_mod['func_15022'] = func_15022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7903_call = mod.get_global_var('func_7903')
func_7905_call = mutated_mod.get_global_var('func_7905')
call_15026 = relay.TupleGetItem(func_7903_call(), 0)
call_15027 = relay.TupleGetItem(func_7905_call(), 0)
func_10844_call = mod.get_global_var('func_10844')
func_10846_call = mutated_mod.get_global_var('func_10846')
call_15051 = relay.TupleGetItem(func_10844_call(), 1)
call_15052 = relay.TupleGetItem(func_10846_call(), 1)
output = relay.Tuple([call_15026,call_15051,])
output2 = relay.Tuple([call_15027,call_15052,])
func_15057 = relay.Function([], output)
mod['func_15057'] = func_15057
mod = relay.transform.InferType()(mod)
mutated_mod['func_15057'] = func_15057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15057_call = mutated_mod.get_global_var('func_15057')
call_15058 = func_15057_call()
output = call_15058
func_15059 = relay.Function([], output)
mutated_mod['func_15059'] = func_15059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11796_call = mod.get_global_var('func_11796')
func_11798_call = mutated_mod.get_global_var('func_11798')
call_15076 = relay.TupleGetItem(func_11796_call(), 0)
call_15077 = relay.TupleGetItem(func_11798_call(), 0)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_15083 = relay.TupleGetItem(func_10370_call(), 0)
call_15084 = relay.TupleGetItem(func_10372_call(), 0)
output = relay.Tuple([call_15076,call_15083,])
output2 = relay.Tuple([call_15077,call_15084,])
func_15094 = relay.Function([], output)
mod['func_15094'] = func_15094
mod = relay.transform.InferType()(mod)
output = func_15094()
func_15095 = relay.Function([], output)
mutated_mod['func_15095'] = func_15095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13479_call = mod.get_global_var('func_13479')
func_13481_call = mutated_mod.get_global_var('func_13481')
call_15127 = relay.TupleGetItem(func_13479_call(), 0)
call_15128 = relay.TupleGetItem(func_13481_call(), 0)
output = relay.Tuple([call_15127,])
output2 = relay.Tuple([call_15128,])
func_15140 = relay.Function([], output)
mod['func_15140'] = func_15140
mod = relay.transform.InferType()(mod)
output = func_15140()
func_15141 = relay.Function([], output)
mutated_mod['func_15141'] = func_15141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
call_15148 = relay.TupleGetItem(func_10931_call(), 0)
call_15149 = relay.TupleGetItem(func_10933_call(), 0)
output = call_15148
output2 = call_15149
func_15151 = relay.Function([], output)
mod['func_15151'] = func_15151
mod = relay.transform.InferType()(mod)
output = func_15151()
func_15152 = relay.Function([], output)
mutated_mod['func_15152'] = func_15152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12579_call = mod.get_global_var('func_12579')
func_12580_call = mutated_mod.get_global_var('func_12580')
call_15185 = relay.TupleGetItem(func_12579_call(), 0)
call_15186 = relay.TupleGetItem(func_12580_call(), 0)
func_11298_call = mod.get_global_var('func_11298')
func_11300_call = mutated_mod.get_global_var('func_11300')
call_15199 = relay.TupleGetItem(func_11298_call(), 0)
call_15200 = relay.TupleGetItem(func_11300_call(), 0)
func_5123_call = mod.get_global_var('func_5123')
func_5126_call = mutated_mod.get_global_var('func_5126')
var_15225 = relay.var("var_15225", dtype = "uint16", shape = ())#candidate|15225|()|var|uint16
var_15226 = relay.var("var_15226", dtype = "uint16", shape = (28,))#candidate|15226|(28,)|var|uint16
call_15224 = relay.TupleGetItem(func_5123_call(relay.reshape(var_15225.astype('uint16'), []), relay.reshape(var_15226.astype('uint16'), [7, 4, 1]), ), 0)
call_15227 = relay.TupleGetItem(func_5126_call(relay.reshape(var_15225.astype('uint16'), []), relay.reshape(var_15226.astype('uint16'), [7, 4, 1]), ), 0)
output = relay.Tuple([call_15185,call_15199,call_15224,var_15225,var_15226,])
output2 = relay.Tuple([call_15186,call_15200,call_15227,var_15225,var_15226,])
func_15233 = relay.Function([var_15225,var_15226,], output)
mod['func_15233'] = func_15233
mod = relay.transform.InferType()(mod)
mutated_mod['func_15233'] = func_15233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15233_call = mutated_mod.get_global_var('func_15233')
var_15235 = relay.var("var_15235", dtype = "uint16", shape = ())#candidate|15235|()|var|uint16
var_15236 = relay.var("var_15236", dtype = "uint16", shape = (28,))#candidate|15236|(28,)|var|uint16
call_15234 = func_15233_call(var_15235,var_15236,)
output = call_15234
func_15237 = relay.Function([var_15235,var_15236,], output)
mutated_mod['func_15237'] = func_15237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9182_call = mod.get_global_var('func_9182')
func_9184_call = mutated_mod.get_global_var('func_9184')
call_15255 = relay.TupleGetItem(func_9182_call(), 1)
call_15256 = relay.TupleGetItem(func_9184_call(), 1)
output = relay.Tuple([call_15255,])
output2 = relay.Tuple([call_15256,])
func_15257 = relay.Function([], output)
mod['func_15257'] = func_15257
mod = relay.transform.InferType()(mod)
mutated_mod['func_15257'] = func_15257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15257_call = mutated_mod.get_global_var('func_15257')
call_15258 = func_15257_call()
output = call_15258
func_15259 = relay.Function([], output)
mutated_mod['func_15259'] = func_15259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_15301 = relay.TupleGetItem(func_10370_call(), 0)
call_15302 = relay.TupleGetItem(func_10372_call(), 0)
output = relay.Tuple([call_15301,])
output2 = relay.Tuple([call_15302,])
func_15303 = relay.Function([], output)
mod['func_15303'] = func_15303
mod = relay.transform.InferType()(mod)
output = func_15303()
func_15304 = relay.Function([], output)
mutated_mod['func_15304'] = func_15304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7519_call = mod.get_global_var('func_7519')
func_7520_call = mutated_mod.get_global_var('func_7520')
call_15311 = func_7519_call()
call_15312 = func_7519_call()
output = relay.Tuple([call_15311,])
output2 = relay.Tuple([call_15312,])
func_15316 = relay.Function([], output)
mod['func_15316'] = func_15316
mod = relay.transform.InferType()(mod)
mutated_mod['func_15316'] = func_15316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15316_call = mutated_mod.get_global_var('func_15316')
call_15317 = func_15316_call()
output = call_15317
func_15318 = relay.Function([], output)
mutated_mod['func_15318'] = func_15318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9116_call = mod.get_global_var('func_9116')
func_9117_call = mutated_mod.get_global_var('func_9117')
call_15336 = func_9116_call()
call_15337 = func_9116_call()
uop_15342 = relay.exp(call_15336.astype('float64')) # shape=(8, 8, 2)
uop_15344 = relay.exp(call_15337.astype('float64')) # shape=(8, 8, 2)
func_8678_call = mod.get_global_var('func_8678')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_15345 = relay.TupleGetItem(func_8678_call(), 0)
call_15346 = relay.TupleGetItem(func_8679_call(), 0)
func_14239_call = mod.get_global_var('func_14239')
func_14241_call = mutated_mod.get_global_var('func_14241')
call_15357 = func_14239_call()
call_15358 = func_14239_call()
output = relay.Tuple([uop_15342,call_15345,call_15357,])
output2 = relay.Tuple([uop_15344,call_15346,call_15358,])
func_15376 = relay.Function([], output)
mod['func_15376'] = func_15376
mod = relay.transform.InferType()(mod)
output = func_15376()
func_15377 = relay.Function([], output)
mutated_mod['func_15377'] = func_15377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11623_call = mod.get_global_var('func_11623')
func_11625_call = mutated_mod.get_global_var('func_11625')
call_15400 = func_11623_call()
call_15401 = func_11623_call()
func_13950_call = mod.get_global_var('func_13950')
func_13951_call = mutated_mod.get_global_var('func_13951')
call_15408 = relay.TupleGetItem(func_13950_call(), 0)
call_15409 = relay.TupleGetItem(func_13951_call(), 0)
func_12364_call = mod.get_global_var('func_12364')
func_12367_call = mutated_mod.get_global_var('func_12367')
var_15411 = relay.var("var_15411", dtype = "float32", shape = (84,))#candidate|15411|(84,)|var|float32
call_15410 = relay.TupleGetItem(func_12364_call(relay.reshape(var_15411.astype('float32'), [1, 12, 7])), 0)
call_15412 = relay.TupleGetItem(func_12367_call(relay.reshape(var_15411.astype('float32'), [1, 12, 7])), 0)
func_15151_call = mod.get_global_var('func_15151')
func_15152_call = mutated_mod.get_global_var('func_15152')
call_15413 = func_15151_call()
call_15414 = func_15151_call()
func_15257_call = mod.get_global_var('func_15257')
func_15259_call = mutated_mod.get_global_var('func_15259')
call_15425 = relay.TupleGetItem(func_15257_call(), 0)
call_15426 = relay.TupleGetItem(func_15259_call(), 0)
func_9252_call = mod.get_global_var('func_9252')
func_9253_call = mutated_mod.get_global_var('func_9253')
call_15430 = relay.TupleGetItem(func_9252_call(), 1)
call_15431 = relay.TupleGetItem(func_9253_call(), 1)
output = relay.Tuple([call_15400,call_15408,call_15410,var_15411,call_15413,call_15425,call_15430,])
output2 = relay.Tuple([call_15401,call_15409,call_15412,var_15411,call_15414,call_15426,call_15431,])
func_15442 = relay.Function([var_15411,], output)
mod['func_15442'] = func_15442
mod = relay.transform.InferType()(mod)
mutated_mod['func_15442'] = func_15442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15443 = relay.var("var_15443", dtype = "float32", shape = (84,))#candidate|15443|(84,)|var|float32
func_15442_call = mutated_mod.get_global_var('func_15442')
call_15444 = func_15442_call(var_15443)
output = call_15444
func_15445 = relay.Function([var_15443], output)
mutated_mod['func_15445'] = func_15445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mod.get_global_var('func_7653')
func_7655_call = mutated_mod.get_global_var('func_7655')
call_15449 = relay.TupleGetItem(func_7653_call(), 0)
call_15450 = relay.TupleGetItem(func_7655_call(), 0)
output = relay.Tuple([call_15449,])
output2 = relay.Tuple([call_15450,])
func_15454 = relay.Function([], output)
mod['func_15454'] = func_15454
mod = relay.transform.InferType()(mod)
output = func_15454()
func_15455 = relay.Function([], output)
mutated_mod['func_15455'] = func_15455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11389_call = mod.get_global_var('func_11389')
func_11390_call = mutated_mod.get_global_var('func_11390')
call_15456 = func_11389_call()
call_15457 = func_11389_call()
output = call_15456
output2 = call_15457
func_15469 = relay.Function([], output)
mod['func_15469'] = func_15469
mod = relay.transform.InferType()(mod)
mutated_mod['func_15469'] = func_15469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15469_call = mutated_mod.get_global_var('func_15469')
call_15470 = func_15469_call()
output = call_15470
func_15471 = relay.Function([], output)
mutated_mod['func_15471'] = func_15471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10296_call = mod.get_global_var('func_10296')
func_10298_call = mutated_mod.get_global_var('func_10298')
call_15495 = relay.TupleGetItem(func_10296_call(), 0)
call_15496 = relay.TupleGetItem(func_10298_call(), 0)
func_2519_call = mod.get_global_var('func_2519')
func_2524_call = mutated_mod.get_global_var('func_2524')
const_15498 = relay.const(True, dtype = "bool")#candidate|15498|()|const|bool
var_15499 = relay.var("var_15499", dtype = "bool", shape = (384, 2))#candidate|15499|(384, 2)|var|bool
const_15500 = relay.const([-2.721730,9.341673,5.744288,0.985395,-1.379989,-8.214982,3.031880,4.326349,1.906848,-2.889179,1.118846,-5.327552,-6.875960,8.752259,-0.861188,2.927732,-8.243208,-6.377817,0.803819,-3.652085,-8.195133,-5.710343,1.407227,-2.306542,9.175537,-1.327385,1.180884,-6.866080,-1.135016,5.016142,-6.542905,-4.990082,3.902249,-9.642750,-5.442461,-1.054446,1.060649,-0.273886,8.320266,-6.016774,-6.641500,2.647895,1.351404,8.531093,6.882173,-0.338137,5.700097,-1.957719,5.563217,2.789391,0.521279,-5.006706,-9.424961,7.121082,5.074426,-4.258544,-9.620287,7.920966,4.462703,-6.960165,7.401621,-1.115324,0.095796,-8.056636,-2.067875,-2.258507,8.236204,-9.556587,-8.263176,5.481428,9.848140,0.470207,-2.788877,-0.855830,2.695412,-0.524656,3.339945,8.351827,-0.720067,-3.821789,5.529494,-5.045331,0.271093,-5.617120,2.312777,-8.726840,-9.066736,-3.548237,-3.459003,-3.116844,5.674832,7.364680,-1.681836,4.967064,-0.362197,6.395706,0.088201,-2.662093,-0.955842,-9.526453,7.348633,1.600845,-1.898243,-2.742688,-8.034721,-7.845937,5.663778,-2.750813,-9.629991,-8.797692,7.812948,-3.532651,-7.263471,-5.138956,6.628772,-4.874627,4.998155,-9.382734,2.393595,-3.621970,-6.102374,-3.277104,-8.683527,3.281091,-7.604001,3.030751,9.632046,-2.203814,4.739616,-0.653389,1.678282,9.088956,-7.277194,-1.901038,-0.826699,1.660155,0.080294,-8.681289,2.570087,-1.072889,-5.600304,9.598830,9.959285,2.256897,-7.618905,-2.499117,-4.079477,-7.530320,4.025146,-6.573390,-1.570034,-4.360775,0.875346,7.739171,-6.731994,8.441400,-1.942924,-0.895256,-9.643154,-6.731491,-4.043082,4.893391,-3.871963,9.607596,-5.151333,2.374719,-1.131846,8.940532,-1.063327,-2.596404,-0.609765,6.609201,-9.502178,8.537344,1.471530,-1.539682,-4.947473,-3.369812,8.979071,-1.260123,-1.465727,-1.465312,-1.549491,-7.990355,5.711250,9.797558,-7.852362,-4.950859,7.505818,-8.203545,5.556936,-1.214305,-2.823944,-3.827513,-8.952973,9.877817,-0.583931,3.741711,8.513385,1.525346,-7.064859,0.264083,-0.777562,-6.225927,6.480010,-1.120225,8.780763,-9.088176,-7.493216,6.902538,4.510034,2.305105,1.924566,-6.551193,-9.761656,7.472206,1.683490,-5.883425,-0.390761,1.149231,0.270206,-0.369806,-6.868273,-8.510858,2.002616,6.805976,-3.242423,-8.164115,-1.717448,7.793179,-7.808439,0.393766,2.039475,1.043187,-4.212777,7.142371,6.047630,-7.107733,-4.803700,-3.982091,0.588175,-0.191561,-5.659371,6.342554,-1.138216,1.492800,2.910046,-3.805882,-1.166572,-7.812353,-0.196518,-8.002433,8.772332,4.077184,7.449338,1.617387,5.444451,6.423076,-2.183397,-6.041434,8.579480,8.485393,9.324842,6.910339,-6.380216,-7.528731,6.574131,-3.337711,-9.404237,-4.142060,3.808634,-9.351745,4.830545,-6.869589,-9.444184,-6.544631,-0.410432,-5.732632,6.807920,-1.598306,6.573188,-2.989093,8.954815,0.105773,-0.820813,-2.130919,1.783580,5.445157,-2.709376,-6.801229,-5.842126,-2.289853,-2.365092,-0.740698,-8.263119,6.820820,-9.923125,-6.780222,-3.434151,7.989126,6.711539,-9.131844,-1.584367,1.670559,3.212784,7.825235,4.206364,1.847620,-7.199524,8.433834,-9.882837,-2.538969,1.386298,-8.765595,-3.379458,-8.996126,7.202665,-7.217237,-9.020592,-3.409869,6.615611,-5.795466,6.872652,-0.035492,5.253225,-4.933487,8.466011,-5.197902,0.880647,-9.415263,-3.474659,1.721069,-9.803798,7.011853,-8.379540,-5.691618,7.747310,-6.383085,-7.158864,-6.962798,-1.314160,9.896874,3.141080,-3.086789,7.261745,-8.556728,-3.330813,3.651073,3.164549,0.325923,0.339689,7.499850,-3.837871,8.158712,2.137365,7.152437,9.437525,0.180030,-1.432395,5.429160,-8.354019,-7.549832,-9.503632,2.294404,-2.819542,7.033036,9.174940,9.580106,-1.222743,-1.981863,-9.968195,5.534407,2.609404,4.105037,1.678146,3.760476,-7.396360,-9.158377,5.332054,9.228925,-6.960121,5.999269,7.675021,-6.880920,-4.486624,9.773699,-7.868978,-0.267936,9.073841,7.127882,-1.477279,8.447784,-2.998400,0.753201,4.303205,-9.080474,2.006411,3.041219,-8.368092,-7.572068,1.521453,5.750901,2.057234,2.551867,4.647269,9.450241,1.477133,4.925143,-4.268638,3.306252,4.506319,2.661895,-2.595759,4.355692,-2.796486,1.394769,-6.837050,6.665749,-9.043796,-9.330821,-0.912801,7.275823,-9.547489,3.599232,-4.712342,5.736722,-1.577718,-8.999290,2.111959,7.495199,-0.209180,4.803722,-7.191603,-4.832851,0.115518,-9.791108,-5.994856,6.608746,-6.413074,5.076604,-9.847660,-8.334535,2.875242,5.257595,1.606017,3.539057,1.887166,-4.673516,2.729546,-0.715170,9.099182,-7.514995,-4.346535,2.869353,8.240918,7.687142,6.454337,-1.571467,4.672143,0.954314,8.986696,-5.780795,-3.635906,-6.199423,3.327850,-3.615605,7.488781,-3.523733,2.680625,8.900127,-9.584847,-8.314207,-8.683598,-5.912981,-4.605945,-7.726179,-2.772495,-9.578229,8.545710,9.488133,0.231204,-8.470233,-8.088952,-9.161291,-4.460562,-1.059540,8.783488,-1.916475,-1.133450,6.235434,-7.824122,-4.931439,-1.075548,5.395311,1.698093,-9.991328,6.805951,1.938806,5.034823,2.188636,1.919480,-0.786669,-5.647572,8.049166,1.048781,7.778634,-9.755494,1.845669,-2.777401,0.160664,6.876426,-7.872260,-3.114666,-9.268020,4.131550,2.822673,-8.827191,7.498685,-9.088221,2.905264,2.956408,7.448401,-9.742179,-9.351353,-6.955854,-1.187697,5.588623,-6.961595,-5.901750,3.378039,-3.316548,8.843780,-4.224454,5.710563,0.479704,8.170617,8.987500,-4.955895,9.021052,-9.829243,-1.995402,9.392148,3.931891,1.054343,-0.598700,1.377553,5.585711,1.001442,-6.478932,-3.037407,1.355031,-1.975641,3.714600,-9.893869,-5.132924,-1.734283,3.614357,-9.747337,5.167965,3.077103,9.939194,-7.884295,8.925318,-9.106232,-7.011800,8.920355,-5.482738,-7.004023,-3.270631,-2.756610,7.262445,-2.044128,-2.763423,0.681342,-2.621188,-8.927423,1.540710,9.863258,-5.830368,-2.376909,-2.510385,4.838109,-0.597644,-7.670434,-3.530049,7.972312,3.682245,4.098075,-3.810203,3.935847,4.908222,-6.199466,-6.638639,7.418039,-1.648607,6.655788,3.490517,9.714720,-9.750234,-4.581169,4.664255,-5.705693,7.837575,-2.168170,-1.475704,6.888218,2.632060,2.785025,5.026428,1.503041,-6.204470,-0.739840,4.286386,8.663831,-9.877403,-6.543096,0.136676,-1.863220,-3.841024,0.750308,5.183093,-2.256532,-3.509594,-1.465810,-6.907756,4.187538,2.371030,-0.332758,-4.366819,-9.273039,-1.322246,-8.156434,-0.485859,-4.162751,4.613363,4.252723,-8.622652,-4.437081,0.545024,-6.807864,-0.221728,9.256143,-9.769076,-5.880830,6.104763,7.525387,4.919346,-7.538596,-1.016471,6.558394,-8.004000,-9.525320,-3.363028,8.285442,-8.300499,-0.623818,-9.007536,-7.361135,9.521821,6.640568,2.699440,-3.327167,-1.818727,-6.907772,-1.856719,-5.854519,6.766452,4.971067,8.736386,7.447490,7.464777,-9.646684,7.796262,-2.816211,5.663112,-8.703072,-3.254903,-2.244027,4.987777,2.065681,-8.903192,-6.595976,9.547385,9.074446,-2.403300,-5.540925,-8.831906,2.983454,5.862023,7.046974,9.412411,3.984348,-7.844354,-6.865061,2.737491,6.640635,-1.113977,3.332214,-1.600252,-7.945472,8.612638,-1.602559,-9.485388,-3.998713,6.739118,-9.755676,1.516673,-5.906620,5.093480,0.024280,-7.727544,-5.780887,-8.289432,-3.767681,6.368440,8.231931,1.103524,-6.550357,-0.590308,7.031518,-3.755247,-7.790292,-7.026774,-1.645255,-8.896666,-0.568774,-6.077257,7.795553,-2.483142,4.844619,-1.602690,-4.872203,-9.233765,5.899158,8.599460,-6.211721,1.674342,7.963001,1.475242,7.127700,8.097895,6.825542,9.904575,-7.172662,-6.799977,0.886623,6.212388,2.729213,-6.305907,-0.823133,0.376261,-1.672432,9.642663,-6.178608,5.626934,-4.620958,1.330237,-6.406128,-8.139650,-9.475558,7.532823,-0.392645,-7.549026,-5.302916,-8.873315,-8.234435,-9.599296,-9.257735,2.663743,-1.994837,3.463019,2.146536,-8.476238,1.013192,1.488245,-9.820852,2.285954,9.826791,-7.684613,-9.338906,-0.293592,-9.364910,7.560272,-3.887059,-1.680901,1.404595,-6.801898,-2.882123,9.679511,3.132094,-8.677468,4.242836,-2.582653,6.618321,-5.386637,-6.905728,-1.286013,1.392461,8.450709,-3.478251,7.268882,5.375696,6.036812,-0.067218,4.777512,2.533648,5.473254,5.244896,3.960147,-4.096848,4.748623,-3.938528,-6.212296,0.460968,8.189382,4.063220,-1.301896,-7.385917,-0.894088,-0.206498,0.140277,5.347152,-6.050628,-6.775360,4.968010,4.577080,6.156637,5.587043,-3.221686,-9.652236,-5.740328,-8.940636,-5.432938,-2.377610,5.421792,7.524857,-3.963088,-8.459588,1.084336,-5.396075,3.721113,6.165951,0.420485,-0.612835,-8.379023,-0.922888,-1.906525,3.735352,9.158955,-0.320021,-5.019561,6.981067,-6.420822,8.607419,2.072308,9.414399,2.824480,3.967985,0.068141,-9.538325,-6.544386,-0.274733,1.495626,-7.351451,-9.812865,-1.447271,-5.458073,2.200580,9.363192,-3.874554,6.424797,2.575545,6.173562,9.152496,5.110789,-7.589149,-5.394208,-2.857480,-9.395437,3.040547,3.660664,7.131403,0.775430,0.960097,0.173866,3.938275,8.877264,0.161188,-5.473493,9.547811,6.875848,9.492198,-3.796957,8.361941,-4.040016,9.087010,-7.780034,2.059645,-5.800993,-4.796101,7.112646,-0.839933,4.227475,8.301512,-2.457599,0.960072,-4.684419,-9.441697,-2.166491,1.588814,-1.160642,6.651360,8.948200,-2.622232,2.999072,1.028453,8.199559,9.311377,9.866130,-1.261876,9.099447,4.945339,-5.074388,-4.512518,-9.116239,-4.465553,8.405553,0.264337,-0.389023,-2.461179,8.300526,-8.542495,6.085884,7.411644,-1.423440,-4.161590,7.145953,3.990199,6.012164,-8.547510,1.274795,-0.208419,-5.131177,1.013981,-9.999070,-0.691937,0.082430,-7.713631,-9.008945,-3.737345,9.067192,-1.870999,-2.994960,-1.794641,-5.625049,6.027396,7.144924,-6.348076,-9.943421,3.634157,5.355699,-0.111063,-2.729782,1.839875,-0.724385,-2.095219,-1.198582,-1.078895,-1.788342,4.259019,6.476738,0.956524,-4.259923,0.526717,4.533839,6.360353,-2.926094,-7.158936,-2.694054,-7.714099,2.075844,-7.122245,5.544247,-8.247856,-1.690249,-5.626175,6.086310,-3.304937,7.345887,-7.018077,-4.499498,0.770699,4.284864,-5.318059,6.150033,-1.704555,7.338522,1.046077,1.402771,-0.975454,5.084485,7.539616,-4.255422,-6.338484,5.152606,5.292992,6.031897,4.475625,-1.743807,-2.386381,-2.978047,-2.883772,-3.082928,-9.231699,5.529569,6.253672,-8.117249,6.741981,-8.796702,-2.055279,-6.352297,-8.111794,9.600619,-8.568880,5.218355,4.477819,6.384534,1.696546,1.641405,2.745581,-8.559908,5.298841,-6.069386,-6.242055,5.003271,-4.624215,-6.585041,6.499455,-0.944788,4.442514,-4.976277,8.013918,-9.141831,5.042017,7.599297,-6.281388,1.927338,-1.638515,6.629439,1.953530,6.838915,-6.258216,-2.954448,4.194336,-3.655515,-9.775997], dtype = "float32")#candidate|15500|(1056,)|const|float32
var_15501 = relay.var("var_15501", dtype = "float64", shape = (440, 1))#candidate|15501|(440, 1)|var|float64
call_15497 = relay.TupleGetItem(func_2519_call(relay.reshape(const_15498.astype('bool'), []), relay.reshape(var_15499.astype('bool'), [12, 8, 8]), relay.reshape(const_15500.astype('float32'), [1056, 1]), relay.reshape(var_15501.astype('float64'), [440,]), ), 4)
call_15502 = relay.TupleGetItem(func_2524_call(relay.reshape(const_15498.astype('bool'), []), relay.reshape(var_15499.astype('bool'), [12, 8, 8]), relay.reshape(const_15500.astype('float32'), [1056, 1]), relay.reshape(var_15501.astype('float64'), [440,]), ), 4)
bop_15508 = relay.greater_equal(var_15501.astype('bool'), const_15500.astype('bool')) # shape=(440, 1056)
func_10252_call = mod.get_global_var('func_10252')
func_10254_call = mutated_mod.get_global_var('func_10254')
call_15516 = relay.TupleGetItem(func_10252_call(), 1)
call_15517 = relay.TupleGetItem(func_10254_call(), 1)
output = relay.Tuple([call_15495,call_15497,const_15498,var_15499,bop_15508,call_15516,])
output2 = relay.Tuple([call_15496,call_15502,const_15498,var_15499,bop_15508,call_15517,])
func_15540 = relay.Function([var_15499,var_15501,], output)
mod['func_15540'] = func_15540
mod = relay.transform.InferType()(mod)
var_15541 = relay.var("var_15541", dtype = "bool", shape = (384, 2))#candidate|15541|(384, 2)|var|bool
var_15542 = relay.var("var_15542", dtype = "float64", shape = (440, 1))#candidate|15542|(440, 1)|var|float64
output = func_15540(var_15541,var_15542,)
func_15543 = relay.Function([var_15541,var_15542,], output)
mutated_mod['func_15543'] = func_15543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12405_call = mod.get_global_var('func_12405')
func_12406_call = mutated_mod.get_global_var('func_12406')
call_15572 = relay.TupleGetItem(func_12405_call(), 0)
call_15573 = relay.TupleGetItem(func_12406_call(), 0)
func_11796_call = mod.get_global_var('func_11796')
func_11798_call = mutated_mod.get_global_var('func_11798')
call_15574 = relay.TupleGetItem(func_11796_call(), 0)
call_15575 = relay.TupleGetItem(func_11798_call(), 0)
bop_15580 = relay.subtract(call_15572.astype('int16'), call_15574.astype('int16')) # shape=(2, 7, 24)
bop_15583 = relay.subtract(call_15573.astype('int16'), call_15575.astype('int16')) # shape=(2, 7, 24)
func_4110_call = mod.get_global_var('func_4110')
func_4117_call = mutated_mod.get_global_var('func_4117')
const_15588 = relay.const([2,2,3,7,-2,-2,7,9,-3,-5,1,10,-9,7,6,8,-10,-1,-10,4,7,3,1,1,-2,-6,4,-5,2,2,-5,-7,-1,-7,-7,1,6,-7,5,2,-6,4,-6,-2,-10,10,7,2,6,-6,-2,-6,-2,7,2,-7,-10,8,-8,6,-7,5,4,9,-7,-4,6,7,-4,5,6,6,-5,-1,5,2,4,3,3,9,-8,10,4,2,-4,5,3,3,4,-2,1,-8,-1,4,-4,5,5,-6,3,-8,6,-6,-5,-6,2,9,-2,-10,-9,-9,7,-4,9,3,1,8,7,8,-2,-10,-4,2,5,9,8,6], dtype = "uint32")#candidate|15588|(126,)|const|uint32
const_15589 = relay.const(False, dtype = "bool")#candidate|15589|()|const|bool
var_15590 = relay.var("var_15590", dtype = "bool", shape = (768,))#candidate|15590|(768,)|var|bool
var_15591 = relay.var("var_15591", dtype = "float32", shape = (264, 4))#candidate|15591|(264, 4)|var|float32
var_15592 = relay.var("var_15592", dtype = "float64", shape = (5, 390))#candidate|15592|(5, 390)|var|float64
call_15587 = relay.TupleGetItem(func_4110_call(relay.reshape(const_15588.astype('uint32'), [7, 2, 9]), relay.reshape(const_15589.astype('bool'), []), relay.reshape(var_15590.astype('bool'), [768,]), relay.reshape(var_15591.astype('float32'), [1056,]), relay.reshape(var_15592.astype('float64'), [130, 15]), ), 3)
call_15593 = relay.TupleGetItem(func_4117_call(relay.reshape(const_15588.astype('uint32'), [7, 2, 9]), relay.reshape(const_15589.astype('bool'), []), relay.reshape(var_15590.astype('bool'), [768,]), relay.reshape(var_15591.astype('float32'), [1056,]), relay.reshape(var_15592.astype('float64'), [130, 15]), ), 3)
func_15469_call = mod.get_global_var('func_15469')
func_15471_call = mutated_mod.get_global_var('func_15471')
call_15607 = func_15469_call()
call_15608 = func_15469_call()
bop_15631 = relay.right_shift(var_15591.astype('int16'), const_15589.astype('int16')) # shape=(264, 4)
output = relay.Tuple([bop_15580,call_15587,const_15588,var_15590,var_15592,call_15607,bop_15631,])
output2 = relay.Tuple([bop_15583,call_15593,const_15588,var_15590,var_15592,call_15608,bop_15631,])
F = relay.Function([var_15590,var_15591,var_15592,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15590,var_15591,var_15592,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

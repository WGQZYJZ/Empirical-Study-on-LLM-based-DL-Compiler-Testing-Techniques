==========mod==========
#[version = "0.0.5"]
def @func_9765(%var_9723: Tensor[(2, 24), bool], %var_9724: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(9, 10, 11), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(240), bool], Tensor[(2, 24), float32]) {
  %0 = @func_7073() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %1 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %2 = cast(%var_9723, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %3 = cast(%var_9724, dtype="bool") /* ty=Tensor[(240), bool] */;
  %4 = reshape(%2, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %5 = reshape(%3, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %6 = @func_1044(%4, %5) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %7 = cast(%var_9723, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %8 = %0.1;
  %9 = @func_8073() /* ty=Tensor[(9, 10, 11), float64] */;
  %10 = %1.1;
  %11 = @func_6015() /* ty=Tensor[(1620), float32] */;
  %12 = %6.0;
  %13 = asinh(%7) /* ty=Tensor[(2, 24), float32] */;
  (%8, %9, %10, %11, %12, %var_9724, %13)
}

def @func_7689() -> (Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %14 = @func_5045() /* ty=(Tensor[(1620), float32],) */;
  %15 = %14.0;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(1620), float32] */, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(1), int32] */;
  %18 = cast(%15, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?), bool] */;
  %20 = @func_3522() /* ty=(Tensor[(1620), float32],) */;
  %21 = less(%18, %19) /* ty=Tensor[(1620), bool] */;
  %22 = %20.0;
  %23 = @func_7640() /* ty=Tensor[(1620), float32] */;
  (%21, %22, %23)
}

def @func_6980() -> (Tensor[(2, 8, 3), float32],) {
  %24 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %25 = %24.0;
  (%25,)
}

def @func_1044(%var_1039: Tensor[(1, 3, 16), bool], %var_1040: Tensor[(5, 3, 16), bool]) -> (Tensor[(5, 3, 16), bool],) {
  %26 = cast(%var_1039, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %27 = cast(%var_1040, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %28 = logical_or(%26, %27) /* ty=Tensor[(5, 3, 16), bool] */;
  (%28,)
}

def @func_11120(%var_11074: Tensor[(9, 9, 10), float32], %var_11082: Tensor[(6, 30), float32]) -> (Tensor[(9, 9, 10), float32], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(6, 30), float32], Tensor[(1620), float64], Tensor[(4, 5, 7), float32]) {
  %29 = cast(%var_11074, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %35 = cast(%var_11082, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %36 = reshape(%30, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %37 = reshape(%31, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %38 = reshape(%32, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %39 = reshape(%33, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %40 = reshape(%34, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %41 = reshape(%35, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %42 = @func_6270(%36, %37, %38, %39, %40, %41) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
  %43 = @func_6926() /* ty=(Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) */;
  %44 = cosh(%29) /* ty=Tensor[(9, 9, 10), float32] */;
  %45 = %42.3;
  %46 = @func_9552() /* ty=Tensor[(1620), float64] */;
  %47 = %43.1;
  (%44, %45, meta[relay.Constant][1] /* ty=Tensor[(350), int16] */, meta[relay.Constant][2] /* ty=Tensor[(1200), float64] */, meta[relay.Constant][3] /* ty=Tensor[(33), float64] */, meta[relay.Constant][4] /* ty=Tensor[(4), float64] */, %var_11082, %46, %47)
}

def @func_11255() -> Tensor[(1620), float32] {
  %48 = @func_9599() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %48.0
}

def @func_2767(%var_2762: Tensor[(1620), float32]) -> Tensor[(1620), float32] {
  %49 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %50 = %49.3;
  %51 = cast(%var_2762, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(1), int32] */;
  %53 = cast(%50, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?), float32] */;
  minimum(%53, %54) /* ty=Tensor[(1620), float32] */
}

def @func_5457() -> Tensor[(4, 5, 7), float32] {
  %55 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %56 = %55.1;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  log10(%57) /* ty=Tensor[(4, 5, 7), float32] */
}

def @func_9249(%var_9217: Tensor[(5, 2, 8), uint8], %var_9224: Tensor[(48), float64]) -> (Tensor[(5, 2, 8), uint8], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(1620), float32]) {
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 2, 8), uint8] */, dtype="uint8") /* ty=Tensor[(5, 2, 8), uint8] */;
  %59 = shape_of(%var_9217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%var_9217, dtype="uint8") /* ty=Tensor[(5, 2, 8), uint8] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %62 = cast(%var_9224, dtype="float64") /* ty=Tensor[(48), float64] */;
  %63 = reshape(%62, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %64 = @func_4693(%63) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %65 = left_shift(%60, %61) /* ty=Tensor[(5, 2, 8), uint8] */;
  %66 = %64.1;
  %67 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%65, %66, %var_9224, %67)
}

def @func_2788() -> (Tensor[(1620), float32],) {
  %68 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %69 = %68.3;
  (%69,)
}

def @func_8073() -> Tensor[(9, 10, 11), float64] {
  %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(9, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %71 = rsqrt(%70) /* ty=Tensor[(9, 10, 11), float32] */;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  erf(%72) /* ty=Tensor[(9, 10, 11), float64] */
}

def @func_9112(%var_9092: Tensor[(60), int8], %var_9098: Tensor[(300, 4), float64]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(300, 4), float64], Tensor[(1, 33), float64], Tensor[(2, 2), float64], Tensor[(180), float32]) {
  %73 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %74 = cast(%var_9092, dtype="int8") /* ty=Tensor[(60), int8] */;
  %75 = cast(%var_9092, dtype="int8") /* ty=Tensor[(60), int8] */;
  %76 = reshape(%74, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %77 = reshape(%75, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %78 = @func_5286(%76, %77) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %79 = cast(meta[relay.Constant][7] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %80 = cast(meta[relay.Constant][7] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %81 = cast(%var_9098, dtype="float64") /* ty=Tensor[(300, 4), float64] */;
  %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %83 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2), float64] */;
  %84 = cast(meta[relay.Constant][10] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %85 = reshape(%79, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %86 = reshape(%80, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %87 = reshape(%81, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %88 = reshape(%82, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %89 = reshape(%83, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %90 = reshape(%84, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %91 = @func_6270(%85, %86, %87, %88, %89, %90) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
  %92 = %73.1;
  %93 = %78.0;
  %94 = %91.3;
  (%92, %93, %var_9092, %94, meta[relay.Constant][7] /* ty=Tensor[(350), int16] */, %var_9098, meta[relay.Constant][8] /* ty=Tensor[(1, 33), float64] */, meta[relay.Constant][9] /* ty=Tensor[(2, 2), float64] */, meta[relay.Constant][10] /* ty=Tensor[(180), float32] */)
}

def @func_1894(%var_1855: Tensor[(9, 9, 8), float32]) -> Tensor[(9, 9, 8), uint16] {
  %95 = cast(%var_1855, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
  %96 = sqrt(%95) /* ty=Tensor[(9, 9, 8), float32] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
  %98 = log2(%97) /* ty=Tensor[(9, 9, 8), float32] */;
  %99 = cast(%98, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %100 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%96, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%101, %102) /* ty=Tensor[(9, 9, 8), uint16] */
}

def @func_8706() -> Tensor[(1620), float32] {
  %103 = @func_7516() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %103.0
}

def @func_5045() -> (Tensor[(1620), float32],) {
  %104 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%104,)
}

def @func_4035() -> (Tensor[(180), float32],) {
  %105 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %106 = %105.0;
  (%106,)
}

def @func_7898() -> Tensor[(1620), float32] {
  %107 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %107.0
}

def @main(%var_11326: Tensor[(4, 1, 15), float64]) -> (Tensor[(4, 1, 15), float64],) {
  %108 = cast(%var_11326, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
  %109 = exp(%108) /* ty=Tensor[(4, 1, 15), float64] */;
  (%109,)
}

def @func_2813(%var_2806: Tensor[(1620), float32]) -> (Tensor[(1620), float32],) {
  %110 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %111 = %110.0;
  %112 = cast(%var_2806, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(1), int32] */;
  %114 = cast(%111, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?), float32] */;
  %116 = floor_mod(%114, %115) /* ty=Tensor[(1620), float32] */;
  (%116,)
}

def @func_8497(%var_8467: Tensor[(1620), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), uint8], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %117 = @func_7689() /* ty=(Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %120 = cast(%var_8467, dtype="uint8") /* ty=Tensor[(1620), uint8] */;
  %121 = shape_of(%118, dtype="int32") /* ty=Tensor[(1), int32] */;
  %122 = cast(%118, dtype="uint8") /* ty=Tensor[(1620), uint8] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %124 = cast(%118, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %125 = reshape(%124, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %126 = @func_2813(%125) /* ty=(Tensor[(1620), float32],) */;
  %127 = tan(%119) /* ty=Tensor[(1620), float32] */;
  %128 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %129 = left_shift(%122, %123) /* ty=Tensor[(1620), uint8] */;
  %130 = @func_6015() /* ty=Tensor[(1620), float32] */;
  %131 = %126.0;
  (%127, %128, %129, %130, %131)
}

def @func_214(%var_186: Tensor[(4, 5, 7), uint8]) -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) {
  %132 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 5, 7), uint8] */, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %133 = shape_of(%var_186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%var_186, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %136 = cast(%var_186, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %137 = bitwise_or(%134, %135) /* ty=Tensor[(4, 5, 7), uint8] */;
  %138 = atanh(%136) /* ty=Tensor[(4, 5, 7), float32] */;
  (%137, %138)
}

def @func_9566(%var_9554: Tensor[(6, 12, 6), float64]) -> (Tensor[(6, 12, 6), float64],) {
  %139 = cast(%var_9554, dtype="float64") /* ty=Tensor[(6, 12, 6), float64] */;
  %140 = sigmoid(%139) /* ty=Tensor[(6, 12, 6), float64] */;
  (%140,)
}

def @func_6270(%var_6245: Tensor[(14, 5, 5), int16], %var_6246: Tensor[(14, 5, 5), int16], %var_6252: Tensor[(1200), float64], %var_6262: Tensor[(33), float64], %var_6263: Tensor[(4), float64], %var_6264: Tensor[(180), float32]) -> (Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) {
  %141 = cast(%var_6246, dtype="int16") /* ty=Tensor[(14, 5, 5), int16] */;
  %142 = shape_of(%var_6245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_6245, dtype="int16") /* ty=Tensor[(14, 5, 5), int16] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %145 = cast(%var_6252, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %146 = cast(%var_6252, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %147 = reshape(%145, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
  %148 = reshape(%146, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
  %149 = @func_6064(%147, %148) /* ty=(Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) */;
  %150 = cast(%var_6262, dtype="float64") /* ty=Tensor[(33), float64] */;
  %151 = cast(%var_6263, dtype="float64") /* ty=Tensor[(4), float64] */;
  %152 = cast(%var_6264, dtype="float32") /* ty=Tensor[(180), float32] */;
  %153 = cast(%var_6262, dtype="float64") /* ty=Tensor[(33), float64] */;
  %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
  %155 = reshape(%150, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %156 = reshape(%151, newshape=[1, 4]) /* ty=Tensor[(1, 4), float64] */;
  %157 = reshape(%152, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
  %158 = reshape(%153, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %159 = reshape(%154, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %160 = @func_2642(%155, %156, %157, %158, %159) /* ty=(Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) */;
  %161 = maximum(%143, %144) /* ty=Tensor[(14, 5, 5), int16] */;
  %162 = %149.2;
  %163 = %160.6;
  (%161, %162, %var_6252, %163, %var_6262, %var_6263, %var_6264, meta[relay.Constant][12] /* ty=Tensor[(4, 132), float32] */)
}

def @func_7516() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %164 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %166 = reshape(%165, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %167 = @func_2767(%166) /* ty=Tensor[(1620), float32] */;
  (%164, %167)
}

def @func_6578() -> Tensor[(1620), float32] {
  %168 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %168.0
}

def @func_4358(%var_4346: Tensor[(4, 5, 7), uint8]) -> (Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) {
  %169 = @func_4035() /* ty=(Tensor[(180), float32],) */;
  %170 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %171 = cast(%var_4346, dtype="int8") /* ty=Tensor[(4, 5, 7), int8] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="int8") /* ty=Tensor[(4, 5, 7), int8] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %175 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %176 = %169.0;
  %177 = left_shift(%173, %174) /* ty=Tensor[(4, 5, 7), int8] */;
  %178 = %175.1;
  (%176, %177, %178)
}

def @func_10767(%var_10721: Tensor[(14, 48), bool]) -> (Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(14, 48), bool], Tensor[(14, 48), int32], Tensor[(2, 1, 7), uint32], Tensor[(1620), float32], Tensor[(14, 48), uint8]) {
  %179 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %180 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %181 = reshape(%180, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %182 = @func_5204(%181) /* ty=(Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) */;
  %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %184 = cast(%var_10721, dtype="bool") /* ty=Tensor[(14, 48), bool] */;
  %185 = cast(%var_10721, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
  %186 = log10(%185) /* ty=Tensor[(14, 48), float32] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
  %188 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 48), bool] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %189 = mod(%187, %188) /* ty=Tensor[(14, 48), float32] */;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
  %191 = sqrt(%190) /* ty=Tensor[(14, 48), float32] */;
  %192 = cast(%var_10721, dtype="int32") /* ty=Tensor[(14, 48), int32] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
  %194 = cast(%191, dtype="int32") /* ty=Tensor[(14, 48), int32] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %196 = @func_5060() /* ty=(Tensor[(2, 1, 7), uint32],) */;
  %197 = cast(%186, dtype="uint8") /* ty=Tensor[(14, 48), uint8] */;
  %198 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
  %199 = cast(%191, dtype="uint8") /* ty=Tensor[(14, 48), uint8] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %201 = %179.1;
  %202 = %182.1;
  %203 = less_equal(%183, %184) /* ty=Tensor[(14, 48), bool] */;
  %204 = bitwise_and(%194, %195) /* ty=Tensor[(14, 48), int32] */;
  %205 = %196.0;
  %206 = @func_7898() /* ty=Tensor[(1620), float32] */;
  %207 = bitwise_xor(%199, %200) /* ty=Tensor[(14, 48), uint8] */;
  (%201, %202, %203, %204, %205, %206, %207)
}

def @func_1424(%var_1402: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
  %208 = cast(%var_1402, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
  %209 = acosh(%208) /* ty=Tensor[(4, 10, 5), float64] */;
  (%209,)
}

def @func_3365() -> Tensor[(1620), float32] {
  %210 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %210.6
}

def @func_3840() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %211 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %212 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %213 = %211.3;
  %214 = %212.1;
  %215 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%213, %214, %215)
}

def @func_4577() -> (Tensor[(1620), float64],) {
  %216 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %217 = %216.3;
  %218 = cast(%217, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %219 = asinh(%218) /* ty=Tensor[(1620), float64] */;
  (%219,)
}

def @func_2693() -> (Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) {
  %220 = cast(meta[relay.Constant][14] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %221 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 1, 7), uint32] */, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %222 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %223 = cast(meta[relay.Constant][17] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %224 = reshape(%222, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %225 = reshape(%223, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %226 = @func_322(%224, %225) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %227 = left_shift(%220, %221) /* ty=Tensor[(2, 1, 7), uint32] */;
  %228 = %226.0;
  (%227, %228, meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, meta[relay.Constant][17] /* ty=Tensor[(1620), float32] */)
}

def @func_7027(%var_6995: Tensor[(9, 4, 4), float32], %var_6996: Tensor[(9, 4, 4), float32]) -> (Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) {
  %229 = cast(%var_6996, dtype="float32") /* ty=Tensor[(9, 4, 4), float32] */;
  %230 = shape_of(%var_6995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_6995, dtype="float32") /* ty=Tensor[(9, 4, 4), float32] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %234 = reshape(%233, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float32] */;
  %235 = @func_4977(%234) /* ty=(Tensor[(15, 9, 14), float32],) */;
  %236 = mod(%231, %232) /* ty=Tensor[(9, 4, 4), float32] */;
  %237 = %235.0;
  (%236, %237, meta[relay.Constant][18] /* ty=Tensor[(1890), float32] */)
}

def @func_9393() -> Tensor[(1620), float64] {
  %238 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
  %238.0
}

def @func_4499(%var_4496: Tensor[(48), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
  %239 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %240 = cast(%var_4496, dtype="float64") /* ty=Tensor[(48), float64] */;
  %241 = cast(%var_4496, dtype="float64") /* ty=Tensor[(48), float64] */;
  %242 = reshape(%240, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %243 = reshape(%241, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %244 = @func_519(%242, %243) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %245 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %246 = %239.0;
  %247 = %244.0;
  (%245, %246, %247, %var_4496)
}

def @func_5866(%var_5847: Tensor[(11, 1, 16), float64]) -> (Tensor[(11, 1, 16), float64],) {
  %248 = cast(%var_5847, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %249 = log2(%248) /* ty=Tensor[(11, 1, 16), float64] */;
  (%249,)
}

def @func_7853(%var_7834: Tensor[(4), float64], %var_7835: Tensor[(1, 240), bool]) -> (Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) {
  %250 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %251 = %250.0;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %253 = cast(meta[relay.Constant][19] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %255 = reshape(%253, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), uint8] */;
  %256 = reshape(%254, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), uint8] */;
  %257 = @func_7469(%255, %256) /* ty=(Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) */;
  %258 = cast(meta[relay.Constant][20] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %259 = cast(meta[relay.Constant][20] /* ty=Tensor[(648), float32] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %260 = cast(meta[relay.Constant][20] /* ty=Tensor[(648), float32] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %261 = reshape(%258, newshape=[6, 108]) /* ty=Tensor[(6, 108), float32] */;
  %262 = reshape(%259, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %263 = reshape(%260, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %264 = @func_7325(%261, %262, %263) /* ty=(Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) */;
  %265 = cast(%var_7834, dtype="float64") /* ty=Tensor[(4), float64] */;
  %266 = cast(%var_7835, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %267 = reshape(%265, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %268 = reshape(%266, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %269 = @func_4816(%267, %268) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) */;
  %270 = acosh(%252) /* ty=Tensor[(1620), float32] */;
  %271 = %257.0;
  %272 = %264.0;
  %273 = %269.6;
  (%270, %271, meta[relay.Constant][19] /* ty=Tensor[(576), uint8] */, %272, meta[relay.Constant][20] /* ty=Tensor[(648), float32] */, %273, %var_7834, %var_7835)
}

def @func_9797() -> (Tensor[(1620), float32],) {
  %274 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %275 = %274.0;
  (%275,)
}

def @func_3121() -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %276 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %277 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %278 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %279 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %280 = %276.1;
  %281 = %277.2;
  %282 = %278.0;
  %283 = %279.0;
  (%280, %281, %282, %283)
}

def @func_10571(%var_10554: int8, %var_10555: Tensor[(7, 7, 4), int8]) -> (Tensor[(7, 7, 4), int8], Tensor[(1620), float32]) {
  %284 = cast(%var_10554, dtype="int8") /* ty=int8 */;
  %285 = cast(%var_10555, dtype="int8") /* ty=Tensor[(7, 7, 4), int8] */;
  %286 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %287 = subtract(%284, %285) /* ty=Tensor[(7, 7, 4), int8] */;
  %288 = %286.0;
  (%287, %288)
}

def @func_3522() -> (Tensor[(1620), float32],) {
  %289 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%289,)
}

def @func_8668() -> (Tensor[(1620), float32],) {
  %290 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %291 = %290.0;
  (%291,)
}

def @func_11302() -> (Tensor[(2, 8, 3), int16],) {
  %292 = @func_10479() /* ty=Tensor[(2, 8, 3), int16] */;
  (%292,)
}

def @func_6402() -> (Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) {
  %293 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %294 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %295 = %293.2;
  %296 = %294.1;
  %297 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
  (%295, %296, %297)
}

def @func_5707(%var_5702: Tensor[(648), float32]) -> (Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
  %298 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %299 = cast(%var_5702, dtype="float32") /* ty=Tensor[(648), float32] */;
  %300 = reshape(%299, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %301 = %298.0;
  %302 = @func_1894(%300) /* ty=Tensor[(9, 9, 8), uint16] */;
  (%301, %302, %var_5702)
}

def @func_519(%var_493: Tensor[(2, 8, 3), float64], %var_494: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) {
  %303 = cast(%var_494, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %304 = shape_of(%var_493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%var_493, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %307 = cast(%var_493, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %308 = floor_mod(%305, %306) /* ty=Tensor[(2, 8, 3), float64] */;
  %309 = asinh(%307) /* ty=Tensor[(2, 8, 3), float64] */;
  (%308, %309)
}

def @func_9295() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %310 = @func_9175() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %311 = @func_8968() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %312 = %310.1;
  %313 = %311.2;
  (%312, %313)
}

def @func_6239(%var_6220: Tensor[(10, 1, 6), bool]) -> (Tensor[(10, 10, 6), bool], Tensor[(10, 1, 6), float32]) {
  %314 = cast(%var_6220, dtype="bool") /* ty=Tensor[(10, 1, 6), bool] */;
  %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 10, 6), bool] */, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
  %316 = cast(%var_6220, dtype="float32") /* ty=Tensor[(10, 1, 6), float32] */;
  %317 = logical_or(%314, %315) /* ty=Tensor[(10, 10, 6), bool] */;
  %318 = log(%316) /* ty=Tensor[(10, 1, 6), float32] */;
  (%317, %318)
}

def @func_6926() -> (Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) {
  %319 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
  %320 = cast(meta[relay.Constant][22] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %321 = reshape(%320, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %322 = @func_214(%321) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %323 = %319.0;
  %324 = %322.1;
  (%323, %324, meta[relay.Constant][22] /* ty=Tensor[(140), uint8] */)
}

def @func_4879() -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) {
  %325 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %326 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %327 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %328 = %325.0;
  %329 = %326.2;
  (%327, %328, %329)
}

def @func_9045() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(90, 2), bool], Tensor[(180), float32]) {
  %330 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %331 = @func_6980() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %333 = reshape(%332, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %334 = @func_3179(%333) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
  %335 = %330.1;
  %336 = %331.0;
  %337 = %334.3;
  (%335, %336, %337, meta[relay.Constant][23] /* ty=Tensor[(180), float32] */)
}

def @func_3986() -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
  %338 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %339 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %340 = %339.1;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %342 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %343 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %344 = %338.1;
  %345 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %346 = log2(%341) /* ty=Tensor[(1620), float64] */;
  %347 = %342.1;
  %348 = %343.0;
  (%344, %345, %346, %347, %348)
}

def @func_5314() -> (Tensor[(1620), float32],) {
  %349 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %350 = %349.0;
  (%350,)
}

def @func_9020() -> (Tensor[(1620), float32],) {
  %351 = @func_2988() /* ty=Tensor[(1620), float32] */;
  (%351,)
}

def @func_5214() -> (Tensor[(1620), float32],) {
  %352 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%352,)
}

def @func_5606() -> Tensor[(1620), float32] {
  %353 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %353.0
}

def @func_10207() -> (Tensor[(1620), float32], Tensor[(140), uint8]) {
  %354 = @func_6926() /* ty=(Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) */;
  %355 = @func_10110() /* ty=Tensor[(1620), float32] */;
  %356 = %354.2;
  (%355, %356)
}

def @func_6967() -> (Tensor[(180), float32], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8]) {
  %357 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %358 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %360 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %361 = reshape(%359, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %362 = reshape(%360, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %363 = @func_5286(%361, %362) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %364 = %357.0;
  %365 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %366 = %358.3;
  %367 = %363.0;
  (%364, %365, %366, %367, meta[relay.Constant][24] /* ty=Tensor[(60), int8] */)
}

def @func_3900() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %368 = @func_3522() /* ty=(Tensor[(1620), float32],) */;
  %369 = %368.0;
  %370 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%369, %370)
}

def @func_5474() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %371 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %372 = @func_4577() /* ty=(Tensor[(1620), float64],) */;
  %373 = %371.0;
  %374 = %372.0;
  (%373, %374)
}

def @func_11021() -> (Tensor[(1620), int64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
  %375 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %376 = %375.0;
  %377 = @func_9599() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %380 = shape_of(%376, dtype="int32") /* ty=Tensor[(1), int32] */;
  %381 = cast(%376, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?), int64] */;
  %383 = cast(meta[relay.Constant][25] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %384 = reshape(%383, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %385 = bitwise_xor(%381, %382) /* ty=Tensor[(1620), int64] */;
  %386 = @func_1894(%384) /* ty=Tensor[(9, 9, 8), uint16] */;
  (%385, %386, meta[relay.Constant][25] /* ty=Tensor[(648), float32] */)
}

def @func_3665() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %387 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %388 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %389 = %387.0;
  %390 = %388.3;
  (%389, %390)
}

def @func_2859() -> (Tensor[(180), float32],) {
  %391 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %392 = %391.2;
  (%392,)
}

def @func_6667() -> Tensor[(4, 12, 13), float32] {
  %393 = @func_6607() /* ty=(Tensor[(4, 12, 13), float32],) */;
  %393.0
}

def @func_5159() -> (Tensor[(1620), float64],) {
  %394 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %395 = %394.1;
  (%395,)
}

def @func_2837() -> (Tensor[(1620), float32],) {
  %396 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %397 = %396.3;
  (%397,)
}

def @func_4228() -> Tensor[(1620), float32] {
  %398 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %398.0
}

def @func_3577() -> Tensor[(4, 5, 7), uint8] {
  %399 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %399.1
}

def @func_4210() -> (Tensor[(1620), float32],) {
  %400 = @func_2988() /* ty=Tensor[(1620), float32] */;
  (%400,)
}

def @func_8340(%var_8327: Tensor[(825), int8]) -> (Tensor[(1620), float32], Tensor[(5, 11, 15), bool], Tensor[(825), int8]) {
  %401 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %402 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %403 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %404 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %405 = reshape(%402, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %406 = reshape(%403, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %407 = reshape(%404, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %408 = @func_4100(%405, %406, %407) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) */;
  %409 = %401.1;
  %410 = %408.0;
  (%409, %410, %var_8327)
}

def @func_8294(%var_8287: Tensor[(4, 12), float64]) -> (Tensor[(180), float32], Tensor[(1620), float32], Tensor[(4, 12), float64], Tensor[(4), float64]) {
  %411 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %412 = cast(%var_8287, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %413 = cast(meta[relay.Constant][26] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %414 = reshape(%412, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %415 = reshape(%413, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %416 = @func_7996(%414, %415) /* ty=(Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) */;
  %417 = %411.0;
  %418 = %416.1;
  (%417, %418, %var_8287, meta[relay.Constant][26] /* ty=Tensor[(4), float64] */)
}

def @func_5390() -> (Tensor[(1620), float32],) {
  %419 = @func_2988() /* ty=Tensor[(1620), float32] */;
  (%419,)
}

def @func_10002() -> (Tensor[(1620), float32],) {
  %420 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %421 = %420.0;
  (%421,)
}

def @func_4977(%var_4974: Tensor[(15, 9, 14), float32]) -> (Tensor[(15, 9, 14), float32],) {
  %422 = cast(%var_4974, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
  %423 = log10(%422) /* ty=Tensor[(15, 9, 14), float32] */;
  (%423,)
}

def @func_5407() -> (Tensor[(1620), float64], Tensor[(1620), float32]) {
  %424 = @func_4577() /* ty=(Tensor[(1620), float64],) */;
  %425 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %426 = %424.0;
  %427 = %425.0;
  (%426, %427)
}

def @func_10146() -> Tensor[(1620), float32] {
  @func_4228() /* ty=Tensor[(1620), float32] */
}

def @func_2946() -> (Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %428 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %429 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %430 = %428.0;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %432 = reshape(%431, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %433 = @func_2767(%432) /* ty=Tensor[(1620), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %435 = reshape(%434, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %436 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %437 = %429.0;
  %438 = @func_2767(%435) /* ty=Tensor[(1620), float32] */;
  %439 = %436.0;
  (%430, %437, %433, %438, %439)
}

def @func_7640() -> Tensor[(1620), float32] {
  %440 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %440.0
}

def @func_8694() -> (Tensor[(180), float32],) {
  %441 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %442 = %441.0;
  (%442,)
}

def @func_10077() -> Tensor[(2, 8, 3), float32] {
  %443 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %443.0
}

def @func_1243(%var_1207: Tensor[(2, 2, 1), float64], %var_1239: Tensor[(1, 180), float32]) -> (Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) {
  %444 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %445 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %446 = reshape(%444, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %447 = reshape(%445, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %448 = @func_1044(%446, %447) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %449 = cast(%var_1207, dtype="float64") /* ty=Tensor[(2, 2, 1), float64] */;
  %450 = tan(%449) /* ty=Tensor[(2, 2, 1), float64] */;
  %451 = cast(%450, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %452 = shape_of(%var_1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%var_1207, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = greater_equal(%453, %454) /* ty=Tensor[(2, 2, ?), bool] */;
  %456 = cast(%455, dtype="bool") /* ty=Tensor[(2, 2, ?), bool] */;
  %457 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %458 = cast(%var_1239, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %459 = cast(meta[relay.Constant][29] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %460 = reshape(%458, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %461 = reshape(%459, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %462 = @func_322(%460, %461) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %463 = %448.0;
  %464 = less_equal(%456, %457) /* ty=Tensor[(2, 2, 240), bool] */;
  %465 = %462.3;
  (%463, meta[relay.Constant][27] /* ty=Tensor[(1, 48), bool] */, %464, %465, %var_1239, meta[relay.Constant][29] /* ty=Tensor[(1620), float32] */)
}

def @func_322(%var_272: Tensor[(15, 1, 12), float32], %var_317: Tensor[(15, 9, 12), float32]) -> (Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) {
  %466 = cast(meta[relay.Constant][30] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %467 = reshape(%466, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %468 = @func_214(%467) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %471 = reshape(%470, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %472 = @func_214(%471) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %473 = cast(%var_272, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  %474 = log10(%473) /* ty=Tensor[(15, 1, 12), float32] */;
  %475 = cast(%var_272, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %479 = mod(%477, %478) /* ty=Tensor[(15, ?, 12), float32] */;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(15, ?, 12), float64] */;
  %481 = cast(%var_317, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %482 = %472.1;
  %483 = floor_mod(%480, %481) /* ty=Tensor[(15, 9, 12), float64] */;
  (%469, meta[relay.Constant][30] /* ty=Tensor[(140), uint8] */, %482, %483)
}

def @func_10877(%var_10819: Tensor[(162, 4), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(2, 8, 3), float64], Tensor[(162, 4), uint8], Tensor[(2, 8, 3), float64], Tensor[(1620), float32], Tensor[(162, 4), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %484 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %485 = cast(meta[relay.Constant][31] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %486 = reshape(%485, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %487 = @func_5707(%486) /* ty=(Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */;
  %488 = cast(meta[relay.Constant][31] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %489 = reshape(%488, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %490 = @func_10341(%489) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) */;
  %491 = cast(meta[relay.Constant][31] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %492 = acos(%491) /* ty=Tensor[(162, 4), float32] */;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %494 = cos(%493) /* ty=Tensor[(162, 4), float64] */;
  %495 = cast(%var_10819, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %496 = shape_of(%492, dtype="int32") /* ty=Tensor[(2), int32] */;
  %497 = cast(%492, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %499 = floor_divide(%497, %498) /* ty=Tensor[(162, 4), float64] */;
  %500 = cast(%499, dtype="bool") /* ty=Tensor[(162, 4), bool] */;
  %501 = shape_of(%494, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(%494, dtype="bool") /* ty=Tensor[(162, 4), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %504 = greater(%502, %503) /* ty=Tensor[(162, 4), bool] */;
  %505 = cast(%492, dtype="uint8") /* ty=Tensor[(162, 4), uint8] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(2), int32] */;
  %507 = cast(%504, dtype="uint8") /* ty=Tensor[(162, 4), uint8] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %509 = %490.7;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %511 = reshape(%510, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %512 = @func_4499(%511) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) */;
  %513 = @func_9539() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %514 = cast(%504, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %515 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %516 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %517 = @func_10110() /* ty=Tensor[(1620), float32] */;
  %518 = %484.0;
  %519 = %487.1;
  %520 = multiply(%507, %508) /* ty=Tensor[(162, 4), uint8] */;
  %521 = %512.2;
  %522 = %513.3;
  %523 = sin(%514) /* ty=Tensor[(162, 4), float32] */;
  %524 = %515.0;
  %525 = %516.0;
  (%517, %518, %519, %509, %520, %521, %522, %523, %524, %525)
}

def @func_5286(%var_5276: Tensor[(3, 4, 5), int8], %var_5277: Tensor[(3, 4, 5), int8]) -> (Tensor[(3, 4, 5), int8],) {
  %526 = cast(%var_5277, dtype="int8") /* ty=Tensor[(3, 4, 5), int8] */;
  %527 = shape_of(%var_5276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%var_5276, dtype="int8") /* ty=Tensor[(3, 4, 5), int8] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %530 = right_shift(%528, %529) /* ty=Tensor[(3, 4, 5), int8] */;
  (%530,)
}

def @func_4462(%var_4424: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1, 180), float32]) {
  %531 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %532 = cast(meta[relay.Constant][32] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %534 = cast(%531, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), float32] */;
  %536 = cast(meta[relay.Constant][32] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %537 = reshape(%536, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %538 = @func_2813(%537) /* ty=(Tensor[(1620), float32],) */;
  %539 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %540 = cast(meta[relay.Constant][33] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %541 = cast(%var_4424, dtype="float32") /* ty=Tensor[(180), float32] */;
  %542 = reshape(%540, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
  %543 = reshape(%541, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %544 = @func_1243(%542, %543) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
  %545 = %544.4;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %547 = floor_divide(%534, %535) /* ty=Tensor[(1620), float32] */;
  %548 = %538.0;
  %549 = %539.0;
  %550 = atan(%546) /* ty=Tensor[(1, 180), float32] */;
  (%547, meta[relay.Constant][33] /* ty=Tensor[(4), float64] */, %var_4424, %548, %549, %550)
}

def @func_9175() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %551 = @func_9020() /* ty=(Tensor[(1620), float32],) */;
  %552 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %553 = %551.0;
  %554 = %552.0;
  (%553, %554)
}

def @func_5573(%var_5566: Tensor[(60), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(90, 2), bool], Tensor[(180), float32]) {
  %555 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %557 = cast(%var_5566, dtype="int8") /* ty=Tensor[(60), int8] */;
  %558 = cast(%var_5566, dtype="int8") /* ty=Tensor[(60), int8] */;
  %559 = reshape(%557, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %560 = reshape(%558, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %561 = @func_5286(%559, %560) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %562 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %563 = reshape(%562, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %564 = @func_3179(%563) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
  %565 = tan(%556) /* ty=Tensor[(4, 5, 7), float32] */;
  %566 = %561.0;
  %567 = %564.3;
  (%565, %566, %var_5566, %567, meta[relay.Constant][34] /* ty=Tensor[(180), float32] */)
}

def @func_9321() -> Tensor[(1620), float32] {
  %568 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %568.0
}

def @func_5532() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %569 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %570 = @func_5045() /* ty=(Tensor[(1620), float32],) */;
  %571 = %569.1;
  %572 = %570.0;
  (%571, %572)
}

def @func_5803() -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %573 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %574 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %575 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %576 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %579 = %573.0;
  %580 = %574.0;
  %581 = %575.0;
  %582 = sin(%578) /* ty=Tensor[(1620), float32] */;
  (%579, %580, %581, %582)
}

def @func_6101() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %583 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %584 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %585 = %583.0;
  %586 = %584.0;
  (%585, %586)
}

def @func_7996(%var_7967: Tensor[(2, 8, 3), float64], %var_7979: Tensor[(4), float64]) -> (Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) {
  %587 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %588 = %587.3;
  %589 = cast(%var_7967, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = cast(%var_7979, dtype="float64") /* ty=Tensor[(4), float64] */;
  %594 = cast(meta[relay.Constant][35] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %595 = reshape(%593, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %596 = reshape(%594, newshape=[1, 240]) /* ty=Tensor[(1, 240), bool] */;
  %597 = @func_7853(%595, %596) /* ty=(Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) */;
  %598 = logical_and(%591, %592) /* ty=Tensor[(2, 8, 3), bool] */;
  %599 = %597.0;
  (%598, %599, %var_7979, meta[relay.Constant][35] /* ty=Tensor[(240), bool] */)
}

def @func_10532() -> (Tensor[(1620), float32],) {
  %600 = @func_5803() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %601 = %600.1;
  (%601,)
}

def @func_10110() -> Tensor[(1620), float32] {
  %602 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %602.0
}

def @func_9943(%var_9926: Tensor[(104), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1890), float32], Tensor[(104), float64], Tensor[(1620), float32]) {
  %603 = @func_9797() /* ty=(Tensor[(1620), float32],) */;
  %604 = @func_7516() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %605 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %606 = @func_8668() /* ty=(Tensor[(1620), float32],) */;
  %607 = cast(%var_9926, dtype="float64") /* ty=Tensor[(104), float64] */;
  %608 = reshape(%607, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), float64] */;
  %609 = @func_9849(%608) /* ty=(Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) */;
  %610 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %611 = %603.0;
  %612 = %604.1;
  %613 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %614 = %605.0;
  %615 = %606.0;
  %616 = %609.1;
  %617 = %610.0;
  (%611, %612, %613, %614, %615, %616, %var_9926, %617)
}

def @func_3037() -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) {
  %618 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %619 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %620 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %621 = reshape(%619, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %622 = reshape(%620, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %623 = @func_519(%621, %622) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %624 = %618.0;
  %625 = %623.1;
  (%624, %625, meta[relay.Constant][36] /* ty=Tensor[(4, 12), float64] */)
}

def @func_10341(%var_10303: Tensor[(648), float32]) -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) {
  %626 = @func_8781() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) */;
  %627 = @func_9175() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %628 = cast(%var_10303, dtype="float32") /* ty=Tensor[(648), float32] */;
  %629 = cast(%var_10303, dtype="float64") /* ty=Tensor[(648), float64] */;
  %630 = cast(%var_10303, dtype="float64") /* ty=Tensor[(648), float64] */;
  %631 = reshape(%628, newshape=[6, 108]) /* ty=Tensor[(6, 108), float32] */;
  %632 = reshape(%629, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %633 = reshape(%630, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %634 = @func_7325(%631, %632, %633) /* ty=(Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) */;
  %635 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %636 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %637 = reshape(%635, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %638 = reshape(%636, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %639 = @func_4816(%637, %638) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) */;
  %640 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %641 = %626.0;
  %642 = %627.1;
  %643 = %634.3;
  %644 = %639.0;
  %645 = %640.0;
  (%641, %642, %643, %var_10303, %644, meta[relay.Constant][37] /* ty=Tensor[(1, 4), float64] */, meta[relay.Constant][38] /* ty=Tensor[(240), bool] */, %645)
}

def @func_3198() -> Tensor[(1620), float32] {
  %646 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %646.0
}

def @func_8814(%var_8808: Tensor[(12, 2, 10), float32]) -> (Tensor[(12, 2, 10), float32], Tensor[(1620), float32]) {
  %647 = cast(%var_8808, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  %648 = sinh(%647) /* ty=Tensor[(12, 2, 10), float32] */;
  %649 = @func_4228() /* ty=Tensor[(1620), float32] */;
  (%648, %649)
}

def @func_2642(%var_2593: Tensor[(1, 3, 11), float64], %var_2616: Tensor[(1, 4), float64], %var_2617: Tensor[(6, 30), float32], %var_2620: Tensor[(1, 3, 11), float64], %var_2631: Tensor[(16, 3, 11), float32]) -> (Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) {
  %650 = cast(meta[relay.Constant][39] /* ty=Tensor[(35, 4), uint8] */, dtype="uint8") /* ty=Tensor[(35, 4), uint8] */;
  %651 = reshape(%650, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %652 = @func_214(%651) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %655 = cast(%var_2616, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %656 = cast(%var_2617, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %657 = reshape(%655, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
  %658 = reshape(%656, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %659 = @func_1243(%657, %658) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
  %660 = cast(%var_2593, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %661 = sinh(%660) /* ty=Tensor[(1, 3, 11), float64] */;
  %662 = cast(%var_2620, dtype="uint8") /* ty=Tensor[(1, 3, 11), uint8] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="uint8") /* ty=Tensor[(1, 3, 11), uint8] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %666 = cast(%661, dtype="float32") /* ty=Tensor[(1, 3, 11), float32] */;
  %667 = erf(%666) /* ty=Tensor[(1, 3, 11), float32] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %669 = cast(meta[relay.Constant][40] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %670 = reshape(%669, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %671 = cast(%667, dtype="uint16") /* ty=Tensor[(1, 3, 11), uint16] */;
  %672 = cast(%var_2631, dtype="uint16") /* ty=Tensor[(16, 3, 11), uint16] */;
  %673 = asinh(%654) /* ty=Tensor[(4, 5, 7), float32] */;
  %674 = %659.5;
  %675 = bitwise_or(%664, %665) /* ty=Tensor[(?, 3, 11), uint8] */;
  %676 = cos(%668) /* ty=Tensor[(1, 3, 11), float64] */;
  %677 = @func_1894(%670) /* ty=Tensor[(9, 9, 8), uint16] */;
  %678 = subtract(%671, %672) /* ty=Tensor[(16, 3, 11), uint16] */;
  (meta[relay.Constant][39] /* ty=Tensor[(35, 4), uint8] */, %673, %674, %var_2616, %var_2617, %675, %676, %677, meta[relay.Constant][40] /* ty=Tensor[(648), float32] */, %678)
}

def @func_8781() -> (Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) {
  %679 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %680 = %679.0;
  %681 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  (%680, %681)
}

def @func_4741() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %682 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %683 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %684 = %683.0;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %686 = log10(%685) /* ty=Tensor[(1620), float32] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %688 = %682.6;
  %689 = acos(%687) /* ty=Tensor[(1620), float64] */;
  (%688, %689)
}

def @func_7126(%var_7099: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
  %690 = @func_6101() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %691 = cast(%var_7099, dtype="float32") /* ty=Tensor[(180), float32] */;
  %692 = %690.1;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %694 = reshape(%691, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %695 = reshape(%693, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %696 = @func_322(%694, %695) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %697 = %696.0;
  (%692, %697, %var_7099)
}

def @func_2988() -> Tensor[(1620), float32] {
  %698 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %698.0
}

def @func_3289() -> (Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %699 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %700 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %701 = reshape(%699, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %702 = reshape(%700, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %703 = @func_519(%701, %702) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %704 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %707 = asinh(%706) /* ty=Tensor[(2, 1, 7), float32] */;
  %708 = cast(%705, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %709 = cosh(%708) /* ty=Tensor[(2, 1, 7), float32] */;
  %710 = cast(%709, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %711 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%707, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %714 = cast(meta[relay.Constant][42] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %715 = reshape(%714, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %716 = @func_3179(%715) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
  %717 = %716.1;
  %718 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 5, 7), uint8] */, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %722 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %723 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %724 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %725 = %703.1;
  %726 = logical_and(%712, %713) /* ty=Tensor[(2, ?, 7), bool] */;
  %727 = greater_equal(%720, %721) /* ty=Tensor[(4, 5, 7), bool] */;
  %728 = %722.3;
  %729 = %723.0;
  %730 = %724.2;
  (%725, meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, %726, meta[relay.Constant][42] /* ty=Tensor[(180), float32] */, %727, %728, %729, %730)
}

def @func_5683(%var_5609: Tensor[(15, 1, 13), float32], %var_5663: Tensor[(15, 6, 13), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(825), int8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(15, 6, 13), bool], Tensor[(180), float32]) {
  %731 = cast(meta[relay.Constant][44] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
  %732 = cast(meta[relay.Constant][44] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
  %733 = cast(meta[relay.Constant][44] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
  %734 = reshape(%731, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %735 = reshape(%732, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %736 = reshape(%733, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %737 = @func_4100(%734, %735, %736) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) */;
  %738 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %739 = cast(%var_5609, dtype="float32") /* ty=Tensor[(15, 1, 13), float32] */;
  %740 = sin(%739) /* ty=Tensor[(15, 1, 13), float32] */;
  %741 = cast(%740, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
  %742 = cast(%var_5663, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
  %743 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %744 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %745 = %737.1;
  %746 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %747 = %738.0;
  %748 = @func_2988() /* ty=Tensor[(1620), float32] */;
  %749 = logical_or(%741, %742) /* ty=Tensor[(15, 6, 13), bool] */;
  %750 = %743.3;
  (%744, %745, meta[relay.Constant][44] /* ty=Tensor[(825), int8] */, %746, %747, %748, %749, %750)
}

def @func_9539() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) {
  %751 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %752 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %753 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %754 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %755 = %751.0;
  %756 = %752.1;
  %757 = %753.0;
  (%754, %755, %756, %757)
}

def @func_6209() -> (Tensor[(2, 8, 3), float32],) {
  %758 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %759 = %758.0;
  (%759,)
}

def @func_10957() -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
  %760 = @func_4035() /* ty=(Tensor[(180), float32],) */;
  %761 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %762 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %763 = reshape(%761, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %764 = reshape(%762, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %765 = @func_519(%763, %764) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %766 = %760.0;
  %767 = %765.0;
  (%766, %767, meta[relay.Constant][45] /* ty=Tensor[(48), float64] */)
}

def @func_7325(%var_7282: Tensor[(6, 108), float32], %var_7289: Tensor[(9, 9, 8), float64], %var_7305: Tensor[(9, 9, 8), float64]) -> (Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) {
  %768 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %769 = cast(%var_7282, dtype="float32") /* ty=Tensor[(6, 108), float32] */;
  %770 = reshape(%769, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %771 = @func_1894(%770) /* ty=Tensor[(9, 9, 8), uint16] */;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(9, 9, 8), float64] */;
  %773 = log10(%772) /* ty=Tensor[(9, 9, 8), float64] */;
  %774 = cast(%var_7289, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = cast(%var_7305, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %779 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%773, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %782 = %768.0;
  %783 = equal(%776, %777) /* ty=Tensor[(9, 9, 8), bool] */;
  %784 = bitwise_xor(%780, %781) /* ty=Tensor[(9, 9, 8), uint16] */;
  (%782, %var_7282, %783, %784)
}

def @func_6511(%var_6504: Tensor[(176), float64], %var_6507: Tensor[(4), float64], %var_6509: Tensor[(240), bool]) -> (Tensor[(2, 8, 3), float32], Tensor[(11, 1, 16), float64], Tensor[(176), float64], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(240), bool]) {
  %785 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %786 = cast(%var_6504, dtype="float64") /* ty=Tensor[(176), float64] */;
  %787 = reshape(%786, newshape=[11, 1, 16]) /* ty=Tensor[(11, 1, 16), float64] */;
  %788 = @func_5866(%787) /* ty=(Tensor[(11, 1, 16), float64],) */;
  %789 = cast(%var_6507, dtype="float64") /* ty=Tensor[(4), float64] */;
  %790 = cast(meta[relay.Constant][46] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %791 = %785.0;
  %792 = cast(%791, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %793 = cast(%var_6509, dtype="bool") /* ty=Tensor[(240), bool] */;
  %794 = reshape(%789, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %795 = reshape(%790, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %796 = reshape(%792, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %797 = reshape(%793, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %798 = @func_3487(%794, %795, %796, %797) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) */;
  %799 = %788.0;
  %800 = %798.5;
  (%791, %799, %var_6504, %800, %var_6507, meta[relay.Constant][46] /* ty=Tensor[(180), float32] */, %var_6509)
}

def @func_4693(%var_4666: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %801 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %802 = %801.0;
  %803 = cast(%var_4666, dtype="int32") /* ty=Tensor[(2, 8, 3), int32] */;
  %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%802, dtype="int32") /* ty=Tensor[(2, 8, 3), int32] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %807 = maximum(%805, %806) /* ty=Tensor[(2, 8, 3), int32] */;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %809 = log10(%808) /* ty=Tensor[(2, 8, 3), float64] */;
  %810 = @func_3198() /* ty=Tensor[(1620), float32] */;
  (%809, %810)
}

def @func_9980() -> (Tensor[(1620), float32],) {
  %811 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %812 = %811.0;
  (%812,)
}

def @func_9849(%var_9836: Tensor[(1, 13, 8), float64]) -> (Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) {
  %813 = cast(%var_9836, dtype="float64") /* ty=Tensor[(1, 13, 8), float64] */;
  %814 = cast(meta[relay.Constant][47] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %815 = cast(meta[relay.Constant][47] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %816 = reshape(%814, newshape=[9, 4, 4]) /* ty=Tensor[(9, 4, 4), float32] */;
  %817 = reshape(%815, newshape=[9, 4, 4]) /* ty=Tensor[(9, 4, 4), float32] */;
  %818 = @func_7027(%816, %817) /* ty=(Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) */;
  %819 = log10(%813) /* ty=Tensor[(1, 13, 8), float64] */;
  %820 = %818.2;
  (%819, %820, meta[relay.Constant][47] /* ty=Tensor[(144), float32] */)
}

def @func_4816(%var_4769: Tensor[(4), float64], %var_4772: Tensor[(240), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) {
  %821 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %822 = cast(%var_4769, dtype="float64") /* ty=Tensor[(4), float64] */;
  %823 = cast(meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %824 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %825 = cast(%var_4772, dtype="bool") /* ty=Tensor[(240), bool] */;
  %826 = reshape(%822, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %827 = reshape(%823, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %828 = reshape(%824, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %829 = reshape(%825, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %830 = @func_3487(%826, %827, %828, %829) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) */;
  %831 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %832 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %833 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %834 = %833.1;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(48), float64] */;
  %836 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), bool] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %837 = reshape(%835, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %838 = reshape(%836, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %839 = @func_519(%837, %838) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %840 = %821.0;
  %841 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %842 = %830.2;
  %843 = %831.7;
  %844 = %832.1;
  %845 = %839.1;
  (%840, %841, %842, %var_4769, meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, meta[relay.Constant][49] /* ty=Tensor[(48), bool] */, %var_4772, %843, %844, %834, %845)
}

def @func_7258(%var_7244: Tensor[(12, 10, 12), uint32]) -> Tensor[(12, 10, 12), uint32] {
  %846 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 10, 1), uint32] */, dtype="uint32") /* ty=Tensor[(12, 10, 1), uint32] */;
  %847 = cast(%var_7244, dtype="uint32") /* ty=Tensor[(12, 10, 12), uint32] */;
  add(%846, %847) /* ty=Tensor[(12, 10, 12), uint32] */
}

def @func_6906() -> (Tensor[(1620), float64],) {
  %848 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %849 = %848.2;
  (%849,)
}

def @func_5204(%var_5198: Tensor[(48), bool]) -> (Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) {
  %850 = @func_4035() /* ty=(Tensor[(180), float32],) */;
  %851 = cast(%var_5198, dtype="bool") /* ty=Tensor[(48), bool] */;
  %852 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %853 = reshape(%851, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %854 = reshape(%852, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %855 = @func_1044(%853, %854) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %856 = %850.0;
  %857 = %855.0;
  (%856, %857, %var_5198, meta[relay.Constant][51] /* ty=Tensor[(240), bool] */)
}

def @func_9599() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %858 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %859 = @func_5803() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %860 = %858.2;
  %861 = %859.3;
  (%860, %861)
}

def @func_10479() -> Tensor[(2, 8, 3), int16] {
  %862 = @func_6980() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %863 = %862.0;
  %864 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 8, 3), float32] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%866, %867) /* ty=Tensor[(2, 8, 3), int16] */
}

def @func_5060() -> (Tensor[(2, 1, 7), uint32],) {
  %868 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %869 = %868.0;
  (%869,)
}

def @func_5983() -> (Tensor[(2, 8, 3), float32],) {
  %870 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %871 = %870.0;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(2, 8, 3), float32] */;
  %873 = atan(%872) /* ty=Tensor[(2, 8, 3), float32] */;
  (%873,)
}

def @func_8968() -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %874 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %875 = @func_8668() /* ty=(Tensor[(1620), float32],) */;
  %876 = %874.0;
  %877 = @func_7640() /* ty=Tensor[(1620), float32] */;
  %878 = %875.0;
  (%876, %877, %878)
}

def @func_3179(%var_3143: Tensor[(90, 2), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) {
  %879 = cast(%var_3143, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %880 = @func_2988() /* ty=Tensor[(1620), float32] */;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %882 = reshape(%879, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %883 = reshape(%881, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %884 = @func_322(%882, %883) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %885 = %884.0;
  %886 = cast(%885, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %887 = reshape(%886, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %888 = @func_214(%887) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %889 = cast(%var_3143, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %890 = sin(%889) /* ty=Tensor[(90, 2), float64] */;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %892 = log10(%891) /* ty=Tensor[(90, 2), float32] */;
  %893 = cast(%892, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %894 = shape_of(%890, dtype="int32") /* ty=Tensor[(2), int32] */;
  %895 = cast(%890, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %897 = %888.1;
  %898 = greater_equal(%895, %896) /* ty=Tensor[(90, 2), bool] */;
  (%880, %885, %897, %898)
}

def @func_6607() -> (Tensor[(4, 12, 13), float32],) {
  %899 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %900 = sigmoid(%899) /* ty=Tensor[(4, 12, 13), float32] */;
  (%900,)
}

def @func_6182(%var_6140: uint32, %var_6141: Tensor[(9, 8, 2), uint32], %var_6146: Tensor[(48), float64]) -> (Tensor[(9, 8, 2), uint32], Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(180), float32]) {
  %901 = cast(%var_6140, dtype="uint32") /* ty=uint32 */;
  %902 = cast(%var_6141, dtype="uint32") /* ty=Tensor[(9, 8, 2), uint32] */;
  %903 = cast(%var_6146, dtype="float64") /* ty=Tensor[(48), float64] */;
  %904 = cast(%var_6146, dtype="float64") /* ty=Tensor[(48), float64] */;
  %905 = reshape(%903, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %906 = reshape(%904, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %907 = @func_519(%905, %906) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %908 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %909 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %910 = @func_5407() /* ty=(Tensor[(1620), float64], Tensor[(1620), float32]) */;
  %911 = %907.1;
  %912 = cast(%911, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %913 = reshape(%912, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %914 = @func_5204(%913) /* ty=(Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) */;
  %915 = bitwise_xor(%901, %902) /* ty=Tensor[(9, 8, 2), uint32] */;
  %916 = %908.3;
  %917 = %909.0;
  %918 = %910.1;
  %919 = %914.0;
  (%915, %911, %var_6146, %916, %917, %918, %919)
}

def @func_3931() -> (Tensor[(1620), float32],) {
  %920 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %921 = %920.1;
  (%921,)
}

def @func_8179() -> Tensor[(4, 12), float64] {
  %922 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %922.2
}

def @func_9423() -> Tensor[(4, 5, 7), uint8] {
  @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */
}

def @func_4100(%var_4081: Tensor[(5, 11, 15), int8], %var_4082: Tensor[(5, 11, 15), int8], %var_4095: Tensor[(5, 11, 15), int8]) -> (Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) {
  %923 = cast(%var_4082, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %924 = shape_of(%var_4081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%var_4081, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %927 = cast(%var_4095, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %928 = shape_of(%var_4081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%var_4081, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %931 = equal(%925, %926) /* ty=Tensor[(5, 11, 15), bool] */;
  %932 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %933 = not_equal(%929, %930) /* ty=Tensor[(5, 11, 15), bool] */;
  (%931, %932, %933)
}

def @func_9552() -> Tensor[(1620), float64] {
  @func_9393() /* ty=Tensor[(1620), float64] */
}

def @func_3487(%var_3431: Tensor[(4), float64], %var_3432: Tensor[(180), float32], %var_3446: Tensor[(48), bool], %var_3447: Tensor[(240), bool]) -> (Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) {
  %934 = cast(meta[relay.Constant][54] /* ty=Tensor[(200, 1), float64] */, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %935 = reshape(%934, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %936 = @func_1424(%935) /* ty=(Tensor[(4, 10, 5), float64],) */;
  %937 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %938 = rsqrt(%937) /* ty=Tensor[(8, 15, 3), float32] */;
  %939 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 15, 3), float32] */, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%938, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %943 = cast(meta[relay.Constant][56] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %944 = reshape(%943, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %945 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %946 = cast(%var_3431, dtype="float64") /* ty=Tensor[(4), float64] */;
  %947 = cast(%var_3432, dtype="float32") /* ty=Tensor[(180), float32] */;
  %948 = reshape(%946, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
  %949 = reshape(%947, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %950 = @func_1243(%948, %949) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
  %951 = cast(%var_3446, dtype="bool") /* ty=Tensor[(48), bool] */;
  %952 = cast(%var_3447, dtype="bool") /* ty=Tensor[(240), bool] */;
  %953 = reshape(%951, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %954 = reshape(%952, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %955 = @func_1044(%953, %954) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %956 = cast(%938, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %957 = %936.0;
  %958 = bitwise_xor(%941, %942) /* ty=Tensor[(8, 15, 3), uint16] */;
  %959 = @func_2767(%944) /* ty=Tensor[(1620), float32] */;
  %960 = %945.0;
  %961 = %950.2;
  %962 = %955.0;
  %963 = asinh(%956) /* ty=Tensor[(8, 15, 3), float32] */;
  (%957, meta[relay.Constant][54] /* ty=Tensor[(200, 1), float64] */, %958, %959, meta[relay.Constant][56] /* ty=Tensor[(1620), float32] */, %960, %961, %var_3431, %var_3432, %962, %var_3446, %var_3447, %963)
}

def @func_7073() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %964 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %965 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_5443() -> (Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
  %968 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %969 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %970 = %968.1;
  %971 = %969.4;
  (%970, %971)
}

def @func_7607(%var_7596: Tensor[(350), int16], %var_7597: Tensor[(1200), float64], %var_7598: Tensor[(33), float64], %var_7599: Tensor[(4), float64]) -> (Tensor[(4, 5, 7), float32], Tensor[(9, 9, 8), uint16], Tensor[(648, 1), float32], Tensor[(4, 5, 7), float32], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32]) {
  %972 = cast(meta[relay.Constant][57] /* ty=Tensor[(648, 1), float32] */, dtype="float32") /* ty=Tensor[(648, 1), float32] */;
  %973 = reshape(%972, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %974 = @func_5707(%973) /* ty=(Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */;
  %975 = cast(%var_7596, dtype="int16") /* ty=Tensor[(350), int16] */;
  %976 = cast(%var_7596, dtype="int16") /* ty=Tensor[(350), int16] */;
  %977 = cast(%var_7597, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %978 = cast(%var_7598, dtype="float64") /* ty=Tensor[(33), float64] */;
  %979 = cast(%var_7599, dtype="float64") /* ty=Tensor[(4), float64] */;
  %980 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %981 = reshape(%975, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %982 = reshape(%976, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %983 = reshape(%977, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %984 = reshape(%978, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %985 = reshape(%979, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %986 = reshape(%980, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %987 = @func_6270(%981, %982, %983, %984, %985, %986) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
  %988 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
  %989 = %974.1;
  %990 = %987.1;
  (%988, %989, meta[relay.Constant][57] /* ty=Tensor[(648, 1), float32] */, %990, %var_7596, %var_7597, %var_7598, %var_7599, meta[relay.Constant][58] /* ty=Tensor[(180), float32] */)
}

def @func_10415(%var_10400: Tensor[(48), bool], %var_10401: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %991 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %992 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %993 = reshape(%991, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %994 = reshape(%992, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %995 = @func_5286(%993, %994) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %996 = cast(%var_10400, dtype="bool") /* ty=Tensor[(48), bool] */;
  %997 = cast(%var_10401, dtype="bool") /* ty=Tensor[(240), bool] */;
  %998 = reshape(%996, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %999 = reshape(%997, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %1000 = @func_1044(%998, %999) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %1001 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %1002 = @func_9552() /* ty=Tensor[(1620), float64] */;
  %1003 = cast(%1002, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1004 = reshape(%1003, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1005 = @func_2813(%1004) /* ty=(Tensor[(1620), float32],) */;
  %1006 = %995.0;
  %1007 = %1000.0;
  %1008 = %1001.0;
  %1009 = %1005.0;
  (%1002, %1006, meta[relay.Constant][59] /* ty=Tensor[(60), int8] */, %1007, %var_10400, %var_10401, %1008, %1009)
}

def @func_7224() -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32]) {
  %1010 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %1011 = @func_6402() /* ty=(Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) */;
  %1012 = @func_6101() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %1013 = %1010.1;
  %1014 = %1011.0;
  %1015 = %1012.0;
  (%1013, %1014, %1015)
}

def @func_6329(%var_6313: Tensor[(140), uint8]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(140), uint8]) {
  %1016 = @func_5474() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %1017 = cast(%var_6313, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %1018 = reshape(%1017, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %1019 = @func_4358(%1018) /* ty=(Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) */;
  %1020 = %1016.0;
  %1021 = %1019.2;
  (%1020, %1021, %var_6313)
}

def @func_10631(%var_10616: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
  %1022 = @func_10532() /* ty=(Tensor[(1620), float32],) */;
  %1023 = cast(%var_10616, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1024 = %1022.0;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1026 = reshape(%1023, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1027 = reshape(%1025, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %1028 = @func_322(%1026, %1027) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %1029 = %1028.0;
  (%1024, %1029, %var_10616)
}

def @func_7469(%var_7419: Tensor[(3, 16, 12), uint8], %var_7420: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) {
  %1030 = cast(%var_7420, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
  %1031 = shape_of(%var_7419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%var_7419, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1034 = maximum(%1032, %1033) /* ty=Tensor[(3, 16, 12), uint8] */;
  %1035 = cast(%1034, dtype="bool") /* ty=Tensor[(3, 16, 12), bool] */;
  %1036 = shape_of(%var_7419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%var_7419, dtype="bool") /* ty=Tensor[(3, 16, 12), bool] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1039 = less_equal(%1037, %1038) /* ty=Tensor[(3, 16, 12), bool] */;
  %1040 = @func_3198() /* ty=Tensor[(1620), float32] */;
  (%1039, %1040)
}

def @func_10922(%var_10916: Tensor[(324, 2), float32]) -> (Tensor[(2, 8, 3), float64], Tensor[(240), bool], Tensor[(324, 2), float64]) {
  %1041 = @func_10077() /* ty=Tensor[(2, 8, 3), float32] */;
  %1042 = cast(%1041, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %1043 = cast(%var_10916, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %1044 = reshape(%1043, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %1045 = @func_10341(%1044) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) */;
  %1046 = cast(%var_10916, dtype="float64") /* ty=Tensor[(324, 2), float64] */;
  %1047 = erf(%1042) /* ty=Tensor[(2, 8, 3), float64] */;
  %1048 = %1045.6;
  %1049 = acosh(%1046) /* ty=Tensor[(324, 2), float64] */;
  (%1047, %1048, %1049)
}

def @func_6064(%var_6030: Tensor[(15, 10, 8), float64], %var_6031: Tensor[(15, 10, 8), float64]) -> (Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) {
  %1050 = cast(meta[relay.Constant][60] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1051 = cast(meta[relay.Constant][60] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1052 = reshape(%1050, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %1053 = reshape(%1051, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %1054 = @func_5286(%1052, %1053) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %1055 = cast(%var_6031, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %1056 = shape_of(%var_6030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_6030, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1059 = mod(%1057, %1058) /* ty=Tensor[(15, 10, 8), float64] */;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1061 = cast(%var_6031, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1062 = %1054.0;
  %1063 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
  %1064 = @func_5606() /* ty=Tensor[(1620), float32] */;
  %1065 = sinh(%1060) /* ty=Tensor[(15, 10, 8), float32] */;
  %1066 = log10(%1061) /* ty=Tensor[(15, 10, 8), float32] */;
  (%1062, meta[relay.Constant][60] /* ty=Tensor[(60), int8] */, %1063, %1064, %1065, %1066)
}

def @func_6015() -> Tensor[(1620), float32] {
  %1067 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %1067.2
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5390() -> (Tensor[(1620), float32],) {
  %0 = @func_2988() /* ty=Tensor[(1620), float32] */;
  (%0,)
}

def @func_4502(%var_4500: Tensor[(48), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
  @func_4499(%var_4500) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) */
}

def @func_7330(%var_7327: Tensor[(6, 108), float32], %var_7328: Tensor[(9, 9, 8), float64], %var_7329: Tensor[(9, 9, 8), float64]) -> (Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) {
  @func_7325(%var_7327, %var_7328, %var_7329) /* ty=(Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) */
}

def @func_11021() -> (Tensor[(1620), int64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
  %1 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %2 = %1.0;
  %3 = @func_9599() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %4 = %3.0;
  %5 = cast(%4, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %6 = shape_of(%2, dtype="int32") /* ty=Tensor[(1), int32] */;
  %7 = cast(%2, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?), int64] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %10 = reshape(%9, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %11 = bitwise_xor(%7, %8) /* ty=Tensor[(1620), int64] */;
  %12 = @func_1894(%10) /* ty=Tensor[(9, 9, 8), uint16] */;
  (%11, %12, meta[relay.Constant][0] /* ty=Tensor[(648), float32] */)
}

def @func_3123() -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_6187(%var_6184: uint32, %var_6185: Tensor[(9, 8, 2), uint32], %var_6186: Tensor[(48), float64]) -> (Tensor[(9, 8, 2), uint32], Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(180), float32]) {
  @func_6182(%var_6184, %var_6185, %var_6186) /* ty=(Tensor[(9, 8, 2), uint32], Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(180), float32]) */
}

def @func_6906() -> (Tensor[(1620), float64],) {
  %13 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %14 = %13.2;
  (%14,)
}

def @func_6668() -> Tensor[(4, 12, 13), float32] {
  %16 = fn () -> Tensor[(4, 12, 13), float32] {
    %15 = @func_6607() /* ty=(Tensor[(4, 12, 13), float32],) */;
    %15.0
  };
  %16() /* ty=Tensor[(4, 12, 13), float32] */
}

def @func_10925(%var_10923: Tensor[(324, 2), float32]) -> (Tensor[(2, 8, 3), float64], Tensor[(240), bool], Tensor[(324, 2), float64]) {
  @func_10922(%var_10923) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(240), bool], Tensor[(324, 2), float64]) */
}

def @func_5159() -> (Tensor[(1620), float64],) {
  %17 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %18 = %17.1;
  (%18,)
}

def @func_3841() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %24 = fn () -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
    %19 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
    %20 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
    %21 = %19.3;
    %22 = %20.1;
    %23 = @func_3365() /* ty=Tensor[(1620), float32] */;
    (%21, %22, %23)
  };
  %24() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */
}

def @func_10631(%var_10616: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
  %25 = @func_10532() /* ty=(Tensor[(1620), float32],) */;
  %26 = cast(%var_10616, dtype="float32") /* ty=Tensor[(180), float32] */;
  %27 = %25.0;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %29 = reshape(%26, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %30 = reshape(%28, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %31 = @func_322(%29, %30) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %32 = %31.0;
  (%27, %32, %var_10616)
}

def @func_5204(%var_5198: Tensor[(48), bool]) -> (Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) {
  %33 = @func_4035() /* ty=(Tensor[(180), float32],) */;
  %34 = cast(%var_5198, dtype="bool") /* ty=Tensor[(48), bool] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %36 = reshape(%34, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %37 = reshape(%35, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %38 = @func_1044(%36, %37) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %39 = %33.0;
  %40 = %38.0;
  (%39, %40, %var_5198, meta[relay.Constant][1] /* ty=Tensor[(240), bool] */)
}

def @func_7642() -> Tensor[(1620), float32] {
  @func_7640() /* ty=Tensor[(1620), float32] */
}

def @func_8294(%var_8287: Tensor[(4, 12), float64]) -> (Tensor[(180), float32], Tensor[(1620), float32], Tensor[(4, 12), float64], Tensor[(4), float64]) {
  %41 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %42 = cast(%var_8287, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %44 = reshape(%42, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %45 = reshape(%43, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %46 = @func_7996(%44, %45) /* ty=(Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) */;
  %47 = %41.0;
  %48 = %46.1;
  (%47, %48, %var_8287, meta[relay.Constant][2] /* ty=Tensor[(4), float64] */)
}

def @func_6908() -> (Tensor[(1620), float64],) {
  @func_6906() /* ty=(Tensor[(1620), float64],) */
}

def @func_9769(%var_9767: Tensor[(2, 24), bool], %var_9768: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(9, 10, 11), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(240), bool], Tensor[(2, 24), float32]) {
  @func_9765(%var_9767, %var_9768) /* ty=(Tensor[(1620), float64], Tensor[(9, 10, 11), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(240), bool], Tensor[(2, 24), float32]) */
}

def @func_3986() -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
  %49 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %50 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %51 = %50.1;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %53 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %54 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %55 = %49.1;
  %56 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %57 = log2(%52) /* ty=Tensor[(1620), float64] */;
  %58 = %53.1;
  %59 = %54.0;
  (%55, %56, %57, %58, %59)
}

def @func_2837() -> (Tensor[(1620), float32],) {
  %60 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %61 = %60.3;
  (%61,)
}

def @func_4229() -> Tensor[(1620), float32] {
  %63 = fn () -> Tensor[(1620), float32] {
    %62 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
    %62.0
  };
  %63() /* ty=Tensor[(1620), float32] */
}

def @func_9423() -> Tensor[(4, 5, 7), uint8] {
  @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */
}

def @func_6516(%var_6513: Tensor[(176), float64], %var_6514: Tensor[(4), float64], %var_6515: Tensor[(240), bool]) -> (Tensor[(2, 8, 3), float32], Tensor[(11, 1, 16), float64], Tensor[(176), float64], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(240), bool]) {
  @func_6511(%var_6513, %var_6514, %var_6515) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(11, 1, 16), float64], Tensor[(176), float64], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(240), bool]) */
}

def @func_6332(%var_6330: Tensor[(140), uint8]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(140), uint8]) {
  @func_6329(%var_6330) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(140), uint8]) */
}

def @func_10480() -> Tensor[(2, 8, 3), int16] {
  %70 = fn () -> Tensor[(2, 8, 3), int16] {
    %64 = @func_6980() /* ty=(Tensor[(2, 8, 3), float32],) */;
    %65 = %64.0;
    %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 8, 3), float32] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%68, %69) /* ty=Tensor[(2, 8, 3), int16] */
  };
  %70() /* ty=Tensor[(2, 8, 3), int16] */
}

def @func_10534() -> (Tensor[(1620), float32],) {
  @func_10532() /* ty=(Tensor[(1620), float32],) */
}

def @func_6980() -> (Tensor[(2, 8, 3), float32],) {
  %71 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %72 = %71.0;
  (%72,)
}

def @func_10415(%var_10400: Tensor[(48), bool], %var_10401: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %75 = reshape(%73, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %76 = reshape(%74, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %77 = @func_5286(%75, %76) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %78 = cast(%var_10400, dtype="bool") /* ty=Tensor[(48), bool] */;
  %79 = cast(%var_10401, dtype="bool") /* ty=Tensor[(240), bool] */;
  %80 = reshape(%78, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %81 = reshape(%79, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %82 = @func_1044(%80, %81) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %83 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %84 = @func_9552() /* ty=Tensor[(1620), float64] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %86 = reshape(%85, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %87 = @func_2813(%86) /* ty=(Tensor[(1620), float32],) */;
  %88 = %77.0;
  %89 = %82.0;
  %90 = %83.0;
  %91 = %87.0;
  (%84, %88, meta[relay.Constant][4] /* ty=Tensor[(60), int8] */, %89, %var_10400, %var_10401, %90, %91)
}

def @func_3182(%var_3180: Tensor[(90, 2), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) {
  @func_3179(%var_3180) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */
}

def @func_2813(%var_2806: Tensor[(1620), float32]) -> (Tensor[(1620), float32],) {
  %92 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %93 = %92.0;
  %94 = cast(%var_2806, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(1), int32] */;
  %96 = cast(%93, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?), float32] */;
  %98 = floor_mod(%96, %97) /* ty=Tensor[(1620), float32] */;
  (%98,)
}

def @func_6103() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_6101() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_5392() -> (Tensor[(1620), float32],) {
  @func_5390() /* ty=(Tensor[(1620), float32],) */
}

def @func_6926() -> (Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) {
  %99 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %101 = reshape(%100, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %102 = @func_214(%101) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %103 = %99.0;
  %104 = %102.1;
  (%103, %104, meta[relay.Constant][5] /* ty=Tensor[(140), uint8] */)
}

def @func_4696(%var_4694: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  @func_4693(%var_4694) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */
}

def @func_9566(%var_9554: Tensor[(6, 12, 6), float64]) -> (Tensor[(6, 12, 6), float64],) {
  %105 = cast(%var_9554, dtype="float64") /* ty=Tensor[(6, 12, 6), float64] */;
  %106 = sigmoid(%105) /* ty=Tensor[(6, 12, 6), float64] */;
  (%106,)
}

def @func_9981() -> (Tensor[(1620), float32],) {
  %109 = fn () -> (Tensor[(1620), float32],) {
    %107 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(1620), float32],) */
}

def @func_523(%var_521: Tensor[(2, 8, 3), float64], %var_522: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) {
  @func_519(%var_521, %var_522) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */
}

def @func_3200() -> Tensor[(1620), float32] {
  @func_3198() /* ty=Tensor[(1620), float32] */
}

def @func_3037() -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) {
  %110 = @func_2859() /* ty=(Tensor[(180), float32],) */;
  %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %112 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %113 = reshape(%111, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %114 = reshape(%112, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %115 = @func_519(%113, %114) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %116 = %110.0;
  %117 = %115.1;
  (%116, %117, meta[relay.Constant][6] /* ty=Tensor[(4, 12), float64] */)
}

def @func_4211() -> (Tensor[(1620), float32],) {
  %119 = fn () -> (Tensor[(1620), float32],) {
    %118 = @func_2988() /* ty=Tensor[(1620), float32] */;
    (%118,)
  };
  %119() /* ty=(Tensor[(1620), float32],) */
}

def @func_8706() -> Tensor[(1620), float32] {
  %120 = @func_7516() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %120.0
}

def @func_9175() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %121 = @func_9020() /* ty=(Tensor[(1620), float32],) */;
  %122 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_3179(%var_3143: Tensor[(90, 2), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) {
  %125 = cast(%var_3143, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %126 = @func_2988() /* ty=Tensor[(1620), float32] */;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %128 = reshape(%125, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %129 = reshape(%127, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %130 = @func_322(%128, %129) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %133 = reshape(%132, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %134 = @func_214(%133) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %135 = cast(%var_3143, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %136 = sin(%135) /* ty=Tensor[(90, 2), float64] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %138 = log10(%137) /* ty=Tensor[(90, 2), float32] */;
  %139 = cast(%138, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %140 = shape_of(%136, dtype="int32") /* ty=Tensor[(2), int32] */;
  %141 = cast(%136, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %143 = %134.1;
  %144 = greater_equal(%141, %142) /* ty=Tensor[(90, 2), bool] */;
  (%126, %131, %143, %144)
}

def @func_4361(%var_4359: Tensor[(4, 5, 7), uint8]) -> (Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) {
  @func_4358(%var_4359) /* ty=(Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) */
}

def @func_10634(%var_10632: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
  @func_10631(%var_10632) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) */
}

def @func_10877(%var_10819: Tensor[(162, 4), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(2, 8, 3), float64], Tensor[(162, 4), uint8], Tensor[(2, 8, 3), float64], Tensor[(1620), float32], Tensor[(162, 4), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %145 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %146 = cast(meta[relay.Constant][7] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %147 = reshape(%146, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %148 = @func_5707(%147) /* ty=(Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */;
  %149 = cast(meta[relay.Constant][7] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %150 = reshape(%149, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %151 = @func_10341(%150) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) */;
  %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(162, 4), float32] */, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %153 = acos(%152) /* ty=Tensor[(162, 4), float32] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %155 = cos(%154) /* ty=Tensor[(162, 4), float64] */;
  %156 = cast(%var_10819, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %157 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %158 = cast(%153, dtype="float64") /* ty=Tensor[(162, 4), float64] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %160 = floor_divide(%158, %159) /* ty=Tensor[(162, 4), float64] */;
  %161 = cast(%160, dtype="bool") /* ty=Tensor[(162, 4), bool] */;
  %162 = shape_of(%155, dtype="int32") /* ty=Tensor[(2), int32] */;
  %163 = cast(%155, dtype="bool") /* ty=Tensor[(162, 4), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %165 = greater(%163, %164) /* ty=Tensor[(162, 4), bool] */;
  %166 = cast(%153, dtype="uint8") /* ty=Tensor[(162, 4), uint8] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(2), int32] */;
  %168 = cast(%165, dtype="uint8") /* ty=Tensor[(162, 4), uint8] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %170 = %151.7;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %172 = reshape(%171, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %173 = @func_4499(%172) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) */;
  %174 = @func_9539() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %175 = cast(%165, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %176 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %177 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %178 = @func_10110() /* ty=Tensor[(1620), float32] */;
  %179 = %145.0;
  %180 = %148.1;
  %181 = multiply(%168, %169) /* ty=Tensor[(162, 4), uint8] */;
  %182 = %173.2;
  %183 = %174.3;
  %184 = sin(%175) /* ty=Tensor[(162, 4), float32] */;
  %185 = %176.0;
  %186 = %177.0;
  (%178, %179, %180, %170, %181, %182, %183, %184, %185, %186)
}

def @func_11302() -> (Tensor[(2, 8, 3), int16],) {
  %187 = @func_10479() /* ty=Tensor[(2, 8, 3), int16] */;
  (%187,)
}

def @func_4499(%var_4496: Tensor[(48), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
  %188 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %189 = cast(%var_4496, dtype="float64") /* ty=Tensor[(48), float64] */;
  %190 = cast(%var_4496, dtype="float64") /* ty=Tensor[(48), float64] */;
  %191 = reshape(%189, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %192 = reshape(%190, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %193 = @func_519(%191, %192) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %194 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %195 = %188.0;
  %196 = %193.0;
  (%194, %195, %196, %var_4496)
}

def @func_8708() -> Tensor[(1620), float32] {
  @func_8706() /* ty=Tensor[(1620), float32] */
}

def @func_6067(%var_6065: Tensor[(15, 10, 8), float64], %var_6066: Tensor[(15, 10, 8), float64]) -> (Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) {
  %214 = fn (%var_6030: Tensor[(15, 10, 8), float64], %var_6031: Tensor[(15, 10, 8), float64]) -> (Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) {
    %197 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %198 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %199 = reshape(%197, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
    %200 = reshape(%198, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
    %201 = @func_5286(%199, %200) /* ty=(Tensor[(3, 4, 5), int8],) */;
    %202 = cast(%var_6031, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %203 = shape_of(%var_6030, dtype="int32") /* ty=Tensor[(3), int32] */;
    %204 = cast(%var_6030, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %206 = mod(%204, %205) /* ty=Tensor[(15, 10, 8), float64] */;
    %207 = cast(%206, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
    %208 = cast(%var_6031, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
    %209 = %201.0;
    %210 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
    %211 = @func_5606() /* ty=Tensor[(1620), float32] */;
    %212 = sinh(%207) /* ty=Tensor[(15, 10, 8), float32] */;
    %213 = log10(%208) /* ty=Tensor[(15, 10, 8), float32] */;
    (%209, meta[relay.Constant][8] /* ty=Tensor[(60), int8] */, %210, %211, %212, %213)
  };
  %214(%var_6065, %var_6066) /* ty=(Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) */
}

def @func_6182(%var_6140: uint32, %var_6141: Tensor[(9, 8, 2), uint32], %var_6146: Tensor[(48), float64]) -> (Tensor[(9, 8, 2), uint32], Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(180), float32]) {
  %215 = cast(%var_6140, dtype="uint32") /* ty=uint32 */;
  %216 = cast(%var_6141, dtype="uint32") /* ty=Tensor[(9, 8, 2), uint32] */;
  %217 = cast(%var_6146, dtype="float64") /* ty=Tensor[(48), float64] */;
  %218 = cast(%var_6146, dtype="float64") /* ty=Tensor[(48), float64] */;
  %219 = reshape(%217, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %220 = reshape(%218, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %221 = @func_519(%219, %220) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %222 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %223 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %224 = @func_5407() /* ty=(Tensor[(1620), float64], Tensor[(1620), float32]) */;
  %225 = %221.1;
  %226 = cast(%225, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %227 = reshape(%226, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %228 = @func_5204(%227) /* ty=(Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) */;
  %229 = bitwise_xor(%215, %216) /* ty=Tensor[(9, 8, 2), uint32] */;
  %230 = %222.3;
  %231 = %223.0;
  %232 = %224.1;
  %233 = %228.0;
  (%229, %225, %var_6146, %230, %231, %232, %233)
}

def @func_8817(%var_8815: Tensor[(12, 2, 10), float32]) -> (Tensor[(12, 2, 10), float32], Tensor[(1620), float32]) {
  @func_8814(%var_8815) /* ty=(Tensor[(12, 2, 10), float32], Tensor[(1620), float32]) */
}

def @func_3492(%var_3488: Tensor[(4), float64], %var_3489: Tensor[(180), float32], %var_3490: Tensor[(48), bool], %var_3491: Tensor[(240), bool]) -> (Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) {
  %264 = fn (%var_3431: Tensor[(4), float64], %var_3432: Tensor[(180), float32], %var_3446: Tensor[(48), bool], %var_3447: Tensor[(240), bool]) -> (Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) {
    %234 = cast(meta[relay.Constant][9] /* ty=Tensor[(200, 1), float64] */, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
    %235 = reshape(%234, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
    %236 = @func_1424(%235) /* ty=(Tensor[(4, 10, 5), float64],) */;
    %237 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %238 = rsqrt(%237) /* ty=Tensor[(8, 15, 3), float32] */;
    %239 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 15, 3), float32] */, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
    %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
    %241 = cast(%238, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
    %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %244 = reshape(%243, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %245 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
    %246 = cast(%var_3431, dtype="float64") /* ty=Tensor[(4), float64] */;
    %247 = cast(%var_3432, dtype="float32") /* ty=Tensor[(180), float32] */;
    %248 = reshape(%246, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
    %249 = reshape(%247, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
    %250 = @func_1243(%248, %249) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
    %251 = cast(%var_3446, dtype="bool") /* ty=Tensor[(48), bool] */;
    %252 = cast(%var_3447, dtype="bool") /* ty=Tensor[(240), bool] */;
    %253 = reshape(%251, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
    %254 = reshape(%252, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
    %255 = @func_1044(%253, %254) /* ty=(Tensor[(5, 3, 16), bool],) */;
    %256 = cast(%238, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %257 = %236.0;
    %258 = bitwise_xor(%241, %242) /* ty=Tensor[(8, 15, 3), uint16] */;
    %259 = @func_2767(%244) /* ty=Tensor[(1620), float32] */;
    %260 = %245.0;
    %261 = %250.2;
    %262 = %255.0;
    %263 = asinh(%256) /* ty=Tensor[(8, 15, 3), float32] */;
    (%257, meta[relay.Constant][9] /* ty=Tensor[(200, 1), float64] */, %258, %259, meta[relay.Constant][11] /* ty=Tensor[(1620), float32] */, %260, %261, %var_3431, %var_3432, %262, %var_3446, %var_3447, %263)
  };
  %264(%var_3488, %var_3489, %var_3490, %var_3491) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) */
}

def @func_5207(%var_5205: Tensor[(48), bool]) -> (Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) {
  @func_5204(%var_5205) /* ty=(Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) */
}

def @func_2790() -> (Tensor[(1620), float32],) {
  @func_2788() /* ty=(Tensor[(1620), float32],) */
}

def @func_3667() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_10002() -> (Tensor[(1620), float32],) {
  %265 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %266 = %265.0;
  (%266,)
}

def @func_6016() -> Tensor[(1620), float32] {
  %268 = fn () -> Tensor[(1620), float32] {
    %267 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %267.2
  };
  %268() /* ty=Tensor[(1620), float32] */
}

def @func_7027(%var_6995: Tensor[(9, 4, 4), float32], %var_6996: Tensor[(9, 4, 4), float32]) -> (Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) {
  %269 = cast(%var_6996, dtype="float32") /* ty=Tensor[(9, 4, 4), float32] */;
  %270 = shape_of(%var_6995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_6995, dtype="float32") /* ty=Tensor[(9, 4, 4), float32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %273 = cast(meta[relay.Constant][12] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %274 = reshape(%273, newshape=[15, 9, 14]) /* ty=Tensor[(15, 9, 14), float32] */;
  %275 = @func_4977(%274) /* ty=(Tensor[(15, 9, 14), float32],) */;
  %276 = mod(%271, %272) /* ty=Tensor[(9, 4, 4), float32] */;
  %277 = %275.0;
  (%276, %277, meta[relay.Constant][12] /* ty=Tensor[(1890), float32] */)
}

def @func_5576(%var_5574: Tensor[(60), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(90, 2), bool], Tensor[(180), float32]) {
  @func_5573(%var_5574) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(90, 2), bool], Tensor[(180), float32]) */
}

def @func_8075() -> Tensor[(9, 10, 11), float64] {
  @func_8073() /* ty=Tensor[(9, 10, 11), float64] */
}

def @func_11304() -> (Tensor[(2, 8, 3), int16],) {
  @func_11302() /* ty=(Tensor[(2, 8, 3), int16],) */
}

def @func_5444() -> (Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
  %282 = fn () -> (Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
    %278 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
    %279 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
    %280 = %278.1;
    %281 = %279.4;
    (%280, %281)
  };
  %282() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */
}

def @func_9541() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) {
  @func_9539() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) */
}

def @func_9296() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %287 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
    %283 = @func_9175() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %284 = @func_8968() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %285 = %283.1;
    %286 = %284.2;
    (%285, %286)
  };
  %287() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_9765(%var_9723: Tensor[(2, 24), bool], %var_9724: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(9, 10, 11), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(240), bool], Tensor[(2, 24), float32]) {
  %288 = @func_7073() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %289 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %290 = cast(%var_9723, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %291 = cast(%var_9724, dtype="bool") /* ty=Tensor[(240), bool] */;
  %292 = reshape(%290, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %293 = reshape(%291, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %294 = @func_1044(%292, %293) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %295 = cast(%var_9723, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %296 = %288.1;
  %297 = @func_8073() /* ty=Tensor[(9, 10, 11), float64] */;
  %298 = %289.1;
  %299 = @func_6015() /* ty=Tensor[(1620), float32] */;
  %300 = %294.0;
  %301 = asinh(%295) /* ty=Tensor[(2, 24), float32] */;
  (%296, %297, %298, %299, %300, %var_9724, %301)
}

def @func_10532() -> (Tensor[(1620), float32],) {
  %302 = @func_5803() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %303 = %302.1;
  (%303,)
}

def @func_2649(%var_2644: Tensor[(1, 3, 11), float64], %var_2645: Tensor[(1, 4), float64], %var_2646: Tensor[(6, 30), float32], %var_2647: Tensor[(1, 3, 11), float64], %var_2648: Tensor[(16, 3, 11), float32]) -> (Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) {
  @func_2642(%var_2644, %var_2645, %var_2646, %var_2647, %var_2648) /* ty=(Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) */
}

def @func_7031(%var_7029: Tensor[(9, 4, 4), float32], %var_7030: Tensor[(9, 4, 4), float32]) -> (Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) {
  @func_7027(%var_7029, %var_7030) /* ty=(Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) */
}

def @func_9539() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(180), float32], Tensor[(1620), float32]) {
  %304 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %305 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %306 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %307 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %308 = %304.0;
  %309 = %305.1;
  %310 = %306.0;
  (%307, %308, %309, %310)
}

def @func_519(%var_493: Tensor[(2, 8, 3), float64], %var_494: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) {
  %311 = cast(%var_494, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %312 = shape_of(%var_493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_493, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %315 = cast(%var_493, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %316 = floor_mod(%313, %314) /* ty=Tensor[(2, 8, 3), float64] */;
  %317 = asinh(%315) /* ty=Tensor[(2, 8, 3), float64] */;
  (%316, %317)
}

def @func_10207() -> (Tensor[(1620), float32], Tensor[(140), uint8]) {
  %318 = @func_6926() /* ty=(Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) */;
  %319 = @func_10110() /* ty=Tensor[(1620), float32] */;
  %320 = %318.2;
  (%319, %320)
}

def @func_3289() -> (Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %321 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %322 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %323 = reshape(%321, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %324 = reshape(%322, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
  %325 = @func_519(%323, %324) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
  %326 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %329 = asinh(%328) /* ty=Tensor[(2, 1, 7), float32] */;
  %330 = cast(%327, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %331 = cosh(%330) /* ty=Tensor[(2, 1, 7), float32] */;
  %332 = cast(%331, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %333 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%329, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %336 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %337 = reshape(%336, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %338 = @func_3179(%337) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
  %339 = %338.1;
  %340 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 5, 7), uint8] */, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %344 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %345 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %346 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %347 = %325.1;
  %348 = logical_and(%334, %335) /* ty=Tensor[(2, ?, 7), bool] */;
  %349 = greater_equal(%342, %343) /* ty=Tensor[(4, 5, 7), bool] */;
  %350 = %344.3;
  %351 = %345.0;
  %352 = %346.2;
  (%347, meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, %348, meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, %349, %350, %351, %352)
}

def @func_8783() -> (Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) {
  @func_8781() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) */
}

def @func_8073() -> Tensor[(9, 10, 11), float64] {
  %353 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %354 = rsqrt(%353) /* ty=Tensor[(9, 10, 11), float32] */;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  erf(%355) /* ty=Tensor[(9, 10, 11), float64] */
}

def @func_5458() -> Tensor[(4, 5, 7), float32] {
  %359 = fn () -> Tensor[(4, 5, 7), float32] {
    %356 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
    %357 = %356.1;
    %358 = cast(%357, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
    log10(%358) /* ty=Tensor[(4, 5, 7), float32] */
  };
  %359() /* ty=Tensor[(4, 5, 7), float32] */
}

def @func_5869(%var_5867: Tensor[(11, 1, 16), float64]) -> (Tensor[(11, 1, 16), float64],) {
  @func_5866(%var_5867) /* ty=(Tensor[(11, 1, 16), float64],) */
}

def @func_4693(%var_4666: Tensor[(2, 8, 3), float64]) -> (Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  %360 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %361 = %360.0;
  %362 = cast(%var_4666, dtype="int32") /* ty=Tensor[(2, 8, 3), int32] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="int32") /* ty=Tensor[(2, 8, 3), int32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %366 = maximum(%364, %365) /* ty=Tensor[(2, 8, 3), int32] */;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %368 = log10(%367) /* ty=Tensor[(2, 8, 3), float64] */;
  %369 = @func_3198() /* ty=Tensor[(1620), float32] */;
  (%368, %369)
}

def @func_9116(%var_9114: Tensor[(60), int8], %var_9115: Tensor[(300, 4), float64]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(300, 4), float64], Tensor[(1, 33), float64], Tensor[(2, 2), float64], Tensor[(180), float32]) {
  @func_9112(%var_9114, %var_9115) /* ty=(Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(300, 4), float64], Tensor[(1, 33), float64], Tensor[(2, 2), float64], Tensor[(180), float32]) */
}

def @func_4465(%var_4463: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1, 180), float32]) {
  @func_4462(%var_4463) /* ty=(Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1, 180), float32]) */
}

def @func_10209() -> (Tensor[(1620), float32], Tensor[(140), uint8]) {
  @func_10207() /* ty=(Tensor[(1620), float32], Tensor[(140), uint8]) */
}

def @func_7857(%var_7855: Tensor[(4), float64], %var_7856: Tensor[(1, 240), bool]) -> (Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) {
  @func_7853(%var_7855, %var_7856) /* ty=(Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) */
}

def @func_325(%var_323: Tensor[(15, 1, 12), float32], %var_324: Tensor[(15, 9, 12), float32]) -> (Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) {
  %388 = fn (%var_272: Tensor[(15, 1, 12), float32], %var_317: Tensor[(15, 9, 12), float32]) -> (Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) {
    %370 = cast(meta[relay.Constant][17] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %371 = reshape(%370, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
    %372 = @func_214(%371) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
    %373 = %372.0;
    %374 = cast(%373, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
    %375 = reshape(%374, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
    %376 = @func_214(%375) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
    %377 = cast(%var_272, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
    %378 = log10(%377) /* ty=Tensor[(15, 1, 12), float32] */;
    %379 = cast(%var_272, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
    %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
    %381 = cast(%378, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
    %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %383 = mod(%381, %382) /* ty=Tensor[(15, ?, 12), float32] */;
    %384 = cast(%383, dtype="float64") /* ty=Tensor[(15, ?, 12), float64] */;
    %385 = cast(%var_317, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
    %386 = %376.1;
    %387 = floor_mod(%384, %385) /* ty=Tensor[(15, 9, 12), float64] */;
    (%373, meta[relay.Constant][17] /* ty=Tensor[(140), uint8] */, %386, %387)
  };
  %388(%var_323, %var_324) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */
}

def @func_6210() -> (Tensor[(2, 8, 3), float32],) {
  %391 = fn () -> (Tensor[(2, 8, 3), float32],) {
    %389 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
    %390 = %389.0;
    (%390,)
  };
  %391() /* ty=(Tensor[(2, 8, 3), float32],) */
}

def @func_7613(%var_7609: Tensor[(350), int16], %var_7610: Tensor[(1200), float64], %var_7611: Tensor[(33), float64], %var_7612: Tensor[(4), float64]) -> (Tensor[(4, 5, 7), float32], Tensor[(9, 9, 8), uint16], Tensor[(648, 1), float32], Tensor[(4, 5, 7), float32], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32]) {
  @func_7607(%var_7609, %var_7610, %var_7611, %var_7612) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(9, 9, 8), uint16], Tensor[(648, 1), float32], Tensor[(4, 5, 7), float32], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32]) */
}

def @func_6101() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %392 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %393 = @func_5390() /* ty=(Tensor[(1620), float32],) */;
  %394 = %392.0;
  %395 = %393.0;
  (%394, %395)
}

def @func_3198() -> Tensor[(1620), float32] {
  %396 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %396.0
}

def @func_4880() -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) {
  %402 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) {
    %397 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
    %398 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
    %399 = @func_4228() /* ty=Tensor[(1620), float32] */;
    %400 = %397.0;
    %401 = %398.2;
    (%399, %400, %401)
  };
  %402() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */
}

def @func_4100(%var_4081: Tensor[(5, 11, 15), int8], %var_4082: Tensor[(5, 11, 15), int8], %var_4095: Tensor[(5, 11, 15), int8]) -> (Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) {
  %403 = cast(%var_4082, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %404 = shape_of(%var_4081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_4081, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = cast(%var_4095, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %408 = shape_of(%var_4081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_4081, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %411 = equal(%405, %406) /* ty=Tensor[(5, 11, 15), bool] */;
  %412 = @func_3365() /* ty=Tensor[(1620), float32] */;
  %413 = not_equal(%409, %410) /* ty=Tensor[(5, 11, 15), bool] */;
  (%411, %412, %413)
}

def @func_2788() -> (Tensor[(1620), float32],) {
  %414 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %415 = %414.3;
  (%415,)
}

def @func_7853(%var_7834: Tensor[(4), float64], %var_7835: Tensor[(1, 240), bool]) -> (Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) {
  %416 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %417 = %416.0;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %419 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %420 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %421 = reshape(%419, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), uint8] */;
  %422 = reshape(%420, newshape=[3, 16, 12]) /* ty=Tensor[(3, 16, 12), uint8] */;
  %423 = @func_7469(%421, %422) /* ty=(Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) */;
  %424 = cast(meta[relay.Constant][19] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %425 = cast(meta[relay.Constant][19] /* ty=Tensor[(648), float32] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %426 = cast(meta[relay.Constant][19] /* ty=Tensor[(648), float32] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %427 = reshape(%424, newshape=[6, 108]) /* ty=Tensor[(6, 108), float32] */;
  %428 = reshape(%425, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %429 = reshape(%426, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %430 = @func_7325(%427, %428, %429) /* ty=(Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) */;
  %431 = cast(%var_7834, dtype="float64") /* ty=Tensor[(4), float64] */;
  %432 = cast(%var_7835, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %433 = reshape(%431, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %434 = reshape(%432, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %435 = @func_4816(%433, %434) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) */;
  %436 = acosh(%418) /* ty=Tensor[(1620), float32] */;
  %437 = %423.0;
  %438 = %430.0;
  %439 = %435.6;
  (%436, %437, meta[relay.Constant][18] /* ty=Tensor[(576), uint8] */, %438, meta[relay.Constant][19] /* ty=Tensor[(648), float32] */, %439, %var_7834, %var_7835)
}

def @func_6928() -> (Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) {
  @func_6926() /* ty=(Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) */
}

def @func_5608() -> Tensor[(1620), float32] {
  @func_5606() /* ty=Tensor[(1620), float32] */
}

def @func_8343(%var_8341: Tensor[(825), int8]) -> (Tensor[(1620), float32], Tensor[(5, 11, 15), bool], Tensor[(825), int8]) {
  @func_8340(%var_8341) /* ty=(Tensor[(1620), float32], Tensor[(5, 11, 15), bool], Tensor[(825), int8]) */
}

def @func_7690() -> (Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %450 = fn () -> (Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
    %440 = @func_5045() /* ty=(Tensor[(1620), float32],) */;
    %441 = %440.0;
    %442 = cast(meta[relay.Constant][20] /* ty=Tensor[(1620), float32] */, dtype="bool") /* ty=Tensor[(1620), bool] */;
    %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(1), int32] */;
    %444 = cast(%441, dtype="bool") /* ty=Tensor[(1620), bool] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?), bool] */;
    %446 = @func_3522() /* ty=(Tensor[(1620), float32],) */;
    %447 = less(%444, %445) /* ty=Tensor[(1620), bool] */;
    %448 = %446.0;
    %449 = @func_7640() /* ty=Tensor[(1620), float32] */;
    (%447, %448, %449)
  };
  %450() /* ty=(Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_8781() -> (Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) {
  %451 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %452 = %451.0;
  %453 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  (%452, %453)
}

def @func_5215() -> (Tensor[(1620), float32],) {
  %455 = fn () -> (Tensor[(1620), float32],) {
    %454 = @func_3365() /* ty=Tensor[(1620), float32] */;
    (%454,)
  };
  %455() /* ty=(Tensor[(1620), float32],) */
}

def @func_4743() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */
}

def @func_9112(%var_9092: Tensor[(60), int8], %var_9098: Tensor[(300, 4), float64]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(300, 4), float64], Tensor[(1, 33), float64], Tensor[(2, 2), float64], Tensor[(180), float32]) {
  %456 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %457 = cast(%var_9092, dtype="int8") /* ty=Tensor[(60), int8] */;
  %458 = cast(%var_9092, dtype="int8") /* ty=Tensor[(60), int8] */;
  %459 = reshape(%457, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %460 = reshape(%458, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %461 = @func_5286(%459, %460) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %462 = cast(meta[relay.Constant][21] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %463 = cast(meta[relay.Constant][21] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %464 = cast(%var_9098, dtype="float64") /* ty=Tensor[(300, 4), float64] */;
  %465 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %466 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2), float64] */;
  %467 = cast(meta[relay.Constant][24] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %468 = reshape(%462, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %469 = reshape(%463, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %470 = reshape(%464, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %471 = reshape(%465, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %472 = reshape(%466, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %473 = reshape(%467, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %474 = @func_6270(%468, %469, %470, %471, %472, %473) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
  %475 = %456.1;
  %476 = %461.0;
  %477 = %474.3;
  (%475, %476, %var_9092, %477, meta[relay.Constant][21] /* ty=Tensor[(350), int16] */, %var_9098, meta[relay.Constant][22] /* ty=Tensor[(1, 33), float64] */, meta[relay.Constant][23] /* ty=Tensor[(2, 2), float64] */, meta[relay.Constant][24] /* ty=Tensor[(180), float32] */)
}

def @func_9322() -> Tensor[(1620), float32] {
  %479 = fn () -> Tensor[(1620), float32] {
    %478 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
    %478.0
  };
  %479() /* ty=Tensor[(1620), float32] */
}

def @func_9798() -> (Tensor[(1620), float32],) {
  %482 = fn () -> (Tensor[(1620), float32],) {
    %480 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
    %481 = %480.0;
    (%481,)
  };
  %482() /* ty=(Tensor[(1620), float32],) */
}

def @func_9849(%var_9836: Tensor[(1, 13, 8), float64]) -> (Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) {
  %483 = cast(%var_9836, dtype="float64") /* ty=Tensor[(1, 13, 8), float64] */;
  %484 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %485 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %486 = reshape(%484, newshape=[9, 4, 4]) /* ty=Tensor[(9, 4, 4), float32] */;
  %487 = reshape(%485, newshape=[9, 4, 4]) /* ty=Tensor[(9, 4, 4), float32] */;
  %488 = @func_7027(%486, %487) /* ty=(Tensor[(9, 4, 4), float32], Tensor[(15, 9, 14), float32], Tensor[(1890), float32]) */;
  %489 = log10(%483) /* ty=Tensor[(1, 13, 8), float64] */;
  %490 = %488.2;
  (%489, %490, meta[relay.Constant][25] /* ty=Tensor[(144), float32] */)
}

def @func_3933() -> (Tensor[(1620), float32],) {
  @func_3931() /* ty=(Tensor[(1620), float32],) */
}

def @func_5985() -> (Tensor[(2, 8, 3), float32],) {
  @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */
}

def @func_9021() -> (Tensor[(1620), float32],) {
  %492 = fn () -> (Tensor[(1620), float32],) {
    %491 = @func_2988() /* ty=Tensor[(1620), float32] */;
    (%491,)
  };
  %492() /* ty=(Tensor[(1620), float32],) */
}

def @func_10341(%var_10303: Tensor[(648), float32]) -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) {
  %493 = @func_8781() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(4, 5, 7), uint8]) */;
  %494 = @func_9175() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %495 = cast(%var_10303, dtype="float32") /* ty=Tensor[(648), float32] */;
  %496 = cast(%var_10303, dtype="float64") /* ty=Tensor[(648), float64] */;
  %497 = cast(%var_10303, dtype="float64") /* ty=Tensor[(648), float64] */;
  %498 = reshape(%495, newshape=[6, 108]) /* ty=Tensor[(6, 108), float32] */;
  %499 = reshape(%496, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %500 = reshape(%497, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float64] */;
  %501 = @func_7325(%498, %499, %500) /* ty=(Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) */;
  %502 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %503 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %504 = reshape(%502, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %505 = reshape(%503, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %506 = @func_4816(%504, %505) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) */;
  %507 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %508 = %493.0;
  %509 = %494.1;
  %510 = %501.3;
  %511 = %506.0;
  %512 = %507.0;
  (%508, %509, %510, %var_10303, %511, meta[relay.Constant][26] /* ty=Tensor[(1, 4), float64] */, meta[relay.Constant][27] /* ty=Tensor[(240), bool] */, %512)
}

def @func_5709(%var_5708: Tensor[(648), float32]) -> (Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
  %518 = fn (%var_5702: Tensor[(648), float32]) -> (Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
    %513 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
    %514 = cast(%var_5702, dtype="float32") /* ty=Tensor[(648), float32] */;
    %515 = reshape(%514, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
    %516 = %513.0;
    %517 = @func_1894(%515) /* ty=Tensor[(9, 9, 8), uint16] */;
    (%516, %517, %var_5702)
  };
  %518(%var_5708) /* ty=(Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */
}

def @func_8297(%var_8295: Tensor[(4, 12), float64]) -> (Tensor[(180), float32], Tensor[(1620), float32], Tensor[(4, 12), float64], Tensor[(4), float64]) {
  @func_8294(%var_8295) /* ty=(Tensor[(180), float32], Tensor[(1620), float32], Tensor[(4, 12), float64], Tensor[(4), float64]) */
}

def @func_8669() -> (Tensor[(1620), float32],) {
  %521 = fn () -> (Tensor[(1620), float32],) {
    %519 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
    %520 = %519.0;
    (%520,)
  };
  %521() /* ty=(Tensor[(1620), float32],) */
}

def @func_10958() -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
  %530 = fn () -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) {
    %522 = @func_4035() /* ty=(Tensor[(180), float32],) */;
    %523 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %524 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %525 = reshape(%523, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
    %526 = reshape(%524, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
    %527 = @func_519(%525, %526) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
    %528 = %522.0;
    %529 = %527.0;
    (%528, %529, meta[relay.Constant][28] /* ty=Tensor[(48), float64] */)
  };
  %530() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(48), float64]) */
}

def @func_7607(%var_7596: Tensor[(350), int16], %var_7597: Tensor[(1200), float64], %var_7598: Tensor[(33), float64], %var_7599: Tensor[(4), float64]) -> (Tensor[(4, 5, 7), float32], Tensor[(9, 9, 8), uint16], Tensor[(648, 1), float32], Tensor[(4, 5, 7), float32], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32]) {
  %531 = cast(meta[relay.Constant][29] /* ty=Tensor[(648, 1), float32] */, dtype="float32") /* ty=Tensor[(648, 1), float32] */;
  %532 = reshape(%531, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %533 = @func_5707(%532) /* ty=(Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */;
  %534 = cast(%var_7596, dtype="int16") /* ty=Tensor[(350), int16] */;
  %535 = cast(%var_7596, dtype="int16") /* ty=Tensor[(350), int16] */;
  %536 = cast(%var_7597, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %537 = cast(%var_7598, dtype="float64") /* ty=Tensor[(33), float64] */;
  %538 = cast(%var_7599, dtype="float64") /* ty=Tensor[(4), float64] */;
  %539 = cast(meta[relay.Constant][30] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %540 = reshape(%534, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %541 = reshape(%535, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
  %542 = reshape(%536, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %543 = reshape(%537, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %544 = reshape(%538, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %545 = reshape(%539, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %546 = @func_6270(%540, %541, %542, %543, %544, %545) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
  %547 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
  %548 = %533.1;
  %549 = %546.1;
  (%547, %548, meta[relay.Constant][29] /* ty=Tensor[(648, 1), float32] */, %549, %var_7596, %var_7597, %var_7598, %var_7599, meta[relay.Constant][30] /* ty=Tensor[(180), float32] */)
}

def @func_10922(%var_10916: Tensor[(324, 2), float32]) -> (Tensor[(2, 8, 3), float64], Tensor[(240), bool], Tensor[(324, 2), float64]) {
  %550 = @func_10077() /* ty=Tensor[(2, 8, 3), float32] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(2, 8, 3), float64] */;
  %552 = cast(%var_10916, dtype="float32") /* ty=Tensor[(324, 2), float32] */;
  %553 = reshape(%552, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %554 = @func_10341(%553) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) */;
  %555 = cast(%var_10916, dtype="float64") /* ty=Tensor[(324, 2), float64] */;
  %556 = erf(%551) /* ty=Tensor[(2, 8, 3), float64] */;
  %557 = %554.6;
  %558 = acosh(%555) /* ty=Tensor[(324, 2), float64] */;
  (%556, %557, %558)
}

def @func_6241(%var_6240: Tensor[(10, 1, 6), bool]) -> (Tensor[(10, 10, 6), bool], Tensor[(10, 1, 6), float32]) {
  %564 = fn (%var_6220: Tensor[(10, 1, 6), bool]) -> (Tensor[(10, 10, 6), bool], Tensor[(10, 1, 6), float32]) {
    %559 = cast(%var_6220, dtype="bool") /* ty=Tensor[(10, 1, 6), bool] */;
    %560 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 10, 6), bool] */, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
    %561 = cast(%var_6220, dtype="float32") /* ty=Tensor[(10, 1, 6), float32] */;
    %562 = logical_or(%559, %560) /* ty=Tensor[(10, 10, 6), bool] */;
    %563 = log(%561) /* ty=Tensor[(10, 1, 6), float32] */;
    (%562, %563)
  };
  %564(%var_6240) /* ty=(Tensor[(10, 10, 6), bool], Tensor[(10, 1, 6), float32]) */
}

def @func_8970() -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_8968() /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_10147() -> Tensor[(1620), float32] {
  %565 = fn () -> Tensor[(1620), float32] {
    @func_4228() /* ty=Tensor[(1620), float32] */
  };
  %565() /* ty=Tensor[(1620), float32] */
}

def @func_2693() -> (Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) {
  %566 = cast(meta[relay.Constant][32] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %567 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 1, 7), uint32] */, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %568 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %569 = cast(meta[relay.Constant][35] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %570 = reshape(%568, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %571 = reshape(%569, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %572 = @func_322(%570, %571) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %573 = left_shift(%566, %567) /* ty=Tensor[(2, 1, 7), uint32] */;
  %574 = %572.0;
  (%573, %574, meta[relay.Constant][34] /* ty=Tensor[(180), float32] */, meta[relay.Constant][35] /* ty=Tensor[(1620), float32] */)
}

def @func_3665() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %575 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %576 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %577 = %575.0;
  %578 = %576.3;
  (%577, %578)
}

def @func_10004() -> (Tensor[(1620), float32],) {
  @func_10002() /* ty=(Tensor[(1620), float32],) */
}

def @func_9945(%var_9944: Tensor[(104), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1890), float32], Tensor[(104), float64], Tensor[(1620), float32]) {
  %594 = fn (%var_9926: Tensor[(104), float64]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1890), float32], Tensor[(104), float64], Tensor[(1620), float32]) {
    %579 = @func_9797() /* ty=(Tensor[(1620), float32],) */;
    %580 = @func_7516() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %581 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
    %582 = @func_8668() /* ty=(Tensor[(1620), float32],) */;
    %583 = cast(%var_9926, dtype="float64") /* ty=Tensor[(104), float64] */;
    %584 = reshape(%583, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), float64] */;
    %585 = @func_9849(%584) /* ty=(Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) */;
    %586 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
    %587 = %579.0;
    %588 = %580.1;
    %589 = @func_4228() /* ty=Tensor[(1620), float32] */;
    %590 = %581.0;
    %591 = %582.0;
    %592 = %585.1;
    %593 = %586.0;
    (%587, %588, %589, %590, %591, %592, %var_9926, %593)
  };
  %594(%var_9944) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1890), float32], Tensor[(104), float64], Tensor[(1620), float32]) */
}

def @func_11123(%var_11121: Tensor[(9, 9, 10), float32], %var_11122: Tensor[(6, 30), float32]) -> (Tensor[(9, 9, 10), float32], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(6, 30), float32], Tensor[(1620), float64], Tensor[(4, 5, 7), float32]) {
  %614 = fn (%var_11074: Tensor[(9, 9, 10), float32], %var_11082: Tensor[(6, 30), float32]) -> (Tensor[(9, 9, 10), float32], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(6, 30), float32], Tensor[(1620), float64], Tensor[(4, 5, 7), float32]) {
    %595 = cast(%var_11074, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
    %596 = cast(meta[relay.Constant][36] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %597 = cast(meta[relay.Constant][36] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %598 = cast(meta[relay.Constant][37] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %599 = cast(meta[relay.Constant][38] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %600 = cast(meta[relay.Constant][39] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %601 = cast(%var_11082, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
    %602 = reshape(%596, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
    %603 = reshape(%597, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), int16] */;
    %604 = reshape(%598, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %605 = reshape(%599, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %606 = reshape(%600, newshape=[4]) /* ty=Tensor[(4), float64] */;
    %607 = reshape(%601, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %608 = @func_6270(%602, %603, %604, %605, %606, %607) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */;
    %609 = @func_6926() /* ty=(Tensor[(1620), float64], Tensor[(4, 5, 7), float32], Tensor[(140), uint8]) */;
    %610 = cosh(%595) /* ty=Tensor[(9, 9, 10), float32] */;
    %611 = %608.3;
    %612 = @func_9552() /* ty=Tensor[(1620), float64] */;
    %613 = %609.1;
    (%610, %611, meta[relay.Constant][36] /* ty=Tensor[(350), int16] */, meta[relay.Constant][37] /* ty=Tensor[(1200), float64] */, meta[relay.Constant][38] /* ty=Tensor[(33), float64] */, meta[relay.Constant][39] /* ty=Tensor[(4), float64] */, %var_11082, %612, %613)
  };
  %614(%var_11121, %var_11122) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(1, 3, 11), float64], Tensor[(350), int16], Tensor[(1200), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(6, 30), float32], Tensor[(1620), float64], Tensor[(4, 5, 7), float32]) */
}

def @func_4578() -> (Tensor[(1620), float64],) {
  %619 = fn () -> (Tensor[(1620), float64],) {
    %615 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %616 = %615.3;
    %617 = cast(%616, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %618 = asinh(%617) /* ty=Tensor[(1620), float64] */;
    (%618,)
  };
  %619() /* ty=(Tensor[(1620), float64],) */
}

def @func_3291() -> (Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_1426(%var_1425: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
  %622 = fn (%var_1402: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
    %620 = cast(%var_1402, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
    %621 = acosh(%620) /* ty=Tensor[(4, 10, 5), float64] */;
    (%621,)
  };
  %622(%var_1425) /* ty=(Tensor[(4, 10, 5), float64],) */
}

def @func_10077() -> Tensor[(2, 8, 3), float32] {
  %623 = @func_5983() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %623.0
}

def @func_2769(%var_2768: Tensor[(1620), float32]) -> Tensor[(1620), float32] {
  %630 = fn (%var_2762: Tensor[(1620), float32]) -> Tensor[(1620), float32] {
    %624 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
    %625 = %624.3;
    %626 = cast(%var_2762, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(1), int32] */;
    %628 = cast(%625, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?), float32] */;
    minimum(%628, %629) /* ty=Tensor[(1620), float32] */
  };
  %630(%var_2768) /* ty=Tensor[(1620), float32] */
}

def @func_7999(%var_7997: Tensor[(2, 8, 3), float64], %var_7998: Tensor[(4), float64]) -> (Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) {
  %644 = fn (%var_7967: Tensor[(2, 8, 3), float64], %var_7979: Tensor[(4), float64]) -> (Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) {
    %631 = @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
    %632 = %631.3;
    %633 = cast(%var_7967, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
    %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %635 = cast(%632, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
    %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %637 = cast(%var_7979, dtype="float64") /* ty=Tensor[(4), float64] */;
    %638 = cast(meta[relay.Constant][40] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %639 = reshape(%637, newshape=[4]) /* ty=Tensor[(4), float64] */;
    %640 = reshape(%638, newshape=[1, 240]) /* ty=Tensor[(1, 240), bool] */;
    %641 = @func_7853(%639, %640) /* ty=(Tensor[(1620), float32], Tensor[(3, 16, 12), bool], Tensor[(576), uint8], Tensor[(1620), float32], Tensor[(648), float32], Tensor[(240), bool], Tensor[(4), float64], Tensor[(1, 240), bool]) */;
    %642 = logical_and(%635, %636) /* ty=Tensor[(2, 8, 3), bool] */;
    %643 = %641.0;
    (%642, %643, %var_7979, meta[relay.Constant][40] /* ty=Tensor[(240), bool] */)
  };
  %644(%var_7997, %var_7998) /* ty=(Tensor[(2, 8, 3), bool], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(240), bool]) */
}

def @func_10079() -> Tensor[(2, 8, 3), float32] {
  @func_10077() /* ty=Tensor[(2, 8, 3), float32] */
}

def @func_1048(%var_1046: Tensor[(1, 3, 16), bool], %var_1047: Tensor[(5, 3, 16), bool]) -> (Tensor[(5, 3, 16), bool],) {
  @func_1044(%var_1046, %var_1047) /* ty=(Tensor[(5, 3, 16), bool],) */
}

def @func_5290(%var_5288: Tensor[(3, 4, 5), int8], %var_5289: Tensor[(3, 4, 5), int8]) -> (Tensor[(3, 4, 5), int8],) {
  @func_5286(%var_5288, %var_5289) /* ty=(Tensor[(3, 4, 5), int8],) */
}

def @func_4819(%var_4817: Tensor[(4), float64], %var_4818: Tensor[(240), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) {
  %670 = fn (%var_4769: Tensor[(4), float64], %var_4772: Tensor[(240), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) {
    %645 = @func_4741() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
    %646 = cast(%var_4769, dtype="float64") /* ty=Tensor[(4), float64] */;
    %647 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %649 = cast(%var_4772, dtype="bool") /* ty=Tensor[(240), bool] */;
    %650 = reshape(%646, newshape=[4]) /* ty=Tensor[(4), float64] */;
    %651 = reshape(%647, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %652 = reshape(%648, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %653 = reshape(%649, newshape=[240]) /* ty=Tensor[(240), bool] */;
    %654 = @func_3487(%650, %651, %652, %653) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) */;
    %655 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %656 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %657 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %658 = %657.1;
    %659 = cast(%658, dtype="float64") /* ty=Tensor[(48), float64] */;
    %660 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), bool] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %661 = reshape(%659, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
    %662 = reshape(%660, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
    %663 = @func_519(%661, %662) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(2, 8, 3), float64]) */;
    %664 = %645.0;
    %665 = @func_4228() /* ty=Tensor[(1620), float32] */;
    %666 = %654.2;
    %667 = %655.7;
    %668 = %656.1;
    %669 = %663.1;
    (%664, %665, %666, %var_4769, meta[relay.Constant][41] /* ty=Tensor[(180), float32] */, meta[relay.Constant][42] /* ty=Tensor[(48), bool] */, %var_4772, %667, %668, %658, %669)
  };
  %670(%var_4817, %var_4818) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(8, 15, 3), uint16], Tensor[(4), float64], Tensor[(180), float32], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(2, 8, 3), float64]) */
}

def @func_1044(%var_1039: Tensor[(1, 3, 16), bool], %var_1040: Tensor[(5, 3, 16), bool]) -> (Tensor[(5, 3, 16), bool],) {
  %671 = cast(%var_1039, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %672 = cast(%var_1040, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %673 = logical_or(%671, %672) /* ty=Tensor[(5, 3, 16), bool] */;
  (%673,)
}

def @func_6511(%var_6504: Tensor[(176), float64], %var_6507: Tensor[(4), float64], %var_6509: Tensor[(240), bool]) -> (Tensor[(2, 8, 3), float32], Tensor[(11, 1, 16), float64], Tensor[(176), float64], Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(240), bool]) {
  %674 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %675 = cast(%var_6504, dtype="float64") /* ty=Tensor[(176), float64] */;
  %676 = reshape(%675, newshape=[11, 1, 16]) /* ty=Tensor[(11, 1, 16), float64] */;
  %677 = @func_5866(%676) /* ty=(Tensor[(11, 1, 16), float64],) */;
  %678 = cast(%var_6507, dtype="float64") /* ty=Tensor[(4), float64] */;
  %679 = cast(meta[relay.Constant][43] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %680 = %674.0;
  %681 = cast(%680, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %682 = cast(%var_6509, dtype="bool") /* ty=Tensor[(240), bool] */;
  %683 = reshape(%678, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %684 = reshape(%679, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %685 = reshape(%681, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %686 = reshape(%682, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %687 = @func_3487(%683, %684, %685, %686) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(200, 1), float64], Tensor[(8, 15, 3), uint16], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(2, 2, 240), bool], Tensor[(4), float64], Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(8, 15, 3), float32]) */;
  %688 = %677.0;
  %689 = %687.5;
  (%680, %688, %var_6504, %689, %var_6507, meta[relay.Constant][43] /* ty=Tensor[(180), float32] */, %var_6509)
}

def @func_3577() -> Tensor[(4, 5, 7), uint8] {
  %690 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %690.1
}

def @func_7325(%var_7282: Tensor[(6, 108), float32], %var_7289: Tensor[(9, 9, 8), float64], %var_7305: Tensor[(9, 9, 8), float64]) -> (Tensor[(1620), float32], Tensor[(6, 108), float32], Tensor[(9, 9, 8), bool], Tensor[(9, 9, 8), uint16]) {
  %691 = @func_5214() /* ty=(Tensor[(1620), float32],) */;
  %692 = cast(%var_7282, dtype="float32") /* ty=Tensor[(6, 108), float32] */;
  %693 = reshape(%692, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %694 = @func_1894(%693) /* ty=Tensor[(9, 9, 8), uint16] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(9, 9, 8), float64] */;
  %696 = log10(%695) /* ty=Tensor[(9, 9, 8), float64] */;
  %697 = cast(%var_7289, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = cast(%var_7305, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %702 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%696, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %705 = %691.0;
  %706 = equal(%699, %700) /* ty=Tensor[(9, 9, 8), bool] */;
  %707 = bitwise_xor(%703, %704) /* ty=Tensor[(9, 9, 8), uint16] */;
  (%705, %var_7282, %706, %707)
}

def @func_4462(%var_4424: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4), float64], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1, 180), float32]) {
  %708 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %709 = cast(meta[relay.Constant][44] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %711 = cast(%708, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), float32] */;
  %713 = cast(meta[relay.Constant][44] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %714 = reshape(%713, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %715 = @func_2813(%714) /* ty=(Tensor[(1620), float32],) */;
  %716 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %717 = cast(meta[relay.Constant][45] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %718 = cast(%var_4424, dtype="float32") /* ty=Tensor[(180), float32] */;
  %719 = reshape(%717, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
  %720 = reshape(%718, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %721 = @func_1243(%719, %720) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
  %722 = %721.4;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %724 = floor_divide(%711, %712) /* ty=Tensor[(1620), float32] */;
  %725 = %715.0;
  %726 = %716.0;
  %727 = atan(%723) /* ty=Tensor[(1, 180), float32] */;
  (%724, meta[relay.Constant][45] /* ty=Tensor[(4), float64] */, %var_4424, %725, %726, %727)
}

def @func_9425() -> Tensor[(4, 5, 7), uint8] {
  @func_9423() /* ty=Tensor[(4, 5, 7), uint8] */
}

def @func_11023() -> (Tensor[(1620), int64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) {
  @func_11021() /* ty=(Tensor[(1620), int64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32]) */
}

def @func_8340(%var_8327: Tensor[(825), int8]) -> (Tensor[(1620), float32], Tensor[(5, 11, 15), bool], Tensor[(825), int8]) {
  %728 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %729 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %730 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %731 = cast(%var_8327, dtype="int8") /* ty=Tensor[(825), int8] */;
  %732 = reshape(%729, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %733 = reshape(%730, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %734 = reshape(%731, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
  %735 = @func_4100(%732, %733, %734) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) */;
  %736 = %728.1;
  %737 = %735.0;
  (%736, %737, %var_8327)
}

def @func_2839() -> (Tensor[(1620), float32],) {
  @func_2837() /* ty=(Tensor[(1620), float32],) */
}

def @func_9553() -> Tensor[(1620), float64] {
  %738 = fn () -> Tensor[(1620), float64] {
    @func_9393() /* ty=Tensor[(1620), float64] */
  };
  %738() /* ty=Tensor[(1620), float64] */
}

def @func_5316() -> (Tensor[(1620), float32],) {
  @func_5314() /* ty=(Tensor[(1620), float32],) */
}

def @func_5866(%var_5847: Tensor[(11, 1, 16), float64]) -> (Tensor[(11, 1, 16), float64],) {
  %739 = cast(%var_5847, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %740 = log2(%739) /* ty=Tensor[(11, 1, 16), float64] */;
  (%740,)
}

def @func_6580() -> Tensor[(1620), float32] {
  @func_6578() /* ty=Tensor[(1620), float32] */
}

def @func_11256() -> Tensor[(1620), float32] {
  %742 = fn () -> Tensor[(1620), float32] {
    %741 = @func_9599() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %741.0
  };
  %742() /* ty=Tensor[(1620), float32] */
}

def @func_1896(%var_1895: Tensor[(9, 9, 8), float32]) -> Tensor[(9, 9, 8), uint16] {
  %751 = fn (%var_1855: Tensor[(9, 9, 8), float32]) -> Tensor[(9, 9, 8), uint16] {
    %743 = cast(%var_1855, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
    %744 = sqrt(%743) /* ty=Tensor[(9, 9, 8), float32] */;
    %745 = cast(%744, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
    %746 = log2(%745) /* ty=Tensor[(9, 9, 8), float32] */;
    %747 = cast(%746, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
    %748 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(%744, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    logical_xor(%749, %750) /* ty=Tensor[(9, 9, 8), uint16] */
  };
  %751(%var_1895) /* ty=Tensor[(9, 9, 8), uint16] */
}

def @func_5686(%var_5684: Tensor[(15, 1, 13), float32], %var_5685: Tensor[(15, 6, 13), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(825), int8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(15, 6, 13), bool], Tensor[(180), float32]) {
  %772 = fn (%var_5609: Tensor[(15, 1, 13), float32], %var_5663: Tensor[(15, 6, 13), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(825), int8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(15, 6, 13), bool], Tensor[(180), float32]) {
    %752 = cast(meta[relay.Constant][46] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
    %753 = cast(meta[relay.Constant][46] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
    %754 = cast(meta[relay.Constant][46] /* ty=Tensor[(825), int8] */, dtype="int8") /* ty=Tensor[(825), int8] */;
    %755 = reshape(%752, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
    %756 = reshape(%753, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
    %757 = reshape(%754, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), int8] */;
    %758 = @func_4100(%755, %756, %757) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) */;
    %759 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
    %760 = cast(%var_5609, dtype="float32") /* ty=Tensor[(15, 1, 13), float32] */;
    %761 = sin(%760) /* ty=Tensor[(15, 1, 13), float32] */;
    %762 = cast(%761, dtype="bool") /* ty=Tensor[(15, 1, 13), bool] */;
    %763 = cast(%var_5663, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
    %764 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %765 = @func_4228() /* ty=Tensor[(1620), float32] */;
    %766 = %758.1;
    %767 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
    %768 = %759.0;
    %769 = @func_2988() /* ty=Tensor[(1620), float32] */;
    %770 = logical_or(%762, %763) /* ty=Tensor[(15, 6, 13), bool] */;
    %771 = %764.3;
    (%765, %766, meta[relay.Constant][46] /* ty=Tensor[(825), int8] */, %767, %768, %769, %770, %771)
  };
  %772(%var_5684, %var_5685) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(825), int8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(15, 6, 13), bool], Tensor[(180), float32]) */
}

def @func_4741() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %773 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %774 = @func_3931() /* ty=(Tensor[(1620), float32],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %777 = log10(%776) /* ty=Tensor[(1620), float32] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %779 = %773.6;
  %780 = acos(%778) /* ty=Tensor[(1620), float64] */;
  (%779, %780)
}

def @func_2642(%var_2593: Tensor[(1, 3, 11), float64], %var_2616: Tensor[(1, 4), float64], %var_2617: Tensor[(6, 30), float32], %var_2620: Tensor[(1, 3, 11), float64], %var_2631: Tensor[(16, 3, 11), float32]) -> (Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) {
  %781 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 4), uint8] */, dtype="uint8") /* ty=Tensor[(35, 4), uint8] */;
  %782 = reshape(%781, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %783 = @func_214(%782) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */;
  %784 = %783.0;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %786 = cast(%var_2616, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %787 = cast(%var_2617, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %788 = reshape(%786, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float64] */;
  %789 = reshape(%787, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %790 = @func_1243(%788, %789) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */;
  %791 = cast(%var_2593, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %792 = sinh(%791) /* ty=Tensor[(1, 3, 11), float64] */;
  %793 = cast(%var_2620, dtype="uint8") /* ty=Tensor[(1, 3, 11), uint8] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%792, dtype="uint8") /* ty=Tensor[(1, 3, 11), uint8] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %797 = cast(%792, dtype="float32") /* ty=Tensor[(1, 3, 11), float32] */;
  %798 = erf(%797) /* ty=Tensor[(1, 3, 11), float32] */;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %800 = cast(meta[relay.Constant][48] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %801 = reshape(%800, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), float32] */;
  %802 = cast(%798, dtype="uint16") /* ty=Tensor[(1, 3, 11), uint16] */;
  %803 = cast(%var_2631, dtype="uint16") /* ty=Tensor[(16, 3, 11), uint16] */;
  %804 = asinh(%785) /* ty=Tensor[(4, 5, 7), float32] */;
  %805 = %790.5;
  %806 = bitwise_or(%795, %796) /* ty=Tensor[(?, 3, 11), uint8] */;
  %807 = cos(%799) /* ty=Tensor[(1, 3, 11), float64] */;
  %808 = @func_1894(%801) /* ty=Tensor[(9, 9, 8), uint16] */;
  %809 = subtract(%802, %803) /* ty=Tensor[(16, 3, 11), uint16] */;
  (meta[relay.Constant][47] /* ty=Tensor[(35, 4), uint8] */, %804, %805, %var_2616, %var_2617, %806, %807, %808, meta[relay.Constant][48] /* ty=Tensor[(648), float32] */, %809)
}

def @func_2695() -> (Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) {
  @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */
}

def @func_7640() -> Tensor[(1620), float32] {
  %810 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
  %810.0
}

def @func_2816(%var_2814: Tensor[(1620), float32]) -> (Tensor[(1620), float32],) {
  @func_2813(%var_2814) /* ty=(Tensor[(1620), float32],) */
}

def @func_3931() -> (Tensor[(1620), float32],) {
  %811 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %812 = %811.1;
  (%812,)
}

def @func_6277(%var_6271: Tensor[(14, 5, 5), int16], %var_6272: Tensor[(14, 5, 5), int16], %var_6273: Tensor[(1200), float64], %var_6274: Tensor[(33), float64], %var_6275: Tensor[(4), float64], %var_6276: Tensor[(180), float32]) -> (Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) {
  %836 = fn (%var_6245: Tensor[(14, 5, 5), int16], %var_6246: Tensor[(14, 5, 5), int16], %var_6252: Tensor[(1200), float64], %var_6262: Tensor[(33), float64], %var_6263: Tensor[(4), float64], %var_6264: Tensor[(180), float32]) -> (Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) {
    %813 = cast(%var_6246, dtype="int16") /* ty=Tensor[(14, 5, 5), int16] */;
    %814 = shape_of(%var_6245, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%var_6245, dtype="int16") /* ty=Tensor[(14, 5, 5), int16] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %817 = cast(%var_6252, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %818 = cast(%var_6252, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %819 = reshape(%817, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
    %820 = reshape(%818, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
    %821 = @func_6064(%819, %820) /* ty=(Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(15, 10, 8), float32], Tensor[(15, 10, 8), float32]) */;
    %822 = cast(%var_6262, dtype="float64") /* ty=Tensor[(33), float64] */;
    %823 = cast(%var_6263, dtype="float64") /* ty=Tensor[(4), float64] */;
    %824 = cast(%var_6264, dtype="float32") /* ty=Tensor[(180), float32] */;
    %825 = cast(%var_6262, dtype="float64") /* ty=Tensor[(33), float64] */;
    %826 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
    %827 = reshape(%822, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %828 = reshape(%823, newshape=[1, 4]) /* ty=Tensor[(1, 4), float64] */;
    %829 = reshape(%824, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
    %830 = reshape(%825, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %831 = reshape(%826, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %832 = @func_2642(%827, %828, %829, %830, %831) /* ty=(Tensor[(35, 4), uint8], Tensor[(4, 5, 7), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(6, 30), float32], Tensor[(?, 3, 11), uint8], Tensor[(1, 3, 11), float64], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(16, 3, 11), uint16]) */;
    %833 = maximum(%815, %816) /* ty=Tensor[(14, 5, 5), int16] */;
    %834 = %821.2;
    %835 = %832.6;
    (%833, %834, %var_6252, %835, %var_6262, %var_6263, %var_6264, meta[relay.Constant][49] /* ty=Tensor[(4, 132), float32] */)
  };
  %836(%var_6271, %var_6272, %var_6273, %var_6274, %var_6275, %var_6276) /* ty=(Tensor[(14, 5, 5), int16], Tensor[(4, 5, 7), float32], Tensor[(1200), float64], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(4), float64], Tensor[(180), float32], Tensor[(4, 132), float32]) */
}

def @func_4036() -> (Tensor[(180), float32],) {
  %839 = fn () -> (Tensor[(180), float32],) {
    %837 = @func_2859() /* ty=(Tensor[(180), float32],) */;
    %838 = %837.0;
    (%838,)
  };
  %839() /* ty=(Tensor[(180), float32],) */
}

def @func_4358(%var_4346: Tensor[(4, 5, 7), uint8]) -> (Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) {
  %840 = @func_4035() /* ty=(Tensor[(180), float32],) */;
  %841 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %842 = cast(%var_4346, dtype="int8") /* ty=Tensor[(4, 5, 7), int8] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="int8") /* ty=Tensor[(4, 5, 7), int8] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %846 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %847 = %840.0;
  %848 = left_shift(%844, %845) /* ty=Tensor[(4, 5, 7), int8] */;
  %849 = %846.1;
  (%847, %848, %849)
}

def @func_8968() -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %850 = @func_6209() /* ty=(Tensor[(2, 8, 3), float32],) */;
  %851 = @func_8668() /* ty=(Tensor[(1620), float32],) */;
  %852 = %850.0;
  %853 = @func_7640() /* ty=Tensor[(1620), float32] */;
  %854 = %851.0;
  (%852, %853, %854)
}

def @func_3902() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_6329(%var_6313: Tensor[(140), uint8]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(140), uint8]) {
  %855 = @func_5474() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */;
  %856 = cast(%var_6313, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %857 = reshape(%856, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), uint8] */;
  %858 = @func_4358(%857) /* ty=(Tensor[(180), float32], Tensor[(4, 5, 7), int8], Tensor[(1620), float32]) */;
  %859 = %855.0;
  %860 = %858.2;
  (%859, %860, %var_6313)
}

def @func_9569(%var_9567: Tensor[(6, 12, 6), float64]) -> (Tensor[(6, 12, 6), float64],) {
  @func_9566(%var_9567) /* ty=(Tensor[(6, 12, 6), float64],) */
}

def @func_10111() -> Tensor[(1620), float32] {
  %862 = fn () -> Tensor[(1620), float32] {
    %861 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %861.0
  };
  %862() /* ty=Tensor[(1620), float32] */
}

def @func_4979(%var_4978: Tensor[(15, 9, 14), float32]) -> (Tensor[(15, 9, 14), float32],) {
  %865 = fn (%var_4974: Tensor[(15, 9, 14), float32]) -> (Tensor[(15, 9, 14), float32],) {
    %863 = cast(%var_4974, dtype="float32") /* ty=Tensor[(15, 9, 14), float32] */;
    %864 = log10(%863) /* ty=Tensor[(15, 9, 14), float32] */;
    (%864,)
  };
  %865(%var_4978) /* ty=(Tensor[(15, 9, 14), float32],) */
}

def @func_3039() -> (Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) {
  @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */
}

def @func_5805() -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_5803() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_6404() -> (Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) {
  @func_6402() /* ty=(Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) */
}

def @func_9394() -> Tensor[(1620), float64] {
  %867 = fn () -> Tensor[(1620), float64] {
    %866 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
    %866.0
  };
  %867() /* ty=Tensor[(1620), float64] */
}

def @func_7260(%var_7259: Tensor[(12, 10, 12), uint32]) -> Tensor[(12, 10, 12), uint32] {
  %870 = fn (%var_7244: Tensor[(12, 10, 12), uint32]) -> Tensor[(12, 10, 12), uint32] {
    %868 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 10, 1), uint32] */, dtype="uint32") /* ty=Tensor[(12, 10, 1), uint32] */;
    %869 = cast(%var_7244, dtype="uint32") /* ty=Tensor[(12, 10, 12), uint32] */;
    add(%868, %869) /* ty=Tensor[(12, 10, 12), uint32] */
  };
  %870(%var_7259) /* ty=Tensor[(12, 10, 12), uint32] */
}

def @func_5161() -> (Tensor[(1620), float64],) {
  @func_5159() /* ty=(Tensor[(1620), float64],) */
}

def @func_1247(%var_1245: Tensor[(2, 2, 1), float64], %var_1246: Tensor[(1, 180), float32]) -> (Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) {
  @func_1243(%var_1245, %var_1246) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) */
}

def @func_5983() -> (Tensor[(2, 8, 3), float32],) {
  %871 = @func_5443() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="float32") /* ty=Tensor[(2, 8, 3), float32] */;
  %874 = atan(%873) /* ty=Tensor[(2, 8, 3), float32] */;
  (%874,)
}

def @func_3365() -> Tensor[(1620), float32] {
  %875 = @func_3289() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(48), float64], Tensor[(2, ?, 7), bool], Tensor[(180), float32], Tensor[(4, 5, 7), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %875.6
}

def @func_7472(%var_7470: Tensor[(3, 16, 12), uint8], %var_7471: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) {
  %887 = fn (%var_7419: Tensor[(3, 16, 12), uint8], %var_7420: Tensor[(3, 16, 12), uint8]) -> (Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) {
    %876 = cast(%var_7420, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
    %877 = shape_of(%var_7419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%var_7419, dtype="uint8") /* ty=Tensor[(3, 16, 12), uint8] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %880 = maximum(%878, %879) /* ty=Tensor[(3, 16, 12), uint8] */;
    %881 = cast(%880, dtype="bool") /* ty=Tensor[(3, 16, 12), bool] */;
    %882 = shape_of(%var_7419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%var_7419, dtype="bool") /* ty=Tensor[(3, 16, 12), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = less_equal(%883, %884) /* ty=Tensor[(3, 16, 12), bool] */;
    %886 = @func_3198() /* ty=Tensor[(1620), float32] */;
    (%885, %886)
  };
  %887(%var_7470, %var_7471) /* ty=(Tensor[(3, 16, 12), bool], Tensor[(1620), float32]) */
}

def @func_6578() -> Tensor[(1620), float32] {
  %888 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %888.0
}

def @func_2989() -> Tensor[(1620), float32] {
  %890 = fn () -> Tensor[(1620), float32] {
    %889 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
    %889.0
  };
  %890() /* ty=Tensor[(1620), float32] */
}

def @func_7517() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %895 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
    %891 = @func_3365() /* ty=Tensor[(1620), float32] */;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %893 = reshape(%892, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %894 = @func_2767(%893) /* ty=Tensor[(1620), float32] */;
    (%891, %894)
  };
  %895() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_7128(%var_7127: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
  %904 = fn (%var_7099: Tensor[(180), float32]) -> (Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) {
    %896 = @func_6101() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %897 = cast(%var_7099, dtype="float32") /* ty=Tensor[(180), float32] */;
    %898 = %896.1;
    %899 = cast(%898, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %900 = reshape(%897, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
    %901 = reshape(%899, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
    %902 = @func_322(%900, %901) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
    %903 = %902.0;
    (%898, %903, %var_7099)
  };
  %904(%var_7127) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32]) */
}

def @func_3988() -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) {
  @func_3986() /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), uint8], Tensor[(1620), float64], Tensor[(2, 8, 3), float64], Tensor[(180), float32]) */
}

def @func_9252(%var_9250: Tensor[(5, 2, 8), uint8], %var_9251: Tensor[(48), float64]) -> (Tensor[(5, 2, 8), uint8], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(1620), float32]) {
  %915 = fn (%var_9217: Tensor[(5, 2, 8), uint8], %var_9224: Tensor[(48), float64]) -> (Tensor[(5, 2, 8), uint8], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(1620), float32]) {
    %905 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 2, 8), uint8] */, dtype="uint8") /* ty=Tensor[(5, 2, 8), uint8] */;
    %906 = shape_of(%var_9217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%var_9217, dtype="uint8") /* ty=Tensor[(5, 2, 8), uint8] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %909 = cast(%var_9224, dtype="float64") /* ty=Tensor[(48), float64] */;
    %910 = reshape(%909, newshape=[2, 8, 3]) /* ty=Tensor[(2, 8, 3), float64] */;
    %911 = @func_4693(%910) /* ty=(Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
    %912 = left_shift(%907, %908) /* ty=Tensor[(5, 2, 8), uint8] */;
    %913 = %911.1;
    %914 = @func_3365() /* ty=Tensor[(1620), float32] */;
    (%912, %913, %var_9224, %914)
  };
  %915(%var_9250, %var_9251) /* ty=(Tensor[(5, 2, 8), uint8], Tensor[(1620), float32], Tensor[(48), float64], Tensor[(1620), float32]) */
}

def @func_8497(%var_8467: Tensor[(1620), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), uint8], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %916 = @func_7689() /* ty=(Tensor[(1620), bool], Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %917 = %916.0;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %919 = cast(%var_8467, dtype="uint8") /* ty=Tensor[(1620), uint8] */;
  %920 = shape_of(%917, dtype="int32") /* ty=Tensor[(1), int32] */;
  %921 = cast(%917, dtype="uint8") /* ty=Tensor[(1620), uint8] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %923 = cast(%917, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %924 = reshape(%923, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %925 = @func_2813(%924) /* ty=(Tensor[(1620), float32],) */;
  %926 = tan(%918) /* ty=Tensor[(1620), float32] */;
  %927 = @func_4228() /* ty=Tensor[(1620), float32] */;
  %928 = left_shift(%921, %922) /* ty=Tensor[(1620), uint8] */;
  %929 = @func_6015() /* ty=Tensor[(1620), float32] */;
  %930 = %925.0;
  (%926, %927, %928, %929, %930)
}

def @func_8180() -> Tensor[(4, 12), float64] {
  %932 = fn () -> Tensor[(4, 12), float64] {
    %931 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
    %931.2
  };
  %932() /* ty=Tensor[(4, 12), float64] */
}

def @func_5047() -> (Tensor[(1620), float32],) {
  @func_5045() /* ty=(Tensor[(1620), float32],) */
}

def @func_9852(%var_9850: Tensor[(1, 13, 8), float64]) -> (Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) {
  @func_9849(%var_9850) /* ty=(Tensor[(1, 13, 8), float64], Tensor[(1890), float32], Tensor[(144), float32]) */
}

def @func_8695() -> (Tensor[(180), float32],) {
  %935 = fn () -> (Tensor[(180), float32],) {
    %933 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
    %934 = %933.0;
    (%934,)
  };
  %935() /* ty=(Tensor[(180), float32],) */
}

def @func_5045() -> (Tensor[(1620), float32],) {
  %936 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%936,)
}

def @func_5061() -> (Tensor[(2, 1, 7), uint32],) {
  %939 = fn () -> (Tensor[(2, 1, 7), uint32],) {
    %937 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
    %938 = %937.0;
    (%938,)
  };
  %939() /* ty=(Tensor[(2, 1, 7), uint32],) */
}

def @func_8814(%var_8808: Tensor[(12, 2, 10), float32]) -> (Tensor[(12, 2, 10), float32], Tensor[(1620), float32]) {
  %940 = cast(%var_8808, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  %941 = sinh(%940) /* ty=Tensor[(12, 2, 10), float32] */;
  %942 = @func_4228() /* ty=Tensor[(1620), float32] */;
  (%941, %942)
}

def @func_6968() -> (Tensor[(180), float32], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8]) {
  %954 = fn () -> (Tensor[(180), float32], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8]) {
    %943 = @func_2859() /* ty=(Tensor[(180), float32],) */;
    %944 = @func_3121() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %945 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %946 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %947 = reshape(%945, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
    %948 = reshape(%946, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
    %949 = @func_5286(%947, %948) /* ty=(Tensor[(3, 4, 5), int8],) */;
    %950 = %943.0;
    %951 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
    %952 = %944.3;
    %953 = %949.0;
    (%950, %951, %952, %953, meta[relay.Constant][52] /* ty=Tensor[(60), int8] */)
  };
  %954() /* ty=(Tensor[(180), float32], Tensor[(4, 5, 7), uint8], Tensor[(1620), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8]) */
}

def @func_2947() -> (Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %967 = fn () -> (Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
    %955 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
    %956 = @func_2859() /* ty=(Tensor[(180), float32],) */;
    %957 = %955.0;
    %958 = cast(%957, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %959 = reshape(%958, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %960 = @func_2767(%959) /* ty=Tensor[(1620), float32] */;
    %961 = cast(%960, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %962 = reshape(%961, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %963 = @func_2837() /* ty=(Tensor[(1620), float32],) */;
    %964 = %956.0;
    %965 = @func_2767(%962) /* ty=Tensor[(1620), float32] */;
    %966 = %963.0;
    (%957, %964, %960, %965, %966)
  };
  %967() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_10344(%var_10342: Tensor[(648), float32]) -> (Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) {
  @func_10341(%var_10342) /* ty=(Tensor[(2, 8, 3), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(648), float32], Tensor[(1620), float32], Tensor[(1, 4), float64], Tensor[(240), bool], Tensor[(2, 8, 3), float64]) */
}

def @func_4105(%var_4102: Tensor[(5, 11, 15), int8], %var_4103: Tensor[(5, 11, 15), int8], %var_4104: Tensor[(5, 11, 15), int8]) -> (Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) {
  @func_4100(%var_4102, %var_4103, %var_4104) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(1620), float32], Tensor[(5, 11, 15), bool]) */
}

def @func_5476() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  @func_5474() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */
}

def @func_5408() -> (Tensor[(1620), float64], Tensor[(1620), float32]) {
  %972 = fn () -> (Tensor[(1620), float64], Tensor[(1620), float32]) {
    %968 = @func_4577() /* ty=(Tensor[(1620), float64],) */;
    %969 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
    %970 = %968.0;
    %971 = %969.0;
    (%970, %971)
  };
  %972() /* ty=(Tensor[(1620), float64], Tensor[(1620), float32]) */
}

def @func_5474() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %973 = @func_5314() /* ty=(Tensor[(1620), float32],) */;
  %974 = @func_4577() /* ty=(Tensor[(1620), float64],) */;
  %975 = %973.0;
  %976 = %974.0;
  (%975, %976)
}

def @func_3579() -> Tensor[(4, 5, 7), uint8] {
  @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */
}

def @func_5286(%var_5276: Tensor[(3, 4, 5), int8], %var_5277: Tensor[(3, 4, 5), int8]) -> (Tensor[(3, 4, 5), int8],) {
  %977 = cast(%var_5277, dtype="int8") /* ty=Tensor[(3, 4, 5), int8] */;
  %978 = shape_of(%var_5276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%var_5276, dtype="int8") /* ty=Tensor[(3, 4, 5), int8] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %981 = right_shift(%979, %980) /* ty=Tensor[(3, 4, 5), int8] */;
  (%981,)
}

def @func_3900() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %982 = @func_3522() /* ty=(Tensor[(1620), float32],) */;
  %983 = %982.0;
  %984 = @func_3365() /* ty=Tensor[(1620), float32] */;
  (%983, %984)
}

def @main(%var_11326: Tensor[(4, 1, 15), float64]) -> (Tensor[(4, 1, 15), float64],) {
  %985 = cast(%var_11326, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
  %986 = exp(%985) /* ty=Tensor[(4, 1, 15), float64] */;
  (%986,)
}

def @func_2861() -> (Tensor[(180), float32],) {
  @func_2859() /* ty=(Tensor[(180), float32],) */
}

def @func_3121() -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %987 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %988 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %989 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %990 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %991 = %987.1;
  %992 = %988.2;
  %993 = %989.0;
  %994 = %990.0;
  (%991, %992, %993, %994)
}

def @func_6982() -> (Tensor[(2, 8, 3), float32],) {
  @func_6980() /* ty=(Tensor[(2, 8, 3), float32],) */
}

def @func_8500(%var_8498: Tensor[(1620), bool]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), uint8], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_8497(%var_8498) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), uint8], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_9177() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_9175() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_9046() -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(90, 2), bool], Tensor[(180), float32]) {
  %1003 = fn () -> (Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(90, 2), bool], Tensor[(180), float32]) {
    %995 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %996 = @func_6980() /* ty=(Tensor[(2, 8, 3), float32],) */;
    %997 = cast(meta[relay.Constant][53] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %998 = reshape(%997, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
    %999 = @func_3179(%998) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
    %1000 = %995.1;
    %1001 = %996.0;
    %1002 = %999.3;
    (%1000, %1001, %1002, meta[relay.Constant][53] /* ty=Tensor[(180), float32] */)
  };
  %1003() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float32], Tensor[(90, 2), bool], Tensor[(180), float32]) */
}

def @func_10574(%var_10572: int8, %var_10573: Tensor[(7, 7, 4), int8]) -> (Tensor[(7, 7, 4), int8], Tensor[(1620), float32]) {
  %1009 = fn (%var_10554: int8, %var_10555: Tensor[(7, 7, 4), int8]) -> (Tensor[(7, 7, 4), int8], Tensor[(1620), float32]) {
    %1004 = cast(%var_10554, dtype="int8") /* ty=int8 */;
    %1005 = cast(%var_10555, dtype="int8") /* ty=Tensor[(7, 7, 4), int8] */;
    %1006 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
    %1007 = subtract(%1004, %1005) /* ty=Tensor[(7, 7, 4), int8] */;
    %1008 = %1006.0;
    (%1007, %1008)
  };
  %1009(%var_10572, %var_10573) /* ty=(Tensor[(7, 7, 4), int8], Tensor[(1620), float32]) */
}

def @func_10880(%var_10878: Tensor[(162, 4), float32]) -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(2, 8, 3), float64], Tensor[(162, 4), uint8], Tensor[(2, 8, 3), float64], Tensor[(1620), float32], Tensor[(162, 4), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) {
  @func_10877(%var_10878) /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(9, 9, 8), uint16], Tensor[(2, 8, 3), float64], Tensor[(162, 4), uint8], Tensor[(2, 8, 3), float64], Tensor[(1620), float32], Tensor[(162, 4), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */
}

def @func_6608() -> (Tensor[(4, 12, 13), float32],) {
  %1012 = fn () -> (Tensor[(4, 12, 13), float32],) {
    %1010 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
    %1011 = sigmoid(%1010) /* ty=Tensor[(4, 12, 13), float32] */;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(4, 12, 13), float32],) */
}

def @func_5803() -> (Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) {
  %1013 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
  %1014 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
  %1015 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
  %1016 = @func_2788() /* ty=(Tensor[(1620), float32],) */;
  %1017 = %1016.0;
  %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1019 = %1013.0;
  %1020 = %1014.0;
  %1021 = %1015.0;
  %1022 = sin(%1018) /* ty=Tensor[(1620), float32] */;
  (%1019, %1020, %1021, %1022)
}

def @func_9600() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %1027 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
    %1023 = @func_2946() /* ty=(Tensor[(1620), float32], Tensor[(180), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %1024 = @func_5803() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %1025 = %1023.2;
    %1026 = %1024.3;
    (%1025, %1026)
  };
  %1027() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_5606() -> Tensor[(1620), float32] {
  %1028 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %1028.0
}

def @func_5314() -> (Tensor[(1620), float32],) {
  %1029 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_1243(%var_1207: Tensor[(2, 2, 1), float64], %var_1239: Tensor[(1, 180), float32]) -> (Tensor[(5, 3, 16), bool], Tensor[(1, 48), bool], Tensor[(2, 2, 240), bool], Tensor[(15, 9, 12), float64], Tensor[(1, 180), float32], Tensor[(1620), float32]) {
  %1031 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %1032 = cast(meta[relay.Constant][56] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1033 = reshape(%1031, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), bool] */;
  %1034 = reshape(%1032, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), bool] */;
  %1035 = @func_1044(%1033, %1034) /* ty=(Tensor[(5, 3, 16), bool],) */;
  %1036 = cast(%var_1207, dtype="float64") /* ty=Tensor[(2, 2, 1), float64] */;
  %1037 = tan(%1036) /* ty=Tensor[(2, 2, 1), float64] */;
  %1038 = cast(%1037, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %1039 = shape_of(%var_1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%var_1207, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1042 = greater_equal(%1040, %1041) /* ty=Tensor[(2, 2, ?), bool] */;
  %1043 = cast(%1042, dtype="bool") /* ty=Tensor[(2, 2, ?), bool] */;
  %1044 = cast(meta[relay.Constant][56] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1045 = cast(%var_1239, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %1046 = cast(meta[relay.Constant][57] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1047 = reshape(%1045, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1048 = reshape(%1046, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %1049 = @func_322(%1047, %1048) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(140), uint8], Tensor[(4, 5, 7), float32], Tensor[(15, 9, 12), float64]) */;
  %1050 = %1035.0;
  %1051 = less_equal(%1043, %1044) /* ty=Tensor[(2, 2, 240), bool] */;
  %1052 = %1049.3;
  (%1050, meta[relay.Constant][55] /* ty=Tensor[(1, 48), bool] */, %1051, %1052, %var_1239, meta[relay.Constant][57] /* ty=Tensor[(1620), float32] */)
}

def @func_7074() -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
  %1057 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float64]) {
    %1053 = @func_4210() /* ty=(Tensor[(1620), float32],) */;
    %1054 = @func_5159() /* ty=(Tensor[(1620), float64],) */;
    %1055 = %1053.0;
    %1056 = %1054.0;
    (%1055, %1056)
  };
  %1057() /* ty=(Tensor[(1620), float32], Tensor[(1620), float64]) */
}

def @func_5573(%var_5566: Tensor[(60), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(90, 2), bool], Tensor[(180), float32]) {
  %1058 = @func_3577() /* ty=Tensor[(4, 5, 7), uint8] */;
  %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %1060 = cast(%var_5566, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1061 = cast(%var_5566, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1062 = reshape(%1060, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %1063 = reshape(%1061, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), int8] */;
  %1064 = @func_5286(%1062, %1063) /* ty=(Tensor[(3, 4, 5), int8],) */;
  %1065 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1066 = reshape(%1065, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %1067 = @func_3179(%1066) /* ty=(Tensor[(1620), float32], Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32], Tensor[(90, 2), bool]) */;
  %1068 = tan(%1059) /* ty=Tensor[(4, 5, 7), float32] */;
  %1069 = %1064.0;
  %1070 = %1067.3;
  (%1068, %1069, %var_5566, %1070, meta[relay.Constant][58] /* ty=Tensor[(180), float32] */)
}

def @func_10769(%var_10768: Tensor[(14, 48), bool]) -> (Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(14, 48), bool], Tensor[(14, 48), int32], Tensor[(2, 1, 7), uint32], Tensor[(1620), float32], Tensor[(14, 48), uint8]) {
  %1100 = fn (%var_10721: Tensor[(14, 48), bool]) -> (Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(14, 48), bool], Tensor[(14, 48), int32], Tensor[(2, 1, 7), uint32], Tensor[(1620), float32], Tensor[(14, 48), uint8]) {
    %1071 = @func_3900() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %1072 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
    %1073 = reshape(%1072, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %1074 = @func_5204(%1073) /* ty=(Tensor[(180), float32], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool]) */;
    %1075 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 48), bool] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
    %1076 = cast(%var_10721, dtype="bool") /* ty=Tensor[(14, 48), bool] */;
    %1077 = cast(%var_10721, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
    %1078 = log10(%1077) /* ty=Tensor[(14, 48), float32] */;
    %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
    %1080 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 48), bool] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %1081 = mod(%1079, %1080) /* ty=Tensor[(14, 48), float32] */;
    %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(14, 48), float32] */;
    %1083 = sqrt(%1082) /* ty=Tensor[(14, 48), float32] */;
    %1084 = cast(%var_10721, dtype="int32") /* ty=Tensor[(14, 48), int32] */;
    %1085 = shape_of(%1083, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1086 = cast(%1083, dtype="int32") /* ty=Tensor[(14, 48), int32] */;
    %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1088 = @func_5060() /* ty=(Tensor[(2, 1, 7), uint32],) */;
    %1089 = cast(%1078, dtype="uint8") /* ty=Tensor[(14, 48), uint8] */;
    %1090 = shape_of(%1083, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1091 = cast(%1083, dtype="uint8") /* ty=Tensor[(14, 48), uint8] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1093 = %1071.1;
    %1094 = %1074.1;
    %1095 = less_equal(%1075, %1076) /* ty=Tensor[(14, 48), bool] */;
    %1096 = bitwise_and(%1086, %1087) /* ty=Tensor[(14, 48), int32] */;
    %1097 = %1088.0;
    %1098 = @func_7898() /* ty=Tensor[(1620), float32] */;
    %1099 = bitwise_xor(%1091, %1092) /* ty=Tensor[(14, 48), uint8] */;
    (%1093, %1094, %1095, %1096, %1097, %1098, %1099)
  };
  %1100(%var_10768) /* ty=(Tensor[(1620), float32], Tensor[(5, 3, 16), bool], Tensor[(14, 48), bool], Tensor[(14, 48), int32], Tensor[(2, 1, 7), uint32], Tensor[(1620), float32], Tensor[(14, 48), uint8]) */
}

def @func_5533() -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
  %1105 = fn () -> (Tensor[(1620), float32], Tensor[(1620), float32]) {
    %1101 = @func_3665() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %1102 = @func_5045() /* ty=(Tensor[(1620), float32],) */;
    %1103 = %1101.1;
    %1104 = %1102.0;
    (%1103, %1104)
  };
  %1105() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */
}

def @func_214(%var_186: Tensor[(4, 5, 7), uint8]) -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) {
  %1106 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 5, 7), uint8] */, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %1107 = shape_of(%var_186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%var_186, dtype="uint8") /* ty=Tensor[(4, 5, 7), uint8] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1110 = cast(%var_186, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %1111 = bitwise_or(%1108, %1109) /* ty=Tensor[(4, 5, 7), uint8] */;
  %1112 = atanh(%1110) /* ty=Tensor[(4, 5, 7), float32] */;
  (%1111, %1112)
}

def @func_7225() -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32]) {
  %1119 = fn () -> (Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32]) {
    %1113 = @func_3840() /* ty=(Tensor[(1620), float32], Tensor[(2, 8, 3), float64], Tensor[(1620), float32]) */;
    %1114 = @func_6402() /* ty=(Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) */;
    %1115 = @func_6101() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32]) */;
    %1116 = %1113.1;
    %1117 = %1114.0;
    %1118 = %1115.0;
    (%1116, %1117, %1118)
  };
  %1119() /* ty=(Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64], Tensor[(1620), float32]) */
}

def @func_2859() -> (Tensor[(180), float32],) {
  %1120 = @func_2693() /* ty=(Tensor[(2, 1, 7), uint32], Tensor[(4, 5, 7), uint8], Tensor[(180), float32], Tensor[(1620), float32]) */;
  %1121 = %1120.2;
  (%1121,)
}

def @func_6402() -> (Tensor[(4, 12), float64], Tensor[(2, 8, 3), float64], Tensor[(4, 5, 7), float32]) {
  %1122 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
  %1123 = @func_3037() /* ty=(Tensor[(180), float32], Tensor[(2, 8, 3), float64], Tensor[(4, 12), float64]) */;
  %1124 = %1122.2;
  %1125 = %1123.1;
  %1126 = @func_5457() /* ty=Tensor[(4, 5, 7), float32] */;
  (%1124, %1125, %1126)
}

def @func_3367() -> Tensor[(1620), float32] {
  @func_3365() /* ty=Tensor[(1620), float32] */
}

def @func_3523() -> (Tensor[(1620), float32],) {
  %1128 = fn () -> (Tensor[(1620), float32],) {
    %1127 = @func_3365() /* ty=Tensor[(1620), float32] */;
    (%1127,)
  };
  %1128() /* ty=(Tensor[(1620), float32],) */
}

def @func_217(%var_215: Tensor[(4, 5, 7), uint8]) -> (Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) {
  @func_214(%var_215) /* ty=(Tensor[(4, 5, 7), uint8], Tensor[(4, 5, 7), float32]) */
}

def @func_7899() -> Tensor[(1620), float32] {
  %1130 = fn () -> Tensor[(1620), float32] {
    %1129 = @func_4879() /* ty=(Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(4, 12), float64]) */;
    %1129.0
  };
  %1130() /* ty=Tensor[(1620), float32] */
}

def @func_10419(%var_10417: Tensor[(48), bool], %var_10418: Tensor[(240), bool]) -> (Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32]) {
  @func_10415(%var_10417, %var_10418) /* ty=(Tensor[(1620), float64], Tensor[(3, 4, 5), int8], Tensor[(60), int8], Tensor[(5, 3, 16), bool], Tensor[(48), bool], Tensor[(240), bool], Tensor[(1620), float32], Tensor[(1620), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen605/build/output.py:3121: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen605/build/output.py", line 3126, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(60) tvmgen_default_fused_exp_kernel0(double* __restrict__ T_exp, double* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = exp(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_3314(%var_3297: Tensor[(4, 15, 13), float64], %var_3298: Tensor[(4, 15, 13), float64]) -> (Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %0 = cast(%var_3298, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %1 = shape_of(%var_3297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_3297, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %6 = reshape(%5, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %7 = power(%2, %3) /* ty=Tensor[(4, 15, 13), float64] */;
  %8 = @func_3220(%6) /* ty=Tensor[(11, 4, 11), bool] */;
  (%7, %4, %8)
}

def @func_8375(%var_8356: Tensor[(11, 4, 11), uint64], %var_8362: Tensor[(1920), int64]) -> (Tensor[(11, 4, 11), int16], Tensor[(11, 4, 11), float32], Tensor[(1920), int64]) {
  %9 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %10 = %9.0;
  %11 = cast(%var_8356, dtype="int16") /* ty=Tensor[(11, 4, 11), int16] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="int16") /* ty=Tensor[(11, 4, 11), int16] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %15 = cast(%var_8362, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %16 = cast(%var_8362, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %17 = reshape(%15, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), int64] */;
  %18 = reshape(%16, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), int64] */;
  %19 = @func_7054(%17, %18) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %20 = left_shift(%13, %14) /* ty=Tensor[(11, 4, 11), int16] */;
  %21 = %19.2;
  (%20, %21, %var_8362)
}

def @func_4105(%var_4070: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(11, 4, 11), float64]) {
  %22 = cast(%var_4070, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %23 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %26 = atanh(%22) /* ty=Tensor[(6, 9, 14), float32] */;
  %27 = cosh(%25) /* ty=Tensor[(11, 4, 11), float64] */;
  (%26, %27)
}

def @func_7390() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %28 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %29 = %28.0;
  %30 = @func_7012() /* ty=Tensor[(11, 4, 11), float32] */;
  (%29, %30)
}

def @func_8182(%var_8163: Tensor[(240), uint8]) -> (Tensor[(11, 4, 11), int64], Tensor[(4, 12, 5), uint8], Tensor[(240), uint8], Tensor[(11, 4, 11), float32]) {
  %31 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %32 = %31.1;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 4, 11), float32] */, dtype="int64") /* ty=Tensor[(11, 4, 11), int64] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="int64") /* ty=Tensor[(11, 4, 11), int64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %37 = cast(%var_8163, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %38 = cast(%var_8163, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %39 = reshape(%37, newshape=[4, 12, 5]) /* ty=Tensor[(4, 12, 5), uint8] */;
  %40 = reshape(%38, newshape=[4, 12, 5]) /* ty=Tensor[(4, 12, 5), uint8] */;
  %41 = @func_7786(%39, %40) /* ty=(Tensor[(4, 12, 5), uint8],) */;
  %42 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %43 = bitwise_and(%35, %36) /* ty=Tensor[(11, 4, 11), int64] */;
  %44 = %41.0;
  %45 = %42.2;
  (%43, %44, %var_8163, %45)
}

def @func_7308() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %46 = @func_4680() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %47 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %48 = %46.0;
  %49 = %47.0;
  (%48, %49)
}

def @func_2681() -> (Tensor[(11, 4, 11), float32],) {
  %50 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %51 = %50.0;
  (%51,)
}

def @func_3783() -> Tensor[(11, 4, 11), uint64] {
  %52 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 4, 11), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %57 = subtract(%55, %56) /* ty=Tensor[(11, 4, 11), uint16] */;
  %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 4, 11), float32] */, dtype="uint64") /* ty=Tensor[(11, 4, 11), uint64] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="uint64") /* ty=Tensor[(11, 4, 11), uint64] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%60, %61) /* ty=Tensor[(11, 4, 11), uint64] */
}

def @func_2857(%var_2810: Tensor[(11, 4, 11), float32], %var_2822: Tensor[(54, 12), uint32], %var_2829: int16, %var_2830: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) {
  %62 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %63 = %62.0;
  %64 = cast(%var_2810, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = cast(%var_2829, dtype="int16") /* ty=int16 */;
  %69 = cast(%var_2830, dtype="int16") /* ty=Tensor[(468), int16] */;
  %70 = reshape(%68, newshape=[]) /* ty=int16 */;
  %71 = reshape(%69, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %72 = @func_1132(%70, %71) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %73 = cast(%var_2822, dtype="uint32") /* ty=Tensor[(54, 12), uint32] */;
  %74 = reshape(%73, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %75 = cast(%var_2822, dtype="uint32") /* ty=Tensor[(54, 12), uint32] */;
  %76 = reshape(%75, newshape=[648]) /* ty=Tensor[(648), uint32] */;
  %77 = @func_2730(%76) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %78 = %77.1;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
  %80 = cast(%63, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %81 = not_equal(%66, %67) /* ty=Tensor[(11, 4, 11), bool] */;
  %82 = %72.0;
  %83 = @func_1961(%74) /* ty=Tensor[(8, 9, 9), uint32] */;
  %84 = sin(%79) /* ty=Tensor[(8, 9, 9), float32] */;
  %85 = sinh(%80) /* ty=Tensor[(11, 4, 11), float64] */;
  (%81, %var_2822, %82, %var_2829, %var_2830, %83, %84, %85)
}

def @func_5244() -> (Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) {
  %86 = @func_3783() /* ty=Tensor[(11, 4, 11), uint64] */;
  %87 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
  (%86, %87)
}

def @func_1422(%var_1412: Tensor[(10, 2, 1), float64]) -> Tensor[(10, 2, 1), float64] {
  %88 = cast(%var_1412, dtype="float64") /* ty=Tensor[(10, 2, 1), float64] */;
  atan(%88) /* ty=Tensor[(10, 2, 1), float64] */
}

def @func_3294() -> (Tensor[(11, 4, 11), float32],) {
  %89 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %90 = %89.0;
  (%90,)
}

def @func_3637() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %91 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %94 = reshape(%93, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %95 = @func_3220(%94) /* ty=Tensor[(11, 4, 11), bool] */;
  (%92, %95)
}

def @func_6670() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
  %96 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %97 = %96.0;
  %98 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 4, 11), float32] */, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = @func_6598() /* ty=Tensor[(11, 4, 11), float32] */;
  %103 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %107 = greater(%100, %101) /* ty=Tensor[(11, 4, 11), bool] */;
  %108 = mod(%105, %106) /* ty=Tensor[(11, 4, 11), float64] */;
  (%107, %108)
}

def @func_7235() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %109 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %110 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %111 = %109.1;
  %112 = %110.0;
  (%111, %112)
}

def @func_5750() -> (Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) {
  %113 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %114 = cast(meta[relay.Constant][3] /* ty=Tensor[(1980), float32] */, dtype="float32") /* ty=Tensor[(1980), float32] */;
  %115 = reshape(%114, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), float32] */;
  %116 = @func_2167(%115) /* ty=(Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) */;
  %117 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %118 = %113.0;
  %119 = %116.2;
  %120 = %117.0;
  (%118, %119, meta[relay.Constant][3] /* ty=Tensor[(1980), float32] */, %120)
}

def @func_8570(%var_8473: Tensor[(11, 4, 11), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(484, 1), bool], Tensor[(7, 4), float64], Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float32], Tensor[(780), float64], Tensor[(11, 4, 11), bool]) {
  %121 = @func_7235() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %122 = cast(%var_8473, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %123 = reshape(%122, newshape=[484, 1]) /* ty=Tensor[(484, 1), bool] */;
  %124 = @func_7133(%123) /* ty=(int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) */;
  %125 = @func_3601() /* ty=(Tensor[(7, 4), float64],) */;
  %126 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
  %127 = %126.1;
  %128 = cast(%var_8473, dtype="int8") /* ty=Tensor[(11, 4, 11), int8] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%127, dtype="int8") /* ty=Tensor[(11, 4, 11), int8] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %132 = bitwise_or(%130, %131) /* ty=Tensor[(11, 4, 11), int8] */;
  %133 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 11), int8] */, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %138 = reshape(%137, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %139 = @func_8307(%138) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) */;
  %140 = %121.1;
  %141 = %124.2;
  %142 = %125.0;
  %143 = greater_equal(%135, %136) /* ty=Tensor[(11, 4, 11), bool] */;
  %144 = %139.3;
  %145 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
  (%140, %141, %142, %143, %144, meta[relay.Constant][5] /* ty=Tensor[(780), float64] */, %145)
}

def @func_7357(%var_7321: Tensor[(8, 8, 1), float32], %var_7322: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) {
  %146 = cast(%var_7321, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %147 = cast(%var_7322, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
  %148 = greater(%146, %147) /* ty=Tensor[(8, 8, 13), bool] */;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(8, 8, 13), float64] */;
  %150 = cast(%148, dtype="float64") /* ty=Tensor[(8, 8, 13), float64] */;
  %151 = cast(%var_7321, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %152 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %153 = log10(%149) /* ty=Tensor[(8, 8, 13), float64] */;
  %154 = erf(%150) /* ty=Tensor[(8, 8, 13), float64] */;
  %155 = atanh(%151) /* ty=Tensor[(8, 8, 1), float32] */;
  %156 = %152.0;
  (%153, %154, %155, %156)
}

def @func_7997(%var_7973: Tensor[(648), uint32], %var_7974: int16, %var_7989: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], int16, int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(648), bool]) {
  %157 = @func_4898() /* ty=Tensor[(11, 4, 11), float32] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %159 = cast(%var_7973, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %160 = cast(%var_7974, dtype="int16") /* ty=int16 */;
  %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %162 = reshape(%158, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %163 = reshape(%159, newshape=[54, 12]) /* ty=Tensor[(54, 12), uint32] */;
  %164 = reshape(%160, newshape=[]) /* ty=int16 */;
  %165 = reshape(%161, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %166 = @func_2857(%162, %163, %164, %165) /* ty=(Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) */;
  %167 = cast(%157, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %168 = reshape(%167, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %169 = @func_3753(%168) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %170 = cast(%var_7989, dtype="bool") /* ty=Tensor[(648), bool] */;
  %171 = shape_of(%var_7973, dtype="int32") /* ty=Tensor[(1), int32] */;
  %172 = cast(%var_7973, dtype="bool") /* ty=Tensor[(648), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?), bool] */;
  %174 = %166.3;
  %175 = %169.0;
  %176 = greater_equal(%172, %173) /* ty=Tensor[(648), bool] */;
  (%157, %174, %var_7974, meta[relay.Constant][6] /* ty=Tensor[(468), int16] */, %175, %176)
}

def @func_4277() -> (Tensor[(11, 4, 11), float32],) {
  %177 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %178 = %177.0;
  (%178,)
}

def @func_7819(%var_7791: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(648), uint32]) {
  %179 = cast(%var_7791, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %180 = log(%179) /* ty=Tensor[(3, 2, 11), float32] */;
  %181 = cast(%180, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %182 = sqrt(%181) /* ty=Tensor[(3, 2, 11), float32] */;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %184 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %185 = sin(%183) /* ty=Tensor[(3, 2, 11), float32] */;
  %186 = %184.2;
  (%185, %186)
}

def @func_5290() -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) {
  %187 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %188 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 78), int16] */, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %189 = reshape(%187, newshape=[]) /* ty=int16 */;
  %190 = reshape(%188, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %191 = @func_1132(%189, %190) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %192 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
  %193 = %191.0;
  (%192, %193, meta[relay.Constant][7] /* ty=int16 */, meta[relay.Constant][8] /* ty=Tensor[(6, 78), int16] */)
}

def @func_9033(%var_9019: Tensor[(4, 10), int64]) -> (Tensor[(4, 10), int64], Tensor[(11, 4, 11), uint64]) {
  %194 = cast(%var_9019, dtype="int64") /* ty=Tensor[(4, 10), int64] */;
  %195 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(4, 10), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 10), int64] */, dtype="int64") /* ty=Tensor[(4, 10), int64] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %198 = bitwise_or(%196, %197) /* ty=Tensor[(4, 10), int64] */;
  %199 = @func_3783() /* ty=Tensor[(11, 4, 11), uint64] */;
  (%198, %199)
}

def @func_2730(%var_2724: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %200 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %201 = cast(%var_2724, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %202 = reshape(%201, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %203 = %200.0;
  %204 = @func_1961(%202) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%203, %204, %var_2724)
}

def @func_3020(%var_2975: int16, %var_2976: Tensor[(468, 1), int16]) -> (Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) {
  %205 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %206 = reshape(%205, newshape=[8, 3, 10]) /* ty=Tensor[(8, 3, 10), float64] */;
  %207 = cast(%var_2975, dtype="int16") /* ty=int16 */;
  %208 = cast(%var_2976, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %209 = reshape(%207, newshape=[]) /* ty=int16 */;
  %210 = reshape(%208, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %211 = @func_1132(%209, %210) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %212 = cast(%var_2975, dtype="int16") /* ty=int16 */;
  %213 = cast(%var_2976, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %214 = reshape(%212, newshape=[]) /* ty=int16 */;
  %215 = reshape(%213, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %216 = @func_1132(%214, %215) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %217 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %218 = cast(%var_2976, dtype="uint32") /* ty=Tensor[(468, 1), uint32] */;
  %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float64] */, dtype="uint32") /* ty=Tensor[(240), uint32] */;
  %220 = cast(%var_2976, dtype="int32") /* ty=Tensor[(468, 1), int32] */;
  %221 = cast(%var_2975, dtype="int32") /* ty=int32 */;
  %222 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %223 = %222.0;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %225 = atan(%224) /* ty=Tensor[(11, 4, 11), float64] */;
  %226 = cast(%225, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %227 = cast(%var_2975, dtype="bool") /* ty=bool */;
  %228 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 648), uint32] */, dtype="uint32") /* ty=Tensor[(1, 648), uint32] */;
  %229 = reshape(%228, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %230 = @func_1390(%206) /* ty=Tensor[(8, 3, 10), float64] */;
  %231 = %211.0;
  %232 = %216.0;
  %233 = %217.0;
  %234 = left_shift(%218, %219) /* ty=Tensor[(468, 240), uint32] */;
  %235 = add(%220, %221) /* ty=Tensor[(468, 1), int32] */;
  %236 = logical_or(%226, %227) /* ty=Tensor[(11, 4, 11), bool] */;
  %237 = @func_1961(%229) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%230, %231, %232, %233, %234, %235, %236, %237, meta[relay.Constant][11] /* ty=Tensor[(1, 648), uint32] */)
}

def @func_6598() -> Tensor[(11, 4, 11), float32] {
  %238 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %238.0
}

def @func_7133(%var_7131: Tensor[(484, 1), bool]) -> (int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) {
  %239 = @func_5126() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) */;
  %240 = cast(%var_7131, dtype="bool") /* ty=Tensor[(484, 1), bool] */;
  %241 = reshape(%240, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %242 = @func_3753(%241) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %243 = %239.2;
  %244 = %242.0;
  (%243, %244, %var_7131)
}

def @func_7498() -> (Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float32], Tensor[(11, 12, 15), float32], Tensor[(40), bool], Tensor[(11, 4, 11), float32]) {
  %245 = @func_5574() /* ty=(int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) */;
  %246 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %247 = cast(meta[relay.Constant][12] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %248 = cast(meta[relay.Constant][12] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %249 = reshape(%247, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %250 = reshape(%248, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %251 = @func_2429(%249, %250) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
  %252 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %253 = %245.2;
  %254 = %246.0;
  %255 = %251.1;
  %256 = %252.0;
  (%253, %254, %255, meta[relay.Constant][12] /* ty=Tensor[(40), bool] */, %256)
}

def @func_6253() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %257 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %258 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %259 = %257.0;
  %260 = %258.1;
  (%259, %260)
}

def @func_3753(%var_3747: Tensor[(11, 4, 11), bool]) -> (Tensor[(11, 4, 11), uint16],) {
  %261 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %262 = %261.1;
  %263 = cast(%var_3747, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %267 = right_shift(%265, %266) /* ty=Tensor[(11, 4, 11), uint16] */;
  (%267,)
}

def @func_3047() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %268 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %269 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %270 = %268.0;
  %271 = %269.0;
  (%270, %271)
}

def @func_4064() -> (Tensor[(11, 4, 11), float64],) {
  %272 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %274 = sin(%273) /* ty=Tensor[(11, 4, 11), float64] */;
  (%274,)
}

def @func_3547() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %275 = @func_3047() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %276 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %277 = %275.0;
  %278 = %276.1;
  (%277, %278)
}

def @func_5935() -> (Tensor[(5, 4), float64], Tensor[(9, 7, 16), uint64], Tensor[(2, 504), uint64]) {
  %279 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %280 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 504), uint64] */, dtype="uint64") /* ty=Tensor[(2, 504), uint64] */;
  %281 = reshape(%280, newshape=[1008]) /* ty=Tensor[(1008), uint64] */;
  %282 = @func_5723(%281) /* ty=(int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */;
  %283 = log2(%279) /* ty=Tensor[(5, 4), float64] */;
  %284 = %282.1;
  (%283, %284, meta[relay.Constant][14] /* ty=Tensor[(2, 504), uint64] */)
}

def @func_1390(%var_1386: Tensor[(8, 3, 10), float64]) -> Tensor[(8, 3, 10), float64] {
  %285 = cast(%var_1386, dtype="float64") /* ty=Tensor[(8, 3, 10), float64] */;
  acos(%285) /* ty=Tensor[(8, 3, 10), float64] */
}

def @func_8644() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %286 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %287 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %288 = @func_4691() /* ty=Tensor[(11, 4, 11), float32] */;
  %289 = %286.0;
  %290 = @func_5466() /* ty=Tensor[(11, 4, 11), float32] */;
  (%287, %288, %289, %290)
}

def @func_7786(%var_7778: Tensor[(4, 12, 5), uint8], %var_7779: Tensor[(4, 12, 5), uint8]) -> (Tensor[(4, 12, 5), uint8],) {
  %291 = cast(%var_7779, dtype="uint8") /* ty=Tensor[(4, 12, 5), uint8] */;
  %292 = shape_of(%var_7778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_7778, dtype="uint8") /* ty=Tensor[(4, 12, 5), uint8] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %295 = add(%293, %294) /* ty=Tensor[(4, 12, 5), uint8] */;
  (%295,)
}

def @func_5845() -> (Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) {
  %296 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 10), float64] */;
  %297 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 10), float64] */;
  %298 = sinh(%297) /* ty=Tensor[(2, 12, 10), float64] */;
  %299 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %303 = tan(%296) /* ty=Tensor[(2, 12, 10), float64] */;
  %304 = mod(%301, %302) /* ty=Tensor[(2, 12, 10), float32] */;
  (%303, %304)
}

def @func_7012() -> Tensor[(11, 4, 11), float32] {
  %305 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %305.0
}

def @func_3848() -> Tensor[(11, 4, 11), float32] {
  %306 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %306.0
}

def @main() -> Tensor[(11, 4, 11), float32] {
  %307 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  log2(%309) /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_7663(%var_7647: Tensor[(1, 16, 15), float64]) -> (Tensor[(1, 16, 15), float64],) {
  %310 = cast(%var_7647, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %311 = erf(%310) /* ty=Tensor[(1, 16, 15), float64] */;
  (%311,)
}

def @func_5699() -> (Tensor[(11, 4, 11), bool],) {
  %312 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %313 = %312.0;
  (%313,)
}

def @func_8866() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %314 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %315 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
  %316 = %314.1;
  %317 = %315.1;
  (%316, %317)
}

def @func_7434() -> (Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %318 = @func_5290() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) */;
  %319 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %320 = @func_5600() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %321 = %318.1;
  %322 = %319.0;
  %323 = %320.1;
  (%321, %322, %323)
}

def @func_2429(%var_2385: Tensor[(10, 4), bool], %var_2386: Tensor[(10, 4), bool]) -> (Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) {
  %324 = cast(%var_2386, dtype="bool") /* ty=Tensor[(10, 4), bool] */;
  %325 = shape_of(%var_2385, dtype="int32") /* ty=Tensor[(2), int32] */;
  %326 = cast(%var_2385, dtype="bool") /* ty=Tensor[(10, 4), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %328 = cast(meta[relay.Constant][16] /* ty=Tensor[(1980), float32] */, dtype="float32") /* ty=Tensor[(1980), float32] */;
  %329 = reshape(%328, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), float32] */;
  %330 = @func_2167(%329) /* ty=(Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) */;
  %331 = logical_and(%326, %327) /* ty=Tensor[(10, 4), bool] */;
  %332 = %330.0;
  (%331, %332, meta[relay.Constant][16] /* ty=Tensor[(1980), float32] */)
}

def @func_1296(%var_1264: Tensor[(10, 12, 3), float64]) -> (Tensor[(13, 9, 4), int16], Tensor[(468), int16], Tensor[(10, 12, 3), uint32], Tensor[(13, 9, 4), int16]) {
  %333 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %335 = reshape(%333, newshape=[]) /* ty=int16 */;
  %336 = reshape(%334, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %337 = @func_1132(%335, %336) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %338 = cast(%var_1264, dtype="float64") /* ty=Tensor[(10, 12, 3), float64] */;
  %339 = sin(%338) /* ty=Tensor[(10, 12, 3), float64] */;
  %340 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %341 = cast(%339, dtype="uint32") /* ty=Tensor[(10, 12, 3), uint32] */;
  %342 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %343 = cast(meta[relay.Constant][18] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %344 = reshape(%342, newshape=[]) /* ty=int16 */;
  %345 = reshape(%343, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %346 = @func_1132(%344, %345) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %347 = %337.0;
  %348 = minimum(%340, %341) /* ty=Tensor[(10, 12, 3), uint32] */;
  %349 = %346.0;
  (%347, meta[relay.Constant][18] /* ty=Tensor[(468), int16] */, %348, %349)
}

def @func_2710() -> Tensor[(11, 4, 11), float32] {
  %350 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %350.0
}

def @func_8033() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %351 = @func_6860() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %352 = @func_7829() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %353 = %351.0;
  %354 = %352.0;
  (%353, %354)
}

def @func_3166() -> (Tensor[(11, 4, 11), bool],) {
  %355 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %356 = %355.0;
  (%356,)
}

def @func_4648(%var_4640: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %357 = cast(%var_4640, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %358 = reshape(%357, newshape=[648]) /* ty=Tensor[(648), uint32] */;
  %359 = @func_2730(%358) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %360 = @func_4332() /* ty=Tensor[(11, 4, 11), float32] */;
  %361 = %359.1;
  (%360, %361, %var_4640)
}

def @func_6182() -> (Tensor[(11, 4, 11), float32],) {
  %362 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %363 = %362.0;
  (%363,)
}

def @func_2786(%var_2769: Tensor[(3120), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) {
  %364 = cast(%var_2769, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %365 = cast(%var_2769, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %366 = reshape(%364, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float64] */;
  %367 = reshape(%365, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float64] */;
  %368 = @func_642(%366, %367) /* ty=Tensor[(15, 16, 13), float64] */;
  %369 = cast(%var_2769, dtype="uint8") /* ty=Tensor[(3120), uint8] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="uint8") /* ty=Tensor[(15, 16, 13), uint8] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %373 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %374 = right_shift(%371, %372) /* ty=Tensor[(15, 16, 13), uint8] */;
  (%373, %374)
}

def @func_1132(%var_1127: int16, %var_1128: Tensor[(13, 9, 4), int16]) -> (Tensor[(13, 9, 4), int16],) {
  %375 = cast(%var_1127, dtype="int16") /* ty=int16 */;
  %376 = cast(%var_1128, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %377 = minimum(%375, %376) /* ty=Tensor[(13, 9, 4), int16] */;
  (%377,)
}

def @func_642(%var_614: Tensor[(15, 16, 13), float64], %var_615: Tensor[(15, 16, 13), float64]) -> Tensor[(15, 16, 13), float64] {
  %378 = cast(%var_615, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
  %379 = shape_of(%var_614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_614, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%380, %381) /* ty=Tensor[(15, 16, 13), float64] */
}

def @func_5665() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %382 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %383 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %384 = %382.1;
  %385 = @func_4898() /* ty=Tensor[(11, 4, 11), float32] */;
  %386 = %383.1;
  (%384, %385, %386)
}

def @func_6428() -> Tensor[(11, 4, 11), float64] {
  %387 = @func_4064() /* ty=(Tensor[(11, 4, 11), float64],) */;
  %387.0
}

def @func_4898() -> Tensor[(11, 4, 11), float32] {
  @func_4332() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_4614() -> (Tensor[(7, 4), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), uint16]) {
  %388 = @func_3601() /* ty=(Tensor[(7, 4), float64],) */;
  %389 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %390 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
  %391 = %389.0;
  %392 = cast(%391, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %393 = reshape(%392, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %394 = @func_3753(%393) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %395 = %388.0;
  %396 = %390.1;
  %397 = %394.0;
  (%395, %391, %396, %397)
}

def @func_4486(%var_4468: int16) -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) {
  %398 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %399 = cast(%var_4468, dtype="int16") /* ty=int16 */;
  %400 = cast(meta[relay.Constant][19] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %401 = reshape(%399, newshape=[]) /* ty=int16 */;
  %402 = reshape(%400, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %403 = @func_1132(%401, %402) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %404 = %398.0;
  %405 = %403.0;
  (%404, %405, %var_4468, meta[relay.Constant][19] /* ty=Tensor[(468), int16] */)
}

def @func_5723(%var_5721: Tensor[(1008), uint64]) -> (int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  %406 = @func_5290() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) */;
  %407 = cast(%var_5721, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %408 = cast(%var_5721, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %409 = reshape(%407, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint64] */;
  %410 = reshape(%408, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint64] */;
  %411 = @func_2935(%409, %410) /* ty=(Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) */;
  %412 = %406.2;
  %413 = %411.0;
  (%412, %413, %var_5721)
}

def @func_6265(%var_6260: Tensor[(1008), uint64]) -> (Tensor[(11, 4, 11), float64], Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  %414 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %415 = cast(%var_6260, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %416 = reshape(%415, newshape=[1008]) /* ty=Tensor[(1008), uint64] */;
  %417 = @func_5723(%416) /* ty=(int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */;
  %418 = %414.0;
  %419 = %417.1;
  (%418, %419, %var_6260)
}

def @func_4852(%var_4757: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(648), uint32], Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), float64]) {
  %420 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %421 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %422 = cast(%var_4757, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %423 = reshape(%422, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %424 = @func_1961(%423) /* ty=Tensor[(8, 9, 9), uint32] */;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
  %426 = tan(%425) /* ty=Tensor[(8, 9, 9), float32] */;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(8, 9, 9), float64] */;
  %428 = log2(%427) /* ty=Tensor[(8, 9, 9), float64] */;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(8, 9, 9), float64] */;
  %430 = %420.0;
  %431 = %421.0;
  %432 = acosh(%429) /* ty=Tensor[(8, 9, 9), float64] */;
  (%430, %var_4757, %431, %432)
}

def @func_3405() -> (Tensor[(11, 4, 11), float32],) {
  %433 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %434 = %433.0;
  (%434,)
}

def @func_5782(%var_5776: Tensor[(162, 4), uint32]) -> Tensor[(162, 4), float32] {
  %435 = @func_5750() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) */;
  %436 = %435.1;
  %437 = cast(%var_5776, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%436, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  floor_mod(%439, %440) /* ty=Tensor[(162, 4), float32] */
}

def @func_8956(%var_8904: Tensor[(468), int16], %var_8936: Tensor[(3, 15, 9), float64]) -> (Tensor[(1, 648), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32], Tensor[(3, 15, 9), float64], Tensor[(3, 15, 9), int16], Tensor[(3, 15, 9), int16]) {
  %441 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %442 = cast(%var_8904, dtype="int16") /* ty=Tensor[(468), int16] */;
  %443 = reshape(%441, newshape=[]) /* ty=int16 */;
  %444 = reshape(%442, newshape=[468, 1]) /* ty=Tensor[(468, 1), int16] */;
  %445 = @func_3020(%443, %444) /* ty=(Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) */;
  %446 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %447 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 9), float64] */;
  %448 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %449 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %452 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 9), float64] */;
  %453 = erf(%452) /* ty=Tensor[(3, 15, 9), float64] */;
  %454 = cast(%var_8936, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%453, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %458 = %445.8;
  %459 = %446.0;
  %460 = cos(%447) /* ty=Tensor[(3, 15, 9), float64] */;
  %461 = minimum(%450, %451) /* ty=Tensor[(3, 15, 9), int16] */;
  %462 = logical_xor(%456, %457) /* ty=Tensor[(3, 15, 9), int16] */;
  (%458, meta[relay.Constant][20] /* ty=int16 */, %var_8904, %459, %460, %461, %462)
}

def @func_1882(%var_1874: Tensor[(2, 4, 11), float32]) -> Tensor[(2, 4, 11), float32] {
  %463 = cast(%var_1874, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  exp(%463) /* ty=Tensor[(2, 4, 11), float32] */
}

def @func_5574() -> (int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) {
  %464 = cast(meta[relay.Constant][23] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %465 = reshape(%464, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %466 = @func_3953(%465) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */;
  %467 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
  %468 = cast(%467, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %469 = reshape(%468, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %470 = @func_3753(%469) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %471 = cast(%467, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %472 = log10(%471) /* ty=Tensor[(11, 4, 11), float32] */;
  %473 = cast(%472, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %474 = %466.3;
  %475 = %470.0;
  %476 = atanh(%473) /* ty=Tensor[(11, 4, 11), float64] */;
  (%474, meta[relay.Constant][23] /* ty=Tensor[(468), int16] */, %475, %476)
}

def @func_7016() -> Tensor[(11, 4, 11), float32] {
  %477 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %477.0
}

def @func_7160(%var_7140: Tensor[(9, 5, 13), float64]) -> (Tensor[(9, 5, 13), float32], Tensor[(162, 4), float32], Tensor[(648), uint32]) {
  %478 = cast(%var_7140, dtype="float64") /* ty=Tensor[(9, 5, 13), float64] */;
  %479 = erf(%478) /* ty=Tensor[(9, 5, 13), float64] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(9, 5, 13), float32] */;
  %481 = cast(meta[relay.Constant][24] /* ty=Tensor[(648), uint32] */, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %482 = reshape(%481, newshape=[162, 4]) /* ty=Tensor[(162, 4), uint32] */;
  %483 = atanh(%480) /* ty=Tensor[(9, 5, 13), float32] */;
  %484 = @func_5782(%482) /* ty=Tensor[(162, 4), float32] */;
  (%483, %484, meta[relay.Constant][24] /* ty=Tensor[(648), uint32] */)
}

def @func_7113() -> (Tensor[(11, 4, 11), float32],) {
  %485 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  (%485,)
}

def @func_4240() -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %486 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %487 = %486.0;
  %488 = cast(%487, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %489 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %490 = @func_4064() /* ty=(Tensor[(11, 4, 11), float64],) */;
  %491 = acos(%488) /* ty=Tensor[(11, 4, 11), float64] */;
  %492 = %489.0;
  %493 = %490.0;
  (%491, %492, %493)
}

def @func_8117() -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) {
  %494 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %495 = cast(meta[relay.Constant][25] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %496 = cast(meta[relay.Constant][26] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %497 = reshape(%495, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float32] */;
  %498 = reshape(%496, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), float32] */;
  %499 = @func_7357(%497, %498) /* ty=(Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) */;
  %500 = @func_6428() /* ty=Tensor[(11, 4, 11), float64] */;
  %501 = %494.0;
  %502 = %499.2;
  (%500, %501, %502, meta[relay.Constant][25] /* ty=Tensor[(64), float32] */, meta[relay.Constant][26] /* ty=Tensor[(832), float32] */)
}

def @func_6321(%var_6285: Tensor[(16, 11, 7), bool], %var_6286: Tensor[(16, 11, 7), bool], %var_6315: Tensor[(484), bool]) -> (Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) {
  %503 = cast(%var_6286, dtype="bool") /* ty=Tensor[(16, 11, 7), bool] */;
  %504 = shape_of(%var_6285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_6285, dtype="bool") /* ty=Tensor[(16, 11, 7), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = logical_or(%505, %506) /* ty=Tensor[(16, 11, 7), bool] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(16, 11, 7), float64] */;
  %509 = cast(%var_6286, dtype="float64") /* ty=Tensor[(16, 11, 7), float64] */;
  %510 = cast(%var_6315, dtype="bool") /* ty=Tensor[(484), bool] */;
  %511 = reshape(%510, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %512 = @func_3753(%511) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %513 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %514 = cos(%508) /* ty=Tensor[(16, 11, 7), float64] */;
  %515 = log10(%509) /* ty=Tensor[(16, 11, 7), float64] */;
  %516 = %512.0;
  %517 = %513.0;
  (%514, %515, %516, %var_6315, %517)
}

def @func_3716(%var_3708: Tensor[(10, 11, 2), float64]) -> Tensor[(10, 11, 2), float64] {
  %518 = cast(%var_3708, dtype="float64") /* ty=Tensor[(10, 11, 2), float64] */;
  sigmoid(%518) /* ty=Tensor[(10, 11, 2), float64] */
}

def @func_6392(%var_6379: Tensor[(20), float64]) -> (Tensor[(7, 9, 3), float64], Tensor[(10, 2, 1), float64], Tensor[(20), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %519 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
  %520 = cast(%var_6379, dtype="float64") /* ty=Tensor[(20), float64] */;
  %521 = reshape(%520, newshape=[10, 2, 1]) /* ty=Tensor[(10, 2, 1), float64] */;
  %522 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %523 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %524 = acos(%519) /* ty=Tensor[(7, 9, 3), float64] */;
  %525 = @func_1422(%521) /* ty=Tensor[(10, 2, 1), float64] */;
  %526 = %522.0;
  %527 = %523.0;
  (%524, %525, %var_6379, %526, %527)
}

def @func_7054(%var_7034: Tensor[(16, 12, 10), int64], %var_7035: Tensor[(16, 12, 10), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %528 = cast(%var_7035, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %529 = shape_of(%var_7034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_7034, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %533 = equal(%530, %531) /* ty=Tensor[(16, 12, 10), bool] */;
  %534 = %532.0;
  %535 = @func_5466() /* ty=Tensor[(11, 4, 11), float32] */;
  (%533, %534, %535)
}

def @func_5890(%var_5866: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), float64] {
  %536 = @func_5003() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %537 = %536.0;
  %538 = cast(%var_5866, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  multiply(%540, %541) /* ty=Tensor[(11, 4, 11), float64] */
}

def @func_5003() -> (Tensor[(11, 4, 11), float32],) {
  %542 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  (%542,)
}

def @func_8049() -> (Tensor[(11, 4, 11), float32],) {
  %543 = @func_7016() /* ty=Tensor[(11, 4, 11), float32] */;
  (%543,)
}

def @func_8307(%var_8302: Tensor[(780), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) {
  %544 = @func_7434() /* ty=(Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %545 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %546 = reshape(%545, newshape=[8, 3, 10]) /* ty=Tensor[(8, 3, 10), float64] */;
  %547 = cast(%var_8302, dtype="float64") /* ty=Tensor[(780), float64] */;
  %548 = cast(%var_8302, dtype="float64") /* ty=Tensor[(780), float64] */;
  %549 = reshape(%547, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float64] */;
  %550 = reshape(%548, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float64] */;
  %551 = @func_3314(%549, %550) /* ty=(Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %552 = %544.2;
  %553 = @func_1390(%546) /* ty=Tensor[(8, 3, 10), float64] */;
  %554 = %551.1;
  (%552, %553, meta[relay.Constant][28] /* ty=Tensor[(240), float64] */, %554, %var_8302)
}

def @func_4174() -> (Tensor[(11, 4, 11), float32],) {
  %555 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %556 = %555.0;
  (%556,)
}

def @func_8434(%var_8425: Tensor[(13, 13, 2), uint16], %var_8426: Tensor[(13, 13, 2), uint16]) -> Tensor[(13, 13, 2), bool] {
  %557 = cast(%var_8426, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %558 = shape_of(%var_8425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_8425, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%559, %560) /* ty=Tensor[(13, 13, 2), bool] */
}

def @func_4978(%var_4958: Tensor[(12, 7, 15), float64]) -> (Tensor[(12, 7, 15), uint16], Tensor[(12, 7, 15), float32]) {
  %561 = cast(%var_4958, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
  %562 = cosh(%561) /* ty=Tensor[(12, 7, 15), float64] */;
  %563 = cast(%var_4958, dtype="uint16") /* ty=Tensor[(12, 7, 15), uint16] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="uint16") /* ty=Tensor[(12, 7, 15), uint16] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %567 = cast(%var_4958, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %568 = minimum(%565, %566) /* ty=Tensor[(12, 7, 15), uint16] */;
  %569 = sin(%567) /* ty=Tensor[(12, 7, 15), float32] */;
  (%568, %569)
}

def @func_6860() -> (Tensor[(11, 4, 11), float32],) {
  %570 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %571 = %570.0;
  (%571,)
}

def @func_5466() -> Tensor[(11, 4, 11), float32] {
  %572 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %572.0
}

def @func_3918() -> Tensor[(11, 4, 11), bool] {
  %573 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %573.0
}

def @func_2935(%var_2910: Tensor[(9, 7, 16), uint64], %var_2911: Tensor[(9, 7, 16), uint64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) {
  %574 = cast(%var_2911, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
  %575 = shape_of(%var_2910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_2910, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %578 = cast(%var_2911, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
  %579 = minimum(%576, %577) /* ty=Tensor[(9, 7, 16), uint64] */;
  %580 = erf(%578) /* ty=Tensor[(9, 7, 16), float32] */;
  (%579, %580)
}

def @func_3601() -> (Tensor[(7, 4), float64],) {
  %581 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %582 = cos(%581) /* ty=Tensor[(7, 4), float64] */;
  (%582,)
}

def @func_5170(%var_5138: Tensor[(9, 15, 16), float32], %var_5139: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(11, 4, 11), float32], Tensor[(9, 15, 16), bool]) {
  %583 = cast(%var_5139, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %584 = shape_of(%var_5138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%var_5138, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %587 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %588 = cast(%var_5138, dtype="bool") /* ty=Tensor[(9, 15, 16), bool] */;
  %589 = shape_of(%var_5139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_5139, dtype="bool") /* ty=Tensor[(9, 15, 16), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = floor_mod(%585, %586) /* ty=Tensor[(9, 15, 16), float32] */;
  %593 = %587.0;
  %594 = greater_equal(%590, %591) /* ty=Tensor[(9, 15, 16), bool] */;
  (%592, %593, %594)
}

def @func_3511() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
  %595 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %596 = %595.0;
  %597 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %598 = cast(%597, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %599 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%596, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %602 = cast(%597, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %603 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%596, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %606 = less(%600, %601) /* ty=Tensor[(11, 4, 11), bool] */;
  %607 = divide(%604, %605) /* ty=Tensor[(11, 4, 11), float64] */;
  (%606, %607)
}

def @func_4451(%var_4426: Tensor[(468), int16]) -> (Tensor[(468), int16], Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
  %608 = cast(%var_4426, dtype="int16") /* ty=Tensor[(468), int16] */;
  %609 = reshape(%608, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %610 = @func_3953(%609) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */;
  %611 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %612 = %611.0;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %614 = %610.1;
  %615 = exp(%613) /* ty=Tensor[(11, 4, 11), float32] */;
  (%614, %var_4426, %615)
}

def @func_7196(%var_7181: Tensor[(8, 11, 13), float32]) -> (Tensor[(8, 11, 13), float32],) {
  %616 = cast(%var_7181, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %617 = log10(%616) /* ty=Tensor[(8, 11, 13), float32] */;
  (%617,)
}

def @func_4332() -> Tensor[(11, 4, 11), float32] {
  %618 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %618.0
}

def @func_6510(%var_6504: Tensor[(1232), bool]) -> (Tensor[(11, 4, 11), float32], Tensor[(484), bool], Tensor[(1232), bool]) {
  %619 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %620 = cast(meta[relay.Constant][30] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %621 = cast(meta[relay.Constant][30] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %622 = %619.0;
  %623 = cast(%622, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %624 = reshape(%620, newshape=[16, 11, 7]) /* ty=Tensor[(16, 11, 7), bool] */;
  %625 = reshape(%621, newshape=[16, 11, 7]) /* ty=Tensor[(16, 11, 7), bool] */;
  %626 = reshape(%623, newshape=[484]) /* ty=Tensor[(484), bool] */;
  %627 = @func_6321(%624, %625, %626) /* ty=(Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) */;
  %628 = cast(%var_6504, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %629 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(1232), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %630 = cast(meta[relay.Constant][30] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?), bool] */;
  %632 = %627.3;
  %633 = logical_and(%630, %631) /* ty=Tensor[(1232), bool] */;
  (%622, %632, %633)
}

def @func_4691() -> Tensor[(11, 4, 11), float32] {
  @func_2710() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_7642(%var_7627: Tensor[(11, 4, 11), float32]) -> (Tensor[(11, 4, 11), float64],) {
  %634 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %635 = %634.0;
  %636 = cast(%var_7627, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %640 = power(%638, %639) /* ty=Tensor[(11, 4, 11), float64] */;
  (%640,)
}

def @func_2167(%var_2151: Tensor[(11, 12, 15), float32]) -> (Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) {
  %641 = cast(%var_2151, dtype="float32") /* ty=Tensor[(11, 12, 15), float32] */;
  %642 = cast(meta[relay.Constant][31] /* ty=Tensor[(162, 4), uint32] */, dtype="uint32") /* ty=Tensor[(162, 4), uint32] */;
  %643 = reshape(%642, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %644 = log(%641) /* ty=Tensor[(11, 12, 15), float32] */;
  %645 = @func_1961(%643) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%644, %645, meta[relay.Constant][31] /* ty=Tensor[(162, 4), uint32] */)
}

def @func_6574() -> Tensor[(40), int64] {
  %646 = @func_5963() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) */;
  %647 = %646.2;
  %648 = cast(meta[relay.Constant][32] /* ty=Tensor[(40), bool] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(1), int32] */;
  %650 = cast(%647, dtype="int64") /* ty=Tensor[(40), int64] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?), int64] */;
  left_shift(%650, %651) /* ty=Tensor[(40), int64] */
}

def @func_6703() -> (Tensor[(7, 6, 5), float32],) {
  %652 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %653 = asin(%652) /* ty=Tensor[(7, 6, 5), float32] */;
  (%653,)
}

def @func_3953(%var_3947: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
  %654 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %657 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 108), uint32] */, dtype="uint32") /* ty=Tensor[(6, 108), uint32] */;
  %658 = cast(meta[relay.Constant][35] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %659 = cast(%var_3947, dtype="int16") /* ty=Tensor[(468), int16] */;
  %660 = reshape(%656, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %661 = reshape(%657, newshape=[54, 12]) /* ty=Tensor[(54, 12), uint32] */;
  %662 = reshape(%658, newshape=[]) /* ty=int16 */;
  %663 = reshape(%659, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %664 = @func_2857(%660, %661, %662, %663) /* ty=(Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) */;
  %665 = %664.4;
  %666 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
  (%655, %665, meta[relay.Constant][34] /* ty=Tensor[(6, 108), uint32] */, meta[relay.Constant][35] /* ty=int16 */, %var_3947, %666)
}

def @func_5600() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %667 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %668 = @func_4691() /* ty=Tensor[(11, 4, 11), float32] */;
  %669 = %667.0;
  (%668, %669)
}

def @func_1961(%var_1956: Tensor[(8, 9, 9), uint32]) -> Tensor[(8, 9, 9), uint32] {
  %670 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 9, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 9), uint32] */;
  %671 = shape_of(%var_1956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_1956, dtype="uint32") /* ty=Tensor[(8, 9, 9), uint32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%672, %673) /* ty=Tensor[(8, 9, 9), uint32] */
}

def @func_3683() -> (Tensor[(11, 4, 11), float32],) {
  %674 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %675 = %674.0;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %677 = erf(%676) /* ty=Tensor[(11, 4, 11), float32] */;
  (%677,)
}

def @func_7576() -> Tensor[(11, 4, 11), float32] {
  %678 = @func_4680() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %678.0
}

def @func_7769() -> (Tensor[(11, 4, 11), bool], Tensor[(15, 16, 13), uint8], Tensor[(11, 4, 11), float32], Tensor[(560, 1), float32]) {
  %679 = @func_5699() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %680 = cast(meta[relay.Constant][37] /* ty=Tensor[(560, 1), uint32] */, dtype="uint32") /* ty=Tensor[(560, 1), uint32] */;
  %681 = cast(meta[relay.Constant][37] /* ty=Tensor[(560, 1), uint32] */, dtype="uint32") /* ty=Tensor[(560, 1), uint32] */;
  %682 = %679.0;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %684 = reshape(%680, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), uint32] */;
  %685 = reshape(%681, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), uint32] */;
  %686 = reshape(%683, newshape=[484]) /* ty=Tensor[(484), float32] */;
  %687 = @func_4941(%684, %685, %686) /* ty=(Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) */;
  %688 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %689 = cast(meta[relay.Constant][37] /* ty=Tensor[(560, 1), uint32] */, dtype="float32") /* ty=Tensor[(560, 1), float32] */;
  %690 = %687.1;
  %691 = %688.0;
  %692 = log(%689) /* ty=Tensor[(560, 1), float32] */;
  (%682, %690, %691, %692)
}

def @func_3820() -> (Tensor[(11, 4, 11), float32],) {
  %693 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %694 = %693.0;
  (%694,)
}

def @func_8975() -> Tensor[(11, 4, 11), float32] {
  %695 = @func_7308() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
  %695.0
}

def @func_2662() -> (Tensor[(11, 4, 11), float32],) {
  %696 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %697 = sqrt(%696) /* ty=Tensor[(11, 4, 11), float32] */;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %699 = cos(%698) /* ty=Tensor[(11, 4, 11), float32] */;
  (%699,)
}

def @func_5028() -> (Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %700 = @func_4240() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
  %701 = cast(meta[relay.Constant][39] /* ty=Tensor[(648), uint32] */, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %702 = reshape(%701, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %703 = %700.0;
  %704 = @func_1961(%702) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%703, %704, meta[relay.Constant][39] /* ty=Tensor[(648), uint32] */)
}

def @func_3220(%var_3192: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), bool] {
  %705 = @func_3047() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %706 = %705.0;
  %707 = cast(%var_3192, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%709, %710) /* ty=Tensor[(11, 4, 11), bool] */
}

def @func_8995(%var_8985: Tensor[(11, 11, 9), uint32], %var_8986: Tensor[(11, 11, 9), uint32]) -> Tensor[(11, 11, 9), uint32] {
  %711 = cast(%var_8986, dtype="uint32") /* ty=Tensor[(11, 11, 9), uint32] */;
  %712 = shape_of(%var_8985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_8985, dtype="uint32") /* ty=Tensor[(11, 11, 9), uint32] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%713, %714) /* ty=Tensor[(11, 11, 9), uint32] */
}

def @func_8788(%var_8757: Tensor[(1, 5, 2), float32]) -> (Tensor[(40), int64], Tensor[(?, 5, 2), bool]) {
  %715 = cast(%var_8757, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
  %716 = sqrt(%715) /* ty=Tensor[(1, 5, 2), float32] */;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
  %718 = tan(%717) /* ty=Tensor[(1, 5, 2), float32] */;
  %719 = cast(%716, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%718, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %723 = bitwise_and(%721, %722) /* ty=Tensor[(?, 5, 2), int64] */;
  %724 = cast(%723, dtype="bool") /* ty=Tensor[(?, 5, 2), bool] */;
  %725 = shape_of(%var_8757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%var_8757, dtype="bool") /* ty=Tensor[(1, 5, 2), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = @func_6574() /* ty=Tensor[(40), int64] */;
  %729 = less(%726, %727) /* ty=Tensor[(?, 5, 2), bool] */;
  (%728, %729)
}

def @func_8265() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(10, 4), bool], Tensor[(40), bool], Tensor[(2, 12, 10), float32]) {
  %730 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %731 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %732 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %733 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %734 = reshape(%732, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %735 = reshape(%733, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %736 = @func_2429(%734, %735) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
  %737 = @func_5845() /* ty=(Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) */;
  %738 = %730.0;
  %739 = %731.0;
  %740 = %736.0;
  %741 = %737.1;
  (%738, %739, %740, meta[relay.Constant][40] /* ty=Tensor[(40), bool] */, %741)
}

def @func_8805() -> Tensor[(64), float32] {
  %742 = @func_8117() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) */;
  %742.3
}

def @func_3540() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %743 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %745 = reshape(%744, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %746 = @func_3220(%745) /* ty=Tensor[(11, 4, 11), bool] */;
  (%743, %746)
}

def @func_6975(%var_6961: Tensor[(11, 10, 16), int16], %var_6962: Tensor[(11, 10, 16), int16]) -> Tensor[(11, 10, 16), int16] {
  %747 = cast(%var_6962, dtype="int16") /* ty=Tensor[(11, 10, 16), int16] */;
  %748 = shape_of(%var_6961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_6961, dtype="int16") /* ty=Tensor[(11, 10, 16), int16] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%749, %750) /* ty=Tensor[(11, 10, 16), int16] */
}

def @func_7829() -> (Tensor[(11, 4, 11), float32],) {
  %751 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %752 = %751.0;
  (%752,)
}

def @func_4941(%var_4919: Tensor[(4, 10, 14), uint32], %var_4920: Tensor[(4, 10, 14), uint32], %var_4934: Tensor[(484), float32]) -> (Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) {
  %753 = cast(%var_4920, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %754 = shape_of(%var_4919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%var_4919, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %757 = cast(meta[relay.Constant][41] /* ty=Tensor[(3120), float64] */, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %758 = reshape(%757, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
  %759 = @func_2786(%758) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) */;
  %760 = cast(%var_4934, dtype="float32") /* ty=Tensor[(484), float32] */;
  %761 = reshape(%760, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %762 = cast(%var_4919, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %763 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %764 = maximum(%755, %756) /* ty=Tensor[(4, 10, 14), uint32] */;
  %765 = %759.1;
  %766 = @func_3220(%761) /* ty=Tensor[(11, 4, 11), bool] */;
  %767 = rsqrt(%762) /* ty=Tensor[(4, 10, 14), float32] */;
  %768 = %763.0;
  (%764, %765, meta[relay.Constant][41] /* ty=Tensor[(3120), float64] */, %766, %var_4934, %767, %768)
}

def @func_3106() -> (Tensor[(11, 4, 11), bool],) {
  %769 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %772 = asinh(%771) /* ty=Tensor[(11, 4, 11), float32] */;
  %773 = cast(%770, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %774 = sigmoid(%773) /* ty=Tensor[(11, 4, 11), float64] */;
  %775 = cast(%774, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %776 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%772, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = equal(%777, %778) /* ty=Tensor[(11, 4, 11), bool] */;
  (%779,)
}

def @func_4680() -> (Tensor[(11, 4, 11), float32],) {
  %780 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  (%780,)
}

def @func_8583() -> (Tensor[(11, 4, 11), float32],) {
  %781 = @func_7308() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
  %782 = %781.0;
  (%782,)
}

def @func_5126() -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) {
  %783 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %784 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %785 = reshape(%784, newshape=[]) /* ty=int16 */;
  %786 = @func_4486(%785) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) */;
  %787 = %783.0;
  %788 = %786.3;
  (%787, %788, meta[relay.Constant][42] /* ty=int16 */)
}

def @func_5963() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) {
  %789 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %790 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %791 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %792 = reshape(%790, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %793 = reshape(%791, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %794 = @func_2429(%792, %793) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
  %795 = %789.1;
  %796 = %794.1;
  (%795, %796, meta[relay.Constant][43] /* ty=Tensor[(40), bool] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8051() -> (Tensor[(11, 4, 11), float32],) {
  @func_8049() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_8119() -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) {
  @func_8117() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) */
}

def @func_3222(%var_3221: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), bool] {
  %6 = fn (%var_3192: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), bool] {
    %0 = @func_3047() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %1 = %0.0;
    %2 = cast(%var_3192, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%4, %5) /* ty=Tensor[(11, 4, 11), bool] */
  };
  %6(%var_3221) /* ty=Tensor[(11, 4, 11), bool] */
}

def @func_6254() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %11 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
    %7 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %8 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %9 = %7.0;
    %10 = %8.1;
    (%9, %10)
  };
  %11() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_7133(%var_7131: Tensor[(484, 1), bool]) -> (int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) {
  %12 = @func_5126() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) */;
  %13 = cast(%var_7131, dtype="bool") /* ty=Tensor[(484, 1), bool] */;
  %14 = reshape(%13, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %15 = @func_3753(%14) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %16 = %12.2;
  %17 = %15.0;
  (%16, %17, %var_7131)
}

def @func_8584() -> (Tensor[(11, 4, 11), float32],) {
  %20 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %18 = @func_7308() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
    %19 = %18.0;
    (%19,)
  };
  %20() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_5726(%var_5724: Tensor[(1008), uint64]) -> (int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  @func_5723(%var_5724) /* ty=(int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */
}

def @func_2167(%var_2151: Tensor[(11, 12, 15), float32]) -> (Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) {
  %21 = cast(%var_2151, dtype="float32") /* ty=Tensor[(11, 12, 15), float32] */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(162, 4), uint32] */, dtype="uint32") /* ty=Tensor[(162, 4), uint32] */;
  %23 = reshape(%22, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %24 = log(%21) /* ty=Tensor[(11, 12, 15), float32] */;
  %25 = @func_1961(%23) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%24, %25, meta[relay.Constant][0] /* ty=Tensor[(162, 4), uint32] */)
}

def @func_3850() -> Tensor[(11, 4, 11), float32] {
  @func_3848() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_7789(%var_7787: Tensor[(4, 12, 5), uint8], %var_7788: Tensor[(4, 12, 5), uint8]) -> (Tensor[(4, 12, 5), uint8],) {
  %31 = fn (%var_7778: Tensor[(4, 12, 5), uint8], %var_7779: Tensor[(4, 12, 5), uint8]) -> (Tensor[(4, 12, 5), uint8],) {
    %26 = cast(%var_7779, dtype="uint8") /* ty=Tensor[(4, 12, 5), uint8] */;
    %27 = shape_of(%var_7778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%var_7778, dtype="uint8") /* ty=Tensor[(4, 12, 5), uint8] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %30 = add(%28, %29) /* ty=Tensor[(4, 12, 5), uint8] */;
    (%30,)
  };
  %31(%var_7787, %var_7788) /* ty=(Tensor[(4, 12, 5), uint8],) */
}

def @func_6978(%var_6976: Tensor[(11, 10, 16), int16], %var_6977: Tensor[(11, 10, 16), int16]) -> Tensor[(11, 10, 16), int16] {
  %36 = fn (%var_6961: Tensor[(11, 10, 16), int16], %var_6962: Tensor[(11, 10, 16), int16]) -> Tensor[(11, 10, 16), int16] {
    %32 = cast(%var_6962, dtype="int16") /* ty=Tensor[(11, 10, 16), int16] */;
    %33 = shape_of(%var_6961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%var_6961, dtype="int16") /* ty=Tensor[(11, 10, 16), int16] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%34, %35) /* ty=Tensor[(11, 10, 16), int16] */
  };
  %36(%var_6976, %var_6977) /* ty=Tensor[(11, 10, 16), int16] */
}

def @func_5847() -> (Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) {
  @func_5845() /* ty=(Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) */
}

def @func_7769() -> (Tensor[(11, 4, 11), bool], Tensor[(15, 16, 13), uint8], Tensor[(11, 4, 11), float32], Tensor[(560, 1), float32]) {
  %37 = @func_5699() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(560, 1), uint32] */, dtype="uint32") /* ty=Tensor[(560, 1), uint32] */;
  %39 = cast(meta[relay.Constant][1] /* ty=Tensor[(560, 1), uint32] */, dtype="uint32") /* ty=Tensor[(560, 1), uint32] */;
  %40 = %37.0;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %42 = reshape(%38, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), uint32] */;
  %43 = reshape(%39, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), uint32] */;
  %44 = reshape(%41, newshape=[484]) /* ty=Tensor[(484), float32] */;
  %45 = @func_4941(%42, %43, %44) /* ty=(Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) */;
  %46 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(560, 1), uint32] */, dtype="float32") /* ty=Tensor[(560, 1), float32] */;
  %48 = %45.1;
  %49 = %46.0;
  %50 = log(%47) /* ty=Tensor[(560, 1), float32] */;
  (%40, %48, %49, %50)
}

def @func_7237() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_7235() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_1296(%var_1264: Tensor[(10, 12, 3), float64]) -> (Tensor[(13, 9, 4), int16], Tensor[(468), int16], Tensor[(10, 12, 3), uint32], Tensor[(13, 9, 4), int16]) {
  %51 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %53 = reshape(%51, newshape=[]) /* ty=int16 */;
  %54 = reshape(%52, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %55 = @func_1132(%53, %54) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %56 = cast(%var_1264, dtype="float64") /* ty=Tensor[(10, 12, 3), float64] */;
  %57 = sin(%56) /* ty=Tensor[(10, 12, 3), float64] */;
  %58 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %59 = cast(%57, dtype="uint32") /* ty=Tensor[(10, 12, 3), uint32] */;
  %60 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %62 = reshape(%60, newshape=[]) /* ty=int16 */;
  %63 = reshape(%61, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %64 = @func_1132(%62, %63) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %65 = %55.0;
  %66 = minimum(%58, %59) /* ty=Tensor[(10, 12, 3), uint32] */;
  %67 = %64.0;
  (%65, meta[relay.Constant][3] /* ty=Tensor[(468), int16] */, %66, %67)
}

def @func_3822() -> (Tensor[(11, 4, 11), float32],) {
  @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_3407() -> (Tensor[(11, 4, 11), float32],) {
  @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_6321(%var_6285: Tensor[(16, 11, 7), bool], %var_6286: Tensor[(16, 11, 7), bool], %var_6315: Tensor[(484), bool]) -> (Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) {
  %68 = cast(%var_6286, dtype="bool") /* ty=Tensor[(16, 11, 7), bool] */;
  %69 = shape_of(%var_6285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_6285, dtype="bool") /* ty=Tensor[(16, 11, 7), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %72 = logical_or(%70, %71) /* ty=Tensor[(16, 11, 7), bool] */;
  %73 = cast(%72, dtype="float64") /* ty=Tensor[(16, 11, 7), float64] */;
  %74 = cast(%var_6286, dtype="float64") /* ty=Tensor[(16, 11, 7), float64] */;
  %75 = cast(%var_6315, dtype="bool") /* ty=Tensor[(484), bool] */;
  %76 = reshape(%75, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
  %77 = @func_3753(%76) /* ty=(Tensor[(11, 4, 11), uint16],) */;
  %78 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %79 = cos(%73) /* ty=Tensor[(16, 11, 7), float64] */;
  %80 = log10(%74) /* ty=Tensor[(16, 11, 7), float64] */;
  %81 = %77.0;
  %82 = %78.0;
  (%79, %80, %81, %var_6315, %82)
}

def @func_7196(%var_7181: Tensor[(8, 11, 13), float32]) -> (Tensor[(8, 11, 13), float32],) {
  %83 = cast(%var_7181, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %84 = log10(%83) /* ty=Tensor[(8, 11, 13), float32] */;
  (%84,)
}

def @func_3049() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_3047() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_7057(%var_7055: Tensor[(16, 12, 10), int64], %var_7056: Tensor[(16, 12, 10), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %93 = fn (%var_7034: Tensor[(16, 12, 10), int64], %var_7035: Tensor[(16, 12, 10), int64]) -> (Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
    %85 = cast(%var_7035, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
    %86 = shape_of(%var_7034, dtype="int32") /* ty=Tensor[(3), int32] */;
    %87 = cast(%var_7034, dtype="bool") /* ty=Tensor[(16, 12, 10), bool] */;
    %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %89 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %90 = equal(%87, %88) /* ty=Tensor[(16, 12, 10), bool] */;
    %91 = %89.0;
    %92 = @func_5466() /* ty=Tensor[(11, 4, 11), float32] */;
    (%90, %91, %92)
  };
  %93(%var_7055, %var_7056) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_4693() -> Tensor[(11, 4, 11), float32] {
  @func_4691() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_6598() -> Tensor[(11, 4, 11), float32] {
  %94 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %94.0
}

def @func_5936() -> (Tensor[(5, 4), float64], Tensor[(9, 7, 16), uint64], Tensor[(2, 504), uint64]) {
  %101 = fn () -> (Tensor[(5, 4), float64], Tensor[(9, 7, 16), uint64], Tensor[(2, 504), uint64]) {
    %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
    %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 504), uint64] */, dtype="uint64") /* ty=Tensor[(2, 504), uint64] */;
    %97 = reshape(%96, newshape=[1008]) /* ty=Tensor[(1008), uint64] */;
    %98 = @func_5723(%97) /* ty=(int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */;
    %99 = log2(%95) /* ty=Tensor[(5, 4), float64] */;
    %100 = %98.1;
    (%99, %100, meta[relay.Constant][5] /* ty=Tensor[(2, 504), uint64] */)
  };
  %101() /* ty=(Tensor[(5, 4), float64], Tensor[(9, 7, 16), uint64], Tensor[(2, 504), uint64]) */
}

def @func_3785() -> Tensor[(11, 4, 11), uint64] {
  @func_3783() /* ty=Tensor[(11, 4, 11), uint64] */
}

def @main() -> Tensor[(11, 4, 11), float32] {
  %102 = @func_4278() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %103 = %102.0;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  log2(%104) /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_6600() -> Tensor[(11, 4, 11), float32] {
  @func_6598() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_8378(%var_8376: Tensor[(11, 4, 11), uint64], %var_8377: Tensor[(1920), int64]) -> (Tensor[(11, 4, 11), int16], Tensor[(11, 4, 11), float32], Tensor[(1920), int64]) {
  %118 = fn (%var_8356: Tensor[(11, 4, 11), uint64], %var_8362: Tensor[(1920), int64]) -> (Tensor[(11, 4, 11), int16], Tensor[(11, 4, 11), float32], Tensor[(1920), int64]) {
    %105 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
    %106 = %105.0;
    %107 = cast(%var_8356, dtype="int16") /* ty=Tensor[(11, 4, 11), int16] */;
    %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
    %109 = cast(%106, dtype="int16") /* ty=Tensor[(11, 4, 11), int16] */;
    %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %111 = cast(%var_8362, dtype="int64") /* ty=Tensor[(1920), int64] */;
    %112 = cast(%var_8362, dtype="int64") /* ty=Tensor[(1920), int64] */;
    %113 = reshape(%111, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), int64] */;
    %114 = reshape(%112, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), int64] */;
    %115 = @func_7054(%113, %114) /* ty=(Tensor[(16, 12, 10), bool], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %116 = left_shift(%109, %110) /* ty=Tensor[(11, 4, 11), int16] */;
    %117 = %115.2;
    (%116, %117, %var_8362)
  };
  %118(%var_8376, %var_8377) /* ty=(Tensor[(11, 4, 11), int16], Tensor[(11, 4, 11), float32], Tensor[(1920), int64]) */
}

def @func_4453(%var_4452: Tensor[(468), int16]) -> (Tensor[(468), int16], Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
  %127 = fn (%var_4426: Tensor[(468), int16]) -> (Tensor[(468), int16], Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
    %119 = cast(%var_4426, dtype="int16") /* ty=Tensor[(468), int16] */;
    %120 = reshape(%119, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %121 = @func_3953(%120) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */;
    %122 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %123 = %122.0;
    %124 = cast(%123, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %125 = %121.1;
    %126 = exp(%124) /* ty=Tensor[(11, 4, 11), float32] */;
    (%125, %var_4426, %126)
  };
  %127(%var_4452) /* ty=(Tensor[(468), int16], Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */
}

def @func_8035() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_8033() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_3638() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %133 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
    %128 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %129 = %128.0;
    %130 = cast(%129, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %131 = reshape(%130, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
    %132 = @func_3220(%131) /* ty=Tensor[(11, 4, 11), bool] */;
    (%129, %132)
  };
  %133() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_6512(%var_6511: Tensor[(1232), bool]) -> (Tensor[(11, 4, 11), float32], Tensor[(484), bool], Tensor[(1232), bool]) {
  %149 = fn (%var_6504: Tensor[(1232), bool]) -> (Tensor[(11, 4, 11), float32], Tensor[(484), bool], Tensor[(1232), bool]) {
    %134 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
    %136 = cast(meta[relay.Constant][6] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
    %137 = %134.0;
    %138 = cast(%137, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %139 = reshape(%135, newshape=[16, 11, 7]) /* ty=Tensor[(16, 11, 7), bool] */;
    %140 = reshape(%136, newshape=[16, 11, 7]) /* ty=Tensor[(16, 11, 7), bool] */;
    %141 = reshape(%138, newshape=[484]) /* ty=Tensor[(484), bool] */;
    %142 = @func_6321(%139, %140, %141) /* ty=(Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) */;
    %143 = cast(%var_6504, dtype="bool") /* ty=Tensor[(1232), bool] */;
    %144 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(1232), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), bool] */;
    %147 = %142.3;
    %148 = logical_and(%145, %146) /* ty=Tensor[(1232), bool] */;
    (%137, %147, %148)
  };
  %149(%var_6511) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(484), bool], Tensor[(1232), bool]) */
}

def @func_5127() -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) {
  %156 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) {
    %150 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %151 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %152 = reshape(%151, newshape=[]) /* ty=int16 */;
    %153 = @func_4486(%152) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) */;
    %154 = %150.0;
    %155 = %153.3;
    (%154, %155, meta[relay.Constant][7] /* ty=int16 */)
  };
  %156() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], int16) */
}

def @func_7114() -> (Tensor[(11, 4, 11), float32],) {
  %158 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %157 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
    (%157,)
  };
  %158() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_8644() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %159 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %160 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %161 = @func_4691() /* ty=Tensor[(11, 4, 11), float32] */;
  %162 = %159.0;
  %163 = @func_5466() /* ty=Tensor[(11, 4, 11), float32] */;
  (%160, %161, %162, %163)
}

def @func_6395(%var_6393: Tensor[(20), float64]) -> (Tensor[(7, 9, 3), float64], Tensor[(10, 2, 1), float64], Tensor[(20), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  @func_6392(%var_6393) /* ty=(Tensor[(7, 9, 3), float64], Tensor[(10, 2, 1), float64], Tensor[(20), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_6326(%var_6323: Tensor[(16, 11, 7), bool], %var_6324: Tensor[(16, 11, 7), bool], %var_6325: Tensor[(484), bool]) -> (Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) {
  @func_6321(%var_6323, %var_6324, %var_6325) /* ty=(Tensor[(16, 11, 7), float64], Tensor[(16, 11, 7), float64], Tensor[(11, 4, 11), uint16], Tensor[(484), bool], Tensor[(11, 4, 11), float32]) */
}

def @func_4615() -> (Tensor[(7, 4), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), uint16]) {
  %174 = fn () -> (Tensor[(7, 4), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), uint16]) {
    %164 = @func_3601() /* ty=(Tensor[(7, 4), float64],) */;
    %165 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %166 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
    %167 = %165.0;
    %168 = cast(%167, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %169 = reshape(%168, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
    %170 = @func_3753(%169) /* ty=(Tensor[(11, 4, 11), uint16],) */;
    %171 = %164.0;
    %172 = %166.1;
    %173 = %170.0;
    (%171, %167, %172, %173)
  };
  %174() /* ty=(Tensor[(7, 4), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), uint16]) */
}

def @func_5602() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_5600() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_1136(%var_1134: int16, %var_1135: Tensor[(13, 9, 4), int16]) -> (Tensor[(13, 9, 4), int16],) {
  @func_1132(%var_1134, %var_1135) /* ty=(Tensor[(13, 9, 4), int16],) */
}

def @func_5600() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %175 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %176 = @func_4691() /* ty=Tensor[(11, 4, 11), float32] */;
  %177 = %175.0;
  (%176, %177)
}

def @func_1884(%var_1883: Tensor[(2, 4, 11), float32]) -> Tensor[(2, 4, 11), float32] {
  %179 = fn (%var_1874: Tensor[(2, 4, 11), float32]) -> Tensor[(2, 4, 11), float32] {
    %178 = cast(%var_1874, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
    exp(%178) /* ty=Tensor[(2, 4, 11), float32] */
  };
  %179(%var_1883) /* ty=Tensor[(2, 4, 11), float32] */
}

def @func_4691() -> Tensor[(11, 4, 11), float32] {
  @func_2710() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_4946(%var_4943: Tensor[(4, 10, 14), uint32], %var_4944: Tensor[(4, 10, 14), uint32], %var_4945: Tensor[(484), float32]) -> (Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) {
  @func_4941(%var_4943, %var_4944, %var_4945) /* ty=(Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_5575() -> (int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) {
  %193 = fn () -> (int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) {
    %180 = cast(meta[relay.Constant][8] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %181 = reshape(%180, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %182 = @func_3953(%181) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */;
    %183 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
    %184 = cast(%183, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %185 = reshape(%184, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
    %186 = @func_3753(%185) /* ty=(Tensor[(11, 4, 11), uint16],) */;
    %187 = cast(%183, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %188 = log10(%187) /* ty=Tensor[(11, 4, 11), float32] */;
    %189 = cast(%188, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %190 = %182.3;
    %191 = %186.0;
    %192 = atanh(%189) /* ty=Tensor[(11, 4, 11), float64] */;
    (%190, meta[relay.Constant][8] /* ty=Tensor[(468), int16] */, %191, %192)
  };
  %193() /* ty=(int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) */
}

def @func_4241() -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %202 = fn () -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
    %194 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %195 = %194.0;
    %196 = cast(%195, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %197 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %198 = @func_4064() /* ty=(Tensor[(11, 4, 11), float64],) */;
    %199 = acos(%196) /* ty=Tensor[(11, 4, 11), float64] */;
    %200 = %197.0;
    %201 = %198.0;
    (%199, %200, %201)
  };
  %202() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_8999(%var_8997: Tensor[(11, 11, 9), uint32], %var_8998: Tensor[(11, 11, 9), uint32]) -> Tensor[(11, 11, 9), uint32] {
  @func_8995(%var_8997, %var_8998) /* ty=Tensor[(11, 11, 9), uint32] */
}

def @func_7136(%var_7134: Tensor[(484, 1), bool]) -> (int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) {
  @func_7133(%var_7134) /* ty=(int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) */
}

def @func_9033(%var_9019: Tensor[(4, 10), int64]) -> (Tensor[(4, 10), int64], Tensor[(11, 4, 11), uint64]) {
  %203 = cast(%var_9019, dtype="int64") /* ty=Tensor[(4, 10), int64] */;
  %204 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(4, 10), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %205 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 10), int64] */, dtype="int64") /* ty=Tensor[(4, 10), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %207 = bitwise_or(%205, %206) /* ty=Tensor[(4, 10), int64] */;
  %208 = @func_3783() /* ty=Tensor[(11, 4, 11), uint64] */;
  (%207, %208)
}

def @func_8960(%var_8958: Tensor[(468), int16], %var_8959: Tensor[(3, 15, 9), float64]) -> (Tensor[(1, 648), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32], Tensor[(3, 15, 9), float64], Tensor[(3, 15, 9), int16], Tensor[(3, 15, 9), int16]) {
  @func_8956(%var_8958, %var_8959) /* ty=(Tensor[(1, 648), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32], Tensor[(3, 15, 9), float64], Tensor[(3, 15, 9), int16], Tensor[(3, 15, 9), int16]) */
}

def @func_6860() -> (Tensor[(11, 4, 11), float32],) {
  %209 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %210 = %209.0;
  (%210,)
}

def @func_2683() -> (Tensor[(11, 4, 11), float32],) {
  @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_8117() -> (Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) {
  %211 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %214 = reshape(%212, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float32] */;
  %215 = reshape(%213, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), float32] */;
  %216 = @func_7357(%214, %215) /* ty=(Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) */;
  %217 = @func_6428() /* ty=Tensor[(11, 4, 11), float64] */;
  %218 = %211.0;
  %219 = %216.2;
  (%217, %218, %219, meta[relay.Constant][10] /* ty=Tensor[(64), float32] */, meta[relay.Constant][11] /* ty=Tensor[(832), float32] */)
}

def @func_1390(%var_1386: Tensor[(8, 3, 10), float64]) -> Tensor[(8, 3, 10), float64] {
  %220 = cast(%var_1386, dtype="float64") /* ty=Tensor[(8, 3, 10), float64] */;
  acos(%220) /* ty=Tensor[(8, 3, 10), float64] */
}

def @func_4681() -> (Tensor[(11, 4, 11), float32],) {
  %222 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %221 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
    (%221,)
  };
  %222() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_8049() -> (Tensor[(11, 4, 11), float32],) {
  %223 = @func_7016() /* ty=Tensor[(11, 4, 11), float32] */;
  (%223,)
}

def @func_8307(%var_8302: Tensor[(780), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) {
  %224 = @func_7434() /* ty=(Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %225 = cast(meta[relay.Constant][12] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %226 = reshape(%225, newshape=[8, 3, 10]) /* ty=Tensor[(8, 3, 10), float64] */;
  %227 = cast(%var_8302, dtype="float64") /* ty=Tensor[(780), float64] */;
  %228 = cast(%var_8302, dtype="float64") /* ty=Tensor[(780), float64] */;
  %229 = reshape(%227, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float64] */;
  %230 = reshape(%228, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), float64] */;
  %231 = @func_3314(%229, %230) /* ty=(Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %232 = %224.2;
  %233 = @func_1390(%226) /* ty=Tensor[(8, 3, 10), float64] */;
  %234 = %231.1;
  (%232, %233, meta[relay.Constant][12] /* ty=Tensor[(240), float64] */, %234, %var_8302)
}

def @func_2663() -> (Tensor[(11, 4, 11), float32],) {
  %239 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %235 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %236 = sqrt(%235) /* ty=Tensor[(11, 4, 11), float32] */;
    %237 = cast(%236, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %238 = cos(%237) /* ty=Tensor[(11, 4, 11), float32] */;
    (%238,)
  };
  %239() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_2730(%var_2724: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %240 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %241 = cast(%var_2724, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %242 = reshape(%241, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %243 = %240.0;
  %244 = @func_1961(%242) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%243, %244, %var_2724)
}

def @func_4175() -> (Tensor[(11, 4, 11), float32],) {
  %247 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %245 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %246 = %245.0;
    (%246,)
  };
  %247() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_2863(%var_2859: Tensor[(11, 4, 11), float32], %var_2860: Tensor[(54, 12), uint32], %var_2861: int16, %var_2862: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) {
  @func_2857(%var_2859, %var_2860, %var_2861, %var_2862) /* ty=(Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_4064() -> (Tensor[(11, 4, 11), float64],) {
  %248 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %250 = sin(%249) /* ty=Tensor[(11, 4, 11), float64] */;
  (%250,)
}

def @func_5291() -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) {
  %258 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) {
    %251 = cast(meta[relay.Constant][14] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %252 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 78), int16] */, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
    %253 = reshape(%251, newshape=[]) /* ty=int16 */;
    %254 = reshape(%252, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
    %255 = @func_1132(%253, %254) /* ty=(Tensor[(13, 9, 4), int16],) */;
    %256 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
    %257 = %255.0;
    (%256, %257, meta[relay.Constant][14] /* ty=int16 */, meta[relay.Constant][15] /* ty=Tensor[(6, 78), int16] */)
  };
  %258() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) */
}

def @func_3047() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %259 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %260 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_5667() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_3405() -> (Tensor[(11, 4, 11), float32],) {
  %263 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %264 = %263.0;
  (%264,)
}

def @func_7235() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %265 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %266 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %267 = %265.1;
  %268 = %266.0;
  (%267, %268)
}

def @func_3820() -> (Tensor[(11, 4, 11), float32],) {
  %269 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %270 = %269.0;
  (%270,)
}

def @func_8646() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  @func_8644() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_6265(%var_6260: Tensor[(1008), uint64]) -> (Tensor[(11, 4, 11), float64], Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  %271 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %272 = cast(%var_6260, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %273 = reshape(%272, newshape=[1008]) /* ty=Tensor[(1008), uint64] */;
  %274 = @func_5723(%273) /* ty=(int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */;
  %275 = %271.0;
  %276 = %274.1;
  (%275, %276, %var_6260)
}

def @func_3540() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %277 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %279 = reshape(%278, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %280 = @func_3220(%279) /* ty=Tensor[(11, 4, 11), bool] */;
  (%277, %280)
}

def @func_8310(%var_8308: Tensor[(780), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) {
  @func_8307(%var_8308) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) */
}

def @func_2733(%var_2731: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  @func_2730(%var_2731) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */
}

def @func_3783() -> Tensor[(11, 4, 11), uint64] {
  %281 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %282 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 4, 11), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %286 = subtract(%284, %285) /* ty=Tensor[(11, 4, 11), uint16] */;
  %287 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 4, 11), float32] */, dtype="uint64") /* ty=Tensor[(11, 4, 11), uint64] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="uint64") /* ty=Tensor[(11, 4, 11), uint64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%289, %290) /* ty=Tensor[(11, 4, 11), uint64] */
}

def @func_1299(%var_1297: Tensor[(10, 12, 3), float64]) -> (Tensor[(13, 9, 4), int16], Tensor[(468), int16], Tensor[(10, 12, 3), uint32], Tensor[(13, 9, 4), int16]) {
  @func_1296(%var_1297) /* ty=(Tensor[(13, 9, 4), int16], Tensor[(468), int16], Tensor[(10, 12, 3), uint32], Tensor[(13, 9, 4), int16]) */
}

def @func_645(%var_643: Tensor[(15, 16, 13), float64], %var_644: Tensor[(15, 16, 13), float64]) -> Tensor[(15, 16, 13), float64] {
  %295 = fn (%var_614: Tensor[(15, 16, 13), float64], %var_615: Tensor[(15, 16, 13), float64]) -> Tensor[(15, 16, 13), float64] {
    %291 = cast(%var_615, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
    %292 = shape_of(%var_614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %293 = cast(%var_614, dtype="float64") /* ty=Tensor[(15, 16, 13), float64] */;
    %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%293, %294) /* ty=Tensor[(15, 16, 13), float64] */
  };
  %295(%var_643, %var_644) /* ty=Tensor[(15, 16, 13), float64] */
}

def @func_5174(%var_5172: Tensor[(9, 15, 16), float32], %var_5173: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(11, 4, 11), float32], Tensor[(9, 15, 16), bool]) {
  @func_5170(%var_5172, %var_5173) /* ty=(Tensor[(9, 15, 16), float32], Tensor[(11, 4, 11), float32], Tensor[(9, 15, 16), bool]) */
}

def @func_8572(%var_8571: Tensor[(11, 4, 11), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(484, 1), bool], Tensor[(7, 4), float64], Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float32], Tensor[(780), float64], Tensor[(11, 4, 11), bool]) {
  %321 = fn (%var_8473: Tensor[(11, 4, 11), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(484, 1), bool], Tensor[(7, 4), float64], Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float32], Tensor[(780), float64], Tensor[(11, 4, 11), bool]) {
    %296 = @func_7235() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %297 = cast(%var_8473, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %298 = reshape(%297, newshape=[484, 1]) /* ty=Tensor[(484, 1), bool] */;
    %299 = @func_7133(%298) /* ty=(int16, Tensor[(11, 4, 11), uint16], Tensor[(484, 1), bool]) */;
    %300 = @func_3601() /* ty=(Tensor[(7, 4), float64],) */;
    %301 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
    %302 = %301.1;
    %303 = cast(%var_8473, dtype="int8") /* ty=Tensor[(11, 4, 11), int8] */;
    %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %305 = cast(%302, dtype="int8") /* ty=Tensor[(11, 4, 11), int8] */;
    %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %307 = bitwise_or(%305, %306) /* ty=Tensor[(11, 4, 11), int8] */;
    %308 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 4, 11), int8] */, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%307, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %312 = cast(meta[relay.Constant][18] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %313 = reshape(%312, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %314 = @func_8307(%313) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 3, 10), float64], Tensor[(240), float64], Tensor[(11, 4, 11), float32], Tensor[(780), float64]) */;
    %315 = %296.1;
    %316 = %299.2;
    %317 = %300.0;
    %318 = greater_equal(%310, %311) /* ty=Tensor[(11, 4, 11), bool] */;
    %319 = %314.3;
    %320 = @func_3918() /* ty=Tensor[(11, 4, 11), bool] */;
    (%315, %316, %317, %318, %319, meta[relay.Constant][18] /* ty=Tensor[(780), float64] */, %320)
  };
  %321(%var_8571) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(484, 1), bool], Tensor[(7, 4), float64], Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float32], Tensor[(780), float64], Tensor[(11, 4, 11), bool]) */
}

def @func_3294() -> (Tensor[(11, 4, 11), float32],) {
  %322 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %323 = %322.0;
  (%323,)
}

def @func_8976() -> Tensor[(11, 4, 11), float32] {
  %325 = fn () -> Tensor[(11, 4, 11), float32] {
    %324 = @func_7308() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
    %324.0
  };
  %325() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_8790(%var_8789: Tensor[(1, 5, 2), float32]) -> (Tensor[(40), int64], Tensor[(?, 5, 2), bool]) {
  %341 = fn (%var_8757: Tensor[(1, 5, 2), float32]) -> (Tensor[(40), int64], Tensor[(?, 5, 2), bool]) {
    %326 = cast(%var_8757, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
    %327 = sqrt(%326) /* ty=Tensor[(1, 5, 2), float32] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(1, 5, 2), float32] */;
    %329 = tan(%328) /* ty=Tensor[(1, 5, 2), float32] */;
    %330 = cast(%327, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
    %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(%329, dtype="int64") /* ty=Tensor[(1, 5, 2), int64] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %334 = bitwise_and(%332, %333) /* ty=Tensor[(?, 5, 2), int64] */;
    %335 = cast(%334, dtype="bool") /* ty=Tensor[(?, 5, 2), bool] */;
    %336 = shape_of(%var_8757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%var_8757, dtype="bool") /* ty=Tensor[(1, 5, 2), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %339 = @func_6574() /* ty=Tensor[(40), int64] */;
    %340 = less(%337, %338) /* ty=Tensor[(?, 5, 2), bool] */;
    (%339, %340)
  };
  %341(%var_8789) /* ty=(Tensor[(40), int64], Tensor[(?, 5, 2), bool]) */
}

def @func_2712() -> Tensor[(11, 4, 11), float32] {
  @func_2710() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_3955(%var_3954: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
  %355 = fn (%var_3947: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) {
    %342 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %343 = %342.0;
    %344 = cast(%343, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %345 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 108), uint32] */, dtype="uint32") /* ty=Tensor[(6, 108), uint32] */;
    %346 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %347 = cast(%var_3947, dtype="int16") /* ty=Tensor[(468), int16] */;
    %348 = reshape(%344, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
    %349 = reshape(%345, newshape=[54, 12]) /* ty=Tensor[(54, 12), uint32] */;
    %350 = reshape(%346, newshape=[]) /* ty=int16 */;
    %351 = reshape(%347, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %352 = @func_2857(%348, %349, %350, %351) /* ty=(Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) */;
    %353 = %352.4;
    %354 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
    (%343, %353, meta[relay.Constant][19] /* ty=Tensor[(6, 108), uint32] */, meta[relay.Constant][20] /* ty=int16 */, %var_3947, %354)
  };
  %355(%var_3954) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(468), int16], Tensor[(6, 108), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32]) */
}

def @func_3601() -> (Tensor[(7, 4), float64],) {
  %356 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %357 = cos(%356) /* ty=Tensor[(7, 4), float64] */;
  (%357,)
}

def @func_6862() -> (Tensor[(11, 4, 11), float32],) {
  @func_6860() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_2433(%var_2431: Tensor[(10, 4), bool], %var_2432: Tensor[(10, 4), bool]) -> (Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) {
  @func_2429(%var_2431, %var_2432) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */
}

def @func_7013() -> Tensor[(11, 4, 11), float32] {
  %359 = fn () -> Tensor[(11, 4, 11), float32] {
    %358 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %358.0
  };
  %359() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_8184(%var_8183: Tensor[(240), uint8]) -> (Tensor[(11, 4, 11), int64], Tensor[(4, 12, 5), uint8], Tensor[(240), uint8], Tensor[(11, 4, 11), float32]) {
  %375 = fn (%var_8163: Tensor[(240), uint8]) -> (Tensor[(11, 4, 11), int64], Tensor[(4, 12, 5), uint8], Tensor[(240), uint8], Tensor[(11, 4, 11), float32]) {
    %360 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %361 = %360.1;
    %362 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 4, 11), float32] */, dtype="int64") /* ty=Tensor[(11, 4, 11), int64] */;
    %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
    %364 = cast(%361, dtype="int64") /* ty=Tensor[(11, 4, 11), int64] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %366 = cast(%var_8163, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %367 = cast(%var_8163, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %368 = reshape(%366, newshape=[4, 12, 5]) /* ty=Tensor[(4, 12, 5), uint8] */;
    %369 = reshape(%367, newshape=[4, 12, 5]) /* ty=Tensor[(4, 12, 5), uint8] */;
    %370 = @func_7786(%368, %369) /* ty=(Tensor[(4, 12, 5), uint8],) */;
    %371 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %372 = bitwise_and(%364, %365) /* ty=Tensor[(11, 4, 11), int64] */;
    %373 = %370.0;
    %374 = %371.2;
    (%372, %373, %var_8163, %374)
  };
  %375(%var_8183) /* ty=(Tensor[(11, 4, 11), int64], Tensor[(4, 12, 5), uint8], Tensor[(240), uint8], Tensor[(11, 4, 11), float32]) */
}

def @func_5784(%var_5783: Tensor[(162, 4), uint32]) -> Tensor[(162, 4), float32] {
  %382 = fn (%var_5776: Tensor[(162, 4), uint32]) -> Tensor[(162, 4), float32] {
    %376 = @func_5750() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) */;
    %377 = %376.1;
    %378 = cast(%var_5776, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
    %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(2), int32] */;
    %380 = cast(%377, dtype="float32") /* ty=Tensor[(162, 4), float32] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    floor_mod(%380, %381) /* ty=Tensor[(162, 4), float32] */
  };
  %382(%var_5783) /* ty=Tensor[(162, 4), float32] */
}

def @func_4651(%var_4649: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  @func_4648(%var_4649) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */
}

def @func_7160(%var_7140: Tensor[(9, 5, 13), float64]) -> (Tensor[(9, 5, 13), float32], Tensor[(162, 4), float32], Tensor[(648), uint32]) {
  %383 = cast(%var_7140, dtype="float64") /* ty=Tensor[(9, 5, 13), float64] */;
  %384 = erf(%383) /* ty=Tensor[(9, 5, 13), float64] */;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(9, 5, 13), float32] */;
  %386 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), uint32] */, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %387 = reshape(%386, newshape=[162, 4]) /* ty=Tensor[(162, 4), uint32] */;
  %388 = atanh(%385) /* ty=Tensor[(9, 5, 13), float32] */;
  %389 = @func_5782(%387) /* ty=Tensor[(162, 4), float32] */;
  (%388, %389, meta[relay.Constant][23] /* ty=Tensor[(648), uint32] */)
}

def @func_3548() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %394 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
    %390 = @func_3047() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %391 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %392 = %390.0;
    %393 = %391.1;
    (%392, %393)
  };
  %394() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_5170(%var_5138: Tensor[(9, 15, 16), float32], %var_5139: Tensor[(9, 15, 16), float32]) -> (Tensor[(9, 15, 16), float32], Tensor[(11, 4, 11), float32], Tensor[(9, 15, 16), bool]) {
  %395 = cast(%var_5139, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %396 = shape_of(%var_5138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%var_5138, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %399 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %400 = cast(%var_5138, dtype="bool") /* ty=Tensor[(9, 15, 16), bool] */;
  %401 = shape_of(%var_5139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_5139, dtype="bool") /* ty=Tensor[(9, 15, 16), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = floor_mod(%397, %398) /* ty=Tensor[(9, 15, 16), float32] */;
  %405 = %399.0;
  %406 = greater_equal(%402, %403) /* ty=Tensor[(9, 15, 16), bool] */;
  (%404, %405, %406)
}

def @func_7642(%var_7627: Tensor[(11, 4, 11), float32]) -> (Tensor[(11, 4, 11), float64],) {
  %407 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %408 = %407.0;
  %409 = cast(%var_7627, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %413 = power(%411, %412) /* ty=Tensor[(11, 4, 11), float64] */;
  (%413,)
}

def @func_7665(%var_7664: Tensor[(1, 16, 15), float64]) -> (Tensor[(1, 16, 15), float64],) {
  %416 = fn (%var_7647: Tensor[(1, 16, 15), float64]) -> (Tensor[(1, 16, 15), float64],) {
    %414 = cast(%var_7647, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
    %415 = erf(%414) /* ty=Tensor[(1, 16, 15), float64] */;
    (%415,)
  };
  %416(%var_7664) /* ty=(Tensor[(1, 16, 15), float64],) */
}

def @func_7577() -> Tensor[(11, 4, 11), float32] {
  %418 = fn () -> Tensor[(11, 4, 11), float32] {
    %417 = @func_4680() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %417.0
  };
  %418() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_3542() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_1393(%var_1391: Tensor[(8, 3, 10), float64]) -> Tensor[(8, 3, 10), float64] {
  @func_1390(%var_1391) /* ty=Tensor[(8, 3, 10), float64] */
}

def @func_7498() -> (Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float32], Tensor[(11, 12, 15), float32], Tensor[(40), bool], Tensor[(11, 4, 11), float32]) {
  %419 = @func_5574() /* ty=(int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float64]) */;
  %420 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %421 = cast(meta[relay.Constant][24] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %422 = cast(meta[relay.Constant][24] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %423 = reshape(%421, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %424 = reshape(%422, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
  %425 = @func_2429(%423, %424) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
  %426 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %427 = %419.2;
  %428 = %420.0;
  %429 = %425.1;
  %430 = %426.0;
  (%427, %428, %429, meta[relay.Constant][24] /* ty=Tensor[(40), bool] */, %430)
}

def @func_8001(%var_7998: Tensor[(648), uint32], %var_7999: int16, %var_8000: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], int16, int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(648), bool]) {
  %451 = fn (%var_7973: Tensor[(648), uint32], %var_7974: int16, %var_7989: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], int16, int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(648), bool]) {
    %431 = @func_4898() /* ty=Tensor[(11, 4, 11), float32] */;
    %432 = cast(%431, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %433 = cast(%var_7973, dtype="uint32") /* ty=Tensor[(648), uint32] */;
    %434 = cast(%var_7974, dtype="int16") /* ty=int16 */;
    %435 = cast(meta[relay.Constant][25] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %436 = reshape(%432, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
    %437 = reshape(%433, newshape=[54, 12]) /* ty=Tensor[(54, 12), uint32] */;
    %438 = reshape(%434, newshape=[]) /* ty=int16 */;
    %439 = reshape(%435, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %440 = @func_2857(%436, %437, %438, %439) /* ty=(Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) */;
    %441 = cast(%431, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %442 = reshape(%441, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), bool] */;
    %443 = @func_3753(%442) /* ty=(Tensor[(11, 4, 11), uint16],) */;
    %444 = cast(%var_7989, dtype="bool") /* ty=Tensor[(648), bool] */;
    %445 = shape_of(%var_7973, dtype="int32") /* ty=Tensor[(1), int32] */;
    %446 = cast(%var_7973, dtype="bool") /* ty=Tensor[(648), bool] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?), bool] */;
    %448 = %440.3;
    %449 = %443.0;
    %450 = greater_equal(%446, %447) /* ty=Tensor[(648), bool] */;
    (%431, %448, %var_7974, meta[relay.Constant][25] /* ty=Tensor[(468), int16] */, %449, %450)
  };
  %451(%var_7998, %var_7999, %var_8000) /* ty=(Tensor[(11, 4, 11), float32], int16, int16, Tensor[(468), int16], Tensor[(11, 4, 11), uint16], Tensor[(648), bool]) */
}

def @func_8437(%var_8435: Tensor[(13, 13, 2), uint16], %var_8436: Tensor[(13, 13, 2), uint16]) -> Tensor[(13, 13, 2), bool] {
  %456 = fn (%var_8425: Tensor[(13, 13, 2), uint16], %var_8426: Tensor[(13, 13, 2), uint16]) -> Tensor[(13, 13, 2), bool] {
    %452 = cast(%var_8426, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
    %453 = shape_of(%var_8425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %454 = cast(%var_8425, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
    %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%454, %455) /* ty=Tensor[(13, 13, 2), bool] */
  };
  %456(%var_8435, %var_8436) /* ty=Tensor[(13, 13, 2), bool] */
}

def @func_5845() -> (Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) {
  %457 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 10), float64] */;
  %458 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 10), float64] */;
  %459 = sinh(%458) /* ty=Tensor[(2, 12, 10), float64] */;
  %460 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 12, 10), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %464 = tan(%457) /* ty=Tensor[(2, 12, 10), float64] */;
  %465 = mod(%462, %463) /* ty=Tensor[(2, 12, 10), float32] */;
  (%464, %465)
}

def @func_8033() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %466 = @func_6860() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %467 = @func_7829() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %468 = %466.0;
  %469 = %467.0;
  (%468, %469)
}

def @func_3020(%var_2975: int16, %var_2976: Tensor[(468, 1), int16]) -> (Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) {
  %470 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %471 = reshape(%470, newshape=[8, 3, 10]) /* ty=Tensor[(8, 3, 10), float64] */;
  %472 = cast(%var_2975, dtype="int16") /* ty=int16 */;
  %473 = cast(%var_2976, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %474 = reshape(%472, newshape=[]) /* ty=int16 */;
  %475 = reshape(%473, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %476 = @func_1132(%474, %475) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %477 = cast(%var_2975, dtype="int16") /* ty=int16 */;
  %478 = cast(%var_2976, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %479 = reshape(%477, newshape=[]) /* ty=int16 */;
  %480 = reshape(%478, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %481 = @func_1132(%479, %480) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %482 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %483 = cast(%var_2976, dtype="uint32") /* ty=Tensor[(468, 1), uint32] */;
  %484 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), float64] */, dtype="uint32") /* ty=Tensor[(240), uint32] */;
  %485 = cast(%var_2976, dtype="int32") /* ty=Tensor[(468, 1), int32] */;
  %486 = cast(%var_2975, dtype="int32") /* ty=int32 */;
  %487 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %488 = %487.0;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %490 = atan(%489) /* ty=Tensor[(11, 4, 11), float64] */;
  %491 = cast(%490, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %492 = cast(%var_2975, dtype="bool") /* ty=bool */;
  %493 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 648), uint32] */, dtype="uint32") /* ty=Tensor[(1, 648), uint32] */;
  %494 = reshape(%493, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %495 = @func_1390(%471) /* ty=Tensor[(8, 3, 10), float64] */;
  %496 = %476.0;
  %497 = %481.0;
  %498 = %482.0;
  %499 = left_shift(%483, %484) /* ty=Tensor[(468, 240), uint32] */;
  %500 = add(%485, %486) /* ty=Tensor[(468, 1), int32] */;
  %501 = logical_or(%491, %492) /* ty=Tensor[(11, 4, 11), bool] */;
  %502 = @func_1961(%494) /* ty=Tensor[(8, 9, 9), uint32] */;
  (%495, %496, %497, %498, %499, %500, %501, %502, meta[relay.Constant][28] /* ty=Tensor[(1, 648), uint32] */)
}

def @func_7500() -> (Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float32], Tensor[(11, 12, 15), float32], Tensor[(40), bool], Tensor[(11, 4, 11), float32]) {
  @func_7498() /* ty=(Tensor[(11, 4, 11), uint16], Tensor[(11, 4, 11), float32], Tensor[(11, 12, 15), float32], Tensor[(40), bool], Tensor[(11, 4, 11), float32]) */
}

def @func_3024(%var_3022: int16, %var_3023: Tensor[(468, 1), int16]) -> (Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) {
  @func_3020(%var_3022, %var_3023) /* ty=(Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) */
}

def @func_5701() -> (Tensor[(11, 4, 11), bool],) {
  @func_5699() /* ty=(Tensor[(11, 4, 11), bool],) */
}

def @func_8995(%var_8985: Tensor[(11, 11, 9), uint32], %var_8986: Tensor[(11, 11, 9), uint32]) -> Tensor[(11, 11, 9), uint32] {
  %503 = cast(%var_8986, dtype="uint32") /* ty=Tensor[(11, 11, 9), uint32] */;
  %504 = shape_of(%var_8985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_8985, dtype="uint32") /* ty=Tensor[(11, 11, 9), uint32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%505, %506) /* ty=Tensor[(11, 11, 9), uint32] */
}

def @func_5964() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) {
  %515 = fn () -> (Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) {
    %507 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %508 = cast(meta[relay.Constant][29] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
    %509 = cast(meta[relay.Constant][29] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
    %510 = reshape(%508, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
    %511 = reshape(%509, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
    %512 = @func_2429(%510, %511) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
    %513 = %507.1;
    %514 = %512.1;
    (%513, %514, meta[relay.Constant][29] /* ty=Tensor[(40), bool] */)
  };
  %515() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) */
}

def @func_3107() -> (Tensor[(11, 4, 11), bool],) {
  %527 = fn () -> (Tensor[(11, 4, 11), bool],) {
    %516 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %517 = %516.0;
    %518 = cast(%517, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %519 = asinh(%518) /* ty=Tensor[(11, 4, 11), float32] */;
    %520 = cast(%517, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %521 = sigmoid(%520) /* ty=Tensor[(11, 4, 11), float64] */;
    %522 = cast(%521, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %523 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
    %524 = cast(%519, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %526 = equal(%524, %525) /* ty=Tensor[(11, 4, 11), bool] */;
    (%526,)
  };
  %527() /* ty=(Tensor[(11, 4, 11), bool],) */
}

def @func_5029() -> (Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %533 = fn () -> (Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
    %528 = @func_4240() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */;
    %529 = cast(meta[relay.Constant][30] /* ty=Tensor[(648), uint32] */, dtype="uint32") /* ty=Tensor[(648), uint32] */;
    %530 = reshape(%529, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
    %531 = %528.0;
    %532 = @func_1961(%530) /* ty=Tensor[(8, 9, 9), uint32] */;
    (%531, %532, meta[relay.Constant][30] /* ty=Tensor[(648), uint32] */)
  };
  %533() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */
}

def @func_5468() -> Tensor[(11, 4, 11), float32] {
  @func_5466() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_4898() -> Tensor[(11, 4, 11), float32] {
  @func_4332() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_4900() -> Tensor[(11, 4, 11), float32] {
  @func_4898() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_7435() -> (Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %540 = fn () -> (Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
    %534 = @func_5290() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) */;
    %535 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %536 = @func_5600() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %537 = %534.1;
    %538 = %535.0;
    %539 = %536.1;
    (%537, %538, %539)
  };
  %540() /* ty=(Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_5892(%var_5891: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), float64] {
  %547 = fn (%var_5866: Tensor[(11, 4, 11), float32]) -> Tensor[(11, 4, 11), float64] {
    %541 = @func_5003() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %542 = %541.0;
    %543 = cast(%var_5866, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %545 = cast(%542, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    multiply(%545, %546) /* ty=Tensor[(11, 4, 11), float64] */
  };
  %547(%var_5891) /* ty=Tensor[(11, 4, 11), float64] */
}

def @func_7163(%var_7161: Tensor[(9, 5, 13), float64]) -> (Tensor[(9, 5, 13), float32], Tensor[(162, 4), float32], Tensor[(648), uint32]) {
  @func_7160(%var_7161) /* ty=(Tensor[(9, 5, 13), float32], Tensor[(162, 4), float32], Tensor[(648), uint32]) */
}

def @func_6392(%var_6379: Tensor[(20), float64]) -> (Tensor[(7, 9, 3), float64], Tensor[(10, 2, 1), float64], Tensor[(20), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %548 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
  %549 = cast(%var_6379, dtype="float64") /* ty=Tensor[(20), float64] */;
  %550 = reshape(%549, newshape=[10, 2, 1]) /* ty=Tensor[(10, 2, 1), float64] */;
  %551 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %552 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %553 = acos(%548) /* ty=Tensor[(7, 9, 3), float64] */;
  %554 = @func_1422(%550) /* ty=Tensor[(10, 2, 1), float64] */;
  %555 = %551.0;
  %556 = %552.0;
  (%553, %554, %var_6379, %555, %556)
}

def @func_2710() -> Tensor[(11, 4, 11), float32] {
  %557 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %557.0
}

def @func_4854(%var_4853: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(648), uint32], Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), float64]) {
  %571 = fn (%var_4757: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(648), uint32], Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), float64]) {
    %558 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %559 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %560 = cast(%var_4757, dtype="uint32") /* ty=Tensor[(648), uint32] */;
    %561 = reshape(%560, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
    %562 = @func_1961(%561) /* ty=Tensor[(8, 9, 9), uint32] */;
    %563 = cast(%562, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
    %564 = tan(%563) /* ty=Tensor[(8, 9, 9), float32] */;
    %565 = cast(%564, dtype="float64") /* ty=Tensor[(8, 9, 9), float64] */;
    %566 = log2(%565) /* ty=Tensor[(8, 9, 9), float64] */;
    %567 = cast(%566, dtype="float64") /* ty=Tensor[(8, 9, 9), float64] */;
    %568 = %558.0;
    %569 = %559.0;
    %570 = acosh(%567) /* ty=Tensor[(8, 9, 9), float64] */;
    (%568, %var_4757, %569, %570)
  };
  %571(%var_4853) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(648), uint32], Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), float64]) */
}

def @func_3755(%var_3754: Tensor[(11, 4, 11), bool]) -> (Tensor[(11, 4, 11), uint16],) {
  %579 = fn (%var_3747: Tensor[(11, 4, 11), bool]) -> (Tensor[(11, 4, 11), uint16],) {
    %572 = @func_3547() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %573 = %572.1;
    %574 = cast(%var_3747, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
    %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
    %576 = cast(%573, dtype="uint16") /* ty=Tensor[(11, 4, 11), uint16] */;
    %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %578 = right_shift(%576, %577) /* ty=Tensor[(11, 4, 11), uint16] */;
    (%578,)
  };
  %579(%var_3754) /* ty=(Tensor[(11, 4, 11), uint16],) */
}

def @func_9036(%var_9034: Tensor[(4, 10), int64]) -> (Tensor[(4, 10), int64], Tensor[(11, 4, 11), uint64]) {
  @func_9033(%var_9034) /* ty=(Tensor[(4, 10), int64], Tensor[(11, 4, 11), uint64]) */
}

def @func_4488(%var_4487: int16) -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) {
  %588 = fn (%var_4468: int16) -> (Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) {
    %580 = @func_3405() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %581 = cast(%var_4468, dtype="int16") /* ty=int16 */;
    %582 = cast(meta[relay.Constant][32] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %583 = reshape(%581, newshape=[]) /* ty=int16 */;
    %584 = reshape(%582, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
    %585 = @func_1132(%583, %584) /* ty=(Tensor[(13, 9, 4), int16],) */;
    %586 = %580.0;
    %587 = %585.0;
    (%586, %587, %var_4468, meta[relay.Constant][32] /* ty=Tensor[(468), int16] */)
  };
  %588(%var_4487) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16]) */
}

def @func_3512() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
  %602 = fn () -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
    %589 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
    %590 = %589.0;
    %591 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
    %592 = cast(%591, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %593 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%590, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %596 = cast(%591, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %597 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%590, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %600 = less(%594, %595) /* ty=Tensor[(11, 4, 11), bool] */;
    %601 = divide(%598, %599) /* ty=Tensor[(11, 4, 11), float64] */;
    (%600, %601)
  };
  %602() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */
}

def @func_3848() -> Tensor[(11, 4, 11), float32] {
  %603 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %603.0
}

def @func_5665() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %604 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %605 = @func_5244() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */;
  %606 = %604.1;
  %607 = @func_4898() /* ty=Tensor[(11, 4, 11), float32] */;
  %608 = %605.1;
  (%606, %607, %608)
}

def @func_2857(%var_2810: Tensor[(11, 4, 11), float32], %var_2822: Tensor[(54, 12), uint32], %var_2829: int16, %var_2830: Tensor[(468), int16]) -> (Tensor[(11, 4, 11), bool], Tensor[(54, 12), uint32], Tensor[(13, 9, 4), int16], int16, Tensor[(468), int16], Tensor[(8, 9, 9), uint32], Tensor[(8, 9, 9), float32], Tensor[(11, 4, 11), float64]) {
  %609 = @func_2681() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %610 = %609.0;
  %611 = cast(%var_2810, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %615 = cast(%var_2829, dtype="int16") /* ty=int16 */;
  %616 = cast(%var_2830, dtype="int16") /* ty=Tensor[(468), int16] */;
  %617 = reshape(%615, newshape=[]) /* ty=int16 */;
  %618 = reshape(%616, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), int16] */;
  %619 = @func_1132(%617, %618) /* ty=(Tensor[(13, 9, 4), int16],) */;
  %620 = cast(%var_2822, dtype="uint32") /* ty=Tensor[(54, 12), uint32] */;
  %621 = reshape(%620, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), uint32] */;
  %622 = cast(%var_2822, dtype="uint32") /* ty=Tensor[(54, 12), uint32] */;
  %623 = reshape(%622, newshape=[648]) /* ty=Tensor[(648), uint32] */;
  %624 = @func_2730(%623) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %625 = %624.1;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
  %627 = cast(%610, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %628 = not_equal(%613, %614) /* ty=Tensor[(11, 4, 11), bool] */;
  %629 = %619.0;
  %630 = @func_1961(%621) /* ty=Tensor[(8, 9, 9), uint32] */;
  %631 = sin(%626) /* ty=Tensor[(8, 9, 9), float32] */;
  %632 = sinh(%627) /* ty=Tensor[(11, 4, 11), float64] */;
  (%628, %var_2822, %629, %var_2829, %var_2830, %630, %631, %632)
}

def @func_8956(%var_8904: Tensor[(468), int16], %var_8936: Tensor[(3, 15, 9), float64]) -> (Tensor[(1, 648), uint32], int16, Tensor[(468), int16], Tensor[(11, 4, 11), float32], Tensor[(3, 15, 9), float64], Tensor[(3, 15, 9), int16], Tensor[(3, 15, 9), int16]) {
  %633 = cast(meta[relay.Constant][33] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %634 = cast(%var_8904, dtype="int16") /* ty=Tensor[(468), int16] */;
  %635 = reshape(%633, newshape=[]) /* ty=int16 */;
  %636 = reshape(%634, newshape=[468, 1]) /* ty=Tensor[(468, 1), int16] */;
  %637 = @func_3020(%635, %636) /* ty=(Tensor[(8, 3, 10), float64], Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), int16], Tensor[(11, 4, 11), float32], Tensor[(468, 240), uint32], Tensor[(468, 1), int32], Tensor[(11, 4, 11), bool], Tensor[(8, 9, 9), uint32], Tensor[(1, 648), uint32]) */;
  %638 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %639 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 9), float64] */;
  %640 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %641 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %644 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 9), float64] */;
  %645 = erf(%644) /* ty=Tensor[(3, 15, 9), float64] */;
  %646 = cast(%var_8936, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="int16") /* ty=Tensor[(3, 15, 9), int16] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %650 = %637.8;
  %651 = %638.0;
  %652 = cos(%639) /* ty=Tensor[(3, 15, 9), float64] */;
  %653 = minimum(%642, %643) /* ty=Tensor[(3, 15, 9), int16] */;
  %654 = logical_xor(%648, %649) /* ty=Tensor[(3, 15, 9), int16] */;
  (%650, meta[relay.Constant][33] /* ty=int16 */, %var_8904, %651, %652, %653, %654)
}

def @func_6428() -> Tensor[(11, 4, 11), float64] {
  %655 = @func_4064() /* ty=(Tensor[(11, 4, 11), float64],) */;
  %655.0
}

def @func_3918() -> Tensor[(11, 4, 11), bool] {
  %656 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %656.0
}

def @func_4108(%var_4106: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(11, 4, 11), float64]) {
  @func_4105(%var_4106) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_6183() -> (Tensor[(11, 4, 11), float32],) {
  %659 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %657 = @func_3540() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
    %658 = %657.0;
    (%658,)
  };
  %659() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_5751() -> (Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) {
  %668 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) {
    %660 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %661 = cast(meta[relay.Constant][36] /* ty=Tensor[(1980), float32] */, dtype="float32") /* ty=Tensor[(1980), float32] */;
    %662 = reshape(%661, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), float32] */;
    %663 = @func_2167(%662) /* ty=(Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) */;
    %664 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
    %665 = %660.0;
    %666 = %663.2;
    %667 = %664.0;
    (%665, %666, meta[relay.Constant][36] /* ty=Tensor[(1980), float32] */, %667)
  };
  %668() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(162, 4), uint32], Tensor[(1980), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_2938(%var_2936: Tensor[(9, 7, 16), uint64], %var_2937: Tensor[(9, 7, 16), uint64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) {
  %676 = fn (%var_2910: Tensor[(9, 7, 16), uint64], %var_2911: Tensor[(9, 7, 16), uint64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) {
    %669 = cast(%var_2911, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
    %670 = shape_of(%var_2910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %671 = cast(%var_2910, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
    %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %673 = cast(%var_2911, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
    %674 = minimum(%671, %672) /* ty=Tensor[(9, 7, 16), uint64] */;
    %675 = erf(%673) /* ty=Tensor[(9, 7, 16), float32] */;
    (%674, %675)
  };
  %676(%var_2936, %var_2937) /* ty=(Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) */
}

def @func_8806() -> Tensor[(64), float32] {
  %678 = fn () -> Tensor[(64), float32] {
    %677 = @func_8117() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(11, 4, 11), float32], Tensor[(8, 8, 1), float32], Tensor[(64), float32], Tensor[(832), float32]) */;
    %677.3
  };
  %678() /* ty=Tensor[(64), float32] */
}

def @func_2681() -> (Tensor[(11, 4, 11), float32],) {
  %679 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %680 = %679.0;
  (%680,)
}

def @func_3718(%var_3717: Tensor[(10, 11, 2), float64]) -> Tensor[(10, 11, 2), float64] {
  %682 = fn (%var_3708: Tensor[(10, 11, 2), float64]) -> Tensor[(10, 11, 2), float64] {
    %681 = cast(%var_3708, dtype="float64") /* ty=Tensor[(10, 11, 2), float64] */;
    sigmoid(%681) /* ty=Tensor[(10, 11, 2), float64] */
  };
  %682(%var_3717) /* ty=Tensor[(10, 11, 2), float64] */
}

def @func_2429(%var_2385: Tensor[(10, 4), bool], %var_2386: Tensor[(10, 4), bool]) -> (Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) {
  %683 = cast(%var_2386, dtype="bool") /* ty=Tensor[(10, 4), bool] */;
  %684 = shape_of(%var_2385, dtype="int32") /* ty=Tensor[(2), int32] */;
  %685 = cast(%var_2385, dtype="bool") /* ty=Tensor[(10, 4), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %687 = cast(meta[relay.Constant][37] /* ty=Tensor[(1980), float32] */, dtype="float32") /* ty=Tensor[(1980), float32] */;
  %688 = reshape(%687, newshape=[11, 12, 15]) /* ty=Tensor[(11, 12, 15), float32] */;
  %689 = @func_2167(%688) /* ty=(Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) */;
  %690 = logical_and(%685, %686) /* ty=Tensor[(10, 4), bool] */;
  %691 = %689.0;
  (%690, %691, meta[relay.Constant][37] /* ty=Tensor[(1980), float32] */)
}

def @func_3920() -> Tensor[(11, 4, 11), bool] {
  @func_3918() /* ty=Tensor[(11, 4, 11), bool] */
}

def @func_2170(%var_2168: Tensor[(11, 12, 15), float32]) -> (Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) {
  @func_2167(%var_2168) /* ty=(Tensor[(11, 12, 15), float32], Tensor[(8, 9, 9), uint32], Tensor[(162, 4), uint32]) */
}

def @func_4333() -> Tensor[(11, 4, 11), float32] {
  %693 = fn () -> Tensor[(11, 4, 11), float32] {
    %692 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %692.0
  };
  %693() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_5245() -> (Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) {
  %696 = fn () -> (Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) {
    %694 = @func_3783() /* ty=Tensor[(11, 4, 11), uint64] */;
    %695 = @func_3848() /* ty=Tensor[(11, 4, 11), float32] */;
    (%694, %695)
  };
  %696() /* ty=(Tensor[(11, 4, 11), uint64], Tensor[(11, 4, 11), float32]) */
}

def @func_4941(%var_4919: Tensor[(4, 10, 14), uint32], %var_4920: Tensor[(4, 10, 14), uint32], %var_4934: Tensor[(484), float32]) -> (Tensor[(4, 10, 14), uint32], Tensor[(15, 16, 13), uint8], Tensor[(3120), float64], Tensor[(11, 4, 11), bool], Tensor[(484), float32], Tensor[(4, 10, 14), float32], Tensor[(11, 4, 11), bool]) {
  %697 = cast(%var_4920, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %698 = shape_of(%var_4919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_4919, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %701 = cast(meta[relay.Constant][38] /* ty=Tensor[(3120), float64] */, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %702 = reshape(%701, newshape=[3120]) /* ty=Tensor[(3120), float64] */;
  %703 = @func_2786(%702) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) */;
  %704 = cast(%var_4934, dtype="float32") /* ty=Tensor[(484), float32] */;
  %705 = reshape(%704, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %706 = cast(%var_4919, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %707 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %708 = maximum(%699, %700) /* ty=Tensor[(4, 10, 14), uint32] */;
  %709 = %703.1;
  %710 = @func_3220(%705) /* ty=Tensor[(11, 4, 11), bool] */;
  %711 = rsqrt(%706) /* ty=Tensor[(4, 10, 14), float32] */;
  %712 = %707.0;
  (%708, %709, meta[relay.Constant][38] /* ty=Tensor[(3120), float64] */, %710, %var_4934, %711, %712)
}

def @func_1424(%var_1423: Tensor[(10, 2, 1), float64]) -> Tensor[(10, 2, 1), float64] {
  %714 = fn (%var_1412: Tensor[(10, 2, 1), float64]) -> Tensor[(10, 2, 1), float64] {
    %713 = cast(%var_1412, dtype="float64") /* ty=Tensor[(10, 2, 1), float64] */;
    atan(%713) /* ty=Tensor[(10, 2, 1), float64] */
  };
  %714(%var_1423) /* ty=Tensor[(10, 2, 1), float64] */
}

def @func_7017() -> Tensor[(11, 4, 11), float32] {
  %716 = fn () -> Tensor[(11, 4, 11), float32] {
    %715 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
    %715.0
  };
  %716() /* ty=Tensor[(11, 4, 11), float32] */
}

def @func_7771() -> (Tensor[(11, 4, 11), bool], Tensor[(15, 16, 13), uint8], Tensor[(11, 4, 11), float32], Tensor[(560, 1), float32]) {
  @func_7769() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(15, 16, 13), uint8], Tensor[(11, 4, 11), float32], Tensor[(560, 1), float32]) */
}

def @func_7645(%var_7643: Tensor[(11, 4, 11), float32]) -> (Tensor[(11, 4, 11), float64],) {
  @func_7642(%var_7643) /* ty=(Tensor[(11, 4, 11), float64],) */
}

def @func_6430() -> Tensor[(11, 4, 11), float64] {
  @func_6428() /* ty=Tensor[(11, 4, 11), float64] */
}

def @func_4648(%var_4640: Tensor[(648), uint32]) -> (Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) {
  %717 = cast(%var_4640, dtype="uint32") /* ty=Tensor[(648), uint32] */;
  %718 = reshape(%717, newshape=[648]) /* ty=Tensor[(648), uint32] */;
  %719 = @func_2730(%718) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
  %720 = @func_4332() /* ty=Tensor[(11, 4, 11), float32] */;
  %721 = %719.1;
  (%720, %721, %var_4640)
}

def @func_3167() -> (Tensor[(11, 4, 11), bool],) {
  %724 = fn () -> (Tensor[(11, 4, 11), bool],) {
    %722 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
    %723 = %722.0;
    (%723,)
  };
  %724() /* ty=(Tensor[(11, 4, 11), bool],) */
}

def @func_7829() -> (Tensor[(11, 4, 11), float32],) {
  %725 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %726 = %725.0;
  (%726,)
}

def @func_3684() -> (Tensor[(11, 4, 11), float32],) {
  %731 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %727 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
    %728 = %727.0;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
    %730 = erf(%729) /* ty=Tensor[(11, 4, 11), float32] */;
    (%730,)
  };
  %731() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_6704() -> (Tensor[(7, 6, 5), float32],) {
  %734 = fn () -> (Tensor[(7, 6, 5), float32],) {
    %732 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
    %733 = asin(%732) /* ty=Tensor[(7, 6, 5), float32] */;
    (%733,)
  };
  %734() /* ty=(Tensor[(7, 6, 5), float32],) */
}

def @func_5466() -> Tensor[(11, 4, 11), float32] {
  %735 = @func_4277() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %735.0
}

def @func_6672() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
  @func_6670() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */
}

def @func_6268(%var_6266: Tensor[(1008), uint64]) -> (Tensor[(11, 4, 11), float64], Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  @func_6265(%var_6266) /* ty=(Tensor[(11, 4, 11), float64], Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) */
}

def @func_3603() -> (Tensor[(7, 4), float64],) {
  @func_3601() /* ty=(Tensor[(7, 4), float64],) */
}

def @func_3318(%var_3316: Tensor[(4, 15, 13), float64], %var_3317: Tensor[(4, 15, 13), float64]) -> (Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  @func_3314(%var_3316, %var_3317) /* ty=(Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_3296() -> (Tensor[(11, 4, 11), float32],) {
  @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_5699() -> (Tensor[(11, 4, 11), bool],) {
  %736 = @func_3106() /* ty=(Tensor[(11, 4, 11), bool],) */;
  %737 = %736.0;
  (%737,)
}

def @func_1132(%var_1127: int16, %var_1128: Tensor[(13, 9, 4), int16]) -> (Tensor[(13, 9, 4), int16],) {
  %738 = cast(%var_1127, dtype="int16") /* ty=int16 */;
  %739 = cast(%var_1128, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %740 = minimum(%738, %739) /* ty=Tensor[(13, 9, 4), int16] */;
  (%740,)
}

def @func_7309() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %745 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
    %741 = @func_4680() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %742 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
    %743 = %741.0;
    %744 = %742.0;
    (%743, %744)
  };
  %745() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_6574() -> Tensor[(40), int64] {
  %746 = @func_5963() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 12, 15), float32], Tensor[(40), bool]) */;
  %747 = %746.2;
  %748 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), bool] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(1), int32] */;
  %750 = cast(%747, dtype="int64") /* ty=Tensor[(40), int64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?), int64] */;
  left_shift(%750, %751) /* ty=Tensor[(40), int64] */
}

def @func_6670() -> (Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) {
  %752 = @func_3637() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) */;
  %753 = %752.0;
  %754 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 4, 11), float32] */, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%753, dtype="bool") /* ty=Tensor[(11, 4, 11), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = @func_6598() /* ty=Tensor[(11, 4, 11), float32] */;
  %759 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %763 = greater(%756, %757) /* ty=Tensor[(11, 4, 11), bool] */;
  %764 = mod(%761, %762) /* ty=Tensor[(11, 4, 11), float64] */;
  (%763, %764)
}

def @func_8866() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  %765 = @func_5665() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */;
  %766 = @func_3511() /* ty=(Tensor[(11, 4, 11), bool], Tensor[(11, 4, 11), float64]) */;
  %767 = %765.1;
  %768 = %766.1;
  (%767, %768)
}

def @func_1963(%var_1962: Tensor[(8, 9, 9), uint32]) -> Tensor[(8, 9, 9), uint32] {
  %773 = fn (%var_1956: Tensor[(8, 9, 9), uint32]) -> Tensor[(8, 9, 9), uint32] {
    %769 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 9, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 9), uint32] */;
    %770 = shape_of(%var_1956, dtype="int32") /* ty=Tensor[(3), int32] */;
    %771 = cast(%var_1956, dtype="uint32") /* ty=Tensor[(8, 9, 9), uint32] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%771, %772) /* ty=Tensor[(8, 9, 9), uint32] */
  };
  %773(%var_1962) /* ty=Tensor[(8, 9, 9), uint32] */
}

def @func_8266() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(10, 4), bool], Tensor[(40), bool], Tensor[(2, 12, 10), float32]) {
  %786 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(10, 4), bool], Tensor[(40), bool], Tensor[(2, 12, 10), float32]) {
    %774 = @func_3820() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %775 = @func_3683() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %776 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
    %777 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), bool] */, dtype="bool") /* ty=Tensor[(40), bool] */;
    %778 = reshape(%776, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
    %779 = reshape(%777, newshape=[10, 4]) /* ty=Tensor[(10, 4), bool] */;
    %780 = @func_2429(%778, %779) /* ty=(Tensor[(10, 4), bool], Tensor[(11, 12, 15), float32], Tensor[(1980), float32]) */;
    %781 = @func_5845() /* ty=(Tensor[(2, 12, 10), float64], Tensor[(2, 12, 10), float32]) */;
    %782 = %774.0;
    %783 = %775.0;
    %784 = %780.0;
    %785 = %781.1;
    (%782, %783, %784, meta[relay.Constant][43] /* ty=Tensor[(40), bool] */, %785)
  };
  %786() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32], Tensor[(10, 4), bool], Tensor[(40), bool], Tensor[(2, 12, 10), float32]) */
}

def @func_7391() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
  %790 = fn () -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) {
    %787 = @func_3294() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %788 = %787.0;
    %789 = @func_7012() /* ty=Tensor[(11, 4, 11), float32] */;
    (%788, %789)
  };
  %790() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float32]) */
}

def @func_4981(%var_4979: Tensor[(12, 7, 15), float64]) -> (Tensor[(12, 7, 15), uint16], Tensor[(12, 7, 15), float32]) {
  @func_4978(%var_4979) /* ty=(Tensor[(12, 7, 15), uint16], Tensor[(12, 7, 15), float32]) */
}

def @func_7831() -> (Tensor[(11, 4, 11), float32],) {
  @func_7829() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_5004() -> (Tensor[(11, 4, 11), float32],) {
  %792 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %791 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
    (%791,)
  };
  %792() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_4978(%var_4958: Tensor[(12, 7, 15), float64]) -> (Tensor[(12, 7, 15), uint16], Tensor[(12, 7, 15), float32]) {
  %793 = cast(%var_4958, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
  %794 = cosh(%793) /* ty=Tensor[(12, 7, 15), float64] */;
  %795 = cast(%var_4958, dtype="uint16") /* ty=Tensor[(12, 7, 15), uint16] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="uint16") /* ty=Tensor[(12, 7, 15), uint16] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %799 = cast(%var_4958, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %800 = minimum(%797, %798) /* ty=Tensor[(12, 7, 15), uint16] */;
  %801 = sin(%799) /* ty=Tensor[(12, 7, 15), float32] */;
  (%800, %801)
}

def @func_8868() -> (Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) {
  @func_8866() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), float64]) */
}

def @func_4105(%var_4070: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(11, 4, 11), float64]) {
  %802 = cast(%var_4070, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %803 = @func_2662() /* ty=(Tensor[(11, 4, 11), float32],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(11, 4, 11), float64] */;
  %806 = atanh(%802) /* ty=Tensor[(6, 9, 14), float32] */;
  %807 = cosh(%805) /* ty=Tensor[(11, 4, 11), float64] */;
  (%806, %807)
}

def @func_4066() -> (Tensor[(11, 4, 11), float64],) {
  @func_4064() /* ty=(Tensor[(11, 4, 11), float64],) */
}

def @func_4278() -> (Tensor[(11, 4, 11), float32],) {
  %810 = fn () -> (Tensor[(11, 4, 11), float32],) {
    %808 = @func_4174() /* ty=(Tensor[(11, 4, 11), float32],) */;
    %809 = %808.0;
    (%809,)
  };
  %810() /* ty=(Tensor[(11, 4, 11), float32],) */
}

def @func_7199(%var_7197: Tensor[(8, 11, 13), float32]) -> (Tensor[(8, 11, 13), float32],) {
  @func_7196(%var_7197) /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_2788(%var_2787: Tensor[(3120), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) {
  %822 = fn (%var_2769: Tensor[(3120), float64]) -> (Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) {
    %811 = cast(%var_2769, dtype="float64") /* ty=Tensor[(3120), float64] */;
    %812 = cast(%var_2769, dtype="float64") /* ty=Tensor[(3120), float64] */;
    %813 = reshape(%811, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float64] */;
    %814 = reshape(%812, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float64] */;
    %815 = @func_642(%813, %814) /* ty=Tensor[(15, 16, 13), float64] */;
    %816 = cast(%var_2769, dtype="uint8") /* ty=Tensor[(3120), uint8] */;
    %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%815, dtype="uint8") /* ty=Tensor[(15, 16, 13), uint8] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %820 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
    %821 = right_shift(%818, %819) /* ty=Tensor[(15, 16, 13), uint8] */;
    (%820, %821)
  };
  %822(%var_2787) /* ty=(Tensor[(11, 4, 11), float32], Tensor[(15, 16, 13), uint8]) */
}

def @func_5723(%var_5721: Tensor[(1008), uint64]) -> (int16, Tensor[(9, 7, 16), uint64], Tensor[(1008), uint64]) {
  %823 = @func_5290() /* ty=(Tensor[(11, 4, 11), float32], Tensor[(13, 9, 4), int16], int16, Tensor[(6, 78), int16]) */;
  %824 = cast(%var_5721, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %825 = cast(%var_5721, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %826 = reshape(%824, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint64] */;
  %827 = reshape(%825, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint64] */;
  %828 = @func_2935(%826, %827) /* ty=(Tensor[(9, 7, 16), uint64], Tensor[(9, 7, 16), float32]) */;
  %829 = %823.2;
  %830 = %828.0;
  (%829, %830, %var_5721)
}

def @func_6576() -> Tensor[(40), int64] {
  @func_6574() /* ty=Tensor[(40), int64] */
}

def @func_7360(%var_7358: Tensor[(8, 8, 1), float32], %var_7359: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) {
  %842 = fn (%var_7321: Tensor[(8, 8, 1), float32], %var_7322: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) {
    %831 = cast(%var_7321, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %832 = cast(%var_7322, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
    %833 = greater(%831, %832) /* ty=Tensor[(8, 8, 13), bool] */;
    %834 = cast(%833, dtype="float64") /* ty=Tensor[(8, 8, 13), float64] */;
    %835 = cast(%833, dtype="float64") /* ty=Tensor[(8, 8, 13), float64] */;
    %836 = cast(%var_7321, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
    %837 = @func_3166() /* ty=(Tensor[(11, 4, 11), bool],) */;
    %838 = log10(%834) /* ty=Tensor[(8, 8, 13), float64] */;
    %839 = erf(%835) /* ty=Tensor[(8, 8, 13), float64] */;
    %840 = atanh(%836) /* ty=Tensor[(8, 8, 1), float32] */;
    %841 = %837.0;
    (%838, %839, %840, %841)
  };
  %842(%var_7358, %var_7359) /* ty=(Tensor[(8, 8, 13), float64], Tensor[(8, 8, 13), float64], Tensor[(8, 8, 1), float32], Tensor[(11, 4, 11), bool]) */
}

def @func_3314(%var_3297: Tensor[(4, 15, 13), float64], %var_3298: Tensor[(4, 15, 13), float64]) -> (Tensor[(4, 15, 13), float64], Tensor[(11, 4, 11), float32], Tensor[(11, 4, 11), bool]) {
  %843 = cast(%var_3298, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %844 = shape_of(%var_3297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_3297, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %847 = @func_2710() /* ty=Tensor[(11, 4, 11), float32] */;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(11, 4, 11), float32] */;
  %849 = reshape(%848, newshape=[11, 4, 11]) /* ty=Tensor[(11, 4, 11), float32] */;
  %850 = power(%845, %846) /* ty=Tensor[(4, 15, 13), float64] */;
  %851 = @func_3220(%849) /* ty=Tensor[(11, 4, 11), bool] */;
  (%850, %847, %851)
}

def @func_7821(%var_7820: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(648), uint32]) {
  %860 = fn (%var_7791: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(648), uint32]) {
    %852 = cast(%var_7791, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
    %853 = log(%852) /* ty=Tensor[(3, 2, 11), float32] */;
    %854 = cast(%853, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
    %855 = sqrt(%854) /* ty=Tensor[(3, 2, 11), float32] */;
    %856 = cast(%855, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
    %857 = @func_5028() /* ty=(Tensor[(11, 4, 11), float64], Tensor[(8, 9, 9), uint32], Tensor[(648), uint32]) */;
    %858 = sin(%856) /* ty=Tensor[(3, 2, 11), float32] */;
    %859 = %857.2;
    (%858, %859)
  };
  %860(%var_7820) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(648), uint32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

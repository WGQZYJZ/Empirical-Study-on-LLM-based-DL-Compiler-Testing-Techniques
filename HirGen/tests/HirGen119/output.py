import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_614 = relay.var("var_614", dtype = "float64", shape = (15, 16, 13))#candidate|614|(15, 16, 13)|var|float64
var_615 = relay.var("var_615", dtype = "float64", shape = (15, 16, 13))#candidate|615|(15, 16, 13)|var|float64
bop_616 = relay.mod(var_614.astype('float64'), relay.reshape(var_615.astype('float64'), relay.shape_of(var_614))) # shape=(15, 16, 13)
output = bop_616
output2 = bop_616
func_642 = relay.Function([var_614,var_615,], output)
mod['func_642'] = func_642
mod = relay.transform.InferType()(mod)
var_643 = relay.var("var_643", dtype = "float64", shape = (15, 16, 13))#candidate|643|(15, 16, 13)|var|float64
var_644 = relay.var("var_644", dtype = "float64", shape = (15, 16, 13))#candidate|644|(15, 16, 13)|var|float64
output = func_642(var_643,var_644,)
func_645 = relay.Function([var_643,var_644,], output)
mutated_mod['func_645'] = func_645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1127 = relay.var("var_1127", dtype = "int16", shape = ())#candidate|1127|()|var|int16
var_1128 = relay.var("var_1128", dtype = "int16", shape = (13, 9, 4))#candidate|1128|(13, 9, 4)|var|int16
bop_1129 = relay.minimum(var_1127.astype('int16'), var_1128.astype('int16')) # shape=(13, 9, 4)
output = relay.Tuple([bop_1129,])
output2 = relay.Tuple([bop_1129,])
func_1132 = relay.Function([var_1127,var_1128,], output)
mod['func_1132'] = func_1132
mod = relay.transform.InferType()(mod)
mutated_mod['func_1132'] = func_1132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1132_call = mutated_mod.get_global_var('func_1132')
var_1134 = relay.var("var_1134", dtype = "int16", shape = ())#candidate|1134|()|var|int16
var_1135 = relay.var("var_1135", dtype = "int16", shape = (13, 9, 4))#candidate|1135|(13, 9, 4)|var|int16
call_1133 = func_1132_call(var_1134,var_1135,)
output = call_1133
func_1136 = relay.Function([var_1134,var_1135,], output)
mutated_mod['func_1136'] = func_1136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1264 = relay.var("var_1264", dtype = "float64", shape = (10, 12, 3))#candidate|1264|(10, 12, 3)|var|float64
uop_1265 = relay.sin(var_1264.astype('float64')) # shape=(10, 12, 3)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
const_1269 = relay.const(-2, dtype = "int16")#candidate|1269|()|const|int16
const_1270 = relay.const([-5,1,6,-9,6,3,-7,-7,4,-6,7,-9,-8,6,-7,-3,9,-10,-2,9,-2,-2,-9,-1,-10,-7,-7,-7,-3,5,1,2,3,-7,2,-3,-10,-5,-5,-1,-5,2,-7,9,4,-9,3,7,3,1,1,10,-10,-10,1,-9,-2,-8,-4,8,-10,-4,-8,9,6,7,-5,-1,-1,-9,4,9,-1,-4,6,2,1,-1,7,-10,-1,2,-3,-10,-4,7,6,-4,4,1,-2,-6,-9,3,8,-8,-10,4,3,-8,-2,5,-8,7,6,2,1,2,8,5,-1,-6,5,-4,5,-5,6,6,-8,-8,3,4,-9,-3,4,-2,2,5,9,6,-3,2,1,-3,-3,3,10,-9,4,5,-1,-2,-6,-2,10,10,1,3,10,-2,7,-6,-3,-6,-10,-6,10,3,8,-3,-5,2,-3,-7,10,-3,-7,2,7,-8,8,5,3,-6,-5,-7,-1,6,3,6,-7,8,9,3,-9,2,-4,-5,-7,5,-9,-4,-3,-4,-8,-10,9,-8,-10,-6,-9,-4,5,9,4,6,8,4,4,10,8,6,7,-8,2,-4,10,5,1,7,-10,9,-5,-1,-2,-9,-10,10,9,-4,3,4,-8,-9,5,-4,-1,2,7,2,-6,-2,8,-6,1,9,-10,7,2,-8,-4,-9,-7,-10,8,-4,7,-1,-7,3,8,3,-3,-5,8,1,8,-8,2,-7,-10,-7,6,-3,6,2,5,10,-6,6,-10,8,6,-1,4,3,1,-2,-5,-2,8,-4,1,-5,-1,-3,-8,9,8,4,-1,5,-6,-1,-1,-3,10,6,-1,8,-1,-5,3,5,-7,3,-8,2,-5,-5,7,-7,-5,-8,-3,-10,-9,-5,2,-6,-9,-7,-9,-8,-1,3,1,6,-1,2,-1,10,9,6,3,10,-3,8,-5,6,-1,5,9,8,6,-5,2,8,-9,3,-6,-6,10,-9,-2,3,4,-5,-1,-2,-3,-3,2,-6,-4,5,-4,7,4,-10,-2,10,-3,10,10,-1,1,-7,5,-4,-4,9,9,-1,5,-1,-6,-5,-8,3,9,10,-7,-2,10,-1,4,-2,9,8,-7,-3,10,2,-2,-7,-6,-10,-5,5,-8,-2,8,5,-9,1,2,1,-1,3,5,-4,-8,-5,-7,-8,7,-5,-6,-2,5,-3,7,-2,-4,-2,4,1,2,-3,-6,-2,-1,-8,9,-3,3,-5,9,-1,-2,-3,10,-6,-2,9,-2,-9], dtype = "int16")#candidate|1270|(468,)|const|int16
call_1268 = relay.TupleGetItem(func_1132_call(relay.reshape(const_1269.astype('int16'), []), relay.reshape(const_1270.astype('int16'), [13, 9, 4]), ), 0)
call_1271 = relay.TupleGetItem(func_1136_call(relay.reshape(const_1269.astype('int16'), []), relay.reshape(const_1270.astype('int16'), [13, 9, 4]), ), 0)
bop_1273 = relay.minimum(const_1269.astype('uint32'), uop_1265.astype('uint32')) # shape=(10, 12, 3)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
call_1276 = relay.TupleGetItem(func_1132_call(relay.reshape(const_1269.astype('int16'), []), relay.reshape(const_1270.astype('int16'), [13, 9, 4]), ), 0)
call_1277 = relay.TupleGetItem(func_1136_call(relay.reshape(const_1269.astype('int16'), []), relay.reshape(const_1270.astype('int16'), [13, 9, 4]), ), 0)
output = relay.Tuple([call_1268,const_1270,bop_1273,call_1276,])
output2 = relay.Tuple([call_1271,const_1270,bop_1273,call_1277,])
func_1296 = relay.Function([var_1264,], output)
mod['func_1296'] = func_1296
mod = relay.transform.InferType()(mod)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1297 = relay.var("var_1297", dtype = "float64", shape = (10, 12, 3))#candidate|1297|(10, 12, 3)|var|float64
func_1296_call = mutated_mod.get_global_var('func_1296')
call_1298 = func_1296_call(var_1297)
output = call_1298
func_1299 = relay.Function([var_1297], output)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1386 = relay.var("var_1386", dtype = "float64", shape = (8, 3, 10))#candidate|1386|(8, 3, 10)|var|float64
uop_1387 = relay.acos(var_1386.astype('float64')) # shape=(8, 3, 10)
output = uop_1387
output2 = uop_1387
func_1390 = relay.Function([var_1386,], output)
mod['func_1390'] = func_1390
mod = relay.transform.InferType()(mod)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1391 = relay.var("var_1391", dtype = "float64", shape = (8, 3, 10))#candidate|1391|(8, 3, 10)|var|float64
func_1390_call = mutated_mod.get_global_var('func_1390')
call_1392 = func_1390_call(var_1391)
output = call_1392
func_1393 = relay.Function([var_1391], output)
mutated_mod['func_1393'] = func_1393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1412 = relay.var("var_1412", dtype = "float64", shape = (10, 2, 1))#candidate|1412|(10, 2, 1)|var|float64
uop_1413 = relay.atan(var_1412.astype('float64')) # shape=(10, 2, 1)
output = uop_1413
output2 = uop_1413
func_1422 = relay.Function([var_1412,], output)
mod['func_1422'] = func_1422
mod = relay.transform.InferType()(mod)
var_1423 = relay.var("var_1423", dtype = "float64", shape = (10, 2, 1))#candidate|1423|(10, 2, 1)|var|float64
output = func_1422(var_1423)
func_1424 = relay.Function([var_1423], output)
mutated_mod['func_1424'] = func_1424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1874 = relay.var("var_1874", dtype = "float32", shape = (2, 4, 11))#candidate|1874|(2, 4, 11)|var|float32
uop_1875 = relay.exp(var_1874.astype('float32')) # shape=(2, 4, 11)
output = uop_1875
output2 = uop_1875
func_1882 = relay.Function([var_1874,], output)
mod['func_1882'] = func_1882
mod = relay.transform.InferType()(mod)
var_1883 = relay.var("var_1883", dtype = "float32", shape = (2, 4, 11))#candidate|1883|(2, 4, 11)|var|float32
output = func_1882(var_1883)
func_1884 = relay.Function([var_1883], output)
mutated_mod['func_1884'] = func_1884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1956 = relay.var("var_1956", dtype = "uint32", shape = (8, 9, 9))#candidate|1956|(8, 9, 9)|var|uint32
const_1957 = relay.const([[[4,-5,8,-6,-5,-2,-8,8,10],[-7,-8,5,-3,8,6,2,-5,-3],[-3,9,-1,2,-2,7,4,-6,-9],[6,8,1,-3,-8,-10,-1,-9,-8],[-1,-2,-3,-4,4,-9,-1,-6,8],[6,10,10,-4,2,-1,-6,3,7],[8,2,1,5,-6,-2,-8,-10,4],[-8,-10,4,1,8,-7,-9,-8,6],[-2,-3,4,7,-6,8,-6,8,7]],[[9,-1,1,4,2,-2,-1,-1,-3],[2,5,-6,5,1,7,-5,-7,7],[-4,-9,1,7,6,-8,3,10,5],[-2,7,6,-5,-4,9,2,10,-2],[-3,-5,-8,-9,-3,8,-4,-2,8],[-6,-1,5,2,5,-9,7,7,2],[-6,-6,-9,-9,-7,-5,-1,9,-3],[-3,-2,-1,5,-6,9,-8,10,-4],[-8,-3,3,1,-10,7,-5,-2,-9]],[[1,-10,-6,4,4,8,2,-10,-5],[4,9,6,-1,8,-9,6,-1,-6],[5,-3,-3,-4,10,-3,-9,9,-3],[5,10,-5,10,-1,-8,-10,-7,2],[7,-9,2,-10,-9,8,-7,-5,-6],[-6,-4,7,-3,6,3,4,-4,5],[-4,-6,5,4,8,-7,-2,1,1],[9,-9,6,3,-10,-2,4,1,7],[-5,-5,10,9,6,-7,2,-3,-1]],[[10,8,4,8,-3,9,2,3,-8],[1,5,1,-6,-10,-3,5,-6,5],[2,7,2,-5,1,-4,-1,10,4],[-9,-2,9,-1,-9,9,8,-9,7],[2,-6,10,-4,6,-8,-3,1,8],[-3,4,10,7,-5,3,-8,5,-10],[3,-5,-7,-9,10,10,-10,8,6],[-9,6,-1,-7,-7,-2,-5,-10,2],[-3,-2,1,-2,-6,4,10,4,7]],[[-6,4,-7,10,-1,-4,10,4,-10],[-5,-5,-3,-10,2,9,-1,6,-8],[-4,-6,-1,-6,6,4,-6,-8,-7],[-9,6,-4,1,-1,3,-9,-10,-9],[-5,-1,-6,9,-3,2,2,8,3],[4,-7,2,-4,4,7,-4,-10,-3],[3,10,-9,-7,-4,-8,7,10,6],[-4,4,-6,-5,1,-9,-4,6,-8],[4,7,-10,-6,6,-3,-9,-7,-8]],[[2,-5,-9,-9,7,-4,-10,10,-10],[-4,-7,2,5,8,-4,4,8,-1],[6,-9,-5,9,3,5,-10,-8,9],[9,-1,3,3,-3,7,-7,4,-5],[9,4,-3,-5,-8,-2,-5,9,7],[-3,-1,1,-10,2,-4,-3,-1,7],[8,7,-7,10,-9,7,-3,6,7],[-4,8,3,3,7,4,9,7,9],[6,-5,-10,-3,-5,9,-8,10,-10]],[[-8,-10,-8,2,-8,3,5,9,-6],[-4,-4,-2,2,-7,-8,9,10,2],[4,5,-2,-1,10,7,-9,-7,-2],[9,10,10,4,3,-7,-4,-8,-6],[9,-7,7,5,7,-2,-2,2,-6],[-8,-2,-4,8,1,-7,6,6,5],[9,1,3,-2,-4,-6,9,-1,-7],[-1,5,8,-10,-7,10,-10,-1,5],[-8,-6,-3,3,6,-6,-10,-7,10]],[[-6,2,7,-3,-10,-1,8,-2,-2],[-7,-9,-10,8,-2,5,-10,2,-2],[3,9,-2,8,2,2,-5,8,6],[8,7,8,-2,3,-8,7,2,5],[-8,2,1,1,-5,-1,-8,4,9],[-1,8,-6,-9,-10,-9,-5,-7,7],[10,-5,9,-7,-5,6,3,-6,1],[9,-7,1,5,-2,-2,2,9,9],[5,6,-7,3,-2,-10,3,3,2]]], dtype = "uint32")#candidate|1957|(8, 9, 9)|const|uint32
bop_1958 = relay.subtract(var_1956.astype('uint32'), relay.reshape(const_1957.astype('uint32'), relay.shape_of(var_1956))) # shape=(8, 9, 9)
output = bop_1958
output2 = bop_1958
func_1961 = relay.Function([var_1956,], output)
mod['func_1961'] = func_1961
mod = relay.transform.InferType()(mod)
var_1962 = relay.var("var_1962", dtype = "uint32", shape = (8, 9, 9))#candidate|1962|(8, 9, 9)|var|uint32
output = func_1961(var_1962)
func_1963 = relay.Function([var_1962], output)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2151 = relay.var("var_2151", dtype = "float32", shape = (11, 12, 15))#candidate|2151|(11, 12, 15)|var|float32
uop_2152 = relay.log(var_2151.astype('float32')) # shape=(11, 12, 15)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_2159 = relay.const([[-9,-6,-2,5],[6,-1,8,6],[-7,-9,-10,6],[-3,5,-8,-4],[5,-3,10,-6],[-5,-3,-10,8],[9,-6,-4,8],[-1,-1,-5,7],[7,-8,10,-3],[1,-10,6,-8],[-5,7,7,9],[8,6,-6,-5],[4,2,-7,1],[-3,-9,-6,8],[-1,1,10,-3],[-9,-4,-3,8],[4,1,4,-9],[2,-10,5,2],[-2,-2,-2,-3],[-6,-3,-9,6],[10,-7,1,5],[-4,-4,2,-4],[6,9,1,-8],[-2,-3,4,4],[-7,2,7,-3],[-10,-1,-10,9],[9,5,-3,-6],[-4,5,10,-3],[2,-7,1,-1],[5,-5,5,3],[3,7,-1,-10],[3,4,-5,-4],[-2,-8,-1,8],[-1,4,-7,3],[5,6,2,-10],[1,10,-2,-5],[-7,9,-1,5],[10,-9,6,-6],[9,-8,10,-8],[3,1,4,10],[-10,-9,-6,3],[4,2,4,-3],[-2,6,1,4],[-3,9,-2,1],[8,3,6,1],[-7,-2,-10,6],[7,7,5,2],[-8,-7,10,10],[-8,3,8,4],[6,8,2,-10],[-5,7,-8,-8],[-9,-5,-3,-8],[-8,4,6,3],[5,-6,7,-8],[-2,-2,5,7],[7,5,-8,10],[6,4,-4,-4],[8,8,7,-8],[2,-1,10,-2],[-9,6,2,3],[-1,-1,-4,4],[4,-7,-9,-2],[-5,-7,-1,3],[-6,9,-6,-5],[1,-4,3,-9],[1,10,1,10],[-6,-10,-3,-9],[1,-6,-4,5],[-9,2,-6,-8],[7,6,1,3],[-10,6,-5,4],[-5,-4,-1,4],[-8,1,7,3],[-1,-1,5,-2],[6,-10,-5,8],[3,10,-1,-6],[-3,4,-10,2],[-6,-6,7,-7],[7,4,2,-3],[4,-10,8,-3],[-5,-10,4,6],[5,2,-9,-4],[6,10,2,4],[-7,-10,-2,-7],[-1,-2,9,6],[2,-9,-5,-9],[3,-9,-3,10],[7,6,-4,-6],[9,2,8,3],[6,-2,5,1],[3,4,3,7],[-3,-9,5,1],[-5,-4,-9,-4],[-9,5,2,-5],[-8,-2,-10,-2],[1,1,9,1],[-3,9,-2,-8],[-3,-6,-10,9],[-9,-2,-1,3],[8,-7,-3,2],[-1,-1,-6,-3],[-1,6,-1,3],[8,-8,-10,9],[4,6,6,5],[-1,-2,5,-7],[-6,10,-8,7],[8,2,-6,-7],[-1,-10,-1,6],[-1,-8,-6,5],[-6,9,-9,9],[-2,7,-6,-10],[7,5,5,1],[-2,4,-4,9],[-3,-5,5,-2],[-8,6,-3,-2],[6,-10,1,-7],[-10,10,-10,-5],[7,7,-7,10],[-8,-1,3,-1],[3,10,-3,-8],[9,-9,4,6],[-6,-3,4,10],[10,-10,7,1],[-5,5,-9,-10],[-10,9,-3,-5],[-10,3,4,3],[-7,6,-6,-3],[8,-8,-8,7],[-7,1,-3,-2],[7,-6,-1,4],[4,9,4,1],[-9,-1,9,-6],[-6,10,-5,2],[-8,-4,7,-6],[-5,1,6,-5],[2,1,-4,10],[3,-9,2,2],[-8,-10,4,4],[-10,1,8,10],[-2,3,-9,-5],[-5,-3,-4,9],[-1,6,7,-7],[6,5,-5,-6],[-8,-4,2,-1],[4,5,9,1],[-5,5,1,-8],[-9,-1,-10,1],[5,-6,5,-3],[-9,8,-2,-8],[-9,8,-7,5],[1,-2,2,-8],[-1,4,-10,-6],[7,7,-4,-8],[-9,1,5,2],[5,-5,-7,3],[-7,-3,-6,-6],[-4,4,-9,1],[9,6,1,9],[1,-2,-1,8],[4,5,-10,-4],[-5,2,-1,5],[-6,-5,6,2]], dtype = "uint32")#candidate|2159|(162, 4)|const|uint32
call_2158 = func_1961_call(relay.reshape(const_2159.astype('uint32'), [8, 9, 9]))
call_2160 = func_1961_call(relay.reshape(const_2159.astype('uint32'), [8, 9, 9]))
output = relay.Tuple([uop_2152,call_2158,const_2159,])
output2 = relay.Tuple([uop_2152,call_2160,const_2159,])
func_2167 = relay.Function([var_2151,], output)
mod['func_2167'] = func_2167
mod = relay.transform.InferType()(mod)
mutated_mod['func_2167'] = func_2167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2168 = relay.var("var_2168", dtype = "float32", shape = (11, 12, 15))#candidate|2168|(11, 12, 15)|var|float32
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2169 = func_2167_call(var_2168)
output = call_2169
func_2170 = relay.Function([var_2168], output)
mutated_mod['func_2170'] = func_2170
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2385 = relay.var("var_2385", dtype = "bool", shape = (10, 4))#candidate|2385|(10, 4)|var|bool
var_2386 = relay.var("var_2386", dtype = "bool", shape = (10, 4))#candidate|2386|(10, 4)|var|bool
bop_2387 = relay.logical_and(var_2385.astype('bool'), relay.reshape(var_2386.astype('bool'), relay.shape_of(var_2385))) # shape=(10, 4)
func_2167_call = mod.get_global_var('func_2167')
func_2170_call = mutated_mod.get_global_var('func_2170')
const_2421 = relay.const([-9.138969,2.116697,7.020663,-0.897152,-1.212374,2.515262,0.106753,5.213747,-3.126988,-9.890385,-7.727682,1.436052,3.305775,-9.560434,5.182770,-4.712537,-7.445725,5.839151,-7.175189,0.298710,-1.515618,5.233105,0.858749,-9.972299,-5.269064,-7.817956,7.090267,1.027859,3.773305,-8.788293,-9.823687,-0.026763,-2.673259,-8.388028,4.094213,-8.579291,7.059959,-8.294238,-5.546210,-7.984383,8.503357,3.971599,-8.763168,4.420118,-5.674689,1.526413,-0.651169,-0.309477,5.623522,3.473794,-1.162293,-5.470622,-5.346442,1.398431,-2.720559,5.704585,-5.043051,-3.490068,0.971990,6.553777,8.246420,8.870633,-9.530502,3.084962,-1.238987,7.136069,-7.272175,-4.954547,-6.786593,8.192300,-9.482864,-4.237896,5.168192,9.961714,-6.877090,9.653659,1.540398,5.356953,-3.003343,5.545708,3.546822,8.611724,2.760992,-7.948315,0.881475,-8.483504,-9.879577,7.422762,8.565236,7.636976,8.084236,-3.221854,0.141677,-7.682090,-2.328675,-0.595041,-7.885982,9.267596,-7.596795,4.557011,8.117344,8.679216,-9.184691,2.960330,0.957011,2.945537,7.943157,-5.129100,2.476792,-7.786203,-9.961364,-7.089689,9.884059,-0.593507,1.432107,3.166911,5.354282,1.555949,0.174888,-7.963775,5.897986,1.765240,9.725125,8.318671,6.352236,-1.469121,-9.076311,-8.719987,-2.654352,4.047694,9.352915,-8.572070,4.330482,-2.745253,-4.109208,-6.077037,0.707137,5.906852,5.099051,2.363762,-4.059340,-5.842089,-4.820821,-8.827687,-2.641065,7.575397,5.382065,-3.670546,6.898358,1.951532,4.719960,8.870937,-6.307953,7.277867,8.435641,-3.340442,-7.855957,-3.742338,8.286710,2.097357,6.435519,9.062397,-9.116106,1.254401,6.626273,-2.747370,-6.795328,5.709498,-1.554725,-9.686411,4.844618,3.903541,-3.616444,4.717986,6.018038,1.766018,1.246485,5.615179,-4.338600,0.157932,8.484677,5.355818,9.829126,-3.377385,5.839527,5.652114,9.277148,7.700948,-7.808028,-8.999598,7.586811,-1.305087,-3.571342,9.298283,2.908267,-1.293861,-8.441592,-7.645168,-9.885007,8.790910,-0.537638,4.716619,2.745421,5.973329,8.054783,0.636705,7.390957,0.762313,3.172845,-5.307404,1.320890,-6.835848,-2.135641,3.820891,4.513815,7.044307,2.158945,-3.643985,6.718708,-6.001356,6.413654,2.265064,-8.190825,-8.435997,2.740509,-5.461150,-7.666221,-9.833110,2.414866,6.079080,-7.637301,-1.330063,4.010298,6.767861,-0.940459,0.456241,0.398467,-1.422955,8.413671,-9.996970,-5.933268,7.789194,2.601994,4.054070,0.329100,9.043888,0.619834,3.581957,-6.124231,3.445451,5.710321,-7.881826,-6.152242,-7.004563,-0.045999,-5.337990,8.376793,4.413004,-6.214467,1.816402,8.362947,3.985976,5.998660,-7.239939,5.645542,-3.120839,-9.849446,-5.870745,-9.342715,8.381281,9.112094,0.942166,8.555463,7.069755,8.664853,-2.721166,7.367995,-2.356845,-8.146914,7.894324,-2.975800,-3.508572,-7.999448,3.315630,7.327964,7.265381,2.452772,9.252298,6.248060,-4.096554,-7.827415,-7.687567,-4.369714,-7.940537,4.833615,3.531525,8.005970,-6.012693,-5.926109,-7.267616,-8.268811,-8.062563,-9.622174,2.846010,-6.865722,1.090865,-2.441214,-6.435577,-5.793600,9.840797,-5.338231,1.015616,0.109805,-9.686259,-1.183176,9.149997,-8.523670,-4.708371,-1.420042,4.396882,1.710587,9.409835,-2.374381,-4.919585,-7.771559,-6.722650,-7.676980,-8.442035,5.961118,8.539258,-9.120788,0.154540,-4.187046,3.594414,4.024846,2.633064,5.616689,-0.397172,3.779426,-4.985866,-8.837344,-8.220687,0.031396,-9.424358,0.022554,-9.976090,3.946999,0.486769,8.354282,-6.811490,0.953206,2.221662,-8.353347,-4.004589,-9.298783,3.261713,0.174030,-4.696282,-0.612852,1.565187,-3.056253,7.536047,8.332487,-7.298033,-0.408469,2.107480,-7.734560,-5.847496,-0.930176,-9.680012,-1.420460,-0.001780,-6.143512,-5.730987,6.167638,-7.417756,9.778999,7.379317,-6.427978,4.820851,-4.443326,-4.357107,3.109081,1.221843,0.035078,-5.211377,0.854172,1.839074,8.006921,5.390207,-6.917416,6.513558,7.863757,-7.345073,-2.917630,-6.760347,8.866396,4.795860,-0.108093,-6.046772,1.634065,5.456963,5.131043,-9.126720,-6.574177,-8.752703,3.089815,-4.176781,-7.805222,1.238604,-1.614444,-5.661343,-1.667384,-6.610491,-8.842897,1.914549,6.861307,8.557828,7.299651,-9.699379,6.225596,-4.626408,-9.672560,6.304658,-9.370493,8.089438,1.053696,-6.408956,1.318208,-6.427815,2.582085,7.733493,-2.751749,-8.306516,-1.260434,1.145604,2.990377,4.100947,-0.596016,-6.030328,0.123800,4.881041,4.941721,-5.534921,-0.406257,6.497310,-2.243899,-2.501746,6.946215,8.545387,5.416531,1.408978,-3.085340,-7.135847,0.323844,8.465758,-2.913482,2.949708,-9.153477,3.107834,-6.724421,1.551870,7.554992,4.500651,-5.957328,6.535433,7.589831,-7.487562,3.869127,-3.274361,4.288686,9.010737,-3.298509,-5.372346,-2.861905,6.482733,-3.160634,-0.647876,2.567438,-2.793264,-1.211314,4.888053,-9.318964,1.917283,3.035049,-6.039040,-8.958715,-4.674663,6.123697,8.146768,-8.261255,-1.231953,6.990810,2.429556,4.437843,-2.870023,8.772668,2.206075,1.488183,3.558226,0.434341,-1.543258,4.530404,-7.884288,4.759417,-2.857424,0.905394,-3.921128,1.195649,1.936823,3.375478,-5.352147,9.636042,-1.621585,7.692628,6.963818,3.118111,-2.352741,6.200410,5.703775,-6.278396,-2.482736,2.532001,1.298934,-0.025239,0.866268,-6.099268,-2.426120,6.825002,9.853217,-4.270385,9.357665,-5.742067,-1.469268,4.707723,-9.012832,-1.205881,9.544611,6.383338,-6.550848,4.635568,9.333829,-3.143584,3.414065,-4.147923,-4.432512,-3.986953,-2.596192,0.766609,-9.744240,6.761435,-0.817747,5.538706,3.782597,-2.671176,8.280918,9.167568,-8.668342,-2.622550,7.125292,-0.339340,-1.546612,-6.289516,0.534896,9.455085,-7.111359,-7.700198,-4.126511,-6.884490,-5.106121,-1.735667,-0.264443,-9.114963,3.632099,-9.882060,9.118399,-2.343892,9.511250,-8.811711,-1.942745,-7.548980,-0.973905,3.244853,3.661037,-5.127055,6.531635,4.902208,-9.520141,-3.404455,-6.461187,0.973999,6.270886,3.650807,-4.147060,4.820039,-6.841340,0.043881,-9.532616,2.026199,-9.622124,7.451376,-6.462912,5.115503,-3.236117,-4.509091,-0.599625,-2.111788,9.501328,8.260562,2.059592,-7.734335,-8.277555,0.696618,2.282972,-7.370998,-3.425978,2.817112,-7.373368,-6.712142,-9.454455,-3.132824,-2.219537,-9.232274,-0.025268,3.431900,-4.894891,2.581983,3.222106,0.615801,-7.562847,-4.161718,3.368371,1.380479,-7.353597,-4.843292,8.650457,0.365186,2.683599,0.958251,0.678658,8.682296,8.315284,4.102175,1.966907,0.603443,-7.273018,1.191689,7.403575,-5.411355,-7.628293,-2.449380,4.351584,3.215100,6.203919,-2.706019,0.229973,-1.698510,8.530925,5.102741,-0.406117,-6.688381,-8.288207,-3.679323,-1.287974,3.064374,7.697695,-9.524364,4.848906,7.293529,3.469666,-4.850433,2.349756,5.057885,-5.630879,-9.931606,3.740900,7.421569,-1.074365,2.077916,-9.864460,0.084049,-8.047694,-2.839735,0.527889,-4.929180,-3.146918,6.788026,7.542667,-8.581814,8.007537,-1.196128,8.991883,-7.060465,5.611645,-5.575610,-6.813268,3.357055,-4.246694,-2.815206,7.017168,-7.837609,8.761763,5.542123,-0.736678,-0.278461,-2.570653,-6.957807,1.531271,8.156223,-6.355609,-0.560680,2.554529,4.627181,-1.602099,1.423124,-5.374469,5.429397,4.247395,-9.675799,-2.687266,1.808586,8.823562,-0.298716,-0.294825,5.060598,6.361191,4.973948,8.431675,-6.292118,8.392263,1.817044,1.889732,0.668598,1.686710,-7.730444,1.194532,6.891839,6.615813,5.841480,2.784282,-0.473502,-6.342873,-6.749022,-8.556236,1.372475,-4.640699,5.342938,8.712538,4.618095,-4.731437,-0.334063,2.399081,-2.708010,9.306064,4.132285,-1.786433,-0.073029,3.941497,-1.720562,1.450142,3.043483,-6.276341,-4.240495,-5.241983,8.541822,7.896977,-7.158036,8.578260,-5.330079,-4.676954,7.709052,3.442807,1.248281,-9.170545,0.524096,-5.918485,-6.534810,5.260471,-0.943154,-6.725068,3.736256,-9.883265,-5.057251,-1.960376,-1.073136,-2.792459,-7.794957,6.951848,6.483661,6.174630,-3.256153,6.608863,2.654720,9.967828,-2.282766,4.466642,5.268585,6.467649,2.088910,-0.470372,-9.845256,8.486335,6.001986,9.090444,1.313855,3.444997,-4.763270,-4.167691,7.206153,4.720331,3.344506,6.815409,-4.416611,-3.508071,9.319643,-5.581124,-2.949165,-1.780253,-3.478766,-3.143085,-0.860649,1.389975,-0.840005,-5.190796,6.263726,-2.985113,-4.231985,-5.229999,-3.933841,-3.979492,2.536570,-4.319490,7.499629,7.670247,-6.184471,7.849045,3.122667,0.344970,-9.393878,-8.540003,3.527375,-5.491052,-8.383442,1.593392,2.049491,-9.104698,-3.025932,-4.598605,0.869723,2.466845,3.680490,3.901079,-0.625211,7.226475,-8.237340,-5.236580,-1.259267,-4.952498,5.001795,6.184745,8.398940,-6.094404,-9.655989,1.783299,-8.349650,0.625527,3.960831,8.698461,1.577254,-1.657915,-7.452395,-0.910749,9.690707,6.720083,-4.796305,-0.360156,3.594438,9.370486,7.007784,2.695925,4.532205,-8.209264,4.483841,-3.339784,-6.851285,7.073092,-7.142955,4.554528,-0.592255,-2.516990,9.382411,-2.390104,8.869156,6.845530,6.801789,1.890040,9.598752,4.832117,1.333227,-0.425285,9.759616,-4.766663,5.135246,5.441238,-5.415065,-3.298169,-7.738188,-9.731068,-7.878123,7.939080,4.485814,-6.309119,-0.358033,3.779793,-4.803056,8.553149,7.979902,3.074063,6.866696,-9.126557,-6.430418,8.239867,-4.558291,5.695954,4.173689,-5.493762,6.733699,-4.157522,-7.807268,6.130223,0.162563,-7.456310,-6.612524,8.283740,1.506538,5.709653,-6.121440,-5.102071,8.740946,5.092281,-4.708150,0.420526,-7.385643,4.643606,3.455646,3.083340,5.691045,-6.678377,1.391424,6.597992,5.090724,1.600589,-5.626163,-3.387696,5.308250,-4.079516,0.298883,3.335111,2.534890,9.370650,3.797498,8.743121,-8.975116,-8.615054,9.132322,-3.281396,-5.121128,-5.787654,-0.356588,-4.026486,-9.918519,4.034072,-6.429395,-7.880113,-5.545207,6.207990,-8.219170,-2.384540,-8.856989,7.276942,2.666144,-4.595935,1.861836,-8.504649,-0.611807,7.082605,6.527431,-8.963379,4.617874,-8.782316,-8.103196,7.851336,-8.492818,-2.869018,-2.400153,3.680911,4.097779,6.083352,-7.101342,-5.526796,0.027908,-4.354218,3.010007,-2.128920,2.582859,-1.936183,-7.824864,-2.584067,9.273988,1.059634,-5.401496,9.534060,7.720400,-6.775671,-5.424925,-0.808845,-3.990336,8.747162,0.675725,-8.102135,-6.330903,2.594512,-5.239556,3.885328,-3.077752,7.473133,3.038459,-8.698897,-1.272430,3.850067,-9.009736,-4.984970,-3.993205,-5.260592,8.005221,-4.248972,6.392863,7.837386,6.737333,8.999349,0.052107,0.470450,-8.143830,4.584952,-4.134077,8.085345,-3.332708,-9.938595,1.170230,3.450392,2.866916,-9.258812,4.290287,3.007268,0.661977,-6.380045,7.589517,8.388734,5.836213,-0.529428,8.680931,-3.964428,6.815525,-4.529676,7.102702,-7.913566,9.445714,4.434033,-4.156552,-9.288437,-4.999817,-6.390231,-4.303650,1.747975,2.252648,4.512245,0.255345,-9.510848,-6.924015,-1.970951,-0.103265,7.136770,4.167589,-3.880797,6.926193,9.518635,8.928302,0.649394,-3.661479,-9.476535,2.366621,-3.069329,7.518208,9.996584,-6.418370,-5.775374,-5.411274,-4.593217,-8.383053,3.016265,0.189927,6.054387,1.496648,-4.411344,4.593372,9.822932,1.510879,-2.803577,-4.918447,-5.207816,8.102907,-5.208240,-4.641781,9.038973,8.828333,-4.899063,-1.562043,-1.979404,8.497225,4.811579,2.265540,2.081336,-4.337730,3.050105,4.921112,3.439981,-8.897568,6.510588,6.358360,-6.916770,3.072140,7.100956,-6.505497,4.282414,9.884963,8.614907,5.742143,2.902847,-4.737131,4.867400,-1.898876,-5.616754,-3.217215,-0.078718,-2.964344,-1.040360,3.646074,9.570445,0.794397,1.195588,3.417730,0.689188,3.799923,8.318409,-1.796163,-2.993965,5.470855,7.225030,-4.689134,7.589328,-9.088300,-7.703131,-7.380965,-2.341060,0.729653,-6.528031,-1.814354,8.304239,-5.482062,4.446003,2.499841,1.913955,-8.049253,-2.334228,-7.282280,2.759040,-8.663036,8.235910,-9.192722,-8.703470,0.095532,-2.865234,3.799685,-0.415618,-9.475652,-6.839473,4.380837,1.195241,-2.948198,-3.625027,2.558533,-0.934989,9.357321,-5.564670,5.602261,6.560297,0.640242,-1.684764,-7.753594,-5.183552,-9.241056,-9.658125,1.338764,1.524515,-6.453062,-9.506730,5.709904,7.977625,-2.062529,-0.198821,-9.092361,0.529606,-4.571811,-6.699930,-4.185141,2.745987,2.679239,-3.902743,4.325633,6.999130,5.742794,-2.546889,-1.265697,1.756160,7.695009,-4.764517,-7.748745,-2.173791,5.386022,8.009522,2.721554,-1.431835,-0.023044,8.541269,-6.372500,8.745882,7.497694,-9.753479,2.189586,-9.783402,-3.344966,9.055420,-7.676118,7.034519,-4.866440,8.987580,0.564950,4.163047,-1.253222,-0.841371,6.211626,-9.502337,9.452601,-1.387701,4.229598,7.862747,3.353442,-8.842255,-5.786010,2.337222,-6.364325,5.945922,-4.782887,4.963587,8.698885,7.144126,-9.648496,1.113652,-0.867004,-6.133624,8.356625,5.467924,-7.848948,-9.961971,4.124137,-3.293132,1.082045,-1.269492,-9.566124,-3.748308,9.572920,-1.866516,-2.722219,5.286067,4.123842,-5.784769,3.237089,0.365004,3.984102,4.704401,8.067674,-3.611896,2.190030,-6.461113,-3.733963,2.752271,-3.754857,7.010505,-4.917910,8.100142,0.316179,-0.535116,-7.380907,-0.825148,4.562094,-3.858499,4.239194,1.678853,9.721082,-1.800419,2.924599,0.646284,0.628607,-3.157012,8.719093,7.439816,7.138332,-9.342988,9.426849,7.060733,-1.529064,4.350940,-1.386224,-2.658071,-9.405583,9.389524,-9.368078,6.511401,-5.876001,1.496214,-4.047871,-8.208025,-9.925697,0.006015,1.826038,0.402757,-9.141708,-1.461973,9.683429,9.903654,6.903192,6.662210,9.039836,-3.877551,-7.337756,-8.096234,-1.382720,-2.091224,3.413359,9.954719,-8.852613,-8.796329,4.736145,8.569079,9.452153,8.698652,-4.432637,-0.782758,1.567674,2.172253,9.602694,-8.423738,-1.265529,-2.265058,-3.313523,-8.172214,-2.435236,-9.675177,8.875032,2.240077,-9.605865,-1.613887,2.212460,-0.323760,8.172696,0.458553,7.637109,-7.150911,-4.832323,1.774456,-4.124725,-3.454493,-1.925942,5.656289,-8.780048,-6.012912,0.180743,6.801683,-7.806608,4.769889,3.805105,-0.588983,5.789097,-6.765977,7.600600,-2.568270,-5.026286,7.399244,5.501043,-8.621018,9.892059,-0.712641,6.964617,1.823596,-2.717173,9.717218,8.871933,-0.694482,3.989567,6.069660,2.222197,-6.596091,-6.133657,-0.797131,-9.662905,6.058256,-1.950884,-3.688903,-3.600805,1.812884,6.396007,-1.138758,-6.919710,9.578296,-0.728651,-1.854595,-4.676102,5.593489,-8.485382,4.521909,-4.435338,-3.751412,-7.834319,8.931385,7.167608,2.979713,4.522780,4.137461,8.359232,7.019351,7.766978,2.556424,5.340269,-9.382178,-4.794537,-2.946088,2.657284,0.770502,-3.776304,-3.232242,6.141395,-9.098984,1.308504,-2.472586,-1.494401,-8.684867,-8.247542,3.363899,-5.850181,2.215790,6.234351,-6.632620,7.418572,6.258327,-0.849372,2.490202,6.122391,-5.356139,3.905487,9.340045,9.857784,-1.583829,4.674340,7.109450,2.910298,1.453672,-8.514150,7.902882,9.627460,4.110530,-4.012027,-4.991169,-7.834511,3.833942,9.102728,7.899887,-4.898652,-8.498568,-9.191986,-1.550275,5.337998,-7.492630,9.479388,5.374339,-2.524343,-1.853846,1.623633,8.534230,9.554569,9.561942,0.891700,8.446166,-5.346426,-2.126274,4.534173,3.121315,-8.684043,1.619004,1.344378,-1.310595,1.131626,7.057951,5.065735,8.643387,9.076289,-8.632384,5.266190,-3.389457,5.402901,-7.423650,3.194236,2.961051,-3.310031,8.447588,5.902378,9.608204,-7.109764,7.366786,5.414655,8.160972,-4.491616,-8.787091,3.799562,5.992136,6.378603,-9.948524,7.726068,-5.850745,-5.073173,-2.815344,6.221236,-2.316489,-3.373676,-3.039488,-0.022903,-9.763039,1.234483,4.548171,0.751724,9.432878,-9.301810,-5.182181,-6.788905,0.440960,-5.224143,-2.018275,-2.041933,-1.908780,7.437130,-1.908671,-0.186527,-8.108025,0.445273,-6.032172,-2.225747,0.802356,3.657650,8.297350,-5.480938,-1.810266,-2.163673,3.776856,-0.373847,6.631622,-7.616812,6.296705,-3.795538,-7.681088,9.948296,-9.578873,-7.869463,3.827772,9.572455,2.543850,3.288385,6.266226,3.583759,-0.506066,-5.651447,7.842415,-9.843084,1.941832,-1.979435,-0.475437,-4.015865,9.582203,9.029887,7.495960,0.066608,-0.115557,-2.298436,-3.277347,-2.186872,2.960802,-6.496911,0.282138,-1.515413,8.689415,-1.095935,-3.988700,7.176417,-4.213345,-6.559249,7.772564,-1.061602,3.751637,8.248370,-8.491159,-2.309056,-9.119763,-2.844854,9.381945,-6.554275,7.896193,1.107222,-8.401138,-8.221814,9.070548,-6.270922,-0.984340,-9.768476,5.742241,-3.449848,-6.680620,-9.500495,2.770966,-2.374596,8.292923,-4.358513,-8.381862,-5.434628,-9.754712,9.197091,-4.780792,-4.066781,-7.505442,-4.363566,4.600981,-7.972103,4.598546,-1.057455,7.332247,-7.900709,-1.699528,-2.690346,-7.159388,1.396517,7.267683,-8.069884,-3.926770,-1.615918,0.284316,-5.956268,1.835308,-3.043339,1.484571,-5.055324,-8.900981,4.296488,1.243795,3.291103,1.341476,-4.017630,0.444427,-3.043076,7.999180,-5.785433,1.077126,7.427975,0.355008,9.044582,4.800580,-1.089840,-1.249331,-3.559022,9.459364,6.417198,-5.015940,1.775302,-9.059478,3.041517,-7.871445,0.644825,-3.771826,1.466028,-0.542855,3.180990,-8.152343,3.964462,1.161885,-4.812940,1.376654,1.187490,1.956199,6.120491,-7.175938,8.055256,3.940822,-5.695575,-5.228732,5.416363,1.167039,-0.781725,-3.371180,-9.905052,8.727409,-5.796358,8.544041,-8.834749,-7.328962,-6.011927,-5.714802,-7.942946,-6.331242,7.427313,-7.561391,-4.903285,2.397246,8.908486,-8.409174,-1.190589,-8.067389,0.335177,-0.840920,-5.873369,2.114326,-4.233121,-4.701267,1.564043,2.951728,6.842447,-4.598425,9.784301,-8.248123,4.404750,4.623242,-8.486101,4.277040,0.840279,9.846912,-9.128811,-6.373794,-0.233063,7.195370,-3.614283,5.648597,-1.504718,4.329553,9.417870,-5.322461,-9.889203,-3.006290,3.583047,-3.378800,-7.255668,-2.775880,0.106028,4.499862,-6.732543,2.060664,3.270103,-4.816229,-8.316941,-6.791423,-9.791724,6.341631,-5.634367,3.448264,7.704786,-8.245913,-2.881974,-6.620563,5.939745,9.034333,0.415547,-6.232334,8.515949,-5.915203,-7.889861,-3.102555,-6.538310,-7.320245,2.000995,-8.165023,5.923763,-3.812480,-8.728199,6.082374,-7.630673,3.197208,-1.082987,8.173644,-6.020542,3.475064,-2.267857,3.915756,6.733004,2.146859,-5.646709,5.981123,-3.177578,6.058283,8.715629,-1.801592,0.794390,2.138871,-8.306049,-7.883840,-1.379742,1.074644,9.156072,5.748854,-9.644406,4.626485,0.860601,6.745313,8.791358,-2.424376,0.042154,-7.349526,-4.854887,-3.777936,-0.843370,9.002204,1.021178,6.414729,-3.676080,8.900749,4.614422,0.624382,-6.170698,-0.251955,6.869165,-7.168895,-0.016763,1.095675,-9.495385,8.304105,-0.209279,1.505200,0.568436,-9.973120,-9.292321,8.889715,3.884321,-8.966881,7.760256,1.779774,1.854473,3.445922,-8.179027,-6.324751,4.358621,-9.177716,-0.687973,6.523993,-7.201599,9.348381,3.401281,5.293130,3.845900,-5.315881,-6.944816,0.561425,9.634010,2.685248,-3.000845,-8.259960,6.406707,1.812754,7.339551,-9.434133,9.041678,-2.853582,-8.937495,6.673573,0.352347,-0.366255,2.052016,4.067854,-2.796375,-2.703173,-7.983071,-8.944711,9.023766,8.873010,-8.808739,4.211236,-0.007833,7.274957,5.588697,-9.812728,-3.246800,-1.635951,6.051196,1.993959,2.083514,-0.301841,-1.791362,6.186266,-4.695003,-5.076544,-2.183269,-1.063074,7.588905,1.711701,-3.769113,0.650375,-4.615781,-5.229689,6.497574,-5.714300,-7.615465,-4.755830,9.026239,-6.093890,8.235716,8.715314,-0.172291,-6.789199,7.536870,-8.369313,4.060115,-4.850011,-5.849924,6.824908,-3.004850,-4.671629,-6.897381,-5.627215,-0.658079,-1.351518,6.075862,-0.353911,3.551387,-4.352183,-1.938031,1.035640,-0.268883,-5.156298,-1.752007,4.103095,1.160605,7.986461,-7.115672,2.028854,2.474379,-5.413670,5.861492,-3.006938,8.885949,8.501182,-1.409859,-9.822732,4.225622,8.952347,-6.960479,-8.199332,-1.956555,-2.112332,8.598879,0.320623,5.328255,-8.335399,-8.778483,9.696888,8.065911,-1.442280,6.423913,-6.736012], dtype = "float32")#candidate|2421|(1980,)|const|float32
call_2420 = relay.TupleGetItem(func_2167_call(relay.reshape(const_2421.astype('float32'), [11, 12, 15])), 0)
call_2422 = relay.TupleGetItem(func_2170_call(relay.reshape(const_2421.astype('float32'), [11, 12, 15])), 0)
output = relay.Tuple([bop_2387,call_2420,const_2421,])
output2 = relay.Tuple([bop_2387,call_2422,const_2421,])
func_2429 = relay.Function([var_2385,var_2386,], output)
mod['func_2429'] = func_2429
mod = relay.transform.InferType()(mod)
mutated_mod['func_2429'] = func_2429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mutated_mod.get_global_var('func_2429')
var_2431 = relay.var("var_2431", dtype = "bool", shape = (10, 4))#candidate|2431|(10, 4)|var|bool
var_2432 = relay.var("var_2432", dtype = "bool", shape = (10, 4))#candidate|2432|(10, 4)|var|bool
call_2430 = func_2429_call(var_2431,var_2432,)
output = call_2430
func_2433 = relay.Function([var_2431,var_2432,], output)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2657 = relay.const([[[1.630028,-2.516448,0.722220,-4.119497,-3.808162,-4.894456,-5.479102,-0.886892,7.813411,1.544263,5.093105],[8.029263,-0.017029,7.096259,-5.209928,-1.054730,-2.914481,-9.629000,5.750750,-3.858675,1.087216,8.545303],[9.544727,-0.203994,-4.335287,8.622303,6.494950,-1.458339,-7.280655,9.998243,-5.118877,-3.370313,-1.316623],[2.057328,3.222033,-5.430011,-1.158416,5.319323,5.984302,-4.975006,4.239473,-4.618969,-8.162465,-7.976803]],[[-1.503313,-0.268818,0.669307,2.706665,4.429863,-8.032579,-8.435362,7.612200,-7.883797,2.086218,-7.056356],[6.447776,1.258059,8.837252,1.994641,-0.683254,4.548973,-3.753503,2.471480,6.407627,-2.957623,5.637304],[-2.233157,-9.313516,8.238234,-9.546861,0.328288,3.977853,3.236784,1.666697,5.688401,-8.294543,-8.195312],[3.330203,9.513137,-9.514067,-1.216803,-8.762336,-7.483605,0.169279,-3.721682,-9.883759,-1.816058,-2.433293]],[[-8.920143,-7.808520,6.971638,-4.173733,5.396634,6.763197,-7.326371,6.214449,-3.719129,2.695428,-6.343706],[-4.855576,1.319440,-4.424298,1.857280,1.666623,-1.014553,8.466523,0.378544,5.819306,9.914946,9.341116],[-7.568096,1.449841,-5.260647,-9.771702,2.441985,-3.392724,9.298958,-4.176704,7.219466,-1.929351,5.559972],[-1.270130,3.322864,-2.985181,-1.794613,7.839236,-2.088302,2.104029,5.212306,1.574188,0.752810,7.803056]],[[-9.381805,2.228197,-5.568846,-5.850139,4.813648,-0.060095,-5.596153,4.394979,-9.639278,-2.616564,9.753082],[3.760421,5.198400,-6.184120,-5.611479,4.753116,6.210958,2.032660,-0.881654,-6.356213,-9.321149,-2.912451],[1.806662,5.728227,-4.532478,-7.928651,-6.695579,3.494883,-4.389330,-7.598662,2.408085,9.766418,-5.914354],[-5.852366,-1.543964,-0.985929,4.944877,-4.375248,-2.939139,-4.590643,3.550360,3.873108,5.797037,2.465246]],[[-3.719473,-5.605422,1.007890,-2.239960,-5.833627,-8.029771,7.592608,2.823587,9.940123,5.720630,-8.899974],[6.712570,-0.332467,9.376992,5.828684,9.191247,-0.565008,4.249331,-9.090468,3.680697,9.568148,2.805971],[-3.798770,6.871462,-7.912218,0.146561,7.118812,-0.590937,1.242933,7.787102,-6.608950,-6.104708,-3.316512],[-3.721949,-7.168962,-4.479379,9.942141,-5.893504,-6.178802,-0.918749,2.443896,0.828583,-6.145057,-3.657166]],[[5.355086,-8.400311,4.955768,-6.066569,-4.866855,-7.866624,-3.084397,-4.318468,-1.672714,7.136552,3.269167],[-3.529407,-9.765095,6.649295,5.388885,-3.120135,0.663579,9.117099,-1.191456,-7.363626,-0.514917,6.464331],[0.248271,9.621166,-4.073999,2.517677,-3.609969,-5.864799,5.105571,3.356668,-1.996013,-5.933459,-9.888590],[-3.959017,9.460913,2.781856,0.218375,9.096749,9.739630,-4.948881,2.514019,9.755292,1.768752,-3.164902]],[[8.886838,-1.073996,-5.887434,3.655101,-1.042051,7.673997,-1.818628,5.484360,9.738188,4.963231,7.010153],[-1.345758,1.765288,-2.354616,-8.327879,9.051865,-0.292022,6.667196,-0.822977,5.525444,-9.703976,4.975209],[-0.515738,-0.769056,2.654325,-8.004892,7.246559,4.753042,-7.881484,-7.115874,6.570311,-9.521586,9.808067],[-8.938829,-4.511291,-0.884576,-8.718598,9.303746,-0.677302,-4.121958,0.088765,4.934937,2.737396,5.692750]],[[-2.025113,-2.186914,-0.174516,-6.039981,-7.860050,9.460113,-0.470619,4.598348,8.184400,4.988423,-9.875638],[7.116922,-2.160516,4.714126,-3.113289,2.086237,-6.013718,-3.749432,-1.711694,-8.745289,3.132561,6.060774],[0.358838,-0.258163,-7.115476,-8.156137,9.032277,-2.220931,-4.916700,3.531002,9.633400,-0.740905,5.796450],[-2.112973,4.278182,-8.905444,-6.604504,-0.163930,4.657659,7.709266,5.484535,-3.511967,1.879161,-2.241634]],[[-3.115885,-3.678916,1.874431,3.517185,5.886957,-3.971215,-4.388486,2.514967,6.796381,-6.024597,-7.932135],[-7.648890,-7.793702,-9.498397,7.818962,5.147629,9.843640,3.061802,-3.726857,2.720828,-6.747431,-8.440440],[-6.531800,-4.978030,-9.369594,-9.596502,-9.302185,-8.881973,-9.491882,-6.321128,3.866304,1.572272,-7.633139],[0.339402,-8.099368,-7.909564,8.004839,0.317574,1.170659,8.003678,6.419628,-9.784495,-5.638405,-0.404942]],[[-6.347081,-2.105758,-4.130713,-3.611160,1.204676,-5.016956,-3.780323,-7.810081,4.066356,9.074166,4.229510],[-8.538664,8.571280,-2.490516,8.461281,-8.306255,-7.783674,-9.877582,-4.569140,1.817288,-6.970818,2.519307],[-5.096883,-5.797885,-4.015798,-0.901252,-9.001655,-9.369157,-9.391459,3.159719,4.207838,4.616496,3.230064],[-1.030445,-4.727848,2.062531,2.387347,5.452747,-7.189090,-4.512780,4.174939,2.902266,2.109223,3.931240]],[[-0.669761,-5.321730,-8.426359,0.632701,9.216069,-5.527901,7.110925,-2.490072,-0.876391,7.426797,-8.926525],[4.476263,-1.224465,8.559955,-1.954698,5.396079,-8.805605,-9.786428,2.601753,-6.896475,-1.081102,-4.994794],[-5.059435,-9.494891,-2.289074,8.072910,0.680533,8.535342,4.766875,-3.344502,3.215131,9.402977,6.418722],[3.126699,4.681273,7.026564,-2.823403,-5.852526,-6.249181,7.794206,-1.540432,6.759814,-7.981805,1.551714]]], dtype = "float32")#candidate|2657|(11, 4, 11)|const|float32
uop_2658 = relay.sqrt(const_2657.astype('float32')) # shape=(11, 4, 11)
uop_2660 = relay.cos(uop_2658.astype('float32')) # shape=(11, 4, 11)
output = relay.Tuple([uop_2660,])
output2 = relay.Tuple([uop_2660,])
func_2662 = relay.Function([], output)
mod['func_2662'] = func_2662
mod = relay.transform.InferType()(mod)
output = func_2662()
func_2663 = relay.Function([], output)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2672 = relay.TupleGetItem(func_2662_call(), 0)
call_2673 = relay.TupleGetItem(func_2663_call(), 0)
output = relay.Tuple([call_2672,])
output2 = relay.Tuple([call_2673,])
func_2681 = relay.Function([], output)
mod['func_2681'] = func_2681
mod = relay.transform.InferType()(mod)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2682 = func_2681_call()
output = call_2682
func_2683 = relay.Function([], output)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2708 = relay.TupleGetItem(func_2681_call(), 0)
call_2709 = relay.TupleGetItem(func_2683_call(), 0)
output = call_2708
output2 = call_2709
func_2710 = relay.Function([], output)
mod['func_2710'] = func_2710
mod = relay.transform.InferType()(mod)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mutated_mod.get_global_var('func_2710')
call_2711 = func_2710_call()
output = call_2711
func_2712 = relay.Function([], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2720 = relay.TupleGetItem(func_2662_call(), 0)
call_2721 = relay.TupleGetItem(func_2663_call(), 0)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_2724 = relay.var("var_2724", dtype = "uint32", shape = (648,))#candidate|2724|(648,)|var|uint32
call_2723 = func_1961_call(relay.reshape(var_2724.astype('uint32'), [8, 9, 9]))
call_2725 = func_1961_call(relay.reshape(var_2724.astype('uint32'), [8, 9, 9]))
output = relay.Tuple([call_2720,call_2723,var_2724,])
output2 = relay.Tuple([call_2721,call_2725,var_2724,])
func_2730 = relay.Function([var_2724,], output)
mod['func_2730'] = func_2730
mod = relay.transform.InferType()(mod)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2731 = relay.var("var_2731", dtype = "uint32", shape = (648,))#candidate|2731|(648,)|var|uint32
func_2730_call = mutated_mod.get_global_var('func_2730')
call_2732 = func_2730_call(var_2731)
output = call_2732
func_2733 = relay.Function([var_2731], output)
mutated_mod['func_2733'] = func_2733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_2747 = func_2710_call()
call_2748 = func_2710_call()
func_642_call = mod.get_global_var('func_642')
func_645_call = mutated_mod.get_global_var('func_645')
var_2769 = relay.var("var_2769", dtype = "float64", shape = (3120,))#candidate|2769|(3120,)|var|float64
call_2768 = func_642_call(relay.reshape(var_2769.astype('float64'), [15, 16, 13]), relay.reshape(var_2769.astype('float64'), [15, 16, 13]), )
call_2770 = func_642_call(relay.reshape(var_2769.astype('float64'), [15, 16, 13]), relay.reshape(var_2769.astype('float64'), [15, 16, 13]), )
bop_2782 = relay.right_shift(call_2768.astype('uint8'), relay.reshape(var_2769.astype('uint8'), relay.shape_of(call_2768))) # shape=(15, 16, 13)
bop_2785 = relay.right_shift(call_2770.astype('uint8'), relay.reshape(var_2769.astype('uint8'), relay.shape_of(call_2770))) # shape=(15, 16, 13)
output = relay.Tuple([call_2747,bop_2782,])
output2 = relay.Tuple([call_2748,bop_2785,])
func_2786 = relay.Function([var_2769,], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
var_2787 = relay.var("var_2787", dtype = "float64", shape = (3120,))#candidate|2787|(3120,)|var|float64
output = func_2786(var_2787)
func_2788 = relay.Function([var_2787], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2808 = relay.TupleGetItem(func_2681_call(), 0)
call_2809 = relay.TupleGetItem(func_2683_call(), 0)
var_2810 = relay.var("var_2810", dtype = "float32", shape = (11, 4, 11))#candidate|2810|(11, 4, 11)|var|float32
bop_2811 = relay.not_equal(call_2808.astype('bool'), relay.reshape(var_2810.astype('bool'), relay.shape_of(call_2808))) # shape=(11, 4, 11)
bop_2814 = relay.not_equal(call_2809.astype('bool'), relay.reshape(var_2810.astype('bool'), relay.shape_of(call_2809))) # shape=(11, 4, 11)
func_2730_call = mod.get_global_var('func_2730')
func_2733_call = mutated_mod.get_global_var('func_2733')
var_2822 = relay.var("var_2822", dtype = "uint32", shape = (54, 12))#candidate|2822|(54, 12)|var|uint32
call_2821 = relay.TupleGetItem(func_2730_call(relay.reshape(var_2822.astype('uint32'), [648,])), 1)
call_2823 = relay.TupleGetItem(func_2733_call(relay.reshape(var_2822.astype('uint32'), [648,])), 1)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
var_2829 = relay.var("var_2829", dtype = "int16", shape = ())#candidate|2829|()|var|int16
var_2830 = relay.var("var_2830", dtype = "int16", shape = (468,))#candidate|2830|(468,)|var|int16
call_2828 = relay.TupleGetItem(func_1132_call(relay.reshape(var_2829.astype('int16'), []), relay.reshape(var_2830.astype('int16'), [13, 9, 4]), ), 0)
call_2831 = relay.TupleGetItem(func_1136_call(relay.reshape(var_2829.astype('int16'), []), relay.reshape(var_2830.astype('int16'), [13, 9, 4]), ), 0)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
call_2832 = func_1961_call(relay.reshape(var_2822.astype('uint32'), [8, 9, 9]))
call_2833 = func_1961_call(relay.reshape(var_2822.astype('uint32'), [8, 9, 9]))
uop_2848 = relay.sin(call_2821.astype('float32')) # shape=(8, 9, 9)
uop_2850 = relay.sin(call_2823.astype('float32')) # shape=(8, 9, 9)
uop_2851 = relay.sinh(call_2808.astype('float64')) # shape=(11, 4, 11)
uop_2853 = relay.sinh(call_2809.astype('float64')) # shape=(11, 4, 11)
output = relay.Tuple([bop_2811,var_2822,call_2828,var_2829,var_2830,call_2832,uop_2848,uop_2851,])
output2 = relay.Tuple([bop_2814,var_2822,call_2831,var_2829,var_2830,call_2833,uop_2850,uop_2853,])
func_2857 = relay.Function([var_2810,var_2822,var_2829,var_2830,], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2857_call = mutated_mod.get_global_var('func_2857')
var_2859 = relay.var("var_2859", dtype = "float32", shape = (11, 4, 11))#candidate|2859|(11, 4, 11)|var|float32
var_2860 = relay.var("var_2860", dtype = "uint32", shape = (54, 12))#candidate|2860|(54, 12)|var|uint32
var_2861 = relay.var("var_2861", dtype = "int16", shape = ())#candidate|2861|()|var|int16
var_2862 = relay.var("var_2862", dtype = "int16", shape = (468,))#candidate|2862|(468,)|var|int16
call_2858 = func_2857_call(var_2859,var_2860,var_2861,var_2862,)
output = call_2858
func_2863 = relay.Function([var_2859,var_2860,var_2861,var_2862,], output)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2910 = relay.var("var_2910", dtype = "uint64", shape = (9, 7, 16))#candidate|2910|(9, 7, 16)|var|uint64
var_2911 = relay.var("var_2911", dtype = "uint64", shape = (9, 7, 16))#candidate|2911|(9, 7, 16)|var|uint64
bop_2912 = relay.minimum(var_2910.astype('uint64'), relay.reshape(var_2911.astype('uint64'), relay.shape_of(var_2910))) # shape=(9, 7, 16)
uop_2928 = relay.erf(var_2911.astype('float32')) # shape=(9, 7, 16)
output = relay.Tuple([bop_2912,uop_2928,])
output2 = relay.Tuple([bop_2912,uop_2928,])
func_2935 = relay.Function([var_2910,var_2911,], output)
mod['func_2935'] = func_2935
mod = relay.transform.InferType()(mod)
var_2936 = relay.var("var_2936", dtype = "uint64", shape = (9, 7, 16))#candidate|2936|(9, 7, 16)|var|uint64
var_2937 = relay.var("var_2937", dtype = "uint64", shape = (9, 7, 16))#candidate|2937|(9, 7, 16)|var|uint64
output = func_2935(var_2936,var_2937,)
func_2938 = relay.Function([var_2936,var_2937,], output)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2958 = relay.TupleGetItem(func_2662_call(), 0)
call_2959 = relay.TupleGetItem(func_2663_call(), 0)
uop_2960 = relay.atan(call_2958.astype('float64')) # shape=(11, 4, 11)
uop_2962 = relay.atan(call_2959.astype('float64')) # shape=(11, 4, 11)
func_1390_call = mod.get_global_var('func_1390')
func_1393_call = mutated_mod.get_global_var('func_1393')
const_2968 = relay.const([9.944531,3.576420,6.976520,4.540459,-6.829283,4.531623,-9.074692,4.745086,-2.797917,-6.209594,1.510731,-3.652358,0.769700,6.974700,-3.994715,-6.816900,-9.337497,3.737680,-7.889689,1.185982,-5.466707,-4.967845,5.277723,-8.537653,2.485418,5.403214,8.654111,8.452103,-2.876068,1.913950,-0.121114,-6.243605,-3.947591,-1.007035,3.829746,2.850882,-8.906300,-8.082827,0.333398,-9.895060,8.733680,-5.406574,3.737087,-7.255463,-5.029022,-5.675751,9.628142,-7.672538,-1.850657,-7.591299,-5.433917,-0.726000,-1.514206,-7.533177,7.932384,-9.155385,-3.157798,8.218702,-3.050836,8.422561,-8.039301,8.817777,-4.709745,1.219025,-3.494962,-7.243771,2.937226,-3.723411,-5.614656,4.784596,6.765156,-9.201297,-4.513871,5.071404,8.037718,-2.249319,-4.265882,-8.050928,6.322122,-5.112475,5.792918,-2.354510,3.953026,-9.899543,6.610876,5.637793,4.143630,-4.676126,7.317976,4.858170,-4.140018,-6.503007,6.515054,5.870864,-7.402190,0.579521,0.955956,-7.427042,-7.599258,-4.095587,3.286695,-5.063425,1.036321,-5.429863,-2.730875,-0.843224,6.462102,9.025643,4.185977,5.651397,-8.097476,8.271231,-8.948547,-6.917822,3.007479,-2.700205,-0.456119,9.116950,1.116421,1.377733,7.410201,-3.048305,-2.816375,-1.488582,6.152072,-5.655095,-4.343934,7.262843,3.449454,3.921143,-2.823518,2.194309,-4.209013,-7.891527,7.396504,1.893083,2.348044,3.132290,4.265278,6.400478,-4.370363,7.363279,-9.956881,1.843785,-5.078548,-2.026636,5.589041,-4.422663,-1.029438,3.470350,-2.674284,6.314058,8.688321,4.499443,-0.145889,1.733402,-1.260811,1.619122,8.675242,6.755763,3.706225,-9.913549,9.072372,-5.633347,9.890954,4.215618,-2.560130,-2.223638,-5.979551,-9.405172,-9.224004,2.282689,-0.104334,1.824667,5.475268,-6.226824,-6.806895,5.362408,5.740240,-3.095602,-6.887808,-2.097043,-4.892990,-2.880437,-9.594062,7.187181,-1.291060,-9.124098,2.691426,-8.245421,-0.048010,9.780251,4.118671,-1.289910,-7.404985,1.492350,2.383648,6.111400,-3.937153,-0.087359,-2.370230,-5.376855,-5.901066,-9.619419,-2.054921,-6.872821,3.075160,-5.936789,6.177624,2.700901,1.617992,-6.122361,-5.969808,-0.960819,1.525747,8.310145,-0.688918,-1.737976,-0.029037,-8.726300,2.342540,2.051869,-6.147422,5.559747,7.483559,2.825605,6.653360,6.825438,9.601888,8.516335,-2.374280,-7.456351,-5.627194,2.115530,1.240760,2.230348,-8.227756,9.218985,-9.891274,-7.909906], dtype = "float64")#candidate|2968|(240,)|const|float64
call_2967 = func_1390_call(relay.reshape(const_2968.astype('float64'), [8, 3, 10]))
call_2969 = func_1390_call(relay.reshape(const_2968.astype('float64'), [8, 3, 10]))
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
var_2975 = relay.var("var_2975", dtype = "int16", shape = ())#candidate|2975|()|var|int16
var_2976 = relay.var("var_2976", dtype = "int16", shape = (468, 1))#candidate|2976|(468, 1)|var|int16
call_2974 = relay.TupleGetItem(func_1132_call(relay.reshape(var_2975.astype('int16'), []), relay.reshape(var_2976.astype('int16'), [13, 9, 4]), ), 0)
call_2977 = relay.TupleGetItem(func_1136_call(relay.reshape(var_2975.astype('int16'), []), relay.reshape(var_2976.astype('int16'), [13, 9, 4]), ), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
call_2979 = relay.TupleGetItem(func_1132_call(relay.reshape(var_2975.astype('int16'), []), relay.reshape(var_2976.astype('int16'), [13, 9, 4]), ), 0)
call_2980 = relay.TupleGetItem(func_1136_call(relay.reshape(var_2975.astype('int16'), []), relay.reshape(var_2976.astype('int16'), [13, 9, 4]), ), 0)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2981 = relay.TupleGetItem(func_2662_call(), 0)
call_2982 = relay.TupleGetItem(func_2663_call(), 0)
bop_2987 = relay.left_shift(var_2976.astype('uint32'), const_2968.astype('uint32')) # shape=(468, 240)
bop_3003 = relay.add(var_2976.astype('int32'), var_2975.astype('int32')) # shape=(468, 1)
bop_3009 = relay.logical_or(uop_2960.astype('bool'), var_2975.astype('bool')) # shape=(11, 4, 11)
bop_3012 = relay.logical_or(uop_2962.astype('bool'), var_2975.astype('bool')) # shape=(11, 4, 11)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_3016 = relay.const([[9,3,-6,-4,7,-3,-6,-4,-1,9,4,-1,-7,2,6,-9,-10,2,-1,3,10,2,10,-6,-10,-8,-10,7,-10,5,-8,9,-9,8,-1,2,6,7,10,8,6,-8,-7,-4,-5,2,-3,3,-4,-4,1,-6,9,-2,7,-3,-6,-1,-4,-1,-4,-6,4,1,-10,4,-2,-8,-6,-2,-8,5,-3,-8,-1,-8,2,2,-3,7,-9,-5,-1,-1,-3,9,-5,-7,3,7,-4,9,-1,5,5,9,1,4,-9,1,6,-3,-6,-1,-6,3,5,8,-4,-2,-3,4,5,7,10,5,-10,1,9,-5,2,4,1,-5,-3,5,-8,-9,6,8,-6,4,-3,1,6,-6,-1,6,-10,-8,-10,6,-1,-2,3,-3,-4,4,-9,-9,9,3,-4,4,10,7,-5,9,-8,-5,10,9,-4,-3,-7,7,-10,6,9,-9,1,10,-9,-4,-9,-9,6,5,2,-2,-2,5,-7,-7,-10,-7,10,-9,-4,7,1,-4,-5,-6,9,-6,-6,5,1,-2,-8,-3,4,-9,-4,-4,4,1,-7,8,4,-8,-2,-4,5,-3,-4,-3,-8,-1,-1,-7,-4,-6,-7,8,-6,-2,1,3,-3,-1,3,-7,6,-1,-4,-4,9,1,4,-7,-8,-1,6,-5,10,-8,-9,2,-5,-4,3,1,-8,8,-4,4,-4,2,-9,-9,-4,2,5,1,-8,3,5,-5,-6,6,-6,1,5,9,2,-3,-6,10,-8,3,7,1,-8,6,-7,-4,-5,2,10,-4,-1,9,-1,-1,9,8,10,10,4,-3,-2,-6,4,7,-1,-8,-7,2,-3,10,8,10,5,-7,-9,10,7,-10,-5,-7,-7,3,-10,-3,-9,-7,-1,7,10,-3,-6,2,-10,-6,-9,-5,8,2,2,-4,-10,-10,-9,-5,4,-2,2,6,8,10,5,-4,3,4,3,8,9,4,-8,-9,-8,3,-4,-5,10,-10,3,9,-1,-3,1,8,1,7,3,-2,-6,-1,1,-5,-3,6,-8,-2,-10,-3,-8,10,-5,1,-3,-6,-5,1,7,8,10,4,1,-7,2,-1,-3,2,-7,5,-5,1,10,-7,-8,6,1,6,-7,2,-2,-10,3,4,-4,-2,-10,10,-6,6,3,2,2,-5,-10,8,1,9,-1,-4,2,5,-10,1,-1,-8,10,8,7,-1,-2,8,-7,7,-10,5,8,3,5,2,10,2,-1,2,-8,4,1,3,-1,-6,-3,4,-10,-9,-10,3,-4,-9,-7,-2,3,-5,10,-2,10,3,-8,-3,1,-3,5,-10,-1,4,10,-5,4,7,9,4,-7,1,3,2,-7,4,1,1,-2,1,2,7,5,-1,-3,-4,-1,6,10,-7,-2,-1,6,-6,8,2,-3,-8,-5,3,-4,-10,1,-9,3,9,9,-10,-1,-5,4,-1,-8,-5,5,-3,-6,-4,-9,9,-10,-9,8,6,-8,10,-8,-10,9,-1,7,3,-1,10,9,3,-8,2,4,5,9,-7,-8,5,-4,2,-4,-5,-10,-4,4,2,-10,10,-10,-7,2,-8,-2,-8,1,10,-2,10,-9,5,-4,9,-9,9,4,10,1,-6,3,9,-3,1,3,-9,8,10,-9,7,6,9,3,3,7,8,3,-4,-6,2,-8,4,5,9,2,3,-1,5,-10,-1,10,-9,-7,-1,-9,4,4,-5,-3,2,-10,3,-7,-9,-1,-6]], dtype = "uint32")#candidate|3016|(1, 648)|const|uint32
call_3015 = func_1961_call(relay.reshape(const_3016.astype('uint32'), [8, 9, 9]))
call_3017 = func_1961_call(relay.reshape(const_3016.astype('uint32'), [8, 9, 9]))
output = relay.Tuple([call_2967,call_2974,call_2979,call_2981,bop_2987,bop_3003,bop_3009,call_3015,const_3016,])
output2 = relay.Tuple([call_2969,call_2977,call_2980,call_2982,bop_2987,bop_3003,bop_3012,call_3017,const_3016,])
func_3020 = relay.Function([var_2975,var_2976,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3020_call = mutated_mod.get_global_var('func_3020')
var_3022 = relay.var("var_3022", dtype = "int16", shape = ())#candidate|3022|()|var|int16
var_3023 = relay.var("var_3023", dtype = "int16", shape = (468, 1))#candidate|3023|(468, 1)|var|int16
call_3021 = func_3020_call(var_3022,var_3023,)
output = call_3021
func_3024 = relay.Function([var_3022,var_3023,], output)
mutated_mod['func_3024'] = func_3024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3038 = relay.TupleGetItem(func_2681_call(), 0)
call_3039 = relay.TupleGetItem(func_2683_call(), 0)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3040 = relay.TupleGetItem(func_2681_call(), 0)
call_3041 = relay.TupleGetItem(func_2683_call(), 0)
output = relay.Tuple([call_3038,call_3040,])
output2 = relay.Tuple([call_3039,call_3041,])
func_3047 = relay.Function([], output)
mod['func_3047'] = func_3047
mod = relay.transform.InferType()(mod)
mutated_mod['func_3047'] = func_3047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mutated_mod.get_global_var('func_3047')
call_3048 = func_3047_call()
output = call_3048
func_3049 = relay.Function([], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_3065 = relay.TupleGetItem(func_2662_call(), 0)
call_3066 = relay.TupleGetItem(func_2663_call(), 0)
uop_3070 = relay.asinh(call_3065.astype('float32')) # shape=(11, 4, 11)
uop_3072 = relay.asinh(call_3066.astype('float32')) # shape=(11, 4, 11)
uop_3088 = relay.sigmoid(call_3065.astype('float64')) # shape=(11, 4, 11)
uop_3090 = relay.sigmoid(call_3066.astype('float64')) # shape=(11, 4, 11)
bop_3098 = relay.equal(uop_3070.astype('bool'), relay.reshape(uop_3088.astype('bool'), relay.shape_of(uop_3070))) # shape=(11, 4, 11)
bop_3101 = relay.equal(uop_3072.astype('bool'), relay.reshape(uop_3090.astype('bool'), relay.shape_of(uop_3072))) # shape=(11, 4, 11)
output = relay.Tuple([bop_3098,])
output2 = relay.Tuple([bop_3101,])
func_3106 = relay.Function([], output)
mod['func_3106'] = func_3106
mod = relay.transform.InferType()(mod)
output = func_3106()
func_3107 = relay.Function([], output)
mutated_mod['func_3107'] = func_3107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_3159 = relay.TupleGetItem(func_3106_call(), 0)
call_3160 = relay.TupleGetItem(func_3107_call(), 0)
output = relay.Tuple([call_3159,])
output2 = relay.Tuple([call_3160,])
func_3166 = relay.Function([], output)
mod['func_3166'] = func_3166
mod = relay.transform.InferType()(mod)
output = func_3166()
func_3167 = relay.Function([], output)
mutated_mod['func_3167'] = func_3167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mod.get_global_var('func_3047')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3173 = relay.TupleGetItem(func_3047_call(), 0)
call_3174 = relay.TupleGetItem(func_3049_call(), 0)
var_3192 = relay.var("var_3192", dtype = "float32", shape = (11, 4, 11))#candidate|3192|(11, 4, 11)|var|float32
bop_3193 = relay.less_equal(call_3173.astype('bool'), relay.reshape(var_3192.astype('bool'), relay.shape_of(call_3173))) # shape=(11, 4, 11)
bop_3196 = relay.less_equal(call_3174.astype('bool'), relay.reshape(var_3192.astype('bool'), relay.shape_of(call_3174))) # shape=(11, 4, 11)
output = bop_3193
output2 = bop_3196
func_3220 = relay.Function([var_3192,], output)
mod['func_3220'] = func_3220
mod = relay.transform.InferType()(mod)
var_3221 = relay.var("var_3221", dtype = "float32", shape = (11, 4, 11))#candidate|3221|(11, 4, 11)|var|float32
output = func_3220(var_3221)
func_3222 = relay.Function([var_3221], output)
mutated_mod['func_3222'] = func_3222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3284 = relay.TupleGetItem(func_2681_call(), 0)
call_3285 = relay.TupleGetItem(func_2683_call(), 0)
output = relay.Tuple([call_3284,])
output2 = relay.Tuple([call_3285,])
func_3294 = relay.Function([], output)
mod['func_3294'] = func_3294
mod = relay.transform.InferType()(mod)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3295 = func_3294_call()
output = call_3295
func_3296 = relay.Function([], output)
mutated_mod['func_3296'] = func_3296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3297 = relay.var("var_3297", dtype = "float64", shape = (4, 15, 13))#candidate|3297|(4, 15, 13)|var|float64
var_3298 = relay.var("var_3298", dtype = "float64", shape = (4, 15, 13))#candidate|3298|(4, 15, 13)|var|float64
bop_3299 = relay.power(var_3297.astype('float64'), relay.reshape(var_3298.astype('float64'), relay.shape_of(var_3297))) # shape=(4, 15, 13)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_3303 = func_2710_call()
call_3304 = func_2710_call()
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
call_3308 = func_3220_call(relay.reshape(call_3303.astype('float32'), [11, 4, 11]))
call_3309 = func_3220_call(relay.reshape(call_3303.astype('float32'), [11, 4, 11]))
output = relay.Tuple([bop_3299,call_3303,call_3308,])
output2 = relay.Tuple([bop_3299,call_3304,call_3309,])
func_3314 = relay.Function([var_3297,var_3298,], output)
mod['func_3314'] = func_3314
mod = relay.transform.InferType()(mod)
mutated_mod['func_3314'] = func_3314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3314_call = mutated_mod.get_global_var('func_3314')
var_3316 = relay.var("var_3316", dtype = "float64", shape = (4, 15, 13))#candidate|3316|(4, 15, 13)|var|float64
var_3317 = relay.var("var_3317", dtype = "float64", shape = (4, 15, 13))#candidate|3317|(4, 15, 13)|var|float64
call_3315 = func_3314_call(var_3316,var_3317,)
output = call_3315
func_3318 = relay.Function([var_3316,var_3317,], output)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3399 = relay.TupleGetItem(func_2681_call(), 0)
call_3400 = relay.TupleGetItem(func_2683_call(), 0)
output = relay.Tuple([call_3399,])
output2 = relay.Tuple([call_3400,])
func_3405 = relay.Function([], output)
mod['func_3405'] = func_3405
mod = relay.transform.InferType()(mod)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mutated_mod.get_global_var('func_3405')
call_3406 = func_3405_call()
output = call_3406
func_3407 = relay.Function([], output)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_3431 = func_2710_call()
call_3432 = func_2710_call()
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_3461 = relay.TupleGetItem(func_3106_call(), 0)
call_3462 = relay.TupleGetItem(func_3107_call(), 0)
bop_3476 = relay.less(call_3461.astype('bool'), relay.reshape(call_3431.astype('bool'), relay.shape_of(call_3461))) # shape=(11, 4, 11)
bop_3479 = relay.less(call_3462.astype('bool'), relay.reshape(call_3432.astype('bool'), relay.shape_of(call_3462))) # shape=(11, 4, 11)
bop_3490 = relay.divide(call_3461.astype('float64'), relay.reshape(call_3431.astype('float64'), relay.shape_of(call_3461))) # shape=(11, 4, 11)
bop_3493 = relay.divide(call_3462.astype('float64'), relay.reshape(call_3432.astype('float64'), relay.shape_of(call_3462))) # shape=(11, 4, 11)
output = relay.Tuple([bop_3476,bop_3490,])
output2 = relay.Tuple([bop_3479,bop_3493,])
func_3511 = relay.Function([], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
output = func_3511()
func_3512 = relay.Function([], output)
mutated_mod['func_3512'] = func_3512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_3513 = func_2710_call()
call_3514 = func_2710_call()
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
call_3526 = func_3220_call(relay.reshape(call_3513.astype('float32'), [11, 4, 11]))
call_3527 = func_3220_call(relay.reshape(call_3513.astype('float32'), [11, 4, 11]))
output = relay.Tuple([call_3513,call_3526,])
output2 = relay.Tuple([call_3514,call_3527,])
func_3540 = relay.Function([], output)
mod['func_3540'] = func_3540
mod = relay.transform.InferType()(mod)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mutated_mod.get_global_var('func_3540')
call_3541 = func_3540_call()
output = call_3541
func_3542 = relay.Function([], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mod.get_global_var('func_3047')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3543 = relay.TupleGetItem(func_3047_call(), 0)
call_3544 = relay.TupleGetItem(func_3049_call(), 0)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_3545 = relay.TupleGetItem(func_3540_call(), 1)
call_3546 = relay.TupleGetItem(func_3542_call(), 1)
output = relay.Tuple([call_3543,call_3545,])
output2 = relay.Tuple([call_3544,call_3546,])
func_3547 = relay.Function([], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
output = func_3547()
func_3548 = relay.Function([], output)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3559 = relay.const([[-7.072191,-4.659538,-8.391960,2.098125],[0.695381,4.211493,1.382374,-3.832943],[-6.867923,1.247642,-6.333560,-7.747258],[8.470144,-4.692949,2.957883,-5.279014],[-9.366663,-6.029068,-1.228209,3.653135],[5.709991,4.165568,-7.882253,-3.445120],[7.714915,-1.882074,-0.299419,-8.003740]], dtype = "float64")#candidate|3559|(7, 4)|const|float64
uop_3560 = relay.cos(const_3559.astype('float64')) # shape=(7, 4)
output = relay.Tuple([uop_3560,])
output2 = relay.Tuple([uop_3560,])
func_3601 = relay.Function([], output)
mod['func_3601'] = func_3601
mod = relay.transform.InferType()(mod)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mutated_mod.get_global_var('func_3601')
call_3602 = func_3601_call()
output = call_3602
func_3603 = relay.Function([], output)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_3617 = relay.TupleGetItem(func_3405_call(), 0)
call_3618 = relay.TupleGetItem(func_3407_call(), 0)
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
call_3620 = func_3220_call(relay.reshape(call_3617.astype('float32'), [11, 4, 11]))
call_3621 = func_3220_call(relay.reshape(call_3617.astype('float32'), [11, 4, 11]))
output = relay.Tuple([call_3617,call_3620,])
output2 = relay.Tuple([call_3618,call_3621,])
func_3637 = relay.Function([], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
output = func_3637()
func_3638 = relay.Function([], output)
mutated_mod['func_3638'] = func_3638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3645 = relay.TupleGetItem(func_3166_call(), 0)
call_3646 = relay.TupleGetItem(func_3167_call(), 0)
uop_3660 = relay.erf(call_3645.astype('float32')) # shape=(11, 4, 11)
uop_3662 = relay.erf(call_3646.astype('float32')) # shape=(11, 4, 11)
output = relay.Tuple([uop_3660,])
output2 = relay.Tuple([uop_3662,])
func_3683 = relay.Function([], output)
mod['func_3683'] = func_3683
mod = relay.transform.InferType()(mod)
output = func_3683()
func_3684 = relay.Function([], output)
mutated_mod['func_3684'] = func_3684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3708 = relay.var("var_3708", dtype = "float64", shape = (10, 11, 2))#candidate|3708|(10, 11, 2)|var|float64
uop_3709 = relay.sigmoid(var_3708.astype('float64')) # shape=(10, 11, 2)
output = uop_3709
output2 = uop_3709
func_3716 = relay.Function([var_3708,], output)
mod['func_3716'] = func_3716
mod = relay.transform.InferType()(mod)
var_3717 = relay.var("var_3717", dtype = "float64", shape = (10, 11, 2))#candidate|3717|(10, 11, 2)|var|float64
output = func_3716(var_3717)
func_3718 = relay.Function([var_3717], output)
mutated_mod['func_3718'] = func_3718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_3726 = relay.TupleGetItem(func_3547_call(), 1)
call_3727 = relay.TupleGetItem(func_3548_call(), 1)
var_3747 = relay.var("var_3747", dtype = "bool", shape = (11, 4, 11))#candidate|3747|(11, 4, 11)|var|bool
bop_3748 = relay.right_shift(call_3726.astype('uint16'), relay.reshape(var_3747.astype('uint16'), relay.shape_of(call_3726))) # shape=(11, 4, 11)
bop_3751 = relay.right_shift(call_3727.astype('uint16'), relay.reshape(var_3747.astype('uint16'), relay.shape_of(call_3727))) # shape=(11, 4, 11)
output = relay.Tuple([bop_3748,])
output2 = relay.Tuple([bop_3751,])
func_3753 = relay.Function([var_3747,], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
var_3754 = relay.var("var_3754", dtype = "bool", shape = (11, 4, 11))#candidate|3754|(11, 4, 11)|var|bool
output = func_3753(var_3754)
func_3755 = relay.Function([var_3754], output)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_3763 = func_2710_call()
call_3764 = func_2710_call()
const_3771 = relay.const([[[5.476087,6.971488,-5.996746,-7.870004,0.994605,1.067625,8.403153,4.411562,-5.991371,8.853470,8.427079],[-2.003769,-5.209053,-6.229202,-4.886818,4.450583,6.208024,-3.964730,1.199125,-0.007568,-8.531076,-5.530550],[-1.812922,1.496734,1.170372,8.877460,-5.053215,6.212012,-3.638082,-1.862044,2.398776,-0.911287,-0.135043],[-0.651085,-9.981690,8.095340,8.759308,-7.732735,5.158726,-7.808120,-8.403377,8.970371,8.632306,8.887627]],[[-3.814176,9.371256,-7.702069,-3.180596,-1.638133,-0.309706,7.107802,6.083533,-7.932094,-0.187364,1.599825],[-6.631774,-8.206507,-9.200364,-4.687667,3.440312,-7.365217,-4.306370,8.856263,1.447559,-6.620442,-3.584480],[1.548966,-6.280017,9.810765,-9.039495,5.085939,-5.266755,-7.467989,7.113119,2.521686,-5.747051,8.737399],[-3.039370,8.742068,-8.941552,8.252870,-8.345628,-2.806397,-1.869064,3.358955,-5.700846,1.556795,1.676356]],[[-1.834259,-9.579295,9.441593,0.264198,-3.469394,4.733142,8.820034,2.720438,-3.131399,-6.412444,-9.420212],[-4.203671,7.471160,-4.009570,-7.244296,-5.696820,-6.938999,-0.140950,4.864086,6.072887,4.605438,-9.730763],[-5.223093,2.915484,4.703510,-2.238019,1.687549,1.209344,3.833793,5.106993,5.211879,-5.103003,6.549599],[-3.691058,-5.112995,-1.408116,-7.488241,8.092446,-5.887277,-6.496699,-5.634612,9.666495,4.486663,-5.148999]],[[-3.186463,-6.858283,6.841267,6.026646,9.559216,-8.278424,8.921373,6.043588,7.851263,4.395816,-8.627448],[8.571399,-6.412425,-8.648676,3.499872,-0.616991,-8.300745,-9.633150,-8.495087,-1.210467,1.470419,4.877425],[1.234367,-9.481441,9.471190,-1.820051,4.538024,-0.062216,-9.645018,-9.602185,8.736524,1.568125,1.716576],[-9.695262,-5.083610,-3.084614,3.401553,-5.930304,-3.035434,0.356764,-6.717573,3.780492,9.238463,9.864241]],[[-0.930158,0.886328,9.688097,-4.849374,-3.030909,-1.969374,3.147046,-4.109537,-0.156261,-6.555834,-4.963745],[3.331240,5.154020,-5.241021,-1.968791,6.880644,0.874379,8.541662,7.202215,-2.682070,-9.311105,-9.630805],[2.624281,-1.896520,-4.103391,-8.475857,-8.157007,6.207225,0.173165,-7.162448,-6.688645,-4.279915,-0.688651],[-3.808715,9.454779,-2.702726,7.381140,-0.301874,8.873977,-0.370794,8.235909,-4.320884,-6.099572,2.769294]],[[-7.427453,-8.741732,7.354932,-0.115496,-0.211006,-2.648173,4.959901,3.076214,8.699367,7.362562,-5.004483],[-0.328682,9.594204,8.010465,2.748046,0.714059,-9.948035,-8.856719,-6.214655,0.425704,5.102424,9.440899],[-4.205092,1.004481,-0.161926,0.560349,-8.444637,-0.036279,-2.008247,-0.275811,-1.280376,5.947191,7.284470],[4.668710,8.209989,-9.002289,-1.854261,5.351586,-7.795794,-4.225985,-9.415384,1.656616,-7.959134,-0.089224]],[[7.776480,-7.768101,-9.722858,-4.265516,2.036617,1.899031,-0.262354,9.036504,3.214353,-0.471243,8.332845],[-4.838638,-5.699792,-0.722354,8.592356,9.739760,0.306692,0.378518,-2.405554,5.197498,3.727992,-4.796479],[-7.341402,-0.722850,-8.464199,8.198976,6.579727,2.145134,2.417458,-4.833153,-3.987898,8.830638,1.234022],[4.122211,-1.150146,5.557696,-2.427807,-9.277084,7.607867,-1.270700,8.493984,4.751774,-7.252895,-8.280807]],[[9.392011,-7.997394,-6.388702,7.610677,-3.942807,5.919837,-7.749534,-6.959383,-8.177040,0.677275,4.483529],[-4.538599,-4.042537,-1.666154,-9.151335,-3.530616,1.336838,-1.779769,7.204361,-2.038804,-4.483337,-5.782215],[-9.710865,1.790932,7.096600,4.415389,3.942904,8.379435,8.693906,-7.880298,-1.853916,9.340617,7.166621],[-7.698973,-5.726389,1.659908,-6.442921,8.983225,-9.261696,-8.197817,2.637012,8.315077,5.604003,-7.573788]],[[-9.009752,-5.782570,-8.094932,-8.043428,9.397918,-9.462657,6.844475,4.804844,2.861311,5.789153,5.350628],[-2.299692,3.499362,9.560917,-3.202709,1.382948,-0.959586,-2.129004,-8.916714,6.292290,4.353082,8.360992],[7.154232,-5.779980,9.319313,-6.706199,8.552235,6.280001,-2.985339,8.705206,4.733292,3.862906,7.296209],[-6.205498,5.893338,9.475972,5.377055,1.969965,1.845505,3.523118,9.041717,-7.115638,-3.544656,1.707572]],[[-0.376231,-3.584031,-2.634454,-2.749644,3.801882,2.393206,-2.294198,1.479456,7.112507,-8.785794,-4.910576],[9.874446,1.560388,8.553269,8.278887,2.113947,7.472090,6.590179,3.292944,4.278425,-1.292795,7.363062],[-9.788197,-3.485481,-7.782794,-8.805512,0.850165,-7.382862,7.620108,-8.716783,1.773751,9.846751,7.293039],[-9.648245,-8.493783,5.032569,-9.212462,4.000545,3.333357,-2.387896,-1.948298,1.333082,-5.858177,-8.144990]],[[7.978852,-0.682176,-6.954835,8.582041,7.239923,1.635584,-4.178924,-8.370493,2.750162,8.236017,-0.716401],[-8.224191,-5.894337,-0.908907,-0.278056,8.682674,8.082394,-5.571719,4.538537,-4.667419,6.824182,-9.093480],[-9.360047,-7.001950,-1.624607,8.569054,2.145233,5.234231,3.132325,-3.995826,-5.913264,5.756735,1.205119],[-5.597526,3.787501,4.891610,-9.094936,-5.604077,3.785133,-4.656605,-9.361265,-0.034761,-1.511702,-0.225242]]], dtype = "float32")#candidate|3771|(11, 4, 11)|const|float32
bop_3772 = relay.subtract(call_3763.astype('uint16'), relay.reshape(const_3771.astype('uint16'), relay.shape_of(call_3763))) # shape=(11, 4, 11)
bop_3775 = relay.subtract(call_3764.astype('uint16'), relay.reshape(const_3771.astype('uint16'), relay.shape_of(call_3764))) # shape=(11, 4, 11)
bop_3779 = relay.add(bop_3772.astype('uint64'), relay.reshape(const_3771.astype('uint64'), relay.shape_of(bop_3772))) # shape=(11, 4, 11)
bop_3782 = relay.add(bop_3775.astype('uint64'), relay.reshape(const_3771.astype('uint64'), relay.shape_of(bop_3775))) # shape=(11, 4, 11)
output = bop_3779
output2 = bop_3782
func_3783 = relay.Function([], output)
mod['func_3783'] = func_3783
mod = relay.transform.InferType()(mod)
mutated_mod['func_3783'] = func_3783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mutated_mod.get_global_var('func_3783')
call_3784 = func_3783_call()
output = call_3784
func_3785 = relay.Function([], output)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3683_call = mod.get_global_var('func_3683')
func_3684_call = mutated_mod.get_global_var('func_3684')
call_3818 = relay.TupleGetItem(func_3683_call(), 0)
call_3819 = relay.TupleGetItem(func_3684_call(), 0)
output = relay.Tuple([call_3818,])
output2 = relay.Tuple([call_3819,])
func_3820 = relay.Function([], output)
mod['func_3820'] = func_3820
mod = relay.transform.InferType()(mod)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mutated_mod.get_global_var('func_3820')
call_3821 = func_3820_call()
output = call_3821
func_3822 = relay.Function([], output)
mutated_mod['func_3822'] = func_3822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_3836 = relay.TupleGetItem(func_3820_call(), 0)
call_3837 = relay.TupleGetItem(func_3822_call(), 0)
output = call_3836
output2 = call_3837
func_3848 = relay.Function([], output)
mod['func_3848'] = func_3848
mod = relay.transform.InferType()(mod)
mutated_mod['func_3848'] = func_3848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3848_call = mutated_mod.get_global_var('func_3848')
call_3849 = func_3848_call()
output = call_3849
func_3850 = relay.Function([], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_3910 = relay.TupleGetItem(func_3166_call(), 0)
call_3911 = relay.TupleGetItem(func_3167_call(), 0)
output = call_3910
output2 = call_3911
func_3918 = relay.Function([], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mutated_mod.get_global_var('func_3918')
call_3919 = func_3918_call()
output = call_3919
func_3920 = relay.Function([], output)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3939 = relay.TupleGetItem(func_2681_call(), 0)
call_3940 = relay.TupleGetItem(func_2683_call(), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2863_call = mutated_mod.get_global_var('func_2863')
const_3945 = relay.const([[-6,-3,10,-9,6,7,-7,-3,5,2,1,4,-1,-3,4,10,-2,7,10,8,-3,5,-7,6,2,5,-2,-7,3,9,-1,-7,3,-4,1,-10,-10,-4,-3,7,2,1,1,8,-7,-3,-3,3,6,8,3,4,3,8,-10,-3,9,6,-3,-5,-9,-1,1,-10,-1,-4,8,-8,8,9,3,10,-10,-3,3,3,8,-6,-8,-6,7,-3,-10,10,-7,3,4,3,2,-7,7,6,-6,6,1,2,2,6,6,-7,4,-6,-7,-2,-6,5,1,-1],[-6,-8,9,-8,5,2,-10,6,-2,4,-3,8,5,5,5,-10,4,-1,-8,-5,-2,6,-7,10,7,9,-10,9,10,-3,9,7,3,-6,6,-6,10,2,6,-7,8,3,4,-5,-6,-1,-4,-10,-8,-10,10,3,-9,7,9,-2,-1,4,9,-2,-2,1,3,4,10,6,-1,-1,-5,10,4,10,-7,3,-6,10,-1,-3,-4,8,1,7,-2,-4,5,-1,-6,-6,-5,-6,5,-8,-8,-3,-10,-8,2,4,-4,-10,-2,9,2,-10,4,8,5,8],[-1,-8,1,-1,-1,-8,5,3,-1,-7,8,9,-5,-5,-7,4,5,8,-7,-10,5,-5,-10,-10,-1,-5,6,2,3,4,10,7,-1,3,3,8,3,-8,10,-3,5,-1,-4,-2,10,-8,-3,8,-7,2,6,7,3,-2,3,5,5,-9,-9,-5,-7,1,-7,4,4,5,-7,-9,2,-5,-7,5,6,-1,4,-8,-1,3,-10,6,-4,-3,-5,-1,-4,-4,-7,-6,-2,2,5,9,8,7,-10,5,-4,-6,1,-8,6,-9,-8,7,-2,-7,10,-6],[-9,-10,6,4,-4,-8,8,1,5,-8,-4,4,6,4,7,-6,-3,-7,2,6,2,10,-2,-5,-2,10,7,-2,5,-1,-6,-1,3,-5,-9,-2,6,2,-2,5,-7,-10,10,9,7,-10,-7,9,10,7,-6,-2,-1,-2,-1,-9,-3,5,10,-1,-4,-2,-3,-10,-7,-4,-8,-7,5,3,6,6,-2,3,5,-1,-4,-9,-3,1,8,3,6,-6,-9,6,-1,-5,3,5,1,-6,-10,-3,6,3,1,-1,-7,-7,5,4,-6,-9,6,-7,-1,-5],[10,3,3,-9,3,-1,-4,-7,-2,5,9,-6,-1,3,6,2,-7,1,3,2,9,-6,-4,3,3,5,-3,6,-2,5,-8,-5,4,-5,-5,2,-2,6,-1,-5,7,4,-1,-4,-1,4,-8,6,-2,-10,10,10,10,10,-6,-4,7,5,-10,2,9,-5,-4,10,4,2,2,5,-7,-1,-4,-6,-7,-8,1,2,-7,-9,-10,6,7,-7,1,8,1,-10,8,-5,-10,-4,4,-3,1,-3,-8,-6,-10,-3,6,-8,3,-1,6,8,8,7,5,6],[-1,-8,9,-4,-4,-9,-8,-7,-5,-4,4,-6,-3,4,-4,-4,1,-2,4,1,-2,-2,7,1,-8,2,-8,-4,-3,9,-3,2,4,4,1,10,8,-4,-1,-7,-2,3,-7,-1,9,10,2,4,8,-4,5,-10,5,-8,-9,-7,1,-2,-7,3,-2,8,4,10,1,-1,-7,9,-5,8,9,-6,5,1,1,-10,6,9,-9,4,-2,-6,7,2,-10,7,-6,-2,-1,5,-6,8,-2,-5,-3,-10,-3,-3,10,2,6,1,-2,-4,-5,-8,-3,-6]], dtype = "uint32")#candidate|3945|(6, 108)|const|uint32
const_3946 = relay.const(1, dtype = "int16")#candidate|3946|()|const|int16
var_3947 = relay.var("var_3947", dtype = "int16", shape = (468,))#candidate|3947|(468,)|var|int16
call_3944 = relay.TupleGetItem(func_2857_call(relay.reshape(call_3939.astype('float32'), [11, 4, 11]), relay.reshape(const_3945.astype('uint32'), [54, 12]), relay.reshape(const_3946.astype('int16'), []), relay.reshape(var_3947.astype('int16'), [468,]), ), 4)
call_3948 = relay.TupleGetItem(func_2863_call(relay.reshape(call_3939.astype('float32'), [11, 4, 11]), relay.reshape(const_3945.astype('uint32'), [54, 12]), relay.reshape(const_3946.astype('int16'), []), relay.reshape(var_3947.astype('int16'), [468,]), ), 4)
func_3848_call = mod.get_global_var('func_3848')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_3949 = func_3848_call()
call_3950 = func_3848_call()
output = relay.Tuple([call_3939,call_3944,const_3945,const_3946,var_3947,call_3949,])
output2 = relay.Tuple([call_3940,call_3948,const_3945,const_3946,var_3947,call_3950,])
func_3953 = relay.Function([var_3947,], output)
mod['func_3953'] = func_3953
mod = relay.transform.InferType()(mod)
var_3954 = relay.var("var_3954", dtype = "int16", shape = (468,))#candidate|3954|(468,)|var|int16
output = func_3953(var_3954)
func_3955 = relay.Function([var_3954], output)
mutated_mod['func_3955'] = func_3955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mod.get_global_var('func_3918')
func_3920_call = mutated_mod.get_global_var('func_3920')
call_4023 = func_3918_call()
call_4024 = func_3918_call()
uop_4037 = relay.sin(call_4023.astype('float64')) # shape=(11, 4, 11)
uop_4039 = relay.sin(call_4024.astype('float64')) # shape=(11, 4, 11)
output = relay.Tuple([uop_4037,])
output2 = relay.Tuple([uop_4039,])
func_4064 = relay.Function([], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
mutated_mod['func_4064'] = func_4064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mutated_mod.get_global_var('func_4064')
call_4065 = func_4064_call()
output = call_4065
func_4066 = relay.Function([], output)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4070 = relay.var("var_4070", dtype = "float32", shape = (6, 9, 14))#candidate|4070|(6, 9, 14)|var|float32
uop_4071 = relay.atanh(var_4070.astype('float32')) # shape=(6, 9, 14)
func_2662_call = mod.get_global_var('func_2662')
func_2663_call = mutated_mod.get_global_var('func_2663')
call_4090 = relay.TupleGetItem(func_2662_call(), 0)
call_4091 = relay.TupleGetItem(func_2663_call(), 0)
uop_4098 = relay.cosh(call_4090.astype('float64')) # shape=(11, 4, 11)
uop_4100 = relay.cosh(call_4091.astype('float64')) # shape=(11, 4, 11)
output = relay.Tuple([uop_4071,uop_4098,])
output2 = relay.Tuple([uop_4071,uop_4100,])
func_4105 = relay.Function([var_4070,], output)
mod['func_4105'] = func_4105
mod = relay.transform.InferType()(mod)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4106 = relay.var("var_4106", dtype = "float32", shape = (6, 9, 14))#candidate|4106|(6, 9, 14)|var|float32
func_4105_call = mutated_mod.get_global_var('func_4105')
call_4107 = func_4105_call(var_4106)
output = call_4107
func_4108 = relay.Function([var_4106], output)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_4170 = relay.TupleGetItem(func_3540_call(), 0)
call_4171 = relay.TupleGetItem(func_3542_call(), 0)
output = relay.Tuple([call_4170,])
output2 = relay.Tuple([call_4171,])
func_4174 = relay.Function([], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
output = func_4174()
func_4175 = relay.Function([], output)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_4210 = relay.TupleGetItem(func_3547_call(), 0)
call_4211 = relay.TupleGetItem(func_3548_call(), 0)
uop_4219 = relay.acos(call_4210.astype('float64')) # shape=(11, 4, 11)
uop_4221 = relay.acos(call_4211.astype('float64')) # shape=(11, 4, 11)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_4226 = relay.TupleGetItem(func_3820_call(), 0)
call_4227 = relay.TupleGetItem(func_3822_call(), 0)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_4237 = relay.TupleGetItem(func_4064_call(), 0)
call_4238 = relay.TupleGetItem(func_4066_call(), 0)
output = relay.Tuple([uop_4219,call_4226,call_4237,])
output2 = relay.Tuple([uop_4221,call_4227,call_4238,])
func_4240 = relay.Function([], output)
mod['func_4240'] = func_4240
mod = relay.transform.InferType()(mod)
output = func_4240()
func_4241 = relay.Function([], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_4275 = relay.TupleGetItem(func_4174_call(), 0)
call_4276 = relay.TupleGetItem(func_4175_call(), 0)
output = relay.Tuple([call_4275,])
output2 = relay.Tuple([call_4276,])
func_4277 = relay.Function([], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
output = func_4277()
func_4278 = relay.Function([], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_4294 = relay.TupleGetItem(func_3294_call(), 0)
call_4295 = relay.TupleGetItem(func_3296_call(), 0)
output = call_4294
output2 = call_4295
func_4332 = relay.Function([], output)
mod['func_4332'] = func_4332
mod = relay.transform.InferType()(mod)
output = func_4332()
func_4333 = relay.Function([], output)
mutated_mod['func_4333'] = func_4333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_4409 = relay.TupleGetItem(func_3294_call(), 0)
call_4410 = relay.TupleGetItem(func_3296_call(), 0)
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
var_4426 = relay.var("var_4426", dtype = "int16", shape = (468,))#candidate|4426|(468,)|var|int16
call_4425 = relay.TupleGetItem(func_3953_call(relay.reshape(var_4426.astype('int16'), [468,])), 1)
call_4427 = relay.TupleGetItem(func_3955_call(relay.reshape(var_4426.astype('int16'), [468,])), 1)
uop_4436 = relay.exp(call_4409.astype('float32')) # shape=(11, 4, 11)
uop_4438 = relay.exp(call_4410.astype('float32')) # shape=(11, 4, 11)
output = relay.Tuple([call_4425,var_4426,uop_4436,])
output2 = relay.Tuple([call_4427,var_4426,uop_4438,])
func_4451 = relay.Function([var_4426,], output)
mod['func_4451'] = func_4451
mod = relay.transform.InferType()(mod)
var_4452 = relay.var("var_4452", dtype = "int16", shape = (468,))#candidate|4452|(468,)|var|int16
output = func_4451(var_4452)
func_4453 = relay.Function([var_4452], output)
mutated_mod['func_4453'] = func_4453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_4465 = relay.TupleGetItem(func_3405_call(), 0)
call_4466 = relay.TupleGetItem(func_3407_call(), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
var_4468 = relay.var("var_4468", dtype = "int16", shape = ())#candidate|4468|()|var|int16
const_4469 = relay.const([-9,2,-6,4,-5,-2,-9,-9,-2,-8,9,-8,7,-7,3,4,5,-2,8,-6,10,-2,-2,9,-7,10,1,4,2,-2,5,6,1,10,5,-2,4,3,-4,-10,1,8,-10,9,-2,-8,6,9,-4,-9,-5,-4,-5,-2,1,-2,6,4,2,9,-6,-3,10,2,-10,-1,-1,1,1,-7,-9,-7,-8,-2,-6,-6,-5,7,-10,-9,7,7,-4,4,-4,-10,-9,-10,7,9,3,8,-4,-5,-1,9,4,-7,-2,8,3,1,-4,-1,2,-6,5,3,8,-8,-2,-8,10,-7,-6,10,-10,1,1,8,-4,-8,-8,-2,9,-7,6,-7,1,-9,-6,8,2,-3,5,-8,-6,10,9,2,2,9,7,4,-10,6,-2,6,-6,-6,-10,2,3,10,3,-2,-3,5,-8,7,2,6,10,7,-10,-8,1,6,1,-6,10,-1,8,3,3,-6,5,-10,-5,-2,-1,-7,10,6,9,-8,-1,-4,-5,7,-10,4,4,-2,-10,-5,-7,-5,6,-10,5,-6,7,7,10,1,-6,7,6,10,4,-8,8,7,7,8,5,10,7,-3,1,9,8,7,5,-1,3,-9,-3,4,4,-1,8,-1,9,6,-10,7,-10,2,-2,-6,4,-7,-10,8,2,2,-1,7,-7,-9,-7,-4,1,-6,-1,-9,6,4,6,9,-1,10,-4,-1,-1,7,-5,8,-9,8,-5,-6,4,8,-10,-7,-7,-5,5,1,4,-5,9,6,8,-9,-2,7,-3,-5,-9,5,1,-7,6,4,6,-1,-5,-4,-1,-9,5,9,8,-2,8,4,-9,-6,9,-7,3,1,-4,-2,-7,10,-8,2,4,-6,-3,-10,3,7,9,-8,-3,10,-3,4,5,4,6,-1,1,-1,-8,-9,10,-3,-2,-9,10,-2,-4,-5,-2,-2,6,-9,1,-1,2,7,6,10,3,-10,-1,-9,9,-3,4,9,9,7,7,-8,-6,10,-9,7,-2,-6,-9,7,1,-9,5,5,6,-5,-9,-2,2,-6,-4,2,2,-10,-4,-9,7,10,-7,-10,-8,-8,10,2,3,2,1,-7,3,-3,4,-4,3,-5,-10,5,-9,-6,2,2,6,-5,9,1,9,1,-10,-8,-10,3,-9,-9,-1,9,3,-1,5,-5,7,-6,-1,-4,1,-2,-7,10,-3,-4,4,-8,-5,3,4,-2,-5,1,-5,-5,-9,7,3,-9,6,1,-7,4,-9,-9], dtype = "int16")#candidate|4469|(468,)|const|int16
call_4467 = relay.TupleGetItem(func_1132_call(relay.reshape(var_4468.astype('int16'), []), relay.reshape(const_4469.astype('int16'), [13, 9, 4]), ), 0)
call_4470 = relay.TupleGetItem(func_1136_call(relay.reshape(var_4468.astype('int16'), []), relay.reshape(const_4469.astype('int16'), [13, 9, 4]), ), 0)
output = relay.Tuple([call_4465,call_4467,var_4468,const_4469,])
output2 = relay.Tuple([call_4466,call_4470,var_4468,const_4469,])
func_4486 = relay.Function([var_4468,], output)
mod['func_4486'] = func_4486
mod = relay.transform.InferType()(mod)
var_4487 = relay.var("var_4487", dtype = "int16", shape = ())#candidate|4487|()|var|int16
output = func_4486(var_4487)
func_4488 = relay.Function([var_4487], output)
mutated_mod['func_4488'] = func_4488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mod.get_global_var('func_3601')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_4502 = relay.TupleGetItem(func_3601_call(), 0)
call_4503 = relay.TupleGetItem(func_3603_call(), 0)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_4550 = relay.TupleGetItem(func_4277_call(), 0)
call_4551 = relay.TupleGetItem(func_4278_call(), 0)
func_3511_call = mod.get_global_var('func_3511')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_4554 = relay.TupleGetItem(func_3511_call(), 1)
call_4555 = relay.TupleGetItem(func_3512_call(), 1)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_4559 = relay.TupleGetItem(func_3753_call(relay.reshape(call_4550.astype('bool'), [11, 4, 11])), 0)
call_4560 = relay.TupleGetItem(func_3755_call(relay.reshape(call_4550.astype('bool'), [11, 4, 11])), 0)
output = relay.Tuple([call_4502,call_4550,call_4554,call_4559,])
output2 = relay.Tuple([call_4503,call_4551,call_4555,call_4560,])
func_4614 = relay.Function([], output)
mod['func_4614'] = func_4614
mod = relay.transform.InferType()(mod)
output = func_4614()
func_4615 = relay.Function([], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4333_call = mutated_mod.get_global_var('func_4333')
call_4635 = func_4332_call()
call_4636 = func_4332_call()
func_2730_call = mod.get_global_var('func_2730')
func_2733_call = mutated_mod.get_global_var('func_2733')
var_4640 = relay.var("var_4640", dtype = "uint32", shape = (648,))#candidate|4640|(648,)|var|uint32
call_4639 = relay.TupleGetItem(func_2730_call(relay.reshape(var_4640.astype('uint32'), [648,])), 1)
call_4641 = relay.TupleGetItem(func_2733_call(relay.reshape(var_4640.astype('uint32'), [648,])), 1)
output = relay.Tuple([call_4635,call_4639,var_4640,])
output2 = relay.Tuple([call_4636,call_4641,var_4640,])
func_4648 = relay.Function([var_4640,], output)
mod['func_4648'] = func_4648
mod = relay.transform.InferType()(mod)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4649 = relay.var("var_4649", dtype = "uint32", shape = (648,))#candidate|4649|(648,)|var|uint32
func_4648_call = mutated_mod.get_global_var('func_4648')
call_4650 = func_4648_call(var_4649)
output = call_4650
func_4651 = relay.Function([var_4649], output)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_4673 = func_2710_call()
call_4674 = func_2710_call()
output = relay.Tuple([call_4673,])
output2 = relay.Tuple([call_4674,])
func_4680 = relay.Function([], output)
mod['func_4680'] = func_4680
mod = relay.transform.InferType()(mod)
output = func_4680()
func_4681 = relay.Function([], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_4682 = func_2710_call()
call_4683 = func_2710_call()
output = call_4682
output2 = call_4683
func_4691 = relay.Function([], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mutated_mod.get_global_var('func_4691')
call_4692 = func_4691_call()
output = call_4692
func_4693 = relay.Function([], output)
mutated_mod['func_4693'] = func_4693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_4752 = relay.TupleGetItem(func_3540_call(), 0)
call_4753 = relay.TupleGetItem(func_3542_call(), 0)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_4757 = relay.var("var_4757", dtype = "uint32", shape = (648,))#candidate|4757|(648,)|var|uint32
call_4756 = func_1961_call(relay.reshape(var_4757.astype('uint32'), [8, 9, 9]))
call_4758 = func_1961_call(relay.reshape(var_4757.astype('uint32'), [8, 9, 9]))
uop_4769 = relay.tan(call_4756.astype('float32')) # shape=(8, 9, 9)
uop_4771 = relay.tan(call_4758.astype('float32')) # shape=(8, 9, 9)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_4779 = relay.TupleGetItem(func_4174_call(), 0)
call_4780 = relay.TupleGetItem(func_4175_call(), 0)
uop_4789 = relay.log2(uop_4769.astype('float64')) # shape=(8, 9, 9)
uop_4791 = relay.log2(uop_4771.astype('float64')) # shape=(8, 9, 9)
uop_4824 = relay.acosh(uop_4789.astype('float64')) # shape=(8, 9, 9)
uop_4826 = relay.acosh(uop_4791.astype('float64')) # shape=(8, 9, 9)
output = relay.Tuple([call_4752,var_4757,call_4779,uop_4824,])
output2 = relay.Tuple([call_4753,var_4757,call_4780,uop_4826,])
func_4852 = relay.Function([var_4757,], output)
mod['func_4852'] = func_4852
mod = relay.transform.InferType()(mod)
var_4853 = relay.var("var_4853", dtype = "uint32", shape = (648,))#candidate|4853|(648,)|var|uint32
output = func_4852(var_4853)
func_4854 = relay.Function([var_4853], output)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4333_call = mutated_mod.get_global_var('func_4333')
call_4890 = func_4332_call()
call_4891 = func_4332_call()
output = call_4890
output2 = call_4891
func_4898 = relay.Function([], output)
mod['func_4898'] = func_4898
mod = relay.transform.InferType()(mod)
mutated_mod['func_4898'] = func_4898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mutated_mod.get_global_var('func_4898')
call_4899 = func_4898_call()
output = call_4899
func_4900 = relay.Function([], output)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4919 = relay.var("var_4919", dtype = "uint32", shape = (4, 10, 14))#candidate|4919|(4, 10, 14)|var|uint32
var_4920 = relay.var("var_4920", dtype = "uint32", shape = (4, 10, 14))#candidate|4920|(4, 10, 14)|var|uint32
bop_4921 = relay.maximum(var_4919.astype('uint32'), relay.reshape(var_4920.astype('uint32'), relay.shape_of(var_4919))) # shape=(4, 10, 14)
func_2786_call = mod.get_global_var('func_2786')
func_2788_call = mutated_mod.get_global_var('func_2788')
const_4929 = relay.const([-0.807450,-8.396616,6.896324,2.693920,-7.561846,-3.800447,-1.482143,-2.245669,9.055345,1.077659,7.184981,-9.208312,-7.500303,8.045038,-1.128434,8.987996,-6.975347,-0.243483,-2.682531,-7.539821,-0.389828,-6.817783,4.656166,6.437550,-7.425502,2.349713,5.010915,-1.846554,9.897354,-1.865806,-2.165977,-1.259626,9.475580,-9.044082,-1.308188,-7.904787,-3.203219,5.077530,8.687909,-1.421713,7.560419,6.018649,5.214537,-6.729873,-2.691154,-7.730672,-7.515182,9.458279,7.288501,8.749473,-6.220449,3.685232,3.823620,-2.109131,2.064326,-4.298626,-2.651089,6.634082,9.650100,-3.607167,-1.471182,-4.612361,7.212020,5.789761,-5.356104,-7.380187,-7.970585,6.927934,-5.654093,8.567420,-3.957682,-3.985802,3.773726,-6.955981,3.277891,-6.141325,-1.670571,-2.278901,-6.516976,-0.513908,3.051212,6.893121,-9.084609,5.575916,-6.366489,-4.285142,-7.573863,-0.294347,9.975042,-3.607539,1.725300,-8.548578,4.678025,-2.180233,-2.287076,-1.460097,9.615613,-9.394030,-4.764844,3.174138,-7.408278,8.611386,-1.090146,-9.966727,5.755217,9.409628,-0.509035,-5.229928,-8.490115,0.093066,8.842318,-8.112356,-1.439102,5.667038,-3.198890,3.195244,-0.796836,3.514371,-4.243800,-7.166105,-5.032773,1.252892,-9.605124,2.080432,-6.017349,2.432917,-1.766196,-9.330689,-7.355389,-2.227280,-0.899312,5.686056,-7.581584,-0.268243,1.734736,-1.738685,-4.281858,-1.284974,4.194442,1.515108,-1.767909,-8.108133,3.128364,5.547060,-7.866955,-7.167260,-7.482552,5.829908,3.015511,4.096227,5.302405,-5.954481,1.184766,-2.226004,-0.419323,-0.315460,-6.173791,-3.381897,-1.617293,-6.180776,3.820250,7.496110,-5.366286,-1.362057,-2.585395,-5.836145,-0.873563,3.789715,9.983563,-0.810652,-9.118436,1.872239,5.938943,-0.235162,1.359169,-1.305058,5.911571,-7.988216,7.155048,4.085375,4.155495,0.266518,5.899672,1.101490,-8.233851,-4.755030,9.885566,0.594832,4.870667,-4.790585,-5.317574,8.059022,-8.071985,-1.946114,3.585247,-8.921662,0.893341,-2.142129,-6.253608,-6.422404,0.948259,1.510184,-5.152857,-3.489651,-2.852024,-8.837317,3.525547,2.268087,-1.098465,2.705202,4.104014,-7.435279,7.703585,3.003218,-8.879510,-3.293964,7.932445,-8.849041,2.262498,9.030668,6.056902,-4.442157,-0.094003,5.443469,2.273119,-1.398646,-4.710219,-5.072542,2.990519,4.122189,3.060236,4.631020,-8.669896,-0.146544,-4.531842,1.855445,3.918871,3.880755,0.956810,-9.155197,3.990119,-3.216919,5.778014,-8.572618,-1.484321,1.980282,8.187564,-5.620695,-2.220196,4.778517,8.473538,1.481637,8.883482,-6.028166,5.009571,0.506187,5.178498,-9.659659,-2.586153,1.146859,-9.379821,-1.878467,6.253621,9.341942,8.858598,5.040057,-7.211104,-1.633510,1.927632,-2.406752,2.019000,8.662345,6.948657,-4.041314,-3.488104,1.765620,-3.963691,4.871666,-9.665635,2.574409,1.879580,-5.591192,3.114239,0.147252,0.347247,4.352031,-2.924413,2.500279,-2.582852,6.399457,1.867418,-2.114008,2.472541,-8.942383,-4.731363,7.381900,-2.735735,4.004084,-1.950336,-6.275356,2.372794,9.967454,-3.819625,5.603210,-1.371294,-6.515877,5.519929,6.643220,-8.376327,0.874902,0.704012,-8.423282,-1.839465,-7.036932,1.502206,4.443332,-5.861181,-6.514270,2.293479,-0.571095,-6.522222,-6.272674,7.648569,-2.104390,0.376505,-0.470921,7.178473,-1.423531,4.865694,-6.095703,0.828272,2.258019,-4.437906,-6.165049,3.488055,6.747508,6.007203,-9.914033,6.326056,-5.837405,-9.000016,-6.036101,-7.091836,9.236874,0.286315,-5.968088,0.734726,-6.593860,3.962218,-3.657749,1.450399,-9.249290,7.906497,6.643572,-7.393607,9.205040,3.765422,-8.368141,-5.903254,8.233350,6.248352,-7.458685,1.305426,3.427305,9.054119,1.835525,8.999480,-3.280478,-7.098643,-5.302982,5.853474,7.985143,3.290461,-1.008322,-5.289553,3.545335,1.660147,-9.196067,-3.480387,2.411320,5.543320,2.625840,3.012832,5.056087,5.237176,-5.169102,7.819557,3.821015,2.093536,-2.208607,1.001930,1.511429,4.204408,7.566415,9.260042,-8.295914,-8.918100,-9.234240,4.165463,8.980425,1.706874,8.863827,-0.989830,8.351896,3.613126,9.976830,2.235400,8.515448,-6.916580,-6.883242,-2.959225,0.580501,-4.249617,-8.338957,1.029110,1.351993,8.208228,-6.144079,4.096982,4.547997,1.431417,-6.377757,6.479291,-2.208929,-2.344324,-5.606146,9.542752,6.923258,5.098709,5.546660,-9.989715,1.020524,1.900640,0.025789,7.658396,1.866255,9.740134,6.039606,-7.412899,-6.956996,-4.833993,9.044725,-6.770201,-1.263265,-1.748412,1.276390,-8.680672,-2.313271,-8.046194,-2.656583,-8.234271,-2.216371,6.997983,-3.070864,5.030135,3.688988,8.850798,9.868440,4.366963,6.052846,1.589180,-8.704751,9.114742,-9.806368,-8.031222,9.625936,-2.816988,-1.576917,4.617750,4.850885,-3.135868,9.688524,2.304548,2.289078,-1.204556,-3.196596,3.756180,6.216230,5.682789,-6.508794,-2.869098,-9.502102,-6.911859,1.684328,-4.363806,-5.922009,0.165023,-1.492318,0.195761,6.273721,8.305491,4.268766,2.733183,9.767566,-5.401592,-8.322751,-7.848738,-3.352937,-4.720838,-1.646249,-5.950436,3.011784,-3.544596,3.004629,5.353115,9.917248,-5.085904,-6.484841,3.042695,9.782567,0.453496,3.599356,-0.497152,-2.956099,0.581195,7.157223,-0.337307,4.713126,6.119710,-5.618136,5.959951,3.709844,-0.749141,7.223095,4.171448,-2.809050,0.676549,-5.961733,6.481712,-0.466328,-9.582607,-7.457076,-2.895737,0.855042,-3.974525,-3.565512,-3.249557,-4.302381,3.164234,-2.203818,-6.995239,-8.866615,-7.185903,2.281910,5.924242,-7.805202,-0.239369,-2.690699,-1.518393,-7.846486,7.048006,4.830060,-6.638504,6.172985,7.074326,-8.167947,-5.747401,4.103122,-7.083853,-4.604208,-0.306278,6.976035,5.046964,1.641260,0.618584,5.292979,1.172500,-3.925597,-7.794662,0.893840,-2.940042,2.571171,-7.207366,2.160569,4.934894,8.717072,8.488381,-8.575808,-7.143617,-3.147381,8.149812,7.851262,-4.124555,-9.110111,5.104527,0.116303,-0.427921,-3.459158,0.403639,2.375629,6.309705,7.400421,4.162405,3.651919,4.584103,8.517554,0.347630,4.253575,7.286493,-4.722581,-5.657967,-1.342445,-2.093860,0.243714,-8.051512,9.592410,2.597407,-9.076217,-5.376319,1.654553,-9.956944,7.850886,9.608607,6.074514,-9.365933,3.978158,9.326226,7.197516,-7.638014,-7.744823,9.722313,-9.661238,-5.962229,7.708646,-1.355644,-1.730206,-0.734575,4.411537,0.264573,-8.084774,-3.587513,-9.642656,3.899201,-2.457683,-9.799658,-8.616483,-5.740604,1.290787,-9.484254,0.388270,2.697283,0.323720,9.064264,9.863012,8.906488,6.036587,0.087802,-2.309133,9.111719,-3.326037,8.233343,-9.632843,6.772209,-7.147378,-5.580854,-3.443791,0.861655,1.950726,-2.637080,0.101322,-7.557661,-1.930519,-7.649261,-0.096896,2.090422,-6.182886,-2.844716,-2.938606,-4.238209,3.072177,-7.009887,-9.331008,7.171479,4.588230,-6.489934,4.575999,7.650216,-5.422178,-9.519363,3.855048,9.507184,-1.896637,-4.720280,6.686076,4.753534,-2.745916,-5.687189,-8.006118,-9.071407,-6.245348,-3.154640,-6.649581,4.330916,-5.742138,1.410581,2.644409,3.491735,-1.972422,-8.746591,-3.101113,-4.291666,4.384717,1.144597,-9.750810,7.308968,-0.835911,4.984315,9.467248,4.212776,-8.879929,-2.337986,4.918853,-0.573095,2.783470,8.495489,-8.266851,-6.677831,-1.377080,9.465733,-3.323876,1.182143,3.823415,6.803024,0.118893,-0.198616,8.599231,2.296376,-4.072299,1.288524,-9.118745,2.300693,-2.487406,1.986517,7.264147,-7.013844,2.010493,-1.105635,-8.750669,-9.137610,-1.925574,8.672374,6.158056,-5.097573,-6.081284,7.695344,-4.945187,-9.868367,2.570188,9.665024,-8.766421,-1.080968,-4.582630,-3.600566,-6.321025,-4.396493,1.499258,-2.477542,2.784895,-3.995715,-5.832918,-6.091711,-9.943510,-2.622912,-9.105749,-5.577473,5.313487,7.905109,5.798922,-8.558476,-4.413078,-5.760212,-6.177431,-6.971143,5.606511,-8.173502,-9.064712,-3.949789,4.816839,-4.130345,7.849778,-0.686904,5.251912,-6.251703,-7.512074,-3.378302,3.186613,-9.295528,-8.816078,6.044862,-0.432100,9.591047,3.330359,3.078241,-6.389384,-0.595726,8.370454,-3.140805,-2.709334,4.098376,2.174168,1.753910,1.786340,3.198866,-7.035457,2.424583,-0.876253,-0.800611,4.952078,-5.016687,3.686720,7.361326,9.431777,-4.243929,-3.424032,-7.962923,5.559262,-0.949896,-2.292703,-4.925911,4.359816,3.568416,3.808179,5.936515,5.840953,-7.085798,-3.712790,2.780993,-2.756710,-0.611582,-4.577470,-5.890704,-4.557765,-5.258297,-5.002401,-2.766952,-0.470934,3.264197,3.057374,-0.085215,-4.060029,3.023011,-9.080467,2.535457,-0.100356,2.690857,-7.717668,2.555903,7.312838,1.146885,-6.458800,2.158002,5.631507,-0.777071,1.738485,-8.695045,-0.209745,-4.120443,-2.853132,1.983593,2.780229,5.886185,-6.415739,8.018965,-9.459482,-0.999027,-0.887136,-4.538821,-2.174168,-2.324111,2.243838,-8.025953,-7.175458,2.987598,-0.464260,-0.791708,1.662477,6.341545,-7.583223,4.945557,-4.694233,7.532029,8.910095,-4.016568,8.916906,7.731602,8.385092,-1.310783,8.595579,6.193376,-5.845530,2.152923,6.176596,2.282395,0.631253,0.616048,-8.239885,-7.319752,-1.023215,-6.856828,7.644922,-5.147885,4.549011,4.538865,-8.739316,-7.015781,-0.464062,6.505150,-2.371005,0.969536,3.680528,6.479616,5.566612,-3.681416,7.138071,2.637862,-9.925797,8.328015,-9.972414,-0.614345,8.986229,5.069222,1.024143,-8.939881,-9.473017,4.594607,-0.031095,8.471656,7.224804,3.878665,-1.014740,2.154141,-4.647178,-9.135115,3.417176,-2.767841,9.634617,-4.071487,-7.817779,9.857715,-1.454257,-2.202705,5.155076,5.799479,0.136581,0.544725,5.049658,3.468076,-5.044705,7.929798,-2.608022,-7.615146,1.764372,-9.676427,4.939312,-0.764266,1.800836,-2.700562,2.470315,2.664677,-4.049574,-0.981156,7.600498,-5.414689,-4.640935,-9.735132,7.072449,-4.633045,0.641635,-5.479919,-1.831354,4.055100,0.964697,5.181081,8.983978,-5.048290,2.386715,6.012326,-2.590187,-7.585949,1.456038,6.253533,-8.120935,-4.319614,2.959776,-1.147190,7.435703,3.341697,-2.047122,9.983644,8.467395,1.469505,4.565375,9.935491,-7.318047,-4.286132,-3.914835,-6.879119,4.088370,1.879672,7.676377,1.639974,8.625037,-7.663319,9.430950,4.089253,5.853266,3.876382,0.833969,-9.666387,4.215077,-1.830812,-2.751390,-9.208004,8.849386,-5.389749,4.586864,4.878442,-4.210146,-9.598678,-0.906211,-2.861821,0.011688,-9.837979,6.216425,-2.409298,8.333163,-0.893655,-1.999010,0.339611,-1.420027,-7.593310,7.816059,-0.690960,9.740313,7.092692,-3.185754,5.519626,-5.614972,0.103620,-7.248463,-8.647571,-5.668221,-5.646835,9.626864,-5.193914,9.705066,8.645005,-1.516378,5.009776,6.390829,8.657553,-8.354833,5.021567,-0.998756,-5.329138,-5.754736,-4.775402,-1.344248,5.566618,9.962717,5.444277,4.225619,8.482477,1.301347,3.021324,-9.061867,-6.548752,-7.667754,2.696558,-4.194899,6.513892,-9.200713,4.924829,-1.779721,-0.775367,-0.959699,2.015185,-5.827316,-2.748827,9.878695,-0.612119,-0.791044,-2.382666,-2.912853,-9.215856,-3.518701,-4.376563,8.524910,8.447421,-8.936086,5.231760,0.648898,-8.245174,-4.708369,2.034764,6.626118,9.615297,3.190345,-3.332275,6.992095,-8.262884,-8.960246,-2.008348,5.574242,-9.330117,6.485610,-1.982612,-8.888819,-3.383735,5.168872,-1.409649,-5.676113,6.091149,9.783317,8.434369,-2.181711,-4.066492,-4.786976,-2.886200,-6.192413,-5.591972,4.118110,0.982429,2.014290,-6.148884,7.756858,8.415462,-1.330374,6.570843,-3.802040,-4.873828,9.120684,-9.508296,0.315300,0.135448,4.072484,7.380044,-3.252441,-8.791560,-6.727887,0.420176,5.229522,4.050026,0.992618,4.678629,-3.905725,-2.126379,0.418253,4.369268,3.078197,-4.115153,-6.148815,4.106155,-8.718716,7.833309,-3.020469,0.157964,5.925362,8.655416,0.752649,3.765409,-2.180318,2.390499,-4.188152,-5.124902,9.892467,-8.614455,-6.991098,4.843775,7.532052,-4.781626,2.625176,4.137915,-4.666645,6.982171,1.901452,3.604271,-7.846436,0.454841,-1.822632,-8.328564,5.640786,7.296393,3.413752,-7.698115,7.963156,-5.458993,-2.306523,-0.361788,7.824631,6.599325,-5.109538,-5.957699,0.821622,5.371943,-0.793422,-2.033102,-3.124555,0.334761,-3.864604,-5.821909,-5.192031,-5.135919,-0.639746,-8.195149,-8.654859,-0.849374,-4.828762,0.020510,1.394926,5.533218,-5.805402,1.475860,-0.111903,-3.250973,-1.339826,-6.934865,-7.489384,-1.081304,4.694790,-9.673207,-1.499827,-0.383936,3.111865,-2.890116,-0.287706,-0.485500,4.106287,3.633337,3.115476,-1.317670,-4.226384,-7.752560,4.674174,8.179842,6.694830,-8.251296,2.739952,2.421872,-3.582478,4.335979,2.819604,-6.178178,3.646284,-4.724597,7.003427,-2.423429,-0.369295,-4.309549,9.927319,-9.775572,7.130963,-1.871176,-3.246261,-8.383977,-9.761370,2.694762,3.657620,-1.801966,-9.498107,4.010597,-6.719633,1.613244,9.010835,-5.772299,-0.492637,6.067823,-7.791529,-5.514688,8.832183,6.498186,-3.825068,-7.391619,-5.510143,-8.479975,3.694332,3.306844,2.064952,-4.281736,-9.903813,-4.490727,-6.553611,2.665171,4.771527,0.080696,-0.272418,-4.085877,1.338009,-9.956117,-6.503068,-3.134689,7.090250,1.702581,8.325356,9.198263,-0.275405,-9.129838,1.657307,5.026257,3.646167,-1.633475,-6.841562,-3.425180,3.301330,6.816426,8.107775,3.854774,1.353158,4.858383,3.765973,3.723448,-1.256016,-6.842600,2.390064,0.108357,-3.414623,-7.628171,-8.400035,-1.056128,9.984610,5.160318,-5.265171,3.712953,1.543259,-3.077101,4.106008,6.156966,1.262165,-1.826648,5.655834,0.337494,5.567661,-6.247792,-7.963944,6.528491,3.735297,-9.639328,9.996050,2.756936,-0.979332,5.926891,7.438251,-1.660873,-7.364514,1.431746,-7.928996,1.224927,-2.641729,0.491667,7.182782,4.042308,-2.263346,-0.792562,9.266170,-7.432774,8.028924,-6.328260,-3.647065,2.375800,6.761723,9.815152,9.341144,3.670821,-4.905114,-4.164914,4.536856,-5.655340,7.540066,3.858545,7.491368,-0.555311,-9.775390,5.502839,2.389814,1.871388,-6.737434,-5.451292,-8.626457,0.031544,1.192773,-8.548345,1.067239,-0.092662,9.457116,-5.381568,9.084876,9.488757,0.465660,7.906417,9.040592,3.616319,6.436879,1.829188,5.976475,-8.355443,-4.931422,0.627950,-0.709557,-2.569356,6.228833,-9.736108,5.627091,-5.219237,-6.230553,-5.230781,4.356255,5.894355,5.452860,-5.939590,-6.628349,4.602231,5.615784,-4.838016,-3.847693,8.717207,2.493066,5.893637,7.612619,8.552713,9.596821,5.563327,8.370668,7.319199,7.505092,0.953181,-7.710858,-2.787801,8.376593,8.619848,8.534910,-5.351262,-1.686407,9.271574,7.553734,-7.208606,-9.424077,1.663363,-1.986295,5.186325,-2.002423,6.454433,5.593615,-5.385470,5.573086,3.930831,-0.130308,9.338002,8.998683,-0.307057,-7.230374,7.492266,-8.457234,-6.483882,7.311664,-2.897244,3.663247,-6.349798,7.412333,0.619508,3.816672,2.577139,-8.131668,-4.544628,-2.179211,5.273885,0.351045,2.638770,5.844247,2.725744,3.761808,6.312805,8.688547,-8.157597,-9.327348,2.118064,-7.634297,-9.795239,-6.427578,-3.105131,6.002583,0.463434,-0.311053,2.516545,-2.567039,-9.730873,-2.013150,-8.454137,5.137364,2.950158,0.441520,4.099862,8.143980,-1.136414,3.836049,-7.522572,-9.879370,8.395436,0.882346,5.149502,7.924328,5.463459,2.011009,-3.778146,-8.544005,-8.681760,-5.563019,4.316815,5.961399,0.119252,-0.836240,-9.355942,2.500102,8.604954,-6.957114,4.771252,-8.307817,1.337172,-2.856310,8.561336,6.292339,-8.436415,8.863941,-1.636564,-5.875403,2.862254,4.358401,9.631459,-0.549233,9.245646,1.233400,-3.033196,-8.816265,6.462370,4.976656,8.887244,7.134580,6.731006,-6.650678,7.332269,9.704829,6.642745,-4.059175,-3.466595,-6.538208,4.971878,-0.638890,1.602447,-9.269002,4.578337,1.604047,-7.019868,4.049810,-1.733378,9.288634,-2.427184,-6.790084,-7.416054,-8.095002,6.541670,-9.624438,7.242610,3.995095,1.019899,3.820489,8.661868,-8.862379,3.037886,1.307518,0.485208,-9.578078,-7.518796,1.990906,0.002476,9.761546,-2.000737,-7.942952,-7.996033,5.487451,0.477454,-2.740485,9.078620,-8.740201,-7.955981,-9.676414,7.814852,7.814696,-4.126780,-2.776865,9.278263,-3.940387,6.344786,5.892886,-1.226589,-3.513340,7.810263,1.362919,7.991441,-5.896418,6.050981,9.828305,7.246713,-5.785024,0.966526,5.864845,-4.902026,8.739539,-9.351397,4.482700,3.523754,-4.508956,2.036769,1.673814,-0.255424,-7.337301,2.545498,-1.370695,1.761738,-2.856140,7.809326,8.975052,2.980406,7.195319,1.788098,6.305532,-1.536716,0.976546,1.485644,-7.182792,-4.359544,3.196932,-3.895060,-7.265121,0.829195,7.843014,5.209701,-0.133266,1.977738,-6.266498,4.107399,8.800105,-3.147808,0.851167,0.792749,4.499521,-0.013125,0.453952,-9.710994,-8.133628,-2.595963,-3.415893,-3.701098,2.717574,-3.116031,-2.564190,5.965931,-2.400049,4.042225,0.204457,4.438854,-2.563959,8.664815,7.374497,-5.400884,0.762177,1.047877,-0.110955,6.929929,8.730135,4.520754,2.161686,0.676494,-8.724418,4.065599,5.702119,-2.165461,-2.847046,-4.775386,3.818813,-7.921930,2.663869,-8.923599,2.250394,4.853028,-7.776534,1.097785,6.386652,4.511393,8.481428,4.797747,9.612609,-5.059244,-6.204796,9.962685,5.535432,-7.219259,2.044903,-8.376500,-8.612448,2.907819,0.833092,-2.074489,1.746184,-2.426586,-8.090292,-7.496915,-8.641015,-9.535808,3.033698,-3.083768,8.327526,4.846929,-8.526462,8.929749,-4.985654,2.047228,3.100933,-5.460284,1.019232,0.560137,6.712533,5.616811,6.062154,-4.362341,-1.209440,8.980909,8.408429,-8.393524,9.285173,5.469392,2.556732,7.057757,-3.369649,3.518365,-9.661363,-0.015756,-8.307022,2.296266,4.693138,-1.499039,6.382675,7.236493,7.910896,-0.933739,9.003780,-5.971791,-7.876046,-3.643253,9.921132,-2.737142,-6.052054,7.107090,-2.938058,-4.132824,-9.722991,2.408764,1.379229,2.501972,7.079541,5.431732,2.902263,6.837872,1.111776,-5.193355,4.296094,-4.955116,5.543786,4.720181,0.610285,3.223141,-3.889388,8.863706,2.488227,-4.868292,-5.204794,-8.350403,7.697196,4.425296,2.502131,-0.100147,-0.814756,-7.586836,-9.101238,1.025139,-2.945855,-3.733760,-2.145022,-5.633630,-7.016735,-6.736221,-2.706834,-7.129951,-4.406020,-3.279543,8.039073,-6.699955,2.264086,-3.211789,-1.518926,6.745214,-7.519529,-2.030525,8.772101,9.656354,3.247589,-4.047187,-1.556399,-2.584924,-3.430236,-8.329917,8.494826,7.437180,4.677164,-4.073987,-3.068575,-4.289073,8.395738,9.890795,3.130575,-0.646989,-6.327024,-4.237188,5.318760,1.054982,7.112846,-2.674450,-6.335178,-4.042759,5.710220,-9.406222,-2.798090,-0.998458,4.378974,6.045694,-5.626899,6.546607,-4.153401,5.849406,-7.606837,-8.895481,-2.317311,-3.296126,-5.095770,0.077147,-5.056032,3.630602,-8.303544,-0.016496,3.539732,4.443475,-3.236478,-5.700199,-7.775416,-4.913696,-2.912371,9.285176,9.702714,-7.873740,-6.868798,2.017827,3.540380,8.475445,7.383971,1.523113,5.748405,-8.657510,4.056311,7.495367,9.255799,2.727931,-6.590759,-1.731958,-2.720151,9.527274,-5.449558,0.785636,-5.392495,-9.018688,5.866133,-5.245798,-6.132600,-8.335546,-1.542941,2.552313,1.730756,6.609000,2.384230,-6.147293,-0.416129,-1.314499,-6.333860,-2.373463,1.449248,-8.843433,-8.683145,5.616116,-7.603645,2.291562,5.069923,-3.322413,1.635885,-9.978529,7.199617,-2.768985,6.920838,2.997803,6.204794,-1.281294,-5.454285,3.091333,9.492319,0.329445,-5.937132,-8.080445,2.344184,-0.762555,7.057572,-5.177582,1.781241,-2.584450,3.011616,8.607706,-3.059900,1.575456,-0.458019,1.736188,-3.018073,8.169981,0.118775,-5.322941,-3.092516,0.690788,-2.814827,0.603750,4.592642,-5.371953,9.101255,4.533852,1.321298,-6.581950,5.548464,3.893534,-0.887515,-9.476952,0.201174,-5.023061,1.597573,6.432168,7.100046,-8.055843,-2.992699,-6.941295,-3.156858,5.443274,-5.293228,4.076371,-7.235283,4.169609,-8.979688,-1.036821,4.417895,8.321241,7.772681,-2.821441,9.284096,6.598526,4.729083,2.582528,7.054270,4.645311,-6.188199,7.939442,2.396423,1.973859,-4.607302,3.078563,3.603418,-4.898823,1.227350,9.530840,3.414853,3.304707,-0.838252,-1.540019,9.241079,-9.443332,9.899442,-2.113705,-7.836077,-5.024490,-5.184093,-3.038882,-6.951592,-3.427229,0.304313,0.937179,-8.380655,1.470397,8.848841,-2.664677,8.609406,2.705220,-1.270290,-9.316709,1.638535,5.092615,-1.773149,2.660884,-4.508064,6.031061,-4.031872,1.830021,7.227300,3.049419,-9.054529,5.456506,-5.888334,-2.049020,6.426607,-9.283192,2.854235,-2.504296,3.255547,2.633158,6.694947,-1.607356,3.580786,-6.612009,-7.834333,1.605229,9.793219,3.516509,2.766431,-7.460275,-0.920328,-5.192905,-5.980766,2.551719,-8.767655,3.376827,9.381594,3.106787,2.878547,4.709811,-8.860589,7.727316,-4.462763,9.358948,-7.393263,-4.122708,-9.726350,6.957647,5.267305,5.379866,2.497162,8.599259,-5.091347,3.619453,-9.960271,3.907819,2.000082,-5.465666,9.481361,-5.702996,9.064788,-3.096685,9.129878,-4.246701,6.452634,-7.268242,-7.487300,9.262069,6.333109,1.284129,-7.353744,-5.034400,1.768893,1.785706,-4.704301,-3.622000,-3.307642,-7.822383,-9.573793,-4.474866,-9.757580,-9.081393,-9.915050,2.677340,-0.857662,9.142930,3.430135,0.659620,-0.854277,-4.230964,-7.509255,-5.106089,7.912217,-8.234695,2.472113,0.722608,3.111350,-5.042887,-3.082699,3.107406,-1.123473,7.720779,-8.253534,-4.911644,5.115500,-3.559364,-3.041742,-9.101879,2.480441,9.534059,4.989735,-4.254231,2.682882,-3.091764,-6.261445,-9.201813,-7.665251,-8.564246,-3.754985,6.999618,3.351400,7.818478,-8.586770,-3.460141,-8.040023,-8.673670,-6.677050,1.323417,4.615670,0.286561,4.588416,0.922170,9.530126,3.733268,-4.813457,2.159595,-6.724304,5.963962,-6.978355,-6.159363,-1.134476,-7.328196,8.776162,-1.938762,6.325612,-6.546359,7.203540,-6.334361,8.263151,4.466720,-5.788477,-9.555139,2.478926,1.848543,3.341158,8.867648,-1.282478,-8.332895,4.092731,0.258492,5.213295,9.493500,4.920263,5.904801,0.488649,-8.802420,-6.799559,-0.684048,7.848394,6.288780,9.361507,-6.828745,9.003766,0.299314,9.443334,7.075928,-9.520182,0.672854,6.132090,2.230933,8.134734,-4.907169,-7.133410,-5.323015,6.947851,-7.848189,-0.761205,-5.959753,3.087622,-5.127514,-9.484296,6.375277,-2.486097,-8.041231,-2.450951,9.893172,-3.567481,0.903821,-4.792857,-5.505086,8.499378,0.125281,0.675159,2.047262,1.531702,7.348377,-7.740250,3.963493,5.086643,-0.244161,0.628839,-1.779644,7.551043,-2.226783,9.389435,9.942489,5.729361,-8.081971,2.677101,1.953699,5.612161,-2.725550,-3.891381,-5.424660,-7.298297,1.522596,-1.261470,2.606528,3.024445,-1.927743,-8.461738,6.063505,-8.877862,-0.376706,-2.619647,-3.615096,-1.076645,4.331882,-6.993587,-6.197685,-0.883161,-3.705083,2.669839,-8.344723,4.028182,6.619321,7.076039,1.014134,-0.981735,1.034163,-5.322864,-5.333449,-6.268375,1.465431,-4.402023,8.441949,5.366239,1.672232,8.080681,5.713729,-4.410169,-6.165472,5.875033,9.322099,3.190262,-8.027820,2.481462,-7.553718,-4.992161,-5.549832,-4.191148,8.668710,-1.577494,-3.366048,0.429486,-1.371894,4.815401,9.544373,1.639474,-0.884385,0.690701,-3.528282,-5.713109,-3.879869,-6.313181,4.451264,3.991887,-5.813799,9.328827,7.825715,-7.964672,7.202436,8.449055,-8.328523,8.667153,2.063624,-4.466051,0.290551,7.586692,6.299224,9.045103,-6.105754,-0.543868,-9.870564,1.512269,-7.720463,9.786823,2.108825,-1.519790,2.793755,3.412370,-2.640115,-4.975465,-5.605039,7.702464,3.906198,-8.277336,0.492504,-2.705938,-1.877546,-6.267586,1.715102,-8.039364,-3.758817,8.977037,9.162912,-7.684034,-3.062841,4.569613,-2.825403,-7.211940,2.042056,6.931408,0.705504,-4.743633,-9.282235,-6.066387,1.771219,-5.304327,0.703305,4.572248,-6.970531,-8.038729,0.504333,3.062541,5.181008,3.331478,-6.983659,6.874054,8.261543,-4.556829,-0.425877,2.273786,1.455406,7.412538,0.056679,0.088185,0.195564,-5.997254,-7.541087,-3.237022,-9.888654,-5.503111,9.127103,-4.169091,-4.589588,-2.980857,-6.543537,-5.059606,8.222246,-7.870228,-7.004122,1.954624,-9.812229,-4.070387,6.861079,-0.120420,5.239878,4.827019,-0.883654,5.287161,-6.729422,-1.477045,6.688709,-1.409663,-7.464549,-4.455411,7.144728,-4.063120,6.823255,-3.244995,-0.748020,-2.584570,3.611694,-7.605649,-9.381749,-3.411948,1.651434,6.119778,6.942629,5.841688,-9.077609,0.321108,9.117390,7.406112,-7.717191,-5.330691,-2.475401,-7.492897,-8.430889,-3.289154,-1.246017,1.043001,5.965763,6.297778,-4.679852,-8.785118,-9.314322,-5.769601,-1.174148,-9.063091,4.383348,8.118423,-9.134960,-4.015452,-3.030289,1.358597,9.956188,-4.723740,0.369201,-8.183929,-1.408570,-1.279330,-4.239698,4.812730,6.864279,2.329594,-5.810906,-2.425576,0.729815,0.577498,3.569621,-7.658473,7.008728,4.054131,-2.526962,-9.209293,7.651482,1.350935,-8.152918,-8.074371,6.553050,-6.115015,-0.344848,-7.442320,7.742769,9.406122,-0.570200,-3.130681,-0.501204,-9.279812,5.368093,3.412261,3.023958,-5.705081,6.130968,7.708985,-9.987240,-9.720691,2.665087,-3.978615,-4.216952,7.490280,-0.196051,-3.000841,-4.953129,0.901378,-4.000624,-9.077245,-0.368958,9.924408,8.520111,-6.181290,-0.353565,-8.408047,1.036957,2.447274,-3.349398,-5.097946,-6.289672,7.659398,5.172990,-8.522037,1.355677,4.895896,8.123492,-1.034670,-4.923781,-0.611373,4.346627,-3.778278,-5.181311,0.134784,-7.928776,6.138031,-4.240654,0.427875,7.875652,0.038401,-6.137017,-7.921517,8.911751,-1.620261,9.847426,1.797955,5.844573,8.640370,2.281303,-4.313228,-9.845628,-3.562443,-4.227343,-1.354528,9.666532,8.144126,5.429103,2.659917,-0.180039,-5.674554,-5.074496,-0.411267,0.494659,2.281813,-2.024561,-0.308183,3.162458,-7.074797,7.320101,-6.558937,-1.692741,-2.397526,0.804721,3.938026,-1.025736,-6.584836,0.247410,-1.671707,-6.913595,5.610593,-4.377281,-4.680875,-2.858732,5.866596,2.461072,-4.821375,4.269374,5.895519,-1.565209,-1.656130,-4.533914,1.978333,-8.940136,-7.545354,-5.338109,3.507467,-7.843969,-7.307772,-5.477986,-6.586875,8.888793,-5.728420,6.537470,-5.529073,-3.845815,-2.437603,5.651848,-4.495695,-7.366237,-6.682691,-5.348923,5.515124,8.367232,2.279670,3.836019,-2.935789,-7.872349,-8.837309,-2.132000,1.574948,3.142695,-0.661478,3.901622,-5.801225,2.786301,-7.207347,5.904595,-8.735402,-7.321614,-5.330222,9.259592,-2.760392,9.721242,-9.409851,5.962169,-1.394010,3.160222,2.707810,4.039759,-2.024371,5.256060,-1.967586,-5.492714,7.090756,-0.473582,0.671302,-0.190937,8.460816,-7.790021,-0.830037,0.904348,-6.021076,5.196539,-2.252005,-5.691005,7.234136,3.271651,-5.169156,3.205687,-4.340017,4.365903,5.639114,-1.408486,-3.874960,-9.514835,-8.059958,1.082837,4.587350,5.104935,-5.287679,-6.320228,6.313044,7.833317,-5.671061,1.010410,5.119175,-0.516323,6.612629,4.743978,7.046244,-0.519201,-2.849820,-7.569529,-2.734213,2.159751,6.561497,-3.340359,5.783887,-4.140087,-2.450423,6.525840,6.892464,7.948714,-6.673537,-7.684395,-3.961216,6.819339,-4.813608,-7.670125,6.045743,7.384072,-3.050676,5.502522,-1.675041,1.063864,-9.233736,-3.604772,-9.653612,-7.366770,-3.272259,-0.862028,4.337710,3.936466,3.928146,-1.829747,3.951462,-1.785916,0.718691,-6.452177,1.381711,8.644462,-3.726990,5.566062,5.230293,3.829711,-6.371217,-2.184131,8.005611,-5.017616,-0.716696,-7.299711,-1.725017,1.423364,-5.463767,0.559623,7.464499,8.829107,-0.503449,-8.741774,-4.251376,-5.538701,3.796254,-7.256863,-4.182799,2.228755,0.546198,2.967937,-8.395930,-8.312238,-2.502237,8.349807,-9.702502,7.162055,0.658059,-0.331427,5.772174,1.136050,8.212741,5.246671,-5.552548,-5.430818,-2.942652,7.012403,-3.414099,-7.446207,-9.061701,-9.510235,-4.257351,7.738478,7.286746,-6.490572,-9.362308,3.069562,4.054875,-4.907279,-9.899942,-7.467895,-3.929545,0.163423,6.255580,0.121392,9.384525,-0.399514,9.711956,-4.891558,5.383965,6.073231,-1.417374,7.442549,5.984285,6.852933,4.256459,0.170333,9.955125,-1.774362,-7.380646,-7.974323,-5.682977,6.933889,7.347321,-5.997084,-0.378934,-1.678218,2.188146,7.421507,4.994545,-8.110450,-1.491717,-6.247924,-9.452367,-6.577860,-3.676832,7.783774,6.890622,-4.468156,-4.107756,1.002295,-8.332203,8.128990,1.697116,1.630180,8.486962,4.584731,1.567614,6.996723,2.376586,-9.682986,1.483367,-2.559006,-9.298376,5.423828,2.927815,-3.347800,-8.403386,3.857899,-9.572418,7.241624,-1.012580,5.060193,-3.238110,-1.099889,-2.675070,-4.213521,-8.979148,-5.500773,1.341880,6.139248,-9.139339,9.132482,9.702556,-3.548369,2.936340,2.755942,3.885396,4.910786,0.454190,8.085486,-4.333974,9.008149,-2.863006,2.037666,6.459758,-5.893110,-2.068296,0.718043,8.340700,8.226843,4.590442,-1.570686,1.199823,-1.325878,3.143620,-7.968763,5.482653,-4.927580,2.718828,-8.169970,-0.236879,-5.666585,-5.523763,-2.768758,-5.634886,-8.618264,-2.046298,-3.448035,-8.332734,6.809584,-7.214221,0.830688,2.814369,9.078456,9.496074,-5.317216,-9.464788,9.626718,-1.881496,-0.230748,6.475114,-0.809744,-6.833976,-3.249046,2.346359,-0.800379,1.921804,-2.778071,-7.396076,-4.346876,3.190805,3.052800,5.042375,-0.049733,4.355514,-0.073142,6.355197,-3.494797,9.851745,-9.171269,-0.408830,-1.055993,-6.758476,6.784868,-1.483964,-6.169482,-0.876596,-3.927177,-8.045124,1.610863,5.241546,8.750091,-5.417181,-1.405398,-7.450636,-5.193495,-1.153645,-3.663606,4.169324,4.977384,9.623780,2.484186,1.153828,-3.884222,-5.160343,4.806699,6.789281,-0.576797,1.033771,-4.407672,3.779247,-0.732200,1.538073,-9.276531,-4.945985,5.600874,-4.450592,6.059779,-7.960431,4.141642,7.701970,-0.230863,0.649716,-6.985002,-5.558788,-6.782253,-4.810548,0.667066,-1.306246,-6.055216,7.338375,-5.270528,1.869172,5.248129,2.071939,-4.463648,-4.798822,-0.784360,-6.797062,-1.177890,5.528209,-8.707574,0.564889,3.719897,-7.377353,6.657513,9.875321,5.445928,8.775969,-6.814117,0.373430,-0.756628,-3.925810,-8.408839,9.982558,0.041555,2.681395,-7.306333,1.958583,-1.776851,-9.328043,3.274673,-6.373116,-0.170738,9.710468,-4.762497,7.396332,-9.356230,5.333445,-6.503821,9.961262,2.325958,-2.884225,-3.909898,-8.471840,8.413041,-0.663026,-2.835031,1.877347,-6.916279,-2.543858,7.613579,1.891459,5.653726,-9.818859,-8.582851,2.296002,4.477732,1.068600,1.452038,-8.864892,-6.769056,1.838241,3.520828,4.432445,7.485133,6.767866,-7.960471,7.060130,0.607909,7.062060,7.255169,-3.971155,-0.380237,-4.529897,6.478699,-9.793913,7.991882,-9.464357,-4.968972,8.238758,1.411734,5.216229,0.357674,7.228611,-7.753972,-8.490833,3.922729,-5.607490,4.242384,1.046346,-9.367879,-4.838261,9.660818,-4.637610,3.135180,-6.406392,-1.249642,-9.588155,-7.581565,5.294303,-2.787985,-6.468581,-3.968355,-5.298848,-6.251788,-6.098033,8.350227,-0.462828,1.282508,5.782427,-2.535362,-1.704289,1.984624,1.130132,-9.963443,-3.488239,-0.329094,6.164894,-2.451769,-2.608504,2.881694,1.454657,-5.421688,-7.038542,-7.001709,-9.913134,3.629705,-2.694732,7.225806,-3.318830,-7.215534,-6.292812,3.880757,2.618388,3.664887,-0.422353,-9.365652,-6.667011,-4.203036,-3.978059,-8.826287,7.776744,4.408979,-9.843631,5.579824,6.527933,2.624079,7.984143,0.386628,-9.265826,-3.668479,0.376666,-2.219526,7.399217,-2.090224,-9.784011,-6.244282,-2.420635,2.536896,-7.381028,1.658015,-9.499590,-5.887570,-0.500228,-7.507150,-0.753870,9.812533,2.344095,2.503417,-7.819157,-8.171129,-3.482508,3.558596,6.221923,4.673851,0.807515,4.532200,-1.477249,6.996095,0.178387], dtype = "float64")#candidate|4929|(3120,)|const|float64
call_4928 = relay.TupleGetItem(func_2786_call(relay.reshape(const_4929.astype('float64'), [3120,])), 1)
call_4930 = relay.TupleGetItem(func_2788_call(relay.reshape(const_4929.astype('float64'), [3120,])), 1)
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
var_4934 = relay.var("var_4934", dtype = "float32", shape = (484,))#candidate|4934|(484,)|var|float32
call_4933 = func_3220_call(relay.reshape(var_4934.astype('float32'), [11, 4, 11]))
call_4935 = func_3220_call(relay.reshape(var_4934.astype('float32'), [11, 4, 11]))
uop_4936 = relay.rsqrt(var_4919.astype('float32')) # shape=(4, 10, 14)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_4938 = relay.TupleGetItem(func_3166_call(), 0)
call_4939 = relay.TupleGetItem(func_3167_call(), 0)
output = relay.Tuple([bop_4921,call_4928,const_4929,call_4933,var_4934,uop_4936,call_4938,])
output2 = relay.Tuple([bop_4921,call_4930,const_4929,call_4935,var_4934,uop_4936,call_4939,])
func_4941 = relay.Function([var_4919,var_4920,var_4934,], output)
mod['func_4941'] = func_4941
mod = relay.transform.InferType()(mod)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4941_call = mutated_mod.get_global_var('func_4941')
var_4943 = relay.var("var_4943", dtype = "uint32", shape = (4, 10, 14))#candidate|4943|(4, 10, 14)|var|uint32
var_4944 = relay.var("var_4944", dtype = "uint32", shape = (4, 10, 14))#candidate|4944|(4, 10, 14)|var|uint32
var_4945 = relay.var("var_4945", dtype = "float32", shape = (484,))#candidate|4945|(484,)|var|float32
call_4942 = func_4941_call(var_4943,var_4944,var_4945,)
output = call_4942
func_4946 = relay.Function([var_4943,var_4944,var_4945,], output)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4958 = relay.var("var_4958", dtype = "float64", shape = (12, 7, 15))#candidate|4958|(12, 7, 15)|var|float64
uop_4959 = relay.cosh(var_4958.astype('float64')) # shape=(12, 7, 15)
bop_4961 = relay.minimum(uop_4959.astype('uint16'), relay.reshape(var_4958.astype('uint16'), relay.shape_of(uop_4959))) # shape=(12, 7, 15)
uop_4965 = relay.sin(var_4958.astype('float32')) # shape=(12, 7, 15)
output = relay.Tuple([bop_4961,uop_4965,])
output2 = relay.Tuple([bop_4961,uop_4965,])
func_4978 = relay.Function([var_4958,], output)
mod['func_4978'] = func_4978
mod = relay.transform.InferType()(mod)
mutated_mod['func_4978'] = func_4978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4979 = relay.var("var_4979", dtype = "float64", shape = (12, 7, 15))#candidate|4979|(12, 7, 15)|var|float64
func_4978_call = mutated_mod.get_global_var('func_4978')
call_4980 = func_4978_call(var_4979)
output = call_4980
func_4981 = relay.Function([var_4979], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_4983 = func_2710_call()
call_4984 = func_2710_call()
output = relay.Tuple([call_4983,])
output2 = relay.Tuple([call_4984,])
func_5003 = relay.Function([], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
output = func_5003()
func_5004 = relay.Function([], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_5013 = relay.TupleGetItem(func_4240_call(), 0)
call_5014 = relay.TupleGetItem(func_4241_call(), 0)
func_1961_call = mod.get_global_var('func_1961')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_5024 = relay.const([8,10,-8,7,4,5,8,-10,4,-9,2,1,1,-2,-3,3,-4,9,6,8,-1,-1,-1,-3,-9,-3,6,-1,-5,-4,-2,10,-3,-10,4,-10,-2,-4,-2,-7,1,1,4,-4,5,-7,-8,6,5,-10,-5,6,1,-10,8,5,-9,-7,-10,-2,-3,-5,6,-10,-7,-2,1,2,7,-7,1,-4,-10,-5,-4,-5,-8,7,2,-6,8,-5,-3,10,-1,7,-9,-2,4,9,-6,4,-7,-7,8,1,-9,-2,-5,4,-9,8,2,9,9,3,-2,-7,-7,9,-8,-9,9,1,6,-8,6,3,5,-5,9,10,-4,2,3,-7,4,-8,-9,-6,4,-10,-9,-10,6,-1,-3,6,-7,-1,2,9,-5,-10,4,1,-2,-10,-5,-7,6,-6,8,8,-2,4,-8,9,-2,10,-7,-5,2,-9,-6,8,4,-2,-5,8,1,1,-6,5,-1,5,-7,-6,6,6,2,3,-5,8,7,-9,-9,10,-3,3,-3,4,1,-7,-5,-8,-6,-5,-7,-2,1,3,-4,-5,-1,2,9,3,6,-6,4,8,-6,-10,-7,5,8,8,-4,-10,1,8,6,1,-3,2,2,7,2,1,4,7,-6,3,-8,-5,-2,1,6,1,1,-7,3,1,3,-7,7,-8,-9,-3,3,7,2,-7,-2,-8,-4,-7,10,4,-1,-10,-5,3,9,-2,-5,8,-1,-6,3,-7,10,4,4,-1,1,3,-10,-3,-2,1,-5,7,-4,-8,-8,4,9,-5,-7,7,-8,5,7,-6,4,8,-6,3,9,-7,-8,-2,2,-1,-6,9,9,3,-4,6,-8,-7,-1,-4,-4,7,3,-9,1,-6,-8,-2,-10,2,-5,4,-5,6,1,-8,3,7,7,3,-5,4,3,-2,-10,-9,-5,6,3,-7,4,-9,1,4,-1,-5,-7,2,2,7,8,-6,-8,-4,8,5,-7,10,-2,5,5,-2,6,4,-9,1,-6,2,-1,7,8,-3,8,-4,-2,-6,8,9,5,3,4,-3,10,4,-4,3,5,-8,1,-5,-10,10,-2,-1,4,-1,7,-9,-9,-2,-6,-4,3,5,-3,-7,-5,8,-7,2,-2,-8,-7,10,1,-1,-5,7,-9,1,5,5,-6,7,4,5,-4,-7,-1,7,6,-7,4,-10,8,-3,1,5,10,1,3,10,-10,-8,-3,-10,-4,-2,3,-9,5,-6,-9,4,-2,5,-2,3,-3,10,6,7,-7,8,2,10,9,-4,6,-10,-4,4,-2,-5,-7,-3,6,-5,-10,4,-8,1,-2,-8,2,7,-4,3,9,5,4,-1,9,-3,8,-2,4,4,8,-4,-9,-8,3,3,9,10,-5,4,-10,4,8,4,1,8,1,10,5,5,9,-10,5,2,4,3,-6,-1,6,4,5,-5,-6,-6,-4,8,8,-2,1,-2,-1,-8,3,9,7,7,7,-6,-8,5,5,3,-1,-6,-8,-7,5,-6,-7,10,-10,5,8,2,6,-7,-1,6,-5,6,3,4,1,8,5,-3,4,4,-1,-9,-6,-10,7,8,-8,-5,8,-9,-9,6,-5,-9,-6,3,9,-4,8,-1,10,7,6,9,1,-2,4,-4,-8,8,-6,-1,4,-10,-1,-5,10,9,4,-9,-5,-7,10,10,6,4,-10,9,-2,4,1,6,-1,-7,-2,-2,-9,8,2,-9,-5,-2,-8,8,-3,-5], dtype = "uint32")#candidate|5024|(648,)|const|uint32
call_5023 = func_1961_call(relay.reshape(const_5024.astype('uint32'), [8, 9, 9]))
call_5025 = func_1961_call(relay.reshape(const_5024.astype('uint32'), [8, 9, 9]))
output = relay.Tuple([call_5013,call_5023,const_5024,])
output2 = relay.Tuple([call_5014,call_5025,const_5024,])
func_5028 = relay.Function([], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
output = func_5028()
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_5066 = relay.TupleGetItem(func_3405_call(), 0)
call_5067 = relay.TupleGetItem(func_3407_call(), 0)
func_4486_call = mod.get_global_var('func_4486')
func_4488_call = mutated_mod.get_global_var('func_4488')
const_5099 = relay.const(3, dtype = "int16")#candidate|5099|()|const|int16
call_5098 = relay.TupleGetItem(func_4486_call(relay.reshape(const_5099.astype('int16'), [])), 3)
call_5100 = relay.TupleGetItem(func_4488_call(relay.reshape(const_5099.astype('int16'), [])), 3)
output = relay.Tuple([call_5066,call_5098,const_5099,])
output2 = relay.Tuple([call_5067,call_5100,const_5099,])
func_5126 = relay.Function([], output)
mod['func_5126'] = func_5126
mod = relay.transform.InferType()(mod)
output = func_5126()
func_5127 = relay.Function([], output)
mutated_mod['func_5127'] = func_5127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5138 = relay.var("var_5138", dtype = "float32", shape = (9, 15, 16))#candidate|5138|(9, 15, 16)|var|float32
var_5139 = relay.var("var_5139", dtype = "float32", shape = (9, 15, 16))#candidate|5139|(9, 15, 16)|var|float32
bop_5140 = relay.floor_mod(var_5138.astype('float32'), relay.reshape(var_5139.astype('float32'), relay.shape_of(var_5138))) # shape=(9, 15, 16)
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_5145 = relay.TupleGetItem(func_3294_call(), 0)
call_5146 = relay.TupleGetItem(func_3296_call(), 0)
bop_5150 = relay.greater_equal(var_5139.astype('bool'), relay.reshape(var_5138.astype('bool'), relay.shape_of(var_5139))) # shape=(9, 15, 16)
output = relay.Tuple([bop_5140,call_5145,bop_5150,])
output2 = relay.Tuple([bop_5140,call_5146,bop_5150,])
func_5170 = relay.Function([var_5138,var_5139,], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
mutated_mod['func_5170'] = func_5170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5170_call = mutated_mod.get_global_var('func_5170')
var_5172 = relay.var("var_5172", dtype = "float32", shape = (9, 15, 16))#candidate|5172|(9, 15, 16)|var|float32
var_5173 = relay.var("var_5173", dtype = "float32", shape = (9, 15, 16))#candidate|5173|(9, 15, 16)|var|float32
call_5171 = func_5170_call(var_5172,var_5173,)
output = call_5171
func_5174 = relay.Function([var_5172,var_5173,], output)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mod.get_global_var('func_3783')
func_3785_call = mutated_mod.get_global_var('func_3785')
call_5221 = func_3783_call()
call_5222 = func_3783_call()
func_3848_call = mod.get_global_var('func_3848')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_5242 = func_3848_call()
call_5243 = func_3848_call()
output = relay.Tuple([call_5221,call_5242,])
output2 = relay.Tuple([call_5222,call_5243,])
func_5244 = relay.Function([], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
output = func_5244()
func_5245 = relay.Function([], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3848_call = mod.get_global_var('func_3848')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_5248 = func_3848_call()
call_5249 = func_3848_call()
func_1132_call = mod.get_global_var('func_1132')
func_1136_call = mutated_mod.get_global_var('func_1136')
const_5273 = relay.const(8, dtype = "int16")#candidate|5273|()|const|int16
const_5274 = relay.const([[-6,7,-10,1,-1,-1,-1,5,7,4,-2,3,3,4,9,-5,5,-2,4,6,6,-6,-10,-2,5,-3,7,2,4,-6,-6,-8,3,-7,-5,-2,-8,-5,-1,7,3,2,4,3,-2,10,10,-10,-8,-9,9,4,-2,-8,-6,-1,-3,-10,-9,-6,2,8,6,6,-6,-8,8,4,1,-7,7,5,-2,-10,7,-3,-3,-2],[10,6,-3,-1,-6,-3,7,3,7,-5,-4,2,-2,-2,-6,6,4,-2,-6,-8,-7,1,-10,-7,4,-5,-8,2,2,5,-10,-5,-2,-3,-1,-3,3,-10,8,-9,-1,1,-3,-9,8,-4,8,-5,8,1,9,8,5,3,7,-6,-8,10,-1,-6,-5,-7,2,3,8,-9,-7,-8,-7,6,5,-2,10,-4,-1,9,-1,-10],[6,2,9,-10,-10,-9,-9,3,-8,9,-9,8,-3,7,-3,6,-2,5,2,8,-6,-1,3,-1,10,-10,2,8,-6,9,4,1,6,9,-1,-1,5,2,-7,10,2,6,-9,9,-1,-7,4,3,3,-7,1,1,-2,-6,5,-6,-8,-1,9,6,-8,5,10,1,1,8,-8,8,2,-8,-1,-6,-9,8,6,-7,7,-6],[1,-10,5,-2,7,-10,-5,-5,-5,7,-7,1,9,8,2,-4,-1,-5,4,-7,9,-9,-8,-3,7,-8,-7,10,8,3,-3,-5,1,1,7,-6,7,-3,4,-1,-7,7,-7,1,6,7,9,4,-2,-5,2,7,9,-8,7,-3,-8,10,9,3,5,5,-4,4,-5,-6,10,-8,-3,-1,-8,9,-7,1,2,1,6,9],[-8,-7,-4,10,6,5,8,4,-4,-10,-1,7,7,-1,6,4,-5,-7,-3,2,-6,-1,-7,-10,5,2,-3,9,6,4,10,-6,-8,-3,-9,-10,-6,-9,5,1,-9,6,-1,3,-5,-9,-4,1,7,5,-2,9,6,-10,7,-1,-6,8,3,3,10,-4,-7,8,-2,-8,-8,2,-6,6,-4,10,3,-7,1,4,-4,-8],[7,4,9,-4,2,-4,8,4,7,4,-3,-8,-1,-8,3,7,-1,9,-5,-10,7,-7,-4,-9,-6,4,-1,6,5,8,-9,7,-6,-2,7,1,-6,1,1,4,10,-7,-10,-5,-8,-2,10,8,6,-8,-4,9,9,-1,-7,-8,-4,-7,9,-7,7,-3,-9,-2,1,-7,10,4,-3,10,3,-6,4,-9,-9,9,8,-2]], dtype = "int16")#candidate|5274|(6, 78)|const|int16
call_5272 = relay.TupleGetItem(func_1132_call(relay.reshape(const_5273.astype('int16'), []), relay.reshape(const_5274.astype('int16'), [13, 9, 4]), ), 0)
call_5275 = relay.TupleGetItem(func_1136_call(relay.reshape(const_5273.astype('int16'), []), relay.reshape(const_5274.astype('int16'), [13, 9, 4]), ), 0)
output = relay.Tuple([call_5248,call_5272,const_5273,const_5274,])
output2 = relay.Tuple([call_5249,call_5275,const_5273,const_5274,])
func_5290 = relay.Function([], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
output = func_5290()
func_5291 = relay.Function([], output)
mutated_mod['func_5291'] = func_5291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_5446 = relay.TupleGetItem(func_4277_call(), 0)
call_5447 = relay.TupleGetItem(func_4278_call(), 0)
output = call_5446
output2 = call_5447
func_5466 = relay.Function([], output)
mod['func_5466'] = func_5466
mod = relay.transform.InferType()(mod)
mutated_mod['func_5466'] = func_5466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5466_call = mutated_mod.get_global_var('func_5466')
call_5467 = func_5466_call()
output = call_5467
func_5468 = relay.Function([], output)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mod.get_global_var('func_3918')
func_3920_call = mutated_mod.get_global_var('func_3920')
call_5472 = func_3918_call()
call_5473 = func_3918_call()
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
const_5492 = relay.const([3,-8,1,6,6,-8,-10,8,8,-10,5,-6,6,-4,-10,-10,7,7,-1,-7,-1,-4,5,-8,-6,-4,10,1,-9,10,-7,6,8,1,4,-6,4,-7,4,4,8,8,-9,3,-3,9,5,6,-7,-5,-7,-8,-1,-10,2,2,3,7,8,-1,-3,2,4,-3,5,3,-9,4,8,2,9,2,-5,-3,-7,3,-5,-9,-3,1,10,-1,-7,-8,1,8,5,2,-7,2,-1,7,10,-4,-10,-10,-1,1,7,6,1,-6,2,-6,-4,6,-3,-1,10,-5,-10,-3,9,-10,3,-2,10,1,-7,4,5,-7,4,1,-3,4,-3,-6,-1,7,-4,8,-9,7,-4,-9,10,7,-4,-8,5,2,-9,2,-9,-5,10,-9,2,8,7,-7,5,-1,-2,-8,2,-7,-2,-2,10,4,-1,-10,8,-1,5,-2,-9,9,-3,-8,-9,-6,6,2,7,5,-8,3,4,3,-9,2,-9,1,10,-8,6,9,-4,-9,6,1,2,-4,-5,8,3,3,-2,5,-6,10,7,-6,-2,-3,9,-6,5,7,-8,-5,-4,-4,-5,-8,-2,-2,2,3,3,6,-10,-4,4,-7,8,-5,2,-1,-8,7,9,-2,-7,7,-9,-3,5,5,3,-4,-4,3,8,-3,5,8,-9,-5,5,8,6,4,3,1,-9,-6,3,9,3,10,3,-2,-10,1,-2,9,4,-9,3,2,-6,7,8,-3,-9,1,-10,-6,-3,-4,-10,10,8,-1,-9,3,3,-5,5,4,-10,5,9,8,10,4,9,-4,-3,-8,-9,-8,-10,-5,-10,10,-3,9,8,-1,-1,8,9,9,-8,6,7,-2,-6,5,-4,-5,-9,9,2,-8,7,5,10,9,10,-5,-9,5,4,1,-4,-4,-1,-2,5,7,10,9,7,-7,-3,-3,1,-6,-9,-10,-5,6,9,10,2,7,1,-3,4,-5,-4,7,-8,8,-4,-10,7,5,-8,2,-2,1,3,-10,-3,3,-5,3,-7,-1,-3,8,-9,-6,7,6,-6,-1,-10,-7,-7,-10,-3,6,-6,-1,-9,7,-1,6,2,7,8,1,10,3,-10,-10,8,3,4,-10,-2,-3,-3,-2,1,-5,5,9,3,3,-6,6,-8,7,2,6,-8,8,-8,-6,-8,-7,6,10,-7,5,-5,-7,-2,6,-4,8,1,-1,6,7,-8,-1,-10,8,-4,-3,3,-4,6,9,-4,10,-4,-4], dtype = "int16")#candidate|5492|(468,)|const|int16
call_5491 = relay.TupleGetItem(func_3953_call(relay.reshape(const_5492.astype('int16'), [468,])), 3)
call_5493 = relay.TupleGetItem(func_3955_call(relay.reshape(const_5492.astype('int16'), [468,])), 3)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_5515 = relay.TupleGetItem(func_3753_call(relay.reshape(call_5472.astype('bool'), [11, 4, 11])), 0)
call_5516 = relay.TupleGetItem(func_3755_call(relay.reshape(call_5472.astype('bool'), [11, 4, 11])), 0)
uop_5528 = relay.log10(call_5472.astype('float32')) # shape=(11, 4, 11)
uop_5530 = relay.log10(call_5473.astype('float32')) # shape=(11, 4, 11)
uop_5551 = relay.atanh(uop_5528.astype('float64')) # shape=(11, 4, 11)
uop_5553 = relay.atanh(uop_5530.astype('float64')) # shape=(11, 4, 11)
output = relay.Tuple([call_5491,const_5492,call_5515,uop_5551,])
output2 = relay.Tuple([call_5493,const_5492,call_5516,uop_5553,])
func_5574 = relay.Function([], output)
mod['func_5574'] = func_5574
mod = relay.transform.InferType()(mod)
output = func_5574()
func_5575 = relay.Function([], output)
mutated_mod['func_5575'] = func_5575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4693_call = mutated_mod.get_global_var('func_4693')
call_5576 = func_4691_call()
call_5577 = func_4691_call()
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_5594 = relay.TupleGetItem(func_3405_call(), 0)
call_5595 = relay.TupleGetItem(func_3407_call(), 0)
output = relay.Tuple([call_5576,call_5594,])
output2 = relay.Tuple([call_5577,call_5595,])
func_5600 = relay.Function([], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5600_call = mutated_mod.get_global_var('func_5600')
call_5601 = func_5600_call()
output = call_5601
func_5602 = relay.Function([], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5625 = relay.TupleGetItem(func_5244_call(), 1)
call_5626 = relay.TupleGetItem(func_5245_call(), 1)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5634 = func_4898_call()
call_5635 = func_4898_call()
func_5244_call = mod.get_global_var('func_5244')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5638 = relay.TupleGetItem(func_5244_call(), 1)
call_5639 = relay.TupleGetItem(func_5245_call(), 1)
output = relay.Tuple([call_5625,call_5634,call_5638,])
output2 = relay.Tuple([call_5626,call_5635,call_5639,])
func_5665 = relay.Function([], output)
mod['func_5665'] = func_5665
mod = relay.transform.InferType()(mod)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mutated_mod.get_global_var('func_5665')
call_5666 = func_5665_call()
output = call_5666
func_5667 = relay.Function([], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_5687 = relay.TupleGetItem(func_3106_call(), 0)
call_5688 = relay.TupleGetItem(func_3107_call(), 0)
output = relay.Tuple([call_5687,])
output2 = relay.Tuple([call_5688,])
func_5699 = relay.Function([], output)
mod['func_5699'] = func_5699
mod = relay.transform.InferType()(mod)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5699_call = mutated_mod.get_global_var('func_5699')
call_5700 = func_5699_call()
output = call_5700
func_5701 = relay.Function([], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mod.get_global_var('func_5290')
func_5291_call = mutated_mod.get_global_var('func_5291')
call_5712 = relay.TupleGetItem(func_5290_call(), 2)
call_5713 = relay.TupleGetItem(func_5291_call(), 2)
func_2935_call = mod.get_global_var('func_2935')
func_2938_call = mutated_mod.get_global_var('func_2938')
var_5721 = relay.var("var_5721", dtype = "uint64", shape = (1008,))#candidate|5721|(1008,)|var|uint64
call_5720 = relay.TupleGetItem(func_2935_call(relay.reshape(var_5721.astype('uint64'), [9, 7, 16]), relay.reshape(var_5721.astype('uint64'), [9, 7, 16]), ), 0)
call_5722 = relay.TupleGetItem(func_2938_call(relay.reshape(var_5721.astype('uint64'), [9, 7, 16]), relay.reshape(var_5721.astype('uint64'), [9, 7, 16]), ), 0)
output = relay.Tuple([call_5712,call_5720,var_5721,])
output2 = relay.Tuple([call_5713,call_5722,var_5721,])
func_5723 = relay.Function([var_5721,], output)
mod['func_5723'] = func_5723
mod = relay.transform.InferType()(mod)
mutated_mod['func_5723'] = func_5723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5724 = relay.var("var_5724", dtype = "uint64", shape = (1008,))#candidate|5724|(1008,)|var|uint64
func_5723_call = mutated_mod.get_global_var('func_5723')
call_5725 = func_5723_call(var_5724)
output = call_5725
func_5726 = relay.Function([var_5724], output)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_5730 = relay.TupleGetItem(func_3820_call(), 0)
call_5731 = relay.TupleGetItem(func_3822_call(), 0)
func_2167_call = mod.get_global_var('func_2167')
func_2170_call = mutated_mod.get_global_var('func_2170')
const_5740 = relay.const([-0.356279,-5.481908,6.007457,4.115255,3.910005,-3.866823,-6.612757,-1.845926,-0.834807,-9.228990,-1.089916,-3.519471,9.551986,-4.622855,6.250344,-2.909091,-7.366847,5.744040,2.944875,1.921260,-2.869811,0.494258,-1.538621,1.093956,-3.275912,-4.997139,1.976615,8.637889,-8.897584,8.909309,-4.119363,-2.231837,-8.052065,2.840311,-0.922572,2.852244,-0.166261,3.162658,-1.131902,6.016171,-0.255009,9.177008,-7.247960,-5.086915,-8.690606,-7.403354,-9.064067,-7.161514,-7.029116,-4.244693,-5.088641,9.444251,-4.624581,-6.464126,-9.865691,-5.331786,5.044177,-9.639465,-9.858404,-0.023836,-1.199424,-8.317695,4.870249,3.293091,-2.662137,-7.094247,7.371233,6.014463,5.935287,-8.394126,3.277914,-9.065347,1.535593,1.929256,-6.620666,-6.201912,-5.242862,2.863368,4.174599,-6.063096,-6.870077,3.947714,-2.493033,4.148873,-1.814637,3.919697,-2.931617,-5.835831,-4.737122,-1.875896,9.740393,7.927213,4.907373,-9.448826,-5.821285,-5.561241,4.065732,-0.727915,-8.396276,9.823630,-0.641541,-9.987954,5.416481,-1.055701,-3.603196,-8.674746,2.307293,-3.433196,-2.582848,-6.437557,6.286502,0.680604,-4.721922,-0.786612,8.684973,3.906444,5.149661,4.848331,-8.959844,-2.078309,-8.099386,-9.053181,8.245366,-8.112963,1.588576,-0.210110,4.940863,-2.545439,8.847112,-8.745086,-4.220439,-9.689387,3.500863,-1.839293,9.559879,0.918383,0.080032,-8.061934,-2.440206,-1.151405,3.895515,-9.065604,-5.411041,-8.481785,2.233681,6.049125,-4.484209,2.274855,0.747047,0.475143,1.067746,-7.897414,-2.929959,2.837530,0.320147,9.536390,-1.690202,6.365317,-0.269171,-0.596212,-3.609127,1.608575,-9.403817,-8.646992,6.670317,-1.122723,-4.532754,4.110287,0.475032,7.312626,8.625427,3.545569,-6.106364,-8.319394,-8.527758,6.129952,-9.431381,2.820069,2.771720,-4.548708,0.538120,3.792195,2.811716,0.917526,1.937274,8.934612,5.318185,-6.784711,6.219897,-5.237822,-9.695819,-7.035119,-1.563841,1.734830,-4.142880,-0.969330,-7.908406,0.957827,0.020991,3.822525,-3.125123,8.458686,1.433414,8.411248,-2.386797,8.483600,8.448199,-9.317129,6.387508,-2.553434,2.415210,-4.545988,-0.491352,-7.722684,-5.022504,0.945411,-1.506349,-2.544172,-7.146484,5.028573,1.482350,3.565532,-4.543848,-9.958897,8.333341,2.274359,-7.824003,3.773349,-2.432736,-6.040554,4.053108,3.946169,-8.639081,4.169096,2.318617,5.502578,5.227298,-7.377723,-3.149001,-1.820772,5.553993,1.194598,3.332691,-8.418043,-2.936817,-9.893846,-2.360811,9.746022,0.156312,-0.290517,3.071099,1.564732,-9.224378,2.998128,-8.631908,2.322580,2.271322,1.178533,6.929835,-8.344861,-2.381642,4.284691,-4.993316,4.901456,3.879088,3.320635,-9.204882,-5.090030,-2.014889,6.100298,2.492153,-2.579524,8.527095,1.821878,8.435311,-4.570254,-8.957645,7.494540,7.797308,-3.744883,-4.482839,5.986550,-1.514176,4.940258,5.899744,6.593137,6.160374,-1.636293,-4.848991,9.358081,1.906378,0.766044,1.557504,6.436182,-0.060026,-8.457165,9.753228,4.356459,4.347886,-1.836731,3.762309,6.969308,1.504678,-9.307194,6.139428,5.767152,2.313067,-1.661591,4.056963,4.988849,0.630656,-0.577384,-9.564115,-9.474886,1.244780,-4.224421,-2.977934,6.501797,1.146640,4.834000,-9.294328,-1.282961,-3.694347,-3.804421,-7.639799,8.508255,1.315184,-0.300401,3.509354,6.359840,8.276410,1.437703,2.438441,1.074229,-4.384717,1.085996,7.928983,9.216029,-6.587399,-8.586966,1.441848,-1.827665,5.890972,-1.629284,5.321146,4.038742,-5.229597,1.395299,-9.427666,-8.126239,6.825195,4.978146,7.782925,-5.413393,-1.778437,-4.480954,-9.042756,6.452507,6.218368,-2.538014,7.337822,9.842366,2.255058,-3.924739,8.899223,-2.575242,-5.683532,-1.272748,-9.922597,-9.649839,3.569908,8.890161,6.215387,1.774838,-5.278352,-2.069904,-1.144747,8.630383,-8.389925,7.505345,8.763454,-8.735474,8.776827,7.142035,-6.895364,-0.191376,2.398890,0.251562,-3.517960,8.295889,9.508615,1.077565,-1.701742,8.269170,-7.908366,-1.583238,-3.580463,0.527662,2.455080,-9.573035,-3.061637,7.161513,-2.395678,7.298778,-2.188611,1.831183,-1.954139,1.340903,-1.625250,4.987595,0.179563,-7.650361,-8.029004,7.118692,-7.581931,3.082982,-6.559965,-3.116571,-0.028061,-8.709186,4.535699,-2.002668,-7.939810,-3.688614,-2.986600,8.221797,7.188775,7.313395,4.757408,-7.310336,-8.122456,4.154060,-5.716390,4.114878,1.764186,4.384349,-4.972744,-3.097150,0.139746,8.044668,-4.371694,5.685522,-9.399277,7.542517,9.189811,3.509058,-9.962971,3.519006,8.679039,7.430290,-6.436182,1.927801,-6.459527,6.638132,-0.324108,3.344188,8.726407,-6.131421,2.848719,3.256072,9.295700,6.001045,8.081498,4.640771,6.906051,2.679304,2.428846,-5.312697,-4.008443,-1.333090,-0.330485,6.282850,-5.364506,9.791031,-0.918229,3.196386,-9.285427,3.082730,4.616703,-9.961536,9.081163,-5.171546,-2.540683,-2.021374,-3.306527,1.837213,-3.308414,-7.757519,-9.353536,-4.216013,-5.782990,6.602317,-6.438657,2.913342,8.295355,2.301793,0.947405,5.844452,-7.700977,5.913161,-5.901556,-0.327797,9.394238,-4.484620,-8.610701,-2.654462,-6.129953,2.665932,-9.032253,-2.158620,-2.502633,-7.615763,0.997805,4.201174,1.092765,-7.033526,1.898078,-6.303724,1.537442,1.778480,-7.731238,-9.767935,0.760420,7.903756,-0.216761,3.418024,3.826270,7.587238,9.321804,7.464301,3.423088,9.435874,-5.345815,3.129721,-8.837127,1.980716,9.720028,2.600119,-4.651013,-1.375852,-4.870521,0.814049,-2.476739,-1.215618,-5.072349,-0.540621,0.858905,-0.588090,-0.261521,6.234610,-6.458178,5.733759,-7.184025,-4.377973,9.470067,-6.011717,-7.259197,-3.088640,-9.592542,7.199669,-4.177072,-5.846368,9.376426,7.690768,-6.433667,-4.122158,8.825577,-9.002568,-7.544092,-2.535962,-5.726851,4.299617,0.523381,1.308932,-7.164481,-6.643323,-9.935246,-8.889891,1.804134,9.925091,-3.209477,2.881921,4.838497,6.252152,-2.688190,-2.335136,-2.063439,-5.273096,4.765820,4.013107,-7.652642,-8.435546,-4.718357,-0.518581,-2.334943,-7.934230,6.615399,-4.126658,4.133404,-2.436614,-2.512582,-8.851778,-3.622767,-8.117747,-9.779157,1.827732,4.674408,-4.673015,-4.155613,5.035320,-9.792370,5.784308,1.263834,4.973699,5.855865,3.903422,-4.630699,0.309582,-9.024739,-6.271492,9.688852,7.923690,7.014481,1.950446,-9.870739,-4.037585,-5.819112,-6.802034,5.169618,-2.366872,1.178009,-0.226467,-5.957068,-5.626023,2.223884,6.609751,-5.692462,8.074514,-4.642133,2.290684,-1.747597,-1.868876,1.110122,-7.016320,-4.553860,1.479930,-6.132376,9.120030,5.228184,6.283845,-1.310880,-9.439634,4.161141,-5.419799,-8.525144,-8.019222,8.159988,7.953078,8.992663,0.764361,-8.372791,6.472287,0.255223,9.484869,-3.123805,0.816358,-9.474611,0.313597,-1.780749,7.843584,8.633900,9.506020,-6.826805,5.570422,-5.081011,5.862665,-6.762351,-9.395245,9.086980,-8.949358,-9.631047,-3.310178,0.079188,9.345847,1.837158,-2.443389,-2.199598,5.081893,-5.960742,2.950137,-4.750100,-0.878867,8.401213,-5.783421,-0.788551,6.170544,-8.661391,3.682804,9.185367,6.823035,-7.531827,-4.427315,2.118895,2.746057,-7.404737,0.824503,-5.067207,4.380300,-5.302921,-5.368475,0.211126,6.751377,-2.494514,5.772670,3.827798,-6.484041,0.675714,5.836126,8.903524,-0.422532,6.701416,-3.099128,8.181487,7.021579,7.527806,5.352210,4.516660,-8.612551,6.372352,-2.493414,0.473461,-9.193253,0.367834,1.290089,7.371447,-7.490538,2.718717,-4.237657,0.061275,-2.008580,9.832842,1.126491,0.655108,-1.152301,4.666261,0.212808,-3.487348,5.341431,7.261486,-3.653792,8.715170,9.132709,9.136723,7.772432,-3.036674,6.051523,9.489070,-7.279390,-9.109934,-4.548764,5.987409,-9.092261,5.695234,0.982960,7.305850,3.537964,0.746632,6.891093,-6.659476,7.796439,4.440990,3.480535,4.967044,2.903513,-2.634971,2.374023,2.608718,7.842307,-2.319671,-8.521389,-0.925344,-5.938053,-3.002911,-3.019380,-1.910201,0.590072,-2.123781,8.296493,6.277761,-5.437691,-2.538145,5.221561,1.383567,-2.018464,-5.595507,3.889883,1.977700,-3.984775,-7.947594,-5.168834,-5.468687,-0.202141,-1.547103,-2.087356,-2.440582,-9.677986,-4.315861,-5.587415,-1.129784,4.102371,3.543384,-7.805121,-3.479183,9.163387,4.604308,-9.859583,3.301394,8.975606,-7.609951,1.982771,-1.617367,3.978754,-1.450477,-7.834290,-6.299263,3.657717,7.658343,-7.647720,-2.459197,-8.051723,-2.248397,0.226272,7.538287,3.991978,-1.509072,-4.607201,-3.745752,5.628243,2.849568,-6.354057,-5.574380,-8.952375,3.189032,0.197156,-5.036082,6.502832,-7.599576,-1.767806,7.593339,1.108488,9.376161,-2.428754,4.435604,-4.782456,-4.557108,4.834901,-3.837941,-7.776989,-6.992207,8.562402,8.668742,1.320108,0.341999,3.471059,-8.442021,-5.792420,-7.665457,5.824665,-8.725632,-8.321090,-9.718765,4.300413,5.054686,-2.857903,-8.077038,-0.212238,4.080591,5.248630,-3.946332,1.349356,-7.719879,-0.709982,0.877769,-2.243431,3.418614,-0.114110,-4.040432,-9.053745,6.040349,-3.879152,-3.063328,6.051225,-4.849897,-6.012577,2.251397,3.832459,9.038399,-7.444956,-2.160720,-8.101861,6.387606,5.504770,0.499572,-4.650185,9.527797,-0.584381,4.375967,2.797667,-1.609478,-4.757020,5.627237,0.308676,3.766513,0.055544,3.322522,9.619013,-5.367525,-0.606560,-9.529389,-9.962393,0.242166,7.340654,-7.338780,1.150061,-2.778694,-5.845394,7.328040,-8.601728,8.711948,-3.031560,-1.430010,-1.938888,8.400305,-4.904795,4.404934,3.845743,0.233420,6.144698,4.324278,-8.218660,6.814384,3.139872,1.116784,1.732049,-8.150085,9.397601,-2.221385,4.179108,-4.437702,5.242989,0.449370,2.035048,-1.875329,-1.081148,8.533379,5.610936,-6.053146,3.582050,2.182899,-7.504968,7.336977,-1.499763,6.775317,9.408252,5.431114,8.843510,5.796998,0.932689,-5.055771,0.021601,-4.547016,-8.586057,8.416479,-8.540141,-5.889181,-8.970549,-6.822569,2.062224,0.273003,-3.401475,-4.408621,9.298855,-0.022775,2.019246,-9.857930,-2.238119,4.473842,8.378889,-9.428648,0.599551,0.596021,-8.261228,-9.748659,4.129528,-7.566155,-0.403264,-1.560004,-8.777111,-7.867755,3.717942,-2.152006,-9.935434,-6.357092,4.570396,8.328722,9.973273,-2.525587,6.762868,-8.758398,-3.234361,-2.665477,0.238762,-5.048341,8.145827,0.632686,-0.151877,-7.319519,1.121137,-5.867012,6.458136,-9.434179,-6.098943,7.102153,0.811615,0.047447,-4.390292,7.696940,-5.777664,-8.302276,-2.107101,-5.996315,0.821638,3.822717,8.001433,3.686258,-9.537528,1.948805,2.466836,-9.523763,-5.132286,-8.152250,8.091968,-1.783652,-6.526835,8.922695,-8.636058,3.819135,-2.426632,8.028220,-4.907793,-2.833943,-8.835761,-8.602175,-1.922408,-7.791328,-3.048037,-0.610346,-5.178936,4.780603,2.065415,-5.226726,-8.906531,8.255780,-0.686496,-6.017214,-1.722106,5.141804,-8.174295,-7.110018,-8.139978,-1.488622,7.240684,-6.428144,5.827141,-9.025977,-2.452024,2.598995,-6.228439,7.317447,6.198781,-7.710625,8.462603,-9.919305,3.991765,-4.545775,7.068293,-6.898138,5.004450,9.767792,-7.810995,3.382528,-9.022550,0.984362,-8.684132,8.645403,-4.924470,8.823414,-5.674452,6.868028,-5.261001,0.715341,-8.197994,-4.162675,0.887729,1.668973,-7.659815,-6.520209,7.471783,9.967112,7.319294,8.474678,-1.981064,0.391469,-2.892945,-4.027285,-7.546899,-9.668628,7.412537,7.241190,-9.230664,-5.413669,6.138278,7.827018,-7.013424,-8.644763,-2.475131,1.368307,-5.760236,9.308871,-3.363437,9.169380,2.020966,1.747703,4.544932,0.088757,7.124719,-3.926562,5.554034,5.455865,-0.231737,7.685120,2.074410,-7.632208,3.866160,-4.418510,9.615306,-3.924429,-3.731866,-9.388394,-7.288058,1.999647,6.906021,3.553563,-5.679681,4.137419,-6.910714,3.449445,6.373837,-3.930776,8.847257,-3.343639,-0.161454,2.665928,9.134513,-6.492695,-0.936415,8.282453,2.443777,-6.447324,-2.811635,9.176800,-7.278788,-1.012335,-3.802306,-7.984989,-1.431776,-6.940487,2.185102,2.861966,2.663281,4.578414,2.630270,-0.678542,9.128310,-8.212561,-1.343833,-1.833845,-9.473323,-6.700146,5.682120,-5.842441,-0.927026,2.734946,9.157180,-6.799341,-7.162239,-2.312188,-9.216682,3.622777,3.212801,3.564154,7.942434,-2.556011,8.112175,-0.260026,6.006300,-7.506853,0.376119,2.248253,-7.499630,-0.115413,0.620853,-6.996964,0.895287,1.456946,-1.944000,-1.754087,9.203849,3.258078,5.317514,8.240843,7.830857,-3.311290,0.316834,5.268182,8.876772,7.921647,-6.283965,3.159402,6.794248,-7.242169,1.676425,0.552168,4.784844,3.496444,-7.876454,3.475668,-8.337110,-8.242354,0.725358,2.227892,5.654106,-6.159111,9.205427,7.889698,-0.871180,-8.787450,-2.984189,-2.518316,-1.933798,4.050653,8.089496,-6.423404,-8.802811,5.596918,-6.951402,4.478453,5.743152,4.713441,6.699111,0.732950,-6.983932,1.068191,3.278022,-0.138246,-0.349073,-1.229084,-2.155141,4.185591,-6.837201,0.084174,-3.404746,-0.284310,-8.738798,-7.951200,3.163841,0.417395,0.855573,-2.235761,9.151179,-8.295714,-6.800947,3.607458,-0.286857,-5.413384,0.994222,3.752120,-9.755598,-0.981110,-1.035527,-3.336470,-9.514299,3.957162,-9.355303,7.117808,8.722349,0.889917,-4.086094,-9.049800,-2.095170,5.584819,-6.875444,6.521117,7.335932,8.448028,-5.791454,4.207255,-2.100257,-6.821044,-5.242529,-6.656574,6.078509,-9.840168,-0.520152,-5.836610,3.513026,-8.959202,3.178139,-1.760295,8.675410,-4.818812,5.692874,3.904528,-0.900244,-8.821012,1.935902,-5.433149,3.539481,-2.673556,-8.714238,-0.746855,2.901662,7.936851,-8.025502,6.235240,-6.189827,3.867059,4.579390,1.878756,-7.384649,-6.527403,-6.707892,-8.104958,1.567642,7.109281,-4.597165,3.541995,-4.856164,-3.912819,-4.569532,5.992500,2.598127,-9.483681,2.575723,-7.040080,-3.518913,0.418993,-9.792256,-8.188512,-7.875896,7.401121,2.922137,-1.382261,4.166217,-7.388382,-8.011355,-9.941693,-8.450114,-1.497509,-6.818521,1.206069,-1.766933,7.657235,-5.948073,-7.265438,1.439101,3.312955,3.114897,8.468051,-1.010955,-9.648715,6.040656,-1.975519,-2.823877,2.218302,-7.182864,8.714822,8.390484,4.087160,-7.581090,-6.742909,9.236226,-0.876218,-0.383654,9.844077,1.339805,8.460199,0.753557,-6.351199,0.384470,-3.981372,-5.205852,-3.023420,7.231851,1.584241,7.987262,3.483063,-6.367993,1.964111,2.995401,0.398206,4.325294,0.704285,9.771164,-7.194044,7.509400,-2.106929,-8.035552,4.528074,-6.293766,4.057916,3.483883,-8.456248,-8.479004,-0.174936,-1.691543,-6.825369,-9.419523,-9.848554,2.545235,-4.989416,-2.521668,-0.642664,9.555539,-6.275199,-4.753320,-8.014166,-4.374738,1.369849,-3.753662,7.086957,-6.086199,-4.052321,7.460271,-5.471199,2.541397,-3.328555,5.613512,-0.739521,-8.071536,-0.205608,-5.195028,-9.880819,1.255667,9.166944,7.403808,-5.828154,-1.466402,2.046578,-5.499254,-4.027059,-8.965143,3.553554,1.722726,8.313120,-8.332295,6.590852,-5.373313,1.722266,2.953218,7.743865,1.486246,-4.911752,5.772943,-1.408105,2.179816,8.200020,9.033489,0.775266,3.650571,-6.506224,-7.923426,-0.316357,-1.818595,-7.489605,7.666599,-8.801961,-3.611573,-2.477969,-3.570404,0.721914,-9.152128,-1.093099,5.729661,-2.165968,-6.225676,-1.500695,-8.679521,4.128898,-5.090224,2.976585,2.230915,9.090158,-6.804707,5.383713,-0.742585,1.452259,-6.469131,-6.280326,0.657321,-1.573619,7.345762,0.971337,2.956754,-4.242871,-4.240501,9.132529,-5.399025,1.057835,0.083166,4.823558,9.699077,-7.088660,-6.265807,7.931132,3.627116,0.695898,-6.677811,6.106983,0.137574,-7.780091,1.436231,-3.546367,-5.488288,-4.776449,-8.016140,7.075778,-1.702033,9.416584,-5.935795,5.981162,-1.611365,-3.423987,7.881413,8.552788,-0.282322,-4.546566,1.641703,3.308551,7.276011,6.035825,7.165047,9.584619,-8.666551,6.230497,-6.641038,0.031572,2.973933,1.346612,7.018764,-1.031161,-3.536241,1.111813,2.043134,0.979715,-6.938338,-5.383558,7.908481,-9.552627,6.263124,-6.513615,-7.927187,-4.027612,-6.577466,-5.356514,-6.339654,2.858216,6.347860,5.933935,2.632632,3.756361,3.842559,1.694189,-3.138232,7.312748,1.931798,7.681611,7.526319,-9.974823,0.835371,5.332694,3.378410,1.045384,5.192618,7.924808,8.081138,-4.623864,-2.751692,-1.737311,2.281417,-5.998073,5.412645,-3.806908,-4.177895,-6.347466,5.004475,5.894351,-7.552488,-0.054575,4.866141,-2.415198,-6.101525,-5.504602,9.222050,3.088357,-9.942275,4.391024,5.671080,-2.767770,-8.220256,-3.727677,-0.476565,-8.479403,-0.201227,-9.944730,-1.785631,-5.724821,0.982978,-5.033105,1.701715,-0.139947,6.842092,-8.392291,8.026580,-6.954841,5.727732,-1.592705,5.226766,1.191278,4.577557,1.563603,-7.982091,-2.275680,-7.100450,-8.206608,6.436393,6.142072,0.254798,9.200877,-4.758935,-6.578292,-3.602294,4.212237,-9.971061,8.890606,-4.595917,9.531780,2.180738,1.179023,-2.465781,8.268283,-3.502845,5.043878,-6.224225,-3.986664,-0.808829,1.703899,7.850173,-9.798189,9.665687,8.910831,4.555863,-6.128050,0.244834,-0.182732,-1.355624,0.592950,2.099466,-5.131740,9.702490,-7.936004,3.079683,3.196230,6.742962,-1.710935,5.349052,-5.765010,6.491321,8.912299,-8.581618,-0.830410,-8.982932,2.785845,-7.005897,2.096695,0.443046,-4.117520,2.600902,2.004053,7.227192,0.161247,-9.651135,0.711328,4.960166,-9.017311,4.720917,-9.263890,-4.872032,9.250166,8.382082,-6.072981,-3.426195,8.735859,-3.366356,-5.682233,7.854755,1.885249,-5.637191,6.911792,4.419790,0.382390,-3.528121,-3.553571,-2.298303,-4.058397,8.341755,-8.469581,7.177148,8.513530,-0.301606,6.488505,-3.681970,5.285907,-2.583859,-1.957907,-3.845750,-5.346511,3.373017,0.546435,-4.494585,0.227325,3.146501,6.471599,3.704792,-6.379178,9.319554,0.397319,-7.271726,-1.864949,1.084041,3.961696,-6.439452,1.038231,-9.229679,0.007344,-9.070975,-2.424393,-4.852801,-3.220343,2.673336,-7.589073,-0.135838,-4.175651,-5.821500,9.029074,3.322274,-8.550801,-2.676913,0.140921,-2.261335,4.309344,5.862015,-6.781052,-4.142348,7.120385,-6.377076,-5.256235,-3.484867,2.347912,4.899905,-6.016665,7.170685,-7.296882,-3.256847,6.333747,7.390944,7.437714,-4.943643,-5.885779,-2.360779,-3.541996,4.772147,-0.853428,8.134830,0.169717,-6.312903,8.818932,-5.996520,-7.276670,5.365702,0.926913,-6.654029,6.541746,2.064755,5.255198,-8.670943,-6.962709,-6.848131,2.375326,-6.675119,-7.872551,-1.984360,0.375789,-2.126557,-9.325737,7.919107,-3.192376,-0.664138,-7.212260,1.336516,-7.614183,-8.540777,-9.235377,6.617145,-2.911366,-2.820034,-4.167524,3.580146,4.646865,8.951368,7.705983,8.504687,9.274737,-4.736479,7.457688,7.843390,8.586709,-3.051320,0.877362,9.160414,-1.006082,-3.791958,-2.898289,-2.676321,9.843393,8.919848,-4.678582,-1.762584,1.489358,7.970116,8.707377,-0.633491,-9.063620,-7.820757,-8.230445,-2.105832,4.157102,6.051529,-5.609722,7.077802,-6.985900,-5.251406,4.590071,-8.477014,7.816798,-0.202025,-1.512169,0.317128,6.811074,-6.562200,4.971477,-0.349962,-5.429143,1.693426,8.683049,-7.312983,7.888618,-1.890498,-1.190120,2.398375,4.961635,-6.058045,-4.050180,-7.136473,9.946784,0.872903,5.513434,3.086735,-6.365696,-3.580436,5.365248,7.381549,-2.915182,1.589842,-1.055101,-9.832469,-5.403306,2.699658,4.002104,7.746845,6.515978,9.121728,-8.927134,-3.861180,3.991867,2.511742,8.016822,-7.858223,-4.549975,-6.027914,-3.096824,-0.601275,3.561805,-4.628423,-5.672028,6.584742,-5.950258,-5.138674,8.892975,2.939192,-3.285630,1.424229,6.846834,9.747965,-0.045139,-7.087076,-3.720956,6.644621,4.207358,-4.399852,1.171156,5.828227,8.142987,6.128990,-0.948534,1.636775,6.379550,-7.465996,-2.091499,-0.111679,-2.404548,-8.452615,-5.910250,-6.904410,8.215715,7.057822,4.457472,-7.142153,-4.670484,4.407021,9.373656,6.558716,-0.286107,6.592415,2.854033,1.600987,5.043951,2.046817,5.429877,7.876994,-9.635026,-9.100704,2.444160,-8.440948,-2.696078,-0.981344,4.296780,-9.059976,5.667575,-6.672295,1.476416,-1.247546,5.434487,-5.818249,-3.621537,4.235504,-2.356612,-8.664223,7.670633,-3.621771], dtype = "float32")#candidate|5740|(1980,)|const|float32
call_5739 = relay.TupleGetItem(func_2167_call(relay.reshape(const_5740.astype('float32'), [11, 12, 15])), 2)
call_5741 = relay.TupleGetItem(func_2170_call(relay.reshape(const_5740.astype('float32'), [11, 12, 15])), 2)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_5748 = relay.TupleGetItem(func_3166_call(), 0)
call_5749 = relay.TupleGetItem(func_3167_call(), 0)
output = relay.Tuple([call_5730,call_5739,const_5740,call_5748,])
output2 = relay.Tuple([call_5731,call_5741,const_5740,call_5749,])
func_5750 = relay.Function([], output)
mod['func_5750'] = func_5750
mod = relay.transform.InferType()(mod)
output = func_5750()
func_5751 = relay.Function([], output)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5750_call = mod.get_global_var('func_5750')
func_5751_call = mutated_mod.get_global_var('func_5751')
call_5771 = relay.TupleGetItem(func_5750_call(), 1)
call_5772 = relay.TupleGetItem(func_5751_call(), 1)
var_5776 = relay.var("var_5776", dtype = "uint32", shape = (162, 4))#candidate|5776|(162, 4)|var|uint32
bop_5777 = relay.floor_mod(call_5771.astype('float32'), relay.reshape(var_5776.astype('float32'), relay.shape_of(call_5771))) # shape=(162, 4)
bop_5780 = relay.floor_mod(call_5772.astype('float32'), relay.reshape(var_5776.astype('float32'), relay.shape_of(call_5772))) # shape=(162, 4)
output = bop_5777
output2 = bop_5780
func_5782 = relay.Function([var_5776,], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
var_5783 = relay.var("var_5783", dtype = "uint32", shape = (162, 4))#candidate|5783|(162, 4)|var|uint32
output = func_5782(var_5783)
func_5784 = relay.Function([var_5783], output)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5811 = relay.const([[[-6.493344,3.641509,-5.396413,-0.661005,7.118061,5.924054,-7.285981,5.600012,6.636648,-9.648930],[-5.930417,-7.720314,-4.931503,-7.889208,8.759127,-1.580056,0.701893,-3.952898,-2.207672,-1.392633],[-7.638070,-9.139615,-4.698033,-2.682399,7.981389,-6.805594,6.838532,6.409460,7.794584,-1.522452],[1.349058,-6.686479,-2.704406,8.857696,1.980593,-8.999467,6.036320,-4.499630,9.260847,9.025681],[-0.466635,-4.366750,2.949277,8.017510,0.981388,9.925620,-9.430510,-5.513723,-5.894942,-9.752216],[9.499336,0.904344,0.879786,-5.840368,-7.837251,3.146565,2.979061,-1.344242,4.532832,2.315583],[2.687572,-8.659899,-1.827661,-0.632761,-7.208971,7.141453,-2.273864,-5.282235,-2.249208,-4.508179],[3.994774,8.902317,6.591573,0.100980,-8.361563,-6.764061,0.998046,3.196723,7.618285,-4.032105],[-9.457528,4.156497,-6.855346,-5.365896,4.617154,-4.984760,9.210979,2.082098,0.024224,5.809957],[-4.509556,-7.359585,-7.027587,0.588526,4.378688,7.135963,1.394127,-0.963287,2.640212,8.523642],[7.254169,1.858905,8.100265,-9.633044,0.451722,-0.547574,1.695551,2.117845,1.029428,3.877968],[-4.139162,-7.142255,5.394925,4.543778,-6.458334,8.956323,-2.476019,-6.673091,-9.639642,7.723596]],[[-8.903678,4.452151,-8.869177,-3.420263,8.897623,-5.302869,-5.757040,-8.661239,-4.547704,-9.352308],[-1.466592,-7.231772,-2.059027,-7.474107,1.950621,-9.803123,-5.019619,4.339962,-1.428041,-4.579730],[8.036862,5.067950,5.046087,-5.995755,-9.074605,-2.083733,-7.489463,2.647567,4.723103,0.662131],[8.353090,2.621343,2.222699,-4.975082,-3.857091,-2.984452,-5.157013,1.844557,1.541733,1.297551],[8.456859,-1.151093,-5.963820,-5.831581,6.099882,0.336688,-5.813051,-5.709865,8.291427,9.919330],[2.723772,-9.846838,-9.754588,-0.506296,3.956389,8.877138,0.776381,-3.358216,7.588155,-6.285263],[9.211462,-2.566204,-3.318343,1.863874,0.480513,4.391780,-4.202900,-1.060551,6.044616,-3.414839],[-5.827733,8.586914,8.494276,-0.757340,5.718862,-9.686379,-0.554845,-7.178651,0.875057,-9.467591],[-4.561464,-7.710871,4.922261,4.557786,0.582949,7.847833,4.125016,3.851670,1.145687,-4.386925],[-3.535418,5.697554,2.861383,2.607829,6.402828,8.011633,5.883432,6.876789,7.008231,-5.781504],[-9.440646,-5.479572,-3.993183,4.312164,6.456348,-9.358813,-9.807778,-9.032478,0.789003,-3.164254],[-6.017461,1.757874,6.924725,-4.925649,7.536431,5.930328,1.635163,-4.018033,-2.363754,9.641489]]], dtype = "float64")#candidate|5811|(2, 12, 10)|const|float64
uop_5812 = relay.tan(const_5811.astype('float64')) # shape=(2, 12, 10)
uop_5826 = relay.sinh(const_5811.astype('float64')) # shape=(2, 12, 10)
bop_5829 = relay.mod(uop_5826.astype('float32'), relay.reshape(const_5811.astype('float32'), relay.shape_of(uop_5826))) # shape=(2, 12, 10)
output = relay.Tuple([uop_5812,bop_5829,])
output2 = relay.Tuple([uop_5812,bop_5829,])
func_5845 = relay.Function([], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5846 = func_5845_call()
output = call_5846
func_5847 = relay.Function([], output)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5003_call = mod.get_global_var('func_5003')
func_5004_call = mutated_mod.get_global_var('func_5004')
call_5853 = relay.TupleGetItem(func_5003_call(), 0)
call_5854 = relay.TupleGetItem(func_5004_call(), 0)
var_5866 = relay.var("var_5866", dtype = "float32", shape = (11, 4, 11))#candidate|5866|(11, 4, 11)|var|float32
bop_5867 = relay.multiply(call_5853.astype('float64'), relay.reshape(var_5866.astype('float64'), relay.shape_of(call_5853))) # shape=(11, 4, 11)
bop_5870 = relay.multiply(call_5854.astype('float64'), relay.reshape(var_5866.astype('float64'), relay.shape_of(call_5854))) # shape=(11, 4, 11)
output = bop_5867
output2 = bop_5870
func_5890 = relay.Function([var_5866,], output)
mod['func_5890'] = func_5890
mod = relay.transform.InferType()(mod)
var_5891 = relay.var("var_5891", dtype = "float32", shape = (11, 4, 11))#candidate|5891|(11, 4, 11)|var|float32
output = func_5890(var_5891)
func_5892 = relay.Function([var_5891], output)
mutated_mod['func_5892'] = func_5892
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5922 = relay.const([[3.101174,-0.266508,-3.215775,-7.051240],[-2.092911,-2.538511,3.337167,-4.392721],[5.092405,4.819084,7.966670,8.002428],[4.093649,-4.648179,-3.129460,7.432251],[-7.192972,3.665012,-8.342613,-6.146769]], dtype = "float64")#candidate|5922|(5, 4)|const|float64
uop_5923 = relay.log2(const_5922.astype('float64')) # shape=(5, 4)
func_5723_call = mod.get_global_var('func_5723')
func_5726_call = mutated_mod.get_global_var('func_5726')
const_5930 = relay.const([[2,-4,8,5,-5,-8,6,-7,2,8,10,4,-5,9,-4,3,-10,1,4,-2,6,7,9,-7,-10,8,-2,-10,-3,2,-9,3,1,-7,-3,5,8,-1,8,8,2,7,-8,10,-9,-1,7,-8,-10,-7,-4,2,6,7,-1,5,-10,-9,1,-10,-4,-1,-6,1,-3,-9,-3,-7,4,5,10,9,4,10,9,-8,-10,-6,-5,2,-5,5,2,9,7,-9,5,8,-8,-3,-8,-10,9,5,-2,3,10,7,9,5,-9,-4,-4,2,-9,-9,-7,5,4,1,9,-3,-2,-10,-6,9,-1,8,3,9,4,-1,6,6,-8,-6,-2,7,-9,7,1,-1,-6,8,-8,5,5,-4,2,3,-8,10,-7,-4,-3,2,-4,6,1,-3,-3,10,2,10,-5,-5,-9,-2,1,3,-8,10,7,4,-2,-6,3,2,1,1,-5,10,3,-10,-2,10,9,2,8,5,-2,6,10,-3,1,8,10,10,4,8,5,3,-2,2,-10,-1,-2,10,-4,-5,-4,-9,-3,-10,10,-2,-7,-9,-2,8,-1,-6,5,-7,8,-4,-6,-1,-1,-7,-8,-6,-6,6,7,9,3,3,3,7,-1,-8,-3,6,-7,-6,2,1,-8,-5,3,5,1,-3,7,10,10,-6,4,-8,-5,-5,6,-6,-5,9,6,3,3,4,8,9,1,-1,-7,5,3,10,7,6,-8,-9,1,4,8,2,-1,3,6,6,-5,5,10,-1,-3,9,2,-6,10,4,7,3,9,-1,-4,-6,5,-10,7,1,6,1,-8,8,-6,-3,10,-10,-5,-2,7,9,1,8,9,-10,-9,-3,-8,2,-3,7,-4,2,10,-8,6,-1,-7,5,-6,2,-5,-2,-6,-7,1,4,-2,5,-2,9,2,-5,6,-6,-4,-10,3,-2,-8,8,4,5,8,-8,-2,-8,-4,3,2,4,10,-7,-8,10,9,-5,9,8,9,8,2,6,-1,-8,10,9,8,1,-6,-3,-8,-7,-10,6,3,-3,-2,-1,-7,5,10,7,1,-5,-10,1,1,-7,-5,10,-9,-10,-1,-3,9,8,-2,-9,-5,-10,-5,5,9,6,-4,-9,-1,-3,10,-3,-4,10,7,8,4,-7,7,6,3,-9,2,2,-8,8,-3,-9,-3,10,8,2,-6,-2,8,-8,-4,9,-6,1,-6,-2,-1,3,-1,6,2,1,6,10,3,-6,-4,3,4,4,5,8,-8,-2,7,-6,5,-7,-3,4,5,-3,4,9,-1,9,-8,2,9,4,-1,5,10,-6,10,-8,-1,-4,-8,5,5,-5,-1,8,2,-6,-2,8],[6,2,-7,9,-3,5,7,3,1,2,7,-4,1,4,2,5,8,-1,10,-3,4,-4,-7,10,7,2,3,-4,5,-8,-10,2,-10,4,-7,-3,-4,-2,6,-1,-8,-6,6,-5,-6,7,-4,5,-3,4,-8,1,-5,-5,8,3,-8,7,7,-6,-5,-10,-1,2,5,-6,-6,7,3,-4,9,-7,4,-2,7,3,-8,-10,-9,-4,2,-9,8,-2,9,2,-1,4,6,-8,3,-5,-4,1,1,10,-7,4,5,8,1,-2,2,2,2,-1,1,6,-2,1,-4,9,-7,1,-8,-6,1,-5,-3,-1,5,2,7,-1,6,-4,-2,4,-5,-1,-3,6,-4,7,6,-4,9,6,5,4,-1,4,1,-5,2,-3,-5,-1,8,8,-5,2,8,9,-7,-7,-3,-4,-8,5,6,-6,-5,-2,2,-4,4,-2,-5,-8,-6,-3,-5,-7,7,-2,10,-6,3,-7,-9,4,8,-6,9,-7,8,-5,-8,-7,-4,8,6,-6,-1,6,3,-3,-7,6,-4,2,7,-6,-10,10,1,6,1,8,7,3,-5,-3,-7,10,-5,5,10,9,-6,1,-6,-5,-3,10,-7,9,1,-6,-2,10,-1,-1,8,-8,-8,2,-8,-10,1,8,-5,2,3,-4,6,-4,9,-5,-5,1,-4,7,1,-2,9,10,8,-10,10,6,8,-5,7,-5,-5,-8,-1,-10,4,3,-1,-9,-5,-2,5,-2,-9,-3,7,1,-6,10,3,8,-1,1,3,2,1,2,-1,-2,-1,7,2,-1,-4,-4,2,-4,-2,-6,-7,3,-10,5,-9,-2,-1,-10,6,1,-4,-8,-6,9,7,5,4,3,4,7,-6,-6,9,-2,-7,8,-8,6,-9,6,-2,10,-10,2,-1,-7,-10,-6,7,8,10,5,-10,-6,8,5,-2,6,7,5,-6,9,-5,7,-2,6,-10,-4,4,1,1,-3,-10,6,-8,-9,5,-2,-2,2,5,8,9,-8,-1,4,-5,-8,6,6,6,10,-3,10,3,-9,-10,-4,10,-3,-2,-4,5,-4,7,7,-5,-5,-9,-4,-6,1,-10,8,-8,1,-9,-9,-9,9,2,9,3,8,8,-4,-4,2,-1,-2,-1,-1,9,9,2,4,-4,-3,-5,-10,-2,-7,1,-8,10,-3,6,3,3,-3,-10,9,10,-2,3,-7,-8,1,4,2,-1,4,1,3,9,-7,5,-2,7,9,6,5,2,3,-7,-9,4,-8,-3,8,-8,-3,-2,9,1,-1,6,2,2,-4,-4,9,-10,-2,-7,5,5,10,4,-7,7,-3,4,1,-3,-6,9,3,-2,2]], dtype = "uint64")#candidate|5930|(2, 504)|const|uint64
call_5929 = relay.TupleGetItem(func_5723_call(relay.reshape(const_5930.astype('uint64'), [1008,])), 1)
call_5931 = relay.TupleGetItem(func_5726_call(relay.reshape(const_5930.astype('uint64'), [1008,])), 1)
output = relay.Tuple([uop_5923,call_5929,const_5930,])
output2 = relay.Tuple([uop_5923,call_5931,const_5930,])
func_5935 = relay.Function([], output)
mod['func_5935'] = func_5935
mod = relay.transform.InferType()(mod)
output = func_5935()
func_5936 = relay.Function([], output)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_5957 = relay.TupleGetItem(func_3540_call(), 1)
call_5958 = relay.TupleGetItem(func_3542_call(), 1)
func_2429_call = mod.get_global_var('func_2429')
func_2433_call = mutated_mod.get_global_var('func_2433')
const_5961 = relay.const([False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True], dtype = "bool")#candidate|5961|(40,)|const|bool
call_5960 = relay.TupleGetItem(func_2429_call(relay.reshape(const_5961.astype('bool'), [10, 4]), relay.reshape(const_5961.astype('bool'), [10, 4]), ), 1)
call_5962 = relay.TupleGetItem(func_2433_call(relay.reshape(const_5961.astype('bool'), [10, 4]), relay.reshape(const_5961.astype('bool'), [10, 4]), ), 1)
output = relay.Tuple([call_5957,call_5960,const_5961,])
output2 = relay.Tuple([call_5958,call_5962,const_5961,])
func_5963 = relay.Function([], output)
mod['func_5963'] = func_5963
mod = relay.transform.InferType()(mod)
output = func_5963()
func_5964 = relay.Function([], output)
mutated_mod['func_5964'] = func_5964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_6167 = relay.TupleGetItem(func_3540_call(), 0)
call_6168 = relay.TupleGetItem(func_3542_call(), 0)
output = relay.Tuple([call_6167,])
output2 = relay.Tuple([call_6168,])
func_6182 = relay.Function([], output)
mod['func_6182'] = func_6182
mod = relay.transform.InferType()(mod)
output = func_6182()
func_6183 = relay.Function([], output)
mutated_mod['func_6183'] = func_6183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_6230 = relay.TupleGetItem(func_3820_call(), 0)
call_6231 = relay.TupleGetItem(func_3822_call(), 0)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_6235 = relay.TupleGetItem(func_3637_call(), 1)
call_6236 = relay.TupleGetItem(func_3638_call(), 1)
output = relay.Tuple([call_6230,call_6235,])
output2 = relay.Tuple([call_6231,call_6236,])
func_6253 = relay.Function([], output)
mod['func_6253'] = func_6253
mod = relay.transform.InferType()(mod)
output = func_6253()
func_6254 = relay.Function([], output)
mutated_mod['func_6254'] = func_6254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_6257 = relay.TupleGetItem(func_5028_call(), 0)
call_6258 = relay.TupleGetItem(func_5029_call(), 0)
func_5723_call = mod.get_global_var('func_5723')
func_5726_call = mutated_mod.get_global_var('func_5726')
var_6260 = relay.var("var_6260", dtype = "uint64", shape = (1008,))#candidate|6260|(1008,)|var|uint64
call_6259 = relay.TupleGetItem(func_5723_call(relay.reshape(var_6260.astype('uint64'), [1008,])), 1)
call_6261 = relay.TupleGetItem(func_5726_call(relay.reshape(var_6260.astype('uint64'), [1008,])), 1)
output = relay.Tuple([call_6257,call_6259,var_6260,])
output2 = relay.Tuple([call_6258,call_6261,var_6260,])
func_6265 = relay.Function([var_6260,], output)
mod['func_6265'] = func_6265
mod = relay.transform.InferType()(mod)
mutated_mod['func_6265'] = func_6265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6266 = relay.var("var_6266", dtype = "uint64", shape = (1008,))#candidate|6266|(1008,)|var|uint64
func_6265_call = mutated_mod.get_global_var('func_6265')
call_6267 = func_6265_call(var_6266)
output = call_6267
func_6268 = relay.Function([var_6266], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6285 = relay.var("var_6285", dtype = "bool", shape = (16, 11, 7))#candidate|6285|(16, 11, 7)|var|bool
var_6286 = relay.var("var_6286", dtype = "bool", shape = (16, 11, 7))#candidate|6286|(16, 11, 7)|var|bool
bop_6287 = relay.logical_or(var_6285.astype('bool'), relay.reshape(var_6286.astype('bool'), relay.shape_of(var_6285))) # shape=(16, 11, 7)
uop_6291 = relay.cos(bop_6287.astype('float64')) # shape=(16, 11, 7)
uop_6307 = relay.log10(var_6286.astype('float64')) # shape=(16, 11, 7)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
var_6315 = relay.var("var_6315", dtype = "bool", shape = (484,))#candidate|6315|(484,)|var|bool
call_6314 = relay.TupleGetItem(func_3753_call(relay.reshape(var_6315.astype('bool'), [11, 4, 11])), 0)
call_6316 = relay.TupleGetItem(func_3755_call(relay.reshape(var_6315.astype('bool'), [11, 4, 11])), 0)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_6317 = relay.TupleGetItem(func_3820_call(), 0)
call_6318 = relay.TupleGetItem(func_3822_call(), 0)
output = relay.Tuple([uop_6291,uop_6307,call_6314,var_6315,call_6317,])
output2 = relay.Tuple([uop_6291,uop_6307,call_6316,var_6315,call_6318,])
func_6321 = relay.Function([var_6285,var_6286,var_6315,], output)
mod['func_6321'] = func_6321
mod = relay.transform.InferType()(mod)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mutated_mod.get_global_var('func_6321')
var_6323 = relay.var("var_6323", dtype = "bool", shape = (16, 11, 7))#candidate|6323|(16, 11, 7)|var|bool
var_6324 = relay.var("var_6324", dtype = "bool", shape = (16, 11, 7))#candidate|6324|(16, 11, 7)|var|bool
var_6325 = relay.var("var_6325", dtype = "bool", shape = (484,))#candidate|6325|(484,)|var|bool
call_6322 = func_6321_call(var_6323,var_6324,var_6325,)
output = call_6322
func_6326 = relay.Function([var_6323,var_6324,var_6325,], output)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6375 = relay.const([[[-7.064667,-8.577442,9.444787],[9.119218,8.527839,1.277605],[-0.768101,5.608038,-5.992140],[-5.773993,9.736888,0.445046],[7.559658,9.318366,0.887654],[3.921372,5.597843,-3.777246],[-5.239026,-9.670016,0.555839],[7.785905,4.448686,-8.202237],[7.996869,5.315583,9.744990]],[[5.992768,4.206834,-6.444760],[0.470755,3.358822,3.981721],[3.517389,5.859183,0.689114],[-2.135879,-2.206302,3.124085],[8.603875,3.404380,-2.450707],[5.559050,9.737627,-4.054127],[-7.270292,-6.311370,-0.538596],[4.388253,3.740085,-1.027942],[9.323653,8.210112,-5.165681]],[[1.493076,6.106890,-3.433880],[8.541417,9.826202,-8.891450],[-6.186609,-3.828793,-4.835893],[-4.928949,-1.255946,0.417958],[-2.915903,6.237384,-2.673905],[6.409374,7.746090,3.787048],[-7.697013,-4.025709,6.108178],[1.379917,6.745578,-6.729316],[-4.530659,5.815027,-5.420740]],[[1.543707,-8.179673,4.274853],[-7.228538,-4.392028,8.922463],[6.971901,-5.952817,-6.516138],[0.833958,-0.971825,5.382424],[-6.055318,6.264365,-5.792397],[-1.943708,6.744462,9.567777],[-7.684040,7.750014,9.738608],[-6.261455,-4.285706,-2.025465],[-3.178688,-9.264916,-8.966749]],[[-4.835511,8.197934,3.119125],[2.893640,-1.524144,-7.042343],[0.752861,7.415078,2.448029],[-6.817791,-6.905927,-0.389973],[6.831852,-5.811015,6.605284],[0.189342,0.789726,-9.095124],[-3.485756,6.101444,-6.191451],[-4.926721,-4.431775,-5.910241],[5.657818,1.271239,4.378856]],[[-7.364683,-4.327217,-9.434732],[-8.887678,0.819067,-1.804559],[-9.771634,-3.044783,1.799156],[6.908779,-8.349295,-6.073473],[4.721994,6.205037,8.541025],[-1.954784,6.141219,-5.153981],[3.597937,5.532379,-5.368415],[-3.407904,5.478726,-9.277939],[6.646546,-6.392607,6.718239]],[[-9.343218,-7.395070,7.967455],[-6.058826,-8.046718,3.151395],[2.805271,8.973720,4.505144],[-2.859158,-8.427140,-2.248706],[6.321404,-8.627740,-7.912370],[-5.144028,-9.652059,-0.744884],[-6.826075,8.238890,5.379663],[7.775645,3.079378,0.995490],[-2.025834,-4.962869,9.358862]]], dtype = "float64")#candidate|6375|(7, 9, 3)|const|float64
uop_6376 = relay.acos(const_6375.astype('float64')) # shape=(7, 9, 3)
func_1422_call = mod.get_global_var('func_1422')
func_1424_call = mutated_mod.get_global_var('func_1424')
var_6379 = relay.var("var_6379", dtype = "float64", shape = (20,))#candidate|6379|(20,)|var|float64
call_6378 = func_1422_call(relay.reshape(var_6379.astype('float64'), [10, 2, 1]))
call_6380 = func_1422_call(relay.reshape(var_6379.astype('float64'), [10, 2, 1]))
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_6387 = relay.TupleGetItem(func_3637_call(), 0)
call_6388 = relay.TupleGetItem(func_3638_call(), 0)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_6389 = relay.TupleGetItem(func_5028_call(), 0)
call_6390 = relay.TupleGetItem(func_5029_call(), 0)
output = relay.Tuple([uop_6376,call_6378,var_6379,call_6387,call_6389,])
output2 = relay.Tuple([uop_6376,call_6380,var_6379,call_6388,call_6390,])
func_6392 = relay.Function([var_6379,], output)
mod['func_6392'] = func_6392
mod = relay.transform.InferType()(mod)
mutated_mod['func_6392'] = func_6392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6393 = relay.var("var_6393", dtype = "float64", shape = (20,))#candidate|6393|(20,)|var|float64
func_6392_call = mutated_mod.get_global_var('func_6392')
call_6394 = func_6392_call(var_6393)
output = call_6394
func_6395 = relay.Function([var_6393], output)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_6402 = relay.TupleGetItem(func_4064_call(), 0)
call_6403 = relay.TupleGetItem(func_4066_call(), 0)
output = call_6402
output2 = call_6403
func_6428 = relay.Function([], output)
mod['func_6428'] = func_6428
mod = relay.transform.InferType()(mod)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6428_call = mutated_mod.get_global_var('func_6428')
call_6429 = func_6428_call()
output = call_6429
func_6430 = relay.Function([], output)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3683_call = mod.get_global_var('func_3683')
func_3684_call = mutated_mod.get_global_var('func_3684')
call_6493 = relay.TupleGetItem(func_3683_call(), 0)
call_6494 = relay.TupleGetItem(func_3684_call(), 0)
func_6321_call = mod.get_global_var('func_6321')
func_6326_call = mutated_mod.get_global_var('func_6326')
const_6501 = relay.const([False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True], dtype = "bool")#candidate|6501|(1232,)|const|bool
call_6500 = relay.TupleGetItem(func_6321_call(relay.reshape(const_6501.astype('bool'), [16, 11, 7]), relay.reshape(const_6501.astype('bool'), [16, 11, 7]), relay.reshape(call_6493.astype('bool'), [484,]), ), 3)
call_6502 = relay.TupleGetItem(func_6326_call(relay.reshape(const_6501.astype('bool'), [16, 11, 7]), relay.reshape(const_6501.astype('bool'), [16, 11, 7]), relay.reshape(call_6493.astype('bool'), [484,]), ), 3)
var_6504 = relay.var("var_6504", dtype = "bool", shape = (1232,))#candidate|6504|(1232,)|var|bool
bop_6505 = relay.logical_and(const_6501.astype('bool'), relay.reshape(var_6504.astype('bool'), relay.shape_of(const_6501))) # shape=(1232,)
output = relay.Tuple([call_6493,call_6500,bop_6505,])
output2 = relay.Tuple([call_6494,call_6502,bop_6505,])
func_6510 = relay.Function([var_6504,], output)
mod['func_6510'] = func_6510
mod = relay.transform.InferType()(mod)
var_6511 = relay.var("var_6511", dtype = "bool", shape = (1232,))#candidate|6511|(1232,)|var|bool
output = func_6510(var_6511)
func_6512 = relay.Function([var_6511], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5963_call = mod.get_global_var('func_5963')
func_5964_call = mutated_mod.get_global_var('func_5964')
call_6542 = relay.TupleGetItem(func_5963_call(), 2)
call_6543 = relay.TupleGetItem(func_5964_call(), 2)
const_6558 = relay.const([False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True], dtype = "bool")#candidate|6558|(40,)|const|bool
bop_6559 = relay.left_shift(call_6542.astype('int64'), relay.reshape(const_6558.astype('int64'), relay.shape_of(call_6542))) # shape=(40,)
bop_6562 = relay.left_shift(call_6543.astype('int64'), relay.reshape(const_6558.astype('int64'), relay.shape_of(call_6543))) # shape=(40,)
output = bop_6559
output2 = bop_6562
func_6574 = relay.Function([], output)
mod['func_6574'] = func_6574
mod = relay.transform.InferType()(mod)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6574_call = mutated_mod.get_global_var('func_6574')
call_6575 = func_6574_call()
output = call_6575
func_6576 = relay.Function([], output)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_6577 = relay.TupleGetItem(func_4277_call(), 0)
call_6578 = relay.TupleGetItem(func_4278_call(), 0)
output = call_6577
output2 = call_6578
func_6598 = relay.Function([], output)
mod['func_6598'] = func_6598
mod = relay.transform.InferType()(mod)
mutated_mod['func_6598'] = func_6598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6598_call = mutated_mod.get_global_var('func_6598')
call_6599 = func_6598_call()
output = call_6599
func_6600 = relay.Function([], output)
mutated_mod['func_6600'] = func_6600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_6639 = relay.TupleGetItem(func_3637_call(), 0)
call_6640 = relay.TupleGetItem(func_3638_call(), 0)
const_6641 = relay.const([[[9.032716,5.311324,-3.679840,-5.723028,0.560187,-8.652210,-0.442231,0.027016,-2.619398,-6.847586,3.297588],[-8.304859,-4.192675,-9.507736,-3.707422,-8.413126,-6.359116,0.084194,6.762141,4.028109,-3.978526,-5.283298],[1.628400,-0.725084,-2.958382,0.199652,-2.860550,4.342265,3.530552,9.176144,7.597410,5.212883,1.122811],[-8.356792,9.974212,9.637258,5.012121,-4.441398,7.778159,8.355787,4.537588,8.901880,-8.768150,-4.071771]],[[9.992666,4.006598,-7.379248,-0.493725,5.408942,-7.545976,-7.978631,7.062205,7.766599,7.979179,-9.720902],[-1.662215,7.462193,2.181525,-1.582431,7.994048,0.788510,-5.678331,-9.514690,-7.756259,6.255259,-3.194833],[-7.685050,-9.819198,2.181361,5.467384,-2.825430,2.139708,8.869920,8.636282,-9.407072,8.603883,5.779723],[0.522401,-8.195087,6.279225,-1.702154,-1.436945,8.372718,-3.543534,-2.062570,8.987510,-8.749295,-3.257421]],[[7.990195,4.278857,2.652010,-5.874611,1.270187,-9.158038,8.931377,9.365461,4.014408,-7.541087,-4.016606],[7.701076,-4.977550,6.315145,5.843167,3.395459,8.851752,-4.511206,6.563334,6.334931,3.102998,3.957040],[-4.912820,-2.286524,-1.899943,-5.187261,-8.719577,2.876147,-1.166869,9.013171,-7.500869,1.282753,1.959068],[-4.214806,-7.410975,5.799736,8.259320,-2.915907,-4.195044,8.768464,3.359295,5.605487,9.786340,1.430716]],[[-0.169084,0.808060,0.518503,-0.581038,3.102696,8.072868,5.819139,4.806615,3.893833,-0.518853,-3.257389],[-3.610645,5.520208,4.371977,-2.393790,7.564865,6.207666,-3.566413,2.647975,-8.491280,9.017495,-5.237540],[-9.718935,-3.758198,8.459102,3.976994,-1.484230,1.222663,-1.712215,8.180925,7.116879,5.548366,6.864785],[1.575869,-0.524949,1.065936,-3.807398,-7.244862,0.783927,-3.228851,2.628233,2.613373,-4.485098,-4.986646]],[[3.413448,5.391102,-9.288563,-1.105270,-2.377166,-6.707804,6.165945,2.141470,3.567884,-9.278437,-0.542103],[6.914543,8.114522,2.841661,0.466294,-9.241967,2.965120,-4.691522,-8.941436,-2.123658,-0.975455,4.559256],[-3.322935,4.870706,6.586814,6.295568,3.917323,3.261052,7.405298,-1.599353,-3.652198,3.624302,-7.940718],[3.956647,-7.470181,-5.270098,-5.649348,-9.856253,-3.973540,-5.253467,-0.993841,9.921904,-9.021488,-0.698619]],[[2.759672,2.365469,0.195268,-8.336455,-9.714482,-4.866721,8.684327,7.809005,-7.993157,-1.476730,-8.257134],[-8.364828,-0.840902,-9.270538,6.029470,-5.850722,9.683232,-8.785683,7.794315,-8.757515,1.454976,-4.251885],[5.285787,-1.009486,-2.627654,-5.636407,-6.953744,5.760060,-4.428008,0.296787,-7.230415,4.816583,9.444091],[-4.102802,-9.492270,-2.064354,0.931658,-2.113389,7.905973,-0.306957,8.166302,-9.045537,-6.800563,7.448300]],[[0.432876,-1.174202,-2.644575,3.064557,3.915536,-4.189930,-1.096753,9.038620,-2.589947,6.543993,9.399619],[3.329545,-1.929688,-0.586597,8.447114,-3.712797,-8.357907,-5.587505,-9.865580,3.341695,0.640017,5.822013],[-0.413510,5.572743,-0.093104,-3.321430,-6.075593,-2.026630,9.657905,4.916295,-1.254184,7.822622,-1.873701],[-3.970864,3.710198,4.166735,5.291243,0.537798,5.978171,-9.291768,3.814848,4.959733,-3.802936,-0.023329]],[[-9.407026,-8.901414,0.266129,-5.170072,1.945202,-6.702374,-1.893363,1.781297,-5.502783,6.928566,5.495702],[0.148619,7.613720,0.658016,1.688800,1.204621,8.679413,-8.727401,-6.925421,6.095415,2.781947,-2.598397],[0.906981,-2.163302,-3.224299,9.917934,6.282845,-9.695024,-0.981129,4.892526,-5.673774,1.453762,-2.094747],[-4.090542,-2.768980,4.249016,-5.499042,6.906755,3.409050,9.348321,-1.954150,-8.027127,-0.056658,-6.803759]],[[-7.640477,-4.286176,-7.233649,-1.353783,8.754433,3.998624,-3.272962,-1.221981,6.839720,-7.118745,6.251574],[-1.622507,1.415584,2.717299,-4.264274,-2.508171,9.828163,8.868873,-0.889041,8.530941,-6.070564,-6.604103],[5.694174,6.865557,-2.040360,0.080229,-1.602433,4.672536,-6.300057,9.612318,-2.852727,3.618883,-7.032261],[-4.544287,5.713964,-0.951774,-3.745140,-6.237396,0.254333,-2.984680,-3.819664,7.329851,-3.584136,-8.900529]],[[-8.720643,5.672284,6.497846,-7.797641,6.123392,-5.107623,-9.431959,-4.977263,5.782348,-1.428893,3.199996],[0.347277,5.570464,-5.760050,7.031160,-3.411148,-3.198501,0.059819,6.808863,2.874972,-7.485836,4.748128],[-4.706451,9.760648,-9.260939,4.089802,7.483149,5.208608,9.024641,-9.436631,-7.204800,-6.680541,-1.218038],[-7.845434,-4.710914,-9.718123,-6.762557,6.177964,5.689731,-4.276829,1.538286,8.982353,-1.646196,5.208410]],[[-0.651392,0.453183,-5.342588,3.960359,7.564846,-8.448477,2.959074,-3.967064,-4.689492,5.041033,-6.015289],[-7.768524,2.258162,-1.355636,-3.845417,7.363742,1.468242,-5.375110,7.424796,-0.405086,2.804095,-5.147515],[6.393108,-8.809744,-7.506938,-1.210514,-3.851149,-9.004872,-2.576135,6.496796,-8.818189,-2.501508,7.436676],[-1.654554,-8.321244,7.578009,6.453871,7.500244,-5.569454,3.296069,3.338530,-7.464055,-1.269127,6.679751]]], dtype = "float32")#candidate|6641|(11, 4, 11)|const|float32
bop_6642 = relay.greater(call_6639.astype('bool'), relay.reshape(const_6641.astype('bool'), relay.shape_of(call_6639))) # shape=(11, 4, 11)
bop_6645 = relay.greater(call_6640.astype('bool'), relay.reshape(const_6641.astype('bool'), relay.shape_of(call_6640))) # shape=(11, 4, 11)
func_6598_call = mod.get_global_var('func_6598')
func_6600_call = mutated_mod.get_global_var('func_6600')
call_6649 = func_6598_call()
call_6650 = func_6598_call()
bop_6661 = relay.mod(call_6649.astype('float64'), relay.reshape(const_6641.astype('float64'), relay.shape_of(call_6649))) # shape=(11, 4, 11)
bop_6664 = relay.mod(call_6650.astype('float64'), relay.reshape(const_6641.astype('float64'), relay.shape_of(call_6650))) # shape=(11, 4, 11)
output = relay.Tuple([bop_6642,bop_6661,])
output2 = relay.Tuple([bop_6645,bop_6664,])
func_6670 = relay.Function([], output)
mod['func_6670'] = func_6670
mod = relay.transform.InferType()(mod)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6670_call = mutated_mod.get_global_var('func_6670')
call_6671 = func_6670_call()
output = call_6671
func_6672 = relay.Function([], output)
mutated_mod['func_6672'] = func_6672
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6688 = relay.const([[[5.780789,-7.707476,-0.068641,-8.293846,-8.422080],[-0.822711,-7.171726,-7.934937,-4.548266,-6.768028],[1.500836,-5.643625,-0.071073,-3.313198,-0.238869],[0.927023,-7.196508,-0.621027,-7.290174,3.643067],[-1.204921,1.486694,-8.451779,-9.365225,-2.591878],[6.818237,-4.846763,1.268254,-1.418044,-5.557073]],[[4.019627,-3.692207,3.383843,2.754755,-2.074119],[8.984338,-6.909893,9.335460,-0.404043,3.287647],[-4.260080,-0.303132,-5.020230,6.932214,-7.490943],[-8.475844,8.353174,5.142585,5.524652,-8.914137],[4.498484,2.835874,-3.340002,-3.038604,-2.375641],[-3.304570,-6.145966,7.660592,-9.563445,-2.255973]],[[-1.494479,-0.748637,5.390618,1.867977,-4.590305],[-1.321347,4.454527,5.616292,-6.280836,-7.383988],[-3.308023,-2.042348,-4.229014,0.954023,-6.365702],[7.226567,-3.293002,3.361713,3.212364,4.221063],[-4.936826,-7.079451,2.009258,-1.536687,3.721389],[-5.793371,1.070081,8.919108,2.746338,-1.367472]],[[-6.689442,-4.420683,8.619247,-1.332966,-0.516485],[5.249601,-6.108118,-9.536685,6.956199,9.562888],[-4.986834,-4.012768,-8.014148,8.920835,4.278787],[-5.953721,3.783992,-6.448168,-5.380040,4.453476],[-6.692159,4.128778,-4.579472,-3.987934,-7.935366],[5.111771,-5.554733,-8.442523,5.376930,-7.230532]],[[8.835544,-3.014862,9.134695,-8.146819,2.536721],[2.001071,-3.816676,-2.739874,-3.341476,-5.333263],[1.202396,0.493082,-9.454019,-1.243243,3.294026],[-4.890230,7.875121,2.889322,2.482415,-6.419385],[-1.249188,8.630969,3.920626,3.709742,-0.886769],[-5.007632,6.984969,1.802986,-2.192133,6.113353]],[[-3.338375,-8.984860,-2.225291,0.891029,9.325377],[2.879855,6.941990,-3.548428,-1.537150,-2.355331],[-6.633732,-6.968699,7.115617,4.251001,-4.434081],[3.712644,-7.709742,-7.996906,-5.509744,-0.638748],[-3.098255,2.155650,-0.255267,-0.476694,6.936466],[-7.605787,6.583767,-0.525872,-4.370088,-2.148079]],[[-3.802335,-0.503651,-7.111396,-1.290476,-7.534055],[-6.444928,-6.478829,-0.702080,-8.548072,4.878320],[9.212197,6.293592,7.831244,3.431554,1.710143],[-6.343264,-0.032959,-3.608636,3.093239,1.860477],[6.517923,-9.636955,4.687678,5.869986,4.285359],[9.811540,-3.451298,-6.363451,-9.556799,2.160858]]], dtype = "float32")#candidate|6688|(7, 6, 5)|const|float32
uop_6689 = relay.asin(const_6688.astype('float32')) # shape=(7, 6, 5)
output = relay.Tuple([uop_6689,])
output2 = relay.Tuple([uop_6689,])
func_6703 = relay.Function([], output)
mod['func_6703'] = func_6703
mod = relay.transform.InferType()(mod)
output = func_6703()
func_6704 = relay.Function([], output)
mutated_mod['func_6704'] = func_6704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_6835 = relay.TupleGetItem(func_4174_call(), 0)
call_6836 = relay.TupleGetItem(func_4175_call(), 0)
output = relay.Tuple([call_6835,])
output2 = relay.Tuple([call_6836,])
func_6860 = relay.Function([], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mutated_mod.get_global_var('func_6860')
call_6861 = func_6860_call()
output = call_6861
func_6862 = relay.Function([], output)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6961 = relay.var("var_6961", dtype = "int16", shape = (11, 10, 16))#candidate|6961|(11, 10, 16)|var|int16
var_6962 = relay.var("var_6962", dtype = "int16", shape = (11, 10, 16))#candidate|6962|(11, 10, 16)|var|int16
bop_6963 = relay.left_shift(var_6961.astype('int16'), relay.reshape(var_6962.astype('int16'), relay.shape_of(var_6961))) # shape=(11, 10, 16)
output = bop_6963
output2 = bop_6963
func_6975 = relay.Function([var_6961,var_6962,], output)
mod['func_6975'] = func_6975
mod = relay.transform.InferType()(mod)
var_6976 = relay.var("var_6976", dtype = "int16", shape = (11, 10, 16))#candidate|6976|(11, 10, 16)|var|int16
var_6977 = relay.var("var_6977", dtype = "int16", shape = (11, 10, 16))#candidate|6977|(11, 10, 16)|var|int16
output = func_6975(var_6976,var_6977,)
func_6978 = relay.Function([var_6976,var_6977,], output)
mutated_mod['func_6978'] = func_6978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_6980 = relay.TupleGetItem(func_3820_call(), 0)
call_6981 = relay.TupleGetItem(func_3822_call(), 0)
output = call_6980
output2 = call_6981
func_7012 = relay.Function([], output)
mod['func_7012'] = func_7012
mod = relay.transform.InferType()(mod)
output = func_7012()
func_7013 = relay.Function([], output)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_7014 = relay.TupleGetItem(func_5665_call(), 0)
call_7015 = relay.TupleGetItem(func_5667_call(), 0)
output = call_7014
output2 = call_7015
func_7016 = relay.Function([], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
output = func_7016()
func_7017 = relay.Function([], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7034 = relay.var("var_7034", dtype = "int64", shape = (16, 12, 10))#candidate|7034|(16, 12, 10)|var|int64
var_7035 = relay.var("var_7035", dtype = "int64", shape = (16, 12, 10))#candidate|7035|(16, 12, 10)|var|int64
bop_7036 = relay.equal(var_7034.astype('bool'), relay.reshape(var_7035.astype('bool'), relay.shape_of(var_7034))) # shape=(16, 12, 10)
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_7039 = relay.TupleGetItem(func_3294_call(), 0)
call_7040 = relay.TupleGetItem(func_3296_call(), 0)
func_5466_call = mod.get_global_var('func_5466')
func_5468_call = mutated_mod.get_global_var('func_5468')
call_7049 = func_5466_call()
call_7050 = func_5466_call()
output = relay.Tuple([bop_7036,call_7039,call_7049,])
output2 = relay.Tuple([bop_7036,call_7040,call_7050,])
func_7054 = relay.Function([var_7034,var_7035,], output)
mod['func_7054'] = func_7054
mod = relay.transform.InferType()(mod)
var_7055 = relay.var("var_7055", dtype = "int64", shape = (16, 12, 10))#candidate|7055|(16, 12, 10)|var|int64
var_7056 = relay.var("var_7056", dtype = "int64", shape = (16, 12, 10))#candidate|7056|(16, 12, 10)|var|int64
output = func_7054(var_7055,var_7056,)
func_7057 = relay.Function([var_7055,var_7056,], output)
mutated_mod['func_7057'] = func_7057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_7108 = func_2710_call()
call_7109 = func_2710_call()
output = relay.Tuple([call_7108,])
output2 = relay.Tuple([call_7109,])
func_7113 = relay.Function([], output)
mod['func_7113'] = func_7113
mod = relay.transform.InferType()(mod)
output = func_7113()
func_7114 = relay.Function([], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5126_call = mod.get_global_var('func_5126')
func_5127_call = mutated_mod.get_global_var('func_5127')
call_7123 = relay.TupleGetItem(func_5126_call(), 2)
call_7124 = relay.TupleGetItem(func_5127_call(), 2)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
var_7131 = relay.var("var_7131", dtype = "bool", shape = (484, 1))#candidate|7131|(484, 1)|var|bool
call_7130 = relay.TupleGetItem(func_3753_call(relay.reshape(var_7131.astype('bool'), [11, 4, 11])), 0)
call_7132 = relay.TupleGetItem(func_3755_call(relay.reshape(var_7131.astype('bool'), [11, 4, 11])), 0)
output = relay.Tuple([call_7123,call_7130,var_7131,])
output2 = relay.Tuple([call_7124,call_7132,var_7131,])
func_7133 = relay.Function([var_7131,], output)
mod['func_7133'] = func_7133
mod = relay.transform.InferType()(mod)
mutated_mod['func_7133'] = func_7133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7134 = relay.var("var_7134", dtype = "bool", shape = (484, 1))#candidate|7134|(484, 1)|var|bool
func_7133_call = mutated_mod.get_global_var('func_7133')
call_7135 = func_7133_call(var_7134)
output = call_7135
func_7136 = relay.Function([var_7134], output)
mutated_mod['func_7136'] = func_7136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7140 = relay.var("var_7140", dtype = "float64", shape = (9, 5, 13))#candidate|7140|(9, 5, 13)|var|float64
uop_7141 = relay.erf(var_7140.astype('float64')) # shape=(9, 5, 13)
uop_7152 = relay.atanh(uop_7141.astype('float32')) # shape=(9, 5, 13)
func_5782_call = mod.get_global_var('func_5782')
func_5784_call = mutated_mod.get_global_var('func_5784')
const_7155 = relay.const([2,-10,9,-7,-9,5,2,1,-10,10,1,-7,10,2,-6,9,-4,-6,10,-2,-8,5,2,-6,6,-2,-3,-5,-6,4,-2,1,1,3,-1,-2,-1,-10,2,-5,-1,3,-5,-9,-9,-4,6,-9,3,10,-6,-4,9,9,-2,-2,-3,-7,5,-9,6,5,9,9,-5,-5,-1,-7,-4,6,3,9,2,6,9,-4,-9,7,5,1,4,1,6,10,6,-8,-3,-7,-2,-4,8,-7,1,6,-1,7,4,3,-6,2,8,-3,6,5,2,-2,-1,1,3,7,-4,-9,2,8,6,2,-9,-2,6,4,9,10,5,10,-9,-3,-3,3,6,-5,-1,-4,-5,-5,6,-9,-5,4,2,-9,-5,8,-7,-3,-2,5,7,-2,-8,3,6,10,5,-3,-10,-2,7,2,8,-6,4,-4,3,-5,-2,-6,2,-2,-1,-4,9,7,5,-1,5,-5,-1,1,-6,-4,5,-9,-7,4,7,-9,5,4,5,4,7,8,8,-1,-4,-3,4,-5,-2,-8,-8,-7,5,2,-9,8,6,3,5,-10,-8,9,-6,2,5,7,9,6,-7,3,-7,-1,7,8,-7,-3,3,4,10,7,8,-1,-10,-10,-7,3,4,-6,-8,-4,-3,8,3,-5,-2,8,-6,8,8,-3,10,1,-9,-8,-1,4,1,10,-5,-7,-7,8,6,1,5,10,-9,-1,6,-7,-2,-1,-4,9,5,-8,-10,8,-4,9,5,7,8,4,7,-1,4,-4,-2,-8,8,1,-4,-4,-10,-8,-10,-8,-2,4,-4,10,6,6,8,9,2,4,1,-2,10,-3,-4,-9,-3,-6,8,5,-2,6,-7,-8,6,-2,-1,-7,6,-3,1,5,-7,-9,8,2,8,-2,4,-3,5,7,-2,6,2,-6,-1,7,3,4,-1,-1,-4,-6,-4,-9,8,2,-8,-8,10,-5,9,1,-9,1,-9,1,-5,2,-7,6,-4,-5,-1,-7,9,3,6,-9,-9,5,3,3,-2,-9,5,4,6,-4,-4,-7,4,10,6,-3,2,-4,1,-4,4,3,9,-1,-9,-3,5,-8,1,-9,9,-1,9,5,7,-4,-5,10,-8,-2,-5,2,4,-1,9,-2,-3,9,-2,-1,-8,-8,3,8,1,10,4,8,-3,-4,10,-1,1,-4,-6,10,9,6,9,5,3,-8,9,-4,-6,5,4,-10,7,8,6,-9,9,8,1,-10,1,1,3,-4,-4,4,6,5,-7,-9,2,-9,-3,-2,2,-7,7,5,-5,-8,10,7,7,9,6,8,-6,-2,6,1,4,-3,8,-1,-8,2,-1,6,-2,4,5,-7,-1,-7,-10,8,-10,5,10,-1,-4,-10,5,-5,-1,4,-2,-6,-9,-1,3,3,10,-3,5,-3,-8,-6,-7,9,-1,-3,-5,8,-1,-3,8,-10,-5,3,7,-8,6,-10,-6,-10,-4,-2,1,-5,8,-1,-5,7,3,1,-3,-9,-5,-2,7,-10,7,10,-1,-2,-2,-5,5,-8,-3,2,-7,7,-7,-3,-2,-5,-6,-7,-9,-3,-4,-7,-4,9,3,-5,2,2,-2,-4,-9,-1,6,-9,-9,-6,-5,-3,-10,-6,4,1,3,5,-10,10,-10,4,1,8,8,-6,-9,-1,3,-1,-9,3,6,7,-9,-5,10,-4,5,-4,8,-5,8,5,3,8,-8,4,-3,2,-10,2,8,-2,7,-5], dtype = "uint32")#candidate|7155|(648,)|const|uint32
call_7154 = func_5782_call(relay.reshape(const_7155.astype('uint32'), [162, 4]))
call_7156 = func_5782_call(relay.reshape(const_7155.astype('uint32'), [162, 4]))
output = relay.Tuple([uop_7152,call_7154,const_7155,])
output2 = relay.Tuple([uop_7152,call_7156,const_7155,])
func_7160 = relay.Function([var_7140,], output)
mod['func_7160'] = func_7160
mod = relay.transform.InferType()(mod)
mutated_mod['func_7160'] = func_7160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7161 = relay.var("var_7161", dtype = "float64", shape = (9, 5, 13))#candidate|7161|(9, 5, 13)|var|float64
func_7160_call = mutated_mod.get_global_var('func_7160')
call_7162 = func_7160_call(var_7161)
output = call_7162
func_7163 = relay.Function([var_7161], output)
mutated_mod['func_7163'] = func_7163
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7181 = relay.var("var_7181", dtype = "float32", shape = (8, 11, 13))#candidate|7181|(8, 11, 13)|var|float32
uop_7182 = relay.log10(var_7181.astype('float32')) # shape=(8, 11, 13)
output = relay.Tuple([uop_7182,])
output2 = relay.Tuple([uop_7182,])
func_7196 = relay.Function([var_7181,], output)
mod['func_7196'] = func_7196
mod = relay.transform.InferType()(mod)
mutated_mod['func_7196'] = func_7196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7197 = relay.var("var_7197", dtype = "float32", shape = (8, 11, 13))#candidate|7197|(8, 11, 13)|var|float32
func_7196_call = mutated_mod.get_global_var('func_7196')
call_7198 = func_7196_call(var_7197)
output = call_7198
func_7199 = relay.Function([var_7197], output)
mutated_mod['func_7199'] = func_7199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_7216 = relay.TupleGetItem(func_5244_call(), 1)
call_7217 = relay.TupleGetItem(func_5245_call(), 1)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_7225 = relay.TupleGetItem(func_4277_call(), 0)
call_7226 = relay.TupleGetItem(func_4278_call(), 0)
output = relay.Tuple([call_7216,call_7225,])
output2 = relay.Tuple([call_7217,call_7226,])
func_7235 = relay.Function([], output)
mod['func_7235'] = func_7235
mod = relay.transform.InferType()(mod)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7235_call = mutated_mod.get_global_var('func_7235')
call_7236 = func_7235_call()
output = call_7236
func_7237 = relay.Function([], output)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4680_call = mod.get_global_var('func_4680')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_7293 = relay.TupleGetItem(func_4680_call(), 0)
call_7294 = relay.TupleGetItem(func_4681_call(), 0)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_7304 = relay.TupleGetItem(func_5028_call(), 0)
call_7305 = relay.TupleGetItem(func_5029_call(), 0)
output = relay.Tuple([call_7293,call_7304,])
output2 = relay.Tuple([call_7294,call_7305,])
func_7308 = relay.Function([], output)
mod['func_7308'] = func_7308
mod = relay.transform.InferType()(mod)
output = func_7308()
func_7309 = relay.Function([], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7321 = relay.var("var_7321", dtype = "float32", shape = (8, 8, 1))#candidate|7321|(8, 8, 1)|var|float32
var_7322 = relay.var("var_7322", dtype = "float32", shape = (8, 8, 13))#candidate|7322|(8, 8, 13)|var|float32
bop_7323 = relay.greater(var_7321.astype('bool'), var_7322.astype('bool')) # shape=(8, 8, 13)
uop_7330 = relay.log10(bop_7323.astype('float64')) # shape=(8, 8, 13)
uop_7344 = relay.erf(bop_7323.astype('float64')) # shape=(8, 8, 13)
uop_7352 = relay.atanh(var_7321.astype('float32')) # shape=(8, 8, 1)
func_3166_call = mod.get_global_var('func_3166')
func_3167_call = mutated_mod.get_global_var('func_3167')
call_7354 = relay.TupleGetItem(func_3166_call(), 0)
call_7355 = relay.TupleGetItem(func_3167_call(), 0)
output = relay.Tuple([uop_7330,uop_7344,uop_7352,call_7354,])
output2 = relay.Tuple([uop_7330,uop_7344,uop_7352,call_7355,])
func_7357 = relay.Function([var_7321,var_7322,], output)
mod['func_7357'] = func_7357
mod = relay.transform.InferType()(mod)
var_7358 = relay.var("var_7358", dtype = "float32", shape = (8, 8, 1))#candidate|7358|(8, 8, 1)|var|float32
var_7359 = relay.var("var_7359", dtype = "float32", shape = (8, 8, 13))#candidate|7359|(8, 8, 13)|var|float32
output = func_7357(var_7358,var_7359,)
func_7360 = relay.Function([var_7358,var_7359,], output)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_7382 = relay.TupleGetItem(func_3294_call(), 0)
call_7383 = relay.TupleGetItem(func_3296_call(), 0)
func_7012_call = mod.get_global_var('func_7012')
func_7013_call = mutated_mod.get_global_var('func_7013')
call_7388 = func_7012_call()
call_7389 = func_7012_call()
output = relay.Tuple([call_7382,call_7388,])
output2 = relay.Tuple([call_7383,call_7389,])
func_7390 = relay.Function([], output)
mod['func_7390'] = func_7390
mod = relay.transform.InferType()(mod)
output = func_7390()
func_7391 = relay.Function([], output)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mod.get_global_var('func_5290')
func_5291_call = mutated_mod.get_global_var('func_5291')
call_7408 = relay.TupleGetItem(func_5290_call(), 1)
call_7409 = relay.TupleGetItem(func_5291_call(), 1)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_7415 = relay.TupleGetItem(func_4174_call(), 0)
call_7416 = relay.TupleGetItem(func_4175_call(), 0)
func_5600_call = mod.get_global_var('func_5600')
func_5602_call = mutated_mod.get_global_var('func_5602')
call_7421 = relay.TupleGetItem(func_5600_call(), 1)
call_7422 = relay.TupleGetItem(func_5602_call(), 1)
output = relay.Tuple([call_7408,call_7415,call_7421,])
output2 = relay.Tuple([call_7409,call_7416,call_7422,])
func_7434 = relay.Function([], output)
mod['func_7434'] = func_7434
mod = relay.transform.InferType()(mod)
output = func_7434()
func_7435 = relay.Function([], output)
mutated_mod['func_7435'] = func_7435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5574_call = mod.get_global_var('func_5574')
func_5575_call = mutated_mod.get_global_var('func_5575')
call_7445 = relay.TupleGetItem(func_5574_call(), 2)
call_7446 = relay.TupleGetItem(func_5575_call(), 2)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_7454 = relay.TupleGetItem(func_3547_call(), 0)
call_7455 = relay.TupleGetItem(func_3548_call(), 0)
func_2429_call = mod.get_global_var('func_2429')
func_2433_call = mutated_mod.get_global_var('func_2433')
const_7465 = relay.const([False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False], dtype = "bool")#candidate|7465|(40,)|const|bool
call_7464 = relay.TupleGetItem(func_2429_call(relay.reshape(const_7465.astype('bool'), [10, 4]), relay.reshape(const_7465.astype('bool'), [10, 4]), ), 1)
call_7466 = relay.TupleGetItem(func_2433_call(relay.reshape(const_7465.astype('bool'), [10, 4]), relay.reshape(const_7465.astype('bool'), [10, 4]), ), 1)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_7493 = relay.TupleGetItem(func_4174_call(), 0)
call_7494 = relay.TupleGetItem(func_4175_call(), 0)
output = relay.Tuple([call_7445,call_7454,call_7464,const_7465,call_7493,])
output2 = relay.Tuple([call_7446,call_7455,call_7466,const_7465,call_7494,])
func_7498 = relay.Function([], output)
mod['func_7498'] = func_7498
mod = relay.transform.InferType()(mod)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7498_call = mutated_mod.get_global_var('func_7498')
call_7499 = func_7498_call()
output = call_7499
func_7500 = relay.Function([], output)
mutated_mod['func_7500'] = func_7500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4680_call = mod.get_global_var('func_4680')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_7521 = relay.TupleGetItem(func_4680_call(), 0)
call_7522 = relay.TupleGetItem(func_4681_call(), 0)
output = call_7521
output2 = call_7522
func_7576 = relay.Function([], output)
mod['func_7576'] = func_7576
mod = relay.transform.InferType()(mod)
output = func_7576()
func_7577 = relay.Function([], output)
mutated_mod['func_7577'] = func_7577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_7625 = relay.TupleGetItem(func_3405_call(), 0)
call_7626 = relay.TupleGetItem(func_3407_call(), 0)
var_7627 = relay.var("var_7627", dtype = "float32", shape = (11, 4, 11))#candidate|7627|(11, 4, 11)|var|float32
bop_7628 = relay.power(call_7625.astype('float64'), relay.reshape(var_7627.astype('float64'), relay.shape_of(call_7625))) # shape=(11, 4, 11)
bop_7631 = relay.power(call_7626.astype('float64'), relay.reshape(var_7627.astype('float64'), relay.shape_of(call_7626))) # shape=(11, 4, 11)
output = relay.Tuple([bop_7628,])
output2 = relay.Tuple([bop_7631,])
func_7642 = relay.Function([var_7627,], output)
mod['func_7642'] = func_7642
mod = relay.transform.InferType()(mod)
mutated_mod['func_7642'] = func_7642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7643 = relay.var("var_7643", dtype = "float32", shape = (11, 4, 11))#candidate|7643|(11, 4, 11)|var|float32
func_7642_call = mutated_mod.get_global_var('func_7642')
call_7644 = func_7642_call(var_7643)
output = call_7644
func_7645 = relay.Function([var_7643], output)
mutated_mod['func_7645'] = func_7645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7647 = relay.var("var_7647", dtype = "float64", shape = (1, 16, 15))#candidate|7647|(1, 16, 15)|var|float64
uop_7648 = relay.erf(var_7647.astype('float64')) # shape=(1, 16, 15)
output = relay.Tuple([uop_7648,])
output2 = relay.Tuple([uop_7648,])
func_7663 = relay.Function([var_7647,], output)
mod['func_7663'] = func_7663
mod = relay.transform.InferType()(mod)
var_7664 = relay.var("var_7664", dtype = "float64", shape = (1, 16, 15))#candidate|7664|(1, 16, 15)|var|float64
output = func_7663(var_7664)
func_7665 = relay.Function([var_7664], output)
mutated_mod['func_7665'] = func_7665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5699_call = mod.get_global_var('func_5699')
func_5701_call = mutated_mod.get_global_var('func_5701')
call_7717 = relay.TupleGetItem(func_5699_call(), 0)
call_7718 = relay.TupleGetItem(func_5701_call(), 0)
func_4941_call = mod.get_global_var('func_4941')
func_4946_call = mutated_mod.get_global_var('func_4946')
const_7726 = relay.const([[-2],[1],[5],[9],[3],[-9],[-8],[10],[7],[-8],[10],[-5],[5],[-7],[-10],[7],[6],[-5],[9],[10],[-10],[3],[-10],[-10],[7],[-5],[-1],[2],[-10],[6],[2],[3],[-1],[-8],[10],[6],[-9],[-10],[2],[-7],[-9],[7],[-5],[-4],[10],[7],[3],[-9],[-8],[-9],[-6],[-10],[4],[5],[-9],[6],[-5],[6],[6],[6],[-1],[-7],[3],[-3],[6],[1],[6],[9],[1],[-7],[-8],[-8],[10],[4],[-7],[-1],[3],[5],[5],[-9],[1],[-2],[-3],[-9],[7],[-7],[-3],[-8],[3],[6],[-4],[10],[-6],[-5],[4],[-1],[-6],[-2],[-6],[-5],[8],[-7],[-9],[1],[-7],[-3],[5],[-8],[8],[-1],[9],[-9],[-7],[-2],[-1],[5],[9],[10],[7],[1],[10],[6],[-7],[8],[10],[-10],[-1],[4],[10],[-10],[-2],[-2],[-7],[10],[-4],[1],[-7],[9],[3],[-9],[-7],[4],[10],[6],[5],[-2],[-3],[10],[5],[-7],[5],[2],[4],[3],[-9],[4],[3],[-5],[-7],[2],[-9],[1],[-9],[3],[2],[-2],[7],[-8],[5],[2],[-8],[-1],[-6],[6],[7],[7],[4],[-9],[8],[-6],[3],[9],[4],[-3],[-3],[-5],[3],[1],[-4],[5],[5],[-7],[-10],[2],[10],[10],[8],[3],[1],[10],[-3],[2],[-3],[-5],[10],[-8],[2],[5],[-6],[9],[7],[-9],[-1],[8],[2],[-3],[-5],[1],[7],[-6],[-6],[3],[-2],[9],[7],[3],[-7],[10],[7],[-9],[6],[-4],[-6],[10],[2],[2],[2],[7],[6],[-3],[-2],[-9],[-1],[7],[9],[-8],[8],[7],[-8],[-9],[4],[-2],[9],[-10],[5],[-7],[10],[-6],[-7],[8],[8],[2],[-10],[2],[-7],[-10],[-4],[-5],[2],[-7],[-7],[-4],[2],[-7],[-2],[6],[10],[8],[8],[-8],[2],[-8],[-10],[9],[-8],[-9],[-9],[-3],[2],[2],[4],[-5],[-8],[4],[4],[-3],[-10],[3],[3],[4],[-8],[-8],[3],[-10],[1],[10],[-7],[-10],[10],[3],[6],[2],[-6],[-7],[-9],[-2],[-1],[4],[2],[-10],[3],[6],[5],[-7],[10],[10],[-5],[-3],[9],[1],[1],[5],[-4],[8],[2],[-6],[-8],[-8],[-10],[9],[-4],[-5],[3],[-9],[-8],[-2],[-4],[8],[9],[-1],[-4],[7],[3],[6],[-10],[-3],[-5],[-3],[-6],[3],[-5],[-10],[-6],[-4],[-6],[6],[-5],[-5],[-10],[-2],[-5],[-7],[3],[9],[4],[-3],[8],[7],[-4],[7],[-7],[-4],[-7],[9],[-10],[-8],[-5],[-5],[4],[-8],[-5],[9],[-6],[5],[9],[-2],[6],[9],[6],[1],[-10],[-3],[5],[-3],[-2],[-9],[-4],[10],[5],[10],[9],[10],[-9],[-1],[6],[1],[2],[-1],[1],[-7],[-5],[-2],[5],[8],[9],[-5],[9],[6],[-4],[-3],[8],[8],[-9],[8],[-3],[3],[-1],[6],[6],[9],[-2],[-6],[2],[9],[8],[10],[-5],[7],[-7],[3],[9],[-7],[-2],[-10],[9],[-6],[6],[1],[1],[-5],[1],[6],[-4],[-1],[-7],[3],[10],[-10],[-7],[1],[-10],[8],[-8],[-3],[1],[9],[-5],[-8],[-7],[2],[-3],[3],[4],[-8],[-4],[6],[5],[-7],[3],[3],[9],[-5],[-6],[-1],[-4],[-8],[-7],[2],[6],[2],[-8],[-1],[4],[-7],[9],[-10],[1],[-1],[10],[9],[-9],[1],[-2],[7],[3],[-8],[-10],[6],[-9],[1],[-1],[8],[-8],[-9],[3],[4],[-7],[-7],[-8],[-6],[6],[1],[-3],[7],[10],[-1],[1],[-4],[-8],[-9],[3],[2],[8],[8],[4],[8],[8],[-5],[8],[2],[-2],[-10],[-2],[-3],[-9],[1],[6],[1],[-3],[-10]], dtype = "uint32")#candidate|7726|(560, 1)|const|uint32
call_7725 = relay.TupleGetItem(func_4941_call(relay.reshape(const_7726.astype('uint32'), [4, 10, 14]), relay.reshape(const_7726.astype('uint32'), [4, 10, 14]), relay.reshape(call_7717.astype('float32'), [484,]), ), 1)
call_7727 = relay.TupleGetItem(func_4946_call(relay.reshape(const_7726.astype('uint32'), [4, 10, 14]), relay.reshape(const_7726.astype('uint32'), [4, 10, 14]), relay.reshape(call_7717.astype('float32'), [484,]), ), 1)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_7735 = relay.TupleGetItem(func_3540_call(), 0)
call_7736 = relay.TupleGetItem(func_3542_call(), 0)
uop_7745 = relay.log(const_7726.astype('float32')) # shape=(560, 1)
output = relay.Tuple([call_7717,call_7725,call_7735,uop_7745,])
output2 = relay.Tuple([call_7718,call_7727,call_7736,uop_7745,])
func_7769 = relay.Function([], output)
mod['func_7769'] = func_7769
mod = relay.transform.InferType()(mod)
mutated_mod['func_7769'] = func_7769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7769_call = mutated_mod.get_global_var('func_7769')
call_7770 = func_7769_call()
output = call_7770
func_7771 = relay.Function([], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7778 = relay.var("var_7778", dtype = "uint8", shape = (4, 12, 5))#candidate|7778|(4, 12, 5)|var|uint8
var_7779 = relay.var("var_7779", dtype = "uint8", shape = (4, 12, 5))#candidate|7779|(4, 12, 5)|var|uint8
bop_7780 = relay.add(var_7778.astype('uint8'), relay.reshape(var_7779.astype('uint8'), relay.shape_of(var_7778))) # shape=(4, 12, 5)
output = relay.Tuple([bop_7780,])
output2 = relay.Tuple([bop_7780,])
func_7786 = relay.Function([var_7778,var_7779,], output)
mod['func_7786'] = func_7786
mod = relay.transform.InferType()(mod)
var_7787 = relay.var("var_7787", dtype = "uint8", shape = (4, 12, 5))#candidate|7787|(4, 12, 5)|var|uint8
var_7788 = relay.var("var_7788", dtype = "uint8", shape = (4, 12, 5))#candidate|7788|(4, 12, 5)|var|uint8
output = func_7786(var_7787,var_7788,)
func_7789 = relay.Function([var_7787,var_7788,], output)
mutated_mod['func_7789'] = func_7789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7791 = relay.var("var_7791", dtype = "float32", shape = (3, 2, 11))#candidate|7791|(3, 2, 11)|var|float32
uop_7792 = relay.log(var_7791.astype('float32')) # shape=(3, 2, 11)
uop_7796 = relay.sqrt(uop_7792.astype('float32')) # shape=(3, 2, 11)
uop_7801 = relay.sin(uop_7796.astype('float32')) # shape=(3, 2, 11)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_7808 = relay.TupleGetItem(func_5028_call(), 2)
call_7809 = relay.TupleGetItem(func_5029_call(), 2)
output = relay.Tuple([uop_7801,call_7808,])
output2 = relay.Tuple([uop_7801,call_7809,])
func_7819 = relay.Function([var_7791,], output)
mod['func_7819'] = func_7819
mod = relay.transform.InferType()(mod)
var_7820 = relay.var("var_7820", dtype = "float32", shape = (3, 2, 11))#candidate|7820|(3, 2, 11)|var|float32
output = func_7819(var_7820)
func_7821 = relay.Function([var_7820], output)
mutated_mod['func_7821'] = func_7821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_7825 = relay.TupleGetItem(func_4277_call(), 0)
call_7826 = relay.TupleGetItem(func_4278_call(), 0)
output = relay.Tuple([call_7825,])
output2 = relay.Tuple([call_7826,])
func_7829 = relay.Function([], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7829_call = mutated_mod.get_global_var('func_7829')
call_7830 = func_7829_call()
output = call_7830
func_7831 = relay.Function([], output)
mutated_mod['func_7831'] = func_7831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_7969 = func_4898_call()
call_7970 = func_4898_call()
func_2857_call = mod.get_global_var('func_2857')
func_2863_call = mutated_mod.get_global_var('func_2863')
var_7973 = relay.var("var_7973", dtype = "uint32", shape = (648,))#candidate|7973|(648,)|var|uint32
var_7974 = relay.var("var_7974", dtype = "int16", shape = ())#candidate|7974|()|var|int16
const_7975 = relay.const([-9,-6,3,2,-6,6,-6,-6,-9,3,10,7,-9,10,-1,7,4,-1,-1,-10,-1,-7,-1,1,-8,5,2,-5,-5,5,8,6,-7,8,-1,7,7,8,8,9,4,2,-8,-7,4,10,5,-3,-4,-10,-1,6,-2,-9,4,6,2,3,7,-4,3,-2,-10,9,-7,-9,-8,10,9,-2,-5,-10,6,-8,3,-5,-6,3,3,-7,2,3,-1,4,2,3,-4,-6,-6,5,-6,6,-7,-7,-2,3,2,-8,10,-3,7,4,8,-4,-6,-4,9,-6,8,7,8,7,-9,-3,6,3,-1,-7,-9,-3,-9,-9,4,3,7,-5,-3,6,-7,10,4,-9,2,-6,-6,-8,-4,3,10,-2,-9,3,7,-5,8,-8,-1,-9,-2,6,4,4,8,-5,-5,-7,-4,-6,10,7,-7,10,3,-2,4,4,-1,5,-8,-10,-7,-7,7,-4,-5,5,-8,-3,-4,-6,3,6,2,5,-2,-3,2,-4,5,8,-10,5,9,7,-3,2,6,-1,-1,-8,-1,-4,3,6,7,-8,-8,-3,1,10,6,9,4,-10,-8,10,9,6,3,10,7,-6,-2,-4,10,6,-8,8,7,-8,6,4,-1,7,-4,3,4,-6,8,-9,6,6,10,-7,-4,2,1,3,-8,-6,-5,4,8,-6,-10,7,-10,-1,7,-5,-2,-8,3,-7,-4,-3,-3,10,7,-8,-3,-4,-7,1,-2,6,-3,9,8,9,8,-10,-1,2,8,-4,6,2,-2,9,1,-9,10,4,-1,-1,-7,2,3,3,-6,2,6,9,-1,3,4,8,-10,-3,3,10,6,7,7,-1,-8,7,1,5,6,3,10,5,2,-10,3,7,3,-7,6,3,4,-10,-8,4,3,-4,-7,-4,9,3,6,-1,6,9,-9,5,-4,6,-10,-8,10,-9,-2,-7,8,5,2,3,6,-7,6,-6,-9,-2,5,-3,3,3,4,8,-9,-6,-1,-8,-10,-1,9,7,-2,-6,-1,3,10,1,5,5,-4,-5,-9,3,-8,-6,-4,2,5,4,-6,2,-4,-7,4,-4,-3,5,-2,1,-3,-4,1,-4,5,-4,6,6,-9,-10,6,-5,-1,-9,1,10,9,2,3,8,-3,-8,8,-8,8,2,-9,1,9,10,1,3,-7,2,10,-9,-2,-9,-10,9,-2,10,-10,-1,2,-7,5,-5,-7,-4,6,-10,-8,-1,8,6,3,-1,-8,9], dtype = "int16")#candidate|7975|(468,)|const|int16
call_7972 = relay.TupleGetItem(func_2857_call(relay.reshape(call_7969.astype('float32'), [11, 4, 11]), relay.reshape(var_7973.astype('uint32'), [54, 12]), relay.reshape(var_7974.astype('int16'), []), relay.reshape(const_7975.astype('int16'), [468,]), ), 3)
call_7976 = relay.TupleGetItem(func_2863_call(relay.reshape(call_7969.astype('float32'), [11, 4, 11]), relay.reshape(var_7973.astype('uint32'), [54, 12]), relay.reshape(var_7974.astype('int16'), []), relay.reshape(const_7975.astype('int16'), [468,]), ), 3)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_7986 = relay.TupleGetItem(func_3753_call(relay.reshape(call_7969.astype('bool'), [11, 4, 11])), 0)
call_7987 = relay.TupleGetItem(func_3755_call(relay.reshape(call_7969.astype('bool'), [11, 4, 11])), 0)
var_7989 = relay.var("var_7989", dtype = "uint32", shape = (648,))#candidate|7989|(648,)|var|uint32
bop_7990 = relay.greater_equal(var_7973.astype('bool'), relay.reshape(var_7989.astype('bool'), relay.shape_of(var_7973))) # shape=(648,)
output = relay.Tuple([call_7969,call_7972,var_7974,const_7975,call_7986,bop_7990,])
output2 = relay.Tuple([call_7970,call_7976,var_7974,const_7975,call_7987,bop_7990,])
func_7997 = relay.Function([var_7973,var_7974,var_7989,], output)
mod['func_7997'] = func_7997
mod = relay.transform.InferType()(mod)
var_7998 = relay.var("var_7998", dtype = "uint32", shape = (648,))#candidate|7998|(648,)|var|uint32
var_7999 = relay.var("var_7999", dtype = "int16", shape = ())#candidate|7999|()|var|int16
var_8000 = relay.var("var_8000", dtype = "uint32", shape = (648,))#candidate|8000|(648,)|var|uint32
output = func_7997(var_7998,var_7999,var_8000,)
func_8001 = relay.Function([var_7998,var_7999,var_8000,], output)
mutated_mod['func_8001'] = func_8001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_8014 = relay.TupleGetItem(func_6860_call(), 0)
call_8015 = relay.TupleGetItem(func_6862_call(), 0)
func_7829_call = mod.get_global_var('func_7829')
func_7831_call = mutated_mod.get_global_var('func_7831')
call_8029 = relay.TupleGetItem(func_7829_call(), 0)
call_8030 = relay.TupleGetItem(func_7831_call(), 0)
output = relay.Tuple([call_8014,call_8029,])
output2 = relay.Tuple([call_8015,call_8030,])
func_8033 = relay.Function([], output)
mod['func_8033'] = func_8033
mod = relay.transform.InferType()(mod)
mutated_mod['func_8033'] = func_8033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8033_call = mutated_mod.get_global_var('func_8033')
call_8034 = func_8033_call()
output = call_8034
func_8035 = relay.Function([], output)
mutated_mod['func_8035'] = func_8035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mod.get_global_var('func_7016')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_8044 = func_7016_call()
call_8045 = func_7016_call()
output = relay.Tuple([call_8044,])
output2 = relay.Tuple([call_8045,])
func_8049 = relay.Function([], output)
mod['func_8049'] = func_8049
mod = relay.transform.InferType()(mod)
mutated_mod['func_8049'] = func_8049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8049_call = mutated_mod.get_global_var('func_8049')
call_8050 = func_8049_call()
output = call_8050
func_8051 = relay.Function([], output)
mutated_mod['func_8051'] = func_8051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6428_call = mod.get_global_var('func_6428')
func_6430_call = mutated_mod.get_global_var('func_6430')
call_8054 = func_6428_call()
call_8055 = func_6428_call()
func_3294_call = mod.get_global_var('func_3294')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_8085 = relay.TupleGetItem(func_3294_call(), 0)
call_8086 = relay.TupleGetItem(func_3296_call(), 0)
func_7357_call = mod.get_global_var('func_7357')
func_7360_call = mutated_mod.get_global_var('func_7360')
const_8113 = relay.const([9.967193,-4.981894,-9.556582,6.325815,-7.304131,3.598450,0.310192,7.513210,3.923131,-8.114564,-3.153398,-7.395548,-8.781325,-2.977181,0.598393,-8.500719,5.370304,6.868448,-8.820811,-7.046575,-1.712966,-1.995307,-5.651549,-3.735919,-2.662215,9.354205,-5.343842,3.589781,-5.429332,-4.155144,-8.038271,-3.060278,8.405159,0.994447,-0.135151,-3.823581,3.790597,-7.230989,4.872146,7.706081,-9.686752,-3.266139,-9.893814,8.251174,2.949286,8.431808,1.730340,-2.338156,2.023045,-8.478462,0.620744,3.525442,9.718863,-1.390954,-6.478942,-4.666490,2.941723,8.109004,-3.520493,-4.982963,4.532870,3.856046,6.330617,6.234931], dtype = "float32")#candidate|8113|(64,)|const|float32
const_8114 = relay.const([4.369273,-5.482602,-8.240247,0.770785,-5.844223,0.416238,-0.161036,-1.575987,-3.922770,-1.475592,-0.848806,-0.667626,3.647116,-5.201895,3.711660,3.396629,-2.125280,7.634360,9.680603,6.666141,-4.623262,1.244766,-1.100111,0.918786,-3.815480,-2.333521,-0.223187,-6.827869,-9.333552,-4.975327,-3.213413,-7.434257,9.250095,-2.510356,-8.292847,5.744698,-0.345207,5.919131,-1.183178,0.544736,8.093755,5.323420,-5.965637,2.165997,-7.877814,-9.017641,-9.235977,-4.479524,-6.616327,-7.652241,-1.717931,2.438598,-6.013212,8.386724,-7.901030,4.959433,-4.140040,4.448463,-6.894742,-7.888194,-3.945251,-5.679982,7.676296,0.663364,9.914585,8.690450,0.107740,-5.409347,0.847899,-9.640251,4.277107,4.613481,-8.096448,-8.151686,-9.140279,2.453090,-6.840882,4.868850,-7.937365,0.296415,-1.297687,-5.362859,-9.681627,5.889648,-1.278932,6.958920,9.350929,-2.260252,5.169743,-7.454946,6.183832,-4.237748,1.010676,0.191613,-0.147604,2.450022,5.185949,-1.697947,0.765533,-7.706342,8.450220,9.008621,-6.180946,-1.241413,-4.302951,9.171708,8.162320,2.192275,9.395345,-9.247431,-5.420676,-8.234796,6.961057,7.836882,-5.437871,7.027680,1.278224,-8.356526,-0.715893,9.507651,-1.849625,-6.873892,-4.801151,-6.838547,-2.778310,-8.905645,5.901319,3.882916,1.748935,6.274968,-6.899865,-4.447538,1.115879,6.596249,2.122147,-3.140235,-0.228659,2.858848,2.283620,-0.536793,0.831510,-0.905475,-5.859797,7.841166,-1.207347,0.639779,8.635074,-5.862146,2.158799,-6.461117,-5.523377,-1.559144,1.492803,7.826040,5.319020,5.620930,-1.590719,7.494223,2.512885,4.879847,2.094822,-4.348437,-3.530491,2.574648,-2.031077,-0.484820,4.060387,3.028701,4.727138,1.714248,5.871414,8.175382,-1.451041,-8.341160,5.328573,1.855565,-2.476589,-7.963568,-0.441441,-6.330389,0.346465,5.096615,9.496278,-1.395052,6.289417,-7.921594,-1.881357,0.464123,-5.562026,-8.232659,0.961708,5.090965,0.239477,-7.759540,2.913009,-8.691773,4.187802,5.644502,4.277352,2.637025,5.246131,8.798298,1.057880,-0.587043,-7.049649,-4.041838,-3.730803,8.677054,9.059159,2.147418,2.305276,5.317021,9.990777,8.935090,-1.076596,-7.556830,-5.428129,0.769860,-7.292375,-9.624092,-3.703224,-2.808094,-3.024610,-5.585752,6.245015,-2.025451,-1.230344,5.498838,1.266465,-4.343273,-8.502515,8.982839,-5.990101,-6.857312,5.445918,7.121658,7.826685,-7.940629,3.332470,8.305334,7.330829,6.692478,-6.873145,4.671291,-9.960362,9.843614,-7.167355,4.169782,-9.842200,5.519873,-0.264038,1.973725,-5.816297,7.189823,2.607156,-9.414293,0.709556,-4.476498,8.806282,6.317804,6.293208,-8.172874,4.606081,-9.429560,3.725555,5.837227,-2.851706,-0.899666,5.938470,-6.094242,-1.559197,7.619237,8.082878,5.739341,5.030018,-8.627932,-8.788659,5.720482,-0.958940,1.419766,4.824238,-1.782445,7.236402,5.512052,-2.772660,2.808482,-7.709701,-1.009765,-3.438327,-7.050882,-1.392264,-7.457779,9.118536,1.323308,3.406966,-4.373415,3.215427,-4.015303,5.620513,9.528835,-5.581866,-0.406517,3.203245,-5.080526,4.153232,-9.558578,9.543945,-3.752623,-2.928306,-8.794472,-2.146643,-6.835037,9.153851,-8.217064,-7.669476,0.002028,9.791937,-3.368066,-6.537449,-4.199166,5.155992,-6.449813,-4.838497,-5.069602,-0.536594,-7.527015,0.414054,-0.757289,-7.343461,4.903527,3.549665,7.610263,-7.119606,4.562399,-5.912113,-1.344807,-5.109828,-7.643568,8.635150,7.835505,7.097826,-8.298517,4.268637,-3.622751,-9.068189,-5.056040,-7.212048,-6.484964,5.464297,3.496080,4.263604,-5.716895,-4.713090,-4.402308,5.686030,5.919676,-5.959202,0.494092,1.186276,9.153596,0.172179,1.762998,6.079452,-8.035076,8.721555,-6.965606,-3.744152,0.199901,9.416753,-7.172556,8.343652,5.619501,-0.390311,2.885440,-5.085962,8.828447,0.619690,5.281302,-1.809064,8.808445,-4.123679,-2.734847,-6.053956,0.899973,-3.839712,-3.091941,-2.883966,5.254832,-2.590896,-8.652622,6.325433,-0.662647,-2.379751,3.781401,-7.357422,-0.395968,-7.580471,4.483901,-4.692596,-3.481262,-1.195701,8.833214,-3.682485,7.587886,3.502516,-7.291862,9.407164,3.950186,-6.551498,-4.881365,-5.083370,4.987050,-4.248057,7.059748,-7.955856,1.564765,4.066324,8.730116,2.567204,-1.824523,-2.721725,9.712272,-4.729282,0.655827,3.097128,6.570407,-6.838907,-5.570993,8.688176,-2.587532,6.765055,-7.668754,-8.440290,-3.358906,2.100243,-3.077780,6.036245,3.319762,9.031586,6.096662,8.600474,-3.107558,9.000382,-8.558949,-1.822366,-6.880677,-7.708785,-2.666320,-9.653448,-8.945525,-4.113958,3.994788,-2.729837,1.136054,9.620424,-6.273311,3.527157,8.653319,8.552531,9.749494,-3.336308,2.497047,-6.900179,1.040441,-2.195224,-7.203293,-6.036238,8.226240,6.783367,-3.424220,1.356296,6.648657,4.297962,4.557010,-9.897307,2.123644,2.181429,1.930257,-3.831241,-1.846200,-8.434722,2.152139,3.782676,1.405977,8.044141,3.219182,-0.861208,9.823509,1.476903,-5.199241,0.998885,-1.680003,-7.959696,9.187577,-8.895541,6.758088,-6.604856,-4.810492,5.896298,-0.762087,8.973169,9.170570,-9.347802,-9.974382,-9.926090,4.580923,-2.811958,-4.341894,3.849634,9.778320,8.364185,-5.727726,-9.886856,7.791681,-6.888681,-3.413395,-5.615338,4.420703,8.737985,-5.547460,-8.267020,0.196681,-2.045347,5.932922,1.254793,2.901643,-7.080099,9.923662,-1.649896,-2.308156,-2.568236,0.731917,2.619409,-0.755005,-0.974923,-4.478924,-3.038794,9.292185,8.144587,1.040639,4.135223,7.253204,-1.543471,-3.748065,-3.779441,-0.936796,-5.854373,4.887397,-7.187810,-0.426951,-7.656000,-7.470823,-8.633923,7.027493,-5.013672,8.755866,-8.503292,2.006594,2.649591,3.581387,1.596343,-9.528837,9.465853,8.150590,1.575299,-9.679315,-4.182886,1.276708,-1.717921,-6.595254,9.589759,1.901591,-5.253621,-0.868692,-6.540704,6.986066,5.765642,9.303398,8.348445,3.004188,-0.868527,4.428657,-8.359870,-9.616333,7.693596,1.338937,-1.818028,-7.679632,-8.006948,-4.510540,9.392346,-3.471573,6.827568,6.075596,-5.334392,-1.475301,9.866360,0.689367,-9.043843,-3.573978,-1.258921,-4.271541,-6.342552,5.721041,8.539918,-7.290662,-9.397842,-6.798477,-6.345158,-4.029322,-8.556982,-2.419131,-5.957571,9.698391,6.564501,1.533346,7.026486,-2.410044,-0.048254,-5.427478,7.244186,-2.817323,5.354661,9.918937,0.490424,-6.896905,-4.166809,0.666765,-4.548170,8.474834,-1.846885,0.983400,-0.514804,-8.384717,-5.915546,1.362331,9.839878,6.792410,-1.731561,-7.294104,-3.659061,0.595868,9.656363,-4.269675,4.635633,7.046689,-0.254673,5.183011,-1.808394,2.074816,9.188044,-3.275156,8.123830,8.397787,5.723890,1.012989,7.670830,-7.142966,8.731952,-9.093582,1.688478,-3.422268,4.388841,-3.746710,2.928602,-2.213842,-3.015527,6.783242,-5.920428,6.331496,1.591210,4.912016,6.582751,0.886910,-8.317306,8.522308,-2.610759,8.975718,-2.966915,9.112474,-3.195819,-6.640296,1.351840,-2.115132,-0.310702,2.074060,-0.161218,-5.314425,-9.608358,-0.427492,-4.374822,-8.122235,9.565858,-2.025508,-9.389323,-9.995958,2.759678,6.183082,-4.798771,-2.824120,-7.592110,-7.380695,-4.705582,-8.929973,4.936113,-4.540672,9.797353,-2.918281,-4.111567,-1.117976,-5.685031,9.267565,8.189037,-8.338414,-1.396597,-0.102191,-6.491222,7.942401,-9.080917,-8.129952,-8.103095,3.049014,7.812202,4.625974,-9.137096,-7.566528,-3.432509,-8.926965,6.109857,9.496993,4.738219,-0.849684,1.904299,-4.766108,7.159654,9.528139,7.018042,3.594309,-5.271729,7.955120,-8.405677,2.745442,7.645094,-0.983540,2.416936,3.565374,-1.840595,-6.380970,1.307425,3.145830,1.210936,2.853812,3.935061,-0.538933,9.759260,-8.105652,5.228038,-3.482761,7.742968,9.512046,-1.469170,7.553492,-0.152686,-4.286932,-8.784971,6.047170,-9.408502,4.111230,2.744453,2.660024,2.356600,5.361446,-0.894008,6.850372,-3.954259,-6.655837,6.149435,2.991791,9.800631,-5.256338,8.752523,-2.827368,-8.961281,0.873642,5.611495,-8.023105,-9.804406,3.334133,5.562280,-0.695351,-3.810471,-9.977455,-0.318784,1.042748,-0.082942,-3.007736,5.062429,0.209003,-0.723988,-5.580413,-5.756200,-1.180055,-4.990301,0.715931,-4.701387,9.183591,-7.302310,6.825194,-4.110448,-8.387923,-2.801880,-8.882338,6.727510,4.635085,8.676129,2.572557,-3.251963,-5.843159,-1.385489,-9.457478,-5.073947,9.928999,8.583462,2.128353,7.525372,-3.290562,-6.359761,-7.426004,5.234050,9.175962,4.569298,-7.321253], dtype = "float32")#candidate|8114|(832,)|const|float32
call_8112 = relay.TupleGetItem(func_7357_call(relay.reshape(const_8113.astype('float32'), [8, 8, 1]), relay.reshape(const_8114.astype('float32'), [8, 8, 13]), ), 2)
call_8115 = relay.TupleGetItem(func_7360_call(relay.reshape(const_8113.astype('float32'), [8, 8, 1]), relay.reshape(const_8114.astype('float32'), [8, 8, 13]), ), 2)
output = relay.Tuple([call_8054,call_8085,call_8112,const_8113,const_8114,])
output2 = relay.Tuple([call_8055,call_8086,call_8115,const_8113,const_8114,])
func_8117 = relay.Function([], output)
mod['func_8117'] = func_8117
mod = relay.transform.InferType()(mod)
mutated_mod['func_8117'] = func_8117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8117_call = mutated_mod.get_global_var('func_8117')
call_8118 = func_8117_call()
output = call_8118
func_8119 = relay.Function([], output)
mutated_mod['func_8119'] = func_8119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_8146 = relay.TupleGetItem(func_5665_call(), 1)
call_8147 = relay.TupleGetItem(func_5667_call(), 1)
const_8153 = relay.const([[[6.768156,8.107513,-3.815016,4.674008,-6.909292,5.552196,-1.236529,-2.051397,2.957092,1.584210,-5.382309],[-3.222970,-0.065593,4.759351,-3.219679,-2.759367,-2.846646,6.943313,-2.320539,-4.558479,-8.503520,-0.039865],[7.889167,-2.397273,9.724131,6.101051,-7.783870,-9.654478,6.519736,8.461728,-3.995426,8.514968,2.558407],[1.133448,7.886903,-7.086559,2.263829,-7.561598,8.983802,8.755586,-2.812132,-1.937075,-0.447516,-0.114756]],[[-7.508148,4.602382,6.838930,-8.104358,5.596667,3.638429,0.147076,8.016582,-6.539793,6.753937,-6.315260],[8.074250,-8.904951,7.273845,-7.718130,-3.600884,5.157916,8.644371,-0.818541,6.928673,2.163586,-2.594380],[-3.202697,1.031266,7.507801,9.007054,9.114966,7.421117,-3.382386,-2.863821,-8.751143,-5.935067,-7.298125],[-1.838456,8.542761,-6.896363,-8.520075,9.916755,-9.814252,-2.643918,4.452496,8.875480,-7.581023,-1.444313]],[[4.715298,8.437262,9.271718,6.952357,3.493580,-5.792610,5.151873,1.622440,4.757326,9.930230,0.938648],[-1.375813,2.308603,5.727413,-6.871766,-9.245958,-8.529017,8.548683,6.466436,4.409362,-6.306886,2.100322],[-2.117849,-1.697731,2.941846,-3.614524,2.662156,-6.081491,-0.895579,-9.412885,4.162180,9.756834,-0.487229],[-7.144812,3.474667,-6.529799,5.794753,-9.360420,-8.930353,-4.951790,-3.153876,-1.202111,4.858259,-0.767737]],[[-6.186805,-8.044760,6.376818,7.623781,-9.482090,-6.657649,2.684835,2.852471,-7.188611,-8.787566,-0.142265],[1.047948,1.403965,-7.930606,-0.902806,7.538415,7.304323,-7.328895,9.079767,-4.791614,9.590694,4.492477],[1.915845,-3.664622,-9.021105,-2.948309,1.627104,4.170348,3.843541,3.962212,-3.042739,-3.158844,-0.268597],[8.657292,-8.130677,1.351601,-2.087068,-2.420975,7.731247,0.610514,-6.623689,7.666920,6.915629,-8.211685]],[[-1.910418,-5.462944,-7.961472,8.477288,-0.157329,-5.461049,-6.119384,-3.630105,6.223684,3.715441,9.551015],[-1.782243,-9.437284,5.382063,4.994319,0.646126,6.451223,-7.983038,-6.063911,-6.727826,-8.041734,-7.472711],[-0.226506,2.606954,5.290847,6.653675,-0.007352,-8.128237,4.367022,-3.918792,-1.442554,-6.710704,-8.567902],[1.845758,-4.438439,4.859918,9.860055,-2.944258,-1.021049,3.692469,-1.947008,8.074593,-0.770924,4.261823]],[[9.293926,-4.115709,9.079789,-2.911024,-5.752858,3.892322,1.681911,0.944817,-8.970064,3.308668,-6.522954],[-7.977292,4.625763,9.819362,-9.114132,3.428645,-7.653023,9.111927,-4.685157,4.784209,9.102909,-8.806375],[8.768654,7.013580,7.155602,5.037255,2.156572,-0.714950,8.365985,5.936668,-0.879665,5.806955,-2.650536],[9.466312,-1.620267,2.085825,9.391794,0.927831,-4.494544,-4.156100,8.096978,3.231670,8.399436,9.259028]],[[7.327799,-3.539221,7.230483,-7.113335,-2.338043,-8.489807,5.962341,2.649452,2.612820,1.554137,1.797622],[9.978322,9.834332,-9.297033,-0.857767,9.780912,-7.201423,-5.584290,-7.331460,7.767638,-0.860345,0.245076],[-3.635044,-5.610958,4.847207,7.677588,4.064585,0.971984,6.267240,3.104904,9.348733,5.819603,1.419015],[4.565499,-4.035906,-8.514638,6.100343,-1.307547,-1.677501,1.548413,1.749313,5.019078,-9.532008,6.683508]],[[-1.791727,6.258203,-0.361556,2.398859,-9.032773,3.901730,7.662593,1.384862,8.514958,-9.651098,-3.498787],[-2.220806,-7.059021,-7.945518,-2.698774,-6.120486,7.796120,3.584268,-8.484818,2.487499,6.875715,-8.817832],[-5.273513,2.467631,1.347452,-5.340007,-6.504881,4.543613,-7.700740,8.651017,-3.322179,7.621838,5.941054],[5.530518,4.617011,8.713224,5.175710,9.403460,0.930081,8.639811,2.168373,3.578213,-5.167842,-5.987147]],[[-7.169876,-0.340852,-5.579532,-3.826945,-6.031147,0.664785,-3.783875,-6.548729,-9.830012,-9.443085,5.610000],[5.771836,9.950763,-0.878504,1.827741,-6.122203,-0.207638,-1.229142,-6.191828,-0.369592,-0.220911,-3.449514],[-3.876616,-7.540138,-0.867657,8.086803,9.523953,-7.710367,9.885103,-0.873853,-6.047843,-2.390925,2.503561],[8.789763,-9.018839,-1.094945,1.369990,4.331162,-5.629968,7.815832,-9.456098,-5.958789,9.634037,-2.569407]],[[0.635594,4.337381,0.474440,-3.231181,6.544803,-1.280303,5.977130,-8.013653,9.160320,5.912958,-0.574753],[3.623550,8.880708,-3.711412,-4.317366,1.618331,3.339587,4.264441,-0.070208,-8.790075,7.805590,1.697599],[2.866566,-3.435903,-6.178150,-8.129187,-2.713987,6.126095,2.090664,-7.290408,5.549004,5.125960,-7.003940],[3.708393,-4.752464,-7.527708,4.569404,8.844478,-0.397227,4.495685,7.986893,9.143931,3.694884,7.412750]],[[-3.826986,1.815627,6.535990,-5.848497,5.209256,-2.178489,9.799479,-6.951677,1.332408,-6.453571,8.342036],[-7.367539,1.143648,-3.282312,-4.949329,-3.144343,0.010621,-1.008964,-8.375044,-5.840051,6.979728,-1.736259],[-3.328610,3.800731,-7.365685,2.726028,4.702638,-3.599755,4.684565,-0.515243,-3.487854,-2.546635,-1.550840],[-6.774114,4.389201,-7.811495,9.763122,-8.100456,8.829807,1.983910,9.192198,3.618332,-6.928878,3.846947]]], dtype = "float32")#candidate|8153|(11, 4, 11)|const|float32
bop_8154 = relay.bitwise_and(call_8146.astype('int64'), relay.reshape(const_8153.astype('int64'), relay.shape_of(call_8146))) # shape=(11, 4, 11)
bop_8157 = relay.bitwise_and(call_8147.astype('int64'), relay.reshape(const_8153.astype('int64'), relay.shape_of(call_8147))) # shape=(11, 4, 11)
func_7786_call = mod.get_global_var('func_7786')
func_7789_call = mutated_mod.get_global_var('func_7789')
var_8163 = relay.var("var_8163", dtype = "uint8", shape = (240,))#candidate|8163|(240,)|var|uint8
call_8162 = relay.TupleGetItem(func_7786_call(relay.reshape(var_8163.astype('uint8'), [4, 12, 5]), relay.reshape(var_8163.astype('uint8'), [4, 12, 5]), ), 0)
call_8164 = relay.TupleGetItem(func_7789_call(relay.reshape(var_8163.astype('uint8'), [4, 12, 5]), relay.reshape(var_8163.astype('uint8'), [4, 12, 5]), ), 0)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_8180 = relay.TupleGetItem(func_5665_call(), 2)
call_8181 = relay.TupleGetItem(func_5667_call(), 2)
output = relay.Tuple([bop_8154,call_8162,var_8163,call_8180,])
output2 = relay.Tuple([bop_8157,call_8164,var_8163,call_8181,])
func_8182 = relay.Function([var_8163,], output)
mod['func_8182'] = func_8182
mod = relay.transform.InferType()(mod)
var_8183 = relay.var("var_8183", dtype = "uint8", shape = (240,))#candidate|8183|(240,)|var|uint8
output = func_8182(var_8183)
func_8184 = relay.Function([var_8183], output)
mutated_mod['func_8184'] = func_8184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3820_call = mod.get_global_var('func_3820')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_8210 = relay.TupleGetItem(func_3820_call(), 0)
call_8211 = relay.TupleGetItem(func_3822_call(), 0)
func_3683_call = mod.get_global_var('func_3683')
func_3684_call = mutated_mod.get_global_var('func_3684')
call_8226 = relay.TupleGetItem(func_3683_call(), 0)
call_8227 = relay.TupleGetItem(func_3684_call(), 0)
func_2429_call = mod.get_global_var('func_2429')
func_2433_call = mutated_mod.get_global_var('func_2433')
const_8243 = relay.const([True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False], dtype = "bool")#candidate|8243|(40,)|const|bool
call_8242 = relay.TupleGetItem(func_2429_call(relay.reshape(const_8243.astype('bool'), [10, 4]), relay.reshape(const_8243.astype('bool'), [10, 4]), ), 0)
call_8244 = relay.TupleGetItem(func_2433_call(relay.reshape(const_8243.astype('bool'), [10, 4]), relay.reshape(const_8243.astype('bool'), [10, 4]), ), 0)
func_5845_call = mod.get_global_var('func_5845')
func_5847_call = mutated_mod.get_global_var('func_5847')
call_8258 = relay.TupleGetItem(func_5845_call(), 1)
call_8259 = relay.TupleGetItem(func_5847_call(), 1)
output = relay.Tuple([call_8210,call_8226,call_8242,const_8243,call_8258,])
output2 = relay.Tuple([call_8211,call_8227,call_8244,const_8243,call_8259,])
func_8265 = relay.Function([], output)
mod['func_8265'] = func_8265
mod = relay.transform.InferType()(mod)
output = func_8265()
func_8266 = relay.Function([], output)
mutated_mod['func_8266'] = func_8266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7434_call = mod.get_global_var('func_7434')
func_7435_call = mutated_mod.get_global_var('func_7435')
call_8279 = relay.TupleGetItem(func_7434_call(), 2)
call_8280 = relay.TupleGetItem(func_7435_call(), 2)
func_1390_call = mod.get_global_var('func_1390')
func_1393_call = mutated_mod.get_global_var('func_1393')
const_8295 = relay.const([-2.798040,-6.944920,2.388629,-0.866102,-1.846280,-2.209583,-4.568781,-5.231855,-1.106357,-4.659401,0.170389,-7.269888,7.792070,1.889754,4.298917,-2.033780,-4.384582,6.766840,2.349231,-8.729257,9.991791,9.819348,-5.588386,0.194780,7.741343,1.003574,-4.692262,-2.215755,3.005573,-9.082564,-7.017637,-7.081601,1.454114,8.756326,9.137124,-3.145904,-5.346639,-7.554264,2.149885,0.488545,-6.138861,-6.208713,-6.006137,-2.511003,-9.150126,9.364598,2.770717,3.706158,5.386205,3.022455,-4.288360,4.837029,2.664747,-1.046761,4.448990,-7.524630,-0.034263,-3.637552,6.957896,-2.107438,0.331790,6.885644,9.929496,5.212784,3.364350,-4.989471,0.847236,-6.778899,5.375234,2.324727,-1.382831,-4.539893,-2.614178,-7.682529,6.080597,-8.358578,-2.152631,2.407413,-6.666736,-4.681322,8.725340,-8.172993,-9.435646,-3.663115,4.187060,-7.297227,5.396703,-2.664550,5.443147,8.152257,-0.956844,3.439310,8.640633,-0.330974,5.246250,6.873635,0.694054,2.180505,-0.403674,-2.429247,-3.187789,-2.793968,2.770042,7.294161,5.418465,-2.526915,-7.411762,-2.645759,-3.150328,-0.435148,3.187103,3.490211,0.989588,-1.225342,-2.472050,3.747809,4.109209,-0.001422,-4.358419,5.623494,-3.673205,2.470427,9.325717,0.819006,5.331312,9.931245,0.229617,4.622488,-8.081544,8.104809,-5.942325,4.897527,-8.287901,3.656233,3.641793,-1.004761,-8.132748,8.650162,6.304433,6.737691,-5.115440,7.212430,9.639302,-6.263732,-8.365086,-5.771396,-9.595748,-2.589521,6.577400,3.436857,-7.177459,4.956735,-8.893535,-9.829923,6.951021,-4.374694,-9.457364,5.602575,-2.710928,3.498217,4.983645,-0.594558,7.543587,-0.485495,-6.293659,-3.577139,7.963969,4.491595,-1.218522,5.618993,0.022309,9.850888,8.395260,-1.428439,-0.097471,-0.957482,0.040009,2.552303,4.322772,-2.195888,3.299317,-9.631749,-9.169799,-5.780017,3.039875,-5.778173,2.440260,3.871035,-0.201468,4.691879,6.694743,3.361832,-4.455375,-4.479660,-8.701721,2.885570,2.394082,0.687909,2.236162,-3.183774,5.819940,5.931370,-6.318014,-3.176771,-9.851990,1.106454,4.371102,5.149900,6.872319,-6.613284,-9.827690,8.546450,1.455607,4.431532,8.481598,-0.924095,-0.758893,2.560341,-1.894734,5.582923,1.549175,-1.514757,4.658403,-3.168950,8.408166,1.601674,-4.705718,0.881641,3.133741,-0.565172,-3.414880,1.145114,1.287745,9.192581,-3.238017,-1.863217,4.365817,0.567343,-3.039404,5.065341], dtype = "float64")#candidate|8295|(240,)|const|float64
call_8294 = func_1390_call(relay.reshape(const_8295.astype('float64'), [8, 3, 10]))
call_8296 = func_1390_call(relay.reshape(const_8295.astype('float64'), [8, 3, 10]))
func_3314_call = mod.get_global_var('func_3314')
func_3318_call = mutated_mod.get_global_var('func_3318')
var_8302 = relay.var("var_8302", dtype = "float64", shape = (780,))#candidate|8302|(780,)|var|float64
call_8301 = relay.TupleGetItem(func_3314_call(relay.reshape(var_8302.astype('float64'), [4, 15, 13]), relay.reshape(var_8302.astype('float64'), [4, 15, 13]), ), 1)
call_8303 = relay.TupleGetItem(func_3318_call(relay.reshape(var_8302.astype('float64'), [4, 15, 13]), relay.reshape(var_8302.astype('float64'), [4, 15, 13]), ), 1)
output = relay.Tuple([call_8279,call_8294,const_8295,call_8301,var_8302,])
output2 = relay.Tuple([call_8280,call_8296,const_8295,call_8303,var_8302,])
func_8307 = relay.Function([var_8302,], output)
mod['func_8307'] = func_8307
mod = relay.transform.InferType()(mod)
mutated_mod['func_8307'] = func_8307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8308 = relay.var("var_8308", dtype = "float64", shape = (780,))#candidate|8308|(780,)|var|float64
func_8307_call = mutated_mod.get_global_var('func_8307')
call_8309 = func_8307_call(var_8308)
output = call_8309
func_8310 = relay.Function([var_8308], output)
mutated_mod['func_8310'] = func_8310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_8329 = relay.TupleGetItem(func_5244_call(), 0)
call_8330 = relay.TupleGetItem(func_5245_call(), 0)
var_8356 = relay.var("var_8356", dtype = "uint64", shape = (11, 4, 11))#candidate|8356|(11, 4, 11)|var|uint64
bop_8357 = relay.left_shift(call_8329.astype('int16'), relay.reshape(var_8356.astype('int16'), relay.shape_of(call_8329))) # shape=(11, 4, 11)
bop_8360 = relay.left_shift(call_8330.astype('int16'), relay.reshape(var_8356.astype('int16'), relay.shape_of(call_8330))) # shape=(11, 4, 11)
func_7054_call = mod.get_global_var('func_7054')
func_7057_call = mutated_mod.get_global_var('func_7057')
var_8362 = relay.var("var_8362", dtype = "int64", shape = (1920,))#candidate|8362|(1920,)|var|int64
call_8361 = relay.TupleGetItem(func_7054_call(relay.reshape(var_8362.astype('int64'), [16, 12, 10]), relay.reshape(var_8362.astype('int64'), [16, 12, 10]), ), 2)
call_8363 = relay.TupleGetItem(func_7057_call(relay.reshape(var_8362.astype('int64'), [16, 12, 10]), relay.reshape(var_8362.astype('int64'), [16, 12, 10]), ), 2)
output = relay.Tuple([bop_8357,call_8361,var_8362,])
output2 = relay.Tuple([bop_8360,call_8363,var_8362,])
func_8375 = relay.Function([var_8356,var_8362,], output)
mod['func_8375'] = func_8375
mod = relay.transform.InferType()(mod)
var_8376 = relay.var("var_8376", dtype = "uint64", shape = (11, 4, 11))#candidate|8376|(11, 4, 11)|var|uint64
var_8377 = relay.var("var_8377", dtype = "int64", shape = (1920,))#candidate|8377|(1920,)|var|int64
output = func_8375(var_8376,var_8377,)
func_8378 = relay.Function([var_8376,var_8377,], output)
mutated_mod['func_8378'] = func_8378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8425 = relay.var("var_8425", dtype = "uint16", shape = (13, 13, 2))#candidate|8425|(13, 13, 2)|var|uint16
var_8426 = relay.var("var_8426", dtype = "uint16", shape = (13, 13, 2))#candidate|8426|(13, 13, 2)|var|uint16
bop_8427 = relay.greater(var_8425.astype('bool'), relay.reshape(var_8426.astype('bool'), relay.shape_of(var_8425))) # shape=(13, 13, 2)
output = bop_8427
output2 = bop_8427
func_8434 = relay.Function([var_8425,var_8426,], output)
mod['func_8434'] = func_8434
mod = relay.transform.InferType()(mod)
var_8435 = relay.var("var_8435", dtype = "uint16", shape = (13, 13, 2))#candidate|8435|(13, 13, 2)|var|uint16
var_8436 = relay.var("var_8436", dtype = "uint16", shape = (13, 13, 2))#candidate|8436|(13, 13, 2)|var|uint16
output = func_8434(var_8435,var_8436,)
func_8437 = relay.Function([var_8435,var_8436,], output)
mutated_mod['func_8437'] = func_8437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_8451 = relay.TupleGetItem(func_3511_call(), 1)
call_8452 = relay.TupleGetItem(func_3512_call(), 1)
var_8473 = relay.var("var_8473", dtype = "float64", shape = (11, 4, 11))#candidate|8473|(11, 4, 11)|var|float64
bop_8474 = relay.bitwise_or(call_8451.astype('int8'), relay.reshape(var_8473.astype('int8'), relay.shape_of(call_8451))) # shape=(11, 4, 11)
bop_8477 = relay.bitwise_or(call_8452.astype('int8'), relay.reshape(var_8473.astype('int8'), relay.shape_of(call_8452))) # shape=(11, 4, 11)
func_7235_call = mod.get_global_var('func_7235')
func_7237_call = mutated_mod.get_global_var('func_7237')
call_8486 = relay.TupleGetItem(func_7235_call(), 1)
call_8487 = relay.TupleGetItem(func_7237_call(), 1)
func_7133_call = mod.get_global_var('func_7133')
func_7136_call = mutated_mod.get_global_var('func_7136')
call_8490 = relay.TupleGetItem(func_7133_call(relay.reshape(var_8473.astype('bool'), [484, 1])), 2)
call_8491 = relay.TupleGetItem(func_7136_call(relay.reshape(var_8473.astype('bool'), [484, 1])), 2)
func_3601_call = mod.get_global_var('func_3601')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_8492 = relay.TupleGetItem(func_3601_call(), 0)
call_8493 = relay.TupleGetItem(func_3603_call(), 0)
const_8494 = relay.const([[[4,6,4,-8,1,-4,2,-5,-6,7,-8],[-1,-2,4,-7,-7,2,6,9,3,-6,7],[7,-7,4,-8,-10,-1,10,-10,6,7,1],[4,-1,-9,3,7,10,3,-9,-8,8,9]],[[9,-6,-5,4,10,5,4,8,-10,7,10],[-5,1,-6,-5,10,2,-10,10,-4,-10,2],[5,-1,-5,-6,-8,-4,4,-9,-4,-4,2],[-5,8,5,-10,-1,-4,-9,-1,-6,6,8]],[[-1,-1,-4,1,-9,-10,-6,6,-1,1,9],[6,7,-9,-5,10,-3,-9,6,-5,-6,3],[-10,-8,-5,-8,-2,-6,-8,9,3,-9,2],[3,6,4,-3,-4,5,-5,4,5,-8,3]],[[8,-1,-1,7,-6,1,8,-6,2,5,-3],[-8,-6,2,-5,-9,-7,6,-1,-3,-5,9],[-2,6,6,-3,-4,5,-5,-3,2,-7,-4],[-8,8,-10,-8,8,-7,-7,-8,9,5,-1]],[[2,3,5,4,-5,-4,6,7,4,-7,2],[3,6,1,7,2,-5,5,4,-1,10,3],[-9,1,8,6,1,1,3,-7,-3,2,-3],[-9,-4,6,-6,-1,9,-2,-9,-8,-10,-8]],[[-10,-5,-3,2,2,4,4,2,-1,6,-7],[9,-9,-8,8,1,-10,-3,-3,-10,-6,3],[-6,-9,1,7,6,-6,2,3,10,8,-2],[5,-5,2,-1,1,-1,-2,-8,10,6,-8]],[[-10,8,6,-9,8,2,9,5,9,7,10],[2,-10,-3,-10,5,-1,1,-1,-4,6,-2],[-1,5,5,-10,3,3,8,-10,-5,10,7],[5,-4,9,-6,5,8,-5,-3,-7,1,-10]],[[4,-7,4,-8,9,-1,10,-2,-8,4,-6],[8,6,-8,5,-5,-7,-9,10,-3,9,-3],[-3,7,-2,9,10,9,-5,2,-4,-9,9],[-3,-5,7,10,5,7,-5,3,-6,1,8]],[[2,-6,-6,7,-2,4,5,-3,5,6,-2],[-8,-5,7,-10,2,6,6,10,9,4,-3],[-9,3,6,4,2,-2,-6,1,-5,-8,8],[7,9,-3,-1,3,-3,-2,6,7,-9,5]],[[10,-3,-8,8,-9,5,10,3,4,-1,-10],[6,-10,6,-1,-5,6,6,1,9,10,7],[1,1,-6,4,5,4,2,5,2,4,9],[9,7,-9,-1,5,8,9,8,2,3,9]],[[7,-9,-5,4,-5,6,-2,-9,3,8,9],[7,-3,9,4,-1,5,7,-5,3,-7,-1],[4,-1,3,-10,9,8,-6,-5,-8,-1,-8],[-2,-3,-2,4,7,-5,-6,-10,-1,-8,10]]], dtype = "int8")#candidate|8494|(11, 4, 11)|const|int8
bop_8495 = relay.greater_equal(bop_8474.astype('bool'), relay.reshape(const_8494.astype('bool'), relay.shape_of(bop_8474))) # shape=(11, 4, 11)
bop_8498 = relay.greater_equal(bop_8477.astype('bool'), relay.reshape(const_8494.astype('bool'), relay.shape_of(bop_8477))) # shape=(11, 4, 11)
func_8307_call = mod.get_global_var('func_8307')
func_8310_call = mutated_mod.get_global_var('func_8310')
const_8516 = relay.const([-9.721186,-4.103712,-4.479390,-0.128282,-7.453917,5.200326,-5.968130,7.022528,-7.727792,9.378870,-7.657273,4.221219,-2.029596,5.537480,4.934289,3.555119,-7.611944,-6.798990,2.396021,-2.344512,-9.402085,-8.289296,-6.562970,-4.048437,5.652617,8.190855,2.683610,-6.759835,7.372932,6.273616,6.997366,-5.046988,-9.849188,-4.462225,-1.327149,7.371756,-4.312762,1.424398,-0.555285,0.911383,0.979314,0.921082,8.224725,-8.543408,-8.069238,-4.110854,-0.112568,0.684441,6.028280,8.085744,6.000884,0.054847,-1.811298,-5.538191,-1.472771,-3.067957,-5.519790,-6.683801,9.582660,-1.290433,9.246913,2.428579,-1.494538,-5.642186,-3.352976,5.158704,6.505047,0.711885,0.072003,-6.286445,-6.263154,0.926411,-5.592117,-9.637693,-1.228146,4.561937,8.524031,-8.401808,-2.219849,-5.407756,-1.647979,-2.455389,-7.424333,7.130593,4.170905,9.070365,-5.794530,2.515537,9.286752,-0.095853,-2.727045,9.672774,-7.728077,9.028419,-5.253535,8.188508,3.878004,-6.962613,3.137017,1.211862,8.778170,-8.527326,5.531651,7.955918,-9.418241,8.719714,7.800982,-2.065336,-6.664155,-0.337934,5.707897,2.426427,7.050791,-0.503105,3.783621,-1.300170,0.964829,-8.295964,-5.366827,7.673829,6.137493,3.178677,4.370349,-1.076541,-7.727854,-9.033481,-9.622205,-1.056265,-9.031476,-4.610339,3.173256,-1.114605,-8.382809,6.229185,-0.155284,3.812930,1.286722,3.140070,-3.884553,-2.177424,-3.590808,6.628347,-0.254914,8.404171,-6.305647,-0.368248,-4.823496,-0.529352,9.835938,8.875533,-2.516833,5.511003,9.655292,-7.989153,-6.144434,-5.197922,-7.461681,6.512421,-7.396270,4.141070,6.784102,-6.460324,-1.388508,-7.926211,-4.394048,-7.518002,-3.428686,1.650029,-4.081409,5.252895,-0.654718,6.007039,5.014727,-2.207503,4.731775,5.298965,8.804825,-1.449601,-5.309057,-6.041160,-6.652010,-0.975065,-5.972109,4.608472,7.617586,-0.868675,-3.923446,-8.749989,-1.662673,6.871355,-3.500666,-6.923177,-2.554954,-9.623306,4.894703,-4.465349,8.665037,-7.478814,-8.098489,-8.723907,2.286620,7.937123,-6.647203,5.635412,-8.583927,2.017248,6.508471,1.581975,-6.010460,1.233942,-2.185258,-5.890269,-7.971846,6.040202,-5.465248,-3.774930,-0.770584,9.889838,-3.749764,-4.365751,-4.788565,5.766486,7.345397,8.035060,-7.167538,-4.934054,-8.252313,-2.754373,2.886923,7.105560,0.568754,9.111639,-1.182514,7.631943,-6.585957,6.050759,3.649151,-8.170908,8.947467,-0.901406,-2.794866,-1.739823,2.119400,0.099403,8.178148,-7.898846,7.760231,-8.101866,5.279632,-8.751779,9.178890,-7.721370,-0.886978,-8.515055,-0.937834,-3.846742,8.513637,-1.737384,2.334944,0.687544,-6.536047,-0.451994,-9.960803,7.478139,-8.340252,2.309898,-1.276976,-8.401529,-8.626969,-6.101114,5.995817,-4.844744,-0.886458,-3.429512,-2.301066,-8.259530,6.541076,-7.249958,4.034803,5.817275,7.137286,-0.032233,-5.218500,9.418971,7.731391,-4.032665,-9.544973,0.524598,3.040857,-2.609857,7.200771,-2.931102,6.703182,-4.174323,7.557240,-1.851306,-1.383947,-9.689901,5.336863,-2.093097,9.640075,-9.290305,2.198467,-4.877947,6.957676,-4.715468,9.307808,2.532308,-7.628708,-1.879560,-0.906741,-6.669125,3.709853,7.348483,-8.899752,2.583983,-1.408159,5.034091,6.569773,-6.378350,9.010610,2.292424,-7.421172,0.824999,9.066007,-7.931410,2.164323,-3.894430,3.808225,9.477825,9.229390,0.767237,-7.905778,0.947446,0.810930,-7.970045,6.534593,7.249447,5.960697,-5.279897,-8.892614,-9.452092,7.962554,-5.378272,-2.776783,5.290082,-0.024303,-3.144248,9.493228,-3.001426,9.454477,7.176530,7.553056,-9.788552,-0.217597,1.419397,4.253450,-3.039855,-7.226853,7.184774,-7.453183,3.506854,-8.738588,-3.792822,5.310639,-2.327499,1.714096,9.213588,-5.840343,4.397765,-5.494685,-2.971657,-6.418768,4.536496,2.743549,-1.731846,4.538740,6.250354,4.289185,8.319456,-8.495293,0.555256,-6.422533,-9.505668,8.137377,2.401961,-8.248338,1.805805,-4.924690,-2.701106,-2.239563,7.920021,-9.509844,3.951195,-3.176834,-5.546153,-6.944461,4.511626,0.196051,0.008436,9.161329,-8.648338,-2.485605,5.823800,-8.126561,3.416294,-7.406664,-3.459558,3.653494,-7.315502,6.549537,-9.694275,-8.971450,-7.332927,-3.303397,-3.251127,-0.357128,7.160473,3.513404,0.384346,-4.895732,-8.037512,5.854163,3.346035,-2.886515,8.008158,5.174201,6.746626,1.965652,6.136607,4.858907,4.801150,-7.413400,1.548021,4.467350,-2.746215,0.627568,-2.761542,7.705980,4.795536,6.100656,1.180088,-9.940184,3.781635,-8.088474,1.392120,-3.169022,8.189125,-6.606174,-1.003418,3.015269,7.276830,5.336388,-4.811065,-5.297770,-4.183066,-4.150562,-0.578521,-3.249546,-6.122232,-0.105725,3.375384,-2.884006,9.273790,4.674783,6.552513,-5.413984,5.217592,-2.221887,5.081914,8.275651,3.769394,6.035709,-8.824878,3.520308,7.090307,7.760500,-0.320137,6.599862,-4.006300,-3.486711,-6.354319,-4.244691,-3.760521,3.697183,0.744371,-7.254793,-7.505018,-0.144943,5.381263,2.050378,5.301117,2.480285,-3.732541,-7.265455,3.079636,-6.823108,4.335129,8.675312,-5.902900,3.817878,6.015022,-3.464319,-6.656674,7.820933,-6.442866,-2.648153,2.313570,2.011760,-9.037517,-1.598246,-0.351185,5.644185,9.911180,-8.859030,0.269469,-7.896491,8.511376,-0.287131,8.341526,1.412924,-3.982705,-5.355094,-9.539155,-2.618329,9.421554,-0.886258,7.187671,9.280211,7.916014,-1.386439,-1.574913,0.133134,5.380950,4.977041,7.498993,-6.355801,-8.968624,6.612467,9.545575,5.651808,-8.371485,-4.604513,-3.509169,1.391034,1.455341,-5.057400,-7.206178,1.127239,-5.296445,-6.473185,-8.007728,5.332350,4.487509,1.116493,-5.731786,2.286470,-1.554018,6.204667,-0.235362,-2.364688,-3.950713,9.888839,4.077940,2.862051,0.231279,3.079180,-0.487544,-3.658838,-7.328314,-2.795530,-7.651436,9.699182,-7.583950,1.213582,6.046987,-5.661753,5.766324,-8.255831,9.327825,-9.128551,-6.896471,-3.814918,-0.015285,-4.074740,-9.171984,-1.859708,1.275154,3.225876,-5.659923,-3.263627,3.383231,9.673933,-8.029547,3.112278,8.650435,-8.430908,8.175392,5.898250,4.418247,-6.091418,-2.251523,-4.652450,8.385941,6.769256,0.998585,2.875987,5.152828,1.874062,2.941716,3.371715,-3.867939,-0.642141,-6.334907,7.398959,6.241816,1.855631,-3.905521,4.500985,1.912464,0.810080,-2.398104,4.196347,-0.956302,0.161393,0.753777,-5.699369,-5.896088,-1.529860,-1.498208,-9.080875,6.698412,-5.967256,-4.357213,8.225721,-1.375075,-9.562435,-6.667650,-3.782023,-3.851728,-7.823550,-0.811202,4.645757,3.403608,7.112307,3.865476,3.703499,7.029619,5.082679,-4.390136,-7.795892,6.969047,8.835175,-3.693239,-7.897367,-4.681834,3.661107,-8.741206,9.217791,-7.811714,9.917488,3.376246,-9.564082,-0.994598,-9.033749,1.123332,-6.226244,2.359566,-9.253045,7.088695,-3.086801,3.310545,5.352295,-4.922469,3.787169,7.704503,-2.666596,1.122247,-2.026714,-8.253658,-9.065421,8.070639,3.003091,7.804275,-6.914699,-9.252889,-0.966687,-8.293651,2.942149,-3.906568,1.552829,-0.541248,-8.909086,1.799701,3.818880,1.937224,5.440260,-8.517784,8.647958,-0.268956,3.349445,-6.413137,-9.870165,2.920792,8.923215,-6.967618,7.432309,8.195737,-6.185285,-1.437270,-3.340639,-8.291264,-7.003921,-4.598857,-7.459865,-4.197989,-8.673926,3.160251,7.041596,-4.643972,-7.862297,-2.645823,1.322301,-0.963191,-5.977962,-9.732228,-4.871221,-4.833949,4.950014,9.977317,0.853214,9.309202,-2.589564,-2.016092,9.025121,9.150290,3.258024,-9.223787,5.588249,-5.424689,8.425958,-0.810908,4.862749,3.793929,-0.523577,-1.829819,-1.684305,5.964791,-4.962154,-7.749119,-5.715194,-9.471177,9.874268,2.193289,4.791334,-5.150146,-6.572197,-6.012987,4.949117,-1.679694,-0.105094,4.124610,8.967742,-7.435226,-8.171038,0.247926,-2.308616,-4.156167,-2.525570,-7.761208,-7.103081,9.805887,4.481676,-3.734540,0.302972,-0.867653,-1.422132,-0.331737,-9.413476,9.973675], dtype = "float64")#candidate|8516|(780,)|const|float64
call_8515 = relay.TupleGetItem(func_8307_call(relay.reshape(const_8516.astype('float64'), [780,])), 3)
call_8517 = relay.TupleGetItem(func_8310_call(relay.reshape(const_8516.astype('float64'), [780,])), 3)
func_3918_call = mod.get_global_var('func_3918')
func_3920_call = mutated_mod.get_global_var('func_3920')
call_8519 = func_3918_call()
call_8520 = func_3918_call()
output = relay.Tuple([call_8486,call_8490,call_8492,bop_8495,call_8515,const_8516,call_8519,])
output2 = relay.Tuple([call_8487,call_8491,call_8493,bop_8498,call_8517,const_8516,call_8520,])
func_8570 = relay.Function([var_8473,], output)
mod['func_8570'] = func_8570
mod = relay.transform.InferType()(mod)
var_8571 = relay.var("var_8571", dtype = "float64", shape = (11, 4, 11))#candidate|8571|(11, 4, 11)|var|float64
output = func_8570(var_8571)
func_8572 = relay.Function([var_8571], output)
mutated_mod['func_8572'] = func_8572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7308_call = mod.get_global_var('func_7308')
func_7309_call = mutated_mod.get_global_var('func_7309')
call_8576 = relay.TupleGetItem(func_7308_call(), 0)
call_8577 = relay.TupleGetItem(func_7309_call(), 0)
output = relay.Tuple([call_8576,])
output2 = relay.Tuple([call_8577,])
func_8583 = relay.Function([], output)
mod['func_8583'] = func_8583
mod = relay.transform.InferType()(mod)
output = func_8583()
func_8584 = relay.Function([], output)
mutated_mod['func_8584'] = func_8584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_8585 = func_2710_call()
call_8586 = func_2710_call()
func_4691_call = mod.get_global_var('func_4691')
func_4693_call = mutated_mod.get_global_var('func_4693')
call_8587 = func_4691_call()
call_8588 = func_4691_call()
func_3683_call = mod.get_global_var('func_3683')
func_3684_call = mutated_mod.get_global_var('func_3684')
call_8622 = relay.TupleGetItem(func_3683_call(), 0)
call_8623 = relay.TupleGetItem(func_3684_call(), 0)
func_5466_call = mod.get_global_var('func_5466')
func_5468_call = mutated_mod.get_global_var('func_5468')
call_8633 = func_5466_call()
call_8634 = func_5466_call()
output = relay.Tuple([call_8585,call_8587,call_8622,call_8633,])
output2 = relay.Tuple([call_8586,call_8588,call_8623,call_8634,])
func_8644 = relay.Function([], output)
mod['func_8644'] = func_8644
mod = relay.transform.InferType()(mod)
mutated_mod['func_8644'] = func_8644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mutated_mod.get_global_var('func_8644')
call_8645 = func_8644_call()
output = call_8645
func_8646 = relay.Function([], output)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8757 = relay.var("var_8757", dtype = "float32", shape = (1, 5, 2))#candidate|8757|(1, 5, 2)|var|float32
uop_8758 = relay.sqrt(var_8757.astype('float32')) # shape=(1, 5, 2)
uop_8763 = relay.tan(uop_8758.astype('float32')) # shape=(1, 5, 2)
bop_8770 = relay.bitwise_and(uop_8763.astype('int64'), relay.reshape(uop_8758.astype('int64'), relay.shape_of(uop_8763))) # shape=(1, 5, 2)
func_6574_call = mod.get_global_var('func_6574')
func_6576_call = mutated_mod.get_global_var('func_6576')
call_8773 = func_6574_call()
call_8774 = func_6574_call()
bop_8784 = relay.less(var_8757.astype('bool'), relay.reshape(bop_8770.astype('bool'), relay.shape_of(var_8757))) # shape=(1, 5, 2)
output = relay.Tuple([call_8773,bop_8784,])
output2 = relay.Tuple([call_8774,bop_8784,])
func_8788 = relay.Function([var_8757,], output)
mod['func_8788'] = func_8788
mod = relay.transform.InferType()(mod)
var_8789 = relay.var("var_8789", dtype = "float32", shape = (1, 5, 2))#candidate|8789|(1, 5, 2)|var|float32
output = func_8788(var_8789)
func_8790 = relay.Function([var_8789], output)
mutated_mod['func_8790'] = func_8790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8117_call = mod.get_global_var('func_8117')
func_8119_call = mutated_mod.get_global_var('func_8119')
call_8792 = relay.TupleGetItem(func_8117_call(), 3)
call_8793 = relay.TupleGetItem(func_8119_call(), 3)
output = call_8792
output2 = call_8793
func_8805 = relay.Function([], output)
mod['func_8805'] = func_8805
mod = relay.transform.InferType()(mod)
output = func_8805()
func_8806 = relay.Function([], output)
mutated_mod['func_8806'] = func_8806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_8852 = relay.TupleGetItem(func_5665_call(), 1)
call_8853 = relay.TupleGetItem(func_5667_call(), 1)
func_3511_call = mod.get_global_var('func_3511')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_8854 = relay.TupleGetItem(func_3511_call(), 1)
call_8855 = relay.TupleGetItem(func_3512_call(), 1)
output = relay.Tuple([call_8852,call_8854,])
output2 = relay.Tuple([call_8853,call_8855,])
func_8866 = relay.Function([], output)
mod['func_8866'] = func_8866
mod = relay.transform.InferType()(mod)
mutated_mod['func_8866'] = func_8866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8866_call = mutated_mod.get_global_var('func_8866')
call_8867 = func_8866_call()
output = call_8867
func_8868 = relay.Function([], output)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8880 = relay.const([[[-5.232286,5.704059,0.110493,-8.235135,0.700506,5.643816,6.422586,4.189167,8.019447],[0.240923,0.654014,-2.138015,-8.004279,-6.276808,-1.001735,-1.574474,0.625465,0.928224],[-6.011888,-0.802407,8.249479,2.794605,6.255362,1.775012,1.869386,6.075163,-8.923904],[5.736410,-6.691149,-4.310006,7.157298,0.305322,2.898064,5.837549,-5.836918,4.226553],[-5.872254,-5.495990,-9.891585,-9.791862,-2.936880,-4.739757,6.401835,8.046836,6.205266],[0.828230,3.533362,-4.630025,7.136535,-0.505015,0.581603,8.812315,6.698015,0.473966],[-8.207922,4.346295,4.562498,4.365305,5.399385,-2.352761,9.528125,3.840262,-0.310597],[0.045221,4.019384,7.969814,5.204765,-4.327554,-5.479266,-5.715188,8.589406,-7.667649],[-3.039943,-1.747957,-5.350497,-7.410697,-5.552192,-2.185175,2.227782,-2.081192,-3.690180],[3.808050,3.568941,-3.672740,6.440735,-8.068269,-7.665396,-1.852141,-7.231458,-1.416830],[9.340954,-1.054155,-0.620538,6.604999,-2.399248,-8.228506,3.246841,1.781297,-2.091680],[6.771916,-0.830084,-1.608595,-5.379224,4.038669,1.209778,0.624661,7.325247,-1.637117],[1.283994,9.682987,-8.976787,-2.970528,-9.466936,-9.598068,4.833513,-0.395916,1.650377],[-5.846405,7.692346,-6.695243,1.224267,-8.166756,-5.903832,-2.458833,-3.568074,5.828750],[7.107589,-7.313970,8.621837,-2.550327,-3.154142,0.145083,-1.858397,2.241998,9.143251]],[[-5.206256,-2.489657,9.433847,-9.471058,-5.179036,-9.785607,7.804261,7.267571,4.967645],[-8.676934,5.128408,-2.823440,-5.455133,-4.295155,1.689819,9.581827,-1.758563,-5.818554],[-5.113919,1.054716,4.167312,2.172758,5.025550,-3.735622,7.055380,2.974100,-1.460675],[7.220439,-7.221943,-4.176197,-2.704549,0.625147,2.526701,-0.156553,-5.829277,-9.157877],[4.477079,-1.433897,-1.344810,9.815001,6.957480,-8.827281,9.924390,-3.166038,6.543900],[4.972231,4.073314,-6.835819,-8.222204,-9.188220,-6.268959,-2.714998,-2.924684,4.863355],[6.899818,8.078374,3.149274,-8.960408,9.603753,-1.592097,-6.678503,-5.990356,-1.371596],[-9.917096,-8.229236,-3.990507,-7.877987,-4.364667,8.956675,4.514252,9.217673,-4.370870],[6.073653,1.028340,0.099712,2.065012,6.456036,0.266676,7.555206,-7.348297,0.844809],[-9.156339,0.751565,-8.910658,-6.405516,0.527232,-1.131412,-7.254089,1.949696,6.154933],[2.093828,-5.382350,-0.845619,6.387832,6.934378,9.977035,-0.285034,-3.076821,9.149732],[-8.867109,2.656348,9.406567,8.150831,2.733172,0.116859,-5.159527,3.491118,0.720017],[-6.524997,1.140462,-6.308597,-9.380569,5.618200,-1.283510,-1.774153,-2.562139,-3.459668],[8.310289,-3.035181,-8.391169,3.546661,-2.244256,5.941647,0.069456,-9.324756,-0.692629],[9.460041,0.929502,0.783278,0.659109,4.678966,5.291432,7.063131,5.337509,9.188462]],[[9.382879,-5.551783,-1.316215,1.100727,-5.890242,-9.003018,-6.145715,7.065149,-9.500879],[1.418193,-5.674135,-3.072807,5.088220,6.341213,9.976036,-4.301852,0.274341,-9.620325],[1.648833,5.908511,-0.768133,-5.626708,-5.795822,-7.955185,-5.981046,-7.469954,-5.940847],[5.600047,2.749379,7.805071,8.452648,9.243106,-2.159504,-3.282026,-5.277316,2.832884],[-7.353408,5.609805,-9.511004,4.050253,-6.439784,3.294767,-4.700842,-1.280052,2.463796],[-8.509689,7.810964,-2.724035,-6.895258,8.011380,-6.099516,7.545571,-0.353360,9.100631],[-6.405742,-7.670500,3.484451,-4.328336,-1.863593,2.882595,-1.722547,-2.774714,8.400875],[0.201050,-8.543545,-3.990840,-7.380047,1.524587,2.637449,5.919295,3.256469,-4.386209],[5.678267,8.759223,0.948633,-6.721058,-0.885961,9.242682,0.181839,6.652307,-7.513487],[-6.311103,8.612647,4.470308,2.466565,0.046136,-8.870675,9.133463,-0.309222,4.125107],[2.714674,2.423245,5.660571,5.844402,0.354282,-8.790468,4.735637,-4.538175,-0.397761],[4.233956,-4.368237,-1.472222,-1.151162,3.822728,-3.431921,-5.450129,-0.810924,-0.483345],[-4.767174,-1.696768,-3.347811,8.673776,8.833970,0.667986,-9.362517,6.161443,6.504035],[5.996540,4.379856,-0.995532,-2.333022,7.760774,-8.460323,-8.061171,-1.002600,-5.767147],[5.879349,-6.618839,-1.617196,-6.212797,-3.572458,4.518289,3.227049,4.097729,7.243391]]], dtype = "float64")#candidate|8880|(3, 15, 9)|const|float64
uop_8881 = relay.erf(const_8880.astype('float64')) # shape=(3, 15, 9)
func_3020_call = mod.get_global_var('func_3020')
func_3024_call = mutated_mod.get_global_var('func_3024')
const_8903 = relay.const(-3, dtype = "int16")#candidate|8903|()|const|int16
var_8904 = relay.var("var_8904", dtype = "int16", shape = (468,))#candidate|8904|(468,)|var|int16
call_8902 = relay.TupleGetItem(func_3020_call(relay.reshape(const_8903.astype('int16'), []), relay.reshape(var_8904.astype('int16'), [468, 1]), ), 8)
call_8905 = relay.TupleGetItem(func_3024_call(relay.reshape(const_8903.astype('int16'), []), relay.reshape(var_8904.astype('int16'), [468, 1]), ), 8)
func_4174_call = mod.get_global_var('func_4174')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_8908 = relay.TupleGetItem(func_4174_call(), 0)
call_8909 = relay.TupleGetItem(func_4175_call(), 0)
uop_8918 = relay.cos(const_8880.astype('float64')) # shape=(3, 15, 9)
const_8927 = relay.const([[[9.785575,-7.787058,-3.199985,-5.317235,-8.158453,6.328092,4.813727,-4.229754,-8.737554],[2.425732,6.916628,-5.385432,-9.822752,1.141722,-1.104162,-0.847062,5.294598,5.356344],[-6.657798,-1.308496,-6.601340,-3.839488,9.026826,0.840626,-4.721629,-7.242324,6.381683],[5.430488,8.795253,3.790039,5.284630,-2.854213,4.965640,-6.967722,1.620195,-8.060851],[0.559109,4.826825,3.611458,-0.550842,0.386529,-8.835126,-5.672290,0.190564,-6.536866],[9.488576,-8.057792,-2.013389,9.317412,5.622770,4.142859,8.795748,2.275998,3.995931],[1.303258,-7.267385,-6.057506,2.971602,-8.336514,1.755127,-5.663663,5.923993,-4.229490],[-0.896981,-8.668534,-6.822847,3.039163,-0.831198,9.079007,-9.014220,-1.254316,2.171060],[6.168347,7.892142,5.260387,-2.496790,5.822263,0.679711,-2.955549,-3.741714,1.941699],[-4.624255,-9.840892,5.684825,1.616161,-0.020087,4.212575,-7.744045,-6.340987,-6.796211],[-3.109876,3.824640,-2.175561,3.041711,-7.087041,-3.921373,8.529124,9.067441,1.715242],[3.720077,-6.898509,-4.986395,5.689779,-0.313876,-3.926441,-7.542250,2.459931,3.360763],[-2.464366,-4.014760,-4.844223,-8.169339,-6.241851,4.798632,9.969949,-4.529602,-5.690115],[8.342347,8.705238,9.770578,-7.343739,2.664081,-7.398243,-7.675670,4.289679,8.231549],[5.008962,5.605594,8.506053,6.449744,1.951486,-1.836730,3.207548,-6.426494,0.894087]],[[-8.296080,3.105075,-8.348768,-6.611220,-5.343023,5.924908,1.887347,4.268178,-6.979750],[6.438748,3.905963,6.914431,-2.994835,6.334331,-7.532908,7.330541,2.281407,-7.887364],[-3.114704,-8.107857,-7.538225,-6.412704,-1.517875,4.990363,1.107599,-2.889990,8.757155],[-3.550184,-1.846448,-0.097478,3.731126,-9.606938,-9.730613,-3.285147,3.670950,4.686121],[-9.650492,-0.757973,-7.457807,-2.881426,-4.430073,-8.624321,-9.707593,-9.122355,4.186077],[5.978127,-1.179213,4.161443,-4.520754,1.837253,-1.773562,-9.660736,-7.114533,5.362539],[-4.194819,-0.786139,-4.740570,-9.112589,-0.591162,-3.057900,-2.121984,-0.779391,0.117230],[3.451135,3.014424,1.615291,-5.319192,-1.362234,-9.785266,7.504583,6.745038,-0.358802],[-7.397686,1.746633,4.142125,-0.875227,5.539479,-0.688266,-4.393624,3.622453,-0.913617],[7.358341,-8.414053,6.289960,3.187097,4.324489,2.336598,3.801272,-0.798144,-9.361653],[-5.292015,5.538204,7.885183,-0.006943,-4.485769,3.166385,-6.968602,3.623795,-0.409372],[-8.275039,5.431563,7.464343,5.613141,-3.716332,3.737256,0.229847,-5.870003,2.153965],[-0.481141,9.383162,6.374916,8.832938,-1.830887,-9.521439,9.528413,-1.101895,-9.751815],[0.574723,-6.772470,-8.664691,-9.244493,2.625572,-9.641043,-7.054612,-4.831732,1.294039],[-3.129123,-9.285295,4.211994,-1.193001,4.617169,6.257757,-1.769428,8.428957,0.243407]],[[-2.845165,2.730039,-8.195033,-2.741018,-8.180877,-4.632932,9.313493,-2.364866,5.473123],[-1.032671,-2.017434,8.464835,-9.935426,5.671436,-4.637128,1.088571,-3.957287,1.102780],[-2.709528,-6.516715,-3.139580,1.374503,8.818643,9.240175,0.305850,-4.091374,4.016781],[-2.234913,7.549969,6.951505,-0.619285,-4.945565,2.025363,7.913271,-4.775037,-4.465053],[-0.943247,-3.879807,8.099442,8.126540,6.612517,4.930280,2.912362,-2.036655,8.367813],[-1.815164,-7.590838,-4.762212,-9.196575,-9.094045,5.316011,-2.484337,-0.117398,-3.919001],[-9.078282,-8.212701,2.435826,3.743745,0.757948,-2.606392,1.877525,-3.532726,9.097841],[-2.018065,-2.627114,-0.789795,7.404488,-1.370945,6.222047,-1.278120,-0.659558,-0.483280],[-9.932925,-0.480311,4.076387,-7.806148,8.400539,1.400555,3.398387,7.651202,-2.445924],[-4.312859,-3.636775,4.222656,9.480741,6.797516,-5.493313,6.618481,8.859328,9.032764],[-8.716605,-7.969266,-0.155526,7.433452,6.243424,-2.697893,-3.993600,3.431148,5.806310],[3.310801,-1.332384,-1.765896,-0.811267,4.901855,7.735335,-7.306283,-3.308524,6.042007],[-7.353980,5.165968,9.987750,9.765099,-8.552101,-7.778620,2.108372,-5.134085,0.251799],[1.520201,-0.133184,6.531798,9.071006,-5.666714,-5.162402,-6.718064,-4.376955,-9.618966],[1.719646,8.516841,5.881267,3.875116,1.306130,-7.556419,-3.896544,-9.751591,7.618615]]], dtype = "float64")#candidate|8927|(3, 15, 9)|const|float64
bop_8928 = relay.minimum(const_8880.astype('int16'), relay.reshape(const_8927.astype('int16'), relay.shape_of(const_8880))) # shape=(3, 15, 9)
var_8936 = relay.var("var_8936", dtype = "float64", shape = (3, 15, 9))#candidate|8936|(3, 15, 9)|var|float64
bop_8937 = relay.logical_xor(uop_8881.astype('int16'), relay.reshape(var_8936.astype('int16'), relay.shape_of(uop_8881))) # shape=(3, 15, 9)
output = relay.Tuple([call_8902,const_8903,var_8904,call_8908,uop_8918,bop_8928,bop_8937,])
output2 = relay.Tuple([call_8905,const_8903,var_8904,call_8909,uop_8918,bop_8928,bop_8937,])
func_8956 = relay.Function([var_8904,var_8936,], output)
mod['func_8956'] = func_8956
mod = relay.transform.InferType()(mod)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8956_call = mutated_mod.get_global_var('func_8956')
var_8958 = relay.var("var_8958", dtype = "int16", shape = (468,))#candidate|8958|(468,)|var|int16
var_8959 = relay.var("var_8959", dtype = "float64", shape = (3, 15, 9))#candidate|8959|(3, 15, 9)|var|float64
call_8957 = func_8956_call(var_8958,var_8959,)
output = call_8957
func_8960 = relay.Function([var_8958,var_8959,], output)
mutated_mod['func_8960'] = func_8960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7308_call = mod.get_global_var('func_7308')
func_7309_call = mutated_mod.get_global_var('func_7309')
call_8965 = relay.TupleGetItem(func_7308_call(), 0)
call_8966 = relay.TupleGetItem(func_7309_call(), 0)
output = call_8965
output2 = call_8966
func_8975 = relay.Function([], output)
mod['func_8975'] = func_8975
mod = relay.transform.InferType()(mod)
output = func_8975()
func_8976 = relay.Function([], output)
mutated_mod['func_8976'] = func_8976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8985 = relay.var("var_8985", dtype = "uint32", shape = (11, 11, 9))#candidate|8985|(11, 11, 9)|var|uint32
var_8986 = relay.var("var_8986", dtype = "uint32", shape = (11, 11, 9))#candidate|8986|(11, 11, 9)|var|uint32
bop_8987 = relay.logical_xor(var_8985.astype('uint32'), relay.reshape(var_8986.astype('uint32'), relay.shape_of(var_8985))) # shape=(11, 11, 9)
output = bop_8987
output2 = bop_8987
func_8995 = relay.Function([var_8985,var_8986,], output)
mod['func_8995'] = func_8995
mod = relay.transform.InferType()(mod)
mutated_mod['func_8995'] = func_8995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8995_call = mutated_mod.get_global_var('func_8995')
var_8997 = relay.var("var_8997", dtype = "uint32", shape = (11, 11, 9))#candidate|8997|(11, 11, 9)|var|uint32
var_8998 = relay.var("var_8998", dtype = "uint32", shape = (11, 11, 9))#candidate|8998|(11, 11, 9)|var|uint32
call_8996 = func_8995_call(var_8997,var_8998,)
output = call_8996
func_8999 = relay.Function([var_8997,var_8998,], output)
mutated_mod['func_8999'] = func_8999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9018 = relay.const([[9,1,-9,-9,5,1,-1,7,-5,-10],[9,4,-10,-9,-3,6,-9,5,5,-8],[-7,-10,-6,-10,7,-1,-5,-10,-9,7],[-3,5,-9,-9,-2,5,-8,6,3,-4]], dtype = "int64")#candidate|9018|(4, 10)|const|int64
var_9019 = relay.var("var_9019", dtype = "int64", shape = (4, 10))#candidate|9019|(4, 10)|var|int64
bop_9020 = relay.bitwise_or(const_9018.astype('int64'), relay.reshape(var_9019.astype('int64'), relay.shape_of(const_9018))) # shape=(4, 10)
func_3783_call = mod.get_global_var('func_3783')
func_3785_call = mutated_mod.get_global_var('func_3785')
call_9023 = func_3783_call()
call_9024 = func_3783_call()
output = relay.Tuple([bop_9020,call_9023,])
output2 = relay.Tuple([bop_9020,call_9024,])
func_9033 = relay.Function([var_9019,], output)
mod['func_9033'] = func_9033
mod = relay.transform.InferType()(mod)
mutated_mod['func_9033'] = func_9033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9034 = relay.var("var_9034", dtype = "int64", shape = (4, 10))#candidate|9034|(4, 10)|var|int64
func_9033_call = mutated_mod.get_global_var('func_9033')
call_9035 = func_9033_call(var_9034)
output = call_9035
func_9036 = relay.Function([var_9034], output)
mutated_mod['func_9036'] = func_9036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mod.get_global_var('func_4277')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_9041 = relay.TupleGetItem(func_4277_call(), 0)
call_9042 = relay.TupleGetItem(func_4278_call(), 0)
uop_9065 = relay.log2(call_9041.astype('float32')) # shape=(11, 4, 11)
uop_9067 = relay.log2(call_9042.astype('float32')) # shape=(11, 4, 11)
output = uop_9065
output2 = uop_9067
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

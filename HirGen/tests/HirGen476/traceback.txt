==========mod==========
#[version = "0.0.5"]
def @func_1917() -> (Tensor[(7, 6, 2), bool],) {
  %0 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11081() -> (Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) {
  %2 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %3 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %4 = %2.2;
  %5 = %3.0;
  (%4, %5)
}

def @func_4772() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %6 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %7 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %8 = %7.0;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %10 = %6.4;
  %11 = erf(%9) /* ty=Tensor[(7, 6, 2), float64] */;
  (%10, %11)
}

def @func_2264(%var_2231: Tensor[(520), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(48), float64], Tensor[(936), float32], float64, Tensor[(13, 4, 10), float64], Tensor[(7, 6, 2), bool]) {
  %12 = cast(%var_2231, dtype="float64") /* ty=Tensor[(520), float64] */;
  %13 = reshape(%12, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
  %14 = @func_1028(%13) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %16 = cast(3.17085f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %17 = reshape(%15, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %18 = reshape(%16, newshape=[]) /* ty=float64 */;
  %19 = @func_1844(%17, %18) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %20 = %14.0;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
  %22 = reshape(%21, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
  %23 = @func_1028(%22) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %24 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %25 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %26 = %19.5;
  %27 = %23.0;
  %28 = %24.0;
  (%25, %20, %var_2231, %26, meta[relay.Constant][0] /* ty=Tensor[(936), float32] */, 3.17085f64 /* ty=float64 */, %27, %28)
}

def @func_5403() -> (Tensor[(7, 6, 2), float32],) {
  %29 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %30 = %29.0;
  %31 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %33 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%30, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %36 = power(%34, %35) /* ty=Tensor[(7, 6, 2), float32] */;
  (%36,)
}

def @func_9616() -> Tensor[(7, 6, 2), float64] {
  %37 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %37.0
}

def @func_6932() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
  %38 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
  %39 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  (%38, %39)
}

def @func_14083() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(300), uint8]) {
  %40 = @func_13645() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %42 = reshape(%41, newshape=[300]) /* ty=Tensor[(300), uint8] */;
  %43 = @func_12275(%42) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) */;
  %44 = @func_8232() /* ty=Tensor[(7, 6, 2), bool] */;
  %45 = %40.0;
  %46 = %43.0;
  (%44, %45, %46, meta[relay.Constant][1] /* ty=Tensor[(300), uint8] */)
}

def @func_14423() -> (Tensor[(7, 6, 2), float64],) {
  %47 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %48 = %47.0;
  (%48,)
}

def @func_4050() -> (Tensor[(7, 6, 2), bool],) {
  %49 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %50 = %49.0;
  (%50,)
}

def @func_10469() -> Tensor[(7, 6, 2), float32] {
  %51 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %51.0
}

def @func_2116() -> (Tensor[(7, 6, 2), bool],) {
  %52 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %53 = %52.0;
  (%53,)
}

def @func_11812() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %54 = @func_10419() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %55 = @func_9504() /* ty=Tensor[(7, 6, 2), bool] */;
  %56 = %54.1;
  (%55, %56)
}

def @func_1725() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %57 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %58 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %59 = %57.0;
  %60 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  %61 = %58.0;
  (%59, %60, %61)
}

def @func_11912() -> Tensor[(7, 6, 2), bool] {
  @func_3887() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12215() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %62 = @func_9817() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %63 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
  %64 = %62.0;
  (%63, %64)
}

def @func_14228(%var_14216: bool, %var_14217: Tensor[(13, 8, 11), bool]) -> (Tensor[(13, 8, 11), bool], Tensor[(180), uint16]) {
  %65 = cast(%var_14216, dtype="bool") /* ty=bool */;
  %66 = cast(%var_14217, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
  %67 = @func_11081() /* ty=(Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) */;
  %68 = logical_and(%65, %66) /* ty=Tensor[(13, 8, 11), bool] */;
  %69 = %67.0;
  (%68, %69)
}

def @func_5910() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %70 = @func_4772() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
  %71 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %72 = %70.0;
  %73 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
  %74 = %71.0;
  (%72, %73, %74)
}

def @func_2508() -> (float64, Tensor[(7, 6, 2), float64]) {
  %75 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %76 = %75.1;
  %77 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  (%76, %77)
}

def @func_8232() -> Tensor[(7, 6, 2), bool] {
  @func_2898() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2073() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) {
  %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %79 = cast(9.80802f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %81 = reshape(%78, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %82 = reshape(%79, newshape=[]) /* ty=float64 */;
  %83 = reshape(%80, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %84 = @func_1573(%81, %82, %83) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
  %85 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %86 = %85.0;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %88 = %84.0;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %90 = reshape(%89, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), float64] */;
  %91 = @func_1629(%90) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %94 = sqrt(%87) /* ty=Tensor[(7, 6, 2), float32] */;
  %95 = acos(%93) /* ty=Tensor[(7, 6, 2), float32] */;
  (%88, meta[relay.Constant][2] /* ty=Tensor[(936), float32] */, 9.80802f64 /* ty=float64 */, meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, %94, %95)
}

def @func_9118() -> (Tensor[(7, 6, 2), bool],) {
  %96 = @func_8232() /* ty=Tensor[(7, 6, 2), bool] */;
  (%96,)
}

def @func_12937() -> Tensor[(7, 6, 2), bool] {
  %97 = @func_5085() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %97.0
}

def @func_4002() -> (Tensor[(7, 6, 2), bool],) {
  %98 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %99 = %98.0;
  (%99,)
}

def @func_3069(%var_3063: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) {
  %100 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %101 = cast(%var_3063, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
  %102 = cast(-3.0461f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %103 = reshape(%101, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %104 = reshape(%102, newshape=[]) /* ty=float64 */;
  %105 = @func_237(%103, %104) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %106 = %100.0;
  %107 = %105.0;
  (%106, %107, %var_3063, -3.0461f64 /* ty=float64 */)
}

def @func_979() -> Tensor[(7, 6, 2), bool] {
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %109 = exp(%108) /* ty=Tensor[(7, 6, 2), float64] */;
  %110 = cast(%109, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %111 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%112, %113) /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2686(%var_2653: Tensor[(13, 6, 5), uint16], %var_2654: Tensor[(13, 6, 5), uint16], %var_2675: Tensor[(13, 6, 5), uint16]) -> (Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) {
  %114 = cast(%var_2654, dtype="uint16") /* ty=Tensor[(13, 6, 5), uint16] */;
  %115 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_2653, dtype="uint16") /* ty=Tensor[(13, 6, 5), uint16] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %118 = cast(%var_2675, dtype="uint32") /* ty=Tensor[(13, 6, 5), uint32] */;
  %119 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_2653, dtype="uint32") /* ty=Tensor[(13, 6, 5), uint32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %122 = right_shift(%116, %117) /* ty=Tensor[(13, 6, 5), uint16] */;
  %123 = multiply(%120, %121) /* ty=Tensor[(13, 6, 5), uint32] */;
  (%122, %123)
}

def @func_14903() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %124 = @func_12554() /* ty=(Tensor[(936), float32],) */;
  %125 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %126 = %124.0;
  %127 = %125.1;
  (%126, %127)
}

def @func_6587() -> (Tensor[(7, 6, 2), bool],) {
  %128 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  (%128,)
}

def @func_12383() -> Tensor[(7, 6, 2), float64] {
  @func_11569() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_14985(%var_14962: Tensor[(300), uint8], %var_14976: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(300), bool]) {
  %129 = cast(%var_14962, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %130 = cast(%var_14962, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %131 = reshape(%129, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %132 = reshape(%130, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %133 = @func_10191(%131, %132) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
  %134 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %135 = cast(%var_14976, dtype="bool") /* ty=Tensor[(300), bool] */;
  %136 = shape_of(%var_14962, dtype="int32") /* ty=Tensor[(1), int32] */;
  %137 = cast(%var_14962, dtype="bool") /* ty=Tensor[(300), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?), bool] */;
  %139 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  %140 = %133.1;
  %141 = %134.0;
  %142 = equal(%137, %138) /* ty=Tensor[(300), bool] */;
  (%139, %140, %141, %142)
}

def @func_13728() -> Tensor[(7, 6, 2), bool] {
  %143 = @func_4208() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %143.1
}

def @func_2883() -> (Tensor[(7, 6, 2), bool],) {
  %144 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %145 = %144.0;
  (%145,)
}

def @func_7497() -> (Tensor[(7, 6, 2), bool], float64) {
  %146 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %147 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
  %148 = %146.2;
  (%147, %148)
}

def @func_1226() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %149 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %150 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  %151 = %149.0;
  %152 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%150, %151, %152)
}

def @func_10386() -> Tensor[(7, 6, 2), bool] {
  @func_6057() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_4392() -> (Tensor[(7, 6, 2), bool],) {
  %153 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %154 = %153.0;
  (%154,)
}

def @func_8089() -> (Tensor[(7, 8, 12), float64],) {
  %155 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 12), float64] */;
  %156 = log10(%155) /* ty=Tensor[(7, 8, 12), float64] */;
  (%156,)
}

def @func_9447() -> (Tensor[(7, 6, 2), bool],) {
  %157 = @func_8214() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %158 = %157.0;
  (%158,)
}

def @func_11023() -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %159 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
  %160 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %161 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %162 = %159.0;
  %163 = %160.0;
  %164 = %161.0;
  (%162, %163, %164)
}

def @func_2764() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) {
  %165 = @func_2590() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %166 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %167 = cast(meta[relay.Constant][6] /* ty=Tensor[(520), float64] */, dtype="float64") /* ty=Tensor[(520), float64] */;
  %168 = reshape(%167, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
  %169 = @func_1028(%168) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %170 = cast(meta[relay.Constant][7] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %171 = cast(2.09584f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %172 = reshape(%170, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %173 = reshape(%171, newshape=[]) /* ty=float64 */;
  %174 = @func_1844(%172, %173) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %175 = %165.0;
  %176 = %166.2;
  %177 = %169.0;
  %178 = %174.2;
  (%175, %176, %177, meta[relay.Constant][6] /* ty=Tensor[(520), float64] */, %178, meta[relay.Constant][7] /* ty=Tensor[(936), float32] */, 2.09584f64 /* ty=float64 */)
}

def @func_7720() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %179 = @func_5085() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %180 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  %181 = %179.0;
  (%180, %181)
}

def @func_5695() -> Tensor[(7, 6, 2), float64] {
  %182 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %182.0
}

def @func_2629() -> (Tensor[(7, 6, 2), bool],) {
  %183 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %184 = %183.2;
  (%184,)
}

def @func_9017() -> (Tensor[(7, 6, 2), bool], Tensor[(3, 2, 8), bool], Tensor[(936), float32], float64) {
  %185 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %186 = cast(meta[relay.Constant][8] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %187 = cast(-6.18664f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %188 = reshape(%186, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %189 = reshape(%187, newshape=[]) /* ty=float64 */;
  %190 = @func_237(%188, %189) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %191 = %185.0;
  %192 = %190.1;
  (%191, %192, meta[relay.Constant][8] /* ty=Tensor[(936), float32] */, -6.18664f64 /* ty=float64 */)
}

def @func_12187() -> Tensor[(7, 6, 2), bool] {
  %193 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %193.0
}

def @func_13223(%var_13181: Tensor[(3, 11, 8), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(3, 11, 8), uint8]) {
  %194 = @func_5821() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %195 = cast(%var_13181, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
  %196 = sqrt(%195) /* ty=Tensor[(3, 11, 8), float64] */;
  %197 = cast(%var_13181, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %201 = %194.0;
  %202 = add(%199, %200) /* ty=Tensor[(3, 11, 8), uint8] */;
  (%201, %202)
}

def @func_8469() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %203 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %204 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %205 = %203.0;
  (%204, %205)
}

def @func_14795() -> (Tensor[(7, 8, 12), bool], Tensor[(7, 6, 2), bool]) {
  %206 = @func_8089() /* ty=(Tensor[(7, 8, 12), float64],) */;
  %207 = %206.0;
  %208 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 8, 12), float64] */, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %212 = @func_5652() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %213 = logical_and(%210, %211) /* ty=Tensor[(7, 8, 12), bool] */;
  %214 = %212.0;
  (%213, %214)
}

def @func_6855() -> (Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], uint8, Tensor[(600), uint8]) {
  %215 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %216 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %217 = cast(meta[relay.Constant][11] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %218 = reshape(%216, newshape=[]) /* ty=uint8 */;
  %219 = reshape(%217, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
  %220 = @func_6219(%218, %219) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %221 = %215.0;
  %222 = %220.3;
  (%221, %222, meta[relay.Constant][10] /* ty=uint8 */, meta[relay.Constant][11] /* ty=Tensor[(600), uint8] */)
}

def @func_2836() -> (Tensor[(7, 6, 2), bool],) {
  %223 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %224 = %223.0;
  (%224,)
}

def @func_3620() -> (Tensor[(7, 6, 2), float64],) {
  %225 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %226 = %225.1;
  (%226,)
}

def @func_5274() -> Tensor[(7, 6, 2), bool] {
  %227 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %227.0
}

def @func_11569() -> Tensor[(7, 6, 2), float64] {
  @func_4114() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7729() -> (Tensor[(7, 6, 2), float64],) {
  %228 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %229 = %228.1;
  (%229,)
}

def @func_8628() -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) {
  %230 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %231 = cast(meta[relay.Constant][13] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %232 = reshape(%230, newshape=[]) /* ty=uint8 */;
  %233 = reshape(%231, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
  %234 = @func_6219(%232, %233) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %235 = @func_6326() /* ty=Tensor[(7, 6, 2), float32] */;
  %236 = %234.1;
  (%235, %236, meta[relay.Constant][12] /* ty=uint8 */, meta[relay.Constant][13] /* ty=Tensor[(600), uint8] */)
}

def @func_9886() -> (Tensor[(7, 6, 2), bool],) {
  %237 = @func_9504() /* ty=Tensor[(7, 6, 2), bool] */;
  (%237,)
}

def @func_5217(%var_5205: Tensor[(390), uint16]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(13, 6, 5), uint32], Tensor[(390), uint16]) {
  %238 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %239 = %238.0;
  %240 = cast(%239, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %241 = reshape(%240, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %242 = @func_2360(%241) /* ty=(Tensor[(7, 6, 2), float64],) */;
  %243 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %244 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %245 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %246 = @func_3920() /* ty=(Tensor[(936), float32],) */;
  %247 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %248 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %249 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %250 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %251 = reshape(%248, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %252 = reshape(%249, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %253 = reshape(%250, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %254 = @func_2686(%251, %252, %253) /* ty=(Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) */;
  %255 = %242.0;
  %256 = %243.0;
  %257 = %244.0;
  %258 = %245.0;
  %259 = %246.0;
  %260 = %247.2;
  %261 = %254.1;
  (%239, %255, %256, %257, %258, %259, %260, %261, %var_5205)
}

def @func_9824() -> (Tensor[(7, 6, 2), bool],) {
  %262 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%262,)
}

def @func_7302() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %263 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %264 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %265 = %263.0;
  %266 = %264.0;
  %267 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  (%265, %266, %267)
}

def @func_12914() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %268 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %269 = @func_7838() /* ty=Tensor[(7, 6, 2), bool] */;
  %270 = %268.0;
  (%269, %270)
}

def @func_3123() -> Tensor[(7, 6, 2), bool] {
  @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_14114() -> (Tensor[(7, 6, 2), bool],) {
  %271 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %272 = %271.3;
  (%272,)
}

def @func_2481() -> (Tensor[(7, 6, 2), bool], float64) {
  %273 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %274 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %275 = %273.2;
  %276 = %274.2;
  (%275, %276)
}

def @func_2858() -> (Tensor[(7, 6, 2), bool],) {
  %277 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
  (%277,)
}

def @func_4852(%var_4833: Tensor[(15, 16, 10), float32]) -> (Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) {
  %278 = cast(%var_4833, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %279 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %280 = cosh(%278) /* ty=Tensor[(15, 16, 10), float32] */;
  %281 = %279.0;
  (%280, %281)
}

def @func_9937() -> Tensor[(7, 6, 2), bool] {
  %282 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %282.0
}

def @func_1629(%var_1606: Tensor[(7, 6, 2), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %283 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  %284 = cast(%var_1606, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %289 = logical_and(%286, %287) /* ty=Tensor[(7, 6, 2), bool] */;
  %290 = %288.0;
  (%289, %290)
}

def @func_1779() -> (Tensor[(7, 6, 2), bool],) {
  %291 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %292 = %291.0;
  (%292,)
}

def @func_8922() -> (Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32], Tensor[(936), float32]) {
  %293 = @func_7720() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %294 = cast(meta[relay.Constant][14] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %295 = reshape(%294, newshape=[6, 156]) /* ty=Tensor[(6, 156), float32] */;
  %296 = @func_3692(%295) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) */;
  %297 = %293.1;
  %298 = %296.5;
  (%297, %298, meta[relay.Constant][14] /* ty=Tensor[(936), float32] */)
}

def @func_6688() -> Tensor[(936), float32] {
  %299 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %299.0
}

def @func_1004() -> (Tensor[(7, 6, 2), bool],) {
  %300 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%300,)
}

def @func_2825(%var_2784: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float32],) {
  %301 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %302 = %301.0;
  %303 = cast(%var_2784, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %307 = subtract(%305, %306) /* ty=Tensor[(7, 6, 2), float32] */;
  (%307,)
}

def @func_8214() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %308 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %309 = %308.0;
  %310 = @func_6572() /* ty=Tensor[(7, 6, 2), bool] */;
  (%309, %310)
}

def @func_3484() -> Tensor[(7, 6, 2), bool] {
  @func_2396() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12275(%var_12262: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
  %311 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %312 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %313 = reshape(%311, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %314 = reshape(%312, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %315 = @func_10191(%313, %314) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
  %316 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
  %317 = %315.0;
  (%316, %317, %var_12262)
}

def @func_9504() -> Tensor[(7, 6, 2), bool] {
  %318 = @func_7768() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %318.0
}

def @func_14199() -> Tensor[(7, 6, 2), bool] {
  %319 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %319.0
}

def @func_237(%var_211: Tensor[(9, 13, 8), float32], %var_231: float64) -> (Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) {
  %320 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %321 = shape_of(%var_211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_211, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %324 = cast(%var_231, dtype="float64") /* ty=float64 */;
  %325 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %326 = reshape(%324, newshape=[]) /* ty=float64 */;
  %327 = reshape(%325, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %328 = cast(%var_211, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %329 = asinh(%328) /* ty=Tensor[(9, 13, 8), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %331 = floor_mod(%322, %323) /* ty=Tensor[(9, 13, 8), float32] */;
  %332 = @func_71(%326, %327) /* ty=Tensor[(3, 2, 8), bool] */;
  %333 = tan(%330) /* ty=Tensor[(9, 13, 8), float32] */;
  (%331, %332, %var_231, meta[relay.Constant][16] /* ty=Tensor[(48), float64] */, %333)
}

def @func_13645() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %334 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %335 = @func_7433() /* ty=Tensor[(936), float32] */;
  %336 = %334.0;
  (%335, %336)
}

def @func_14267() -> (Tensor[(7, 6, 2), float64],) {
  %337 = @func_2590() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %338 = %337.0;
  (%338,)
}

def @func_2432(%var_2418: Tensor[(7, 6, 2), bool], %var_2425: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) {
  %339 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  %340 = cast(%var_2418, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %344 = cast(%var_2425, dtype="int64") /* ty=Tensor[(7, 6, 2), int64] */;
  %345 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%339, dtype="int64") /* ty=Tensor[(7, 6, 2), int64] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %348 = add(%342, %343) /* ty=Tensor[(7, 6, 2), float64] */;
  %349 = left_shift(%346, %347) /* ty=Tensor[(7, 6, 2), int64] */;
  (%348, %349)
}

def @func_10538() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %350 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %351 = @func_6908() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %352 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
  %353 = %350.0;
  %354 = %351.0;
  (%352, %353, %354)
}

def @func_1894() -> Tensor[(7, 6, 2), bool] {
  %355 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %355.0
}

def @func_10098() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %356 = @func_7070() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), float64]) */;
  %357 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %358 = @func_6932() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */;
  %359 = %356.0;
  %360 = %357.1;
  %361 = %358.0;
  (%359, %360, %361)
}

def @func_3805() -> Tensor[(7, 6, 2), float64] {
  @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_9334() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %362 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %363 = @func_6326() /* ty=Tensor[(7, 6, 2), float32] */;
  (%362, %363)
}

def @func_1954() -> (Tensor[(7, 6, 2), bool],) {
  %364 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %365 = %364.0;
  (%365,)
}

def @func_6326() -> Tensor[(7, 6, 2), float32] {
  %366 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %367 = %366.0;
  %368 = cast(%367, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  acosh(%368) /* ty=Tensor[(7, 6, 2), float32] */
}

def @func_1375(%var_1368: Tensor[(6, 15, 2), uint16], %var_1369: Tensor[(6, 15, 2), uint16]) -> (Tensor[(6, 15, 2), uint16],) {
  %369 = cast(%var_1369, dtype="uint16") /* ty=Tensor[(6, 15, 2), uint16] */;
  %370 = shape_of(%var_1368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_1368, dtype="uint16") /* ty=Tensor[(6, 15, 2), uint16] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %373 = maximum(%371, %372) /* ty=Tensor[(6, 15, 2), uint16] */;
  (%373,)
}

def @func_3989(%var_3938: Tensor[(3, 1, 9), uint32], %var_3939: Tensor[(3, 9, 9), uint32]) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %374 = cast(%var_3938, dtype="bool") /* ty=Tensor[(3, 1, 9), bool] */;
  %375 = cast(%var_3939, dtype="bool") /* ty=Tensor[(3, 9, 9), bool] */;
  %376 = greater_equal(%374, %375) /* ty=Tensor[(3, 9, 9), bool] */;
  %377 = cast(%376, dtype="float64") /* ty=Tensor[(3, 9, 9), float64] */;
  %378 = log2(%377) /* ty=Tensor[(3, 9, 9), float64] */;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(3, 9, 9), float64] */;
  %380 = cast(%var_3938, dtype="uint32") /* ty=Tensor[(3, 1, 9), uint32] */;
  %381 = cast(%376, dtype="uint32") /* ty=Tensor[(3, 9, 9), uint32] */;
  %382 = cast(%var_3939, dtype="uint64") /* ty=Tensor[(3, 9, 9), uint64] */;
  %383 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%378, dtype="uint64") /* ty=Tensor[(3, 9, 9), uint64] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %386 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
  %387 = cast(%386, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %388 = cast(%386, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %389 = reshape(%387, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %390 = reshape(%388, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %391 = @func_2432(%389, %390) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) */;
  %392 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %393 = sinh(%379) /* ty=Tensor[(3, 9, 9), float64] */;
  %394 = right_shift(%380, %381) /* ty=Tensor[(3, 9, 9), uint32] */;
  %395 = left_shift(%384, %385) /* ty=Tensor[(3, 9, 9), uint64] */;
  %396 = %391.0;
  %397 = %392.0;
  (%386, %393, %394, %395, %396, %397)
}

def @func_2996(%var_2987: Tensor[(10, 7, 13), uint32]) -> Tensor[(10, 7, 13), uint32] {
  %398 = cast(%var_2987, dtype="uint32") /* ty=Tensor[(10, 7, 13), uint32] */;
  %399 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(10, 7, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 7, 13), uint32] */, dtype="uint32") /* ty=Tensor[(10, 7, 13), uint32] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%400, %401) /* ty=Tensor[(10, 7, 13), uint32] */
}

def @func_6766(%var_6736: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %402 = cast(%var_6736, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %403 = cast(%var_6736, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %404 = reshape(%402, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %405 = reshape(%403, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %406 = @func_1375(%404, %405) /* ty=(Tensor[(6, 15, 2), uint16],) */;
  %407 = %406.0;
  %408 = cast(%407, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
  %409 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %410 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %411 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
  %412 = tan(%408) /* ty=Tensor[(6, 15, 2), float32] */;
  %413 = %409.0;
  %414 = %410.0;
  (%411, %var_6736, %412, %413, %414)
}

def @func_11207() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %415 = @func_10956() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %416 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %417 = %415.0;
  %418 = %416.2;
  (%417, %418)
}

def @func_11297() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %419 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %420 = @func_4392() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %421 = %419.0;
  %422 = %420.0;
  (%421, %422)
}

def @func_4208() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %423 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %426 = log10(%425) /* ty=Tensor[(7, 6, 2), float64] */;
  %427 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
  (%426, %427)
}

def @func_6985() -> Tensor[(7, 6, 2), bool] {
  %428 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %428.1
}

def @func_3215(%var_3200: Tensor[(7, 6, 2), float64]) -> (float64, Tensor[(7, 6, 2), float32], Tensor[(84), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %429 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %430 = cast(meta[relay.Constant][18] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %431 = reshape(%430, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %432 = @func_2825(%431) /* ty=(Tensor[(7, 6, 2), float32],) */;
  %433 = cast(meta[relay.Constant][18] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %434 = reshape(%433, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %435 = @func_2360(%434) /* ty=(Tensor[(7, 6, 2), float64],) */;
  %436 = %435.0;
  %437 = cast(%var_3200, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %441 = %429.1;
  %442 = %432.0;
  %443 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %444 = divide(%439, %440) /* ty=Tensor[(7, 6, 2), float32] */;
  (%441, %442, meta[relay.Constant][18] /* ty=Tensor[(84), bool] */, %443, %444)
}

def @func_10191(%var_10171: Tensor[(5, 6, 10), uint8], %var_10172: Tensor[(5, 6, 10), uint8]) -> (Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) {
  %445 = cast(%var_10172, dtype="bool") /* ty=Tensor[(5, 6, 10), bool] */;
  %446 = shape_of(%var_10171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_10171, dtype="bool") /* ty=Tensor[(5, 6, 10), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %450 = less_equal(%447, %448) /* ty=Tensor[(5, 6, 10), bool] */;
  %451 = %449.0;
  (%450, %451)
}

def @func_12088() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %452 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %453 = @func_7720() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %454 = @func_7838() /* ty=Tensor[(7, 6, 2), bool] */;
  %455 = %452.0;
  %456 = %453.1;
  (%454, %455, %456)
}

def @func_12829() -> Tensor[(7, 6, 2), bool] {
  @func_6985() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_10606() -> Tensor[(7, 6, 2), float64] {
  @func_4114() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_13869() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %457 = @func_9886() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %458 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %459 = %457.0;
  %460 = %458.1;
  %461 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%459, %460, %461)
}

def @func_13474() -> (Tensor[(7, 5, 4), bool],) {
  %462 = @func_9040() /* ty=(Tensor[(7, 5, 4), bool], Tensor[(936), float32]) */;
  %463 = %462.0;
  (%463,)
}

def @func_13457() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) {
  %464 = @func_5821() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %465 = @func_5724() /* ty=(Tensor[(936), float32],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(936), float64] */;
  %468 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %469 = %464.0;
  %470 = atanh(%467) /* ty=Tensor[(936), float64] */;
  (%468, %469, %470)
}

def @func_2898() -> Tensor[(7, 6, 2), bool] {
  %471 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %471.0
}

def @func_11111() -> Tensor[(7, 6, 2), float64] {
  %472 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %472.0
}

def @func_13716() -> (Tensor[(7, 6, 2), bool],) {
  %473 = @func_11081() /* ty=(Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) */;
  %474 = %473.1;
  (%474,)
}

def @func_14514() -> Tensor[(7, 6, 2), bool] {
  %475 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %475.1
}

def @func_14591() -> (Tensor[(7, 6, 2), bool],) {
  %476 = @func_9334() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %477 = %476.0;
  (%477,)
}

def @func_13369(%var_13351: Tensor[(2, 1200), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 1200), float32], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %478 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %479 = cast(%var_13351, dtype="float32") /* ty=Tensor[(2, 1200), float32] */;
  %480 = reshape(%479, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float32] */;
  %481 = @func_4852(%480) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) */;
  %482 = @func_11297() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %483 = @func_1894() /* ty=Tensor[(7, 6, 2), bool] */;
  %484 = %478.0;
  %485 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
  %486 = @func_11912() /* ty=Tensor[(7, 6, 2), bool] */;
  %487 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
  %488 = %481.1;
  %489 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  %490 = %482.1;
  (%483, %484, %485, %486, %487, %488, %var_13351, %489, %490)
}

def @func_13970() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %491 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %492 = @func_8239() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %493 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
  %494 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
  %495 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
  %496 = %491.0;
  %497 = @func_13728() /* ty=Tensor[(7, 6, 2), bool] */;
  %498 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  %499 = %492.0;
  (%493, %494, %495, %496, %497, %498, %499)
}

def @func_7407(%var_7388: float64, %var_7389: Tensor[(48), float64], %var_7398: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(180), uint16], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], float64, Tensor[(48), float64], Tensor[(936), float64]) {
  %500 = @func_6908() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %501 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %502 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %503 = cast(meta[relay.Constant][19] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %504 = cast(%var_7388, dtype="float64") /* ty=float64 */;
  %505 = cast(%var_7389, dtype="float64") /* ty=Tensor[(48), float64] */;
  %506 = reshape(%503, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %507 = reshape(%504, newshape=[]) /* ty=float64 */;
  %508 = reshape(%505, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %509 = @func_1573(%506, %507, %508) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
  %510 = cast(%var_7398, dtype="float64") /* ty=Tensor[(936), float64] */;
  %511 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(936), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %512 = cast(meta[relay.Constant][19] /* ty=Tensor[(936), float32] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?), float64] */;
  %514 = %500.0;
  %515 = %501.2;
  %516 = %502.1;
  %517 = %509.0;
  %518 = maximum(%512, %513) /* ty=Tensor[(936), float64] */;
  (%514, %515, %516, %517, %var_7388, %var_7389, %518)
}

def @func_2166() -> Tensor[(7, 6, 2), bool] {
  %519 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %519.2
}

def @func_5479() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %520 = @func_5053() /* ty=Tensor[(7, 6, 2), bool] */;
  %521 = @func_5053() /* ty=Tensor[(7, 6, 2), bool] */;
  (%520, %521)
}

def @func_3656() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %522 = @func_3376() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %523 = %522.1;
  %524 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  (%523, %524)
}

def @func_9817() -> (Tensor[(7, 6, 2), bool],) {
  %525 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %526 = %525.1;
  (%526,)
}

def @func_12588() -> Tensor[(7, 6, 2), bool] {
  %527 = @func_8591() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %527.0
}

def @func_5508() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %528 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %529 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %530 = %528.0;
  %531 = %529.0;
  (%530, %531)
}

def @func_12975(%var_12959: Tensor[(8, 4, 2), int32]) -> (Tensor[(8, 4, 2), int32], Tensor[(8, 4, 2), float64]) {
  %532 = cast(%var_12959, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  %533 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(8, 4, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 4, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %536 = cast(%var_12959, dtype="float64") /* ty=Tensor[(8, 4, 2), float64] */;
  %537 = add(%534, %535) /* ty=Tensor[(8, 4, 2), int32] */;
  %538 = exp(%536) /* ty=Tensor[(8, 4, 2), float64] */;
  (%537, %538)
}

def @func_15070() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %539 = @func_10538() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %540 = %539.2;
  %541 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  (%540, %541)
}

def @main(%var_15202: Tensor[(9, 12, 1), uint16], %var_15203: Tensor[(9, 12, 4), uint16]) -> (Tensor[(9, 12, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(9, 12, 4), uint16]) {
  %542 = cast(%var_15202, dtype="uint16") /* ty=Tensor[(9, 12, 1), uint16] */;
  %543 = cast(%var_15203, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %544 = bitwise_xor(%542, %543) /* ty=Tensor[(9, 12, 4), uint16] */;
  %545 = cast(%544, dtype="bool") /* ty=Tensor[(9, 12, 4), bool] */;
  %546 = cast(%var_15202, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %547 = @func_6013() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %548 = cast(%var_15203, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %549 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%544, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %552 = greater(%545, %546) /* ty=Tensor[(9, 12, 4), bool] */;
  %553 = %547.0;
  %554 = subtract(%550, %551) /* ty=Tensor[(9, 12, 4), uint16] */;
  (%552, %553, %554)
}

def @func_4692() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %555 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
  %556 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  %557 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%555, %556, %557)
}

def @func_5821() -> (Tensor[(7, 6, 2), bool],) {
  %558 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %559 = %558.0;
  (%559,)
}

def @func_14865(%var_14809: Tensor[(11, 16, 6), uint16], %var_14841: uint8) -> (Tensor[(7, 6, 2), bool], Tensor[(10, 1, 4), uint8], uint8, Tensor[(2, 300), uint8], Tensor[(11, 16, 6), bool]) {
  %560 = cast(%var_14841, dtype="uint8") /* ty=uint8 */;
  %561 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 300), uint8] */, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
  %562 = reshape(%560, newshape=[]) /* ty=uint8 */;
  %563 = reshape(%561, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
  %564 = @func_6219(%562, %563) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %565 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 16, 6), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %566 = shape_of(%var_14809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_14809, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = less(%567, %568) /* ty=Tensor[(11, 16, 6), bool] */;
  %570 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 16, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
  %571 = shape_of(%var_14809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_14809, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %574 = bitwise_and(%572, %573) /* ty=Tensor[(11, 16, 6), uint16] */;
  %575 = cast(%574, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %576 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%569, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %579 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
  %580 = %564.0;
  %581 = logical_and(%577, %578) /* ty=Tensor[(11, 16, 6), bool] */;
  (%579, %580, %var_14841, meta[relay.Constant][21] /* ty=Tensor[(2, 300), uint8] */, %581)
}

def @func_1028(%var_1016: Tensor[(13, 4, 10), float64]) -> (Tensor[(13, 4, 10), float64],) {
  %582 = cast(%var_1016, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
  %583 = asinh(%582) /* ty=Tensor[(13, 4, 10), float64] */;
  %584 = cast(%583, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
  %585 = log2(%584) /* ty=Tensor[(13, 4, 10), float64] */;
  (%585,)
}

def @func_10810() -> (Tensor[(7, 6, 2), float64],) {
  %586 = @func_8730() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_10904(%var_10895: Tensor[(672), bool]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(6, 7, 16), bool], Tensor[(672), bool], Tensor[(972), float32]) {
  %588 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %589 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %590 = cast(%var_10895, dtype="bool") /* ty=Tensor[(672), bool] */;
  %591 = cast(%var_10895, dtype="bool") /* ty=Tensor[(672), bool] */;
  %592 = reshape(%590, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), bool] */;
  %593 = reshape(%591, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), bool] */;
  %594 = @func_5028(%592, %593) /* ty=(Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) */;
  %595 = cast(meta[relay.Constant][23] /* ty=Tensor[(972), bool] */, dtype="bool") /* ty=Tensor[(972), bool] */;
  %596 = cast(meta[relay.Constant][23] /* ty=Tensor[(972), bool] */, dtype="bool") /* ty=Tensor[(972), bool] */;
  %597 = reshape(%595, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), bool] */;
  %598 = reshape(%596, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), bool] */;
  %599 = @func_3412(%597, %598) /* ty=(Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) */;
  %600 = %599.0;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %602 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(972), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %603 = cast(meta[relay.Constant][23] /* ty=Tensor[(972), bool] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?), float32] */;
  %605 = %588.0;
  %606 = %589.0;
  %607 = %594.0;
  %608 = floor_mod(%603, %604) /* ty=Tensor[(972), float32] */;
  (%605, %606, %607, %var_10895, %608)
}

def @func_15108() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(7, 6, 2), bool]) {
  %609 = @func_9546() /* ty=(Tensor[(15, 7, 15), float32], float64, float64) */;
  %610 = @func_5564() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %611 = @func_13728() /* ty=Tensor[(7, 6, 2), bool] */;
  %612 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
  %613 = %609.1;
  %614 = %610.0;
  (%611, %612, %613, %614)
}

def @func_5652() -> (Tensor[(7, 6, 2), bool], float64) {
  %615 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %616 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
  %617 = %615.0;
  (%616, %617)
}

def @func_4131() -> float64 {
  %618 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %618.1
}

def @func_1314(%var_1267: Tensor[(7, 6, 2), bool], %var_1291: Tensor[(36, 26), float32], %var_1292: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) {
  %619 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %620 = %619.0;
  %621 = cast(%var_1267, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %625 = multiply(%623, %624) /* ty=Tensor[(7, 6, 2), float32] */;
  %626 = cast(%620, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %630 = cast(%var_1291, dtype="float64") /* ty=Tensor[(36, 26), float64] */;
  %631 = cast(%var_1291, dtype="float32") /* ty=Tensor[(36, 26), float32] */;
  %632 = cast(%var_1292, dtype="float64") /* ty=float64 */;
  %633 = reshape(%631, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %634 = reshape(%632, newshape=[]) /* ty=float64 */;
  %635 = @func_237(%633, %634) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %636 = %635.4;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %638 = greater_equal(%628, %629) /* ty=Tensor[(7, 6, 2), bool] */;
  %639 = log(%630) /* ty=Tensor[(36, 26), float64] */;
  %640 = cos(%637) /* ty=Tensor[(9, 13, 8), float32] */;
  (%638, %var_1292, %639, %640)
}

def @func_8977() -> Tensor[(936), float32] {
  @func_7433() /* ty=Tensor[(936), float32] */
}

def @func_7070() -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
  %641 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %642 = %641.0;
  %643 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%642, %643)
}

def @func_3514() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %644 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %645 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %646 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %647 = %644.0;
  %648 = cast(%647, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %649 = reshape(%648, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %650 = @func_2825(%649) /* ty=(Tensor[(7, 6, 2), float32],) */;
  %651 = %645.0;
  %652 = %646.0;
  %653 = %650.0;
  (%647, %651, %652, %653)
}

def @func_1844(%var_1824: Tensor[(1, 936), float32], %var_1825: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) {
  %654 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %655 = cast(%var_1824, dtype="float32") /* ty=Tensor[(1, 936), float32] */;
  %656 = cast(%var_1825, dtype="float64") /* ty=float64 */;
  %657 = reshape(%655, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %658 = reshape(%656, newshape=[]) /* ty=float64 */;
  %659 = @func_237(%657, %658) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %660 = cast(%var_1824, dtype="float32") /* ty=Tensor[(1, 936), float32] */;
  %661 = %659.2;
  %662 = cast(%661, dtype="float64") /* ty=float64 */;
  %663 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %664 = reshape(%660, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
  %665 = reshape(%662, newshape=[]) /* ty=float64 */;
  %666 = reshape(%663, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %667 = @func_1573(%664, %665, %666) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
  %668 = %654.0;
  %669 = %667.1;
  (%668, %661, %var_1824, %var_1825, %669, meta[relay.Constant][24] /* ty=Tensor[(48), float64] */)
}

def @func_7923(%var_7921: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(6, 15, 2), float32], Tensor[(180), uint16]) {
  %670 = cast(%var_7921, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %671 = reshape(%670, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %672 = @func_6766(%671) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %673 = @func_3805() /* ty=Tensor[(7, 6, 2), float64] */;
  %674 = %672.2;
  (%673, %674, %var_7921)
}

def @func_1516(%var_1497: Tensor[(12, 78), float32], %var_1498: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(12, 78), float32], float64) {
  %675 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %676 = %675.0;
  %677 = cast(%676, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %678 = cast(%var_1497, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
  %679 = cast(%var_1498, dtype="float64") /* ty=float64 */;
  %680 = reshape(%677, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %681 = reshape(%678, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
  %682 = reshape(%679, newshape=[]) /* ty=float64 */;
  %683 = @func_1314(%680, %681, %682) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
  %684 = %683.0;
  (%676, %684, %var_1497, %var_1498)
}

def @func_4644(%var_4629: Tensor[(14, 7, 5), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) {
  %685 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %686 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %687 = cast(%var_4629, dtype="uint64") /* ty=Tensor[(14, 7, 5), uint64] */;
  %688 = bitwise_and(%686, %687) /* ty=Tensor[(14, 7, 5), uint64] */;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(14, 7, 5), float64] */;
  %690 = cast(meta[relay.Constant][25] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
  %691 = %685.1;
  %692 = mod(%689, %690) /* ty=Tensor[(14, 7, 5), float64] */;
  (%691, %692)
}

def @func_4993() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %693 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %694 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
  %695 = %693.0;
  (%694, %695)
}

def @func_8102(%var_8096: Tensor[(15, 7, 5), uint8], %var_8097: Tensor[(15, 7, 5), uint8]) -> Tensor[(15, 7, 5), uint8] {
  %696 = cast(%var_8097, dtype="uint8") /* ty=Tensor[(15, 7, 5), uint8] */;
  %697 = shape_of(%var_8096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%var_8096, dtype="uint8") /* ty=Tensor[(15, 7, 5), uint8] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%698, %699) /* ty=Tensor[(15, 7, 5), uint8] */
}

def @func_9797() -> Tensor[(7, 6, 2), float32] {
  %700 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %700.0
}

def @func_12554() -> (Tensor[(936), float32],) {
  %701 = @func_12511() /* ty=(Tensor[(936), float32],) */;
  %702 = %701.0;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(936), float32] */;
  %704 = cosh(%703) /* ty=Tensor[(936), float32] */;
  %705 = cast(%702, dtype="float32") /* ty=Tensor[(936), float32] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(1), int32] */;
  %707 = cast(%704, dtype="float32") /* ty=Tensor[(936), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?), float32] */;
  %709 = floor_divide(%707, %708) /* ty=Tensor[(936), float32] */;
  (%709,)
}

def @func_13178() -> float64 {
  %710 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %710.2
}

def @func_14522() -> (Tensor[(7, 6, 2), float64],) {
  %711 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %712 = %711.0;
  (%712,)
}

def @func_15126() -> Tensor[(7, 6, 2), float64] {
  %713 = @func_13970() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %713.1
}

def @func_8012(%var_7999: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(7, 6, 2), bool]) {
  %714 = cast(%var_7999, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
  %715 = acos(%714) /* ty=Tensor[(3, 6, 7), float64] */;
  %716 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  (%715, %716)
}

def @func_6057() -> Tensor[(7, 6, 2), bool] {
  %717 = @func_5993() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %717.1
}

def @func_1433() -> Tensor[(7, 6, 2), float64] {
  %718 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  asinh(%719) /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_1186() -> (Tensor[(7, 6, 2), bool],) {
  %720 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%720,)
}

def @func_2520() -> Tensor[(7, 6, 2), bool] {
  @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_5993() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %721 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %722 = %721.1;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(936), float32] */;
  %724 = reshape(%723, newshape=[2, 468]) /* ty=Tensor[(2, 468), float32] */;
  %725 = @func_3260(%724) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) */;
  %726 = %725.1;
  (%722, %726)
}

def @func_8119() -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64]) {
  %727 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %728 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %729 = %727.0;
  %730 = %728.2;
  (%729, %730)
}

def @func_9771(%var_9761: Tensor[(936), float32]) -> Tensor[(936), uint32] {
  %731 = @func_8710() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %732 = %731.1;
  %733 = cast(%var_9761, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(1), int32] */;
  %735 = cast(%732, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?), uint32] */;
  logical_xor(%735, %736) /* ty=Tensor[(936), uint32] */
}

def @func_2396() -> Tensor[(7, 6, 2), bool] {
  %737 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %737.0
}

def @func_1636() -> Tensor[(7, 6, 2), bool] {
  %738 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %738.0
}

def @func_4430() -> (Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %739 = cast(meta[relay.Constant][26] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %740 = cast(meta[relay.Constant][26] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %741 = reshape(%739, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %742 = reshape(%740, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %743 = @func_1375(%741, %742) /* ty=(Tensor[(6, 15, 2), uint16],) */;
  %744 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %745 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
  %746 = %743.0;
  %747 = @func_3229() /* ty=Tensor[(7, 6, 2), bool] */;
  %748 = %744.1;
  (%745, %746, meta[relay.Constant][26] /* ty=Tensor[(180), uint16] */, %747, %748)
}

def @func_5785() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %749 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %750 = @func_5724() /* ty=(Tensor[(936), float32],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float32") /* ty=Tensor[(936), float32] */;
  %753 = %749.4;
  %754 = tan(%752) /* ty=Tensor[(936), float32] */;
  (%753, %754)
}

def @func_6572() -> Tensor[(7, 6, 2), bool] {
  @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_10956() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %755 = @func_3920() /* ty=(Tensor[(936), float32],) */;
  %756 = @func_10386() /* ty=Tensor[(7, 6, 2), bool] */;
  %757 = %755.0;
  (%756, %757)
}

def @func_7604(%var_7567: Tensor[(4, 3, 4), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(4, 3, 4), bool]) {
  %758 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %759 = shape_of(%var_7567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%var_7567, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %762 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %763 = cast(%var_7567, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %764 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %767 = logical_and(%760, %761) /* ty=Tensor[(4, 3, 4), bool] */;
  %768 = %762.0;
  %769 = less_equal(%765, %766) /* ty=Tensor[(4, 3, 4), bool] */;
  (%767, %768, %769)
}

def @func_11686() -> Tensor[(7, 6, 2), float64] {
  @func_5695() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_11748() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
  %770 = @func_10231() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %771 = %770.0;
  %772 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  (%771, %772)
}

def @func_12174() -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(3, 9, 9), uint32], Tensor[(27), uint32], Tensor[(243), uint32], Tensor[(7, 6, 2), bool]) {
  %773 = cast(meta[relay.Constant][28] /* ty=Tensor[(520), float64] */, dtype="float64") /* ty=Tensor[(520), float64] */;
  %774 = reshape(%773, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
  %775 = @func_1028(%774) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %776 = cast(meta[relay.Constant][29] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %777 = cast(meta[relay.Constant][30] /* ty=Tensor[(243), uint32] */, dtype="uint32") /* ty=Tensor[(243), uint32] */;
  %778 = reshape(%776, newshape=[3, 1, 9]) /* ty=Tensor[(3, 1, 9), uint32] */;
  %779 = reshape(%777, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), uint32] */;
  %780 = @func_3989(%778, %779) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %781 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %782 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
  %783 = %775.0;
  %784 = %780.2;
  %785 = %781.0;
  (%782, %783, meta[relay.Constant][28] /* ty=Tensor[(520), float64] */, %784, meta[relay.Constant][29] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][30] /* ty=Tensor[(243), uint32] */, %785)
}

def @func_14639(%var_14636: Tensor[(490), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(490), uint64]) {
  %786 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %787 = cast(%var_14636, dtype="uint64") /* ty=Tensor[(490), uint64] */;
  %788 = reshape(%787, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), uint64] */;
  %789 = @func_4644(%788) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) */;
  %790 = %786.0;
  %791 = %789.0;
  (%790, %791, %var_14636)
}

def @func_5293() -> (Tensor[(7, 6, 2), float64],) {
  %792 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %793 = %792.0;
  (%793,)
}

def @func_14551(%var_14549: Tensor[(2400), float32]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2400), float32]) {
  %794 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %795 = @func_5564() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %796 = cast(%var_14549, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %797 = reshape(%796, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float32] */;
  %798 = @func_4852(%797) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) */;
  %799 = %794.0;
  %800 = %795.0;
  %801 = %798.1;
  (%799, %800, %801, %var_14549)
}

def @func_14248(%var_14239: Tensor[(7, 11, 9), float64]) -> Tensor[(7, 11, 9), float64] {
  %802 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 9), float64] */;
  %803 = cast(%var_14239, dtype="float64") /* ty=Tensor[(7, 11, 9), float64] */;
  divide(%802, %803) /* ty=Tensor[(7, 11, 9), float64] */
}

def @func_9040() -> (Tensor[(7, 5, 4), bool], Tensor[(936), float32]) {
  %804 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %805 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 5, 4), int8] */, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
  %806 = less(%804, %805) /* ty=Tensor[(7, 5, 4), bool] */;
  %807 = @func_8977() /* ty=Tensor[(936), float32] */;
  (%806, %807)
}

def @func_5085() -> (Tensor[(7, 6, 2), bool],) {
  %808 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
  (%808,)
}

def @func_14465() -> Tensor[(7, 6, 2), bool] {
  %809 = @func_11207() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %809.0
}

def @func_14728() -> (Tensor[(2, ?, 11), int16], Tensor[(2, ?, 11), bool], Tensor[(2, ?, 11), int64]) {
  %810 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %811 = sin(%810) /* ty=Tensor[(2, 1, 11), float64] */;
  %812 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 1, 11), float64] */, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %816 = greater(%814, %815) /* ty=Tensor[(2, ?, 11), bool] */;
  %817 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 1, 11), float64] */, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%816, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %821 = logical_or(%819, %820) /* ty=Tensor[(2, ?, 11), bool] */;
  %822 = cast(%816, dtype="int16") /* ty=Tensor[(2, ?, 11), int16] */;
  %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%821, dtype="int16") /* ty=Tensor[(2, ?, 11), int16] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %826 = cast(%821, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %827 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%816, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = cast(%821, dtype="int64") /* ty=Tensor[(2, ?, 11), int64] */;
  %831 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%816, dtype="int64") /* ty=Tensor[(2, ?, 11), int64] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %834 = bitwise_xor(%824, %825) /* ty=Tensor[(2, ?, 11), int16] */;
  %835 = greater_equal(%828, %829) /* ty=Tensor[(2, ?, 11), bool] */;
  %836 = bitwise_and(%832, %833) /* ty=Tensor[(2, ?, 11), int64] */;
  (%834, %835, %836)
}

def @func_15159() -> (Tensor[(7, 6, 2), float32],) {
  %837 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
  %838 = %837.0;
  (%838,)
}

def @func_4114() -> Tensor[(7, 6, 2), float64] {
  @func_3089() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_4345() -> Tensor[(7, 6, 2), bool] {
  %839 = @func_4050() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %839.0
}

def @func_12490(%var_12487: Tensor[(9, 9, 15), float64]) -> Tensor[(9, 9, 15), float64] {
  %840 = cast(%var_12487, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  acos(%840) /* ty=Tensor[(9, 9, 15), float64] */
}

def @func_2179() -> (Tensor[(7, 6, 2), bool],) {
  %841 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %842 = %841.0;
  (%842,)
}

def @func_10451(%var_10428: Tensor[(14, 3, 8), float64]) -> (Tensor[(14, 3, 8), float64], Tensor[(7, 6, 2), bool]) {
  %843 = cast(%var_10428, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
  %844 = @func_9447() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %845 = atan(%843) /* ty=Tensor[(14, 3, 8), float64] */;
  %846 = %844.0;
  (%845, %846)
}

def @func_5564() -> (Tensor[(7, 6, 2), bool],) {
  %847 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %848 = %847.0;
  (%848,)
}

def @func_1573(%var_1545: Tensor[(936, 1), float32], %var_1546: float64, %var_1559: Tensor[(48), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) {
  %849 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %850 = %849.0;
  %851 = cast(%850, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %852 = cast(%var_1545, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %853 = cast(%var_1546, dtype="float64") /* ty=float64 */;
  %854 = reshape(%851, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %855 = reshape(%852, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
  %856 = reshape(%853, newshape=[]) /* ty=float64 */;
  %857 = @func_1314(%854, %855, %856) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
  %858 = cast(%var_1546, dtype="float64") /* ty=float64 */;
  %859 = cast(%var_1559, dtype="float64") /* ty=Tensor[(48), float64] */;
  %860 = reshape(%858, newshape=[]) /* ty=float64 */;
  %861 = reshape(%859, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %862 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %863 = %857.3;
  %864 = @func_71(%860, %861) /* ty=Tensor[(3, 2, 8), bool] */;
  %865 = %862.0;
  (%850, %863, %var_1545, %var_1546, %864, %var_1559, %865)
}

def @func_5053() -> Tensor[(7, 6, 2), bool] {
  %866 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %866.0
}

def @func_3412(%var_3382: Tensor[(9, 12, 9), bool], %var_3383: Tensor[(9, 12, 9), bool]) -> (Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) {
  %867 = cast(%var_3383, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %868 = shape_of(%var_3382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_3382, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %871 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %872 = logical_or(%869, %870) /* ty=Tensor[(9, 12, 9), bool] */;
  %873 = %871.4;
  (%872, %873)
}

def @func_7433() -> Tensor[(936), float32] {
  %874 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %874.1
}

def @func_9546() -> (Tensor[(15, 7, 15), float32], float64, float64) {
  %875 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 15), float32] */;
  %876 = cast(-0.264372f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %877 = reshape(%876, newshape=[]) /* ty=float64 */;
  %878 = @func_4529(%877) /* ty=(Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) */;
  %879 = sqrt(%875) /* ty=Tensor[(15, 7, 15), float32] */;
  %880 = %878.3;
  (%879, %880, -0.264372f64 /* ty=float64 */)
}

def @func_12033() -> (Tensor[(7, 6, 2), bool],) {
  %881 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %882 = %881.0;
  (%882,)
}

def @func_3229() -> Tensor[(7, 6, 2), bool] {
  @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_6904() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %883 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %884 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
  %885 = %883.2;
  (%884, %885)
}

def @func_3260(%var_3247: Tensor[(2, 468), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) {
  %886 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %887 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %888 = cast(%var_3247, dtype="float32") /* ty=Tensor[(2, 468), float32] */;
  %889 = reshape(%888, newshape=[6, 156]) /* ty=Tensor[(6, 156), float32] */;
  %890 = @func_3069(%889) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) */;
  %891 = %886.0;
  %892 = %887.0;
  %893 = %890.0;
  %894 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  (%891, %892, %893, %var_3247, %894)
}

def @func_11645(%var_11619: Tensor[(600), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(600), int8]) {
  %895 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
  %896 = %895.3;
  %897 = cast(%var_11619, dtype="int64") /* ty=Tensor[(600), int64] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(1), int32] */;
  %899 = cast(%896, dtype="int64") /* ty=Tensor[(600), int64] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?), int64] */;
  %901 = bitwise_xor(%899, %900) /* ty=Tensor[(600), int64] */;
  %902 = cast(%var_11619, dtype="int8") /* ty=Tensor[(600), int8] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(1), int32] */;
  %904 = cast(%901, dtype="int8") /* ty=Tensor[(600), int8] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?), int8] */;
  %906 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
  %907 = @func_9235() /* ty=Tensor[(936), float32] */;
  %908 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
  %909 = right_shift(%904, %905) /* ty=Tensor[(600), int8] */;
  (%906, %907, %908, %909)
}

def @func_3692(%var_3689: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) {
  %910 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %911 = cast(meta[relay.Constant][36] /* ty=Tensor[(910), uint32] */, dtype="uint32") /* ty=Tensor[(910), uint32] */;
  %912 = reshape(%911, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), uint32] */;
  %913 = cast(%var_3689, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
  %914 = reshape(%913, newshape=[2, 468]) /* ty=Tensor[(2, 468), float32] */;
  %915 = @func_3260(%914) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) */;
  %916 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  %917 = %910.0;
  %918 = @func_2996(%912) /* ty=Tensor[(10, 7, 13), uint32] */;
  %919 = %915.4;
  (%916, %917, %918, meta[relay.Constant][36] /* ty=Tensor[(910), uint32] */, %919, %var_3689)
}

def @func_7981() -> (Tensor[(7, 6, 2), bool],) {
  %920 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %921 = %920.0;
  (%921,)
}

def @func_8591() -> (Tensor[(7, 6, 2), bool],) {
  %922 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
  (%922,)
}

def @func_11789() -> Tensor[(7, 6, 2), bool] {
  %923 = @func_9700() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
  %923.0
}

def @func_12109(%var_12090: Tensor[(6, 4, 1), float32]) -> Tensor[(6, 4, 1), float32] {
  %924 = cast(%var_12090, dtype="float32") /* ty=Tensor[(6, 4, 1), float32] */;
  asinh(%924) /* ty=Tensor[(6, 4, 1), float32] */
}

def @func_7534(%var_7522: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), uint32]) {
  %925 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %926 = @func_7433() /* ty=Tensor[(936), float32] */;
  %927 = cast(%var_7522, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(1), int32] */;
  %929 = cast(%926, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %931 = %925.0;
  %932 = add(%929, %930) /* ty=Tensor[(936), uint32] */;
  (%931, %932)
}

def @func_10123() -> Tensor[(7, 6, 2), bool] {
  %933 = @func_7768() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %933.0
}

def @func_8730() -> (Tensor[(7, 6, 2), float64],) {
  %934 = @func_5293() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %935 = %934.0;
  (%935,)
}

def @func_10231() -> (Tensor[(7, 6, 2), float64],) {
  %936 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %937 = %936.1;
  (%937,)
}

def @func_7768() -> (Tensor[(7, 6, 2), bool],) {
  %938 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  (%938,)
}

def @func_13676(%var_13667: Tensor[(4, 7, 10), int16], %var_13668: Tensor[(4, 7, 10), int16]) -> (Tensor[(4, 7, 10), int16], Tensor[(7, 6, 2), bool]) {
  %939 = cast(%var_13668, dtype="int16") /* ty=Tensor[(4, 7, 10), int16] */;
  %940 = shape_of(%var_13667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%var_13667, dtype="int16") /* ty=Tensor[(4, 7, 10), int16] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %943 = @func_12416() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %944 = multiply(%941, %942) /* ty=Tensor[(4, 7, 10), int16] */;
  %945 = %943.0;
  (%944, %945)
}

def @func_9235() -> Tensor[(936), float32] {
  %946 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %946.1
}

def @func_2590() -> (Tensor[(7, 6, 2), float64],) {
  %947 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %948 = %947.1;
  (%948,)
}

def @func_2360(%var_2352: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64],) {
  %949 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %950 = %949.0;
  %951 = cast(%var_2352, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %953 = cast(%950, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %955 = floor_mod(%953, %954) /* ty=Tensor[(7, 6, 2), float64] */;
  (%955,)
}

def @func_14383() -> (Tensor[(600), uint8], Tensor[(7, 6, 2), bool]) {
  %956 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
  %957 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %958 = %956.3;
  %959 = %957.0;
  (%958, %959)
}

def @func_5028(%var_5009: Tensor[(6, 7, 16), bool], %var_5010: Tensor[(6, 7, 16), bool]) -> (Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) {
  %960 = cast(%var_5010, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %961 = shape_of(%var_5009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%var_5009, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %964 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %965 = logical_or(%962, %963) /* ty=Tensor[(6, 7, 16), bool] */;
  %966 = %964.1;
  (%965, %966)
}

def @func_71(%var_40: float64, %var_41: Tensor[(3, 2, 8), float64]) -> Tensor[(3, 2, 8), bool] {
  %967 = cast(%var_41, dtype="float32") /* ty=Tensor[(3, 2, 8), float32] */;
  %968 = sigmoid(%967) /* ty=Tensor[(3, 2, 8), float32] */;
  %969 = cast(%var_40, dtype="float64") /* ty=float64 */;
  %970 = cast(%var_41, dtype="float64") /* ty=Tensor[(3, 2, 8), float64] */;
  %971 = power(%969, %970) /* ty=Tensor[(3, 2, 8), float64] */;
  %972 = cast(%971, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %973 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%968, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%974, %975) /* ty=Tensor[(3, 2, 8), bool] */
}

def @func_5535() -> Tensor[(7, 6, 2), bool] {
  %976 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %976.1
}

def @func_7668() -> Tensor[(7, 6, 2), bool] {
  %977 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %977.0
}

def @func_13894() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %978 = @func_13457() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) */;
  %979 = @func_10606() /* ty=Tensor[(7, 6, 2), float64] */;
  %980 = %978.0;
  (%979, %980)
}

def @func_14335(%var_14283: Tensor[(5, 14, 6), float64], %var_14284: Tensor[(5, 14, 6), float64], %var_14314: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), float64], Tensor[(5, 14, 6), bool]) {
  %981 = cast(%var_14284, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %982 = shape_of(%var_14283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%var_14283, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %985 = cast(%var_14284, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
  %986 = tan(%985) /* ty=Tensor[(5, 14, 6), float32] */;
  %987 = cast(%986, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %988 = sqrt(%987) /* ty=Tensor[(5, 14, 6), float64] */;
  %989 = cast(%988, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %990 = rsqrt(%989) /* ty=Tensor[(5, 14, 6), float64] */;
  %991 = cast(%var_14314, dtype="uint32") /* ty=Tensor[(5, 14, 6), uint32] */;
  %992 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%986, dtype="uint32") /* ty=Tensor[(5, 14, 6), uint32] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %995 = bitwise_xor(%993, %994) /* ty=Tensor[(5, 14, 6), uint32] */;
  %996 = cast(%995, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %997 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%990, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1000 = floor_mod(%983, %984) /* ty=Tensor[(5, 14, 6), float64] */;
  %1001 = greater(%998, %999) /* ty=Tensor[(5, 14, 6), bool] */;
  (%1000, %1001)
}

def @func_3376() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1002 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1003 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_5592() -> Tensor[(7, 6, 2), float64] {
  @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_3920() -> (Tensor[(936), float32],) {
  %1005 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %1006 = %1005.5;
  (%1006,)
}

def @func_12834() -> Tensor[(7, 6, 2), bool] {
  %1007 = @func_9447() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1007.0
}

def @func_5724() -> (Tensor[(936), float32],) {
  %1008 = @func_3920() /* ty=(Tensor[(936), float32],) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_12450() -> (float64, Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1010 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %1011 = @func_9118() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1012 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1013 = %1010.2;
  %1014 = %1011.0;
  %1015 = %1012.0;
  (%1013, %1014, %1015)
}

def @func_14018() -> (Tensor[(7, 6, 2), float64],) {
  %1016 = @func_10810() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_3089() -> Tensor[(7, 6, 2), float64] {
  @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_12416() -> (Tensor[(7, 6, 2), bool],) {
  %1018 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1019 = %1018.0;
  (%1019,)
}

def @func_6127() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float64]) {
  %1020 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %1021 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %1022 = %1020.0;
  %1023 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%1021, %1022, %1023)
}

def @func_13129(%var_13124: float64) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) {
  %1024 = @func_8730() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1025 = cast(%var_13124, dtype="float64") /* ty=float64 */;
  %1026 = cast(meta[relay.Constant][37] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1027 = reshape(%1025, newshape=[]) /* ty=float64 */;
  %1028 = reshape(%1026, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %1029 = %1024.0;
  %1030 = @func_71(%1027, %1028) /* ty=Tensor[(3, 2, 8), bool] */;
  (%1029, %1030, %var_13124, meta[relay.Constant][37] /* ty=Tensor[(48), float64] */)
}

def @func_9406() -> (Tensor[(7, 6, 2), bool],) {
  %1031 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1031,)
}

def @func_10742(%var_10714: Tensor[(936), float32], %var_10715: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64, Tensor[(7, 6, 2), bool]) {
  %1032 = @func_9118() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1033 = cast(%var_10714, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1034 = cast(%var_10715, dtype="float64") /* ty=float64 */;
  %1035 = reshape(%1033, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %1036 = reshape(%1034, newshape=[]) /* ty=float64 */;
  %1037 = @func_1844(%1035, %1036) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %1038 = @func_9700() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
  %1039 = %1032.0;
  %1040 = %1037.3;
  %1041 = %1038.0;
  (%1039, %1040, %var_10714, %var_10715, %1041)
}

def @func_6219(%var_6143: uint8, %var_6182: Tensor[(10, 15, 4), uint8]) -> (Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1042 = cast(%var_6143, dtype="uint8") /* ty=uint8 */;
  %1043 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(10, 1, 4), uint8] */;
  %1044 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1045 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 1, 4), uint8] */, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
  %1046 = cast(%var_6182, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
  %1047 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %1048 = bitwise_xor(%1042, %1043) /* ty=Tensor[(10, 1, 4), uint8] */;
  %1049 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %1050 = %1044.0;
  %1051 = not_equal(%1045, %1046) /* ty=Tensor[(10, 15, 4), bool] */;
  %1052 = %1047.2;
  %1053 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1048, %1049, %1050, %1051, %1052, %1053)
}

def @func_6908() -> (Tensor[(7, 6, 2), bool],) {
  %1054 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1055 = %1054.1;
  (%1055,)
}

def @func_7838() -> Tensor[(7, 6, 2), bool] {
  %1056 = @func_3656() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1056.0
}

def @func_9700() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %1057 = @func_8815() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1058 = %1057.1;
  %1059 = cast(%1058, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %1060 = reshape(%1059, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %1061 = @func_2360(%1060) /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1062 = %1061.0;
  (%1058, %1062)
}

def @func_3343() -> Tensor[(7, 6, 2), bool] {
  %1063 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1063.0
}

def @func_5935() -> Tensor[(7, 6, 2), bool] {
  @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_8239() -> (Tensor[(7, 6, 2), bool],) {
  %1064 = @func_3229() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1064,)
}

def @func_3887() -> Tensor[(7, 6, 2), bool] {
  %1065 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1065.0
}

def @func_11866() -> (Tensor[(7, 6, 2), bool],) {
  %1066 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1067 = %1066.0;
  (%1067,)
}

def @func_12872(%var_12852: Tensor[(7, 9, 12), int8], %var_12853: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(936), float32]) {
  %1068 = cast(%var_12853, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1069 = shape_of(%var_12852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%var_12852, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1072 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %1073 = add(%1070, %1071) /* ty=Tensor[(7, 9, 12), int8] */;
  %1074 = %1072.0;
  (%1073, %1074)
}

def @func_12350(%var_12329: Tensor[(2, 1, 9), float64]) -> (Tensor[(2, 1, 9), bool],) {
  %1075 = @func_5652() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %1076 = %1075.1;
  %1077 = cast(%1076, dtype="float64") /* ty=float64 */;
  %1078 = cast(%var_12329, dtype="float64") /* ty=Tensor[(2, 1, 9), float64] */;
  %1079 = power(%1077, %1078) /* ty=Tensor[(2, 1, 9), float64] */;
  %1080 = cast(%1079, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %1081 = cast(%1076, dtype="bool") /* ty=bool */;
  %1082 = less(%1080, %1081) /* ty=Tensor[(2, 1, 9), bool] */;
  (%1082,)
}

def @func_8391() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %1083 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %1084 = %1083.0;
  %1085 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  (%1084, %1085)
}

def @func_13841(%var_13799: Tensor[(8, 13, 13), int64], %var_13800: Tensor[(8, 13, 13), int64], %var_13822: Tensor[(8, 13, 13), int64]) -> (Tensor[(8, 13, 13), float32], Tensor[(7, 6, 2), bool], Tensor[(48), float64], float64) {
  %1086 = cast(%var_13800, dtype="int64") /* ty=Tensor[(8, 13, 13), int64] */;
  %1087 = shape_of(%var_13799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%var_13799, dtype="int64") /* ty=Tensor[(8, 13, 13), int64] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1090 = bitwise_or(%1088, %1089) /* ty=Tensor[(8, 13, 13), int64] */;
  %1091 = cast(%var_13822, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %1092 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%1090, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1095 = divide(%1093, %1094) /* ty=Tensor[(8, 13, 13), float32] */;
  %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %1097 = @func_11207() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1098 = cast(-8.40007f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1099 = reshape(%1098, newshape=[]) /* ty=float64 */;
  %1100 = @func_13129(%1099) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) */;
  %1101 = atan(%1096) /* ty=Tensor[(8, 13, 13), float32] */;
  %1102 = %1097.0;
  %1103 = %1100.3;
  (%1101, %1102, %1103, -8.40007f64 /* ty=float64 */)
}

def @func_4529(%var_4504: float64) -> (Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) {
  %1104 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1105 = %1104.0;
  %1106 = cast(%1105, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %1107 = cast(%1105, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %1108 = cast(meta[relay.Constant][39] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1109 = cast(%var_4504, dtype="float64") /* ty=float64 */;
  %1110 = reshape(%1107, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %1111 = reshape(%1108, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
  %1112 = reshape(%1109, newshape=[]) /* ty=float64 */;
  %1113 = @func_1314(%1110, %1111, %1112) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
  %1114 = asin(%1106) /* ty=Tensor[(7, 6, 2), float32] */;
  %1115 = %1113.2;
  (%1114, %1115, meta[relay.Constant][39] /* ty=Tensor[(936), float32] */, %var_4504)
}

def @func_7188(%var_7157: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64) {
  %1116 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %1117 = @func_5508() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1118 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1119 = cast(meta[relay.Constant][40] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1120 = cast(%var_7157, dtype="float64") /* ty=float64 */;
  %1121 = reshape(%1119, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %1122 = reshape(%1120, newshape=[]) /* ty=float64 */;
  %1123 = @func_1844(%1121, %1122) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %1124 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
  %1125 = %1116.1;
  %1126 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %1127 = %1117.1;
  %1128 = %1118.0;
  %1129 = %1123.3;
  (%1124, %1125, %1126, %1127, %1128, %1129, meta[relay.Constant][40] /* ty=Tensor[(936), float32] */, %var_7157)
}

def @func_8710() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %1130 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %1131 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  %1132 = %1130.0;
  (%1131, %1132)
}

def @func_11493() -> Tensor[(7, 6, 2), float64] {
  %1133 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %1133.0
}

def @func_8348() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %1134 = @func_6932() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */;
  %1135 = %1134.0;
  %1136 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1135, %1136)
}

def @func_6013() -> (Tensor[(7, 6, 2), bool],) {
  %1137 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1138 = %1137.0;
  (%1138,)
}

def @func_9999() -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
  %1139 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %1140 = %1139.1;
  %1141 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
  (%1140, %1141)
}

def @func_11465(%var_11436: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
  %1142 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1143 = cast(%var_11436, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %1144 = cast(%var_11436, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %1145 = reshape(%1143, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %1146 = reshape(%1144, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
  %1147 = @func_10191(%1145, %1146) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
  %1148 = @func_6572() /* ty=Tensor[(7, 6, 2), bool] */;
  %1149 = %1142.0;
  %1150 = %1147.0;
  (%1148, %1149, %1150, %var_11436)
}

def @func_1158() -> (Tensor[(7, 6, 2), bool],) {
  %1151 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1151,)
}

def @func_3458() -> (Tensor[(936), float32],) {
  %1152 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %1153 = %1152.5;
  (%1153,)
}

def @func_8815() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1154 = @func_4050() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1155 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
  %1156 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
  %1157 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  %1158 = %1154.0;
  (%1155, %1156, %1157, %1158)
}

def @func_3873() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1159 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1160 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1161 = %1159.0;
  %1162 = %1160.0;
  (%1161, %1162)
}

def @func_8500(%var_8487: float32, %var_8488: Tensor[(9, 13, 2), float32]) -> Tensor[(9, 13, 2), float32] {
  %1163 = cast(%var_8487, dtype="float32") /* ty=float32 */;
  %1164 = cast(%var_8488, dtype="float32") /* ty=Tensor[(9, 13, 2), float32] */;
  mod(%1163, %1164) /* ty=Tensor[(9, 13, 2), float32] */
}

def @func_12511() -> (Tensor[(936), float32],) {
  %1165 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %1166 = %1165.1;
  (%1166,)
}

def @func_10419() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %1167 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %1168 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1169 = %1167.0;
  %1170 = %1168.0;
  (%1169, %1170)
}

def @func_13600() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1171 = @func_5479() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1172 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %1173 = %1171.0;
  %1174 = %1172.2;
  %1175 = @func_12834() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1173, %1174, %1175)
}

def @func_14405() -> Tensor[(7, 6, 2), bool] {
  @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3124() -> Tensor[(7, 6, 2), bool] {
  %0 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %0() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_1637() -> Tensor[(7, 6, 2), bool] {
  %2 = fn () -> Tensor[(7, 6, 2), bool] {
    %1 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1.0
  };
  %2() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3344() -> Tensor[(7, 6, 2), bool] {
  %4 = fn () -> Tensor[(7, 6, 2), bool] {
    %3 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %3.0
  };
  %4() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2691(%var_2688: Tensor[(13, 6, 5), uint16], %var_2689: Tensor[(13, 6, 5), uint16], %var_2690: Tensor[(13, 6, 5), uint16]) -> (Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) {
  @func_2686(%var_2688, %var_2689, %var_2690) /* ty=(Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) */
}

def @func_7768() -> (Tensor[(7, 6, 2), bool],) {
  %5 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  (%5,)
}

def @func_6572() -> Tensor[(7, 6, 2), bool] {
  @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_7840() -> Tensor[(7, 6, 2), bool] {
  @func_7838() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12089() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %11 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %6 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %7 = @func_7720() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %8 = @func_7838() /* ty=Tensor[(7, 6, 2), bool] */;
    %9 = %6.0;
    %10 = %7.1;
    (%8, %9, %10)
  };
  %11() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_14335(%var_14283: Tensor[(5, 14, 6), float64], %var_14284: Tensor[(5, 14, 6), float64], %var_14314: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), float64], Tensor[(5, 14, 6), bool]) {
  %12 = cast(%var_14284, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %13 = shape_of(%var_14283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_14283, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %16 = cast(%var_14284, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
  %17 = tan(%16) /* ty=Tensor[(5, 14, 6), float32] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %19 = sqrt(%18) /* ty=Tensor[(5, 14, 6), float64] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(5, 14, 6), float64] */;
  %21 = rsqrt(%20) /* ty=Tensor[(5, 14, 6), float64] */;
  %22 = cast(%var_14314, dtype="uint32") /* ty=Tensor[(5, 14, 6), uint32] */;
  %23 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%17, dtype="uint32") /* ty=Tensor[(5, 14, 6), uint32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %26 = bitwise_xor(%24, %25) /* ty=Tensor[(5, 14, 6), uint32] */;
  %27 = cast(%26, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %28 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%21, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = floor_mod(%14, %15) /* ty=Tensor[(5, 14, 6), float64] */;
  %32 = greater(%29, %30) /* ty=Tensor[(5, 14, 6), bool] */;
  (%31, %32)
}

def @func_12277(%var_12276: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
  %40 = fn (%var_12262: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
    %33 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %34 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %35 = reshape(%33, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %36 = reshape(%34, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %37 = @func_10191(%35, %36) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
    %38 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
    %39 = %37.0;
    (%38, %39, %var_12262)
  };
  %40(%var_12276) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) */
}

def @func_12350(%var_12329: Tensor[(2, 1, 9), float64]) -> (Tensor[(2, 1, 9), bool],) {
  %41 = @func_5652() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %42 = %41.1;
  %43 = cast(%42, dtype="float64") /* ty=float64 */;
  %44 = cast(%var_12329, dtype="float64") /* ty=Tensor[(2, 1, 9), float64] */;
  %45 = power(%43, %44) /* ty=Tensor[(2, 1, 9), float64] */;
  %46 = cast(%45, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %47 = cast(%42, dtype="bool") /* ty=bool */;
  %48 = less(%46, %47) /* ty=Tensor[(2, 1, 9), bool] */;
  (%48,)
}

def @func_3376() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %49 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %50 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
  %51 = %49.0;
  (%50, %51)
}

def @func_12978(%var_12976: Tensor[(8, 4, 2), int32]) -> (Tensor[(8, 4, 2), int32], Tensor[(8, 4, 2), float64]) {
  @func_12975(%var_12976) /* ty=(Tensor[(8, 4, 2), int32], Tensor[(8, 4, 2), float64]) */
}

def @func_1158() -> (Tensor[(7, 6, 2), bool],) {
  %52 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%52,)
}

def @func_6856() -> (Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], uint8, Tensor[(600), uint8]) {
  %61 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], uint8, Tensor[(600), uint8]) {
    %53 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %54 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %55 = cast(meta[relay.Constant][1] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %56 = reshape(%54, newshape=[]) /* ty=uint8 */;
    %57 = reshape(%55, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
    %58 = @func_6219(%56, %57) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %59 = %53.0;
    %60 = %58.3;
    (%59, %60, meta[relay.Constant][0] /* ty=uint8 */, meta[relay.Constant][1] /* ty=Tensor[(600), uint8] */)
  };
  %61() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], uint8, Tensor[(600), uint8]) */
}

def @func_12452() -> (float64, Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_12450() /* ty=(float64, Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_7303() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %67 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
    %62 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %63 = @func_3458() /* ty=(Tensor[(936), float32],) */;
    %64 = %62.0;
    %65 = %63.0;
    %66 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
    (%64, %65, %66)
  };
  %67() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_5995() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  @func_5993() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_8105(%var_8103: Tensor[(15, 7, 5), uint8], %var_8104: Tensor[(15, 7, 5), uint8]) -> Tensor[(15, 7, 5), uint8] {
  %72 = fn (%var_8096: Tensor[(15, 7, 5), uint8], %var_8097: Tensor[(15, 7, 5), uint8]) -> Tensor[(15, 7, 5), uint8] {
    %68 = cast(%var_8097, dtype="uint8") /* ty=Tensor[(15, 7, 5), uint8] */;
    %69 = shape_of(%var_8096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(%var_8096, dtype="uint8") /* ty=Tensor[(15, 7, 5), uint8] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    left_shift(%70, %71) /* ty=Tensor[(15, 7, 5), uint8] */
  };
  %72(%var_8103, %var_8104) /* ty=Tensor[(15, 7, 5), uint8] */
}

def @func_4994() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %76 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %73 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %74 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
    %75 = %73.0;
    (%74, %75)
  };
  %76() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_4693() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %80 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %77 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
    %78 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
    %79 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    (%77, %78, %79)
  };
  %80() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_237(%var_211: Tensor[(9, 13, 8), float32], %var_231: float64) -> (Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) {
  %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %82 = shape_of(%var_211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_211, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %85 = cast(%var_231, dtype="float64") /* ty=float64 */;
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %87 = reshape(%85, newshape=[]) /* ty=float64 */;
  %88 = reshape(%86, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
  %89 = cast(%var_211, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %90 = asinh(%89) /* ty=Tensor[(9, 13, 8), float32] */;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %92 = floor_mod(%83, %84) /* ty=Tensor[(9, 13, 8), float32] */;
  %93 = @func_71(%87, %88) /* ty=Tensor[(3, 2, 8), bool] */;
  %94 = tan(%91) /* ty=Tensor[(9, 13, 8), float32] */;
  (%92, %93, %var_231, meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, %94)
}

def @func_9799() -> Tensor[(7, 6, 2), float32] {
  @func_9797() /* ty=Tensor[(7, 6, 2), float32] */
}

def @func_5054() -> Tensor[(7, 6, 2), bool] {
  %96 = fn () -> Tensor[(7, 6, 2), bool] {
    %95 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %95.0
  };
  %96() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3262(%var_3261: Tensor[(2, 468), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) {
  %106 = fn (%var_3247: Tensor[(2, 468), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) {
    %97 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %98 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %99 = cast(%var_3247, dtype="float32") /* ty=Tensor[(2, 468), float32] */;
    %100 = reshape(%99, newshape=[6, 156]) /* ty=Tensor[(6, 156), float32] */;
    %101 = @func_3069(%100) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) */;
    %102 = %97.0;
    %103 = %98.0;
    %104 = %101.0;
    %105 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
    (%102, %103, %104, %var_3247, %105)
  };
  %106(%var_3261) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_11467(%var_11466: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
  %116 = fn (%var_11436: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) {
    %107 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %108 = cast(%var_11436, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %109 = cast(%var_11436, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %110 = reshape(%108, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %111 = reshape(%109, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %112 = @func_10191(%110, %111) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
    %113 = @func_6572() /* ty=Tensor[(7, 6, 2), bool] */;
    %114 = %107.0;
    %115 = %112.0;
    (%113, %114, %115, %var_11436)
  };
  %116(%var_11466) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) */
}

def @func_12215() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %117 = @func_9817() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %118 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
  %119 = %117.0;
  (%118, %119)
}

def @func_5087() -> (Tensor[(7, 6, 2), bool],) {
  @func_5085() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_8350() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  @func_8348() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_8732() -> (Tensor[(7, 6, 2), float64],) {
  @func_8730() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_4209() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %125 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %120 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %121 = %120.0;
    %122 = cast(%121, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    %123 = log10(%122) /* ty=Tensor[(7, 6, 2), float64] */;
    %124 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
    (%123, %124)
  };
  %125() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_11083() -> (Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) {
  @func_11081() /* ty=(Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) */
}

def @func_8710() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %126 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %127 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  %128 = %126.0;
  (%127, %128)
}

def @func_5085() -> (Tensor[(7, 6, 2), bool],) {
  %129 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
  (%129,)
}

def @func_8978() -> Tensor[(936), float32] {
  %130 = fn () -> Tensor[(936), float32] {
    @func_7433() /* ty=Tensor[(936), float32] */
  };
  %130() /* ty=Tensor[(936), float32] */
}

def @func_5787() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */
}

def @func_6222(%var_6220: uint8, %var_6221: Tensor[(10, 15, 4), uint8]) -> (Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %143 = fn (%var_6143: uint8, %var_6182: Tensor[(10, 15, 4), uint8]) -> (Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %131 = cast(%var_6143, dtype="uint8") /* ty=uint8 */;
    %132 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(10, 1, 4), uint8] */;
    %133 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %134 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 1, 4), uint8] */, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
    %135 = cast(%var_6182, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
    %136 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %137 = bitwise_xor(%131, %132) /* ty=Tensor[(10, 1, 4), uint8] */;
    %138 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
    %139 = %133.0;
    %140 = not_equal(%134, %135) /* ty=Tensor[(10, 15, 4), bool] */;
    %141 = %136.2;
    %142 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
    (%137, %138, %139, %140, %141, %142)
  };
  %143(%var_6220, %var_6221) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_9505() -> Tensor[(7, 6, 2), bool] {
  %145 = fn () -> Tensor[(7, 6, 2), bool] {
    %144 = @func_7768() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %144.0
  };
  %145() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12353(%var_12351: Tensor[(2, 1, 9), float64]) -> (Tensor[(2, 1, 9), bool],) {
  @func_12350(%var_12351) /* ty=(Tensor[(2, 1, 9), bool],) */
}

def @func_6127() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float64]) {
  %146 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %147 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %148 = %146.0;
  %149 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%147, %148, %149)
}

def @func_11790() -> Tensor[(7, 6, 2), bool] {
  %151 = fn () -> Tensor[(7, 6, 2), bool] {
    %150 = @func_9700() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
    %150.0
  };
  %151() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_11111() -> Tensor[(7, 6, 2), float64] {
  %152 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %152.0
}

def @func_3072(%var_3070: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) {
  @func_3069(%var_3070) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) */
}

def @func_13895() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %156 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %153 = @func_13457() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) */;
    %154 = @func_10606() /* ty=Tensor[(7, 6, 2), float64] */;
    %155 = %153.0;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_11024() -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %163 = fn () -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
    %157 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
    %158 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %159 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %160 = %157.0;
    %161 = %158.0;
    %162 = %159.0;
    (%160, %161, %162)
  };
  %163() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_11686() -> Tensor[(7, 6, 2), float64] {
  @func_5695() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_13841(%var_13799: Tensor[(8, 13, 13), int64], %var_13800: Tensor[(8, 13, 13), int64], %var_13822: Tensor[(8, 13, 13), int64]) -> (Tensor[(8, 13, 13), float32], Tensor[(7, 6, 2), bool], Tensor[(48), float64], float64) {
  %164 = cast(%var_13800, dtype="int64") /* ty=Tensor[(8, 13, 13), int64] */;
  %165 = shape_of(%var_13799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_13799, dtype="int64") /* ty=Tensor[(8, 13, 13), int64] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %168 = bitwise_or(%166, %167) /* ty=Tensor[(8, 13, 13), int64] */;
  %169 = cast(%var_13822, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%168, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %173 = divide(%171, %172) /* ty=Tensor[(8, 13, 13), float32] */;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(8, 13, 13), float32] */;
  %175 = @func_11207() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %176 = cast(-8.40007f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %177 = reshape(%176, newshape=[]) /* ty=float64 */;
  %178 = @func_13129(%177) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) */;
  %179 = atan(%174) /* ty=Tensor[(8, 13, 13), float32] */;
  %180 = %175.0;
  %181 = %178.3;
  (%179, %180, %181, -8.40007f64 /* ty=float64 */)
}

def @func_1004() -> (Tensor[(7, 6, 2), bool],) {
  %182 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%182,)
}

def @func_14641(%var_14640: Tensor[(490), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(490), uint64]) {
  %189 = fn (%var_14636: Tensor[(490), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(490), uint64]) {
    %183 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %184 = cast(%var_14636, dtype="uint64") /* ty=Tensor[(490), uint64] */;
    %185 = reshape(%184, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), uint64] */;
    %186 = @func_4644(%185) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) */;
    %187 = %183.0;
    %188 = %186.0;
    (%187, %188, %var_14636)
  };
  %189(%var_14640) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(490), uint64]) */
}

def @func_1434() -> Tensor[(7, 6, 2), float64] {
  %192 = fn () -> Tensor[(7, 6, 2), float64] {
    %190 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    %191 = cast(%190, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    asinh(%191) /* ty=Tensor[(7, 6, 2), float64] */
  };
  %192() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_10099() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %199 = fn () -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
    %193 = @func_7070() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), float64]) */;
    %194 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %195 = @func_6932() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */;
    %196 = %193.0;
    %197 = %194.1;
    %198 = %195.0;
    (%196, %197, %198)
  };
  %199() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_14406() -> Tensor[(7, 6, 2), bool] {
  %200 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %200() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_9041() -> (Tensor[(7, 5, 4), bool], Tensor[(936), float32]) {
  %205 = fn () -> (Tensor[(7, 5, 4), bool], Tensor[(936), float32]) {
    %201 = cast(meta[relay.Constant][5] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %202 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 5, 4), int8] */, dtype="bool") /* ty=Tensor[(7, 5, 4), bool] */;
    %203 = less(%201, %202) /* ty=Tensor[(7, 5, 4), bool] */;
    %204 = @func_8977() /* ty=Tensor[(936), float32] */;
    (%203, %204)
  };
  %205() /* ty=(Tensor[(7, 5, 4), bool], Tensor[(936), float32]) */
}

def @func_15160() -> (Tensor[(7, 6, 2), float32],) {
  %208 = fn () -> (Tensor[(7, 6, 2), float32],) {
    %206 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(7, 6, 2), float32],) */
}

def @func_7435() -> Tensor[(936), float32] {
  @func_7433() /* ty=Tensor[(936), float32] */
}

def @func_14795() -> (Tensor[(7, 8, 12), bool], Tensor[(7, 6, 2), bool]) {
  %209 = @func_8089() /* ty=(Tensor[(7, 8, 12), float64],) */;
  %210 = %209.0;
  %211 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 8, 12), float64] */, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = @func_5652() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %216 = logical_and(%213, %214) /* ty=Tensor[(7, 8, 12), bool] */;
  %217 = %215.0;
  (%216, %217)
}

def @func_7191(%var_7189: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64) {
  @func_7188(%var_7189) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64) */
}

def @func_3622() -> (Tensor[(7, 6, 2), float64],) {
  @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_5220(%var_5218: Tensor[(390), uint16]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(13, 6, 5), uint32], Tensor[(390), uint16]) {
  @func_5217(%var_5218) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(13, 6, 5), uint32], Tensor[(390), uint16]) */
}

def @func_1629(%var_1606: Tensor[(7, 6, 2), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %218 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  %219 = cast(%var_1606, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%218, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %223 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %224 = logical_and(%221, %222) /* ty=Tensor[(7, 6, 2), bool] */;
  %225 = %223.0;
  (%224, %225)
}

def @func_9825() -> (Tensor[(7, 6, 2), bool],) {
  %227 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %226 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_4132() -> float64 {
  %229 = fn () -> float64 {
    %228 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
    %228.1
  };
  %229() /* ty=float64 */
}

def @func_14200() -> Tensor[(7, 6, 2), bool] {
  %231 = fn () -> Tensor[(7, 6, 2), bool] {
    %230 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %230.0
  };
  %231() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3873() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %232 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %233 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %234 = %232.0;
  %235 = %233.0;
  (%234, %235)
}

def @func_9408() -> (Tensor[(7, 6, 2), bool],) {
  @func_9406() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_1632(%var_1630: Tensor[(7, 6, 2), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_1629(%var_1630) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_4394() -> (Tensor[(7, 6, 2), bool],) {
  @func_4392() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_6589() -> (Tensor[(7, 6, 2), bool],) {
  @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_5274() -> Tensor[(7, 6, 2), bool] {
  %236 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %236.0
}

def @func_10958() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  @func_10956() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */
}

def @func_6933() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
  %239 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
    %237 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
    %238 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
    (%237, %238)
  };
  %239() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */
}

def @func_13225(%var_13224: Tensor[(3, 11, 8), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(3, 11, 8), uint8]) {
  %249 = fn (%var_13181: Tensor[(3, 11, 8), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(3, 11, 8), uint8]) {
    %240 = @func_5821() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %241 = cast(%var_13181, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
    %242 = sqrt(%241) /* ty=Tensor[(3, 11, 8), float64] */;
    %243 = cast(%var_13181, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%242, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %247 = %240.0;
    %248 = add(%245, %246) /* ty=Tensor[(3, 11, 8), uint8] */;
    (%247, %248)
  };
  %249(%var_13224) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(3, 11, 8), uint8]) */
}

def @func_6985() -> Tensor[(7, 6, 2), bool] {
  %250 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %250.1
}

def @func_2885() -> (Tensor[(7, 6, 2), bool],) {
  @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_14797() -> (Tensor[(7, 8, 12), bool], Tensor[(7, 6, 2), bool]) {
  @func_14795() /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_2999(%var_2997: Tensor[(10, 7, 13), uint32]) -> Tensor[(10, 7, 13), uint32] {
  @func_2996(%var_2997) /* ty=Tensor[(10, 7, 13), uint32] */
}

def @func_8090() -> (Tensor[(7, 8, 12), float64],) {
  %253 = fn () -> (Tensor[(7, 8, 12), float64],) {
    %251 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 12), float64] */;
    %252 = log10(%251) /* ty=Tensor[(7, 8, 12), float64] */;
    (%252,)
  };
  %253() /* ty=(Tensor[(7, 8, 12), float64],) */
}

def @func_12836() -> Tensor[(7, 6, 2), bool] {
  @func_12834() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12383() -> Tensor[(7, 6, 2), float64] {
  @func_11569() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7982() -> (Tensor[(7, 6, 2), bool],) {
  %256 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %254 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %255 = %254.0;
    (%255,)
  };
  %256() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_2522() -> Tensor[(7, 6, 2), bool] {
  @func_2520() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_9618() -> Tensor[(7, 6, 2), float64] {
  @func_9616() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_3218(%var_3216: Tensor[(7, 6, 2), float64]) -> (float64, Tensor[(7, 6, 2), float32], Tensor[(84), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  @func_3215(%var_3216) /* ty=(float64, Tensor[(7, 6, 2), float32], Tensor[(84), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */
}

def @func_12188() -> Tensor[(7, 6, 2), bool] {
  %258 = fn () -> Tensor[(7, 6, 2), bool] {
    %257 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %257.0
  };
  %258() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_8730() -> (Tensor[(7, 6, 2), float64],) {
  %259 = @func_5293() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %260 = %259.0;
  (%260,)
}

def @func_13729() -> Tensor[(7, 6, 2), bool] {
  %262 = fn () -> Tensor[(7, 6, 2), bool] {
    %261 = @func_4208() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %261.1
  };
  %262() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_14269() -> (Tensor[(7, 6, 2), float64],) {
  @func_14267() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_2180() -> (Tensor[(7, 6, 2), bool],) {
  %265 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %263 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %264 = %263.0;
    (%264,)
  };
  %265() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_11866() -> (Tensor[(7, 6, 2), bool],) {
  %266 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %267 = %266.0;
  (%267,)
}

def @func_14988(%var_14986: Tensor[(300), uint8], %var_14987: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(300), bool]) {
  %282 = fn (%var_14962: Tensor[(300), uint8], %var_14976: Tensor[(300), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(300), bool]) {
    %268 = cast(%var_14962, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %269 = cast(%var_14962, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %270 = reshape(%268, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %271 = reshape(%269, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), uint8] */;
    %272 = @func_10191(%270, %271) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */;
    %273 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %274 = cast(%var_14976, dtype="bool") /* ty=Tensor[(300), bool] */;
    %275 = shape_of(%var_14962, dtype="int32") /* ty=Tensor[(1), int32] */;
    %276 = cast(%var_14962, dtype="bool") /* ty=Tensor[(300), bool] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?), bool] */;
    %278 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
    %279 = %272.1;
    %280 = %273.0;
    %281 = equal(%276, %277) /* ty=Tensor[(300), bool] */;
    (%278, %279, %280, %281)
  };
  %282(%var_14986, %var_14987) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(300), bool]) */
}

def @func_13372(%var_13370: Tensor[(2, 1200), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 1200), float32], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  @func_13369(%var_13370) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 1200), float32], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_5028(%var_5009: Tensor[(6, 7, 16), bool], %var_5010: Tensor[(6, 7, 16), bool]) -> (Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) {
  %283 = cast(%var_5010, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %284 = shape_of(%var_5009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%var_5009, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %288 = logical_or(%285, %286) /* ty=Tensor[(6, 7, 16), bool] */;
  %289 = %287.1;
  (%288, %289)
}

def @func_3656() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %290 = @func_3376() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %291 = %290.1;
  %292 = @func_2898() /* ty=Tensor[(7, 6, 2), bool] */;
  (%291, %292)
}

def @func_5935() -> Tensor[(7, 6, 2), bool] {
  @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_1918() -> (Tensor[(7, 6, 2), bool],) {
  %295 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %293 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %294 = %293.0;
    (%294,)
  };
  %295() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_12555() -> (Tensor[(936), float32],) {
  %305 = fn () -> (Tensor[(936), float32],) {
    %296 = @func_12511() /* ty=(Tensor[(936), float32],) */;
    %297 = %296.0;
    %298 = cast(%297, dtype="float32") /* ty=Tensor[(936), float32] */;
    %299 = cosh(%298) /* ty=Tensor[(936), float32] */;
    %300 = cast(%297, dtype="float32") /* ty=Tensor[(936), float32] */;
    %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(1), int32] */;
    %302 = cast(%299, dtype="float32") /* ty=Tensor[(936), float32] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?), float32] */;
    %304 = floor_divide(%302, %303) /* ty=Tensor[(936), float32] */;
    (%304,)
  };
  %305() /* ty=(Tensor[(936), float32],) */
}

def @func_5821() -> (Tensor[(7, 6, 2), bool],) {
  %306 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %307 = %306.0;
  (%307,)
}

def @func_6987() -> Tensor[(7, 6, 2), bool] {
  @func_6985() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_5403() -> (Tensor[(7, 6, 2), float32],) {
  %308 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %309 = %308.0;
  %310 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %312 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%309, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %315 = power(%313, %314) /* ty=Tensor[(7, 6, 2), float32] */;
  (%315,)
}

def @func_74(%var_72: float64, %var_73: Tensor[(3, 2, 8), float64]) -> Tensor[(3, 2, 8), bool] {
  %325 = fn (%var_40: float64, %var_41: Tensor[(3, 2, 8), float64]) -> Tensor[(3, 2, 8), bool] {
    %316 = cast(%var_41, dtype="float32") /* ty=Tensor[(3, 2, 8), float32] */;
    %317 = sigmoid(%316) /* ty=Tensor[(3, 2, 8), float32] */;
    %318 = cast(%var_40, dtype="float64") /* ty=float64 */;
    %319 = cast(%var_41, dtype="float64") /* ty=Tensor[(3, 2, 8), float64] */;
    %320 = power(%318, %319) /* ty=Tensor[(3, 2, 8), float64] */;
    %321 = cast(%320, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %322 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %323 = cast(%317, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%323, %324) /* ty=Tensor[(3, 2, 8), bool] */
  };
  %325(%var_72, %var_73) /* ty=Tensor[(3, 2, 8), bool] */
}

def @func_5566() -> (Tensor[(7, 6, 2), bool],) {
  @func_5564() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_10539() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %331 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %326 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %327 = @func_6908() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %328 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
    %329 = %326.0;
    %330 = %327.0;
    (%328, %329, %330)
  };
  %331() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_1894() -> Tensor[(7, 6, 2), bool] {
  %332 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %332.0
}

def @func_9701() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %339 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
    %333 = @func_8815() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %334 = %333.1;
    %335 = cast(%334, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %336 = reshape(%335, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %337 = @func_2360(%336) /* ty=(Tensor[(7, 6, 2), float64],) */;
    %338 = %337.0;
    (%334, %338)
  };
  %339() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_4002() -> (Tensor[(7, 6, 2), bool],) {
  %340 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %341 = %340.0;
  (%341,)
}

def @func_1577(%var_1574: Tensor[(936, 1), float32], %var_1575: float64, %var_1576: Tensor[(48), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) {
  %359 = fn (%var_1545: Tensor[(936, 1), float32], %var_1546: float64, %var_1559: Tensor[(48), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) {
    %342 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %343 = %342.0;
    %344 = cast(%343, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %345 = cast(%var_1545, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
    %346 = cast(%var_1546, dtype="float64") /* ty=float64 */;
    %347 = reshape(%344, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %348 = reshape(%345, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
    %349 = reshape(%346, newshape=[]) /* ty=float64 */;
    %350 = @func_1314(%347, %348, %349) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
    %351 = cast(%var_1546, dtype="float64") /* ty=float64 */;
    %352 = cast(%var_1559, dtype="float64") /* ty=Tensor[(48), float64] */;
    %353 = reshape(%351, newshape=[]) /* ty=float64 */;
    %354 = reshape(%352, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
    %355 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %356 = %350.3;
    %357 = @func_71(%353, %354) /* ty=Tensor[(3, 2, 8), bool] */;
    %358 = %355.0;
    (%343, %356, %var_1545, %var_1546, %357, %var_1559, %358)
  };
  %359(%var_1574, %var_1575, %var_1576) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_8816() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %365 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %360 = @func_4050() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %361 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
    %362 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
    %363 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
    %364 = %360.0;
    (%361, %362, %363, %364)
  };
  %365() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_6908() -> (Tensor[(7, 6, 2), bool],) {
  %366 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %367 = %366.1;
  (%367,)
}

def @func_3620() -> (Tensor[(7, 6, 2), float64],) {
  %368 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %369 = %368.1;
  (%369,)
}

def @func_12511() -> (Tensor[(936), float32],) {
  %370 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %371 = %370.1;
  (%371,)
}

def @func_2167() -> Tensor[(7, 6, 2), bool] {
  %373 = fn () -> Tensor[(7, 6, 2), bool] {
    %372 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %372.2
  };
  %373() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_8119() -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64]) {
  %374 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %375 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %376 = %374.0;
  %377 = %375.2;
  (%376, %377)
}

def @func_2397() -> Tensor[(7, 6, 2), bool] {
  %379 = fn () -> Tensor[(7, 6, 2), bool] {
    %378 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %378.0
  };
  %379() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_11914() -> Tensor[(7, 6, 2), bool] {
  @func_11912() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3515() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %390 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
    %380 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %381 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %382 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %383 = %380.0;
    %384 = cast(%383, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %385 = reshape(%384, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %386 = @func_2825(%385) /* ty=(Tensor[(7, 6, 2), float32],) */;
    %387 = %381.0;
    %388 = %382.0;
    %389 = %386.0;
    (%383, %387, %388, %389)
  };
  %390() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */
}

def @func_12513() -> (Tensor[(936), float32],) {
  @func_12511() /* ty=(Tensor[(936), float32],) */
}

def @func_9017() -> (Tensor[(7, 6, 2), bool], Tensor[(3, 2, 8), bool], Tensor[(936), float32], float64) {
  %391 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %392 = cast(meta[relay.Constant][9] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %393 = cast(-6.18664f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %394 = reshape(%392, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %395 = reshape(%393, newshape=[]) /* ty=float64 */;
  %396 = @func_237(%394, %395) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %397 = %391.0;
  %398 = %396.1;
  (%397, %398, meta[relay.Constant][9] /* ty=Tensor[(936), float32] */, -6.18664f64 /* ty=float64 */)
}

def @func_11814() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_11812() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_6129() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float64]) {
  @func_6127() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float64]) */
}

def @func_14868(%var_14866: Tensor[(11, 16, 6), uint16], %var_14867: uint8) -> (Tensor[(7, 6, 2), bool], Tensor[(10, 1, 4), uint8], uint8, Tensor[(2, 300), uint8], Tensor[(11, 16, 6), bool]) {
  %421 = fn (%var_14809: Tensor[(11, 16, 6), uint16], %var_14841: uint8) -> (Tensor[(7, 6, 2), bool], Tensor[(10, 1, 4), uint8], uint8, Tensor[(2, 300), uint8], Tensor[(11, 16, 6), bool]) {
    %399 = cast(%var_14841, dtype="uint8") /* ty=uint8 */;
    %400 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 300), uint8] */, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
    %401 = reshape(%399, newshape=[]) /* ty=uint8 */;
    %402 = reshape(%400, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
    %403 = @func_6219(%401, %402) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %404 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 16, 6), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %405 = shape_of(%var_14809, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%var_14809, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %408 = less(%406, %407) /* ty=Tensor[(11, 16, 6), bool] */;
    %409 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 16, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
    %410 = shape_of(%var_14809, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%var_14809, dtype="uint16") /* ty=Tensor[(11, 16, 6), uint16] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %413 = bitwise_and(%411, %412) /* ty=Tensor[(11, 16, 6), uint16] */;
    %414 = cast(%413, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %415 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %416 = cast(%408, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %418 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
    %419 = %403.0;
    %420 = logical_and(%416, %417) /* ty=Tensor[(11, 16, 6), bool] */;
    (%418, %419, %var_14841, meta[relay.Constant][10] /* ty=Tensor[(2, 300), uint8] */, %420)
  };
  %421(%var_14866, %var_14867) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(10, 1, 4), uint8], uint8, Tensor[(2, 300), uint8], Tensor[(11, 16, 6), bool]) */
}

def @func_2900() -> Tensor[(7, 6, 2), bool] {
  @func_2898() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2859() -> (Tensor[(7, 6, 2), bool],) {
  %423 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %422 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
    (%422,)
  };
  %423() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_5696() -> Tensor[(7, 6, 2), float64] {
  %425 = fn () -> Tensor[(7, 6, 2), float64] {
    %424 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
    %424.0
  };
  %425() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_2362(%var_2361: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64],) {
  %433 = fn (%var_2352: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64],) {
    %426 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %427 = %426.0;
    %428 = cast(%var_2352, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
    %430 = cast(%427, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %432 = floor_mod(%430, %431) /* ty=Tensor[(7, 6, 2), float64] */;
    (%432,)
  };
  %433(%var_2361) /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_9616() -> Tensor[(7, 6, 2), float64] {
  %434 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %434.0
}

def @func_14728() -> (Tensor[(2, ?, 11), int16], Tensor[(2, ?, 11), bool], Tensor[(2, ?, 11), int64]) {
  %435 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %436 = sin(%435) /* ty=Tensor[(2, 1, 11), float64] */;
  %437 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 1, 11), float64] */, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = greater(%439, %440) /* ty=Tensor[(2, ?, 11), bool] */;
  %442 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 1, 11), float64] */, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %446 = logical_or(%444, %445) /* ty=Tensor[(2, ?, 11), bool] */;
  %447 = cast(%441, dtype="int16") /* ty=Tensor[(2, ?, 11), int16] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int16") /* ty=Tensor[(2, ?, 11), int16] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %451 = cast(%446, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %452 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%441, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = cast(%446, dtype="int64") /* ty=Tensor[(2, ?, 11), int64] */;
  %456 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%441, dtype="int64") /* ty=Tensor[(2, ?, 11), int64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %459 = bitwise_xor(%449, %450) /* ty=Tensor[(2, ?, 11), int16] */;
  %460 = greater_equal(%453, %454) /* ty=Tensor[(2, ?, 11), bool] */;
  %461 = bitwise_and(%457, %458) /* ty=Tensor[(2, ?, 11), int64] */;
  (%459, %460, %461)
}

def @func_3089() -> Tensor[(7, 6, 2), float64] {
  @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_14114() -> (Tensor[(7, 6, 2), bool],) {
  %462 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %463 = %462.3;
  (%463,)
}

def @func_6910() -> (Tensor[(7, 6, 2), bool],) {
  @func_6908() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_8241() -> (Tensor[(7, 6, 2), bool],) {
  @func_8239() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_5479() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %464 = @func_5053() /* ty=Tensor[(7, 6, 2), bool] */;
  %465 = @func_5053() /* ty=Tensor[(7, 6, 2), bool] */;
  (%464, %465)
}

def @func_1187() -> (Tensor[(7, 6, 2), bool],) {
  %467 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %466 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    (%466,)
  };
  %467() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_14516() -> Tensor[(7, 6, 2), bool] {
  @func_14514() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_1319(%var_1316: Tensor[(7, 6, 2), bool], %var_1317: Tensor[(36, 26), float32], %var_1318: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) {
  @func_1314(%var_1316, %var_1317, %var_1318) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */
}

def @func_8469() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %468 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %469 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
  %470 = %468.0;
  (%469, %470)
}

def @func_2898() -> Tensor[(7, 6, 2), bool] {
  %471 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %471.0
}

def @func_4114() -> Tensor[(7, 6, 2), float64] {
  @func_3089() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7072() -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
  @func_7070() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), float64]) */
}

def @func_13716() -> (Tensor[(7, 6, 2), bool],) {
  %472 = @func_11081() /* ty=(Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) */;
  %473 = %472.1;
  (%473,)
}

def @func_5785() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %474 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %475 = @func_5724() /* ty=(Tensor[(936), float32],) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="float32") /* ty=Tensor[(936), float32] */;
  %478 = %474.4;
  %479 = tan(%477) /* ty=Tensor[(936), float32] */;
  (%478, %479)
}

def @func_8348() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %480 = @func_6932() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */;
  %481 = %480.0;
  %482 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
  (%481, %482)
}

def @func_14084() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(300), uint8]) {
  %490 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(300), uint8]) {
    %483 = @func_13645() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
    %484 = cast(meta[relay.Constant][13] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %485 = reshape(%484, newshape=[300]) /* ty=Tensor[(300), uint8] */;
    %486 = @func_12275(%485) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(5, 6, 10), bool], Tensor[(300), uint8]) */;
    %487 = @func_8232() /* ty=Tensor[(7, 6, 2), bool] */;
    %488 = %483.0;
    %489 = %486.0;
    (%487, %488, %489, meta[relay.Constant][13] /* ty=Tensor[(300), uint8] */)
  };
  %490() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(300), uint8]) */
}

def @func_14514() -> Tensor[(7, 6, 2), bool] {
  %491 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %491.1
}

def @func_2591() -> (Tensor[(7, 6, 2), float64],) {
  %494 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %492 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
    %493 = %492.1;
    (%493,)
  };
  %494() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_8712() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  @func_8710() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */
}

def @func_3069(%var_3063: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(6, 156), float32], float64) {
  %495 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %496 = cast(%var_3063, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
  %497 = cast(-3.0461f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %498 = reshape(%496, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %499 = reshape(%497, newshape=[]) /* ty=float64 */;
  %500 = @func_237(%498, %499) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %501 = %495.0;
  %502 = %500.0;
  (%501, %502, %var_3063, -3.0461f64 /* ty=float64 */)
}

def @func_8121() -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64]) {
  @func_8119() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64]) */
}

def @func_12834() -> Tensor[(7, 6, 2), bool] {
  %503 = @func_9447() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %503.0
}

def @func_9818() -> (Tensor[(7, 6, 2), bool],) {
  %506 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %504 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %505 = %504.1;
    (%505,)
  };
  %506() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_12876(%var_12874: Tensor[(7, 9, 12), int8], %var_12875: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(936), float32]) {
  @func_12872(%var_12874, %var_12875) /* ty=(Tensor[(7, 9, 12), int8], Tensor[(936), float32]) */
}

def @func_3888() -> Tensor[(7, 6, 2), bool] {
  %508 = fn () -> Tensor[(7, 6, 2), bool] {
    %507 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %507.0
  };
  %508() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12111(%var_12110: Tensor[(6, 4, 1), float32]) -> Tensor[(6, 4, 1), float32] {
  %510 = fn (%var_12090: Tensor[(6, 4, 1), float32]) -> Tensor[(6, 4, 1), float32] {
    %509 = cast(%var_12090, dtype="float32") /* ty=Tensor[(6, 4, 1), float32] */;
    asinh(%509) /* ty=Tensor[(6, 4, 1), float32] */
  };
  %510(%var_12110) /* ty=Tensor[(6, 4, 1), float32] */
}

def @func_9546() -> (Tensor[(15, 7, 15), float32], float64, float64) {
  %511 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 15), float32] */;
  %512 = cast(-0.264372f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %513 = reshape(%512, newshape=[]) /* ty=float64 */;
  %514 = @func_4529(%513) /* ty=(Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) */;
  %515 = sqrt(%511) /* ty=Tensor[(15, 7, 15), float32] */;
  %516 = %514.3;
  (%515, %516, -0.264372f64 /* ty=float64 */)
}

def @func_10810() -> (Tensor[(7, 6, 2), float64],) {
  %517 = @func_8730() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %518 = %517.0;
  (%518,)
}

def @func_2883() -> (Tensor[(7, 6, 2), bool],) {
  %519 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %520 = %519.0;
  (%520,)
}

def @func_6057() -> Tensor[(7, 6, 2), bool] {
  %521 = @func_5993() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
  %521.1
}

def @func_4430() -> (Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %522 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %523 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %524 = reshape(%522, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %525 = reshape(%523, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
  %526 = @func_1375(%524, %525) /* ty=(Tensor[(6, 15, 2), uint16],) */;
  %527 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %528 = @func_2520() /* ty=Tensor[(7, 6, 2), bool] */;
  %529 = %526.0;
  %530 = @func_3229() /* ty=Tensor[(7, 6, 2), bool] */;
  %531 = %527.1;
  (%528, %529, meta[relay.Constant][15] /* ty=Tensor[(180), uint16] */, %530, %531)
}

def @func_3378() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_3376() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_12450() -> (float64, Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %532 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %533 = @func_9118() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %534 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %535 = %532.2;
  %536 = %533.0;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_10471() -> Tensor[(7, 6, 2), float32] {
  @func_10469() /* ty=Tensor[(7, 6, 2), float32] */
}

def @func_4392() -> (Tensor[(7, 6, 2), bool],) {
  %538 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %539 = %538.0;
  (%539,)
}

def @func_6015() -> (Tensor[(7, 6, 2), bool],) {
  @func_6013() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_2766() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) {
  @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */
}

def @func_1314(%var_1267: Tensor[(7, 6, 2), bool], %var_1291: Tensor[(36, 26), float32], %var_1292: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) {
  %540 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %541 = %540.0;
  %542 = cast(%var_1267, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %546 = multiply(%544, %545) /* ty=Tensor[(7, 6, 2), float32] */;
  %547 = cast(%541, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %551 = cast(%var_1291, dtype="float64") /* ty=Tensor[(36, 26), float64] */;
  %552 = cast(%var_1291, dtype="float32") /* ty=Tensor[(36, 26), float32] */;
  %553 = cast(%var_1292, dtype="float64") /* ty=float64 */;
  %554 = reshape(%552, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
  %555 = reshape(%553, newshape=[]) /* ty=float64 */;
  %556 = @func_237(%554, %555) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
  %557 = %556.4;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(9, 13, 8), float32] */;
  %559 = greater_equal(%549, %550) /* ty=Tensor[(7, 6, 2), bool] */;
  %560 = log(%551) /* ty=Tensor[(36, 26), float64] */;
  %561 = cos(%558) /* ty=Tensor[(9, 13, 8), float32] */;
  (%559, %var_1292, %560, %561)
}

def @func_5654() -> (Tensor[(7, 6, 2), bool], float64) {
  @func_5652() /* ty=(Tensor[(7, 6, 2), bool], float64) */
}

def @func_2483() -> (Tensor[(7, 6, 2), bool], float64) {
  @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */
}

def @func_4004() -> (Tensor[(7, 6, 2), bool],) {
  @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_9937() -> Tensor[(7, 6, 2), bool] {
  %562 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %562.0
}

def @main(%var_15202: Tensor[(9, 12, 1), uint16], %var_15203: Tensor[(9, 12, 4), uint16]) -> (Tensor[(9, 12, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(9, 12, 4), uint16]) {
  %563 = cast(%var_15202, dtype="uint16") /* ty=Tensor[(9, 12, 1), uint16] */;
  %564 = cast(%var_15203, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %565 = bitwise_xor(%563, %564) /* ty=Tensor[(9, 12, 4), uint16] */;
  %566 = cast(%565, dtype="bool") /* ty=Tensor[(9, 12, 4), bool] */;
  %567 = cast(%var_15202, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %568 = @func_6015() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %569 = cast(%var_15203, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %570 = shape_of(%565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%565, dtype="uint16") /* ty=Tensor[(9, 12, 4), uint16] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %573 = greater(%566, %567) /* ty=Tensor[(9, 12, 4), bool] */;
  %574 = %568.0;
  %575 = subtract(%571, %572) /* ty=Tensor[(9, 12, 4), uint16] */;
  (%573, %574, %575)
}

def @func_14231(%var_14229: bool, %var_14230: Tensor[(13, 8, 11), bool]) -> (Tensor[(13, 8, 11), bool], Tensor[(180), uint16]) {
  %581 = fn (%var_14216: bool, %var_14217: Tensor[(13, 8, 11), bool]) -> (Tensor[(13, 8, 11), bool], Tensor[(180), uint16]) {
    %576 = cast(%var_14216, dtype="bool") /* ty=bool */;
    %577 = cast(%var_14217, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
    %578 = @func_11081() /* ty=(Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) */;
    %579 = logical_and(%576, %577) /* ty=Tensor[(13, 8, 11), bool] */;
    %580 = %578.0;
    (%579, %580)
  };
  %581(%var_14229, %var_14230) /* ty=(Tensor[(13, 8, 11), bool], Tensor[(180), uint16]) */
}

def @func_5593() -> Tensor[(7, 6, 2), float64] {
  %582 = fn () -> Tensor[(7, 6, 2), float64] {
    @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
  };
  %582() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_2508() -> (float64, Tensor[(7, 6, 2), float64]) {
  %583 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %584 = %583.1;
  %585 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  (%584, %585)
}

def @func_8503(%var_8501: float32, %var_8502: Tensor[(9, 13, 2), float32]) -> Tensor[(9, 13, 2), float32] {
  %588 = fn (%var_8487: float32, %var_8488: Tensor[(9, 13, 2), float32]) -> Tensor[(9, 13, 2), float32] {
    %586 = cast(%var_8487, dtype="float32") /* ty=float32 */;
    %587 = cast(%var_8488, dtype="float32") /* ty=Tensor[(9, 13, 2), float32] */;
    mod(%586, %587) /* ty=Tensor[(9, 13, 2), float32] */
  };
  %588(%var_8501, %var_8502) /* ty=Tensor[(9, 13, 2), float32] */
}

def @func_11081() -> (Tensor[(180), uint16], Tensor[(7, 6, 2), bool]) {
  %589 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %590 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %591 = %589.2;
  %592 = %590.0;
  (%591, %592)
}

def @func_10125() -> Tensor[(7, 6, 2), bool] {
  @func_10123() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_6905() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %596 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %593 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %594 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
    %595 = %593.2;
    (%594, %595)
  };
  %596() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_3230() -> Tensor[(7, 6, 2), bool] {
  %597 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_3123() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %597() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12175() -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(3, 9, 9), uint32], Tensor[(27), uint32], Tensor[(243), uint32], Tensor[(7, 6, 2), bool]) {
  %611 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(3, 9, 9), uint32], Tensor[(27), uint32], Tensor[(243), uint32], Tensor[(7, 6, 2), bool]) {
    %598 = cast(meta[relay.Constant][16] /* ty=Tensor[(520), float64] */, dtype="float64") /* ty=Tensor[(520), float64] */;
    %599 = reshape(%598, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
    %600 = @func_1028(%599) /* ty=(Tensor[(13, 4, 10), float64],) */;
    %601 = cast(meta[relay.Constant][17] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
    %602 = cast(meta[relay.Constant][18] /* ty=Tensor[(243), uint32] */, dtype="uint32") /* ty=Tensor[(243), uint32] */;
    %603 = reshape(%601, newshape=[3, 1, 9]) /* ty=Tensor[(3, 1, 9), uint32] */;
    %604 = reshape(%602, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), uint32] */;
    %605 = @func_3989(%603, %604) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %606 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %607 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
    %608 = %600.0;
    %609 = %605.2;
    %610 = %606.0;
    (%607, %608, meta[relay.Constant][16] /* ty=Tensor[(520), float64] */, %609, meta[relay.Constant][17] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][18] /* ty=Tensor[(243), uint32] */, %610)
  };
  %611() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(3, 9, 9), uint32], Tensor[(27), uint32], Tensor[(243), uint32], Tensor[(7, 6, 2), bool]) */
}

def @func_6768(%var_6767: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %625 = fn (%var_6736: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %612 = cast(%var_6736, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %613 = cast(%var_6736, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %614 = reshape(%612, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
    %615 = reshape(%613, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), uint16] */;
    %616 = @func_1375(%614, %615) /* ty=(Tensor[(6, 15, 2), uint16],) */;
    %617 = %616.0;
    %618 = cast(%617, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
    %619 = @func_4993() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %620 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %621 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
    %622 = tan(%618) /* ty=Tensor[(6, 15, 2), float32] */;
    %623 = %619.0;
    %624 = %620.0;
    (%621, %var_6736, %622, %623, %624)
  };
  %625(%var_6767) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_7925(%var_7924: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(6, 15, 2), float32], Tensor[(180), uint16]) {
  %631 = fn (%var_7921: Tensor[(180), uint16]) -> (Tensor[(7, 6, 2), float64], Tensor[(6, 15, 2), float32], Tensor[(180), uint16]) {
    %626 = cast(%var_7921, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %627 = reshape(%626, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %628 = @func_6766(%627) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(180), uint16], Tensor[(6, 15, 2), float32], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %629 = @func_3805() /* ty=Tensor[(7, 6, 2), float64] */;
    %630 = %628.2;
    (%629, %630, %var_7921)
  };
  %631(%var_7924) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(6, 15, 2), float32], Tensor[(180), uint16]) */
}

def @func_5910() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %632 = @func_4772() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
  %633 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %634 = %632.0;
  %635 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
  %636 = %633.0;
  (%634, %635, %636)
}

def @func_10232() -> (Tensor[(7, 6, 2), float64],) {
  %639 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %637 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %638 = %637.1;
    (%638,)
  };
  %639() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_1030(%var_1029: Tensor[(13, 4, 10), float64]) -> (Tensor[(13, 4, 10), float64],) {
  %644 = fn (%var_1016: Tensor[(13, 4, 10), float64]) -> (Tensor[(13, 4, 10), float64],) {
    %640 = cast(%var_1016, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
    %641 = asinh(%640) /* ty=Tensor[(13, 4, 10), float64] */;
    %642 = cast(%641, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
    %643 = log2(%642) /* ty=Tensor[(13, 4, 10), float64] */;
    (%643,)
  };
  %644(%var_1029) /* ty=(Tensor[(13, 4, 10), float64],) */
}

def @func_3694(%var_3693: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) {
  %655 = fn (%var_3689: Tensor[(6, 156), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) {
    %645 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %646 = cast(meta[relay.Constant][19] /* ty=Tensor[(910), uint32] */, dtype="uint32") /* ty=Tensor[(910), uint32] */;
    %647 = reshape(%646, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), uint32] */;
    %648 = cast(%var_3689, dtype="float32") /* ty=Tensor[(6, 156), float32] */;
    %649 = reshape(%648, newshape=[2, 468]) /* ty=Tensor[(2, 468), float32] */;
    %650 = @func_3260(%649) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) */;
    %651 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    %652 = %645.0;
    %653 = @func_2996(%647) /* ty=Tensor[(10, 7, 13), uint32] */;
    %654 = %650.4;
    (%651, %652, %653, meta[relay.Constant][19] /* ty=Tensor[(910), uint32] */, %654, %var_3689)
  };
  %655(%var_3693) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) */
}

def @func_15127() -> Tensor[(7, 6, 2), float64] {
  %657 = fn () -> Tensor[(7, 6, 2), float64] {
    %656 = @func_13970() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %656.1
  };
  %657() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_11688() -> Tensor[(7, 6, 2), float64] {
  @func_11686() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7497() -> (Tensor[(7, 6, 2), bool], float64) {
  %658 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %659 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
  %660 = %658.2;
  (%659, %660)
}

def @func_5535() -> Tensor[(7, 6, 2), bool] {
  %661 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %661.1
}

def @func_2520() -> Tensor[(7, 6, 2), bool] {
  @func_2166() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_9548() -> (Tensor[(15, 7, 15), float32], float64, float64) {
  @func_9546() /* ty=(Tensor[(15, 7, 15), float32], float64, float64) */
}

def @func_8239() -> (Tensor[(7, 6, 2), bool],) {
  %662 = @func_3229() /* ty=Tensor[(7, 6, 2), bool] */;
  (%662,)
}

def @func_6013() -> (Tensor[(7, 6, 2), bool],) {
  %663 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %664 = %663.0;
  (%664,)
}

def @func_8629() -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) {
  %672 = fn () -> (Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) {
    %665 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %666 = cast(meta[relay.Constant][21] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %667 = reshape(%665, newshape=[]) /* ty=uint8 */;
    %668 = reshape(%666, newshape=[10, 15, 4]) /* ty=Tensor[(10, 15, 4), uint8] */;
    %669 = @func_6219(%667, %668) /* ty=(Tensor[(10, 1, 4), uint8], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 15, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %670 = @func_6326() /* ty=Tensor[(7, 6, 2), float32] */;
    %671 = %669.1;
    (%670, %671, meta[relay.Constant][20] /* ty=uint8 */, meta[relay.Constant][21] /* ty=Tensor[(600), uint8] */)
  };
  %672() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */
}

def @func_1954() -> (Tensor[(7, 6, 2), bool],) {
  %673 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %674 = %673.0;
  (%674,)
}

def @func_14019() -> (Tensor[(7, 6, 2), float64],) {
  %677 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %675 = @func_10810() /* ty=(Tensor[(7, 6, 2), float64],) */;
    %676 = %675.0;
    (%676,)
  };
  %677() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_2837() -> (Tensor[(7, 6, 2), bool],) {
  %680 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %678 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %679 = %678.0;
    (%679,)
  };
  %680() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_13679(%var_13677: Tensor[(4, 7, 10), int16], %var_13678: Tensor[(4, 7, 10), int16]) -> (Tensor[(4, 7, 10), int16], Tensor[(7, 6, 2), bool]) {
  %688 = fn (%var_13667: Tensor[(4, 7, 10), int16], %var_13668: Tensor[(4, 7, 10), int16]) -> (Tensor[(4, 7, 10), int16], Tensor[(7, 6, 2), bool]) {
    %681 = cast(%var_13668, dtype="int16") /* ty=Tensor[(4, 7, 10), int16] */;
    %682 = shape_of(%var_13667, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%var_13667, dtype="int16") /* ty=Tensor[(4, 7, 10), int16] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %685 = @func_12416() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %686 = multiply(%683, %684) /* ty=Tensor[(4, 7, 10), int16] */;
    %687 = %685.0;
    (%686, %687)
  };
  %688(%var_13677, %var_13678) /* ty=(Tensor[(4, 7, 10), int16], Tensor[(7, 6, 2), bool]) */
}

def @func_13646() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %692 = fn () -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
    %689 = @func_2858() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %690 = @func_7433() /* ty=Tensor[(936), float32] */;
    %691 = %689.0;
    (%690, %691)
  };
  %692() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_9406() -> (Tensor[(7, 6, 2), bool],) {
  %693 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  (%693,)
}

def @func_3459() -> (Tensor[(936), float32],) {
  %696 = fn () -> (Tensor[(936), float32],) {
    %694 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
    %695 = %694.5;
    (%695,)
  };
  %696() /* ty=(Tensor[(936), float32],) */
}

def @func_1006() -> (Tensor[(7, 6, 2), bool],) {
  @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_14116() -> (Tensor[(7, 6, 2), bool],) {
  @func_14114() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_8471() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_8469() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_4531(%var_4530: float64) -> (Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) {
  %709 = fn (%var_4504: float64) -> (Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) {
    %697 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %698 = %697.0;
    %699 = cast(%698, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
    %700 = cast(%698, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %701 = cast(meta[relay.Constant][22] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %702 = cast(%var_4504, dtype="float64") /* ty=float64 */;
    %703 = reshape(%700, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %704 = reshape(%701, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
    %705 = reshape(%702, newshape=[]) /* ty=float64 */;
    %706 = @func_1314(%703, %704, %705) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
    %707 = asin(%699) /* ty=Tensor[(7, 6, 2), float32] */;
    %708 = %706.2;
    (%707, %708, meta[relay.Constant][22] /* ty=Tensor[(936), float32] */, %var_4504)
  };
  %709(%var_4530) /* ty=(Tensor[(7, 6, 2), float32], Tensor[(36, 26), float64], Tensor[(936), float32], float64) */
}

def @func_1847(%var_1845: Tensor[(1, 936), float32], %var_1846: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) {
  %726 = fn (%var_1824: Tensor[(1, 936), float32], %var_1825: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) {
    %710 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %711 = cast(%var_1824, dtype="float32") /* ty=Tensor[(1, 936), float32] */;
    %712 = cast(%var_1825, dtype="float64") /* ty=float64 */;
    %713 = reshape(%711, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float32] */;
    %714 = reshape(%712, newshape=[]) /* ty=float64 */;
    %715 = @func_237(%713, %714) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */;
    %716 = cast(%var_1824, dtype="float32") /* ty=Tensor[(1, 936), float32] */;
    %717 = %715.2;
    %718 = cast(%717, dtype="float64") /* ty=float64 */;
    %719 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %720 = reshape(%716, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
    %721 = reshape(%718, newshape=[]) /* ty=float64 */;
    %722 = reshape(%719, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %723 = @func_1573(%720, %721, %722) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
    %724 = %710.0;
    %725 = %723.1;
    (%724, %717, %var_1824, %var_1825, %725, meta[relay.Constant][23] /* ty=Tensor[(48), float64] */)
  };
  %726(%var_1845, %var_1846) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */
}

def @func_7536(%var_7535: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), uint32]) {
  %735 = fn (%var_7522: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), uint32]) {
    %727 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %728 = @func_7433() /* ty=Tensor[(936), float32] */;
    %729 = cast(%var_7522, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(1), int32] */;
    %731 = cast(%728, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %733 = %727.0;
    %734 = add(%731, %732) /* ty=Tensor[(936), uint32] */;
    (%733, %734)
  };
  %735(%var_7535) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), uint32]) */
}

def @func_1519(%var_1517: Tensor[(12, 78), float32], %var_1518: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(12, 78), float32], float64) {
  %746 = fn (%var_1497: Tensor[(12, 78), float32], %var_1498: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(12, 78), float32], float64) {
    %736 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %737 = %736.0;
    %738 = cast(%737, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %739 = cast(%var_1497, dtype="float32") /* ty=Tensor[(12, 78), float32] */;
    %740 = cast(%var_1498, dtype="float64") /* ty=float64 */;
    %741 = reshape(%738, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %742 = reshape(%739, newshape=[36, 26]) /* ty=Tensor[(36, 26), float32] */;
    %743 = reshape(%740, newshape=[]) /* ty=float64 */;
    %744 = @func_1314(%741, %742, %743) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(36, 26), float64], Tensor[(9, 13, 8), float32]) */;
    %745 = %744.0;
    (%737, %745, %var_1497, %var_1498)
  };
  %746(%var_1517, %var_1518) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(12, 78), float32], float64) */
}

def @func_3485() -> Tensor[(7, 6, 2), bool] {
  %747 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_2396() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %747() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3416(%var_3414: Tensor[(9, 12, 9), bool], %var_3415: Tensor[(9, 12, 9), bool]) -> (Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) {
  @func_3412(%var_3414, %var_3415) /* ty=(Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) */
}

def @func_4855(%var_4853: Tensor[(15, 16, 10), float32]) -> (Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) {
  @func_4852(%var_4853) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_13871() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  @func_13869() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_14251(%var_14249: Tensor[(7, 11, 9), float64]) -> Tensor[(7, 11, 9), float64] {
  @func_14248(%var_14249) /* ty=Tensor[(7, 11, 9), float64] */
}

def @func_12916() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_12914() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_12975(%var_12959: Tensor[(8, 4, 2), int32]) -> (Tensor[(8, 4, 2), int32], Tensor[(8, 4, 2), float64]) {
  %748 = cast(%var_12959, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  %749 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 4, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 4, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 4, 2), int32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %752 = cast(%var_12959, dtype="float64") /* ty=Tensor[(8, 4, 2), float64] */;
  %753 = add(%750, %751) /* ty=Tensor[(8, 4, 2), int32] */;
  %754 = exp(%752) /* ty=Tensor[(8, 4, 2), float64] */;
  (%753, %754)
}

def @func_14730() -> (Tensor[(2, ?, 11), int16], Tensor[(2, ?, 11), bool], Tensor[(2, ?, 11), int64]) {
  @func_14728() /* ty=(Tensor[(2, ?, 11), int16], Tensor[(2, ?, 11), bool], Tensor[(2, ?, 11), int64]) */
}

def @func_6688() -> Tensor[(936), float32] {
  %755 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %755.0
}

def @func_11645(%var_11619: Tensor[(600), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(600), int8]) {
  %756 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
  %757 = %756.3;
  %758 = cast(%var_11619, dtype="int64") /* ty=Tensor[(600), int64] */;
  %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(1), int32] */;
  %760 = cast(%757, dtype="int64") /* ty=Tensor[(600), int64] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?), int64] */;
  %762 = bitwise_xor(%760, %761) /* ty=Tensor[(600), int64] */;
  %763 = cast(%var_11619, dtype="int8") /* ty=Tensor[(600), int8] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(1), int32] */;
  %765 = cast(%762, dtype="int8") /* ty=Tensor[(600), int8] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?), int8] */;
  %767 = @func_3484() /* ty=Tensor[(7, 6, 2), bool] */;
  %768 = @func_9235() /* ty=Tensor[(936), float32] */;
  %769 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
  %770 = right_shift(%765, %766) /* ty=Tensor[(600), int8] */;
  (%767, %768, %769, %770)
}

def @func_979() -> Tensor[(7, 6, 2), bool] {
  %771 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 6, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %772 = exp(%771) /* ty=Tensor[(7, 6, 2), float64] */;
  %773 = cast(%772, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %774 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(7, 6, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 6, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%775, %776) /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_3091() -> Tensor[(7, 6, 2), float64] {
  @func_3089() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_3992(%var_3990: Tensor[(3, 1, 9), uint32], %var_3991: Tensor[(3, 9, 9), uint32]) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %801 = fn (%var_3938: Tensor[(3, 1, 9), uint32], %var_3939: Tensor[(3, 9, 9), uint32]) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %777 = cast(%var_3938, dtype="bool") /* ty=Tensor[(3, 1, 9), bool] */;
    %778 = cast(%var_3939, dtype="bool") /* ty=Tensor[(3, 9, 9), bool] */;
    %779 = greater_equal(%777, %778) /* ty=Tensor[(3, 9, 9), bool] */;
    %780 = cast(%779, dtype="float64") /* ty=Tensor[(3, 9, 9), float64] */;
    %781 = log2(%780) /* ty=Tensor[(3, 9, 9), float64] */;
    %782 = cast(%781, dtype="float64") /* ty=Tensor[(3, 9, 9), float64] */;
    %783 = cast(%var_3938, dtype="uint32") /* ty=Tensor[(3, 1, 9), uint32] */;
    %784 = cast(%779, dtype="uint32") /* ty=Tensor[(3, 9, 9), uint32] */;
    %785 = cast(%var_3939, dtype="uint64") /* ty=Tensor[(3, 9, 9), uint64] */;
    %786 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %787 = cast(%781, dtype="uint64") /* ty=Tensor[(3, 9, 9), uint64] */;
    %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %789 = @func_3089() /* ty=Tensor[(7, 6, 2), float64] */;
    %790 = cast(%789, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %791 = cast(%789, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
    %792 = reshape(%790, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %793 = reshape(%791, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
    %794 = @func_2432(%792, %793) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) */;
    %795 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %796 = sinh(%782) /* ty=Tensor[(3, 9, 9), float64] */;
    %797 = right_shift(%783, %784) /* ty=Tensor[(3, 9, 9), uint32] */;
    %798 = left_shift(%787, %788) /* ty=Tensor[(3, 9, 9), uint64] */;
    %799 = %794.0;
    %800 = %795.0;
    (%789, %796, %797, %798, %799, %800)
  };
  %801(%var_3990, %var_3991) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 9, 9), float64], Tensor[(3, 9, 9), uint32], Tensor[(3, 9, 9), uint64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_5405() -> (Tensor[(7, 6, 2), float32],) {
  @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */
}

def @func_10453(%var_10452: Tensor[(14, 3, 8), float64]) -> (Tensor[(14, 3, 8), float64], Tensor[(7, 6, 2), bool]) {
  %806 = fn (%var_10428: Tensor[(14, 3, 8), float64]) -> (Tensor[(14, 3, 8), float64], Tensor[(7, 6, 2), bool]) {
    %802 = cast(%var_10428, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
    %803 = @func_9447() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %804 = atan(%802) /* ty=Tensor[(14, 3, 8), float64] */;
    %805 = %803.0;
    (%804, %805)
  };
  %806(%var_10452) /* ty=(Tensor[(14, 3, 8), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_10956() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32]) {
  %807 = @func_3920() /* ty=(Tensor[(936), float32],) */;
  %808 = @func_10386() /* ty=Tensor[(7, 6, 2), bool] */;
  %809 = %807.0;
  (%808, %809)
}

def @func_2432(%var_2418: Tensor[(7, 6, 2), bool], %var_2425: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) {
  %810 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
  %811 = cast(%var_2418, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %815 = cast(%var_2425, dtype="int64") /* ty=Tensor[(7, 6, 2), int64] */;
  %816 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%810, dtype="int64") /* ty=Tensor[(7, 6, 2), int64] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %819 = add(%813, %814) /* ty=Tensor[(7, 6, 2), float64] */;
  %820 = left_shift(%817, %818) /* ty=Tensor[(7, 6, 2), int64] */;
  (%819, %820)
}

def @func_3922() -> (Tensor[(936), float32],) {
  @func_3920() /* ty=(Tensor[(936), float32],) */
}

def @func_7188(%var_7157: float64) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64) {
  %821 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %822 = @func_5508() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %823 = @func_2179() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %824 = cast(meta[relay.Constant][26] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %825 = cast(%var_7157, dtype="float64") /* ty=float64 */;
  %826 = reshape(%824, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %827 = reshape(%825, newshape=[]) /* ty=float64 */;
  %828 = @func_1844(%826, %827) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %829 = @func_5935() /* ty=Tensor[(7, 6, 2), bool] */;
  %830 = %821.1;
  %831 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %832 = %822.1;
  %833 = %823.0;
  %834 = %828.3;
  (%829, %830, %831, %832, %833, %834, meta[relay.Constant][26] /* ty=Tensor[(936), float32] */, %var_7157)
}

def @func_14523() -> (Tensor[(7, 6, 2), float64],) {
  %837 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %835 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
    %836 = %835.0;
    (%836,)
  };
  %837() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_11648(%var_11646: Tensor[(600), uint8]) -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(600), int8]) {
  @func_11645(%var_11646) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(600), int8]) */
}

def @func_7606(%var_7605: Tensor[(4, 3, 4), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(4, 3, 4), bool]) {
  %850 = fn (%var_7567: Tensor[(4, 3, 4), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(4, 3, 4), bool]) {
    %838 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
    %839 = shape_of(%var_7567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %840 = cast(%var_7567, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
    %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %842 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %843 = cast(%var_7567, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
    %844 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %847 = logical_and(%840, %841) /* ty=Tensor[(4, 3, 4), bool] */;
    %848 = %842.0;
    %849 = less_equal(%845, %846) /* ty=Tensor[(4, 3, 4), bool] */;
    (%847, %848, %849)
  };
  %850(%var_7605) /* ty=(Tensor[(4, 3, 4), bool], Tensor[(7, 6, 2), bool], Tensor[(4, 3, 4), bool]) */
}

def @func_8923() -> (Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32], Tensor[(936), float32]) {
  %857 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32], Tensor[(936), float32]) {
    %851 = @func_7720() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %852 = cast(meta[relay.Constant][28] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %853 = reshape(%852, newshape=[6, 156]) /* ty=Tensor[(6, 156), float32] */;
    %854 = @func_3692(%853) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(10, 7, 13), uint32], Tensor[(910), uint32], Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32]) */;
    %855 = %851.1;
    %856 = %854.5;
    (%855, %856, meta[relay.Constant][28] /* ty=Tensor[(936), float32] */)
  };
  %857() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 156), float32], Tensor[(936), float32]) */
}

def @func_14248(%var_14239: Tensor[(7, 11, 9), float64]) -> Tensor[(7, 11, 9), float64] {
  %858 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 9), float64] */;
  %859 = cast(%var_14239, dtype="float64") /* ty=Tensor[(7, 11, 9), float64] */;
  divide(%858, %859) /* ty=Tensor[(7, 11, 9), float64] */
}

def @func_5217(%var_5205: Tensor[(390), uint16]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool], Tensor[(13, 6, 5), uint32], Tensor[(390), uint16]) {
  %860 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %861 = %860.0;
  %862 = cast(%861, dtype="bool") /* ty=Tensor[(7, 6, 2), bool] */;
  %863 = reshape(%862, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %864 = @func_2360(%863) /* ty=(Tensor[(7, 6, 2), float64],) */;
  %865 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %866 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %867 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %868 = @func_3920() /* ty=(Tensor[(936), float32],) */;
  %869 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %870 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %871 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %872 = cast(%var_5205, dtype="uint16") /* ty=Tensor[(390), uint16] */;
  %873 = reshape(%870, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %874 = reshape(%871, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %875 = reshape(%872, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), uint16] */;
  %876 = @func_2686(%873, %874, %875) /* ty=(Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) */;
  %877 = %864.0;
  %878 = %865.0;
  %879 = %866.0;
  %880 = %867.0;
  %881 = %868.0;
  %882 = %869.2;
  %883 = %876.1;
  (%861, %877, %878, %879, %880, %881, %882, %883, %var_5205)
}

def @func_15109() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(7, 6, 2), bool]) {
  %890 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(7, 6, 2), bool]) {
    %884 = @func_9546() /* ty=(Tensor[(15, 7, 15), float32], float64, float64) */;
    %885 = @func_5564() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %886 = @func_13728() /* ty=Tensor[(7, 6, 2), bool] */;
    %887 = @func_7668() /* ty=Tensor[(7, 6, 2), bool] */;
    %888 = %884.1;
    %889 = %885.0;
    (%886, %887, %888, %889)
  };
  %890() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], float64, Tensor[(7, 6, 2), bool]) */
}

def @func_6328() -> Tensor[(7, 6, 2), float32] {
  @func_6326() /* ty=Tensor[(7, 6, 2), float32] */
}

def @func_13846(%var_13843: Tensor[(8, 13, 13), int64], %var_13844: Tensor[(8, 13, 13), int64], %var_13845: Tensor[(8, 13, 13), int64]) -> (Tensor[(8, 13, 13), float32], Tensor[(7, 6, 2), bool], Tensor[(48), float64], float64) {
  @func_13841(%var_13843, %var_13844, %var_13845) /* ty=(Tensor[(8, 13, 13), float32], Tensor[(7, 6, 2), bool], Tensor[(48), float64], float64) */
}

def @func_2764() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) {
  %891 = @func_2590() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %892 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %893 = cast(meta[relay.Constant][30] /* ty=Tensor[(520), float64] */, dtype="float64") /* ty=Tensor[(520), float64] */;
  %894 = reshape(%893, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
  %895 = @func_1028(%894) /* ty=(Tensor[(13, 4, 10), float64],) */;
  %896 = cast(meta[relay.Constant][31] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %897 = cast(2.09584f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %898 = reshape(%896, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %899 = reshape(%897, newshape=[]) /* ty=float64 */;
  %900 = @func_1844(%898, %899) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %901 = %891.0;
  %902 = %892.2;
  %903 = %895.0;
  %904 = %900.2;
  (%901, %902, %903, meta[relay.Constant][30] /* ty=Tensor[(520), float64] */, %904, meta[relay.Constant][31] /* ty=Tensor[(936), float32] */, 2.09584f64 /* ty=float64 */)
}

def @func_11493() -> Tensor[(7, 6, 2), float64] {
  %905 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %905.0
}

def @func_5912() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_4432() -> (Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_14551(%var_14549: Tensor[(2400), float32]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2400), float32]) {
  %906 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %907 = @func_5564() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %908 = cast(%var_14549, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %909 = reshape(%908, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float32] */;
  %910 = @func_4852(%909) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) */;
  %911 = %906.0;
  %912 = %907.0;
  %913 = %910.1;
  (%911, %912, %913, %var_14549)
}

def @func_3806() -> Tensor[(7, 6, 2), float64] {
  %914 = fn () -> Tensor[(7, 6, 2), float64] {
    @func_1433() /* ty=Tensor[(7, 6, 2), float64] */
  };
  %914() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7770() -> (Tensor[(7, 6, 2), bool],) {
  @func_7768() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_11495() -> Tensor[(7, 6, 2), float64] {
  @func_11493() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_1160() -> (Tensor[(7, 6, 2), bool],) {
  @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_12217() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_12215() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_10000() -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
  %918 = fn () -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
    %915 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
    %916 = %915.1;
    %917 = @func_4114() /* ty=Tensor[(7, 6, 2), float64] */;
    (%916, %917)
  };
  %918() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), float64]) */
}

def @func_3412(%var_3382: Tensor[(9, 12, 9), bool], %var_3383: Tensor[(9, 12, 9), bool]) -> (Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) {
  %919 = cast(%var_3383, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %920 = shape_of(%var_3382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%var_3382, dtype="bool") /* ty=Tensor[(9, 12, 9), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %924 = logical_or(%921, %922) /* ty=Tensor[(9, 12, 9), bool] */;
  %925 = %923.4;
  (%924, %925)
}

def @func_14593() -> (Tensor[(7, 6, 2), bool],) {
  @func_14591() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_4347() -> Tensor[(7, 6, 2), bool] {
  @func_4345() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_1779() -> (Tensor[(7, 6, 2), bool],) {
  %926 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %927 = %926.0;
  (%927,)
}

def @func_10123() -> Tensor[(7, 6, 2), bool] {
  %928 = @func_7768() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %928.0
}

def @func_9236() -> Tensor[(936), float32] {
  %930 = fn () -> Tensor[(936), float32] {
    %929 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
    %929.1
  };
  %930() /* ty=Tensor[(936), float32] */
}

def @func_12385() -> Tensor[(7, 6, 2), float64] {
  @func_12383() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_2117() -> (Tensor[(7, 6, 2), bool],) {
  %933 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %931 = @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %932 = %931.0;
    (%932,)
  };
  %933() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_14340(%var_14337: Tensor[(5, 14, 6), float64], %var_14338: Tensor[(5, 14, 6), float64], %var_14339: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), float64], Tensor[(5, 14, 6), bool]) {
  @func_14335(%var_14337, %var_14338, %var_14339) /* ty=(Tensor[(5, 14, 6), float64], Tensor[(5, 14, 6), bool]) */
}

def @func_5481() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_5479() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_11298() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %938 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %934 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %935 = @func_4392() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %936 = %934.0;
    %937 = %935.0;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_11570() -> Tensor[(7, 6, 2), float64] {
  %939 = fn () -> Tensor[(7, 6, 2), float64] {
    @func_4114() /* ty=Tensor[(7, 6, 2), float64] */
  };
  %939() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_9019() -> (Tensor[(7, 6, 2), bool], Tensor[(3, 2, 8), bool], Tensor[(936), float32], float64) {
  @func_9017() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(3, 2, 8), bool], Tensor[(936), float32], float64) */
}

def @func_7838() -> Tensor[(7, 6, 2), bool] {
  %940 = @func_3656() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %940.0
}

def @func_2827(%var_2826: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float32],) {
  %948 = fn (%var_2784: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float32],) {
    %941 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %942 = %941.0;
    %943 = cast(%var_2784, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
    %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
    %945 = cast(%942, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %947 = subtract(%945, %946) /* ty=Tensor[(7, 6, 2), float32] */;
    (%947,)
  };
  %948(%var_2826) /* ty=(Tensor[(7, 6, 2), float32],) */
}

def @func_10420() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %953 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
    %949 = @func_6904() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %950 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %951 = %949.0;
    %952 = %950.0;
    (%951, %952)
  };
  %953() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_11912() -> Tensor[(7, 6, 2), bool] {
  @func_3887() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12938() -> Tensor[(7, 6, 2), bool] {
  %955 = fn () -> Tensor[(7, 6, 2), bool] {
    %954 = @func_5085() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %954.0
  };
  %955() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_10906(%var_10905: Tensor[(672), bool]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(6, 7, 16), bool], Tensor[(672), bool], Tensor[(972), float32]) {
  %977 = fn (%var_10895: Tensor[(672), bool]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(6, 7, 16), bool], Tensor[(672), bool], Tensor[(972), float32]) {
    %956 = @func_7981() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %957 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %958 = cast(%var_10895, dtype="bool") /* ty=Tensor[(672), bool] */;
    %959 = cast(%var_10895, dtype="bool") /* ty=Tensor[(672), bool] */;
    %960 = reshape(%958, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), bool] */;
    %961 = reshape(%959, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), bool] */;
    %962 = @func_5028(%960, %961) /* ty=(Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) */;
    %963 = cast(meta[relay.Constant][32] /* ty=Tensor[(972), bool] */, dtype="bool") /* ty=Tensor[(972), bool] */;
    %964 = cast(meta[relay.Constant][32] /* ty=Tensor[(972), bool] */, dtype="bool") /* ty=Tensor[(972), bool] */;
    %965 = reshape(%963, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), bool] */;
    %966 = reshape(%964, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), bool] */;
    %967 = @func_3412(%965, %966) /* ty=(Tensor[(9, 12, 9), bool], Tensor[(1, 936), float32]) */;
    %968 = %967.0;
    %969 = cast(%968, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
    %970 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(972), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %971 = cast(meta[relay.Constant][32] /* ty=Tensor[(972), bool] */, dtype="float32") /* ty=Tensor[(972), float32] */;
    %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?), float32] */;
    %973 = %956.0;
    %974 = %957.0;
    %975 = %962.0;
    %976 = floor_mod(%971, %972) /* ty=Tensor[(972), float32] */;
    (%973, %974, %975, %var_10895, %976)
  };
  %977(%var_10905) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(6, 7, 16), bool], Tensor[(672), bool], Tensor[(972), float32]) */
}

def @func_10607() -> Tensor[(7, 6, 2), float64] {
  %978 = fn () -> Tensor[(7, 6, 2), float64] {
    @func_4114() /* ty=Tensor[(7, 6, 2), float64] */
  };
  %978() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_7499() -> (Tensor[(7, 6, 2), bool], float64) {
  @func_7497() /* ty=(Tensor[(7, 6, 2), bool], float64) */
}

def @func_9887() -> (Tensor[(7, 6, 2), bool],) {
  %980 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %979 = @func_9504() /* ty=Tensor[(7, 6, 2), bool] */;
    (%979,)
  };
  %980() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_2631() -> (Tensor[(7, 6, 2), bool],) {
  @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_10742(%var_10714: Tensor[(936), float32], %var_10715: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64, Tensor[(7, 6, 2), bool]) {
  %981 = @func_9118() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %982 = cast(%var_10714, dtype="float32") /* ty=Tensor[(936), float32] */;
  %983 = cast(%var_10715, dtype="float64") /* ty=float64 */;
  %984 = reshape(%982, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
  %985 = reshape(%983, newshape=[]) /* ty=float64 */;
  %986 = @func_1844(%984, %985) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
  %987 = @func_9700() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */;
  %988 = %981.0;
  %989 = %986.3;
  %990 = %987.0;
  (%988, %989, %var_10714, %var_10715, %990)
}

def @func_2629() -> (Tensor[(7, 6, 2), bool],) {
  %991 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %992 = %991.2;
  (%992,)
}

def @func_6690() -> Tensor[(936), float32] {
  @func_6688() /* ty=Tensor[(936), float32] */
}

def @func_11868() -> (Tensor[(7, 6, 2), bool],) {
  @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_13369(%var_13351: Tensor[(2, 1200), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 1200), float32], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %993 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %994 = cast(%var_13351, dtype="float32") /* ty=Tensor[(2, 1200), float32] */;
  %995 = reshape(%994, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float32] */;
  %996 = @func_4852(%995) /* ty=(Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) */;
  %997 = @func_11297() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %998 = @func_1894() /* ty=Tensor[(7, 6, 2), bool] */;
  %999 = %993.0;
  %1000 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
  %1001 = @func_11912() /* ty=Tensor[(7, 6, 2), bool] */;
  %1002 = @func_3123() /* ty=Tensor[(7, 6, 2), bool] */;
  %1003 = %996.1;
  %1004 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  %1005 = %997.1;
  (%998, %999, %1000, %1001, %1002, %1003, %var_13351, %1004, %1005)
}

def @func_12830() -> Tensor[(7, 6, 2), bool] {
  %1006 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_6985() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %1006() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2074() -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) {
  %1025 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) {
    %1007 = cast(meta[relay.Constant][33] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %1008 = cast(9.80802f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1009 = cast(meta[relay.Constant][34] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1010 = reshape(%1007, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
    %1011 = reshape(%1008, newshape=[]) /* ty=float64 */;
    %1012 = reshape(%1009, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1013 = @func_1573(%1010, %1011, %1012) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
    %1014 = @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1015 = %1014.0;
    %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
    %1017 = %1013.0;
    %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    %1019 = reshape(%1018, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), float64] */;
    %1020 = @func_1629(%1019) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1021 = %1020.0;
    %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
    %1023 = sqrt(%1016) /* ty=Tensor[(7, 6, 2), float32] */;
    %1024 = acos(%1022) /* ty=Tensor[(7, 6, 2), float32] */;
    (%1017, meta[relay.Constant][33] /* ty=Tensor[(936), float32] */, 9.80802f64 /* ty=float64 */, meta[relay.Constant][34] /* ty=Tensor[(48), float64] */, %1023, %1024)
  };
  %1025() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */
}

def @func_5937() -> Tensor[(7, 6, 2), bool] {
  @func_5935() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_5276() -> Tensor[(7, 6, 2), bool] {
  @func_5274() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_1896() -> Tensor[(7, 6, 2), bool] {
  @func_1894() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_12872(%var_12852: Tensor[(7, 9, 12), int8], %var_12853: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(936), float32]) {
  %1026 = cast(%var_12853, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1027 = shape_of(%var_12852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%var_12852, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1030 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %1031 = add(%1028, %1029) /* ty=Tensor[(7, 9, 12), int8] */;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_13718() -> (Tensor[(7, 6, 2), bool],) {
  @func_13716() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_13459() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) {
  @func_13457() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) */
}

def @func_3920() -> (Tensor[(936), float32],) {
  %1033 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %1034 = %1033.5;
  (%1034,)
}

def @func_7433() -> Tensor[(936), float32] {
  %1035 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %1035.1
}

def @func_9448() -> (Tensor[(7, 6, 2), bool],) {
  %1038 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %1036 = @func_8214() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_8592() -> (Tensor[(7, 6, 2), bool],) {
  %1040 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %1039 = @func_4345() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1039,)
  };
  %1040() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_14466() -> Tensor[(7, 6, 2), bool] {
  %1042 = fn () -> Tensor[(7, 6, 2), bool] {
    %1041 = @func_11207() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1041.0
  };
  %1042() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_11812() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1043 = @func_10419() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
  %1044 = @func_9504() /* ty=Tensor[(7, 6, 2), bool] */;
  %1045 = %1043.1;
  (%1044, %1045)
}

def @func_6326() -> Tensor[(7, 6, 2), float32] {
  %1046 = @func_3514() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %1047 = %1046.0;
  %1048 = cast(%1047, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  acosh(%1048) /* ty=Tensor[(7, 6, 2), float32] */
}

def @func_14905() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  @func_14903() /* ty=(Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */
}

def @func_14425() -> (Tensor[(7, 6, 2), float64],) {
  @func_14423() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_4116() -> Tensor[(7, 6, 2), float64] {
  @func_4114() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_5652() -> (Tensor[(7, 6, 2), bool], float64) {
  %1049 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
  %1050 = @func_3343() /* ty=Tensor[(7, 6, 2), bool] */;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_4773() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %1058 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
    %1052 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1053 = @func_2836() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1054 = %1053.0;
    %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(7, 6, 2), float64] */;
    %1056 = %1052.4;
    %1057 = erf(%1055) /* ty=Tensor[(7, 6, 2), float64] */;
    (%1056, %1057)
  };
  %1058() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_5032(%var_5030: Tensor[(6, 7, 16), bool], %var_5031: Tensor[(6, 7, 16), bool]) -> (Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) {
  @func_5028(%var_5030, %var_5031) /* ty=(Tensor[(6, 7, 16), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_9773(%var_9772: Tensor[(936), float32]) -> Tensor[(936), uint32] {
  %1065 = fn (%var_9761: Tensor[(936), float32]) -> Tensor[(936), uint32] {
    %1059 = @func_8710() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
    %1060 = %1059.1;
    %1061 = cast(%var_9761, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1063 = cast(%1060, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?), uint32] */;
    logical_xor(%1063, %1064) /* ty=Tensor[(936), uint32] */
  };
  %1065(%var_9772) /* ty=Tensor[(936), uint32] */
}

def @func_1227() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1070 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1066 = @func_1186() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1067 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    %1068 = %1066.0;
    %1069 = @func_979() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1067, %1068, %1069)
  };
  %1070() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_12034() -> (Tensor[(7, 6, 2), bool],) {
  %1073 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %1071 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1072 = %1071.0;
    (%1072,)
  };
  %1073() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_11208() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1078 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1074 = @func_10956() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
    %1075 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
    %1076 = %1074.0;
    %1077 = %1075.2;
    (%1076, %1077)
  };
  %1078() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_13178() -> float64 {
  %1079 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %1079.2
}

def @func_14423() -> (Tensor[(7, 6, 2), float64],) {
  %1080 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1081 = %1080.0;
  (%1081,)
}

def @func_13601() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1087 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1082 = @func_5479() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1083 = @func_7302() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], Tensor[(7, 6, 2), bool]) */;
    %1084 = %1082.0;
    %1085 = %1083.2;
    %1086 = @func_12834() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1084, %1085, %1086)
  };
  %1087() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_14267() -> (Tensor[(7, 6, 2), float64],) {
  %1088 = @func_2590() /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1089 = %1088.0;
  (%1089,)
}

def @func_7669() -> Tensor[(7, 6, 2), bool] {
  %1091 = fn () -> Tensor[(7, 6, 2), bool] {
    %1090 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1090.0
  };
  %1091() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_9797() -> Tensor[(7, 6, 2), float32] {
  %1092 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %1092.0
}

def @func_12588() -> Tensor[(7, 6, 2), bool] {
  %1093 = @func_8591() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1093.0
}

def @func_241(%var_239: Tensor[(9, 13, 8), float32], %var_240: float64) -> (Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) {
  @func_237(%var_239, %var_240) /* ty=(Tensor[(9, 13, 8), float32], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64], Tensor[(9, 13, 8), float32]) */
}

def @func_2686(%var_2653: Tensor[(13, 6, 5), uint16], %var_2654: Tensor[(13, 6, 5), uint16], %var_2675: Tensor[(13, 6, 5), uint16]) -> (Tensor[(13, 6, 5), uint16], Tensor[(13, 6, 5), uint32]) {
  %1094 = cast(%var_2654, dtype="uint16") /* ty=Tensor[(13, 6, 5), uint16] */;
  %1095 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(%var_2653, dtype="uint16") /* ty=Tensor[(13, 6, 5), uint16] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1098 = cast(%var_2675, dtype="uint32") /* ty=Tensor[(13, 6, 5), uint32] */;
  %1099 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%var_2653, dtype="uint32") /* ty=Tensor[(13, 6, 5), uint32] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1102 = right_shift(%1096, %1097) /* ty=Tensor[(13, 6, 5), uint16] */;
  %1103 = multiply(%1100, %1101) /* ty=Tensor[(13, 6, 5), uint32] */;
  (%1102, %1103)
}

def @func_8012(%var_7999: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(7, 6, 2), bool]) {
  %1104 = cast(%var_7999, dtype="float64") /* ty=Tensor[(3, 6, 7), float64] */;
  %1105 = acos(%1104) /* ty=Tensor[(3, 6, 7), float64] */;
  %1106 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1105, %1106)
}

def @func_4052() -> (Tensor[(7, 6, 2), bool],) {
  @func_4050() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_4345() -> Tensor[(7, 6, 2), bool] {
  %1107 = @func_4050() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1107.0
}

def @func_14384() -> (Tensor[(600), uint8], Tensor[(7, 6, 2), bool]) {
  %1112 = fn () -> (Tensor[(600), uint8], Tensor[(7, 6, 2), bool]) {
    %1108 = @func_8628() /* ty=(Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), bool], uint8, Tensor[(600), uint8]) */;
    %1109 = @func_2116() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1110 = %1108.3;
    %1111 = %1109.0;
    (%1110, %1111)
  };
  %1112() /* ty=(Tensor[(600), uint8], Tensor[(7, 6, 2), bool]) */
}

def @func_3658() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_3656() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_4852(%var_4833: Tensor[(15, 16, 10), float32]) -> (Tensor[(15, 16, 10), float32], Tensor[(7, 6, 2), bool]) {
  %1113 = cast(%var_4833, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %1114 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1115 = cosh(%1113) /* ty=Tensor[(15, 16, 10), float32] */;
  %1116 = %1114.0;
  (%1115, %1116)
}

def @func_5537() -> Tensor[(7, 6, 2), bool] {
  @func_5535() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_2510() -> (float64, Tensor[(7, 6, 2), float64]) {
  @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */
}

def @func_10746(%var_10744: Tensor[(936), float32], %var_10745: float64) -> (Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64, Tensor[(7, 6, 2), bool]) {
  @func_10742(%var_10744, %var_10745) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(936), float32], float64, Tensor[(7, 6, 2), bool]) */
}

def @func_5509() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1121 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1117 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %1118 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1119 = %1117.0;
    %1120 = %1118.0;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_1781() -> (Tensor[(7, 6, 2), bool],) {
  @func_1779() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_13971() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1131 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1122 = @func_2883() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1123 = @func_8239() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1124 = @func_1636() /* ty=Tensor[(7, 6, 2), bool] */;
    %1125 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
    %1126 = @func_5695() /* ty=Tensor[(7, 6, 2), float64] */;
    %1127 = %1122.0;
    %1128 = @func_13728() /* ty=Tensor[(7, 6, 2), bool] */;
    %1129 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
    %1130 = %1123.0;
    (%1124, %1125, %1126, %1127, %1128, %1129, %1130)
  };
  %1131() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_3875() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_5823() -> (Tensor[(7, 6, 2), bool],) {
  @func_5821() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_2996(%var_2987: Tensor[(10, 7, 13), uint32]) -> Tensor[(10, 7, 13), uint32] {
  %1132 = cast(%var_2987, dtype="uint32") /* ty=Tensor[(10, 7, 13), uint32] */;
  %1133 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 13), uint32] */, dtype="uint32") /* ty=Tensor[(10, 7, 13), uint32] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%1134, %1135) /* ty=Tensor[(10, 7, 13), uint32] */
}

def @func_1725() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  %1136 = @func_1158() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1137 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1138 = %1136.0;
  %1139 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
  %1140 = %1137.0;
  (%1138, %1139, %1140)
}

def @func_6059() -> Tensor[(7, 6, 2), bool] {
  @func_6057() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_7411(%var_7408: float64, %var_7409: Tensor[(48), float64], %var_7410: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(180), uint16], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], float64, Tensor[(48), float64], Tensor[(936), float64]) {
  %1160 = fn (%var_7388: float64, %var_7389: Tensor[(48), float64], %var_7398: Tensor[(936), float32]) -> (Tensor[(7, 6, 2), bool], Tensor[(180), uint16], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], float64, Tensor[(48), float64], Tensor[(936), float64]) {
    %1141 = @func_6908() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1142 = @func_4430() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(6, 15, 2), uint16], Tensor[(180), uint16], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1143 = @func_2508() /* ty=(float64, Tensor[(7, 6, 2), float64]) */;
    %1144 = cast(meta[relay.Constant][36] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %1145 = cast(%var_7388, dtype="float64") /* ty=float64 */;
    %1146 = cast(%var_7389, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1147 = reshape(%1144, newshape=[936, 1]) /* ty=Tensor[(936, 1), float32] */;
    %1148 = reshape(%1145, newshape=[]) /* ty=float64 */;
    %1149 = reshape(%1146, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1150 = @func_1573(%1147, %1148, %1149) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(9, 13, 8), float32], Tensor[(936, 1), float32], float64, Tensor[(3, 2, 8), bool], Tensor[(48), float64], Tensor[(7, 6, 2), bool]) */;
    %1151 = cast(%var_7398, dtype="float64") /* ty=Tensor[(936), float64] */;
    %1152 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(936), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1153 = cast(meta[relay.Constant][36] /* ty=Tensor[(936), float32] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1155 = %1141.0;
    %1156 = %1142.2;
    %1157 = %1143.1;
    %1158 = %1150.0;
    %1159 = maximum(%1153, %1154) /* ty=Tensor[(936), float64] */;
    (%1155, %1156, %1157, %1158, %var_7388, %var_7389, %1159)
  };
  %1160(%var_7408, %var_7409, %var_7410) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(180), uint16], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], float64, Tensor[(48), float64], Tensor[(936), float64]) */
}

def @func_15071() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1164 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1161 = @func_10538() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1162 = %1161.2;
    %1163 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1162, %1163)
  };
  %1164() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_7721() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1168 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1165 = @func_5085() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1166 = @func_6985() /* ty=Tensor[(7, 6, 2), bool] */;
    %1167 = %1165.0;
    (%1166, %1167)
  };
  %1168() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_14554(%var_14552: Tensor[(2400), float32]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2400), float32]) {
  @func_14551(%var_14552) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2400), float32]) */
}

def @func_14903() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %1169 = @func_12554() /* ty=(Tensor[(936), float32],) */;
  %1170 = @func_2764() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(1, 936), float32], Tensor[(936), float32], float64) */;
  %1171 = %1169.0;
  %1172 = %1170.1;
  (%1171, %1172)
}

def @func_2481() -> (Tensor[(7, 6, 2), bool], float64) {
  %1173 = @func_1226() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1174 = @func_2073() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32], float64, Tensor[(48), float64], Tensor[(7, 6, 2), float32], Tensor[(7, 6, 2), float32]) */;
  %1175 = %1173.2;
  %1176 = %1174.2;
  (%1175, %1176)
}

def @func_13180() -> float64 {
  @func_13178() /* ty=float64 */
}

def @func_2266(%var_2265: Tensor[(520), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(48), float64], Tensor[(936), float32], float64, Tensor[(13, 4, 10), float64], Tensor[(7, 6, 2), bool]) {
  %1194 = fn (%var_2231: Tensor[(520), float64]) -> (Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(48), float64], Tensor[(936), float32], float64, Tensor[(13, 4, 10), float64], Tensor[(7, 6, 2), bool]) {
    %1177 = cast(%var_2231, dtype="float64") /* ty=Tensor[(520), float64] */;
    %1178 = reshape(%1177, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
    %1179 = @func_1028(%1178) /* ty=(Tensor[(13, 4, 10), float64],) */;
    %1180 = cast(meta[relay.Constant][37] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %1181 = cast(3.17085f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1182 = reshape(%1180, newshape=[1, 936]) /* ty=Tensor[(1, 936), float32] */;
    %1183 = reshape(%1181, newshape=[]) /* ty=float64 */;
    %1184 = @func_1844(%1182, %1183) /* ty=(Tensor[(7, 6, 2), bool], float64, Tensor[(1, 936), float32], float64, Tensor[(9, 13, 8), float32], Tensor[(48), float64]) */;
    %1185 = %1179.0;
    %1186 = cast(%1185, dtype="float64") /* ty=Tensor[(13, 4, 10), float64] */;
    %1187 = reshape(%1186, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float64] */;
    %1188 = @func_1028(%1187) /* ty=(Tensor[(13, 4, 10), float64],) */;
    %1189 = @func_1917() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1190 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
    %1191 = %1184.5;
    %1192 = %1188.0;
    %1193 = %1189.0;
    (%1190, %1185, %var_2231, %1191, meta[relay.Constant][37] /* ty=Tensor[(936), float32] */, 3.17085f64 /* ty=float64 */, %1192, %1193)
  };
  %1194(%var_2265) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(13, 4, 10), float64], Tensor[(520), float64], Tensor[(48), float64], Tensor[(936), float32], float64, Tensor[(13, 4, 10), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_1727() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) {
  @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_6587() -> (Tensor[(7, 6, 2), bool],) {
  %1195 = @func_5274() /* ty=Tensor[(7, 6, 2), bool] */;
  (%1195,)
}

def @func_11113() -> Tensor[(7, 6, 2), float64] {
  @func_11111() /* ty=Tensor[(7, 6, 2), float64] */
}

def @func_9119() -> (Tensor[(7, 6, 2), bool],) {
  %1197 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %1196 = @func_8232() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1196,)
  };
  %1197() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_3215(%var_3200: Tensor[(7, 6, 2), float64]) -> (float64, Tensor[(7, 6, 2), float32], Tensor[(84), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %1198 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
  %1199 = cast(meta[relay.Constant][38] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %1200 = reshape(%1199, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %1201 = @func_2825(%1200) /* ty=(Tensor[(7, 6, 2), float32],) */;
  %1202 = cast(meta[relay.Constant][38] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %1203 = reshape(%1202, newshape=[7, 6, 2]) /* ty=Tensor[(7, 6, 2), bool] */;
  %1204 = @func_2360(%1203) /* ty=(Tensor[(7, 6, 2), float64],) */;
  %1205 = %1204.0;
  %1206 = cast(%var_3200, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%1205, dtype="float32") /* ty=Tensor[(7, 6, 2), float32] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1210 = %1198.1;
  %1211 = %1201.0;
  %1212 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %1213 = divide(%1208, %1209) /* ty=Tensor[(7, 6, 2), float32] */;
  (%1210, %1211, meta[relay.Constant][38] /* ty=Tensor[(84), bool] */, %1212, %1213)
}

def @func_10194(%var_10192: Tensor[(5, 6, 10), uint8], %var_10193: Tensor[(5, 6, 10), uint8]) -> (Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) {
  %1221 = fn (%var_10171: Tensor[(5, 6, 10), uint8], %var_10172: Tensor[(5, 6, 10), uint8]) -> (Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) {
    %1214 = cast(%var_10172, dtype="bool") /* ty=Tensor[(5, 6, 10), bool] */;
    %1215 = shape_of(%var_10171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1216 = cast(%var_10171, dtype="bool") /* ty=Tensor[(5, 6, 10), bool] */;
    %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1218 = @func_6587() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1219 = less_equal(%1216, %1217) /* ty=Tensor[(5, 6, 10), bool] */;
    %1220 = %1218.0;
    (%1219, %1220)
  };
  %1221(%var_10192, %var_10193) /* ty=(Tensor[(5, 6, 10), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_9939() -> Tensor[(7, 6, 2), bool] {
  @func_9937() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_5725() -> (Tensor[(936), float32],) {
  %1224 = fn () -> (Tensor[(936), float32],) {
    %1222 = @func_3920() /* ty=(Tensor[(936), float32],) */;
    %1223 = %1222.0;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(936), float32],) */
}

def @func_13457() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(936), float64]) {
  %1225 = @func_5821() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1226 = @func_5724() /* ty=(Tensor[(936), float32],) */;
  %1227 = %1226.0;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(936), float64] */;
  %1229 = @func_2396() /* ty=Tensor[(7, 6, 2), bool] */;
  %1230 = %1225.0;
  %1231 = atanh(%1228) /* ty=Tensor[(936), float64] */;
  (%1229, %1230, %1231)
}

def @func_7070() -> (Tensor[(936), float32], Tensor[(7, 6, 2), float64]) {
  %1232 = @func_3458() /* ty=(Tensor[(936), float32],) */;
  %1233 = %1232.0;
  %1234 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%1233, %1234)
}

def @func_5564() -> (Tensor[(7, 6, 2), bool],) {
  %1235 = @func_1004() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1236 = %1235.0;
  (%1236,)
}

def @func_8215() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1240 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
    %1237 = @func_2481() /* ty=(Tensor[(7, 6, 2), bool], float64) */;
    %1238 = %1237.0;
    %1239 = @func_6572() /* ty=Tensor[(7, 6, 2), bool] */;
    (%1238, %1239)
  };
  %1240() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */
}

def @func_1956() -> (Tensor[(7, 6, 2), bool],) {
  @func_1954() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_6574() -> Tensor[(7, 6, 2), bool] {
  @func_6572() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_8015(%var_8013: Tensor[(3, 6, 7), float64]) -> (Tensor[(3, 6, 7), float64], Tensor[(7, 6, 2), bool]) {
  @func_8012(%var_8013) /* ty=(Tensor[(3, 6, 7), float64], Tensor[(7, 6, 2), bool]) */
}

def @func_10387() -> Tensor[(7, 6, 2), bool] {
  %1241 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_6057() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %1241() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_11749() -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
  %1245 = fn () -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) {
    %1242 = @func_10231() /* ty=(Tensor[(7, 6, 2), float64],) */;
    %1243 = %1242.0;
    %1244 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
    (%1243, %1244)
  };
  %1245() /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), float64]) */
}

def @func_12590() -> Tensor[(7, 6, 2), bool] {
  @func_12588() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_7730() -> (Tensor[(7, 6, 2), float64],) {
  %1248 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %1246 = @func_5910() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %1247 = %1246.1;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_12914() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) {
  %1249 = @func_4002() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1250 = @func_7838() /* ty=Tensor[(7, 6, 2), bool] */;
  %1251 = %1249.0;
  (%1250, %1251)
}

def @func_13869() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %1252 = @func_9886() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1253 = @func_4692() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
  %1254 = %1252.0;
  %1255 = %1253.1;
  %1256 = @func_5592() /* ty=Tensor[(7, 6, 2), float64] */;
  (%1254, %1255, %1256)
}

def @func_2436(%var_2434: Tensor[(7, 6, 2), bool], %var_2435: Tensor[(7, 6, 2), bool]) -> (Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) {
  @func_2432(%var_2434, %var_2435) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), int64]) */
}

def @func_14591() -> (Tensor[(7, 6, 2), bool],) {
  %1257 = @func_9334() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */;
  %1258 = %1257.0;
  (%1258,)
}

def @func_4050() -> (Tensor[(7, 6, 2), bool],) {
  %1259 = @func_2629() /* ty=(Tensor[(7, 6, 2), bool],) */;
  %1260 = %1259.0;
  (%1260,)
}

def @func_13475() -> (Tensor[(7, 5, 4), bool],) {
  %1263 = fn () -> (Tensor[(7, 5, 4), bool],) {
    %1261 = @func_9040() /* ty=(Tensor[(7, 5, 4), bool], Tensor[(936), float32]) */;
    %1262 = %1261.0;
    (%1262,)
  };
  %1263() /* ty=(Tensor[(7, 5, 4), bool],) */
}

def @func_12492(%var_12491: Tensor[(9, 9, 15), float64]) -> Tensor[(9, 9, 15), float64] {
  %1265 = fn (%var_12487: Tensor[(9, 9, 15), float64]) -> Tensor[(9, 9, 15), float64] {
    %1264 = cast(%var_12487, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
    acos(%1264) /* ty=Tensor[(9, 9, 15), float64] */
  };
  %1265(%var_12491) /* ty=Tensor[(9, 9, 15), float64] */
}

def @func_4646(%var_4645: Tensor[(14, 7, 5), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) {
  %1274 = fn (%var_4629: Tensor[(14, 7, 5), uint64]) -> (Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) {
    %1266 = @func_3873() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool]) */;
    %1267 = cast(meta[relay.Constant][39] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1268 = cast(%var_4629, dtype="uint64") /* ty=Tensor[(14, 7, 5), uint64] */;
    %1269 = bitwise_and(%1267, %1268) /* ty=Tensor[(14, 7, 5), uint64] */;
    %1270 = cast(%1269, dtype="float64") /* ty=Tensor[(14, 7, 5), float64] */;
    %1271 = cast(meta[relay.Constant][39] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
    %1272 = %1266.1;
    %1273 = mod(%1270, %1271) /* ty=Tensor[(14, 7, 5), float64] */;
    (%1272, %1273)
  };
  %1274(%var_4645) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(14, 7, 5), float64]) */
}

def @func_5993() -> (Tensor[(936), float32], Tensor[(7, 6, 2), bool]) {
  %1275 = @func_5785() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(936), float32]) */;
  %1276 = %1275.1;
  %1277 = cast(%1276, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1278 = reshape(%1277, newshape=[2, 468]) /* ty=Tensor[(2, 468), float32] */;
  %1279 = @func_3260(%1278) /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), bool], Tensor[(2, 468), float32], Tensor[(7, 6, 2), bool]) */;
  %1280 = %1279.1;
  (%1276, %1280)
}

def @func_10469() -> Tensor[(7, 6, 2), float32] {
  %1281 = @func_5403() /* ty=(Tensor[(7, 6, 2), float32],) */;
  %1281.0
}

def @func_12417() -> (Tensor[(7, 6, 2), bool],) {
  %1284 = fn () -> (Tensor[(7, 6, 2), bool],) {
    %1282 = @func_11866() /* ty=(Tensor[(7, 6, 2), bool],) */;
    %1283 = %1282.0;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(7, 6, 2), bool],) */
}

def @func_8233() -> Tensor[(7, 6, 2), bool] {
  %1285 = fn () -> Tensor[(7, 6, 2), bool] {
    @func_2898() /* ty=Tensor[(7, 6, 2), bool] */
  };
  %1285() /* ty=Tensor[(7, 6, 2), bool] */
}

def @func_13131(%var_13130: float64) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) {
  %1293 = fn (%var_13124: float64) -> (Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) {
    %1286 = @func_8730() /* ty=(Tensor[(7, 6, 2), float64],) */;
    %1287 = cast(%var_13124, dtype="float64") /* ty=float64 */;
    %1288 = cast(meta[relay.Constant][40] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1289 = reshape(%1287, newshape=[]) /* ty=float64 */;
    %1290 = reshape(%1288, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), float64] */;
    %1291 = %1286.0;
    %1292 = @func_71(%1289, %1290) /* ty=Tensor[(3, 2, 8), bool] */;
    (%1291, %1292, %var_13124, meta[relay.Constant][40] /* ty=Tensor[(48), float64] */)
  };
  %1293(%var_13130) /* ty=(Tensor[(7, 6, 2), float64], Tensor[(3, 2, 8), bool], float64, Tensor[(48), float64]) */
}

def @func_10812() -> (Tensor[(7, 6, 2), float64],) {
  @func_10810() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_9335() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
  %1296 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) {
    %1294 = @func_2166() /* ty=Tensor[(7, 6, 2), bool] */;
    %1295 = @func_6326() /* ty=Tensor[(7, 6, 2), float32] */;
    (%1294, %1295)
  };
  %1296() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float32]) */
}

def @func_1378(%var_1376: Tensor[(6, 15, 2), uint16], %var_1377: Tensor[(6, 15, 2), uint16]) -> (Tensor[(6, 15, 2), uint16],) {
  %1302 = fn (%var_1368: Tensor[(6, 15, 2), uint16], %var_1369: Tensor[(6, 15, 2), uint16]) -> (Tensor[(6, 15, 2), uint16],) {
    %1297 = cast(%var_1369, dtype="uint16") /* ty=Tensor[(6, 15, 2), uint16] */;
    %1298 = shape_of(%var_1368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1299 = cast(%var_1368, dtype="uint16") /* ty=Tensor[(6, 15, 2), uint16] */;
    %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1301 = maximum(%1299, %1300) /* ty=Tensor[(6, 15, 2), uint16] */;
    (%1301,)
  };
  %1302(%var_1376, %var_1377) /* ty=(Tensor[(6, 15, 2), uint16],) */
}

def @func_5294() -> (Tensor[(7, 6, 2), float64],) {
  %1305 = fn () -> (Tensor[(7, 6, 2), float64],) {
    %1303 = @func_3620() /* ty=(Tensor[(7, 6, 2), float64],) */;
    %1304 = %1303.0;
    (%1304,)
  };
  %1305() /* ty=(Tensor[(7, 6, 2), float64],) */
}

def @func_8392() -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
  %1309 = fn () -> (Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) {
    %1306 = @func_1725() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64], Tensor[(7, 6, 2), bool]) */;
    %1307 = %1306.0;
    %1308 = @func_1433() /* ty=Tensor[(7, 6, 2), float64] */;
    (%1307, %1308)
  };
  %1309() /* ty=(Tensor[(7, 6, 2), bool], Tensor[(7, 6, 2), float64]) */
}

def @func_981() -> Tensor[(7, 6, 2), bool] {
  @func_979() /* ty=Tensor[(7, 6, 2), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The Relay type checker is unable to show the following types match.
In particular `Tensor[(3), int32]` does not match `Tensor[(7, 6, 2), bool]`
The Relay type checker is unable to show the following types match.
In particular `Tensor[(3), int32]` does not match `Tensor[(7, 6, 2), bool]`

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

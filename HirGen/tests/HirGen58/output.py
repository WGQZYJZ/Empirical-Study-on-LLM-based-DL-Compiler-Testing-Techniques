import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_62 = relay.var("var_62", dtype = "float64", shape = (3, 13, 5))#candidate|62|(3, 13, 5)|var|float64
uop_63 = relay.sinh(var_62.astype('float64')) # shape=(3, 13, 5)
uop_67 = relay.log10(uop_63.astype('float64')) # shape=(3, 13, 5)
output = relay.Tuple([uop_67,])
output2 = relay.Tuple([uop_67,])
func_69 = relay.Function([var_62,], output)
mod['func_69'] = func_69
mod = relay.transform.InferType()(mod)
mutated_mod['func_69'] = func_69
mutated_mod = relay.transform.InferType()(mutated_mod)
var_70 = relay.var("var_70", dtype = "float64", shape = (3, 13, 5))#candidate|70|(3, 13, 5)|var|float64
func_69_call = mutated_mod.get_global_var('func_69')
call_71 = func_69_call(var_70)
output = call_71
func_72 = relay.Function([var_70], output)
mutated_mod['func_72'] = func_72
mutated_mod = relay.transform.InferType()(mutated_mod)
var_199 = relay.var("var_199", dtype = "float32", shape = (1, 3, 9))#candidate|199|(1, 3, 9)|var|float32
uop_200 = relay.erf(var_199.astype('float32')) # shape=(1, 3, 9)
output = relay.Tuple([uop_200,])
output2 = relay.Tuple([uop_200,])
func_212 = relay.Function([var_199,], output)
mod['func_212'] = func_212
mod = relay.transform.InferType()(mod)
mutated_mod['func_212'] = func_212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_213 = relay.var("var_213", dtype = "float32", shape = (1, 3, 9))#candidate|213|(1, 3, 9)|var|float32
func_212_call = mutated_mod.get_global_var('func_212')
call_214 = func_212_call(var_213)
output = call_214
func_215 = relay.Function([var_213], output)
mutated_mod['func_215'] = func_215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_238 = relay.var("var_238", dtype = "float64", shape = (15, 4, 6))#candidate|238|(15, 4, 6)|var|float64
uop_239 = relay.atan(var_238.astype('float64')) # shape=(15, 4, 6)
output = uop_239
output2 = uop_239
func_241 = relay.Function([var_238,], output)
mod['func_241'] = func_241
mod = relay.transform.InferType()(mod)
var_242 = relay.var("var_242", dtype = "float64", shape = (15, 4, 6))#candidate|242|(15, 4, 6)|var|float64
output = func_241(var_242)
func_243 = relay.Function([var_242], output)
mutated_mod['func_243'] = func_243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_338 = relay.var("var_338", dtype = "uint8", shape = ())#candidate|338|()|var|uint8
var_339 = relay.var("var_339", dtype = "uint8", shape = (16, 5, 5))#candidate|339|(16, 5, 5)|var|uint8
bop_340 = relay.logical_xor(var_338.astype('uint8'), var_339.astype('uint8')) # shape=(16, 5, 5)
output = relay.Tuple([bop_340,])
output2 = relay.Tuple([bop_340,])
func_350 = relay.Function([var_338,var_339,], output)
mod['func_350'] = func_350
mod = relay.transform.InferType()(mod)
var_351 = relay.var("var_351", dtype = "uint8", shape = ())#candidate|351|()|var|uint8
var_352 = relay.var("var_352", dtype = "uint8", shape = (16, 5, 5))#candidate|352|(16, 5, 5)|var|uint8
output = func_350(var_351,var_352,)
func_353 = relay.Function([var_351,var_352,], output)
mutated_mod['func_353'] = func_353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_381 = relay.var("var_381", dtype = "uint64", shape = (9, 16, 7))#candidate|381|(9, 16, 7)|var|uint64
var_382 = relay.var("var_382", dtype = "uint64", shape = (9, 16, 7))#candidate|382|(9, 16, 7)|var|uint64
bop_383 = relay.minimum(var_381.astype('uint64'), relay.reshape(var_382.astype('uint64'), relay.shape_of(var_381))) # shape=(9, 16, 7)
uop_391 = relay.tan(var_382.astype('float64')) # shape=(9, 16, 7)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
const_398 = relay.const([-0.136637,-3.951671,-4.575947,7.551329,1.903389,3.467832,4.583061,9.910017,3.378958,-4.771569,-9.547612,-3.312935,5.111724,2.729656,4.810369,-8.110511,-2.795635,6.846860,6.516952,7.230867,8.742735,-5.980118,2.389509,2.443294,0.786191,0.761038,5.634491,4.789050,3.632335,-4.618490,-8.509131,-2.605180,8.079834,6.076264,-7.459054,6.668361,1.930771,-1.943418,-2.275345,4.044563,7.335768,1.863874,1.012602,5.434442,5.423826,7.842168,9.808389,-1.270660,9.290476,4.018911,-5.584243,6.810598,1.334514,-7.751714,6.735833,6.502797,9.011275,-6.459952,-3.764566,2.466808,8.434928,4.938493,-3.551417,0.944560,9.444185,9.239354,-3.079632,-9.136300,-6.749361,0.626845,-0.027210,-7.189877,5.682589,-8.070022,-4.971289,6.753729,-6.853532,-9.974171,-7.333463,-1.222713,7.564109,1.540892,0.251985,6.652044,0.459664,4.712835,0.073020,4.076056,-1.010817,-2.841267,4.734069,-8.339262,-1.183810,-7.516049,2.332944,2.656961,-0.168526,-7.309403,-3.078271,7.266069,-2.400531,6.440364,-9.483066,-3.036999,0.755175,2.971996,-9.805132,-3.083320,7.564822,8.344379,-9.414067,3.576581,9.987853,-7.064981,6.684854,1.992172,-0.586317,6.925784,0.195061,-6.840833,5.501901,3.118336,9.584599,-8.126793,-0.477196,8.360759,-6.497517,9.938634,-1.292097,7.624451,1.159838,4.467092,-8.667060,-6.642017,-4.720916,-6.058624,6.966864,3.225660,7.948169,5.496043,7.734615,-1.993035,7.641383,-2.677945,6.218262,7.606042,-6.387479,5.812902,4.968872,5.527188,-7.706416,9.521341,8.929282,-9.390308,4.262319,3.492801,6.909749,-7.672150,2.661663,-2.240490,1.812978,-5.516697,6.095786,-9.753602,6.205499,-2.796679,2.249676,0.770156,2.541246,1.813732,5.570231,7.566548,7.390533,8.315063,-4.569793,2.819190,2.548389,-6.378190,5.864499,-5.519246,-0.581023,-9.989493,-8.732912,-7.783742,-4.827170,-2.432868,-5.229241,-4.130641,-9.064084,3.515604,1.966200,-4.840989,-1.065466,6.545810,5.901763], dtype = "float64")#candidate|398|(195,)|const|float64
call_397 = relay.TupleGetItem(func_69_call(relay.reshape(const_398.astype('float64'), [3, 13, 5])), 0)
call_399 = relay.TupleGetItem(func_72_call(relay.reshape(const_398.astype('float64'), [3, 13, 5])), 0)
bop_400 = relay.logical_xor(uop_391.astype('int64'), relay.reshape(bop_383.astype('int64'), relay.shape_of(uop_391))) # shape=(9, 16, 7)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
var_406 = relay.var("var_406", dtype = "float32", shape = (27,))#candidate|406|(27,)|var|float32
call_405 = relay.TupleGetItem(func_212_call(relay.reshape(var_406.astype('float32'), [1, 3, 9])), 0)
call_407 = relay.TupleGetItem(func_215_call(relay.reshape(var_406.astype('float32'), [1, 3, 9])), 0)
output = relay.Tuple([call_397,const_398,bop_400,call_405,var_406,])
output2 = relay.Tuple([call_399,const_398,bop_400,call_407,var_406,])
func_408 = relay.Function([var_381,var_382,var_406,], output)
mod['func_408'] = func_408
mod = relay.transform.InferType()(mod)
var_409 = relay.var("var_409", dtype = "uint64", shape = (9, 16, 7))#candidate|409|(9, 16, 7)|var|uint64
var_410 = relay.var("var_410", dtype = "uint64", shape = (9, 16, 7))#candidate|410|(9, 16, 7)|var|uint64
var_411 = relay.var("var_411", dtype = "float32", shape = (27,))#candidate|411|(27,)|var|float32
output = func_408(var_409,var_410,var_411,)
func_412 = relay.Function([var_409,var_410,var_411,], output)
mutated_mod['func_412'] = func_412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_613 = relay.var("var_613", dtype = "float64", shape = (2, 14, 13))#candidate|613|(2, 14, 13)|var|float64
uop_614 = relay.tan(var_613.astype('float64')) # shape=(2, 14, 13)
output = relay.Tuple([uop_614,])
output2 = relay.Tuple([uop_614,])
func_623 = relay.Function([var_613,], output)
mod['func_623'] = func_623
mod = relay.transform.InferType()(mod)
mutated_mod['func_623'] = func_623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_624 = relay.var("var_624", dtype = "float64", shape = (2, 14, 13))#candidate|624|(2, 14, 13)|var|float64
func_623_call = mutated_mod.get_global_var('func_623')
call_625 = func_623_call(var_624)
output = call_625
func_626 = relay.Function([var_624], output)
mutated_mod['func_626'] = func_626
mutated_mod = relay.transform.InferType()(mutated_mod)
const_728 = relay.const([[[5.303342,-4.866957,-5.427718,6.047620,8.271048,-8.283807,-8.603770,4.291359],[5.159937,-7.555580,3.437761,-1.942003,8.629262,5.918302,-9.039003,-3.685353],[-7.731520,5.705241,0.377129,3.942882,-4.235426,1.908687,6.779123,6.963201],[-2.279873,1.716056,-6.235280,2.217201,-8.493997,6.006127,8.507033,-3.873055],[-8.625538,-6.355570,-3.258450,7.407628,9.763493,-8.535682,0.813353,6.391716],[2.666531,1.229961,-7.869295,2.972706,4.714462,2.750087,-1.428012,-5.765151],[2.108927,3.295221,2.136164,-3.248095,6.641029,3.999336,3.598524,-0.674376]],[[-8.669120,-1.805046,-7.127234,2.631216,4.696505,-2.493892,-5.048322,-7.129286],[8.627778,-8.475449,-8.821343,3.590750,1.550016,8.909173,-7.444714,8.992669],[5.932582,7.352408,3.450840,-9.311663,-7.327077,7.539180,9.687089,-9.394762],[4.441949,3.812048,-4.265250,3.690578,-7.349373,-8.241192,0.270024,8.374883],[9.886112,-3.016162,2.533612,4.154418,-8.513923,-2.029491,0.362023,-1.300340],[6.971040,-5.862289,6.777467,0.386519,-0.755413,-2.913664,9.772740,7.787210],[-6.898245,-8.642197,-4.037612,9.846030,-1.483074,-9.140720,2.516576,-2.587782]],[[3.680193,-4.516752,-3.654324,-6.862294,0.583519,-3.467121,-5.112640,3.089730],[-3.583012,-7.143051,-1.366665,2.393177,5.831255,-4.992018,-4.192702,-3.488939],[4.507402,-8.619190,-4.899179,2.854304,6.386310,9.298597,7.381826,5.824074],[-8.998939,-9.766668,5.751317,1.753728,1.142827,4.550732,-8.398842,4.200848],[-2.854228,3.165920,-4.387958,-9.616435,1.954807,0.965232,6.588151,-2.889683],[-3.259956,-0.204365,-9.125254,8.309385,4.750909,4.567336,-2.980806,9.079737],[2.963139,2.502751,5.595409,4.982639,4.081620,9.562096,0.518165,-3.072806]],[[-6.294386,-6.591021,-6.905514,4.923031,-7.002917,5.270107,0.538762,-5.987235],[-2.133963,3.974394,3.850834,-2.005813,8.454116,7.197534,0.219067,5.208121],[-0.685208,-4.528603,0.023662,-4.908424,-6.207638,-6.879493,0.597057,-9.421284],[-9.056813,5.459872,0.796426,7.724238,-4.913957,3.613550,-4.573326,5.752205],[-9.377610,-5.645661,0.525339,-0.910230,-3.031041,-8.027036,7.415142,0.338065],[-4.928586,8.250213,-0.996791,-5.069768,-4.941590,-9.387172,-7.683461,5.081518],[7.440683,-7.294691,2.406945,6.980375,4.202773,2.292476,-5.601836,4.049953]],[[5.255038,-2.729584,8.841666,-0.190300,5.803740,-1.707591,5.232394,-9.914828],[4.751096,9.287155,7.882205,4.776432,-3.741013,5.392768,9.329260,4.552875],[-5.666044,0.877615,6.954542,2.878483,-3.359553,-9.827555,6.539199,1.689615],[-1.526118,6.475995,3.191647,-0.416796,7.964615,-1.289662,-3.234182,-7.617204],[-1.323392,-5.760175,7.215642,-5.019068,-5.754367,0.418043,5.323602,-0.524862],[-6.757434,-1.437455,-6.732062,0.024253,-4.281547,7.463007,-0.615107,0.120500],[0.063116,-4.778351,6.531847,-5.053677,1.374979,-3.275212,-1.973681,-5.370587]],[[-1.659095,-4.330963,-7.925343,0.093055,-5.667240,1.148188,-1.610389,4.108617],[9.133789,-0.345617,-1.707962,-4.636647,7.330841,-1.766192,6.277331,-6.736751],[4.007779,5.859812,-5.136939,1.329732,8.230977,4.151472,6.432673,5.441558],[-9.368501,-4.807441,-1.769293,7.482350,3.521423,-8.578342,-5.173248,-8.575389],[0.196249,6.412683,-5.147974,-6.051063,-7.242422,2.380400,-7.743205,-9.938788],[8.567636,3.056095,0.859809,2.281236,0.836444,5.628045,-3.394440,1.792632],[5.935066,3.023146,9.824608,7.023437,-5.979591,-9.613512,5.159673,0.695150]]], dtype = "float64")#candidate|728|(6, 7, 8)|const|float64
var_729 = relay.var("var_729", dtype = "float64", shape = (6, 7, 8))#candidate|729|(6, 7, 8)|var|float64
bop_730 = relay.floor_mod(const_728.astype('float64'), relay.reshape(var_729.astype('float64'), relay.shape_of(const_728))) # shape=(6, 7, 8)
bop_733 = relay.not_equal(const_728.astype('bool'), relay.reshape(bop_730.astype('bool'), relay.shape_of(const_728))) # shape=(6, 7, 8)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
var_742 = relay.var("var_742", dtype = "float32", shape = (3, 9))#candidate|742|(3, 9)|var|float32
call_741 = relay.TupleGetItem(func_212_call(relay.reshape(var_742.astype('float32'), [1, 3, 9])), 0)
call_743 = relay.TupleGetItem(func_215_call(relay.reshape(var_742.astype('float32'), [1, 3, 9])), 0)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
call_748 = relay.TupleGetItem(func_212_call(relay.reshape(call_741.astype('float32'), [1, 3, 9])), 0)
call_749 = relay.TupleGetItem(func_215_call(relay.reshape(call_741.astype('float32'), [1, 3, 9])), 0)
output = relay.Tuple([bop_733,call_741,var_742,call_748,])
output2 = relay.Tuple([bop_733,call_743,var_742,call_749,])
func_752 = relay.Function([var_729,var_742,], output)
mod['func_752'] = func_752
mod = relay.transform.InferType()(mod)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_752_call = mutated_mod.get_global_var('func_752')
var_754 = relay.var("var_754", dtype = "float64", shape = (6, 7, 8))#candidate|754|(6, 7, 8)|var|float64
var_755 = relay.var("var_755", dtype = "float32", shape = (3, 9))#candidate|755|(3, 9)|var|float32
call_753 = func_752_call(var_754,var_755,)
output = call_753
func_756 = relay.Function([var_754,var_755,], output)
mutated_mod['func_756'] = func_756
mutated_mod = relay.transform.InferType()(mutated_mod)
const_845 = relay.const([[[-7.681497,-0.769477,5.857389]],[[6.398432,2.332150,4.992542]],[[2.703207,-9.009630,4.483623]],[[7.634339,-4.353476,-0.543791]],[[-8.537420,5.275766,0.581816]],[[3.210420,-3.326525,-5.811779]],[[5.885566,3.362258,-0.648380]],[[-2.519079,9.078738,-0.202045]],[[-8.808569,5.251147,4.112884]],[[-5.770269,7.888002,3.698253]],[[-4.669332,-4.446918,-4.612238]],[[-8.077615,-6.961928,8.015952]],[[-0.288485,-0.295051,-0.245865]],[[1.161359,-0.745466,7.409820]],[[-7.180162,-9.998803,-3.781204]],[[-3.141208,-2.814251,2.323533]]], dtype = "float64")#candidate|845|(16, 1, 3)|const|float64
var_846 = relay.var("var_846", dtype = "float64", shape = (16, 1, 3))#candidate|846|(16, 1, 3)|var|float64
bop_847 = relay.power(const_845.astype('float64'), relay.reshape(var_846.astype('float64'), relay.shape_of(const_845))) # shape=(16, 1, 3)
output = bop_847
output2 = bop_847
func_854 = relay.Function([var_846,], output)
mod['func_854'] = func_854
mod = relay.transform.InferType()(mod)
mutated_mod['func_854'] = func_854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_855 = relay.var("var_855", dtype = "float64", shape = (16, 1, 3))#candidate|855|(16, 1, 3)|var|float64
func_854_call = mutated_mod.get_global_var('func_854')
call_856 = func_854_call(var_855)
output = call_856
func_857 = relay.Function([var_855], output)
mutated_mod['func_857'] = func_857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1143 = relay.var("var_1143", dtype = "uint8", shape = (1, 7, 2))#candidate|1143|(1, 7, 2)|var|uint8
var_1144 = relay.var("var_1144", dtype = "uint8", shape = (8, 7, 2))#candidate|1144|(8, 7, 2)|var|uint8
bop_1145 = relay.bitwise_and(var_1143.astype('uint8'), var_1144.astype('uint8')) # shape=(8, 7, 2)
uop_1150 = relay.log10(var_1143.astype('float32')) # shape=(1, 7, 2)
uop_1156 = relay.log(uop_1150.astype('float64')) # shape=(1, 7, 2)
uop_1159 = relay.atanh(uop_1156.astype('float64')) # shape=(1, 7, 2)
bop_1163 = relay.equal(uop_1156.astype('bool'), relay.reshape(var_1143.astype('bool'), relay.shape_of(uop_1156))) # shape=(1, 7, 2)
output = relay.Tuple([bop_1145,uop_1159,bop_1163,])
output2 = relay.Tuple([bop_1145,uop_1159,bop_1163,])
func_1168 = relay.Function([var_1143,var_1144,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
var_1169 = relay.var("var_1169", dtype = "uint8", shape = (1, 7, 2))#candidate|1169|(1, 7, 2)|var|uint8
var_1170 = relay.var("var_1170", dtype = "uint8", shape = (8, 7, 2))#candidate|1170|(8, 7, 2)|var|uint8
output = func_1168(var_1169,var_1170,)
func_1171 = relay.Function([var_1169,var_1170,], output)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1406 = relay.var("var_1406", dtype = "uint64", shape = (13, 6, 8))#candidate|1406|(13, 6, 8)|var|uint64
var_1407 = relay.var("var_1407", dtype = "uint64", shape = (13, 6, 8))#candidate|1407|(13, 6, 8)|var|uint64
bop_1408 = relay.maximum(var_1406.astype('uint64'), relay.reshape(var_1407.astype('uint64'), relay.shape_of(var_1406))) # shape=(13, 6, 8)
output = bop_1408
output2 = bop_1408
func_1417 = relay.Function([var_1406,var_1407,], output)
mod['func_1417'] = func_1417
mod = relay.transform.InferType()(mod)
var_1418 = relay.var("var_1418", dtype = "uint64", shape = (13, 6, 8))#candidate|1418|(13, 6, 8)|var|uint64
var_1419 = relay.var("var_1419", dtype = "uint64", shape = (13, 6, 8))#candidate|1419|(13, 6, 8)|var|uint64
output = func_1417(var_1418,var_1419,)
func_1420 = relay.Function([var_1418,var_1419,], output)
mutated_mod['func_1420'] = func_1420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1427 = relay.var("var_1427", dtype = "float64", shape = (9, 2, 3))#candidate|1427|(9, 2, 3)|var|float64
uop_1428 = relay.sinh(var_1427.astype('float64')) # shape=(9, 2, 3)
output = relay.Tuple([uop_1428,])
output2 = relay.Tuple([uop_1428,])
func_1434 = relay.Function([var_1427,], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
mutated_mod['func_1434'] = func_1434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1435 = relay.var("var_1435", dtype = "float64", shape = (9, 2, 3))#candidate|1435|(9, 2, 3)|var|float64
func_1434_call = mutated_mod.get_global_var('func_1434')
call_1436 = func_1434_call(var_1435)
output = call_1436
func_1437 = relay.Function([var_1435], output)
mutated_mod['func_1437'] = func_1437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1584 = relay.var("var_1584", dtype = "float64", shape = ())#candidate|1584|()|var|float64
var_1585 = relay.var("var_1585", dtype = "float64", shape = (12, 8, 11))#candidate|1585|(12, 8, 11)|var|float64
bop_1586 = relay.divide(var_1584.astype('float64'), var_1585.astype('float64')) # shape=(12, 8, 11)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
const_1593 = relay.const([2.665660,-9.512385,7.917979,3.106972,-1.219482,-9.359107,9.070082,4.125183,9.466244,-2.384699,0.469875,1.087644,1.878916,2.436580,8.112058,-4.100511,-1.510379,9.430532,7.729078,-6.098010,6.815240,1.965249,-2.069183,9.849644,-2.050990,-3.513938,-6.435708,1.823811,-7.814989,-8.808174,6.494928,6.494464,0.097851,4.864020,4.738314,7.461674,8.476573,2.407870,0.157863,8.379295,3.753098,5.669751,-9.108760,1.987123,7.336563,-3.390620,2.891984,7.252969,-5.967378,0.183834,-4.095930,4.100723,8.106415,5.699565,8.871480,-5.287107,5.663926,3.311800,1.820227,-8.427964,-0.798558,4.105320,-4.389266,0.293094,-8.513422,-1.939417,7.287024,-0.431339,0.724591,7.917403,-7.410807,3.611356,9.429726,3.454140,7.751354,5.359289,5.026926,5.765967,9.274070,-2.381221,5.146407,-9.838974,-9.909302,-2.756161,8.026187,2.552378,9.401125,6.143966,0.659016,0.722051,-3.023924,-5.705511,-5.133491,-5.762142,-6.749814,5.961852,6.506743,-5.983399,-6.916077,4.697704,-1.183256,5.836242,4.898565,-0.989779,-7.125736,-7.862597,3.393297,-7.196139,-3.605094,1.882003,9.602009,0.164679,9.755533,1.725194,-2.531848,1.661769,8.697177,-3.976839,3.467650,4.660813,6.376620,-5.828740,-3.524960,-6.971364,7.870616,-1.160768,-0.985967,-5.963533,5.718744,8.016654,-4.401432,8.191485,3.323370,4.655363,-4.830485,-1.768791,-8.521829,-1.373177,1.218948,8.177822,7.994886,-3.328704,2.377899,8.989361,-6.673716,-2.877105,0.383758,-1.740354,-4.085616,1.952920,-2.379252,-3.234419,-7.448072,5.444724,5.161768,2.881957,-3.865754,-8.813545,-7.910298,2.946286,-1.641138,3.007230,5.939779,-4.679602,2.356817,-0.022500,-1.615129,-1.486113,-9.875221,-1.717633,3.553747,-9.780302,6.109412,6.728875,-7.170513,-8.611446,4.861959,-3.506283,3.298768,-5.557822,-9.665395,-5.347334,0.197358,7.670743,4.167066,4.653985,0.158592,-9.517723,-0.878570,-8.315039,-9.789821,6.421097,4.571789,-6.975123,-0.290111], dtype = "float64")#candidate|1593|(195,)|const|float64
call_1592 = relay.TupleGetItem(func_69_call(relay.reshape(const_1593.astype('float64'), [3, 13, 5])), 0)
call_1594 = relay.TupleGetItem(func_72_call(relay.reshape(const_1593.astype('float64'), [3, 13, 5])), 0)
output = relay.Tuple([bop_1586,call_1592,const_1593,])
output2 = relay.Tuple([bop_1586,call_1594,const_1593,])
func_1595 = relay.Function([var_1584,var_1585,], output)
mod['func_1595'] = func_1595
mod = relay.transform.InferType()(mod)
var_1596 = relay.var("var_1596", dtype = "float64", shape = ())#candidate|1596|()|var|float64
var_1597 = relay.var("var_1597", dtype = "float64", shape = (12, 8, 11))#candidate|1597|(12, 8, 11)|var|float64
output = func_1595(var_1596,var_1597,)
func_1598 = relay.Function([var_1596,var_1597,], output)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1636 = relay.const([[[4,-5,-8,9],[-3,5,5,-9],[-7,9,-10,-4],[3,-1,-3,6],[-8,2,-7,-2],[-1,4,-10,10],[-3,-9,2,-3],[9,2,6,3],[-1,10,4,-10],[8,-9,-8,-6],[-10,3,10,-8],[1,-5,10,-1],[-3,-10,-2,3]],[[4,-6,3,-5],[-1,-6,4,2],[-6,2,-6,-8],[3,-7,-8,-3],[-2,-7,5,7],[-10,-6,9,-10],[6,-10,5,3],[-5,3,1,-6],[-6,-10,-4,-6],[-2,-9,-2,-5],[-10,-3,2,-5],[6,-10,5,-2],[10,-4,2,1]]], dtype = "int32")#candidate|1636|(2, 13, 4)|const|int32
var_1637 = relay.var("var_1637", dtype = "int32", shape = (2, 13, 4))#candidate|1637|(2, 13, 4)|var|int32
bop_1638 = relay.right_shift(const_1636.astype('int32'), relay.reshape(var_1637.astype('int32'), relay.shape_of(const_1636))) # shape=(2, 13, 4)
uop_1643 = relay.exp(bop_1638.astype('float64')) # shape=(2, 13, 4)
const_1651 = relay.const([[[-7,3,3,9],[8,4,4,-5],[-9,-1,-6,8],[9,4,1,1],[-3,10,-10,10],[2,-6,-7,3],[-3,4,-9,-3],[-4,4,-5,7],[-1,-5,-4,1],[-8,4,1,1],[4,-3,6,1],[-5,9,-2,-1],[1,-6,-3,-3]],[[-7,6,6,1],[-5,-5,2,-2],[3,-10,-6,-7],[-7,4,-1,10],[-5,5,-6,-3],[1,-1,-4,-2],[6,1,3,1],[-3,7,-3,2],[-3,-9,-3,1],[10,9,-7,-2],[-4,-5,1,4],[-2,-7,-10,-2],[8,-4,-4,7]]], dtype = "int32")#candidate|1651|(2, 13, 4)|const|int32
bop_1652 = relay.greater(bop_1638.astype('bool'), relay.reshape(const_1651.astype('bool'), relay.shape_of(bop_1638))) # shape=(2, 13, 4)
output = relay.Tuple([uop_1643,bop_1652,])
output2 = relay.Tuple([uop_1643,bop_1652,])
func_1655 = relay.Function([var_1637,], output)
mod['func_1655'] = func_1655
mod = relay.transform.InferType()(mod)
var_1656 = relay.var("var_1656", dtype = "int32", shape = (2, 13, 4))#candidate|1656|(2, 13, 4)|var|int32
output = func_1655(var_1656)
func_1657 = relay.Function([var_1656], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1807 = relay.var("var_1807", dtype = "float32", shape = (4, 16, 10))#candidate|1807|(4, 16, 10)|var|float32
uop_1808 = relay.sinh(var_1807.astype('float32')) # shape=(4, 16, 10)
uop_1810 = relay.log2(uop_1808.astype('float64')) # shape=(4, 16, 10)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
var_1819 = relay.var("var_1819", dtype = "float64", shape = (195,))#candidate|1819|(195,)|var|float64
call_1818 = relay.TupleGetItem(func_69_call(relay.reshape(var_1819.astype('float64'), [3, 13, 5])), 0)
call_1820 = relay.TupleGetItem(func_72_call(relay.reshape(var_1819.astype('float64'), [3, 13, 5])), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_1824 = relay.const([2.946390,8.924259,-1.235465,8.654198,-7.040255,-5.857798,3.902156,2.062411,9.840396,-0.723261,9.460153,2.689819,-9.393735,-7.071361,-3.027275,5.068401,5.569405,-7.287505,-7.879982,-6.723994,-7.330761,1.564355,4.283907,-9.537519,9.138908,-0.293474,-6.460185,-3.802338,7.621959,-8.812019,3.141228,8.719937,-9.871279,-1.878935,0.748264,-1.490589,-2.574626,-6.269682,-2.778261,-9.277125,1.835111,3.911132,-8.591512,-0.110838,-8.653369,9.142821,-1.614532,8.249540,-4.975326,7.561418,-7.186847,-0.260673,-9.351224,-7.645021], dtype = "float64")#candidate|1824|(54,)|const|float64
call_1823 = relay.TupleGetItem(func_1434_call(relay.reshape(const_1824.astype('float64'), [9, 2, 3])), 0)
call_1825 = relay.TupleGetItem(func_1437_call(relay.reshape(const_1824.astype('float64'), [9, 2, 3])), 0)
func_408_call = mod.get_global_var('func_408')
func_412_call = mutated_mod.get_global_var('func_412')
var_1829 = relay.var("var_1829", dtype = "uint64", shape = (1, 1008))#candidate|1829|(1, 1008)|var|uint64
const_1830 = relay.const([6.474467,4.517085,-9.270605,2.273932,3.100533,5.626320,-4.457848,-0.327189,-8.492642,-4.880511,-2.523594,6.140959,-1.001931,2.932356,5.262091,7.232318,-8.145694,8.994490,6.607483,8.438249,-7.715195,-6.638610,-8.146193,4.379804,-3.502355,7.758467,-2.357454], dtype = "float32")#candidate|1830|(27,)|const|float32
call_1828 = relay.TupleGetItem(func_408_call(relay.reshape(var_1829.astype('uint64'), [9, 16, 7]), relay.reshape(var_1829.astype('uint64'), [9, 16, 7]), relay.reshape(const_1830.astype('float32'), [27,]), ), 2)
call_1831 = relay.TupleGetItem(func_412_call(relay.reshape(var_1829.astype('uint64'), [9, 16, 7]), relay.reshape(var_1829.astype('uint64'), [9, 16, 7]), relay.reshape(const_1830.astype('float32'), [27,]), ), 2)
func_1417_call = mod.get_global_var('func_1417')
func_1420_call = mutated_mod.get_global_var('func_1420')
var_1842 = relay.var("var_1842", dtype = "uint64", shape = (624,))#candidate|1842|(624,)|var|uint64
call_1841 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), )
call_1843 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), )
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
call_1844 = relay.TupleGetItem(func_1434_call(relay.reshape(const_1824.astype('float64'), [9, 2, 3])), 0)
call_1845 = relay.TupleGetItem(func_1437_call(relay.reshape(const_1824.astype('float64'), [9, 2, 3])), 0)
func_1417_call = mod.get_global_var('func_1417')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_1864 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(call_1841.astype('uint64'), [13, 6, 8]), )
call_1865 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(call_1841.astype('uint64'), [13, 6, 8]), )
var_1866 = relay.var("var_1866", dtype = "float32", shape = (4, 16, 10))#candidate|1866|(4, 16, 10)|var|float32
bop_1867 = relay.logical_and(uop_1808.astype('bool'), relay.reshape(var_1866.astype('bool'), relay.shape_of(uop_1808))) # shape=(4, 16, 10)
func_1417_call = mod.get_global_var('func_1417')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_1895 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(call_1864.astype('uint64'), [13, 6, 8]), )
call_1896 = func_1417_call(relay.reshape(var_1842.astype('uint64'), [13, 6, 8]), relay.reshape(call_1864.astype('uint64'), [13, 6, 8]), )
output = relay.Tuple([uop_1810,call_1818,var_1819,call_1823,const_1824,call_1828,var_1829,const_1830,call_1841,var_1842,call_1844,call_1864,bop_1867,call_1895,])
output2 = relay.Tuple([uop_1810,call_1820,var_1819,call_1825,const_1824,call_1831,var_1829,const_1830,call_1843,var_1842,call_1845,call_1865,bop_1867,call_1896,])
func_1897 = relay.Function([var_1807,var_1819,var_1829,var_1842,var_1866,], output)
mod['func_1897'] = func_1897
mod = relay.transform.InferType()(mod)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mutated_mod.get_global_var('func_1897')
var_1899 = relay.var("var_1899", dtype = "float32", shape = (4, 16, 10))#candidate|1899|(4, 16, 10)|var|float32
var_1900 = relay.var("var_1900", dtype = "float64", shape = (195,))#candidate|1900|(195,)|var|float64
var_1901 = relay.var("var_1901", dtype = "uint64", shape = (1, 1008))#candidate|1901|(1, 1008)|var|uint64
var_1902 = relay.var("var_1902", dtype = "uint64", shape = (624,))#candidate|1902|(624,)|var|uint64
var_1903 = relay.var("var_1903", dtype = "float32", shape = (4, 16, 10))#candidate|1903|(4, 16, 10)|var|float32
call_1898 = func_1897_call(var_1899,var_1900,var_1901,var_1902,var_1903,)
output = call_1898
func_1904 = relay.Function([var_1899,var_1900,var_1901,var_1902,var_1903,], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2038 = relay.var("var_2038", dtype = "uint64", shape = (16, 5, 11))#candidate|2038|(16, 5, 11)|var|uint64
var_2039 = relay.var("var_2039", dtype = "uint64", shape = (16, 5, 11))#candidate|2039|(16, 5, 11)|var|uint64
bop_2040 = relay.add(var_2038.astype('uint64'), relay.reshape(var_2039.astype('uint64'), relay.shape_of(var_2038))) # shape=(16, 5, 11)
func_1897_call = mod.get_global_var('func_1897')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_2077 = relay.var("var_2077", dtype = "float32", shape = (640,))#candidate|2077|(640,)|var|float32
var_2078 = relay.var("var_2078", dtype = "float64", shape = (195,))#candidate|2078|(195,)|var|float64
const_2079 = relay.const([9,-6,2,-9,1,4,-7,-7,-10,-1,9,-1,-1,-1,4,-8,7,3,6,-6,3,-2,9,-5,-10,-7,4,2,-6,10,-4,2,2,1,-7,-3,-9,1,4,8,6,-3,-7,4,7,-1,10,-2,-1,10,-10,-10,-6,8,7,-4,-3,-3,-1,2,-1,-8,-8,-5,3,-9,-8,3,-8,-6,9,9,-8,-4,1,8,1,-7,8,10,-7,4,7,-1,-8,-1,-8,1,-5,8,1,10,-4,4,8,3,4,3,5,-6,3,-2,-8,-9,-9,10,3,-3,8,-8,3,2,-1,7,-8,-10,8,2,-6,2,-5,5,-4,-4,-8,-9,-8,-6,-5,-4,6,6,6,4,6,-9,-10,-9,-5,-9,9,-1,8,-3,-2,7,-3,-4,8,4,3,7,8,-8,-10,5,4,6,5,4,-10,-5,-4,3,6,8,-9,-1,-10,9,7,-3,9,-2,1,-2,-6,2,-8,2,2,-1,4,7,2,-7,-7,-9,-8,-3,-6,-7,-3,-4,6,3,5,-9,8,4,10,-1,10,5,1,-6,-2,1,6,6,-1,-9,5,-5,4,4,-1,-2,5,8,5,2,10,5,-1,7,-10,-8,6,9,-5,5,8,-6,5,6,1,-7,3,7,3,-6,4,-9,9,2,10,1,-3,10,4,-9,-6,-6,-8,-5,-8,-5,4,1,-3,9,-10,-3,9,2,9,-8,8,6,-6,-9,1,-5,2,-10,10,-2,2,-3,1,6,-7,-7,-10,-2,-5,1,7,-10,-3,-5,2,3,-3,8,-4,-5,1,-5,-6,-7,8,-4,-5,5,9,-1,7,6,2,5,-10,-6,-2,-4,-8,7,1,4,-10,-4,-2,9,-10,-1,-8,-8,-7,-9,-7,-7,-4,-4,8,10,8,-4,-8,-10,-7,-1,-7,3,-5,-5,7,-7,6,7,9,1,-3,8,9,10,-8,1,9,-3,8,5,10,8,3,-2,-5,10,8,-9,-7,-3,9,-2,7,3,3,-3,-1,-9,-8,-7,-3,-1,6,-10,-9,7,6,-6,-7,10,-6,5,4,10,-4,-5,5,-2,7,5,6,2,3,6,-7,-2,-1,-8,10,9,6,-4,1,5,7,-4,4,-6,-5,9,-9,5,-7,-7,3,-2,9,4,-10,-7,-9,-2,8,1,8,-5,2,-9,3,5,-1,4,1,-9,7,9,-9,-10,-7,-2,1,-4,-9,2,-10,-9,2,-10,-1,5,6,-3,-5,4,4,-6,7,-9,-6,10,8,6,3,4,-4,-2,-4,-7,-10,8,-9,10,-8,-2,-10,10,-2,-7,-2,-8,1,-9,5,-2,5,8,8,-9,4,9,-4,1,5,8,10,-6,-6,-8,8,-3,-1,6,8,6,-7,-8,-5,-4,9,-8,9,-2,8,5,9,9,-8,1,-2,-8,1,-9,-4,-7,-8,4,10,4,7,1,7,5,-9,-3,-3,-10,-6,-3,6,5,-6,3,6,-3,5,8,6,-9,-2,-5,-3,1,8,2,-5,-7,-8,6,-8,-9,-5,-6,2,7,10,-1,1,-2,8,-2,-3,-4,1,-6,-1,1,2,6,-5,-10,-6,-5,6,5,-3,7,-8,-6,-10,-6,-5,-6,6,-3,-6,-3,-5,-1,-8,-5,5,-7,-4,2,5,-7,-6,-9,7,-3,-6,-7,-9,-4,-7,9,10,5,-1,7,6,6,7,6,9,6,8,-8,4,-5,10,2,-10,-5,-5,-6,-8,-5,-10,-10,-2,6,-2,8,-8,-4,7,-10,5,7,-10,1,5,-5,-10,-6,1,-4,-8,-8,7,5,-10,-10,-2,2,-2,-2,-2,-2,1,-5,-1,7,3,-6,-7,-4,-5,9,5,-1,-8,-4,9,-3,5,5,6,5,-5,-10,1,-9,-10,6,-2,10,10,-10,-1,1,10,-4,-8,-6,10,-7,-9,7,-7,-5,-10,10,-1,8,5,10,5,-2,2,8,-3,1,3,3,3,-10,-5,2,5,9,-9,-7,-4,-9,-8,-6,-4,-5,9,1,-8,-4,3,2,-7,-10,-2,3,6,2,-1,-5,7,5,9,-7,-7,3,-6,10,6,2,-4,5,6,-4,-6,-3,-8,-1,2,-4,-7,-1,-2,8,8,7,4,-4,7,-9,-4,8,-1,-8,6,-4,-1,-8,5,-10,-6,6,8,10,7,-10,2,-4,-8,-5,-8,-7,-3,1,-1,-10,-9,6,-8,5,-8,6,-7,-2,-7,-1,-8,-4,-5,9,-8,-4,-7,6,-9,-1,-10,-6,9,3,-6,1,-3,7,9,-6,6,4,2,-1,3,-7,-10,9,4,-7,8,-6,-2,1,-10,-6,6,-4,-10,-9,-6,5,3,5,-7,10,10,-6,-1,-4,5,9,-10,10,-7,-4,-7,-9,4,-8,8,-8,-3,1,-3,-7,4,10,1,5,-8,3,1,-4,9,8,9,4,-10,6,-9,-2,8,-7,1,-9,3,2,5,9,-9,1,-2,-10,1,6,8,3,9,7,3,8,-9,10,-8,7,-7,-5,-3,-3,-10,4,-8,-6,-6,8,-10,-5,-9,-2,-7,4,5,-3,4,-3,-5,-2,6,10,2,1,-4,-8,3,-2,9,4,-7,4,-3,6,6,10,8,3,-10,10,1,9,-10,-4,-8,2,-5,7,-5,-7,2,4,1,-10,2,-7,9,-8,-8,7,1,1,8,-6,-2,-6,2,4], dtype = "uint64")#candidate|2079|(1008,)|const|uint64
const_2080 = relay.const([-4,-3,-3,10,3,-4,-4,-10,4,3,-10,5,-9,4,-10,-9,-10,-7,7,4,5,-8,6,-4,-7,10,-1,-3,-10,6,-10,4,5,2,-9,2,4,-3,-10,-1,-3,4,4,4,8,5,3,9,3,2,8,7,3,-2,-4,-8,4,1,-1,5,5,9,-1,7,-8,9,-2,7,6,-6,4,7,8,-9,3,10,4,-5,8,3,1,-1,10,-6,-1,7,10,5,-4,-9,-8,6,-10,1,4,-3,7,8,6,-4,-8,-4,4,8,-4,6,8,8,-2,-8,-4,-1,-7,-10,5,-9,4,-3,3,-8,-8,2,4,-6,8,5,4,-3,-7,5,-7,-6,10,-9,9,-1,-2,5,-3,-4,-2,3,7,9,8,-5,-10,8,-8,-4,-4,8,-10,-2,1,-3,7,10,-1,7,5,-6,2,-7,-1,-1,-8,1,-9,2,-10,-4,-1,2,-3,3,2,-3,5,7,10,1,9,7,-6,8,4,-5,-6,10,6,7,5,2,-9,6,-1,9,-10,7,-7,-1,7,-7,3,-2,1,6,-9,-5,-9,10,-7,-9,-7,-2,1,5,-1,3,-2,-2,-6,10,-7,6,8,-6,-6,4,1,-8,-3,-2,-5,-8,-2,1,-9,5,-8,1,-6,-2,4,-6,6,-7,6,3,4,10,4,-4,-4,10,-10,9,10,10,9,-8,9,2,-5,-9,-8,7,-10,-4,9,-8,7,-9,-9,2,5,3,-7,1,9,3,9,-9,10,-5,9,2,-1,2,9,9,6,-10,-6,7,1,5,9,-10,9,-1,-1,4,-3,-3,10,8,4,1,9,5,7,1,-4,-8,-10,-1,2,-4,-2,9,1,-2,-5,6,10,-7,1,-4,1,-10,-2,2,8,9,5,4,5,-2,8,4,9,-4,9,9,-1,-3,-2,7,2,-10,3,-4,1,-9,-4,-6,6,5,-1,7,5,-4,-4,-5,-8,3,2,-2,-3,-3,-7,4,-10,-1,5,-4,8,5,1,-10,8,2,1,2,-8,5,-5,-9,7,-5,-7,-3,7,9,-10,8,-2,-10,6,-9,7,8,-2,-7,6,-1,1,8,-2,9,-5,3,-7,10,-3,8,2,3,2,3,4,-10,10,4,-6,5,9,-1,-9,10,2,5,5,-10,-8,6,8,6,6,9,4,-5,2,-1,-9,-6,-10,-6,8,1,-10,-7,-3,-4,4,10,7,-3,1,3,-5,-2,-9,8,-4,-3,-6,-3,-5,7,-10,9,4,8,6,-7,10,5,-6,9,6,6,-2,10,-6,9,5,5,10,7,7,-8,-1,-8,-10,9,-9,-7,-4,10,-5,5,-9,-1,6,-6,2,-1,8,10,-6,-5,5,-6,8,-8,7,5,6,4,6,6,-3,-2,4,-3,2,5,-8,6,-7,1,2,9,-5,-1,-2,-10,-1,7,6,-6,-8,8,2,-3,10,6,-1,-1,7,-7,8,3,10,7,-2,4,5,-5,6,7,-2,-2,-7,7,-5,-10,-2,4,-5,-7,3,-6,-5,-5,-8,1,-7,-5,5,8,-8,5,-3,3,-10,-4,4,-1,-10,-2,-3,2,-5,6,-1,-10,-5,9,3,-8,2,6,-2,7,-5,4,-1,10,3,5,-2,-1,1,-9,-3,9,-8,5,4,-6], dtype = "uint64")#candidate|2080|(624,)|const|uint64
call_2076 = relay.TupleGetItem(func_1897_call(relay.reshape(var_2077.astype('float32'), [4, 16, 10]), relay.reshape(var_2078.astype('float64'), [195,]), relay.reshape(const_2079.astype('uint64'), [1, 1008]), relay.reshape(const_2080.astype('uint64'), [624,]), relay.reshape(var_2077.astype('float32'), [4, 16, 10]), ), 0)
call_2081 = relay.TupleGetItem(func_1904_call(relay.reshape(var_2077.astype('float32'), [4, 16, 10]), relay.reshape(var_2078.astype('float64'), [195,]), relay.reshape(const_2079.astype('uint64'), [1, 1008]), relay.reshape(const_2080.astype('uint64'), [624,]), relay.reshape(var_2077.astype('float32'), [4, 16, 10]), ), 0)
output = relay.Tuple([bop_2040,call_2076,var_2077,var_2078,const_2079,const_2080,])
output2 = relay.Tuple([bop_2040,call_2081,var_2077,var_2078,const_2079,const_2080,])
func_2097 = relay.Function([var_2038,var_2039,var_2077,var_2078,], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mutated_mod.get_global_var('func_2097')
var_2099 = relay.var("var_2099", dtype = "uint64", shape = (16, 5, 11))#candidate|2099|(16, 5, 11)|var|uint64
var_2100 = relay.var("var_2100", dtype = "uint64", shape = (16, 5, 11))#candidate|2100|(16, 5, 11)|var|uint64
var_2101 = relay.var("var_2101", dtype = "float32", shape = (640,))#candidate|2101|(640,)|var|float32
var_2102 = relay.var("var_2102", dtype = "float64", shape = (195,))#candidate|2102|(195,)|var|float64
call_2098 = func_2097_call(var_2099,var_2100,var_2101,var_2102,)
output = call_2098
func_2103 = relay.Function([var_2099,var_2100,var_2101,var_2102,], output)
mutated_mod['func_2103'] = func_2103
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2673 = relay.const([[[2,-10,3,-5,9,3,-10,8,-6,3],[-5,9,8,-10,4,2,1,-5,3,-5],[-1,4,9,-3,6,-3,8,-4,1,-7],[-9,-1,4,7,5,2,10,-7,8,8],[-8,5,-2,-2,-5,10,-9,4,-6,-1],[-3,-8,8,4,7,-10,-2,3,-5,10],[6,-6,10,10,-1,10,-5,6,4,-9],[-3,-8,-5,-2,-7,-2,2,-10,8,-2],[-5,2,9,-3,-10,-3,-5,-8,3,-3],[-2,-5,-5,-9,-7,3,-1,1,-4,4],[1,7,-8,6,-6,-4,-8,-5,6,-7],[4,6,-6,7,1,6,-9,-8,7,-10],[5,-3,5,-5,3,5,-5,-3,5,-2],[1,10,10,-9,-2,-2,-3,1,3,8],[-9,3,1,6,6,-6,-8,9,4,5]],[[-4,-4,-1,6,2,-2,-8,-6,1,-9],[-2,5,9,5,1,1,6,6,-2,-3],[-8,-5,8,-7,3,-7,1,4,8,-5],[-1,6,-4,7,5,-2,3,-1,-1,1],[6,-9,-1,-7,4,10,8,3,8,-10],[7,8,-9,4,-7,4,-4,10,-7,6],[9,-7,2,1,-7,5,-2,8,9,-1],[-7,-2,9,-8,-9,10,-10,4,-6,-4],[-5,10,1,1,8,-8,9,5,2,-6],[8,10,6,2,1,6,-4,-5,4,6],[-8,-6,6,4,-7,-10,10,-2,6,-8],[-1,-2,3,-1,3,-9,-2,7,10,-6],[6,1,8,2,-9,-8,5,7,-9,-4],[-6,3,-10,7,-4,7,1,-5,3,-10],[8,-5,9,-10,2,1,9,-7,-8,10]],[[-9,3,-7,8,4,4,-7,-4,1,-7],[9,3,5,10,-6,5,-9,3,7,-6],[9,-4,9,5,3,2,-1,2,5,-7],[-2,6,3,7,-1,10,5,8,-3,3],[-6,-7,-10,-3,3,-7,4,-6,3,6],[8,-5,1,6,-8,-9,-4,1,7,2],[-6,5,-2,-9,-6,-8,3,9,7,-8],[-6,9,-3,-7,-6,10,-8,2,-8,5],[-7,10,6,-4,7,-8,-10,3,9,8],[9,-7,-3,-6,-1,-4,-4,6,4,-3],[-5,1,1,-1,-6,-6,-6,-9,-4,-1],[6,1,2,9,1,-6,-4,4,-3,-6],[3,-1,6,10,-6,5,8,1,-7,-5],[-2,-5,-8,-2,3,9,1,-6,3,-9],[9,-1,1,-9,10,-7,7,-9,-10,-5]],[[10,-10,3,9,2,-4,-3,-1,7,-1],[6,-9,9,-7,8,3,-5,8,6,5],[-7,-2,4,-5,3,-9,-3,1,8,-2],[-9,6,-5,-1,4,-3,-5,-3,8,3],[3,2,10,-9,-3,-7,-3,6,7,-1],[3,4,-8,-10,-3,8,3,-2,-3,-5],[2,-7,-5,5,10,5,-9,-5,5,3],[-6,-6,9,6,-8,8,-3,5,10,9],[5,5,-2,10,4,5,-4,-1,-8,-5],[-7,6,-10,5,-8,-9,-6,-6,-5,-6],[-2,10,-2,9,9,-6,-8,4,3,5],[-4,6,-1,8,1,-6,7,-10,-9,10],[-4,-2,-1,8,8,5,10,-1,6,-6],[5,1,-9,10,-10,6,9,4,-8,3],[-10,7,-2,10,10,-4,-9,7,-5,-6]],[[9,9,-1,7,-9,-5,-9,-6,1,-8],[3,5,8,-10,3,10,-9,10,-5,-1],[-7,3,9,6,7,-10,-7,-2,1,10],[9,5,-10,-2,-4,-1,-1,7,-4,-9],[-7,1,8,-7,-7,-10,-8,6,2,4],[1,6,-10,2,-4,-4,4,2,-3,10],[7,-8,-6,2,-4,-3,4,9,-10,7],[-5,-6,-10,-2,9,-3,-1,3,7,7],[-4,10,-2,9,1,-8,8,-7,4,1],[9,-2,-5,2,-10,7,1,-1,6,7],[-9,4,-8,-6,-8,6,1,2,4,-9],[-2,10,2,6,-3,-5,-7,10,2,10],[2,-1,-7,-10,4,-5,6,10,9,7],[-1,6,3,-5,-3,7,2,-10,-1,-10],[-10,1,-4,-3,1,7,-2,1,-1,2]],[[-3,1,7,6,2,2,3,-5,8,-10],[-7,10,9,5,-8,-4,-8,-8,-6,2],[10,-9,7,10,3,-4,-6,-2,-6,7],[-5,-4,-5,5,-7,-9,-1,2,4,5],[3,-10,4,5,8,-3,-2,4,-1,1],[8,-9,-10,-8,4,-2,3,-5,3,-6],[-2,1,-7,-5,8,8,-6,4,7,-2],[7,9,7,8,6,10,4,5,-8,10],[4,1,-7,10,9,7,8,-8,10,7],[-2,7,10,-7,-10,-4,7,8,2,-7],[10,1,-10,4,-6,9,8,4,-5,6],[-2,-2,8,4,-8,5,7,-7,-4,10],[-4,10,4,-9,6,6,8,6,8,9],[1,5,9,-6,4,5,-4,9,-8,6],[-4,2,10,9,10,-7,2,-8,5,4]],[[-9,-7,-3,-10,5,-6,8,-2,-10,10],[6,10,1,-9,-3,8,-3,6,3,8],[1,10,6,2,2,-5,-1,-8,-2,-1],[-9,8,5,-7,-7,10,-3,-1,-10,-4],[-7,3,-3,-2,-8,-1,-3,-9,2,-9],[-3,10,7,4,4,-2,-6,-9,-5,-5],[4,-10,-6,5,6,-8,3,4,7,9],[-7,-10,-7,-3,10,5,-5,-10,3,8],[9,8,-4,-4,-2,2,-8,-4,3,-7],[-5,-6,-7,-1,2,-10,5,-5,-10,-10],[3,-6,6,6,-7,-4,-5,-3,7,-3],[-3,-1,10,-5,-6,5,-9,-2,10,4],[-1,10,-9,10,-6,6,-5,6,-3,-8],[-8,-10,-5,-1,10,-2,6,-7,-4,-2],[2,-2,4,-4,10,8,4,-4,2,-4]],[[1,-1,8,1,-7,-4,10,5,3,3],[-1,1,10,-6,9,5,6,6,-6,-5],[1,-1,7,-6,-7,-4,-1,6,2,-6],[-2,2,6,9,6,-4,-7,-9,3,5],[-8,10,5,3,-8,8,-9,-5,8,-9],[-1,-3,-10,-1,10,4,-4,-9,8,6],[-2,-5,5,-8,-5,-7,-9,-5,5,-1],[1,-4,10,5,5,4,-6,-10,9,1],[-4,2,-1,4,2,-2,3,-9,-7,-10],[6,10,3,2,-8,5,3,7,4,-1],[-9,9,-7,2,3,-8,6,-2,8,8],[-8,7,-2,-7,-8,-5,3,6,4,-6],[1,-7,-10,3,-4,-3,8,4,-6,8],[-3,-8,7,-4,3,-10,-4,1,-6,1],[9,-2,3,9,-9,1,2,-8,-3,-1]],[[-4,1,8,1,8,5,5,-4,-3,8],[-10,6,10,2,-6,-2,-4,6,6,-7],[9,-2,7,-5,-9,-4,3,2,4,9],[-8,2,-5,-5,8,-9,-2,-1,7,1],[8,6,7,-7,1,-3,-8,-5,5,-5],[-2,8,-5,4,7,-9,-1,8,-10,-1],[2,4,-2,2,8,8,2,-3,7,1],[1,8,-5,-3,3,10,1,5,2,9],[-5,-8,-3,5,8,-3,-10,-4,1,-9],[-3,-2,-2,6,-2,-4,1,5,-2,-5],[10,1,3,4,3,10,2,-8,9,-10],[10,10,-3,9,-7,8,-6,-7,4,-5],[-5,-1,-9,3,5,-8,5,-8,3,6],[2,9,-2,-7,6,-3,6,-9,-5,2],[-6,-6,-8,-9,-10,5,10,-9,10,3]],[[9,8,2,-10,-10,8,3,-6,6,6],[-2,-9,-2,-9,8,8,-7,-3,-4,5],[-5,9,-7,-1,-10,-1,7,-7,2,-3],[5,6,-10,9,1,-9,9,4,-10,-10],[-3,5,5,-9,5,7,-5,-1,1,-8],[-6,-9,-4,-2,10,-7,7,3,1,8],[5,-7,6,5,8,10,-10,-2,3,-9],[7,8,-7,3,4,-5,7,-9,-7,-2],[6,10,2,2,-5,-10,8,-6,6,4],[-3,9,10,2,-2,4,-6,-6,8,6],[9,-8,2,4,7,10,-7,-9,8,-6],[-6,8,7,-2,2,-10,4,9,-4,-3],[-9,1,3,4,-1,-2,1,3,-4,2],[-5,-8,-2,2,-8,-9,10,-6,9,-6],[8,-1,6,8,-1,7,-5,-2,1,-5]],[[10,9,-5,7,-3,-8,9,-2,3,8],[-2,-7,-9,4,-4,-1,6,-6,-3,6],[-6,-10,2,-3,-4,9,5,1,-7,-5],[7,-5,6,-3,-6,6,3,-8,-8,2],[-9,5,8,-7,-4,-6,-8,5,4,-2],[9,4,-4,7,-3,-3,1,-8,8,2],[10,5,8,-2,8,-5,-2,8,-3,-7],[7,9,-9,-7,-4,9,8,2,1,-10],[-7,-7,8,-6,-4,7,2,9,5,-10],[-4,1,-10,8,6,-4,7,-4,9,-5],[-3,-4,10,-10,-9,4,-7,5,-7,-1],[-5,7,-6,-6,-3,8,3,2,-7,-8],[3,2,-6,-9,4,-9,-7,-10,9,10],[6,7,1,-3,-4,-5,-3,-8,5,-6],[-9,5,-1,-1,-10,-2,8,-6,-1,-7]],[[7,3,-10,1,-10,4,1,-7,6,-3],[-8,3,-4,-7,5,1,8,4,-5,-5],[1,4,1,-2,-9,3,2,3,2,-3],[4,1,-6,-1,-9,5,6,-1,1,1],[-10,5,-10,-10,-10,1,4,7,-8,-10],[5,-8,5,7,5,-3,-2,-9,-1,-7],[1,-5,2,7,-10,-9,-4,-5,10,-4],[10,2,-8,-6,-1,1,3,-8,-10,4],[-4,3,4,7,-10,9,-8,3,3,6],[4,-7,-5,-9,10,5,10,1,7,-8],[-9,-6,9,5,-1,-5,10,10,-6,10],[-6,-1,-4,2,2,-8,-6,-8,-4,-6],[-3,9,-4,-1,-2,8,8,4,-4,1],[6,-7,-4,9,7,4,-8,-5,4,3],[-9,-3,2,6,6,4,-7,-6,5,10]],[[3,-3,-8,3,4,-7,-9,-9,2,9],[-5,9,5,4,5,3,1,-8,4,-3],[7,3,-2,7,10,-1,-10,-8,8,-8],[-9,10,6,-8,-9,-1,1,-2,-8,7],[6,6,10,2,7,10,10,-7,8,-7],[6,-5,3,4,-6,-1,10,-10,-1,-8],[-4,-6,10,1,9,-7,5,6,9,9],[-10,10,6,-8,-4,-7,7,-1,7,7],[9,2,5,-9,-7,-2,9,-7,-1,3],[-1,2,-2,-5,4,-4,5,6,-6,-6],[5,10,-1,-10,3,-10,4,4,-8,6],[2,-4,7,-1,-6,6,7,5,4,-4],[7,-3,7,-8,6,-6,3,7,1,3],[-5,9,6,1,7,6,9,-6,7,-1],[7,3,-9,-10,-10,-8,-1,-8,10,6]],[[7,3,3,4,5,-7,5,2,2,-6],[4,-9,10,-1,-1,8,-1,5,4,6],[-7,2,2,-7,6,1,7,5,9,10],[1,7,-10,-7,-2,-4,7,2,-1,-6],[-4,7,6,1,-7,5,-10,1,-3,-6],[3,-5,-7,-2,7,5,4,3,5,-7],[-4,10,3,3,2,-4,-9,-5,-7,5],[6,3,2,-2,-9,-9,1,4,1,-3],[-7,7,-5,2,-1,6,-7,-7,-7,7],[-10,-9,-4,-9,10,-5,9,3,-6,8],[2,-3,4,-9,3,-7,10,7,8,-10],[-8,-7,9,-2,7,-10,-3,7,7,10],[-1,4,-10,-7,7,-7,2,-1,-4,-6],[3,1,9,5,5,7,-10,-7,-3,1],[2,6,-3,-7,-8,-9,8,-6,7,4]],[[-7,-8,-3,-1,1,-10,-1,-1,3,-3],[-10,3,2,5,-3,3,-2,-8,6,-3],[1,-4,-10,-7,2,6,-2,-1,8,-6],[-7,-2,-10,5,-10,-4,4,1,2,8],[8,9,-3,-6,8,-6,1,-3,-8,6],[7,-7,10,6,8,10,-10,-7,9,5],[-9,2,9,-2,4,-3,10,1,-9,-3],[-2,4,2,-4,9,10,-2,-8,6,8],[-8,10,-2,-9,9,-2,7,-1,-9,1],[6,-6,2,1,-3,-9,-1,-2,-9,6],[5,8,-3,-2,-8,10,6,4,9,-7],[4,5,4,-8,10,-2,-3,-8,3,-9],[-5,-5,-5,9,2,-8,2,2,1,-9],[-6,-8,3,-5,4,-7,7,9,3,-7],[4,1,-9,1,3,-2,3,7,-4,4]],[[10,-8,-7,10,5,-3,1,2,-9,1],[-3,2,-5,-3,5,10,3,4,-4,-8],[-10,-7,-8,-2,-4,-10,9,4,-3,4],[6,-5,1,9,-4,6,9,-6,4,2],[2,-4,6,-7,-7,-8,3,4,-3,-9],[9,10,9,-2,3,-1,-8,7,7,2],[5,8,3,1,-6,-4,8,-2,-7,1],[2,6,1,5,-7,1,-9,9,-3,-10],[3,-4,6,-9,2,-5,-2,-4,4,8],[-8,-5,-9,9,-7,3,-2,2,-4,-5],[8,1,-10,-2,6,-8,-10,9,7,3],[8,-5,-2,-10,-7,5,2,-7,4,-9],[-1,5,7,-3,4,8,2,2,-2,4],[-7,9,6,-4,-9,-1,7,4,-1,-10],[-4,9,-4,2,5,-9,5,-4,6,-9]]], dtype = "int32")#candidate|2673|(16, 15, 10)|const|int32
var_2674 = relay.var("var_2674", dtype = "int32", shape = (16, 15, 10))#candidate|2674|(16, 15, 10)|var|int32
bop_2675 = relay.bitwise_xor(const_2673.astype('int32'), relay.reshape(var_2674.astype('int32'), relay.shape_of(const_2673))) # shape=(16, 15, 10)
func_241_call = mod.get_global_var('func_241')
func_243_call = mutated_mod.get_global_var('func_243')
const_2683 = relay.const([[5.551962],[-5.954051],[4.769383],[-6.723153],[-2.214034],[7.090671],[0.555436],[-5.930814],[-1.720259],[4.455712],[-2.682486],[-6.557528],[-5.047897],[9.481084],[7.786818],[-3.106027],[-2.085206],[-1.748603],[-4.331310],[-8.678795],[-8.879353],[-0.207909],[-1.513917],[2.896795],[-0.248844],[-5.498867],[-5.318885],[3.969522],[-6.134841],[3.497551],[-8.577115],[-3.725037],[9.622979],[2.845865],[0.120031],[-0.883723],[1.237690],[2.108276],[9.874671],[-6.361910],[-9.504133],[4.268909],[7.585135],[5.627781],[3.338501],[8.147055],[-0.773629],[-0.583826],[-8.114120],[9.247734],[-9.098931],[-9.241935],[-9.286803],[0.972112],[-4.780323],[-1.255595],[-7.281781],[6.157426],[-8.441247],[0.182202],[-1.765088],[8.956798],[9.583769],[-1.768001],[7.186496],[5.463489],[5.129928],[4.074700],[-7.337462],[9.039943],[-8.774607],[5.476553],[7.203958],[-8.120130],[8.135556],[2.342220],[-7.777615],[-0.719821],[0.288750],[-9.541671],[-4.625132],[-5.595409],[4.462514],[-7.848840],[-6.699576],[-8.905873],[4.867748],[-4.241212],[-7.821233],[-9.326800],[-8.642325],[3.990021],[-1.031755],[-6.731805],[-7.948272],[3.983095],[8.082400],[-8.179469],[6.414891],[-8.141537],[8.364475],[7.640690],[-8.247379],[1.351427],[-4.540670],[-6.304584],[-5.479289],[-3.769275],[3.186254],[-4.118592],[1.473239],[-6.009542],[7.056417],[7.171984],[8.810893],[-8.630025],[-6.400349],[6.299813],[8.929978],[7.961628],[-9.273410],[9.859129],[-4.993747],[-4.138371],[-7.859082],[5.667828],[-8.904063],[-0.637417],[8.816297],[-7.767334],[1.768134],[6.883053],[-4.501544],[-0.995679],[8.326188],[-5.601139],[7.328524],[-0.032539],[8.670086],[8.121373],[7.382465],[8.185995],[7.795577],[6.648357],[0.730612],[8.001863],[4.740353],[-8.632333],[-2.386819],[3.236856],[-9.959663],[4.093135],[7.946992],[8.816823],[-0.513213],[0.926394],[-3.810542],[1.186328],[-9.901223],[-0.342894],[7.686738],[8.924288],[-4.123292],[-5.843978],[-2.649974],[-8.231837],[6.584776],[9.708217],[-8.243423],[5.136020],[7.186121],[-2.135822],[9.304420],[8.026987],[2.478062],[7.055015],[-2.755425],[7.987125],[-0.849649],[8.092675],[7.452064],[-5.958886],[4.565978],[-9.658579],[-7.811180],[7.146215],[-5.995188],[2.894910],[0.992168],[5.916740],[-7.584034],[3.709412],[5.753574],[8.196791],[9.171077],[9.410985],[9.195565],[2.439928],[4.304173],[-9.989772],[-3.320859],[2.238321],[9.426037],[-1.008420],[-1.856312],[4.974250],[3.414950],[7.038728],[1.696514],[-6.850917],[4.264980],[-6.870945],[0.268467],[9.549395],[3.167746],[5.770653],[2.686476],[-6.046070],[0.860711],[-8.580510],[-9.130468],[7.609984],[-9.346069],[3.653578],[3.006650],[-2.617028],[4.413358],[7.263633],[6.890352],[8.877336],[-6.856750],[-2.839835],[4.708023],[8.332506],[5.511383],[-5.633185],[8.856336],[3.625610],[-1.825794],[-0.156097],[9.108192],[-4.337141],[7.235943],[3.477310],[5.240586],[5.709761],[0.047459],[5.495298],[-1.493545],[-8.985156],[-4.221193],[7.162335],[-0.256045],[-6.971581],[0.722063],[-0.863633],[7.639580],[2.230625],[2.396235],[9.043505],[8.135590],[-0.207699],[-0.976949],[-7.691990],[-7.899687],[2.213273],[6.017177],[6.438400],[8.385618],[5.971550],[-0.219311],[4.578998],[-6.244068],[-9.122922],[-1.577905],[-1.696517],[-4.826650],[-3.350971],[2.134659],[2.278427],[3.448227],[-8.068067],[6.075098],[-7.511276],[1.955186],[-5.465440],[-2.391513],[-4.285402],[-4.649908],[-6.380206],[-0.627105],[8.578002],[6.948385],[-1.096257],[-3.252923],[5.817003],[-4.533028],[-7.376597],[9.809086],[-3.344196],[-2.112645],[-7.445890],[6.603986],[-8.750962],[7.832215],[-5.173478],[0.717998],[-9.415344],[7.826032],[0.697731],[-0.747762],[-8.200362],[3.162672],[-9.541434],[7.235139],[1.133963],[6.434743],[-5.840255],[-5.311746],[9.430923],[3.977289],[-5.294888],[6.247732],[-8.531244],[7.846014],[-9.679672],[-8.070870],[-2.136621],[6.570913],[-5.638561],[7.560354],[1.188637],[5.622267],[1.311232],[-9.226997],[4.518557],[-9.971353],[-8.054774],[-6.568428],[0.344863],[9.109813],[1.898227],[-2.730884],[4.175543],[-9.106390],[-8.498903],[4.840966],[5.271527],[-4.579523],[7.829615],[6.115567],[-2.020528],[-1.572259],[1.538819],[2.699228],[-1.219160],[-8.217154],[-3.052119],[7.417189],[-2.305181]], dtype = "float64")#candidate|2683|(360, 1)|const|float64
call_2682 = func_241_call(relay.reshape(const_2683.astype('float64'), [15, 4, 6]))
call_2684 = func_241_call(relay.reshape(const_2683.astype('float64'), [15, 4, 6]))
bop_2688 = relay.multiply(call_2682.astype('int64'), relay.reshape(const_2683.astype('int64'), relay.shape_of(call_2682))) # shape=(15, 4, 6)
bop_2691 = relay.multiply(call_2684.astype('int64'), relay.reshape(const_2683.astype('int64'), relay.shape_of(call_2684))) # shape=(15, 4, 6)
func_241_call = mod.get_global_var('func_241')
func_243_call = mutated_mod.get_global_var('func_243')
call_2692 = func_241_call(relay.reshape(const_2683.astype('float64'), [15, 4, 6]))
call_2693 = func_241_call(relay.reshape(const_2683.astype('float64'), [15, 4, 6]))
output = relay.Tuple([bop_2675,bop_2688,call_2692,])
output2 = relay.Tuple([bop_2675,bop_2691,call_2693,])
func_2697 = relay.Function([var_2674,], output)
mod['func_2697'] = func_2697
mod = relay.transform.InferType()(mod)
mutated_mod['func_2697'] = func_2697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2698 = relay.var("var_2698", dtype = "int32", shape = (16, 15, 10))#candidate|2698|(16, 15, 10)|var|int32
func_2697_call = mutated_mod.get_global_var('func_2697')
call_2699 = func_2697_call(var_2698)
output = call_2699
func_2700 = relay.Function([var_2698], output)
mutated_mod['func_2700'] = func_2700
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3119 = relay.constdtype = "float64")#candidate|3119|(13, 15, 11)|const|float64
uop_3120 = relay.cosh(const_3119.astype('float64')) # shape=(13, 15, 11)
bop_3125 = relay.right_shift(uop_3120.astype('uint8'), relay.reshape(const_3119.astype('uint8'), relay.shape_of(uop_3120))) # shape=(13, 15, 11)
output = relay.Tuple([bop_3125,])
output2 = relay.Tuple([bop_3125,])
func_3141 = relay.Function([], output)
mod['func_3141'] = func_3141
mod = relay.transform.InferType()(mod)
mutated_mod['func_3141'] = func_3141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mutated_mod.get_global_var('func_3141')
call_3142 = func_3141_call()
output = call_3142
func_3143 = relay.Function([], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3156 = relay.TupleGetItem(func_3141_call(), 0)
call_3157 = relay.TupleGetItem(func_3143_call(), 0)
output = call_3156
output2 = call_3157
func_3167 = relay.Function([], output)
mod['func_3167'] = func_3167
mod = relay.transform.InferType()(mod)
output = func_3167()
func_3168 = relay.Function([], output)
mutated_mod['func_3168'] = func_3168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3196 = relay.TupleGetItem(func_3141_call(), 0)
call_3197 = relay.TupleGetItem(func_3143_call(), 0)
func_350_call = mod.get_global_var('func_350')
func_353_call = mutated_mod.get_global_var('func_353')
const_3211 = relay.const(7, dtype = "uint8")#candidate|3211|()|const|uint8
var_3212 = relay.var("var_3212", dtype = "uint8", shape = (400,))#candidate|3212|(400,)|var|uint8
call_3210 = relay.TupleGetItem(func_350_call(relay.reshape(const_3211.astype('uint8'), []), relay.reshape(var_3212.astype('uint8'), [16, 5, 5]), ), 0)
call_3213 = relay.TupleGetItem(func_353_call(relay.reshape(const_3211.astype('uint8'), []), relay.reshape(var_3212.astype('uint8'), [16, 5, 5]), ), 0)
uop_3226 = relay.cosh(call_3210.astype('float32')) # shape=(16, 5, 5)
uop_3228 = relay.cosh(call_3213.astype('float32')) # shape=(16, 5, 5)
func_1168_call = mod.get_global_var('func_1168')
func_1171_call = mutated_mod.get_global_var('func_1171')
const_3232 = relay.const([[4,-5],[-4,2],[6,-4],[4,10],[2,-2],[-8,-4],[-9,1]], dtype = "uint8")#candidate|3232|(7, 2)|const|uint8
const_3233 = relay.const([[10,-4],[10,3],[4,-2],[-2,-9],[5,10],[6,-2],[8,-6],[3,6],[1,2],[-8,9],[-4,10],[-4,-2],[9,-8],[10,9],[-6,-4],[9,2],[10,1],[10,1],[3,-7],[2,-7],[1,-8],[-7,-6],[10,-2],[10,8],[10,9],[1,4],[-3,10],[10,8],[5,2],[-3,-5],[-8,3],[-2,7],[10,2],[6,-3],[6,-6],[-1,10],[8,-7],[8,-5],[10,-4],[7,-4],[7,-8],[3,4],[7,8],[2,-5],[7,3],[-6,4],[4,-8],[-1,-10],[10,1],[-3,3],[-5,-9],[8,-9],[-10,10],[3,-1],[4,-10],[6,3]], dtype = "uint8")#candidate|3233|(56, 2)|const|uint8
call_3231 = relay.TupleGetItem(func_1168_call(relay.reshape(const_3232.astype('uint8'), [1, 7, 2]), relay.reshape(const_3233.astype('uint8'), [8, 7, 2]), ), 1)
call_3234 = relay.TupleGetItem(func_1171_call(relay.reshape(const_3232.astype('uint8'), [1, 7, 2]), relay.reshape(const_3233.astype('uint8'), [8, 7, 2]), ), 1)
output = relay.Tuple([call_3196,const_3211,var_3212,uop_3226,call_3231,const_3232,const_3233,])
output2 = relay.Tuple([call_3197,const_3211,var_3212,uop_3228,call_3234,const_3232,const_3233,])
func_3240 = relay.Function([var_3212,], output)
mod['func_3240'] = func_3240
mod = relay.transform.InferType()(mod)
mutated_mod['func_3240'] = func_3240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3241 = relay.var("var_3241", dtype = "uint8", shape = (400,))#candidate|3241|(400,)|var|uint8
func_3240_call = mutated_mod.get_global_var('func_3240')
call_3242 = func_3240_call(var_3241)
output = call_3242
func_3243 = relay.Function([var_3241], output)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3252 = relay.TupleGetItem(func_3141_call(), 0)
call_3253 = relay.TupleGetItem(func_3143_call(), 0)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3264 = relay.TupleGetItem(func_3141_call(), 0)
call_3265 = relay.TupleGetItem(func_3143_call(), 0)
bop_3271 = relay.equal(call_3252.astype('bool'), relay.reshape(call_3264.astype('bool'), relay.shape_of(call_3252))) # shape=(13, 15, 11)
bop_3274 = relay.equal(call_3253.astype('bool'), relay.reshape(call_3265.astype('bool'), relay.shape_of(call_3253))) # shape=(13, 15, 11)
output = bop_3271
output2 = bop_3274
func_3292 = relay.Function([], output)
mod['func_3292'] = func_3292
mod = relay.transform.InferType()(mod)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3293 = func_3292_call()
output = call_3293
func_3294 = relay.Function([], output)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3388 = func_3292_call()
call_3389 = func_3292_call()
uop_3401 = relay.log10(call_3388.astype('float32')) # shape=(13, 15, 11)
uop_3403 = relay.log10(call_3389.astype('float32')) # shape=(13, 15, 11)
func_3240_call = mod.get_global_var('func_3240')
func_3243_call = mutated_mod.get_global_var('func_3243')
var_3407 = relay.var("var_3407", dtype = "uint8", shape = (400, 1))#candidate|3407|(400, 1)|var|uint8
call_3406 = relay.TupleGetItem(func_3240_call(relay.reshape(var_3407.astype('uint8'), [400,])), 2)
call_3408 = relay.TupleGetItem(func_3243_call(relay.reshape(var_3407.astype('uint8'), [400,])), 2)
uop_3431 = relay.rsqrt(uop_3401.astype('float64')) # shape=(13, 15, 11)
uop_3433 = relay.rsqrt(uop_3403.astype('float64')) # shape=(13, 15, 11)
func_1595_call = mod.get_global_var('func_1595')
func_1598_call = mutated_mod.get_global_var('func_1598')
const_3440 = relay.const(3.888882, dtype = "float64")#candidate|3440|()|const|float64
const_3441 = relay.const([0.639567,-1.258370,-3.140496,3.851500,2.702800,-6.194673,7.000290,7.883895,6.500487,-9.810020,0.175219,-9.760640,2.896876,-2.261544,-5.559226,-7.104989,-3.617824,5.610317,-5.060401,-0.223793,2.771635,-6.355899,-4.755204,2.643112,7.418176,1.951583,-3.321236,9.095597,5.626755,-0.637580,2.606274,1.346071,2.514811,-9.954668,8.991712,-2.416395,8.017237,0.484325,-0.959966,9.987057,-1.106254,-9.552475,-1.690535,1.773447,6.564638,7.153253,-4.830526,-2.525103,0.420030,-5.937134,6.697930,-8.587237,1.326458,-6.738170,-0.069126,4.949537,7.960189,0.891478,6.408526,0.213823,-8.326612,4.555361,-7.348024,-3.604512,-5.413857,-1.622165,3.511988,-7.633455,8.073195,-9.700814,-9.625435,-3.236904,4.820660,4.563406,-9.924629,-9.826566,8.915288,-9.692810,4.155709,-9.323129,7.138787,-8.133337,5.514907,5.275713,0.672300,-2.714381,-6.402377,9.566934,-9.087698,-5.938054,-4.205423,8.148740,1.855223,9.081995,-4.554569,-1.115788,-7.152120,7.026005,-3.013798,-7.850168,-3.080546,6.326248,-1.620986,3.409651,-1.445761,1.344533,-0.037814,-6.370425,-1.821234,-2.629195,0.728241,-9.955101,5.801470,7.301179,4.668587,-2.929442,-4.223585,-9.079237,-2.344432,6.997839,3.705439,4.126654,2.175580,1.354033,2.749781,4.217413,8.644519,2.581514,4.166331,-7.785978,-4.396560,-0.467574,-1.740279,0.750712,-6.547479,8.672076,-3.001075,8.319537,5.191822,5.280494,1.919230,4.293743,6.020258,1.380500,-6.953635,1.594663,-0.532650,2.684933,-6.063611,-1.318000,-1.572742,-8.729032,-5.206030,-0.992552,4.457774,7.751948,-1.435363,4.197587,3.472960,-7.676752,-9.041534,-3.218427,-8.176366,1.677605,1.975164,9.278075,-0.315347,-9.773558,-2.446401,-6.017478,-4.671048,-7.349448,-2.340820,-7.205971,-2.594029,3.182743,-5.280362,-5.167605,-7.197610,3.366306,5.560157,5.614492,2.614770,-4.727982,-0.290615,8.721048,-2.610444,-5.017193,2.026505,-9.900251,9.586683,-5.930165,-1.545995,-0.856037,-6.621762,-2.768324,8.624329,0.822895,6.729481,-2.801048,-4.937305,-0.033438,6.962176,-1.977306,-2.681092,-3.324878,-6.974628,9.711743,9.926785,4.562478,-0.505839,3.064172,6.365499,-7.411885,8.979951,0.157512,-5.947810,-7.049633,-3.990163,-6.262002,-3.571777,-9.943190,3.134061,3.512399,-5.249156,-1.366503,-8.901483,-7.983664,1.294147,-6.898404,1.721404,-9.783858,4.531445,2.891891,5.823321,-6.317925,-0.514569,1.390335,6.009623,2.830839,1.320757,-7.150466,4.759629,-2.890983,5.263288,4.523814,-4.513342,-7.115657,8.931972,0.122400,1.193190,-7.288006,-6.054810,9.799592,-8.071282,1.222212,-9.493007,7.065466,-9.165551,-4.589742,-7.675440,-2.245920,-3.167765,-8.524777,-0.984283,-3.932554,-9.715313,-9.662432,-4.250965,-2.608946,-5.888135,5.506540,0.382512,-7.294636,-1.281889,8.704569,5.842149,2.050600,-2.354454,0.850872,5.999869,-8.000978,-1.624437,-1.617931,-0.075248,8.561743,0.781553,7.901410,2.312719,-0.061552,9.515617,-9.016585,-3.149142,-0.339108,7.425773,3.978176,0.409467,-0.861242,-9.113159,3.856572,7.608369,0.769971,4.752496,0.407287,4.531796,-6.835297,1.025976,1.472582,-2.976934,-1.591734,5.150349,-8.172752,7.524391,-0.353236,7.497041,-0.479576,-2.741166,5.072198,3.947482,-2.794568,2.290174,7.166759,6.643901,-1.753775,-0.145577,3.375710,-3.708008,-7.972903,0.893993,-2.354482,-3.461231,2.054695,-7.318092,-2.395831,-9.263534,-0.957705,7.969576,-8.781390,-9.599872,-9.483496,-7.353110,-7.900743,1.021083,-4.046928,4.944778,-4.480669,-7.848240,-8.088582,-3.906697,-7.212385,8.791030,-2.359084,-6.115158,3.468468,2.195409,7.726334,-6.062974,1.680914,-1.918344,-1.628629,-5.911637,-9.969508,-9.976326,0.059936,1.823361,5.506696,2.908249,-6.837894,8.358315,-3.419662,0.670696,-9.317072,-8.255423,-1.769890,1.262815,-0.139526,8.417830,-6.838390,-3.062069,-6.520452,4.811904,-2.603508,-2.919714,-2.183072,2.117285,-9.747030,-9.188937,-4.378025,-8.830395,-2.764153,6.066591,3.421155,1.854144,-1.353227,-0.585343,6.226795,7.082509,-3.886497,-8.119053,8.947251,1.636932,2.254159,-7.384471,-1.720005,-8.261856,-5.725840,-8.426548,-1.493687,-6.528962,9.397421,0.997025,-9.427975,-1.025119,-2.768642,-6.421700,-5.207536,-7.992209,3.435521,6.379877,9.556441,-9.945553,0.102301,-5.114299,-7.963257,8.774458,0.662025,7.246752,9.844342,-8.611126,-7.602759,3.884805,-5.855361,-5.540507,-8.420279,-0.361331,5.324837,4.538679,3.585476,-9.008735,-3.308231,7.490191,1.882972,-0.334812,-4.561528,-5.954598,6.962353,-2.510249,8.839468,7.355939,-1.711702,-5.302327,4.903179,8.957028,8.275724,-2.180497,8.504026,0.025017,-5.680280,1.234762,-6.069114,-0.574498,5.574077,3.896502,3.155882,-5.106875,-1.247778,-9.113064,-3.916921,-3.387028,2.933109,-8.999508,-5.994016,1.640133,9.830560,-9.409425,6.426048,5.846891,8.654966,4.499301,5.906255,-8.455864,-0.657361,7.812475,-6.788603,-4.615002,9.012598,-4.084839,-1.654986,-7.214136,-8.803114,2.921238,5.486210,-2.528947,-4.860885,-1.611224,1.803424,9.809064,3.816933,6.127141,8.135522,1.611877,-1.988942,-9.606237,-3.724922,-5.054823,6.308369,-0.068433,-2.379413,3.176246,-6.655177,-2.136321,2.339254,-8.150452,1.373052,-7.571424,2.115359,0.221943,-8.379518,5.228659,-2.008788,1.667632,0.732286,2.259018,4.892494,-8.066096,-0.073248,8.293609,6.764195,-2.986863,3.219928,3.026600,-5.778892,-3.705012,-7.902081,0.350424,5.380905,1.074393,-5.867957,-6.435932,9.447602,-1.613157,-4.862439,5.153797,4.378149,-9.323068,2.385694,1.101181,-5.218626,-4.361724,8.318016,3.231572,-3.341574,-7.234986,3.692093,-8.949811,7.676045,-9.046618,4.859910,1.191603,5.538012,1.617302,1.612093,8.716230,0.895315,7.738518,1.696496,4.800241,6.357884,1.702983,8.817719,8.640493,-2.144729,-1.655767,-4.942376,-4.201533,3.569061,-9.648747,-1.130944,-5.849694,3.190585,8.860118,-0.300006,-1.129976,-3.782313,8.226666,-1.723234,-7.782996,-8.275464,-3.146579,2.607729,6.448201,-5.689269,8.121756,9.497342,-9.647628,4.352597,2.127107,9.613844,2.543435,6.421794,5.382967,-7.095114,-4.063681,-5.458700,2.513988,3.561674,-3.354818,-4.534169,8.555986,1.514999,-6.009084,2.607405,-0.622111,4.787556,-4.658744,-5.443565,-1.886542,3.368980,-3.681450,0.633250,2.906475,-6.939494,3.672364,-4.277261,-4.116885,-1.301182,-6.305010,-2.430436,-4.706210,8.398195,5.494270,-7.537448,-9.485741,-5.350898,2.788413,-1.219604,3.696020,-6.242982,9.288204,8.375638,-2.277993,-3.246722,7.028787,-8.720761,-7.170842,-6.287760,6.703537,-4.508507,-9.157717,-0.853186,-7.147500,1.300918,0.944306,-1.055191,-1.990138,-0.542420,-7.351404,0.754311,-3.983484,3.961060,9.497318,-9.381146,0.568944,-8.331814,6.487076,3.376899,2.306814,4.182261,4.829605,2.413916,9.419799,-0.205341,-6.852922,1.302090,6.705086,-0.350812,-5.355238,-3.931158,4.992815,-5.000161,1.458199,-8.027912,-4.153320,-5.876266,-3.235679,3.791309,2.611269,4.631472,3.322515,-7.085141,5.391613,-3.664210,6.541561,6.962648,0.024173,-5.251886,-0.192905,-0.707921,-9.913708,-3.859685,-4.341391,5.946190,1.799755,-3.687867,2.149141,-5.575012,7.325945,2.929157,6.702483,3.059828,-7.488745,4.171019,-4.186807,1.492287,-6.594020,7.372290,2.307758,9.335401,7.202126,3.599364,-2.491343,-5.106392,-0.201561,8.357144,-5.987445,4.300140,-6.642282,7.584372,-9.645167,8.921614,-5.148212,3.301550,2.838302,9.013726,-9.489378,-5.250597,-5.444873,-6.211729,-0.780389,-7.979551,-5.956791,6.180165,-6.676820,-2.809743,7.519693,-5.564207,-5.539008,1.217186,-0.375467,8.748890,6.623856,9.299591,-3.177439,4.261254,9.040375,5.534007,1.635195,-3.933674,-3.208479,-4.492315,1.491501,3.533100,-0.238036,0.492505,3.633644,-1.695146,-1.359614,-6.787959,5.481237,6.894258,7.381408,0.378552,9.988976,6.427890,-7.357503,6.518059,-5.823546,4.983652,4.613006,4.162781,9.138756,-2.734330,4.736186,-6.208997,-9.838292,-8.333173,1.374165,-6.994612,8.501007,-4.632621,2.708590,6.168551,-5.125709,-3.255155,-6.677713,1.548392,5.417130,5.671291,-4.697406,-2.995709,-3.713859,8.001694,-9.455776,-4.043754,6.207016,6.270078,0.415304,-5.494486,8.381952,9.171235,-3.926836,-6.750648,-0.664947,-2.037836,9.965130,2.930605,6.910020,9.969461,-8.811846,-5.123747,-6.063878,-7.679059,-8.819614,-1.852923,-5.956660,0.081201,-6.880475,-0.231354,-7.168710,7.653330,8.589599,0.830121,5.473703,-0.687431,-3.421746,6.659392,-0.410937,-7.329749,-2.986930,6.163662,4.924006,2.734579,-6.047242,-6.186498,1.491197,-8.327456,9.379530,2.046017,3.269500,-8.585582,-1.330552,-2.437606,-9.680161,-8.565847,3.351422,6.485785,-5.316313,-8.273400,-1.568344,3.981315,9.190347,0.864291,3.022996,9.540059,-7.527366,7.430666,-4.124921,-2.978398,-8.206682,9.831961,-5.116653,-5.503870,-0.305046,7.839310,-7.323189,-6.762758,-9.062568,-9.106596,-8.545281,-8.524038,4.902530,-6.194264,-1.578157,-1.563476,1.849293,-1.886648,-9.689434,-8.554471,-6.580089,-9.106822,2.753353,-0.892972,-3.850928,3.533968,-1.337438,2.326123,9.805176,7.036552,-0.459429,0.879051,-7.659030,4.537872,-7.282085,3.253668,9.999346,2.237522,-1.388034,3.040772,-9.102453,9.571231,-7.211899,8.582319,-1.826535,6.125014,-2.270704,-1.500402,4.731729,-4.364926,-0.663032,-4.590550,9.248366,-0.532790,1.204749,-8.083720,-5.372505,-3.943467,-6.990368,7.197651,5.943177,-9.989947,3.251397,-5.857059,-6.614525,-4.831404,-1.806813,8.675529,4.974539,0.778789,9.446203,-5.233976,3.120582,-6.756823,-1.657236,8.053156,1.094227,-8.267524,-9.732502,3.076320,4.570003,1.258379,-1.008515,0.448459,-0.658921,-6.022600,-7.433679,-4.290096,0.799554,8.588896,-3.366038,7.353046,-9.832216,-8.827658,-2.186703,-0.918681,8.195766,2.649734,-8.237012,9.410117,1.209419,-1.068563,9.682961,-4.257019,9.323193,-0.077452,-9.533135,5.672488,3.325491,6.388148,9.054566,3.436104,-5.640982,-4.053790,4.244457,3.385912,4.367122,-9.132263,-4.452480,-5.327548,0.159803,3.166302,-5.949407,-1.335101,-3.760971,-6.723983,1.334895,1.007561,-6.832277,-9.842938,1.977602,3.605700,8.952066,1.499294,-1.751690,-3.769687,0.835167,1.407099,-8.287070,3.710846,7.234374,9.109150,-1.624279,-9.221762,-6.572294,-8.234574,1.769123,9.604482,-5.757596,-7.399381,-3.126961,-7.229628,8.273999,9.462808,6.638591,-6.431427,-9.686089,-3.639888,-8.358322,-4.147656,1.177525,2.928609,-7.300266,-8.419797,9.783564,9.078893,3.953651,9.649860,8.067724,-4.425458,-2.302676,1.080529,-6.327592,8.545524,5.195852,-8.954373,-5.882041,5.301288,-6.947256,3.269823,-2.885849,3.516145,-5.777779,-3.651487,7.967594,5.614309,-9.469915,8.703104], dtype = "float64")#candidate|3441|(1056,)|const|float64
call_3439 = relay.TupleGetItem(func_1595_call(relay.reshape(const_3440.astype('float64'), []), relay.reshape(const_3441.astype('float64'), [12, 8, 11]), ), 1)
call_3442 = relay.TupleGetItem(func_1598_call(relay.reshape(const_3440.astype('float64'), []), relay.reshape(const_3441.astype('float64'), [12, 8, 11]), ), 1)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
call_3451 = relay.TupleGetItem(func_69_call(relay.reshape(call_3439.astype('float64'), [3, 13, 5])), 0)
call_3452 = relay.TupleGetItem(func_72_call(relay.reshape(call_3439.astype('float64'), [3, 13, 5])), 0)
uop_3453 = relay.log2(uop_3431.astype('float64')) # shape=(13, 15, 11)
uop_3455 = relay.log2(uop_3433.astype('float64')) # shape=(13, 15, 11)
func_3167_call = mod.get_global_var('func_3167')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3456 = func_3167_call()
call_3457 = func_3167_call()
func_241_call = mod.get_global_var('func_241')
func_243_call = mutated_mod.get_global_var('func_243')
const_3460 = relay.const([-2.221498,-0.174030,-8.429464,8.628453,7.238738,-7.719504,-4.268323,-7.548782,-0.501033,9.525911,-7.659215,9.449756,3.670304,3.295405,-2.615317,1.997978,-6.030139,3.620243,5.235533,5.978383,-3.700377,-5.225017,-8.677847,-0.948352,-7.359378,-1.750016,6.686859,-2.350068,6.707205,-5.566331,-5.642869,-6.023083,2.561625,3.722130,0.355608,6.559009,-1.002379,-2.389142,-3.500053,-9.644777,0.766579,9.035612,-3.647830,2.987705,4.184128,4.870045,3.247716,9.253623,7.112687,6.416756,7.528560,-2.571220,-1.848308,-6.798954,9.324500,5.067140,-6.197056,-9.054160,6.961247,-3.765490,5.428390,-6.380978,3.184437,9.813102,-0.189015,8.184947,7.538330,1.390985,8.756436,-0.142054,-9.212556,1.603343,5.790100,3.706763,8.499921,8.906125,8.375221,2.118897,8.798454,6.317897,6.160079,-4.044712,7.084654,2.626999,7.237208,4.801798,7.079458,-6.800163,-7.635425,7.987003,6.151205,-2.804381,-6.779266,-1.707411,-4.719040,4.043012,-5.540718,-2.122180,-7.766087,-7.690923,-8.826942,5.617011,-1.708963,-3.449918,-0.548073,-2.684421,-4.769392,-9.164143,-8.045642,4.925632,3.118127,0.488669,-8.570358,1.222957,0.447465,-8.516204,6.058583,8.865415,-3.189078,4.283515,-4.234217,-3.661539,-0.086893,2.859240,9.037273,-2.372906,-1.601392,2.155665,0.195247,9.198591,-1.537465,-9.895967,5.110004,-6.139380,2.127025,-4.334211,2.050907,5.922373,-5.391962,3.163475,3.766560,-7.163383,7.672665,-3.165594,-8.743125,1.468638,0.145650,-1.347977,5.955611,-3.756025,-0.227374,-4.940836,-4.816369,-4.426422,9.377623,-3.995854,7.938368,-8.564052,-5.309009,2.216156,-8.773132,-2.059275,7.126697,-6.141311,1.867163,3.642343,-9.248069,4.029582,0.518253,6.910149,3.186824,1.859382,-1.454217,2.516503,-4.293534,8.588240,6.794286,1.311294,-8.024254,-8.117332,-7.354593,-7.887835,2.048612,3.734305,9.248915,7.716842,5.639474,1.259349,-4.902220,-8.458960,2.315685,6.664965,4.935951,8.086225,9.611738,4.902639,-5.773159,-9.044737,-8.573575,-8.824052,-0.880085,-7.358369,4.471174,4.081041,9.050502,-2.783087,1.627518,8.225638,-1.109593,-1.731990,-6.852253,-7.426227,9.685039,2.856770,-8.227907,1.883664,8.113877,-3.660682,8.369535,0.200335,-7.832257,-2.886329,8.449265,-4.220872,-9.292793,7.806041,1.201243,9.921139,-7.412174,-3.707966,7.705106,9.006876,7.296570,8.317594,1.867896,9.078774,-3.916613,6.887653,-2.817438,-4.318792,4.690421,7.745334,1.080971,4.888364,5.188315,-2.552429,-4.181224,-3.423849,-2.985204,-8.573190,-0.837255,7.939843,1.657315,-8.179675,-7.101622,3.983782,4.658947,-3.608964,6.705535,-6.716160,7.784125,1.205509,7.808583,-9.971039,5.447734,0.019481,-6.674793,0.675866,-0.825075,3.577559,-4.927540,-6.317863,-9.882827,-5.995893,-4.358504,-7.530901,7.435525,4.204998,3.337894,-9.049316,9.657597,-4.473934,-2.426320,7.368179,-1.729648,-3.364653,1.745692,-9.843545,3.067087,-0.525680,3.501570,-5.147156,-5.196578,9.523474,0.450403,5.407031,-6.809970,-5.582058,9.993204,3.269353,1.559474,-8.221903,-0.889827,-7.139661,9.325867,8.418396,2.658646,9.299212,-1.760714,-1.269787,0.215132,-3.323107,8.780124,-2.216578,-3.215949,-5.183152,9.141880,8.890817,5.557186,-5.327221,-1.622870,-0.515151,4.441768,4.466312,-5.607282,1.210829,8.003882,4.771083,-7.804904,7.527498,4.554206,-6.494917,-5.900799,-5.035145,0.897530,-9.891988,3.078971,-1.594534,1.362489,-8.285562,8.648138,9.316438,9.330383,4.536434,-2.056392,-4.166008,6.194504,9.893141,-1.824295,6.143070,-1.484161,4.976492,-5.472116,-8.571789,-5.831126,-7.568680,-7.446421,-0.252555,-2.576431,7.482304], dtype = "float64")#candidate|3460|(360,)|const|float64
call_3459 = func_241_call(relay.reshape(const_3460.astype('float64'), [15, 4, 6]))
call_3461 = func_241_call(relay.reshape(const_3460.astype('float64'), [15, 4, 6]))
uop_3462 = relay.sinh(uop_3431.astype('float64')) # shape=(13, 15, 11)
uop_3464 = relay.sinh(uop_3433.astype('float64')) # shape=(13, 15, 11)
output = relay.Tuple([call_3406,var_3407,call_3439,const_3440,const_3441,call_3451,uop_3453,call_3456,call_3459,const_3460,uop_3462,])
output2 = relay.Tuple([call_3408,var_3407,call_3442,const_3440,const_3441,call_3452,uop_3455,call_3457,call_3461,const_3460,uop_3464,])
func_3466 = relay.Function([var_3407,], output)
mod['func_3466'] = func_3466
mod = relay.transform.InferType()(mod)
mutated_mod['func_3466'] = func_3466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3467 = relay.var("var_3467", dtype = "uint8", shape = (400, 1))#candidate|3467|(400, 1)|var|uint8
func_3466_call = mutated_mod.get_global_var('func_3466')
call_3468 = func_3466_call(var_3467)
output = call_3468
func_3469 = relay.Function([var_3467], output)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3167_call = mod.get_global_var('func_3167')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3473 = func_3167_call()
call_3474 = func_3167_call()
func_3167_call = mod.get_global_var('func_3167')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3477 = func_3167_call()
call_3478 = func_3167_call()
var_3481 = relay.var("var_3481", dtype = "uint8", shape = (13, 15, 11))#candidate|3481|(13, 15, 11)|var|uint8
bop_3482 = relay.multiply(call_3477.astype('int16'), relay.reshape(var_3481.astype('int16'), relay.shape_of(call_3477))) # shape=(13, 15, 11)
bop_3485 = relay.multiply(call_3478.astype('int16'), relay.reshape(var_3481.astype('int16'), relay.shape_of(call_3478))) # shape=(13, 15, 11)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_3489 = relay.const([[-5.165176,-3.670849,-6.532856,-2.093504,3.630015,1.220033,-5.566816,9.088347,7.479017,5.854639,-7.972232,-2.913180,6.800168,-8.592300,-1.082722,-1.862903,0.226705,3.583806],[-8.853266,-9.558447,9.241389,9.144788,-3.477830,9.336705,3.572872,-2.053243,7.012381,1.739662,-4.973588,-0.724485,-8.369119,1.725572,-9.844387,-9.251842,8.329460,-4.564844],[-9.051660,-6.733869,-1.166700,-8.359232,-0.683387,1.934182,6.007132,-8.913157,-1.310737,2.020237,-9.693531,-6.531683,6.985140,3.685142,7.658852,7.553718,6.640582,3.753032]], dtype = "float64")#candidate|3489|(3, 18)|const|float64
call_3488 = relay.TupleGetItem(func_1434_call(relay.reshape(const_3489.astype('float64'), [9, 2, 3])), 0)
call_3490 = relay.TupleGetItem(func_1437_call(relay.reshape(const_3489.astype('float64'), [9, 2, 3])), 0)
uop_3509 = relay.sigmoid(call_3488.astype('float32')) # shape=(9, 2, 3)
uop_3511 = relay.sigmoid(call_3490.astype('float32')) # shape=(9, 2, 3)
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3516 = func_3292_call()
call_3517 = func_3292_call()
output = relay.Tuple([call_3473,bop_3482,const_3489,uop_3509,call_3516,])
output2 = relay.Tuple([call_3474,bop_3485,const_3489,uop_3511,call_3517,])
func_3522 = relay.Function([var_3481,], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
var_3523 = relay.var("var_3523", dtype = "uint8", shape = (13, 15, 11))#candidate|3523|(13, 15, 11)|var|uint8
output = func_3522(var_3523)
func_3524 = relay.Function([var_3523], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3532 = relay.TupleGetItem(func_3141_call(), 0)
call_3533 = relay.TupleGetItem(func_3143_call(), 0)
var_3556 = relay.var("var_3556", dtype = "uint8", shape = (13, 15, 11))#candidate|3556|(13, 15, 11)|var|uint8
bop_3557 = relay.bitwise_and(call_3532.astype('uint64'), relay.reshape(var_3556.astype('uint64'), relay.shape_of(call_3532))) # shape=(13, 15, 11)
bop_3560 = relay.bitwise_and(call_3533.astype('uint64'), relay.reshape(var_3556.astype('uint64'), relay.shape_of(call_3533))) # shape=(13, 15, 11)
uop_3563 = relay.acosh(var_3556.astype('float32')) # shape=(13, 15, 11)
output = relay.Tuple([bop_3557,uop_3563,])
output2 = relay.Tuple([bop_3560,uop_3563,])
func_3565 = relay.Function([var_3556,], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
var_3566 = relay.var("var_3566", dtype = "uint8", shape = (13, 15, 11))#candidate|3566|(13, 15, 11)|var|uint8
output = func_3565(var_3566)
func_3567 = relay.Function([var_3566], output)
mutated_mod['func_3567'] = func_3567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3584 = func_3292_call()
call_3585 = func_3292_call()
output = call_3584
output2 = call_3585
func_3592 = relay.Function([], output)
mod['func_3592'] = func_3592
mod = relay.transform.InferType()(mod)
output = func_3592()
func_3593 = relay.Function([], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_3643 = func_3592_call()
call_3644 = func_3592_call()
uop_3648 = relay.asin(call_3643.astype('float32')) # shape=(13, 15, 11)
uop_3650 = relay.asin(call_3644.astype('float32')) # shape=(13, 15, 11)
output = uop_3648
output2 = uop_3650
func_3666 = relay.Function([], output)
mod['func_3666'] = func_3666
mod = relay.transform.InferType()(mod)
output = func_3666()
func_3667 = relay.Function([], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3742 = relay.var("var_3742", dtype = "int64", shape = (7, 1, 1))#candidate|3742|(7, 1, 1)|var|int64
var_3743 = relay.var("var_3743", dtype = "int64", shape = (7, 9, 1))#candidate|3743|(7, 9, 1)|var|int64
bop_3744 = relay.greater_equal(var_3742.astype('bool'), var_3743.astype('bool')) # shape=(7, 9, 1)
func_1897_call = mod.get_global_var('func_1897')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_3800 = relay.var("var_3800", dtype = "float32", shape = (640,))#candidate|3800|(640,)|var|float32
var_3801 = relay.var("var_3801", dtype = "float64", shape = (195,))#candidate|3801|(195,)|var|float64
const_3802 = relay.const([[5,-7,-3,-7,-3,5,9,5,-5,-6,-4,-4,-5,5,-4,-9,8,10,-9,10,7,-9,9,-8,-10,5,-1,2,-9,-4,-7,2,10,-9,-6,-2,-2,1,5,-8,-6,-1,-6,-4,2,-6,10,-6,-9,-9,2,9,-2,-7,-2,4,-2,4,9,-2,4,10,7,4,1,-2,5,-6,4,8,10,1,-8,-1,2,6,1,-10,5,4,-7,8,-8,1],[-10,7,10,4,-2,2,6,10,7,-8,3,-8,-8,4,-1,-9,1,-10,3,-8,-9,-7,-2,4,6,-4,4,1,6,-10,-8,7,7,2,-1,3,5,-5,-8,8,1,-2,4,6,9,-7,9,8,-1,-5,3,2,-9,-6,-6,-10,-6,1,-8,-10,-7,1,2,1,2,-6,6,-4,5,-2,6,-7,4,4,6,-6,4,-8,-1,-2,7,-7,-5,7],[-4,-2,-1,-5,-8,-9,-7,-9,6,-9,-8,-7,8,9,-8,-5,5,3,8,-3,10,-3,8,-10,-9,9,-2,4,4,-3,-8,-5,8,1,7,-2,-7,-6,5,9,-6,3,7,-8,-1,-3,1,-3,5,3,-1,9,-10,-3,2,10,2,-8,3,2,-8,2,-1,6,-3,8,-4,2,-3,-10,8,-6,5,9,-1,1,-6,-7,-10,-2,2,4,8,-1],[-10,-7,2,9,7,-5,-1,-6,-9,-5,-5,-9,7,-4,-9,6,-5,8,-6,5,6,-2,6,3,2,-4,5,6,9,8,5,9,-9,-7,3,8,2,8,9,-5,1,10,7,9,3,5,-3,8,-1,-7,-7,-6,7,8,7,-9,-7,4,2,-9,3,5,-8,10,-7,6,3,4,-5,-10,-8,-1,-5,-8,-8,-5,2,-7,-4,2,3,7,9,10],[6,8,-6,-8,4,1,4,3,8,8,6,-7,-7,8,8,2,5,-7,-1,-5,2,8,-4,3,10,5,-9,-6,-7,-2,2,10,-8,-10,5,-5,-1,-4,-6,8,6,4,6,-2,6,-9,-10,8,7,8,-3,-8,7,-1,8,-9,-3,-10,6,-3,7,-1,-4,-6,6,2,6,6,-3,-4,-8,-5,-9,1,6,6,-9,-2,-7,-3,-2,-4,6,-2],[9,-10,-1,10,-10,3,-9,1,9,1,2,9,-9,-2,5,4,10,-2,6,10,5,2,-6,1,8,1,4,-6,5,7,-2,3,-4,-6,9,6,1,9,5,-5,2,3,-8,-10,-8,2,-8,3,-9,2,-5,3,10,-7,2,6,-8,9,-7,-8,3,-5,4,-5,-9,3,7,3,-8,2,2,3,6,-7,-10,-10,-4,6,-6,-3,7,-10,3,-2],[4,2,-2,8,-8,3,-10,1,-9,-4,-7,10,2,-10,3,-8,6,3,-7,-5,5,-3,2,-1,-10,-8,9,-4,-7,-7,-6,9,9,9,-4,10,-4,-4,-8,7,-7,6,-2,8,5,-2,-4,-1,5,-8,-6,-8,-3,7,7,-9,1,-2,-8,-4,10,1,9,7,-4,2,-3,-10,-3,10,-3,4,-6,8,-1,-6,2,-4,-1,-6,-6,-5,-7,9],[-4,-9,10,2,2,-10,4,-5,-5,-7,2,9,2,-10,1,-8,-10,1,-2,6,10,-10,-3,-1,6,5,1,-7,-10,-1,-8,-5,8,8,6,6,1,-2,-1,-3,3,4,-1,-7,9,1,7,-8,1,-6,10,-5,-10,-5,2,-7,-7,-6,-3,9,-1,9,-6,4,3,-4,-6,5,-8,6,-10,2,5,6,-3,9,-5,3,-9,1,-10,6,6,9],[-4,3,-1,1,-2,-5,-2,-10,-7,2,-1,8,10,5,-5,-1,3,-3,6,2,1,-5,-4,-1,8,-4,8,10,6,-5,10,-2,-9,-9,2,-7,7,-7,-8,1,-4,7,-9,-10,-10,9,-3,5,9,9,5,6,7,-4,-4,1,2,-9,-2,-9,6,-6,-1,10,-7,1,4,-4,9,-4,-5,-10,-2,9,8,8,-5,2,5,4,-1,-2,10,-6],[5,3,-6,6,-4,1,2,5,-4,-3,-10,-1,-4,8,10,-7,3,-3,-5,-6,-6,10,-8,7,-3,-1,9,-6,6,9,9,10,-5,10,4,8,4,-9,-2,-6,-7,10,10,1,1,1,7,9,-4,4,8,9,-10,6,-3,9,-1,7,4,-7,-9,2,-8,10,3,-2,-5,-4,-7,9,3,3,-6,5,-10,4,9,-5,-8,-2,8,1,-5,10],[-5,6,-8,4,-9,5,-9,9,4,8,-1,-4,-4,-4,-10,-3,-5,5,-7,-7,-7,-6,-1,8,-10,-1,5,-2,10,10,-2,7,3,3,2,-6,4,7,6,-3,2,-9,-9,7,-9,-1,9,2,-1,-2,7,-2,-10,8,-4,4,7,2,4,-7,-6,6,6,7,-3,10,5,-10,-1,-2,-1,9,-10,6,-8,-9,-9,10,-4,-5,-4,-6,-7,7],[-9,10,-3,-10,8,9,6,10,6,5,7,-7,-4,-1,1,6,-6,10,5,-4,-5,-9,-4,8,-9,10,-2,-8,-9,-5,8,2,8,-3,1,6,-2,-9,-5,6,10,1,-2,8,7,-2,7,-7,6,-9,-9,7,1,-10,2,10,4,6,10,7,-1,2,-5,-4,1,9,10,3,-1,8,1,-7,-9,10,9,7,-6,-8,8,-3,-7,10,10,9]], dtype = "uint64")#candidate|3802|(12, 84)|const|uint64
var_3803 = relay.var("var_3803", dtype = "uint64", shape = (24, 26))#candidate|3803|(24, 26)|var|uint64
call_3799 = relay.TupleGetItem(func_1897_call(relay.reshape(var_3800.astype('float32'), [4, 16, 10]), relay.reshape(var_3801.astype('float64'), [195,]), relay.reshape(const_3802.astype('uint64'), [1, 1008]), relay.reshape(var_3803.astype('uint64'), [624,]), relay.reshape(var_3800.astype('float32'), [4, 16, 10]), ), 8)
call_3804 = relay.TupleGetItem(func_1904_call(relay.reshape(var_3800.astype('float32'), [4, 16, 10]), relay.reshape(var_3801.astype('float64'), [195,]), relay.reshape(const_3802.astype('uint64'), [1, 1008]), relay.reshape(var_3803.astype('uint64'), [624,]), relay.reshape(var_3800.astype('float32'), [4, 16, 10]), ), 8)
output = relay.Tuple([bop_3744,call_3799,var_3800,var_3801,const_3802,var_3803,])
output2 = relay.Tuple([bop_3744,call_3804,var_3800,var_3801,const_3802,var_3803,])
func_3808 = relay.Function([var_3742,var_3743,var_3800,var_3801,var_3803,], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
var_3809 = relay.var("var_3809", dtype = "int64", shape = (7, 1, 1))#candidate|3809|(7, 1, 1)|var|int64
var_3810 = relay.var("var_3810", dtype = "int64", shape = (7, 9, 1))#candidate|3810|(7, 9, 1)|var|int64
var_3811 = relay.var("var_3811", dtype = "float32", shape = (640,))#candidate|3811|(640,)|var|float32
var_3812 = relay.var("var_3812", dtype = "float64", shape = (195,))#candidate|3812|(195,)|var|float64
var_3813 = relay.var("var_3813", dtype = "uint64", shape = (24, 26))#candidate|3813|(24, 26)|var|uint64
output = func_3808(var_3809,var_3810,var_3811,var_3812,var_3813,)
func_3814 = relay.Function([var_3809,var_3810,var_3811,var_3812,var_3813,], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3922 = func_3292_call()
call_3923 = func_3292_call()
func_2697_call = mod.get_global_var('func_2697')
func_2700_call = mutated_mod.get_global_var('func_2700')
const_3936 = relay.const([-6,6,1,-8,4,-4,-1,-7,-9,3,-8,-3,9,-1,6,9,-8,-3,10,-8,5,-7,-8,-3,9,-3,2,-9,7,-2,-7,2,7,6,7,2,-5,-10,3,10,-9,1,10,4,8,-8,-8,2,-8,-3,-2,8,-5,-10,2,-10,-2,-4,-9,-10,4,-3,10,10,-4,4,-9,3,1,-2,-3,5,5,8,6,2,7,4,1,-7,6,-10,6,-1,-7,1,7,-5,-3,-6,-2,3,-2,-9,9,-7,-7,-2,-2,-9,5,-9,6,-5,-1,-10,-7,-4,-9,3,9,5,-7,-9,1,8,-10,10,-2,-6,6,-6,10,4,-3,7,7,7,2,-4,4,3,-10,-1,-8,7,-3,-8,5,10,9,9,3,1,-2,10,-9,-3,6,3,-8,-9,-3,4,7,5,3,-3,4,4,10,-3,7,-2,-9,-6,-5,-8,9,6,5,-3,9,-7,-1,8,-4,-4,8,-3,-1,2,3,-2,-1,2,2,-6,-3,-4,3,8,3,-8,8,-8,10,4,-1,10,7,-7,7,-1,-6,7,-5,7,-8,8,8,-4,-5,4,5,7,-7,-2,-8,7,8,-3,10,2,7,-6,8,-5,-10,-1,4,8,2,8,-5,-6,-8,5,-3,5,-6,6,3,-7,2,-8,5,10,6,-9,-10,3,6,-7,4,10,5,4,-7,8,10,-6,2,2,3,-10,-8,4,-2,4,2,-5,-10,-4,-1,-6,10,6,9,1,-1,6,3,-5,10,-10,3,-1,6,2,2,8,2,-4,-2,-5,-6,-2,1,-6,7,3,-1,7,-2,5,-6,5,-7,-9,4,1,2,-10,1,4,-2,-1,5,-2,-6,-2,2,-8,-6,7,8,-1,3,5,-9,-3,-10,-6,2,-2,5,-9,-3,5,4,1,-1,-6,6,-8,4,8,6,9,-9,6,-6,10,-4,9,8,3,4,4,3,-7,-1,-1,6,-5,-2,3,-8,7,10,1,6,7,-3,2,-1,3,1,-1,3,-3,8,2,9,-9,5,-8,4,-3,-6,-5,1,1,3,10,-9,-8,1,3,9,-10,2,7,3,6,-4,-6,-10,-8,10,-8,3,4,-8,-5,-10,1,-4,7,6,-7,-4,-5,2,7,3,9,-1,-1,1,-6,-2,-3,3,6,-3,10,-7,-4,-10,9,6,9,-2,-8,8,-5,9,9,-10,-3,-9,2,10,3,7,-5,-1,-2,-5,-9,4,-5,4,5,10,-6,-3,-5,4,-2,3,6,2,-6,-8,-3,-8,5,4,-5,10,-5,10,5,-9,7,-6,5,-2,-6,7,5,8,9,-2,6,6,6,-1,-1,9,4,2,-3,2,5,1,-7,1,-8,-10,6,8,-3,-4,1,2,-9,7,-9,1,8,-5,10,-9,-1,-5,-5,9,-3,-2,-6,-2,-1,7,5,7,2,8,-7,2,-6,-5,1,-8,-8,-9,-7,1,9,9,8,9,7,3,4,4,-4,10,-6,10,-1,10,3,5,1,-7,-1,10,6,3,-9,-10,7,-8,8,-9,-10,-6,-2,4,6,-2,-10,4,4,-5,-6,5,3,-8,-3,10,8,6,-9,-3,2,4,8,9,9,6,-7,1,-6,2,10,3,-10,-7,-7,-5,-8,4,-9,1,-5,3,9,3,-7,-3,7,-2,-4,7,1,-2,-3,6,-1,9,-3,-9,8,-6,-7,9,-6,2,-2,-1,2,-4,2,-6,5,9,10,10,10,-5,6,2,7,-10,-4,3,-4,1,-7,9,6,1,7,-6,-7,5,-6,-5,-2,3,-8,2,-3,10,-3,1,-10,-7,-4,-6,-5,6,10,4,10,10,4,-2,6,-7,2,2,8,10,4,3,-7,-3,-2,-10,6,10,1,-9,3,-10,1,8,-1,3,4,-7,7,-9,8,-3,9,-6,-7,-1,-10,9,3,3,6,9,4,-1,7,1,-7,-2,2,-9,5,-1,-1,6,-8,9,-7,-1,6,1,2,-1,-8,7,2,-9,6,-2,8,2,-9,9,-9,4,-2,9,6,-3,2,2,-6,9,-1,-10,10,-7,10,4,6,-5,2,-4,-1,-5,-9,-6,-10,-8,7,1,9,-8,-2,8,-10,-6,-6,-5,7,1,6,10,4,6,5,1,-3,-3,-9,3,-4,4,-1,-9,8,6,-7,10,6,3,3,-5,2,3,3,-5,-7,8,-7,-8,-5,8,1,-3,4,-8,1,5,-5,7,4,-4,-10,-1,-7,3,-5,4,-9,-3,-3,1,-6,7,5,-9,7,-10,-4,-5,1,-5,-9,2,-5,4,-8,4,-1,5,-7,5,-8,3,9,4,-6,-6,-7,-6,3,-2,4,5,9,3,6,1,6,-5,2,5,-10,4,7,-2,9,-1,2,-10,8,6,-5,6,-1,-6,-4,-10,2,-4,3,1,-1,-6,-2,3,-4,-2,8,-10,-2,-1,-9,-1,-4,-2,-10,-2,9,4,-6,9,-8,7,-2,-6,-7,-1,7,-9,-6,9,-6,-8,8,-6,1,-4,-10,-6,10,-7,8,-5,-1,-5,5,-4,6,8,4,-8,-3,5,-3,-4,-4,2,-10,-6,-9,-7,-4,7,-4,3,3,4,-6,-7,-3,-2,5,-8,10,5,4,4,-4,-9,-10,-6,-6,8,9,-10,10,9,7,10,3,7,-9,5,-3,-2,7,-5,8,4,1,-2,-10,-6,-10,4,-2,-1,3,-4,10,-1,-6,9,-2,-5,-1,-5,10,7,8,5,4,2,-2,6,-4,9,3,-6,-3,9,-8,4,-6,9,-4,-5,-8,8,3,10,-8,7,-8,-10,4,6,6,9,3,-5,2,-5,-6,10,6,-7,10,-8,9,-9,7,-6,-5,4,-4,-5,8,-7,-5,-4,-9,-5,-6,-7,-9,7,-4,-9,-7,7,2,8,-3,6,1,9,2,-1,7,3,-6,3,3,-1,5,-2,1,6,-4,-4,-4,-7,8,-5,7,10,8,5,5,4,3,6,-7,-10,7,-7,6,5,1,-9,-8,4,-2,9,-5,9,8,-4,8,-5,-7,-5,-6,8,-10,8,6,6,-10,-7,-8,3,-2,1,10,-4,-8,-1,-9,4,4,9,-5,-9,-2,10,-3,-5,9,-4,4,7,4,8,4,5,5,9,-9,-7,-7,10,-9,4,5,-10,-5,-10,-2,4,-2,4,-3,1,3,4,2,-1,-10,-2,2,-3,6,8,4,2,3,7,-2,7,-4,-5,-4,1,3,9,3,4,7,-7,-6,-9,8,-2,-6,-4,-9,-9,9,-8,-3,-8,1,8,-6,1,6,10,7,2,2,-6,-9,7,-6,8,4,-8,10,4,-2,5,-6,2,8,9,-2,-2,-1,-8,-3,-8,4,3,1,9,2,-1,-10,2,-9,-9,-5,3,-9,-2,-9,1,-4,9,-2,1,4,-2,9,4,4,-8,-4,4,-1,-8,-5,-6,-3,-8,-5,9,-3,4,5,-9,-1,8,9,9,-6,-2,5,-10,5,5,9,9,-5,5,1,8,2,-7,6,10,-2,5,-2,-8,-4,-5,7,4,-9,1,-2,3,-5,-4,-4,-4,-9,-4,3,8,-4,-10,-8,-2,-1,6,2,-7,10,9,-10,-2,2,-1,-9,6,-1,6,-9,6,-1,-3,-4,9,6,1,3,-4,-3,-1,4,-8,4,-4,-2,2,5,-6,8,6,-3,9,-2,10,7,-8,1,-6,9,7,-2,-5,-6,7,-6,9,2,5,10,7,-9,8,2,6,-4,5,1,3,10,-1,-5,-6,-8,-10,8,-6,4,-8,6,8,-6,5,2,3,10,-8,6,-3,-5,-3,-2,-10,2,3,-4,9,-5,-5,2,8,-6,8,-10,-4,-4,10,5,2,-9,-7,-5,3,9,-6,-8,5,-3,-5,4,10,8,5,1,1,2,5,4,-9,5,-6,-2,-8,3,-9,-3,-8,10,-4,-3,-3,5,-4,3,2,9,-5,-10,-3,8,-2,1,-4,5,4,-7,5,-2,-10,2,-6,-9,-9,8,2,6,-9,-7,-9,-2,-2,-7,-10,-6,5,2,7,4,2,8,10,-1,-10,-3,-1,-2,-4,8,10,-4,-1,10,-10,4,8,8,-5,-6,-7,5,-4,1,-10,3,4,-8,-6,3,-5,-9,-8,-1,-6,-1,4,1,5,-5,10,6,7,-8,-2,-8,7,-8,-4,7,5,-3,4,-8,-5,-5,-3,10,4,-1,-1,1,-8,-1,9,-4,-8,3,2,-2,-6,-3,-9,-7,5,7,-8,-3,9,-1,-4,3,4,5,-7,3,5,2,-3,6,8,-3,4,-5,2,1,2,7,10,-10,-10,-2,-2,-8,5,2,-9,-2,-3,-8,-2,10,-3,-10,8,9,4,2,8,-1,-5,-6,10,-9,-4,5,-6,-2,1,-1,1,-8,3,-2,-3,4,8,4,8,10,-2,8,9,6,-1,2,9,8,1,5,-5,-3,10,10,3,-10,4,-3,-9,4,6,-3,-7,6,-2,-3,9,9,-3,9,-6,1,8,-2,10,6,-3,10,-9,7,7,-8,6,-8,-4,-5,4,10,-7,-9,-10,5,-4,-3,-1,-6,-10,7,-4,7,9,-10,-7,5,5,-4,-8,10,4,-9,-4,5,1,-2,-4,5,-10,-6,-7,2,6,-9,-5,-8,-2,5,-2,-10,2,-10,-10,10,3,-6,9,-4,-3,9,4,4,4,2,10,1,-3,-8,7,2,4,-10,-5,5,-1,-4,2,1,-9,-2,-4,-3,-3,9,-9,-1,10,-5,8,-10,4,2,-4,-2,5,-4,-6,-3,7,10,-6,8,-2,8,3,-9,-4,3,-5,4,8,6,-6,4,4,9,4,-3,-10,-8,-10,2,-9,3,9,-3,-5,2,1,-5,7,-4,-1,9,7,6,4,1,-2,-9,-2,-9,-3,-8,-6,-9,7,6,-10,3,10,-7,5,10,-4,10,3,-5,-10,-1,8,-9,-5,6,10,5,9,6,9,3,7,1,3,-6,-3,-7,-1,9,-1,-1,4,-3,-7,-7,5,2,-3,3,1,9,10,-6,-4,7,9,8,-4,-8,-8,-7,-7,8,-2,-6,-2,-8,10,-3,8,-10,8,4,-9,-4,7,1,-2,4,9,10,2,4,-1,-6,7,-10,6,-8,6,3,5,7,-4,-1,8,6,9,-4,7,3,-10,6,7,-2,-5,-6,8,8,-2,-6,-10,2,10,-2,-10,8,8,-7,-9,-7,3,-5,-7,-4,1,1,10,-3,-1,-9,1,-2,-3,-3,-9,9,8,-2,8,-3,-6,2,-8,-6,1,-4,3,1,-5,10,-9,-6,4,9,6,3,-8,7,2,-7,-1,5,-4,-1,3,5,-4,-6,-2,2,-10,-1,-10,4,-4,-4,9,8,-6,-6,-2,-10,5,5,-4,5,-2,2,-5,-3,-5,-3,-6,2,9,10,3,8,-5,-5,-1,-3,-9,6,-9,-4,-6,3,-5,6,4,-7,-8,-5,1,-2,-2,-5,9,-6,10,7,4,-10,6,5,3,-9,9,4,3,2,2,-8,-9,-3,4,-5,-9,-7,4,-7,6,-10,9,6,-1,-9,6,-7,-4,3,10,6,6,6,-7,-9,-8,-1,2,-1,8,7,9,-10,-2,-1,-3,-4,10,1,5,-2,8,2,-1,-2,-4,4,10,-8,-6,-7,-6,10,-2,-3,2,10,1,9,-8,2,9,-9,7,-3,6,4,10,-8,-6,9,-8,-7,4,10,8,-6,-7,5,-10,-9,-10,-10,8,5,3,-3,5,-2,7,-1,-6,-1,1,9,6,-10,10,9,2,-1,9,5,-5,5,1,-6,-2,-9,4,-4,5,-9,6,2,-3,2,-8,-6,-8,-4,6,5,10,-2,-2,-7,2,2,7,7,-7,-1,-10,8,9,-6,-4,6,-4,10,-5,-3,-4,-9,8,-10,9,-10,2,8,1,-8,-4,1,-3,8,-8,8,-5,-3,-3,8,8,-2,7,2,3,-5,6,-8,6,8,-6,-8,-1,4,5,7,-1,4,8,-7,7,9,7,4,-1,9,-7,8,9,-4,-5,10,10,5,-1,9,4,3,7,-7,10,-6,3,4,8,-8,7,-1,1,6,-10,-4,-5,8,-6,10,10,-10,-10,7,-10,-2,-3,5,1,-8,6,-7,-8,-3,-1,10,-9,-6,-5,-8,8,-4,-3,4,2,-6,3,1,2,8,9,5,-8,-8,4,10,5,10,4,-3,4,-5,7,-10,10,-2,-4,6,8,7,-1,1,-2,6,-4,2,-2,-7,-5,-8,5,-5,-5,-2,-4,-2,-5,-10,5,-1,-7,-9,4,-6,2,-3,1,5,8,8,4,6,4,-4,-4,-10,-2,7,-2,2,-8,1,4,7,3,3,-7,7,-8,4,10,2,10,7,-6,-8,-5,-4,-4,10], dtype = "int32")#candidate|3936|(2400,)|const|int32
call_3935 = relay.TupleGetItem(func_2697_call(relay.reshape(const_3936.astype('int32'), [16, 15, 10])), 1)
call_3937 = relay.TupleGetItem(func_2700_call(relay.reshape(const_3936.astype('int32'), [16, 15, 10])), 1)
var_3951 = relay.var("var_3951", dtype = "bool", shape = (13, 15, 11))#candidate|3951|(13, 15, 11)|var|bool
bop_3952 = relay.minimum(call_3922.astype('uint8'), relay.reshape(var_3951.astype('uint8'), relay.shape_of(call_3922))) # shape=(13, 15, 11)
bop_3955 = relay.minimum(call_3923.astype('uint8'), relay.reshape(var_3951.astype('uint8'), relay.shape_of(call_3923))) # shape=(13, 15, 11)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3965 = func_3666_call()
call_3966 = func_3666_call()
var_3967 = relay.var("var_3967", dtype = "bool", shape = (13, 15, 11))#candidate|3967|(13, 15, 11)|var|bool
bop_3968 = relay.divide(call_3922.astype('float32'), relay.reshape(var_3967.astype('float32'), relay.shape_of(call_3922))) # shape=(13, 15, 11)
bop_3971 = relay.divide(call_3923.astype('float32'), relay.reshape(var_3967.astype('float32'), relay.shape_of(call_3923))) # shape=(13, 15, 11)
uop_3975 = relay.acosh(const_3936.astype('float64')) # shape=(2400,)
output = relay.Tuple([call_3935,bop_3952,call_3965,bop_3968,uop_3975,])
output2 = relay.Tuple([call_3937,bop_3955,call_3966,bop_3971,uop_3975,])
func_3981 = relay.Function([var_3951,var_3967,], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
var_3983 = relay.var("var_3983", dtype = "bool", shape = (13, 15, 11))#candidate|3983|(13, 15, 11)|var|bool
var_3984 = relay.var("var_3984", dtype = "bool", shape = (13, 15, 11))#candidate|3984|(13, 15, 11)|var|bool
call_3982 = func_3981_call(var_3983,var_3984,)
output = call_3982
func_3985 = relay.Function([var_3983,var_3984,], output)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4015 = func_3592_call()
call_4016 = func_3592_call()
output = call_4015
output2 = call_4016
func_4019 = relay.Function([], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
output = func_4019()
func_4020 = relay.Function([], output)
mutated_mod['func_4020'] = func_4020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_4021 = relay.TupleGetItem(func_3141_call(), 0)
call_4022 = relay.TupleGetItem(func_3143_call(), 0)
func_1595_call = mod.get_global_var('func_1595')
func_1598_call = mutated_mod.get_global_var('func_1598')
var_4040 = relay.var("var_4040", dtype = "float64", shape = ())#candidate|4040|()|var|float64
var_4041 = relay.var("var_4041", dtype = "float64", shape = (1056,))#candidate|4041|(1056,)|var|float64
call_4039 = relay.TupleGetItem(func_1595_call(relay.reshape(var_4040.astype('float64'), []), relay.reshape(var_4041.astype('float64'), [12, 8, 11]), ), 1)
call_4042 = relay.TupleGetItem(func_1598_call(relay.reshape(var_4040.astype('float64'), []), relay.reshape(var_4041.astype('float64'), [12, 8, 11]), ), 1)
uop_4053 = relay.rsqrt(var_4041.astype('float32')) # shape=(1056,)
bop_4061 = relay.logical_and(uop_4053.astype('bool'), var_4040.astype('bool')) # shape=(1056,)
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_4076 = relay.const([[1,2,2,9,-10,-3,9]], dtype = "int64")#candidate|4076|(1, 7)|const|int64
var_4077 = relay.var("var_4077", dtype = "int64", shape = (63,))#candidate|4077|(63,)|var|int64
const_4078 = relay.const([[6.157268,7.031775,-9.727341,6.800614],[-0.916004,1.156025,-1.781321,9.533094],[3.439291,-6.868530,1.046066,1.914469],[8.860776,1.384851,-6.360512,4.105159],[8.266589,-1.873561,-4.638097,7.122355],[0.317991,6.408621,6.650481,-3.181055],[3.810402,-8.125889,4.439043,9.334543],[-1.024036,2.142828,-7.332857,-8.855112],[1.583305,-7.856185,5.000489,-3.635747],[-3.227477,-9.463513,-9.223220,-8.983859],[-7.531480,-6.370535,-0.827812,-0.879944],[7.775263,9.947845,-9.232267,4.339467],[-0.606604,5.604145,6.804527,-1.751718],[-4.631632,0.553706,-0.546905,-1.634560],[-3.386791,-7.011542,-2.501366,-3.508604],[-7.436052,-7.824025,1.955283,-6.047461],[5.054265,0.352653,0.323496,-4.023264],[1.485674,5.824084,-5.459011,-4.878607],[-2.928053,7.802475,7.067594,-4.163572],[-2.724721,-0.953085,-1.396201,3.828051],[6.171807,-3.327328,9.005839,-9.802730],[5.761399,-1.366563,7.174098,-7.163838],[0.566606,1.664936,1.253831,3.539325],[-1.921908,-5.348682,-7.739347,-2.770432],[-4.328934,3.435033,4.713989,-0.865246],[3.729987,-8.462879,0.665610,-7.865676],[7.908257,6.062962,-6.616874,-6.700253],[4.826651,8.802022,-7.116578,4.170680],[2.678930,-6.710671,-5.095728,4.122259],[8.984033,-3.329959,-1.113765,-3.020537],[-2.466594,3.600317,-6.521141,3.992310],[-8.032438,3.215037,-6.446159,2.779005],[9.552544,1.881480,9.371774,1.195893],[-5.862870,1.117345,7.369352,-6.843017],[-7.851127,-0.241255,3.128662,-0.895788],[-9.018598,7.028280,-0.478193,-1.140501],[-4.613930,6.727018,-1.688026,4.089216],[-6.731533,-8.127056,-4.542962,-6.728306],[-7.440261,7.973023,-1.246170,5.137082],[4.788040,-4.629251,0.465678,-3.394638],[-3.817385,3.245237,-8.752347,3.100380],[-7.315644,-0.971955,5.106375,0.859626],[7.432303,1.489658,-3.073826,6.510601],[0.100231,7.459001,-7.968579,2.728443],[7.409299,-7.038405,5.619299,-1.702227],[8.337012,-1.663133,0.832976,-3.082034],[-1.092281,5.677236,-7.904513,-2.948380],[-2.345473,-5.696072,9.618497,2.224251],[9.051192,7.737998,9.308229,-0.159367],[-1.135081,9.148522,-6.782057,8.655201],[-3.583577,3.305554,9.477237,-4.408370],[2.143352,-2.686069,-0.220328,9.549654],[1.591593,-9.388518,-1.550463,9.832139],[1.023792,4.477939,-8.728417,-2.493054],[8.458913,0.126715,-4.373271,-2.295801],[1.637825,-1.577702,-4.102195,1.468862],[-8.882454,-0.162793,-3.220334,-6.780942],[6.729363,0.656779,-7.122370,-9.939526],[9.871841,-1.141829,6.940144,6.482915],[5.482747,7.411968,4.178841,-0.546894],[-8.928556,-7.692988,-3.298013,3.578193],[-2.814392,-6.507075,-2.602659,-4.814274],[-9.188061,9.728508,1.535421,-3.933470],[2.801213,-8.610157,-2.367305,-3.516308],[-9.402863,3.108500,1.349359,-1.539755],[3.304666,-4.598608,6.755783,6.777946],[4.385487,7.625666,9.512313,-9.075099],[5.714880,0.069217,3.539022,9.313698],[6.359962,-5.712880,0.932496,-7.790413],[4.761514,-4.027568,-8.688256,0.197435],[1.072562,-3.071616,-9.187133,6.425187],[-7.423873,-9.654288,-5.134482,4.277952],[-2.519079,0.899505,-6.306339,5.862575],[-1.738053,-1.442261,5.162828,1.009291],[-2.223396,-7.458780,-5.511353,9.916655],[-2.819851,-0.137276,7.071883,-4.398510],[7.551864,5.396736,-1.165376,-8.853262],[-8.812795,6.152120,-8.101802,-6.173758],[-3.052479,3.345644,-5.327415,3.360428],[-0.612520,-6.895058,6.815702,-2.410974],[-8.167916,-0.132902,-4.899888,6.807046],[6.935463,-1.571713,7.492600,5.325350],[4.189666,-2.974011,2.874355,8.388308],[9.091375,9.266268,-7.873724,-8.344212],[9.612171,1.818321,1.696172,-0.677651],[4.267414,-2.679253,-6.759256,3.344455],[-0.336094,4.468836,2.572630,-4.358139],[-4.479455,-7.189603,4.980784,7.471478],[3.173606,-7.120984,-4.281945,-1.404118],[5.000517,-0.673698,-8.004217,-0.318622],[-2.489120,-7.164468,-7.990962,-5.339398],[-5.762041,7.360888,9.433851,-8.866920],[-8.944427,5.453321,9.202262,-3.608478],[-9.730181,-5.661998,-8.211145,-0.942258],[4.620529,7.008062,3.238675,-1.174710],[-0.292715,7.729395,3.617202,-9.330001],[-0.214775,-1.120186,6.254620,-9.986947],[2.182742,-1.394676,5.227159,-2.379473],[5.481947,-4.739554,-1.675114,-2.123553],[6.754276,-9.725021,6.976679,-9.704147],[9.221969,-5.458455,0.524065,-7.312147],[5.907977,7.189121,7.871983,2.066971],[0.682418,9.667029,4.117078,-1.490000],[8.746756,7.815054,1.381608,-5.302571],[-7.943377,-5.950503,-3.034388,-7.081733],[5.667633,-9.866885,-2.014039,-6.598510],[-2.630785,3.306868,4.113628,-8.046008],[-4.909679,-7.660666,9.864980,-5.667364],[0.789746,5.993773,-9.240568,4.254937],[7.659454,-1.971861,-4.051784,7.244387],[6.835326,-9.012165,-7.920472,3.067051],[-7.316767,8.197680,5.727028,5.065328],[-2.167433,-7.934603,-2.767429,-9.067159],[2.041588,2.404535,4.214430,-9.791625],[7.177395,-1.064995,0.710672,1.441241],[9.086894,7.983469,-1.341701,0.891136],[-7.221103,7.224620,8.088394,-6.616465],[6.090783,-8.636346,1.269910,9.524147],[2.849560,-8.228811,5.395965,-4.599994],[-2.661159,8.628307,-3.684162,4.162406],[-6.702935,-0.329985,9.645676,1.368352],[-2.776387,8.079537,-5.058180,2.418692],[-9.642667,9.619567,8.274328,-9.521794],[4.168086,-3.100840,-4.632725,-4.174130],[0.145530,2.149248,-8.864347,7.936958],[-3.085352,-3.697222,4.297203,3.479603],[2.924738,1.591923,-8.934585,0.704229],[-7.883124,-0.595916,5.617342,6.028065],[8.749933,8.007838,8.659755,-7.181742],[-5.944643,4.495319,-0.498485,1.307190],[9.415574,-1.043356,0.005916,4.624411],[-1.087997,-5.597676,2.702929,-8.546084],[-4.459553,-9.965413,-8.025248,-8.209501],[4.495257,-7.085364,-5.308287,8.338714],[-2.439927,9.709213,4.761918,6.351358],[-4.792143,-0.583913,-1.129688,-7.415105],[-9.353954,-8.707575,-2.096438,6.633522],[-0.529840,4.913296,-1.584690,-1.679536],[3.386688,-6.292524,5.933341,-7.311214],[9.569946,4.943460,8.452780,5.369599],[-5.731751,-7.124383,-7.635753,-6.899028],[2.446316,3.912850,-0.523996,-6.587206],[4.520431,2.065360,5.704517,3.083865],[-3.181151,-7.943415,-8.789973,0.017224],[0.487158,2.473476,-4.525891,8.111535],[-9.214466,2.635736,-2.340801,-9.908669],[-9.678898,-5.968045,9.688709,-9.194008],[-3.445166,7.746643,-7.198669,0.191174],[-7.185294,5.179448,-2.349206,-9.379009],[1.676799,-4.273379,4.402253,-5.941244],[-6.066967,2.985732,-8.780803,3.690288],[-4.625212,5.491122,9.050419,3.472876],[-3.197181,-3.618741,4.707858,1.185371],[-8.796976,-9.529790,-8.259229,1.369968],[-3.051781,-1.155228,2.771278,1.445222],[-1.618454,-0.789941,-3.750112,2.568856],[5.779818,4.774079,-7.232617,7.333049],[-7.302913,-6.085420,-9.088410,5.861805],[9.966262,0.511356,4.324807,-3.574984],[-0.959915,-6.225114,-9.149140,3.786343]], dtype = "float32")#candidate|4078|(160, 4)|const|float32
var_4079 = relay.var("var_4079", dtype = "uint64", shape = (624,))#candidate|4079|(624,)|var|uint64
call_4075 = relay.TupleGetItem(func_3808_call(relay.reshape(const_4076.astype('int64'), [7, 1, 1]), relay.reshape(var_4077.astype('int64'), [7, 9, 1]), relay.reshape(const_4078.astype('float32'), [640,]), relay.reshape(call_4039.astype('float64'), [195,]), relay.reshape(var_4079.astype('uint64'), [24, 26]), ), 3)
call_4080 = relay.TupleGetItem(func_3814_call(relay.reshape(const_4076.astype('int64'), [7, 1, 1]), relay.reshape(var_4077.astype('int64'), [7, 9, 1]), relay.reshape(const_4078.astype('float32'), [640,]), relay.reshape(call_4039.astype('float64'), [195,]), relay.reshape(var_4079.astype('uint64'), [24, 26]), ), 3)
uop_4092 = relay.acosh(var_4041.astype('float32')) # shape=(1056,)
func_1168_call = mod.get_global_var('func_1168')
func_1171_call = mutated_mod.get_global_var('func_1171')
const_4111 = relay.const([[3,7,-6,2,8,6,-9,5,-4,2,5,1,-7,4]], dtype = "uint8")#candidate|4111|(1, 14)|const|uint8
var_4112 = relay.var("var_4112", dtype = "uint8", shape = (112,))#candidate|4112|(112,)|var|uint8
call_4110 = relay.TupleGetItem(func_1168_call(relay.reshape(const_4111.astype('uint8'), [1, 7, 2]), relay.reshape(var_4112.astype('uint8'), [8, 7, 2]), ), 1)
call_4113 = relay.TupleGetItem(func_1171_call(relay.reshape(const_4111.astype('uint8'), [1, 7, 2]), relay.reshape(var_4112.astype('uint8'), [8, 7, 2]), ), 1)
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
call_4119 = relay.TupleGetItem(func_3808_call(relay.reshape(const_4076.astype('int64'), [7, 1, 1]), relay.reshape(var_4077.astype('int64'), [7, 9, 1]), relay.reshape(const_4078.astype('float32'), [640,]), relay.reshape(call_4039.astype('float64'), [195,]), relay.reshape(var_4079.astype('uint64'), [24, 26]), ), 3)
call_4120 = relay.TupleGetItem(func_3814_call(relay.reshape(const_4076.astype('int64'), [7, 1, 1]), relay.reshape(var_4077.astype('int64'), [7, 9, 1]), relay.reshape(const_4078.astype('float32'), [640,]), relay.reshape(call_4039.astype('float64'), [195,]), relay.reshape(var_4079.astype('uint64'), [24, 26]), ), 3)
bop_4123 = relay.subtract(bop_4061.astype('int16'), relay.reshape(var_4041.astype('int16'), relay.shape_of(bop_4061))) # shape=(1056,)
func_1897_call = mod.get_global_var('func_1897')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_4127 = relay.var("var_4127", dtype = "uint64", shape = (1008,))#candidate|4127|(1008,)|var|uint64
call_4126 = relay.TupleGetItem(func_1897_call(relay.reshape(const_4078.astype('float32'), [4, 16, 10]), relay.reshape(call_4075.astype('float64'), [195,]), relay.reshape(var_4127.astype('uint64'), [1, 1008]), relay.reshape(var_4079.astype('uint64'), [624,]), relay.reshape(const_4078.astype('float32'), [4, 16, 10]), ), 9)
call_4128 = relay.TupleGetItem(func_1904_call(relay.reshape(const_4078.astype('float32'), [4, 16, 10]), relay.reshape(call_4075.astype('float64'), [195,]), relay.reshape(var_4127.astype('uint64'), [1, 1008]), relay.reshape(var_4079.astype('uint64'), [624,]), relay.reshape(const_4078.astype('float32'), [4, 16, 10]), ), 9)
output = relay.Tuple([call_4021,call_4039,call_4075,const_4076,var_4077,const_4078,var_4079,uop_4092,call_4110,const_4111,var_4112,call_4119,bop_4123,call_4126,var_4127,])
output2 = relay.Tuple([call_4022,call_4042,call_4080,const_4076,var_4077,const_4078,var_4079,uop_4092,call_4113,const_4111,var_4112,call_4120,bop_4123,call_4128,var_4127,])
func_4139 = relay.Function([var_4040,var_4041,var_4077,var_4079,var_4112,var_4127,], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mutated_mod.get_global_var('func_4139')
var_4141 = relay.var("var_4141", dtype = "float64", shape = ())#candidate|4141|()|var|float64
var_4142 = relay.var("var_4142", dtype = "float64", shape = (1056,))#candidate|4142|(1056,)|var|float64
var_4143 = relay.var("var_4143", dtype = "int64", shape = (63,))#candidate|4143|(63,)|var|int64
var_4144 = relay.var("var_4144", dtype = "uint64", shape = (624,))#candidate|4144|(624,)|var|uint64
var_4145 = relay.var("var_4145", dtype = "uint8", shape = (112,))#candidate|4145|(112,)|var|uint8
var_4146 = relay.var("var_4146", dtype = "uint64", shape = (1008,))#candidate|4146|(1008,)|var|uint64
call_4140 = func_4139_call(var_4141,var_4142,var_4143,var_4144,var_4145,var_4146,)
output = call_4140
func_4147 = relay.Function([var_4141,var_4142,var_4143,var_4144,var_4145,var_4146,], output)
mutated_mod['func_4147'] = func_4147
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4185 = relay.const([[[-8.898302,-5.982036,1.139546,-1.075597,4.596960,5.589088,-6.678442,9.509880],[-2.829511,-6.439037,-3.766255,-4.431003,-9.200485,-2.859173,-0.845149,-1.191303],[3.868757,-4.656278,-3.694391,-2.203426,3.599416,7.159932,8.402826,-2.480825],[-7.353432,-9.753988,-5.783789,-6.165830,1.287309,4.456144,-0.371300,-2.001464]],[[-9.686131,-8.993688,8.701691,7.305976,-2.441480,-1.541874,6.362052,7.639742],[7.925035,-2.697962,-7.690921,-8.957783,-2.835467,1.502358,-1.448218,-0.429447],[9.861842,4.795221,7.066903,3.645859,4.713516,6.272563,-9.690266,-2.011124],[-9.448842,9.129997,7.627611,-3.321814,-5.673688,-8.310197,1.010310,4.937803]],[[1.411171,0.965193,5.835152,-9.511607,-7.281416,4.789019,-0.342519,6.224885],[8.791353,8.374847,-5.338508,-7.139471,-5.373581,0.297112,2.602114,-7.681877],[2.418353,1.400996,-5.546447,4.898337,-6.300365,5.692927,-7.790326,4.079095],[-8.817243,-7.852669,9.370855,3.747363,9.292346,7.623894,9.905055,4.457001]],[[-8.965736,-5.405832,-5.176692,8.221514,-9.363482,6.595266,6.185125,-5.599767],[-8.529114,8.496439,8.914642,8.488931,5.582260,0.468653,-1.977497,-8.168838],[-3.213004,7.311297,-5.739336,0.465058,5.472655,-4.886462,0.366344,-6.512983],[2.651781,7.186491,-8.544921,-7.260998,-2.037540,6.177123,-1.886278,7.925768]],[[-1.467348,-3.332856,6.049583,3.879283,-5.217022,-7.709357,0.745825,4.706244],[-4.517738,2.289796,3.262038,-3.047311,-2.973841,-5.869601,9.961723,0.240878],[-3.559961,3.033565,9.496545,3.541688,-3.081812,2.705276,-9.115633,-8.041766],[-8.558779,-8.944179,2.278587,7.982298,-8.989039,5.256322,3.407299,9.382403]],[[-8.917483,9.830992,2.868463,7.501329,-1.345210,3.275284,-7.205461,8.398084],[-4.451797,-7.815691,7.571692,1.429289,-2.344770,1.482433,4.747040,4.252690],[7.730138,2.560107,2.443745,-8.548532,0.220587,3.899306,-2.050175,-9.409532],[-0.836218,-1.563158,-5.780408,5.391049,-8.048239,-9.579259,2.511246,0.040107]],[[3.917943,4.916754,-9.184364,-8.407294,-1.740938,1.859897,1.787080,1.715640],[-3.823817,8.953507,1.824293,3.786891,0.889077,3.825703,-6.627966,-3.619179],[4.779098,-0.944094,5.835475,5.138787,-4.278682,-1.578237,3.301826,8.258307],[-1.884906,-0.190066,9.036854,9.878851,-9.314636,2.574239,-9.206166,-1.582501]],[[-4.297609,4.133177,1.654287,9.088654,7.690461,9.248184,9.794061,-9.092501],[1.895710,3.063158,8.780121,-7.426777,3.170629,-5.643056,7.851613,0.229829],[1.305045,0.160635,6.393310,2.684282,5.561229,7.835167,5.525466,-3.731320],[4.451764,-6.339212,-9.238916,-4.345873,-5.164748,7.902999,7.782528,9.988327]],[[7.135972,0.593338,0.358120,2.308137,-1.231532,6.263921,1.632843,-1.490573],[4.556423,8.847087,2.738702,3.269884,-6.987603,3.904645,2.023600,-0.206233],[-8.113552,-2.962165,-4.201557,-7.884758,-7.981786,3.639010,8.056434,-6.358811],[-5.337558,-7.183247,2.806497,0.374395,3.326589,5.126627,-1.826952,6.739834]],[[-3.040979,-2.197550,-6.290064,2.285277,5.800361,-6.108008,-5.884385,8.331536],[-1.785443,6.228295,-6.631140,3.124929,0.211467,-1.920453,-5.287720,-8.674682],[0.155195,-4.569754,7.868736,0.756741,-0.802439,3.334242,-1.925417,1.986302],[2.382617,1.207076,2.168001,4.076910,4.974281,-0.842086,3.259378,-5.930995]],[[-2.110424,-9.546772,-3.714770,-3.440407,9.134854,-9.969372,-5.968585,-4.096573],[-3.400088,3.629404,-8.823763,-4.067050,7.398450,-1.961545,-5.901948,6.266411],[1.103698,-7.258715,1.301130,-0.732422,4.333048,7.169091,-5.956650,5.152076],[6.391049,-8.829018,6.253790,4.533026,-4.672193,1.698517,1.223948,5.056995]]], dtype = "float32")#candidate|4185|(11, 4, 8)|const|float32
const_4186 = relay.const([[[-3.214746,-2.422989,5.863471,4.719302,2.429544,2.026434,-7.293888,-7.830182],[-1.159708,-2.461342,-9.117993,0.335592,2.245678,-8.742175,6.169020,-7.247746],[8.023189,-3.992805,-1.572737,9.055865,7.885304,-5.770991,7.360188,6.500701],[-0.193723,4.977588,-7.767264,6.744589,6.703790,-3.972213,9.579723,8.280231]],[[7.784559,2.539369,4.986315,3.640445,8.934745,1.022628,-2.854641,9.899661],[-1.552653,3.615866,9.434467,-6.566399,1.574338,-4.443006,7.548330,6.844873],[7.721543,0.427101,6.301928,-6.632021,-7.954567,7.592148,-1.912670,-5.908862],[6.491637,2.755347,-1.598085,-2.914325,-6.572516,-4.536922,-0.966488,-3.976473]],[[-8.485768,-5.814610,-6.540449,2.294551,-1.417880,-8.910869,1.676814,6.990052],[-7.305203,7.518651,-4.645607,-7.740999,-7.683419,4.515837,-1.544635,8.575951],[3.768658,-7.284794,-3.967569,-7.200217,-7.602601,4.640976,4.040966,1.344776],[7.677003,-3.444295,-7.997794,-1.228587,0.273157,0.210163,2.065831,3.822434]],[[-0.152751,-4.357383,9.761138,-4.160423,0.994805,2.151845,-4.448723,0.729029],[2.231772,-8.887746,-4.797818,4.039346,-8.296801,-3.313939,2.882020,-2.125208],[3.736941,-2.740263,5.667332,0.923000,-8.684094,-6.015351,9.995169,-0.363336],[8.005094,-8.834976,8.747739,-9.408447,-0.798045,3.750453,-9.314861,8.459177]],[[-4.427658,-6.913190,-5.970862,8.559645,-7.899556,-2.351747,1.777506,-4.010216],[4.958241,-7.846126,-4.052663,-2.317619,5.148463,-4.538445,1.212584,-2.374591],[7.434847,1.359729,-8.085091,-6.083672,-4.539514,-4.864205,0.022881,9.184647],[5.839874,7.925553,-0.186491,-0.939627,0.288636,4.447271,-2.455758,1.957164]],[[-7.929879,-9.542179,6.156104,1.580089,8.684395,8.885835,-0.682380,2.967677],[-7.709425,-2.819323,-8.965709,6.699385,8.471291,-8.749501,-2.885388,-9.351142],[-7.902630,1.051732,6.779753,-5.886426,-5.801516,-8.295692,-9.542677,-9.284709],[-7.614419,9.637250,5.360373,4.791259,0.832991,-2.922479,9.295388,-6.743812]],[[5.516030,8.854992,-9.578183,4.728754,4.014931,7.264583,2.703802,-9.573619],[-2.330027,-7.598501,-0.216081,6.076456,3.422871,9.907126,-2.591248,8.938986],[4.633248,-3.195530,-3.807679,-6.383493,4.189939,9.762121,4.516848,6.307500],[8.885932,5.543532,7.407928,6.974329,7.129799,9.917623,-8.012647,6.409256]],[[3.263111,5.325614,-8.584766,2.678850,3.551370,-6.199378,-1.530567,8.202403],[-6.798251,-3.832563,3.043939,-0.965077,-3.652298,-6.234839,-9.619249,6.046675],[0.304974,2.497314,-8.842023,-3.700481,5.005095,7.846049,-8.856431,9.018832],[0.302996,-5.610300,9.855955,8.745404,-8.339211,-5.655690,-1.008543,-2.177134]],[[-8.358195,8.341039,-9.050631,8.501091,-6.156401,2.539595,2.681116,7.476560],[-9.702092,2.893254,6.432345,-0.487682,-3.872841,-6.101876,-5.158045,-5.858567],[7.950972,0.003290,7.915689,6.400489,3.048930,-6.398152,-9.613399,-0.049127],[5.103133,-9.013594,-2.707221,-0.747115,-2.406038,2.881333,6.813581,2.220369]],[[1.450073,-2.413825,4.036151,9.219732,8.372535,5.046288,6.829358,-9.363340],[9.137099,4.921435,5.736112,-4.944852,4.139697,-6.661136,-6.924748,1.841057],[1.014975,-9.323346,4.904066,4.377579,-1.602959,-4.591035,-7.810537,-7.956488],[-5.007491,-7.919959,-9.529034,8.478001,-8.903966,-3.329462,7.563109,5.241834]],[[-1.866617,-4.607010,0.746245,-5.390520,-7.319955,0.623289,5.647347,0.921524],[-9.951845,-8.567644,-3.887089,-8.119905,4.532421,8.759883,-0.260317,5.586995],[3.240397,-7.884655,-9.746534,-5.764072,-9.963140,9.018201,6.831687,7.673928],[-5.059154,-3.960060,3.740035,-4.080258,-8.184215,9.781395,-6.740512,0.200755]]], dtype = "float32")#candidate|4186|(11, 4, 8)|const|float32
bop_4187 = relay.power(const_4185.astype('float32'), relay.reshape(const_4186.astype('float32'), relay.shape_of(const_4185))) # shape=(11, 4, 8)
output = relay.Tuple([bop_4187,])
output2 = relay.Tuple([bop_4187,])
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4195 = func_4194_call()
output = call_4195
func_4196 = relay.Function([], output)
mutated_mod['func_4196'] = func_4196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_4296 = func_3292_call()
call_4297 = func_3292_call()
func_3167_call = mod.get_global_var('func_3167')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_4313 = func_3167_call()
call_4314 = func_3167_call()
func_408_call = mod.get_global_var('func_408')
func_412_call = mutated_mod.get_global_var('func_412')
const_4316 = relay.const([-2,-5,-5,-7,5,1,-8,-4,9,9,-7,6,-3,6,-5,-8,-4,-4,-1,1,2,1,-8,-8,-10,6,-8,-1,-7,10,2,1,-2,-6,-5,-10,-8,-9,-6,1,6,5,-10,-8,3,-8,-6,4,5,1,-6,-9,2,9,6,5,-9,-9,-7,3,5,-9,-2,8,-3,-7,2,1,3,5,4,-3,-2,-10,-7,3,8,-4,-4,-8,-3,-6,-3,10,-9,-7,-5,-5,-3,8,-10,4,10,10,10,1,-5,8,-3,7,-3,6,7,5,-8,1,-3,-8,3,-8,-8,-6,-7,-2,-5,4,-3,6,-6,1,-5,6,7,10,3,-1,-7,3,-1,4,-4,-2,3,-9,2,-4,10,4,3,-5,3,7,-3,6,5,-10,10,-8,-3,-3,6,-1,-7,-4,-10,-9,7,5,-6,5,-10,-10,8,-5,-4,-3,6,-7,-10,3,1,5,8,1,-10,7,1,10,7,10,6,2,-9,4,9,1,1,-2,-5,-5,9,-5,-9,-2,4,8,9,-1,8,-8,-7,8,7,7,3,7,5,-6,8,-3,-2,-2,10,9,-1,6,10,-3,6,-8,-3,-2,-8,-5,8,9,-8,3,4,-7,-1,-2,6,7,-7,-10,-10,1,3,-6,-1,-1,6,6,-5,7,-5,-6,-4,5,-6,6,-9,7,2,-1,8,3,-5,8,-3,4,3,10,-3,-1,-10,-8,-3,-1,8,-9,5,4,2,-7,-6,2,3,7,7,-6,6,-7,8,-5,9,5,-7,-3,-1,-3,-5,6,-8,-5,-2,3,-6,-6,-10,1,6,-5,-4,-1,1,2,10,-4,-9,-5,-2,9,-1,-2,-8,2,8,-7,6,-7,-4,10,5,4,5,-6,-10,-4,-4,1,9,7,1,-10,-4,1,-6,-1,7,6,5,-8,1,-5,8,6,-9,5,-7,-4,-1,-8,-8,-7,-6,-6,9,3,7,4,4,-3,2,-3,-10,-1,-4,10,-10,6,2,-7,5,10,8,7,3,-6,-5,-6,-8,8,8,5,-6,5,2,-8,4,10,1,5,-7,-1,-10,9,-5,-9,6,-4,4,10,-3,-4,8,8,-1,-5,2,3,4,9,1,-4,-3,-7,8,-4,6,8,3,-5,-7,-5,8,-2,-1,2,2,-7,4,3,-1,-5,-6,-3,6,-5,10,-5,-9,-3,-9,-2,-10,-7,1,8,-10,9,3,7,1,6,4,-2,-10,5,9,-2,4,-5,1,9,4,9,1,9,-8,3,-8,-8,7,10,1,-7,3,-2,-3,8,-10,-7,3,-10,2,-6,6,1,-7,1,4,5,-10,-4,9,-2,-2,-9,-6,-7,-2,-3,9,4,-4,6,-5,-7,-9,7,6,-8,-10,-3,-7,7,5,8,3,-10,10,-6,8,-1,-4,-8,10,9,4,-6,-2,10,2,-9,-3,3,8,10,1,-6,10,9,1,-7,8,6,8,-5,-8,-5,-7,6,-8,-3,6,7,-3,-5,2,9,-7,10,-5,-6,-3,-3,1,-8,-4,9,-8,7,1,-6,-1,-5,-2,-4,1,-7,2,7,-9,-4,5,4,-8,-7,-10,3,7,-2,2,3,7,-2,-2,-2,-5,6,10,3,9,-6,-2,2,9,-8,1,8,3,-7,-8,-6,5,-3,1,2,8,1,-9,9,1,10,-9,8,-6,-9,-3,-9,8,-5,2,1,7,9,-8,-5,8,-9,-2,10,-3,4,5,-8,9,-4,-3,2,8,8,-2,5,8,6,4,-10,7,4,-1,-9,-6,-3,9,-6,7,-4,-9,-6,4,7,-9,4,-2,2,-9,-4,-3,1,-10,-10,3,5,-3,-6,-4,5,-1,3,-5,7,-5,6,-9,1,-6,-6,5,10,4,-4,-3,2,-6,-7,10,-5,-8,5,10,7,-9,6,6,-1,-3,7,-4,10,-5,-10,-5,-2,-10,10,-6,-7,-2,8,-8,-6,-4,7,-5,-9,-3,9,-6,9,-9,5,6,2,-4,5,9,-4,-8,2,-5,-6,-2,4,-6,-5,4,2,-3,-9,5,10,7,9,-5,9,-4,8,-7,-7,9,-10,3,4,-6,-4,9,7,9,1,8,4,2,1,8,4,9,10,-6,9,-9,7,8,6,-9,-3,-9,-1,1,-2,-8,-6,-10,9,3,10,-1,-2,10,-6,8,-5,8,-8,6,8,4,-2,-10,-2,9,5,-8,8,-8,6,6,1,-7,-3,-8,-8,-6,-9,-1,9,1,-7,2,9,-10,4,-8,9,3,-2,-4,-3,3,5,1,4,-10,4,-8,2,10,5,-2,-5,6,-7,-10,-1,2,-6,1,-6,-3,-5,-5,-1,4,3,10,-4,-7,-9,1,9,7,8,-9,9,7,3,10,7,1,3,-7,-2,-7,-3,-10,-2,2,-4,-6,-1,6,5,1,1,1,5,-10,4,5,-6,2,1,9,2,-8,-8,-10,-2,2,-3,9,3,-3,9,-4,5,4,-9,1,6,-6,-4,7,5,9,-4,-4,-10,-2,4,-3,-2,-5,9,2,-5,-10,-5,5,8,-8,2,9,-10,10,-9,-3,1,-3,5,-8,4,-9,6,-8,8,7,9,-4,7,3,1,8,-5,4,6,10,9,8,-3,-10,-4,3,-4,-2,-4,-6,2,-7,-3,-9,-1,1,-8,7,-7,4,-5,5,-5,10,-2,4,-2,-3,10], dtype = "uint64")#candidate|4316|(1008,)|const|uint64
var_4317 = relay.var("var_4317", dtype = "float32", shape = (3, 9))#candidate|4317|(3, 9)|var|float32
call_4315 = relay.TupleGetItem(func_408_call(relay.reshape(const_4316.astype('uint64'), [9, 16, 7]), relay.reshape(const_4316.astype('uint64'), [9, 16, 7]), relay.reshape(var_4317.astype('float32'), [27,]), ), 4)
call_4318 = relay.TupleGetItem(func_412_call(relay.reshape(const_4316.astype('uint64'), [9, 16, 7]), relay.reshape(const_4316.astype('uint64'), [9, 16, 7]), relay.reshape(var_4317.astype('float32'), [27,]), ), 4)
output = relay.Tuple([call_4296,call_4313,call_4315,const_4316,var_4317,])
output2 = relay.Tuple([call_4297,call_4314,call_4318,const_4316,var_4317,])
func_4333 = relay.Function([var_4317,], output)
mod['func_4333'] = func_4333
mod = relay.transform.InferType()(mod)
var_4334 = relay.var("var_4334", dtype = "float32", shape = (3, 9))#candidate|4334|(3, 9)|var|float32
output = func_4333(var_4334)
func_4335 = relay.Function([var_4334], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4376 = func_3592_call()
call_4377 = func_3592_call()
func_408_call = mod.get_global_var('func_408')
func_412_call = mutated_mod.get_global_var('func_412')
const_4392 = relay.const([4,4,10,5,-1,-5,-1,9,2,9,4,6,9,9,6,2,3,-8,-3,2,10,-5,2,2,-5,2,3,3,2,3,-4,-9,-4,10,10,3,1,-10,3,-9,-5,8,-10,9,3,-1,-9,-5,-7,-2,7,8,3,-3,10,-5,-4,4,-1,8,-6,-4,9,-2,4,-5,7,-1,9,-5,7,-7,-2,-6,5,9,-5,10,4,-2,4,-1,9,1,9,9,5,-8,-7,2,-10,-5,5,1,-7,-8,-8,-4,-3,7,1,8,1,5,-10,-2,-7,3,4,9,-7,-2,8,-4,-1,2,4,-9,4,5,-10,-4,5,9,1,1,-7,-5,-9,3,-7,-1,5,-9,4,4,-2,1,6,-7,7,9,2,-8,-2,-2,-8,-1,5,-5,-4,2,-7,-3,4,4,-9,7,6,6,-8,4,-1,10,-4,4,-4,-2,-3,6,7,3,2,9,7,3,-4,-1,3,-1,-4,5,-3,-9,-1,6,-4,6,-8,3,10,1,4,-9,1,5,6,3,6,8,4,7,-4,3,8,7,1,-2,-10,-3,-2,8,6,-9,-1,10,-2,7,-10,8,-6,3,-7,-4,5,-7,6,5,7,4,1,-7,-1,-9,-3,-6,-5,8,-6,-6,2,10,-1,7,8,-5,-5,4,-7,8,1,10,-5,-6,3,-5,-9,2,-3,5,-2,2,5,5,8,-1,-7,3,-1,6,2,10,8,1,-3,-5,-1,4,3,-7,3,8,-10,4,3,-9,3,8,5,3,6,-3,-4,-4,-6,-8,10,1,-8,-5,-6,5,6,-1,3,-9,1,-7,-8,-4,1,-7,7,-2,4,-5,10,8,-7,6,-2,-10,-6,-9,-7,3,2,-10,-8,5,8,10,4,-5,-6,9,-6,2,8,-8,-4,-3,-1,-7,-5,-10,-2,2,-2,-7,10,6,-6,7,10,7,8,-10,4,9,10,2,-2,8,-1,-2,-10,6,1,-8,-1,-4,-8,10,-4,9,8,5,-6,-6,9,-6,8,-5,-5,9,1,-7,-2,8,5,1,1,-3,-1,1,-7,-9,1,4,-10,-6,-10,7,-9,7,6,-7,-6,-3,-7,6,-5,1,-10,2,9,10,-10,-1,-4,4,8,7,10,-10,-6,3,5,7,-8,-7,8,8,4,8,-10,10,-4,2,8,-2,-2,8,-8,3,6,3,-7,2,10,9,-2,10,7,9,5,2,6,-5,4,10,-7,-4,6,6,-5,8,4,-3,-9,6,2,3,9,2,-3,-5,-7,-5,-4,9,-5,-7,4,-4,2,8,10,-6,7,-2,10,5,4,-10,-2,-10,-7,-10,8,-5,3,-8,5,10,2,6,-9,9,10,4,10,9,-2,8,10,-2,-7,6,4,5,9,-8,-10,-2,8,-2,-9,-6,9,-10,-9,4,5,-7,-5,5,-2,2,1,4,-9,10,7,-10,-1,-9,-5,6,2,-10,-6,3,-7,-1,9,8,2,-10,3,9,-10,-2,-9,8,-2,2,-1,-7,10,-7,-3,-10,4,-6,-8,10,-3,-7,-3,-6,1,-2,-3,-3,6,3,-8,6,1,-8,9,8,-10,-4,10,-9,-8,-7,1,3,1,-9,-8,-10,9,9,6,9,6,1,3,-9,1,1,6,-9,1,8,5,2,8,3,1,-1,3,-3,2,-9,-7,-4,6,4,5,9,-1,-5,2,-4,10,-10,-9,-1,-6,-5,1,-8,5,4,-3,10,-2,7,-5,-9,-8,7,-1,-8,9,9,-3,4,-10,-7,-1,-9,4,-9,6,-1,6,-2,8,-3,3,6,-1,-3,-1,4,-9,-7,10,1,1,-10,2,3,2,-9,-1,1,9,3,-6,2,-3,-10,4,-8,-5,-1,10,9,3,7,6,6,-3,5,-9,5,-5,-2,6,3,8,-10,-1,2,-8,-10,6,10,-6,-9,4,-6,8,-10,-7,8,9,6,7,-8,7,-9,-3,-4,-6,3,-8,-8,6,-3,-1,10,8,-1,-6,-10,-6,-5,10,7,4,-5,-10,9,1,1,-2,3,1,-7,-3,-7,7,-8,-3,2,-7,-8,-2,-5,8,6,-10,-1,2,-5,4,4,6,-8,-8,-8,9,-4,-4,5,-6,3,-7,7,4,-6,8,2,3,4,-2,8,10,-4,10,8,10,4,-10,9,-6,4,7,7,6,1,4,1,1,10,-7,-9,-2,6,-5,5,10,-3,-5,-6,2,1,9,1,7,3,-10,9,-5,-1,10,2,-5,-6,5,-3,3,2,4,-4,-7,-3,9,-8,-8,9,-6,9,-7,-4,-9,9,9,-6,9,3,6,2,9,2,-10,7,-1,9,-3,2,8,-6,5,9,1,-9,-8,-2,4,8,6,-1,-4,-7,-3,-1,-10,-9,10,-10,-2,7,1,-10,-3,10,4,8,-2,-6,-4,10,-5,-9,-9,-7,-10,-2,4,-8,8,8,-9,-1,1,-8,4,9,6,-6,8,5,-8,1,-9,-10,-6,1,5,6,1,1,9,7,-9,-10,8,5,4,-7,6,10,-6,-7,6,6,-5,-3,8,-10,4,-2,-7,8,4,4,5,-3,-8,-3,-2,-2,-8,3,-6,3,-5,2,-3,-5,8,-10,-5,5,1,-10,6,2,-8,10,-10,-3,9,8,10,2,5,2,-2,5,-4,8,6,4,5,-7,-10,-1], dtype = "uint64")#candidate|4392|(1008,)|const|uint64
var_4393 = relay.var("var_4393", dtype = "float32", shape = (27,))#candidate|4393|(27,)|var|float32
call_4391 = relay.TupleGetItem(func_408_call(relay.reshape(const_4392.astype('uint64'), [9, 16, 7]), relay.reshape(const_4392.astype('uint64'), [9, 16, 7]), relay.reshape(var_4393.astype('float32'), [27,]), ), 2)
call_4394 = relay.TupleGetItem(func_412_call(relay.reshape(const_4392.astype('uint64'), [9, 16, 7]), relay.reshape(const_4392.astype('uint64'), [9, 16, 7]), relay.reshape(var_4393.astype('float32'), [27,]), ), 2)
output = relay.Tuple([call_4376,call_4391,const_4392,var_4393,])
output2 = relay.Tuple([call_4377,call_4394,const_4392,var_4393,])
func_4397 = relay.Function([var_4393,], output)
mod['func_4397'] = func_4397
mod = relay.transform.InferType()(mod)
mutated_mod['func_4397'] = func_4397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4398 = relay.var("var_4398", dtype = "float32", shape = (27,))#candidate|4398|(27,)|var|float32
func_4397_call = mutated_mod.get_global_var('func_4397')
call_4399 = func_4397_call(var_4398)
output = call_4399
func_4400 = relay.Function([var_4398], output)
mutated_mod['func_4400'] = func_4400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_4416 = func_4019_call()
call_4417 = func_4019_call()
func_2697_call = mod.get_global_var('func_2697')
func_2700_call = mutated_mod.get_global_var('func_2700')
const_4442 = relay.const([-2,-1,7,-8,-7,-1,-10,10,10,9,5,-4,3,-6,-1,-10,2,-9,-5,5,5,-7,-2,8,-2,2,10,-6,6,-5,1,-9,1,3,-4,-8,-6,-2,9,-2,7,-2,2,2,-10,-4,-4,-5,8,1,-8,-8,3,7,-2,-4,-5,-5,-4,2,4,6,-8,3,1,-7,-2,-5,9,-6,1,1,8,-2,5,-8,-1,-8,-5,4,-6,5,5,2,2,-6,-10,8,3,10,-5,6,3,4,5,-2,-8,-9,-6,9,-1,-10,10,-10,-1,10,1,3,-9,1,-4,7,1,5,8,-5,8,1,7,-10,4,-6,3,-8,-4,-8,-4,-2,-10,-2,2,-9,-7,8,-4,4,-6,10,8,4,8,2,-9,-7,-1,9,-10,-4,1,-3,-10,-2,7,-8,3,-9,-5,3,7,-3,10,-4,2,-7,9,9,-9,4,4,-3,5,6,-6,6,-8,2,2,-8,3,7,-9,9,-7,4,-6,-8,10,3,-4,9,-7,-10,6,-3,-7,-1,5,2,5,-3,4,4,-7,10,-7,3,-10,2,3,7,6,-4,-9,4,2,-9,-1,10,1,9,-9,-1,-3,4,-10,6,10,6,-6,-7,8,-7,-8,-6,9,6,-8,-8,4,9,-5,-10,4,-8,6,1,1,4,-6,-8,-8,4,3,-6,-4,-9,-9,5,4,-4,-9,6,-2,7,3,-5,-2,-6,1,-10,-7,5,9,-9,-3,7,7,-2,-6,-9,6,1,-2,-3,-8,-7,3,3,2,-8,5,7,-9,-3,9,3,5,-3,10,10,-8,-5,9,-6,-1,7,8,-10,-2,1,4,-7,7,-5,-6,6,-2,-7,-10,5,7,-7,-4,3,1,-9,9,3,-8,4,-3,-9,3,9,9,5,4,1,1,7,-8,-7,4,5,-10,7,-9,-10,4,-8,-3,-1,6,-8,7,-9,10,4,-7,6,-5,-9,-1,9,-10,8,-9,-4,-2,10,-6,4,6,-1,-6,8,-10,-8,-10,6,-3,5,3,4,2,5,-6,5,9,-5,-3,-6,2,3,10,-1,-6,-4,-6,6,-4,-5,10,-2,-5,1,10,10,1,5,5,-4,-4,9,7,-7,6,1,3,-6,10,4,-7,3,10,-9,4,5,4,-8,-1,1,-9,5,6,10,-9,6,-9,-3,-7,-5,8,8,5,-10,-5,6,-3,-5,10,-5,-10,-4,7,9,10,6,-3,7,-2,-4,9,-10,1,-1,3,-10,6,3,1,-9,5,8,-2,7,3,-1,-1,5,10,-3,-4,9,10,5,-5,2,-10,9,-5,-7,8,-1,3,-3,5,-8,-2,9,1,3,10,6,-6,-3,-1,-1,8,-10,-1,-2,8,5,8,-9,-10,5,-8,10,-5,-8,1,7,-3,-8,9,-1,3,6,10,10,-10,9,-5,-3,-2,-9,2,2,-5,10,-2,1,-6,7,-2,7,-10,-9,5,-5,5,-10,2,-10,2,-10,-2,-10,-8,6,3,-2,-10,-10,-3,4,1,-2,-7,1,-6,-4,2,9,-2,-9,-8,10,2,-7,-6,-2,6,-1,10,-4,5,-5,3,-8,-8,-2,8,6,-1,-6,3,-6,-3,4,1,10,-8,-4,8,8,10,2,-1,9,-1,-10,2,5,-5,9,-7,-3,-5,-5,-2,10,-2,-10,-1,8,-4,8,6,-3,2,-6,-2,-5,-9,-1,5,1,-6,-2,-1,-10,-1,-3,10,8,10,5,5,1,2,5,3,-7,-10,-5,1,8,-4,7,-6,7,8,-8,-2,9,10,9,1,-2,7,1,-5,-8,-9,2,-9,-3,-9,-2,-9,4,6,-5,-1,9,4,-4,1,7,-8,-7,-6,-7,-1,-7,-1,-2,-4,7,3,3,-6,-8,10,8,2,8,6,-6,-4,1,-4,6,9,-3,-7,-4,3,1,7,5,7,-1,9,-1,-10,2,-5,-10,-10,-9,-1,-2,-6,10,-4,-5,8,-3,-3,10,7,7,-10,6,-2,-7,-1,7,-5,1,2,10,3,-7,-8,-2,-10,-6,-8,10,-1,-2,7,-10,-6,2,10,-8,-7,-3,-1,-1,4,1,4,-1,-8,9,-2,-8,1,-8,1,-6,-2,-3,-4,6,-4,9,8,-2,2,-4,10,7,-1,4,1,-10,9,-6,2,2,-8,-3,-2,5,-6,-2,-8,-10,2,-2,-6,-7,-10,9,-6,-5,3,-3,2,-10,-6,5,-1,-4,10,7,-10,2,-9,1,3,2,-5,2,-4,6,-5,5,-7,-1,6,-3,-2,8,6,-7,-5,-5,-5,-8,9,8,-4,-2,-3,-9,10,-7,7,-6,-5,1,3,2,3,6,3,-8,8,-9,-4,1,-10,-6,4,-9,-6,-10,-6,-6,2,3,-7,-4,2,5,-4,9,5,-1,9,7,-8,-4,-1,3,4,9,-6,6,8,3,-8,-6,-10,-9,6,-4,-6,1,1,-1,2,8,-4,-8,-6,6,5,-4,-10,-6,2,5,10,-5,1,-8,7,3,-10,6,1,-7,-6,3,-5,-4,-9,-5,4,2,10,-10,-5,8,1,-1,-8,1,1,-1,1,5,6,-8,2,8,9,-8,-9,2,-2,2,-3,-3,-5,3,10,5,-8,6,3,1,-10,-8,7,8,-5,1,-5,4,-9,-7,3,-6,-5,2,-8,1,3,-8,-9,2,-9,4,7,4,-7,6,-3,2,9,-7,6,-7,-7,-1,-1,2,6,-4,6,-1,-8,-4,1,10,-9,-7,7,5,-8,10,-1,-1,-10,2,-2,-10,9,-5,7,2,-4,-10,4,-5,-4,-4,-7,4,2,3,8,-8,5,-9,9,-10,-10,-6,-8,9,-3,-8,1,-6,-9,-9,-10,4,-10,-10,4,-2,2,1,8,-3,6,-9,-5,-10,-6,3,-5,3,-10,4,5,-8,-3,-9,2,2,-5,-3,-8,7,1,1,-7,-1,9,10,-1,-3,1,7,-3,-9,2,9,6,-5,5,5,2,8,-1,-9,9,1,3,-1,-7,-7,2,-10,-1,5,2,-10,8,-8,-8,-3,9,5,4,-10,-8,-1,-2,-9,7,-1,-6,3,-10,-2,6,-5,1,-8,-8,5,5,6,-6,-2,-1,-2,-7,8,6,6,-5,-8,3,-9,-4,6,-10,-9,-9,1,-6,-4,8,10,10,-5,-7,1,-8,-2,7,-4,-2,5,-3,-9,9,-2,5,-2,-8,-2,-1,8,3,2,7,9,10,-1,10,4,3,-10,-9,-3,-9,-5,-8,-10,10,3,9,-7,5,1,-7,-7,-2,9,9,-8,9,-1,-4,-9,4,-4,-3,-1,10,-6,-9,-9,9,-2,-10,-1,4,5,2,4,6,-10,-10,7,-4,-7,5,-6,4,7,10,4,-7,-2,2,6,4,9,6,4,-9,5,-8,10,-10,-9,-2,-4,3,9,-2,5,10,1,-10,-6,-9,4,-5,-1,-1,7,5,-4,7,-6,-10,-6,7,-6,4,5,-4,-1,3,-6,-6,8,4,10,9,2,-8,-10,6,9,8,3,3,3,-10,10,3,5,-4,-1,-2,-2,9,-3,-6,7,8,-5,6,9,-6,1,-9,-7,3,5,10,6,-7,-6,-3,6,3,-6,-9,4,-4,-7,1,-3,3,-10,5,-2,-6,5,1,3,-5,2,2,3,3,8,-5,10,10,9,-7,8,-9,-3,6,-2,-6,9,2,-5,-2,-9,-5,5,1,9,-6,3,9,6,3,8,-4,-7,-1,-3,5,-1,3,4,-1,3,-9,3,-2,5,8,-7,2,-1,8,7,-6,-4,6,2,-2,-5,1,2,8,3,1,-8,-3,10,-3,-5,-7,7,-8,3,5,-4,7,-2,-3,2,-2,-9,-1,8,-7,-4,-5,-10,-1,-6,2,-5,-6,-7,-1,-3,9,-1,2,-4,-4,5,-9,-2,-9,-1,8,1,2,-1,7,7,7,-4,-7,9,-7,1,-9,-8,-3,9,-4,5,10,-10,-1,3,-5,8,5,3,10,-10,9,7,-9,-5,-9,-9,-8,8,-6,-7,7,-10,1,-6,9,1,-4,-2,-7,5,7,6,3,-3,4,9,-5,8,6,8,10,3,-10,-6,-2,-2,7,2,-2,10,-7,1,-1,10,3,-1,9,-8,9,-5,-4,-9,3,-10,6,-4,10,7,-4,-7,6,1,-1,4,10,-2,6,-7,1,-5,7,2,-5,-9,5,-6,-3,6,-4,6,10,2,9,5,7,9,-9,3,9,3,-7,6,-5,-8,3,-5,-3,-10,-4,-2,-7,7,1,2,-2,-5,3,3,-4,-5,4,-1,-6,-7,8,-3,10,4,10,3,-10,-2,-2,9,3,-2,-5,-4,-5,-5,-2,-1,8,8,-1,1,1,-2,-8,8,8,-10,6,6,-9,-6,9,5,-3,9,-6,-5,6,10,10,-7,2,1,-3,9,10,-3,5,10,3,-1,-10,5,-4,9,-5,-4,6,-4,4,1,1,5,-3,3,4,4,10,1,-4,-8,7,-5,7,1,5,7,5,-3,9,-4,-9,1,6,3,-2,-9,5,1,-5,5,-4,7,8,-8,7,-2,-8,6,-4,-4,-4,-5,-6,2,1,-1,-2,6,8,9,-6,2,5,-10,10,3,-6,2,-7,1,-2,4,-1,-5,6,6,6,-6,9,8,-1,-3,3,6,8,9,2,-5,6,3,6,4,9,-3,-7,6,-5,-2,4,10,7,-3,3,-1,-2,10,4,-9,3,9,-4,7,-6,8,9,4,-7,5,9,-10,-10,8,-6,7,1,-1,-5,-6,7,2,4,-2,-5,3,-2,-2,5,6,-8,-3,3,4,2,8,4,7,-8,-8,-5,6,6,-2,9,-4,-3,6,1,-3,-9,-4,2,10,-8,2,1,-3,-7,10,4,-5,-3,4,-8,-8,-9,10,2,3,10,5,5,-8,4,-2,-4,-7,5,-2,8,2,10,1,5,4,-1,-7,-9,-1,-5,-1,-10,-5,-10,10,6,-7,7,10,4,-5,3,1,9,6,7,-2,-8,1,-5,-7,-4,-7,4,3,1,3,2,-7,10,-4,1,-1,6,-8,-3,-1,-9,10,-6,-1,10,3,2,2,3,8,-3,-2,10,-9,-5,4,1,-7,-4,5,4,6,8,-7,-4,-5,-3,6,-7,10,5,5,-7,-2,1,-7,-7,-3,8,6,-5,9,-7,1,1,-5,-5,-2,-3,3,4,-2,-10,-6,5,2,-10,-5,-9,-3,10,-7,-10,-5,-5,-10,-8,-2,5,1,-7,-9,-8,-5,3,-5,8,7,-1,3,-3,-7,-3,-1,6,-10,5,-1,4,-7,-6,9,6,-1,8,-5,7,2,-2,10,-5,10,-10,2,-8,2,-5,5,-8,-8,-10,-9,-8,7,-4,-7,-7,-10,9,10,4,1,-2,-1,-3,-7,6,2,-7,-4,-3,-1,-10,-7,6,6,7,9,4,-10,-1,-3,-2,-10,1,-9,7,-7,4,7,9,-10,-1,-8,1,5,4,10,1,5,6,-8,-8,9,7,10,9,4,8,-8,-1,-2,1,1,4,3,1,-2,-6,-9,-8,1,-10,9,9,9,-10,-3,7,-2,1,2,7,-1,6,8,-10,1,-3,9,8,2,-1,9,-10,-8,6,-2,-3,-8,2,4,4,-1,-6,9,-10,-1,7,-8,1,-9,-5,10,4,8,-3,-10,-8,5,3,7,6,-4,-10,-9,10,5,-1,-5,6,-2,8,7,-7,1,6,-3,9,-5,-2,7,-4,-9,-1,9,10,6,5,7,6,2,-7,4,4,5,4,10,-4,1,3,-3,-3,-4,-4,10,8,-10,9,-3,1,-9,-9,3,7,-1,7,-5,4,-9,-10,-6,3,7,2,-4,-7,-10,-3,-2,-10,-1,8,7,7,2,-7,6,-6,3,-3,3,-2,-8,7,-5,4,3,-4,-8,6,-8,8,-2,-9,4,-4,3,9,2,3,2,5,-3,-6,2,9,-5,-6,-3,4,8,-4,5,-6,1,4,9,9,-10,1,8,-4,8,2,8,9,-3,8,-8,4,-4,-3,10,4,-8,4,6,-9,-9,-8,-6,-2,9,8,4,7,2,10,-1,-2,1,4,-5,4,3,-10,6,-7,-3,4,-9,-5,8,-3,-2,-7,10,-10,2,8,3,-4,1,8,8,-1,-1,-10,-4,8,-7,-8,-6,-1,-2,6,8,-6,3,10,6,-10,10,7,-10,-9,-2,5,5,8,6,5,-4,-10,-5,-8,-6,7,8,-7,1,-7,-2,10,-8,-5,2,8,-2,-3,-1,-7,1,10,-2,-10,-4,5,-1,3,3,4,9,1,10,-8,5,9,-1,-7,-7,-5,8,-7,5,8,8,-3,-6,6,-8,-9,10,-3,7,6,-9,-7,1,5,1,-5,-7,-4,5,-9,4,10,-3,7,-2,-6,-3], dtype = "int32")#candidate|4442|(2400,)|const|int32
call_4441 = relay.TupleGetItem(func_2697_call(relay.reshape(const_4442.astype('int32'), [16, 15, 10])), 2)
call_4443 = relay.TupleGetItem(func_2700_call(relay.reshape(const_4442.astype('int32'), [16, 15, 10])), 2)
func_2697_call = mod.get_global_var('func_2697')
func_2700_call = mutated_mod.get_global_var('func_2700')
call_4450 = relay.TupleGetItem(func_2697_call(relay.reshape(const_4442.astype('int32'), [16, 15, 10])), 2)
call_4451 = relay.TupleGetItem(func_2700_call(relay.reshape(const_4442.astype('int32'), [16, 15, 10])), 2)
uop_4452 = relay.tan(call_4416.astype('float32')) # shape=(13, 15, 11)
uop_4454 = relay.tan(call_4417.astype('float32')) # shape=(13, 15, 11)
var_4461 = relay.var("var_4461", dtype = "bool", shape = (13, 15, 11))#candidate|4461|(13, 15, 11)|var|bool
bop_4462 = relay.less_equal(call_4416.astype('bool'), relay.reshape(var_4461.astype('bool'), relay.shape_of(call_4416))) # shape=(13, 15, 11)
bop_4465 = relay.less_equal(call_4417.astype('bool'), relay.reshape(var_4461.astype('bool'), relay.shape_of(call_4417))) # shape=(13, 15, 11)
var_4470 = relay.var("var_4470", dtype = "float32", shape = (13, 15, 11))#candidate|4470|(13, 15, 11)|var|float32
bop_4471 = relay.maximum(uop_4452.astype('int32'), relay.reshape(var_4470.astype('int32'), relay.shape_of(uop_4452))) # shape=(13, 15, 11)
bop_4474 = relay.maximum(uop_4454.astype('int32'), relay.reshape(var_4470.astype('int32'), relay.shape_of(uop_4454))) # shape=(13, 15, 11)
func_1168_call = mod.get_global_var('func_1168')
func_1171_call = mutated_mod.get_global_var('func_1171')
var_4476 = relay.var("var_4476", dtype = "uint8", shape = (1, 14))#candidate|4476|(1, 14)|var|uint8
const_4477 = relay.const([-3,5,-4,4,-1,8,-3,-4,4,9,4,-5,8,10,-9,4,-9,5,8,-7,-4,-9,-5,-3,1,-9,4,10,2,-3,4,3,6,7,5,-5,10,-5,-8,-5,10,6,8,5,-5,-10,-6,10,-1,8,-2,5,8,8,8,-7,-7,-2,8,-4,-8,3,7,7,-2,-4,-7,-6,-10,-1,8,-9,-10,10,8,4,-10,9,-10,-7,-1,-7,-1,3,7,-10,-3,-8,9,2,1,5,-1,-1,3,3,9,2,5,1,-1,-5,-9,-7,2,-6,-3,6,-5,5,3,2], dtype = "uint8")#candidate|4477|(112,)|const|uint8
call_4475 = relay.TupleGetItem(func_1168_call(relay.reshape(var_4476.astype('uint8'), [1, 7, 2]), relay.reshape(const_4477.astype('uint8'), [8, 7, 2]), ), 1)
call_4478 = relay.TupleGetItem(func_1171_call(relay.reshape(var_4476.astype('uint8'), [1, 7, 2]), relay.reshape(const_4477.astype('uint8'), [8, 7, 2]), ), 1)
bop_4481 = relay.floor_mod(bop_4471.astype('float32'), relay.reshape(var_4461.astype('float32'), relay.shape_of(bop_4471))) # shape=(13, 15, 11)
bop_4484 = relay.floor_mod(bop_4474.astype('float32'), relay.reshape(var_4461.astype('float32'), relay.shape_of(bop_4474))) # shape=(13, 15, 11)
bop_4491 = relay.floor_mod(call_4450.astype('float32'), relay.reshape(call_4441.astype('float32'), relay.shape_of(call_4450))) # shape=(15, 4, 6)
bop_4494 = relay.floor_mod(call_4451.astype('float32'), relay.reshape(call_4443.astype('float32'), relay.shape_of(call_4451))) # shape=(15, 4, 6)
output = relay.Tuple([const_4442,bop_4462,call_4475,var_4476,const_4477,bop_4481,bop_4491,])
output2 = relay.Tuple([const_4442,bop_4465,call_4478,var_4476,const_4477,bop_4484,bop_4494,])
func_4499 = relay.Function([var_4461,var_4470,var_4476,], output)
mod['func_4499'] = func_4499
mod = relay.transform.InferType()(mod)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mutated_mod.get_global_var('func_4499')
var_4501 = relay.var("var_4501", dtype = "bool", shape = (13, 15, 11))#candidate|4501|(13, 15, 11)|var|bool
var_4502 = relay.var("var_4502", dtype = "float32", shape = (13, 15, 11))#candidate|4502|(13, 15, 11)|var|float32
var_4503 = relay.var("var_4503", dtype = "uint8", shape = (1, 14))#candidate|4503|(1, 14)|var|uint8
call_4500 = func_4499_call(var_4501,var_4502,var_4503,)
output = call_4500
func_4504 = relay.Function([var_4501,var_4502,var_4503,], output)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4506 = relay.TupleGetItem(func_4194_call(), 0)
call_4507 = relay.TupleGetItem(func_4196_call(), 0)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_4525 = relay.TupleGetItem(func_3141_call(), 0)
call_4526 = relay.TupleGetItem(func_3143_call(), 0)
output = relay.Tuple([call_4506,call_4525,])
output2 = relay.Tuple([call_4507,call_4526,])
func_4528 = relay.Function([], output)
mod['func_4528'] = func_4528
mod = relay.transform.InferType()(mod)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mutated_mod.get_global_var('func_4528')
call_4529 = func_4528_call()
output = call_4529
func_4530 = relay.Function([], output)
mutated_mod['func_4530'] = func_4530
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4536 = relay.const([[[5.095242,-1.770680],[8.237102,5.375434],[6.928027,0.803553],[-4.848464,-6.716427],[-1.884907,-0.001661],[1.860864,4.392956],[-0.312502,7.940567],[-3.461303,-9.953804],[-1.405873,-7.340162]]], dtype = "float32")#candidate|4536|(1, 9, 2)|const|float32
uop_4537 = relay.tan(const_4536.astype('float32')) # shape=(1, 9, 2)
var_4543 = relay.var("var_4543", dtype = "float32", shape = (12, 9, 2))#candidate|4543|(12, 9, 2)|var|float32
bop_4544 = relay.floor_mod(const_4536.astype('float64'), var_4543.astype('float64')) # shape=(12, 9, 2)
bop_4548 = relay.greater(bop_4544.astype('bool'), uop_4537.astype('bool')) # shape=(12, 9, 2)
output = bop_4548
output2 = bop_4548
func_4553 = relay.Function([var_4543,], output)
mod['func_4553'] = func_4553
mod = relay.transform.InferType()(mod)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4554 = relay.var("var_4554", dtype = "float32", shape = (12, 9, 2))#candidate|4554|(12, 9, 2)|var|float32
func_4553_call = mutated_mod.get_global_var('func_4553')
call_4555 = func_4553_call(var_4554)
output = call_4555
func_4556 = relay.Function([var_4554], output)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_4564 = relay.TupleGetItem(func_4528_call(), 0)
call_4565 = relay.TupleGetItem(func_4530_call(), 0)
func_4397_call = mod.get_global_var('func_4397')
func_4400_call = mutated_mod.get_global_var('func_4400')
var_4567 = relay.var("var_4567", dtype = "float32", shape = (9, 3))#candidate|4567|(9, 3)|var|float32
call_4566 = relay.TupleGetItem(func_4397_call(relay.reshape(var_4567.astype('float32'), [27,])), 3)
call_4568 = relay.TupleGetItem(func_4400_call(relay.reshape(var_4567.astype('float32'), [27,])), 3)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_4579 = relay.const([9.262005,2.330911,-5.600986,0.913799,-1.163041,1.969999,-2.753626,-2.545645,-6.634892,-6.613107,-6.331926,-0.201499,-4.528215,4.314634,9.585046,-0.106142,7.807508,-1.938483,-7.329336,2.958074,5.428972,2.874215,-2.843275,3.955010,-6.910778,-0.309448,-1.579915,-4.469535,0.862160,-6.700077,7.692989,4.994846,-8.409483,-7.355586,6.794153,-2.224807,-3.192005,-5.472601,2.552392,1.157820,7.226336,-6.411021,-0.156056,-3.211319,6.731411,-2.338651,6.538597,4.689322,4.955891,4.534966,5.778299,5.154087,3.263470,-2.531673], dtype = "float64")#candidate|4579|(54,)|const|float64
call_4578 = relay.TupleGetItem(func_1434_call(relay.reshape(const_4579.astype('float64'), [9, 2, 3])), 0)
call_4580 = relay.TupleGetItem(func_1437_call(relay.reshape(const_4579.astype('float64'), [9, 2, 3])), 0)
output = relay.Tuple([call_4564,call_4566,var_4567,call_4578,const_4579,])
output2 = relay.Tuple([call_4565,call_4568,var_4567,call_4580,const_4579,])
func_4591 = relay.Function([var_4567,], output)
mod['func_4591'] = func_4591
mod = relay.transform.InferType()(mod)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4592 = relay.var("var_4592", dtype = "float32", shape = (9, 3))#candidate|4592|(9, 3)|var|float32
func_4591_call = mutated_mod.get_global_var('func_4591')
call_4593 = func_4591_call(var_4592)
output = call_4593
func_4594 = relay.Function([var_4592], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4619 = relay.TupleGetItem(func_4194_call(), 0)
call_4620 = relay.TupleGetItem(func_4196_call(), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_4627 = relay.const([0.147907,9.855106,-5.421997,-7.792567,5.299540,-7.101142,8.623206,-9.643045,7.670385,-9.849247,1.447553,-3.034623,6.933176,-2.353273,-3.143012,1.701794,5.841762,-7.886261,9.880869,-4.924379,-9.855464,9.823237,-4.219551,-8.507891,4.587055,5.276291,-0.295112,-9.284678,-2.619104,-1.994769,-6.567070,-0.498798,2.579769,-0.995773,9.447040,4.167941,6.240671,3.711950,-7.262156,4.149353,2.994100,7.724320,2.745327,3.853964,-6.974444,-9.824000,7.575661,-8.162018,7.837673,8.166470,2.940011,-3.786508,6.883746,-8.143963], dtype = "float64")#candidate|4627|(54,)|const|float64
call_4626 = relay.TupleGetItem(func_1434_call(relay.reshape(const_4627.astype('float64'), [9, 2, 3])), 0)
call_4628 = relay.TupleGetItem(func_1437_call(relay.reshape(const_4627.astype('float64'), [9, 2, 3])), 0)
const_4630 = relay.const([[[-4.903141,8.918188,-0.352621,4.443194,-6.221756,-6.226731,8.117743,-0.825054],[-8.949215,-5.143453,9.967096,-8.101712,-0.703027,4.079157,-3.988650,-5.281598],[-8.555784,6.286368,-3.952868,-9.366313,-5.651700,-2.583498,-9.706371,-9.204556],[8.832970,8.590807,2.222110,6.713453,-9.282374,-2.470681,1.959609,9.793263]],[[-9.284292,-5.077903,1.692816,3.455577,4.071665,-5.070101,-7.567753,-9.359056],[6.233750,-2.255670,7.276520,-8.014225,-1.058623,1.634110,-4.796598,0.800837],[0.025147,7.772522,6.040442,-4.895528,-6.832996,-0.268891,3.273496,-9.629630],[-7.185524,9.205214,-5.455192,2.631619,-2.403001,-7.267139,1.918412,-5.636853]],[[-3.803656,9.863758,-1.484128,-2.041839,-6.700584,-3.759854,-8.609864,0.104423],[6.508035,-4.865323,-0.917752,2.155547,-8.066566,6.866930,4.443760,-6.291363],[5.238138,1.032181,6.223389,-8.053911,-3.307650,8.464454,9.346140,4.050932],[-1.105010,-7.100026,3.607661,9.113075,-7.824596,1.937267,-2.188322,5.488323]],[[-5.068763,-7.636350,-4.992330,6.336863,9.813919,5.245332,6.277831,6.990210],[3.893906,3.623918,4.946618,-2.189656,6.386498,-5.700848,-8.490861,-5.144127],[-6.990995,-5.526213,7.549349,-8.401533,9.190052,-9.959514,-4.462711,-7.881604],[3.024578,2.766189,-3.603650,-6.452753,6.127181,-4.338387,-0.696464,-6.673562]],[[0.026165,-6.465694,9.495595,1.447667,-7.165371,4.789614,8.992292,-1.452546],[0.871908,-1.810335,-8.099801,-0.397408,0.803872,5.243277,6.896222,-1.820841],[-4.260441,4.548803,0.480799,-5.829323,-2.412702,7.148226,2.406259,8.294831],[0.483191,0.674714,-5.221677,5.020249,-8.203189,-0.197029,4.802415,-3.288559]],[[5.383173,8.367619,-8.200143,-0.801000,1.767348,-9.254716,-3.398589,-7.705295],[1.312039,2.963496,2.708379,5.646268,4.615178,5.624088,3.059874,-1.434183],[0.911403,9.896041,-5.840800,4.827511,5.304230,-0.611714,6.416822,3.001249],[-6.679214,-6.877724,-2.614873,1.156017,0.881041,-1.076002,-1.532943,3.529857]],[[-8.853976,8.459708,7.722589,-8.993755,8.905228,-2.141549,0.445172,8.349618],[-2.819381,7.370765,-0.364828,-9.877141,7.315896,-6.693462,2.161732,-7.234375],[-5.958469,-8.407590,-4.479188,7.182662,-9.709839,-1.055060,6.246287,1.904540],[1.672795,-7.284761,-6.451229,-7.325382,7.580384,0.045651,-8.280478,-0.335905]],[[-4.632608,-7.759102,-9.747172,-4.249558,8.237094,-4.881693,-7.973654,-3.593506],[0.843662,3.550335,7.426454,2.059048,-6.629763,-7.474074,-2.803585,-0.015146],[6.898058,5.880177,-6.593669,-8.709517,-6.197737,-9.377953,0.096305,9.107831],[-8.046019,-7.886194,-0.852909,-6.835531,-1.924170,9.798376,-4.160112,9.754542]],[[3.166476,7.865908,-5.542365,3.118467,-4.641468,-7.248424,2.432473,-4.895169],[-3.389378,9.708249,8.869490,-0.181558,-5.059582,-2.171235,4.801828,9.710392],[5.059594,-7.517314,-3.673341,-0.228658,6.628295,-4.660586,-2.872099,-1.322202],[8.047955,7.716585,-7.770710,6.196157,-6.837339,0.699538,9.412270,-1.496657]],[[9.875430,4.212476,-0.290460,-1.235906,-0.292821,-2.712337,-0.444072,8.492462],[2.250531,-4.496900,-0.195559,-6.498564,5.433541,-9.508088,-3.896580,2.966914],[2.179411,-9.241391,4.384224,-1.507848,1.316806,-5.933276,4.735346,-7.197469],[4.103793,-1.380073,-8.400718,-1.803965,-1.864887,-9.805109,1.302267,-6.766070]],[[-3.962982,-1.531993,-5.779050,6.382000,-5.767382,8.587300,-0.765183,-1.258188],[-8.241879,4.438536,0.746823,-8.841356,5.314610,4.321210,8.803281,4.596188],[-1.768353,0.522066,-6.531590,-4.499616,-3.604723,8.543807,6.331295,-6.955888],[-7.146907,-4.733066,9.346471,-3.546237,-2.084334,5.138126,7.185354,7.217706]]], dtype = "float32")#candidate|4630|(11, 4, 8)|const|float32
bop_4631 = relay.bitwise_xor(call_4619.astype('uint64'), relay.reshape(const_4630.astype('uint64'), relay.shape_of(call_4619))) # shape=(11, 4, 8)
bop_4634 = relay.bitwise_xor(call_4620.astype('uint64'), relay.reshape(const_4630.astype('uint64'), relay.shape_of(call_4620))) # shape=(11, 4, 8)
func_752_call = mod.get_global_var('func_752')
func_756_call = mutated_mod.get_global_var('func_756')
const_4647 = relay.const([-9.902748,9.424076,-3.884163,-9.196342,-1.815994,-3.909440,-6.730025,-4.860659,-7.514946,-8.609020,2.788714,-4.381465,0.113824,9.878936,7.198140,-6.141370,-1.029004,4.130477,4.275310,0.315441,-6.573121,1.371567,-1.347599,6.342076,5.998217,1.986278,8.628496,7.672694,-4.610546,-2.203393,0.597728,7.011502,-2.263997,-3.251544,-3.904552,-4.056636,6.595027,1.357519,7.079156,0.046457,-4.678373,8.998286,-4.962819,-1.820200,1.966028,-8.177698,7.642656,4.228801,9.048114,-2.197763,6.221303,-0.327187,-5.210263,7.854773,-3.512980,-4.741415,3.288698,5.526422,7.787247,-8.246489,-4.157579,9.062143,5.700216,0.312816,8.235826,-4.318114,-6.326415,7.190148,9.949778,-3.736436,7.672808,-8.481079,-4.476867,-6.765802,-1.534237,0.776662,-9.353241,-0.919910,5.650272,-8.945137,6.029080,5.959617,4.240101,2.745825,5.912533,-2.077485,-5.869326,-6.723884,-1.971022,-9.919435,8.430473,1.186051,1.822489,4.094533,-7.821760,0.641428,9.063054,9.212161,2.192722,5.159856,7.883065,-4.142010,-6.815009,-3.577469,5.841792,1.228074,-4.290902,-1.609375,0.813866,-5.538445,4.013593,3.392569,2.320612,1.021022,2.409023,7.329888,4.992352,2.263305,-8.970386,-1.240631,-8.522013,0.728522,7.873739,-0.248192,9.906846,-4.974681,-4.058565,8.341679,-7.552915,7.379975,9.112289,-5.405124,-5.020382,5.335225,-8.173089,-6.911437,1.440323,1.380763,-7.845372,6.747256,0.590038,-0.834466,-5.703060,2.283996,0.222715,-2.000679,4.014982,1.825506,-2.410698,7.543333,-9.137997,-9.737804,2.760597,-4.373973,8.485060,5.072372,8.110482,1.442995,-7.707410,5.780824,8.431927,-6.423147,-8.323403,-7.004721,-0.620845,0.288075,6.749290,3.612473,-7.169920,-4.199523,2.634184,-9.584568,-7.389590,-6.459326,-2.321864,-2.796977,-7.901394,-7.091120,-0.038413,7.699821,-3.109690,4.079888,-6.021628,-0.044793,0.122959,5.499286,0.878399,5.918381,1.702292,-4.726264,6.477493,0.444674,1.947613,3.499978,-6.348306,9.066335,4.648650,-0.405214,6.065520,-4.381969,-6.864353,5.583897,6.792414,6.727437,4.733793,-8.344121,-7.484672,-7.286260,-7.466175,5.517348,-1.411174,3.604020,3.512594,-2.299549,2.209347,9.650331,-1.980833,7.479793,-4.271392,-5.184267,-7.866096,-6.824490,-8.360876,-7.624693,-7.549622,6.775161,-6.702822,8.230775,-7.625716,-1.201172,-5.426766,7.037650,5.872018,5.811421,9.636430,0.655922,-5.240017,-5.949610,-1.096126,1.622009,-0.441973,5.575892,-8.321916,3.705205,-6.757100,-0.677469,2.452267,2.411806,-5.449286,-4.487524,-5.928226,3.527011,-2.794493,3.568573,-6.685996,9.509698,1.124671,-3.445555,9.187955,6.808061,1.459008,0.014448,8.424392,8.785937,3.514969,-1.946057,3.746071,-6.872816,2.467824,-1.280590,1.297629,3.214809,3.080468,-7.737831,7.805264,-2.764922,0.988483,0.332859,8.335019,-8.234526,6.859857,-0.768469,-2.771124,-6.004596,3.197098,0.917045,-3.618531,2.030920,-2.122475,3.086666,5.595315,0.070386,3.167076,-2.110907,6.769811,8.751973,1.705910,-8.704797,-2.911949,4.276473,2.391217,-5.772390,1.572960,5.829616,1.539279,5.565124,9.103411,1.514227,-8.983118,1.724582,-2.861494,-0.455507,-1.510076,8.938259,1.396608,-2.041512,-3.196718,-4.940027,5.450546,3.078551,-2.958055,5.331756,9.137763,-8.676059,-4.204503,-6.177192,-6.336601,-9.662765,9.091269,-5.128563,1.063304,1.478630,5.453367,7.814881,-3.401556,-8.998714], dtype = "float64")#candidate|4647|(336,)|const|float64
var_4648 = relay.var("var_4648", dtype = "float32", shape = (27, 1))#candidate|4648|(27, 1)|var|float32
call_4646 = relay.TupleGetItem(func_752_call(relay.reshape(const_4647.astype('float64'), [6, 7, 8]), relay.reshape(var_4648.astype('float32'), [3, 9]), ), 0)
call_4649 = relay.TupleGetItem(func_756_call(relay.reshape(const_4647.astype('float64'), [6, 7, 8]), relay.reshape(var_4648.astype('float32'), [3, 9]), ), 0)
output = relay.Tuple([call_4626,const_4627,bop_4631,call_4646,const_4647,var_4648,])
output2 = relay.Tuple([call_4628,const_4627,bop_4634,call_4649,const_4647,var_4648,])
func_4654 = relay.Function([var_4648,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4655 = relay.var("var_4655", dtype = "float32", shape = (27, 1))#candidate|4655|(27, 1)|var|float32
func_4654_call = mutated_mod.get_global_var('func_4654')
call_4656 = func_4654_call(var_4655)
output = call_4656
func_4657 = relay.Function([var_4655], output)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4750 = relay.TupleGetItem(func_4194_call(), 0)
call_4751 = relay.TupleGetItem(func_4196_call(), 0)
output = call_4750
output2 = call_4751
func_4758 = relay.Function([], output)
mod['func_4758'] = func_4758
mod = relay.transform.InferType()(mod)
output = func_4758()
func_4759 = relay.Function([], output)
mutated_mod['func_4759'] = func_4759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_4765 = func_4019_call()
call_4766 = func_4019_call()
output = relay.Tuple([call_4765,])
output2 = relay.Tuple([call_4766,])
func_4781 = relay.Function([], output)
mod['func_4781'] = func_4781
mod = relay.transform.InferType()(mod)
mutated_mod['func_4781'] = func_4781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mutated_mod.get_global_var('func_4781')
call_4782 = func_4781_call()
output = call_4782
func_4783 = relay.Function([], output)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4819 = relay.var("var_4819", dtype = "float64", shape = (13, 6, 13))#candidate|4819|(13, 6, 13)|var|float64
uop_4820 = relay.exp(var_4819.astype('float64')) # shape=(13, 6, 13)
bop_4824 = relay.right_shift(uop_4820.astype('uint32'), relay.reshape(var_4819.astype('uint32'), relay.shape_of(uop_4820))) # shape=(13, 6, 13)
bop_4842 = relay.logical_xor(bop_4824.astype('int32'), relay.reshape(uop_4820.astype('int32'), relay.shape_of(bop_4824))) # shape=(13, 6, 13)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
const_4847 = relay.const([1.082728,-6.708166,7.983539,6.537381,4.298115,0.758566,1.627982,-4.482971,6.790504,-3.329044,-9.523881,-3.398926,4.098138,-4.074420,-8.061548,-4.102641,9.008714,-8.020918,-8.318125,7.355430,-4.391747,7.018372,-6.390043,-0.020737,-6.027528,-1.051535,4.595351,8.491038,4.182174,1.939537,5.044797,8.394541,-6.633517,6.703440,9.638500,-4.908973,1.978844,4.531397,-6.566118,5.481240,6.252705,8.460982,-7.817485,4.194240,-9.905211,-0.114795,2.077857,7.082495,3.224331,-1.931102,8.094009,5.170255,-9.273617,-3.013585,-4.553639,-1.417950,9.073495,-9.268309,-5.366090,4.749114,-5.098074,-9.975297,8.004970,-3.002657,-2.751084,-5.958371,0.123561,4.525267,-4.146920,-7.437569,4.530182,-1.219746,-8.348612,3.693787,4.125069,-2.850604,-7.784629,3.254808,-5.962673,-1.524528,-3.742735,-9.205061,-4.176859,5.908846,8.110591,5.029164,-0.586157,-8.083014,-8.660823,3.603461,-1.956224,-8.655676,-1.453812,1.695549,2.899168,-9.615592,-4.803018,4.618436,-7.521306,0.572353,3.258968,-4.170767,3.997906,-6.974589,-8.878862,1.675760,3.409473,0.269666,4.819226,-6.412841,3.967980,-8.905965,0.556290,-1.610985,-0.098560,-8.924813,0.688197,-1.436813,1.022758,-5.361958,-2.324414,-1.622708,2.905178,-3.283199,-4.460064,3.587417,9.604690,6.942187,-6.467251,-0.218542,-1.022394,-7.521896,2.042594,-1.381515,5.238042,1.264536,-1.492414,-6.043599,0.498088,-1.001895,0.761382,6.145833,0.033088,-2.771871,8.290537,-1.292033,4.013454,2.619589,2.093246,8.818937,-5.999222,5.685767,-4.099476,4.028469,-6.394046,-6.166795,6.065866,-0.167080,-9.886078,-1.013461,2.802002,9.694118,2.651547,5.745235,-7.309282,-2.441092,7.860068,1.008612,1.108883,-6.082650,-0.727764,4.992895,-7.215205,-4.946913,-7.590576,-2.501404,-8.788867,-6.365097,-0.637844,-4.300043,-9.041582,-8.377893,-8.300545,-5.927904,-3.735165,1.935914,9.988852,-1.019274,-1.599292,-4.351469,-6.553814,-8.758023,6.864695,-1.802019,0.024294], dtype = "float64")#candidate|4847|(195,)|const|float64
call_4846 = relay.TupleGetItem(func_69_call(relay.reshape(const_4847.astype('float64'), [3, 13, 5])), 0)
call_4848 = relay.TupleGetItem(func_72_call(relay.reshape(const_4847.astype('float64'), [3, 13, 5])), 0)
uop_4850 = relay.acosh(bop_4842.astype('float32')) # shape=(13, 6, 13)
output = relay.Tuple([call_4846,const_4847,uop_4850,])
output2 = relay.Tuple([call_4848,const_4847,uop_4850,])
func_4859 = relay.Function([var_4819,], output)
mod['func_4859'] = func_4859
mod = relay.transform.InferType()(mod)
var_4860 = relay.var("var_4860", dtype = "float64", shape = (13, 6, 13))#candidate|4860|(13, 6, 13)|var|float64
output = func_4859(var_4860)
func_4861 = relay.Function([var_4860], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4886 = relay.var("var_4886", dtype = "float32", shape = ())#candidate|4886|()|var|float32
const_4887 = relay.const([[[-8.953264,6.690722,-8.629627,1.698773,-5.780022,8.459988,0.408789,9.145212,-2.467970,2.513442,-3.580249],[-2.210375,5.751103,2.719288,-5.687621,-3.822175,8.229161,-6.477267,-9.786827,-6.790713,4.781841,4.857594],[9.071216,-1.866118,7.176823,-8.549765,2.471853,6.253226,2.051545,-6.069169,8.116492,8.723249,-9.645973],[-1.099684,6.735012,4.815479,3.587310,5.255292,1.600600,-6.433418,-6.640711,5.037613,-6.658608,-7.986835],[4.242311,0.251739,3.292424,-2.163414,-4.024557,6.442270,1.284669,-7.727245,1.394378,-4.690104,6.838809],[-2.568825,7.956113,-9.116502,-7.398245,4.363370,4.491112,0.566468,4.332982,-2.088115,-2.097830,-3.893551],[-3.205972,-6.594767,-7.935655,-9.002543,-9.217443,9.339512,-4.559894,1.675855,-5.794545,5.265169,7.341760],[4.793718,-0.677343,-3.295160,7.974963,-1.889988,-6.778994,6.392507,3.466324,-4.532682,-0.138317,4.091858],[9.337308,-5.823121,-5.788091,7.100879,-7.206464,-9.502904,-7.729644,5.621906,9.155291,8.644961,0.888786],[2.084151,2.530845,-9.074968,9.948842,-7.230967,-3.650329,4.482284,-3.949619,-3.414763,7.512449,5.891086]],[[4.341788,1.383018,6.275370,-0.312312,1.123545,6.257459,-7.137725,2.824070,-8.645162,-4.114680,-4.841658],[4.468470,4.378643,3.755463,-4.736914,-3.049761,4.319326,8.455379,3.373741,8.108162,3.921920,1.440476],[-8.714674,5.981921,-8.556805,1.774441,6.079847,-8.987992,-1.409813,6.912522,-3.839543,1.791602,8.901055],[-6.212562,-8.683317,-9.349101,1.874883,2.676752,-6.227324,-2.082383,7.495335,7.167813,-6.750212,7.993709],[4.388059,1.203914,-5.831417,1.220321,7.029692,-9.862515,-2.502022,5.345364,-6.422143,6.683170,-1.950570],[-2.270974,-2.266985,-6.432943,7.163602,0.119327,5.904917,-0.475062,5.424791,9.143112,-0.697510,1.381497],[-5.116495,-1.393203,8.581734,7.179626,9.730487,6.776503,1.891081,-3.530054,9.251423,0.300488,-7.192542],[5.793826,-7.880984,9.347882,-1.998720,6.744421,7.117422,-6.295339,8.312510,-9.724472,4.642662,-3.758081],[-6.852684,9.674266,6.380912,-6.189634,-7.040620,5.857825,-2.454153,6.952643,0.879912,-4.206761,-9.602844],[-3.534819,-1.523408,-6.926413,-2.480722,8.477381,9.547665,1.856486,7.723035,4.924379,5.932054,-7.069371]],[[6.315194,-1.245704,-1.535697,7.351527,4.921226,8.693730,1.309218,9.361122,-4.573878,-6.943658,3.047341],[-4.817194,5.116646,7.153899,4.641223,-2.450492,2.776553,6.494394,0.315874,6.598763,-3.463997,5.226591],[-9.519199,-8.969256,4.943182,1.807928,-9.619972,8.564174,2.633287,-1.169061,9.697569,9.261695,2.561086],[-3.581145,3.061156,-3.911369,-7.837091,1.493439,-3.119185,-2.907714,-1.392380,6.946265,3.094271,-4.600840],[1.934528,5.301530,-8.417026,2.371430,-0.081391,-3.365291,3.131644,8.007961,-6.479680,3.909416,-6.083123],[-1.212921,3.400812,7.680459,9.679765,4.965369,-4.689881,4.318150,9.133653,9.770585,-4.416250,2.927093],[-1.607189,-6.881173,-3.444121,2.663963,6.486669,2.023587,5.890897,7.638717,6.044711,8.552942,-1.681855],[-0.676298,-4.774334,4.452639,9.213352,-3.199825,6.928088,0.882093,-7.568750,2.829391,-0.317559,-2.187223],[5.490551,-9.490391,-5.055780,6.448325,-9.078291,-7.005139,8.353991,-0.867517,1.970581,-8.016790,2.152847],[-0.170594,-4.867174,1.659718,-7.394507,8.811579,7.191453,-2.239766,9.327679,-0.852749,7.884772,-3.951533]],[[-4.821638,-3.713299,-6.450763,8.183055,-0.948428,8.868158,1.930554,5.058663,3.774080,7.753327,5.826450],[-4.084425,6.042236,-0.585542,-8.494055,5.928838,8.861151,-0.687767,-6.931621,1.447440,6.584891,-4.883352],[4.527801,-9.535920,-0.587042,-5.844033,-7.837181,-4.727284,7.485345,-8.425522,-8.754615,6.602553,0.596153],[1.130572,7.703332,-1.672347,1.898949,9.815750,5.834350,7.304144,5.027391,2.756243,2.742931,-7.396629],[-6.034553,-0.270341,-1.817976,6.618366,1.105551,-8.940677,2.122233,4.665040,8.872115,-7.874190,-0.389492],[-5.836267,5.342646,2.280164,6.779301,6.848053,1.422626,-2.634327,7.438607,4.479597,-3.287477,0.298528],[5.841051,6.757292,3.918734,7.435121,1.478900,-2.943967,3.305417,8.451167,1.874648,-1.336709,-0.444962],[-0.290458,-0.725061,-4.587958,2.232672,3.893868,-6.337390,5.437810,-4.695457,-7.219285,-9.979784,-0.887861],[-8.990118,9.088716,-4.167138,-6.994086,-8.647233,5.474677,7.604757,-4.651340,2.252511,2.730683,-1.560808],[-3.964082,1.000356,-5.924957,0.867478,2.254862,2.368998,5.177880,-4.933804,-3.181292,-5.644713,-3.216089]],[[-7.787460,4.489091,-8.474439,0.071039,0.656669,7.375799,-8.544086,1.264001,-9.330837,-8.103545,0.496947],[1.886921,7.369082,-4.418863,6.985109,9.657591,7.705262,-1.325334,3.913905,-5.111991,0.809614,5.860679],[-4.626170,9.303072,5.509945,-3.771286,7.665780,1.461440,8.072906,-5.061591,-7.631702,-6.089881,-4.547065],[5.828626,8.074960,4.978424,1.665900,-9.248044,4.645799,-1.133162,5.975544,4.084376,-5.540251,-5.868877],[-3.097957,6.888373,-2.702718,3.818981,-9.066569,6.214051,-1.994632,-1.140208,9.292795,4.819182,-1.461182],[-7.735860,-3.832581,-9.319219,-3.793026,0.250629,7.575676,9.776398,-9.859915,6.834881,6.722658,-0.512444],[6.543157,6.906820,-6.612070,4.370560,-7.106764,-8.196477,8.101227,3.997864,7.158624,-5.514613,0.943479],[5.895438,-2.688034,-0.807651,6.595193,-6.908686,1.106789,4.090379,-7.851314,-0.207938,-0.774607,-5.093723],[1.608376,2.841357,-3.761258,-2.349306,8.249021,2.857112,-3.942538,8.626922,9.338652,-3.700093,4.283839],[-5.029176,-3.598222,-0.235859,4.115263,-1.247217,6.683017,-1.221969,4.096223,3.140418,-3.586303,6.552534]],[[1.987621,-7.799327,-9.079703,3.005248,-8.567879,7.288197,3.610557,-3.484202,-4.735517,5.237764,-5.075007],[4.750111,-9.116081,8.073718,-0.551883,7.229543,1.644983,-5.505672,-2.717411,-1.915942,4.487516,0.608963],[9.002383,6.520500,-3.555921,0.377149,-6.610121,4.823551,-6.821571,5.266044,2.974521,-1.984255,-8.001241],[-0.689386,-5.124796,-7.674488,-3.624665,-3.148201,3.071013,-8.226911,1.981208,-9.128445,-6.299656,-4.292899],[-8.830686,9.186588,5.107865,6.874099,-3.299851,-8.543879,-1.253062,-2.050766,9.913686,-4.767370,9.670541],[-0.075087,5.072317,-6.148199,-9.054651,-7.597538,4.209982,-1.573147,6.072817,-9.406027,0.265189,-1.424389],[8.128622,2.566072,-2.059986,9.792534,-3.210777,-0.667469,9.724541,3.168914,7.641918,-0.500744,-6.900585],[0.039159,-0.700024,9.466095,9.466529,5.715316,8.507405,2.582820,1.084886,3.343187,-1.444063,4.413775],[-9.194462,-1.428998,-4.425258,-4.526241,9.492416,-7.431069,-0.877459,-7.809019,6.095986,-0.100920,-4.456684],[-9.092943,7.312757,3.793452,4.204068,1.477651,7.174359,-9.025471,-3.656900,-4.949945,-3.200969,-2.726057]],[[7.301297,-7.910743,-8.279225,1.615336,-1.362405,-0.425852,2.194657,-5.834707,-1.997492,-0.668623,3.683334],[6.116805,-1.460800,8.515374,-1.330331,9.716592,-0.874645,3.692494,-5.513812,4.905701,-4.690462,-7.739888],[9.403337,6.341984,-7.852903,-5.466277,-0.901662,-1.874749,8.733416,9.058695,7.878105,3.260648,9.958184],[-3.359602,4.324572,-9.724216,-8.969266,9.110624,7.677714,1.758899,6.359837,7.555924,-7.268996,-2.832960],[-9.341010,3.049435,-3.139047,2.518829,4.553124,7.798790,-9.941764,6.319713,6.797403,-8.880601,4.459104],[-3.743720,5.321237,-7.735040,3.413180,-4.345069,-5.790140,4.015758,-6.730329,-8.907451,2.776111,0.483326],[-7.079499,-7.643356,0.381986,-6.652547,-3.487116,7.417670,2.111252,3.049622,-8.413521,-2.491288,-9.530348],[8.920079,-0.966741,-3.090372,-5.571999,2.878872,-9.649955,-9.975998,4.817498,-3.618686,1.891371,1.592277],[5.140947,-6.677273,-7.971014,3.737189,-3.140405,-3.458582,-4.050882,-8.427276,-0.589075,3.419566,0.229148],[-5.475151,0.661340,6.287609,1.171970,2.244615,3.119215,-8.894745,-8.785918,-4.229759,8.485067,4.456270]],[[-0.330124,-5.819341,-0.680668,0.226620,2.118279,-7.090791,7.570129,4.316504,-4.683087,1.384144,-8.403895],[-2.719386,7.193995,-9.316494,0.345025,2.883846,3.334633,-2.417979,6.961634,-8.793783,0.180052,8.291459],[-7.070136,8.758450,9.351646,-2.446967,1.276650,-7.431254,-8.618068,8.323834,0.486619,6.089700,-5.582655],[-7.956160,2.219628,-8.079476,0.284371,9.298500,-5.689102,-4.084512,-5.981327,-7.416861,5.723228,-6.600153],[8.325011,0.365349,-8.274572,2.261012,-1.468618,7.751110,-4.364354,9.467109,7.012906,2.640925,1.493265],[-9.299992,5.538997,7.928755,4.195742,-4.942157,9.212468,6.126119,-0.125334,-9.076960,-3.193103,-9.860154],[8.560269,-3.798245,9.597293,1.864232,-0.817181,-9.168284,-8.884442,-2.021262,2.024835,-0.442002,5.935828],[2.443522,-7.461780,-6.142050,4.353921,-5.996578,-1.864660,4.454240,-5.653201,4.455305,-9.837092,-2.211406],[6.966513,0.895699,4.746435,-1.614892,3.760428,-1.079881,0.336298,0.676080,-6.157991,-3.382568,-3.662933],[-8.805999,-7.781373,2.074621,8.370576,6.089331,2.687870,9.279904,-7.419449,8.096499,9.098301,6.821993]],[[-3.458899,7.553024,-2.330537,-8.845522,-9.860097,-6.401648,-1.028282,2.779808,4.922712,-8.923251,8.198658],[-4.016119,2.967812,-7.607034,6.419885,-8.633658,-7.321363,-9.060683,3.012911,7.108822,7.479964,-6.248592],[-1.386750,2.384558,-2.907629,-8.746117,-6.919435,8.475468,-1.229933,-2.560650,9.747614,1.764802,7.266937],[2.752505,-0.729206,-7.684963,-3.099900,9.802390,-6.028943,-7.873626,9.940245,3.725009,7.078103,2.953696],[-7.288426,-3.194181,-5.143430,7.475654,4.022155,-4.325032,1.301173,-6.085464,4.983625,-7.343562,-2.963856],[-4.827179,5.187507,7.274178,-3.571139,-2.985662,5.256097,6.226744,5.871547,3.493274,0.625061,-0.231813],[-4.902666,-6.617973,8.876478,2.684198,3.982763,5.219343,4.501696,-2.917627,4.854768,-9.035839,0.612246],[7.974656,-9.702519,0.164176,-3.175527,9.337616,-2.959038,7.136393,-5.169331,-9.294479,-3.932253,1.432114],[-4.991150,-7.996711,-7.604138,-0.461993,-0.495851,-7.237349,-1.259368,-4.714674,-1.335321,4.371659,7.294212],[-0.132462,-7.155048,0.018767,-5.815074,-2.463686,-7.877857,-1.807697,-4.781613,-3.227820,-3.415180,1.221460]]], dtype = "float32")#candidate|4887|(9, 10, 11)|const|float32
bop_4888 = relay.floor_mod(var_4886.astype('float32'), const_4887.astype('float32')) # shape=(9, 10, 11)
var_4896 = relay.var("var_4896", dtype = "float32", shape = (16, 6, 14))#candidate|4896|(16, 6, 14)|var|float32
bop_4897 = relay.add(var_4886.astype('uint32'), var_4896.astype('uint32')) # shape=(16, 6, 14)
output = relay.Tuple([bop_4888,bop_4897,])
output2 = relay.Tuple([bop_4888,bop_4897,])
func_4909 = relay.Function([var_4886,var_4896,], output)
mod['func_4909'] = func_4909
mod = relay.transform.InferType()(mod)
var_4910 = relay.var("var_4910", dtype = "float32", shape = ())#candidate|4910|()|var|float32
var_4911 = relay.var("var_4911", dtype = "float32", shape = (16, 6, 14))#candidate|4911|(16, 6, 14)|var|float32
output = func_4909(var_4910,var_4911,)
func_4912 = relay.Function([var_4910,var_4911,], output)
mutated_mod['func_4912'] = func_4912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_4937 = func_3592_call()
call_4938 = func_3592_call()
func_3522_call = mod.get_global_var('func_3522')
func_3524_call = mutated_mod.get_global_var('func_3524')
call_4942 = relay.TupleGetItem(func_3522_call(relay.reshape(call_4937.astype('uint8'), [13, 15, 11])), 0)
call_4943 = relay.TupleGetItem(func_3524_call(relay.reshape(call_4937.astype('uint8'), [13, 15, 11])), 0)
output = relay.Tuple([call_4937,call_4942,])
output2 = relay.Tuple([call_4938,call_4943,])
func_4955 = relay.Function([], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
output = func_4955()
func_4956 = relay.Function([], output)
mutated_mod['func_4956'] = func_4956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_4981 = relay.TupleGetItem(func_4528_call(), 0)
call_4982 = relay.TupleGetItem(func_4530_call(), 0)
uop_4994 = relay.exp(call_4981.astype('float32')) # shape=(11, 4, 8)
uop_4996 = relay.exp(call_4982.astype('float32')) # shape=(11, 4, 8)
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
var_4998 = relay.var("var_4998", dtype = "int64", shape = (7,))#candidate|4998|(7,)|var|int64
var_4999 = relay.var("var_4999", dtype = "int64", shape = (63,))#candidate|4999|(63,)|var|int64
const_5000 = relay.const([8.030220,0.646365,1.928340,7.685224,9.658419,-8.682159,-9.441706,-0.109960,-6.696939,-9.862445,-0.523852,-3.939147,9.503365,-2.626254,0.402178,6.069083,-3.855071,9.353689,-8.907320,9.609353,0.994227,8.308035,4.959376,-6.796940,-0.944752,5.272584,6.323164,2.249840,-3.464421,-9.365391,4.623658,-3.800817,-3.273496,4.152853,1.789725,-5.956022,4.606889,-4.002420,7.539253,-6.654312,-8.092332,-6.887285,0.206975,-6.419283,-8.646575,4.136831,-1.668696,0.244794,8.726814,6.216467,0.002753,2.519694,-2.571639,7.265723,-1.908808,3.597346,7.435203,0.689813,6.093495,7.313412,-1.480939,5.048203,-4.962404,7.150289,2.709171,-9.718858,-7.925650,6.196077,-9.817323,-1.211966,-0.278652,6.937709,-8.893749,-5.662594,-2.419918,9.569756,-0.215444,2.708640,9.661517,-9.641783,4.325630,2.633394,-5.028325,-5.779116,5.117779,-2.782857,-6.449764,-8.240078,-1.097561,-1.969117,-7.670563,5.580970,-5.607092,1.989618,1.917688,5.961107,8.533513,-8.381943,3.081788,-3.598812,1.344214,0.337357,-5.351829,-3.916059,-2.280852,2.197290,-9.171266,-9.982770,8.881965,-6.500245,4.181461,3.781775,-1.368100,8.078247,7.521239,6.988004,-7.574246,-5.069243,-7.630487,2.314689,-4.022441,3.207892,8.924574,8.529718,0.086863,3.903102,6.461178,5.155993,-9.499324,-1.671934,-1.368849,-1.341022,-4.623789,7.607636,-2.727615,7.431011,9.936671,4.092233,-0.890108,8.034370,5.842396,7.029001,-9.850919,-0.113950,2.858282,-6.854662,-5.858196,-4.203914,5.748000,0.707974,-0.119013,-1.406177,5.033234,-6.078175,2.556810,-9.554281,-6.077962,2.092907,-6.324273,5.212989,-8.628224,-3.691701,-9.859416,3.441548,-5.179412,2.019020,-3.598933,5.859536,-2.608117,6.274139,9.856592,-9.075755,4.332650,-8.723085,2.900496,7.714064,9.289165,1.064074,-0.130071,-6.576669,7.450324,2.239688,0.682789,-7.890984,-7.130346,3.632936,2.208280,6.743425,-5.631994,-4.163722,3.504920,8.205651,5.495279,5.573830,-3.515543,6.114183,6.308426,3.776615,4.766045,-9.433973,4.222033,9.382508,0.570424,-0.437314,0.839361,-6.999258,-2.624256,4.070128,-3.824359,-3.962562,-6.686378,-2.548499,-0.073542,4.533968,0.332900,-9.215133,8.297575,5.654223,-3.984690,-2.054505,5.175949,2.441365,8.243782,4.819456,7.763840,-9.858472,5.312732,3.831788,-6.698857,1.401775,6.921480,-7.421546,-3.003711,1.745366,3.312994,-5.389718,-4.088672,9.706073,-2.991192,6.352124,-8.788924,-0.906019,7.562559,9.677386,-3.911220,4.717513,-3.703536,-5.881409,-7.942289,-0.684860,-0.239132,-1.860763,-0.572903,-0.322238,-9.254852,-0.826070,3.219061,1.090171,-6.325826,-9.966934,3.141944,-1.009237,6.299607,-3.067946,0.145894,-5.291135,0.647856,-4.501111,-0.246351,8.448662,2.509146,6.225298,-9.346432,5.404967,5.321321,7.745806,8.255249,0.441794,-1.413035,-1.004001,-5.594040,6.402961,9.271279,9.172100,-7.778210,3.157034,-3.922289,-1.984781,1.172138,9.067066,5.402055,7.352067,0.528407,-8.894248,1.547850,6.117843,5.128176,7.755439,-1.703474,-0.953319,0.916178,-5.865313,-9.518241,-5.837899,-9.760425,-3.245301,-5.384440,6.838752,-3.328077,-7.351922,-6.907401,2.541778,-8.311811,2.894190,9.832479,-8.740541,4.972635,-5.837289,2.556038,5.509197,9.918419,-3.317477,1.857648,5.332799,6.534639,1.727125,3.735471,0.834716,-7.333821,-1.858570,-0.073849,-8.434054,-9.597200,0.822766,-9.760442,9.576250,-3.279556,1.737882,3.731526,-7.900955,-8.508918,2.508759,-9.957924,-9.040743,5.801436,7.771557,2.639348,6.878518,-2.972798,4.459161,0.485285,-4.785297,-0.552107,3.801477,-2.123314,-4.866851,-6.257815,-9.680068,-4.855166,7.105747,-7.252242,8.258445,-3.369951,1.684571,7.852723,1.478349,7.908710,2.840271,-4.538630,-8.334728,-7.616126,4.287715,-0.881657,4.026390,-1.201930,-7.177831,9.849731,-1.184783,-5.235418,8.706368,2.056669,-2.373318,-2.499968,-7.977319,-5.476078,-8.260871,-1.802743,5.513838,2.367830,1.440535,8.560765,-4.401968,-3.699768,0.342068,-6.389281,-0.713801,9.358249,1.441379,-2.766487,-4.981706,-0.941450,1.037872,1.206757,0.620754,-7.374540,-5.548384,-0.753114,-2.334562,-6.722138,5.615411,-1.033923,-8.190622,-9.627124,-2.477122,4.365527,5.441459,6.862008,-6.670766,-5.991918,7.712361,8.926703,-1.867349,2.740318,-7.087033,-2.168740,-0.686858,1.894536,1.628803,-5.847614,0.142858,-5.669249,3.051996,7.127872,-0.929365,1.549614,-9.120531,-5.343179,-1.386029,-0.117679,8.247066,-1.315202,4.372969,-5.337349,1.119883,-6.560917,-8.745708,-8.321724,-6.859831,-5.903765,5.995194,1.568124,-0.103615,-0.972798,9.093564,6.843842,-4.283224,-5.584413,5.404568,-6.360532,-4.299299,2.183544,3.916261,-9.799267,-3.835403,3.064545,6.232184,8.489397,-8.716338,-8.482169,-4.990571,-5.772831,-0.518605,1.915766,4.938759,-5.219969,-9.266593,-0.359377,3.258514,-8.093473,3.711050,8.728057,-9.717216,-9.562024,0.292752,-7.494367,-1.652941,-8.765455,8.657110,7.784954,0.810264,-6.401839,1.949447,7.957177,-6.362232,-3.346211,2.226660,-5.251537,3.580832,-5.194762,1.161565,-8.682539,2.107001,-1.740961,-6.382817,1.039480,-1.168451,-5.145667,8.426606,-0.980750,9.910959,1.167871,4.123227,-9.813768,2.272195,3.653007,4.640413,-5.553271,-0.389515,0.569827,-6.207782,-5.037600,2.052915,8.546315,-7.608230,-4.311982,-8.794281,6.006502,1.474562,-2.395203,-4.421982,1.528829,-5.274324,6.010961,6.062186,8.651206,0.038064,-7.132599,-9.479922,8.747618,3.417668,-5.775735,-8.427793,6.668692,4.708940,-6.272812,7.489284,3.926790,3.794813,-0.017272,-1.917016,8.400691,1.541326,-1.466315,8.004837,0.327630,5.209232,-4.738365,5.606683,6.408474,-9.027215,-7.372804,2.346057,9.288418,-1.913307,5.344582,0.397352,6.309281,-3.058023,8.319157,0.204415,4.489800,-9.467124,-1.058880,0.327047,5.693119,1.115868,-9.801056,8.796584,-5.741512,8.036902,-9.332981,-6.556190,-2.042110,2.234796,-4.262147,-6.494266,9.420706,3.169296,-6.467765,6.448024,-7.635892,5.429128,-7.820576,-3.767705,9.481967,-2.578508,5.890742,7.955722,-2.441488,7.759479,7.548577,-6.891165,-9.368635,7.413399,-2.620557,-0.906674,2.259882,3.439608,6.584116,-5.787482,-8.325777,-2.537533,0.264134,9.867885,1.613194,-3.910591,-4.318571,3.101555,7.054167,2.717978,-7.057666,-0.989482,4.435723,7.944480,-1.863485,4.868560,-5.190804,-2.916586,2.392320,0.472374,-4.483975,-5.246964,-9.521929,8.802934,-6.419130,-2.960524,5.107516,-4.687020,-5.145784,1.791996], dtype = "float32")#candidate|5000|(640,)|const|float32
var_5001 = relay.var("var_5001", dtype = "float64", shape = (195,))#candidate|5001|(195,)|var|float64
var_5002 = relay.var("var_5002", dtype = "uint64", shape = (624,))#candidate|5002|(624,)|var|uint64
call_4997 = relay.TupleGetItem(func_3808_call(relay.reshape(var_4998.astype('int64'), [7, 1, 1]), relay.reshape(var_4999.astype('int64'), [7, 9, 1]), relay.reshape(const_5000.astype('float32'), [640,]), relay.reshape(var_5001.astype('float64'), [195,]), relay.reshape(var_5002.astype('uint64'), [24, 26]), ), 2)
call_5003 = relay.TupleGetItem(func_3814_call(relay.reshape(var_4998.astype('int64'), [7, 1, 1]), relay.reshape(var_4999.astype('int64'), [7, 9, 1]), relay.reshape(const_5000.astype('float32'), [640,]), relay.reshape(var_5001.astype('float64'), [195,]), relay.reshape(var_5002.astype('uint64'), [24, 26]), ), 2)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
var_5014 = relay.var("var_5014", dtype = "float64", shape = (12, 4))#candidate|5014|(12, 4)|var|float64
call_5013 = func_854_call(relay.reshape(var_5014.astype('float64'), [16, 1, 3]))
call_5015 = func_854_call(relay.reshape(var_5014.astype('float64'), [16, 1, 3]))
func_3292_call = mod.get_global_var('func_3292')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5017 = func_3292_call()
call_5018 = func_3292_call()
func_3522_call = mod.get_global_var('func_3522')
func_3524_call = mutated_mod.get_global_var('func_3524')
call_5032 = relay.TupleGetItem(func_3522_call(relay.reshape(call_5017.astype('uint8'), [13, 15, 11])), 3)
call_5033 = relay.TupleGetItem(func_3524_call(relay.reshape(call_5017.astype('uint8'), [13, 15, 11])), 3)
func_3466_call = mod.get_global_var('func_3466')
func_3469_call = mutated_mod.get_global_var('func_3469')
var_5048 = relay.var("var_5048", dtype = "uint8", shape = (400,))#candidate|5048|(400,)|var|uint8
call_5047 = relay.TupleGetItem(func_3466_call(relay.reshape(var_5048.astype('uint8'), [400, 1])), 8)
call_5049 = relay.TupleGetItem(func_3469_call(relay.reshape(var_5048.astype('uint8'), [400, 1])), 8)
var_5053 = relay.var("var_5053", dtype = "float32", shape = (11, 4, 8))#candidate|5053|(11, 4, 8)|var|float32
bop_5054 = relay.mod(uop_4994.astype('float32'), relay.reshape(var_5053.astype('float32'), relay.shape_of(uop_4994))) # shape=(11, 4, 8)
bop_5057 = relay.mod(uop_4996.astype('float32'), relay.reshape(var_5053.astype('float32'), relay.shape_of(uop_4996))) # shape=(11, 4, 8)
output = relay.Tuple([call_4997,var_4998,var_4999,const_5000,var_5001,var_5002,call_5013,var_5014,call_5017,call_5032,call_5047,var_5048,bop_5054,])
output2 = relay.Tuple([call_5003,var_4998,var_4999,const_5000,var_5001,var_5002,call_5015,var_5014,call_5018,call_5033,call_5049,var_5048,bop_5057,])
func_5064 = relay.Function([var_4998,var_4999,var_5001,var_5002,var_5014,var_5048,var_5053,], output)
mod['func_5064'] = func_5064
mod = relay.transform.InferType()(mod)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mutated_mod.get_global_var('func_5064')
var_5066 = relay.var("var_5066", dtype = "int64", shape = (7,))#candidate|5066|(7,)|var|int64
var_5067 = relay.var("var_5067", dtype = "int64", shape = (63,))#candidate|5067|(63,)|var|int64
var_5068 = relay.var("var_5068", dtype = "float64", shape = (195,))#candidate|5068|(195,)|var|float64
var_5069 = relay.var("var_5069", dtype = "uint64", shape = (624,))#candidate|5069|(624,)|var|uint64
var_5070 = relay.var("var_5070", dtype = "float64", shape = (12, 4))#candidate|5070|(12, 4)|var|float64
var_5071 = relay.var("var_5071", dtype = "uint8", shape = (400,))#candidate|5071|(400,)|var|uint8
var_5072 = relay.var("var_5072", dtype = "float32", shape = (11, 4, 8))#candidate|5072|(11, 4, 8)|var|float32
call_5065 = func_5064_call(var_5066,var_5067,var_5068,var_5069,var_5070,var_5071,var_5072,)
output = call_5065
func_5073 = relay.Function([var_5066,var_5067,var_5068,var_5069,var_5070,var_5071,var_5072,], output)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_5154 = relay.TupleGetItem(func_3141_call(), 0)
call_5155 = relay.TupleGetItem(func_3143_call(), 0)
func_4591_call = mod.get_global_var('func_4591')
func_4594_call = mutated_mod.get_global_var('func_4594')
const_5170 = relay.const([-6.432279,1.383912,0.369125,-0.981485,-4.789194,-0.719425,-7.502107,-2.554843,-6.586552,2.470279,4.895718,7.722200,6.220811,-9.465525,1.720402,-8.581473,0.798514,3.726906,-5.693506,-6.610156,-5.747691,4.377059,0.396382,5.996295,6.655865,-8.914555,-9.979628], dtype = "float32")#candidate|5170|(27,)|const|float32
call_5169 = relay.TupleGetItem(func_4591_call(relay.reshape(const_5170.astype('float32'), [9, 3])), 1)
call_5171 = relay.TupleGetItem(func_4594_call(relay.reshape(const_5170.astype('float32'), [9, 3])), 1)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_5173 = relay.const([-2.144842,9.538185,-1.158262,5.360373,-9.731098,-9.681098,-7.233267,-5.040676,-1.861768,-2.254205,-1.462544,-7.913131,-6.993162,0.147226,2.471746,-1.683224,7.384814,5.391380,2.700772,-8.093098,0.570642,5.518082,0.994573,4.218258,-1.269709,-7.718614,-8.178224,8.112981,9.715188,-8.150593,0.693824,-0.022921,-7.811667,-1.505169,-0.581736,7.016594,3.349135,4.297997,-5.212477,-9.360522,-9.169065,-6.258140,-9.565080,9.385389,-4.322769,-8.883186,-7.262595,-7.498496,-2.762318,-4.629064,9.373015,6.340073,8.742754,0.496587], dtype = "float64")#candidate|5173|(54,)|const|float64
call_5172 = relay.TupleGetItem(func_1434_call(relay.reshape(const_5173.astype('float64'), [9, 2, 3])), 0)
call_5174 = relay.TupleGetItem(func_1437_call(relay.reshape(const_5173.astype('float64'), [9, 2, 3])), 0)
output = relay.Tuple([call_5154,call_5169,const_5170,call_5172,const_5173,])
output2 = relay.Tuple([call_5155,call_5171,const_5170,call_5174,const_5173,])
func_5175 = relay.Function([], output)
mod['func_5175'] = func_5175
mod = relay.transform.InferType()(mod)
output = func_5175()
func_5176 = relay.Function([], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mod.get_global_var('func_4955')
func_4956_call = mutated_mod.get_global_var('func_4956')
call_5191 = relay.TupleGetItem(func_4955_call(), 1)
call_5192 = relay.TupleGetItem(func_4956_call(), 1)
uop_5209 = relay.log(call_5191.astype('float64')) # shape=(13, 15, 11)
uop_5211 = relay.log(call_5192.astype('float64')) # shape=(13, 15, 11)
output = relay.Tuple([uop_5209,])
output2 = relay.Tuple([uop_5211,])
func_5218 = relay.Function([], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
output = func_5218()
func_5219 = relay.Function([], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_5226 = relay.TupleGetItem(func_4528_call(), 0)
call_5227 = relay.TupleGetItem(func_4530_call(), 0)
output = relay.Tuple([call_5226,])
output2 = relay.Tuple([call_5227,])
func_5233 = relay.Function([], output)
mod['func_5233'] = func_5233
mod = relay.transform.InferType()(mod)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5233_call = mutated_mod.get_global_var('func_5233')
call_5234 = func_5233_call()
output = call_5234
func_5235 = relay.Function([], output)
mutated_mod['func_5235'] = func_5235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5269 = relay.var("var_5269", dtype = "int8", shape = ())#candidate|5269|()|var|int8
const_5270 = relay.const([[[6,10,-2,-6,10,4,-4,-7,-4,-6,10,-1,-6,-8],[7,-6,5,-8,8,-6,1,-8,8,5,-6,10,6,5]],[[-2,-7,-2,-1,-1,-4,4,-9,9,-1,5,-1,-8,5],[2,6,-10,2,-5,8,3,-7,9,3,5,5,9,-9]],[[8,-9,-3,-4,-7,6,1,-8,-4,-1,-10,3,6,5],[5,-4,-9,3,9,6,6,-8,6,1,-2,6,-5,-7]],[[-8,-10,-8,8,-9,-9,10,6,9,-3,1,-6,-6,-5],[1,6,6,-2,10,10,-1,-2,4,9,4,-8,-7,8]],[[-7,6,6,-7,8,5,-9,1,-3,3,1,-1,-5,1],[-5,7,3,10,-7,-10,-4,7,9,3,1,1,9,8]],[[-3,6,-10,-10,10,2,4,-4,-8,-2,-7,1,5,3],[-4,-8,1,-4,8,-4,3,6,8,6,9,5,6,-5]],[[5,-5,-8,-5,6,10,5,-2,9,-6,8,-5,1,-4],[-3,10,-8,9,7,-6,5,-8,-9,-1,-10,7,10,-4]],[[1,9,-8,4,-3,1,6,4,-3,-6,-3,-5,3,-1],[-6,-5,5,-3,-5,1,9,-2,1,-10,6,-9,10,-2]],[[-7,-7,1,2,-8,-1,3,4,5,-10,-10,1,4,-7],[-5,9,-5,5,-10,2,-3,4,-4,-9,-4,5,7,4]],[[-5,8,-1,2,-5,9,-5,7,3,-3,10,6,-10,2],[7,1,-6,-4,5,-2,-4,-8,-2,-6,-6,2,10,4]],[[10,-9,1,-1,-8,5,-2,6,9,-6,10,-6,2,4],[7,-3,-5,4,-10,-4,-9,-4,7,-10,3,-7,-9,-1]],[[2,-4,-5,-8,9,8,-6,-10,3,-9,-3,7,4,-10],[7,-3,-9,2,5,-6,-1,-6,7,3,1,10,-8,9]],[[-1,6,-2,-8,7,9,-1,6,1,8,-9,10,4,3],[7,5,-3,-5,-9,10,-7,8,5,-10,8,-6,1,-9]]], dtype = "int8")#candidate|5270|(13, 2, 14)|const|int8
bop_5271 = relay.subtract(var_5269.astype('int8'), const_5270.astype('int8')) # shape=(13, 2, 14)
output = relay.Tuple([bop_5271,])
output2 = relay.Tuple([bop_5271,])
func_5276 = relay.Function([var_5269,], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5277 = relay.var("var_5277", dtype = "int8", shape = ())#candidate|5277|()|var|int8
func_5276_call = mutated_mod.get_global_var('func_5276')
call_5278 = func_5276_call(var_5277)
output = call_5278
func_5279 = relay.Function([var_5277], output)
mutated_mod['func_5279'] = func_5279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5284 = relay.var("var_5284", dtype = "float32", shape = (1, 13, 1))#candidate|5284|(1, 13, 1)|var|float32
var_5285 = relay.var("var_5285", dtype = "float32", shape = (7, 13, 4))#candidate|5285|(7, 13, 4)|var|float32
bop_5286 = relay.less_equal(var_5284.astype('bool'), var_5285.astype('bool')) # shape=(7, 13, 4)
output = bop_5286
output2 = bop_5286
func_5292 = relay.Function([var_5284,var_5285,], output)
mod['func_5292'] = func_5292
mod = relay.transform.InferType()(mod)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5292_call = mutated_mod.get_global_var('func_5292')
var_5294 = relay.var("var_5294", dtype = "float32", shape = (1, 13, 1))#candidate|5294|(1, 13, 1)|var|float32
var_5295 = relay.var("var_5295", dtype = "float32", shape = (7, 13, 4))#candidate|5295|(7, 13, 4)|var|float32
call_5293 = func_5292_call(var_5294,var_5295,)
output = call_5293
func_5296 = relay.Function([var_5294,var_5295,], output)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_5301 = func_4019_call()
call_5302 = func_4019_call()
output = relay.Tuple([call_5301,])
output2 = relay.Tuple([call_5302,])
func_5303 = relay.Function([], output)
mod['func_5303'] = func_5303
mod = relay.transform.InferType()(mod)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5304 = func_5303_call()
output = call_5304
func_5305 = relay.Function([], output)
mutated_mod['func_5305'] = func_5305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_5318 = relay.TupleGetItem(func_4781_call(), 0)
call_5319 = relay.TupleGetItem(func_4783_call(), 0)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
const_5321 = relay.const([-6.908043,-4.254531,-9.968247,8.576092,0.644724,4.228679,2.711827,4.918465,1.289000,-4.644546,9.596536,4.877880,6.170217,7.580102,3.450025,-2.578958,9.995555,-2.168173,5.818156,-2.394139,-7.432520,5.677993,9.582210,8.637630,9.276095,-1.720626,-5.960061], dtype = "float32")#candidate|5321|(27,)|const|float32
call_5320 = relay.TupleGetItem(func_212_call(relay.reshape(const_5321.astype('float32'), [1, 3, 9])), 0)
call_5322 = relay.TupleGetItem(func_215_call(relay.reshape(const_5321.astype('float32'), [1, 3, 9])), 0)
output = relay.Tuple([call_5318,call_5320,const_5321,])
output2 = relay.Tuple([call_5319,call_5322,const_5321,])
func_5341 = relay.Function([], output)
mod['func_5341'] = func_5341
mod = relay.transform.InferType()(mod)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mutated_mod.get_global_var('func_5341')
call_5342 = func_5341_call()
output = call_5342
func_5343 = relay.Function([], output)
mutated_mod['func_5343'] = func_5343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5349 = relay.var("var_5349", dtype = "float32", shape = (5, 13, 10))#candidate|5349|(5, 13, 10)|var|float32
uop_5350 = relay.atanh(var_5349.astype('float32')) # shape=(5, 13, 10)
uop_5362 = relay.erf(uop_5350.astype('float64')) # shape=(5, 13, 10)
uop_5378 = relay.log2(uop_5362.astype('float32')) # shape=(5, 13, 10)
output = relay.Tuple([uop_5378,])
output2 = relay.Tuple([uop_5378,])
func_5380 = relay.Function([var_5349,], output)
mod['func_5380'] = func_5380
mod = relay.transform.InferType()(mod)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5381 = relay.var("var_5381", dtype = "float32", shape = (5, 13, 10))#candidate|5381|(5, 13, 10)|var|float32
func_5380_call = mutated_mod.get_global_var('func_5380')
call_5382 = func_5380_call(var_5381)
output = call_5382
func_5383 = relay.Function([var_5381], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_5393 = relay.TupleGetItem(func_5175_call(), 3)
call_5394 = relay.TupleGetItem(func_5176_call(), 3)
var_5407 = relay.var("var_5407", dtype = "float64", shape = (9, 2, 3))#candidate|5407|(9, 2, 3)|var|float64
bop_5408 = relay.logical_or(call_5393.astype('bool'), relay.reshape(var_5407.astype('bool'), relay.shape_of(call_5393))) # shape=(9, 2, 3)
bop_5411 = relay.logical_or(call_5394.astype('bool'), relay.reshape(var_5407.astype('bool'), relay.shape_of(call_5394))) # shape=(9, 2, 3)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_5421 = relay.TupleGetItem(func_4528_call(), 1)
call_5422 = relay.TupleGetItem(func_4530_call(), 1)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5442 = func_3666_call()
call_5443 = func_3666_call()
func_4499_call = mod.get_global_var('func_4499')
func_4504_call = mutated_mod.get_global_var('func_4504')
var_5453 = relay.var("var_5453", dtype = "uint8", shape = (14, 1))#candidate|5453|(14, 1)|var|uint8
call_5452 = relay.TupleGetItem(func_4499_call(relay.reshape(call_5421.astype('bool'), [13, 15, 11]), relay.reshape(call_5421.astype('float32'), [13, 15, 11]), relay.reshape(var_5453.astype('uint8'), [1, 14]), ), 6)
call_5454 = relay.TupleGetItem(func_4504_call(relay.reshape(call_5421.astype('bool'), [13, 15, 11]), relay.reshape(call_5421.astype('float32'), [13, 15, 11]), relay.reshape(var_5453.astype('uint8'), [1, 14]), ), 6)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_5455 = relay.TupleGetItem(func_4781_call(), 0)
call_5456 = relay.TupleGetItem(func_4783_call(), 0)
output = relay.Tuple([bop_5408,call_5421,call_5442,call_5452,var_5453,call_5455,])
output2 = relay.Tuple([bop_5411,call_5422,call_5443,call_5454,var_5453,call_5456,])
func_5472 = relay.Function([var_5407,var_5453,], output)
mod['func_5472'] = func_5472
mod = relay.transform.InferType()(mod)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5472_call = mutated_mod.get_global_var('func_5472')
var_5474 = relay.var("var_5474", dtype = "float64", shape = (9, 2, 3))#candidate|5474|(9, 2, 3)|var|float64
var_5475 = relay.var("var_5475", dtype = "uint8", shape = (14, 1))#candidate|5475|(14, 1)|var|uint8
call_5473 = func_5472_call(var_5474,var_5475,)
output = call_5473
func_5476 = relay.Function([var_5474,var_5475,], output)
mutated_mod['func_5476'] = func_5476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4020_call = mutated_mod.get_global_var('func_4020')
call_5496 = func_4019_call()
call_5497 = func_4019_call()
output = call_5496
output2 = call_5497
func_5530 = relay.Function([], output)
mod['func_5530'] = func_5530
mod = relay.transform.InferType()(mod)
mutated_mod['func_5530'] = func_5530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5530_call = mutated_mod.get_global_var('func_5530')
call_5531 = func_5530_call()
output = call_5531
func_5532 = relay.Function([], output)
mutated_mod['func_5532'] = func_5532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mod.get_global_var('func_4955')
func_4956_call = mutated_mod.get_global_var('func_4956')
call_5547 = relay.TupleGetItem(func_4955_call(), 0)
call_5548 = relay.TupleGetItem(func_4956_call(), 0)
output = call_5547
output2 = call_5548
func_5559 = relay.Function([], output)
mod['func_5559'] = func_5559
mod = relay.transform.InferType()(mod)
output = func_5559()
func_5560 = relay.Function([], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5695 = relay.var("var_5695", dtype = "float64", shape = ())#candidate|5695|()|var|float64
var_5696 = relay.var("var_5696", dtype = "float64", shape = (7, 15, 5))#candidate|5696|(7, 15, 5)|var|float64
bop_5697 = relay.floor_divide(var_5695.astype('float64'), var_5696.astype('float64')) # shape=(7, 15, 5)
bop_5712 = relay.multiply(var_5695.astype('uint32'), bop_5697.astype('uint32')) # shape=(7, 15, 5)
func_3981_call = mod.get_global_var('func_3981')
func_3985_call = mutated_mod.get_global_var('func_3985')
const_5718 = relay.const([False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False], dtype = "bool")#candidate|5718|(2145,)|const|bool
call_5717 = relay.TupleGetItem(func_3981_call(relay.reshape(const_5718.astype('bool'), [13, 15, 11]), relay.reshape(const_5718.astype('bool'), [13, 15, 11]), ), 2)
call_5719 = relay.TupleGetItem(func_3985_call(relay.reshape(const_5718.astype('bool'), [13, 15, 11]), relay.reshape(const_5718.astype('bool'), [13, 15, 11]), ), 2)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5726 = func_3592_call()
call_5727 = func_3592_call()
uop_5736 = relay.asin(const_5718.astype('float32')) # shape=(2145,)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5751 = func_3666_call()
call_5752 = func_3666_call()
const_5758 = relay.const([-7.868129,5.906133,-0.778051,4.359309,-4.619530,2.421130,-6.138420,-1.194720,-5.943804,-6.466671,-3.868233,-5.805910,4.670546,-6.344048,-1.597447,-0.680448,5.832037,-8.679310,-0.727321,8.170264,7.393860,3.272524,-7.970942,5.793720,-2.041075,-0.961756,-7.389394,3.122979,-2.484111,-6.825113,3.090425,6.721017,-9.185265,-6.548702,-7.370373,0.512905,-6.014021,1.237177,-7.906416,9.165327,-8.117156,-5.549826,8.377650,-7.830421,2.738888,-5.923782,7.358617,7.148804,5.051613,0.628533,-4.423116,-4.867824,7.934611,9.615012,-4.067183,5.677778,9.586931,7.713619,0.485403,-4.449957,-3.520271,-9.719184,-5.175239,8.600292,7.817864,2.034881,-4.622137,7.439826,0.026988,5.268472,5.813962,-1.557630,-5.919636,7.128639,-9.350769,-8.435310,4.017894,-5.693738,5.987763,6.489376,-2.960300,-9.426472,-2.574132,0.545927,-2.890928,2.334910,9.082963,-8.421635,-0.028762,3.805477,0.550136,8.960302,-0.751786,8.520194,-3.979296,1.985558,4.465239,7.794679,7.871672,-9.974649,2.086660,5.931793,1.170405,9.047695,-4.251736,-4.865453,-5.126735,-9.269426,-4.480067,-7.621755,-9.942579,8.185203,0.272332,-6.756425,2.277794,3.943320,-6.116811,2.833028,-5.529207,8.284085,-8.953873,3.490702,-4.282495,1.856275,6.447053,5.573837,6.313024,6.069486,2.515731,1.963122,-6.788842,7.306730,-4.265458,0.715903,3.033449,4.347407,-1.460102,0.346243,-0.936443,1.168363,-7.110176,9.374162,-5.437637,0.352691,-4.085523,-3.239857,4.453599,-2.851438,1.290784,-4.728095,-0.696959,-1.356356,-1.140646,5.754520,-1.659275,-2.677320,1.151678,6.293394,3.998216,5.118997,4.794909,-7.645816,-1.510233,-6.378813,-8.705094,-3.310491,-1.617081,-7.379439,-3.180645,5.774432,-7.893939,-5.908604,-7.100755,3.312597,-4.090645,6.769308,0.160141,-4.691232,-3.664140,6.610307,1.687506,-0.428703,-6.782903,4.323926,-2.554366,9.661306,-7.587352,0.234686,7.692384,-3.544129,3.190999,-5.873949,-5.626917,-8.377127,0.962321,7.909827,-4.417666,6.853151,-7.874688,2.101711,6.077644,-5.183481,-7.480365,-5.683804,-3.953910,3.210609,6.443148,-4.091373,-6.439730,-4.777590,-2.278600,4.959705,8.800446,1.204695,8.941158,1.792938,-6.332475,-6.880178,7.814498,-6.195587,-0.245784,8.121218,0.798640,8.984836,7.615659,-9.485820,4.336905,-9.808453,-9.667214,5.360738,-6.513576,-3.022518,-4.014332,-7.290610,-1.739740,1.734357,-4.148042,-5.225216,0.798587,-2.145224,5.507959,-7.783981,-3.819856,-2.576072,8.587954,-5.484659,-5.847121,-6.953940,7.799581,-7.435049,7.988602,-6.883287,-0.429284,-3.727834,-3.533360,-1.697961,6.462379,0.511270,8.289145,-7.497596,3.387496,0.694752,0.496610,-5.137804,-8.911936,-8.539545,-8.253085,5.143905,3.564672,-2.199056,-1.798923,-3.458997,-6.376619,9.084405,1.525327,-7.450535,-0.499115,-6.860678,4.733393,5.024082,5.676367,2.929417,-9.351350,-8.472129,-1.581956,-3.853014,-3.385421,-7.846941,-9.199376,-0.924743,5.441356,-8.873517,-9.254518,-5.192745,6.156680,7.701943,5.016315,-5.536026,-4.516342,-4.761456,-1.042119,6.525342,2.694701,3.959489,-5.506971,4.387337,-8.932338,5.194830,-3.469562,-1.680967,3.835810,-5.497451,-4.262514,4.338292,1.289861,-7.900468,-8.047909,-0.152414,4.228813,6.668836,-3.967179,-2.001010,-3.726423,8.188792,4.650730,-7.359400,-5.741037,8.086170,4.076376,1.898502,-4.236793,-0.971559,9.445623,-7.540337,-4.707392,-2.562780,-3.306310,5.869425,1.086925,6.115138,-3.032132,3.773978,-7.230950,-7.662807,5.270765,5.165613,4.569053,-5.588733,-1.028127,8.905553,-3.643475,4.995709,-3.471033,7.113215,-2.886630,-7.166842,-7.199418,1.758242,8.616039,2.249036,5.194333,-7.737134,-5.936921,8.834119,-9.221157,-1.872040,5.508310,7.782358,-6.050829,5.595853,-3.898454,-1.110302,5.631399,1.154531,3.212526,-6.086554,5.452218,4.622766,4.525505,3.149449,3.823312,5.824139,8.928278,9.247923,4.054594,-7.710415,-6.224425,0.099976,-2.441839,-0.152390,5.115651,-2.561231,-5.180600,-3.216111,6.739324,1.414420,7.474699,1.658914,2.910634,6.717731,6.397682,-3.337632,-0.543601,3.258465,1.865472,-1.083363,-0.503231,7.348300,-9.322448,8.430752,3.308870,-1.650753,6.013273,-2.125404,-5.594716,4.361207,0.965650,-2.866923,7.946858,1.845764,5.693496,1.608828,-9.875077,-3.376826,3.079259,-3.171570,-8.178796,3.603014,-0.360475,2.620038,1.774926,-0.024616,-2.477456,-0.224239,9.874651,-9.721376,6.781382,-9.952947,4.081140,-3.298844,-7.300782,7.962976,-3.596353,-0.945824,-7.139648,4.647555,0.377014,0.496572,-6.219941,9.478268,7.572274,4.399771,-8.085764,-8.668239,-5.351273,-8.294224,-9.176285,-8.762397,-3.197192,0.911422,-3.004491,9.967153,3.289012,2.559270,-2.423608,7.675604,2.655938,0.568026,-3.155107,4.408621,-3.678191,-3.571856,8.000460,4.653078,2.082428,5.882924,-6.801364,0.087690,7.394093,7.285244,-4.894461,0.502494,0.520257,4.881057,-9.835483,0.415250,-9.540372,8.961607,-2.082730,1.752514,-1.873309,9.799347,3.569444,-9.079922,1.981961,5.086855,-8.760769,4.708640,4.311556,2.117150,4.665972,-3.999734,-6.804518,-5.607271,7.330036,0.468970,-1.317280,-2.491241,4.796226,-6.478146,-3.456569,-4.117945,-1.291025,8.945784,-5.808805,3.959064,8.557811,2.469750,-7.746981,-1.627801,-7.240524,7.229330,-4.253714,-0.386225,-2.927026,-0.470657,-1.154831,1.942684,2.790490,-6.327742,2.999137,3.145680,-7.971699,2.311192,-9.250329,-1.492597,8.264083,5.897998,5.789393,8.571447,-4.079850,-7.940866,5.902125,3.410196,-1.423421,-9.257297,-6.990172,-9.347638,1.620912,5.747716,2.837968,-0.571842,1.101521,-0.350910,7.898631,-8.160088,-5.026088,9.463964,-3.048041,-6.555249,-0.121077,-4.004654,-1.728304,4.197779,-8.665180,-6.341631,-2.444106,-4.121766,-3.313689,-1.630869,0.800523,-1.454285,-8.383237,9.724477,-6.835947,8.329610,-5.861484,3.446187,3.850180,-7.657499,5.912836,1.565293,8.842042,9.331959,4.672110,-6.871261,-1.666541,-6.509289,-0.425865,9.077233,7.144971,2.322340,6.396317,-9.581803,-6.315458,-9.547895,7.432366,5.134140,-9.595407,2.419738,7.955504,-9.109749,-5.734646,-5.012058,-9.123128,3.453416,-3.711729,8.123159,-6.777706,-2.709338,4.537975,-6.342095,8.653738,5.028285,9.085491,6.648988,-1.228615,-4.478450,-6.384006,7.271775,8.093035,-0.296196,-1.437011,7.432339,6.723599,6.451657,-6.128622,-7.531892,6.930986,4.795820,-8.348406,5.666554,-7.942840,9.436847,-2.252408,0.497685,2.578586,-9.665110,-5.456970,-8.984561,6.682418,-7.112239,-4.487670,9.065563,-2.834549,-9.568295,9.465447,-2.983478,4.619860,-6.178628,-8.214394,0.082989,1.974681,2.479087,1.530831,-0.546129,2.915520,6.630573,4.377576,-2.297456,9.910067,-6.089999,-0.429103,9.940925,-6.382101,-8.402434,1.060309,-3.995543,9.232357,-1.556389,-2.393453,0.161387,9.874933,5.365301,-2.978857,8.123775,-9.422664,-9.854754,-7.012889,-3.433286,-0.562513,6.868843,2.445809,-7.866270,-5.715233,3.277874,8.969575,-4.439046,5.097500,9.946552,8.484919,-6.307643,-7.000541,1.949718,-4.535437,4.776966,-8.568652,-5.626708,9.610060,-2.941330,-9.066659,-2.255219,-8.821816,-9.288813,-7.962178,1.676668,-5.338893,4.478212,8.001693,5.525123,-2.809317,-3.190213,-4.386105,-4.768735,7.072820,6.144847,0.755573,-8.538499,-8.352956,1.965975,-2.842358,6.133151,-2.990993,-9.683251,7.028618,8.631146,-5.635360,-1.678161,6.126116,-0.679843,3.006646,-8.469682,7.699934,-8.899866,5.110786,-2.491055,4.643293,2.363027,-3.052464,4.913455,0.411324,-3.163408,-6.656960,-4.357958,0.251830,-2.719079,-8.039106,6.901450,0.805596,-0.122309,-3.892452,9.474979,-0.779202,3.143540,-5.510069,-0.639300,-0.147738,6.233730,4.283283,-7.508037,0.722226,9.213025,1.289083,4.072136,-6.262678,8.493617,3.104913,-3.690572,2.641624,-5.760844,-6.719165,-3.877578,4.007170,6.062424,7.147280,-6.563198,4.290040,6.427451,-8.562886,1.099227,-0.772649,2.768415,8.756619,8.895183,-7.801332,-1.706134,-8.317556,5.673280,8.700685,-5.630872,-5.405190,4.730280,-7.569480,-4.907635,1.402591,0.073965,-0.233738,4.883115,8.403809,4.386751,5.046072,-9.504274,-5.867351,6.643585,1.877405,-3.006873,-5.169343,9.189751,-7.518299,-1.448379,7.823274,7.865490,-6.164633,-6.639439,3.994879,4.114045,0.056241,-8.867095,8.515143,9.911584,3.583658,-0.465796,6.176376,-3.401707,3.872062,-3.855164,0.162464,3.142604,-4.117368,9.650619,5.263797,-6.228252,-5.716978,-7.280267,7.697521,-9.888300,6.367030,-2.772888,-9.597597,1.939610,5.173475,6.425084,1.358161,2.747562,-3.169590,-4.829872,0.902653,-6.282454,6.230090,-9.890015,3.053654,-4.278216,6.045405,7.415254,3.647826,-4.923047,-4.267679,8.507722,-2.743741,-3.791857,8.943021,-3.629437,0.906503,4.036935,9.821534,9.039084,-6.187805,2.675276,4.710066,-5.451688,8.112844,6.346246,-3.130316,-2.686038,9.449864,1.660554,3.118706,-8.113554,-1.408916,6.527341,8.059330,-0.913864,-8.165450,4.612953,4.144139,1.905548,-4.011185,-5.874922,3.917715,0.750332,1.204718,-7.308099,-5.422425,-1.565780,-7.284722,-4.672962,-7.321572,9.058873,2.973887,-9.212561,-5.826555,7.327134,0.852840,1.075891,-4.215469,8.252620,5.624920,-6.133265,-6.531720,4.331783,0.710870,-4.940792,-3.874711,-1.255362,1.186945,-5.426287,-9.486857,-8.921961,-3.332202,9.515632,4.861672,-4.175076,-7.938590,-0.944066,9.457244,5.968583,-2.035597,2.352658,4.364859,-2.139078,-2.677218,6.802289,-1.993909,-9.406404,8.447814,-8.514866,0.030407,-1.214334,7.392671,-0.001745,-8.287905,4.047271,-6.323049,7.901744,1.184406,-2.481903,5.460508,-7.836671,9.697233,-3.196915,-3.485323,9.650791,9.501316,3.799811,0.215711,-7.978774,5.463902,-2.594476,-6.799545,-9.957695,6.391819,4.271937,-5.653411,-0.990156,9.124825,-5.742932,7.889429,4.181783,7.132545,-0.065219,-5.632373,-4.082632,-7.750220,6.326832,7.403978,-2.326225,-7.171641,9.946515,-2.074835,9.035808,-0.693799,9.779549,5.446638,-5.522539,-5.791867,6.153815,2.011606,-7.429276,-8.101782,-4.812190,0.713435,-5.461311,8.438110,-3.119605,-5.704464,3.445746,-5.415527,-6.749023,3.414055,-0.341500,3.917536,-4.717956,-0.951630,1.765029,3.547635,-6.660363,-6.265031,-1.599828,-6.199097,0.120313,-5.422804,8.566700,-0.449880,0.254511,-5.499183,5.690963,9.188589,3.504659,-1.264126,3.447910,-2.632208,8.640255,-4.573233,-7.484434,-5.818358,1.416545,-7.211261,9.376628,1.759670,-9.193319,3.539955,0.313496,-4.350141,-6.074552,8.866643,-9.674328,5.127785,1.071037,7.452861,-1.215452,2.563799,1.129126,-3.939638,-3.842172,9.345936,2.295734,-9.479747,7.186557,6.168628,-8.865324,0.021208,4.515976,-2.054065,9.974974,-6.241317,1.269105,4.124027,-1.975091,-2.184850,4.621209,0.392816,-2.431710,-4.785432,-2.207885,4.952540,-7.931119,3.670457,5.560558,-1.697356,-0.492792,-4.962323,2.600159,-7.900128,8.183237,-3.091856,-8.723361,0.371202,-3.172432,-4.897657,-6.481439,9.461271,6.138146,-6.222390,-6.489254,5.440530,7.097601,-9.312927,6.487426,-0.276640,7.983625,-5.470244,6.590325,-7.198976,8.516632,-9.530190,-1.755400,-2.867820,2.278654,-5.938527,-0.573257,-9.773445,0.549911,-1.789268,4.477721,7.279123,5.162742,-5.923494,-7.643606,-0.412836,5.361255,5.909122,-9.944284,5.755981,-1.099200,4.865808,3.293850,-7.945638,9.797575,-9.456273,-9.878400,2.787065,9.668095,-8.542265,3.193590,0.100464,3.029818,-5.792594,-2.644138,6.370508,-6.430083,8.690032,-9.543770,-6.018176,-5.814993,-6.183560,6.380533,1.999876,0.885353,-3.289759,-0.983268,-3.216262,-2.745792,-4.435132,-7.408233,9.082850,-8.291392,3.444252,-8.836701,-7.030768,-7.051915,0.708760,0.253143,-3.283601,-7.738687,8.492089,-9.068411,3.184059,-0.349712,6.896492,8.866015,5.798068,-5.076463,7.108733,1.844524,3.478112,-6.896616,1.229189,3.131212,8.512239,-5.560592,1.332150,-7.521041,4.119309,-1.451644,7.636104,7.092860,2.690577,8.313554,-2.194243,8.814296,-0.915822,7.733122,2.523356,2.285242,-3.537808,1.161324,-3.929836,-0.623234,-9.506251,0.568014,8.733371,7.780675,-2.538305,6.447192,7.550519,-3.290914,-3.829537,0.954199,6.580925,-6.929848,-5.571831,4.731547,6.572623,-8.815144,-3.002666,-6.594751,-2.118631,-7.017619,-7.077200,8.790940,-7.437905,-4.736501,3.684206,-1.906841,-4.987790,3.257312,-4.969035,-9.143270,-5.877395,-1.892933,-0.155654,-3.822250,-6.908986,0.370450,-2.659968,-8.547152,-3.510911,-7.480956,-6.359773,-3.524313,4.960293,6.029365,-5.561220,-5.818033,-4.383962,8.822535,1.112412,1.194032,4.436184,-0.832885,4.161729,-5.322863,2.910869,-9.332562,-4.446820,8.912633,-8.977617,8.059399,-3.210594,2.015029,-0.524117,1.214288,0.338023,5.536314,7.385878,-5.497199,-9.531242,-8.796733,1.937580,4.285829,-3.082675,-1.903943,2.450077,6.254157,1.392744,-0.824229,-7.147353,7.097768,-5.269168,-0.302047,-3.886889,9.027537,7.883523,2.003221,-9.753227,-3.076688,3.351890,4.661587,1.533695,-2.505565,7.977823,-2.104424,-0.824038,1.159994,5.798391,-7.186298,2.303177,-9.947398,3.626631,0.870441,0.905861,-6.136626,-4.910066,9.024139,6.637875,-0.789071,9.442827,-8.649656,-0.480502,-6.364498,0.123195,-0.021034,-6.891323,1.822123,-6.099870,9.384650,0.996128,-9.531568,7.949998,1.745487,9.943322,-4.745468,-0.526327,-5.993316,-6.092321,-9.624441,7.247579,-8.973819,-9.464800,7.083077,1.160597,-0.223068,7.652892,-2.814022,-2.881939,3.722861,-2.659549,-3.496278,-2.372122,2.508254,-7.014878,-1.443272,-5.066752,4.435078,-7.294689,2.744495,-4.276746,-0.362624,-3.057632,-0.251623,-7.178042,-0.264643,4.867922,-5.893599,4.731078,3.014279,0.145879,2.847889,-9.318876,-1.803746,-3.322299,-2.940545,0.476494,-9.560981,-8.506342,4.369740,-4.909345,4.000859,-3.976148,6.616348,7.662212,3.019931,-2.999069,3.654522,-4.212059,7.859682,8.635717,8.463020,1.091855,5.345567,-9.149030,-9.116826,-3.519697,0.151945,0.459251,7.088947,9.915128,-5.910223,7.050560,-9.927625,9.846071,-4.830272,-1.021285,-2.360079,1.477434,0.969514,-1.832412,-0.535868,8.479505,4.885887,-8.128115,3.312215,-4.648283,6.486924,6.350260,3.555347,-4.916039,-4.512832,6.072329,-6.619882,-4.596791,-7.037771,6.773811,6.675350,-9.139887,-2.940523,3.896641,-6.280722,2.900836,-6.949038,-4.663113,1.411473,1.454555,9.099556,-4.668737,-2.502268,1.841498,8.868309,5.690966,1.025524,-2.244839,5.942879,5.314280,6.238117,2.164088,-5.689890,4.226868,-8.873867,1.205780,1.041473,1.077483,-8.803365,-6.981487,-7.027452,-9.477810,-2.692494,5.352496,4.289727,8.043587,1.152964,-4.628093,-0.424639,1.568627,-7.299452,-5.192452,9.154632,2.408040,-3.074092,6.165897,-4.030108,-3.411606,-7.226150,-1.858173,6.417213,-6.224435,-5.070113,-3.574938,-7.864528,-6.808622,-0.205487,-7.385276,-2.054335,5.900230,-4.810540,4.303908,-8.511772,0.991525,0.671828,-1.258529,3.974483,9.563492,0.203767,0.516445,-2.945039,9.047704,-7.227753,-9.827994,2.867600,-9.681713,-3.793060,-6.828866,8.281011,-1.750092,1.959416,5.664500,0.019450,6.081022,-0.439433,4.569254,-4.654325,4.121595,-8.137491,1.202197,9.073906,0.527300,-1.809794,1.918556,6.676627,-7.784972,-3.441842,-8.747674,7.751097,9.507483,-7.012954,-2.548923,2.409351,6.342948,3.518611,3.636166,-7.469987,-8.603902,8.692172,6.270208,9.844464,3.295213,7.774125,-9.984199,8.106913,4.152118,-1.273530,-1.134835,9.770618,0.257681,1.783664,-8.177240,-0.367148,-5.416665,-7.957847,-5.361777,8.847313,5.279726,6.711137,5.604971,6.560309,-4.207147,-7.864139,5.005637,3.856017,-4.007313,-9.009404,-3.930183,-2.918898,-1.306893,-3.965860,-0.309925,-7.268065,4.985716,9.371067,9.674377,4.221494,-4.781251,-6.928944,8.339261,3.181396,-7.499161,-5.295172,-8.402327,5.937696,6.449548,8.191971,-3.307359,-0.155798,-8.412588,-4.892224,-9.389949,2.427037,-2.282544,7.452023,7.605320,4.289589,-8.567352,3.899618,-0.474680,0.730050,-8.195618,-5.503103,-7.569153,-6.369607,-5.485150,-2.105291,-4.874815,-0.781796,-2.247291,3.784571,-2.102610,8.812282,-8.540007,1.760625,-2.271254,8.002233,4.754191,4.544899,-7.633512,-9.800388,-9.849079,8.573019,0.808250,4.622146,3.561537,0.776386,-2.048624,-4.708615,8.946322,6.204366,-3.011561,2.275708,-6.371104,-9.032659,-0.298860,-4.442400,2.228106,-8.095065,8.360250,-4.823963,-9.951900,-1.392176,1.455520,2.600314,-8.897911,-0.900279,1.472110,-4.802081,-4.742623,-4.378213,-7.886867,3.586208,8.314753,-9.035338,-6.448279,9.095641,-3.288712,2.413536,1.986391,8.742033,1.876815,-4.060738,8.747803,0.676798,7.529849,-1.157466,-0.343529,-3.791794,7.301562,-7.027675,9.247054,-7.919797,5.574592,2.784212,6.088801,-2.042736,-2.231370,0.060282,7.119253,7.119405,1.173229,-4.094493,-7.241183,5.869524,8.022293,0.252353,9.168296,5.904518,4.889405,7.540667,2.311990,9.234261,2.676208,5.003623,2.144567,6.218611,-2.333650,-6.109293,-0.188856,1.521364,5.981010,9.904764,-9.081580,5.892043,3.828888,-4.231743,-2.125004,6.064411,2.048186,6.652831,7.400278,9.785303,-1.696185,-4.091743,1.394132,5.868906,-6.494168,0.075400,5.813070,-1.018082,-4.155313,6.408491,0.003203,-0.740039,8.954419,8.514414,-6.592947,-0.909434,2.366693,-9.284734,-0.116851,2.518186,-4.508369,-8.965421,-9.951562,-1.454156,3.741587,0.788592,-8.305712,9.971919,1.802692,3.057124,4.699039,1.365803,-3.760742,0.506831,1.058715,-8.808244,-2.960058,4.593693,2.165768,6.570479,6.133918,0.564799,-9.625487,9.974835,-3.743988,7.133399,-2.282370,-2.042628,-0.910412,-2.760815,-8.982724,9.413086,2.126632,8.775370,1.229764,3.136681,-5.702366,-5.693254,-1.241266,-0.390764,-5.378319,-1.718541,-2.298608,-3.413030,7.933401,-9.528286,3.004095,-6.878512,-3.638780,3.657587,-0.624204,-6.712481,-2.536784,3.149294,-7.888141,6.616886,9.755568,-2.934882,-7.695594,9.675424,4.673963,0.119457,4.578743,1.853027,-5.351205,6.877188,7.521246,1.214092,4.112621,-2.206274,-1.463675,-8.290725,-5.648737,-7.959618,9.037236,-0.203499,2.151182,9.786862,2.300884,6.266325,-9.044316,-9.854330,-0.144399,5.591041,-5.874723,-2.533329,0.255634,-8.272381,4.413020,-6.526515,-4.581537,1.447041,-4.240024,2.600370,3.785181,3.066816,9.232524,1.960529,7.724803,9.870958,5.727234,2.830338,8.550157,-4.750065,-1.452994,2.764444,9.078945,-7.654564,-9.407461,0.014744,-8.865574,0.888585,-7.915310,-5.805107,5.751454,6.118836,7.283433,2.158946,-7.715894,9.124599,-7.229305,-9.465017,3.059214,2.100324,-3.303920,3.205315,-1.646264,-2.478580,9.837572,-4.633653,0.551493,4.158871,-6.808922,4.671438,-8.195046,3.836561,9.016922,-3.361520,6.392700,-7.176487,-0.912764,-5.754488,-6.747183,9.831677,2.917616,-3.516673,3.159513,2.238250,-0.538085,9.127980,8.676496,8.136769,-5.144713,4.024999,-8.385890,9.020185,3.367993,8.642746,-2.605990,-6.834636,-6.172482,-0.968810,-6.136564,-8.473315,-7.570201,-1.633114,-4.331218,6.872153,9.364882,-5.995574,-5.174003,9.172702,-4.784881,-1.041897,3.425368,-7.528358,5.522018,-7.644555,1.100567,4.430944,-2.788220,6.910048,1.209348,1.162422,-8.998807,-1.227953,9.491183,-2.928034,-8.923335,-6.249724,7.474543,-1.893129,-1.237737,5.922147,3.043148,8.961900,-6.936578,-3.988132,8.721037,-0.422375,-8.236741,9.155556,-9.198736,4.754824,-6.818198,0.935521,-4.474930,-8.185995,-7.510904,-2.029175,-4.017916,1.240816,7.233680,0.638706,8.922443,-8.846986,-3.155420,0.765901,4.835572,-1.093411,-1.677301,-7.398098,4.248383,6.225356,-9.226606,6.939071,-0.472144,5.896655,-9.240820,-9.279897,-7.495983,7.270294,-1.226854,-7.733955,9.984507,1.287704,-4.639407,0.575393,7.569881,3.571517,-0.601314,-2.672417,7.297428,-9.881028,-4.265901,2.777740,7.537317,-5.206815,1.727384,-0.500261,4.714303,-6.338694,7.486114,2.401691,8.963589,-9.422930,1.118623,-7.068156,-6.286985,-9.678816,1.587241,5.240752,6.253984,2.043692,-2.367734,6.641605,9.631626,3.168391,9.905435,9.431135,9.829364,6.451709,7.708128,1.423383,-4.004483,-9.164288,9.083246,3.371144,1.041714,1.290656,-3.581605,8.838403,9.582774,-0.351858,0.716378,8.345555,8.439539,1.240343,-1.218394,-7.750253,8.890062,-5.901450,-8.259318,9.670823,-0.377866,-1.386932,2.357421,2.460733,-5.137358,-9.535913,9.123816,9.405943,-1.149084,0.221528,8.337265,4.434635,8.133861,-6.569129,9.820568,2.551471,-4.672110,-4.703221,-7.275306,-8.452265,1.919679,-5.254887,-3.374140,0.700178,1.726297,7.974341,-0.062979,2.126587,1.041304,-2.633980,9.605453,-1.137953,4.155108,2.420937,-9.902588,-1.591907,-8.642089,6.278430,-9.491051,8.969608,9.078025,3.850037,-3.430760,2.659128,-9.406260,-0.977796,-0.474683,7.422048,-0.473295,2.507264,1.966514,-5.051424,-3.706537,-8.699476,6.516631,-9.219508,2.704273,-8.186062,-8.126319,2.776160,1.813448,-8.663149,-2.674173,6.900368,2.386562,-7.412497,6.287901,-9.859539,-9.222224,-5.648955,9.253232,-4.098435,-9.881872,-8.147140,8.734704,3.631591,0.408286,-0.315972,-7.568244,-5.119507,-3.873733,-7.002667,-2.558682,9.163638,6.395685,-2.451501,2.054996,1.932064,9.522885,-6.394376,4.843858,-1.423050,-3.983588,0.579596,-3.722495,-9.056404,-9.721274,-0.687375,3.013388,4.103653,-1.944108,8.433680,-5.179581,6.814235,-8.468242,-5.858484,-7.512049,5.214760,8.715583,7.409028,-0.687155,-2.301978,-2.349661,3.115906,1.362844,-5.542415,-2.777863,8.903537,0.284391,0.099910,-4.230036,7.803199,-2.572166,9.220593,3.591772,4.736163,-0.464416,-2.851542,7.492017,4.346983,-2.802282,-0.361719,9.094601,-2.514829,-8.907669,2.785037,4.148596,7.503178,0.044989,-2.524091,6.521610,-3.169236,3.148148,-4.747203,8.215824], dtype = "float32")#candidate|5758|(2145,)|const|float32
bop_5759 = relay.less(uop_5736.astype('bool'), relay.reshape(const_5758.astype('bool'), relay.shape_of(uop_5736))) # shape=(2145,)
output = relay.Tuple([bop_5712,call_5717,call_5726,call_5751,bop_5759,])
output2 = relay.Tuple([bop_5712,call_5719,call_5727,call_5752,bop_5759,])
func_5766 = relay.Function([var_5695,var_5696,], output)
mod['func_5766'] = func_5766
mod = relay.transform.InferType()(mod)
mutated_mod['func_5766'] = func_5766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5766_call = mutated_mod.get_global_var('func_5766')
var_5768 = relay.var("var_5768", dtype = "float64", shape = ())#candidate|5768|()|var|float64
var_5769 = relay.var("var_5769", dtype = "float64", shape = (7, 15, 5))#candidate|5769|(7, 15, 5)|var|float64
call_5767 = func_5766_call(var_5768,var_5769,)
output = call_5767
func_5770 = relay.Function([var_5768,var_5769,], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5778 = func_3592_call()
call_5779 = func_3592_call()
var_5780 = relay.var("var_5780", dtype = "bool", shape = (13, 15, 11))#candidate|5780|(13, 15, 11)|var|bool
bop_5781 = relay.logical_xor(call_5778.astype('uint16'), relay.reshape(var_5780.astype('uint16'), relay.shape_of(call_5778))) # shape=(13, 15, 11)
bop_5784 = relay.logical_xor(call_5779.astype('uint16'), relay.reshape(var_5780.astype('uint16'), relay.shape_of(call_5779))) # shape=(13, 15, 11)
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_5799 = func_5559_call()
call_5800 = func_5559_call()
output = relay.Tuple([bop_5781,call_5799,])
output2 = relay.Tuple([bop_5784,call_5800,])
func_5803 = relay.Function([var_5780,], output)
mod['func_5803'] = func_5803
mod = relay.transform.InferType()(mod)
var_5804 = relay.var("var_5804", dtype = "bool", shape = (13, 15, 11))#candidate|5804|(13, 15, 11)|var|bool
output = func_5803(var_5804)
func_5805 = relay.Function([var_5804], output)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_5815 = relay.TupleGetItem(func_4528_call(), 0)
call_5816 = relay.TupleGetItem(func_4530_call(), 0)
output = relay.Tuple([call_5815,])
output2 = relay.Tuple([call_5816,])
func_5820 = relay.Function([], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
mutated_mod['func_5820'] = func_5820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5820_call = mutated_mod.get_global_var('func_5820')
call_5821 = func_5820_call()
output = call_5821
func_5822 = relay.Function([], output)
mutated_mod['func_5822'] = func_5822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_5848 = relay.TupleGetItem(func_4528_call(), 0)
call_5849 = relay.TupleGetItem(func_4530_call(), 0)
uop_5850 = relay.sigmoid(call_5848.astype('float32')) # shape=(11, 4, 8)
uop_5852 = relay.sigmoid(call_5849.astype('float32')) # shape=(11, 4, 8)
bop_5854 = relay.add(uop_5850.astype('float64'), relay.reshape(call_5848.astype('float64'), relay.shape_of(uop_5850))) # shape=(11, 4, 8)
bop_5857 = relay.add(uop_5852.astype('float64'), relay.reshape(call_5849.astype('float64'), relay.shape_of(uop_5852))) # shape=(11, 4, 8)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_5863 = relay.TupleGetItem(func_4781_call(), 0)
call_5864 = relay.TupleGetItem(func_4783_call(), 0)
output = relay.Tuple([bop_5854,call_5863,])
output2 = relay.Tuple([bop_5857,call_5864,])
func_5865 = relay.Function([], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
output = func_5865()
func_5866 = relay.Function([], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5908 = relay.constdtype = "float64")#candidate|5908|(11, 12, 13)|const|float64
var_5909 = relay.var("var_5909", dtype = "float64", shape = (11, 12, 13))#candidate|5909|(11, 12, 13)|var|float64
bop_5910 = relay.divide(const_5908.astype('float64'), relay.reshape(var_5909.astype('float64'), relay.shape_of(const_5908))) # shape=(11, 12, 13)
uop_5923 = relay.cos(var_5909.astype('float64')) # shape=(11, 12, 13)
func_1417_call = mod.get_global_var('func_1417')
func_1420_call = mutated_mod.get_global_var('func_1420')
const_5926 = relay.const([5,-1,5,-7,-9,7,7,-6,9,-8,-10,-4,5,-8,-6,-7,-8,-7,4,5,-5,1,-10,-5,-8,5,9,-10,9,-1,-3,-9,7,-4,-8,-2,-3,-6,-9,1,-7,-7,8,-1,7,5,10,-1,-7,-6,5,-1,3,3,-2,1,-5,-6,-6,-1,8,-3,9,5,-10,-3,1,5,-3,5,-5,3,-5,-4,-5,-3,10,-3,-1,-4,-1,8,-3,5,-1,9,9,7,-2,-6,-3,-2,-7,3,5,-1,-6,-6,9,-5,4,-8,10,8,6,9,-2,-4,9,-7,7,-9,-4,-4,-8,7,6,4,1,-8,-3,8,-9,4,-2,-2,-6,3,-8,7,7,8,9,9,-4,-7,-3,4,-7,-2,9,7,-3,-9,7,-6,8,-8,-8,7,2,-10,-10,9,-3,6,2,-9,-4,-7,2,5,-9,-7,10,6,-1,-8,-1,8,-5,5,-10,4,3,-4,5,5,4,1,-9,9,3,10,-4,9,-5,-1,-9,8,6,-6,-5,7,6,-5,-4,4,-4,3,-3,1,9,2,5,-9,-3,-4,-8,10,-8,9,-1,-1,-7,3,1,7,-6,-5,8,1,-10,2,7,-4,-6,9,7,-2,-8,-4,1,-6,-8,-5,8,-10,5,10,3,-7,8,6,-9,10,3,6,-5,10,-7,2,3,4,5,7,8,8,-3,-1,-3,10,7,2,10,7,-7,3,-2,-7,10,8,-2,-4,-1,7,-10,-3,-5,-8,7,4,-4,-5,3,7,9,-1,-10,-6,-4,6,-2,-10,4,-5,5,8,-6,8,-8,-3,10,6,3,-2,6,10,9,-6,7,-7,-9,-2,9,-6,-6,-1,-7,8,-10,-4,10,-6,-3,3,2,-2,4,-9,5,7,-6,-10,9,10,8,-6,7,9,-4,10,10,-8,8,-7,-3,-6,7,10,4,5,-4,-2,5,-5,-4,5,-8,8,10,-9,-2,-10,9,-4,7,-4,-10,-6,-8,2,-5,-7,9,9,3,-10,2,-5,-7,-3,6,-9,-6,1,-5,7,9,-5,9,8,1,-8,-6,-4,-4,1,-8,8,5,-1,2,4,-2,-10,2,-7,-5,-8,10,6,-2,-3,9,-6,1,-7,-5,-4,2,10,-3,-9,-3,-1,-10,6,6,-2,-1,9,6,-2,-9,-8,2,6,-6,-6,-3,-2,6,5,-5,6,7,-5,3,4,6,4,-3,-3,-5,-7,-6,3,5,3,-7,8,-6,9,-2,1,6,-6,-6,-7,10,1,-3,9,2,-9,-2,-5,2,6,-6,2,4,2,-8,3,2,-5,8,-4,7,9,2,8,7,-6,2,-6,5,-6,-4,-3,3,-3,4,-9,-1,-2,4,7,-3,4,-2,-10,8,-1,5,1,4,8,1,10,-8,7,10,3,8,7,-8,6,-4,-10,-3,-8,-5,6,6,10,-6,-7,-10,10,-8,7,-5,-3,1,10,4,-2,8,5,-4,9,-1,-8,7,-8,-4,-4,-7,10,10,-4,1,3,4,3,-4,-9,1,7,-3,6,9,10,6,-6,3,-1,5,-4,-4,8,1,5,5,9,-7,7,4,-4,9,-7,9,7,-3,-7,-7,-7,2,-10,1,5,6,-4,3,-1,7,5,7,9,2,-1,3,-7,9,4,-7,-10,2,3,3,8], dtype = "uint64")#candidate|5926|(624,)|const|uint64
call_5925 = func_1417_call(relay.reshape(const_5926.astype('uint64'), [13, 6, 8]), relay.reshape(const_5926.astype('uint64'), [13, 6, 8]), )
call_5927 = func_1417_call(relay.reshape(const_5926.astype('uint64'), [13, 6, 8]), relay.reshape(const_5926.astype('uint64'), [13, 6, 8]), )
bop_5932 = relay.divide(call_5925.astype('float64'), relay.reshape(const_5926.astype('float64'), relay.shape_of(call_5925))) # shape=(13, 6, 8)
bop_5935 = relay.divide(call_5927.astype('float64'), relay.reshape(const_5926.astype('float64'), relay.shape_of(call_5927))) # shape=(13, 6, 8)
output = relay.Tuple([bop_5910,uop_5923,bop_5932,])
output2 = relay.Tuple([bop_5910,uop_5923,bop_5935,])
func_5939 = relay.Function([var_5909,], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
var_5940 = relay.var("var_5940", dtype = "float64", shape = (11, 12, 13))#candidate|5940|(11, 12, 13)|var|float64
output = func_5939(var_5940)
func_5941 = relay.Function([var_5940], output)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3141_call = mod.get_global_var('func_3141')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_5961 = relay.TupleGetItem(func_3141_call(), 0)
call_5962 = relay.TupleGetItem(func_3143_call(), 0)
output = relay.Tuple([call_5961,])
output2 = relay.Tuple([call_5962,])
func_5967 = relay.Function([], output)
mod['func_5967'] = func_5967
mod = relay.transform.InferType()(mod)
mutated_mod['func_5967'] = func_5967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5967_call = mutated_mod.get_global_var('func_5967')
call_5968 = func_5967_call()
output = call_5968
func_5969 = relay.Function([], output)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_5972 = func_4758_call()
call_5973 = func_4758_call()
func_4333_call = mod.get_global_var('func_4333')
func_4335_call = mutated_mod.get_global_var('func_4335')
const_5981 = relay.const([-6.820360,6.896637,-2.073944,2.143738,9.242025,-9.583368,0.011830,2.352934,-5.136424,-8.066711,9.780984,7.951381,9.157079,3.527124,1.329120,5.333389,-3.711540,3.572584,-0.768686,9.361070,7.476790,-9.256362,-6.853043,-9.190109,-7.128430,6.407861,-6.579363], dtype = "float32")#candidate|5981|(27,)|const|float32
call_5980 = relay.TupleGetItem(func_4333_call(relay.reshape(const_5981.astype('float32'), [3, 9])), 2)
call_5982 = relay.TupleGetItem(func_4335_call(relay.reshape(const_5981.astype('float32'), [3, 9])), 2)
bop_5992 = relay.divide(const_5981.astype('float32'), relay.reshape(call_5980.astype('float32'), relay.shape_of(const_5981))) # shape=(27,)
bop_5995 = relay.divide(const_5981.astype('float32'), relay.reshape(call_5982.astype('float32'), relay.shape_of(const_5981))) # shape=(27,)
bop_6013 = relay.maximum(bop_5992.astype('int8'), relay.reshape(call_5980.astype('int8'), relay.shape_of(bop_5992))) # shape=(27,)
bop_6016 = relay.maximum(bop_5995.astype('int8'), relay.reshape(call_5982.astype('int8'), relay.shape_of(bop_5995))) # shape=(27,)
output = relay.Tuple([call_5972,bop_6013,])
output2 = relay.Tuple([call_5973,bop_6016,])
func_6017 = relay.Function([], output)
mod['func_6017'] = func_6017
mod = relay.transform.InferType()(mod)
output = func_6017()
func_6018 = relay.Function([], output)
mutated_mod['func_6018'] = func_6018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_6019 = relay.TupleGetItem(func_4781_call(), 0)
call_6020 = relay.TupleGetItem(func_4783_call(), 0)
uop_6037 = relay.exp(call_6019.astype('float32')) # shape=(13, 15, 11)
uop_6039 = relay.exp(call_6020.astype('float32')) # shape=(13, 15, 11)
func_1417_call = mod.get_global_var('func_1417')
func_1420_call = mutated_mod.get_global_var('func_1420')
var_6041 = relay.var("var_6041", dtype = "uint64", shape = (624,))#candidate|6041|(624,)|var|uint64
call_6040 = func_1417_call(relay.reshape(var_6041.astype('uint64'), [13, 6, 8]), relay.reshape(var_6041.astype('uint64'), [13, 6, 8]), )
call_6042 = func_1417_call(relay.reshape(var_6041.astype('uint64'), [13, 6, 8]), relay.reshape(var_6041.astype('uint64'), [13, 6, 8]), )
output = relay.Tuple([uop_6037,call_6040,var_6041,])
output2 = relay.Tuple([uop_6039,call_6042,var_6041,])
func_6060 = relay.Function([var_6041,], output)
mod['func_6060'] = func_6060
mod = relay.transform.InferType()(mod)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6061 = relay.var("var_6061", dtype = "uint64", shape = (624,))#candidate|6061|(624,)|var|uint64
func_6060_call = mutated_mod.get_global_var('func_6060')
call_6062 = func_6060_call(var_6061)
output = call_6062
func_6063 = relay.Function([var_6061], output)
mutated_mod['func_6063'] = func_6063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_6090 = relay.TupleGetItem(func_4528_call(), 0)
call_6091 = relay.TupleGetItem(func_4530_call(), 0)
uop_6094 = relay.atan(call_6090.astype('float32')) # shape=(11, 4, 8)
uop_6096 = relay.atan(call_6091.astype('float32')) # shape=(11, 4, 8)
var_6097 = relay.var("var_6097", dtype = "float32", shape = (11, 4, 8))#candidate|6097|(11, 4, 8)|var|float32
bop_6098 = relay.less(call_6090.astype('bool'), relay.reshape(var_6097.astype('bool'), relay.shape_of(call_6090))) # shape=(11, 4, 8)
bop_6101 = relay.less(call_6091.astype('bool'), relay.reshape(var_6097.astype('bool'), relay.shape_of(call_6091))) # shape=(11, 4, 8)
output = relay.Tuple([uop_6094,bop_6098,])
output2 = relay.Tuple([uop_6096,bop_6101,])
func_6116 = relay.Function([var_6097,], output)
mod['func_6116'] = func_6116
mod = relay.transform.InferType()(mod)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6117 = relay.var("var_6117", dtype = "float32", shape = (11, 4, 8))#candidate|6117|(11, 4, 8)|var|float32
func_6116_call = mutated_mod.get_global_var('func_6116')
call_6118 = func_6116_call(var_6117)
output = call_6118
func_6119 = relay.Function([var_6117], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5233_call = mod.get_global_var('func_5233')
func_5235_call = mutated_mod.get_global_var('func_5235')
call_6123 = relay.TupleGetItem(func_5233_call(), 0)
call_6124 = relay.TupleGetItem(func_5235_call(), 0)
const_6146 = relay.const([[[8.872495,-9.711288,2.939242,7.069148,-8.537252,1.196019,7.620706,8.823130],[-4.414607,2.779372,7.866873,6.217087,-7.868057,-2.363974,8.274146,9.777812],[-1.580673,-2.136758,9.818492,-7.058920,-5.733816,8.313479,-6.733059,-2.158156],[4.179812,-4.822297,4.548666,-0.259058,9.314039,-6.585101,0.865789,2.488730]],[[0.849440,7.440208,7.203088,8.472867,7.689386,7.137984,7.440986,0.091117],[6.261521,1.994144,4.993840,0.535488,-8.619752,5.254002,4.984156,6.631237],[-7.900617,9.176387,-4.984562,4.715684,1.372083,9.075979,-9.592562,-5.707575],[-5.745612,-4.569099,9.351864,-1.841798,-5.284758,1.516109,-8.564559,-1.109018]],[[-3.216850,7.398933,-8.318834,-0.887868,5.360123,-6.937868,-9.678789,-3.038864],[-9.033559,-9.928637,-2.800202,-8.895809,-3.721697,-5.787251,-9.872810,3.806150],[9.807549,-4.607820,0.692546,9.887192,-2.880166,8.270932,-3.043853,-8.123750],[-3.117404,5.268852,5.789905,0.981485,2.935413,2.682389,6.863638,-0.612790]],[[0.332716,-6.779025,-8.943419,2.813154,-1.644053,9.655393,-9.344805,8.204965],[1.761196,1.835280,-8.404455,-5.754814,5.884751,-1.345217,9.051361,4.279975],[0.521331,1.053467,5.422508,-5.499138,7.040040,4.152036,3.008195,8.453881],[3.796127,-4.883081,4.844470,8.924080,-3.757483,1.862559,2.687681,-3.409109]],[[6.337640,-3.022186,-6.620088,-0.801942,-9.514470,-0.042636,-5.271763,-5.488319],[-0.855885,-0.378434,-8.065407,-6.465596,9.668032,-2.711770,-7.492631,8.012267],[-4.682022,4.182324,-7.407364,1.940580,7.824306,0.643805,3.095834,4.368824],[-4.488638,6.119147,1.961507,5.917834,-8.876892,1.470152,-0.143137,-0.532940]],[[-2.818057,0.767810,2.891842,-5.588991,-5.859136,-4.789830,7.081680,-1.036685],[0.194485,-0.145243,4.181942,2.700825,0.649183,3.015757,9.927150,3.703846],[3.311545,8.014633,4.869327,1.417649,8.741319,8.309008,2.205996,-6.159017],[6.814912,1.513628,-1.642189,-4.249213,-5.007831,1.004442,5.814353,1.765886]],[[3.305551,6.110361,-9.920690,8.063136,3.598742,2.875513,-8.068187,5.725026],[-9.072291,-7.019241,-6.825357,3.180256,-7.320999,-7.649169,1.768630,-5.641557],[-5.361419,3.470955,-8.776475,-5.324158,6.211069,-0.944341,7.379396,9.838040],[7.937308,-4.954461,4.318191,-1.305268,-8.576785,4.190655,-2.863200,0.673747]],[[-1.043225,-8.463408,4.759829,-4.944768,-1.682294,-9.070215,-6.191450,1.477536],[2.490914,7.973308,4.622077,1.306934,6.777021,3.831117,-2.776352,-5.892035],[9.446658,-5.178798,-5.243076,2.508774,9.055550,-9.066054,-4.973464,2.483070],[-7.987830,-6.544495,-8.729576,4.306042,-8.838158,-9.086103,8.060895,9.550891]],[[5.558462,8.627804,-3.068176,-0.602732,-3.648602,-2.564812,-3.303171,8.485403],[-5.311059,8.846652,6.291319,-3.291329,8.296127,-2.474042,-6.619006,-0.959418],[2.808305,1.651662,-8.435270,-7.678081,-0.483729,0.507578,-0.499486,5.804177],[-7.860096,-2.765237,-2.039163,-8.627369,1.698160,-5.279867,-1.904174,3.387068]],[[3.492251,-3.346143,-2.070984,-0.399603,9.476531,2.255816,-7.100472,-8.338794],[4.210887,-4.281032,-2.194524,-3.447302,-8.737153,4.011007,6.343934,-0.499377],[0.330079,-3.185911,0.352389,-5.833669,7.189498,8.055677,1.449134,-2.991680],[-7.687243,-8.981788,8.267369,-8.114308,6.050398,4.609553,-5.019042,7.664264]],[[-3.669568,5.624095,9.971189,-0.365519,6.666769,-8.872311,8.786983,-7.154479],[-3.299326,-3.921485,1.007319,9.173661,-4.495845,7.432424,-8.071605,-0.765367],[-5.420830,1.536506,-7.209147,-6.987221,9.429893,-0.335699,-5.018615,-3.868774],[4.707552,-6.427986,7.532598,4.794580,-5.121778,-5.360744,-3.406506,3.853113]]], dtype = "float32")#candidate|6146|(11, 4, 8)|const|float32
bop_6147 = relay.multiply(call_6123.astype('int16'), relay.reshape(const_6146.astype('int16'), relay.shape_of(call_6123))) # shape=(11, 4, 8)
bop_6150 = relay.multiply(call_6124.astype('int16'), relay.reshape(const_6146.astype('int16'), relay.shape_of(call_6124))) # shape=(11, 4, 8)
uop_6151 = relay.rsqrt(bop_6147.astype('float32')) # shape=(11, 4, 8)
uop_6153 = relay.rsqrt(bop_6150.astype('float32')) # shape=(11, 4, 8)
bop_6158 = relay.minimum(bop_6147.astype('int16'), relay.reshape(const_6146.astype('int16'), relay.shape_of(bop_6147))) # shape=(11, 4, 8)
bop_6161 = relay.minimum(bop_6150.astype('int16'), relay.reshape(const_6146.astype('int16'), relay.shape_of(bop_6150))) # shape=(11, 4, 8)
func_69_call = mod.get_global_var('func_69')
func_72_call = mutated_mod.get_global_var('func_72')
const_6163 = relay.const([[-8.653468,-2.568917,3.439279,6.810424,-7.437344,6.866203,-0.930584,8.010315,-7.952109,-6.656592,1.891010,-5.484081,3.824999,-1.434148,0.605806,-9.869975,0.808965,-9.001922,-9.244963,-6.125671,-7.395705,-4.802978,-1.723683,-6.960734,3.023764,-3.360488,-6.096829,-8.945412,-8.349933,1.985522,-4.660416,-4.603997,2.541328,-8.797385,-8.890109,-1.612330,4.255738,6.125606,8.550781,-3.267945,1.769088,7.388548,1.607358,7.505529,-6.330194,-0.484144,-2.511689,-7.643981,5.155768,7.831737,9.397320,-4.048614,6.251469,8.300564,1.536181,0.384325,-3.840218,-9.046710,-3.414200,8.480115,7.729237,6.272661,-5.338319,1.890771,9.924453,-6.358757,-8.440538,3.366444,-7.347085,-2.033361,-3.373638,-4.044189,-6.945492,-4.574552,-5.796706,9.079161,7.142224,7.324525,5.138281,-6.070969,-5.438137,2.421906,6.621259,-9.456381,0.129131,-3.747811,-6.793622,-2.999657,0.673094,2.848579,5.613592,0.065056,0.395862,-5.710422,3.011532,8.384548,7.552557,0.371415,2.471088,9.936590,-8.849559,-2.628100,-9.097864,-9.857460,-5.523985,-8.307013,-0.487517,-9.310920,-3.733384,-7.855774,5.153279,8.845788,7.124351,-3.437424,-0.702872,6.447167,8.547868,3.698827,7.570333,2.309045,9.799627,8.635609,-5.248271,-3.947160,-2.571049,-3.651162,-0.892833,1.616794,-7.214581,4.418557,1.355567,-8.980290,-8.089926,-9.501740,0.436458,4.253161,3.906998,-0.140079,8.872038,9.145414,-2.641577,2.698017,6.589944,-3.622280,-0.406594,1.892751,-3.179985,-4.896782,7.165956,-2.325660,6.460901,-8.568954,-6.975099,-7.362953,3.930029,-8.834609,5.469584,-1.889545,-1.847578,7.705500,-2.642574,-7.965612,-4.583257,-6.635752,8.133190,-2.764917,-2.545451,-8.703398,8.566854,-1.487415,-8.400810,-3.358335,4.077891,-6.844976,4.254466,-1.214146,-3.721118,8.379668,-7.253728,7.381443,-1.746131,-8.672902,-6.755207,-6.179402,7.146316,-6.087940,9.488249,4.492362,4.854288,-1.588212,6.142259,0.168624,6.394797,-2.488998,-9.711719]], dtype = "float64")#candidate|6163|(1, 195)|const|float64
call_6162 = relay.TupleGetItem(func_69_call(relay.reshape(const_6163.astype('float64'), [3, 13, 5])), 0)
call_6164 = relay.TupleGetItem(func_72_call(relay.reshape(const_6163.astype('float64'), [3, 13, 5])), 0)
output = relay.Tuple([uop_6151,bop_6158,call_6162,const_6163,])
output2 = relay.Tuple([uop_6153,bop_6161,call_6164,const_6163,])
func_6165 = relay.Function([], output)
mod['func_6165'] = func_6165
mod = relay.transform.InferType()(mod)
mutated_mod['func_6165'] = func_6165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6165_call = mutated_mod.get_global_var('func_6165')
call_6166 = func_6165_call()
output = call_6166
func_6167 = relay.Function([], output)
mutated_mod['func_6167'] = func_6167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5967_call = mod.get_global_var('func_5967')
func_5969_call = mutated_mod.get_global_var('func_5969')
call_6168 = relay.TupleGetItem(func_5967_call(), 0)
call_6169 = relay.TupleGetItem(func_5969_call(), 0)
var_6179 = relay.var("var_6179", dtype = "uint8", shape = (13, 15, 11))#candidate|6179|(13, 15, 11)|var|uint8
bop_6180 = relay.less(call_6168.astype('bool'), relay.reshape(var_6179.astype('bool'), relay.shape_of(call_6168))) # shape=(13, 15, 11)
bop_6183 = relay.less(call_6169.astype('bool'), relay.reshape(var_6179.astype('bool'), relay.shape_of(call_6169))) # shape=(13, 15, 11)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
const_6188 = relay.const([[0.152648,-7.862981,-2.933685,-7.202265,-6.795112,-9.491696,9.236566,5.275506,-9.079283],[4.769894,-0.556981,-3.189012,-4.801053,-7.793491,7.819497,-7.768889,-5.297655,-6.448574],[8.632490,-9.574939,2.852969,-6.268445,9.397945,-8.997006,-5.804619,3.136575,-6.811990]], dtype = "float32")#candidate|6188|(3, 9)|const|float32
call_6187 = relay.TupleGetItem(func_212_call(relay.reshape(const_6188.astype('float32'), [1, 3, 9])), 0)
call_6189 = relay.TupleGetItem(func_215_call(relay.reshape(const_6188.astype('float32'), [1, 3, 9])), 0)
const_6193 = relay.const([[[8.923996,1.983088,3.638179,6.397265,-3.085342,-6.401279,5.346171,9.969252,-6.969836],[-7.278024,3.550133,-9.713838,-8.205731,4.474641,2.716000,-2.297764,7.959287,1.006609],[-6.553047,-3.258583,-7.767015,-3.961422,-0.148515,-6.667521,3.106306,8.005428,5.603659]],[[-7.326227,-1.188547,9.098236,-8.861195,0.659620,9.360092,-4.498719,8.932813,3.365538],[-8.573596,-9.044617,3.521421,6.718446,5.250545,-8.753255,-6.263019,-3.040826,-6.635836],[-4.210160,4.559515,-3.249348,-9.833662,-9.054983,8.547473,6.446067,6.592308,-7.990562]],[[9.447668,-9.952912,1.783544,9.372825,7.780749,-9.948598,-7.092699,-7.189797,-0.789022],[-6.152661,-4.620960,3.678664,-4.569199,0.101773,-8.780389,3.223717,2.805768,-6.216632],[-1.247662,5.194612,1.692007,9.986252,-5.718679,-9.937513,-8.607394,-3.055231,3.216455]],[[4.543485,-4.864135,-0.290881,-6.054584,-1.823143,7.466473,-0.430394,3.261259,1.500702],[-2.004690,-2.786341,-2.098196,4.953186,6.701291,7.983463,9.922332,5.227659,2.895682],[-8.205407,9.919832,-4.860537,4.011792,-3.318749,-5.982214,-2.828988,-4.896431,0.651783]],[[2.488102,9.000390,-1.515284,9.015405,6.732253,-9.420758,-8.038585,1.720398,4.771257],[-4.905924,-0.552565,5.656317,-9.368846,9.948337,-1.690285,-2.979985,-0.588250,3.623341],[-1.886852,-7.241688,0.175839,3.943990,-9.287311,1.732070,-6.752887,-2.922365,-9.290828]],[[4.610644,8.655578,6.830711,3.377373,4.098501,5.793888,6.025083,-3.838267,-4.645190],[-6.422429,7.416624,-4.889180,-8.573156,1.361225,7.704263,7.016177,-4.122356,-7.349497],[-9.187768,7.847381,0.485322,-5.608580,0.749220,-0.743423,-1.601963,9.959226,5.774662]],[[-4.155984,-5.064463,9.907455,5.373237,-3.549694,1.649912,2.177197,-4.253257,-3.253090],[-5.857572,-2.483730,2.791462,5.950403,4.366069,0.545680,-9.953301,7.193213,0.100613],[-7.000017,6.325824,5.592001,6.182100,-5.331170,6.753551,8.590085,-7.849117,2.114809]],[[3.531561,5.161148,0.200737,7.334987,7.889108,-6.757437,7.509832,6.889590,4.767550],[-8.472761,-3.685235,2.067939,9.014017,6.338148,-4.967173,6.645322,4.615015,5.811785],[4.447009,-6.629530,0.255613,-8.135861,9.471863,2.382274,-4.448192,-3.499475,-6.484698]],[[-9.141429,-8.768218,3.835864,1.003378,-8.877701,-4.178281,0.077192,1.577656,-1.442766],[4.122282,7.074636,-0.756174,0.019043,-5.561888,1.258133,3.157301,-3.481240,9.075468],[4.475779,-6.421810,5.263911,9.928364,5.695030,-2.892402,5.393306,-7.433634,3.800013]]], dtype = "float32")#candidate|6193|(9, 3, 9)|const|float32
bop_6194 = relay.minimum(call_6187.astype('float32'), const_6193.astype('float32')) # shape=(9, 3, 9)
bop_6197 = relay.minimum(call_6189.astype('float32'), const_6193.astype('float32')) # shape=(9, 3, 9)
output = relay.Tuple([bop_6180,const_6188,bop_6194,])
output2 = relay.Tuple([bop_6183,const_6188,bop_6197,])
func_6201 = relay.Function([var_6179,], output)
mod['func_6201'] = func_6201
mod = relay.transform.InferType()(mod)
mutated_mod['func_6201'] = func_6201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6202 = relay.var("var_6202", dtype = "uint8", shape = (13, 15, 11))#candidate|6202|(13, 15, 11)|var|uint8
func_6201_call = mutated_mod.get_global_var('func_6201')
call_6203 = func_6201_call(var_6202)
output = call_6203
func_6204 = relay.Function([var_6202], output)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6283 = relay.var("var_6283", dtype = "int32", shape = (13, 5, 8))#candidate|6283|(13, 5, 8)|var|int32
var_6284 = relay.var("var_6284", dtype = "int32", shape = (13, 5, 8))#candidate|6284|(13, 5, 8)|var|int32
bop_6285 = relay.bitwise_xor(var_6283.astype('int32'), relay.reshape(var_6284.astype('int32'), relay.shape_of(var_6283))) # shape=(13, 5, 8)
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_6299 = func_5559_call()
call_6300 = func_5559_call()
bop_6307 = relay.greater_equal(var_6284.astype('bool'), relay.reshape(bop_6285.astype('bool'), relay.shape_of(var_6284))) # shape=(13, 5, 8)
output = relay.Tuple([call_6299,bop_6307,])
output2 = relay.Tuple([call_6300,bop_6307,])
func_6316 = relay.Function([var_6283,var_6284,], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mutated_mod.get_global_var('func_6316')
var_6318 = relay.var("var_6318", dtype = "int32", shape = (13, 5, 8))#candidate|6318|(13, 5, 8)|var|int32
var_6319 = relay.var("var_6319", dtype = "int32", shape = (13, 5, 8))#candidate|6319|(13, 5, 8)|var|int32
call_6317 = func_6316_call(var_6318,var_6319,)
output = call_6317
func_6320 = relay.Function([var_6318,var_6319,], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6165_call = mod.get_global_var('func_6165')
func_6167_call = mutated_mod.get_global_var('func_6167')
call_6344 = relay.TupleGetItem(func_6165_call(), 1)
call_6345 = relay.TupleGetItem(func_6167_call(), 1)
output = call_6344
output2 = call_6345
func_6362 = relay.Function([], output)
mod['func_6362'] = func_6362
mod = relay.transform.InferType()(mod)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6362_call = mutated_mod.get_global_var('func_6362')
call_6363 = func_6362_call()
output = call_6363
func_6364 = relay.Function([], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5967_call = mod.get_global_var('func_5967')
func_5969_call = mutated_mod.get_global_var('func_5969')
call_6407 = relay.TupleGetItem(func_5967_call(), 0)
call_6408 = relay.TupleGetItem(func_5969_call(), 0)
uop_6414 = relay.erf(call_6407.astype('float64')) # shape=(13, 15, 11)
uop_6416 = relay.erf(call_6408.astype('float64')) # shape=(13, 15, 11)
func_5803_call = mod.get_global_var('func_5803')
func_5805_call = mutated_mod.get_global_var('func_5805')
call_6429 = relay.TupleGetItem(func_5803_call(relay.reshape(uop_6414.astype('bool'), [13, 15, 11])), 1)
call_6430 = relay.TupleGetItem(func_5805_call(relay.reshape(uop_6414.astype('bool'), [13, 15, 11])), 1)
output = relay.Tuple([uop_6414,call_6429,])
output2 = relay.Tuple([uop_6416,call_6430,])
func_6432 = relay.Function([], output)
mod['func_6432'] = func_6432
mod = relay.transform.InferType()(mod)
output = func_6432()
func_6433 = relay.Function([], output)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6529 = relay.const([[[-6,-4,10,-4],[1,-10,-1,8],[-3,4,-7,2],[-6,9,-7,-1],[-3,7,-9,6],[-4,-3,-7,1],[-6,-1,3,-5],[4,-1,6,-3],[9,6,-2,7],[1,3,9,-5],[-2,-9,10,6],[-1,-6,-8,-8]],[[2,4,8,-1],[1,6,1,-6],[10,8,1,-5],[-10,9,-1,-7],[-3,-6,-4,2],[1,7,3,-5],[-1,2,-4,4],[9,3,10,-10],[1,-6,3,10],[5,-7,1,1],[2,3,4,1],[-1,-3,6,-6]],[[1,2,9,9],[-1,2,10,-5],[-9,-10,6,-6],[8,7,-3,3],[-4,-10,-8,9],[-7,3,-6,-2],[7,-10,5,-9],[5,9,1,-4],[6,10,-2,3],[-9,9,-5,2],[2,2,-8,-10],[-8,-1,-10,4]],[[8,2,-2,-1],[3,8,-8,-9],[-2,8,3,3],[9,-8,10,7],[-7,-9,-3,-4],[10,-4,2,-1],[-4,6,-6,-7],[-4,4,-9,3],[-9,9,-5,-10],[-2,-5,8,3],[-4,-9,8,7],[-5,10,-3,1]],[[7,4,2,-7],[8,1,8,8],[-2,4,7,4],[4,5,6,9],[-8,3,9,-4],[-2,3,-10,-1],[9,2,9,-7],[9,10,2,9],[6,-9,4,2],[-10,-5,7,3],[-1,4,-1,3],[-5,-7,6,-6]],[[-10,5,-10,-9],[1,1,9,-4],[10,-2,-10,-3],[2,1,-8,10],[4,1,2,4],[-5,3,-2,-6],[-6,-3,7,-1],[-6,7,-1,-1],[2,-9,-5,10],[-2,3,10,4],[2,-10,3,-10],[-4,-4,-3,10]],[[-8,-10,3,-4],[2,9,-9,-8],[2,1,-1,-4],[-7,-10,3,6],[10,-8,-7,-10],[-10,-3,-1,1],[8,9,-3,4],[1,-8,7,-10],[1,10,10,9],[8,-8,-2,2],[-3,9,6,-3],[1,-3,-7,-3]],[[-3,-8,-4,3],[-10,3,-2,-4],[-8,10,-8,2],[4,8,-10,-2],[6,6,-9,-4],[-1,-3,-3,-7],[-1,6,-8,1],[-4,7,-9,-9],[-1,7,-5,10],[-1,9,9,-7],[-1,-2,-1,-4],[1,1,2,-5]],[[6,-2,-6,-6],[-7,-10,-9,7],[-2,-2,1,10],[-7,1,2,2],[-9,-8,7,1],[9,10,-2,1],[-9,9,-8,1],[-1,-5,-10,10],[1,6,3,4],[3,-3,5,1],[6,-4,-8,-2],[-9,1,-5,-1]],[[-10,-8,8,-9],[8,-8,-8,6],[6,10,7,4],[-10,9,7,-4],[9,-1,4,10],[4,6,6,5],[4,-7,-7,8],[5,5,-7,10],[-8,7,-3,-3],[-4,6,-1,-1],[6,7,-8,-3],[4,6,6,9]],[[8,-8,-2,7],[-10,-5,4,7],[5,-7,8,-5],[-9,-4,-8,-1],[-1,-7,-9,-9],[7,-1,2,-3],[1,10,-10,-2],[8,4,-10,-4],[1,4,-6,-1],[8,4,-8,-9],[-6,8,5,-5],[-7,1,-3,8]],[[6,3,8,-3],[-6,8,-5,-2],[-5,-7,10,5],[10,-5,-1,-6],[-9,-9,3,-3],[10,-2,8,3],[4,-6,-1,-4],[-7,3,-3,4],[-8,-7,6,1],[-1,10,8,-5],[-5,-1,-9,9],[-3,3,3,-8]]], dtype = "uint16")#candidate|6529|(12, 12, 4)|const|uint16
var_6530 = relay.var("var_6530", dtype = "uint16", shape = (12, 12, 4))#candidate|6530|(12, 12, 4)|var|uint16
bop_6531 = relay.less_equal(const_6529.astype('bool'), relay.reshape(var_6530.astype('bool'), relay.shape_of(const_6529))) # shape=(12, 12, 4)
uop_6555 = relay.rsqrt(const_6529.astype('float64')) # shape=(12, 12, 4)
output = relay.Tuple([bop_6531,uop_6555,])
output2 = relay.Tuple([bop_6531,uop_6555,])
F = relay.Function([var_6530,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6530,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

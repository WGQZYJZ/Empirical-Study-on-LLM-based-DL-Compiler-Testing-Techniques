==========mod==========
#[version = "0.0.5"]
def @func_5681() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) {
  %0 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
  %3 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %4 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %5 = @func_4929() /* ty=Tensor[(11, 7, 5), float32] */;
  %6 = cos(%2) /* ty=Tensor[(4, 6, 16), float64] */;
  %7 = %3.0;
  (%4, %5, %6, %7)
}

def @func_10566(%var_10509: Tensor[(9, 324), float32]) -> (Tensor[(4, 6, 16), int64], Tensor[(10, 324), float64], Tensor[(9, 324), bool], Tensor[(9, 324), float64], Tensor[(9, 324), float64], Tensor[(15, 324), uint8], Tensor[(1, 810), int8], Tensor[(11, 7, 5), float32]) {
  %8 = @func_6576() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) */;
  %9 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 324), float32] */, dtype="float64") /* ty=Tensor[(10, 324), float64] */;
  %12 = cast(%9, dtype="bool") /* ty=Tensor[(1, 324), bool] */;
  %13 = cast(%var_10509, dtype="bool") /* ty=Tensor[(9, 324), bool] */;
  %14 = cast(%var_10509, dtype="float64") /* ty=Tensor[(9, 324), float64] */;
  %15 = cast(%9, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %16 = cast(%var_10509, dtype="float64") /* ty=Tensor[(9, 324), float64] */;
  %17 = cast(%9, dtype="uint8") /* ty=Tensor[(1, 324), uint8] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 324), float32] */, dtype="uint8") /* ty=Tensor[(15, 324), uint8] */;
  %19 = %8.0;
  %20 = floor_divide(%10, %11) /* ty=Tensor[(10, 324), float64] */;
  %21 = less_equal(%12, %13) /* ty=Tensor[(9, 324), bool] */;
  %22 = floor_divide(%14, %15) /* ty=Tensor[(9, 324), float64] */;
  %23 = log(%16) /* ty=Tensor[(9, 324), float64] */;
  %24 = bitwise_or(%17, %18) /* ty=Tensor[(15, 324), uint8] */;
  %25 = @func_4020() /* ty=Tensor[(1, 810), int8] */;
  %26 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
  (%19, %20, %21, %22, %23, %24, %25, %26)
}

def @func_6625() -> Tensor[(11, 7, 5), float32] {
  %27 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %27.0
}

def @func_6989() -> (Tensor[(1, 810), int8],) {
  %28 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %29 = %28.1;
  (%29,)
}

def @func_9891() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %30 = @func_6029() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %31 = %30.0;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %33 = @func_6775() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) */;
  %34 = @func_8732() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %35 = log2(%32) /* ty=Tensor[(11, 7, 5), float32] */;
  %36 = %33.0;
  %37 = %34.1;
  (%35, %36, %37)
}

def @func_2709(%var_2668: Tensor[(15, 6, 9), int8], %var_2669: Tensor[(15, 6, 9), int8]) -> (Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) {
  %38 = cast(%var_2669, dtype="int8") /* ty=Tensor[(15, 6, 9), int8] */;
  %39 = shape_of(%var_2668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_2668, dtype="int8") /* ty=Tensor[(15, 6, 9), int8] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %44 = reshape(%42, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %45 = reshape(%43, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %46 = @func_697(%44, %45) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %47 = multiply(%40, %41) /* ty=Tensor[(15, 6, 9), int8] */;
  %48 = %46.2;
  (%47, %48, meta[relay.Constant][2] /* ty=Tensor[(324), float32] */, meta[relay.Constant][3] /* ty=Tensor[(384), float64] */)
}

def @func_11151() -> Tensor[(324), float32] {
  %49 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %49.2
}

def @func_12697() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %50 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %51 = @func_12164() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %52 = @func_12319() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %53 = %50.3;
  %54 = %51.0;
  %55 = %52.0;
  (%53, %54, %55)
}

def @func_8218() -> Tensor[(11, 7, 5), float32] {
  @func_6455() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_3931(%var_3922: Tensor[(11, 7, 5), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) {
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %57 = reshape(%56, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %58 = @func_274(%57) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %59 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  %60 = cast(%var_3922, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = cast(%var_3922, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %65 = reshape(%64, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %66 = %58.0;
  %67 = less_equal(%62, %63) /* ty=Tensor[(11, 7, 5), bool] */;
  %68 = @func_2574(%65) /* ty=Tensor[(11, 7, 5), bool] */;
  (%66, meta[relay.Constant][4] /* ty=Tensor[(384), float64] */, %67, %68)
}

def @func_6235() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %69 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %70 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %71 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %72 = @func_5761() /* ty=(Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %73 = %69.0;
  %74 = %70.1;
  %75 = %71.0;
  %76 = %72.1;
  (%73, %74, %75, %76)
}

def @func_8350() -> (Tensor[(12, 5, 1), float64],) {
  %77 = @func_8274() /* ty=Tensor[(12, 5, 1), float64] */;
  (%77,)
}

def @func_6564() -> Tensor[(11, 7, 5), float32] {
  %78 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %78.1
}

def @func_9933() -> Tensor[(11, 7, 5), float32] {
  %79 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
  %79.0
}

def @func_14322(%var_14282: int64, %var_14283: Tensor[(14, 3, 16), int64], %var_14313: Tensor[(128), int64], %var_14314: Tensor[(640, 1), int64]) -> (Tensor[(11, 7, 5), bool], Tensor[(5, 16, 8), bool], Tensor[(128), int64], Tensor[(640, 1), int64], Tensor[(11, 7, 5), float32], Tensor[(14, 3, 16), float64]) {
  %80 = @func_12248() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %81 = cast(%var_14313, dtype="int64") /* ty=Tensor[(128), int64] */;
  %82 = cast(%var_14314, dtype="int64") /* ty=Tensor[(640, 1), int64] */;
  %83 = reshape(%81, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), int64] */;
  %84 = reshape(%82, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
  %85 = @func_8570(%83, %84) /* ty=(Tensor[(5, 16, 8), bool],) */;
  %86 = @func_9928() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %87 = cast(%var_14282, dtype="int64") /* ty=int64 */;
  %88 = cast(%var_14283, dtype="int64") /* ty=Tensor[(14, 3, 16), int64] */;
  %89 = multiply(%87, %88) /* ty=Tensor[(14, 3, 16), int64] */;
  %90 = cast(%var_14283, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %94 = %80.0;
  %95 = %85.0;
  %96 = %86.0;
  %97 = floor_divide(%92, %93) /* ty=Tensor[(14, 3, 16), float64] */;
  (%94, %95, %var_14313, %var_14314, %96, %97)
}

def @func_11923(%var_11846: Tensor[(15, 810), int8]) -> (Tensor[(15, 810), int8], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(6, 64), float32], Tensor[(15, 810), float32]) {
  %98 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %99 = %98.1;
  %100 = cast(%99, dtype="uint16") /* ty=Tensor[(1, 810), uint16] */;
  %101 = cast(%var_11846, dtype="uint16") /* ty=Tensor[(15, 810), uint16] */;
  %102 = bitwise_xor(%100, %101) /* ty=Tensor[(15, 810), uint16] */;
  %103 = cast(%var_11846, dtype="int8") /* ty=Tensor[(15, 810), int8] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(2), int32] */;
  %105 = cast(%102, dtype="int8") /* ty=Tensor[(15, 810), int8] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %107 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %108 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %109 = cast(%var_11846, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %110 = cast(%99, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %111 = @func_9941() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %112 = cast(%102, dtype="float64") /* ty=Tensor[(15, 810), float64] */;
  %113 = erf(%112) /* ty=Tensor[(15, 810), float64] */;
  %114 = cast(%113, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %115 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
  %116 = cast(%113, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %117 = minimum(%105, %106) /* ty=Tensor[(15, 810), int8] */;
  %118 = %107.0;
  %119 = %108.0;
  %120 = divide(%109, %110) /* ty=Tensor[(15, 810), float32] */;
  %121 = %111.0;
  %122 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
  %123 = atan(%114) /* ty=Tensor[(15, 810), float32] */;
  %124 = %115.0;
  %125 = log(%116) /* ty=Tensor[(15, 810), float32] */;
  (%117, %118, %119, %120, %121, %122, %123, %124, %125)
}

def @func_3229() -> (Tensor[(4, 6, 16), float32],) {
  %126 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %127 = %126.2;
  (%127,)
}

def @func_7638(%var_7608: Tensor[(3, 108), float32]) -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) {
  %128 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %129 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %130 = @func_7082() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %131 = cast(%var_7608, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %132 = %128.1;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
  %134 = reshape(%131, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %135 = reshape(%133, newshape=[96, 4]) /* ty=Tensor[(96, 4), float64] */;
  %136 = @func_3737(%134, %135) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) */;
  %137 = %129.3;
  %138 = %130.0;
  %139 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
  %140 = %136.2;
  (%132, %137, %138, %139, %140, %var_7608)
}

def @func_7383() -> (Tensor[(11, 7, 5), float32],) {
  %141 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %142 = %141.0;
  (%142,)
}

def @func_4020() -> Tensor[(1, 810), int8] {
  %143 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %143.4
}

def @func_5005() -> Tensor[(11, 7, 5), float32] {
  %144 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %144.0
}

def @func_13198() -> Tensor[(192, 2), float64] {
  %145 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
  %146 = %145.2;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %148 = asinh(%147) /* ty=Tensor[(192, 2), float32] */;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  sigmoid(%149) /* ty=Tensor[(192, 2), float64] */
}

def @func_2919() -> (Tensor[(11, 7, 5), float32],) {
  %150 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %151 = %150.0;
  (%151,)
}

def @func_3330(%var_3317: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), uint32] {
  %152 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %153 = cast(%var_3317, dtype="uint32") /* ty=Tensor[(11, 7, 5), uint32] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="uint32") /* ty=Tensor[(11, 7, 5), uint32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%155, %156) /* ty=Tensor[(11, 7, 5), uint32] */
}

def @func_14012() -> Tensor[(11, 7, 5), float32] {
  %157 = @func_10251() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %157.0
}

def @func_13421() -> (Tensor[(1, 810), float64],) {
  %158 = @func_5761() /* ty=(Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %159 = %158.0;
  (%159,)
}

def @func_11605() -> Tensor[(11, 7, 5), float32] {
  %160 = @func_10467() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %160.3
}

def @func_11316() -> (Tensor[(11, 7, 5), float32],) {
  %161 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %162 = %161.0;
  (%162,)
}

def @func_4551(%var_4510: Tensor[(810), int8], %var_4545: Tensor[(11, 7, 5), float32]) -> (Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) {
  %163 = cast(%var_4510, dtype="int8") /* ty=Tensor[(810), int8] */;
  %164 = cast(%var_4510, dtype="int8") /* ty=Tensor[(810), int8] */;
  %165 = reshape(%163, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %166 = reshape(%164, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %167 = @func_2709(%165, %166) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %168 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %169 = cast(%168, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %170 = reshape(%169, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %171 = @func_3500(%170) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
  %172 = cast(%var_4545, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %173 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%168, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = %167.2;
  %177 = %171.4;
  %178 = logical_or(%174, %175) /* ty=Tensor[(11, 7, 5), bool] */;
  (%176, %var_4510, %177, %178)
}

def @func_7835() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %179 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %180 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %181 = %179.1;
  %182 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
  %183 = %180.0;
  (%181, %182, %183)
}

def @func_5718(%var_5715: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(384), float32]) {
  %184 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %185 = cast(%var_5715, dtype="float32") /* ty=Tensor[(384), float32] */;
  %186 = reshape(%185, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %187 = @func_3289(%186) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %188 = %184.1;
  %189 = %187.2;
  (%188, %189, %var_5715)
}

def @func_12319() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %190 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %191 = %190.1;
  %192 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  (%191, %192)
}

def @func_697(%var_678: Tensor[(3, 12, 9), float32], %var_683: Tensor[(384), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) {
  %193 = cast(%var_683, dtype="float64") /* ty=Tensor[(384), float64] */;
  %194 = reshape(%193, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %195 = @func_274(%194) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %196 = cast(%var_678, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
  %197 = log(%196) /* ty=Tensor[(3, 12, 9), float32] */;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(3, 12, 9), float64] */;
  %199 = %195.0;
  %200 = atan(%198) /* ty=Tensor[(3, 12, 9), float64] */;
  (%199, %var_683, %200)
}

def @func_11188() -> (Tensor[(11, 7, 5), float32],) {
  %201 = @func_7025() /* ty=Tensor[(11, 7, 5), float32] */;
  (%201,)
}

def @func_8570(%var_8564: Tensor[(1, 16, 8), int64], %var_8565: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), bool],) {
  %202 = cast(%var_8564, dtype="bool") /* ty=Tensor[(1, 16, 8), bool] */;
  %203 = cast(%var_8565, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %204 = greater_equal(%202, %203) /* ty=Tensor[(5, 16, 8), bool] */;
  (%204,)
}

def @func_5360() -> (Tensor[(11, 7, 5), float32],) {
  %205 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  (%205,)
}

def @func_5566() -> (Tensor[(11, 7, 5), bool],) {
  %206 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %207 = %206.1;
  (%207,)
}

def @func_5815() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %208 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %209 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %210 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %211 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %212 = %208.0;
  %213 = %209.0;
  %214 = %210.2;
  %215 = %211.0;
  (%212, %213, %214, %215)
}

def @func_6842(%var_6839: Tensor[(39), bool]) -> (Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) {
  %216 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %217 = %216.0;
  %218 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 7, 5), float32] */, dtype="int16") /* ty=Tensor[(11, 7, 5), int16] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%217, dtype="int16") /* ty=Tensor[(11, 7, 5), int16] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %222 = cast(%var_6839, dtype="bool") /* ty=Tensor[(39), bool] */;
  %223 = reshape(%222, newshape=[1, 13, 3]) /* ty=Tensor[(1, 13, 3), bool] */;
  %224 = @func_2220(%223) /* ty=(Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %225 = left_shift(%220, %221) /* ty=Tensor[(11, 7, 5), int16] */;
  %226 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
  %227 = %224.1;
  (%225, %226, %227, %var_6839)
}

def @func_3791() -> (Tensor[(11, 7, 5), float32],) {
  %228 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %229 = %228.1;
  (%229,)
}

def @func_5343() -> (Tensor[(11, 7, 5), bool],) {
  %230 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %231 = %230.0;
  (%231,)
}

def @func_9031(%var_9017: Tensor[(384), float32]) -> (Tensor[(2, 15, 14), float32], Tensor[(11, 7, 5), bool], Tensor[(4, 6, 16), uint8], Tensor[(384), float32]) {
  %232 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
  %233 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %234 = cast(%var_9017, dtype="float32") /* ty=Tensor[(384), float32] */;
  %235 = reshape(%234, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %236 = @func_3289(%235) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %237 = sqrt(%232) /* ty=Tensor[(2, 15, 14), float32] */;
  %238 = %233.0;
  %239 = %236.0;
  (%237, %238, %239, %var_9017)
}

def @func_2776() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) {
  %240 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %242 = reshape(%241, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %243 = @func_274(%242) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(4, 6, 16), float32] */;
  %246 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 810), int8] */, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %247 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 810), int8] */, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %248 = reshape(%246, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %249 = reshape(%247, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %250 = @func_2709(%248, %249) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %251 = %240.1;
  %252 = asinh(%245) /* ty=Tensor[(4, 6, 16), float32] */;
  %253 = %250.3;
  (%251, meta[relay.Constant][7] /* ty=Tensor[(384), float64] */, %252, %253, meta[relay.Constant][8] /* ty=Tensor[(1, 810), int8] */)
}

def @func_2220(%var_2205: Tensor[(1, 13, 3), bool]) -> (Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) {
  %254 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %255 = cast(%var_2205, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %256 = cast(meta[relay.Constant][9] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %257 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %258 = reshape(%256, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %259 = reshape(%257, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %260 = @func_697(%258, %259) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %261 = logical_and(%254, %255) /* ty=Tensor[(1, 13, 3), bool] */;
  %262 = %260.1;
  (%261, %262, meta[relay.Constant][9] /* ty=Tensor[(324), float32] */, meta[relay.Constant][10] /* ty=Tensor[(384), float64] */)
}

def @func_7047() -> Tensor[(1, 324), float32] {
  %263 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
  %263.1
}

def @func_13071() -> (Tensor[(384), float64],) {
  %264 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %265 = %264.3;
  (%265,)
}

def @func_9122() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), float64], Tensor[(?, 810), uint8], Tensor[(11, 7, 5), int16], Tensor[(39), bool], Tensor[(1, 810), float64]) {
  %266 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %267 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %268 = %267.1;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %270 = atanh(%269) /* ty=Tensor[(1, 810), float64] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %272 = cast(%270, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %273 = asinh(%272) /* ty=Tensor[(1, 810), float32] */;
  %274 = cast(%270, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(2), int32] */;
  %276 = cast(%273, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %278 = bitwise_and(%276, %277) /* ty=Tensor[(?, 810), uint8] */;
  %279 = cast(%270, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(2), int32] */;
  %281 = cast(%278, dtype="uint8") /* ty=Tensor[(?, 810), uint8] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %283 = cast(meta[relay.Constant][11] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
  %284 = reshape(%283, newshape=[39]) /* ty=Tensor[(39), bool] */;
  %285 = @func_6842(%284) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
  %286 = cast(%270, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %287 = %266.2;
  %288 = atan(%271) /* ty=Tensor[(1, 810), float64] */;
  %289 = left_shift(%281, %282) /* ty=Tensor[(?, 810), uint8] */;
  %290 = %285.0;
  %291 = asin(%286) /* ty=Tensor[(1, 810), float64] */;
  (%287, %288, %289, %290, meta[relay.Constant][11] /* ty=Tensor[(39), bool] */, %291)
}

def @func_3380() -> Tensor[(11, 7, 5), float32] {
  %292 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %292.0
}

def @func_12217() -> (Tensor[(11, 7, 5), float32],) {
  %293 = @func_11708() /* ty=(Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) */;
  %294 = %293.1;
  (%294,)
}

def @func_6775() -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) {
  %295 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %296 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %299 = %295.0;
  %300 = sqrt(%298) /* ty=Tensor[(6, 64), float64] */;
  (%299, %300)
}

def @func_8264(%var_8232: Tensor[(3, 3, 7), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(3, 3, 7), float32], Tensor[(11, 7, 5), bool]) {
  %301 = @func_5103() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %302 = cast(%var_8232, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %303 = atan(%302) /* ty=Tensor[(3, 3, 7), float32] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %305 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %306 = %301.0;
  %307 = sinh(%304) /* ty=Tensor[(3, 3, 7), float32] */;
  %308 = %305.1;
  (%306, %307, %308)
}

def @func_5599() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) {
  %309 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %310 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %311 = %309.0;
  %312 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %313 = %310.0;
  (%311, %312, %313)
}

def @func_2981() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %314 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %315 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %316 = %314.1;
  %317 = %315.0;
  (%316, %317)
}

def @func_11810() -> (Tensor[(6, 64), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %318 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %319 = @func_11029() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %320 = @func_9785() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) */;
  %321 = %318.1;
  %322 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  %323 = %319.1;
  %324 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
  %325 = %320.3;
  %326 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
  (%321, %322, %323, %324, %325, %326)
}

def @func_2943() -> Tensor[(11, 7, 5), float32] {
  %327 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %327.0
}

def @func_9206(%var_9190: Tensor[(13, 13, 2), float64]) -> (Tensor[(13, 13, 2), float64],) {
  %328 = cast(%var_9190, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %329 = sigmoid(%328) /* ty=Tensor[(13, 13, 2), float64] */;
  (%329,)
}

def @func_938(%var_893: Tensor[(5, 2, 12), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(5, 2, 12), int32]) {
  %330 = cast(%var_893, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
  %331 = tan(%330) /* ty=Tensor[(5, 2, 12), float32] */;
  %332 = cast(%331, dtype="float64") /* ty=Tensor[(5, 2, 12), float64] */;
  %333 = log10(%332) /* ty=Tensor[(5, 2, 12), float64] */;
  %334 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = cast(%331, dtype="int32") /* ty=Tensor[(5, 2, 12), int32] */;
  %339 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%333, dtype="int32") /* ty=Tensor[(5, 2, 12), int32] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %342 = not_equal(%336, %337) /* ty=Tensor[(5, 2, 12), bool] */;
  %343 = multiply(%340, %341) /* ty=Tensor[(5, 2, 12), int32] */;
  (%342, %343)
}

def @func_8379() -> (Tensor[(384), float64],) {
  %344 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %345 = %344.3;
  (%345,)
}

def @func_8824() -> (Tensor[(2, 192), float64], Tensor[(128), int64], Tensor[(385, 1), float32], Tensor[(5, 16, 8), int32], Tensor[(11, 7, 5), float32]) {
  %346 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %347 = %346.3;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %349 = reshape(%348, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %350 = @func_3289(%349) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %351 = cast(meta[relay.Constant][12] /* ty=Tensor[(128), int64] */, dtype="int64") /* ty=Tensor[(128), int64] */;
  %352 = cast(meta[relay.Constant][13] /* ty=Tensor[(640), int64] */, dtype="int64") /* ty=Tensor[(640), int64] */;
  %353 = reshape(%351, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), int64] */;
  %354 = reshape(%352, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
  %355 = @func_8570(%353, %354) /* ty=(Tensor[(5, 16, 8), bool],) */;
  %356 = %355.0;
  %357 = cast(meta[relay.Constant][13] /* ty=Tensor[(640), int64] */, dtype="int32") /* ty=Tensor[(640), int32] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="int32") /* ty=Tensor[(5, 16, 8), int32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %361 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %362 = %350.2;
  %363 = logical_xor(%359, %360) /* ty=Tensor[(5, 16, 8), int32] */;
  %364 = %361.1;
  (%347, meta[relay.Constant][12] /* ty=Tensor[(128), int64] */, %362, %363, %364)
}

def @func_4373() -> (Tensor[(11, 7, 5), float32],) {
  %365 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  (%365,)
}

def @func_4244(%var_4223: Tensor[(384), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(384), float64]) {
  %366 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %367 = cast(%var_4223, dtype="float64") /* ty=Tensor[(384), float64] */;
  %368 = reshape(%367, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %369 = @func_274(%368) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %370 = %366.0;
  %371 = %369.0;
  (%370, %371, %var_4223)
}

def @func_13056() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %372 = @func_9785() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) */;
  %373 = %372.0;
  %374 = @func_4849() /* ty=Tensor[(11, 7, 5), float32] */;
  (%373, %374)
}

def @func_10694() -> (Tensor[(11, 7, 5), float32],) {
  %375 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %376 = %375.0;
  (%376,)
}

def @func_11469() -> (Tensor[(11, 7, 5), bool],) {
  %377 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %378 = %377.0;
  (%378,)
}

def @func_11342() -> (Tensor[(11, 7, 5), float32],) {
  %379 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %380 = %379.0;
  (%380,)
}

def @func_10467() -> (Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %381 = @func_5566() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %382 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %383 = %382.3;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(384), float32] */;
  %385 = reshape(%384, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %386 = @func_10010(%385) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) */;
  %387 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %388 = %381.0;
  %389 = %386.1;
  %390 = %387.0;
  (%388, %383, %389, %390)
}

def @func_10010(%var_10005: Tensor[(1, 384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) {
  %391 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %392 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %393 = cast(%var_10005, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %394 = reshape(%393, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %395 = @func_3289(%394) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %396 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %397 = %391.2;
  %398 = %392.1;
  %399 = %395.1;
  (%396, %397, %398, %399, %var_10005)
}

def @func_8893() -> (Tensor[(1, 324), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %400 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %401 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %402 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  %403 = %400.0;
  %404 = %401.0;
  (%402, %403, %404)
}

def @func_13345() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %405 = @func_9928() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %406 = %405.0;
  %407 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  (%406, %407)
}

def @func_12509() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %408 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %409 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %410 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  %411 = %408.0;
  %412 = %409.1;
  (%410, %411, %412)
}

def @func_13571() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 324), float32]) {
  %413 = @func_10694() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %414 = %413.0;
  %415 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  (%414, %415)
}

def @func_4454() -> Tensor[(12, 5, 1), float64] {
  %416 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  exp(%416) /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_11708() -> (Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) {
  %417 = @func_7071() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %418 = @func_8274() /* ty=Tensor[(12, 5, 1), float64] */;
  %419 = %417.0;
  (%418, %419)
}

def @func_12962(%var_12955: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(3, 108), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 324), bool], Tensor[(1, 384), float32], Tensor[(384), float32]) {
  %420 = @func_12509() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %421 = %420.1;
  %422 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %425 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%421, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %428 = @func_12248() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %429 = cast(%421, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %430 = reshape(%429, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %431 = @func_4593(%430) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %432 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %433 = reshape(%432, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %434 = @func_7885(%433) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
  %435 = @func_5617() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) */;
  %436 = %435.0;
  %437 = cast(%436, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %438 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
  %439 = cast(%var_12955, dtype="float32") /* ty=Tensor[(384), float32] */;
  %440 = reshape(%439, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %441 = @func_10010(%440) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) */;
  %442 = multiply(%426, %427) /* ty=Tensor[(11, 7, 5), float64] */;
  %443 = %428.0;
  %444 = %431.1;
  %445 = %434.1;
  %446 = @func_9933() /* ty=Tensor[(11, 7, 5), float32] */;
  %447 = less(%437, %438) /* ty=Tensor[(12, 5, 324), bool] */;
  %448 = %441.4;
  (%442, %443, %444, %445, %446, %447, %448, %var_12955)
}

def @func_5046() -> Tensor[(11, 7, 5), float32] {
  %449 = @func_4265() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %449.0
}

def @func_2454() -> (Tensor[(11, 7, 5), float32],) {
  %450 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %451 = erf(%450) /* ty=Tensor[(11, 7, 5), float32] */;
  (%451,)
}

def @func_5328() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %452 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %453 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %454 = %452.1;
  %455 = @func_4929() /* ty=Tensor[(11, 7, 5), float32] */;
  %456 = %453.2;
  (%454, %455, %456)
}

def @func_7230() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %457 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %459 = reshape(%458, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %460 = @func_2574(%459) /* ty=Tensor[(11, 7, 5), bool] */;
  (%457, %460)
}

def @func_8070() -> (Tensor[(11, 7, 5), float32],) {
  %461 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %462 = %461.2;
  (%462,)
}

def @func_7462() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) {
  %463 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %464 = cast(meta[relay.Constant][17] /* ty=Tensor[(192, 2), float32] */, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %465 = reshape(%464, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %466 = @func_3289(%465) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %467 = %463.0;
  %468 = %466.1;
  (%467, %468, meta[relay.Constant][17] /* ty=Tensor[(192, 2), float32] */)
}

def @func_11029() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %469 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %470 = @func_5360() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %471 = %469.1;
  %472 = %470.0;
  %473 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
  (%471, %472, %473)
}

def @func_5103() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %474 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %475 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %477 = reshape(%476, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %478 = @func_4265() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %479 = %474.0;
  %480 = @func_2574(%477) /* ty=Tensor[(11, 7, 5), bool] */;
  %481 = %478.0;
  (%479, %475, %480, %481)
}

def @func_7025() -> Tensor[(11, 7, 5), float32] {
  %482 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %482.3
}

def @func_8694() -> Tensor[(11, 7, 5), float32] {
  %483 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %484 = %483.0;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  sin(%485) /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_6455() -> Tensor[(11, 7, 5), float32] {
  %486 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %486.0
}

def @func_9265() -> (Tensor[(11, 7, 5), float32],) {
  %487 = @func_8338() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %488 = %487.0;
  (%488,)
}

def @func_14034() -> (Tensor[(11, 7, 5), float32],) {
  %489 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %490 = %489.0;
  (%490,)
}

def @func_7389() -> (Tensor[(11, 7, 5), bool],) {
  %491 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %492 = %491.1;
  (%492,)
}

def @func_4593(%var_4576: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %493 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %494 = %493.0;
  %495 = cast(%var_4576, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %499 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %500 = floor_mod(%497, %498) /* ty=Tensor[(11, 7, 5), float32] */;
  %501 = %499.0;
  (%500, %501)
}

def @func_12227() -> Tensor[(11, 7, 5), float32] {
  %502 = @func_12217() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %502.0
}

def @func_5304() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %503 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %504 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %505 = %504.1;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %507 = reshape(%506, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %508 = cast(%505, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %509 = reshape(%508, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %510 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %511 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %512 = %503.0;
  %513 = @func_2574(%507) /* ty=Tensor[(11, 7, 5), bool] */;
  %514 = @func_3330(%509) /* ty=Tensor[(11, 7, 5), uint32] */;
  %515 = %510.0;
  %516 = %511.0;
  (%512, %505, %513, %514, %515, %516)
}

def @func_10892(%var_10883: Tensor[(1, 39), bool], %var_10885: Tensor[(13, 39), bool]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(13, 39), float64]) {
  %517 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %518 = cast(%var_10883, dtype="bool") /* ty=Tensor[(1, 39), bool] */;
  %519 = reshape(%518, newshape=[39]) /* ty=Tensor[(39), bool] */;
  %520 = @func_6842(%519) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
  %521 = cast(%var_10883, dtype="float64") /* ty=Tensor[(1, 39), float64] */;
  %522 = cast(%var_10885, dtype="float64") /* ty=Tensor[(13, 39), float64] */;
  %523 = %517.0;
  %524 = %520.1;
  %525 = mod(%521, %522) /* ty=Tensor[(13, 39), float64] */;
  (%523, %524, %525)
}

def @func_11092(%var_11080: Tensor[(324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32]) {
  %526 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
  %527 = cast(%var_11080, dtype="float32") /* ty=Tensor[(324), float32] */;
  %528 = reshape(%527, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %529 = @func_7638(%528) /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) */;
  %530 = %526.0;
  %531 = %529.2;
  (%530, %531, %var_11080)
}

def @func_13818() -> Tensor[(11, 7, 5), float32] {
  %532 = @func_9265() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %532.0
}

def @func_4265() -> (Tensor[(11, 7, 5), float32],) {
  %533 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %534 = %533.0;
  (%534,)
}

def @func_7281() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %535 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %536 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %537 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %538 = %535.0;
  %539 = %536.2;
  %540 = %537.0;
  (%538, %539, %540)
}

def @func_12357(%var_12348: Tensor[(1, 39), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(39), int32], Tensor[(1, 39), float64]) {
  %541 = cast(%var_12348, dtype="float64") /* ty=Tensor[(1, 39), float64] */;
  %542 = reshape(%541, newshape=[39]) /* ty=Tensor[(39), float64] */;
  %543 = @func_9839(%542) /* ty=(Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) */;
  %544 = @func_7673() /* ty=Tensor[(11, 7, 5), float32] */;
  %545 = %543.3;
  (%544, %545, %var_12348)
}

def @func_9528() -> (Tensor[(11, 7, 5), float32],) {
  %546 = @func_6059() /* ty=Tensor[(11, 7, 5), float32] */;
  (%546,)
}

def @func_10251() -> (Tensor[(11, 7, 5), float32],) {
  %547 = @func_9933() /* ty=Tensor[(11, 7, 5), float32] */;
  (%547,)
}

def @func_6059() -> Tensor[(11, 7, 5), float32] {
  %548 = @func_4373() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %548.0
}

def @func_5521() -> (Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) {
  %549 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %551 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %552 = cast(%549, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  %553 = asin(%550) /* ty=Tensor[(12, 5, 1), float32] */;
  %554 = %551.2;
  %555 = sinh(%552) /* ty=Tensor[(12, 5, 1), float64] */;
  (%553, %554, %555)
}

def @func_4354() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
  %556 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %557 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %558 = %556.0;
  %559 = %557.0;
  (%558, %559)
}

def @func_2542() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %560 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %561 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %562 = %560.0;
  %563 = %561.0;
  (%562, %563)
}

def @func_7723(%var_7681: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), bool], Tensor[(385, 1), float64], Tensor[(385, ?), bool]) {
  %564 = @func_7087() /* ty=Tensor[(11, 7, 5), float32] */;
  %565 = cast(%var_7681, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = cast(%564, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %570 = reshape(%569, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %571 = @func_3500(%570) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
  %572 = %571.2;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %574 = log2(%573) /* ty=Tensor[(385, 1), float32] */;
  %575 = cast(%574, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %576 = cast(%574, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %577 = rsqrt(%576) /* ty=Tensor[(385, 1), float32] */;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %579 = sigmoid(%578) /* ty=Tensor[(385, 1), float32] */;
  %580 = cast(%577, dtype="bool") /* ty=Tensor[(385, 1), bool] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(2), int32] */;
  %582 = cast(%579, dtype="bool") /* ty=Tensor[(385, 1), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %584 = not_equal(%567, %568) /* ty=Tensor[(11, 7, 5), bool] */;
  %585 = asin(%575) /* ty=Tensor[(385, 1), float64] */;
  %586 = greater_equal(%582, %583) /* ty=Tensor[(385, ?), bool] */;
  (%584, %585, %586)
}

def @func_5135() -> Tensor[(11, 7, 5), float32] {
  %587 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %587.0
}

def @func_6379() -> (Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %588 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
  %589 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %590 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %591 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %592 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %593 = %588.2;
  %594 = %589.1;
  %595 = %590.0;
  %596 = %591.0;
  %597 = %592.5;
  (%593, %594, %595, %596, %597)
}

def @func_7071() -> (Tensor[(11, 7, 5), float32],) {
  %598 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %599 = %598.0;
  (%599,)
}

def @func_4056() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %600 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %603 = reshape(%602, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %604 = @func_3931(%603) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) */;
  %605 = %604.3;
  (%601, %605)
}

def @func_12791() -> Tensor[(11, 7, 5), float32] {
  @func_6625() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_14163() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) {
  %606 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %607 = cast(meta[relay.Constant][18] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %608 = reshape(%607, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %609 = @func_8491(%608) /* ty=(Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) */;
  %610 = %609.1;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %612 = %606.0;
  %613 = sigmoid(%611) /* ty=Tensor[(6, 64), float64] */;
  (%612, meta[relay.Constant][18] /* ty=Tensor[(384), float32] */, %613)
}

def @main() -> Tensor[(1, 324), float64] {
  %614 = @func_9429() /* ty=(Tensor[(1, 324), float32],) */;
  %615 = %614.0;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %617 = atan(%616) /* ty=Tensor[(1, 324), float64] */;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  sinh(%618) /* ty=Tensor[(1, 324), float64] */
}

def @func_9498() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), int16], Tensor[(39), bool]) {
  %619 = @func_5360() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %620 = cast(meta[relay.Constant][19] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
  %621 = reshape(%620, newshape=[39]) /* ty=Tensor[(39), bool] */;
  %622 = @func_6842(%621) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
  %623 = %619.0;
  %624 = %622.0;
  (%623, %624, meta[relay.Constant][19] /* ty=Tensor[(39), bool] */)
}

def @func_5440() -> (Tensor[(6, 64), float32],) {
  %625 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %626 = %625.1;
  (%626,)
}

def @func_13537() -> (Tensor[(1, 324), float32], Tensor[(1, 810), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %627 = @func_9429() /* ty=(Tensor[(1, 324), float32],) */;
  %628 = @func_13421() /* ty=(Tensor[(1, 810), float64],) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %631 = @func_11469() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %632 = @func_13056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %633 = @func_11708() /* ty=(Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) */;
  %634 = %627.0;
  %635 = tan(%630) /* ty=Tensor[(1, 810), float32] */;
  %636 = %631.0;
  %637 = %632.1;
  %638 = %633.1;
  (%634, %635, %636, %637, %638)
}

def @func_5912() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %639 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %640 = %639.0;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(4, 6, 16), float32] */;
  %642 = rsqrt(%641) /* ty=Tensor[(4, 6, 16), float32] */;
  %643 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
  %644 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  (%642, %643, %644)
}

def @func_2574(%var_2562: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), bool] {
  %645 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %646 = %645.0;
  %647 = cast(%var_2562, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%649, %650) /* ty=Tensor[(11, 7, 5), bool] */
}

def @func_4878() -> Tensor[(11, 7, 5), float32] {
  %651 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %651.0
}

def @func_7673() -> Tensor[(11, 7, 5), float32] {
  @func_6564() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_13110() -> Tensor[(4, 6, 16), float32] {
  %652 = @func_12164() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %652.0
}

def @func_8541(%var_8506: Tensor[(13, 7, 16), float32]) -> (Tensor[(13, 7, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %653 = cast(%var_8506, dtype="float32") /* ty=Tensor[(13, 7, 16), float32] */;
  %654 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %655 = exp(%653) /* ty=Tensor[(13, 7, 16), float32] */;
  %656 = %654.1;
  %657 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
  (%655, %656, %657)
}

def @func_7186() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %658 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %659 = %658.0;
  %660 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  (%659, %660)
}

def @func_4092() -> (Tensor[(11, 7, 5), float32],) {
  %661 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %662 = %661.0;
  (%662,)
}

def @func_10206() -> (Tensor[(11, 7, 5), float32],) {
  %663 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %664 = %663.0;
  (%664,)
}

def @func_4915() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %665 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %668 = reshape(%667, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %669 = @func_2574(%668) /* ty=Tensor[(11, 7, 5), bool] */;
  (%666, %669)
}

def @func_8651() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32]) {
  %670 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %671 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %672 = %670.4;
  %673 = %671.0;
  (%672, %673)
}

def @func_6540() -> (Tensor[(12, 5, 1), float32],) {
  %674 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
  %675 = %674.0;
  (%675,)
}

def @func_12248() -> (Tensor[(11, 7, 5), bool],) {
  %676 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %677 = %676.0;
  (%677,)
}

def @func_4407() -> (Tensor[(4, 6, 16), float32],) {
  %678 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %679 = %678.0;
  (%679,)
}

def @func_10789() -> Tensor[(11, 7, 5), float32] {
  %680 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %680.0
}

def @func_11499() -> Tensor[(11, 7, 5), float32] {
  %681 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %681.0
}

def @func_8732() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %682 = @func_5599() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) */;
  %683 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %684 = %682.1;
  %685 = %683.0;
  (%684, %685)
}

def @func_8274() -> Tensor[(12, 5, 1), float64] {
  @func_4454() /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_3641() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) {
  %686 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %687 = %686.0;
  %688 = cast(%687, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %689 = cast(%687, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %690 = reshape(%688, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %691 = reshape(%689, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %692 = @func_2709(%690, %691) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %693 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %694 = %692.2;
  (%693, %687, %694)
}

def @func_5428() -> (Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) {
  %695 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %696 = %695.1;
  %697 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %698 = %697.3;
  %699 = cast(%698, dtype="int64") /* ty=Tensor[(384), int64] */;
  %700 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%696, dtype="int64") /* ty=Tensor[(4, 6, 16), int64] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %703 = cast(meta[relay.Constant][20] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %704 = reshape(%703, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %705 = @func_3500(%704) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
  %706 = logical_xor(%701, %702) /* ty=Tensor[(4, 6, 16), int64] */;
  %707 = %705.3;
  %708 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  (%706, %707, meta[relay.Constant][20] /* ty=Tensor[(385), float32] */, %708)
}

def @func_14249(%var_14245: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(6, 64), uint32], Tensor[(384), float32]) {
  %709 = @func_11029() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %710 = @func_14163() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) */;
  %711 = cast(%var_14245, dtype="float32") /* ty=Tensor[(384), float32] */;
  %712 = reshape(%711, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %713 = @func_8491(%712) /* ty=(Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) */;
  %714 = %709.2;
  %715 = %710.0;
  %716 = %713.1;
  (%714, %715, %716, %var_14245)
}

def @func_6510() -> (Tensor[(6, 64), float32],) {
  %717 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
  %718 = %717.0;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %720 = sinh(%719) /* ty=Tensor[(6, 64), float32] */;
  (%720,)
}

def @func_12183() -> (Tensor[(11, 7, 5), float32],) {
  %721 = @func_6625() /* ty=Tensor[(11, 7, 5), float32] */;
  (%721,)
}

def @func_8959(%var_8951: Tensor[(12, 5, 1), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 5, ?), bool]) {
  %722 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
  %723 = cast(%var_8951, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %727 = @func_8218() /* ty=Tensor[(11, 7, 5), float32] */;
  %728 = equal(%725, %726) /* ty=Tensor[(12, 5, ?), bool] */;
  (%727, %728)
}

def @func_8099() -> (Tensor[(11, 7, 5), float32],) {
  %729 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  (%729,)
}

def @func_3648() -> (Tensor[(11, 7, 5), float32],) {
  %730 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %731 = %730.0;
  (%731,)
}

def @func_4929() -> Tensor[(11, 7, 5), float32] {
  @func_3380() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_2316(%var_2269: Tensor[(16, 13, 15), float64], %var_2270: Tensor[(16, 13, 15), float64]) -> (Tensor[(16, 13, 15), float64], Tensor[(16, 13, 15), float64]) {
  %732 = cast(%var_2270, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
  %733 = shape_of(%var_2269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_2269, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %736 = cast(%var_2269, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
  %737 = power(%734, %735) /* ty=Tensor[(16, 13, 15), float64] */;
  %738 = atanh(%736) /* ty=Tensor[(16, 13, 15), float64] */;
  (%737, %738)
}

def @func_10130() -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
  %739 = cast(meta[relay.Constant][21] /* ty=Tensor[(18, 18), float32] */, dtype="float32") /* ty=Tensor[(18, 18), float32] */;
  %740 = reshape(%739, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %741 = @func_7885(%740) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
  %742 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %743 = %741.2;
  (%742, %743, meta[relay.Constant][21] /* ty=Tensor[(18, 18), float32] */)
}

def @func_12164() -> (Tensor[(4, 6, 16), float32],) {
  %744 = @func_6437() /* ty=Tensor[(4, 6, 16), float32] */;
  (%744,)
}

def @func_10183(%var_10148: Tensor[(16, 810), int8], %var_10159: Tensor[(16, 810), int8]) -> (Tensor[(16, 810), bool], Tensor[(16, 810), uint16]) {
  %745 = @func_4020() /* ty=Tensor[(1, 810), int8] */;
  %746 = cast(%745, dtype="bool") /* ty=Tensor[(1, 810), bool] */;
  %747 = cast(%var_10148, dtype="bool") /* ty=Tensor[(16, 810), bool] */;
  %748 = cast(%var_10159, dtype="uint16") /* ty=Tensor[(16, 810), uint16] */;
  %749 = shape_of(%var_10148, dtype="int32") /* ty=Tensor[(2), int32] */;
  %750 = cast(%var_10148, dtype="uint16") /* ty=Tensor[(16, 810), uint16] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %752 = less_equal(%746, %747) /* ty=Tensor[(16, 810), bool] */;
  %753 = bitwise_and(%750, %751) /* ty=Tensor[(16, 810), uint16] */;
  (%752, %753)
}

def @func_6859() -> (Tensor[(11, 7, 5), float32],) {
  %754 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %755 = %754.1;
  (%755,)
}

def @func_5761() -> (Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
  %756 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %757 = %756.0;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %759 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %760 = acosh(%758) /* ty=Tensor[(1, 810), float64] */;
  %761 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
  %762 = %759.0;
  (%760, %761, %762)
}

def @func_14210() -> (Tensor[(11, 7, 5), float32],) {
  %763 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %764 = %763.1;
  (%764,)
}

def @func_3737(%var_3723: Tensor[(324), float32], %var_3724: Tensor[(96, 4), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) {
  %765 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %766 = cast(%var_3723, dtype="float32") /* ty=Tensor[(324), float32] */;
  %767 = cast(%var_3724, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %768 = reshape(%766, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %769 = reshape(%767, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %770 = @func_697(%768, %769) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %771 = %765.0;
  %772 = %770.0;
  (%771, %772, %var_3723, %var_3724)
}

def @func_2811() -> (Tensor[(11, 7, 5), float32],) {
  %773 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %774 = %773.0;
  (%774,)
}

def @func_8180(%var_8122: Tensor[(3, 12, 15), uint8]) -> (Tensor[(3, 12, 15), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %775 = cast(%var_8122, dtype="bool") /* ty=Tensor[(3, 12, 15), bool] */;
  %776 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(3, 12, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 12, 15), uint8] */, dtype="bool") /* ty=Tensor[(3, 12, 15), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %780 = @func_5343() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %781 = equal(%777, %778) /* ty=Tensor[(3, 12, 15), bool] */;
  %782 = %779.3;
  %783 = %780.0;
  (%781, %782, %783)
}

def @func_274(%var_244: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64],) {
  %784 = cast(%var_244, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
  %785 = atan(%784) /* ty=Tensor[(4, 6, 16), float64] */;
  (%785,)
}

def @func_9928() -> (Tensor[(11, 7, 5), float32],) {
  %786 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %787 = %786.3;
  (%787,)
}

def @func_10715() -> (Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %788 = @func_10130() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) */;
  %789 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %790 = %788.1;
  %791 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %792 = %789.0;
  (%790, %791, %792)
}

def @func_7082() -> (Tensor[(11, 7, 5), float32],) {
  %793 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %794 = %793.1;
  (%794,)
}

def @func_9578(%var_9553: Tensor[(1, 5, 7), float64]) -> (Tensor[(1, 5, 7), float32], Tensor[(?, 5, 7), bool]) {
  %795 = cast(%var_9553, dtype="float64") /* ty=Tensor[(1, 5, 7), float64] */;
  %796 = sqrt(%795) /* ty=Tensor[(1, 5, 7), float64] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
  %798 = cast(%var_9553, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
  %799 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%796, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = sinh(%797) /* ty=Tensor[(1, 5, 7), float32] */;
  %803 = greater_equal(%800, %801) /* ty=Tensor[(?, 5, 7), bool] */;
  (%802, %803)
}

def @func_7885(%var_7874: Tensor[(324), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) {
  %804 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %805 = cast(%var_7874, dtype="float32") /* ty=Tensor[(324), float32] */;
  %806 = reshape(%805, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %807 = @func_7638(%806) /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) */;
  %808 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %809 = %804.2;
  %810 = %807.5;
  %811 = %808.0;
  (%809, %810, %var_7874, %811)
}

def @func_5617() -> (Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) {
  %812 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
  %813 = %812.0;
  %814 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
  (%813, %814)
}

def @func_12456() -> (Tensor[(11, 7, 5), float32],) {
  %815 = @func_10715() /* ty=(Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %816 = %815.1;
  (%816,)
}

def @func_12534() -> Tensor[(11, 7, 5), float32] {
  %817 = @func_11342() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %817.0
}

def @func_9941() -> (Tensor[(11, 7, 5), float32],) {
  %818 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %819 = %818.0;
  (%819,)
}

def @func_4674() -> (Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %820 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %821 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %822 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %823 = %820.2;
  %824 = %821.0;
  %825 = %822.0;
  (%823, %824, %825)
}

def @func_4849() -> Tensor[(11, 7, 5), float32] {
  %826 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %826.1
}

def @func_12438() -> Tensor[(11, 7, 5), float32] {
  %827 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
  %827.0
}

def @func_12706() -> Tensor[(11, 7, 5), float32] {
  %828 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %828.0
}

def @func_13598(%var_13584: int64, %var_13585: Tensor[(4, 5, 6), int64]) -> Tensor[(4, 5, 6), int64] {
  %829 = cast(%var_13584, dtype="int64") /* ty=int64 */;
  %830 = cast(%var_13585, dtype="int64") /* ty=Tensor[(4, 5, 6), int64] */;
  bitwise_and(%829, %830) /* ty=Tensor[(4, 5, 6), int64] */
}

def @func_6659(%var_6639: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  %831 = cast(%var_6639, dtype="float64") /* ty=Tensor[(9, 12, 16), float64] */;
  log10(%831) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_10732() -> Tensor[(11, 7, 5), float32] {
  %832 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %832.0
}

def @func_6799() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %833 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %834 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %835 = %833.3;
  %836 = %834.1;
  (%835, %836)
}

def @func_6424() -> (Tensor[(?, 324), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32]) {
  %837 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
  %838 = cast(meta[relay.Constant][23] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %839 = reshape(%838, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %840 = @func_3289(%839) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %841 = %837.4;
  %842 = %840.1;
  (%841, %842, meta[relay.Constant][23] /* ty=Tensor[(384), float32] */)
}

def @func_4865() -> Tensor[(11, 7, 5), float32] {
  %843 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %843.0
}

def @func_13711() -> (Tensor[(384), float64],) {
  %844 = @func_11566() /* ty=Tensor[(384), float64] */;
  (%844,)
}

def @func_11566() -> Tensor[(384), float64] {
  %845 = @func_8379() /* ty=(Tensor[(384), float64],) */;
  %845.0
}

def @func_9839(%var_9830: Tensor[(39), float64]) -> (Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) {
  %846 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %847 = cast(meta[relay.Constant][24] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
  %848 = reshape(%847, newshape=[39]) /* ty=Tensor[(39), bool] */;
  %849 = @func_6842(%848) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
  %850 = %849.3;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(39), float64] */;
  %852 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(39), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %853 = cast(meta[relay.Constant][24] /* ty=Tensor[(39), bool] */, dtype="float64") /* ty=Tensor[(39), float64] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?), float64] */;
  %855 = cast(%850, dtype="float64") /* ty=Tensor[(39), float64] */;
  %856 = asin(%855) /* ty=Tensor[(39), float64] */;
  %857 = cast(%856, dtype="float32") /* ty=Tensor[(39), float32] */;
  %858 = cast(%var_9830, dtype="int32") /* ty=Tensor[(39), int32] */;
  %859 = shape_of(%856, dtype="int32") /* ty=Tensor[(1), int32] */;
  %860 = cast(%856, dtype="int32") /* ty=Tensor[(39), int32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?), int32] */;
  %862 = %846.0;
  %863 = divide(%853, %854) /* ty=Tensor[(39), float64] */;
  %864 = exp(%857) /* ty=Tensor[(39), float32] */;
  %865 = logical_xor(%860, %861) /* ty=Tensor[(39), int32] */;
  (%862, %863, %864, %865)
}

def @func_9429() -> (Tensor[(1, 324), float32],) {
  %866 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %867 = %866.0;
  (%867,)
}

def @func_3500(%var_3402: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) {
  %868 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %869 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %870 = %869.1;
  %871 = cast(%var_3402, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = greater_equal(%873, %874) /* ty=Tensor[(11, 7, 5), bool] */;
  %876 = cast(%875, dtype="int32") /* ty=Tensor[(11, 7, 5), int32] */;
  %877 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%870, dtype="int32") /* ty=Tensor[(11, 7, 5), int32] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %880 = maximum(%878, %879) /* ty=Tensor[(11, 7, 5), int32] */;
  %881 = cast(%875, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %885 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 64), float32] */, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %886 = reshape(%885, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %887 = @func_3289(%886) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %888 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %889 = cast(%888, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %890 = %868.0;
  %891 = mod(%883, %884) /* ty=Tensor[(11, 7, 5), float32] */;
  %892 = %887.2;
  %893 = acos(%889) /* ty=Tensor[(11, 7, 5), float64] */;
  (%890, %891, %892, meta[relay.Constant][25] /* ty=Tensor[(6, 64), float32] */, %893)
}

def @func_9412() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %894 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %895 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  %896 = @func_8218() /* ty=Tensor[(11, 7, 5), float32] */;
  %897 = %894.0;
  (%895, %896, %897)
}

def @func_8491(%var_8478: Tensor[(6, 64), float32]) -> (Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) {
  %898 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %899 = %898.0;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %901 = cast(%899, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %902 = exp(%901) /* ty=Tensor[(6, 64), float32] */;
  %903 = cast(%var_8478, dtype="uint32") /* ty=Tensor[(6, 64), uint32] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(2), int32] */;
  %905 = cast(%902, dtype="uint32") /* ty=Tensor[(6, 64), uint32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %907 = cast(%899, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %908 = rsqrt(%900) /* ty=Tensor[(6, 64), float64] */;
  %909 = maximum(%905, %906) /* ty=Tensor[(6, 64), uint32] */;
  %910 = tan(%907) /* ty=Tensor[(6, 64), float32] */;
  (%908, %909, %910)
}

def @func_6576() -> (Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) {
  %911 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %912 = @func_5103() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %913 = %911.1;
  %914 = %912.0;
  (%913, %914)
}

def @func_6437() -> Tensor[(4, 6, 16), float32] {
  %915 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %915.0
}

def @func_10403(%var_10394: Tensor[(12, 324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 324), int16], Tensor[(12, 324), uint8], Tensor[(11, 7, 5), float32]) {
  %916 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %917 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  %918 = cast(%917, dtype="uint16") /* ty=Tensor[(1, 324), uint16] */;
  %919 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 324), float32] */, dtype="uint16") /* ty=Tensor[(12, 324), uint16] */;
  %920 = logical_xor(%918, %919) /* ty=Tensor[(12, 324), uint16] */;
  %921 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 324), float32] */, dtype="int16") /* ty=Tensor[(12, 324), int16] */;
  %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(2), int32] */;
  %923 = cast(%920, dtype="int16") /* ty=Tensor[(12, 324), int16] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %925 = cast(%var_10394, dtype="uint8") /* ty=Tensor[(12, 324), uint8] */;
  %926 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(12, 324), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %927 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 324), float32] */, dtype="uint8") /* ty=Tensor[(12, 324), uint8] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %929 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %930 = %916.1;
  %931 = add(%923, %924) /* ty=Tensor[(12, 324), int16] */;
  %932 = bitwise_xor(%927, %928) /* ty=Tensor[(12, 324), uint8] */;
  %933 = %929.3;
  (%930, %931, %932, %933)
}

def @func_5201() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) {
  %934 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %935 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
  %936 = %934.0;
  %937 = %935.1;
  (%936, %937)
}

def @func_7538() -> (Tensor[(11, 7, 5), bool],) {
  %938 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
  %939 = %938.1;
  (%939,)
}

def @func_13880(%var_13873: Tensor[(810), int8], %var_13874: Tensor[(385), float32]) -> (Tensor[(384), float64], Tensor[(324), float32], Tensor[(810), int8], Tensor[(385), float32]) {
  %940 = @func_13711() /* ty=(Tensor[(384), float64],) */;
  %941 = cast(%var_13873, dtype="int8") /* ty=Tensor[(810), int8] */;
  %942 = cast(%var_13874, dtype="float32") /* ty=Tensor[(385), float32] */;
  %943 = reshape(%941, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %944 = reshape(%942, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %945 = @func_4551(%943, %944) /* ty=(Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) */;
  %946 = %940.0;
  %947 = %945.0;
  (%946, %947, %var_13873, %var_13874)
}

def @func_6029() -> (Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %948 = @func_5343() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %949 = %948.0;
  %950 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
  (%949, %950)
}

def @func_3349() -> Tensor[(11, 7, 5), float32] {
  %951 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %951.0
}

def @func_5244() -> (Tensor[(11, 7, 5), bool],) {
  %952 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %953 = %952.1;
  (%953,)
}

def @func_4808() -> (Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) {
  %954 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %955 = %954.0;
  %956 = cast(%955, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %957 = reshape(%956, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %958 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %959 = reshape(%958, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %960 = @func_3289(%959) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %961 = cast(%955, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %962 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %965 = erf(%964) /* ty=Tensor[(1, 324), float32] */;
  %966 = cast(%963, dtype="uint32") /* ty=Tensor[(1, 324), uint32] */;
  %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(2), int32] */;
  %968 = cast(%965, dtype="uint32") /* ty=Tensor[(1, 324), uint32] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %970 = @func_3330(%957) /* ty=Tensor[(11, 7, 5), uint32] */;
  %971 = %960.1;
  %972 = acosh(%961) /* ty=Tensor[(11, 7, 5), float32] */;
  %973 = add(%968, %969) /* ty=Tensor[(?, 324), uint32] */;
  (%970, %971, meta[relay.Constant][27] /* ty=Tensor[(384), float32] */, %972, %973)
}

def @func_11252() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %974 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %975 = %974.0;
  %976 = @func_10732() /* ty=Tensor[(11, 7, 5), float32] */;
  (%975, %976)
}

def @func_8033(%var_7998: Tensor[(6, 64), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float32]) {
  %977 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %978 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
  %979 = %978.0;
  %980 = cast(%var_7998, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(2), int32] */;
  %982 = cast(%979, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %984 = %977.4;
  %985 = floor_mod(%982, %983) /* ty=Tensor[(6, 64), float32] */;
  (%984, %985)
}

def @func_2855() -> (Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) {
  %986 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %987 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 324), float32] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %988 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 192), float64] */, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %989 = reshape(%987, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %990 = reshape(%988, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %991 = @func_697(%989, %990) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %992 = %986.4;
  %993 = %991.0;
  (%992, %993, meta[relay.Constant][28] /* ty=Tensor[(1, 324), float32] */, meta[relay.Constant][29] /* ty=Tensor[(2, 192), float64] */)
}

def @func_3289(%var_3257: Tensor[(4, 6, 16), float32]) -> (Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) {
  %994 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %995 = %994.0;
  %996 = cast(%var_3257, dtype="uint8") /* ty=Tensor[(4, 6, 16), uint8] */;
  %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%995, dtype="uint8") /* ty=Tensor[(4, 6, 16), uint8] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1000 = cast(meta[relay.Constant][30] /* ty=Tensor[(385, 1), float32] */, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %1001 = reshape(%1000, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %1002 = bitwise_xor(%998, %999) /* ty=Tensor[(4, 6, 16), uint8] */;
  %1003 = @func_2574(%1001) /* ty=Tensor[(11, 7, 5), bool] */;
  (%1002, %1003, meta[relay.Constant][30] /* ty=Tensor[(385, 1), float32] */)
}

def @func_13084() -> Tensor[(11, 7, 5), float32] {
  %1004 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1004.0
}

def @func_11617() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1005 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1006 = @func_8099() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1007 = %1005.0;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_8999() -> (Tensor[(11, 7, 5), float32],) {
  %1009 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_8338() -> (Tensor[(11, 7, 5), float32],) {
  %1011 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1012 = %1011.0;
  (%1012,)
}

def @func_14398() -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
  %1013 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %1014 = cast(meta[relay.Constant][31] /* ty=Tensor[(18, 18), float32] */, dtype="float32") /* ty=Tensor[(18, 18), float32] */;
  %1015 = reshape(%1014, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %1016 = @func_7885(%1015) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
  %1017 = %1013.1;
  %1018 = %1016.2;
  (%1017, %1018, meta[relay.Constant][31] /* ty=Tensor[(18, 18), float32] */)
}

def @func_9785() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) {
  %1019 = @func_8379() /* ty=(Tensor[(384), float64],) */;
  %1020 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
  %1021 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %1022 = @func_6059() /* ty=Tensor[(11, 7, 5), float32] */;
  %1023 = %1019.0;
  %1024 = %1020.1;
  %1025 = %1021.0;
  (%1022, %1023, %1024, %1025)
}

def @func_7087() -> Tensor[(11, 7, 5), float32] {
  @func_6564() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_11593() -> (Tensor[(4, 6, 16), float32],) {
  %1026 = @func_5201() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) */;
  %1027 = %1026.0;
  (%1027,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12360(%var_12358: Tensor[(1, 39), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(39), int32], Tensor[(1, 39), float64]) {
  @func_12357(%var_12358) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(39), int32], Tensor[(1, 39), float64]) */
}

def @func_6438() -> Tensor[(4, 6, 16), float32] {
  %1 = fn () -> Tensor[(4, 6, 16), float32] {
    %0 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %0.0
  };
  %1() /* ty=Tensor[(4, 6, 16), float32] */
}

def @func_8182(%var_8181: Tensor[(3, 12, 15), uint8]) -> (Tensor[(3, 12, 15), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %11 = fn (%var_8122: Tensor[(3, 12, 15), uint8]) -> (Tensor[(3, 12, 15), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
    %2 = cast(%var_8122, dtype="bool") /* ty=Tensor[(3, 12, 15), bool] */;
    %3 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 15), uint8] */, dtype="bool") /* ty=Tensor[(3, 12, 15), bool] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %6 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
    %7 = @func_5343() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %8 = equal(%4, %5) /* ty=Tensor[(3, 12, 15), bool] */;
    %9 = %6.3;
    %10 = %7.0;
    (%8, %9, %10)
  };
  %11(%var_8181) /* ty=(Tensor[(3, 12, 15), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_2223(%var_2221: Tensor[(1, 13, 3), bool]) -> (Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) {
  @func_2220(%var_2221) /* ty=(Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) */
}

def @func_9930() -> (Tensor[(11, 7, 5), float32],) {
  @func_9928() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_5428() -> (Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) {
  %12 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %13 = %12.1;
  %14 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %15 = %14.3;
  %16 = cast(%15, dtype="int64") /* ty=Tensor[(384), int64] */;
  %17 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%13, dtype="int64") /* ty=Tensor[(4, 6, 16), int64] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %21 = reshape(%20, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %22 = @func_3500(%21) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
  %23 = logical_xor(%18, %19) /* ty=Tensor[(4, 6, 16), int64] */;
  %24 = %22.3;
  %25 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  (%23, %24, meta[relay.Constant][1] /* ty=Tensor[(385), float32] */, %25)
}

def @func_12535() -> Tensor[(11, 7, 5), float32] {
  %27 = fn () -> Tensor[(11, 7, 5), float32] {
    %26 = @func_11342() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %26.0
  };
  %27() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_6844(%var_6843: Tensor[(39), bool]) -> (Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) {
  %40 = fn (%var_6839: Tensor[(39), bool]) -> (Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) {
    %28 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %29 = %28.0;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 7, 5), float32] */, dtype="int16") /* ty=Tensor[(11, 7, 5), int16] */;
    %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%29, dtype="int16") /* ty=Tensor[(11, 7, 5), int16] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %34 = cast(%var_6839, dtype="bool") /* ty=Tensor[(39), bool] */;
    %35 = reshape(%34, newshape=[1, 13, 3]) /* ty=Tensor[(1, 13, 3), bool] */;
    %36 = @func_2220(%35) /* ty=(Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
    %37 = left_shift(%32, %33) /* ty=Tensor[(11, 7, 5), int16] */;
    %38 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
    %39 = %36.1;
    (%37, %38, %39, %var_6839)
  };
  %40(%var_6843) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */
}

def @func_6456() -> Tensor[(11, 7, 5), float32] {
  %42 = fn () -> Tensor[(11, 7, 5), float32] {
    %41 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %41.0
  };
  %42() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_12511() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  @func_12509() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */
}

def @func_276(%var_275: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64],) {
  %45 = fn (%var_244: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64],) {
    %43 = cast(%var_244, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
    %44 = atan(%43) /* ty=Tensor[(4, 6, 16), float64] */;
    (%44,)
  };
  %45(%var_275) /* ty=(Tensor[(4, 6, 16), float64],) */
}

def @func_12458() -> (Tensor[(11, 7, 5), float32],) {
  @func_12456() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_12965(%var_12963: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(3, 108), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 324), bool], Tensor[(1, 384), float32], Tensor[(384), float32]) {
  @func_12962(%var_12963) /* ty=(Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(3, 108), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 324), bool], Tensor[(1, 384), float32], Tensor[(384), float32]) */
}

def @func_11568() -> Tensor[(384), float64] {
  @func_11566() /* ty=Tensor[(384), float64] */
}

def @func_6777() -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) {
  @func_6775() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) */
}

def @func_4373() -> (Tensor[(11, 7, 5), float32],) {
  %46 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  (%46,)
}

def @func_10010(%var_10005: Tensor[(1, 384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) {
  %47 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %48 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %49 = cast(%var_10005, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %50 = reshape(%49, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %51 = @func_3289(%50) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %52 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %53 = %47.2;
  %54 = %48.1;
  %55 = %51.1;
  (%52, %53, %54, %55, %var_10005)
}

def @func_9265() -> (Tensor[(11, 7, 5), float32],) {
  %56 = @func_8338() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %57 = %56.0;
  (%57,)
}

def @func_13421() -> (Tensor[(1, 810), float64],) {
  %58 = @func_5761() /* ty=(Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %59 = %58.0;
  (%59,)
}

def @func_13819() -> Tensor[(11, 7, 5), float32] {
  %61 = fn () -> Tensor[(11, 7, 5), float32] {
    %60 = @func_9265() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %60.0
  };
  %61() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_6424() -> (Tensor[(?, 324), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32]) {
  %62 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %64 = reshape(%63, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %65 = @func_3289(%64) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %66 = %62.4;
  %67 = %65.1;
  (%66, %67, meta[relay.Constant][3] /* ty=Tensor[(384), float32] */)
}

def @func_8825() -> (Tensor[(2, 192), float64], Tensor[(128), int64], Tensor[(385, 1), float32], Tensor[(5, 16, 8), int32], Tensor[(11, 7, 5), float32]) {
  %87 = fn () -> (Tensor[(2, 192), float64], Tensor[(128), int64], Tensor[(385, 1), float32], Tensor[(5, 16, 8), int32], Tensor[(11, 7, 5), float32]) {
    %68 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
    %69 = %68.3;
    %70 = cast(%69, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %71 = reshape(%70, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
    %72 = @func_3289(%71) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
    %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), int64] */, dtype="int64") /* ty=Tensor[(128), int64] */;
    %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(640), int64] */, dtype="int64") /* ty=Tensor[(640), int64] */;
    %75 = reshape(%73, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), int64] */;
    %76 = reshape(%74, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
    %77 = @func_8570(%75, %76) /* ty=(Tensor[(5, 16, 8), bool],) */;
    %78 = %77.0;
    %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(640), int64] */, dtype="int32") /* ty=Tensor[(640), int32] */;
    %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%78, dtype="int32") /* ty=Tensor[(5, 16, 8), int32] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %83 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %84 = %72.2;
    %85 = logical_xor(%81, %82) /* ty=Tensor[(5, 16, 8), int32] */;
    %86 = %83.1;
    (%69, meta[relay.Constant][4] /* ty=Tensor[(128), int64] */, %84, %85, %86)
  };
  %87() /* ty=(Tensor[(2, 192), float64], Tensor[(128), int64], Tensor[(385, 1), float32], Tensor[(5, 16, 8), int32], Tensor[(11, 7, 5), float32]) */
}

def @func_11500() -> Tensor[(11, 7, 5), float32] {
  %89 = fn () -> Tensor[(11, 7, 5), float32] {
    %88 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %88.0
  };
  %89() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_12791() -> Tensor[(11, 7, 5), float32] {
  @func_6625() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_3793() -> (Tensor[(11, 7, 5), float32],) {
  @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_4596(%var_4594: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_4593(%var_4594) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_13084() -> Tensor[(11, 7, 5), float32] {
  %90 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %90.0
}

def @func_10406(%var_10404: Tensor[(12, 324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 324), int16], Tensor[(12, 324), uint8], Tensor[(11, 7, 5), float32]) {
  @func_10403(%var_10404) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(12, 324), int16], Tensor[(12, 324), uint8], Tensor[(11, 7, 5), float32]) */
}

def @func_3500(%var_3402: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) {
  %91 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %92 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %93 = %92.1;
  %94 = cast(%var_3402, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %98 = greater_equal(%96, %97) /* ty=Tensor[(11, 7, 5), bool] */;
  %99 = cast(%98, dtype="int32") /* ty=Tensor[(11, 7, 5), int32] */;
  %100 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%93, dtype="int32") /* ty=Tensor[(11, 7, 5), int32] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %103 = maximum(%101, %102) /* ty=Tensor[(11, 7, 5), int32] */;
  %104 = cast(%98, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 64), float32] */, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %109 = reshape(%108, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %110 = @func_3289(%109) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %111 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %113 = %91.0;
  %114 = mod(%106, %107) /* ty=Tensor[(11, 7, 5), float32] */;
  %115 = %110.2;
  %116 = acos(%112) /* ty=Tensor[(11, 7, 5), float64] */;
  (%113, %114, %115, meta[relay.Constant][6] /* ty=Tensor[(6, 64), float32] */, %116)
}

def @func_6566() -> Tensor[(11, 7, 5), float32] {
  @func_6564() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_6541() -> (Tensor[(12, 5, 1), float32],) {
  %119 = fn () -> (Tensor[(12, 5, 1), float32],) {
    %117 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
    %118 = %117.0;
    (%118,)
  };
  %119() /* ty=(Tensor[(12, 5, 1), float32],) */
}

def @func_9208(%var_9207: Tensor[(13, 13, 2), float64]) -> (Tensor[(13, 13, 2), float64],) {
  %122 = fn (%var_9190: Tensor[(13, 13, 2), float64]) -> (Tensor[(13, 13, 2), float64],) {
    %120 = cast(%var_9190, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
    %121 = sigmoid(%120) /* ty=Tensor[(13, 13, 2), float64] */;
    (%121,)
  };
  %122(%var_9207) /* ty=(Tensor[(13, 13, 2), float64],) */
}

def @func_11566() -> Tensor[(384), float64] {
  %123 = @func_8379() /* ty=(Tensor[(384), float64],) */;
  %123.0
}

def @func_3934(%var_3932: Tensor[(11, 7, 5), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) {
  @func_3931(%var_3932) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) */
}

def @func_9928() -> (Tensor[(11, 7, 5), float32],) {
  %124 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %125 = %124.3;
  (%125,)
}

def @func_13112() -> Tensor[(4, 6, 16), float32] {
  @func_13110() /* ty=Tensor[(4, 6, 16), float32] */
}

def @func_2945() -> Tensor[(11, 7, 5), float32] {
  @func_2943() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_11708() -> (Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) {
  %126 = @func_7071() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %127 = @func_8274() /* ty=Tensor[(12, 5, 1), float64] */;
  %128 = %126.0;
  (%127, %128)
}

def @func_4554(%var_4552: Tensor[(810), int8], %var_4553: Tensor[(11, 7, 5), float32]) -> (Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) {
  %145 = fn (%var_4510: Tensor[(810), int8], %var_4545: Tensor[(11, 7, 5), float32]) -> (Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) {
    %129 = cast(%var_4510, dtype="int8") /* ty=Tensor[(810), int8] */;
    %130 = cast(%var_4510, dtype="int8") /* ty=Tensor[(810), int8] */;
    %131 = reshape(%129, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
    %132 = reshape(%130, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
    %133 = @func_2709(%131, %132) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
    %134 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    %135 = cast(%134, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    %136 = reshape(%135, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %137 = @func_3500(%136) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
    %138 = cast(%var_4545, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
    %139 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %140 = cast(%134, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
    %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %142 = %133.2;
    %143 = %137.4;
    %144 = logical_or(%140, %141) /* ty=Tensor[(11, 7, 5), bool] */;
    (%142, %var_4510, %143, %144)
  };
  %145(%var_4552, %var_4553) /* ty=(Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) */
}

def @func_12248() -> (Tensor[(11, 7, 5), bool],) {
  %146 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %147 = %146.0;
  (%147,)
}

def @func_2456() -> (Tensor[(11, 7, 5), float32],) {
  @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_12164() -> (Tensor[(4, 6, 16), float32],) {
  %148 = @func_6437() /* ty=Tensor[(4, 6, 16), float32] */;
  (%148,)
}

def @func_11923(%var_11846: Tensor[(15, 810), int8]) -> (Tensor[(15, 810), int8], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(6, 64), float32], Tensor[(15, 810), float32]) {
  %149 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %150 = %149.1;
  %151 = cast(%150, dtype="uint16") /* ty=Tensor[(1, 810), uint16] */;
  %152 = cast(%var_11846, dtype="uint16") /* ty=Tensor[(15, 810), uint16] */;
  %153 = bitwise_xor(%151, %152) /* ty=Tensor[(15, 810), uint16] */;
  %154 = cast(%var_11846, dtype="int8") /* ty=Tensor[(15, 810), int8] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %156 = cast(%153, dtype="int8") /* ty=Tensor[(15, 810), int8] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %158 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %159 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %160 = cast(%var_11846, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %161 = cast(%150, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %162 = @func_9941() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %163 = cast(%153, dtype="float64") /* ty=Tensor[(15, 810), float64] */;
  %164 = erf(%163) /* ty=Tensor[(15, 810), float64] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %166 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
  %167 = cast(%164, dtype="float32") /* ty=Tensor[(15, 810), float32] */;
  %168 = minimum(%156, %157) /* ty=Tensor[(15, 810), int8] */;
  %169 = %158.0;
  %170 = %159.0;
  %171 = divide(%160, %161) /* ty=Tensor[(15, 810), float32] */;
  %172 = %162.0;
  %173 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
  %174 = atan(%165) /* ty=Tensor[(15, 810), float32] */;
  %175 = %166.0;
  %176 = log(%167) /* ty=Tensor[(15, 810), float32] */;
  (%168, %169, %170, %171, %172, %173, %174, %175, %176)
}

def @func_7674() -> Tensor[(11, 7, 5), float32] {
  %177 = fn () -> Tensor[(11, 7, 5), float32] {
    @func_6564() /* ty=Tensor[(11, 7, 5), float32] */
  };
  %177() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_11594() -> (Tensor[(4, 6, 16), float32],) {
  %180 = fn () -> (Tensor[(4, 6, 16), float32],) {
    %178 = @func_5201() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) */;
    %179 = %178.0;
    (%179,)
  };
  %180() /* ty=(Tensor[(4, 6, 16), float32],) */
}

def @func_7885(%var_7874: Tensor[(324), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) {
  %181 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %182 = cast(%var_7874, dtype="float32") /* ty=Tensor[(324), float32] */;
  %183 = reshape(%182, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %184 = @func_7638(%183) /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) */;
  %185 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %186 = %181.2;
  %187 = %184.5;
  %188 = %185.0;
  (%186, %187, %var_7874, %188)
}

def @func_3741(%var_3739: Tensor[(324), float32], %var_3740: Tensor[(96, 4), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) {
  @func_3737(%var_3739, %var_3740) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) */
}

def @func_6662(%var_6660: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  @func_6659(%var_6660) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_7836() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %194 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %189 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %190 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %191 = %189.1;
    %192 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
    %193 = %190.0;
    (%191, %192, %193)
  };
  %194() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_14036() -> (Tensor[(11, 7, 5), float32],) {
  @func_14034() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_4454() -> Tensor[(12, 5, 1), float64] {
  %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  exp(%195) /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_3229() -> (Tensor[(4, 6, 16), float32],) {
  %196 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %197 = %196.2;
  (%197,)
}

def @func_13538() -> (Tensor[(1, 324), float32], Tensor[(1, 810), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %210 = fn () -> (Tensor[(1, 324), float32], Tensor[(1, 810), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %198 = @func_9429() /* ty=(Tensor[(1, 324), float32],) */;
    %199 = @func_13421() /* ty=(Tensor[(1, 810), float64],) */;
    %200 = %199.0;
    %201 = cast(%200, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
    %202 = @func_11469() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %203 = @func_13056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %204 = @func_11708() /* ty=(Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) */;
    %205 = %198.0;
    %206 = tan(%201) /* ty=Tensor[(1, 810), float32] */;
    %207 = %202.0;
    %208 = %203.1;
    %209 = %204.1;
    (%205, %206, %207, %208, %209)
  };
  %210() /* ty=(Tensor[(1, 324), float32], Tensor[(1, 810), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_10130() -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
  %211 = cast(meta[relay.Constant][8] /* ty=Tensor[(18, 18), float32] */, dtype="float32") /* ty=Tensor[(18, 18), float32] */;
  %212 = reshape(%211, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %213 = @func_7885(%212) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
  %214 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %215 = %213.2;
  (%214, %215, meta[relay.Constant][8] /* ty=Tensor[(18, 18), float32] */)
}

def @func_9429() -> (Tensor[(1, 324), float32],) {
  %216 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %217 = %216.0;
  (%217,)
}

def @func_8071() -> (Tensor[(11, 7, 5), float32],) {
  %220 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %218 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %219 = %218.2;
    (%219,)
  };
  %220() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_9933() -> Tensor[(11, 7, 5), float32] {
  %221 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
  %221.0
}

def @func_11606() -> Tensor[(11, 7, 5), float32] {
  %223 = fn () -> Tensor[(11, 7, 5), float32] {
    %222 = @func_10467() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %222.3
  };
  %223() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5913() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %230 = fn () -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %224 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %225 = %224.0;
    %226 = cast(%225, dtype="float32") /* ty=Tensor[(4, 6, 16), float32] */;
    %227 = rsqrt(%226) /* ty=Tensor[(4, 6, 16), float32] */;
    %228 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
    %229 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
    (%227, %228, %229)
  };
  %230() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_7282() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %237 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %231 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %232 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %233 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %234 = %231.0;
    %235 = %232.2;
    %236 = %233.0;
    (%234, %235, %236)
  };
  %237() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_8570(%var_8564: Tensor[(1, 16, 8), int64], %var_8565: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), bool],) {
  %238 = cast(%var_8564, dtype="bool") /* ty=Tensor[(1, 16, 8), bool] */;
  %239 = cast(%var_8565, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %240 = greater_equal(%238, %239) /* ty=Tensor[(5, 16, 8), bool] */;
  (%240,)
}

def @func_11094(%var_11093: Tensor[(324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32]) {
  %247 = fn (%var_11080: Tensor[(324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32]) {
    %241 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
    %242 = cast(%var_11080, dtype="float32") /* ty=Tensor[(324), float32] */;
    %243 = reshape(%242, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
    %244 = @func_7638(%243) /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) */;
    %245 = %241.0;
    %246 = %244.2;
    (%245, %246, %var_11080)
  };
  %247(%var_11093) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32]) */
}

def @func_6030() -> (Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %251 = fn () -> (Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
    %248 = @func_5343() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %249 = %248.0;
    %250 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
    (%249, %250)
  };
  %251() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */
}

def @func_9787() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) {
  @func_9785() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_10696() -> (Tensor[(11, 7, 5), float32],) {
  @func_10694() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_13346() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %255 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %252 = @func_9928() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %253 = %252.0;
    %254 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    (%253, %254)
  };
  %255() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_2574(%var_2562: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), bool] {
  %256 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %257 = %256.0;
  %258 = cast(%var_2562, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%260, %261) /* ty=Tensor[(11, 7, 5), bool] */
}

def @func_8033(%var_7998: Tensor[(6, 64), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float32]) {
  %262 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %263 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
  %264 = %263.0;
  %265 = cast(%var_7998, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(2), int32] */;
  %267 = cast(%264, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %269 = %262.4;
  %270 = floor_mod(%267, %268) /* ty=Tensor[(6, 64), float32] */;
  (%269, %270)
}

def @func_14327(%var_14323: int64, %var_14324: Tensor[(14, 3, 16), int64], %var_14325: Tensor[(128), int64], %var_14326: Tensor[(640, 1), int64]) -> (Tensor[(11, 7, 5), bool], Tensor[(5, 16, 8), bool], Tensor[(128), int64], Tensor[(640, 1), int64], Tensor[(11, 7, 5), float32], Tensor[(14, 3, 16), float64]) {
  %289 = fn (%var_14282: int64, %var_14283: Tensor[(14, 3, 16), int64], %var_14313: Tensor[(128), int64], %var_14314: Tensor[(640, 1), int64]) -> (Tensor[(11, 7, 5), bool], Tensor[(5, 16, 8), bool], Tensor[(128), int64], Tensor[(640, 1), int64], Tensor[(11, 7, 5), float32], Tensor[(14, 3, 16), float64]) {
    %271 = @func_12248() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %272 = cast(%var_14313, dtype="int64") /* ty=Tensor[(128), int64] */;
    %273 = cast(%var_14314, dtype="int64") /* ty=Tensor[(640, 1), int64] */;
    %274 = reshape(%272, newshape=[1, 16, 8]) /* ty=Tensor[(1, 16, 8), int64] */;
    %275 = reshape(%273, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), int64] */;
    %276 = @func_8570(%274, %275) /* ty=(Tensor[(5, 16, 8), bool],) */;
    %277 = @func_9928() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %278 = cast(%var_14282, dtype="int64") /* ty=int64 */;
    %279 = cast(%var_14283, dtype="int64") /* ty=Tensor[(14, 3, 16), int64] */;
    %280 = multiply(%278, %279) /* ty=Tensor[(14, 3, 16), int64] */;
    %281 = cast(%var_14283, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
    %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %283 = cast(%280, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
    %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %285 = %271.0;
    %286 = %276.0;
    %287 = %277.0;
    %288 = floor_divide(%283, %284) /* ty=Tensor[(14, 3, 16), float64] */;
    (%285, %286, %var_14313, %var_14314, %287, %288)
  };
  %289(%var_14323, %var_14324, %var_14325, %var_14326) /* ty=(Tensor[(11, 7, 5), bool], Tensor[(5, 16, 8), bool], Tensor[(128), int64], Tensor[(640, 1), int64], Tensor[(11, 7, 5), float32], Tensor[(14, 3, 16), float64]) */
}

def @main() -> Tensor[(1, 324), float64] {
  %290 = @func_9431() /* ty=(Tensor[(1, 324), float32],) */;
  %291 = %290.0;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  %293 = atan(%292) /* ty=Tensor[(1, 324), float64] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
  sinh(%294) /* ty=Tensor[(1, 324), float64] */
}

def @func_12456() -> (Tensor[(11, 7, 5), float32],) {
  %295 = @func_10715() /* ty=(Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %296 = %295.1;
  (%296,)
}

def @func_6564() -> Tensor[(11, 7, 5), float32] {
  %297 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %297.1
}

def @func_9267() -> (Tensor[(11, 7, 5), float32],) {
  @func_9265() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_12228() -> Tensor[(11, 7, 5), float32] {
  %299 = fn () -> Tensor[(11, 7, 5), float32] {
    %298 = @func_12217() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %298.0
  };
  %299() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_11469() -> (Tensor[(11, 7, 5), bool],) {
  %300 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %301 = %300.0;
  (%301,)
}

def @func_6989() -> (Tensor[(1, 810), int8],) {
  %302 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %303 = %302.1;
  (%303,)
}

def @func_12219() -> (Tensor[(11, 7, 5), float32],) {
  @func_12217() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_14251(%var_14250: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(6, 64), uint32], Tensor[(384), float32]) {
  %312 = fn (%var_14245: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(6, 64), uint32], Tensor[(384), float32]) {
    %304 = @func_11029() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %305 = @func_14163() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) */;
    %306 = cast(%var_14245, dtype="float32") /* ty=Tensor[(384), float32] */;
    %307 = reshape(%306, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
    %308 = @func_8491(%307) /* ty=(Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) */;
    %309 = %304.2;
    %310 = %305.0;
    %311 = %308.1;
    (%309, %310, %311, %var_14245)
  };
  %312(%var_14250) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(6, 64), uint32], Tensor[(384), float32]) */
}

def @func_7231() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %317 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
    %313 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
    %314 = cast(%313, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    %315 = reshape(%314, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %316 = @func_2574(%315) /* ty=Tensor[(11, 7, 5), bool] */;
    (%313, %316)
  };
  %317() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_4930() -> Tensor[(11, 7, 5), float32] {
  %318 = fn () -> Tensor[(11, 7, 5), float32] {
    @func_3380() /* ty=Tensor[(11, 7, 5), float32] */
  };
  %318() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5567() -> (Tensor[(11, 7, 5), bool],) {
  %321 = fn () -> (Tensor[(11, 7, 5), bool],) {
    %319 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
    %320 = %319.1;
    (%320,)
  };
  %321() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_13713() -> (Tensor[(384), float64],) {
  @func_13711() /* ty=(Tensor[(384), float64],) */
}

def @func_12217() -> (Tensor[(11, 7, 5), float32],) {
  %322 = @func_11708() /* ty=(Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) */;
  %323 = %322.1;
  (%323,)
}

def @func_5343() -> (Tensor[(11, 7, 5), bool],) {
  %324 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %325 = %324.0;
  (%325,)
}

def @func_13110() -> Tensor[(4, 6, 16), float32] {
  %326 = @func_12164() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %326.0
}

def @func_3291(%var_3290: Tensor[(4, 6, 16), float32]) -> (Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) {
  %337 = fn (%var_3257: Tensor[(4, 6, 16), float32]) -> (Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) {
    %327 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %328 = %327.0;
    %329 = cast(%var_3257, dtype="uint8") /* ty=Tensor[(4, 6, 16), uint8] */;
    %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%328, dtype="uint8") /* ty=Tensor[(4, 6, 16), uint8] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %333 = cast(meta[relay.Constant][9] /* ty=Tensor[(385, 1), float32] */, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
    %334 = reshape(%333, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %335 = bitwise_xor(%331, %332) /* ty=Tensor[(4, 6, 16), uint8] */;
    %336 = @func_2574(%334) /* ty=Tensor[(11, 7, 5), bool] */;
    (%335, %336, meta[relay.Constant][9] /* ty=Tensor[(385, 1), float32] */)
  };
  %337(%var_3290) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */
}

def @func_5135() -> Tensor[(11, 7, 5), float32] {
  %338 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %338.0
}

def @func_7463() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) {
  %345 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) {
    %339 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %340 = cast(meta[relay.Constant][10] /* ty=Tensor[(192, 2), float32] */, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
    %341 = reshape(%340, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
    %342 = @func_3289(%341) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
    %343 = %339.0;
    %344 = %342.1;
    (%343, %344, meta[relay.Constant][10] /* ty=Tensor[(192, 2), float32] */)
  };
  %345() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */
}

def @func_10717() -> (Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_10715() /* ty=(Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_7539() -> (Tensor[(11, 7, 5), bool],) {
  %348 = fn () -> (Tensor[(11, 7, 5), bool],) {
    %346 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
    %347 = %346.1;
    (%347,)
  };
  %348() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_4266() -> (Tensor[(11, 7, 5), float32],) {
  %351 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %349 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
    %350 = %349.0;
    (%350,)
  };
  %351() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11153() -> Tensor[(324), float32] {
  @func_11151() /* ty=Tensor[(324), float32] */
}

def @func_9841(%var_9840: Tensor[(39), float64]) -> (Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) {
  %372 = fn (%var_9830: Tensor[(39), float64]) -> (Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) {
    %352 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %353 = cast(meta[relay.Constant][11] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
    %354 = reshape(%353, newshape=[39]) /* ty=Tensor[(39), bool] */;
    %355 = @func_6842(%354) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
    %356 = %355.3;
    %357 = cast(%356, dtype="float64") /* ty=Tensor[(39), float64] */;
    %358 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(39), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %359 = cast(meta[relay.Constant][11] /* ty=Tensor[(39), bool] */, dtype="float64") /* ty=Tensor[(39), float64] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?), float64] */;
    %361 = cast(%356, dtype="float64") /* ty=Tensor[(39), float64] */;
    %362 = asin(%361) /* ty=Tensor[(39), float64] */;
    %363 = cast(%362, dtype="float32") /* ty=Tensor[(39), float32] */;
    %364 = cast(%var_9830, dtype="int32") /* ty=Tensor[(39), int32] */;
    %365 = shape_of(%362, dtype="int32") /* ty=Tensor[(1), int32] */;
    %366 = cast(%362, dtype="int32") /* ty=Tensor[(39), int32] */;
    %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?), int32] */;
    %368 = %352.0;
    %369 = divide(%359, %360) /* ty=Tensor[(39), float64] */;
    %370 = exp(%363) /* ty=Tensor[(39), float32] */;
    %371 = logical_xor(%366, %367) /* ty=Tensor[(39), int32] */;
    (%368, %369, %370, %371)
  };
  %372(%var_9840) /* ty=(Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) */
}

def @func_5305() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %387 = fn () -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %373 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %374 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %375 = %374.1;
    %376 = cast(%375, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    %377 = reshape(%376, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %378 = cast(%375, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    %379 = reshape(%378, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %380 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %381 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %382 = %373.0;
    %383 = @func_2574(%377) /* ty=Tensor[(11, 7, 5), bool] */;
    %384 = @func_3330(%379) /* ty=Tensor[(11, 7, 5), uint32] */;
    %385 = %380.0;
    %386 = %381.0;
    (%382, %375, %383, %384, %385, %386)
  };
  %387() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_13711() -> (Tensor[(384), float64],) {
  %388 = @func_11566() /* ty=Tensor[(384), float64] */;
  (%388,)
}

def @func_8381() -> (Tensor[(384), float64],) {
  @func_8379() /* ty=(Tensor[(384), float64],) */
}

def @func_8036(%var_8034: Tensor[(6, 64), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float32]) {
  @func_8033(%var_8034) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(6, 64), float32]) */
}

def @func_4408() -> (Tensor[(4, 6, 16), float32],) {
  %391 = fn () -> (Tensor[(4, 6, 16), float32],) {
    %389 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %390 = %389.0;
    (%390,)
  };
  %391() /* ty=(Tensor[(4, 6, 16), float32],) */
}

def @func_9413() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %396 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
    %392 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %393 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
    %394 = @func_8218() /* ty=Tensor[(11, 7, 5), float32] */;
    %395 = %392.0;
    (%393, %394, %395)
  };
  %396() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_2712(%var_2710: Tensor[(15, 6, 9), int8], %var_2711: Tensor[(15, 6, 9), int8]) -> (Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) {
  %408 = fn (%var_2668: Tensor[(15, 6, 9), int8], %var_2669: Tensor[(15, 6, 9), int8]) -> (Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) {
    %397 = cast(%var_2669, dtype="int8") /* ty=Tensor[(15, 6, 9), int8] */;
    %398 = shape_of(%var_2668, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(%var_2668, dtype="int8") /* ty=Tensor[(15, 6, 9), int8] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %401 = cast(meta[relay.Constant][12] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
    %402 = cast(meta[relay.Constant][13] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %403 = reshape(%401, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
    %404 = reshape(%402, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %405 = @func_697(%403, %404) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
    %406 = multiply(%399, %400) /* ty=Tensor[(15, 6, 9), int8] */;
    %407 = %405.2;
    (%406, %407, meta[relay.Constant][12] /* ty=Tensor[(324), float32] */, meta[relay.Constant][13] /* ty=Tensor[(384), float64] */)
  };
  %408(%var_2710, %var_2711) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */
}

def @func_8695() -> Tensor[(11, 7, 5), float32] {
  %412 = fn () -> Tensor[(11, 7, 5), float32] {
    %409 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %410 = %409.0;
    %411 = cast(%410, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    sin(%411) /* ty=Tensor[(11, 7, 5), float32] */
  };
  %412() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_14211() -> (Tensor[(11, 7, 5), float32],) {
  %415 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %413 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %414 = %413.1;
    (%414,)
  };
  %415() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_2778() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) {
  @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */
}

def @func_12184() -> (Tensor[(11, 7, 5), float32],) {
  %417 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %416 = @func_6625() /* ty=Tensor[(11, 7, 5), float32] */;
    (%416,)
  };
  %417() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_6511() -> (Tensor[(6, 64), float32],) {
  %422 = fn () -> (Tensor[(6, 64), float32],) {
    %418 = @func_5440() /* ty=(Tensor[(6, 64), float32],) */;
    %419 = %418.0;
    %420 = cast(%419, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
    %421 = sinh(%420) /* ty=Tensor[(6, 64), float32] */;
    (%421,)
  };
  %422() /* ty=(Tensor[(6, 64), float32],) */
}

def @func_14399() -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
  %429 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
    %423 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %424 = cast(meta[relay.Constant][14] /* ty=Tensor[(18, 18), float32] */, dtype="float32") /* ty=Tensor[(18, 18), float32] */;
    %425 = reshape(%424, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %426 = @func_7885(%425) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
    %427 = %423.1;
    %428 = %426.2;
    (%427, %428, meta[relay.Constant][14] /* ty=Tensor[(18, 18), float32] */)
  };
  %429() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) */
}

def @func_5246() -> (Tensor[(11, 7, 5), bool],) {
  @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_11316() -> (Tensor[(11, 7, 5), float32],) {
  %430 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %431 = %430.0;
  (%431,)
}

def @func_4810() -> (Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) {
  @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */
}

def @func_6800() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %436 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %432 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
    %433 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %434 = %432.3;
    %435 = %433.1;
    (%434, %435)
  };
  %436() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_5521() -> (Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) {
  %437 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %439 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %440 = cast(%437, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  %441 = asin(%438) /* ty=Tensor[(12, 5, 1), float32] */;
  %442 = %439.2;
  %443 = sinh(%440) /* ty=Tensor[(12, 5, 1), float64] */;
  (%441, %442, %443)
}

def @func_5330() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_4246(%var_4245: Tensor[(384), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(384), float64]) {
  %450 = fn (%var_4223: Tensor[(384), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(384), float64]) {
    %444 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %445 = cast(%var_4223, dtype="float64") /* ty=Tensor[(384), float64] */;
    %446 = reshape(%445, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
    %447 = @func_274(%446) /* ty=(Tensor[(4, 6, 16), float64],) */;
    %448 = %444.0;
    %449 = %447.0;
    (%448, %449, %var_4223)
  };
  %450(%var_4245) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(384), float64]) */
}

def @func_12962(%var_12955: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(3, 108), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 324), bool], Tensor[(1, 384), float32], Tensor[(384), float32]) {
  %451 = @func_12509() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %452 = %451.1;
  %453 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %454 = %453.0;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %456 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%452, dtype="float64") /* ty=Tensor[(11, 7, 5), float64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %459 = @func_12248() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %460 = cast(%452, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %461 = reshape(%460, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %462 = @func_4593(%461) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %463 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %464 = reshape(%463, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %465 = @func_7885(%464) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */;
  %466 = @func_5617() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) */;
  %467 = %466.0;
  %468 = cast(%467, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %469 = cast(meta[relay.Constant][15] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
  %470 = cast(%var_12955, dtype="float32") /* ty=Tensor[(384), float32] */;
  %471 = reshape(%470, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %472 = @func_10010(%471) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) */;
  %473 = multiply(%457, %458) /* ty=Tensor[(11, 7, 5), float64] */;
  %474 = %459.0;
  %475 = %462.1;
  %476 = %465.1;
  %477 = @func_9933() /* ty=Tensor[(11, 7, 5), float32] */;
  %478 = less(%468, %469) /* ty=Tensor[(12, 5, 324), bool] */;
  %479 = %472.4;
  (%473, %474, %475, %476, %477, %478, %479, %var_12955)
}

def @func_8100() -> (Tensor[(11, 7, 5), float32],) {
  %481 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %480 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
    (%480,)
  };
  %481() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11253() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %485 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %482 = @func_8070() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %483 = %482.0;
    %484 = @func_10732() /* ty=Tensor[(11, 7, 5), float32] */;
    (%483, %484)
  };
  %485() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_13572() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 324), float32]) {
  %489 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(1, 324), float32]) {
    %486 = @func_10694() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %487 = %486.0;
    %488 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
    (%487, %488)
  };
  %489() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 324), float32]) */
}

def @func_13057() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %493 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %490 = @func_9785() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) */;
    %491 = %490.0;
    %492 = @func_4849() /* ty=Tensor[(11, 7, 5), float32] */;
    (%491, %492)
  };
  %493() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_5202() -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) {
  %498 = fn () -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) {
    %494 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %495 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
    %496 = %494.0;
    %497 = %495.1;
    (%496, %497)
  };
  %498() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_5244() -> (Tensor[(11, 7, 5), bool],) {
  %499 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %500 = %499.1;
  (%500,)
}

def @func_8652() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32]) {
  %505 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32]) {
    %501 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %502 = @func_6379() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %503 = %501.4;
    %504 = %502.0;
    (%503, %504)
  };
  %505() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */
}

def @func_10732() -> Tensor[(11, 7, 5), float32] {
  %506 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %506.0
}

def @func_4354() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
  %507 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %508 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_12793() -> Tensor[(11, 7, 5), float32] {
  @func_12791() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5328() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %511 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %512 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %513 = %511.1;
  %514 = @func_4929() /* ty=Tensor[(11, 7, 5), float32] */;
  %515 = %512.2;
  (%513, %514, %515)
}

def @func_3380() -> Tensor[(11, 7, 5), float32] {
  %516 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %516.0
}

def @func_5137() -> Tensor[(11, 7, 5), float32] {
  @func_5135() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5762() -> (Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
  %524 = fn () -> (Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
    %517 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
    %518 = %517.0;
    %519 = cast(%518, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %520 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %521 = acosh(%519) /* ty=Tensor[(1, 810), float64] */;
    %522 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
    %523 = %520.0;
    (%521, %522, %523)
  };
  %524() /* ty=(Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */
}

def @func_6860() -> (Tensor[(11, 7, 5), float32],) {
  %527 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %525 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %526 = %525.1;
    (%526,)
  };
  %527() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11343() -> (Tensor[(11, 7, 5), float32],) {
  %530 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %528 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %529 = %528.0;
    (%529,)
  };
  %530() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11710() -> (Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) {
  @func_11708() /* ty=(Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), float32]) */
}

def @func_10467() -> (Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %531 = @func_5566() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %532 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %533 = %532.3;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(384), float32] */;
  %535 = reshape(%534, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %536 = @func_10010(%535) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) */;
  %537 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %538 = %531.0;
  %539 = %536.1;
  %540 = %537.0;
  (%538, %533, %539, %540)
}

def @func_3737(%var_3723: Tensor[(324), float32], %var_3724: Tensor[(96, 4), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) {
  %541 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %542 = cast(%var_3723, dtype="float32") /* ty=Tensor[(324), float32] */;
  %543 = cast(%var_3724, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %544 = reshape(%542, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %545 = reshape(%543, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %546 = @func_697(%544, %545) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %547 = %541.0;
  %548 = %546.0;
  (%547, %548, %var_3723, %var_3724)
}

def @func_6775() -> (Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) {
  %549 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %550 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %551 = %550.0;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %553 = %549.0;
  %554 = sqrt(%552) /* ty=Tensor[(6, 64), float64] */;
  (%553, %554)
}

def @func_8379() -> (Tensor[(384), float64],) {
  %555 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %556 = %555.3;
  (%556,)
}

def @func_8999() -> (Tensor[(11, 7, 5), float32],) {
  %557 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %558 = %557.0;
  (%558,)
}

def @func_10253() -> (Tensor[(11, 7, 5), float32],) {
  @func_10251() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_5103() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %559 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %560 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %562 = reshape(%561, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %563 = @func_4265() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %564 = %559.0;
  %565 = @func_2574(%562) /* ty=Tensor[(11, 7, 5), bool] */;
  %566 = %563.0;
  (%564, %560, %565, %566)
}

def @func_8339() -> (Tensor[(11, 7, 5), float32],) {
  %569 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %567 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %568 = %567.0;
    (%568,)
  };
  %569() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11029() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %570 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %571 = @func_5360() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %572 = %570.1;
  %573 = %571.0;
  %574 = @func_6455() /* ty=Tensor[(11, 7, 5), float32] */;
  (%572, %573, %574)
}

def @func_7026() -> Tensor[(11, 7, 5), float32] {
  %576 = fn () -> Tensor[(11, 7, 5), float32] {
    %575 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
    %575.3
  };
  %576() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_8574(%var_8572: Tensor[(1, 16, 8), int64], %var_8573: Tensor[(5, 16, 8), int64]) -> (Tensor[(5, 16, 8), bool],) {
  @func_8570(%var_8572, %var_8573) /* ty=(Tensor[(5, 16, 8), bool],) */
}

def @func_8219() -> Tensor[(11, 7, 5), float32] {
  %577 = fn () -> Tensor[(11, 7, 5), float32] {
    @func_6455() /* ty=Tensor[(11, 7, 5), float32] */
  };
  %577() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_10183(%var_10148: Tensor[(16, 810), int8], %var_10159: Tensor[(16, 810), int8]) -> (Tensor[(16, 810), bool], Tensor[(16, 810), uint16]) {
  %578 = @func_4020() /* ty=Tensor[(1, 810), int8] */;
  %579 = cast(%578, dtype="bool") /* ty=Tensor[(1, 810), bool] */;
  %580 = cast(%var_10148, dtype="bool") /* ty=Tensor[(16, 810), bool] */;
  %581 = cast(%var_10159, dtype="uint16") /* ty=Tensor[(16, 810), uint16] */;
  %582 = shape_of(%var_10148, dtype="int32") /* ty=Tensor[(2), int32] */;
  %583 = cast(%var_10148, dtype="uint16") /* ty=Tensor[(16, 810), uint16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %585 = less_equal(%579, %580) /* ty=Tensor[(16, 810), bool] */;
  %586 = bitwise_and(%583, %584) /* ty=Tensor[(16, 810), uint16] */;
  (%585, %586)
}

def @func_3382() -> Tensor[(11, 7, 5), float32] {
  @func_3380() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_9033(%var_9032: Tensor[(384), float32]) -> (Tensor[(2, 15, 14), float32], Tensor[(11, 7, 5), bool], Tensor[(4, 6, 16), uint8], Tensor[(384), float32]) {
  %595 = fn (%var_9017: Tensor[(384), float32]) -> (Tensor[(2, 15, 14), float32], Tensor[(11, 7, 5), bool], Tensor[(4, 6, 16), uint8], Tensor[(384), float32]) {
    %587 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
    %588 = @func_5244() /* ty=(Tensor[(11, 7, 5), bool],) */;
    %589 = cast(%var_9017, dtype="float32") /* ty=Tensor[(384), float32] */;
    %590 = reshape(%589, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
    %591 = @func_3289(%590) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
    %592 = sqrt(%587) /* ty=Tensor[(2, 15, 14), float32] */;
    %593 = %588.0;
    %594 = %591.0;
    (%592, %593, %594, %var_9017)
  };
  %595(%var_9032) /* ty=(Tensor[(2, 15, 14), float32], Tensor[(11, 7, 5), bool], Tensor[(4, 6, 16), uint8], Tensor[(384), float32]) */
}

def @func_7071() -> (Tensor[(11, 7, 5), float32],) {
  %596 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %597 = %596.0;
  (%597,)
}

def @func_12707() -> Tensor[(11, 7, 5), float32] {
  %599 = fn () -> Tensor[(11, 7, 5), float32] {
    %598 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %598.0
  };
  %599() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_8895() -> (Tensor[(1, 324), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  @func_8893() /* ty=(Tensor[(1, 324), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_4850() -> Tensor[(11, 7, 5), float32] {
  %601 = fn () -> Tensor[(11, 7, 5), float32] {
    %600 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %600.1
  };
  %601() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_6578() -> (Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) {
  @func_6576() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) */
}

def @func_11031() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_11029() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_10791() -> Tensor[(11, 7, 5), float32] {
  @func_10789() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5720(%var_5719: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(384), float32]) {
  %608 = fn (%var_5715: Tensor[(384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(384), float32]) {
    %602 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %603 = cast(%var_5715, dtype="float32") /* ty=Tensor[(384), float32] */;
    %604 = reshape(%603, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
    %605 = @func_3289(%604) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
    %606 = %602.1;
    %607 = %605.2;
    (%606, %607, %var_5715)
  };
  %608(%var_5719) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(384), float32]) */
}

def @func_3231() -> (Tensor[(4, 6, 16), float32],) {
  @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */
}

def @func_10403(%var_10394: Tensor[(12, 324), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 324), int16], Tensor[(12, 324), uint8], Tensor[(11, 7, 5), float32]) {
  %609 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %610 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  %611 = cast(%610, dtype="uint16") /* ty=Tensor[(1, 324), uint16] */;
  %612 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 324), float32] */, dtype="uint16") /* ty=Tensor[(12, 324), uint16] */;
  %613 = logical_xor(%611, %612) /* ty=Tensor[(12, 324), uint16] */;
  %614 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 324), float32] */, dtype="int16") /* ty=Tensor[(12, 324), int16] */;
  %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(2), int32] */;
  %616 = cast(%613, dtype="int16") /* ty=Tensor[(12, 324), int16] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %618 = cast(%var_10394, dtype="uint8") /* ty=Tensor[(12, 324), uint8] */;
  %619 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(12, 324), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %620 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 324), float32] */, dtype="uint8") /* ty=Tensor[(12, 324), uint8] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %622 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %623 = %609.1;
  %624 = add(%616, %617) /* ty=Tensor[(12, 324), int16] */;
  %625 = bitwise_xor(%620, %621) /* ty=Tensor[(12, 324), uint8] */;
  %626 = %622.3;
  (%623, %624, %625, %626)
}

def @func_4917() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_4865() -> Tensor[(11, 7, 5), float32] {
  %627 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %627.0
}

def @func_12250() -> (Tensor[(11, 7, 5), bool],) {
  @func_12248() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_11318() -> (Tensor[(11, 7, 5), float32],) {
  @func_11316() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_3649() -> (Tensor[(11, 7, 5), float32],) {
  %630 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %628 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %629 = %628.0;
    (%629,)
  };
  %630() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11926(%var_11924: Tensor[(15, 810), int8]) -> (Tensor[(15, 810), int8], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(6, 64), float32], Tensor[(15, 810), float32]) {
  @func_11923(%var_11924) /* ty=(Tensor[(15, 810), int8], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(15, 810), float32], Tensor[(6, 64), float32], Tensor[(15, 810), float32]) */
}

def @func_6236() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %639 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %631 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
    %632 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %633 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
    %634 = @func_5761() /* ty=(Tensor[(1, 810), float64], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
    %635 = %631.0;
    %636 = %632.1;
    %637 = %633.0;
    %638 = %634.1;
    (%635, %636, %637, %638)
  };
  %639() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_6426() -> (Tensor[(?, 324), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32]) {
  @func_6424() /* ty=(Tensor[(?, 324), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32]) */
}

def @func_4056() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %640 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %641 = %640.0;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %643 = reshape(%642, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %644 = @func_3931(%643) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) */;
  %645 = %644.3;
  (%641, %645)
}

def @func_2577(%var_2575: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), bool] {
  @func_2574(%var_2575) /* ty=Tensor[(11, 7, 5), bool] */
}

def @func_14034() -> (Tensor[(11, 7, 5), float32],) {
  %646 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %647 = %646.0;
  (%647,)
}

def @func_12698() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %654 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
    %648 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
    %649 = @func_12164() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %650 = @func_12319() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %651 = %648.3;
    %652 = %649.0;
    %653 = %650.0;
    (%651, %652, %653)
  };
  %654() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_2983() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_5430() -> (Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) {
  @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_14163() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) {
  %655 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %656 = cast(meta[relay.Constant][18] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %657 = reshape(%656, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %658 = @func_8491(%657) /* ty=(Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) */;
  %659 = %658.1;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %661 = %655.0;
  %662 = sigmoid(%660) /* ty=Tensor[(6, 64), float64] */;
  (%661, meta[relay.Constant][18] /* ty=Tensor[(384), float32] */, %662)
}

def @func_13601(%var_13599: int64, %var_13600: Tensor[(4, 5, 6), int64]) -> Tensor[(4, 5, 6), int64] {
  %665 = fn (%var_13584: int64, %var_13585: Tensor[(4, 5, 6), int64]) -> Tensor[(4, 5, 6), int64] {
    %663 = cast(%var_13584, dtype="int64") /* ty=int64 */;
    %664 = cast(%var_13585, dtype="int64") /* ty=Tensor[(4, 5, 6), int64] */;
    bitwise_and(%663, %664) /* ty=Tensor[(4, 5, 6), int64] */
  };
  %665(%var_13599, %var_13600) /* ty=Tensor[(4, 5, 6), int64] */
}

def @func_10568(%var_10567: Tensor[(9, 324), float32]) -> (Tensor[(4, 6, 16), int64], Tensor[(10, 324), float64], Tensor[(9, 324), bool], Tensor[(9, 324), float64], Tensor[(9, 324), float64], Tensor[(15, 324), uint8], Tensor[(1, 810), int8], Tensor[(11, 7, 5), float32]) {
  %685 = fn (%var_10509: Tensor[(9, 324), float32]) -> (Tensor[(4, 6, 16), int64], Tensor[(10, 324), float64], Tensor[(9, 324), bool], Tensor[(9, 324), float64], Tensor[(9, 324), float64], Tensor[(15, 324), uint8], Tensor[(1, 810), int8], Tensor[(11, 7, 5), float32]) {
    %666 = @func_6576() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) */;
    %667 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
    %669 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 324), float32] */, dtype="float64") /* ty=Tensor[(10, 324), float64] */;
    %670 = cast(%667, dtype="bool") /* ty=Tensor[(1, 324), bool] */;
    %671 = cast(%var_10509, dtype="bool") /* ty=Tensor[(9, 324), bool] */;
    %672 = cast(%var_10509, dtype="float64") /* ty=Tensor[(9, 324), float64] */;
    %673 = cast(%667, dtype="float64") /* ty=Tensor[(1, 324), float64] */;
    %674 = cast(%var_10509, dtype="float64") /* ty=Tensor[(9, 324), float64] */;
    %675 = cast(%667, dtype="uint8") /* ty=Tensor[(1, 324), uint8] */;
    %676 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 324), float32] */, dtype="uint8") /* ty=Tensor[(15, 324), uint8] */;
    %677 = %666.0;
    %678 = floor_divide(%668, %669) /* ty=Tensor[(10, 324), float64] */;
    %679 = less_equal(%670, %671) /* ty=Tensor[(9, 324), bool] */;
    %680 = floor_divide(%672, %673) /* ty=Tensor[(9, 324), float64] */;
    %681 = log(%674) /* ty=Tensor[(9, 324), float64] */;
    %682 = bitwise_or(%675, %676) /* ty=Tensor[(15, 324), uint8] */;
    %683 = @func_4020() /* ty=Tensor[(1, 810), int8] */;
    %684 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
    (%677, %678, %679, %680, %681, %682, %683, %684)
  };
  %685(%var_10567) /* ty=(Tensor[(4, 6, 16), int64], Tensor[(10, 324), float64], Tensor[(9, 324), bool], Tensor[(9, 324), float64], Tensor[(9, 324), float64], Tensor[(15, 324), uint8], Tensor[(1, 810), int8], Tensor[(11, 7, 5), float32]) */
}

def @func_6060() -> Tensor[(11, 7, 5), float32] {
  %687 = fn () -> Tensor[(11, 7, 5), float32] {
    %686 = @func_4373() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %686.0
  };
  %687() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_4058() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_6625() -> Tensor[(11, 7, 5), float32] {
  %688 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %688.0
}

def @func_5682() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) {
  %697 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) {
    %689 = @func_4407() /* ty=(Tensor[(4, 6, 16), float32],) */;
    %690 = %689.0;
    %691 = cast(%690, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
    %692 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %693 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
    %694 = @func_4929() /* ty=Tensor[(11, 7, 5), float32] */;
    %695 = cos(%691) /* ty=Tensor[(4, 6, 16), float64] */;
    %696 = %692.0;
    (%693, %694, %695, %696)
  };
  %697() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */
}

def @func_6627() -> Tensor[(11, 7, 5), float32] {
  @func_6625() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_10251() -> (Tensor[(11, 7, 5), float32],) {
  %698 = @func_9933() /* ty=Tensor[(11, 7, 5), float32] */;
  (%698,)
}

def @func_9499() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), int16], Tensor[(39), bool]) {
  %705 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), int16], Tensor[(39), bool]) {
    %699 = @func_5360() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %700 = cast(meta[relay.Constant][21] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
    %701 = reshape(%700, newshape=[39]) /* ty=Tensor[(39), bool] */;
    %702 = @func_6842(%701) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
    %703 = %699.0;
    %704 = %702.0;
    (%703, %704, meta[relay.Constant][21] /* ty=Tensor[(39), bool] */)
  };
  %705() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), int16], Tensor[(39), bool]) */
}

def @func_8544(%var_8542: Tensor[(13, 7, 16), float32]) -> (Tensor[(13, 7, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_8541(%var_8542) /* ty=(Tensor[(13, 7, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_7088() -> Tensor[(11, 7, 5), float32] {
  %706 = fn () -> Tensor[(11, 7, 5), float32] {
    @func_6564() /* ty=Tensor[(11, 7, 5), float32] */
  };
  %706() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_13086() -> Tensor[(11, 7, 5), float32] {
  @func_13084() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_9001() -> (Tensor[(11, 7, 5), float32],) {
  @func_8999() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_5815() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %707 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %708 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %709 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
  %710 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
  %711 = %707.0;
  %712 = %708.0;
  %713 = %709.2;
  %714 = %710.0;
  (%711, %712, %713, %714)
}

def @func_12166() -> (Tensor[(4, 6, 16), float32],) {
  @func_12164() /* ty=(Tensor[(4, 6, 16), float32],) */
}

def @func_3643() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) {
  @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */
}

def @func_9580(%var_9579: Tensor[(1, 5, 7), float64]) -> (Tensor[(1, 5, 7), float32], Tensor[(?, 5, 7), bool]) {
  %724 = fn (%var_9553: Tensor[(1, 5, 7), float64]) -> (Tensor[(1, 5, 7), float32], Tensor[(?, 5, 7), bool]) {
    %715 = cast(%var_9553, dtype="float64") /* ty=Tensor[(1, 5, 7), float64] */;
    %716 = sqrt(%715) /* ty=Tensor[(1, 5, 7), float64] */;
    %717 = cast(%716, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
    %718 = cast(%var_9553, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
    %719 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%716, dtype="bool") /* ty=Tensor[(1, 5, 7), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %722 = sinh(%717) /* ty=Tensor[(1, 5, 7), float32] */;
    %723 = greater_equal(%720, %721) /* ty=Tensor[(?, 5, 7), bool] */;
    (%722, %723)
  };
  %724(%var_9579) /* ty=(Tensor[(1, 5, 7), float32], Tensor[(?, 5, 7), bool]) */
}

def @func_4915() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) {
  %725 = @func_4092() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %728 = reshape(%727, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %729 = @func_2574(%728) /* ty=Tensor[(11, 7, 5), bool] */;
  (%726, %729)
}

def @func_10187(%var_10185: Tensor[(16, 810), int8], %var_10186: Tensor[(16, 810), int8]) -> (Tensor[(16, 810), bool], Tensor[(16, 810), uint16]) {
  @func_10183(%var_10185, %var_10186) /* ty=(Tensor[(16, 810), bool], Tensor[(16, 810), uint16]) */
}

def @func_5105() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  @func_5103() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */
}

def @func_5618() -> (Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) {
  %733 = fn () -> (Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) {
    %730 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
    %731 = %730.0;
    %732 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
    (%731, %732)
  };
  %733() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_940(%var_939: Tensor[(5, 2, 12), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(5, 2, 12), int32]) {
  %748 = fn (%var_893: Tensor[(5, 2, 12), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(5, 2, 12), int32]) {
    %734 = cast(%var_893, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
    %735 = tan(%734) /* ty=Tensor[(5, 2, 12), float32] */;
    %736 = cast(%735, dtype="float64") /* ty=Tensor[(5, 2, 12), float64] */;
    %737 = log10(%736) /* ty=Tensor[(5, 2, 12), float64] */;
    %738 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
    %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%737, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %742 = cast(%735, dtype="int32") /* ty=Tensor[(5, 2, 12), int32] */;
    %743 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(%737, dtype="int32") /* ty=Tensor[(5, 2, 12), int32] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %746 = not_equal(%740, %741) /* ty=Tensor[(5, 2, 12), bool] */;
    %747 = multiply(%744, %745) /* ty=Tensor[(5, 2, 12), int32] */;
    (%746, %747)
  };
  %748(%var_939) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(5, 2, 12), int32]) */
}

def @func_7888(%var_7886: Tensor[(324), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) {
  @func_7885(%var_7886) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(3, 108), float32], Tensor[(324), float32], Tensor[(6, 64), float32]) */
}

def @func_3641() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) {
  %749 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %752 = cast(%750, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %753 = reshape(%751, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %754 = reshape(%752, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %755 = @func_2709(%753, %754) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %756 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %757 = %755.2;
  (%756, %750, %757)
}

def @func_14013() -> Tensor[(11, 7, 5), float32] {
  %759 = fn () -> Tensor[(11, 7, 5), float32] {
    %758 = @func_10251() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %758.0
  };
  %759() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_9892() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %768 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %760 = @func_6029() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
    %761 = %760.0;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
    %763 = @func_6775() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(6, 64), float64]) */;
    %764 = @func_8732() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %765 = log2(%762) /* ty=Tensor[(11, 7, 5), float32] */;
    %766 = %763.0;
    %767 = %764.1;
    (%765, %766, %767)
  };
  %768() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_7187() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %772 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %769 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %770 = %769.0;
    %771 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_10132() -> (Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) {
  @func_10130() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) */
}

def @func_701(%var_699: Tensor[(3, 12, 9), float32], %var_700: Tensor[(384), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) {
  @func_697(%var_699, %var_700) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */
}

def @func_3791() -> (Tensor[(11, 7, 5), float32],) {
  %773 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %774 = %773.1;
  (%774,)
}

def @func_4093() -> (Tensor[(11, 7, 5), float32],) {
  %777 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %775 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %776 = %775.0;
    (%776,)
  };
  %777() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_3350() -> Tensor[(11, 7, 5), float32] {
  %779 = fn () -> Tensor[(11, 7, 5), float32] {
    %778 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %778.0
  };
  %779() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_5345() -> (Tensor[(11, 7, 5), bool],) {
  @func_5343() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_9123() -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), float64], Tensor[(?, 810), uint8], Tensor[(11, 7, 5), int16], Tensor[(39), bool], Tensor[(1, 810), float64]) {
  %806 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(1, 810), float64], Tensor[(?, 810), uint8], Tensor[(11, 7, 5), int16], Tensor[(39), bool], Tensor[(1, 810), float64]) {
    %780 = @func_5328() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %781 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
    %782 = %781.1;
    %783 = cast(%782, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %784 = atanh(%783) /* ty=Tensor[(1, 810), float64] */;
    %785 = cast(%784, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %786 = cast(%784, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
    %787 = asinh(%786) /* ty=Tensor[(1, 810), float32] */;
    %788 = cast(%784, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
    %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(2), int32] */;
    %790 = cast(%787, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %792 = bitwise_and(%790, %791) /* ty=Tensor[(?, 810), uint8] */;
    %793 = cast(%784, dtype="uint8") /* ty=Tensor[(1, 810), uint8] */;
    %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(2), int32] */;
    %795 = cast(%792, dtype="uint8") /* ty=Tensor[(?, 810), uint8] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %797 = cast(meta[relay.Constant][22] /* ty=Tensor[(39), bool] */, dtype="bool") /* ty=Tensor[(39), bool] */;
    %798 = reshape(%797, newshape=[39]) /* ty=Tensor[(39), bool] */;
    %799 = @func_6842(%798) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
    %800 = cast(%784, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %801 = %780.2;
    %802 = atan(%785) /* ty=Tensor[(1, 810), float64] */;
    %803 = left_shift(%795, %796) /* ty=Tensor[(?, 810), uint8] */;
    %804 = %799.0;
    %805 = asin(%800) /* ty=Tensor[(1, 810), float64] */;
    (%801, %802, %803, %804, meta[relay.Constant][22] /* ty=Tensor[(39), bool] */, %805)
  };
  %806() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), float64], Tensor[(?, 810), uint8], Tensor[(11, 7, 5), int16], Tensor[(39), bool], Tensor[(1, 810), float64]) */
}

def @func_11810() -> (Tensor[(6, 64), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %807 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
  %808 = @func_11029() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %809 = @func_9785() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) */;
  %810 = %807.1;
  %811 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  %812 = %808.1;
  %813 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
  %814 = %809.3;
  %815 = @func_4865() /* ty=Tensor[(11, 7, 5), float32] */;
  (%810, %811, %812, %813, %814, %815)
}

def @func_5361() -> (Tensor[(11, 7, 5), float32],) {
  %817 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %816 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    (%816,)
  };
  %817() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_2856() -> (Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) {
  %826 = fn () -> (Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) {
    %818 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
    %819 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 324), float32] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
    %820 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 192), float64] */, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
    %821 = reshape(%819, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
    %822 = reshape(%820, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %823 = @func_697(%821, %822) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
    %824 = %818.4;
    %825 = %823.0;
    (%824, %825, meta[relay.Constant][23] /* ty=Tensor[(1, 324), float32] */, meta[relay.Constant][24] /* ty=Tensor[(2, 192), float64] */)
  };
  %826() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */
}

def @func_4356() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) {
  @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */
}

def @func_11189() -> (Tensor[(11, 7, 5), float32],) {
  %828 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %827 = @func_7025() /* ty=Tensor[(11, 7, 5), float32] */;
    (%827,)
  };
  %828() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_5523() -> (Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) {
  @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */
}

def @func_12320() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %832 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %829 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %830 = %829.1;
    %831 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
    (%830, %831)
  };
  %832() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_4021() -> Tensor[(1, 810), int8] {
  %834 = fn () -> Tensor[(1, 810), int8] {
    %833 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
    %833.4
  };
  %834() /* ty=Tensor[(1, 810), int8] */
}

def @func_2776() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) {
  %835 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %836 = cast(meta[relay.Constant][25] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %837 = reshape(%836, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %838 = @func_274(%837) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %839 = %838.0;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(4, 6, 16), float32] */;
  %841 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 810), int8] */, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %842 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 810), int8] */, dtype="int8") /* ty=Tensor[(1, 810), int8] */;
  %843 = reshape(%841, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %844 = reshape(%842, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int8] */;
  %845 = @func_2709(%843, %844) /* ty=(Tensor[(15, 6, 9), int8], Tensor[(3, 12, 9), float64], Tensor[(324), float32], Tensor[(384), float64]) */;
  %846 = %835.1;
  %847 = asinh(%840) /* ty=Tensor[(4, 6, 16), float32] */;
  %848 = %845.3;
  (%846, meta[relay.Constant][25] /* ty=Tensor[(384), float64] */, %847, %848, meta[relay.Constant][26] /* ty=Tensor[(1, 810), int8] */)
}

def @func_10895(%var_10893: Tensor[(1, 39), bool], %var_10894: Tensor[(13, 39), bool]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(13, 39), float64]) {
  %858 = fn (%var_10883: Tensor[(1, 39), bool], %var_10885: Tensor[(13, 39), bool]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(13, 39), float64]) {
    %849 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %850 = cast(%var_10883, dtype="bool") /* ty=Tensor[(1, 39), bool] */;
    %851 = reshape(%850, newshape=[39]) /* ty=Tensor[(39), bool] */;
    %852 = @func_6842(%851) /* ty=(Tensor[(11, 7, 5), int16], Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(39), bool]) */;
    %853 = cast(%var_10883, dtype="float64") /* ty=Tensor[(1, 39), float64] */;
    %854 = cast(%var_10885, dtype="float64") /* ty=Tensor[(13, 39), float64] */;
    %855 = %849.0;
    %856 = %852.1;
    %857 = mod(%853, %854) /* ty=Tensor[(13, 39), float64] */;
    (%855, %856, %857)
  };
  %858(%var_10893, %var_10894) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(13, 39), float64]) */
}

def @func_8961(%var_8960: Tensor[(12, 5, 1), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 5, ?), bool]) {
  %866 = fn (%var_8951: Tensor[(12, 5, 1), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(12, 5, ?), bool]) {
    %859 = @func_4454() /* ty=Tensor[(12, 5, 1), float64] */;
    %860 = cast(%var_8951, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
    %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %862 = cast(%859, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %864 = @func_8218() /* ty=Tensor[(11, 7, 5), float32] */;
    %865 = equal(%862, %863) /* ty=Tensor[(12, 5, ?), bool] */;
    (%864, %865)
  };
  %866(%var_8960) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(12, 5, ?), bool]) */
}

def @func_13072() -> (Tensor[(384), float64],) {
  %869 = fn () -> (Tensor[(384), float64],) {
    %867 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
    %868 = %867.3;
    (%868,)
  };
  %869() /* ty=(Tensor[(384), float64],) */
}

def @func_10789() -> Tensor[(11, 7, 5), float32] {
  %870 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %870.0
}

def @func_13423() -> (Tensor[(1, 810), float64],) {
  @func_13421() /* ty=(Tensor[(1, 810), float64],) */
}

def @func_4375() -> (Tensor[(11, 7, 5), float32],) {
  @func_4373() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_7723(%var_7681: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), bool], Tensor[(385, 1), float64], Tensor[(385, ?), bool]) {
  %871 = @func_7087() /* ty=Tensor[(11, 7, 5), float32] */;
  %872 = cast(%var_7681, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%871, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %876 = cast(%871, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %877 = reshape(%876, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %878 = @func_3500(%877) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */;
  %879 = %878.2;
  %880 = cast(%879, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %881 = log2(%880) /* ty=Tensor[(385, 1), float32] */;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %883 = cast(%881, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %884 = rsqrt(%883) /* ty=Tensor[(385, 1), float32] */;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(385, 1), float32] */;
  %886 = sigmoid(%885) /* ty=Tensor[(385, 1), float32] */;
  %887 = cast(%884, dtype="bool") /* ty=Tensor[(385, 1), bool] */;
  %888 = shape_of(%886, dtype="int32") /* ty=Tensor[(2), int32] */;
  %889 = cast(%886, dtype="bool") /* ty=Tensor[(385, 1), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %891 = not_equal(%874, %875) /* ty=Tensor[(11, 7, 5), bool] */;
  %892 = asin(%882) /* ty=Tensor[(385, 1), float64] */;
  %893 = greater_equal(%889, %890) /* ty=Tensor[(385, ?), bool] */;
  (%891, %892, %893)
}

def @func_3931(%var_3922: Tensor[(11, 7, 5), float32]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), bool]) {
  %894 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %895 = reshape(%894, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %896 = @func_274(%895) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %897 = @func_3349() /* ty=Tensor[(11, 7, 5), float32] */;
  %898 = cast(%var_3922, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="bool") /* ty=Tensor[(11, 7, 5), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %902 = cast(%var_3922, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %903 = reshape(%902, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %904 = %896.0;
  %905 = less_equal(%900, %901) /* ty=Tensor[(11, 7, 5), bool] */;
  %906 = @func_2574(%903) /* ty=Tensor[(11, 7, 5), bool] */;
  (%904, meta[relay.Constant][27] /* ty=Tensor[(384), float64] */, %905, %906)
}

def @func_5441() -> (Tensor[(6, 64), float32],) {
  %909 = fn () -> (Tensor[(6, 64), float32],) {
    %907 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
    %908 = %907.1;
    (%908,)
  };
  %909() /* ty=(Tensor[(6, 64), float32],) */
}

def @func_2319(%var_2317: Tensor[(16, 13, 15), float64], %var_2318: Tensor[(16, 13, 15), float64]) -> (Tensor[(16, 13, 15), float64], Tensor[(16, 13, 15), float64]) {
  %917 = fn (%var_2269: Tensor[(16, 13, 15), float64], %var_2270: Tensor[(16, 13, 15), float64]) -> (Tensor[(16, 13, 15), float64], Tensor[(16, 13, 15), float64]) {
    %910 = cast(%var_2270, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
    %911 = shape_of(%var_2269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %912 = cast(%var_2269, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
    %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %914 = cast(%var_2269, dtype="float64") /* ty=Tensor[(16, 13, 15), float64] */;
    %915 = power(%912, %913) /* ty=Tensor[(16, 13, 15), float64] */;
    %916 = atanh(%914) /* ty=Tensor[(16, 13, 15), float64] */;
    (%915, %916)
  };
  %917(%var_2317, %var_2318) /* ty=(Tensor[(16, 13, 15), float64], Tensor[(16, 13, 15), float64]) */
}

def @func_7384() -> (Tensor[(11, 7, 5), float32],) {
  %920 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %918 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %919 = %918.0;
    (%919,)
  };
  %920() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11471() -> (Tensor[(11, 7, 5), bool],) {
  @func_11469() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_2943() -> Tensor[(11, 7, 5), float32] {
  %921 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %921.0
}

def @func_697(%var_678: Tensor[(3, 12, 9), float32], %var_683: Tensor[(384), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) {
  %922 = cast(%var_683, dtype="float64") /* ty=Tensor[(384), float64] */;
  %923 = reshape(%922, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %924 = @func_274(%923) /* ty=(Tensor[(4, 6, 16), float64],) */;
  %925 = cast(%var_678, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
  %926 = log(%925) /* ty=Tensor[(3, 12, 9), float32] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(3, 12, 9), float64] */;
  %928 = %924.0;
  %929 = atan(%927) /* ty=Tensor[(3, 12, 9), float64] */;
  (%928, %var_683, %929)
}

def @func_12438() -> Tensor[(11, 7, 5), float32] {
  %930 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
  %930.0
}

def @func_10715() -> (Tensor[(324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %931 = @func_10130() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(18, 18), float32]) */;
  %932 = @func_4056() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %933 = %931.1;
  %934 = @func_3380() /* ty=Tensor[(11, 7, 5), float32] */;
  %935 = %932.0;
  (%933, %934, %935)
}

def @func_11619() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_11617() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_7073() -> (Tensor[(11, 7, 5), float32],) {
  @func_7071() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_10694() -> (Tensor[(11, 7, 5), float32],) {
  %936 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %937 = %936.0;
  (%937,)
}

def @func_9529() -> (Tensor[(11, 7, 5), float32],) {
  %939 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %938 = @func_6059() /* ty=Tensor[(11, 7, 5), float32] */;
    (%938,)
  };
  %939() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_5600() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) {
  %945 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) {
    %940 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %941 = @func_5428() /* ty=(Tensor[(4, 6, 16), int64], Tensor[(6, 64), float32], Tensor[(385), float32], Tensor[(11, 7, 5), float32]) */;
    %942 = %940.0;
    %943 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    %944 = %941.0;
    (%942, %943, %944)
  };
  %945() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) */
}

def @func_12509() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  %946 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %947 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %948 = @func_5046() /* ty=Tensor[(11, 7, 5), float32] */;
  %949 = %946.0;
  %950 = %947.1;
  (%948, %949, %950)
}

def @func_14165() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) {
  @func_14163() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32], Tensor[(6, 64), float64]) */
}

def @func_6380() -> (Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %961 = fn () -> (Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %951 = @func_4808() /* ty=(Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) */;
    %952 = @func_6235() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %953 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %954 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %955 = @func_5304() /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %956 = %951.2;
    %957 = %952.1;
    %958 = %953.0;
    %959 = %954.0;
    %960 = %955.5;
    (%956, %957, %958, %959, %960)
  };
  %961() /* ty=(Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_5047() -> Tensor[(11, 7, 5), float32] {
  %963 = fn () -> Tensor[(11, 7, 5), float32] {
    %962 = @func_4265() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %962.0
  };
  %963() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_4456() -> Tensor[(12, 5, 1), float64] {
  @func_4454() /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_10013(%var_10011: Tensor[(1, 384), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) {
  @func_10010(%var_10011) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(1, 384), float32]) */
}

def @func_2544() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_2454() -> (Tensor[(11, 7, 5), float32],) {
  %964 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %965 = erf(%964) /* ty=Tensor[(11, 7, 5), float32] */;
  (%965,)
}

def @func_8351() -> (Tensor[(12, 5, 1), float64],) {
  %967 = fn () -> (Tensor[(12, 5, 1), float64],) {
    %966 = @func_8274() /* ty=Tensor[(12, 5, 1), float64] */;
    (%966,)
  };
  %967() /* ty=(Tensor[(12, 5, 1), float64],) */
}

def @func_7390() -> (Tensor[(11, 7, 5), bool],) {
  %970 = fn () -> (Tensor[(11, 7, 5), bool],) {
    %968 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
    %969 = %968.1;
    (%969,)
  };
  %970() /* ty=(Tensor[(11, 7, 5), bool],) */
}

def @func_2220(%var_2205: Tensor[(1, 13, 3), bool]) -> (Tensor[(1, 13, 3), bool], Tensor[(384), float64], Tensor[(324), float32], Tensor[(384), float64]) {
  %971 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %972 = cast(%var_2205, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %973 = cast(meta[relay.Constant][29] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %974 = cast(meta[relay.Constant][30] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %975 = reshape(%973, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), float32] */;
  %976 = reshape(%974, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %977 = @func_697(%975, %976) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(384), float64], Tensor[(3, 12, 9), float64]) */;
  %978 = logical_and(%971, %972) /* ty=Tensor[(1, 13, 3), bool] */;
  %979 = %977.1;
  (%978, %979, meta[relay.Constant][29] /* ty=Tensor[(324), float32] */, meta[relay.Constant][30] /* ty=Tensor[(384), float64] */)
}

def @func_13883(%var_13881: Tensor[(810), int8], %var_13882: Tensor[(385), float32]) -> (Tensor[(384), float64], Tensor[(324), float32], Tensor[(810), int8], Tensor[(385), float32]) {
  %988 = fn (%var_13873: Tensor[(810), int8], %var_13874: Tensor[(385), float32]) -> (Tensor[(384), float64], Tensor[(324), float32], Tensor[(810), int8], Tensor[(385), float32]) {
    %980 = @func_13711() /* ty=(Tensor[(384), float64],) */;
    %981 = cast(%var_13873, dtype="int8") /* ty=Tensor[(810), int8] */;
    %982 = cast(%var_13874, dtype="float32") /* ty=Tensor[(385), float32] */;
    %983 = reshape(%981, newshape=[810]) /* ty=Tensor[(810), int8] */;
    %984 = reshape(%982, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
    %985 = @func_4551(%983, %984) /* ty=(Tensor[(324), float32], Tensor[(810), int8], Tensor[(11, 7, 5), float64], Tensor[(11, 7, 5), bool]) */;
    %986 = %980.0;
    %987 = %985.0;
    (%986, %987, %var_13873, %var_13874)
  };
  %988(%var_13881, %var_13882) /* ty=(Tensor[(384), float64], Tensor[(324), float32], Tensor[(810), int8], Tensor[(385), float32]) */
}

def @func_13199() -> Tensor[(192, 2), float64] {
  %994 = fn () -> Tensor[(192, 2), float64] {
    %989 = @func_7462() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(192, 2), float32]) */;
    %990 = %989.2;
    %991 = cast(%990, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
    %992 = asinh(%991) /* ty=Tensor[(192, 2), float32] */;
    %993 = cast(%992, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    sigmoid(%993) /* ty=Tensor[(192, 2), float64] */
  };
  %994() /* ty=Tensor[(192, 2), float64] */
}

def @func_10207() -> (Tensor[(11, 7, 5), float32],) {
  %997 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %995 = @func_7835() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %996 = %995.0;
    (%996,)
  };
  %997() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_11151() -> Tensor[(324), float32] {
  %998 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
  %998.2
}

def @func_3332(%var_3331: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), uint32] {
  %1004 = fn (%var_3317: Tensor[(11, 7, 5), float32]) -> Tensor[(11, 7, 5), uint32] {
    %999 = @func_2943() /* ty=Tensor[(11, 7, 5), float32] */;
    %1000 = cast(%var_3317, dtype="uint32") /* ty=Tensor[(11, 7, 5), uint32] */;
    %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1002 = cast(%999, dtype="uint32") /* ty=Tensor[(11, 7, 5), uint32] */;
    %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    logical_xor(%1002, %1003) /* ty=Tensor[(11, 7, 5), uint32] */
  };
  %1004(%var_3331) /* ty=Tensor[(11, 7, 5), uint32] */
}

def @func_8494(%var_8492: Tensor[(6, 64), float32]) -> (Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) {
  @func_8491(%var_8492) /* ty=(Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) */
}

def @func_9431() -> (Tensor[(1, 324), float32],) {
  @func_9429() /* ty=(Tensor[(1, 324), float32],) */
}

def @func_7083() -> (Tensor[(11, 7, 5), float32],) {
  %1007 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %1005 = @func_6799() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
    %1006 = %1005.1;
    (%1006,)
  };
  %1007() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_7049() -> Tensor[(1, 324), float32] {
  @func_7047() /* ty=Tensor[(1, 324), float32] */
}

def @func_8267(%var_8265: Tensor[(3, 3, 7), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(3, 3, 7), float32], Tensor[(11, 7, 5), bool]) {
  @func_8264(%var_8265) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(3, 3, 7), float32], Tensor[(11, 7, 5), bool]) */
}

def @func_8276() -> Tensor[(12, 5, 1), float64] {
  @func_8274() /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_7047() -> Tensor[(1, 324), float32] {
  %1008 = @func_5521() /* ty=(Tensor[(12, 5, 1), float32], Tensor[(1, 324), float32], Tensor[(12, 5, 1), float64]) */;
  %1008.1
}

def @func_3503(%var_3501: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) {
  @func_3500(%var_3501) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(385, 1), float32], Tensor[(6, 64), float32], Tensor[(11, 7, 5), float64]) */
}

def @func_5817() -> (Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_4808() -> (Tensor[(11, 7, 5), uint32], Tensor[(11, 7, 5), bool], Tensor[(384), float32], Tensor[(11, 7, 5), float32], Tensor[(?, 324), uint32]) {
  %1009 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %1012 = reshape(%1011, newshape=[11, 7, 5]) /* ty=Tensor[(11, 7, 5), float32] */;
  %1013 = cast(meta[relay.Constant][31] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1014 = reshape(%1013, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float32] */;
  %1015 = @func_3289(%1014) /* ty=(Tensor[(4, 6, 16), uint8], Tensor[(11, 7, 5), bool], Tensor[(385, 1), float32]) */;
  %1016 = cast(%1010, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %1017 = @func_4674() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %1018 = %1017.0;
  %1019 = cast(%1018, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %1020 = erf(%1019) /* ty=Tensor[(1, 324), float32] */;
  %1021 = cast(%1018, dtype="uint32") /* ty=Tensor[(1, 324), uint32] */;
  %1022 = shape_of(%1020, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1023 = cast(%1020, dtype="uint32") /* ty=Tensor[(1, 324), uint32] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1025 = @func_3330(%1012) /* ty=Tensor[(11, 7, 5), uint32] */;
  %1026 = %1015.1;
  %1027 = acosh(%1016) /* ty=Tensor[(11, 7, 5), float32] */;
  %1028 = add(%1023, %1024) /* ty=Tensor[(?, 324), uint32] */;
  (%1025, %1026, meta[relay.Constant][31] /* ty=Tensor[(384), float32] */, %1027, %1028)
}

def @func_6659(%var_6639: Tensor[(9, 12, 16), float64]) -> Tensor[(9, 12, 16), float64] {
  %1029 = cast(%var_6639, dtype="float64") /* ty=Tensor[(9, 12, 16), float64] */;
  log10(%1029) /* ty=Tensor[(9, 12, 16), float64] */
}

def @func_8733() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1034 = fn () -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %1030 = @func_5599() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64]) */;
    %1031 = @func_6859() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1032 = %1030.1;
    %1033 = %1031.0;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_9785() -> (Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(384), float32], Tensor[(11, 7, 5), bool]) {
  %1035 = @func_8379() /* ty=(Tensor[(384), float64],) */;
  %1036 = @func_8651() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float32]) */;
  %1037 = @func_7538() /* ty=(Tensor[(11, 7, 5), bool],) */;
  %1038 = @func_6059() /* ty=Tensor[(11, 7, 5), float32] */;
  %1039 = %1035.0;
  %1040 = %1036.1;
  %1041 = %1037.0;
  (%1038, %1039, %1040, %1041)
}

def @func_10734() -> Tensor[(11, 7, 5), float32] {
  @func_10732() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_4867() -> Tensor[(11, 7, 5), float32] {
  @func_4865() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_2920() -> (Tensor[(11, 7, 5), float32],) {
  %1044 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %1042 = @func_2811() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_9941() -> (Tensor[(11, 7, 5), float32],) {
  %1045 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_2981() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1047 = @func_2542() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %1048 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1049 = %1047.1;
  %1050 = %1048.0;
  (%1049, %1050)
}

def @func_8274() -> Tensor[(12, 5, 1), float64] {
  @func_4454() /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_10469() -> (Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  @func_10467() /* ty=(Tensor[(11, 7, 5), bool], Tensor[(384), float64], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_8541(%var_8506: Tensor[(13, 7, 16), float32]) -> (Tensor[(13, 7, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1051 = cast(%var_8506, dtype="float32") /* ty=Tensor[(13, 7, 16), float32] */;
  %1052 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
  %1053 = exp(%1051) /* ty=Tensor[(13, 7, 16), float32] */;
  %1054 = %1052.1;
  %1055 = @func_5005() /* ty=Tensor[(11, 7, 5), float32] */;
  (%1053, %1054, %1055)
}

def @func_2812() -> (Tensor[(11, 7, 5), float32],) {
  %1058 = fn () -> (Tensor[(11, 7, 5), float32],) {
    %1056 = @func_2776() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(384), float64], Tensor[(4, 6, 16), float32], Tensor[(384), float64], Tensor[(1, 810), int8]) */;
    %1057 = %1056.0;
    (%1057,)
  };
  %1058() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_7640(%var_7639: Tensor[(3, 108), float32]) -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) {
  %1072 = fn (%var_7608: Tensor[(3, 108), float32]) -> (Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) {
    %1059 = @func_4354() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float32]) */;
    %1060 = @func_5681() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(11, 7, 5), float32]) */;
    %1061 = @func_7082() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1062 = cast(%var_7608, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
    %1063 = %1059.1;
    %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
    %1065 = reshape(%1062, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %1066 = reshape(%1064, newshape=[96, 4]) /* ty=Tensor[(96, 4), float64] */;
    %1067 = @func_3737(%1065, %1066) /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), float64], Tensor[(324), float32], Tensor[(96, 4), float64]) */;
    %1068 = %1060.3;
    %1069 = %1061.0;
    %1070 = @func_5135() /* ty=Tensor[(11, 7, 5), float32] */;
    %1071 = %1067.2;
    (%1063, %1068, %1069, %1070, %1071, %var_7608)
  };
  %1072(%var_7639) /* ty=(Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(324), float32], Tensor[(3, 108), float32]) */
}

def @func_4675() -> (Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1079 = fn () -> (Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
    %1073 = @func_2855() /* ty=(Tensor[(1, 810), int8], Tensor[(4, 6, 16), float64], Tensor[(1, 324), float32], Tensor[(2, 192), float64]) */;
    %1074 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1075 = @func_3641() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(1, 810), int8], Tensor[(324), float32]) */;
    %1076 = %1073.2;
    %1077 = %1074.0;
    %1078 = %1075.0;
    (%1076, %1077, %1078)
  };
  %1079() /* ty=(Tensor[(1, 324), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */
}

def @func_6576() -> (Tensor[(4, 6, 16), int64], Tensor[(11, 7, 5), float32]) {
  %1080 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %1081 = @func_5103() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %1082 = %1080.1;
  %1083 = %1081.0;
  (%1082, %1083)
}

def @func_9935() -> Tensor[(11, 7, 5), float32] {
  @func_9933() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_8893() -> (Tensor[(1, 324), float32], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) {
  %1084 = @func_3229() /* ty=(Tensor[(4, 6, 16), float32],) */;
  %1085 = @func_5815() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(4, 6, 16), int64], Tensor[(4, 6, 16), float32], Tensor[(11, 7, 5), float32]) */;
  %1086 = @func_7047() /* ty=Tensor[(1, 324), float32] */;
  %1087 = %1084.0;
  %1088 = %1085.0;
  (%1086, %1087, %1088)
}

def @func_11812() -> (Tensor[(6, 64), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) {
  @func_11810() /* ty=(Tensor[(6, 64), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(12, 5, 1), float64], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */
}

def @func_6991() -> (Tensor[(1, 810), int8],) {
  @func_6989() /* ty=(Tensor[(1, 810), int8],) */
}

def @func_4879() -> Tensor[(11, 7, 5), float32] {
  %1090 = fn () -> Tensor[(11, 7, 5), float32] {
    %1089 = @func_3648() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1089.0
  };
  %1090() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_4593(%var_4576: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1091 = @func_3791() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1092 = %1091.0;
  %1093 = cast(%var_4576, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %1094 = shape_of(%1092, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(%1092, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1097 = @func_2981() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) */;
  %1098 = floor_mod(%1095, %1096) /* ty=Tensor[(11, 7, 5), float32] */;
  %1099 = %1097.0;
  (%1098, %1099)
}

def @func_7726(%var_7724: Tensor[(11, 7, 5), float32]) -> (Tensor[(11, 7, 5), bool], Tensor[(385, 1), float64], Tensor[(385, ?), bool]) {
  @func_7723(%var_7724) /* ty=(Tensor[(11, 7, 5), bool], Tensor[(385, 1), float64], Tensor[(385, ?), bool]) */
}

def @func_12357(%var_12348: Tensor[(1, 39), float64]) -> (Tensor[(11, 7, 5), float32], Tensor[(39), int32], Tensor[(1, 39), float64]) {
  %1100 = cast(%var_12348, dtype="float64") /* ty=Tensor[(1, 39), float64] */;
  %1101 = reshape(%1100, newshape=[39]) /* ty=Tensor[(39), float64] */;
  %1102 = @func_9839(%1101) /* ty=(Tensor[(11, 7, 5), bool], Tensor[(39), float64], Tensor[(39), float32], Tensor[(39), int32]) */;
  %1103 = @func_7673() /* ty=Tensor[(11, 7, 5), float32] */;
  %1104 = %1102.3;
  (%1103, %1104, %var_12348)
}

def @func_8264(%var_8232: Tensor[(3, 3, 7), float32]) -> (Tensor[(11, 7, 5), float32], Tensor[(3, 3, 7), float32], Tensor[(11, 7, 5), bool]) {
  %1105 = @func_5103() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool], Tensor[(11, 7, 5), float32]) */;
  %1106 = cast(%var_8232, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %1107 = atan(%1106) /* ty=Tensor[(3, 3, 7), float32] */;
  %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %1109 = @func_4915() /* ty=(Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), bool]) */;
  %1110 = %1105.0;
  %1111 = sinh(%1108) /* ty=Tensor[(3, 3, 7), float32] */;
  %1112 = %1109.1;
  (%1110, %1111, %1112)
}

def @func_8491(%var_8478: Tensor[(6, 64), float32]) -> (Tensor[(6, 64), float64], Tensor[(6, 64), uint32], Tensor[(6, 64), float32]) {
  %1113 = @func_6510() /* ty=(Tensor[(6, 64), float32],) */;
  %1114 = %1113.0;
  %1115 = cast(%1114, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %1116 = cast(%1114, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %1117 = exp(%1116) /* ty=Tensor[(6, 64), float32] */;
  %1118 = cast(%var_8478, dtype="uint32") /* ty=Tensor[(6, 64), uint32] */;
  %1119 = shape_of(%1117, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1120 = cast(%1117, dtype="uint32") /* ty=Tensor[(6, 64), uint32] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1122 = cast(%1114, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %1123 = rsqrt(%1115) /* ty=Tensor[(6, 64), float64] */;
  %1124 = maximum(%1120, %1121) /* ty=Tensor[(6, 64), uint32] */;
  %1125 = tan(%1122) /* ty=Tensor[(6, 64), float32] */;
  (%1123, %1124, %1125)
}

def @func_9943() -> (Tensor[(11, 7, 5), float32],) {
  @func_9941() /* ty=(Tensor[(11, 7, 5), float32],) */
}

def @func_2542() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1126 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1127 = @func_2454() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1128 = %1126.0;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_11617() -> (Tensor[(11, 7, 5), float32], Tensor[(11, 7, 5), float32]) {
  %1130 = @func_7383() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1131 = @func_8099() /* ty=(Tensor[(11, 7, 5), float32],) */;
  %1132 = %1130.0;
  %1133 = %1131.0;
  (%1132, %1133)
}

def @func_5006() -> Tensor[(11, 7, 5), float32] {
  %1135 = fn () -> Tensor[(11, 7, 5), float32] {
    %1134 = @func_2919() /* ty=(Tensor[(11, 7, 5), float32],) */;
    %1134.0
  };
  %1135() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_12440() -> Tensor[(11, 7, 5), float32] {
  @func_12438() /* ty=Tensor[(11, 7, 5), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

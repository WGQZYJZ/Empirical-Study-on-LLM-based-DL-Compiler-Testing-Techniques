==========mod==========
#[version = "0.0.5"]
def @func_9318() -> float32 {
  %0 = @func_3967() /* ty=(float32,) */;
  %0.0
}

def @func_3284() -> Tensor[(900), float32] {
  %1 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %1.0
}

def @func_15176(%var_15152: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), float32] {
  %2 = @func_11379() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %3 = %2.1;
  %4 = cast(%var_15152, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%6, %7) /* ty=Tensor[(13, 10, 2), float32] */
}

def @func_10604() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %8 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %9 = %8.0;
  %10 = @func_6317() /* ty=Tensor[(15, 5, 12), float32] */;
  (%9, %10)
}

def @func_11766(%var_11763: Tensor[(4, 36), int64], %var_11764: Tensor[(3, 1), uint32]) -> (Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) {
  %11 = cast(%var_11763, dtype="int64") /* ty=Tensor[(4, 36), int64] */;
  %12 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(3, 1), uint32] */;
  %13 = reshape(%11, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %14 = reshape(%12, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %15 = @func_6802(%13, %14) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) */;
  %16 = @func_6379() /* ty=Tensor[(900), float64] */;
  %17 = %15.1;
  (%16, %17, %var_11763, %var_11764)
}

def @func_4080() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %18 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %19 = @func_3634() /* ty=(Tensor[(900), float32],) */;
  %20 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %21 = %18.0;
  %22 = @func_3912() /* ty=Tensor[(900), float32] */;
  %23 = %19.0;
  %24 = %20.0;
  (%21, %22, %23, %24)
}

def @func_16956() -> (Tensor[(900), float32],) {
  %25 = @func_13171() /* ty=(Tensor[(900), float32],) */;
  %26 = %25.0;
  (%26,)
}

def @func_10833() -> (Tensor[(900), float32],) {
  %27 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %28 = %27.0;
  (%28,)
}

def @func_11413() -> (Tensor[(900), float32],) {
  %29 = @func_6687() /* ty=Tensor[(900), float32] */;
  (%29,)
}

def @func_3527() -> Tensor[(420), uint32] {
  %30 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %30.2
}

def @func_5543(%var_5507: Tensor[(16, 12, 13), float64]) -> (Tensor[(16, 12, 13), uint16],) {
  %31 = cast(%var_5507, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %32 = sinh(%31) /* ty=Tensor[(16, 12, 13), float64] */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 12, 13), float64] */, dtype="uint16") /* ty=Tensor[(16, 12, 13), uint16] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="uint16") /* ty=Tensor[(16, 12, 13), uint16] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %37 = logical_xor(%35, %36) /* ty=Tensor[(16, 12, 13), uint16] */;
  (%37,)
}

def @func_16676() -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), float64], Tensor[(4, 180), float64]) {
  %38 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %39 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %40 = reshape(%39, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %41 = @func_8545(%40) /* ty=(Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
  %42 = %38.2;
  %43 = %41.2;
  (%42, %43, meta[relay.Constant][1] /* ty=Tensor[(4, 180), float64] */)
}

def @func_17331() -> Tensor[(900), float32] {
  @func_10403() /* ty=Tensor[(900), float32] */
}

def @func_7597(%var_7592: Tensor[(8, 7, 10), int16]) -> Tensor[(8, 7, 10), int16] {
  %44 = cast(%var_7592, dtype="int16") /* ty=Tensor[(8, 7, 10), int16] */;
  %45 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 7, 10), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 10), int16] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%46, %47) /* ty=Tensor[(8, 7, 10), int16] */
}

def @func_4942() -> (Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) {
  %48 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %49 = %48.0;
  %50 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
  (%49, %50)
}

def @func_12568() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %51 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %52 = @func_10833() /* ty=(Tensor[(900), float32],) */;
  %53 = %51.1;
  %54 = %52.0;
  (%53, %54)
}

def @func_8197(%var_8174: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) {
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %57 = cast(3.97883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %58 = cast(%var_8174, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %59 = reshape(%55, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %60 = reshape(%56, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %61 = reshape(%57, newshape=[]) /* ty=float32 */;
  %62 = reshape(%58, newshape=[13, 156]) /* ty=Tensor[(13, 156), float64] */;
  %63 = @func_4437(%59, %60, %61, %62) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 72), int64] */, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %65 = cast(3.97883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %66 = cast(3.97883f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %68 = reshape(%66, newshape=[]) /* ty=uint16 */;
  %69 = reshape(%67, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %70 = @func_4312(%68, %69) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
  %71 = @func_5563() /* ty=(Tensor[(900), float32],) */;
  %72 = @func_5211() /* ty=Tensor[(900), float32] */;
  %73 = @func_5211() /* ty=Tensor[(900), float32] */;
  %74 = %63.0;
  %75 = power(%64, %65) /* ty=Tensor[(2, 72), float32] */;
  %76 = %70.1;
  %77 = %71.0;
  (%72, %73, %74, %var_8174, %75, %76, meta[relay.Constant][4] /* ty=Tensor[(720), float64] */, %77)
}

def @func_2604(%var_2595: uint32) -> (Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) {
  %78 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
  %79 = cast(%var_2595, dtype="uint32") /* ty=uint32 */;
  %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 1), uint32] */, dtype="uint32") /* ty=Tensor[(3, 1), uint32] */;
  %81 = reshape(%79, newshape=[]) /* ty=uint32 */;
  %82 = reshape(%80, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %83 = cast(%var_2595, dtype="float32") /* ty=float32 */;
  %84 = reshape(%83, newshape=[]) /* ty=float32 */;
  %85 = @func_525(%84) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %86 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %87 = %78.1;
  %88 = @func_732(%81, %82) /* ty=Tensor[(1, 3), bool] */;
  %89 = %85.2;
  %90 = %86.0;
  (%87, %88, %var_2595, meta[relay.Constant][5] /* ty=Tensor[(3, 1), uint32] */, %89, %90)
}

def @func_7171() -> (Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) {
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %92 = cast(meta[relay.Constant][7] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %93 = reshape(%91, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %94 = reshape(%92, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %95 = @func_6486(%93, %94) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
  %96 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %97 = @func_4667() /* ty=Tensor[(420), uint32] */;
  %98 = %95.2;
  %99 = %96.2;
  (%97, %98, meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, meta[relay.Constant][7] /* ty=Tensor[(2028), float64] */, %99)
}

def @func_7241(%var_7235: Tensor[(5, 52), float64], %var_7239: Tensor[(648), float64]) -> (float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  %100 = cast(%var_7235, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %101 = reshape(%100, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %102 = @func_5962(%101) /* ty=(Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %103 = cast(%var_7239, dtype="float64") /* ty=Tensor[(648), float64] */;
  %104 = reshape(%103, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %105 = @func_2517(%104) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %106 = @func_5647() /* ty=float32 */;
  %107 = %102.1;
  %108 = %105.0;
  (%106, %107, %var_7235, %108, %var_7239)
}

def @func_17435(%var_17430: Tensor[(3, 15, 2), float64]) -> Tensor[(3, 15, 2), float64] {
  %109 = cast(%var_17430, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
  rsqrt(%109) /* ty=Tensor[(3, 15, 2), float64] */
}

def @func_9164(%var_9162: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) {
  %110 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %111 = %110.1;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %113 = cast(%var_9162, dtype="float64") /* ty=Tensor[(648), float64] */;
  %114 = reshape(%112, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
  %115 = reshape(%113, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %116 = @func_7241(%114, %115) /* ty=(float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %117 = %116.1;
  (%111, %117, %var_9162)
}

def @func_11918() -> Tensor[(900), float32] {
  %118 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %118.1
}

def @func_10393() -> (Tensor[(16, 15, 4), float32],) {
  %119 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 4), float32] */;
  %120 = log(%119) /* ty=Tensor[(16, 15, 4), float32] */;
  (%120,)
}

def @func_7709() -> Tensor[(900), float32] {
  %121 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %121.0
}

def @func_14197() -> Tensor[(900), float32] {
  @func_7709() /* ty=Tensor[(900), float32] */
}

def @func_15530() -> (Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
  %122 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %123 = %122.0;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %125 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %126 = rsqrt(%124) /* ty=Tensor[(13, 10, 2), float32] */;
  %127 = %125.3;
  (%126, %127)
}

def @func_4995() -> Tensor[(900), float32] {
  %128 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %128.0
}

def @func_2368() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
  %129 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %130 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %131 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %134 = cos(%133) /* ty=Tensor[(15, 5, 12), float32] */;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %136 = %129.0;
  %137 = %130.1;
  %138 = sinh(%135) /* ty=Tensor[(15, 5, 12), float64] */;
  (%136, %137, %138)
}

def @func_7945() -> Tensor[(900), float32] {
  %139 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %139.2
}

def @func_6486(%var_6456: Tensor[(144), int64], %var_6458: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) {
  %140 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %141 = cast(%var_6456, dtype="int64") /* ty=Tensor[(144), int64] */;
  %142 = cast(%var_6456, dtype="int64") /* ty=Tensor[(144), int64] */;
  %143 = cast(8.88414f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %144 = cast(%var_6458, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %145 = reshape(%141, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %146 = reshape(%142, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %147 = reshape(%143, newshape=[]) /* ty=float32 */;
  %148 = reshape(%144, newshape=[13, 156]) /* ty=Tensor[(13, 156), float64] */;
  %149 = @func_4437(%145, %146, %147, %148) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) */;
  %150 = %140.1;
  %151 = %149.0;
  (%150, %151, %var_6456, 8.88414f /* ty=float32 */, %var_6458)
}

def @func_7812() -> (Tensor[(3, 10, 9), float32],) {
  %152 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
  %153 = atan(%152) /* ty=Tensor[(3, 10, 9), float32] */;
  (%153,)
}

def @func_17395(%var_17375: Tensor[(560), int16]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16], Tensor[(900), float32]) {
  %154 = @func_4954() /* ty=(Tensor[(900), float32],) */;
  %155 = cast(%var_17375, dtype="int16") /* ty=Tensor[(560), int16] */;
  %156 = reshape(%155, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), int16] */;
  %157 = @func_16956() /* ty=(Tensor[(900), float32],) */;
  %158 = @func_7709() /* ty=Tensor[(900), float32] */;
  %159 = %154.0;
  %160 = @func_7597(%156) /* ty=Tensor[(8, 7, 10), int16] */;
  %161 = %157.0;
  (%158, %159, %160, %var_17375, %161)
}

def @func_4718() -> Tensor[(900), float32] {
  %162 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %162.0
}

def @func_16855(%var_16844: Tensor[(11, 5, 8), int8], %var_16845: Tensor[(11, 5, 8), int8]) -> (Tensor[(11, 5, 8), float64],) {
  %163 = cast(%var_16845, dtype="int8") /* ty=Tensor[(11, 5, 8), int8] */;
  %164 = shape_of(%var_16844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%var_16844, dtype="int8") /* ty=Tensor[(11, 5, 8), int8] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %167 = logical_xor(%165, %166) /* ty=Tensor[(11, 5, 8), int8] */;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %169 = cosh(%168) /* ty=Tensor[(11, 5, 8), float64] */;
  (%169,)
}

def @func_14826() -> Tensor[(13, 10, 2), float32] {
  %170 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %170.0
}

def @func_5211() -> Tensor[(900), float32] {
  %171 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %171.2
}

def @func_11379() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %172 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %173 = @func_4718() /* ty=Tensor[(900), float32] */;
  %174 = %172.0;
  (%173, %174)
}

def @func_7473() -> (Tensor[(2496), float64],) {
  %175 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
  %176 = %175.2;
  (%176,)
}

def @func_6687() -> Tensor[(900), float32] {
  %177 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %177.0
}

def @func_9803() -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
  %178 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
  %179 = cast(meta[relay.Constant][10] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %180 = reshape(%179, newshape=[420]) /* ty=Tensor[(420), uint32] */;
  %181 = @func_2098(%180) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
  %182 = %178.0;
  %183 = %181.1;
  (%182, %183, meta[relay.Constant][10] /* ty=Tensor[(420), uint32] */)
}

def @func_2098(%var_2090: Tensor[(420), uint32]) -> (Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) {
  %184 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %185 = cast(%var_2090, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %186 = cast(-4.12581f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %187 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 52), float32] */, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
  %188 = reshape(%185, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %189 = reshape(%186, newshape=[]) /* ty=float32 */;
  %190 = reshape(%187, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %191 = @func_663(%188, %189, %190) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %192 = %191.7;
  %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 52), float32] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %194 = cast(%192, dtype="float64") /* ty=float64 */;
  %195 = %184.0;
  %196 = divide(%193, %194) /* ty=Tensor[(3, 52), float64] */;
  (%195, %var_2090, -4.12581f /* ty=float32 */, %196)
}

def @func_14627(%var_14621: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(648), float64]) {
  %197 = cast(%var_14621, dtype="float64") /* ty=Tensor[(648), float64] */;
  %198 = reshape(%197, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %199 = @func_5872(%198) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */;
  %200 = @func_10381() /* ty=Tensor[(15, 5, 12), float32] */;
  %201 = %199.5;
  (%200, %201, %var_14621)
}

def @func_14008() -> (Tensor[(900), float32],) {
  %202 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %203 = %202.1;
  (%203,)
}

def @func_2740() -> Tensor[(13, 10, 2), float64] {
  %204 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  sinh(%204) /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_6354() -> (Tensor[(900), float32],) {
  %205 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %206 = %205.0;
  (%206,)
}

def @func_10072(%var_10065: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(648), float64], float32) {
  %207 = @func_8717() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) */;
  %208 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %209 = cast(%var_10065, dtype="float64") /* ty=Tensor[(648), float64] */;
  %210 = reshape(%209, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %211 = @func_9164(%210) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) */;
  %212 = @func_3967() /* ty=(float32,) */;
  %213 = %207.1;
  %214 = %208.1;
  %215 = %211.0;
  %216 = %212.0;
  (%213, %214, %215, %var_10065, %216)
}

def @func_7517() -> (float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) {
  %217 = cast(meta[relay.Constant][13] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %218 = reshape(%217, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %219 = @func_2836(%218) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %220 = @func_5647() /* ty=float32 */;
  %221 = %219.0;
  %222 = @func_4667() /* ty=Tensor[(420), uint32] */;
  (%220, %221, meta[relay.Constant][13] /* ty=Tensor[(260), float64] */, %222)
}

def @func_14474(%var_14446: Tensor[(4, 4), float32]) -> (Tensor[(4, 4), float32], Tensor[(900), float32]) {
  %223 = cast(%var_14446, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %224 = exp(%223) /* ty=Tensor[(4, 4), float32] */;
  %225 = @func_10403() /* ty=Tensor[(900), float32] */;
  (%224, %225)
}

def @func_9858() -> (Tensor[(900), float32],) {
  %226 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %227 = %226.0;
  (%227,)
}

def @func_6508() -> Tensor[(15, 5, 12), float32] {
  %228 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %228.0
}

def @func_11533() -> (Tensor[(2496), float64],) {
  %229 = @func_11187() /* ty=(Tensor[(2496), float64],) */;
  %230 = %229.0;
  (%230,)
}

def @func_2985(%var_2965: Tensor[(18, 36), float64], %var_2972: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) {
  %231 = cast(%var_2965, dtype="float64") /* ty=Tensor[(18, 36), float64] */;
  %232 = reshape(%231, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %233 = @func_2517(%232) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %234 = cast(%var_2972, dtype="float64") /* ty=Tensor[(260), float64] */;
  %235 = reshape(%234, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %236 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %237 = @func_2924() /* ty=Tensor[(900), float32] */;
  %238 = %233.0;
  %239 = @func_2784(%235) /* ty=Tensor[(13, 10, 2), int8] */;
  %240 = %236.0;
  (%237, %238, %var_2965, %239, %var_2972, %240)
}

def @func_9693() -> Tensor[(900), float32] {
  %241 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
  %241.2
}

def @func_10923() -> (float32, Tensor[(900), float32]) {
  %242 = @func_3967() /* ty=(float32,) */;
  %243 = %242.0;
  %244 = @func_3284() /* ty=Tensor[(900), float32] */;
  (%243, %244)
}

def @func_10255() -> (Tensor[(6, 12, 9), float64],) {
  %245 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %246 = %245.2;
  (%246,)
}

def @func_13939(%var_13919: float32) -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(900), float32]) {
  %247 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %248 = @func_11379() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %249 = %248.1;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %251 = reshape(%250, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %252 = @func_2836(%251) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %253 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %254 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %255 = cast(%var_13919, dtype="float32") /* ty=float32 */;
  %256 = reshape(%255, newshape=[]) /* ty=float32 */;
  %257 = @func_525(%256) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %258 = @func_4582() /* ty=(Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) */;
  %259 = %247.0;
  %260 = %252.0;
  %261 = %253.1;
  %262 = %254.0;
  %263 = %257.1;
  %264 = %258.3;
  (%259, %249, %260, %261, %262, %263, %var_13919, %264)
}

def @func_10235() -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) {
  %265 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %266 = @func_3762() /* ty=(Tensor[(900), float32],) */;
  %267 = %265.0;
  %268 = @func_9556() /* ty=Tensor[(420), uint32] */;
  %269 = %266.0;
  %270 = @func_9318() /* ty=float32 */;
  %271 = @func_9556() /* ty=Tensor[(420), uint32] */;
  (%267, %268, %269, %270, %271)
}

def @func_8806() -> Tensor[(16, 12, 13), uint16] {
  %272 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
  %272.1
}

def @func_9207() -> (Tensor[(900), float32],) {
  %273 = @func_5760() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %274 = %273.1;
  (%274,)
}

def @func_3808(%var_3802: Tensor[(14, 11, 15), int64], %var_3803: Tensor[(14, 11, 15), int64]) -> (Tensor[(14, 11, 15), int64],) {
  %275 = cast(%var_3803, dtype="int64") /* ty=Tensor[(14, 11, 15), int64] */;
  %276 = shape_of(%var_3802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_3802, dtype="int64") /* ty=Tensor[(14, 11, 15), int64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %279 = multiply(%277, %278) /* ty=Tensor[(14, 11, 15), int64] */;
  (%279,)
}

def @func_9275() -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float32]) {
  %280 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %281 = @func_7757() /* ty=Tensor[(15, 5, 12), float32] */;
  %282 = %280.1;
  (%281, %282)
}

def @func_8717() -> (Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) {
  %283 = @func_8077() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %284 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %285 = %283.0;
  %286 = %284.0;
  (%285, %286)
}

def @func_11187() -> (Tensor[(2496), float64],) {
  %287 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
  %288 = %287.1;
  (%288,)
}

def @func_10798(%var_10794: Tensor[(2028), float64]) -> (Tensor[(420), uint32], Tensor[(3, 15, 6), float64], float32, Tensor[(900), float32], float32, Tensor[(144), int64], Tensor[(2028), float64]) {
  %289 = cast(1.93925f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %290 = reshape(%289, newshape=[]) /* ty=float32 */;
  %291 = @func_525(%290) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(3, 15, 6), float64] */;
  %294 = reshape(%293, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float64] */;
  %295 = @func_10150(%294) /* ty=(Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */;
  %296 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %297 = cast(%var_10794, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %298 = reshape(%296, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %299 = reshape(%297, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %300 = @func_6486(%298, %299) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
  %301 = @func_5483() /* ty=Tensor[(420), uint32] */;
  %302 = %295.3;
  %303 = %300.3;
  (%301, %292, 1.93925f /* ty=float32 */, %302, %303, meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, %var_10794)
}

def @func_13429() -> (Tensor[(13, 10, 2), float64],) {
  %304 = @func_4035() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %305 = %304.0;
  (%305,)
}

def @func_16560() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %306 = @func_4954() /* ty=(Tensor[(900), float32],) */;
  %307 = %306.0;
  %308 = @func_16394() /* ty=Tensor[(900), float32] */;
  (%307, %308)
}

def @func_6658() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %309 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %310 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %311 = %309.0;
  %312 = %310.1;
  (%311, %312)
}

def @func_5091() -> (Tensor[(13, 10, 2), float64],) {
  %313 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %314 = %313.0;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %316 = cos(%315) /* ty=Tensor[(13, 10, 2), float64] */;
  (%316,)
}

def @func_5556() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %317 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %318 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %319 = %317.2;
  (%318, %319)
}

def @func_13804() -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
  %320 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %321 = @func_12568() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %322 = %320.0;
  %323 = %321.0;
  (%322, %323)
}

def @func_3762() -> (Tensor[(900), float32],) {
  %324 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %325 = %324.1;
  (%325,)
}

def @func_3967() -> (float32,) {
  %326 = @func_3342() /* ty=(float32,) */;
  %327 = %326.0;
  (%327,)
}

def @func_4498() -> Tensor[(13, 10, 2), float64] {
  %328 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %328.0
}

def @func_8350(%var_8346: Tensor[(560), int16]) -> (Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) {
  %329 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %330 = cast(%var_8346, dtype="int16") /* ty=Tensor[(560), int16] */;
  %331 = reshape(%330, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), int16] */;
  %332 = %329.1;
  %333 = @func_7597(%331) /* ty=Tensor[(8, 7, 10), int16] */;
  (%332, %333, %var_8346)
}

def @func_17669(%var_17648: Tensor[(156), float32]) -> (float32, Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(156), float32], Tensor[(3, 15, 6), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32]) {
  %334 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
  %335 = @func_16093() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %336 = cast(%var_17648, dtype="float32") /* ty=Tensor[(156), float32] */;
  %337 = reshape(%336, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %338 = @func_6981(%337) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %339 = %334.1;
  %340 = cast(%339, dtype="float32") /* ty=float32 */;
  %341 = reshape(%340, newshape=[]) /* ty=float32 */;
  %342 = @func_525(%341) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %343 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %344 = %335.0;
  %345 = %338.4;
  %346 = %342.0;
  %347 = %343.0;
  %348 = @func_14902() /* ty=Tensor[(900), float32] */;
  (%339, %344, %345, %var_17648, %346, %347, %348)
}

def @func_13477() -> (Tensor[(15, 5, 12), float32],) {
  %349 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %350 = %349.1;
  (%350,)
}

def @func_15358() -> Tensor[(900), float32] {
  @func_2924() /* ty=Tensor[(900), float32] */
}

def @func_9556() -> Tensor[(420), uint32] {
  %351 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %351.0
}

def @func_11746() -> float32 {
  %352 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
  %352.0
}

def @func_8006() -> (Tensor[(3, 10, 9), float32], Tensor[(900), float32]) {
  %353 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
  %354 = %353.0;
  %355 = @func_7945() /* ty=Tensor[(900), float32] */;
  (%354, %355)
}

def @func_2924() -> Tensor[(900), float32] {
  %356 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %356.0
}

def @func_10694() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %357 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %358 = @func_5760() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %359 = %357.1;
  %360 = %358.0;
  (%359, %360)
}

def @func_16394() -> Tensor[(900), float32] {
  %361 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %361.1
}

def @func_4312(%var_4243: uint16, %var_4254: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) {
  %362 = cast(%var_4254, dtype="float64") /* ty=Tensor[(720), float64] */;
  %363 = reshape(%362, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %364 = @func_3105(%363) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %365 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %366 = cast(%var_4243, dtype="bool") /* ty=bool */;
  %367 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1, 7), uint16] */, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
  %368 = greater(%366, %367) /* ty=Tensor[(1, 1, 7), bool] */;
  %369 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1, 7), uint16] */, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %373 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %374 = %373.0;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %376 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %377 = %364.5;
  %378 = %365.2;
  %379 = mod(%371, %372) /* ty=Tensor[(?, ?, 7), float32] */;
  %380 = log10(%375) /* ty=Tensor[(13, 10, 2), float64] */;
  (%376, %377, %var_4254, %378, %379, %380)
}

def @func_8243() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) {
  %381 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %382 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %383 = %381.0;
  %384 = %382.0;
  %385 = @func_7709() /* ty=Tensor[(900), float32] */;
  (%383, %384, %385)
}

def @func_1982() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) {
  %386 = cast(meta[relay.Constant][16] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %387 = reshape(%386, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
  %388 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %389 = atanh(%388) /* ty=Tensor[(16, 9, 12), float64] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %391 = @func_1350(%387) /* ty=Tensor[(15, 5, 12), float32] */;
  %392 = asinh(%390) /* ty=Tensor[(16, 9, 12), float32] */;
  (%391, meta[relay.Constant][16] /* ty=Tensor[(900), float32] */, %392)
}

def @func_10896() -> (Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
  %393 = @func_10636() /* ty=(Tensor[(900), float32],) */;
  %394 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
  %395 = %393.0;
  (%394, %395)
}

def @func_3271() -> (Tensor[(900), float32],) {
  %396 = @func_2924() /* ty=Tensor[(900), float32] */;
  (%396,)
}

def @func_3948() -> (Tensor[(13, 10, 2), float64],) {
  %397 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %398 = %397.0;
  (%398,)
}

def @func_14486() -> (Tensor[(900), float32], Tensor[(15, 5, 12), int64]) {
  %399 = @func_7709() /* ty=Tensor[(900), float32] */;
  %400 = @func_11329() /* ty=Tensor[(15, 5, 12), int64] */;
  (%399, %400)
}

def @func_11118(%var_11113: Tensor[(16, 7, 10), int16], %var_11114: Tensor[(16, 7, 10), int16]) -> (Tensor[(16, 7, 10), int16],) {
  %401 = cast(%var_11114, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %402 = shape_of(%var_11113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%var_11113, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %405 = bitwise_and(%403, %404) /* ty=Tensor[(16, 7, 10), int16] */;
  (%405,)
}

def @func_8903() -> float32 {
  %406 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %406.1
}

def @func_4582() -> (Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) {
  %407 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %408 = reshape(%407, newshape=[]) /* ty=uint32 */;
  %409 = @func_2667(%408) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */;
  %410 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %411 = @func_2924() /* ty=Tensor[(900), float32] */;
  %412 = %409.2;
  %413 = %410.1;
  (%411, %412, meta[relay.Constant][18] /* ty=uint32 */, %413)
}

def @func_7757() -> Tensor[(15, 5, 12), float32] {
  @func_6317() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_6317() -> Tensor[(15, 5, 12), float32] {
  %414 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %414.0
}

def @func_17022() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %415 = @func_10235() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %416 = @func_10008() /* ty=Tensor[(420), uint32] */;
  %417 = %415.2;
  (%416, %417)
}

def @func_2892() -> (Tensor[(15, 5, 12), int64],) {
  %418 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %419 = %418.0;
  %420 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %421 = %420.0;
  %422 = cast(%421, dtype="int64") /* ty=Tensor[(900), int64] */;
  %423 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%419, dtype="int64") /* ty=Tensor[(15, 5, 12), int64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %426 = right_shift(%424, %425) /* ty=Tensor[(15, 5, 12), int64] */;
  (%426,)
}

def @func_9299() -> (Tensor[(13, 10, 2), float32],) {
  %427 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %430 = acos(%429) /* ty=Tensor[(13, 10, 2), float32] */;
  (%430,)
}

def @func_14874() -> Tensor[(15, 5, 12), float32] {
  %431 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %431.0
}

def @func_9949() -> (Tensor[(15, 5, 12), int8], Tensor[(15, 5, 12), bool], Tensor[(5, 84), uint32], Tensor[(156), float32], Tensor[(900), float32], Tensor[(72, 2), int64], Tensor[(3), uint32], Tensor[(12, 13, 1), float32], float32) {
  %432 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %433 = %432.0;
  %434 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 5, 12), float32] */, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %438 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 5, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %439 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%433, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = cast(meta[relay.Constant][20] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %443 = reshape(%442, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %444 = @func_6981(%443) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %445 = cast(meta[relay.Constant][21] /* ty=Tensor[(72, 2), int64] */, dtype="int64") /* ty=Tensor[(72, 2), int64] */;
  %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(3), uint32] */, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %447 = reshape(%445, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %448 = reshape(%446, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %449 = @func_6802(%447, %448) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) */;
  %450 = cast(1.18796f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %452 = reshape(%450, newshape=[]) /* ty=float32 */;
  %453 = reshape(%451, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %454 = @func_333(%452, %453) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %455 = bitwise_or(%436, %437) /* ty=Tensor[(15, 5, 12), int8] */;
  %456 = equal(%440, %441) /* ty=Tensor[(15, 5, 12), bool] */;
  %457 = %444.6;
  %458 = %449.5;
  %459 = %454.0;
  (%455, %456, %457, meta[relay.Constant][20] /* ty=Tensor[(156), float32] */, %458, meta[relay.Constant][21] /* ty=Tensor[(72, 2), int64] */, meta[relay.Constant][22] /* ty=Tensor[(3), uint32] */, %459, 1.18796f /* ty=float32 */)
}

def @func_4667() -> Tensor[(420), uint32] {
  %460 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %460.0
}

def @func_12972() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) {
  %461 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %462 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
  %463 = %461.0;
  (%462, %463)
}

def @func_16261() -> (Tensor[(2496), float64],) {
  %464 = @func_11533() /* ty=(Tensor[(2496), float64],) */;
  %465 = %464.0;
  (%465,)
}

def @func_10886() -> (Tensor[(420), uint32], Tensor[(6, 12, 9), float64]) {
  %466 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %467 = @func_4667() /* ty=Tensor[(420), uint32] */;
  %468 = %466.2;
  (%467, %468)
}

def @func_13696(%var_13681: Tensor[(15, 12, 15), float32]) -> Tensor[(15, 12, 15), float32] {
  %469 = cast(%var_13681, dtype="float32") /* ty=Tensor[(15, 12, 15), float32] */;
  acos(%469) /* ty=Tensor[(15, 12, 15), float32] */
}

def @func_2013() -> (Tensor[(900), float32],) {
  %470 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %471 = %470.1;
  (%471,)
}

def @func_5042() -> (Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) {
  %472 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %473 = @func_4667() /* ty=Tensor[(420), uint32] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_15057() -> (float32,) {
  %475 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
  %476 = %475.1;
  (%476,)
}

def @func_4853() -> (Tensor[(900), float32],) {
  %477 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
  %478 = %477.1;
  (%478,)
}

def @func_17790() -> Tensor[(900), float32] {
  @func_11059() /* ty=Tensor[(900), float32] */
}

def @func_2387() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %479 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %480 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %481 = %479.0;
  %482 = %480.0;
  (%481, %482)
}

def @func_10008() -> Tensor[(420), uint32] {
  %483 = @func_8617() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) */;
  %483.2
}

def @func_4756() -> (float32, Tensor[(900), float32], Tensor[(420), uint32]) {
  %484 = @func_3967() /* ty=(float32,) */;
  %485 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %486 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %487 = %484.0;
  %488 = %485.0;
  %489 = %486.1;
  (%487, %488, %489)
}

def @func_5872(%var_5828: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
  %490 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %491 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %492 = cast(%var_5828, dtype="float64") /* ty=Tensor[(648), float64] */;
  %493 = reshape(%492, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %494 = @func_2517(%493) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %495 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
  %496 = %490.0;
  %497 = %491.0;
  %498 = %494.0;
  %499 = @func_4718() /* ty=Tensor[(900), float32] */;
  %500 = %495.0;
  %501 = @func_4667() /* ty=Tensor[(420), uint32] */;
  (%496, %497, %498, %var_5828, %499, %500, %501)
}

def @func_13298() -> (Tensor[(900), float32],) {
  %502 = @func_3634() /* ty=(Tensor[(900), float32],) */;
  %503 = %502.0;
  (%503,)
}

def @func_13084(%var_13062: Tensor[(16, 12, 13), uint16]) -> (Tensor[(16, 12, 13), float64], Tensor[(900), float32], Tensor[(16, 12, 13), uint8], Tensor[(16, 12, 13), float32]) {
  %504 = @func_10896() /* ty=(Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */;
  %505 = %504.0;
  %506 = cast(%var_13062, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%505, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %510 = @func_8077() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %511 = cast(%505, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %512 = atanh(%511) /* ty=Tensor[(16, 12, 13), float64] */;
  %513 = cast(%var_13062, dtype="uint8") /* ty=Tensor[(16, 12, 13), uint8] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="uint8") /* ty=Tensor[(16, 12, 13), uint8] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %517 = cast(%var_13062, dtype="float32") /* ty=Tensor[(16, 12, 13), float32] */;
  %518 = floor_mod(%508, %509) /* ty=Tensor[(16, 12, 13), float64] */;
  %519 = %510.3;
  %520 = bitwise_and(%515, %516) /* ty=Tensor[(16, 12, 13), uint8] */;
  %521 = asinh(%517) /* ty=Tensor[(16, 12, 13), float32] */;
  (%518, %519, %520, %521)
}

def @func_13774() -> Tensor[(900), float32] {
  @func_4718() /* ty=Tensor[(900), float32] */
}

def @func_8885() -> (Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) {
  %522 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %523 = rsqrt(%522) /* ty=Tensor[(2, 13, 11), float64] */;
  %524 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %528 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %529 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %530 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %531 = log(%530) /* ty=Tensor[(2, 13, 11), float64] */;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %533 = divide(%526, %527) /* ty=Tensor[(2, 13, 11), float64] */;
  %534 = %528.0;
  %535 = %529.2;
  %536 = acos(%532) /* ty=Tensor[(2, 13, 11), float32] */;
  (%533, %534, %535, %536)
}

def @func_8617() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) {
  %537 = @func_3634() /* ty=(Tensor[(900), float32],) */;
  %538 = @func_6131() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) */;
  %539 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
  %540 = %537.0;
  %541 = %538.0;
  %542 = %539.0;
  (%540, %541, %542)
}

def @func_16126() -> Tensor[(13, 10, 2), float64] {
  %543 = @func_12972() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) */;
  %543.1
}

def @func_14409() -> Tensor[(900), float32] {
  %544 = @func_13298() /* ty=(Tensor[(900), float32],) */;
  %544.0
}

def @func_5962(%var_5923: Tensor[(13, 10, 2), float64]) -> (Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %545 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %546 = %545.0;
  %547 = cast(%var_5923, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %551 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %552 = floor_divide(%549, %550) /* ty=Tensor[(13, 10, 2), float32] */;
  %553 = %551.0;
  (%552, %553)
}

def @func_3105(%var_3067: Tensor[(6, 8, 15), float64]) -> (Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) {
  %554 = cast(%var_3067, dtype="float64") /* ty=Tensor[(6, 8, 15), float64] */;
  %555 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %556 = reshape(%555, newshape=[]) /* ty=uint32 */;
  %557 = @func_2604(%556) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
  %558 = cast(meta[relay.Constant][25] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %559 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %560 = cast(meta[relay.Constant][26] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %561 = reshape(%558, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %562 = reshape(%559, newshape=[]) /* ty=float32 */;
  %563 = reshape(%560, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %564 = @func_663(%561, %562, %563) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %565 = atan(%554) /* ty=Tensor[(6, 8, 15), float64] */;
  %566 = %557.4;
  %567 = %564.0;
  (%565, %566, meta[relay.Constant][24] /* ty=uint32 */, %567, meta[relay.Constant][25] /* ty=Tensor[(420), uint32] */, meta[relay.Constant][26] /* ty=Tensor[(156), float32] */)
}

def @func_4532() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %568 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %569 = @func_3284() /* ty=Tensor[(900), float32] */;
  %570 = %568.1;
  (%569, %570)
}

def @func_13561(%var_13515: Tensor[(15, 6, 4), float64], %var_13543: uint32) -> (Tensor[(15, 6, 4), float64], Tensor[(420), uint32], float32, uint32, Tensor[(15, 6, 4), float32]) {
  %571 = cast(%var_13515, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %572 = cast(%var_13543, dtype="uint32") /* ty=uint32 */;
  %573 = reshape(%572, newshape=[]) /* ty=uint32 */;
  %574 = @func_2604(%573) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
  %575 = cast(%var_13515, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %576 = cos(%575) /* ty=Tensor[(15, 6, 4), float64] */;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(15, 6, 4), float32] */;
  %578 = log2(%571) /* ty=Tensor[(15, 6, 4), float64] */;
  %579 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %580 = %574.4;
  %581 = sin(%577) /* ty=Tensor[(15, 6, 4), float32] */;
  (%578, %579, %580, %var_13543, %581)
}

def @func_10714() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
  %582 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %583 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %584 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %585 = %582.0;
  %586 = %583.3;
  (%584, %585, %586)
}

def @func_9667(%var_9662: float32) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32]) {
  %587 = @func_6354() /* ty=(Tensor[(900), float32],) */;
  %588 = cast(meta[relay.Constant][27] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %589 = cast(%var_9662, dtype="float32") /* ty=float32 */;
  %590 = cast(meta[relay.Constant][28] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %591 = reshape(%588, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %592 = reshape(%589, newshape=[]) /* ty=float32 */;
  %593 = reshape(%590, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %594 = @func_663(%591, %592, %593) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %595 = %587.0;
  %596 = %594.3;
  (%595, %596, meta[relay.Constant][27] /* ty=Tensor[(420), uint32] */, %var_9662, meta[relay.Constant][28] /* ty=Tensor[(156), float32] */)
}

def @func_14720(%var_14682: Tensor[(2028), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(900), float32], Tensor[(2, 72), float32], Tensor[(13, 10, 2), float64], Tensor[(2028), float64]) {
  %597 = @func_9616() /* ty=(Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) */;
  %598 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %599 = cast(%var_14682, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %600 = reshape(%599, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %601 = @func_8197(%600) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %602 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %603 = cast(%var_14682, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %604 = tan(%603) /* ty=Tensor[(2028), float64] */;
  %605 = cast(%604, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %606 = %597.1;
  %607 = %598.0;
  %608 = %601.4;
  %609 = %602.0;
  %610 = asinh(%605) /* ty=Tensor[(2028), float64] */;
  (%606, %607, %608, %609, %610)
}

def @func_11111() -> (Tensor[(13, 10, 2), float64], float32) {
  %611 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %612 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
  %613 = %611.0;
  %614 = %612.0;
  (%613, %614)
}

def @func_14306() -> (Tensor[(420), uint32],) {
  %615 = @func_5483() /* ty=Tensor[(420), uint32] */;
  (%615,)
}

def @func_7344() -> (Tensor[(420), uint32],) {
  %616 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
  %617 = %616.0;
  (%617,)
}

def @func_3634() -> (Tensor[(900), float32],) {
  %618 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %619 = %618.0;
  (%619,)
}

def @func_16883() -> (Tensor[(900), float32],) {
  %620 = @func_14197() /* ty=Tensor[(900), float32] */;
  (%620,)
}

def @func_7887() -> Tensor[(900), float32] {
  %621 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %621.0
}

def @func_8664() -> Tensor[(420), uint32] {
  @func_5483() /* ty=Tensor[(420), uint32] */
}

def @func_12936() -> Tensor[(900), float32] {
  @func_11918() /* ty=Tensor[(900), float32] */
}

def @func_13115() -> Tensor[(900), float32] {
  %622 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %622.0
}

def @func_15827() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %623 = @func_12124() /* ty=(Tensor[(900), float32],) */;
  %624 = @func_10714() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) */;
  %625 = %623.0;
  %626 = %624.1;
  %627 = @func_3912() /* ty=Tensor[(900), float32] */;
  (%625, %626, %627)
}

def @func_8044() -> (Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) {
  %628 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %629 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
  %630 = %628.0;
  %631 = %629.2;
  (%630, %631)
}

def @func_17739() -> (Tensor[(420), uint32],) {
  %632 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %633 = %632.0;
  (%633,)
}

def @func_16093() -> (Tensor[(13, 10, 2), float64],) {
  %634 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %635 = %634.0;
  (%635,)
}

def @func_11035(%var_10998: Tensor[(5, 3, 16), float64], %var_11018: Tensor[(65, 4), float64], %var_11022: uint32) -> (Tensor[(5, 3, 16), bool], Tensor[(648), float64], Tensor[(65, 4), float64], Tensor[(648), float64], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32]) {
  %636 = cast(%var_10998, dtype="float64") /* ty=Tensor[(5, 3, 16), float64] */;
  %637 = sin(%636) /* ty=Tensor[(5, 3, 16), float64] */;
  %638 = cast(%637, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %639 = shape_of(%var_10998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_10998, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = cast(%var_11018, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %643 = cast(meta[relay.Constant][29] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %644 = reshape(%642, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
  %645 = reshape(%643, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %646 = @func_7241(%644, %645) /* ty=(float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %647 = cast(%var_11022, dtype="uint32") /* ty=uint32 */;
  %648 = cast(meta[relay.Constant][30] /* ty=Tensor[(3), uint32] */, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %649 = reshape(%647, newshape=[]) /* ty=uint32 */;
  %650 = reshape(%648, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %651 = logical_and(%640, %641) /* ty=Tensor[(5, 3, 16), bool] */;
  %652 = %646.4;
  %653 = @func_732(%649, %650) /* ty=Tensor[(1, 3), bool] */;
  (%651, %652, %var_11018, meta[relay.Constant][29] /* ty=Tensor[(648), float64] */, %653, %var_11022, meta[relay.Constant][30] /* ty=Tensor[(3), uint32] */)
}

def @func_6916() -> (Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %654 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %655 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %656 = %654.0;
  %657 = %655.0;
  %658 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  (%656, %657, %658)
}

def @func_16625() -> (Tensor[(900), float32], Tensor[(420), uint32]) {
  %659 = @func_15827() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %660 = @func_15089() /* ty=(Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) */;
  %661 = %659.2;
  %662 = %660.1;
  (%661, %662)
}

def @func_333(%var_319: float32, %var_320: Tensor[(12, 13, 1), float32]) -> (Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) {
  %663 = cast(%var_319, dtype="float32") /* ty=float32 */;
  %664 = cast(%var_320, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %665 = cast(%var_320, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
  %666 = cast(%var_319, dtype="bool") /* ty=bool */;
  %667 = minimum(%663, %664) /* ty=Tensor[(12, 13, 1), float32] */;
  %668 = not_equal(%665, %666) /* ty=Tensor[(12, 13, 1), bool] */;
  (%667, %668)
}

def @func_4811(%var_4796: Tensor[(6, 12, 9), float64], %var_4803: Tensor[(1, 3), uint32]) -> (Tensor[(6, 12, 9), int64], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(900), float32]) {
  %669 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %670 = %669.2;
  %671 = cast(%var_4796, dtype="int64") /* ty=Tensor[(6, 12, 9), int64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="int64") /* ty=Tensor[(6, 12, 9), int64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %675 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %676 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(1, 3), uint32] */;
  %677 = reshape(%675, newshape=[]) /* ty=uint32 */;
  %678 = reshape(%676, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %679 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %680 = @func_4532() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %681 = add(%673, %674) /* ty=Tensor[(6, 12, 9), int64] */;
  %682 = @func_732(%677, %678) /* ty=Tensor[(1, 3), bool] */;
  %683 = %679.0;
  %684 = %680.0;
  (%681, %682, meta[relay.Constant][31] /* ty=uint32 */, %var_4803, %683, %684)
}

def @func_2836(%var_2825: Tensor[(260), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) {
  %685 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %686 = cast(%var_2825, dtype="float64") /* ty=Tensor[(260), float64] */;
  %687 = reshape(%686, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %688 = @func_2784(%687) /* ty=Tensor[(13, 10, 2), int8] */;
  %689 = cast(%var_2825, dtype="bool") /* ty=Tensor[(260), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = %685.0;
  %694 = greater(%691, %692) /* ty=Tensor[(13, 10, 2), bool] */;
  (%693, %694)
}

def @func_13756(%var_13747: Tensor[(13, 13, 1), uint64], %var_13748: Tensor[(13, 13, 9), uint64]) -> (Tensor[(13, 13, 9), uint64],) {
  %695 = cast(%var_13747, dtype="uint64") /* ty=Tensor[(13, 13, 1), uint64] */;
  %696 = cast(%var_13748, dtype="uint64") /* ty=Tensor[(13, 13, 9), uint64] */;
  %697 = minimum(%695, %696) /* ty=Tensor[(13, 13, 9), uint64] */;
  (%697,)
}

def @func_10357() -> Tensor[(900), float32] {
  @func_9693() /* ty=Tensor[(900), float32] */
}

def @func_13039() -> Tensor[(2, 13, 11), float32] {
  %698 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
  %698.3
}

def @func_13171() -> (Tensor[(900), float32],) {
  %699 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %700 = %699.0;
  (%700,)
}

def @func_8562(%var_8549: Tensor[(8, 7, 7), float64]) -> Tensor[(8, 7, 7), float64] {
  %701 = cast(%var_8549, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
  erf(%701) /* ty=Tensor[(8, 7, 7), float64] */
}

def @func_12272() -> (Tensor[(2, 12, 14), int64],) {
  %702 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
  %703 = acos(%702) /* ty=Tensor[(2, 12, 14), float32] */;
  %704 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 14), uint64] */;
  %705 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 14), uint64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %708 = maximum(%706, %707) /* ty=Tensor[(2, 12, 14), uint64] */;
  %709 = cast(%708, dtype="int64") /* ty=Tensor[(2, 12, 14), int64] */;
  %710 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%703, dtype="int64") /* ty=Tensor[(2, 12, 14), int64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %713 = subtract(%711, %712) /* ty=Tensor[(2, 12, 14), int64] */;
  (%713,)
}

def @func_15216(%var_15205: Tensor[(156), float32]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32], Tensor[(156), float32], float32) {
  %714 = @func_13429() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %715 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %716 = cast(%var_15205, dtype="float32") /* ty=Tensor[(156), float32] */;
  %717 = reshape(%716, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %718 = @func_6981(%717) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %719 = @func_3967() /* ty=(float32,) */;
  %720 = %714.0;
  %721 = %715.0;
  %722 = %718.0;
  %723 = %719.0;
  (%720, %721, %722, %var_15205, %723)
}

def @func_2712() -> (Tensor[(900), float32], float32, Tensor[(420), uint32]) {
  %724 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %725 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %726 = reshape(%725, newshape=[420]) /* ty=Tensor[(420), uint32] */;
  %727 = @func_2098(%726) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
  %728 = %724.0;
  %729 = %727.2;
  (%728, %729, meta[relay.Constant][34] /* ty=Tensor[(420), uint32] */)
}

def @func_525(%var_520: float32) -> (Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
  %730 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 6), float64] */;
  %731 = cast(%var_520, dtype="float32") /* ty=float32 */;
  %732 = cast(meta[relay.Constant][36] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %733 = reshape(%731, newshape=[]) /* ty=float32 */;
  %734 = reshape(%732, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %735 = @func_333(%733, %734) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %736 = sin(%730) /* ty=Tensor[(3, 15, 6), float64] */;
  %737 = %735.0;
  (%736, %737, %var_520, meta[relay.Constant][36] /* ty=Tensor[(156), float32] */)
}

def @func_3342() -> (float32,) {
  %738 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %739 = %738.1;
  (%739,)
}

def @main(%var_17915: Tensor[(560), int16], %var_17947: uint32, %var_17948: Tensor[(3), uint32], %var_18014: Tensor[(648), float64], %var_18015: Tensor[(156), float32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(560), int16], Tensor[(560), int16], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(13, 156), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(648), float64], Tensor[(156), float32], Tensor[(2, 72), float64]) {
  %740 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %741 = cast(%var_17915, dtype="int16") /* ty=Tensor[(560), int16] */;
  %742 = reshape(%741, newshape=[560]) /* ty=Tensor[(560), int16] */;
  %743 = @func_8350(%742) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) */;
  %744 = cast(%var_17947, dtype="uint32") /* ty=uint32 */;
  %745 = cast(%var_17948, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %746 = reshape(%744, newshape=[]) /* ty=uint32 */;
  %747 = reshape(%745, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %748 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %749 = cast(%var_18014, dtype="float64") /* ty=Tensor[(648), float64] */;
  %750 = cast(%var_18015, dtype="float32") /* ty=Tensor[(156), float32] */;
  %751 = reshape(%749, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %752 = reshape(%750, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %753 = @func_11709(%751, %752) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) */;
  %754 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 156), float64] */, dtype="float64") /* ty=Tensor[(13, 156), float64] */;
  %755 = reshape(%754, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %756 = @func_8197(%755) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %757 = %756.4;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %759 = cosh(%758) /* ty=Tensor[(2, 72), float32] */;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %761 = %740.1;
  %762 = @func_13774() /* ty=Tensor[(900), float32] */;
  %763 = %743.2;
  %764 = @func_732(%746, %747) /* ty=Tensor[(1, 3), bool] */;
  %765 = %748.1;
  %766 = @func_17302() /* ty=Tensor[(900), float32] */;
  %767 = %753.2;
  %768 = log2(%760) /* ty=Tensor[(2, 72), float64] */;
  (%761, %762, %763, %var_17915, %764, %var_17947, %var_17948, %765, meta[relay.Constant][37] /* ty=Tensor[(13, 156), float64] */, %766, %767, %var_18014, %var_18015, %768)
}

def @func_11518(%var_11502: uint16, %var_11503: Tensor[(60, 12), float64]) -> (Tensor[(900), float32], Tensor[(720), float64], Tensor[(60, 12), float64]) {
  %769 = @func_10833() /* ty=(Tensor[(900), float32],) */;
  %770 = cast(%var_11502, dtype="uint16") /* ty=uint16 */;
  %771 = cast(%var_11503, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %772 = reshape(%770, newshape=[]) /* ty=uint16 */;
  %773 = reshape(%771, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %774 = @func_4312(%772, %773) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
  %775 = cast(%var_11502, dtype="float64") /* ty=float64 */;
  %776 = cast(%var_11503, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %777 = %769.0;
  %778 = %774.2;
  %779 = floor_divide(%775, %776) /* ty=Tensor[(60, 12), float64] */;
  (%777, %778, %779)
}

def @func_5563() -> (Tensor[(900), float32],) {
  %780 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %781 = %780.0;
  (%781,)
}

def @func_12586() -> Tensor[(420), uint32] {
  %782 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %782.2
}

def @func_10381() -> Tensor[(15, 5, 12), float32] {
  @func_6508() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_12813(%var_12783: uint16) -> (Tensor[(900), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), int64]) {
  %783 = cast(%var_12783, dtype="uint16") /* ty=uint16 */;
  %784 = cast(meta[relay.Constant][38] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %785 = reshape(%783, newshape=[]) /* ty=uint16 */;
  %786 = reshape(%784, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %787 = @func_4312(%785, %786) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
  %788 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %789 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %790 = @func_6379() /* ty=Tensor[(900), float64] */;
  %791 = %787.5;
  %792 = %788.0;
  %793 = %789.0;
  (%790, %791, %var_12783, meta[relay.Constant][38] /* ty=Tensor[(720), float64] */, %792, %793)
}

def @func_663(%var_572: Tensor[(6, 5, 14), uint32], %var_577: float32, %var_578: Tensor[(1, 156), float32]) -> (Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) {
  %794 = cast(%var_572, dtype="bool") /* ty=Tensor[(6, 5, 14), bool] */;
  %795 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="bool") /* ty=Tensor[(6, 5, 14), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %798 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %799 = cast(%var_578, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %800 = reshape(%798, newshape=[]) /* ty=float32 */;
  %801 = reshape(%799, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %802 = @func_333(%800, %801) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %803 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %804 = reshape(%803, newshape=[]) /* ty=float32 */;
  %805 = @func_525(%804) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %806 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %807 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %808 = reshape(%807, newshape=[]) /* ty=float32 */;
  %809 = @func_525(%808) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %810 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %811 = reshape(%810, newshape=[]) /* ty=float32 */;
  %812 = @func_525(%811) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %813 = less(%796, %797) /* ty=Tensor[(6, 5, 14), bool] */;
  %814 = %802.1;
  %815 = %805.0;
  %816 = rsqrt(%806) /* ty=Tensor[(6, 5, 14), float32] */;
  %817 = %809.2;
  %818 = %812.2;
  (%813, %814, %var_577, %var_578, %815, %816, %817, %818)
}

def @func_4170() -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  %819 = cast(meta[relay.Constant][40] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %820 = reshape(%819, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %821 = @func_2517(%820) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %822 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %823 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %824 = %821.0;
  (%822, %823, %824, meta[relay.Constant][40] /* ty=Tensor[(648), float64] */)
}

def @func_6022() -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) {
  %825 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %826 = @func_5714() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %827 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %828 = %827.0;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %830 = exp(%829) /* ty=Tensor[(15, 5, 12), float32] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %832 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %833 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %834 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %835 = %825.0;
  %836 = @func_5647() /* ty=float32 */;
  %837 = %826.0;
  %838 = atanh(%831) /* ty=Tensor[(15, 5, 12), float64] */;
  %839 = %832.0;
  %840 = %833.0;
  %841 = %834.3;
  (%835, %836, %837, %838, %839, %840, %841)
}

def @func_14383(%var_14376: Tensor[(7, 7, 7), uint32]) -> Tensor[(7, 7, 7), bool] {
  %842 = @func_4582() /* ty=(Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) */;
  %843 = %842.2;
  %844 = cast(%843, dtype="bool") /* ty=bool */;
  %845 = cast(%var_14376, dtype="bool") /* ty=Tensor[(7, 7, 7), bool] */;
  equal(%844, %845) /* ty=Tensor[(7, 7, 7), bool] */
}

def @func_16515() -> (Tensor[(15, 5, 12), float32],) {
  %846 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
  (%846,)
}

def @func_14056() -> Tensor[(900), float32] {
  %847 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %847.0
}

def @func_5248() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %848 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %849 = @func_3762() /* ty=(Tensor[(900), float32],) */;
  %850 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
  %851 = %848.0;
  %852 = %849.0;
  (%850, %851, %852)
}

def @func_16321(%var_16315: Tensor[(15, 1, 9), uint64], %var_16316: Tensor[(15, 1, 9), uint64]) -> Tensor[(15, ?, 9), uint64] {
  %853 = cast(%var_16316, dtype="uint64") /* ty=Tensor[(15, 1, 9), uint64] */;
  %854 = shape_of(%var_16315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%var_16315, dtype="uint64") /* ty=Tensor[(15, 1, 9), uint64] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%855, %856) /* ty=Tensor[(15, ?, 9), uint64] */
}

def @func_17700() -> (Tensor[(15, 5, 12), float32],) {
  %857 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %859 = atan(%858) /* ty=Tensor[(15, 5, 12), float32] */;
  (%859,)
}

def @func_10403() -> Tensor[(900), float32] {
  @func_6687() /* ty=Tensor[(900), float32] */
}

def @func_1350(%var_1342: Tensor[(15, 5, 12), float32]) -> Tensor[(15, 5, 12), float32] {
  %860 = cast(%var_1342, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  asinh(%860) /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_3583() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %861 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %862 = %861.0;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(900), float32] */;
  %864 = reshape(%863, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
  %865 = @func_1350(%864) /* ty=Tensor[(15, 5, 12), float32] */;
  (%862, %865)
}

def @func_4035() -> (Tensor[(13, 10, 2), float64],) {
  %866 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %867 = %866.0;
  (%867,)
}

def @func_14931() -> (Tensor[(900), float32],) {
  %868 = @func_14530() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %869 = %868.1;
  (%869,)
}

def @func_5579(%var_5565: Tensor[(14, 1, 1), float32], %var_5573: Tensor[(130, 2), float64]) -> (Tensor[(14, 1, 1), float32], Tensor[(13, 10, 2), int8], Tensor[(130, 2), float64]) {
  %870 = cast(%var_5565, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
  %871 = cast(%var_5573, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %872 = reshape(%871, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %873 = acos(%870) /* ty=Tensor[(14, 1, 1), float32] */;
  %874 = @func_2784(%872) /* ty=Tensor[(13, 10, 2), int8] */;
  (%873, %874, %var_5573)
}

def @func_6981(%var_6976: Tensor[(156), float32]) -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) {
  %875 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %876 = @func_5563() /* ty=(Tensor[(900), float32],) */;
  %877 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %878 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 84), uint32] */, dtype="uint32") /* ty=Tensor[(5, 84), uint32] */;
  %879 = @func_5647() /* ty=float32 */;
  %880 = cast(%879, dtype="float32") /* ty=float32 */;
  %881 = cast(%var_6976, dtype="float32") /* ty=Tensor[(156), float32] */;
  %882 = reshape(%878, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %883 = reshape(%880, newshape=[]) /* ty=float32 */;
  %884 = reshape(%881, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %885 = @func_663(%882, %883, %884) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %886 = @func_3912() /* ty=Tensor[(900), float32] */;
  %887 = %875.2;
  %888 = %876.0;
  %889 = %877.0;
  %890 = %885.5;
  (%886, %879, %887, %888, %889, %890, meta[relay.Constant][41] /* ty=Tensor[(5, 84), uint32] */, %var_6976)
}

def @func_17073(%var_17035: Tensor[(3), uint32]) -> (float32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(4, 36), float64]) {
  %891 = @func_3967() /* ty=(float32,) */;
  %892 = @func_12542() /* ty=(Tensor[(900), float32],) */;
  %893 = cast(meta[relay.Constant][42] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %894 = cast(%var_17035, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %895 = reshape(%893, newshape=[4, 36]) /* ty=Tensor[(4, 36), int64] */;
  %896 = reshape(%894, newshape=[3, 1]) /* ty=Tensor[(3, 1), uint32] */;
  %897 = @func_11766(%895, %896) /* ty=(Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) */;
  %898 = %897.2;
  %899 = cast(meta[relay.Constant][42] /* ty=Tensor[(144), int64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(2), int32] */;
  %901 = cast(%898, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %903 = %891.0;
  %904 = %892.0;
  %905 = floor_divide(%901, %902) /* ty=Tensor[(4, 36), float64] */;
  (%903, %var_17035, %904, %905)
}

def @func_15266(%var_15257: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
  %906 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %907 = cast(%var_15257, dtype="uint32") /* ty=uint32 */;
  %908 = reshape(%907, newshape=[]) /* ty=uint32 */;
  %909 = @func_2667(%908) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */;
  %910 = %906.0;
  %911 = %909.1;
  (%910, %911, %var_15257)
}

def @func_10534(%var_10485: Tensor[(1, 8, 10), float64]) -> (Tensor[(420), uint32], Tensor[(?, 8, 10), bool]) {
  %912 = cast(%var_10485, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
  %913 = cosh(%912) /* ty=Tensor[(1, 8, 10), float64] */;
  %914 = cast(%var_10485, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
  %915 = acosh(%914) /* ty=Tensor[(1, 8, 10), float64] */;
  %916 = cast(%915, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
  %917 = shape_of(%913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%913, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %920 = @func_5483() /* ty=Tensor[(420), uint32] */;
  %921 = logical_and(%918, %919) /* ty=Tensor[(?, 8, 10), bool] */;
  (%920, %921)
}

def @func_5424() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %922 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %923 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %924 = %922.0;
  %925 = %923.0;
  (%924, %925)
}

def @func_5647() -> float32 {
  @func_3307() /* ty=float32 */
}

def @func_16776() -> Tensor[(900), float32] {
  @func_10403() /* ty=Tensor[(900), float32] */
}

def @func_15397(%var_15387: Tensor[(4, 7, 13), bool], %var_15388: Tensor[(4, 7, 13), bool]) -> Tensor[(4, 7, 13), bool] {
  %926 = cast(%var_15388, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
  %927 = shape_of(%var_15387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%var_15387, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%928, %929) /* ty=Tensor[(4, 7, 13), bool] */
}

def @func_9006() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %930 = @func_6354() /* ty=(Tensor[(900), float32],) */;
  %931 = @func_8717() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) */;
  %932 = %930.0;
  %933 = %931.1;
  (%932, %933)
}

def @func_17807(%var_17796: Tensor[(9, 1, 8), float32]) -> (Tensor[(9, 1, 8), float32], Tensor[(900), float32]) {
  %934 = cast(%var_17796, dtype="float32") /* ty=Tensor[(9, 1, 8), float32] */;
  %935 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %936 = exp(%934) /* ty=Tensor[(9, 1, 8), float32] */;
  %937 = %935.0;
  (%936, %937)
}

def @func_6637() -> Tensor[(420), uint32] {
  %938 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %938.0
}

def @func_11846() -> Tensor[(13, 10, 2), float32] {
  %939 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %939.0
}

def @func_4212() -> (Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) {
  %940 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %941 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %942 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %943 = %940.2;
  %944 = %941.0;
  %945 = %942.1;
  (%943, %944, %945)
}

def @func_8077() -> (Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %946 = @func_4035() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %947 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %948 = reshape(%947, newshape=[3, 1, 16]) /* ty=Tensor[(3, 1, 16), float64] */;
  %949 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %950 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %951 = %946.0;
  %952 = @func_7778(%948) /* ty=Tensor[(3, 1, 16), float64] */;
  %953 = @func_4718() /* ty=Tensor[(900), float32] */;
  %954 = %949.0;
  %955 = @func_7709() /* ty=Tensor[(900), float32] */;
  %956 = %950.1;
  (%951, %952, meta[relay.Constant][43] /* ty=Tensor[(48), float64] */, %953, %954, %955, %956)
}

def @func_15893(%var_15863: uint16, %var_15864: Tensor[(4, 4, 12), uint16]) -> (Tensor[(4, 4, 12), uint16], Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
  %957 = cast(%var_15863, dtype="uint16") /* ty=uint16 */;
  %958 = cast(%var_15864, dtype="uint16") /* ty=Tensor[(4, 4, 12), uint16] */;
  %959 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %960 = @func_12542() /* ty=(Tensor[(900), float32],) */;
  %961 = multiply(%957, %958) /* ty=Tensor[(4, 4, 12), uint16] */;
  %962 = %959.0;
  %963 = %960.0;
  (%961, %962, %963)
}

def @func_7549() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %964 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %965 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
  %966 = %964.1;
  (%965, %966)
}

def @func_14042() -> (float32, Tensor[(2496), float64]) {
  %967 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
  %968 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
  %969 = %967.1;
  %970 = %968.1;
  (%969, %970)
}

def @func_9880() -> Tensor[(3, 10, 9), float32] {
  %971 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
  %971.0
}

def @func_6379() -> Tensor[(900), float64] {
  %972 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %973 = %972.0;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(900), float64] */;
  acos(%974) /* ty=Tensor[(900), float64] */
}

def @func_13266() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %975 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %976 = @func_8243() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_16380() -> Tensor[(900), float32] {
  @func_3912() /* ty=Tensor[(900), float32] */
}

def @func_2507() -> (Tensor[(900), float32],) {
  %979 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %980 = %979.0;
  (%980,)
}

def @func_11218() -> (Tensor[(420), uint32],) {
  %981 = @func_9556() /* ty=Tensor[(420), uint32] */;
  (%981,)
}

def @func_12509() -> (Tensor[(16, 12, 13), uint16],) {
  %982 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
  (%982,)
}

def @func_2667(%var_2643: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
  %983 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %984 = cast(%var_2643, dtype="uint32") /* ty=uint32 */;
  %985 = reshape(%984, newshape=[]) /* ty=uint32 */;
  %986 = @func_2604(%985) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
  %987 = %983.1;
  %988 = %986.5;
  (%987, %988, %var_2643)
}

def @func_12542() -> (Tensor[(900), float32],) {
  %989 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %990 = %989.0;
  (%990,)
}

def @func_2233(%var_2224: Tensor[(156), float32]) -> (Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
  %991 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %992 = cast(-7.5856f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %993 = cast(%var_2224, dtype="float32") /* ty=Tensor[(156), float32] */;
  %994 = reshape(%992, newshape=[]) /* ty=float32 */;
  %995 = reshape(%993, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %996 = @func_333(%994, %995) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %997 = %991.0;
  %998 = %996.0;
  (%997, %998, -7.5856f /* ty=float32 */, %var_2224)
}

def @func_3795() -> (Tensor[(13, 10, 2), float64],) {
  %999 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  (%999,)
}

def @func_5714() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %1000 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1001 = %1000.0;
  %1002 = @func_4995() /* ty=Tensor[(900), float32] */;
  (%1001, %1002)
}

def @func_3498() -> (Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) {
  %1003 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %1004 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1005 = reshape(%1004, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %1006 = @func_3105(%1005) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %1007 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1008 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1009 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %1010 = %1003.0;
  %1011 = %1006.0;
  %1012 = %1007.0;
  %1013 = %1008.0;
  %1014 = %1009.0;
  %1015 = @func_3307() /* ty=float32 */;
  (%1010, %1011, meta[relay.Constant][44] /* ty=Tensor[(720), float64] */, %1012, %1013, %1014, %1015)
}

def @func_7094() -> (Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) {
  %1016 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1017 = cast(meta[relay.Constant][45] /* ty=Tensor[(2496), float64] */, dtype="float64") /* ty=Tensor[(2496), float64] */;
  %1018 = reshape(%1017, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
  %1019 = @func_5543(%1018) /* ty=(Tensor[(16, 12, 13), uint16],) */;
  %1020 = %1016.1;
  %1021 = %1019.0;
  (%1020, %1021, meta[relay.Constant][45] /* ty=Tensor[(2496), float64] */)
}

def @func_6131() -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) {
  %1022 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %1023 = %1022.0;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %1025 = reshape(%1024, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1026 = @func_2836(%1025) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %1027 = %1026.1;
  (%1023, %1027)
}

def @func_11329() -> Tensor[(15, 5, 12), int64] {
  %1028 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
  %1028.1
}

def @func_13462(%var_13458: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(260), float64]) {
  %1029 = @func_5714() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1030 = cast(meta[relay.Constant][46] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1031 = cast(%var_13458, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1032 = reshape(%1030, newshape=[18, 36]) /* ty=Tensor[(18, 36), float64] */;
  %1033 = reshape(%1031, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1034 = @func_2985(%1032, %1033) /* ty=(Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) */;
  %1035 = %1029.1;
  %1036 = %1034.0;
  (%1035, %1036, meta[relay.Constant][46] /* ty=Tensor[(648), float64] */, %var_13458)
}

def @func_2517(%var_2514: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
  %1037 = cast(%var_2514, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
  %1038 = log2(%1037) /* ty=Tensor[(6, 12, 9), float64] */;
  (%1038,)
}

def @func_3685() -> (Tensor[(420), uint32],) {
  %1039 = @func_3527() /* ty=Tensor[(420), uint32] */;
  (%1039,)
}

def @func_13979(%var_13968: Tensor[(1, 8, 1), int32], %var_13969: Tensor[(5, 8, 2), int32]) -> Tensor[(5, 8, 2), int32] {
  %1040 = cast(%var_13968, dtype="int32") /* ty=Tensor[(1, 8, 1), int32] */;
  %1041 = cast(%var_13969, dtype="int32") /* ty=Tensor[(5, 8, 2), int32] */;
  right_shift(%1040, %1041) /* ty=Tensor[(5, 8, 2), int32] */
}

def @func_17106() -> (Tensor[(900), float32],) {
  %1042 = @func_16142() /* ty=Tensor[(900), float32] */;
  (%1042,)
}

def @func_8545(%var_8519: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
  %1043 = @func_7171() /* ty=(Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) */;
  %1044 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
  %1045 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %1046 = cast(%1045, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %1047 = reshape(%1046, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1048 = @func_2836(%1047) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %1049 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %1050 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1051 = cast(%var_8519, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1052 = reshape(%1050, newshape=[]) /* ty=uint16 */;
  %1053 = reshape(%1051, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1054 = @func_4312(%1052, %1053) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
  %1055 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %1056 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1057 = %1056.0;
  %1058 = cast(%1057, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %1059 = reshape(%1058, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
  %1060 = @func_1350(%1059) /* ty=Tensor[(15, 5, 12), float32] */;
  %1061 = cast(%1057, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1065 = logical_or(%1063, %1064) /* ty=Tensor[(15, 5, 12), bool] */;
  %1066 = cast(%1060, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %1067 = shape_of(%1065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%1065, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1070 = %1043.0;
  %1071 = %1044.0;
  %1072 = %1048.1;
  %1073 = %1049.2;
  %1074 = %1054.5;
  %1075 = @func_4718() /* ty=Tensor[(900), float32] */;
  %1076 = @func_5647() /* ty=float32 */;
  %1077 = %1055.0;
  %1078 = power(%1068, %1069) /* ty=Tensor[(15, 5, 12), float64] */;
  (%1070, %1071, %1045, %1072, %1073, %1074, meta[relay.Constant][47] /* ty=uint16 */, %var_8519, %1075, %1076, %1077, %1078)
}

def @func_15962() -> (Tensor[(15, 5, 12), float32], float32) {
  %1079 = @func_13477() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1080 = %1079.0;
  %1081 = @func_8903() /* ty=float32 */;
  (%1080, %1081)
}

def @func_17841() -> (Tensor[(420), uint32],) {
  %1082 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_3063() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) {
  %1084 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
  %1085 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %1087 = %1084.0;
  %1088 = @func_2924() /* ty=Tensor[(900), float32] */;
  %1089 = log(%1086) /* ty=Tensor[(13, 10, 2), float32] */;
  (%1087, %1088, %1089)
}

def @func_11059() -> Tensor[(900), float32] {
  @func_9693() /* ty=Tensor[(900), float32] */
}

def @func_3307() -> float32 {
  %1090 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %1090.1
}

def @func_13388() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32], float32) {
  %1091 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %1092 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %1093 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %1094 = @func_3967() /* ty=(float32,) */;
  %1095 = %1091.0;
  %1096 = %1092.0;
  %1097 = %1093.0;
  %1098 = %1094.0;
  (%1095, %1096, %1097, %1098)
}

def @func_12124() -> (Tensor[(900), float32],) {
  %1099 = @func_7709() /* ty=Tensor[(900), float32] */;
  (%1099,)
}

def @func_4954() -> (Tensor[(900), float32],) {
  %1100 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %1101 = %1100.5;
  (%1101,)
}

def @func_6802(%var_6774: Tensor[(2, 72), int64], %var_6793: Tensor[(1, 3), uint32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) {
  %1102 = cast(%var_6774, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %1103 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 2028), float64] */, dtype="float64") /* ty=Tensor[(1, 2028), float64] */;
  %1104 = reshape(%1102, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %1105 = reshape(%1103, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1106 = @func_6486(%1104, %1105) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
  %1107 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %1108 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
  %1109 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1110 = cast(%var_6793, dtype="uint32") /* ty=Tensor[(1, 3), uint32] */;
  %1111 = reshape(%1109, newshape=[]) /* ty=uint32 */;
  %1112 = reshape(%1110, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %1113 = @func_5211() /* ty=Tensor[(900), float32] */;
  %1114 = %1106.0;
  %1115 = %1107.0;
  %1116 = %1108.0;
  %1117 = @func_732(%1111, %1112) /* ty=Tensor[(1, 3), bool] */;
  %1118 = @func_2924() /* ty=Tensor[(900), float32] */;
  %1119 = @func_5483() /* ty=Tensor[(420), uint32] */;
  (%1113, %1114, %var_6774, meta[relay.Constant][48] /* ty=Tensor[(1, 2028), float64] */, %1115, %1116, %1117, meta[relay.Constant][49] /* ty=uint32 */, %var_6793, %1118, %1119)
}

def @func_12449() -> (Tensor[(900), float32], Tensor[(420), uint32]) {
  %1120 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %1121 = %1120.1;
  %1122 = @func_3527() /* ty=Tensor[(420), uint32] */;
  (%1121, %1122)
}

def @func_11709(%var_11685: Tensor[(648), float64], %var_11700: Tensor[(156), float32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) {
  %1123 = @func_7344() /* ty=(Tensor[(420), uint32],) */;
  %1124 = cast(%var_11685, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1125 = cast(meta[relay.Constant][50] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %1126 = reshape(%1124, newshape=[18, 36]) /* ty=Tensor[(18, 36), float64] */;
  %1127 = reshape(%1125, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1128 = @func_2985(%1126, %1127) /* ty=(Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) */;
  %1129 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1130 = cast(%var_11700, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1131 = reshape(%1130, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1132 = @func_2233(%1131) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %1133 = @func_7887() /* ty=Tensor[(900), float32] */;
  %1134 = @func_4718() /* ty=Tensor[(900), float32] */;
  %1135 = %1123.0;
  %1136 = %1128.5;
  %1137 = %1129.1;
  %1138 = %1132.2;
  (%1133, %1134, %1135, %1136, %var_11685, meta[relay.Constant][50] /* ty=Tensor[(130, 2), float64] */, %1137, %1138, %var_11700)
}

def @func_5760() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %1139 = @func_5563() /* ty=(Tensor[(900), float32],) */;
  %1140 = @func_4718() /* ty=Tensor[(900), float32] */;
  %1141 = %1139.0;
  (%1140, %1141)
}

def @func_6567() -> (Tensor[(13, 10, 2), float64],) {
  %1142 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_4784() -> (Tensor[(16, 9, 12), float32], Tensor[(900), float32]) {
  %1144 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %1145 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1146 = %1144.2;
  %1147 = %1145.1;
  (%1146, %1147)
}

def @func_14235() -> (Tensor[(900), float32],) {
  %1148 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_12063() -> (Tensor[(15, 5, 12), int64], float32) {
  %1150 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %1151 = @func_10235() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %1152 = %1150.0;
  %1153 = %1151.3;
  (%1152, %1153)
}

def @func_4437(%var_4354: Tensor[(6, 8, 3), int64], %var_4355: Tensor[(6, 8, 3), int64], %var_4370: float32, %var_4420: Tensor[(13, 156), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) {
  %1154 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1155 = %1154.0;
  %1156 = cast(%1155, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1157 = cast(%var_4370, dtype="float32") /* ty=float32 */;
  %1158 = cast(meta[relay.Constant][51] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1159 = reshape(%1156, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %1160 = reshape(%1157, newshape=[]) /* ty=float32 */;
  %1161 = reshape(%1158, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %1162 = @func_663(%1159, %1160, %1161) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %1163 = %1162.3;
  %1164 = cast(%1163, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %1165 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %1166 = reshape(%1165, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %1167 = @func_3105(%1166) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %1168 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %1169 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %1170 = reshape(%1169, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %1171 = @func_3105(%1170) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %1172 = cast(%var_4355, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %1173 = shape_of(%var_4354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1174 = cast(%var_4354, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1176 = less(%1174, %1175) /* ty=Tensor[(6, 8, 3), bool] */;
  %1177 = cast(%1176, dtype="int16") /* ty=Tensor[(6, 8, 3), int16] */;
  %1178 = cast(%var_4370, dtype="int16") /* ty=int16 */;
  %1179 = @func_3634() /* ty=(Tensor[(900), float32],) */;
  %1180 = cast(%1163, dtype="float64") /* ty=Tensor[(1, 156), float64] */;
  %1181 = erf(%1180) /* ty=Tensor[(1, 156), float64] */;
  %1182 = cast(%1181, dtype="bool") /* ty=Tensor[(1, 156), bool] */;
  %1183 = cast(%var_4420, dtype="bool") /* ty=Tensor[(13, 156), bool] */;
  %1184 = equal(%1182, %1183) /* ty=Tensor[(13, 156), bool] */;
  %1185 = cast(%1181, dtype="int32") /* ty=Tensor[(1, 156), int32] */;
  %1186 = cast(%1184, dtype="int32") /* ty=Tensor[(13, 156), int32] */;
  %1187 = atan(%1164) /* ty=Tensor[(1, 156), float32] */;
  %1188 = %1167.5;
  %1189 = sinh(%1168) /* ty=Tensor[(4, 180), float64] */;
  %1190 = %1171.1;
  %1191 = logical_xor(%1177, %1178) /* ty=Tensor[(6, 8, 3), int16] */;
  %1192 = %1179.0;
  %1193 = @func_3307() /* ty=float32 */;
  %1194 = subtract(%1185, %1186) /* ty=Tensor[(13, 156), int32] */;
  (%1155, meta[relay.Constant][51] /* ty=Tensor[(156), float32] */, %1187, %1188, %1189, %1190, %1191, %1192, %1193, %1194)
}

def @func_2784(%var_2774: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), int8] {
  %1195 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %1196 = cast(%var_2774, dtype="int8") /* ty=Tensor[(13, 10, 2), int8] */;
  %1197 = shape_of(%1195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1198 = cast(%1195, dtype="int8") /* ty=Tensor[(13, 10, 2), int8] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%1198, %1199) /* ty=Tensor[(13, 10, 2), int8] */
}

def @func_14530() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %1200 = @func_9858() /* ty=(Tensor[(900), float32],) */;
  %1201 = %1200.0;
  %1202 = @func_6687() /* ty=Tensor[(900), float32] */;
  (%1201, %1202)
}

def @func_9525(%var_9416: Tensor[(6, 10, 11), float64], %var_9433: Tensor[(16, 9, 12), float32]) -> (Tensor[(6, 10, 11), float64], Tensor[(420), uint32], Tensor[(16, 9, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float64]) {
  %1203 = cast(%var_9416, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %1204 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %1205 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %1206 = %1205.0;
  %1207 = cast(%var_9433, dtype="bool") /* ty=Tensor[(16, 9, 12), bool] */;
  %1208 = shape_of(%1206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1209 = cast(%1206, dtype="bool") /* ty=Tensor[(16, 9, 12), bool] */;
  %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1211 = logical_and(%1209, %1210) /* ty=Tensor[(16, 9, 12), bool] */;
  %1212 = cast(%1211, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %1213 = exp(%1212) /* ty=Tensor[(16, 9, 12), float64] */;
  %1214 = cast(meta[relay.Constant][53] /* ty=Tensor[(16, 9, 12), float64] */, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1218 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1219 = cast(%1213, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %1220 = tan(%1203) /* ty=Tensor[(6, 10, 11), float64] */;
  %1221 = %1204.0;
  %1222 = divide(%1216, %1217) /* ty=Tensor[(16, 9, 12), float32] */;
  %1223 = %1218.0;
  %1224 = tan(%1219) /* ty=Tensor[(16, 9, 12), float64] */;
  (%1220, %1221, %1222, %1223, %1224)
}

def @func_16142() -> Tensor[(900), float32] {
  %1225 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1225.1
}

def @func_16943() -> Tensor[(900), float32] {
  %1226 = @func_14931() /* ty=(Tensor[(900), float32],) */;
  %1226.0
}

def @func_16198() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) {
  %1227 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %1228 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1229 = cast(meta[relay.Constant][54] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %1230 = cast(meta[relay.Constant][54] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %1231 = reshape(%1229, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), int16] */;
  %1232 = reshape(%1230, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), int16] */;
  %1233 = @func_11118(%1231, %1232) /* ty=(Tensor[(16, 7, 10), int16],) */;
  %1234 = %1233.0;
  %1235 = cast(meta[relay.Constant][54] /* ty=Tensor[(1120), int16] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1236 = shape_of(%1234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1237 = cast(%1234, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %1238 = dyn.reshape(%1235, %1236, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1239 = %1227.1;
  %1240 = %1228.1;
  %1241 = floor_divide(%1237, %1238) /* ty=Tensor[(16, 7, 10), float32] */;
  (%1239, %1240, %1241)
}

def @func_9751(%var_9738: float32, %var_9742: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32], Tensor[(156), float32], Tensor[(2028), float64]) {
  %1242 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %1243 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1244 = cast(%var_9738, dtype="float32") /* ty=float32 */;
  %1245 = cast(meta[relay.Constant][56] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1246 = reshape(%1243, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %1247 = reshape(%1244, newshape=[]) /* ty=float32 */;
  %1248 = reshape(%1245, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %1249 = @func_663(%1246, %1247, %1248) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %1250 = cast(%var_9742, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1251 = reshape(%1250, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1252 = @func_8197(%1251) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %1253 = %1242.4;
  %1254 = %1249.3;
  %1255 = %1252.5;
  (%1253, %1254, meta[relay.Constant][55] /* ty=Tensor[(420), uint32] */, %var_9738, meta[relay.Constant][56] /* ty=Tensor[(156), float32] */, %1255, %var_9742)
}

def @func_16277() -> (Tensor[(260), float64],) {
  %1256 = @func_7517() /* ty=(float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) */;
  %1257 = %1256.2;
  (%1257,)
}

def @func_17613() -> (Tensor[(15, 5, 12), float32],) {
  %1258 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1259 = %1258.0;
  (%1259,)
}

def @func_10150(%var_10092: Tensor[(9, 15, 2), float64]) -> (Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
  %1260 = cast(%var_10092, dtype="float64") /* ty=Tensor[(9, 15, 2), float64] */;
  %1261 = cast(meta[relay.Constant][57] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1262 = reshape(%1261, newshape=[420]) /* ty=Tensor[(420), uint32] */;
  %1263 = @func_2098(%1262) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
  %1264 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1265 = rsqrt(%1260) /* ty=Tensor[(9, 15, 2), float64] */;
  %1266 = %1263.2;
  %1267 = %1264.1;
  %1268 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
  %1269 = @func_7945() /* ty=Tensor[(900), float32] */;
  (%1265, %1266, meta[relay.Constant][57] /* ty=Tensor[(420), uint32] */, %1267, %1268, %1269)
}

def @func_16471() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %1270 = @func_16198() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) */;
  %1271 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_17876() -> (Tensor[(420), uint32], Tensor[(13, 10, 2), float64]) {
  %1273 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1274 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1275 = %1273.0;
  %1276 = %1274.0;
  (%1275, %1276)
}

def @func_2530() -> (Tensor[(15, 5, 12), float32],) {
  %1277 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %1278 = %1277.0;
  (%1278,)
}

def @func_9616() -> (Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) {
  %1279 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
  %1280 = cast(meta[relay.Constant][58] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %1281 = reshape(%1280, newshape=[8, 7, 7]) /* ty=Tensor[(8, 7, 7), float64] */;
  %1282 = %1279.1;
  %1283 = @func_8562(%1281) /* ty=Tensor[(8, 7, 7), float64] */;
  (%1282, %1283, meta[relay.Constant][58] /* ty=Tensor[(392), float64] */)
}

def @func_14902() -> Tensor[(900), float32] {
  %1284 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1284.0
}

def @func_17302() -> Tensor[(900), float32] {
  %1285 = @func_6022() /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) */;
  %1285.2
}

def @func_732(%var_717: uint32, %var_718: Tensor[(1, 3), uint32]) -> Tensor[(1, 3), bool] {
  %1286 = cast(%var_717, dtype="bool") /* ty=bool */;
  %1287 = cast(%var_718, dtype="bool") /* ty=Tensor[(1, 3), bool] */;
  equal(%1286, %1287) /* ty=Tensor[(1, 3), bool] */
}

def @func_9039(%var_9023: Tensor[(14, 6, 6), float64]) -> (Tensor[(14, 6, 6), float64],) {
  %1288 = cast(%var_9023, dtype="float64") /* ty=Tensor[(14, 6, 6), float64] */;
  %1289 = log2(%1288) /* ty=Tensor[(14, 6, 6), float64] */;
  (%1289,)
}

def @func_5483() -> Tensor[(420), uint32] {
  @func_4667() /* ty=Tensor[(420), uint32] */
}

def @func_10576() -> Tensor[(900), float32] {
  %1290 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %1290.0
}

def @func_15089() -> (Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) {
  %1291 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
  %1292 = %1291.0;
  %1293 = @func_8664() /* ty=Tensor[(420), uint32] */;
  (%1292, %1293)
}

def @func_7778(%var_7774: Tensor[(3, 1, 16), float64]) -> Tensor[(3, 1, 16), float64] {
  %1294 = cast(3.30804f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1295 = cast(%var_7774, dtype="float64") /* ty=Tensor[(3, 1, 16), float64] */;
  mod(%1294, %1295) /* ty=Tensor[(3, 1, 16), float64] */
}

def @func_7028(%var_7014: int64, %var_7015: Tensor[(14, 9, 15), int64]) -> (Tensor[(14, 9, 15), bool], Tensor[(420), uint32], Tensor[(900), float32]) {
  %1296 = cast(%var_7014, dtype="bool") /* ty=bool */;
  %1297 = cast(%var_7015, dtype="bool") /* ty=Tensor[(14, 9, 15), bool] */;
  %1298 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1299 = @func_4954() /* ty=(Tensor[(900), float32],) */;
  %1300 = not_equal(%1296, %1297) /* ty=Tensor[(14, 9, 15), bool] */;
  %1301 = %1298.0;
  %1302 = %1299.0;
  (%1300, %1301, %1302)
}

def @func_14813(%var_14780: Tensor[(156), float32], %var_14789: Tensor[(3), uint32]) -> (Tensor[(15, 5, 12), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(156), float32], Tensor[(156), float32], Tensor[(1, 3), bool], Tensor[(3), uint32], float32, Tensor[(4, 4), float32], Tensor[(16), float32]) {
  %1303 = @func_9803() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */;
  %1304 = cast(meta[relay.Constant][59] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1305 = reshape(%1304, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1306 = @func_2836(%1305) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %1307 = cast(%var_14780, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1308 = reshape(%1307, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1309 = @func_6981(%1308) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %1310 = @func_5647() /* ty=float32 */;
  %1311 = cast(%1310, dtype="uint32") /* ty=uint32 */;
  %1312 = cast(%var_14789, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %1313 = reshape(%1311, newshape=[]) /* ty=uint32 */;
  %1314 = reshape(%1312, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %1315 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %1316 = cast(meta[relay.Constant][60] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %1317 = reshape(%1316, newshape=[4, 4]) /* ty=Tensor[(4, 4), float32] */;
  %1318 = @func_14474(%1317) /* ty=(Tensor[(4, 4), float32], Tensor[(900), float32]) */;
  %1319 = %1303.0;
  %1320 = @func_14056() /* ty=Tensor[(900), float32] */;
  %1321 = %1306.0;
  %1322 = %1309.7;
  %1323 = @func_732(%1313, %1314) /* ty=Tensor[(1, 3), bool] */;
  %1324 = %1315.1;
  %1325 = %1318.0;
  (%1319, %1310, %1320, %1321, meta[relay.Constant][59] /* ty=Tensor[(260), float64] */, %1322, %var_14780, %1323, %var_14789, %1324, %1325, meta[relay.Constant][60] /* ty=Tensor[(16), float32] */)
}

def @func_17481() -> (Tensor[(13, 10, 2), float32],) {
  %1326 = @func_14826() /* ty=Tensor[(13, 10, 2), float32] */;
  (%1326,)
}

def @func_3228() -> (Tensor[(13, 10, 2), float32],) {
  %1327 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1328 = %1327.2;
  (%1328,)
}

def @func_14312() -> Tensor[(15, 5, 12), float32] {
  %1329 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1329.0
}

def @func_7307() -> Tensor[(13, 10, 2), float64] {
  %1330 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %1330.1
}

def @func_10019() -> (Tensor[(13, 10, 2), float32],) {
  %1331 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %1332 = %1331.0;
  (%1332,)
}

def @func_10636() -> (Tensor[(900), float32],) {
  %1333 = @func_6022() /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) */;
  %1334 = %1333.0;
  (%1334,)
}

def @func_12105() -> (Tensor[(13, 10, 2), float64],) {
  %1335 = @func_7307() /* ty=Tensor[(13, 10, 2), float64] */;
  (%1335,)
}

def @func_3912() -> Tensor[(900), float32] {
  %1336 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1336.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8547(%var_8546: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
  %36 = fn (%var_8519: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
    %0 = @func_7171() /* ty=(Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) */;
    %1 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
    %2 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    %3 = cast(%2, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
    %4 = reshape(%3, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %5 = @func_2836(%4) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
    %6 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %7 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %8 = cast(%var_8519, dtype="float64") /* ty=Tensor[(720), float64] */;
    %9 = reshape(%7, newshape=[]) /* ty=uint16 */;
    %10 = reshape(%8, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %11 = @func_4312(%9, %10) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
    %12 = @func_3271() /* ty=(Tensor[(900), float32],) */;
    %13 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %14 = %13.0;
    %15 = cast(%14, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
    %16 = reshape(%15, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
    %17 = @func_1350(%16) /* ty=Tensor[(15, 5, 12), float32] */;
    %18 = cast(%14, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
    %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(%17, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %22 = logical_or(%20, %21) /* ty=Tensor[(15, 5, 12), bool] */;
    %23 = cast(%17, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
    %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(%22, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %27 = %0.0;
    %28 = %1.0;
    %29 = %5.1;
    %30 = %6.2;
    %31 = %11.5;
    %32 = @func_4718() /* ty=Tensor[(900), float32] */;
    %33 = @func_5647() /* ty=float32 */;
    %34 = %12.0;
    %35 = power(%25, %26) /* ty=Tensor[(15, 5, 12), float64] */;
    (%27, %28, %2, %29, %30, %31, meta[relay.Constant][0] /* ty=uint16 */, %var_8519, %32, %33, %34, %35)
  };
  %36(%var_8546) /* ty=(Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */
}

def @func_14409() -> Tensor[(900), float32] {
  %37 = @func_13298() /* ty=(Tensor[(900), float32],) */;
  %37.0
}

def @func_10800(%var_10799: Tensor[(2028), float64]) -> (Tensor[(420), uint32], Tensor[(3, 15, 6), float64], float32, Tensor[(900), float32], float32, Tensor[(144), int64], Tensor[(2028), float64]) {
  %53 = fn (%var_10794: Tensor[(2028), float64]) -> (Tensor[(420), uint32], Tensor[(3, 15, 6), float64], float32, Tensor[(900), float32], float32, Tensor[(144), int64], Tensor[(2028), float64]) {
    %38 = cast(1.93925f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %39 = reshape(%38, newshape=[]) /* ty=float32 */;
    %40 = @func_525(%39) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
    %41 = %40.0;
    %42 = cast(%41, dtype="float64") /* ty=Tensor[(3, 15, 6), float64] */;
    %43 = reshape(%42, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float64] */;
    %44 = @func_10150(%43) /* ty=(Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */;
    %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %46 = cast(%var_10794, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %47 = reshape(%45, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %48 = reshape(%46, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %49 = @func_6486(%47, %48) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
    %50 = @func_5483() /* ty=Tensor[(420), uint32] */;
    %51 = %44.3;
    %52 = %49.3;
    (%50, %41, 1.93925f /* ty=float32 */, %51, %52, meta[relay.Constant][1] /* ty=Tensor[(144), int64] */, %var_10794)
  };
  %53(%var_10799) /* ty=(Tensor[(420), uint32], Tensor[(3, 15, 6), float64], float32, Tensor[(900), float32], float32, Tensor[(144), int64], Tensor[(2028), float64]) */
}

def @func_3969() -> (float32,) {
  @func_3967() /* ty=(float32,) */
}

def @func_12544() -> (Tensor[(900), float32],) {
  @func_12542() /* ty=(Tensor[(900), float32],) */
}

def @func_16562() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_16560() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_15358() -> Tensor[(900), float32] {
  @func_2924() /* ty=Tensor[(900), float32] */
}

def @func_13267() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %58 = fn () -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
    %54 = @func_2507() /* ty=(Tensor[(900), float32],) */;
    %55 = @func_8243() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) */;
    %56 = %54.0;
    %57 = %55.0;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_6984(%var_6982: Tensor[(156), float32]) -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) {
  @func_6981(%var_6982) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */
}

def @func_2532() -> (Tensor[(15, 5, 12), float32],) {
  @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */
}

def @func_4499() -> Tensor[(13, 10, 2), float64] {
  %60 = fn () -> Tensor[(13, 10, 2), float64] {
    %59 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
    %59.0
  };
  %60() /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_4853() -> (Tensor[(900), float32],) {
  %61 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
  %62 = %61.1;
  (%62,)
}

def @func_7308() -> Tensor[(13, 10, 2), float64] {
  %64 = fn () -> Tensor[(13, 10, 2), float64] {
    %63 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %63.1
  };
  %64() /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_9667(%var_9662: float32) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32]) {
  %65 = @func_6354() /* ty=(Tensor[(900), float32],) */;
  %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %67 = cast(%var_9662, dtype="float32") /* ty=float32 */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %69 = reshape(%66, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %70 = reshape(%67, newshape=[]) /* ty=float32 */;
  %71 = reshape(%68, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %72 = @func_663(%69, %70, %71) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %73 = %65.0;
  %74 = %72.3;
  (%73, %74, meta[relay.Constant][2] /* ty=Tensor[(420), uint32] */, %var_9662, meta[relay.Constant][3] /* ty=Tensor[(156), float32] */)
}

def @func_4954() -> (Tensor[(900), float32],) {
  %75 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %76 = %75.5;
  (%76,)
}

def @func_10152(%var_10151: Tensor[(9, 15, 2), float64]) -> (Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
  %87 = fn (%var_10092: Tensor[(9, 15, 2), float64]) -> (Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
    %77 = cast(%var_10092, dtype="float64") /* ty=Tensor[(9, 15, 2), float64] */;
    %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %79 = reshape(%78, newshape=[420]) /* ty=Tensor[(420), uint32] */;
    %80 = @func_2098(%79) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
    %81 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
    %82 = rsqrt(%77) /* ty=Tensor[(9, 15, 2), float64] */;
    %83 = %80.2;
    %84 = %81.1;
    %85 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
    %86 = @func_7945() /* ty=Tensor[(900), float32] */;
    (%82, %83, meta[relay.Constant][4] /* ty=Tensor[(420), uint32] */, %84, %85, %86)
  };
  %87(%var_10151) /* ty=(Tensor[(9, 15, 2), float64], float32, Tensor[(420), uint32], Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */
}

def @func_15360() -> Tensor[(900), float32] {
  @func_15358() /* ty=Tensor[(900), float32] */
}

def @func_14474(%var_14446: Tensor[(4, 4), float32]) -> (Tensor[(4, 4), float32], Tensor[(900), float32]) {
  %88 = cast(%var_14446, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %89 = exp(%88) /* ty=Tensor[(4, 4), float32] */;
  %90 = @func_10403() /* ty=Tensor[(900), float32] */;
  (%89, %90)
}

def @func_6022() -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) {
  %91 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %92 = @func_5714() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %93 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %94 = %93.0;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %96 = exp(%95) /* ty=Tensor[(15, 5, 12), float32] */;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %98 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %99 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %100 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %101 = %91.0;
  %102 = @func_5647() /* ty=float32 */;
  %103 = %92.0;
  %104 = atanh(%97) /* ty=Tensor[(15, 5, 12), float64] */;
  %105 = %98.0;
  %106 = %99.0;
  %107 = %100.3;
  (%101, %102, %103, %104, %105, %106, %107)
}

def @func_9557() -> Tensor[(420), uint32] {
  %109 = fn () -> Tensor[(420), uint32] {
    %108 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %108.0
  };
  %109() /* ty=Tensor[(420), uint32] */
}

def @func_7945() -> Tensor[(900), float32] {
  %110 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %110.2
}

def @func_7344() -> (Tensor[(420), uint32],) {
  %111 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
  %112 = %111.0;
  (%112,)
}

def @func_15269(%var_15267: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
  @func_15266(%var_15267) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */
}

def @func_11518(%var_11502: uint16, %var_11503: Tensor[(60, 12), float64]) -> (Tensor[(900), float32], Tensor[(720), float64], Tensor[(60, 12), float64]) {
  %113 = @func_10833() /* ty=(Tensor[(900), float32],) */;
  %114 = cast(%var_11502, dtype="uint16") /* ty=uint16 */;
  %115 = cast(%var_11503, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %116 = reshape(%114, newshape=[]) /* ty=uint16 */;
  %117 = reshape(%115, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %118 = @func_4312(%116, %117) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
  %119 = cast(%var_11502, dtype="float64") /* ty=float64 */;
  %120 = cast(%var_11503, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %121 = %113.0;
  %122 = %118.2;
  %123 = floor_divide(%119, %120) /* ty=Tensor[(60, 12), float64] */;
  (%121, %122, %123)
}

def @func_16127() -> Tensor[(13, 10, 2), float64] {
  %125 = fn () -> Tensor[(13, 10, 2), float64] {
    %124 = @func_12972() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) */;
    %124.1
  };
  %125() /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_6508() -> Tensor[(15, 5, 12), float32] {
  %126 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %126.0
}

def @func_4758() -> (float32, Tensor[(900), float32], Tensor[(420), uint32]) {
  @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */
}

def @func_13117() -> Tensor[(900), float32] {
  @func_13115() /* ty=Tensor[(900), float32] */
}

def @func_6380() -> Tensor[(900), float64] {
  %130 = fn () -> Tensor[(900), float64] {
    %127 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %128 = %127.0;
    %129 = cast(%128, dtype="float64") /* ty=Tensor[(900), float64] */;
    acos(%129) /* ty=Tensor[(900), float64] */
  };
  %130() /* ty=Tensor[(900), float64] */
}

def @func_8885() -> (Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) {
  %131 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %132 = rsqrt(%131) /* ty=Tensor[(2, 13, 11), float64] */;
  %133 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %137 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %138 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %139 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %140 = log(%139) /* ty=Tensor[(2, 13, 11), float64] */;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %142 = divide(%135, %136) /* ty=Tensor[(2, 13, 11), float64] */;
  %143 = %137.0;
  %144 = %138.2;
  %145 = acos(%141) /* ty=Tensor[(2, 13, 11), float32] */;
  (%142, %143, %144, %145)
}

def @func_13756(%var_13747: Tensor[(13, 13, 1), uint64], %var_13748: Tensor[(13, 13, 9), uint64]) -> (Tensor[(13, 13, 9), uint64],) {
  %146 = cast(%var_13747, dtype="uint64") /* ty=Tensor[(13, 13, 1), uint64] */;
  %147 = cast(%var_13748, dtype="uint64") /* ty=Tensor[(13, 13, 9), uint64] */;
  %148 = minimum(%146, %147) /* ty=Tensor[(13, 13, 9), uint64] */;
  (%148,)
}

def @func_11535() -> (Tensor[(2496), float64],) {
  @func_11533() /* ty=(Tensor[(2496), float64],) */
}

def @func_17482() -> (Tensor[(13, 10, 2), float32],) {
  %150 = fn () -> (Tensor[(13, 10, 2), float32],) {
    %149 = @func_14826() /* ty=Tensor[(13, 10, 2), float32] */;
    (%149,)
  };
  %150() /* ty=(Tensor[(13, 10, 2), float32],) */
}

def @func_6319() -> Tensor[(15, 5, 12), float32] {
  @func_6317() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_3500() -> (Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) {
  @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */
}

def @func_9042(%var_9040: Tensor[(14, 6, 6), float64]) -> (Tensor[(14, 6, 6), float64],) {
  @func_9039(%var_9040) /* ty=(Tensor[(14, 6, 6), float64],) */
}

def @func_3763() -> (Tensor[(900), float32],) {
  %153 = fn () -> (Tensor[(900), float32],) {
    %151 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
    %152 = %151.1;
    (%152,)
  };
  %153() /* ty=(Tensor[(900), float32],) */
}

def @func_10074(%var_10073: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(648), float64], float32) {
  %164 = fn (%var_10065: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(648), float64], float32) {
    %154 = @func_8717() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) */;
    %155 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %156 = cast(%var_10065, dtype="float64") /* ty=Tensor[(648), float64] */;
    %157 = reshape(%156, newshape=[648]) /* ty=Tensor[(648), float64] */;
    %158 = @func_9164(%157) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) */;
    %159 = @func_3967() /* ty=(float32,) */;
    %160 = %154.1;
    %161 = %155.1;
    %162 = %158.0;
    %163 = %159.0;
    (%160, %161, %162, %var_10065, %163)
  };
  %164(%var_10073) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(648), float64], float32) */
}

def @func_2742() -> Tensor[(13, 10, 2), float64] {
  @func_2740() /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_6133() -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) {
  @func_6131() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) */
}

def @func_8079() -> (Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  @func_8077() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_15179(%var_15177: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), float32] {
  @func_15176(%var_15177) /* ty=Tensor[(13, 10, 2), float32] */
}

def @func_17876() -> (Tensor[(420), uint32], Tensor[(13, 10, 2), float64]) {
  %165 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %166 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %167 = %165.0;
  %168 = %166.0;
  (%167, %168)
}

def @func_16560() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %169 = @func_4954() /* ty=(Tensor[(900), float32],) */;
  %170 = %169.0;
  %171 = @func_16394() /* ty=Tensor[(900), float32] */;
  (%170, %171)
}

def @func_6486(%var_6456: Tensor[(144), int64], %var_6458: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) {
  %172 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %173 = cast(%var_6456, dtype="int64") /* ty=Tensor[(144), int64] */;
  %174 = cast(%var_6456, dtype="int64") /* ty=Tensor[(144), int64] */;
  %175 = cast(8.88414f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %176 = cast(%var_6458, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %177 = reshape(%173, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %178 = reshape(%174, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
  %179 = reshape(%175, newshape=[]) /* ty=float32 */;
  %180 = reshape(%176, newshape=[13, 156]) /* ty=Tensor[(13, 156), float64] */;
  %181 = @func_4437(%177, %178, %179, %180) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) */;
  %182 = %172.1;
  %183 = %181.0;
  (%182, %183, %var_6456, 8.88414f /* ty=float32 */, %var_6458)
}

def @func_2100(%var_2099: Tensor[(420), uint32]) -> (Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) {
  %197 = fn (%var_2090: Tensor[(420), uint32]) -> (Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) {
    %184 = @func_2013() /* ty=(Tensor[(900), float32],) */;
    %185 = cast(%var_2090, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %186 = cast(-4.12581f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %187 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 52), float32] */, dtype="float32") /* ty=Tensor[(3, 52), float32] */;
    %188 = reshape(%185, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %189 = reshape(%186, newshape=[]) /* ty=float32 */;
    %190 = reshape(%187, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %191 = @func_663(%188, %189, %190) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
    %192 = %191.7;
    %193 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 52), float32] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
    %194 = cast(%192, dtype="float64") /* ty=float64 */;
    %195 = %184.0;
    %196 = divide(%193, %194) /* ty=Tensor[(3, 52), float64] */;
    (%195, %var_2090, -4.12581f /* ty=float32 */, %196)
  };
  %197(%var_2099) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */
}

def @func_8007() -> (Tensor[(3, 10, 9), float32], Tensor[(900), float32]) {
  %201 = fn () -> (Tensor[(3, 10, 9), float32], Tensor[(900), float32]) {
    %198 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
    %199 = %198.0;
    %200 = @func_7945() /* ty=Tensor[(900), float32] */;
    (%199, %200)
  };
  %201() /* ty=(Tensor[(3, 10, 9), float32], Tensor[(900), float32]) */
}

def @func_14530() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %202 = @func_9858() /* ty=(Tensor[(900), float32],) */;
  %203 = %202.0;
  %204 = @func_6687() /* ty=Tensor[(900), float32] */;
  (%203, %204)
}

def @func_3685() -> (Tensor[(420), uint32],) {
  %205 = @func_3527() /* ty=Tensor[(420), uint32] */;
  (%205,)
}

def @func_8665() -> Tensor[(420), uint32] {
  %206 = fn () -> Tensor[(420), uint32] {
    @func_5483() /* ty=Tensor[(420), uint32] */
  };
  %206() /* ty=Tensor[(420), uint32] */
}

def @func_17397(%var_17396: Tensor[(560), int16]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16], Tensor[(900), float32]) {
  %215 = fn (%var_17375: Tensor[(560), int16]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16], Tensor[(900), float32]) {
    %207 = @func_4954() /* ty=(Tensor[(900), float32],) */;
    %208 = cast(%var_17375, dtype="int16") /* ty=Tensor[(560), int16] */;
    %209 = reshape(%208, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), int16] */;
    %210 = @func_16956() /* ty=(Tensor[(900), float32],) */;
    %211 = @func_7709() /* ty=Tensor[(900), float32] */;
    %212 = %207.0;
    %213 = @func_7597(%209) /* ty=Tensor[(8, 7, 10), int16] */;
    %214 = %210.0;
    (%211, %212, %213, %var_17375, %214)
  };
  %215(%var_17396) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16], Tensor[(900), float32]) */
}

def @func_10393() -> (Tensor[(16, 15, 4), float32],) {
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 4), float32] */;
  %217 = log(%216) /* ty=Tensor[(16, 15, 4), float32] */;
  (%217,)
}

def @func_7549() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %218 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %219 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
  %220 = %218.1;
  (%219, %220)
}

def @func_10403() -> Tensor[(900), float32] {
  @func_6687() /* ty=Tensor[(900), float32] */
}

def @func_16884() -> (Tensor[(900), float32],) {
  %222 = fn () -> (Tensor[(900), float32],) {
    %221 = @func_14197() /* ty=Tensor[(900), float32] */;
    (%221,)
  };
  %222() /* ty=(Tensor[(900), float32],) */
}

def @func_5556() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %223 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %224 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %225 = %223.2;
  (%224, %225)
}

def @func_11918() -> Tensor[(900), float32] {
  %226 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %226.1
}

def @func_13479() -> (Tensor[(15, 5, 12), float32],) {
  @func_13477() /* ty=(Tensor[(15, 5, 12), float32],) */
}

def @func_7599(%var_7598: Tensor[(8, 7, 10), int16]) -> Tensor[(8, 7, 10), int16] {
  %231 = fn (%var_7592: Tensor[(8, 7, 10), int16]) -> Tensor[(8, 7, 10), int16] {
    %227 = cast(%var_7592, dtype="int16") /* ty=Tensor[(8, 7, 10), int16] */;
    %228 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %229 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 7, 10), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 10), int16] */;
    %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    minimum(%229, %230) /* ty=Tensor[(8, 7, 10), int16] */
  };
  %231(%var_7598) /* ty=Tensor[(8, 7, 10), int16] */
}

def @func_14058() -> Tensor[(900), float32] {
  @func_14056() /* ty=Tensor[(900), float32] */
}

def @func_17741() -> (Tensor[(420), uint32],) {
  @func_17739() /* ty=(Tensor[(420), uint32],) */
}

def @func_3808(%var_3802: Tensor[(14, 11, 15), int64], %var_3803: Tensor[(14, 11, 15), int64]) -> (Tensor[(14, 11, 15), int64],) {
  %232 = cast(%var_3803, dtype="int64") /* ty=Tensor[(14, 11, 15), int64] */;
  %233 = shape_of(%var_3802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%var_3802, dtype="int64") /* ty=Tensor[(14, 11, 15), int64] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %236 = multiply(%234, %235) /* ty=Tensor[(14, 11, 15), int64] */;
  (%236,)
}

def @func_7096() -> (Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) {
  @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */
}

def @func_10637() -> (Tensor[(900), float32],) {
  %239 = fn () -> (Tensor[(900), float32],) {
    %237 = @func_6022() /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) */;
    %238 = %237.0;
    (%238,)
  };
  %239() /* ty=(Tensor[(900), float32],) */
}

def @func_2387() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %240 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %241 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %242 = %240.0;
  %243 = %241.0;
  (%242, %243)
}

def @func_11920() -> Tensor[(900), float32] {
  @func_11918() /* ty=Tensor[(900), float32] */
}

def @func_4942() -> (Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) {
  %244 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
  %245 = %244.0;
  %246 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
  (%245, %246)
}

def @func_16677() -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), float64], Tensor[(4, 180), float64]) {
  %253 = fn () -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), float64], Tensor[(4, 180), float64]) {
    %247 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
    %248 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %249 = reshape(%248, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %250 = @func_8545(%249) /* ty=(Tensor[(420), uint32], Tensor[(3, 10, 9), float32], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), bool], Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
    %251 = %247.2;
    %252 = %250.2;
    (%251, %252, meta[relay.Constant][9] /* ty=Tensor[(4, 180), float64] */)
  };
  %253() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), float64], Tensor[(4, 180), float64]) */
}

def @func_4082() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_7758() -> Tensor[(15, 5, 12), float32] {
  %254 = fn () -> Tensor[(15, 5, 12), float32] {
    @func_6317() /* ty=Tensor[(15, 5, 12), float32] */
  };
  %254() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_9805() -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
  @func_9803() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */
}

def @func_14386(%var_14384: Tensor[(7, 7, 7), uint32]) -> Tensor[(7, 7, 7), bool] {
  @func_14383(%var_14384) /* ty=Tensor[(7, 7, 7), bool] */
}

def @func_8245() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) {
  @func_8243() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_2988(%var_2986: Tensor[(18, 36), float64], %var_2987: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) {
  %265 = fn (%var_2965: Tensor[(18, 36), float64], %var_2972: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) {
    %255 = cast(%var_2965, dtype="float64") /* ty=Tensor[(18, 36), float64] */;
    %256 = reshape(%255, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
    %257 = @func_2517(%256) /* ty=(Tensor[(6, 12, 9), float64],) */;
    %258 = cast(%var_2972, dtype="float64") /* ty=Tensor[(260), float64] */;
    %259 = reshape(%258, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
    %260 = @func_2013() /* ty=(Tensor[(900), float32],) */;
    %261 = @func_2924() /* ty=Tensor[(900), float32] */;
    %262 = %257.0;
    %263 = @func_2784(%259) /* ty=Tensor[(13, 10, 2), int8] */;
    %264 = %260.0;
    (%261, %262, %var_2965, %263, %var_2972, %264)
  };
  %265(%var_2986, %var_2987) /* ty=(Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) */
}

def @func_14236() -> (Tensor[(900), float32],) {
  %268 = fn () -> (Tensor[(900), float32],) {
    %266 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
    %267 = %266.0;
    (%267,)
  };
  %268() /* ty=(Tensor[(900), float32],) */
}

def @func_2606(%var_2605: uint32) -> (Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) {
  %282 = fn (%var_2595: uint32) -> (Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) {
    %269 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
    %270 = cast(%var_2595, dtype="uint32") /* ty=uint32 */;
    %271 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 1), uint32] */, dtype="uint32") /* ty=Tensor[(3, 1), uint32] */;
    %272 = reshape(%270, newshape=[]) /* ty=uint32 */;
    %273 = reshape(%271, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
    %274 = cast(%var_2595, dtype="float32") /* ty=float32 */;
    %275 = reshape(%274, newshape=[]) /* ty=float32 */;
    %276 = @func_525(%275) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
    %277 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
    %278 = %269.1;
    %279 = @func_732(%272, %273) /* ty=Tensor[(1, 3), bool] */;
    %280 = %276.2;
    %281 = %277.0;
    (%278, %279, %var_2595, meta[relay.Constant][10] /* ty=Tensor[(3, 1), uint32] */, %280, %281)
  };
  %282(%var_2605) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */
}

def @func_8904() -> float32 {
  %284 = fn () -> float32 {
    %283 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %283.1
  };
  %284() /* ty=float32 */
}

def @func_13084(%var_13062: Tensor[(16, 12, 13), uint16]) -> (Tensor[(16, 12, 13), float64], Tensor[(900), float32], Tensor[(16, 12, 13), uint8], Tensor[(16, 12, 13), float32]) {
  %285 = @func_10896() /* ty=(Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */;
  %286 = %285.0;
  %287 = cast(%var_13062, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %291 = @func_8077() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %292 = cast(%286, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %293 = atanh(%292) /* ty=Tensor[(16, 12, 13), float64] */;
  %294 = cast(%var_13062, dtype="uint8") /* ty=Tensor[(16, 12, 13), uint8] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="uint8") /* ty=Tensor[(16, 12, 13), uint8] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %298 = cast(%var_13062, dtype="float32") /* ty=Tensor[(16, 12, 13), float32] */;
  %299 = floor_mod(%289, %290) /* ty=Tensor[(16, 12, 13), float64] */;
  %300 = %291.3;
  %301 = bitwise_and(%296, %297) /* ty=Tensor[(16, 12, 13), uint8] */;
  %302 = asinh(%298) /* ty=Tensor[(16, 12, 13), float32] */;
  (%299, %300, %301, %302)
}

def @func_9670(%var_9668: float32) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32]) {
  @func_9667(%var_9668) /* ty=(Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32]) */
}

def @func_14902() -> Tensor[(900), float32] {
  %303 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %303.0
}

def @func_7517() -> (float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) {
  %304 = cast(meta[relay.Constant][11] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %305 = reshape(%304, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %306 = @func_2836(%305) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %307 = @func_5647() /* ty=float32 */;
  %308 = %306.0;
  %309 = @func_4667() /* ty=Tensor[(420), uint32] */;
  (%307, %308, meta[relay.Constant][11] /* ty=Tensor[(260), float64] */, %309)
}

def @func_15896(%var_15894: uint16, %var_15895: Tensor[(4, 4, 12), uint16]) -> (Tensor[(4, 4, 12), uint16], Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
  %317 = fn (%var_15863: uint16, %var_15864: Tensor[(4, 4, 12), uint16]) -> (Tensor[(4, 4, 12), uint16], Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
    %310 = cast(%var_15863, dtype="uint16") /* ty=uint16 */;
    %311 = cast(%var_15864, dtype="uint16") /* ty=Tensor[(4, 4, 12), uint16] */;
    %312 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %313 = @func_12542() /* ty=(Tensor[(900), float32],) */;
    %314 = multiply(%310, %311) /* ty=Tensor[(4, 4, 12), uint16] */;
    %315 = %312.0;
    %316 = %313.0;
    (%314, %315, %316)
  };
  %317(%var_15894, %var_15895) /* ty=(Tensor[(4, 4, 12), uint16], Tensor[(13, 10, 2), float64], Tensor[(900), float32]) */
}

def @func_16382() -> Tensor[(900), float32] {
  @func_16380() /* ty=Tensor[(900), float32] */
}

def @func_6490(%var_6488: Tensor[(144), int64], %var_6489: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) {
  @func_6486(%var_6488, %var_6489) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */
}

def @func_663(%var_572: Tensor[(6, 5, 14), uint32], %var_577: float32, %var_578: Tensor[(1, 156), float32]) -> (Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) {
  %318 = cast(%var_572, dtype="bool") /* ty=Tensor[(6, 5, 14), bool] */;
  %319 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="bool") /* ty=Tensor[(6, 5, 14), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %323 = cast(%var_578, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
  %324 = reshape(%322, newshape=[]) /* ty=float32 */;
  %325 = reshape(%323, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %326 = @func_333(%324, %325) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %327 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %328 = reshape(%327, newshape=[]) /* ty=float32 */;
  %329 = @func_525(%328) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %330 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 5, 14), uint32] */, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %331 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %332 = reshape(%331, newshape=[]) /* ty=float32 */;
  %333 = @func_525(%332) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %334 = cast(%var_577, dtype="float32") /* ty=float32 */;
  %335 = reshape(%334, newshape=[]) /* ty=float32 */;
  %336 = @func_525(%335) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %337 = less(%320, %321) /* ty=Tensor[(6, 5, 14), bool] */;
  %338 = %326.1;
  %339 = %329.0;
  %340 = rsqrt(%330) /* ty=Tensor[(6, 5, 14), float32] */;
  %341 = %333.2;
  %342 = %336.2;
  (%337, %338, %var_577, %var_578, %339, %340, %341, %342)
}

def @func_7028(%var_7014: int64, %var_7015: Tensor[(14, 9, 15), int64]) -> (Tensor[(14, 9, 15), bool], Tensor[(420), uint32], Tensor[(900), float32]) {
  %343 = cast(%var_7014, dtype="bool") /* ty=bool */;
  %344 = cast(%var_7015, dtype="bool") /* ty=Tensor[(14, 9, 15), bool] */;
  %345 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %346 = @func_4954() /* ty=(Tensor[(900), float32],) */;
  %347 = not_equal(%343, %344) /* ty=Tensor[(14, 9, 15), bool] */;
  %348 = %345.0;
  %349 = %346.0;
  (%347, %348, %349)
}

def @func_11522(%var_11520: uint16, %var_11521: Tensor[(60, 12), float64]) -> (Tensor[(900), float32], Tensor[(720), float64], Tensor[(60, 12), float64]) {
  @func_11518(%var_11520, %var_11521) /* ty=(Tensor[(900), float32], Tensor[(720), float64], Tensor[(60, 12), float64]) */
}

def @func_7346() -> (Tensor[(420), uint32],) {
  @func_7344() /* ty=(Tensor[(420), uint32],) */
}

def @func_3967() -> (float32,) {
  %350 = @func_3342() /* ty=(float32,) */;
  %351 = %350.0;
  (%351,)
}

def @func_13979(%var_13968: Tensor[(1, 8, 1), int32], %var_13969: Tensor[(5, 8, 2), int32]) -> Tensor[(5, 8, 2), int32] {
  %352 = cast(%var_13968, dtype="int32") /* ty=Tensor[(1, 8, 1), int32] */;
  %353 = cast(%var_13969, dtype="int32") /* ty=Tensor[(5, 8, 2), int32] */;
  right_shift(%352, %353) /* ty=Tensor[(5, 8, 2), int32] */
}

def @func_8353(%var_8351: Tensor[(560), int16]) -> (Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) {
  @func_8350(%var_8351) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) */
}

def @func_6917() -> (Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %359 = fn () -> (Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
    %354 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
    %355 = @func_2507() /* ty=(Tensor[(900), float32],) */;
    %356 = %354.0;
    %357 = %355.0;
    %358 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    (%356, %357, %358)
  };
  %359() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */
}

def @func_13775() -> Tensor[(900), float32] {
  %360 = fn () -> Tensor[(900), float32] {
    @func_4718() /* ty=Tensor[(900), float32] */
  };
  %360() /* ty=Tensor[(900), float32] */
}

def @func_12974() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) {
  @func_12972() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) */
}

def @func_4719() -> Tensor[(900), float32] {
  %362 = fn () -> Tensor[(900), float32] {
    %361 = @func_2013() /* ty=(Tensor[(900), float32],) */;
    %361.0
  };
  %362() /* ty=Tensor[(900), float32] */
}

def @func_3064() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) {
  %369 = fn () -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) {
    %363 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
    %364 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    %365 = cast(%364, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
    %366 = %363.0;
    %367 = @func_2924() /* ty=Tensor[(900), float32] */;
    %368 = log(%365) /* ty=Tensor[(13, 10, 2), float32] */;
    (%366, %367, %368)
  };
  %369() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */
}

def @func_8618() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) {
  %376 = fn () -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) {
    %370 = @func_3634() /* ty=(Tensor[(900), float32],) */;
    %371 = @func_6131() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) */;
    %372 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
    %373 = %370.0;
    %374 = %371.0;
    %375 = %372.0;
    (%373, %374, %375)
  };
  %376() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) */
}

def @func_16776() -> Tensor[(900), float32] {
  @func_10403() /* ty=Tensor[(900), float32] */
}

def @func_12542() -> (Tensor[(900), float32],) {
  %377 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_12570() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_12568() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_1982() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) {
  %379 = cast(meta[relay.Constant][13] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %380 = reshape(%379, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
  %381 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %382 = atanh(%381) /* ty=Tensor[(16, 9, 12), float64] */;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %384 = @func_1350(%380) /* ty=Tensor[(15, 5, 12), float32] */;
  %385 = asinh(%383) /* ty=Tensor[(16, 9, 12), float32] */;
  (%384, meta[relay.Constant][13] /* ty=Tensor[(900), float32] */, %385)
}

def @func_9277() -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float32]) {
  @func_9275() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float32]) */
}

def @func_8887() -> (Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) {
  @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */
}

def @func_9525(%var_9416: Tensor[(6, 10, 11), float64], %var_9433: Tensor[(16, 9, 12), float32]) -> (Tensor[(6, 10, 11), float64], Tensor[(420), uint32], Tensor[(16, 9, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float64]) {
  %386 = cast(%var_9416, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %387 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %388 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %389 = %388.0;
  %390 = cast(%var_9433, dtype="bool") /* ty=Tensor[(16, 9, 12), bool] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="bool") /* ty=Tensor[(16, 9, 12), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = logical_and(%392, %393) /* ty=Tensor[(16, 9, 12), bool] */;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %396 = exp(%395) /* ty=Tensor[(16, 9, 12), float64] */;
  %397 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 9, 12), float64] */, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %401 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %402 = cast(%396, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %403 = tan(%386) /* ty=Tensor[(6, 10, 11), float64] */;
  %404 = %387.0;
  %405 = divide(%399, %400) /* ty=Tensor[(16, 9, 12), float32] */;
  %406 = %401.0;
  %407 = tan(%402) /* ty=Tensor[(16, 9, 12), float64] */;
  (%403, %404, %405, %406, %407)
}

def @func_11112() -> (Tensor[(13, 10, 2), float64], float32) {
  %412 = fn () -> (Tensor[(13, 10, 2), float64], float32) {
    %408 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %409 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
    %410 = %408.0;
    %411 = %409.0;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(13, 10, 2), float64], float32) */
}

def @func_11533() -> (Tensor[(2496), float64],) {
  %413 = @func_11187() /* ty=(Tensor[(2496), float64],) */;
  %414 = %413.0;
  (%414,)
}

def @func_8199(%var_8198: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) {
  %438 = fn (%var_8174: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) {
    %415 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
    %416 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
    %417 = cast(3.97883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %418 = cast(%var_8174, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %419 = reshape(%415, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
    %420 = reshape(%416, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), int64] */;
    %421 = reshape(%417, newshape=[]) /* ty=float32 */;
    %422 = reshape(%418, newshape=[13, 156]) /* ty=Tensor[(13, 156), float64] */;
    %423 = @func_4437(%419, %420, %421, %422) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) */;
    %424 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 72), int64] */, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
    %425 = cast(3.97883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %426 = cast(3.97883f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
    %427 = cast(meta[relay.Constant][17] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %428 = reshape(%426, newshape=[]) /* ty=uint16 */;
    %429 = reshape(%427, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %430 = @func_4312(%428, %429) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
    %431 = @func_5563() /* ty=(Tensor[(900), float32],) */;
    %432 = @func_5211() /* ty=Tensor[(900), float32] */;
    %433 = @func_5211() /* ty=Tensor[(900), float32] */;
    %434 = %423.0;
    %435 = power(%424, %425) /* ty=Tensor[(2, 72), float32] */;
    %436 = %430.1;
    %437 = %431.0;
    (%432, %433, %434, %var_8174, %435, %436, meta[relay.Constant][17] /* ty=Tensor[(720), float64] */, %437)
  };
  %438(%var_8198) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */
}

def @func_10715() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
  %444 = fn () -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
    %439 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
    %440 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %441 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    %442 = %439.0;
    %443 = %440.3;
    (%441, %442, %443)
  };
  %444() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_13942(%var_13940: float32) -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(900), float32]) {
  @func_13939(%var_13940) /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(900), float32]) */
}

def @func_5044() -> (Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) {
  @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */
}

def @func_12064() -> (Tensor[(15, 5, 12), int64], float32) {
  %449 = fn () -> (Tensor[(15, 5, 12), int64], float32) {
    %445 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
    %446 = @func_10235() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %447 = %445.0;
    %448 = %446.3;
    (%447, %448)
  };
  %449() /* ty=(Tensor[(15, 5, 12), int64], float32) */
}

def @func_14904() -> Tensor[(900), float32] {
  @func_14902() /* ty=Tensor[(900), float32] */
}

def @func_6131() -> (Tensor[(13, 10, 2), float32], Tensor[(13, 10, 2), bool]) {
  %450 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %453 = reshape(%452, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %454 = @func_2836(%453) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %455 = %454.1;
  (%451, %455)
}

def @func_15089() -> (Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) {
  %456 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
  %457 = %456.0;
  %458 = @func_8664() /* ty=Tensor[(420), uint32] */;
  (%457, %458)
}

def @func_5874(%var_5873: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
  %471 = fn (%var_5828: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
    %459 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %460 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
    %461 = cast(%var_5828, dtype="float64") /* ty=Tensor[(648), float64] */;
    %462 = reshape(%461, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
    %463 = @func_2517(%462) /* ty=(Tensor[(6, 12, 9), float64],) */;
    %464 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
    %465 = %459.0;
    %466 = %460.0;
    %467 = %463.0;
    %468 = @func_4718() /* ty=Tensor[(900), float32] */;
    %469 = %464.0;
    %470 = @func_4667() /* ty=Tensor[(420), uint32] */;
    (%465, %466, %467, %var_5828, %468, %469, %470)
  };
  %471(%var_5873) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */
}

def @func_13041() -> Tensor[(2, 13, 11), float32] {
  @func_13039() /* ty=Tensor[(2, 13, 11), float32] */
}

def @func_16395() -> Tensor[(900), float32] {
  %473 = fn () -> Tensor[(900), float32] {
    %472 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %472.1
  };
  %473() /* ty=Tensor[(900), float32] */
}

def @func_4814(%var_4812: Tensor[(6, 12, 9), float64], %var_4813: Tensor[(1, 3), uint32]) -> (Tensor[(6, 12, 9), int64], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(900), float32]) {
  %490 = fn (%var_4796: Tensor[(6, 12, 9), float64], %var_4803: Tensor[(1, 3), uint32]) -> (Tensor[(6, 12, 9), int64], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(900), float32]) {
    %474 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
    %475 = %474.2;
    %476 = cast(%var_4796, dtype="int64") /* ty=Tensor[(6, 12, 9), int64] */;
    %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(%475, dtype="int64") /* ty=Tensor[(6, 12, 9), int64] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %480 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %481 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(1, 3), uint32] */;
    %482 = reshape(%480, newshape=[]) /* ty=uint32 */;
    %483 = reshape(%481, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
    %484 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %485 = @func_4532() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %486 = add(%478, %479) /* ty=Tensor[(6, 12, 9), int64] */;
    %487 = @func_732(%482, %483) /* ty=Tensor[(1, 3), bool] */;
    %488 = %484.0;
    %489 = %485.0;
    (%486, %487, meta[relay.Constant][18] /* ty=uint32 */, %var_4803, %488, %489)
  };
  %490(%var_4812, %var_4813) /* ty=(Tensor[(6, 12, 9), int64], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_3796() -> (Tensor[(13, 10, 2), float64],) {
  %492 = fn () -> (Tensor[(13, 10, 2), float64],) {
    %491 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    (%491,)
  };
  %492() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_14009() -> (Tensor[(900), float32],) {
  %495 = fn () -> (Tensor[(900), float32],) {
    %493 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %494 = %493.1;
    (%494,)
  };
  %495() /* ty=(Tensor[(900), float32],) */
}

def @func_15531() -> (Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
  %502 = fn () -> (Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) {
    %496 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %497 = %496.0;
    %498 = cast(%497, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
    %499 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
    %500 = rsqrt(%498) /* ty=Tensor[(13, 10, 2), float32] */;
    %501 = %499.3;
    (%500, %501)
  };
  %502() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_14532() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_14530() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_736(%var_734: uint32, %var_735: Tensor[(1, 3), uint32]) -> Tensor[(1, 3), bool] {
  @func_732(%var_734, %var_735) /* ty=Tensor[(1, 3), bool] */
}

def @func_17672(%var_17670: Tensor[(156), float32]) -> (float32, Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(156), float32], Tensor[(3, 15, 6), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32]) {
  @func_17669(%var_17670) /* ty=(float32, Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(156), float32], Tensor[(3, 15, 6), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32]) */
}

def @func_14827() -> Tensor[(13, 10, 2), float32] {
  %504 = fn () -> Tensor[(13, 10, 2), float32] {
    %503 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
    %503.0
  };
  %504() /* ty=Tensor[(13, 10, 2), float32] */
}

def @func_10257() -> (Tensor[(6, 12, 9), float64],) {
  @func_10255() /* ty=(Tensor[(6, 12, 9), float64],) */
}

def @func_17073(%var_17035: Tensor[(3), uint32]) -> (float32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(4, 36), float64]) {
  %505 = @func_3967() /* ty=(float32,) */;
  %506 = @func_12542() /* ty=(Tensor[(900), float32],) */;
  %507 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %508 = cast(%var_17035, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %509 = reshape(%507, newshape=[4, 36]) /* ty=Tensor[(4, 36), int64] */;
  %510 = reshape(%508, newshape=[3, 1]) /* ty=Tensor[(3, 1), uint32] */;
  %511 = @func_11766(%509, %510) /* ty=(Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) */;
  %512 = %511.2;
  %513 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), int64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(2), int32] */;
  %515 = cast(%512, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %517 = %505.0;
  %518 = %506.0;
  %519 = floor_divide(%515, %516) /* ty=Tensor[(4, 36), float64] */;
  (%517, %var_17035, %518, %519)
}

def @func_4213() -> (Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) {
  %526 = fn () -> (Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) {
    %520 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
    %521 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
    %522 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %523 = %520.2;
    %524 = %521.0;
    %525 = %522.1;
    (%523, %524, %525)
  };
  %526() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */
}

def @func_8717() -> (Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) {
  %527 = @func_8077() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %528 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %529 = %527.0;
  %530 = %528.0;
  (%529, %530)
}

def @func_5564() -> (Tensor[(900), float32],) {
  %533 = fn () -> (Tensor[(900), float32],) {
    %531 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %532 = %531.0;
    (%532,)
  };
  %533() /* ty=(Tensor[(900), float32],) */
}

def @func_13390() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32], float32) {
  @func_13388() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32], float32) */
}

def @func_14313() -> Tensor[(15, 5, 12), float32] {
  %535 = fn () -> Tensor[(15, 5, 12), float32] {
    %534 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
    %534.0
  };
  %535() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_9207() -> (Tensor[(900), float32],) {
  %536 = @func_5760() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %537 = %536.1;
  (%537,)
}

def @func_2530() -> (Tensor[(15, 5, 12), float32],) {
  %538 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %539 = %538.0;
  (%539,)
}

def @func_15176(%var_15152: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), float32] {
  %540 = @func_11379() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %541 = %540.1;
  %542 = cast(%var_15152, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%544, %545) /* ty=Tensor[(13, 10, 2), float32] */
}

def @func_14411() -> Tensor[(900), float32] {
  @func_14409() /* ty=Tensor[(900), float32] */
}

def @func_11329() -> Tensor[(15, 5, 12), int64] {
  %546 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
  %546.1
}

def @func_10020() -> (Tensor[(13, 10, 2), float32],) {
  %549 = fn () -> (Tensor[(13, 10, 2), float32],) {
    %547 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
    %548 = %547.0;
    (%548,)
  };
  %549() /* ty=(Tensor[(13, 10, 2), float32],) */
}

def @func_13299() -> (Tensor[(900), float32],) {
  %552 = fn () -> (Tensor[(900), float32],) {
    %550 = @func_3634() /* ty=(Tensor[(900), float32],) */;
    %551 = %550.0;
    (%551,)
  };
  %552() /* ty=(Tensor[(900), float32],) */
}

def @func_9860() -> (Tensor[(900), float32],) {
  @func_9858() /* ty=(Tensor[(900), float32],) */
}

def @func_17023() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %556 = fn () -> (Tensor[(420), uint32], Tensor[(900), float32]) {
    %553 = @func_10235() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %554 = @func_10008() /* ty=Tensor[(420), uint32] */;
    %555 = %553.2;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */
}

def @func_3107(%var_3106: Tensor[(6, 8, 15), float64]) -> (Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) {
  %571 = fn (%var_3067: Tensor[(6, 8, 15), float64]) -> (Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) {
    %557 = cast(%var_3067, dtype="float64") /* ty=Tensor[(6, 8, 15), float64] */;
    %558 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %559 = reshape(%558, newshape=[]) /* ty=uint32 */;
    %560 = @func_2604(%559) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
    %561 = cast(meta[relay.Constant][21] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %562 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
    %563 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %564 = reshape(%561, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %565 = reshape(%562, newshape=[]) /* ty=float32 */;
    %566 = reshape(%563, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %567 = @func_663(%564, %565, %566) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
    %568 = atan(%557) /* ty=Tensor[(6, 8, 15), float64] */;
    %569 = %560.4;
    %570 = %567.0;
    (%568, %569, meta[relay.Constant][20] /* ty=uint32 */, %570, meta[relay.Constant][21] /* ty=Tensor[(420), uint32] */, meta[relay.Constant][22] /* ty=Tensor[(156), float32] */)
  };
  %571(%var_3106) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */
}

def @func_8807() -> Tensor[(16, 12, 13), uint16] {
  %573 = fn () -> Tensor[(16, 12, 13), uint16] {
    %572 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
    %572.1
  };
  %573() /* ty=Tensor[(16, 12, 13), uint16] */
}

def @func_16380() -> Tensor[(900), float32] {
  @func_3912() /* ty=Tensor[(900), float32] */
}

def @func_7781(%var_7779: Tensor[(3, 1, 16), float64]) -> Tensor[(3, 1, 16), float64] {
  @func_7778(%var_7779) /* ty=Tensor[(3, 1, 16), float64] */
}

def @func_12510() -> (Tensor[(16, 12, 13), uint16],) {
  %575 = fn () -> (Tensor[(16, 12, 13), uint16],) {
    %574 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
    (%574,)
  };
  %575() /* ty=(Tensor[(16, 12, 13), uint16],) */
}

def @func_11188() -> (Tensor[(2496), float64],) {
  %578 = fn () -> (Tensor[(2496), float64],) {
    %576 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
    %577 = %576.1;
    (%577,)
  };
  %578() /* ty=(Tensor[(2496), float64],) */
}

def @func_3950() -> (Tensor[(13, 10, 2), float64],) {
  @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_4667() -> Tensor[(420), uint32] {
  %579 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %579.0
}

def @func_7473() -> (Tensor[(2496), float64],) {
  %580 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
  %581 = %580.2;
  (%581,)
}

def @func_2014() -> (Tensor[(900), float32],) {
  %584 = fn () -> (Tensor[(900), float32],) {
    %582 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
    %583 = %582.1;
    (%583,)
  };
  %584() /* ty=(Tensor[(900), float32],) */
}

def @func_5965(%var_5963: Tensor[(13, 10, 2), float64]) -> (Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  @func_5962(%var_5963) /* ty=(Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */
}

def @func_7778(%var_7774: Tensor[(3, 1, 16), float64]) -> Tensor[(3, 1, 16), float64] {
  %585 = cast(3.30804f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %586 = cast(%var_7774, dtype="float64") /* ty=Tensor[(3, 1, 16), float64] */;
  mod(%585, %586) /* ty=Tensor[(3, 1, 16), float64] */
}

def @func_14723(%var_14721: Tensor[(2028), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(900), float32], Tensor[(2, 72), float32], Tensor[(13, 10, 2), float64], Tensor[(2028), float64]) {
  @func_14720(%var_14721) /* ty=(Tensor[(8, 7, 7), float64], Tensor[(900), float32], Tensor[(2, 72), float32], Tensor[(13, 10, 2), float64], Tensor[(2028), float64]) */
}

def @func_2508() -> (Tensor[(900), float32],) {
  %589 = fn () -> (Tensor[(900), float32],) {
    %587 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %588 = %587.0;
    (%588,)
  };
  %589() /* ty=(Tensor[(900), float32],) */
}

def @func_11847() -> Tensor[(13, 10, 2), float32] {
  %591 = fn () -> Tensor[(13, 10, 2), float32] {
    %590 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
    %590.0
  };
  %591() /* ty=Tensor[(13, 10, 2), float32] */
}

def @func_12815(%var_12814: uint16) -> (Tensor[(900), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), int64]) {
  %603 = fn (%var_12783: uint16) -> (Tensor[(900), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), int64]) {
    %592 = cast(%var_12783, dtype="uint16") /* ty=uint16 */;
    %593 = cast(meta[relay.Constant][23] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %594 = reshape(%592, newshape=[]) /* ty=uint16 */;
    %595 = reshape(%593, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %596 = @func_4312(%594, %595) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */;
    %597 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %598 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
    %599 = @func_6379() /* ty=Tensor[(900), float64] */;
    %600 = %596.5;
    %601 = %597.0;
    %602 = %598.0;
    (%599, %600, %var_12783, meta[relay.Constant][23] /* ty=Tensor[(720), float64] */, %601, %602)
  };
  %603(%var_12814) /* ty=(Tensor[(900), float64], Tensor[(13, 10, 2), float64], uint16, Tensor[(720), float64], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), int64]) */
}

def @func_14816(%var_14814: Tensor[(156), float32], %var_14815: Tensor[(3), uint32]) -> (Tensor[(15, 5, 12), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(156), float32], Tensor[(156), float32], Tensor[(1, 3), bool], Tensor[(3), uint32], float32, Tensor[(4, 4), float32], Tensor[(16), float32]) {
  %627 = fn (%var_14780: Tensor[(156), float32], %var_14789: Tensor[(3), uint32]) -> (Tensor[(15, 5, 12), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(156), float32], Tensor[(156), float32], Tensor[(1, 3), bool], Tensor[(3), uint32], float32, Tensor[(4, 4), float32], Tensor[(16), float32]) {
    %604 = @func_9803() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */;
    %605 = cast(meta[relay.Constant][24] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %606 = reshape(%605, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %607 = @func_2836(%606) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
    %608 = cast(%var_14780, dtype="float32") /* ty=Tensor[(156), float32] */;
    %609 = reshape(%608, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %610 = @func_6981(%609) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
    %611 = @func_5647() /* ty=float32 */;
    %612 = cast(%611, dtype="uint32") /* ty=uint32 */;
    %613 = cast(%var_14789, dtype="uint32") /* ty=Tensor[(3), uint32] */;
    %614 = reshape(%612, newshape=[]) /* ty=uint32 */;
    %615 = reshape(%613, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
    %616 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %617 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %618 = reshape(%617, newshape=[4, 4]) /* ty=Tensor[(4, 4), float32] */;
    %619 = @func_14474(%618) /* ty=(Tensor[(4, 4), float32], Tensor[(900), float32]) */;
    %620 = %604.0;
    %621 = @func_14056() /* ty=Tensor[(900), float32] */;
    %622 = %607.0;
    %623 = %610.7;
    %624 = @func_732(%614, %615) /* ty=Tensor[(1, 3), bool] */;
    %625 = %616.1;
    %626 = %619.0;
    (%620, %611, %621, %622, meta[relay.Constant][24] /* ty=Tensor[(260), float64] */, %623, %var_14780, %624, %var_14789, %625, %626, meta[relay.Constant][25] /* ty=Tensor[(16), float32] */)
  };
  %627(%var_14814, %var_14815) /* ty=(Tensor[(15, 5, 12), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(156), float32], Tensor[(156), float32], Tensor[(1, 3), bool], Tensor[(3), uint32], float32, Tensor[(4, 4), float32], Tensor[(16), float32]) */
}

def @func_14720(%var_14682: Tensor[(2028), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(900), float32], Tensor[(2, 72), float32], Tensor[(13, 10, 2), float64], Tensor[(2028), float64]) {
  %628 = @func_9616() /* ty=(Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) */;
  %629 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %630 = cast(%var_14682, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %631 = reshape(%630, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %632 = @func_8197(%631) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %633 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %634 = cast(%var_14682, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %635 = tan(%634) /* ty=Tensor[(2028), float64] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %637 = %628.1;
  %638 = %629.0;
  %639 = %632.4;
  %640 = %633.0;
  %641 = asinh(%636) /* ty=Tensor[(2028), float64] */;
  (%637, %638, %639, %640, %641)
}

def @func_12450() -> (Tensor[(900), float32], Tensor[(420), uint32]) {
  %645 = fn () -> (Tensor[(900), float32], Tensor[(420), uint32]) {
    %642 = @func_6916() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %643 = %642.1;
    %644 = @func_3527() /* ty=Tensor[(420), uint32] */;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(900), float32], Tensor[(420), uint32]) */
}

def @func_8243() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32]) {
  %646 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %647 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %648 = %646.0;
  %649 = %647.0;
  %650 = @func_7709() /* ty=Tensor[(900), float32] */;
  (%648, %649, %650)
}

def @func_12937() -> Tensor[(900), float32] {
  %651 = fn () -> Tensor[(900), float32] {
    @func_11918() /* ty=Tensor[(900), float32] */
  };
  %651() /* ty=Tensor[(900), float32] */
}

def @func_15828() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %657 = fn () -> (Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
    %652 = @func_12124() /* ty=(Tensor[(900), float32],) */;
    %653 = @func_10714() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(15, 5, 12), float32]) */;
    %654 = %652.0;
    %655 = %653.1;
    %656 = @func_3912() /* ty=Tensor[(900), float32] */;
    (%654, %655, %656)
  };
  %657() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */
}

def @main(%var_17915: Tensor[(560), int16], %var_17947: uint32, %var_17948: Tensor[(3), uint32], %var_18014: Tensor[(648), float64], %var_18015: Tensor[(156), float32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(560), int16], Tensor[(560), int16], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(13, 156), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(648), float64], Tensor[(156), float32], Tensor[(2, 72), float64]) {
  %658 = @func_6917() /* ty=(Tensor[(420), uint32], Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %659 = cast(%var_17915, dtype="int16") /* ty=Tensor[(560), int16] */;
  %660 = reshape(%659, newshape=[560]) /* ty=Tensor[(560), int16] */;
  %661 = @func_8353(%660) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) */;
  %662 = cast(%var_17947, dtype="uint32") /* ty=uint32 */;
  %663 = cast(%var_17948, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %664 = reshape(%662, newshape=[]) /* ty=uint32 */;
  %665 = reshape(%663, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %666 = @func_6660() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %667 = cast(%var_18014, dtype="float64") /* ty=Tensor[(648), float64] */;
  %668 = cast(%var_18015, dtype="float32") /* ty=Tensor[(156), float32] */;
  %669 = reshape(%667, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %670 = reshape(%668, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %671 = @func_11712(%669, %670) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) */;
  %672 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 156), float64] */, dtype="float64") /* ty=Tensor[(13, 156), float64] */;
  %673 = reshape(%672, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %674 = @func_8199(%673) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %675 = %674.4;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %677 = cosh(%676) /* ty=Tensor[(2, 72), float32] */;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %679 = %658.1;
  %680 = @func_13774() /* ty=Tensor[(900), float32] */;
  %681 = %661.2;
  %682 = @func_732(%664, %665) /* ty=Tensor[(1, 3), bool] */;
  %683 = %666.1;
  %684 = @func_17302() /* ty=Tensor[(900), float32] */;
  %685 = %671.2;
  %686 = log2(%678) /* ty=Tensor[(2, 72), float64] */;
  (%679, %680, %681, %var_17915, %682, %var_17947, %var_17948, %683, meta[relay.Constant][26] /* ty=Tensor[(13, 156), float64] */, %684, %685, %var_18014, %var_18015, %686)
}

def @func_5649() -> float32 {
  @func_5647() /* ty=float32 */
}

def @func_13039() -> Tensor[(2, 13, 11), float32] {
  %687 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
  %687.3
}

def @func_14056() -> Tensor[(900), float32] {
  %688 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %688.0
}

def @func_16627() -> (Tensor[(900), float32], Tensor[(420), uint32]) {
  @func_16625() /* ty=(Tensor[(900), float32], Tensor[(420), uint32]) */
}

def @func_7947() -> Tensor[(900), float32] {
  @func_7945() /* ty=Tensor[(900), float32] */
}

def @func_10255() -> (Tensor[(6, 12, 9), float64],) {
  %689 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %690 = %689.2;
  (%690,)
}

def @func_10405() -> Tensor[(900), float32] {
  @func_10403() /* ty=Tensor[(900), float32] */
}

def @func_13115() -> Tensor[(900), float32] {
  %691 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %691.0
}

def @func_6981(%var_6976: Tensor[(156), float32]) -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) {
  %692 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %693 = @func_5563() /* ty=(Tensor[(900), float32],) */;
  %694 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %695 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 84), uint32] */, dtype="uint32") /* ty=Tensor[(5, 84), uint32] */;
  %696 = @func_5647() /* ty=float32 */;
  %697 = cast(%696, dtype="float32") /* ty=float32 */;
  %698 = cast(%var_6976, dtype="float32") /* ty=Tensor[(156), float32] */;
  %699 = reshape(%695, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %700 = reshape(%697, newshape=[]) /* ty=float32 */;
  %701 = reshape(%698, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %702 = @func_663(%699, %700, %701) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %703 = @func_3912() /* ty=Tensor[(900), float32] */;
  %704 = %692.2;
  %705 = %693.0;
  %706 = %694.0;
  %707 = %702.5;
  (%703, %696, %704, %705, %706, %707, meta[relay.Constant][27] /* ty=Tensor[(5, 84), uint32] */, %var_6976)
}

def @func_15058() -> (float32,) {
  %710 = fn () -> (float32,) {
    %708 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
    %709 = %708.1;
    (%709,)
  };
  %710() /* ty=(float32,) */
}

def @func_7245(%var_7243: Tensor[(5, 52), float64], %var_7244: Tensor[(648), float64]) -> (float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  @func_7241(%var_7243, %var_7244) /* ty=(float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */
}

def @func_12126() -> (Tensor[(900), float32],) {
  @func_12124() /* ty=(Tensor[(900), float32],) */
}

def @func_2519(%var_2518: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
  %713 = fn (%var_2514: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
    %711 = cast(%var_2514, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
    %712 = log2(%711) /* ty=Tensor[(6, 12, 9), float64] */;
    (%712,)
  };
  %713(%var_2518) /* ty=(Tensor[(6, 12, 9), float64],) */
}

def @func_8564(%var_8563: Tensor[(8, 7, 7), float64]) -> Tensor[(8, 7, 7), float64] {
  %715 = fn (%var_8549: Tensor[(8, 7, 7), float64]) -> Tensor[(8, 7, 7), float64] {
    %714 = cast(%var_8549, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
    erf(%714) /* ty=Tensor[(8, 7, 7), float64] */
  };
  %715(%var_8563) /* ty=Tensor[(8, 7, 7), float64] */
}

def @func_2713() -> (Tensor[(900), float32], float32, Tensor[(420), uint32]) {
  %722 = fn () -> (Tensor[(900), float32], float32, Tensor[(420), uint32]) {
    %716 = @func_2507() /* ty=(Tensor[(900), float32],) */;
    %717 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %718 = reshape(%717, newshape=[420]) /* ty=Tensor[(420), uint32] */;
    %719 = @func_2098(%718) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
    %720 = %716.0;
    %721 = %719.2;
    (%720, %721, meta[relay.Constant][28] /* ty=Tensor[(420), uint32] */)
  };
  %722() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */
}

def @func_16199() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) {
  %738 = fn () -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) {
    %723 = @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */;
    %724 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %725 = cast(meta[relay.Constant][29] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %726 = cast(meta[relay.Constant][29] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %727 = reshape(%725, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), int16] */;
    %728 = reshape(%726, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), int16] */;
    %729 = @func_11118(%727, %728) /* ty=(Tensor[(16, 7, 10), int16],) */;
    %730 = %729.0;
    %731 = cast(meta[relay.Constant][29] /* ty=Tensor[(1120), int16] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
    %733 = cast(%730, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
    %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %735 = %723.1;
    %736 = %724.1;
    %737 = floor_divide(%733, %734) /* ty=Tensor[(16, 7, 10), float32] */;
    (%735, %736, %737)
  };
  %738() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) */
}

def @func_5715() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %742 = fn () -> (Tensor[(900), float32], Tensor[(900), float32]) {
    %739 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %740 = %739.0;
    %741 = @func_4995() /* ty=Tensor[(900), float32] */;
    (%740, %741)
  };
  %742() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_10897() -> (Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
  %746 = fn () -> (Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) {
    %743 = @func_10636() /* ty=(Tensor[(900), float32],) */;
    %744 = @func_8806() /* ty=Tensor[(16, 12, 13), uint16] */;
    %745 = %743.0;
    (%744, %745)
  };
  %746() /* ty=(Tensor[(16, 12, 13), uint16], Tensor[(900), float32]) */
}

def @func_14477(%var_14475: Tensor[(4, 4), float32]) -> (Tensor[(4, 4), float32], Tensor[(900), float32]) {
  @func_14474(%var_14475) /* ty=(Tensor[(4, 4), float32], Tensor[(900), float32]) */
}

def @func_10834() -> (Tensor[(900), float32],) {
  %749 = fn () -> (Tensor[(900), float32],) {
    %747 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %748 = %747.0;
    (%748,)
  };
  %749() /* ty=(Tensor[(900), float32],) */
}

def @func_16094() -> (Tensor[(13, 10, 2), float64],) {
  %752 = fn () -> (Tensor[(13, 10, 2), float64],) {
    %750 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %751 = %750.0;
    (%751,)
  };
  %752() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_6024() -> (Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) {
  @func_6022() /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) */
}

def @func_5249() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %758 = fn () -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
    %753 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
    %754 = @func_3762() /* ty=(Tensor[(900), float32],) */;
    %755 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
    %756 = %753.0;
    %757 = %754.0;
    (%755, %756, %757)
  };
  %758() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */
}

def @func_4172() -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */
}

def @func_11380() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %762 = fn () -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
    %759 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %760 = @func_4718() /* ty=Tensor[(900), float32] */;
    %761 = %759.0;
    (%760, %761)
  };
  %762() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */
}

def @func_7241(%var_7235: Tensor[(5, 52), float64], %var_7239: Tensor[(648), float64]) -> (float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  %763 = cast(%var_7235, dtype="float64") /* ty=Tensor[(5, 52), float64] */;
  %764 = reshape(%763, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %765 = @func_5962(%764) /* ty=(Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %766 = cast(%var_7239, dtype="float64") /* ty=Tensor[(648), float64] */;
  %767 = reshape(%766, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %768 = @func_2517(%767) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %769 = @func_5647() /* ty=float32 */;
  %770 = %765.1;
  %771 = %768.0;
  (%769, %770, %var_7235, %771, %var_7239)
}

def @func_13388() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32], float32) {
  %772 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %773 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %774 = @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %775 = @func_3967() /* ty=(float32,) */;
  %776 = %772.0;
  %777 = %773.0;
  %778 = %774.0;
  %779 = %775.0;
  (%776, %777, %778, %779)
}

def @func_16262() -> (Tensor[(2496), float64],) {
  %782 = fn () -> (Tensor[(2496), float64],) {
    %780 = @func_11533() /* ty=(Tensor[(2496), float64],) */;
    %781 = %780.0;
    (%781,)
  };
  %782() /* ty=(Tensor[(2496), float64],) */
}

def @func_1984() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) {
  @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */
}

def @func_6317() -> Tensor[(15, 5, 12), float32] {
  %783 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %783.0
}

def @func_5484() -> Tensor[(420), uint32] {
  %784 = fn () -> Tensor[(420), uint32] {
    @func_4667() /* ty=Tensor[(420), uint32] */
  };
  %784() /* ty=Tensor[(420), uint32] */
}

def @func_9275() -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float32]) {
  %785 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %786 = @func_7757() /* ty=Tensor[(15, 5, 12), float32] */;
  %787 = %785.1;
  (%786, %787)
}

def @func_14875() -> Tensor[(15, 5, 12), float32] {
  %789 = fn () -> Tensor[(15, 5, 12), float32] {
    %788 = @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %788.0
  };
  %789() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_5558() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */
}

def @func_11747() -> float32 {
  %791 = fn () -> float32 {
    %790 = @func_4756() /* ty=(float32, Tensor[(900), float32], Tensor[(420), uint32]) */;
    %790.0
  };
  %791() /* ty=float32 */
}

def @func_9617() -> (Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) {
  %797 = fn () -> (Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) {
    %792 = @func_5556() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */;
    %793 = cast(meta[relay.Constant][30] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
    %794 = reshape(%793, newshape=[8, 7, 7]) /* ty=Tensor[(8, 7, 7), float64] */;
    %795 = %792.1;
    %796 = @func_8562(%794) /* ty=Tensor[(8, 7, 7), float64] */;
    (%795, %796, meta[relay.Constant][30] /* ty=Tensor[(392), float64] */)
  };
  %797() /* ty=(Tensor[(900), float32], Tensor[(8, 7, 7), float64], Tensor[(392), float64]) */
}

def @func_5762() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_5760() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_6510() -> Tensor[(15, 5, 12), float32] {
  @func_6508() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_4996() -> Tensor[(900), float32] {
  %799 = fn () -> Tensor[(900), float32] {
    %798 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %798.0
  };
  %799() /* ty=Tensor[(900), float32] */
}

def @func_7519() -> (float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) {
  @func_7517() /* ty=(float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) */
}

def @func_4956() -> (Tensor[(900), float32],) {
  @func_4954() /* ty=(Tensor[(900), float32],) */
}

def @func_3285() -> Tensor[(900), float32] {
  %801 = fn () -> Tensor[(900), float32] {
    %800 = @func_2507() /* ty=(Tensor[(900), float32],) */;
    %800.0
  };
  %801() /* ty=Tensor[(900), float32] */
}

def @func_4784() -> (Tensor[(16, 9, 12), float32], Tensor[(900), float32]) {
  %802 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %803 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %804 = %802.2;
  %805 = %803.1;
  (%804, %805)
}

def @func_668(%var_665: Tensor[(6, 5, 14), uint32], %var_666: float32, %var_667: Tensor[(1, 156), float32]) -> (Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) {
  @func_663(%var_665, %var_666, %var_667) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */
}

def @func_4786() -> (Tensor[(16, 9, 12), float32], Tensor[(900), float32]) {
  @func_4784() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(900), float32]) */
}

def @func_10887() -> (Tensor[(420), uint32], Tensor[(6, 12, 9), float64]) {
  %809 = fn () -> (Tensor[(420), uint32], Tensor[(6, 12, 9), float64]) {
    %806 = @func_4170() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
    %807 = @func_4667() /* ty=Tensor[(420), uint32] */;
    %808 = %806.2;
    (%807, %808)
  };
  %809() /* ty=(Tensor[(420), uint32], Tensor[(6, 12, 9), float64]) */
}

def @func_6658() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %810 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %811 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %812 = %810.0;
  %813 = %811.1;
  (%812, %813)
}

def @func_7475() -> (Tensor[(2496), float64],) {
  @func_7473() /* ty=(Tensor[(2496), float64],) */
}

def @func_9299() -> (Tensor[(13, 10, 2), float32],) {
  %814 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %817 = acos(%816) /* ty=Tensor[(13, 10, 2), float32] */;
  (%817,)
}

def @func_11219() -> (Tensor[(420), uint32],) {
  %819 = fn () -> (Tensor[(420), uint32],) {
    %818 = @func_9556() /* ty=Tensor[(420), uint32] */;
    (%818,)
  };
  %819() /* ty=(Tensor[(420), uint32],) */
}

def @func_2838(%var_2837: Tensor[(260), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) {
  %830 = fn (%var_2825: Tensor[(260), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) {
    %820 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
    %821 = cast(%var_2825, dtype="float64") /* ty=Tensor[(260), float64] */;
    %822 = reshape(%821, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
    %823 = @func_2784(%822) /* ty=Tensor[(13, 10, 2), int8] */;
    %824 = cast(%var_2825, dtype="bool") /* ty=Tensor[(260), bool] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(%823, dtype="bool") /* ty=Tensor[(13, 10, 2), bool] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %828 = %820.0;
    %829 = greater(%826, %827) /* ty=Tensor[(13, 10, 2), bool] */;
    (%828, %829)
  };
  %830(%var_2837) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */
}

def @func_9008() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  @func_9006() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_11118(%var_11113: Tensor[(16, 7, 10), int16], %var_11114: Tensor[(16, 7, 10), int16]) -> (Tensor[(16, 7, 10), int16],) {
  %831 = cast(%var_11114, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %832 = shape_of(%var_11113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%var_11113, dtype="int16") /* ty=Tensor[(16, 7, 10), int16] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %835 = bitwise_and(%833, %834) /* ty=Tensor[(16, 7, 10), int16] */;
  (%835,)
}

def @func_16324(%var_16322: Tensor[(15, 1, 9), uint64], %var_16323: Tensor[(15, 1, 9), uint64]) -> Tensor[(15, ?, 9), uint64] {
  %840 = fn (%var_16315: Tensor[(15, 1, 9), uint64], %var_16316: Tensor[(15, 1, 9), uint64]) -> Tensor[(15, ?, 9), uint64] {
    %836 = cast(%var_16316, dtype="uint64") /* ty=Tensor[(15, 1, 9), uint64] */;
    %837 = shape_of(%var_16315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %838 = cast(%var_16315, dtype="uint64") /* ty=Tensor[(15, 1, 9), uint64] */;
    %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    minimum(%838, %839) /* ty=Tensor[(15, ?, 9), uint64] */
  };
  %840(%var_16322, %var_16323) /* ty=Tensor[(15, ?, 9), uint64] */
}

def @func_11061() -> Tensor[(900), float32] {
  @func_11059() /* ty=Tensor[(900), float32] */
}

def @func_14307() -> (Tensor[(420), uint32],) {
  %842 = fn () -> (Tensor[(420), uint32],) {
    %841 = @func_5483() /* ty=Tensor[(420), uint32] */;
    (%841,)
  };
  %842() /* ty=(Tensor[(420), uint32],) */
}

def @func_14630(%var_14628: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(648), float64]) {
  @func_14627(%var_14628) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(648), float64]) */
}

def @func_9319() -> float32 {
  %844 = fn () -> float32 {
    %843 = @func_3967() /* ty=(float32,) */;
    %843.0
  };
  %844() /* ty=float32 */
}

def @func_16277() -> (Tensor[(260), float64],) {
  %845 = @func_7517() /* ty=(float32, Tensor[(15, 5, 12), float32], Tensor[(260), float64], Tensor[(420), uint32]) */;
  %846 = %845.2;
  (%846,)
}

def @func_14932() -> (Tensor[(900), float32],) {
  %849 = fn () -> (Tensor[(900), float32],) {
    %847 = @func_14530() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %848 = %847.1;
    (%848,)
  };
  %849() /* ty=(Tensor[(900), float32],) */
}

def @func_11414() -> (Tensor[(900), float32],) {
  %851 = fn () -> (Tensor[(900), float32],) {
    %850 = @func_6687() /* ty=Tensor[(900), float32] */;
    (%850,)
  };
  %851() /* ty=(Tensor[(900), float32],) */
}

def @func_16472() -> (Tensor[(420), uint32], Tensor[(900), float32]) {
  %855 = fn () -> (Tensor[(420), uint32], Tensor[(900), float32]) {
    %852 = @func_16198() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(16, 7, 10), float32]) */;
    %853 = @func_3527() /* ty=Tensor[(420), uint32] */;
    %854 = %852.0;
    (%853, %854)
  };
  %855() /* ty=(Tensor[(420), uint32], Tensor[(900), float32]) */
}

def @func_17303() -> Tensor[(900), float32] {
  %857 = fn () -> Tensor[(900), float32] {
    %856 = @func_6022() /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(15, 5, 12), float64], Tensor[(900), float32], Tensor[(15, 5, 12), int64], Tensor[(15, 5, 12), float32]) */;
    %856.2
  };
  %857() /* ty=Tensor[(900), float32] */
}

def @func_17807(%var_17796: Tensor[(9, 1, 8), float32]) -> (Tensor[(9, 1, 8), float32], Tensor[(900), float32]) {
  %858 = cast(%var_17796, dtype="float32") /* ty=Tensor[(9, 1, 8), float32] */;
  %859 = @func_2507() /* ty=(Tensor[(900), float32],) */;
  %860 = exp(%858) /* ty=Tensor[(9, 1, 8), float32] */;
  %861 = %859.0;
  (%860, %861)
}

def @func_6688() -> Tensor[(900), float32] {
  %863 = fn () -> Tensor[(900), float32] {
    %862 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %862.0
  };
  %863() /* ty=Tensor[(900), float32] */
}

def @func_5647() -> float32 {
  @func_3307() /* ty=float32 */
}

def @func_10536(%var_10535: Tensor[(1, 8, 10), float64]) -> (Tensor[(420), uint32], Tensor[(?, 8, 10), bool]) {
  %874 = fn (%var_10485: Tensor[(1, 8, 10), float64]) -> (Tensor[(420), uint32], Tensor[(?, 8, 10), bool]) {
    %864 = cast(%var_10485, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
    %865 = cosh(%864) /* ty=Tensor[(1, 8, 10), float64] */;
    %866 = cast(%var_10485, dtype="float64") /* ty=Tensor[(1, 8, 10), float64] */;
    %867 = acosh(%866) /* ty=Tensor[(1, 8, 10), float64] */;
    %868 = cast(%867, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
    %869 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
    %870 = cast(%865, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %872 = @func_5483() /* ty=Tensor[(420), uint32] */;
    %873 = logical_and(%870, %871) /* ty=Tensor[(?, 8, 10), bool] */;
    (%872, %873)
  };
  %874(%var_10535) /* ty=(Tensor[(420), uint32], Tensor[(?, 8, 10), bool]) */
}

def @func_4756() -> (float32, Tensor[(900), float32], Tensor[(420), uint32]) {
  %875 = @func_3967() /* ty=(float32,) */;
  %876 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %877 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %878 = %875.0;
  %879 = %876.0;
  %880 = %877.1;
  (%878, %879, %880)
}

def @func_5543(%var_5507: Tensor[(16, 12, 13), float64]) -> (Tensor[(16, 12, 13), uint16],) {
  %881 = cast(%var_5507, dtype="float64") /* ty=Tensor[(16, 12, 13), float64] */;
  %882 = sinh(%881) /* ty=Tensor[(16, 12, 13), float64] */;
  %883 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 12, 13), float64] */, dtype="uint16") /* ty=Tensor[(16, 12, 13), uint16] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="uint16") /* ty=Tensor[(16, 12, 13), uint16] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %887 = logical_xor(%885, %886) /* ty=Tensor[(16, 12, 13), uint16] */;
  (%887,)
}

def @func_2924() -> Tensor[(900), float32] {
  %888 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %888.0
}

def @func_9039(%var_9023: Tensor[(14, 6, 6), float64]) -> (Tensor[(14, 6, 6), float64],) {
  %889 = cast(%var_9023, dtype="float64") /* ty=Tensor[(14, 6, 6), float64] */;
  %890 = log2(%889) /* ty=Tensor[(14, 6, 6), float64] */;
  (%890,)
}

def @func_4312(%var_4243: uint16, %var_4254: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) {
  %891 = cast(%var_4254, dtype="float64") /* ty=Tensor[(720), float64] */;
  %892 = reshape(%891, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %893 = @func_3105(%892) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %894 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %895 = cast(%var_4243, dtype="bool") /* ty=bool */;
  %896 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1, 7), uint16] */, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
  %897 = greater(%895, %896) /* ty=Tensor[(1, 1, 7), bool] */;
  %898 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1, 7), uint16] */, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %902 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %903 = %902.0;
  %904 = cast(%903, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %905 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %906 = %893.5;
  %907 = %894.2;
  %908 = mod(%900, %901) /* ty=Tensor[(?, ?, 7), float32] */;
  %909 = log10(%904) /* ty=Tensor[(13, 10, 2), float64] */;
  (%905, %906, %var_4254, %907, %908, %909)
}

def @func_5962(%var_5923: Tensor[(13, 10, 2), float64]) -> (Tensor[(13, 10, 2), float32], Tensor[(900), float32]) {
  %910 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %911 = %910.0;
  %912 = cast(%var_5923, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%911, dtype="float32") /* ty=Tensor[(13, 10, 2), float32] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %916 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %917 = floor_divide(%914, %915) /* ty=Tensor[(13, 10, 2), float32] */;
  %918 = %916.0;
  (%917, %918)
}

def @func_7032(%var_7030: int64, %var_7031: Tensor[(14, 9, 15), int64]) -> (Tensor[(14, 9, 15), bool], Tensor[(420), uint32], Tensor[(900), float32]) {
  @func_7028(%var_7030, %var_7031) /* ty=(Tensor[(14, 9, 15), bool], Tensor[(420), uint32], Tensor[(900), float32]) */
}

def @func_9803() -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(420), uint32]) {
  %919 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
  %920 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %921 = reshape(%920, newshape=[420]) /* ty=Tensor[(420), uint32] */;
  %922 = @func_2098(%921) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], float32, Tensor[(3, 52), float64]) */;
  %923 = %919.0;
  %924 = %922.1;
  (%923, %924, meta[relay.Constant][33] /* ty=Tensor[(420), uint32] */)
}

def @func_4944() -> (Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) {
  @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */
}

def @func_3342() -> (float32,) {
  %925 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %926 = %925.1;
  (%926,)
}

def @func_2370() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
  @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */
}

def @func_8045() -> (Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) {
  %931 = fn () -> (Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) {
    %927 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %928 = @func_7094() /* ty=(Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) */;
    %929 = %927.0;
    %930 = %928.2;
    (%929, %930)
  };
  %931() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */
}

def @func_6638() -> Tensor[(420), uint32] {
  %933 = fn () -> Tensor[(420), uint32] {
    %932 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
    %932.0
  };
  %933() /* ty=Tensor[(420), uint32] */
}

def @func_2892() -> (Tensor[(15, 5, 12), int64],) {
  %934 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %935 = %934.0;
  %936 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="int64") /* ty=Tensor[(900), int64] */;
  %939 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%935, dtype="int64") /* ty=Tensor[(15, 5, 12), int64] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %942 = right_shift(%940, %941) /* ty=Tensor[(15, 5, 12), int64] */;
  (%942,)
}

def @func_2740() -> Tensor[(13, 10, 2), float64] {
  %943 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  sinh(%943) /* ty=Tensor[(13, 10, 2), float64] */
}

def @func_17790() -> Tensor[(900), float32] {
  @func_11059() /* ty=Tensor[(900), float32] */
}

def @func_17843() -> (Tensor[(420), uint32],) {
  @func_17841() /* ty=(Tensor[(420), uint32],) */
}

def @func_14627(%var_14621: Tensor[(648), float64]) -> (Tensor[(15, 5, 12), float32], Tensor[(420), uint32], Tensor[(648), float64]) {
  %944 = cast(%var_14621, dtype="float64") /* ty=Tensor[(648), float64] */;
  %945 = reshape(%944, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %946 = @func_5872(%945) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(420), uint32]) */;
  %947 = @func_10381() /* ty=Tensor[(15, 5, 12), float32] */;
  %948 = %946.5;
  (%947, %948, %var_14621)
}

def @func_2894() -> (Tensor[(15, 5, 12), int64],) {
  @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */
}

def @func_16279() -> (Tensor[(260), float64],) {
  @func_16277() /* ty=(Tensor[(260), float64],) */
}

def @func_16778() -> Tensor[(900), float32] {
  @func_16776() /* ty=Tensor[(900), float32] */
}

def @func_17792() -> Tensor[(900), float32] {
  @func_17790() /* ty=Tensor[(900), float32] */
}

def @func_10576() -> Tensor[(900), float32] {
  %949 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %949.0
}

def @func_11122(%var_11120: Tensor[(16, 7, 10), int16], %var_11121: Tensor[(16, 7, 10), int16]) -> (Tensor[(16, 7, 10), int16],) {
  @func_11118(%var_11120, %var_11121) /* ty=(Tensor[(16, 7, 10), int16],) */
}

def @func_8077() -> (Tensor[(13, 10, 2), float64], Tensor[(3, 1, 16), float64], Tensor[(48), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %950 = @func_4035() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %951 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %952 = reshape(%951, newshape=[3, 1, 16]) /* ty=Tensor[(3, 1, 16), float64] */;
  %953 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %954 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %955 = %950.0;
  %956 = @func_7778(%952) /* ty=Tensor[(3, 1, 16), float64] */;
  %957 = @func_4718() /* ty=Tensor[(900), float32] */;
  %958 = %953.0;
  %959 = @func_7709() /* ty=Tensor[(900), float32] */;
  %960 = %954.1;
  (%955, %956, meta[relay.Constant][35] /* ty=Tensor[(48), float64] */, %957, %958, %959, %960)
}

def @func_16957() -> (Tensor[(900), float32],) {
  %963 = fn () -> (Tensor[(900), float32],) {
    %961 = @func_13171() /* ty=(Tensor[(900), float32],) */;
    %962 = %961.0;
    (%962,)
  };
  %963() /* ty=(Tensor[(900), float32],) */
}

def @func_7551() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  @func_7549() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */
}

def @func_4442(%var_4438: Tensor[(6, 8, 3), int64], %var_4439: Tensor[(6, 8, 3), int64], %var_4440: float32, %var_4441: Tensor[(13, 156), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) {
  %1005 = fn (%var_4354: Tensor[(6, 8, 3), int64], %var_4355: Tensor[(6, 8, 3), int64], %var_4370: float32, %var_4420: Tensor[(13, 156), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) {
    %964 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
    %965 = %964.0;
    %966 = cast(%965, dtype="uint32") /* ty=Tensor[(420), uint32] */;
    %967 = cast(%var_4370, dtype="float32") /* ty=float32 */;
    %968 = cast(meta[relay.Constant][36] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %969 = reshape(%966, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
    %970 = reshape(%967, newshape=[]) /* ty=float32 */;
    %971 = reshape(%968, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
    %972 = @func_663(%969, %970, %971) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
    %973 = %972.3;
    %974 = cast(%973, dtype="float32") /* ty=Tensor[(1, 156), float32] */;
    %975 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %976 = reshape(%975, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
    %977 = @func_3105(%976) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
    %978 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %979 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %980 = reshape(%979, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
    %981 = @func_3105(%980) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
    %982 = cast(%var_4355, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
    %983 = shape_of(%var_4354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(%var_4354, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %986 = less(%984, %985) /* ty=Tensor[(6, 8, 3), bool] */;
    %987 = cast(%986, dtype="int16") /* ty=Tensor[(6, 8, 3), int16] */;
    %988 = cast(%var_4370, dtype="int16") /* ty=int16 */;
    %989 = @func_3634() /* ty=(Tensor[(900), float32],) */;
    %990 = cast(%973, dtype="float64") /* ty=Tensor[(1, 156), float64] */;
    %991 = erf(%990) /* ty=Tensor[(1, 156), float64] */;
    %992 = cast(%991, dtype="bool") /* ty=Tensor[(1, 156), bool] */;
    %993 = cast(%var_4420, dtype="bool") /* ty=Tensor[(13, 156), bool] */;
    %994 = equal(%992, %993) /* ty=Tensor[(13, 156), bool] */;
    %995 = cast(%991, dtype="int32") /* ty=Tensor[(1, 156), int32] */;
    %996 = cast(%994, dtype="int32") /* ty=Tensor[(13, 156), int32] */;
    %997 = atan(%974) /* ty=Tensor[(1, 156), float32] */;
    %998 = %977.5;
    %999 = sinh(%978) /* ty=Tensor[(4, 180), float64] */;
    %1000 = %981.1;
    %1001 = logical_xor(%987, %988) /* ty=Tensor[(6, 8, 3), int16] */;
    %1002 = %989.0;
    %1003 = @func_3307() /* ty=float32 */;
    %1004 = subtract(%995, %996) /* ty=Tensor[(13, 156), int32] */;
    (%965, meta[relay.Constant][36] /* ty=Tensor[(156), float32] */, %997, %998, %999, %1000, %1001, %1002, %1003, %1004)
  };
  %1005(%var_4438, %var_4439, %var_4440, %var_4441) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(1, 156), float32], Tensor[(156), float32], Tensor[(4, 180), float64], float32, Tensor[(6, 8, 3), int16], Tensor[(900), float32], float32, Tensor[(13, 156), int32]) */
}

def @func_3498() -> (Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) {
  %1006 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %1007 = cast(meta[relay.Constant][38] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1008 = reshape(%1007, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float64] */;
  %1009 = @func_3105(%1008) /* ty=(Tensor[(6, 8, 15), float64], float32, uint32, Tensor[(6, 5, 14), bool], Tensor[(420), uint32], Tensor[(156), float32]) */;
  %1010 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1011 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1012 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %1013 = %1006.0;
  %1014 = %1009.0;
  %1015 = %1010.0;
  %1016 = %1011.0;
  %1017 = %1012.0;
  %1018 = @func_3307() /* ty=float32 */;
  (%1013, %1014, meta[relay.Constant][38] /* ty=Tensor[(720), float64] */, %1015, %1016, %1017, %1018)
}

def @func_13171() -> (Tensor[(900), float32],) {
  %1019 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1020 = %1019.0;
  (%1020,)
}

def @func_7813() -> (Tensor[(3, 10, 9), float32],) {
  %1023 = fn () -> (Tensor[(3, 10, 9), float32],) {
    %1021 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
    %1022 = atan(%1021) /* ty=Tensor[(3, 10, 9), float32] */;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(3, 10, 9), float32],) */
}

def @func_3912() -> Tensor[(900), float32] {
  %1024 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1024.0
}

def @func_10359() -> Tensor[(900), float32] {
  @func_10357() /* ty=Tensor[(900), float32] */
}

def @func_13939(%var_13919: float32) -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(900), float32]) {
  %1025 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1026 = @func_11379() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
  %1027 = %1026.1;
  %1028 = cast(%1027, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %1029 = reshape(%1028, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1030 = @func_2836(%1029) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(13, 10, 2), bool]) */;
  %1031 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %1032 = @func_4853() /* ty=(Tensor[(900), float32],) */;
  %1033 = cast(%var_13919, dtype="float32") /* ty=float32 */;
  %1034 = reshape(%1033, newshape=[]) /* ty=float32 */;
  %1035 = @func_525(%1034) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %1036 = @func_4582() /* ty=(Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) */;
  %1037 = %1025.0;
  %1038 = %1030.0;
  %1039 = %1031.1;
  %1040 = %1032.0;
  %1041 = %1035.1;
  %1042 = %1036.3;
  (%1037, %1027, %1038, %1039, %1040, %1041, %var_13919, %1042)
}

def @func_13806() -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
  @func_13804() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(900), float32]) */
}

def @func_9881() -> Tensor[(3, 10, 9), float32] {
  %1044 = fn () -> Tensor[(3, 10, 9), float32] {
    %1043 = @func_7812() /* ty=(Tensor[(3, 10, 9), float32],) */;
    %1043.0
  };
  %1044() /* ty=Tensor[(3, 10, 9), float32] */
}

def @func_3230() -> (Tensor[(13, 10, 2), float32],) {
  @func_3228() /* ty=(Tensor[(13, 10, 2), float32],) */
}

def @func_3635() -> (Tensor[(900), float32],) {
  %1047 = fn () -> (Tensor[(900), float32],) {
    %1045 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1046 = %1045.0;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(900), float32],) */
}

def @func_5091() -> (Tensor[(13, 10, 2), float64],) {
  %1048 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %1049 = %1048.0;
  %1050 = cast(%1049, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %1051 = cos(%1050) /* ty=Tensor[(13, 10, 2), float64] */;
  (%1051,)
}

def @func_9301() -> (Tensor[(13, 10, 2), float32],) {
  @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */
}

def @func_5760() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %1052 = @func_5563() /* ty=(Tensor[(900), float32],) */;
  %1053 = @func_4718() /* ty=Tensor[(900), float32] */;
  %1054 = %1052.0;
  (%1053, %1054)
}

def @func_9755(%var_9753: float32, %var_9754: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32], Tensor[(156), float32], Tensor[(2028), float64]) {
  @func_9751(%var_9753, %var_9754) /* ty=(Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32], Tensor[(156), float32], Tensor[(2028), float64]) */
}

def @func_12274() -> (Tensor[(2, 12, 14), int64],) {
  @func_12272() /* ty=(Tensor[(2, 12, 14), int64],) */
}

def @func_15216(%var_15205: Tensor[(156), float32]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32], Tensor[(156), float32], float32) {
  %1055 = @func_13429() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1056 = @func_9299() /* ty=(Tensor[(13, 10, 2), float32],) */;
  %1057 = cast(%var_15205, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1058 = reshape(%1057, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1059 = @func_6981(%1058) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %1060 = @func_3967() /* ty=(float32,) */;
  %1061 = %1055.0;
  %1062 = %1056.0;
  %1063 = %1059.0;
  %1064 = %1060.0;
  (%1061, %1062, %1063, %var_15205, %1064)
}

def @func_10395() -> (Tensor[(16, 15, 4), float32],) {
  @func_10393() /* ty=(Tensor[(16, 15, 4), float32],) */
}

def @func_13431() -> (Tensor[(13, 10, 2), float64],) {
  @func_13429() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_2926() -> Tensor[(900), float32] {
  @func_2924() /* ty=Tensor[(900), float32] */
}

def @func_4080() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %1065 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %1066 = @func_3634() /* ty=(Tensor[(900), float32],) */;
  %1067 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1068 = %1065.0;
  %1069 = @func_3912() /* ty=Tensor[(900), float32] */;
  %1070 = %1066.0;
  %1071 = %1067.0;
  (%1068, %1069, %1070, %1071)
}

def @func_8719() -> (Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) {
  @func_8717() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) */
}

def @func_17437(%var_17436: Tensor[(3, 15, 2), float64]) -> Tensor[(3, 15, 2), float64] {
  %1073 = fn (%var_17430: Tensor[(3, 15, 2), float64]) -> Tensor[(3, 15, 2), float64] {
    %1072 = cast(%var_17430, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
    rsqrt(%1072) /* ty=Tensor[(3, 15, 2), float64] */
  };
  %1073(%var_17436) /* ty=Tensor[(3, 15, 2), float64] */
}

def @func_6660() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */
}

def @func_6568() -> (Tensor[(13, 10, 2), float64],) {
  %1076 = fn () -> (Tensor[(13, 10, 2), float64],) {
    %1074 = @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %1075 = %1074.0;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_4170() -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) {
  %1077 = cast(meta[relay.Constant][40] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1078 = reshape(%1077, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %1079 = @func_2517(%1078) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %1080 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
  %1081 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %1082 = %1079.0;
  (%1080, %1081, %1082, meta[relay.Constant][40] /* ty=Tensor[(648), float64] */)
}

def @func_7710() -> Tensor[(900), float32] {
  %1084 = fn () -> Tensor[(900), float32] {
    %1083 = @func_5424() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */;
    %1083.0
  };
  %1084() /* ty=Tensor[(900), float32] */
}

def @func_10008() -> Tensor[(420), uint32] {
  %1085 = @func_8617() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(420), uint32]) */;
  %1085.2
}

def @func_9951() -> (Tensor[(15, 5, 12), int8], Tensor[(15, 5, 12), bool], Tensor[(5, 84), uint32], Tensor[(156), float32], Tensor[(900), float32], Tensor[(72, 2), int64], Tensor[(3), uint32], Tensor[(12, 13, 1), float32], float32) {
  @func_9949() /* ty=(Tensor[(15, 5, 12), int8], Tensor[(15, 5, 12), bool], Tensor[(5, 84), uint32], Tensor[(156), float32], Tensor[(900), float32], Tensor[(72, 2), int64], Tensor[(3), uint32], Tensor[(12, 13, 1), float32], float32) */
}

def @func_14487() -> (Tensor[(900), float32], Tensor[(15, 5, 12), int64]) {
  %1088 = fn () -> (Tensor[(900), float32], Tensor[(15, 5, 12), int64]) {
    %1086 = @func_7709() /* ty=Tensor[(900), float32] */;
    %1087 = @func_11329() /* ty=Tensor[(15, 5, 12), int64] */;
    (%1086, %1087)
  };
  %1088() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), int64]) */
}

def @func_15400(%var_15398: Tensor[(4, 7, 13), bool], %var_15399: Tensor[(4, 7, 13), bool]) -> Tensor[(4, 7, 13), bool] {
  %1093 = fn (%var_15387: Tensor[(4, 7, 13), bool], %var_15388: Tensor[(4, 7, 13), bool]) -> Tensor[(4, 7, 13), bool] {
    %1089 = cast(%var_15388, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
    %1090 = shape_of(%var_15387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(%var_15387, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1091, %1092) /* ty=Tensor[(4, 7, 13), bool] */
  };
  %1093(%var_15398, %var_15399) /* ty=Tensor[(4, 7, 13), bool] */
}

def @func_10236() -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) {
  %1101 = fn () -> (Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) {
    %1094 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %1095 = @func_3762() /* ty=(Tensor[(900), float32],) */;
    %1096 = %1094.0;
    %1097 = @func_9556() /* ty=Tensor[(420), uint32] */;
    %1098 = %1095.0;
    %1099 = @func_9318() /* ty=float32 */;
    %1100 = @func_9556() /* ty=Tensor[(420), uint32] */;
    (%1096, %1097, %1098, %1099, %1100)
  };
  %1101() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(420), uint32], Tensor[(900), float32], float32, Tensor[(420), uint32]) */
}

def @func_2786(%var_2785: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), int8] {
  %1107 = fn (%var_2774: Tensor[(13, 10, 2), float64]) -> Tensor[(13, 10, 2), int8] {
    %1102 = @func_2740() /* ty=Tensor[(13, 10, 2), float64] */;
    %1103 = cast(%var_2774, dtype="int8") /* ty=Tensor[(13, 10, 2), int8] */;
    %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%1102, dtype="int8") /* ty=Tensor[(13, 10, 2), int8] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    left_shift(%1105, %1106) /* ty=Tensor[(13, 10, 2), int8] */
  };
  %1107(%var_2785) /* ty=Tensor[(13, 10, 2), int8] */
}

def @func_4533() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %1111 = fn () -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
    %1108 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1109 = @func_3284() /* ty=Tensor[(900), float32] */;
    %1110 = %1108.1;
    (%1109, %1110)
  };
  %1111() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_13429() -> (Tensor[(13, 10, 2), float64],) {
  %1112 = @func_4035() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_3271() -> (Tensor[(900), float32],) {
  %1114 = @func_2924() /* ty=Tensor[(900), float32] */;
  (%1114,)
}

def @func_13477() -> (Tensor[(15, 5, 12), float32],) {
  %1115 = @func_5042() /* ty=(Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) */;
  %1116 = %1115.1;
  (%1116,)
}

def @func_13087(%var_13085: Tensor[(16, 12, 13), uint16]) -> (Tensor[(16, 12, 13), float64], Tensor[(900), float32], Tensor[(16, 12, 13), uint8], Tensor[(16, 12, 13), float32]) {
  @func_13084(%var_13085) /* ty=(Tensor[(16, 12, 13), float64], Tensor[(900), float32], Tensor[(16, 12, 13), uint8], Tensor[(16, 12, 13), float32]) */
}

def @func_3585() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_4583() -> (Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) {
  %1124 = fn () -> (Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) {
    %1117 = cast(meta[relay.Constant][41] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1118 = reshape(%1117, newshape=[]) /* ty=uint32 */;
    %1119 = @func_2667(%1118) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */;
    %1120 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1121 = @func_2924() /* ty=Tensor[(900), float32] */;
    %1122 = %1119.2;
    %1123 = %1120.1;
    (%1121, %1122, meta[relay.Constant][41] /* ty=uint32 */, %1123)
  };
  %1124() /* ty=(Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) */
}

def @func_14198() -> Tensor[(900), float32] {
  %1125 = fn () -> Tensor[(900), float32] {
    @func_7709() /* ty=Tensor[(900), float32] */
  };
  %1125() /* ty=Tensor[(900), float32] */
}

def @func_2389() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_5425() -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
  %1130 = fn () -> (Tensor[(900), float32], Tensor[(13, 10, 2), float64]) {
    %1126 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1127 = @func_5248() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
    %1128 = %1126.0;
    %1129 = %1127.0;
    (%1128, %1129)
  };
  %1130() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float64]) */
}

def @func_10578() -> Tensor[(900), float32] {
  @func_10576() /* ty=Tensor[(900), float32] */
}

def @func_1352(%var_1351: Tensor[(15, 5, 12), float32]) -> Tensor[(15, 5, 12), float32] {
  %1132 = fn (%var_1342: Tensor[(15, 5, 12), float32]) -> Tensor[(15, 5, 12), float32] {
    %1131 = cast(%var_1342, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
    asinh(%1131) /* ty=Tensor[(15, 5, 12), float32] */
  };
  %1132(%var_1351) /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_10695() -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
  %1137 = fn () -> (Tensor[(15, 5, 12), float32], Tensor[(900), float32]) {
    %1133 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1134 = @func_5760() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %1135 = %1133.1;
    %1136 = %1134.0;
    (%1135, %1136)
  };
  %1137() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */
}

def @func_9209() -> (Tensor[(900), float32],) {
  @func_9207() /* ty=(Tensor[(900), float32],) */
}

def @func_2235(%var_2234: Tensor[(156), float32]) -> (Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
  %1146 = fn (%var_2224: Tensor[(156), float32]) -> (Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
    %1138 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
    %1139 = cast(-7.5856f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1140 = cast(%var_2224, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1141 = reshape(%1139, newshape=[]) /* ty=float32 */;
    %1142 = reshape(%1140, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
    %1143 = @func_333(%1141, %1142) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
    %1144 = %1138.0;
    %1145 = %1143.0;
    (%1144, %1145, -7.5856f /* ty=float32 */, %var_2224)
  };
  %1146(%var_2234) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */
}

def @func_10924() -> (float32, Tensor[(900), float32]) {
  %1150 = fn () -> (float32, Tensor[(900), float32]) {
    %1147 = @func_3967() /* ty=(float32,) */;
    %1148 = %1147.0;
    %1149 = @func_3284() /* ty=Tensor[(900), float32] */;
    (%1148, %1149)
  };
  %1150() /* ty=(float32, Tensor[(900), float32]) */
}

def @func_9949() -> (Tensor[(15, 5, 12), int8], Tensor[(15, 5, 12), bool], Tensor[(5, 84), uint32], Tensor[(156), float32], Tensor[(900), float32], Tensor[(72, 2), int64], Tensor[(3), uint32], Tensor[(12, 13, 1), float32], float32) {
  %1151 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1152 = %1151.0;
  %1153 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 5, 12), float32] */, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %1154 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%1152, dtype="int8") /* ty=Tensor[(15, 5, 12), int8] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1157 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 5, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %1158 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1159 = cast(%1152, dtype="bool") /* ty=Tensor[(15, 5, 12), bool] */;
  %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1161 = cast(meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1162 = reshape(%1161, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1163 = @func_6981(%1162) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %1164 = cast(meta[relay.Constant][44] /* ty=Tensor[(72, 2), int64] */, dtype="int64") /* ty=Tensor[(72, 2), int64] */;
  %1165 = cast(meta[relay.Constant][45] /* ty=Tensor[(3), uint32] */, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %1166 = reshape(%1164, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %1167 = reshape(%1165, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %1168 = @func_6802(%1166, %1167) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) */;
  %1169 = cast(1.18796f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1170 = cast(meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1171 = reshape(%1169, newshape=[]) /* ty=float32 */;
  %1172 = reshape(%1170, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %1173 = @func_333(%1171, %1172) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %1174 = bitwise_or(%1155, %1156) /* ty=Tensor[(15, 5, 12), int8] */;
  %1175 = equal(%1159, %1160) /* ty=Tensor[(15, 5, 12), bool] */;
  %1176 = %1163.6;
  %1177 = %1168.5;
  %1178 = %1173.0;
  (%1174, %1175, %1176, meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, %1177, meta[relay.Constant][44] /* ty=Tensor[(72, 2), int64] */, meta[relay.Constant][45] /* ty=Tensor[(3), uint32] */, %1178, 1.18796f /* ty=float32 */)
}

def @func_17810(%var_17808: Tensor[(9, 1, 8), float32]) -> (Tensor[(9, 1, 8), float32], Tensor[(900), float32]) {
  @func_17807(%var_17808) /* ty=(Tensor[(9, 1, 8), float32], Tensor[(900), float32]) */
}

def @func_9858() -> (Tensor[(900), float32],) {
  %1179 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1180 = %1179.0;
  (%1180,)
}

def @func_14043() -> (float32, Tensor[(2496), float64]) {
  %1185 = fn () -> (float32, Tensor[(2496), float64]) {
    %1181 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
    %1182 = @func_8044() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(2496), float64]) */;
    %1183 = %1181.1;
    %1184 = %1182.1;
    (%1183, %1184)
  };
  %1185() /* ty=(float32, Tensor[(2496), float64]) */
}

def @func_4855() -> (Tensor[(900), float32],) {
  @func_4853() /* ty=(Tensor[(900), float32],) */
}

def @func_5212() -> Tensor[(900), float32] {
  %1187 = fn () -> Tensor[(900), float32] {
    %1186 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
    %1186.2
  };
  %1187() /* ty=Tensor[(900), float32] */
}

def @func_11770(%var_11768: Tensor[(4, 36), int64], %var_11769: Tensor[(3, 1), uint32]) -> (Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) {
  @func_11766(%var_11768, %var_11769) /* ty=(Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) */
}

def @func_528(%var_526: float32) -> (Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
  @func_525(%var_526) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */
}

def @func_7173() -> (Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) {
  @func_7171() /* ty=(Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) */
}

def @func_16944() -> Tensor[(900), float32] {
  %1189 = fn () -> Tensor[(900), float32] {
    %1188 = @func_14931() /* ty=(Tensor[(900), float32],) */;
    %1188.0
  };
  %1189() /* ty=Tensor[(900), float32] */
}

def @func_16625() -> (Tensor[(900), float32], Tensor[(420), uint32]) {
  %1190 = @func_15827() /* ty=(Tensor[(900), float32], Tensor[(13, 10, 2), float32], Tensor[(900), float32]) */;
  %1191 = @func_15089() /* ty=(Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) */;
  %1192 = %1190.2;
  %1193 = %1191.1;
  (%1192, %1193)
}

def @func_7094() -> (Tensor[(900), float32], Tensor[(16, 12, 13), uint16], Tensor[(2496), float64]) {
  %1194 = @func_6658() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1195 = cast(meta[relay.Constant][46] /* ty=Tensor[(2496), float64] */, dtype="float64") /* ty=Tensor[(2496), float64] */;
  %1196 = reshape(%1195, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), float64] */;
  %1197 = @func_5543(%1196) /* ty=(Tensor[(16, 12, 13), uint16],) */;
  %1198 = %1194.1;
  %1199 = %1197.0;
  (%1198, %1199, meta[relay.Constant][46] /* ty=Tensor[(2496), float64] */)
}

def @func_15963() -> (Tensor[(15, 5, 12), float32], float32) {
  %1203 = fn () -> (Tensor[(15, 5, 12), float32], float32) {
    %1200 = @func_13477() /* ty=(Tensor[(15, 5, 12), float32],) */;
    %1201 = %1200.0;
    %1202 = @func_8903() /* ty=float32 */;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(15, 5, 12), float32], float32) */
}

def @func_3309() -> float32 {
  @func_3307() /* ty=float32 */
}

def @func_15219(%var_15217: Tensor[(156), float32]) -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32], Tensor[(156), float32], float32) {
  @func_15216(%var_15217) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float32], Tensor[(900), float32], Tensor[(156), float32], float32) */
}

def @func_10010() -> Tensor[(420), uint32] {
  @func_10008() /* ty=Tensor[(420), uint32] */
}

def @func_2368() -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) {
  %1204 = @func_2013() /* ty=(Tensor[(900), float32],) */;
  %1205 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %1206 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
  %1207 = %1206.0;
  %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
  %1209 = cos(%1208) /* ty=Tensor[(15, 5, 12), float32] */;
  %1210 = cast(%1209, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %1211 = %1204.0;
  %1212 = %1205.1;
  %1213 = sinh(%1210) /* ty=Tensor[(15, 5, 12), float64] */;
  (%1211, %1212, %1213)
}

def @func_13760(%var_13758: Tensor[(13, 13, 1), uint64], %var_13759: Tensor[(13, 13, 9), uint64]) -> (Tensor[(13, 13, 9), uint64],) {
  @func_13756(%var_13758, %var_13759) /* ty=(Tensor[(13, 13, 9), uint64],) */
}

def @func_13983(%var_13981: Tensor[(1, 8, 1), int32], %var_13982: Tensor[(5, 8, 2), int32]) -> Tensor[(5, 8, 2), int32] {
  @func_13979(%var_13981, %var_13982) /* ty=Tensor[(5, 8, 2), int32] */
}

def @func_336(%var_334: float32, %var_335: Tensor[(12, 13, 1), float32]) -> (Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) {
  %1220 = fn (%var_319: float32, %var_320: Tensor[(12, 13, 1), float32]) -> (Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) {
    %1214 = cast(%var_319, dtype="float32") /* ty=float32 */;
    %1215 = cast(%var_320, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
    %1216 = cast(%var_320, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
    %1217 = cast(%var_319, dtype="bool") /* ty=bool */;
    %1218 = minimum(%1214, %1215) /* ty=Tensor[(12, 13, 1), float32] */;
    %1219 = not_equal(%1216, %1217) /* ty=Tensor[(12, 13, 1), bool] */;
    (%1218, %1219)
  };
  %1220(%var_334, %var_335) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */
}

def @func_9164(%var_9162: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) {
  %1221 = @func_4942() /* ty=(Tensor[(16, 9, 12), float32], Tensor[(13, 10, 2), float64]) */;
  %1222 = %1221.1;
  %1223 = cast(%1222, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %1224 = cast(%var_9162, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1225 = reshape(%1223, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
  %1226 = reshape(%1224, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %1227 = @func_7241(%1225, %1226) /* ty=(float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %1228 = %1227.1;
  (%1222, %1228, %var_9162)
}

def @func_11059() -> Tensor[(900), float32] {
  @func_9693() /* ty=Tensor[(900), float32] */
}

def @func_17076(%var_17074: Tensor[(3), uint32]) -> (float32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(4, 36), float64]) {
  @func_17073(%var_17074) /* ty=(float32, Tensor[(3), uint32], Tensor[(900), float32], Tensor[(4, 36), float64]) */
}

def @func_3583() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %1229 = @func_3271() /* ty=(Tensor[(900), float32],) */;
  %1230 = %1229.0;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1232 = reshape(%1231, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float32] */;
  %1233 = @func_1350(%1232) /* ty=Tensor[(15, 5, 12), float32] */;
  (%1230, %1233)
}

def @func_12587() -> Tensor[(420), uint32] {
  %1235 = fn () -> Tensor[(420), uint32] {
    %1234 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %1234.2
  };
  %1235() /* ty=Tensor[(420), uint32] */
}

def @func_525(%var_520: float32) -> (Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) {
  %1236 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 6), float64] */;
  %1237 = cast(%var_520, dtype="float32") /* ty=float32 */;
  %1238 = cast(meta[relay.Constant][48] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1239 = reshape(%1237, newshape=[]) /* ty=float32 */;
  %1240 = reshape(%1238, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %1241 = @func_333(%1239, %1240) /* ty=(Tensor[(12, 13, 1), float32], Tensor[(12, 13, 1), bool]) */;
  %1242 = sin(%1236) /* ty=Tensor[(3, 15, 6), float64] */;
  %1243 = %1241.0;
  (%1242, %1243, %var_520, meta[relay.Constant][48] /* ty=Tensor[(156), float32] */)
}

def @func_11331() -> Tensor[(15, 5, 12), int64] {
  @func_11329() /* ty=Tensor[(15, 5, 12), int64] */
}

def @func_6805(%var_6803: Tensor[(2, 72), int64], %var_6804: Tensor[(1, 3), uint32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) {
  %1262 = fn (%var_6774: Tensor[(2, 72), int64], %var_6793: Tensor[(1, 3), uint32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) {
    %1244 = cast(%var_6774, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
    %1245 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 2028), float64] */, dtype="float64") /* ty=Tensor[(1, 2028), float64] */;
    %1246 = reshape(%1244, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %1247 = reshape(%1245, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %1248 = @func_6486(%1246, %1247) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
    %1249 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %1250 = @func_2368() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float64]) */;
    %1251 = cast(meta[relay.Constant][50] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1252 = cast(%var_6793, dtype="uint32") /* ty=Tensor[(1, 3), uint32] */;
    %1253 = reshape(%1251, newshape=[]) /* ty=uint32 */;
    %1254 = reshape(%1252, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
    %1255 = @func_5211() /* ty=Tensor[(900), float32] */;
    %1256 = %1248.0;
    %1257 = %1249.0;
    %1258 = %1250.0;
    %1259 = @func_732(%1253, %1254) /* ty=Tensor[(1, 3), bool] */;
    %1260 = @func_2924() /* ty=Tensor[(900), float32] */;
    %1261 = @func_5483() /* ty=Tensor[(420), uint32] */;
    (%1255, %1256, %var_6774, meta[relay.Constant][49] /* ty=Tensor[(1, 2028), float64] */, %1257, %1258, %1259, meta[relay.Constant][50] /* ty=uint32 */, %var_6793, %1260, %1261)
  };
  %1262(%var_6803, %var_6804) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) */
}

def @func_7888() -> Tensor[(900), float32] {
  %1264 = fn () -> Tensor[(900), float32] {
    %1263 = @func_2013() /* ty=(Tensor[(900), float32],) */;
    %1263.0
  };
  %1264() /* ty=Tensor[(900), float32] */
}

def @func_4036() -> (Tensor[(13, 10, 2), float64],) {
  %1267 = fn () -> (Tensor[(13, 10, 2), float64],) {
    %1265 = @func_3948() /* ty=(Tensor[(13, 10, 2), float64],) */;
    %1266 = %1265.0;
    (%1266,)
  };
  %1267() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_13173() -> (Tensor[(900), float32],) {
  @func_13171() /* ty=(Tensor[(900), float32],) */
}

def @func_12124() -> (Tensor[(900), float32],) {
  %1268 = @func_7709() /* ty=Tensor[(900), float32] */;
  (%1268,)
}

def @func_12272() -> (Tensor[(2, 12, 14), int64],) {
  %1269 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
  %1270 = acos(%1269) /* ty=Tensor[(2, 12, 14), float32] */;
  %1271 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 14), uint64] */;
  %1272 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1273 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 14), uint64] */;
  %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1275 = maximum(%1273, %1274) /* ty=Tensor[(2, 12, 14), uint64] */;
  %1276 = cast(%1275, dtype="int64") /* ty=Tensor[(2, 12, 14), int64] */;
  %1277 = shape_of(%1270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1278 = cast(%1270, dtype="int64") /* ty=Tensor[(2, 12, 14), int64] */;
  %1279 = dyn.reshape(%1276, %1277, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1280 = subtract(%1278, %1279) /* ty=Tensor[(2, 12, 14), int64] */;
  (%1280,)
}

def @func_13464(%var_13463: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(260), float64]) {
  %1289 = fn (%var_13458: Tensor[(260), float64]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(260), float64]) {
    %1281 = @func_5714() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %1282 = cast(meta[relay.Constant][53] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
    %1283 = cast(%var_13458, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1284 = reshape(%1282, newshape=[18, 36]) /* ty=Tensor[(18, 36), float64] */;
    %1285 = reshape(%1283, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %1286 = @func_2985(%1284, %1285) /* ty=(Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) */;
    %1287 = %1281.1;
    %1288 = %1286.0;
    (%1287, %1288, meta[relay.Constant][53] /* ty=Tensor[(648), float64] */, %var_13458)
  };
  %1289(%var_13463) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(260), float64]) */
}

def @func_9529(%var_9527: Tensor[(6, 10, 11), float64], %var_9528: Tensor[(16, 9, 12), float32]) -> (Tensor[(6, 10, 11), float64], Tensor[(420), uint32], Tensor[(16, 9, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float64]) {
  @func_9525(%var_9527, %var_9528) /* ty=(Tensor[(6, 10, 11), float64], Tensor[(420), uint32], Tensor[(16, 9, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float64]) */
}

def @func_10382() -> Tensor[(15, 5, 12), float32] {
  %1290 = fn () -> Tensor[(15, 5, 12), float32] {
    @func_6508() /* ty=Tensor[(15, 5, 12), float32] */
  };
  %1290() /* ty=Tensor[(15, 5, 12), float32] */
}

def @func_3687() -> (Tensor[(420), uint32],) {
  @func_3685() /* ty=(Tensor[(420), uint32],) */
}

def @func_17332() -> Tensor[(900), float32] {
  %1291 = fn () -> Tensor[(900), float32] {
    @func_10403() /* ty=Tensor[(900), float32] */
  };
  %1291() /* ty=Tensor[(900), float32] */
}

def @func_17107() -> (Tensor[(900), float32],) {
  %1293 = fn () -> (Tensor[(900), float32],) {
    %1292 = @func_16142() /* ty=Tensor[(900), float32] */;
    (%1292,)
  };
  %1293() /* ty=(Tensor[(900), float32],) */
}

def @func_17669(%var_17648: Tensor[(156), float32]) -> (float32, Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(156), float32], Tensor[(3, 15, 6), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32]) {
  %1294 = @func_11111() /* ty=(Tensor[(13, 10, 2), float64], float32) */;
  %1295 = @func_16093() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1296 = cast(%var_17648, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1297 = reshape(%1296, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1298 = @func_6981(%1297) /* ty=(Tensor[(900), float32], float32, Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(6, 5, 14), float32], Tensor[(5, 84), uint32], Tensor[(156), float32]) */;
  %1299 = %1294.1;
  %1300 = cast(%1299, dtype="float32") /* ty=float32 */;
  %1301 = reshape(%1300, newshape=[]) /* ty=float32 */;
  %1302 = @func_525(%1301) /* ty=(Tensor[(3, 15, 6), float64], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
  %1303 = @func_2892() /* ty=(Tensor[(15, 5, 12), int64],) */;
  %1304 = %1295.0;
  %1305 = %1298.4;
  %1306 = %1302.0;
  %1307 = %1303.0;
  %1308 = @func_14902() /* ty=Tensor[(900), float32] */;
  (%1299, %1304, %1305, %var_17648, %1306, %1307, %1308)
}

def @func_2669(%var_2668: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
  %1315 = fn (%var_2643: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
    %1309 = @func_1982() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(16, 9, 12), float32]) */;
    %1310 = cast(%var_2643, dtype="uint32") /* ty=uint32 */;
    %1311 = reshape(%1310, newshape=[]) /* ty=uint32 */;
    %1312 = @func_2604(%1311) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
    %1313 = %1309.1;
    %1314 = %1312.5;
    (%1313, %1314, %var_2643)
  };
  %1315(%var_2668) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */
}

def @func_5546(%var_5544: Tensor[(16, 12, 13), float64]) -> (Tensor[(16, 12, 13), uint16],) {
  @func_5543(%var_5544) /* ty=(Tensor[(16, 12, 13), uint16],) */
}

def @func_13698(%var_13697: Tensor[(15, 12, 15), float32]) -> Tensor[(15, 12, 15), float32] {
  %1317 = fn (%var_13681: Tensor[(15, 12, 15), float32]) -> Tensor[(15, 12, 15), float32] {
    %1316 = cast(%var_13681, dtype="float32") /* ty=Tensor[(15, 12, 15), float32] */;
    acos(%1316) /* ty=Tensor[(15, 12, 15), float32] */
  };
  %1317(%var_13697) /* ty=Tensor[(15, 12, 15), float32] */
}

def @func_15266(%var_15257: uint32) -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) {
  %1318 = @func_4080() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1319 = cast(%var_15257, dtype="uint32") /* ty=uint32 */;
  %1320 = reshape(%1319, newshape=[]) /* ty=uint32 */;
  %1321 = @func_2667(%1320) /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32], uint32) */;
  %1322 = %1318.0;
  %1323 = %1321.1;
  (%1322, %1323, %var_15257)
}

def @func_732(%var_717: uint32, %var_718: Tensor[(1, 3), uint32]) -> Tensor[(1, 3), bool] {
  %1324 = cast(%var_717, dtype="bool") /* ty=bool */;
  %1325 = cast(%var_718, dtype="bool") /* ty=Tensor[(1, 3), bool] */;
  equal(%1324, %1325) /* ty=Tensor[(1, 3), bool] */
}

def @func_16516() -> (Tensor[(15, 5, 12), float32],) {
  %1327 = fn () -> (Tensor[(15, 5, 12), float32],) {
    %1326 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
    (%1326,)
  };
  %1327() /* ty=(Tensor[(15, 5, 12), float32],) */
}

def @func_6355() -> (Tensor[(900), float32],) {
  %1330 = fn () -> (Tensor[(900), float32],) {
    %1328 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %1329 = %1328.0;
    (%1329,)
  };
  %1330() /* ty=(Tensor[(900), float32],) */
}

def @func_17701() -> (Tensor[(15, 5, 12), float32],) {
  %1334 = fn () -> (Tensor[(15, 5, 12), float32],) {
    %1331 = @func_6508() /* ty=Tensor[(15, 5, 12), float32] */;
    %1332 = cast(%1331, dtype="float32") /* ty=Tensor[(15, 5, 12), float32] */;
    %1333 = atan(%1332) /* ty=Tensor[(15, 5, 12), float32] */;
    (%1333,)
  };
  %1334() /* ty=(Tensor[(15, 5, 12), float32],) */
}

def @func_3528() -> Tensor[(420), uint32] {
  %1336 = fn () -> Tensor[(420), uint32] {
    %1335 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
    %1335.2
  };
  %1336() /* ty=Tensor[(420), uint32] */
}

def @func_12568() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %1337 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
  %1338 = @func_10833() /* ty=(Tensor[(900), float32],) */;
  %1339 = %1337.1;
  %1340 = %1338.0;
  (%1339, %1340)
}

def @func_17614() -> (Tensor[(15, 5, 12), float32],) {
  %1343 = fn () -> (Tensor[(15, 5, 12), float32],) {
    %1341 = @func_10694() /* ty=(Tensor[(15, 5, 12), float32], Tensor[(900), float32]) */;
    %1342 = %1341.0;
    (%1342,)
  };
  %1343() /* ty=(Tensor[(15, 5, 12), float32],) */
}

def @func_5582(%var_5580: Tensor[(14, 1, 1), float32], %var_5581: Tensor[(130, 2), float64]) -> (Tensor[(14, 1, 1), float32], Tensor[(13, 10, 2), int8], Tensor[(130, 2), float64]) {
  %1349 = fn (%var_5565: Tensor[(14, 1, 1), float32], %var_5573: Tensor[(130, 2), float64]) -> (Tensor[(14, 1, 1), float32], Tensor[(13, 10, 2), int8], Tensor[(130, 2), float64]) {
    %1344 = cast(%var_5565, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
    %1345 = cast(%var_5573, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %1346 = reshape(%1345, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
    %1347 = acos(%1344) /* ty=Tensor[(14, 1, 1), float32] */;
    %1348 = @func_2784(%1346) /* ty=Tensor[(13, 10, 2), int8] */;
    (%1347, %1348, %var_5573)
  };
  %1349(%var_5580, %var_5581) /* ty=(Tensor[(14, 1, 1), float32], Tensor[(13, 10, 2), int8], Tensor[(130, 2), float64]) */
}

def @func_13804() -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32]) {
  %1350 = @func_12105() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1351 = @func_12568() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %1352 = %1350.0;
  %1353 = %1351.0;
  (%1352, %1353)
}

def @func_12972() -> (Tensor[(13, 10, 2), float64], Tensor[(13, 10, 2), float64]) {
  %1354 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1355 = @func_4498() /* ty=Tensor[(13, 10, 2), float64] */;
  %1356 = %1354.0;
  (%1355, %1356)
}

def @func_16858(%var_16856: Tensor[(11, 5, 8), int8], %var_16857: Tensor[(11, 5, 8), int8]) -> (Tensor[(11, 5, 8), float64],) {
  %1364 = fn (%var_16844: Tensor[(11, 5, 8), int8], %var_16845: Tensor[(11, 5, 8), int8]) -> (Tensor[(11, 5, 8), float64],) {
    %1357 = cast(%var_16845, dtype="int8") /* ty=Tensor[(11, 5, 8), int8] */;
    %1358 = shape_of(%var_16844, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1359 = cast(%var_16844, dtype="int8") /* ty=Tensor[(11, 5, 8), int8] */;
    %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1361 = logical_xor(%1359, %1360) /* ty=Tensor[(11, 5, 8), int8] */;
    %1362 = cast(%1361, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
    %1363 = cosh(%1362) /* ty=Tensor[(11, 5, 8), float64] */;
    (%1363,)
  };
  %1364(%var_16856, %var_16857) /* ty=(Tensor[(11, 5, 8), float64],) */
}

def @func_3228() -> (Tensor[(13, 10, 2), float32],) {
  %1365 = @func_3063() /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 10, 2), float32]) */;
  %1366 = %1365.2;
  (%1366,)
}

def @func_9751(%var_9738: float32, %var_9742: Tensor[(2028), float64]) -> (Tensor[(900), float32], Tensor[(1, 156), float32], Tensor[(420), uint32], float32, Tensor[(156), float32], Tensor[(156), float32], Tensor[(2028), float64]) {
  %1367 = @func_3498() /* ty=(Tensor[(900), float32], Tensor[(6, 8, 15), float64], Tensor[(720), float64], Tensor[(15, 5, 12), float32], Tensor[(900), float32], Tensor[(900), float32], float32) */;
  %1368 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %1369 = cast(%var_9738, dtype="float32") /* ty=float32 */;
  %1370 = cast(meta[relay.Constant][55] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1371 = reshape(%1368, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), uint32] */;
  %1372 = reshape(%1369, newshape=[]) /* ty=float32 */;
  %1373 = reshape(%1370, newshape=[1, 156]) /* ty=Tensor[(1, 156), float32] */;
  %1374 = @func_663(%1371, %1372, %1373) /* ty=(Tensor[(6, 5, 14), bool], Tensor[(12, 13, 1), bool], float32, Tensor[(1, 156), float32], Tensor[(3, 15, 6), float64], Tensor[(6, 5, 14), float32], float32, float32) */;
  %1375 = cast(%var_9742, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1376 = reshape(%1375, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1377 = @func_8197(%1376) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(2028), float64], Tensor[(2, 72), float32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32]) */;
  %1378 = %1367.4;
  %1379 = %1374.3;
  %1380 = %1377.5;
  (%1378, %1379, meta[relay.Constant][54] /* ty=Tensor[(420), uint32] */, %var_9738, meta[relay.Constant][55] /* ty=Tensor[(156), float32] */, %1380, %var_9742)
}

def @func_17878() -> (Tensor[(420), uint32], Tensor[(13, 10, 2), float64]) {
  @func_17876() /* ty=(Tensor[(420), uint32], Tensor[(13, 10, 2), float64]) */
}

def @func_5093() -> (Tensor[(13, 10, 2), float64],) {
  @func_5091() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_10605() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %1384 = fn () -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
    %1381 = @func_4853() /* ty=(Tensor[(900), float32],) */;
    %1382 = %1381.0;
    %1383 = @func_6317() /* ty=Tensor[(15, 5, 12), float32] */;
    (%1382, %1383)
  };
  %1384() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */
}

def @func_13565(%var_13563: Tensor[(15, 6, 4), float64], %var_13564: uint32) -> (Tensor[(15, 6, 4), float64], Tensor[(420), uint32], float32, uint32, Tensor[(15, 6, 4), float32]) {
  @func_13561(%var_13563, %var_13564) /* ty=(Tensor[(15, 6, 4), float64], Tensor[(420), uint32], float32, uint32, Tensor[(15, 6, 4), float32]) */
}

def @func_4669() -> Tensor[(420), uint32] {
  @func_4667() /* ty=Tensor[(420), uint32] */
}

def @func_14383(%var_14376: Tensor[(7, 7, 7), uint32]) -> Tensor[(7, 7, 7), bool] {
  %1385 = @func_4582() /* ty=(Tensor[(900), float32], uint32, uint32, Tensor[(900), float32]) */;
  %1386 = %1385.2;
  %1387 = cast(%1386, dtype="bool") /* ty=bool */;
  %1388 = cast(%var_14376, dtype="bool") /* ty=Tensor[(7, 7, 7), bool] */;
  equal(%1387, %1388) /* ty=Tensor[(7, 7, 7), bool] */
}

def @func_11766(%var_11763: Tensor[(4, 36), int64], %var_11764: Tensor[(3, 1), uint32]) -> (Tensor[(900), float64], Tensor[(900), float32], Tensor[(4, 36), int64], Tensor[(3, 1), uint32]) {
  %1389 = cast(%var_11763, dtype="int64") /* ty=Tensor[(4, 36), int64] */;
  %1390 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(3, 1), uint32] */;
  %1391 = reshape(%1389, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %1392 = reshape(%1390, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %1393 = @func_6802(%1391, %1392) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(2, 72), int64], Tensor[(1, 2028), float64], Tensor[(900), float32], Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(1, 3), uint32], Tensor[(900), float32], Tensor[(420), uint32]) */;
  %1394 = @func_6379() /* ty=Tensor[(900), float64] */;
  %1395 = %1393.1;
  (%1394, %1395, %var_11763, %var_11764)
}

def @func_9167(%var_9165: Tensor[(648), float64]) -> (Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) {
  @func_9164(%var_9165) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(900), float32], Tensor[(648), float64]) */
}

def @func_11712(%var_11710: Tensor[(648), float64], %var_11711: Tensor[(156), float32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) {
  %1412 = fn (%var_11685: Tensor[(648), float64], %var_11700: Tensor[(156), float32]) -> (Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) {
    %1396 = @func_7344() /* ty=(Tensor[(420), uint32],) */;
    %1397 = cast(%var_11685, dtype="float64") /* ty=Tensor[(648), float64] */;
    %1398 = cast(meta[relay.Constant][56] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %1399 = reshape(%1397, newshape=[18, 36]) /* ty=Tensor[(18, 36), float64] */;
    %1400 = reshape(%1398, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %1401 = @func_2985(%1399, %1400) /* ty=(Tensor[(900), float32], Tensor[(6, 12, 9), float64], Tensor[(18, 36), float64], Tensor[(13, 10, 2), int8], Tensor[(260), float64], Tensor[(900), float32]) */;
    %1402 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %1403 = cast(%var_11700, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1404 = reshape(%1403, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %1405 = @func_2233(%1404) /* ty=(Tensor[(15, 5, 12), float32], Tensor[(12, 13, 1), float32], float32, Tensor[(156), float32]) */;
    %1406 = @func_7887() /* ty=Tensor[(900), float32] */;
    %1407 = @func_4718() /* ty=Tensor[(900), float32] */;
    %1408 = %1396.0;
    %1409 = %1401.5;
    %1410 = %1402.1;
    %1411 = %1405.2;
    (%1406, %1407, %1408, %1409, %var_11685, meta[relay.Constant][56] /* ty=Tensor[(130, 2), float64] */, %1410, %1411, %var_11700)
  };
  %1412(%var_11710, %var_11711) /* ty=(Tensor[(900), float32], Tensor[(900), float32], Tensor[(420), uint32], Tensor[(900), float32], Tensor[(648), float64], Tensor[(130, 2), float64], Tensor[(900), float32], float32, Tensor[(156), float32]) */
}

def @func_9006() -> (Tensor[(900), float32], Tensor[(15, 5, 12), float32]) {
  %1413 = @func_6354() /* ty=(Tensor[(900), float32],) */;
  %1414 = @func_8717() /* ty=(Tensor[(13, 10, 2), float64], Tensor[(15, 5, 12), float32]) */;
  %1415 = %1413.0;
  %1416 = %1414.1;
  (%1415, %1416)
}

def @func_3948() -> (Tensor[(13, 10, 2), float64],) {
  %1417 = @func_3795() /* ty=(Tensor[(13, 10, 2), float64],) */;
  %1418 = %1417.0;
  (%1418,)
}

def @func_5042() -> (Tensor[(420), uint32], Tensor[(15, 5, 12), float32]) {
  %1419 = @func_2530() /* ty=(Tensor[(15, 5, 12), float32],) */;
  %1420 = @func_4667() /* ty=Tensor[(420), uint32] */;
  %1421 = %1419.0;
  (%1420, %1421)
}

def @func_4316(%var_4314: uint16, %var_4315: Tensor[(720), float64]) -> (Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) {
  @func_4312(%var_4314, %var_4315) /* ty=(Tensor[(420), uint32], Tensor[(156), float32], Tensor[(720), float64], Tensor[(900), float32], Tensor[(?, ?, 7), float32], Tensor[(13, 10, 2), float64]) */
}

def @func_16143() -> Tensor[(900), float32] {
  %1423 = fn () -> Tensor[(900), float32] {
    %1422 = @func_2387() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
    %1422.1
  };
  %1423() /* ty=Tensor[(900), float32] */
}

def @func_8350(%var_8346: Tensor[(560), int16]) -> (Tensor[(15, 5, 12), float32], Tensor[(8, 7, 10), int16], Tensor[(560), int16]) {
  %1424 = @func_3583() /* ty=(Tensor[(900), float32], Tensor[(15, 5, 12), float32]) */;
  %1425 = cast(%var_8346, dtype="int16") /* ty=Tensor[(560), int16] */;
  %1426 = reshape(%1425, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), int16] */;
  %1427 = %1424.1;
  %1428 = @func_7597(%1426) /* ty=Tensor[(8, 7, 10), int16] */;
  (%1427, %1428, %var_8346)
}

def @func_3812(%var_3810: Tensor[(14, 11, 15), int64], %var_3811: Tensor[(14, 11, 15), int64]) -> (Tensor[(14, 11, 15), int64],) {
  @func_3808(%var_3810, %var_3811) /* ty=(Tensor[(14, 11, 15), int64],) */
}

def @func_15091() -> (Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) {
  @func_15089() /* ty=(Tensor[(3, 10, 9), float32], Tensor[(420), uint32]) */
}

def @func_3307() -> float32 {
  %1429 = @func_2712() /* ty=(Tensor[(900), float32], float32, Tensor[(420), uint32]) */;
  %1429.1
}

def @func_13561(%var_13515: Tensor[(15, 6, 4), float64], %var_13543: uint32) -> (Tensor[(15, 6, 4), float64], Tensor[(420), uint32], float32, uint32, Tensor[(15, 6, 4), float32]) {
  %1430 = cast(%var_13515, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %1431 = cast(%var_13543, dtype="uint32") /* ty=uint32 */;
  %1432 = reshape(%1431, newshape=[]) /* ty=uint32 */;
  %1433 = @func_2604(%1432) /* ty=(Tensor[(900), float32], Tensor[(1, 3), bool], uint32, Tensor[(3, 1), uint32], float32, Tensor[(15, 5, 12), float32]) */;
  %1434 = cast(%var_13515, dtype="float64") /* ty=Tensor[(15, 6, 4), float64] */;
  %1435 = cos(%1434) /* ty=Tensor[(15, 6, 4), float64] */;
  %1436 = cast(%1435, dtype="float32") /* ty=Tensor[(15, 6, 4), float32] */;
  %1437 = log2(%1430) /* ty=Tensor[(15, 6, 4), float64] */;
  %1438 = @func_3527() /* ty=Tensor[(420), uint32] */;
  %1439 = %1433.4;
  %1440 = sin(%1436) /* ty=Tensor[(15, 6, 4), float32] */;
  (%1437, %1438, %1439, %var_13543, %1440)
}

def @func_10357() -> Tensor[(900), float32] {
  @func_9693() /* ty=Tensor[(900), float32] */
}

def @func_12106() -> (Tensor[(13, 10, 2), float64],) {
  %1442 = fn () -> (Tensor[(13, 10, 2), float64],) {
    %1441 = @func_7307() /* ty=Tensor[(13, 10, 2), float64] */;
    (%1441,)
  };
  %1442() /* ty=(Tensor[(13, 10, 2), float64],) */
}

def @func_11035(%var_10998: Tensor[(5, 3, 16), float64], %var_11018: Tensor[(65, 4), float64], %var_11022: uint32) -> (Tensor[(5, 3, 16), bool], Tensor[(648), float64], Tensor[(65, 4), float64], Tensor[(648), float64], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32]) {
  %1443 = cast(%var_10998, dtype="float64") /* ty=Tensor[(5, 3, 16), float64] */;
  %1444 = sin(%1443) /* ty=Tensor[(5, 3, 16), float64] */;
  %1445 = cast(%1444, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %1446 = shape_of(%var_10998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1447 = cast(%var_10998, dtype="bool") /* ty=Tensor[(5, 3, 16), bool] */;
  %1448 = dyn.reshape(%1445, %1446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1449 = cast(%var_11018, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %1450 = cast(meta[relay.Constant][57] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %1451 = reshape(%1449, newshape=[5, 52]) /* ty=Tensor[(5, 52), float64] */;
  %1452 = reshape(%1450, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %1453 = @func_7241(%1451, %1452) /* ty=(float32, Tensor[(900), float32], Tensor[(5, 52), float64], Tensor[(6, 12, 9), float64], Tensor[(648), float64]) */;
  %1454 = cast(%var_11022, dtype="uint32") /* ty=uint32 */;
  %1455 = cast(meta[relay.Constant][58] /* ty=Tensor[(3), uint32] */, dtype="uint32") /* ty=Tensor[(3), uint32] */;
  %1456 = reshape(%1454, newshape=[]) /* ty=uint32 */;
  %1457 = reshape(%1455, newshape=[1, 3]) /* ty=Tensor[(1, 3), uint32] */;
  %1458 = logical_and(%1447, %1448) /* ty=Tensor[(5, 3, 16), bool] */;
  %1459 = %1453.4;
  %1460 = @func_732(%1456, %1457) /* ty=Tensor[(1, 3), bool] */;
  (%1458, %1459, %var_11018, meta[relay.Constant][57] /* ty=Tensor[(648), float64] */, %1460, %var_11022, meta[relay.Constant][58] /* ty=Tensor[(3), uint32] */)
}

def @func_3273() -> (Tensor[(900), float32],) {
  @func_3271() /* ty=(Tensor[(900), float32],) */
}

def @func_11040(%var_11037: Tensor[(5, 3, 16), float64], %var_11038: Tensor[(65, 4), float64], %var_11039: uint32) -> (Tensor[(5, 3, 16), bool], Tensor[(648), float64], Tensor[(65, 4), float64], Tensor[(648), float64], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32]) {
  @func_11035(%var_11037, %var_11038, %var_11039) /* ty=(Tensor[(5, 3, 16), bool], Tensor[(648), float64], Tensor[(65, 4), float64], Tensor[(648), float64], Tensor[(1, 3), bool], uint32, Tensor[(3), uint32]) */
}

def @func_7171() -> (Tensor[(420), uint32], Tensor[(144), int64], Tensor[(144), int64], Tensor[(2028), float64], Tensor[(900), float32]) {
  %1461 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1462 = cast(meta[relay.Constant][60] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1463 = reshape(%1461, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %1464 = reshape(%1462, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1465 = @func_6486(%1463, %1464) /* ty=(Tensor[(900), float32], Tensor[(420), uint32], Tensor[(144), int64], float32, Tensor[(2028), float64]) */;
  %1466 = @func_4212() /* ty=(Tensor[(13, 10, 2), float32], Tensor[(420), uint32], Tensor[(900), float32]) */;
  %1467 = @func_4667() /* ty=Tensor[(420), uint32] */;
  %1468 = %1465.2;
  %1469 = %1466.2;
  (%1467, %1468, meta[relay.Constant][59] /* ty=Tensor[(144), int64] */, meta[relay.Constant][60] /* ty=Tensor[(2028), float64] */, %1469)
}

def @func_17739() -> (Tensor[(420), uint32],) {
  %1470 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1471 = %1470.0;
  (%1471,)
}

def @func_3914() -> Tensor[(900), float32] {
  @func_3912() /* ty=Tensor[(900), float32] */
}

def @func_9694() -> Tensor[(900), float32] {
  %1473 = fn () -> Tensor[(900), float32] {
    %1472 = @func_8885() /* ty=(Tensor[(2, 13, 11), float64], Tensor[(15, 5, 12), int64], Tensor[(900), float32], Tensor[(2, 13, 11), float32]) */;
    %1472.2
  };
  %1473() /* ty=Tensor[(900), float32] */
}

def @func_3344() -> (float32,) {
  @func_3342() /* ty=(float32,) */
}

def @func_17841() -> (Tensor[(420), uint32],) {
  %1474 = @func_3685() /* ty=(Tensor[(420), uint32],) */;
  %1475 = %1474.0;
  (%1475,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen664/build/output.py", line 5271, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:47:20] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


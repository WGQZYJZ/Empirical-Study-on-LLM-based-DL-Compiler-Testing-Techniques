==========mod==========
#[version = "0.0.5"]
def @func_27047() -> (Tensor[(7, 1, 4), float64], Tensor[(4, ?, 13), bool]) {
  %0 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %1 = @func_26389() /* ty=Tensor[(4, 1, 13), float64] */;
  %2 = @func_18345() /* ty=Tensor[(4, 1, 13), float64] */;
  %3 = cast(%2, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %4 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%1, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = %0.0;
  %8 = not_equal(%5, %6) /* ty=Tensor[(4, ?, 13), bool] */;
  (%7, %8)
}

def @func_20075() -> (Tensor[(13, 11, 9), int8],) {
  %9 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %10 = %9.0;
  (%10,)
}

def @func_15096(%var_15059: Tensor[(11, 16, 12), uint32], %var_15091: Tensor[(1274), float64]) -> (Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
  %11 = cast(%var_15059, dtype="bool") /* ty=Tensor[(11, 16, 12), bool] */;
  %12 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 16, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 16, 12), uint32] */, dtype="bool") /* ty=Tensor[(11, 16, 12), bool] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %15 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 104), uint64] */, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 104), uint64] */, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %19 = cast(%var_15091, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %20 = reshape(%16, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %21 = reshape(%17, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %22 = reshape(%18, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %23 = reshape(%19, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %24 = @func_10913(%20, %21, %22, %23) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %25 = equal(%13, %14) /* ty=Tensor[(11, 16, 12), bool] */;
  %26 = %15.0;
  %27 = %24.0;
  (%25, %26, %27, meta[relay.Constant][1] /* ty=Tensor[(4, 104), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(945), float64] */, %var_15091)
}

def @func_18306(%var_18285: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), bool], Tensor[(2, 15, 4), float64]) {
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 15, 4), int64] */, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
  %29 = shape_of(%var_18285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%var_18285, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %32 = cast(%var_18285, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
  %33 = not_equal(%30, %31) /* ty=Tensor[(2, 15, 4), bool] */;
  %34 = sin(%32) /* ty=Tensor[(2, 15, 4), float64] */;
  (%33, %34)
}

def @func_19580() -> (Tensor[(13, 11, 9), int8],) {
  %35 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %36 = %35.2;
  (%36,)
}

def @func_18862() -> (Tensor[(4, 1, 13), float64],) {
  %37 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %38 = %37.2;
  (%38,)
}

def @func_13120() -> Tensor[(13, 11, 9), int8] {
  %39 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %39.0
}

def @func_22317(%var_22312: Tensor[(14, 1, 1), float64]) -> (Tensor[(14, 1, 1), float64],) {
  %40 = cast(%var_22312, dtype="float64") /* ty=Tensor[(14, 1, 1), float64] */;
  %41 = asin(%40) /* ty=Tensor[(14, 1, 1), float64] */;
  (%41,)
}

def @func_20987() -> Tensor[(52), float64] {
  %42 = @func_17342() /* ty=(Tensor[(52), float64],) */;
  %42.0
}

def @func_22102(%var_22061: Tensor[(945), float64], %var_22067: Tensor[(416), uint64]) -> (Tensor[(52), float64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(416), uint64], Tensor[(1274, 1), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %43 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %44 = cast(%var_22061, dtype="float64") /* ty=Tensor[(945), float64] */;
  %45 = cast(-7.05135f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %46 = reshape(%44, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %47 = reshape(%45, newshape=[]) /* ty=float64 */;
  %48 = @func_897(%46, %47) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %49 = cast(%var_22067, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %50 = cast(%var_22067, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %51 = cast(%var_22061, dtype="float64") /* ty=Tensor[(945), float64] */;
  %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(1274, 1), float64] */, dtype="float64") /* ty=Tensor[(1274, 1), float64] */;
  %53 = reshape(%49, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %54 = reshape(%50, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %55 = reshape(%51, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %56 = reshape(%52, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %57 = @func_10913(%53, %54, %55, %56) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %58 = @func_21529() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %59 = %43.0;
  %60 = %48.2;
  %61 = %57.4;
  %62 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
  %63 = %58.0;
  (%59, %60, %var_22061, -7.05135f64 /* ty=float64 */, %61, %var_22067, meta[relay.Constant][4] /* ty=Tensor[(1274, 1), float64] */, %62, %63)
}

def @func_17405(%var_17347: Tensor[(11, 9, 13), int16], %var_17348: Tensor[(11, 9, 13), int16]) -> (Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) {
  %64 = cast(%var_17348, dtype="int16") /* ty=Tensor[(11, 9, 13), int16] */;
  %65 = shape_of(%var_17347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%var_17347, dtype="int16") /* ty=Tensor[(11, 9, 13), int16] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %68 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %69 = bitwise_or(%66, %67) /* ty=Tensor[(11, 9, 13), int16] */;
  %70 = %68.0;
  (%69, %70)
}

def @func_12133(%var_12102: Tensor[(4, 11, 15), float64], %var_12129: Tensor[(156), float32]) -> (Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) {
  %71 = cast(%var_12102, dtype="float64") /* ty=Tensor[(4, 11, 15), float64] */;
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(30, 1), float64] */, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %75 = cast(%var_12129, dtype="float32") /* ty=Tensor[(156), float32] */;
  %76 = reshape(%72, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %77 = reshape(%73, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %78 = reshape(%74, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %79 = reshape(%75, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %80 = @func_6592(%76, %77, %78, %79) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %81 = asinh(%71) /* ty=Tensor[(4, 11, 15), float64] */;
  %82 = %80.7;
  (%81, %82, meta[relay.Constant][5] /* ty=Tensor[(462), int8] */, meta[relay.Constant][6] /* ty=Tensor[(30, 1), float64] */, %var_12129)
}

def @func_12952(%var_12942: uint32, %var_12944: Tensor[(231), float64]) -> (Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) {
  %83 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %84 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 11, 9), int8] */, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %89 = cast(%var_12942, dtype="uint32") /* ty=uint32 */;
  %90 = cast(meta[relay.Constant][9] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %91 = cast(%var_12944, dtype="float64") /* ty=Tensor[(231), float64] */;
  %92 = reshape(%88, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %93 = reshape(%89, newshape=[]) /* ty=uint32 */;
  %94 = reshape(%90, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %95 = reshape(%91, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %96 = @func_5276(%92, %93, %94, %95) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
  %97 = maximum(%86, %87) /* ty=Tensor[(13, 11, 9), float32] */;
  %98 = %96.0;
  (%97, %98, meta[relay.Constant][8] /* ty=Tensor[(156), float32] */, %var_12942, meta[relay.Constant][9] /* ty=Tensor[(180, 1), float32] */, %var_12944)
}

def @func_20629() -> (Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) {
  %99 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %100 = %99.0;
  %101 = cast(%100, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %102 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 10, 13), float64] */, dtype="bool") /* ty=Tensor[(4, 10, 13), bool] */;
  %103 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %104 = logical_and(%101, %102) /* ty=Tensor[(4, 10, 13), bool] */;
  %105 = %103.0;
  (%104, %105)
}

def @func_23429() -> (Tensor[(13, 11, 9), float32],) {
  %106 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  (%106,)
}

def @func_14520(%var_14507: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), float32],) {
  %107 = cast(%var_14507, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %108 = atan(%107) /* ty=Tensor[(2, 13, 9), float32] */;
  (%108,)
}

def @func_16191() -> Tensor[(13, 11, 9), int8] {
  %109 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %109.0
}

def @func_20768() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %110 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %111 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %112 = %110.0;
  %113 = %111.0;
  (%112, %113)
}

def @func_22592(%var_22564: Tensor[(7, 66), int8]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(7, 66), int8], Tensor[(1694), float64]) {
  %114 = @func_21618() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %115 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %116 = cast(%var_22564, dtype="int8") /* ty=Tensor[(7, 66), int8] */;
  %117 = reshape(%115, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %118 = reshape(%116, newshape=[462]) /* ty=Tensor[(462), int8] */;
  %119 = @func_11476(%117, %118) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) */;
  %120 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %121 = log(%120) /* ty=Tensor[(1694), float32] */;
  %122 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float32] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %123 = shape_of(%121, dtype="int32") /* ty=Tensor[(1), int32] */;
  %124 = cast(%121, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?), float64] */;
  %126 = %114.0;
  %127 = %119.2;
  %128 = floor_divide(%124, %125) /* ty=Tensor[(1694), float64] */;
  (%126, %127, %var_22564, %128)
}

def @func_24364(%var_24342: Tensor[(234), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(2, 13, 9), float32], Tensor[(234), float32]) {
  %129 = @func_18862() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %130 = cast(%var_24342, dtype="float32") /* ty=Tensor[(234), float32] */;
  %131 = reshape(%130, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %132 = @func_14520(%131) /* ty=(Tensor[(2, 13, 9), float32],) */;
  %133 = %129.0;
  %134 = %132.0;
  (%133, %134, %var_24342)
}

def @func_13690() -> (Tensor[(4, 1, 13), float64],) {
  %135 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %136 = %135.1;
  (%136,)
}

def @func_16859() -> (Tensor[(13, 11, 9), int8],) {
  %137 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %138 = %137.0;
  (%138,)
}

def @func_24597() -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
  %139 = @func_19580() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %140 = @func_19761() /* ty=(Tensor[(52), float64],) */;
  %141 = %139.0;
  %142 = %140.0;
  (%141, %142)
}

def @func_17342() -> (Tensor[(52), float64],) {
  %143 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %144 = %143.0;
  (%144,)
}

def @func_26795() -> (Tensor[(7, 1, 4), float64],) {
  %145 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %146 = %145.0;
  (%146,)
}

def @func_25481() -> Tensor[(13, 11, 9), int8] {
  @func_21931() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25907(%var_25892: Tensor[(11, 6, 16), int32], %var_25893: Tensor[(11, 6, 16), int32]) -> Tensor[(11, 6, 16), int32] {
  %147 = cast(%var_25893, dtype="int32") /* ty=Tensor[(11, 6, 16), int32] */;
  %148 = shape_of(%var_25892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_25892, dtype="int32") /* ty=Tensor[(11, 6, 16), int32] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%149, %150) /* ty=Tensor[(11, 6, 16), int32] */
}

def @func_24161() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %151 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %152 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %153 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %154 = %151.0;
  (%152, %153, %154)
}

def @func_24502() -> (Tensor[(13, 11, 9), int8],) {
  %155 = @func_18268() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %156 = %155.0;
  (%156,)
}

def @func_15326() -> (Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) {
  %157 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %158 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %159 = asinh(%157) /* ty=Tensor[(7, 1, 4), float64] */;
  %160 = %158.0;
  (%159, %160)
}

def @func_21424(%var_21391: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) {
  %161 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %162 = cast(%var_21391, dtype="uint32") /* ty=uint32 */;
  %163 = reshape(%162, newshape=[]) /* ty=uint32 */;
  %164 = @func_14718(%163) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) */;
  %165 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %166 = %161.0;
  %167 = %164.7;
  %168 = %165.0;
  (%166, %167, %var_21391, %168)
}

def @func_26644() -> (Tensor[(13, 11, 9), int8],) {
  %169 = @func_24502() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %170 = %169.0;
  (%170,)
}

def @func_24851() -> (Tensor[(13, 11, 9), int8],) {
  %171 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %172 = %171.0;
  (%172,)
}

def @func_20444() -> (Tensor[(13, 11, 9), int8],) {
  %173 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %174 = %173.0;
  (%174,)
}

def @func_23959(%var_23953: uint32, %var_23954: Tensor[(2, 48), uint32], %var_23956: Tensor[(180, 1), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(231), float64], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180, 1), float32]) {
  %175 = cast(%var_23953, dtype="uint32") /* ty=uint32 */;
  %176 = cast(%var_23954, dtype="uint32") /* ty=Tensor[(2, 48), uint32] */;
  %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %178 = cast(%var_23956, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %179 = reshape(%175, newshape=[]) /* ty=uint32 */;
  %180 = reshape(%176, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %181 = reshape(%177, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %182 = reshape(%178, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %183 = @func_5112(%179, %180, %181, %182) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %184 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %185 = %183.4;
  (%184, %185, %var_23953, %var_23954, meta[relay.Constant][13] /* ty=Tensor[(960), bool] */, %var_23956)
}

def @func_16553(%var_16537: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool], Tensor[(13, 11, 9), int8]) {
  %186 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %189 = cast(%var_16537, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %190 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %191 = not_equal(%188, %189) /* ty=Tensor[(4, 4, 13), bool] */;
  %192 = %190.1;
  (%191, %192)
}

def @func_27059() -> (Tensor[(13, 11, 9), int8],) {
  %193 = @func_17327() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */;
  %194 = %193.1;
  (%194,)
}

def @func_15552(%var_15528: Tensor[(480), float32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64]) {
  %195 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %196 = cast(%var_15528, dtype="float32") /* ty=Tensor[(480), float32] */;
  %197 = cast(-8.76506f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %198 = reshape(%196, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %199 = reshape(%197, newshape=[]) /* ty=float32 */;
  %200 = @func_7213(%198, %199) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
  %201 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %202 = cast(-8.76506f /* ty=float32 */, dtype="float64") /* ty=float64 */;
  %203 = reshape(%202, newshape=[]) /* ty=float64 */;
  %204 = @func_710(%203) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %205 = %195.0;
  %206 = %200.4;
  %207 = %201.0;
  %208 = %204.0;
  (%205, %206, %var_15528, -8.76506f /* ty=float32 */, %207, %208)
}

def @func_18571() -> (Tensor[(13, 11, 9), int8],) {
  %209 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %210 = %209.2;
  (%210,)
}

def @func_12906() -> (Tensor[(13, 11, 9), int8],) {
  %211 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %212 = %211.0;
  (%212,)
}

def @func_23836() -> Tensor[(13, 11, 9), int8] {
  @func_20157() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_4313(%var_4288: float32, %var_4289: Tensor[(12, 7, 15), float32], %var_4300: Tensor[(180), float32], %var_4301: Tensor[(280), float64], %var_4302: Tensor[(960), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %213 = cast(%var_4288, dtype="float32") /* ty=float32 */;
  %214 = cast(%var_4289, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %215 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %216 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %217 = cast(%var_4301, dtype="float64") /* ty=Tensor[(280), float64] */;
  %218 = cast(%var_4302, dtype="float64") /* ty=Tensor[(960), float64] */;
  %219 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %220 = reshape(%215, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %221 = reshape(%216, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %222 = reshape(%217, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %223 = reshape(%218, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %224 = reshape(%219, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %225 = @func_3840(%220, %221, %222, %223, %224) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %226 = floor_mod(%213, %214) /* ty=Tensor[(12, 7, 15), float32] */;
  %227 = %225.5;
  (%226, %227, %var_4300, %var_4301, %var_4302)
}

def @func_21478() -> Tensor[(13, 11, 9), int8] {
  %228 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %228.0
}

def @func_22015(%var_22007: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32) {
  %229 = cast(%var_22007, dtype="uint32") /* ty=uint32 */;
  %230 = reshape(%229, newshape=[]) /* ty=uint32 */;
  %231 = @func_21424(%230) /* ty=(Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) */;
  %232 = @func_21931() /* ty=Tensor[(13, 11, 9), int8] */;
  %233 = %231.2;
  (%232, %233, %var_22007)
}

def @func_17879(%var_17830: Tensor[(36, 10), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) {
  %234 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %235 = cast(%var_17830, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %236 = reshape(%235, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %237 = @func_15976(%236) /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(52), float32] */;
  %240 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %241 = %234.1;
  %242 = atanh(%239) /* ty=Tensor[(52), float32] */;
  %243 = %240.0;
  (%241, %var_17830, %242, %243)
}

def @func_24779(%var_24773: Tensor[(4, 9, 13), float64]) -> (Tensor[(4, 9, 13), bool],) {
  %244 = @func_20394() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %245 = %244.0;
  %246 = cast(%245, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %247 = cast(%var_24773, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %248 = equal(%246, %247) /* ty=Tensor[(4, 9, 13), bool] */;
  (%248,)
}

def @func_26326() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %249 = @func_20816() /* ty=Tensor[(13, 11, 9), int8] */;
  %250 = @func_22907() /* ty=Tensor[(13, 11, 9), int8] */;
  %251 = @func_17720() /* ty=Tensor[(13, 11, 9), int8] */;
  (%249, %250, %251)
}

def @func_17967(%var_17917: float32, %var_17921: Tensor[(960, 1), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) {
  %252 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %253 = cast(%var_17917, dtype="float32") /* ty=float32 */;
  %254 = cast(meta[relay.Constant][14] /* ty=Tensor[(1260, 1), float32] */, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
  %255 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %257 = cast(%var_17921, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %258 = reshape(%253, newshape=[]) /* ty=float32 */;
  %259 = reshape(%254, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %260 = reshape(%255, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %261 = reshape(%256, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %262 = reshape(%257, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %263 = @func_4313(%258, %259, %260, %261, %262) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %264 = cast(%var_17921, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %265 = %252.1;
  %266 = %263.4;
  %267 = cosh(%264) /* ty=Tensor[(960, 1), float32] */;
  (%265, %266, %var_17917, meta[relay.Constant][14] /* ty=Tensor[(1260, 1), float32] */, meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, meta[relay.Constant][16] /* ty=Tensor[(280), float64] */, %267)
}

def @func_25857() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %268 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %269 = %268.0;
  %270 = @func_18522() /* ty=Tensor[(4, 1, 13), float64] */;
  (%269, %270)
}

def @func_16371() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %271 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %272 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %273 = %271.0;
  %274 = %272.0;
  (%273, %274)
}

def @func_16688(%var_16645: Tensor[(480), float32], %var_16663: Tensor[(1620), uint32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) {
  %275 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %276 = cast(%var_16645, dtype="float32") /* ty=Tensor[(480), float32] */;
  %277 = cast(7.78207f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %278 = reshape(%276, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %279 = reshape(%277, newshape=[]) /* ty=float32 */;
  %280 = @func_7213(%278, %279) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
  %281 = cast(%var_16663, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
  %282 = cast(%var_16663, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
  %283 = reshape(%281, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), uint32] */;
  %284 = reshape(%282, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), uint32] */;
  %285 = @func_14158(%283, %284) /* ty=(Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) */;
  %286 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %287 = %275.0;
  %288 = %280.4;
  %289 = %285.2;
  %290 = %286.0;
  (%287, %288, %var_16645, 7.78207f /* ty=float32 */, %289, %var_16663, %290)
}

def @func_21743() -> Tensor[(13, 11, 9), int8] {
  @func_13120() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_20912(%var_20893: Tensor[(3, 3), float64], %var_20898: uint32, %var_20899: Tensor[(960), bool], %var_20900: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(?, 3, 3), bool], Tensor[(3, 3), float64], Tensor[(180), float32], uint32, Tensor[(960), bool], Tensor[(280), float64]) {
  %291 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %292 = cast(%var_20893, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %293 = reshape(%292, newshape=[1, 3, 3]) /* ty=Tensor[(1, 3, 3), float64] */;
  %294 = @func_17578(%293) /* ty=(Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) */;
  %295 = cast(%var_20898, dtype="uint32") /* ty=uint32 */;
  %296 = cast(%var_20899, dtype="bool") /* ty=Tensor[(960), bool] */;
  %297 = cast(%var_20900, dtype="float64") /* ty=Tensor[(280), float64] */;
  %298 = reshape(%295, newshape=[]) /* ty=uint32 */;
  %299 = reshape(%296, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %300 = reshape(%297, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %301 = @func_15223(%298, %299, %300) /* ty=(Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) */;
  %302 = %291.0;
  %303 = %294.0;
  %304 = %301.5;
  (%302, %303, %var_20893, %304, %var_20898, %var_20899, %var_20900)
}

def @func_5449(%var_5412: Tensor[(12, 15, 8), int8], %var_5413: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) {
  %305 = cast(%var_5413, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %306 = shape_of(%var_5412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_5412, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %309 = cast(-9.25157f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %310 = reshape(%309, newshape=[]) /* ty=float64 */;
  %311 = @func_710(%310) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %312 = multiply(%307, %308) /* ty=Tensor[(12, 15, 8), int8] */;
  %313 = %311.0;
  (%312, %313, -9.25157f64 /* ty=float64 */)
}

def @func_23916() -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) {
  %314 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %315 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 140), float32] */, dtype="float32") /* ty=Tensor[(9, 140), float32] */;
  %316 = cast(meta[relay.Constant][18] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %317 = reshape(%315, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %318 = reshape(%316, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %319 = @func_15286(%317, %318) /* ty=(Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %320 = %314.0;
  %321 = %319.6;
  (%320, %321, meta[relay.Constant][17] /* ty=Tensor[(9, 140), float32] */, meta[relay.Constant][18] /* ty=Tensor[(960), float64] */)
}

def @func_23975() -> (Tensor[(13, 11, 9), int8],) {
  %322 = @func_20192() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %323 = %322.0;
  (%323,)
}

def @func_15047() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  %324 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %325 = %324.0;
  %326 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="uint8") /* ty=Tensor[(13, 11, 9), uint8] */;
  %329 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%325, dtype="uint8") /* ty=Tensor[(13, 11, 9), uint8] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %332 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %333 = bitwise_or(%330, %331) /* ty=Tensor[(13, 11, 9), uint8] */;
  %334 = %332.0;
  (%333, %334)
}

def @func_13370() -> (Tensor[(13, 11, 9), int8],) {
  %335 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %336 = %335.0;
  (%336,)
}

def @func_4508(%var_4501: Tensor[(7, 3, 11), float64], %var_4504: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) {
  %337 = cast(%var_4501, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %338 = cast(%var_4504, dtype="uint16") /* ty=Tensor[(7, 3, 11), uint16] */;
  %339 = shape_of(%var_4501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%var_4501, dtype="uint16") /* ty=Tensor[(7, 3, 11), uint16] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %342 = acos(%337) /* ty=Tensor[(7, 3, 11), float64] */;
  %343 = logical_xor(%340, %341) /* ty=Tensor[(7, 3, 11), uint16] */;
  (%342, %343)
}

def @func_16938() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %344 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %345 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %346 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %347 = %344.0;
  %348 = %345.0;
  %349 = %346.0;
  (%347, %348, %349)
}

def @func_12722() -> Tensor[(13, 11, 9), int8] {
  %350 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %350.0
}

def @func_12706() -> (Tensor[(13, 11, 9), int8],) {
  %351 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %352 = %351.0;
  (%352,)
}

def @func_3840(%var_3765: Tensor[(5, 12, 3), float32], %var_3766: Tensor[(5, 12, 3), float32], %var_3795: Tensor[(280), float64], %var_3809: Tensor[(480, 2), float64], %var_3821: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) {
  %353 = cast(%var_3766, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %354 = shape_of(%var_3765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_3765, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %357 = floor_mod(%355, %356) /* ty=Tensor[(5, 12, 3), float32] */;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %359 = sigmoid(%358) /* ty=Tensor[(5, 12, 3), float32] */;
  %360 = cast(%357, dtype="int32") /* ty=Tensor[(5, 12, 3), int32] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="int32") /* ty=Tensor[(5, 12, 3), int32] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %364 = cast(%var_3795, dtype="float64") /* ty=Tensor[(280), float64] */;
  %365 = reshape(%364, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %366 = @func_3748(%365) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %367 = cast(-6.4349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %368 = reshape(%367, newshape=[]) /* ty=float64 */;
  %369 = @func_710(%368) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %370 = cast(%var_3809, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %371 = cast(-6.4349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %372 = reshape(%370, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), float64] */;
  %373 = reshape(%371, newshape=[]) /* ty=float64 */;
  %374 = @func_1686(%372, %373) /* ty=(Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) */;
  %375 = cast(%var_3821, dtype="uint32") /* ty=Tensor[(5, 12, 3), uint32] */;
  %376 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%359, dtype="uint32") /* ty=Tensor[(5, 12, 3), uint32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %379 = maximum(%362, %363) /* ty=Tensor[(5, 12, 3), int32] */;
  %380 = %366.0;
  %381 = %369.0;
  %382 = %374.5;
  %383 = multiply(%377, %378) /* ty=Tensor[(5, 12, 3), uint32] */;
  (%379, %380, %var_3795, %381, -6.4349f64 /* ty=float64 */, %382, %var_3809, %383)
}

def @func_20394() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %384 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %385 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %386 = %384.0;
  %387 = %385.0;
  (%386, %387)
}

def @func_15286(%var_15270: Tensor[(1260), float32], %var_15273: Tensor[(960), float64]) -> (Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %388 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %389 = cast(-2.84832f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %390 = cast(%var_15270, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %391 = cast(meta[relay.Constant][19] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %392 = cast(meta[relay.Constant][20] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %393 = cast(%var_15273, dtype="float64") /* ty=Tensor[(960), float64] */;
  %394 = reshape(%389, newshape=[]) /* ty=float32 */;
  %395 = reshape(%390, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %396 = reshape(%391, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %397 = reshape(%392, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %398 = reshape(%393, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %399 = @func_4313(%394, %395, %396, %397, %398) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %400 = %388.0;
  %401 = %399.3;
  (%400, %401, -2.84832f /* ty=float32 */, %var_15270, meta[relay.Constant][19] /* ty=Tensor[(180, 1), float32] */, meta[relay.Constant][20] /* ty=Tensor[(280), float64] */, %var_15273)
}

def @func_6592(%var_6544: Tensor[(6, 7, 11), int8], %var_6545: Tensor[(6, 7, 11), int8], %var_6557: Tensor[(10, 3), float64], %var_6562: Tensor[(156), float32]) -> (Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) {
  %402 = cast(%var_6545, dtype="int8") /* ty=Tensor[(6, 7, 11), int8] */;
  %403 = shape_of(%var_6544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%var_6544, dtype="int8") /* ty=Tensor[(6, 7, 11), int8] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %406 = cast(%var_6557, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %408 = cast(1.38385f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %409 = reshape(%406, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
  %410 = reshape(%407, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %411 = reshape(%408, newshape=[]) /* ty=float64 */;
  %412 = @func_5718(%409, %410, %411) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
  %413 = cast(%var_6562, dtype="float32") /* ty=Tensor[(156), float32] */;
  %414 = cast(1.38385f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
  %415 = cast(meta[relay.Constant][22] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %416 = cast(meta[relay.Constant][23] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %417 = reshape(%413, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %418 = reshape(%414, newshape=[]) /* ty=uint32 */;
  %419 = reshape(%415, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %420 = reshape(%416, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %421 = @func_5276(%417, %418, %419, %420) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
  %422 = cast(1.38385f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %423 = reshape(%422, newshape=[]) /* ty=float64 */;
  %424 = @func_710(%423) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %425 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 56), float64] */, dtype="float64") /* ty=Tensor[(5, 56), float64] */;
  %426 = reshape(%425, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %427 = @func_3748(%426) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %428 = bitwise_xor(%404, %405) /* ty=Tensor[(6, 7, 11), int8] */;
  %429 = %412.0;
  %430 = %421.5;
  %431 = %424.0;
  %432 = %427.0;
  (%428, %429, %var_6557, meta[relay.Constant][21] /* ty=Tensor[(945), float64] */, 1.38385f64 /* ty=float64 */, %430, %var_6562, meta[relay.Constant][22] /* ty=Tensor[(180), float32] */, meta[relay.Constant][23] /* ty=Tensor[(33, 7), float64] */, %431, %432, meta[relay.Constant][24] /* ty=Tensor[(5, 56), float64] */)
}

def @func_25438() -> (Tensor[(14), float64], Tensor[(14, 1, 52), float32]) {
  %433 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %434 = %433.0;
  %435 = cast(meta[relay.Constant][25] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %436 = reshape(%435, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), float64] */;
  %437 = @func_22317(%436) /* ty=(Tensor[(14, 1, 1), float64],) */;
  %438 = %437.0;
  %439 = cast(%434, dtype="float32") /* ty=Tensor[(52), float32] */;
  %440 = cast(%438, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
  %441 = floor_mod(%439, %440) /* ty=Tensor[(14, 1, 52), float32] */;
  (meta[relay.Constant][25] /* ty=Tensor[(14), float64] */, %441)
}

def @func_18542() -> (Tensor[(13, 11, 9), int8],) {
  %442 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %443 = %442.0;
  (%443,)
}

def @func_11737(%var_11708: Tensor[(13, 14, 7), float64], %var_11726: Tensor[(156), float32], %var_11735: Tensor[(30), float64]) -> (Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) {
  %444 = cast(%var_11708, dtype="float64") /* ty=Tensor[(13, 14, 7), float64] */;
  %445 = cos(%444) /* ty=Tensor[(13, 14, 7), float64] */;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(13, 14, 7), float64] */;
  %447 = cast(%var_11726, dtype="float32") /* ty=Tensor[(156), float32] */;
  %448 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %449 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %450 = cast(meta[relay.Constant][28] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %451 = reshape(%447, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %452 = reshape(%448, newshape=[]) /* ty=uint32 */;
  %453 = reshape(%449, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %454 = reshape(%450, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %455 = @func_5276(%451, %452, %453, %454) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
  %456 = cast(meta[relay.Constant][29] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %457 = cast(meta[relay.Constant][29] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %458 = cast(%var_11735, dtype="float64") /* ty=Tensor[(30), float64] */;
  %459 = cast(%var_11726, dtype="float32") /* ty=Tensor[(156), float32] */;
  %460 = reshape(%456, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %461 = reshape(%457, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %462 = reshape(%458, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %463 = reshape(%459, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %464 = @func_6592(%460, %461, %462, %463) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %465 = sqrt(%446) /* ty=Tensor[(13, 14, 7), float64] */;
  %466 = %455.2;
  %467 = %464.11;
  (%465, %466, %var_11726, meta[relay.Constant][26] /* ty=uint32 */, meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, meta[relay.Constant][28] /* ty=Tensor[(33, 7), float64] */, %467, meta[relay.Constant][29] /* ty=Tensor[(462), int8] */, %var_11735)
}

def @func_5112(%var_5056: uint32, %var_5057: Tensor[(16, 1, 6), uint32], %var_5066: Tensor[(16, 10, 6), bool], %var_5079: Tensor[(180), float32]) -> (Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) {
  %468 = cast(meta[relay.Constant][30] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %469 = reshape(%468, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %470 = @func_3748(%469) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %471 = cast(%var_5056, dtype="bool") /* ty=bool */;
  %472 = cast(%var_5057, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %473 = less(%471, %472) /* ty=Tensor[(16, 1, 6), bool] */;
  %474 = cast(%473, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %475 = cast(%var_5066, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
  %476 = cast(meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %477 = cast(meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %478 = reshape(%476, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %479 = reshape(%477, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %480 = @func_4508(%478, %479) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %481 = cast(%var_5056, dtype="float32") /* ty=float32 */;
  %482 = cast(meta[relay.Constant][32] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %483 = cast(%var_5079, dtype="float32") /* ty=Tensor[(180), float32] */;
  %484 = %470.0;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(10, 2, 14), float64] */;
  %486 = not_equal(%474, %475) /* ty=Tensor[(16, 10, 6), bool] */;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %488 = reshape(%481, newshape=[]) /* ty=float32 */;
  %489 = reshape(%482, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %490 = reshape(%483, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %491 = reshape(%485, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %492 = reshape(%487, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %493 = @func_4313(%488, %489, %490, %491, %492) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %494 = %480.1;
  %495 = %493.4;
  (%484, meta[relay.Constant][30] /* ty=Tensor[(280), float64] */, %486, %494, meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, %495, meta[relay.Constant][32] /* ty=Tensor[(1260), float32] */, %var_5079)
}

def @func_20816() -> Tensor[(13, 11, 9), int8] {
  %496 = @func_17776() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %496.0
}

def @func_18431(%var_18422: Tensor[(420), bool]) -> (Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) {
  %497 = cast(%var_18422, dtype="bool") /* ty=Tensor[(420), bool] */;
  %498 = cast(%var_18422, dtype="bool") /* ty=Tensor[(420), bool] */;
  %499 = cast(meta[relay.Constant][33] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %500 = reshape(%497, newshape=[14, 6, 5]) /* ty=Tensor[(14, 6, 5), bool] */;
  %501 = reshape(%498, newshape=[14, 6, 5]) /* ty=Tensor[(14, 6, 5), bool] */;
  %502 = reshape(%499, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %503 = @func_13178(%500, %501, %502) /* ty=(Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) */;
  %504 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %505 = %503.0;
  (%504, %505, %var_18422, meta[relay.Constant][33] /* ty=Tensor[(960), bool] */)
}

def @func_21931() -> Tensor[(13, 11, 9), int8] {
  %506 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %506.0
}

def @func_24945() -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(12, 15, 8), int8], Tensor[(1440), int8], Tensor[(13, 11, 9), int8]) {
  %507 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %508 = @func_21488() /* ty=(Tensor[(52), float64],) */;
  %509 = @func_21618() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %510 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %511 = cast(meta[relay.Constant][34] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %512 = cast(meta[relay.Constant][34] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %513 = reshape(%511, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %514 = reshape(%512, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %515 = @func_5449(%513, %514) /* ty=(Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) */;
  %516 = @func_18651() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %517 = %507.0;
  %518 = %508.0;
  %519 = %509.0;
  %520 = %510.0;
  %521 = %515.0;
  %522 = %516.0;
  (%517, %518, %519, %520, %521, meta[relay.Constant][34] /* ty=Tensor[(1440), int8] */, %522)
}

def @func_22752() -> Tensor[(13, 11, 9), int8] {
  %523 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %523.0
}

def @func_12831() -> (Tensor[(13, 11, 9), int8],) {
  %524 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %525 = %524.0;
  (%525,)
}

def @func_24803() -> (Tensor[(13, 11, 9), int8],) {
  %526 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %527 = %526.1;
  (%527,)
}

def @func_17071(%var_17068: Tensor[(1260), float32], %var_17069: Tensor[(10, 96), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(280), float64], Tensor[(1260), float32], Tensor[(10, 96), float64]) {
  %528 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %529 = cast(%var_17068, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %530 = cast(%var_17069, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %531 = reshape(%529, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %532 = reshape(%530, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %533 = @func_15286(%531, %532) /* ty=(Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %534 = %528.0;
  %535 = %533.1;
  (%534, %535, %var_17068, %var_17069)
}

def @func_26274(%var_26266: int32, %var_26267: Tensor[(2, 9, 2), int32]) -> (Tensor[(2, 9, 2), int32],) {
  %536 = cast(%var_26266, dtype="int32") /* ty=int32 */;
  %537 = cast(%var_26267, dtype="int32") /* ty=Tensor[(2, 9, 2), int32] */;
  %538 = right_shift(%536, %537) /* ty=Tensor[(2, 9, 2), int32] */;
  (%538,)
}

def @func_11476(%var_11462: Tensor[(11, 11, 14), float32], %var_11472: Tensor[(462), int8]) -> (Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) {
  %539 = cast(%var_11462, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %540 = cast(%var_11472, dtype="int8") /* ty=Tensor[(462), int8] */;
  %541 = cast(%var_11472, dtype="int8") /* ty=Tensor[(462), int8] */;
  %542 = cast(meta[relay.Constant][35] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %543 = cast(meta[relay.Constant][36] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %544 = reshape(%540, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %545 = reshape(%541, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %546 = reshape(%542, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %547 = reshape(%543, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %548 = @func_6592(%544, %545, %546, %547) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %549 = cosh(%539) /* ty=Tensor[(11, 11, 14), float32] */;
  %550 = %548.6;
  (%549, %550, %var_11472, meta[relay.Constant][35] /* ty=Tensor[(30), float64] */, meta[relay.Constant][36] /* ty=Tensor[(156), float32] */)
}

def @func_23136(%var_23082: Tensor[(234), float32], %var_23092: Tensor[(4, 3, 13), float64], %var_23114: Tensor[(143, 4), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(2, 13, 9), float32], Tensor[(234), float32], Tensor[(4, 3, 13), float32], Tensor[(4, 11, 13), bool], Tensor[(143, 4), float64], Tensor[(84, 2), float64]) {
  %551 = @func_22610() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %552 = cast(%var_23082, dtype="float32") /* ty=Tensor[(234), float32] */;
  %553 = reshape(%552, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %554 = @func_14520(%553) /* ty=(Tensor[(2, 13, 9), float32],) */;
  %555 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  %557 = cast(%var_23092, dtype="float32") /* ty=Tensor[(4, 3, 13), float32] */;
  %558 = cast(%var_23114, dtype="float64") /* ty=Tensor[(143, 4), float64] */;
  %559 = cast(meta[relay.Constant][37] /* ty=Tensor[(84, 2), float64] */, dtype="float64") /* ty=Tensor[(84, 2), float64] */;
  %560 = reshape(%558, newshape=[4, 11, 13]) /* ty=Tensor[(4, 11, 13), float64] */;
  %561 = reshape(%559, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %562 = @func_19322(%560, %561) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */;
  %563 = %551.0;
  %564 = %554.0;
  %565 = floor_mod(%556, %557) /* ty=Tensor[(4, 3, 13), float32] */;
  %566 = %562.2;
  (%563, %564, %var_23082, %565, %566, %var_23114, meta[relay.Constant][37] /* ty=Tensor[(84, 2), float64] */)
}

def @func_17517() -> Tensor[(4, 1, 13), float64] {
  %567 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %567.0
}

def @func_13844(%var_13832: Tensor[(660), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) {
  %568 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %569 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %570 = cast(%var_13832, dtype="float64") /* ty=Tensor[(660), float64] */;
  %571 = cast(meta[relay.Constant][38] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %572 = reshape(%570, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float64] */;
  %573 = reshape(%571, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %574 = @func_12133(%572, %573) /* ty=(Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) */;
  %575 = cast(meta[relay.Constant][38] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %576 = %568.0;
  %577 = %569.0;
  %578 = %574.0;
  %579 = rsqrt(%575) /* ty=Tensor[(39, 4), float32] */;
  (%576, %577, %578, %var_13832, %579)
}

def @func_7596(%var_7590: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %580 = cast(%var_7590, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %581 = acosh(%580) /* ty=Tensor[(9, 8, 6), float64] */;
  (%581,)
}

def @func_17739() -> (Tensor[(13, 11, 9), uint8],) {
  %582 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %583 = %582.0;
  (%583,)
}

def @func_14158(%var_14116: Tensor[(15, 9, 12), uint32], %var_14117: Tensor[(15, 9, 12), uint32]) -> (Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) {
  %584 = cast(%var_14117, dtype="uint32") /* ty=Tensor[(15, 9, 12), uint32] */;
  %585 = shape_of(%var_14116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_14116, dtype="uint32") /* ty=Tensor[(15, 9, 12), uint32] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %588 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %589 = cast(%var_14117, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %590 = maximum(%586, %587) /* ty=Tensor[(15, 9, 12), uint32] */;
  %591 = %588.0;
  %592 = cos(%589) /* ty=Tensor[(15, 9, 12), float32] */;
  (%590, %591, %592)
}

def @func_5718(%var_5690: Tensor[(5, 6, 1), float64], %var_5708: Tensor[(945), float64], %var_5709: float64) -> (Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) {
  %593 = cast(%var_5690, dtype="float64") /* ty=Tensor[(5, 6, 1), float64] */;
  %594 = sqrt(%593) /* ty=Tensor[(5, 6, 1), float64] */;
  %595 = cast(%var_5690, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %599 = cast(%594, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %600 = shape_of(%var_5690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%var_5690, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %603 = cast(%var_5708, dtype="float64") /* ty=Tensor[(945), float64] */;
  %604 = cast(%var_5709, dtype="float64") /* ty=float64 */;
  %605 = reshape(%603, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %606 = reshape(%604, newshape=[]) /* ty=float64 */;
  %607 = @func_897(%605, %606) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %608 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %609 = cast(%var_5709, dtype="float64") /* ty=float64 */;
  %610 = reshape(%608, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), float64] */;
  %611 = reshape(%609, newshape=[]) /* ty=float64 */;
  %612 = @func_1686(%610, %611) /* ty=(Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) */;
  %613 = mod(%597, %598) /* ty=Tensor[(5, 6, ?), float32] */;
  %614 = equal(%601, %602) /* ty=Tensor[(5, 6, ?), bool] */;
  %615 = %607.2;
  %616 = %612.4;
  (%613, %614, %615, %var_5708, %var_5709, %616, meta[relay.Constant][39] /* ty=Tensor[(1, 960), float64] */)
}

def @func_21691() -> (Tensor[(13, 11, 9), int8], Tensor[(6, 10, 13), float32], Tensor[(96), uint32], Tensor[(1274), float64], Tensor[(39, 4), float32], Tensor[(5, 6), float64], Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  %617 = @func_16938() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %618 = @func_18245() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) */;
  %619 = cast(meta[relay.Constant][40] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %620 = cast(meta[relay.Constant][41] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %621 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 6), float64] */, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %622 = reshape(%619, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float64] */;
  %623 = reshape(%620, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %624 = reshape(%621, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %625 = @func_11737(%622, %623, %624) /* ty=(Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) */;
  %626 = @func_18651() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %627 = %617.0;
  %628 = %618.0;
  %629 = %625.1;
  %630 = %626.1;
  %631 = @func_18522() /* ty=Tensor[(4, 1, 13), float64] */;
  (%627, %628, %629, meta[relay.Constant][40] /* ty=Tensor[(1274), float64] */, meta[relay.Constant][41] /* ty=Tensor[(39, 4), float32] */, meta[relay.Constant][42] /* ty=Tensor[(5, 6), float64] */, %630, %631)
}

def @func_20157() -> Tensor[(13, 11, 9), int8] {
  @func_18734() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_19761() -> (Tensor[(52), float64],) {
  %632 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %633 = %632.0;
  (%633,)
}

def @func_21221(%var_21204: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) {
  %634 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %635 = cast(%var_21204, dtype="float64") /* ty=Tensor[(168), float64] */;
  %636 = reshape(%635, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %637 = @func_16520(%636) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
  %638 = %634.0;
  %639 = %637.1;
  (%638, %639, %var_21204)
}

def @func_17012() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %640 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %641 = %640.0;
  %642 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  (%641, %642)
}

def @func_23737() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %643 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %644 = @func_18345() /* ty=Tensor[(4, 1, 13), float64] */;
  %645 = %643.0;
  (%644, %645)
}

def @func_15976(%var_15966: Tensor[(360), float32]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) {
  %646 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %647 = cast(%var_15966, dtype="float32") /* ty=Tensor[(360), float32] */;
  %648 = reshape(%647, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float32] */;
  %649 = @func_15440(%648) /* ty=(Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %650 = %646.0;
  %651 = %649.4;
  (%650, %651, %var_15966)
}

def @func_22284() -> Tensor[(13, 11, 9), int8] {
  @func_12722() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_8371(%var_8359: Tensor[(4, 1, 13), float64]) -> (Tensor[(4, 1, 13), float64],) {
  %652 = cast(%var_8359, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %653 = log2(%652) /* ty=Tensor[(4, 1, 13), float64] */;
  (%653,)
}

def @func_18966(%var_18956: Tensor[(4, 11, 13), float64]) -> Tensor[(4, 11, 13), bool] {
  %654 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %655 = %654.1;
  %656 = cast(%655, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %657 = cast(%var_18956, dtype="bool") /* ty=Tensor[(4, 11, 13), bool] */;
  not_equal(%656, %657) /* ty=Tensor[(4, 11, 13), bool] */
}

def @func_17041() -> (Tensor[(13, 11, 9), int8],) {
  %658 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %659 = %658.0;
  (%659,)
}

def @func_14631() -> (Tensor[(52), float64],) {
  %660 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_22555(%var_22499: Tensor[(360), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(360), float32], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %662 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %663 = cast(%var_22499, dtype="float32") /* ty=Tensor[(360), float32] */;
  %664 = reshape(%663, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %665 = @func_17879(%664) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) */;
  %666 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %667 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %668 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %669 = %662.0;
  %670 = %665.3;
  %671 = %666.0;
  %672 = %667.0;
  %673 = %668.0;
  %674 = @func_17632() /* ty=Tensor[(13, 11, 9), int8] */;
  (%669, %670, %var_22499, %671, %672, %673, %674)
}

def @func_16131(%var_16104: Tensor[(462), int8]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) {
  %675 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %676 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %677 = cast(%var_16104, dtype="int8") /* ty=Tensor[(462), int8] */;
  %678 = cast(%var_16104, dtype="int8") /* ty=Tensor[(462), int8] */;
  %679 = cast(meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %680 = cast(meta[relay.Constant][44] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %681 = reshape(%677, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %682 = reshape(%678, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %683 = reshape(%679, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %684 = reshape(%680, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %685 = @func_6592(%681, %682, %683, %684) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %686 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %687 = cast(meta[relay.Constant][45] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %688 = cast(meta[relay.Constant][45] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %689 = reshape(%687, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %690 = reshape(%688, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %691 = @func_5449(%689, %690) /* ty=(Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) */;
  %692 = %675.1;
  %693 = %676.0;
  %694 = %685.6;
  %695 = %686.0;
  %696 = %691.1;
  (%692, %693, %694, %var_16104, meta[relay.Constant][43] /* ty=Tensor[(30), float64] */, meta[relay.Constant][44] /* ty=Tensor[(156), float32] */, %695, %696, meta[relay.Constant][45] /* ty=Tensor[(1440), int8] */)
}

def @func_16603(%var_16598: Tensor[(3, 7, 16), int8]) -> Tensor[(3, 7, 16), int8] {
  %697 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 7, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 7, 16), int8] */;
  %698 = shape_of(%var_16598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_16598, dtype="int8") /* ty=Tensor[(3, 7, 16), int8] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%699, %700) /* ty=Tensor[(3, 7, 16), int8] */
}

def @func_13334() -> (Tensor[(13, 11, 9), int8],) {
  %701 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %702 = %701.0;
  (%702,)
}

def @func_18651() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %703 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %704 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %705 = %703.0;
  %706 = %704.0;
  (%705, %706)
}

def @func_14612(%var_14560: Tensor[(13, 11, 9), int8]) -> Tensor[(13, 11, 9), bool] {
  %707 = @func_13120() /* ty=Tensor[(13, 11, 9), int8] */;
  %708 = cast(%var_14560, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%710, %711) /* ty=Tensor[(13, 11, 9), bool] */
}

def @func_16331() -> (Tensor[(13, 11, 9), int8],) {
  %712 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %713 = %712.0;
  (%713,)
}

def @func_26690() -> (Tensor[(13, 11, 9), int8],) {
  %714 = @func_23975() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %715 = %714.0;
  (%715,)
}

def @func_18065(%var_18009: Tensor[(480), float32], %var_18034: Tensor[(945), float64], %var_18049: Tensor[(416, 15), uint64]) -> (Tensor[(4, 1, 13), float64], Tensor[(1260), float32], Tensor[(480), float32], float32, Tensor[(30, 1), float64], Tensor[(945), float64], Tensor[(1274), float64], Tensor[(416, 15), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %716 = cast(%var_18009, dtype="float32") /* ty=Tensor[(480), float32] */;
  %717 = cast(-1.59396f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %718 = reshape(%716, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %719 = reshape(%717, newshape=[]) /* ty=float32 */;
  %720 = @func_7213(%718, %719) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
  %721 = cast(meta[relay.Constant][47] /* ty=Tensor[(416, 1), uint64] */, dtype="uint64") /* ty=Tensor[(416, 1), uint64] */;
  %722 = cast(meta[relay.Constant][47] /* ty=Tensor[(416, 1), uint64] */, dtype="uint64") /* ty=Tensor[(416, 1), uint64] */;
  %723 = cast(%var_18034, dtype="float64") /* ty=Tensor[(945), float64] */;
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %725 = reshape(%721, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %726 = reshape(%722, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %727 = reshape(%723, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %728 = reshape(%724, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %729 = @func_10913(%725, %726, %727, %728) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %730 = cast(meta[relay.Constant][47] /* ty=Tensor[(416, 1), uint64] */, dtype="int8") /* ty=Tensor[(416, 1), int8] */;
  %731 = cast(%var_18049, dtype="int8") /* ty=Tensor[(416, 15), int8] */;
  %732 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %733 = %720.7;
  %734 = %729.6;
  %735 = left_shift(%730, %731) /* ty=Tensor[(416, 15), int8] */;
  %736 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %737 = @func_16191() /* ty=Tensor[(13, 11, 9), int8] */;
  (%732, %733, %var_18009, -1.59396f /* ty=float32 */, %734, %var_18034, meta[relay.Constant][48] /* ty=Tensor[(1274), float64] */, %735, %736, %737)
}

def @func_16520(%var_16496: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) {
  %738 = cast(%var_16496, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %739 = cast(-9.10747f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %740 = reshape(%739, newshape=[]) /* ty=float64 */;
  %741 = @func_710(%740) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %742 = asin(%738) /* ty=Tensor[(7, 4, 6), float64] */;
  %743 = %741.0;
  %744 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%742, %743, -9.10747f64 /* ty=float64 */, %744)
}

def @func_25317(%var_25307: Tensor[(480), float32]) -> (Tensor[(13, 11, 9), uint8], Tensor[(480), float32], Tensor[(480), float32], Tensor[(110), int16]) {
  %745 = @func_17739() /* ty=(Tensor[(13, 11, 9), uint8],) */;
  %746 = cast(%var_25307, dtype="float32") /* ty=Tensor[(480), float32] */;
  %747 = cast(meta[relay.Constant][49] /* ty=Tensor[(110), int16] */, dtype="int16") /* ty=Tensor[(110), int16] */;
  %748 = reshape(%746, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %749 = reshape(%747, newshape=[110]) /* ty=Tensor[(110), int16] */;
  %750 = @func_19958(%748, %749) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %751 = %745.0;
  %752 = %750.2;
  (%751, %752, %var_25307, meta[relay.Constant][49] /* ty=Tensor[(110), int16] */)
}

def @func_26929() -> (Tensor[(13, 11, 9), int8],) {
  %753 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %754 = %753.0;
  (%754,)
}

def @func_14484() -> (Tensor[(52), float64],) {
  %755 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %756 = %755.0;
  (%756,)
}

def @func_1686(%var_1658: Tensor[(16, 6, 10), float64], %var_1667: float64) -> (Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) {
  %757 = cast(%var_1658, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
  %758 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
  %759 = cast(%var_1667, dtype="float64") /* ty=float64 */;
  %760 = reshape(%758, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %761 = reshape(%759, newshape=[]) /* ty=float64 */;
  %762 = @func_897(%760, %761) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %763 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
  %764 = cast(%var_1667, dtype="float64") /* ty=float64 */;
  %765 = reshape(%763, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %766 = reshape(%764, newshape=[]) /* ty=float64 */;
  %767 = @func_897(%765, %766) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %768 = cast(%var_1667, dtype="float64") /* ty=float64 */;
  %769 = reshape(%768, newshape=[]) /* ty=float64 */;
  %770 = @func_710(%769) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %771 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
  %772 = cast(%var_1667, dtype="float64") /* ty=float64 */;
  %773 = reshape(%771, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %774 = reshape(%772, newshape=[]) /* ty=float64 */;
  %775 = @func_897(%773, %774) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %776 = rsqrt(%757) /* ty=Tensor[(16, 6, 10), float64] */;
  %777 = %762.0;
  %778 = %767.1;
  %779 = %770.0;
  %780 = %775.1;
  (%776, %777, meta[relay.Constant][50] /* ty=Tensor[(5, 189), float64] */, %var_1667, %778, %779, %780)
}

def @func_16830() -> Tensor[(13, 11, 9), int8] {
  %781 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %781.0
}

def @func_15647() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), bool]) {
  %782 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %783 = %782.0;
  %784 = cast(%783, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
  %785 = reshape(%784, newshape=[13, 11, 9]) /* ty=Tensor[(13, 11, 9), int8] */;
  %786 = @func_14612(%785) /* ty=Tensor[(13, 11, 9), bool] */;
  (%783, %786)
}

def @func_19597() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %787 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %788 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %789 = %787.1;
  (%788, %789)
}

def @func_17127() -> (Tensor[(13, 11, 9), int8],) {
  %790 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %791 = %790.0;
  (%791,)
}

def @func_25134(%var_25128: float32) -> (Tensor[(13, 11, 9), int8], Tensor[(16, 11, 14), float32], float32) {
  %792 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %793 = cast(%var_25128, dtype="float32") /* ty=float32 */;
  %794 = reshape(%793, newshape=[]) /* ty=float32 */;
  %795 = %792.0;
  %796 = @func_21950(%794) /* ty=Tensor[(16, 11, 14), float32] */;
  (%795, %796, %var_25128)
}

def @func_17907() -> Tensor[(13, 11, 9), int8] {
  @func_16191() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_24996(%var_24955: Tensor[(1, 2, 13), float32], %var_24969: Tensor[(168), float64], %var_24988: Tensor[(1260), float32], %var_24989: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(168), float64], Tensor[(13, 11, 9), int8], float32, Tensor[(1260), float32], Tensor[(280), float64], Tensor[(10, 96), float64], Tensor[(1, 2, 13), float32]) {
  %797 = cast(%var_24969, dtype="float64") /* ty=Tensor[(168), float64] */;
  %798 = reshape(%797, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %799 = @func_21221(%798) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) */;
  %800 = cast(1.1333f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %801 = cast(%var_24988, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %802 = cast(%var_24989, dtype="float64") /* ty=Tensor[(280), float64] */;
  %803 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %804 = reshape(%800, newshape=[]) /* ty=float32 */;
  %805 = reshape(%801, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %806 = reshape(%802, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %807 = reshape(%803, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %808 = @func_16798(%804, %805, %806, %807) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %809 = cast(%var_24955, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  %810 = exp(%809) /* ty=Tensor[(1, 2, 13), float32] */;
  %811 = cast(%810, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  %812 = %799.0;
  %813 = %808.0;
  %814 = log2(%811) /* ty=Tensor[(1, 2, 13), float32] */;
  (%812, %var_24969, %813, 1.1333f /* ty=float32 */, %var_24988, %var_24989, meta[relay.Constant][51] /* ty=Tensor[(10, 96), float64] */, %814)
}

def @func_24661() -> (Tensor[(4, 10, 13), bool], Tensor[(52), float64]) {
  %815 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
  %816 = %815.0;
  %817 = @func_20215() /* ty=Tensor[(52), float64] */;
  (%816, %817)
}

def @func_24399() -> (Tensor[(13, 11, 9), int8],) {
  %818 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %819 = %818.0;
  (%819,)
}

def @func_14755() -> (Tensor[(4, 1, 13), float64],) {
  %820 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %821 = %820.0;
  (%821,)
}

def @func_15991() -> (Tensor[(13, 11, 9), int8],) {
  %822 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %823 = %822.1;
  (%823,)
}

def @func_22349() -> Tensor[(52), float64] {
  %824 = @func_14484() /* ty=(Tensor[(52), float64],) */;
  %824.0
}

def @func_23348() -> (Tensor[(13, 11, 9), int8],) {
  %825 = @func_19597() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %826 = %825.1;
  (%826,)
}

def @func_19553(%var_19548: Tensor[(12, 15, 7), float32]) -> (Tensor[(12, 15, 7), float32],) {
  %827 = cast(%var_19548, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
  %828 = erf(%827) /* ty=Tensor[(12, 15, 7), float32] */;
  (%828,)
}

def @func_25628() -> Tensor[(13, 11, 9), int8] {
  @func_16191() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25057() -> Tensor[(13, 11, 9), int8] {
  @func_22752() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_20405() -> Tensor[(13, 11, 9), int8] {
  %829 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %829.0
}

def @func_25794() -> (Tensor[(13, 11, 9), int8],) {
  %830 = @func_21834() /* ty=Tensor[(13, 11, 9), int8] */;
  (%830,)
}

def @func_7213(%var_7176: Tensor[(16, 6, 5), float32], %var_7202: float32) -> (Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) {
  %831 = cast(%var_7176, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %832 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %833 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %834 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %835 = cast(meta[relay.Constant][54] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %836 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %837 = reshape(%832, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %838 = reshape(%833, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %839 = reshape(%834, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %840 = reshape(%835, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %841 = reshape(%836, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %842 = @func_3840(%837, %838, %839, %840, %841) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %843 = cast(%var_7202, dtype="float32") /* ty=float32 */;
  %844 = cast(meta[relay.Constant][55] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %845 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %846 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %847 = cast(meta[relay.Constant][54] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %848 = reshape(%843, newshape=[]) /* ty=float32 */;
  %849 = reshape(%844, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %850 = reshape(%845, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %851 = reshape(%846, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %852 = reshape(%847, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %853 = @func_4313(%848, %849, %850, %851, %852) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %854 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %855 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %856 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %857 = cast(meta[relay.Constant][54] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %858 = %842.0;
  %859 = cast(%858, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %860 = reshape(%854, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %861 = reshape(%855, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %862 = reshape(%856, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %863 = reshape(%857, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %864 = reshape(%859, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %865 = @func_3840(%860, %861, %862, %863, %864) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %866 = rsqrt(%831) /* ty=Tensor[(16, 6, 5), float32] */;
  %867 = %853.1;
  %868 = %865.3;
  (%866, %858, meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, meta[relay.Constant][54] /* ty=Tensor[(960), float64] */, %867, %var_7202, meta[relay.Constant][55] /* ty=Tensor[(1260), float32] */, %868)
}

def @func_18245() -> (Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) {
  %869 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %870 = cast(-2.14575f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %871 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %872 = reshape(%870, newshape=[]) /* ty=float32 */;
  %873 = reshape(%871, newshape=[960, 1]) /* ty=Tensor[(960, 1), float64] */;
  %874 = @func_17967(%872, %873) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) */;
  %875 = log(%869) /* ty=Tensor[(6, 10, 13), float32] */;
  %876 = %874.5;
  (%875, %876, -2.14575f /* ty=float32 */, meta[relay.Constant][57] /* ty=Tensor[(960), float64] */)
}

def @func_24021(%var_24002: Tensor[(11, 3, 10), float32]) -> Tensor[(11, 3, 10), float32] {
  %877 = cast(%var_24002, dtype="float32") /* ty=Tensor[(11, 3, 10), float32] */;
  tan(%877) /* ty=Tensor[(11, 3, 10), float32] */
}

def @func_7853(%var_7843: Tensor[(14, 13, 7), float64], %var_7847: Tensor[(30), float64], %var_7848: Tensor[(945), float64]) -> (Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) {
  %878 = cast(%var_7843, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
  %879 = cast(%var_7847, dtype="float64") /* ty=Tensor[(30), float64] */;
  %880 = cast(%var_7848, dtype="float64") /* ty=Tensor[(945), float64] */;
  %881 = cast(-6.87177f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %882 = reshape(%879, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
  %883 = reshape(%880, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %884 = reshape(%881, newshape=[]) /* ty=float64 */;
  %885 = @func_5718(%882, %883, %884) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
  %886 = rsqrt(%878) /* ty=Tensor[(14, 13, 7), float64] */;
  %887 = %885.2;
  (%886, %887, %var_7847, %var_7848, -6.87177f64 /* ty=float64 */)
}

def @func_14815() -> (Tensor[(52), float64],) {
  %888 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %889 = %888.2;
  (%889,)
}

def @func_10230(%var_10189: Tensor[(11, 5, 2), int16]) -> (Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
  %890 = cast(%var_10189, dtype="int16") /* ty=Tensor[(11, 5, 2), int16] */;
  %891 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(11, 5, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 5, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 2), int16] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %894 = cast(meta[relay.Constant][59] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %895 = cast(meta[relay.Constant][60] /* ty=Tensor[(48, 2), uint32] */, dtype="uint32") /* ty=Tensor[(48, 2), uint32] */;
  %896 = cast(meta[relay.Constant][61] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %897 = cast(meta[relay.Constant][62] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %898 = reshape(%894, newshape=[]) /* ty=uint32 */;
  %899 = reshape(%895, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %900 = reshape(%896, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %901 = reshape(%897, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %902 = @func_5112(%898, %899, %900, %901) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %903 = bitwise_and(%892, %893) /* ty=Tensor[(11, 5, 2), int16] */;
  %904 = %902.0;
  (%903, %904, meta[relay.Constant][59] /* ty=uint32 */, meta[relay.Constant][60] /* ty=Tensor[(48, 2), uint32] */, meta[relay.Constant][61] /* ty=Tensor[(960), bool] */, meta[relay.Constant][62] /* ty=Tensor[(180), float32] */)
}

def @func_14006() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %905 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %906 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %907 = %905.0;
  %908 = %906.0;
  (%907, %908)
}

def @func_12766() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) {
  %909 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %910 = cast(meta[relay.Constant][63] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %911 = reshape(%910, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float64] */;
  %912 = @func_8371(%911) /* ty=(Tensor[(4, 1, 13), float64],) */;
  %913 = %909.0;
  %914 = %912.0;
  (%913, %914, meta[relay.Constant][63] /* ty=Tensor[(52), float64] */)
}

def @func_18522() -> Tensor[(4, 1, 13), float64] {
  @func_13594() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_12361(%var_12355: Tensor[(4, 12, 12), float64], %var_12356: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64],) {
  %915 = cast(%var_12356, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %916 = shape_of(%var_12355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%var_12355, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %919 = floor_mod(%917, %918) /* ty=Tensor[(4, 12, 12), float64] */;
  (%919,)
}

def @func_16720(%var_16713: Tensor[(945), float64]) -> (Tensor[(52), float64], Tensor[(1, 960), float64], Tensor[(5, 6), float64], Tensor[(945), float64], float64) {
  %920 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %921 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 6), float64] */, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %922 = cast(%var_16713, dtype="float64") /* ty=Tensor[(945), float64] */;
  %923 = cast(8.34341f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %924 = reshape(%921, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
  %925 = reshape(%922, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %926 = reshape(%923, newshape=[]) /* ty=float64 */;
  %927 = @func_5718(%924, %925, %926) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
  %928 = %920.0;
  %929 = %927.6;
  (%928, %929, meta[relay.Constant][64] /* ty=Tensor[(5, 6), float64] */, %var_16713, 8.34341f64 /* ty=float64 */)
}

def @func_14718(%var_14713: uint32) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) {
  %930 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %931 = cast(meta[relay.Constant][65] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %932 = cast(meta[relay.Constant][65] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %933 = reshape(%931, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %934 = reshape(%932, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %935 = @func_12361(%933, %934) /* ty=(Tensor[(4, 12, 12), float64],) */;
  %936 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %937 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %938 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %939 = cast(%var_14713, dtype="uint32") /* ty=uint32 */;
  %940 = cast(meta[relay.Constant][66] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %941 = reshape(%939, newshape=[]) /* ty=uint32 */;
  %942 = reshape(%940, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %943 = @func_12952(%941, %942) /* ty=(Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) */;
  %944 = %930.0;
  %945 = %935.0;
  %946 = %936.1;
  %947 = %937.0;
  %948 = %938.0;
  %949 = %943.0;
  (%944, %945, meta[relay.Constant][65] /* ty=Tensor[(288, 2), float64] */, %946, %947, %948, %949, %var_14713, meta[relay.Constant][66] /* ty=Tensor[(231), float64] */)
}

def @func_18772() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %950 = @func_17127() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %951 = @func_18582() /* ty=Tensor[(13, 11, 9), int8] */;
  %952 = %950.0;
  (%951, %952)
}

def @func_21276() -> (Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), int8]) {
  %953 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  %954 = @func_18582() /* ty=Tensor[(13, 11, 9), int8] */;
  (%953, %954)
}

def @func_22610() -> (Tensor[(13, 11, 9), int8],) {
  %955 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %956 = %955.0;
  (%956,)
}

def @func_13178(%var_13153: Tensor[(14, 6, 5), bool], %var_13154: Tensor[(14, 6, 5), bool], %var_13174: Tensor[(960), bool]) -> (Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
  %957 = cast(%var_13154, dtype="bool") /* ty=Tensor[(14, 6, 5), bool] */;
  %958 = shape_of(%var_13153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%var_13153, dtype="bool") /* ty=Tensor[(14, 6, 5), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %961 = cast(meta[relay.Constant][67] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %962 = cast(meta[relay.Constant][68] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %963 = cast(%var_13174, dtype="bool") /* ty=Tensor[(960), bool] */;
  %964 = cast(meta[relay.Constant][69] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %965 = reshape(%961, newshape=[]) /* ty=uint32 */;
  %966 = reshape(%962, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %967 = reshape(%963, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %968 = reshape(%964, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %969 = @func_5112(%965, %966, %967, %968) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %970 = logical_and(%959, %960) /* ty=Tensor[(14, 6, 5), bool] */;
  %971 = %969.3;
  (%970, %971, meta[relay.Constant][67] /* ty=uint32 */, meta[relay.Constant][68] /* ty=Tensor[(96), uint32] */, %var_13174, meta[relay.Constant][69] /* ty=Tensor[(180), float32] */)
}

def @func_21314() -> Tensor[(4, 1, 13), float64] {
  %972 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %972.2
}

def @func_13924() -> (Tensor[(13, 11, 9), int8],) {
  %973 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %974 = %973.0;
  (%974,)
}

def @func_13055(%var_13019: Tensor[(576), float64]) -> (Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  %975 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %976 = cast(%var_13019, dtype="float64") /* ty=Tensor[(576), float64] */;
  %977 = cast(%var_13019, dtype="float64") /* ty=Tensor[(576), float64] */;
  %978 = reshape(%976, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %979 = reshape(%977, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %980 = @func_12361(%978, %979) /* ty=(Tensor[(4, 12, 12), float64],) */;
  %981 = %975.2;
  %982 = %980.0;
  (%981, %982, %var_13019)
}

def @func_25967() -> Tensor[(13, 11, 9), int8] {
  %983 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %983.1
}

def @func_22396() -> Tensor[(13, 11, 9), int8] {
  %984 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %984.0
}

def @func_20025(%var_20012: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
  %985 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %986 = %985.2;
  %987 = cast(%986, dtype="int16") /* ty=Tensor[(13, 11, 9), int16] */;
  %988 = cast(%986, dtype="int16") /* ty=Tensor[(13, 11, 9), int16] */;
  %989 = reshape(%987, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int16] */;
  %990 = reshape(%988, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int16] */;
  %991 = @func_17405(%989, %990) /* ty=(Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) */;
  %992 = cast(meta[relay.Constant][70] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %993 = cast(meta[relay.Constant][70] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %994 = reshape(%992, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %995 = reshape(%993, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %996 = @func_4508(%994, %995) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %997 = cast(%var_20012, dtype="float64") /* ty=Tensor[(168), float64] */;
  %998 = reshape(%997, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %999 = @func_16520(%998) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
  %1000 = %991.1;
  %1001 = %996.0;
  %1002 = %999.3;
  (%986, %1000, %1001, meta[relay.Constant][70] /* ty=Tensor[(231), float64] */, %1002, %var_20012)
}

def @func_21488() -> (Tensor[(52), float64],) {
  %1003 = @func_17342() /* ty=(Tensor[(52), float64],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_25877() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
  %1005 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %1006 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1007 = %1005.0;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_18848(%var_18842: Tensor[(4, 104), uint64], %var_18843: Tensor[(945), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], float64, Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
  %1009 = @func_14755() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %1012 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1013 = cast(%var_18842, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %1014 = cast(%var_18842, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %1015 = cast(%var_18843, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1016 = cast(meta[relay.Constant][71] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1017 = reshape(%1013, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %1018 = reshape(%1014, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %1019 = reshape(%1015, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1020 = reshape(%1016, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %1021 = @func_10913(%1017, %1018, %1019, %1020) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %1022 = log(%1011) /* ty=Tensor[(4, 1, 13), float64] */;
  %1023 = %1012.0;
  %1024 = %1021.3;
  (%1022, %1023, %1024, %var_18842, %var_18843, meta[relay.Constant][71] /* ty=Tensor[(1274), float64] */)
}

def @func_21950(%var_21935: float32) -> Tensor[(16, 11, 14), float32] {
  %1025 = cast(%var_21935, dtype="float32") /* ty=float32 */;
  %1026 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  add(%1025, %1026) /* ty=Tensor[(16, 11, 14), float32] */
}

def @func_15907(%var_15896: Tensor[(1, 110), int16]) -> (Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) {
  %1027 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1028 = cast(%var_15896, dtype="int16") /* ty=Tensor[(1, 110), int16] */;
  %1029 = reshape(%1028, newshape=[11, 5, 2]) /* ty=Tensor[(11, 5, 2), int16] */;
  %1030 = @func_10230(%1029) /* ty=(Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) */;
  %1031 = %1027.2;
  %1032 = %1030.2;
  (%1031, %1032, %var_15896)
}

def @func_13086() -> (Tensor[(52), float64],) {
  %1033 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1034 = %1033.2;
  (%1034,)
}

def @func_13864() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1035 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1036 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %1037 = %1035.0;
  (%1036, %1037)
}

def @func_19012() -> Tensor[(13, 11, 9), int8] {
  @func_18734() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_24263() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  %1038 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1039 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1040 = %1038.1;
  %1041 = %1039.0;
  (%1040, %1041)
}

def @func_24535() -> (Tensor[(52), float64],) {
  %1042 = @func_17327() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */;
  %1043 = %1042.0;
  (%1043,)
}

def @func_24058() -> (Tensor[(13, 11, 9), int8],) {
  %1044 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1044,)
}

def @func_26389() -> Tensor[(4, 1, 13), float64] {
  @func_17517() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_18476() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %1045 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1046 = @func_14755() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1047 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1048 = %1045.0;
  %1049 = %1046.0;
  %1050 = %1047.0;
  (%1048, %1049, %1050)
}

def @func_18895() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %1051 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1052 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1053 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %1054 = %1051.0;
  %1055 = %1052.1;
  (%1053, %1054, %1055)
}

def @func_18345() -> Tensor[(4, 1, 13), float64] {
  @func_17517() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_13594() -> Tensor[(4, 1, 13), float64] {
  %1056 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1056.1
}

def @func_19671() -> Tensor[(13, 11, 9), int8] {
  %1057 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1057.0
}

def @func_21529() -> (Tensor[(13, 11, 9), int8],) {
  %1058 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %1059 = %1058.1;
  (%1059,)
}

def @func_17327() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
  %1060 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %1061 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1062 = %1060.0;
  %1063 = %1061.0;
  (%1062, %1063)
}

def @func_20215() -> Tensor[(52), float64] {
  %1064 = @func_14484() /* ty=(Tensor[(52), float64],) */;
  %1064.0
}

def @func_19126(%var_19111: Tensor[(420), bool], %var_19122: Tensor[(1274, 1), float64], %var_19124: Tensor[(945), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) {
  %1065 = @func_17776() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1066 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1067 = cast(%var_19111, dtype="bool") /* ty=Tensor[(420), bool] */;
  %1068 = reshape(%1067, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %1069 = @func_18431(%1068) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
  %1070 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1071 = cast(%var_19122, dtype="float64") /* ty=Tensor[(1274, 1), float64] */;
  %1072 = cast(meta[relay.Constant][73] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1073 = cast(%var_19124, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1074 = reshape(%1071, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
  %1075 = reshape(%1072, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %1076 = reshape(%1073, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1077 = @func_7853(%1074, %1075, %1076) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
  %1078 = %1065.0;
  %1079 = %1066.0;
  %1080 = %1069.2;
  %1081 = %1070.0;
  %1082 = %1077.4;
  (%1078, %1079, %1080, %var_19111, %1081, %1082, %var_19122, meta[relay.Constant][73] /* ty=Tensor[(30), float64] */, %var_19124)
}

def @func_25257() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  %1083 = @func_18902() /* ty=(Tensor[(13, 11, 9), uint8],) */;
  %1084 = %1083.0;
  %1085 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1084, %1085)
}

def @func_25050() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(660), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  %1086 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1087 = cast(meta[relay.Constant][74] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1088 = reshape(%1087, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1089 = @func_13844(%1088) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) */;
  %1090 = cast(meta[relay.Constant][75] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1091 = reshape(%1090, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1092 = @func_13055(%1091) /* ty=(Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) */;
  %1093 = %1086.0;
  %1094 = %1089.1;
  %1095 = %1092.1;
  (%1093, %1094, meta[relay.Constant][74] /* ty=Tensor[(660), float64] */, %1095, meta[relay.Constant][75] /* ty=Tensor[(576), float64] */)
}

def @func_25466() -> (Tensor[(52), float64],) {
  %1096 = @func_21488() /* ty=(Tensor[(52), float64],) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_22907() -> Tensor[(13, 11, 9), int8] {
  %1098 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1098.0
}

def @func_25755(%var_25707: int64, %var_25752: Tensor[(280), float64]) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %1099 = cast(%var_25707, dtype="bool") /* ty=bool */;
  %1100 = cast(meta[relay.Constant][76] /* ty=Tensor[(10, 1, 4), int64] */, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
  %1101 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1102 = cast(%var_25707, dtype="float32") /* ty=float32 */;
  %1103 = cast(meta[relay.Constant][77] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1104 = cast(%var_25752, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1105 = cast(meta[relay.Constant][78] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1106 = reshape(%1102, newshape=[]) /* ty=float32 */;
  %1107 = reshape(%1103, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1108 = reshape(%1104, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1109 = reshape(%1105, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1110 = @func_16798(%1106, %1107, %1108, %1109) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1111 = not_equal(%1099, %1100) /* ty=Tensor[(10, 1, 4), bool] */;
  %1112 = %1101.0;
  %1113 = %1110.8;
  (%1111, %1112, %1113, meta[relay.Constant][77] /* ty=Tensor[(1260), float32] */, %var_25752, meta[relay.Constant][78] /* ty=Tensor[(960), float64] */)
}

def @func_13584() -> (Tensor[(13, 11, 9), int8],) {
  %1114 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1114,)
}

def @func_22699() -> Tensor[(13, 11, 9), int8] {
  @func_16830() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25340() -> Tensor[(13, 11, 9), int8] {
  %1115 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1115.1
}

def @func_25925() -> (Tensor[(52), float64],) {
  %1116 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %1117 = %1116.0;
  (%1117,)
}

def @func_23782() -> Tensor[(13, 11, 9), int8] {
  %1118 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1118.0
}

def @func_17632() -> Tensor[(13, 11, 9), int8] {
  %1119 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1119.0
}

def @func_24382() -> (Tensor[(13, 11, 9), int8],) {
  %1120 = @func_21931() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1120,)
}

def @func_25345() -> Tensor[(13, 11, 9), int8] {
  %1121 = @func_20444() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1121.0
}

def @func_14268(%var_14260: Tensor[(10, 12, 1), float64]) -> Tensor[(10, 12, 1), float64] {
  %1122 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %1123 = %1122.5;
  %1124 = cast(%1123, dtype="float64") /* ty=float64 */;
  %1125 = cast(%var_14260, dtype="float64") /* ty=Tensor[(10, 12, 1), float64] */;
  floor_mod(%1124, %1125) /* ty=Tensor[(10, 12, 1), float64] */
}

def @func_5276(%var_5235: Tensor[(13, 3, 4), float32], %var_5241: uint32, %var_5244: Tensor[(180), float32], %var_5261: Tensor[(33, 7), float64]) -> (Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) {
  %1126 = cast(%var_5241, dtype="uint32") /* ty=uint32 */;
  %1127 = cast(meta[relay.Constant][79] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %1128 = cast(meta[relay.Constant][80] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1129 = cast(%var_5244, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1130 = reshape(%1126, newshape=[]) /* ty=uint32 */;
  %1131 = reshape(%1127, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %1132 = reshape(%1128, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1133 = reshape(%1129, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1134 = @func_5112(%1130, %1131, %1132, %1133) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %1135 = cast(%var_5261, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1136 = cast(%var_5261, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1137 = reshape(%1135, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1138 = reshape(%1136, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1139 = @func_4508(%1137, %1138) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %1140 = cast(%var_5235, dtype="float32") /* ty=Tensor[(13, 3, 4), float32] */;
  %1141 = asin(%1140) /* ty=Tensor[(13, 3, 4), float32] */;
  %1142 = cast(%var_5235, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %1143 = shape_of(%1141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1144 = cast(%1141, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1146 = %1134.7;
  %1147 = %1139.0;
  %1148 = logical_xor(%1144, %1145) /* ty=Tensor[(13, 3, 4), int32] */;
  (%1146, %var_5241, meta[relay.Constant][79] /* ty=Tensor[(96), uint32] */, meta[relay.Constant][80] /* ty=Tensor[(960), bool] */, %var_5244, %1147, %var_5261, %1148)
}

def @func_20694() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) {
  %1149 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1150 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1151 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %1152 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
  %1153 = %1149.0;
  %1154 = %1150.0;
  %1155 = %1151.0;
  %1156 = %1152.0;
  (%1153, %1154, %1155, %1156)
}

def @func_18268() -> (Tensor[(13, 11, 9), int8],) {
  %1157 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_22373() -> Tensor[(13, 11, 9), int8] {
  %1159 = @func_17041() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1159.0
}

def @func_23567(%var_23559: Tensor[(1274), float64]) -> (Tensor[(13, 11, 9), uint8], Tensor[(945), float64], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 1, 13), float64]) {
  %1160 = @func_18902() /* ty=(Tensor[(13, 11, 9), uint8],) */;
  %1161 = cast(meta[relay.Constant][81] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %1162 = cast(%var_23559, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1163 = reshape(%1161, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), uint32] */;
  %1164 = reshape(%1162, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %1165 = @func_15096(%1163, %1164) /* ty=(Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */;
  %1166 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1167 = %1160.0;
  %1168 = %1165.4;
  %1169 = %1166.0;
  (%1167, %1168, meta[relay.Constant][81] /* ty=Tensor[(2112), uint32] */, %var_23559, %1169)
}

def @func_25196() -> (Tensor[(13, 11, 9), int8],) {
  %1170 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1171 = %1170.0;
  (%1171,)
}

def @func_26090() -> (Tensor[(9, 140), float32], Tensor[(5, 12, 3), int32], Tensor[(280), float64], Tensor[(4, 10, 13), bool], Tensor[(180, 960), int64], Tensor[(180, 960), float64]) {
  %1172 = @func_23916() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) */;
  %1173 = cast(meta[relay.Constant][82] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1174 = cast(meta[relay.Constant][82] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1175 = cast(meta[relay.Constant][83] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1176 = cast(meta[relay.Constant][84] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1177 = cast(meta[relay.Constant][82] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1178 = reshape(%1173, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %1179 = reshape(%1174, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %1180 = reshape(%1175, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1181 = reshape(%1176, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %1182 = reshape(%1177, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %1183 = @func_3840(%1178, %1179, %1180, %1181, %1182) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %1184 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
  %1185 = cast(meta[relay.Constant][82] /* ty=Tensor[(180, 1), float32] */, dtype="int64") /* ty=Tensor[(180, 1), int64] */;
  %1186 = cast(meta[relay.Constant][84] /* ty=Tensor[(960), float64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %1187 = cast(meta[relay.Constant][84] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1188 = cast(meta[relay.Constant][82] /* ty=Tensor[(180, 1), float32] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %1189 = %1172.2;
  %1190 = %1183.0;
  %1191 = %1184.0;
  %1192 = maximum(%1185, %1186) /* ty=Tensor[(180, 960), int64] */;
  %1193 = power(%1187, %1188) /* ty=Tensor[(180, 960), float64] */;
  (%1189, %1190, meta[relay.Constant][83] /* ty=Tensor[(280), float64] */, %1191, %1192, %1193)
}

def @func_10913(%var_10894: Tensor[(13, 8, 4), uint64], %var_10895: Tensor[(13, 8, 4), uint64], %var_10902: Tensor[(945), float64], %var_10907: Tensor[(1274), float64]) -> (Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) {
  %1194 = cast(%var_10895, dtype="uint64") /* ty=Tensor[(13, 8, 4), uint64] */;
  %1195 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1196 = cast(%var_10894, dtype="uint64") /* ty=Tensor[(13, 8, 4), uint64] */;
  %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1198 = cast(%var_10902, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1199 = cast(-2.86842f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1200 = reshape(%1198, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %1201 = reshape(%1199, newshape=[]) /* ty=float64 */;
  %1202 = @func_897(%1200, %1201) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %1203 = cast(%var_10907, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1204 = cast(meta[relay.Constant][85] /* ty=Tensor[(30, 1), float64] */, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %1205 = cast(%var_10902, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1206 = reshape(%1203, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
  %1207 = reshape(%1204, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %1208 = reshape(%1205, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1209 = @func_7853(%1206, %1207, %1208) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
  %1210 = left_shift(%1196, %1197) /* ty=Tensor[(13, 8, 4), uint64] */;
  %1211 = %1202.0;
  %1212 = %1209.4;
  (%1210, %1211, %var_10902, -2.86842f64 /* ty=float64 */, %1212, %var_10907, meta[relay.Constant][85] /* ty=Tensor[(30, 1), float64] */)
}

def @func_897(%var_861: Tensor[(15, 7, 9), float64], %var_886: float64) -> (Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) {
  %1213 = cast(%var_886, dtype="float64") /* ty=float64 */;
  %1214 = reshape(%1213, newshape=[]) /* ty=float64 */;
  %1215 = @func_710(%1214) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1216 = cast(%var_886, dtype="float64") /* ty=float64 */;
  %1217 = reshape(%1216, newshape=[]) /* ty=float64 */;
  %1218 = @func_710(%1217) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1219 = cast(%var_886, dtype="float64") /* ty=float64 */;
  %1220 = reshape(%1219, newshape=[]) /* ty=float64 */;
  %1221 = @func_710(%1220) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1222 = cast(%var_861, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %1223 = sin(%1222) /* ty=Tensor[(15, 7, 9), float64] */;
  %1224 = cast(%1223, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
  %1225 = cast(%var_886, dtype="int8") /* ty=int8 */;
  %1226 = %1215.0;
  %1227 = %1218.0;
  %1228 = %1221.0;
  %1229 = bitwise_or(%1224, %1225) /* ty=Tensor[(15, 7, 9), int8] */;
  (%1226, %1227, %1228, %1229)
}

def @func_18582() -> Tensor[(13, 11, 9), int8] {
  %1230 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1230.0
}

def @func_26872(%var_26846: Tensor[(16, 16, 15), float64]) -> (Tensor[(16, 16, 15), float64], Tensor[(960), bool], Tensor[(420), bool], Tensor[(13, 11, 9), uint8]) {
  %1231 = cast(%var_26846, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
  %1232 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(16, 16, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1233 = cast(meta[relay.Constant][86] /* ty=Tensor[(16, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
  %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1235 = cast(meta[relay.Constant][87] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %1236 = reshape(%1235, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %1237 = @func_18431(%1236) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
  %1238 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %1239 = floor_mod(%1233, %1234) /* ty=Tensor[(16, 16, 15), float64] */;
  %1240 = %1237.3;
  %1241 = %1238.0;
  (%1239, %1240, meta[relay.Constant][87] /* ty=Tensor[(420), bool] */, %1241)
}

def @func_13778() -> (Tensor[(13, 11, 9), int8],) {
  %1242 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1243 = %1242.0;
  (%1243,)
}

def @main(%var_27074: Tensor[(168), float64], %var_27076: Tensor[(4, 11, 13), bool]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(572), float64], Tensor[(168), float64], Tensor[(4, 11, 13), float64]) {
  %1244 = @func_25196() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1245 = cast(meta[relay.Constant][88] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %1246 = cast(%var_27074, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1247 = reshape(%1245, newshape=[4, 11, 13]) /* ty=Tensor[(4, 11, 13), float64] */;
  %1248 = reshape(%1246, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1249 = @func_19322(%1247, %1248) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */;
  %1250 = %1249.2;
  %1251 = cast(%var_27076, dtype="float64") /* ty=Tensor[(4, 11, 13), float64] */;
  %1252 = shape_of(%1250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1253 = cast(%1250, dtype="float64") /* ty=Tensor[(4, 11, 13), float64] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1255 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %1256 = %1244.0;
  %1257 = power(%1253, %1254) /* ty=Tensor[(4, 11, 13), float64] */;
  (%1255, %1256, meta[relay.Constant][88] /* ty=Tensor[(572), float64] */, %var_27074, %1257)
}

def @func_26576() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), uint8], Tensor[(462), int8]) {
  %1258 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %1259 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1260 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1261 = cast(meta[relay.Constant][89] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %1262 = reshape(%1261, newshape=[462]) /* ty=Tensor[(462), int8] */;
  %1263 = @func_16131(%1262) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) */;
  %1264 = %1258.0;
  %1265 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %1266 = %1259.0;
  %1267 = @func_21743() /* ty=Tensor[(13, 11, 9), int8] */;
  %1268 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %1269 = %1260.0;
  %1270 = %1263.1;
  (%1264, %1265, %1266, %1267, %1268, %1269, %1270, meta[relay.Constant][89] /* ty=Tensor[(462), int8] */)
}

def @func_21995() -> Tensor[(52), float64] {
  @func_20987() /* ty=Tensor[(52), float64] */
}

def @func_19322(%var_19293: Tensor[(4, 11, 13), float64], %var_19303: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
  %1271 = cast(meta[relay.Constant][90] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %1272 = reshape(%1271, newshape=[462]) /* ty=Tensor[(462), int8] */;
  %1273 = @func_16131(%1272) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) */;
  %1274 = %1273.0;
  %1275 = cast(%1274, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1276 = cast(%var_19293, dtype="bool") /* ty=Tensor[(4, 11, 13), bool] */;
  %1277 = cast(%var_19303, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1278 = reshape(%1277, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %1279 = @func_16520(%1278) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
  %1280 = @func_18734() /* ty=Tensor[(13, 11, 9), int8] */;
  %1281 = less(%1275, %1276) /* ty=Tensor[(4, 11, 13), bool] */;
  %1282 = %1279.3;
  (%1280, meta[relay.Constant][90] /* ty=Tensor[(462), int8] */, %1281, %1282, %var_19303)
}

def @func_20543() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1283 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1284 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1285 = %1283.1;
  %1286 = @func_17907() /* ty=Tensor[(13, 11, 9), int8] */;
  %1287 = %1284.0;
  (%1285, %1286, %1287)
}

def @func_21462(%var_21456: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(10, 2, 14), float64], Tensor[(280), float64]) {
  %1288 = @func_20444() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1289 = cast(%var_21456, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1290 = reshape(%1289, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %1291 = @func_3748(%1290) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %1292 = %1288.0;
  %1293 = %1291.0;
  (%1292, %1293, %var_21456)
}

def @func_20596(%var_20565: Tensor[(420), bool], %var_20567: Tensor[(1, 945), float64]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(1274), float64], Tensor[(1, 945), float64], Tensor[(13, 11, 9), int8]) {
  %1294 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %1295 = cast(%var_20565, dtype="bool") /* ty=Tensor[(420), bool] */;
  %1296 = cast(meta[relay.Constant][91] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1297 = cast(%var_20567, dtype="float64") /* ty=Tensor[(1, 945), float64] */;
  %1298 = reshape(%1295, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %1299 = reshape(%1296, newshape=[1274, 1]) /* ty=Tensor[(1274, 1), float64] */;
  %1300 = reshape(%1297, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1301 = @func_19126(%1298, %1299, %1300) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) */;
  %1302 = @func_17041() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1303 = %1294.0;
  %1304 = %1301.0;
  %1305 = %1302.0;
  (%1303, %1304, %var_20565, meta[relay.Constant][91] /* ty=Tensor[(1274), float64] */, %var_20567, %1305)
}

def @func_26429(%var_26401: Tensor[(10, 10, 12), float64]) -> (Tensor[(10, 10, 12), float64], Tensor[(3, 7, 16), int8], Tensor[(168, 2), int8], Tensor[(1274), float64], Tensor[(16, 26), uint64], Tensor[(15246), float32], Tensor[(13, 11, 9), int8]) {
  %1306 = cast(%var_26401, dtype="float64") /* ty=Tensor[(10, 10, 12), float64] */;
  %1307 = cast(meta[relay.Constant][92] /* ty=Tensor[(168, 2), int8] */, dtype="int8") /* ty=Tensor[(168, 2), int8] */;
  %1308 = cast(meta[relay.Constant][93] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1309 = cast(meta[relay.Constant][94] /* ty=Tensor[(16, 26), uint64] */, dtype="uint64") /* ty=Tensor[(16, 26), uint64] */;
  %1310 = cast(meta[relay.Constant][95] /* ty=Tensor[(15246), float32] */, dtype="float32") /* ty=Tensor[(15246), float32] */;
  %1311 = cast(meta[relay.Constant][94] /* ty=Tensor[(16, 26), uint64] */, dtype="float32") /* ty=Tensor[(16, 26), float32] */;
  %1312 = reshape(%1307, newshape=[336]) /* ty=Tensor[(336), int8] */;
  %1313 = reshape(%1308, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %1314 = reshape(%1309, newshape=[4, 104]) /* ty=Tensor[(4, 104), uint64] */;
  %1315 = reshape(%1310, newshape=[9, 1694]) /* ty=Tensor[(9, 1694), float32] */;
  %1316 = reshape(%1311, newshape=[4, 104]) /* ty=Tensor[(4, 104), float32] */;
  %1317 = @func_17280(%1312, %1313, %1314, %1315, %1316) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) */;
  %1318 = sin(%1306) /* ty=Tensor[(10, 10, 12), float64] */;
  %1319 = %1317.4;
  %1320 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1318, %1319, meta[relay.Constant][92] /* ty=Tensor[(168, 2), int8] */, meta[relay.Constant][93] /* ty=Tensor[(1274), float64] */, meta[relay.Constant][94] /* ty=Tensor[(16, 26), uint64] */, meta[relay.Constant][95] /* ty=Tensor[(15246), float32] */, %1320)
}

def @func_16798(%var_16789: float32, %var_16790: Tensor[(1260), float32], %var_16792: Tensor[(280), float64], %var_16793: Tensor[(960), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %1321 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1322 = cast(%var_16789, dtype="float32") /* ty=float32 */;
  %1323 = cast(%var_16790, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1324 = cast(meta[relay.Constant][96] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1325 = cast(%var_16792, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1326 = cast(%var_16793, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1327 = reshape(%1322, newshape=[]) /* ty=float32 */;
  %1328 = reshape(%1323, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %1329 = reshape(%1324, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1330 = reshape(%1325, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1331 = reshape(%1326, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1332 = @func_4313(%1327, %1328, %1329, %1330, %1331) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1333 = %1321.1;
  %1334 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  %1335 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  %1336 = %1332.0;
  (%1333, %1334, %1335, %1336, %var_16789, %var_16790, meta[relay.Constant][96] /* ty=Tensor[(180), float32] */, %var_16792, %var_16793)
}

def @func_24102() -> (Tensor[(13, 11, 9), int8],) {
  %1337 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1338 = %1337.0;
  (%1338,)
}

def @func_710(%var_697: float64) -> (Tensor[(1, 3, 3), float64],) {
  %1339 = cast(%var_697, dtype="float64") /* ty=float64 */;
  %1340 = cast(meta[relay.Constant][97] /* ty=Tensor[(1, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 3), float64] */;
  %1341 = divide(%1339, %1340) /* ty=Tensor[(1, 3, 3), float64] */;
  (%1341,)
}

def @func_13422() -> (Tensor[(52), float64],) {
  %1342 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_14078() -> (Tensor[(13, 11, 9), int8],) {
  %1344 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1345 = %1344.0;
  (%1345,)
}

def @func_14952(%var_14884: Tensor[(91, 14), float64], %var_14941: Tensor[(280), float64], %var_14947: Tensor[(91, 14), int32]) -> (Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(1, 945), float64], Tensor[(10, 12, 1), float64], Tensor[(120), float64], Tensor[(4, ?, 13), uint32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(91, 14), bool]) {
  %1346 = cast(%var_14884, dtype="float64") /* ty=Tensor[(91, 14), float64] */;
  %1347 = cast(meta[relay.Constant][98] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1348 = cast(meta[relay.Constant][99] /* ty=Tensor[(1, 945), float64] */, dtype="float64") /* ty=Tensor[(1, 945), float64] */;
  %1349 = reshape(%1346, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
  %1350 = reshape(%1347, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %1351 = reshape(%1348, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1352 = @func_7853(%1349, %1350, %1351) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
  %1353 = cast(meta[relay.Constant][100] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1354 = reshape(%1353, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), float64] */;
  %1355 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1356 = cast(%1355, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %1357 = reshape(%1356, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float64] */;
  %1358 = @func_8371(%1357) /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1359 = %1358.0;
  %1360 = cast(%1355, dtype="uint32") /* ty=Tensor[(4, 1, 13), uint32] */;
  %1361 = shape_of(%1359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1362 = cast(%1359, dtype="uint32") /* ty=Tensor[(4, 1, 13), uint32] */;
  %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1364 = cast(%var_14941, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1365 = reshape(%1364, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %1366 = @func_3748(%1365) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %1367 = cast(%var_14884, dtype="float64") /* ty=Tensor[(91, 14), float64] */;
  %1368 = exp(%1367) /* ty=Tensor[(91, 14), float64] */;
  %1369 = cast(%var_14884, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %1370 = shape_of(%1368, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1371 = cast(%1368, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %1372 = dyn.reshape(%1369, %1370, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1373 = multiply(%1371, %1372) /* ty=Tensor[(91, 14), int32] */;
  %1374 = cast(%var_14947, dtype="bool") /* ty=Tensor[(91, 14), bool] */;
  %1375 = shape_of(%1373, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1376 = cast(%1373, dtype="bool") /* ty=Tensor[(91, 14), bool] */;
  %1377 = dyn.reshape(%1374, %1375, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1378 = %1352.1;
  %1379 = @func_14268(%1354) /* ty=Tensor[(10, 12, 1), float64] */;
  %1380 = multiply(%1362, %1363) /* ty=Tensor[(4, ?, 13), uint32] */;
  %1381 = %1366.0;
  %1382 = logical_and(%1376, %1377) /* ty=Tensor[(91, 14), bool] */;
  (%1378, meta[relay.Constant][98] /* ty=Tensor[(30), float64] */, meta[relay.Constant][99] /* ty=Tensor[(1, 945), float64] */, %1379, meta[relay.Constant][100] /* ty=Tensor[(120), float64] */, %1380, %1381, %var_14941, %1382)
}

def @func_13522() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) {
  %1383 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1384 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1385 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1386 = %1385.0;
  %1387 = cast(meta[relay.Constant][101] /* ty=Tensor[(13, 11, 9), int8] */, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  %1388 = shape_of(%1386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1389 = cast(%1386, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  %1390 = dyn.reshape(%1387, %1388, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1391 = cast(meta[relay.Constant][102] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1392 = cast(-7.89667f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1393 = reshape(%1391, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %1394 = reshape(%1392, newshape=[]) /* ty=float64 */;
  %1395 = @func_897(%1393, %1394) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %1396 = %1383.1;
  %1397 = %1384.1;
  %1398 = add(%1389, %1390) /* ty=Tensor[(13, 11, 9), float32] */;
  %1399 = %1395.1;
  (%1396, %1397, %1398, %1399, meta[relay.Constant][102] /* ty=Tensor[(945), float64] */, -7.89667f64 /* ty=float64 */)
}

def @func_16426() -> (Tensor[(13, 11, 9), int8],) {
  %1400 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1401 = %1400.1;
  (%1401,)
}

def @func_15725() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %1402 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %1403 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1404 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1405 = %1402.0;
  %1406 = %1403.0;
  %1407 = %1404.1;
  (%1405, %1406, %1407)
}

def @func_17608() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
  %1408 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1409 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1410 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1411 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %1412 = %1408.0;
  %1413 = %1409.1;
  %1414 = %1410.0;
  %1415 = %1411.0;
  (%1412, %1413, %1414, %1415)
}

def @func_23378() -> (Tensor[(52), float64],) {
  %1416 = @func_21488() /* ty=(Tensor[(52), float64],) */;
  %1417 = %1416.0;
  (%1417,)
}

def @func_26263() -> Tensor[(13, 11, 9), int8] {
  %1418 = @func_24399() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1418.0
}

def @func_23633() -> Tensor[(4, 1, 13), float32] {
  %1419 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1420 = cast(%1419, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  asinh(%1420) /* ty=Tensor[(4, 1, 13), float32] */
}

def @func_3748(%var_3743: Tensor[(10, 2, 14), float64]) -> (Tensor[(10, 2, 14), float64],) {
  %1421 = cast(%var_3743, dtype="float64") /* ty=Tensor[(10, 2, 14), float64] */;
  %1422 = acos(%1421) /* ty=Tensor[(10, 2, 14), float64] */;
  (%1422,)
}

def @func_19958(%var_19925: Tensor[(480), float32], %var_19934: Tensor[(110), int16]) -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1423 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1424 = cast(%var_19925, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1425 = cast(meta[relay.Constant][103] /* ty=Tensor[(1620), uint32] */, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
  %1426 = reshape(%1424, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1427 = reshape(%1425, newshape=[1620]) /* ty=Tensor[(1620), uint32] */;
  %1428 = @func_16688(%1426, %1427) /* ty=(Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) */;
  %1429 = cast(%var_19934, dtype="int16") /* ty=Tensor[(110), int16] */;
  %1430 = reshape(%1429, newshape=[1, 110]) /* ty=Tensor[(1, 110), int16] */;
  %1431 = @func_15907(%1430) /* ty=(Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) */;
  %1432 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1433 = %1423.0;
  %1434 = %1428.6;
  %1435 = %1431.0;
  %1436 = %1432.0;
  %1437 = @func_19049() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1433, %1434, %var_19925, meta[relay.Constant][103] /* ty=Tensor[(1620), uint32] */, %1435, %var_19934, %1436, %1437)
}

def @func_16020() -> (Tensor[(4, 1, 13), float64],) {
  %1438 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1439 = %1438.0;
  (%1439,)
}

def @func_19049() -> Tensor[(13, 11, 9), int8] {
  %1440 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1440.0
}

def @func_22210() -> (Tensor[(13, 11, 9), uint8],) {
  %1441 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %1442 = %1441.0;
  (%1442,)
}

def @func_17776() -> (Tensor[(13, 11, 9), int8],) {
  %1443 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_15223(%var_15184: uint32, %var_15186: Tensor[(960), bool], %var_15209: Tensor[(280), float64]) -> (Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) {
  %1445 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %1446 = cast(%var_15184, dtype="uint32") /* ty=uint32 */;
  %1447 = cast(meta[relay.Constant][104] /* ty=Tensor[(2, 48), uint32] */, dtype="uint32") /* ty=Tensor[(2, 48), uint32] */;
  %1448 = cast(%var_15186, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1449 = cast(meta[relay.Constant][105] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1450 = reshape(%1446, newshape=[]) /* ty=uint32 */;
  %1451 = reshape(%1447, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %1452 = reshape(%1448, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1453 = reshape(%1449, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1454 = @func_5112(%1450, %1451, %1452, %1453) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %1455 = cast(%var_15184, dtype="float32") /* ty=float32 */;
  %1456 = cast(meta[relay.Constant][106] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1457 = cast(meta[relay.Constant][105] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1458 = cast(%var_15209, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1459 = %1454.2;
  %1460 = cast(%1459, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %1461 = reshape(%1455, newshape=[]) /* ty=float32 */;
  %1462 = reshape(%1456, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %1463 = reshape(%1457, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1464 = reshape(%1458, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1465 = reshape(%1460, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1466 = @func_4313(%1461, %1462, %1463, %1464, %1465) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1467 = %1445.0;
  %1468 = %1466.4;
  (%1467, %1459, %var_15184, meta[relay.Constant][104] /* ty=Tensor[(2, 48), uint32] */, %var_15186, meta[relay.Constant][105] /* ty=Tensor[(180), float32] */, %1468, meta[relay.Constant][106] /* ty=Tensor[(1260), float32] */, %var_15209)
}

def @func_15472() -> Tensor[(13, 11, 9), float32] {
  %1469 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %1470 = %1469.0;
  %1471 = cast(%1470, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  erf(%1471) /* ty=Tensor[(13, 11, 9), float32] */
}

def @func_15345() -> Tensor[(13, 11, 9), int8] {
  %1472 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1472.0
}

def @func_19495() -> Tensor[(4, 1, 13), float64] {
  %1473 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1473.1
}

def @func_12655() -> (Tensor[(13, 11, 9), int8],) {
  %1474 = cast(meta[relay.Constant][107] /* ty=Tensor[(13, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
  %1475 = sqrt(%1474) /* ty=Tensor[(13, 11, 9), float64] */;
  %1476 = cast(%1475, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
  %1477 = shape_of(meta[relay.Constant][107] /* ty=Tensor[(13, 11, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1478 = cast(meta[relay.Constant][107] /* ty=Tensor[(13, 11, 9), float64] */, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
  %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1480 = logical_xor(%1478, %1479) /* ty=Tensor[(13, 11, 9), int8] */;
  (%1480,)
}

def @func_17280(%var_17187: Tensor[(336), int8], %var_17203: Tensor[(1274), float64], %var_17219: Tensor[(4, 104), uint64], %var_17240: Tensor[(9, 1694), float32], %var_17259: Tensor[(4, 104), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) {
  %1481 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1482 = cast(meta[relay.Constant][108] /* ty=Tensor[(1, 1694), float32] */, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %1483 = cast(meta[relay.Constant][109] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %1484 = reshape(%1482, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %1485 = reshape(%1483, newshape=[462]) /* ty=Tensor[(462), int8] */;
  %1486 = @func_11476(%1484, %1485) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) */;
  %1487 = cast(%var_17187, dtype="int8") /* ty=Tensor[(336), int8] */;
  %1488 = reshape(%1487, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), int8] */;
  %1489 = cast(meta[relay.Constant][110] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %1490 = cast(%var_17203, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1491 = reshape(%1489, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), uint32] */;
  %1492 = reshape(%1490, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %1493 = @func_15096(%1491, %1492) /* ty=(Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */;
  %1494 = %1493.3;
  %1495 = cast(%var_17219, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %1496 = shape_of(%1494, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1497 = cast(%1494, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %1498 = dyn.reshape(%1495, %1496, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1499 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1500 = cast(%var_17219, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %1501 = shape_of(%1494, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1502 = cast(%1494, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %1503 = dyn.reshape(%1500, %1501, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1504 = cast(meta[relay.Constant][108] /* ty=Tensor[(1, 1694), float32] */, dtype="uint16") /* ty=Tensor[(1, 1694), uint16] */;
  %1505 = cast(%var_17240, dtype="uint16") /* ty=Tensor[(9, 1694), uint16] */;
  %1506 = cast(%1494, dtype="float32") /* ty=Tensor[(4, 104), float32] */;
  %1507 = exp(%1506) /* ty=Tensor[(4, 104), float32] */;
  %1508 = cast(%var_17259, dtype="uint32") /* ty=Tensor[(4, 104), uint32] */;
  %1509 = shape_of(%1507, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1510 = cast(%1507, dtype="uint32") /* ty=Tensor[(4, 104), uint32] */;
  %1511 = dyn.reshape(%1508, %1509, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1512 = cast(meta[relay.Constant][111] /* ty=Tensor[(4, 104), float32] */, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %1513 = shape_of(%1507, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1514 = cast(%1507, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %1515 = dyn.reshape(%1512, %1513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1516 = %1481.0;
  %1517 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1518 = %1486.0;
  %1519 = @func_16603(%1488) /* ty=Tensor[(3, 7, 16), int8] */;
  %1520 = floor_divide(%1497, %1498) /* ty=Tensor[(4, 104), float64] */;
  %1521 = %1499.0;
  %1522 = logical_or(%1502, %1503) /* ty=Tensor[(4, 104), bool] */;
  %1523 = bitwise_or(%1504, %1505) /* ty=Tensor[(9, 1694), uint16] */;
  %1524 = left_shift(%1510, %1511) /* ty=Tensor[(4, 104), uint32] */;
  %1525 = less_equal(%1514, %1515) /* ty=Tensor[(4, 104), bool] */;
  (%1516, %1517, %1518, meta[relay.Constant][109] /* ty=Tensor[(462), int8] */, %1519, %var_17187, meta[relay.Constant][110] /* ty=Tensor[(2112), uint32] */, %var_17203, %1520, %1521, %1522, %1523, %1524, %1525)
}

def @func_19824() -> Tensor[(4, 1, 13), float64] {
  %1526 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1527 = %1526.1;
  %1528 = cast(%1527, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  cos(%1528) /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_22640() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1529 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1530 = @func_20694() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) */;
  %1531 = %1529.1;
  %1532 = %1530.1;
  (%1531, %1532)
}

def @func_23178(%var_23170: Tensor[(11, 4, 12), float32]) -> Tensor[(11, 4, 12), float32] {
  %1533 = cast(%var_23170, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  sqrt(%1533) /* ty=Tensor[(11, 4, 12), float32] */
}

def @func_21618() -> (Tensor[(13, 11, 9), int8],) {
  %1534 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1535 = %1534.0;
  (%1535,)
}

def @func_18734() -> Tensor[(13, 11, 9), int8] {
  %1536 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %1536.1
}

def @func_26739() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(10, 42), bool], Tensor[(13, 11, 9), int8]) {
  %1537 = cast(meta[relay.Constant][112] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %1538 = reshape(%1537, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %1539 = @func_18431(%1538) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
  %1540 = @func_21743() /* ty=Tensor[(13, 11, 9), int8] */;
  %1541 = %1539.0;
  %1542 = @func_21478() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1540, %1541, meta[relay.Constant][112] /* ty=Tensor[(10, 42), bool] */, %1542)
}

def @func_20496() -> (Tensor[(13, 11, 9), int8],) {
  %1543 = @func_16938() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1544 = %1543.0;
  (%1544,)
}

def @func_21834() -> Tensor[(13, 11, 9), int8] {
  %1545 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1545.0
}

def @func_19453() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1546 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1547 = %1546.1;
  %1548 = @func_17632() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1547, %1548)
}

def @func_20192() -> (Tensor[(13, 11, 9), int8],) {
  %1549 = @func_15345() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1549,)
}

def @func_15440(%var_15382: Tensor[(10, 6, 6), float32]) -> (Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1550 = cast(%var_15382, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %1551 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %1552 = cast(-4.42433f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1553 = reshape(%1552, newshape=[]) /* ty=float64 */;
  %1554 = @func_710(%1553) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1555 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1556 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1557 = exp(%1550) /* ty=Tensor[(10, 6, 6), float32] */;
  %1558 = %1551.0;
  %1559 = %1554.0;
  %1560 = %1555.0;
  %1561 = %1556.0;
  (%1557, %1558, %1559, -4.42433f64 /* ty=float64 */, %1560, %1561)
}

def @func_26195(%var_26117: Tensor[(4, 9, 13), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 9, 13), float64], Tensor[(13, 11, 9), int8]) {
  %1562 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %1563 = cast(%1562, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1564 = cast(%var_26117, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %1565 = logical_or(%1563, %1564) /* ty=Tensor[(4, 9, 13), bool] */;
  %1566 = cast(%var_26117, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
  %1567 = shape_of(%1565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1568 = cast(%1565, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
  %1569 = dyn.reshape(%1566, %1567, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1570 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
  %1571 = floor_mod(%1568, %1569) /* ty=Tensor[(4, 9, 13), float64] */;
  %1572 = @func_22752() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1570, %1571, %1572)
}

def @func_18902() -> (Tensor[(13, 11, 9), uint8],) {
  %1573 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %1574 = %1573.0;
  (%1574,)
}

def @func_25407(%var_25399: Tensor[(4, 5, 13), float64]) -> Tensor[(4, 5, 13), int32] {
  %1575 = @func_23297() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1576 = %1575.0;
  %1577 = cast(%1576, dtype="int32") /* ty=Tensor[(4, 1, 13), int32] */;
  %1578 = cast(%var_25399, dtype="int32") /* ty=Tensor[(4, 5, 13), int32] */;
  left_shift(%1577, %1578) /* ty=Tensor[(4, 5, 13), int32] */
}

def @func_23297() -> (Tensor[(4, 1, 13), float64],) {
  %1579 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  (%1579,)
}

def @func_25292() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %1580 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
  %1581 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %1582 = @func_22284() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1580, %1581, %1582)
}

def @func_17578(%var_17554: Tensor[(1, 3, 3), float64]) -> (Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) {
  %1583 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %1584 = %1583.3;
  %1585 = cast(%var_17554, dtype="bool") /* ty=Tensor[(1, 3, 3), bool] */;
  %1586 = shape_of(%1584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1587 = cast(%1584, dtype="bool") /* ty=Tensor[(1, 3, 3), bool] */;
  %1588 = dyn.reshape(%1585, %1586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1589 = cast(%var_17554, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
  %1590 = not_equal(%1587, %1588) /* ty=Tensor[(?, 3, 3), bool] */;
  %1591 = atanh(%1589) /* ty=Tensor[(1, 3, 3), float32] */;
  (%1590, %1591)
}

def @func_17720() -> Tensor[(13, 11, 9), int8] {
  %1592 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1592.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_26874(%var_26873: Tensor[(16, 16, 15), float64]) -> (Tensor[(16, 16, 15), float64], Tensor[(960), bool], Tensor[(420), bool], Tensor[(13, 11, 9), uint8]) {
  %11 = fn (%var_26846: Tensor[(16, 16, 15), float64]) -> (Tensor[(16, 16, 15), float64], Tensor[(960), bool], Tensor[(420), bool], Tensor[(13, 11, 9), uint8]) {
    %0 = cast(%var_26846, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 16, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %5 = reshape(%4, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %6 = @func_18431(%5) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
    %7 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
    %8 = floor_mod(%2, %3) /* ty=Tensor[(16, 16, 15), float64] */;
    %9 = %6.3;
    %10 = %7.0;
    (%8, %9, meta[relay.Constant][1] /* ty=Tensor[(420), bool] */, %10)
  };
  %11(%var_26873) /* ty=(Tensor[(16, 16, 15), float64], Tensor[(960), bool], Tensor[(420), bool], Tensor[(13, 11, 9), uint8]) */
}

def @func_25197() -> (Tensor[(13, 11, 9), int8],) {
  %14 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %12 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %13 = %12.0;
    (%13,)
  };
  %14() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_4313(%var_4288: float32, %var_4289: Tensor[(12, 7, 15), float32], %var_4300: Tensor[(180), float32], %var_4301: Tensor[(280), float64], %var_4302: Tensor[(960), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %15 = cast(%var_4288, dtype="float32") /* ty=float32 */;
  %16 = cast(%var_4289, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %17 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %18 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %19 = cast(%var_4301, dtype="float64") /* ty=Tensor[(280), float64] */;
  %20 = cast(%var_4302, dtype="float64") /* ty=Tensor[(960), float64] */;
  %21 = cast(%var_4300, dtype="float32") /* ty=Tensor[(180), float32] */;
  %22 = reshape(%17, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %23 = reshape(%18, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %24 = reshape(%19, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %25 = reshape(%20, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %26 = reshape(%21, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %27 = @func_3840(%22, %23, %24, %25, %26) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %28 = floor_mod(%15, %16) /* ty=Tensor[(12, 7, 15), float32] */;
  %29 = %27.5;
  (%28, %29, %var_4300, %var_4301, %var_4302)
}

def @func_17519() -> Tensor[(4, 1, 13), float64] {
  @func_17517() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_16553(%var_16537: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool], Tensor[(13, 11, 9), int8]) {
  %30 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %31 = %30.0;
  %32 = cast(%31, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %33 = cast(%var_16537, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %34 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %35 = not_equal(%32, %33) /* ty=Tensor[(4, 4, 13), bool] */;
  %36 = %34.1;
  (%35, %36)
}

def @func_18734() -> Tensor[(13, 11, 9), int8] {
  %37 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %37.1
}

def @func_14008() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_25859() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_25857() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_17280(%var_17187: Tensor[(336), int8], %var_17203: Tensor[(1274), float64], %var_17219: Tensor[(4, 104), uint64], %var_17240: Tensor[(9, 1694), float32], %var_17259: Tensor[(4, 104), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) {
  %38 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 1694), float32] */, dtype="float32") /* ty=Tensor[(1, 1694), float32] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %41 = reshape(%39, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %42 = reshape(%40, newshape=[462]) /* ty=Tensor[(462), int8] */;
  %43 = @func_11476(%41, %42) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) */;
  %44 = cast(%var_17187, dtype="int8") /* ty=Tensor[(336), int8] */;
  %45 = reshape(%44, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), int8] */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %47 = cast(%var_17203, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %48 = reshape(%46, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), uint32] */;
  %49 = reshape(%47, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %50 = @func_15096(%48, %49) /* ty=(Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */;
  %51 = %50.3;
  %52 = cast(%var_17219, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(2), int32] */;
  %54 = cast(%51, dtype="float64") /* ty=Tensor[(4, 104), float64] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %56 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %57 = cast(%var_17219, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %58 = shape_of(%51, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%51, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 1694), float32] */, dtype="uint16") /* ty=Tensor[(1, 1694), uint16] */;
  %62 = cast(%var_17240, dtype="uint16") /* ty=Tensor[(9, 1694), uint16] */;
  %63 = cast(%51, dtype="float32") /* ty=Tensor[(4, 104), float32] */;
  %64 = exp(%63) /* ty=Tensor[(4, 104), float32] */;
  %65 = cast(%var_17259, dtype="uint32") /* ty=Tensor[(4, 104), uint32] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
  %67 = cast(%64, dtype="uint32") /* ty=Tensor[(4, 104), uint32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 104), float32] */, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %70 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%64, dtype="bool") /* ty=Tensor[(4, 104), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %73 = %38.0;
  %74 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %75 = %43.0;
  %76 = @func_16603(%45) /* ty=Tensor[(3, 7, 16), int8] */;
  %77 = floor_divide(%54, %55) /* ty=Tensor[(4, 104), float64] */;
  %78 = %56.0;
  %79 = logical_or(%59, %60) /* ty=Tensor[(4, 104), bool] */;
  %80 = bitwise_or(%61, %62) /* ty=Tensor[(9, 1694), uint16] */;
  %81 = left_shift(%67, %68) /* ty=Tensor[(4, 104), uint32] */;
  %82 = less_equal(%71, %72) /* ty=Tensor[(4, 104), bool] */;
  (%73, %74, %75, meta[relay.Constant][3] /* ty=Tensor[(462), int8] */, %76, %var_17187, meta[relay.Constant][4] /* ty=Tensor[(2112), uint32] */, %var_17203, %77, %78, %79, %80, %81, %82)
}

def @func_22018(%var_22016: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32) {
  @func_22015(%var_22016) /* ty=(Tensor[(13, 11, 9), int8], uint32, uint32) */
}

def @func_26929() -> (Tensor[(13, 11, 9), int8],) {
  %83 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %84 = %83.0;
  (%84,)
}

def @func_23739() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  @func_23737() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_13847(%var_13845: Tensor[(660), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) {
  @func_13844(%var_13845) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) */
}

def @func_4511(%var_4509: Tensor[(7, 3, 11), float64], %var_4510: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) {
  %92 = fn (%var_4501: Tensor[(7, 3, 11), float64], %var_4504: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) {
    %85 = cast(%var_4501, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
    %86 = cast(%var_4504, dtype="uint16") /* ty=Tensor[(7, 3, 11), uint16] */;
    %87 = shape_of(%var_4501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %88 = cast(%var_4501, dtype="uint16") /* ty=Tensor[(7, 3, 11), uint16] */;
    %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %90 = acos(%85) /* ty=Tensor[(7, 3, 11), float64] */;
    %91 = logical_xor(%88, %89) /* ty=Tensor[(7, 3, 11), uint16] */;
    (%90, %91)
  };
  %92(%var_4509, %var_4510) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */
}

def @func_5453(%var_5451: Tensor[(12, 15, 8), int8], %var_5452: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) {
  @func_5449(%var_5451, %var_5452) /* ty=(Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) */
}

def @func_14162(%var_14160: Tensor[(15, 9, 12), uint32], %var_14161: Tensor[(15, 9, 12), uint32]) -> (Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) {
  @func_14158(%var_14160, %var_14161) /* ty=(Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) */
}

def @func_7596(%var_7590: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %93 = cast(%var_7590, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %94 = acosh(%93) /* ty=Tensor[(9, 8, 6), float64] */;
  (%94,)
}

def @func_21618() -> (Tensor[(13, 11, 9), int8],) {
  %95 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %96 = %95.0;
  (%96,)
}

def @func_12766() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) {
  %97 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %98 = cast(meta[relay.Constant][6] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %99 = reshape(%98, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float64] */;
  %100 = @func_8371(%99) /* ty=(Tensor[(4, 1, 13), float64],) */;
  %101 = %97.0;
  %102 = %100.0;
  (%101, %102, meta[relay.Constant][6] /* ty=Tensor[(52), float64] */)
}

def @func_13055(%var_13019: Tensor[(576), float64]) -> (Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  %103 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %104 = cast(%var_13019, dtype="float64") /* ty=Tensor[(576), float64] */;
  %105 = cast(%var_13019, dtype="float64") /* ty=Tensor[(576), float64] */;
  %106 = reshape(%104, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %107 = reshape(%105, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %108 = @func_12361(%106, %107) /* ty=(Tensor[(4, 12, 12), float64],) */;
  %109 = %103.2;
  %110 = %108.0;
  (%109, %110, %var_13019)
}

def @func_18246() -> (Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) {
  %119 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) {
    %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
    %112 = cast(-2.14575f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %113 = cast(meta[relay.Constant][8] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %114 = reshape(%112, newshape=[]) /* ty=float32 */;
    %115 = reshape(%113, newshape=[960, 1]) /* ty=Tensor[(960, 1), float64] */;
    %116 = @func_17967(%114, %115) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) */;
    %117 = log(%111) /* ty=Tensor[(6, 10, 13), float32] */;
    %118 = %116.5;
    (%117, %118, -2.14575f /* ty=float32 */, meta[relay.Constant][8] /* ty=Tensor[(960), float64] */)
  };
  %119() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) */
}

def @func_19961(%var_19959: Tensor[(480), float32], %var_19960: Tensor[(110), int16]) -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %135 = fn (%var_19925: Tensor[(480), float32], %var_19934: Tensor[(110), int16]) -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %120 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %121 = cast(%var_19925, dtype="float32") /* ty=Tensor[(480), float32] */;
    %122 = cast(meta[relay.Constant][9] /* ty=Tensor[(1620), uint32] */, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
    %123 = reshape(%121, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %124 = reshape(%122, newshape=[1620]) /* ty=Tensor[(1620), uint32] */;
    %125 = @func_16688(%123, %124) /* ty=(Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) */;
    %126 = cast(%var_19934, dtype="int16") /* ty=Tensor[(110), int16] */;
    %127 = reshape(%126, newshape=[1, 110]) /* ty=Tensor[(1, 110), int16] */;
    %128 = @func_15907(%127) /* ty=(Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) */;
    %129 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %130 = %120.0;
    %131 = %125.6;
    %132 = %128.0;
    %133 = %129.0;
    %134 = @func_19049() /* ty=Tensor[(13, 11, 9), int8] */;
    (%130, %131, %var_19925, meta[relay.Constant][9] /* ty=Tensor[(1620), uint32] */, %132, %var_19934, %133, %134)
  };
  %135(%var_19959, %var_19960) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_19130(%var_19127: Tensor[(420), bool], %var_19128: Tensor[(1274, 1), float64], %var_19129: Tensor[(945), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) {
  %154 = fn (%var_19111: Tensor[(420), bool], %var_19122: Tensor[(1274, 1), float64], %var_19124: Tensor[(945), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) {
    %136 = @func_17776() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %137 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %138 = cast(%var_19111, dtype="bool") /* ty=Tensor[(420), bool] */;
    %139 = reshape(%138, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %140 = @func_18431(%139) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
    %141 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %142 = cast(%var_19122, dtype="float64") /* ty=Tensor[(1274, 1), float64] */;
    %143 = cast(meta[relay.Constant][10] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %144 = cast(%var_19124, dtype="float64") /* ty=Tensor[(945), float64] */;
    %145 = reshape(%142, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
    %146 = reshape(%143, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %147 = reshape(%144, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %148 = @func_7853(%145, %146, %147) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
    %149 = %136.0;
    %150 = %137.0;
    %151 = %140.2;
    %152 = %141.0;
    %153 = %148.4;
    (%149, %150, %151, %var_19111, %152, %153, %var_19122, meta[relay.Constant][10] /* ty=Tensor[(30), float64] */, %var_19124)
  };
  %154(%var_19127, %var_19128, %var_19129) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) */
}

def @func_17074(%var_17072: Tensor[(1260), float32], %var_17073: Tensor[(10, 96), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(280), float64], Tensor[(1260), float32], Tensor[(10, 96), float64]) {
  %163 = fn (%var_17068: Tensor[(1260), float32], %var_17069: Tensor[(10, 96), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(280), float64], Tensor[(1260), float32], Tensor[(10, 96), float64]) {
    %155 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %156 = cast(%var_17068, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %157 = cast(%var_17069, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %158 = reshape(%156, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %159 = reshape(%157, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %160 = @func_15286(%158, %159) /* ty=(Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
    %161 = %155.0;
    %162 = %160.1;
    (%161, %162, %var_17068, %var_17069)
  };
  %163(%var_17072, %var_17073) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(280), float64], Tensor[(1260), float32], Tensor[(10, 96), float64]) */
}

def @func_23783() -> Tensor[(13, 11, 9), int8] {
  %165 = fn () -> Tensor[(13, 11, 9), int8] {
    %164 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %164.0
  };
  %165() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25910(%var_25908: Tensor[(11, 6, 16), int32], %var_25909: Tensor[(11, 6, 16), int32]) -> Tensor[(11, 6, 16), int32] {
  %170 = fn (%var_25892: Tensor[(11, 6, 16), int32], %var_25893: Tensor[(11, 6, 16), int32]) -> Tensor[(11, 6, 16), int32] {
    %166 = cast(%var_25893, dtype="int32") /* ty=Tensor[(11, 6, 16), int32] */;
    %167 = shape_of(%var_25892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %168 = cast(%var_25892, dtype="int32") /* ty=Tensor[(11, 6, 16), int32] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    add(%168, %169) /* ty=Tensor[(11, 6, 16), int32] */
  };
  %170(%var_25908, %var_25909) /* ty=Tensor[(11, 6, 16), int32] */
}

def @func_21530() -> (Tensor[(13, 11, 9), int8],) {
  %173 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %171 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
    %172 = %171.1;
    (%172,)
  };
  %173() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_10918(%var_10914: Tensor[(13, 8, 4), uint64], %var_10915: Tensor[(13, 8, 4), uint64], %var_10916: Tensor[(945), float64], %var_10917: Tensor[(1274), float64]) -> (Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) {
  %193 = fn (%var_10894: Tensor[(13, 8, 4), uint64], %var_10895: Tensor[(13, 8, 4), uint64], %var_10902: Tensor[(945), float64], %var_10907: Tensor[(1274), float64]) -> (Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) {
    %174 = cast(%var_10895, dtype="uint64") /* ty=Tensor[(13, 8, 4), uint64] */;
    %175 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
    %176 = cast(%var_10894, dtype="uint64") /* ty=Tensor[(13, 8, 4), uint64] */;
    %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %178 = cast(%var_10902, dtype="float64") /* ty=Tensor[(945), float64] */;
    %179 = cast(-2.86842f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %180 = reshape(%178, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %181 = reshape(%179, newshape=[]) /* ty=float64 */;
    %182 = @func_897(%180, %181) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %183 = cast(%var_10907, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %184 = cast(meta[relay.Constant][11] /* ty=Tensor[(30, 1), float64] */, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
    %185 = cast(%var_10902, dtype="float64") /* ty=Tensor[(945), float64] */;
    %186 = reshape(%183, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
    %187 = reshape(%184, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %188 = reshape(%185, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %189 = @func_7853(%186, %187, %188) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
    %190 = left_shift(%176, %177) /* ty=Tensor[(13, 8, 4), uint64] */;
    %191 = %182.0;
    %192 = %189.4;
    (%190, %191, %var_10902, -2.86842f64 /* ty=float64 */, %192, %var_10907, meta[relay.Constant][11] /* ty=Tensor[(30, 1), float64] */)
  };
  %193(%var_10914, %var_10915, %var_10916, %var_10917) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */
}

def @func_20076() -> (Tensor[(13, 11, 9), int8],) {
  %196 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %194 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %195 = %194.0;
    (%195,)
  };
  %196() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_20446() -> (Tensor[(13, 11, 9), int8],) {
  @func_20444() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_20818() -> Tensor[(13, 11, 9), int8] {
  @func_20816() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_16427() -> (Tensor[(13, 11, 9), int8],) {
  %199 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %197 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %198 = %197.1;
    (%198,)
  };
  %199() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_23299() -> (Tensor[(4, 1, 13), float64],) {
  @func_23297() /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_20215() -> Tensor[(52), float64] {
  %200 = @func_14484() /* ty=(Tensor[(52), float64],) */;
  %200.0
}

def @func_25052() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(660), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  @func_25050() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(660), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) */
}

def @func_13372() -> (Tensor[(13, 11, 9), int8],) {
  @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_18864() -> (Tensor[(4, 1, 13), float64],) {
  @func_18862() /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_19825() -> Tensor[(4, 1, 13), float64] {
  %204 = fn () -> Tensor[(4, 1, 13), float64] {
    %201 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
    %202 = %201.1;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    cos(%203) /* ty=Tensor[(4, 1, 13), float64] */
  };
  %204() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_21932() -> Tensor[(13, 11, 9), int8] {
  %206 = fn () -> Tensor[(13, 11, 9), int8] {
    %205 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %205.0
  };
  %206() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_26739() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(10, 42), bool], Tensor[(13, 11, 9), int8]) {
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %208 = reshape(%207, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %209 = @func_18431(%208) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */;
  %210 = @func_21743() /* ty=Tensor[(13, 11, 9), int8] */;
  %211 = %209.0;
  %212 = @func_21478() /* ty=Tensor[(13, 11, 9), int8] */;
  (%210, %211, meta[relay.Constant][12] /* ty=Tensor[(10, 42), bool] */, %212)
}

def @func_21834() -> Tensor[(13, 11, 9), int8] {
  %213 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %213.0
}

def @func_19325(%var_19323: Tensor[(4, 11, 13), float64], %var_19324: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
  %226 = fn (%var_19293: Tensor[(4, 11, 13), float64], %var_19303: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
    %214 = cast(meta[relay.Constant][13] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
    %215 = reshape(%214, newshape=[462]) /* ty=Tensor[(462), int8] */;
    %216 = @func_16131(%215) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) */;
    %217 = %216.0;
    %218 = cast(%217, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %219 = cast(%var_19293, dtype="bool") /* ty=Tensor[(4, 11, 13), bool] */;
    %220 = cast(%var_19303, dtype="float64") /* ty=Tensor[(168), float64] */;
    %221 = reshape(%220, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
    %222 = @func_16520(%221) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
    %223 = @func_18734() /* ty=Tensor[(13, 11, 9), int8] */;
    %224 = less(%218, %219) /* ty=Tensor[(4, 11, 13), bool] */;
    %225 = %222.3;
    (%223, meta[relay.Constant][13] /* ty=Tensor[(462), int8] */, %224, %225, %var_19303)
  };
  %226(%var_19323, %var_19324) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */
}

def @func_23180(%var_23179: Tensor[(11, 4, 12), float32]) -> Tensor[(11, 4, 12), float32] {
  %228 = fn (%var_23170: Tensor[(11, 4, 12), float32]) -> Tensor[(11, 4, 12), float32] {
    %227 = cast(%var_23170, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
    sqrt(%227) /* ty=Tensor[(11, 4, 12), float32] */
  };
  %228(%var_23179) /* ty=Tensor[(11, 4, 12), float32] */
}

def @func_14815() -> (Tensor[(52), float64],) {
  %229 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %230 = %229.2;
  (%230,)
}

def @func_18346() -> Tensor[(4, 1, 13), float64] {
  %231 = fn () -> Tensor[(4, 1, 13), float64] {
    @func_17517() /* ty=Tensor[(4, 1, 13), float64] */
  };
  %231() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_18584() -> Tensor[(13, 11, 9), int8] {
  @func_18582() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_24851() -> (Tensor[(13, 11, 9), int8],) {
  %232 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %233 = %232.0;
  (%233,)
}

def @func_18772() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %234 = @func_17127() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %235 = @func_18582() /* ty=Tensor[(13, 11, 9), int8] */;
  %236 = %234.0;
  (%235, %236)
}

def @func_14520(%var_14507: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), float32],) {
  %237 = cast(%var_14507, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %238 = atan(%237) /* ty=Tensor[(2, 13, 9), float32] */;
  (%238,)
}

def @func_25467() -> (Tensor[(52), float64],) {
  %241 = fn () -> (Tensor[(52), float64],) {
    %239 = @func_21488() /* ty=(Tensor[(52), float64],) */;
    %240 = %239.0;
    (%240,)
  };
  %241() /* ty=(Tensor[(52), float64],) */
}

def @func_10230(%var_10189: Tensor[(11, 5, 2), int16]) -> (Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
  %242 = cast(%var_10189, dtype="int16") /* ty=Tensor[(11, 5, 2), int16] */;
  %243 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 5, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 5, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 2), int16] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %246 = cast(meta[relay.Constant][15] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %247 = cast(meta[relay.Constant][16] /* ty=Tensor[(48, 2), uint32] */, dtype="uint32") /* ty=Tensor[(48, 2), uint32] */;
  %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %250 = reshape(%246, newshape=[]) /* ty=uint32 */;
  %251 = reshape(%247, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %252 = reshape(%248, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %253 = reshape(%249, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %254 = @func_5112(%250, %251, %252, %253) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %255 = bitwise_and(%244, %245) /* ty=Tensor[(11, 5, 2), int16] */;
  %256 = %254.0;
  (%255, %256, meta[relay.Constant][15] /* ty=uint32 */, meta[relay.Constant][16] /* ty=Tensor[(48, 2), uint32] */, meta[relay.Constant][17] /* ty=Tensor[(960), bool] */, meta[relay.Constant][18] /* ty=Tensor[(180), float32] */)
}

def @func_16134(%var_16132: Tensor[(462), int8]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) {
  @func_16131(%var_16132) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) */
}

def @func_22396() -> Tensor[(13, 11, 9), int8] {
  %257 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %257.0
}

def @func_25342() -> Tensor[(13, 11, 9), int8] {
  @func_25340() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_11742(%var_11739: Tensor[(13, 14, 7), float64], %var_11740: Tensor[(156), float32], %var_11741: Tensor[(30), float64]) -> (Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) {
  @func_11737(%var_11739, %var_11740, %var_11741) /* ty=(Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) */
}

def @func_13523() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) {
  %275 = fn () -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) {
    %258 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
    %259 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
    %260 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %261 = %260.0;
    %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 11, 9), int8] */, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %266 = cast(meta[relay.Constant][20] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
    %267 = cast(-7.89667f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %268 = reshape(%266, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %269 = reshape(%267, newshape=[]) /* ty=float64 */;
    %270 = @func_897(%268, %269) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %271 = %258.1;
    %272 = %259.1;
    %273 = add(%264, %265) /* ty=Tensor[(13, 11, 9), float32] */;
    %274 = %270.1;
    (%271, %272, %273, %274, meta[relay.Constant][20] /* ty=Tensor[(945), float64] */, -7.89667f64 /* ty=float64 */)
  };
  %275() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */
}

def @func_7217(%var_7215: Tensor[(16, 6, 5), float32], %var_7216: float32) -> (Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) {
  @func_7213(%var_7215, %var_7216) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */
}

def @func_24058() -> (Tensor[(13, 11, 9), int8],) {
  %276 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%276,)
}

def @func_25629() -> Tensor[(13, 11, 9), int8] {
  %277 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_16191() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %277() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_15096(%var_15059: Tensor[(11, 16, 12), uint32], %var_15091: Tensor[(1274), float64]) -> (Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
  %278 = cast(%var_15059, dtype="bool") /* ty=Tensor[(11, 16, 12), bool] */;
  %279 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(11, 16, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 16, 12), uint32] */, dtype="bool") /* ty=Tensor[(11, 16, 12), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = @func_13086() /* ty=(Tensor[(52), float64],) */;
  %283 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 104), uint64] */, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %284 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 104), uint64] */, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
  %285 = cast(meta[relay.Constant][23] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %286 = cast(%var_15091, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %287 = reshape(%283, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %288 = reshape(%284, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %289 = reshape(%285, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %290 = reshape(%286, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %291 = @func_10913(%287, %288, %289, %290) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %292 = equal(%280, %281) /* ty=Tensor[(11, 16, 12), bool] */;
  %293 = %282.0;
  %294 = %291.0;
  (%292, %293, %294, meta[relay.Constant][22] /* ty=Tensor[(4, 104), uint64] */, meta[relay.Constant][23] /* ty=Tensor[(945), float64] */, %var_15091)
}

def @func_14078() -> (Tensor[(13, 11, 9), int8],) {
  %295 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %296 = %295.0;
  (%296,)
}

def @func_25134(%var_25128: float32) -> (Tensor[(13, 11, 9), int8], Tensor[(16, 11, 14), float32], float32) {
  %297 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %298 = cast(%var_25128, dtype="float32") /* ty=float32 */;
  %299 = reshape(%298, newshape=[]) /* ty=float32 */;
  %300 = %297.0;
  %301 = @func_21950(%299) /* ty=Tensor[(16, 11, 14), float32] */;
  (%300, %301, %var_25128)
}

def @func_26931() -> (Tensor[(13, 11, 9), int8],) {
  @func_26929() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15472() -> Tensor[(13, 11, 9), float32] {
  %302 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %303 = %302.0;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
  erf(%304) /* ty=Tensor[(13, 11, 9), float32] */
}

def @func_20498() -> (Tensor[(13, 11, 9), int8],) {
  @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_13779() -> (Tensor[(13, 11, 9), int8],) {
  %307 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %305 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %306 = %305.0;
    (%306,)
  };
  %307() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_5282(%var_5278: Tensor[(13, 3, 4), float32], %var_5279: uint32, %var_5280: Tensor[(180), float32], %var_5281: Tensor[(33, 7), float64]) -> (Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) {
  @func_5276(%var_5278, %var_5279, %var_5280, %var_5281) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */
}

def @func_20159() -> Tensor[(13, 11, 9), int8] {
  @func_20157() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_10233(%var_10231: Tensor[(11, 5, 2), int16]) -> (Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
  @func_10230(%var_10231) /* ty=(Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) */
}

def @func_18477() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %314 = fn () -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
    %308 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %309 = @func_14755() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %310 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %311 = %308.0;
    %312 = %309.0;
    %313 = %310.0;
    (%311, %312, %313)
  };
  %314() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_20768() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %315 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %316 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %317 = %315.0;
  %318 = %316.0;
  (%317, %318)
}

def @func_17967(%var_17917: float32, %var_17921: Tensor[(960, 1), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) {
  %319 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %320 = cast(%var_17917, dtype="float32") /* ty=float32 */;
  %321 = cast(meta[relay.Constant][24] /* ty=Tensor[(1260, 1), float32] */, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
  %322 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %323 = cast(meta[relay.Constant][26] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %324 = cast(%var_17921, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %325 = reshape(%320, newshape=[]) /* ty=float32 */;
  %326 = reshape(%321, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %327 = reshape(%322, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %328 = reshape(%323, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %329 = reshape(%324, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %330 = @func_4313(%325, %326, %327, %328, %329) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %331 = cast(%var_17921, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %332 = %319.1;
  %333 = %330.4;
  %334 = cosh(%331) /* ty=Tensor[(960, 1), float32] */;
  (%332, %333, %var_17917, meta[relay.Constant][24] /* ty=Tensor[(1260, 1), float32] */, meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, meta[relay.Constant][26] /* ty=Tensor[(280), float64] */, %334)
}

def @func_18862() -> (Tensor[(4, 1, 13), float64],) {
  %335 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %336 = %335.2;
  (%336,)
}

def @func_24060() -> (Tensor[(13, 11, 9), int8],) {
  @func_24058() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_21278() -> (Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), int8]) {
  @func_21276() /* ty=(Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), int8]) */
}

def @func_21479() -> Tensor[(13, 11, 9), int8] {
  %338 = fn () -> Tensor[(13, 11, 9), int8] {
    %337 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %337.0
  };
  %338() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_24661() -> (Tensor[(4, 10, 13), bool], Tensor[(52), float64]) {
  %339 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
  %340 = %339.0;
  %341 = @func_20215() /* ty=Tensor[(52), float64] */;
  (%340, %341)
}

def @func_13844(%var_13832: Tensor[(660), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) {
  %342 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %343 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %344 = cast(%var_13832, dtype="float64") /* ty=Tensor[(660), float64] */;
  %345 = cast(meta[relay.Constant][27] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %346 = reshape(%344, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), float64] */;
  %347 = reshape(%345, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %348 = @func_12133(%346, %347) /* ty=(Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) */;
  %349 = cast(meta[relay.Constant][27] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %350 = %342.0;
  %351 = %343.0;
  %352 = %348.0;
  %353 = rsqrt(%349) /* ty=Tensor[(39, 4), float32] */;
  (%350, %351, %352, %var_13832, %353)
}

def @func_12768() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) {
  @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */
}

def @func_24804() -> (Tensor[(13, 11, 9), int8],) {
  %356 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %354 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %355 = %354.1;
    (%355,)
  };
  %356() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_16861() -> (Tensor[(13, 11, 9), int8],) {
  @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_17128() -> (Tensor[(13, 11, 9), int8],) {
  %359 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %357 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %358 = %357.0;
    (%358,)
  };
  %359() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15474() -> Tensor[(13, 11, 9), float32] {
  @func_15472() /* ty=Tensor[(13, 11, 9), float32] */
}

def @func_24946() -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(12, 15, 8), int8], Tensor[(1440), int8], Tensor[(13, 11, 9), int8]) {
  %376 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(12, 15, 8), int8], Tensor[(1440), int8], Tensor[(13, 11, 9), int8]) {
    %360 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %361 = @func_21488() /* ty=(Tensor[(52), float64],) */;
    %362 = @func_21618() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %363 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %366 = reshape(%364, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
    %367 = reshape(%365, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
    %368 = @func_5449(%366, %367) /* ty=(Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) */;
    %369 = @func_18651() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %370 = %360.0;
    %371 = %361.0;
    %372 = %362.0;
    %373 = %363.0;
    %374 = %368.0;
    %375 = %369.0;
    (%370, %371, %372, %373, %374, meta[relay.Constant][28] /* ty=Tensor[(1440), int8] */, %375)
  };
  %376() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(12, 15, 8), int8], Tensor[(1440), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_23429() -> (Tensor[(13, 11, 9), float32],) {
  %377 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  (%377,)
}

def @func_25057() -> Tensor[(13, 11, 9), int8] {
  @func_22752() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25292() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %378 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
  %379 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %380 = @func_22284() /* ty=Tensor[(13, 11, 9), int8] */;
  (%378, %379, %380)
}

def @func_18774() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_24382() -> (Tensor[(13, 11, 9), int8],) {
  %381 = @func_21931() /* ty=Tensor[(13, 11, 9), int8] */;
  (%381,)
}

def @func_27060() -> (Tensor[(13, 11, 9), int8],) {
  %384 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %382 = @func_17327() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */;
    %383 = %382.1;
    (%383,)
  };
  %384() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_12722() -> Tensor[(13, 11, 9), int8] {
  %385 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %385.0
}

def @func_26797() -> (Tensor[(7, 1, 4), float64],) {
  @func_26795() /* ty=(Tensor[(7, 1, 4), float64],) */
}

def @func_25410(%var_25408: Tensor[(4, 5, 13), float64]) -> Tensor[(4, 5, 13), int32] {
  @func_25407(%var_25408) /* ty=Tensor[(4, 5, 13), int32] */
}

def @func_8373(%var_8372: Tensor[(4, 1, 13), float64]) -> (Tensor[(4, 1, 13), float64],) {
  %388 = fn (%var_8359: Tensor[(4, 1, 13), float64]) -> (Tensor[(4, 1, 13), float64],) {
    %386 = cast(%var_8359, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %387 = log2(%386) /* ty=Tensor[(4, 1, 13), float64] */;
    (%387,)
  };
  %388(%var_8372) /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_26277(%var_26275: int32, %var_26276: Tensor[(2, 9, 2), int32]) -> (Tensor[(2, 9, 2), int32],) {
  %392 = fn (%var_26266: int32, %var_26267: Tensor[(2, 9, 2), int32]) -> (Tensor[(2, 9, 2), int32],) {
    %389 = cast(%var_26266, dtype="int32") /* ty=int32 */;
    %390 = cast(%var_26267, dtype="int32") /* ty=Tensor[(2, 9, 2), int32] */;
    %391 = right_shift(%389, %390) /* ty=Tensor[(2, 9, 2), int32] */;
    (%391,)
  };
  %392(%var_26275, %var_26276) /* ty=(Tensor[(2, 9, 2), int32],) */
}

def @func_26327() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %396 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %393 = @func_20816() /* ty=Tensor[(13, 11, 9), int8] */;
    %394 = @func_22907() /* ty=Tensor[(13, 11, 9), int8] */;
    %395 = @func_17720() /* ty=Tensor[(13, 11, 9), int8] */;
    (%393, %394, %395)
  };
  %396() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_6597(%var_6593: Tensor[(6, 7, 11), int8], %var_6594: Tensor[(6, 7, 11), int8], %var_6595: Tensor[(10, 3), float64], %var_6596: Tensor[(156), float32]) -> (Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) {
  %428 = fn (%var_6544: Tensor[(6, 7, 11), int8], %var_6545: Tensor[(6, 7, 11), int8], %var_6557: Tensor[(10, 3), float64], %var_6562: Tensor[(156), float32]) -> (Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) {
    %397 = cast(%var_6545, dtype="int8") /* ty=Tensor[(6, 7, 11), int8] */;
    %398 = shape_of(%var_6544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(%var_6544, dtype="int8") /* ty=Tensor[(6, 7, 11), int8] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %401 = cast(%var_6557, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
    %402 = cast(meta[relay.Constant][29] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
    %403 = cast(1.38385f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %404 = reshape(%401, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
    %405 = reshape(%402, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %406 = reshape(%403, newshape=[]) /* ty=float64 */;
    %407 = @func_5718(%404, %405, %406) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
    %408 = cast(%var_6562, dtype="float32") /* ty=Tensor[(156), float32] */;
    %409 = cast(1.38385f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
    %410 = cast(meta[relay.Constant][30] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %411 = cast(meta[relay.Constant][31] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %412 = reshape(%408, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %413 = reshape(%409, newshape=[]) /* ty=uint32 */;
    %414 = reshape(%410, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %415 = reshape(%411, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
    %416 = @func_5276(%412, %413, %414, %415) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
    %417 = cast(1.38385f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %418 = reshape(%417, newshape=[]) /* ty=float64 */;
    %419 = @func_710(%418) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %420 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 56), float64] */, dtype="float64") /* ty=Tensor[(5, 56), float64] */;
    %421 = reshape(%420, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
    %422 = @func_3748(%421) /* ty=(Tensor[(10, 2, 14), float64],) */;
    %423 = bitwise_xor(%399, %400) /* ty=Tensor[(6, 7, 11), int8] */;
    %424 = %407.0;
    %425 = %416.5;
    %426 = %419.0;
    %427 = %422.0;
    (%423, %424, %var_6557, meta[relay.Constant][29] /* ty=Tensor[(945), float64] */, 1.38385f64 /* ty=float64 */, %425, %var_6562, meta[relay.Constant][30] /* ty=Tensor[(180), float32] */, meta[relay.Constant][31] /* ty=Tensor[(33, 7), float64] */, %426, %427, meta[relay.Constant][32] /* ty=Tensor[(5, 56), float64] */)
  };
  %428(%var_6593, %var_6594, %var_6595, %var_6596) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */
}

def @func_24366(%var_24365: Tensor[(234), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(2, 13, 9), float32], Tensor[(234), float32]) {
  %435 = fn (%var_24342: Tensor[(234), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(2, 13, 9), float32], Tensor[(234), float32]) {
    %429 = @func_18862() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %430 = cast(%var_24342, dtype="float32") /* ty=Tensor[(234), float32] */;
    %431 = reshape(%430, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
    %432 = @func_14520(%431) /* ty=(Tensor[(2, 13, 9), float32],) */;
    %433 = %429.0;
    %434 = %432.0;
    (%433, %434, %var_24342)
  };
  %435(%var_24365) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(2, 13, 9), float32], Tensor[(234), float32]) */
}

def @func_19050() -> Tensor[(13, 11, 9), int8] {
  %437 = fn () -> Tensor[(13, 11, 9), int8] {
    %436 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %436.0
  };
  %437() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_26644() -> (Tensor[(13, 11, 9), int8],) {
  %438 = @func_24502() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %439 = %438.0;
  (%439,)
}

def @func_12906() -> (Tensor[(13, 11, 9), int8],) {
  %440 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %441 = %440.0;
  (%441,)
}

def @func_12831() -> (Tensor[(13, 11, 9), int8],) {
  %442 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %443 = %442.0;
  (%443,)
}

def @func_14957(%var_14954: Tensor[(91, 14), float64], %var_14955: Tensor[(280), float64], %var_14956: Tensor[(91, 14), int32]) -> (Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(1, 945), float64], Tensor[(10, 12, 1), float64], Tensor[(120), float64], Tensor[(4, ?, 13), uint32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(91, 14), bool]) {
  @func_14952(%var_14954, %var_14955, %var_14956) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(1, 945), float64], Tensor[(10, 12, 1), float64], Tensor[(120), float64], Tensor[(4, ?, 13), uint32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(91, 14), bool]) */
}

def @func_22350() -> Tensor[(52), float64] {
  %445 = fn () -> Tensor[(52), float64] {
    %444 = @func_14484() /* ty=(Tensor[(52), float64],) */;
    %444.0
  };
  %445() /* ty=Tensor[(52), float64] */
}

def @func_3847(%var_3842: Tensor[(5, 12, 3), float32], %var_3843: Tensor[(5, 12, 3), float32], %var_3844: Tensor[(280), float64], %var_3845: Tensor[(480, 2), float64], %var_3846: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) {
  @func_3840(%var_3842, %var_3843, %var_3844, %var_3845, %var_3846) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */
}

def @func_19582() -> (Tensor[(13, 11, 9), int8],) {
  @func_19580() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_23976() -> (Tensor[(13, 11, 9), int8],) {
  %448 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %446 = @func_20192() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %447 = %446.0;
    (%447,)
  };
  %448() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_26091() -> (Tensor[(9, 140), float32], Tensor[(5, 12, 3), int32], Tensor[(280), float64], Tensor[(4, 10, 13), bool], Tensor[(180, 960), int64], Tensor[(180, 960), float64]) {
  %471 = fn () -> (Tensor[(9, 140), float32], Tensor[(5, 12, 3), int32], Tensor[(280), float64], Tensor[(4, 10, 13), bool], Tensor[(180, 960), int64], Tensor[(180, 960), float64]) {
    %449 = @func_23916() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) */;
    %450 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %451 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %452 = cast(meta[relay.Constant][34] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %453 = cast(meta[relay.Constant][35] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %454 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %455 = reshape(%450, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %456 = reshape(%451, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %457 = reshape(%452, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %458 = reshape(%453, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
    %459 = reshape(%454, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %460 = @func_3840(%455, %456, %457, %458, %459) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
    %461 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
    %462 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 1), float32] */, dtype="int64") /* ty=Tensor[(180, 1), int64] */;
    %463 = cast(meta[relay.Constant][35] /* ty=Tensor[(960), float64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
    %464 = cast(meta[relay.Constant][35] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %465 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 1), float32] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %466 = %449.2;
    %467 = %460.0;
    %468 = %461.0;
    %469 = maximum(%462, %463) /* ty=Tensor[(180, 960), int64] */;
    %470 = power(%464, %465) /* ty=Tensor[(180, 960), float64] */;
    (%466, %467, meta[relay.Constant][34] /* ty=Tensor[(280), float64] */, %468, %469, %470)
  };
  %471() /* ty=(Tensor[(9, 140), float32], Tensor[(5, 12, 3), int32], Tensor[(280), float64], Tensor[(4, 10, 13), bool], Tensor[(180, 960), int64], Tensor[(180, 960), float64]) */
}

def @func_22320(%var_22318: Tensor[(14, 1, 1), float64]) -> (Tensor[(14, 1, 1), float64],) {
  @func_22317(%var_22318) /* ty=(Tensor[(14, 1, 1), float64],) */
}

def @func_12833() -> (Tensor[(13, 11, 9), int8],) {
  @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_16021() -> (Tensor[(4, 1, 13), float64],) {
  %474 = fn () -> (Tensor[(4, 1, 13), float64],) {
    %472 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_18903() -> (Tensor[(13, 11, 9), uint8],) {
  %477 = fn () -> (Tensor[(13, 11, 9), uint8],) {
    %475 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
    %476 = %475.0;
    (%476,)
  };
  %477() /* ty=(Tensor[(13, 11, 9), uint8],) */
}

def @func_13585() -> (Tensor[(13, 11, 9), int8],) {
  %479 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %478 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
    (%478,)
  };
  %479() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_710(%var_697: float64) -> (Tensor[(1, 3, 3), float64],) {
  %480 = cast(%var_697, dtype="float64") /* ty=float64 */;
  %481 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 3, 3), float64] */;
  %482 = divide(%480, %481) /* ty=Tensor[(1, 3, 3), float64] */;
  (%482,)
}

def @func_16939() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %489 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %483 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %484 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %485 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %486 = %483.0;
    %487 = %484.0;
    %488 = %485.0;
    (%486, %487, %488)
  };
  %489() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_20025(%var_20012: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
  %490 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %491 = %490.2;
  %492 = cast(%491, dtype="int16") /* ty=Tensor[(13, 11, 9), int16] */;
  %493 = cast(%491, dtype="int16") /* ty=Tensor[(13, 11, 9), int16] */;
  %494 = reshape(%492, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int16] */;
  %495 = reshape(%493, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int16] */;
  %496 = @func_17405(%494, %495) /* ty=(Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) */;
  %497 = cast(meta[relay.Constant][37] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %498 = cast(meta[relay.Constant][37] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %499 = reshape(%497, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %500 = reshape(%498, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %501 = @func_4508(%499, %500) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %502 = cast(%var_20012, dtype="float64") /* ty=Tensor[(168), float64] */;
  %503 = reshape(%502, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %504 = @func_16520(%503) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
  %505 = %496.1;
  %506 = %501.0;
  %507 = %504.3;
  (%491, %505, %506, meta[relay.Constant][37] /* ty=Tensor[(231), float64] */, %507, %var_20012)
}

def @func_24163() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_24161() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_24400() -> (Tensor[(13, 11, 9), int8],) {
  %510 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %508 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %509 = %508.0;
    (%509,)
  };
  %510() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_18651() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %511 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %512 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %513 = %511.0;
  %514 = %512.0;
  (%513, %514)
}

def @func_21620() -> (Tensor[(13, 11, 9), int8],) {
  @func_21618() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_26741() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(10, 42), bool], Tensor[(13, 11, 9), int8]) {
  @func_26739() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(10, 42), bool], Tensor[(13, 11, 9), int8]) */
}

def @func_26795() -> (Tensor[(7, 1, 4), float64],) {
  %515 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %516 = %515.0;
  (%516,)
}

def @func_13182(%var_13179: Tensor[(14, 6, 5), bool], %var_13180: Tensor[(14, 6, 5), bool], %var_13181: Tensor[(960), bool]) -> (Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
  %532 = fn (%var_13153: Tensor[(14, 6, 5), bool], %var_13154: Tensor[(14, 6, 5), bool], %var_13174: Tensor[(960), bool]) -> (Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) {
    %517 = cast(%var_13154, dtype="bool") /* ty=Tensor[(14, 6, 5), bool] */;
    %518 = shape_of(%var_13153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%var_13153, dtype="bool") /* ty=Tensor[(14, 6, 5), bool] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %521 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %522 = cast(meta[relay.Constant][39] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
    %523 = cast(%var_13174, dtype="bool") /* ty=Tensor[(960), bool] */;
    %524 = cast(meta[relay.Constant][40] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %525 = reshape(%521, newshape=[]) /* ty=uint32 */;
    %526 = reshape(%522, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
    %527 = reshape(%523, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
    %528 = reshape(%524, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %529 = @func_5112(%525, %526, %527, %528) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
    %530 = logical_and(%519, %520) /* ty=Tensor[(14, 6, 5), bool] */;
    %531 = %529.3;
    (%530, %531, meta[relay.Constant][38] /* ty=uint32 */, meta[relay.Constant][39] /* ty=Tensor[(96), uint32] */, %var_13174, meta[relay.Constant][40] /* ty=Tensor[(180), float32] */)
  };
  %532(%var_13179, %var_13180, %var_13181) /* ty=(Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) */
}

def @func_14158(%var_14116: Tensor[(15, 9, 12), uint32], %var_14117: Tensor[(15, 9, 12), uint32]) -> (Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) {
  %533 = cast(%var_14117, dtype="uint32") /* ty=Tensor[(15, 9, 12), uint32] */;
  %534 = shape_of(%var_14116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%var_14116, dtype="uint32") /* ty=Tensor[(15, 9, 12), uint32] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %537 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %538 = cast(%var_14117, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %539 = maximum(%535, %536) /* ty=Tensor[(15, 9, 12), uint32] */;
  %540 = %537.0;
  %541 = cos(%538) /* ty=Tensor[(15, 9, 12), float32] */;
  (%539, %540, %541)
}

def @func_14756() -> (Tensor[(4, 1, 13), float64],) {
  %544 = fn () -> (Tensor[(4, 1, 13), float64],) {
    %542 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %543 = %542.0;
    (%543,)
  };
  %544() /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_14080() -> (Tensor[(13, 11, 9), int8],) {
  @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_20028(%var_20026: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) {
  @func_20025(%var_20026) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */
}

def @func_21224(%var_21222: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) {
  @func_21221(%var_21222) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) */
}

def @func_17517() -> Tensor[(4, 1, 13), float64] {
  %545 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %545.0
}

def @func_25002(%var_24998: Tensor[(1, 2, 13), float32], %var_24999: Tensor[(168), float64], %var_25000: Tensor[(1260), float32], %var_25001: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(168), float64], Tensor[(13, 11, 9), int8], float32, Tensor[(1260), float32], Tensor[(280), float64], Tensor[(10, 96), float64], Tensor[(1, 2, 13), float32]) {
  @func_24996(%var_24998, %var_24999, %var_25000, %var_25001) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(168), float64], Tensor[(13, 11, 9), int8], float32, Tensor[(1260), float32], Tensor[(280), float64], Tensor[(10, 96), float64], Tensor[(1, 2, 13), float32]) */
}

def @func_25340() -> Tensor[(13, 11, 9), int8] {
  %546 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %546.1
}

def @func_13924() -> (Tensor[(13, 11, 9), int8],) {
  %547 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %548 = %547.0;
  (%548,)
}

def @func_15290(%var_15288: Tensor[(1260), float32], %var_15289: Tensor[(960), float64]) -> (Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  @func_15286(%var_15288, %var_15289) /* ty=(Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) */
}

def @func_19495() -> Tensor[(4, 1, 13), float64] {
  %549 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %549.1
}

def @func_16606(%var_16604: Tensor[(3, 7, 16), int8]) -> Tensor[(3, 7, 16), int8] {
  @func_16603(%var_16604) /* ty=Tensor[(3, 7, 16), int8] */
}

def @func_24504() -> (Tensor[(13, 11, 9), int8],) {
  @func_24502() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_25878() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
  %554 = fn () -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
    %550 = @func_13086() /* ty=(Tensor[(52), float64],) */;
    %551 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %552 = %550.0;
    %553 = %551.0;
    (%552, %553)
  };
  %554() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_26195(%var_26117: Tensor[(4, 9, 13), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 9, 13), float64], Tensor[(13, 11, 9), int8]) {
  %555 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %556 = cast(%555, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %557 = cast(%var_26117, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %558 = logical_or(%556, %557) /* ty=Tensor[(4, 9, 13), bool] */;
  %559 = cast(%var_26117, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
  %564 = floor_mod(%561, %562) /* ty=Tensor[(4, 9, 13), float64] */;
  %565 = @func_22752() /* ty=Tensor[(13, 11, 9), int8] */;
  (%563, %564, %565)
}

def @func_22015(%var_22007: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32) {
  %566 = cast(%var_22007, dtype="uint32") /* ty=uint32 */;
  %567 = reshape(%566, newshape=[]) /* ty=uint32 */;
  %568 = @func_21424(%567) /* ty=(Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) */;
  %569 = @func_21931() /* ty=Tensor[(13, 11, 9), int8] */;
  %570 = %568.2;
  (%569, %570, %var_22007)
}

def @func_22211() -> (Tensor[(13, 11, 9), uint8],) {
  %573 = fn () -> (Tensor[(13, 11, 9), uint8],) {
    %571 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
    %572 = %571.0;
    (%572,)
  };
  %573() /* ty=(Tensor[(13, 11, 9), uint8],) */
}

def @func_3840(%var_3765: Tensor[(5, 12, 3), float32], %var_3766: Tensor[(5, 12, 3), float32], %var_3795: Tensor[(280), float64], %var_3809: Tensor[(480, 2), float64], %var_3821: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) {
  %574 = cast(%var_3766, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %575 = shape_of(%var_3765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_3765, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %578 = floor_mod(%576, %577) /* ty=Tensor[(5, 12, 3), float32] */;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %580 = sigmoid(%579) /* ty=Tensor[(5, 12, 3), float32] */;
  %581 = cast(%578, dtype="int32") /* ty=Tensor[(5, 12, 3), int32] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="int32") /* ty=Tensor[(5, 12, 3), int32] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %585 = cast(%var_3795, dtype="float64") /* ty=Tensor[(280), float64] */;
  %586 = reshape(%585, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %587 = @func_3748(%586) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %588 = cast(-6.4349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %589 = reshape(%588, newshape=[]) /* ty=float64 */;
  %590 = @func_710(%589) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %591 = cast(%var_3809, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %592 = cast(-6.4349f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %593 = reshape(%591, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), float64] */;
  %594 = reshape(%592, newshape=[]) /* ty=float64 */;
  %595 = @func_1686(%593, %594) /* ty=(Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) */;
  %596 = cast(%var_3821, dtype="uint32") /* ty=Tensor[(5, 12, 3), uint32] */;
  %597 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%580, dtype="uint32") /* ty=Tensor[(5, 12, 3), uint32] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %600 = maximum(%583, %584) /* ty=Tensor[(5, 12, 3), int32] */;
  %601 = %587.0;
  %602 = %590.0;
  %603 = %595.5;
  %604 = multiply(%598, %599) /* ty=Tensor[(5, 12, 3), uint32] */;
  (%600, %601, %var_3795, %602, -6.4349f64 /* ty=float64 */, %603, %var_3809, %604)
}

def @func_15909(%var_15908: Tensor[(1, 110), int16]) -> (Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) {
  %611 = fn (%var_15896: Tensor[(1, 110), int16]) -> (Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) {
    %605 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %606 = cast(%var_15896, dtype="int16") /* ty=Tensor[(1, 110), int16] */;
    %607 = reshape(%606, newshape=[11, 5, 2]) /* ty=Tensor[(11, 5, 2), int16] */;
    %608 = @func_10230(%607) /* ty=(Tensor[(11, 5, 2), int16], Tensor[(10, 2, 14), float64], uint32, Tensor[(48, 2), uint32], Tensor[(960), bool], Tensor[(180), float32]) */;
    %609 = %605.2;
    %610 = %608.2;
    (%609, %610, %var_15896)
  };
  %611(%var_15908) /* ty=(Tensor[(4, 1, 13), float64], uint32, Tensor[(1, 110), int16]) */
}

def @func_21953(%var_21951: float32) -> Tensor[(16, 11, 14), float32] {
  @func_21950(%var_21951) /* ty=Tensor[(16, 11, 14), float32] */
}

def @func_23570(%var_23568: Tensor[(1274), float64]) -> (Tensor[(13, 11, 9), uint8], Tensor[(945), float64], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 1, 13), float64]) {
  @func_23567(%var_23568) /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(945), float64], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 1, 13), float64]) */
}

def @func_17778() -> (Tensor[(13, 11, 9), int8],) {
  @func_17776() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_20395() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %616 = fn () -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
    %612 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
    %613 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %614 = %612.0;
    %615 = %613.0;
    (%614, %615)
  };
  %616() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_19555(%var_19554: Tensor[(12, 15, 7), float32]) -> (Tensor[(12, 15, 7), float32],) {
  %619 = fn (%var_19548: Tensor[(12, 15, 7), float32]) -> (Tensor[(12, 15, 7), float32],) {
    %617 = cast(%var_19548, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
    %618 = erf(%617) /* ty=Tensor[(12, 15, 7), float32] */;
    (%618,)
  };
  %619(%var_19554) /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_18542() -> (Tensor[(13, 11, 9), int8],) {
  %620 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %621 = %620.0;
  (%621,)
}

def @func_5118(%var_5114: uint32, %var_5115: Tensor[(16, 1, 6), uint32], %var_5116: Tensor[(16, 10, 6), bool], %var_5117: Tensor[(180), float32]) -> (Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) {
  @func_5112(%var_5114, %var_5115, %var_5116, %var_5117) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */
}

def @func_25319(%var_25318: Tensor[(480), float32]) -> (Tensor[(13, 11, 9), uint8], Tensor[(480), float32], Tensor[(480), float32], Tensor[(110), int16]) {
  %630 = fn (%var_25307: Tensor[(480), float32]) -> (Tensor[(13, 11, 9), uint8], Tensor[(480), float32], Tensor[(480), float32], Tensor[(110), int16]) {
    %622 = @func_17739() /* ty=(Tensor[(13, 11, 9), uint8],) */;
    %623 = cast(%var_25307, dtype="float32") /* ty=Tensor[(480), float32] */;
    %624 = cast(meta[relay.Constant][41] /* ty=Tensor[(110), int16] */, dtype="int16") /* ty=Tensor[(110), int16] */;
    %625 = reshape(%623, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %626 = reshape(%624, newshape=[110]) /* ty=Tensor[(110), int16] */;
    %627 = @func_19958(%625, %626) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(480), float32], Tensor[(1620), uint32], Tensor[(4, 1, 13), float64], Tensor[(110), int16], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %628 = %622.0;
    %629 = %627.2;
    (%628, %629, %var_25307, meta[relay.Constant][41] /* ty=Tensor[(110), int16] */)
  };
  %630(%var_25318) /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(480), float32], Tensor[(480), float32], Tensor[(110), int16]) */
}

def @func_25439() -> (Tensor[(14), float64], Tensor[(14, 1, 52), float32]) {
  %640 = fn () -> (Tensor[(14), float64], Tensor[(14, 1, 52), float32]) {
    %631 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %632 = %631.0;
    %633 = cast(meta[relay.Constant][42] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
    %634 = reshape(%633, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), float64] */;
    %635 = @func_22317(%634) /* ty=(Tensor[(14, 1, 1), float64],) */;
    %636 = %635.0;
    %637 = cast(%632, dtype="float32") /* ty=Tensor[(52), float32] */;
    %638 = cast(%636, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
    %639 = floor_mod(%637, %638) /* ty=Tensor[(14, 1, 52), float32] */;
    (meta[relay.Constant][42] /* ty=Tensor[(14), float64] */, %639)
  };
  %640() /* ty=(Tensor[(14), float64], Tensor[(14, 1, 52), float32]) */
}

def @func_17908() -> Tensor[(13, 11, 9), int8] {
  %641 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_16191() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %641() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_17343() -> (Tensor[(52), float64],) {
  %644 = fn () -> (Tensor[(52), float64],) {
    %642 = @func_14815() /* ty=(Tensor[(52), float64],) */;
    %643 = %642.0;
    (%643,)
  };
  %644() /* ty=(Tensor[(52), float64],) */
}

def @func_20406() -> Tensor[(13, 11, 9), int8] {
  %646 = fn () -> Tensor[(13, 11, 9), int8] {
    %645 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %645.0
  };
  %646() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_16192() -> Tensor[(13, 11, 9), int8] {
  %648 = fn () -> Tensor[(13, 11, 9), int8] {
    %647 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %647.0
  };
  %648() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25346() -> Tensor[(13, 11, 9), int8] {
  %650 = fn () -> Tensor[(13, 11, 9), int8] {
    %649 = @func_20444() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %649.0
  };
  %650() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_22105(%var_22103: Tensor[(945), float64], %var_22104: Tensor[(416), uint64]) -> (Tensor[(52), float64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(416), uint64], Tensor[(1274, 1), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %672 = fn (%var_22061: Tensor[(945), float64], %var_22067: Tensor[(416), uint64]) -> (Tensor[(52), float64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(416), uint64], Tensor[(1274, 1), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %651 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %652 = cast(%var_22061, dtype="float64") /* ty=Tensor[(945), float64] */;
    %653 = cast(-7.05135f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %654 = reshape(%652, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %655 = reshape(%653, newshape=[]) /* ty=float64 */;
    %656 = @func_897(%654, %655) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %657 = cast(%var_22067, dtype="uint64") /* ty=Tensor[(416), uint64] */;
    %658 = cast(%var_22067, dtype="uint64") /* ty=Tensor[(416), uint64] */;
    %659 = cast(%var_22061, dtype="float64") /* ty=Tensor[(945), float64] */;
    %660 = cast(meta[relay.Constant][43] /* ty=Tensor[(1274, 1), float64] */, dtype="float64") /* ty=Tensor[(1274, 1), float64] */;
    %661 = reshape(%657, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
    %662 = reshape(%658, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
    %663 = reshape(%659, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %664 = reshape(%660, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %665 = @func_10913(%661, %662, %663, %664) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
    %666 = @func_21529() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %667 = %651.0;
    %668 = %656.2;
    %669 = %665.4;
    %670 = @func_20405() /* ty=Tensor[(13, 11, 9), int8] */;
    %671 = %666.0;
    (%667, %668, %var_22061, -7.05135f64 /* ty=float64 */, %669, %var_22067, meta[relay.Constant][43] /* ty=Tensor[(1274, 1), float64] */, %670, %671)
  };
  %672(%var_22103, %var_22104) /* ty=(Tensor[(52), float64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(416), uint64], Tensor[(1274, 1), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_15227(%var_15224: uint32, %var_15225: Tensor[(960), bool], %var_15226: Tensor[(280), float64]) -> (Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) {
  %697 = fn (%var_15184: uint32, %var_15186: Tensor[(960), bool], %var_15209: Tensor[(280), float64]) -> (Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) {
    %673 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %674 = cast(%var_15184, dtype="uint32") /* ty=uint32 */;
    %675 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 48), uint32] */, dtype="uint32") /* ty=Tensor[(2, 48), uint32] */;
    %676 = cast(%var_15186, dtype="bool") /* ty=Tensor[(960), bool] */;
    %677 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %678 = reshape(%674, newshape=[]) /* ty=uint32 */;
    %679 = reshape(%675, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
    %680 = reshape(%676, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
    %681 = reshape(%677, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %682 = @func_5112(%678, %679, %680, %681) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
    %683 = cast(%var_15184, dtype="float32") /* ty=float32 */;
    %684 = cast(meta[relay.Constant][46] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %685 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %686 = cast(%var_15209, dtype="float64") /* ty=Tensor[(280), float64] */;
    %687 = %682.2;
    %688 = cast(%687, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
    %689 = reshape(%683, newshape=[]) /* ty=float32 */;
    %690 = reshape(%684, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
    %691 = reshape(%685, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %692 = reshape(%686, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %693 = reshape(%688, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %694 = @func_4313(%689, %690, %691, %692, %693) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
    %695 = %673.0;
    %696 = %694.4;
    (%695, %687, %var_15184, meta[relay.Constant][44] /* ty=Tensor[(2, 48), uint32] */, %var_15186, meta[relay.Constant][45] /* ty=Tensor[(180), float32] */, %696, meta[relay.Constant][46] /* ty=Tensor[(1260), float32] */, %var_15209)
  };
  %697(%var_15224, %var_15225, %var_15226) /* ty=(Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) */
}

def @func_25969() -> Tensor[(13, 11, 9), int8] {
  @func_25967() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_26692() -> (Tensor[(13, 11, 9), int8],) {
  @func_26690() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_25137(%var_25135: float32) -> (Tensor[(13, 11, 9), int8], Tensor[(16, 11, 14), float32], float32) {
  @func_25134(%var_25135) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(16, 11, 14), float32], float32) */
}

def @func_19455() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_13864() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %698 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %699 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %700 = %698.0;
  (%699, %700)
}

def @func_16720(%var_16713: Tensor[(945), float64]) -> (Tensor[(52), float64], Tensor[(1, 960), float64], Tensor[(5, 6), float64], Tensor[(945), float64], float64) {
  %701 = @func_13422() /* ty=(Tensor[(52), float64],) */;
  %702 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 6), float64] */, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %703 = cast(%var_16713, dtype="float64") /* ty=Tensor[(945), float64] */;
  %704 = cast(8.34341f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %705 = reshape(%702, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
  %706 = reshape(%703, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %707 = reshape(%704, newshape=[]) /* ty=float64 */;
  %708 = @func_5718(%705, %706, %707) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
  %709 = %701.0;
  %710 = %708.6;
  (%709, %710, meta[relay.Constant][47] /* ty=Tensor[(5, 6), float64] */, %var_16713, 8.34341f64 /* ty=float64 */)
}

def @func_13121() -> Tensor[(13, 11, 9), int8] {
  %712 = fn () -> Tensor[(13, 11, 9), int8] {
    %711 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %711.0
  };
  %712() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_22908() -> Tensor[(13, 11, 9), int8] {
  %714 = fn () -> Tensor[(13, 11, 9), int8] {
    %713 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %713.0
  };
  %714() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_21315() -> Tensor[(4, 1, 13), float64] {
  %716 = fn () -> Tensor[(4, 1, 13), float64] {
    %715 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %715.2
  };
  %716() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_24023(%var_24022: Tensor[(11, 3, 10), float32]) -> Tensor[(11, 3, 10), float32] {
  %718 = fn (%var_24002: Tensor[(11, 3, 10), float32]) -> Tensor[(11, 3, 10), float32] {
    %717 = cast(%var_24002, dtype="float32") /* ty=Tensor[(11, 3, 10), float32] */;
    tan(%717) /* ty=Tensor[(11, 3, 10), float32] */
  };
  %718(%var_24022) /* ty=Tensor[(11, 3, 10), float32] */
}

def @func_20770() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_20768() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_900(%var_898: Tensor[(15, 7, 9), float64], %var_899: float64) -> (Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) {
  %736 = fn (%var_861: Tensor[(15, 7, 9), float64], %var_886: float64) -> (Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) {
    %719 = cast(%var_886, dtype="float64") /* ty=float64 */;
    %720 = reshape(%719, newshape=[]) /* ty=float64 */;
    %721 = @func_710(%720) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %722 = cast(%var_886, dtype="float64") /* ty=float64 */;
    %723 = reshape(%722, newshape=[]) /* ty=float64 */;
    %724 = @func_710(%723) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %725 = cast(%var_886, dtype="float64") /* ty=float64 */;
    %726 = reshape(%725, newshape=[]) /* ty=float64 */;
    %727 = @func_710(%726) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %728 = cast(%var_861, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
    %729 = sin(%728) /* ty=Tensor[(15, 7, 9), float64] */;
    %730 = cast(%729, dtype="int8") /* ty=Tensor[(15, 7, 9), int8] */;
    %731 = cast(%var_886, dtype="int8") /* ty=int8 */;
    %732 = %721.0;
    %733 = %724.0;
    %734 = %727.0;
    %735 = bitwise_or(%730, %731) /* ty=Tensor[(15, 7, 9), int8] */;
    (%732, %733, %734, %735)
  };
  %736(%var_898, %var_899) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */
}

def @func_13926() -> (Tensor[(13, 11, 9), int8],) {
  @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15554(%var_15553: Tensor[(480), float32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64]) {
  %751 = fn (%var_15528: Tensor[(480), float32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64]) {
    %737 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %738 = cast(%var_15528, dtype="float32") /* ty=Tensor[(480), float32] */;
    %739 = cast(-8.76506f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %740 = reshape(%738, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
    %741 = reshape(%739, newshape=[]) /* ty=float32 */;
    %742 = @func_7213(%740, %741) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
    %743 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %744 = cast(-8.76506f /* ty=float32 */, dtype="float64") /* ty=float64 */;
    %745 = reshape(%744, newshape=[]) /* ty=float64 */;
    %746 = @func_710(%745) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %747 = %737.0;
    %748 = %742.4;
    %749 = %743.0;
    %750 = %746.0;
    (%747, %748, %var_15528, -8.76506f /* ty=float32 */, %749, %750)
  };
  %751(%var_15553) /* ty=(Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64]) */
}

def @func_13866() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_713(%var_711: float64) -> (Tensor[(1, 3, 3), float64],) {
  @func_710(%var_711) /* ty=(Tensor[(1, 3, 3), float64],) */
}

def @func_13336() -> (Tensor[(13, 11, 9), int8],) {
  @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15326() -> (Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) {
  %752 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %753 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %754 = asinh(%752) /* ty=Tensor[(7, 1, 4), float64] */;
  %755 = %753.0;
  (%754, %755)
}

def @func_20596(%var_20565: Tensor[(420), bool], %var_20567: Tensor[(1, 945), float64]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(1274), float64], Tensor[(1, 945), float64], Tensor[(13, 11, 9), int8]) {
  %756 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %757 = cast(%var_20565, dtype="bool") /* ty=Tensor[(420), bool] */;
  %758 = cast(meta[relay.Constant][49] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %759 = cast(%var_20567, dtype="float64") /* ty=Tensor[(1, 945), float64] */;
  %760 = reshape(%757, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %761 = reshape(%758, newshape=[1274, 1]) /* ty=Tensor[(1274, 1), float64] */;
  %762 = reshape(%759, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %763 = @func_19126(%760, %761, %762) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(420), bool], Tensor[(13, 11, 9), int8], float64, Tensor[(1274, 1), float64], Tensor[(30), float64], Tensor[(945), float64]) */;
  %764 = @func_17041() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %765 = %756.0;
  %766 = %763.0;
  %767 = %764.0;
  (%765, %766, %var_20565, meta[relay.Constant][49] /* ty=Tensor[(1274), float64] */, %var_20567, %767)
}

def @func_7213(%var_7176: Tensor[(16, 6, 5), float32], %var_7202: float32) -> (Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) {
  %768 = cast(%var_7176, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %769 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %770 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %771 = cast(meta[relay.Constant][51] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %772 = cast(meta[relay.Constant][52] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %773 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %774 = reshape(%769, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %775 = reshape(%770, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %776 = reshape(%771, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %777 = reshape(%772, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %778 = reshape(%773, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %779 = @func_3840(%774, %775, %776, %777, %778) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %780 = cast(%var_7202, dtype="float32") /* ty=float32 */;
  %781 = cast(meta[relay.Constant][53] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %782 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %783 = cast(meta[relay.Constant][51] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %784 = cast(meta[relay.Constant][52] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %785 = reshape(%780, newshape=[]) /* ty=float32 */;
  %786 = reshape(%781, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %787 = reshape(%782, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %788 = reshape(%783, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %789 = reshape(%784, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %790 = @func_4313(%785, %786, %787, %788, %789) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %791 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %792 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %793 = cast(meta[relay.Constant][51] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %794 = cast(meta[relay.Constant][52] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %795 = %779.0;
  %796 = cast(%795, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %797 = reshape(%791, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %798 = reshape(%792, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %799 = reshape(%793, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %800 = reshape(%794, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %801 = reshape(%796, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %802 = @func_3840(%797, %798, %799, %800, %801) /* ty=(Tensor[(5, 12, 3), int32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(480, 2), float64], Tensor[(5, 12, 3), uint32]) */;
  %803 = rsqrt(%768) /* ty=Tensor[(16, 6, 5), float32] */;
  %804 = %790.1;
  %805 = %802.3;
  (%803, %795, meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, meta[relay.Constant][51] /* ty=Tensor[(280), float64] */, meta[relay.Constant][52] /* ty=Tensor[(960), float64] */, %804, %var_7202, meta[relay.Constant][53] /* ty=Tensor[(1260), float32] */, %805)
}

def @func_17881(%var_17880: Tensor[(36, 10), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) {
  %816 = fn (%var_17830: Tensor[(36, 10), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) {
    %806 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
    %807 = cast(%var_17830, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
    %808 = reshape(%807, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %809 = @func_15976(%808) /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) */;
    %810 = %809.0;
    %811 = cast(%810, dtype="float32") /* ty=Tensor[(52), float32] */;
    %812 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %813 = %806.1;
    %814 = atanh(%811) /* ty=Tensor[(52), float32] */;
    %815 = %812.0;
    (%813, %var_17830, %814, %815)
  };
  %816(%var_17880) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) */
}

def @func_20630() -> (Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) {
  %824 = fn () -> (Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) {
    %817 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %818 = %817.0;
    %819 = cast(%818, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %820 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 10, 13), float64] */, dtype="bool") /* ty=Tensor[(4, 10, 13), bool] */;
    %821 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %822 = logical_and(%819, %820) /* ty=Tensor[(4, 10, 13), bool] */;
    %823 = %821.0;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */
}

def @func_13370() -> (Tensor[(13, 11, 9), int8],) {
  %825 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %826 = %825.0;
  (%826,)
}

def @func_18895() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %827 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %828 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %829 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  %830 = %827.0;
  %831 = %828.1;
  (%829, %830, %831)
}

def @func_20157() -> Tensor[(13, 11, 9), int8] {
  @func_18734() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_25257() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  %832 = @func_18902() /* ty=(Tensor[(13, 11, 9), uint8],) */;
  %833 = %832.0;
  %834 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%833, %834)
}

def @func_15991() -> (Tensor[(13, 11, 9), int8],) {
  %835 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %836 = %835.1;
  (%836,)
}

def @func_24502() -> (Tensor[(13, 11, 9), int8],) {
  %837 = @func_18268() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %838 = %837.0;
  (%838,)
}

def @func_24663() -> (Tensor[(4, 10, 13), bool], Tensor[(52), float64]) {
  @func_24661() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(52), float64]) */
}

def @func_25967() -> Tensor[(13, 11, 9), int8] {
  %839 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %839.1
}

def @func_14271(%var_14269: Tensor[(10, 12, 1), float64]) -> Tensor[(10, 12, 1), float64] {
  @func_14268(%var_14269) /* ty=Tensor[(10, 12, 1), float64] */
}

def @func_25758(%var_25756: int64, %var_25757: Tensor[(280), float64]) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %855 = fn (%var_25707: int64, %var_25752: Tensor[(280), float64]) -> (Tensor[(10, 1, 4), bool], Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64], Tensor[(960), float64]) {
    %840 = cast(%var_25707, dtype="bool") /* ty=bool */;
    %841 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 1, 4), int64] */, dtype="bool") /* ty=Tensor[(10, 1, 4), bool] */;
    %842 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %843 = cast(%var_25707, dtype="float32") /* ty=float32 */;
    %844 = cast(meta[relay.Constant][56] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %845 = cast(%var_25752, dtype="float64") /* ty=Tensor[(280), float64] */;
    %846 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %847 = reshape(%843, newshape=[]) /* ty=float32 */;
    %848 = reshape(%844, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %849 = reshape(%845, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %850 = reshape(%846, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %851 = @func_16798(%847, %848, %849, %850) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
    %852 = not_equal(%840, %841) /* ty=Tensor[(10, 1, 4), bool] */;
    %853 = %842.0;
    %854 = %851.8;
    (%852, %853, %854, meta[relay.Constant][56] /* ty=Tensor[(1260), float32] */, %var_25752, meta[relay.Constant][57] /* ty=Tensor[(960), float64] */)
  };
  %855(%var_25756, %var_25757) /* ty=(Tensor[(10, 1, 4), bool], Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64], Tensor[(960), float64]) */
}

def @func_15328() -> (Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) {
  @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_23635() -> Tensor[(4, 1, 13), float32] {
  @func_23633() /* ty=Tensor[(4, 1, 13), float32] */
}

def @func_26690() -> (Tensor[(13, 11, 9), int8],) {
  %856 = @func_23975() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %857 = %856.0;
  (%857,)
}

def @func_12136(%var_12134: Tensor[(4, 11, 15), float64], %var_12135: Tensor[(156), float32]) -> (Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) {
  %870 = fn (%var_12102: Tensor[(4, 11, 15), float64], %var_12129: Tensor[(156), float32]) -> (Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) {
    %858 = cast(%var_12102, dtype="float64") /* ty=Tensor[(4, 11, 15), float64] */;
    %859 = cast(meta[relay.Constant][58] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
    %860 = cast(meta[relay.Constant][58] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
    %861 = cast(meta[relay.Constant][59] /* ty=Tensor[(30, 1), float64] */, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
    %862 = cast(%var_12129, dtype="float32") /* ty=Tensor[(156), float32] */;
    %863 = reshape(%859, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
    %864 = reshape(%860, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
    %865 = reshape(%861, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
    %866 = reshape(%862, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %867 = @func_6592(%863, %864, %865, %866) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
    %868 = asinh(%858) /* ty=Tensor[(4, 11, 15), float64] */;
    %869 = %867.7;
    (%868, %869, meta[relay.Constant][58] /* ty=Tensor[(462), int8] */, meta[relay.Constant][59] /* ty=Tensor[(30, 1), float64] */, %var_12129)
  };
  %870(%var_12134, %var_12135) /* ty=(Tensor[(4, 11, 15), float64], Tensor[(180), float32], Tensor[(462), int8], Tensor[(30, 1), float64], Tensor[(156), float32]) */
}

def @func_16131(%var_16104: Tensor[(462), int8]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) {
  %871 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %872 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
  %873 = cast(%var_16104, dtype="int8") /* ty=Tensor[(462), int8] */;
  %874 = cast(%var_16104, dtype="int8") /* ty=Tensor[(462), int8] */;
  %875 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %876 = cast(meta[relay.Constant][61] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %877 = reshape(%873, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %878 = reshape(%874, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %879 = reshape(%875, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %880 = reshape(%876, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %881 = @func_6592(%877, %878, %879, %880) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %882 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %883 = cast(meta[relay.Constant][62] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %884 = cast(meta[relay.Constant][62] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %885 = reshape(%883, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %886 = reshape(%884, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), int8] */;
  %887 = @func_5449(%885, %886) /* ty=(Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) */;
  %888 = %871.1;
  %889 = %872.0;
  %890 = %881.6;
  %891 = %882.0;
  %892 = %887.1;
  (%888, %889, %890, %var_16104, meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, meta[relay.Constant][61] /* ty=Tensor[(156), float32] */, %891, %892, meta[relay.Constant][62] /* ty=Tensor[(1440), int8] */)
}

def @func_16523(%var_16521: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) {
  @func_16520(%var_16521) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */
}

def @func_20444() -> (Tensor[(13, 11, 9), int8],) {
  %893 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %894 = %893.0;
  (%894,)
}

def @func_22699() -> Tensor[(13, 11, 9), int8] {
  @func_16830() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_14817() -> (Tensor[(52), float64],) {
  @func_14815() /* ty=(Tensor[(52), float64],) */
}

def @func_18544() -> (Tensor[(13, 11, 9), int8],) {
  @func_18542() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_21744() -> Tensor[(13, 11, 9), int8] {
  %895 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_13120() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %895() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_13595() -> Tensor[(4, 1, 13), float64] {
  %897 = fn () -> Tensor[(4, 1, 13), float64] {
    %896 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
    %896.1
  };
  %897() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_19013() -> Tensor[(13, 11, 9), int8] {
  %898 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_18734() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %898() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_18065(%var_18009: Tensor[(480), float32], %var_18034: Tensor[(945), float64], %var_18049: Tensor[(416, 15), uint64]) -> (Tensor[(4, 1, 13), float64], Tensor[(1260), float32], Tensor[(480), float32], float32, Tensor[(30, 1), float64], Tensor[(945), float64], Tensor[(1274), float64], Tensor[(416, 15), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %899 = cast(%var_18009, dtype="float32") /* ty=Tensor[(480), float32] */;
  %900 = cast(-1.59396f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %901 = reshape(%899, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %902 = reshape(%900, newshape=[]) /* ty=float32 */;
  %903 = @func_7213(%901, %902) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
  %904 = cast(meta[relay.Constant][63] /* ty=Tensor[(416, 1), uint64] */, dtype="uint64") /* ty=Tensor[(416, 1), uint64] */;
  %905 = cast(meta[relay.Constant][63] /* ty=Tensor[(416, 1), uint64] */, dtype="uint64") /* ty=Tensor[(416, 1), uint64] */;
  %906 = cast(%var_18034, dtype="float64") /* ty=Tensor[(945), float64] */;
  %907 = cast(meta[relay.Constant][64] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %908 = reshape(%904, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %909 = reshape(%905, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
  %910 = reshape(%906, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %911 = reshape(%907, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %912 = @func_10913(%908, %909, %910, %911) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
  %913 = cast(meta[relay.Constant][63] /* ty=Tensor[(416, 1), uint64] */, dtype="int8") /* ty=Tensor[(416, 1), int8] */;
  %914 = cast(%var_18049, dtype="int8") /* ty=Tensor[(416, 15), int8] */;
  %915 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %916 = %903.7;
  %917 = %912.6;
  %918 = left_shift(%913, %914) /* ty=Tensor[(416, 15), int8] */;
  %919 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %920 = @func_16191() /* ty=Tensor[(13, 11, 9), int8] */;
  (%915, %916, %var_18009, -1.59396f /* ty=float32 */, %917, %var_18034, meta[relay.Constant][64] /* ty=Tensor[(1274), float64] */, %918, %919, %920)
}

def @func_22754() -> Tensor[(13, 11, 9), int8] {
  @func_22752() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_13334() -> (Tensor[(13, 11, 9), int8],) {
  %921 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %922 = %921.0;
  (%922,)
}

def @func_17043() -> (Tensor[(13, 11, 9), int8],) {
  @func_17041() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_21836() -> Tensor[(13, 11, 9), int8] {
  @func_21834() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_23379() -> (Tensor[(52), float64],) {
  %925 = fn () -> (Tensor[(52), float64],) {
    %923 = @func_21488() /* ty=(Tensor[(52), float64],) */;
    %924 = %923.0;
    (%924,)
  };
  %925() /* ty=(Tensor[(52), float64],) */
}

def @func_16372() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %930 = fn () -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
    %926 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %927 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %928 = %926.0;
    %929 = %927.0;
    (%928, %929)
  };
  %930() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_21426(%var_21425: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) {
  %939 = fn (%var_21391: uint32) -> (Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) {
    %931 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %932 = cast(%var_21391, dtype="uint32") /* ty=uint32 */;
    %933 = reshape(%932, newshape=[]) /* ty=uint32 */;
    %934 = @func_14718(%933) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) */;
    %935 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %936 = %931.0;
    %937 = %934.7;
    %938 = %935.0;
    (%936, %937, %var_21391, %938)
  };
  %939(%var_21425) /* ty=(Tensor[(13, 11, 9), int8], uint32, uint32, Tensor[(13, 11, 9), int8]) */
}

def @func_23964(%var_23961: uint32, %var_23962: Tensor[(2, 48), uint32], %var_23963: Tensor[(180, 1), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(231), float64], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180, 1), float32]) {
  @func_23959(%var_23961, %var_23962, %var_23963) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(231), float64], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180, 1), float32]) */
}

def @func_25926() -> (Tensor[(52), float64],) {
  %942 = fn () -> (Tensor[(52), float64],) {
    %940 = @func_14631() /* ty=(Tensor[(52), float64],) */;
    %941 = %940.0;
    (%941,)
  };
  %942() /* ty=(Tensor[(52), float64],) */
}

def @func_16603(%var_16598: Tensor[(3, 7, 16), int8]) -> Tensor[(3, 7, 16), int8] {
  %943 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 7, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 7, 16), int8] */;
  %944 = shape_of(%var_16598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%var_16598, dtype="int8") /* ty=Tensor[(3, 7, 16), int8] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%945, %946) /* ty=Tensor[(3, 7, 16), int8] */
}

def @func_20917(%var_20913: Tensor[(3, 3), float64], %var_20914: uint32, %var_20915: Tensor[(960), bool], %var_20916: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(?, 3, 3), bool], Tensor[(3, 3), float64], Tensor[(180), float32], uint32, Tensor[(960), bool], Tensor[(280), float64]) {
  %961 = fn (%var_20893: Tensor[(3, 3), float64], %var_20898: uint32, %var_20899: Tensor[(960), bool], %var_20900: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(?, 3, 3), bool], Tensor[(3, 3), float64], Tensor[(180), float32], uint32, Tensor[(960), bool], Tensor[(280), float64]) {
    %947 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %948 = cast(%var_20893, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
    %949 = reshape(%948, newshape=[1, 3, 3]) /* ty=Tensor[(1, 3, 3), float64] */;
    %950 = @func_17578(%949) /* ty=(Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) */;
    %951 = cast(%var_20898, dtype="uint32") /* ty=uint32 */;
    %952 = cast(%var_20899, dtype="bool") /* ty=Tensor[(960), bool] */;
    %953 = cast(%var_20900, dtype="float64") /* ty=Tensor[(280), float64] */;
    %954 = reshape(%951, newshape=[]) /* ty=uint32 */;
    %955 = reshape(%952, newshape=[960]) /* ty=Tensor[(960), bool] */;
    %956 = reshape(%953, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %957 = @func_15223(%954, %955, %956) /* ty=(Tensor[(52), float64], Tensor[(16, 10, 6), bool], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(280), float64]) */;
    %958 = %947.0;
    %959 = %950.0;
    %960 = %957.5;
    (%958, %959, %var_20893, %960, %var_20898, %var_20899, %var_20900)
  };
  %961(%var_20913, %var_20914, %var_20915, %var_20916) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(?, 3, 3), bool], Tensor[(3, 3), float64], Tensor[(180), float32], uint32, Tensor[(960), bool], Tensor[(280), float64]) */
}

def @func_24384() -> (Tensor[(13, 11, 9), int8],) {
  @func_24382() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_14006() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %962 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %963 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %964 = %962.0;
  %965 = %963.0;
  (%964, %965)
}

def @func_16803(%var_16799: float32, %var_16800: Tensor[(1260), float32], %var_16801: Tensor[(280), float64], %var_16802: Tensor[(960), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %982 = fn (%var_16789: float32, %var_16790: Tensor[(1260), float32], %var_16792: Tensor[(280), float64], %var_16793: Tensor[(960), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
    %966 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %967 = cast(%var_16789, dtype="float32") /* ty=float32 */;
    %968 = cast(%var_16790, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %969 = cast(meta[relay.Constant][66] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %970 = cast(%var_16792, dtype="float64") /* ty=Tensor[(280), float64] */;
    %971 = cast(%var_16793, dtype="float64") /* ty=Tensor[(960), float64] */;
    %972 = reshape(%967, newshape=[]) /* ty=float32 */;
    %973 = reshape(%968, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
    %974 = reshape(%969, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %975 = reshape(%970, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %976 = reshape(%971, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %977 = @func_4313(%972, %973, %974, %975, %976) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
    %978 = %966.1;
    %979 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
    %980 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
    %981 = %977.0;
    (%978, %979, %980, %981, %var_16789, %var_16790, meta[relay.Constant][66] /* ty=Tensor[(180), float32] */, %var_16792, %var_16793)
  };
  %982(%var_16799, %var_16800, %var_16801, %var_16802) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */
}

def @func_25294() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  @func_25292() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_24263() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  %983 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %984 = @func_16020() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %985 = %983.1;
  %986 = %984.0;
  (%985, %986)
}

def @func_21489() -> (Tensor[(52), float64],) {
  %989 = fn () -> (Tensor[(52), float64],) {
    %987 = @func_17342() /* ty=(Tensor[(52), float64],) */;
    %988 = %987.0;
    (%988,)
  };
  %989() /* ty=(Tensor[(52), float64],) */
}

def @func_14615(%var_14613: Tensor[(13, 11, 9), int8]) -> Tensor[(13, 11, 9), bool] {
  @func_14612(%var_14613) /* ty=Tensor[(13, 11, 9), bool] */
}

def @func_20217() -> Tensor[(52), float64] {
  @func_20215() /* ty=Tensor[(52), float64] */
}

def @func_24996(%var_24955: Tensor[(1, 2, 13), float32], %var_24969: Tensor[(168), float64], %var_24988: Tensor[(1260), float32], %var_24989: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(168), float64], Tensor[(13, 11, 9), int8], float32, Tensor[(1260), float32], Tensor[(280), float64], Tensor[(10, 96), float64], Tensor[(1, 2, 13), float32]) {
  %990 = cast(%var_24969, dtype="float64") /* ty=Tensor[(168), float64] */;
  %991 = reshape(%990, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %992 = @func_21221(%991) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) */;
  %993 = cast(1.1333f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %994 = cast(%var_24988, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %995 = cast(%var_24989, dtype="float64") /* ty=Tensor[(280), float64] */;
  %996 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %997 = reshape(%993, newshape=[]) /* ty=float32 */;
  %998 = reshape(%994, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %999 = reshape(%995, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1000 = reshape(%996, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1001 = @func_16798(%997, %998, %999, %1000) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), float32], Tensor[(12, 7, 15), float32], float32, Tensor[(1260), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1002 = cast(%var_24955, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  %1003 = exp(%1002) /* ty=Tensor[(1, 2, 13), float32] */;
  %1004 = cast(%1003, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  %1005 = %992.0;
  %1006 = %1001.0;
  %1007 = log2(%1004) /* ty=Tensor[(1, 2, 13), float32] */;
  (%1005, %var_24969, %1006, 1.1333f /* ty=float32 */, %var_24988, %var_24989, meta[relay.Constant][67] /* ty=Tensor[(10, 96), float64] */, %1007)
}

def @func_17578(%var_17554: Tensor[(1, 3, 3), float64]) -> (Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) {
  %1008 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %1009 = %1008.3;
  %1010 = cast(%var_17554, dtype="bool") /* ty=Tensor[(1, 3, 3), bool] */;
  %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%1009, dtype="bool") /* ty=Tensor[(1, 3, 3), bool] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1014 = cast(%var_17554, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
  %1015 = not_equal(%1012, %1013) /* ty=Tensor[(?, 3, 3), bool] */;
  %1016 = atanh(%1014) /* ty=Tensor[(1, 3, 3), float32] */;
  (%1015, %1016)
}

def @func_16691(%var_16689: Tensor[(480), float32], %var_16690: Tensor[(1620), uint32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) {
  %1033 = fn (%var_16645: Tensor[(480), float32], %var_16663: Tensor[(1620), uint32]) -> (Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) {
    %1017 = @func_14631() /* ty=(Tensor[(52), float64],) */;
    %1018 = cast(%var_16645, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1019 = cast(7.78207f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1020 = reshape(%1018, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
    %1021 = reshape(%1019, newshape=[]) /* ty=float32 */;
    %1022 = @func_7213(%1020, %1021) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(5, 12, 3), int32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64], Tensor[(1, 3, 3), float64], float32, Tensor[(1260), float32], Tensor[(1, 3, 3), float64]) */;
    %1023 = cast(%var_16663, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
    %1024 = cast(%var_16663, dtype="uint32") /* ty=Tensor[(1620), uint32] */;
    %1025 = reshape(%1023, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), uint32] */;
    %1026 = reshape(%1024, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), uint32] */;
    %1027 = @func_14158(%1025, %1026) /* ty=(Tensor[(15, 9, 12), uint32], Tensor[(13, 11, 9), int8], Tensor[(15, 9, 12), float32]) */;
    %1028 = @func_14631() /* ty=(Tensor[(52), float64],) */;
    %1029 = %1017.0;
    %1030 = %1022.4;
    %1031 = %1027.2;
    %1032 = %1028.0;
    (%1029, %1030, %var_16645, 7.78207f /* ty=float32 */, %1031, %var_16663, %1032)
  };
  %1033(%var_16689, %var_16690) /* ty=(Tensor[(52), float64], Tensor[(960), float64], Tensor[(480), float32], float32, Tensor[(15, 9, 12), float32], Tensor[(1620), uint32], Tensor[(52), float64]) */
}

def @func_18897() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_18895() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_5718(%var_5690: Tensor[(5, 6, 1), float64], %var_5708: Tensor[(945), float64], %var_5709: float64) -> (Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) {
  %1034 = cast(%var_5690, dtype="float64") /* ty=Tensor[(5, 6, 1), float64] */;
  %1035 = sqrt(%1034) /* ty=Tensor[(5, 6, 1), float64] */;
  %1036 = cast(%var_5690, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%1035, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1040 = cast(%1035, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %1041 = shape_of(%var_5690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%var_5690, dtype="bool") /* ty=Tensor[(5, 6, 1), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1044 = cast(%var_5708, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1045 = cast(%var_5709, dtype="float64") /* ty=float64 */;
  %1046 = reshape(%1044, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %1047 = reshape(%1045, newshape=[]) /* ty=float64 */;
  %1048 = @func_897(%1046, %1047) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
  %1049 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %1050 = cast(%var_5709, dtype="float64") /* ty=float64 */;
  %1051 = reshape(%1049, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), float64] */;
  %1052 = reshape(%1050, newshape=[]) /* ty=float64 */;
  %1053 = @func_1686(%1051, %1052) /* ty=(Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) */;
  %1054 = mod(%1038, %1039) /* ty=Tensor[(5, 6, ?), float32] */;
  %1055 = equal(%1042, %1043) /* ty=Tensor[(5, 6, ?), bool] */;
  %1056 = %1048.2;
  %1057 = %1053.4;
  (%1054, %1055, %1056, %var_5708, %var_5709, %1057, meta[relay.Constant][68] /* ty=Tensor[(1, 960), float64] */)
}

def @func_16831() -> Tensor[(13, 11, 9), int8] {
  %1059 = fn () -> Tensor[(13, 11, 9), int8] {
    %1058 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1058.0
  };
  %1059() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_17971(%var_17969: float32, %var_17970: Tensor[(960, 1), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) {
  @func_17967(%var_17969, %var_17970) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], float32, Tensor[(1260, 1), float32], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960, 1), float32]) */
}

def @func_22642() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  @func_22640() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_26577() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), uint8], Tensor[(462), int8]) {
  %1073 = fn () -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), uint8], Tensor[(462), int8]) {
    %1060 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %1061 = @func_18571() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1062 = @func_18772() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %1063 = cast(meta[relay.Constant][69] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
    %1064 = reshape(%1063, newshape=[462]) /* ty=Tensor[(462), int8] */;
    %1065 = @func_16131(%1064) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), uint8], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32], Tensor[(4, 1, 13), float64], Tensor[(1, 3, 3), float64], Tensor[(1440), int8]) */;
    %1066 = %1060.0;
    %1067 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
    %1068 = %1061.0;
    %1069 = @func_21743() /* ty=Tensor[(13, 11, 9), int8] */;
    %1070 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
    %1071 = %1062.0;
    %1072 = %1065.1;
    (%1066, %1067, %1068, %1069, %1070, %1071, %1072, meta[relay.Constant][69] /* ty=Tensor[(462), int8] */)
  };
  %1073() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), uint8], Tensor[(462), int8]) */
}

def @func_13058(%var_13056: Tensor[(576), float64]) -> (Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  @func_13055(%var_13056) /* ty=(Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) */
}

def @func_18969(%var_18967: Tensor[(4, 11, 13), float64]) -> Tensor[(4, 11, 13), bool] {
  @func_18966(%var_18967) /* ty=Tensor[(4, 11, 13), bool] */
}

def @func_15100(%var_15098: Tensor[(11, 16, 12), uint32], %var_15099: Tensor[(1274), float64]) -> (Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
  @func_15096(%var_15098, %var_15099) /* ty=(Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */
}

def @func_19580() -> (Tensor[(13, 11, 9), int8],) {
  %1074 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1075 = %1074.2;
  (%1075,)
}

def @func_5449(%var_5412: Tensor[(12, 15, 8), int8], %var_5413: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8], Tensor[(1, 3, 3), float64], float64) {
  %1076 = cast(%var_5413, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %1077 = shape_of(%var_5412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%var_5412, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1080 = cast(-9.25157f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1081 = reshape(%1080, newshape=[]) /* ty=float64 */;
  %1082 = @func_710(%1081) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1083 = multiply(%1078, %1079) /* ty=Tensor[(12, 15, 8), int8] */;
  %1084 = %1082.0;
  (%1083, %1084, -9.25157f64 /* ty=float64 */)
}

def @func_5723(%var_5720: Tensor[(5, 6, 1), float64], %var_5721: Tensor[(945), float64], %var_5722: float64) -> (Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) {
  @func_5718(%var_5720, %var_5721, %var_5722) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */
}

def @func_24597() -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
  %1085 = @func_19580() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1086 = @func_19761() /* ty=(Tensor[(52), float64],) */;
  %1087 = %1085.0;
  %1088 = %1086.0;
  (%1087, %1088)
}

def @func_3748(%var_3743: Tensor[(10, 2, 14), float64]) -> (Tensor[(10, 2, 14), float64],) {
  %1089 = cast(%var_3743, dtype="float64") /* ty=Tensor[(10, 2, 14), float64] */;
  %1090 = acos(%1089) /* ty=Tensor[(10, 2, 14), float64] */;
  (%1090,)
}

def @func_14485() -> (Tensor[(52), float64],) {
  %1093 = fn () -> (Tensor[(52), float64],) {
    %1091 = @func_13422() /* ty=(Tensor[(52), float64],) */;
    %1092 = %1091.0;
    (%1092,)
  };
  %1093() /* ty=(Tensor[(52), float64],) */
}

def @func_13086() -> (Tensor[(52), float64],) {
  %1094 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1095 = %1094.2;
  (%1095,)
}

def @func_15286(%var_15270: Tensor[(1260), float32], %var_15273: Tensor[(960), float64]) -> (Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  %1096 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %1097 = cast(-2.84832f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1098 = cast(%var_15270, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1099 = cast(meta[relay.Constant][70] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1100 = cast(meta[relay.Constant][71] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1101 = cast(%var_15273, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1102 = reshape(%1097, newshape=[]) /* ty=float32 */;
  %1103 = reshape(%1098, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %1104 = reshape(%1099, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1105 = reshape(%1100, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1106 = reshape(%1101, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1107 = @func_4313(%1102, %1103, %1104, %1105, %1106) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1108 = %1096.0;
  %1109 = %1107.3;
  (%1108, %1109, -2.84832f /* ty=float32 */, %var_15270, meta[relay.Constant][70] /* ty=Tensor[(180, 1), float32] */, meta[relay.Constant][71] /* ty=Tensor[(280), float64] */, %var_15273)
}

def @func_22701() -> Tensor[(13, 11, 9), int8] {
  @func_22699() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_19761() -> (Tensor[(52), float64],) {
  %1110 = @func_14631() /* ty=(Tensor[(52), float64],) */;
  %1111 = %1110.0;
  (%1111,)
}

def @func_22398() -> Tensor[(13, 11, 9), int8] {
  @func_22396() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_15347() -> Tensor[(13, 11, 9), int8] {
  @func_15345() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_12361(%var_12355: Tensor[(4, 12, 12), float64], %var_12356: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64],) {
  %1112 = cast(%var_12356, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %1113 = shape_of(%var_12355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%var_12355, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1116 = floor_mod(%1114, %1115) /* ty=Tensor[(4, 12, 12), float64] */;
  (%1116,)
}

def @func_19597() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %1117 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1118 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %1119 = %1117.1;
  (%1118, %1119)
}

def @func_23141(%var_23138: Tensor[(234), float32], %var_23139: Tensor[(4, 3, 13), float64], %var_23140: Tensor[(143, 4), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(2, 13, 9), float32], Tensor[(234), float32], Tensor[(4, 3, 13), float32], Tensor[(4, 11, 13), bool], Tensor[(143, 4), float64], Tensor[(84, 2), float64]) {
  @func_23136(%var_23138, %var_23139, %var_23140) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(2, 13, 9), float32], Tensor[(234), float32], Tensor[(4, 3, 13), float32], Tensor[(4, 11, 13), bool], Tensor[(143, 4), float64], Tensor[(84, 2), float64]) */
}

def @func_13691() -> (Tensor[(4, 1, 13), float64],) {
  %1122 = fn () -> (Tensor[(4, 1, 13), float64],) {
    %1120 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
    %1121 = %1120.1;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(4, 1, 13), float64],) */
}

def @func_23633() -> Tensor[(4, 1, 13), float32] {
  %1123 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1124 = cast(%1123, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  asinh(%1124) /* ty=Tensor[(4, 1, 13), float32] */
}

def @func_25795() -> (Tensor[(13, 11, 9), int8],) {
  %1126 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1125 = @func_21834() /* ty=Tensor[(13, 11, 9), int8] */;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_24537() -> (Tensor[(52), float64],) {
  @func_24535() /* ty=(Tensor[(52), float64],) */
}

def @func_24782(%var_24780: Tensor[(4, 9, 13), float64]) -> (Tensor[(4, 9, 13), bool],) {
  @func_24779(%var_24780) /* ty=(Tensor[(4, 9, 13), bool],) */
}

def @func_16859() -> (Tensor[(13, 11, 9), int8],) {
  %1127 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1128 = %1127.0;
  (%1128,)
}

def @func_26198(%var_26196: Tensor[(4, 9, 13), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 9, 13), float64], Tensor[(13, 11, 9), int8]) {
  @func_26195(%var_26196) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 9, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_5276(%var_5235: Tensor[(13, 3, 4), float32], %var_5241: uint32, %var_5244: Tensor[(180), float32], %var_5261: Tensor[(33, 7), float64]) -> (Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) {
  %1129 = cast(%var_5241, dtype="uint32") /* ty=uint32 */;
  %1130 = cast(meta[relay.Constant][72] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %1131 = cast(meta[relay.Constant][73] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1132 = cast(%var_5244, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1133 = reshape(%1129, newshape=[]) /* ty=uint32 */;
  %1134 = reshape(%1130, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %1135 = reshape(%1131, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1136 = reshape(%1132, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1137 = @func_5112(%1133, %1134, %1135, %1136) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %1138 = cast(%var_5261, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1139 = cast(%var_5261, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1140 = reshape(%1138, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1141 = reshape(%1139, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1142 = @func_4508(%1140, %1141) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %1143 = cast(%var_5235, dtype="float32") /* ty=Tensor[(13, 3, 4), float32] */;
  %1144 = asin(%1143) /* ty=Tensor[(13, 3, 4), float32] */;
  %1145 = cast(%var_5235, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%1144, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1149 = %1137.7;
  %1150 = %1142.0;
  %1151 = logical_xor(%1147, %1148) /* ty=Tensor[(13, 3, 4), int32] */;
  (%1149, %var_5241, meta[relay.Constant][72] /* ty=Tensor[(96), uint32] */, meta[relay.Constant][73] /* ty=Tensor[(960), bool] */, %var_5244, %1150, %var_5261, %1151)
}

def @func_15049() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */
}

def @func_26646() -> (Tensor[(13, 11, 9), int8],) {
  @func_26644() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15976(%var_15966: Tensor[(360), float32]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) {
  %1152 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %1153 = cast(%var_15966, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1154 = reshape(%1153, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float32] */;
  %1155 = @func_15440(%1154) /* ty=(Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1156 = %1152.0;
  %1157 = %1155.4;
  (%1156, %1157, %var_15966)
}

def @func_23959(%var_23953: uint32, %var_23954: Tensor[(2, 48), uint32], %var_23956: Tensor[(180, 1), float32]) -> (Tensor[(4, 1, 13), float64], Tensor[(231), float64], uint32, Tensor[(2, 48), uint32], Tensor[(960), bool], Tensor[(180, 1), float32]) {
  %1158 = cast(%var_23953, dtype="uint32") /* ty=uint32 */;
  %1159 = cast(%var_23954, dtype="uint32") /* ty=Tensor[(2, 48), uint32] */;
  %1160 = cast(meta[relay.Constant][74] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1161 = cast(%var_23956, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1162 = reshape(%1158, newshape=[]) /* ty=uint32 */;
  %1163 = reshape(%1159, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %1164 = reshape(%1160, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), bool] */;
  %1165 = reshape(%1161, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1166 = @func_5112(%1162, %1163, %1164, %1165) /* ty=(Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) */;
  %1167 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1168 = %1166.4;
  (%1167, %1168, %var_23953, %var_23954, meta[relay.Constant][74] /* ty=Tensor[(960), bool] */, %var_23956)
}

def @func_20988() -> Tensor[(52), float64] {
  %1170 = fn () -> Tensor[(52), float64] {
    %1169 = @func_17342() /* ty=(Tensor[(52), float64],) */;
    %1169.0
  };
  %1170() /* ty=Tensor[(52), float64] */
}

def @func_12908() -> (Tensor[(13, 11, 9), int8],) {
  @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_18653() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_18651() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_12656() -> (Tensor[(13, 11, 9), int8],) {
  %1178 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1171 = cast(meta[relay.Constant][75] /* ty=Tensor[(13, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
    %1172 = sqrt(%1171) /* ty=Tensor[(13, 11, 9), float64] */;
    %1173 = cast(%1172, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
    %1174 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(13, 11, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1175 = cast(meta[relay.Constant][75] /* ty=Tensor[(13, 11, 9), float64] */, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
    %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1177 = logical_xor(%1175, %1176) /* ty=Tensor[(13, 11, 9), int8] */;
    (%1177,)
  };
  %1178() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_21996() -> Tensor[(52), float64] {
  %1179 = fn () -> Tensor[(52), float64] {
    @func_20987() /* ty=Tensor[(52), float64] */
  };
  %1179() /* ty=Tensor[(52), float64] */
}

def @func_17409(%var_17407: Tensor[(11, 9, 13), int16], %var_17408: Tensor[(11, 9, 13), int16]) -> (Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) {
  @func_17405(%var_17407, %var_17408) /* ty=(Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) */
}

def @func_21462(%var_21456: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(10, 2, 14), float64], Tensor[(280), float64]) {
  %1180 = @func_20444() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1181 = cast(%var_21456, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1182 = reshape(%1181, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %1183 = @func_3748(%1182) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %1184 = %1180.0;
  %1185 = %1183.0;
  (%1184, %1185, %var_21456)
}

def @func_19453() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1186 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1187 = %1186.1;
  %1188 = @func_17632() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1187, %1188)
}

def @func_17014() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_19763() -> (Tensor[(52), float64],) {
  @func_19761() /* ty=(Tensor[(52), float64],) */
}

def @func_20544() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1194 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %1189 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %1190 = @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1191 = %1189.1;
    %1192 = @func_17907() /* ty=Tensor[(13, 11, 9), int8] */;
    %1193 = %1190.0;
    (%1191, %1192, %1193)
  };
  %1194() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_22640() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1195 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1196 = @func_20694() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) */;
  %1197 = %1195.1;
  %1198 = %1196.1;
  (%1197, %1198)
}

def @func_23917() -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) {
  %1207 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) {
    %1199 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1200 = cast(meta[relay.Constant][76] /* ty=Tensor[(9, 140), float32] */, dtype="float32") /* ty=Tensor[(9, 140), float32] */;
    %1201 = cast(meta[relay.Constant][77] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %1202 = reshape(%1200, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %1203 = reshape(%1201, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %1204 = @func_15286(%1202, %1203) /* ty=(Tensor[(52), float64], Tensor[(280), float64], float32, Tensor[(1260), float32], Tensor[(180, 1), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
    %1205 = %1199.0;
    %1206 = %1204.6;
    (%1205, %1206, meta[relay.Constant][76] /* ty=Tensor[(9, 140), float32] */, meta[relay.Constant][77] /* ty=Tensor[(960), float64] */)
  };
  %1207() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(960), float64], Tensor[(9, 140), float32], Tensor[(960), float64]) */
}

def @func_24161() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1208 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1209 = @func_17517() /* ty=Tensor[(4, 1, 13), float64] */;
  %1210 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %1211 = %1208.0;
  (%1209, %1210, %1211)
}

def @func_17720() -> Tensor[(13, 11, 9), int8] {
  %1212 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1212.0
}

def @func_17634() -> Tensor[(13, 11, 9), int8] {
  @func_17632() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_22611() -> (Tensor[(13, 11, 9), int8],) {
  %1215 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1213 = @func_20496() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1214 = %1213.0;
    (%1214,)
  };
  %1215() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_14632() -> (Tensor[(52), float64],) {
  %1218 = fn () -> (Tensor[(52), float64],) {
    %1216 = @func_13086() /* ty=(Tensor[(52), float64],) */;
    %1217 = %1216.0;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(52), float64],) */
}

def @func_23567(%var_23559: Tensor[(1274), float64]) -> (Tensor[(13, 11, 9), uint8], Tensor[(945), float64], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 1, 13), float64]) {
  %1219 = @func_18902() /* ty=(Tensor[(13, 11, 9), uint8],) */;
  %1220 = cast(meta[relay.Constant][78] /* ty=Tensor[(2112), uint32] */, dtype="uint32") /* ty=Tensor[(2112), uint32] */;
  %1221 = cast(%var_23559, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1222 = reshape(%1220, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), uint32] */;
  %1223 = reshape(%1221, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %1224 = @func_15096(%1222, %1223) /* ty=(Tensor[(11, 16, 12), bool], Tensor[(52), float64], Tensor[(13, 8, 4), uint64], Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */;
  %1225 = @func_16371() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1226 = %1219.0;
  %1227 = %1224.4;
  %1228 = %1225.0;
  (%1226, %1227, meta[relay.Constant][78] /* ty=Tensor[(2112), uint32] */, %var_23559, %1228)
}

def @func_17405(%var_17347: Tensor[(11, 9, 13), int16], %var_17348: Tensor[(11, 9, 13), int16]) -> (Tensor[(11, 9, 13), int16], Tensor[(4, 1, 13), float64]) {
  %1229 = cast(%var_17348, dtype="int16") /* ty=Tensor[(11, 9, 13), int16] */;
  %1230 = shape_of(%var_17347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1231 = cast(%var_17347, dtype="int16") /* ty=Tensor[(11, 9, 13), int16] */;
  %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1233 = @func_13690() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1234 = bitwise_or(%1231, %1232) /* ty=Tensor[(11, 9, 13), int16] */;
  %1235 = %1233.0;
  (%1234, %1235)
}

def @func_22374() -> Tensor[(13, 11, 9), int8] {
  %1237 = fn () -> Tensor[(13, 11, 9), int8] {
    %1236 = @func_17041() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1236.0
  };
  %1237() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_24535() -> (Tensor[(52), float64],) {
  %1238 = @func_17327() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */;
  %1239 = %1238.0;
  (%1239,)
}

def @func_26391() -> Tensor[(4, 1, 13), float64] {
  @func_26389() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_26389() -> Tensor[(4, 1, 13), float64] {
  @func_17517() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_24853() -> (Tensor[(13, 11, 9), int8],) {
  @func_24851() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_14952(%var_14884: Tensor[(91, 14), float64], %var_14941: Tensor[(280), float64], %var_14947: Tensor[(91, 14), int32]) -> (Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(1, 945), float64], Tensor[(10, 12, 1), float64], Tensor[(120), float64], Tensor[(4, ?, 13), uint32], Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(91, 14), bool]) {
  %1240 = cast(%var_14884, dtype="float64") /* ty=Tensor[(91, 14), float64] */;
  %1241 = cast(meta[relay.Constant][79] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1242 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 945), float64] */, dtype="float64") /* ty=Tensor[(1, 945), float64] */;
  %1243 = reshape(%1240, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float64] */;
  %1244 = reshape(%1241, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %1245 = reshape(%1242, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1246 = @func_7853(%1243, %1244, %1245) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */;
  %1247 = cast(meta[relay.Constant][81] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1248 = reshape(%1247, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), float64] */;
  %1249 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  %1250 = cast(%1249, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %1251 = reshape(%1250, newshape=[4, 1, 13]) /* ty=Tensor[(4, 1, 13), float64] */;
  %1252 = @func_8371(%1251) /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1253 = %1252.0;
  %1254 = cast(%1249, dtype="uint32") /* ty=Tensor[(4, 1, 13), uint32] */;
  %1255 = shape_of(%1253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1256 = cast(%1253, dtype="uint32") /* ty=Tensor[(4, 1, 13), uint32] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1258 = cast(%var_14941, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1259 = reshape(%1258, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %1260 = @func_3748(%1259) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %1261 = cast(%var_14884, dtype="float64") /* ty=Tensor[(91, 14), float64] */;
  %1262 = exp(%1261) /* ty=Tensor[(91, 14), float64] */;
  %1263 = cast(%var_14884, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %1264 = shape_of(%1262, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1265 = cast(%1262, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1267 = multiply(%1265, %1266) /* ty=Tensor[(91, 14), int32] */;
  %1268 = cast(%var_14947, dtype="bool") /* ty=Tensor[(91, 14), bool] */;
  %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1270 = cast(%1267, dtype="bool") /* ty=Tensor[(91, 14), bool] */;
  %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1272 = %1246.1;
  %1273 = @func_14268(%1248) /* ty=Tensor[(10, 12, 1), float64] */;
  %1274 = multiply(%1256, %1257) /* ty=Tensor[(4, ?, 13), uint32] */;
  %1275 = %1260.0;
  %1276 = logical_and(%1270, %1271) /* ty=Tensor[(91, 14), bool] */;
  (%1272, meta[relay.Constant][79] /* ty=Tensor[(30), float64] */, meta[relay.Constant][80] /* ty=Tensor[(1, 945), float64] */, %1273, meta[relay.Constant][81] /* ty=Tensor[(120), float64] */, %1274, %1275, %var_14941, %1276)
}

def @func_15993() -> (Tensor[(13, 11, 9), int8],) {
  @func_15991() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_16332() -> (Tensor[(13, 11, 9), int8],) {
  %1279 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1277 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1278 = %1277.0;
    (%1278,)
  };
  %1279() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_18270() -> (Tensor[(13, 11, 9), int8],) {
  @func_18268() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_18966(%var_18956: Tensor[(4, 11, 13), float64]) -> Tensor[(4, 11, 13), bool] {
  %1280 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %1281 = %1280.1;
  %1282 = cast(%1281, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1283 = cast(%var_18956, dtype="bool") /* ty=Tensor[(4, 11, 13), bool] */;
  not_equal(%1282, %1283) /* ty=Tensor[(4, 11, 13), bool] */
}

def @func_18308(%var_18307: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), bool], Tensor[(2, 15, 4), float64]) {
  %1291 = fn (%var_18285: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), bool], Tensor[(2, 15, 4), float64]) {
    %1284 = cast(meta[relay.Constant][82] /* ty=Tensor[(2, 15, 4), int64] */, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
    %1285 = shape_of(%var_18285, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1286 = cast(%var_18285, dtype="bool") /* ty=Tensor[(2, 15, 4), bool] */;
    %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1288 = cast(%var_18285, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
    %1289 = not_equal(%1286, %1287) /* ty=Tensor[(2, 15, 4), bool] */;
    %1290 = sin(%1288) /* ty=Tensor[(2, 15, 4), float64] */;
    (%1289, %1290)
  };
  %1291(%var_18307) /* ty=(Tensor[(2, 15, 4), bool], Tensor[(2, 15, 4), float64]) */
}

def @func_22285() -> Tensor[(13, 11, 9), int8] {
  %1292 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_12722() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %1292() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_18523() -> Tensor[(4, 1, 13), float64] {
  %1293 = fn () -> Tensor[(4, 1, 13), float64] {
    @func_13594() /* ty=Tensor[(4, 1, 13), float64] */
  };
  %1293() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_23737() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  %1294 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1295 = @func_18345() /* ty=Tensor[(4, 1, 13), float64] */;
  %1296 = %1294.0;
  (%1295, %1296)
}

def @func_17722() -> Tensor[(13, 11, 9), int8] {
  @func_17720() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_23837() -> Tensor[(13, 11, 9), int8] {
  %1297 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_20157() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %1297() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_11479(%var_11477: Tensor[(11, 11, 14), float32], %var_11478: Tensor[(462), int8]) -> (Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) {
  %1310 = fn (%var_11462: Tensor[(11, 11, 14), float32], %var_11472: Tensor[(462), int8]) -> (Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) {
    %1298 = cast(%var_11462, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
    %1299 = cast(%var_11472, dtype="int8") /* ty=Tensor[(462), int8] */;
    %1300 = cast(%var_11472, dtype="int8") /* ty=Tensor[(462), int8] */;
    %1301 = cast(meta[relay.Constant][83] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1302 = cast(meta[relay.Constant][84] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1303 = reshape(%1299, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
    %1304 = reshape(%1300, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
    %1305 = reshape(%1301, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
    %1306 = reshape(%1302, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %1307 = @func_6592(%1303, %1304, %1305, %1306) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
    %1308 = cosh(%1298) /* ty=Tensor[(11, 11, 14), float32] */;
    %1309 = %1307.6;
    (%1308, %1309, %var_11472, meta[relay.Constant][83] /* ty=Tensor[(30), float64] */, meta[relay.Constant][84] /* ty=Tensor[(156), float32] */)
  };
  %1310(%var_11477, %var_11478) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) */
}

def @func_20600(%var_20598: Tensor[(420), bool], %var_20599: Tensor[(1, 945), float64]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(1274), float64], Tensor[(1, 945), float64], Tensor[(13, 11, 9), int8]) {
  @func_20596(%var_20598, %var_20599) /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(420), bool], Tensor[(1274), float64], Tensor[(1, 945), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_22752() -> Tensor[(13, 11, 9), int8] {
  %1311 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1311.0
}

def @func_24599() -> (Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
  @func_24597() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(52), float64]) */
}

def @func_26263() -> Tensor[(13, 11, 9), int8] {
  %1312 = @func_24399() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1312.0
}

def @func_17328() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
  %1317 = fn () -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8]) {
    %1313 = @func_14631() /* ty=(Tensor[(52), float64],) */;
    %1314 = @func_17012() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %1315 = %1313.0;
    %1316 = %1314.0;
    (%1315, %1316)
  };
  %1317() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_15727() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */
}

def @func_20496() -> (Tensor[(13, 11, 9), int8],) {
  %1318 = @func_16938() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1319 = %1318.0;
  (%1319,)
}

def @func_13088() -> (Tensor[(52), float64],) {
  @func_13086() /* ty=(Tensor[(52), float64],) */
}

def @func_18572() -> (Tensor[(13, 11, 9), int8],) {
  %1322 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1320 = @func_18476() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
    %1321 = %1320.2;
    (%1321,)
  };
  %1322() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_14720(%var_14719: uint32) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) {
  %1343 = fn (%var_14713: uint32) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) {
    %1323 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1324 = cast(meta[relay.Constant][85] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %1325 = cast(meta[relay.Constant][85] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %1326 = reshape(%1324, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %1327 = reshape(%1325, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %1328 = @func_12361(%1326, %1327) /* ty=(Tensor[(4, 12, 12), float64],) */;
    %1329 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %1330 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1331 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1332 = cast(%var_14713, dtype="uint32") /* ty=uint32 */;
    %1333 = cast(meta[relay.Constant][86] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
    %1334 = reshape(%1332, newshape=[]) /* ty=uint32 */;
    %1335 = reshape(%1333, newshape=[231]) /* ty=Tensor[(231), float64] */;
    %1336 = @func_12952(%1334, %1335) /* ty=(Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) */;
    %1337 = %1323.0;
    %1338 = %1328.0;
    %1339 = %1329.1;
    %1340 = %1330.0;
    %1341 = %1331.0;
    %1342 = %1336.0;
    (%1337, %1338, meta[relay.Constant][85] /* ty=Tensor[(288, 2), float64] */, %1339, %1340, %1341, %1342, %var_14713, meta[relay.Constant][86] /* ty=Tensor[(231), float64] */)
  };
  %1343(%var_14719) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 12, 12), float64], Tensor[(288, 2), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), float32], uint32, Tensor[(231), float64]) */
}

def @func_23297() -> (Tensor[(4, 1, 13), float64],) {
  %1344 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  (%1344,)
}

def @func_17012() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %1345 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1346 = %1345.0;
  %1347 = @func_13594() /* ty=Tensor[(4, 1, 13), float64] */;
  (%1346, %1347)
}

def @func_20695() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) {
  %1356 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) {
    %1348 = @func_20075() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1349 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1350 = @func_13086() /* ty=(Tensor[(52), float64],) */;
    %1351 = @func_20629() /* ty=(Tensor[(4, 10, 13), bool], Tensor[(13, 11, 9), int8]) */;
    %1352 = %1348.0;
    %1353 = %1349.0;
    %1354 = %1350.0;
    %1355 = %1351.0;
    (%1352, %1353, %1354, %1355)
  };
  %1356() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64], Tensor[(4, 10, 13), bool]) */
}

def @func_16556(%var_16554: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool], Tensor[(13, 11, 9), int8]) {
  @func_16553(%var_16554) /* ty=(Tensor[(4, 4, 13), bool], Tensor[(13, 11, 9), int8]) */
}

def @func_24779(%var_24773: Tensor[(4, 9, 13), float64]) -> (Tensor[(4, 9, 13), bool],) {
  %1357 = @func_20394() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
  %1358 = %1357.0;
  %1359 = cast(%1358, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1360 = cast(%var_24773, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %1361 = equal(%1359, %1360) /* ty=Tensor[(4, 9, 13), bool] */;
  (%1361,)
}

def @func_12955(%var_12953: uint32, %var_12954: Tensor[(231), float64]) -> (Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) {
  %1378 = fn (%var_12942: uint32, %var_12944: Tensor[(231), float64]) -> (Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) {
    %1362 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
    %1363 = cast(meta[relay.Constant][87] /* ty=Tensor[(13, 11, 9), int8] */, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
    %1364 = shape_of(%1362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1365 = cast(%1362, dtype="float32") /* ty=Tensor[(13, 11, 9), float32] */;
    %1366 = dyn.reshape(%1363, %1364, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1367 = cast(meta[relay.Constant][88] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1368 = cast(%var_12942, dtype="uint32") /* ty=uint32 */;
    %1369 = cast(meta[relay.Constant][89] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %1370 = cast(%var_12944, dtype="float64") /* ty=Tensor[(231), float64] */;
    %1371 = reshape(%1367, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %1372 = reshape(%1368, newshape=[]) /* ty=uint32 */;
    %1373 = reshape(%1369, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %1374 = reshape(%1370, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
    %1375 = @func_5276(%1371, %1372, %1373, %1374) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
    %1376 = maximum(%1365, %1366) /* ty=Tensor[(13, 11, 9), float32] */;
    %1377 = %1375.0;
    (%1376, %1377, meta[relay.Constant][88] /* ty=Tensor[(156), float32] */, %var_12942, meta[relay.Constant][89] /* ty=Tensor[(180, 1), float32] */, %var_12944)
  };
  %1378(%var_12953, %var_12954) /* ty=(Tensor[(13, 11, 9), float32], Tensor[(180), float32], Tensor[(156), float32], uint32, Tensor[(180, 1), float32], Tensor[(231), float64]) */
}

def @func_17740() -> (Tensor[(13, 11, 9), uint8],) {
  %1381 = fn () -> (Tensor[(13, 11, 9), uint8],) {
    %1379 = @func_15047() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */;
    %1380 = %1379.0;
    (%1380,)
  };
  %1381() /* ty=(Tensor[(13, 11, 9), uint8],) */
}

def @func_16723(%var_16721: Tensor[(945), float64]) -> (Tensor[(52), float64], Tensor[(1, 960), float64], Tensor[(5, 6), float64], Tensor[(945), float64], float64) {
  @func_16720(%var_16721) /* ty=(Tensor[(52), float64], Tensor[(1, 960), float64], Tensor[(5, 6), float64], Tensor[(945), float64], float64) */
}

def @func_21465(%var_21463: Tensor[(280), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(10, 2, 14), float64], Tensor[(280), float64]) {
  @func_21462(%var_21463) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(10, 2, 14), float64], Tensor[(280), float64]) */
}

def @func_14523(%var_14521: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), float32],) {
  @func_14520(%var_14521) /* ty=(Tensor[(2, 13, 9), float32],) */
}

def @func_13423() -> (Tensor[(52), float64],) {
  %1384 = fn () -> (Tensor[(52), float64],) {
    %1382 = @func_13086() /* ty=(Tensor[(52), float64],) */;
    %1383 = %1382.0;
    (%1383,)
  };
  %1384() /* ty=(Tensor[(52), float64],) */
}

def @func_21950(%var_21935: float32) -> Tensor[(16, 11, 14), float32] {
  %1385 = cast(%var_21935, dtype="float32") /* ty=float32 */;
  %1386 = cast(meta[relay.Constant][90] /* ty=Tensor[(16, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  add(%1385, %1386) /* ty=Tensor[(16, 11, 14), float32] */
}

def @func_12365(%var_12363: Tensor[(4, 12, 12), float64], %var_12364: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64],) {
  @func_12361(%var_12363, %var_12364) /* ty=(Tensor[(4, 12, 12), float64],) */
}

def @func_4320(%var_4315: float32, %var_4316: Tensor[(12, 7, 15), float32], %var_4317: Tensor[(180), float32], %var_4318: Tensor[(280), float64], %var_4319: Tensor[(960), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) {
  @func_4313(%var_4315, %var_4316, %var_4317, %var_4318, %var_4319) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */
}

def @func_12707() -> (Tensor[(13, 11, 9), int8],) {
  %1389 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1387 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1388 = %1387.0;
    (%1388,)
  };
  %1389() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_16520(%var_16496: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) {
  %1390 = cast(%var_16496, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %1391 = cast(-9.10747f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1392 = reshape(%1391, newshape=[]) /* ty=float64 */;
  %1393 = @func_710(%1392) /* ty=(Tensor[(1, 3, 3), float64],) */;
  %1394 = asin(%1390) /* ty=Tensor[(7, 4, 6), float64] */;
  %1395 = %1393.0;
  %1396 = @func_12722() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1394, %1395, -9.10747f64 /* ty=float64 */, %1396)
}

def @func_15649() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), bool]) {
  @func_15647() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), bool]) */
}

def @func_25259() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  @func_25257() /* ty=(Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) */
}

def @func_25857() -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %1397 = @func_13584() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1398 = %1397.0;
  %1399 = @func_18522() /* ty=Tensor[(4, 1, 13), float64] */;
  (%1398, %1399)
}

def @func_15345() -> Tensor[(13, 11, 9), int8] {
  %1400 = @func_12655() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1400.0
}

def @func_18582() -> Tensor[(13, 11, 9), int8] {
  %1401 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1401.0
}

def @func_23136(%var_23082: Tensor[(234), float32], %var_23092: Tensor[(4, 3, 13), float64], %var_23114: Tensor[(143, 4), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(2, 13, 9), float32], Tensor[(234), float32], Tensor[(4, 3, 13), float32], Tensor[(4, 11, 13), bool], Tensor[(143, 4), float64], Tensor[(84, 2), float64]) {
  %1402 = @func_22610() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1403 = cast(%var_23082, dtype="float32") /* ty=Tensor[(234), float32] */;
  %1404 = reshape(%1403, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %1405 = @func_14520(%1404) /* ty=(Tensor[(2, 13, 9), float32],) */;
  %1406 = @func_19824() /* ty=Tensor[(4, 1, 13), float64] */;
  %1407 = cast(%1406, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  %1408 = cast(%var_23092, dtype="float32") /* ty=Tensor[(4, 3, 13), float32] */;
  %1409 = cast(%var_23114, dtype="float64") /* ty=Tensor[(143, 4), float64] */;
  %1410 = cast(meta[relay.Constant][91] /* ty=Tensor[(84, 2), float64] */, dtype="float64") /* ty=Tensor[(84, 2), float64] */;
  %1411 = reshape(%1409, newshape=[4, 11, 13]) /* ty=Tensor[(4, 11, 13), float64] */;
  %1412 = reshape(%1410, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1413 = @func_19322(%1411, %1412) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */;
  %1414 = %1402.0;
  %1415 = %1405.0;
  %1416 = floor_mod(%1407, %1408) /* ty=Tensor[(4, 3, 13), float32] */;
  %1417 = %1413.2;
  (%1414, %1415, %var_23082, %1416, %1417, %var_23114, meta[relay.Constant][91] /* ty=Tensor[(84, 2), float64] */)
}

def @func_18736() -> Tensor[(13, 11, 9), int8] {
  @func_18734() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_15979(%var_15977: Tensor[(360), float32]) -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) {
  @func_15976(%var_15977) /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(360), float32]) */
}

def @func_11737(%var_11708: Tensor[(13, 14, 7), float64], %var_11726: Tensor[(156), float32], %var_11735: Tensor[(30), float64]) -> (Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) {
  %1418 = cast(%var_11708, dtype="float64") /* ty=Tensor[(13, 14, 7), float64] */;
  %1419 = cos(%1418) /* ty=Tensor[(13, 14, 7), float64] */;
  %1420 = cast(%1419, dtype="float64") /* ty=Tensor[(13, 14, 7), float64] */;
  %1421 = cast(%var_11726, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1422 = cast(meta[relay.Constant][92] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1423 = cast(meta[relay.Constant][93] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1424 = cast(meta[relay.Constant][94] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1425 = reshape(%1421, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %1426 = reshape(%1422, newshape=[]) /* ty=uint32 */;
  %1427 = reshape(%1423, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1428 = reshape(%1424, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %1429 = @func_5276(%1425, %1426, %1427, %1428) /* ty=(Tensor[(180), float32], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32], Tensor[(7, 3, 11), float64], Tensor[(33, 7), float64], Tensor[(13, 3, 4), int32]) */;
  %1430 = cast(meta[relay.Constant][95] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %1431 = cast(meta[relay.Constant][95] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %1432 = cast(%var_11735, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1433 = cast(%var_11726, dtype="float32") /* ty=Tensor[(156), float32] */;
  %1434 = reshape(%1430, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %1435 = reshape(%1431, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), int8] */;
  %1436 = reshape(%1432, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %1437 = reshape(%1433, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1438 = @func_6592(%1434, %1435, %1436, %1437) /* ty=(Tensor[(6, 7, 11), int8], Tensor[(5, 6, ?), float32], Tensor[(10, 3), float64], Tensor[(945), float64], float64, Tensor[(7, 3, 11), float64], Tensor[(156), float32], Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(10, 2, 14), float64], Tensor[(5, 56), float64]) */;
  %1439 = sqrt(%1420) /* ty=Tensor[(13, 14, 7), float64] */;
  %1440 = %1429.2;
  %1441 = %1438.11;
  (%1439, %1440, %var_11726, meta[relay.Constant][92] /* ty=uint32 */, meta[relay.Constant][93] /* ty=Tensor[(180), float32] */, meta[relay.Constant][94] /* ty=Tensor[(33, 7), float64] */, %1441, meta[relay.Constant][95] /* ty=Tensor[(462), int8] */, %var_11735)
}

def @func_14268(%var_14260: Tensor[(10, 12, 1), float64]) -> Tensor[(10, 12, 1), float64] {
  %1442 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
  %1443 = %1442.5;
  %1444 = cast(%1443, dtype="float64") /* ty=float64 */;
  %1445 = cast(%var_14260, dtype="float64") /* ty=Tensor[(10, 12, 1), float64] */;
  floor_mod(%1444, %1445) /* ty=Tensor[(10, 12, 1), float64] */
}

def @func_19672() -> Tensor[(13, 11, 9), int8] {
  %1447 = fn () -> Tensor[(13, 11, 9), int8] {
    %1446 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1446.0
  };
  %1447() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_20193() -> (Tensor[(13, 11, 9), int8],) {
  %1449 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1448 = @func_15345() /* ty=Tensor[(13, 11, 9), int8] */;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_15725() -> (Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) {
  %1450 = @func_14815() /* ty=(Tensor[(52), float64],) */;
  %1451 = @func_13864() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1452 = @func_14006() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1453 = %1450.0;
  %1454 = %1451.0;
  %1455 = %1452.1;
  (%1453, %1454, %1455)
}

def @func_1689(%var_1687: Tensor[(16, 6, 10), float64], %var_1688: float64) -> (Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) {
  %1480 = fn (%var_1658: Tensor[(16, 6, 10), float64], %var_1667: float64) -> (Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) {
    %1456 = cast(%var_1658, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
    %1457 = cast(meta[relay.Constant][96] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
    %1458 = cast(%var_1667, dtype="float64") /* ty=float64 */;
    %1459 = reshape(%1457, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %1460 = reshape(%1458, newshape=[]) /* ty=float64 */;
    %1461 = @func_897(%1459, %1460) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %1462 = cast(meta[relay.Constant][96] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
    %1463 = cast(%var_1667, dtype="float64") /* ty=float64 */;
    %1464 = reshape(%1462, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %1465 = reshape(%1463, newshape=[]) /* ty=float64 */;
    %1466 = @func_897(%1464, %1465) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %1467 = cast(%var_1667, dtype="float64") /* ty=float64 */;
    %1468 = reshape(%1467, newshape=[]) /* ty=float64 */;
    %1469 = @func_710(%1468) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %1470 = cast(meta[relay.Constant][96] /* ty=Tensor[(5, 189), float64] */, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
    %1471 = cast(%var_1667, dtype="float64") /* ty=float64 */;
    %1472 = reshape(%1470, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %1473 = reshape(%1471, newshape=[]) /* ty=float64 */;
    %1474 = @func_897(%1472, %1473) /* ty=(Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(15, 7, 9), int8]) */;
    %1475 = rsqrt(%1456) /* ty=Tensor[(16, 6, 10), float64] */;
    %1476 = %1461.0;
    %1477 = %1466.1;
    %1478 = %1469.0;
    %1479 = %1474.1;
    (%1475, %1476, meta[relay.Constant][96] /* ty=Tensor[(5, 189), float64] */, %var_1667, %1477, %1478, %1479)
  };
  %1480(%var_1687, %var_1688) /* ty=(Tensor[(16, 6, 10), float64], Tensor[(1, 3, 3), float64], Tensor[(5, 189), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64], Tensor[(1, 3, 3), float64]) */
}

def @func_23431() -> (Tensor[(13, 11, 9), float32],) {
  @func_23429() /* ty=(Tensor[(13, 11, 9), float32],) */
}

def @func_26431(%var_26430: Tensor[(10, 10, 12), float64]) -> (Tensor[(10, 10, 12), float64], Tensor[(3, 7, 16), int8], Tensor[(168, 2), int8], Tensor[(1274), float64], Tensor[(16, 26), uint64], Tensor[(15246), float32], Tensor[(13, 11, 9), int8]) {
  %1496 = fn (%var_26401: Tensor[(10, 10, 12), float64]) -> (Tensor[(10, 10, 12), float64], Tensor[(3, 7, 16), int8], Tensor[(168, 2), int8], Tensor[(1274), float64], Tensor[(16, 26), uint64], Tensor[(15246), float32], Tensor[(13, 11, 9), int8]) {
    %1481 = cast(%var_26401, dtype="float64") /* ty=Tensor[(10, 10, 12), float64] */;
    %1482 = cast(meta[relay.Constant][97] /* ty=Tensor[(168, 2), int8] */, dtype="int8") /* ty=Tensor[(168, 2), int8] */;
    %1483 = cast(meta[relay.Constant][98] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %1484 = cast(meta[relay.Constant][99] /* ty=Tensor[(16, 26), uint64] */, dtype="uint64") /* ty=Tensor[(16, 26), uint64] */;
    %1485 = cast(meta[relay.Constant][100] /* ty=Tensor[(15246), float32] */, dtype="float32") /* ty=Tensor[(15246), float32] */;
    %1486 = cast(meta[relay.Constant][99] /* ty=Tensor[(16, 26), uint64] */, dtype="float32") /* ty=Tensor[(16, 26), float32] */;
    %1487 = reshape(%1482, newshape=[336]) /* ty=Tensor[(336), int8] */;
    %1488 = reshape(%1483, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %1489 = reshape(%1484, newshape=[4, 104]) /* ty=Tensor[(4, 104), uint64] */;
    %1490 = reshape(%1485, newshape=[9, 1694]) /* ty=Tensor[(9, 1694), float32] */;
    %1491 = reshape(%1486, newshape=[4, 104]) /* ty=Tensor[(4, 104), float32] */;
    %1492 = @func_17280(%1487, %1488, %1489, %1490, %1491) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) */;
    %1493 = sin(%1481) /* ty=Tensor[(10, 10, 12), float64] */;
    %1494 = %1492.4;
    %1495 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
    (%1493, %1494, meta[relay.Constant][97] /* ty=Tensor[(168, 2), int8] */, meta[relay.Constant][98] /* ty=Tensor[(1274), float64] */, meta[relay.Constant][99] /* ty=Tensor[(16, 26), uint64] */, meta[relay.Constant][100] /* ty=Tensor[(15246), float32] */, %1495)
  };
  %1496(%var_26430) /* ty=(Tensor[(10, 10, 12), float64], Tensor[(3, 7, 16), int8], Tensor[(168, 2), int8], Tensor[(1274), float64], Tensor[(16, 26), uint64], Tensor[(15246), float32], Tensor[(13, 11, 9), int8]) */
}

def @main(%var_27074: Tensor[(168), float64], %var_27076: Tensor[(4, 11, 13), bool]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(572), float64], Tensor[(168), float64], Tensor[(4, 11, 13), float64]) {
  %1497 = @func_25197() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1498 = cast(meta[relay.Constant][101] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %1499 = cast(%var_27074, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1500 = reshape(%1498, newshape=[4, 11, 13]) /* ty=Tensor[(4, 11, 13), float64] */;
  %1501 = reshape(%1499, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1502 = @func_19325(%1500, %1501) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(4, 11, 13), bool], Tensor[(13, 11, 9), int8], Tensor[(168), float64]) */;
  %1503 = %1502.2;
  %1504 = cast(%var_27076, dtype="float64") /* ty=Tensor[(4, 11, 13), float64] */;
  %1505 = shape_of(%1503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1506 = cast(%1503, dtype="float64") /* ty=Tensor[(4, 11, 13), float64] */;
  %1507 = dyn.reshape(%1504, %1505, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1508 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %1509 = %1497.0;
  %1510 = power(%1506, %1507) /* ty=Tensor[(4, 11, 13), float64] */;
  (%1508, %1509, meta[relay.Constant][101] /* ty=Tensor[(572), float64] */, %var_27074, %1510)
}

def @func_18434(%var_18432: Tensor[(420), bool]) -> (Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) {
  @func_18431(%var_18432) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) */
}

def @func_21221(%var_21204: Tensor[(168), float64]) -> (Tensor[(13, 11, 9), int8], Tensor[(1, 3, 3), float64], Tensor[(168), float64]) {
  %1511 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1512 = cast(%var_21204, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1513 = reshape(%1512, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %1514 = @func_16520(%1513) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8]) */;
  %1515 = %1511.0;
  %1516 = %1514.1;
  (%1515, %1516, %var_21204)
}

def @func_22557(%var_22556: Tensor[(360), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(360), float32], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1530 = fn (%var_22499: Tensor[(360), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(360), float32], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %1517 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1518 = cast(%var_22499, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1519 = reshape(%1518, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
    %1520 = @func_17879(%1519) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(36, 10), float32], Tensor[(52), float32], Tensor[(13, 11, 9), int8]) */;
    %1521 = @func_19453() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
    %1522 = @func_13522() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), float32], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64) */;
    %1523 = @func_16859() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1524 = %1517.0;
    %1525 = %1520.3;
    %1526 = %1521.0;
    %1527 = %1522.0;
    %1528 = %1523.0;
    %1529 = @func_17632() /* ty=Tensor[(13, 11, 9), int8] */;
    (%1524, %1525, %var_22499, %1526, %1527, %1528, %1529)
  };
  %1530(%var_22556) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(360), float32], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_17609() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
  %1539 = fn () -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64]) {
    %1531 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1532 = @func_15725() /* ty=(Tensor[(52), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
    %1533 = @func_16331() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1534 = @func_14815() /* ty=(Tensor[(52), float64],) */;
    %1535 = %1531.0;
    %1536 = %1532.1;
    %1537 = %1533.0;
    %1538 = %1534.0;
    (%1535, %1536, %1537, %1538)
  };
  %1539() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(52), float64]) */
}

def @func_22317(%var_22312: Tensor[(14, 1, 1), float64]) -> (Tensor[(14, 1, 1), float64],) {
  %1540 = cast(%var_22312, dtype="float64") /* ty=Tensor[(14, 1, 1), float64] */;
  %1541 = asin(%1540) /* ty=Tensor[(14, 1, 1), float64] */;
  (%1541,)
}

def @func_17581(%var_17579: Tensor[(1, 3, 3), float64]) -> (Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) {
  @func_17578(%var_17579) /* ty=(Tensor[(?, 3, 3), bool], Tensor[(1, 3, 3), float32]) */
}

def @func_18851(%var_18849: Tensor[(4, 104), uint64], %var_18850: Tensor[(945), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], float64, Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
  %1558 = fn (%var_18842: Tensor[(4, 104), uint64], %var_18843: Tensor[(945), float64]) -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], float64, Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) {
    %1542 = @func_14755() /* ty=(Tensor[(4, 1, 13), float64],) */;
    %1543 = %1542.0;
    %1544 = cast(%1543, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %1545 = @func_12831() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1546 = cast(%var_18842, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
    %1547 = cast(%var_18842, dtype="uint64") /* ty=Tensor[(4, 104), uint64] */;
    %1548 = cast(%var_18843, dtype="float64") /* ty=Tensor[(945), float64] */;
    %1549 = cast(meta[relay.Constant][102] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %1550 = reshape(%1546, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
    %1551 = reshape(%1547, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), uint64] */;
    %1552 = reshape(%1548, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %1553 = reshape(%1549, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %1554 = @func_10913(%1550, %1551, %1552, %1553) /* ty=(Tensor[(13, 8, 4), uint64], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, float64, Tensor[(1274), float64], Tensor[(30, 1), float64]) */;
    %1555 = log(%1544) /* ty=Tensor[(4, 1, 13), float64] */;
    %1556 = %1545.0;
    %1557 = %1554.3;
    (%1555, %1556, %1557, %var_18842, %var_18843, meta[relay.Constant][102] /* ty=Tensor[(1274), float64] */)
  };
  %1558(%var_18849, %var_18850) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], float64, Tensor[(4, 104), uint64], Tensor[(945), float64], Tensor[(1274), float64]) */
}

def @func_24265() -> (Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  @func_24263() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) */
}

def @func_25050() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(660), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) {
  %1559 = @func_23348() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1560 = cast(meta[relay.Constant][103] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1561 = reshape(%1560, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1562 = @func_13844(%1561) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 11, 15), float64], Tensor[(660), float64], Tensor[(39, 4), float32]) */;
  %1563 = cast(meta[relay.Constant][104] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1564 = reshape(%1563, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1565 = @func_13055(%1564) /* ty=(Tensor[(52), float64], Tensor[(4, 12, 12), float64], Tensor[(576), float64]) */;
  %1566 = %1559.0;
  %1567 = %1562.1;
  %1568 = %1565.1;
  (%1566, %1567, meta[relay.Constant][103] /* ty=Tensor[(660), float64] */, %1568, meta[relay.Constant][104] /* ty=Tensor[(576), float64] */)
}

def @func_21693() -> (Tensor[(13, 11, 9), int8], Tensor[(6, 10, 13), float32], Tensor[(96), uint32], Tensor[(1274), float64], Tensor[(39, 4), float32], Tensor[(5, 6), float64], Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  @func_21691() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(6, 10, 13), float32], Tensor[(96), uint32], Tensor[(1274), float64], Tensor[(39, 4), float32], Tensor[(5, 6), float64], Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) */
}

def @func_25407(%var_25399: Tensor[(4, 5, 13), float64]) -> Tensor[(4, 5, 13), int32] {
  %1569 = @func_23297() /* ty=(Tensor[(4, 1, 13), float64],) */;
  %1570 = %1569.0;
  %1571 = cast(%1570, dtype="int32") /* ty=Tensor[(4, 1, 13), int32] */;
  %1572 = cast(%var_25399, dtype="int32") /* ty=Tensor[(4, 5, 13), int32] */;
  left_shift(%1571, %1572) /* ty=Tensor[(4, 5, 13), int32] */
}

def @func_21276() -> (Tensor[(13, 11, 9), float32], Tensor[(13, 11, 9), int8]) {
  %1573 = @func_15472() /* ty=Tensor[(13, 11, 9), float32] */;
  %1574 = @func_18582() /* ty=Tensor[(13, 11, 9), int8] */;
  (%1573, %1574)
}

def @func_17632() -> Tensor[(13, 11, 9), int8] {
  %1575 = @func_12906() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1575.0
}

def @func_20816() -> Tensor[(13, 11, 9), int8] {
  %1576 = @func_17776() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1576.0
}

def @func_24103() -> (Tensor[(13, 11, 9), int8],) {
  %1579 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1577 = @func_13924() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1578 = %1577.0;
    (%1578,)
  };
  %1579() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_7599(%var_7597: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  @func_7596(%var_7597) /* ty=(Tensor[(9, 8, 6), float64],) */
}

def @func_17041() -> (Tensor[(13, 11, 9), int8],) {
  %1580 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1581 = %1580.0;
  (%1581,)
}

def @func_17287(%var_17282: Tensor[(336), int8], %var_17283: Tensor[(1274), float64], %var_17284: Tensor[(4, 104), uint64], %var_17285: Tensor[(9, 1694), float32], %var_17286: Tensor[(4, 104), float32]) -> (Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) {
  @func_17280(%var_17282, %var_17283, %var_17284, %var_17285, %var_17286) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(11, 11, 14), float32], Tensor[(462), int8], Tensor[(3, 7, 16), int8], Tensor[(336), int8], Tensor[(2112), uint32], Tensor[(1274), float64], Tensor[(4, 104), float64], Tensor[(13, 11, 9), int8], Tensor[(4, 104), bool], Tensor[(9, 1694), uint16], Tensor[(4, 104), uint32], Tensor[(4, 104), bool]) */
}

def @func_25482() -> Tensor[(13, 11, 9), int8] {
  %1582 = fn () -> Tensor[(13, 11, 9), int8] {
    @func_21931() /* ty=Tensor[(13, 11, 9), int8] */
  };
  %1582() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_18268() -> (Tensor[(13, 11, 9), int8],) {
  %1583 = @func_16426() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1584 = %1583.0;
  (%1584,)
}

def @func_12724() -> Tensor[(13, 11, 9), int8] {
  @func_12722() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_17776() -> (Tensor[(13, 11, 9), int8],) {
  %1585 = @func_12706() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1586 = %1585.0;
  (%1586,)
}

def @func_27049() -> (Tensor[(7, 1, 4), float64], Tensor[(4, ?, 13), bool]) {
  @func_27047() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(4, ?, 13), bool]) */
}

def @func_27047() -> (Tensor[(7, 1, 4), float64], Tensor[(4, ?, 13), bool]) {
  %1587 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
  %1588 = @func_26389() /* ty=Tensor[(4, 1, 13), float64] */;
  %1589 = @func_18345() /* ty=Tensor[(4, 1, 13), float64] */;
  %1590 = cast(%1589, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1591 = shape_of(%1588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1592 = cast(%1588, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1593 = dyn.reshape(%1590, %1591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1594 = %1587.0;
  %1595 = not_equal(%1592, %1593) /* ty=Tensor[(4, ?, 13), bool] */;
  (%1594, %1595)
}

def @func_18431(%var_18422: Tensor[(420), bool]) -> (Tensor[(13, 11, 9), int8], Tensor[(14, 6, 5), bool], Tensor[(420), bool], Tensor[(960), bool]) {
  %1596 = cast(%var_18422, dtype="bool") /* ty=Tensor[(420), bool] */;
  %1597 = cast(%var_18422, dtype="bool") /* ty=Tensor[(420), bool] */;
  %1598 = cast(meta[relay.Constant][105] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %1599 = reshape(%1596, newshape=[14, 6, 5]) /* ty=Tensor[(14, 6, 5), bool] */;
  %1600 = reshape(%1597, newshape=[14, 6, 5]) /* ty=Tensor[(14, 6, 5), bool] */;
  %1601 = reshape(%1598, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %1602 = @func_13178(%1599, %1600, %1601) /* ty=(Tensor[(14, 6, 5), bool], Tensor[(7, 3, 11), uint16], uint32, Tensor[(96), uint32], Tensor[(960), bool], Tensor[(180), float32]) */;
  %1603 = @func_16830() /* ty=Tensor[(13, 11, 9), int8] */;
  %1604 = %1602.0;
  (%1603, %1604, %var_18422, meta[relay.Constant][105] /* ty=Tensor[(960), bool] */)
}

def @func_14612(%var_14560: Tensor[(13, 11, 9), int8]) -> Tensor[(13, 11, 9), bool] {
  %1605 = @func_13120() /* ty=Tensor[(13, 11, 9), int8] */;
  %1606 = cast(%var_14560, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
  %1607 = shape_of(%1605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1608 = cast(%1605, dtype="bool") /* ty=Tensor[(13, 11, 9), bool] */;
  %1609 = dyn.reshape(%1606, %1607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1608, %1609) /* ty=Tensor[(13, 11, 9), bool] */
}

def @func_7857(%var_7854: Tensor[(14, 13, 7), float64], %var_7855: Tensor[(30), float64], %var_7856: Tensor[(945), float64]) -> (Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) {
  %1620 = fn (%var_7843: Tensor[(14, 13, 7), float64], %var_7847: Tensor[(30), float64], %var_7848: Tensor[(945), float64]) -> (Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) {
    %1610 = cast(%var_7843, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
    %1611 = cast(%var_7847, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1612 = cast(%var_7848, dtype="float64") /* ty=Tensor[(945), float64] */;
    %1613 = cast(-6.87177f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1614 = reshape(%1611, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float64] */;
    %1615 = reshape(%1612, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %1616 = reshape(%1613, newshape=[]) /* ty=float64 */;
    %1617 = @func_5718(%1614, %1615, %1616) /* ty=(Tensor[(5, 6, ?), float32], Tensor[(5, 6, ?), bool], Tensor[(1, 3, 3), float64], Tensor[(945), float64], float64, Tensor[(1, 3, 3), float64], Tensor[(1, 960), float64]) */;
    %1618 = rsqrt(%1610) /* ty=Tensor[(14, 13, 7), float64] */;
    %1619 = %1617.2;
    (%1618, %1619, %var_7847, %var_7848, -6.87177f64 /* ty=float64 */)
  };
  %1620(%var_7854, %var_7855, %var_7856) /* ty=(Tensor[(14, 13, 7), float64], Tensor[(1, 3, 3), float64], Tensor[(30), float64], Tensor[(945), float64], float64) */
}

def @func_5112(%var_5056: uint32, %var_5057: Tensor[(16, 1, 6), uint32], %var_5066: Tensor[(16, 10, 6), bool], %var_5079: Tensor[(180), float32]) -> (Tensor[(10, 2, 14), float64], Tensor[(280), float64], Tensor[(16, 10, 6), bool], Tensor[(7, 3, 11), uint16], Tensor[(231), float64], Tensor[(960), float64], Tensor[(1260), float32], Tensor[(180), float32]) {
  %1621 = cast(meta[relay.Constant][106] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1622 = reshape(%1621, newshape=[10, 2, 14]) /* ty=Tensor[(10, 2, 14), float64] */;
  %1623 = @func_3748(%1622) /* ty=(Tensor[(10, 2, 14), float64],) */;
  %1624 = cast(%var_5056, dtype="bool") /* ty=bool */;
  %1625 = cast(%var_5057, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %1626 = less(%1624, %1625) /* ty=Tensor[(16, 1, 6), bool] */;
  %1627 = cast(%1626, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %1628 = cast(%var_5066, dtype="bool") /* ty=Tensor[(16, 10, 6), bool] */;
  %1629 = cast(meta[relay.Constant][107] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %1630 = cast(meta[relay.Constant][107] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %1631 = reshape(%1629, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1632 = reshape(%1630, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1633 = @func_4508(%1631, %1632) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), uint16]) */;
  %1634 = cast(%var_5056, dtype="float32") /* ty=float32 */;
  %1635 = cast(meta[relay.Constant][108] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1636 = cast(%var_5079, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1637 = %1623.0;
  %1638 = cast(%1637, dtype="float64") /* ty=Tensor[(10, 2, 14), float64] */;
  %1639 = not_equal(%1627, %1628) /* ty=Tensor[(16, 10, 6), bool] */;
  %1640 = cast(%1639, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %1641 = reshape(%1634, newshape=[]) /* ty=float32 */;
  %1642 = reshape(%1635, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float32] */;
  %1643 = reshape(%1636, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1644 = reshape(%1638, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1645 = reshape(%1640, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1646 = @func_4313(%1641, %1642, %1643, %1644, %1645) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(1, 3, 3), float64], Tensor[(180), float32], Tensor[(280), float64], Tensor[(960), float64]) */;
  %1647 = %1633.1;
  %1648 = %1646.4;
  (%1637, meta[relay.Constant][106] /* ty=Tensor[(280), float64] */, %1639, %1647, meta[relay.Constant][107] /* ty=Tensor[(231), float64] */, %1648, meta[relay.Constant][108] /* ty=Tensor[(1260), float32] */, %var_5079)
}

def @func_23349() -> (Tensor[(13, 11, 9), int8],) {
  %1651 = fn () -> (Tensor[(13, 11, 9), int8],) {
    %1649 = @func_19597() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */;
    %1650 = %1649.1;
    (%1650,)
  };
  %1651() /* ty=(Tensor[(13, 11, 9), int8],) */
}

def @func_22594(%var_22593: Tensor[(7, 66), int8]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(7, 66), int8], Tensor[(1694), float64]) {
  %1667 = fn (%var_22564: Tensor[(7, 66), int8]) -> (Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(7, 66), int8], Tensor[(1694), float64]) {
    %1652 = @func_21618() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1653 = cast(meta[relay.Constant][109] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1654 = cast(%var_22564, dtype="int8") /* ty=Tensor[(7, 66), int8] */;
    %1655 = reshape(%1653, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %1656 = reshape(%1654, newshape=[462]) /* ty=Tensor[(462), int8] */;
    %1657 = @func_11476(%1655, %1656) /* ty=(Tensor[(11, 11, 14), float32], Tensor[(156), float32], Tensor[(462), int8], Tensor[(30), float64], Tensor[(156), float32]) */;
    %1658 = cast(meta[relay.Constant][109] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1659 = log(%1658) /* ty=Tensor[(1694), float32] */;
    %1660 = cast(meta[relay.Constant][109] /* ty=Tensor[(1694), float32] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %1661 = shape_of(%1659, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1662 = cast(%1659, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %1663 = dyn.reshape(%1660, %1661, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1664 = %1652.0;
    %1665 = %1657.2;
    %1666 = floor_divide(%1662, %1663) /* ty=Tensor[(1694), float64] */;
    (%1664, %1665, %var_22564, %1666)
  };
  %1667(%var_22593) /* ty=(Tensor[(13, 11, 9), int8], Tensor[(462), int8], Tensor[(7, 66), int8], Tensor[(1694), float64]) */
}

def @func_18070(%var_18067: Tensor[(480), float32], %var_18068: Tensor[(945), float64], %var_18069: Tensor[(416, 15), uint64]) -> (Tensor[(4, 1, 13), float64], Tensor[(1260), float32], Tensor[(480), float32], float32, Tensor[(30, 1), float64], Tensor[(945), float64], Tensor[(1274), float64], Tensor[(416, 15), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  @func_18065(%var_18067, %var_18068, %var_18069) /* ty=(Tensor[(4, 1, 13), float64], Tensor[(1260), float32], Tensor[(480), float32], float32, Tensor[(30, 1), float64], Tensor[(945), float64], Tensor[(1274), float64], Tensor[(416, 15), int8], Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_15442(%var_15441: Tensor[(10, 6, 6), float32]) -> (Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
  %1680 = fn (%var_15382: Tensor[(10, 6, 6), float32]) -> (Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) {
    %1668 = cast(%var_15382, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
    %1669 = @func_15326() /* ty=(Tensor[(7, 1, 4), float64], Tensor[(13, 11, 9), int8]) */;
    %1670 = cast(-4.42433f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1671 = reshape(%1670, newshape=[]) /* ty=float64 */;
    %1672 = @func_710(%1671) /* ty=(Tensor[(1, 3, 3), float64],) */;
    %1673 = @func_13778() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1674 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
    %1675 = exp(%1668) /* ty=Tensor[(10, 6, 6), float32] */;
    %1676 = %1669.0;
    %1677 = %1672.0;
    %1678 = %1673.0;
    %1679 = %1674.0;
    (%1675, %1676, %1677, -4.42433f64 /* ty=float64 */, %1678, %1679)
  };
  %1680(%var_15441) /* ty=(Tensor[(10, 6, 6), float32], Tensor[(7, 1, 4), float64], Tensor[(1, 3, 3), float64], float64, Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */
}

def @func_21691() -> (Tensor[(13, 11, 9), int8], Tensor[(6, 10, 13), float32], Tensor[(96), uint32], Tensor[(1274), float64], Tensor[(39, 4), float32], Tensor[(5, 6), float64], Tensor[(4, 1, 13), float64], Tensor[(4, 1, 13), float64]) {
  %1681 = @func_16938() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), int8]) */;
  %1682 = @func_18245() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(280), float64], float32, Tensor[(960), float64]) */;
  %1683 = cast(meta[relay.Constant][110] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1684 = cast(meta[relay.Constant][111] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %1685 = cast(meta[relay.Constant][112] /* ty=Tensor[(5, 6), float64] */, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %1686 = reshape(%1683, newshape=[13, 14, 7]) /* ty=Tensor[(13, 14, 7), float64] */;
  %1687 = reshape(%1684, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %1688 = reshape(%1685, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %1689 = @func_11737(%1686, %1687, %1688) /* ty=(Tensor[(13, 14, 7), float64], Tensor[(96), uint32], Tensor[(156), float32], uint32, Tensor[(180), float32], Tensor[(33, 7), float64], Tensor[(5, 56), float64], Tensor[(462), int8], Tensor[(30), float64]) */;
  %1690 = @func_18651() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64]) */;
  %1691 = %1681.0;
  %1692 = %1682.0;
  %1693 = %1689.1;
  %1694 = %1690.1;
  %1695 = @func_18522() /* ty=Tensor[(4, 1, 13), float64] */;
  (%1691, %1692, %1693, meta[relay.Constant][110] /* ty=Tensor[(1274), float64] */, meta[relay.Constant][111] /* ty=Tensor[(39, 4), float32] */, meta[relay.Constant][112] /* ty=Tensor[(5, 6), float64] */, %1694, %1695)
}

def @func_15647() -> (Tensor[(13, 11, 9), int8], Tensor[(13, 11, 9), bool]) {
  %1696 = @func_12766() /* ty=(Tensor[(13, 11, 9), int8], Tensor[(4, 1, 13), float64], Tensor[(52), float64]) */;
  %1697 = %1696.0;
  %1698 = cast(%1697, dtype="int8") /* ty=Tensor[(13, 11, 9), int8] */;
  %1699 = reshape(%1698, newshape=[13, 11, 9]) /* ty=Tensor[(13, 11, 9), int8] */;
  %1700 = @func_14612(%1699) /* ty=Tensor[(13, 11, 9), bool] */;
  (%1697, %1700)
}

def @func_19497() -> Tensor[(4, 1, 13), float64] {
  @func_19495() /* ty=Tensor[(4, 1, 13), float64] */
}

def @func_3751(%var_3749: Tensor[(10, 2, 14), float64]) -> (Tensor[(10, 2, 14), float64],) {
  @func_3748(%var_3749) /* ty=(Tensor[(10, 2, 14), float64],) */
}

def @func_26265() -> Tensor[(13, 11, 9), int8] {
  @func_26263() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_19599() -> (Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) {
  @func_19597() /* ty=(Tensor[(4, 1, 13), float64], Tensor[(13, 11, 9), int8]) */
}

def @func_25059() -> Tensor[(13, 11, 9), int8] {
  @func_25057() /* ty=Tensor[(13, 11, 9), int8] */
}

def @func_15047() -> (Tensor[(13, 11, 9), uint8], Tensor[(13, 11, 9), int8]) {
  %1701 = @func_13370() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1702 = %1701.0;
  %1703 = @func_14078() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1704 = %1703.0;
  %1705 = cast(%1704, dtype="uint8") /* ty=Tensor[(13, 11, 9), uint8] */;
  %1706 = shape_of(%1702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1707 = cast(%1702, dtype="uint8") /* ty=Tensor[(13, 11, 9), uint8] */;
  %1708 = dyn.reshape(%1705, %1706, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1709 = @func_13334() /* ty=(Tensor[(13, 11, 9), int8],) */;
  %1710 = bitwise_or(%1707, %1708) /* ty=Tensor[(13, 11, 9), uint8] */;
  %1711 = %1709.0;
  (%1710, %1711)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen913/build/output.py", line 5110, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:45:23] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


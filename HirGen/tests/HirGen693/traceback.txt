==========mod==========
#[version = "0.0.5"]
def @func_14748() -> Tensor[(8, 5, 15), float64] {
  @func_10384() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_6176() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %0 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1 = %0.1;
  %2 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1, %2)
}

def @func_17440(%var_17432: Tensor[(1080), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float32], Tensor[(1080), float32]) {
  %3 = cast(%var_17432, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %4 = reshape(%3, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
  %5 = @func_4455(%4) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) */;
  %6 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
  %7 = %5.2;
  (%6, %7, %var_17432)
}

def @func_8471(%var_8449: Tensor[(324), float32], %var_8451: Tensor[(10, 30), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) {
  %8 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %9 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %10 = cast(%var_8449, dtype="float32") /* ty=Tensor[(324), float32] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %12 = cast(%var_8451, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %13 = reshape(%10, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %14 = reshape(%11, newshape=[195, 2]) /* ty=Tensor[(195, 2), int32] */;
  %15 = reshape(%12, newshape=[1, 300]) /* ty=Tensor[(1, 300), float64] */;
  %16 = @func_3543(%13, %14, %15) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
  %17 = %16.5;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %19 = %8.0;
  %20 = %9.0;
  %21 = @func_1945() /* ty=Tensor[(8, 5, 15), float64] */;
  %22 = sqrt(%18) /* ty=Tensor[(1, 300), float64] */;
  (%19, %20, %21, %var_8449, meta[relay.Constant][0] /* ty=Tensor[(390), int32] */, %var_8451, %22)
}

def @func_2401() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %23 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %28 = reshape(%26, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %29 = reshape(%27, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %30 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %31 = cosh(%25) /* ty=Tensor[(8, 5, 15), float64] */;
  %32 = @func_324(%28, %29) /* ty=Tensor[(10, 15, 2), float64] */;
  %33 = %30.0;
  (%31, %32, meta[relay.Constant][1] /* ty=Tensor[(300), float64] */, %33)
}

def @func_17355() -> Tensor[(8, 5, 15), float64] {
  %34 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %34.1
}

def @func_10908() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %35 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %36 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %37 = %35.0;
  (%36, %37)
}

def @func_15144() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %38 = @func_11349() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %39 = @func_14312() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %40 = %38.3;
  %41 = %39.1;
  %42 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
  (%40, %41, %42)
}

def @func_18447() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %43 = @func_12415() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %44 = @func_9064() /* ty=Tensor[(8, 5, 15), float64] */;
  %45 = %43.0;
  (%44, %45)
}

def @func_5396() -> (Tensor[(8, 5, 15), float64],) {
  %46 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %47 = %46.1;
  (%47,)
}

def @func_7549() -> Tensor[(8, 5, 15), float64] {
  %48 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %48.0
}

def @func_1178() -> Tensor[(8, 5, 15), float64] {
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  acosh(%49) /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7686() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %50 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %51 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %52 = %50.0;
  %53 = %51.1;
  (%52, %53)
}

def @func_12602() -> Tensor[(8, 5, 15), float64] {
  %54 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %54.0
}

def @func_18799(%var_18791: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(1, 390), int32], Tensor[(300), float64]) {
  %55 = @func_15840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %56 = @func_15840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %57 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %58 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
  %59 = cast(%var_18791, dtype="float64") /* ty=Tensor[(300), float64] */;
  %60 = reshape(%59, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %61 = @func_1992(%60) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %62 = %55.0;
  %63 = %56.0;
  %64 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  %65 = %57.1;
  %66 = %58.0;
  %67 = %61.0;
  (%62, %63, %64, %65, %66, %67, %var_18791)
}

def @func_16270() -> (Tensor[(9, 3, 4), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %68 = @func_12351() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %69 = @func_7227() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %70 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %71 = %68.0;
  %72 = @func_6561() /* ty=Tensor[(8, 5, 15), float64] */;
  %73 = %69.0;
  %74 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  %75 = %70.0;
  (%71, %72, %73, %74, %75)
}

def @func_1589() -> (Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  %76 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %77 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %78 = %76.5;
  %79 = %77.0;
  (%78, %79)
}

def @func_7148() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %80 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %81 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_4287() -> (Tensor[(8, 5, 15), float64],) {
  %84 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %85 = %84.0;
  (%85,)
}

def @func_1931(%var_1923: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
  %86 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %87 = cast(%var_1923, dtype="float64") /* ty=Tensor[(300), float64] */;
  %88 = reshape(%87, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %89 = @func_1725(%88) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %90 = %86.0;
  %91 = %89.3;
  (%90, %91, %var_1923)
}

def @func_14997() -> Tensor[(8, 5, 15), float64] {
  @func_1945() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_6364() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %92 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %94 = reshape(%93, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %95 = @func_3614(%94) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %96 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %97 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %98 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %99 = %92.1;
  %100 = %95.2;
  %101 = %96.1;
  %102 = %97.0;
  %103 = %98.1;
  (%99, %100, meta[relay.Constant][3] /* ty=Tensor[(1080), float32] */, %101, %102, %103)
}

def @func_14058() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %104 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %105 = @func_7366() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %106 = %104.0;
  %107 = %105.0;
  (%106, %107)
}

def @func_13798() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %108 = @func_9792() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %109 = @func_11493() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_16071() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %112 = @func_11434() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %113 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %114 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %115 = %112.0;
  %116 = %113.0;
  %117 = %114.1;
  (%115, %116, %117)
}

def @func_18747() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %118 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %119 = @func_14360() /* ty=Tensor[(8, 5, 15), float64] */;
  (%118, %119)
}

def @func_9106() -> (Tensor[(8, 5, 15), float64],) {
  %120 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %121 = %120.0;
  (%121,)
}

def @func_4455(%var_4442: Tensor[(1080), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) {
  %122 = cast(%var_4442, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %123 = reshape(%122, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %124 = @func_3614(%123) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %125 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %126 = %125.0;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %128 = %124.0;
  %129 = sinh(%127) /* ty=Tensor[(8, 5, 15), float32] */;
  (%128, %var_4442, %129)
}

def @func_18085() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %130 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %131 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %132 = %130.2;
  %133 = %131.1;
  (%132, %133)
}

def @func_3406() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %134 = cast(meta[relay.Constant][4] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %135 = reshape(%134, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %136 = @func_1992(%135) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %137 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %138 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %139 = %136.1;
  %140 = %137.0;
  (%138, %139, meta[relay.Constant][4] /* ty=Tensor[(300), float64] */, %140)
}

def @func_9008(%var_8992: Tensor[(9, 5, 3), float64]) -> Tensor[(9, 5, 3), float64] {
  %141 = cast(%var_8992, dtype="float64") /* ty=Tensor[(9, 5, 3), float64] */;
  asin(%141) /* ty=Tensor[(9, 5, 3), float64] */
}

def @func_14697() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %142 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %143 = @func_13251() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %144 = %142.0;
  %145 = %143.0;
  %146 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  (%144, %145, %146)
}

def @func_12010() -> Tensor[(8, 5, 15), float64] {
  %147 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %147.1
}

def @func_17070(%var_17066: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %148 = cast(%var_17066, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %149 = reshape(%148, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %150 = @func_3848(%149) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %151 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %152 = %150.0;
  (%151, %152, %var_17066)
}

def @func_14784(%var_14770: Tensor[(13, 3, 4), uint64]) -> (Tensor[(13, 3, 4), bool],) {
  %153 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %154 = shape_of(%var_14770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%var_14770, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = less(%155, %156) /* ty=Tensor[(13, 3, 4), bool] */;
  (%157,)
}

def @func_2716() -> (Tensor[(8, 5, 15), float64],) {
  %158 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %159 = %158.0;
  (%159,)
}

def @func_18130() -> Tensor[(5, 60), float32] {
  %160 = @func_10038() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) */;
  %161 = %160.2;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
  asinh(%162) /* ty=Tensor[(5, 60), float32] */
}

def @func_2464() -> Tensor[(8, 5, 15), float64] {
  %163 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %163.0
}

def @func_1992(%var_1985: Tensor[(300), float64]) -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %164 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %165 = cast(%var_1985, dtype="float64") /* ty=Tensor[(300), float64] */;
  %166 = reshape(%165, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
  %167 = @func_1667(%166) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
  %168 = %164.3;
  %169 = %167.0;
  (%168, %169, %var_1985)
}

def @func_12759(%var_12749: Tensor[(390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) {
  %170 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %171 = cast(%var_12749, dtype="int32") /* ty=Tensor[(390), int32] */;
  %172 = reshape(%171, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %173 = %170.0;
  %174 = @func_471(%172) /* ty=Tensor[(13, 6, 5), int32] */;
  (%173, %174, %var_12749)
}

def @func_16340() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %175 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %176 = @func_9064() /* ty=Tensor[(8, 5, 15), float64] */;
  %177 = @func_7188() /* ty=Tensor[(300), float64] */;
  %178 = %175.0;
  (%176, %177, %178)
}

def @func_16690() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %179 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %180 = @func_6753() /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %181 = %179.0;
  %182 = %180.1;
  (%181, %182)
}

def @func_11079(%var_11055: Tensor[(2, 16, 11), float64]) -> (Tensor[(2, 16, 11), float64],) {
  %183 = cast(%var_11055, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %184 = log10(%183) /* ty=Tensor[(2, 16, 11), float64] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %186 = cos(%185) /* ty=Tensor[(2, 16, 11), float64] */;
  (%186,)
}

def @func_5993() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %187 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %188 = %187.0;
  %189 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %190 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  (%188, %189, %190)
}

def @func_5765() -> Tensor[(8, 5, 15), bool] {
  %191 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %192 = %191.0;
  %193 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 5, 15), float64] */, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%192, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%195, %196) /* ty=Tensor[(8, 5, 15), bool] */
}

def @func_4946() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_3543(%var_3502: Tensor[(324), float32], %var_3503: Tensor[(195, 2), int32], %var_3505: Tensor[(1, 300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
  %197 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %198 = cast(%var_3502, dtype="float32") /* ty=Tensor[(324), float32] */;
  %199 = cast(%var_3503, dtype="int32") /* ty=Tensor[(195, 2), int32] */;
  %200 = cast(meta[relay.Constant][7] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %201 = cast(%var_3502, dtype="float32") /* ty=Tensor[(324), float32] */;
  %202 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %203 = reshape(%198, newshape=[4, 9, 9]) /* ty=Tensor[(4, 9, 9), float32] */;
  %204 = reshape(%199, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %205 = reshape(%200, newshape=[968, 1]) /* ty=Tensor[(968, 1), int64] */;
  %206 = reshape(%201, newshape=[4, 9, 9]) /* ty=Tensor[(4, 9, 9), float32] */;
  %207 = reshape(%202, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %208 = @func_1143(%203, %204, %205, %206, %207) /* ty=(Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) */;
  %209 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %210 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %211 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %212 = reshape(%210, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %213 = reshape(%211, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %214 = %197.0;
  %215 = %208.4;
  %216 = %209.0;
  %217 = @func_324(%212, %213) /* ty=Tensor[(10, 15, 2), float64] */;
  %218 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  (%214, %215, %var_3502, %var_3503, meta[relay.Constant][7] /* ty=Tensor[(968), int64] */, %var_3505, %216, %217, %218)
}

def @func_15223() -> (Tensor[(8, 5, 15), float64],) {
  %219 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %220 = %219.1;
  (%220,)
}

def @func_17888() -> (Tensor[(8, 5, 15), float64],) {
  %221 = @func_12339() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %222 = %221.1;
  (%222,)
}

def @func_9309() -> (Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
  %223 = cast(meta[relay.Constant][8] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %224 = reshape(%223, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %225 = @func_4007(%224) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %226 = @func_6975() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %227 = @func_8688() /* ty=Tensor[(8, 5, 15), float64] */;
  %228 = %225.2;
  %229 = %226.1;
  (%227, %228, meta[relay.Constant][8] /* ty=Tensor[(20), float32] */, %229)
}

def @func_11274() -> (Tensor[(300), float64],) {
  %230 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %231 = %230.2;
  %232 = cast(%231, dtype="float64") /* ty=Tensor[(300), float64] */;
  %233 = asin(%232) /* ty=Tensor[(300), float64] */;
  (%233,)
}

def @func_18492() -> Tensor[(8, 5, 15), float64] {
  %234 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %234.0
}

def @func_10840() -> Tensor[(7, 390), int32] {
  %235 = @func_4089() /* ty=Tensor[(1, 390), int32] */;
  %236 = cast(%235, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %237 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 390), int32] */, dtype="int32") /* ty=Tensor[(7, 390), int32] */;
  right_shift(%236, %237) /* ty=Tensor[(7, 390), int32] */
}

def @func_18371() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %238 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %239 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %240 = %238.0;
  (%239, %240)
}

def @func_471(%var_446: Tensor[(13, 6, 5), int32]) -> Tensor[(13, 6, 5), int32] {
  %241 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(13, 6, 5), int32] */;
  %242 = shape_of(%var_446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_446, dtype="int32") /* ty=Tensor[(13, 6, 5), int32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%243, %244) /* ty=Tensor[(13, 6, 5), int32] */
}

def @func_1222(%var_1211: Tensor[(8, 5, 15), float64]) -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %245 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %246 = cast(%var_1211, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(%var_1211, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %251 = greater(%248, %249) /* ty=Tensor[(8, 5, 15), bool] */;
  %252 = asinh(%250) /* ty=Tensor[(8, 5, 15), float64] */;
  (%251, %252)
}

def @func_5360() -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %253 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %254 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
  %255 = %253.0;
  %256 = %254.3;
  (%255, %256)
}

def @func_16385() -> Tensor[(8, 5, 15), float64] {
  @func_12530() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_6872() -> Tensor[(8, 5, 15), float64] {
  %257 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %257.3
}

def @func_17412(%var_17391: Tensor[(7, 4, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 4, 7), bool]) {
  %258 = cast(%var_17391, dtype="float64") /* ty=Tensor[(7, 4, 7), float64] */;
  %259 = cosh(%258) /* ty=Tensor[(7, 4, 7), float64] */;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
  %261 = acosh(%260) /* ty=Tensor[(7, 4, 7), float32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(7, 4, 7), bool] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="bool") /* ty=Tensor[(7, 4, 7), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
  %267 = logical_or(%264, %265) /* ty=Tensor[(7, 4, 7), bool] */;
  (%266, %267)
}

def @func_9564() -> Tensor[(8, 5, 15), float64] {
  @func_6561() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_17105() -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool]) {
  %268 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
  %269 = @func_10038() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) */;
  %270 = %268.0;
  %271 = %269.1;
  (%270, %271)
}

def @func_1798() -> (Tensor[(8, 5, 15), float64],) {
  %272 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %273 = %272.0;
  (%273,)
}

def @func_15310() -> Tensor[(8, 5, 15), float64] {
  %274 = @func_13972() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %274.3
}

def @func_4426(%var_4403: Tensor[(20), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
  %275 = cast(%var_4403, dtype="float32") /* ty=Tensor[(20), float32] */;
  %276 = reshape(%275, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %277 = @func_4007(%276) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %278 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %279 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  %280 = %277.4;
  %281 = %278.0;
  (%279, %280, %var_4403, %281)
}

def @func_324(%var_310: Tensor[(10, 15, 2), float64], %var_311: Tensor[(10, 15, 2), float64]) -> Tensor[(10, 15, 2), float64] {
  %282 = cast(%var_311, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %283 = shape_of(%var_310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_310, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%284, %285) /* ty=Tensor[(10, 15, 2), float64] */
}

def @func_19649(%var_19643: Tensor[(7, 390), int32]) -> (Tensor[(7, 390), float32], Tensor[(7, 390), bool]) {
  %286 = @func_18657() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) */;
  %287 = %286.1;
  %288 = cast(%287, dtype="float32") /* ty=Tensor[(7, 390), float32] */;
  %289 = cast(%var_19643, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %290 = shape_of(%287, dtype="int32") /* ty=Tensor[(2), int32] */;
  %291 = cast(%287, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %293 = erf(%288) /* ty=Tensor[(7, 390), float32] */;
  %294 = greater(%291, %292) /* ty=Tensor[(7, 390), bool] */;
  (%293, %294)
}

def @func_10286() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %295 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %296 = @func_9694() /* ty=Tensor[(8, 5, 15), float64] */;
  %297 = %295.0;
  (%296, %297)
}

def @func_16124() -> (Tensor[(8, 5, 15), float64],) {
  %298 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %299 = %298.0;
  (%299,)
}

def @func_19078(%var_19066: Tensor[(16, 22), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(16, 22), float64], Tensor[(8, 5, 15), float64]) {
  %300 = cast(%var_19066, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
  %301 = reshape(%300, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), float64] */;
  %302 = @func_11079(%301) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %303 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %304 = @func_7275() /* ty=Tensor[(8, 5, 15), float64] */;
  %305 = %302.0;
  %306 = %303.0;
  (%304, %305, %var_19066, %306)
}

def @func_7188() -> Tensor[(300), float64] {
  %307 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %307.2
}

def @func_5307() -> Tensor[(8, 5, 15), float64] {
  %308 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %308.0
}

def @func_6788() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13386(%var_13377: Tensor[(10, 15, 2), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) {
  %309 = @func_5505() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %310 = @func_12854() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) */;
  %311 = %310.1;
  %312 = cast(%var_13377, dtype="int8") /* ty=Tensor[(10, 15, 2), int8] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%311, dtype="int8") /* ty=Tensor[(10, 15, 2), int8] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %316 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  %317 = %309.0;
  %318 = bitwise_and(%314, %315) /* ty=Tensor[(10, 15, 2), int8] */;
  (%316, %317, %318)
}

def @func_4908() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %319 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %320 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %321 = %319.1;
  %322 = %320.0;
  (%321, %322)
}

def @func_7708() -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) {
  %323 = @func_7366() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %324 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %325 = %323.3;
  %326 = %324.1;
  (%325, %326)
}

def @func_11531() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) {
  %327 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %328 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
  %329 = reshape(%328, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
  %330 = @func_9749(%329) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) */;
  %331 = %327.1;
  %332 = %330.1;
  %333 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
  (%331, %332, meta[relay.Constant][11] /* ty=Tensor[(1, 20), float32] */, %333)
}

def @func_5265() -> (Tensor[(8, 5, 15), float64],) {
  %334 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %335 = %334.1;
  (%335,)
}

def @func_8986() -> (Tensor[(8, 5, 15), float64],) {
  %336 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_15357() -> (Tensor[(11, 8, 11), float64],) {
  %338 = @func_8399() /* ty=(Tensor[(11, 8, 11), float64],) */;
  %339 = %338.0;
  (%339,)
}

def @func_3481() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %340 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %341 = cast(meta[relay.Constant][12] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %342 = reshape(%341, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %343 = @func_1725(%342) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %344 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %345 = %340.3;
  %346 = %343.5;
  %347 = %344.0;
  (%345, %346, meta[relay.Constant][12] /* ty=Tensor[(300), float64] */, %347)
}

def @func_9643(%var_9607: Tensor[(9, 15, 7), float32], %var_9608: Tensor[(9, 15, 7), float32]) -> (Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %348 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %349 = cast(%var_9608, dtype="bool") /* ty=Tensor[(9, 15, 7), bool] */;
  %350 = shape_of(%var_9607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%var_9607, dtype="bool") /* ty=Tensor[(9, 15, 7), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %353 = equal(%351, %352) /* ty=Tensor[(9, 15, 7), bool] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %355 = rsqrt(%354) /* ty=Tensor[(9, 15, 7), float32] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(9, 15, 7), float64] */;
  %357 = @func_8844() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %358 = %348.1;
  %359 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %360 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %361 = log10(%356) /* ty=Tensor[(9, 15, 7), float64] */;
  %362 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %363 = %357.0;
  (%358, %359, %360, %361, %362, %363)
}

def @func_16729(%var_16699: Tensor[(4, 2, 7), float32]) -> (Tensor[(4, 2, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
  %364 = cast(%var_16699, dtype="float32") /* ty=Tensor[(4, 2, 7), float32] */;
  %365 = erf(%364) /* ty=Tensor[(4, 2, 7), float32] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(4, 2, 7), float64] */;
  %367 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %368 = cast(meta[relay.Constant][13] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %369 = reshape(%368, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %370 = @func_12759(%369) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) */;
  %371 = log2(%366) /* ty=Tensor[(4, 2, 7), float64] */;
  %372 = %367.0;
  %373 = %370.0;
  (%371, %372, %373, meta[relay.Constant][13] /* ty=Tensor[(390), int32] */)
}

def @func_8560() -> Tensor[(8, 5, 15), float64] {
  %374 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %374.0
}

def @func_13299(%var_13294: Tensor[(2, 52), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) {
  %375 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %376 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %377 = %376.1;
  %378 = cast(%var_13294, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %380 = cast(%377, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %382 = %375.0;
  %383 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %384 = floor_divide(%380, %381) /* ty=Tensor[(2, 52), float32] */;
  (%382, %383, %384)
}

def @func_16657(%var_16625: Tensor[(7, 7, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %385 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %386 = cast(%var_16625, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %387 = atan(%386) /* ty=Tensor[(7, 7, 7), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %389 = @func_13676() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) */;
  %390 = @func_11982() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %391 = %385.0;
  %392 = cos(%388) /* ty=Tensor[(7, 7, 7), float64] */;
  %393 = @func_9564() /* ty=Tensor[(8, 5, 15), float64] */;
  %394 = %389.3;
  %395 = %390.0;
  (%391, %392, %393, %394, %395)
}

def @func_13925() -> Tensor[(8, 5, 15), float64] {
  %396 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
  %396.3
}

def @func_18118() -> Tensor[(8, 5, 15), float64] {
  %397 = @func_5993() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %397.1
}

def @func_4223() -> Tensor[(8, 5, 15), float64] {
  @func_1271() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8731() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  %398 = @func_6364() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %399 = @func_7983() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %400 = cast(meta[relay.Constant][14] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %401 = reshape(%400, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %402 = @func_1725(%401) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %403 = cast(meta[relay.Constant][14] /* ty=Tensor[(300), float64] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %404 = %398.1;
  %405 = %399.0;
  %406 = %402.5;
  %407 = asinh(%403) /* ty=Tensor[(300), float32] */;
  (%404, %405, %406, %407)
}

def @func_16219() -> Tensor[(8, 5, 15), float64] {
  @func_6405() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5897() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
  %408 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %409 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
  %410 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %411 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %412 = %408.0;
  %413 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %414 = %409.2;
  %415 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
  %416 = %410.1;
  %417 = %411.0;
  (%412, %413, %414, %415, %416, %417)
}

def @func_18687() -> (Tensor[(8, 5, 15), float64],) {
  %418 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %419 = %418.0;
  (%419,)
}

def @func_15472() -> Tensor[(8, 5, 15), float64] {
  %420 = @func_11434() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %420.0
}

def @func_12866() -> (Tensor[(8, 5, 15), float64],) {
  %421 = @func_10891() /* ty=Tensor[(8, 5, 15), float64] */;
  (%421,)
}

def @func_8399() -> (Tensor[(11, 8, 11), float64],) {
  %422 = @func_6793() /* ty=Tensor[(11, 8, 11), float64] */;
  (%422,)
}

def @func_2074() -> (Tensor[(8, 5, 15), float64],) {
  %423 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  (%423,)
}

def @func_3220() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %424 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %425 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  %426 = %424.0;
  (%425, %426)
}

def @func_17479() -> Tensor[(11, 8, 11), float64] {
  @func_6793() /* ty=Tensor[(11, 8, 11), float64] */
}

def @func_6671() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %427 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %428 = %427.0;
  %429 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  (%428, %429)
}

def @func_7454() -> Tensor[(8, 5, 15), float64] {
  @func_4223() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4766() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
  %430 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 52), uint64] */, dtype="uint64") /* ty=Tensor[(2, 52), uint64] */;
  %431 = reshape(%430, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %432 = @func_3848(%431) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %433 = @func_2401() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %434 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %435 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %436 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %437 = %432.0;
  %438 = %433.1;
  %439 = %434.0;
  (%435, %436, %437, meta[relay.Constant][15] /* ty=Tensor[(2, 52), uint64] */, %438, %439)
}

def @func_13251() -> (Tensor[(8, 5, 15), float64],) {
  %440 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %441 = %440.1;
  (%441,)
}

def @func_5664() -> (Tensor[(8, 5, 15), float64],) {
  %442 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %443 = %442.0;
  (%443,)
}

def @func_15432() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32]) {
  %444 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
  %445 = @func_8165() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %446 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
  %447 = %444.3;
  %448 = %445.0;
  %449 = %446.2;
  (%447, %448, %449)
}

def @func_13449() -> Tensor[(8, 5, 15), float64] {
  @func_8688() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_3875() -> (Tensor[(8, 5, 15), float64],) {
  %450 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  (%450,)
}

def @func_9749(%var_9741: Tensor[(5, 4), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) {
  %451 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %452 = cast(%var_9741, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
  %453 = reshape(%452, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %454 = @func_4007(%453) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %455 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  %456 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %457 = %451.1;
  %458 = @func_5417() /* ty=Tensor[(8, 5, 15), float64] */;
  %459 = @func_9694() /* ty=Tensor[(8, 5, 15), float64] */;
  %460 = %454.1;
  (%455, %456, %457, %458, %459, %460, %var_9741)
}

def @func_6048(%var_6035: Tensor[(104, 1), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) {
  %461 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %463 = reshape(%462, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %464 = @func_1222(%463) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %465 = cast(%var_6035, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %466 = reshape(%465, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %467 = @func_3848(%466) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %468 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %469 = %464.0;
  %470 = %467.0;
  %471 = %468.0;
  (%461, %469, %470, %var_6035, %471)
}

def @func_12415() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %472 = @func_6364() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %473 = @func_9282() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %474 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %475 = @func_9890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %476 = %472.0;
  %477 = %473.0;
  %478 = %474.0;
  %479 = %475.0;
  (%476, %477, %478, %479)
}

def @func_4089() -> Tensor[(1, 390), int32] {
  %480 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %480.3
}

def @func_1433() -> (Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  %481 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 390), int32] */, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %482 = reshape(%481, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %483 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 390), int32] */, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %484 = reshape(%483, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %485 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 88), int64] */, dtype="int64") /* ty=Tensor[(11, 88), int64] */;
  %486 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 88), int64] */, dtype="int64") /* ty=Tensor[(11, 88), int64] */;
  %487 = reshape(%485, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %488 = reshape(%486, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %489 = @func_177(%487, %488) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %492 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %493 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %494 = @func_471(%482) /* ty=Tensor[(13, 6, 5), int32] */;
  %495 = @func_471(%484) /* ty=Tensor[(13, 6, 5), int32] */;
  %496 = rsqrt(%491) /* ty=Tensor[(11, 8, 11), float64] */;
  %497 = %492.1;
  (%493, meta[relay.Constant][16] /* ty=Tensor[(11, 88), int64] */, %494, meta[relay.Constant][17] /* ty=Tensor[(1, 390), int32] */, %495, %496, %497)
}

def @func_4585() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %498 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %499 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %500 = %498.0;
  (%499, %500)
}

def @func_6405() -> Tensor[(8, 5, 15), float64] {
  %501 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %501.0
}

def @func_4398() -> Tensor[(8, 5, 15), float64] {
  %502 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %502.0
}

def @func_13571() -> (Tensor[(8, 5, 15), float64],) {
  %503 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %504 = %503.0;
  (%504,)
}

def @func_5417() -> Tensor[(8, 5, 15), float64] {
  %505 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %505.0
}

def @func_7227() -> (Tensor[(8, 5, 15), float64],) {
  %506 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %507 = %506.0;
  (%507,)
}

def @func_5505() -> (Tensor[(8, 5, 15), float64],) {
  %508 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  (%508,)
}

def @func_3818() -> (Tensor[(8, 5, 15), float64],) {
  %509 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %510 = %509.1;
  (%510,)
}

def @func_10253() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) {
  %511 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %512 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
  %513 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %514 = %511.0;
  %515 = %512.0;
  %516 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%513, %514, %515, %516)
}

def @func_16591() -> (Tensor[(8, 5, 15), float64],) {
  %517 = @func_14360() /* ty=Tensor[(8, 5, 15), float64] */;
  (%517,)
}

def @func_19838(%var_19796: Tensor[(144), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(144), uint64], Tensor[(8, 5, 15), float64], Tensor[(12, 6, 2), float32]) {
  %518 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %519 = @func_8165() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %520 = cast(%var_19796, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %521 = reshape(%520, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint64] */;
  %522 = @func_14445(%521) /* ty=Tensor[(12, 6, 2), uint64] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(12, 6, 2), float32] */;
  %524 = %518.4;
  %525 = %519.0;
  %526 = log(%523) /* ty=Tensor[(12, 6, 2), float32] */;
  (%524, %var_19796, %525, %526)
}

def @func_19265() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %527 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %528 = %527.3;
  %529 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
  (%528, %529)
}

def @func_7890() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %530 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %531 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %532 = %530.0;
  %533 = %531.1;
  %534 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  (%532, %533, %534)
}

def @func_14723() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %535 = @func_3750() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %536 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %537 = %535.0;
  %538 = %536.2;
  (%537, %538)
}

def @func_12530() -> Tensor[(8, 5, 15), float64] {
  %539 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %539.0
}

def @func_2733() -> (Tensor[(8, 5, 15), float64],) {
  %540 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  (%540,)
}

def @func_1351() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %541 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %542 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  (%541, %542)
}

def @func_9694() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_10799() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %543 = @func_6753() /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %544 = @func_7686() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %545 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %546 = %543.1;
  %547 = %544.1;
  %548 = %545.0;
  (%546, %547, %548)
}

def @func_11493() -> (Tensor[(8, 5, 15), float64],) {
  %549 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  (%549,)
}

def @func_12707() -> Tensor[(8, 5, 15), float64] {
  %550 = @func_4926() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %550.0
}

def @func_19588(%var_19570: Tensor[(6, 1, 12), float32], %var_19580: Tensor[(6, 7, 12), float32]) -> Tensor[(6, 7, 12), bool] {
  %551 = cast(%var_19570, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
  %552 = sqrt(%551) /* ty=Tensor[(6, 1, 12), float32] */;
  %553 = cast(%552, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
  %554 = cast(%var_19580, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
  less(%553, %554) /* ty=Tensor[(6, 7, 12), bool] */
}

def @func_15840() -> (Tensor[(8, 5, 15), float64],) {
  %555 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %556 = %555.1;
  (%556,)
}

def @func_1562(%var_1537: uint64, %var_1538: Tensor[(15, 9, 16), uint64], %var_1543: Tensor[(15, 9, 16), uint64]) -> (Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
  %557 = cast(%var_1537, dtype="uint64") /* ty=uint64 */;
  %558 = cast(%var_1538, dtype="uint64") /* ty=Tensor[(15, 9, 16), uint64] */;
  %559 = bitwise_or(%557, %558) /* ty=Tensor[(15, 9, 16), uint64] */;
  %560 = cast(%var_1543, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %564 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %565 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %566 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %567 = reshape(%565, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %568 = reshape(%566, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %569 = less(%562, %563) /* ty=Tensor[(15, 9, 16), bool] */;
  %570 = %564.1;
  %571 = @func_324(%567, %568) /* ty=Tensor[(10, 15, 2), float64] */;
  (%569, %570, %571, meta[relay.Constant][18] /* ty=Tensor[(300), float64] */)
}

def @func_2548() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %572 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %573 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %574 = %572.0;
  %575 = %573.0;
  (%574, %575)
}

def @func_8198() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %576 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %577 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  %578 = %576.0;
  (%577, %578)
}

def @func_6537() -> Tensor[(2, 52), uint64] {
  %579 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %579.1
}

def @func_11434() -> (Tensor[(8, 5, 15), float64],) {
  %580 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %581 = %580.1;
  (%581,)
}

def @func_12339() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %582 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %583 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %584 = %582.0;
  %585 = %583.1;
  (%584, %585)
}

def @func_19627() -> Tensor[(8, 5, 15), float64] {
  @func_17702() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5573() -> Tensor[(8, 5, 15), float64] {
  @func_4168() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18657() -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) {
  %586 = @func_13251() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %587 = %586.0;
  %588 = @func_10840() /* ty=Tensor[(7, 390), int32] */;
  (%587, %588)
}

def @func_15108() -> (Tensor[(8, 5, 15), float64],) {
  %589 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %590 = %589.1;
  (%590,)
}

def @func_7571() -> (Tensor[(8, 5, 15), float64],) {
  %591 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %592 = %591.1;
  (%592,)
}

def @func_12827() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %593 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %594 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  %595 = %593.0;
  (%594, %595)
}

def @func_10891() -> Tensor[(8, 5, 15), float64] {
  %596 = @func_8198() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %596.0
}

def @func_3143() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1271() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5275() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13018() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %597 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %598 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %599 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %600 = %597.0;
  %601 = %598.3;
  %602 = %599.0;
  %603 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
  %604 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
  %605 = @func_6788() /* ty=Tensor[(8, 5, 15), float64] */;
  (%600, %601, %602, %603, %604, %605)
}

def @func_2771() -> Tensor[(8, 5, 15), float64] {
  %606 = @func_2653() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %606.3
}

def @func_5133(%var_5128: float64, %var_5129: Tensor[(4, 15, 4), float64]) -> Tensor[(4, 15, 4), float64] {
  %607 = cast(%var_5128, dtype="float64") /* ty=float64 */;
  %608 = cast(%var_5129, dtype="float64") /* ty=Tensor[(4, 15, 4), float64] */;
  mod(%607, %608) /* ty=Tensor[(4, 15, 4), float64] */
}

def @func_13440(%var_13397: Tensor[(3, 14, 7), float32]) -> (Tensor[(3, 14, 7), float32], Tensor[(8, 5, 15), float64]) {
  %609 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %610 = shape_of(%var_13397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_13397, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %613 = @func_11604() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %614 = mod(%611, %612) /* ty=Tensor[(3, 14, 7), float32] */;
  %615 = %613.0;
  (%614, %615)
}

def @func_6975() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %616 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %617 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %618 = %616.0;
  %619 = %617.0;
  (%618, %619)
}

def @func_14360() -> Tensor[(8, 5, 15), float64] {
  %620 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %620.1
}

def @func_11349() -> (Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %621 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %622 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 22), bool] */, dtype="bool") /* ty=Tensor[(24, 22), bool] */;
  %623 = reshape(%622, newshape=[4, 12, 11]) /* ty=Tensor[(4, 12, 11), bool] */;
  %624 = @func_4533(%623) /* ty=(Tensor[(4, 12, 11), bool],) */;
  %625 = %621.0;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %627 = reshape(%626, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %628 = @func_1222(%627) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %629 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %630 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %631 = %624.0;
  %632 = %628.0;
  %633 = %629.1;
  %634 = %630.0;
  (%625, %631, meta[relay.Constant][20] /* ty=Tensor[(24, 22), bool] */, %632, %633, %634)
}

def @func_3067() -> Tensor[(8, 5, 15), float64] {
  %635 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %635.1
}

def @func_17645(%var_17628: Tensor[(8, 15, 5), int64], %var_17633: Tensor[(1152), bool]) -> (Tensor[(8, 15, 5), int64], Tensor[(8, 5, 15), float64], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
  %636 = cast(%var_17628, dtype="int64") /* ty=Tensor[(8, 15, 5), int64] */;
  %637 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 15, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 15, 5), int64] */, dtype="int64") /* ty=Tensor[(8, 15, 5), int64] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %640 = cast(%var_17633, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %641 = reshape(%640, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
  %642 = @func_12947(%641) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) */;
  %643 = @func_11894() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %644 = logical_xor(%638, %639) /* ty=Tensor[(8, 15, 5), int64] */;
  %645 = %642.4;
  %646 = %643.4;
  (%644, %645, %var_17633, %646)
}

def @func_16767(%var_16761: Tensor[(343), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64]) {
  %647 = cast(meta[relay.Constant][22] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
  %648 = reshape(%647, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float64] */;
  %649 = @func_16657(%648) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %650 = cast(%var_16761, dtype="float64") /* ty=Tensor[(343), float64] */;
  %651 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(343), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %652 = cast(meta[relay.Constant][22] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?), float64] */;
  %654 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
  %655 = %649.2;
  %656 = maximum(%652, %653) /* ty=Tensor[(343), float64] */;
  (%654, %655, %656)
}

def @func_8334() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %657 = @func_7148() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %658 = @func_7454() /* ty=Tensor[(8, 5, 15), float64] */;
  %659 = %657.0;
  (%658, %659)
}

def @func_2863() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %660 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  %661 = cast(%660, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %662 = log2(%661) /* ty=Tensor[(8, 5, 15), float64] */;
  %663 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%662, %663)
}

def @func_1840() -> (Tensor[(8, 5, 15), float64],) {
  %664 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %665 = %664.0;
  (%665,)
}

def @func_5036() -> Tensor[(8, 5, 15), float64] {
  @func_3143() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7983() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %666 = @func_7686() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %667 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %668 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %669 = %666.1;
  %670 = @func_4204() /* ty=Tensor[(8, 5, 15), float64] */;
  %671 = %667.0;
  %672 = %668.2;
  (%669, %670, %671, %672)
}

def @func_12947(%var_12922: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
  %673 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %674 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %675 = cast(%var_12922, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %676 = reshape(%675, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), bool] */;
  %677 = @func_9502(%676) /* ty=(Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %678 = %673.0;
  %679 = %674.0;
  %680 = %677.0;
  %681 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  (%678, %679, %680, %var_12922, %681)
}

def @func_14142(%var_14060: Tensor[(6, 16, 1), uint8], %var_14061: Tensor[(6, 16, 5), uint8], %var_14099: Tensor[(300), float64]) -> (Tensor[(6, 16, 5), bool], Tensor[(6, 16, 5), int8], Tensor[(10, 15, 2), bool]) {
  %682 = cast(%var_14060, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
  %683 = cast(%var_14061, dtype="uint8") /* ty=Tensor[(6, 16, 5), uint8] */;
  %684 = multiply(%682, %683) /* ty=Tensor[(6, 16, 5), uint8] */;
  %685 = cast(%684, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %686 = shape_of(%var_14061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_14061, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = cast(%var_14060, dtype="float64") /* ty=Tensor[(6, 16, 1), float64] */;
  %690 = sin(%689) /* ty=Tensor[(6, 16, 1), float64] */;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
  %692 = asinh(%691) /* ty=Tensor[(6, 16, 1), float32] */;
  %693 = cast(%692, dtype="int8") /* ty=Tensor[(6, 16, 1), int8] */;
  %694 = cast(%var_14061, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
  %695 = cast(%var_14099, dtype="float64") /* ty=Tensor[(300), float64] */;
  %696 = reshape(%695, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
  %697 = @func_1667(%696) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
  %698 = %697.1;
  %699 = cast(%var_14099, dtype="bool") /* ty=Tensor[(300), bool] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%698, dtype="bool") /* ty=Tensor[(10, 15, 2), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %703 = greater(%687, %688) /* ty=Tensor[(6, 16, 5), bool] */;
  %704 = right_shift(%693, %694) /* ty=Tensor[(6, 16, 5), int8] */;
  %705 = logical_and(%701, %702) /* ty=Tensor[(10, 15, 2), bool] */;
  (%703, %704, %705)
}

def @func_14882(%var_14869: float64) -> (Tensor[(8, 5, 15), float64], Tensor[(4, 15, 4), float64], float64, Tensor[(240), float64]) {
  %706 = @func_11894() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %707 = cast(%var_14869, dtype="float64") /* ty=float64 */;
  %708 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %709 = reshape(%707, newshape=[]) /* ty=float64 */;
  %710 = reshape(%708, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float64] */;
  %711 = %706.1;
  %712 = @func_5133(%709, %710) /* ty=Tensor[(4, 15, 4), float64] */;
  (%711, %712, %var_14869, meta[relay.Constant][23] /* ty=Tensor[(240), float64] */)
}

def @func_17760(%var_17740: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), bool]) {
  %713 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %714 = @func_11422() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %715 = @func_8731() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) */;
  %716 = cast(%var_17740, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %717 = reshape(%716, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %718 = @func_8539(%717) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) */;
  %719 = %718.2;
  %720 = cast(%var_17740, dtype="bool") /* ty=Tensor[(104), bool] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(1), int32] */;
  %722 = cast(%719, dtype="bool") /* ty=Tensor[(104), bool] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?), bool] */;
  %724 = %713.2;
  %725 = %714.0;
  %726 = %715.0;
  %727 = greater(%722, %723) /* ty=Tensor[(104), bool] */;
  (%724, %725, %726, %727)
}

def @func_12124() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %728 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %729 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  %730 = %728.0;
  (%729, %730)
}

def @func_17156() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 10, 6), bool], uint32) {
  %731 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %732 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %733 = %731.0;
  %734 = cast(%733, dtype="uint32") /* ty=Tensor[(8, 5, 15), uint32] */;
  %735 = reshape(%732, newshape=[]) /* ty=uint32 */;
  %736 = reshape(%734, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint32] */;
  %737 = @func_1529(%735, %736) /* ty=(Tensor[(10, 10, 6), bool],) */;
  %738 = %737.0;
  (%733, %738, meta[relay.Constant][24] /* ty=uint32 */)
}

def @func_2024() -> Tensor[(8, 5, 15), float64] {
  %739 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %739.0
}

def @func_16317() -> Tensor[(8, 5, 15), float64] {
  @func_4946() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7256() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %740 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %741 = @func_5573() /* ty=Tensor[(8, 5, 15), float64] */;
  %742 = %740.0;
  (%741, %742)
}

def @func_15818() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(240), bool]) {
  %743 = @func_14312() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %744 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %745 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %746 = reshape(%744, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), bool] */;
  %747 = reshape(%745, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), bool] */;
  %748 = @func_11173(%746, %747) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) */;
  %749 = %743.3;
  %750 = %748.0;
  (%749, %750, meta[relay.Constant][25] /* ty=Tensor[(240), bool] */)
}

def @func_10202() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) {
  %751 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %752 = reshape(%751, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %753 = @func_1725(%752) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %754 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %755 = @func_5897() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) */;
  %756 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  %757 = %753.4;
  %758 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %759 = @func_8688() /* ty=Tensor[(8, 5, 15), float64] */;
  %760 = %754.0;
  %761 = %755.2;
  %762 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
  (%756, %757, meta[relay.Constant][26] /* ty=Tensor[(300), float64] */, %758, %759, %760, %761, %762)
}

def @func_4363() -> (Tensor[(8, 5, 15), float64],) {
  %763 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %764 = %763.0;
  (%764,)
}

def @func_4533(%var_4526: Tensor[(4, 12, 11), bool]) -> (Tensor[(4, 12, 11), bool],) {
  %765 = cast(%var_4526, dtype="bool") /* ty=Tensor[(4, 12, 11), bool] */;
  %766 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 12, 11), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = logical_and(%767, %768) /* ty=Tensor[(4, 12, 11), bool] */;
  (%769,)
}

def @func_12455(%var_12445: Tensor[(13, 15, 8), float32]) -> (Tensor[(13, 15, 8), float32], Tensor[(8, 5, 15), float64]) {
  %770 = cast(%var_12445, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %771 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %772 = log2(%770) /* ty=Tensor[(13, 15, 8), float32] */;
  %773 = %771.0;
  (%772, %773)
}

def @func_5555() -> (Tensor[(8, 5, 15), float64],) {
  %774 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %775 = %774.0;
  (%775,)
}

def @func_16447(%var_16426: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %776 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %777 = cast(%var_16426, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %778 = reshape(%777, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), bool] */;
  %779 = @func_9502(%778) /* ty=(Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %780 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %781 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %782 = %776.0;
  %783 = %779.0;
  %784 = %780.0;
  %785 = %781.0;
  (%782, %783, %var_16426, %784, %785)
}

def @func_11422() -> (Tensor[(8, 5, 15), float64],) {
  %786 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %787 = %786.0;
  (%787,)
}

def @func_4204() -> Tensor[(8, 5, 15), float64] {
  %788 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %788.0
}

def @func_3300() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %789 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %790 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %791 = %789.0;
  %792 = %790.0;
  (%791, %792)
}

def @func_2138() -> Tensor[(8, 5, 15), float64] {
  %793 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %793.0
}

def @func_6219() -> (Tensor[(8, 5, 15), float64],) {
  %794 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  (%794,)
}

def @func_3848(%var_3823: Tensor[(13, 4, 2), uint64]) -> (Tensor[(13, 4, 2), uint64],) {
  %795 = cast(%var_3823, dtype="uint64") /* ty=Tensor[(13, 4, 2), uint64] */;
  %796 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 4, 2), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 4, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 4, 2), uint64] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %799 = bitwise_and(%797, %798) /* ty=Tensor[(13, 4, 2), uint64] */;
  (%799,)
}

def @func_18680() -> Tensor[(8, 5, 15), float64] {
  %800 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %800.0
}

def @func_17325() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
  %801 = @func_16591() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %802 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %803 = @func_15108() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %804 = %801.0;
  %805 = %802.0;
  %806 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
  %807 = %803.0;
  (%804, %805, %806, %807)
}

def @func_13108() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %808 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %809 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
  %810 = @func_7549() /* ty=Tensor[(8, 5, 15), float64] */;
  %811 = %808.2;
  %812 = %809.2;
  %813 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
  (%810, %811, %812, %813)
}

def @func_4168() -> Tensor[(8, 5, 15), float64] {
  %814 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %814.0
}

def @func_15508() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %815 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %816 = @func_11654() /* ty=Tensor[(8, 5, 15), float64] */;
  %817 = %815.0;
  (%816, %817)
}

def @func_4670() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %818 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %819 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %820 = %818.0;
  %821 = %819.1;
  (%820, %821)
}

def @func_15697(%var_15689: Tensor[(10, 16, 12), float32]) -> (Tensor[(10, 16, 12), float64],) {
  %822 = cast(%var_15689, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
  %823 = exp(%822) /* ty=Tensor[(10, 16, 12), float32] */;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %825 = asinh(%824) /* ty=Tensor[(10, 16, 12), float64] */;
  (%825,)
}

def @func_3110() -> (Tensor[(8, 5, 15), float64],) {
  %826 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %827 = %826.0;
  (%827,)
}

def @func_11635() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %828 = @func_9309() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) */;
  %829 = @func_8986() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %830 = %828.0;
  %831 = %829.0;
  (%830, %831)
}

def @func_17016() -> (Tensor[(8, 5, 15), float64],) {
  %832 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
  (%832,)
}

def @func_12297() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %833 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %834 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %835 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %836 = %833.0;
  %837 = %834.1;
  %838 = %835.0;
  (%836, %837, %838)
}

def @func_9952(%var_9901: Tensor[(14, 9, 7), float64], %var_9902: Tensor[(14, 9, 7), float64], %var_9937: Tensor[(104), uint64]) -> (Tensor[(14, 9, 7), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  %839 = cast(%var_9902, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %840 = shape_of(%var_9901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_9901, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %843 = cast(%var_9937, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %844 = reshape(%843, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %845 = @func_8539(%844) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) */;
  %846 = floor_divide(%841, %842) /* ty=Tensor[(14, 9, 7), float64] */;
  %847 = %845.1;
  %848 = @func_9564() /* ty=Tensor[(8, 5, 15), float64] */;
  (%846, %847, %var_9937, %848)
}

def @func_3025() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %849 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %850 = %849.0;
  %851 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  (%850, %851)
}

def @func_3435() -> Tensor[(8, 5, 15), float64] {
  %852 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %852.0
}

def @func_15948() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
  %853 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %854 = @func_11274() /* ty=(Tensor[(300), float64],) */;
  %855 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %856 = @func_3750() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %857 = @func_12854() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) */;
  %858 = %853.0;
  %859 = %854.0;
  %860 = %855.0;
  %861 = %856.1;
  %862 = %857.1;
  (%858, %859, %860, %861, %862)
}

def @func_2318(%var_2271: Tensor[(4, 13, 5), float32]) -> (Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) {
  %863 = cast(5.06592f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %864 = cast(%var_2271, dtype="float32") /* ty=Tensor[(4, 13, 5), float32] */;
  %865 = mod(%863, %864) /* ty=Tensor[(4, 13, 5), float32] */;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(4, 13, 5), float32] */;
  %867 = atan(%866) /* ty=Tensor[(4, 13, 5), float32] */;
  %868 = cast(%var_2271, dtype="float64") /* ty=Tensor[(4, 13, 5), float64] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="float64") /* ty=Tensor[(4, 13, 5), float64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %872 = cast(meta[relay.Constant][29] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %873 = reshape(%872, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %874 = @func_1992(%873) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %875 = floor_mod(%870, %871) /* ty=Tensor[(4, 13, 5), float64] */;
  %876 = %874.2;
  (%875, %876, meta[relay.Constant][29] /* ty=Tensor[(300), float64] */)
}

def @func_2261() -> (Tensor[(8, 5, 15), float64],) {
  %877 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %878 = %877.0;
  (%878,)
}

def @func_18979() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(352), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %879 = @func_7983() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %880 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %881 = cast(meta[relay.Constant][30] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %882 = reshape(%881, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), float64] */;
  %883 = @func_11079(%882) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %884 = @func_16850() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %885 = @func_16690() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %886 = %879.1;
  %887 = %880.0;
  %888 = %883.0;
  %889 = %884.0;
  %890 = %885.0;
  (%886, %887, %888, meta[relay.Constant][30] /* ty=Tensor[(352), float64] */, %889, %890)
}

def @func_14312() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %891 = @func_8599() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %892 = @func_8918() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %893 = @func_11376() /* ty=Tensor[(8, 5, 15), float64] */;
  %894 = %891.0;
  %895 = %892.0;
  %896 = @func_12010() /* ty=Tensor[(8, 5, 15), float64] */;
  (%893, %894, %895, %896)
}

def @func_8539(%var_8518: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) {
  %897 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %898 = cast(%var_8518, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %899 = reshape(%898, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %900 = @func_3848(%899) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %901 = %897.0;
  %902 = %900.0;
  %903 = @func_4089() /* ty=Tensor[(1, 390), int32] */;
  (%901, %902, %var_8518, %903)
}

def @func_5544() -> (Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) {
  %904 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %905 = asinh(%904) /* ty=Tensor[(1, 8, 11), float32] */;
  %906 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%905, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %910 = cast(%905, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %911 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(1, 8, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 8, 11), float32] */, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %915 = floor_divide(%908, %909) /* ty=Tensor[(?, 8, 11), float32] */;
  %916 = greater(%912, %913) /* ty=Tensor[(?, 8, 11), bool] */;
  %917 = %914.0;
  (%915, %916, %917)
}

def @func_10384() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13193() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  %918 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %919 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %920 = reshape(%919, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %921 = @func_6048(%920) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) */;
  %922 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %923 = %918.0;
  %924 = %921.3;
  %925 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%922, %923, %924, meta[relay.Constant][32] /* ty=Tensor[(104), uint64] */, %925)
}

def @func_15263() -> Tensor[(8, 5, 15), float64] {
  %926 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
  %926.0
}

def @func_14405() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %927 = @func_12827() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %928 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %929 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %930 = %927.1;
  %931 = %928.0;
  %932 = %929.0;
  (%930, %931, %932)
}

def @func_11654() -> Tensor[(8, 5, 15), float64] {
  %933 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %933.0
}

def @func_6766() -> (Tensor[(8, 5, 15), float64],) {
  %934 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
  (%934,)
}

def @func_7084() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %935 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %936 = %935.0;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %938 = reshape(%937, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %939 = @func_1222(%938) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %940 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %941 = %939.1;
  %942 = %940.1;
  (%936, %941, %942)
}

def @func_1667(%var_1660: Tensor[(50, 6), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) {
  %943 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %944 = cast(%var_1660, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
  %945 = cast(%var_1660, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
  %946 = reshape(%944, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %947 = reshape(%945, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %948 = %943.1;
  %949 = @func_324(%946, %947) /* ty=Tensor[(10, 15, 2), float64] */;
  (%948, %949, %var_1660)
}

def @func_17975() -> (Tensor[(8, 5, 15), float64],) {
  %950 = @func_8198() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %951 = %950.0;
  (%951,)
}

def @func_6115() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %952 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %953 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %954 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %955 = %952.0;
  (%953, %954, %955)
}

def @func_2219(%var_2199: Tensor[(10, 15, 2), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) {
  %956 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %957 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 300), float64] */, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %958 = reshape(%957, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
  %959 = @func_1667(%958) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
  %960 = %959.1;
  %961 = cast(%960, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %962 = reshape(%961, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %963 = @func_1725(%962) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %964 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %965 = cast(%960, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %966 = log2(%965) /* ty=Tensor[(10, 15, 2), float32] */;
  %967 = cast(%var_2199, dtype="int64") /* ty=Tensor[(10, 15, 2), int64] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="int64") /* ty=Tensor[(10, 15, 2), int64] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %971 = %956.0;
  %972 = cast(%971, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %973 = reshape(%972, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %974 = @func_1222(%973) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %975 = %963.6;
  %976 = %964.0;
  %977 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %978 = minimum(%969, %970) /* ty=Tensor[(10, 15, 2), int64] */;
  %979 = %974.1;
  (%971, meta[relay.Constant][33] /* ty=Tensor[(1, 300), float64] */, %975, %976, %977, %978, %979)
}

def @func_9282() -> (Tensor[(8, 5, 15), float64],) {
  %980 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %981 = %980.0;
  (%981,)
}

def @func_8099(%var_8071: Tensor[(11, 8, 11), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), uint8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %982 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %983 = @func_6793() /* ty=Tensor[(11, 8, 11), float64] */;
  %984 = cast(%var_8071, dtype="uint8") /* ty=Tensor[(11, 8, 11), uint8] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%983, dtype="uint8") /* ty=Tensor[(11, 8, 11), uint8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %988 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %989 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %990 = %982.1;
  %991 = minimum(%986, %987) /* ty=Tensor[(11, 8, 11), uint8] */;
  %992 = %988.0;
  %993 = %989.0;
  (%990, %991, %992, %993)
}

def @func_11376() -> Tensor[(8, 5, 15), float64] {
  %994 = @func_10202() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) */;
  %994.7
}

def @func_12854() -> (Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) {
  %995 = cast(meta[relay.Constant][34] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %996 = reshape(%995, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %997 = @func_4007(%996) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %998 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %999 = %997.4;
  (%998, %999, meta[relay.Constant][34] /* ty=Tensor[(20), float32] */)
}

def @func_5156() -> (Tensor[(8, 5, 15), float64],) {
  %1000 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_3725() -> (Tensor[(8, 5, 15), float64],) {
  %1002 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1002,)
}

def @func_15760() -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %1003 = @func_6872() /* ty=Tensor[(8, 5, 15), float64] */;
  %1004 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
  (%1003, %1004)
}

def @func_6561() -> Tensor[(8, 5, 15), float64] {
  %1005 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1005.1
}

def @func_2115() -> (Tensor[(8, 5, 15), float64],) {
  %1006 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1007 = %1006.1;
  (%1007,)
}

def @func_7578(%var_7574: Tensor[(1, 2, 16), float64]) -> Tensor[(1, 2, 16), float64] {
  %1008 = cast(%var_7574, dtype="float64") /* ty=Tensor[(1, 2, 16), float64] */;
  log(%1008) /* ty=Tensor[(1, 2, 16), float64] */
}

def @func_9792() -> (Tensor[(8, 5, 15), float64],) {
  %1009 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_17806() -> Tensor[(8, 5, 15), float64] {
  %1011 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1011.0
}

def @func_19718(%var_19686: uint64) -> (Tensor[(8, 5, 15), float64], uint64, Tensor[(20, 108), uint16], Tensor[(8, 5, 15), float64]) {
  %1012 = @func_12827() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1013 = cast(%var_19686, dtype="uint64") /* ty=uint64 */;
  %1014 = cast(meta[relay.Constant][35] /* ty=Tensor[(20, 108), uint64] */, dtype="uint64") /* ty=Tensor[(20, 108), uint64] */;
  %1015 = cast(meta[relay.Constant][35] /* ty=Tensor[(20, 108), uint64] */, dtype="uint64") /* ty=Tensor[(20, 108), uint64] */;
  %1016 = reshape(%1013, newshape=[]) /* ty=uint64 */;
  %1017 = reshape(%1014, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), uint64] */;
  %1018 = reshape(%1015, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), uint64] */;
  %1019 = @func_1562(%1016, %1017, %1018) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */;
  %1020 = %1019.0;
  %1021 = cast(%1020, dtype="uint16") /* ty=Tensor[(15, 9, 16), uint16] */;
  %1022 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(20, 108), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1023 = cast(meta[relay.Constant][35] /* ty=Tensor[(20, 108), uint64] */, dtype="uint16") /* ty=Tensor[(20, 108), uint16] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1025 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1026 = %1012.1;
  %1027 = right_shift(%1023, %1024) /* ty=Tensor[(20, 108), uint16] */;
  %1028 = %1025.0;
  (%1026, %var_19686, %1027, %1028)
}

def @func_17864() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1029 = @func_7275() /* ty=Tensor[(8, 5, 15), float64] */;
  %1030 = @func_16385() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1029, %1030)
}

def @func_13775() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1031 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1032 = @func_12222() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1033 = %1031.0;
  %1034 = %1032.0;
  (%1033, %1034)
}

def @func_13900() -> Tensor[(8, 5, 15), float64] {
  %1035 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1035.0
}

def @func_2653() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1036 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1037 = @func_2401() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1038 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %1039 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1040 = %1036.1;
  %1041 = %1037.1;
  %1042 = %1038.0;
  %1043 = %1039.0;
  (%1040, %1041, %1042, %1043)
}

def @func_12351() -> (Tensor[(9, 3, 4), float32],) {
  %1044 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %1045 = exp(%1044) /* ty=Tensor[(9, 3, 4), float32] */;
  (%1045,)
}

def @func_10472() -> (Tensor[(8, 5, 15), float64],) {
  %1046 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_16850() -> (Tensor[(8, 5, 15), float64],) {
  %1048 = @func_4926() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_18886() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1050 = @func_18371() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1051 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1052 = @func_14058() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1053 = %1050.1;
  %1054 = %1051.0;
  %1055 = %1052.1;
  (%1053, %1054, %1055)
}

def @func_15976() -> (Tensor[(8, 5, 15), float64],) {
  %1056 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1056,)
}

def @func_11894() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1057 = @func_9890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1058 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1059 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1060 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1061 = %1057.0;
  %1062 = %1058.0;
  %1063 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %1064 = %1059.0;
  %1065 = %1060.0;
  (%1061, %1062, %1063, %1064, %1065)
}

def @func_11604() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1066 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1067 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %1068 = %1066.2;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_10729() -> Tensor[(8, 5, 15), float64] {
  %1070 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1070.0
}

def @func_8599() -> (Tensor[(8, 5, 15), float64],) {
  %1071 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_11813() -> Tensor[(8, 5, 15), float64] {
  %1073 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1073.1
}

def @func_8165() -> (Tensor[(8, 5, 15), float64],) {
  %1074 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1074,)
}

def @func_19195(%var_19179: Tensor[(9, 3, 7), uint32]) -> (Tensor[(9, 3, 7), bool],) {
  %1075 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 3, 7), uint32] */, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %1076 = cast(%var_19179, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %1077 = greater_equal(%1075, %1076) /* ty=Tensor[(9, 3, 7), bool] */;
  (%1077,)
}

def @func_19224(%var_19203: Tensor[(11, 1, 8), uint8], %var_19204: Tensor[(11, 10, 8), uint8], %var_19218: Tensor[(11, 10, 8), uint8]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float32]) {
  %1078 = cast(%var_19203, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
  %1079 = cast(%var_19204, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
  %1080 = cast(%var_19218, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %1081 = shape_of(%var_19204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(%var_19204, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1084 = greater_equal(%1078, %1079) /* ty=Tensor[(11, 10, 8), bool] */;
  %1085 = floor_mod(%1082, %1083) /* ty=Tensor[(11, 10, 8), float32] */;
  (%1084, %1085)
}

def @func_4257() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1086 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1087 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  %1088 = %1086.1;
  (%1087, %1088)
}

def @func_2675() -> Tensor[(8, 5, 15), float64] {
  @func_2138() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8844() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1089 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1090 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
  %1091 = %1089.0;
  %1092 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  %1093 = %1090.0;
  (%1091, %1092, %1093)
}

def @func_177(%var_162: Tensor[(11, 8, 11), int64], %var_163: Tensor[(11, 8, 11), int64]) -> (Tensor[(11, 8, 11), int64],) {
  %1094 = cast(%var_163, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1095 = shape_of(%var_162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(%var_162, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1098 = bitwise_and(%1096, %1097) /* ty=Tensor[(11, 8, 11), int64] */;
  (%1098,)
}

def @func_9264() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1099 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1100 = cast(meta[relay.Constant][38] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1101 = reshape(%1100, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
  %1102 = @func_1667(%1101) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
  %1103 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1104 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1105 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1106 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %1107 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  %1108 = %1099.2;
  %1109 = %1102.0;
  %1110 = %1103.2;
  %1111 = @func_7454() /* ty=Tensor[(8, 5, 15), float64] */;
  %1112 = %1104.0;
  %1113 = %1105.0;
  (%1106, %1107, %1108, %1109, meta[relay.Constant][38] /* ty=Tensor[(300), float64] */, %1110, %1111, %1112, %1113)
}

def @func_6753() -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1114 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %1115 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1116 = %1114.3;
  %1117 = %1115.0;
  %1118 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1116, %1117, %1118)
}

def @func_8918() -> (Tensor[(8, 5, 15), float64],) {
  %1119 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1119,)
}

def @func_14665() -> (Tensor[(8, 5, 15), float64],) {
  %1120 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1121 = %1120.0;
  (%1121,)
}

def @func_1143(%var_955: Tensor[(4, 9, 9), float32], %var_961: Tensor[(390), int32], %var_972: Tensor[(968, 1), int64], %var_1078: Tensor[(4, 9, 9), float32], %var_1112: Tensor[(300), float64]) -> (Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) {
  %1122 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1123 = reshape(%1122, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %1124 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %1125 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %1126 = reshape(%1124, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1127 = reshape(%1125, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1128 = @func_177(%1126, %1127) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1129 = %1128.0;
  %1130 = cast(%1129, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1131 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %1132 = reshape(%1130, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1133 = reshape(%1131, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1134 = @func_177(%1132, %1133) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1135 = cast(%1129, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1136 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %1137 = reshape(%1135, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1138 = reshape(%1136, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1139 = @func_177(%1137, %1138) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1140 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1141 = reshape(%1140, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %1142 = cast(%var_955, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %1143 = acos(%1142) /* ty=Tensor[(4, 9, 9), float32] */;
  %1144 = cast(%1143, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %1145 = cos(%1144) /* ty=Tensor[(4, 9, 9), float32] */;
  %1146 = cast(%var_1078, dtype="uint32") /* ty=Tensor[(4, 9, 9), uint32] */;
  %1147 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1148 = cast(%1145, dtype="uint32") /* ty=Tensor[(4, 9, 9), uint32] */;
  %1149 = dyn.reshape(%1146, %1147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1150 = cast(%var_1112, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1151 = cast(%var_1112, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1152 = reshape(%1150, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1153 = reshape(%1151, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1154 = cast(%1143, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %1155 = sqrt(%1154) /* ty=Tensor[(4, 9, 9), float32] */;
  %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %1157 = cast(%1129, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1158 = %1134.0;
  %1159 = cast(%1158, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %1160 = reshape(%1157, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1161 = reshape(%1159, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1162 = @func_177(%1160, %1161) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1163 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1164 = reshape(%1163, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %1165 = @func_471(%1164) /* ty=Tensor[(13, 6, 5), int32] */;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %1167 = @func_471(%1123) /* ty=Tensor[(13, 6, 5), int32] */;
  %1168 = %1139.0;
  %1169 = @func_471(%1141) /* ty=Tensor[(13, 6, 5), int32] */;
  %1170 = maximum(%1148, %1149) /* ty=Tensor[(4, 9, 9), uint32] */;
  %1171 = @func_324(%1152, %1153) /* ty=Tensor[(10, 15, 2), float64] */;
  %1172 = exp(%1156) /* ty=Tensor[(4, 9, 9), float32] */;
  %1173 = %1162.0;
  %1174 = acos(%1166) /* ty=Tensor[(13, 6, 5), float64] */;
  (%1167, %var_961, %1129, %var_972, %1158, %1168, %1169, %1170, %1171, %var_1112, %1172, %1173, %1174)
}

def @func_16020() -> Tensor[(?, 8, 11), float32] {
  %1175 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
  %1175.0
}

def @func_13972() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1176 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1177 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1178 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1179 = %1176.0;
  %1180 = %1177.0;
  %1181 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  %1182 = %1178.1;
  (%1179, %1180, %1181, %1182)
}

def @func_1945() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_3614(%var_3594: Tensor[(6, 12, 15), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1183 = cast(%var_3594, dtype="float32") /* ty=Tensor[(6, 12, 15), float32] */;
  %1184 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1185 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1186 = acosh(%1183) /* ty=Tensor[(6, 12, 15), float32] */;
  %1187 = %1184.1;
  %1188 = %1185.0;
  (%1186, %1187, %1188)
}

def @func_18639() -> Tensor[(8, 5, 15), float64] {
  %1189 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1189.4
}

def @func_3750() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1190 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1191 = @func_2261() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1192 = @func_2771() /* ty=Tensor[(8, 5, 15), float64] */;
  %1193 = %1190.0;
  %1194 = %1191.0;
  (%1192, %1193, %1194)
}

def @func_9851() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
  %1195 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1196 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
  %1197 = %1195.0;
  %1198 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  %1199 = %1196.4;
  (%1197, %1198, %1199)
}

def @func_15170(%var_15165: uint32) -> (Tensor[(7, 8, 12), uint32],) {
  %1200 = cast(%var_15165, dtype="uint32") /* ty=uint32 */;
  %1201 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 8, 12), uint32] */, dtype="uint32") /* ty=Tensor[(7, 8, 12), uint32] */;
  %1202 = bitwise_xor(%1200, %1201) /* ty=Tensor[(7, 8, 12), uint32] */;
  (%1202,)
}

def @func_6793() -> Tensor[(11, 8, 11), float64] {
  %1203 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %1203.0
}

def @func_12679() -> Tensor[(8, 5, 15), float64] {
  %1204 = @func_11635() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1204.0
}

def @func_12222() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1205 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %1206 = %1205.0;
  %1207 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1206, %1207)
}

def @func_9416(%var_9369: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float32]) {
  %1208 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
  %1209 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1210 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1211 = cast(%var_9369, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1212 = cast(%var_9369, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1213 = reshape(%1211, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1214 = reshape(%1212, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1215 = @func_324(%1213, %1214) /* ty=Tensor[(10, 15, 2), float64] */;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %1217 = %1208.0;
  %1218 = %1209.1;
  %1219 = %1210.1;
  %1220 = cosh(%1216) /* ty=Tensor[(10, 15, 2), float32] */;
  (%1217, %var_9369, %1218, %1219, %1220)
}

def @func_10962(%var_10929: int32) -> (Tensor[(14, 10, 9), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1221 = cast(%var_10929, dtype="bool") /* ty=bool */;
  %1222 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 10, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 9), bool] */;
  %1223 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1224 = greater(%1221, %1222) /* ty=Tensor[(14, 10, 9), bool] */;
  %1225 = @func_5417() /* ty=Tensor[(8, 5, 15), float64] */;
  %1226 = %1223.0;
  (%1224, %1225, %1226)
}

def @func_7366() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1227 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1228 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1229 = @func_1945() /* ty=Tensor[(8, 5, 15), float64] */;
  %1230 = %1227.0;
  %1231 = %1228.0;
  %1232 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1229, %1230, %1231, %1232)
}

def @func_1725(%var_1697: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) {
  %1233 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1234 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1235 = cast(%var_1697, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1236 = cast(%var_1697, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1237 = reshape(%1235, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1238 = reshape(%1236, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1239 = %1233.0;
  %1240 = cast(%1239, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %1241 = reshape(%1240, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %1242 = @func_1222(%1241) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1243 = %1242.0;
  %1244 = cast(%1243, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %1245 = reshape(%1244, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %1246 = @func_1222(%1245) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1247 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  %1248 = %1234.0;
  %1249 = @func_324(%1237, %1238) /* ty=Tensor[(10, 15, 2), float64] */;
  %1250 = %1246.0;
  (%1239, %1247, %1248, %1249, %var_1697, %1243, %1250)
}

def @func_11769() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %1251 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1252 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1253 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1254 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1255 = %1251.0;
  %1256 = %1252.1;
  %1257 = %1253.0;
  %1258 = %1254.0;
  %1259 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
  (%1255, %1256, %1257, %1258, %1259)
}

def @func_14576(%var_14564: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1260 = cast(%var_14564, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1261 = reshape(%1260, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1262 = @func_13386(%1261) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) */;
  %1263 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1264 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %1265 = %1262.0;
  %1266 = %1263.0;
  (%1264, %1265, %var_14564, %1266)
}

def @func_17132() -> (Tensor[(300), float64],) {
  %1267 = @func_11274() /* ty=(Tensor[(300), float64],) */;
  %1268 = %1267.0;
  (%1268,)
}

def @func_19117() -> (Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32]) {
  %1269 = @func_13193() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) */;
  %1270 = @func_10253() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) */;
  %1271 = %1269.1;
  %1272 = %1270.2;
  (%1271, %1272)
}

def @func_19383(%var_19363: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %1273 = @func_16124() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1274 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1275 = cast(%var_19363, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1276 = reshape(%1275, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %1277 = @func_3848(%1276) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %1278 = %1273.0;
  %1279 = %1274.2;
  %1280 = %1277.0;
  (%1278, %1279, %1280, %var_19363)
}

def @func_7275() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_11173(%var_11128: Tensor[(5, 16, 3), bool], %var_11129: Tensor[(5, 16, 3), bool]) -> (Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) {
  %1281 = @func_10253() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) */;
  %1282 = cast(%var_11129, dtype="bool") /* ty=Tensor[(5, 16, 3), bool] */;
  %1283 = shape_of(%var_11128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(%var_11128, dtype="bool") /* ty=Tensor[(5, 16, 3), bool] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1286 = logical_or(%1284, %1285) /* ty=Tensor[(5, 16, 3), bool] */;
  %1287 = cast(%1286, dtype="float32") /* ty=Tensor[(5, 16, 3), float32] */;
  %1288 = %1281.0;
  %1289 = cos(%1287) /* ty=Tensor[(5, 16, 3), float32] */;
  %1290 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1288, %1289, %1290)
}

def @func_3271() -> (Tensor[(8, 5, 15), float64],) {
  %1291 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1292 = %1291.0;
  (%1292,)
}

def @func_1958() -> (Tensor[(8, 5, 15), float64],) {
  %1293 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_1529(%var_1514: uint32, %var_1515: Tensor[(10, 10, 6), uint32]) -> (Tensor[(10, 10, 6), bool],) {
  %1295 = cast(%var_1514, dtype="bool") /* ty=bool */;
  %1296 = cast(%var_1515, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
  %1297 = less(%1295, %1296) /* ty=Tensor[(10, 10, 6), bool] */;
  (%1297,)
}

def @func_8688() -> Tensor[(8, 5, 15), float64] {
  %1298 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1298.1
}

def @func_17601(%var_17596: Tensor[(7, 390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), float64], Tensor[(7, 390), uint64]) {
  %1299 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1300 = @func_10840() /* ty=Tensor[(7, 390), int32] */;
  %1301 = cast(%1300, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %1302 = sin(%1301) /* ty=Tensor[(7, 390), float64] */;
  %1303 = cast(%1302, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %1304 = cast(%var_17596, dtype="uint64") /* ty=Tensor[(7, 390), uint64] */;
  %1305 = shape_of(%1300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1306 = cast(%1300, dtype="uint64") /* ty=Tensor[(7, 390), uint64] */;
  %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1308 = %1299.1;
  %1309 = log2(%1303) /* ty=Tensor[(7, 390), float64] */;
  %1310 = bitwise_and(%1306, %1307) /* ty=Tensor[(7, 390), uint64] */;
  (%1308, %1309, %1310)
}

def @func_17702() -> Tensor[(8, 5, 15), float64] {
  @func_12707() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_10038() -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) {
  %1311 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %1312 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1313 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1315 = bitwise_or(%1313, %1314) /* ty=Tensor[(5, 60), int32] */;
  %1316 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %1317 = reshape(%1316, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %1318 = @func_1931(%1317) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */;
  %1319 = %1318.2;
  %1320 = cast(%1319, dtype="bool") /* ty=Tensor[(300), bool] */;
  %1321 = shape_of(%1315, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1322 = cast(%1315, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
  %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1324 = cast(%1319, dtype="int32") /* ty=Tensor[(300), int32] */;
  %1325 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1326 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1328 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %1329 = less_equal(%1322, %1323) /* ty=Tensor[(5, 60), bool] */;
  %1330 = logical_xor(%1326, %1327) /* ty=Tensor[(5, 60), int32] */;
  (%1328, %1329, %1330)
}

def @func_18338(%var_18172: Tensor[(104), uint64], %var_18213: Tensor[(968), int64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(968), int64], Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(528), bool], Tensor[(11, 8, 11), float64], Tensor[(24, 22), bool], Tensor[(8, 5, 15), float64]) {
  %1331 = @func_12222() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1332 = cast(meta[relay.Constant][43] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
  %1333 = reshape(%1332, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float64] */;
  %1334 = @func_16657(%1333) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1335 = cast(%var_18172, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1336 = reshape(%1335, newshape=[2, 52]) /* ty=Tensor[(2, 52), uint64] */;
  %1337 = @func_13299(%1336) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) */;
  %1338 = @func_11769() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %1339 = @func_16850() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1340 = cast(meta[relay.Constant][44] /* ty=Tensor[(528), bool] */, dtype="bool") /* ty=Tensor[(528), bool] */;
  %1341 = reshape(%1340, newshape=[4, 12, 11]) /* ty=Tensor[(4, 12, 11), bool] */;
  %1342 = @func_4533(%1341) /* ty=(Tensor[(4, 12, 11), bool],) */;
  %1343 = cast(%var_18213, dtype="int64") /* ty=Tensor[(968), int64] */;
  %1344 = cast(%var_18213, dtype="int64") /* ty=Tensor[(968), int64] */;
  %1345 = reshape(%1343, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1346 = reshape(%1344, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1347 = @func_177(%1345, %1346) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1348 = %1347.0;
  %1349 = cast(%1348, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %1350 = log(%1349) /* ty=Tensor[(11, 8, 11), float64] */;
  %1351 = cast(%1350, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %1352 = @func_11349() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1353 = %1331.1;
  %1354 = %1334.4;
  %1355 = %1337.0;
  %1356 = %1338.2;
  %1357 = %1339.0;
  %1358 = %1342.0;
  %1359 = log2(%1351) /* ty=Tensor[(11, 8, 11), float64] */;
  %1360 = %1352.2;
  %1361 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1353, %1354, meta[relay.Constant][43] /* ty=Tensor[(343), float64] */, %1355, %var_18172, %1356, %var_18213, %1357, %1358, meta[relay.Constant][44] /* ty=Tensor[(528), bool] */, %1359, %1360, %1361)
}

def @func_9890() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1362 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1363 = %1362.0;
  %1364 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1363, %1364)
}

def @func_4067() -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %1365 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1366 = cast(meta[relay.Constant][45] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1367 = reshape(%1366, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %1368 = @func_3848(%1367) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %1369 = %1365.0;
  %1370 = %1368.0;
  (%1369, %1370, meta[relay.Constant][45] /* ty=Tensor[(104), uint64] */)
}

def @func_9502(%var_9458: Tensor[(16, 9, 8), bool]) -> (Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1371 = cast(%var_9458, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %1372 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(16, 9, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1373 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 9, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1375 = logical_and(%1373, %1374) /* ty=Tensor[(16, 9, 8), bool] */;
  %1376 = cast(%1375, dtype="int8") /* ty=Tensor[(16, 9, 8), int8] */;
  %1377 = shape_of(%var_9458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1378 = cast(%var_9458, dtype="int8") /* ty=Tensor[(16, 9, 8), int8] */;
  %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1380 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1381 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1382 = maximum(%1378, %1379) /* ty=Tensor[(16, 9, 8), int8] */;
  %1383 = %1380.0;
  %1384 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  %1385 = %1381.1;
  (%1382, %1383, %1384, %1385)
}

def @func_13676() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
  %1386 = @func_9792() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1387 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1388 = @func_11982() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1389 = cast(meta[relay.Constant][47] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1390 = reshape(%1389, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %1391 = @func_12759(%1390) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) */;
  %1392 = %1386.0;
  %1393 = %1387.0;
  %1394 = %1388.1;
  %1395 = %1391.0;
  (%1392, %1393, %1394, %1395, meta[relay.Constant][47] /* ty=Tensor[(390), int32] */)
}

def @func_11982() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1396 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1397 = %1396.0;
  %1398 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1397, %1398)
}

def @func_4926() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1399 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1400 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1401 = %1399.0;
  %1402 = %1400.0;
  (%1401, %1402)
}

def @func_14445(%var_14430: Tensor[(12, 6, 2), uint64]) -> Tensor[(12, 6, 2), uint64] {
  %1403 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 6, 2), uint64] */, dtype="uint64") /* ty=Tensor[(12, 6, 2), uint64] */;
  %1404 = shape_of(%var_14430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1405 = cast(%var_14430, dtype="uint64") /* ty=Tensor[(12, 6, 2), uint64] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1405, %1406) /* ty=Tensor[(12, 6, 2), uint64] */
}

def @func_13993() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1407 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1408 = @func_12679() /* ty=Tensor[(8, 5, 15), float64] */;
  %1409 = %1407.0;
  (%1408, %1409)
}

def @func_16007() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(945), float32]) {
  %1410 = @func_12339() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1411 = cast(meta[relay.Constant][49] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1412 = cast(meta[relay.Constant][49] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1413 = reshape(%1411, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %1414 = reshape(%1412, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %1415 = @func_9643(%1413, %1414) /* ty=(Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1416 = %1410.0;
  %1417 = %1415.5;
  (%1416, %1417, meta[relay.Constant][49] /* ty=Tensor[(945), float32] */)
}

def @func_1778() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1418 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  %1419 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1418, %1419)
}

def @func_6248() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1420 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1421 = %1420.0;
  %1422 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1421, %1422)
}

def @func_15597() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %1423 = cast(meta[relay.Constant][50] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1424 = reshape(%1423, newshape=[2, 52]) /* ty=Tensor[(2, 52), uint64] */;
  %1425 = @func_13299(%1424) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) */;
  %1426 = @func_13108() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1427 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1428 = @func_13775() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1429 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1430 = cast(meta[relay.Constant][51] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1431 = reshape(%1430, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %1432 = @func_13386(%1431) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) */;
  %1433 = @func_6561() /* ty=Tensor[(8, 5, 15), float64] */;
  %1434 = %1425.1;
  %1435 = %1426.0;
  %1436 = %1427.0;
  %1437 = %1428.0;
  %1438 = %1429.0;
  %1439 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  %1440 = %1432.1;
  (%1433, %1434, meta[relay.Constant][50] /* ty=Tensor[(104), uint64] */, %1435, %1436, %1437, %1438, %1439, %1440, meta[relay.Constant][51] /* ty=Tensor[(300), float64] */)
}

def @func_11675() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(105, 9), float32]) {
  %1441 = @func_8986() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1442 = cast(meta[relay.Constant][52] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
  %1443 = cast(meta[relay.Constant][52] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
  %1444 = reshape(%1442, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %1445 = reshape(%1443, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %1446 = @func_9643(%1444, %1445) /* ty=(Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1447 = %1441.0;
  %1448 = @func_7549() /* ty=Tensor[(8, 5, 15), float64] */;
  %1449 = %1446.3;
  (%1447, %1448, %1449, meta[relay.Constant][52] /* ty=Tensor[(105, 9), float32] */)
}

def @func_16147() -> (Tensor[(8, 5, 15), float64],) {
  %1450 = @func_15310() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1450,)
}

def @func_7423() -> (Tensor[(8, 5, 15), float64],) {
  %1451 = @func_7148() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1452 = %1451.1;
  (%1452,)
}

def @func_9064() -> Tensor[(8, 5, 15), float64] {
  %1453 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1453.0
}

def @func_18900() -> Tensor[(8, 5, 15), float64] {
  %1454 = @func_6975() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1454.1
}

def @main(%var_19863: Tensor[(4, 13, 8), uint64]) -> Tensor[(4, 13, 8), uint64] {
  %1455 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 13, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 13, 8), uint64] */;
  %1456 = shape_of(%var_19863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1457 = cast(%var_19863, dtype="uint64") /* ty=Tensor[(4, 13, 8), uint64] */;
  %1458 = dyn.reshape(%1455, %1456, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%1457, %1458) /* ty=Tensor[(4, 13, 8), uint64] */
}

def @func_4007(%var_3947: Tensor[(2, 2, 5), float32]) -> (Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) {
  %1459 = cast(%var_3947, dtype="float32") /* ty=Tensor[(2, 2, 5), float32] */;
  %1460 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1461 = cast(meta[relay.Constant][54] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1462 = reshape(%1461, newshape=[4, 13, 5]) /* ty=Tensor[(4, 13, 5), float32] */;
  %1463 = @func_2318(%1462) /* ty=(Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) */;
  %1464 = @func_2653() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1465 = cos(%1459) /* ty=Tensor[(2, 2, 5), float32] */;
  %1466 = %1460.1;
  %1467 = %1463.0;
  %1468 = %1464.1;
  (%1465, %1466, %1467, meta[relay.Constant][54] /* ty=Tensor[(260), float32] */, %1468)
}

def @func_2440() -> (Tensor[(8, 5, 15), float64],) {
  %1469 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1470 = %1469.0;
  (%1470,)
}

def @func_14453() -> Tensor[(8, 5, 15), float64] {
  %1471 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1471.0
}

def @func_14983(%var_14958: Tensor[(324), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1472 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1473 = cast(%var_14958, dtype="float32") /* ty=Tensor[(324), float32] */;
  %1474 = cast(meta[relay.Constant][55] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1475 = reshape(%1473, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %1476 = reshape(%1474, newshape=[10, 30]) /* ty=Tensor[(10, 30), float64] */;
  %1477 = @func_8471(%1475, %1476) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) */;
  %1478 = @func_14665() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1479 = %1472.0;
  %1480 = %1477.1;
  %1481 = %1478.0;
  (%1479, %1480, %var_14958, meta[relay.Constant][55] /* ty=Tensor[(300), float64] */, %1481)
}

def @func_3583() -> Tensor[(8, 5, 15), float64] {
  %1482 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1482.1
}

def @func_4843(%var_4782: Tensor[(12, 11, 9), int8], %var_4828: Tensor[(300), float32]) -> (Tensor[(12, 11, 9), bool], Tensor[(12, 11, 9), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  %1483 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 11, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %1484 = shape_of(%var_4782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1485 = cast(%var_4782, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %1486 = dyn.reshape(%1483, %1484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1487 = cast(%var_4782, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %1488 = tan(%1487) /* ty=Tensor[(12, 11, 9), float32] */;
  %1489 = cast(%1488, dtype="float64") /* ty=Tensor[(12, 11, 9), float64] */;
  %1490 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1491 = cast(%var_4828, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1492 = reshape(%1491, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float32] */;
  %1493 = @func_2219(%1492) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) */;
  %1494 = less_equal(%1485, %1486) /* ty=Tensor[(12, 11, 9), bool] */;
  %1495 = cosh(%1489) /* ty=Tensor[(12, 11, 9), float64] */;
  %1496 = %1490.1;
  %1497 = %1493.2;
  (%1494, %1495, %1496, %1497, %var_4828)
}

def @func_14840(%var_14823: Tensor[(260), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(260), float32]) {
  %1498 = @func_7227() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1499 = cast(%var_14823, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1500 = reshape(%1499, newshape=[4, 13, 5]) /* ty=Tensor[(4, 13, 5), float32] */;
  %1501 = @func_2318(%1500) /* ty=(Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) */;
  %1502 = %1498.0;
  %1503 = %1501.1;
  (%1502, %1503, %var_14823)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11493() -> (Tensor[(8, 5, 15), float64],) {
  %0 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
  (%0,)
}

def @func_3483() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15762() -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  @func_15760() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */
}

def @func_10729() -> Tensor[(8, 5, 15), float64] {
  %1 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1.0
}

def @func_10253() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) {
  %2 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %3 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
  %4 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %5 = %2.0;
  %6 = %3.0;
  %7 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%4, %5, %6, %7)
}

def @func_14313() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %14 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %8 = @func_8599() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %9 = @func_8918() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %10 = @func_11376() /* ty=Tensor[(8, 5, 15), float64] */;
    %11 = %8.0;
    %12 = %9.0;
    %13 = @func_12010() /* ty=Tensor[(8, 5, 15), float64] */;
    (%10, %11, %12, %13)
  };
  %14() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_4908() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %15 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %16 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %17 = %15.1;
  %18 = %16.0;
  (%17, %18)
}

def @func_2466() -> Tensor[(8, 5, 15), float64] {
  @func_2464() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_14750() -> Tensor[(8, 5, 15), float64] {
  @func_14748() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_177(%var_162: Tensor[(11, 8, 11), int64], %var_163: Tensor[(11, 8, 11), int64]) -> (Tensor[(11, 8, 11), int64],) {
  %19 = cast(%var_163, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %20 = shape_of(%var_162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_162, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %23 = bitwise_and(%21, %22) /* ty=Tensor[(11, 8, 11), int64] */;
  (%23,)
}

def @func_14998() -> Tensor[(8, 5, 15), float64] {
  %24 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1945() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %24() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_10474() -> (Tensor[(8, 5, 15), float64],) {
  @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_5266() -> (Tensor[(8, 5, 15), float64],) {
  %27 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %25 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %26 = %25.1;
    (%26,)
  };
  %27() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_5666() -> (Tensor[(8, 5, 15), float64],) {
  @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_9565() -> Tensor[(8, 5, 15), float64] {
  %28 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_6561() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %28() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5556() -> (Tensor[(8, 5, 15), float64],) {
  %31 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %29 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %30 = %29.0;
    (%30,)
  };
  %31() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_3110() -> (Tensor[(8, 5, 15), float64],) {
  %32 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %33 = %32.0;
  (%33,)
}

def @func_19118() -> (Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32]) {
  %38 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32]) {
    %34 = @func_13193() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) */;
    %35 = @func_10253() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) */;
    %36 = %34.1;
    %37 = %35.2;
    (%36, %37)
  };
  %38() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32]) */
}

def @func_12455(%var_12445: Tensor[(13, 15, 8), float32]) -> (Tensor[(13, 15, 8), float32], Tensor[(8, 5, 15), float64]) {
  %39 = cast(%var_12445, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %40 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %41 = log2(%39) /* ty=Tensor[(13, 15, 8), float32] */;
  %42 = %40.0;
  (%41, %42)
}

def @func_12223() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %46 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %43 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
    %44 = %43.0;
    %45 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
    (%44, %45)
  };
  %46() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_7190() -> Tensor[(300), float64] {
  @func_7188() /* ty=Tensor[(300), float64] */
}

def @func_11533() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) {
  @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_5573() -> Tensor[(8, 5, 15), float64] {
  @func_4168() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1591() -> (Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_7983() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %47 = @func_7686() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %48 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %49 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %50 = %47.1;
  %51 = @func_4204() /* ty=Tensor[(8, 5, 15), float64] */;
  %52 = %48.0;
  %53 = %49.2;
  (%50, %51, %52, %53)
}

def @func_17648(%var_17646: Tensor[(8, 15, 5), int64], %var_17647: Tensor[(1152), bool]) -> (Tensor[(8, 15, 5), int64], Tensor[(8, 5, 15), float64], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
  %65 = fn (%var_17628: Tensor[(8, 15, 5), int64], %var_17633: Tensor[(1152), bool]) -> (Tensor[(8, 15, 5), int64], Tensor[(8, 5, 15), float64], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
    %54 = cast(%var_17628, dtype="int64") /* ty=Tensor[(8, 15, 5), int64] */;
    %55 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 15, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %56 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 15, 5), int64] */, dtype="int64") /* ty=Tensor[(8, 15, 5), int64] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %58 = cast(%var_17633, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %59 = reshape(%58, newshape=[1152]) /* ty=Tensor[(1152), bool] */;
    %60 = @func_12947(%59) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) */;
    %61 = @func_11894() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %62 = logical_xor(%56, %57) /* ty=Tensor[(8, 15, 5), int64] */;
    %63 = %60.4;
    %64 = %61.4;
    (%62, %63, %var_17633, %64)
  };
  %65(%var_17646, %var_17647) /* ty=(Tensor[(8, 15, 5), int64], Tensor[(8, 5, 15), float64], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_16009() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(945), float32]) {
  @func_16007() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(945), float32]) */
}

def @func_3614(%var_3594: Tensor[(6, 12, 15), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %66 = cast(%var_3594, dtype="float32") /* ty=Tensor[(6, 12, 15), float32] */;
  %67 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %68 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %69 = acosh(%66) /* ty=Tensor[(6, 12, 15), float32] */;
  %70 = %67.1;
  %71 = %68.0;
  (%69, %70, %71)
}

def @func_8102(%var_8100: Tensor[(11, 8, 11), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), uint8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_8099(%var_8100) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), uint8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_7368() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_7366() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_9695() -> Tensor[(8, 5, 15), float64] {
  %72 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %72() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1945() -> Tensor[(8, 5, 15), float64] {
  @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_12867() -> (Tensor[(8, 5, 15), float64],) {
  %74 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %73 = @func_10891() /* ty=Tensor[(8, 5, 15), float64] */;
    (%73,)
  };
  %74() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_18120() -> Tensor[(8, 5, 15), float64] {
  @func_18118() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16450(%var_16448: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_16447(%var_16448) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18658() -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) {
  %78 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) {
    %75 = @func_13251() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %76 = %75.0;
    %77 = @func_10840() /* ty=Tensor[(7, 390), int32] */;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) */
}

def @func_1533(%var_1531: uint32, %var_1532: Tensor[(10, 10, 6), uint32]) -> (Tensor[(10, 10, 6), bool],) {
  @func_1529(%var_1531, %var_1532) /* ty=(Tensor[(10, 10, 6), bool],) */
}

def @func_1799() -> (Tensor[(8, 5, 15), float64],) {
  %81 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %79 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %80 = %79.0;
    (%80,)
  };
  %81() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_18341(%var_18339: Tensor[(104), uint64], %var_18340: Tensor[(968), int64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(968), int64], Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(528), bool], Tensor[(11, 8, 11), float64], Tensor[(24, 22), bool], Tensor[(8, 5, 15), float64]) {
  %113 = fn (%var_18172: Tensor[(104), uint64], %var_18213: Tensor[(968), int64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(968), int64], Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(528), bool], Tensor[(11, 8, 11), float64], Tensor[(24, 22), bool], Tensor[(8, 5, 15), float64]) {
    %82 = @func_12222() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
    %84 = reshape(%83, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float64] */;
    %85 = @func_16657(%84) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %86 = cast(%var_18172, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %87 = reshape(%86, newshape=[2, 52]) /* ty=Tensor[(2, 52), uint64] */;
    %88 = @func_13299(%87) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) */;
    %89 = @func_11769() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
    %90 = @func_16850() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %91 = cast(meta[relay.Constant][2] /* ty=Tensor[(528), bool] */, dtype="bool") /* ty=Tensor[(528), bool] */;
    %92 = reshape(%91, newshape=[4, 12, 11]) /* ty=Tensor[(4, 12, 11), bool] */;
    %93 = @func_4533(%92) /* ty=(Tensor[(4, 12, 11), bool],) */;
    %94 = cast(%var_18213, dtype="int64") /* ty=Tensor[(968), int64] */;
    %95 = cast(%var_18213, dtype="int64") /* ty=Tensor[(968), int64] */;
    %96 = reshape(%94, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %97 = reshape(%95, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %98 = @func_177(%96, %97) /* ty=(Tensor[(11, 8, 11), int64],) */;
    %99 = %98.0;
    %100 = cast(%99, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
    %101 = log(%100) /* ty=Tensor[(11, 8, 11), float64] */;
    %102 = cast(%101, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
    %103 = @func_11349() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %104 = %82.1;
    %105 = %85.4;
    %106 = %88.0;
    %107 = %89.2;
    %108 = %90.0;
    %109 = %93.0;
    %110 = log2(%102) /* ty=Tensor[(11, 8, 11), float64] */;
    %111 = %103.2;
    %112 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
    (%104, %105, meta[relay.Constant][1] /* ty=Tensor[(343), float64] */, %106, %var_18172, %107, %var_18213, %108, %109, meta[relay.Constant][2] /* ty=Tensor[(528), bool] */, %110, %111, %112)
  };
  %113(%var_18339, %var_18340) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(968), int64], Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(528), bool], Tensor[(11, 8, 11), float64], Tensor[(24, 22), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_17480() -> Tensor[(11, 8, 11), float64] {
  %114 = fn () -> Tensor[(11, 8, 11), float64] {
    @func_6793() /* ty=Tensor[(11, 8, 11), float64] */
  };
  %114() /* ty=Tensor[(11, 8, 11), float64] */
}

def @func_13571() -> (Tensor[(8, 5, 15), float64],) {
  %115 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %116 = %115.0;
  (%116,)
}

def @func_9065() -> Tensor[(8, 5, 15), float64] {
  %118 = fn () -> Tensor[(8, 5, 15), float64] {
    %117 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %117.0
  };
  %118() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_12353() -> (Tensor[(9, 3, 4), float32],) {
  @func_12351() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_4535(%var_4534: Tensor[(4, 12, 11), bool]) -> (Tensor[(4, 12, 11), bool],) {
  %124 = fn (%var_4526: Tensor[(4, 12, 11), bool]) -> (Tensor[(4, 12, 11), bool],) {
    %119 = cast(%var_4526, dtype="bool") /* ty=Tensor[(4, 12, 11), bool] */;
    %120 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(4, 12, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 12, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 12, 11), bool] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %123 = logical_and(%121, %122) /* ty=Tensor[(4, 12, 11), bool] */;
    (%123,)
  };
  %124(%var_4534) /* ty=(Tensor[(4, 12, 11), bool],) */
}

def @func_7257() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %128 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %125 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %126 = @func_5573() /* ty=Tensor[(8, 5, 15), float64] */;
    %127 = %125.0;
    (%126, %127)
  };
  %128() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14784(%var_14770: Tensor[(13, 3, 4), uint64]) -> (Tensor[(13, 3, 4), bool],) {
  %129 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %130 = shape_of(%var_14770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%var_14770, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = less(%131, %132) /* ty=Tensor[(13, 3, 4), bool] */;
  (%133,)
}

def @func_17357() -> Tensor[(8, 5, 15), float64] {
  @func_17355() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18373() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_18371() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_19081(%var_19079: Tensor[(16, 22), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(16, 22), float64], Tensor[(8, 5, 15), float64]) {
  @func_19078(%var_19079) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(16, 22), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_16341() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %138 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
    %134 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %135 = @func_9064() /* ty=Tensor[(8, 5, 15), float64] */;
    %136 = @func_7188() /* ty=Tensor[(300), float64] */;
    %137 = %134.0;
    (%135, %136, %137)
  };
  %138() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_5396() -> (Tensor[(8, 5, 15), float64],) {
  %139 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %140 = %139.1;
  (%140,)
}

def @func_2550() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13799() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %145 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %141 = @func_9792() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %142 = @func_11493() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %143 = %141.0;
    %144 = %142.0;
    (%143, %144)
  };
  %145() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11275() -> (Tensor[(300), float64],) {
  %150 = fn () -> (Tensor[(300), float64],) {
    %146 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %147 = %146.2;
    %148 = cast(%147, dtype="float64") /* ty=Tensor[(300), float64] */;
    %149 = asin(%148) /* ty=Tensor[(300), float64] */;
    (%149,)
  };
  %150() /* ty=(Tensor[(300), float64],) */
}

def @func_7571() -> (Tensor[(8, 5, 15), float64],) {
  %151 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %152 = %151.1;
  (%152,)
}

def @func_11635() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %153 = @func_9309() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) */;
  %154 = @func_8986() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %155 = %153.0;
  %156 = %154.0;
  (%155, %156)
}

def @func_3272() -> (Tensor[(8, 5, 15), float64],) {
  %159 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %157 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %158 = %157.0;
    (%158,)
  };
  %159() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_1933(%var_1932: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
  %166 = fn (%var_1923: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
    %160 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %161 = cast(%var_1923, dtype="float64") /* ty=Tensor[(300), float64] */;
    %162 = reshape(%161, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %163 = @func_1725(%162) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
    %164 = %160.0;
    %165 = %163.3;
    (%164, %165, %var_1923)
  };
  %166(%var_1932) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */
}

def @func_9892() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_9890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15977() -> (Tensor[(8, 5, 15), float64],) {
  %168 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %167 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
    (%167,)
  };
  %168() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_12856() -> (Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) {
  @func_12854() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) */
}

def @func_19385(%var_19384: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %177 = fn (%var_19363: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
    %169 = @func_16124() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %170 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %171 = cast(%var_19363, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %172 = reshape(%171, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
    %173 = @func_3848(%172) /* ty=(Tensor[(13, 4, 2), uint64],) */;
    %174 = %169.0;
    %175 = %170.2;
    %176 = %173.0;
    (%174, %175, %176, %var_19363)
  };
  %177(%var_19384) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */
}

def @func_17018() -> (Tensor[(8, 5, 15), float64],) {
  @func_17016() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_12762(%var_12760: Tensor[(390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) {
  @func_12759(%var_12760) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) */
}

def @func_17806() -> Tensor[(8, 5, 15), float64] {
  %178 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %178.0
}

def @func_4926() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %179 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %180 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %181 = %179.0;
  %182 = %180.0;
  (%181, %182)
}

def @func_19629() -> Tensor[(8, 5, 15), float64] {
  @func_19627() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_6178() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18888() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_18886() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_3876() -> (Tensor[(8, 5, 15), float64],) {
  %184 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %183 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
    (%183,)
  };
  %184() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_4948() -> Tensor[(8, 5, 15), float64] {
  @func_4946() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_19266() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %188 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %185 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %186 = %185.3;
    %187 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
    (%186, %187)
  };
  %188() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_9284() -> (Tensor[(8, 5, 15), float64],) {
  @func_9282() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_4843(%var_4782: Tensor[(12, 11, 9), int8], %var_4828: Tensor[(300), float32]) -> (Tensor[(12, 11, 9), bool], Tensor[(12, 11, 9), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  %189 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 11, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %190 = shape_of(%var_4782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_4782, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %193 = cast(%var_4782, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %194 = tan(%193) /* ty=Tensor[(12, 11, 9), float32] */;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(12, 11, 9), float64] */;
  %196 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %197 = cast(%var_4828, dtype="float32") /* ty=Tensor[(300), float32] */;
  %198 = reshape(%197, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float32] */;
  %199 = @func_2219(%198) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) */;
  %200 = less_equal(%191, %192) /* ty=Tensor[(12, 11, 9), bool] */;
  %201 = cosh(%195) /* ty=Tensor[(12, 11, 9), float64] */;
  %202 = %196.1;
  %203 = %199.2;
  (%200, %201, %202, %203, %var_4828)
}

def @func_11604() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %204 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %205 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %206 = %204.2;
  %207 = %205.0;
  (%206, %207)
}

def @func_8334() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %208 = @func_7148() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %209 = @func_7454() /* ty=Tensor[(8, 5, 15), float64] */;
  %210 = %208.0;
  (%209, %210)
}

def @func_4768() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
  @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11770() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %220 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
    %211 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %212 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %213 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %214 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %215 = %211.0;
    %216 = %212.1;
    %217 = %213.0;
    %218 = %214.0;
    %219 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
    (%215, %216, %217, %218, %219)
  };
  %220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */
}

def @func_7985() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  @func_7983() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */
}

def @func_8731() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  %221 = @func_6364() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %222 = @func_7983() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %223 = cast(meta[relay.Constant][6] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %224 = reshape(%223, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %225 = @func_1725(%224) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %226 = cast(meta[relay.Constant][6] /* ty=Tensor[(300), float64] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %227 = %221.1;
  %228 = %222.0;
  %229 = %225.5;
  %230 = asinh(%226) /* ty=Tensor[(300), float32] */;
  (%227, %228, %229, %230)
}

def @func_12531() -> Tensor[(8, 5, 15), float64] {
  %232 = fn () -> Tensor[(8, 5, 15), float64] {
    %231 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
    %231.0
  };
  %232() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_15598() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %251 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
    %233 = cast(meta[relay.Constant][7] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %234 = reshape(%233, newshape=[2, 52]) /* ty=Tensor[(2, 52), uint64] */;
    %235 = @func_13299(%234) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) */;
    %236 = @func_13108() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %237 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %238 = @func_13775() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %239 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %240 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %241 = reshape(%240, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %242 = @func_13386(%241) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) */;
    %243 = @func_6561() /* ty=Tensor[(8, 5, 15), float64] */;
    %244 = %235.1;
    %245 = %236.0;
    %246 = %237.0;
    %247 = %238.0;
    %248 = %239.0;
    %249 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
    %250 = %242.1;
    (%243, %244, meta[relay.Constant][7] /* ty=Tensor[(104), uint64] */, %245, %246, %247, %248, %249, %250, meta[relay.Constant][8] /* ty=Tensor[(300), float64] */)
  };
  %251() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */
}

def @func_15312() -> Tensor[(8, 5, 15), float64] {
  @func_15310() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_324(%var_310: Tensor[(10, 15, 2), float64], %var_311: Tensor[(10, 15, 2), float64]) -> Tensor[(10, 15, 2), float64] {
  %252 = cast(%var_311, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %253 = shape_of(%var_310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%var_310, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%254, %255) /* ty=Tensor[(10, 15, 2), float64] */
}

def @func_14361() -> Tensor[(8, 5, 15), float64] {
  %257 = fn () -> Tensor[(8, 5, 15), float64] {
    %256 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %256.1
  };
  %257() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4671() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %262 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %258 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %259 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %260 = %258.0;
    %261 = %259.1;
    (%260, %261)
  };
  %262() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1589() -> (Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  %263 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %264 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %265 = %263.5;
  %266 = %264.0;
  (%265, %266)
}

def @func_2025() -> Tensor[(8, 5, 15), float64] {
  %268 = fn () -> Tensor[(8, 5, 15), float64] {
    %267 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %267.0
  };
  %268() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7276() -> Tensor[(8, 5, 15), float64] {
  %269 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %269() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4766() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
  %270 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 52), uint64] */, dtype="uint64") /* ty=Tensor[(2, 52), uint64] */;
  %271 = reshape(%270, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %272 = @func_3848(%271) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %273 = @func_2401() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %274 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %275 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %276 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %277 = %272.0;
  %278 = %273.1;
  %279 = %274.0;
  (%275, %276, %277, meta[relay.Constant][9] /* ty=Tensor[(2, 52), uint64] */, %278, %279)
}

def @func_4168() -> Tensor[(8, 5, 15), float64] {
  %280 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %280.0
}

def @func_2222(%var_2220: Tensor[(10, 15, 2), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) {
  @func_2219(%var_2220) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) */
}

def @func_17601(%var_17596: Tensor[(7, 390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), float64], Tensor[(7, 390), uint64]) {
  %281 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %282 = @func_10840() /* ty=Tensor[(7, 390), int32] */;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %284 = sin(%283) /* ty=Tensor[(7, 390), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %286 = cast(%var_17596, dtype="uint64") /* ty=Tensor[(7, 390), uint64] */;
  %287 = shape_of(%282, dtype="int32") /* ty=Tensor[(2), int32] */;
  %288 = cast(%282, dtype="uint64") /* ty=Tensor[(7, 390), uint64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %290 = %281.1;
  %291 = log2(%285) /* ty=Tensor[(7, 390), float64] */;
  %292 = bitwise_and(%288, %289) /* ty=Tensor[(7, 390), uint64] */;
  (%290, %291, %292)
}

def @func_1947() -> Tensor[(8, 5, 15), float64] {
  @func_1945() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_9505(%var_9503: Tensor[(16, 9, 8), bool]) -> (Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_9502(%var_9503) /* ty=(Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_16691() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %297 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %293 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %294 = @func_6753() /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %295 = %293.0;
    %296 = %294.1;
    (%295, %296)
  };
  %297() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_2261() -> (Tensor[(8, 5, 15), float64],) {
  %298 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %299 = %298.0;
  (%299,)
}

def @func_8400() -> (Tensor[(11, 8, 11), float64],) {
  %301 = fn () -> (Tensor[(11, 8, 11), float64],) {
    %300 = @func_6793() /* ty=Tensor[(11, 8, 11), float64] */;
    (%300,)
  };
  %301() /* ty=(Tensor[(11, 8, 11), float64],) */
}

def @func_2442() -> (Tensor[(8, 5, 15), float64],) {
  @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_18492() -> Tensor[(8, 5, 15), float64] {
  %302 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %302.0
}

def @func_14699() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_9793() -> (Tensor[(8, 5, 15), float64],) {
  %305 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %303 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %304 = %303.0;
    (%304,)
  };
  %305() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_9952(%var_9901: Tensor[(14, 9, 7), float64], %var_9902: Tensor[(14, 9, 7), float64], %var_9937: Tensor[(104), uint64]) -> (Tensor[(14, 9, 7), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  %306 = cast(%var_9902, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %307 = shape_of(%var_9901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_9901, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %310 = cast(%var_9937, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %311 = reshape(%310, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %312 = @func_8539(%311) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) */;
  %313 = floor_divide(%308, %309) /* ty=Tensor[(14, 9, 7), float64] */;
  %314 = %312.1;
  %315 = @func_9564() /* ty=Tensor[(8, 5, 15), float64] */;
  (%313, %314, %var_9937, %315)
}

def @func_16317() -> Tensor[(8, 5, 15), float64] {
  @func_4946() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1150(%var_1145: Tensor[(4, 9, 9), float32], %var_1146: Tensor[(390), int32], %var_1147: Tensor[(968, 1), int64], %var_1148: Tensor[(4, 9, 9), float32], %var_1149: Tensor[(300), float64]) -> (Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) {
  @func_1143(%var_1145, %var_1146, %var_1147, %var_1148, %var_1149) /* ty=(Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) */
}

def @func_19652(%var_19650: Tensor[(7, 390), int32]) -> (Tensor[(7, 390), float32], Tensor[(7, 390), bool]) {
  @func_19649(%var_19650) /* ty=(Tensor[(7, 390), float32], Tensor[(7, 390), bool]) */
}

def @func_10962(%var_10929: int32) -> (Tensor[(14, 10, 9), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %316 = cast(%var_10929, dtype="bool") /* ty=bool */;
  %317 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 10, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 9), bool] */;
  %318 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %319 = greater(%316, %317) /* ty=Tensor[(14, 10, 9), bool] */;
  %320 = @func_5417() /* ty=Tensor[(8, 5, 15), float64] */;
  %321 = %318.0;
  (%319, %320, %321)
}

def @func_19195(%var_19179: Tensor[(9, 3, 7), uint32]) -> (Tensor[(9, 3, 7), bool],) {
  %322 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 3, 7), uint32] */, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %323 = cast(%var_19179, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %324 = greater_equal(%322, %323) /* ty=Tensor[(9, 3, 7), bool] */;
  (%324,)
}

def @func_10731() -> Tensor[(8, 5, 15), float64] {
  @func_10729() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_328(%var_326: Tensor[(10, 15, 2), float64], %var_327: Tensor[(10, 15, 2), float64]) -> Tensor[(10, 15, 2), float64] {
  @func_324(%var_326, %var_327) /* ty=Tensor[(10, 15, 2), float64] */
}

def @func_19838(%var_19796: Tensor[(144), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(144), uint64], Tensor[(8, 5, 15), float64], Tensor[(12, 6, 2), float32]) {
  %325 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %326 = @func_8165() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %327 = cast(%var_19796, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %328 = reshape(%327, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint64] */;
  %329 = @func_14445(%328) /* ty=Tensor[(12, 6, 2), uint64] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(12, 6, 2), float32] */;
  %331 = %325.4;
  %332 = %326.0;
  %333 = log(%330) /* ty=Tensor[(12, 6, 2), float32] */;
  (%331, %var_19796, %332, %333)
}

def @func_4458(%var_4456: Tensor[(1080), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) {
  @func_4455(%var_4456) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) */
}

def @func_12125() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %337 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %334 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %335 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
    %336 = %334.0;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1435() -> (Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15699(%var_15698: Tensor[(10, 16, 12), float32]) -> (Tensor[(10, 16, 12), float64],) {
  %342 = fn (%var_15689: Tensor[(10, 16, 12), float32]) -> (Tensor[(10, 16, 12), float64],) {
    %338 = cast(%var_15689, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
    %339 = exp(%338) /* ty=Tensor[(10, 16, 12), float32] */;
    %340 = cast(%339, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
    %341 = asinh(%340) /* ty=Tensor[(10, 16, 12), float64] */;
    (%341,)
  };
  %342(%var_15698) /* ty=(Tensor[(10, 16, 12), float64],) */
}

def @func_19198(%var_19196: Tensor[(9, 3, 7), uint32]) -> (Tensor[(9, 3, 7), bool],) {
  @func_19195(%var_19196) /* ty=(Tensor[(9, 3, 7), bool],) */
}

def @func_7686() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %343 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %344 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %345 = %343.0;
  %346 = %344.1;
  (%345, %346)
}

def @func_9643(%var_9607: Tensor[(9, 15, 7), float32], %var_9608: Tensor[(9, 15, 7), float32]) -> (Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %347 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %348 = cast(%var_9608, dtype="bool") /* ty=Tensor[(9, 15, 7), bool] */;
  %349 = shape_of(%var_9607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%var_9607, dtype="bool") /* ty=Tensor[(9, 15, 7), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = equal(%350, %351) /* ty=Tensor[(9, 15, 7), bool] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %354 = rsqrt(%353) /* ty=Tensor[(9, 15, 7), float32] */;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(9, 15, 7), float64] */;
  %356 = @func_8844() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %357 = %347.1;
  %358 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %359 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
  %360 = log10(%355) /* ty=Tensor[(9, 15, 7), float64] */;
  %361 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %362 = %356.0;
  (%357, %358, %359, %360, %361, %362)
}

def @func_17604(%var_17602: Tensor[(7, 390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 390), float64], Tensor[(7, 390), uint64]) {
  @func_17601(%var_17602) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 390), float64], Tensor[(7, 390), uint64]) */
}

def @func_8561() -> Tensor[(8, 5, 15), float64] {
  %364 = fn () -> Tensor[(8, 5, 15), float64] {
    %363 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %363.0
  };
  %364() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_11422() -> (Tensor[(8, 5, 15), float64],) {
  %365 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %366 = %365.0;
  (%366,)
}

def @func_3726() -> (Tensor[(8, 5, 15), float64],) {
  %368 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %367 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    (%367,)
  };
  %368() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_17134() -> (Tensor[(300), float64],) {
  @func_17132() /* ty=(Tensor[(300), float64],) */
}

def @func_3301() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %373 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %369 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %370 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %371 = %369.0;
    %372 = %370.0;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11813() -> Tensor[(8, 5, 15), float64] {
  %374 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %374.1
}

def @func_17975() -> (Tensor[(8, 5, 15), float64],) {
  %375 = @func_8198() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %376 = %375.0;
  (%376,)
}

def @func_10800() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %383 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %377 = @func_6753() /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %378 = @func_7686() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %379 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %380 = %377.1;
    %381 = %378.1;
    %382 = %379.0;
    (%380, %381, %382)
  };
  %383() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15172(%var_15171: uint32) -> (Tensor[(7, 8, 12), uint32],) {
  %387 = fn (%var_15165: uint32) -> (Tensor[(7, 8, 12), uint32],) {
    %384 = cast(%var_15165, dtype="uint32") /* ty=uint32 */;
    %385 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 8, 12), uint32] */, dtype="uint32") /* ty=Tensor[(7, 8, 12), uint32] */;
    %386 = bitwise_xor(%384, %385) /* ty=Tensor[(7, 8, 12), uint32] */;
    (%386,)
  };
  %387(%var_15171) /* ty=(Tensor[(7, 8, 12), uint32],) */
}

def @func_15144() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %388 = @func_11349() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %389 = @func_14312() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %390 = %388.3;
  %391 = %389.1;
  %392 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
  (%390, %391, %392)
}

def @func_18749() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  @func_18747() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_12011() -> Tensor[(8, 5, 15), float64] {
  %394 = fn () -> Tensor[(8, 5, 15), float64] {
    %393 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %393.1
  };
  %394() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7688() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_7686() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15760() -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %395 = @func_6872() /* ty=Tensor[(8, 5, 15), float64] */;
  %396 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
  (%395, %396)
}

def @func_5398() -> (Tensor[(8, 5, 15), float64],) {
  @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_11531() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) {
  %397 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %398 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
  %399 = reshape(%398, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
  %400 = @func_9749(%399) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) */;
  %401 = %397.1;
  %402 = %400.1;
  %403 = @func_5275() /* ty=Tensor[(8, 5, 15), float64] */;
  (%401, %402, meta[relay.Constant][13] /* ty=Tensor[(1, 20), float32] */, %403)
}

def @func_13193() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  %404 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %405 = cast(meta[relay.Constant][14] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %406 = reshape(%405, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %407 = @func_6048(%406) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) */;
  %408 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %409 = %404.0;
  %410 = %407.3;
  %411 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
  (%408, %409, %410, meta[relay.Constant][14] /* ty=Tensor[(104), uint64] */, %411)
}

def @func_15310() -> Tensor[(8, 5, 15), float64] {
  %412 = @func_13972() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %412.3
}

def @func_3112() -> (Tensor[(8, 5, 15), float64],) {
  @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_6116() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %417 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
    %413 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %414 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
    %415 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
    %416 = %413.0;
    (%414, %415, %416)
  };
  %417() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_12708() -> Tensor[(8, 5, 15), float64] {
  %419 = fn () -> Tensor[(8, 5, 15), float64] {
    %418 = @func_4926() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %418.0
  };
  %419() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1840() -> (Tensor[(8, 5, 15), float64],) {
  %420 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %421 = %420.0;
  (%421,)
}

def @func_17762(%var_17761: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), bool]) {
  %437 = fn (%var_17740: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), bool]) {
    %422 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %423 = @func_11422() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %424 = @func_8731() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) */;
    %425 = cast(%var_17740, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %426 = reshape(%425, newshape=[104]) /* ty=Tensor[(104), uint64] */;
    %427 = @func_8539(%426) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) */;
    %428 = %427.2;
    %429 = cast(%var_17740, dtype="bool") /* ty=Tensor[(104), bool] */;
    %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(1), int32] */;
    %431 = cast(%428, dtype="bool") /* ty=Tensor[(104), bool] */;
    %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?), bool] */;
    %433 = %422.2;
    %434 = %423.0;
    %435 = %424.0;
    %436 = greater(%431, %432) /* ty=Tensor[(104), bool] */;
    (%433, %434, %435, %436)
  };
  %437(%var_17761) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(104), bool]) */
}

def @func_6364() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %438 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %439 = cast(meta[relay.Constant][15] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %440 = reshape(%439, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %441 = @func_3614(%440) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %442 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %443 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %444 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %445 = %438.1;
  %446 = %441.2;
  %447 = %442.1;
  %448 = %443.0;
  %449 = %444.1;
  (%445, %446, meta[relay.Constant][15] /* ty=Tensor[(1080), float32] */, %447, %448, %449)
}

def @func_10038() -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) {
  %450 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %451 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %452 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %454 = bitwise_or(%452, %453) /* ty=Tensor[(5, 60), int32] */;
  %455 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %456 = reshape(%455, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %457 = @func_1931(%456) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */;
  %458 = %457.2;
  %459 = cast(%458, dtype="bool") /* ty=Tensor[(300), bool] */;
  %460 = shape_of(%454, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%454, dtype="bool") /* ty=Tensor[(5, 60), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %463 = cast(%458, dtype="int32") /* ty=Tensor[(300), int32] */;
  %464 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %465 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 60), float64] */, dtype="int32") /* ty=Tensor[(5, 60), int32] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %467 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %468 = less_equal(%461, %462) /* ty=Tensor[(5, 60), bool] */;
  %469 = logical_xor(%465, %466) /* ty=Tensor[(5, 60), int32] */;
  (%467, %468, %469)
}

def @func_18132() -> Tensor[(5, 60), float32] {
  @func_18130() /* ty=Tensor[(5, 60), float32] */
}

def @func_6767() -> (Tensor[(8, 5, 15), float64],) {
  %471 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %470 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_16657(%var_16625: Tensor[(7, 7, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %472 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %473 = cast(%var_16625, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %474 = atan(%473) /* ty=Tensor[(7, 7, 7), float64] */;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %476 = @func_13676() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) */;
  %477 = @func_11982() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %478 = %472.0;
  %479 = cos(%475) /* ty=Tensor[(7, 7, 7), float64] */;
  %480 = @func_9564() /* ty=Tensor[(8, 5, 15), float64] */;
  %481 = %476.3;
  %482 = %477.0;
  (%478, %479, %480, %481, %482)
}

def @func_17442(%var_17441: Tensor[(1080), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float32], Tensor[(1080), float32]) {
  %488 = fn (%var_17432: Tensor[(1080), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float32], Tensor[(1080), float32]) {
    %483 = cast(%var_17432, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %484 = reshape(%483, newshape=[1080]) /* ty=Tensor[(1080), float32] */;
    %485 = @func_4455(%484) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) */;
    %486 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
    %487 = %485.2;
    (%486, %487, %var_17432)
  };
  %488(%var_17441) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float32], Tensor[(1080), float32]) */
}

def @func_4399() -> Tensor[(8, 5, 15), float64] {
  %490 = fn () -> Tensor[(8, 5, 15), float64] {
    %489 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %489.0
  };
  %490() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7149() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %495 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %491 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %492 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %493 = %491.0;
    %494 = %492.0;
    (%493, %494)
  };
  %495() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6366() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_6364() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6793() -> Tensor[(11, 8, 11), float64] {
  %496 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %496.0
}

def @func_10842() -> Tensor[(7, 390), int32] {
  @func_10840() /* ty=Tensor[(7, 390), int32] */
}

def @func_13299(%var_13294: Tensor[(2, 52), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) {
  %497 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %498 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %499 = %498.1;
  %500 = cast(%var_13294, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(%499, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %504 = %497.0;
  %505 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %506 = floor_divide(%502, %503) /* ty=Tensor[(2, 52), float32] */;
  (%504, %505, %506)
}

def @func_9416(%var_9369: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float32]) {
  %507 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
  %508 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %509 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %510 = cast(%var_9369, dtype="float64") /* ty=Tensor[(300), float64] */;
  %511 = cast(%var_9369, dtype="float64") /* ty=Tensor[(300), float64] */;
  %512 = reshape(%510, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %513 = reshape(%511, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %514 = @func_324(%512, %513) /* ty=Tensor[(10, 15, 2), float64] */;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %516 = %507.0;
  %517 = %508.1;
  %518 = %509.1;
  %519 = cosh(%515) /* ty=Tensor[(10, 15, 2), float32] */;
  (%516, %var_9369, %517, %518, %519)
}

def @func_15108() -> (Tensor[(8, 5, 15), float64],) {
  %520 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %521 = %520.1;
  (%521,)
}

def @func_16660(%var_16658: Tensor[(7, 7, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_16657(%var_16658) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18981() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(352), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_18979() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(352), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_9647(%var_9645: Tensor[(9, 15, 7), float32], %var_9646: Tensor[(9, 15, 7), float32]) -> (Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_9643(%var_9645, %var_9646) /* ty=(Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1727(%var_1726: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) {
  %540 = fn (%var_1697: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) {
    %522 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %523 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %524 = cast(%var_1697, dtype="float64") /* ty=Tensor[(300), float64] */;
    %525 = cast(%var_1697, dtype="float64") /* ty=Tensor[(300), float64] */;
    %526 = reshape(%524, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %527 = reshape(%525, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %528 = %522.0;
    %529 = cast(%528, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %530 = reshape(%529, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
    %531 = @func_1222(%530) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %532 = %531.0;
    %533 = cast(%532, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %534 = reshape(%533, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
    %535 = @func_1222(%534) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %536 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    %537 = %523.0;
    %538 = @func_324(%526, %527) /* ty=Tensor[(10, 15, 2), float64] */;
    %539 = %535.0;
    (%528, %536, %537, %538, %var_1697, %532, %539)
  };
  %540(%var_1726) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */
}

def @func_5546() -> (Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) {
  @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_10385() -> Tensor[(8, 5, 15), float64] {
  %541 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %541() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1779() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %544 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %542 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    %543 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    (%542, %543)
  };
  %544() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14576(%var_14564: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %545 = cast(%var_14564, dtype="float64") /* ty=Tensor[(300), float64] */;
  %546 = reshape(%545, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %547 = @func_13386(%546) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) */;
  %548 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %549 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %550 = %547.0;
  %551 = %548.0;
  (%549, %550, %var_14564, %551)
}

def @func_14697() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %552 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %553 = @func_13251() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %554 = %552.0;
  %555 = %553.0;
  %556 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  (%554, %555, %556)
}

def @func_17157() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 10, 6), bool], uint32) {
  %565 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(10, 10, 6), bool], uint32) {
    %557 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %558 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %559 = %557.0;
    %560 = cast(%559, dtype="uint32") /* ty=Tensor[(8, 5, 15), uint32] */;
    %561 = reshape(%558, newshape=[]) /* ty=uint32 */;
    %562 = reshape(%560, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint32] */;
    %563 = @func_1529(%561, %562) /* ty=(Tensor[(10, 10, 6), bool],) */;
    %564 = %563.0;
    (%559, %564, meta[relay.Constant][18] /* ty=uint32 */)
  };
  %565() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 10, 6), bool], uint32) */
}

def @func_18130() -> Tensor[(5, 60), float32] {
  %566 = @func_10038() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) */;
  %567 = %566.2;
  %568 = cast(%567, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
  asinh(%568) /* ty=Tensor[(5, 60), float32] */
}

def @func_15820() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(240), bool]) {
  @func_15818() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(240), bool]) */
}

def @func_8844() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %569 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %570 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
  %571 = %569.0;
  %572 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  %573 = %570.0;
  (%571, %572, %573)
}

def @func_14840(%var_14823: Tensor[(260), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(260), float32]) {
  %574 = @func_7227() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %575 = cast(%var_14823, dtype="float32") /* ty=Tensor[(260), float32] */;
  %576 = reshape(%575, newshape=[4, 13, 5]) /* ty=Tensor[(4, 13, 5), float32] */;
  %577 = @func_2318(%576) /* ty=(Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) */;
  %578 = %574.0;
  %579 = %577.1;
  (%578, %579, %var_14823)
}

def @func_15842() -> (Tensor[(8, 5, 15), float64],) {
  @func_15840() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_16271() -> (Tensor[(9, 3, 4), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %588 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %580 = @func_12351() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %581 = @func_7227() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %582 = @func_14697() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %583 = %580.0;
    %584 = @func_6561() /* ty=Tensor[(8, 5, 15), float64] */;
    %585 = %581.0;
    %586 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    %587 = %582.0;
    (%583, %584, %585, %586, %587)
  };
  %588() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_17864() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %589 = @func_7275() /* ty=Tensor[(8, 5, 15), float64] */;
  %590 = @func_16385() /* ty=Tensor[(8, 5, 15), float64] */;
  (%589, %590)
}

def @func_11606() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_11604() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_8336() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_8334() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_474(%var_472: Tensor[(13, 6, 5), int32]) -> Tensor[(13, 6, 5), int32] {
  @func_471(%var_472) /* ty=Tensor[(13, 6, 5), int32] */
}

def @func_2320(%var_2319: Tensor[(4, 13, 5), float32]) -> (Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) {
  %605 = fn (%var_2271: Tensor[(4, 13, 5), float32]) -> (Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) {
    %591 = cast(5.06592f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %592 = cast(%var_2271, dtype="float32") /* ty=Tensor[(4, 13, 5), float32] */;
    %593 = mod(%591, %592) /* ty=Tensor[(4, 13, 5), float32] */;
    %594 = cast(%593, dtype="float32") /* ty=Tensor[(4, 13, 5), float32] */;
    %595 = atan(%594) /* ty=Tensor[(4, 13, 5), float32] */;
    %596 = cast(%var_2271, dtype="float64") /* ty=Tensor[(4, 13, 5), float64] */;
    %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%595, dtype="float64") /* ty=Tensor[(4, 13, 5), float64] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %600 = cast(meta[relay.Constant][19] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %601 = reshape(%600, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %602 = @func_1992(%601) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
    %603 = floor_mod(%598, %599) /* ty=Tensor[(4, 13, 5), float64] */;
    %604 = %602.2;
    (%603, %604, meta[relay.Constant][19] /* ty=Tensor[(300), float64] */)
  };
  %605(%var_2319) /* ty=(Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) */
}

def @func_6538() -> Tensor[(2, 52), uint64] {
  %607 = fn () -> Tensor[(2, 52), uint64] {
    %606 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
    %606.1
  };
  %607() /* ty=Tensor[(2, 52), uint64] */
}

def @func_5575() -> Tensor[(8, 5, 15), float64] {
  @func_5573() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_6873() -> Tensor[(8, 5, 15), float64] {
  %609 = fn () -> Tensor[(8, 5, 15), float64] {
    %608 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %608.3
  };
  %609() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16007() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(945), float32]) {
  %610 = @func_12339() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %611 = cast(meta[relay.Constant][20] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %612 = cast(meta[relay.Constant][20] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %613 = reshape(%611, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %614 = reshape(%612, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %615 = @func_9643(%613, %614) /* ty=(Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %616 = %610.0;
  %617 = %615.5;
  (%616, %617, meta[relay.Constant][20] /* ty=Tensor[(945), float32] */)
}

def @func_18902() -> Tensor[(8, 5, 15), float64] {
  @func_18900() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_17808() -> Tensor[(8, 5, 15), float64] {
  @func_17806() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_19649(%var_19643: Tensor[(7, 390), int32]) -> (Tensor[(7, 390), float32], Tensor[(7, 390), bool]) {
  %618 = @func_18657() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 390), int32]) */;
  %619 = %618.1;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(7, 390), float32] */;
  %621 = cast(%var_19643, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %622 = shape_of(%619, dtype="int32") /* ty=Tensor[(2), int32] */;
  %623 = cast(%619, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %625 = erf(%620) /* ty=Tensor[(7, 390), float32] */;
  %626 = greater(%623, %624) /* ty=Tensor[(7, 390), bool] */;
  (%625, %626)
}

def @func_19721(%var_19719: uint64) -> (Tensor[(8, 5, 15), float64], uint64, Tensor[(20, 108), uint16], Tensor[(8, 5, 15), float64]) {
  @func_19718(%var_19719) /* ty=(Tensor[(8, 5, 15), float64], uint64, Tensor[(20, 108), uint16], Tensor[(8, 5, 15), float64]) */
}

def @func_4455(%var_4442: Tensor[(1080), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(1080), float32], Tensor[(8, 5, 15), float32]) {
  %627 = cast(%var_4442, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %628 = reshape(%627, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %629 = @func_3614(%628) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %630 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %633 = %629.0;
  %634 = sinh(%632) /* ty=Tensor[(8, 5, 15), float32] */;
  (%633, %var_4442, %634)
}

def @func_18687() -> (Tensor[(8, 5, 15), float64],) {
  %635 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %636 = %635.0;
  (%636,)
}

def @func_16220() -> Tensor[(8, 5, 15), float64] {
  %637 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_6405() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %637() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8474(%var_8472: Tensor[(324), float32], %var_8473: Tensor[(10, 30), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) {
  %653 = fn (%var_8449: Tensor[(324), float32], %var_8451: Tensor[(10, 30), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) {
    %638 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %639 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %640 = cast(%var_8449, dtype="float32") /* ty=Tensor[(324), float32] */;
    %641 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
    %642 = cast(%var_8451, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
    %643 = reshape(%640, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %644 = reshape(%641, newshape=[195, 2]) /* ty=Tensor[(195, 2), int32] */;
    %645 = reshape(%642, newshape=[1, 300]) /* ty=Tensor[(1, 300), float64] */;
    %646 = @func_3543(%643, %644, %645) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
    %647 = %646.5;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
    %649 = %638.0;
    %650 = %639.0;
    %651 = @func_1945() /* ty=Tensor[(8, 5, 15), float64] */;
    %652 = sqrt(%648) /* ty=Tensor[(1, 300), float64] */;
    (%649, %650, %651, %var_8449, meta[relay.Constant][21] /* ty=Tensor[(390), int32] */, %var_8451, %652)
  };
  %653(%var_8472, %var_8473) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) */
}

def @func_5418() -> Tensor[(8, 5, 15), float64] {
  %655 = fn () -> Tensor[(8, 5, 15), float64] {
    %654 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %654.0
  };
  %655() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_10255() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) {
  @func_10253() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_15358() -> (Tensor[(11, 8, 11), float64],) {
  %658 = fn () -> (Tensor[(11, 8, 11), float64],) {
    %656 = @func_8399() /* ty=(Tensor[(11, 8, 11), float64],) */;
    %657 = %656.0;
    (%657,)
  };
  %658() /* ty=(Tensor[(11, 8, 11), float64],) */
}

def @func_8541(%var_8540: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) {
  %666 = fn (%var_8518: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) {
    %659 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %660 = cast(%var_8518, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %661 = reshape(%660, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
    %662 = @func_3848(%661) /* ty=(Tensor[(13, 4, 2), uint64],) */;
    %663 = %659.0;
    %664 = %662.0;
    %665 = @func_4089() /* ty=Tensor[(1, 390), int32] */;
    (%663, %664, %var_8518, %665)
  };
  %666(%var_8540) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(1, 390), int32]) */
}

def @func_10472() -> (Tensor[(8, 5, 15), float64],) {
  %667 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_13109() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %675 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %669 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %670 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
    %671 = @func_7549() /* ty=Tensor[(8, 5, 15), float64] */;
    %672 = %669.2;
    %673 = %670.2;
    %674 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
    (%671, %672, %673, %674)
  };
  %675() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18979() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(352), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %676 = @func_7983() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
  %677 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %678 = cast(meta[relay.Constant][22] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %679 = reshape(%678, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), float64] */;
  %680 = @func_11079(%679) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %681 = @func_16850() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %682 = @func_16690() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %683 = %676.1;
  %684 = %677.0;
  %685 = %680.0;
  %686 = %681.0;
  %687 = %682.0;
  (%683, %684, %685, meta[relay.Constant][22] /* ty=Tensor[(352), float64] */, %686, %687)
}

def @func_3437() -> Tensor[(8, 5, 15), float64] {
  @func_3435() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_14843(%var_14841: Tensor[(260), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(260), float32]) {
  @func_14840(%var_14841) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(260), float32]) */
}

def @func_3145() -> Tensor[(8, 5, 15), float64] {
  @func_3143() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_9852() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
  %693 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
    %688 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %689 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
    %690 = %688.0;
    %691 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    %692 = %689.4;
    (%690, %691, %692)
  };
  %693() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) */
}

def @func_10040() -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) {
  @func_10038() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) */
}

def @func_6051(%var_6049: Tensor[(104, 1), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) {
  @func_6048(%var_6049) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) */
}

def @main(%var_19863: Tensor[(4, 13, 8), uint64]) -> Tensor[(4, 13, 8), uint64] {
  %694 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 13, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 13, 8), uint64] */;
  %695 = shape_of(%var_19863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%var_19863, dtype="uint64") /* ty=Tensor[(4, 13, 8), uint64] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%696, %697) /* ty=Tensor[(4, 13, 8), uint64] */
}

def @func_2548() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %698 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %699 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %700 = %698.0;
  %701 = %699.0;
  (%700, %701)
}

def @func_2675() -> Tensor[(8, 5, 15), float64] {
  @func_2138() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13253() -> (Tensor[(8, 5, 15), float64],) {
  @func_13251() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_19841(%var_19839: Tensor[(144), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(144), uint64], Tensor[(8, 5, 15), float64], Tensor[(12, 6, 2), float32]) {
  @func_19838(%var_19839) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(144), uint64], Tensor[(8, 5, 15), float64], Tensor[(12, 6, 2), float32]) */
}

def @func_5308() -> Tensor[(8, 5, 15), float64] {
  %703 = fn () -> Tensor[(8, 5, 15), float64] {
    %702 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %702.0
  };
  %703() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_19078(%var_19066: Tensor[(16, 22), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(2, 16, 11), float64], Tensor[(16, 22), float64], Tensor[(8, 5, 15), float64]) {
  %704 = cast(%var_19066, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
  %705 = reshape(%704, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), float64] */;
  %706 = @func_11079(%705) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %707 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %708 = @func_7275() /* ty=Tensor[(8, 5, 15), float64] */;
  %709 = %706.0;
  %710 = %707.0;
  (%708, %709, %var_19066, %710)
}

def @func_4365() -> (Tensor[(8, 5, 15), float64],) {
  @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_5137(%var_5135: float64, %var_5136: Tensor[(4, 15, 4), float64]) -> Tensor[(4, 15, 4), float64] {
  @func_5133(%var_5135, %var_5136) /* ty=Tensor[(4, 15, 4), float64] */
}

def @func_5506() -> (Tensor[(8, 5, 15), float64],) {
  %712 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %711 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
    (%711,)
  };
  %712() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_11377() -> Tensor[(8, 5, 15), float64] {
  %714 = fn () -> Tensor[(8, 5, 15), float64] {
    %713 = @func_10202() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) */;
    %713.7
  };
  %714() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_17016() -> (Tensor[(8, 5, 15), float64],) {
  %715 = @func_8560() /* ty=Tensor[(8, 5, 15), float64] */;
  (%715,)
}

def @func_16073() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_16071() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_19228(%var_19225: Tensor[(11, 1, 8), uint8], %var_19226: Tensor[(11, 10, 8), uint8], %var_19227: Tensor[(11, 10, 8), uint8]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float32]) {
  %724 = fn (%var_19203: Tensor[(11, 1, 8), uint8], %var_19204: Tensor[(11, 10, 8), uint8], %var_19218: Tensor[(11, 10, 8), uint8]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float32]) {
    %716 = cast(%var_19203, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
    %717 = cast(%var_19204, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
    %718 = cast(%var_19218, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
    %719 = shape_of(%var_19204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_19204, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %722 = greater_equal(%716, %717) /* ty=Tensor[(11, 10, 8), bool] */;
    %723 = floor_mod(%720, %721) /* ty=Tensor[(11, 10, 8), float32] */;
    (%722, %723)
  };
  %724(%var_19225, %var_19226, %var_19227) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float32]) */
}

def @func_6048(%var_6035: Tensor[(104, 1), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104, 1), uint64], Tensor[(8, 5, 15), float64]) {
  %725 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
  %726 = cast(%725, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %727 = reshape(%726, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %728 = @func_1222(%727) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %729 = cast(%var_6035, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %730 = reshape(%729, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
  %731 = @func_3848(%730) /* ty=(Tensor[(13, 4, 2), uint64],) */;
  %732 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %733 = %728.0;
  %734 = %731.0;
  %735 = %732.0;
  (%725, %733, %734, %var_6035, %735)
}

def @func_6976() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %740 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %736 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %737 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %738 = %736.0;
    %739 = %737.0;
    (%738, %739)
  };
  %740() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1143(%var_955: Tensor[(4, 9, 9), float32], %var_961: Tensor[(390), int32], %var_972: Tensor[(968, 1), int64], %var_1078: Tensor[(4, 9, 9), float32], %var_1112: Tensor[(300), float64]) -> (Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) {
  %741 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %742 = reshape(%741, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %743 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %744 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %745 = reshape(%743, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %746 = reshape(%744, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %747 = @func_177(%745, %746) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %748 = %747.0;
  %749 = cast(%748, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %750 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %751 = reshape(%749, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %752 = reshape(%750, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %753 = @func_177(%751, %752) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %754 = cast(%748, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %755 = cast(%var_972, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %756 = reshape(%754, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %757 = reshape(%755, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %758 = @func_177(%756, %757) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %759 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %760 = reshape(%759, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %761 = cast(%var_955, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %762 = acos(%761) /* ty=Tensor[(4, 9, 9), float32] */;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %764 = cos(%763) /* ty=Tensor[(4, 9, 9), float32] */;
  %765 = cast(%var_1078, dtype="uint32") /* ty=Tensor[(4, 9, 9), uint32] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="uint32") /* ty=Tensor[(4, 9, 9), uint32] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %769 = cast(%var_1112, dtype="float64") /* ty=Tensor[(300), float64] */;
  %770 = cast(%var_1112, dtype="float64") /* ty=Tensor[(300), float64] */;
  %771 = reshape(%769, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %772 = reshape(%770, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
  %773 = cast(%762, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %774 = sqrt(%773) /* ty=Tensor[(4, 9, 9), float32] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(4, 9, 9), float32] */;
  %776 = cast(%748, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %777 = %753.0;
  %778 = cast(%777, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %779 = reshape(%776, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %780 = reshape(%778, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %781 = @func_177(%779, %780) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %782 = cast(%var_961, dtype="int32") /* ty=Tensor[(390), int32] */;
  %783 = reshape(%782, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %784 = @func_471(%783) /* ty=Tensor[(13, 6, 5), int32] */;
  %785 = cast(%784, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %786 = @func_471(%742) /* ty=Tensor[(13, 6, 5), int32] */;
  %787 = %758.0;
  %788 = @func_471(%760) /* ty=Tensor[(13, 6, 5), int32] */;
  %789 = maximum(%767, %768) /* ty=Tensor[(4, 9, 9), uint32] */;
  %790 = @func_324(%771, %772) /* ty=Tensor[(10, 15, 2), float64] */;
  %791 = exp(%775) /* ty=Tensor[(4, 9, 9), float32] */;
  %792 = %781.0;
  %793 = acos(%785) /* ty=Tensor[(13, 6, 5), float64] */;
  (%786, %var_961, %748, %var_972, %777, %787, %788, %789, %790, %var_1112, %791, %792, %793)
}

def @func_11177(%var_11175: Tensor[(5, 16, 3), bool], %var_11176: Tensor[(5, 16, 3), bool]) -> (Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) {
  @func_11173(%var_11175, %var_11176) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_14447(%var_14446: Tensor[(12, 6, 2), uint64]) -> Tensor[(12, 6, 2), uint64] {
  %798 = fn (%var_14430: Tensor[(12, 6, 2), uint64]) -> Tensor[(12, 6, 2), uint64] {
    %794 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 6, 2), uint64] */, dtype="uint64") /* ty=Tensor[(12, 6, 2), uint64] */;
    %795 = shape_of(%var_14430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %796 = cast(%var_14430, dtype="uint64") /* ty=Tensor[(12, 6, 2), uint64] */;
    %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    add(%796, %797) /* ty=Tensor[(12, 6, 2), uint64] */
  };
  %798(%var_14446) /* ty=Tensor[(12, 6, 2), uint64] */
}

def @func_2654() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %807 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %799 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %800 = @func_2401() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %801 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %802 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %803 = %799.1;
    %804 = %800.1;
    %805 = %801.0;
    %806 = %802.0;
    (%803, %804, %805, %806)
  };
  %807() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_12854() -> (Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) {
  %808 = cast(meta[relay.Constant][25] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %809 = reshape(%808, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %810 = @func_4007(%809) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %811 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %812 = %810.4;
  (%811, %812, meta[relay.Constant][25] /* ty=Tensor[(20), float32] */)
}

def @func_14986(%var_14984: Tensor[(324), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  @func_14983(%var_14984) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15474() -> Tensor[(8, 5, 15), float64] {
  @func_15472() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_15264() -> Tensor[(8, 5, 15), float64] {
  %814 = fn () -> Tensor[(8, 5, 15), float64] {
    %813 = @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */;
    %813.0
  };
  %814() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16071() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %815 = @func_11434() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %816 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %817 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %818 = %815.0;
  %819 = %816.0;
  %820 = %817.1;
  (%818, %819, %820)
}

def @func_4586() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %824 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %821 = @func_3818() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %822 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
    %823 = %821.0;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13901() -> Tensor[(8, 5, 15), float64] {
  %826 = fn () -> Tensor[(8, 5, 15), float64] {
    %825 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %825.0
  };
  %826() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4847(%var_4845: Tensor[(12, 11, 9), int8], %var_4846: Tensor[(300), float32]) -> (Tensor[(12, 11, 9), bool], Tensor[(12, 11, 9), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  @func_4843(%var_4845, %var_4846) /* ty=(Tensor[(12, 11, 9), bool], Tensor[(12, 11, 9), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) */
}

def @func_13451() -> Tensor[(8, 5, 15), float64] {
  @func_13449() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18689() -> (Tensor[(8, 5, 15), float64],) {
  @func_18687() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_2677() -> Tensor[(8, 5, 15), float64] {
  @func_2675() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_2117() -> (Tensor[(8, 5, 15), float64],) {
  @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_9107() -> (Tensor[(8, 5, 15), float64],) {
  %829 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %827 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %828 = %827.0;
    (%828,)
  };
  %829() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_5897() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
  %830 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %831 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
  %832 = @func_5360() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */;
  %833 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %834 = %830.0;
  %835 = @func_4168() /* ty=Tensor[(8, 5, 15), float64] */;
  %836 = %831.2;
  %837 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
  %838 = %832.1;
  %839 = %833.0;
  (%834, %835, %836, %837, %838, %839)
}

def @func_7551() -> Tensor[(8, 5, 15), float64] {
  @func_7549() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_9011(%var_9009: Tensor[(9, 5, 3), float64]) -> Tensor[(9, 5, 3), float64] {
  @func_9008(%var_9009) /* ty=Tensor[(9, 5, 3), float64] */
}

def @func_13302(%var_13300: Tensor[(2, 52), uint64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) {
  @func_13299(%var_13300) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), float32]) */
}

def @func_9502(%var_9458: Tensor[(16, 9, 8), bool]) -> (Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %840 = cast(%var_9458, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %841 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 9, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 9, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %844 = logical_and(%842, %843) /* ty=Tensor[(16, 9, 8), bool] */;
  %845 = cast(%844, dtype="int8") /* ty=Tensor[(16, 9, 8), int8] */;
  %846 = shape_of(%var_9458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_9458, dtype="int8") /* ty=Tensor[(16, 9, 8), int8] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %849 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %850 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %851 = maximum(%847, %848) /* ty=Tensor[(16, 9, 8), int8] */;
  %852 = %849.0;
  %853 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  %854 = %850.1;
  (%851, %852, %853, %854)
}

def @func_4288() -> (Tensor[(8, 5, 15), float64],) {
  %857 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %855 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %856 = %855.0;
    (%856,)
  };
  %857() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_8199() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %861 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %858 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %859 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
    %860 = %858.0;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11895() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %871 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %862 = @func_9890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %863 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %864 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %865 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %866 = %862.0;
    %867 = %863.0;
    %868 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
    %869 = %864.0;
    %870 = %865.0;
    (%866, %867, %868, %869, %870)
  };
  %871() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15433() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32]) {
  %878 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32]) {
    %872 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
    %873 = @func_8165() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %874 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
    %875 = %872.3;
    %876 = %873.0;
    %877 = %874.2;
    (%875, %876, %877)
  };
  %878() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32]) */
}

def @func_13019() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %888 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %879 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %880 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %881 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %882 = %879.0;
    %883 = %880.3;
    %884 = %881.0;
    %885 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
    %886 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
    %887 = @func_6788() /* ty=Tensor[(8, 5, 15), float64] */;
    (%882, %883, %884, %885, %886, %887)
  };
  %888() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_7549() -> Tensor[(8, 5, 15), float64] {
  %889 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %889.0
}

def @func_11984() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_11982() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_12759(%var_12749: Tensor[(390), int32]) -> (Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) {
  %890 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %891 = cast(%var_12749, dtype="int32") /* ty=Tensor[(390), int32] */;
  %892 = reshape(%891, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %893 = %890.0;
  %894 = @func_471(%892) /* ty=Tensor[(13, 6, 5), int32] */;
  (%893, %894, %var_12749)
}

def @func_1959() -> (Tensor[(8, 5, 15), float64],) {
  %897 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %895 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %896 = %895.0;
    (%896,)
  };
  %897() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_10965(%var_10963: int32) -> (Tensor[(14, 10, 9), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_10962(%var_10963) /* ty=(Tensor[(14, 10, 9), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15509() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %901 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %898 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %899 = @func_11654() /* ty=Tensor[(8, 5, 15), float64] */;
    %900 = %898.0;
    (%899, %900)
  };
  %901() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6795() -> Tensor[(11, 8, 11), float64] {
  @func_6793() /* ty=Tensor[(11, 8, 11), float64] */
}

def @func_16385() -> Tensor[(8, 5, 15), float64] {
  @func_12530() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7578(%var_7574: Tensor[(1, 2, 16), float64]) -> Tensor[(1, 2, 16), float64] {
  %902 = cast(%var_7574, dtype="float64") /* ty=Tensor[(1, 2, 16), float64] */;
  log(%902) /* ty=Tensor[(1, 2, 16), float64] */
}

def @func_6220() -> (Tensor[(8, 5, 15), float64],) {
  %904 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %903 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
    (%903,)
  };
  %904() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_13994() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %908 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %905 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %906 = @func_12679() /* ty=Tensor[(8, 5, 15), float64] */;
    %907 = %905.0;
    (%906, %907)
  };
  %908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14454() -> Tensor[(8, 5, 15), float64] {
  %910 = fn () -> Tensor[(8, 5, 15), float64] {
    %909 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %909.0
  };
  %910() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_15110() -> (Tensor[(8, 5, 15), float64],) {
  @func_15108() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_17977() -> (Tensor[(8, 5, 15), float64],) {
  @func_17975() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_12417() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_12415() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_3068() -> Tensor[(8, 5, 15), float64] {
  %912 = fn () -> Tensor[(8, 5, 15), float64] {
    %911 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %911.1
  };
  %912() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4928() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_4926() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_8166() -> (Tensor[(8, 5, 15), float64],) {
  %914 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %913 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
    (%913,)
  };
  %914() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_2464() -> Tensor[(8, 5, 15), float64] {
  %915 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %915.0
}

def @func_5664() -> (Tensor[(8, 5, 15), float64],) {
  %916 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %917 = %916.0;
  (%917,)
}

def @func_9419(%var_9417: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float32]) {
  @func_9416(%var_9417) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float32]) */
}

def @func_16851() -> (Tensor[(8, 5, 15), float64],) {
  %920 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %918 = @func_4926() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %919 = %918.0;
    (%919,)
  };
  %920() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_18900() -> Tensor[(8, 5, 15), float64] {
  %921 = @func_6975() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %921.1
}

def @func_8689() -> Tensor[(8, 5, 15), float64] {
  %923 = fn () -> Tensor[(8, 5, 15), float64] {
    %922 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %922.1
  };
  %923() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13251() -> (Tensor[(8, 5, 15), float64],) {
  %924 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %925 = %924.1;
  (%925,)
}

def @func_3547(%var_3544: Tensor[(324), float32], %var_3545: Tensor[(195, 2), int32], %var_3546: Tensor[(1, 300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
  %948 = fn (%var_3502: Tensor[(324), float32], %var_3503: Tensor[(195, 2), int32], %var_3505: Tensor[(1, 300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) {
    %926 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %927 = cast(%var_3502, dtype="float32") /* ty=Tensor[(324), float32] */;
    %928 = cast(%var_3503, dtype="int32") /* ty=Tensor[(195, 2), int32] */;
    %929 = cast(meta[relay.Constant][27] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
    %930 = cast(%var_3502, dtype="float32") /* ty=Tensor[(324), float32] */;
    %931 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
    %932 = reshape(%927, newshape=[4, 9, 9]) /* ty=Tensor[(4, 9, 9), float32] */;
    %933 = reshape(%928, newshape=[390]) /* ty=Tensor[(390), int32] */;
    %934 = reshape(%929, newshape=[968, 1]) /* ty=Tensor[(968, 1), int64] */;
    %935 = reshape(%930, newshape=[4, 9, 9]) /* ty=Tensor[(4, 9, 9), float32] */;
    %936 = reshape(%931, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %937 = @func_1143(%932, %933, %934, %935, %936) /* ty=(Tensor[(13, 6, 5), int32], Tensor[(390), int32], Tensor[(11, 8, 11), int64], Tensor[(968, 1), int64], Tensor[(11, 8, 11), int64], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), int32], Tensor[(4, 9, 9), uint32], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(4, 9, 9), float32], Tensor[(11, 8, 11), int64], Tensor[(13, 6, 5), float64]) */;
    %938 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %939 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
    %940 = cast(%var_3505, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
    %941 = reshape(%939, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %942 = reshape(%940, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %943 = %926.0;
    %944 = %937.4;
    %945 = %938.0;
    %946 = @func_324(%941, %942) /* ty=Tensor[(10, 15, 2), float64] */;
    %947 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    (%943, %944, %var_3502, %var_3503, meta[relay.Constant][27] /* ty=Tensor[(968), int64] */, %var_3505, %945, %946, %947)
  };
  %948(%var_3544, %var_3545, %var_3546) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), int64], Tensor[(324), float32], Tensor[(195, 2), int32], Tensor[(968), int64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_5156() -> (Tensor[(8, 5, 15), float64],) {
  %949 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %950 = %949.0;
  (%950,)
}

def @func_10287() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %954 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %951 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %952 = @func_9694() /* ty=Tensor[(8, 5, 15), float64] */;
    %953 = %951.0;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18371() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %955 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %956 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
  %957 = %955.0;
  (%956, %957)
}

def @func_7455() -> Tensor[(8, 5, 15), float64] {
  %958 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_4223() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %958() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13776() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %963 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %959 = @func_3220() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %960 = @func_12222() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %961 = %959.0;
    %962 = %960.0;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1352() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %966 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %964 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
    %965 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
    (%964, %965)
  };
  %966() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_18681() -> Tensor[(8, 5, 15), float64] {
  %968 = fn () -> Tensor[(8, 5, 15), float64] {
    %967 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %967.0
  };
  %968() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_1272() -> Tensor[(8, 5, 15), float64] {
  %969 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %969() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_12340() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %974 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %970 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %971 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %972 = %970.0;
    %973 = %971.1;
    (%972, %973)
  };
  %974() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_4204() -> Tensor[(8, 5, 15), float64] {
  %975 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %975.0
}

def @func_8988() -> (Tensor[(8, 5, 15), float64],) {
  @func_8986() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_12828() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %979 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %976 = @func_4287() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %977 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
    %978 = %976.0;
    (%977, %978)
  };
  %979() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6176() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %980 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %981 = %980.1;
  %982 = @func_5036() /* ty=Tensor[(8, 5, 15), float64] */;
  (%981, %982)
}

def @func_3819() -> (Tensor[(8, 5, 15), float64],) {
  %985 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %983 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %984 = %983.1;
    (%984,)
  };
  %985() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_6249() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %989 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %986 = @func_4363() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %987 = %986.0;
    %988 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
    (%987, %988)
  };
  %989() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_9008(%var_8992: Tensor[(9, 5, 3), float64]) -> Tensor[(9, 5, 3), float64] {
  %990 = cast(%var_8992, dtype="float64") /* ty=Tensor[(9, 5, 3), float64] */;
  asin(%990) /* ty=Tensor[(9, 5, 3), float64] */
}

def @func_15818() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(240), bool]) {
  %991 = @func_14312() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %992 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %993 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %994 = reshape(%992, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), bool] */;
  %995 = reshape(%993, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), bool] */;
  %996 = @func_11173(%994, %995) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) */;
  %997 = %991.3;
  %998 = %996.0;
  (%997, %998, meta[relay.Constant][28] /* ty=Tensor[(240), bool] */)
}

def @func_13195() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  @func_13193() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(104, 1), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) */
}

def @func_17106() -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool]) {
  %1003 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool]) {
    %999 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
    %1000 = @func_10038() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool], Tensor[(5, 60), int32]) */;
    %1001 = %999.0;
    %1002 = %1000.1;
    (%1001, %1002)
  };
  %1003() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(5, 60), bool]) */
}

def @func_5276() -> Tensor[(8, 5, 15), float64] {
  %1004 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1178() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %1004() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_14884(%var_14883: float64) -> (Tensor[(8, 5, 15), float64], Tensor[(4, 15, 4), float64], float64, Tensor[(240), float64]) {
  %1012 = fn (%var_14869: float64) -> (Tensor[(8, 5, 15), float64], Tensor[(4, 15, 4), float64], float64, Tensor[(240), float64]) {
    %1005 = @func_11894() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1006 = cast(%var_14869, dtype="float64") /* ty=float64 */;
    %1007 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1008 = reshape(%1006, newshape=[]) /* ty=float64 */;
    %1009 = reshape(%1007, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float64] */;
    %1010 = %1005.1;
    %1011 = @func_5133(%1008, %1009) /* ty=Tensor[(4, 15, 4), float64] */;
    (%1010, %1011, %var_14869, meta[relay.Constant][29] /* ty=Tensor[(240), float64] */)
  };
  %1012(%var_14883) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 15, 4), float64], float64, Tensor[(240), float64]) */
}

def @func_11082(%var_11080: Tensor[(2, 16, 11), float64]) -> (Tensor[(2, 16, 11), float64],) {
  @func_11079(%var_11080) /* ty=(Tensor[(2, 16, 11), float64],) */
}

def @func_4206() -> Tensor[(8, 5, 15), float64] {
  @func_4204() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16319() -> Tensor[(8, 5, 15), float64] {
  @func_16317() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_2263() -> (Tensor[(8, 5, 15), float64],) {
  @func_2261() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_11350() -> (Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1027 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1013 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1014 = cast(meta[relay.Constant][30] /* ty=Tensor[(24, 22), bool] */, dtype="bool") /* ty=Tensor[(24, 22), bool] */;
    %1015 = reshape(%1014, newshape=[4, 12, 11]) /* ty=Tensor[(4, 12, 11), bool] */;
    %1016 = @func_4533(%1015) /* ty=(Tensor[(4, 12, 11), bool],) */;
    %1017 = %1013.0;
    %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %1019 = reshape(%1018, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
    %1020 = @func_1222(%1019) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %1021 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1022 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1023 = %1016.0;
    %1024 = %1020.0;
    %1025 = %1021.1;
    %1026 = %1022.0;
    (%1017, %1023, meta[relay.Constant][30] /* ty=Tensor[(24, 22), bool] */, %1024, %1025, %1026)
  };
  %1027() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 12, 11), bool], Tensor[(24, 22), bool], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_12949(%var_12948: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
  %1037 = fn (%var_12922: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) {
    %1028 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1029 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %1030 = cast(%var_12922, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %1031 = reshape(%1030, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), bool] */;
    %1032 = @func_9502(%1031) /* ty=(Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1033 = %1028.0;
    %1034 = %1029.0;
    %1035 = %1032.0;
    %1036 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1033, %1034, %1035, %var_12922, %1036)
  };
  %1037(%var_12948) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_13927() -> Tensor[(8, 5, 15), float64] {
  @func_13925() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_14579(%var_14577: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  @func_14576(%var_14577) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_17072(%var_17071: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %1043 = fn (%var_17066: Tensor[(104), uint64]) -> (Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
    %1038 = cast(%var_17066, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %1039 = reshape(%1038, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
    %1040 = @func_3848(%1039) /* ty=(Tensor[(13, 4, 2), uint64],) */;
    %1041 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
    %1042 = %1040.0;
    (%1041, %1042, %var_17066)
  };
  %1043(%var_17071) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */
}

def @func_1994(%var_1993: Tensor[(300), float64]) -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
  %1050 = fn (%var_1985: Tensor[(300), float64]) -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) {
    %1044 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %1045 = cast(%var_1985, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1046 = reshape(%1045, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
    %1047 = @func_1667(%1046) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
    %1048 = %1044.3;
    %1049 = %1047.0;
    (%1048, %1049, %var_1985)
  };
  %1050(%var_1993) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */
}

def @func_15146() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_15144() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1225(%var_1223: Tensor[(8, 5, 15), float64]) -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  @func_1222(%var_1223) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */
}

def @func_19591(%var_19589: Tensor[(6, 1, 12), float32], %var_19590: Tensor[(6, 7, 12), float32]) -> Tensor[(6, 7, 12), bool] {
  %1055 = fn (%var_19570: Tensor[(6, 1, 12), float32], %var_19580: Tensor[(6, 7, 12), float32]) -> Tensor[(6, 7, 12), bool] {
    %1051 = cast(%var_19570, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
    %1052 = sqrt(%1051) /* ty=Tensor[(6, 1, 12), float32] */;
    %1053 = cast(%1052, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
    %1054 = cast(%var_19580, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
    less(%1053, %1054) /* ty=Tensor[(6, 7, 12), bool] */
  };
  %1055(%var_19589, %var_19590) /* ty=Tensor[(6, 7, 12), bool] */
}

def @func_17889() -> (Tensor[(8, 5, 15), float64],) {
  %1058 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1056 = @func_12339() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1057 = %1056.1;
    (%1057,)
  };
  %1058() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_18448() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1062 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1059 = @func_12415() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1060 = @func_9064() /* ty=Tensor[(8, 5, 15), float64] */;
    %1061 = %1059.0;
    (%1060, %1061)
  };
  %1062() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13449() -> Tensor[(8, 5, 15), float64] {
  @func_8688() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_11435() -> (Tensor[(8, 5, 15), float64],) {
  %1065 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1063 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %1064 = %1063.1;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_7892() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14146(%var_14143: Tensor[(6, 16, 1), uint8], %var_14144: Tensor[(6, 16, 5), uint8], %var_14145: Tensor[(300), float64]) -> (Tensor[(6, 16, 5), bool], Tensor[(6, 16, 5), int8], Tensor[(10, 15, 2), bool]) {
  %1090 = fn (%var_14060: Tensor[(6, 16, 1), uint8], %var_14061: Tensor[(6, 16, 5), uint8], %var_14099: Tensor[(300), float64]) -> (Tensor[(6, 16, 5), bool], Tensor[(6, 16, 5), int8], Tensor[(10, 15, 2), bool]) {
    %1066 = cast(%var_14060, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
    %1067 = cast(%var_14061, dtype="uint8") /* ty=Tensor[(6, 16, 5), uint8] */;
    %1068 = multiply(%1066, %1067) /* ty=Tensor[(6, 16, 5), uint8] */;
    %1069 = cast(%1068, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
    %1070 = shape_of(%var_14061, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1071 = cast(%var_14061, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
    %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1073 = cast(%var_14060, dtype="float64") /* ty=Tensor[(6, 16, 1), float64] */;
    %1074 = sin(%1073) /* ty=Tensor[(6, 16, 1), float64] */;
    %1075 = cast(%1074, dtype="float32") /* ty=Tensor[(6, 16, 1), float32] */;
    %1076 = asinh(%1075) /* ty=Tensor[(6, 16, 1), float32] */;
    %1077 = cast(%1076, dtype="int8") /* ty=Tensor[(6, 16, 1), int8] */;
    %1078 = cast(%var_14061, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
    %1079 = cast(%var_14099, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1080 = reshape(%1079, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
    %1081 = @func_1667(%1080) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
    %1082 = %1081.1;
    %1083 = cast(%var_14099, dtype="bool") /* ty=Tensor[(300), bool] */;
    %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1085 = cast(%1082, dtype="bool") /* ty=Tensor[(10, 15, 2), bool] */;
    %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1087 = greater(%1071, %1072) /* ty=Tensor[(6, 16, 5), bool] */;
    %1088 = right_shift(%1077, %1078) /* ty=Tensor[(6, 16, 5), int8] */;
    %1089 = logical_and(%1085, %1086) /* ty=Tensor[(10, 15, 2), bool] */;
    (%1087, %1088, %1089)
  };
  %1090(%var_14143, %var_14144, %var_14145) /* ty=(Tensor[(6, 16, 5), bool], Tensor[(6, 16, 5), int8], Tensor[(10, 15, 2), bool]) */
}

def @func_9282() -> (Tensor[(8, 5, 15), float64],) {
  %1091 = @func_7423() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1092 = %1091.0;
  (%1092,)
}

def @func_9265() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1108 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1093 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1094 = cast(meta[relay.Constant][31] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1095 = reshape(%1094, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
    %1096 = @func_1667(%1095) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
    %1097 = @func_6115() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %1098 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1099 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1100 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
    %1101 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
    %1102 = %1093.2;
    %1103 = %1096.0;
    %1104 = %1097.2;
    %1105 = @func_7454() /* ty=Tensor[(8, 5, 15), float64] */;
    %1106 = %1098.0;
    %1107 = %1099.0;
    (%1100, %1101, %1102, %1103, meta[relay.Constant][31] /* ty=Tensor[(300), float64] */, %1104, %1105, %1106, %1107)
  };
  %1108() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_16148() -> (Tensor[(8, 5, 15), float64],) {
  %1110 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1109 = @func_15310() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1109,)
  };
  %1110() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_3407() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1118 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
    %1111 = cast(meta[relay.Constant][32] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1112 = reshape(%1111, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %1113 = @func_1992(%1112) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
    %1114 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1115 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
    %1116 = %1113.1;
    %1117 = %1114.0;
    (%1115, %1116, meta[relay.Constant][32] /* ty=Tensor[(300), float64] */, %1117)
  };
  %1118() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6561() -> Tensor[(8, 5, 15), float64] {
  %1119 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1119.1
}

def @func_11495() -> (Tensor[(8, 5, 15), float64],) {
  @func_11493() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_7424() -> (Tensor[(8, 5, 15), float64],) {
  %1122 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1120 = @func_7148() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1121 = %1120.1;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_12603() -> Tensor[(8, 5, 15), float64] {
  %1124 = fn () -> Tensor[(8, 5, 15), float64] {
    %1123 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1123.0
  };
  %1124() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8846() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_8844() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_16592() -> (Tensor[(8, 5, 15), float64],) {
  %1126 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1125 = @func_14360() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_471(%var_446: Tensor[(13, 6, 5), int32]) -> Tensor[(13, 6, 5), int32] {
  %1127 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 6, 5), int32] */, dtype="int32") /* ty=Tensor[(13, 6, 5), int32] */;
  %1128 = shape_of(%var_446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1129 = cast(%var_446, dtype="int32") /* ty=Tensor[(13, 6, 5), int32] */;
  %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%1129, %1130) /* ty=Tensor[(13, 6, 5), int32] */
}

def @func_8733() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) {
  @func_8731() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float32]) */
}

def @func_2772() -> Tensor[(8, 5, 15), float64] {
  %1132 = fn () -> Tensor[(8, 5, 15), float64] {
    %1131 = @func_2653() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1131.3
  };
  %1132() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_2076() -> (Tensor[(8, 5, 15), float64],) {
  @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_3850(%var_3849: Tensor[(13, 4, 2), uint64]) -> (Tensor[(13, 4, 2), uint64],) {
  %1138 = fn (%var_3823: Tensor[(13, 4, 2), uint64]) -> (Tensor[(13, 4, 2), uint64],) {
    %1133 = cast(%var_3823, dtype="uint64") /* ty=Tensor[(13, 4, 2), uint64] */;
    %1134 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(13, 4, 2), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1135 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 4, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 4, 2), uint64] */;
    %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1137 = bitwise_and(%1135, %1136) /* ty=Tensor[(13, 4, 2), uint64] */;
    (%1137,)
  };
  %1138(%var_3849) /* ty=(Tensor[(13, 4, 2), uint64],) */
}

def @func_14667() -> (Tensor[(8, 5, 15), float64],) {
  @func_14665() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_15224() -> (Tensor[(8, 5, 15), float64],) {
  %1141 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1139 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1140 = %1139.1;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_2717() -> (Tensor[(8, 5, 15), float64],) {
  %1144 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1142 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1143 = %1142.0;
    (%1143,)
  };
  %1144() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_15840() -> (Tensor[(8, 5, 15), float64],) {
  %1145 = @func_7256() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1146 = %1145.1;
  (%1146,)
}

def @func_14407() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_14405() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13973() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1154 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1147 = @func_6176() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1148 = @func_10472() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1149 = @func_10286() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1150 = %1147.0;
    %1151 = %1148.0;
    %1152 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
    %1153 = %1149.1;
    (%1150, %1151, %1152, %1153)
  };
  %1154() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1179() -> Tensor[(8, 5, 15), float64] {
  %1156 = fn () -> Tensor[(8, 5, 15), float64] {
    %1155 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    acosh(%1155) /* ty=Tensor[(8, 5, 15), float64] */
  };
  %1156() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_2074() -> (Tensor[(8, 5, 15), float64],) {
  %1157 = @func_1271() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1157,)
}

def @func_4258() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1161 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1158 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %1159 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
    %1160 = %1158.1;
    (%1159, %1160)
  };
  %1161() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_12297() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1162 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1163 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1164 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1165 = %1162.0;
  %1166 = %1163.1;
  %1167 = %1164.0;
  (%1165, %1166, %1167)
}

def @func_17703() -> Tensor[(8, 5, 15), float64] {
  %1168 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_12707() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %1168() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_17866() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_17864() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15949() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
  %1179 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) {
    %1169 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1170 = @func_11274() /* ty=(Tensor[(300), float64],) */;
    %1171 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1172 = @func_3750() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1173 = @func_12854() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) */;
    %1174 = %1169.0;
    %1175 = %1170.0;
    %1176 = %1171.0;
    %1177 = %1172.1;
    %1178 = %1173.1;
    (%1174, %1175, %1176, %1177, %1178)
  };
  %1179() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64]) */
}

def @func_9957(%var_9954: Tensor[(14, 9, 7), float64], %var_9955: Tensor[(14, 9, 7), float64], %var_9956: Tensor[(104), uint64]) -> (Tensor[(14, 9, 7), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) {
  @func_9952(%var_9954, %var_9955, %var_9956) /* ty=(Tensor[(14, 9, 7), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64], Tensor[(8, 5, 15), float64]) */
}

def @func_16767(%var_16761: Tensor[(343), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64]) {
  %1180 = cast(meta[relay.Constant][36] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
  %1181 = reshape(%1180, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float64] */;
  %1182 = @func_16657(%1181) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 7, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1183 = cast(%var_16761, dtype="float64") /* ty=Tensor[(343), float64] */;
  %1184 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(343), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1185 = cast(meta[relay.Constant][36] /* ty=Tensor[(343), float64] */, dtype="float64") /* ty=Tensor[(343), float64] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1187 = @func_6405() /* ty=Tensor[(8, 5, 15), float64] */;
  %1188 = %1182.2;
  %1189 = maximum(%1185, %1186) /* ty=Tensor[(343), float64] */;
  (%1187, %1188, %1189)
}

def @func_18494() -> Tensor[(8, 5, 15), float64] {
  @func_18492() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16447(%var_16426: Tensor[(1152), bool]) -> (Tensor[(8, 5, 15), float64], Tensor[(16, 9, 8), int8], Tensor[(1152), bool], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1190 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1191 = cast(%var_16426, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %1192 = reshape(%1191, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), bool] */;
  %1193 = @func_9502(%1192) /* ty=(Tensor[(16, 9, 8), int8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1194 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1195 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1196 = %1190.0;
  %1197 = %1193.0;
  %1198 = %1194.0;
  %1199 = %1195.0;
  (%1196, %1197, %var_16426, %1198, %1199)
}

def @func_14748() -> Tensor[(8, 5, 15), float64] {
  @func_10384() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18886() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1200 = @func_18371() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1201 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1202 = @func_14058() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1203 = %1200.1;
  %1204 = %1201.0;
  %1205 = %1202.1;
  (%1203, %1204, %1205)
}

def @func_9309() -> (Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
  %1206 = cast(meta[relay.Constant][37] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %1207 = reshape(%1206, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
  %1208 = @func_4007(%1207) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
  %1209 = @func_6975() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1210 = @func_8688() /* ty=Tensor[(8, 5, 15), float64] */;
  %1211 = %1208.2;
  %1212 = %1209.1;
  (%1210, %1211, meta[relay.Constant][37] /* ty=Tensor[(20), float32] */, %1212)
}

def @func_1566(%var_1563: uint64, %var_1564: Tensor[(15, 9, 16), uint64], %var_1565: Tensor[(15, 9, 16), uint64]) -> (Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
  %1228 = fn (%var_1537: uint64, %var_1538: Tensor[(15, 9, 16), uint64], %var_1543: Tensor[(15, 9, 16), uint64]) -> (Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) {
    %1213 = cast(%var_1537, dtype="uint64") /* ty=uint64 */;
    %1214 = cast(%var_1538, dtype="uint64") /* ty=Tensor[(15, 9, 16), uint64] */;
    %1215 = bitwise_or(%1213, %1214) /* ty=Tensor[(15, 9, 16), uint64] */;
    %1216 = cast(%var_1543, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
    %1217 = shape_of(%1215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1218 = cast(%1215, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
    %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1220 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1221 = cast(meta[relay.Constant][38] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1222 = cast(meta[relay.Constant][38] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1223 = reshape(%1221, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1224 = reshape(%1222, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1225 = less(%1218, %1219) /* ty=Tensor[(15, 9, 16), bool] */;
    %1226 = %1220.1;
    %1227 = @func_324(%1223, %1224) /* ty=Tensor[(10, 15, 2), float64] */;
    (%1225, %1226, %1227, meta[relay.Constant][38] /* ty=Tensor[(300), float64] */)
  };
  %1228(%var_1563, %var_1564, %var_1565) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */
}

def @func_9890() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1229 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1230 = %1229.0;
  %1231 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1230, %1231)
}

def @func_6789() -> Tensor[(8, 5, 15), float64] {
  %1232 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %1232() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8600() -> (Tensor[(8, 5, 15), float64],) {
  %1235 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1233 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1234 = %1233.0;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_13386(%var_13377: Tensor[(10, 15, 2), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) {
  %1236 = @func_5505() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1237 = @func_12854() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(10, 15, 2), float64], Tensor[(20), float32]) */;
  %1238 = %1237.1;
  %1239 = cast(%var_13377, dtype="int8") /* ty=Tensor[(10, 15, 2), int8] */;
  %1240 = shape_of(%1238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%1238, dtype="int8") /* ty=Tensor[(10, 15, 2), int8] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1243 = @func_4946() /* ty=Tensor[(8, 5, 15), float64] */;
  %1244 = %1236.0;
  %1245 = bitwise_and(%1241, %1242) /* ty=Tensor[(10, 15, 2), int8] */;
  (%1243, %1244, %1245)
}

def @func_5766() -> Tensor[(8, 5, 15), bool] {
  %1252 = fn () -> Tensor[(8, 5, 15), bool] {
    %1246 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1247 = %1246.0;
    %1248 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 5, 15), float64] */, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
    %1249 = shape_of(%1247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1250 = cast(%1247, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
    %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%1250, %1251) /* ty=Tensor[(8, 5, 15), bool] */
  };
  %1252() /* ty=Tensor[(8, 5, 15), bool] */
}

def @func_3143() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_12415() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1253 = @func_6364() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1080), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1254 = @func_9282() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1255 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1256 = @func_9890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1257 = %1253.0;
  %1258 = %1254.0;
  %1259 = %1255.0;
  %1260 = %1256.0;
  (%1257, %1258, %1259, %1260)
}

def @func_10840() -> Tensor[(7, 390), int32] {
  %1261 = @func_4089() /* ty=Tensor[(1, 390), int32] */;
  %1262 = cast(%1261, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %1263 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 390), int32] */, dtype="int32") /* ty=Tensor[(7, 390), int32] */;
  right_shift(%1262, %1263) /* ty=Tensor[(7, 390), int32] */
}

def @func_8919() -> (Tensor[(8, 5, 15), float64],) {
  %1265 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1264 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1264,)
  };
  %1265() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_17132() -> (Tensor[(300), float64],) {
  %1266 = @func_11274() /* ty=(Tensor[(300), float64],) */;
  %1267 = %1266.0;
  (%1267,)
}

def @func_3751() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1273 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1268 = @func_3725() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1269 = @func_2261() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1270 = @func_2771() /* ty=Tensor[(8, 5, 15), float64] */;
    %1271 = %1268.0;
    %1272 = %1269.0;
    (%1270, %1271, %1272)
  };
  %1273() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6406() -> Tensor[(8, 5, 15), float64] {
  %1275 = fn () -> Tensor[(8, 5, 15), float64] {
    %1274 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1274.0
  };
  %1275() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_11676() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(105, 9), float32]) {
  %1285 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(105, 9), float32]) {
    %1276 = @func_8986() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1277 = cast(meta[relay.Constant][41] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
    %1278 = cast(meta[relay.Constant][41] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
    %1279 = reshape(%1277, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
    %1280 = reshape(%1278, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
    %1281 = @func_9643(%1279, %1280) /* ty=(Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1282 = %1276.0;
    %1283 = @func_7549() /* ty=Tensor[(8, 5, 15), float64] */;
    %1284 = %1281.3;
    (%1282, %1283, %1284, meta[relay.Constant][41] /* ty=Tensor[(105, 9), float32] */)
  };
  %1285() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(9, 15, 7), float64], Tensor[(105, 9), float32]) */
}

def @func_9311() -> (Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
  @func_9309() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_4010(%var_4008: Tensor[(2, 2, 5), float32]) -> (Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) {
  @func_4007(%var_4008) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */
}

def @func_9751(%var_9750: Tensor[(5, 4), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) {
  %1296 = fn (%var_9741: Tensor[(5, 4), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) {
    %1286 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1287 = cast(%var_9741, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
    %1288 = reshape(%1287, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
    %1289 = @func_4007(%1288) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
    %1290 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
    %1291 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
    %1292 = %1286.1;
    %1293 = @func_5417() /* ty=Tensor[(8, 5, 15), float64] */;
    %1294 = @func_9694() /* ty=Tensor[(8, 5, 15), float64] */;
    %1295 = %1289.1;
    (%1290, %1291, %1292, %1293, %1294, %1295, %var_9741)
  };
  %1296(%var_9750) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(5, 4), float32]) */
}

def @func_1433() -> (Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) {
  %1297 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 390), int32] */, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %1298 = reshape(%1297, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %1299 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 390), int32] */, dtype="int32") /* ty=Tensor[(1, 390), int32] */;
  %1300 = reshape(%1299, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), int32] */;
  %1301 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 88), int64] */, dtype="int64") /* ty=Tensor[(11, 88), int64] */;
  %1302 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 88), int64] */, dtype="int64") /* ty=Tensor[(11, 88), int64] */;
  %1303 = reshape(%1301, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1304 = reshape(%1302, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %1305 = @func_177(%1303, %1304) /* ty=(Tensor[(11, 8, 11), int64],) */;
  %1306 = %1305.0;
  %1307 = cast(%1306, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %1308 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1309 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %1310 = @func_471(%1298) /* ty=Tensor[(13, 6, 5), int32] */;
  %1311 = @func_471(%1300) /* ty=Tensor[(13, 6, 5), int32] */;
  %1312 = rsqrt(%1307) /* ty=Tensor[(11, 8, 11), float64] */;
  %1313 = %1308.1;
  (%1309, meta[relay.Constant][42] /* ty=Tensor[(11, 88), int64] */, %1310, meta[relay.Constant][43] /* ty=Tensor[(1, 390), int32] */, %1311, %1312, %1313)
}

def @func_6673() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14665() -> (Tensor[(8, 5, 15), float64],) {
  %1314 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1315 = %1314.0;
  (%1315,)
}

def @func_11815() -> Tensor[(8, 5, 15), float64] {
  @func_11813() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_14787(%var_14785: Tensor[(13, 3, 4), uint64]) -> (Tensor[(13, 3, 4), bool],) {
  @func_14784(%var_14785) /* ty=(Tensor[(13, 3, 4), bool],) */
}

def @func_18085() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1316 = @func_7084() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1317 = @func_4670() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1318 = %1316.2;
  %1319 = %1317.1;
  (%1318, %1319)
}

def @func_12299() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_12297() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11655() -> Tensor[(8, 5, 15), float64] {
  %1321 = fn () -> Tensor[(8, 5, 15), float64] {
    %1320 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1320.0
  };
  %1321() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_8099(%var_8071: Tensor[(11, 8, 11), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(11, 8, 11), uint8], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1322 = @func_4257() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1323 = @func_6793() /* ty=Tensor[(11, 8, 11), float64] */;
  %1324 = cast(%var_8071, dtype="uint8") /* ty=Tensor[(11, 8, 11), uint8] */;
  %1325 = shape_of(%1323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1326 = cast(%1323, dtype="uint8") /* ty=Tensor[(11, 8, 11), uint8] */;
  %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1328 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1329 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1330 = %1322.1;
  %1331 = minimum(%1326, %1327) /* ty=Tensor[(11, 8, 11), uint8] */;
  %1332 = %1328.0;
  %1333 = %1329.0;
  (%1330, %1331, %1332, %1333)
}

def @func_2115() -> (Tensor[(8, 5, 15), float64],) {
  %1334 = @func_1778() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1335 = %1334.1;
  (%1335,)
}

def @func_4910() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11173(%var_11128: Tensor[(5, 16, 3), bool], %var_11129: Tensor[(5, 16, 3), bool]) -> (Tensor[(8, 5, 15), bool], Tensor[(5, 16, 3), float32], Tensor[(8, 5, 15), float64]) {
  %1336 = @func_10253() /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(8, 5, 15), float64]) */;
  %1337 = cast(%var_11129, dtype="bool") /* ty=Tensor[(5, 16, 3), bool] */;
  %1338 = shape_of(%var_11128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1339 = cast(%var_11128, dtype="bool") /* ty=Tensor[(5, 16, 3), bool] */;
  %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1341 = logical_or(%1339, %1340) /* ty=Tensor[(5, 16, 3), bool] */;
  %1342 = cast(%1341, dtype="float32") /* ty=Tensor[(5, 16, 3), float32] */;
  %1343 = %1336.0;
  %1344 = cos(%1342) /* ty=Tensor[(5, 16, 3), float32] */;
  %1345 = @func_3143() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1343, %1344, %1345)
}

def @func_17326() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
  %1353 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
    %1346 = @func_16591() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1347 = @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1348 = @func_15108() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1349 = %1346.0;
    %1350 = %1347.0;
    %1351 = @func_6537() /* ty=Tensor[(2, 52), uint64] */;
    %1352 = %1348.0;
    (%1349, %1350, %1351, %1352)
  };
  %1353() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) */
}

def @func_18640() -> Tensor[(8, 5, 15), float64] {
  %1355 = fn () -> Tensor[(8, 5, 15), float64] {
    %1354 = @func_13018() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1354.4
  };
  %1355() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18801(%var_18800: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(1, 390), int32], Tensor[(300), float64]) {
  %1369 = fn (%var_18791: Tensor[(300), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(1, 390), int32], Tensor[(300), float64]) {
    %1356 = @func_15840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1357 = @func_15840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1358 = @func_6248() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1359 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
    %1360 = cast(%var_18791, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1361 = reshape(%1360, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %1362 = @func_1992(%1361) /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(300), float64]) */;
    %1363 = %1356.0;
    %1364 = %1357.0;
    %1365 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    %1366 = %1358.1;
    %1367 = %1359.0;
    %1368 = %1362.0;
    (%1363, %1364, %1365, %1366, %1367, %1368, %var_18791)
  };
  %1369(%var_18800) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(?, 8, 11), float32], Tensor[(1, 390), int32], Tensor[(300), float64]) */
}

def @func_16770(%var_16768: Tensor[(343), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64]) {
  @func_16767(%var_16768) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(343), float64]) */
}

def @func_2440() -> (Tensor[(8, 5, 15), float64],) {
  %1370 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1371 = %1370.0;
  (%1371,)
}

def @func_18087() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_18085() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_6754() -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1377 = fn () -> (Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1372 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %1373 = @func_6219() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1374 = %1372.3;
    %1375 = %1373.0;
    %1376 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1374, %1375, %1376)
  };
  %1377() /* ty=(Tensor[(1, 390), int32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_7085() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1386 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1378 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1379 = %1378.0;
    %1380 = cast(%1379, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %1381 = reshape(%1380, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
    %1382 = @func_1222(%1381) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
    %1383 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1384 = %1382.1;
    %1385 = %1383.1;
    (%1379, %1384, %1385)
  };
  %1386() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13925() -> Tensor[(8, 5, 15), float64] {
  %1387 = @func_11531() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(1, 20), float32], Tensor[(8, 5, 15), float64]) */;
  %1387.3
}

def @func_4170() -> Tensor[(8, 5, 15), float64] {
  @func_4168() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4007(%var_3947: Tensor[(2, 2, 5), float32]) -> (Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) {
  %1388 = cast(%var_3947, dtype="float32") /* ty=Tensor[(2, 2, 5), float32] */;
  %1389 = @func_2863() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1390 = cast(meta[relay.Constant][44] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1391 = reshape(%1390, newshape=[4, 13, 5]) /* ty=Tensor[(4, 13, 5), float32] */;
  %1392 = @func_2318(%1391) /* ty=(Tensor[(4, 13, 5), float64], Tensor[(300), float64], Tensor[(300), float64]) */;
  %1393 = @func_2653() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1394 = cos(%1388) /* ty=Tensor[(2, 2, 5), float32] */;
  %1395 = %1389.1;
  %1396 = %1392.0;
  %1397 = %1393.1;
  (%1394, %1395, %1396, meta[relay.Constant][44] /* ty=Tensor[(260), float32] */, %1397)
}

def @func_4428(%var_4427: Tensor[(20), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
  %1405 = fn (%var_4403: Tensor[(20), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) {
    %1398 = cast(%var_4403, dtype="float32") /* ty=Tensor[(20), float32] */;
    %1399 = reshape(%1398, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float32] */;
    %1400 = @func_4007(%1399) /* ty=(Tensor[(2, 2, 5), float32], Tensor[(8, 5, 15), float64], Tensor[(4, 13, 5), float64], Tensor[(260), float32], Tensor[(10, 15, 2), float64]) */;
    %1401 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1402 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
    %1403 = %1400.4;
    %1404 = %1401.0;
    (%1402, %1403, %var_4403, %1404)
  };
  %1405(%var_4427) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(20), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_10203() -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) {
  %1418 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) {
    %1406 = cast(meta[relay.Constant][45] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1407 = reshape(%1406, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %1408 = @func_1725(%1407) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
    %1409 = @func_5265() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1410 = @func_5897() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) */;
    %1411 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    %1412 = %1408.4;
    %1413 = @func_2138() /* ty=Tensor[(8, 5, 15), float64] */;
    %1414 = @func_8688() /* ty=Tensor[(8, 5, 15), float64] */;
    %1415 = %1409.0;
    %1416 = %1410.2;
    %1417 = @func_4223() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1411, %1412, meta[relay.Constant][45] /* ty=Tensor[(300), float64] */, %1413, %1414, %1415, %1416, %1417)
  };
  %1418() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64]) */
}

def @func_1529(%var_1514: uint32, %var_1515: Tensor[(10, 10, 6), uint32]) -> (Tensor[(10, 10, 6), bool],) {
  %1419 = cast(%var_1514, dtype="bool") /* ty=bool */;
  %1420 = cast(%var_1515, dtype="bool") /* ty=Tensor[(10, 10, 6), bool] */;
  %1421 = less(%1419, %1420) /* ty=Tensor[(10, 10, 6), bool] */;
  (%1421,)
}

def @func_18118() -> Tensor[(8, 5, 15), float64] {
  %1422 = @func_5993() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1422.1
}

def @func_4363() -> (Tensor[(8, 5, 15), float64],) {
  %1423 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_7708() -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) {
  %1425 = @func_7366() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1426 = @func_4067() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */;
  %1427 = %1425.3;
  %1428 = %1426.1;
  (%1427, %1428)
}

def @func_10909() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1432 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1429 = @func_5664() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1430 = @func_2464() /* ty=Tensor[(8, 5, 15), float64] */;
    %1431 = %1429.0;
    (%1430, %1431)
  };
  %1432() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14405() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1433 = @func_12827() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1434 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1435 = @func_2733() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1436 = %1433.1;
  %1437 = %1434.0;
  %1438 = %1435.0;
  (%1436, %1437, %1438)
}

def @func_14724() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1443 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1439 = @func_3750() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1440 = @func_7890() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1441 = %1439.0;
    %1442 = %1440.2;
    (%1441, %1442)
  };
  %1443() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_15472() -> Tensor[(8, 5, 15), float64] {
  %1444 = @func_11434() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1444.0
}

def @func_16125() -> (Tensor[(8, 5, 15), float64],) {
  %1447 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1445 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1446 = %1445.0;
    (%1446,)
  };
  %1447() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_5036() -> Tensor[(8, 5, 15), float64] {
  @func_3143() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_2734() -> (Tensor[(8, 5, 15), float64],) {
  %1449 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1448 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_2219(%var_2199: Tensor[(10, 15, 2), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(1, 300), float64], Tensor[(8, 5, 15), bool], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int64], Tensor[(8, 5, 15), float64]) {
  %1450 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1451 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 300), float64] */, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %1452 = reshape(%1451, newshape=[50, 6]) /* ty=Tensor[(50, 6), float64] */;
  %1453 = @func_1667(%1452) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */;
  %1454 = %1453.1;
  %1455 = cast(%1454, dtype="float64") /* ty=Tensor[(10, 15, 2), float64] */;
  %1456 = reshape(%1455, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %1457 = @func_1725(%1456) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %1458 = @func_1589() /* ty=(Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
  %1459 = cast(%1454, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %1460 = log2(%1459) /* ty=Tensor[(10, 15, 2), float32] */;
  %1461 = cast(%var_2199, dtype="int64") /* ty=Tensor[(10, 15, 2), int64] */;
  %1462 = shape_of(%1460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1463 = cast(%1460, dtype="int64") /* ty=Tensor[(10, 15, 2), int64] */;
  %1464 = dyn.reshape(%1461, %1462, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1465 = %1450.0;
  %1466 = cast(%1465, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %1467 = reshape(%1466, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float64] */;
  %1468 = @func_1222(%1467) /* ty=(Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) */;
  %1469 = %1457.6;
  %1470 = %1458.0;
  %1471 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %1472 = minimum(%1463, %1464) /* ty=Tensor[(10, 15, 2), int64] */;
  %1473 = %1468.1;
  (%1465, meta[relay.Constant][46] /* ty=Tensor[(1, 300), float64] */, %1469, %1470, %1471, %1472, %1473)
}

def @func_13389(%var_13387: Tensor[(10, 15, 2), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) {
  @func_13386(%var_13387) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), int8]) */
}

def @func_6563() -> Tensor[(8, 5, 15), float64] {
  @func_6561() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_3221() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1477 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1474 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1475 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    %1476 = %1474.0;
    (%1475, %1476)
  };
  %1477() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_11982() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1478 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1479 = %1478.0;
  %1480 = @func_3583() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1479, %1480)
}

def @func_17414(%var_17413: Tensor[(7, 4, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 4, 7), bool]) {
  %1491 = fn (%var_17391: Tensor[(7, 4, 7), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(7, 4, 7), bool]) {
    %1481 = cast(%var_17391, dtype="float64") /* ty=Tensor[(7, 4, 7), float64] */;
    %1482 = cosh(%1481) /* ty=Tensor[(7, 4, 7), float64] */;
    %1483 = cast(%1482, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
    %1484 = acosh(%1483) /* ty=Tensor[(7, 4, 7), float32] */;
    %1485 = cast(%1482, dtype="bool") /* ty=Tensor[(7, 4, 7), bool] */;
    %1486 = shape_of(%1484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1487 = cast(%1484, dtype="bool") /* ty=Tensor[(7, 4, 7), bool] */;
    %1488 = dyn.reshape(%1485, %1486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1489 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
    %1490 = logical_or(%1487, %1488) /* ty=Tensor[(7, 4, 7), bool] */;
    (%1489, %1490)
  };
  %1491(%var_17413) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(7, 4, 7), bool]) */
}

def @func_3584() -> Tensor[(8, 5, 15), float64] {
  %1493 = fn () -> Tensor[(8, 5, 15), float64] {
    %1492 = @func_2548() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1492.1
  };
  %1493() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_18747() -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %1494 = @func_5765() /* ty=Tensor[(8, 5, 15), bool] */;
  %1495 = @func_14360() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1494, %1495)
}

def @func_19718(%var_19686: uint64) -> (Tensor[(8, 5, 15), float64], uint64, Tensor[(20, 108), uint16], Tensor[(8, 5, 15), float64]) {
  %1496 = @func_12827() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1497 = cast(%var_19686, dtype="uint64") /* ty=uint64 */;
  %1498 = cast(meta[relay.Constant][47] /* ty=Tensor[(20, 108), uint64] */, dtype="uint64") /* ty=Tensor[(20, 108), uint64] */;
  %1499 = cast(meta[relay.Constant][47] /* ty=Tensor[(20, 108), uint64] */, dtype="uint64") /* ty=Tensor[(20, 108), uint64] */;
  %1500 = reshape(%1497, newshape=[]) /* ty=uint64 */;
  %1501 = reshape(%1498, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), uint64] */;
  %1502 = reshape(%1499, newshape=[15, 9, 16]) /* ty=Tensor[(15, 9, 16), uint64] */;
  %1503 = @func_1562(%1500, %1501, %1502) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64]) */;
  %1504 = %1503.0;
  %1505 = cast(%1504, dtype="uint16") /* ty=Tensor[(15, 9, 16), uint16] */;
  %1506 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(20, 108), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1507 = cast(meta[relay.Constant][47] /* ty=Tensor[(20, 108), uint64] */, dtype="uint16") /* ty=Tensor[(20, 108), uint16] */;
  %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1509 = @func_3875() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1510 = %1496.1;
  %1511 = right_shift(%1507, %1508) /* ty=Tensor[(20, 108), uint16] */;
  %1512 = %1509.0;
  (%1510, %var_19686, %1511, %1512)
}

def @func_2864() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1517 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1513 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    %1514 = cast(%1513, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %1515 = log2(%1514) /* ty=Tensor[(8, 5, 15), float64] */;
    %1516 = @func_2675() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1515, %1516)
  };
  %1517() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_3481() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1518 = @func_3406() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1519 = cast(meta[relay.Constant][48] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1520 = reshape(%1519, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %1521 = @func_1725(%1520) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), bool]) */;
  %1522 = @func_2440() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1523 = %1518.3;
  %1524 = %1521.5;
  %1525 = %1522.0;
  (%1523, %1524, meta[relay.Constant][48] /* ty=Tensor[(300), float64] */, %1525)
}

def @func_181(%var_179: Tensor[(11, 8, 11), int64], %var_180: Tensor[(11, 8, 11), int64]) -> (Tensor[(11, 8, 11), int64],) {
  @func_177(%var_179, %var_180) /* ty=(Tensor[(11, 8, 11), int64],) */
}

def @func_7581(%var_7579: Tensor[(1, 2, 16), float64]) -> Tensor[(1, 2, 16), float64] {
  @func_7578(%var_7579) /* ty=Tensor[(1, 2, 16), float64] */
}

def @func_11637() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_11635() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_13573() -> (Tensor[(8, 5, 15), float64],) {
  @func_13571() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_16732(%var_16730: Tensor[(4, 2, 7), float32]) -> (Tensor[(4, 2, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
  @func_16729(%var_16730) /* ty=(Tensor[(4, 2, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) */
}

def @func_7710() -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) {
  @func_7708() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64]) */
}

def @func_11079(%var_11055: Tensor[(2, 16, 11), float64]) -> (Tensor[(2, 16, 11), float64],) {
  %1526 = cast(%var_11055, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %1527 = log10(%1526) /* ty=Tensor[(2, 16, 11), float64] */;
  %1528 = cast(%1527, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %1529 = cos(%1528) /* ty=Tensor[(2, 16, 11), float64] */;
  (%1529,)
}

def @func_12458(%var_12456: Tensor[(13, 15, 8), float32]) -> (Tensor[(13, 15, 8), float32], Tensor[(8, 5, 15), float64]) {
  @func_12455(%var_12456) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_7188() -> Tensor[(300), float64] {
  %1530 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1530.2
}

def @func_16729(%var_16699: Tensor[(4, 2, 7), float32]) -> (Tensor[(4, 2, 7), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
  %1531 = cast(%var_16699, dtype="float32") /* ty=Tensor[(4, 2, 7), float32] */;
  %1532 = erf(%1531) /* ty=Tensor[(4, 2, 7), float32] */;
  %1533 = cast(%1532, dtype="float64") /* ty=Tensor[(4, 2, 7), float64] */;
  %1534 = @func_5555() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1535 = cast(meta[relay.Constant][49] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1536 = reshape(%1535, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %1537 = @func_12759(%1536) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) */;
  %1538 = log2(%1533) /* ty=Tensor[(4, 2, 7), float64] */;
  %1539 = %1534.0;
  %1540 = %1537.0;
  (%1538, %1539, %1540, meta[relay.Constant][49] /* ty=Tensor[(390), int32] */)
}

def @func_7573() -> (Tensor[(8, 5, 15), float64],) {
  @func_7571() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_3435() -> Tensor[(8, 5, 15), float64] {
  %1541 = @func_3025() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1541.0
}

def @func_6671() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1542 = @func_3110() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1543 = %1542.0;
  %1544 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1543, %1544)
}

def @func_16021() -> Tensor[(?, 8, 11), float32] {
  %1546 = fn () -> Tensor[(?, 8, 11), float32] {
    %1545 = @func_5544() /* ty=(Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) */;
    %1545.0
  };
  %1546() /* ty=Tensor[(?, 8, 11), float32] */
}

def @func_4946() -> Tensor[(8, 5, 15), float64] {
  @func_3067() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_16387() -> Tensor[(8, 5, 15), float64] {
  @func_16385() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_13677() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
  %1557 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) {
    %1547 = @func_9792() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1548 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1549 = @func_11982() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1550 = cast(meta[relay.Constant][50] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
    %1551 = reshape(%1550, newshape=[390]) /* ty=Tensor[(390), int32] */;
    %1552 = @func_12759(%1551) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 6, 5), int32], Tensor[(390), int32]) */;
    %1553 = %1547.0;
    %1554 = %1548.0;
    %1555 = %1549.1;
    %1556 = %1552.0;
    (%1553, %1554, %1555, %1556, meta[relay.Constant][50] /* ty=Tensor[(390), int32] */)
  };
  %1557() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(390), int32]) */
}

def @func_1842() -> (Tensor[(8, 5, 15), float64],) {
  @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_10892() -> Tensor[(8, 5, 15), float64] {
  %1559 = fn () -> Tensor[(8, 5, 15), float64] {
    %1558 = @func_8198() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1558.0
  };
  %1559() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5158() -> (Tensor[(8, 5, 15), float64],) {
  @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_3026() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1563 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1560 = @func_2074() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1561 = %1560.0;
    %1562 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1561, %1562)
  };
  %1563() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14059() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1568 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1564 = @func_5396() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1565 = @func_7366() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1566 = %1564.0;
    %1567 = %1565.0;
    (%1566, %1567)
  };
  %1568() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_14983(%var_14958: Tensor[(324), float32]) -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1569 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1570 = cast(%var_14958, dtype="float32") /* ty=Tensor[(324), float32] */;
  %1571 = cast(meta[relay.Constant][51] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1572 = reshape(%1570, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %1573 = reshape(%1571, newshape=[10, 30]) /* ty=Tensor[(10, 30), float64] */;
  %1574 = @func_8471(%1572, %1573) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(324), float32], Tensor[(390), int32], Tensor[(10, 30), float64], Tensor[(1, 300), float64]) */;
  %1575 = @func_14665() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1576 = %1569.0;
  %1577 = %1574.1;
  %1578 = %1575.0;
  (%1576, %1577, %var_14958, meta[relay.Constant][51] /* ty=Tensor[(300), float64] */, %1578)
}

def @func_11424() -> (Tensor[(8, 5, 15), float64],) {
  @func_11422() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_4090() -> Tensor[(1, 390), int32] {
  %1580 = fn () -> Tensor[(1, 390), int32] {
    %1579 = @func_1433() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(11, 88), int64], Tensor[(13, 6, 5), int32], Tensor[(1, 390), int32], Tensor[(13, 6, 5), int32], Tensor[(11, 8, 11), float64], Tensor[(8, 5, 15), float64]) */;
    %1579.3
  };
  %1580() /* ty=Tensor[(1, 390), int32] */
}

def @func_17355() -> Tensor[(8, 5, 15), float64] {
  %1581 = @func_4908() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1581.1
}

def @func_1669(%var_1668: Tensor[(50, 6), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) {
  %1589 = fn (%var_1660: Tensor[(50, 6), float64]) -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) {
    %1582 = @func_1351() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1583 = cast(%var_1660, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
    %1584 = cast(%var_1660, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
    %1585 = reshape(%1583, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1586 = reshape(%1584, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1587 = %1582.1;
    %1588 = @func_324(%1585, %1586) /* ty=Tensor[(10, 15, 2), float64] */;
    (%1587, %1588, %var_1660)
  };
  %1589(%var_1668) /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(50, 6), float64]) */
}

def @func_13442(%var_13441: Tensor[(3, 14, 7), float32]) -> (Tensor[(3, 14, 7), float32], Tensor[(8, 5, 15), float64]) {
  %1597 = fn (%var_13397: Tensor[(3, 14, 7), float32]) -> (Tensor[(3, 14, 7), float32], Tensor[(8, 5, 15), float64]) {
    %1590 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
    %1591 = shape_of(%var_13397, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1592 = cast(%var_13397, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
    %1593 = dyn.reshape(%1590, %1591, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1594 = @func_11604() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1595 = mod(%1592, %1593) /* ty=Tensor[(3, 14, 7), float32] */;
    %1596 = %1594.0;
    (%1595, %1596)
  };
  %1597(%var_13441) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(8, 5, 15), float64]) */
}

def @func_5361() -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
  %1602 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) {
    %1598 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
    %1599 = @func_4766() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(2, 52), uint64], Tensor[(10, 15, 2), float64], Tensor[(8, 5, 15), float64]) */;
    %1600 = %1598.0;
    %1601 = %1599.3;
    (%1600, %1601)
  };
  %1602() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64]) */
}

def @func_7228() -> (Tensor[(8, 5, 15), float64],) {
  %1605 = fn () -> (Tensor[(8, 5, 15), float64],) {
    %1603 = @func_3300() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1604 = %1603.0;
    (%1604,)
  };
  %1605() /* ty=(Tensor[(8, 5, 15), float64],) */
}

def @func_7366() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1606 = @func_2115() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1607 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1608 = @func_1945() /* ty=Tensor[(8, 5, 15), float64] */;
  %1609 = %1606.0;
  %1610 = %1607.0;
  %1611 = @func_3067() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1608, %1609, %1610, %1611)
}

def @func_2402() -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
  %1623 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) {
    %1612 = @func_1798() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1613 = %1612.0;
    %1614 = cast(%1613, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
    %1615 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1616 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1617 = reshape(%1615, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1618 = reshape(%1616, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), float64] */;
    %1619 = @func_1958() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1620 = cosh(%1614) /* ty=Tensor[(8, 5, 15), float64] */;
    %1621 = @func_324(%1617, %1618) /* ty=Tensor[(10, 15, 2), float64] */;
    %1622 = %1619.0;
    (%1620, %1621, meta[relay.Constant][53] /* ty=Tensor[(300), float64] */, %1622)
  };
  %1623() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(10, 15, 2), float64], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_5133(%var_5128: float64, %var_5129: Tensor[(4, 15, 4), float64]) -> Tensor[(4, 15, 4), float64] {
  %1624 = cast(%var_5128, dtype="float64") /* ty=float64 */;
  %1625 = cast(%var_5129, dtype="float64") /* ty=Tensor[(4, 15, 4), float64] */;
  mod(%1624, %1625) /* ty=Tensor[(4, 15, 4), float64] */
}

def @func_5038() -> Tensor[(8, 5, 15), float64] {
  @func_5036() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_12351() -> (Tensor[(9, 3, 4), float32],) {
  %1626 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %1627 = exp(%1626) /* ty=Tensor[(9, 3, 4), float32] */;
  (%1627,)
}

def @func_5994() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1632 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
    %1628 = @func_5156() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1629 = %1628.0;
    %1630 = @func_3435() /* ty=Tensor[(8, 5, 15), float64] */;
    %1631 = @func_5307() /* ty=Tensor[(8, 5, 15), float64] */;
    (%1629, %1630, %1631)
  };
  %1632() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_19627() -> Tensor[(8, 5, 15), float64] {
  @func_17702() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4068() -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
  %1639 = fn () -> (Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) {
    %1633 = @func_2716() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1634 = cast(meta[relay.Constant][55] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %1635 = reshape(%1634, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), uint64] */;
    %1636 = @func_3848(%1635) /* ty=(Tensor[(13, 4, 2), uint64],) */;
    %1637 = %1633.0;
    %1638 = %1636.0;
    (%1637, %1638, meta[relay.Constant][55] /* ty=Tensor[(104), uint64] */)
  };
  %1639() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(104), uint64]) */
}

def @func_3617(%var_3615: Tensor[(6, 12, 15), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  @func_3614(%var_3615) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */
}

def @func_1222(%var_1211: Tensor[(8, 5, 15), float64]) -> (Tensor[(8, 5, 15), bool], Tensor[(8, 5, 15), float64]) {
  %1640 = @func_1178() /* ty=Tensor[(8, 5, 15), float64] */;
  %1641 = cast(%var_1211, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %1642 = shape_of(%1640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1643 = cast(%1640, dtype="bool") /* ty=Tensor[(8, 5, 15), bool] */;
  %1644 = dyn.reshape(%1641, %1642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1645 = cast(%var_1211, dtype="float64") /* ty=Tensor[(8, 5, 15), float64] */;
  %1646 = greater(%1643, %1644) /* ty=Tensor[(8, 5, 15), bool] */;
  %1647 = asinh(%1645) /* ty=Tensor[(8, 5, 15), float64] */;
  (%1646, %1647)
}

def @func_5544() -> (Tensor[(?, 8, 11), float32], Tensor[(?, 8, 11), bool], Tensor[(8, 5, 15), float64]) {
  %1648 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %1649 = asinh(%1648) /* ty=Tensor[(1, 8, 11), float32] */;
  %1650 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %1651 = shape_of(%1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1652 = cast(%1649, dtype="float32") /* ty=Tensor[(1, 8, 11), float32] */;
  %1653 = dyn.reshape(%1650, %1651, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1654 = cast(%1649, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %1655 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(1, 8, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1656 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 8, 11), float32] */, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %1657 = dyn.reshape(%1654, %1655, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1658 = @func_4585() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1659 = floor_divide(%1652, %1653) /* ty=Tensor[(?, 8, 11), float32] */;
  %1660 = greater(%1656, %1657) /* ty=Tensor[(?, 8, 11), bool] */;
  %1661 = %1658.0;
  (%1659, %1660, %1661)
}

def @func_12680() -> Tensor[(8, 5, 15), float64] {
  %1663 = fn () -> Tensor[(8, 5, 15), float64] {
    %1662 = @func_11635() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
    %1662.0
  };
  %1663() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_7890() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) {
  %1664 = @func_3481() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), bool], Tensor[(300), float64], Tensor[(8, 5, 15), float64]) */;
  %1665 = @func_6671() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64]) */;
  %1666 = %1664.0;
  %1667 = %1665.1;
  %1668 = @func_2024() /* ty=Tensor[(8, 5, 15), float64] */;
  (%1666, %1667, %1668)
}

def @func_2139() -> Tensor[(8, 5, 15), float64] {
  %1670 = fn () -> Tensor[(8, 5, 15), float64] {
    %1669 = @func_1840() /* ty=(Tensor[(8, 5, 15), float64],) */;
    %1669.0
  };
  %1670() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_4224() -> Tensor[(8, 5, 15), float64] {
  %1671 = fn () -> Tensor[(8, 5, 15), float64] {
    @func_1271() /* ty=Tensor[(8, 5, 15), float64] */
  };
  %1671() /* ty=Tensor[(8, 5, 15), float64] */
}

def @func_5899() -> (Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) {
  @func_5897() /* ty=(Tensor[(8, 5, 15), float64], Tensor[(8, 5, 15), float64], Tensor[(13, 4, 2), uint64], Tensor[(8, 5, 15), float64], Tensor[(2, 52), uint64], Tensor[(8, 5, 15), float64]) */
}

def @func_8986() -> (Tensor[(8, 5, 15), float64],) {
  %1672 = @func_3271() /* ty=(Tensor[(8, 5, 15), float64],) */;
  %1673 = %1672.0;
  (%1673,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen693/build/output.py:6224: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen693/build/output.py", line 6229, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(416) tvmgen_default_fused_bitwise_xor_kernel0(uint64_t* __restrict__ T_bitwise_xor, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_bitwise_xor[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] ^ placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


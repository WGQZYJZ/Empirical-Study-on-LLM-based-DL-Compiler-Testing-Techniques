==========mod==========
#[version = "0.0.5"]
def @func_3753() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  %0 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %3 = reshape(%1, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %4 = reshape(%2, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %5 = @func_709(%3, %4) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %6 = %0.0;
  %7 = %5.0;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(91), float64] */, meta[relay.Constant][1] /* ty=Tensor[(637), float64] */)
}

def @func_1476() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %8 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %9 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %10 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %11 = %8.0;
  %12 = %9.0;
  %13 = %10.0;
  %14 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  (%11, %12, %13, %14)
}

def @func_16661() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %15 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %16 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %17 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %18 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %19 = %15.0;
  %20 = %16.0;
  %21 = %17.0;
  %22 = %18.0;
  (%19, %20, %21, %22)
}

def @func_7964() -> (Tensor[(13, 9, 12), float32],) {
  %23 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  (%23,)
}

def @func_11363() -> Tensor[(13, 9, 12), float32] {
  %24 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %24.0
}

def @func_11671(%var_11654: Tensor[(1120), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
  %25 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %26 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %27 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %28 = cast(%var_11654, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %29 = reshape(%28, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), float64] */;
  %30 = @func_7643(%29) /* ty=(Tensor[(16, 14, 5), float32],) */;
  %31 = %25.0;
  %32 = %26.0;
  %33 = %27.0;
  %34 = %30.0;
  (%31, %32, %33, %34, %var_11654)
}

def @func_12485() -> Tensor[(13, 9, 12), float32] {
  %35 = @func_6056() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %35.0
}

def @func_5850() -> (Tensor[(13, 9, 12), float32], int32) {
  %36 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %37 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %38 = %36.5;
  %39 = %37.3;
  (%38, %39)
}

def @func_7905() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
  %40 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(320), uint32] */, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(320), uint32] */, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %43 = reshape(%41, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %44 = reshape(%42, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %45 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %46 = %40.0;
  %47 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %48 = @func_1247(%43, %44) /* ty=Tensor[(16, 4, 5), uint32] */;
  %49 = %45.0;
  (%46, %47, %48, meta[relay.Constant][2] /* ty=Tensor[(320), uint32] */, %49)
}

def @func_19205(%var_19185: float32) -> (Tensor[(7, 11, 5), float32], Tensor[(77, 15), float32]) {
  %50 = cast(%var_19185, dtype="float32") /* ty=float32 */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  %52 = power(%50, %51) /* ty=Tensor[(7, 11, 5), float32] */;
  %53 = @func_15580() /* ty=Tensor[(77, 15), float32] */;
  (%52, %53)
}

def @func_1502() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %54 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %55 = %54.1;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%55, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %60 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %61 = equal(%58, %59) /* ty=Tensor[(13, 9, 12), bool] */;
  %62 = %60.0;
  (%61, %62)
}

def @func_9811() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %63 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %64 = %63.3;
  %65 = @func_8303() /* ty=Tensor[(13, 9, 12), float32] */;
  (%64, %65)
}

def @func_9336() -> Tensor[(13, 9, 12), float32] {
  %66 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %66.1
}

def @func_14469() -> int32 {
  %67 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %67.1
}

def @func_1276() -> (Tensor[(13, 9, 12), float32],) {
  %68 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%68,)
}

def @func_10891() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) {
  %69 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %70 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %71 = %69.0;
  %72 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %73 = %70.2;
  (%71, %72, %73)
}

def @func_8883(%var_8879: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %74 = cast(%var_8879, dtype="float64") /* ty=Tensor[(91), float64] */;
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(91, 7), float64] */, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
  %76 = reshape(%74, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %77 = reshape(%75, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %78 = @func_53(%76, %77) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %79 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  %80 = %78.1;
  (%79, %80, %var_8879, meta[relay.Constant][5] /* ty=Tensor[(91, 7), float64] */)
}

def @func_17046() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %81 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %82 = @func_16261() /* ty=Tensor[(13, 9, 12), bool] */;
  %83 = %81.0;
  (%82, %83)
}

def @func_1634() -> (Tensor[(13, 9, 12), float32],) {
  %84 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%84,)
}

def @func_9983() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %85 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %86 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %87 = %85.0;
  %88 = %86.0;
  (%87, %88)
}

def @func_18746() -> (Tensor[(13, 9, 12), int16],) {
  %89 = @func_13707() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %90 = %89.0;
  (%90,)
}

def @func_10835() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
  %91 = @func_9716() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %93 = reshape(%92, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
  %94 = @func_8221() /* ty=Tensor[(13, 9, 12), float32] */;
  %95 = %91.1;
  %96 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %97 = @func_1612(%93) /* ty=Tensor[(7, 15, 6), bool] */;
  (%94, %95, %96, %97, meta[relay.Constant][6] /* ty=Tensor[(105), int64] */)
}

def @func_4300() -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
  %98 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %99 = %98.3;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %101 = cosh(%100) /* ty=Tensor[(1, 637), float32] */;
  %102 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  (%101, %102)
}

def @func_10095(%var_10070: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) {
  %103 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %104 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
  %105 = cast(%var_10070, dtype="float64") /* ty=Tensor[(637), float64] */;
  %106 = reshape(%104, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %107 = reshape(%105, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %108 = @func_53(%106, %107) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %110 = reshape(%109, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %111 = @func_3252(%110) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %112 = @func_9657() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %113 = %103.1;
  %114 = %108.1;
  %115 = %111.2;
  %116 = %112.0;
  (%113, %114, meta[relay.Constant][7] /* ty=Tensor[(13, 7), float64] */, %var_10070, %115, meta[relay.Constant][8] /* ty=Tensor[(1155), float32] */, %116)
}

def @func_7161(%var_7154: Tensor[(15, 105), float32]) -> (Tensor[(15, 105), bool],) {
  %117 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %118 = %117.3;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(1, 105), bool] */;
  %120 = cast(%var_7154, dtype="bool") /* ty=Tensor[(15, 105), bool] */;
  %121 = equal(%119, %120) /* ty=Tensor[(15, 105), bool] */;
  (%121,)
}

def @func_14794(%var_14774: Tensor[(11, 3, 13), float64]) -> (Tensor[(11, 3, 13), float64], int32) {
  %122 = cast(%var_14774, dtype="float64") /* ty=Tensor[(11, 3, 13), float64] */;
  %123 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %124 = sin(%122) /* ty=Tensor[(11, 3, 13), float64] */;
  %125 = %123.1;
  (%124, %125)
}

def @func_8008(%var_7989: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), float64], Tensor[(637, 1), float32]) {
  %126 = cast(%var_7989, dtype="float64") /* ty=Tensor[(10, 4, 9), float64] */;
  %127 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %128 = asinh(%126) /* ty=Tensor[(10, 4, 9), float64] */;
  %129 = %127.3;
  (%128, %129)
}

def @func_1088() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) {
  %130 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %133 = reshape(%132, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %134 = @func_815(%133) /* ty=(Tensor[(13, 9, 12), int16],) */;
  %135 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %136 = %134.0;
  %137 = %135.2;
  (%131, %136, %137)
}

def @func_1035() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %138 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %139 = reshape(%138, newshape=[]) /* ty=int32 */;
  %140 = @func_588(%139) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %141 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %142 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  %143 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %144 = %140.3;
  %145 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %146 = %141.0;
  (%142, %143, %144, 3 /* ty=int32 */, %145, %146)
}

def @func_2054() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5284() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %147 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %148 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %149 = @func_5175() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %152 = reshape(%151, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %153 = %147.1;
  %154 = %148.0;
  %155 = @func_2266(%152) /* ty=Tensor[(13, 9, 12), int64] */;
  (%153, %154, %150, %155)
}

def @func_2789() -> (Tensor[(13, 9, 12), float32],) {
  %156 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %157 = %156.1;
  (%157,)
}

def @func_11696() -> Tensor[(13, 9, 12), float32] {
  %158 = @func_9086() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %158.5
}

def @func_11746() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) {
  %159 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %160 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %161 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %162 = %159.0;
  %163 = %160.1;
  %164 = %161.1;
  (%162, %163, %164)
}

def @func_8303() -> Tensor[(13, 9, 12), float32] {
  @func_1753() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_11224() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %165 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %166 = @func_11090() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %167 = %165.1;
  %168 = %166.4;
  (%167, %168)
}

def @func_11982(%var_11940: int32) -> (Tensor[(1404), int8], int32, int32, Tensor[(1404), float32], Tensor[(1404), float64]) {
  %169 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %170 = %169.2;
  %171 = cast(meta[relay.Constant][9] /* ty=Tensor[(1404), float32] */, dtype="int8") /* ty=Tensor[(1404), int8] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(1), int32] */;
  %173 = cast(%170, dtype="int8") /* ty=Tensor[(1404), int8] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?), int8] */;
  %175 = cast(%var_11940, dtype="int32") /* ty=int32 */;
  %176 = reshape(%175, newshape=[]) /* ty=int32 */;
  %177 = @func_588(%176) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %178 = cast(%170, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %179 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(1404), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %180 = cast(meta[relay.Constant][9] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?), float32] */;
  %182 = cast(%170, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %183 = bitwise_and(%173, %174) /* ty=Tensor[(1404), int8] */;
  %184 = %177.3;
  %185 = power(%180, %181) /* ty=Tensor[(1404), float32] */;
  %186 = tan(%182) /* ty=Tensor[(1404), float64] */;
  (%183, %184, %var_11940, %185, %186)
}

def @func_13220() -> Tensor[(13, 9, 12), float32] {
  %187 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %187.0
}

def @func_1247(%var_1236: Tensor[(16, 4, 5), uint32], %var_1237: Tensor[(16, 4, 5), uint32]) -> Tensor[(16, 4, 5), uint32] {
  %188 = cast(%var_1237, dtype="uint32") /* ty=Tensor[(16, 4, 5), uint32] */;
  %189 = shape_of(%var_1236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_1236, dtype="uint32") /* ty=Tensor[(16, 4, 5), uint32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%190, %191) /* ty=Tensor[(16, 4, 5), uint32] */
}

def @func_3312() -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) {
  %192 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %193 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(637, 1), float64] */, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %195 = reshape(%193, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %196 = reshape(%194, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %197 = @func_520(%195, %196) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %198 = cast(meta[relay.Constant][11] /* ty=Tensor[(637, 1), float64] */, dtype="float32") /* ty=Tensor[(637, 1), float32] */;
  %199 = %192.5;
  %200 = %197.2;
  %201 = sqrt(%198) /* ty=Tensor[(637, 1), float32] */;
  (%199, %200, meta[relay.Constant][10] /* ty=Tensor[(13, 7), float64] */, %201)
}

def @func_5457() -> (Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) {
  %202 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %203 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %204 = %202.1;
  %205 = %203.1;
  (%204, %205)
}

def @func_13506() -> (Tensor[(13, 9, 12), float32],) {
  %206 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %207 = %206.5;
  (%207,)
}

def @func_16821(%var_16819: Tensor[(91), float64]) -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64]) {
  %208 = @func_15574() /* ty=(Tensor[(637), float64],) */;
  %209 = cast(%var_16819, dtype="float64") /* ty=Tensor[(91), float64] */;
  %210 = %208.0;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(637), float64] */;
  %212 = reshape(%209, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %213 = reshape(%211, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %214 = @func_12755(%212, %213) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) */;
  %215 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %216 = %214.5;
  (%210, %215, %216, %var_16819)
}

def @func_1705() -> (Tensor[(13, 9, 12), bool],) {
  %217 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %218 = %217.0;
  (%218,)
}

def @func_17554() -> Tensor[(13, 9, 12), float32] {
  %219 = @func_13287() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %219.1
}

def @func_6559() -> Tensor[(13, 9, 12), float32] {
  @func_3139() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_15755() -> (Tensor[(13, 9, 12), float32],) {
  %220 = @func_15425() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %221 = %220.1;
  (%221,)
}

def @func_15801() -> Tensor[(13, 9, 12), float32] {
  %222 = @func_15456() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %222.1
}

def @func_14512() -> (Tensor[(13, 9, 12), float32],) {
  %223 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %224 = %223.0;
  (%224,)
}

def @func_3139() -> Tensor[(13, 9, 12), float32] {
  %225 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %225.0
}

def @func_2448() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %226 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %227 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
  %228 = %226.0;
  %229 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %230 = %227.3;
  (%228, %229, %230)
}

def @func_7495() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %231 = @func_5175() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %232 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
  %233 = %231.0;
  %234 = %232.0;
  %235 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  (%233, %234, %235)
}

def @func_5175() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %236 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %237 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %238 = %236.0;
  %239 = %237.0;
  (%238, %239)
}

def @func_9523() -> (Tensor[(320), uint32],) {
  %240 = @func_7905() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */;
  %241 = %240.3;
  (%241,)
}

def @func_1212() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) {
  %242 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %244 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 637), float64] */, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %245 = reshape(%243, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %246 = reshape(%244, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %247 = @func_53(%245, %246) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %248 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %249 = reshape(%248, newshape=[]) /* ty=int32 */;
  %250 = @func_588(%249) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %251 = %242.0;
  %252 = %247.1;
  %253 = %250.0;
  (%251, %252, meta[relay.Constant][12] /* ty=Tensor[(91), float64] */, meta[relay.Constant][13] /* ty=Tensor[(1, 637), float64] */, %253, 9 /* ty=int32 */)
}

def @func_17313() -> (Tensor[(13, 9, 12), float32],) {
  %254 = @func_11746() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) */;
  %255 = %254.2;
  (%255,)
}

def @func_9174() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %256 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %257 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %258 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
  %259 = %256.0;
  %260 = %257.1;
  %261 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  (%258, %259, %260, %261)
}

def @func_10515() -> Tensor[(13, 9, 12), float32] {
  %262 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %262.0
}

def @func_12859() -> (Tensor[(13, 9, 12), float32],) {
  %263 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  (%263,)
}

def @func_17717() -> Tensor[(13, 9, 12), float32] {
  @func_4089() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_2747() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %264 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %265 = %264.0;
  %266 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
  (%265, %266)
}

def @func_6056() -> (Tensor[(13, 9, 12), float32],) {
  %267 = @func_2591() /* ty=Tensor[(13, 9, 12), float32] */;
  (%267,)
}

def @func_12452(%var_12318: int16, %var_12319: Tensor[(1, 4, 15), int16], %var_12403: Tensor[(320), uint32], %var_12404: Tensor[(91), float64]) -> (Tensor[(1, 4, 15), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(1155), float64], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(91), float64], Tensor[(?, 4, 15), bool]) {
  %268 = cast(%var_12319, dtype="float32") /* ty=Tensor[(1, 4, 15), float32] */;
  %269 = cast(%var_12318, dtype="float32") /* ty=float32 */;
  %270 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %271 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %272 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %273 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %274 = @func_11243() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %275 = @func_9716() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %277 = reshape(%276, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %278 = @func_6824(%277) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
  %279 = %278.5;
  %280 = cast(meta[relay.Constant][14] /* ty=Tensor[(1155), float32] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(1), int32] */;
  %282 = cast(%279, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?), float64] */;
  %284 = @func_9983() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %285 = cast(%var_12403, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %286 = cast(%var_12403, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %287 = cast(%var_12404, dtype="float64") /* ty=Tensor[(91), float64] */;
  %288 = reshape(%285, newshape=[40, 8]) /* ty=Tensor[(40, 8), uint32] */;
  %289 = reshape(%286, newshape=[40, 8]) /* ty=Tensor[(40, 8), uint32] */;
  %290 = reshape(%287, newshape=[13, 7]) /* ty=Tensor[(13, 7), float64] */;
  %291 = @func_4392(%288, %289, %290) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) */;
  %292 = cast(%var_12319, dtype="float64") /* ty=Tensor[(1, 4, 15), float64] */;
  %293 = log10(%292) /* ty=Tensor[(1, 4, 15), float64] */;
  %294 = cast(%var_12318, dtype="int16") /* ty=int16 */;
  %295 = cast(%var_12319, dtype="int16") /* ty=Tensor[(1, 4, 15), int16] */;
  %296 = bitwise_and(%294, %295) /* ty=Tensor[(1, 4, 15), int16] */;
  %297 = cast(%296, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
  %298 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%293, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %301 = floor_mod(%268, %269) /* ty=Tensor[(1, 4, 15), float32] */;
  %302 = %270.0;
  %303 = %271.1;
  %304 = %272.0;
  %305 = %273.0;
  %306 = %274.0;
  %307 = %275.0;
  %308 = subtract(%282, %283) /* ty=Tensor[(1155), float64] */;
  %309 = %284.1;
  %310 = %291.1;
  %311 = equal(%299, %300) /* ty=Tensor[(?, 4, 15), bool] */;
  (%301, %302, %303, %304, %305, %306, %307, %308, %309, %310, %var_12403, %var_12404, %311)
}

def @func_13791() -> Tensor[(13, 9, 12), float32] {
  %312 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %312.0
}

def @func_520(%var_503: Tensor[(91), float64], %var_504: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) {
  %313 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %314 = cast(%var_503, dtype="float64") /* ty=Tensor[(91), float64] */;
  %315 = cast(%var_504, dtype="float64") /* ty=Tensor[(637), float64] */;
  %316 = reshape(%314, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %317 = reshape(%315, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %318 = @func_53(%316, %317) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %319 = %313.0;
  %320 = %318.0;
  (%319, %320, %var_503, %var_504)
}

def @func_15026() -> (Tensor[(13, 9, 12), float32], Tensor[(320), uint32], Tensor[(16, 14, 5), float32], Tensor[(13, 9, 12), float32]) {
  %321 = @func_12121() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %322 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
  %323 = @func_11514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) */;
  %324 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %325 = %321.0;
  %326 = %322.0;
  %327 = %323.1;
  %328 = %324.0;
  (%325, %326, %327, %328)
}

def @func_5734() -> (Tensor[(13, 9, 12), float32], int32) {
  %329 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %330 = @func_4166() /* ty=(int32,) */;
  %331 = %329.0;
  %332 = %330.0;
  (%331, %332)
}

def @func_3630() -> (Tensor[(13, 9, 12), float32],) {
  %333 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %334 = %333.0;
  (%334,)
}

def @func_13787() -> (Tensor[(13, 9, 12), float32], Tensor[(637, ?), int64]) {
  %335 = @func_9672() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %336 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %337 = %336.3;
  %338 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %339 = %338.2;
  %340 = cast(%337, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %341 = cast(%339, dtype="float64") /* ty=float64 */;
  %342 = mod(%340, %341) /* ty=Tensor[(637, 1), float64] */;
  %343 = cast(%337, dtype="int64") /* ty=Tensor[(637, 1), int64] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(2), int32] */;
  %345 = cast(%342, dtype="int64") /* ty=Tensor[(637, 1), int64] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %347 = %335.0;
  %348 = bitwise_and(%345, %346) /* ty=Tensor[(637, ?), int64] */;
  (%347, %348)
}

def @func_2618() -> (Tensor[(13, 9, 12), float32],) {
  %349 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %350 = %349.0;
  (%350,)
}

def @func_7336(%var_7297: Tensor[(10, 5, 1), int32], %var_7298: Tensor[(10, 5, 3), int32]) -> (Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) {
  %351 = cast(%var_7297, dtype="int32") /* ty=Tensor[(10, 5, 1), int32] */;
  %352 = cast(%var_7298, dtype="int32") /* ty=Tensor[(10, 5, 3), int32] */;
  %353 = @func_6947() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %354 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %355 = cast(%var_7297, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
  %356 = bitwise_or(%351, %352) /* ty=Tensor[(10, 5, 3), int32] */;
  %357 = %353.1;
  %358 = %354.0;
  %359 = asinh(%355) /* ty=Tensor[(10, 5, 1), float64] */;
  (%356, %357, %358, %359)
}

def @func_9395() -> (Tensor[(13, 9, 12), bool],) {
  %360 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %361 = %360.0;
  (%361,)
}

def @func_8808() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %362 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %363 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %364 = %362.1;
  %365 = %363.0;
  (%364, %365)
}

def @func_13035() -> (Tensor[(13, 9, 12), float32],) {
  %366 = @func_12608() /* ty=Tensor[(13, 9, 12), float32] */;
  (%366,)
}

def @func_11472(%var_11469: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
  %367 = @func_9657() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %368 = cast(%var_11469, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %369 = cast(%var_11469, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %370 = reshape(%368, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %371 = reshape(%369, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %372 = %367.0;
  %373 = @func_1247(%370, %371) /* ty=Tensor[(16, 4, 5), uint32] */;
  (%372, %373, %var_11469)
}

def @func_718() -> Tensor[(13, 9, 12), float32] {
  @func_560() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_14656(%var_14625: Tensor[(50), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64], Tensor[(7, 15, 6), bool], Tensor[(150, 50), uint8]) {
  %374 = @func_9140() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) */;
  %375 = cast(%var_14625, dtype="int32") /* ty=Tensor[(50), int32] */;
  %376 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 1), int32] */, dtype="int32") /* ty=Tensor[(150, 1), int32] */;
  %377 = reshape(%375, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), int32] */;
  %378 = reshape(%376, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), int32] */;
  %379 = @func_7336(%377, %378) /* ty=(Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) */;
  %380 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %381 = cast(%var_14625, dtype="int64") /* ty=Tensor[(50), int64] */;
  %382 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 1), int32] */, dtype="int64") /* ty=Tensor[(150, 1), int64] */;
  %383 = multiply(%381, %382) /* ty=Tensor[(150, 50), int64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(150, 50), float32] */;
  %385 = sigmoid(%384) /* ty=Tensor[(150, 50), float32] */;
  %386 = cast(%385, dtype="uint8") /* ty=Tensor[(150, 50), uint8] */;
  %387 = cast(%var_14625, dtype="uint8") /* ty=Tensor[(50), uint8] */;
  %388 = %374.0;
  %389 = %379.3;
  %390 = %380.0;
  %391 = minimum(%386, %387) /* ty=Tensor[(150, 50), uint8] */;
  (%388, %389, %390, %391)
}

def @func_17099() -> (Tensor[(1404), float32], Tensor[(637), float64]) {
  %392 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %393 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %394 = %392.2;
  %395 = %393.0;
  (%394, %395)
}

def @func_17533() -> Tensor[(7, 15, 6), bool] {
  %396 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %396.1
}

def @func_10922() -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) {
  %397 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %398 = cast(meta[relay.Constant][16] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %399 = reshape(%398, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %400 = @func_6824(%399) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
  %401 = %397.0;
  %402 = %400.3;
  (%401, %402, meta[relay.Constant][16] /* ty=Tensor[(77, 15), float32] */)
}

def @func_18000() -> Tensor[(637), float64] {
  %403 = @func_15289() /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) */;
  %403.0
}

def @func_4026() -> Tensor[(13, 9, 12), float32] {
  %404 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %404.0
}

def @func_8148() -> (Tensor[(13, 9, 12), bool],) {
  %405 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %406 = %405.0;
  (%406,)
}

def @func_2296() -> (Tensor[(13, 9, 12), float32],) {
  %407 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %408 = %407.1;
  (%408,)
}

def @func_12517() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %409 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %410 = %409.1;
  %411 = @func_12485() /* ty=Tensor[(13, 9, 12), float32] */;
  (%410, %411)
}

def @func_7249() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %412 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %413 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %414 = %412.0;
  %415 = %413.0;
  (%414, %415)
}

def @func_17192(%var_17190: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(637), float64], Tensor[(637), float64]) {
  %416 = @func_14733() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %417 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %418 = cast(%var_17190, dtype="float64") /* ty=Tensor[(637), float64] */;
  %419 = reshape(%418, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %420 = @func_10095(%419) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %421 = %416.1;
  %422 = @func_10515() /* ty=Tensor[(13, 9, 12), float32] */;
  %423 = %417.1;
  %424 = %420.3;
  (%421, %422, %423, %424, %var_17190)
}

def @func_12121() -> (Tensor[(13, 9, 12), float32],) {
  %425 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %426 = %425.3;
  (%426,)
}

def @func_1597() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) {
  %427 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %430 = reshape(%429, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %431 = @func_815(%430) /* ty=(Tensor[(13, 9, 12), int16],) */;
  %432 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %433 = reshape(%432, newshape=[]) /* ty=int32 */;
  %434 = @func_475(%433) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %435 = %431.0;
  %436 = %434.4;
  (%428, %435, %436, -8 /* ty=int32 */)
}

def @func_4322() -> (Tensor[(13, 9, 12), float32],) {
  %437 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %438 = %437.1;
  (%438,)
}

def @func_2683(%var_2673: Tensor[(8, 9, 7), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) {
  %439 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %440 = cast(%var_2673, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %441 = acosh(%440) /* ty=Tensor[(8, 9, 7), float32] */;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %443 = %439.0;
  %444 = log2(%442) /* ty=Tensor[(8, 9, 7), float32] */;
  (%443, %444)
}

def @func_10584() -> (Tensor[(13, 9, 12), float32], Tensor[(91), bool]) {
  %445 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %446 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %447 = %446.2;
  %448 = cast(meta[relay.Constant][17] /* ty=Tensor[(91), float64] */, dtype="bool") /* ty=Tensor[(91), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(1), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(91), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?), bool] */;
  %452 = %445.0;
  %453 = less(%450, %451) /* ty=Tensor[(91), bool] */;
  (%452, %453)
}

def @func_9086() -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %454 = @func_8934() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %455 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %456 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %457 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %458 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %459 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %460 = %454.0;
  %461 = %455.1;
  %462 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  %463 = %456.1;
  %464 = %457.0;
  %465 = %458.1;
  %466 = @func_5925() /* ty=Tensor[(13, 9, 12), float32] */;
  %467 = %459.1;
  %468 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %469 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  (%460, %461, %462, %463, %464, %465, %466, %467, %468, %469)
}

def @func_7373() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %470 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %471 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %472 = reshape(%471, newshape=[]) /* ty=int32 */;
  %473 = @func_475(%472) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %474 = %470.0;
  %475 = %473.7;
  (%474, %475, -7 /* ty=int32 */)
}

def @func_912() -> (Tensor[(13, 9, 12), float32],) {
  %476 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %477 = %476.0;
  (%477,)
}

def @func_16003() -> (Tensor[(2, 637), uint32],) {
  %478 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
  %479 = cast(%478, dtype="uint32") /* ty=Tensor[(?, 637), uint32] */;
  %480 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 637), uint16] */, dtype="uint32") /* ty=Tensor[(2, 637), uint32] */;
  %481 = bitwise_and(%479, %480) /* ty=Tensor[(2, 637), uint32] */;
  (%481,)
}

def @func_3446() -> (Tensor[(13, 9, 12), float32],) {
  %482 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  (%482,)
}

def @func_17879() -> Tensor[(13, 9, 12), float32] {
  %483 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %483.0
}

def @func_770() -> (Tensor[(13, 9, 12), float32],) {
  %484 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %485 = %484.0;
  (%485,)
}

def @func_16261() -> Tensor[(13, 9, 12), bool] {
  %486 = @func_5130() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %486.0
}

def @func_13287() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %487 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %488 = @func_11363() /* ty=Tensor[(13, 9, 12), float32] */;
  %489 = %487.1;
  (%488, %489)
}

def @func_7941() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
  %490 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %491 = cast(meta[relay.Constant][19] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %492 = reshape(%491, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
  %493 = %490.0;
  %494 = @func_1612(%492) /* ty=Tensor[(7, 15, 6), bool] */;
  (%493, %494, meta[relay.Constant][19] /* ty=Tensor[(105), int64] */)
}

def @func_5380() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %495 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %496 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
  %497 = %495.1;
  (%496, %497)
}

def @func_4722() -> (Tensor[(13, 9, 12), float32], int32) {
  %498 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %499 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %500 = %498.0;
  %501 = %499.1;
  (%500, %501)
}

def @func_10419() -> (Tensor[(13, 9, 12), float32],) {
  %502 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %503 = %502.0;
  (%503,)
}

def @func_19138() -> (Tensor[(13, 9, 12), float32],) {
  %504 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %505 = %504.0;
  (%505,)
}

def @func_1358(%var_1349: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %506 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %507 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %509 = cast(%var_1349, dtype="float64") /* ty=Tensor[(91), float64] */;
  %510 = cast(meta[relay.Constant][20] /* ty=Tensor[(91, 7), float64] */, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
  %511 = reshape(%509, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %512 = reshape(%510, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %513 = @func_709(%511, %512) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %514 = %506.0;
  %515 = erf(%508) /* ty=Tensor[(13, 9, 12), float64] */;
  %516 = %513.2;
  (%514, %515, %516, %var_1349, meta[relay.Constant][20] /* ty=Tensor[(91, 7), float64] */)
}

def @func_588(%var_586: int32) -> (Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %517 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %518 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %519 = cast(%var_586, dtype="int32") /* ty=int32 */;
  %520 = reshape(%519, newshape=[]) /* ty=int32 */;
  %521 = @func_475(%520) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %522 = acos(%517) /* ty=Tensor[(7, 16, 6), float32] */;
  %523 = %518.0;
  %524 = %521.1;
  (%522, %523, %524, %var_586)
}

def @func_10781() -> (Tensor[(13, 9, 12), float32],) {
  %525 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %526 = %525.0;
  (%526,)
}

def @main(%var_19670: Tensor[(2, 12, 15), float32]) -> Tensor[(2, 12, 15), float32] {
  %527 = cast(%var_19670, dtype="float32") /* ty=Tensor[(2, 12, 15), float32] */;
  rsqrt(%527) /* ty=Tensor[(2, 12, 15), float32] */
}

def @func_1728() -> (Tensor[(13, 9, 12), float32],) {
  %528 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %529 = %528.0;
  (%529,)
}

def @func_15543() -> (Tensor[(13, 9, 12), int64],) {
  %530 = @func_15326() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */;
  %531 = %530.1;
  (%531,)
}

def @func_6342() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %532 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %533 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %534 = reshape(%533, newshape=[]) /* ty=int32 */;
  %535 = @func_588(%534) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %536 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %537 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %538 = %532.1;
  %539 = %535.1;
  %540 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  %541 = %536.0;
  %542 = %537.0;
  (%538, %539, -4 /* ty=int32 */, %540, %541, %542)
}

def @func_7598() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) {
  %543 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
  %544 = cast(meta[relay.Constant][22] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %545 = reshape(%544, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %546 = @func_2683(%545) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) */;
  %547 = @func_7373() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %548 = %543.0;
  %549 = %546.0;
  %550 = %547.2;
  %551 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  (%548, %549, meta[relay.Constant][22] /* ty=Tensor[(504), float32] */, %550, %551)
}

def @func_14907() -> (Tensor[(13, 9, 12), float32],) {
  %552 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  (%552,)
}

def @func_6824(%var_6803: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %553 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %554 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %555 = reshape(%554, newshape=[]) /* ty=int32 */;
  %556 = @func_475(%555) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %557 = cast(%var_6803, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %558 = reshape(%557, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %559 = @func_3252(%558) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %560 = %553.0;
  %561 = %556.5;
  %562 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %563 = %559.2;
  (%560, %561, -8 /* ty=int32 */, %562, %563, %var_6803)
}

def @func_2644() -> (Tensor[(13, 9, 12), float32],) {
  %564 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %565 = %564.0;
  (%565,)
}

def @func_8392(%var_8372: Tensor[(3, 5, 6), float64], %var_8385: Tensor[(91, 7), float64]) -> (Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %566 = cast(%var_8372, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
  %567 = cast(meta[relay.Constant][23] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %568 = cast(%var_8385, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
  %569 = reshape(%567, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %570 = reshape(%568, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %571 = @func_520(%569, %570) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %572 = sinh(%566) /* ty=Tensor[(3, 5, 6), float64] */;
  %573 = %571.1;
  (%572, %573, meta[relay.Constant][23] /* ty=Tensor[(91), float64] */, %var_8385)
}

def @func_13105() -> (Tensor[(13, 9, 12), float32],) {
  %574 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%574,)
}

def @func_14255() -> Tensor[(12, 16, 4), uint64] {
  %575 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 16, 4), uint64] */;
  %576 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 16, 4), uint64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%577, %578) /* ty=Tensor[(12, 16, 4), uint64] */
}

def @func_3803() -> (Tensor[(13, 9, 12), float32],) {
  %579 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %580 = %579.0;
  (%580,)
}

def @func_8754() -> (Tensor[(13, 9, 12), float32],) {
  %581 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %582 = %581.0;
  (%582,)
}

def @func_11707() -> (Tensor[(13, 9, 12), float32],) {
  %583 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %584 = %583.2;
  (%584,)
}

def @func_13870(%var_13828: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %585 = @func_9672() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %586 = cast(%var_13828, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %587 = reshape(%586, newshape=[320]) /* ty=Tensor[(320), uint32] */;
  %588 = @func_11472(%587) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) */;
  %589 = @func_4005() /* ty=Tensor[(13, 9, 12), bool] */;
  %590 = %585.0;
  %591 = %588.1;
  %592 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
  %593 = @func_13791() /* ty=Tensor[(13, 9, 12), float32] */;
  %594 = @func_6559() /* ty=Tensor[(13, 9, 12), float32] */;
  (%589, %590, %591, %var_13828, %592, %593, %594)
}

def @func_12965(%var_12936: Tensor[(1, 9, 3), int32]) -> (Tensor[(1, 9, 3), float64], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(637), float64]) {
  %595 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %596 = %595.2;
  %597 = cast(%596, dtype="float64") /* ty=float64 */;
  %598 = cast(%var_12936, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %599 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %600 = cast(meta[relay.Constant][26] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %601 = reshape(%600, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %602 = @func_10095(%601) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %603 = mod(%597, %598) /* ty=Tensor[(1, 9, 3), float64] */;
  %604 = %599.1;
  %605 = %602.3;
  (%603, %604, %605, meta[relay.Constant][26] /* ty=Tensor[(637), float64] */)
}

def @func_1662() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %606 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %607 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %608 = %606.0;
  %609 = %607.0;
  (%608, %609)
}

def @func_14018() -> (Tensor[(13, 9, 12), float32],) {
  %610 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%610,)
}

def @func_3602() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %611 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %612 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %613 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %614 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %615 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %616 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %617 = %611.0;
  %618 = %612.0;
  %619 = %613.0;
  %620 = %614.0;
  %621 = %615.0;
  %622 = %616.0;
  (%617, %618, %619, %620, %621, %622)
}

def @func_19663(%var_19620: Tensor[(12, 637), uint16]) -> (Tensor[(12, 637), float32], Tensor[(12, 637), int64], Tensor[(13, 9, 12), float32], Tensor[(12, 637), float64]) {
  %623 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(?, 637), float32] */;
  %625 = cast(%var_19620, dtype="float32") /* ty=Tensor[(12, 637), float32] */;
  %626 = cast(%623, dtype="int64") /* ty=Tensor[(?, 637), int64] */;
  %627 = cast(%var_19620, dtype="int64") /* ty=Tensor[(12, 637), int64] */;
  %628 = cast(%var_19620, dtype="float64") /* ty=Tensor[(12, 637), float64] */;
  %629 = cast(%623, dtype="float64") /* ty=Tensor[(?, 637), float64] */;
  %630 = power(%624, %625) /* ty=Tensor[(12, 637), float32] */;
  %631 = bitwise_xor(%626, %627) /* ty=Tensor[(12, 637), int64] */;
  %632 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  %633 = floor_divide(%628, %629) /* ty=Tensor[(12, 637), float64] */;
  (%630, %631, %632, %633)
}

def @func_16677() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %634 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %635 = @func_8754() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %636 = %634.0;
  %637 = %635.0;
  (%636, %637)
}

def @func_709(%var_695: Tensor[(91), float64], %var_696: Tensor[(13, 49), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) {
  %638 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %640 = cast(%var_695, dtype="float64") /* ty=Tensor[(91), float64] */;
  %641 = cast(%var_696, dtype="float64") /* ty=Tensor[(13, 49), float64] */;
  %642 = reshape(%640, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %643 = reshape(%641, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %644 = @func_53(%642, %643) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %645 = sinh(%639) /* ty=Tensor[(13, 9, 12), float32] */;
  %646 = %644.0;
  (%645, %646, %var_695, %var_696)
}

def @func_8465() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %647 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %648 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %649 = %647.0;
  %650 = %648.1;
  (%649, %650)
}

def @func_11720() -> Tensor[(13, 9, 12), int16] {
  %651 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %651.1
}

def @func_4166() -> (int32,) {
  %652 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %653 = %652.2;
  (%653,)
}

def @func_13613() -> (Tensor[(11, 637), float32], Tensor[(11, 637), float32]) {
  %654 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(?, 637), float32] */;
  %656 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 637), uint16] */, dtype="float32") /* ty=Tensor[(11, 637), float32] */;
  %657 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 637), uint16] */, dtype="float32") /* ty=Tensor[(11, 637), float32] */;
  %658 = floor_mod(%655, %656) /* ty=Tensor[(11, 637), float32] */;
  %659 = atanh(%657) /* ty=Tensor[(11, 637), float32] */;
  (%658, %659)
}

def @func_19450(%var_19439: Tensor[(8, 15, 5), float32], %var_19440: Tensor[(8, 15, 5), float32]) -> (Tensor[(8, 15, 5), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %660 = cast(%var_19440, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %661 = shape_of(%var_19439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_19439, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %664 = @func_17352() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
  %665 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %666 = mod(%662, %663) /* ty=Tensor[(8, 15, 5), float32] */;
  %667 = %664.0;
  %668 = %665.0;
  (%666, %667, %668)
}

def @func_9672() -> (Tensor[(13, 9, 12), float32],) {
  %669 = @func_7101() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %670 = %669.0;
  (%670,)
}

def @func_15580() -> Tensor[(77, 15), float32] {
  %671 = @func_10922() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) */;
  %671.2
}

def @func_10107() -> (Tensor[(16, 4, 5), uint32],) {
  %672 = @func_7905() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */;
  %673 = %672.2;
  (%673,)
}

def @func_10486() -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %674 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %675 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %676 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %677 = @func_6220() /* ty=Tensor[(13, 9, 12), float32] */;
  %678 = %674.1;
  %679 = %675.0;
  %680 = %676.0;
  (%677, %678, %679, %680)
}

def @func_15425() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %681 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %682 = @func_12859() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %683 = @func_6220() /* ty=Tensor[(13, 9, 12), float32] */;
  %684 = %681.0;
  %685 = %682.0;
  (%683, %684, %685)
}

def @func_15615(%var_15610: Tensor[(16, 16, 13), float32]) -> (Tensor[(16, 16, 13), float32],) {
  %686 = cast(%var_15610, dtype="float32") /* ty=Tensor[(16, 16, 13), float32] */;
  %687 = acos(%686) /* ty=Tensor[(16, 16, 13), float32] */;
  (%687,)
}

def @func_16497(%var_16462: Tensor[(5, 30), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(50), float32], Tensor[(10, 5, 30), float64], Tensor[(13, 9, 12), bool]) {
  %688 = @func_14852() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %689 = cast(meta[relay.Constant][28] /* ty=Tensor[(50), int32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %690 = cast(meta[relay.Constant][28] /* ty=Tensor[(50), int32] */, dtype="int32") /* ty=Tensor[(50), int32] */;
  %691 = cast(%var_16462, dtype="int32") /* ty=Tensor[(5, 30), int32] */;
  %692 = reshape(%690, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), int32] */;
  %693 = reshape(%691, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), int32] */;
  %694 = @func_7336(%692, %693) /* ty=(Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) */;
  %695 = %694.3;
  %696 = cast(%var_16462, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
  %697 = cast(%695, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
  %698 = %688.0;
  %699 = sigmoid(%689) /* ty=Tensor[(50), float32] */;
  %700 = power(%696, %697) /* ty=Tensor[(10, 5, 30), float64] */;
  %701 = @func_10143() /* ty=Tensor[(13, 9, 12), bool] */;
  (%698, %699, %700, %701)
}

def @func_1612(%var_1599: Tensor[(7, 15, 1), int64]) -> Tensor[(7, 15, 6), bool] {
  %702 = cast(%var_1599, dtype="bool") /* ty=Tensor[(7, 15, 1), bool] */;
  %703 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 15, 6), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
  greater_equal(%702, %703) /* ty=Tensor[(7, 15, 6), bool] */
}

def @func_12503() -> (Tensor[(13, 9, 12), float32],) {
  %704 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %705 = %704.0;
  (%705,)
}

def @func_10658() -> (int32,) {
  %706 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %707 = %706.2;
  (%707,)
}

def @func_7215() -> (Tensor[(13, 9, 12), float32],) {
  %708 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %709 = %708.0;
  (%709,)
}

def @func_16772() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %710 = @func_11390() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %711 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %712 = %710.1;
  %713 = %711.0;
  (%712, %713)
}

def @func_15713() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(637, 1), float64]) {
  %714 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %715 = cast(meta[relay.Constant][30] /* ty=Tensor[(637, 1), float64] */, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %716 = reshape(%715, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %717 = @func_10095(%716) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %718 = %714.2;
  %719 = %717.1;
  (%718, %719, meta[relay.Constant][30] /* ty=Tensor[(637, 1), float64] */)
}

def @func_8221() -> Tensor[(13, 9, 12), float32] {
  @func_5925() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_3400() -> (Tensor[(13, 9, 12), float32],) {
  %720 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %721 = %720.0;
  (%721,)
}

def @func_13477(%var_13474: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  %722 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %723 = cast(%var_13474, dtype="float64") /* ty=Tensor[(91), float64] */;
  %724 = cast(meta[relay.Constant][31] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %725 = reshape(%723, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %726 = reshape(%724, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %727 = @func_53(%725, %726) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %728 = %722.0;
  %729 = %727.1;
  (%728, %729, %var_13474, meta[relay.Constant][31] /* ty=Tensor[(637), float64] */)
}

def @func_18591() -> (Tensor[(1404), float32],) {
  %730 = @func_17099() /* ty=(Tensor[(1404), float32], Tensor[(637), float64]) */;
  %731 = %730.0;
  (%731,)
}

def @func_11142() -> (Tensor[(13, 9, 12), float32],) {
  %732 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %733 = %732.1;
  (%733,)
}

def @func_9657() -> (Tensor[(13, 9, 12), float32],) {
  %734 = @func_4300() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %735 = %734.1;
  (%735,)
}

def @func_4271(%var_4196: int64) -> (Tensor[(9, 14, 5), uint64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(9, 14, 5), int8]) {
  %736 = cast(%var_4196, dtype="int64") /* ty=int64 */;
  %737 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 14, 5), int64] */, dtype="int64") /* ty=Tensor[(9, 14, 5), int64] */;
  %738 = subtract(%736, %737) /* ty=Tensor[(9, 14, 5), int64] */;
  %739 = cast(%738, dtype="uint64") /* ty=Tensor[(9, 14, 5), uint64] */;
  %740 = cast(%var_4196, dtype="uint64") /* ty=uint64 */;
  %741 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 14, 5), int64] */, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
  %742 = acosh(%741) /* ty=Tensor[(9, 14, 5), float32] */;
  %743 = cast(%742, dtype="int8") /* ty=Tensor[(9, 14, 5), int8] */;
  %744 = cast(%var_4196, dtype="int8") /* ty=int8 */;
  %745 = bitwise_or(%739, %740) /* ty=Tensor[(9, 14, 5), uint64] */;
  %746 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  %747 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  %748 = maximum(%743, %744) /* ty=Tensor[(9, 14, 5), int8] */;
  (%745, %746, %747, %748)
}

def @func_2514() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %749 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %750 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
  %751 = %749.2;
  (%750, %751)
}

def @func_2023(%var_2012: Tensor[(91), float64], %var_2013: Tensor[(637, 1), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637, 1), float64]) {
  %752 = cast(%var_2012, dtype="float64") /* ty=Tensor[(91), float64] */;
  %753 = cast(%var_2013, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %754 = reshape(%752, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %755 = reshape(%753, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %756 = @func_53(%754, %755) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %757 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  %758 = %756.0;
  (%757, %758, %var_2012, %var_2013)
}

def @func_15178() -> Tensor[(13, 9, 12), float32] {
  %759 = @func_7432() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %759.0
}

def @func_946() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_3187(%var_3185: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %760 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %761 = cast(%var_3185, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %762 = reshape(%761, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
  %763 = @func_1955(%762) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) */;
  %764 = %760.1;
  %765 = %763.0;
  (%764, %765, %var_3185)
}

def @func_18879(%var_18791: int16) -> (Tensor[(7, 4, 3), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %766 = cast(%var_18791, dtype="bool") /* ty=bool */;
  %767 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 4, 3), int16] */, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
  %768 = @func_14004() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %769 = @func_14852() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %770 = @func_16387() /* ty=(int32, Tensor[(13, 9, 12), float32]) */;
  %771 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %772 = @func_8603() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %773 = less_equal(%766, %767) /* ty=Tensor[(7, 4, 3), bool] */;
  %774 = %768.0;
  %775 = %769.0;
  %776 = %770.0;
  %777 = %771.0;
  %778 = %772.1;
  (%773, %774, %775, %776, %777, %778)
}

def @func_7432() -> (Tensor[(13, 9, 12), float32],) {
  %779 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %780 = %779.0;
  (%780,)
}

def @func_10143() -> Tensor[(13, 9, 12), bool] {
  %781 = @func_9395() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %781.0
}

def @func_7694() -> (Tensor[(?, 637), uint16],) {
  %782 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %783 = %782.3;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %785 = sinh(%784) /* ty=Tensor[(1, 637), float64] */;
  %786 = cast(%783, dtype="uint16") /* ty=Tensor[(1, 637), uint16] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %788 = cast(%785, dtype="uint16") /* ty=Tensor[(1, 637), uint16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %790 = maximum(%788, %789) /* ty=Tensor[(?, 637), uint16] */;
  (%790,)
}

def @func_8694() -> (Tensor[(13, 9, 12), float32],) {
  %791 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %792 = %791.0;
  (%792,)
}

def @func_7417() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 91), float64], Tensor[(637), float64]) {
  %793 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %794 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 91), float64] */, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %795 = cast(meta[relay.Constant][35] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %796 = reshape(%794, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %797 = reshape(%795, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %798 = @func_709(%796, %797) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %799 = cast(meta[relay.Constant][35] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %800 = %793.0;
  %801 = %798.0;
  %802 = sinh(%799) /* ty=Tensor[(637), float64] */;
  (%800, %801, meta[relay.Constant][34] /* ty=Tensor[(1, 91), float64] */, %802)
}

def @func_12755(%var_12723: Tensor[(91), float64], %var_12724: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) {
  %803 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %804 = @func_7495() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %805 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %806 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %807 = @func_12517() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %808 = cast(%var_12723, dtype="float64") /* ty=Tensor[(91), float64] */;
  %809 = cast(%var_12724, dtype="float64") /* ty=Tensor[(637), float64] */;
  %810 = cast(meta[relay.Constant][36] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %811 = reshape(%808, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %812 = reshape(%809, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %813 = reshape(%810, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %814 = @func_8555(%811, %812, %813) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) */;
  %815 = cast(meta[relay.Constant][37] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %816 = cast(%var_12724, dtype="float64") /* ty=Tensor[(637), float64] */;
  %817 = reshape(%815, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), float64] */;
  %818 = reshape(%816, newshape=[91, 7]) /* ty=Tensor[(91, 7), float64] */;
  %819 = @func_8392(%817, %818) /* ty=(Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */;
  %820 = @func_10584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), bool]) */;
  %821 = %803.1;
  %822 = %804.1;
  %823 = %805.0;
  %824 = %806.0;
  %825 = @func_11696() /* ty=Tensor[(13, 9, 12), float32] */;
  %826 = %807.0;
  %827 = @func_11363() /* ty=Tensor[(13, 9, 12), float32] */;
  %828 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
  %829 = %814.0;
  %830 = %819.1;
  %831 = %820.0;
  (%821, %822, %823, %824, %825, %826, %827, %828, %829, %var_12723, %var_12724, meta[relay.Constant][36] /* ty=Tensor[(1155), float32] */, %830, meta[relay.Constant][37] /* ty=Tensor[(90, 1), float64] */, %831)
}

def @func_7841() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) {
  %832 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %833 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %834 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %835 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %836 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %837 = %836.0;
  %838 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %839 = %838.0;
  %840 = cast(%839, dtype="uint16") /* ty=Tensor[(?, 637), uint16] */;
  %841 = shape_of(%837, dtype="int32") /* ty=Tensor[(2), int32] */;
  %842 = cast(%837, dtype="uint16") /* ty=Tensor[(?, 637), uint16] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %844 = @func_3753() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
  %845 = %832.0;
  %846 = %833.0;
  %847 = %834.0;
  %848 = %835.0;
  %849 = bitwise_or(%842, %843) /* ty=Tensor[(?, 637), uint16] */;
  %850 = %844.1;
  (%845, %846, %847, %848, %849, %850)
}

def @func_17498(%var_17495: Tensor[(2, 15, 1), float32]) -> Tensor[(2, 15, 1), float32] {
  %851 = cast(%var_17495, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
  asin(%851) /* ty=Tensor[(2, 15, 1), float32] */
}

def @func_4545() -> Tensor[(13, 9, 12), float32] {
  %852 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %852.0
}

def @func_16754() -> (Tensor[(13, 9, 12), float32],) {
  %853 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
  (%853,)
}

def @func_475(%var_381: int32) -> (Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %854 = cast(%var_381, dtype="bool") /* ty=bool */;
  %855 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 16, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %856 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %857 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %858 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %859 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %860 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %861 = %860.0;
  %862 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %864 = sigmoid(%863) /* ty=Tensor[(13, 9, 12), float64] */;
  %865 = cast(%864, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %866 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%861, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %869 = greater(%854, %855) /* ty=Tensor[(5, 16, 10), bool] */;
  %870 = %856.0;
  %871 = %857.0;
  %872 = %858.0;
  %873 = %859.0;
  %874 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %875 = floor_mod(%867, %868) /* ty=Tensor[(13, 9, 12), float32] */;
  %876 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  (%869, %870, %871, %872, %873, %874, %875, %876)
}

def @func_8680() -> Tensor[(13, 9, 12), bool] {
  %877 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %877.0
}

def @func_9946(%var_9909: Tensor[(8, 11, 12), float32], %var_9915: Tensor[(8, 11, 12), float32], %var_9943: Tensor[(726), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
  %878 = cast(%var_9909, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %879 = atanh(%878) /* ty=Tensor[(8, 11, 12), float32] */;
  %880 = cast(%var_9915, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%879, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %884 = cast(%var_9909, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %885 = cast(%var_9915, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %886 = cast(%var_9943, dtype="int8") /* ty=Tensor[(726), int8] */;
  %887 = reshape(%886, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), int8] */;
  %888 = floor_divide(%882, %883) /* ty=Tensor[(8, 11, 12), float64] */;
  %889 = cos(%884) /* ty=Tensor[(8, 11, 12), float32] */;
  %890 = sigmoid(%885) /* ty=Tensor[(8, 11, 12), float64] */;
  %891 = @func_3461(%887) /* ty=Tensor[(11, 6, 11), int8] */;
  (%888, %889, %890, %891, %var_9943)
}

def @func_2838() -> Tensor[(13, 9, 12), float32] {
  %892 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %892.1
}

def @func_139() -> (Tensor[(13, 9, 12), float32],) {
  %893 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %894 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(13, 9, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %897 = power(%895, %896) /* ty=Tensor[(13, 9, 12), float32] */;
  (%897,)
}

def @func_13265(%var_13259: Tensor[(7, 15, 6), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
  %898 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %899 = @func_9563() /* ty=Tensor[(7, 15, 6), float32] */;
  %900 = cast(%var_13259, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %904 = %898.0;
  %905 = @func_11112() /* ty=Tensor[(13, 9, 12), float32] */;
  %906 = divide(%902, %903) /* ty=Tensor[(7, 15, 6), float64] */;
  (%904, %905, %906)
}

def @func_17156() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %907 = @func_13506() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %908 = @func_11560() /* ty=Tensor[(13, 9, 12), float32] */;
  %909 = %907.0;
  (%908, %909)
}

def @func_892() -> (Tensor[(13, 9, 12), float32], int32, int32) {
  %910 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %911 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %912 = reshape(%911, newshape=[]) /* ty=int32 */;
  %913 = @func_588(%912) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %914 = %910.0;
  %915 = %913.3;
  (%914, %915, 3 /* ty=int32 */)
}

def @func_10203() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %916 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %917 = @func_9894() /* ty=(Tensor[(13, 7), float64],) */;
  %918 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
  %919 = @func_6947() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %920 = %916.0;
  %921 = %917.0;
  %922 = %918.0;
  %923 = %919.0;
  (%920, %921, %922, %923)
}

def @func_3660() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %924 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %925 = %924.1;
  %926 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  (%925, %926)
}

def @func_6956() -> (Tensor[(13, 9, 12), int16],) {
  %927 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %928 = %927.1;
  (%928,)
}

def @func_16414(%var_16410: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32],) {
  %929 = cast(%var_16410, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %930 = asinh(%929) /* ty=Tensor[(5, 4, 3), float32] */;
  (%930,)
}

def @func_16857() -> Tensor[(13, 9, 12), float32] {
  %931 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %931.0
}

def @func_15048() -> Tensor[(13, 9, 12), float32] {
  %932 = @func_11169() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %932.1
}

def @func_7101() -> (Tensor[(13, 9, 12), float32],) {
  %933 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
  (%933,)
}

def @func_9894() -> (Tensor[(13, 7), float64],) {
  %934 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %935 = %934.2;
  (%935,)
}

def @func_4005() -> Tensor[(13, 9, 12), bool] {
  %936 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %936.0
}

def @func_8934() -> (Tensor[(13, 9, 12), float32],) {
  %937 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %938 = %937.0;
  (%938,)
}

def @func_6259() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), float32]) {
  %939 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %940 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %941 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %942 = %939.0;
  %943 = %940.1;
  %944 = %941.0;
  (%942, %943, %944)
}

def @func_10054() -> (Tensor[(13, 9, 12), float32],) {
  %945 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %946 = %945.0;
  (%946,)
}

def @func_11090() -> (Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %947 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %948 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
  %949 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %950 = reshape(%949, newshape=[]) /* ty=int32 */;
  %951 = @func_5674(%950) /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %952 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %953 = @func_10486() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %954 = %947.2;
  %955 = %948.0;
  %956 = %951.0;
  %957 = %952.1;
  %958 = %953.0;
  (%954, %955, %956, -9 /* ty=int32 */, %957, %958)
}

def @func_53(%var_29: Tensor[(13, 1, 7), float64], %var_30: Tensor[(13, 7, 7), float64]) -> (Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) {
  %959 = cast(%var_29, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
  %960 = cast(%var_30, dtype="float64") /* ty=Tensor[(13, 7, 7), float64] */;
  %961 = cast(%var_30, dtype="float32") /* ty=Tensor[(13, 7, 7), float32] */;
  %962 = cast(%var_29, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %963 = power(%959, %960) /* ty=Tensor[(13, 7, 7), float64] */;
  %964 = add(%961, %962) /* ty=Tensor[(13, 7, 7), float32] */;
  (%963, %964)
}

def @func_294() -> Tensor[(13, 9, 12), float32] {
  %965 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %966 = %965.0;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  rsqrt(%967) /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_18325() -> (Tensor[(13, 9, 12), float32],) {
  %968 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %969 = %968.0;
  (%969,)
}

def @func_18944() -> int32 {
  %970 = @func_18551() /* ty=(int32,) */;
  %970.0
}

def @func_12213() -> Tensor[(13, 9, 12), float32] {
  %971 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %971.0
}

def @func_5066(%var_4943: bool, %var_4944: Tensor[(10, 13, 1), bool]) -> (Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %972 = cast(%var_4943, dtype="bool") /* ty=bool */;
  %973 = cast(%var_4944, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %974 = logical_and(%972, %973) /* ty=Tensor[(10, 13, 1), bool] */;
  %975 = cast(%974, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %976 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %977 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %978 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %979 = asin(%975) /* ty=Tensor[(10, 13, 1), float32] */;
  %980 = %976.0;
  %981 = %977.0;
  %982 = %978.0;
  %983 = @func_2838() /* ty=Tensor[(13, 9, 12), float32] */;
  (%979, %980, %981, %982, %983)
}

def @func_11433() -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
  %984 = @func_4300() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %985 = @func_7964() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_14746() -> Tensor[(13, 9, 12), float32] {
  %988 = @func_10859() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %988.0
}

def @func_11390() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %989 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %990 = @func_10859() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %991 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %992 = %989.0;
  %993 = %990.0;
  %994 = %991.0;
  (%992, %993, %994)
}

def @func_14958(%var_14948: Tensor[(10, 1, 1), float64]) -> (Tensor[(10, 1, 1), float64],) {
  %995 = cast(%var_14948, dtype="float64") /* ty=Tensor[(10, 1, 1), float64] */;
  %996 = atan(%995) /* ty=Tensor[(10, 1, 1), float64] */;
  (%996,)
}

def @func_12543() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %997 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %998 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %999 = %997.0;
  %1000 = %998.1;
  (%999, %1000)
}

def @func_14733() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1001 = @func_10891() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) */;
  %1002 = @func_12517() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1003 = %1001.1;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_15289() -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) {
  %1005 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1006 = %1005.4;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1008 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %1009 = acosh(%1007) /* ty=Tensor[(637), float64] */;
  %1010 = @func_14049() /* ty=Tensor[(13, 9, 12), float32] */;
  %1011 = %1008.0;
  (%1009, %1010, %1011)
}

def @func_12897(%var_12882: Tensor[(16, 637), float32]) -> (Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) {
  %1012 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %1013 = %1012.0;
  %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %1015 = cast(%var_12882, dtype="float32") /* ty=Tensor[(16, 637), float32] */;
  %1016 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1017 = floor_divide(%1014, %1015) /* ty=Tensor[(16, 637), float32] */;
  %1018 = %1016.0;
  (%1017, %1018)
}

def @func_9618() -> Tensor[(13, 9, 12), float32] {
  %1019 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1019.0
}

def @func_15574() -> (Tensor[(637), float64],) {
  %1020 = @func_15289() /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_17745() -> Tensor[(13, 9, 12), float32] {
  %1022 = @func_17313() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1022.0
}

def @func_4627() -> (Tensor[(13, 9, 12), float32],) {
  %1023 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1023,)
}

def @func_13336() -> (Tensor[(13, 9, 12), int16],) {
  %1024 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
  %1025 = %1024.0;
  (%1025,)
}

def @func_16930(%var_16885: int32, %var_16905: Tensor[(1056), float32], %var_16906: Tensor[(726), int8]) -> (Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1026 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1027 = cast(%var_16885, dtype="int32") /* ty=int32 */;
  %1028 = reshape(%1027, newshape=[]) /* ty=int32 */;
  %1029 = @func_475(%1028) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1030 = cast(%var_16905, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1031 = cast(%var_16905, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1032 = cast(%var_16906, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1033 = reshape(%1030, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1034 = reshape(%1031, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1035 = reshape(%1032, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %1036 = @func_9946(%1033, %1034, %1035) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
  %1037 = @func_11707() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1038 = @func_11224() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1039 = %1026.0;
  %1040 = %1029.0;
  %1041 = %1036.3;
  %1042 = %1037.0;
  %1043 = %1038.1;
  (%1039, %1040, %var_16885, %1041, %var_16905, %var_16906, %1042, %1043)
}

def @func_18098() -> Tensor[(13, 9, 12), float32] {
  @func_17554() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5615() -> Tensor[(13, 9, 12), float32] {
  %1044 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %1044.0
}

def @func_11112() -> Tensor[(13, 9, 12), float32] {
  %1045 = @func_8465() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1045.1
}

def @func_14876() -> (Tensor[(13, 9, 12), float32],) {
  %1046 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_4584() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1048 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
  %1049 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1048, %1049)
}

def @func_12302(%var_12255: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(1155), float32], Tensor[(13, 9, 12), float32], Tensor[(637), int64]) {
  %1050 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1051 = cast(%var_12255, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1052 = cast(meta[relay.Constant][41] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1053 = cast(meta[relay.Constant][42] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1054 = reshape(%1051, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1055 = reshape(%1052, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1056 = reshape(%1053, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %1057 = @func_8555(%1054, %1055, %1056) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) */;
  %1058 = cast(meta[relay.Constant][43] /* ty=Tensor[(637), float64] */, dtype="int64") /* ty=Tensor[(637), int64] */;
  %1059 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(637), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1060 = cast(meta[relay.Constant][41] /* ty=Tensor[(637), float64] */, dtype="int64") /* ty=Tensor[(637), int64] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1062 = %1050.0;
  %1063 = %1057.5;
  %1064 = @func_6559() /* ty=Tensor[(13, 9, 12), float32] */;
  %1065 = add(%1060, %1061) /* ty=Tensor[(637), int64] */;
  (%1062, %1063, %var_12255, meta[relay.Constant][42] /* ty=Tensor[(1155), float32] */, %1064, %1065)
}

def @func_11560() -> Tensor[(13, 9, 12), float32] {
  %1066 = @func_10922() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) */;
  %1066.1
}

def @func_1837() -> Tensor[(13, 9, 12), float32] {
  @func_560() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_12608() -> Tensor[(13, 9, 12), float32] {
  @func_946() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_8255() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1067 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1068 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1069 = %1067.0;
  %1070 = %1068.0;
  (%1069, %1070)
}

def @func_17470() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %1071 = @func_16772() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1072 = @func_15543() /* ty=(Tensor[(13, 9, 12), int64],) */;
  %1073 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  %1074 = %1071.0;
  %1075 = %1072.0;
  (%1073, %1074, %1075)
}

def @func_3427() -> (Tensor[(13, 9, 12), float32],) {
  %1076 = @func_2747() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_15846() -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1078 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %1079 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1080 = @func_12543() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %1081 = %1078.4;
  %1082 = %1079.0;
  %1083 = %1080.1;
  (%1081, %1082, %1083)
}

def @func_14049() -> Tensor[(13, 9, 12), float32] {
  %1084 = @func_10891() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) */;
  %1084.1
}

def @func_15970() -> (Tensor[(13, 9, 12), float32],) {
  %1085 = @func_15755() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1086 = %1085.0;
  (%1086,)
}

def @func_16972() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1087 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %1088 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1089 = %1087.0;
  %1090 = @func_16857() /* ty=Tensor[(13, 9, 12), float32] */;
  %1091 = %1088.0;
  (%1089, %1090, %1091)
}

def @func_19240(%var_19219: Tensor[(1056), float32], %var_19220: Tensor[(726), int8]) -> (int32, Tensor[(8, 11, 12), float32], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(12, 16, 4), uint64], Tensor[(13, 9, 12), float32]) {
  %1092 = @func_9086() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1093 = cast(%var_19219, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1094 = cast(%var_19219, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1095 = cast(%var_19220, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1096 = reshape(%1093, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1097 = reshape(%1094, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1098 = reshape(%1095, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %1099 = @func_9946(%1096, %1097, %1098) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
  %1100 = %1092.7;
  %1101 = cast(%1100, dtype="int32") /* ty=int32 */;
  %1102 = %1099.1;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %1104 = cast(%var_19220, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1105 = reshape(%1101, newshape=[]) /* ty=int32 */;
  %1106 = reshape(%1103, newshape=[1056]) /* ty=Tensor[(1056), float32] */;
  %1107 = reshape(%1104, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %1108 = @func_16930(%1105, %1106, %1107) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1109 = @func_14255() /* ty=Tensor[(12, 16, 4), uint64] */;
  %1110 = %1108.0;
  (%1100, %1102, %var_19219, %var_19220, %1109, %1110)
}

def @func_17971() -> (Tensor[(13, 9, 12), float32], int32) {
  %1111 = @func_13707() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1112 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %1113 = %1111.1;
  %1114 = %1112.2;
  (%1113, %1114)
}

def @func_14086(%var_14051: Tensor[(9, 9, 3), float64], %var_14063: Tensor[(91), float64]) -> (Tensor[(9, 9, 3), float64], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1115 = cast(%var_14051, dtype="float64") /* ty=Tensor[(9, 9, 3), float64] */;
  %1116 = cast(%var_14063, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1117 = reshape(%1116, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1118 = @func_1358(%1117) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */;
  %1119 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1120 = @func_7249() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1121 = atanh(%1115) /* ty=Tensor[(9, 9, 3), float64] */;
  %1122 = %1118.1;
  %1123 = %1119.0;
  %1124 = %1120.1;
  (%1121, %1122, %var_14063, %1123, %1124)
}

def @func_14558() -> Tensor[(7, 15, 6), bool] {
  %1125 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %1125.0
}

def @func_17780(%var_17767: Tensor[(630), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64], Tensor[(630), float32]) {
  %1126 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1127 = cast(%var_17767, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1128 = reshape(%1127, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %1129 = @func_13265(%1128) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
  %1130 = %1126.0;
  %1131 = @func_16857() /* ty=Tensor[(13, 9, 12), float32] */;
  %1132 = @func_13220() /* ty=Tensor[(13, 9, 12), float32] */;
  %1133 = %1129.2;
  (%1130, %1131, %1132, %1133, %var_17767)
}

def @func_16387() -> (int32, Tensor[(13, 9, 12), float32]) {
  %1134 = @func_14907() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1135 = @func_14469() /* ty=int32 */;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_15326() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %1137 = @func_11090() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1138 = %1137.2;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1140 = reshape(%1139, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %1141 = @func_2266(%1140) /* ty=Tensor[(13, 9, 12), int64] */;
  (%1138, %1141)
}

def @func_6220() -> Tensor[(13, 9, 12), float32] {
  %1142 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1142.0
}

def @func_8033() -> Tensor[(13, 9, 12), float32] {
  %1143 = @func_7598() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) */;
  %1143.0
}

def @func_11318(%var_11302: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) {
  %1144 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1145 = cast(%var_11302, dtype="bool") /* ty=bool */;
  %1146 = cast(meta[relay.Constant][44] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %1147 = reshape(%1145, newshape=[]) /* ty=bool */;
  %1148 = reshape(%1146, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), bool] */;
  %1149 = @func_5066(%1147, %1148) /* ty=(Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1150 = %1144.1;
  %1151 = %1149.2;
  %1152 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1150, %1151, %var_11302, meta[relay.Constant][44] /* ty=Tensor[(130), bool] */, %1152)
}

def @func_3461(%var_3448: Tensor[(11, 6, 11), int8]) -> Tensor[(11, 6, 11), int8] {
  %1153 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 6, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 6, 11), int8] */;
  %1154 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%var_3448, dtype="int8") /* ty=Tensor[(11, 6, 11), int8] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%1155, %1156) /* ty=Tensor[(11, 6, 11), int8] */
}

def @func_13199() -> Tensor[(?, 637), uint16] {
  %1157 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %1157.0
}

def @func_4863() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1158 = @func_2838() /* ty=Tensor[(13, 9, 12), float32] */;
  %1159 = cast(%1158, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1160 = reshape(%1159, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %1161 = @func_815(%1160) /* ty=(Tensor[(13, 9, 12), int16],) */;
  %1162 = %1161.0;
  (%1158, %1162)
}

def @func_18378() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool]) {
  %1163 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1164 = %1163.0;
  %1165 = @func_10143() /* ty=Tensor[(13, 9, 12), bool] */;
  (%1164, %1165)
}

def @func_3252(%var_3207: Tensor[(385, 3), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1166 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
  %1167 = cast(%var_3207, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %1168 = reshape(%1167, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
  %1169 = @func_1955(%1168) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) */;
  %1170 = %1169.0;
  %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1172 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1173 = %1166.2;
  %1174 = log(%1171) /* ty=Tensor[(13, 9, 12), float32] */;
  %1175 = %1172.0;
  (%1173, %var_3207, %1174, %1175)
}

def @func_18731() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1176 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1177 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1178 = %1176.1;
  %1179 = %1177.0;
  %1180 = @func_14049() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1178, %1179, %1180)
}

def @func_19504() -> (Tensor[(637), float64],) {
  %1181 = @func_15574() /* ty=(Tensor[(637), float64],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_4089() -> Tensor[(13, 9, 12), float32] {
  %1183 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1183.0
}

def @func_1955(%var_1931: Tensor[(15, 7, 11), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) {
  %1184 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1185 = cast(%var_1931, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %1186 = rsqrt(%1185) /* ty=Tensor[(15, 7, 11), float32] */;
  %1187 = cast(%var_1931, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1186, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1191 = %1184.0;
  %1192 = subtract(%1189, %1190) /* ty=Tensor[(15, 7, 11), float32] */;
  (%1191, %1192)
}

def @func_815(%var_806: Tensor[(13, 9, 12), float32]) -> (Tensor[(13, 9, 12), int16],) {
  %1193 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1194 = %1193.0;
  %1195 = cast(%var_806, dtype="int16") /* ty=Tensor[(13, 9, 12), int16] */;
  %1196 = shape_of(%1194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1197 = cast(%1194, dtype="int16") /* ty=Tensor[(13, 9, 12), int16] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1199 = right_shift(%1197, %1198) /* ty=Tensor[(13, 9, 12), int16] */;
  (%1199,)
}

def @func_17352() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
  %1200 = @func_16661() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1201 = @func_9563() /* ty=Tensor[(7, 15, 6), float32] */;
  %1202 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 15, 6), float32] */, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%1201, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1206 = %1200.1;
  %1207 = power(%1204, %1205) /* ty=Tensor[(7, 15, 6), float64] */;
  (%1206, %1207)
}

def @func_11243() -> (Tensor[(13, 9, 12), float32],) {
  %1208 = @func_5615() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1208,)
}

def @func_19376(%var_19304: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(130), bool], bool, Tensor[(726), int8], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(8, 11, 12), int8]) {
  %1209 = @func_1634() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1210 = cast(%var_19304, dtype="bool") /* ty=bool */;
  %1211 = reshape(%1210, newshape=[]) /* ty=bool */;
  %1212 = @func_11318(%1211) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) */;
  %1213 = @func_10203() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1214 = %1213.1;
  %1215 = cast(%1214, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
  %1216 = reshape(%1215, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1217 = @func_13477(%1216) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1218 = cast(meta[relay.Constant][48] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1219 = cast(meta[relay.Constant][48] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1220 = cast(meta[relay.Constant][47] /* ty=Tensor[(726), int8] */, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1221 = reshape(%1218, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1222 = reshape(%1219, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1223 = reshape(%1220, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %1224 = @func_9946(%1221, %1222, %1223) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
  %1225 = %1224.2;
  %1226 = cast(meta[relay.Constant][48] /* ty=Tensor[(1056), float32] */, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %1227 = shape_of(%1225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1228 = cast(%1225, dtype="int8") /* ty=Tensor[(8, 11, 12), int8] */;
  %1229 = dyn.reshape(%1226, %1227, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1230 = %1209.0;
  %1231 = %1212.3;
  %1232 = %1217.0;
  %1233 = bitwise_or(%1228, %1229) /* ty=Tensor[(8, 11, 12), int8] */;
  (%1230, %1231, %var_19304, meta[relay.Constant][47] /* ty=Tensor[(726), int8] */, %1214, %1232, %1233)
}

def @func_19065() -> Tensor[(13, 9, 12), float32] {
  %1234 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %1234.0
}

def @func_7643(%var_7635: Tensor[(16, 14, 5), float64]) -> (Tensor[(16, 14, 5), float32],) {
  %1235 = cast(%var_7635, dtype="float64") /* ty=Tensor[(16, 14, 5), float64] */;
  %1236 = asinh(%1235) /* ty=Tensor[(16, 14, 5), float64] */;
  %1237 = cast(%1236, dtype="float32") /* ty=Tensor[(16, 14, 5), float32] */;
  %1238 = log10(%1237) /* ty=Tensor[(16, 14, 5), float32] */;
  (%1238,)
}

def @func_9716() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1239 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1240 = @func_8680() /* ty=Tensor[(13, 9, 12), bool] */;
  %1241 = @func_8033() /* ty=Tensor[(13, 9, 12), float32] */;
  %1242 = %1239.1;
  (%1240, %1241, %1242)
}

def @func_8555(%var_8481: Tensor[(91), float64], %var_8482: Tensor[(637), float64], %var_8528: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) {
  %1243 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1244 = cast(%var_8481, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1245 = cast(%var_8482, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1246 = reshape(%1244, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1247 = reshape(%1245, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1248 = @func_520(%1246, %1247) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1249 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1250 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1251 = cast(%var_8528, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1252 = reshape(%1251, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %1253 = @func_3187(%1252) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
  %1254 = %1253.2;
  %1255 = cast(%1254, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1256 = atanh(%1255) /* ty=Tensor[(1155), float32] */;
  %1257 = cast(%1254, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %1258 = shape_of(%1256, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1259 = cast(%1256, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1261 = %1243.0;
  %1262 = %1248.2;
  %1263 = %1249.1;
  %1264 = %1250.3;
  %1265 = not_equal(%1259, %1260) /* ty=Tensor[(1155), bool] */;
  (%1261, %1262, %var_8481, %var_8482, %1263, %1264, %var_8528, %1265)
}

def @func_9281() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1266 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
  %1267 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1266, %1267)
}

def @func_15681() -> (Tensor[(13, 9, 12), float32],) {
  %1268 = @func_11390() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1269 = %1268.0;
  (%1269,)
}

def @func_3086() -> (int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) {
  %1270 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %1271 = cast(meta[relay.Constant][49] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %1272 = reshape(%1271, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %1273 = %1270.1;
  %1274 = @func_2266(%1272) /* ty=Tensor[(13, 9, 12), int64] */;
  (%1273, %1274, meta[relay.Constant][49] /* ty=Tensor[(1404), float32] */)
}

def @func_607(%var_601: Tensor[(91), float64], %var_602: Tensor[(1, 637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(1, 637), float64]) {
  %1275 = cast(%var_601, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1276 = cast(%var_602, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %1277 = reshape(%1275, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1278 = reshape(%1276, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1279 = @func_520(%1277, %1278) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1280 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %1281 = %1279.1;
  (%1280, %1281, %var_601, %var_602)
}

def @func_2986() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %1282 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1283 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %1284 = %1282.0;
  %1285 = %1283.1;
  (%1284, %1285)
}

def @func_5523() -> Tensor[(13, 9, 12), float32] {
  @func_2838() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5103(%var_5091: uint8, %var_5101: Tensor[(726), int8]) -> (Tensor[(9, 6, 1), uint8], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
  %1286 = cast(%var_5091, dtype="uint8") /* ty=uint8 */;
  %1287 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 6, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 6, 1), uint8] */;
  %1288 = cast(%var_5101, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1289 = reshape(%1288, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), int8] */;
  %1290 = logical_xor(%1286, %1287) /* ty=Tensor[(9, 6, 1), uint8] */;
  %1291 = @func_3461(%1289) /* ty=Tensor[(11, 6, 11), int8] */;
  (%1290, %1291, %var_5101)
}

def @func_9602(%var_9572: Tensor[(9, 16, 9), float64]) -> (Tensor[(9, 16, 9), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 637), float64]) {
  %1292 = cast(%var_9572, dtype="float64") /* ty=Tensor[(9, 16, 9), float64] */;
  %1293 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1294 = @func_1634() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1295 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %1296 = atanh(%1292) /* ty=Tensor[(9, 16, 9), float64] */;
  %1297 = %1293.0;
  %1298 = %1294.0;
  %1299 = %1295.3;
  (%1296, %1297, %1298, %1299)
}

def @func_8848() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1300 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1301 = @func_3427() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1302 = %1300.2;
  %1303 = %1301.0;
  (%1302, %1303)
}

def @func_3620() -> (Tensor[(13, 9, 12), float32],) {
  %1304 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1304,)
}

def @func_1917() -> Tensor[(13, 9, 12), float32] {
  %1305 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1305.0
}

def @func_9140() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) {
  %1306 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1307 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %1308 = %1307.1;
  %1309 = @func_2569() /* ty=Tensor[(13, 9, 12), float32] */;
  %1310 = cast(%1309, dtype="uint16") /* ty=Tensor[(13, 9, 12), uint16] */;
  %1311 = shape_of(%1308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1312 = cast(%1308, dtype="uint16") /* ty=Tensor[(13, 9, 12), uint16] */;
  %1313 = dyn.reshape(%1310, %1311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1314 = %1306.0;
  %1315 = bitwise_or(%1312, %1313) /* ty=Tensor[(13, 9, 12), uint16] */;
  (%1314, %1315)
}

def @func_15910() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1316 = @func_10584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), bool]) */;
  %1317 = @func_2591() /* ty=Tensor[(13, 9, 12), float32] */;
  %1318 = %1316.0;
  (%1317, %1318)
}

def @func_6530() -> (Tensor[(637), float64], int32) {
  %1319 = @func_3753() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1320 = @func_4166() /* ty=(int32,) */;
  %1321 = %1319.3;
  %1322 = %1320.0;
  (%1321, %1322)
}

def @func_17235() -> (Tensor[(13, 9, 12), float32],) {
  %1323 = @func_8255() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1324 = %1323.0;
  (%1324,)
}

def @func_5130() -> (Tensor[(13, 9, 12), bool],) {
  %1325 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_2266(%var_2254: Tensor[(13, 9, 12), float32]) -> Tensor[(13, 9, 12), int64] {
  %1327 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1328 = %1327.0;
  %1329 = cast(%var_2254, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %1330 = shape_of(%1328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1331 = cast(%1328, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%1331, %1332) /* ty=Tensor[(13, 9, 12), int64] */
}

def @func_8603() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1333 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1334 = %1333.0;
  %1335 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1334, %1335)
}

def @func_17929() -> (Tensor[(13, 9, 12), float32],) {
  %1336 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1337 = %1336.0;
  (%1337,)
}

def @func_6713() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1338 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1339 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1340 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %1341 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1342 = %1338.0;
  %1343 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  %1344 = %1339.0;
  %1345 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  %1346 = %1340.0;
  %1347 = %1341.0;
  %1348 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1342, %1343, %1344, %1345, %1346, %1347, %1348)
}

def @func_3381() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1349 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1350 = %1349.0;
  %1351 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  %1352 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1350, %1351, %1352)
}

def @func_2569() -> Tensor[(13, 9, 12), float32] {
  %1353 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1353.0
}

def @func_18788() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1354 = @func_14768() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) */;
  %1355 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1356 = %1354.1;
  %1357 = %1355.0;
  (%1356, %1357)
}

def @func_7982(%var_7978: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32],) {
  %1358 = cast(%var_7978, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %1359 = erf(%1358) /* ty=Tensor[(8, 13, 8), float32] */;
  (%1359,)
}

def @func_560() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5218() -> (Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) {
  %1360 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1361 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 105), int64] */, dtype="int64") /* ty=Tensor[(1, 105), int64] */;
  %1362 = reshape(%1361, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
  %1363 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 105), int64] */, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %1364 = atan(%1363) /* ty=Tensor[(1, 105), float32] */;
  %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %1366 = %1360.0;
  %1367 = @func_1612(%1362) /* ty=Tensor[(7, 15, 6), bool] */;
  %1368 = @func_4005() /* ty=Tensor[(13, 9, 12), bool] */;
  %1369 = sinh(%1365) /* ty=Tensor[(1, 105), float32] */;
  (%1366, %1367, %1368, %1369)
}

def @func_15456() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1370 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %1371 = @func_9281() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1372 = %1370.0;
  %1373 = %1371.0;
  (%1372, %1373)
}

def @func_8326() -> (Tensor[(13, 9, 12), float32],) {
  %1374 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1375 = %1374.0;
  (%1375,)
}

def @func_14824(%var_14810: Tensor[(12, 5, 16), float32], %var_14811: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
  %1376 = cast(%var_14811, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
  %1377 = shape_of(%var_14810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1378 = cast(%var_14810, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
  %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1378, %1379) /* ty=Tensor[(12, 5, 16), float32] */
}

def @func_9224() -> (Tensor[(637, 1), float32],) {
  %1380 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %1381 = %1380.3;
  (%1381,)
}

def @func_14004() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1382 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1383 = @func_9894() /* ty=(Tensor[(13, 7), float64],) */;
  %1384 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1385 = @func_6342() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1386 = %1382.0;
  %1387 = %1383.0;
  %1388 = %1384.1;
  %1389 = %1385.0;
  (%1386, %1387, %1388, %1389)
}

def @func_14768() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) {
  %1390 = @func_14733() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1391 = cast(meta[relay.Constant][52] /* ty=Tensor[(10192), float32] */, dtype="float32") /* ty=Tensor[(10192), float32] */;
  %1392 = reshape(%1391, newshape=[16, 637]) /* ty=Tensor[(16, 637), float32] */;
  %1393 = @func_12897(%1392) /* ty=(Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %1394 = %1390.1;
  %1395 = %1393.1;
  (%1394, %1395, meta[relay.Constant][52] /* ty=Tensor[(10192), float32] */)
}

def @func_14852() -> (Tensor[(13, 9, 12), float32],) {
  %1396 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1397 = %1396.0;
  (%1397,)
}

def @func_5925() -> Tensor[(13, 9, 12), float32] {
  @func_4026() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_2591() -> Tensor[(13, 9, 12), float32] {
  %1398 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1398.0
}

def @func_15876() -> (Tensor[(105), int64],) {
  %1399 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1400 = %1399.4;
  (%1400,)
}

def @func_11169() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1401 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1402 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1403 = %1401.1;
  %1404 = %1402.0;
  (%1403, %1404)
}

def @func_312() -> (Tensor[(13, 9, 12), float32],) {
  %1405 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1406 = %1405.0;
  (%1406,)
}

def @func_5674(%var_5662: int32) -> (Tensor[(13, 9, 12), float32], int32, int32) {
  %1407 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1408 = cast(%var_5662, dtype="int32") /* ty=int32 */;
  %1409 = reshape(%1408, newshape=[]) /* ty=int32 */;
  %1410 = @func_588(%1409) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %1411 = %1407.0;
  %1412 = %1410.3;
  (%1411, %1412, %var_5662)
}

def @func_4392(%var_4368: Tensor[(40, 8), uint32], %var_4372: Tensor[(40, 8), uint32], %var_4389: Tensor[(13, 7), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) {
  %1413 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %1414 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(40, 8), uint32] */;
  %1415 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(40, 8), uint32] */;
  %1416 = reshape(%1414, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1417 = reshape(%1415, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1418 = cast(%var_4372, dtype="uint8") /* ty=Tensor[(40, 8), uint8] */;
  %1419 = shape_of(%var_4368, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1420 = cast(%var_4368, dtype="uint8") /* ty=Tensor[(40, 8), uint8] */;
  %1421 = dyn.reshape(%1418, %1419, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1422 = cast(%var_4368, dtype="float64") /* ty=Tensor[(40, 8), float64] */;
  %1423 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1424 = cast(%var_4389, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
  %1425 = cast(meta[relay.Constant][53] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1426 = reshape(%1424, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1427 = reshape(%1425, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %1428 = @func_53(%1426, %1427) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %1429 = %1413.0;
  %1430 = @func_1247(%1416, %1417) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1431 = subtract(%1420, %1421) /* ty=Tensor[(40, 8), uint8] */;
  %1432 = log(%1422) /* ty=Tensor[(40, 8), float64] */;
  %1433 = %1423.1;
  %1434 = %1428.0;
  (%1429, %1430, %1431, %1432, %1433, %1434, %var_4389, meta[relay.Constant][53] /* ty=Tensor[(637), float64] */)
}

def @func_18551() -> (int32,) {
  %1435 = @func_4166() /* ty=(int32,) */;
  %1436 = %1435.0;
  (%1436,)
}

def @func_18995() -> (Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
  %1437 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
  %1438 = @func_14004() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %1439 = %1437.0;
  %1440 = %1438.2;
  (%1439, %1440)
}

def @func_6502() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1441 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1442 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %1443 = %1441.5;
  %1444 = %1442.0;
  (%1443, %1444)
}

def @func_1753() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_10859() -> (Tensor[(13, 9, 12), float32],) {
  %1445 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_6104(%var_6099: Tensor[(637, 7), float64]) -> Tensor[(637, 7), float32] {
  %1447 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %1448 = %1447.3;
  %1449 = cast(%1448, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %1450 = asinh(%1449) /* ty=Tensor[(637, 1), float64] */;
  %1451 = cast(%1450, dtype="float32") /* ty=Tensor[(637, 1), float32] */;
  %1452 = cast(%var_6099, dtype="float32") /* ty=Tensor[(637, 7), float32] */;
  mod(%1451, %1452) /* ty=Tensor[(637, 7), float32] */
}

def @func_15566() -> Tensor[(13, 9, 12), float32] {
  @func_6559() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_16174(%var_16156: Tensor[(630, 1), float32], %var_16167: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(630, 1), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
  %1453 = cast(%var_16156, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %1454 = reshape(%1453, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
  %1455 = @func_13265(%1454) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
  %1456 = cast(%var_16167, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %1457 = cast(%var_16167, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %1458 = reshape(%1456, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1459 = reshape(%1457, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1460 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %1461 = %1455.1;
  %1462 = @func_1247(%1458, %1459) /* ty=Tensor[(16, 4, 5), uint32] */;
  (%1460, %1461, %var_16156, %1462, %var_16167)
}

def @func_13374() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %1463 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1464 = cast(meta[relay.Constant][54] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1465 = reshape(%1464, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %1466 = @func_6824(%1465) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
  %1467 = %1463.2;
  %1468 = %1466.4;
  (%1467, %1468, meta[relay.Constant][54] /* ty=Tensor[(1155), float32] */)
}

def @func_18469() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(105), int64]) {
  %1469 = @func_10486() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1470 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1471 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1472 = @func_16261() /* ty=Tensor[(13, 9, 12), bool] */;
  %1473 = %1469.2;
  %1474 = %1470.1;
  %1475 = %1471.4;
  (%1472, %1473, %1474, %1475)
}

def @func_6947() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1476 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1477 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1478 = %1476.1;
  %1479 = %1477.0;
  (%1478, %1479)
}

def @func_13707() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %1480 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %1481 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1482 = %1480.1;
  %1483 = %1481.1;
  (%1482, %1483)
}

def @func_6463(%var_6379: Tensor[(13, 637), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32], Tensor[(13, 637), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 637), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1484 = @func_5284() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */;
  %1485 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1486 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %1487 = %1486.3;
  %1488 = cast(%1487, dtype="bool") /* ty=Tensor[(1, 637), bool] */;
  %1489 = cast(%var_6379, dtype="bool") /* ty=Tensor[(13, 637), bool] */;
  %1490 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %1491 = cast(%var_6379, dtype="float32") /* ty=Tensor[(13, 637), float32] */;
  %1492 = @func_5850() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %1493 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1494 = %1484.3;
  %1495 = %1485.0;
  %1496 = greater_equal(%1488, %1489) /* ty=Tensor[(13, 637), bool] */;
  %1497 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %1498 = %1490.0;
  %1499 = exp(%1491) /* ty=Tensor[(13, 637), float32] */;
  %1500 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
  %1501 = %1492.0;
  %1502 = %1493.0;
  (%1494, %1495, %1496, %1497, %1498, %1499, %1500, %1501, %1502)
}

def @func_9563() -> Tensor[(7, 15, 6), float32] {
  %1503 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1504 = %1503.1;
  %1505 = cast(%1504, dtype="float32") /* ty=Tensor[(7, 15, 6), float32] */;
  log(%1505) /* ty=Tensor[(7, 15, 6), float32] */
}

def @func_14377() -> Tensor[(13, 9, 12), float32] {
  %1506 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1506.0
}

def @func_11514() -> (Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
  %1507 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1508 = cast(meta[relay.Constant][55] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %1509 = reshape(%1508, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), float64] */;
  %1510 = @func_7643(%1509) /* ty=(Tensor[(16, 14, 5), float32],) */;
  %1511 = %1507.0;
  %1512 = %1510.0;
  (%1511, %1512, meta[relay.Constant][55] /* ty=Tensor[(1120), float64] */)
}

def @func_3912(%var_3898: Tensor[(504), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32], Tensor[(504), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1513 = cast(%var_3898, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1514 = reshape(%1513, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %1515 = @func_2683(%1514) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) */;
  %1516 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1517 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  %1518 = %1515.1;
  %1519 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %1520 = %1516.0;
  (%1517, %1518, %var_3898, %1519, %1520)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_18747() -> (Tensor[(13, 9, 12), int16],) {
  %2 = fn () -> (Tensor[(13, 9, 12), int16],) {
    %0 = @func_13707() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(13, 9, 12), int16],) */
}

def @func_6260() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), float32]) {
  %9 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), float32]) {
    %3 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
    %4 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
    %5 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %6 = %3.0;
    %7 = %4.1;
    %8 = %5.0;
    (%6, %7, %8)
  };
  %9() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_7249() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %10 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %11 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %12 = %10.0;
  %13 = %11.0;
  (%12, %13)
}

def @func_14050() -> Tensor[(13, 9, 12), float32] {
  %15 = fn () -> Tensor[(13, 9, 12), float32] {
    %14 = @func_10891() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) */;
    %14.1
  };
  %15() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_893() -> (Tensor[(13, 9, 12), float32], int32, int32) {
  %22 = fn () -> (Tensor[(13, 9, 12), float32], int32, int32) {
    %16 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %17 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %18 = reshape(%17, newshape=[]) /* ty=int32 */;
    %19 = @func_588(%18) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %20 = %16.0;
    %21 = %19.3;
    (%20, %21, 3 /* ty=int32 */)
  };
  %22() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */
}

def @func_8035() -> Tensor[(13, 9, 12), float32] {
  @func_8033() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_19065() -> Tensor[(13, 9, 12), float32] {
  %23 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %23.0
}

def @func_15681() -> (Tensor[(13, 9, 12), float32],) {
  %24 = @func_11390() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %25 = %24.0;
  (%25,)
}

def @func_19067() -> Tensor[(13, 9, 12), float32] {
  @func_19065() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_18946() -> int32 {
  @func_18944() /* ty=int32 */
}

def @func_15802() -> Tensor[(13, 9, 12), float32] {
  %27 = fn () -> Tensor[(13, 9, 12), float32] {
    %26 = @func_15456() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %26.1
  };
  %27() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_6465(%var_6464: Tensor[(13, 637), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32], Tensor[(13, 637), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 637), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %47 = fn (%var_6379: Tensor[(13, 637), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32], Tensor[(13, 637), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 637), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %28 = @func_5284() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */;
    %29 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %30 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
    %31 = %30.3;
    %32 = cast(%31, dtype="bool") /* ty=Tensor[(1, 637), bool] */;
    %33 = cast(%var_6379, dtype="bool") /* ty=Tensor[(13, 637), bool] */;
    %34 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
    %35 = cast(%var_6379, dtype="float32") /* ty=Tensor[(13, 637), float32] */;
    %36 = @func_5850() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
    %37 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %38 = %28.3;
    %39 = %29.0;
    %40 = greater_equal(%32, %33) /* ty=Tensor[(13, 637), bool] */;
    %41 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    %42 = %34.0;
    %43 = exp(%35) /* ty=Tensor[(13, 637), float32] */;
    %44 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
    %45 = %36.0;
    %46 = %37.0;
    (%38, %39, %40, %41, %42, %43, %44, %45, %46)
  };
  %47(%var_6464) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32], Tensor[(13, 637), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 637), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_14019() -> (Tensor[(13, 9, 12), float32],) {
  %49 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %48 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    (%48,)
  };
  %49() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_5070(%var_5068: bool, %var_5069: Tensor[(10, 13, 1), bool]) -> (Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_5066(%var_5068, %var_5069) /* ty=(Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_12859() -> (Tensor[(13, 9, 12), float32],) {
  %50 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  (%50,)
}

def @func_15683() -> (Tensor[(13, 9, 12), float32],) {
  @func_15681() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_11169() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %51 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %52 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %53 = %51.1;
  %54 = %52.0;
  (%53, %54)
}

def @func_5066(%var_4943: bool, %var_4944: Tensor[(10, 13, 1), bool]) -> (Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %55 = cast(%var_4943, dtype="bool") /* ty=bool */;
  %56 = cast(%var_4944, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %57 = logical_and(%55, %56) /* ty=Tensor[(10, 13, 1), bool] */;
  %58 = cast(%57, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %59 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %60 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %61 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %62 = asin(%58) /* ty=Tensor[(10, 13, 1), float32] */;
  %63 = %59.0;
  %64 = %60.0;
  %65 = %61.0;
  %66 = @func_2838() /* ty=Tensor[(13, 9, 12), float32] */;
  (%62, %63, %64, %65, %66)
}

def @func_18788() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %67 = @func_14768() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) */;
  %68 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %69 = %67.1;
  %70 = %68.0;
  (%69, %70)
}

def @func_12965(%var_12936: Tensor[(1, 9, 3), int32]) -> (Tensor[(1, 9, 3), float64], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(637), float64]) {
  %71 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %72 = %71.2;
  %73 = cast(%72, dtype="float64") /* ty=float64 */;
  %74 = cast(%var_12936, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %75 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %76 = cast(meta[relay.Constant][0] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %77 = reshape(%76, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %78 = @func_10095(%77) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %79 = mod(%73, %74) /* ty=Tensor[(1, 9, 3), float64] */;
  %80 = %75.1;
  %81 = %78.3;
  (%79, %80, %81, meta[relay.Constant][0] /* ty=Tensor[(637), float64] */)
}

def @func_15618(%var_15616: Tensor[(16, 16, 13), float32]) -> (Tensor[(16, 16, 13), float32],) {
  @func_15615(%var_15616) /* ty=(Tensor[(16, 16, 13), float32],) */
}

def @func_11434() -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
  %86 = fn () -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
    %82 = @func_4300() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
    %83 = @func_7964() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %84 = %82.0;
    %85 = %83.0;
    (%84, %85)
  };
  %86() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_16177(%var_16175: Tensor[(630, 1), float32], %var_16176: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(630, 1), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
  %97 = fn (%var_16156: Tensor[(630, 1), float32], %var_16167: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(630, 1), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
    %87 = cast(%var_16156, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
    %88 = reshape(%87, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
    %89 = @func_13265(%88) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
    %90 = cast(%var_16167, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %91 = cast(%var_16167, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %92 = reshape(%90, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %93 = reshape(%91, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %94 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
    %95 = %89.1;
    %96 = @func_1247(%92, %93) /* ty=Tensor[(16, 4, 5), uint32] */;
    (%94, %95, %var_16156, %96, %var_16167)
  };
  %97(%var_16175, %var_16176) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(630, 1), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) */
}

def @func_8011(%var_8009: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), float64], Tensor[(637, 1), float32]) {
  @func_8008(%var_8009) /* ty=(Tensor[(10, 4, 9), float64], Tensor[(637, 1), float32]) */
}

def @func_15756() -> (Tensor[(13, 9, 12), float32],) {
  %100 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %98 = @func_15425() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %99 = %98.1;
    (%99,)
  };
  %100() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_17101() -> (Tensor[(1404), float32], Tensor[(637), float64]) {
  @func_17099() /* ty=(Tensor[(1404), float32], Tensor[(637), float64]) */
}

def @func_18379() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool]) {
  %104 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool]) {
    %101 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %102 = %101.0;
    %103 = @func_10143() /* ty=Tensor[(13, 9, 12), bool] */;
    (%102, %103)
  };
  %104() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool]) */
}

def @func_1088() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) {
  %105 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %106 = %105.0;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %108 = reshape(%107, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %109 = @func_815(%108) /* ty=(Tensor[(13, 9, 12), int16],) */;
  %110 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %111 = %109.0;
  %112 = %110.2;
  (%106, %111, %112)
}

def @func_17782(%var_17781: Tensor[(630), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64], Tensor[(630), float32]) {
  %121 = fn (%var_17767: Tensor[(630), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64], Tensor[(630), float32]) {
    %113 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %114 = cast(%var_17767, dtype="float32") /* ty=Tensor[(630), float32] */;
    %115 = reshape(%114, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float32] */;
    %116 = @func_13265(%115) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
    %117 = %113.0;
    %118 = @func_16857() /* ty=Tensor[(13, 9, 12), float32] */;
    %119 = @func_13220() /* ty=Tensor[(13, 9, 12), float32] */;
    %120 = %116.2;
    (%117, %118, %119, %120, %var_17767)
  };
  %121(%var_17781) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64], Tensor[(630), float32]) */
}

def @func_3254(%var_3253: Tensor[(385, 3), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %132 = fn (%var_3207: Tensor[(385, 3), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %122 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
    %123 = cast(%var_3207, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
    %124 = reshape(%123, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
    %125 = @func_1955(%124) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %128 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %129 = %122.2;
    %130 = log(%127) /* ty=Tensor[(13, 9, 12), float32] */;
    %131 = %128.0;
    (%129, %var_3207, %130, %131)
  };
  %132(%var_3253) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17931() -> (Tensor[(13, 9, 12), float32],) {
  @func_17929() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_13788() -> (Tensor[(13, 9, 12), float32], Tensor[(637, ?), int64]) {
  %147 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(637, ?), int64]) {
    %133 = @func_9672() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %134 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
    %135 = %134.3;
    %136 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
    %137 = %136.2;
    %138 = cast(%135, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
    %139 = cast(%137, dtype="float64") /* ty=float64 */;
    %140 = mod(%138, %139) /* ty=Tensor[(637, 1), float64] */;
    %141 = cast(%135, dtype="int64") /* ty=Tensor[(637, 1), int64] */;
    %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(2), int32] */;
    %143 = cast(%140, dtype="int64") /* ty=Tensor[(637, 1), int64] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %145 = %133.0;
    %146 = bitwise_and(%143, %144) /* ty=Tensor[(637, ?), int64] */;
    (%145, %146)
  };
  %147() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(637, ?), int64]) */
}

def @func_15846() -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %148 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %149 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %150 = @func_12543() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %151 = %148.4;
  %152 = %149.0;
  %153 = %150.1;
  (%151, %152, %153)
}

def @func_11697() -> Tensor[(13, 9, 12), float32] {
  %155 = fn () -> Tensor[(13, 9, 12), float32] {
    %154 = @func_9086() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %154.5
  };
  %155() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_11561() -> Tensor[(13, 9, 12), float32] {
  %157 = fn () -> Tensor[(13, 9, 12), float32] {
    %156 = @func_10922() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) */;
    %156.1
  };
  %157() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_14746() -> Tensor[(13, 9, 12), float32] {
  %158 = @func_10859() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %158.0
}

def @func_3427() -> (Tensor[(13, 9, 12), float32],) {
  %159 = @func_2747() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %160 = %159.0;
  (%160,)
}

def @func_11391() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %167 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %161 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %162 = @func_10859() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %163 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %164 = %161.0;
    %165 = %162.0;
    %166 = %163.0;
    (%164, %165, %166)
  };
  %167() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4027() -> Tensor[(13, 9, 12), float32] {
  %169 = fn () -> Tensor[(13, 9, 12), float32] {
    %168 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %168.0
  };
  %169() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_4166() -> (int32,) {
  %170 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %171 = %170.2;
  (%171,)
}

def @func_10893() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) {
  @func_10891() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) */
}

def @func_19139() -> (Tensor[(13, 9, 12), float32],) {
  %174 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %172 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %173 = %172.0;
    (%173,)
  };
  %174() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_9811() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %175 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %176 = %175.3;
  %177 = @func_8303() /* ty=Tensor[(13, 9, 12), float32] */;
  (%176, %177)
}

def @func_1212() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) {
  %178 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %179 = cast(meta[relay.Constant][1] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %180 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 637), float64] */, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %181 = reshape(%179, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %182 = reshape(%180, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %183 = @func_53(%181, %182) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %184 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %185 = reshape(%184, newshape=[]) /* ty=int32 */;
  %186 = @func_588(%185) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %187 = %178.0;
  %188 = %183.1;
  %189 = %186.0;
  (%187, %188, meta[relay.Constant][1] /* ty=Tensor[(91), float64] */, meta[relay.Constant][2] /* ty=Tensor[(1, 637), float64] */, %189, 9 /* ty=int32 */)
}

def @func_8555(%var_8481: Tensor[(91), float64], %var_8482: Tensor[(637), float64], %var_8528: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) {
  %190 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %191 = cast(%var_8481, dtype="float64") /* ty=Tensor[(91), float64] */;
  %192 = cast(%var_8482, dtype="float64") /* ty=Tensor[(637), float64] */;
  %193 = reshape(%191, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %194 = reshape(%192, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %195 = @func_520(%193, %194) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %196 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %197 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %198 = cast(%var_8528, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %199 = reshape(%198, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %200 = @func_3187(%199) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
  %201 = %200.2;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %203 = atanh(%202) /* ty=Tensor[(1155), float32] */;
  %204 = cast(%201, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(1), int32] */;
  %206 = cast(%203, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?), bool] */;
  %208 = %190.0;
  %209 = %195.2;
  %210 = %196.1;
  %211 = %197.3;
  %212 = not_equal(%206, %207) /* ty=Tensor[(1155), bool] */;
  (%208, %209, %var_8481, %var_8482, %210, %211, %var_8528, %212)
}

def @func_11113() -> Tensor[(13, 9, 12), float32] {
  %214 = fn () -> Tensor[(13, 9, 12), float32] {
    %213 = @func_8465() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %213.1
  };
  %214() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_17195(%var_17193: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(637), float64], Tensor[(637), float64]) {
  @func_17192(%var_17193) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(637), float64], Tensor[(637), float64]) */
}

def @func_3805() -> (Tensor[(13, 9, 12), float32],) {
  @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_4324() -> (Tensor[(13, 9, 12), float32],) {
  @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_5381() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %218 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %215 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %216 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
    %217 = %215.1;
    (%216, %217)
  };
  %218() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_6057() -> (Tensor[(13, 9, 12), float32],) {
  %220 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %219 = @func_2591() /* ty=Tensor[(13, 9, 12), float32] */;
    (%219,)
  };
  %220() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_16678() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %225 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %221 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
    %222 = @func_8754() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %223 = %221.0;
    %224 = %222.0;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_10144() -> Tensor[(13, 9, 12), bool] {
  %227 = fn () -> Tensor[(13, 9, 12), bool] {
    %226 = @func_9395() /* ty=(Tensor[(13, 9, 12), bool],) */;
    %226.0
  };
  %227() /* ty=Tensor[(13, 9, 12), bool] */
}

def @func_1247(%var_1236: Tensor[(16, 4, 5), uint32], %var_1237: Tensor[(16, 4, 5), uint32]) -> Tensor[(16, 4, 5), uint32] {
  %228 = cast(%var_1237, dtype="uint32") /* ty=Tensor[(16, 4, 5), uint32] */;
  %229 = shape_of(%var_1236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_1236, dtype="uint32") /* ty=Tensor[(16, 4, 5), uint32] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%230, %231) /* ty=Tensor[(16, 4, 5), uint32] */
}

def @func_18551() -> (int32,) {
  %232 = @func_4166() /* ty=(int32,) */;
  %233 = %232.0;
  (%233,)
}

def @func_8755() -> (Tensor[(13, 9, 12), float32],) {
  %236 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %234 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %235 = %234.0;
    (%235,)
  };
  %236() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_19240(%var_19219: Tensor[(1056), float32], %var_19220: Tensor[(726), int8]) -> (int32, Tensor[(8, 11, 12), float32], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(12, 16, 4), uint64], Tensor[(13, 9, 12), float32]) {
  %237 = @func_9086() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %238 = cast(%var_19219, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %239 = cast(%var_19219, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %240 = cast(%var_19220, dtype="int8") /* ty=Tensor[(726), int8] */;
  %241 = reshape(%238, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %242 = reshape(%239, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %243 = reshape(%240, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %244 = @func_9946(%241, %242, %243) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
  %245 = %237.7;
  %246 = cast(%245, dtype="int32") /* ty=int32 */;
  %247 = %244.1;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %249 = cast(%var_19220, dtype="int8") /* ty=Tensor[(726), int8] */;
  %250 = reshape(%246, newshape=[]) /* ty=int32 */;
  %251 = reshape(%248, newshape=[1056]) /* ty=Tensor[(1056), float32] */;
  %252 = reshape(%249, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %253 = @func_16930(%250, %251, %252) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %254 = @func_14255() /* ty=Tensor[(12, 16, 4), uint64] */;
  %255 = %253.0;
  (%245, %247, %var_19219, %var_19220, %254, %255)
}

def @func_19208(%var_19206: float32) -> (Tensor[(7, 11, 5), float32], Tensor[(77, 15), float32]) {
  @func_19205(%var_19206) /* ty=(Tensor[(7, 11, 5), float32], Tensor[(77, 15), float32]) */
}

def @func_718() -> Tensor[(13, 9, 12), float32] {
  @func_560() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_1753() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5459() -> (Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) {
  @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */
}

def @func_2987() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %260 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
    %256 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %257 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %258 = %256.0;
    %259 = %257.1;
    (%258, %259)
  };
  %260() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_13105() -> (Tensor[(13, 9, 12), float32],) {
  %261 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
  (%261,)
}

def @func_15456() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %262 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %263 = @func_9281() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %264 = %262.0;
  %265 = %263.0;
  (%264, %265)
}

def @func_2790() -> (Tensor[(13, 9, 12), float32],) {
  %268 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %266 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %267 = %266.1;
    (%267,)
  };
  %268() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_16388() -> (int32, Tensor[(13, 9, 12), float32]) {
  %272 = fn () -> (int32, Tensor[(13, 9, 12), float32]) {
    %269 = @func_14907() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %270 = @func_14469() /* ty=int32 */;
    %271 = %269.0;
    (%270, %271)
  };
  %272() /* ty=(int32, Tensor[(13, 9, 12), float32]) */
}

def @func_2748() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %276 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %273 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %274 = %273.0;
    %275 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
    (%274, %275)
  };
  %276() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_591(%var_589: int32) -> (Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  @func_588(%var_589) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */
}

def @func_16774() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_16772() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_1214() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) {
  @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */
}

def @func_1958(%var_1956: Tensor[(15, 7, 11), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) {
  @func_1955(%var_1956) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) */
}

def @func_4627() -> (Tensor[(13, 9, 12), float32],) {
  %277 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  (%277,)
}

def @func_1955(%var_1931: Tensor[(15, 7, 11), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) {
  %278 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %279 = cast(%var_1931, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %280 = rsqrt(%279) /* ty=Tensor[(15, 7, 11), float32] */;
  %281 = cast(%var_1931, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %285 = %278.0;
  %286 = subtract(%283, %284) /* ty=Tensor[(15, 7, 11), float32] */;
  (%285, %286)
}

def @func_9524() -> (Tensor[(320), uint32],) {
  %289 = fn () -> (Tensor[(320), uint32],) {
    %287 = @func_7905() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */;
    %288 = %287.3;
    (%288,)
  };
  %289() /* ty=(Tensor[(320), uint32],) */
}

def @func_14827(%var_14825: Tensor[(12, 5, 16), float32], %var_14826: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
  %294 = fn (%var_14810: Tensor[(12, 5, 16), float32], %var_14811: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
    %290 = cast(%var_14811, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
    %291 = shape_of(%var_14810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %292 = cast(%var_14810, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
    %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%292, %293) /* ty=Tensor[(12, 5, 16), float32] */
  };
  %294(%var_14825, %var_14826) /* ty=Tensor[(12, 5, 16), float32] */
}

def @func_4271(%var_4196: int64) -> (Tensor[(9, 14, 5), uint64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(9, 14, 5), int8]) {
  %295 = cast(%var_4196, dtype="int64") /* ty=int64 */;
  %296 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 14, 5), int64] */, dtype="int64") /* ty=Tensor[(9, 14, 5), int64] */;
  %297 = subtract(%295, %296) /* ty=Tensor[(9, 14, 5), int64] */;
  %298 = cast(%297, dtype="uint64") /* ty=Tensor[(9, 14, 5), uint64] */;
  %299 = cast(%var_4196, dtype="uint64") /* ty=uint64 */;
  %300 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 14, 5), int64] */, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
  %301 = acosh(%300) /* ty=Tensor[(9, 14, 5), float32] */;
  %302 = cast(%301, dtype="int8") /* ty=Tensor[(9, 14, 5), int8] */;
  %303 = cast(%var_4196, dtype="int8") /* ty=int8 */;
  %304 = bitwise_or(%298, %299) /* ty=Tensor[(9, 14, 5), uint64] */;
  %305 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  %306 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  %307 = maximum(%302, %303) /* ty=Tensor[(9, 14, 5), int8] */;
  (%304, %305, %306, %307)
}

def @func_5927() -> Tensor[(13, 9, 12), float32] {
  @func_5925() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_11171() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_11169() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17555() -> Tensor[(13, 9, 12), float32] {
  %309 = fn () -> Tensor[(13, 9, 12), float32] {
    %308 = @func_13287() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %308.1
  };
  %309() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_4168() -> (int32,) {
  @func_4166() /* ty=(int32,) */
}

def @func_3604() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_2297() -> (Tensor[(13, 9, 12), float32],) {
  %312 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %310 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %311 = %310.1;
    (%311,)
  };
  %312() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_5457() -> (Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) {
  %313 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
  %314 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %315 = %313.1;
  %316 = %314.1;
  (%315, %316)
}

def @func_10781() -> (Tensor[(13, 9, 12), float32],) {
  %317 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %318 = %317.0;
  (%318,)
}

def @func_11747() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) {
  %325 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) {
    %319 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %320 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
    %321 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
    %322 = %319.0;
    %323 = %320.1;
    %324 = %321.1;
    (%322, %323, %324)
  };
  %325() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) */
}

def @func_3755() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  @func_3753() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) */
}

def @func_11245() -> (Tensor[(13, 9, 12), float32],) {
  @func_11243() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_7434() -> (Tensor[(13, 9, 12), float32],) {
  @func_7432() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_18944() -> int32 {
  %326 = @func_18551() /* ty=(int32,) */;
  %326.0
}

def @func_13221() -> Tensor[(13, 9, 12), float32] {
  %328 = fn () -> Tensor[(13, 9, 12), float32] {
    %327 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %327.0
  };
  %328() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_9142() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) {
  @func_9140() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) */
}

def @func_3313() -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) {
  %339 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) {
    %329 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %330 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
    %331 = cast(meta[relay.Constant][5] /* ty=Tensor[(637, 1), float64] */, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
    %332 = reshape(%330, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %333 = reshape(%331, newshape=[637]) /* ty=Tensor[(637), float64] */;
    %334 = @func_520(%332, %333) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
    %335 = cast(meta[relay.Constant][5] /* ty=Tensor[(637, 1), float64] */, dtype="float32") /* ty=Tensor[(637, 1), float32] */;
    %336 = %329.5;
    %337 = %334.2;
    %338 = sqrt(%335) /* ty=Tensor[(637, 1), float32] */;
    (%336, %337, meta[relay.Constant][4] /* ty=Tensor[(13, 7), float64] */, %338)
  };
  %339() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */
}

def @func_7842() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) {
  %359 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) {
    %340 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %341 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %342 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %343 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %344 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
    %345 = %344.0;
    %346 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
    %347 = %346.0;
    %348 = cast(%347, dtype="uint16") /* ty=Tensor[(?, 637), uint16] */;
    %349 = shape_of(%345, dtype="int32") /* ty=Tensor[(2), int32] */;
    %350 = cast(%345, dtype="uint16") /* ty=Tensor[(?, 637), uint16] */;
    %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %352 = @func_3753() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
    %353 = %340.0;
    %354 = %341.0;
    %355 = %342.0;
    %356 = %343.0;
    %357 = bitwise_or(%350, %351) /* ty=Tensor[(?, 637), uint16] */;
    %358 = %352.1;
    (%353, %354, %355, %356, %357, %358)
  };
  %359() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */
}

def @func_9565() -> Tensor[(7, 15, 6), float32] {
  @func_9563() /* ty=Tensor[(7, 15, 6), float32] */
}

def @func_13477(%var_13474: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  %360 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %361 = cast(%var_13474, dtype="float64") /* ty=Tensor[(91), float64] */;
  %362 = cast(meta[relay.Constant][6] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %363 = reshape(%361, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %364 = reshape(%362, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %365 = @func_53(%363, %364) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %366 = %360.0;
  %367 = %365.1;
  (%366, %367, %var_13474, meta[relay.Constant][6] /* ty=Tensor[(637), float64] */)
}

def @func_7598() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) {
  %368 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
  %369 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %370 = reshape(%369, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %371 = @func_2683(%370) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) */;
  %372 = @func_7373() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %373 = %368.0;
  %374 = %371.0;
  %375 = %372.2;
  %376 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  (%373, %374, meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, %375, %376)
}

def @func_15615(%var_15610: Tensor[(16, 16, 13), float32]) -> (Tensor[(16, 16, 13), float32],) {
  %377 = cast(%var_15610, dtype="float32") /* ty=Tensor[(16, 16, 13), float32] */;
  %378 = acos(%377) /* ty=Tensor[(16, 16, 13), float32] */;
  (%378,)
}

def @func_2646() -> (Tensor[(13, 9, 12), float32],) {
  @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_13288() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %382 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %379 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %380 = @func_11363() /* ty=Tensor[(13, 9, 12), float32] */;
    %381 = %379.1;
    (%380, %381)
  };
  %382() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_1502() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %383 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %384 = %383.1;
  %385 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %389 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %390 = equal(%387, %388) /* ty=Tensor[(13, 9, 12), bool] */;
  %391 = %389.0;
  (%390, %391)
}

def @func_7496() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %397 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
    %392 = @func_5175() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %393 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
    %394 = %392.0;
    %395 = %393.0;
    %396 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
    (%394, %395, %396)
  };
  %397() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */
}

def @func_8033() -> Tensor[(13, 9, 12), float32] {
  %398 = @func_7598() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) */;
  %398.0
}

def @func_1663() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %403 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %399 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %400 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %401 = %399.0;
    %402 = %400.0;
    (%401, %402)
  };
  %403() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_10659() -> (int32,) {
  %406 = fn () -> (int32,) {
    %404 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %405 = %404.2;
    (%405,)
  };
  %406() /* ty=(int32,) */
}

def @func_7215() -> (Tensor[(13, 9, 12), float32],) {
  %407 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %408 = %407.0;
  (%408,)
}

def @func_5103(%var_5091: uint8, %var_5101: Tensor[(726), int8]) -> (Tensor[(9, 6, 1), uint8], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
  %409 = cast(%var_5091, dtype="uint8") /* ty=uint8 */;
  %410 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 6, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 6, 1), uint8] */;
  %411 = cast(%var_5101, dtype="int8") /* ty=Tensor[(726), int8] */;
  %412 = reshape(%411, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), int8] */;
  %413 = logical_xor(%409, %410) /* ty=Tensor[(9, 6, 1), uint8] */;
  %414 = @func_3461(%412) /* ty=Tensor[(11, 6, 11), int8] */;
  (%413, %414, %var_5101)
}

def @func_9718() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_9716() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_10859() -> (Tensor[(13, 9, 12), float32],) {
  %415 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %416 = %415.0;
  (%416,)
}

def @func_1755() -> Tensor[(13, 9, 12), float32] {
  @func_1753() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_7339(%var_7337: Tensor[(10, 5, 1), int32], %var_7338: Tensor[(10, 5, 3), int32]) -> (Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) {
  %426 = fn (%var_7297: Tensor[(10, 5, 1), int32], %var_7298: Tensor[(10, 5, 3), int32]) -> (Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) {
    %417 = cast(%var_7297, dtype="int32") /* ty=Tensor[(10, 5, 1), int32] */;
    %418 = cast(%var_7298, dtype="int32") /* ty=Tensor[(10, 5, 3), int32] */;
    %419 = @func_6947() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %420 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %421 = cast(%var_7297, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
    %422 = bitwise_or(%417, %418) /* ty=Tensor[(10, 5, 3), int32] */;
    %423 = %419.1;
    %424 = %420.0;
    %425 = asinh(%421) /* ty=Tensor[(10, 5, 1), float64] */;
    (%422, %423, %424, %425)
  };
  %426(%var_7337, %var_7338) /* ty=(Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) */
}

def @func_13708() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %431 = fn () -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
    %427 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
    %428 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
    %429 = %427.1;
    %430 = %428.1;
    (%429, %430)
  };
  %431() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */
}

def @func_17472() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  @func_17470() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */
}

def @func_6949() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_6947() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_3464(%var_3462: Tensor[(11, 6, 11), int8]) -> Tensor[(11, 6, 11), int8] {
  @func_3461(%var_3462) /* ty=Tensor[(11, 6, 11), int8] */
}

def @func_14877() -> (Tensor[(13, 9, 12), float32],) {
  %434 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %432 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %433 = %432.0;
    (%433,)
  };
  %434() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_8467() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_8465() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4396(%var_4393: Tensor[(40, 8), uint32], %var_4394: Tensor[(40, 8), uint32], %var_4395: Tensor[(13, 7), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) {
  %457 = fn (%var_4368: Tensor[(40, 8), uint32], %var_4372: Tensor[(40, 8), uint32], %var_4389: Tensor[(13, 7), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) {
    %435 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
    %436 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(40, 8), uint32] */;
    %437 = cast(%var_4368, dtype="uint32") /* ty=Tensor[(40, 8), uint32] */;
    %438 = reshape(%436, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %439 = reshape(%437, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %440 = cast(%var_4372, dtype="uint8") /* ty=Tensor[(40, 8), uint8] */;
    %441 = shape_of(%var_4368, dtype="int32") /* ty=Tensor[(2), int32] */;
    %442 = cast(%var_4368, dtype="uint8") /* ty=Tensor[(40, 8), uint8] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %444 = cast(%var_4368, dtype="float64") /* ty=Tensor[(40, 8), float64] */;
    %445 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %446 = cast(%var_4389, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
    %447 = cast(meta[relay.Constant][10] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
    %448 = reshape(%446, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
    %449 = reshape(%447, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
    %450 = @func_53(%448, %449) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
    %451 = %435.0;
    %452 = @func_1247(%438, %439) /* ty=Tensor[(16, 4, 5), uint32] */;
    %453 = subtract(%442, %443) /* ty=Tensor[(40, 8), uint8] */;
    %454 = log(%444) /* ty=Tensor[(40, 8), float64] */;
    %455 = %445.1;
    %456 = %450.0;
    (%451, %452, %453, %454, %455, %456, %var_4389, meta[relay.Constant][10] /* ty=Tensor[(637), float64] */)
  };
  %457(%var_4393, %var_4394, %var_4395) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) */
}

def @func_16823(%var_16822: Tensor[(91), float64]) -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64]) {
  %467 = fn (%var_16819: Tensor[(91), float64]) -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64]) {
    %458 = @func_15574() /* ty=(Tensor[(637), float64],) */;
    %459 = cast(%var_16819, dtype="float64") /* ty=Tensor[(91), float64] */;
    %460 = %458.0;
    %461 = cast(%460, dtype="float64") /* ty=Tensor[(637), float64] */;
    %462 = reshape(%459, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %463 = reshape(%461, newshape=[637]) /* ty=Tensor[(637), float64] */;
    %464 = @func_12755(%462, %463) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) */;
    %465 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
    %466 = %464.5;
    (%460, %465, %466, %var_16819)
  };
  %467(%var_16822) /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64]) */
}

def @func_2683(%var_2673: Tensor[(8, 9, 7), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) {
  %468 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %469 = cast(%var_2673, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %470 = acosh(%469) /* ty=Tensor[(8, 9, 7), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %472 = %468.0;
  %473 = log2(%471) /* ty=Tensor[(8, 9, 7), float32] */;
  (%472, %473)
}

def @func_15326() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %474 = @func_11090() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %475 = %474.2;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %477 = reshape(%476, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %478 = @func_2266(%477) /* ty=Tensor[(13, 9, 12), int64] */;
  (%475, %478)
}

def @func_140() -> (Tensor[(13, 9, 12), float32],) {
  %484 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %479 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %480 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %481 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %483 = power(%481, %482) /* ty=Tensor[(13, 9, 12), float32] */;
    (%483,)
  };
  %484() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3912(%var_3898: Tensor[(504), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32], Tensor[(504), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %485 = cast(%var_3898, dtype="float32") /* ty=Tensor[(504), float32] */;
  %486 = reshape(%485, newshape=[8, 9, 7]) /* ty=Tensor[(8, 9, 7), float32] */;
  %487 = @func_2683(%486) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) */;
  %488 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %489 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  %490 = %487.1;
  %491 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %492 = %488.0;
  (%489, %490, %var_3898, %491, %492)
}

def @func_17470() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %493 = @func_16772() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %494 = @func_15543() /* ty=(Tensor[(13, 9, 12), int64],) */;
  %495 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
  %496 = %493.0;
  %497 = %494.0;
  (%495, %496, %497)
}

def @func_9175() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %504 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %498 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %499 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %500 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
    %501 = %498.0;
    %502 = %499.1;
    %503 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
    (%500, %501, %502, %503)
  };
  %504() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_7600() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) {
  @func_7598() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(504), float32], int32, Tensor[(13, 9, 12), float32]) */
}

def @func_13508() -> (Tensor[(13, 9, 12), float32],) {
  @func_13506() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_11091() -> (Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %517 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %505 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
    %506 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
    %507 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %508 = reshape(%507, newshape=[]) /* ty=int32 */;
    %509 = @func_5674(%508) /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
    %510 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %511 = @func_10486() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %512 = %505.2;
    %513 = %506.0;
    %514 = %509.0;
    %515 = %510.1;
    %516 = %511.0;
    (%512, %513, %514, -9 /* ty=int32 */, %515, %516)
  };
  %517() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_10861() -> (Tensor[(13, 9, 12), float32],) {
  @func_10859() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_14255() -> Tensor[(12, 16, 4), uint64] {
  %518 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 16, 4), uint64] */;
  %519 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 4), uint64] */, dtype="uint64") /* ty=Tensor[(12, 16, 4), uint64] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%520, %521) /* ty=Tensor[(12, 16, 4), uint64] */
}

def @func_12518() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %525 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %522 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
    %523 = %522.1;
    %524 = @func_12485() /* ty=Tensor[(13, 9, 12), float32] */;
    (%523, %524)
  };
  %525() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_14560() -> Tensor[(7, 15, 6), bool] {
  @func_14558() /* ty=Tensor[(7, 15, 6), bool] */
}

def @func_10203() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %526 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %527 = @func_9894() /* ty=(Tensor[(13, 7), float64],) */;
  %528 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
  %529 = @func_6947() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %530 = %526.0;
  %531 = %527.0;
  %532 = %528.0;
  %533 = %529.0;
  (%530, %531, %532, %533)
}

def @func_9620() -> Tensor[(13, 9, 12), float32] {
  @func_9618() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_15178() -> Tensor[(13, 9, 12), float32] {
  %534 = @func_7432() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %534.0
}

def @func_8560(%var_8557: Tensor[(91), float64], %var_8558: Tensor[(637), float64], %var_8559: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) {
  @func_8555(%var_8557, %var_8558, %var_8559) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) */
}

def @func_4546() -> Tensor[(13, 9, 12), float32] {
  %536 = fn () -> Tensor[(13, 9, 12), float32] {
    %535 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %535.0
  };
  %536() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_312() -> (Tensor[(13, 9, 12), float32],) {
  %537 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %538 = %537.0;
  (%538,)
}

def @func_13480(%var_13478: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  @func_13477(%var_13478) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) */
}

def @func_10584() -> (Tensor[(13, 9, 12), float32], Tensor[(91), bool]) {
  %539 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %540 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %541 = %540.2;
  %542 = cast(meta[relay.Constant][15] /* ty=Tensor[(91), float64] */, dtype="bool") /* ty=Tensor[(91), bool] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(1), int32] */;
  %544 = cast(%541, dtype="bool") /* ty=Tensor[(91), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?), bool] */;
  %546 = %539.0;
  %547 = less(%544, %545) /* ty=Tensor[(91), bool] */;
  (%546, %547)
}

def @func_8680() -> Tensor[(13, 9, 12), bool] {
  %548 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %548.0
}

def @func_15848() -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  @func_15846() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */
}

def @func_15912() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_15910() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_11514() -> (Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
  %549 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %550 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %551 = reshape(%550, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), float64] */;
  %552 = @func_7643(%551) /* ty=(Tensor[(16, 14, 5), float32],) */;
  %553 = %549.0;
  %554 = %552.0;
  (%553, %554, meta[relay.Constant][16] /* ty=Tensor[(1120), float64] */)
}

def @func_14257() -> Tensor[(12, 16, 4), uint64] {
  @func_14255() /* ty=Tensor[(12, 16, 4), uint64] */
}

def @func_15426() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %560 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %555 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %556 = @func_12859() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %557 = @func_6220() /* ty=Tensor[(13, 9, 12), float32] */;
    %558 = %555.0;
    %559 = %556.0;
    (%557, %558, %559)
  };
  %560() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_1361(%var_1359: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  @func_1358(%var_1359) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */
}

def @func_11243() -> (Tensor[(13, 9, 12), float32],) {
  %561 = @func_5615() /* ty=Tensor[(13, 9, 12), float32] */;
  (%561,)
}

def @func_1598() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) {
  %572 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) {
    %562 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %563 = %562.0;
    %564 = cast(%563, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %565 = reshape(%564, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
    %566 = @func_815(%565) /* ty=(Tensor[(13, 9, 12), int16],) */;
    %567 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %568 = reshape(%567, newshape=[]) /* ty=int32 */;
    %569 = @func_475(%568) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %570 = %566.0;
    %571 = %569.4;
    (%563, %570, %571, -8 /* ty=int32 */)
  };
  %572() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */
}

def @func_1504() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_12457(%var_12453: int16, %var_12454: Tensor[(1, 4, 15), int16], %var_12455: Tensor[(320), uint32], %var_12456: Tensor[(91), float64]) -> (Tensor[(1, 4, 15), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(1155), float64], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(91), float64], Tensor[(?, 4, 15), bool]) {
  %617 = fn (%var_12318: int16, %var_12319: Tensor[(1, 4, 15), int16], %var_12403: Tensor[(320), uint32], %var_12404: Tensor[(91), float64]) -> (Tensor[(1, 4, 15), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(1155), float64], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(91), float64], Tensor[(?, 4, 15), bool]) {
    %573 = cast(%var_12319, dtype="float32") /* ty=Tensor[(1, 4, 15), float32] */;
    %574 = cast(%var_12318, dtype="float32") /* ty=float32 */;
    %575 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %576 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
    %577 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %578 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %579 = @func_11243() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %580 = @func_9716() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %581 = cast(meta[relay.Constant][17] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %582 = reshape(%581, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %583 = @func_6824(%582) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
    %584 = %583.5;
    %585 = cast(meta[relay.Constant][17] /* ty=Tensor[(1155), float32] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
    %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(1), int32] */;
    %587 = cast(%584, dtype="float64") /* ty=Tensor[(1155), float64] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?), float64] */;
    %589 = @func_9983() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %590 = cast(%var_12403, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %591 = cast(%var_12403, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %592 = cast(%var_12404, dtype="float64") /* ty=Tensor[(91), float64] */;
    %593 = reshape(%590, newshape=[40, 8]) /* ty=Tensor[(40, 8), uint32] */;
    %594 = reshape(%591, newshape=[40, 8]) /* ty=Tensor[(40, 8), uint32] */;
    %595 = reshape(%592, newshape=[13, 7]) /* ty=Tensor[(13, 7), float64] */;
    %596 = @func_4392(%593, %594, %595) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(40, 8), uint8], Tensor[(40, 8), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(13, 7), float64], Tensor[(637), float64]) */;
    %597 = cast(%var_12319, dtype="float64") /* ty=Tensor[(1, 4, 15), float64] */;
    %598 = log10(%597) /* ty=Tensor[(1, 4, 15), float64] */;
    %599 = cast(%var_12318, dtype="int16") /* ty=int16 */;
    %600 = cast(%var_12319, dtype="int16") /* ty=Tensor[(1, 4, 15), int16] */;
    %601 = bitwise_and(%599, %600) /* ty=Tensor[(1, 4, 15), int16] */;
    %602 = cast(%601, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
    %603 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %604 = cast(%598, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %606 = floor_mod(%573, %574) /* ty=Tensor[(1, 4, 15), float32] */;
    %607 = %575.0;
    %608 = %576.1;
    %609 = %577.0;
    %610 = %578.0;
    %611 = %579.0;
    %612 = %580.0;
    %613 = subtract(%587, %588) /* ty=Tensor[(1155), float64] */;
    %614 = %589.1;
    %615 = %596.1;
    %616 = equal(%604, %605) /* ty=Tensor[(?, 4, 15), bool] */;
    (%606, %607, %608, %609, %610, %611, %612, %613, %614, %615, %var_12403, %var_12404, %616)
  };
  %617(%var_12453, %var_12454, %var_12455, %var_12456) /* ty=(Tensor[(1, 4, 15), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(1155), float64], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(91), float64], Tensor[(?, 4, 15), bool]) */
}

def @func_1277() -> (Tensor[(13, 9, 12), float32],) {
  %619 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %618 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    (%618,)
  };
  %619() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_7907() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
  @func_7905() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */
}

def @func_2449() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %625 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
    %620 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %621 = @func_1597() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32) */;
    %622 = %620.0;
    %623 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    %624 = %621.3;
    (%622, %623, %624)
  };
  %625() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */
}

def @func_6824(%var_6803: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %626 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %627 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %628 = reshape(%627, newshape=[]) /* ty=int32 */;
  %629 = @func_475(%628) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %630 = cast(%var_6803, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %631 = reshape(%630, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %632 = @func_3252(%631) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %633 = %626.0;
  %634 = %629.5;
  %635 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %636 = %632.2;
  (%633, %634, -8 /* ty=int32 */, %635, %636, %var_6803)
}

def @func_8603() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %637 = @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %638 = %637.0;
  %639 = @func_1837() /* ty=Tensor[(13, 9, 12), float32] */;
  (%638, %639)
}

def @func_1358(%var_1349: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %640 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %641 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %643 = cast(%var_1349, dtype="float64") /* ty=Tensor[(91), float64] */;
  %644 = cast(meta[relay.Constant][18] /* ty=Tensor[(91, 7), float64] */, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
  %645 = reshape(%643, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %646 = reshape(%644, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %647 = @func_709(%645, %646) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %648 = %640.0;
  %649 = erf(%642) /* ty=Tensor[(13, 9, 12), float64] */;
  %650 = %647.2;
  (%648, %649, %650, %var_1349, meta[relay.Constant][18] /* ty=Tensor[(91, 7), float64] */)
}

def @func_10891() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) {
  %651 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %652 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %653 = %651.0;
  %654 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %655 = %652.2;
  (%653, %654, %655)
}

def @func_9673() -> (Tensor[(13, 9, 12), float32],) {
  %658 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %656 = @func_7101() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %657 = %656.0;
    (%657,)
  };
  %658() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_8605() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_8603() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_15575() -> (Tensor[(637), float64],) {
  %661 = fn () -> (Tensor[(637), float64],) {
    %659 = @func_15289() /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) */;
    %660 = %659.0;
    (%660,)
  };
  %661() /* ty=(Tensor[(637), float64],) */
}

def @func_15180() -> Tensor[(13, 9, 12), float32] {
  @func_15178() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_1838() -> Tensor[(13, 9, 12), float32] {
  %662 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_560() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %662() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_7432() -> (Tensor[(13, 9, 12), float32],) {
  %663 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %664 = %663.0;
  (%664,)
}

def @func_14086(%var_14051: Tensor[(9, 9, 3), float64], %var_14063: Tensor[(91), float64]) -> (Tensor[(9, 9, 3), float64], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %665 = cast(%var_14051, dtype="float64") /* ty=Tensor[(9, 9, 3), float64] */;
  %666 = cast(%var_14063, dtype="float64") /* ty=Tensor[(91), float64] */;
  %667 = reshape(%666, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %668 = @func_1358(%667) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */;
  %669 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %670 = @func_7249() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %671 = atanh(%665) /* ty=Tensor[(9, 9, 3), float64] */;
  %672 = %668.1;
  %673 = %669.0;
  %674 = %670.1;
  (%671, %672, %var_14063, %673, %674)
}

def @func_6560() -> Tensor[(13, 9, 12), float32] {
  %675 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_3139() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %675() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_12122() -> (Tensor[(13, 9, 12), float32],) {
  %678 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %676 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %677 = %676.3;
    (%677,)
  };
  %678() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_2027(%var_2025: Tensor[(91), float64], %var_2026: Tensor[(637, 1), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637, 1), float64]) {
  @func_2023(%var_2025, %var_2026) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637, 1), float64]) */
}

def @func_14770() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) {
  @func_14768() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) */
}

def @func_16261() -> Tensor[(13, 9, 12), bool] {
  %679 = @func_5130() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %679.0
}

def @func_14748() -> Tensor[(13, 9, 12), float32] {
  @func_14746() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_16499(%var_16498: Tensor[(5, 30), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(50), float32], Tensor[(10, 5, 30), float64], Tensor[(13, 9, 12), bool]) {
  %694 = fn (%var_16462: Tensor[(5, 30), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(50), float32], Tensor[(10, 5, 30), float64], Tensor[(13, 9, 12), bool]) {
    %680 = @func_14852() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %681 = cast(meta[relay.Constant][19] /* ty=Tensor[(50), int32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %682 = cast(meta[relay.Constant][19] /* ty=Tensor[(50), int32] */, dtype="int32") /* ty=Tensor[(50), int32] */;
    %683 = cast(%var_16462, dtype="int32") /* ty=Tensor[(5, 30), int32] */;
    %684 = reshape(%682, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), int32] */;
    %685 = reshape(%683, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), int32] */;
    %686 = @func_7336(%684, %685) /* ty=(Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) */;
    %687 = %686.3;
    %688 = cast(%var_16462, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
    %689 = cast(%687, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
    %690 = %680.0;
    %691 = sigmoid(%681) /* ty=Tensor[(50), float32] */;
    %692 = power(%688, %689) /* ty=Tensor[(10, 5, 30), float64] */;
    %693 = @func_10143() /* ty=Tensor[(13, 9, 12), bool] */;
    (%690, %691, %692, %693)
  };
  %694(%var_16498) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(50), float32], Tensor[(10, 5, 30), float64], Tensor[(13, 9, 12), bool]) */
}

def @func_5130() -> (Tensor[(13, 9, 12), bool],) {
  %695 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %696 = %695.0;
  (%696,)
}

def @func_15877() -> (Tensor[(105), int64],) {
  %699 = fn () -> (Tensor[(105), int64],) {
    %697 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
    %698 = %697.4;
    (%698,)
  };
  %699() /* ty=(Tensor[(105), int64],) */
}

def @func_8149() -> (Tensor[(13, 9, 12), bool],) {
  %702 = fn () -> (Tensor[(13, 9, 12), bool],) {
    %700 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
    %701 = %700.0;
    (%701,)
  };
  %702() /* ty=(Tensor[(13, 9, 12), bool],) */
}

def @func_19453(%var_19451: Tensor[(8, 15, 5), float32], %var_19452: Tensor[(8, 15, 5), float32]) -> (Tensor[(8, 15, 5), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %712 = fn (%var_19439: Tensor[(8, 15, 5), float32], %var_19440: Tensor[(8, 15, 5), float32]) -> (Tensor[(8, 15, 5), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %703 = cast(%var_19440, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
    %704 = shape_of(%var_19439, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%var_19439, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %707 = @func_17352() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */;
    %708 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %709 = mod(%705, %706) /* ty=Tensor[(8, 15, 5), float32] */;
    %710 = %707.0;
    %711 = %708.0;
    (%709, %710, %711)
  };
  %712(%var_19451, %var_19452) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4089() -> Tensor[(13, 9, 12), float32] {
  %713 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %713.0
}

def @func_14470() -> int32 {
  %715 = fn () -> int32 {
    %714 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
    %714.1
  };
  %715() /* ty=int32 */
}

def @func_13201() -> Tensor[(?, 637), uint16] {
  @func_13199() /* ty=Tensor[(?, 637), uint16] */
}

def @func_16263() -> Tensor[(13, 9, 12), bool] {
  @func_16261() /* ty=Tensor[(13, 9, 12), bool] */
}

def @func_16662() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %724 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %716 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
    %717 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %718 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
    %719 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %720 = %716.0;
    %721 = %717.0;
    %722 = %718.0;
    %723 = %719.0;
    (%720, %721, %722, %723)
  };
  %724() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17354() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
  @func_17352() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */
}

def @func_5852() -> (Tensor[(13, 9, 12), float32], int32) {
  @func_5850() /* ty=(Tensor[(13, 9, 12), float32], int32) */
}

def @func_1729() -> (Tensor[(13, 9, 12), float32],) {
  %727 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %725 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %726 = %725.0;
    (%726,)
  };
  %727() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_8255() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %728 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %729 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %730 = %728.0;
  %731 = %729.0;
  (%730, %731)
}

def @func_4091() -> Tensor[(13, 9, 12), float32] {
  @func_4089() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_8222() -> Tensor[(13, 9, 12), float32] {
  %732 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_5925() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %732() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_9813() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_9811() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17046() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %733 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %734 = @func_16261() /* ty=Tensor[(13, 9, 12), bool] */;
  %735 = %733.0;
  (%734, %735)
}

def @func_17158() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_17156() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17718() -> Tensor[(13, 9, 12), float32] {
  %736 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_4089() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %736() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5132() -> (Tensor[(13, 9, 12), bool],) {
  @func_5130() /* ty=(Tensor[(13, 9, 12), bool],) */
}

def @func_720() -> Tensor[(13, 9, 12), float32] {
  @func_718() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_561() -> Tensor[(13, 9, 12), float32] {
  %737 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_294() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %737() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_9283() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_9281() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4722() -> (Tensor[(13, 9, 12), float32], int32) {
  %738 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %739 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %740 = %738.0;
  %741 = %739.1;
  (%740, %741)
}

def @main(%var_19670: Tensor[(2, 12, 15), float32]) -> Tensor[(2, 12, 15), float32] {
  %742 = cast(%var_19670, dtype="float32") /* ty=Tensor[(2, 12, 15), float32] */;
  rsqrt(%742) /* ty=Tensor[(2, 12, 15), float32] */
}

def @func_17352() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
  %743 = @func_16661() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %744 = @func_9563() /* ty=Tensor[(7, 15, 6), float32] */;
  %745 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 15, 6), float32] */, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %749 = %743.1;
  %750 = power(%747, %748) /* ty=Tensor[(7, 15, 6), float64] */;
  (%749, %750)
}

def @func_1918() -> Tensor[(13, 9, 12), float32] {
  %752 = fn () -> Tensor[(13, 9, 12), float32] {
    %751 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %751.0
  };
  %752() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_14558() -> Tensor[(7, 15, 6), bool] {
  %753 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %753.0
}

def @func_9985() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_9983() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_18996() -> (Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
  %758 = fn () -> (Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
    %754 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
    %755 = @func_14004() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
    %756 = %754.0;
    %757 = %755.2;
    (%756, %757)
  };
  %758() /* ty=(Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */
}

def @func_771() -> (Tensor[(13, 9, 12), float32],) {
  %761 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %759 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3382() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %766 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %762 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %763 = %762.0;
    %764 = @func_3139() /* ty=Tensor[(13, 9, 12), float32] */;
    %765 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    (%763, %764, %765)
  };
  %766() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_15582() -> Tensor[(77, 15), float32] {
  @func_15580() /* ty=Tensor[(77, 15), float32] */
}

def @func_6827(%var_6825: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  @func_6824(%var_6825) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */
}

def @func_10923() -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) {
  %773 = fn () -> (Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) {
    %767 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
    %768 = cast(meta[relay.Constant][21] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
    %769 = reshape(%768, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %770 = @func_6824(%769) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
    %771 = %767.0;
    %772 = %770.3;
    (%771, %772, meta[relay.Constant][21] /* ty=Tensor[(77, 15), float32] */)
  };
  %773() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) */
}

def @func_12486() -> Tensor[(13, 9, 12), float32] {
  %775 = fn () -> Tensor[(13, 9, 12), float32] {
    %774 = @func_6056() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %774.0
  };
  %775() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_12758(%var_12756: Tensor[(91), float64], %var_12757: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) {
  %805 = fn (%var_12723: Tensor[(91), float64], %var_12724: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) {
    %776 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
    %777 = @func_7495() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
    %778 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
    %779 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %780 = @func_12517() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %781 = cast(%var_12723, dtype="float64") /* ty=Tensor[(91), float64] */;
    %782 = cast(%var_12724, dtype="float64") /* ty=Tensor[(637), float64] */;
    %783 = cast(meta[relay.Constant][22] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %784 = reshape(%781, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %785 = reshape(%782, newshape=[637]) /* ty=Tensor[(637), float64] */;
    %786 = reshape(%783, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %787 = @func_8555(%784, %785, %786) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) */;
    %788 = cast(meta[relay.Constant][23] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
    %789 = cast(%var_12724, dtype="float64") /* ty=Tensor[(637), float64] */;
    %790 = reshape(%788, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), float64] */;
    %791 = reshape(%789, newshape=[91, 7]) /* ty=Tensor[(91, 7), float64] */;
    %792 = @func_8392(%790, %791) /* ty=(Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */;
    %793 = @func_10584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), bool]) */;
    %794 = %776.1;
    %795 = %777.1;
    %796 = %778.0;
    %797 = %779.0;
    %798 = @func_11696() /* ty=Tensor[(13, 9, 12), float32] */;
    %799 = %780.0;
    %800 = @func_11363() /* ty=Tensor[(13, 9, 12), float32] */;
    %801 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
    %802 = %787.0;
    %803 = %792.1;
    %804 = %793.0;
    (%794, %795, %796, %797, %798, %799, %800, %801, %802, %var_12723, %var_12724, meta[relay.Constant][22] /* ty=Tensor[(1155), float32] */, %803, meta[relay.Constant][23] /* ty=Tensor[(90, 1), float64] */, %804)
  };
  %805(%var_12756, %var_12757) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64], Tensor[(1155), float32], Tensor[(13, 7, 7), float64], Tensor[(90, 1), float64], Tensor[(13, 9, 12), float32]) */
}

def @func_9086() -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %806 = @func_8934() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %807 = @func_5734() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %808 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %809 = @func_8694() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %810 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %811 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %812 = %806.0;
  %813 = %807.1;
  %814 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  %815 = %808.1;
  %816 = %809.0;
  %817 = %810.1;
  %818 = @func_5925() /* ty=Tensor[(13, 9, 12), float32] */;
  %819 = %811.1;
  %820 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %821 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  (%812, %813, %814, %815, %816, %817, %818, %819, %820, %821)
}

def @func_7251() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_7249() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_8936() -> (Tensor[(13, 9, 12), float32],) {
  @func_8934() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_15566() -> Tensor[(13, 9, 12), float32] {
  @func_6559() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_818(%var_816: Tensor[(13, 9, 12), float32]) -> (Tensor[(13, 9, 12), int16],) {
  @func_815(%var_816) /* ty=(Tensor[(13, 9, 12), int16],) */
}

def @func_478(%var_476: int32) -> (Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_475(%var_476) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4585() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %824 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %822 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
    %823 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_6344() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_6342() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_3803() -> (Tensor[(13, 9, 12), float32],) {
  %825 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %826 = %825.0;
  (%826,)
}

def @func_56(%var_54: Tensor[(13, 1, 7), float64], %var_55: Tensor[(13, 7, 7), float64]) -> (Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) {
  %833 = fn (%var_29: Tensor[(13, 1, 7), float64], %var_30: Tensor[(13, 7, 7), float64]) -> (Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) {
    %827 = cast(%var_29, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
    %828 = cast(%var_30, dtype="float64") /* ty=Tensor[(13, 7, 7), float64] */;
    %829 = cast(%var_30, dtype="float32") /* ty=Tensor[(13, 7, 7), float32] */;
    %830 = cast(%var_29, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
    %831 = power(%827, %828) /* ty=Tensor[(13, 7, 7), float64] */;
    %832 = add(%829, %830) /* ty=Tensor[(13, 7, 7), float32] */;
    (%831, %832)
  };
  %833(%var_54, %var_55) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */
}

def @func_13199() -> Tensor[(?, 637), uint16] {
  %834 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
  %834.0
}

def @func_13613() -> (Tensor[(11, 637), float32], Tensor[(11, 637), float32]) {
  %835 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(?, 637), float32] */;
  %837 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 637), uint16] */, dtype="float32") /* ty=Tensor[(11, 637), float32] */;
  %838 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 637), uint16] */, dtype="float32") /* ty=Tensor[(11, 637), float32] */;
  %839 = floor_mod(%836, %837) /* ty=Tensor[(11, 637), float32] */;
  %840 = atanh(%838) /* ty=Tensor[(11, 637), float32] */;
  (%839, %840)
}

def @func_19205(%var_19185: float32) -> (Tensor[(7, 11, 5), float32], Tensor[(77, 15), float32]) {
  %841 = cast(%var_19185, dtype="float32") /* ty=float32 */;
  %842 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  %843 = power(%841, %842) /* ty=Tensor[(7, 11, 5), float32] */;
  %844 = @func_15580() /* ty=Tensor[(77, 15), float32] */;
  (%843, %844)
}

def @func_18731() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %845 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %846 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %847 = %845.1;
  %848 = %846.0;
  %849 = @func_14049() /* ty=Tensor[(13, 9, 12), float32] */;
  (%847, %848, %849)
}

def @func_2644() -> (Tensor[(13, 9, 12), float32],) {
  %850 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %851 = %850.0;
  (%851,)
}

def @func_6714() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %863 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %852 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %853 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %854 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
    %855 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %856 = %852.0;
    %857 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    %858 = %853.0;
    %859 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
    %860 = %854.0;
    %861 = %855.0;
    %862 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
    (%856, %857, %858, %859, %860, %861, %862)
  };
  %863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4865() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */
}

def @func_12609() -> Tensor[(13, 9, 12), float32] {
  %864 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_946() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %864() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_9658() -> (Tensor[(13, 9, 12), float32],) {
  %867 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %865 = @func_4300() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
    %866 = %865.1;
    (%866,)
  };
  %867() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_7696() -> (Tensor[(?, 637), uint16],) {
  @func_7694() /* ty=(Tensor[(?, 637), uint16],) */
}

def @func_13506() -> (Tensor[(13, 9, 12), float32],) {
  %868 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %869 = %868.5;
  (%869,)
}

def @func_5617() -> Tensor[(13, 9, 12), float32] {
  @func_5615() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_9950(%var_9947: Tensor[(8, 11, 12), float32], %var_9948: Tensor[(8, 11, 12), float32], %var_9949: Tensor[(726), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
  %884 = fn (%var_9909: Tensor[(8, 11, 12), float32], %var_9915: Tensor[(8, 11, 12), float32], %var_9943: Tensor[(726), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
    %870 = cast(%var_9909, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
    %871 = atanh(%870) /* ty=Tensor[(8, 11, 12), float32] */;
    %872 = cast(%var_9915, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
    %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %874 = cast(%871, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
    %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %876 = cast(%var_9909, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
    %877 = cast(%var_9915, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
    %878 = cast(%var_9943, dtype="int8") /* ty=Tensor[(726), int8] */;
    %879 = reshape(%878, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), int8] */;
    %880 = floor_divide(%874, %875) /* ty=Tensor[(8, 11, 12), float64] */;
    %881 = cos(%876) /* ty=Tensor[(8, 11, 12), float32] */;
    %882 = sigmoid(%877) /* ty=Tensor[(8, 11, 12), float64] */;
    %883 = @func_3461(%879) /* ty=Tensor[(11, 6, 11), int8] */;
    (%880, %881, %882, %883, %var_9943)
  };
  %884(%var_9947, %var_9948, %var_9949) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */
}

def @func_12214() -> Tensor[(13, 9, 12), float32] {
  %886 = fn () -> Tensor[(13, 9, 12), float32] {
    %885 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %885.0
  };
  %886() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_611(%var_609: Tensor[(91), float64], %var_610: Tensor[(1, 637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(1, 637), float64]) {
  @func_607(%var_609, %var_610) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(1, 637), float64]) */
}

def @func_3189(%var_3188: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %893 = fn (%var_3185: Tensor[(1155), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
    %887 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %888 = cast(%var_3185, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %889 = reshape(%888, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
    %890 = @func_1955(%889) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(15, 7, 11), float32]) */;
    %891 = %887.1;
    %892 = %890.0;
    (%891, %892, %var_3185)
  };
  %893(%var_3188) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */
}

def @func_4300() -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
  %894 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %895 = %894.3;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %897 = cosh(%896) /* ty=Tensor[(1, 637), float32] */;
  %898 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  (%897, %898)
}

def @func_15970() -> (Tensor[(13, 9, 12), float32],) {
  %899 = @func_15755() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %900 = %899.0;
  (%900,)
}

def @func_15544() -> (Tensor[(13, 9, 12), int64],) {
  %903 = fn () -> (Tensor[(13, 9, 12), int64],) {
    %901 = @func_15326() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */;
    %902 = %901.1;
    (%902,)
  };
  %903() /* ty=(Tensor[(13, 9, 12), int64],) */
}

def @func_2266(%var_2254: Tensor[(13, 9, 12), float32]) -> Tensor[(13, 9, 12), int64] {
  %904 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %905 = %904.0;
  %906 = cast(%var_2254, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%905, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%908, %909) /* ty=Tensor[(13, 9, 12), int64] */
}

def @func_10056() -> (Tensor[(13, 9, 12), float32],) {
  @func_10054() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_9604(%var_9603: Tensor[(9, 16, 9), float64]) -> (Tensor[(9, 16, 9), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 637), float64]) {
  %918 = fn (%var_9572: Tensor[(9, 16, 9), float64]) -> (Tensor[(9, 16, 9), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 637), float64]) {
    %910 = cast(%var_9572, dtype="float64") /* ty=Tensor[(9, 16, 9), float64] */;
    %911 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %912 = @func_1634() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %913 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
    %914 = atanh(%910) /* ty=Tensor[(9, 16, 9), float64] */;
    %915 = %911.0;
    %916 = %912.0;
    %917 = %913.3;
    (%914, %915, %916, %917)
  };
  %918(%var_9603) /* ty=(Tensor[(9, 16, 9), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 637), float64]) */
}

def @func_3139() -> Tensor[(13, 9, 12), float32] {
  %919 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %919.0
}

def @func_4007() -> Tensor[(13, 9, 12), bool] {
  @func_4005() /* ty=Tensor[(13, 9, 12), bool] */
}

def @func_4629() -> (Tensor[(13, 9, 12), float32],) {
  @func_4627() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_17099() -> (Tensor[(1404), float32], Tensor[(637), float64]) {
  %920 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %921 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
  %922 = %920.2;
  %923 = %921.0;
  (%922, %923)
}

def @func_948() -> Tensor[(13, 9, 12), float32] {
  @func_946() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_15328() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  @func_15326() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */
}

def @func_11474(%var_11473: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
  %931 = fn (%var_11469: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) {
    %924 = @func_9657() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %925 = cast(%var_11469, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %926 = cast(%var_11469, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %927 = reshape(%925, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %928 = reshape(%926, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
    %929 = %924.0;
    %930 = @func_1247(%927, %928) /* ty=Tensor[(16, 4, 5), uint32] */;
    (%929, %930, %var_11469)
  };
  %931(%var_11473) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) */
}

def @func_16414(%var_16410: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32],) {
  %932 = cast(%var_16410, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %933 = asinh(%932) /* ty=Tensor[(5, 4, 3), float32] */;
  (%933,)
}

def @func_6342() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %934 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
  %935 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %936 = reshape(%935, newshape=[]) /* ty=int32 */;
  %937 = @func_588(%936) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %938 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %939 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %940 = %934.1;
  %941 = %937.1;
  %942 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
  %943 = %938.0;
  %944 = %939.0;
  (%940, %941, -4 /* ty=int32 */, %942, %943, %944)
}

def @func_8695() -> (Tensor[(13, 9, 12), float32],) {
  %947 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %945 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %946 = %945.0;
    (%946,)
  };
  %947() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_13337() -> (Tensor[(13, 9, 12), int16],) {
  %950 = fn () -> (Tensor[(13, 9, 12), int16],) {
    %948 = @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */;
    %949 = %948.0;
    (%949,)
  };
  %950() /* ty=(Tensor[(13, 9, 12), int16],) */
}

def @func_18470() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(105), int64]) {
  %958 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(105), int64]) {
    %951 = @func_10486() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %952 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %953 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
    %954 = @func_16261() /* ty=Tensor[(13, 9, 12), bool] */;
    %955 = %951.2;
    %956 = %952.1;
    %957 = %953.4;
    (%954, %955, %956, %957)
  };
  %958() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(105), int64]) */
}

def @func_815(%var_806: Tensor[(13, 9, 12), float32]) -> (Tensor[(13, 9, 12), int16],) {
  %959 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %960 = %959.0;
  %961 = cast(%var_806, dtype="int16") /* ty=Tensor[(13, 9, 12), int16] */;
  %962 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%960, dtype="int16") /* ty=Tensor[(13, 9, 12), int16] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %965 = right_shift(%963, %964) /* ty=Tensor[(13, 9, 12), int16] */;
  (%965,)
}

def @func_1251(%var_1249: Tensor[(16, 4, 5), uint32], %var_1250: Tensor[(16, 4, 5), uint32]) -> Tensor[(16, 4, 5), uint32] {
  @func_1247(%var_1249, %var_1250) /* ty=Tensor[(16, 4, 5), uint32] */
}

def @func_6531() -> (Tensor[(637), float64], int32) {
  %970 = fn () -> (Tensor[(637), float64], int32) {
    %966 = @func_3753() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
    %967 = @func_4166() /* ty=(int32,) */;
    %968 = %966.3;
    %969 = %967.0;
    (%968, %969)
  };
  %970() /* ty=(Tensor[(637), float64], int32) */
}

def @func_7417() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 91), float64], Tensor[(637), float64]) {
  %971 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
  %972 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 91), float64] */, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %973 = cast(meta[relay.Constant][27] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %974 = reshape(%972, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %975 = reshape(%973, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %976 = @func_709(%974, %975) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %977 = cast(meta[relay.Constant][27] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %978 = %971.0;
  %979 = %976.0;
  %980 = sinh(%977) /* ty=Tensor[(637), float64] */;
  (%978, %979, meta[relay.Constant][26] /* ty=Tensor[(1, 91), float64] */, %980)
}

def @func_3447() -> (Tensor[(13, 9, 12), float32],) {
  %982 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %981 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    (%981,)
  };
  %982() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3631() -> (Tensor[(13, 9, 12), float32],) {
  %985 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %983 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_8849() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %990 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %986 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %987 = @func_3427() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %988 = %986.2;
    %989 = %987.0;
    (%988, %989)
  };
  %990() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_14908() -> (Tensor[(13, 9, 12), float32],) {
  %992 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %991 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
    (%991,)
  };
  %992() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3753() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(637), float64]) {
  %993 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
  %994 = cast(meta[relay.Constant][28] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %995 = cast(meta[relay.Constant][29] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
  %996 = reshape(%994, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %997 = reshape(%995, newshape=[13, 49]) /* ty=Tensor[(13, 49), float64] */;
  %998 = @func_709(%996, %997) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */;
  %999 = %993.0;
  %1000 = %998.0;
  (%999, %1000, meta[relay.Constant][28] /* ty=Tensor[(91), float64] */, meta[relay.Constant][29] /* ty=Tensor[(637), float64] */)
}

def @func_15713() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(637, 1), float64]) {
  %1001 = @func_7841() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32]) */;
  %1002 = cast(meta[relay.Constant][30] /* ty=Tensor[(637, 1), float64] */, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %1003 = reshape(%1002, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1004 = @func_10095(%1003) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %1005 = %1001.2;
  %1006 = %1004.1;
  (%1005, %1006, meta[relay.Constant][30] /* ty=Tensor[(637, 1), float64] */)
}

def @func_7217() -> (Tensor[(13, 9, 12), float32],) {
  @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_12861() -> (Tensor[(13, 9, 12), float32],) {
  @func_12859() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_10835() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
  %1007 = @func_9716() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1008 = cast(meta[relay.Constant][31] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
  %1009 = reshape(%1008, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
  %1010 = @func_8221() /* ty=Tensor[(13, 9, 12), float32] */;
  %1011 = %1007.1;
  %1012 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %1013 = @func_1612(%1009) /* ty=Tensor[(7, 15, 6), bool] */;
  (%1010, %1011, %1012, %1013, meta[relay.Constant][31] /* ty=Tensor[(105), int64] */)
}

def @func_1478() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_5925() -> Tensor[(13, 9, 12), float32] {
  @func_4026() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_13036() -> (Tensor[(13, 9, 12), float32],) {
  %1015 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1014 = @func_12608() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1014,)
  };
  %1015() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_8465() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1016 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1017 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1018 = %1016.0;
  %1019 = %1017.1;
  (%1018, %1019)
}

def @func_4322() -> (Tensor[(13, 9, 12), float32],) {
  %1020 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1021 = %1020.1;
  (%1021,)
}

def @func_14513() -> (Tensor[(13, 9, 12), float32],) {
  %1024 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1022 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1023 = %1022.0;
    (%1023,)
  };
  %1024() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_13615() -> (Tensor[(11, 637), float32], Tensor[(11, 637), float32]) {
  @func_13613() /* ty=(Tensor[(11, 637), float32], Tensor[(11, 637), float32]) */
}

def @func_15910() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1025 = @func_10584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), bool]) */;
  %1026 = @func_2591() /* ty=Tensor[(13, 9, 12), float32] */;
  %1027 = %1025.0;
  (%1026, %1027)
}

def @func_17929() -> (Tensor[(13, 9, 12), float32],) {
  %1028 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1029 = %1028.0;
  (%1029,)
}

def @func_3915(%var_3913: Tensor[(504), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32], Tensor[(504), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_3912(%var_3913) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32], Tensor[(504), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_5676(%var_5675: int32) -> (Tensor[(13, 9, 12), float32], int32, int32) {
  %1036 = fn (%var_5662: int32) -> (Tensor[(13, 9, 12), float32], int32, int32) {
    %1030 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1031 = cast(%var_5662, dtype="int32") /* ty=int32 */;
    %1032 = reshape(%1031, newshape=[]) /* ty=int32 */;
    %1033 = @func_588(%1032) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %1034 = %1030.0;
    %1035 = %1033.3;
    (%1034, %1035, %var_5662)
  };
  %1036(%var_5675) /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */
}

def @func_4302() -> (Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) {
  @func_4300() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_7163(%var_7162: Tensor[(15, 105), float32]) -> (Tensor[(15, 105), bool],) {
  %1042 = fn (%var_7154: Tensor[(15, 105), float32]) -> (Tensor[(15, 105), bool],) {
    %1037 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
    %1038 = %1037.3;
    %1039 = cast(%1038, dtype="bool") /* ty=Tensor[(1, 105), bool] */;
    %1040 = cast(%var_7154, dtype="bool") /* ty=Tensor[(15, 105), bool] */;
    %1041 = equal(%1039, %1040) /* ty=Tensor[(15, 105), bool] */;
    (%1041,)
  };
  %1042(%var_7162) /* ty=(Tensor[(15, 105), bool],) */
}

def @func_2570() -> Tensor[(13, 9, 12), float32] {
  %1044 = fn () -> Tensor[(13, 9, 12), float32] {
    %1043 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1043.0
  };
  %1044() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_6502() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1045 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1046 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %1047 = %1045.5;
  %1048 = %1046.0;
  (%1047, %1048)
}

def @func_5176() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1053 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1049 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1050 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1051 = %1049.0;
    %1052 = %1050.0;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_588(%var_586: int32) -> (Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %1054 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %1055 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1056 = cast(%var_586, dtype="int32") /* ty=int32 */;
  %1057 = reshape(%1056, newshape=[]) /* ty=int32 */;
  %1058 = @func_475(%1057) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1059 = acos(%1054) /* ty=Tensor[(7, 16, 6), float32] */;
  %1060 = %1055.0;
  %1061 = %1058.1;
  (%1059, %1060, %1061, %var_586)
}

def @func_11982(%var_11940: int32) -> (Tensor[(1404), int8], int32, int32, Tensor[(1404), float32], Tensor[(1404), float64]) {
  %1062 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %1063 = %1062.2;
  %1064 = cast(meta[relay.Constant][33] /* ty=Tensor[(1404), float32] */, dtype="int8") /* ty=Tensor[(1404), int8] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1066 = cast(%1063, dtype="int8") /* ty=Tensor[(1404), int8] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1068 = cast(%var_11940, dtype="int32") /* ty=int32 */;
  %1069 = reshape(%1068, newshape=[]) /* ty=int32 */;
  %1070 = @func_588(%1069) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
  %1071 = cast(%1063, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %1072 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(1404), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1073 = cast(meta[relay.Constant][33] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1075 = cast(%1063, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %1076 = bitwise_and(%1066, %1067) /* ty=Tensor[(1404), int8] */;
  %1077 = %1070.3;
  %1078 = power(%1073, %1074) /* ty=Tensor[(1404), float32] */;
  %1079 = tan(%1075) /* ty=Tensor[(1404), float64] */;
  (%1076, %1077, %var_11940, %1078, %1079)
}

def @func_15050() -> Tensor[(13, 9, 12), float32] {
  @func_15048() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_3429() -> (Tensor[(13, 9, 12), float32],) {
  @func_3427() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_11985(%var_11983: int32) -> (Tensor[(1404), int8], int32, int32, Tensor[(1404), float32], Tensor[(1404), float64]) {
  @func_11982(%var_11983) /* ty=(Tensor[(1404), int8], int32, int32, Tensor[(1404), float32], Tensor[(1404), float64]) */
}

def @func_18001() -> Tensor[(637), float64] {
  %1081 = fn () -> Tensor[(637), float64] {
    %1080 = @func_15289() /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(637), float64] */
}

def @func_13375() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
  %1088 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) {
    %1082 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %1083 = cast(meta[relay.Constant][34] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %1084 = reshape(%1083, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %1085 = @func_6824(%1084) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */;
    %1086 = %1082.2;
    %1087 = %1085.4;
    (%1086, %1087, meta[relay.Constant][34] /* ty=Tensor[(1155), float32] */)
  };
  %1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32]) */
}

def @func_5219() -> (Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) {
  %1099 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) {
    %1089 = @func_3602() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %1090 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 105), int64] */, dtype="int64") /* ty=Tensor[(1, 105), int64] */;
    %1091 = reshape(%1090, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
    %1092 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 105), int64] */, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
    %1093 = atan(%1092) /* ty=Tensor[(1, 105), float32] */;
    %1094 = cast(%1093, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
    %1095 = %1089.0;
    %1096 = @func_1612(%1091) /* ty=Tensor[(7, 15, 6), bool] */;
    %1097 = @func_4005() /* ty=Tensor[(13, 9, 12), bool] */;
    %1098 = sinh(%1094) /* ty=Tensor[(1, 105), float32] */;
    (%1095, %1096, %1097, %1098)
  };
  %1099() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */
}

def @func_11143() -> (Tensor[(13, 9, 12), float32],) {
  %1102 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1100 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1101 = %1100.1;
    (%1101,)
  };
  %1102() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_17048() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  @func_17046() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_913() -> (Tensor[(13, 9, 12), float32],) {
  %1105 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1103 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1104 = %1103.0;
    (%1104,)
  };
  %1105() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_14853() -> (Tensor[(13, 9, 12), float32],) {
  %1108 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1106 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1107 = %1106.0;
    (%1107,)
  };
  %1108() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_5735() -> (Tensor[(13, 9, 12), float32], int32) {
  %1113 = fn () -> (Tensor[(13, 9, 12), float32], int32) {
    %1109 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1110 = @func_4166() /* ty=(int32,) */;
    %1111 = %1109.0;
    %1112 = %1110.0;
    (%1111, %1112)
  };
  %1113() /* ty=(Tensor[(13, 9, 12), float32], int32) */
}

def @func_6956() -> (Tensor[(13, 9, 12), int16],) {
  %1114 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %1115 = %1114.1;
  (%1115,)
}

def @func_11707() -> (Tensor[(13, 9, 12), float32],) {
  %1116 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1117 = %1116.2;
  (%1117,)
}

def @func_8809() -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  %1122 = fn () -> (Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
    %1118 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
    %1119 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1120 = %1118.1;
    %1121 = %1119.0;
    (%1120, %1121)
  };
  %1122() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */
}

def @func_1476() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1123 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1124 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1125 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1126 = %1123.0;
  %1127 = %1124.0;
  %1128 = %1125.0;
  %1129 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1126, %1127, %1128, %1129)
}

def @func_7965() -> (Tensor[(13, 9, 12), float32],) {
  %1131 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1130 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1130,)
  };
  %1131() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_14658(%var_14657: Tensor[(50), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64], Tensor[(7, 15, 6), bool], Tensor[(150, 50), uint8]) {
  %1150 = fn (%var_14625: Tensor[(50), int32]) -> (Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64], Tensor[(7, 15, 6), bool], Tensor[(150, 50), uint8]) {
    %1132 = @func_9140() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) */;
    %1133 = cast(%var_14625, dtype="int32") /* ty=Tensor[(50), int32] */;
    %1134 = cast(meta[relay.Constant][36] /* ty=Tensor[(150, 1), int32] */, dtype="int32") /* ty=Tensor[(150, 1), int32] */;
    %1135 = reshape(%1133, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), int32] */;
    %1136 = reshape(%1134, newshape=[10, 5, 3]) /* ty=Tensor[(10, 5, 3), int32] */;
    %1137 = @func_7336(%1135, %1136) /* ty=(Tensor[(10, 5, 3), int32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64]) */;
    %1138 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
    %1139 = cast(%var_14625, dtype="int64") /* ty=Tensor[(50), int64] */;
    %1140 = cast(meta[relay.Constant][36] /* ty=Tensor[(150, 1), int32] */, dtype="int64") /* ty=Tensor[(150, 1), int64] */;
    %1141 = multiply(%1139, %1140) /* ty=Tensor[(150, 50), int64] */;
    %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(150, 50), float32] */;
    %1143 = sigmoid(%1142) /* ty=Tensor[(150, 50), float32] */;
    %1144 = cast(%1143, dtype="uint8") /* ty=Tensor[(150, 50), uint8] */;
    %1145 = cast(%var_14625, dtype="uint8") /* ty=Tensor[(50), uint8] */;
    %1146 = %1132.0;
    %1147 = %1137.3;
    %1148 = %1138.0;
    %1149 = minimum(%1144, %1145) /* ty=Tensor[(150, 50), uint8] */;
    (%1146, %1147, %1148, %1149)
  };
  %1150(%var_14657) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(10, 5, 1), float64], Tensor[(7, 15, 6), bool], Tensor[(150, 50), uint8]) */
}

def @func_18790() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_18788() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17880() -> Tensor[(13, 9, 12), float32] {
  %1152 = fn () -> Tensor[(13, 9, 12), float32] {
    %1151 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1151.0
  };
  %1152() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_6221() -> Tensor[(13, 9, 12), float32] {
  %1154 = fn () -> Tensor[(13, 9, 12), float32] {
    %1153 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1153.0
  };
  %1154() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_18553() -> (int32,) {
  @func_18551() /* ty=(int32,) */
}

def @func_19665(%var_19664: Tensor[(12, 637), uint16]) -> (Tensor[(12, 637), float32], Tensor[(12, 637), int64], Tensor[(13, 9, 12), float32], Tensor[(12, 637), float64]) {
  %1166 = fn (%var_19620: Tensor[(12, 637), uint16]) -> (Tensor[(12, 637), float32], Tensor[(12, 637), int64], Tensor[(13, 9, 12), float32], Tensor[(12, 637), float64]) {
    %1155 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
    %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(?, 637), float32] */;
    %1157 = cast(%var_19620, dtype="float32") /* ty=Tensor[(12, 637), float32] */;
    %1158 = cast(%1155, dtype="int64") /* ty=Tensor[(?, 637), int64] */;
    %1159 = cast(%var_19620, dtype="int64") /* ty=Tensor[(12, 637), int64] */;
    %1160 = cast(%var_19620, dtype="float64") /* ty=Tensor[(12, 637), float64] */;
    %1161 = cast(%1155, dtype="float64") /* ty=Tensor[(?, 637), float64] */;
    %1162 = power(%1156, %1157) /* ty=Tensor[(12, 637), float32] */;
    %1163 = bitwise_xor(%1158, %1159) /* ty=Tensor[(12, 637), int64] */;
    %1164 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
    %1165 = floor_divide(%1160, %1161) /* ty=Tensor[(12, 637), float64] */;
    (%1162, %1163, %1164, %1165)
  };
  %1166(%var_19664) /* ty=(Tensor[(12, 637), float32], Tensor[(12, 637), int64], Tensor[(13, 9, 12), float32], Tensor[(12, 637), float64]) */
}

def @func_1615(%var_1613: Tensor[(7, 15, 1), int64]) -> Tensor[(7, 15, 6), bool] {
  @func_1612(%var_1613) /* ty=Tensor[(7, 15, 6), bool] */
}

def @func_7985(%var_7983: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32],) {
  @func_7982(%var_7983) /* ty=(Tensor[(8, 13, 8), float32],) */
}

def @func_18733() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_18731() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17192(%var_17190: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(637), float64], Tensor[(637), float64]) {
  %1167 = @func_14733() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1168 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %1169 = cast(%var_17190, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1170 = reshape(%1169, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1171 = @func_10095(%1170) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */;
  %1172 = %1167.1;
  %1173 = @func_10515() /* ty=Tensor[(13, 9, 12), float32] */;
  %1174 = %1168.1;
  %1175 = %1171.3;
  (%1172, %1173, %1174, %1175, %var_17190)
}

def @func_14796(%var_14795: Tensor[(11, 3, 13), float64]) -> (Tensor[(11, 3, 13), float64], int32) {
  %1180 = fn (%var_14774: Tensor[(11, 3, 13), float64]) -> (Tensor[(11, 3, 13), float64], int32) {
    %1176 = cast(%var_14774, dtype="float64") /* ty=Tensor[(11, 3, 13), float64] */;
    %1177 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
    %1178 = sin(%1176) /* ty=Tensor[(11, 3, 13), float64] */;
    %1179 = %1177.1;
    (%1178, %1179)
  };
  %1180(%var_14795) /* ty=(Tensor[(11, 3, 13), float64], int32) */
}

def @func_17314() -> (Tensor[(13, 9, 12), float32],) {
  %1183 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1181 = @func_11746() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64], Tensor[(13, 9, 12), float32]) */;
    %1182 = %1181.2;
    (%1182,)
  };
  %1183() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_16003() -> (Tensor[(2, 637), uint32],) {
  %1184 = @func_13199() /* ty=Tensor[(?, 637), uint16] */;
  %1185 = cast(%1184, dtype="uint32") /* ty=Tensor[(?, 637), uint32] */;
  %1186 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 637), uint16] */, dtype="uint32") /* ty=Tensor[(2, 637), uint32] */;
  %1187 = bitwise_and(%1185, %1186) /* ty=Tensor[(2, 637), uint32] */;
  (%1187,)
}

def @func_3087() -> (int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) {
  %1193 = fn () -> (int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) {
    %1188 = @func_892() /* ty=(Tensor[(13, 9, 12), float32], int32, int32) */;
    %1189 = cast(meta[relay.Constant][38] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
    %1190 = reshape(%1189, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
    %1191 = %1188.1;
    %1192 = @func_2266(%1190) /* ty=Tensor[(13, 9, 12), int64] */;
    (%1191, %1192, meta[relay.Constant][38] /* ty=Tensor[(1404), float32] */)
  };
  %1193() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */
}

def @func_524(%var_522: Tensor[(91), float64], %var_523: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) {
  @func_520(%var_522, %var_523) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */
}

def @func_16973() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1199 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1194 = @func_4863() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
    %1195 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1196 = %1194.0;
    %1197 = @func_16857() /* ty=Tensor[(13, 9, 12), float32] */;
    %1198 = %1195.0;
    (%1196, %1197, %1198)
  };
  %1199() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_9563() -> Tensor[(7, 15, 6), float32] {
  %1200 = @func_7941() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1201 = %1200.1;
  %1202 = cast(%1201, dtype="float32") /* ty=Tensor[(7, 15, 6), float32] */;
  log(%1202) /* ty=Tensor[(7, 15, 6), float32] */
}

def @func_14090(%var_14088: Tensor[(9, 9, 3), float64], %var_14089: Tensor[(91), float64]) -> (Tensor[(9, 9, 3), float64], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_14086(%var_14088, %var_14089) /* ty=(Tensor[(9, 9, 3), float64], Tensor[(13, 9, 12), float64], Tensor[(91), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_2593() -> Tensor[(13, 9, 12), float32] {
  @func_2591() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_12968(%var_12966: Tensor[(1, 9, 3), int32]) -> (Tensor[(1, 9, 3), float64], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(637), float64]) {
  @func_12965(%var_12966) /* ty=(Tensor[(1, 9, 3), float64], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(637), float64]) */
}

def @func_7375() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  @func_7373() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */
}

def @func_8682() -> Tensor[(13, 9, 12), bool] {
  @func_8680() /* ty=Tensor[(13, 9, 12), bool] */
}

def @func_8883(%var_8879: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %1203 = cast(%var_8879, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1204 = cast(meta[relay.Constant][39] /* ty=Tensor[(91, 7), float64] */, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
  %1205 = reshape(%1203, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1206 = reshape(%1204, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %1207 = @func_53(%1205, %1206) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %1208 = @func_4089() /* ty=Tensor[(13, 9, 12), float32] */;
  %1209 = %1207.1;
  (%1208, %1209, %var_8879, meta[relay.Constant][39] /* ty=Tensor[(91, 7), float64] */)
}

def @func_10205() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) {
  @func_10203() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */
}

def @func_12543() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1210 = @func_3660() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1211 = @func_5457() /* ty=(Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), int16]) */;
  %1212 = %1210.0;
  %1213 = %1211.1;
  (%1212, %1213)
}

def @func_10586() -> (Tensor[(13, 9, 12), float32], Tensor[(91), bool]) {
  @func_10584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), bool]) */
}

def @func_712(%var_710: Tensor[(91), float64], %var_711: Tensor[(13, 49), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) {
  %1223 = fn (%var_695: Tensor[(91), float64], %var_696: Tensor[(13, 49), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) {
    %1214 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %1216 = cast(%var_695, dtype="float64") /* ty=Tensor[(91), float64] */;
    %1217 = cast(%var_696, dtype="float64") /* ty=Tensor[(13, 49), float64] */;
    %1218 = reshape(%1216, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
    %1219 = reshape(%1217, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
    %1220 = @func_53(%1218, %1219) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
    %1221 = sinh(%1215) /* ty=Tensor[(13, 9, 12), float32] */;
    %1222 = %1220.0;
    (%1221, %1222, %var_695, %var_696)
  };
  %1223(%var_710, %var_711) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(13, 49), float64]) */
}

def @func_7905() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) {
  %1224 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1225 = cast(meta[relay.Constant][40] /* ty=Tensor[(320), uint32] */, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %1226 = cast(meta[relay.Constant][40] /* ty=Tensor[(320), uint32] */, dtype="uint32") /* ty=Tensor[(320), uint32] */;
  %1227 = reshape(%1225, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1228 = reshape(%1226, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1229 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1230 = %1224.0;
  %1231 = @func_4026() /* ty=Tensor[(13, 9, 12), float32] */;
  %1232 = @func_1247(%1227, %1228) /* ty=Tensor[(16, 4, 5), uint32] */;
  %1233 = %1229.0;
  (%1230, %1231, %1232, meta[relay.Constant][40] /* ty=Tensor[(320), uint32] */, %1233)
}

def @func_13791() -> Tensor[(13, 9, 12), float32] {
  %1234 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1234.0
}

def @func_14378() -> Tensor[(13, 9, 12), float32] {
  %1236 = fn () -> Tensor[(13, 9, 12), float32] {
    %1235 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1235.0
  };
  %1236() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_15580() -> Tensor[(77, 15), float32] {
  %1237 = @func_10922() /* ty=(Tensor[(?, 637), uint16], Tensor[(13, 9, 12), float32], Tensor[(77, 15), float32]) */;
  %1237.2
}

def @func_14006() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  @func_14004() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */
}

def @func_18099() -> Tensor[(13, 9, 12), float32] {
  %1238 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_17554() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %1238() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_7645(%var_7644: Tensor[(16, 14, 5), float64]) -> (Tensor[(16, 14, 5), float32],) {
  %1243 = fn (%var_7635: Tensor[(16, 14, 5), float64]) -> (Tensor[(16, 14, 5), float32],) {
    %1239 = cast(%var_7635, dtype="float64") /* ty=Tensor[(16, 14, 5), float64] */;
    %1240 = asinh(%1239) /* ty=Tensor[(16, 14, 5), float64] */;
    %1241 = cast(%1240, dtype="float32") /* ty=Tensor[(16, 14, 5), float32] */;
    %1242 = log10(%1241) /* ty=Tensor[(16, 14, 5), float32] */;
    (%1242,)
  };
  %1243(%var_7644) /* ty=(Tensor[(16, 14, 5), float32],) */
}

def @func_6947() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1244 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1245 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1246 = %1244.1;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_18325() -> (Tensor[(13, 9, 12), float32],) {
  %1248 = @func_11142() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1249 = %1248.0;
  (%1249,)
}

def @func_10108() -> (Tensor[(16, 4, 5), uint32],) {
  %1252 = fn () -> (Tensor[(16, 4, 5), uint32],) {
    %1250 = @func_7905() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32]) */;
    %1251 = %1250.2;
    (%1251,)
  };
  %1252() /* ty=(Tensor[(16, 4, 5), uint32],) */
}

def @func_14768() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(10192), float32]) {
  %1253 = @func_14733() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1254 = cast(meta[relay.Constant][41] /* ty=Tensor[(10192), float32] */, dtype="float32") /* ty=Tensor[(10192), float32] */;
  %1255 = reshape(%1254, newshape=[16, 637]) /* ty=Tensor[(16, 637), float32] */;
  %1256 = @func_12897(%1255) /* ty=(Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) */;
  %1257 = %1253.1;
  %1258 = %1256.1;
  (%1257, %1258, meta[relay.Constant][41] /* ty=Tensor[(10192), float32] */)
}

def @func_5285() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
  %1268 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) {
    %1259 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1260 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %1261 = @func_5175() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1262 = %1261.0;
    %1263 = cast(%1262, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %1264 = reshape(%1263, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
    %1265 = %1259.1;
    %1266 = %1260.0;
    %1267 = @func_2266(%1264) /* ty=Tensor[(13, 9, 12), int64] */;
    (%1265, %1266, %1262, %1267)
  };
  %1268() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int64]) */
}

def @func_12899(%var_12898: Tensor[(16, 637), float32]) -> (Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) {
  %1276 = fn (%var_12882: Tensor[(16, 637), float32]) -> (Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) {
    %1269 = @func_11433() /* ty=(Tensor[(1, 637), float32], Tensor[(13, 9, 12), float32]) */;
    %1270 = %1269.0;
    %1271 = cast(%1270, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
    %1272 = cast(%var_12882, dtype="float32") /* ty=Tensor[(16, 637), float32] */;
    %1273 = @func_3620() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1274 = floor_divide(%1271, %1272) /* ty=Tensor[(16, 637), float32] */;
    %1275 = %1273.0;
    (%1274, %1275)
  };
  %1276(%var_12898) /* ty=(Tensor[(16, 637), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_2515() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1280 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1277 = @func_1476() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1278 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
    %1279 = %1277.2;
    (%1278, %1279)
  };
  %1280() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_5524() -> Tensor[(13, 9, 12), float32] {
  %1281 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_2838() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %1281() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_2619() -> (Tensor[(13, 9, 12), float32],) {
  %1284 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1282 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1283 = %1282.0;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_16934(%var_16931: int32, %var_16932: Tensor[(1056), float32], %var_16933: Tensor[(726), int8]) -> (Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1303 = fn (%var_16885: int32, %var_16905: Tensor[(1056), float32], %var_16906: Tensor[(726), int8]) -> (Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1285 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1286 = cast(%var_16885, dtype="int32") /* ty=int32 */;
    %1287 = reshape(%1286, newshape=[]) /* ty=int32 */;
    %1288 = @func_475(%1287) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1289 = cast(%var_16905, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %1290 = cast(%var_16905, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %1291 = cast(%var_16906, dtype="int8") /* ty=Tensor[(726), int8] */;
    %1292 = reshape(%1289, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
    %1293 = reshape(%1290, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
    %1294 = reshape(%1291, newshape=[726]) /* ty=Tensor[(726), int8] */;
    %1295 = @func_9946(%1292, %1293, %1294) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
    %1296 = @func_11707() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1297 = @func_11224() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1298 = %1285.0;
    %1299 = %1288.0;
    %1300 = %1295.3;
    %1301 = %1296.0;
    %1302 = %1297.1;
    (%1298, %1299, %var_16885, %1300, %var_16905, %var_16906, %1301, %1302)
  };
  %1303(%var_16931, %var_16932, %var_16933) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(5, 16, 10), bool], int32, Tensor[(11, 6, 11), int8], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_9618() -> Tensor[(13, 9, 12), float32] {
  %1304 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1304.0
}

def @func_4274(%var_4272: int64) -> (Tensor[(9, 14, 5), uint64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(9, 14, 5), int8]) {
  @func_4271(%var_4272) /* ty=(Tensor[(9, 14, 5), uint64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(9, 14, 5), int8]) */
}

def @func_13107() -> (Tensor[(13, 9, 12), float32],) {
  @func_13105() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_18591() -> (Tensor[(1404), float32],) {
  %1305 = @func_17099() /* ty=(Tensor[(1404), float32], Tensor[(637), float64]) */;
  %1306 = %1305.0;
  (%1306,)
}

def @func_10097(%var_10096: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) {
  %1321 = fn (%var_10070: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) {
    %1307 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1308 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
    %1309 = cast(%var_10070, dtype="float64") /* ty=Tensor[(637), float64] */;
    %1310 = reshape(%1308, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
    %1311 = reshape(%1309, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
    %1312 = @func_53(%1310, %1311) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
    %1313 = cast(meta[relay.Constant][43] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %1314 = reshape(%1313, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
    %1315 = @func_3252(%1314) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(385, 3), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1316 = @func_9657() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1317 = %1307.1;
    %1318 = %1312.1;
    %1319 = %1315.2;
    %1320 = %1316.0;
    (%1317, %1318, meta[relay.Constant][42] /* ty=Tensor[(13, 7), float64] */, %var_10070, %1319, meta[relay.Constant][43] /* ty=Tensor[(1155), float32] */, %1320)
  };
  %1321(%var_10096) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(13, 7), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_9983() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1322 = @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */;
  %1323 = @func_1662() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1324 = %1322.0;
  %1325 = %1323.0;
  (%1324, %1325)
}

def @func_10783() -> (Tensor[(13, 9, 12), float32],) {
  @func_10781() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_12304(%var_12303: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(1155), float32], Tensor[(13, 9, 12), float32], Tensor[(637), int64]) {
  %1342 = fn (%var_12255: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(1155), float32], Tensor[(13, 9, 12), float32], Tensor[(637), int64]) {
    %1326 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1327 = cast(%var_12255, dtype="float64") /* ty=Tensor[(91), float64] */;
    %1328 = cast(meta[relay.Constant][44] /* ty=Tensor[(637), float64] */, dtype="float64") /* ty=Tensor[(637), float64] */;
    %1329 = cast(meta[relay.Constant][45] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %1330 = reshape(%1327, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %1331 = reshape(%1328, newshape=[637]) /* ty=Tensor[(637), float64] */;
    %1332 = reshape(%1329, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %1333 = @func_8555(%1330, %1331, %1332) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(91), float64], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1155), float32], Tensor[(1155), bool]) */;
    %1334 = cast(meta[relay.Constant][46] /* ty=Tensor[(637), float64] */, dtype="int64") /* ty=Tensor[(637), int64] */;
    %1335 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(637), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1336 = cast(meta[relay.Constant][44] /* ty=Tensor[(637), float64] */, dtype="int64") /* ty=Tensor[(637), int64] */;
    %1337 = dyn.reshape(%1334, %1335, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1338 = %1326.0;
    %1339 = %1333.5;
    %1340 = @func_6559() /* ty=Tensor[(13, 9, 12), float32] */;
    %1341 = add(%1336, %1337) /* ty=Tensor[(637), int64] */;
    (%1338, %1339, %var_12255, meta[relay.Constant][45] /* ty=Tensor[(1155), float32] */, %1340, %1341)
  };
  %1342(%var_12303) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(1155), float32], Tensor[(13, 9, 12), float32], Tensor[(637), int64]) */
}

def @func_19505() -> (Tensor[(637), float64],) {
  %1345 = fn () -> (Tensor[(637), float64],) {
    %1343 = @func_15574() /* ty=(Tensor[(637), float64],) */;
    %1344 = %1343.0;
    (%1344,)
  };
  %1345() /* ty=(Tensor[(637), float64],) */
}

def @func_3661() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1349 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1346 = @func_3381() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1347 = %1346.1;
    %1348 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1347, %1348)
  };
  %1349() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_17746() -> Tensor[(13, 9, 12), float32] {
  %1351 = fn () -> Tensor[(13, 9, 12), float32] {
    %1350 = @func_17313() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1350.0
  };
  %1351() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_7942() -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
  %1357 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
    %1352 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1353 = cast(meta[relay.Constant][47] /* ty=Tensor[(105), int64] */, dtype="int64") /* ty=Tensor[(105), int64] */;
    %1354 = reshape(%1353, newshape=[7, 15, 1]) /* ty=Tensor[(7, 15, 1), int64] */;
    %1355 = %1352.0;
    %1356 = @func_1612(%1354) /* ty=Tensor[(7, 15, 6), bool] */;
    (%1355, %1356, meta[relay.Constant][47] /* ty=Tensor[(105), int64] */)
  };
  %1357() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */
}

def @func_2269(%var_2267: Tensor[(13, 9, 12), float32]) -> Tensor[(13, 9, 12), int64] {
  @func_2266(%var_2267) /* ty=Tensor[(13, 9, 12), int64] */
}

def @func_8008(%var_7989: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), float64], Tensor[(637, 1), float32]) {
  %1358 = cast(%var_7989, dtype="float64") /* ty=Tensor[(10, 4, 9), float64] */;
  %1359 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %1360 = asinh(%1358) /* ty=Tensor[(10, 4, 9), float64] */;
  %1361 = %1359.3;
  (%1360, %1361)
}

def @func_520(%var_503: Tensor[(91), float64], %var_504: Tensor[(637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) {
  %1362 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1363 = cast(%var_503, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1364 = cast(%var_504, dtype="float64") /* ty=Tensor[(637), float64] */;
  %1365 = reshape(%1363, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1366 = reshape(%1364, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %1367 = @func_53(%1365, %1366) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %1368 = %1362.0;
  %1369 = %1367.0;
  (%1368, %1369, %var_503, %var_504)
}

def @func_10516() -> Tensor[(13, 9, 12), float32] {
  %1371 = fn () -> Tensor[(13, 9, 12), float32] {
    %1370 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1370.0
  };
  %1371() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_1090() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) {
  @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */
}

def @func_3602() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) {
  %1372 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %1373 = @func_2296() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1374 = @func_3446() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1375 = @func_2618() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1376 = @func_1705() /* ty=(Tensor[(13, 9, 12), bool],) */;
  %1377 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1378 = %1372.0;
  %1379 = %1373.0;
  %1380 = %1374.0;
  %1381 = %1375.0;
  %1382 = %1376.0;
  %1383 = %1377.0;
  (%1378, %1379, %1380, %1381, %1382, %1383)
}

def @func_15568() -> Tensor[(13, 9, 12), float32] {
  @func_15566() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_6958() -> (Tensor[(13, 9, 12), int16],) {
  @func_6956() /* ty=(Tensor[(13, 9, 12), int16],) */
}

def @func_475(%var_381: int32) -> (Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1384 = cast(%var_381, dtype="bool") /* ty=bool */;
  %1385 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 16, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 16, 10), bool] */;
  %1386 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1387 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1388 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1389 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1390 = @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1391 = %1390.0;
  %1392 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %1393 = cast(%1392, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %1394 = sigmoid(%1393) /* ty=Tensor[(13, 9, 12), float64] */;
  %1395 = cast(%1394, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1396 = shape_of(%1391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1397 = cast(%1391, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1399 = greater(%1384, %1385) /* ty=Tensor[(5, 16, 10), bool] */;
  %1400 = %1386.0;
  %1401 = %1387.0;
  %1402 = %1388.0;
  %1403 = %1389.0;
  %1404 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  %1405 = floor_mod(%1397, %1398) /* ty=Tensor[(13, 9, 12), float32] */;
  %1406 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1399, %1400, %1401, %1402, %1403, %1404, %1405, %1406)
}

def @func_9088() -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_9086() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_8304() -> Tensor[(13, 9, 12), float32] {
  %1407 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_1753() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %1407() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_16772() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1408 = @func_11390() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1409 = @func_8848() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1410 = %1408.1;
  %1411 = %1409.0;
  (%1410, %1411)
}

def @func_17156() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1412 = @func_13506() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1413 = @func_11560() /* ty=Tensor[(13, 9, 12), float32] */;
  %1414 = %1412.0;
  (%1413, %1414)
}

def @func_15458() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_15456() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_19379(%var_19377: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(130), bool], bool, Tensor[(726), int8], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(8, 11, 12), int8]) {
  @func_19376(%var_19377) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(130), bool], bool, Tensor[(726), int8], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(8, 11, 12), int8]) */
}

def @func_14960(%var_14959: Tensor[(10, 1, 1), float64]) -> (Tensor[(10, 1, 1), float64],) {
  %1417 = fn (%var_14948: Tensor[(10, 1, 1), float64]) -> (Tensor[(10, 1, 1), float64],) {
    %1415 = cast(%var_14948, dtype="float64") /* ty=Tensor[(10, 1, 1), float64] */;
    %1416 = atan(%1415) /* ty=Tensor[(10, 1, 1), float64] */;
    (%1416,)
  };
  %1417(%var_14959) /* ty=(Tensor[(10, 1, 1), float64],) */
}

def @func_314() -> (Tensor[(13, 9, 12), float32],) {
  @func_312() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_5615() -> Tensor[(13, 9, 12), float32] {
  %1418 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
  %1418.0
}

def @func_2686(%var_2684: Tensor[(8, 9, 7), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) {
  @func_2683(%var_2684) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(8, 9, 7), float32]) */
}

def @func_3621() -> (Tensor[(13, 9, 12), float32],) {
  %1420 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1419 = @func_718() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1419,)
  };
  %1420() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_7102() -> (Tensor[(13, 9, 12), float32],) {
  %1422 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1421 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1421,)
  };
  %1422() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_10419() -> (Tensor[(13, 9, 12), float32],) {
  %1423 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_7419() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 91), float64], Tensor[(637), float64]) {
  @func_7417() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(1, 91), float64], Tensor[(637), float64]) */
}

def @func_18881(%var_18880: int16) -> (Tensor[(7, 4, 3), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1438 = fn (%var_18791: int16) -> (Tensor[(7, 4, 3), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1425 = cast(%var_18791, dtype="bool") /* ty=bool */;
    %1426 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 4, 3), int16] */, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
    %1427 = @func_14004() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */;
    %1428 = @func_14852() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1429 = @func_16387() /* ty=(int32, Tensor[(13, 9, 12), float32]) */;
    %1430 = @func_3400() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1431 = @func_8603() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1432 = less_equal(%1425, %1426) /* ty=Tensor[(7, 4, 3), bool] */;
    %1433 = %1427.0;
    %1434 = %1428.0;
    %1435 = %1429.0;
    %1436 = %1430.0;
    %1437 = %1431.1;
    (%1432, %1433, %1434, %1435, %1436, %1437)
  };
  %1438(%var_18880) /* ty=(Tensor[(7, 4, 3), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_10487() -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1446 = fn () -> (Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1439 = @func_6530() /* ty=(Tensor[(637), float64], int32) */;
    %1440 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1441 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1442 = @func_6220() /* ty=Tensor[(13, 9, 12), float32] */;
    %1443 = %1439.1;
    %1444 = %1440.0;
    %1445 = %1441.0;
    (%1442, %1443, %1444, %1445)
  };
  %1446() /* ty=(Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_9225() -> (Tensor[(637, 1), float32],) {
  %1449 = fn () -> (Tensor[(637, 1), float32],) {
    %1447 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
    %1448 = %1447.3;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(637, 1), float32],) */
}

def @func_16417(%var_16415: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32],) {
  @func_16414(%var_16415) /* ty=(Tensor[(5, 4, 3), float32],) */
}

def @func_8395(%var_8393: Tensor[(3, 5, 6), float64], %var_8394: Tensor[(91, 7), float64]) -> (Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  %1458 = fn (%var_8372: Tensor[(3, 5, 6), float64], %var_8385: Tensor[(91, 7), float64]) -> (Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) {
    %1450 = cast(%var_8372, dtype="float64") /* ty=Tensor[(3, 5, 6), float64] */;
    %1451 = cast(meta[relay.Constant][50] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
    %1452 = cast(%var_8385, dtype="float64") /* ty=Tensor[(91, 7), float64] */;
    %1453 = reshape(%1451, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %1454 = reshape(%1452, newshape=[637]) /* ty=Tensor[(637), float64] */;
    %1455 = @func_520(%1453, %1454) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
    %1456 = sinh(%1450) /* ty=Tensor[(3, 5, 6), float64] */;
    %1457 = %1455.1;
    (%1456, %1457, meta[relay.Constant][50] /* ty=Tensor[(91), float64] */, %var_8385)
  };
  %1458(%var_8393, %var_8394) /* ty=(Tensor[(3, 5, 6), float64], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(91, 7), float64]) */
}

def @func_8327() -> (Tensor[(13, 9, 12), float32],) {
  %1461 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1459 = @func_7215() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1460 = %1459.0;
    (%1460,)
  };
  %1461() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3401() -> (Tensor[(13, 9, 12), float32],) {
  %1464 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1462 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1463 = %1462.0;
    (%1463,)
  };
  %1464() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_6106(%var_6105: Tensor[(637, 7), float64]) -> Tensor[(637, 7), float32] {
  %1471 = fn (%var_6099: Tensor[(637, 7), float64]) -> Tensor[(637, 7), float32] {
    %1465 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
    %1466 = %1465.3;
    %1467 = cast(%1466, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
    %1468 = asinh(%1467) /* ty=Tensor[(637, 1), float64] */;
    %1469 = cast(%1468, dtype="float32") /* ty=Tensor[(637, 1), float32] */;
    %1470 = cast(%var_6099, dtype="float32") /* ty=Tensor[(637, 7), float32] */;
    mod(%1469, %1470) /* ty=Tensor[(637, 7), float32] */
  };
  %1471(%var_6105) /* ty=Tensor[(637, 7), float32] */
}

def @func_9895() -> (Tensor[(13, 7), float64],) {
  %1474 = fn () -> (Tensor[(13, 7), float64],) {
    %1472 = @func_3312() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(91), float64], Tensor[(13, 7), float64], Tensor[(637, 1), float32]) */;
    %1473 = %1472.2;
    (%1473,)
  };
  %1474() /* ty=(Tensor[(13, 7), float64],) */
}

def @func_13793() -> Tensor[(13, 9, 12), float32] {
  @func_13791() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_16005() -> (Tensor[(2, 637), uint32],) {
  @func_16003() /* ty=(Tensor[(2, 637), uint32],) */
}

def @func_12545() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  @func_12543() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) */
}

def @func_16755() -> (Tensor[(13, 9, 12), float32],) {
  %1476 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1475 = @func_4545() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1475,)
  };
  %1476() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_1706() -> (Tensor[(13, 9, 12), bool],) {
  %1479 = fn () -> (Tensor[(13, 9, 12), bool],) {
    %1477 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %1478 = %1477.0;
    (%1478,)
  };
  %1479() /* ty=(Tensor[(13, 9, 12), bool],) */
}

def @func_2055() -> Tensor[(13, 9, 12), float32] {
  %1480 = fn () -> Tensor[(13, 9, 12), float32] {
    @func_294() /* ty=Tensor[(13, 9, 12), float32] */
  };
  %1480() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_11320(%var_11319: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) {
  %1490 = fn (%var_11302: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) {
    %1481 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1482 = cast(%var_11302, dtype="bool") /* ty=bool */;
    %1483 = cast(meta[relay.Constant][51] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
    %1484 = reshape(%1482, newshape=[]) /* ty=bool */;
    %1485 = reshape(%1483, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), bool] */;
    %1486 = @func_5066(%1484, %1485) /* ty=(Tensor[(10, 13, 1), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1487 = %1481.1;
    %1488 = %1486.2;
    %1489 = @func_5523() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1487, %1488, %var_11302, meta[relay.Constant][51] /* ty=Tensor[(130), bool] */, %1489)
  };
  %1490(%var_11319) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) */
}

def @func_17236() -> (Tensor[(13, 9, 12), float32],) {
  %1493 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1491 = @func_8255() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1492 = %1491.0;
    (%1492,)
  };
  %1493() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_17500(%var_17499: Tensor[(2, 15, 1), float32]) -> Tensor[(2, 15, 1), float32] {
  %1495 = fn (%var_17495: Tensor[(2, 15, 1), float32]) -> Tensor[(2, 15, 1), float32] {
    %1494 = cast(%var_17495, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
    asin(%1494) /* ty=Tensor[(2, 15, 1), float32] */
  };
  %1495(%var_17499) /* ty=Tensor[(2, 15, 1), float32] */
}

def @func_17972() -> (Tensor[(13, 9, 12), float32], int32) {
  %1500 = fn () -> (Tensor[(13, 9, 12), float32], int32) {
    %1496 = @func_13707() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
    %1497 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
    %1498 = %1496.1;
    %1499 = %1497.2;
    (%1498, %1499)
  };
  %1500() /* ty=(Tensor[(13, 9, 12), float32], int32) */
}

def @func_13267(%var_13266: Tensor[(7, 15, 6), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
  %1510 = fn (%var_13259: Tensor[(7, 15, 6), float32]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) {
    %1501 = @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1502 = @func_9563() /* ty=Tensor[(7, 15, 6), float32] */;
    %1503 = cast(%var_13259, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
    %1504 = shape_of(%1502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1505 = cast(%1502, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
    %1506 = dyn.reshape(%1503, %1504, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1507 = %1501.0;
    %1508 = @func_11112() /* ty=Tensor[(13, 9, 12), float32] */;
    %1509 = divide(%1505, %1506) /* ty=Tensor[(7, 15, 6), float64] */;
    (%1507, %1508, %1509)
  };
  %1510(%var_13266) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), float64]) */
}

def @func_5107(%var_5105: uint8, %var_5106: Tensor[(726), int8]) -> (Tensor[(9, 6, 1), uint8], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) {
  @func_5103(%var_5105, %var_5106) /* ty=(Tensor[(9, 6, 1), uint8], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */
}

def @func_13872(%var_13871: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1521 = fn (%var_13828: Tensor[(320), uint32]) -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1511 = @func_9672() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1512 = cast(%var_13828, dtype="uint32") /* ty=Tensor[(320), uint32] */;
    %1513 = reshape(%1512, newshape=[320]) /* ty=Tensor[(320), uint32] */;
    %1514 = @func_11472(%1513) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32]) */;
    %1515 = @func_4005() /* ty=Tensor[(13, 9, 12), bool] */;
    %1516 = %1511.0;
    %1517 = %1514.1;
    %1518 = @func_1917() /* ty=Tensor[(13, 9, 12), float32] */;
    %1519 = @func_13791() /* ty=Tensor[(13, 9, 12), float32] */;
    %1520 = @func_6559() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1515, %1516, %1517, %var_13828, %1518, %1519, %1520)
  };
  %1521(%var_13871) /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(16, 4, 5), uint32], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_15027() -> (Tensor[(13, 9, 12), float32], Tensor[(320), uint32], Tensor[(16, 14, 5), float32], Tensor[(13, 9, 12), float32]) {
  %1530 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(320), uint32], Tensor[(16, 14, 5), float32], Tensor[(13, 9, 12), float32]) {
    %1522 = @func_12121() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1523 = @func_9523() /* ty=(Tensor[(320), uint32],) */;
    %1524 = @func_11514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) */;
    %1525 = @func_5380() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1526 = %1522.0;
    %1527 = %1523.0;
    %1528 = %1524.1;
    %1529 = %1525.0;
    (%1526, %1527, %1528, %1529)
  };
  %1530() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(320), uint32], Tensor[(16, 14, 5), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_1635() -> (Tensor[(13, 9, 12), float32],) {
  %1532 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %1531 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    (%1531,)
  };
  %1532() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_12505() -> (Tensor[(13, 9, 12), float32],) {
  @func_12503() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_9396() -> (Tensor[(13, 9, 12), bool],) {
  %1535 = fn () -> (Tensor[(13, 9, 12), bool],) {
    %1533 = @func_1502() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
    %1534 = %1533.0;
    (%1534,)
  };
  %1535() /* ty=(Tensor[(13, 9, 12), bool],) */
}

def @func_14735() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_14733() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_4724() -> (Tensor[(13, 9, 12), float32], int32) {
  @func_4722() /* ty=(Tensor[(13, 9, 12), float32], int32) */
}

def @func_15290() -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) {
  %1543 = fn () -> (Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) {
    %1536 = @func_6713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1537 = %1536.4;
    %1538 = cast(%1537, dtype="float64") /* ty=Tensor[(637), float64] */;
    %1539 = @func_7694() /* ty=(Tensor[(?, 637), uint16],) */;
    %1540 = acosh(%1538) /* ty=Tensor[(637), float64] */;
    %1541 = @func_14049() /* ty=Tensor[(13, 9, 12), float32] */;
    %1542 = %1539.0;
    (%1540, %1541, %1542)
  };
  %1543() /* ty=(Tensor[(637), float64], Tensor[(13, 9, 12), float32], Tensor[(?, 637), uint16]) */
}

def @func_2023(%var_2012: Tensor[(91), float64], %var_2013: Tensor[(637, 1), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637, 1), float64]) {
  %1544 = cast(%var_2012, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1545 = cast(%var_2013, dtype="float64") /* ty=Tensor[(637, 1), float64] */;
  %1546 = reshape(%1544, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1547 = reshape(%1545, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), float64] */;
  %1548 = @func_53(%1546, %1547) /* ty=(Tensor[(13, 7, 7), float64], Tensor[(13, 7, 7), float32]) */;
  %1549 = @func_1753() /* ty=Tensor[(13, 9, 12), float32] */;
  %1550 = %1548.0;
  (%1549, %1550, %var_2012, %var_2013)
}

def @func_7694() -> (Tensor[(?, 637), uint16],) {
  %1551 = @func_1212() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(1, 637), float64], Tensor[(7, 16, 6), float32], int32) */;
  %1552 = %1551.3;
  %1553 = cast(%1552, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %1554 = sinh(%1553) /* ty=Tensor[(1, 637), float64] */;
  %1555 = cast(%1552, dtype="uint16") /* ty=Tensor[(1, 637), uint16] */;
  %1556 = shape_of(%1554, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1557 = cast(%1554, dtype="uint16") /* ty=Tensor[(1, 637), uint16] */;
  %1558 = dyn.reshape(%1555, %1556, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1559 = maximum(%1557, %1558) /* ty=Tensor[(?, 637), uint16] */;
  (%1559,)
}

def @func_10837() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) {
  @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */
}

def @func_11364() -> Tensor[(13, 9, 12), float32] {
  %1561 = fn () -> Tensor[(13, 9, 12), float32] {
    %1560 = @func_770() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1560.0
  };
  %1561() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_8886(%var_8884: Tensor[(91), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(91, 7), float64]) {
  @func_8883(%var_8884) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(91, 7), float64]) */
}

def @func_10054() -> (Tensor[(13, 9, 12), float32],) {
  %1562 = @func_2644() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1563 = %1562.0;
  (%1563,)
}

def @func_12503() -> (Tensor[(13, 9, 12), float32],) {
  %1564 = @func_912() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1565 = %1564.0;
  (%1565,)
}

def @func_2591() -> Tensor[(13, 9, 12), float32] {
  %1566 = @func_1728() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1566.0
}

def @func_17534() -> Tensor[(7, 15, 6), bool] {
  %1568 = fn () -> Tensor[(7, 15, 6), bool] {
    %1567 = @func_5218() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(7, 15, 6), bool], Tensor[(13, 9, 12), bool], Tensor[(1, 105), float32]) */;
    %1567.1
  };
  %1568() /* ty=Tensor[(7, 15, 6), bool] */
}

def @func_9281() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1569 = @func_2054() /* ty=Tensor[(13, 9, 12), float32] */;
  %1570 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  (%1569, %1570)
}

def @func_15048() -> Tensor[(13, 9, 12), float32] {
  %1571 = @func_11169() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1571.1
}

def @func_11516() -> (Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
  @func_11514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) */
}

def @func_11225() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1576 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1572 = @func_2514() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1573 = @func_11090() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(320), uint32], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
    %1574 = %1572.1;
    %1575 = %1573.4;
    (%1574, %1575)
  };
  %1576() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_18593() -> (Tensor[(1404), float32],) {
  @func_18591() /* ty=(Tensor[(1404), float32],) */
}

def @func_6504() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_2839() -> Tensor[(13, 9, 12), float32] {
  %1578 = fn () -> Tensor[(13, 9, 12), float32] {
    %1577 = @func_2448() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %1577.1
  };
  %1578() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_3461(%var_3448: Tensor[(11, 6, 11), int8]) -> Tensor[(11, 6, 11), int8] {
  %1579 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 6, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 6, 11), int8] */;
  %1580 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1581 = cast(%var_3448, dtype="int8") /* ty=Tensor[(11, 6, 11), int8] */;
  %1582 = dyn.reshape(%1579, %1580, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%1581, %1582) /* ty=Tensor[(11, 6, 11), int8] */
}

def @func_4005() -> Tensor[(13, 9, 12), bool] {
  %1583 = @func_2986() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32]) */;
  %1583.0
}

def @func_14733() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1584 = @func_10891() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64]) */;
  %1585 = @func_12517() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1586 = %1584.1;
  %1587 = %1585.0;
  (%1586, %1587)
}

def @func_9716() -> (Tensor[(13, 9, 12), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1588 = @func_8808() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1589 = @func_8680() /* ty=Tensor[(13, 9, 12), bool] */;
  %1590 = @func_8033() /* ty=Tensor[(13, 9, 12), float32] */;
  %1591 = %1588.1;
  (%1589, %1590, %1591)
}

def @func_8257() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  @func_8255() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_9140() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), uint16]) {
  %1592 = @func_3630() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1593 = @func_3086() /* ty=(int32, Tensor[(13, 9, 12), int64], Tensor[(1404), float32]) */;
  %1594 = %1593.1;
  %1595 = @func_2569() /* ty=Tensor[(13, 9, 12), float32] */;
  %1596 = cast(%1595, dtype="uint16") /* ty=Tensor[(13, 9, 12), uint16] */;
  %1597 = shape_of(%1594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1598 = cast(%1594, dtype="uint16") /* ty=Tensor[(13, 9, 12), uint16] */;
  %1599 = dyn.reshape(%1596, %1597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1600 = %1592.0;
  %1601 = bitwise_or(%1598, %1599) /* ty=Tensor[(13, 9, 12), uint16] */;
  (%1600, %1601)
}

def @func_7373() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) {
  %1602 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1603 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1604 = reshape(%1603, newshape=[]) /* ty=int32 */;
  %1605 = @func_475(%1604) /* ty=(Tensor[(5, 16, 10), bool], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1606 = %1602.0;
  %1607 = %1605.7;
  (%1606, %1607, -7 /* ty=int32 */)
}

def @func_295() -> Tensor[(13, 9, 12), float32] {
  %1611 = fn () -> Tensor[(13, 9, 12), float32] {
    %1608 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1609 = %1608.0;
    %1610 = cast(%1609, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    rsqrt(%1610) /* ty=Tensor[(13, 9, 12), float32] */
  };
  %1611() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_946() -> Tensor[(13, 9, 12), float32] {
  @func_294() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_15715() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(637, 1), float64]) {
  @func_15713() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(637, 1), float64]) */
}

def @func_4863() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1612 = @func_2838() /* ty=Tensor[(13, 9, 12), float32] */;
  %1613 = cast(%1612, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %1614 = reshape(%1613, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %1615 = @func_815(%1614) /* ty=(Tensor[(13, 9, 12), int16],) */;
  %1616 = %1615.0;
  (%1612, %1616)
}

def @func_7982(%var_7978: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32],) {
  %1617 = cast(%var_7978, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %1618 = erf(%1617) /* ty=Tensor[(8, 13, 8), float32] */;
  (%1618,)
}

def @func_3141() -> Tensor[(13, 9, 12), float32] {
  @func_3139() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_5850() -> (Tensor[(13, 9, 12), float32], int32) {
  %1619 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1620 = @func_1035() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1621 = %1619.5;
  %1622 = %1620.3;
  (%1621, %1622)
}

def @func_1612(%var_1599: Tensor[(7, 15, 1), int64]) -> Tensor[(7, 15, 6), bool] {
  %1623 = cast(%var_1599, dtype="bool") /* ty=Tensor[(7, 15, 1), bool] */;
  %1624 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 15, 6), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
  greater_equal(%1623, %1624) /* ty=Tensor[(7, 15, 6), bool] */
}

def @func_11721() -> Tensor[(13, 9, 12), int16] {
  %1626 = fn () -> Tensor[(13, 9, 12), int16] {
    %1625 = @func_1088() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16], int32) */;
    %1625.1
  };
  %1626() /* ty=Tensor[(13, 9, 12), int16] */
}

def @func_8934() -> (Tensor[(13, 9, 12), float32],) {
  %1627 = @func_4584() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1628 = %1627.0;
  (%1628,)
}

def @func_607(%var_601: Tensor[(91), float64], %var_602: Tensor[(1, 637), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(1, 637), float64]) {
  %1629 = cast(%var_601, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1630 = cast(%var_602, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %1631 = reshape(%1629, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1632 = reshape(%1630, newshape=[637]) /* ty=Tensor[(637), float64] */;
  %1633 = @func_520(%1631, %1632) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float64], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1634 = @func_560() /* ty=Tensor[(13, 9, 12), float32] */;
  %1635 = %1633.1;
  (%1634, %1635, %var_601, %var_602)
}

def @func_15972() -> (Tensor[(13, 9, 12), float32],) {
  @func_15970() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_16858() -> Tensor[(13, 9, 12), float32] {
  %1637 = fn () -> Tensor[(13, 9, 12), float32] {
    %1636 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1636.0
  };
  %1637() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_18327() -> (Tensor[(13, 9, 12), float32],) {
  @func_18325() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_19244(%var_19242: Tensor[(1056), float32], %var_19243: Tensor[(726), int8]) -> (int32, Tensor[(8, 11, 12), float32], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(12, 16, 4), uint64], Tensor[(13, 9, 12), float32]) {
  @func_19240(%var_19242, %var_19243) /* ty=(int32, Tensor[(8, 11, 12), float32], Tensor[(1056), float32], Tensor[(726), int8], Tensor[(12, 16, 4), uint64], Tensor[(13, 9, 12), float32]) */
}

def @func_11673(%var_11672: Tensor[(1120), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
  %1648 = fn (%var_11654: Tensor[(1120), float64]) -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) {
    %1638 = @func_3803() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1639 = @func_2789() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1640 = @func_4322() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1641 = cast(%var_11654, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %1642 = reshape(%1641, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), float64] */;
    %1643 = @func_7643(%1642) /* ty=(Tensor[(16, 14, 5), float32],) */;
    %1644 = %1638.0;
    %1645 = %1639.0;
    %1646 = %1640.0;
    %1647 = %1643.0;
    (%1644, %1645, %1646, %1647, %var_11654)
  };
  %1648(%var_11672) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(16, 14, 5), float32], Tensor[(1120), float64]) */
}

def @func_9338() -> Tensor[(13, 9, 12), float32] {
  @func_9336() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_10421() -> (Tensor[(13, 9, 12), float32],) {
  @func_10419() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_19376(%var_19304: bool) -> (Tensor[(13, 9, 12), float32], Tensor[(130), bool], bool, Tensor[(726), int8], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(8, 11, 12), int8]) {
  %1649 = @func_1634() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1650 = cast(%var_19304, dtype="bool") /* ty=bool */;
  %1651 = reshape(%1650, newshape=[]) /* ty=bool */;
  %1652 = @func_11318(%1651) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], bool, Tensor[(130), bool], Tensor[(13, 9, 12), float32]) */;
  %1653 = @func_10203() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32]) */;
  %1654 = %1653.1;
  %1655 = cast(%1654, dtype="float64") /* ty=Tensor[(13, 7), float64] */;
  %1656 = reshape(%1655, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %1657 = @func_13477(%1656) /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 7, 7), float32], Tensor[(91), float64], Tensor[(637), float64]) */;
  %1658 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1659 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1660 = cast(meta[relay.Constant][54] /* ty=Tensor[(726), int8] */, dtype="int8") /* ty=Tensor[(726), int8] */;
  %1661 = reshape(%1658, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1662 = reshape(%1659, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float32] */;
  %1663 = reshape(%1660, newshape=[726]) /* ty=Tensor[(726), int8] */;
  %1664 = @func_9946(%1661, %1662, %1663) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(8, 11, 12), float32], Tensor[(8, 11, 12), float64], Tensor[(11, 6, 11), int8], Tensor[(726), int8]) */;
  %1665 = %1664.2;
  %1666 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), float32] */, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %1667 = shape_of(%1665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1668 = cast(%1665, dtype="int8") /* ty=Tensor[(8, 11, 12), int8] */;
  %1669 = dyn.reshape(%1666, %1667, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1670 = %1649.0;
  %1671 = %1652.3;
  %1672 = %1657.0;
  %1673 = bitwise_or(%1668, %1669) /* ty=Tensor[(8, 11, 12), int8] */;
  (%1670, %1671, %var_19304, meta[relay.Constant][54] /* ty=Tensor[(726), int8] */, %1654, %1672, %1673)
}

def @func_9336() -> Tensor[(13, 9, 12), float32] {
  %1674 = @func_6502() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1674.1
}

def @func_14004() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 7), float64], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), int16]) {
  %1675 = @func_1276() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %1676 = @func_9894() /* ty=(Tensor[(13, 7), float64],) */;
  %1677 = @func_10835() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(7, 15, 6), bool], Tensor[(105), int64]) */;
  %1678 = @func_6342() /* ty=(Tensor[(13, 9, 12), int16], Tensor[(13, 9, 12), float32], int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */;
  %1679 = %1675.0;
  %1680 = %1676.0;
  %1681 = %1677.1;
  %1682 = %1678.0;
  (%1679, %1680, %1681, %1682)
}

def @func_1036() -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
  %1692 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) {
    %1683 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1684 = reshape(%1683, newshape=[]) /* ty=int32 */;
    %1685 = @func_588(%1684) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32) */;
    %1686 = @func_139() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %1687 = @func_946() /* ty=Tensor[(13, 9, 12), float32] */;
    %1688 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    %1689 = %1685.3;
    %1690 = @func_294() /* ty=Tensor[(13, 9, 12), float32] */;
    %1691 = %1686.0;
    (%1687, %1688, %1689, 3 /* ty=int32 */, %1690, %1691)
  };
  %1692() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32], int32, int32, Tensor[(13, 9, 12), float32], Tensor[(13, 9, 12), float32]) */
}

def @func_11709() -> (Tensor[(13, 9, 12), float32],) {
  @func_11707() /* ty=(Tensor[(13, 9, 12), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen740/build/output.py:6167: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen740/build/output.py", line 6172, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(360) tvmgen_default_fused_rsqrt_kernel0(float* __restrict__ tensor, float* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00f / sqrtf(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


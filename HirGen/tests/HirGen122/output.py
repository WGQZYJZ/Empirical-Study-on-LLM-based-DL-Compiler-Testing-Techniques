import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_138 = relay.var("var_138", dtype = "float64", shape = (10, 11, 8))#candidate|138|(10, 11, 8)|var|float64
uop_139 = relay.exp(var_138.astype('float64')) # shape=(10, 11, 8)
uop_147 = relay.cosh(uop_139.astype('float64')) # shape=(10, 11, 8)
bop_168 = relay.floor_mod(uop_139.astype('float32'), relay.reshape(var_138.astype('float32'), relay.shape_of(uop_139))) # shape=(10, 11, 8)
uop_177 = relay.sinh(uop_147.astype('float32')) # shape=(10, 11, 8)
output = relay.Tuple([bop_168,uop_177,])
output2 = relay.Tuple([bop_168,uop_177,])
func_179 = relay.Function([var_138,], output)
mod['func_179'] = func_179
mod = relay.transform.InferType()(mod)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_180 = relay.var("var_180", dtype = "float64", shape = (10, 11, 8))#candidate|180|(10, 11, 8)|var|float64
func_179_call = mutated_mod.get_global_var('func_179')
call_181 = func_179_call(var_180)
output = call_181
func_182 = relay.Function([var_180], output)
mutated_mod['func_182'] = func_182
mutated_mod = relay.transform.InferType()(mutated_mod)
const_209 = relay.const([[[-1.114362,8.097131,-9.774077,-9.207389,-1.301483,3.441321],[-7.713705,4.722686,-1.726034,-9.819934,-5.107792,-2.513456],[-6.226351,-3.135404,-9.193458,6.497357,-0.958599,0.846554],[9.692676,-5.177344,-3.974171,7.262760,-7.816029,-1.530090],[-4.286893,-3.004565,2.624912,-3.278683,7.235520,-7.797629],[-1.331459,-1.519832,7.090481,-6.189089,5.727898,-5.023837],[-7.040055,-3.135320,-6.806511,-0.503506,7.317832,-1.255348],[6.056525,-4.879906,3.162342,9.362881,-1.289692,-7.829824],[8.155300,-8.812357,4.605085,-6.602359,-6.297351,5.611271]],[[2.897689,7.000349,-7.397495,-7.694684,-4.793709,-1.188191],[0.870548,-8.098518,9.461877,8.622222,3.343387,6.819987],[-2.416282,-4.693884,-0.041520,-0.602411,2.736497,-8.724568],[7.235570,-4.246096,6.837555,2.522788,-6.724949,-0.725754],[-2.111878,-8.975716,1.964504,4.799365,9.813185,-5.533930],[7.293628,-5.635691,4.980800,-4.916364,4.738796,-2.542253],[-4.292604,5.582025,0.885256,-3.180301,-2.857978,9.583634],[9.476411,0.740777,1.541549,-2.043164,-1.298452,4.011983],[-1.777760,-5.466341,-2.388302,-4.466161,-4.942284,1.142934]]], dtype = "float64")#candidate|209|(2, 9, 6)|const|float64
uop_210 = relay.rsqrt(const_209.astype('float64')) # shape=(2, 9, 6)
output = relay.Tuple([uop_210,])
output2 = relay.Tuple([uop_210,])
func_214 = relay.Function([], output)
mod['func_214'] = func_214
mod = relay.transform.InferType()(mod)
output = func_214()
func_215 = relay.Function([], output)
mutated_mod['func_215'] = func_215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_221 = relay.TupleGetItem(func_214_call(), 0)
call_222 = relay.TupleGetItem(func_215_call(), 0)
uop_233 = relay.atan(call_221.astype('float64')) # shape=(2, 9, 6)
uop_235 = relay.atan(call_222.astype('float64')) # shape=(2, 9, 6)
output = relay.Tuple([uop_233,])
output2 = relay.Tuple([uop_235,])
func_238 = relay.Function([], output)
mod['func_238'] = func_238
mod = relay.transform.InferType()(mod)
output = func_238()
func_239 = relay.Function([], output)
mutated_mod['func_239'] = func_239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_240 = relay.TupleGetItem(func_238_call(), 0)
call_241 = relay.TupleGetItem(func_239_call(), 0)
output = relay.Tuple([call_240,])
output2 = relay.Tuple([call_241,])
func_264 = relay.Function([], output)
mod['func_264'] = func_264
mod = relay.transform.InferType()(mod)
mutated_mod['func_264'] = func_264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_264_call = mutated_mod.get_global_var('func_264')
call_265 = func_264_call()
output = call_265
func_266 = relay.Function([], output)
mutated_mod['func_266'] = func_266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_267 = relay.var("var_267", dtype = "float64", shape = (9, 15, 1))#candidate|267|(9, 15, 1)|var|float64
uop_268 = relay.erf(var_267.astype('float64')) # shape=(9, 15, 1)
uop_272 = relay.tan(var_267.astype('float64')) # shape=(9, 15, 1)
output = relay.Tuple([uop_268,uop_272,])
output2 = relay.Tuple([uop_268,uop_272,])
func_277 = relay.Function([var_267,], output)
mod['func_277'] = func_277
mod = relay.transform.InferType()(mod)
mutated_mod['func_277'] = func_277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_278 = relay.var("var_278", dtype = "float64", shape = (9, 15, 1))#candidate|278|(9, 15, 1)|var|float64
func_277_call = mutated_mod.get_global_var('func_277')
call_279 = func_277_call(var_278)
output = call_279
func_280 = relay.Function([var_278], output)
mutated_mod['func_280'] = func_280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_359 = relay.var("var_359", dtype = "float32", shape = ())#candidate|359|()|var|float32
var_360 = relay.var("var_360", dtype = "float32", shape = (3, 1, 10))#candidate|360|(3, 1, 10)|var|float32
bop_361 = relay.mod(var_359.astype('float32'), var_360.astype('float32')) # shape=(3, 1, 10)
uop_371 = relay.sinh(var_360.astype('float64')) # shape=(3, 1, 10)
output = relay.Tuple([bop_361,uop_371,])
output2 = relay.Tuple([bop_361,uop_371,])
func_378 = relay.Function([var_359,var_360,], output)
mod['func_378'] = func_378
mod = relay.transform.InferType()(mod)
var_379 = relay.var("var_379", dtype = "float32", shape = ())#candidate|379|()|var|float32
var_380 = relay.var("var_380", dtype = "float32", shape = (3, 1, 10))#candidate|380|(3, 1, 10)|var|float32
output = func_378(var_379,var_380,)
func_381 = relay.Function([var_379,var_380,], output)
mutated_mod['func_381'] = func_381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_411 = relay.TupleGetItem(func_214_call(), 0)
call_412 = relay.TupleGetItem(func_215_call(), 0)
output = relay.Tuple([call_411,])
output2 = relay.Tuple([call_412,])
func_420 = relay.Function([], output)
mod['func_420'] = func_420
mod = relay.transform.InferType()(mod)
output = func_420()
func_421 = relay.Function([], output)
mutated_mod['func_421'] = func_421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_439 = relay.TupleGetItem(func_214_call(), 0)
call_440 = relay.TupleGetItem(func_215_call(), 0)
var_455 = relay.var("var_455", dtype = "float64", shape = (2, 9, 6))#candidate|455|(2, 9, 6)|var|float64
bop_456 = relay.bitwise_and(call_439.astype('int64'), relay.reshape(var_455.astype('int64'), relay.shape_of(call_439))) # shape=(2, 9, 6)
bop_459 = relay.bitwise_and(call_440.astype('int64'), relay.reshape(var_455.astype('int64'), relay.shape_of(call_440))) # shape=(2, 9, 6)
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
const_469 = relay.const([[4.799191,3.320191,-7.257722,-4.696271,6.950813,-4.899560,3.408130,-3.786227,-3.071749,-7.562648,-3.893289,-6.412194,2.359345,-9.754275,5.765121,2.072614,7.882376,-4.196126,-3.599101,4.948307,-4.085275,0.155498,-0.482876,9.037005,-6.104251,-2.393588,6.209484,-6.540609,-9.899688,-0.470905,-2.505828,8.728963,9.390614,4.673551,-3.231499,2.222702,4.080796,1.581079,-4.889171,-8.315002,-4.161198,0.440654,3.019515,-8.830727,-9.848471,-2.529169,7.275316,-0.172531,4.221393,-1.717617,7.808179,-6.949247,-3.544883,-2.659417,-3.192167,-5.312993,-0.346388,-2.179059,8.100258,8.172197,-5.450718,-4.152928,1.101334,-3.865905,-3.582033,7.097672,-9.563750,-7.154639,8.144021,9.418939,9.404849,-3.980760,4.442161,-8.087169,-4.465793,-4.209838,9.835896,-9.225316,-3.586253,7.353347,6.272304,-6.999376,-7.711512,3.906421,3.612128,5.066199,-5.448792,-6.294693,-0.483436,-5.938262,2.210297,6.282024,2.285508,6.750387,-6.522357,-4.101772,6.636008,9.771582,-2.516698,6.691375,9.334261,-3.622062,6.234890,5.231889,0.926337,-5.501073,7.022985,9.487913,0.034977,-5.666589,7.088156,7.298798,8.030402,-3.753366,9.336767,0.324707,-8.126629,-2.050669,3.840522,-9.218958,6.047710,2.816737,-4.138194,0.832305,6.682911,-0.480750,9.915034,-1.212250,-4.076228,-2.002058,-9.019601,7.125208,9.679446,-8.286213,1.243102]], dtype = "float64")#candidate|469|(1, 135)|const|float64
call_468 = relay.TupleGetItem(func_277_call(relay.reshape(const_469.astype('float64'), [9, 15, 1])), 1)
call_470 = relay.TupleGetItem(func_280_call(relay.reshape(const_469.astype('float64'), [9, 15, 1])), 1)
output = relay.Tuple([bop_456,call_468,const_469,])
output2 = relay.Tuple([bop_459,call_470,const_469,])
func_474 = relay.Function([var_455,], output)
mod['func_474'] = func_474
mod = relay.transform.InferType()(mod)
mutated_mod['func_474'] = func_474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_475 = relay.var("var_475", dtype = "float64", shape = (2, 9, 6))#candidate|475|(2, 9, 6)|var|float64
func_474_call = mutated_mod.get_global_var('func_474')
call_476 = func_474_call(var_475)
output = call_476
func_477 = relay.Function([var_475], output)
mutated_mod['func_477'] = func_477
mutated_mod = relay.transform.InferType()(mutated_mod)
const_481 = relay.const([[[-2.471481,-8.152803,0.320945,-1.725749,-7.827592],[-9.225927,0.198687,5.237976,-9.668595,-8.179374],[5.384437,7.794081,8.096070,2.738870,-2.216054],[-0.691169,-3.285295,-3.200317,-6.623021,-1.855067],[5.070178,-8.314764,9.511341,-4.380758,3.786000],[-4.470992,8.589768,0.112369,1.424747,3.620681],[4.480627,-8.596207,-1.314337,2.505572,-8.254255],[-5.544776,-6.499491,-1.047119,-3.767206,-3.899852],[1.557746,-3.467911,-2.189399,0.896804,1.276760],[9.030639,8.528574,-4.820476,-9.995391,-8.364851],[0.748090,-3.549205,5.250446,8.601022,4.948884],[-9.344937,3.869649,-3.122030,-4.330944,2.248200],[-1.195459,-3.985409,-8.590458,-7.629140,-3.939459]],[[3.975926,1.233486,2.986935,7.493612,-0.753953],[-9.829077,0.516149,-2.930976,-9.367584,-0.746516],[-4.616024,-6.020782,-3.648939,3.884805,-6.086057],[6.845672,6.005916,4.320071,3.579139,-3.864100],[-4.102902,-5.018288,-7.642815,0.670832,3.467819],[-4.015870,-6.035763,-9.930528,5.246805,4.283029],[3.019344,-7.479107,6.381645,-4.481741,-9.117058],[2.228317,2.904588,-4.394817,-8.493480,-3.726247],[0.603764,6.420051,-0.429778,-7.551682,2.137947],[3.746673,-4.722835,7.187087,4.150769,9.064337],[-1.367715,-7.301462,-5.451246,6.577722,-5.611016],[0.038890,-8.076846,-4.770555,-3.794795,6.672166],[-7.536947,1.417505,-8.720824,6.095398,-5.107464]]], dtype = "float32")#candidate|481|(2, 13, 5)|const|float32
const_482 = relay.const([[[5.731379,-2.885111,-1.762466,-8.976219,-6.159441],[2.045649,-2.815198,9.667937,-4.093266,-3.034467],[1.363906,-5.818029,-4.147002,2.522689,-8.996747],[-9.149096,0.091342,6.431374,-1.678378,-3.015553],[2.220251,-5.835508,1.856486,1.618632,-0.869515],[9.610952,1.487094,4.102705,0.814352,-8.787878],[0.920548,6.718545,9.185625,-1.796572,-2.202739],[-6.040230,-7.952997,6.831428,-2.830657,-5.844130],[-1.403785,-8.731590,4.006394,3.393967,0.920664],[-3.460899,-2.501689,2.352279,-1.675107,-5.023629],[-4.663463,0.238084,1.375417,3.992202,1.410849],[-5.940555,5.621569,2.775197,-1.453521,0.644226],[-1.916617,-5.538102,5.548698,-4.638191,1.210641]],[[-5.271053,-6.458406,9.653113,-4.522825,8.839563],[-1.167176,4.490197,4.383974,-8.307419,3.589875],[1.191422,6.165295,2.277378,8.467061,-5.928038],[-5.124213,-1.969823,-2.140041,-4.599545,-8.931886],[-1.903811,8.813068,-2.031118,-8.011529,-7.989037],[-0.329653,9.174722,0.491004,-0.797313,8.421533],[9.836315,2.708534,-6.768214,9.675358,-7.129514],[-8.667960,-7.122504,-0.397807,-3.951979,0.203694],[7.369161,-2.096671,7.241964,2.587058,-6.762385],[4.948328,-3.491321,-8.939756,-0.828979,4.121098],[5.185080,-3.353925,9.417205,5.424187,7.965786],[-7.108755,-3.901168,-5.116711,-7.143203,-1.989445],[-0.929817,-8.438777,-4.005739,5.592862,0.409762]]], dtype = "float32")#candidate|482|(2, 13, 5)|const|float32
bop_483 = relay.mod(const_481.astype('float32'), relay.reshape(const_482.astype('float32'), relay.shape_of(const_481))) # shape=(2, 13, 5)
uop_488 = relay.acosh(const_482.astype('float64')) # shape=(2, 13, 5)
func_378_call = mod.get_global_var('func_378')
func_381_call = mutated_mod.get_global_var('func_381')
const_491 = relay.const(-1.765756, dtype = "float32")#candidate|491|()|const|float32
const_492 = relay.const([[-0.134475,-6.102235,-5.029449,-2.493384,-9.926311,6.082313,-2.193492,5.432990,-9.696708,6.708085,5.502644,-8.083381,5.550876,-1.611943,1.885179,1.590769,-6.782671,-6.790387,-1.105762,-1.729544,-7.738171,-5.789036,2.598347,5.628320,9.637179,6.332127,-5.140319,-0.442476,5.254919,5.456759]], dtype = "float32")#candidate|492|(1, 30)|const|float32
call_490 = relay.TupleGetItem(func_378_call(relay.reshape(const_491.astype('float32'), []), relay.reshape(const_492.astype('float32'), [3, 1, 10]), ), 1)
call_493 = relay.TupleGetItem(func_381_call(relay.reshape(const_491.astype('float32'), []), relay.reshape(const_492.astype('float32'), [3, 1, 10]), ), 1)
uop_494 = relay.sinh(uop_488.astype('float64')) # shape=(2, 13, 5)
output = relay.Tuple([bop_483,call_490,const_491,const_492,uop_494,])
output2 = relay.Tuple([bop_483,call_493,const_491,const_492,uop_494,])
func_497 = relay.Function([], output)
mod['func_497'] = func_497
mod = relay.transform.InferType()(mod)
output = func_497()
func_498 = relay.Function([], output)
mutated_mod['func_498'] = func_498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_525 = relay.TupleGetItem(func_238_call(), 0)
call_526 = relay.TupleGetItem(func_239_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_529 = relay.TupleGetItem(func_264_call(), 0)
call_530 = relay.TupleGetItem(func_266_call(), 0)
bop_541 = relay.add(call_525.astype('uint32'), relay.reshape(call_529.astype('uint32'), relay.shape_of(call_525))) # shape=(2, 9, 6)
bop_544 = relay.add(call_526.astype('uint32'), relay.reshape(call_530.astype('uint32'), relay.shape_of(call_526))) # shape=(2, 9, 6)
output = relay.Tuple([bop_541,])
output2 = relay.Tuple([bop_544,])
func_559 = relay.Function([], output)
mod['func_559'] = func_559
mod = relay.transform.InferType()(mod)
output = func_559()
func_560 = relay.Function([], output)
mutated_mod['func_560'] = func_560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_590 = relay.TupleGetItem(func_238_call(), 0)
call_591 = relay.TupleGetItem(func_239_call(), 0)
output = relay.Tuple([call_590,])
output2 = relay.Tuple([call_591,])
func_605 = relay.Function([], output)
mod['func_605'] = func_605
mod = relay.transform.InferType()(mod)
mutated_mod['func_605'] = func_605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_605_call = mutated_mod.get_global_var('func_605')
call_606 = func_605_call()
output = call_606
func_607 = relay.Function([], output)
mutated_mod['func_607'] = func_607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_659 = relay.TupleGetItem(func_605_call(), 0)
call_660 = relay.TupleGetItem(func_607_call(), 0)
uop_668 = relay.sin(call_659.astype('float32')) # shape=(2, 9, 6)
uop_670 = relay.sin(call_660.astype('float32')) # shape=(2, 9, 6)
output = relay.Tuple([uop_668,])
output2 = relay.Tuple([uop_670,])
func_672 = relay.Function([], output)
mod['func_672'] = func_672
mod = relay.transform.InferType()(mod)
output = func_672()
func_673 = relay.Function([], output)
mutated_mod['func_673'] = func_673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_687 = relay.var("var_687", dtype = "int64", shape = (14, 9, 9))#candidate|687|(14, 9, 9)|var|int64
const_688 = relay.const([[[-8,1,-10,2,-8,3,9,-9,3],[-7,-1,5,2,-6,7,-5,8,5],[-2,-9,-5,-8,-4,-5,-10,5,-5],[1,-6,-6,-8,8,-9,-5,-9,-3],[-9,-1,7,1,8,9,6,1,-10],[-7,-10,-4,9,3,-8,-6,-5,-9],[1,-10,-5,2,-10,5,10,8,-8],[-2,-6,7,-9,-8,-8,-9,-6,-9],[9,-2,2,10,-1,5,-5,-8,-2]],[[-4,8,9,8,6,-8,-4,-6,-9],[6,-4,10,-8,-8,5,-1,-3,10],[6,10,3,-9,-7,5,-5,5,-10],[9,-9,4,7,2,6,-1,-9,4],[-1,9,8,-1,-5,-4,-3,-4,-2],[-6,-6,10,-10,4,-4,-3,3,-2],[-4,-6,1,-5,-5,-7,-7,-7,-3],[5,-7,-5,7,-5,-10,3,-10,-4],[-9,5,5,-10,-5,5,3,1,9]],[[3,4,8,5,-5,-10,-7,-7,4],[2,-6,2,-5,3,7,2,10,7],[7,1,8,2,-2,-6,2,-2,-5],[2,-1,5,-9,-7,-2,-8,8,-10],[1,-10,2,-9,3,5,-6,-1,-3],[5,5,10,-8,-6,-8,-1,-10,-3],[-8,-9,4,3,2,-6,-10,7,-5],[-3,-7,-7,5,5,-2,10,-1,-3],[2,6,9,10,-3,5,4,-10,6]],[[8,-7,9,-3,9,7,-10,7,-4],[8,-6,-1,-10,10,7,-7,-7,8],[-6,-4,-7,-7,9,-5,-10,7,7],[-8,2,-6,4,-2,8,9,-2,-8],[-4,-10,-1,-6,-9,7,-10,10,3],[-8,9,-7,3,2,-9,-8,7,7],[-2,-9,7,-6,2,-10,-2,-9,-10],[10,4,-1,-4,7,-5,-1,1,-8],[5,7,10,2,6,4,10,9,10]],[[9,9,7,-2,10,8,2,-4,3],[-4,7,-6,6,-7,-2,-7,2,6],[-9,-8,2,1,-9,10,-8,-7,-6],[5,1,-9,10,-3,-1,4,9,-2],[-7,-4,-7,-8,-1,-9,-8,-9,8],[-3,3,3,-8,5,-8,-8,-10,-1],[7,10,-4,6,-3,4,-2,-4,-4],[-10,-5,-10,2,7,-10,-8,10,8],[-9,8,7,5,-1,-6,-5,9,-1]],[[-2,9,-6,-10,10,4,-5,-10,7],[7,9,-3,2,1,-10,2,-9,3],[-4,2,4,1,9,4,-1,7,6],[-6,8,10,4,-9,-5,-8,7,2],[-6,-1,-4,-8,-6,6,-7,-10,2],[2,-4,-8,-3,-7,-6,2,-9,4],[9,-8,-1,7,-7,-2,7,-4,4],[9,8,-10,4,-6,-8,-6,-6,-2],[-1,4,5,8,9,2,-5,1,-6]],[[10,4,3,-6,-8,5,9,8,5],[-7,-5,6,10,-10,-5,-3,-8,-8],[-8,2,-9,6,5,9,-9,-3,-5],[-2,10,-5,8,-9,6,7,-4,-1],[-6,-10,3,2,-8,-6,4,7,10],[7,1,-4,5,-2,-10,1,2,-8],[-3,-6,-5,-5,2,3,3,10,7],[-2,7,1,-6,5,6,-2,-6,-3],[5,-10,-7,9,-4,-5,-6,5,-2]],[[1,1,-6,9,-9,10,-6,7,2],[-10,5,1,-8,10,10,-10,-9,-5],[9,5,-1,-7,10,4,9,2,-9],[-7,-1,10,6,-10,-10,-10,-3,4],[-9,-10,6,-10,7,8,-8,4,-1],[-9,-4,-2,6,-5,6,-2,2,-6],[5,3,2,1,-8,7,9,6,7],[-2,-9,-3,-8,-4,8,-1,7,-6],[-7,9,1,-7,-2,-8,3,3,6]],[[-9,-10,5,2,-10,9,-8,-4,-4],[-2,7,-5,4,-4,-10,-10,5,9],[-7,-5,9,-4,4,3,3,10,1],[5,-1,-2,-7,7,4,1,8,8],[-4,6,10,-6,7,3,9,-5,6],[1,-2,5,-8,-7,4,6,10,6],[1,3,7,-8,-3,-1,8,2,2],[-6,-6,9,-10,10,6,8,-9,7],[-6,-6,-6,7,7,-4,7,-1,4]],[[-2,4,-2,7,8,-10,4,10,6],[5,9,-3,2,6,-2,3,3,-8],[-8,5,-1,-2,5,-4,-7,-6,-2],[-3,10,10,-8,-8,2,7,10,-7],[9,7,3,-4,-10,-9,1,9,-1],[-5,-5,1,-10,-9,-10,-3,-10,-2],[-2,1,1,6,-2,-3,-5,-2,-3],[10,-1,6,-9,-2,-7,-10,-3,1],[-3,-5,-2,-7,-9,9,-4,-7,-10]],[[-8,-10,-8,5,8,-8,-3,5,-5],[-8,-6,-3,-3,6,4,3,-4,10],[-3,-9,2,-9,-10,5,-3,-10,-2],[-6,2,6,-5,-5,5,-3,10,-9],[-1,7,5,9,-5,-9,-5,-3,-4],[-2,10,-9,5,-3,-6,-7,-1,8],[-8,-3,9,-1,6,1,5,-8,3],[9,-3,-10,5,6,4,1,3,5],[8,6,4,-4,1,3,1,-9,-6]],[[-3,-10,6,-3,6,-3,-7,8,4],[1,10,-10,-5,9,-7,-6,-6,7],[10,9,7,-8,-2,10,-10,-6,4],[-7,8,6,1,-8,-10,-10,-7,6],[-10,10,1,-10,2,3,-1,-8,6],[-8,8,5,1,6,-4,-3,7,6],[3,10,1,3,4,5,-7,-9,9],[1,-9,9,9,8,5,-5,2,-6],[-9,-9,2,4,-8,-4,-7,8,-2]],[[-9,-9,9,3,-2,1,9,9,-6],[-1,2,-1,8,-9,-6,-5,4,-4],[-8,8,1,8,-3,10,-9,8,-2],[-6,-1,-9,8,1,-8,4,3,5],[-5,-6,1,-8,6,-2,6,-1,4],[3,-5,-1,-1,-10,9,8,10,2],[9,2,5,6,-3,-8,8,-7,6],[-8,5,1,5,9,5,-9,-1,-4],[6,-10,8,5,1,-10,2,-6,-10]],[[-4,-8,10,-6,10,9,-4,5,-3],[-3,-8,2,1,-10,2,4,2,-9],[-5,-3,-2,2,-9,-1,-7,-3,-9],[7,-9,-5,-4,9,10,10,4,-4],[-8,-4,3,-9,10,-9,9,8,-10],[10,-3,2,8,-3,-5,-1,-3,-10],[-10,9,5,10,-2,1,-1,-6,4],[10,-9,-6,-7,-9,-2,9,2,-4],[3,-10,-2,7,-5,-8,2,-1,-8]]], dtype = "int64")#candidate|688|(14, 9, 9)|const|int64
bop_689 = relay.greater(var_687.astype('bool'), relay.reshape(const_688.astype('bool'), relay.shape_of(var_687))) # shape=(14, 9, 9)
func_497_call = mod.get_global_var('func_497')
func_498_call = mutated_mod.get_global_var('func_498')
call_695 = relay.TupleGetItem(func_497_call(), 0)
call_696 = relay.TupleGetItem(func_498_call(), 0)
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
const_701 = relay.const([-5.542618,1.300209,-0.844953,-7.009403,8.511400,8.938486,1.532409,-1.859524,-1.107107,7.269982,-5.755171,3.723149,-7.639449,2.412203,-6.589655,7.573637,-8.046891,5.507829,-1.808350,3.027079,8.672537,9.661458,-0.037258,9.178888,-7.640210,-2.384368,-0.227073,1.301985,-6.540425,-6.900977,7.831164,-6.803411,-8.603891,-9.190784,6.574301,-1.184113,9.511829,4.532724,-5.258739,-1.619990,-4.249341,4.879826,7.519845,2.548159,2.044378,-7.689513,5.487471,-8.118496,8.304987,-0.202247,-3.282764,2.852560,-4.872837,-4.350407,-3.993309,3.333041,5.384519,3.870770,8.891430,-6.222744,-6.452929,7.720742,6.420502,4.681842,6.487451,-7.513301,-2.213402,5.314644,-6.227939,4.111231,-3.129471,4.102181,-4.830394,-0.270117,8.367716,-5.120272,-7.871152,9.307297,-4.598018,-4.510658,-7.429980,3.333325,-7.633131,8.088943,-7.841382,1.433728,-6.118332,-2.976090,8.367974,-9.698913,-9.254045,-6.886638,2.846565,-5.352262,-7.992348,8.294297,7.594092,-7.686757,4.185514,0.538790,-5.709315,-6.836413,5.844924,6.572110,-6.186836,-2.081454,7.939474,7.544748,-7.536013,-6.319007,-2.792520,-7.558164,-8.196129,3.732787,-2.870349,-0.217494,-2.885738,6.103064,5.716057,-6.778076,1.902843,-3.723571,-7.340660,3.146075,-4.875540,0.675295,5.836247,-3.338560,-2.919909,3.165819,-0.093735,-2.424873,-1.178408,6.970007,-8.014429], dtype = "float64")#candidate|701|(135,)|const|float64
call_700 = relay.TupleGetItem(func_277_call(relay.reshape(const_701.astype('float64'), [9, 15, 1])), 0)
call_702 = relay.TupleGetItem(func_280_call(relay.reshape(const_701.astype('float64'), [9, 15, 1])), 0)
output = relay.Tuple([bop_689,call_695,call_700,const_701,])
output2 = relay.Tuple([bop_689,call_696,call_702,const_701,])
func_707 = relay.Function([var_687,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
var_708 = relay.var("var_708", dtype = "int64", shape = (14, 9, 9))#candidate|708|(14, 9, 9)|var|int64
output = func_707(var_708)
func_709 = relay.Function([var_708], output)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_724 = relay.TupleGetItem(func_420_call(), 0)
call_725 = relay.TupleGetItem(func_421_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
var_730 = relay.var("var_730", dtype = "int64", shape = (9, 126))#candidate|730|(9, 126)|var|int64
call_729 = relay.TupleGetItem(func_707_call(relay.reshape(var_730.astype('int64'), [14, 9, 9])), 3)
call_731 = relay.TupleGetItem(func_709_call(relay.reshape(var_730.astype('int64'), [14, 9, 9])), 3)
const_735 = relay.const([[7,-6,2,6,1,-5,-5,4,-8,-1,3,4,-10,-6,-3,10,1,-1,-5,-2,8,-9,8,4,8,1,-3,-5,6,-9,-4,-10,-9,10,9,10,9,8,-5,-5,10,-6,1,-5,5,-5,-4,-6,6,-9,-7,-2,-10,-6,-5,-2,7,5,3,6,-5,-9,-7,-4,-2,-10,3,7,-2,-2,4,-1,4,-10,7,7,8,-1,-4,10,7,6,9,5,6,10,1,-10,7,-4,-7,-6,-8,2,9,7,-1,8,-6,-3,8,2,-5,4,6,8,-8,10,9,-7,3,8,7,-6,-7,-5,2,-4,-4,1,-8,-3,3,-4,7,-5],[-5,6,7,7,1,-10,-1,-2,-5,-3,3,-9,1,-1,5,9,-8,-4,-7,10,-2,10,5,8,-4,2,7,4,-7,6,-2,5,-2,-7,-1,8,5,7,-10,1,6,-3,-9,10,-3,-9,1,-7,3,3,-10,7,1,-5,-9,-6,2,-7,-6,6,-3,-8,-6,-9,-8,-3,5,4,-4,-6,-9,-7,2,1,-2,9,9,2,-4,-6,-5,-3,-1,-8,-7,-9,9,-7,-1,-8,3,-8,5,-2,3,1,9,10,-10,6,-5,6,-2,-2,1,-7,7,9,-7,3,8,-10,10,8,10,-1,-8,8,10,-4,2,-5,1,5,4,-10],[3,-9,9,7,1,4,-5,-3,4,7,-1,5,6,-1,-7,3,10,5,9,-9,-1,4,-7,2,4,-5,2,8,9,10,-10,-8,-5,10,-6,-8,3,-5,-9,-2,-6,10,9,8,7,8,9,10,10,1,10,-4,-1,5,-6,1,-6,-2,8,6,7,5,-9,-1,-6,4,-10,-10,9,-1,2,9,-4,4,-10,-9,4,3,10,10,-4,1,5,7,7,-9,9,-9,-8,4,5,2,-9,1,-7,-5,-9,9,10,-8,-3,5,4,4,9,7,-3,-3,4,-2,-7,5,5,-10,1,1,-6,7,-10,-1,1,5,8,8,2,-6],[9,6,5,-9,5,-10,6,-10,-10,-9,8,-9,-10,10,-5,4,8,-7,8,-1,8,4,1,-4,7,-6,-5,-3,9,8,2,9,-4,4,6,4,7,10,6,-10,5,-7,-8,7,6,3,-1,-9,-1,-4,-8,-9,-10,2,-2,8,8,-10,-6,6,-6,1,1,10,-2,-7,7,-5,6,5,-2,5,-8,10,6,9,7,9,9,10,-8,-4,-4,5,10,9,-5,-6,1,-9,2,-1,8,-6,1,-2,4,7,-7,-1,-2,-1,-5,10,-2,5,8,4,-7,-5,-10,-9,-3,4,9,-10,-6,-8,9,8,-10,7,10,4,-6,6],[-5,10,-3,1,2,5,-2,10,4,3,3,-1,-3,-10,3,-3,-5,10,7,-2,-1,-8,3,-4,-8,-10,-7,5,6,-7,3,1,4,6,3,10,-8,-8,-6,7,-7,6,9,-2,-7,8,-10,8,10,-5,5,-8,-6,3,7,8,10,-8,5,6,10,2,4,-3,-5,9,8,2,-2,-7,-6,4,1,6,9,-6,7,10,7,4,-4,1,-10,5,7,-2,-9,10,6,3,-8,-6,-8,-4,2,6,-3,-7,9,7,-3,10,5,9,-8,1,-3,2,-5,-6,-6,-2,-9,-6,-8,4,-1,-3,-8,10,-7,1,9,-9,2,1],[8,-9,-10,-3,7,2,-6,6,7,8,-8,4,-4,4,-10,4,-6,-3,9,7,-7,-5,3,-5,-9,4,3,7,-1,-1,-5,9,9,10,-9,-3,-7,7,2,-10,-4,10,-2,-5,9,-6,-3,6,6,-2,-4,-3,-5,-10,-4,-6,5,-6,-3,4,8,-6,4,5,-1,-6,1,-5,2,3,-6,-2,5,1,-10,-1,4,9,1,-9,8,7,-7,-8,-10,2,-10,-10,-4,-4,-6,3,4,10,-6,10,-4,-7,-1,-9,6,8,8,10,9,-8,-10,-6,5,-4,3,-8,2,2,-10,6,-2,1,-4,-2,4,-7,3,3,-9,10],[10,3,-5,7,3,1,-10,5,-3,9,9,4,-1,-1,-3,-2,-10,6,7,-1,7,-8,-4,10,-2,-5,-5,6,-7,6,-9,-6,3,-4,-5,3,-9,-8,-5,-10,-7,1,-5,10,3,3,-6,1,-1,10,-2,-6,5,3,4,9,10,7,-5,9,-5,-2,-1,8,7,-8,4,-9,-9,9,8,7,7,5,-3,2,7,6,-6,-2,6,-4,-5,9,7,-9,7,-3,2,-8,10,-2,3,-7,-6,-2,6,-5,8,6,4,-10,-3,-5,1,-9,-3,-10,-1,-5,-5,-9,4,-3,-8,10,6,2,3,6,1,8,8,-10,4,-6],[-4,-1,9,-3,-3,-8,2,-10,-9,2,-2,6,8,-9,-1,1,-9,4,-6,-4,1,-2,6,-10,6,7,-2,-10,-8,1,1,5,-6,-8,7,5,-8,2,7,-10,-6,5,-9,6,-1,7,3,-1,-10,-3,-5,-8,5,6,2,7,5,5,6,-1,8,-10,-9,-10,-2,-9,-3,-9,-5,-10,-2,-6,-10,1,2,-4,10,-1,-5,-10,-6,-3,4,-7,8,9,-6,-9,7,4,-1,-10,-10,-2,4,1,10,10,9,-6,-5,-9,9,-9,7,6,10,1,-8,5,8,3,4,-4,1,2,-3,6,8,-10,9,-4,-3,8,-9,-3],[-3,-5,-10,-1,-8,-6,5,-5,-9,7,1,6,-8,3,-1,4,-5,-2,9,7,-8,8,-4,6,8,-1,7,-2,6,-2,-4,-3,-7,-7,10,-4,6,2,5,-5,-3,1,-6,3,-8,8,-1,-4,-6,5,-4,6,10,-2,-6,-9,3,-7,3,-2,-4,7,-1,-4,-2,5,-7,-6,9,-4,-2,3,3,6,-9,8,-9,9,-6,9,1,3,-6,-6,6,-1,-5,6,4,7,-10,-9,2,1,2,-5,5,-2,7,-8,-2,-3,-3,8,-3,-5,9,-2,-1,-8,-4,-7,-1,1,-6,2,10,-4,6,-2,-6,10,10,-8,-6,5]], dtype = "int64")#candidate|735|(9, 126)|const|int64
bop_736 = relay.less_equal(var_730.astype('bool'), relay.reshape(const_735.astype('bool'), relay.shape_of(var_730))) # shape=(9, 126)
output = relay.Tuple([call_724,call_729,bop_736,])
output2 = relay.Tuple([call_725,call_731,bop_736,])
func_746 = relay.Function([var_730,], output)
mod['func_746'] = func_746
mod = relay.transform.InferType()(mod)
var_747 = relay.var("var_747", dtype = "int64", shape = (9, 126))#candidate|747|(9, 126)|var|int64
output = func_746(var_747)
func_748 = relay.Function([var_747], output)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_759 = relay.TupleGetItem(func_238_call(), 0)
call_760 = relay.TupleGetItem(func_239_call(), 0)
output = relay.Tuple([call_759,])
output2 = relay.Tuple([call_760,])
func_763 = relay.Function([], output)
mod['func_763'] = func_763
mod = relay.transform.InferType()(mod)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mutated_mod.get_global_var('func_763')
call_764 = func_763_call()
output = call_764
func_765 = relay.Function([], output)
mutated_mod['func_765'] = func_765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_559_call = mod.get_global_var('func_559')
func_560_call = mutated_mod.get_global_var('func_560')
call_795 = relay.TupleGetItem(func_559_call(), 0)
call_796 = relay.TupleGetItem(func_560_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_809 = relay.TupleGetItem(func_264_call(), 0)
call_810 = relay.TupleGetItem(func_266_call(), 0)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_815 = relay.TupleGetItem(func_420_call(), 0)
call_816 = relay.TupleGetItem(func_421_call(), 0)
output = relay.Tuple([call_795,call_809,call_815,])
output2 = relay.Tuple([call_796,call_810,call_816,])
func_817 = relay.Function([], output)
mod['func_817'] = func_817
mod = relay.transform.InferType()(mod)
mutated_mod['func_817'] = func_817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_817_call = mutated_mod.get_global_var('func_817')
call_818 = func_817_call()
output = call_818
func_819 = relay.Function([], output)
mutated_mod['func_819'] = func_819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_829 = relay.TupleGetItem(func_763_call(), 0)
call_830 = relay.TupleGetItem(func_765_call(), 0)
output = relay.Tuple([call_829,])
output2 = relay.Tuple([call_830,])
func_841 = relay.Function([], output)
mod['func_841'] = func_841
mod = relay.transform.InferType()(mod)
mutated_mod['func_841'] = func_841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_841_call = mutated_mod.get_global_var('func_841')
call_842 = func_841_call()
output = call_842
func_843 = relay.Function([], output)
mutated_mod['func_843'] = func_843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_497_call = mod.get_global_var('func_497')
func_498_call = mutated_mod.get_global_var('func_498')
call_865 = relay.TupleGetItem(func_497_call(), 2)
call_866 = relay.TupleGetItem(func_498_call(), 2)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_884 = relay.TupleGetItem(func_817_call(), 2)
call_885 = relay.TupleGetItem(func_819_call(), 2)
output = relay.Tuple([call_865,call_884,])
output2 = relay.Tuple([call_866,call_885,])
func_904 = relay.Function([], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
output = func_904()
func_905 = relay.Function([], output)
mutated_mod['func_905'] = func_905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_944 = relay.TupleGetItem(func_420_call(), 0)
call_945 = relay.TupleGetItem(func_421_call(), 0)
var_946 = relay.var("var_946", dtype = "float64", shape = (2, 9, 6))#candidate|946|(2, 9, 6)|var|float64
bop_947 = relay.multiply(call_944.astype('int16'), relay.reshape(var_946.astype('int16'), relay.shape_of(call_944))) # shape=(2, 9, 6)
bop_950 = relay.multiply(call_945.astype('int16'), relay.reshape(var_946.astype('int16'), relay.shape_of(call_945))) # shape=(2, 9, 6)
output = relay.Tuple([bop_947,])
output2 = relay.Tuple([bop_950,])
func_951 = relay.Function([var_946,], output)
mod['func_951'] = func_951
mod = relay.transform.InferType()(mod)
var_952 = relay.var("var_952", dtype = "float64", shape = (2, 9, 6))#candidate|952|(2, 9, 6)|var|float64
output = func_951(var_952)
func_953 = relay.Function([var_952], output)
mutated_mod['func_953'] = func_953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_968 = relay.TupleGetItem(func_605_call(), 0)
call_969 = relay.TupleGetItem(func_607_call(), 0)
output = relay.Tuple([call_968,])
output2 = relay.Tuple([call_969,])
func_987 = relay.Function([], output)
mod['func_987'] = func_987
mod = relay.transform.InferType()(mod)
output = func_987()
func_988 = relay.Function([], output)
mutated_mod['func_988'] = func_988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_1007 = relay.TupleGetItem(func_264_call(), 0)
call_1008 = relay.TupleGetItem(func_266_call(), 0)
output = call_1007
output2 = call_1008
func_1010 = relay.Function([], output)
mod['func_1010'] = func_1010
mod = relay.transform.InferType()(mod)
mutated_mod['func_1010'] = func_1010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mutated_mod.get_global_var('func_1010')
call_1011 = func_1010_call()
output = call_1011
func_1012 = relay.Function([], output)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_1028 = relay.TupleGetItem(func_264_call(), 0)
call_1029 = relay.TupleGetItem(func_266_call(), 0)
output = relay.Tuple([call_1028,])
output2 = relay.Tuple([call_1029,])
func_1043 = relay.Function([], output)
mod['func_1043'] = func_1043
mod = relay.transform.InferType()(mod)
output = func_1043()
func_1044 = relay.Function([], output)
mutated_mod['func_1044'] = func_1044
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1157 = relay.const([[[-4.554148,7.581261,6.680057,-9.066792,2.950455,3.866378,2.170932,-0.831417,0.835770,-4.331533,3.153257],[7.181365,1.895786,8.002738,-3.822371,9.032817,-8.819612,3.918265,-3.758169,4.387727,7.046850,-1.443285],[6.819681,6.371683,-7.475726,-5.862911,-8.755406,-6.549828,-6.842644,9.323269,0.245945,4.073409,1.418011],[3.896591,-1.518638,2.262005,4.061458,3.046821,-4.609403,5.515379,-1.688567,-5.140400,-1.028799,1.931458],[5.004727,0.163922,8.584718,-5.180535,4.382802,1.934120,8.924992,2.728762,-4.788659,5.795016,-9.948453],[4.077271,-4.057513,1.853592,2.049613,9.892325,2.680339,7.969228,1.821082,9.374973,0.843399,7.822796],[0.900397,4.394721,9.406176,9.607009,-4.250428,-6.208829,-1.165732,2.227393,-4.399473,-7.798292,1.027366],[2.352915,-9.722548,-5.185056,2.915132,-7.249404,-6.781188,-7.184019,-3.148008,6.509416,-8.075628,-3.863200],[-5.830244,-7.110625,-7.783878,-8.478000,-2.004058,4.453013,7.048793,-8.020456,1.906082,3.603681,6.679928],[8.543451,8.521128,-1.991783,-8.461705,7.141773,-5.234842,-0.242918,-6.823167,-0.507346,-0.783071,2.210560],[2.989407,-9.749611,-4.418976,1.397389,9.612455,-3.947391,1.405538,-6.952981,5.555599,-5.498798,-7.844617],[-0.259359,-5.992555,5.781125,-9.966671,-6.960971,7.734977,-3.191592,-6.124465,3.413441,-2.358030,8.293640],[-9.460171,-0.835431,9.843238,6.562943,0.817290,-9.431880,-9.342661,-1.565630,2.964620,2.769027,8.836215],[-0.209520,9.266393,6.275262,0.264296,1.038339,-0.277835,3.870717,0.307681,6.069582,6.569217,-7.620184],[-0.608236,-3.249210,4.197163,-1.875652,-1.552889,-1.115762,-9.500520,3.507743,-7.343118,8.733699,-2.636111]],[[-1.534140,3.451770,-0.520862,-5.344478,-9.142956,6.748627,-1.372418,-2.936130,3.574452,5.695625,-0.453113],[7.230839,-5.948567,6.755755,2.130852,-2.416144,3.247837,0.358086,-3.526434,-1.830583,-0.095003,-6.258259],[-2.156251,5.248358,3.772803,5.808225,-8.291706,9.849324,5.718826,-7.282231,3.001789,-3.260143,-5.457917],[-4.111578,5.176932,-3.835248,8.512578,-7.762758,4.215125,1.111874,6.329126,1.659824,-4.781949,-5.359199],[9.057679,-9.243898,3.228344,7.961266,-7.668271,2.743051,-4.651674,-4.810546,-6.383899,9.394131,-8.842432],[-8.672661,1.555300,-8.962976,-5.619563,3.229896,4.287459,-0.505043,3.677319,4.977641,-1.227313,2.167860],[-7.480901,-4.961895,1.471309,-3.599151,-1.755997,7.098623,-3.087396,4.283365,-0.022213,-5.485481,-7.141968],[-9.731899,-4.556139,-8.774112,-4.608155,1.815641,1.860076,2.303759,5.402407,-7.279532,-2.759412,-5.112221],[9.059993,-6.406676,-2.202546,-3.457431,4.909044,-4.778241,-0.550862,-1.845227,0.382806,9.275627,3.396832],[2.670662,-3.102920,8.478061,7.918521,-1.486424,1.457989,-2.500340,9.153624,8.521883,7.606390,4.982726],[-4.724104,7.256618,6.895709,-0.839427,5.605356,-5.858724,1.743720,3.954068,3.337334,-4.366732,-2.501206],[-3.651482,2.865541,-3.054467,-4.587880,-5.571706,-5.449866,-4.577203,-3.199907,-5.211941,-6.115097,8.079687],[-0.009268,-2.292329,-1.015736,7.448588,2.036341,9.561313,7.368048,7.215688,3.787059,-4.137685,2.556810],[7.838173,2.742394,-2.908772,-5.026658,4.257529,-4.116420,-8.932736,-6.029954,1.392392,-3.892673,-7.543653],[-5.645679,7.253801,9.308608,3.207582,-6.317148,-7.291563,4.574433,0.913580,2.717219,-2.322805,-6.068999]],[[-2.023979,-0.769156,-1.569497,-6.584779,-1.500644,-0.734292,-1.424886,7.850065,8.750719,9.588450,9.927280],[-5.499549,-0.344405,-6.521488,1.561228,-0.967612,2.649953,2.798451,8.682368,1.876705,-2.565805,6.289034],[3.601833,5.422219,-7.223180,5.672581,4.513588,-0.090303,4.992308,-7.796143,7.360216,-2.252932,-1.377635],[-8.753415,-1.893105,1.245719,3.141613,6.038055,-8.113994,8.815942,6.390590,-6.053485,-5.214450,9.151834],[0.823053,-3.369855,-8.723396,-4.391642,-5.728861,-8.462249,-2.427283,-5.045427,-1.339552,-5.611631,-8.852727],[8.090954,-2.741080,-0.419111,-0.298793,-4.765380,2.007227,-5.601501,-5.417083,-8.911561,4.457968,6.496567],[8.822907,9.902176,0.391468,-0.505074,-0.363661,-1.690020,2.874839,3.405583,-8.892106,-2.515099,2.343415],[3.985468,3.806398,-9.650537,-1.319251,-7.304155,6.760873,4.980216,1.983417,-3.594546,9.227735,7.270747],[7.072393,-5.638252,-0.143688,-0.974943,2.265311,5.408164,0.255587,1.095400,3.805655,4.439735,2.807268],[-7.340276,-3.623415,-2.910082,0.388656,9.277433,1.420915,-4.581719,-4.084573,6.434914,-9.197589,-2.594085],[-5.544236,7.270746,3.314732,5.521576,1.591569,6.156067,-7.644717,1.281569,1.752371,2.735985,-8.639775],[7.461617,-8.543154,-2.412789,7.329376,-8.696640,-7.793573,-1.736715,8.639711,-8.254198,7.837681,-9.119197],[-0.568851,6.379300,-4.101376,-9.898521,-1.946996,1.083737,-0.839256,6.731113,-3.583771,4.324125,5.954427],[-4.960997,7.786125,2.624576,6.275424,9.217006,9.181086,0.659462,7.699620,-8.073259,1.331909,-3.012689],[0.454972,-4.509803,2.145435,-3.317166,1.141591,7.700701,2.127319,4.537972,9.275970,-9.309463,2.639525]],[[-6.036590,8.123980,-2.451190,6.545486,-9.887167,-8.015664,-5.622371,0.201259,-2.467253,-5.168812,6.185202],[-6.393664,-2.156282,1.365093,-1.259647,-1.800208,0.771676,2.806721,6.956893,-8.653043,8.764688,-7.672179],[7.703053,-7.925266,-3.698032,7.531965,-5.449895,-2.166686,1.099993,-8.084242,-6.314239,9.630325,-8.750608],[9.879338,8.182872,-0.109557,-9.597728,-3.403033,-5.373409,8.839613,2.448836,-0.216759,-0.955812,-2.699110],[2.900487,0.883133,-8.024144,0.591660,8.589857,-6.792860,8.590103,8.576358,7.906226,3.560778,-7.332049],[-0.771060,0.180334,8.786937,6.451253,-3.738670,-5.788037,-0.357606,-5.872464,-4.695148,-0.773638,-8.339557],[9.353420,0.481287,0.165500,-3.120441,4.535297,-7.879634,7.570409,-8.155963,7.958578,5.343512,-8.257894],[-1.805636,-7.167143,-7.549666,2.961683,-9.401227,-1.166550,9.384990,-9.548886,9.122654,-0.376693,-9.739134],[0.672051,-9.736458,5.860183,8.719630,1.986573,-0.633867,-8.066969,-2.014286,0.507278,-2.453610,-1.938266],[-9.987907,6.035022,-8.907651,3.066529,8.842515,3.329793,6.764993,-5.259200,-0.338183,4.588294,8.104222],[4.717607,3.361785,-2.383500,-9.266011,-4.661177,9.067417,-3.530635,5.671906,-3.223230,7.000351,9.927143],[7.137745,7.924867,8.307954,-6.757318,-4.389874,6.996436,5.034980,7.343731,-7.921241,-7.674354,7.402140],[-1.653052,-1.333139,9.704447,-0.700971,-1.506133,-7.511752,-0.216258,-9.920135,-2.311625,-0.991096,0.893449],[6.723071,-4.419489,-3.192405,4.055399,3.826263,-0.946729,4.282826,6.966426,-7.115842,9.989067,7.716784],[2.143384,-4.851052,-1.125209,3.653587,-7.499143,-4.506010,-9.809441,7.836913,-6.411866,1.920745,-6.716968]],[[2.255949,8.180153,-8.016364,-8.908748,-5.125117,0.343858,-8.077131,9.877138,4.274412,-8.761914,-1.188974],[-7.756443,1.935121,8.595892,-9.731299,3.802621,5.035872,2.744673,7.485059,-6.613160,0.801288,-7.355217],[1.349961,0.847671,-0.965059,5.201318,6.384113,-3.536725,-6.192669,2.372726,-9.534569,-0.736848,8.027957],[8.692928,-5.224215,-5.486103,2.865873,1.336364,1.609985,-7.978105,-4.549275,-5.856012,4.623233,-5.817083],[-3.778069,-1.704185,-7.837035,5.506430,8.621113,-9.953877,-2.669054,9.098895,-6.825498,-6.244115,-4.233217],[1.044652,-9.535585,-4.170987,-9.250907,-1.206510,-2.920165,8.490142,1.851838,6.143128,2.271708,-2.393673],[-5.785460,-5.731114,-0.318787,-9.751276,0.127446,-2.651497,-2.209585,5.752512,2.047464,0.849998,7.728336],[5.984767,3.722510,7.545975,-5.154593,-7.094742,2.235442,8.805056,-9.865277,-4.184282,5.398510,2.698384],[3.594265,1.850505,-0.349805,4.575583,9.953094,4.631904,3.459184,-0.281268,-2.061757,-4.062990,4.522582],[-3.807290,-3.224558,7.836839,3.489875,0.553509,6.836616,5.651082,8.734180,3.892068,7.842839,-9.086454],[5.373244,8.285327,0.434281,-7.514898,4.806658,-0.822029,4.937480,-5.747191,5.269357,-2.070664,-5.331006],[-1.189533,-9.863140,-5.586513,-3.046105,-8.135799,0.340188,-7.023899,4.745433,9.458412,5.932261,-9.848939],[3.430307,4.396503,-8.323375,-8.655620,4.067629,5.167056,-6.333081,-7.337037,-6.423881,7.671075,-8.339366],[-7.557978,-5.091491,-7.984612,-1.728778,-8.217270,3.986721,-2.631455,2.724203,-4.045567,6.756254,-2.456263],[-2.842779,0.677797,9.126529,-2.058624,-1.747912,-8.293124,5.352216,-7.717278,8.927217,8.771370,-4.603404]]], dtype = "float64")#candidate|1157|(5, 15, 11)|const|float64
uop_1158 = relay.erf(const_1157.astype('float64')) # shape=(5, 15, 11)
output = uop_1158
output2 = uop_1158
func_1183 = relay.Function([], output)
mod['func_1183'] = func_1183
mod = relay.transform.InferType()(mod)
mutated_mod['func_1183'] = func_1183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1184 = func_1183_call()
output = call_1184
func_1185 = relay.Function([], output)
mutated_mod['func_1185'] = func_1185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_1188 = relay.TupleGetItem(func_264_call(), 0)
call_1189 = relay.TupleGetItem(func_266_call(), 0)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_1192 = relay.TupleGetItem(func_951_call(relay.reshape(call_1188.astype('float64'), [2, 9, 6])), 0)
call_1193 = relay.TupleGetItem(func_953_call(relay.reshape(call_1188.astype('float64'), [2, 9, 6])), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1194 = relay.TupleGetItem(func_841_call(), 0)
call_1195 = relay.TupleGetItem(func_843_call(), 0)
func_474_call = mod.get_global_var('func_474')
func_477_call = mutated_mod.get_global_var('func_477')
call_1201 = relay.TupleGetItem(func_474_call(relay.reshape(call_1194.astype('float64'), [2, 9, 6])), 2)
call_1202 = relay.TupleGetItem(func_477_call(relay.reshape(call_1194.astype('float64'), [2, 9, 6])), 2)
uop_1207 = relay.sinh(call_1201.astype('float32')) # shape=(1, 135)
uop_1209 = relay.sinh(call_1202.astype('float32')) # shape=(1, 135)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_1214 = relay.TupleGetItem(func_264_call(), 0)
call_1215 = relay.TupleGetItem(func_266_call(), 0)
output = relay.Tuple([call_1188,call_1192,call_1194,uop_1207,call_1214,])
output2 = relay.Tuple([call_1189,call_1193,call_1195,uop_1209,call_1215,])
func_1221 = relay.Function([], output)
mod['func_1221'] = func_1221
mod = relay.transform.InferType()(mod)
mutated_mod['func_1221'] = func_1221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1221_call = mutated_mod.get_global_var('func_1221')
call_1222 = func_1221_call()
output = call_1222
func_1223 = relay.Function([], output)
mutated_mod['func_1223'] = func_1223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_1275 = func_1183_call()
call_1276 = func_1183_call()
var_1285 = relay.var("var_1285", dtype = "float64", shape = (5, 15, 11))#candidate|1285|(5, 15, 11)|var|float64
bop_1286 = relay.add(call_1275.astype('uint8'), relay.reshape(var_1285.astype('uint8'), relay.shape_of(call_1275))) # shape=(5, 15, 11)
bop_1289 = relay.add(call_1276.astype('uint8'), relay.reshape(var_1285.astype('uint8'), relay.shape_of(call_1276))) # shape=(5, 15, 11)
output = relay.Tuple([bop_1286,])
output2 = relay.Tuple([bop_1289,])
func_1308 = relay.Function([var_1285,], output)
mod['func_1308'] = func_1308
mod = relay.transform.InferType()(mod)
mutated_mod['func_1308'] = func_1308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1309 = relay.var("var_1309", dtype = "float64", shape = (5, 15, 11))#candidate|1309|(5, 15, 11)|var|float64
func_1308_call = mutated_mod.get_global_var('func_1308')
call_1310 = func_1308_call(var_1309)
output = call_1310
func_1311 = relay.Function([var_1309], output)
mutated_mod['func_1311'] = func_1311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mod.get_global_var('func_1010')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1337 = func_1010_call()
call_1338 = func_1010_call()
output = call_1337
output2 = call_1338
func_1340 = relay.Function([], output)
mod['func_1340'] = func_1340
mod = relay.transform.InferType()(mod)
output = func_1340()
func_1341 = relay.Function([], output)
mutated_mod['func_1341'] = func_1341
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1356 = relay.const(-3, dtype = "uint32")#candidate|1356|()|const|uint32
var_1357 = relay.var("var_1357", dtype = "uint32", shape = (6, 10, 2))#candidate|1357|(6, 10, 2)|var|uint32
bop_1358 = relay.not_equal(const_1356.astype('bool'), var_1357.astype('bool')) # shape=(6, 10, 2)
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_1365 = func_1340_call()
call_1366 = func_1340_call()
output = relay.Tuple([bop_1358,call_1365,])
output2 = relay.Tuple([bop_1358,call_1366,])
func_1376 = relay.Function([var_1357,], output)
mod['func_1376'] = func_1376
mod = relay.transform.InferType()(mod)
var_1377 = relay.var("var_1377", dtype = "uint32", shape = (6, 10, 2))#candidate|1377|(6, 10, 2)|var|uint32
output = func_1376(var_1377)
func_1378 = relay.Function([var_1377], output)
mutated_mod['func_1378'] = func_1378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_1383 = relay.TupleGetItem(func_763_call(), 0)
call_1384 = relay.TupleGetItem(func_765_call(), 0)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
const_1386 = relay.const([8.752829,-7.281948,-5.272889,-4.608478,-6.179807,-5.436190,0.949521,-6.684718,2.077806,-5.814529,-3.218509,-5.953084,2.410529,9.776259,5.720355,-9.833325,-1.178711,-2.374789,-5.166390,0.806657,-3.389827,-0.771356,-2.242615,-3.783715,-6.549600,-5.329981,-8.824593,-8.287496,-2.573374,7.004829,-6.445337,1.440393,-6.016293,-7.693947,-6.808861,-3.737543,9.540522,-2.907922,6.898233,9.932910,-5.253970,-2.527579,-0.453456,-7.725078,-6.150790,1.397627,2.098972,-0.187243,-8.307602,-5.888286,-5.800689,4.355321,3.318568,-0.954037,-5.955585,-0.498437,1.169629,-8.297965,-6.819654,5.413931,-6.018046,0.808317,3.847834,2.698940,-0.757965,-4.316320,-6.885118,-5.565163,-6.657819,3.991711,-0.343144,1.234362,-3.274810,-2.853172,-5.183499,-6.808102,-1.866885,-8.328715,1.948143,3.429953,9.436957,-8.434532,-1.383780,9.265770,1.275653,0.501517,-4.048096,-5.696813,-8.594565,5.377174,-9.361273,8.571787,-1.767737,-3.199113,-0.532135,4.884470,6.056718,9.701304,1.589821,-1.921436,1.191753,-0.946819,-6.853288,6.817008,6.272302,0.914641,-1.831160,-1.669071,-9.505647,-8.523243,7.064604,-1.127779,4.969304,-0.123914,-7.336687,-8.901799,-0.321729,-4.021161,4.312318,-0.945791,-4.843116,-5.868275,-1.210471,7.730561,4.537319,6.704443,-9.179420,7.203406,-4.246280,-4.385796,1.525947,-5.817900,2.782608,-3.628995,-4.569185,-1.757102,1.238480,1.782669,6.344719,-5.868952,-6.492636,8.601105,-2.559317,9.357698,-3.836226,2.100364,-7.316253,-6.996646,-7.490164,-6.227334,2.389709,-7.641359,6.817948,-3.967335,-3.156748,2.281606,5.153072,6.598550,3.449602,-6.557516,-4.127868,2.588419,2.939001,5.574311,6.964103,8.546063,-1.948873,8.365306,1.178844,-8.113236,-2.438934,5.172553,4.482948,3.252786,9.473883,-0.210610,-4.441996,-5.330039,1.838120,3.717770,2.503483,2.167217,-6.413358,0.981825,8.518928,-1.264807,4.200063,1.950726,-0.644248,1.561977,-8.998091,-0.467511,-1.785489,-2.792252,-5.995638,-8.905552,-9.728280,8.301806,-8.629674,9.791057,-7.866710,9.637226,9.254201,-9.766789,-7.736293,5.576998,-5.256446,1.288991,-1.465679,-6.805051,5.293235,-2.959997,1.630820,6.810899,-8.374055,5.276876,-6.887281,-1.761086,0.736882,3.112812,-4.639301,-6.386014,-0.792344,2.855962,7.644979,9.749315,-4.691958,3.869115,7.434338,7.456360,9.742214,3.418197,-1.985881,3.354398,-1.045435,0.070605,6.516549,6.437933,5.385946,-4.724242,3.217194,2.211290,9.467743,0.525531,2.969965,-8.974372,8.273004,-4.021061,8.539995,9.693728,6.100098,-8.275344,-1.999751,-3.172728,3.800441,-4.014227,8.882535,-6.769912,-3.260333,5.328984,2.361098,-1.723542,0.846872,-7.062941,-7.406579,9.358588,-9.998342,-1.325593,5.327258,-7.112294,5.976849,4.847660,-1.777679,9.354196,3.805161,5.501943,-4.231792,8.087018,-5.419203,-6.263859,9.617674,-5.365774,-3.031969,-9.262663,-2.024084,-8.673005,-5.305144,-5.820601,5.180024,6.559137,-0.655577,8.554321,6.236341,4.202184,-3.436002,-6.794883,0.761746,5.244350,-6.413003,7.108972,-4.980292,-8.308492,-9.422621,-7.057547,6.187656,-8.585446,-9.647740,-1.355070,0.221512,2.621081,-2.521781,2.616683,0.722885,8.630959,4.139955,-0.502982,-0.644087,-0.021810,0.309095,-9.966202,-5.112328,-5.425096,0.777883,-5.875484,-9.857365,-0.102751,-6.879368,-0.030529,3.873911,8.327474,9.346778,-7.574694,-9.052178,-5.856931,8.882313,-0.791870,0.865796,-4.234916,-7.418598,6.635510,5.237470,7.621739,-7.406951,3.340185,6.497635,-9.356442,-5.025684,-0.767938,4.132291,-6.134215,5.253358,-1.689662,1.862527,4.914495,-7.591223,7.935991,0.092373,3.858176,-0.459158,8.027647,0.968605,-1.849129,-7.649143,-3.715070,9.330383,4.568566,-6.986453,-4.438540,-4.938285,2.903545,-1.853531,-3.715106,3.612307,0.514197,-9.257861,4.987141,-3.490889,5.182479,-5.827729,-9.699573,-7.464607,-5.535868,-8.656260,4.536783,6.208660,0.161427,4.205268,3.661559,5.395141,-7.079904,7.026551,6.494039,-1.677064,-9.976532,-0.994079,-4.281404,-6.423819,8.658044,6.451187,-6.340544,2.520207,6.153785,5.728498,5.096591,8.868630,0.756303,2.182759,1.914504,6.717501,-2.297212,-4.847240,8.070234,-6.341877,4.004516,9.647124,-7.615550,9.231517,3.199421,-3.473345,2.303779,-8.561229,-5.639382,1.480321,8.789837,9.774327,7.215193,9.436240,5.045977,7.176165,9.898465,-2.891603,-9.642635,8.505003,-2.200522,-6.122828,-7.511751,-1.263578,4.897476,-3.085591,5.909869,-7.082213,6.078714,7.728137,3.738410,-0.936541,4.717246,-1.645601,-0.520782,3.416872,8.977801,4.166158,-8.808140,-7.938026,1.782944,6.598595,8.485619,7.826240,3.487397,2.478818,-1.135400,2.719886,-3.317820,3.928483,-2.013480,1.238648,-6.006913,8.760474,6.422705,-4.001271,-5.236130,6.551140,-1.309350,-6.464715,8.239499,-5.168894,9.916172,9.294730,-4.780598,0.830065,2.300404,-1.553405,7.974848,-6.479261,-5.151628,4.294459,-6.362409,-2.527219,-0.425249,-4.876961,-3.603780,9.679870,4.226383,7.483739,2.462188,-9.794764,5.979730,-1.970718,-0.031000,0.714410,-4.162766,4.996136,7.983465,4.774553,-0.485304,6.328344,-1.972535,6.054236,3.986607,9.311022,1.287941,2.144490,4.020179,6.255683,1.354932,-7.407781,4.509973,-1.141032,9.821841,-4.892993,-5.047299,-2.825671,-9.435997,-8.969753,-4.764122,-1.344153,7.775378,-2.282171,-3.912570,-1.785518,2.543248,0.914933,-9.434573,2.465781,6.551288,9.233649,-7.424118,-0.085797,4.826786,-2.109624,8.925470,9.760879,4.905174,8.638707,8.844291,4.304296,-3.948647,-9.535475,-7.254508,-7.672989,8.827222,9.181938,7.281092,8.106369,-7.249119,-4.839810,-3.396995,-0.186754,0.077815,7.386977,3.050185,4.333801,3.079558,-2.596296,-6.327218,2.082614,3.525101,2.638031,2.194549,2.273359,-6.637579,9.252234,-0.232120,-6.243965,6.145486,-9.053830,-4.461060,-7.618326,0.312864,-6.172781,7.465597,-2.730006,-0.725936,6.130446,-1.082886,-0.636935,-1.620798,3.592163,8.165859,-1.794427,-6.238344,-8.320867,6.366837,-8.505174,6.328810,-3.869703,2.579192,2.442701,-8.866504,0.182879,-4.752645,8.864177,3.348456,9.763517,3.575452,2.909720,-0.562458,-2.638349,-8.456443,8.456204,3.515959,-7.294149,-7.738476,1.863888,-4.295657,7.168084,-9.146617,1.637893,5.602585,-4.304368,-6.251843,-7.766984,0.362704,-0.217331,-3.419422,-1.818350,6.786891,-1.791311,-5.690009,-4.730118,-5.443102,0.813793,4.106058,-6.022824,5.548284,9.285273,-7.963330,7.754384,-1.876624,6.148112,6.070703,0.595778,-3.313145,-4.788152,1.491328,8.632019,-9.376776,-6.743860,1.337361,-9.715745,6.073985,-4.052241,-5.600595,-7.810506,-6.026089,7.145881,9.401486,-2.902041,-8.051578,-1.655155,-7.860638,3.061052,1.798010,-6.350608,-1.258371,5.187066,-4.741933,5.428971,0.964543,3.707611,9.914137,8.052932,3.156051,-4.450873,-0.050067,4.061266,-4.816302,7.395735,-3.483270,-2.686318,4.372530,4.309588,3.532605,-3.905755,-1.347681,-3.947620,-2.482611,-3.556348,-4.370582,9.194957,6.392287,3.851432,3.999301,7.855259,-9.926495,-3.393584,-8.744380,0.820820,-8.044748,-9.369018,6.664105,-7.137444,1.825144,-2.360231,2.513953,-3.259452,-9.119247,-4.552627,3.803098,-9.185516,1.225575,3.514600,-2.243127,5.647107,-3.632680,1.548944,4.813652,8.161761,-4.121269,-6.423957,2.880138,-3.113327,-7.563356,5.840605,7.059801,8.071288,-3.828132,-5.811510,2.027518,8.577714,9.117806,3.855733,-1.626830,9.407049,-7.378599,-7.325287,4.102226,-7.605105,3.199670,7.211947,0.659998,8.669593,8.330020,-7.624781,8.641759,-2.700268,-5.752390,4.244267,-6.682104,3.924184,-4.075447,-6.932686,-0.675997,5.794639,-5.120895,-7.506189,4.728583,2.829633,4.143400,2.058179,7.888191,-3.327372,-9.612746,-0.337040,-6.781542,9.150880,7.156580,-9.731748,-2.929817,0.020569,-7.444505,-7.432469,6.610421,-5.358093,2.507397,6.635553,5.307539,-3.197089,-3.872304,-3.043857,-5.582363,4.622838,4.167337,-6.213196,-8.292042,-7.684039,0.948732,-5.576214,-9.289704,-9.626345,2.493642,-8.639141,6.314962,-7.582453,6.714854,-8.121173,-1.777928,2.018709,-9.931077,-7.348827,6.968101,5.636546,2.969122,0.425429,2.187415,-7.045587,-8.008269,1.033113,4.336121,2.778009,4.324981,8.211202,4.227099,2.348660,-3.443231,-7.110456,3.293358,-4.971490,-9.990979,-5.842635,5.463654,-9.741652,-1.057384,7.196282,9.943213,-7.947993,5.943694,-7.169933,0.061157,-3.099864,3.765318,7.159250,-1.643262,-5.253197,-7.199200,-5.422568,1.602065,8.111431,1.795267,3.318631,0.702005,0.804209,0.816728,2.166193,5.520651,-6.870347,1.299425,6.866715,-2.832899,-7.437772,3.102498,-1.066594,5.393308,-7.356490,6.544357,4.888775,1.610940,7.687488,-1.210375,3.275725,-2.721290,2.635382,-0.806820,8.388079,-7.186603,5.159266,6.644932,-5.155541,5.052666,7.606563,-7.340594,3.321442,9.718927,5.180555,4.815199,6.464267,-7.247796,7.959068,-6.183564,7.837901,-6.612258], dtype = "float64")#candidate|1386|(880,)|const|float64
call_1385 = relay.TupleGetItem(func_179_call(relay.reshape(const_1386.astype('float64'), [10, 11, 8])), 0)
call_1387 = relay.TupleGetItem(func_182_call(relay.reshape(const_1386.astype('float64'), [10, 11, 8])), 0)
output = relay.Tuple([call_1383,call_1385,const_1386,])
output2 = relay.Tuple([call_1384,call_1387,const_1386,])
func_1398 = relay.Function([], output)
mod['func_1398'] = func_1398
mod = relay.transform.InferType()(mod)
output = func_1398()
func_1399 = relay.Function([], output)
mutated_mod['func_1399'] = func_1399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_1405 = relay.TupleGetItem(func_420_call(), 0)
call_1406 = relay.TupleGetItem(func_421_call(), 0)
output = relay.Tuple([call_1405,])
output2 = relay.Tuple([call_1406,])
func_1411 = relay.Function([], output)
mod['func_1411'] = func_1411
mod = relay.transform.InferType()(mod)
output = func_1411()
func_1412 = relay.Function([], output)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1485 = relay.TupleGetItem(func_1398_call(), 2)
call_1486 = relay.TupleGetItem(func_1399_call(), 2)
uop_1487 = relay.sin(call_1485.astype('float64')) # shape=(880,)
uop_1489 = relay.sin(call_1486.astype('float64')) # shape=(880,)
output = relay.Tuple([uop_1487,])
output2 = relay.Tuple([uop_1489,])
func_1491 = relay.Function([], output)
mod['func_1491'] = func_1491
mod = relay.transform.InferType()(mod)
mutated_mod['func_1491'] = func_1491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1491_call = mutated_mod.get_global_var('func_1491')
call_1492 = func_1491_call()
output = call_1492
func_1493 = relay.Function([], output)
mutated_mod['func_1493'] = func_1493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_1567 = relay.TupleGetItem(func_238_call(), 0)
call_1568 = relay.TupleGetItem(func_239_call(), 0)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_1577 = relay.TupleGetItem(func_605_call(), 0)
call_1578 = relay.TupleGetItem(func_607_call(), 0)
output = relay.Tuple([call_1567,call_1577,])
output2 = relay.Tuple([call_1568,call_1578,])
func_1583 = relay.Function([], output)
mod['func_1583'] = func_1583
mod = relay.transform.InferType()(mod)
output = func_1583()
func_1584 = relay.Function([], output)
mutated_mod['func_1584'] = func_1584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_1595 = relay.TupleGetItem(func_1491_call(), 0)
call_1596 = relay.TupleGetItem(func_1493_call(), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1635 = relay.TupleGetItem(func_841_call(), 0)
call_1636 = relay.TupleGetItem(func_843_call(), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1653 = relay.TupleGetItem(func_841_call(), 0)
call_1654 = relay.TupleGetItem(func_843_call(), 0)
output = relay.Tuple([call_1595,call_1635,call_1653,])
output2 = relay.Tuple([call_1596,call_1636,call_1654,])
func_1656 = relay.Function([], output)
mod['func_1656'] = func_1656
mod = relay.transform.InferType()(mod)
mutated_mod['func_1656'] = func_1656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1656_call = mutated_mod.get_global_var('func_1656')
call_1657 = func_1656_call()
output = call_1657
func_1658 = relay.Function([], output)
mutated_mod['func_1658'] = func_1658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1729 = relay.TupleGetItem(func_1398_call(), 2)
call_1730 = relay.TupleGetItem(func_1399_call(), 2)
func_1221_call = mod.get_global_var('func_1221')
func_1223_call = mutated_mod.get_global_var('func_1223')
call_1794 = relay.TupleGetItem(func_1221_call(), 1)
call_1795 = relay.TupleGetItem(func_1223_call(), 1)
output = relay.Tuple([call_1729,call_1794,])
output2 = relay.Tuple([call_1730,call_1795,])
func_1807 = relay.Function([], output)
mod['func_1807'] = func_1807
mod = relay.transform.InferType()(mod)
mutated_mod['func_1807'] = func_1807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1807_call = mutated_mod.get_global_var('func_1807')
call_1808 = func_1807_call()
output = call_1808
func_1809 = relay.Function([], output)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1044_call = mutated_mod.get_global_var('func_1044')
call_1864 = relay.TupleGetItem(func_1043_call(), 0)
call_1865 = relay.TupleGetItem(func_1044_call(), 0)
output = relay.Tuple([call_1864,])
output2 = relay.Tuple([call_1865,])
func_1866 = relay.Function([], output)
mod['func_1866'] = func_1866
mod = relay.transform.InferType()(mod)
output = func_1866()
func_1867 = relay.Function([], output)
mutated_mod['func_1867'] = func_1867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1876 = relay.var("var_1876", dtype = "bool", shape = (14, 9, 15))#candidate|1876|(14, 9, 15)|var|bool
var_1877 = relay.var("var_1877", dtype = "bool", shape = (14, 9, 15))#candidate|1877|(14, 9, 15)|var|bool
bop_1878 = relay.logical_and(var_1876.astype('bool'), relay.reshape(var_1877.astype('bool'), relay.shape_of(var_1876))) # shape=(14, 9, 15)
func_1308_call = mod.get_global_var('func_1308')
func_1311_call = mutated_mod.get_global_var('func_1311')
const_1884 = relay.const([6.365783,2.013535,4.118230,-9.198225,5.579384,6.351957,-2.125684,-3.399924,-6.467131,-9.895173,3.512858,-1.368478,-4.089982,9.443707,-4.845382,-1.118844,-8.749909,-5.241896,-3.558666,6.559192,8.393436,5.501532,-6.636250,-7.081587,2.011976,9.295412,4.359538,1.210448,8.945790,6.799111,9.919829,0.170548,-5.264358,6.613647,8.138887,-0.658325,2.839296,-6.771127,-6.122757,-2.921992,9.883878,-8.501211,0.748729,9.596263,-3.664389,-4.708689,-7.965880,5.424134,1.634798,9.445067,-5.688691,6.112139,-0.546175,1.584125,-4.656996,-9.069932,3.761844,-0.962726,6.252776,-4.541785,-7.206513,2.501302,-2.018924,6.376485,8.121814,-0.455310,9.069733,2.895466,-2.056944,-2.600105,-7.896488,-3.416901,2.010937,-8.904018,-6.577266,2.499893,5.344692,1.257827,5.605389,8.141102,-6.496659,-5.715607,6.268819,2.348509,4.077718,-4.356551,-1.767262,6.556593,5.684824,-1.684515,-5.588360,-5.618183,-0.132121,-5.867207,7.281711,-4.883113,9.170308,1.307635,-8.088022,-8.419276,-8.618133,2.207361,-3.737282,-1.476945,-2.274241,4.059803,-6.919279,-2.433371,-3.050727,5.487600,-2.555491,4.918435,-8.826085,-3.419138,5.686180,-5.512576,9.135955,-4.371946,7.704888,4.893200,-7.587878,-4.020399,2.600935,9.557890,8.853253,0.785106,3.504939,-3.683509,9.343208,-2.909327,8.630853,-7.208040,4.897043,-9.553674,7.617288,-5.634114,0.554243,4.347621,-2.319865,-2.308118,1.045737,1.203683,-1.728098,-3.530497,7.405752,-3.238198,-6.691737,4.242137,3.337065,-1.888002,-1.666864,-9.999884,4.802298,-4.555507,3.632659,-2.103985,-6.875287,6.502423,9.655383,-4.715273,-3.233257,4.114280,0.173017,-4.829764,5.512632,3.657536,-5.880977,8.918444,8.949019,4.628981,-9.025842,1.093343,8.244850,1.635243,7.721455,1.136718,-7.974325,-7.397487,-9.189177,-6.989921,5.386941,1.601444,-9.466714,9.409238,-8.241192,-0.872082,-8.006523,3.895925,-6.898293,-0.099337,-7.823617,7.221786,1.417543,-5.353052,0.692954,5.777328,-9.286605,-5.205401,9.782853,6.637681,-9.476079,-5.155508,7.174942,-9.733252,-7.310476,0.164957,2.340053,3.657324,-6.737855,-9.229091,-4.145475,-4.278026,-9.184968,6.469970,3.719565,2.556764,-3.067604,-9.400521,0.489708,4.608623,-4.587768,-3.802146,-3.054041,-0.354888,1.181761,-5.446981,-5.359681,-6.606771,4.727892,-5.550067,-5.443187,-2.556613,7.641211,4.457697,7.767192,-7.001938,8.071342,7.045621,-5.465812,7.503191,-4.043110,6.352220,-7.014869,6.363124,-1.261329,-1.714159,5.269131,7.482736,-7.703154,6.816370,-8.525588,6.450252,-1.828519,1.666708,-1.436011,-1.450662,-2.505381,8.966667,-3.926901,-3.375303,-7.079166,5.711186,3.839180,-5.859758,6.884521,6.534924,3.234339,-4.765433,-1.427019,-3.454234,-3.602148,8.258167,-1.632732,6.292410,-1.266893,5.030359,6.558562,-6.606089,-3.963566,-1.709446,1.325631,3.367350,-5.254418,-0.851701,4.814756,1.605845,-5.241773,-4.735562,6.203703,0.203323,9.342908,-2.069338,2.107912,1.988929,2.840560,-9.464452,5.507944,8.201556,2.468316,-0.350412,-7.462415,-5.771794,7.588040,2.666713,-1.300421,-8.220131,-0.330112,-4.326631,6.611989,0.459883,0.654855,2.414223,1.504876,-9.174344,9.644416,0.451485,-9.416195,-7.965132,-8.798191,-8.095030,-1.554343,-8.610419,1.877267,-3.612215,-3.003011,8.019630,5.490917,-2.364454,4.751926,8.500687,-3.642367,-1.810517,-1.799251,-4.198586,7.100232,-9.290481,8.314763,-1.429761,1.107783,3.592141,-8.431727,-1.229235,-2.260040,-0.268725,7.810506,-6.450757,-1.723854,9.191053,6.856849,5.279631,-9.561276,-2.120207,-3.283699,9.618105,1.405153,2.215918,3.427254,-7.263706,-8.672482,-8.562672,-7.756328,4.266370,6.373913,-8.989157,-3.592487,6.609612,0.471214,-5.388087,-1.562515,4.231539,6.056892,2.603910,-5.898736,-5.425743,-2.088312,8.153821,8.531402,5.747902,3.997922,5.920220,1.735420,-7.590060,-9.254219,-4.069993,-7.282798,-2.501872,-3.492611,4.852868,4.516126,-8.464689,-9.826088,9.803986,-0.122178,-8.325782,-5.238165,-1.670681,5.337961,-0.265378,2.775463,-7.111078,-1.332545,8.859271,5.572778,-6.894441,-6.759575,-6.546893,-5.702068,-6.841893,7.689459,-2.256132,-0.383963,2.966554,1.366294,4.117088,4.640893,2.453652,2.768003,-5.751992,1.601867,2.050523,9.741070,-0.908876,2.295410,3.332504,2.051751,-2.077773,-0.243278,9.850883,4.407160,-8.945603,6.803070,9.934329,7.130786,8.586415,-2.327464,-7.372641,-3.885518,4.618738,-8.046746,-6.360925,-4.779077,1.989613,6.306235,-4.018999,-3.268439,6.709240,-3.738671,-0.175178,-8.091081,-2.294407,-4.370453,4.381140,8.802097,3.569910,4.249121,-6.160523,-4.009616,-7.582852,-1.248243,6.548971,2.359363,-1.173982,5.874625,2.526091,-9.392859,-2.451356,8.495092,-1.575666,-0.370021,-1.371119,3.941530,9.336823,-6.994461,9.715342,-6.876834,7.519188,6.704691,-9.761939,-1.635073,2.751984,9.693335,-7.841849,1.715147,-0.861338,-2.267914,4.125985,9.237169,7.422500,-9.639791,-3.532655,2.254741,-3.479834,-4.898020,1.651159,0.914612,8.466525,-1.675028,0.102489,-2.865660,5.192253,-9.211575,3.630107,3.620971,6.161467,3.551529,0.846632,-3.535580,-1.245298,-1.710256,6.616427,-8.395732,-8.374285,-6.256808,-8.798843,0.987081,2.934456,-7.160588,8.668802,-5.809369,2.696517,9.711156,-8.157721,-4.996135,-8.612735,2.606104,-7.597413,-9.179164,-3.367140,-1.849850,-2.717832,7.257094,3.092275,-3.379831,7.415936,-3.982502,-5.845815,3.578876,5.278228,0.412532,-9.952255,0.406402,-8.752611,-7.066522,3.646415,5.332378,-5.569154,4.320237,-3.132956,5.823239,-2.507584,-1.231603,9.820456,-7.938673,-3.674171,-2.783474,-6.043054,2.638378,6.621571,1.207865,9.287023,-4.755686,5.888910,1.430095,6.142142,-0.730143,-9.192548,4.623505,-1.469631,-7.806142,6.878213,-7.996662,1.900115,2.946509,8.872623,4.517390,5.449552,-6.163874,9.196526,1.399747,-9.140249,9.129587,-4.147350,-4.913837,-1.744107,9.315111,2.948847,4.311171,-2.162250,-6.519230,5.444680,-7.613064,7.179638,-9.212463,-5.787882,-3.779796,4.471353,-7.059924,-4.762368,-9.882821,2.735522,-7.084280,2.857311,7.303849,-4.313942,8.381012,7.981129,0.629294,9.168409,-0.626985,9.849086,-1.996213,-4.922138,-0.429015,-6.119447,3.439144,7.578185,-7.936074,3.055604,-6.433291,2.421024,9.393219,9.739513,-8.436869,-4.109979,-5.708761,8.967311,-0.142063,6.963257,-5.812486,-5.061067,-6.827314,8.124888,-8.212018,-9.196246,8.694220,2.584990,2.262868,5.308435,1.289844,-8.436778,3.813535,-6.619213,0.991511,-6.225402,9.648078,4.468107,-9.747007,4.174386,9.436133,0.511667,1.124592,5.776770,0.897208,-6.494014,2.375356,5.973927,-1.818038,-5.876160,8.001104,7.429430,1.939848,-6.800028,-2.659896,3.326595,-0.004121,-3.448356,5.467917,-0.501440,-3.700564,7.879856,8.475934,-2.756777,-4.575508,3.470702,4.078266,3.923152,1.965997,7.148984,4.715540,9.965409,2.351080,5.056695,8.431403,-6.834830,6.931500,8.182964,-1.016678,-0.700971,0.889579,-6.375312,5.001228,6.383172,-7.709648,-4.729280,3.161460,5.379016,2.054519,9.794512,-2.302533,-9.236606,1.368657,-5.342994,6.768625,3.674461,-8.602823,9.519463,2.052485,-8.824973,3.659012,2.669369,-4.799092,-9.457646,9.570375,-6.786358,6.895236,9.554534,8.396117,-1.161493,1.661909,2.267625,8.948226,0.736569,7.271622,-5.164899,-7.147794,-1.835733,-5.089152,-0.925037,-1.801930,7.819728,9.535515,2.465702,-6.349858,5.452552,4.281029,0.318852,1.990355,4.123106,-3.013796,-2.058518,6.557265,5.296276,9.343151,6.952988,6.795607,4.590425,-1.634863,0.048568,-3.420639,-8.017225,1.938677,-8.721194,-3.960165,0.670815,-3.806859,8.290905,-9.096182,8.398166,-7.063384,-4.272925,-2.556352,-5.015706,-6.397395,6.973205,-1.412545,-9.418233,-6.916344,-3.968561,-4.107998,1.954304,4.240456,-9.760712,-7.230044,7.008346,-1.604212,-8.138395,4.187330,8.810917,-5.339864,-2.892863,-0.727304,-2.597762,-2.268071,6.391556,-0.144588,8.025325,4.944473,-8.305274,1.837828,-1.155273,1.250485,-3.225012,1.700966,-8.035498,7.437405,-2.390904,5.464475,-7.867579,-3.496580,-9.028737,-1.361834,-7.107136,0.137389,1.508536,2.203060,-2.889406,-6.493049,3.632295,5.353343,2.552508,8.066666,-3.130963,-8.779547,-9.700641,6.851667,-5.193945,-5.969313,3.293490,2.591341,-4.612591,4.617685,8.059673,-6.747913,7.203430,-0.123532], dtype = "float64")#candidate|1884|(825,)|const|float64
call_1883 = relay.TupleGetItem(func_1308_call(relay.reshape(const_1884.astype('float64'), [5, 15, 11])), 0)
call_1885 = relay.TupleGetItem(func_1311_call(relay.reshape(const_1884.astype('float64'), [5, 15, 11])), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_1886 = func_1183_call()
call_1887 = func_1183_call()
output = relay.Tuple([bop_1878,call_1883,const_1884,call_1886,])
output2 = relay.Tuple([bop_1878,call_1885,const_1884,call_1887,])
func_1891 = relay.Function([var_1876,var_1877,], output)
mod['func_1891'] = func_1891
mod = relay.transform.InferType()(mod)
var_1892 = relay.var("var_1892", dtype = "bool", shape = (14, 9, 15))#candidate|1892|(14, 9, 15)|var|bool
var_1893 = relay.var("var_1893", dtype = "bool", shape = (14, 9, 15))#candidate|1893|(14, 9, 15)|var|bool
output = func_1891(var_1892,var_1893,)
func_1894 = relay.Function([var_1892,var_1893,], output)
mutated_mod['func_1894'] = func_1894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_672_call = mod.get_global_var('func_672')
func_673_call = mutated_mod.get_global_var('func_673')
call_1912 = relay.TupleGetItem(func_672_call(), 0)
call_1913 = relay.TupleGetItem(func_673_call(), 0)
uop_1936 = relay.sinh(call_1912.astype('float32')) # shape=(2, 9, 6)
uop_1938 = relay.sinh(call_1913.astype('float32')) # shape=(2, 9, 6)
bop_1947 = relay.subtract(uop_1936.astype('uint64'), relay.reshape(call_1912.astype('uint64'), relay.shape_of(uop_1936))) # shape=(2, 9, 6)
bop_1950 = relay.subtract(uop_1938.astype('uint64'), relay.reshape(call_1913.astype('uint64'), relay.shape_of(uop_1938))) # shape=(2, 9, 6)
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
var_1956 = relay.var("var_1956", dtype = "int64", shape = (1134,))#candidate|1956|(1134,)|var|int64
call_1955 = relay.TupleGetItem(func_707_call(relay.reshape(var_1956.astype('int64'), [14, 9, 9])), 0)
call_1957 = relay.TupleGetItem(func_709_call(relay.reshape(var_1956.astype('int64'), [14, 9, 9])), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1968 = relay.TupleGetItem(func_841_call(), 0)
call_1969 = relay.TupleGetItem(func_843_call(), 0)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_1985 = relay.TupleGetItem(func_214_call(), 0)
call_1986 = relay.TupleGetItem(func_215_call(), 0)
output = relay.Tuple([bop_1947,call_1955,var_1956,call_1968,call_1985,])
output2 = relay.Tuple([bop_1950,call_1957,var_1956,call_1969,call_1986,])
func_1987 = relay.Function([var_1956,], output)
mod['func_1987'] = func_1987
mod = relay.transform.InferType()(mod)
var_1988 = relay.var("var_1988", dtype = "int64", shape = (1134,))#candidate|1988|(1134,)|var|int64
output = func_1987(var_1988)
func_1989 = relay.Function([var_1988], output)
mutated_mod['func_1989'] = func_1989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_2010 = relay.TupleGetItem(func_1491_call(), 0)
call_2011 = relay.TupleGetItem(func_1493_call(), 0)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2015 = relay.TupleGetItem(func_763_call(), 0)
call_2016 = relay.TupleGetItem(func_765_call(), 0)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_2038 = relay.TupleGetItem(func_1398_call(), 2)
call_2039 = relay.TupleGetItem(func_1399_call(), 2)
output = relay.Tuple([call_2010,call_2015,call_2038,])
output2 = relay.Tuple([call_2011,call_2016,call_2039,])
func_2075 = relay.Function([], output)
mod['func_2075'] = func_2075
mod = relay.transform.InferType()(mod)
output = func_2075()
func_2076 = relay.Function([], output)
mutated_mod['func_2076'] = func_2076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2208 = relay.var("var_2208", dtype = "uint16", shape = (7, 6, 5))#candidate|2208|(7, 6, 5)|var|uint16
var_2209 = relay.var("var_2209", dtype = "uint16", shape = (7, 6, 5))#candidate|2209|(7, 6, 5)|var|uint16
bop_2210 = relay.maximum(var_2208.astype('uint16'), relay.reshape(var_2209.astype('uint16'), relay.shape_of(var_2208))) # shape=(7, 6, 5)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2222 = func_1183_call()
call_2223 = func_1183_call()
func_1411_call = mod.get_global_var('func_1411')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2224 = relay.TupleGetItem(func_1411_call(), 0)
call_2225 = relay.TupleGetItem(func_1412_call(), 0)
output = relay.Tuple([bop_2210,call_2222,call_2224,])
output2 = relay.Tuple([bop_2210,call_2223,call_2225,])
func_2228 = relay.Function([var_2208,var_2209,], output)
mod['func_2228'] = func_2228
mod = relay.transform.InferType()(mod)
var_2229 = relay.var("var_2229", dtype = "uint16", shape = (7, 6, 5))#candidate|2229|(7, 6, 5)|var|uint16
var_2230 = relay.var("var_2230", dtype = "uint16", shape = (7, 6, 5))#candidate|2230|(7, 6, 5)|var|uint16
output = func_2228(var_2229,var_2230,)
func_2231 = relay.Function([var_2229,var_2230,], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2300 = relay.var("var_2300", dtype = "float32", shape = ())#candidate|2300|()|var|float32
var_2301 = relay.var("var_2301", dtype = "float32", shape = (8, 6, 16))#candidate|2301|(8, 6, 16)|var|float32
bop_2302 = relay.power(var_2300.astype('float32'), var_2301.astype('float32')) # shape=(8, 6, 16)
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_2322 = func_1340_call()
call_2323 = func_1340_call()
func_497_call = mod.get_global_var('func_497')
func_498_call = mutated_mod.get_global_var('func_498')
call_2326 = relay.TupleGetItem(func_497_call(), 1)
call_2327 = relay.TupleGetItem(func_498_call(), 1)
func_1987_call = mod.get_global_var('func_1987')
func_1989_call = mutated_mod.get_global_var('func_1989')
const_2351 = relay.const([[6,4,-8,8,2,-4,1,-8,-5,-1,10,3,6,-4,-9,-8,6,9,-5,-10,1,1,9,-6,-4,-9,-4,2,2,-7,-4,-5,7,4,3,8,-10,-7,-10,-3,-9,-3,-5,-2,-8,-7,6,-5,-8,-2,5,-6,-10,-1,-3,7,7,6,4,8,-9,-8,-8,7,-4,-8,10,1,4,-2,-6,-2,10,4,8,-8,8,-1,1,-4,-8,3,4,-7,7,7,10,-6,-7,-4,4,-1,10,-9,-1,-5,3,6,1,8,-5,-1,6,5,10,10,3,-4,-7,-1,6,-5,3,8,5,2,-3,-4,10,6,-9,2,10,-3,9,-3,-2,-5,2,-1,-1,6,3,7,-7,3,-7,-8,-1,4,-6,6,-7,-5,6,5,-6,-5,3,4,3,8,2,-9,-6,4,1,-10,-3,-7,-8,8,7,6,-5,10,8,10,-3,-3,-3,10,9,4,2,2,-6,-7,6,-3,-4,1,-4,-1,3,5,-3,1,3,-5,-7,-9,9,-7,9,-10,-6,2,3,6,-7,3,6,-1,9,5,5,2,10,-1,-3,2,1,9,9,-1,8,8,7,-4,7,6,-5,-6,-8,-4,7,10,1,-3,7,-1,-7,1,-10,2,-4,9,-7,-4,1,5,7,-7,7,1,3,10,-10,-4,6,8,-4,-9,4,-5,-5,-5,8,-1,10,-8,5,-3,-9,-7,-2,-2,4,9,-9,4,-7,-4,-9,-9,-10,-3,4,-10,-10,-5,2,3,1,5,-8,-3,6,-1,4,-5,6,-9,-4,1,-6,10,-4,-7,5,-6,-10,10,-8,-2,-9,-7,7,-5,-5,-6,-3,-10,-9,5,-8,7,-9,4,5,10,-7,1,2,-6,2,-9,-10,3,3,-5,8,9,-8,5,-2,-1,3,-4,8,4,-4,3,2,-5,-4,6,-2,-9,1,-6,-10,-2,9,-10,6,4,-8,5,-5,-5,-1,-10,9,3,-3,10,6,-6,8,1,-1,3,4,-7,8,-7],[-4,-2,-6,10,-6,1,-4,8,-3,5,5,-3,-8,9,4,-7,-5,-1,5,-10,-4,4,10,-8,-2,8,1,-8,2,4,-5,6,9,-3,-9,-7,4,10,3,6,3,5,-5,-4,10,3,-1,9,6,-6,5,-9,5,2,1,5,1,-1,-3,-1,5,2,5,-7,3,8,-9,6,10,3,-5,-7,-8,-1,3,6,10,-5,-9,-7,-10,-10,-4,2,-4,5,-1,6,-9,2,8,2,-6,-2,3,-7,6,9,-6,2,-6,-1,-9,8,-3,2,8,9,4,9,3,-8,5,-9,-10,3,7,-5,-1,6,5,5,-3,5,8,-3,-10,-9,10,-6,-8,6,-4,-4,6,-1,10,-2,2,10,-3,-10,6,8,9,4,-4,5,-1,-7,2,8,5,5,-9,-7,10,3,-9,9,4,7,6,-8,-2,-4,2,-4,-3,-2,6,3,9,9,9,-7,-3,-3,-6,-6,5,-3,-3,3,8,8,-9,9,9,5,7,-2,-8,-7,-7,3,2,-10,4,1,-3,9,2,-9,5,-10,7,1,7,10,-1,-8,10,10,-5,8,-3,-9,5,5,-1,-4,-7,4,5,9,-6,2,7,1,-6,10,-8,-4,7,4,-4,-8,5,4,7,-7,2,-10,3,1,-10,9,-1,10,-2,-8,3,5,8,-8,-5,-8,6,6,-9,9,9,7,10,-8,4,-7,1,-4,5,4,1,-9,-9,-4,-3,8,-2,-3,-4,3,8,4,-5,-8,4,-2,-3,-10,5,3,-9,-3,-7,3,1,9,7,-9,-2,3,-9,9,-4,-6,-4,-1,1,-4,-2,10,-5,3,10,2,-8,-10,-10,9,-9,-4,-6,-8,1,-5,-10,-6,-2,5,-10,-6,4,5,6,-9,-1,-7,-10,-3,-8,-5,1,-1,2,-7,-5,-1,8,4,-2,-8,-5,-9,2,7,-2,8,4,6,-7,10,-5,-2,9,-8,8,3,5,-10,7,8,-8,1,-8,-9,4,-7],[-2,-4,5,-1,10,-8,-7,-1,-6,2,-5,-7,3,-6,-7,6,3,10,1,-3,-5,-5,9,-7,-3,8,-5,1,-3,5,-1,9,2,-2,-9,6,-5,-6,-7,9,3,9,2,-8,-6,-5,5,-1,-3,1,-7,6,6,-6,7,4,-3,-2,1,-2,-2,-6,-2,3,9,7,-1,-7,9,1,-9,7,-5,6,8,5,-6,-8,-9,6,-5,5,10,-2,-7,4,-7,7,2,8,-3,10,5,10,9,3,10,1,-1,-8,7,4,3,-5,-5,4,9,9,-4,-9,6,-8,-9,-8,-3,9,-6,-5,4,-3,5,9,3,-8,-9,-9,-9,5,7,10,-10,1,2,5,8,-5,7,-6,1,7,-3,9,3,-9,7,-2,8,3,1,-6,-7,-1,4,-7,1,7,10,5,-9,-6,6,1,5,-6,1,-7,-10,5,6,-10,-5,3,2,1,-6,8,-8,8,3,2,-3,-4,-7,-8,2,2,-7,-5,6,-10,4,4,7,5,-5,5,6,-2,10,-8,10,-4,-8,5,6,4,-5,1,-2,5,-5,-5,10,4,1,-4,3,-9,-6,4,-2,-1,-9,-3,1,6,8,9,-1,2,6,-5,4,9,-8,4,-1,9,1,1,-1,10,-10,-9,-1,-5,7,-5,1,4,8,1,7,1,5,-2,1,-6,-10,-4,-8,-7,8,-7,-9,-10,1,10,3,-5,-5,3,-8,7,-5,-8,-9,-7,10,-5,5,10,7,3,1,-8,-5,-2,-1,-1,-1,1,-6,6,4,-7,-7,6,-6,5,9,4,6,6,-9,6,-6,10,7,9,9,10,-4,-1,-7,6,2,1,7,7,-4,6,2,-5,-3,-10,-2,-8,9,5,-8,4,-2,-7,-2,-7,-7,-8,10,-8,8,5,2,-6,-5,-9,-5,-4,-9,8,-7,-8,1,-5,-1,-5,-3,-1,-8,-6,-10,-5,-1,2,1,-1,-8,-3,9,1,3,9,10,10,6,8,-4,-9]], dtype = "int64")#candidate|2351|(3, 378)|const|int64
call_2350 = relay.TupleGetItem(func_1987_call(relay.reshape(const_2351.astype('int64'), [1134,])), 3)
call_2352 = relay.TupleGetItem(func_1989_call(relay.reshape(const_2351.astype('int64'), [1134,])), 3)
output = relay.Tuple([bop_2302,call_2322,call_2326,call_2350,const_2351,])
output2 = relay.Tuple([bop_2302,call_2323,call_2327,call_2352,const_2351,])
func_2354 = relay.Function([var_2300,var_2301,], output)
mod['func_2354'] = func_2354
mod = relay.transform.InferType()(mod)
mutated_mod['func_2354'] = func_2354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mutated_mod.get_global_var('func_2354')
var_2356 = relay.var("var_2356", dtype = "float32", shape = ())#candidate|2356|()|var|float32
var_2357 = relay.var("var_2357", dtype = "float32", shape = (8, 6, 16))#candidate|2357|(8, 6, 16)|var|float32
call_2355 = func_2354_call(var_2356,var_2357,)
output = call_2355
func_2358 = relay.Function([var_2356,var_2357,], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_2439 = relay.TupleGetItem(func_214_call(), 0)
call_2440 = relay.TupleGetItem(func_215_call(), 0)
output = call_2439
output2 = call_2440
func_2451 = relay.Function([], output)
mod['func_2451'] = func_2451
mod = relay.transform.InferType()(mod)
mutated_mod['func_2451'] = func_2451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mutated_mod.get_global_var('func_2451')
call_2452 = func_2451_call()
output = call_2452
func_2453 = relay.Function([], output)
mutated_mod['func_2453'] = func_2453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2467 = func_1183_call()
call_2468 = func_1183_call()
output = relay.Tuple([call_2467,])
output2 = relay.Tuple([call_2468,])
func_2493 = relay.Function([], output)
mod['func_2493'] = func_2493
mod = relay.transform.InferType()(mod)
mutated_mod['func_2493'] = func_2493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mutated_mod.get_global_var('func_2493')
call_2494 = func_2493_call()
output = call_2494
func_2495 = relay.Function([], output)
mutated_mod['func_2495'] = func_2495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2524 = func_1183_call()
call_2525 = func_1183_call()
var_2538 = relay.var("var_2538", dtype = "float64", shape = (5, 15, 11))#candidate|2538|(5, 15, 11)|var|float64
bop_2539 = relay.bitwise_xor(call_2524.astype('int16'), relay.reshape(var_2538.astype('int16'), relay.shape_of(call_2524))) # shape=(5, 15, 11)
bop_2542 = relay.bitwise_xor(call_2525.astype('int16'), relay.reshape(var_2538.astype('int16'), relay.shape_of(call_2525))) # shape=(5, 15, 11)
output = bop_2539
output2 = bop_2542
func_2545 = relay.Function([var_2538,], output)
mod['func_2545'] = func_2545
mod = relay.transform.InferType()(mod)
var_2546 = relay.var("var_2546", dtype = "float64", shape = (5, 15, 11))#candidate|2546|(5, 15, 11)|var|float64
output = func_2545(var_2546)
func_2547 = relay.Function([var_2546], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_2591 = relay.TupleGetItem(func_605_call(), 0)
call_2592 = relay.TupleGetItem(func_607_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_2610 = relay.TupleGetItem(func_264_call(), 0)
call_2611 = relay.TupleGetItem(func_266_call(), 0)
func_1308_call = mod.get_global_var('func_1308')
func_1311_call = mutated_mod.get_global_var('func_1311')
const_2617 = relay.const([-9.026273,-1.599222,6.295616,-0.787610,-7.891701,-4.794227,1.848826,-0.207027,-1.656161,-7.502276,-7.859809,-0.858897,9.494751,8.639735,-3.708600,5.195554,-6.792311,-4.925511,-2.708883,-0.573344,-6.169662,8.766541,6.433606,-1.477715,-7.090576,6.852704,-9.498238,-0.683221,9.565240,4.961346,-4.595012,-4.887474,-2.730204,-5.873447,6.537677,-6.110489,7.387828,5.200124,2.454593,-5.759061,-8.659629,4.098951,-3.353525,-4.338275,1.315479,3.938444,7.637638,-8.480810,-8.774595,-1.816823,9.794626,6.076783,-1.312688,5.510046,5.665731,3.445099,5.107211,-6.036552,-9.782247,3.760990,-9.577396,8.290919,7.488334,-1.114468,-5.561109,7.108309,8.250447,0.778768,-5.607454,6.225843,-4.893257,6.733977,4.879337,9.441453,3.812091,4.609820,9.718956,5.715940,2.463459,0.594894,-5.619173,3.409619,0.679160,5.623678,-7.951438,1.786862,6.392830,-0.862705,2.210116,-1.155649,4.726074,-9.760272,4.621873,7.524625,8.865700,-3.239391,3.109227,8.773913,-8.822595,-7.741186,-4.753777,-1.299725,5.229049,-8.696069,-8.534563,5.603756,3.610649,9.573009,6.093404,4.152249,1.258453,-8.166344,3.175588,7.081757,-8.992222,-9.149655,-0.779857,-5.736460,-7.883895,-6.067658,9.845314,-2.667736,1.599167,1.058223,-4.549832,-3.111128,5.144749,-4.229470,-2.485310,-2.682099,-7.209358,6.377816,1.936129,-6.588456,4.562258,6.597110,-6.475310,3.542896,8.791658,-3.528672,9.928044,8.813258,1.143511,1.538153,2.373614,-1.112480,5.814238,-2.438279,2.851428,-9.208762,8.142228,0.569379,6.187352,-5.532430,-4.844960,-2.418866,5.420788,-8.986881,8.143307,-2.417664,6.015637,-0.533360,1.802244,-2.575163,7.823521,5.359785,-8.368818,-2.499919,1.787849,-2.304866,1.672471,4.658389,-1.598692,0.708687,2.408042,-2.230228,-9.187681,1.355701,-6.337295,-0.645763,-3.484625,-3.261023,9.563710,-3.398153,5.252484,-1.961945,0.603305,8.887936,8.851119,-9.479227,6.578483,4.036845,6.435721,0.496989,-0.191579,-0.958260,9.398180,6.149944,7.879963,7.132010,-7.743553,-1.197590,6.691067,8.646577,-7.664060,9.177540,5.470814,-6.711875,-4.413760,-5.252928,4.870866,5.136896,9.897226,0.945094,5.955839,-2.641554,-3.537842,7.524657,-2.983143,-5.923803,-8.881976,-3.173448,2.923560,2.297340,-1.332382,-7.017634,-9.868473,-6.279462,2.774796,-1.653824,-0.345332,-8.244985,2.392577,-8.014328,4.253036,6.909797,1.307604,5.286143,-2.521933,-9.771212,-1.257057,-2.563891,-4.894777,-7.579240,1.859461,-8.107368,9.479514,-5.610512,9.726579,0.748120,-8.418907,-6.162962,-0.443977,-0.489446,-3.445348,-1.724222,1.458901,3.587785,5.711370,5.242966,8.272295,9.113441,6.784097,7.109404,-0.603679,6.326059,3.202734,-6.570757,4.083330,-8.289081,6.589476,-7.116715,-8.001726,6.538857,8.108606,-3.028365,-2.637974,-8.046183,6.639389,-1.883252,-2.252904,-5.999414,-1.222044,5.212267,4.082497,0.252726,-2.704364,-8.102989,-6.724438,5.942854,-7.666769,-7.237853,2.074306,-5.512010,-4.743600,-2.388460,-2.789713,6.835758,-6.877898,-2.039683,-6.899277,-0.598147,7.725701,8.241515,-6.565649,-2.606505,-6.174536,-4.847378,8.074044,6.541562,2.917266,-7.459664,-6.929998,-5.964351,-7.382461,6.245183,5.957104,-7.258362,-2.683723,-6.132283,-4.366747,0.286397,5.830657,-2.070610,2.441227,-4.268267,6.624799,-0.453537,-4.637512,-1.543451,-5.019318,-9.792117,-7.193021,-2.815574,-5.323314,7.286502,0.535193,-2.869588,-9.675712,8.791366,-2.798272,1.243034,-2.267185,0.726012,-3.109971,-0.726344,9.975530,-6.412631,8.875855,-0.903152,7.690920,-0.396254,6.572830,0.170057,5.923281,3.643674,0.276266,1.014480,-4.358096,-0.215921,6.267561,7.498390,2.321501,-0.198400,8.389116,4.051722,-8.481915,7.729497,-6.129282,-5.128608,-3.292938,1.527780,-4.722135,4.288701,2.576150,9.179928,-3.577360,-5.560785,3.052012,-0.162159,0.180002,5.137042,8.521536,8.835751,-8.033553,2.284232,7.891686,-4.753064,-8.245036,9.050297,4.163306,-7.895367,3.707898,-9.495594,1.838185,1.994040,-4.120908,-3.461542,-3.840127,7.417235,7.963943,6.160298,9.171846,-4.328686,4.600750,5.239670,0.756915,0.286533,-5.265633,2.083629,-7.121372,5.699450,8.196963,8.033328,3.895430,-5.263753,5.685746,-8.405600,1.936590,-0.260318,-5.999546,-2.416684,7.128680,-4.671144,2.762536,9.749605,3.732383,-2.084213,2.379663,-6.514960,-1.513983,5.768990,-6.085823,-7.217890,3.704362,-7.676232,-9.203488,9.262575,-7.391534,-1.819550,6.546611,-4.165543,-2.778758,4.699904,-3.300613,-0.566208,4.719368,-7.169328,7.515627,7.758960,-5.523722,-4.545973,-9.793232,-5.428965,-8.625479,-0.741148,5.491108,-2.971527,0.096967,0.558054,5.544478,-5.335316,9.663018,-8.253492,0.792543,9.323627,1.940196,4.009444,6.367050,3.907129,-2.399174,7.949461,-4.368137,8.598086,-7.991090,2.016980,-6.632673,-9.668564,-1.029180,7.837539,-3.618839,1.723755,-0.387708,-1.195492,4.139052,0.444615,2.545674,4.258363,-9.843533,-4.386719,2.399632,-7.145970,4.695596,7.829167,7.599367,-7.881759,-4.896725,-2.068672,-3.524400,-4.219866,-8.983834,8.415909,7.012016,0.797598,2.887852,-6.607259,2.302394,-0.005886,5.905527,-8.262311,-2.824144,-1.263930,8.258057,-9.085374,2.976250,3.776394,-4.642146,-2.862129,2.864668,-2.315948,6.804969,8.716091,3.004092,1.401344,3.792967,-6.122312,-6.583578,-6.635619,6.948118,7.206732,-9.778827,-7.267567,7.660252,-4.881787,-0.057659,7.228584,4.012740,-6.905398,9.126168,3.004588,7.485281,-8.383178,-7.584896,2.392645,4.035137,7.145044,8.584197,2.996747,-6.433390,4.874558,-3.282998,-2.914946,7.774332,-0.618115,-7.669588,-0.602785,0.808846,-7.916737,8.098119,6.086727,-0.001441,-2.378416,-8.899762,2.607445,1.485584,4.152370,8.527254,2.253320,-6.638218,8.252424,9.831983,4.732047,2.265287,6.837053,7.308672,8.921098,5.744520,-8.412088,6.825092,-4.825383,-1.834395,-9.714190,3.254370,5.837248,-0.237384,-3.901395,-6.004989,-2.313691,5.230998,-1.580364,9.950931,2.456845,-2.710239,-6.935717,8.918394,-2.332195,7.417188,8.643971,4.248752,-8.566024,-1.104172,3.754435,-0.895290,-3.288371,6.088258,3.009136,-0.892236,1.093014,-6.067147,6.595310,-1.947601,7.767300,-7.000314,-9.302378,8.968381,0.900091,-9.306734,-8.102000,2.272178,-3.768159,-0.235127,6.020498,-3.399910,9.744811,-4.038053,-6.473744,-6.700677,-7.226542,0.521998,-8.081789,-2.068141,-6.916492,1.527140,6.143652,8.224131,2.869059,2.108747,-6.036261,-9.540272,-6.425957,-6.485364,5.390032,3.561015,-2.641009,6.174422,8.986967,-6.532180,-5.379801,9.974861,-9.807698,1.794350,-7.384183,-3.095121,5.079956,-4.437253,-2.054924,-0.119913,8.154224,2.727181,-0.426436,9.609202,-9.127614,0.105517,5.408782,1.531702,3.983057,3.108044,1.096684,8.640521,-7.725296,3.568899,-5.147162,5.234507,2.389352,0.016199,7.799742,5.812395,0.833677,-9.901051,4.776286,-6.665528,-9.309914,-1.748545,-2.915962,-1.551607,4.410817,9.656618,-7.515001,-6.267792,0.350977,6.142718,-7.079140,0.775851,-5.932841,-0.607131,3.872880,-3.603967,-2.130421,7.693366,-8.799240,-8.406690,2.810341,-3.060809,-1.350611,1.103805,-6.064966,-5.582175,-5.278561,-4.795063,1.507047,-8.293538,-8.437128,-8.027597,-6.761235,2.302807,-1.214687,-4.107813,2.707393,1.389731,2.941969,8.404116,7.479791,-9.666161,1.727519,-8.845456,1.945714,3.262085,-6.056819,0.377796,-4.110984,0.778821,-7.390091,-1.352143,-6.918283,3.465135,1.906257,-0.336307,-3.720352,-2.865101,9.431235,-7.670631,4.218842,-5.038513,3.335054,-4.490082,-8.097553,-1.794777,-8.019617,-1.635742,-2.755163,-7.047157,9.571301,4.209419,-0.940855,9.571872,-6.825568,-2.052997,-8.620756,5.460861,-0.489829,9.065076,-6.612415,3.059645,-7.993343,5.043754,0.762555,-3.125618,-1.288405,-6.410613,7.985986,7.430424,6.904008,-5.450716,-8.706674,-7.472950,9.570630,-3.853052,5.090143,-6.073188,0.233730,9.542649,-8.141904,0.438507,1.850093,1.896532,-8.941775,-0.622436,-3.798841,3.308569,6.691804,-4.596938,2.575718,-0.063886,-5.409291,-6.893005,-6.086469,4.877359,-2.304662,-0.386586,-9.046736,-9.397006,-5.112533,3.825274,7.422889,9.109661,-7.625259,-6.582310,-2.392457,-4.974815,6.236811,0.051170,-0.230351,-4.647854,5.723577,-5.686418,-7.192951,-6.044226,-8.546258,-6.358784,-7.181335,-6.335972,9.777893,-8.190031,5.273845,-4.386615], dtype = "float64")#candidate|2617|(825,)|const|float64
call_2616 = relay.TupleGetItem(func_1308_call(relay.reshape(const_2617.astype('float64'), [5, 15, 11])), 0)
call_2618 = relay.TupleGetItem(func_1311_call(relay.reshape(const_2617.astype('float64'), [5, 15, 11])), 0)
uop_2623 = relay.exp(call_2591.astype('float32')) # shape=(2, 9, 6)
uop_2625 = relay.exp(call_2592.astype('float32')) # shape=(2, 9, 6)
output = relay.Tuple([call_2610,call_2616,const_2617,uop_2623,])
output2 = relay.Tuple([call_2611,call_2618,const_2617,uop_2625,])
func_2626 = relay.Function([], output)
mod['func_2626'] = func_2626
mod = relay.transform.InferType()(mod)
mutated_mod['func_2626'] = func_2626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2626_call = mutated_mod.get_global_var('func_2626')
call_2627 = func_2626_call()
output = call_2627
func_2628 = relay.Function([], output)
mutated_mod['func_2628'] = func_2628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_2699 = func_1340_call()
call_2700 = func_1340_call()
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_2709 = relay.TupleGetItem(func_214_call(), 0)
call_2710 = relay.TupleGetItem(func_215_call(), 0)
output = relay.Tuple([call_2699,call_2709,])
output2 = relay.Tuple([call_2700,call_2710,])
func_2737 = relay.Function([], output)
mod['func_2737'] = func_2737
mod = relay.transform.InferType()(mod)
mutated_mod['func_2737'] = func_2737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mutated_mod.get_global_var('func_2737')
call_2738 = func_2737_call()
output = call_2738
func_2739 = relay.Function([], output)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2778 = relay.const([[[6.036835,-1.865237,-1.834037,8.425555,7.737968,1.147166,7.230704,5.021461,-9.107182],[-3.866331,2.473779,-8.776328,0.651430,-0.695297,-7.737835,2.507387,4.478267,5.952672],[7.067591,9.260772,3.368916,-1.859597,6.116187,-8.295330,-6.184470,-5.632707,1.089858],[0.576128,-9.936558,6.980982,6.985506,-0.376031,-0.178202,0.326870,9.811757,-9.667284],[3.950498,9.170138,6.765287,-7.557116,-4.171702,3.474913,6.913874,6.368785,-2.882549],[-6.793325,0.367039,-3.940071,-0.801371,7.216635,-2.887542,-8.124524,1.888605,-5.568897],[7.044549,-6.593720,1.292349,0.529240,-8.722476,1.425432,5.933569,8.621084,-0.392497],[4.473280,9.235858,-9.636106,-3.538411,2.469656,-7.935425,-5.052571,-6.934850,-8.372544],[-4.387997,-4.899490,-6.012181,6.835366,-6.396337,-3.737132,-3.257292,2.058535,7.659432],[-9.476025,7.028517,1.211123,0.377961,2.542628,-4.505147,-2.904381,-8.201567,1.013865],[-6.769877,-1.873073,9.275534,0.712547,-6.525782,8.655175,3.798293,-5.955166,2.140725],[-1.360012,7.592455,-9.565947,7.389772,5.322255,-0.355140,-2.134383,9.506822,7.316731],[-8.047029,2.527069,0.570961,-1.456813,-3.594330,8.637666,-5.696450,-8.009175,-0.077679],[7.716546,0.902861,5.713722,4.208674,-7.343399,-8.239959,-2.755977,7.472459,-9.599482],[-1.090505,5.004108,7.817117,3.276020,-6.686562,2.778993,-7.755858,9.177481,0.301773]],[[1.841089,-2.691762,-4.732273,3.216511,4.002470,-2.022520,-1.156995,-9.967550,9.349545],[-4.158871,1.184369,-8.317289,4.434509,8.451459,2.760696,0.870250,-2.780520,-4.271924],[7.828121,0.700427,-9.649747,-9.201262,-2.990483,-6.375818,-6.763568,-1.982426,-9.473738],[-1.274600,-0.047947,-2.537000,0.782760,-7.914086,2.328560,-8.939651,9.739281,-7.097639],[3.538381,-4.355161,4.952018,7.373349,4.347354,-3.282942,-4.137636,-1.757696,-2.166656],[-7.144447,-3.041386,2.379335,-3.270029,-1.675402,8.159018,6.572201,9.073763,0.558264],[5.725545,-1.731218,-1.628037,-5.737270,-4.016039,7.056361,1.230518,-4.322939,8.680205],[6.202469,5.560642,0.119084,-7.941639,8.280598,-0.135400,9.865271,6.656374,-5.201184],[-5.854313,-7.002028,1.866979,4.604871,-0.576596,0.884968,-4.261826,8.619551,-0.439936],[-5.794098,9.899051,6.672488,-7.626124,9.582807,-7.502133,-9.614196,-9.783835,6.630379],[-0.331728,-1.884205,-1.950999,-1.521641,7.496208,-7.516818,-4.940141,-3.483748,-1.224641],[9.069105,-5.132939,-2.860732,7.527071,4.750487,-7.979217,8.265159,-7.633493,5.618610],[4.003751,4.162349,4.339697,9.806715,-4.355238,3.017387,7.179347,-8.350435,-4.977440],[-1.104356,9.416119,8.525595,7.630384,-7.817980,6.267745,-6.193734,-8.789601,5.880548],[-0.485295,3.750088,-3.294347,8.796933,-8.439925,-3.272974,6.436582,-5.674070,-3.488374]],[[-6.580361,-9.722583,5.836486,-0.019368,6.239382,1.296045,-2.334087,5.757976,8.954957],[-0.006236,3.160320,-0.056671,0.820631,-8.159238,-0.647973,-9.106062,-9.929115,9.455893],[-5.463640,-5.675044,-8.760167,-7.212628,7.220431,8.242019,2.273831,0.443717,-9.030345],[-3.601042,3.444280,5.508738,-4.185836,-0.545290,-8.823637,-3.555537,1.287956,-4.008920],[8.016398,-8.408344,-7.714730,6.038704,-7.460169,-9.672284,-0.179244,-4.973885,-5.125652],[8.503866,2.813029,2.703687,0.352648,-6.710326,-9.981634,7.420455,4.188059,-7.706467],[4.975030,-1.605076,8.675062,-0.511842,7.713581,5.491921,-0.770355,-0.490131,1.583374],[9.919669,-0.107083,7.150544,3.651806,-2.364928,8.749797,-2.415556,-9.122380,-2.658736],[-1.444142,8.725143,2.654513,1.531092,3.924074,-0.698333,2.771011,8.871908,2.685712],[4.200027,5.974825,-5.227878,-0.505625,3.136393,0.893925,-3.011993,-6.898531,5.799215],[3.765356,1.917261,3.771011,9.725837,-0.675378,-6.360242,4.985228,-2.205453,8.733548],[0.590713,9.057316,-4.605006,-1.952430,-2.693871,-1.769513,3.951898,-0.462611,-1.466687],[-0.803012,7.761485,-1.950194,-2.278594,0.532868,6.670780,3.482395,-8.179000,4.292401],[4.932365,-8.744411,5.844711,-9.311559,-3.553164,2.610693,-8.064415,-4.667753,-0.537395],[5.485418,-6.190237,7.026232,6.072016,1.607558,-2.671933,-2.067433,-9.302066,2.846813]],[[3.112232,-6.398539,0.983347,-3.013104,9.579023,9.284829,0.022774,1.604347,4.668500],[0.365077,0.042049,-3.557211,-8.697490,-3.097152,0.264719,-1.037293,9.183588,-9.827391],[-3.990813,-6.975859,9.532645,-8.416497,-7.610139,8.357582,-8.171205,-8.270303,9.681908],[0.692200,9.843167,-4.971660,-2.635128,7.192044,-3.770718,-2.886422,-7.025631,-4.478819],[-3.894488,-1.410972,-4.686058,-5.036607,6.460135,7.791107,9.882611,-4.517492,-8.023342],[-7.499104,8.139864,-4.534298,8.871659,-3.146445,9.267115,-7.489171,4.774422,-5.008396],[-7.766351,5.146756,6.373016,-3.446348,9.683302,2.727446,1.037962,-8.662240,6.631825],[-0.272260,5.476976,-6.084121,-9.093056,-8.946101,7.093753,4.088501,7.594943,2.303982],[9.497230,-5.112757,-2.524784,-2.797386,2.929308,-0.494145,3.043033,8.609192,-0.776529],[8.096894,-9.692532,-3.661938,-3.483600,4.322378,-4.506595,-8.843404,-6.947576,1.050687],[-7.506353,9.184353,-7.046449,-5.504649,-9.683952,4.078771,4.088276,4.966527,-2.442456],[-3.109775,-0.756238,6.287470,-0.637736,-6.894364,-5.503261,-4.966740,-0.728481,-9.654547],[4.696157,-5.592106,-3.168828,-8.421353,0.691776,-8.162285,-6.999836,-3.434454,-8.071651],[1.293391,-5.938403,-4.464144,4.024751,3.763641,-1.350389,3.415050,2.221708,7.274889],[3.159590,6.573982,-0.659151,-2.095676,-8.803180,3.155198,-5.118859,-3.136407,-0.604172]],[[5.510187,6.993938,1.811254,-1.368143,1.857982,5.528796,-5.328466,2.426995,6.872257],[2.066621,-2.357517,-2.491432,-3.672178,-8.363724,8.618790,6.522159,6.278022,-6.069423],[-9.966995,1.083900,-1.926891,8.193960,9.069957,-7.117773,-3.778215,-0.541608,-1.783645],[-8.118877,-3.167626,6.432451,6.581970,-7.749278,6.246359,-9.694120,-4.541819,3.587425],[-3.876317,6.776621,3.086175,-0.092965,6.571789,-2.494601,7.690088,-5.559511,-4.933209],[-2.437124,7.887483,-3.458958,1.423733,-7.620363,-6.270197,-1.203297,-0.165879,-2.768552],[6.152561,2.601617,0.669568,-4.727154,-6.151782,-3.149565,-8.874096,5.163923,-9.133885],[-9.988165,-5.245463,3.221543,8.543296,8.098200,9.584026,8.592246,-2.950131,7.617225],[7.138025,-6.760567,-2.079392,-9.458447,2.191255,-5.989873,8.828065,4.829987,-8.431882],[-0.512331,-3.704612,7.237327,8.173614,2.852706,-6.301038,0.885919,-8.082366,3.962546],[8.646919,-5.945302,7.966349,-8.941337,0.967275,-2.534133,-2.535687,5.433411,-9.903370],[-9.366717,-1.949992,6.553608,-7.948593,-5.761148,2.707609,5.218865,8.380636,2.369154],[8.594625,0.159765,-4.173918,-9.322073,-3.317440,6.818475,-2.387568,-7.277345,3.523563],[6.240013,-7.673944,6.200089,-5.188986,-2.292664,-7.023977,-4.998020,3.507598,-3.169994],[-2.591983,-9.040965,2.546062,2.407476,8.006738,-8.832419,-0.018701,-6.953244,2.580340]],[[-5.686096,8.990972,4.642234,-9.801555,4.503944,6.187970,1.920029,-3.874103,-7.037092],[-8.062570,8.323109,2.091293,-9.239752,-9.400128,-0.065577,-0.584724,0.862974,-6.392302],[4.102172,-1.871222,-4.702302,6.116689,0.776427,-7.915682,0.869797,-9.265264,-3.848752],[-9.720185,0.529847,-4.449365,-8.005626,-1.198357,-6.717048,-1.821364,4.460220,-1.563805],[-9.125388,-4.929295,2.666854,2.411651,2.641615,6.704205,7.035347,-0.241139,-7.722078],[-2.977116,-0.899263,-9.575780,9.983362,-8.751242,-7.505530,9.732108,-3.205936,-2.139410],[-5.730923,-3.683594,7.362967,7.163778,2.819607,5.109033,-8.402067,-7.111470,-5.710588],[6.024976,9.432231,2.035178,-0.265063,-0.576624,-0.958679,-5.956631,-6.189674,-6.233740],[5.014261,-2.659140,2.699785,-3.072907,-6.935284,-5.458135,-8.857557,-1.400730,-2.722866],[2.094863,-3.649840,0.619323,-2.438312,6.771417,5.799346,5.170522,-2.199809,5.559700],[0.542714,0.898439,2.551407,2.247270,-0.458326,8.335441,7.211035,4.231038,8.938412],[-2.884776,5.095012,-1.173779,0.182225,9.745903,-4.195217,0.127451,-9.152835,8.609054],[3.252709,2.918904,-8.525265,-4.326425,0.079202,-2.550292,-4.018233,6.230146,-5.906429],[-9.809108,5.214909,3.669793,9.964864,6.891145,-0.181157,3.282554,0.964614,5.388990],[5.458196,4.116170,0.122990,4.493422,-4.035282,8.412667,1.960993,-7.995537,0.591720]]], dtype = "float32")#candidate|2778|(6, 15, 9)|const|float32
uop_2779 = relay.erf(const_2778.astype('float32')) # shape=(6, 15, 9)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_2781 = relay.TupleGetItem(func_605_call(), 0)
call_2782 = relay.TupleGetItem(func_607_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2786 = func_1183_call()
call_2787 = func_1183_call()
func_2626_call = mod.get_global_var('func_2626')
func_2628_call = mutated_mod.get_global_var('func_2628')
call_2801 = relay.TupleGetItem(func_2626_call(), 1)
call_2802 = relay.TupleGetItem(func_2628_call(), 1)
bop_2805 = relay.logical_xor(uop_2779.astype('uint32'), relay.reshape(const_2778.astype('uint32'), relay.shape_of(uop_2779))) # shape=(6, 15, 9)
func_2626_call = mod.get_global_var('func_2626')
func_2628_call = mutated_mod.get_global_var('func_2628')
call_2809 = relay.TupleGetItem(func_2626_call(), 1)
call_2810 = relay.TupleGetItem(func_2628_call(), 1)
const_2811 = relay.const([[[5.094057,0.944382,5.751615,4.284768,-2.641584,1.869866,9.132013,6.561700,7.831520],[2.832158,5.541900,-9.345459,2.791996,1.417245,-8.994468,-8.408901,-5.594361,7.041659],[-1.037124,-5.212718,-8.360970,-4.682744,-5.874603,-7.154371,9.142672,-1.155533,-2.721095],[3.297678,-5.549944,-4.640639,-6.392726,-2.503664,-6.105938,-3.136271,9.500027,1.959637],[-4.080988,9.650726,4.109854,-0.921990,2.734542,4.138033,0.650452,4.540494,9.877186],[-1.797652,-5.504579,4.276737,4.003652,4.048080,-0.434040,-7.999379,-1.366850,4.079391],[1.326842,5.346379,-6.324388,-4.440647,3.194504,2.137044,7.187525,-7.955895,2.943056],[-8.860694,2.544905,9.497284,-1.305251,2.095595,2.111727,0.762752,-2.868326,6.465019],[6.314062,5.661457,5.782875,-9.890715,-9.264696,-9.375854,-3.047866,-9.603849,-2.421771],[4.989122,0.923500,6.568205,-5.078755,-6.331788,9.474314,5.297410,7.491170,-5.706620],[-2.892936,-6.159591,8.155187,-9.405210,3.156412,-4.997510,-8.908785,2.205649,-5.277397],[-2.817537,1.807191,7.448808,-5.743695,6.306577,7.276493,-0.802226,-8.261989,3.240518],[8.754868,0.903896,-0.088380,-4.301928,-4.239163,1.541371,-4.445560,8.588211,-1.648536],[9.888482,2.285282,-2.223629,-8.691575,-9.672679,9.809146,-7.283927,2.303876,-0.175076],[1.438375,-8.082445,-5.702813,-8.738551,7.367778,-0.663630,9.024362,-8.412834,-7.875901]],[[9.792391,7.802215,-7.337565,9.095017,6.558018,-0.568177,2.551676,-5.876544,3.898890],[2.301997,-7.955157,4.208806,-4.674169,-2.515579,-2.281617,1.749804,3.391383,7.896428],[-3.172572,-6.123718,-4.041164,6.780492,7.944688,8.540471,-6.170488,-9.659421,-5.618115],[5.880489,-0.391631,4.221635,-9.405724,4.864995,-6.675232,9.723679,1.065985,-3.080487],[6.718603,9.583781,-4.572604,5.850809,1.933988,9.915752,-0.634981,-1.572193,-7.961196],[2.526666,9.073341,-9.263474,3.792062,-0.375381,1.515581,-2.261985,-5.164599,5.216953],[4.004220,5.224438,4.621079,-3.830744,6.223699,-3.436639,-0.177163,-3.239895,-5.245974],[5.738918,2.354131,6.837656,8.297343,1.075626,0.937897,-0.715777,2.503160,-1.336273],[-7.682304,-5.824006,6.676641,0.383141,-6.892804,4.347738,-6.247717,0.530939,-5.528625],[-9.133162,-0.774253,5.890245,0.483839,-7.444130,0.780100,7.242773,2.515368,6.712609],[-9.244411,1.345194,0.133008,-4.262142,0.528033,5.455818,-2.207660,1.857142,7.663051],[-8.578942,-3.003345,8.828880,1.979152,3.163860,6.187495,-7.722272,8.495052,-8.471357],[-0.256438,-5.196013,-9.948458,-1.366978,-4.845702,-0.389170,-6.163626,-1.032376,5.151990],[2.576705,-9.689656,-0.751195,9.732582,6.672606,-3.056426,5.840964,-4.934998,-2.409018],[5.100588,5.629655,7.716861,9.290604,2.112501,-5.874498,-1.733610,6.748884,6.996896]],[[-8.079437,-8.858011,7.108450,3.775132,-8.313362,5.110102,1.267108,2.702668,-3.093674],[-6.054404,-3.884048,0.348780,-1.853561,-9.555093,-0.200818,5.141322,4.762733,-1.012593],[-0.448601,7.973740,-5.166495,-7.710240,-6.886634,-2.422484,-4.608455,-1.490748,-8.879655],[1.125952,2.327882,1.441661,7.767161,-3.271359,-0.384985,-0.140981,6.811304,9.897109],[-7.616037,1.950881,4.770457,8.565961,-3.827259,2.065250,8.573096,0.954168,-8.256106],[-0.972825,-9.835398,-8.355611,5.741170,4.021095,7.763349,-0.514703,-3.467780,-3.090442],[-2.598892,5.220464,8.567771,6.272236,-2.884729,-6.224536,1.794414,-1.215045,2.920107],[2.956415,1.534846,0.431538,5.311772,-9.772938,3.296490,-5.374206,-0.036936,-6.150996],[-5.527619,-5.987524,1.578178,9.446935,6.008428,-5.896499,4.202438,-2.881679,-3.182803],[2.353809,1.462239,-5.512960,-1.995885,-2.557770,-1.921322,-9.507640,7.851584,3.646828],[8.160010,2.497740,0.825898,-6.244063,3.125027,2.687472,-9.358180,-4.903334,2.412182],[8.672363,7.366823,-7.554904,-9.709871,-3.681182,-4.794038,-9.975219,-8.969463,-2.605849],[4.376551,-0.575090,7.671988,0.827786,-3.354749,-9.600653,-0.193166,7.234155,0.181752],[1.819110,7.422635,0.830021,-2.236849,9.691643,-1.233661,-4.950674,-6.679783,-6.495674],[-5.400036,-8.486151,6.091186,-2.880463,-5.819328,3.621624,-9.269904,5.680006,-8.132607]],[[8.892826,8.840109,-8.216460,-5.152101,1.574174,9.099996,1.078168,4.490890,3.894040],[-4.505782,-3.324983,9.820522,-0.665742,8.215497,7.145866,3.184315,-7.075429,-8.822546],[-6.728660,8.762736,3.783554,3.782303,-0.538579,-5.986804,-0.892689,-6.902908,1.664608],[-7.214403,3.829401,-8.137491,-9.624024,1.978889,-8.019447,9.866344,-4.419661,-6.081182],[7.871425,-9.723953,9.077999,2.293490,9.766054,-6.376005,-7.928102,0.042937,-7.310617],[-6.192636,6.953114,8.671929,0.645153,-4.056534,4.899545,-0.879722,-3.055034,4.172020],[3.981167,8.271934,-1.188367,-8.514316,1.523235,-9.479975,8.122502,-3.972899,-8.495044],[-4.039131,-8.711396,5.561822,3.796268,-0.265328,8.022399,7.242585,2.474164,1.413638],[0.686792,-6.716553,4.638638,-8.221313,3.348112,2.147180,1.086916,-5.748486,-4.433833],[6.929916,3.011116,-5.910294,6.389111,3.734103,-5.863392,-5.961636,-2.679988,-0.277669],[5.386458,-0.987035,2.025881,-7.852548,2.651024,-9.791853,2.033708,-8.034085,-5.368045],[8.609242,-4.558566,-2.280494,1.860516,-9.565079,1.554803,-4.619591,-9.765226,6.651305],[-4.717469,-2.556241,-6.038404,-7.762990,-6.361256,-3.077128,9.190433,9.924842,1.064430],[-4.733783,-9.060083,-4.243915,-4.629392,7.018202,-1.763056,-2.732291,-9.830511,-4.046269],[-4.000776,-6.734271,9.187333,7.743357,-1.743836,6.492887,-3.395089,6.781992,-2.398252]],[[-1.555369,-7.134500,7.175502,-3.200327,5.311431,-8.185866,-0.939098,-2.553644,-0.901129],[7.438606,-6.853162,-6.786166,1.010353,-4.937236,0.380068,1.021242,7.440324,9.430282],[-2.600794,-6.539104,6.439776,4.839210,3.155438,-1.705917,-5.056688,5.144240,-6.774044],[-5.702060,-0.467887,-1.767707,2.265954,4.312143,6.513755,-3.473619,5.465607,2.443939],[7.438989,-7.390690,7.879027,-1.038128,-0.780393,-1.364223,5.015391,3.377118,6.886078],[-4.905346,4.345655,4.816095,-3.151723,-7.944898,8.493455,-0.586555,-1.046518,3.601248],[-6.544455,0.624572,-5.308370,8.701725,-1.187809,9.342902,-8.409295,2.786663,-3.441701],[-5.410880,-9.190722,-7.784918,-0.280198,-2.403568,5.897583,-8.214917,-8.596292,-2.411427],[-5.565210,-5.573984,-9.707476,-8.950557,0.772577,-4.110126,0.025721,7.328577,2.864780],[7.687500,-9.107343,9.121790,8.381741,2.735031,0.482512,-6.166787,1.832523,8.983848],[2.700837,-8.367140,8.577328,-0.368079,8.904496,-0.085558,6.785485,6.337792,7.447913],[2.535142,-2.518538,-4.889960,-2.463758,7.048468,-0.314942,-3.837427,9.249526,-5.883494],[9.897348,8.044424,-7.278283,-7.066768,1.055504,-4.372911,-2.199218,3.588001,-6.569318],[-4.978770,4.817533,7.918250,-0.042314,5.293907,-4.177730,-1.571928,-2.964970,9.056582],[5.133254,-0.660169,7.550444,-9.917656,-4.125034,-9.956516,0.958610,7.320294,9.158848]],[[-8.759800,-6.716999,3.112383,-4.945851,5.470597,5.506649,7.023127,-0.970534,0.438824],[-8.097397,5.413381,2.790915,-3.619003,-8.953294,7.297942,-5.096029,-5.463754,1.793659],[1.178422,8.363574,-8.225529,0.057507,-8.516719,9.601336,0.023667,5.644071,-0.042679],[0.702470,5.586714,0.129344,5.081909,5.511817,-7.021630,1.971920,-0.123275,-0.352615],[8.826717,-6.324662,0.290141,2.708352,-8.584853,3.900753,9.780539,8.043491,2.474237],[-3.613227,-0.966906,-7.216795,-0.007468,-1.528960,-6.642866,-3.830432,1.224046,2.853613],[-0.557887,7.556967,7.594034,-2.634050,2.908103,-9.872859,-4.392152,2.409925,-3.823163],[0.295897,7.265817,8.718288,1.699774,1.743989,-3.704061,4.857390,9.661857,3.357891],[-0.972933,-3.429567,6.443537,-9.075810,9.625294,-7.285476,0.207707,-2.279179,-4.650446],[-6.837253,7.393875,-8.989284,9.102060,0.613325,-3.364549,7.970905,-9.535643,3.026348],[-3.081702,1.326735,4.010316,7.690748,0.371809,-7.554107,1.212534,3.811156,-4.871478],[7.817193,-0.035266,3.071520,6.794428,7.858163,-7.297450,-9.588842,-4.718156,-3.438276],[8.815961,-2.057057,7.306509,-7.874956,4.968326,-7.817130,4.215719,7.910627,-6.750436],[1.573219,-0.811544,6.689518,0.634136,3.323704,7.127870,9.831858,-6.668821,1.414037],[-1.438382,-1.856570,-3.254707,-9.764132,-3.646124,5.440400,-6.183436,1.866592,9.277126]]], dtype = "float32")#candidate|2811|(6, 15, 9)|const|float32
bop_2812 = relay.equal(const_2778.astype('bool'), relay.reshape(const_2811.astype('bool'), relay.shape_of(const_2778))) # shape=(6, 15, 9)
func_2737_call = mod.get_global_var('func_2737')
func_2739_call = mutated_mod.get_global_var('func_2739')
call_2816 = relay.TupleGetItem(func_2737_call(), 0)
call_2817 = relay.TupleGetItem(func_2739_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2825 = func_1183_call()
call_2826 = func_1183_call()
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
const_2830 = relay.const([-4.001854,2.484025,0.692626,-8.904613,8.934467,3.928024,5.298363,-8.879083,7.366367,-2.009427,5.732257,-2.600853,1.770190,1.085358,9.128745,-1.191127,-6.263765,-2.390459,9.665119,-8.971467,-6.348599,-2.257492,-3.970433,6.765142,-0.257585,-3.161234,7.306790,-8.491169,8.191367,1.742627,-7.788486,-3.726582,1.799158,3.543482,0.046370,8.398209,5.868006,5.416547,1.394664,9.889164,-2.985962,1.230499,-8.645525,6.003876,2.285026,1.273697,-4.148812,-1.625005,-3.695241,-7.021677,-1.356697,5.474747,8.306951,9.453081,1.557125,-2.657161,-1.835391,6.034257,-1.087242,-7.530194,-9.554108,1.378795,2.041951,-8.234313,2.638573,5.965421,5.005278,-9.520656,0.594328,3.119130,-0.588371,9.641989,4.865033,-3.920051,6.340475,3.143368,-1.469513,-0.678940,-2.169627,2.027031,8.485939,3.224626,-1.875243,8.389805,5.421869,-5.628898,-5.899467,-1.255185,8.145843,8.110759,8.305924,-8.450645,-3.338604,9.344593,9.587477,-5.477814,4.906285,0.684388,3.019376,-8.259313,1.941187,3.193990,-8.983242,2.906573,-0.280213,-5.941976,6.974959,3.528346,0.769753,1.748290,7.796979,1.818330,9.750101,-4.196166,2.906863,-5.063112,-0.946856,-6.391447,4.783042,-3.558019,4.768240,-0.039666,9.856464,-7.751026,-0.042570,5.887833,5.333559,3.237203,-9.688432,-6.182934,-0.360486,-0.488854,-2.722243,0.789110,2.374272], dtype = "float64")#candidate|2830|(135,)|const|float64
call_2829 = relay.TupleGetItem(func_277_call(relay.reshape(const_2830.astype('float64'), [9, 15, 1])), 1)
call_2831 = relay.TupleGetItem(func_280_call(relay.reshape(const_2830.astype('float64'), [9, 15, 1])), 1)
output = relay.Tuple([call_2781,call_2786,call_2801,bop_2805,call_2809,bop_2812,call_2816,call_2825,call_2829,const_2830,])
output2 = relay.Tuple([call_2782,call_2787,call_2802,bop_2805,call_2810,bop_2812,call_2817,call_2826,call_2831,const_2830,])
func_2836 = relay.Function([], output)
mod['func_2836'] = func_2836
mod = relay.transform.InferType()(mod)
output = func_2836()
func_2837 = relay.Function([], output)
mutated_mod['func_2837'] = func_2837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_2852 = func_1183_call()
call_2853 = func_1183_call()
output = relay.Tuple([call_2852,])
output2 = relay.Tuple([call_2853,])
func_2865 = relay.Function([], output)
mod['func_2865'] = func_2865
mod = relay.transform.InferType()(mod)
output = func_2865()
func_2866 = relay.Function([], output)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_987_call = mod.get_global_var('func_987')
func_988_call = mutated_mod.get_global_var('func_988')
call_2905 = relay.TupleGetItem(func_987_call(), 0)
call_2906 = relay.TupleGetItem(func_988_call(), 0)
var_2911 = relay.var("var_2911", dtype = "float64", shape = (2, 9, 6))#candidate|2911|(2, 9, 6)|var|float64
bop_2912 = relay.floor_divide(call_2905.astype('float64'), relay.reshape(var_2911.astype('float64'), relay.shape_of(call_2905))) # shape=(2, 9, 6)
bop_2915 = relay.floor_divide(call_2906.astype('float64'), relay.reshape(var_2911.astype('float64'), relay.shape_of(call_2906))) # shape=(2, 9, 6)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_2918 = relay.TupleGetItem(func_817_call(), 0)
call_2919 = relay.TupleGetItem(func_819_call(), 0)
output = relay.Tuple([bop_2912,call_2918,])
output2 = relay.Tuple([bop_2915,call_2919,])
func_2927 = relay.Function([var_2911,], output)
mod['func_2927'] = func_2927
mod = relay.transform.InferType()(mod)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2928 = relay.var("var_2928", dtype = "float64", shape = (2, 9, 6))#candidate|2928|(2, 9, 6)|var|float64
func_2927_call = mutated_mod.get_global_var('func_2927')
call_2929 = func_2927_call(var_2928)
output = call_2929
func_2930 = relay.Function([var_2928], output)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1583_call = mod.get_global_var('func_1583')
func_1584_call = mutated_mod.get_global_var('func_1584')
call_2932 = relay.TupleGetItem(func_1583_call(), 0)
call_2933 = relay.TupleGetItem(func_1584_call(), 0)
uop_2962 = relay.acosh(call_2932.astype('float32')) # shape=(2, 9, 6)
uop_2964 = relay.acosh(call_2933.astype('float32')) # shape=(2, 9, 6)
func_1807_call = mod.get_global_var('func_1807')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_2973 = relay.TupleGetItem(func_1807_call(), 0)
call_2974 = relay.TupleGetItem(func_1809_call(), 0)
output = relay.Tuple([uop_2962,call_2973,])
output2 = relay.Tuple([uop_2964,call_2974,])
func_2984 = relay.Function([], output)
mod['func_2984'] = func_2984
mod = relay.transform.InferType()(mod)
output = func_2984()
func_2985 = relay.Function([], output)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_2999 = relay.TupleGetItem(func_420_call(), 0)
call_3000 = relay.TupleGetItem(func_421_call(), 0)
output = call_2999
output2 = call_3000
func_3011 = relay.Function([], output)
mod['func_3011'] = func_3011
mod = relay.transform.InferType()(mod)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3011_call = mutated_mod.get_global_var('func_3011')
call_3012 = func_3011_call()
output = call_3012
func_3013 = relay.Function([], output)
mutated_mod['func_3013'] = func_3013
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3048 = relay.const([[[-9.248857,-3.410721,6.514092,9.088749,-5.310488,4.073852,1.599236,-9.208358,-7.061704,-4.462994,-8.760779,7.570857,-3.578290,-3.928842],[0.672380,5.030856,-5.937051,5.250511,1.263219,1.094439,5.491565,-7.579640,-7.334263,-8.058563,8.851974,-5.286759,0.732380,8.308211],[-4.985895,-3.526828,0.615048,1.598990,8.183498,7.727062,4.070886,3.813463,2.921791,-4.428844,-2.761964,-4.167466,0.412711,-6.940262],[-6.652728,9.127670,9.090771,4.234287,0.843706,-1.963076,1.733928,5.121689,-4.613976,-8.652948,-4.032658,8.899132,0.004847,6.335077],[-4.926442,5.750439,4.460779,-7.013870,6.948122,9.102080,-6.490873,3.242925,5.674159,3.193119,8.427421,8.060552,-6.971009,1.114686],[1.413539,-0.454231,-7.265944,-3.196258,-4.312320,-1.527993,-0.846245,8.313985,6.260184,8.616151,1.778171,-1.182329,-9.322841,7.938425],[-1.464354,-7.064446,6.000030,4.651151,-9.056392,7.757613,-9.459793,-1.154535,8.940228,-6.774204,1.973313,9.730666,-4.595813,3.268105],[3.043697,6.778808,0.513391,4.001717,-2.838901,-7.546139,6.687256,-7.098704,8.463933,-1.267010,-6.150711,2.002492,-4.391790,-0.919846],[-3.606033,9.421630,-5.532045,8.405784,-9.518178,-2.748560,-5.514339,-3.837281,-4.662290,5.655551,9.267758,-4.553258,-9.267311,8.199623],[-4.105109,4.316456,-9.157322,4.160847,1.124518,-3.628288,0.197404,2.145240,-3.793571,2.521034,-2.748660,-7.294169,1.405344,4.280871],[7.018233,-2.064914,-0.057163,-6.281691,8.083851,-2.925275,6.213272,-5.475418,6.646266,-3.954231,9.786431,1.031942,-4.523172,-2.357822]],[[-3.291011,-6.481838,-7.884447,-5.349428,-6.714711,5.341167,-7.112091,4.153303,9.962077,-8.306461,5.832138,-4.321886,5.244680,-0.665879],[6.584300,9.959815,-0.319106,3.082624,-9.996679,2.165712,6.699489,-8.490255,-9.412761,4.537241,-5.503446,9.196374,-6.408516,-3.340523],[0.909900,8.134816,4.451035,-7.805594,-5.357827,7.805604,1.614703,-3.805242,5.196941,-8.386787,-3.814735,8.404193,-0.077037,-2.185287],[-9.570393,-4.015404,0.063261,4.205792,-3.528036,-0.048174,7.461149,0.263652,-0.513487,0.548557,1.753177,-2.727831,1.456611,-1.727720],[-6.676230,-7.784912,4.498968,-8.168270,7.942632,-8.795548,8.472249,-7.848311,-0.743589,-6.956950,4.144729,-3.196864,9.339141,-7.838001],[1.385847,-5.396622,8.309819,-3.911019,3.814500,9.945915,-9.334880,-0.182133,-4.210322,9.652579,0.730277,-9.315182,8.751848,4.447292],[3.340763,-9.029693,-3.815732,-8.603357,9.972245,-5.692166,6.412033,8.700019,7.993165,7.963700,5.787533,-7.186595,-5.827799,5.206113],[-2.733474,0.507976,2.992544,-4.845778,-9.386507,5.624023,3.085399,0.552148,-5.592073,9.951318,-7.297795,1.011075,7.895466,-3.851395],[-5.091297,9.872494,-1.427395,-3.288277,-2.550232,5.070015,9.812480,8.867905,5.781460,0.518638,7.064187,8.092884,-5.017589,2.651739],[4.573871,6.839877,-7.602475,-5.018120,3.129442,-0.326925,3.105970,5.405693,-7.366212,1.487665,3.205126,9.346126,1.686733,-3.985776],[-6.375698,7.651839,-8.540326,7.330478,-7.804684,1.055822,8.413287,5.628065,-5.425903,6.883221,1.597840,-5.953620,-8.148456,-3.037774]],[[-7.877119,6.997293,-9.041365,-0.862242,3.529144,4.747056,4.476560,-4.706131,-1.614390,1.837106,-8.011734,-1.868101,-9.981252,-0.253515],[-6.042257,-4.681046,4.657298,6.227757,4.185939,-7.602921,-9.381547,-6.512392,0.636930,-4.015987,-6.055048,-1.433003,-5.366505,6.095383],[0.864347,1.013688,-5.206060,-7.839320,0.420250,0.680545,-5.936270,-8.167532,-0.298103,-7.976347,3.083410,4.246158,6.424013,-4.780637],[-4.148800,-3.270302,8.570460,-1.411895,2.127905,7.915888,-4.196623,1.032487,2.757348,4.737015,-7.660779,2.892924,-4.537963,-0.159001],[-4.237029,-7.377413,-6.659082,-5.668579,-9.614496,2.211597,5.180405,5.135073,1.712095,-1.437615,-2.924099,-6.190434,-5.025787,-1.989182],[6.311857,-2.870287,0.250782,-7.371601,6.417704,3.098421,2.643509,2.021612,6.644149,4.907091,-8.401530,8.100618,3.908916,3.241721],[1.956073,1.848515,-6.023604,-5.533173,-7.934345,8.963787,7.626703,6.567883,3.079949,-8.976942,7.311439,-0.955568,3.358972,-7.274309],[2.947738,-1.176600,5.996825,1.685867,2.351047,4.183560,4.060956,9.735724,9.503294,4.241931,-3.718928,-9.456571,0.397490,0.027344],[-9.743460,-6.293936,9.600059,8.924254,-3.578636,0.585320,-5.328395,6.165417,2.247827,8.227727,9.934461,-2.794803,-8.006556,-5.390834],[8.389927,-7.756429,8.455777,0.618846,-1.467056,-4.964377,-2.662803,-4.970996,-1.485265,-0.594237,6.964107,7.873144,-3.286368,-1.390674],[-0.416273,6.720316,-3.884971,2.715036,-5.693757,-7.484966,9.416359,3.902179,-6.901638,9.083866,5.794198,0.311688,8.990964,0.556229]],[[-6.365527,-3.641635,-1.256113,-6.060410,2.527330,3.028460,-7.735894,-3.081715,-6.434523,4.703594,-1.502148,9.159051,-3.848031,-6.287754],[6.855483,-0.488494,9.820335,-4.036836,-2.598798,-9.924536,3.830172,0.346905,0.460349,5.682045,1.100752,3.504959,4.698766,6.045172],[9.038992,9.696401,8.233573,-7.907099,-2.045360,3.993750,4.887158,5.491218,2.599957,-8.556795,-6.059527,-1.970721,7.446891,7.950365],[-8.754853,-3.387704,-3.201845,6.984745,7.844924,-0.816295,-8.902996,-3.113255,4.850193,-8.871083,-6.596895,-0.504239,5.686881,-8.528592],[-9.199301,8.383986,-0.911088,-4.575904,-8.029229,3.506910,4.599917,0.197692,4.531835,8.773227,7.381345,0.756191,-8.384624,6.124023],[-9.404319,-7.595530,1.971338,4.062535,-4.582611,7.447259,7.484091,-5.122941,-2.734175,0.838500,-4.294664,6.334011,-2.699312,2.556778],[-9.951443,-9.677387,2.751946,3.864725,2.633489,-0.434131,-2.747352,-5.595463,-2.241235,-2.283229,-8.691683,-5.236303,-4.003483,6.135794],[-0.069822,3.891162,3.407727,4.263538,9.409035,5.191043,-0.097987,-0.583435,5.917924,-2.352467,0.411207,3.704764,-6.892597,-4.848956],[6.484538,-4.578602,4.874966,-9.156958,5.680627,6.911101,-1.521081,0.389002,-6.639052,2.307576,-6.504463,-5.064781,-6.169246,-9.902544],[7.964369,0.555527,-5.206186,1.858265,9.156340,-7.850285,8.625745,8.062728,-6.871545,-1.872939,-3.975958,6.201014,-9.910785,1.862242],[7.216834,8.676833,-4.654960,7.840484,-3.110022,-7.429991,-4.156730,3.404064,-2.541645,3.842732,4.870793,-3.113348,8.369021,5.320663]],[[0.368915,-7.758343,-9.598872,4.625211,-5.253434,0.553700,4.521186,-9.539656,-5.895216,-4.075059,3.271398,9.519590,1.447842,-9.040703],[3.408391,-6.290562,-1.255637,2.010999,3.700468,-3.670043,2.859284,-3.709523,5.011636,-6.340549,-6.832446,9.439291,-7.074589,7.646664],[-8.099332,-0.863418,1.854398,-1.948745,4.050916,-4.293481,-4.173641,-8.310843,-8.723328,0.151140,-1.827344,5.682942,-4.661761,-8.314496],[6.501675,-3.797845,9.476295,-9.137183,-3.213820,8.754891,-8.097959,-5.919645,-2.372691,9.929543,8.100353,-9.874128,-8.529971,6.467713],[-1.841489,-2.281608,6.634121,6.054218,4.088582,5.815066,-0.939298,-7.224946,-3.685459,-2.450703,5.707795,2.973643,-6.667064,-6.111232],[7.266451,4.901126,7.946992,5.569270,-1.557423,-1.393878,-1.008409,3.432109,-6.964759,-4.489744,-4.383486,2.834487,-3.538482,5.253352],[-6.265163,7.101760,8.992307,-4.085349,-9.862992,2.711186,-6.110382,9.081649,9.886983,-2.968911,-4.690956,-4.361400,7.033364,-5.327831],[-7.712102,-5.852393,-3.793995,-5.705604,-5.811218,-2.642131,-1.854221,8.967064,5.647411,-6.047815,-7.332361,-9.469722,4.690030,8.651687],[-6.824228,-5.107636,1.270140,-9.639321,-7.360112,2.645735,4.544850,-9.923773,1.257863,-3.086241,-1.213344,3.692182,9.780160,4.413292],[-2.389962,3.522867,-5.898593,9.621660,-5.549698,8.604568,-9.761757,2.002790,2.272981,-5.410273,-4.686097,3.082892,5.418231,5.220642],[3.702395,5.533620,2.955854,-2.321560,-0.883906,-7.752962,5.609571,9.895016,-2.599581,8.168374,-8.339186,4.512402,5.232366,0.655671]],[[0.675383,1.654012,0.970777,4.976944,-4.522066,5.494775,4.602662,3.833338,3.818985,8.081446,-4.855535,9.015289,-0.371644,0.063577],[-2.095238,-9.723755,3.670233,-3.071344,-6.838307,9.753623,9.747011,2.922572,-8.306379,-8.868318,8.443845,-8.624714,-1.700823,2.300729],[-8.848586,-4.865023,1.693249,-2.554368,0.434601,-4.244094,-4.757631,-6.285794,-2.466786,0.492308,-8.502399,-4.509592,5.707676,8.336999],[2.073829,-8.624931,7.971174,-2.009550,9.368375,2.946765,6.078465,-1.657293,-7.201166,8.450586,-7.674552,3.662874,-9.231986,-9.289581],[-0.349382,-2.072625,-7.436576,2.735886,8.660993,1.136112,1.382688,3.920958,-2.169901,-2.825534,-5.004248,7.508618,-2.003030,-5.779059],[-5.011909,-6.534737,-3.003329,-1.264577,8.193067,8.570675,9.492214,6.676214,0.421095,4.323669,-0.496076,-3.366837,-5.073884,6.548154],[6.173963,0.170504,2.617379,-0.091024,-3.049869,-5.272996,7.363507,2.773403,-4.381504,2.721991,8.256677,0.926842,-0.393069,6.252787],[4.722734,-1.974879,-2.086130,5.735100,9.448070,7.113220,-7.979342,-6.325589,9.220865,6.922908,-3.820980,-2.164091,6.929149,-4.683559],[4.558546,-6.842621,-9.844743,7.919294,5.051955,-9.421073,7.731305,-1.721209,-4.005587,6.230424,-4.678696,8.802507,3.092454,5.340024],[-4.506622,-2.438781,4.858802,-1.508044,0.768620,-5.420876,-4.255263,-0.085894,-1.629756,-0.819793,6.081949,0.858378,-9.306974,-5.486402],[-1.073815,-5.115264,3.618490,-4.098472,-4.073817,5.443366,2.341450,-2.518855,-3.179426,9.215121,4.877693,5.573449,4.336166,6.265030]],[[-6.039083,4.410304,6.499314,1.661845,-8.645579,0.493810,-5.632601,8.704168,-1.278430,-7.521925,-0.716453,0.362197,4.307933,-8.209182],[1.418745,-4.172669,2.330821,-5.137997,1.217811,-5.501585,-2.889150,-9.661335,-6.876410,-5.446282,3.676439,0.877149,-6.195950,-2.184970],[-0.106058,-4.479787,-5.894554,8.483957,-5.374111,-0.842434,8.765579,2.480935,-4.164845,-8.238630,9.330971,9.155050,6.663577,-7.332910],[1.268132,0.405390,0.189402,-6.846039,-1.832853,-1.181560,0.503356,3.520753,9.489525,-1.542486,-6.064949,-1.726987,4.426210,5.718557],[-1.739396,-9.659201,-6.833482,0.616491,9.695925,5.089190,3.752150,-2.235795,-9.346812,9.479643,2.373397,4.546895,5.708586,5.681405],[8.364896,8.223547,4.853385,5.804363,-7.901176,5.511799,-4.164814,2.154354,-7.157374,6.179000,5.596792,-7.974089,-8.108367,3.032583],[0.357504,3.299937,9.875262,7.205053,-2.575047,-1.846166,4.034918,2.229871,-1.018230,-9.889578,-3.443217,6.434106,-0.956620,-6.745448],[8.677723,-0.103679,5.523347,1.951962,6.837060,8.964863,8.582623,-5.193679,9.208355,7.349300,-3.216302,1.113337,1.774372,4.106851],[-0.566568,-0.771170,8.285167,8.254297,-8.559493,2.523106,5.123057,-6.191139,-1.465724,6.301994,-1.925145,3.597646,-7.386826,5.699489],[3.811269,-3.484464,9.205184,4.950804,9.024605,3.209327,7.985839,8.294869,5.856859,3.188872,-3.532745,3.438716,3.060935,-1.590187],[9.560317,5.831722,-5.186814,6.934062,5.025825,-8.165471,9.286104,-5.222994,-0.249381,6.190062,1.798920,9.020457,6.113833,-8.530547]],[[9.982310,0.472265,1.636740,2.667174,-5.292580,4.250308,3.317286,-5.107454,3.564764,6.498002,7.944561,5.758364,8.212770,-6.421166],[0.607702,-5.957034,0.056254,-1.202129,-0.873915,-4.949580,-6.599746,-5.061941,3.923654,-5.593751,-8.546557,-2.025105,-6.316272,-2.068994],[-4.345183,-2.079533,-9.202736,-7.602008,-1.506973,-3.239951,-8.004948,6.825458,-1.284203,-7.957749,7.653021,-4.370264,-7.088140,6.311110],[-6.301899,7.257776,-9.165046,-1.072471,-6.028342,8.044399,8.100226,5.053054,-0.282279,-3.677341,9.013313,5.276942,3.782233,-2.545416],[-2.745760,-4.588362,7.355143,-9.919993,-0.872560,-7.749818,3.632629,2.686156,8.038297,5.254108,-2.188837,-1.916329,-5.727858,-7.963564],[8.707680,-9.420088,-5.307149,-1.376758,-3.382931,6.885381,-6.187220,0.890516,9.407864,-8.682103,3.916635,9.330755,-1.392596,3.120042],[7.199247,-1.218426,-4.763011,-2.699454,-3.866497,5.448217,4.645653,0.718485,-5.894432,-0.357182,0.104733,8.410339,-5.332534,-7.015532],[-1.388687,8.647557,1.119492,3.669918,-3.989422,-3.736064,-8.904283,3.492344,5.510058,3.712377,8.407094,8.063159,9.637024,-3.844388],[6.607766,-7.572501,-1.730492,0.266898,6.245775,-9.294736,1.961703,-8.872229,-7.770130,8.910351,-2.895508,0.077900,-1.400423,2.074522],[1.448597,4.679894,-9.312652,2.820136,-7.140300,1.544546,1.217906,9.008147,-8.629939,-8.063525,-6.116162,-9.312509,5.763780,-3.527746],[6.384431,6.186742,7.252231,3.478640,-8.801444,6.337469,-0.081451,-2.803575,-8.080632,-8.111577,-1.454539,9.468362,-9.243463,0.771055]],[[1.617301,-2.203940,4.715240,-0.697164,-9.737972,5.824513,-5.250814,7.830524,8.190525,-6.765948,-8.112293,-7.775683,8.335042,0.379146],[-2.680669,2.987911,-3.637671,-6.304214,7.672495,8.717736,-8.240391,-1.024548,8.530026,6.235101,-4.950620,-2.252651,-9.875160,5.694815],[-9.201019,-5.820705,0.469525,-4.514758,9.260898,-5.944826,4.382050,-4.751407,-0.124090,-5.476591,2.279599,-7.370236,8.232399,-0.296786],[6.849778,-7.954709,-7.259411,-5.439684,-0.649765,5.775619,3.287757,7.904331,8.284274,3.397053,-1.205306,6.806224,4.317657,5.927284],[-3.854624,6.384646,3.366637,0.476149,-8.778806,-3.947674,4.664994,-1.375698,2.702263,4.397206,9.246432,-6.733505,4.694947,9.872787],[5.004261,2.265855,-4.907017,2.154205,-5.381832,2.173414,0.973151,-2.454868,-0.261731,5.104661,-1.653142,-0.083690,9.909239,6.144295],[2.306739,-4.678234,-0.197828,-9.990516,-7.309887,-4.219846,2.534139,4.159916,2.809003,9.817091,-8.833689,2.178601,9.008713,-0.003606],[-3.067191,2.128547,5.845271,-6.174532,-6.736529,-2.925875,1.712506,8.231615,5.137326,6.703772,-3.764996,-8.751281,1.591762,2.899509],[1.582430,-3.509836,-3.191059,7.733380,1.748097,5.642396,7.557074,-2.409423,-6.554195,4.109640,-6.747084,7.315357,0.582490,3.632368],[1.101095,3.306972,-8.451869,9.835145,-7.012135,-6.161184,-1.368600,8.184255,-0.486581,-5.924026,3.016766,-7.464068,-7.191506,0.338683],[8.356335,0.585516,0.368731,8.597990,-1.300413,-5.495798,-8.192647,-3.046436,-1.956021,-2.301905,5.994486,-2.889556,-1.156452,-2.425562]],[[-2.332390,-5.014546,-7.738306,-0.806432,-1.034151,4.898552,-4.541539,1.856544,2.411101,-1.068716,0.435835,-9.963846,7.609391,-1.342325],[6.619149,2.617030,-5.648013,3.888646,8.439608,-3.520092,9.739688,-6.597351,-6.245712,-9.415365,6.380619,6.902421,9.426608,0.179229],[-8.793569,-0.153498,-6.190929,8.696893,5.508833,4.427834,6.524324,8.640205,8.266274,-9.162418,1.569381,3.176971,8.585296,-4.217662],[-3.749878,-1.070441,9.443312,-2.736894,-5.189309,-3.496001,-6.065557,-6.298334,4.576990,7.123298,1.247588,-3.904169,-3.222947,5.340873],[3.995932,3.528546,9.419413,-4.959471,-5.753359,-4.587970,8.039832,6.990029,-2.824165,6.708264,3.981887,-1.953535,-2.251718,3.238889],[5.386579,9.999660,-4.287640,-4.403772,-3.257517,-7.078827,-2.945992,1.774399,7.641708,6.744322,-5.636113,-7.830536,1.107295,-8.206098],[3.934879,9.140077,-6.810061,4.666140,0.214343,-3.058641,5.923452,-6.011040,1.602449,3.597316,-3.086058,-5.990275,3.786184,-7.476372],[5.468568,-0.621643,7.167208,2.755653,-5.204971,-7.081809,0.861250,6.733450,-3.931328,-5.238300,6.910574,-8.879196,-3.816748,-9.629300],[8.364055,4.611438,3.830691,-5.980681,7.703026,-9.886009,-3.033930,2.097334,5.619562,-5.164937,-0.184739,5.040993,-9.564113,-0.369859],[-9.507749,-3.448203,8.810376,0.521817,-8.083382,7.632141,8.389804,6.750039,3.916207,2.875884,-1.959594,-2.945715,-2.282468,-3.044746],[3.327241,-6.440386,-3.990553,-7.590263,-6.623267,-5.906067,9.431949,-2.726378,-9.315232,-2.952098,-8.864469,-7.918914,-9.214491,2.997936]]], dtype = "float64")#candidate|3048|(10, 11, 14)|const|float64
uop_3049 = relay.log(const_3048.astype('float64')) # shape=(10, 11, 14)
uop_3053 = relay.log10(uop_3049.astype('float32')) # shape=(10, 11, 14)
output = relay.Tuple([uop_3053,])
output2 = relay.Tuple([uop_3053,])
func_3058 = relay.Function([], output)
mod['func_3058'] = func_3058
mod = relay.transform.InferType()(mod)
mutated_mod['func_3058'] = func_3058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3058_call = mutated_mod.get_global_var('func_3058')
call_3059 = func_3058_call()
output = call_3059
func_3060 = relay.Function([], output)
mutated_mod['func_3060'] = func_3060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1411_call = mod.get_global_var('func_1411')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_3092 = relay.TupleGetItem(func_1411_call(), 0)
call_3093 = relay.TupleGetItem(func_1412_call(), 0)
output = relay.Tuple([call_3092,])
output2 = relay.Tuple([call_3093,])
func_3107 = relay.Function([], output)
mod['func_3107'] = func_3107
mod = relay.transform.InferType()(mod)
output = func_3107()
func_3108 = relay.Function([], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_3136 = relay.TupleGetItem(func_817_call(), 0)
call_3137 = relay.TupleGetItem(func_819_call(), 0)
func_1807_call = mod.get_global_var('func_1807')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_3138 = relay.TupleGetItem(func_1807_call(), 0)
call_3139 = relay.TupleGetItem(func_1809_call(), 0)
output = relay.Tuple([call_3136,call_3138,])
output2 = relay.Tuple([call_3137,call_3139,])
func_3150 = relay.Function([], output)
mod['func_3150'] = func_3150
mod = relay.transform.InferType()(mod)
output = func_3150()
func_3151 = relay.Function([], output)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3058_call = mod.get_global_var('func_3058')
func_3060_call = mutated_mod.get_global_var('func_3060')
call_3155 = relay.TupleGetItem(func_3058_call(), 0)
call_3156 = relay.TupleGetItem(func_3060_call(), 0)
func_2927_call = mod.get_global_var('func_2927')
func_2930_call = mutated_mod.get_global_var('func_2930')
const_3158 = relay.const([7.802094,-8.441374,-6.130047,-0.227284,5.264981,1.840002,-0.532177,6.857401,-3.439078,1.986300,-2.928393,-3.008067,-8.966755,-9.557398,-9.188384,1.710348,9.932930,7.334310,5.026608,7.657813,5.271124,5.745793,-6.360750,4.833658,-2.574647,-6.604037,0.654157,-2.997812,-1.015592,9.785359,5.595753,-3.103014,5.156285,-9.208209,0.201607,9.815154,-8.819578,3.588133,-8.319927,2.733417,1.108147,5.099913,0.081108,-5.328431,-7.886564,-7.107166,1.181031,-9.714133,0.002603,7.804072,-1.535448,6.827776,-3.120567,7.827310,-9.868685,0.530374,-1.884458,-2.235548,-6.552801,1.316988,4.417267,-8.322200,4.632376,9.271346,-0.132665,8.002773,7.732214,2.147046,1.680029,-4.873409,-5.388327,-6.445218,-8.781038,-7.732967,8.542099,5.823177,3.206102,8.442833,0.499883,7.570272,-3.481041,-1.464109,-8.717224,2.859241,6.599258,2.508691,1.683073,-1.097295,-3.343614,-4.489875,6.336862,-2.801411,0.178758,8.121332,-7.656233,-8.522873,9.058137,9.412938,0.961782,-8.902684,-0.103621,-8.241267,8.712634,-3.862301,3.168536,5.943811,-7.728923,7.921498], dtype = "float64")#candidate|3158|(108,)|const|float64
call_3157 = relay.TupleGetItem(func_2927_call(relay.reshape(const_3158.astype('float64'), [2, 9, 6])), 0)
call_3159 = relay.TupleGetItem(func_2930_call(relay.reshape(const_3158.astype('float64'), [2, 9, 6])), 0)
func_378_call = mod.get_global_var('func_378')
func_381_call = mutated_mod.get_global_var('func_381')
var_3179 = relay.var("var_3179", dtype = "float32", shape = ())#candidate|3179|()|var|float32
const_3180 = relay.const([3.649074,-0.733283,1.368483,-1.404164,-0.529722,5.935209,5.854567,-2.681848,7.816222,-0.339604,0.648883,-0.887943,6.956526,-1.951730,2.941446,9.642708,4.184791,-7.534054,0.450893,-5.751479,-2.575260,2.801331,-0.069758,-0.027573,6.829805,-3.301719,-9.467105,-9.512693,3.650003,-9.213949], dtype = "float32")#candidate|3180|(30,)|const|float32
call_3178 = relay.TupleGetItem(func_378_call(relay.reshape(var_3179.astype('float32'), []), relay.reshape(const_3180.astype('float32'), [3, 1, 10]), ), 1)
call_3181 = relay.TupleGetItem(func_381_call(relay.reshape(var_3179.astype('float32'), []), relay.reshape(const_3180.astype('float32'), [3, 1, 10]), ), 1)
bop_3193 = relay.less(call_3157.astype('bool'), relay.reshape(const_3158.astype('bool'), relay.shape_of(call_3157))) # shape=(2, 9, 6)
bop_3196 = relay.less(call_3159.astype('bool'), relay.reshape(const_3158.astype('bool'), relay.shape_of(call_3159))) # shape=(2, 9, 6)
func_1583_call = mod.get_global_var('func_1583')
func_1584_call = mutated_mod.get_global_var('func_1584')
call_3216 = relay.TupleGetItem(func_1583_call(), 1)
call_3217 = relay.TupleGetItem(func_1584_call(), 1)
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_3223 = func_3011_call()
call_3224 = func_3011_call()
output = relay.Tuple([call_3155,call_3178,var_3179,const_3180,bop_3193,call_3216,call_3223,])
output2 = relay.Tuple([call_3156,call_3181,var_3179,const_3180,bop_3196,call_3217,call_3224,])
func_3227 = relay.Function([var_3179,], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3228 = relay.var("var_3228", dtype = "float32", shape = ())#candidate|3228|()|var|float32
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3229 = func_3227_call(var_3228)
output = call_3229
func_3230 = relay.Function([var_3228], output)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_987_call = mod.get_global_var('func_987')
func_988_call = mutated_mod.get_global_var('func_988')
call_3255 = relay.TupleGetItem(func_987_call(), 0)
call_3256 = relay.TupleGetItem(func_988_call(), 0)
output = call_3255
output2 = call_3256
func_3258 = relay.Function([], output)
mod['func_3258'] = func_3258
mod = relay.transform.InferType()(mod)
mutated_mod['func_3258'] = func_3258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3259 = func_3258_call()
output = call_3259
func_3260 = relay.Function([], output)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3369 = relay.var("var_3369", dtype = "float64", shape = (12, 7, 1))#candidate|3369|(12, 7, 1)|var|float64
uop_3370 = relay.cos(var_3369.astype('float64')) # shape=(12, 7, 1)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_3372 = relay.TupleGetItem(func_420_call(), 0)
call_3373 = relay.TupleGetItem(func_421_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_3374 = func_1183_call()
call_3375 = func_1183_call()
uop_3379 = relay.sqrt(uop_3370.astype('float32')) # shape=(12, 7, 1)
output = relay.Tuple([call_3372,call_3374,uop_3379,])
output2 = relay.Tuple([call_3373,call_3375,uop_3379,])
func_3393 = relay.Function([var_3369,], output)
mod['func_3393'] = func_3393
mod = relay.transform.InferType()(mod)
mutated_mod['func_3393'] = func_3393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3394 = relay.var("var_3394", dtype = "float64", shape = (12, 7, 1))#candidate|3394|(12, 7, 1)|var|float64
func_3393_call = mutated_mod.get_global_var('func_3393')
call_3395 = func_3393_call(var_3394)
output = call_3395
func_3396 = relay.Function([var_3394], output)
mutated_mod['func_3396'] = func_3396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3475 = relay.var("var_3475", dtype = "float32", shape = (16, 10, 8))#candidate|3475|(16, 10, 8)|var|float32
const_3476 = relay.const([[[0.897504,-2.780401,8.841865,-4.867974,7.680368,-6.732348,-5.200459,-1.050777],[1.899487,4.248819,-6.757591,4.396054,-8.235117,3.490232,9.730837,-2.258796],[-6.845640,-1.713538,7.710991,7.528895,1.719964,4.341949,1.557751,9.270671],[-8.237755,-9.104316,-8.776271,-1.699212,5.025931,-8.692809,-1.710833,-9.904090],[7.524210,3.187402,6.239904,9.360937,-7.847749,5.878073,-0.939394,2.278173],[3.395258,-6.572309,4.295278,-3.649963,-0.822574,5.822899,6.167928,4.551919],[7.322692,2.998592,6.745665,7.043184,-7.866819,1.302433,8.067031,1.407391],[7.120692,-7.032442,-2.347166,0.547637,4.794679,-2.706157,-8.466319,1.563998],[-6.666331,7.184020,1.592789,1.821302,1.552460,7.963047,1.668091,5.159922],[-2.886158,8.126984,5.566215,7.159393,-6.702378,9.524119,-2.625576,-5.564332]],[[-7.488145,-2.396820,-8.368124,5.744632,5.755108,-0.750590,4.425299,9.070212],[5.329240,5.318498,9.675713,-4.323482,-4.850547,9.988723,-0.411912,9.677623],[7.760652,4.410360,2.108182,5.617423,0.296541,-8.506153,2.561450,-0.034068],[-7.383159,2.764542,-3.143571,6.222068,-5.392210,3.986495,-9.975400,1.639744],[1.723542,9.709990,0.593817,7.376504,-4.301292,1.878377,9.512828,2.321792],[3.569094,3.289745,-2.472059,-1.051360,8.700626,8.567277,-5.295209,2.239251],[5.330866,5.229766,8.766262,3.442379,-8.993429,-2.111418,-5.537277,4.256559],[-3.485036,-4.873813,-4.457139,1.930310,-6.922138,0.436106,9.466815,-9.269918],[-7.382157,7.928768,-7.628970,4.036100,-4.088108,-1.053609,9.895076,-5.781512],[1.238828,-6.329712,-3.516476,4.312316,7.035890,4.687691,-7.120776,4.109619]],[[9.326191,-0.893955,-3.555252,-0.048536,7.068385,3.664145,4.852322,7.320043],[-7.414436,-0.075374,9.659001,-3.085540,-5.529640,-7.963399,1.899506,8.655967],[-5.799916,2.995974,-2.300856,7.046528,-9.787248,-5.086609,1.444146,-6.471175],[-1.137286,-9.457134,2.454806,-6.181217,-8.979793,-9.848817,-7.860920,2.907247],[7.365805,9.737771,-4.676180,-4.910364,-4.325954,-3.267615,-5.206736,3.007966],[2.683433,-2.739344,-1.101098,8.908932,6.697710,6.321765,9.778043,2.264343],[1.653995,-6.684251,7.550061,-1.172317,-6.797138,2.386124,-8.376615,9.278592],[-4.168324,-7.262214,-3.386544,-2.745938,5.288761,2.303507,-4.224795,5.682892],[-6.895842,8.150900,-1.177156,3.730745,2.537172,6.716254,4.429037,3.559552],[1.410144,6.866728,0.639441,7.931531,2.495655,-3.891981,2.379882,4.197747]],[[5.226950,-9.490591,-2.633314,-6.206483,-5.395566,1.354822,-2.882064,-6.206107],[-9.258823,0.244504,6.591275,-4.348763,-4.042774,-8.603806,1.404846,9.089243],[-1.875601,-5.598714,2.951975,-4.228187,8.500825,0.437992,2.645271,8.592251],[1.633768,1.894723,7.596729,3.642454,-0.641862,-8.672497,9.505023,6.675333],[3.365111,2.366879,-9.422443,-6.138871,5.911449,-3.268173,3.439922,1.010578],[-0.926685,5.006583,-5.332756,4.431922,-2.982365,-6.045339,9.230467,-7.465841],[-4.658258,5.905815,2.668154,-0.392345,-8.628347,4.861815,-4.354884,-7.950335],[-3.542808,-9.551650,7.923198,7.200488,4.859311,1.961377,5.506053,2.362602],[7.539420,9.718401,4.300567,-3.892000,-0.059060,5.094319,-6.788187,8.299604],[-9.733295,5.303132,-7.408951,4.345109,4.091460,-9.984903,-9.409177,-4.835850]],[[2.078557,9.510989,3.673423,-1.434308,8.366104,-5.845944,4.492717,-3.790263],[0.369229,2.139560,7.927606,-9.602075,-4.708835,8.341921,-7.180387,-1.936173],[0.016614,-0.103994,8.520049,-7.060677,8.449320,-2.040457,4.683097,-1.427121],[5.706435,-3.778700,-6.090848,3.867075,2.550591,-2.188355,-5.480172,3.943736],[-3.069689,-4.988816,-6.989660,-6.551471,0.895341,6.403038,-2.694187,6.936696],[7.261674,-1.040687,-3.494960,-1.843547,-2.061616,-1.963090,-1.800403,0.244938],[5.543133,-7.164472,-2.013211,5.136416,-6.715001,-7.680357,-0.659809,-9.167637],[5.392183,-5.606446,-0.931374,-0.049870,2.739966,5.374374,-9.740871,-6.045483],[-6.180925,-2.937003,2.779672,-5.031048,-4.469020,-0.526242,-1.295688,-3.152588],[8.152172,-2.136281,-8.761383,7.311685,1.555942,5.309275,4.063035,5.220600]],[[-8.916933,-4.524907,-8.286738,8.743863,-2.114833,7.162534,-9.508054,-5.892269],[-7.277403,2.439751,8.339209,-0.227343,0.713904,5.069677,7.543621,-0.360071],[-7.787933,-7.830430,1.668174,2.748330,7.253221,7.138581,-2.314363,-7.197141],[-9.637409,7.829208,-4.098733,-1.761757,9.909120,-6.025028,-3.373998,8.214876],[6.459013,5.422523,4.024177,-7.354958,-3.180806,5.028321,-9.882950,8.098988],[1.399961,-7.642515,0.199238,-2.110327,-2.086816,1.785471,9.068561,1.494802],[-3.491071,-1.062275,1.959703,4.289870,-6.711276,5.839546,-6.614832,3.071777],[4.249390,2.082861,-0.653273,-4.447010,-3.361363,1.146554,-1.164420,-0.111254],[-7.871849,-1.731837,-4.558198,7.151569,-1.718846,8.384566,6.824895,0.083833],[-0.272417,9.426775,-5.328229,-8.814220,-1.132011,-9.821747,-0.791530,6.492364]],[[5.455062,2.164266,6.294700,-9.208235,3.185236,-1.097954,-8.481997,2.105877],[-8.350463,2.109505,-1.455434,2.843230,-3.012358,6.149165,1.803509,7.968245],[8.843292,-5.767699,5.744923,-0.401245,-6.198393,9.613667,-3.446880,8.910956],[-5.791230,1.947760,-4.982963,6.635084,6.758362,-3.368554,5.339772,7.586244],[-4.386115,-0.059116,8.269581,-3.569462,5.035918,-3.610424,-8.264820,8.642682],[4.538887,-0.476241,0.018694,-5.007864,-1.327475,0.242279,-2.785959,-1.902734],[-1.896936,-3.588138,-8.161785,3.280891,-4.645050,4.292340,-6.922211,6.010102],[-3.479078,6.393404,2.937393,-4.499226,-3.853957,-1.807233,-6.706070,2.213018],[1.412353,-0.656360,-0.979661,0.526074,-1.222128,-4.034610,9.895985,-5.111776],[6.748554,-1.731289,6.076296,-9.009442,-8.346835,-8.660206,-9.591096,-3.669073]],[[0.969471,9.349088,-6.873497,-7.724450,8.081783,5.779743,3.937807,-9.566419],[-3.050110,6.932146,0.151473,7.513865,-5.133542,8.307881,-1.076172,-9.624096],[-9.764465,2.496587,6.476352,0.063352,-7.165383,9.998669,-1.128673,-8.754957],[-3.392020,-8.564025,-9.341343,-7.966838,1.593663,1.988160,4.393770,7.262050],[2.739738,-3.545632,4.301803,5.257536,2.988639,6.926460,9.516431,-7.784362],[3.788420,4.820422,-0.231706,9.642355,3.185394,2.885619,-4.728182,1.832486],[-8.093649,-4.167185,1.163527,8.114544,3.103609,7.627924,9.213714,-0.998561],[-2.055817,-1.644629,1.873848,7.036723,-5.915553,8.606101,8.271520,-3.090684],[5.241072,3.636952,-4.448826,6.134612,0.996097,-7.065113,-2.090670,-6.156752],[5.521197,4.525045,-9.081280,6.672841,-9.008492,2.401587,8.703838,3.632778]],[[8.863544,-7.708168,7.548265,7.567883,-7.442608,5.475654,-8.607584,3.965578],[-1.572778,7.466188,4.599116,0.906949,3.076369,-6.762429,-0.724724,1.218042],[-5.475363,-6.046271,2.576264,3.759098,5.677412,-9.605919,-4.759915,3.591694],[2.705554,0.682271,-0.899691,-1.674393,9.061542,-3.290062,-4.228846,5.528820],[7.652916,-7.507396,9.963059,-3.348477,3.615299,3.944027,1.167324,-7.135190],[2.405060,3.256303,3.294791,7.014965,-3.799050,-1.277077,-8.526168,-1.420921],[6.364230,-6.739686,-5.755753,-8.719035,-1.121667,4.649790,-8.562206,-4.558946],[3.754704,7.349093,2.290234,8.759052,9.331323,-2.827568,-0.343890,9.545298],[7.877499,-9.183230,6.363150,6.979616,-7.545019,9.044806,7.706412,-8.180314],[5.462859,7.869113,5.709411,4.971163,-2.350023,-0.003214,-5.549146,6.727316]],[[9.935973,6.719190,-1.475716,-5.460384,0.219246,7.091647,7.295609,4.087287],[-0.076013,9.532718,4.015218,-9.405493,-5.117052,-1.061521,-5.109565,5.597412],[-0.423088,-8.273279,0.783557,1.307859,-0.308636,2.169565,5.030011,4.170564],[5.485261,3.127226,8.826968,8.150805,-0.924628,-6.461812,1.679262,-0.452848],[-9.498390,-8.121103,-0.615635,-6.515859,-4.151980,-4.554907,-9.322747,3.285154],[6.414247,-0.467129,-1.391274,-9.153164,-8.632609,-2.568637,-9.282120,9.321955],[3.921394,6.022648,5.049592,7.572393,6.019790,2.969499,2.551794,-5.902958],[0.535483,0.532718,-7.147632,-8.736846,-5.926314,-0.080031,-2.568788,3.809629],[7.299512,3.441092,-3.193155,-2.891904,-7.994961,5.949131,5.265204,-9.913831],[-1.411732,-1.842081,-7.466745,8.478011,4.598374,8.381863,7.668725,-7.203681]],[[0.018036,-5.209183,-7.853488,-6.853372,-9.373318,-2.264476,4.196776,9.512507],[-3.139973,-6.319483,-4.682795,7.689530,9.212042,1.753107,7.686497,7.700775],[3.871813,-7.119998,-6.005268,7.701975,-3.263592,-0.920233,-2.145634,6.510157],[-4.029679,3.738373,-1.553658,-8.627408,-1.729206,-5.904452,4.007728,-5.289635],[3.492589,-1.225499,9.948250,4.094626,9.633045,8.109070,3.059150,-7.787159],[-7.091991,-5.697993,-6.015159,-9.241939,8.336287,-0.268944,-5.375187,7.060804],[2.525605,-6.363748,6.954705,-5.190799,4.749334,6.140120,4.604912,-5.618000],[6.961569,-0.435218,-3.532401,-6.691970,1.097566,-8.687717,-0.077907,-5.728197],[-0.856261,-5.835672,-0.708430,-3.566114,9.046536,-0.365752,-3.084313,-1.474162],[1.709205,7.634699,-3.029730,2.440092,2.436489,1.445951,-5.712370,0.492097]],[[-4.898289,-1.022470,6.808628,5.035592,-8.674448,0.665000,-1.161596,9.498382],[-8.559491,4.807131,-1.138452,-0.336076,1.154489,6.259467,2.526092,-2.474376],[3.432020,-0.680576,8.252159,6.641693,0.756444,-9.326674,-8.605405,-9.407122],[4.603149,2.465670,-5.782842,4.377026,-5.763058,4.668882,7.813155,4.067384],[6.197518,6.209952,1.176564,-0.538985,3.657844,4.384202,-0.051211,-9.518100],[2.824522,-3.966363,-9.252242,9.533335,-8.737963,-0.190324,-7.008865,-3.480616],[-2.689631,5.305940,-4.211679,-0.732173,-0.920227,-3.072514,3.030729,-9.226642],[-3.229815,5.020619,-0.503236,2.249238,1.767816,6.492552,-1.387783,8.516425],[0.862743,-9.322310,5.761767,-3.070222,-1.321674,-4.870701,6.005231,2.580326],[7.062067,-7.241227,8.247795,6.067545,-0.099190,2.776182,-8.836653,3.071615]],[[5.677187,-4.059013,-9.125713,-2.608236,6.054887,5.303720,-7.986238,-0.081862],[0.821147,8.156147,0.930226,5.355456,9.421006,-1.549458,-6.355435,-0.436670],[4.526286,-2.594028,0.762660,9.488743,7.495919,5.859458,3.354719,-1.503098],[9.550358,1.424101,-7.948932,-3.034397,8.797600,4.861891,-0.455224,3.936986],[-3.291072,4.181162,3.874191,-2.329043,6.264618,-5.368554,-4.452570,5.384686],[-1.326682,-5.644899,-2.838271,9.556400,6.382524,2.318584,-6.508840,7.959467],[-8.058980,-3.614348,6.140659,-5.585331,-4.226561,6.982161,0.339628,-8.641482],[-4.598090,-7.060674,7.333361,-4.110870,4.163146,-0.506894,3.104807,-0.079853],[9.295725,4.226951,-1.773018,2.486189,-9.363543,6.594176,-2.634316,7.041250],[-6.898527,7.685144,1.623359,-0.096413,2.033364,-7.064350,-6.287432,-1.355805]],[[1.335853,2.629805,3.443959,1.514945,2.173950,-5.634689,-7.445427,-4.850523],[1.315523,5.251565,-3.396429,6.422186,-7.964366,-5.835739,5.451708,-8.967138],[-5.417684,-2.066907,5.439918,7.241620,-4.940747,-5.564774,4.810120,2.429575],[-1.751680,-2.397374,-5.890069,-9.297387,9.711474,9.963206,2.979430,-7.679077],[5.084424,1.206875,-8.955559,-0.735695,-6.892563,6.944007,2.463921,9.479351],[2.435282,-1.900848,9.583831,0.232105,1.869416,6.522575,-5.200547,-9.907686],[-5.418100,-8.245424,-6.938583,2.170822,0.936819,3.430261,9.414762,-5.025285],[-5.444805,-0.354331,0.433024,-5.063778,9.987799,5.958052,9.624591,8.953119],[-6.170668,-7.214382,-9.758033,6.479951,8.901491,0.841232,7.241117,5.236606],[-3.690831,-3.553114,6.684187,6.566590,-0.670665,0.336251,-6.189700,-7.361010]],[[-2.696709,-3.473850,-2.720867,6.186871,-6.357492,7.783022,-1.048324,0.227920],[-4.419110,9.573884,-3.320995,-0.928287,7.783408,1.656967,1.123150,-8.132890],[-3.852852,-7.859481,6.615871,-0.675793,-8.573464,5.633401,6.493867,-3.418340],[-2.349897,8.331235,-9.482869,-5.192570,9.766756,6.100717,9.664990,4.219474],[-1.743354,-8.632200,4.271415,2.291548,-7.724016,-6.157982,8.398727,-9.739796],[-8.489434,9.357611,3.968670,7.233379,6.418965,7.590513,-2.044370,-4.647639],[2.478597,-2.776515,-9.455724,-0.398259,8.225568,-6.106557,0.226473,-9.169778],[-6.446028,-9.026799,0.275249,4.116035,8.615595,0.904320,3.080006,-1.690547],[4.308767,1.983742,0.340094,-5.013797,-4.370259,9.597100,4.375402,-2.673577],[2.344027,-3.499922,-8.074867,5.568284,-3.623950,9.324978,0.616106,-7.081208]],[[2.803870,-5.333004,-2.754760,9.790682,7.411430,-4.796903,-3.468711,-9.168531],[-0.951289,1.502456,-6.817543,-9.152432,7.841902,-4.139493,4.680974,3.235146],[-2.005061,3.757654,3.391647,-3.508272,-8.870609,3.505710,1.681346,-0.244335],[-1.345146,-3.419077,6.214326,-0.139326,-8.063939,1.477517,7.107199,-0.176353],[-7.322055,-3.915219,-1.206371,-7.420741,-4.861176,-7.715744,5.187219,9.231773],[-1.781942,3.102760,-1.541105,-9.621580,-5.840200,-0.172727,5.737096,-6.692909],[7.104212,9.117731,4.726500,-8.074807,2.820317,1.454804,3.303369,5.515830],[-1.393052,8.362515,-4.186801,3.286388,6.319217,-0.081868,4.324984,-2.476368],[-2.169825,-4.333988,6.439346,0.970930,6.340487,-0.586914,8.883112,-8.479852],[-1.176553,-4.839224,-3.030895,8.534489,6.921547,-3.075453,-1.852204,4.973057]]], dtype = "float32")#candidate|3476|(16, 10, 8)|const|float32
bop_3477 = relay.floor_divide(var_3475.astype('float32'), relay.reshape(const_3476.astype('float32'), relay.shape_of(var_3475))) # shape=(16, 10, 8)
func_2626_call = mod.get_global_var('func_2626')
func_2628_call = mutated_mod.get_global_var('func_2628')
call_3482 = relay.TupleGetItem(func_2626_call(), 2)
call_3483 = relay.TupleGetItem(func_2628_call(), 2)
output = relay.Tuple([bop_3477,call_3482,])
output2 = relay.Tuple([bop_3477,call_3483,])
func_3491 = relay.Function([var_3475,], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
var_3492 = relay.var("var_3492", dtype = "float32", shape = (16, 10, 8))#candidate|3492|(16, 10, 8)|var|float32
output = func_3491(var_3492)
func_3493 = relay.Function([var_3492], output)
mutated_mod['func_3493'] = func_3493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
call_3500 = relay.TupleGetItem(func_1656_call(), 1)
call_3501 = relay.TupleGetItem(func_1658_call(), 1)
output = relay.Tuple([call_3500,])
output2 = relay.Tuple([call_3501,])
func_3511 = relay.Function([], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mutated_mod.get_global_var('func_3511')
call_3512 = func_3511_call()
output = call_3512
func_3513 = relay.Function([], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3533 = relay.var("var_3533", dtype = "float32", shape = (1, 7, 1))#candidate|3533|(1, 7, 1)|var|float32
uop_3534 = relay.log(var_3533.astype('float32')) # shape=(1, 7, 1)
uop_3543 = relay.log2(var_3533.astype('float64')) # shape=(1, 7, 1)
output = relay.Tuple([uop_3534,uop_3543,])
output2 = relay.Tuple([uop_3534,uop_3543,])
func_3546 = relay.Function([var_3533,], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3547 = relay.var("var_3547", dtype = "float32", shape = (1, 7, 1))#candidate|3547|(1, 7, 1)|var|float32
func_3546_call = mutated_mod.get_global_var('func_3546')
call_3548 = func_3546_call(var_3547)
output = call_3548
func_3549 = relay.Function([var_3547], output)
mutated_mod['func_3549'] = func_3549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_3566 = relay.TupleGetItem(func_904_call(), 0)
call_3567 = relay.TupleGetItem(func_905_call(), 0)
var_3594 = relay.var("var_3594", dtype = "float32", shape = (2, 9, 7))#candidate|3594|(2, 9, 7)|var|float32
bop_3595 = relay.less_equal(call_3566.astype('bool'), var_3594.astype('bool')) # shape=(2, 9, 7)
bop_3598 = relay.less_equal(call_3567.astype('bool'), var_3594.astype('bool')) # shape=(2, 9, 7)
func_214_call = mod.get_global_var('func_214')
func_215_call = mutated_mod.get_global_var('func_215')
call_3623 = relay.TupleGetItem(func_214_call(), 0)
call_3624 = relay.TupleGetItem(func_215_call(), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2739_call = mutated_mod.get_global_var('func_2739')
call_3631 = relay.TupleGetItem(func_2737_call(), 1)
call_3632 = relay.TupleGetItem(func_2739_call(), 1)
output = relay.Tuple([bop_3595,call_3623,call_3631,])
output2 = relay.Tuple([bop_3598,call_3624,call_3632,])
func_3645 = relay.Function([var_3594,], output)
mod['func_3645'] = func_3645
mod = relay.transform.InferType()(mod)
var_3646 = relay.var("var_3646", dtype = "float32", shape = (2, 9, 7))#candidate|3646|(2, 9, 7)|var|float32
output = func_3645(var_3646)
func_3647 = relay.Function([var_3646], output)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_3683 = func_1340_call()
call_3684 = func_1340_call()
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_3686 = relay.TupleGetItem(func_238_call(), 0)
call_3687 = relay.TupleGetItem(func_239_call(), 0)
output = relay.Tuple([call_3683,call_3686,])
output2 = relay.Tuple([call_3684,call_3687,])
func_3698 = relay.Function([], output)
mod['func_3698'] = func_3698
mod = relay.transform.InferType()(mod)
mutated_mod['func_3698'] = func_3698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3698_call = mutated_mod.get_global_var('func_3698')
call_3699 = func_3698_call()
output = call_3699
func_3700 = relay.Function([], output)
mutated_mod['func_3700'] = func_3700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_3710 = func_1340_call()
call_3711 = func_1340_call()
func_1308_call = mod.get_global_var('func_1308')
func_1311_call = mutated_mod.get_global_var('func_1311')
var_3713 = relay.var("var_3713", dtype = "float64", shape = (825,))#candidate|3713|(825,)|var|float64
call_3712 = relay.TupleGetItem(func_1308_call(relay.reshape(var_3713.astype('float64'), [5, 15, 11])), 0)
call_3714 = relay.TupleGetItem(func_1311_call(relay.reshape(var_3713.astype('float64'), [5, 15, 11])), 0)
var_3720 = relay.var("var_3720", dtype = "uint8", shape = (5, 15, 11))#candidate|3720|(5, 15, 11)|var|uint8
bop_3721 = relay.logical_and(call_3712.astype('bool'), relay.reshape(var_3720.astype('bool'), relay.shape_of(call_3712))) # shape=(5, 15, 11)
bop_3724 = relay.logical_and(call_3714.astype('bool'), relay.reshape(var_3720.astype('bool'), relay.shape_of(call_3714))) # shape=(5, 15, 11)
func_3227_call = mod.get_global_var('func_3227')
func_3230_call = mutated_mod.get_global_var('func_3230')
const_3751 = relay.const(-0.357603, dtype = "float32")#candidate|3751|()|const|float32
call_3750 = relay.TupleGetItem(func_3227_call(relay.reshape(const_3751.astype('float32'), [])), 5)
call_3752 = relay.TupleGetItem(func_3230_call(relay.reshape(const_3751.astype('float32'), [])), 5)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_3758 = relay.TupleGetItem(func_904_call(), 0)
call_3759 = relay.TupleGetItem(func_905_call(), 0)
bop_3761 = relay.floor_divide(call_3712.astype('float32'), relay.reshape(var_3713.astype('float32'), relay.shape_of(call_3712))) # shape=(5, 15, 11)
bop_3764 = relay.floor_divide(call_3714.astype('float32'), relay.reshape(var_3713.astype('float32'), relay.shape_of(call_3714))) # shape=(5, 15, 11)
func_1807_call = mod.get_global_var('func_1807')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_3783 = relay.TupleGetItem(func_1807_call(), 1)
call_3784 = relay.TupleGetItem(func_1809_call(), 1)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_3804 = relay.TupleGetItem(func_841_call(), 0)
call_3805 = relay.TupleGetItem(func_843_call(), 0)
output = relay.Tuple([call_3710,bop_3721,call_3750,const_3751,call_3758,bop_3761,call_3783,call_3804,])
output2 = relay.Tuple([call_3711,bop_3724,call_3752,const_3751,call_3759,bop_3764,call_3784,call_3805,])
func_3813 = relay.Function([var_3713,var_3720,], output)
mod['func_3813'] = func_3813
mod = relay.transform.InferType()(mod)
var_3814 = relay.var("var_3814", dtype = "float64", shape = (825,))#candidate|3814|(825,)|var|float64
var_3815 = relay.var("var_3815", dtype = "uint8", shape = (5, 15, 11))#candidate|3815|(5, 15, 11)|var|uint8
output = func_3813(var_3814,var_3815,)
func_3816 = relay.Function([var_3814,var_3815,], output)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3832 = relay.var("var_3832", dtype = "float32", shape = (16, 12, 11))#candidate|3832|(16, 12, 11)|var|float32
uop_3833 = relay.asinh(var_3832.astype('float32')) # shape=(16, 12, 11)
output = relay.Tuple([uop_3833,])
output2 = relay.Tuple([uop_3833,])
func_3839 = relay.Function([var_3832,], output)
mod['func_3839'] = func_3839
mod = relay.transform.InferType()(mod)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3840 = relay.var("var_3840", dtype = "float32", shape = (16, 12, 11))#candidate|3840|(16, 12, 11)|var|float32
func_3839_call = mutated_mod.get_global_var('func_3839')
call_3841 = func_3839_call(var_3840)
output = call_3841
func_3842 = relay.Function([var_3840], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_3912 = relay.TupleGetItem(func_904_call(), 1)
call_3913 = relay.TupleGetItem(func_905_call(), 1)
output = call_3912
output2 = call_3913
func_3929 = relay.Function([], output)
mod['func_3929'] = func_3929
mod = relay.transform.InferType()(mod)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3929_call = mutated_mod.get_global_var('func_3929')
call_3930 = func_3929_call()
output = call_3930
func_3931 = relay.Function([], output)
mutated_mod['func_3931'] = func_3931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_3968 = relay.TupleGetItem(func_1866_call(), 0)
call_3969 = relay.TupleGetItem(func_1867_call(), 0)
output = relay.Tuple([call_3968,])
output2 = relay.Tuple([call_3969,])
func_3986 = relay.Function([], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
output = func_3986()
func_3987 = relay.Function([], output)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3998 = relay.const([[[-5.789930,-2.102825,-6.853844,-8.552491,-6.192950,-3.245039,-7.423856,8.702301],[-4.812620,-9.346382,-9.870788,5.505765,-7.029166,-9.608834,8.877409,1.206687],[-7.325952,5.783954,0.375496,-7.539166,-2.341274,-5.878867,9.609101,9.251130],[-3.198631,-5.090234,6.031208,5.748804,3.248402,-1.040838,7.392647,-7.626545],[4.683092,-1.806640,1.103927,-9.022309,7.384035,-8.213324,7.023764,-3.185874],[-1.498476,-5.284024,6.480599,2.698135,1.968318,7.556547,3.642807,8.310375]],[[3.146181,-1.610050,-0.950665,1.635653,9.806185,-8.128865,5.918722,-1.060819],[-8.982100,7.282709,-4.067942,-6.956356,0.800483,5.655384,-6.075244,7.923730],[-7.305401,-9.694815,6.185606,2.797789,-9.352238,6.809139,-0.619414,0.883226],[-3.106816,-4.385203,9.085938,-4.197301,1.099199,0.483163,-5.806542,8.092835],[-5.620829,2.936633,6.243825,-2.840021,6.078583,-2.247571,5.988781,-0.890057],[-2.391008,7.061159,9.192024,-1.891095,4.930550,-0.352823,8.122577,-9.624382]],[[-0.044434,2.488121,-3.765683,6.910028,7.658173,-0.947863,2.131569,-6.253496],[9.516098,5.455785,2.091733,3.200390,5.498259,5.083129,-3.646848,2.843715],[4.850084,-0.164242,-9.549317,7.464586,5.077597,6.794916,-4.518711,3.899805],[9.413532,7.231404,-8.981443,6.436057,-8.048088,-3.829414,-5.971864,0.891401],[-4.505465,-2.830666,1.770986,-6.672546,6.024821,8.875531,0.606860,7.377008],[0.808394,-6.749857,-0.163912,-2.502106,-9.026319,5.345703,-2.288593,-5.494513]],[[-9.037276,7.961210,8.685855,4.117257,6.167903,-8.548080,7.681232,0.955985],[-8.405627,-9.178049,7.450398,-0.247227,-9.175456,6.798200,-7.026461,7.569990],[-0.653100,9.626318,9.873592,-1.647120,6.765566,3.299837,-9.937626,-0.085328],[-6.300714,2.573779,2.028851,0.465394,6.568360,-4.271515,8.087169,1.805971],[-8.931082,9.204450,2.617951,6.857011,-5.053226,9.393753,3.908548,-8.693207],[-9.759651,-5.310219,6.759867,3.559673,-5.353006,-9.364163,-0.971939,0.103467]],[[-0.799778,-7.616038,-1.157348,2.107221,-3.892842,6.838004,-6.772228,-1.508982],[-4.787712,-6.096363,-5.275520,-7.969725,5.496040,-7.793209,-5.838234,-5.109396],[-0.655841,-9.805566,-6.198018,-9.372781,-8.147341,8.669135,3.291278,-0.469889],[-2.373582,8.879583,-0.987083,6.512971,-1.485444,2.506117,1.611239,-9.169901],[-2.902393,-4.684685,-2.303169,-8.696477,-7.649001,9.490036,0.191839,7.655242],[-5.629434,-5.817358,5.505915,-0.679220,-2.515494,-9.552816,0.593711,1.711196]],[[-6.604387,6.476155,-2.954222,7.641785,2.168152,-4.895782,-2.123051,-9.001330],[-1.012463,-0.042449,-3.955548,-6.201586,-8.277985,-8.576372,5.642499,-1.415708],[9.094314,-5.200073,3.302925,-8.136890,-3.004258,0.647568,0.063686,5.515064],[-8.306212,8.198119,-8.347229,3.400705,-3.168970,-3.322258,-4.563932,7.686507],[-2.405078,4.174825,-3.299025,-8.968461,2.146038,0.663499,5.034057,-0.052603],[-0.100041,-6.978236,7.632525,-8.797825,6.489722,6.519819,5.273023,1.023571]]], dtype = "float32")#candidate|3998|(6, 6, 8)|const|float32
uop_3999 = relay.cos(const_3998.astype('float32')) # shape=(6, 6, 8)
output = uop_3999
output2 = uop_3999
func_4001 = relay.Function([], output)
mod['func_4001'] = func_4001
mod = relay.transform.InferType()(mod)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4001_call = mutated_mod.get_global_var('func_4001')
call_4002 = func_4001_call()
output = call_4002
func_4003 = relay.Function([], output)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_4021 = relay.TupleGetItem(func_1398_call(), 2)
call_4022 = relay.TupleGetItem(func_1399_call(), 2)
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4023 = func_3011_call()
call_4024 = func_3011_call()
output = relay.Tuple([call_4021,call_4023,])
output2 = relay.Tuple([call_4022,call_4024,])
func_4038 = relay.Function([], output)
mod['func_4038'] = func_4038
mod = relay.transform.InferType()(mod)
output = func_4038()
func_4039 = relay.Function([], output)
mutated_mod['func_4039'] = func_4039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1044_call = mutated_mod.get_global_var('func_1044')
call_4103 = relay.TupleGetItem(func_1043_call(), 0)
call_4104 = relay.TupleGetItem(func_1044_call(), 0)
output = relay.Tuple([call_4103,])
output2 = relay.Tuple([call_4104,])
func_4123 = relay.Function([], output)
mod['func_4123'] = func_4123
mod = relay.transform.InferType()(mod)
output = func_4123()
func_4124 = relay.Function([], output)
mutated_mod['func_4124'] = func_4124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_4133 = relay.TupleGetItem(func_3511_call(), 0)
call_4134 = relay.TupleGetItem(func_3513_call(), 0)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_4148 = relay.TupleGetItem(func_3986_call(), 0)
call_4149 = relay.TupleGetItem(func_3987_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_4150 = relay.TupleGetItem(func_264_call(), 0)
call_4151 = relay.TupleGetItem(func_266_call(), 0)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_4178 = relay.TupleGetItem(func_817_call(), 1)
call_4179 = relay.TupleGetItem(func_819_call(), 1)
func_378_call = mod.get_global_var('func_378')
func_381_call = mutated_mod.get_global_var('func_381')
var_4191 = relay.var("var_4191", dtype = "float32", shape = ())#candidate|4191|()|var|float32
const_4192 = relay.const([-9.748673,-9.955810,-3.696862,-2.482294,-1.169048,-8.263240,5.608162,-1.836662,-7.844400,-6.369487,0.724681,4.977318,-6.262761,8.504225,-6.205075,-0.393972,5.122825,2.387990,-2.924428,-4.035894,7.682545,-6.608557,-0.704242,-5.474956,3.914757,-4.371198,-7.302952,-6.888687,8.464260,-2.874279], dtype = "float32")#candidate|4192|(30,)|const|float32
call_4190 = relay.TupleGetItem(func_378_call(relay.reshape(var_4191.astype('float32'), []), relay.reshape(const_4192.astype('float32'), [3, 1, 10]), ), 1)
call_4193 = relay.TupleGetItem(func_381_call(relay.reshape(var_4191.astype('float32'), []), relay.reshape(const_4192.astype('float32'), [3, 1, 10]), ), 1)
func_1043_call = mod.get_global_var('func_1043')
func_1044_call = mutated_mod.get_global_var('func_1044')
call_4196 = relay.TupleGetItem(func_1043_call(), 0)
call_4197 = relay.TupleGetItem(func_1044_call(), 0)
func_2626_call = mod.get_global_var('func_2626')
func_2628_call = mutated_mod.get_global_var('func_2628')
call_4209 = relay.TupleGetItem(func_2626_call(), 3)
call_4210 = relay.TupleGetItem(func_2628_call(), 3)
func_605_call = mod.get_global_var('func_605')
func_607_call = mutated_mod.get_global_var('func_607')
call_4228 = relay.TupleGetItem(func_605_call(), 0)
call_4229 = relay.TupleGetItem(func_607_call(), 0)
func_987_call = mod.get_global_var('func_987')
func_988_call = mutated_mod.get_global_var('func_988')
call_4232 = relay.TupleGetItem(func_987_call(), 0)
call_4233 = relay.TupleGetItem(func_988_call(), 0)
output = relay.Tuple([call_4133,call_4148,call_4150,call_4178,call_4190,var_4191,const_4192,call_4196,call_4209,call_4228,call_4232,])
output2 = relay.Tuple([call_4134,call_4149,call_4151,call_4179,call_4193,var_4191,const_4192,call_4197,call_4210,call_4229,call_4233,])
func_4236 = relay.Function([var_4191,], output)
mod['func_4236'] = func_4236
mod = relay.transform.InferType()(mod)
var_4237 = relay.var("var_4237", dtype = "float32", shape = ())#candidate|4237|()|var|float32
output = func_4236(var_4237)
func_4238 = relay.Function([var_4237], output)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_4271 = relay.TupleGetItem(func_817_call(), 2)
call_4272 = relay.TupleGetItem(func_819_call(), 2)
output = relay.Tuple([call_4271,])
output2 = relay.Tuple([call_4272,])
func_4276 = relay.Function([], output)
mod['func_4276'] = func_4276
mod = relay.transform.InferType()(mod)
output = func_4276()
func_4277 = relay.Function([], output)
mutated_mod['func_4277'] = func_4277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4334 = relay.TupleGetItem(func_4276_call(), 0)
call_4335 = relay.TupleGetItem(func_4277_call(), 0)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_4337 = relay.TupleGetItem(func_3986_call(), 0)
call_4338 = relay.TupleGetItem(func_3987_call(), 0)
func_1656_call = mod.get_global_var('func_1656')
func_1658_call = mutated_mod.get_global_var('func_1658')
call_4340 = relay.TupleGetItem(func_1656_call(), 0)
call_4341 = relay.TupleGetItem(func_1658_call(), 0)
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4366 = func_3011_call()
call_4367 = func_3011_call()
bop_4374 = relay.maximum(call_4334.astype('uint16'), relay.reshape(call_4366.astype('uint16'), relay.shape_of(call_4334))) # shape=(2, 9, 6)
bop_4377 = relay.maximum(call_4335.astype('uint16'), relay.reshape(call_4367.astype('uint16'), relay.shape_of(call_4335))) # shape=(2, 9, 6)
output = relay.Tuple([call_4337,call_4340,bop_4374,])
output2 = relay.Tuple([call_4338,call_4341,bop_4377,])
func_4379 = relay.Function([], output)
mod['func_4379'] = func_4379
mod = relay.transform.InferType()(mod)
output = func_4379()
func_4380 = relay.Function([], output)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mod.get_global_var('func_1010')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_4390 = func_1010_call()
call_4391 = func_1010_call()
func_1340_call = mod.get_global_var('func_1340')
func_1341_call = mutated_mod.get_global_var('func_1341')
call_4400 = func_1340_call()
call_4401 = func_1340_call()
func_4001_call = mod.get_global_var('func_4001')
func_4003_call = mutated_mod.get_global_var('func_4003')
call_4405 = func_4001_call()
call_4406 = func_4001_call()
func_3107_call = mod.get_global_var('func_3107')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_4414 = relay.TupleGetItem(func_3107_call(), 0)
call_4415 = relay.TupleGetItem(func_3108_call(), 0)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_4429 = relay.TupleGetItem(func_1866_call(), 0)
call_4430 = relay.TupleGetItem(func_1867_call(), 0)
func_2451_call = mod.get_global_var('func_2451')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_4432 = func_2451_call()
call_4433 = func_2451_call()
output = relay.Tuple([call_4390,call_4400,call_4405,call_4414,call_4429,call_4432,])
output2 = relay.Tuple([call_4391,call_4401,call_4406,call_4415,call_4430,call_4433,])
func_4434 = relay.Function([], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
output = func_4434()
func_4435 = relay.Function([], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4439 = relay.const([[[4.085728,-2.217825,8.485464,5.197239,-6.648918,2.548790,-7.197121,-2.746353,1.462835,7.338842,6.228247,5.641942,-1.685169,-2.330668],[-7.252119,0.765305,0.404762,4.666719,-6.894798,1.677232,1.636273,-8.037101,1.061861,7.362628,2.249139,-2.417615,-9.643484,2.987806],[1.810474,-5.439726,6.691818,8.870698,0.078430,2.927658,2.068841,2.394451,-4.664339,5.521143,-9.618576,-0.346218,8.924266,-4.164163],[5.784021,7.081635,2.494443,-1.800648,9.192509,0.735077,7.045596,-6.788208,-1.732148,6.495671,-2.142804,-4.719701,7.508886,-9.097108],[5.509090,8.291110,2.901595,-5.631752,-8.360180,0.842101,-6.224234,-6.753391,-6.660266,0.365951,-1.261748,0.617531,1.822103,8.592060],[-8.118352,9.387996,9.999887,-1.498244,7.500861,1.939249,-0.840612,8.183854,-5.902450,-2.068437,1.254326,1.874475,-8.568946,-5.271797]],[[-8.830343,3.363655,6.069934,-2.249382,0.095445,4.260233,5.357943,-1.907158,-1.662522,2.968273,2.819999,5.279826,0.694206,9.409913],[3.440095,6.214931,4.366191,-9.629178,3.761558,9.951703,-0.963995,-6.829333,-8.476139,3.049479,-8.249574,6.994121,-0.037438,-8.527114],[1.463093,7.923184,7.356821,-6.265038,3.874766,-1.325052,4.813240,0.266334,-8.109828,-2.967898,-3.045547,3.274901,-9.718711,9.386299],[1.399118,-1.137496,6.656960,4.894232,-9.312217,8.005707,0.587706,-9.058393,-8.098014,-3.830762,1.561814,2.784317,-0.201674,1.605824],[9.662255,9.685842,-9.333018,0.060649,4.759549,0.311653,-9.327319,-1.796269,-9.936737,-7.150452,-8.093001,8.205216,1.020166,-8.909570],[-0.269476,-3.307444,-1.662447,-4.063868,6.445594,-6.839319,4.126198,-1.244145,-9.454631,7.035729,-7.138595,7.029597,-1.438793,-6.697101]],[[2.778371,1.779948,-9.869425,7.949162,7.007771,-1.268385,5.056803,1.491226,-8.001227,-0.428656,-3.427603,6.016504,-0.445083,-0.430663],[9.851069,-7.382599,8.205452,-7.833726,-5.182772,-7.160899,-6.592602,-3.650223,8.906204,-3.943056,-5.155207,-8.589847,-9.974963,1.915141],[4.330364,5.687955,-3.064154,5.055648,6.553677,-8.786155,-4.832644,2.569073,6.665644,-2.490764,6.880613,-1.572786,-0.022802,1.088266],[-1.752174,5.105439,-7.712026,-7.647990,-8.459758,-1.326132,-2.280015,9.312984,3.473257,0.144144,0.270568,0.954276,-1.406570,-8.717904],[-8.581688,4.104884,-5.523661,-6.272790,1.810746,1.162754,8.734239,7.953660,-7.706204,-2.910924,9.522973,-6.461308,3.434191,2.126468],[1.927318,-3.047874,8.415601,-1.567393,-1.805832,-6.721827,-1.325464,-9.053019,3.258482,6.875604,-1.804461,4.582344,4.583326,-3.275692]],[[1.193458,-7.308224,5.213298,7.632102,-0.914309,-5.575261,-9.890373,-4.301154,3.727330,-2.845307,-4.003829,-8.759916,6.161604,-5.786966],[-5.922360,-0.493275,-3.803839,-3.877822,9.735136,7.049312,-0.890259,2.622389,-1.002514,8.009210,-6.912075,0.097319,4.766911,8.406637],[1.748423,6.781227,2.994062,-1.506640,-8.653367,1.393828,-1.563867,7.522568,7.672820,8.063523,-1.279710,9.571830,6.549274,8.880864],[-7.160824,5.886719,-7.109826,3.733800,-1.896579,3.994067,5.790706,6.629149,9.275175,-0.025366,0.691745,0.220524,-6.819500,-6.145153],[7.880488,-6.885303,-9.565496,0.042850,-5.438616,-7.720208,-3.707258,4.146682,7.235072,9.194470,1.356172,1.685238,-6.316508,-0.645954],[7.543146,-2.938446,-2.889341,-1.698907,-9.339406,0.014298,0.639474,-9.361393,3.828294,8.415471,-9.316919,-2.835288,-0.065371,-0.202170]],[[-1.118757,5.904844,6.380619,-0.417520,-2.504049,-9.488994,-3.139125,1.884974,-9.287580,-7.871973,8.943029,-0.509729,-3.325845,5.424835],[-0.942382,3.596586,-9.365027,-5.053730,-3.749304,2.224889,3.356540,-6.069161,4.709752,5.333352,2.043427,4.070521,3.460190,-6.899596],[-2.996861,-4.380971,1.779113,1.021602,-4.614030,0.861854,-5.316266,5.192220,-8.584670,-3.559698,3.149658,7.517271,8.687222,1.844773],[-6.506663,-5.185448,2.656983,5.794986,8.482922,-7.947859,-4.303457,-3.985821,-4.360919,7.995927,2.184621,-0.643849,0.554629,4.751985],[4.365225,-7.299476,-4.609119,-1.957814,7.730171,-8.129448,6.534752,2.944966,-3.867231,-4.825504,1.037156,-3.948608,7.519111,-6.854295],[-5.984126,6.645461,-0.108517,-4.278078,2.344808,7.685759,-1.199892,6.334630,-8.763956,-2.348272,-7.772986,-6.589991,-9.632186,9.709565]],[[4.024197,-8.543380,6.260137,2.702415,3.052622,6.524947,2.336531,-9.963613,-9.099470,4.185464,-8.605071,-8.553462,-5.109099,-4.327598],[3.569053,9.794473,2.439023,-3.875166,3.295280,1.253743,8.541709,0.424787,6.065455,1.506912,9.346389,-3.841844,-5.956810,3.508543],[1.339131,5.366463,2.146720,-1.041639,-8.606001,6.263814,-1.565190,9.488500,1.461219,-1.032948,-1.288360,6.617727,-0.587223,8.160089],[-1.803856,-3.109406,-3.335467,-2.884303,-0.882799,6.431113,8.724998,-1.238569,0.974461,-8.423122,8.502262,2.420045,-0.404797,8.084010],[-3.826156,3.129346,9.394620,4.007393,2.907076,3.189707,-9.158259,-0.669377,-1.680112,9.876361,-8.844615,-4.042153,2.948288,6.849689],[-4.405925,-9.321906,7.306534,4.861054,3.316287,0.029173,-7.362604,-7.489078,6.697775,9.737477,-3.134955,8.758689,-5.252254,-6.403658]],[[4.546478,4.134396,-4.399472,-9.868668,6.205665,5.679180,-3.995851,4.845152,4.243946,6.116342,-7.341465,-8.109954,-9.214218,-9.236950],[-2.561770,-2.625923,-0.961418,9.568233,7.308584,0.472600,-0.320684,-7.494548,0.508646,1.893374,1.838403,4.794291,2.886668,-2.157135],[4.888178,-8.523273,8.528966,3.122328,-4.079975,9.793293,-5.779987,-2.742518,9.312252,-4.188740,-4.413256,3.453945,-6.727300,-3.341548],[7.167662,8.841402,6.214988,-0.497496,-2.232652,-5.002121,-2.420645,7.085819,-8.420649,0.563116,-3.004992,-1.395200,-5.294968,-0.209413],[-4.226626,-2.616730,-7.097940,-6.635649,-1.337647,-2.115421,-5.072656,6.794529,-5.268390,-8.184865,5.906266,-3.851501,0.654630,-9.294209],[0.141472,-3.821253,1.178706,8.706273,6.766122,6.362114,-3.257763,-3.945470,1.701080,3.763665,-0.614138,-2.506259,-5.714591,9.535535]],[[-1.354148,4.866382,7.482360,1.671151,-6.310236,-9.536879,8.785530,2.934476,2.002829,-2.081581,-4.190439,2.875316,0.294389,-7.834475],[-4.481985,2.520857,5.191207,-6.134038,7.197129,-8.153194,-2.544453,0.678172,-9.773125,7.063293,-0.183262,-4.072096,-3.803447,-7.632481],[-5.096675,3.111812,-8.949921,8.902246,2.653173,-4.542427,7.466101,-2.960024,5.397743,9.106925,5.832978,-3.086639,0.356873,-9.698947],[-9.505139,1.149877,1.783174,2.692877,-5.787345,5.136353,6.266270,-0.488530,-2.200521,-5.815092,-9.897634,-7.325028,7.511991,5.879704],[4.931594,-8.742207,-4.773081,-9.172449,-3.681006,-6.900523,-1.798885,-6.726630,0.498371,7.509472,7.072736,-6.184877,1.711053,6.100110],[1.746470,6.089645,-4.459130,-4.699043,-1.935956,-6.017390,-7.044003,1.626979,9.368501,-7.119950,-6.068083,-9.982734,-9.209097,8.006745]],[[7.261178,-1.139742,4.933416,-7.473191,0.552083,4.619243,8.878084,-9.550118,-6.369609,8.028590,7.883528,-5.146763,5.380234,8.208176],[5.998130,7.062990,-7.327660,1.029922,-8.652206,4.387173,-4.522519,6.897503,0.903384,-8.677884,6.842101,1.582332,7.686020,-0.509872],[-8.211799,-1.544579,-6.993971,3.435909,9.374926,-4.411663,-5.720913,1.752680,-9.175275,-0.069362,-6.480113,9.417141,-3.541013,-8.171141],[6.730272,-6.766027,0.552609,1.448419,5.911647,-1.253422,-1.095077,-0.143466,-9.823672,6.762886,-3.687515,-7.839370,-4.331186,-5.719689],[-1.952476,7.897627,1.009357,-6.303080,-6.243863,-3.674240,-0.738462,8.851486,3.750139,7.737495,9.550806,2.981794,-9.658189,6.973633],[7.665725,-3.218641,-4.988218,6.542491,2.391947,-1.812188,-9.436875,0.866189,6.010897,3.588516,-3.742435,8.548561,5.494921,6.626986]],[[-9.447005,4.673558,-5.166877,-7.090692,2.035171,-7.857847,5.663597,-4.497871,5.175369,-7.540980,-7.529263,-4.443346,-7.091040,9.340183],[-9.101200,2.318808,5.921724,-6.596862,-0.340574,-3.598011,4.405369,3.836537,-5.473290,-0.431538,1.566434,-3.864613,-8.135392,8.907801],[-1.168492,-6.552007,7.028377,-9.112821,-8.229518,1.674893,3.040406,-4.194689,-1.272912,2.358951,-4.455917,0.964120,-3.434043,5.478744],[-6.704224,5.572375,6.515353,5.469445,4.257630,9.653443,-5.926807,4.704397,0.806649,-8.603429,5.241632,-5.925981,9.156217,2.792694],[5.356533,-3.092081,4.798980,6.668940,-9.454680,-1.399432,-5.358053,7.467501,-7.555508,-6.573348,3.750597,4.339476,-9.266431,-2.304171],[3.648574,7.806298,-2.920648,-4.118624,8.649365,9.199185,-3.036487,7.884310,8.806198,-7.894198,5.160980,1.562196,6.292093,0.992349]],[[-9.030775,-0.204384,-2.223691,2.147360,9.768667,-6.674131,5.420332,-1.437223,6.378481,-3.834841,2.423629,-6.975079,4.680535,9.927793],[6.729945,-9.100050,-8.696191,6.884162,-6.167028,9.720024,1.979400,-2.584061,1.510628,-4.868804,-1.492319,-4.559153,2.668320,5.832334],[-2.345777,-9.456905,5.379650,-5.726272,9.685642,-8.815862,-6.131377,7.157265,-9.255115,-4.497797,5.847622,-0.318260,6.836538,1.766956],[-8.124511,0.852632,2.413741,-7.809931,-1.658546,-0.333979,-7.366597,5.037124,-8.809995,-1.061071,-3.449462,5.489358,-4.010405,4.003695],[-4.218015,-3.035551,7.283183,1.448754,7.968990,-0.725910,-1.718811,6.927762,3.711971,1.132915,-7.811220,-0.111530,-5.362587,-7.986041],[-1.495453,-2.939990,-8.243055,3.087910,-9.934760,-7.350442,-3.450595,5.547421,1.615632,9.560075,1.479670,-2.944715,8.855968,-9.860780]],[[-6.163159,-7.336953,6.605386,8.335452,5.514980,1.616546,-7.720193,-4.672251,-8.556316,2.529376,-9.631053,6.733870,-5.921758,8.085935],[-5.316634,0.417203,-7.031207,0.093961,0.671578,3.490641,6.170635,-5.419877,-4.206505,-1.335256,9.760338,-1.279776,0.252688,9.587296],[-8.632247,1.795250,4.041633,8.307480,-4.256575,4.209433,-9.858401,-3.710075,9.295388,3.117922,3.219665,9.594600,2.879812,2.436302],[6.495527,-0.187408,1.372006,-6.882542,7.008066,9.673712,6.687046,1.015415,1.370977,3.784561,-3.274974,2.045120,5.310252,-7.110229],[-7.871115,6.338155,1.828363,9.814119,0.285524,1.756357,-8.596338,-9.676846,7.664684,9.345743,9.913999,5.681041,8.566685,-0.712580],[0.159920,9.051580,-6.907251,0.873300,7.814116,-2.477928,6.743258,2.889299,-9.048540,0.550130,9.763498,8.091248,3.300694,-0.081515]],[[7.384260,7.390540,-2.162228,-2.261133,9.153652,-2.219737,3.157737,1.014428,-7.442052,-3.227695,-4.818412,-9.180472,-2.998223,3.375066],[-9.994326,-0.009636,-3.945982,2.602308,-8.956543,8.102887,6.184907,-0.219319,-4.655448,6.846090,-5.282181,-5.668171,0.349287,-5.150281],[-5.024915,-9.769045,-5.353372,-7.977226,-4.514789,8.577403,0.561626,9.259662,-0.158389,7.031791,9.942789,3.675429,-8.946749,3.457375],[-9.773017,8.767505,5.774638,5.894153,-8.356935,-1.422047,6.137179,-1.612243,-8.364477,-0.304327,4.432299,1.236241,-1.502821,2.376917],[-3.368909,4.895934,-1.366772,4.988253,-9.924531,1.725124,-6.359773,3.166881,3.336217,7.332549,1.599884,-2.285217,3.235422,-7.525237],[-7.629075,7.925604,-9.839490,1.127539,5.877202,-7.657391,-0.986199,0.492214,4.960195,-4.726250,-5.262969,-6.929033,9.065641,-2.669246]]], dtype = "float32")#candidate|4439|(13, 6, 14)|const|float32
var_4440 = relay.var("var_4440", dtype = "float32", shape = (13, 6, 14))#candidate|4440|(13, 6, 14)|var|float32
bop_4441 = relay.floor_mod(const_4439.astype('float32'), relay.reshape(var_4440.astype('float32'), relay.shape_of(const_4439))) # shape=(13, 6, 14)
bop_4468 = relay.less_equal(bop_4441.astype('bool'), relay.reshape(const_4439.astype('bool'), relay.shape_of(bop_4441))) # shape=(13, 6, 14)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_4475 = relay.TupleGetItem(func_1491_call(), 0)
call_4476 = relay.TupleGetItem(func_1493_call(), 0)
uop_4477 = relay.sigmoid(bop_4441.astype('float32')) # shape=(13, 6, 14)
uop_4481 = relay.log10(call_4475.astype('float64')) # shape=(880,)
uop_4483 = relay.log10(call_4476.astype('float64')) # shape=(880,)
var_4491 = relay.var("var_4491", dtype = "float32", shape = (13, 6, 14))#candidate|4491|(13, 6, 14)|var|float32
bop_4492 = relay.bitwise_or(var_4440.astype('uint8'), relay.reshape(var_4491.astype('uint8'), relay.shape_of(var_4440))) # shape=(13, 6, 14)
output = relay.Tuple([bop_4468,uop_4477,uop_4481,bop_4492,])
output2 = relay.Tuple([bop_4468,uop_4477,uop_4483,bop_4492,])
func_4496 = relay.Function([var_4440,var_4491,], output)
mod['func_4496'] = func_4496
mod = relay.transform.InferType()(mod)
mutated_mod['func_4496'] = func_4496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mutated_mod.get_global_var('func_4496')
var_4498 = relay.var("var_4498", dtype = "float32", shape = (13, 6, 14))#candidate|4498|(13, 6, 14)|var|float32
var_4499 = relay.var("var_4499", dtype = "float32", shape = (13, 6, 14))#candidate|4499|(13, 6, 14)|var|float32
call_4497 = func_4496_call(var_4498,var_4499,)
output = call_4497
func_4500 = relay.Function([var_4498,var_4499,], output)
mutated_mod['func_4500'] = func_4500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2739_call = mutated_mod.get_global_var('func_2739')
call_4529 = relay.TupleGetItem(func_2737_call(), 1)
call_4530 = relay.TupleGetItem(func_2739_call(), 1)
output = call_4529
output2 = call_4530
func_4531 = relay.Function([], output)
mod['func_4531'] = func_4531
mod = relay.transform.InferType()(mod)
output = func_4531()
func_4532 = relay.Function([], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1221_call = mod.get_global_var('func_1221')
func_1223_call = mutated_mod.get_global_var('func_1223')
call_4580 = relay.TupleGetItem(func_1221_call(), 0)
call_4581 = relay.TupleGetItem(func_1223_call(), 0)
output = call_4580
output2 = call_4581
func_4590 = relay.Function([], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
output = func_4590()
func_4591 = relay.Function([], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mod.get_global_var('func_1010')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_4597 = func_1010_call()
call_4598 = func_1010_call()
output = relay.Tuple([call_4597,])
output2 = relay.Tuple([call_4598,])
func_4610 = relay.Function([], output)
mod['func_4610'] = func_4610
mod = relay.transform.InferType()(mod)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mutated_mod.get_global_var('func_4610')
call_4611 = func_4610_call()
output = call_4611
func_4612 = relay.Function([], output)
mutated_mod['func_4612'] = func_4612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1044_call = mutated_mod.get_global_var('func_1044')
call_4618 = relay.TupleGetItem(func_1043_call(), 0)
call_4619 = relay.TupleGetItem(func_1044_call(), 0)
func_4001_call = mod.get_global_var('func_4001')
func_4003_call = mutated_mod.get_global_var('func_4003')
call_4629 = func_4001_call()
call_4630 = func_4001_call()
var_4635 = relay.var("var_4635", dtype = "float64", shape = (2, 9, 6))#candidate|4635|(2, 9, 6)|var|float64
bop_4636 = relay.bitwise_xor(call_4618.astype('int32'), relay.reshape(var_4635.astype('int32'), relay.shape_of(call_4618))) # shape=(2, 9, 6)
bop_4639 = relay.bitwise_xor(call_4619.astype('int32'), relay.reshape(var_4635.astype('int32'), relay.shape_of(call_4619))) # shape=(2, 9, 6)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4643 = relay.TupleGetItem(func_4276_call(), 0)
call_4644 = relay.TupleGetItem(func_4277_call(), 0)
bop_4646 = relay.logical_or(call_4618.astype('bool'), relay.reshape(var_4635.astype('bool'), relay.shape_of(call_4618))) # shape=(2, 9, 6)
bop_4649 = relay.logical_or(call_4619.astype('bool'), relay.reshape(var_4635.astype('bool'), relay.shape_of(call_4619))) # shape=(2, 9, 6)
output = relay.Tuple([call_4629,bop_4636,call_4643,bop_4646,])
output2 = relay.Tuple([call_4630,bop_4639,call_4644,bop_4649,])
func_4652 = relay.Function([var_4635,], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
var_4653 = relay.var("var_4653", dtype = "float64", shape = (2, 9, 6))#candidate|4653|(2, 9, 6)|var|float64
output = func_4652(var_4653)
func_4654 = relay.Function([var_4653], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mod.get_global_var('func_3150')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_4656 = relay.TupleGetItem(func_3150_call(), 0)
call_4657 = relay.TupleGetItem(func_3151_call(), 0)
output = relay.Tuple([call_4656,])
output2 = relay.Tuple([call_4657,])
func_4665 = relay.Function([], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
call_4666 = func_4665_call()
output = call_4666
func_4667 = relay.Function([], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_672_call = mod.get_global_var('func_672')
func_673_call = mutated_mod.get_global_var('func_673')
call_4675 = relay.TupleGetItem(func_672_call(), 0)
call_4676 = relay.TupleGetItem(func_673_call(), 0)
var_4677 = relay.var("var_4677", dtype = "float32", shape = (2, 9, 6))#candidate|4677|(2, 9, 6)|var|float32
bop_4678 = relay.right_shift(call_4675.astype('int16'), relay.reshape(var_4677.astype('int16'), relay.shape_of(call_4675))) # shape=(2, 9, 6)
bop_4681 = relay.right_shift(call_4676.astype('int16'), relay.reshape(var_4677.astype('int16'), relay.shape_of(call_4676))) # shape=(2, 9, 6)
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
const_4684 = relay.const([9.959178,-9.460537,7.967614,0.523533,4.687442,1.888547,5.136869,-7.823557,-0.393115,-4.997398,5.849732,-5.395001,4.005376,-3.196473,-0.845927,-5.809233,-4.669654,4.933362,-2.714672,-0.847240,4.168441,-5.317661,2.949741,7.920312,-8.354630,8.021855,6.999223,-6.870873,1.049029,2.174649,-0.992081,9.940222,-8.967939,-9.388391,-5.422508,-6.439362,1.638739,-8.963879,0.015766,-1.477001,2.145525,2.317329,5.444966,2.564922,-2.879009,-8.049113,1.449585,-8.310892,3.562503,-0.878626,2.852174,5.039768,7.312389,-6.360197,9.674817,-9.624292,-2.038964,-2.463477,2.529744,-0.731267,-2.178309,0.232672,4.441040,-8.117165,-6.620079,-6.205639,1.971528,-3.235284,4.979537,-4.350333,9.265107,5.465921,-1.414522,-9.498481,2.031642,-7.990260,0.383802,8.479304,9.999076,2.669839,-7.486779,0.659585,-8.177311,6.837421,-7.857738,-0.168005,-1.562307,-6.689256,4.598282,5.460640,9.974168,1.374965,3.742329,6.038774,-0.773355,-1.187649,-0.335549,-1.080038,-1.154349,-8.632697,8.230802,-2.663954,-5.950228,7.938005,8.646486,7.181368,-9.428404,-7.680913,0.705175,-4.233048,-6.474254,2.831145,-3.842773,8.912612,3.865097,-6.247616,5.229776,-3.732188,1.921546,1.120335,-0.430529,6.239617,4.044333,-2.494690,-1.181730,-3.197223,-6.838210,8.802635,-2.920823,4.865860,4.232513,-8.797249,-2.252541,-1.066148,-4.370926], dtype = "float64")#candidate|4684|(135,)|const|float64
call_4683 = relay.TupleGetItem(func_277_call(relay.reshape(const_4684.astype('float64'), [9, 15, 1])), 1)
call_4685 = relay.TupleGetItem(func_280_call(relay.reshape(const_4684.astype('float64'), [9, 15, 1])), 1)
func_3645_call = mod.get_global_var('func_3645')
func_3647_call = mutated_mod.get_global_var('func_3647')
const_4688 = relay.const([-0.106873,2.585827,9.191110,-1.520870,-1.023481,9.236229,-6.830277,-5.861910,2.672406,8.310427,8.558407,-1.298990,-2.393753,-7.701950,8.899761,9.089058,-2.887414,7.222760,9.334218,-2.933575,-3.632789,-7.497611,-7.930292,-6.413477,5.405251,7.514905,-6.917467,-0.343312,9.702341,-1.824300,8.018625,-7.065691,-4.193687,2.975923,7.234892,6.933477,4.653765,9.976290,-7.891716,-9.081968,3.471354,1.759085,7.302202,-1.164464,-4.411483,4.697336,8.547822,-3.093490,6.201387,9.483165,8.000337,4.582706,-8.205102,-1.309004,-5.195049,-1.494350,-6.915265,2.353361,-1.844927,-3.007850,-2.725981,-4.570033,-5.491192,8.668355,5.951702,-4.249071,4.467302,8.804137,-1.725851,2.496774,-1.555321,-8.847050,3.995076,8.560377,-3.501774,-6.018244,2.446959,-0.823245,7.545794,-3.556748,-9.089606,9.176416,-4.468304,8.703223,-1.308559,4.707909,8.337962,3.486342,2.918054,-2.828855,9.876410,-4.420729,0.454504,-5.627563,-2.030279,4.214545,7.666206,-6.532834,-5.393772,8.671365,-6.930444,2.709038,-1.632396,-9.743956,3.175175,6.407982,-4.254534,-0.132579,-0.919306,-0.912311,0.565724,1.989026,7.458746,-7.790722,-4.661914,-7.282922,-6.109394,-2.112739,4.755536,-2.350576,0.953370,4.636304,9.213955,8.122201,-7.081452,-2.478887], dtype = "float32")#candidate|4688|(126,)|const|float32
call_4687 = relay.TupleGetItem(func_3645_call(relay.reshape(const_4688.astype('float32'), [2, 9, 7])), 0)
call_4689 = relay.TupleGetItem(func_3647_call(relay.reshape(const_4688.astype('float32'), [2, 9, 7])), 0)
func_3150_call = mod.get_global_var('func_3150')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_4693 = relay.TupleGetItem(func_3150_call(), 1)
call_4694 = relay.TupleGetItem(func_3151_call(), 1)
uop_4695 = relay.acos(const_4684.astype('float32')) # shape=(135,)
uop_4709 = relay.sigmoid(uop_4695.astype('float32')) # shape=(135,)
func_1411_call = mod.get_global_var('func_1411')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_4720 = relay.TupleGetItem(func_1411_call(), 0)
call_4721 = relay.TupleGetItem(func_1412_call(), 0)
bop_4726 = relay.bitwise_or(uop_4695.astype('int16'), relay.reshape(uop_4709.astype('int16'), relay.shape_of(uop_4695))) # shape=(135,)
func_3986_call = mod.get_global_var('func_3986')
func_3987_call = mutated_mod.get_global_var('func_3987')
call_4729 = relay.TupleGetItem(func_3986_call(), 0)
call_4730 = relay.TupleGetItem(func_3987_call(), 0)
output = relay.Tuple([bop_4678,call_4683,call_4687,const_4688,call_4693,call_4720,bop_4726,call_4729,])
output2 = relay.Tuple([bop_4681,call_4685,call_4689,const_4688,call_4694,call_4721,bop_4726,call_4730,])
func_4734 = relay.Function([var_4677,], output)
mod['func_4734'] = func_4734
mod = relay.transform.InferType()(mod)
var_4735 = relay.var("var_4735", dtype = "float32", shape = (2, 9, 6))#candidate|4735|(2, 9, 6)|var|float32
output = func_4734(var_4735)
func_4736 = relay.Function([var_4735], output)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_4817 = func_2451_call()
call_4818 = func_2451_call()
func_2626_call = mod.get_global_var('func_2626')
func_2628_call = mutated_mod.get_global_var('func_2628')
call_4826 = relay.TupleGetItem(func_2626_call(), 1)
call_4827 = relay.TupleGetItem(func_2628_call(), 1)
func_1583_call = mod.get_global_var('func_1583')
func_1584_call = mutated_mod.get_global_var('func_1584')
call_4832 = relay.TupleGetItem(func_1583_call(), 0)
call_4833 = relay.TupleGetItem(func_1584_call(), 0)
func_3929_call = mod.get_global_var('func_3929')
func_3931_call = mutated_mod.get_global_var('func_3931')
call_4859 = func_3929_call()
call_4860 = func_3929_call()
func_2927_call = mod.get_global_var('func_2927')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4880 = relay.TupleGetItem(func_2927_call(relay.reshape(call_4817.astype('float64'), [2, 9, 6])), 0)
call_4881 = relay.TupleGetItem(func_2930_call(relay.reshape(call_4817.astype('float64'), [2, 9, 6])), 0)
var_4892 = relay.var("var_4892", dtype = "float64", shape = (2, 9, 6))#candidate|4892|(2, 9, 6)|var|float64
bop_4893 = relay.divide(call_4832.astype('float64'), relay.reshape(var_4892.astype('float64'), relay.shape_of(call_4832))) # shape=(2, 9, 6)
bop_4896 = relay.divide(call_4833.astype('float64'), relay.reshape(var_4892.astype('float64'), relay.shape_of(call_4833))) # shape=(2, 9, 6)
func_4590_call = mod.get_global_var('func_4590')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_4899 = func_4590_call()
call_4900 = func_4590_call()
output = relay.Tuple([call_4817,call_4826,call_4859,call_4880,bop_4893,call_4899,])
output2 = relay.Tuple([call_4818,call_4827,call_4860,call_4881,bop_4896,call_4900,])
func_4904 = relay.Function([var_4892,], output)
mod['func_4904'] = func_4904
mod = relay.transform.InferType()(mod)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4905 = relay.var("var_4905", dtype = "float64", shape = (2, 9, 6))#candidate|4905|(2, 9, 6)|var|float64
func_4904_call = mutated_mod.get_global_var('func_4904')
call_4906 = func_4904_call(var_4905)
output = call_4906
func_4907 = relay.Function([var_4905], output)
mutated_mod['func_4907'] = func_4907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4941 = relay.var("var_4941", dtype = "int64", shape = (8, 8, 15))#candidate|4941|(8, 8, 15)|var|int64
var_4942 = relay.var("var_4942", dtype = "int64", shape = (8, 8, 15))#candidate|4942|(8, 8, 15)|var|int64
bop_4943 = relay.less(var_4941.astype('bool'), relay.reshape(var_4942.astype('bool'), relay.shape_of(var_4941))) # shape=(8, 8, 15)
output = bop_4943
output2 = bop_4943
func_4946 = relay.Function([var_4941,var_4942,], output)
mod['func_4946'] = func_4946
mod = relay.transform.InferType()(mod)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4946_call = mutated_mod.get_global_var('func_4946')
var_4948 = relay.var("var_4948", dtype = "int64", shape = (8, 8, 15))#candidate|4948|(8, 8, 15)|var|int64
var_4949 = relay.var("var_4949", dtype = "int64", shape = (8, 8, 15))#candidate|4949|(8, 8, 15)|var|int64
call_4947 = func_4946_call(var_4948,var_4949,)
output = call_4947
func_4950 = relay.Function([var_4948,var_4949,], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4962 = relay.var("var_4962", dtype = "int16", shape = (15, 2, 4))#candidate|4962|(15, 2, 4)|var|int16
const_4963 = relay.const([[[6,-1,1,-1],[-9,-3,1,2]],[[1,4,10,-2],[3,-4,-10,2]],[[8,-2,-5,-9],[3,-1,-9,10]],[[2,-2,10,-5],[-9,-4,4,2]],[[9,-1,8,-1],[4,-7,9,-7]],[[-1,-3,2,-6],[7,-9,-5,-4]],[[-8,3,9,-8],[9,9,3,9]],[[4,5,-10,-8],[-10,-9,-9,-3]],[[10,-2,-1,-3],[6,-10,-6,4]],[[-9,-6,1,-5],[1,8,-6,7]],[[-9,6,-9,-4],[-9,-5,1,6]],[[8,10,-6,-10],[8,-8,-3,4]],[[-6,-5,7,10],[-2,-2,-6,-5]],[[-10,4,10,4],[-6,-6,-9,-2]],[[-9,2,6,4],[8,-3,4,-9]]], dtype = "int16")#candidate|4963|(15, 2, 4)|const|int16
bop_4964 = relay.greater_equal(var_4962.astype('bool'), relay.reshape(const_4963.astype('bool'), relay.shape_of(var_4962))) # shape=(15, 2, 4)
output = relay.Tuple([bop_4964,])
output2 = relay.Tuple([bop_4964,])
func_4967 = relay.Function([var_4962,], output)
mod['func_4967'] = func_4967
mod = relay.transform.InferType()(mod)
mutated_mod['func_4967'] = func_4967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4968 = relay.var("var_4968", dtype = "int16", shape = (15, 2, 4))#candidate|4968|(15, 2, 4)|var|int16
func_4967_call = mutated_mod.get_global_var('func_4967')
call_4969 = func_4967_call(var_4968)
output = call_4969
func_4970 = relay.Function([var_4968], output)
mutated_mod['func_4970'] = func_4970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4977 = relay.var("var_4977", dtype = "float32", shape = (4, 1, 7))#candidate|4977|(4, 1, 7)|var|float32
uop_4978 = relay.log(var_4977.astype('float32')) # shape=(4, 1, 7)
func_3929_call = mod.get_global_var('func_3929')
func_3931_call = mutated_mod.get_global_var('func_3931')
call_4980 = func_3929_call()
call_4981 = func_3929_call()
bop_4982 = relay.maximum(uop_4978.astype('uint64'), relay.reshape(var_4977.astype('uint64'), relay.shape_of(uop_4978))) # shape=(4, 1, 7)
func_4665_call = mod.get_global_var('func_4665')
func_4667_call = mutated_mod.get_global_var('func_4667')
call_4999 = relay.TupleGetItem(func_4665_call(), 0)
call_5000 = relay.TupleGetItem(func_4667_call(), 0)
func_1583_call = mod.get_global_var('func_1583')
func_1584_call = mutated_mod.get_global_var('func_1584')
call_5006 = relay.TupleGetItem(func_1583_call(), 1)
call_5007 = relay.TupleGetItem(func_1584_call(), 1)
bop_5014 = relay.greater_equal(call_4999.astype('bool'), relay.reshape(call_5006.astype('bool'), relay.shape_of(call_4999))) # shape=(2, 9, 6)
bop_5017 = relay.greater_equal(call_5000.astype('bool'), relay.reshape(call_5007.astype('bool'), relay.shape_of(call_5000))) # shape=(2, 9, 6)
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
var_5022 = relay.var("var_5022", dtype = "int64", shape = (1134,))#candidate|5022|(1134,)|var|int64
call_5021 = relay.TupleGetItem(func_707_call(relay.reshape(var_5022.astype('int64'), [14, 9, 9])), 0)
call_5023 = relay.TupleGetItem(func_709_call(relay.reshape(var_5022.astype('int64'), [14, 9, 9])), 0)
output = relay.Tuple([call_4980,bop_4982,bop_5014,call_5021,var_5022,])
output2 = relay.Tuple([call_4981,bop_4982,bop_5017,call_5023,var_5022,])
func_5025 = relay.Function([var_4977,var_5022,], output)
mod['func_5025'] = func_5025
mod = relay.transform.InferType()(mod)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5025_call = mutated_mod.get_global_var('func_5025')
var_5027 = relay.var("var_5027", dtype = "float32", shape = (4, 1, 7))#candidate|5027|(4, 1, 7)|var|float32
var_5028 = relay.var("var_5028", dtype = "int64", shape = (1134,))#candidate|5028|(1134,)|var|int64
call_5026 = func_5025_call(var_5027,var_5028,)
output = call_5026
func_5029 = relay.Function([var_5027,var_5028,], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_497_call = mod.get_global_var('func_497')
func_498_call = mutated_mod.get_global_var('func_498')
call_5051 = relay.TupleGetItem(func_497_call(), 1)
call_5052 = relay.TupleGetItem(func_498_call(), 1)
var_5059 = relay.var("var_5059", dtype = "float64", shape = (3, 1, 10))#candidate|5059|(3, 1, 10)|var|float64
bop_5060 = relay.logical_or(call_5051.astype('bool'), relay.reshape(var_5059.astype('bool'), relay.shape_of(call_5051))) # shape=(3, 1, 10)
bop_5063 = relay.logical_or(call_5052.astype('bool'), relay.reshape(var_5059.astype('bool'), relay.shape_of(call_5052))) # shape=(3, 1, 10)
output = relay.Tuple([bop_5060,])
output2 = relay.Tuple([bop_5063,])
func_5070 = relay.Function([var_5059,], output)
mod['func_5070'] = func_5070
mod = relay.transform.InferType()(mod)
mutated_mod['func_5070'] = func_5070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5071 = relay.var("var_5071", dtype = "float64", shape = (3, 1, 10))#candidate|5071|(3, 1, 10)|var|float64
func_5070_call = mutated_mod.get_global_var('func_5070')
call_5072 = func_5070_call(var_5071)
output = call_5072
func_5073 = relay.Function([var_5071], output)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mod.get_global_var('func_2493')
func_2495_call = mutated_mod.get_global_var('func_2495')
call_5092 = relay.TupleGetItem(func_2493_call(), 0)
call_5093 = relay.TupleGetItem(func_2495_call(), 0)
output = call_5092
output2 = call_5093
func_5109 = relay.Function([], output)
mod['func_5109'] = func_5109
mod = relay.transform.InferType()(mod)
mutated_mod['func_5109'] = func_5109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5109_call = mutated_mod.get_global_var('func_5109')
call_5110 = func_5109_call()
output = call_5110
func_5111 = relay.Function([], output)
mutated_mod['func_5111'] = func_5111
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5181 = relay.var("var_5181", dtype = "int64", shape = (13, 16, 10))#candidate|5181|(13, 16, 10)|var|int64
const_5182 = relay.const([[[-10,5,10,-2,1,8,5,-1,-4,-2],[-6,3,-8,4,10,10,-8,3,10,-10],[7,-2,7,1,4,8,10,10,4,5],[-3,-3,-10,8,-2,-9,-6,9,-8,-7],[-4,10,8,-3,3,8,1,-8,-10,2],[-7,-10,6,6,-2,4,-8,1,4,10],[-9,5,2,2,-2,-3,-7,-9,2,5],[-10,1,3,6,3,-7,8,4,-7,-1],[3,7,-7,-3,4,5,6,4,6,-7],[9,3,7,-9,-8,-5,-6,-2,-9,-4],[-10,-8,2,6,-3,-9,10,-2,-3,-3],[-1,1,1,10,6,-2,10,-7,-4,-4],[-7,-1,-7,3,-4,-1,5,2,-5,5],[-6,-2,-8,1,-1,9,8,-6,-3,-6],[-5,1,9,7,6,7,-10,-8,-7,10],[-6,7,-9,2,2,-6,-5,9,2,1]],[[-2,10,9,-2,-1,-6,3,10,6,3],[-9,5,8,1,-3,-8,1,9,-7,6],[-5,-4,6,10,7,-10,-2,2,2,-2],[8,-2,-7,8,-1,-4,7,-7,-2,-4],[10,-7,8,4,5,-5,-3,1,-7,6],[3,6,-7,-2,-10,10,-10,-2,-8,-8],[-2,5,1,9,-5,6,4,8,5,-2],[6,-4,-9,-5,-3,-10,-8,-4,1,5],[-6,-5,-4,-4,3,-5,8,-3,4,-5],[-1,-5,2,-7,1,-10,-4,-9,-8,-9],[-1,-7,-2,5,10,-6,-5,-9,-8,-9],[-10,-8,-3,-5,2,-1,-8,1,1,-9],[-7,2,-6,8,-9,5,-7,-4,-9,-3],[-2,-5,3,2,1,-6,8,2,-1,10],[-9,-9,-7,9,1,9,6,-6,10,-4],[-1,1,8,-1,-4,-1,5,1,5,8]],[[-2,1,-10,9,-5,1,1,3,-5,-8],[-7,-4,-9,4,3,-9,-8,-4,-9,8],[-4,-10,-3,4,-1,-9,-1,1,-5,3],[-5,-6,-5,1,3,-10,8,-2,4,1],[10,6,-2,-1,-1,7,-9,9,3,-9],[-9,3,-8,-8,-3,-2,8,4,2,-7],[10,-9,6,2,-9,-6,-10,8,4,-4],[7,-1,3,-5,3,-10,-7,-1,-8,-2],[3,-7,-5,-5,-3,9,7,4,-7,7],[-10,-10,-5,-10,3,-1,-8,-3,5,5],[9,7,3,-5,8,-10,-8,-5,-1,-5],[-7,-3,7,1,6,-8,-9,10,-6,-4],[-7,-5,5,8,-7,10,-1,10,-3,-8],[6,-3,-2,-10,-9,3,9,3,-9,9],[5,-9,-4,-2,1,-5,9,3,10,8],[-8,-7,8,-10,-10,3,8,-10,3,1]],[[-6,-1,4,-4,9,-6,-4,3,-1,-9],[10,6,5,2,10,2,-10,8,-8,10],[6,-4,9,2,-2,2,-4,2,4,9],[-5,-9,3,9,-10,9,-7,4,-4,-7],[-9,8,9,5,4,-7,-5,6,-4,1],[5,9,5,-7,2,-5,5,6,-5,-9],[-7,10,3,-1,-8,-2,-2,-5,4,6],[-8,-7,-4,8,6,-8,4,-6,-3,-5],[-9,6,-5,10,2,7,9,-10,-9,-4],[-6,7,-10,6,-9,-4,7,2,10,-3],[-10,-10,-4,-3,1,-7,10,6,8,5],[2,-8,9,2,3,-2,6,3,-4,-5],[4,1,-6,5,-8,1,-10,-10,-10,8],[10,10,4,7,2,3,6,9,1,-7],[-4,9,-9,3,-1,-5,-3,-8,8,4],[-9,-5,1,6,10,8,-2,-8,-6,-10]],[[-3,10,10,2,-3,-8,-3,5,9,-5],[5,-2,2,9,10,9,-6,7,4,4],[8,-10,-4,-7,8,-1,9,1,-1,1],[10,5,8,-2,3,-10,9,-4,-6,-6],[-6,7,-10,7,7,-5,10,4,1,-10],[5,7,-9,7,-3,10,-1,3,3,5],[9,-8,-9,7,-2,4,7,9,2,1],[-10,5,6,-5,9,1,-9,9,5,5],[2,-3,1,-5,10,10,-7,-3,4,-3],[7,3,7,1,-9,-9,8,-8,-6,5],[8,-9,-10,-9,-10,9,10,-5,-5,9],[5,-5,-2,3,5,-5,3,10,-6,-10],[-3,8,-3,10,-9,2,-9,-6,-9,8],[-7,8,8,-5,-7,3,-6,-3,3,-4],[4,-6,-2,-5,-3,6,-7,2,-2,-10],[-4,1,5,8,9,2,-10,10,3,5]],[[-8,6,7,9,-4,10,-3,9,-5,9],[9,-1,10,-2,-7,-6,10,-8,-9,6],[-7,5,-7,1,-1,10,-2,10,-2,-4],[1,-4,4,-8,1,10,2,10,-10,-3],[-1,-3,-4,6,5,-7,-2,7,-4,-10],[-1,-5,-6,2,7,-6,-8,3,4,-10],[-9,-7,-7,-6,-9,8,-7,-3,-9,8],[10,-8,5,-10,3,9,-4,-3,-1,6],[9,2,-8,-10,7,6,-4,-6,8,-7],[4,2,-2,-3,-6,-5,-2,1,-9,8],[9,-5,-8,1,7,-6,-3,2,-3,-10],[-3,-6,-1,6,7,8,-10,10,-6,-6],[8,5,-10,1,-2,-6,8,-10,8,9],[-2,3,3,-9,-4,-1,9,-8,-5,-4],[-9,-1,-10,-6,-9,-6,-3,10,-4,-5],[6,-5,-6,-5,1,9,10,7,-3,10]],[[9,10,7,-9,2,1,2,4,8,-8],[-9,-9,6,-8,-10,-10,4,-2,-3,4],[-5,-3,3,-4,9,2,-8,6,8,7],[-4,-8,9,1,-8,-5,-2,-9,-10,-5],[-4,6,9,-10,-9,4,3,4,-1,2],[-2,4,9,-8,-8,-9,-2,-8,8,8],[4,1,-6,-7,-1,-8,-10,-8,8,10],[-1,-10,-4,3,-4,-9,5,-6,-4,9],[4,8,-10,4,2,-3,3,-7,-2,8],[3,6,5,10,7,-5,-7,-6,9,4],[-6,-6,2,5,-6,-2,2,1,-10,-7],[2,-9,-4,5,-6,7,-8,10,-8,4],[10,7,3,-9,10,-1,9,9,-4,-9],[5,-2,-10,-3,-7,-6,-4,-7,10,-4],[-4,-1,7,-6,-8,1,2,-6,-6,-3],[-7,-10,-2,10,4,2,-10,-9,-7,-8]],[[-2,8,-4,6,-5,-3,-10,5,-1,-5],[10,-3,2,-7,-10,2,4,4,4,8],[-1,-2,-7,2,-4,4,-4,-6,2,-3],[-6,2,7,-10,8,-10,10,-1,-1,-4],[9,10,-9,-10,-2,1,10,-10,3,-7],[7,-1,9,3,-4,4,-8,-7,-5,-6],[-1,-4,2,9,-3,8,4,-6,-1,5],[-7,9,5,10,4,-6,-5,-8,-4,4],[-3,-7,2,-4,-2,8,-9,-5,-4,6],[-3,3,-3,-6,-9,-4,3,-1,-5,-7],[5,-8,-2,-9,-10,-4,-5,4,1,-7],[-10,-3,4,-9,-1,8,4,8,-3,-4],[-10,-7,-9,-7,10,-9,4,-7,-5,7],[-5,-10,5,6,-5,-10,-9,3,9,-8],[-1,1,-6,4,-5,7,-10,-10,7,10],[6,-6,-8,-5,-9,5,-8,5,-5,7]],[[-10,1,-3,4,6,-1,-7,-9,8,-1],[5,-4,4,-8,8,10,-2,-9,-1,7],[10,-10,-7,-1,3,1,-10,10,6,-5],[-3,-4,4,-2,-8,-2,6,-5,-3,7],[8,1,-3,-4,-8,3,1,-10,3,-2],[2,-3,-8,-3,-3,-4,-10,-1,-7,-4],[-3,10,-6,-1,-4,-4,-6,7,3,2],[2,-1,4,-5,-6,-10,8,2,-10,-5],[-3,3,5,-1,9,8,-3,4,-8,8],[10,2,-8,3,5,-6,-6,8,-8,2],[4,9,-9,-5,-3,-3,-3,-2,9,-10],[-3,3,-5,3,-9,9,6,-9,2,-4],[-8,-2,3,-9,9,-5,6,-2,-8,-4],[-1,-10,-2,2,2,-3,-4,-1,-10,9],[2,4,3,-8,-2,-10,7,7,-9,-7],[6,3,-4,-9,5,-4,6,-4,5,-2]],[[6,7,1,5,7,-3,10,5,8,-10],[3,-9,-3,8,7,-4,-1,6,-7,2],[-3,-6,-10,-8,-6,3,-4,10,5,5],[7,5,-10,-2,4,-2,-8,9,-3,6],[7,1,-2,-9,9,9,5,6,6,4],[-1,-6,-9,6,-6,-1,2,4,-3,10],[-9,7,-4,-9,8,-10,-4,-9,5,-6],[10,4,9,7,-5,3,-8,7,-3,2],[-4,2,1,2,9,-5,-7,-2,-8,-10],[7,-6,4,-7,-4,8,-1,7,-4,-8],[-8,3,-3,-4,7,6,7,-1,7,-8],[6,10,-8,1,-7,6,-3,3,-5,9],[-8,6,-6,6,4,4,-2,9,-3,-2],[9,-8,-5,8,-7,-2,1,2,-6,3],[-4,9,-3,-4,9,7,-1,10,-5,8],[7,-8,-1,-8,-1,-4,-7,-9,-3,7]],[[10,-10,8,-9,-2,4,10,-8,4,-5],[-6,-10,-5,-3,3,-10,3,-3,2,1],[-10,3,-1,-10,-6,10,5,-5,10,-9],[-8,-5,9,-2,-2,6,10,-4,2,-7],[-9,2,-8,6,-7,-10,-4,-5,-5,-5],[-10,10,2,-4,-8,-3,-8,4,-2,-4],[5,-3,1,1,7,-4,7,-8,10,3],[2,6,3,-8,2,3,7,6,7,5],[-3,10,1,-9,7,10,10,-1,-7,7],[10,7,-7,7,-10,8,9,5,4,-2],[8,2,7,-10,-2,-4,-6,-2,-3,8],[1,-9,4,2,-10,2,-6,5,-8,10],[9,-4,4,-9,-5,2,-5,-6,-5,-6],[5,-10,-2,6,1,2,9,-6,-2,-10],[3,2,-1,6,7,10,10,2,-6,-4],[4,6,1,-6,8,-9,6,-1,-10,-4]],[[9,-10,3,-10,2,-5,-9,-10,4,3],[-2,4,-4,6,4,-2,3,3,-3,6],[-9,2,5,-10,7,-2,8,8,3,-7],[-5,3,2,-5,-10,-2,5,9,-5,-8],[4,3,8,-3,7,-9,10,10,9,-9],[-10,10,-3,5,7,4,3,-3,-1,1],[8,-10,-3,2,-8,1,-10,-1,-9,4],[-10,-9,-8,-4,-1,-6,-7,9,7,-2],[-2,2,1,8,-10,7,-1,-4,9,7],[-3,8,9,1,-9,-10,-3,5,-6,7],[-5,7,-1,4,-9,9,-2,-3,4,-7],[-5,6,-1,-6,-3,-4,-7,4,-2,-7],[9,-4,-5,-4,-8,-4,9,-5,-10,-7],[3,-3,4,10,8,-8,5,10,6,-1],[-6,-1,4,7,-6,8,8,2,3,-10],[9,-9,-10,6,-6,2,1,-9,7,8]],[[-2,5,-2,-4,8,5,3,-4,7,-9],[-7,5,4,1,-9,7,7,-3,-8,3],[2,3,-4,-8,-7,3,8,9,9,-3],[1,2,-1,-7,4,5,8,3,3,2],[-8,3,1,10,-2,-2,3,10,-9,-5],[7,-10,5,6,7,-9,4,-1,-4,7],[-3,10,3,4,-9,8,6,-10,3,3],[5,-5,6,4,-8,-7,-1,9,-6,-9],[-1,-10,7,9,5,10,-6,1,-10,1],[7,8,-4,6,-1,5,-2,-8,5,8],[1,-4,-2,8,-9,9,8,5,-6,4],[-4,9,5,4,5,4,10,5,-10,-6],[-4,4,-4,-6,8,10,-8,-9,-4,-5],[-4,9,6,10,8,4,10,-6,6,7],[-1,-5,5,3,6,-2,-8,8,4,-1],[-3,4,4,-10,-1,4,5,10,5,9]]], dtype = "int64")#candidate|5182|(13, 16, 10)|const|int64
bop_5183 = relay.add(var_5181.astype('int64'), relay.reshape(const_5182.astype('int64'), relay.shape_of(var_5181))) # shape=(13, 16, 10)
output = bop_5183
output2 = bop_5183
func_5189 = relay.Function([var_5181,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
var_5190 = relay.var("var_5190", dtype = "int64", shape = (13, 16, 10))#candidate|5190|(13, 16, 10)|var|int64
output = func_5189(var_5190)
func_5191 = relay.Function([var_5190], output)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3058_call = mod.get_global_var('func_3058')
func_3060_call = mutated_mod.get_global_var('func_3060')
call_5229 = relay.TupleGetItem(func_3058_call(), 0)
call_5230 = relay.TupleGetItem(func_3060_call(), 0)
func_497_call = mod.get_global_var('func_497')
func_498_call = mutated_mod.get_global_var('func_498')
call_5249 = relay.TupleGetItem(func_497_call(), 2)
call_5250 = relay.TupleGetItem(func_498_call(), 2)
output = relay.Tuple([call_5229,call_5249,])
output2 = relay.Tuple([call_5230,call_5250,])
func_5251 = relay.Function([], output)
mod['func_5251'] = func_5251
mod = relay.transform.InferType()(mod)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5251_call = mutated_mod.get_global_var('func_5251')
call_5252 = func_5251_call()
output = call_5252
func_5253 = relay.Function([], output)
mutated_mod['func_5253'] = func_5253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5251_call = mod.get_global_var('func_5251')
func_5253_call = mutated_mod.get_global_var('func_5253')
call_5272 = relay.TupleGetItem(func_5251_call(), 0)
call_5273 = relay.TupleGetItem(func_5253_call(), 0)
output = call_5272
output2 = call_5273
func_5274 = relay.Function([], output)
mod['func_5274'] = func_5274
mod = relay.transform.InferType()(mod)
output = func_5274()
func_5275 = relay.Function([], output)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5314 = relay.var("var_5314", dtype = "float64", shape = (3, 4, 12))#candidate|5314|(3, 4, 12)|var|float64
uop_5315 = relay.rsqrt(var_5314.astype('float64')) # shape=(3, 4, 12)
func_559_call = mod.get_global_var('func_559')
func_560_call = mutated_mod.get_global_var('func_560')
call_5317 = relay.TupleGetItem(func_559_call(), 0)
call_5318 = relay.TupleGetItem(func_560_call(), 0)
var_5320 = relay.var("var_5320", dtype = "float64", shape = (3, 4, 12))#candidate|5320|(3, 4, 12)|var|float64
bop_5321 = relay.add(uop_5315.astype('int8'), relay.reshape(var_5320.astype('int8'), relay.shape_of(uop_5315))) # shape=(3, 4, 12)
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
var_5334 = relay.var("var_5334", dtype = "int64", shape = (1134,))#candidate|5334|(1134,)|var|int64
call_5333 = relay.TupleGetItem(func_707_call(relay.reshape(var_5334.astype('int64'), [14, 9, 9])), 2)
call_5335 = relay.TupleGetItem(func_709_call(relay.reshape(var_5334.astype('int64'), [14, 9, 9])), 2)
output = relay.Tuple([call_5317,bop_5321,call_5333,var_5334,])
output2 = relay.Tuple([call_5318,bop_5321,call_5335,var_5334,])
func_5345 = relay.Function([var_5314,var_5320,var_5334,], output)
mod['func_5345'] = func_5345
mod = relay.transform.InferType()(mod)
var_5346 = relay.var("var_5346", dtype = "float64", shape = (3, 4, 12))#candidate|5346|(3, 4, 12)|var|float64
var_5347 = relay.var("var_5347", dtype = "float64", shape = (3, 4, 12))#candidate|5347|(3, 4, 12)|var|float64
var_5348 = relay.var("var_5348", dtype = "int64", shape = (1134,))#candidate|5348|(1134,)|var|int64
output = func_5345(var_5346,var_5347,var_5348,)
func_5349 = relay.Function([var_5346,var_5347,var_5348,], output)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5368 = relay.var("var_5368", dtype = "float32", shape = (9, 15, 14))#candidate|5368|(9, 15, 14)|var|float32
uop_5369 = relay.rsqrt(var_5368.astype('float32')) # shape=(9, 15, 14)
bop_5374 = relay.logical_and(uop_5369.astype('bool'), relay.reshape(var_5368.astype('bool'), relay.shape_of(uop_5369))) # shape=(9, 15, 14)
func_2545_call = mod.get_global_var('func_2545')
func_2547_call = mutated_mod.get_global_var('func_2547')
var_5398 = relay.var("var_5398", dtype = "float64", shape = (5, 165))#candidate|5398|(5, 165)|var|float64
call_5397 = func_2545_call(relay.reshape(var_5398.astype('float64'), [5, 15, 11]))
call_5399 = func_2545_call(relay.reshape(var_5398.astype('float64'), [5, 15, 11]))
output = relay.Tuple([bop_5374,call_5397,var_5398,])
output2 = relay.Tuple([bop_5374,call_5399,var_5398,])
func_5405 = relay.Function([var_5368,var_5398,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5405_call = mutated_mod.get_global_var('func_5405')
var_5407 = relay.var("var_5407", dtype = "float32", shape = (9, 15, 14))#candidate|5407|(9, 15, 14)|var|float32
var_5408 = relay.var("var_5408", dtype = "float64", shape = (5, 165))#candidate|5408|(5, 165)|var|float64
call_5406 = func_5405_call(var_5407,var_5408,)
output = call_5406
func_5409 = relay.Function([var_5407,var_5408,], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5488 = relay.var("var_5488", dtype = "float64", shape = (8, 9, 6))#candidate|5488|(8, 9, 6)|var|float64
uop_5489 = relay.atan(var_5488.astype('float64')) # shape=(8, 9, 6)
output = relay.Tuple([uop_5489,])
output2 = relay.Tuple([uop_5489,])
func_5497 = relay.Function([var_5488,], output)
mod['func_5497'] = func_5497
mod = relay.transform.InferType()(mod)
var_5498 = relay.var("var_5498", dtype = "float64", shape = (8, 9, 6))#candidate|5498|(8, 9, 6)|var|float64
output = func_5497(var_5498)
func_5499 = relay.Function([var_5498], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mod.get_global_var('func_4610')
func_4612_call = mutated_mod.get_global_var('func_4612')
call_5513 = relay.TupleGetItem(func_4610_call(), 0)
call_5514 = relay.TupleGetItem(func_4612_call(), 0)
output = call_5513
output2 = call_5514
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
output = func_5533()
func_5534 = relay.Function([], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5577 = relay.const([[[-4.565891,-5.578760,-6.378789,-6.312984,-2.147759,6.807432,-0.247776,5.366010,5.171843,4.305334],[-2.210133,9.192014,-6.869826,0.759411,1.832740,-4.224445,5.555875,-1.936380,3.336999,-6.238159],[-8.815610,2.059840,-9.905874,4.284472,5.907651,2.168939,8.368656,-4.273836,-6.394381,-3.389777],[7.235731,4.648468,0.079203,-9.549307,-3.337846,-7.465614,-2.529498,-8.605949,-5.552102,-9.338545],[-6.404687,-6.028665,-4.219555,6.712897,-9.691011,-1.136186,-3.114897,-1.168063,5.453509,-0.307747],[2.939430,-3.961516,7.186010,-3.640596,8.290547,5.788768,-3.913962,6.248989,2.760584,6.707033],[-5.414921,5.170440,-5.635217,5.515491,-0.502136,2.062984,-5.043292,7.731670,-9.309339,-9.573171],[-1.601275,4.144110,7.592328,1.725820,9.188447,-9.856574,-4.689995,-0.502263,8.192448,-3.920085]],[[-0.993443,0.277567,5.692954,-9.825328,-3.829149,7.614735,-3.216704,8.852066,6.663282,-4.006902],[1.755728,6.321714,-7.714211,-4.980524,7.153759,4.232053,5.040601,-7.373897,9.117868,-4.082036],[6.398288,-7.372133,7.277993,7.540485,-2.147821,3.923737,-6.360552,7.285725,7.501036,-3.737910],[-5.896357,-6.093194,-2.882841,0.693100,0.515851,0.300600,4.280521,-6.252797,8.885781,-6.798768],[-2.745812,-6.664037,-4.003764,2.352146,9.848173,-5.407611,-1.767551,9.269486,9.632790,-6.360614],[6.929962,-0.686487,-9.583912,4.083110,-4.357875,3.982099,2.315434,-4.884047,-9.936416,5.937113],[6.603754,5.055423,-7.229994,8.870522,7.441222,-5.253166,1.886870,-9.318767,-7.242339,-9.510021],[9.254663,2.202105,6.329990,-8.297837,7.963072,4.820064,3.614921,-0.249678,-5.334842,8.176579]],[[-6.330484,-3.412434,-6.891775,9.780761,-0.066512,-4.345468,3.927922,-7.173709,9.889891,-5.695849],[1.355085,7.802318,0.908037,-0.707174,5.005045,0.290776,-0.878166,-3.022851,-1.194035,8.948374],[0.279311,-3.016486,1.945368,5.586663,7.294822,1.591687,2.462581,7.862335,3.580693,-4.292762],[-1.606450,-6.980656,7.923981,5.235838,-4.597991,-7.280696,-6.963082,-8.041506,-4.680816,-3.226856],[-6.216911,-7.260395,4.846401,-9.720500,3.741593,0.187552,-6.934993,-1.783733,-1.381784,-3.659504],[-4.819621,-4.495701,6.228747,-4.171178,-2.954346,-5.059520,8.884307,8.208425,-9.487391,4.440455],[-9.920325,2.134690,-1.982031,1.004158,-8.369492,4.331726,-2.025035,0.686480,-5.276322,2.550678],[1.422322,9.650951,-0.824862,0.839362,-5.170550,7.826289,5.697317,-2.925602,-9.541249,9.942873]],[[6.328022,-1.709819,-7.315093,1.743280,7.424973,-9.906159,-1.147831,5.346274,-0.747953,-1.193814],[1.727689,0.008824,-1.816345,-9.814378,3.074186,5.741787,-9.588960,2.181288,-2.989439,-0.116606],[9.127031,-9.722708,-6.769111,8.281116,-5.562326,-7.928876,7.164657,-5.410676,2.862794,-7.116400],[-7.498811,5.985123,8.578121,-7.019950,9.631777,-6.279604,5.795620,7.478065,-6.422574,-9.479536],[-8.881062,4.690447,-6.968003,8.273188,-9.919450,0.498085,-2.381250,-2.060453,3.346530,2.372045],[8.399512,0.259241,-8.274173,-5.972700,3.610041,6.643885,6.880630,3.880882,-8.245781,9.033981],[9.966149,-9.683475,9.155786,6.538064,0.995932,-2.934090,-1.888051,6.794641,-5.042185,-0.349860],[-8.146268,4.931557,-5.517336,7.698038,5.683630,7.281944,0.135667,-2.991374,-7.754850,4.479539]],[[-0.644158,-4.797688,-8.128121,6.899492,-6.922231,-6.146331,4.480047,-6.597398,5.105055,9.553673],[9.496312,4.051628,-4.102579,3.401138,8.582062,-7.516590,-0.720636,3.877001,-4.631270,3.232139],[-0.083441,7.948304,9.341914,9.490001,0.787175,-9.900519,8.051565,-8.440807,9.048368,0.251559],[-0.140065,7.413876,-6.121596,7.824804,6.344297,0.273903,4.792621,-9.112629,9.671412,3.159733],[-0.045903,4.629022,3.364199,3.181389,4.432675,4.486334,-8.538993,5.458539,6.196327,0.312607],[8.368779,-4.058823,7.042261,-6.470373,-1.387330,4.361132,9.199166,2.919691,-7.549775,1.958608],[4.743221,-3.485963,0.636789,-2.235744,-3.898541,-2.429142,0.416485,-8.162058,7.959169,1.880089],[-8.419281,-8.175639,7.741364,-9.460715,-6.692245,6.941184,2.695014,2.296382,2.672276,6.829394]],[[1.057084,-0.923277,9.309665,3.071910,9.246919,-2.985417,6.410629,5.559780,-9.773993,1.378456],[8.813803,-3.054418,-4.682016,-5.049453,-2.688311,8.739868,1.227122,-7.311680,4.535763,0.912376],[-7.799545,-4.718097,-1.675609,-6.289248,-7.288058,3.716486,-9.113324,-7.471201,7.756379,7.120459],[-8.785912,3.611092,-2.532044,-6.248345,1.277914,-5.950358,-2.626720,3.853025,-6.743069,1.931342],[5.544655,-6.336410,1.475372,-9.377402,0.151212,-1.682310,0.630112,0.518204,7.793320,7.970110],[4.283298,-3.970608,-3.427710,-9.080598,5.169168,3.188306,-1.921535,-8.581159,-8.897646,-5.123061],[-9.127308,-3.547475,-9.072069,8.554369,9.822390,-5.287108,-6.328690,-8.559248,3.596710,2.663775],[4.924333,6.576584,1.441096,4.916647,1.540395,3.885456,-1.437985,8.498322,-2.293880,-0.638213]]], dtype = "float32")#candidate|5577|(6, 8, 10)|const|float32
var_5578 = relay.var("var_5578", dtype = "float32", shape = (6, 8, 10))#candidate|5578|(6, 8, 10)|var|float32
bop_5579 = relay.floor_mod(const_5577.astype('float32'), relay.reshape(var_5578.astype('float32'), relay.shape_of(const_5577))) # shape=(6, 8, 10)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_5583 = relay.TupleGetItem(func_904_call(), 0)
call_5584 = relay.TupleGetItem(func_905_call(), 0)
func_5251_call = mod.get_global_var('func_5251')
func_5253_call = mutated_mod.get_global_var('func_5253')
call_5591 = relay.TupleGetItem(func_5251_call(), 0)
call_5592 = relay.TupleGetItem(func_5253_call(), 0)
var_5596 = relay.var("var_5596", dtype = "float32", shape = (6, 8, 10))#candidate|5596|(6, 8, 10)|var|float32
bop_5597 = relay.minimum(const_5577.astype('int16'), relay.reshape(var_5596.astype('int16'), relay.shape_of(const_5577))) # shape=(6, 8, 10)
uop_5602 = relay.log10(bop_5597.astype('float32')) # shape=(6, 8, 10)
uop_5612 = relay.acos(uop_5602.astype('float64')) # shape=(6, 8, 10)
func_4123_call = mod.get_global_var('func_4123')
func_4124_call = mutated_mod.get_global_var('func_4124')
call_5629 = relay.TupleGetItem(func_4123_call(), 0)
call_5630 = relay.TupleGetItem(func_4124_call(), 0)
var_5632 = relay.var("var_5632", dtype = "float32", shape = (12, 3, 14))#candidate|5632|(12, 3, 14)|var|float32
bop_5633 = relay.add(call_5583.astype('uint64'), var_5632.astype('uint64')) # shape=(12, 3, 14)
bop_5636 = relay.add(call_5584.astype('uint64'), var_5632.astype('uint64')) # shape=(12, 3, 14)
output = relay.Tuple([bop_5579,call_5591,uop_5612,call_5629,bop_5633,])
output2 = relay.Tuple([bop_5579,call_5592,uop_5612,call_5630,bop_5636,])
func_5643 = relay.Function([var_5578,var_5596,var_5632,], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
var_5644 = relay.var("var_5644", dtype = "float32", shape = (6, 8, 10))#candidate|5644|(6, 8, 10)|var|float32
var_5645 = relay.var("var_5645", dtype = "float32", shape = (6, 8, 10))#candidate|5645|(6, 8, 10)|var|float32
var_5646 = relay.var("var_5646", dtype = "float32", shape = (12, 3, 14))#candidate|5646|(12, 3, 14)|var|float32
output = func_5643(var_5644,var_5645,var_5646,)
func_5647 = relay.Function([var_5644,var_5645,var_5646,], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5661 = relay.var("var_5661", dtype = "float64", shape = ())#candidate|5661|()|var|float64
var_5662 = relay.var("var_5662", dtype = "float64", shape = (14, 4, 13))#candidate|5662|(14, 4, 13)|var|float64
bop_5663 = relay.divide(var_5661.astype('float64'), var_5662.astype('float64')) # shape=(14, 4, 13)
output = relay.Tuple([bop_5663,])
output2 = relay.Tuple([bop_5663,])
func_5671 = relay.Function([var_5661,var_5662,], output)
mod['func_5671'] = func_5671
mod = relay.transform.InferType()(mod)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5671_call = mutated_mod.get_global_var('func_5671')
var_5673 = relay.var("var_5673", dtype = "float64", shape = ())#candidate|5673|()|var|float64
var_5674 = relay.var("var_5674", dtype = "float64", shape = (14, 4, 13))#candidate|5674|(14, 4, 13)|var|float64
call_5672 = func_5671_call(var_5673,var_5674,)
output = call_5672
func_5675 = relay.Function([var_5673,var_5674,], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5677 = relay.var("var_5677", dtype = "bool", shape = (13, 3, 12))#candidate|5677|(13, 3, 12)|var|bool
var_5678 = relay.var("var_5678", dtype = "bool", shape = (13, 3, 12))#candidate|5678|(13, 3, 12)|var|bool
bop_5679 = relay.logical_or(var_5677.astype('bool'), relay.reshape(var_5678.astype('bool'), relay.shape_of(var_5677))) # shape=(13, 3, 12)
output = relay.Tuple([bop_5679,])
output2 = relay.Tuple([bop_5679,])
func_5689 = relay.Function([var_5677,var_5678,], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5689_call = mutated_mod.get_global_var('func_5689')
var_5691 = relay.var("var_5691", dtype = "bool", shape = (13, 3, 12))#candidate|5691|(13, 3, 12)|var|bool
var_5692 = relay.var("var_5692", dtype = "bool", shape = (13, 3, 12))#candidate|5692|(13, 3, 12)|var|bool
call_5690 = func_5689_call(var_5691,var_5692,)
output = call_5690
func_5693 = relay.Function([var_5691,var_5692,], output)
mutated_mod['func_5693'] = func_5693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5698 = relay.var("var_5698", dtype = "uint16", shape = (14, 5, 13))#candidate|5698|(14, 5, 13)|var|uint16
const_5699 = relay.const([[[-2,-10,-8,-5,10,9,-2,6,-7,1,-9,5,-9],[-6,8,4,-10,-3,1,5,6,5,-8,-9,3,1],[4,2,4,2,7,2,-10,6,-4,1,4,7,-9],[7,8,-4,3,-10,3,-8,5,8,6,-7,4,4],[5,1,10,8,5,4,5,4,-3,-10,4,-6,-3]],[[-5,-2,-6,10,3,-5,-10,10,-8,-6,-6,-5,-9],[-4,1,7,-8,-3,-6,-4,-5,-9,-9,8,5,-8],[-5,7,3,-9,1,-8,-5,-3,-6,-1,6,-5,-8],[-2,9,3,-4,7,4,-10,2,-3,-3,-9,5,-9],[7,-6,10,-9,10,2,4,1,-7,-2,1,5,6]],[[-2,-3,2,8,4,-7,-7,-7,-9,2,9,-1,8],[8,5,-9,-7,-9,-10,-6,-4,-1,8,-2,9,8],[-3,8,-2,-5,2,-7,4,-7,-2,-3,6,9,-2],[-4,7,6,1,-1,2,-4,-10,5,-5,-10,-5,-7],[-9,-6,1,9,-2,-8,-10,-9,-5,-9,2,-8,-4]],[[7,-3,2,-3,2,-10,2,5,8,8,-8,-10,7],[8,-10,6,-4,2,-1,-4,-10,4,-8,-1,4,2],[2,10,-4,7,-3,-1,-9,2,-1,3,-3,-3,-5],[5,-4,3,1,-7,2,-10,4,3,-8,5,1,9],[6,5,6,3,9,8,-1,-4,7,-9,5,8,7]],[[3,3,4,-3,3,6,-1,-3,-4,4,-7,-4,-3],[10,-4,-5,7,-8,9,7,-3,7,-10,3,-3,4],[7,8,-8,-1,7,7,6,-4,-9,7,6,7,2],[-3,-6,-7,-4,-5,5,-5,4,6,-7,4,-3,-7],[-5,-6,4,-4,-6,-3,9,-5,6,9,-1,-9,-7]],[[-4,6,-9,6,9,-7,-10,5,-7,3,-9,3,-6],[-2,3,-2,10,-10,8,-8,-6,10,-10,-3,-7,1],[3,1,8,-8,5,-8,5,-7,4,10,2,9,-4],[1,7,7,-7,3,4,-6,9,-5,4,9,-9,1],[10,-5,2,-8,-9,-1,3,-2,5,-7,6,3,6]],[[-9,5,-6,9,1,-9,-10,-2,-7,-7,2,-8,8],[-3,-3,5,3,3,-2,3,4,2,2,-7,9,-7],[7,1,9,-6,-2,6,8,-5,2,6,9,3,4],[-10,3,-7,1,6,4,2,-5,-1,10,5,-3,-9],[3,-6,2,-1,3,7,-7,-6,7,7,8,4,4]],[[-9,2,-3,-10,1,5,8,9,-4,8,-7,7,6],[-10,3,-2,10,2,9,2,-5,4,-9,-9,-9,-2],[-6,8,4,4,1,10,10,-7,-4,-10,8,-2,-7],[9,-2,2,-9,9,10,1,-7,-5,4,7,2,9],[-1,6,-6,6,5,-3,2,-8,-5,-4,-3,-1,-2]],[[7,8,-4,6,9,-7,9,6,-6,6,-1,-6,-5],[-5,-8,-7,-8,8,5,2,-8,-2,-10,-1,-7,4],[-7,-4,-9,-1,7,-1,-4,-9,-7,-3,-9,-1,3],[9,10,9,-4,-2,-3,2,-2,5,2,-4,-4,-5],[10,-5,-10,3,8,7,-7,4,3,-8,-9,-2,-8]],[[1,1,-8,-3,-6,-7,-3,2,-4,-9,9,-6,-9],[-1,-9,7,-2,7,-3,-10,1,9,2,-4,-2,-9],[-6,-7,2,-8,-8,1,3,-7,8,7,-7,-3,-10],[7,1,3,3,-2,10,5,5,8,-6,6,4,-3],[-10,2,-3,-3,7,2,8,2,-6,-5,-5,-8,-8]],[[2,8,5,-2,-9,5,1,-8,1,-9,-3,2,-3],[-1,-7,-7,-10,-6,4,-1,-5,5,-10,1,8,-6],[4,-6,-4,-7,-5,2,9,10,6,-6,-10,6,-3],[-1,6,9,7,6,4,4,10,-5,-2,4,-8,8],[3,-10,-3,-9,-10,9,-6,9,-10,9,7,-3,-1]],[[-8,9,-7,-1,9,7,5,6,5,10,-4,-6,-2],[-7,3,-2,-6,-8,3,9,-3,2,4,-1,2,2],[4,8,-3,3,-2,-9,-5,-1,-4,2,7,-7,-2],[1,-2,1,-10,-3,6,1,10,6,4,-6,8,-8],[-4,5,3,-1,8,10,2,3,7,6,3,-5,-1]],[[-5,-2,3,10,-3,3,-10,7,1,1,-7,-9,8],[-7,8,7,-7,8,7,8,-3,-4,-4,-2,10,2],[-4,2,-2,8,-9,3,5,5,-1,2,6,6,-8],[-6,2,8,8,9,-3,1,-1,7,8,-2,7,-3],[-1,-2,7,-9,-5,-4,-9,4,-9,3,1,-10,3]],[[10,-5,10,3,-6,9,1,10,-8,10,10,-9,1],[-2,1,-10,-5,3,2,-9,-8,2,2,-5,-3,-4],[-6,6,3,6,-7,-2,-3,8,-10,-4,5,8,-7],[10,9,5,-9,1,-10,5,-7,-10,3,-6,6,3],[-5,3,-3,-4,-8,-8,-9,-6,-7,-8,9,7,-5]]], dtype = "uint16")#candidate|5699|(14, 5, 13)|const|uint16
bop_5700 = relay.bitwise_or(var_5698.astype('uint16'), relay.reshape(const_5699.astype('uint16'), relay.shape_of(var_5698))) # shape=(14, 5, 13)
output = bop_5700
output2 = bop_5700
func_5707 = relay.Function([var_5698,], output)
mod['func_5707'] = func_5707
mod = relay.transform.InferType()(mod)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5708 = relay.var("var_5708", dtype = "uint16", shape = (14, 5, 13))#candidate|5708|(14, 5, 13)|var|uint16
func_5707_call = mutated_mod.get_global_var('func_5707')
call_5709 = func_5707_call(var_5708)
output = call_5709
func_5710 = relay.Function([var_5708], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_420_call = mod.get_global_var('func_420')
func_421_call = mutated_mod.get_global_var('func_421')
call_5740 = relay.TupleGetItem(func_420_call(), 0)
call_5741 = relay.TupleGetItem(func_421_call(), 0)
uop_5754 = relay.log10(call_5740.astype('float64')) # shape=(2, 9, 6)
uop_5756 = relay.log10(call_5741.astype('float64')) # shape=(2, 9, 6)
func_5533_call = mod.get_global_var('func_5533')
func_5534_call = mutated_mod.get_global_var('func_5534')
call_5761 = func_5533_call()
call_5762 = func_5533_call()
func_5643_call = mod.get_global_var('func_5643')
func_5647_call = mutated_mod.get_global_var('func_5647')
const_5766 = relay.const([2.430442,1.238429,-1.774868,-4.531691,-6.541334,-9.093191,-6.144100,-6.731157,5.895508,-6.075959,-2.420587,-7.469005,-0.380630,-1.771653,4.842915,8.571249,-5.683759,-6.042383,-2.390462,0.286477,-5.658413,-1.085079,-8.241075,-5.753085,-8.592471,7.740544,-0.362380,-9.980235,9.521257,-3.715757,-1.906719,-4.195633,8.497022,-6.884360,8.390264,-0.964972,0.720885,-9.263282,8.934775,-6.128762,-4.836491,-4.928201,8.623742,3.021899,0.968468,-2.839847,-8.144167,3.492283,8.912654,5.969061,9.464533,-2.431466,-2.939587,-9.147672,4.130375,-5.279885,-1.779605,4.655830,2.827673,0.948508,-7.177937,7.121333,-5.922398,-9.415586,-8.821206,-2.740501,1.680304,-7.851688,-1.237798,6.552307,5.538973,5.583710,-2.624267,-3.351078,3.576944,7.135870,2.171625,-5.129865,5.531774,5.450032,8.753246,1.014662,1.850671,-0.390631,5.576489,3.751060,3.921116,-7.420832,7.827152,-4.846331,-2.625455,4.990247,-6.407262,2.418034,-2.464508,4.518123,5.824609,9.818668,-0.679113,-4.343759,4.131314,2.905646,-0.577924,9.854735,-3.854186,-7.588300,0.934666,-0.735274,-6.617371,0.110313,-4.461016,-2.033019,3.241163,-6.162297,9.753927,5.269278,9.390611,-4.200373,3.481276,5.206370,6.815861,-4.873562,3.257978,-6.126083,1.543698,7.679920,-8.350488,3.002547,0.121343,2.062814,-1.249213,7.342638,1.753389,7.288305,9.778364,-4.544274,-6.281047,3.224325,6.461853,0.666669,8.161594,0.039976,-2.466749,-5.617870,-2.689255,9.378849,-5.863656,-0.647779,-0.506654,-1.241248,9.699642,-6.561473,-3.864258,1.442826,6.267870,-1.605091,9.833299,-9.144066,-7.047982,8.065303,-4.145814,0.827062,-0.916488,8.430578,1.544046,-9.431701,-8.988446,-7.083310,9.702661,9.915024,2.376932,8.516582,9.531629,-6.345055,-9.672114,-2.754678,-2.000814,-0.992781,-6.963398,8.249197,0.412414,-0.141004,-0.114433,-8.051832,-1.037772,-1.317776,1.631894,6.043226,4.912044,-4.617035,9.396220,7.036589,-3.562075,-8.264104,5.048333,-8.439590,-9.703123,-3.590909,-8.560790,-3.807527,-4.097588,-6.200560,-7.262953,-6.986582,9.876168,-6.431718,-9.994305,8.364137,0.177954,3.543724,2.994799,7.268217,-2.002773,6.637408,2.122585,8.494411,-2.576111,8.652299,5.744196,8.886039,7.130465,-4.813216,3.259080,-4.519886,8.712980,5.927103,-9.072263,-4.268007,-0.171330,7.105063,2.382020,-9.302462,-2.373809,1.680092,5.452159,-4.279691,-9.678144,-9.118324,-4.277568,-4.604955,-8.319466,5.045095,-2.416054,4.374330,2.517653,-1.446850,-8.030703,-0.073027,6.898528,-9.752506,-7.170112,2.921404,2.846099,-5.525781,-8.882292,-6.378497,-2.165342,9.471941,5.819136,-2.756847,4.307912,-4.883457,7.776383,-4.999243,-5.152304,4.610497,-3.900913,2.829141,0.328274,4.408466,-0.053680,-1.923086,9.279737,4.533188,4.015214,6.835989,5.166058,-9.136557,6.428735,8.122406,4.503159,-4.255333,4.826538,-7.367466,-7.947436,-3.384684,0.818411,4.750492,1.234933,3.963104,-0.930895,1.646508,-7.211162,-1.081243,0.103302,8.514730,6.908475,-4.859344,4.965592,2.565053,-2.138614,-3.391961,-1.740355,1.176741,5.084230,-0.570472,2.387846,9.281584,2.204083,0.200848,8.909308,-8.605730,6.094138,7.952175,6.325105,-3.569044,-1.650132,0.300851,-6.487640,-1.135472,6.995814,-4.973412,6.877715,0.151883,4.414308,1.237517,6.326571,5.537439,-5.039666,-0.209896,4.956242,8.867603,7.489351,2.178377,6.083496,4.722330,-0.039062,-1.294528,0.362708,2.810722,-4.080950,4.542396,-5.541548,-7.419741,8.506577,-5.533592,1.164944,3.423050,-0.592541,2.032755,-9.975427,-0.487464,-7.090658,-9.353489,-2.633719,-7.829822,-7.574828,6.462229,7.616434,4.710843,-0.756001,1.113887,-5.848384,-0.280124,4.170115,-2.719498,3.431915,7.200203,7.063513,0.681096,8.006834,8.538595,-9.957856,-1.651746,-6.454636,-8.844479,9.166871,4.766160,-6.776178,-9.632253,3.283363,-3.084720,2.607557,-3.503537,4.063720,8.266934,9.716857,2.479046,4.806652,1.748057,4.733052,-9.688908,-3.556588,-7.857864,6.787917,-9.347630,-1.143043,9.565577,-1.226957,-2.166669,-2.515139,-0.684044,-8.512483,5.411179,2.225669,-4.970473,-3.709050,2.636134,-1.711098,-7.092183,-8.241791,-5.494110,4.786573,8.265211,6.555575,2.153050,7.444199,2.787513,7.451472,0.833595,-1.256465,-1.246281,-8.815058,4.830365,6.155066,-2.894381,-5.041030,-5.068954,9.662676,-8.307279,-0.211665,-1.757803,4.740632,7.993577,-7.643807,-6.754562,-4.686761,2.936429,-0.632415,1.113590,-1.749633,-2.032020,-3.848193,-0.024866,-4.419314,-6.297551,4.738149,-9.689378,9.884997,0.988328,-9.497214,-3.623904,-8.159562,3.958207,-6.780897,3.962322,-9.142103,3.990126,-3.662200,-1.857708,-1.498526,8.661867,8.143823,4.274016,-6.090056,-1.577694,-9.536653,4.627657,9.442538,3.215797,-0.656565,-5.545928,-3.756816,1.178098,-1.942370,2.301905,2.359416,-0.574273,-0.072303,2.128674], dtype = "float32")#candidate|5766|(480,)|const|float32
const_5767 = relay.const([[7.424265,0.347201,-6.326573,0.263740,2.429055,0.687294,-9.174776,1.901367,-2.826514,1.606306,7.301238,9.065675,-1.587421,-4.503260,5.123829,-0.677833,-8.812513,-9.195866,-5.610513,-0.119243,0.289591,4.458911,-0.452085,9.374389,-3.725318,-8.888660,7.001341,3.808647,-7.044582,-5.626007,-2.126235,1.548915,-9.666155,3.784234,0.816364,-7.562849,-2.321537,-1.434730,-0.634054,3.654323,-8.288234,-8.765389],[0.638475,-0.122906,2.665858,8.274493,4.853107,5.547928,6.703712,-2.524316,-8.198335,2.802874,-5.490143,4.266100,5.957005,9.449689,-1.842557,1.760559,-0.760168,-1.815275,-1.806394,8.153300,-6.563394,6.974612,-7.902846,-5.719670,-3.173255,5.463148,9.423629,-8.336254,9.004884,8.596150,0.129519,2.432888,-0.141995,-8.931862,5.307816,-0.559937,-6.896897,5.068590,-7.556556,6.214291,9.224469,5.773414],[6.072607,7.584083,-4.990005,2.911192,0.884675,5.821651,-1.536366,-7.218127,2.851373,4.774340,-5.977939,-6.123704,-9.750862,-3.040619,-0.288889,-9.896147,1.355774,-2.606351,-2.577232,4.513693,-0.785221,8.557958,-4.078488,8.626614,8.476410,5.344653,4.870559,-5.961980,4.160806,-5.733156,-9.189521,-2.323183,-1.751381,4.475995,-6.256672,9.302891,8.935151,8.861553,-1.091741,-8.227535,6.472909,-6.854664],[4.549437,-8.598978,8.086188,9.517165,1.910572,5.109229,-8.841937,2.129356,5.465472,-6.461916,2.600508,3.878247,-0.308628,1.337099,9.869221,-1.532215,-0.599189,-2.434974,7.736203,-4.117806,8.484934,5.744714,-1.800079,-1.168966,0.295009,5.648559,-4.063228,-7.716124,-9.771593,-0.877036,0.556831,-5.541398,6.013274,6.343244,-2.639499,3.397611,6.445566,-3.765375,2.059560,-8.914886,6.323943,-0.697973],[-3.151613,-7.721104,-4.560202,-7.810957,7.837996,-4.006087,8.669202,-4.817437,3.706353,3.384360,-8.066203,-7.281787,-5.263373,-5.854027,-9.775389,2.579087,5.304833,2.909236,-9.143077,-5.299514,0.558481,-9.825229,-8.543462,-4.658071,2.721373,0.162201,6.412821,0.228809,-5.522153,5.667303,-1.297271,9.499736,-0.442960,-2.885474,-8.941583,4.740541,1.007905,5.250559,-8.896250,9.884467,0.316206,1.366667],[-1.222475,6.064872,-5.915336,-9.333780,0.460416,-4.193668,-9.682945,8.711305,8.932914,-8.448709,-9.520934,0.542701,-3.800333,-6.006803,2.729701,-8.196033,3.091465,-8.952138,1.420551,-9.566005,-6.485690,-9.671681,0.669697,5.658387,-1.354573,4.050090,8.495412,7.826186,2.593459,-3.036768,0.413557,7.695327,-1.679770,-9.217191,-2.148370,-1.107261,-8.181373,0.023374,-6.485875,-1.257704,7.453465,-2.172611],[-6.540429,-6.153241,4.726451,-9.947789,3.041535,0.108353,9.993385,1.228934,1.640929,-3.746580,0.790646,9.521034,4.014323,-3.252345,-5.435577,1.776572,3.727104,-4.677586,-3.533417,3.553171,-1.886805,2.216411,0.202742,5.270198,2.119269,-4.030825,-0.133037,-7.950817,2.084499,-3.762719,5.417388,0.008576,0.519701,-9.340178,-5.964079,2.601031,-6.081010,7.036909,-8.362749,-6.689656,-3.139033,-0.902029],[5.754370,-9.460672,7.070004,-6.379188,6.534875,6.548832,1.457587,-8.780998,-9.309844,4.294754,9.641319,-2.344850,6.891849,6.708461,5.024525,-5.099520,-0.400086,0.220452,4.038263,8.473700,2.868511,4.066019,-1.559506,1.132967,-6.944897,4.935359,7.776754,3.952029,2.079644,-1.996234,-0.167128,0.656857,-8.953157,-5.360456,-2.356292,-6.864775,3.992283,-9.423966,0.831472,-9.693069,-7.679542,6.828246],[7.782379,0.946553,1.132459,2.358115,-3.145775,1.017973,3.348459,6.150656,5.661386,-9.997880,5.783330,-9.995487,-2.826815,-0.407599,-2.147300,-7.549513,-8.320421,-4.810742,7.533964,4.345447,-8.827076,-2.819662,9.426739,7.150007,0.421536,6.010120,5.132615,-0.490377,-2.238372,-3.170854,-1.398966,-0.979212,-2.997305,7.205076,-0.905900,-7.802052,6.768395,-2.513551,-5.370400,1.281826,2.576624,-5.332473],[-4.224943,-7.488905,-3.131721,9.109265,0.549314,5.385435,3.351438,-7.654106,-9.361731,-3.364870,2.358205,-8.975271,4.865994,-3.905896,-4.940712,1.420692,1.555357,1.611360,-5.084730,-4.851195,-2.203564,-3.005468,-4.737299,4.155503,6.910657,-9.032189,-2.828629,-5.884399,-2.834209,5.808619,4.395601,9.602513,-2.590889,-5.559735,-1.355907,6.043327,9.832511,-6.639453,-5.135632,-8.956773,0.536888,-3.771668],[8.389808,2.111998,5.483287,-4.565550,0.992158,2.891352,-9.597406,3.516377,6.659268,2.936704,-5.707957,-7.604236,8.730048,-1.594249,-1.341238,-3.521224,7.237532,5.994241,-5.897089,9.245735,-6.048049,-6.354721,7.762287,4.587554,-4.812811,2.293066,-1.057348,4.987049,-2.352807,-5.001760,-1.540170,-2.308108,3.704050,0.373713,5.856431,7.367847,8.002546,-9.860287,3.478192,0.147866,-4.466069,-8.444443],[9.939084,-6.322624,6.274926,-7.403624,3.430468,7.578740,-3.448608,8.504735,-5.759024,0.581443,-6.450034,-3.206848,4.485782,8.469559,-5.967447,-1.482946,0.076564,5.364085,-9.117291,-3.807042,-8.285960,-6.377192,-2.455327,-1.575928,-8.890078,4.434136,9.908263,5.957111,8.772609,-5.538644,-6.319969,1.912223,4.725321,0.718801,-0.246458,7.280767,7.406804,-2.690862,3.751150,-5.751751,-6.921360,-4.223650]], dtype = "float32")#candidate|5767|(12, 42)|const|float32
call_5765 = relay.TupleGetItem(func_5643_call(relay.reshape(const_5766.astype('float32'), [6, 8, 10]), relay.reshape(const_5766.astype('float32'), [6, 8, 10]), relay.reshape(const_5767.astype('float32'), [12, 3, 14]), ), 0)
call_5768 = relay.TupleGetItem(func_5647_call(relay.reshape(const_5766.astype('float32'), [6, 8, 10]), relay.reshape(const_5766.astype('float32'), [6, 8, 10]), relay.reshape(const_5767.astype('float32'), [12, 3, 14]), ), 0)
output = relay.Tuple([uop_5754,call_5761,call_5765,const_5766,const_5767,])
output2 = relay.Tuple([uop_5756,call_5762,call_5768,const_5766,const_5767,])
func_5778 = relay.Function([], output)
mod['func_5778'] = func_5778
mod = relay.transform.InferType()(mod)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5778_call = mutated_mod.get_global_var('func_5778')
call_5779 = func_5778_call()
output = call_5779
func_5780 = relay.Function([], output)
mutated_mod['func_5780'] = func_5780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1010_call = mod.get_global_var('func_1010')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_5787 = func_1010_call()
call_5788 = func_1010_call()
output = call_5787
output2 = call_5788
func_5865 = relay.Function([], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5866 = func_5865_call()
output = call_5866
func_5867 = relay.Function([], output)
mutated_mod['func_5867'] = func_5867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_238_call = mod.get_global_var('func_238')
func_239_call = mutated_mod.get_global_var('func_239')
call_5878 = relay.TupleGetItem(func_238_call(), 0)
call_5879 = relay.TupleGetItem(func_239_call(), 0)
output = relay.Tuple([call_5878,])
output2 = relay.Tuple([call_5879,])
func_5882 = relay.Function([], output)
mod['func_5882'] = func_5882
mod = relay.transform.InferType()(mod)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mutated_mod.get_global_var('func_5882')
call_5883 = func_5882_call()
output = call_5883
func_5884 = relay.Function([], output)
mutated_mod['func_5884'] = func_5884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5919 = relay.var("var_5919", dtype = "float64", shape = (14, 6, 11))#candidate|5919|(14, 6, 11)|var|float64
uop_5920 = relay.erf(var_5919.astype('float64')) # shape=(14, 6, 11)
output = uop_5920
output2 = uop_5920
func_5936 = relay.Function([var_5919,], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
var_5937 = relay.var("var_5937", dtype = "float64", shape = (14, 6, 11))#candidate|5937|(14, 6, 11)|var|float64
output = func_5936(var_5937)
func_5938 = relay.Function([var_5937], output)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5109_call = mod.get_global_var('func_5109')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_5980 = func_5109_call()
call_5981 = func_5109_call()
output = call_5980
output2 = call_5981
func_5982 = relay.Function([], output)
mod['func_5982'] = func_5982
mod = relay.transform.InferType()(mod)
output = func_5982()
func_5983 = relay.Function([], output)
mutated_mod['func_5983'] = func_5983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4001_call = mod.get_global_var('func_4001')
func_4003_call = mutated_mod.get_global_var('func_4003')
call_6034 = func_4001_call()
call_6035 = func_4001_call()
func_3058_call = mod.get_global_var('func_3058')
func_3060_call = mutated_mod.get_global_var('func_3060')
call_6036 = relay.TupleGetItem(func_3058_call(), 0)
call_6037 = relay.TupleGetItem(func_3060_call(), 0)
const_6038 = relay.const([[[-1.780462,5.890160,7.013179,6.042717,-8.576258,8.053693,-7.078568,1.976950],[-8.785211,-9.214545,4.093106,-1.175523,-4.117199,-9.603717,-6.402633,9.466399],[8.080682,1.695915,-9.227766,-7.079837,5.080425,-7.974941,1.748655,-6.050008],[1.660975,1.409935,8.868133,1.558860,8.921560,3.309073,3.816230,-3.513580],[1.266540,4.869253,-7.778315,-4.684548,-0.666922,8.477934,8.520963,9.987906],[-0.748290,2.872165,-4.769245,-9.379186,0.400138,-1.779846,-6.430676,6.397155]],[[-8.127153,6.637708,-2.453647,4.532822,7.647387,8.022081,-3.662432,5.385481],[4.505505,7.925086,3.524705,2.126604,9.914512,-0.434405,-9.418385,9.873961],[-3.613824,3.700112,-7.510870,0.848026,-9.540226,-4.060444,8.690579,4.785023],[2.175549,5.222261,-9.980001,6.027488,-7.876539,-6.722669,5.719476,0.444094],[-9.513036,-1.412592,0.323876,-1.557153,-5.579059,6.548362,3.591829,-4.227557],[3.062450,4.976173,-9.479817,5.920823,-8.949558,2.899186,5.650025,-8.095397]],[[-2.079283,-7.136322,-0.487474,4.985275,-6.241374,3.161647,9.824273,-4.366646],[3.779238,0.956580,-7.094290,-7.375160,-4.245026,-7.692199,-6.342957,2.338989],[2.769243,7.902760,6.212004,7.075172,2.526175,3.960191,-5.125786,7.179759],[4.042942,-6.897883,2.504641,1.803973,-5.457071,2.410942,-3.260480,0.691410],[-6.853605,1.464971,2.993401,1.097674,6.465142,-0.396299,-6.966151,1.560405],[-3.789949,6.620782,-9.128038,2.903923,-4.387502,-0.667189,2.511682,5.987276]],[[-3.025228,8.179651,9.159038,-0.681979,3.195414,-5.191713,-9.570303,-2.073533],[9.168821,-8.107037,-8.903349,9.197890,-3.012911,2.162268,7.030338,3.239301],[7.259395,-6.681372,-0.933195,-2.035387,0.004960,4.245522,-7.531904,-3.610777],[-7.247909,-1.434980,-4.589670,5.891560,5.757265,-2.157356,9.583367,-6.232541],[7.348876,0.728032,3.462796,3.982307,8.110870,-5.153191,-2.834292,6.898530],[5.454729,2.271174,6.276103,-3.661763,0.328450,-3.640493,-7.722880,-9.149433]],[[2.577300,4.308779,4.182599,9.891694,-0.415087,-0.440591,-4.104999,5.622884],[4.760419,0.484492,1.784372,6.808418,-0.555875,-9.772298,-0.413481,-1.115307],[-0.667941,-5.626822,5.558715,-3.075839,3.617288,-2.531428,8.351524,2.091876],[8.979446,5.073053,-1.631085,7.698225,-6.466816,-2.657727,-5.511693,-2.264077],[-3.404670,-1.622038,-2.394124,3.962696,-8.096433,7.688546,3.278434,-8.520214],[4.936623,-5.756330,5.897224,7.363087,1.765036,-4.918010,-2.952821,-8.740794]],[[-8.077608,-4.101370,-2.951696,-1.362193,-1.049314,-0.545888,4.155408,-9.819042],[-3.027205,-2.698751,-3.036976,-4.221416,6.117807,-8.842566,4.331501,2.067223],[1.635981,9.681654,9.426363,-3.887317,5.771966,-0.718766,-4.592629,-0.828947],[7.470362,-2.520231,-9.245959,2.818462,6.800496,1.524460,-9.754027,-7.126947],[4.402966,3.500250,-7.219091,-8.992308,-4.455371,-4.253020,4.358820,-6.297616],[8.118863,-9.334009,7.483730,-9.106487,0.884126,0.186578,-6.394075,-5.842356]]], dtype = "float32")#candidate|6038|(6, 6, 8)|const|float32
bop_6039 = relay.greater(call_6034.astype('bool'), relay.reshape(const_6038.astype('bool'), relay.shape_of(call_6034))) # shape=(6, 6, 8)
bop_6042 = relay.greater(call_6035.astype('bool'), relay.reshape(const_6038.astype('bool'), relay.shape_of(call_6035))) # shape=(6, 6, 8)
const_6045 = relay.const([[[-7.336111,6.402012,8.133155,2.801414,7.952133,-1.842698,-0.244381,8.830131],[-8.456094,5.270758,0.120905,-5.163141,-2.106757,-7.665298,7.394250,6.828248],[0.688422,-6.688660,-8.615529,-1.872108,-1.519042,-8.567043,4.079974,2.459841],[3.242624,-9.881951,-2.895868,1.144676,-6.056678,-9.267595,1.100060,-1.556685],[-6.491756,0.573450,-2.693327,4.004712,-3.177122,0.827605,1.224872,0.954921],[4.330368,9.282489,7.477971,-2.813662,0.507471,8.733711,8.213313,6.820083]],[[-5.839278,-1.643081,-4.243526,8.596161,5.256444,-4.241796,1.326309,5.899310],[8.213959,-6.627379,1.112324,3.870396,1.576476,-9.681467,-1.912648,5.167954],[-6.423901,4.413732,4.373545,-5.635845,-2.740400,6.384944,-1.979448,-2.637477],[4.356521,-2.329737,-6.046242,4.853626,-5.352271,-7.834942,7.122382,6.655277],[0.266939,4.049168,8.020853,7.984850,-9.725581,6.245363,-5.887302,7.565248],[9.634254,-4.473709,9.101328,8.031378,4.474456,-1.977550,0.918504,2.105556]],[[-9.402302,3.071104,-1.473288,6.322510,4.718458,9.650356,1.709090,-3.030085],[6.896316,-0.482457,-1.867166,-2.368291,8.940678,9.064285,2.626309,1.104451],[1.539319,0.301884,4.518161,-9.335229,-0.770489,-1.037686,-4.175473,-4.392921],[-7.394434,-4.271937,-6.459592,-5.110493,1.593159,8.557207,-2.086475,6.437081],[2.277138,8.345550,8.928898,-1.408371,-6.254781,5.586053,0.530784,-2.632909],[-1.593037,-5.811276,5.217379,-9.248348,-0.301012,6.053149,-0.686468,-4.020604]],[[-8.543522,4.409895,-7.937178,5.979112,-7.377326,4.496614,-4.964668,1.963255],[8.179848,2.526799,0.196029,6.106580,3.651796,-9.955763,4.378301,-0.431542],[3.960100,-0.774431,8.825635,-2.143193,-0.091749,6.018307,0.462421,-0.905085],[-6.229639,2.604231,0.113920,-1.688840,-1.873341,8.266271,2.822073,5.731824],[9.327206,-1.021002,4.590408,-7.452707,8.258640,-8.849063,6.032643,1.379518],[-3.748064,8.275042,4.784133,0.718199,-8.581562,-9.175475,-8.640183,-8.077529]],[[6.590203,-2.545312,7.081527,-5.449525,-4.985766,2.117723,3.849241,8.919992],[-5.866915,-0.893140,-4.860149,8.389843,-0.356414,7.590537,1.252272,-9.149162],[-2.300728,2.816468,7.815434,-3.232544,-0.982721,6.513456,-9.263352,3.438746],[9.347853,4.102701,7.699690,2.899079,-5.707443,-3.646926,-5.347844,-4.374474],[2.664643,7.313128,2.295417,-0.213614,4.089943,-2.246178,7.773787,-7.929607],[9.207697,-2.049790,-1.956061,-2.106944,-2.933501,-4.693098,7.394994,-3.147930]],[[-0.289419,5.366527,8.927965,7.358570,-8.631047,5.784922,-9.039564,-4.477092],[7.198444,-9.376408,-6.484892,-5.857454,-3.311498,-5.522301,8.043160,-5.799222],[-2.194003,7.705131,-2.257989,-5.958444,-2.063082,-6.853506,-3.208851,-3.072588],[2.027510,4.172149,4.857852,4.920527,0.259606,1.902669,-1.869315,-9.111654],[-9.440721,-9.457087,8.915395,0.918943,-8.965446,-2.004790,-8.862099,-5.010090],[1.838042,-6.037137,4.669495,-6.236309,8.288109,2.556558,-2.820904,-4.398251]]], dtype = "float32")#candidate|6045|(6, 6, 8)|const|float32
bop_6046 = relay.floor_divide(const_6038.astype('float32'), relay.reshape(const_6045.astype('float32'), relay.shape_of(const_6038))) # shape=(6, 6, 8)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_6061 = relay.TupleGetItem(func_904_call(), 0)
call_6062 = relay.TupleGetItem(func_905_call(), 0)
uop_6064 = relay.erf(const_6045.astype('float64')) # shape=(6, 6, 8)
output = relay.Tuple([call_6036,bop_6039,bop_6046,call_6061,uop_6064,])
output2 = relay.Tuple([call_6037,bop_6042,bop_6046,call_6062,uop_6064,])
func_6066 = relay.Function([], output)
mod['func_6066'] = func_6066
mod = relay.transform.InferType()(mod)
mutated_mod['func_6066'] = func_6066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6066_call = mutated_mod.get_global_var('func_6066')
call_6067 = func_6066_call()
output = call_6067
func_6068 = relay.Function([], output)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4532_call = mutated_mod.get_global_var('func_4532')
call_6080 = func_4531_call()
call_6081 = func_4531_call()
output = relay.Tuple([call_6080,])
output2 = relay.Tuple([call_6081,])
func_6087 = relay.Function([], output)
mod['func_6087'] = func_6087
mod = relay.transform.InferType()(mod)
output = func_6087()
func_6088 = relay.Function([], output)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6094 = relay.var("var_6094", dtype = "int16", shape = (10, 2, 6))#candidate|6094|(10, 2, 6)|var|int16
const_6095 = relay.const([[[6,6,-9,-7,4,-1],[7,-2,-1,-9,-4,7]],[[-10,10,-2,3,1,9],[10,8,-7,-7,-10,-3]],[[7,3,3,-5,5,-5],[6,-6,-9,6,8,5]],[[3,-10,-2,2,-9,1],[7,4,-1,6,9,4]],[[-4,7,-6,-1,-4,-2],[6,-4,-2,-6,10,8]],[[1,1,-5,-5,-7,5],[3,-6,7,-3,-5,9]],[[-1,4,-6,-5,6,4],[2,4,-2,-7,-7,3]],[[-1,8,-3,-1,3,-10],[-10,6,2,9,9,-3]],[[4,-7,-3,4,7,9],[-2,-8,8,4,4,3]],[[-7,-10,-10,9,-5,7],[-7,1,5,-5,4,2]]], dtype = "int16")#candidate|6095|(10, 2, 6)|const|int16
bop_6096 = relay.bitwise_and(var_6094.astype('int16'), relay.reshape(const_6095.astype('int16'), relay.shape_of(var_6094))) # shape=(10, 2, 6)
output = relay.Tuple([bop_6096,])
output2 = relay.Tuple([bop_6096,])
func_6107 = relay.Function([var_6094,], output)
mod['func_6107'] = func_6107
mod = relay.transform.InferType()(mod)
var_6108 = relay.var("var_6108", dtype = "int16", shape = (10, 2, 6))#candidate|6108|(10, 2, 6)|var|int16
output = func_6107(var_6108)
func_6109 = relay.Function([var_6108], output)
mutated_mod['func_6109'] = func_6109
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6160 = relay.const([[[0.784331,-4.137562,7.020075,8.635501,6.359696,-5.648098,-3.449192],[-5.630016,-2.503677,-3.922687,9.471039,3.278702,-2.278213,7.058880],[9.097227,7.089104,-3.906384,-8.618133,-9.824725,-2.053143,5.164616],[-2.477507,8.261550,0.453745,5.591273,-9.414957,-3.844150,-0.536430],[9.646400,-6.425259,3.526896,7.978983,3.014913,3.599591,2.077812],[-2.743521,-0.972868,-3.445673,7.516602,2.677080,-9.225097,-4.746190],[4.297149,4.946185,-8.514774,-2.498739,-5.424183,9.413030,0.523714],[8.733671,-2.330635,-4.771280,-6.987268,2.067793,-0.624660,-7.346800],[-2.303917,-5.819926,-7.562617,-4.439187,6.359395,-0.774997,-8.215312],[-9.897582,-2.086367,3.264242,7.243691,5.516205,-7.524785,0.813278],[-2.354594,8.295058,-4.808207,-8.449358,-2.359473,-4.081522,7.604027],[6.338326,-4.484467,-6.889010,2.574591,-3.355585,8.915409,-7.783922],[-4.953335,-3.369422,-4.102145,6.295698,7.822490,0.547891,-1.954854],[-0.609701,-4.816342,5.003095,7.687756,8.684288,8.402395,9.488253]],[[7.586530,6.162881,6.566305,-7.340412,3.446593,1.071557,-8.075134],[-0.242449,-1.418278,-2.013663,-7.366015,8.352314,6.005317,-4.475902],[-3.943228,9.966259,-8.162918,3.163198,7.689050,1.706319,8.726968],[4.857171,4.494870,-2.016821,-0.775724,-2.315770,6.430007,-6.531647],[-8.752739,2.210689,-8.096035,-9.101263,9.874403,1.478197,-4.326299],[-9.165453,3.026076,4.707280,1.785070,-8.577119,-4.055973,2.689840],[-7.144674,3.364760,-0.948269,-2.646030,7.112586,4.250722,-5.616028],[4.545106,2.373359,0.030292,-9.065933,8.516507,-6.269943,5.180603],[-6.606857,-7.608540,6.927932,9.471278,7.162610,-1.444966,0.868565],[8.305008,-6.979416,-8.925368,-3.645740,-6.676567,-2.646022,9.046639],[8.090226,0.642665,5.767824,8.525305,5.267187,-9.577318,-0.458819],[-9.847901,5.764527,6.773000,-8.472058,1.077295,4.078763,7.064074],[-4.280280,7.250417,-7.638702,0.751947,-7.072230,-3.462868,-5.197765],[-3.442800,5.267968,-6.590486,9.148500,7.228742,5.176430,-7.414866]],[[-1.916848,-6.682551,-1.000653,2.099643,-1.495429,-2.322644,1.900860],[9.265386,-2.320342,-6.610722,-0.248163,-4.913756,-0.706442,4.296057],[-1.915054,4.506109,-8.916503,7.797460,7.486648,9.501793,-8.748751],[-8.697012,-0.969245,3.333847,-8.186390,-5.025992,-9.698921,-7.854234],[-3.889618,-5.835044,6.750275,-1.395095,1.148622,9.699085,-4.919388],[-0.099529,-9.642404,-6.577153,-3.344557,8.307471,2.272992,3.520628],[-0.054544,-7.697303,-1.187656,-4.614753,-6.559329,0.727835,-6.859444],[-9.480883,2.515290,9.756949,-2.475205,-9.658654,8.309489,3.497947],[7.736185,-1.797090,-9.125961,5.893349,0.455593,-3.446292,-2.216248],[5.554014,-1.292836,9.827662,0.653359,-2.581959,-4.526676,-7.348060],[-0.533883,-8.133770,7.102268,-2.680364,2.701004,-1.721441,6.602376],[1.568256,-4.297812,-6.119553,-2.335607,-2.013073,6.838949,7.194488],[8.031668,7.719666,4.442170,7.819517,4.402465,-4.517487,6.043053],[0.099319,-4.783361,-9.338845,-4.530192,5.622980,-1.274556,-8.522022]],[[-0.067996,7.532823,2.199034,-2.906252,-6.046063,0.682313,6.846220],[8.939095,-4.856120,6.817948,6.987334,1.087938,-8.147453,-0.572366],[-5.491621,-7.030365,4.728090,-9.922800,0.557774,3.714937,5.886870],[6.649011,4.064266,5.594363,0.020103,-5.286892,6.584936,-9.448053],[-9.764207,-3.357662,5.369035,-4.055453,1.732767,-5.860135,8.035903],[-7.692699,-5.583009,4.674065,-8.998906,-9.775280,0.160957,-0.444489],[-8.791407,-9.373024,-5.884529,-2.382341,-7.337176,-8.049281,0.980243],[-5.161876,-7.019569,3.042420,-3.348776,-7.064844,-1.914460,-9.407730],[6.775247,-3.043887,-5.897107,7.904805,5.020319,-8.122975,-3.724339],[2.490945,5.031998,-8.785820,3.511865,1.677714,-9.148924,-9.384186],[-2.499746,-3.042154,-8.973305,8.903086,9.036065,8.623677,-1.070472],[-8.825837,-3.150554,3.944546,1.150395,3.376203,1.922691,-2.815630],[9.892033,-6.083516,-9.302760,6.002268,4.587865,2.360139,1.630786],[-1.036827,-1.063043,-4.283042,-6.444834,4.802902,7.982453,-1.564431]],[[0.346716,-8.565087,-8.418243,-6.247553,3.554387,6.363139,-0.831289],[-3.342247,8.623757,-8.602344,0.465981,-4.060459,-7.483464,-8.663654],[-8.662189,-7.738606,7.892897,-6.326145,-0.533736,-7.124679,0.464816],[-1.696397,-3.263355,9.372811,5.747432,-5.883977,5.511533,1.473334],[-6.404796,6.397292,-7.947078,-7.008423,7.414797,9.843958,6.221661],[5.614820,4.093785,-7.147076,-9.988524,3.934674,2.518550,5.820989],[-6.971242,-1.152468,-9.414745,-2.614830,-2.846958,-5.412842,4.145529],[8.439266,-4.369731,6.797091,-7.984072,6.892646,-0.524573,5.151133],[-8.014941,-9.444374,3.727529,1.930318,-2.997529,-2.109728,-6.077253],[-7.148901,9.807283,-2.069857,0.176628,4.731214,-0.500874,-0.621119],[-1.983036,-1.953188,-8.023884,9.469319,-3.327038,7.508469,-9.169105],[1.140274,7.586756,5.208022,7.550200,-7.787892,6.540165,-2.289527],[-4.752466,-8.343893,-9.254787,-9.304870,3.270777,-9.059840,-8.751664],[4.478484,-1.234173,-4.652898,-9.310549,-6.523373,3.736643,-4.846990]],[[-4.275358,-1.011357,-9.967164,0.161307,-3.731599,7.311767,-6.329699],[0.139354,-5.575793,1.300601,5.062020,-4.179301,8.895920,1.429543],[0.224093,-7.067319,-9.304133,-6.055041,3.689529,-1.570217,6.246603],[-1.594886,5.832812,4.407255,-3.485425,-7.461272,-7.888264,8.891399],[5.502407,-6.881607,4.357853,4.049207,-7.068027,-8.042714,2.134172],[0.698131,-4.038143,-8.860850,8.066182,4.503825,1.493300,4.212458],[-5.281308,3.566129,4.814082,-1.583800,-5.892067,-5.913274,-1.346502],[6.968633,9.765101,-8.437414,-5.589472,-2.356866,-0.152017,2.828186],[9.141973,6.908730,2.196862,-3.249020,8.764269,7.583514,-6.203182],[-6.787155,-0.205519,-2.677969,-3.588001,-4.549313,-0.739990,-2.448596],[-8.649430,-7.981720,-4.730460,-6.696411,-0.690028,-1.265426,7.181921],[-4.630832,9.036561,-3.644800,-0.717057,-9.601894,-2.604815,0.164891],[4.298653,1.312857,7.283336,8.434292,-6.416358,4.019103,-2.940856],[-6.560612,-2.558552,7.942551,8.498223,5.038711,2.856811,-5.925647]],[[-4.000164,-8.320175,9.958390,-2.318845,7.124978,-5.301252,7.444332],[-9.064576,9.569478,2.834694,5.187829,7.998024,0.699750,-7.281258],[-5.912342,-2.866002,-6.185300,-9.772353,-3.595027,-6.711708,8.046570],[8.662096,8.622532,-8.307583,-7.754666,-9.095338,7.870285,-8.249321],[-9.037754,5.662427,8.104483,-4.852747,-9.219124,1.502556,0.603704],[-1.030105,-5.294183,6.322019,0.481121,-8.658805,9.340574,-6.827262],[1.528542,1.056259,8.687054,-3.942682,-6.379316,6.311401,-1.182320],[-8.280327,-9.285754,-9.795097,-8.945589,-4.497534,2.565534,-3.021212],[5.134427,7.526825,6.596544,8.344220,5.040025,-4.051233,-3.022270],[-8.171359,-9.116117,-6.360858,5.976797,-0.458972,-1.140095,-0.864466],[1.876112,-0.747702,4.477273,3.844441,9.719314,9.685990,4.278577],[-9.344363,6.015889,-0.034092,4.722858,5.524497,1.614856,5.864213],[-7.482514,3.798877,-1.222954,3.578827,-3.709345,-1.655437,4.940772],[-7.869092,7.408619,-5.381092,-6.152410,0.709690,3.779324,-7.766488]],[[-8.511502,-6.823393,9.274807,-2.918111,5.814943,9.193338,4.669401],[8.783634,-0.645847,5.138265,3.504360,-6.778502,-5.597167,6.210756],[-3.293245,-0.204813,3.909095,-4.136046,-1.321131,-2.441548,-1.996192],[1.948397,-7.035119,-8.758505,7.490411,-8.940317,1.438989,-7.636952],[-3.862861,9.732153,5.042857,8.807074,-5.212421,-1.660586,7.284478],[-5.050952,-2.964419,5.137929,6.325841,1.539586,1.546640,2.881748],[5.884944,-7.864696,6.759551,-8.438752,9.616185,-9.349035,3.256090],[-2.014397,2.941695,-9.382216,6.665092,-0.401237,1.212832,1.921006],[-9.983402,3.525119,-2.179832,9.179354,3.898020,-1.815252,-6.051366],[-8.279275,0.492957,-3.813684,-9.050530,5.791995,-4.588333,-6.653213],[0.943138,-4.542158,-1.334967,9.885900,8.736558,-3.692783,9.980462],[3.756440,0.203210,3.286526,-3.688952,-9.451934,0.536799,-2.008328],[0.821913,7.990165,-4.305484,-5.740862,-4.879294,0.671631,0.351873],[-5.910268,1.068617,-1.505994,-3.212631,7.229702,8.749524,6.397720]],[[0.659923,-7.921996,-6.764617,-2.484197,8.846925,7.660134,-7.054325],[7.908733,-1.411521,-8.352344,8.849051,0.353362,4.172298,-4.422118],[-9.149486,1.331462,-7.029570,-7.598272,8.203979,0.188444,-0.408229],[-7.264523,-4.173344,-9.380770,-3.291976,-9.435460,5.714484,3.963661],[-5.951697,1.675592,6.430352,1.251701,-3.041813,-4.257083,-7.847067],[-6.974553,-0.781171,0.658981,-9.324987,7.253824,3.033681,-7.340265],[3.564146,0.302626,7.810511,-8.412443,8.205601,-7.537972,-0.467997],[9.521557,9.406976,0.742682,0.787400,-8.763777,-1.990284,-9.165358],[8.486105,-3.986692,-0.948128,-2.498968,-6.470669,-2.250202,-5.763098],[9.685545,9.510959,8.119115,-4.236559,-9.987426,-0.390285,9.791999],[-7.848660,-6.902926,-9.396916,9.811886,-2.660901,-0.089601,-5.410978],[-9.916970,-1.936120,1.329838,-8.713995,-8.380826,6.256951,-6.704320],[9.521302,-5.888399,9.139647,5.906657,8.580447,-8.773624,-0.412309],[-9.920188,8.739257,-3.215162,-0.032451,9.573942,-2.045744,3.255659]],[[-0.279249,3.149643,0.138712,-5.934463,-1.251009,-3.005347,-5.470539],[2.660682,-1.999375,3.272736,-6.613509,1.039750,-1.328822,-9.230241],[-8.662486,-6.132169,1.564958,-3.042830,-7.065318,-4.674207,-3.521233],[-5.519337,7.600558,4.021171,-7.341352,-8.186570,-8.354604,9.723130],[-7.835843,-5.873292,-5.744828,-9.309214,-3.567003,-8.383892,7.939013],[-3.662369,-8.452283,-7.781097,-3.899191,7.634528,-1.978386,-1.878175],[8.521792,2.095504,5.600832,-4.186339,1.344670,5.382352,3.140457],[-7.471360,-9.493803,-3.081848,6.618285,0.079540,-5.410442,-9.563502],[-1.378708,-1.674293,1.330768,2.893665,1.673247,-7.167368,-1.057189],[-8.379553,6.330920,-1.853544,0.464805,-9.223576,1.544822,1.429281],[-7.607785,8.863363,-8.646319,-2.097142,8.262911,-6.241555,5.745237],[9.141802,-1.078061,3.749417,-7.626627,-1.663724,-8.219576,3.743057],[-4.583774,-2.427076,-0.196183,9.369435,8.735437,-8.658117,4.079613],[0.992178,6.704692,5.460790,-5.576349,-4.079838,-7.158400,2.367808]],[[6.074777,4.743150,2.485105,1.998235,2.023500,-3.802562,-4.750756],[2.352840,5.068707,8.331646,-0.504263,-8.440002,0.189748,3.163182],[7.193201,4.264988,9.634401,-0.603593,-7.324958,3.655900,-9.200199],[-3.529259,-2.555118,1.191000,-0.292341,8.886829,3.400750,6.316522],[-1.942770,-1.691010,2.757391,-7.302966,-3.888703,4.365175,-2.384969],[-0.340638,-7.966332,-9.240077,7.498006,-5.353366,-0.061299,-8.630066],[-9.790386,-1.232674,-7.984586,-7.756107,-3.480027,3.839873,-2.295782],[1.845776,6.254053,9.664438,-8.513723,-4.868687,0.924655,6.127533],[-4.587610,2.316444,-3.443307,7.892881,5.097158,-3.902964,4.175161],[-1.741196,7.609760,-6.056169,-4.297366,-9.286772,6.848252,-5.874252],[-9.868009,-1.087582,4.557710,4.698706,-3.575603,-1.136941,-2.757203],[9.205758,-6.703889,7.647438,-0.161892,-9.109945,-6.556211,3.008792],[-4.557205,-5.768615,-1.001220,7.298948,4.533905,5.149279,-1.047456],[6.862117,-1.688917,-3.789686,-6.877552,-5.378291,2.471723,5.978638]],[[-3.109415,-8.222729,-8.981274,5.302070,2.620715,-8.235940,4.210156],[-4.714337,-5.476146,-5.596952,5.244214,5.134569,3.462000,-2.668925],[8.237710,-2.503232,-8.501065,-2.416605,0.983400,8.329109,-3.896362],[2.799083,3.854254,4.136710,3.690698,1.900110,-3.657327,2.429919],[-1.143221,2.255847,4.043111,1.921589,-4.672012,6.126637,9.651365],[-0.157416,-3.360729,2.620337,-8.976937,8.591859,1.306420,-6.113446],[-4.010448,7.431696,8.085435,-8.928164,-8.898572,-5.085701,7.808336],[-6.207271,7.610803,-6.645132,8.029320,6.666077,0.883847,0.425890],[8.673489,-4.563159,9.812366,2.639653,-3.592173,-5.180095,4.452840],[5.102936,-7.327837,-5.358463,6.990087,0.409582,-0.296913,-7.537329],[-4.468752,-5.393946,7.588140,9.222994,-0.082592,2.750846,-1.719052],[8.555645,-7.282924,-4.047980,3.346813,-6.769655,2.732996,4.094342],[0.690397,8.413877,6.030834,0.054800,1.808560,-0.016661,0.206118],[-8.218499,0.139656,-3.620759,3.980953,-2.056352,5.578094,9.750393]],[[-9.309738,-9.898974,-2.957341,5.914505,-4.218784,-5.089947,3.032850],[0.801986,-3.265018,-5.346716,-6.353218,4.264853,0.668605,-2.773298],[9.481776,-1.183565,-0.455714,8.697655,-0.723238,-8.319716,6.638149],[-3.206062,0.960469,-2.917718,-0.737408,4.928886,9.413566,-7.488358],[-0.005724,3.900334,-0.147095,-9.423551,-7.684519,5.007127,-5.455106],[2.373822,-8.556096,5.767314,-4.286161,9.307158,-2.557682,4.016572],[9.354073,8.680497,-6.624047,2.943387,-9.070417,0.329306,7.550778],[4.418480,-7.696479,-0.026768,2.904238,3.692484,7.594234,-6.471862],[1.316039,4.540964,0.549454,9.566743,8.628762,-6.407336,-6.416244],[-8.485192,-7.455980,9.311309,2.700400,8.720900,2.122579,-4.010905],[4.134749,0.793815,-0.617976,9.307340,8.945681,1.402331,-3.122781],[-5.531479,9.340465,-5.364507,-0.192546,-5.655539,7.557927,-0.826083],[-4.419771,3.588408,5.719205,1.248950,2.870552,7.985461,9.640530],[4.390198,-3.888962,-1.065460,3.031956,4.138272,-9.224041,3.523652]],[[9.615171,3.656499,-8.335825,9.355299,0.772232,4.065851,-1.827499],[0.943461,7.242378,5.409342,-2.754245,1.765977,-3.068660,1.652624],[-9.495987,2.647187,4.537588,-8.531695,1.902631,5.689458,-8.689560],[-2.928013,-7.152381,-5.243733,-9.951849,5.529548,2.272068,-9.657966],[-4.153110,-6.795723,-2.880226,-3.834992,-5.357516,3.338647,9.869486],[-3.201714,6.733834,-7.704452,-6.068509,0.701151,-3.051269,1.619229],[4.085763,0.354834,-9.775082,9.302308,0.596365,-0.100224,-9.248700],[-4.740072,-4.905258,5.603276,3.135136,5.968597,-7.730403,-1.783339],[-9.219609,-5.405523,-2.276674,1.655310,8.036475,0.524626,-8.465444],[2.067339,-4.991449,-4.552536,-7.889621,-8.237345,9.729706,-7.958897],[4.844878,-2.845726,-7.648795,5.865691,1.094503,9.617685,1.898179],[3.305307,-9.346125,-3.073376,-1.802273,-3.448330,-8.886561,-8.592732],[-5.075757,1.564934,-2.933387,2.661414,-7.345854,9.541532,2.067820],[2.803841,6.221068,1.903836,3.878581,-4.279648,-5.035046,-8.846564]],[[-5.507587,8.241995,6.246974,-7.850804,-2.167858,4.933254,-8.586257],[-5.889719,5.663869,9.791153,1.991529,0.840361,-1.634234,-2.807754],[-7.951693,-5.448595,-7.718192,3.177205,-2.027153,7.804017,-3.144239],[-1.967125,3.058473,-2.371707,-6.554724,6.921469,-4.169565,-3.446112],[3.096619,-8.418906,8.025841,-3.453246,-3.587871,-2.046936,5.084570],[9.832169,-4.122959,-2.686445,9.589174,-2.521675,-7.896975,0.589692],[-4.085054,-0.199909,-6.502812,5.772560,2.231769,2.100998,-6.080393],[-6.181219,1.398128,5.606343,6.919629,4.431985,-3.623972,-9.990084],[-1.589278,-9.346879,0.859807,-8.766542,9.545929,-0.853017,0.471196],[-3.611091,5.940973,1.174917,-5.371349,-7.506119,-1.812860,-4.538365],[9.509383,-3.892420,-4.602347,4.398757,0.357617,-6.148074,7.293609],[2.525134,-8.412550,-7.079428,-4.134200,3.163002,-0.223122,5.210764],[6.368764,-9.314394,-8.119724,-0.625083,6.036225,6.071995,1.514277],[6.875272,-9.095551,2.966757,-2.756485,-5.524139,2.830178,1.619175]],[[6.221344,8.037822,7.901738,5.993590,-1.603552,-5.790028,3.574652],[-0.131484,5.664614,-4.885930,-0.505558,5.825670,2.492869,5.895526],[3.540770,7.689585,7.913896,3.763947,-1.897850,2.824335,6.518491],[-9.835680,6.049501,9.313481,-0.627467,-7.334991,-5.682826,4.243269],[0.150791,-0.827258,1.569374,1.253960,-3.385560,4.064422,8.836410],[9.069867,4.684625,-6.612757,-8.812838,7.799441,5.468240,8.762603],[5.908449,9.195791,-0.926370,8.245935,9.655085,-8.236235,-7.440773],[-6.677623,-0.227006,-8.316133,9.109846,-8.516468,-8.646207,-4.236454],[0.074579,7.616894,-9.068117,6.394361,1.279362,3.160849,7.070571],[-5.875769,0.927342,-6.091352,3.639284,7.201980,9.971152,-7.865706],[-4.663411,1.855908,5.540402,-1.855926,3.677394,-1.531738,5.307876],[-7.970438,3.174176,-9.325010,3.039018,7.997614,6.796355,-2.242382],[-8.701266,-3.883721,9.190914,6.996650,6.712629,4.881886,2.739480],[5.046942,7.412497,-3.196819,-1.558992,1.055008,8.849152,-4.420202]]], dtype = "float64")#candidate|6160|(16, 14, 7)|const|float64
uop_6161 = relay.asin(const_6160.astype('float64')) # shape=(16, 14, 7)
func_4610_call = mod.get_global_var('func_4610')
func_4612_call = mutated_mod.get_global_var('func_4612')
call_6169 = relay.TupleGetItem(func_4610_call(), 0)
call_6170 = relay.TupleGetItem(func_4612_call(), 0)
func_4590_call = mod.get_global_var('func_4590')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_6171 = func_4590_call()
call_6172 = func_4590_call()
output = relay.Tuple([uop_6161,call_6169,call_6171,])
output2 = relay.Tuple([uop_6161,call_6170,call_6172,])
func_6179 = relay.Function([], output)
mod['func_6179'] = func_6179
mod = relay.transform.InferType()(mod)
output = func_6179()
func_6180 = relay.Function([], output)
mutated_mod['func_6180'] = func_6180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mod.get_global_var('func_5533')
func_5534_call = mutated_mod.get_global_var('func_5534')
call_6187 = func_5533_call()
call_6188 = func_5533_call()
output = relay.Tuple([call_6187,])
output2 = relay.Tuple([call_6188,])
func_6201 = relay.Function([], output)
mod['func_6201'] = func_6201
mod = relay.transform.InferType()(mod)
mutated_mod['func_6201'] = func_6201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6201_call = mutated_mod.get_global_var('func_6201')
call_6202 = func_6201_call()
output = call_6202
func_6203 = relay.Function([], output)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4001_call = mod.get_global_var('func_4001')
func_4003_call = mutated_mod.get_global_var('func_4003')
call_6254 = func_4001_call()
call_6255 = func_4001_call()
func_2354_call = mod.get_global_var('func_2354')
func_2358_call = mutated_mod.get_global_var('func_2358')
const_6268 = relay.const(0.034192, dtype = "float32")#candidate|6268|()|const|float32
const_6269 = relay.const([-2.482103,5.194796,8.589321,2.520445,-5.967566,6.675379,-3.769856,5.072302,-2.536051,2.452765,-5.896310,5.810588,-6.136837,-2.081229,-9.939032,1.020494,-9.925167,-7.497069,-1.867046,7.282904,-3.348523,-0.090824,4.594204,-9.808091,-5.593466,-5.781155,5.432365,-0.594934,-0.134732,-7.109592,-9.631021,-2.732750,-2.306546,-1.619490,-5.925362,9.242415,3.903739,8.227662,5.452110,-8.546577,-3.961150,-3.578341,-0.918633,5.204933,9.523072,1.691639,0.722723,4.046973,6.493539,-8.118471,9.903189,-2.885950,3.540603,4.006582,4.363367,-8.408936,-2.055531,-9.932763,8.367109,-4.575698,0.190336,6.264388,7.074080,-4.568108,-5.089685,-2.310016,-6.543210,-7.376327,-9.520491,-1.470646,5.058728,2.673885,2.874204,-8.929543,4.037059,6.071679,4.719505,3.976112,1.427742,7.645667,-6.502565,-8.403060,-4.255134,-5.231248,-4.850235,4.222338,4.378053,-6.814615,-3.841859,-6.783517,7.222507,-7.049363,-3.073383,1.546339,2.412182,4.166105,-2.572251,-8.897617,2.118139,6.840839,6.886756,8.582281,-9.794490,2.688855,9.298115,-4.021362,1.652591,1.355513,9.867677,-7.742737,0.811426,-8.156299,0.248920,-7.411873,-9.555530,-3.309306,-5.468896,-5.773311,4.769849,4.916285,0.748217,6.524878,-5.291426,-7.323802,1.368187,-4.367563,7.475199,-3.322394,4.979765,2.068756,4.724657,5.884424,3.387831,-4.520974,4.671395,9.366823,0.201075,-9.788836,6.525565,8.129630,3.401833,2.336587,4.881856,8.552217,3.593979,-0.693825,-4.420375,-0.312298,0.816598,7.702047,2.774283,-3.063110,1.157287,-7.766735,8.968426,-7.658522,-7.077878,5.587342,4.287681,-6.220580,5.090881,3.257696,6.983889,-6.949579,-3.731900,7.252441,-9.952788,7.282036,-9.031452,3.648413,4.270574,-6.846747,0.153761,3.593617,-6.307684,6.564930,-7.471791,-4.155089,4.724693,4.836538,-9.292733,8.068696,-6.097135,-3.357519,-1.443550,-6.047747,6.076933,1.410537,1.839142,-3.766302,4.757878,4.496257,-4.088182,5.875783,-7.447359,-9.163899,4.674293,-4.174672,-6.273000,2.218446,-2.730240,-2.528642,-7.000642,-7.271989,2.156387,-3.016527,2.390385,-2.250795,3.967468,3.416810,-4.286528,-1.324151,2.224102,9.909038,3.326539,-2.671389,7.439823,-9.312428,1.717311,4.055842,7.410518,3.307096,4.515433,-7.741073,3.936454,9.297482,6.048129,9.325133,-8.728595,-8.729589,4.440035,7.875913,-7.904963,6.987625,-2.604137,-6.616601,-3.772406,-5.152604,3.636500,-3.129370,-9.011560,4.057884,7.326332,-8.818767,2.804830,1.762409,-0.192283,3.723952,-7.033451,-5.955244,5.764993,-4.618742,-6.861706,-1.627891,-7.657325,-4.125226,-1.099831,-1.440466,-8.346309,2.413679,-0.493147,3.660777,5.427371,0.522390,3.975024,-1.392865,-6.301948,-8.877787,-2.416465,-9.769888,7.263929,2.863444,-9.391374,9.728811,7.751677,9.614045,4.582395,-3.674565,5.220268,4.038719,8.090722,-2.814862,-5.183407,-6.032470,7.159997,4.275450,8.067850,-4.685696,0.953762,-7.685049,-6.630681,-2.864153,-4.605558,-5.134115,-4.526156,-2.320232,3.562906,7.885148,9.031717,-6.440115,-4.612988,8.035207,8.003363,-8.571695,4.679077,0.978800,-5.243504,-1.886078,-3.450294,-1.235779,-7.570288,-7.675852,2.630833,4.316379,1.610579,1.244356,-6.254346,6.705809,-3.123845,-0.573070,-7.489562,3.446906,8.797844,-1.393605,-2.489917,-5.309038,7.560700,5.491875,-2.972306,-2.868011,-7.208131,0.863182,-2.594787,-7.819146,-9.253716,1.322628,-6.267192,6.734581,-8.454588,9.747538,5.989526,2.461856,-1.801611,0.032211,6.623289,-5.470460,-6.726446,-3.567289,-2.584610,5.523870,7.873849,-4.096957,-7.978751,4.856477,8.205391,9.627143,-6.350034,5.755282,3.833708,7.962279,-3.717870,8.400783,-4.374276,-0.358637,-7.810472,1.997558,-1.032058,-0.600706,-0.772515,8.015574,-7.239353,-6.735806,6.808521,-4.976425,-3.860850,2.511485,0.492754,0.952201,2.266119,4.239110,-8.327598,1.094953,-0.334040,4.930580,-4.061196,-9.497780,7.322511,5.152776,-8.292529,-6.872355,-5.231618,-2.302852,-8.237219,4.377661,5.067645,0.972202,9.057908,-1.351373,-0.538447,-2.965860,-0.228395,-0.253509,3.183498,-6.452731,3.055790,4.959302,-2.490590,5.533633,9.016740,-8.779944,9.720310,-5.044894,8.949748,-8.302004,-1.394997,-3.368861,3.762296,9.621304,-8.592951,1.750699,-9.930191,4.845129,-0.723691,0.461979,3.231133,-8.070407,2.247845,-4.643294,9.643683,4.767542,1.344030,-7.129349,-3.278914,-6.973334,6.445762,-9.096415,-1.102784,-6.953464,-7.110089,-9.805469,-4.097345,7.618866,-0.864202,-3.469729,-0.006276,7.462625,7.929171,5.790537,3.100431,-0.847995,9.650913,-8.497514,9.921373,-3.097572,-5.990232,2.975063,3.662288,4.176670,-4.577126,1.816629,7.752513,8.261189,-8.096798,-5.192244,-9.743958,-6.483338,5.973064,5.625808,0.938356,-6.128950,-0.302312,-2.932669,-2.557845,7.386251,4.674111,-6.624435,-0.433059,4.163732,-7.157635,-2.780887,8.500566,-8.639203,-7.444669,6.583778,6.768531,2.581156,6.586319,7.722611,1.489557,4.216821,4.130459,8.361226,1.955593,-7.841593,-2.561337,-7.033802,5.255276,-6.229077,-1.556009,0.091574,-4.022881,1.531278,6.698026,4.283337,-8.159222,0.021375,-6.306632,1.270610,-0.885278,8.463620,-4.661637,-1.977485,-8.241299,9.548479,-3.964783,-1.049184,-5.030790,-0.440996,-8.270253,-8.804837,-5.841458,-7.927374,1.055615,-4.316381,6.884948,-3.866040,4.134803,0.075975,-0.561662,-9.569269,-1.082081,2.540767,0.425407,-3.738444,1.149454,-6.004301,-5.276216,2.645159,-1.039240,5.991321,3.096555,9.415002,-7.458937,0.222361,-7.267740,8.693496,-5.220034,1.653521,9.979788,-5.471387,-1.721567,-8.607071,4.507178,-7.622381,-7.761328,-1.562241,-8.913799,-7.383022,-6.483452,7.523590,-5.605856,5.138051,3.044863,-8.844775,-2.942986,3.747937,5.407526,-1.867291,5.774996,-8.015347,-2.521634,-5.914474,-0.265508,-3.732954,-8.939603,7.460308,-4.166648,1.528162,9.222791,-0.539585,-2.373236,2.364362,-5.301024,7.799260,-2.047660,6.494992,-6.268502,0.619415,-5.361325,5.540768,2.437730,6.376829,-0.616029,4.416261,-8.227939,6.750217,-0.631424,-3.285695,-3.204259,-3.238296,4.002026,-4.453034,5.665942,9.568070,0.270142,-8.133466,9.453622,-3.673905,5.703615,-6.204591,-0.370646,-8.962126,-1.072211,8.758880,-1.315337,6.416428,9.730305,7.169273,-7.875423,-1.639323,-7.005408,-4.810921,3.224017,8.225598,1.007760,-7.461521,2.042060,-7.453103,-8.215228,9.011308,6.439543,-0.194276,-9.327038,-4.841997,-0.046695,-2.904066,2.906289,1.484860,2.358884,0.646744,-0.995761,-4.844700,6.612596,3.772817,-4.001300,-2.433845,7.164376,-4.412264,6.813594,-8.467666,-6.926785,-1.944106,-2.837326,-1.731228,-2.156505,-1.132054,8.394727,-4.188452,6.716969,-5.199760,-3.968814,3.526787,-9.810593,1.381688,-4.940582,3.940011,-6.039541,3.637939,9.087626,8.662527,6.814580,-5.841067,-1.320921,2.921988,-1.024684,-4.226344,6.647278,8.291558,9.048459,4.992383,-6.852841,-3.094926,-3.689346,2.091919,4.146245,5.085757,-1.273876,-0.288065,-1.038516,-9.706887,1.882734,-0.127957,5.361155,-3.125386,-3.251110,-5.807129,1.289582,-8.583285,-4.629510,8.788609,-6.778106,4.907897,0.572873,3.871876,8.829164,-1.207611,-3.815617,5.745948,-0.079181,0.213576,9.010117,-2.509429,-8.506538,-8.459260,-0.288324,0.061773,-6.083341,-5.035820,-7.423967,-8.953065,7.972865,-0.426236,0.987386,4.274318,-0.848385,-9.842585,8.187230,-1.338239,7.171653,-7.625887,-6.045921,-2.402428,-7.859852,-2.128740,4.375664,4.731368,-2.519115,-5.333082,8.881218,0.059903,-1.411713,-2.782554,-4.582647,-2.134458,9.871320,-6.577215,-2.787843,8.679235,1.837103,8.321549,-5.397832,0.947989,-1.958013,-2.791866,-0.751481,6.012628,4.168399,-3.646486,-1.590803,-8.571618,6.253548,-7.741250,0.708860,9.538266,2.987365,4.430470,8.428073,-2.011595], dtype = "float32")#candidate|6269|(768,)|const|float32
call_6267 = relay.TupleGetItem(func_2354_call(relay.reshape(const_6268.astype('float32'), []), relay.reshape(const_6269.astype('float32'), [8, 6, 16]), ), 1)
call_6270 = relay.TupleGetItem(func_2358_call(relay.reshape(const_6268.astype('float32'), []), relay.reshape(const_6269.astype('float32'), [8, 6, 16]), ), 1)
output = relay.Tuple([call_6254,call_6267,const_6268,const_6269,])
output2 = relay.Tuple([call_6255,call_6270,const_6268,const_6269,])
func_6272 = relay.Function([], output)
mod['func_6272'] = func_6272
mod = relay.transform.InferType()(mod)
output = func_6272()
func_6273 = relay.Function([], output)
mutated_mod['func_6273'] = func_6273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mod.get_global_var('func_6272')
func_6273_call = mutated_mod.get_global_var('func_6273')
call_6307 = relay.TupleGetItem(func_6272_call(), 1)
call_6308 = relay.TupleGetItem(func_6273_call(), 1)
output = relay.Tuple([call_6307,])
output2 = relay.Tuple([call_6308,])
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6321 = relay.var("var_6321", dtype = "float32", shape = (5, 14, 16))#candidate|6321|(5, 14, 16)|var|float32
uop_6322 = relay.atan(var_6321.astype('float32')) # shape=(5, 14, 16)
uop_6327 = relay.acosh(uop_6322.astype('float32')) # shape=(5, 14, 16)
func_987_call = mod.get_global_var('func_987')
func_988_call = mutated_mod.get_global_var('func_988')
call_6338 = relay.TupleGetItem(func_987_call(), 0)
call_6339 = relay.TupleGetItem(func_988_call(), 0)
bop_6348 = relay.not_equal(uop_6327.astype('bool'), relay.reshape(uop_6322.astype('bool'), relay.shape_of(uop_6327))) # shape=(5, 14, 16)
var_6355 = relay.var("var_6355", dtype = "bool", shape = (5, 14, 16))#candidate|6355|(5, 14, 16)|var|bool
bop_6356 = relay.divide(bop_6348.astype('float32'), relay.reshape(var_6355.astype('float32'), relay.shape_of(bop_6348))) # shape=(5, 14, 16)
func_1376_call = mod.get_global_var('func_1376')
func_1378_call = mutated_mod.get_global_var('func_1378')
const_6379 = relay.const([5,-6,1,5,8,9,-10,-9,-8,3,4,-8,4,10,-6,-10,6,-6,-9,-8,-6,2,3,4,-10,3,5,-10,1,1,-10,-10,9,3,6,-7,-6,10,-4,3,9,8,7,-5,10,8,8,-6,6,7,1,-6,-4,-8,-1,10,9,6,-8,4,6,7,2,1,5,1,1,-4,-2,-3,5,2,3,-10,8,10,8,8,-3,9,8,-3,-7,-5,-9,-1,2,-8,5,10,2,9,-7,3,7,-7,1,-3,-7,7,-5,-10,-6,-5,-4,4,5,7,10,4,-1,-10,1,3,2,-3,10,5,10,5], dtype = "uint32")#candidate|6379|(120,)|const|uint32
call_6378 = relay.TupleGetItem(func_1376_call(relay.reshape(const_6379.astype('uint32'), [6, 10, 2])), 1)
call_6380 = relay.TupleGetItem(func_1378_call(relay.reshape(const_6379.astype('uint32'), [6, 10, 2])), 1)
func_2865_call = mod.get_global_var('func_2865')
func_2866_call = mutated_mod.get_global_var('func_2866')
call_6382 = relay.TupleGetItem(func_2865_call(), 0)
call_6383 = relay.TupleGetItem(func_2866_call(), 0)
output = relay.Tuple([call_6338,bop_6356,call_6378,const_6379,call_6382,])
output2 = relay.Tuple([call_6339,bop_6356,call_6380,const_6379,call_6383,])
func_6395 = relay.Function([var_6321,var_6355,], output)
mod['func_6395'] = func_6395
mod = relay.transform.InferType()(mod)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6395_call = mutated_mod.get_global_var('func_6395')
var_6397 = relay.var("var_6397", dtype = "float32", shape = (5, 14, 16))#candidate|6397|(5, 14, 16)|var|float32
var_6398 = relay.var("var_6398", dtype = "bool", shape = (5, 14, 16))#candidate|6398|(5, 14, 16)|var|bool
call_6396 = func_6395_call(var_6397,var_6398,)
output = call_6396
func_6399 = relay.Function([var_6397,var_6398,], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_559_call = mod.get_global_var('func_559')
func_560_call = mutated_mod.get_global_var('func_560')
call_6447 = relay.TupleGetItem(func_559_call(), 0)
call_6448 = relay.TupleGetItem(func_560_call(), 0)
func_5707_call = mod.get_global_var('func_5707')
func_5710_call = mutated_mod.get_global_var('func_5710')
var_6478 = relay.var("var_6478", dtype = "uint16", shape = (910,))#candidate|6478|(910,)|var|uint16
call_6477 = func_5707_call(relay.reshape(var_6478.astype('uint16'), [14, 5, 13]))
call_6479 = func_5707_call(relay.reshape(var_6478.astype('uint16'), [14, 5, 13]))
output = relay.Tuple([call_6447,call_6477,var_6478,])
output2 = relay.Tuple([call_6448,call_6479,var_6478,])
func_6492 = relay.Function([var_6478,], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6493 = relay.var("var_6493", dtype = "uint16", shape = (910,))#candidate|6493|(910,)|var|uint16
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6494 = func_6492_call(var_6493)
output = call_6494
func_6495 = relay.Function([var_6493], output)
mutated_mod['func_6495'] = func_6495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6179_call = mod.get_global_var('func_6179')
func_6180_call = mutated_mod.get_global_var('func_6180')
call_6499 = relay.TupleGetItem(func_6179_call(), 1)
call_6500 = relay.TupleGetItem(func_6180_call(), 1)
output = relay.Tuple([call_6499,])
output2 = relay.Tuple([call_6500,])
func_6503 = relay.Function([], output)
mod['func_6503'] = func_6503
mod = relay.transform.InferType()(mod)
output = func_6503()
func_6504 = relay.Function([], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2836_call = mod.get_global_var('func_2836')
func_2837_call = mutated_mod.get_global_var('func_2837')
call_6505 = relay.TupleGetItem(func_2836_call(), 3)
call_6506 = relay.TupleGetItem(func_2837_call(), 3)
const_6518 = relay.const([[[-6,-1,-3,-4,-6,9,-8,7,6],[-4,-9,10,9,-4,2,-2,-10,5],[-7,4,-8,5,-8,4,4,-6,-8],[-3,-6,-7,-2,-7,9,-8,1,-10],[-5,-4,1,-8,5,-8,-10,-9,5],[-5,4,1,-3,10,3,4,-8,10],[8,4,1,6,10,-10,-9,6,-8],[-9,-8,-9,-10,6,3,7,5,5],[-3,1,-4,10,7,-9,3,-10,-6],[9,-3,-5,-4,-8,-4,-8,3,2],[-10,5,8,-6,1,-3,4,6,-10],[4,3,-6,-6,-6,4,10,-2,-3],[8,-3,-5,9,-10,-9,-6,-6,-6],[8,7,-10,-3,2,5,6,-5,6],[5,1,8,8,2,3,-6,-7,4]],[[-1,10,-2,1,10,-5,7,-2,9],[-8,-6,-3,-6,9,-2,-5,-1,8],[-3,1,6,10,8,-2,3,-4,-8],[-7,5,-2,-10,10,5,7,9,-1],[-4,8,4,10,8,4,2,4,7],[4,4,-3,4,-7,7,-7,9,-4],[-3,-8,-8,-1,-4,-8,3,-10,-8],[8,-2,4,-2,-2,-4,4,1,-10],[-6,1,-6,-5,-3,-5,-10,10,5],[5,4,-8,6,-8,6,7,-9,-6],[-9,1,7,-2,7,1,7,9,3],[-10,1,-5,-5,1,-3,6,-9,6],[3,3,2,-3,-1,-10,4,-5,-7],[-2,-5,4,-9,3,-7,3,9,-1],[-1,-1,1,-9,1,-7,-4,-9,-3]],[[8,3,-1,-10,-2,10,1,-10,-8],[-2,-5,10,-9,3,5,1,10,-5],[-4,-3,4,-2,9,-7,-4,-3,-2],[-4,-9,-1,5,-8,-5,3,-7,-8],[4,-8,-1,-9,6,5,-6,10,-8],[-10,2,5,2,-7,-8,4,4,-6],[-8,1,8,-1,6,2,4,-4,-1],[-4,-1,-3,-7,-3,-8,-5,8,2],[3,-2,7,-3,-7,7,-10,-2,3],[1,2,-8,-5,-9,-10,-10,-4,-2],[-6,2,-3,-3,10,-3,-1,-3,-10],[-5,6,9,5,-7,-2,10,3,3],[-2,9,4,-7,6,-9,-10,3,-8],[-2,-2,2,9,3,-5,-9,5,-1],[10,5,7,-4,8,-5,-8,1,-7]],[[3,6,-9,2,-10,-8,7,10,-7],[6,7,7,-2,10,-6,-8,-2,-4],[-7,-3,-3,-1,-10,-2,9,-8,-2],[8,-1,-9,5,5,4,-10,-6,-2],[-5,-1,4,-2,1,-9,5,9,8],[-5,7,-10,-1,-6,5,-8,-10,5],[-2,9,9,8,-9,-1,5,8,8],[-5,-10,8,8,8,-6,-4,-2,-4],[4,6,-9,8,5,-9,6,3,-6],[1,-8,-4,2,3,-2,6,8,-7],[10,-4,3,-9,-7,3,5,7,-5],[-8,-8,2,7,-4,-1,-6,8,6],[-1,-8,-7,-4,-7,8,4,10,4],[-2,1,7,-8,-2,3,6,3,4],[5,6,9,-5,-7,-4,6,-3,-3]],[[10,5,6,10,-2,7,6,-4,-5],[4,7,-4,2,9,8,8,-3,-10],[3,-2,6,2,3,-2,-10,-10,-8],[2,-6,-7,-4,4,10,-10,-5,-7],[-4,-3,-7,-5,1,-8,2,3,2],[4,-7,-5,4,1,8,10,-8,-8],[8,-2,3,-2,-9,-2,-2,-6,7],[-7,9,-8,-5,10,3,-6,3,2],[9,10,-6,8,-1,9,8,-8,-2],[-3,-7,10,-10,1,-6,1,4,3],[6,-7,6,4,2,10,-8,-10,-5],[-5,7,-10,6,8,3,-9,1,-5],[-4,2,8,-7,-4,-3,7,3,3],[-7,-5,10,-4,-6,-7,-3,-7,-4],[-6,3,-9,-10,4,2,-7,6,-4]],[[7,-7,7,1,4,7,-4,10,5],[-4,6,8,-3,7,-6,-8,-2,-5],[9,-9,5,9,-10,-7,-8,10,8],[4,-5,-3,-3,-2,-5,4,-7,5],[8,3,4,-3,-10,-8,2,-10,-2],[-6,3,2,8,-10,-8,7,10,3],[2,8,-10,-2,8,-9,-4,-7,-4],[-5,-4,7,1,-7,-6,6,-8,-1],[9,-3,5,7,-7,-8,-5,5,-7],[1,-8,8,-1,-1,-7,9,6,-4],[2,-10,-10,-3,-1,-2,3,-6,-2],[-5,9,3,-10,5,-2,7,-2,4],[7,-7,-8,-7,-4,1,9,10,6],[5,4,2,-9,-2,9,-5,5,-7],[10,-3,-8,2,-2,5,-6,4,8]]], dtype = "uint32")#candidate|6518|(6, 15, 9)|const|uint32
bop_6519 = relay.greater_equal(call_6505.astype('bool'), relay.reshape(const_6518.astype('bool'), relay.shape_of(call_6505))) # shape=(6, 15, 9)
bop_6522 = relay.greater_equal(call_6506.astype('bool'), relay.reshape(const_6518.astype('bool'), relay.shape_of(call_6506))) # shape=(6, 15, 9)
uop_6524 = relay.atanh(call_6505.astype('float64')) # shape=(6, 15, 9)
uop_6526 = relay.atanh(call_6506.astype('float64')) # shape=(6, 15, 9)
var_6535 = relay.var("var_6535", dtype = "float64", shape = (6, 15, 9))#candidate|6535|(6, 15, 9)|var|float64
bop_6536 = relay.subtract(uop_6524.astype('uint8'), relay.reshape(var_6535.astype('uint8'), relay.shape_of(uop_6524))) # shape=(6, 15, 9)
bop_6539 = relay.subtract(uop_6526.astype('uint8'), relay.reshape(var_6535.astype('uint8'), relay.shape_of(uop_6526))) # shape=(6, 15, 9)
func_5643_call = mod.get_global_var('func_5643')
func_5647_call = mutated_mod.get_global_var('func_5647')
var_6541 = relay.var("var_6541", dtype = "float32", shape = (480,))#candidate|6541|(480,)|var|float32
var_6542 = relay.var("var_6542", dtype = "float32", shape = (504,))#candidate|6542|(504,)|var|float32
call_6540 = relay.TupleGetItem(func_5643_call(relay.reshape(var_6541.astype('float32'), [6, 8, 10]), relay.reshape(var_6541.astype('float32'), [6, 8, 10]), relay.reshape(var_6542.astype('float32'), [12, 3, 14]), ), 4)
call_6543 = relay.TupleGetItem(func_5647_call(relay.reshape(var_6541.astype('float32'), [6, 8, 10]), relay.reshape(var_6541.astype('float32'), [6, 8, 10]), relay.reshape(var_6542.astype('float32'), [12, 3, 14]), ), 4)
uop_6544 = relay.cos(uop_6524.astype('float32')) # shape=(6, 15, 9)
uop_6546 = relay.cos(uop_6526.astype('float32')) # shape=(6, 15, 9)
var_6551 = relay.var("var_6551", dtype = "bool", shape = (6, 15, 9))#candidate|6551|(6, 15, 9)|var|bool
bop_6552 = relay.right_shift(bop_6519.astype('int8'), relay.reshape(var_6551.astype('int8'), relay.shape_of(bop_6519))) # shape=(6, 15, 9)
bop_6555 = relay.right_shift(bop_6522.astype('int8'), relay.reshape(var_6551.astype('int8'), relay.shape_of(bop_6522))) # shape=(6, 15, 9)
output = relay.Tuple([bop_6536,call_6540,var_6541,var_6542,uop_6544,bop_6552,])
output2 = relay.Tuple([bop_6539,call_6543,var_6541,var_6542,uop_6546,bop_6555,])
func_6558 = relay.Function([var_6535,var_6541,var_6542,var_6551,], output)
mod['func_6558'] = func_6558
mod = relay.transform.InferType()(mod)
var_6559 = relay.var("var_6559", dtype = "float64", shape = (6, 15, 9))#candidate|6559|(6, 15, 9)|var|float64
var_6560 = relay.var("var_6560", dtype = "float32", shape = (480,))#candidate|6560|(480,)|var|float32
var_6561 = relay.var("var_6561", dtype = "float32", shape = (504,))#candidate|6561|(504,)|var|float32
var_6562 = relay.var("var_6562", dtype = "bool", shape = (6, 15, 9))#candidate|6562|(6, 15, 9)|var|bool
output = func_6558(var_6559,var_6560,var_6561,var_6562,)
func_6563 = relay.Function([var_6559,var_6560,var_6561,var_6562,], output)
mutated_mod['func_6563'] = func_6563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6593 = relay.var("var_6593", dtype = "float64", shape = (11, 9, 11))#candidate|6593|(11, 9, 11)|var|float64
uop_6594 = relay.sqrt(var_6593.astype('float64')) # shape=(11, 9, 11)
uop_6614 = relay.sigmoid(var_6593.astype('float32')) # shape=(11, 9, 11)
output = relay.Tuple([uop_6594,uop_6614,])
output2 = relay.Tuple([uop_6594,uop_6614,])
F = relay.Function([var_6593,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6593,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_16887(%var_16861: bool, %var_16862: Tensor[(4, 1, 6), bool]) -> (Tensor[(4, 1, 6), bool], Tensor[(1, 10, 11), float32]) {
  %0 = cast(%var_16861, dtype="bool") /* ty=bool */;
  %1 = cast(%var_16862, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %2 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %3 = logical_or(%0, %1) /* ty=Tensor[(4, 1, 6), bool] */;
  %4 = %2.0;
  (%3, %4)
}

def @func_4788(%var_4780: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) {
  %5 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %6 = cast(%var_4780, dtype="int8") /* ty=Tensor[(10, 78), int8] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(2), int32] */;
  %8 = cast(%5, dtype="int8") /* ty=Tensor[(10, 78), int8] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %10 = cast(%var_4780, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %11 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %12 = bitwise_xor(%8, %9) /* ty=Tensor[(10, 78), int8] */;
  %13 = sin(%10) /* ty=Tensor[(10, 78), float32] */;
  (%11, %12, %13)
}

def @func_7666(%var_7597: Tensor[(10, 78), float64], %var_7661: Tensor[(20, 4), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) {
  %14 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  %15 = cast(%var_7597, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
  %17 = cast(%14, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %19 = subtract(%17, %18) /* ty=Tensor[(10, 78), int64] */;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %21 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %22 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %24 = cast(%14, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %25 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %28 = cast(%var_7597, dtype="uint16") /* ty=Tensor[(10, 78), uint16] */;
  %29 = shape_of(%19, dtype="int32") /* ty=Tensor[(2), int32] */;
  %30 = cast(%19, dtype="uint16") /* ty=Tensor[(10, 78), uint16] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %32 = left_shift(%30, %31) /* ty=Tensor[(10, 78), uint16] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %34 = atanh(%33) /* ty=Tensor[(10, 78), float32] */;
  %35 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(2), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %39 = cast(%34, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %40 = log(%39) /* ty=Tensor[(10, 78), float32] */;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %42 = cast(%var_7661, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %43 = reshape(%42, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %44 = @func_6431(%43) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %45 = @func_6817() /* ty=Tensor[(1, 10, 11), float32] */;
  %46 = greater_equal(%22, %23) /* ty=Tensor[(10, 78), bool] */;
  %47 = logical_or(%26, %27) /* ty=Tensor[(10, 78), bool] */;
  %48 = logical_and(%37, %38) /* ty=Tensor[(10, 78), bool] */;
  %49 = asinh(%41) /* ty=Tensor[(10, 78), float32] */;
  %50 = %44.1;
  (%45, %46, %47, %48, %49, %50, %var_7661)
}

def @func_3349(%var_3319: Tensor[(1, 10, 11), float32], %var_3328: Tensor[(130, 6), float64], %var_3343: Tensor[(6, 10, 11), float32]) -> (Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) {
  %51 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %52 = %51.0;
  %53 = cast(%var_3319, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %57 = cast(%var_3328, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %58 = reshape(%57, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %59 = @func_1222(%58) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %60 = cast(%52, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %61 = shape_of(%var_3319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_3319, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = cast(%52, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %65 = cast(%var_3343, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %66 = floor_divide(%55, %56) /* ty=Tensor[(?, 10, 11), float32] */;
  %67 = %59.0;
  %68 = not_equal(%62, %63) /* ty=Tensor[(?, 10, 11), bool] */;
  %69 = multiply(%64, %65) /* ty=Tensor[(6, 10, 11), float64] */;
  (%66, %67, %var_3328, %68, %69)
}

def @func_8635() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %70 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %71 = @func_6906() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %72 = %70.1;
  %73 = %71.1;
  (%72, %73)
}

def @func_15554() -> (Tensor[(10, 78), float64],) {
  %74 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %75 = %74.0;
  (%75,)
}

def @func_6842() -> (Tensor[(1, 10, 11), float32],) {
  %76 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %77 = %76.0;
  (%77,)
}

def @func_10559() -> (Tensor[(1, 10, 11), float32],) {
  %78 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  (%78,)
}

def @func_7457() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) {
  %79 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %80 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %81 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %82 = reshape(%80, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %83 = reshape(%81, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %84 = @func_4333(%82, %83) /* ty=(Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) */;
  %85 = %79.0;
  %86 = %84.1;
  (%85, %86, meta[relay.Constant][0] /* ty=Tensor[(216), uint8] */)
}

def @func_15315() -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %87 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %88 = cast(meta[relay.Constant][1] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %89 = reshape(%88, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %90 = @func_11347(%89) /* ty=(Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) */;
  %91 = %87.0;
  %92 = %90.0;
  (%91, %92, meta[relay.Constant][1] /* ty=Tensor[(990), float32] */)
}

def @func_11071(%var_11064: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool], float64, Tensor[(720), float64]) {
  %93 = @func_7817() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %94 = cast(-5.54927f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %95 = cast(%var_11064, dtype="float64") /* ty=Tensor[(720), float64] */;
  %96 = reshape(%94, newshape=[]) /* ty=float64 */;
  %97 = reshape(%95, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %98 = @func_10413(%96, %97) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) */;
  %99 = %93.0;
  %100 = @func_10268() /* ty=Tensor[(1, 10, 11), float32] */;
  %101 = %98.4;
  (%99, %100, %101, -5.54927f64 /* ty=float64 */, %var_11064)
}

def @func_8905() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  %102 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %103 = @func_4275() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %104 = %102.0;
  %105 = %103.0;
  (%104, %105)
}

def @func_5085() -> (Tensor[(1, 10, 11), float32],) {
  %106 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%106,)
}

def @func_8928() -> Tensor[(1, 10, 11), float32] {
  %107 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %107.0
}

def @func_6729() -> (Tensor[(1, 10, 11), float32],) {
  %108 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %109 = %108.0;
  (%109,)
}

def @func_16702() -> (Tensor[(6, 10, 11), float64], Tensor[(1, 10, 11), float32]) {
  %110 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %111 = @func_14508() /* ty=Tensor[(6, 10, 11), float64] */;
  %112 = %110.0;
  (%111, %112)
}

def @func_11593() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) {
  %113 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %114 = @func_11430() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %115 = cast(meta[relay.Constant][2] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %116 = cast(meta[relay.Constant][2] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %117 = reshape(%115, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float64] */;
  %118 = reshape(%116, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float64] */;
  %119 = @func_7333(%117, %118) /* ty=(Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) */;
  %120 = %119.3;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %122 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %123 = reshape(%122, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %124 = @func_6501(%123) /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) */;
  %125 = %113.0;
  %126 = %114.0;
  %127 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  %128 = sinh(%121) /* ty=Tensor[(8, 14, 16), float32] */;
  %129 = %124.0;
  (%125, %126, meta[relay.Constant][2] /* ty=Tensor[(1792), float64] */, %127, %128, %129, meta[relay.Constant][3] /* ty=Tensor[(330), float32] */)
}

def @func_15637() -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
  %130 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %131 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
  %132 = %130.0;
  (%131, %132)
}

def @func_14508() -> Tensor[(6, 10, 11), float64] {
  @func_14421() /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_14113() -> (Tensor[(1, 10, 11), float32],) {
  %133 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %134 = %133.0;
  (%134,)
}

def @func_4614() -> Tensor[(10, 78), float64] {
  %135 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  exp(%136) /* ty=Tensor[(10, 78), float64] */
}

def @func_14527() -> Tensor[(1, 10, 11), float32] {
  @func_9719() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_4385() -> (Tensor[(1, 10, 11), float32],) {
  %137 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  (%137,)
}

def @func_14043() -> Tensor[(6, 10, 11), float64] {
  %138 = @func_6390() /* ty=(Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) */;
  %138.1
}

def @func_10298() -> (Tensor[(550), float32], Tensor[(?, 10, 11), bool], Tensor[(1, 10, 11), float32]) {
  %139 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %140 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %141 = %140.0;
  %142 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %143 = %142.0;
  %144 = cast(%143, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %145 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%141, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %148 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %149 = %139.2;
  %150 = less_equal(%146, %147) /* ty=Tensor[(?, 10, 11), bool] */;
  %151 = %148.1;
  (%149, %150, %151)
}

def @func_10644() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %152 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %153 = %152.0;
  %154 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  (%153, %154)
}

def @func_12610() -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) {
  %155 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %156 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %157 = %156.0;
  %158 = cast(%157, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
  %159 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 10, 11), float32] */, dtype="uint8") /* ty=Tensor[(9, 10, 11), uint8] */;
  %160 = %155.0;
  %161 = bitwise_xor(%158, %159) /* ty=Tensor[(9, 10, 11), uint8] */;
  (%160, %161)
}

def @func_8285(%var_8267: Tensor[(540), int32]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) {
  %162 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %163 = cast(%var_8267, dtype="int32") /* ty=Tensor[(540), int32] */;
  %164 = cast(%var_8267, dtype="int32") /* ty=Tensor[(540), int32] */;
  %165 = reshape(%163, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %166 = reshape(%164, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %167 = %162.0;
  %168 = @func_4188(%165, %166) /* ty=Tensor[(4, 15, 9), int32] */;
  (%167, %168, %var_8267)
}

def @func_5414() -> Tensor[(10, 78), float64] {
  @func_3152() /* ty=Tensor[(10, 78), float64] */
}

def @func_5830() -> (Tensor[(1, 10, 11), float32],) {
  %169 = @func_5716() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) */;
  %170 = %169.1;
  (%170,)
}

def @func_14314() -> (Tensor[(10, 78), float64],) {
  %171 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %172 = %171.0;
  (%172,)
}

def @func_7539(%var_7519: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) {
  %173 = cast(%var_7519, dtype="bool") /* ty=Tensor[(80), bool] */;
  %174 = reshape(%173, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %175 = @func_6431(%174) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %176 = cast(%var_7519, dtype="bool") /* ty=Tensor[(80), bool] */;
  %177 = reshape(%176, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %178 = @func_2340(%177) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %179 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
  %180 = %175.0;
  %181 = %178.3;
  (%179, %180, %var_7519, %181)
}

def @func_14448(%var_14438: uint64, %var_14439: Tensor[(1, 16, 7), uint64]) -> Tensor[(1, 16, 7), bool] {
  %182 = cast(%var_14438, dtype="bool") /* ty=bool */;
  %183 = cast(%var_14439, dtype="bool") /* ty=Tensor[(1, 16, 7), bool] */;
  equal(%182, %183) /* ty=Tensor[(1, 16, 7), bool] */
}

def @func_11309(%var_11291: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %184 = cast(%var_11291, dtype="float64") /* ty=Tensor[(780), float64] */;
  %185 = reshape(%184, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %186 = @func_8115(%185) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %187 = @func_8600() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %188 = @func_6934() /* ty=Tensor[(1, 10, 11), float32] */;
  %189 = %186.3;
  %190 = %187.1;
  (%188, %189, %var_11291, %190)
}

def @func_10539(%var_10526: Tensor[(1, 10, 16), float32], %var_10527: Tensor[(1, 10, 16), float32]) -> Tensor[(?, 10, 16), float32] {
  %191 = cast(%var_10527, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %192 = shape_of(%var_10526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_10526, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%193, %194) /* ty=Tensor[(?, 10, 16), float32] */
}

def @func_8115(%var_8074: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %195 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %196 = cast(%var_8074, dtype="float64") /* ty=Tensor[(780), float64] */;
  %197 = reshape(%196, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %198 = @func_4788(%197) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) */;
  %199 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %200 = %195.0;
  %201 = %198.0;
  %202 = %199.0;
  (%200, %201, %var_8074, %202)
}

def @func_9883() -> Tensor[(10, 78), float64] {
  @func_3152() /* ty=Tensor[(10, 78), float64] */
}

def @func_6934() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_7333(%var_7305: Tensor[(8, 14, 16), float64], %var_7314: Tensor[(8, 14, 16), float64]) -> (Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) {
  %203 = cast(meta[relay.Constant][5] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %204 = reshape(%203, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %205 = @func_2340(%204) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %206 = cast(%var_7305, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %207 = sin(%206) /* ty=Tensor[(8, 14, 16), float64] */;
  %208 = cast(%var_7314, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %212 = cast(%207, dtype="uint16") /* ty=Tensor[(8, 14, 16), uint16] */;
  %213 = shape_of(%var_7305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_7305, dtype="uint16") /* ty=Tensor[(8, 14, 16), uint16] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %216 = %205.2;
  %217 = equal(%210, %211) /* ty=Tensor[(8, 14, 16), bool] */;
  %218 = multiply(%214, %215) /* ty=Tensor[(8, 14, 16), uint16] */;
  (%216, meta[relay.Constant][5] /* ty=Tensor[(80), bool] */, %217, %218)
}

def @func_14569() -> Tensor[(1, 10, 11), float32] {
  %219 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %219.3
}

def @func_3218() -> (Tensor[(1, 10, 11), float32],) {
  %220 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  (%220,)
}

def @func_16119(%var_16116: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(6, 10, 11), float64], Tensor[(660), float32]) {
  %221 = @func_11593() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) */;
  %222 = cast(meta[relay.Constant][6] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %223 = reshape(%222, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %224 = @func_589(%223) /* ty=Tensor[(13, 15, 4), float64] */;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
  %226 = cast(%var_16116, dtype="float32") /* ty=Tensor[(660), float32] */;
  %227 = reshape(%225, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %228 = reshape(%226, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %229 = @func_4242(%227, %228) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %230 = @func_9719() /* ty=Tensor[(1, 10, 11), float32] */;
  %231 = %221.1;
  %232 = %229.2;
  (%230, %231, %224, meta[relay.Constant][6] /* ty=Tensor[(780), float64] */, %232, %var_16116)
}

def @func_15859() -> (Tensor[(10, 78), float64], Tensor[(7, 11, 11), bool]) {
  %233 = @func_12645() /* ty=(Tensor[(7, 11, 11), bool],) */;
  %234 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  %235 = %233.0;
  (%234, %235)
}

def @func_3730() -> (Tensor[(1, 10, 11), float32],) {
  %236 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %237 = %236.0;
  (%237,)
}

def @func_11049(%var_11029: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), uint8], Tensor[(?, 10, 11), int32], Tensor[(4, 3, 4), float64]) {
  %238 = @func_8727() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) */;
  %239 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  %240 = cast(%var_11029, dtype="uint8") /* ty=Tensor[(10, 78), uint8] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(2), int32] */;
  %242 = cast(%239, dtype="uint8") /* ty=Tensor[(10, 78), uint8] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %244 = @func_6934() /* ty=Tensor[(1, 10, 11), float32] */;
  %245 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
  %248 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%244, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %251 = %238.1;
  %252 = minimum(%242, %243) /* ty=Tensor[(10, 78), uint8] */;
  %253 = bitwise_xor(%249, %250) /* ty=Tensor[(?, 10, 11), int32] */;
  %254 = @func_9564() /* ty=Tensor[(4, 3, 4), float64] */;
  (%251, %252, %253, %254)
}

def @func_9719() -> Tensor[(1, 10, 11), float32] {
  %255 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
  %255.0
}

def @func_10388() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(55, 6), float32], Tensor[(1, 330), float32], Tensor[(12, 100), float32]) {
  %256 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %257 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %258 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %259 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 100), bool] */, dtype="bool") /* ty=Tensor[(12, 100), bool] */;
  %260 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %261 = reshape(%259, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %262 = reshape(%260, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
  %263 = @func_9666(%261, %262) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) */;
  %264 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 100), bool] */, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
  %265 = %256.0;
  %266 = %257.0;
  %267 = %258.0;
  %268 = %263.6;
  %269 = atanh(%264) /* ty=Tensor[(12, 100), float32] */;
  (%265, %266, %267, %268, meta[relay.Constant][8] /* ty=Tensor[(1, 330), float32] */, %269)
}

def @func_16659() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32]) {
  %270 = @func_15637() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */;
  %271 = %270.1;
  %272 = @func_12856() /* ty=Tensor[(1, 10, 11), float32] */;
  (%271, %272)
}

def @func_16020() -> (Tensor[(1430), float32], Tensor[(1, 10, 11), float32]) {
  %273 = @func_14033() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */;
  %274 = @func_5830() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %275 = %273.3;
  %276 = %274.0;
  (%275, %276)
}

def @func_15113() -> (Tensor[(1, 10, 11), float32],) {
  %277 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_5887() -> Tensor[(1, 10, 11), float32] {
  @func_4536() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_5846() -> Tensor[(1, 10, 11), float32] {
  %279 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %279.0
}

def @func_4144() -> Tensor[(1, 10, 11), float32] {
  %280 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %280.0
}

def @func_16734() -> (Tensor[(5, 10, 11), float32],) {
  %281 = @func_16324() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
  %284 = tan(%283) /* ty=Tensor[(5, 10, 11), float32] */;
  (%284,)
}

def @func_6906() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %285 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %286 = %285.0;
  %287 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
  (%286, %287)
}

def @func_11430() -> (Tensor[(1, 10, 11), float32],) {
  %288 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %289 = %288.2;
  (%289,)
}

def @func_5716() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
  %290 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %291 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %292 = cast(meta[relay.Constant][9] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %293 = reshape(%292, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %294 = @func_1222(%293) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %295 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %296 = cast(meta[relay.Constant][10] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %297 = reshape(%296, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %298 = @func_2368(%297) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %299 = %290.0;
  %300 = %291.0;
  %301 = %294.0;
  %302 = %295.0;
  %303 = %298.0;
  (%299, %300, %301, meta[relay.Constant][9] /* ty=Tensor[(780), float64] */, %302, %303, meta[relay.Constant][10] /* ty=Tensor[(140), float64] */)
}

def @func_11347(%var_11322: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
  %304 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %305 = %304.1;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %307 = cast(%var_11322, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %308 = mod(%306, %307) /* ty=Tensor[(9, 10, 11), float32] */;
  %309 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  (%308, %309)
}

def @func_14403() -> (Tensor[(?, 10, 11), uint64],) {
  %310 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %311 = %310.2;
  (%311,)
}

def @func_3860() -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
  %312 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %313 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %314 = %312.1;
  %315 = %313.0;
  (%314, %315)
}

def @func_6646() -> (Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) {
  %316 = cast(meta[relay.Constant][11] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %317 = reshape(%316, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %318 = @func_2368(%317) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %319 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %320 = cast(meta[relay.Constant][12] /* ty=Tensor[(24, 6), float64] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %321 = reshape(%320, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %322 = @func_613(%321) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %323 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %324 = %318.2;
  %325 = %319.1;
  %326 = %322.0;
  (%323, %324, meta[relay.Constant][11] /* ty=Tensor[(140), float64] */, %325, %326, meta[relay.Constant][12] /* ty=Tensor[(24, 6), float64] */)
}

def @func_4188(%var_4168: Tensor[(4, 15, 9), int32], %var_4169: Tensor[(4, 15, 9), int32]) -> Tensor[(4, 15, 9), int32] {
  %327 = cast(%var_4169, dtype="int32") /* ty=Tensor[(4, 15, 9), int32] */;
  %328 = shape_of(%var_4168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_4168, dtype="int32") /* ty=Tensor[(4, 15, 9), int32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%329, %330) /* ty=Tensor[(4, 15, 9), int32] */
}

def @func_11962() -> Tensor[(1, 10, 11), float32] {
  @func_5846() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_3115() -> (Tensor[(1, 10, 11), float32],) {
  %331 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  (%331,)
}

def @func_9799() -> (Tensor[(1, 10, 11), float32],) {
  %332 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %333 = %332.0;
  (%333,)
}

def @func_9149() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
  %334 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %335 = cast(meta[relay.Constant][13] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %336 = reshape(%335, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %337 = cast(meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %338 = cast(meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %339 = reshape(%337, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %340 = reshape(%338, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %341 = @func_1364(%339, %340) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
  %342 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %343 = reshape(%342, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %344 = @func_7156(%343) /* ty=(Tensor[(7, 10, 11), float64],) */;
  %345 = %334.0;
  %346 = @func_2707(%336) /* ty=Tensor[(5, 10, 11), uint8] */;
  %347 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %348 = %341.0;
  %349 = %344.0;
  (%345, %346, meta[relay.Constant][13] /* ty=Tensor[(550), float32] */, %347, %348, meta[relay.Constant][14] /* ty=Tensor[(432), float32] */, meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, %349, meta[relay.Constant][16] /* ty=Tensor[(770), float32] */)
}

def @func_8662() -> Tensor[(1, 10, 11), float32] {
  @func_4080() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_15436() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) {
  %350 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %351 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %352 = cast(meta[relay.Constant][18] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %353 = reshape(%351, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %354 = reshape(%352, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %355 = @func_3304(%353, %354) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %356 = %350.0;
  %357 = %355.1;
  (%356, %357, meta[relay.Constant][17] /* ty=Tensor[(1430), float32] */, meta[relay.Constant][18] /* ty=Tensor[(315), bool] */)
}

def @func_12313(%var_12284: Tensor[(1760, 1), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) {
  %358 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %359 = cast(%var_12284, dtype="float32") /* ty=Tensor[(1760, 1), float32] */;
  %360 = reshape(%359, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %361 = @func_5370(%360) /* ty=(Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) */;
  %362 = %358.0;
  %363 = %361.2;
  (%362, %363, %var_12284)
}

def @func_6570(%var_6558: Tensor[(80), bool], %var_6559: Tensor[(1200), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
  %364 = cast(%var_6558, dtype="bool") /* ty=Tensor[(80), bool] */;
  %365 = cast(%var_6559, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %366 = cast(%var_6559, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %367 = reshape(%364, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %368 = reshape(%365, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %369 = reshape(%366, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %370 = @func_1285(%367, %368, %369) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %371 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  %372 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
  %373 = %370.1;
  (%371, %372, %373, %var_6558, %var_6559)
}

def @func_14033() -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
  %374 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %375 = cast(meta[relay.Constant][19] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %376 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 63), bool] */, dtype="bool") /* ty=Tensor[(5, 63), bool] */;
  %377 = reshape(%375, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %378 = reshape(%376, newshape=[105, 3]) /* ty=Tensor[(105, 3), bool] */;
  %379 = @func_12909(%377, %378) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) */;
  %380 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %381 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %382 = @func_13729() /* ty=Tensor[(5, 10, 11), uint8] */;
  %383 = %374.0;
  %384 = %379.1;
  %385 = %380.1;
  %386 = %381.0;
  (%382, %383, %384, meta[relay.Constant][19] /* ty=Tensor[(1430), float32] */, meta[relay.Constant][20] /* ty=Tensor[(5, 63), bool] */, %385, %386)
}

def @func_8478() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %387 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
  %388 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %389 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %390 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %391 = %387.0;
  %392 = %388.0;
  %393 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %394 = %389.0;
  %395 = %390.0;
  %396 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  (%391, %392, %393, %394, %395, %396)
}

def @func_10774() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) {
  %397 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %398 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %399 = %397.0;
  %400 = %398.1;
  (%399, %400)
}

def @func_13187(%var_13180: Tensor[(770), float32]) -> (Tensor[(780), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
  %401 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %402 = cast(%var_13180, dtype="float32") /* ty=Tensor[(770), float32] */;
  %403 = reshape(%402, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %404 = @func_7156(%403) /* ty=(Tensor[(7, 10, 11), float64],) */;
  %405 = %401.0;
  %406 = %404.0;
  (%405, %406, %var_13180)
}

def @func_210(%var_195: Tensor[(15, 3, 7), float64], %var_204: Tensor[(140), float64]) -> (Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
  %407 = cast(%var_195, dtype="float64") /* ty=Tensor[(15, 3, 7), float64] */;
  %408 = cast(%var_204, dtype="float64") /* ty=Tensor[(140), float64] */;
  %409 = reshape(%408, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %410 = @func_106(%409) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %411 = acos(%407) /* ty=Tensor[(15, 3, 7), float64] */;
  %412 = %410.0;
  (%411, %412, %var_204)
}

def @func_7044(%var_7016: Tensor[(1430), float32], %var_7017: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) {
  %413 = cast(%var_7016, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %414 = cast(%var_7017, dtype="bool") /* ty=Tensor[(315), bool] */;
  %415 = reshape(%413, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %416 = reshape(%414, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %417 = @func_3304(%415, %416) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %418 = %417.2;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %420 = reshape(%419, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %421 = @func_613(%420) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %422 = @func_5887() /* ty=Tensor[(1, 10, 11), float32] */;
  %423 = %421.0;
  (%422, %418, %var_7016, %var_7017, %423)
}

def @func_6224() -> (Tensor[(1, 10, 11), float32],) {
  %424 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%424,)
}

def @func_6817() -> Tensor[(1, 10, 11), float32] {
  %425 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %425.0
}

def @func_3743() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %426 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %427 = cast(meta[relay.Constant][21] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %428 = reshape(%427, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %429 = @func_3428(%428) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) */;
  %430 = %426.0;
  %431 = %429.0;
  (%430, %431, meta[relay.Constant][21] /* ty=Tensor[(780), float64] */)
}

def @func_16448(%var_16412: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %432 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
  %433 = cast(%var_16412, dtype="float64") /* ty=Tensor[(780), float64] */;
  %434 = reshape(%433, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %435 = @func_1222(%434) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %436 = %432.0;
  %437 = %435.0;
  %438 = @func_14569() /* ty=Tensor[(1, 10, 11), float32] */;
  %439 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  (%436, %437, %var_16412, %438, %439)
}

def @func_16324() -> (Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) {
  %440 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %441 = @func_8042() /* ty=(Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) */;
  %442 = %440.1;
  %443 = %441.1;
  (%442, %443)
}

def @func_11926() -> Tensor[(12, 12, 13), bool] {
  %444 = @func_8905() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %444.0
}

def @func_2402(%var_2389: Tensor[(432), float32], %var_2390: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64]) {
  %445 = cast(%var_2389, dtype="float32") /* ty=Tensor[(432), float32] */;
  %446 = cast(%var_2390, dtype="float64") /* ty=Tensor[(144), float64] */;
  %447 = reshape(%445, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %448 = reshape(%446, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %449 = @func_1364(%447, %448) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
  %450 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %451 = %449.0;
  (%450, %451, %var_2389, %var_2390)
}

def @func_4522(%var_4508: Tensor[(330), float32]) -> (Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %452 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %453 = cast(%452, dtype="int8") /* ty=Tensor[(1, 10, 11), int8] */;
  %454 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 10, 11), float32] */, dtype="int8") /* ty=Tensor[(4, 10, 11), int8] */;
  %455 = cast(%var_4508, dtype="float32") /* ty=Tensor[(330), float32] */;
  %456 = reshape(%455, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %457 = multiply(%453, %454) /* ty=Tensor[(4, 10, 11), int8] */;
  %458 = @func_3095(%456) /* ty=Tensor[(3, 10, 11), float32] */;
  (%457, %458, %var_4508)
}

def @func_7286() -> (Tensor[(1, 10, 11), float32],) {
  %459 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %460 = %459.0;
  (%460,)
}

def @func_4656() -> (Tensor[(1, 10, 11), float32],) {
  %461 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  (%461,)
}

def @func_12201(%var_12196: Tensor[(5, 10, 11), float32]) -> (Tensor[(5, 10, 11), float32],) {
  %462 = @func_10644() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %463 = %462.0;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %465 = cast(%var_12196, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
  %466 = floor_divide(%464, %465) /* ty=Tensor[(5, 10, 11), float32] */;
  (%466,)
}

def @func_14243(%var_14192: Tensor[(6, 9, 7), float64], %var_14193: Tensor[(6, 9, 7), float64], %var_14206: Tensor[(144), float64], %var_14207: Tensor[(780), float64], %var_14217: Tensor[(330), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) {
  %467 = cast(%var_14193, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %468 = shape_of(%var_14192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_14192, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %471 = cast(%var_14206, dtype="float64") /* ty=Tensor[(144), float64] */;
  %472 = cast(%var_14207, dtype="float64") /* ty=Tensor[(780), float64] */;
  %473 = cast(meta[relay.Constant][23] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %474 = reshape(%471, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %475 = reshape(%472, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %476 = reshape(%473, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %477 = @func_2479(%474, %475, %476) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %478 = cast(%var_14217, dtype="float32") /* ty=Tensor[(330), float32] */;
  %479 = reshape(%478, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %480 = divide(%469, %470) /* ty=Tensor[(6, 9, 7), float64] */;
  %481 = %477.2;
  %482 = @func_3095(%479) /* ty=Tensor[(3, 10, 11), float32] */;
  %483 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%480, %481, %var_14206, %var_14207, meta[relay.Constant][23] /* ty=Tensor[(140), float64] */, %482, %var_14217, %483)
}

def @func_9032(%var_9024: Tensor[(40), float64], %var_9025: Tensor[(315), float64], %var_9028: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) {
  %484 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %485 = cast(%var_9024, dtype="float64") /* ty=Tensor[(40), float64] */;
  %486 = cast(%var_9025, dtype="float64") /* ty=Tensor[(315), float64] */;
  %487 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %488 = cast(meta[relay.Constant][25] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %489 = cast(%var_9028, dtype="float64") /* ty=Tensor[(144), float64] */;
  %490 = reshape(%485, newshape=[1, 10, 4]) /* ty=Tensor[(1, 10, 4), float64] */;
  %491 = reshape(%486, newshape=[105, 3]) /* ty=Tensor[(105, 3), float64] */;
  %492 = reshape(%487, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %493 = reshape(%488, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
  %494 = reshape(%489, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %495 = @func_2295(%490, %491, %492, %493, %494) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) */;
  %496 = @func_8662() /* ty=Tensor[(1, 10, 11), float32] */;
  %497 = %484.1;
  %498 = %495.3;
  (%496, %497, %498, %var_9024, %var_9025, meta[relay.Constant][24] /* ty=Tensor[(140), float64] */, meta[relay.Constant][25] /* ty=Tensor[(432), float32] */, %var_9028)
}

def @func_14476() -> Tensor[(1, 10, 11), float32] {
  %499 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %499.0
}

def @func_14560() -> Tensor[(1, 10, 11), float32] {
  @func_8662() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6715() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) {
  %500 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %501 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %502 = %501.0;
  %503 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
  %506 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%502, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %509 = %500.0;
  %510 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
  %511 = bitwise_or(%507, %508) /* ty=Tensor[(?, 10, 11), uint64] */;
  (%509, %510, %511)
}

def @func_12380(%var_12371: Tensor[(11, 10, 11), float32]) -> (Tensor[(11, 10, 11), int16],) {
  %512 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %513 = %512.0;
  %514 = cast(%513, dtype="int16") /* ty=Tensor[(1, 10, 11), int16] */;
  %515 = cast(%var_12371, dtype="int16") /* ty=Tensor[(11, 10, 11), int16] */;
  %516 = minimum(%514, %515) /* ty=Tensor[(11, 10, 11), int16] */;
  (%516,)
}

def @func_8136() -> Tensor[(1, 10, 11), float32] {
  %517 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %517.0
}

def @func_4475() -> Tensor[(1, 10, 11), float32] {
  %518 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %518.0
}

def @func_2805() -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) {
  %519 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 78), float64] */, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %520 = reshape(%519, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %521 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %522 = @func_589(%520) /* ty=Tensor[(13, 15, 4), float64] */;
  (%521, %522, meta[relay.Constant][26] /* ty=Tensor[(10, 78), float64] */)
}

def @func_3428(%var_3425: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) {
  %523 = cast(%var_3425, dtype="float64") /* ty=Tensor[(780), float64] */;
  %524 = reshape(%523, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %525 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %526 = @func_589(%524) /* ty=Tensor[(13, 15, 4), float64] */;
  (%525, %526, %var_3425)
}

def @func_12856() -> Tensor[(1, 10, 11), float32] {
  %527 = @func_12277() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %527.0
}

def @func_16341() -> (Tensor[(5, 10, 11), uint8],) {
  %528 = @func_10774() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) */;
  %529 = %528.1;
  (%529,)
}

def @func_4934(%var_4867: float64, %var_4868: Tensor[(15, 8, 6), float64], %var_4911: Tensor[(780), float64]) -> (Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) {
  %530 = cast(%var_4867, dtype="float64") /* ty=float64 */;
  %531 = cast(%var_4868, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
  %532 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %533 = cast(%var_4911, dtype="float64") /* ty=Tensor[(780), float64] */;
  %534 = reshape(%533, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %535 = @func_589(%534) /* ty=Tensor[(13, 15, 4), float64] */;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %537 = cosh(%536) /* ty=Tensor[(13, 15, 4), float32] */;
  %538 = cast(%537, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %539 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %540 = floor_divide(%530, %531) /* ty=Tensor[(15, 8, 6), float64] */;
  %541 = %532.0;
  %542 = asinh(%538) /* ty=Tensor[(13, 15, 4), float32] */;
  %543 = %539.0;
  (%540, %541, %var_4911, %542, %543)
}

def @func_13326(%var_13268: Tensor[(130, 6), float64], %var_13269: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(144), float64], Tensor[(130, 6), float64], Tensor[(140), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %545 = cast(%var_13268, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %546 = cast(%var_13269, dtype="float64") /* ty=Tensor[(140), float64] */;
  %547 = reshape(%544, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %548 = reshape(%545, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %549 = reshape(%546, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %550 = @func_2479(%547, %548, %549) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %551 = cast(%var_13268, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %552 = reshape(%551, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %553 = @func_11309(%552) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %554 = %553.2;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(780), float64] */;
  %556 = reshape(%555, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %557 = @func_8115(%556) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %558 = @func_13093() /* ty=Tensor[(1, 10, 11), float32] */;
  %559 = %550.5;
  %560 = %557.1;
  (%558, %559, meta[relay.Constant][27] /* ty=Tensor[(144), float64] */, %var_13268, %var_13269, %554, %560)
}

def @func_13081(%var_13075: Tensor[(9, 3, 6), int8]) -> (Tensor[(9, 3, 6), bool],) {
  %561 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 3, 6), int8] */, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %562 = shape_of(%var_13075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%var_13075, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %565 = greater(%563, %564) /* ty=Tensor[(9, 3, 6), bool] */;
  (%565,)
}

def @func_15795(%var_15780: Tensor[(140), float64], %var_15781: Tensor[(1430, 1), float32], %var_15782: Tensor[(315), bool]) -> (Tensor[(10, 78), float64], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1760), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %566 = cast(meta[relay.Constant][29] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %567 = reshape(%566, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), float32] */;
  %568 = @func_12313(%567) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) */;
  %569 = cast(%var_15780, dtype="float64") /* ty=Tensor[(140), float64] */;
  %570 = cast(%var_15781, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %571 = cast(%var_15782, dtype="bool") /* ty=Tensor[(315), bool] */;
  %572 = cast(%var_15781, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %573 = reshape(%569, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %574 = reshape(%570, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %575 = reshape(%571, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %576 = reshape(%572, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %577 = @func_2653(%573, %574, %575, %576) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %578 = @func_14113() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %579 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %580 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  %581 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %582 = %568.1;
  %583 = %577.1;
  %584 = %578.0;
  %585 = %579.0;
  (%580, %581, %582, meta[relay.Constant][29] /* ty=Tensor[(1760), float32] */, %583, %var_15780, %var_15781, %var_15782, %584, %585)
}

def @func_1222(%var_1205: Tensor[(780), float64]) -> (Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) {
  %586 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %587 = cast(%var_1205, dtype="float64") /* ty=Tensor[(780), float64] */;
  %588 = reshape(%587, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %589 = cast(%var_1205, dtype="float64") /* ty=Tensor[(780), float64] */;
  %590 = reshape(%589, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %591 = acosh(%586) /* ty=Tensor[(16, 10, 10), float32] */;
  %592 = @func_589(%588) /* ty=Tensor[(13, 15, 4), float64] */;
  %593 = @func_589(%590) /* ty=Tensor[(13, 15, 4), float64] */;
  (%591, %592, %var_1205, %593)
}

def @func_4275() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %594 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %595 = %594.0;
  %596 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  (%595, %596)
}

def @func_12547() -> (Tensor[(1, 10, 11), float32],) {
  %597 = @func_10113() /* ty=Tensor[(1, 10, 11), float32] */;
  (%597,)
}

def @func_13997(%var_13889: Tensor[(780), float64], %var_13890: Tensor[(140), float64], %var_13930: Tensor[(630), float32]) -> (Tensor[(780), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(12, 12, 13), bool], Tensor[(9, 5, 14), float64], Tensor[(630), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(1, 315), float64], Tensor[(144), float64], Tensor[(9, 10, 11), int32]) {
  %598 = cast(%var_13889, dtype="float64") /* ty=Tensor[(780), float64] */;
  %599 = cast(%var_13890, dtype="float64") /* ty=Tensor[(140), float64] */;
  %600 = reshape(%598, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %601 = reshape(%599, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %602 = @func_12179(%600, %601) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) */;
  %603 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %604 = cast(%var_13930, dtype="float32") /* ty=Tensor[(630), float32] */;
  %605 = cast(%var_13930, dtype="float32") /* ty=Tensor[(630), float32] */;
  %606 = reshape(%604, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float32] */;
  %607 = reshape(%605, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float32] */;
  %608 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %609 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %610 = cast(meta[relay.Constant][31] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %611 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 315), float64] */, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
  %612 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %613 = reshape(%610, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %614 = reshape(%611, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %615 = reshape(%612, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %616 = @func_9032(%613, %614, %615) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
  %617 = @func_10113() /* ty=Tensor[(1, 10, 11), float32] */;
  %618 = cast(%617, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
  %619 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 10, 11), float32] */, dtype="int32") /* ty=Tensor[(9, 10, 11), int32] */;
  %620 = %602.4;
  %621 = %603.0;
  %622 = @func_9453(%606, %607) /* ty=Tensor[(9, 5, 14), float64] */;
  %623 = %608.0;
  %624 = %609.0;
  %625 = %616.1;
  %626 = logical_xor(%618, %619) /* ty=Tensor[(9, 10, 11), int32] */;
  (%620, %var_13889, %var_13890, %621, %622, %var_13930, %623, %624, %625, meta[relay.Constant][31] /* ty=Tensor[(40), float64] */, meta[relay.Constant][32] /* ty=Tensor[(1, 315), float64] */, meta[relay.Constant][33] /* ty=Tensor[(144), float64] */, %626)
}

def @func_7914() -> (Tensor[(1, 10, 11), float32],) {
  %627 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %628 = %627.0;
  (%628,)
}

def @func_14974() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %629 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %630 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %631 = %629.0;
  %632 = @func_9920() /* ty=Tensor[(1, 10, 11), float32] */;
  %633 = %630.0;
  (%631, %632, %633)
}

def @func_3152() -> Tensor[(10, 78), float64] {
  %634 = @func_2805() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) */;
  %634.2
}

def @func_6115() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) {
  %635 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %636 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %638 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%635, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %642 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
  %643 = logical_or(%639, %640) /* ty=Tensor[(?, 10, 11), bool] */;
  (%641, %642, %643)
}

def @func_9768() -> (Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) {
  %644 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
  %645 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %646 = %645.0;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %648 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%644, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %651 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 780), float64] */, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
  %652 = cast(meta[relay.Constant][36] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %653 = reshape(%651, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %654 = reshape(%652, newshape=[20, 4]) /* ty=Tensor[(20, 4), bool] */;
  %655 = @func_7666(%653, %654) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) */;
  %656 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %657 = floor_mod(%649, %650) /* ty=Tensor[(?, 10, 11), float64] */;
  %658 = %655.3;
  %659 = %656.2;
  (%657, %658, meta[relay.Constant][35] /* ty=Tensor[(1, 780), float64] */, meta[relay.Constant][36] /* ty=Tensor[(20, 4), bool] */, %659)
}

def @func_13093() -> Tensor[(1, 10, 11), float32] {
  %660 = @func_7817() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %660.0
}

def @func_14157() -> (Tensor[(1, 10, 11), float32],) {
  %661 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %662 = %661.0;
  (%662,)
}

def @func_10172(%var_10150: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %663 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %664 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %665 = %664.2;
  %666 = cast(%var_10150, dtype="float64") /* ty=Tensor[(780), float64] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(1), int32] */;
  %668 = cast(%665, dtype="float64") /* ty=Tensor[(780), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?), float64] */;
  %670 = cast(%665, dtype="float64") /* ty=Tensor[(780), float64] */;
  %671 = reshape(%670, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %672 = @func_4788(%671) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) */;
  %673 = %663.0;
  %674 = divide(%668, %669) /* ty=Tensor[(780), float64] */;
  %675 = %672.0;
  (%673, %674, %675)
}

def @func_11771(%var_11752: Tensor[(144), float64], %var_11753: Tensor[(780), float64], %var_11764: Tensor[(720), uint32]) -> (Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 28), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(15, 12, 4), uint32], Tensor[(720), uint32]) {
  %676 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
  %677 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %678 = cast(%var_11752, dtype="float64") /* ty=Tensor[(144), float64] */;
  %679 = cast(%var_11753, dtype="float64") /* ty=Tensor[(780), float64] */;
  %680 = %676.1;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(140), float64] */;
  %682 = reshape(%678, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %683 = reshape(%679, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %684 = reshape(%681, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %685 = @func_2479(%682, %683, %684) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %686 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %687 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %688 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %689 = reshape(%687, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), uint32] */;
  %690 = reshape(%688, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), uint32] */;
  %691 = @func_10849(%689, %690) /* ty=(Tensor[(15, 12, 4), uint32],) */;
  %692 = %677.0;
  %693 = %685.6;
  %694 = %686.0;
  %695 = %691.0;
  (%680, %692, %693, %var_11752, %var_11753, %694, %695, %var_11764)
}

def @func_2835() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6501(%var_6474: Tensor[(330), float32]) -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) {
  %696 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
  %697 = cast(%var_6474, dtype="float32") /* ty=Tensor[(330), float32] */;
  %698 = reshape(%697, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %699 = @func_6077(%698) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) */;
  %700 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %701 = %696.0;
  %702 = %699.0;
  %703 = %700.3;
  (%701, %702, %var_6474, %703)
}

def @func_6015() -> (Tensor[(1, 10, 11), float32],) {
  %704 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
  (%704,)
}

def @func_3933() -> Tensor[(1, 10, 11), float32] {
  @func_3584() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_14421() -> Tensor[(6, 10, 11), float64] {
  %705 = @func_6390() /* ty=(Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) */;
  %705.1
}

def @func_4641() -> (Tensor[(1, 10, 11), float32],) {
  %706 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %707 = %706.0;
  (%707,)
}

def @func_13432() -> (Tensor[(10, 78), float64],) {
  %708 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  (%708,)
}

def @func_3064() -> (Tensor[(1, 10, 11), float32],) {
  %709 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  (%709,)
}

def @func_8727() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) {
  %710 = cast(meta[relay.Constant][37] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %711 = reshape(%710, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %712 = @func_2368(%711) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %713 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %714 = %713.2;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %716 = cosh(%715) /* ty=Tensor[(10, 78), float64] */;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %718 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %719 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %720 = %712.0;
  %721 = sigmoid(%717) /* ty=Tensor[(10, 78), float32] */;
  %722 = %718.0;
  (%719, %720, meta[relay.Constant][37] /* ty=Tensor[(140), float64] */, %721, %722)
}

def @func_10268() -> Tensor[(1, 10, 11), float32] {
  @func_4080() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_3095(%var_3090: Tensor[(3, 10, 11), float32]) -> Tensor[(3, 10, 11), float32] {
  %723 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %725 = cast(%var_3090, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  floor_divide(%724, %725) /* ty=Tensor[(3, 10, 11), float32] */
}

def @func_7779(%var_7766: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
  %726 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %727 = %726.0;
  %728 = cast(%727, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
  %729 = cast(%var_7766, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
  %730 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %731 = bitwise_xor(%728, %729) /* ty=Tensor[(16, 10, 11), uint8] */;
  %732 = %730.0;
  (%731, %732)
}

def @func_3086() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) {
  %733 = @func_2805() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) */;
  %734 = cast(meta[relay.Constant][38] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %735 = reshape(%734, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %736 = %733.0;
  %737 = @func_2707(%735) /* ty=Tensor[(5, 10, 11), uint8] */;
  (%736, %737, meta[relay.Constant][38] /* ty=Tensor[(550), float32] */)
}

def @func_10413(%var_10402: float64, %var_10403: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) {
  %738 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %739 = cast(%var_10402, dtype="float64") /* ty=float64 */;
  %740 = cast(%var_10403, dtype="float64") /* ty=Tensor[(720), float64] */;
  %741 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 156), float64] */, dtype="float64") /* ty=Tensor[(5, 156), float64] */;
  %742 = reshape(%739, newshape=[]) /* ty=float64 */;
  %743 = reshape(%740, newshape=[15, 8, 6]) /* ty=Tensor[(15, 8, 6), float64] */;
  %744 = reshape(%741, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %745 = @func_4934(%742, %743, %744) /* ty=(Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) */;
  %746 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %747 = cast(%var_10402, dtype="bool") /* ty=bool */;
  %748 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 156), float64] */, dtype="bool") /* ty=Tensor[(5, 156), bool] */;
  %749 = %738.0;
  %750 = %745.1;
  %751 = %746.0;
  %752 = greater_equal(%747, %748) /* ty=Tensor[(5, 156), bool] */;
  (%749, %750, %var_10403, %751, %752)
}

def @func_15981() -> (Tensor[(140), float64],) {
  %753 = @func_15037() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) */;
  %754 = %753.2;
  (%754,)
}

def @func_16077() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(2, 5, 7), float32], Tensor[(70), float32], Tensor[(1, 10, 11), float32]) {
  %755 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %756 = reshape(%755, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %757 = @func_9285(%756) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) */;
  %758 = cast(meta[relay.Constant][41] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %759 = reshape(%758, newshape=[2, 5, 7]) /* ty=Tensor[(2, 5, 7), float32] */;
  %760 = @func_8371(%759) /* ty=(Tensor[(2, 5, 7), float32],) */;
  %761 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %762 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  %763 = %757.0;
  %764 = %760.0;
  %765 = %761.0;
  (%762, %763, meta[relay.Constant][40] /* ty=Tensor[(40), float64] */, %764, meta[relay.Constant][41] /* ty=Tensor[(70), float32] */, %765)
}

def @func_11635() -> (Tensor[(144), float64],) {
  %766 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %767 = %766.3;
  (%767,)
}

def @func_13514() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %768 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %769 = @func_6245() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %770 = %768.2;
  %771 = %769.1;
  (%770, %771)
}

def @func_3268() -> (Tensor[(1, 10, 11), float32],) {
  %772 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_9920() -> Tensor[(1, 10, 11), float32] {
  %774 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %774.0
}

def @func_8042() -> (Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) {
  %775 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %776 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %777 = %776.0;
  %778 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %779 = %778.2;
  %780 = cast(%779, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %781 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%777, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = %775.2;
  %785 = greater(%782, %783) /* ty=Tensor[(?, 10, 11), bool] */;
  (%784, %785)
}

def @func_2168() -> Tensor[(1, 10, 11), float32] {
  %786 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  acos(%786) /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9172(%var_9162: Tensor[(12, 18), uint8]) -> (Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) {
  %787 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
  %788 = cast(%var_9162, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %789 = cast(%var_9162, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %790 = reshape(%788, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %791 = reshape(%789, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %792 = @func_4333(%790, %791) /* ty=(Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) */;
  %793 = cast(%var_9162, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %794 = %787.2;
  %795 = %792.2;
  %796 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  %797 = sin(%793) /* ty=Tensor[(12, 18), float64] */;
  (%794, %795, %796, %797)
}

def @func_12909(%var_12877: Tensor[(11, 130), float32], %var_12878: Tensor[(105, 3), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) {
  %798 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %799 = cast(%var_12877, dtype="float32") /* ty=Tensor[(11, 130), float32] */;
  %800 = cast(%var_12878, dtype="bool") /* ty=Tensor[(105, 3), bool] */;
  %801 = reshape(%799, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %802 = reshape(%800, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %803 = @func_7044(%801, %802) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) */;
  %804 = %798.2;
  %805 = %803.4;
  (%804, %805, %var_12877, %var_12878)
}

def @func_14941() -> (Tensor[(1, 10, 11), float32],) {
  %806 = @func_9799() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %807 = %806.0;
  (%807,)
}

def @func_106(%var_78: Tensor[(5, 2, 14), float64]) -> (Tensor[(5, 2, 14), float64],) {
  %808 = cast(%var_78, dtype="float64") /* ty=Tensor[(5, 2, 14), float64] */;
  %809 = atan(%808) /* ty=Tensor[(5, 2, 14), float64] */;
  (%809,)
}

def @func_7156(%var_7148: Tensor[(7, 10, 11), float32]) -> (Tensor[(7, 10, 11), float64],) {
  %810 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %811 = cast(%810, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %812 = cast(%var_7148, dtype="float64") /* ty=Tensor[(7, 10, 11), float64] */;
  %813 = floor_mod(%811, %812) /* ty=Tensor[(7, 10, 11), float64] */;
  (%813,)
}

def @func_2368(%var_2360: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
  %814 = cast(%var_2360, dtype="float64") /* ty=Tensor[(140), float64] */;
  %815 = reshape(%814, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %816 = @func_106(%815) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %817 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %818 = %816.0;
  (%817, %818, %var_2360)
}

def @func_9285(%var_9278: Tensor[(40), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) {
  %819 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %820 = cast(%var_9278, dtype="float64") /* ty=Tensor[(40), float64] */;
  %821 = cast(meta[relay.Constant][43] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %822 = cast(meta[relay.Constant][44] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %823 = reshape(%820, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %824 = reshape(%821, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %825 = reshape(%822, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %826 = @func_9032(%823, %824, %825) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
  %827 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %828 = %819.0;
  %829 = %826.7;
  (%827, %828, %829, %var_9278, meta[relay.Constant][43] /* ty=Tensor[(315), float64] */, meta[relay.Constant][44] /* ty=Tensor[(144), float64] */)
}

def @func_613(%var_609: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
  %830 = cast(%var_609, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %831 = log(%830) /* ty=Tensor[(16, 3, 3), float64] */;
  (%831,)
}

def @func_6431(%var_6421: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) {
  %832 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
  %833 = cast(%var_6421, dtype="bool") /* ty=Tensor[(80), bool] */;
  %834 = cast(meta[relay.Constant][45] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %835 = cast(meta[relay.Constant][45] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %836 = reshape(%833, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %837 = reshape(%834, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %838 = reshape(%835, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %839 = @func_1285(%836, %837, %838) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %840 = %832.1;
  %841 = %839.0;
  %842 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  (%840, %841, %var_6421, meta[relay.Constant][45] /* ty=Tensor[(1200), bool] */, %842)
}

def @func_3584() -> Tensor[(1, 10, 11), float32] {
  @func_2758() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_15269(%var_15238: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %843 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %844 = cast(%var_15238, dtype="float64") /* ty=Tensor[(780), float64] */;
  %845 = reshape(%844, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %846 = @func_11309(%845) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %847 = %843.0;
  %848 = %846.0;
  (%847, %848, %var_15238)
}

def @func_4293() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %849 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %850 = %849.0;
  %851 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  (%850, %851)
}

def @func_1285(%var_1243: Tensor[(8, 10, 1), bool], %var_1244: Tensor[(8, 10, 15), bool], %var_1278: Tensor[(8, 10, 15), bool]) -> (Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) {
  %852 = cast(%var_1243, dtype="bool") /* ty=Tensor[(8, 10, 1), bool] */;
  %853 = cast(%var_1244, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %854 = logical_and(%852, %853) /* ty=Tensor[(8, 10, 15), bool] */;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
  %856 = cast(%var_1278, dtype="uint16") /* ty=Tensor[(8, 10, 15), uint16] */;
  %857 = shape_of(%var_1244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_1244, dtype="uint16") /* ty=Tensor[(8, 10, 15), uint16] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %860 = acos(%855) /* ty=Tensor[(8, 10, 15), float64] */;
  %861 = bitwise_and(%858, %859) /* ty=Tensor[(8, 10, 15), uint16] */;
  (%860, %861)
}

def @func_14835(%var_14809: Tensor[(108, 2), uint8]) -> (Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64], Tensor[(108, 2), uint8]) {
  %862 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %863 = cast(%var_14809, dtype="uint8") /* ty=Tensor[(108, 2), uint8] */;
  %864 = reshape(%863, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
  %865 = @func_9172(%864) /* ty=(Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) */;
  %866 = %862.0;
  %867 = %865.3;
  (%866, %867, %var_14809)
}

def @func_16828() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 144), float64], Tensor[(1, 10, 11), float32], Tensor[(540), int32], Tensor[(16, 3, 3), float32]) {
  %868 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
  %869 = cast(meta[relay.Constant][47] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %870 = reshape(%869, newshape=[540]) /* ty=Tensor[(540), int32] */;
  %871 = @func_8285(%870) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) */;
  %872 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 144), float64] */, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %873 = reshape(%872, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %874 = @func_613(%873) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %877 = asin(%876) /* ty=Tensor[(16, 3, 3), float64] */;
  %878 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 3, 3), float64] */, dtype="int64") /* ty=Tensor[(16, 3, 3), int64] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="int64") /* ty=Tensor[(16, 3, 3), int64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %882 = left_shift(%880, %881) /* ty=Tensor[(16, 3, 3), int64] */;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(16, 3, 3), float32] */;
  %884 = %868.0;
  %885 = %871.0;
  %886 = cosh(%883) /* ty=Tensor[(16, 3, 3), float32] */;
  (%884, meta[relay.Constant][46] /* ty=Tensor[(1, 144), float64] */, %885, meta[relay.Constant][47] /* ty=Tensor[(540), int32] */, %886)
}

def @func_5751() -> (Tensor[(12, 12, 13), bool],) {
  %887 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %888 = %887.0;
  (%888,)
}

def @func_6611() -> (Tensor[(1, 10, 11), float32],) {
  %889 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
  (%889,)
}

def @func_13729() -> Tensor[(5, 10, 11), uint8] {
  %890 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %890.1
}

def @func_4333(%var_4308: Tensor[(3, 9, 8), uint8], %var_4309: Tensor[(3, 9, 8), uint8]) -> (Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) {
  %891 = cast(%var_4309, dtype="uint8") /* ty=Tensor[(3, 9, 8), uint8] */;
  %892 = shape_of(%var_4308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%var_4308, dtype="uint8") /* ty=Tensor[(3, 9, 8), uint8] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %895 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
  %896 = cast(%var_4308, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %897 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %898 = bitwise_or(%893, %894) /* ty=Tensor[(3, 9, 8), uint8] */;
  %899 = %895.1;
  %900 = acosh(%896) /* ty=Tensor[(3, 9, 8), float64] */;
  %901 = %897.0;
  (%898, %899, %900, %901)
}

def @func_4982() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) {
  %902 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %903 = cast(meta[relay.Constant][49] /* ty=Tensor[(108, 4), float32] */, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
  %904 = cast(meta[relay.Constant][50] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %905 = reshape(%903, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %906 = reshape(%904, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %907 = @func_1364(%905, %906) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
  %908 = %902.0;
  %909 = %907.1;
  (%908, %909, meta[relay.Constant][49] /* ty=Tensor[(108, 4), float32] */, meta[relay.Constant][50] /* ty=Tensor[(144), float64] */)
}

def @func_7817() -> (Tensor[(1, 10, 11), float32],) {
  %910 = @func_7457() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) */;
  %911 = %910.1;
  (%911,)
}

def @func_9666(%var_9654: Tensor[(1200), bool], %var_9661: Tensor[(55, 6), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) {
  %912 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %913 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %914 = cast(meta[relay.Constant][51] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %915 = cast(%var_9654, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %916 = cast(%var_9654, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %917 = reshape(%914, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %918 = reshape(%915, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %919 = reshape(%916, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %920 = @func_1285(%917, %918, %919) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %921 = %920.1;
  %922 = cast(%921, dtype="float32") /* ty=Tensor[(8, 10, 15), float32] */;
  %923 = cast(%var_9661, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %924 = reshape(%923, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %925 = @func_6077(%924) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) */;
  %926 = %912.0;
  %927 = %913.2;
  %928 = log2(%922) /* ty=Tensor[(8, 10, 15), float32] */;
  %929 = %925.1;
  (%926, %927, meta[relay.Constant][51] /* ty=Tensor[(20, 4), bool] */, %var_9654, %928, %929, %var_9661)
}

def @func_2220() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_10442(%var_10429: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint64], Tensor[(1, 10, 11), float32]) {
  %930 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %931 = cast(%930, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
  %932 = cast(%var_10429, dtype="uint64") /* ty=Tensor[(16, 10, 11), uint64] */;
  %933 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %934 = bitwise_and(%931, %932) /* ty=Tensor[(16, 10, 11), uint64] */;
  %935 = %933.0;
  (%934, %935)
}

def @func_12731() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %936 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  %937 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  (%936, %937)
}

def @func_4824() -> (Tensor[(1, 10, 11), float32],) {
  %938 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%938,)
}

def @func_13481(%var_13478: Tensor[(60, 12), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], float64, Tensor[(60, 12), float64]) {
  %939 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %940 = cast(-1.60424f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %941 = cast(%var_13478, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %942 = reshape(%940, newshape=[]) /* ty=float64 */;
  %943 = reshape(%941, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %944 = @func_10413(%942, %943) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) */;
  %945 = %939.0;
  %946 = %944.1;
  (%945, %946, -1.60424f64 /* ty=float64 */, %var_13478)
}

def @func_9839() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) {
  %947 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %948 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
  %949 = cast(meta[relay.Constant][52] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %950 = reshape(%949, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float32] */;
  %951 = %947.0;
  %952 = %948.1;
  %953 = @func_7401(%950) /* ty=Tensor[(12, 16, 16), float32] */;
  (%951, %952, %953, meta[relay.Constant][52] /* ty=Tensor[(3072), float32] */)
}

def @func_17002() -> Tensor[(1, 10, 11), float32] {
  %954 = @func_15436() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) */;
  %954.0
}

def @func_5517() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  %955 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %956 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(12, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %959 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %960 = less_equal(%957, %958) /* ty=Tensor[(12, 12, 13), bool] */;
  %961 = %959.0;
  (%960, %961)
}

def @func_3161() -> (Tensor[(1, 10, 11), float32],) {
  %962 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  (%962,)
}

def @func_15037() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) {
  %963 = cast(meta[relay.Constant][55] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %964 = cast(meta[relay.Constant][56] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %965 = cast(meta[relay.Constant][57] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %966 = reshape(%963, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %967 = reshape(%964, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %968 = reshape(%965, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %969 = @func_7265(%966, %967, %968) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
  %970 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %972 = cast(meta[relay.Constant][55] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %973 = reshape(%971, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %974 = reshape(%972, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %975 = @func_12179(%973, %974) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) */;
  %976 = cast(meta[relay.Constant][58] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %977 = reshape(%976, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %978 = @func_13163(%977) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) */;
  %979 = %969.7;
  %980 = %975.4;
  %981 = %978.0;
  (%970, %979, meta[relay.Constant][55] /* ty=Tensor[(140), float64] */, meta[relay.Constant][56] /* ty=Tensor[(432), float32] */, meta[relay.Constant][57] /* ty=Tensor[(144), float64] */, %980, %981, meta[relay.Constant][58] /* ty=Tensor[(715), float64] */)
}

def @func_7138(%var_7115: Tensor[(780), float64], %var_7116: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(390, 2), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1, 10, 11), float32]) {
  %982 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %983 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %984 = cast(%var_7115, dtype="float64") /* ty=Tensor[(780), float64] */;
  %985 = cast(%var_7116, dtype="float64") /* ty=Tensor[(140), float64] */;
  %986 = reshape(%983, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %987 = reshape(%984, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %988 = reshape(%985, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %989 = @func_2479(%986, %987, %988) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %990 = cast(meta[relay.Constant][60] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %991 = reshape(%990, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %992 = @func_6431(%991) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %993 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %994 = %982.0;
  %995 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %996 = %989.4;
  %997 = %992.0;
  %998 = %993.0;
  (%994, %995, %996, meta[relay.Constant][59] /* ty=Tensor[(144), float64] */, %var_7115, %var_7116, %997, meta[relay.Constant][60] /* ty=Tensor[(20, 4), bool] */, %998)
}

def @func_5157() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %999 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1000 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1001 = %999.0;
  %1002 = %1000.0;
  (%1001, %1002)
}

def @func_8600() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1003 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1004 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1005 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1006 = %1003.0;
  %1007 = %1004.0;
  %1008 = %1005.0;
  (%1006, %1007, %1008)
}

def @func_10092(%var_10086: Tensor[(14, 4, 12), uint64], %var_10087: Tensor[(14, 4, 12), uint64]) -> (Tensor[(14, 4, 12), uint64],) {
  %1009 = cast(%var_10087, dtype="uint64") /* ty=Tensor[(14, 4, 12), uint64] */;
  %1010 = shape_of(%var_10086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_10086, dtype="uint64") /* ty=Tensor[(14, 4, 12), uint64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1013 = bitwise_and(%1011, %1012) /* ty=Tensor[(14, 4, 12), uint64] */;
  (%1013,)
}

def @func_12645() -> (Tensor[(7, 11, 11), bool],) {
  %1014 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 11), bool] */;
  %1015 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(7, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 11), bool] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1018 = logical_and(%1016, %1017) /* ty=Tensor[(7, 11, 11), bool] */;
  (%1018,)
}

def @func_6077(%var_6056: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) {
  %1019 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1020 = cast(%var_6056, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1021 = reshape(%1020, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1022 = @func_4522(%1021) /* ty=(Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */;
  %1023 = %1019.0;
  %1024 = %1022.2;
  (%1023, %1024, %var_6056)
}

def @func_7265(%var_7208: Tensor[(140), float64], %var_7253: Tensor[(432), float32], %var_7254: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) {
  %1025 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1026 = cast(%var_7208, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1027 = cast(meta[relay.Constant][63] /* ty=Tensor[(143, 10), float32] */, dtype="float32") /* ty=Tensor[(143, 10), float32] */;
  %1028 = cast(meta[relay.Constant][64] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1029 = cast(meta[relay.Constant][63] /* ty=Tensor[(143, 10), float32] */, dtype="float32") /* ty=Tensor[(143, 10), float32] */;
  %1030 = reshape(%1026, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1031 = reshape(%1027, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1032 = reshape(%1028, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %1033 = reshape(%1029, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1034 = @func_2653(%1030, %1031, %1032, %1033) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %1035 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
  %1036 = %1035.3;
  %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(5, 10, 11), float64] */;
  %1038 = %1034.4;
  %1039 = cast(%1038, dtype="float32") /* ty=Tensor[(13, 10, 11), float32] */;
  %1040 = cast(meta[relay.Constant][64] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1041 = reshape(%1039, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %1042 = reshape(%1040, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %1043 = @func_3304(%1041, %1042) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %1044 = cast(%var_7253, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1045 = cast(%var_7254, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1046 = reshape(%1044, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %1047 = reshape(%1045, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1048 = @func_1364(%1046, %1047) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
  %1049 = %1025.0;
  %1050 = atanh(%1037) /* ty=Tensor[(5, 10, 11), float64] */;
  %1051 = %1043.3;
  %1052 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %1053 = %1048.2;
  (%1049, %1038, %var_7208, meta[relay.Constant][63] /* ty=Tensor[(143, 10), float32] */, meta[relay.Constant][64] /* ty=Tensor[(315), bool] */, %1050, %1051, %1052, %1053, %var_7253, %var_7254)
}

def @func_2707(%var_2702: Tensor[(5, 10, 11), float32]) -> Tensor[(5, 10, 11), uint8] {
  %1054 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1055 = cast(%1054, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
  %1056 = cast(%var_2702, dtype="uint8") /* ty=Tensor[(5, 10, 11), uint8] */;
  bitwise_xor(%1055, %1056) /* ty=Tensor[(5, 10, 11), uint8] */
}

def @func_4005(%var_3972: Tensor[(330), float32], %var_3990: Tensor[(780, 1), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(780), float64], Tensor[(780, 1), float64], Tensor[(?, 10, 11), bool], Tensor[(1, 660), float32], Tensor[(10, 78), float64]) {
  %1057 = cast(%var_3972, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1058 = reshape(%1057, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %1059 = cast(%var_3990, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %1060 = reshape(%1059, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1061 = @func_3428(%1060) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) */;
  %1062 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %1063 = cast(%1062, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1064 = cast(%var_3990, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %1065 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 660), float32] */, dtype="float32") /* ty=Tensor[(1, 660), float32] */;
  %1066 = reshape(%1063, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %1067 = reshape(%1064, newshape=[130, 6]) /* ty=Tensor[(130, 6), float64] */;
  %1068 = reshape(%1065, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float32] */;
  %1069 = @func_3349(%1066, %1067, %1068) /* ty=(Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) */;
  %1070 = @func_3095(%1058) /* ty=Tensor[(3, 10, 11), float32] */;
  %1071 = %1061.2;
  %1072 = %1069.3;
  %1073 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  (%1062, %1070, %var_3972, %1071, %var_3990, %1072, meta[relay.Constant][65] /* ty=Tensor[(1, 660), float32] */, %1073)
}

def @func_9453(%var_9441: Tensor[(9, 5, 14), float32], %var_9442: Tensor[(9, 5, 14), float32]) -> Tensor[(9, 5, 14), float64] {
  %1074 = cast(%var_9442, dtype="float32") /* ty=Tensor[(9, 5, 14), float32] */;
  %1075 = shape_of(%var_9441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%var_9441, dtype="float32") /* ty=Tensor[(9, 5, 14), float32] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1078 = subtract(%1076, %1077) /* ty=Tensor[(9, 5, 14), float32] */;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  rsqrt(%1079) /* ty=Tensor[(9, 5, 14), float64] */
}

def @func_4080() -> Tensor[(1, 10, 11), float32] {
  @func_3933() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_3711() -> Tensor[(1, 10, 11), float32] {
  %1080 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1080.0
}

def @func_8984() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1081 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1082 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1083 = %1081.0;
  %1084 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
  %1085 = %1082.0;
  (%1083, %1084, %1085)
}

def @func_4536() -> Tensor[(1, 10, 11), float32] {
  @func_4144() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_2758() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_12929() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1086 = @func_11430() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1087 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1088 = %1086.0;
  %1089 = %1087.0;
  (%1088, %1089)
}

def @func_13163(%var_13152: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) {
  %1090 = cast(%var_13152, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %1091 = atan(%1090) /* ty=Tensor[(11, 5, 13), float64] */;
  %1092 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1091, %1092)
}

def @func_9086() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
  %1093 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1094 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1095 = reshape(%1094, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1096 = @func_613(%1095) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1097 = %1093.0;
  %1098 = %1096.0;
  (%1097, %1098, meta[relay.Constant][66] /* ty=Tensor[(144), float64] */)
}

def @func_2340(%var_2330: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
  %1099 = cast(%var_2330, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1100 = cast(meta[relay.Constant][67] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1101 = cast(meta[relay.Constant][67] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1102 = reshape(%1099, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %1103 = reshape(%1100, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1104 = reshape(%1101, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1105 = @func_1285(%1102, %1103, %1104) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %1106 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %1107 = %1105.1;
  (%1106, %1107, %var_2330, meta[relay.Constant][67] /* ty=Tensor[(1200), bool] */)
}

def @func_1364(%var_1321: Tensor[(3, 12, 12), float32], %var_1338: Tensor[(144), float64]) -> (Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
  %1108 = cast(%var_1321, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %1109 = cast(%var_1338, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1110 = reshape(%1109, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1111 = @func_613(%1110) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1112 = asinh(%1108) /* ty=Tensor[(3, 12, 12), float32] */;
  %1113 = %1111.0;
  (%1112, %1113, %var_1338)
}

def @func_8371(%var_8367: Tensor[(2, 5, 7), float32]) -> (Tensor[(2, 5, 7), float32],) {
  %1114 = cast(%var_8367, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %1115 = log(%1114) /* ty=Tensor[(2, 5, 7), float32] */;
  (%1115,)
}

def @func_10807() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1116 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1117 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
  %1118 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1119 = %1116.0;
  %1120 = %1117.0;
  %1121 = %1118.0;
  (%1119, %1120, %1121)
}

def @func_2479(%var_2460: Tensor[(144), float64], %var_2473: Tensor[(390, 2), float64], %var_2477: Tensor[(5, 28), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) {
  %1122 = cast(%var_2460, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1123 = reshape(%1122, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1124 = @func_613(%1123) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1125 = cast(%var_2473, dtype="float64") /* ty=Tensor[(390, 2), float64] */;
  %1126 = reshape(%1125, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %1127 = cast(%var_2477, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %1128 = reshape(%1127, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %1129 = @func_106(%1128) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %1130 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1131 = %1124.0;
  %1132 = @func_589(%1126) /* ty=Tensor[(13, 15, 4), float64] */;
  %1133 = %1129.0;
  (%1130, %1131, %var_2460, %1132, %var_2473, %1133, %var_2477)
}

def @func_15682(%var_15661: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(1, 10, 11), float32]) {
  %1134 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %1135 = shape_of(%var_15661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%var_15661, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1138 = cast(%var_15661, dtype="float64") /* ty=Tensor[(6, 15, 9), float64] */;
  %1139 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %1140 = floor_mod(%1136, %1137) /* ty=Tensor[(6, 15, 9), float32] */;
  %1141 = sqrt(%1138) /* ty=Tensor[(6, 15, 9), float64] */;
  %1142 = %1139.0;
  (%1140, %1141, %1142)
}

def @func_16165() -> (Tensor[(1, 10, 11), float32],) {
  %1143 = @func_6030() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_13717() -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %1145 = @func_6030() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) */;
  %1146 = %1145.1;
  %1147 = @func_6817() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1146, %1147)
}

def @func_15733() -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
  %1148 = @func_15315() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
  %1149 = @func_14314() /* ty=(Tensor[(10, 78), float64],) */;
  %1150 = %1148.1;
  %1151 = %1149.0;
  (%1150, %1151)
}

def @func_2653(%var_2559: Tensor[(140), float64], %var_2565: Tensor[(13, 10, 11), float32], %var_2640: Tensor[(35, 9), bool], %var_2649: Tensor[(13, 10, 11), float32]) -> (Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) {
  %1152 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1153 = cast(%1152, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %1154 = cast(%var_2565, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1155 = cast(%var_2559, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1156 = reshape(%1155, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %1157 = @func_106(%1156) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %1158 = cast(meta[relay.Constant][69] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %1159 = cast(%var_2559, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1160 = reshape(%1158, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float64] */;
  %1161 = reshape(%1159, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1162 = @func_210(%1160, %1161) /* ty=(Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %1163 = %1162.0;
  %1164 = cast(%1163, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %1165 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(35, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1166 = cast(meta[relay.Constant][69] /* ty=Tensor[(35, 9), float64] */, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1167 = dyn.reshape(%1164, %1165, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1168 = greater(%1166, %1167) /* ty=Tensor[(35, 9), bool] */;
  %1169 = cast(%var_2640, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1171 = cast(%1168, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1173 = cast(%var_2649, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1174 = shape_of(%var_2565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%var_2565, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1177 = not_equal(%1153, %1154) /* ty=Tensor[(13, 10, 11), bool] */;
  %1178 = %1157.0;
  %1179 = less(%1171, %1172) /* ty=Tensor[(35, 9), bool] */;
  %1180 = greater_equal(%1175, %1176) /* ty=Tensor[(13, 10, 11), bool] */;
  (%var_2559, %1177, %1178, %1179, %1180)
}

def @func_16532() -> (Tensor[(1, 10, 11), float32],) {
  %1181 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_12459() -> (Tensor[(1, 10, 11), float32],) {
  %1183 = @func_12277() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1184 = %1183.0;
  (%1184,)
}

def @func_15062() -> (Tensor[(1, 10, 11), float32],) {
  %1185 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1186 = %1185.0;
  (%1186,)
}

def @func_5272() -> (Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1187 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %1188 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1189 = atanh(%1187) /* ty=Tensor[(4, 3, 4), float64] */;
  %1190 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
  %1191 = %1188.0;
  (%1189, %1190, %1191)
}

def @func_16188(%var_16181: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %1192 = @func_4275() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1193 = cast(%var_16181, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1194 = reshape(%1193, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1195 = @func_11309(%1194) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %1196 = %1192.0;
  %1197 = %1195.3;
  (%1196, %1197, %var_16181)
}

def @func_12687() -> (Tensor[(1, 10, 11), float32],) {
  %1198 = @func_8662() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1198,)
}

def @func_589(%var_582: Tensor[(13, 15, 4), float64]) -> Tensor[(13, 15, 4), float64] {
  %1199 = cast(%var_582, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
  acos(%1199) /* ty=Tensor[(13, 15, 4), float64] */
}

def @func_11819() -> (Tensor[(4, 3, 4), float64],) {
  %1200 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1201 = %1200.0;
  (%1201,)
}

def @func_14772() -> (Tensor[(1, 10, 11), float32],) {
  %1202 = @func_14113() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1203 = %1202.0;
  (%1203,)
}

def @func_3304(%var_3295: Tensor[(1430, 1), float32], %var_3296: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) {
  %1204 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1205 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %1206 = reshape(%1205, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1207 = @func_613(%1206) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1208 = cast(meta[relay.Constant][72] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
  %1209 = cast(%var_3295, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %1210 = cast(%var_3296, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1211 = cast(%var_3295, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %1212 = reshape(%1208, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1213 = reshape(%1209, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1214 = reshape(%1210, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %1215 = reshape(%1211, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1216 = @func_2653(%1212, %1213, %1214, %1215) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %1217 = %1204.0;
  %1218 = %1207.0;
  %1219 = %1216.1;
  %1220 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1217, %1218, meta[relay.Constant][71] /* ty=Tensor[(4, 36), float64] */, %1219, meta[relay.Constant][72] /* ty=Tensor[(35, 4), float64] */, %var_3295, %var_3296, %1220)
}

def @func_12179(%var_12153: Tensor[(780), float64], %var_12154: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) {
  %1221 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1222 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1223 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %1224 = cast(%var_12153, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1225 = cast(%var_12154, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1226 = reshape(%1223, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1227 = reshape(%1224, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %1228 = reshape(%1225, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %1229 = @func_2479(%1226, %1227, %1228) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %1230 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1231 = %1221.2;
  %1232 = %1222.0;
  %1233 = %1229.5;
  %1234 = %1230.0;
  (%1231, %1232, %1233, meta[relay.Constant][73] /* ty=Tensor[(8, 18), float64] */, %var_12153, %var_12154, %1234)
}

def @func_4242(%var_4239: Tensor[(780), float64], %var_4240: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) {
  %1235 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1236 = cast(%1235, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1237 = cast(%var_4239, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1238 = cast(%var_4240, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1239 = reshape(%1236, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %1240 = reshape(%1237, newshape=[130, 6]) /* ty=Tensor[(130, 6), float64] */;
  %1241 = reshape(%1238, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float32] */;
  %1242 = @func_3349(%1239, %1240, %1241) /* ty=(Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) */;
  %1243 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %1244 = %1242.4;
  (%1235, %1243, %1244, %var_4239, %var_4240)
}

def @func_10066() -> (Tensor[(?, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(660), float32]) {
  %1245 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  %1246 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1247 = %1246.5;
  %1248 = cast(%1247, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1249 = shape_of(%1245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1250 = cast(%1245, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1252 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1253 = cast(meta[relay.Constant][74] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1254 = reshape(%1253, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1255 = @func_7539(%1254) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %1256 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1257 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1258 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  %1259 = cast(%1258, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %1260 = cast(meta[relay.Constant][75] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1261 = reshape(%1259, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1262 = reshape(%1260, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1263 = @func_4242(%1261, %1262) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %1264 = power(%1250, %1251) /* ty=Tensor[(?, 10, 11), float32] */;
  %1265 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %1266 = %1252.0;
  %1267 = %1255.3;
  %1268 = %1256.0;
  %1269 = %1257.1;
  %1270 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %1271 = %1263.0;
  (%1264, %1265, %1266, %1267, meta[relay.Constant][74] /* ty=Tensor[(80), bool] */, %1268, %1269, %1270, %1258, %1271, meta[relay.Constant][75] /* ty=Tensor[(660), float32] */)
}

def @func_6528() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
  %1272 = cast(meta[relay.Constant][76] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1273 = reshape(%1272, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1274 = @func_2368(%1273) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %1275 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
  %1276 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %1277 = %1274.0;
  (%1275, %1276, %1277, meta[relay.Constant][76] /* ty=Tensor[(140), float64] */)
}

def @func_12067() -> (Tensor[(10, 78), float64],) {
  %1278 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  (%1278,)
}

def @func_7867() -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1279 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %1280 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1281 = %1279.2;
  %1282 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %1283 = %1280.0;
  (%1281, %1282, %1283)
}

def @func_9586() -> (Tensor[(1, 10, 11), float32],) {
  %1284 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1284,)
}

def @func_3188(%var_3183: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float32] {
  %1285 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1286 = cast(%1285, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1287 = cast(%var_3183, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
  power(%1286, %1287) /* ty=Tensor[(7, 10, 11), float32] */
}

def @func_15208() -> (Tensor[(1, 10, 11), float32], Tensor[(432), float32]) {
  %1288 = @func_14157() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1289 = @func_15037() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) */;
  %1290 = %1288.0;
  %1291 = %1289.3;
  (%1290, %1291)
}

def @func_11203() -> Tensor[(1, 10, 11), float32] {
  %1292 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1292.0
}

def @func_7401(%var_7339: Tensor[(12, 16, 16), float32]) -> Tensor[(12, 16, 16), float32] {
  %1293 = cast(%var_7339, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %1294 = cosh(%1293) /* ty=Tensor[(12, 16, 16), float32] */;
  %1295 = cast(%1294, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  asinh(%1295) /* ty=Tensor[(12, 16, 16), float32] */
}

def @func_3507() -> (Tensor[(1, 10, 11), float32],) {
  %1296 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1296,)
}

def @func_16949() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1297 = @func_6245() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1298 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1299 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1300 = %1297.0;
  %1301 = %1298.0;
  %1302 = %1299.1;
  (%1300, %1301, %1302)
}

def @func_9364(%var_9351: Tensor[(1, 80), bool]) -> (Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) {
  %1303 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %1304 = cast(meta[relay.Constant][77] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %1305 = cast(meta[relay.Constant][77] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %1306 = reshape(%1304, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %1307 = reshape(%1305, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %1308 = cast(%var_9351, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %1309 = cast(meta[relay.Constant][78] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1310 = cast(meta[relay.Constant][78] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1311 = reshape(%1308, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %1312 = reshape(%1309, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1313 = reshape(%1310, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1314 = @func_1285(%1311, %1312, %1313) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %1315 = %1303.2;
  %1316 = @func_4188(%1306, %1307) /* ty=Tensor[(4, 15, 9), int32] */;
  %1317 = %1314.1;
  %1318 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1315, %1316, meta[relay.Constant][77] /* ty=Tensor[(540), int32] */, %1317, %var_9351, meta[relay.Constant][78] /* ty=Tensor[(1200), bool] */, %1318)
}

def @func_5189(%var_5182: Tensor[(1430), float32], %var_5183: Tensor[(5, 63), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430), float32], Tensor[(5, 63), bool]) {
  %1319 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1320 = cast(meta[relay.Constant][79] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1321 = cast(%var_5182, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %1322 = cast(%var_5183, dtype="bool") /* ty=Tensor[(5, 63), bool] */;
  %1323 = cast(%var_5182, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %1324 = reshape(%1320, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1325 = reshape(%1321, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1326 = reshape(%1322, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %1327 = reshape(%1323, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %1328 = @func_2653(%1324, %1325, %1326, %1327) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %1329 = %1319.0;
  %1330 = %1328.4;
  (%1329, %1330, meta[relay.Constant][79] /* ty=Tensor[(140), float64] */, %var_5182, %var_5183)
}

def @func_12277() -> (Tensor[(1, 10, 11), float32],) {
  %1331 = @func_10268() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1331,)
}

def @func_15488() -> Tensor[(1, 10, 11), float32] {
  %1332 = @func_15208() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(432), float32]) */;
  %1332.0
}

def @func_4596() -> Tensor[(1, 10, 11), float32] {
  @func_4475() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_14384(%var_14381: Tensor[(1430, 1), float32]) -> (Tensor[(10, 78), float64], Tensor[(16, 3, 3), float64], Tensor[(1430, 1), float32], Tensor[(315), bool]) {
  %1333 = @func_13432() /* ty=(Tensor[(10, 78), float64],) */;
  %1334 = cast(%var_14381, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %1335 = cast(meta[relay.Constant][80] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1336 = reshape(%1334, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %1337 = reshape(%1335, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %1338 = @func_3304(%1336, %1337) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %1339 = %1333.0;
  %1340 = %1338.1;
  (%1339, %1340, %var_14381, meta[relay.Constant][80] /* ty=Tensor[(315), bool] */)
}

def @func_9531(%var_9529: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool]) {
  %1341 = cast(%var_9529, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1342 = reshape(%1341, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1343 = @func_6431(%1342) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %1344 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  %1345 = %1343.3;
  (%1344, %1345, %var_9529)
}

def @func_9564() -> Tensor[(4, 3, 4), float64] {
  %1346 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1346.0
}

def @func_10849(%var_10844: Tensor[(15, 12, 4), uint32], %var_10845: Tensor[(15, 12, 4), uint32]) -> (Tensor[(15, 12, 4), uint32],) {
  %1347 = cast(%var_10845, dtype="uint32") /* ty=Tensor[(15, 12, 4), uint32] */;
  %1348 = shape_of(%var_10844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1349 = cast(%var_10844, dtype="uint32") /* ty=Tensor[(15, 12, 4), uint32] */;
  %1350 = dyn.reshape(%1347, %1348, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1351 = bitwise_xor(%1349, %1350) /* ty=Tensor[(15, 12, 4), uint32] */;
  (%1351,)
}

def @func_6390() -> (Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) {
  %1352 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1353 = %1352.0;
  %1354 = cast(%1353, dtype="uint16") /* ty=Tensor[(1, 10, 11), uint16] */;
  %1355 = cast(meta[relay.Constant][81] /* ty=Tensor[(6, 10, 11), float32] */, dtype="uint16") /* ty=Tensor[(6, 10, 11), uint16] */;
  %1356 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  %1357 = cast(%1356, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %1358 = atan(%1357) /* ty=Tensor[(10, 78), float32] */;
  %1359 = cast(%1358, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %1360 = right_shift(%1354, %1355) /* ty=Tensor[(6, 10, 11), uint16] */;
  %1361 = cast(%1360, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %1362 = reshape(%1359, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1363 = reshape(%1361, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1364 = @func_4242(%1362, %1363) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %1365 = cast(%1358, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %1366 = %1364.2;
  %1367 = asin(%1365) /* ty=Tensor[(10, 78), float64] */;
  (%1360, %1366, %1367)
}

def @func_3645() -> (Tensor[(1, 10, 11), float32],) {
  %1368 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1369 = %1368.0;
  (%1369,)
}

def @func_10969() -> (Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool]) {
  %1370 = @func_9768() /* ty=(Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) */;
  %1371 = @func_8136() /* ty=Tensor[(1, 10, 11), float32] */;
  %1372 = %1370.3;
  (%1371, %1372)
}

def @func_10210() -> Tensor[(1, 10, 11), float32] {
  %1373 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1373.0
}

def @func_12974() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1374 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1375 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1376 = %1374.0;
  %1377 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  %1378 = %1375.0;
  (%1376, %1377, %1378)
}

def @func_14723(%var_14715: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool]) {
  %1379 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1380 = cast(%var_14715, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1381 = reshape(%1380, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %1382 = @func_9364(%1381) /* ty=(Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) */;
  %1383 = %1379.0;
  %1384 = %1382.3;
  (%1383, %1384, %var_14715)
}

def @func_6245() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1385 = @func_5887() /* ty=Tensor[(1, 10, 11), float32] */;
  %1386 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1385, %1386)
}

def @main() -> (Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32]) {
  %1387 = @func_9839() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) */;
  %1388 = %1387.2;
  %1389 = cast(%1388, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %1390 = @func_9920() /* ty=Tensor[(1, 10, 11), float32] */;
  %1391 = sin(%1389) /* ty=Tensor[(12, 16, 16), float32] */;
  (%1390, %1391)
}

def @func_15918() -> Tensor[(1, 10, 11), float32] {
  %1392 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
  %1392.1
}

def @func_13652(%var_13622: Tensor[(3, 9, 3), uint16], %var_13623: Tensor[(3, 9, 3), uint16], %var_13630: Tensor[(330), float32]) -> (Tensor[(3, 9, 3), uint16], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %1393 = cast(%var_13623, dtype="uint16") /* ty=Tensor[(3, 9, 3), uint16] */;
  %1394 = shape_of(%var_13622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1395 = cast(%var_13622, dtype="uint16") /* ty=Tensor[(3, 9, 3), uint16] */;
  %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1397 = cast(%var_13630, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1398 = reshape(%1397, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %1399 = bitwise_or(%1395, %1396) /* ty=Tensor[(3, 9, 3), uint16] */;
  %1400 = @func_3095(%1398) /* ty=Tensor[(3, 10, 11), float32] */;
  (%1399, %1400, %var_13630)
}

def @func_16592() -> (Tensor[(12, 12, 13), bool],) {
  %1401 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
  %1402 = %1401.0;
  (%1402,)
}

def @func_13043(%var_13028: Tensor[(780), float64]) -> (Tensor[(?, 10, 11), uint64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), int64], Tensor[(770), float32]) {
  %1403 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %1404 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1405 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1406 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1407 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %1408 = %1407.2;
  %1409 = cast(%var_13028, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1410 = shape_of(%1408, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1411 = cast(%1408, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1412 = dyn.reshape(%1409, %1410, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1413 = @func_9149() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */;
  %1414 = %1403.2;
  %1415 = %1404.0;
  %1416 = %1405.5;
  %1417 = %1406.0;
  %1418 = right_shift(%1411, %1412) /* ty=Tensor[(780), int64] */;
  %1419 = %1413.8;
  (%1414, %1415, %1416, %1417, %1418, %1419)
}

def @func_13222() -> Tensor[(1, 10, 11), float32] {
  @func_8662() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6030() -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) {
  %1420 = cast(meta[relay.Constant][82] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1421 = reshape(%1420, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1422 = @func_1222(%1421) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %1423 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
  %1424 = %1422.2;
  (%1423, %1424, meta[relay.Constant][82] /* ty=Tensor[(780), float64] */)
}

def @func_5370(%var_5344: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) {
  %1425 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1426 = %1425.0;
  %1427 = cast(%1426, dtype="uint16") /* ty=Tensor[(1, 10, 11), uint16] */;
  %1428 = cast(%var_5344, dtype="uint16") /* ty=Tensor[(16, 10, 11), uint16] */;
  %1429 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1430 = cast(meta[relay.Constant][83] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1431 = reshape(%1430, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1432 = @func_2340(%1431) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %1433 = bitwise_or(%1427, %1428) /* ty=Tensor[(16, 10, 11), uint16] */;
  %1434 = %1429.0;
  %1435 = %1432.0;
  (%1433, %1434, %1435, meta[relay.Constant][83] /* ty=Tensor[(80), bool] */)
}

def @func_8198() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1436 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1437 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1438 = %1436.0;
  %1439 = %1437.0;
  (%1438, %1439)
}

def @func_11370() -> (Tensor[(1, 10, 11), float32],) {
  %1440 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1441 = %1440.0;
  (%1441,)
}

def @func_8525(%var_8480: Tensor[(4, 6, 7), float32], %var_8502: Tensor[(80), bool]) -> (Tensor[(4, 6, 7), float32], Tensor[(80), bool], Tensor[(8, 10, 15), float64]) {
  %1442 = cast(%var_8480, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  %1443 = cast(%var_8502, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1444 = reshape(%1443, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1445 = @func_2340(%1444) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %1446 = %1445.1;
  %1447 = cast(%1446, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
  %1448 = sqrt(%1442) /* ty=Tensor[(4, 6, 7), float32] */;
  %1449 = erf(%1447) /* ty=Tensor[(8, 10, 15), float64] */;
  (%1448, %var_8502, %1449)
}

def @func_11504() -> (Tensor[(10, 78), float64],) {
  %1450 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  (%1450,)
}

def @func_3785() -> (Tensor[(1, 10, 11), float32],) {
  %1451 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1452 = %1451.0;
  (%1452,)
}

def @func_15370(%var_15331: Tensor[(216), uint8], %var_15347: Tensor[(1, 144), float64], %var_15349: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool], Tensor[(216), uint8], Tensor[(1, 10, 11), float32], Tensor[(6, 63), float64], Tensor[(780), float64], Tensor[(330), float32], Tensor[(1, 144), float64]) {
  %1453 = @func_12610() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) */;
  %1454 = cast(%var_15331, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1455 = reshape(%1454, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
  %1456 = @func_9172(%1455) /* ty=(Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) */;
  %1457 = cast(meta[relay.Constant][84] /* ty=Tensor[(6, 63), float64] */, dtype="float64") /* ty=Tensor[(6, 63), float64] */;
  %1458 = cast(meta[relay.Constant][84] /* ty=Tensor[(6, 63), float64] */, dtype="float64") /* ty=Tensor[(6, 63), float64] */;
  %1459 = cast(%var_15347, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %1460 = cast(meta[relay.Constant][85] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1461 = cast(%var_15349, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1462 = reshape(%1457, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %1463 = reshape(%1458, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %1464 = reshape(%1459, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1465 = reshape(%1460, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1466 = reshape(%1461, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1467 = @func_14243(%1462, %1463, %1464, %1465, %1466) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) */;
  %1468 = cast(%var_15347, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %1469 = %1453.0;
  %1470 = %1456.0;
  %1471 = %1467.7;
  %1472 = sigmoid(%1468) /* ty=Tensor[(1, 144), float64] */;
  (%1469, %1470, %var_15331, %1471, meta[relay.Constant][84] /* ty=Tensor[(6, 63), float64] */, meta[relay.Constant][85] /* ty=Tensor[(780), float64] */, %var_15349, %1472)
}

def @func_10113() -> Tensor[(1, 10, 11), float32] {
  %1473 = @func_6729() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1473.0
}

def @func_10727(%var_10714: Tensor[(80), bool]) -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(432), float32]) {
  %1474 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
  %1475 = cast(%var_10714, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1476 = reshape(%1475, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1477 = @func_6431(%1476) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %1478 = @func_9149() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */;
  %1479 = %1474.0;
  %1480 = %1477.0;
  %1481 = %1478.5;
  (%1479, %1480, %var_10714, %1481)
}

def @func_2295(%var_2244: Tensor[(1, 10, 4), float64], %var_2254: Tensor[(105, 3), float64], %var_2255: Tensor[(140), float64], %var_2278: Tensor[(36, 12), float32], %var_2279: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) {
  %1482 = cast(%var_2254, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
  %1483 = cast(%var_2255, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1484 = reshape(%1482, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float64] */;
  %1485 = reshape(%1483, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1486 = @func_210(%1484, %1485) /* ty=(Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %1487 = cast(%var_2278, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %1488 = cast(%var_2279, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1489 = reshape(%1487, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %1490 = reshape(%1488, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1491 = @func_1364(%1489, %1490) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
  %1492 = cast(%var_2244, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
  %1493 = exp(%1492) /* ty=Tensor[(1, 10, 4), float64] */;
  %1494 = cast(%var_2244, dtype="int16") /* ty=Tensor[(1, 10, 4), int16] */;
  %1495 = shape_of(%1493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1496 = cast(%1493, dtype="int16") /* ty=Tensor[(1, 10, 4), int16] */;
  %1497 = dyn.reshape(%1494, %1495, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1498 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1499 = %1486.0;
  %1500 = %1491.2;
  %1501 = bitwise_and(%1496, %1497) /* ty=Tensor[(?, 10, 4), int16] */;
  (%1498, %1499, %var_2254, %var_2255, %1500, %var_2278, %var_2279, %1501)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4791(%var_4789: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) {
  @func_4788(%var_4789) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) */
}

def @func_14384(%var_14381: Tensor[(1430, 1), float32]) -> (Tensor[(10, 78), float64], Tensor[(16, 3, 3), float64], Tensor[(1430, 1), float32], Tensor[(315), bool]) {
  %0 = @func_13432() /* ty=(Tensor[(10, 78), float64],) */;
  %1 = cast(%var_14381, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %3 = reshape(%1, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %4 = reshape(%2, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %5 = @func_3304(%3, %4) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %6 = %0.0;
  %7 = %5.1;
  (%6, %7, %var_14381, meta[relay.Constant][0] /* ty=Tensor[(315), bool] */)
}

def @func_11928() -> Tensor[(12, 12, 13), bool] {
  @func_11926() /* ty=Tensor[(12, 12, 13), bool] */
}

def @func_14405() -> (Tensor[(?, 10, 11), uint64],) {
  @func_14403() /* ty=(Tensor[(?, 10, 11), uint64],) */
}

def @func_10096(%var_10094: Tensor[(14, 4, 12), uint64], %var_10095: Tensor[(14, 4, 12), uint64]) -> (Tensor[(14, 4, 12), uint64],) {
  @func_10092(%var_10094, %var_10095) /* ty=(Tensor[(14, 4, 12), uint64],) */
}

def @func_7869() -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_11506() -> (Tensor[(10, 78), float64],) {
  @func_11504() /* ty=(Tensor[(10, 78), float64],) */
}

def @func_14158() -> (Tensor[(1, 10, 11), float32],) {
  %10 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %8 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %9 = %8.0;
    (%9,)
  };
  %10() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_16735() -> (Tensor[(5, 10, 11), float32],) {
  %15 = fn () -> (Tensor[(5, 10, 11), float32],) {
    %11 = @func_16324() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) */;
    %12 = %11.0;
    %13 = cast(%12, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
    %14 = tan(%13) /* ty=Tensor[(5, 10, 11), float32] */;
    (%14,)
  };
  %15() /* ty=(Tensor[(5, 10, 11), float32],) */
}

def @func_8928() -> Tensor[(1, 10, 11), float32] {
  %16 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %16.0
}

def @func_6907() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %20 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %17 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %18 = %17.0;
    %19 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
    (%18, %19)
  };
  %20() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_2709(%var_2708: Tensor[(5, 10, 11), float32]) -> Tensor[(5, 10, 11), uint8] {
  %24 = fn (%var_2702: Tensor[(5, 10, 11), float32]) -> Tensor[(5, 10, 11), uint8] {
    %21 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    %22 = cast(%21, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
    %23 = cast(%var_2702, dtype="uint8") /* ty=Tensor[(5, 10, 11), uint8] */;
    bitwise_xor(%22, %23) /* ty=Tensor[(5, 10, 11), uint8] */
  };
  %24(%var_2708) /* ty=Tensor[(5, 10, 11), uint8] */
}

def @func_7669(%var_7667: Tensor[(10, 78), float64], %var_7668: Tensor[(20, 4), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) {
  %62 = fn (%var_7597: Tensor[(10, 78), float64], %var_7661: Tensor[(20, 4), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) {
    %25 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
    %26 = cast(%var_7597, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
    %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(2), int32] */;
    %28 = cast(%25, dtype="int64") /* ty=Tensor[(10, 78), int64] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %30 = subtract(%28, %29) /* ty=Tensor[(10, 78), int64] */;
    %31 = cast(%30, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %32 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(2), int32] */;
    %33 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %35 = cast(%25, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %36 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(2), int32] */;
    %37 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %39 = cast(%var_7597, dtype="uint16") /* ty=Tensor[(10, 78), uint16] */;
    %40 = shape_of(%30, dtype="int32") /* ty=Tensor[(2), int32] */;
    %41 = cast(%30, dtype="uint16") /* ty=Tensor[(10, 78), uint16] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %43 = left_shift(%41, %42) /* ty=Tensor[(10, 78), uint16] */;
    %44 = cast(%43, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %45 = atanh(%44) /* ty=Tensor[(10, 78), float32] */;
    %46 = cast(%var_7597, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(2), int32] */;
    %48 = cast(%45, dtype="bool") /* ty=Tensor[(10, 78), bool] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %50 = cast(%45, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %51 = log(%50) /* ty=Tensor[(10, 78), float32] */;
    %52 = cast(%51, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %53 = cast(%var_7661, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
    %54 = reshape(%53, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %55 = @func_6431(%54) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
    %56 = @func_6817() /* ty=Tensor[(1, 10, 11), float32] */;
    %57 = greater_equal(%33, %34) /* ty=Tensor[(10, 78), bool] */;
    %58 = logical_or(%37, %38) /* ty=Tensor[(10, 78), bool] */;
    %59 = logical_and(%48, %49) /* ty=Tensor[(10, 78), bool] */;
    %60 = asinh(%52) /* ty=Tensor[(10, 78), float32] */;
    %61 = %55.1;
    (%56, %57, %58, %59, %60, %61, %var_7661)
  };
  %62(%var_7667, %var_7668) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) */
}

def @func_13222() -> Tensor[(1, 10, 11), float32] {
  @func_8662() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_12913(%var_12911: Tensor[(11, 130), float32], %var_12912: Tensor[(105, 3), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) {
  @func_12909(%var_12911, %var_12912) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) */
}

def @func_14043() -> Tensor[(6, 10, 11), float64] {
  %63 = @func_6390() /* ty=(Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) */;
  %63.1
}

def @func_14452(%var_14450: uint64, %var_14451: Tensor[(1, 16, 7), uint64]) -> Tensor[(1, 16, 7), bool] {
  @func_14448(%var_14450, %var_14451) /* ty=Tensor[(1, 16, 7), bool] */
}

def @func_12277() -> (Tensor[(1, 10, 11), float32],) {
  %64 = @func_10268() /* ty=Tensor[(1, 10, 11), float32] */;
  (%64,)
}

def @func_13484(%var_13482: Tensor[(60, 12), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], float64, Tensor[(60, 12), float64]) {
  @func_13481(%var_13482) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], float64, Tensor[(60, 12), float64]) */
}

def @func_9457(%var_9455: Tensor[(9, 5, 14), float32], %var_9456: Tensor[(9, 5, 14), float32]) -> Tensor[(9, 5, 14), float64] {
  @func_9453(%var_9455, %var_9456) /* ty=Tensor[(9, 5, 14), float64] */
}

def @func_2479(%var_2460: Tensor[(144), float64], %var_2473: Tensor[(390, 2), float64], %var_2477: Tensor[(5, 28), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) {
  %65 = cast(%var_2460, dtype="float64") /* ty=Tensor[(144), float64] */;
  %66 = reshape(%65, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %67 = @func_613(%66) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %68 = cast(%var_2473, dtype="float64") /* ty=Tensor[(390, 2), float64] */;
  %69 = reshape(%68, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %70 = cast(%var_2477, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %71 = reshape(%70, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %72 = @func_106(%71) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %73 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %74 = %67.0;
  %75 = @func_589(%69) /* ty=Tensor[(13, 15, 4), float64] */;
  %76 = %72.0;
  (%73, %74, %var_2460, %75, %var_2473, %76, %var_2477)
}

def @func_3087() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) {
  %82 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) {
    %77 = @func_2805() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) */;
    %78 = cast(meta[relay.Constant][1] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
    %79 = reshape(%78, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
    %80 = %77.0;
    %81 = @func_2707(%79) /* ty=Tensor[(5, 10, 11), uint8] */;
    (%80, %81, meta[relay.Constant][1] /* ty=Tensor[(550), float32] */)
  };
  %82() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */
}

def @func_12380(%var_12371: Tensor[(11, 10, 11), float32]) -> (Tensor[(11, 10, 11), int16],) {
  %83 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %84 = %83.0;
  %85 = cast(%84, dtype="int16") /* ty=Tensor[(1, 10, 11), int16] */;
  %86 = cast(%var_12371, dtype="int16") /* ty=Tensor[(11, 10, 11), int16] */;
  %87 = minimum(%85, %86) /* ty=Tensor[(11, 10, 11), int16] */;
  (%87,)
}

def @func_12688() -> (Tensor[(1, 10, 11), float32],) {
  %89 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %88 = @func_8662() /* ty=Tensor[(1, 10, 11), float32] */;
    (%88,)
  };
  %89() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_10092(%var_10086: Tensor[(14, 4, 12), uint64], %var_10087: Tensor[(14, 4, 12), uint64]) -> (Tensor[(14, 4, 12), uint64],) {
  %90 = cast(%var_10087, dtype="uint64") /* ty=Tensor[(14, 4, 12), uint64] */;
  %91 = shape_of(%var_10086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_10086, dtype="uint64") /* ty=Tensor[(14, 4, 12), uint64] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %94 = bitwise_and(%92, %93) /* ty=Tensor[(14, 4, 12), uint64] */;
  (%94,)
}

def @func_15208() -> (Tensor[(1, 10, 11), float32], Tensor[(432), float32]) {
  %95 = @func_14157() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %96 = @func_15037() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) */;
  %97 = %95.0;
  %98 = %96.3;
  (%97, %98)
}

def @func_15490() -> Tensor[(1, 10, 11), float32] {
  @func_15488() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6573(%var_6571: Tensor[(80), bool], %var_6572: Tensor[(1200), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
  %109 = fn (%var_6558: Tensor[(80), bool], %var_6559: Tensor[(1200), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
    %99 = cast(%var_6558, dtype="bool") /* ty=Tensor[(80), bool] */;
    %100 = cast(%var_6559, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %101 = cast(%var_6559, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %102 = reshape(%99, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
    %103 = reshape(%100, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %104 = reshape(%101, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %105 = @func_1285(%102, %103, %104) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
    %106 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    %107 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
    %108 = %105.1;
    (%106, %107, %108, %var_6558, %var_6559)
  };
  %109(%var_6571, %var_6572) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */
}

def @func_5087() -> (Tensor[(1, 10, 11), float32],) {
  @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_10645() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %113 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %110 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %111 = %110.0;
    %112 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
    (%111, %112)
  };
  %113() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_10066() -> (Tensor[(?, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(660), float32]) {
  %114 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  %115 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %116 = %115.5;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %118 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%114, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %121 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %122 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %123 = reshape(%122, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %124 = @func_7539(%123) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %125 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %126 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %127 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %129 = cast(meta[relay.Constant][3] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %130 = reshape(%128, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %131 = reshape(%129, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %132 = @func_4242(%130, %131) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %133 = power(%119, %120) /* ty=Tensor[(?, 10, 11), float32] */;
  %134 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %135 = %121.0;
  %136 = %124.3;
  %137 = %125.0;
  %138 = %126.1;
  %139 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %140 = %132.0;
  (%133, %134, %135, %136, meta[relay.Constant][2] /* ty=Tensor[(80), bool] */, %137, %138, %139, %127, %140, meta[relay.Constant][3] /* ty=Tensor[(660), float32] */)
}

def @func_11593() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) {
  %141 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %142 = @func_11430() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %143 = cast(meta[relay.Constant][4] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %144 = cast(meta[relay.Constant][4] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %145 = reshape(%143, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float64] */;
  %146 = reshape(%144, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float64] */;
  %147 = @func_7333(%145, %146) /* ty=(Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) */;
  %148 = %147.3;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %151 = reshape(%150, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %152 = @func_6501(%151) /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) */;
  %153 = %141.0;
  %154 = %142.0;
  %155 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
  %156 = sinh(%149) /* ty=Tensor[(8, 14, 16), float32] */;
  %157 = %152.0;
  (%153, %154, meta[relay.Constant][4] /* ty=Tensor[(1792), float64] */, %155, %156, %157, meta[relay.Constant][5] /* ty=Tensor[(330), float32] */)
}

def @func_9036(%var_9033: Tensor[(40), float64], %var_9034: Tensor[(315), float64], %var_9035: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) {
  %173 = fn (%var_9024: Tensor[(40), float64], %var_9025: Tensor[(315), float64], %var_9028: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) {
    %158 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %159 = cast(%var_9024, dtype="float64") /* ty=Tensor[(40), float64] */;
    %160 = cast(%var_9025, dtype="float64") /* ty=Tensor[(315), float64] */;
    %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %163 = cast(%var_9028, dtype="float64") /* ty=Tensor[(144), float64] */;
    %164 = reshape(%159, newshape=[1, 10, 4]) /* ty=Tensor[(1, 10, 4), float64] */;
    %165 = reshape(%160, newshape=[105, 3]) /* ty=Tensor[(105, 3), float64] */;
    %166 = reshape(%161, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %167 = reshape(%162, newshape=[36, 12]) /* ty=Tensor[(36, 12), float32] */;
    %168 = reshape(%163, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %169 = @func_2295(%164, %165, %166, %167, %168) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) */;
    %170 = @func_8662() /* ty=Tensor[(1, 10, 11), float32] */;
    %171 = %158.1;
    %172 = %169.3;
    (%170, %171, %172, %var_9024, %var_9025, meta[relay.Constant][6] /* ty=Tensor[(140), float64] */, meta[relay.Constant][7] /* ty=Tensor[(432), float32] */, %var_9028)
  };
  %173(%var_9033, %var_9034, %var_9035) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) */
}

def @func_10299() -> (Tensor[(550), float32], Tensor[(?, 10, 11), bool], Tensor[(1, 10, 11), float32]) {
  %187 = fn () -> (Tensor[(550), float32], Tensor[(?, 10, 11), bool], Tensor[(1, 10, 11), float32]) {
    %174 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
    %175 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %176 = %175.0;
    %177 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %178 = %177.0;
    %179 = cast(%178, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %180 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%176, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %183 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %184 = %174.2;
    %185 = less_equal(%181, %182) /* ty=Tensor[(?, 10, 11), bool] */;
    %186 = %183.1;
    (%184, %185, %186)
  };
  %187() /* ty=(Tensor[(550), float32], Tensor[(?, 10, 11), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_12179(%var_12153: Tensor[(780), float64], %var_12154: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) {
  %188 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %189 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %190 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %191 = cast(%var_12153, dtype="float64") /* ty=Tensor[(780), float64] */;
  %192 = cast(%var_12154, dtype="float64") /* ty=Tensor[(140), float64] */;
  %193 = reshape(%190, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %194 = reshape(%191, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %195 = reshape(%192, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %196 = @func_2479(%193, %194, %195) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %197 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %198 = %188.2;
  %199 = %189.0;
  %200 = %196.5;
  %201 = %197.0;
  (%198, %199, %200, meta[relay.Constant][8] /* ty=Tensor[(8, 18), float64] */, %var_12153, %var_12154, %201)
}

def @func_11635() -> (Tensor[(144), float64],) {
  %202 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %203 = %202.3;
  (%203,)
}

def @func_15037() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) {
  %204 = cast(meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %205 = cast(meta[relay.Constant][10] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %206 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %207 = reshape(%204, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %208 = reshape(%205, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %209 = reshape(%206, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %210 = @func_7265(%207, %208, %209) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
  %211 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %214 = reshape(%212, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %215 = reshape(%213, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %216 = @func_12179(%214, %215) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) */;
  %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %218 = reshape(%217, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %219 = @func_13163(%218) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) */;
  %220 = %210.7;
  %221 = %216.4;
  %222 = %219.0;
  (%211, %220, meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, meta[relay.Constant][10] /* ty=Tensor[(432), float32] */, meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, %221, %222, meta[relay.Constant][12] /* ty=Tensor[(715), float64] */)
}

def @func_8288(%var_8286: Tensor[(540), int32]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) {
  @func_8285(%var_8286) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) */
}

def @func_3116() -> (Tensor[(1, 10, 11), float32],) {
  %224 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %223 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    (%223,)
  };
  %224() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_7288() -> (Tensor[(1, 10, 11), float32],) {
  @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_9453(%var_9441: Tensor[(9, 5, 14), float32], %var_9442: Tensor[(9, 5, 14), float32]) -> Tensor[(9, 5, 14), float64] {
  %225 = cast(%var_9442, dtype="float32") /* ty=Tensor[(9, 5, 14), float32] */;
  %226 = shape_of(%var_9441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_9441, dtype="float32") /* ty=Tensor[(9, 5, 14), float32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %229 = subtract(%227, %228) /* ty=Tensor[(9, 5, 14), float32] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  rsqrt(%230) /* ty=Tensor[(9, 5, 14), float64] */
}

def @func_15210() -> (Tensor[(1, 10, 11), float32], Tensor[(432), float32]) {
  @func_15208() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(432), float32]) */
}

def @func_10114() -> Tensor[(1, 10, 11), float32] {
  %232 = fn () -> Tensor[(1, 10, 11), float32] {
    %231 = @func_6729() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %231.0
  };
  %232() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6818() -> Tensor[(1, 10, 11), float32] {
  %234 = fn () -> Tensor[(1, 10, 11), float32] {
    %233 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %233.0
  };
  %234() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_13514() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %235 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %236 = @func_6245() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %237 = %235.2;
  %238 = %236.1;
  (%237, %238)
}

def @func_5753() -> (Tensor[(12, 12, 13), bool],) {
  @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */
}

def @func_14477() -> Tensor[(1, 10, 11), float32] {
  %240 = fn () -> Tensor[(1, 10, 11), float32] {
    %239 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %239.0
  };
  %240() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6392() -> (Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) {
  @func_6390() /* ty=(Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) */
}

def @func_4385() -> (Tensor[(1, 10, 11), float32],) {
  %241 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  (%241,)
}

def @func_5517() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  %242 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %243 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %247 = less_equal(%244, %245) /* ty=Tensor[(12, 12, 13), bool] */;
  %248 = %246.0;
  (%247, %248)
}

def @func_9533(%var_9532: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool]) {
  %254 = fn (%var_9529: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool]) {
    %249 = cast(%var_9529, dtype="bool") /* ty=Tensor[(80), bool] */;
    %250 = reshape(%249, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %251 = @func_6431(%250) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
    %252 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    %253 = %251.3;
    (%252, %253, %var_9529)
  };
  %254(%var_9532) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool]) */
}

def @func_7817() -> (Tensor[(1, 10, 11), float32],) {
  %255 = @func_7457() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) */;
  %256 = %255.1;
  (%256,)
}

def @func_4641() -> (Tensor[(1, 10, 11), float32],) {
  %257 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %258 = %257.0;
  (%258,)
}

def @func_3731() -> (Tensor[(1, 10, 11), float32],) {
  %261 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %259 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %260 = %259.0;
    (%260,)
  };
  %261() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_11370() -> (Tensor[(1, 10, 11), float32],) {
  %262 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %263 = %262.0;
  (%263,)
}

def @func_6032() -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) {
  @func_6030() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) */
}

def @func_3787() -> (Tensor[(1, 10, 11), float32],) {
  @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_10389() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(55, 6), float32], Tensor[(1, 330), float32], Tensor[(12, 100), float32]) {
  %278 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(55, 6), float32], Tensor[(1, 330), float32], Tensor[(12, 100), float32]) {
    %264 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %265 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %266 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %267 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 100), bool] */, dtype="bool") /* ty=Tensor[(12, 100), bool] */;
    %268 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
    %269 = reshape(%267, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
    %270 = reshape(%268, newshape=[55, 6]) /* ty=Tensor[(55, 6), float32] */;
    %271 = @func_9666(%269, %270) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) */;
    %272 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 100), bool] */, dtype="float32") /* ty=Tensor[(12, 100), float32] */;
    %273 = %264.0;
    %274 = %265.0;
    %275 = %266.0;
    %276 = %271.6;
    %277 = atanh(%272) /* ty=Tensor[(12, 100), float32] */;
    (%273, %274, %275, %276, meta[relay.Constant][16] /* ty=Tensor[(1, 330), float32] */, %277)
  };
  %278() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(55, 6), float32], Tensor[(1, 330), float32], Tensor[(12, 100), float32]) */
}

def @func_14045() -> Tensor[(6, 10, 11), float64] {
  @func_14043() /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_16660() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32]) {
  %282 = fn () -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32]) {
    %279 = @func_15637() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */;
    %280 = %279.1;
    %281 = @func_12856() /* ty=Tensor[(1, 10, 11), float32] */;
    (%280, %281)
  };
  %282() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_15920() -> Tensor[(1, 10, 11), float32] {
  @func_15918() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_14975() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %288 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %283 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %284 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %285 = %283.0;
    %286 = @func_9920() /* ty=Tensor[(1, 10, 11), float32] */;
    %287 = %284.0;
    (%285, %286, %287)
  };
  %288() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_16342() -> (Tensor[(5, 10, 11), uint8],) {
  %291 = fn () -> (Tensor[(5, 10, 11), uint8],) {
    %289 = @func_10774() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) */;
    %290 = %289.1;
    (%290,)
  };
  %291() /* ty=(Tensor[(5, 10, 11), uint8],) */
}

def @func_9921() -> Tensor[(1, 10, 11), float32] {
  %293 = fn () -> Tensor[(1, 10, 11), float32] {
    %292 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %292.0
  };
  %293() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_11049(%var_11029: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), uint8], Tensor[(?, 10, 11), int32], Tensor[(4, 3, 4), float64]) {
  %294 = @func_8727() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) */;
  %295 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  %296 = cast(%var_11029, dtype="uint8") /* ty=Tensor[(10, 78), uint8] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(2), int32] */;
  %298 = cast(%295, dtype="uint8") /* ty=Tensor[(10, 78), uint8] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %300 = @func_6934() /* ty=Tensor[(1, 10, 11), float32] */;
  %301 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %302 = %301.0;
  %303 = cast(%302, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
  %304 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%300, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %307 = %294.1;
  %308 = minimum(%298, %299) /* ty=Tensor[(10, 78), uint8] */;
  %309 = bitwise_xor(%305, %306) /* ty=Tensor[(?, 10, 11), int32] */;
  %310 = @func_9564() /* ty=Tensor[(4, 3, 4), float64] */;
  (%307, %308, %309, %310)
}

def @func_12647() -> (Tensor[(7, 11, 11), bool],) {
  @func_12645() /* ty=(Tensor[(7, 11, 11), bool],) */
}

def @func_14723(%var_14715: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool]) {
  %311 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %312 = cast(%var_14715, dtype="bool") /* ty=Tensor[(80), bool] */;
  %313 = reshape(%312, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %314 = @func_9364(%313) /* ty=(Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) */;
  %315 = %311.0;
  %316 = %314.3;
  (%315, %316, %var_14715)
}

def @func_5751() -> (Tensor[(12, 12, 13), bool],) {
  %317 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %318 = %317.0;
  (%318,)
}

def @func_16949() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %319 = @func_6245() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %320 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %321 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %322 = %319.0;
  %323 = %320.0;
  %324 = %321.1;
  (%322, %323, %324)
}

def @func_6226() -> (Tensor[(1, 10, 11), float32],) {
  @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_15800(%var_15797: Tensor[(140), float64], %var_15798: Tensor[(1430, 1), float32], %var_15799: Tensor[(315), bool]) -> (Tensor[(10, 78), float64], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1760), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_15795(%var_15797, %var_15798, %var_15799) /* ty=(Tensor[(10, 78), float64], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1760), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_12383(%var_12381: Tensor[(11, 10, 11), float32]) -> (Tensor[(11, 10, 11), int16],) {
  @func_12380(%var_12381) /* ty=(Tensor[(11, 10, 11), int16],) */
}

def @func_16324() -> (Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) {
  %325 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %326 = @func_8042() /* ty=(Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) */;
  %327 = %325.1;
  %328 = %326.1;
  (%327, %328)
}

def @func_5889() -> Tensor[(1, 10, 11), float32] {
  @func_5887() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_10269() -> Tensor[(1, 10, 11), float32] {
  %329 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_4080() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %329() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_4643() -> (Tensor[(1, 10, 11), float32],) {
  @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_2170() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_5189(%var_5182: Tensor[(1430), float32], %var_5183: Tensor[(5, 63), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430), float32], Tensor[(5, 63), bool]) {
  %330 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %331 = cast(meta[relay.Constant][17] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %332 = cast(%var_5182, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %333 = cast(%var_5183, dtype="bool") /* ty=Tensor[(5, 63), bool] */;
  %334 = cast(%var_5182, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %335 = reshape(%331, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %336 = reshape(%332, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %337 = reshape(%333, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %338 = reshape(%334, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %339 = @func_2653(%335, %336, %337, %338) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %340 = %330.0;
  %341 = %339.4;
  (%340, %341, meta[relay.Constant][17] /* ty=Tensor[(140), float64] */, %var_5182, %var_5183)
}

def @func_7916() -> (Tensor[(1, 10, 11), float32],) {
  @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_11962() -> Tensor[(1, 10, 11), float32] {
  @func_5846() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9174(%var_9173: Tensor[(12, 18), uint8]) -> (Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) {
  %353 = fn (%var_9162: Tensor[(12, 18), uint8]) -> (Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) {
    %342 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
    %343 = cast(%var_9162, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
    %344 = cast(%var_9162, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
    %345 = reshape(%343, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
    %346 = reshape(%344, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
    %347 = @func_4333(%345, %346) /* ty=(Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) */;
    %348 = cast(%var_9162, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
    %349 = %342.2;
    %350 = %347.2;
    %351 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
    %352 = sin(%348) /* ty=Tensor[(12, 18), float64] */;
    (%349, %350, %351, %352)
  };
  %353(%var_9173) /* ty=(Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) */
}

def @func_7914() -> (Tensor[(1, 10, 11), float32],) {
  %354 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %355 = %354.0;
  (%355,)
}

def @func_106(%var_78: Tensor[(5, 2, 14), float64]) -> (Tensor[(5, 2, 14), float64],) {
  %356 = cast(%var_78, dtype="float64") /* ty=Tensor[(5, 2, 14), float64] */;
  %357 = atan(%356) /* ty=Tensor[(5, 2, 14), float64] */;
  (%357,)
}

def @func_8198() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %358 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %359 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %360 = %358.0;
  %361 = %359.0;
  (%360, %361)
}

def @func_4825() -> (Tensor[(1, 10, 11), float32],) {
  %363 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %362 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
    (%362,)
  };
  %363() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_12931() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_12929() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_6612() -> (Tensor[(1, 10, 11), float32],) {
  %365 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %364 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
    (%364,)
  };
  %365() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_6224() -> (Tensor[(1, 10, 11), float32],) {
  %366 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%366,)
}

def @func_12733() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_12731() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_14387(%var_14385: Tensor[(1430, 1), float32]) -> (Tensor[(10, 78), float64], Tensor[(16, 3, 3), float64], Tensor[(1430, 1), float32], Tensor[(315), bool]) {
  @func_14384(%var_14385) /* ty=(Tensor[(10, 78), float64], Tensor[(16, 3, 3), float64], Tensor[(1430, 1), float32], Tensor[(315), bool]) */
}

def @func_7286() -> (Tensor[(1, 10, 11), float32],) {
  %367 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %368 = %367.0;
  (%368,)
}

def @func_14561() -> Tensor[(1, 10, 11), float32] {
  %369 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_8662() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %369() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_3162() -> (Tensor[(1, 10, 11), float32],) {
  %371 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %370 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    (%370,)
  };
  %371() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_14316() -> (Tensor[(10, 78), float64],) {
  @func_14314() /* ty=(Tensor[(10, 78), float64],) */
}

def @func_5716() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
  %372 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %373 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %374 = cast(meta[relay.Constant][18] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %375 = reshape(%374, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %376 = @func_1222(%375) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %377 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %379 = reshape(%378, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %380 = @func_2368(%379) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %381 = %372.0;
  %382 = %373.0;
  %383 = %376.0;
  %384 = %377.0;
  %385 = %380.0;
  (%381, %382, %383, meta[relay.Constant][18] /* ty=Tensor[(780), float64] */, %384, %385, meta[relay.Constant][19] /* ty=Tensor[(140), float64] */)
}

def @func_16022() -> (Tensor[(1430), float32], Tensor[(1, 10, 11), float32]) {
  @func_16020() /* ty=(Tensor[(1430), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_4082() -> Tensor[(1, 10, 11), float32] {
  @func_4080() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_2405(%var_2403: Tensor[(432), float32], %var_2404: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64]) {
  %393 = fn (%var_2389: Tensor[(432), float32], %var_2390: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64]) {
    %386 = cast(%var_2389, dtype="float32") /* ty=Tensor[(432), float32] */;
    %387 = cast(%var_2390, dtype="float64") /* ty=Tensor[(144), float64] */;
    %388 = reshape(%386, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %389 = reshape(%387, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %390 = @func_1364(%388, %389) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
    %391 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
    %392 = %390.0;
    (%391, %392, %var_2389, %var_2390)
  };
  %393(%var_2403, %var_2404) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64]) */
}

def @func_16887(%var_16861: bool, %var_16862: Tensor[(4, 1, 6), bool]) -> (Tensor[(4, 1, 6), bool], Tensor[(1, 10, 11), float32]) {
  %394 = cast(%var_16861, dtype="bool") /* ty=bool */;
  %395 = cast(%var_16862, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %396 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %397 = logical_or(%394, %395) /* ty=Tensor[(4, 1, 6), bool] */;
  %398 = %396.0;
  (%397, %398)
}

def @func_12068() -> (Tensor[(10, 78), float64],) {
  %400 = fn () -> (Tensor[(10, 78), float64],) {
    %399 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
    (%399,)
  };
  %400() /* ty=(Tensor[(10, 78), float64],) */
}

def @func_6730() -> (Tensor[(1, 10, 11), float32],) {
  %403 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %401 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %402 = %401.0;
    (%402,)
  };
  %403() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_7044(%var_7016: Tensor[(1430), float32], %var_7017: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) {
  %404 = cast(%var_7016, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %405 = cast(%var_7017, dtype="bool") /* ty=Tensor[(315), bool] */;
  %406 = reshape(%404, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %407 = reshape(%405, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %408 = @func_3304(%406, %407) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %409 = %408.2;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %411 = reshape(%410, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %412 = @func_613(%411) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %413 = @func_5887() /* ty=Tensor[(1, 10, 11), float32] */;
  %414 = %412.0;
  (%413, %409, %var_7016, %var_7017, %414)
}

def @func_4293() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %415 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %416 = %415.0;
  %417 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  (%416, %417)
}

def @func_3219() -> (Tensor[(1, 10, 11), float32],) {
  %419 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %418 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    (%418,)
  };
  %419() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_6648() -> (Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) {
  @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */
}

def @func_4538() -> Tensor[(1, 10, 11), float32] {
  @func_4536() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_12611() -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) {
  %427 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) {
    %420 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %421 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %422 = %421.0;
    %423 = cast(%422, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
    %424 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 10, 11), float32] */, dtype="uint8") /* ty=Tensor[(9, 10, 11), uint8] */;
    %425 = %420.0;
    %426 = bitwise_xor(%423, %424) /* ty=Tensor[(9, 10, 11), uint8] */;
    (%425, %426)
  };
  %427() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) */
}

def @func_14421() -> Tensor[(6, 10, 11), float64] {
  %428 = @func_6390() /* ty=(Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) */;
  %428.1
}

def @func_5830() -> (Tensor[(1, 10, 11), float32],) {
  %429 = @func_5716() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) */;
  %430 = %429.1;
  (%430,)
}

def @func_4080() -> Tensor[(1, 10, 11), float32] {
  @func_3933() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9366(%var_9365: Tensor[(1, 80), bool]) -> (Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) {
  %447 = fn (%var_9351: Tensor[(1, 80), bool]) -> (Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) {
    %431 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
    %432 = cast(meta[relay.Constant][21] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
    %433 = cast(meta[relay.Constant][21] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
    %434 = reshape(%432, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
    %435 = reshape(%433, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
    %436 = cast(%var_9351, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
    %437 = cast(meta[relay.Constant][22] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %438 = cast(meta[relay.Constant][22] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %439 = reshape(%436, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
    %440 = reshape(%437, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %441 = reshape(%438, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %442 = @func_1285(%439, %440, %441) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
    %443 = %431.2;
    %444 = @func_4188(%434, %435) /* ty=Tensor[(4, 15, 9), int32] */;
    %445 = %442.1;
    %446 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
    (%443, %444, meta[relay.Constant][21] /* ty=Tensor[(540), int32] */, %445, %var_9351, meta[relay.Constant][22] /* ty=Tensor[(1200), bool] */, %446)
  };
  %447(%var_9365) /* ty=(Tensor[(108, 4), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32], Tensor[(8, 10, 15), uint16], Tensor[(1, 80), bool], Tensor[(1200), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_9565() -> Tensor[(4, 3, 4), float64] {
  %449 = fn () -> Tensor[(4, 3, 4), float64] {
    %448 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %448.0
  };
  %449() /* ty=Tensor[(4, 3, 4), float64] */
}

def @func_1367(%var_1365: Tensor[(3, 12, 12), float32], %var_1366: Tensor[(144), float64]) -> (Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
  %456 = fn (%var_1321: Tensor[(3, 12, 12), float32], %var_1338: Tensor[(144), float64]) -> (Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
    %450 = cast(%var_1321, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
    %451 = cast(%var_1338, dtype="float64") /* ty=Tensor[(144), float64] */;
    %452 = reshape(%451, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
    %453 = @func_613(%452) /* ty=(Tensor[(16, 3, 3), float64],) */;
    %454 = asinh(%450) /* ty=Tensor[(3, 12, 12), float32] */;
    %455 = %453.0;
    (%454, %455, %var_1338)
  };
  %456(%var_1365, %var_1366) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */
}

def @func_7142(%var_7140: Tensor[(780), float64], %var_7141: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(390, 2), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1, 10, 11), float32]) {
  @func_7138(%var_7140, %var_7141) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(390, 2), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_15438() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) {
  @func_15436() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) */
}

def @func_13093() -> Tensor[(1, 10, 11), float32] {
  %457 = @func_7817() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %457.0
}

def @func_4788(%var_4780: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) {
  %458 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %459 = cast(%var_4780, dtype="int8") /* ty=Tensor[(10, 78), int8] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%458, dtype="int8") /* ty=Tensor[(10, 78), int8] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %463 = cast(%var_4780, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %464 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %465 = bitwise_xor(%461, %462) /* ty=Tensor[(10, 78), int8] */;
  %466 = sin(%463) /* ty=Tensor[(10, 78), float32] */;
  (%464, %465, %466)
}

def @func_4596() -> Tensor[(1, 10, 11), float32] {
  @func_4475() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_13046(%var_13044: Tensor[(780), float64]) -> (Tensor[(?, 10, 11), uint64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), int64], Tensor[(770), float32]) {
  @func_13043(%var_13044) /* ty=(Tensor[(?, 10, 11), uint64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), int64], Tensor[(770), float32]) */
}

def @func_14835(%var_14809: Tensor[(108, 2), uint8]) -> (Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64], Tensor[(108, 2), uint8]) {
  %467 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %468 = cast(%var_14809, dtype="uint8") /* ty=Tensor[(108, 2), uint8] */;
  %469 = reshape(%468, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
  %470 = @func_9172(%469) /* ty=(Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) */;
  %471 = %467.0;
  %472 = %470.3;
  (%471, %472, %var_14809)
}

def @func_15734() -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
  %477 = fn () -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
    %473 = @func_15315() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */;
    %474 = @func_14314() /* ty=(Tensor[(10, 78), float64],) */;
    %475 = %473.1;
    %476 = %474.0;
    (%475, %476)
  };
  %477() /* ty=(Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) */
}

def @func_4191(%var_4189: Tensor[(4, 15, 9), int32], %var_4190: Tensor[(4, 15, 9), int32]) -> Tensor[(4, 15, 9), int32] {
  %482 = fn (%var_4168: Tensor[(4, 15, 9), int32], %var_4169: Tensor[(4, 15, 9), int32]) -> Tensor[(4, 15, 9), int32] {
    %478 = cast(%var_4169, dtype="int32") /* ty=Tensor[(4, 15, 9), int32] */;
    %479 = shape_of(%var_4168, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%var_4168, dtype="int32") /* ty=Tensor[(4, 15, 9), int32] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    add(%480, %481) /* ty=Tensor[(4, 15, 9), int32] */
  };
  %482(%var_4189, %var_4190) /* ty=Tensor[(4, 15, 9), int32] */
}

def @func_16593() -> (Tensor[(12, 12, 13), bool],) {
  %485 = fn () -> (Tensor[(12, 12, 13), bool],) {
    %483 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
    %484 = %483.0;
    (%484,)
  };
  %485() /* ty=(Tensor[(12, 12, 13), bool],) */
}

def @func_2759() -> Tensor[(1, 10, 11), float32] {
  %486 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %486() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9087() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
  %493 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) {
    %487 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %488 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %489 = reshape(%488, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
    %490 = @func_613(%489) /* ty=(Tensor[(16, 3, 3), float64],) */;
    %491 = %487.0;
    %492 = %490.0;
    (%491, %492, meta[relay.Constant][23] /* ty=Tensor[(144), float64] */)
  };
  %493() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */
}

def @func_16533() -> (Tensor[(1, 10, 11), float32],) {
  %496 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %494 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
    %495 = %494.0;
    (%495,)
  };
  %496() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_7819() -> (Tensor[(1, 10, 11), float32],) {
  @func_7817() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_1285(%var_1243: Tensor[(8, 10, 1), bool], %var_1244: Tensor[(8, 10, 15), bool], %var_1278: Tensor[(8, 10, 15), bool]) -> (Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) {
  %497 = cast(%var_1243, dtype="bool") /* ty=Tensor[(8, 10, 1), bool] */;
  %498 = cast(%var_1244, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %499 = logical_and(%497, %498) /* ty=Tensor[(8, 10, 15), bool] */;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
  %501 = cast(%var_1278, dtype="uint16") /* ty=Tensor[(8, 10, 15), uint16] */;
  %502 = shape_of(%var_1244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_1244, dtype="uint16") /* ty=Tensor[(8, 10, 15), uint16] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %505 = acos(%500) /* ty=Tensor[(8, 10, 15), float64] */;
  %506 = bitwise_and(%503, %504) /* ty=Tensor[(8, 10, 15), uint16] */;
  (%505, %506)
}

def @func_8115(%var_8074: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %507 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %508 = cast(%var_8074, dtype="float64") /* ty=Tensor[(780), float64] */;
  %509 = reshape(%508, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %510 = @func_4788(%509) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) */;
  %511 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %512 = %507.0;
  %513 = %510.0;
  %514 = %511.0;
  (%512, %513, %var_8074, %514)
}

def @func_17002() -> Tensor[(1, 10, 11), float32] {
  %515 = @func_15436() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) */;
  %515.0
}

def @func_5519() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_3743() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %516 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %517 = cast(meta[relay.Constant][24] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %518 = reshape(%517, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %519 = @func_3428(%518) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) */;
  %520 = %516.0;
  %521 = %519.0;
  (%520, %521, meta[relay.Constant][24] /* ty=Tensor[(780), float64] */)
}

def @func_10068() -> (Tensor[(?, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(660), float32]) {
  @func_10066() /* ty=(Tensor[(?, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1200), bool], Tensor[(80), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(660), float32]) */
}

def @func_8285(%var_8267: Tensor[(540), int32]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) {
  %522 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %523 = cast(%var_8267, dtype="int32") /* ty=Tensor[(540), int32] */;
  %524 = cast(%var_8267, dtype="int32") /* ty=Tensor[(540), int32] */;
  %525 = reshape(%523, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %526 = reshape(%524, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), int32] */;
  %527 = %522.0;
  %528 = @func_4188(%525, %526) /* ty=Tensor[(4, 15, 9), int32] */;
  (%527, %528, %var_8267)
}

def @func_6390() -> (Tensor[(6, 10, 11), uint16], Tensor[(6, 10, 11), float64], Tensor[(10, 78), float64]) {
  %529 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="uint16") /* ty=Tensor[(1, 10, 11), uint16] */;
  %532 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 10, 11), float32] */, dtype="uint16") /* ty=Tensor[(6, 10, 11), uint16] */;
  %533 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %535 = atan(%534) /* ty=Tensor[(10, 78), float32] */;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %537 = right_shift(%531, %532) /* ty=Tensor[(6, 10, 11), uint16] */;
  %538 = cast(%537, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %539 = reshape(%536, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %540 = reshape(%538, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %541 = @func_4242(%539, %540) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %542 = cast(%535, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %543 = %541.2;
  %544 = asin(%542) /* ty=Tensor[(10, 78), float64] */;
  (%537, %543, %544)
}

def @func_11926() -> Tensor[(12, 12, 13), bool] {
  %545 = @func_8905() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %545.0
}

def @func_2371(%var_2369: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
  @func_2368(%var_2369) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */
}

def @func_2836() -> Tensor[(1, 10, 11), float32] {
  %546 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %546() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_8986() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_3647() -> (Tensor[(1, 10, 11), float32],) {
  @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_11071(%var_11064: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool], float64, Tensor[(720), float64]) {
  %547 = @func_7817() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %548 = cast(-5.54927f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %549 = cast(%var_11064, dtype="float64") /* ty=Tensor[(720), float64] */;
  %550 = reshape(%548, newshape=[]) /* ty=float64 */;
  %551 = reshape(%549, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %552 = @func_10413(%550, %551) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) */;
  %553 = %547.0;
  %554 = @func_10268() /* ty=Tensor[(1, 10, 11), float32] */;
  %555 = %552.4;
  (%553, %554, %555, -5.54927f64 /* ty=float64 */, %var_11064)
}

def @func_14034() -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
  %569 = fn () -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
    %556 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %557 = cast(meta[relay.Constant][26] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %558 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 63), bool] */, dtype="bool") /* ty=Tensor[(5, 63), bool] */;
    %559 = reshape(%557, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
    %560 = reshape(%558, newshape=[105, 3]) /* ty=Tensor[(105, 3), bool] */;
    %561 = @func_12909(%559, %560) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) */;
    %562 = @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %563 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
    %564 = @func_13729() /* ty=Tensor[(5, 10, 11), uint8] */;
    %565 = %556.0;
    %566 = %561.1;
    %567 = %562.1;
    %568 = %563.0;
    (%564, %565, %566, meta[relay.Constant][26] /* ty=Tensor[(1430), float32] */, meta[relay.Constant][27] /* ty=Tensor[(5, 63), bool] */, %567, %568)
  };
  %569() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */
}

def @func_11372() -> (Tensor[(1, 10, 11), float32],) {
  @func_11370() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_7269(%var_7266: Tensor[(140), float64], %var_7267: Tensor[(432), float32], %var_7268: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) {
  %599 = fn (%var_7208: Tensor[(140), float64], %var_7253: Tensor[(432), float32], %var_7254: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) {
    %570 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %571 = cast(%var_7208, dtype="float64") /* ty=Tensor[(140), float64] */;
    %572 = cast(meta[relay.Constant][28] /* ty=Tensor[(143, 10), float32] */, dtype="float32") /* ty=Tensor[(143, 10), float32] */;
    %573 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %574 = cast(meta[relay.Constant][28] /* ty=Tensor[(143, 10), float32] */, dtype="float32") /* ty=Tensor[(143, 10), float32] */;
    %575 = reshape(%571, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %576 = reshape(%572, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
    %577 = reshape(%573, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
    %578 = reshape(%574, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
    %579 = @func_2653(%575, %576, %577, %578) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
    %580 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
    %581 = %580.3;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(5, 10, 11), float64] */;
    %583 = %579.4;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(13, 10, 11), float32] */;
    %585 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
    %586 = reshape(%584, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
    %587 = reshape(%585, newshape=[315]) /* ty=Tensor[(315), bool] */;
    %588 = @func_3304(%586, %587) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
    %589 = cast(%var_7253, dtype="float32") /* ty=Tensor[(432), float32] */;
    %590 = cast(%var_7254, dtype="float64") /* ty=Tensor[(144), float64] */;
    %591 = reshape(%589, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %592 = reshape(%590, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %593 = @func_1364(%591, %592) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
    %594 = %570.0;
    %595 = atanh(%582) /* ty=Tensor[(5, 10, 11), float64] */;
    %596 = %588.3;
    %597 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    %598 = %593.2;
    (%594, %583, %var_7208, meta[relay.Constant][28] /* ty=Tensor[(143, 10), float32] */, meta[relay.Constant][29] /* ty=Tensor[(315), bool] */, %595, %596, %597, %598, %var_7253, %var_7254)
  };
  %599(%var_7266, %var_7267, %var_7268) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(143, 10), float32], Tensor[(315), bool], Tensor[(5, 10, 11), float64], Tensor[(13, 10, 11), bool], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(432), float32], Tensor[(144), float64]) */
}

def @func_7403(%var_7402: Tensor[(12, 16, 16), float32]) -> Tensor[(12, 16, 16), float32] {
  %603 = fn (%var_7339: Tensor[(12, 16, 16), float32]) -> Tensor[(12, 16, 16), float32] {
    %600 = cast(%var_7339, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
    %601 = cosh(%600) /* ty=Tensor[(12, 16, 16), float32] */;
    %602 = cast(%601, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
    asinh(%602) /* ty=Tensor[(12, 16, 16), float32] */
  };
  %603(%var_7402) /* ty=Tensor[(12, 16, 16), float32] */
}

def @func_3508() -> (Tensor[(1, 10, 11), float32],) {
  %605 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %604 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    (%604,)
  };
  %605() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_13434() -> (Tensor[(10, 78), float64],) {
  @func_13432() /* ty=(Tensor[(10, 78), float64],) */
}

def @func_11595() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) {
  @func_11593() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) */
}

def @func_13224() -> Tensor[(1, 10, 11), float32] {
  @func_13222() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_14423() -> Tensor[(6, 10, 11), float64] {
  @func_14421() /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_5272() -> (Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %606 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %607 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %608 = atanh(%606) /* ty=Tensor[(4, 3, 4), float64] */;
  %609 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
  %610 = %607.0;
  (%608, %609, %610)
}

def @func_10852(%var_10850: Tensor[(15, 12, 4), uint32], %var_10851: Tensor[(15, 12, 4), uint32]) -> (Tensor[(15, 12, 4), uint32],) {
  %616 = fn (%var_10844: Tensor[(15, 12, 4), uint32], %var_10845: Tensor[(15, 12, 4), uint32]) -> (Tensor[(15, 12, 4), uint32],) {
    %611 = cast(%var_10845, dtype="uint32") /* ty=Tensor[(15, 12, 4), uint32] */;
    %612 = shape_of(%var_10844, dtype="int32") /* ty=Tensor[(3), int32] */;
    %613 = cast(%var_10844, dtype="uint32") /* ty=Tensor[(15, 12, 4), uint32] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %615 = bitwise_xor(%613, %614) /* ty=Tensor[(15, 12, 4), uint32] */;
    (%615,)
  };
  %616(%var_10850, %var_10851) /* ty=(Tensor[(15, 12, 4), uint32],) */
}

def @func_7782(%var_7780: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
  @func_7779(%var_7780) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */
}

def @func_15436() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(315), bool]) {
  %617 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %618 = cast(meta[relay.Constant][31] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %619 = cast(meta[relay.Constant][32] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %620 = reshape(%618, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %621 = reshape(%619, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %622 = @func_3304(%620, %621) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */;
  %623 = %617.0;
  %624 = %622.1;
  (%623, %624, meta[relay.Constant][31] /* ty=Tensor[(1430), float32] */, meta[relay.Constant][32] /* ty=Tensor[(315), bool] */)
}

def @func_13481(%var_13478: Tensor[(60, 12), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], float64, Tensor[(60, 12), float64]) {
  %625 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %626 = cast(-1.60424f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %627 = cast(%var_13478, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %628 = reshape(%626, newshape=[]) /* ty=float64 */;
  %629 = reshape(%627, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %630 = @func_10413(%628, %629) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) */;
  %631 = %625.0;
  %632 = %630.1;
  (%631, %632, -1.60424f64 /* ty=float64 */, %var_13478)
}

def @func_4476() -> Tensor[(1, 10, 11), float32] {
  %634 = fn () -> Tensor[(1, 10, 11), float32] {
    %633 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %633.0
  };
  %634() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_10175(%var_10173: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  @func_10172(%var_10173) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_10539(%var_10526: Tensor[(1, 10, 16), float32], %var_10527: Tensor[(1, 10, 16), float32]) -> Tensor[(?, 10, 16), float32] {
  %635 = cast(%var_10527, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %636 = shape_of(%var_10526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%var_10526, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%637, %638) /* ty=Tensor[(?, 10, 16), float32] */
}

def @func_13081(%var_13075: Tensor[(9, 3, 6), int8]) -> (Tensor[(9, 3, 6), bool],) {
  %639 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 3, 6), int8] */, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %640 = shape_of(%var_13075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_13075, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %643 = greater(%641, %642) /* ty=Tensor[(9, 3, 6), bool] */;
  (%643,)
}

def @func_14403() -> (Tensor[(?, 10, 11), uint64],) {
  %644 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %645 = %644.2;
  (%645,)
}

def @func_6503(%var_6502: Tensor[(330), float32]) -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) {
  %654 = fn (%var_6474: Tensor[(330), float32]) -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) {
    %646 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
    %647 = cast(%var_6474, dtype="float32") /* ty=Tensor[(330), float32] */;
    %648 = reshape(%647, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %649 = @func_6077(%648) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) */;
    %650 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
    %651 = %646.0;
    %652 = %649.0;
    %653 = %650.3;
    (%651, %652, %var_6474, %653)
  };
  %654(%var_6502) /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(144), float64]) */
}

def @func_3152() -> Tensor[(10, 78), float64] {
  %655 = @func_2805() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) */;
  %655.2
}

def @func_5718() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
  @func_5716() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) */
}

def @func_14942() -> (Tensor[(1, 10, 11), float32],) {
  %658 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %656 = @func_9799() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %657 = %656.0;
    (%657,)
  };
  %658() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_4277() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_4275() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_2368(%var_2360: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
  %659 = cast(%var_2360, dtype="float64") /* ty=Tensor[(140), float64] */;
  %660 = reshape(%659, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %661 = @func_106(%660) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %662 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %663 = %661.0;
  (%662, %663, %var_2360)
}

def @func_16891(%var_16889: bool, %var_16890: Tensor[(4, 1, 6), bool]) -> (Tensor[(4, 1, 6), bool], Tensor[(1, 10, 11), float32]) {
  @func_16887(%var_16889, %var_16890) /* ty=(Tensor[(4, 1, 6), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_14772() -> (Tensor[(1, 10, 11), float32],) {
  %664 = @func_14113() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %665 = %664.0;
  (%665,)
}

def @func_15374(%var_15371: Tensor[(216), uint8], %var_15372: Tensor[(1, 144), float64], %var_15373: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool], Tensor[(216), uint8], Tensor[(1, 10, 11), float32], Tensor[(6, 63), float64], Tensor[(780), float64], Tensor[(330), float32], Tensor[(1, 144), float64]) {
  %686 = fn (%var_15331: Tensor[(216), uint8], %var_15347: Tensor[(1, 144), float64], %var_15349: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool], Tensor[(216), uint8], Tensor[(1, 10, 11), float32], Tensor[(6, 63), float64], Tensor[(780), float64], Tensor[(330), float32], Tensor[(1, 144), float64]) {
    %666 = @func_12610() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), uint8]) */;
    %667 = cast(%var_15331, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %668 = reshape(%667, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
    %669 = @func_9172(%668) /* ty=(Tensor[(?, 10, 11), bool], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64]) */;
    %670 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 63), float64] */, dtype="float64") /* ty=Tensor[(6, 63), float64] */;
    %671 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 63), float64] */, dtype="float64") /* ty=Tensor[(6, 63), float64] */;
    %672 = cast(%var_15347, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
    %673 = cast(meta[relay.Constant][35] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %674 = cast(%var_15349, dtype="float32") /* ty=Tensor[(330), float32] */;
    %675 = reshape(%670, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
    %676 = reshape(%671, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
    %677 = reshape(%672, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %678 = reshape(%673, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %679 = reshape(%674, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %680 = @func_14243(%675, %676, %677, %678, %679) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) */;
    %681 = cast(%var_15347, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
    %682 = %666.0;
    %683 = %669.0;
    %684 = %680.7;
    %685 = sigmoid(%681) /* ty=Tensor[(1, 144), float64] */;
    (%682, %683, %var_15331, %684, meta[relay.Constant][34] /* ty=Tensor[(6, 63), float64] */, meta[relay.Constant][35] /* ty=Tensor[(780), float64] */, %var_15349, %685)
  };
  %686(%var_15371, %var_15372, %var_15373) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool], Tensor[(216), uint8], Tensor[(1, 10, 11), float32], Tensor[(6, 63), float64], Tensor[(780), float64], Tensor[(330), float32], Tensor[(1, 144), float64]) */
}

def @func_9287(%var_9286: Tensor[(40), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) {
  %698 = fn (%var_9278: Tensor[(40), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) {
    %687 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %688 = cast(%var_9278, dtype="float64") /* ty=Tensor[(40), float64] */;
    %689 = cast(meta[relay.Constant][36] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %690 = cast(meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %691 = reshape(%688, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %692 = reshape(%689, newshape=[315]) /* ty=Tensor[(315), float64] */;
    %693 = reshape(%690, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %694 = @func_9032(%691, %692, %693) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
    %695 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
    %696 = %687.0;
    %697 = %694.7;
    (%695, %696, %697, %var_9278, meta[relay.Constant][36] /* ty=Tensor[(315), float64] */, meta[relay.Constant][37] /* ty=Tensor[(144), float64] */)
  };
  %698(%var_9286) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) */
}

def @func_7333(%var_7305: Tensor[(8, 14, 16), float64], %var_7314: Tensor[(8, 14, 16), float64]) -> (Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) {
  %699 = cast(meta[relay.Constant][38] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %700 = reshape(%699, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %701 = @func_2340(%700) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %702 = cast(%var_7305, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %703 = sin(%702) /* ty=Tensor[(8, 14, 16), float64] */;
  %704 = cast(%var_7314, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = cast(%703, dtype="uint16") /* ty=Tensor[(8, 14, 16), uint16] */;
  %709 = shape_of(%var_7305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%var_7305, dtype="uint16") /* ty=Tensor[(8, 14, 16), uint16] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %712 = %701.2;
  %713 = equal(%706, %707) /* ty=Tensor[(8, 14, 16), bool] */;
  %714 = multiply(%710, %711) /* ty=Tensor[(8, 14, 16), uint16] */;
  (%712, meta[relay.Constant][38] /* ty=Tensor[(80), bool] */, %713, %714)
}

def @func_15315() -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  %715 = @func_4982() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */;
  %716 = cast(meta[relay.Constant][39] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %717 = reshape(%716, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float32] */;
  %718 = @func_11347(%717) /* ty=(Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) */;
  %719 = %715.0;
  %720 = %718.0;
  (%719, %720, meta[relay.Constant][39] /* ty=Tensor[(990), float32] */)
}

def @func_16020() -> (Tensor[(1430), float32], Tensor[(1, 10, 11), float32]) {
  %721 = @func_14033() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(1430), float32], Tensor[(5, 63), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */;
  %722 = @func_5830() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %723 = %721.3;
  %724 = %722.0;
  (%723, %724)
}

def @func_13656(%var_13653: Tensor[(3, 9, 3), uint16], %var_13654: Tensor[(3, 9, 3), uint16], %var_13655: Tensor[(330), float32]) -> (Tensor[(3, 9, 3), uint16], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %733 = fn (%var_13622: Tensor[(3, 9, 3), uint16], %var_13623: Tensor[(3, 9, 3), uint16], %var_13630: Tensor[(330), float32]) -> (Tensor[(3, 9, 3), uint16], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
    %725 = cast(%var_13623, dtype="uint16") /* ty=Tensor[(3, 9, 3), uint16] */;
    %726 = shape_of(%var_13622, dtype="int32") /* ty=Tensor[(3), int32] */;
    %727 = cast(%var_13622, dtype="uint16") /* ty=Tensor[(3, 9, 3), uint16] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %729 = cast(%var_13630, dtype="float32") /* ty=Tensor[(330), float32] */;
    %730 = reshape(%729, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
    %731 = bitwise_or(%727, %728) /* ty=Tensor[(3, 9, 3), uint16] */;
    %732 = @func_3095(%730) /* ty=Tensor[(3, 10, 11), float32] */;
    (%731, %732, %var_13630)
  };
  %733(%var_13653, %var_13654, %var_13655) /* ty=(Tensor[(3, 9, 3), uint16], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */
}

def @func_2301(%var_2296: Tensor[(1, 10, 4), float64], %var_2297: Tensor[(105, 3), float64], %var_2298: Tensor[(140), float64], %var_2299: Tensor[(36, 12), float32], %var_2300: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) {
  %754 = fn (%var_2244: Tensor[(1, 10, 4), float64], %var_2254: Tensor[(105, 3), float64], %var_2255: Tensor[(140), float64], %var_2278: Tensor[(36, 12), float32], %var_2279: Tensor[(144), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) {
    %734 = cast(%var_2254, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
    %735 = cast(%var_2255, dtype="float64") /* ty=Tensor[(140), float64] */;
    %736 = reshape(%734, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float64] */;
    %737 = reshape(%735, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %738 = @func_210(%736, %737) /* ty=(Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
    %739 = cast(%var_2278, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
    %740 = cast(%var_2279, dtype="float64") /* ty=Tensor[(144), float64] */;
    %741 = reshape(%739, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %742 = reshape(%740, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %743 = @func_1364(%741, %742) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
    %744 = cast(%var_2244, dtype="float64") /* ty=Tensor[(1, 10, 4), float64] */;
    %745 = exp(%744) /* ty=Tensor[(1, 10, 4), float64] */;
    %746 = cast(%var_2244, dtype="int16") /* ty=Tensor[(1, 10, 4), int16] */;
    %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
    %748 = cast(%745, dtype="int16") /* ty=Tensor[(1, 10, 4), int16] */;
    %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %750 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    %751 = %738.0;
    %752 = %743.2;
    %753 = bitwise_and(%748, %749) /* ty=Tensor[(?, 10, 4), int16] */;
    (%750, %751, %var_2254, %var_2255, %752, %var_2278, %var_2279, %753)
  };
  %754(%var_2296, %var_2297, %var_2298, %var_2299, %var_2300) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(15, 3, 7), float64], Tensor[(105, 3), float64], Tensor[(140), float64], Tensor[(144), float64], Tensor[(36, 12), float32], Tensor[(144), float64], Tensor[(?, 10, 4), int16]) */
}

def @func_15795(%var_15780: Tensor[(140), float64], %var_15781: Tensor[(1430, 1), float32], %var_15782: Tensor[(315), bool]) -> (Tensor[(10, 78), float64], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1760), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %755 = cast(meta[relay.Constant][40] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %756 = reshape(%755, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), float32] */;
  %757 = @func_12313(%756) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) */;
  %758 = cast(%var_15780, dtype="float64") /* ty=Tensor[(140), float64] */;
  %759 = cast(%var_15781, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %760 = cast(%var_15782, dtype="bool") /* ty=Tensor[(315), bool] */;
  %761 = cast(%var_15781, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %762 = reshape(%758, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %763 = reshape(%759, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %764 = reshape(%760, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
  %765 = reshape(%761, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
  %766 = @func_2653(%762, %763, %764, %765) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
  %767 = @func_14113() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %768 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %769 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
  %770 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  %771 = %757.1;
  %772 = %766.1;
  %773 = %767.0;
  %774 = %768.0;
  (%769, %770, %771, meta[relay.Constant][40] /* ty=Tensor[(1760), float32] */, %772, %var_15780, %var_15781, %var_15782, %773, %774)
}

def @func_9770() -> (Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) {
  @func_9768() /* ty=(Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) */
}

def @func_15684(%var_15683: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(1, 10, 11), float32]) {
  %784 = fn (%var_15661: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(1, 10, 11), float32]) {
    %775 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
    %776 = shape_of(%var_15661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %777 = cast(%var_15661, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %779 = cast(%var_15661, dtype="float64") /* ty=Tensor[(6, 15, 9), float64] */;
    %780 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
    %781 = floor_mod(%777, %778) /* ty=Tensor[(6, 15, 9), float32] */;
    %782 = sqrt(%779) /* ty=Tensor[(6, 15, 9), float64] */;
    %783 = %780.0;
    (%781, %782, %783)
  };
  %784(%var_15683) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_15062() -> (Tensor[(1, 10, 11), float32],) {
  %785 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %786 = %785.0;
  (%786,)
}

def @func_5848() -> Tensor[(1, 10, 11), float32] {
  @func_5846() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_7539(%var_7519: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) {
  %787 = cast(%var_7519, dtype="bool") /* ty=Tensor[(80), bool] */;
  %788 = reshape(%787, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %789 = @func_6431(%788) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %790 = cast(%var_7519, dtype="bool") /* ty=Tensor[(80), bool] */;
  %791 = reshape(%790, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %792 = @func_2340(%791) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
  %793 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
  %794 = %789.0;
  %795 = %792.3;
  (%793, %794, %var_7519, %795)
}

def @func_16951() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_16949() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_4009(%var_4007: Tensor[(330), float32], %var_4008: Tensor[(780, 1), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(780), float64], Tensor[(780, 1), float64], Tensor[(?, 10, 11), bool], Tensor[(1, 660), float32], Tensor[(10, 78), float64]) {
  @func_4005(%var_4007, %var_4008) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(780), float64], Tensor[(780, 1), float64], Tensor[(?, 10, 11), bool], Tensor[(1, 660), float32], Tensor[(10, 78), float64]) */
}

def @func_4657() -> (Tensor[(1, 10, 11), float32],) {
  %797 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %796 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    (%796,)
  };
  %797() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_12279() -> (Tensor[(1, 10, 11), float32],) {
  @func_12277() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_13432() -> (Tensor[(10, 78), float64],) {
  %798 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
  (%798,)
}

def @func_5372(%var_5371: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) {
  %810 = fn (%var_5344: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) {
    %799 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %800 = %799.0;
    %801 = cast(%800, dtype="uint16") /* ty=Tensor[(1, 10, 11), uint16] */;
    %802 = cast(%var_5344, dtype="uint16") /* ty=Tensor[(16, 10, 11), uint16] */;
    %803 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %804 = cast(meta[relay.Constant][42] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
    %805 = reshape(%804, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %806 = @func_2340(%805) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
    %807 = bitwise_or(%801, %802) /* ty=Tensor[(16, 10, 11), uint16] */;
    %808 = %803.0;
    %809 = %806.0;
    (%807, %808, %809, meta[relay.Constant][42] /* ty=Tensor[(80), bool] */)
  };
  %810(%var_5371) /* ty=(Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) */
}

def @func_6116() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) {
  %820 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) {
    %811 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
    %812 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
    %813 = cast(%812, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %814 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%811, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %817 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
    %818 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
    %819 = logical_or(%815, %816) /* ty=Tensor[(?, 10, 11), bool] */;
    (%817, %818, %819)
  };
  %820() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */
}

def @func_16703() -> (Tensor[(6, 10, 11), float64], Tensor[(1, 10, 11), float32]) {
  %824 = fn () -> (Tensor[(6, 10, 11), float64], Tensor[(1, 10, 11), float32]) {
    %821 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %822 = @func_14508() /* ty=Tensor[(6, 10, 11), float64] */;
    %823 = %821.0;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(6, 10, 11), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_15918() -> Tensor[(1, 10, 11), float32] {
  %825 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
  %825.1
}

def @func_4246(%var_4244: Tensor[(780), float64], %var_4245: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) {
  @func_4242(%var_4244, %var_4245) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */
}

def @func_11964() -> Tensor[(1, 10, 11), float32] {
  @func_11962() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_2222() -> Tensor[(1, 10, 11), float32] {
  @func_2220() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_16119(%var_16116: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(6, 10, 11), float64], Tensor[(660), float32]) {
  %826 = @func_11593() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1792), float64], Tensor[(1, 10, 11), float32], Tensor[(8, 14, 16), float32], Tensor[(5, 10, 11), uint8], Tensor[(330), float32]) */;
  %827 = cast(meta[relay.Constant][43] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %828 = reshape(%827, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %829 = @func_589(%828) /* ty=Tensor[(13, 15, 4), float64] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
  %831 = cast(%var_16116, dtype="float32") /* ty=Tensor[(660), float32] */;
  %832 = reshape(%830, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %833 = reshape(%831, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %834 = @func_4242(%832, %833) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) */;
  %835 = @func_9719() /* ty=Tensor[(1, 10, 11), float32] */;
  %836 = %826.1;
  %837 = %834.2;
  (%835, %836, %829, meta[relay.Constant][43] /* ty=Tensor[(780), float64] */, %837, %var_16116)
}

def @func_16188(%var_16181: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %838 = @func_4275() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %839 = cast(%var_16181, dtype="float64") /* ty=Tensor[(780), float64] */;
  %840 = reshape(%839, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %841 = @func_11309(%840) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %842 = %838.0;
  %843 = %841.3;
  (%842, %843, %var_16181)
}

def @func_16830() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 144), float64], Tensor[(1, 10, 11), float32], Tensor[(540), int32], Tensor[(16, 3, 3), float32]) {
  @func_16828() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 144), float64], Tensor[(1, 10, 11), float32], Tensor[(540), int32], Tensor[(16, 3, 3), float32]) */
}

def @func_12645() -> (Tensor[(7, 11, 11), bool],) {
  %844 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 11), bool] */;
  %845 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(7, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(7, 11, 11), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %848 = logical_and(%846, %847) /* ty=Tensor[(7, 11, 11), bool] */;
  (%848,)
}

def @func_4615() -> Tensor[(10, 78), float64] {
  %851 = fn () -> Tensor[(10, 78), float64] {
    %849 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
    %850 = cast(%849, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
    exp(%850) /* ty=Tensor[(10, 78), float64] */
  };
  %851() /* ty=Tensor[(10, 78), float64] */
}

def @func_10969() -> (Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool]) {
  %852 = @func_9768() /* ty=(Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) */;
  %853 = @func_8136() /* ty=Tensor[(1, 10, 11), float32] */;
  %854 = %852.3;
  (%853, %854)
}

def @func_9800() -> (Tensor[(1, 10, 11), float32],) {
  %857 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %855 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %856 = %855.0;
    (%856,)
  };
  %857() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_13326(%var_13268: Tensor[(130, 6), float64], %var_13269: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(144), float64], Tensor[(130, 6), float64], Tensor[(140), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %858 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %859 = cast(%var_13268, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %860 = cast(%var_13269, dtype="float64") /* ty=Tensor[(140), float64] */;
  %861 = reshape(%858, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %862 = reshape(%859, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %863 = reshape(%860, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %864 = @func_2479(%861, %862, %863) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %865 = cast(%var_13268, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %866 = reshape(%865, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %867 = @func_11309(%866) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %868 = %867.2;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(780), float64] */;
  %870 = reshape(%869, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %871 = @func_8115(%870) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
  %872 = @func_13093() /* ty=Tensor[(1, 10, 11), float32] */;
  %873 = %864.5;
  %874 = %871.1;
  (%872, %873, meta[relay.Constant][46] /* ty=Tensor[(144), float64] */, %var_13268, %var_13269, %868, %874)
}

def @func_8663() -> Tensor[(1, 10, 11), float32] {
  %875 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_4080() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %875() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_8728() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) {
  %889 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) {
    %876 = cast(meta[relay.Constant][47] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %877 = reshape(%876, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %878 = @func_2368(%877) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
    %879 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %880 = %879.2;
    %881 = cast(%880, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
    %882 = cosh(%881) /* ty=Tensor[(10, 78), float64] */;
    %883 = cast(%882, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %884 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %885 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
    %886 = %878.0;
    %887 = sigmoid(%883) /* ty=Tensor[(10, 78), float32] */;
    %888 = %884.0;
    (%885, %886, meta[relay.Constant][47] /* ty=Tensor[(140), float64] */, %887, %888)
  };
  %889() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(10, 78), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_613(%var_609: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
  %890 = cast(%var_609, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %891 = log(%890) /* ty=Tensor[(16, 3, 3), float64] */;
  (%891,)
}

def @func_14774() -> (Tensor[(1, 10, 11), float32],) {
  @func_14772() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_3269() -> (Tensor[(1, 10, 11), float32],) {
  %894 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %892 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %893 = %892.0;
    (%893,)
  };
  %894() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_5085() -> (Tensor[(1, 10, 11), float32],) {
  %895 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
  (%895,)
}

def @func_14001(%var_13998: Tensor[(780), float64], %var_13999: Tensor[(140), float64], %var_14000: Tensor[(630), float32]) -> (Tensor[(780), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(12, 12, 13), bool], Tensor[(9, 5, 14), float64], Tensor[(630), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(1, 315), float64], Tensor[(144), float64], Tensor[(9, 10, 11), int32]) {
  %925 = fn (%var_13889: Tensor[(780), float64], %var_13890: Tensor[(140), float64], %var_13930: Tensor[(630), float32]) -> (Tensor[(780), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(12, 12, 13), bool], Tensor[(9, 5, 14), float64], Tensor[(630), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(1, 315), float64], Tensor[(144), float64], Tensor[(9, 10, 11), int32]) {
    %896 = cast(%var_13889, dtype="float64") /* ty=Tensor[(780), float64] */;
    %897 = cast(%var_13890, dtype="float64") /* ty=Tensor[(140), float64] */;
    %898 = reshape(%896, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %899 = reshape(%897, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %900 = @func_12179(%898, %899) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) */;
    %901 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
    %902 = cast(%var_13930, dtype="float32") /* ty=Tensor[(630), float32] */;
    %903 = cast(%var_13930, dtype="float32") /* ty=Tensor[(630), float32] */;
    %904 = reshape(%902, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float32] */;
    %905 = reshape(%903, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float32] */;
    %906 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %907 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %908 = cast(meta[relay.Constant][48] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %909 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 315), float64] */, dtype="float64") /* ty=Tensor[(1, 315), float64] */;
    %910 = cast(meta[relay.Constant][50] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %911 = reshape(%908, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %912 = reshape(%909, newshape=[315]) /* ty=Tensor[(315), float64] */;
    %913 = reshape(%910, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %914 = @func_9032(%911, %912, %913) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64]) */;
    %915 = @func_10113() /* ty=Tensor[(1, 10, 11), float32] */;
    %916 = cast(%915, dtype="int32") /* ty=Tensor[(1, 10, 11), int32] */;
    %917 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 10, 11), float32] */, dtype="int32") /* ty=Tensor[(9, 10, 11), int32] */;
    %918 = %900.4;
    %919 = %901.0;
    %920 = @func_9453(%904, %905) /* ty=Tensor[(9, 5, 14), float64] */;
    %921 = %906.0;
    %922 = %907.0;
    %923 = %914.1;
    %924 = logical_xor(%916, %917) /* ty=Tensor[(9, 10, 11), int32] */;
    (%918, %var_13889, %var_13890, %919, %920, %var_13930, %921, %922, %923, meta[relay.Constant][48] /* ty=Tensor[(40), float64] */, meta[relay.Constant][49] /* ty=Tensor[(1, 315), float64] */, meta[relay.Constant][50] /* ty=Tensor[(144), float64] */, %924)
  };
  %925(%var_13998, %var_13999, %var_14000) /* ty=(Tensor[(780), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(12, 12, 13), bool], Tensor[(9, 5, 14), float64], Tensor[(630), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(1, 315), float64], Tensor[(144), float64], Tensor[(9, 10, 11), int32]) */
}

def @func_13189(%var_13188: Tensor[(770), float32]) -> (Tensor[(780), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
  %932 = fn (%var_13180: Tensor[(770), float32]) -> (Tensor[(780), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
    %926 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %927 = cast(%var_13180, dtype="float32") /* ty=Tensor[(770), float32] */;
    %928 = reshape(%927, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
    %929 = @func_7156(%928) /* ty=(Tensor[(7, 10, 11), float64],) */;
    %930 = %926.0;
    %931 = %929.0;
    (%930, %931, %var_13180)
  };
  %932(%var_13188) /* ty=(Tensor[(780), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */
}

def @func_16122(%var_16120: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(6, 10, 11), float64], Tensor[(660), float32]) {
  @func_16119(%var_16120) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(6, 10, 11), float64], Tensor[(660), float32]) */
}

def @func_10561() -> (Tensor[(1, 10, 11), float32],) {
  @func_10559() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_7048(%var_7046: Tensor[(1430), float32], %var_7047: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) {
  @func_7044(%var_7046, %var_7047) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) */
}

def @func_3584() -> Tensor[(1, 10, 11), float32] {
  @func_2758() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_3712() -> Tensor[(1, 10, 11), float32] {
  %934 = fn () -> Tensor[(1, 10, 11), float32] {
    %933 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %933.0
  };
  %934() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_10416(%var_10414: float64, %var_10415: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) {
  %950 = fn (%var_10402: float64, %var_10403: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) {
    %935 = @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %936 = cast(%var_10402, dtype="float64") /* ty=float64 */;
    %937 = cast(%var_10403, dtype="float64") /* ty=Tensor[(720), float64] */;
    %938 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 156), float64] */, dtype="float64") /* ty=Tensor[(5, 156), float64] */;
    %939 = reshape(%936, newshape=[]) /* ty=float64 */;
    %940 = reshape(%937, newshape=[15, 8, 6]) /* ty=Tensor[(15, 8, 6), float64] */;
    %941 = reshape(%938, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %942 = @func_4934(%939, %940, %941) /* ty=(Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) */;
    %943 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %944 = cast(%var_10402, dtype="bool") /* ty=bool */;
    %945 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 156), float64] */, dtype="bool") /* ty=Tensor[(5, 156), bool] */;
    %946 = %935.0;
    %947 = %942.1;
    %948 = %943.0;
    %949 = greater_equal(%944, %945) /* ty=Tensor[(5, 156), bool] */;
    (%946, %947, %var_10403, %948, %949)
  };
  %950(%var_10414, %var_10415) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(720), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool]) */
}

def @func_10971() -> (Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool]) {
  @func_10969() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool]) */
}

def @func_4005(%var_3972: Tensor[(330), float32], %var_3990: Tensor[(780, 1), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(780), float64], Tensor[(780, 1), float64], Tensor[(?, 10, 11), bool], Tensor[(1, 660), float32], Tensor[(10, 78), float64]) {
  %951 = cast(%var_3972, dtype="float32") /* ty=Tensor[(330), float32] */;
  %952 = reshape(%951, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %953 = cast(%var_3990, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %954 = reshape(%953, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %955 = @func_3428(%954) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) */;
  %956 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %957 = cast(%956, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %958 = cast(%var_3990, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %959 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 660), float32] */, dtype="float32") /* ty=Tensor[(1, 660), float32] */;
  %960 = reshape(%957, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %961 = reshape(%958, newshape=[130, 6]) /* ty=Tensor[(130, 6), float64] */;
  %962 = reshape(%959, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float32] */;
  %963 = @func_3349(%960, %961, %962) /* ty=(Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) */;
  %964 = @func_3095(%952) /* ty=Tensor[(3, 10, 11), float32] */;
  %965 = %955.2;
  %966 = %963.3;
  %967 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  (%956, %964, %var_3972, %965, %var_3990, %966, meta[relay.Constant][53] /* ty=Tensor[(1, 660), float32] */, %967)
}

def @func_14509() -> Tensor[(6, 10, 11), float64] {
  %968 = fn () -> Tensor[(6, 10, 11), float64] {
    @func_14421() /* ty=Tensor[(6, 10, 11), float64] */
  };
  %968() /* ty=Tensor[(6, 10, 11), float64] */
}

def @func_11074(%var_11072: Tensor[(720), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool], float64, Tensor[(720), float64]) {
  @func_11071(%var_11072) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 156), bool], float64, Tensor[(720), float64]) */
}

def @func_15064() -> (Tensor[(1, 10, 11), float32],) {
  @func_15062() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_3745() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */
}

def @func_2484(%var_2481: Tensor[(144), float64], %var_2482: Tensor[(390, 2), float64], %var_2483: Tensor[(5, 28), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) {
  @func_2479(%var_2481, %var_2482, %var_2483) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */
}

def @func_6842() -> (Tensor[(1, 10, 11), float32],) {
  %969 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %970 = %969.0;
  (%970,)
}

def @func_14448(%var_14438: uint64, %var_14439: Tensor[(1, 16, 7), uint64]) -> Tensor[(1, 16, 7), bool] {
  %971 = cast(%var_14438, dtype="bool") /* ty=bool */;
  %972 = cast(%var_14439, dtype="bool") /* ty=Tensor[(1, 16, 7), bool] */;
  equal(%971, %972) /* ty=Tensor[(1, 16, 7), bool] */
}

def @func_4144() -> Tensor[(1, 10, 11), float32] {
  %973 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %973.0
}

def @func_4598() -> Tensor[(1, 10, 11), float32] {
  @func_4596() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6246() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %976 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %974 = @func_5887() /* ty=Tensor[(1, 10, 11), float32] */;
    %975 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    (%974, %975)
  };
  %976() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_12460() -> (Tensor[(1, 10, 11), float32],) {
  %979 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %977 = @func_12277() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %978 = %977.0;
    (%978,)
  };
  %979() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_15982() -> (Tensor[(140), float64],) {
  %982 = fn () -> (Tensor[(140), float64],) {
    %980 = @func_15037() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) */;
    %981 = %980.2;
    (%981,)
  };
  %982() /* ty=(Tensor[(140), float64],) */
}

def @func_5159() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_12929() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %983 = @func_11430() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %984 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %985 = %983.0;
  %986 = %984.0;
  (%985, %986)
}

def @func_6844() -> (Tensor[(1, 10, 11), float32],) {
  @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_11637() -> (Tensor[(144), float64],) {
  @func_11635() /* ty=(Tensor[(144), float64],) */
}

def @func_8930() -> Tensor[(1, 10, 11), float32] {
  @func_8928() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9768() -> (Tensor[(?, 10, 11), float64], Tensor[(10, 78), bool], Tensor[(1, 780), float64], Tensor[(20, 4), bool], Tensor[(?, 10, 11), uint64]) {
  %987 = @func_4475() /* ty=Tensor[(1, 10, 11), float32] */;
  %988 = @func_3645() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %989 = %988.0;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %991 = shape_of(%987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%987, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %994 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 780), float64] */, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
  %995 = cast(meta[relay.Constant][55] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %996 = reshape(%994, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %997 = reshape(%995, newshape=[20, 4]) /* ty=Tensor[(20, 4), bool] */;
  %998 = @func_7666(%996, %997) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), bool], Tensor[(10, 78), float32], Tensor[(8, 10, 15), float64], Tensor[(20, 4), bool]) */;
  %999 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %1000 = floor_mod(%992, %993) /* ty=Tensor[(?, 10, 11), float64] */;
  %1001 = %998.3;
  %1002 = %999.2;
  (%1000, %1001, meta[relay.Constant][54] /* ty=Tensor[(1, 780), float64] */, meta[relay.Constant][55] /* ty=Tensor[(20, 4), bool] */, %1002)
}

def @func_3861() -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
  %1007 = fn () -> (Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
    %1003 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
    %1004 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1005 = %1003.1;
    %1006 = %1004.0;
    (%1005, %1006)
  };
  %1007() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */
}

def @func_1222(%var_1205: Tensor[(780), float64]) -> (Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) {
  %1008 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %1009 = cast(%var_1205, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1010 = reshape(%1009, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %1011 = cast(%var_1205, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1012 = reshape(%1011, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %1013 = acosh(%1008) /* ty=Tensor[(16, 10, 10), float32] */;
  %1014 = @func_589(%1010) /* ty=Tensor[(13, 15, 4), float64] */;
  %1015 = @func_589(%1012) /* ty=Tensor[(13, 15, 4), float64] */;
  (%1013, %1014, %var_1205, %1015)
}

def @func_8636() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1020 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %1016 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
    %1017 = @func_6906() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1018 = %1016.1;
    %1019 = %1017.1;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_3190(%var_3189: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float32] {
  %1024 = fn (%var_3183: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float32] {
    %1021 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1023 = cast(%var_3183, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
    power(%1022, %1023) /* ty=Tensor[(7, 10, 11), float32] */
  };
  %1024(%var_3189) /* ty=Tensor[(7, 10, 11), float32] */
}

def @func_9720() -> Tensor[(1, 10, 11), float32] {
  %1026 = fn () -> Tensor[(1, 10, 11), float32] {
    %1025 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
    %1025.0
  };
  %1026() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_5416() -> Tensor[(10, 78), float64] {
  @func_5414() /* ty=Tensor[(10, 78), float64] */
}

def @func_4536() -> Tensor[(1, 10, 11), float32] {
  @func_4144() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_13718() -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %1030 = fn () -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
    %1027 = @func_6030() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) */;
    %1028 = %1027.1;
    %1029 = @func_6817() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1028, %1029)
  };
  %1030() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_17004() -> Tensor[(1, 10, 11), float32] {
  @func_17002() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_13516() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_13514() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_6716() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) {
  %1043 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) {
    %1031 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1032 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1033 = %1032.0;
    %1034 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1035 = %1034.0;
    %1036 = cast(%1035, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
    %1037 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1038 = cast(%1033, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
    %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1040 = %1031.0;
    %1041 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
    %1042 = bitwise_or(%1038, %1039) /* ty=Tensor[(?, 10, 11), uint64] */;
    (%1040, %1041, %1042)
  };
  %1043() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */
}

def @func_13165(%var_13164: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) {
  %1047 = fn (%var_13152: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) {
    %1044 = cast(%var_13152, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
    %1045 = atan(%1044) /* ty=Tensor[(11, 5, 13), float64] */;
    %1046 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1045, %1046)
  };
  %1047(%var_13164) /* ty=(Tensor[(11, 5, 13), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_15317() -> (Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) {
  @func_15315() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(9, 10, 11), float32], Tensor[(990), float32]) */
}

def @func_8479() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1058 = fn () -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %1048 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
    %1049 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1050 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1051 = @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1052 = %1048.0;
    %1053 = %1049.0;
    %1054 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
    %1055 = %1050.0;
    %1056 = %1051.0;
    %1057 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1052, %1053, %1054, %1055, %1056, %1057)
  };
  %1058() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_15860() -> (Tensor[(10, 78), float64], Tensor[(7, 11, 11), bool]) {
  %1062 = fn () -> (Tensor[(10, 78), float64], Tensor[(7, 11, 11), bool]) {
    %1059 = @func_12645() /* ty=(Tensor[(7, 11, 11), bool],) */;
    %1060 = @func_9883() /* ty=Tensor[(10, 78), float64] */;
    %1061 = %1059.0;
    (%1060, %1061)
  };
  %1062() /* ty=(Tensor[(10, 78), float64], Tensor[(7, 11, 11), bool]) */
}

def @func_11776(%var_11773: Tensor[(144), float64], %var_11774: Tensor[(780), float64], %var_11775: Tensor[(720), uint32]) -> (Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 28), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(15, 12, 4), uint32], Tensor[(720), uint32]) {
  @func_11771(%var_11773, %var_11774, %var_11775) /* ty=(Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 28), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(15, 12, 4), uint32], Tensor[(720), uint32]) */
}

def @func_4938(%var_4935: float64, %var_4936: Tensor[(15, 8, 6), float64], %var_4937: Tensor[(780), float64]) -> (Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) {
  %1077 = fn (%var_4867: float64, %var_4868: Tensor[(15, 8, 6), float64], %var_4911: Tensor[(780), float64]) -> (Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) {
    %1063 = cast(%var_4867, dtype="float64") /* ty=float64 */;
    %1064 = cast(%var_4868, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
    %1065 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1066 = cast(%var_4911, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1067 = reshape(%1066, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
    %1068 = @func_589(%1067) /* ty=Tensor[(13, 15, 4), float64] */;
    %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
    %1070 = cosh(%1069) /* ty=Tensor[(13, 15, 4), float32] */;
    %1071 = cast(%1070, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
    %1072 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1073 = floor_divide(%1063, %1064) /* ty=Tensor[(15, 8, 6), float64] */;
    %1074 = %1065.0;
    %1075 = asinh(%1071) /* ty=Tensor[(13, 15, 4), float32] */;
    %1076 = %1072.0;
    (%1073, %1074, %var_4911, %1075, %1076)
  };
  %1077(%var_4935, %var_4936, %var_4937) /* ty=(Tensor[(15, 8, 6), float64], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(13, 15, 4), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_8602() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_8600() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_13095() -> Tensor[(1, 10, 11), float32] {
  @func_13093() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_9883() -> Tensor[(10, 78), float64] {
  @func_3152() /* ty=Tensor[(10, 78), float64] */
}

def @func_16165() -> (Tensor[(1, 10, 11), float32],) {
  %1078 = @func_6030() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_3933() -> Tensor[(1, 10, 11), float32] {
  @func_3584() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_7138(%var_7115: Tensor[(780), float64], %var_7116: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(390, 2), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1, 10, 11), float32]) {
  %1080 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1081 = cast(meta[relay.Constant][57] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1082 = cast(%var_7115, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1083 = cast(%var_7116, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1084 = reshape(%1081, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1085 = reshape(%1082, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %1086 = reshape(%1083, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %1087 = @func_2479(%1084, %1085, %1086) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %1088 = cast(meta[relay.Constant][58] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %1089 = reshape(%1088, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %1090 = @func_6431(%1089) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
  %1091 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1092 = %1080.0;
  %1093 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %1094 = %1087.4;
  %1095 = %1090.0;
  %1096 = %1091.0;
  (%1092, %1093, %1094, meta[relay.Constant][57] /* ty=Tensor[(144), float64] */, %var_7115, %var_7116, %1095, meta[relay.Constant][58] /* ty=Tensor[(20, 4), bool] */, %1096)
}

def @func_5414() -> Tensor[(10, 78), float64] {
  @func_3152() /* ty=Tensor[(10, 78), float64] */
}

def @func_3586() -> Tensor[(1, 10, 11), float32] {
  @func_3584() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_15638() -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
  %1100 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) {
    %1097 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
    %1098 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
    %1099 = %1097.0;
    (%1098, %1099)
  };
  %1100() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64]) */
}

def @func_3428(%var_3425: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) {
  %1101 = cast(%var_3425, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1102 = reshape(%1101, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
  %1103 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %1104 = @func_589(%1102) /* ty=Tensor[(13, 15, 4), float64] */;
  (%1103, %1104, %var_3425)
}

def @func_10775() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) {
  %1109 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) {
    %1105 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1106 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
    %1107 = %1105.0;
    %1108 = %1106.1;
    (%1107, %1108)
  };
  %1109() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8]) */
}

def @func_616(%var_614: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64],) {
  @func_613(%var_614) /* ty=(Tensor[(16, 3, 3), float64],) */
}

def @func_4983() -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) {
  %1118 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) {
    %1110 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1111 = cast(meta[relay.Constant][59] /* ty=Tensor[(108, 4), float32] */, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
    %1112 = cast(meta[relay.Constant][60] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1113 = reshape(%1111, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %1114 = reshape(%1112, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1115 = @func_1364(%1113, %1114) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
    %1116 = %1110.0;
    %1117 = %1115.1;
    (%1116, %1117, meta[relay.Constant][59] /* ty=Tensor[(108, 4), float32] */, meta[relay.Constant][60] /* ty=Tensor[(144), float64] */)
  };
  %1118() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(108, 4), float32], Tensor[(144), float64]) */
}

def @func_11504() -> (Tensor[(10, 78), float64],) {
  %1119 = @func_4614() /* ty=Tensor[(10, 78), float64] */;
  (%1119,)
}

def @func_8905() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  %1120 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
  %1121 = @func_4275() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1122 = %1120.0;
  %1123 = %1121.0;
  (%1122, %1123)
}

def @func_7542(%var_7540: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) {
  @func_7539(%var_7540) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(1200), bool]) */
}

def @func_16078() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(2, 5, 7), float32], Tensor[(70), float32], Tensor[(1, 10, 11), float32]) {
  %1135 = fn () -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(2, 5, 7), float32], Tensor[(70), float32], Tensor[(1, 10, 11), float32]) {
    %1124 = cast(meta[relay.Constant][61] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1125 = reshape(%1124, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %1126 = @func_9285(%1125) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(144), float64], Tensor[(40), float64], Tensor[(315), float64], Tensor[(144), float64]) */;
    %1127 = cast(meta[relay.Constant][62] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1128 = reshape(%1127, newshape=[2, 5, 7]) /* ty=Tensor[(2, 5, 7), float32] */;
    %1129 = @func_8371(%1128) /* ty=(Tensor[(2, 5, 7), float32],) */;
    %1130 = @func_6611() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1131 = @func_5414() /* ty=Tensor[(10, 78), float64] */;
    %1132 = %1126.0;
    %1133 = %1129.0;
    %1134 = %1130.0;
    (%1131, %1132, meta[relay.Constant][61] /* ty=Tensor[(40), float64] */, %1133, meta[relay.Constant][62] /* ty=Tensor[(70), float32] */, %1134)
  };
  %1135() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(40), float64], Tensor[(2, 5, 7), float32], Tensor[(70), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_3353(%var_3350: Tensor[(1, 10, 11), float32], %var_3351: Tensor[(130, 6), float64], %var_3352: Tensor[(6, 10, 11), float32]) -> (Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) {
  %1155 = fn (%var_3319: Tensor[(1, 10, 11), float32], %var_3328: Tensor[(130, 6), float64], %var_3343: Tensor[(6, 10, 11), float32]) -> (Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) {
    %1136 = @func_3115() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1137 = %1136.0;
    %1138 = cast(%var_3319, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1139 = shape_of(%1137, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1140 = cast(%1137, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1142 = cast(%var_3328, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
    %1143 = reshape(%1142, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %1144 = @func_1222(%1143) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
    %1145 = cast(%1137, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %1146 = shape_of(%var_3319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1147 = cast(%var_3319, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1149 = cast(%1137, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
    %1150 = cast(%var_3343, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
    %1151 = floor_divide(%1140, %1141) /* ty=Tensor[(?, 10, 11), float32] */;
    %1152 = %1144.0;
    %1153 = not_equal(%1147, %1148) /* ty=Tensor[(?, 10, 11), bool] */;
    %1154 = multiply(%1149, %1150) /* ty=Tensor[(6, 10, 11), float64] */;
    (%1151, %1152, %var_3328, %1153, %1154)
  };
  %1155(%var_3350, %var_3351, %var_3352) /* ty=(Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) */
}

def @func_14528() -> Tensor[(1, 10, 11), float32] {
  %1156 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_9719() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %1156() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6434(%var_6432: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) {
  @func_6431(%var_6432) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */
}

def @func_7779(%var_7766: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(1, 10, 11), float32]) {
  %1157 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1158 = %1157.0;
  %1159 = cast(%1158, dtype="uint8") /* ty=Tensor[(1, 10, 11), uint8] */;
  %1160 = cast(%var_7766, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
  %1161 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1162 = bitwise_xor(%1159, %1160) /* ty=Tensor[(16, 10, 11), uint8] */;
  %1163 = %1161.0;
  (%1162, %1163)
}

def @func_10808() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1170 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %1164 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1165 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
    %1166 = @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1167 = %1164.0;
    %1168 = %1165.0;
    %1169 = %1166.0;
    (%1167, %1168, %1169)
  };
  %1170() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_14314() -> (Tensor[(10, 78), float64],) {
  %1171 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %1172 = %1171.0;
  (%1172,)
}

def @func_15488() -> Tensor[(1, 10, 11), float32] {
  %1173 = @func_15208() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(432), float32]) */;
  %1173.0
}

def @func_9885() -> Tensor[(10, 78), float64] {
  @func_9883() /* ty=Tensor[(10, 78), float64] */
}

def @func_12976() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_12974() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_13330(%var_13328: Tensor[(130, 6), float64], %var_13329: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(144), float64], Tensor[(130, 6), float64], Tensor[(140), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  @func_13326(%var_13328, %var_13329) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(144), float64], Tensor[(130, 6), float64], Tensor[(140), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_6935() -> Tensor[(1, 10, 11), float32] {
  %1174 = fn () -> Tensor[(1, 10, 11), float32] {
    @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
  };
  %1174() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_15114() -> (Tensor[(1, 10, 11), float32],) {
  %1177 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %1175 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1176 = %1175.0;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_2659(%var_2655: Tensor[(140), float64], %var_2656: Tensor[(13, 10, 11), float32], %var_2657: Tensor[(35, 9), bool], %var_2658: Tensor[(13, 10, 11), float32]) -> (Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) {
  @func_2653(%var_2655, %var_2656, %var_2657, %var_2658) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */
}

def @func_13730() -> Tensor[(5, 10, 11), uint8] {
  %1179 = fn () -> Tensor[(5, 10, 11), uint8] {
    %1178 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
    %1178.1
  };
  %1179() /* ty=Tensor[(5, 10, 11), uint8] */
}

def @func_8118(%var_8116: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  @func_8115(%var_8116) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_3645() -> (Tensor[(1, 10, 11), float32],) {
  %1180 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1181 = %1180.0;
  (%1181,)
}

def @func_12183(%var_12181: Tensor[(780), float64], %var_12182: Tensor[(140), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) {
  @func_12179(%var_12181, %var_12182) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(8, 18), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_14249(%var_14244: Tensor[(6, 9, 7), float64], %var_14245: Tensor[(6, 9, 7), float64], %var_14246: Tensor[(144), float64], %var_14247: Tensor[(780), float64], %var_14248: Tensor[(330), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) {
  %1199 = fn (%var_14192: Tensor[(6, 9, 7), float64], %var_14193: Tensor[(6, 9, 7), float64], %var_14206: Tensor[(144), float64], %var_14207: Tensor[(780), float64], %var_14217: Tensor[(330), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) {
    %1182 = cast(%var_14193, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
    %1183 = shape_of(%var_14192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1184 = cast(%var_14192, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
    %1185 = dyn.reshape(%1182, %1183, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1186 = cast(%var_14206, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1187 = cast(%var_14207, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1188 = cast(meta[relay.Constant][63] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %1189 = reshape(%1186, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1190 = reshape(%1187, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
    %1191 = reshape(%1188, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
    %1192 = @func_2479(%1189, %1190, %1191) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
    %1193 = cast(%var_14217, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1194 = reshape(%1193, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
    %1195 = divide(%1184, %1185) /* ty=Tensor[(6, 9, 7), float64] */;
    %1196 = %1192.2;
    %1197 = @func_3095(%1194) /* ty=Tensor[(3, 10, 11), float32] */;
    %1198 = @func_3711() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1195, %1196, %var_14206, %var_14207, meta[relay.Constant][63] /* ty=Tensor[(140), float64] */, %1197, %var_14217, %1198)
  };
  %1199(%var_14244, %var_14245, %var_14246, %var_14247, %var_14248) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(144), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(140), float64], Tensor[(3, 10, 11), float32], Tensor[(330), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_6030() -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(780), float64]) {
  %1200 = cast(meta[relay.Constant][64] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1201 = reshape(%1200, newshape=[780]) /* ty=Tensor[(780), float64] */;
  %1202 = @func_1222(%1201) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
  %1203 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
  %1204 = %1202.2;
  (%1203, %1204, meta[relay.Constant][64] /* ty=Tensor[(780), float64] */)
}

def @func_10442(%var_10429: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint64], Tensor[(1, 10, 11), float32]) {
  %1205 = @func_3584() /* ty=Tensor[(1, 10, 11), float32] */;
  %1206 = cast(%1205, dtype="uint64") /* ty=Tensor[(1, 10, 11), uint64] */;
  %1207 = cast(%var_10429, dtype="uint64") /* ty=Tensor[(16, 10, 11), uint64] */;
  %1208 = @func_4656() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1209 = bitwise_and(%1206, %1207) /* ty=Tensor[(16, 10, 11), uint64] */;
  %1210 = %1208.0;
  (%1209, %1210)
}

def @func_9588() -> (Tensor[(1, 10, 11), float32],) {
  @func_9586() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_12313(%var_12284: Tensor[(1760, 1), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) {
  %1211 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1212 = cast(%var_12284, dtype="float32") /* ty=Tensor[(1760, 1), float32] */;
  %1213 = reshape(%1212, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %1214 = @func_5370(%1213) /* ty=(Tensor[(16, 10, 11), uint16], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(80), bool]) */;
  %1215 = %1211.0;
  %1216 = %1214.2;
  (%1215, %1216, %var_12284)
}

def @func_4275() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1217 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1218 = %1217.0;
  %1219 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1218, %1219)
}

def @func_6077(%var_6056: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) {
  %1220 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1221 = cast(%var_6056, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1222 = reshape(%1221, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1223 = @func_4522(%1222) /* ty=(Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */;
  %1224 = %1220.0;
  %1225 = %1223.2;
  (%1224, %1225, %var_6056)
}

def @func_16450(%var_16449: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1234 = fn (%var_16412: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
    %1226 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
    %1227 = cast(%var_16412, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1228 = reshape(%1227, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %1229 = @func_1222(%1228) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */;
    %1230 = %1226.0;
    %1231 = %1229.0;
    %1232 = @func_14569() /* ty=Tensor[(1, 10, 11), float32] */;
    %1233 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1230, %1231, %var_16412, %1232, %1233)
  };
  %1234(%var_16449) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_5846() -> Tensor[(1, 10, 11), float32] {
  %1235 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1235.0
}

def @func_12316(%var_12314: Tensor[(1760, 1), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) {
  @func_12313(%var_12314) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1760, 1), float32]) */
}

def @func_6431(%var_6421: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) {
  %1236 = @func_6115() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), bool]) */;
  %1237 = cast(%var_6421, dtype="bool") /* ty=Tensor[(80), bool] */;
  %1238 = cast(meta[relay.Constant][65] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1239 = cast(meta[relay.Constant][65] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1240 = reshape(%1237, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
  %1241 = reshape(%1238, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1242 = reshape(%1239, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
  %1243 = @func_1285(%1240, %1241, %1242) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
  %1244 = %1236.1;
  %1245 = %1243.0;
  %1246 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
  (%1244, %1245, %var_6421, meta[relay.Constant][65] /* ty=Tensor[(1200), bool] */, %1246)
}

def @func_6015() -> (Tensor[(1, 10, 11), float32],) {
  %1247 = @func_4596() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1247,)
}

def @func_15554() -> (Tensor[(10, 78), float64],) {
  %1248 = @func_11504() /* ty=(Tensor[(10, 78), float64],) */;
  %1249 = %1248.0;
  (%1249,)
}

def @func_7337(%var_7335: Tensor[(8, 14, 16), float64], %var_7336: Tensor[(8, 14, 16), float64]) -> (Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) {
  @func_7333(%var_7335, %var_7336) /* ty=(Tensor[(80), bool], Tensor[(80), bool], Tensor[(8, 14, 16), bool], Tensor[(8, 14, 16), uint16]) */
}

def @func_8137() -> Tensor[(1, 10, 11), float32] {
  %1251 = fn () -> Tensor[(1, 10, 11), float32] {
    %1250 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1250.0
  };
  %1251() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_591(%var_590: Tensor[(13, 15, 4), float64]) -> Tensor[(13, 15, 4), float64] {
  %1253 = fn (%var_582: Tensor[(13, 15, 4), float64]) -> Tensor[(13, 15, 4), float64] {
    %1252 = cast(%var_582, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
    acos(%1252) /* ty=Tensor[(13, 15, 4), float64] */
  };
  %1253(%var_590) /* ty=Tensor[(13, 15, 4), float64] */
}

def @func_2220() -> Tensor[(1, 10, 11), float32] {
  @func_2168() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_12974() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1254 = @func_5157() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1255 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1256 = %1254.0;
  %1257 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  %1258 = %1255.0;
  (%1256, %1257, %1258)
}

def @func_5274() -> (Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_11052(%var_11050: Tensor[(10, 78), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(10, 78), uint8], Tensor[(?, 10, 11), int32], Tensor[(4, 3, 4), float64]) {
  @func_11049(%var_11050) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), uint8], Tensor[(?, 10, 11), int32], Tensor[(4, 3, 4), float64]) */
}

def @func_7459() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) {
  @func_7457() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) */
}

def @func_7158(%var_7157: Tensor[(7, 10, 11), float32]) -> (Tensor[(7, 10, 11), float64],) {
  %1263 = fn (%var_7148: Tensor[(7, 10, 11), float32]) -> (Tensor[(7, 10, 11), float64],) {
    %1259 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    %1260 = cast(%1259, dtype="float64") /* ty=Tensor[(1, 10, 11), float64] */;
    %1261 = cast(%var_7148, dtype="float64") /* ty=Tensor[(7, 10, 11), float64] */;
    %1262 = floor_mod(%1260, %1261) /* ty=Tensor[(7, 10, 11), float64] */;
    (%1262,)
  };
  %1263(%var_7157) /* ty=(Tensor[(7, 10, 11), float64],) */
}

def @func_3307(%var_3305: Tensor[(1430, 1), float32], %var_3306: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) {
  %1281 = fn (%var_3295: Tensor[(1430, 1), float32], %var_3296: Tensor[(315), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) {
    %1264 = @func_3268() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1265 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %1266 = reshape(%1265, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
    %1267 = @func_613(%1266) /* ty=(Tensor[(16, 3, 3), float64],) */;
    %1268 = cast(meta[relay.Constant][67] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
    %1269 = cast(%var_3295, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
    %1270 = cast(%var_3296, dtype="bool") /* ty=Tensor[(315), bool] */;
    %1271 = cast(%var_3295, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
    %1272 = reshape(%1268, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %1273 = reshape(%1269, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
    %1274 = reshape(%1270, newshape=[35, 9]) /* ty=Tensor[(35, 9), bool] */;
    %1275 = reshape(%1271, newshape=[13, 10, 11]) /* ty=Tensor[(13, 10, 11), float32] */;
    %1276 = @func_2653(%1272, %1273, %1274, %1275) /* ty=(Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) */;
    %1277 = %1264.0;
    %1278 = %1267.0;
    %1279 = %1276.1;
    %1280 = @func_2835() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1277, %1278, meta[relay.Constant][66] /* ty=Tensor[(4, 36), float64] */, %1279, meta[relay.Constant][67] /* ty=Tensor[(35, 4), float64] */, %var_3295, %var_3296, %1280)
  };
  %1281(%var_3305, %var_3306) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(4, 36), float64], Tensor[(13, 10, 11), bool], Tensor[(35, 4), float64], Tensor[(1430, 1), float32], Tensor[(315), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_8600() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1282 = @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1283 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1284 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1285 = %1282.0;
  %1286 = %1283.0;
  %1287 = %1284.0;
  (%1285, %1286, %1287)
}

def @func_10212() -> Tensor[(1, 10, 11), float32] {
  @func_10210() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_11431() -> (Tensor[(1, 10, 11), float32],) {
  %1290 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %1288 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1289 = %1288.2;
    (%1289,)
  };
  %1290() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_4295() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_4293() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_6646() -> (Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) {
  %1291 = cast(meta[relay.Constant][68] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1292 = reshape(%1291, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1293 = @func_2368(%1292) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %1294 = @func_3086() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32]) */;
  %1295 = cast(meta[relay.Constant][69] /* ty=Tensor[(24, 6), float64] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %1296 = reshape(%1295, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1297 = @func_613(%1296) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1298 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
  %1299 = %1293.2;
  %1300 = %1294.1;
  %1301 = %1297.0;
  (%1298, %1299, meta[relay.Constant][68] /* ty=Tensor[(140), float64] */, %1300, %1301, meta[relay.Constant][69] /* ty=Tensor[(24, 6), float64] */)
}

def @func_12909(%var_12877: Tensor[(11, 130), float32], %var_12878: Tensor[(105, 3), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(11, 130), float32], Tensor[(105, 3), bool]) {
  %1302 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1303 = cast(%var_12877, dtype="float32") /* ty=Tensor[(11, 130), float32] */;
  %1304 = cast(%var_12878, dtype="bool") /* ty=Tensor[(105, 3), bool] */;
  %1305 = reshape(%1303, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %1306 = reshape(%1304, newshape=[315]) /* ty=Tensor[(315), bool] */;
  %1307 = @func_7044(%1305, %1306) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 36), float64], Tensor[(1430), float32], Tensor[(315), bool], Tensor[(16, 3, 3), float64]) */;
  %1308 = %1302.2;
  %1309 = %1307.4;
  (%1308, %1309, %var_12877, %var_12878)
}

def @func_1225(%var_1223: Tensor[(780), float64]) -> (Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) {
  @func_1222(%var_1223) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64], Tensor[(13, 15, 4), float64]) */
}

def @func_15039() -> (Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) {
  @func_15037() /* ty=(Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(432), float32], Tensor[(144), float64], Tensor[(780), float64], Tensor[(11, 5, 13), float64], Tensor[(715), float64]) */
}

def @func_11771(%var_11752: Tensor[(144), float64], %var_11753: Tensor[(780), float64], %var_11764: Tensor[(720), uint32]) -> (Tensor[(140), float64], Tensor[(1, 10, 11), float32], Tensor[(5, 28), float64], Tensor[(144), float64], Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(15, 12, 4), uint32], Tensor[(720), uint32]) {
  %1310 = @func_6646() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(140), float64], Tensor[(140), float64], Tensor[(5, 10, 11), uint8], Tensor[(16, 3, 3), float64], Tensor[(24, 6), float64]) */;
  %1311 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1312 = cast(%var_11752, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1313 = cast(%var_11753, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1314 = %1310.1;
  %1315 = cast(%1314, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1316 = reshape(%1312, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1317 = reshape(%1313, newshape=[390, 2]) /* ty=Tensor[(390, 2), float64] */;
  %1318 = reshape(%1315, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %1319 = @func_2479(%1316, %1317, %1318) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64], Tensor[(13, 15, 4), float64], Tensor[(390, 2), float64], Tensor[(5, 2, 14), float64], Tensor[(5, 28), float64]) */;
  %1320 = @func_3218() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1321 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %1322 = cast(%var_11764, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %1323 = reshape(%1321, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), uint32] */;
  %1324 = reshape(%1322, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), uint32] */;
  %1325 = @func_10849(%1323, %1324) /* ty=(Tensor[(15, 12, 4), uint32],) */;
  %1326 = %1311.0;
  %1327 = %1319.6;
  %1328 = %1320.0;
  %1329 = %1325.0;
  (%1314, %1326, %1327, %var_11752, %var_11753, %1328, %1329, %var_11764)
}

def @func_9586() -> (Tensor[(1, 10, 11), float32],) {
  %1330 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1330,)
}

def @func_4336(%var_4334: Tensor[(3, 9, 8), uint8], %var_4335: Tensor[(3, 9, 8), uint8]) -> (Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) {
  %1342 = fn (%var_4308: Tensor[(3, 9, 8), uint8], %var_4309: Tensor[(3, 9, 8), uint8]) -> (Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) {
    %1331 = cast(%var_4309, dtype="uint8") /* ty=Tensor[(3, 9, 8), uint8] */;
    %1332 = shape_of(%var_4308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1333 = cast(%var_4308, dtype="uint8") /* ty=Tensor[(3, 9, 8), uint8] */;
    %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1335 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
    %1336 = cast(%var_4308, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
    %1337 = @func_3730() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1338 = bitwise_or(%1333, %1334) /* ty=Tensor[(3, 9, 8), uint8] */;
    %1339 = %1335.1;
    %1340 = acosh(%1336) /* ty=Tensor[(3, 9, 8), float64] */;
    %1341 = %1337.0;
    (%1338, %1339, %1340, %1341)
  };
  %1342(%var_4334, %var_4335) /* ty=(Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_2168() -> Tensor[(1, 10, 11), float32] {
  %1343 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  acos(%1343) /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_14838(%var_14836: Tensor[(108, 2), uint8]) -> (Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64], Tensor[(108, 2), uint8]) {
  @func_14835(%var_14836) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(12, 18), float64], Tensor[(108, 2), uint8]) */
}

def @func_14570() -> Tensor[(1, 10, 11), float32] {
  %1345 = fn () -> Tensor[(1, 10, 11), float32] {
    %1344 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1344.3
  };
  %1345() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_8984() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1346 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1347 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1348 = %1346.0;
  %1349 = @func_3933() /* ty=Tensor[(1, 10, 11), float32] */;
  %1350 = %1347.0;
  (%1348, %1349, %1350)
}

def @func_16191(%var_16189: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  @func_16188(%var_16189) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */
}

def @func_2342(%var_2341: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
  %1360 = fn (%var_2330: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) {
    %1351 = cast(%var_2330, dtype="bool") /* ty=Tensor[(80), bool] */;
    %1352 = cast(meta[relay.Constant][71] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1353 = cast(meta[relay.Constant][71] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1354 = reshape(%1351, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
    %1355 = reshape(%1352, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %1356 = reshape(%1353, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %1357 = @func_1285(%1354, %1355, %1356) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
    %1358 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
    %1359 = %1357.1;
    (%1358, %1359, %var_2330, meta[relay.Constant][71] /* ty=Tensor[(1200), bool] */)
  };
  %1360(%var_2341) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */
}

def @func_11311(%var_11310: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %1368 = fn (%var_11291: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
    %1361 = cast(%var_11291, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1362 = reshape(%1361, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %1363 = @func_8115(%1362) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
    %1364 = @func_8600() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1365 = @func_6934() /* ty=Tensor[(1, 10, 11), float32] */;
    %1366 = %1363.3;
    %1367 = %1364.1;
    (%1365, %1366, %var_11291, %1367)
  };
  %1368(%var_11310) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */
}

def @func_3154() -> Tensor[(10, 78), float64] {
  @func_3152() /* ty=Tensor[(10, 78), float64] */
}

def @func_9150() -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
  %1385 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) {
    %1369 = @func_7914() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1370 = cast(meta[relay.Constant][72] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
    %1371 = reshape(%1370, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
    %1372 = cast(meta[relay.Constant][73] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1373 = cast(meta[relay.Constant][74] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1374 = reshape(%1372, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %1375 = reshape(%1373, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1376 = @func_1364(%1374, %1375) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(16, 3, 3), float64], Tensor[(144), float64]) */;
    %1377 = cast(meta[relay.Constant][75] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
    %1378 = reshape(%1377, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
    %1379 = @func_7156(%1378) /* ty=(Tensor[(7, 10, 11), float64],) */;
    %1380 = %1369.0;
    %1381 = @func_2707(%1371) /* ty=Tensor[(5, 10, 11), uint8] */;
    %1382 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
    %1383 = %1376.0;
    %1384 = %1379.0;
    (%1380, %1381, meta[relay.Constant][72] /* ty=Tensor[(550), float32] */, %1382, %1383, meta[relay.Constant][73] /* ty=Tensor[(432), float32] */, meta[relay.Constant][74] /* ty=Tensor[(144), float64] */, %1384, meta[relay.Constant][75] /* ty=Tensor[(770), float32] */)
  };
  %1385() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */
}

def @func_16167() -> (Tensor[(1, 10, 11), float32],) {
  @func_16165() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_10172(%var_10150: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) {
  %1386 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1387 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %1388 = %1387.2;
  %1389 = cast(%var_10150, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1390 = shape_of(%1388, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1391 = cast(%1388, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1392 = dyn.reshape(%1389, %1390, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1393 = cast(%1388, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1394 = reshape(%1393, newshape=[10, 78]) /* ty=Tensor[(10, 78), float64] */;
  %1395 = @func_4788(%1394) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(10, 78), int8], Tensor[(10, 78), float32]) */;
  %1396 = %1386.0;
  %1397 = divide(%1391, %1392) /* ty=Tensor[(780), float64] */;
  %1398 = %1395.0;
  (%1396, %1397, %1398)
}

def @func_12731() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1399 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  %1400 = @func_4144() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1399, %1400)
}

def @func_16828() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 144), float64], Tensor[(1, 10, 11), float32], Tensor[(540), int32], Tensor[(16, 3, 3), float32]) {
  %1401 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
  %1402 = cast(meta[relay.Constant][77] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %1403 = reshape(%1402, newshape=[540]) /* ty=Tensor[(540), int32] */;
  %1404 = @func_8285(%1403) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(4, 15, 9), int32], Tensor[(540), int32]) */;
  %1405 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 144), float64] */, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %1406 = reshape(%1405, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %1407 = @func_613(%1406) /* ty=(Tensor[(16, 3, 3), float64],) */;
  %1408 = %1407.0;
  %1409 = cast(%1408, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %1410 = asin(%1409) /* ty=Tensor[(16, 3, 3), float64] */;
  %1411 = cast(meta[relay.Constant][78] /* ty=Tensor[(16, 3, 3), float64] */, dtype="int64") /* ty=Tensor[(16, 3, 3), int64] */;
  %1412 = shape_of(%1410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1413 = cast(%1410, dtype="int64") /* ty=Tensor[(16, 3, 3), int64] */;
  %1414 = dyn.reshape(%1411, %1412, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1415 = left_shift(%1413, %1414) /* ty=Tensor[(16, 3, 3), int64] */;
  %1416 = cast(%1415, dtype="float32") /* ty=Tensor[(16, 3, 3), float32] */;
  %1417 = %1401.0;
  %1418 = %1404.0;
  %1419 = cosh(%1416) /* ty=Tensor[(16, 3, 3), float32] */;
  (%1417, meta[relay.Constant][76] /* ty=Tensor[(1, 144), float64] */, %1418, meta[relay.Constant][77] /* ty=Tensor[(540), int32] */, %1419)
}

def @func_5157() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1420 = @func_3507() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1421 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1422 = %1420.0;
  %1423 = %1421.0;
  (%1422, %1423)
}

def @func_2806() -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) {
  %1428 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) {
    %1424 = cast(meta[relay.Constant][79] /* ty=Tensor[(10, 78), float64] */, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
    %1425 = reshape(%1424, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), float64] */;
    %1426 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
    %1427 = @func_589(%1425) /* ty=Tensor[(13, 15, 4), float64] */;
    (%1426, %1427, meta[relay.Constant][79] /* ty=Tensor[(10, 78), float64] */)
  };
  %1428() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(10, 78), float64]) */
}

def @func_6017() -> (Tensor[(1, 10, 11), float32],) {
  @func_6015() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @main() -> (Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32]) {
  %1429 = @func_9840() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) */;
  %1430 = %1429.2;
  %1431 = cast(%1430, dtype="float32") /* ty=Tensor[(12, 16, 16), float32] */;
  %1432 = @func_9920() /* ty=Tensor[(1, 10, 11), float32] */;
  %1433 = sin(%1431) /* ty=Tensor[(12, 16, 16), float32] */;
  (%1432, %1433)
}

def @func_8907() -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) {
  @func_8905() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */
}

def @func_4387() -> (Tensor[(1, 10, 11), float32],) {
  @func_4385() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_13043(%var_13028: Tensor[(780), float64]) -> (Tensor[(?, 10, 11), uint64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), int64], Tensor[(770), float32]) {
  %1434 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
  %1435 = @func_3785() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1436 = @func_8478() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(10, 78), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1437 = @func_12687() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1438 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %1439 = %1438.2;
  %1440 = cast(%var_13028, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1441 = shape_of(%1439, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1442 = cast(%1439, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1444 = @func_9149() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */;
  %1445 = %1434.2;
  %1446 = %1435.0;
  %1447 = %1436.5;
  %1448 = %1437.0;
  %1449 = right_shift(%1442, %1443) /* ty=Tensor[(780), int64] */;
  %1450 = %1444.8;
  (%1445, %1446, %1447, %1448, %1449, %1450)
}

def @func_10210() -> Tensor[(1, 10, 11), float32] {
  %1451 = @func_8984() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
  %1451.0
}

def @func_5887() -> Tensor[(1, 10, 11), float32] {
  @func_4536() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_1290(%var_1287: Tensor[(8, 10, 1), bool], %var_1288: Tensor[(8, 10, 15), bool], %var_1289: Tensor[(8, 10, 15), bool]) -> (Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) {
  @func_1285(%var_1287, %var_1288, %var_1289) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */
}

def @func_10559() -> (Tensor[(1, 10, 11), float32],) {
  %1452 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  (%1452,)
}

def @func_7867() -> (Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  %1453 = @func_3743() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */;
  %1454 = @func_6224() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1455 = %1453.2;
  %1456 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
  %1457 = %1454.0;
  (%1455, %1456, %1457)
}

def @func_4524(%var_4523: Tensor[(330), float32]) -> (Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %1465 = fn (%var_4508: Tensor[(330), float32]) -> (Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
    %1458 = @func_4080() /* ty=Tensor[(1, 10, 11), float32] */;
    %1459 = cast(%1458, dtype="int8") /* ty=Tensor[(1, 10, 11), int8] */;
    %1460 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 10, 11), float32] */, dtype="int8") /* ty=Tensor[(4, 10, 11), int8] */;
    %1461 = cast(%var_4508, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1462 = reshape(%1461, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
    %1463 = multiply(%1459, %1460) /* ty=Tensor[(4, 10, 11), int8] */;
    %1464 = @func_3095(%1462) /* ty=Tensor[(3, 10, 11), float32] */;
    (%1463, %1464, %var_4508)
  };
  %1465(%var_4523) /* ty=(Tensor[(4, 10, 11), int8], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */
}

def @func_5193(%var_5191: Tensor[(1430), float32], %var_5192: Tensor[(5, 63), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430), float32], Tensor[(5, 63), bool]) {
  @func_5189(%var_5191, %var_5192) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 10, 11), bool], Tensor[(140), float64], Tensor[(1430), float32], Tensor[(5, 63), bool]) */
}

def @func_10445(%var_10443: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint64], Tensor[(1, 10, 11), float32]) {
  @func_10442(%var_10443) /* ty=(Tensor[(16, 10, 11), uint64], Tensor[(1, 10, 11), float32]) */
}

def @func_11204() -> Tensor[(1, 10, 11), float32] {
  %1467 = fn () -> Tensor[(1, 10, 11), float32] {
    %1466 = @func_4641() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1466.0
  };
  %1467() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_10729(%var_10728: Tensor[(80), bool]) -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(432), float32]) {
  %1476 = fn (%var_10714: Tensor[(80), bool]) -> (Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(432), float32]) {
    %1468 = @func_5751() /* ty=(Tensor[(12, 12, 13), bool],) */;
    %1469 = cast(%var_10714, dtype="bool") /* ty=Tensor[(80), bool] */;
    %1470 = reshape(%1469, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %1471 = @func_6431(%1470) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), float64], Tensor[(80), bool], Tensor[(1200), bool], Tensor[(10, 78), float64]) */;
    %1472 = @func_9149() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 10, 11), uint8], Tensor[(550), float32], Tensor[(10, 78), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(144), float64], Tensor[(7, 10, 11), float64], Tensor[(770), float32]) */;
    %1473 = %1468.0;
    %1474 = %1471.0;
    %1475 = %1472.5;
    (%1473, %1474, %var_10714, %1475)
  };
  %1476(%var_10728) /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32], Tensor[(80), bool], Tensor[(432), float32]) */
}

def @func_3065() -> (Tensor[(1, 10, 11), float32],) {
  %1478 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %1477 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1477,)
  };
  %1478() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_3785() -> (Tensor[(1, 10, 11), float32],) {
  %1479 = @func_3064() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1480 = %1479.0;
  (%1480,)
}

def @func_3431(%var_3429: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) {
  @func_3428(%var_3429) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(13, 15, 4), float64], Tensor[(780), float64]) */
}

def @func_8200() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) {
  @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_11349(%var_11348: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
  %1487 = fn (%var_11322: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) {
    %1481 = @func_5517() /* ty=(Tensor[(12, 12, 13), bool], Tensor[(1, 10, 11), float32]) */;
    %1482 = %1481.1;
    %1483 = cast(%1482, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1484 = cast(%var_11322, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
    %1485 = mod(%1483, %1484) /* ty=Tensor[(9, 10, 11), float32] */;
    %1486 = @func_3152() /* ty=Tensor[(10, 78), float64] */;
    (%1485, %1486)
  };
  %1487(%var_11348) /* ty=(Tensor[(9, 10, 11), float32], Tensor[(10, 78), float64]) */
}

def @func_12548() -> (Tensor[(1, 10, 11), float32],) {
  %1489 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %1488 = @func_10113() /* ty=Tensor[(1, 10, 11), float32] */;
    (%1488,)
  };
  %1489() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_16326() -> (Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) {
  @func_16324() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(?, 10, 11), bool]) */
}

def @func_213(%var_211: Tensor[(15, 3, 7), float64], %var_212: Tensor[(140), float64]) -> (Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
  %1496 = fn (%var_195: Tensor[(15, 3, 7), float64], %var_204: Tensor[(140), float64]) -> (Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) {
    %1490 = cast(%var_195, dtype="float64") /* ty=Tensor[(15, 3, 7), float64] */;
    %1491 = cast(%var_204, dtype="float64") /* ty=Tensor[(140), float64] */;
    %1492 = reshape(%1491, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
    %1493 = @func_106(%1492) /* ty=(Tensor[(5, 2, 14), float64],) */;
    %1494 = acos(%1490) /* ty=Tensor[(15, 3, 7), float64] */;
    %1495 = %1493.0;
    (%1494, %1495, %var_204)
  };
  %1496(%var_211, %var_212) /* ty=(Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */
}

def @func_8373(%var_8372: Tensor[(2, 5, 7), float32]) -> (Tensor[(2, 5, 7), float32],) {
  %1499 = fn (%var_8367: Tensor[(2, 5, 7), float32]) -> (Tensor[(2, 5, 7), float32],) {
    %1497 = cast(%var_8367, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
    %1498 = log(%1497) /* ty=Tensor[(2, 5, 7), float32] */;
    (%1498,)
  };
  %1499(%var_8372) /* ty=(Tensor[(2, 5, 7), float32],) */
}

def @func_15271(%var_15270: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
  %1506 = fn (%var_15238: Tensor[(780), float64]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) {
    %1500 = @func_5085() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1501 = cast(%var_15238, dtype="float64") /* ty=Tensor[(780), float64] */;
    %1502 = reshape(%1501, newshape=[780]) /* ty=Tensor[(780), float64] */;
    %1503 = @func_11309(%1502) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64], Tensor[(1, 10, 11), float32]) */;
    %1504 = %1500.0;
    %1505 = %1503.0;
    (%1504, %1505, %var_15238)
  };
  %1506(%var_15270) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(780), float64]) */
}

def @func_8528(%var_8526: Tensor[(4, 6, 7), float32], %var_8527: Tensor[(80), bool]) -> (Tensor[(4, 6, 7), float32], Tensor[(80), bool], Tensor[(8, 10, 15), float64]) {
  %1515 = fn (%var_8480: Tensor[(4, 6, 7), float32], %var_8502: Tensor[(80), bool]) -> (Tensor[(4, 6, 7), float32], Tensor[(80), bool], Tensor[(8, 10, 15), float64]) {
    %1507 = cast(%var_8480, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
    %1508 = cast(%var_8502, dtype="bool") /* ty=Tensor[(80), bool] */;
    %1509 = reshape(%1508, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %1510 = @func_2340(%1509) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool], Tensor[(1200), bool]) */;
    %1511 = %1510.1;
    %1512 = cast(%1511, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
    %1513 = sqrt(%1507) /* ty=Tensor[(4, 6, 7), float32] */;
    %1514 = erf(%1512) /* ty=Tensor[(8, 10, 15), float64] */;
    (%1513, %var_8502, %1514)
  };
  %1515(%var_8526, %var_8527) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(80), bool], Tensor[(8, 10, 15), float64]) */
}

def @func_3097(%var_3096: Tensor[(3, 10, 11), float32]) -> Tensor[(3, 10, 11), float32] {
  %1519 = fn (%var_3090: Tensor[(3, 10, 11), float32]) -> Tensor[(3, 10, 11), float32] {
    %1516 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    %1517 = cast(%1516, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1518 = cast(%var_3090, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
    floor_divide(%1517, %1518) /* ty=Tensor[(3, 10, 11), float32] */
  };
  %1519(%var_3096) /* ty=Tensor[(3, 10, 11), float32] */
}

def @func_109(%var_107: Tensor[(5, 2, 14), float64]) -> (Tensor[(5, 2, 14), float64],) {
  @func_106(%var_107) /* ty=(Tensor[(5, 2, 14), float64],) */
}

def @func_10543(%var_10541: Tensor[(1, 10, 16), float32], %var_10542: Tensor[(1, 10, 16), float32]) -> Tensor[(?, 10, 16), float32] {
  @func_10539(%var_10541, %var_10542) /* ty=Tensor[(?, 10, 16), float32] */
}

def @func_14114() -> (Tensor[(1, 10, 11), float32],) {
  %1522 = fn () -> (Tensor[(1, 10, 11), float32],) {
    %1520 = @func_3161() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1521 = %1520.0;
    (%1521,)
  };
  %1522() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_15556() -> (Tensor[(10, 78), float64],) {
  @func_15554() /* ty=(Tensor[(10, 78), float64],) */
}

def @func_11820() -> (Tensor[(4, 3, 4), float64],) {
  %1525 = fn () -> (Tensor[(4, 3, 4), float64],) {
    %1523 = @func_5272() /* ty=(Tensor[(4, 3, 4), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1524 = %1523.0;
    (%1524,)
  };
  %1525() /* ty=(Tensor[(4, 3, 4), float64],) */
}

def @func_4242(%var_4239: Tensor[(780), float64], %var_4240: Tensor[(660), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(6, 10, 11), float64], Tensor[(780), float64], Tensor[(660), float32]) {
  %1526 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1527 = cast(%1526, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %1528 = cast(%var_4239, dtype="float64") /* ty=Tensor[(780), float64] */;
  %1529 = cast(%var_4240, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1530 = reshape(%1527, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %1531 = reshape(%1528, newshape=[130, 6]) /* ty=Tensor[(130, 6), float64] */;
  %1532 = reshape(%1529, newshape=[6, 10, 11]) /* ty=Tensor[(6, 10, 11), float32] */;
  %1533 = @func_3349(%1530, %1531, %1532) /* ty=(Tensor[(?, 10, 11), float32], Tensor[(16, 10, 10), float32], Tensor[(130, 6), float64], Tensor[(?, 10, 11), bool], Tensor[(6, 10, 11), float64]) */;
  %1534 = @func_2168() /* ty=Tensor[(1, 10, 11), float32] */;
  %1535 = %1533.4;
  (%1526, %1534, %1535, %var_4239, %var_4240)
}

def @func_7457() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(216), uint8]) {
  %1536 = @func_7286() /* ty=(Tensor[(1, 10, 11), float32],) */;
  %1537 = cast(meta[relay.Constant][81] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1538 = cast(meta[relay.Constant][81] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1539 = reshape(%1537, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %1540 = reshape(%1538, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), uint8] */;
  %1541 = @func_4333(%1539, %1540) /* ty=(Tensor[(3, 9, 8), uint8], Tensor[(1, 10, 11), float32], Tensor[(3, 9, 8), float64], Tensor[(1, 10, 11), float32]) */;
  %1542 = %1536.0;
  %1543 = %1541.1;
  (%1542, %1543, meta[relay.Constant][81] /* ty=Tensor[(216), uint8] */)
}

def @func_13084(%var_13082: Tensor[(9, 3, 6), int8]) -> (Tensor[(9, 3, 6), bool],) {
  @func_13081(%var_13082) /* ty=(Tensor[(9, 3, 6), bool],) */
}

def @func_9669(%var_9667: Tensor[(1200), bool], %var_9668: Tensor[(55, 6), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) {
  %1562 = fn (%var_9654: Tensor[(1200), bool], %var_9661: Tensor[(55, 6), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) {
    %1544 = @func_4824() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1545 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1546 = cast(meta[relay.Constant][82] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
    %1547 = cast(%var_9654, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1548 = cast(%var_9654, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1549 = reshape(%1546, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), bool] */;
    %1550 = reshape(%1547, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %1551 = reshape(%1548, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), bool] */;
    %1552 = @func_1285(%1549, %1550, %1551) /* ty=(Tensor[(8, 10, 15), float64], Tensor[(8, 10, 15), uint16]) */;
    %1553 = %1552.1;
    %1554 = cast(%1553, dtype="float32") /* ty=Tensor[(8, 10, 15), float32] */;
    %1555 = cast(%var_9661, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
    %1556 = reshape(%1555, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1557 = @func_6077(%1556) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) */;
    %1558 = %1544.0;
    %1559 = %1545.2;
    %1560 = log2(%1554) /* ty=Tensor[(8, 10, 15), float32] */;
    %1561 = %1557.1;
    (%1558, %1559, meta[relay.Constant][82] /* ty=Tensor[(20, 4), bool] */, %var_9654, %1560, %1561, %var_9661)
  };
  %1562(%var_9667, %var_9668) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(20, 4), bool], Tensor[(1200), bool], Tensor[(8, 10, 15), float32], Tensor[(330), float32], Tensor[(55, 6), float32]) */
}

def @func_12857() -> Tensor[(1, 10, 11), float32] {
  %1564 = fn () -> Tensor[(1, 10, 11), float32] {
    %1563 = @func_12277() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1563.0
  };
  %1564() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_5832() -> (Tensor[(1, 10, 11), float32],) {
  @func_5830() /* ty=(Tensor[(1, 10, 11), float32],) */
}

def @func_14726(%var_14724: Tensor[(80), bool]) -> (Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool]) {
  @func_14723(%var_14724) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(8, 10, 15), uint16], Tensor[(80), bool]) */
}

def @func_8043() -> (Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) {
  %1576 = fn () -> (Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) {
    %1565 = @func_6715() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(?, 10, 11), uint64]) */;
    %1566 = @func_6842() /* ty=(Tensor[(1, 10, 11), float32],) */;
    %1567 = %1566.0;
    %1568 = @func_7867() /* ty=(Tensor[(780), float64], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1569 = %1568.2;
    %1570 = cast(%1569, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %1571 = shape_of(%1567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1572 = cast(%1567, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
    %1573 = dyn.reshape(%1570, %1571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1574 = %1565.2;
    %1575 = greater(%1572, %1573) /* ty=Tensor[(?, 10, 11), bool] */;
    (%1574, %1575)
  };
  %1576() /* ty=(Tensor[(?, 10, 11), uint64], Tensor[(?, 10, 11), bool]) */
}

def @func_9840() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) {
  %1584 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) {
    %1577 = @func_8198() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1578 = @func_3860() /* ty=(Tensor[(5, 10, 11), uint8], Tensor[(1, 10, 11), float32]) */;
    %1579 = cast(meta[relay.Constant][83] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
    %1580 = reshape(%1579, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float32] */;
    %1581 = %1577.0;
    %1582 = %1578.1;
    %1583 = @func_7401(%1580) /* ty=Tensor[(12, 16, 16), float32] */;
    (%1581, %1582, %1583, meta[relay.Constant][83] /* ty=Tensor[(3072), float32] */)
  };
  %1584() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(12, 16, 16), float32], Tensor[(3072), float32]) */
}

def @func_12203(%var_12202: Tensor[(5, 10, 11), float32]) -> (Tensor[(5, 10, 11), float32],) {
  %1590 = fn (%var_12196: Tensor[(5, 10, 11), float32]) -> (Tensor[(5, 10, 11), float32],) {
    %1585 = @func_10644() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32]) */;
    %1586 = %1585.0;
    %1587 = cast(%1586, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1588 = cast(%var_12196, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
    %1589 = floor_divide(%1587, %1588) /* ty=Tensor[(5, 10, 11), float32] */;
    (%1589,)
  };
  %1590(%var_12202) /* ty=(Tensor[(5, 10, 11), float32],) */
}

def @func_6080(%var_6078: Tensor[(330), float32]) -> (Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) {
  @func_6077(%var_6078) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(330), float32], Tensor[(330), float32]) */
}

def @func_2653(%var_2559: Tensor[(140), float64], %var_2565: Tensor[(13, 10, 11), float32], %var_2640: Tensor[(35, 9), bool], %var_2649: Tensor[(13, 10, 11), float32]) -> (Tensor[(140), float64], Tensor[(13, 10, 11), bool], Tensor[(5, 2, 14), float64], Tensor[(35, 9), bool], Tensor[(13, 10, 11), bool]) {
  %1591 = @func_2220() /* ty=Tensor[(1, 10, 11), float32] */;
  %1592 = cast(%1591, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %1593 = cast(%var_2565, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1594 = cast(%var_2559, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1595 = reshape(%1594, newshape=[5, 2, 14]) /* ty=Tensor[(5, 2, 14), float64] */;
  %1596 = @func_106(%1595) /* ty=(Tensor[(5, 2, 14), float64],) */;
  %1597 = cast(meta[relay.Constant][84] /* ty=Tensor[(35, 9), float64] */, dtype="float64") /* ty=Tensor[(35, 9), float64] */;
  %1598 = cast(%var_2559, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1599 = reshape(%1597, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float64] */;
  %1600 = reshape(%1598, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %1601 = @func_210(%1599, %1600) /* ty=(Tensor[(15, 3, 7), float64], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
  %1602 = %1601.0;
  %1603 = cast(%1602, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %1604 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(35, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1605 = cast(meta[relay.Constant][84] /* ty=Tensor[(35, 9), float64] */, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1606 = dyn.reshape(%1603, %1604, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1607 = greater(%1605, %1606) /* ty=Tensor[(35, 9), bool] */;
  %1608 = cast(%var_2640, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1609 = shape_of(%1607, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1610 = cast(%1607, dtype="bool") /* ty=Tensor[(35, 9), bool] */;
  %1611 = dyn.reshape(%1608, %1609, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1612 = cast(%var_2649, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1613 = shape_of(%var_2565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1614 = cast(%var_2565, dtype="bool") /* ty=Tensor[(13, 10, 11), bool] */;
  %1615 = dyn.reshape(%1612, %1613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1616 = not_equal(%1592, %1593) /* ty=Tensor[(13, 10, 11), bool] */;
  %1617 = %1596.0;
  %1618 = less(%1610, %1611) /* ty=Tensor[(35, 9), bool] */;
  %1619 = greater_equal(%1614, %1615) /* ty=Tensor[(13, 10, 11), bool] */;
  (%var_2559, %1616, %1617, %1618, %1619)
}

def @func_3935() -> Tensor[(1, 10, 11), float32] {
  @func_3933() /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_6529() -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
  %1626 = fn () -> (Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) {
    %1620 = cast(meta[relay.Constant][85] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %1621 = reshape(%1620, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %1622 = @func_2368(%1621) /* ty=(Tensor[(1, 10, 11), float32], Tensor[(5, 2, 14), float64], Tensor[(140), float64]) */;
    %1623 = @func_4536() /* ty=Tensor[(1, 10, 11), float32] */;
    %1624 = @func_2758() /* ty=Tensor[(1, 10, 11), float32] */;
    %1625 = %1622.0;
    (%1623, %1624, %1625, meta[relay.Constant][85] /* ty=Tensor[(140), float64] */)
  };
  %1626() /* ty=(Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(1, 10, 11), float32], Tensor[(140), float64]) */
}

def @func_4146() -> Tensor[(1, 10, 11), float32] {
  @func_4144() /* ty=Tensor[(1, 10, 11), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

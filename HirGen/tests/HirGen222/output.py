import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_152 = relay.var("var_152", dtype = "float32", shape = (9, 15, 11))#candidate|152|(9, 15, 11)|var|float32
uop_153 = relay.sin(var_152.astype('float32')) # shape=(9, 15, 11)
output = uop_153
output2 = uop_153
func_167 = relay.Function([var_152,], output)
mod['func_167'] = func_167
mod = relay.transform.InferType()(mod)
var_168 = relay.var("var_168", dtype = "float32", shape = (9, 15, 11))#candidate|168|(9, 15, 11)|var|float32
output = func_167(var_168)
func_169 = relay.Function([var_168], output)
mutated_mod['func_169'] = func_169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_344 = relay.var("var_344", dtype = "int8", shape = (15, 6, 10))#candidate|344|(15, 6, 10)|var|int8
var_345 = relay.var("var_345", dtype = "int8", shape = (15, 6, 10))#candidate|345|(15, 6, 10)|var|int8
bop_346 = relay.right_shift(var_344.astype('int8'), relay.reshape(var_345.astype('int8'), relay.shape_of(var_344))) # shape=(15, 6, 10)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
var_355 = relay.var("var_355", dtype = "float32", shape = (1485,))#candidate|355|(1485,)|var|float32
call_354 = func_167_call(relay.reshape(var_355.astype('float32'), [9, 15, 11]))
call_356 = func_167_call(relay.reshape(var_355.astype('float32'), [9, 15, 11]))
output = relay.Tuple([bop_346,call_354,var_355,])
output2 = relay.Tuple([bop_346,call_356,var_355,])
func_362 = relay.Function([var_344,var_345,var_355,], output)
mod['func_362'] = func_362
mod = relay.transform.InferType()(mod)
mutated_mod['func_362'] = func_362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_362_call = mutated_mod.get_global_var('func_362')
var_364 = relay.var("var_364", dtype = "int8", shape = (15, 6, 10))#candidate|364|(15, 6, 10)|var|int8
var_365 = relay.var("var_365", dtype = "int8", shape = (15, 6, 10))#candidate|365|(15, 6, 10)|var|int8
var_366 = relay.var("var_366", dtype = "float32", shape = (1485,))#candidate|366|(1485,)|var|float32
call_363 = func_362_call(var_364,var_365,var_366,)
output = call_363
func_367 = relay.Function([var_364,var_365,var_366,], output)
mutated_mod['func_367'] = func_367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_442 = relay.var("var_442", dtype = "float64", shape = (15, 1, 10))#candidate|442|(15, 1, 10)|var|float64
uop_443 = relay.sin(var_442.astype('float64')) # shape=(15, 1, 10)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
const_449 = relay.const([3.765177,3.776885,8.291424,3.379588,6.758289,1.422036,-1.789454,-4.934651,4.722334,-6.340253,-7.867527,8.065881,-4.033150,-1.208786,7.547114,1.916646,-0.264944,-7.983253,-8.503024,-2.983273,5.787116,-8.721292,-9.586410,-4.944384,-2.492505,-0.645871,-9.296619,3.255459,-1.366063,-2.892975,8.110589,-8.718018,2.144708,-5.951533,-6.581190,1.827542,-3.890238,7.068374,-8.128148,-4.708846,-4.953597,4.847790,9.659972,-0.173201,-5.251053,2.701029,-5.679152,8.538545,-3.066835,1.382139,-0.799575,5.095429,2.909954,-5.317272,-6.019566,-7.425098,6.722102,9.679025,-4.025307,-8.268215,3.508851,-7.978816,1.008801,0.396665,8.512398,-9.736264,8.954349,6.812141,4.820825,-1.212276,-4.536326,-6.654221,-5.769701,-5.291337,7.796887,1.628940,-2.972319,6.196796,-7.770409,-1.808383,6.951548,6.178848,-5.686858,2.732174,-1.419673,9.351091,-2.744326,-4.739278,-5.112747,9.418239,7.805123,-4.482210,8.199413,0.630265,-6.925363,2.821409,4.313696,-7.185616,1.430347,7.295923,8.824962,5.751449,-3.783925,-9.668041,-6.519584,4.483775,-0.758446,-0.128475,7.840912,7.746061,5.787531,3.215165,-5.671880,-2.091325,-5.879746,8.615339,-1.751010,1.023775,9.780378,5.175887,-3.142592,7.242580,-7.095063,-2.037149,-7.535191,1.043496,-6.951956,-6.431235,-6.434869,2.049544,-1.843038,-3.127762,0.630209,0.856325,8.348922,-3.452342,3.824040,6.459016,5.631086,9.688416,1.840187,1.303510,-9.559477,-9.882867,-9.238527,3.349860,6.978732,-2.768929,8.412979,1.478261,-3.878356,-1.291966,8.219916,-4.683902,9.223077,-7.927981,-0.153386,0.324367,6.381711,-5.837607,6.685743,-9.341780,8.810891,3.495155,8.052746,-5.306032,-3.042408,2.078124,-3.020847,7.470916,-1.000539,-6.072797,0.898903,0.699703,-0.423868,5.331729,4.598107,-0.690261,-0.055657,5.125166,-7.557237,0.418552,2.908000,-2.230863,-4.752578,8.401602,-6.328696,-7.427624,2.271627,-4.296993,9.601839,0.296142,-4.784931,4.029650,6.792557,-9.746966,-7.810477,6.954760,-9.615447,6.615876,6.818860,9.736662,2.913749,8.386971,5.865513,-1.138903,3.105586,9.405413,4.920261,-7.243136,-1.692189,-5.757785,2.634477,-4.809851,4.729183,-4.546587,-6.913027,-3.167605,9.988249,7.975153,-7.392569,7.476271,9.060144,5.944905,-5.990480,-2.047794,-6.604182,2.137760,-2.036678,9.064701,-1.879659,-4.035436,-6.352428,-2.086429,-1.142243,-5.575813,5.463719,5.990334,8.118998,2.765506,-0.788408,-8.098502,-5.294073,-7.253456,6.070674,-4.648013,-0.948517,-2.896569,-7.012166,-8.004025,-1.685918,9.845070,7.682083,7.410845,8.652108,-0.601522,-5.240398,-0.967456,-0.161720,1.021947,-1.049196,6.977843,-5.862997,7.973871,-8.249815,1.585687,3.893757,-7.066438,0.259774,5.826887,-2.705320,0.605833,-8.426956,5.206370,-2.230772,-2.543500,6.197940,3.547646,4.075323,-5.921382,5.333432,5.080048,-9.461186,1.473291,1.120479,-3.190578,-6.991723,-6.135665,5.900418,7.721307,-8.596774,-5.372277,-4.017590,6.293793,1.242364,3.263664,6.253750,7.035279,0.098187,-4.547847,1.622070,-1.824213,-2.712461,-5.598107,4.647654,3.605284,0.967601,9.395157,-4.441884,2.359866,-8.777093,-5.660939,7.715447,5.792401,-4.620474,9.452846,-1.370992,0.566514,-5.129902,-6.642921,3.964751,8.372115,6.574496,-9.429981,1.007100,1.939294,9.574376,-4.768384,5.101209,8.483212,6.572360,7.961347,-8.300820,-6.084120,-0.568384,-4.311987,-5.863132,-8.225705,-9.634340,9.225546,3.447634,0.048685,-6.465248,0.352977,3.570538,8.762854,-6.383062,-0.181999,5.549618,4.265835,9.217057,-7.680879,-4.824807,-4.580647,8.430906,-8.812613,-2.078303,0.310512,7.255207,6.499268,5.048897,8.946497,7.626339,6.916806,-7.418416,0.942561,-5.963410,-4.313171,-9.029819,-9.644912,-7.062419,-8.192833,-3.755821,-0.598898,7.450204,9.684952,-0.428803,-5.162227,-4.825961,0.523381,-9.379839,2.349856,-8.196546,0.290621,-4.396305,-6.980506,9.591900,7.526830,5.554512,9.378663,7.512837,5.067024,-4.621475,-6.378858,5.299383,9.295183,-1.195335,9.530629,-3.517880,0.091534,-2.753813,-7.700413,6.900019,8.934995,9.931071,2.098226,5.613056,-6.580700,-2.407662,5.347999,-5.513536,4.921206,5.105660,0.275537,-6.623735,-5.524382,8.472391,-2.874814,-0.294162,5.682602,-3.540181,6.679898,4.318389,0.742539,-1.372832,-4.420716,-6.812437,6.361301,-2.851261,8.427091,4.427226,4.619355,-6.523962,0.116092,8.441035,-8.266773,4.521773,-2.072001,-4.075846,-3.483224,-6.389578,6.679333,7.035820,-9.602175,-7.027237,-0.143936,9.748194,-5.671531,2.260500,-5.357003,-9.702027,-5.104621,-7.313426,-2.704636,0.746710,0.679667,0.800036,-8.686201,1.411410,-6.568570,-3.124689,-1.850267,-8.779535,-8.461062,-3.263993,8.497482,0.066369,7.329468,-3.654797,-3.626347,-1.569081,9.417112,3.766674,-6.687338,-5.199884,-5.763669,7.217588,-4.484532,9.235910,7.061877,3.425266,-1.776403,1.205155,0.479793,6.502753,1.044263,1.767097,-7.849693,-5.977524,-1.351896,1.061617,7.290735,7.855599,5.267758,-6.228562,-8.957283,8.466679,1.015735,-3.134799,-2.032393,-6.139104,-0.006117,-3.162812,-0.784570,6.287244,6.131820,9.745097,-6.041948,-6.353199,6.933060,-1.135198,-5.409782,-4.456282,-2.162916,-3.143229,0.331010,-8.529927,0.929074,-1.152128,3.064713,-1.813010,-6.412970,-6.446666,-1.723042,-4.771930,8.776389,9.747111,-2.788733,1.553049,4.673679,8.333360,5.784371,-7.421349,-9.738472,-8.868510,-5.102552,-3.465923,1.078135,8.040263,7.579654,1.649085,4.860836,9.742556,2.069341,-0.709280,-7.806354,0.044107,-1.057454,-0.829010,-6.258865,-2.195470,8.733103,5.192268,8.909689,-0.987724,6.592084,-8.378828,4.480364,-1.538623,-7.390976,2.143799,3.065253,-2.540580,-4.596234,-5.634020,-3.126631,9.580733,-8.075514,-4.579167,-7.435743,-8.165442,-5.304351,-5.501512,-1.668326,-6.459075,4.790155,-2.801668,-3.445645,-9.423000,4.272280,2.117013,-0.129564,-2.342058,-3.128541,-1.496462,2.058727,-5.829285,5.470933,7.718596,8.434130,1.037257,9.506378,9.135149,-3.324475,-4.388251,9.385287,4.857040,6.844277,-5.106642,-5.892017,-3.265781,3.420289,-9.935270,9.910103,6.874191,8.138274,5.466595,-4.896513,8.075665,5.315903,-6.057411,9.756115,-1.188372,3.439130,-3.367860,6.932280,-1.329585,1.379761,-2.528544,-0.649933,-9.249173,-0.200196,3.163612,-1.706136,3.073803,-4.376162,-0.445357,-3.498256,-7.553309,3.103191,2.801219,6.670781,-1.090154,-9.734646,9.646506,-1.231874,3.755642,-2.129057,3.443777,2.335899,-4.452926,-9.664656,9.697399,5.881477,4.846636,5.168628,1.537237,-3.715916,1.968718,-6.542869,8.265955,-7.796073,3.840509,5.355161,-1.248461,-5.534647,0.542261,3.867671,0.156328,-5.291090,-9.216527,1.311690,6.995988,3.126676,2.624920,8.150976,-3.130033,6.344541,-0.645193,-0.238697,0.014717,2.807213,8.391192,4.463959,6.949401,7.222459,5.107089,-2.818409,-4.592925,-0.354891,6.008429,8.611183,0.285836,-7.497490,3.546789,-1.940489,3.930410,4.681745,9.574012,0.268225,6.890401,-7.163125,7.679319,4.231244,-4.794575,9.745008,7.139672,3.732993,7.636586,4.928757,-2.986723,5.460336,8.591014,-0.444436,-3.674733,-8.443416,8.606107,-2.847541,0.075598,-2.699810,0.827866,8.163951,-0.488468,-0.543367,-3.592995,2.469998,6.242168,-7.964434,2.605933,7.202754,-1.605938,9.685612,-4.547810,8.627720,8.667071,5.359738,6.156044,-2.201815,3.300807,-1.816171,-2.607882,-9.664684,-2.578347,-5.635394,-6.861972,1.515837,4.298341,-4.639472,9.805588,5.307069,8.664718,0.137613,-7.332249,8.749415,-8.508328,3.876493,8.073159,3.492263,3.084009,4.353646,0.346703,-2.182467,-5.274252,7.307142,-7.737568,-4.250411,8.978143,5.036920,1.320633,-8.761263,-0.760408,-0.172540,0.877624,0.046652,-6.536475,-5.743551,-5.170421,-7.132120,1.460662,-0.018096,8.627357,-5.268980,-7.677063,-2.552858,-3.467852,-1.458127,-3.723176,-9.952097,-4.063486,-6.354322,-0.521001,-9.560751,-8.704219,1.846404,-8.189500,5.046647,1.666171,5.362963,4.557079,1.918875,-0.935069,-3.258984,1.532797,-5.141958,1.982531,-1.179401,-3.057592,-4.661670,9.605413,-3.655758,9.652492,6.148261,2.540829,-9.772451,-1.585067,-7.512058,2.628224,-8.806886,5.699447,-9.459561,4.586514,9.790178,-5.954568,-4.214396,9.397592,5.920219,8.737204,9.769171,2.779765,0.257055,-3.906004,-7.493362,0.663417,-2.872852,-5.538532,2.654668,5.916907,5.166079,-0.772301,4.167794,-7.946121,-1.895099,-4.671862,3.975387,6.199093,8.126960,-0.899499,-8.672181,-0.812469,4.964409,1.805741,2.615271,7.068365,-4.562891,-8.999361,2.917318,4.228518,-7.978591,-6.550910,5.004458,7.039328,7.825438,1.804861,8.301697,-7.816389,-0.328649,8.072050,-8.682016,-8.447596,-7.738055,-4.818209,9.652049,8.481947,6.481359,6.642674,4.685240,-2.052650,9.257282,-3.498516,4.811104,7.620148,3.431510,6.359586,1.186342,-6.838743,5.653279,4.864929,-3.516359,-1.164650,-8.808896,4.900293,-3.791505,-3.979848,9.348201,-7.367519,1.035759,-4.466009,-6.374077,-8.281781,4.924346,2.483766,-2.306794,9.502596,8.841861,-3.118393,-7.985198,-2.179177,9.188071,-1.230822,8.069701,-0.741580,-7.731168,5.188858,-2.188926,-3.009842,0.122252,-1.460950,-5.204384,-2.855173,-6.104776,-9.504245,-7.113697,4.580929,6.582544,-5.481474,0.361833,-0.207991,0.788648,-4.159780,9.444603,0.718336,0.473386,-3.571660,-6.160304,1.534386,-0.138746,6.360374,-9.388607,-4.071059,-0.038167,0.680273,2.833853,4.933451,6.382724,5.880006,-1.290394,0.611325,-2.511660,1.834698,0.125371,3.803631,-0.281784,-5.878626,-4.389548,1.977693,-0.807985,-5.069818,-7.921995,-8.200296,4.113790,-5.528145,3.039649,6.416922,-2.031670,-8.556490,-7.826613,1.361578,-9.012198,6.292521,-0.278348,2.185869,4.175630,8.762820,4.476190,-0.155824,2.851091,-0.013835,-1.466819,-7.997670,-5.853330,-8.120761,6.612010,-6.911797,-7.612736,-0.167741,-3.473432,1.052886,2.954007,9.461129,-8.559629,4.093610,-4.294705,-5.202552,-8.359578,5.879822,9.225024,9.713005,2.327045,-7.056522,5.781650,3.300918,-8.959532,-5.607924,7.412605,-8.003471,9.054876,9.537622,4.955332,-8.265013,-2.460024,2.578952,-9.710507,-1.623617,-7.666228,5.683203,1.085800,3.613376,9.079983,4.084664,7.980455,-0.349114,-7.856545,-4.758245,-7.594787,1.866495,3.087626,-9.042414,4.669519,8.564889,-5.722205,9.642478,0.112916,3.971722,-9.406427,9.467690,0.878614,-8.432098,1.531652,5.657260,-8.606073,9.583682,3.033809,2.444006,-7.411022,-8.137263,9.450394,2.283234,-7.151626,7.709761,5.818145,-2.872624,-2.597117,-4.803204,-7.006782,1.258137,-6.636386,-8.125011,0.076168,-5.218436,-1.012851,-1.391180,2.444380,4.863143,-6.424253,-3.799983,2.285274,-8.658436,-8.044943,-5.455334,7.955992,7.147285,-8.276715,8.598247,6.685831,1.232145,1.663476,1.154024,5.745022,-3.170031,1.783388,-2.983791,-3.299218,-7.623263,2.559644,5.616959,8.520889,4.854601,-4.326617,5.859754,-4.139494,1.067889,-6.737769,-3.883611,5.504433,2.667662,-3.453892,-1.975026,7.072219,6.500209,9.062502,1.333410,8.827588,-0.472524,2.579334,2.946001,-3.791107,9.854395,9.195303,4.607147,2.002192,4.173173,-1.062219,-4.055798,-9.547267,-1.665950,-5.162880,-5.062493,-6.330048,7.891585,-0.714749,-2.567561,3.264319,4.694237,1.498054,-6.710469,-8.791965,-2.276244,7.109845,-6.189711,-5.413140,1.600617,-3.482408,-0.334669,-6.627699,-6.325223,-6.277372,1.627572,5.280161,-6.397570,0.721086,7.622333,-6.134512,-4.525937,-4.492594,-3.288500,-1.944639,2.197967,4.776875,5.811113,1.285614,2.634757,-0.310405,4.162206,5.310855,6.890180,-7.126514,-3.693493,-2.735076,-5.283465,2.980826,-1.439907,-5.178428,-1.709705,6.029886,2.435219,-6.160925,1.323001,-4.321540,-4.022118,-3.260859,-0.896671,-6.680006,-2.815491,-1.105081,5.257574,7.189870,5.354925,2.786579,9.320770,7.531325,6.878924,8.730528,4.496684,9.200405,-4.086373,6.887863,1.357223,9.455322,-1.180659,-7.493613,-1.726588,3.852280,-3.563627,0.531535,-1.733835,-0.733820,-2.373272,-7.667035,8.045642,0.227322,3.529306,3.163468,-4.360692,-1.835666,-3.820767,-7.332772,-0.442581,-5.732155,-3.259559,0.317330,-8.354370,-3.282989,2.004407,-7.285262,4.672433,-2.460767,-5.631509,5.991910,9.486346,-1.672141,-8.535625,-1.368255,-8.608361,0.892706,-6.282824,9.330578,4.516959,-0.393707,-5.321850,7.262961,-9.211642,3.378810,8.098784,-6.738861,-1.425316,-7.542715,3.056670,-1.133743,1.945200,7.042936,-1.964670,9.002292,-8.118044,-2.815891,-8.943293,-8.111669,-5.275061,-7.093756,-1.293207,-9.139368,5.349452,-6.135148,0.837840,-2.057003,-4.015037,-7.890752,2.989089,-6.222903,4.941607,-7.280300,2.083512,8.985435,-2.669376,5.850596,-5.079033,-5.014422,0.363713,-7.001920,8.300862,2.303513,-2.044327,-4.612597,0.144098,-0.407058,5.278360,7.124450,4.766242,-9.147626,-2.405982,1.269616,0.999448,-8.695028,-7.994190,8.946762,6.097746,3.128077,5.840419,3.412453,2.163347,2.800439,9.561799,5.006632,0.416433,-7.905736,5.626321,-8.950630,5.673813,1.125883,-3.446792,9.479401,-2.360032,2.402871,-9.923046,-8.697377,-6.135432,0.048109,-1.993404,1.653348,-3.527409,9.857827,8.321743,6.140229,-0.953802,-0.593127,0.395875,4.276966,-3.581358,3.377791,2.371211,-8.695535,-4.000718,4.712992,-2.471167,-6.687629,7.565380,3.004434,-7.996637,2.134500,4.035997,5.571910,-2.159312,-4.460834,3.963687,2.995871,-5.908007,5.924182,9.137954,7.266672,7.582481,5.542581,-4.230445,1.851370,4.204434,9.923090,-0.351141,1.205376,1.179710,0.419166,-4.617034,-7.996165,2.041491,0.052637,-5.321649,-9.477621,-6.555310,-5.093299,-2.656043,1.715886,5.232825,4.275324,3.760535,-4.038356,-6.933964,-0.708311,-0.396828,6.843874,-4.354848,8.602517,-9.574029,-3.139962,5.846775,8.641736,-6.553851,1.468960,2.897687,9.916188,6.046018,-6.784422,0.292326,-6.243921,4.224226,8.955458,-2.102589,-1.024691,0.815020,-4.422650,-5.257408,-8.361785,-2.885860,-0.669242,-9.855083,5.761095,9.224745,-8.125265,-8.249088,-7.806172,-4.318119,1.993247,-5.376914,4.317766,-7.970757,-1.559487,1.167524,7.798868,-6.769857,-2.965004,0.650604,7.328662,7.468979,8.341654,-3.705322,8.868327,-4.066951,-7.255846,-3.487743,-3.952350,3.398072,7.971364,2.612810,-6.317982,-2.865501,1.534489,-2.394295,-5.271409,-4.742393,6.623925,-4.223040,7.959070,8.022327,5.738972,-8.770778,-2.701504,3.924900,-4.379108,-1.029875,-0.424915,5.280949,-8.346073,-2.994656,6.664094,9.339948,-8.557235,6.550140,-5.367104,2.485476,7.700359,3.564278,0.736493,6.105719,3.392151,-8.290922,6.151822,5.508006,-8.041451,-4.839494,-7.642211,-2.106547,0.496112,0.590091,8.313319,-4.779647,-6.199589,-3.978566,-7.525496,5.242889,-4.423642,3.631101,-2.424405,9.500604,6.379901,-4.362670,0.084492,-3.008760,2.617906,-7.206076,-8.221909,0.315828,-2.001647,-3.853348,1.988390,4.567114,7.866234,8.793504,6.794834,-6.378779,2.796592,9.035518,-5.286712,5.527550,2.325193,-5.311015,-9.573768,-0.670879,3.041848,0.758115], dtype = "float32")#candidate|449|(1485,)|const|float32
call_448 = func_167_call(relay.reshape(const_449.astype('float32'), [9, 15, 11]))
call_450 = func_167_call(relay.reshape(const_449.astype('float32'), [9, 15, 11]))
func_362_call = mod.get_global_var('func_362')
func_367_call = mutated_mod.get_global_var('func_367')
const_452 = relay.const([10,3,1,6,6,-9,-1,5,8,-6,3,-8,-5,5,-9,-1,10,-4,9,4,-1,-10,-9,-2,4,-2,1,3,-10,5,1,-8,-10,-9,-2,4,-7,-4,1,1,-5,4,2,-1,-6,-2,4,7,2,-5,-10,-8,5,-1,-9,4,7,3,5,-2,2,-9,3,2,-1,-10,8,-8,-1,9,-5,-7,3,4,3,3,9,2,6,-7,-3,-10,4,-3,-8,6,-7,8,10,2,-7,9,-4,9,-8,-9,-1,1,-6,2,-9,9,-9,8,8,-5,2,4,6,6,-8,-7,3,-6,-2,-4,5,7,-10,-5,4,7,3,-1,-3,-3,3,9,7,4,-4,-2,-2,2,5,-4,5,-4,5,7,4,8,-3,-3,4,2,8,6,-7,5,6,-1,-3,1,-4,-5,-2,6,-1,6,10,5,5,9,-10,4,-6,-8,1,6,-10,4,5,7,-2,-1,-2,10,8,9,-6,5,-7,-10,4,4,8,-8,-9,-8,10,3,6,9,-5,-3,1,-2,2,-5,-9,-10,8,-7,-5,-7,-4,6,6,-5,8,-1,-7,5,6,-6,10,9,6,-4,2,-5,-4,6,10,2,-1,-5,7,-8,2,7,9,-10,3,-5,7,-9,3,-2,1,1,6,-10,5,-7,9,-1,-9,3,-6,7,8,-6,-5,4,-10,-6,10,-3,-4,-4,-6,3,-7,-9,5,-8,-4,-4,1,-3,-2,1,-6,8,7,-5,6,-8,4,-6,3,-4,8,-4,-7,-4,-9,-2,9,7,10,9,-1,9,-2,4,10,-2,5,9,-6,-2,8,-10,-4,5,10,-9,10,-6,-6,-10,8,7,10,7,1,-1,-3,-9,9,-10,9,7,1,2,4,4,-5,-9,-8,-3,8,-1,-6,-8,4,3,9,-3,-5,-8,8,-3,4,10,-10,3,6,9,-4,-6,-6,6,-10,8,5,-4,-7,-7,-3,-2,-1,-9,1,-10,6,7,-6,-9,-1,2,2,-8,7,9,4,2,-8,-2,-10,6,-10,-8,-8,-5,-4,3,-4,-3,10,-10,-5,10,5,2,8,-9,-5,-7,4,9,8,1,7,-5,-8,-1,-9,-4,-7,-8,-8,-3,6,3,-1,-5,6,-5,2,2,-6,10,-6,-2,5,-7,-8,6,-2,3,3,6,-8,4,10,-9,-9,-4,5,9,7,-3,-8,-1,9,-6,4,2,1,-1,4,-7,-10,9,6,-7,1,8,-8,2,2,10,9,9,9,-1,9,7,1,-5,1,-10,2,4,6,7,-3,8,-10,2,-7,4,2,-5,7,-10,2,5,-7,-5,-6,-2,1,2,5,3,-8,-9,-10,5,-4,8,-4,-3,-1,-3,3,7,-5,7,3,-3,-7,-5,-5,-4,7,9,4,-2,10,-1,3,9,7,8,-6,-2,3,1,8,-1,7,6,-1,6,6,-8,-5,6,3,-1,7,5,9,-8,-1,-1,8,-10,6,4,-3,-10,9,10,2,-2,-5,8,3,2,-4,2,10,5,-10,-5,-1,-3,1,-2,-7,1,-3,7,-5,-10,1,5,6,5,-8,8,7,10,5,2,-8,3,4,-7,-8,-1,1,-8,5,4,8,-3,-5,5,-4,-1,2,2,-5,-6,-6,-2,3,5,-5,-1,2,8,-6,-7,-1,-1,-4,10,3,-4,3,7,8,-5,-2,-8,2,-10,-10,-9,5,6,4,-3,-4,-8,-5,-4,-9,-9,-7,3,-2,8,-10,-5,-6,8,-6,6,8,-6,1,7,1,2,3,-7,-10,9,9,-7,-4,4,-6,2,6,-10,-10,-8,-2,-10,6,2,-2,8,-6,8,-1,-3,-3,-4,5,-6,10,-9,-2,9,-6,-4,3,-2,8,-2,2,-6,2,-4,4,3,3,6,1,-3,-8,5,-10,4,-7,-7,-2,4,4,1,7,4,6,-3,-7,1,-7,9,-3,7,9,-7,-8,-5,8,-2,9,-2,6,-9,-4,-10,-9,10,2,-2,-1,4,-9,-2,4,-1,-10,8,-10,8,-9,7,-7,-10,4,2,10,-5,-4,7,10,2,2,-5,7,8,-2,-6,4,8,5,-3,7,-5,6,-10,3,-6,2,-9,3,-6,2,3,-7,6,-2,-8,-9,-9,-8,-1,1,-6,-7,5,-2,-6,-5,2,2,6,9,1,1,-2,9,2,1,6,-4,-1,-1,1,-7,-8,3,1,9,7,-1,9,-2,-1,-8,10,-7,-8,-7,-4,4,-3,7,-6,-7,-6,-3,10,5,-8,-10,7,-9,-6,6,3,4,-6,10,-9,8,-5,10,6,-7,-2,-5,4,4,2,-2,9,-1,-8,8,7,-1,-6,-8,-10,-9,3,1,-9,9,-4,-8,-8,-9,-1,-4,-2,-1,-7,3,5,10,-7,7,-4,1,9], dtype = "int8")#candidate|452|(900,)|const|int8
call_451 = relay.TupleGetItem(func_362_call(relay.reshape(const_452.astype('int8'), [15, 6, 10]), relay.reshape(const_452.astype('int8'), [15, 6, 10]), relay.reshape(const_449.astype('float32'), [1485,]), ), 2)
call_453 = relay.TupleGetItem(func_367_call(relay.reshape(const_452.astype('int8'), [15, 6, 10]), relay.reshape(const_452.astype('int8'), [15, 6, 10]), relay.reshape(const_449.astype('float32'), [1485,]), ), 2)
output = relay.Tuple([uop_443,call_448,const_449,call_451,const_452,])
output2 = relay.Tuple([uop_443,call_450,const_449,call_453,const_452,])
func_461 = relay.Function([var_442,], output)
mod['func_461'] = func_461
mod = relay.transform.InferType()(mod)
mutated_mod['func_461'] = func_461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_462 = relay.var("var_462", dtype = "float64", shape = (15, 1, 10))#candidate|462|(15, 1, 10)|var|float64
func_461_call = mutated_mod.get_global_var('func_461')
call_463 = func_461_call(var_462)
output = call_463
func_464 = relay.Function([var_462], output)
mutated_mod['func_464'] = func_464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_502 = relay.var("var_502", dtype = "float32", shape = (2, 15, 12))#candidate|502|(2, 15, 12)|var|float32
uop_503 = relay.exp(var_502.astype('float32')) # shape=(2, 15, 12)
output = uop_503
output2 = uop_503
func_510 = relay.Function([var_502,], output)
mod['func_510'] = func_510
mod = relay.transform.InferType()(mod)
mutated_mod['func_510'] = func_510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_511 = relay.var("var_511", dtype = "float32", shape = (2, 15, 12))#candidate|511|(2, 15, 12)|var|float32
func_510_call = mutated_mod.get_global_var('func_510')
call_512 = func_510_call(var_511)
output = call_512
func_513 = relay.Function([var_511], output)
mutated_mod['func_513'] = func_513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_551 = relay.var("var_551", dtype = "float64", shape = (14, 4, 11))#candidate|551|(14, 4, 11)|var|float64
uop_552 = relay.exp(var_551.astype('float64')) # shape=(14, 4, 11)
func_510_call = mod.get_global_var('func_510')
func_513_call = mutated_mod.get_global_var('func_513')
const_561 = relay.const([5.193355,9.586463,4.823164,-1.405102,-2.144874,9.092980,1.727601,-2.104160,6.988146,4.763467,-3.021766,-2.961497,-0.793248,9.698102,1.967987,-4.994687,3.102900,9.969752,6.814408,-8.546151,8.452951,-9.563289,-1.742252,9.807365,9.617263,-8.937613,-1.994434,-2.910316,9.582856,-1.195182,2.469152,4.448814,-3.758089,-2.561386,-4.037443,6.410200,-3.786101,4.726520,-7.020977,6.681729,0.352108,7.988504,-2.824105,-2.824558,-8.381924,2.392748,3.155987,-3.553177,5.556013,8.504381,9.426817,8.688499,-1.452998,8.937762,-0.136411,5.122266,-1.971973,3.432805,-9.644346,0.125932,-6.435945,7.713019,5.060015,4.761254,-8.648033,8.656518,5.344565,5.557902,0.636238,-9.845078,3.243134,3.349198,-2.137919,4.609795,-8.969913,7.047384,8.814197,-1.632142,-2.859253,7.015279,7.600583,2.343236,3.740698,-8.313722,1.791797,-3.383591,-0.967556,-8.644140,-3.747953,-5.609667,-7.971520,4.523220,-3.466581,6.353209,8.620328,3.137360,8.474222,1.687990,6.173648,7.104129,-8.445519,-6.914697,3.377294,-5.766510,-5.192093,-3.298664,-7.094395,-2.391470,6.598597,-7.243661,-7.769963,3.773343,-4.700962,-6.920105,1.976023,-2.382591,-5.030925,-3.395535,0.204655,9.588348,9.350375,7.022367,-6.150181,-8.476929,8.254638,-2.649370,-8.246100,6.171762,7.338514,9.235879,0.364841,-1.280226,-3.171524,4.561344,7.816853,1.522482,-2.406021,4.973869,-7.727803,-9.259485,-1.513264,9.100929,8.940064,2.461902,-3.781224,7.976218,-6.951782,5.388462,-9.555914,-3.647945,-2.177624,1.783870,-1.875460,8.390767,-0.689871,-8.226828,-7.473331,-7.946098,-8.803160,-1.651864,-1.455373,-1.865898,-2.060229,4.716024,-8.285359,-0.331227,2.687376,9.186451,-9.335073,-3.581505,1.854823,8.917799,-0.444324,4.802045,1.413538,2.974223,8.061179,-0.992736,-4.003064,-9.344852,-9.072301,7.896556,-7.852480,2.225485,6.117617,-6.884517,2.466101,-3.722723,9.473615,-0.443897,-2.863025,-0.209581,-0.968957,3.751080,-8.444205,4.229034,-6.276978,-9.456932,-1.247931,-6.130339,3.874016,-5.833230,-9.403832,-8.256477,-6.940860,0.505392,-2.145934,-8.128781,-5.464474,3.769815,1.194762,8.237620,5.740741,5.754511,-0.941003,1.303988,-5.144317,-1.571954,7.089894,-6.090621,1.734653,-9.626544,5.543923,-1.219109,-2.568391,-9.000315,2.091168,6.380024,9.644265,-5.250007,-6.255103,2.236467,5.993893,-9.392439,-9.566588,-7.128194,-4.868485,0.668265,3.270485,4.936977,-7.498310,0.003859,-1.519370,-8.706027,7.928803,6.152207,6.083160,-4.965206,-7.589559,7.143686,0.575156,-8.112868,-3.718006,0.446646,-4.585915,3.068946,-7.777472,-3.900204,1.499547,-5.877210,3.241386,6.516645,-4.380340,3.413010,-6.373841,7.223633,-6.916149,6.527253,-1.417107,-5.466047,2.631808,6.188047,-2.978724,-5.483128,-9.176447,5.493394,-3.226530,-8.788914,-9.737165,7.157644,-9.108823,4.909749,2.234293,5.788496,0.435344,-4.244312,7.155886,5.516305,6.175853,-7.910076,-4.397727,6.607212,-7.791524,-2.454211,8.875062,1.789458,-6.557568,-9.072718,4.860436,9.820673,1.903622,2.792542,7.872408,-5.924717,7.241082,8.804092,-2.578396,-7.279785,-1.205544,-7.710198,5.200423,-6.299629,-7.588453,9.344115,-1.173535,-3.352898,-5.079699,4.069490,-3.893534,-3.290690,-5.802913,-7.408560,-1.447818,0.555366,5.477050,-9.972684,7.745426,-5.659003,0.356990,4.208996,3.507130,2.682133,8.783582,5.148703,-6.246667,7.761047,7.214475,-1.796640,8.908670,6.468016,3.412429,1.614730,-0.900233,-2.317926,9.771256,5.625345,7.239436,-9.032143,5.605516,2.996612,2.006257,-5.803877,-1.966245,-7.585192,-9.521357,-6.097813,2.023331,-1.349414,8.252747,7.009363], dtype = "float32")#candidate|561|(360,)|const|float32
call_560 = func_510_call(relay.reshape(const_561.astype('float32'), [2, 15, 12]))
call_562 = func_510_call(relay.reshape(const_561.astype('float32'), [2, 15, 12]))
output = relay.Tuple([uop_552,call_560,const_561,])
output2 = relay.Tuple([uop_552,call_562,const_561,])
func_579 = relay.Function([var_551,], output)
mod['func_579'] = func_579
mod = relay.transform.InferType()(mod)
var_580 = relay.var("var_580", dtype = "float64", shape = (14, 4, 11))#candidate|580|(14, 4, 11)|var|float64
output = func_579(var_580)
func_581 = relay.Function([var_580], output)
mutated_mod['func_581'] = func_581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_831 = relay.var("var_831", dtype = "int16", shape = (6, 11, 6))#candidate|831|(6, 11, 6)|var|int16
var_832 = relay.var("var_832", dtype = "int16", shape = (6, 11, 6))#candidate|832|(6, 11, 6)|var|int16
bop_833 = relay.subtract(var_831.astype('int16'), relay.reshape(var_832.astype('int16'), relay.shape_of(var_831))) # shape=(6, 11, 6)
bop_861 = relay.greater(var_832.astype('bool'), relay.reshape(bop_833.astype('bool'), relay.shape_of(var_832))) # shape=(6, 11, 6)
output = relay.Tuple([bop_861,])
output2 = relay.Tuple([bop_861,])
func_865 = relay.Function([var_831,var_832,], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mutated_mod.get_global_var('func_865')
var_867 = relay.var("var_867", dtype = "int16", shape = (6, 11, 6))#candidate|867|(6, 11, 6)|var|int16
var_868 = relay.var("var_868", dtype = "int16", shape = (6, 11, 6))#candidate|868|(6, 11, 6)|var|int16
call_866 = func_865_call(var_867,var_868,)
output = call_866
func_869 = relay.Function([var_867,var_868,], output)
mutated_mod['func_869'] = func_869
mutated_mod = relay.transform.InferType()(mutated_mod)
const_884 = relay.const([[[-3.672762,9.366834,-0.300016,-9.817929,-8.528673,0.623198,1.202388,6.338969,1.041711,0.452743],[-2.262319,7.190851,9.887974,5.477595,7.605843,5.598517,0.506685,-9.672143,-7.047465,5.416007],[-3.110824,7.672939,2.108733,4.629626,4.822613,3.352768,-0.713828,-0.676582,-4.431877,-2.530918],[6.065436,1.955364,-4.805282,-4.543781,-1.795527,7.221675,-8.053088,8.594043,9.392125,-9.117641],[5.862396,-9.625540,-1.518057,7.420261,5.959226,-8.957059,-6.818540,5.601817,-3.395747,9.408331],[3.651745,7.992508,2.746680,-9.800882,-0.781949,-0.572292,-1.920684,0.147806,5.183899,2.627735],[-1.297717,5.733740,-5.952595,-2.903107,-2.431727,6.419499,-4.481717,8.168786,2.865824,4.514943],[-4.596141,4.597608,-3.574331,-4.708499,-4.043868,-2.031506,8.940600,9.993852,6.430250,-1.030925],[3.075267,6.756050,1.593714,-0.268762,-7.223093,-6.577363,8.197749,-0.847854,-2.125848,6.636648],[-3.997483,-5.605258,-8.797271,6.212154,4.787912,9.526588,-5.227460,-0.770200,-9.468820,-7.344894],[-2.551796,1.744098,3.618237,-9.643816,-3.836794,-9.586201,6.994232,0.701886,-7.406097,8.519922]],[[-4.542865,-2.611397,-9.073176,-9.698471,2.081450,5.615649,5.462524,9.048020,-8.761586,0.545781],[-1.880032,-9.838277,-2.943268,7.751078,-8.677275,-1.532823,3.318736,2.319238,6.964481,-2.370202],[8.769437,9.387067,9.654832,2.075403,-1.947127,-3.995301,-4.419008,-7.478865,-3.942688,6.370257],[6.443585,-8.758481,-0.743832,-0.135767,7.785701,4.423461,-1.592942,-3.180726,2.107289,-4.482003],[-0.784916,-0.790439,2.612370,1.584740,-6.373410,-8.603041,-7.117705,9.554127,4.412998,-1.739460],[-5.772301,4.036819,-3.792532,-5.217933,9.449327,5.094691,-2.344607,-9.870622,6.761313,7.865693],[-1.100710,4.677092,-2.719248,1.537537,-1.672241,3.202640,4.994867,3.384829,-8.310288,-6.242980],[-6.208338,6.878715,5.428288,-9.263122,2.445173,5.779319,-4.125067,-3.619827,5.160857,-0.277845],[9.183898,-8.543784,-6.821669,2.964883,-1.470517,-2.165789,8.512968,9.168507,9.959056,4.164048],[8.867366,-0.204566,1.136580,7.355668,-7.427629,-7.462216,0.357483,5.711282,2.256728,-4.027051],[-9.082668,-2.476229,-3.262644,-8.392440,-6.219423,-8.539394,-0.570829,3.672869,8.431542,-5.248835]],[[-2.668241,4.339571,-2.904361,9.637320,5.018202,6.847104,-3.334324,-1.205062,2.770453,-1.723307],[-1.223894,4.862590,2.176105,8.096889,4.618047,-9.743629,-3.099758,8.661495,-0.300811,-4.204657],[-3.343540,2.692685,-8.852609,2.882972,4.861063,1.644449,-9.736362,-2.152075,2.311967,-4.974421],[-3.078688,-8.364214,7.054677,3.596444,-6.228300,2.178531,4.381365,9.590974,-6.443234,5.838921],[-3.589602,-3.153321,5.925525,-7.323617,-1.600484,-4.111030,0.737453,4.521175,-1.541067,1.285702],[0.163317,-2.649443,7.281468,-5.173618,-7.714206,3.311605,-1.427227,-0.535850,8.033129,-4.637818],[7.617970,-2.853373,7.331129,5.059652,-3.596041,-5.581372,-4.109943,-3.764672,-5.654864,6.802886],[-1.197009,6.853682,-4.347649,-8.602263,-9.189588,1.302899,8.013267,-0.355803,-4.404301,2.401976],[-3.330511,-7.412655,-4.833574,2.540474,2.231045,0.800783,4.881946,-3.216412,-2.276128,3.525579],[8.073838,0.770134,-3.428421,5.585453,9.081487,3.031918,-0.059230,-7.816725,-3.495026,9.983906],[7.229312,8.827371,3.907403,-4.782242,5.191178,-1.664024,3.862111,2.148852,2.563263,-8.783742]],[[6.470764,0.417875,1.167981,-0.670615,9.317653,2.792032,5.043281,5.899887,-9.620149,-1.065471],[-5.342282,-8.186891,-7.366308,9.766000,-9.793592,4.104641,-6.166341,0.451733,-4.391165,9.392524],[1.481484,-7.452891,-8.884476,9.206132,-1.816808,-7.370389,-2.948273,-4.871974,-4.328920,-6.482762],[9.743381,4.196073,-2.421483,8.971247,-7.142806,-3.452131,2.641441,-2.493983,7.245400,-4.888236],[-3.205375,-7.204095,1.308310,5.421742,-6.415419,-5.426415,2.654923,0.728280,-6.145116,4.564767],[-0.871788,-5.233012,-0.241332,3.969693,-9.461178,0.878004,-8.839838,9.006031,-0.511645,1.382720],[-5.975659,-0.439783,9.230861,-9.352726,-7.344286,8.625399,9.369998,-3.430914,-1.707897,0.601293],[7.642319,3.881085,-5.795452,2.374180,-3.097958,-4.503291,-5.633411,-1.650309,-3.496554,0.682067],[-3.362043,3.522805,-0.299839,-4.647623,7.933143,8.220827,-6.756098,-5.590024,5.078302,-9.925536],[1.976661,1.038772,9.128765,1.006893,-8.844295,1.121672,8.904135,-9.769850,-7.381867,2.861012],[9.846806,2.457906,2.299460,-6.010975,3.254137,-6.960831,6.901961,4.183429,-6.736964,5.125738]],[[4.921254,0.661882,2.814401,7.463036,-4.783188,-8.591074,8.696494,-0.357163,6.575716,-4.736352],[7.611072,3.489389,-5.175062,4.921476,-9.327576,5.046685,0.895765,-9.481838,-4.692317,7.315953],[-7.896926,-0.858622,3.786500,3.300299,-1.790400,5.169476,-6.138986,-3.637196,3.152078,4.990175],[-8.135746,-8.705260,-5.405775,2.278290,-2.689765,0.233685,-6.294873,-3.574638,-3.659456,-5.744825],[4.638922,-0.302492,1.399588,-0.194184,0.025624,-4.673030,-4.144534,7.502246,2.874584,-3.173980],[7.055548,6.410169,8.641478,8.513489,9.749745,-4.769106,-9.323976,-9.627076,-4.888150,-2.923846],[7.669868,2.823394,1.394944,-7.019801,9.339946,-9.190296,-9.031330,-7.577939,-9.422606,-7.797695],[-1.485150,-8.055390,9.897195,-2.597223,-6.522085,9.172163,9.884005,2.214410,-1.566259,6.753985],[-3.093477,-6.670861,3.784782,2.647685,9.396353,4.566724,-6.063722,-5.672464,4.185191,4.873076],[1.620915,4.200632,-1.631502,-7.987050,-1.448484,-5.899661,0.979125,2.113742,-2.510658,-9.742782],[-8.337055,9.395609,-1.817604,7.772038,-1.971465,6.784285,9.261452,-6.103133,6.879416,-0.295227]],[[-8.438267,3.242253,-0.198040,1.710981,5.314402,-2.922066,2.543637,-5.043679,7.408780,6.260379],[9.090628,7.456607,5.816735,-5.679817,-7.635880,-7.806923,6.550263,8.652670,6.429384,-8.694607],[-4.657905,-9.124787,-1.053252,1.619464,-4.564219,0.898586,7.913009,7.052872,-7.667238,-0.192474],[-3.764481,-9.613202,-8.512835,7.677696,-7.616043,-6.023898,-6.333067,-8.880144,1.579501,-0.818789],[6.221374,7.312970,9.144318,4.876918,-7.367154,-4.056355,3.906418,9.590665,-1.243411,3.048970],[-5.136531,-1.148822,-8.656018,-8.955731,-2.902098,-0.231021,-8.620418,6.546871,-5.311835,-2.147903],[-5.115451,1.070424,0.746915,3.013987,-9.176062,-9.287973,-1.688927,8.513701,1.205111,-6.828746],[1.076674,4.904777,2.378340,1.929202,-6.802627,-0.505506,-6.500791,-5.083671,-1.979957,-9.961952],[-9.712101,-5.524454,2.468121,8.184990,5.548067,-8.601599,-4.327218,-1.254215,-4.741798,6.927503],[7.793290,7.566299,-8.247549,6.836270,0.317902,6.643291,-5.820003,-6.940125,9.898114,2.385465],[-5.860777,7.771098,5.749686,-3.444039,4.105755,-6.596734,0.031157,7.660264,6.567536,1.012157]],[[-7.935498,-7.578542,-1.125069,-0.428217,1.691740,-2.726427,5.237227,-1.181153,3.642942,3.371974],[1.154973,-1.708793,6.851482,-4.237058,-4.566415,-5.660950,-6.381004,-6.827521,8.723575,-3.295295],[-9.862196,-4.360343,8.783931,-9.422845,2.357919,3.244542,-4.434039,-6.467477,0.570896,-6.199017],[-6.716595,-0.464411,-3.726061,4.909917,1.970884,-9.174461,-1.813935,-6.257324,2.061222,-5.022242],[-6.853411,4.770619,6.647370,-0.321520,-7.447070,9.359688,8.403825,0.740850,-2.234280,-6.645925],[2.707234,1.283085,4.753170,1.183177,-8.057005,-5.756213,0.559514,3.019380,1.898018,-8.283890],[0.497816,-7.877325,4.585113,-3.924572,-0.331806,-9.802064,6.031131,5.986199,0.128438,0.873799],[-0.375241,-5.319924,-2.943600,3.060601,8.081681,5.878643,8.894549,-7.046004,-1.121934,-3.042704],[9.030484,-1.226582,-6.754172,5.585602,-6.430298,9.756095,-2.039830,-4.380377,-4.333930,-9.443050],[3.805183,-1.994253,3.920805,-1.672747,1.073620,-5.113587,8.686685,3.691305,-0.003505,8.137075],[7.703633,-6.746439,-1.329108,-6.611896,-5.907978,-5.521713,8.241703,-4.107481,8.630506,-0.971947]],[[8.101587,1.126295,9.090571,-4.990127,-0.801612,-8.418384,-7.734708,2.156837,0.630731,5.677895],[9.680264,-6.964264,-0.312468,6.329525,4.481938,-2.683708,0.718040,7.507526,-4.237154,-2.908351],[0.827440,4.168153,8.054816,-7.246783,-3.275449,-5.846104,7.830404,-3.286981,8.695992,-1.924794],[3.521266,3.311005,-2.178750,3.599729,-2.746071,6.767389,-1.325107,-2.570844,-5.167871,9.100702],[-6.012146,-2.081304,-6.680663,-9.845824,-7.447535,-7.057507,1.004343,-8.480031,-2.752110,8.461976],[-7.252169,-9.332191,1.337885,-4.844093,6.642078,-8.968690,-1.191311,1.987540,-6.052516,-7.320618],[-6.777150,-8.715984,7.687205,-2.886075,5.303302,-2.814728,-6.695862,-9.353630,7.695398,1.910824],[-9.805204,0.592272,-7.996891,7.938846,-9.779256,-6.802869,-1.741438,-9.806562,4.821439,5.602844],[-0.671913,-3.702423,-3.419117,-1.684644,-9.944846,-3.200405,-2.443867,3.207434,7.528750,0.227530],[-0.729564,-2.587030,-4.420008,-3.430721,9.834789,-5.140467,-6.208767,1.760224,-0.740656,-4.272015],[8.589311,5.912026,-7.071174,4.470737,-9.158786,9.785197,-0.811565,4.609025,4.251609,-1.852237]],[[-9.102595,-0.993736,-1.578439,7.052034,-4.167121,5.607988,3.018134,1.313800,9.129828,9.228317],[0.616405,-7.820772,-1.090973,-2.013790,-0.094425,9.815734,-2.364670,7.656887,9.862518,6.471084],[-9.521069,8.999916,0.258268,-2.374437,2.914095,-2.369623,-7.096134,-3.578539,7.268433,-6.462343],[-3.740363,-5.057912,-5.074888,0.772987,-7.255679,1.706122,9.252614,-1.413387,6.849262,3.874678],[-7.739134,0.184871,-9.604359,-3.324049,-0.972974,4.791502,-6.930430,1.821340,3.625456,-4.319912],[4.795604,9.618774,-2.093360,-7.996568,-3.902844,8.803956,6.622175,0.346703,-7.954686,7.640771],[7.664584,8.612815,-7.401047,-3.988201,6.311258,-9.613834,-4.208374,8.806754,6.273440,-0.477121],[0.217079,5.751114,-6.355254,7.731919,-5.527320,6.187909,4.431629,8.084475,-4.612513,-9.336113],[-4.399600,-6.976578,-1.156435,5.370073,5.965614,7.673896,9.401278,-3.794441,6.889904,5.231260],[-4.516713,5.595004,8.737895,-7.285481,-1.216925,-1.579947,4.887123,0.983363,-4.859370,0.608090],[-6.845182,6.909846,1.045054,7.205659,8.285289,-0.497375,-0.262958,9.891083,-0.333749,7.360050]],[[-8.553106,7.851263,-8.110539,8.628452,-9.095519,0.878667,1.358909,-3.209183,-4.448074,-4.263580],[-0.206542,2.575923,-8.452803,9.685984,-6.618389,-8.113007,-1.057168,-2.820390,-9.216168,3.026551],[3.901354,-2.221323,0.021496,6.966755,-5.652070,1.309396,2.165378,3.299984,-5.465305,-8.858244],[7.084305,8.292807,6.703628,2.239588,-6.542762,-0.206769,4.017309,-1.165026,5.069493,-3.038630],[8.101658,8.116803,-3.318499,6.706681,3.500960,-2.085599,-2.982532,-1.700130,5.968296,5.719395],[-7.120986,9.373750,-2.066158,8.246318,-1.386232,-0.567875,2.053981,-0.540865,-1.669322,-0.438181],[3.363710,2.166190,8.229244,7.367197,1.943778,-8.062198,-5.121283,3.656538,8.705877,0.956271],[-7.718798,-3.037693,3.159253,8.234571,-0.218410,2.748312,-7.376677,5.212145,-5.285659,7.174648],[5.006537,8.449673,9.444019,5.075350,9.554236,-4.219997,-3.907261,-3.795509,5.818081,2.139000],[2.748299,-7.143968,8.581212,0.978749,-2.009353,1.657467,-6.384988,-1.551180,9.486967,4.962616],[-9.856042,-0.143096,-8.184165,-2.461381,5.727952,9.800559,-2.640303,-5.454256,5.517326,9.731959]],[[-7.856378,6.410242,2.715996,5.778376,7.687819,-6.064434,-4.656171,-2.600121,0.999115,1.013436],[4.250566,2.071226,-9.258349,3.084186,-7.191846,7.579779,-6.312549,0.927873,-2.288781,-1.060380],[7.151625,7.586386,-2.399441,-8.676829,-5.594443,-2.155332,-9.368721,9.983339,4.096235,-4.621718],[1.911395,1.423091,3.265545,-9.732195,4.683939,8.355410,5.782567,-0.480275,1.462859,3.832504],[-1.880378,0.257440,9.057194,2.263367,9.449389,-7.948919,-8.020958,-3.581500,8.169130,2.440545],[-6.664468,1.659461,-7.779880,3.452295,9.424105,6.910437,-4.323003,-8.139115,-1.550710,-2.121093],[-3.346247,-4.807352,-9.618694,-0.172007,9.201716,-7.502027,-8.026762,7.179254,-7.076385,-1.545487],[3.057263,1.669675,-9.090604,-2.381109,-1.121399,6.857855,5.273825,7.230198,-4.796165,2.071805],[2.749308,3.774805,-7.553685,-8.503277,7.484834,-9.010637,7.501222,-1.296096,9.344906,-4.565038],[-6.961575,-8.130158,4.287660,9.639053,7.829556,-1.870929,9.668907,4.630248,-1.853056,-3.006131],[-7.993686,3.038836,-8.242733,-9.566404,-2.770469,3.158472,-4.734725,-9.599421,7.972925,3.331227]],[[1.696030,-3.769850,-9.353776,-3.907967,5.573795,-9.193601,8.341147,4.303857,-1.157573,9.657621],[-1.982448,6.432394,0.059194,8.580766,4.180179,2.324450,-7.071172,0.127063,0.949399,9.091088],[-7.775163,0.918421,9.483279,-1.440879,-8.369401,-0.658366,-9.098689,9.857813,-1.886731,9.819892],[9.737148,-3.224909,-3.342070,-9.982690,5.632584,-9.900267,-9.603114,0.194707,1.928028,4.713743],[5.427445,-6.001299,0.520849,5.975768,-1.777800,1.081745,-2.127057,0.851980,-4.891852,-1.869655],[-7.579997,0.211579,-2.728639,-8.374920,-8.511668,3.001210,-1.233292,-1.708056,6.477043,2.280179],[-0.105723,-5.584766,-8.167532,0.960076,6.368072,-6.411956,-5.610776,-9.155833,-7.586082,-4.666751],[-3.291319,-3.970469,-2.088078,-4.612649,5.819526,9.894312,0.891287,-4.361305,-9.570972,-9.929665],[0.059639,6.311753,-0.341829,3.470116,-5.555712,-6.327473,0.812170,8.194626,4.897461,-0.665747],[5.001216,-9.572454,7.799038,-6.801347,-5.189193,3.197595,6.331170,6.919924,8.009208,-7.454073],[8.129387,-6.480324,-6.162433,-9.769213,-4.312760,-9.396893,-2.679786,-7.630598,3.218972,5.911243]],[[6.902912,0.558784,2.146578,-6.519674,8.332714,1.065756,0.403863,-6.664050,8.192070,8.650751],[2.944667,-4.955261,-8.264241,5.791969,9.445844,3.166792,8.278234,-1.177977,-4.122607,7.575539],[9.565449,-2.768324,4.072315,-2.881532,8.408019,-8.172006,3.934072,-9.556187,1.524201,4.784699],[1.548921,4.082822,-9.280379,5.554349,-0.153340,-0.219036,2.926551,8.117933,1.895643,-0.605569],[6.508623,0.047475,0.351106,6.620044,2.231854,4.982487,9.373551,-0.541599,-5.316467,-4.773987],[-9.279809,9.139926,1.879874,-2.144247,-0.864122,8.011454,5.977491,8.750735,7.598391,1.213975],[7.126242,9.877196,6.916466,-8.780157,5.009306,5.294010,-7.648127,-6.589694,3.831783,-8.337984],[2.336766,9.352178,1.228102,2.691671,9.605559,2.091628,6.406646,-9.124801,-9.384835,5.326628],[3.162745,-4.788792,9.016124,-7.269598,6.385932,-3.333832,-3.162400,-0.958832,-4.580678,-7.238682],[-0.482315,8.197807,-8.910409,5.006907,-4.158178,1.671406,2.509047,0.312501,-9.891799,1.388379],[3.923189,-1.715127,1.572921,8.417354,-8.258804,-0.320764,7.557482,-0.898785,4.340704,3.614043]],[[-5.379751,6.764103,-4.425490,-6.782756,-9.411675,-0.153204,-9.977877,-5.973136,4.554073,7.842193],[8.317607,3.638373,9.553879,4.121154,4.160419,0.390627,4.830845,7.080651,8.084269,-8.395230],[9.262119,7.032349,2.365588,8.809793,6.916050,-0.794210,-6.971608,-0.480464,0.320028,-4.931320],[-6.121824,2.919385,2.472532,0.040400,-8.850951,-9.753245,-8.809383,5.098057,9.086744,6.804664],[-6.047421,-6.723049,6.425305,-5.611093,-0.410689,3.668503,-4.710458,-1.169066,9.516122,5.078906],[2.762858,3.909148,9.621066,4.602707,7.546229,-3.719681,-1.127272,7.745219,4.158092,-3.396964],[-9.940157,-0.509165,-6.345591,-2.949375,-9.997381,-5.523783,-6.962570,8.084945,-4.785152,-2.495712],[3.491088,3.513438,4.823873,0.838974,3.617518,-1.258125,8.901405,-8.538540,8.998815,9.484285],[-1.636065,2.784278,8.128322,5.281448,3.517759,-4.977959,-0.973718,-6.061756,-6.743488,-1.496508],[-7.256428,4.036414,1.855677,7.081675,4.113498,-6.175824,-4.181204,-4.295866,-7.228008,-9.586966],[6.227831,9.975143,-8.516773,-5.130825,7.334834,-0.960950,8.381585,-6.727793,-2.369527,-2.030584]]], dtype = "float64")#candidate|884|(14, 11, 10)|const|float64
uop_885 = relay.acos(const_884.astype('float64')) # shape=(14, 11, 10)
func_510_call = mod.get_global_var('func_510')
func_513_call = mutated_mod.get_global_var('func_513')
const_890 = relay.const([8.132642,-9.370562,-1.407671,-6.156595,6.381419,-8.974193,-0.996155,-1.971418,-8.662977,4.876452,-3.743207,2.764818,-9.655986,1.285744,7.567267,2.482675,9.775918,5.572912,7.438947,7.932033,-2.850755,7.188387,-7.312435,-6.578425,3.730181,3.204177,-2.635776,-7.059090,-4.355401,5.534078,8.075607,-8.669972,-7.583547,-6.921575,-4.697620,-8.880304,1.905625,0.171184,7.631962,3.047130,6.304154,4.210294,7.363906,6.052719,5.091709,3.384195,1.009287,1.257995,3.075182,1.272622,4.518320,-3.727115,8.709221,3.218956,8.693600,-2.597975,4.115698,2.477197,8.653117,-8.475757,1.261980,6.776448,1.849076,-1.577066,1.257732,-4.119261,-9.061069,5.208922,-8.409392,-4.092432,8.894570,9.264895,-2.576268,-3.252392,6.428845,6.760243,-3.847877,8.250928,9.744613,3.649355,9.737761,-1.378341,-3.895664,-9.915611,-8.393829,0.621860,4.797760,-8.766145,8.439008,5.543250,6.157444,5.878575,2.129451,8.532097,-0.874509,1.634240,9.761980,6.197521,-1.573678,-3.206314,7.457353,-4.377167,-9.613035,-7.297327,1.527573,-8.126999,-3.581260,7.213702,-9.516378,8.187257,9.862230,4.071910,-6.731643,-1.301347,-4.563956,9.757161,-7.162952,-7.105009,-9.580449,-3.217951,-4.829476,-0.686236,-3.678364,-0.133207,-6.044316,-0.902004,7.024224,-9.969000,-7.326106,-8.708047,-5.312334,-9.294049,8.878693,4.890544,-6.416519,-3.794597,1.440441,5.440742,-6.653921,-1.963309,8.385875,-0.383554,-8.644592,-1.718334,3.516561,1.413689,-5.188898,0.467060,-7.978255,8.105046,-6.529478,3.350953,-2.969891,-0.182455,6.273562,-2.611035,3.917374,0.789729,2.183901,-1.492289,-1.156543,-6.495831,-8.655902,-1.298890,0.551869,3.823839,0.488353,0.017945,0.282441,-0.172600,-5.810160,-5.270766,3.817585,-3.951087,5.034157,-5.292356,-8.242579,4.640823,-8.335737,-8.448627,7.330352,1.054975,-3.058435,1.181606,-3.174653,-2.546351,-0.092379,-4.904926,-1.677240,-6.129898,-1.082771,2.296572,-0.456187,5.183007,1.952942,-1.813347,0.672741,0.907957,-6.056980,0.290558,7.585197,1.812856,-7.143502,0.578124,-2.158743,8.757606,-0.782689,-8.714564,1.216792,0.898262,2.990395,0.772634,-0.096801,-4.241181,5.998834,0.881132,-9.398083,-1.293788,6.132223,4.330093,-8.686387,-9.050126,-5.993233,0.046564,-1.738814,-8.053995,-8.845392,-3.927970,-4.778591,1.677466,-0.650756,-8.879344,6.007372,-8.882107,0.482000,7.363817,-7.248568,-9.719593,-9.927534,-0.243989,8.752994,-3.709499,-8.175576,-6.620857,8.105769,0.698504,-1.794359,-2.251941,-3.148482,-4.968056,0.692219,1.035151,1.519279,-3.931674,1.202015,-5.558809,5.213480,-9.947403,7.608409,-6.835047,-6.029458,1.034944,-3.132217,3.920289,-4.089516,-9.438408,1.501448,3.653480,9.954718,-2.293398,-3.628170,6.577789,7.433058,9.682003,-1.053535,5.744774,8.395281,-2.272164,0.095749,0.089086,5.844823,8.830585,4.482659,-5.961588,-6.535236,-0.147192,5.243952,-5.988389,1.691478,-8.660340,4.488573,1.296230,-8.731040,-8.759515,3.512533,6.740908,0.645913,7.405113,9.898609,-3.661506,-8.549596,-3.758206,-8.584813,-4.415337,-4.202423,-3.327592,-3.234006,5.605096,8.344405,-8.594058,1.284289,9.759255,-8.259880,3.466610,-1.594348,0.742102,-7.822584,7.974153,-0.048288,5.799646,-8.291551,8.095237,3.244923,2.490242,-8.816042,7.203071,9.298311,9.560819,1.246331,3.065074,-1.851702,-7.547123,-6.550653,8.733703,2.400365,8.661715,-6.374284,-9.135791,1.593230,-1.266398,-6.785292,0.146510,6.798062,0.402162,-5.961372,-3.385504,-3.676955,4.518353,-5.952360,1.192714,1.408154,6.159943,5.356263,5.659501,4.347556,0.096644,8.298446,0.750135,2.399648,5.697309], dtype = "float32")#candidate|890|(360,)|const|float32
call_889 = func_510_call(relay.reshape(const_890.astype('float32'), [2, 15, 12]))
call_891 = func_510_call(relay.reshape(const_890.astype('float32'), [2, 15, 12]))
output = relay.Tuple([uop_885,call_889,const_890,])
output2 = relay.Tuple([uop_885,call_891,const_890,])
func_897 = relay.Function([], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mutated_mod.get_global_var('func_897')
call_898 = func_897_call()
output = call_898
func_899 = relay.Function([], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_942 = relay.TupleGetItem(func_897_call(), 2)
call_943 = relay.TupleGetItem(func_899_call(), 2)
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
const_948 = relay.const([[5.763855,-8.636041,-0.456421,8.667051,-1.115897,3.392078,-0.163598,0.566185,6.762239,-2.129804,-0.752980,0.596759,-9.295417,4.044162,0.934590,-8.572760,2.785948,1.618033,-0.471961,4.851844,8.518051,8.453465,-3.096280,-8.087816,-9.856986,-3.102913,1.207868,1.851784,4.646381,-8.063898,-1.338632,5.638658,9.596717,2.325325,6.511896,-8.462110,-0.356024,-4.716749,0.234216,-7.826445,-5.780929,-8.082839,3.944554,8.011392,0.263828,7.690155,5.476618,1.409895,7.222387,-9.067141,5.354363,-7.452007,-2.284567,-2.441336,9.652345,1.872985,-0.378356,0.902542,6.565449,-6.331275,8.774934,-5.978638,-8.764872,5.425859,1.369680,0.846288,1.923276,-3.593857,-3.716731,4.654051,5.853924,5.895403,-3.510831,3.847455,-8.046723,-0.504460,5.401988,-5.638975,-9.873879,-7.968152,1.999784,6.377953,7.289739,-3.206946,-8.595604,4.032115,-7.355727,2.088010],[-7.668580,-9.148919,-6.026726,-7.747526,6.173282,-5.199862,-0.118594,7.936885,-4.878419,-7.799781,-3.016073,8.830415,-0.690185,1.968346,-4.019470,-3.678860,6.672161,2.427722,1.417665,-7.566750,-8.444913,8.174984,5.588307,-7.107408,0.104885,8.797386,3.579036,-6.715342,8.886954,-9.554870,1.822454,-8.289925,7.693687,-3.826088,7.394715,8.509763,4.548348,6.198357,-8.126380,-4.793771,-7.885544,6.154446,3.139443,-0.370895,4.839498,-7.783644,9.589761,-4.349390,-0.538071,7.795462,1.662116,4.249428,8.473497,8.882849,-3.789917,9.945618,3.453615,-5.591729,7.855587,3.793656,8.827986,0.922907,5.873355,7.502464,-7.003232,4.093024,0.943393,8.391884,5.559509,-7.894038,-7.503059,8.575667,7.905153,-2.681174,-4.222393,6.247661,4.712630,-4.395547,-7.392573,-6.874389,-6.475883,-9.704818,-2.699921,6.736980,-5.365901,8.922298,5.050000,-2.620904],[-9.572197,1.469300,1.888294,-6.515171,8.151536,8.059960,-3.698475,6.061327,3.294675,9.739527,3.210486,-0.774703,-5.348023,-1.233478,-3.713808,-6.951549,-6.084625,5.840015,7.121275,-2.242019,-6.293662,-8.954848,-1.593857,3.455770,-5.323291,3.213600,2.361766,2.141068,-1.556719,-4.722237,0.587309,7.096630,-4.753670,9.156280,7.954915,9.578040,5.775785,-9.931886,5.780259,0.557855,-7.069861,5.096014,-6.764172,-4.861111,-2.882904,9.491103,7.851832,9.005877,2.844274,0.351610,1.166801,-0.653826,0.352409,-1.492550,6.720070,-7.316676,-8.737254,5.337367,-5.279506,7.460185,-3.009612,-4.053003,-2.745255,-9.392417,-7.183487,-5.594616,-7.531245,-4.198953,6.756613,-6.819795,1.654756,4.575792,-7.098021,-5.330477,-5.585653,4.545557,0.131103,-9.881543,-9.015000,4.703035,1.764666,-8.193418,7.024874,2.260933,6.954598,6.627983,-2.677071,-3.220960],[4.349552,3.791064,7.498590,8.373717,0.904862,-4.001347,-8.852101,-5.311460,9.375442,1.919876,-1.806816,7.206709,-2.616236,-7.807026,0.861766,7.620733,4.030320,-4.749461,1.386683,0.694742,-9.444985,-6.482814,-2.672009,-9.500079,2.976675,-7.728799,-2.656482,6.567858,-4.316405,1.064984,0.581459,-7.344085,4.514405,2.411263,-0.986821,2.678174,-6.162771,5.967074,4.376957,-4.264577,7.185138,-4.124343,-3.787479,-8.908909,5.012735,2.270489,-5.115482,8.627392,-4.914955,4.997356,-6.048263,8.722344,-5.688465,1.829349,-7.236886,0.103868,-6.877626,5.125869,2.888992,7.376804,9.799819,8.068754,-8.133276,-1.628963,6.483767,-6.844670,-2.780299,-9.707872,-7.929679,-6.190504,0.112703,5.372500,5.558215,4.756772,-0.395709,7.282431,3.686466,-6.370208,-8.841498,-5.509664,-4.897273,4.758246,7.171340,1.347255,3.713156,-9.833795,6.495918,-4.162839],[6.425267,-2.480437,-6.946743,9.436860,-2.399482,7.338151,-6.787619,9.886568,-8.393536,-1.382791,-0.295556,-1.660804,1.524647,5.975441,-5.059054,-6.499115,9.971990,9.213837,-4.821837,9.990933,-2.866250,0.760366,-4.002898,8.528809,2.967877,-7.103544,-8.179298,3.075339,-7.811470,-0.988377,-5.179499,-8.477878,8.075095,4.166246,-4.781172,1.764131,-4.211109,-0.785073,9.862830,2.521612,6.109697,-1.451272,-8.226352,1.254284,-1.121800,8.790522,-9.232320,-1.210590,-9.663002,-1.285905,-7.710564,6.234136,-4.265748,-1.901015,-6.072546,5.002352,6.384511,1.138869,0.144823,-8.942459,-8.133826,1.762530,2.347211,2.837665,3.036649,5.103627,9.383899,-9.886818,-6.336727,6.629237,5.271656,-9.782502,-7.701179,-3.974349,-2.664211,-8.635444,3.579006,-7.988163,4.552380,-6.146593,6.875156,3.983870,-0.028759,-2.461861,-1.016876,0.051115,-4.231480,-5.121762],[2.042160,5.767832,-8.896133,9.347871,6.029925,-3.588931,9.066765,7.197676,-6.758815,0.250903,7.331342,7.945632,5.505951,8.729506,-8.615013,-7.360622,-0.445685,-1.875378,8.468016,-5.663949,4.746430,-6.063279,2.841672,9.242782,-0.403409,6.465384,-9.882041,2.256708,8.677294,-9.002008,-2.312632,-4.498616,-7.768190,8.124175,-3.026825,-8.163882,0.325979,-4.710229,-7.968820,-7.448060,-3.974776,-0.668619,8.023487,-6.142868,-4.709063,-1.499770,5.153656,-5.395322,6.482595,-5.347964,3.901436,1.385555,0.146763,-4.258718,2.463944,-3.612730,-2.646451,4.050671,-5.599683,-9.666055,-6.376060,2.862766,2.020854,8.380953,-5.540576,-5.194507,-4.630499,-9.382941,5.721592,6.001348,7.196567,-8.950311,1.685554,5.381716,5.006507,-0.683971,0.376200,-4.719733,5.012686,2.909408,2.644124,-9.458481,-5.087606,5.315954,1.525807,-7.042883,-7.325355,-0.639746],[-1.437496,0.476812,0.987369,8.785324,1.956660,-9.854742,9.490935,-3.590655,5.681254,-5.575849,9.125297,-6.196268,0.813426,-3.729291,4.503795,5.799835,-8.278980,-4.723144,-5.423984,-8.743183,3.711386,5.065656,3.057206,9.188648,-9.013453,-6.698967,0.924263,-9.240930,3.128940,-8.989995,3.639286,1.878163,-3.854348,9.759011,9.351989,-8.807421,-5.477556,-8.390685,-8.442653,3.451899,7.104703,-1.806766,-5.414850,7.621935,1.645880,-2.344037,3.097031,5.640073,5.186227,9.914349,-2.724731,7.807313,7.806619,-8.857464,2.289508,-2.019358,8.700753,7.478849,7.583220,-0.162197,-1.939418,6.503535,-7.497965,1.911834,0.934928,-2.873253,2.076152,3.043747,8.952917,-6.697487,3.624699,-7.883703,7.588925,-2.367438,-8.953910,-1.953726,3.604835,9.915052,-3.081135,-3.621520,9.970853,7.383001,-2.130974,8.708984,7.881016,3.118915,-5.004367,6.812690]], dtype = "float64")#candidate|948|(7, 88)|const|float64
call_947 = relay.TupleGetItem(func_579_call(relay.reshape(const_948.astype('float64'), [14, 4, 11])), 2)
call_949 = relay.TupleGetItem(func_581_call(relay.reshape(const_948.astype('float64'), [14, 4, 11])), 2)
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
call_955 = relay.TupleGetItem(func_579_call(relay.reshape(const_948.astype('float64'), [14, 4, 11])), 0)
call_956 = relay.TupleGetItem(func_581_call(relay.reshape(const_948.astype('float64'), [14, 4, 11])), 0)
uop_980 = relay.sqrt(const_948.astype('float64')) # shape=(7, 88)
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
call_988 = relay.TupleGetItem(func_579_call(relay.reshape(call_955.astype('float64'), [14, 4, 11])), 1)
call_989 = relay.TupleGetItem(func_581_call(relay.reshape(call_955.astype('float64'), [14, 4, 11])), 1)
var_993 = relay.var("var_993", dtype = "float64", shape = (7, 88))#candidate|993|(7, 88)|var|float64
bop_994 = relay.mod(uop_980.astype('float32'), relay.reshape(var_993.astype('float32'), relay.shape_of(uop_980))) # shape=(7, 88)
output = relay.Tuple([call_942,call_947,call_955,call_988,bop_994,])
output2 = relay.Tuple([call_943,call_949,call_956,call_989,bop_994,])
func_997 = relay.Function([var_993,], output)
mod['func_997'] = func_997
mod = relay.transform.InferType()(mod)
mutated_mod['func_997'] = func_997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_998 = relay.var("var_998", dtype = "float64", shape = (7, 88))#candidate|998|(7, 88)|var|float64
func_997_call = mutated_mod.get_global_var('func_997')
call_999 = func_997_call(var_998)
output = call_999
func_1000 = relay.Function([var_998], output)
mutated_mod['func_1000'] = func_1000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1009 = relay.TupleGetItem(func_897_call(), 2)
call_1010 = relay.TupleGetItem(func_899_call(), 2)
func_865_call = mod.get_global_var('func_865')
func_869_call = mutated_mod.get_global_var('func_869')
const_1019 = relay.const([3,-10,-4,-3,-7,9,-6,5,-2,-5,-6,-2,-3,-5,4,-3,1,-7,8,-5,5,-2,-6,-8,3,-1,-6,3,1,-2,8,-3,-7,-4,-10,-1,-5,-10,2,-1,5,6,-6,-1,-9,-9,-8,-7,-3,-1,2,-10,9,-7,-9,-7,-2,-4,-4,-3,-9,1,7,2,9,-4,7,7,3,-6,4,-7,-6,5,7,2,-2,-3,1,10,-9,2,-8,4,2,-4,-3,5,3,1,7,5,-6,-8,-4,-8,1,-10,8,-10,4,-9,6,-8,3,6,1,-7,10,6,2,-8,6,3,4,4,-7,4,-8,-2,-2,-1,2,1,-3,-7,-3,-1,-6,10,-6,-7,1,10,-6,2,-1,-2,-3,6,-10,-5,1,-9,-8,9,5,-1,-1,-8,3,6,5,8,9,-3,10,-1,4,10,-10,8,-4,4,1,-2,-1,8,-6,-3,-2,-3,6,3,-5,2,1,1,-10,-3,-6,-5,3,3,10,4,4,-4,3,-8,10,4,-1,-9,7,-2,-6,9,10,9,-10,2,4,2,-3,6,2,7,4,-4,7,-5,5,-2,-8,7,-6,9,4,9,-4,3,6,7,5,2,-9,2,-1,-1,5,-4,-6,3,6,9,7,-6,-9,3,-6,5,2,-1,10,-9,-7,-10,-9,5,4,-7,-6,-6,-8,1,5,-1,-1,-9,2,10,2,6,-2,7,5,-9,-7,-7,5,10,2,-7,4,8,4,9,7,-9,6,-4,-2,-1,-7,5,-6,10,-8,5,-2,10,-8,-4,-4,-3,-9,-3,-10,-9,3,-9,-8,-1,7,-8,6,5,-9,-10,-1,5,-1,-10,-3,10,-2,-6,-9,7,-2,4,-5,3,-9,-8,7,-10,-4,-1,-1,4,9,6,-9,-5,1,9,10,9,9,10,3,-6,10,3,-6,7,-6,-3,-9,6,-8,4,-10,-7,-2,-5,-7,-3,8,-2,-2,-10,-3,5,-1,-10,9,9,10,-8,-5,9,-6,2,-10,-8,3,-3,1,8,3,3,5,3,9,8,-6,9,3,6,6,-6,-2,-7], dtype = "int16")#candidate|1019|(396,)|const|int16
call_1018 = relay.TupleGetItem(func_865_call(relay.reshape(const_1019.astype('int16'), [6, 11, 6]), relay.reshape(const_1019.astype('int16'), [6, 11, 6]), ), 0)
call_1020 = relay.TupleGetItem(func_869_call(relay.reshape(const_1019.astype('int16'), [6, 11, 6]), relay.reshape(const_1019.astype('int16'), [6, 11, 6]), ), 0)
var_1022 = relay.var("var_1022", dtype = "int16", shape = (396,))#candidate|1022|(396,)|var|int16
bop_1023 = relay.mod(const_1019.astype('float64'), relay.reshape(var_1022.astype('float64'), relay.shape_of(const_1019))) # shape=(396,)
output = relay.Tuple([call_1009,call_1018,bop_1023,])
output2 = relay.Tuple([call_1010,call_1020,bop_1023,])
func_1029 = relay.Function([var_1022,], output)
mod['func_1029'] = func_1029
mod = relay.transform.InferType()(mod)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1030 = relay.var("var_1030", dtype = "int16", shape = (396,))#candidate|1030|(396,)|var|int16
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1031 = func_1029_call(var_1030)
output = call_1031
func_1032 = relay.Function([var_1030], output)
mutated_mod['func_1032'] = func_1032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1037 = relay.TupleGetItem(func_897_call(), 0)
call_1038 = relay.TupleGetItem(func_899_call(), 0)
var_1041 = relay.var("var_1041", dtype = "float64", shape = (14, 11, 10))#candidate|1041|(14, 11, 10)|var|float64
bop_1042 = relay.not_equal(call_1037.astype('bool'), relay.reshape(var_1041.astype('bool'), relay.shape_of(call_1037))) # shape=(14, 11, 10)
bop_1045 = relay.not_equal(call_1038.astype('bool'), relay.reshape(var_1041.astype('bool'), relay.shape_of(call_1038))) # shape=(14, 11, 10)
output = bop_1042
output2 = bop_1045
func_1048 = relay.Function([var_1041,], output)
mod['func_1048'] = func_1048
mod = relay.transform.InferType()(mod)
mutated_mod['func_1048'] = func_1048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1049 = relay.var("var_1049", dtype = "float64", shape = (14, 11, 10))#candidate|1049|(14, 11, 10)|var|float64
func_1048_call = mutated_mod.get_global_var('func_1048')
call_1050 = func_1048_call(var_1049)
output = call_1050
func_1051 = relay.Function([var_1049], output)
mutated_mod['func_1051'] = func_1051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1066 = relay.TupleGetItem(func_897_call(), 2)
call_1067 = relay.TupleGetItem(func_899_call(), 2)
output = call_1066
output2 = call_1067
func_1070 = relay.Function([], output)
mod['func_1070'] = func_1070
mod = relay.transform.InferType()(mod)
output = func_1070()
func_1071 = relay.Function([], output)
mutated_mod['func_1071'] = func_1071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_1098 = func_1070_call()
call_1099 = func_1070_call()
uop_1100 = relay.erf(call_1098.astype('float32')) # shape=(360,)
uop_1102 = relay.erf(call_1099.astype('float32')) # shape=(360,)
func_510_call = mod.get_global_var('func_510')
func_513_call = mutated_mod.get_global_var('func_513')
call_1107 = func_510_call(relay.reshape(uop_1100.astype('float32'), [2, 15, 12]))
call_1108 = func_510_call(relay.reshape(uop_1100.astype('float32'), [2, 15, 12]))
const_1114 = relay.const([-4.919062,4.253082,-9.252950,1.588865,-3.171766,-5.080300,-6.456206,-1.149370,-2.822141,4.357668,-5.788142,-7.416141,0.557743,-1.319484,6.718961,-9.078239,-0.462312,8.358149,-8.555124,-9.841826,-0.329459,6.461779,9.751634,-6.145808,8.394447,-3.528219,2.638862,-3.205859,5.969779,1.417464,1.020629,-4.932770,-6.797996,-4.542742,-1.115667,9.922765,-8.424581,-4.020598,2.844304,8.854020,-6.119788,-8.312115,-3.908323,-7.222559,-3.086537,-9.792427,8.996926,8.244804,9.004234,2.000999,-2.098029,-0.977534,6.141481,8.312329,0.803242,5.999791,-5.386308,3.511540,2.061734,-7.098056,-9.365237,9.875844,-7.299869,3.152131,-5.137537,4.653907,6.436795,8.681975,-8.094255,9.207867,-3.939395,2.272265,1.365158,1.775628,-8.296361,-8.590986,2.069267,8.870263,-1.356365,5.976052,4.987831,7.405181,-3.725017,1.473166,2.523088,-1.190175,5.428998,9.187436,9.384745,6.008662,-1.810001,-5.289451,1.344820,1.505260,-9.587172,3.465131,-0.869694,-1.227058,1.272079,0.656815,6.670200,-8.096292,-1.835691,4.367686,5.120089,1.088621,-4.850697,5.453264,2.010700,4.435139,6.885384,8.641395,0.725724,-3.131235,2.746505,-4.112164,2.004913,-6.656319,-7.262054,1.354010,-5.771882,4.325779,-2.274107,2.839913,-0.091910,5.081938,5.514467,8.023689,8.855434,0.715397,2.556040,0.025787,8.898700,-8.984517,2.405992,4.651007,8.872333,-1.016954,7.132847,7.380092,-8.824640,5.640039,-9.167263,-3.194089,-7.713287,-1.775707,3.349858,-1.099046,2.225236,-0.765481,9.004505,8.617169,8.587671,-0.808197,0.578358,-1.096765,9.958743,5.233740,-0.373194,5.697755,1.325540,-5.062475,1.838691,1.960969,-6.855502,5.119618,9.679017,-8.807525,-1.271828,1.680169,-8.376767,0.880975,5.299527,7.221444,-6.090499,-1.928053,1.054503,4.445533,-7.570394,7.246057,-0.746006,-5.805336,6.980682,-0.507061,5.432886,7.522088,9.381494,5.766783,0.356984,-8.362563,3.936974,-6.495037,-8.113141,4.573850,-6.528459,6.098400,5.266099,9.909849,-2.179510,-9.293852,5.322013,2.386843,-0.587605,-6.891565,-2.514868,-8.237083,4.026632,-7.908790,-2.767606,-8.239902,-3.813352,0.269455,8.313649,2.678172,0.384430,-3.905961,5.689535,2.826091,-8.217276,-9.998076,4.527667,4.877459,3.411549,-0.660830,7.175544,-4.449050,-0.505864,-8.228507,-9.952018,1.722214,2.915288,0.255751,2.604403,8.056346,-2.210155,-6.211814,-7.939180,-2.125457,4.174842,4.286540,-7.283103,9.564494,0.153097,-7.937883,8.241679,9.661310,4.365752,6.281860,-6.543434,3.893327,-9.856027,-2.915764,9.474028,-2.542194,6.849103,5.831253,-2.661979,-2.427076,-7.675830,6.678778,-8.663432,3.218547,6.623901,-7.650124,1.794768,-0.222575,-1.256955,-4.697939,-5.748742,-2.490582,-9.992151,3.424866,-1.623301,-8.103695,-9.032965,-8.272723,4.531899,6.864949,3.161363,-2.723663,6.672738,-7.776591,1.826046,5.742661,-6.855330,2.451809,7.848438,7.284312,-6.900427,4.475342,1.082201,8.071240,8.571134,-7.016180,-5.196137,2.529511,7.420580,0.151360,-6.352074,-0.730734,1.757165,3.076259,-0.038040,-6.097114,-3.430236,-7.732605,-7.025058,-7.695018,-5.494716,-9.128987,0.545499,-6.726671,6.340487,6.541463,-3.205642,-8.381655,1.591614,-3.463373,-1.837330,-5.259028,-3.169465,6.342547,-4.479870,-8.593478,-0.953120,-5.159608,-2.550434,-2.847346,-5.579631,0.564932,-5.181172,-4.297829,1.294304,2.014666,-1.306276,8.922599,-2.899874,1.718863,-0.476238,4.069484,-0.557387,3.791869,-3.142596,-4.787772,8.800670,4.876951,-3.502876,-8.447413,1.411586,8.960652,1.700773,-7.848060,5.003125,2.407985,-2.779588,-8.888070,-6.010936,4.423710,-5.546293,5.372812], dtype = "float32")#candidate|1114|(360,)|const|float32
bop_1115 = relay.logical_or(call_1098.astype('bool'), relay.reshape(const_1114.astype('bool'), relay.shape_of(call_1098))) # shape=(360,)
bop_1118 = relay.logical_or(call_1099.astype('bool'), relay.reshape(const_1114.astype('bool'), relay.shape_of(call_1099))) # shape=(360,)
output = relay.Tuple([uop_1100,call_1107,bop_1115,])
output2 = relay.Tuple([uop_1102,call_1108,bop_1118,])
func_1121 = relay.Function([], output)
mod['func_1121'] = func_1121
mod = relay.transform.InferType()(mod)
output = func_1121()
func_1122 = relay.Function([], output)
mutated_mod['func_1122'] = func_1122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_1159 = func_1070_call()
call_1160 = func_1070_call()
output = call_1159
output2 = call_1160
func_1171 = relay.Function([], output)
mod['func_1171'] = func_1171
mod = relay.transform.InferType()(mod)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1172 = func_1171_call()
output = call_1172
func_1173 = relay.Function([], output)
mutated_mod['func_1173'] = func_1173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1179 = relay.var("var_1179", dtype = "float32", shape = (4, 3, 11))#candidate|1179|(4, 3, 11)|var|float32
uop_1180 = relay.acosh(var_1179.astype('float32')) # shape=(4, 3, 11)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
const_1186 = relay.const([5.878008,-2.510128,-6.070953,-5.094410,-3.009921,6.328031,-3.564892,-8.824925,-8.041271,0.555686,9.227550,9.650328,9.428293,4.620755,-9.543757,9.017061,-3.081458,-9.316997,3.401248,-6.996164,6.862601,3.317029,-1.182339,-1.178938,0.015971,9.543159,-4.736667,0.759170,-0.155313,-3.859451,9.356990,-2.370296,-2.643199,4.055472,-4.442239,6.860904,5.613363,0.550732,-5.610674,-7.861819,6.713473,-1.703259,-0.897623,3.527580,5.522779,1.376118,-9.640345,-5.521190,4.877582,-0.973429,-2.076292,4.215265,-6.838479,7.272068,-6.612048,-4.865359,0.034158,4.067826,-8.941028,3.142218,-8.321691,1.979216,-6.134275,8.562036,5.327766,1.369674,9.453009,8.517880,-4.645538,8.395113,5.893297,-2.798130,-3.217858,-9.099330,6.951198,-2.352456,3.074522,-2.965061,-1.056891,2.838855,2.525854,3.888224,0.160695,-3.339730,1.665668,-7.813076,4.503700,6.561062,-1.304900,1.663033,4.078711,4.920041,8.875295,0.751985,-8.748772,3.101560,5.366891,-0.599552,3.902324,-7.306178,-9.630178,0.005572,-4.085408,-7.061924,2.906942,-7.292118,7.835237,4.425512,0.652632,-8.653146,1.477923,8.726423,-3.134805,6.595598,-9.331768,-9.695445,-2.960479,-6.651844,8.389423,1.958581,-3.959553,5.182897,2.547362,-3.814196,4.082666,-3.717470,-1.732295,-7.499651,-4.025104,1.935682,0.694069,3.850816,7.132090,-7.863453,-1.705511,2.771062,5.327002,9.796000,7.002981,8.765426,-4.656732,3.689524,3.217475,-6.032261,7.868492,-4.976932,1.401385,-5.001733,-9.598800,0.282701,-7.042964,3.422743,-8.091234,4.690715,8.916814,-2.970342,-7.917225,-3.526116,6.805312,0.005989,-5.408723,-6.447109,-9.120975,8.597285,8.556269,3.425900,4.101804,-6.433518,4.675429,-5.949055,-4.729901,5.840893,-5.492195,2.101536,-8.422323,7.255729,-9.583963,-4.277306,-4.792058,6.414519,7.318063,-6.121654,-8.852562,-1.775609,-0.278611,-7.224688,8.990919,1.391836,6.912044,-4.503479,-3.506727,0.930792,6.141250,7.013784,3.025870,1.266512,2.393162,7.573240,-6.343021,-0.637668,-5.370105,-6.432067,-4.103499,-0.500701,-1.324797,9.047518,-7.195765,3.929866,-9.304463,9.373290,-1.397400,-5.286186,-1.211037,3.336048,3.841297,8.298934,-2.694787,-9.173163,-9.686827,-1.214515,2.035491,6.005683,-2.695638,1.475158,2.246930,-0.226986,2.827923,0.791719,4.830367,5.181262,-9.202508,-5.746285,-7.394695,9.016478,0.542208,0.762608,7.144414,-1.944612,8.743708,6.251014,3.834286,-4.976470,-4.911844,-2.566979,-8.779374,3.381617,6.408368,6.294162,-5.797162,-5.312709,4.853383,-8.488966,-6.159434,-7.367352,-5.035639,-2.060163,-2.010621,-4.738805,-2.200684,-3.042368,-6.315520,-2.016007,2.238029,1.638628,-5.820612,-6.702184,3.859254,0.287946,7.923912,-7.326774,2.894295,9.225416,9.748760,-1.302484,3.817783,7.973742,-2.939297,8.603717,9.384681,7.559512,-4.338682,4.270686,-0.394683,4.165504,5.897530,3.715789,-2.015910,-9.000555,9.504552,0.863975,5.734276,-6.793873,-1.147290,1.138945,0.959169,-0.217835,-3.115246,4.710141,-7.640102,3.805859,-4.888797,-8.808285,4.584643,1.466184,0.643082,4.524107,6.170243,8.923121,6.367815,1.516705,3.228448,-5.783133,-0.705614,4.840870,-0.517235,-5.802594,2.583155,1.592131,1.039773,7.383401,-7.198454,5.879239,7.244360,3.738537,3.891660,1.265842,-9.000101,5.278584,6.030488,3.238387,4.039544,3.672713,-2.785584,0.901706,0.743838,8.639067,-8.795938,3.880960,5.819196,-2.502551,5.319700,2.778073,-8.278701,-7.593355,7.917083,4.926219,0.333638,-0.806081,-2.389734,6.372935,-9.084392,9.791660,3.981811,-1.801571,4.205863,-0.404927,-3.790490,3.066638,-7.958594,5.876160,2.779234,-0.207228,3.749456,0.055921,-3.337577,1.493010,0.438324,3.493815,8.997229,2.883854,7.279306,4.242339,1.441071,-7.124573,7.588643,-9.052162,-3.815272,1.559156,3.590590,4.771123,-6.510913,-3.602988,0.479082,-9.377736,-7.885242,-6.601969,6.959100,2.340293,-3.294062,-0.302758,2.113228,-0.200346,4.204902,6.575667,-3.390996,8.080481,4.776043,-3.680592,5.729146,3.751123,-2.407218,7.743208,-3.970521,9.164993,-0.254179,-8.659023,-8.298059,-8.002464,-9.235678,-6.028777,-9.279813,4.391399,3.810960,7.071325,8.720683,-7.053363,-5.513979,7.068225,8.589375,2.103533,3.085359,7.365975,-7.254524,7.814205,-0.330399,-2.715287,6.229352,-3.636545,1.907719,-3.266495,0.637470,7.204203,-7.963834,-1.778573,8.421525,-6.479820,3.661856,-9.118833,1.757211,-3.773473,6.984268,-8.053551,2.028348,2.787122,-8.523707,7.003690,7.995944,1.997683,1.815490,8.669734,9.682154,8.925328,8.957447,3.282114,-7.756842,-0.275279,-5.101888,-6.074344,-8.631726,-4.783362,4.015011,-6.371790,-8.431365,9.642593,0.417749,-0.631272,-4.414563,0.547477,9.985460,-3.317736,-5.300580,4.015271,8.177925,-9.731448,-2.842793,7.910359,-2.628728,-7.824025,3.716223,3.030776,-6.587449,-6.794213,3.398024,-0.136325,-8.584598,-9.169714,-1.669808,1.399198,-9.779794,3.209740,-6.213170,-8.645228,-2.363698,-3.304642,-0.053549,-8.305033,0.444621,2.318683,-1.807908,-2.505784,-4.258943,8.675418,-6.810644,5.095142,8.251099,0.139307,6.483970,-8.633318,-9.938561,2.986038,-4.684538,7.569021,-2.503728,0.031885,6.273708,1.462199,-7.888849,-2.309010,1.222681,4.641213,-9.506141,9.079079,1.868898,3.699085,-3.950926,-4.663263,-0.029099,-0.657165,2.944488,0.014904,3.666007,-6.413865,4.651179,4.268793,-0.111661,9.860458,8.108728,-5.225431,4.101973,1.502317,7.150438,-2.080065,9.844817,-4.904235,-6.128264,7.274182,1.928215,-3.328867,-4.827194,2.665239,-7.638650,2.902276,0.910275,-9.436472,9.220066,-1.037529,-7.802433,-7.107522,-1.007631,-7.044710,-1.851083,-7.879049,2.811809,7.711126,-6.640527,4.702040,2.003349,4.585314,-9.949977,1.889123,1.179236,-5.684107,9.660943,5.761056,-7.003022,-1.811189,-7.758010,-5.152900,9.653403,5.598818,-2.365203,9.264533,-6.543606,1.669927,-4.403929,-2.544691,-6.744406,9.576271,-5.755077,7.724441,-0.213808,0.689248,4.350375,1.994007,2.402152,-6.587057,5.990341,-8.621790,-1.865275,-7.645545,-3.842911,-7.941616,-4.558617,-3.158478,0.390809,8.055488,-5.706745,-3.175043,-5.425413,-3.958261,-5.689769,7.522420,-2.104815,3.368859,6.334533,-5.085504,2.546118,5.586005,-3.099117,-9.897472,8.148591,-8.082182,-3.093583,8.237318,-5.019769,3.648621,8.595095,-5.034187,-6.956916,-7.854906,2.005618,2.144865,-7.704355,-1.941410,5.989102,-2.074651,-5.640652,-5.548548,4.516058,3.982305,3.011185,-7.770779,-6.424425,5.238810,1.861961,-7.083594,-3.644817,9.159745,-0.432412,1.540924,-8.897978,6.639020,-0.620494,8.485170,1.826957,9.930665,9.924324,9.173072,-7.923672,-0.438539,4.023866,0.661518,9.282942,-3.372339,-0.104255,7.031074,4.028528,-1.872781,-4.430710,1.753983,-5.340359,-3.937692,-0.706651,4.942063,-1.238818,-3.957983,6.408560,8.997279,-8.912493,-7.452682,-1.939427,9.997991,-4.646641,2.522240,-6.348814,7.157387,-1.140381,-3.414536,8.695750,7.439238,-0.042198,4.149598,9.536859,-8.733037,-8.185586,6.120748,-3.759771,-2.321383,-8.527259,2.727834,-1.178336,9.786191,-6.266310,-8.816163,-9.225387,-0.606782,1.339049,-5.058872,-7.374568,1.666539,4.885166,6.915133,8.053388,0.268733,-8.825894,-3.933972,2.779807,5.606494,-3.363645,6.989587,3.028387,3.077708,-6.811477,-3.332902,-3.637635,8.044312,-4.137889,9.355052,3.248985,0.032334,3.858304,-1.897843,1.182793,-7.177382,7.520020,-3.956351,8.833215,-5.895992,7.222276,6.785757,-5.948196,-6.870839,1.056558,-1.748813,-9.757022,-6.376734,-0.934564,-3.585372,-4.806672,1.341551,-7.688549,0.086503,9.545205,8.656314,-4.542498,-4.263705,-9.474930,8.390377,-3.138137,-0.454665,3.657192,-7.405397,1.510738,5.563528,6.791565,-2.951608,8.857195,-1.767645,4.652534,7.446351,-9.187319,-7.832927,-6.018890,-5.047921,5.944875,4.537577,-4.807998,-7.923454,-9.365223,8.560050,-1.390989,-9.119231,4.831154,-2.679467,-2.849442,-7.981151,4.516917,9.781160,-7.333550,-0.620679,-3.470611,-4.676186,1.288469,1.111253,3.532041,-9.009014,-9.564736,8.144653,4.148701,-7.536577,4.481418,-3.079470,2.646886,2.297558,2.418047,1.009596,5.329623,-4.836064,4.277509,7.895196,5.638641,-7.047876,-1.153133,8.460335,-1.737005,6.710105,6.781532,-4.512342,-2.622274,-4.559439,-4.828398,7.288058,-3.280386,-4.815495,7.451060,-2.469420,2.902412,-1.892762,-5.899996,7.083440,7.114355,-8.668547,-2.501178,2.695583,-5.184689,6.986903,-1.884647,6.817799,-2.503431,-7.199533,9.698186,-8.386869,0.817041,-6.934699,3.928581,-9.948541,-9.264244,1.633131,-1.195610,6.526752,-4.626123,7.514611,-2.591395,3.840140,-5.848259,-2.649192,-8.918903,2.340768,-2.499423,6.450099,4.095306,-0.944577,1.325945,9.771014,0.250867,-2.168814,5.501171,-6.480564,-7.726547,-4.716075,2.610719,-6.074934,-0.684145,2.000898,4.770256,-0.477642,0.041568,3.924687,-8.692755,-9.897135,3.098958,7.250616,-3.619331,-6.145703,-0.372169,2.919008,-7.424190,1.004278,4.717756,2.393736,-7.475970,-5.960745,-0.537472,-4.911145,-2.225156,-7.590266,4.080129,-6.220983,4.662045,1.367383,8.728412,9.753705,-8.962551,-5.700037,-1.293916,3.297068,0.232704,-1.904968,7.782360,-0.560627,0.560329,6.993022,5.318410,-5.588567,3.610799,-1.598012,-9.007979,-2.461795,-8.468115,8.266350,-4.940451,4.876593,-4.372827,3.077334,-1.776222,3.888068,0.391830,7.945395,-0.177479,0.468183,2.599295,-9.964576,-2.635974,-7.715007,-5.426577,4.464052,-7.824178,-0.640183,-9.426270,-8.015025,-4.194533,-1.232824,5.924124,-4.911089,9.852749,5.642924,3.827562,-7.660698,-6.895466,-0.638953,-9.148380,5.211219,0.316675,5.142753,4.627577,-5.131060,9.388354,5.745005,-6.480712,-9.423882,-1.870912,-0.520958,-8.050041,4.538822,-4.931657,1.383003,5.079546,5.624617,-9.098746,-4.850734,6.636813,8.071899,2.414366,9.343718,-2.463793,0.627754,0.065020,-2.375216,-5.672823,-1.888366,-6.937074,-0.613923,-4.067352,-6.550883,-1.570576,-3.862408,0.285380,0.694803,0.032761,1.235508,-0.520058,-2.879592,-3.842243,5.931184,-5.046218,9.829059,7.326593,-3.170110,-1.312768,5.172893,7.746668,-0.185454,5.845453,6.090152,-5.515565,7.437131,3.735645,-4.837156,-7.936230,-6.276755,2.694990,2.841968,3.160190,-4.083777,-6.647373,5.548379,4.383929,5.383975,4.471851,9.865749,8.648589,-9.636975,-0.808751,-6.380215,9.506472,1.396407,2.713581,1.789725,-7.373086,-5.688016,9.997911,-1.360859,4.994946,-9.866212,-7.839822,-1.675265,-8.645647,-6.233762,8.029439,4.664538,-2.190691,9.373177,-6.940535,-8.457623,-7.528710,5.209166,-0.020336,-5.591754,1.879309,-0.482972,4.942992,4.095021,-5.475739,-1.447896,7.248557,-4.847642,1.233608,5.325098,-1.046686,-5.511564,-0.084883,7.273942,-3.496805,-4.442551,-7.192968,0.521410,7.821064,5.426412,9.335318,9.948529,1.449166,-4.515808,4.833636,-0.713425,2.253184,-7.012837,8.909188,4.054014,4.473685,5.682713,-1.563509,7.801275,-5.708834,7.938407,7.681071,-2.390244,-9.126938,8.474287,-4.894924,-7.364749,-9.337972,9.645315,-5.037399,5.067626,-2.788461,9.913857,-4.464483,-1.785877,1.030769,-7.144076,-4.537130,9.838105,9.989995,-4.563982,7.273149,4.516855,0.760406,1.501371,5.708865,0.313614,8.017488,6.802907,-5.363177,-4.980952,8.582568,-0.607596,6.011299,6.112657,-4.483215,-3.754338,-8.030118,7.548613,-7.384650,7.236587,-5.855336,7.348990,5.134051,4.510194,-1.370850,6.282649,-3.306186,1.826806,8.721604,-1.231375,-2.897201,9.235143,-7.982348,-2.317154,2.930773,2.138617,3.565969,-7.638656,0.133874,-9.564607,1.740273,8.050760,3.101234,-8.056870,2.041295,-6.542498,3.068952,-7.727795,-4.003067,4.674704,-8.831351,2.795174,2.795758,-5.377358,4.287565,7.172110,-5.912461,-0.524968,0.452021,4.037983,7.258775,0.107189,0.635213,2.563338,-9.538215,-4.130094,2.295420,-8.493106,6.830946,2.313649,4.891811,0.163402,7.878565,4.495982,-7.815042,-6.821926,-3.852640,6.746967,3.150292,-2.898834,1.554446,6.131008,-3.275357,4.295445,-6.000366,3.664091,0.842178,-9.487416,-3.562600,-1.472859,-7.166172,6.445642,-6.942692,-8.003928,9.025389,3.159890,5.449670,4.857343,3.883479,7.022565,9.943594,2.485666,-1.906591,6.421633,-9.466729,7.229986,-2.772480,7.409429,1.639303,1.312781,-7.833335,0.116412,8.615555,-8.644133,-8.378447,-4.411240,-8.003497,-4.452277,7.441050,5.237048,0.648240,-6.279053,6.803382,-6.047251,-3.415900,6.152011,9.777074,-6.336349,5.746362,1.924761,8.983336,2.568642,6.409097,-4.725996,-4.703354,-7.927663,-4.903578,8.830468,2.977096,8.852914,4.229586,-5.083784,7.864973,9.529316,6.683746,-8.427465,9.582227,-3.357075,-8.880103,9.233826,4.010178,-8.492746,9.098353,0.199515,-3.057998,-8.098889,-7.324009,-8.255517,8.624259,-6.450394,-1.885642,1.511623,1.463839,-6.571462,-0.607108,-2.259274,-0.636174,-4.124048,-8.659475,-2.554253,-2.634079,3.448618,5.703038,-6.782812,3.544346,-3.625058,-7.746255,8.535725,5.669773,3.539197,-2.834505,5.894060,-1.940529,-6.784435,-1.495649,6.872765,8.546808,2.255298,-3.646250,4.257327,-0.947566,9.102330,-9.983675,-1.766327,2.014679,3.845590,1.701323,-6.485172,-3.243759,7.619847,2.258573,6.349863,7.250105,4.570658,2.382634,0.678566,-2.608552,-8.592971,-3.460039,4.025347,-5.918186,0.846961,3.628346,9.030512,-0.404881,-4.790840,-6.285650,-9.985105,-5.189382,6.093774,-8.245278,-3.515114,-8.157456,1.540051,2.636066,-8.373433,-7.297475,-9.728215,1.024138,8.130637,-9.630313,7.130387,-4.915205,-6.880856,2.505173,-5.870062,-9.674720,9.059211,8.581809,5.016649,6.139347,-2.180880,4.593148,6.404374,-3.170287,-0.782714,0.870959,5.498160,3.472251,-6.960420,-8.943195,0.349118,2.291945,3.038493,2.469498,-3.312698,-3.858951,-7.642343,4.613880,-9.825510,7.181830,-7.467127,-5.472928,-4.911877,5.955652,-7.173047,1.385477,-5.565621,-3.469997,9.948238,6.800520,-5.401011,-4.286599,6.796873,2.330006,3.921970,1.038965,8.484342,-7.249480,9.505734,-3.860922,3.618886,7.938477,1.858031,8.976307,-8.356533,-9.043580,-3.156827,4.632067,-8.826907,2.531978,8.156439,6.319858,-9.838223,-3.343005,1.188401,1.088181,-0.800410,-9.079296,7.344533,-5.378621,-0.103862,-5.374772,0.007464,1.044234,-7.308809,-3.385053,8.012967,-6.012415,5.789833,9.171669,-0.661419,3.411409,-1.674657,-9.824184,0.773299,9.219603,7.017670,-7.436644,8.070389,-3.460164,-4.076721,-9.995321,-7.870307,4.024448,9.012910,-5.146704,4.328475,5.291699,3.346259,4.396496,-9.471644,6.917852,7.064843,4.560233,4.334206,-8.272716,-2.332449,3.155335,-5.953516,-1.852581,3.385983,5.605830,-5.753629,-7.981454,-9.497627,-7.128521,-7.034494,-9.291436,0.144544,4.300306,4.201848,-1.973487,-9.127346,-1.737800,-3.077862,-4.099849,3.759185,-6.450535,-7.519645,6.844729,9.499278,-5.933585,7.367268,2.634898,-4.921275,4.012352,-7.648381,1.449340,6.860777,0.996192,-6.198995,-3.122446,5.650116,1.659077,4.653766,-5.191888,-5.557490,4.966863,9.808699,-1.018332,0.256966,4.918905,9.761036,-5.226267,-4.568613,-7.226499,2.356953,-2.718935,2.840819,8.838752,3.282670,5.584000,-5.375875,8.021590,7.201307,0.423749,-8.965355,8.663198,7.754520,-3.609576,2.123468,-6.663926,9.832607,-8.039978,-6.002090,-3.498990,9.103071,6.343170,-6.614711,-5.547368,-3.893942,-5.128994,-5.794820,-4.557995,5.994621,-4.539738,3.179132,4.790843,6.400617,3.008868,8.105163,0.520621,-7.449426,-5.998278,-4.107318,-0.307687,-4.361029,3.502558,-5.253374,-8.048450,-3.253432,3.053685,3.758700,9.173172,-9.514510], dtype = "float64")#candidate|1186|(1540,)|const|float64
call_1185 = func_1048_call(relay.reshape(const_1186.astype('float64'), [14, 11, 10]))
call_1187 = func_1048_call(relay.reshape(const_1186.astype('float64'), [14, 11, 10]))
output = relay.Tuple([uop_1180,call_1185,const_1186,])
output2 = relay.Tuple([uop_1180,call_1187,const_1186,])
func_1206 = relay.Function([var_1179,], output)
mod['func_1206'] = func_1206
mod = relay.transform.InferType()(mod)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1207 = relay.var("var_1207", dtype = "float32", shape = (4, 3, 11))#candidate|1207|(4, 3, 11)|var|float32
func_1206_call = mutated_mod.get_global_var('func_1206')
call_1208 = func_1206_call(var_1207)
output = call_1208
func_1209 = relay.Function([var_1207], output)
mutated_mod['func_1209'] = func_1209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_1221 = func_1171_call()
call_1222 = func_1171_call()
output = relay.Tuple([call_1221,])
output2 = relay.Tuple([call_1222,])
func_1223 = relay.Function([], output)
mod['func_1223'] = func_1223
mod = relay.transform.InferType()(mod)
mutated_mod['func_1223'] = func_1223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mutated_mod.get_global_var('func_1223')
call_1224 = func_1223_call()
output = call_1224
func_1225 = relay.Function([], output)
mutated_mod['func_1225'] = func_1225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1335 = relay.TupleGetItem(func_897_call(), 2)
call_1336 = relay.TupleGetItem(func_899_call(), 2)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
var_1343 = relay.var("var_1343", dtype = "float64", shape = (150,))#candidate|1343|(150,)|var|float64
call_1342 = relay.TupleGetItem(func_461_call(relay.reshape(var_1343.astype('float64'), [15, 1, 10])), 2)
call_1344 = relay.TupleGetItem(func_464_call(relay.reshape(var_1343.astype('float64'), [15, 1, 10])), 2)
var_1348 = relay.var("var_1348", dtype = "float32", shape = (1485,))#candidate|1348|(1485,)|var|float32
bop_1349 = relay.minimum(call_1342.astype('int16'), relay.reshape(var_1348.astype('int16'), relay.shape_of(call_1342))) # shape=(1485,)
bop_1352 = relay.minimum(call_1344.astype('int16'), relay.reshape(var_1348.astype('int16'), relay.shape_of(call_1344))) # shape=(1485,)
uop_1358 = relay.exp(call_1342.astype('float32')) # shape=(1485,)
uop_1360 = relay.exp(call_1344.astype('float32')) # shape=(1485,)
uop_1373 = relay.asinh(uop_1358.astype('float32')) # shape=(1485,)
uop_1375 = relay.asinh(uop_1360.astype('float32')) # shape=(1485,)
output = relay.Tuple([call_1335,var_1343,bop_1349,uop_1373,])
output2 = relay.Tuple([call_1336,var_1343,bop_1352,uop_1375,])
func_1376 = relay.Function([var_1343,var_1348,], output)
mod['func_1376'] = func_1376
mod = relay.transform.InferType()(mod)
var_1377 = relay.var("var_1377", dtype = "float64", shape = (150,))#candidate|1377|(150,)|var|float64
var_1378 = relay.var("var_1378", dtype = "float32", shape = (1485,))#candidate|1378|(1485,)|var|float32
output = func_1376(var_1377,var_1378,)
func_1379 = relay.Function([var_1377,var_1378,], output)
mutated_mod['func_1379'] = func_1379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_1403 = func_1171_call()
call_1404 = func_1171_call()
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
const_1444 = relay.const([7.738923,-5.148376,-1.373912,9.376926,-5.368836,5.723320,8.299315,5.448229,8.811404,-9.110777,9.775922,0.712686,3.662164,7.555249,-7.712055,-6.734280,-4.850453,7.405848,-6.786491,-4.275694,-4.563979,5.875084,7.655586,-5.540786,-6.426105,-6.002460,4.010429,-1.469384,4.373056,9.932506,6.556128,1.449892,2.729837,6.714502,-8.968532,-0.772282,9.649576,-7.617355,5.386025,4.360362,3.282609,3.063598,9.986047,5.160575,-9.912687,-7.231592,-7.716299,1.900056,1.410813,1.050783,-3.344308,-8.783646,6.669939,9.821131,5.589972,1.479128,-0.272806,7.242518,-6.518232,-7.976667,-1.949634,6.591739,2.381169,-4.016530,1.633244,-0.490734,1.825645,7.984907,7.470918,6.797994,-0.152708,-7.346178,-6.157492,-4.756453,-6.992022,7.456546,-4.156984,-9.656388,8.244626,-1.541634,-5.774954,-6.331122,0.644063,7.375892,-2.051586,-7.892612,8.919167,-5.863863,-1.783667,-6.411514,0.530128,3.877247,-0.791582,3.946185,-3.432781,-2.559185,-6.639683,8.953076,7.295379,1.488440,5.914869,-6.556145,-8.409665,-6.317907,5.840336,3.246587,-0.959496,-9.908574,-3.023277,-8.635795,2.809101,-1.472872,-4.695222,-6.323481,-6.976945,5.535124,5.295703,-8.904943,-0.581574,-1.520343,0.241232,2.722172,6.412898,9.329527,0.386523,-0.548480,-3.543426,9.234256,-9.508958,-1.420407,4.921197,9.742855,3.096712,-4.465772,-2.575071,-4.855594,-0.524406,-8.247255,9.907068,-2.438792,7.028153,-2.798824,7.952728,-5.611869,8.082008,-0.054311,3.430697,6.850392,7.857904,-5.708325,-0.480856,2.596172,-9.059100,-1.894377,7.780257,3.427504,-3.257765,0.084136,6.964871,6.260255,-8.383160,9.861293,9.954147,7.977467,-1.193624,7.628934,-3.517665,0.429707,-9.024483,-8.382546,-7.062100,-4.534249,7.394432,-3.491987,-3.521518,8.773036,9.044182,-8.244935,6.285181,6.410022,3.799802,3.056060,-9.455543,7.661267,-2.190427,-0.824038,2.736834,6.227677,-0.196819,7.000076,-3.490683,-3.973289,3.988222,-1.863054,-9.678425,-8.762755,-9.394530,8.104179,-2.243338,0.490535,-0.702560,-7.764891,5.533879,8.712062,7.845209,-1.949175,5.215832,-5.175532,8.460509,-1.048046,-3.043471,8.133463,-7.422959,1.733947,0.447230,4.612318,4.487270,9.771879,-9.984561,-2.929375,7.119769,1.395048,2.485551,5.372923,-7.754136,-7.309005,-9.122690,-9.847549,-9.011418,-8.161719,-3.195855,-9.296094,3.611751,-1.599792,-7.849760,8.113951,4.028847,-1.671253,-0.887532,7.957151,9.237761,-6.643978,-1.488624,-9.483380,-7.650636,-6.652997,4.986373,-0.010422,8.716245,-1.579618,-4.330091,5.074471,-5.097068,-3.969679,-6.962422,0.639177,-7.052846,1.191401,-7.592785,2.427835,-4.976362,-5.253104,-9.457804,-1.495878,6.575391,1.788401,4.447173,-2.249075,0.419252,-5.894459,-9.006160,0.722921,3.320284,6.104254,0.073066,5.637903,1.514978,8.017873,-9.434109,3.957955,-8.468559,2.837122,0.604030,6.445856,6.494481,-2.083550,9.456538,-3.972855,4.704716,5.604390,-8.864580,-1.450060,-0.793559,-2.084431,-6.981960,-0.483417,-8.790840,-5.351642,0.270883,-8.192813,8.264818,0.344722,1.670789,-8.943400,5.509327,4.518103,-2.836452,9.144716,5.202853,2.062181,5.750497,-5.783664,-5.320076,-5.634823,-4.940663,-0.636616,7.303290,-8.432834,6.652207,6.752519,-9.471690,-0.408696,2.397964,8.120079,0.471986,-0.209017,7.853062,2.258648,4.261750,0.809707,-9.091881,1.404845,1.826930,-5.891301,-7.186679,-1.083874,-1.598780,2.353982,-8.986880,-2.055066,-5.818033,6.419733,7.649512,5.227792,-3.915914,-3.765607,-9.379068,-6.631532,-8.497467,-8.775725,5.086547,9.638688,6.285598,9.001696,-5.144078,-1.259359,-0.525327,-1.985602,-1.333831,-1.650252,-9.588050,4.912661,-7.783783,9.855754,7.439417,-2.886072,-5.363094,-9.851014,-0.656970,8.288944,-6.832789,8.971032,1.830527,-8.617365,8.298655,-6.591078,-4.305206,-3.707029,-3.696967,6.109736,6.656537,-4.457369,6.518828,-5.755065,-7.357704,-2.285195,0.019522,1.639912,7.525645,-1.754883,-9.984661,6.996203,-6.159856,4.516837,6.070874,-6.251392,-6.463875,-1.646326,-8.696456,-3.964045,-0.773420,5.283866,-5.266150,0.655175,-5.274388,6.957788,-9.167955,4.557447,-9.125360,6.989832,7.179759,9.636971,-9.859111,-0.041313,-5.477071,9.995720,1.121391,-6.012224,1.633404,-7.950401,2.320464,-3.813583,-2.014436,-6.233052,7.369453,-4.382318,-8.929897,-5.128358,6.879490,9.357900,0.464116,-2.998948,8.189263,6.987356,-4.178888,-9.251030,1.260811,-1.242375,4.196799,-6.762113,-6.160648,8.929674,-1.752190,-2.003791,-5.371832,6.808348,-4.433698,0.947434,-2.567529,0.391011,-5.838470,-6.253833,-0.815413,7.544517,-6.729885,-4.723573,-8.267859,9.355375,-7.933812,-2.608399,9.909430,-0.631290,0.199373,5.774347,-7.651548,3.586264,-6.620821,-0.307854,-5.341832,-4.913529,-9.028828,9.168807,7.803014,4.496756,-6.603220,-0.244583,-8.507986,-5.686713,-8.980834,9.048781,-9.180281,2.329465,2.597192,0.854123,4.524027,-7.437679,8.939130,-8.513902,-0.547693,-3.893301,4.458937,-5.210567,7.540864,-4.197558,-3.769348,7.790321,-9.532790,3.931542,-8.923203,3.477279,4.168901,0.732510,2.509766,0.837649,-3.956395,0.540495,-0.759889,3.452172,-4.256095,-2.787078,8.565715,9.835737,-0.066673,4.029855,4.125332,2.924295,-3.782269,1.594237,-3.029879,6.081779,-3.282282,4.791145,-9.171185,4.514839,-4.677284,7.509598,9.030059,1.633338,-2.159319,-7.584788,4.616443,-0.665779,7.687231,2.023588,-3.803463,-8.855929,8.480307,1.720772,-5.625144,-7.068665,-3.664710,-2.486404,-3.653030,-5.821584,5.309019,3.822648,-9.291535,-1.455086,3.562744,8.504748,7.268210,9.072321,7.073608,-2.219212,5.222372,-6.847161,8.419801,7.070702,-9.277690,-8.260107,-0.642314,-0.647434,6.106613,-0.790490,8.674187,-6.920287,4.888632,3.005188,-3.861190,-6.168792,8.881970,-4.019055,-8.709939,-2.893266,2.941262,-6.499112,-7.198577,-0.636543,6.301349,2.063445,-1.160067,3.481669,8.466803,3.712274,4.603808,4.845726,-0.730453,1.812266,5.804898,-3.754938,-2.490869,-6.377802,3.817282,-8.649788,-3.388896,0.553391,4.096955,-7.852936,-7.078607,-9.103445,-3.270829,-0.962232,8.237400,3.531292,3.375998,7.907366,-4.583721,7.735049,-9.885998,-7.266916,2.013287,-2.047051,0.351050,1.428573,-1.264619,6.208024], dtype = "float64")#candidate|1444|(616,)|const|float64
call_1443 = relay.TupleGetItem(func_579_call(relay.reshape(const_1444.astype('float64'), [14, 4, 11])), 1)
call_1445 = relay.TupleGetItem(func_581_call(relay.reshape(const_1444.astype('float64'), [14, 4, 11])), 1)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1446 = relay.TupleGetItem(func_897_call(), 1)
call_1447 = relay.TupleGetItem(func_899_call(), 1)
func_362_call = mod.get_global_var('func_362')
func_367_call = mutated_mod.get_global_var('func_367')
var_1449 = relay.var("var_1449", dtype = "int8", shape = (900,))#candidate|1449|(900,)|var|int8
const_1450 = relay.const([9.608976,0.050979,-2.614876,-0.370971,-0.172385,7.643966,7.996265,-0.026081,-1.722960,4.737813,3.862017,-4.009421,5.796525,-9.451400,-3.953642,-4.014095,-3.417067,-9.023684,4.174693,-8.088366,-4.521183,9.283487,-1.295509,-2.749688,9.084458,3.256599,2.790406,5.329257,0.111182,-6.494453,7.825781,0.391076,-1.009579,2.505075,1.230678,1.885558,9.839488,9.546429,-7.598060,-4.334689,2.753302,-3.560203,0.144718,3.082058,8.706592,-8.317755,-8.839036,0.389719,7.173214,-4.916933,-1.969842,-1.938719,7.423736,-0.350896,2.400992,6.632003,-6.626326,-6.264741,0.506014,3.979505,4.102951,4.437628,0.670458,-1.462052,6.351050,5.604684,-2.282370,-3.376526,9.715605,7.118569,7.152399,-3.187001,-2.417649,-1.147888,-9.891493,-7.661266,7.718368,-1.093970,-8.224088,-3.294494,1.683942,-0.990676,2.368985,2.432891,1.321728,-2.389065,5.205672,-6.993505,1.329157,8.380433,-8.259234,1.515831,-2.598948,4.113229,-9.478370,-6.678822,8.049086,9.891269,3.154616,-9.784194,3.663550,-8.465562,3.617209,-4.709042,9.144055,-4.540468,9.737220,3.973072,5.396271,6.457160,-4.739711,-5.280698,-1.187685,7.247007,-8.031759,-9.598549,-5.005583,0.662586,3.080669,-1.668027,5.630342,1.586956,-4.817399,-3.587907,9.038945,4.070755,-9.615182,3.830323,7.748760,-8.580438,-7.988495,9.782895,9.968515,-3.494274,-0.310742,0.731701,-6.534936,-9.195533,-9.606428,-2.183203,-2.667769,7.969142,8.899429,1.613296,9.615072,0.114562,-1.045040,-8.094130,2.172641,1.224264,6.150506,3.024095,9.095371,-8.999534,8.844516,7.471977,-9.621449,-6.039428,2.442660,-9.903976,2.355649,7.493566,-0.864720,-5.317763,-4.465325,8.376667,-2.633170,5.513002,9.364933,2.391683,9.258135,-8.774956,-6.120539,2.532702,0.284501,-1.331678,1.500508,-9.778562,-3.321487,8.575599,-4.075480,-4.098988,-2.284919,-2.378066,-5.686308,-0.775322,-1.623877,5.589923,6.171664,1.551721,0.996427,9.828349,8.927655,-9.500150,-5.441849,-3.491832,9.806253,-5.768515,9.717061,5.078780,-9.101708,5.755557,-2.337525,7.558373,8.286244,-7.935134,8.769518,-0.066628,-7.509730,-1.601496,-2.953114,6.315693,7.937462,4.999977,7.561986,-4.497641,-8.118112,-2.037984,3.873432,-4.025410,-1.136189,6.746045,4.180183,-4.398060,-3.150321,-4.568818,-9.376477,-9.880503,9.706753,-7.031568,-1.029163,2.361124,-8.235778,-7.693580,3.696411,-2.224052,1.491386,9.782330,2.974083,-2.708517,-7.218750,7.829067,0.764764,7.702443,6.074352,9.600421,-8.728702,9.995851,-2.805980,-8.373483,-5.708665,-9.859880,-2.694536,-2.325870,0.248634,-0.281740,-7.891319,-6.327883,1.478357,-0.297706,5.360916,0.045334,-0.083083,-1.957672,-0.687585,4.315552,-0.956251,-5.583177,3.128899,-1.061942,-3.948991,9.026133,-1.220706,-3.763910,1.123828,2.589554,-1.061794,-3.888217,0.371868,8.916609,-8.830345,-8.026760,-1.862724,1.944778,-4.807419,4.352145,-6.656732,3.111921,-9.887596,8.022843,-9.679331,1.630939,7.712515,-5.697790,-8.399291,-4.149047,-4.612159,8.508413,9.788503,-3.731482,7.339793,-9.922452,-3.278735,-4.399850,1.709591,-3.922661,-7.549151,-1.522021,-1.156878,-0.915844,1.260884,9.323716,-5.142213,-2.305752,2.310068,4.670747,-4.031623,1.262018,0.631620,-3.805627,0.879563,-8.995219,-0.252396,8.848324,3.744901,0.172541,-1.080956,-6.541670,-2.925578,-3.704835,-8.222309,-1.899694,-4.110763,8.899463,3.091372,-9.482184,1.462113,7.888158,-3.169478,-1.071015,-4.121082,-1.175057,-8.853082,6.817843,6.765543,-4.189519,7.153852,2.406491,-2.576510,0.034146,-7.441122,-3.915583,3.615403,4.244779,-4.364409,4.677958,9.393651,3.883533,5.007162,-0.313513,1.408923,-3.441682,2.780608,-1.242602,-8.574564,-9.144426,5.204194,-7.007363,-3.498235,-8.816899,3.576738,6.780388,1.587717,-5.386475,-0.521349,-0.810423,-5.178391,-7.634900,-2.177414,5.075667,4.323569,3.601864,0.601105,4.596154,2.644676,-1.823985,4.778570,3.661087,9.798578,4.125194,7.796082,9.354399,-4.676296,1.951000,-9.741193,-7.330960,-3.081480,-9.378653,8.324995,5.338731,-0.372326,-3.341234,-8.605830,-9.442628,7.332939,8.169157,4.827190,-4.440186,-5.068447,-0.458842,0.751160,-6.295150,-4.498017,4.539126,-1.922071,-1.568124,-3.464973,9.453588,4.238421,-9.837546,4.519702,7.465724,-8.300580,8.717321,9.649056,3.644231,-0.491250,9.537330,6.791559,-9.413420,1.515911,-6.570425,2.414922,-3.519436,2.977083,-3.747111,-5.159979,-5.226512,9.734926,-7.626472,3.463308,4.945114,5.737577,2.482911,4.941413,6.639987,-9.332694,0.400771,4.698284,-8.275478,-0.773762,8.891663,-3.629652,-2.978281,5.868109,9.372633,-6.180144,-0.168379,0.400235,-4.476633,-1.399382,7.180259,2.813597,-4.245664,8.754153,-2.413897,7.189710,-2.964288,3.804951,-3.221176,5.537511,4.160245,-0.877378,-0.682216,3.197256,0.424767,-0.240209,1.287895,1.285182,-1.010979,-5.833211,-9.372169,-8.233369,-2.043650,6.595022,0.760789,-7.286298,9.657780,-3.016041,-9.484527,-4.937125,4.352282,-9.366840,1.946709,0.272398,-0.361007,-4.498819,0.087209,-7.942592,-6.290708,-6.844928,-7.794926,-3.912056,-8.145702,0.660804,9.232751,-5.602821,-3.094117,2.949386,-1.703889,4.723041,-0.062382,8.271029,4.193983,8.135442,-3.631211,2.332804,-6.091844,-9.367609,-9.315975,5.206250,7.482198,2.655076,0.483094,4.824655,1.312172,-7.632608,-2.306415,0.258682,8.552690,6.364802,5.333243,9.308029,3.246572,-9.908716,9.405632,9.777785,6.605681,1.518853,1.183973,-7.865047,2.452519,-6.952026,-5.639454,4.927090,8.198335,5.187863,6.640522,-6.512693,-6.327334,9.986237,2.391561,2.665988,4.533737,1.495130,6.105571,3.883188,-6.054045,2.841810,3.898008,0.954675,3.205126,1.510181,1.262494,4.288633,-6.873814,5.666852,8.559922,-0.218061,1.214833,4.678066,8.339513,-7.040261,6.001373,3.044908,-8.647230,3.999124,7.731421,6.416201,-4.590537,8.800238,9.424319,-5.757225,0.095946,5.881511,-5.357798,4.023901,5.942070,-7.537773,1.286490,2.845782,-9.430106,-9.825955,-7.685406,-7.923188,-5.318002,7.070374,-6.897534,9.302993,0.569815,6.821198,8.819886,1.357731,-8.911864,7.985208,2.025403,7.890882,7.894150,-6.329675,0.327447,9.594776,-9.530236,2.530673,-9.813041,-4.942661,5.123430,-4.629916,-0.715761,8.533824,7.357348,4.701360,-6.844129,-5.944378,-0.221649,2.473820,8.109311,5.298788,1.825972,-8.795551,5.726819,6.421399,-0.651119,-9.143534,-5.862242,9.647379,-1.765259,-3.787708,-2.843887,9.520041,2.482886,-7.679207,6.050386,-2.898204,8.002942,-8.976574,8.293920,1.571652,7.729750,7.979283,-8.857995,3.032241,4.416606,0.730197,-3.731098,-2.917603,7.066400,-9.102689,-0.376896,0.084397,-3.747102,3.804632,-1.979260,1.714909,-4.781156,8.682082,-3.740743,2.415091,-0.355188,3.523151,0.702175,7.475770,-7.991591,7.833290,-8.344290,-3.928740,6.428205,4.760970,3.510529,7.731142,3.070229,-8.009913,-5.137707,2.255976,-5.495518,7.017967,-6.407603,-3.866193,8.520543,7.803486,-6.535414,-5.031989,4.402300,9.177415,-4.734890,-9.008744,6.725447,3.011286,4.793635,7.434240,8.139973,2.074231,6.853447,9.311921,-9.055265,-3.523571,-9.295072,-3.229765,-6.574811,-7.944124,-5.531780,-4.813525,6.058161,2.680054,-7.714794,-1.365598,-2.019270,0.162622,9.072902,-0.388248,-3.052912,4.053082,2.626764,-7.307913,0.723903,-5.167055,-2.300080,-7.726049,5.413654,-2.078304,-1.497989,8.255816,-7.660359,-8.022602,5.298971,1.848429,0.680948,3.430549,-3.366802,1.491802,-6.777299,-3.926420,-9.324469,3.057933,-0.579439,-2.659904,-7.827248,3.979673,-0.997970,4.706678,-4.308325,7.782406,9.678543,-2.838831,8.465066,2.288444,-7.391896,-9.849359,-5.150866,-9.826444,9.522333,7.370828,-6.467351,-0.880268,-9.016296,6.743161,5.504918,7.083491,9.503591,-0.056226,6.247720,-6.902568,8.129892,-0.993598,-9.763961,0.233877,7.373526,-9.141679,5.620416,3.741176,-7.035825,1.828927,4.141390,-3.144225,-3.386544,1.573182,-0.180946,3.683876,-4.709703,-4.678095,-7.091038,-4.571707,-6.492592,-2.627133,-0.101873,-8.637673,-5.957925,-5.779841,-8.131681,-7.919209,1.598794,-7.489793,3.177319,-9.330558,3.165658,3.700773,-3.580384,-2.808354,-2.652823,-5.032746,-1.114556,7.721894,-5.114680,-4.388439,-5.068755,-2.680546,6.482391,9.543643,-2.455184,-8.859933,-5.710649,-5.607514,-1.262107,-0.775727,8.279042,2.979764,4.017758,-2.972461,-9.680496,-2.516942,8.219752,-3.778400,6.615883,4.397614,6.499894,0.260827,9.458436,-9.893443,-9.499541,-6.087211,-9.503016,8.205859,-2.996104,9.471196,9.301651,8.205885,-5.576701,6.911430,-3.521608,-7.695957,-8.090492,6.541892,0.233059,8.285563,-9.376107,3.052057,9.834470,-5.114229,-2.631450,-3.453282,8.512589,-2.119981,-4.493932,0.646680,-1.936599,-3.638819,-9.152506,0.206058,-4.483235,4.319411,-0.375042,7.853936,-4.935806,-0.577563,7.818922,-8.283985,-1.052007,3.082547,-8.169995,9.157593,-5.183965,3.744451,-1.797579,-1.707816,-9.624022,1.576984,-8.769446,-1.919782,1.821492,2.749571,-9.159428,6.166625,-7.562743,3.434231,-4.213819,0.118519,-7.959898,6.031797,3.768610,1.542928,0.326302,1.158854,0.479787,-9.541122,-1.959100,-3.462986,3.813184,7.974181,-2.659955,-7.171970,-1.479312,8.393867,9.600921,4.306879,-8.108348,-6.558382,4.053110,3.905241,8.562813,0.156820,5.941820,-7.669797,-5.251381,-3.949088,-3.503327,3.454726,-2.686311,-0.307413,2.835410,2.896108,-3.824777,6.826101,9.031243,8.919397,8.099845,-5.466248,-0.891126,8.588002,-1.522033,6.641173,5.352417,3.255952,8.662055,6.283100,8.745551,-8.941262,-1.915038,-3.249511,-5.780523,-8.156507,-9.045467,-3.805552,-8.164691,7.428370,3.332421,9.008935,4.430652,-0.566905,-4.306873,8.988920,-1.894861,-5.380273,-2.979970,-5.950108,-4.183942,-3.482347,3.862780,3.004905,-6.670979,5.394947,4.607711,-1.975646,7.628543,7.512940,-8.980604,-9.976467,-6.238933,8.672116,5.173738,6.984448,6.900039,-3.011371,-3.518406,-4.473179,6.637727,-2.326308,-3.275458,7.043148,3.752171,-6.742273,-0.198106,7.528281,2.578011,9.262398,-4.484397,-4.428224,-8.749556,9.206142,-9.886314,5.089862,4.025652,-5.776275,9.423420,5.420972,-1.583902,-4.752842,-4.126109,7.187733,4.864447,-4.522315,9.755217,3.527575,-2.120294,-1.219530,-7.701415,-1.266966,7.895375,8.212239,-7.446850,0.830366,-7.836998,3.713775,5.914416,-2.626890,1.191996,5.946764,6.550924,-6.098112,4.851558,-4.145020,1.332962,2.641381,0.682279,1.358119,7.192866,-4.511418,-5.316717,7.246155,-2.350071,-3.655019,-5.239118,-3.931720,-0.758614,9.269367,8.487421,2.969705,-9.600239,9.819650,-5.031222,-6.413335,-7.990241,3.445732,-4.380750,-6.452632,7.411920,9.172512,-0.691739,6.536149,-1.269921,-0.873127,1.485005,-5.071644,-8.106921,0.570503,-6.623146,1.981932,5.146874,-1.417244,2.470876,-8.299500,2.882710,-7.068855,-7.615230,5.580346,3.548872,-7.552636,9.345035,-3.051064,9.357286,-9.161578,4.255033,-7.926397,4.944124,2.135266,1.588637,5.847602,8.744758,9.911937,9.634378,-8.247053,-2.260459,9.027077,-6.606471,-5.798054,-8.405877,5.664587,-2.648006,-0.991011,-8.399485,-8.312672,9.942591,7.145670,0.168798,-2.776441,7.978335,5.940170,-3.212125,3.234610,9.745047,-7.535730,2.164112,6.886667,2.381324,2.496122,8.981122,3.017800,9.138555,4.356718,8.491987,5.706480,8.411796,2.220351,-4.006114,-4.601779,-7.486588,4.080144,-6.692318,5.004391,-6.315299,-7.087523,-8.644460,-0.281136,-0.104760,-1.636406,-3.323339,-1.763557,6.272641,9.760079,-6.203302,4.589046,-5.515323,-6.231951,3.386637,-1.962921,-2.748024,-1.344896,-3.402013,-9.189127,-8.145247,8.678482,1.295173,-5.036084,0.392352,-6.271473,6.668825,-5.281238,-2.883555,9.853267,-4.964587,5.932403,-9.392096,5.980908,-1.576529,0.681676,-4.778061,7.291180,-7.566940,-1.510550,6.708506,8.748840,-8.355354,-6.378791,2.120532,4.676246,3.838325,-3.645782,-9.853279,5.801500,-7.342309,4.177576,6.066328,-7.720031,3.260538,1.760837,5.897590,6.665232,-4.584515,-4.011352,2.228291,2.212000,-5.381879,-7.518992,8.860173,2.245683,-4.833687,-6.673652,-6.709762,3.364293,-6.906070,-6.651514,-1.133815,4.217861,-9.512557,-5.992314,0.163696,-7.732696,6.361236,-9.150229,-0.078221,-1.136594,7.444310,-0.805861,4.423470,4.290500,-7.323682,1.217794,4.812605,9.058222,-0.337027,-9.987769,8.702393,3.699544,8.640019,5.437857,-4.610468,5.551539,2.033213,3.921026,4.640544,-5.224544,-3.213531,-8.679595,-6.446811,2.297534,5.744687,1.966768,4.190828,-7.860482,-6.767529,-3.161830,5.894772,-4.123710,-2.347119,-4.627485,-3.961065,4.539648,-5.045985,6.405842,-6.968319,-9.079849,-7.683783,-4.176572,-5.360217,-5.821126,0.416507,4.370592,-4.629536,3.206917,2.995223,3.272779,-2.500634,8.210497,-2.518051,9.441647,0.803634,4.699941,0.988899,1.324237,-3.338433,0.697698,2.479620,-0.735595,-2.427392,-1.359372,5.267225,-3.324035,-4.407644,6.348042,-8.356678,3.161349,-2.362069,9.802514,1.895751,7.554840,-3.084488,2.648497,-8.924024,-4.564625,2.235718,-0.360312,-3.545658,-6.855216,-6.013380,1.052863,-9.421390,8.668741,7.135434,3.964370,0.812924,-0.057972,9.342078,3.444808,-6.779937,-0.426223,-6.483832,-5.638190,8.363011,-3.007863,-7.812761,-3.733934,-4.348757,4.357904,-9.379800,-3.646576,-6.029298,-0.767202,-3.702585,3.414054,1.524819,-6.881989,-6.856860,-9.835528,3.898293,-3.074453,-1.505461,4.540823,-0.928647,5.922366,8.373080,-7.217029,-9.246013,1.145008,7.861001,9.437529,-8.786395,-7.235374,8.690779,7.191861,2.257249,-1.972846,-4.119243,8.729051,4.010195,-0.727323,-2.417266,-4.329927,7.737587,-1.960459,-9.527972,0.717838,4.385800,8.277303,-5.577513,-4.623035,-2.506439,8.787014,-5.752215,7.755924,0.515656,-7.806163,7.820453,0.198872,-7.788457,3.798490,0.667918,1.931246,-9.705122,1.317663,2.781647,3.146602,9.555530,7.219343,9.950780,8.020926,-2.266597,-1.869049,-2.823543,-4.008906,5.612437,6.489347,-5.139784,-1.051710,1.282352,3.825061,7.994646,0.777999,6.821738,-5.875238,1.288091,-5.531828,2.880102,3.094836,-7.205867,-2.312328,8.523503,-3.350141,-5.503347,6.798590,9.499087,9.268875,0.963207,7.751269,3.380991,3.912712,7.466463,-0.982055,-0.216821,-1.056661,3.473063,3.081939,-4.241267,-2.408215,-8.407736,-3.466156,-2.913448,-0.528442,-1.922405,-5.995658,4.327123,7.680117,3.715652,2.251650,5.464456,-6.715192,-6.906810,-2.503791,-5.038670,7.999203,-8.675909,-4.983060,9.456754,-0.087253,-4.723323,7.686723,-1.955354,-6.800919,-2.893162,7.578072,0.210110,-8.052665,4.829014,-1.488035,9.834982,-6.550136,2.271482,-8.177508,2.233098,0.800686,-1.694774,0.674102,1.612601,-7.767998,1.082645,6.211778,-5.027501,-3.560435,-5.841389,6.491753,4.432278,5.521683,-4.074405,5.341625,-2.873906,7.383817,-4.881733,2.852975,-0.271569,1.740543,-4.821145,-7.209971,3.272369,-9.032267,1.722358,4.013811,-3.717796,4.197815,5.423861,-3.070053,5.251703,-2.312054,8.290047,8.794077,8.757937,7.956546,-5.431567,-0.755563], dtype = "float32")#candidate|1450|(1485,)|const|float32
call_1448 = relay.TupleGetItem(func_362_call(relay.reshape(var_1449.astype('int8'), [15, 6, 10]), relay.reshape(var_1449.astype('int8'), [15, 6, 10]), relay.reshape(const_1450.astype('float32'), [1485,]), ), 2)
call_1451 = relay.TupleGetItem(func_367_call(relay.reshape(var_1449.astype('int8'), [15, 6, 10]), relay.reshape(var_1449.astype('int8'), [15, 6, 10]), relay.reshape(const_1450.astype('float32'), [1485,]), ), 2)
func_997_call = mod.get_global_var('func_997')
func_1000_call = mutated_mod.get_global_var('func_1000')
call_1454 = relay.TupleGetItem(func_997_call(relay.reshape(const_1444.astype('float64'), [7, 88])), 1)
call_1455 = relay.TupleGetItem(func_1000_call(relay.reshape(const_1444.astype('float64'), [7, 88])), 1)
output = relay.Tuple([call_1403,call_1443,const_1444,call_1446,call_1448,var_1449,const_1450,call_1454,])
output2 = relay.Tuple([call_1404,call_1445,const_1444,call_1447,call_1451,var_1449,const_1450,call_1455,])
func_1460 = relay.Function([var_1449,], output)
mod['func_1460'] = func_1460
mod = relay.transform.InferType()(mod)
var_1461 = relay.var("var_1461", dtype = "int8", shape = (900,))#candidate|1461|(900,)|var|int8
output = func_1460(var_1461)
func_1462 = relay.Function([var_1461], output)
mutated_mod['func_1462'] = func_1462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_1472 = relay.TupleGetItem(func_1223_call(), 0)
call_1473 = relay.TupleGetItem(func_1225_call(), 0)
output = relay.Tuple([call_1472,])
output2 = relay.Tuple([call_1473,])
func_1494 = relay.Function([], output)
mod['func_1494'] = func_1494
mod = relay.transform.InferType()(mod)
output = func_1494()
func_1495 = relay.Function([], output)
mutated_mod['func_1495'] = func_1495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_1516 = relay.TupleGetItem(func_1223_call(), 0)
call_1517 = relay.TupleGetItem(func_1225_call(), 0)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1525 = relay.TupleGetItem(func_1121_call(), 2)
call_1526 = relay.TupleGetItem(func_1122_call(), 2)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
const_1536 = relay.const([-8.047948,7.443060,-9.180643,-9.882664,6.778675,-5.735655,-9.712089,-6.723201,7.101060,6.877636,-0.092244,-9.044280,-1.598681,-6.769659,0.946479,1.114040,-5.262298,1.130092,3.101153,0.829765,8.190474,5.537710,4.845504,-2.117179,0.617942,-4.772654,3.854288,4.123789,2.710792,3.430952,1.553515,-0.113657,9.312425,-1.081013,3.943734,-6.232841,5.937715,-7.664341,9.757484,-1.595874,3.010112,-7.627760,2.584133,-2.944891,4.061496,7.124193,-0.692473,5.556767,7.073072,8.775004,9.818092,4.094836,4.883584,4.831869,3.344711,0.605311,5.817777,7.819400,9.620696,1.317204,-6.964273,9.468495,-8.790008,-7.331697,0.242359,5.709289,5.183498,9.372395,-3.602801,4.381901,-1.785676,-6.500452,-6.343909,0.751677,2.716755,2.080063,8.960169,0.048448,1.468460,-9.128741,6.524847,1.965939,-1.614166,1.148719,-0.616280,-4.361295,7.440531,-9.412076,0.232369,2.170489,-9.426010,-6.883776,6.478473,1.624283,8.368713,9.420583,9.683240,-9.262393,-2.211265,2.428655,-5.265800,9.914222,-8.703332,-0.658017,3.390930,1.412977,-8.859911,-1.606146,7.908993,-6.189887,0.120198,9.343251,-7.178466,-9.567053,5.447549,6.829561,-3.474073,5.036495,-2.700623,-9.287981,7.514134,0.910587,5.435469,8.196912,-3.472712,8.354016,-1.940231,-1.443419,-9.314800,7.767703,-0.927674,-7.574933,1.666404,-3.275449,1.068815,-6.701319,-9.429802,-3.675562,1.602127,-2.269663,3.526946,1.900753,-9.570858,-0.070911,-4.901224,-3.549075,7.911083,0.355147,-3.292565,-0.071196,-4.052619,-3.844423,0.112435,-9.474739,-2.624415,-8.985835,7.364071,6.920072,8.242117,-1.892440,8.534837,5.913324,1.695961,-7.976208,-3.156319,9.554533,1.594416,3.206448,-4.661379,4.085808,-7.082055,-2.956037,3.404003,9.978124,-4.338459,-8.943077,-2.473932,-4.621343,3.748067,9.898227,9.494223,-2.019915,-9.393459,4.804772,-8.208385,0.946949,-8.473251,-8.652009,-9.050456,0.206797,9.483861,-7.870653,6.210523,-9.704690,4.933583,-3.665288,-7.679455,6.236010,-6.125438,-9.148401,9.395056,9.208605,9.462375,0.500046,5.781105,-1.330468,8.209438,-4.900164,0.441006,5.022370,-3.118484,-1.141022,-2.590018,5.649596,-8.739352,2.569505,3.460795,-8.666527,-4.763480,-7.311436,-8.684581,4.581047,-9.977534,-5.574803,-9.071135,-2.445628,3.166722,5.111875,0.088134,-5.726268,-0.338648,6.226216,-5.934852,1.814627,-1.873357,-7.327415,-6.501910,-3.858338,4.551447,1.455698,-4.604492,-2.358485,-1.724919,3.891988,-4.190318,6.944469,-5.226283,-4.182882,-4.912710,4.867933,-9.426878,7.597848,2.216506,9.215671,-1.589026,-7.615635,-3.220972,-4.022573,2.424393,-0.450189,8.503552,-5.954488,8.315626,-6.244858,-5.793002,-4.574470,5.438188,-1.538685,0.812795,7.873155,-3.262338,-5.097964,-6.462740,9.319875,-0.383753,9.571369,4.914255,8.215705,7.557166,0.391582,-4.113307,-1.362494,5.768332,-7.120092,-0.813779,5.083290,-0.659375,1.842202,-7.765356,-1.560864,4.328987,8.979221,7.900858,8.662483,-2.498332,4.004265,-5.032616,6.134638,-4.172477,-7.692450,0.729960,5.189060,9.600016,3.827021,8.348826,-7.058231,9.306323,3.026894,7.156486,6.366866,4.650326,-2.828900,-9.323779,-6.074499,0.353461,9.187193,-7.273339,-4.199620,-7.645907,9.386326,8.884617,-7.161682,6.507995,-4.479373,-4.378371,1.540825,-5.228401,9.648442,8.516508,2.831292,-4.490154,1.782121,8.271810,-6.867258,4.322557,5.444967,7.561809,-7.093048,9.587560,8.634002,-8.440002,-9.905135,-0.106406,-5.332034,2.052585,3.497230,-6.719947,-2.215399,-2.212592,9.089460,-2.466135,4.452264,-2.978960,7.152548,-1.707401,6.758888,1.957892,6.158921,7.758635,3.936706,3.310827,-7.055336,2.775652,0.855094,1.542897,-2.887532,9.487848,-1.335073,2.272050,3.485688,-1.099211,-9.996115,-3.087491,-1.645445,8.610624,-4.408811,-0.189368,0.417806,5.511485,1.444765,9.588036,5.424375,4.119352,6.592439,6.147176,-9.675328,8.011331,9.174791,-4.553083,-9.882619,8.095101,-1.970438,6.755009,8.601017,-2.873122,-6.142480,-0.547111,-5.769938,6.121486,-7.385657,4.653001,-7.760541,-8.308998,-9.322977,8.307796,-7.667700,-8.910648,-5.835602,-9.465978,-1.217477,1.661439,2.226641,-8.490138,8.225184,3.824315,-6.015094,8.544113,0.822427,-9.931741,-6.946902,-7.667722,-8.927530,-3.274638,5.520007,8.521442,7.195513,-3.772638,-2.146287,3.342708,-2.328477,-4.668400,5.267692,7.162810,1.837270,-1.011241,-1.058593,-2.324592,0.431769,4.016714,-7.273209,9.133702,8.633866,-8.054000,-2.675524,-3.829555,-0.636206,-1.501857,-5.785836,-1.067417,7.669319,2.562163,-6.710425,6.151718,-0.699473,-3.562122,6.028937,0.845158,0.337567,-1.288839,1.547634,-7.954213,1.481959,1.620104,-6.786708,1.734367,-8.817561,2.921852,5.234008,9.927670,-6.384910,-3.577638,4.709547,-8.515135,0.820130,-9.711348,9.801741,-6.883477,2.587242,-1.546039,7.645278,-1.586070,0.092979,-1.020822,-1.604860,-0.545557,5.446487,-9.090670,-9.756004,0.759937,1.276905,-3.065940,-0.944341,-5.091817,-9.653869,-6.546177,-5.349401,-9.150429,-5.877809,-9.750040,-6.989547,2.644081,8.568039,-5.498001,1.853171,4.299851,6.762857,6.690870,-0.419886,-3.730961,8.340100,5.832230,5.204167,2.962413,-4.376004,-0.733507,-2.944783,2.749782,8.250280,-9.799463,2.700881,5.698604,8.570766,5.768572,-6.252590,4.345413,-5.503701,-4.394111,-9.584933,2.412343,3.109782,9.454668,-6.366672,-1.523588,-7.695425,-4.060759,-7.339528,-6.148227,-0.339917,-3.853563,6.137645,-8.463868,-5.337605,9.403092,-6.075668,6.539690,-0.385032,-1.939338,0.594176,-2.227198,8.319911,-4.534638,8.236795,3.981882,-6.992649,-3.287929,7.256777,1.354097,0.910560,-4.267590,8.331312,-3.094991,-2.722583,-3.182026,6.639377,5.297438,3.131291,-6.074010,7.068145,1.549445,2.743215,9.077434,-9.556531,-2.711501,-9.572383,-8.341255,7.598160,4.335995,1.768166,6.204755,1.793982,6.603845,-4.866286,4.642510,8.235015,3.967335,-3.407749,-5.676872,4.360993,9.654990,4.109581,-4.083278,-3.561629,4.909645,4.464191,-6.273419,0.099432,-5.462709,1.214815,1.234869,-3.031360,-3.807250,-5.752129,9.457116,7.607051,6.694172,-4.859860,5.073356,5.703017,-3.786791,-9.946986,5.252893,-8.193781,3.683066,6.513601,3.683549,-3.346195,6.828636,-4.424762,-8.444675,2.390168,-0.189809,0.938605,-3.427953,-6.041289,-3.170781,0.926506,3.671724,0.656051,0.028673,7.961401,-6.655066,-5.856657,-2.156688,-4.935242,5.359333,-5.249092,-4.193300,0.340133,9.719387,8.475203,-2.367446,9.223901,9.857463,5.395810,-4.281974,2.684269,-2.625433,-6.905395,-7.553110,8.067592,-9.246473,2.220534,-5.249807,7.495075,5.105330,2.917855,8.800576,0.187532,3.747052,8.953562,1.945570,-4.847303,7.002829,8.862293,1.625906,4.412354,-9.676489,-4.258148,7.335243,-8.838343,3.376532,3.915917,7.177443,8.640523,7.682753,-2.237556,5.316188,-9.437115,1.038335,-7.351297,-1.434548,-4.958614,-5.861430,6.973079,-3.131169,-7.873245,3.356332,-0.062034,-2.915379,9.931544,-9.700880,1.676035,-8.742999,-2.888046,2.961378,7.273382,-6.380280,-7.251766,-6.783955,7.539444,-4.083109,-2.565175,0.368994,-0.467019,-1.792080,6.561549,7.107611,-3.538777,-8.004465,6.074140,5.850333,1.243290,-1.159720,9.456338,-9.150276,7.415758,-2.908151,-7.715050,-0.612593,-7.663510,9.823561,8.854826,-0.820946,-3.836425,7.507162,-9.970251,-1.571397,-6.783622,8.736721,-8.656336,-8.267554,-9.887461,0.938683,-9.515934,5.465118,2.357697,-3.082984,0.148057,-1.265133,3.615532,1.785670,8.518053,-0.818133,-6.043323,1.280762,7.638516,-5.741989,-8.027192,-7.725756,1.605854,7.615206,-2.455057,-5.140381,-6.001484,-9.682467,-4.387800,1.181639,3.153325,9.645696,-6.728834,-7.200529,1.383185,4.016030,8.266545,-1.096649,-4.036621,4.050258,-9.004403,-9.316468,-4.438563,-4.454872,6.108873,-0.912847,8.066814,-0.304728,-7.950860,1.978616,-8.704114,-8.450432,5.819248,-4.230824,-5.710353,-7.459280,3.348780,-7.110420,0.942138,-3.711935,-2.014810,-2.092296,2.875558,9.009456,2.155638,8.645872,-9.164728,6.674724,-7.789039,1.972466,9.599727,3.150436,-6.598830,2.744537,1.714482,-5.813050,-5.943217,8.524236,-6.127840,-4.876676,-9.130491,4.710899,8.876149,-1.493886,-9.786790,-8.827645,7.976083,4.548821,6.149978,-0.048771,-8.912231,6.886945,4.893987,-2.807205,5.191090,1.225258,-7.213822,-6.384493,-0.376988,-8.876418,-1.952265,-6.869397,-4.869499,-5.590017,-7.455949,-7.088128,5.559501,-8.263463,0.155997,-2.896156,4.033264,-7.734146,-7.428987,8.188950,2.478805,-2.084093,-1.144505,1.080069,-8.354035,3.822261,-9.745493,2.973321,3.780331,-8.562668,7.512883,8.792416,0.991843,-8.788849,0.744024,-9.267771,9.974757,-7.521107,7.952680,0.900861,1.654513,6.636092,-8.151277,-3.259981,-4.177347,-2.717089,1.148537,-2.555269,2.973289,3.471567,-2.199178,2.566010,-6.019928,6.976652,-4.815745,3.927698,2.707059,1.029332,3.418400,7.452058,4.662149,8.731387,-5.937943,8.142258,0.238289,-7.291300,-2.168296,6.301319,7.718010,-1.799294,7.809334,-0.133609,-6.479973,3.734625,9.586285,9.157976,-8.153208,7.177654,-9.849456,6.234711,9.673004,3.497356,8.675121,-8.721021,-7.315882,-4.599629,-1.906557,-9.365132,7.486001,1.228864,9.335828,6.491178,3.962503,-8.846300,8.985558,3.843909,9.390719,-0.396698,-8.854670,6.536999,6.668967,-8.255743,-7.810489,0.153494,-4.696448,-5.424344,0.002767,-7.831006,1.925717,3.358458,-2.132813,0.203992,7.093961,-6.811612,4.348171,-4.514637,-4.944249,-2.128920,-5.314931,-4.017021,-2.347273,-0.521694,-1.547905,2.054583,8.031130,-5.982093,0.275513,4.763810,5.594967,-0.117544,2.776724,0.462664,-7.813343,0.348394,0.787627,9.790192,-2.276310,-6.731633,-3.391536,-1.346100,-7.506694,3.606881,3.522285,-2.414343,7.924581,1.854534,-2.140180,-7.526932,-5.408807,8.048583,9.702601,-1.951273,-0.357640,-2.089911,-5.852196,-7.971254,5.267092,-6.444470,-3.944439,9.065900,-8.779184,-1.406210,4.968101,5.737547,-5.412584,-3.375804,2.484027,-4.484101,3.203794,4.309528,9.970327,-3.569475,0.855569,6.361530,4.195215,6.090480,5.888804,-7.493721,-2.091322,6.593793,-3.513950,-3.105417,-2.338549,2.393857,1.572491,1.391358,-9.672022,4.857620,-0.464994,3.894410,8.312884,6.761863,3.640203,-7.002471,7.150870,-4.666979,3.554914,-0.150933,6.567034,4.436599,-7.335092,-0.337946,-0.428929,-7.833461,-4.291799,-0.831454,7.867443,6.167061,-7.345386,-2.203533,8.205711,7.202136,-7.613785,-2.944431,-8.138699,-2.236432,-5.225019,6.593006,4.477733,7.039581,-1.145363,1.339757,-7.647715,-9.092650,-6.652316,-9.532681,1.018146,-9.195712,6.327465,-6.593636,-6.871563,-3.145566,2.427679,3.930513,-8.598239,-7.578604,0.476746,-6.178183,-4.772085,-5.989138,1.007537,-2.983110,-7.896699,-3.117678,3.212306,2.679301,-8.160083,-6.067161,-3.318698,-5.293935,7.095414,7.248598,-0.188923,-1.386087,-8.110310,-0.978643,1.297949,-5.019696,0.422266,-2.912431,3.285991,2.099213,1.185061,1.709081,9.998160,-1.018613,0.346406,6.681021,2.655364,-4.843784,-5.710261,-7.727414,-3.741404,-5.296107,6.628978,-4.804426,-0.551318,-9.547677,-8.291783,7.979727,4.949273,-1.065131,5.944061,6.366462,6.471500,-1.904166,-5.715867,8.144420,-5.604967,-8.978809,-7.199914,-4.274365,-2.389556,5.073435,2.609533,0.812089,-9.014873,0.957952,9.114188,7.695184,-3.190322,1.136712,-7.283706,8.996305,-9.631366,-4.545913,8.744447,2.126439,-4.178887,-6.725391,-0.193343,-1.059061,2.936035,-8.753501,-8.076223,7.947770,-2.957952,4.756902,6.874737,4.446995,1.132714,2.173464,-9.270420,-7.174762,3.289333,-2.779472,-8.777392,-4.378895,-0.074452,6.578053,-5.820847,-4.585301,4.429026,6.422555,-7.263987,-2.602072,8.336873,-6.177122,-2.995324,-6.110839,2.460943,9.456431,3.801167,1.352638,2.146658,9.465980,7.119200,-5.120025,3.364517,-7.420757,-0.166765,4.632564,-3.986334,3.306279,5.036101,-9.997019,9.384667,-4.698568,4.077453,-4.274912,-6.147923,8.569734,5.733611,-0.680565,8.420817,3.968777,4.907443,4.861665,-1.467065,3.819845,-2.885121,2.922425,1.813838,6.258671,5.841825,3.553183,3.183363,-2.510018,-7.484171,0.516635,0.406080,4.115533,-3.957926,-8.989668,-2.189647,-4.017491,3.073131,-0.758385,6.500916,2.935702,7.177538,0.345598,0.367664,-9.939629,-3.793518,-3.862734,-3.492768,9.402401,-3.702407,3.679431,3.195471,-5.826134,0.208246,7.623547,-6.549551,-3.090317,-1.360486,-2.643561,6.748362,2.681623,-1.785835,5.549457,-6.516356,9.084170,-3.783425,3.599107,-4.943956,-3.420910,-4.310488,5.990989,-4.864709,-0.730281,0.910387,7.472179,9.597284,-0.621564,-1.623241,-9.582414,-0.614742,2.136188,3.821474,-5.297912,-8.630186,3.414751,0.785192,3.340000,-7.531080,-3.651723,-6.488158,-4.821702,-5.234283,-8.950140,-4.055026,5.459386,-2.741632,5.413160,4.462518,-4.695098,-5.499101,-6.510648,-7.578181,-9.972096,-2.286931,-5.386041,-6.656094,-3.788021,8.936851,5.845113,-0.328883,1.602918,0.119227,-4.678225,-8.562886,0.602730,-2.713191,-0.992253,1.915012,-9.848710,3.389748,0.322723,1.434483,9.298072,-1.893765,9.297003,0.336175,0.416838,7.651692,-6.743473,-7.011405,6.441848,7.434813,7.934221,-0.345599,-4.281101,-7.827977,4.114009,-1.375371,6.968218,9.904849,0.954590,5.059485,2.911541,-8.256578,-3.406973,5.347576,1.062105,-8.465973,-0.467063,-2.114640,-6.130705,-7.651164,6.938465,-7.878597,7.947058,2.335868,2.534848,2.579471,6.546514,-8.563855,3.920726,6.256609,-7.114980,6.986281,-3.421452,-7.144914,9.858240,-1.407956,4.877963,1.072258,-5.135283,0.537078,1.764974,0.164985,-1.666929,-9.180852,5.325512,-6.887765,4.985008,-7.070502,-5.239485,2.912165,6.112083,-0.231203,-5.297230,0.772899,-6.546083,-6.545545,-7.245619,-4.725478,6.969765,-1.696886,2.978119,0.959406,-3.926221,-1.765700,-4.406303,-4.382856,-4.943661,-8.137392,-0.644511,9.939585,-2.548296,-0.552252,8.195367,5.833139,-0.425058,-5.709666,-8.863067,-1.373135,9.984809,4.355308,-5.085074,-7.923783,-8.543632,-8.757155,-8.800330,3.570458,9.069086,1.599053,4.621970,-8.607897,-4.869486,5.111902,-7.502043,-1.274981,-4.038861,5.800604,0.577462,9.651053,-3.158000,4.358721,-8.674365,2.031421,-3.336669,-8.980787,5.463133,6.145704,3.280452,-4.620111,8.369495,-0.964283,1.643345,-9.846471,0.367526,-5.958019,5.934473,-5.506263,6.191063,-9.135605,1.590556,5.659795,6.942090,-7.213396,4.828195,-3.218495,8.125697,-9.161229,-3.599644,-2.012149,8.548635,4.101512,-0.305634,-8.371657,3.173007,1.477011,7.927614,2.493375,-4.275725,-1.235511,-3.123531,-4.500924,7.663587,-8.201289,0.295424,4.194905,-9.596107,-2.785723,-8.719544,-6.833013,7.587797,-4.476455,-4.121847,0.510742,-8.868534,-2.230658,-8.961632,-9.880290,3.170482,1.111489,5.671061,4.676442,5.052082,-6.235772,-3.711865,6.082873,1.626574,6.583531,5.687993,-7.325791,-2.750579,-1.254718,2.627541,-4.320015,-3.228017,3.372467,-8.786176,5.690881,-9.553520,9.828842,-5.815355,-1.707455,5.544993,7.268400,-3.196941], dtype = "float32")#candidate|1536|(1485,)|const|float32
call_1535 = func_167_call(relay.reshape(const_1536.astype('float32'), [9, 15, 11]))
call_1537 = func_167_call(relay.reshape(const_1536.astype('float32'), [9, 15, 11]))
output = relay.Tuple([call_1516,call_1525,call_1535,const_1536,])
output2 = relay.Tuple([call_1517,call_1526,call_1537,const_1536,])
func_1564 = relay.Function([], output)
mod['func_1564'] = func_1564
mod = relay.transform.InferType()(mod)
mutated_mod['func_1564'] = func_1564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1564_call = mutated_mod.get_global_var('func_1564')
call_1565 = func_1564_call()
output = call_1565
func_1566 = relay.Function([], output)
mutated_mod['func_1566'] = func_1566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_1621 = func_1070_call()
call_1622 = func_1070_call()
uop_1626 = relay.atanh(call_1621.astype('float32')) # shape=(360,)
uop_1628 = relay.atanh(call_1622.astype('float32')) # shape=(360,)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_1643 = relay.var("var_1643", dtype = "float64", shape = (1540,))#candidate|1643|(1540,)|var|float64
call_1642 = func_1048_call(relay.reshape(var_1643.astype('float64'), [14, 11, 10]))
call_1644 = func_1048_call(relay.reshape(var_1643.astype('float64'), [14, 11, 10]))
output = relay.Tuple([uop_1626,call_1642,var_1643,])
output2 = relay.Tuple([uop_1628,call_1644,var_1643,])
func_1645 = relay.Function([var_1643,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1646 = relay.var("var_1646", dtype = "float64", shape = (1540,))#candidate|1646|(1540,)|var|float64
func_1645_call = mutated_mod.get_global_var('func_1645')
call_1647 = func_1645_call(var_1646)
output = call_1647
func_1648 = relay.Function([var_1646], output)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1673 = relay.TupleGetItem(func_897_call(), 1)
call_1674 = relay.TupleGetItem(func_899_call(), 1)
output = call_1673
output2 = call_1674
func_1675 = relay.Function([], output)
mod['func_1675'] = func_1675
mod = relay.transform.InferType()(mod)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1676 = func_1675_call()
output = call_1676
func_1677 = relay.Function([], output)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_1686 = relay.TupleGetItem(func_1223_call(), 0)
call_1687 = relay.TupleGetItem(func_1225_call(), 0)
output = call_1686
output2 = call_1687
func_1690 = relay.Function([], output)
mod['func_1690'] = func_1690
mod = relay.transform.InferType()(mod)
output = func_1690()
func_1691 = relay.Function([], output)
mutated_mod['func_1691'] = func_1691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1699 = relay.var("var_1699", dtype = "float32", shape = ())#candidate|1699|()|var|float32
var_1700 = relay.var("var_1700", dtype = "float32", shape = (12, 2, 9))#candidate|1700|(12, 2, 9)|var|float32
bop_1701 = relay.maximum(var_1699.astype('float32'), var_1700.astype('float32')) # shape=(12, 2, 9)
bop_1712 = relay.logical_and(var_1699.astype('bool'), var_1700.astype('bool')) # shape=(12, 2, 9)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_1715 = func_1690_call()
call_1716 = func_1690_call()
output = relay.Tuple([bop_1701,bop_1712,call_1715,])
output2 = relay.Tuple([bop_1701,bop_1712,call_1716,])
func_1719 = relay.Function([var_1699,var_1700,], output)
mod['func_1719'] = func_1719
mod = relay.transform.InferType()(mod)
var_1720 = relay.var("var_1720", dtype = "float32", shape = ())#candidate|1720|()|var|float32
var_1721 = relay.var("var_1721", dtype = "float32", shape = (12, 2, 9))#candidate|1721|(12, 2, 9)|var|float32
output = func_1719(var_1720,var_1721,)
func_1722 = relay.Function([var_1720,var_1721,], output)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1760 = relay.TupleGetItem(func_897_call(), 2)
call_1761 = relay.TupleGetItem(func_899_call(), 2)
func_1645_call = mod.get_global_var('func_1645')
func_1648_call = mutated_mod.get_global_var('func_1648')
const_1765 = relay.const([[9.360615,0.338287,0.397607,-3.694040,0.056245,4.533827,3.826705,9.904270,-6.843390,1.889002],[8.860169,9.615433,4.151588,8.748889,0.420780,-3.824740,5.852956,6.815098,5.871789,-4.702265],[5.566087,9.193119,8.510667,8.405049,3.508248,-3.696973,2.154711,0.451679,-4.522305,-6.014670],[-2.745088,-4.224841,0.421952,9.675635,2.798354,2.005879,2.382301,-6.676800,8.004979,-3.254276],[-3.951109,-1.510188,-0.491647,-9.395538,-3.341937,-5.437439,-5.513739,-9.654193,2.425433,-8.855615],[-5.908775,0.568603,-8.393566,-4.822112,4.508316,-0.800764,3.527243,5.289630,-7.911537,-5.115356],[-6.100214,-2.162729,0.891388,-2.748632,-8.334516,-6.528742,-1.757619,-8.045672,4.901877,6.964267],[-3.284940,-4.393025,-6.691597,8.284208,-4.889925,8.004399,8.685702,1.756547,-2.416753,3.209692],[-7.740804,5.060460,1.294801,-3.788553,0.076237,8.460317,4.782083,1.607092,9.689598,1.689426],[0.878819,-2.664129,-2.731691,8.305635,-7.137112,9.117784,-8.266630,6.482429,-3.402721,-2.017780],[9.294899,6.191355,-6.117387,-2.702488,-0.089777,0.619434,-9.970091,-6.583621,1.939150,-8.368348],[-6.745841,-8.766265,-2.390181,-6.431098,5.053696,-6.417996,-9.615026,-4.534808,1.394736,-3.611641],[-1.578820,3.825871,0.955233,1.508993,7.783592,-8.524017,4.045413,2.929549,9.797784,-0.082251],[-9.677345,4.150573,0.638420,3.016141,5.573025,-6.743909,2.077233,-4.441329,3.577495,6.847122],[0.316379,-7.000262,4.955766,4.249219,1.981042,2.037081,-5.011232,-6.149917,-6.746187,-4.960893],[6.935999,3.387849,-3.481928,6.947042,5.055404,5.734768,4.224309,9.834569,8.612593,7.956422],[7.989310,-3.835870,0.305997,6.761256,0.796574,1.998475,-3.976277,8.212629,2.740071,-8.263084],[-4.341406,7.060981,3.376045,-5.531137,1.065865,3.493213,-8.489386,7.678472,-2.484533,-9.610422],[-9.158819,-1.280332,-6.660677,-7.059002,-1.844366,1.502282,-6.026270,-3.232827,3.233561,-5.913051],[-3.201856,7.114333,1.220612,9.811751,3.765367,3.533569,3.032416,-4.142285,-1.249734,6.804961],[2.980582,4.903934,-6.950164,9.739221,-4.324667,-2.977704,1.437731,7.614075,-9.555504,-2.090918],[-0.029603,-1.151564,3.545704,-2.882728,7.555501,8.018250,-9.428507,-0.562923,-4.789257,-7.313289],[0.778517,-4.330166,7.207799,7.538206,-5.680781,1.372919,-1.969997,-6.219056,3.050640,0.372418],[1.525806,3.106799,9.872928,-7.316527,-8.537558,-3.862619,4.075798,-9.888434,-4.506703,2.702972],[-1.138987,-6.361809,-8.312718,-3.863698,7.456433,-0.448513,-7.209894,-2.432475,6.677282,-3.062557],[0.330828,4.756774,8.803951,3.561749,9.716158,-9.248977,-2.632272,-5.315041,7.476741,-1.813468],[-4.417777,2.609259,-2.104011,-7.463067,-7.073132,6.964148,8.250335,2.527860,4.410862,3.246706],[6.068716,-1.375850,-5.870947,-7.569147,3.193795,-6.018963,1.418123,4.543048,2.518048,0.004583],[-7.416259,9.595379,0.273808,-8.009012,-0.662281,9.581750,1.646710,8.993590,6.652459,4.881437],[-4.110458,-0.348574,-8.523382,4.792774,-9.844451,0.755555,-5.688980,-9.081056,9.806905,-5.780468],[-7.709283,6.248271,1.895680,9.084390,-7.353453,0.679677,-1.929416,-5.235666,2.134473,-3.669821],[-7.438068,-2.771000,6.443469,-6.248488,4.691031,-6.996696,0.536149,7.608774,-7.278208,3.675505],[-2.308146,4.668354,-9.543341,5.819944,1.520393,1.502315,5.277575,-0.028192,5.579819,-1.439097],[9.845673,-8.783289,-4.141983,3.403421,8.389947,-7.112970,-0.531448,-4.196040,6.646664,-5.681663],[-4.083735,8.433725,-9.957562,-9.042828,-5.148228,-4.372756,2.953211,-0.657577,9.846405,-9.963182],[-6.938580,-5.830307,-7.269258,-7.758389,-0.925854,-1.944779,-2.264689,-0.250130,-5.109155,-2.768255],[0.513034,-5.490040,-0.968412,9.453284,1.936973,-8.649425,-7.639411,-9.776697,8.043340,-0.837313],[1.079239,-3.294633,-1.538055,-1.869289,6.666364,-6.027344,-3.183883,8.361096,0.042620,-7.865561],[-4.553773,9.668123,4.086127,5.614762,-0.629102,-1.167748,1.881491,0.250182,0.988415,-3.221007],[3.982523,-6.419679,7.958520,-4.228555,-9.582896,9.277702,5.741052,5.138459,-1.592607,8.382116],[-5.840518,7.838447,7.089198,-5.321019,-0.691302,0.798137,2.273666,3.648089,-1.270189,3.958430],[-3.951148,7.071995,3.912870,-7.618865,-0.769557,-2.121210,5.162147,-1.427287,2.539061,-2.615945],[7.890513,5.876321,7.988509,9.447656,-7.446552,-3.070838,-8.615341,-6.853427,-4.696830,1.199661],[-5.098538,8.422456,9.381964,-7.540957,-3.407493,7.136012,7.723249,-8.369327,7.994111,-4.798686],[4.126024,6.836182,-1.461048,0.059079,-5.585515,0.536752,8.960368,4.671388,-1.241350,1.430576],[-1.933463,-6.679769,0.482493,-3.814092,2.093844,-6.713166,9.044187,-0.036562,4.075393,-7.666556],[-6.116820,-6.381668,-6.080915,0.372571,-6.417747,-6.180752,3.548395,-5.252743,2.934060,9.536745],[0.614181,8.732578,9.022076,-5.706151,-8.602528,4.221539,7.714173,-1.969571,3.546887,-2.044568],[-9.331768,-2.766043,-5.623205,-1.918531,8.247926,-4.359259,7.571135,6.686800,2.075860,2.896826],[-8.749190,-5.381188,-8.390849,4.595358,-2.473315,6.421652,-4.244478,-6.768292,-8.694133,7.511888],[1.185959,-9.870006,0.391711,7.619379,-0.904625,-8.252865,1.980011,-6.312033,4.105625,9.623640],[5.622920,-5.043015,-1.054444,-0.407241,4.462541,-8.041134,5.173731,4.798722,-9.832585,1.774966],[2.891995,3.582939,3.903727,3.634346,-4.019287,-5.756622,6.119473,7.549566,-8.215889,8.671232],[0.514674,-4.343157,-4.101551,-2.436311,-8.430195,3.762889,1.786120,1.831987,-5.655279,-8.487711],[7.998160,6.732952,6.831923,3.346297,-8.642021,-8.342848,-4.416338,1.546137,-1.215960,-1.862739],[6.167308,2.675024,-9.885142,3.115657,2.662806,4.201491,4.244108,8.777452,-9.515008,-7.074554],[6.863306,-0.832900,2.739394,6.480895,8.748066,-7.762167,7.593743,-3.128164,-0.883844,1.612263],[6.935612,4.897294,4.883699,8.871813,8.508409,-8.835984,-2.455511,-3.946040,-5.951251,-5.511207],[8.426354,5.040513,-2.773190,6.211329,8.828037,-2.282813,5.257493,0.386617,-7.652015,-3.743516],[-2.854405,9.698341,-9.025910,-8.085109,6.703671,-1.145889,-5.433301,8.116828,7.322417,4.165273],[7.530205,1.531668,4.178293,5.746212,-5.993264,9.608351,2.282932,4.629618,2.373671,-8.875984],[-2.427051,9.879350,-6.024162,9.673271,1.169149,4.828647,-8.171282,-7.853430,2.789434,-0.705792],[3.659686,7.291970,-4.518292,-1.267697,-9.722600,-5.808722,-1.062666,2.915153,-5.933945,-1.225554],[-8.977608,2.780906,2.721283,-0.745183,9.062163,-0.070111,4.133747,4.435892,-4.326620,8.795314],[7.592595,-5.466782,5.050963,-1.325764,-5.068714,-4.459635,-5.979122,-6.086341,5.218734,5.093669],[8.515555,2.211119,8.243034,-9.250962,7.762563,-1.358187,6.177001,-8.404394,5.146243,-6.529100],[5.658257,-7.383228,-6.501507,1.012118,3.445118,6.148450,-9.016779,8.875708,6.389357,-7.712165],[1.668729,3.750052,4.361229,-1.885450,1.379069,-4.844103,7.663746,-9.389734,1.685200,0.137215],[-8.042892,1.642311,1.333202,-6.420405,-8.396741,4.760543,-7.913785,-2.229438,-1.664943,-7.703266],[-9.313173,2.864148,2.499781,8.130188,9.423582,4.373608,4.225292,9.775785,-2.149507,-0.117849],[-1.134208,-8.575319,-9.698326,-6.673091,2.398988,-8.154064,1.721741,1.489080,-4.424881,-2.967264],[5.203551,1.586168,-3.164592,-8.033181,3.429383,-4.931157,-2.700960,-5.143726,6.080507,-0.811886],[1.171355,-0.602036,-5.983823,3.573070,2.778295,-4.157513,5.404994,8.290471,-9.378870,-3.913179],[-9.646216,9.563311,-2.651465,-3.894198,-9.791822,-3.538967,4.341523,1.394396,2.183115,-1.558424],[-5.947205,7.533488,0.086015,5.397193,-7.808001,8.039009,-7.345310,-8.420255,-4.036372,2.605916],[2.530073,-6.423351,-7.256139,-1.585479,-4.817336,-5.756770,5.694142,-8.475184,2.316144,4.202358],[-6.563652,-3.570406,8.451049,7.017952,3.387384,3.245997,-1.240411,-0.824447,5.469460,-4.291580],[3.301784,-9.540677,7.981865,1.120063,-5.509255,-9.670791,2.233459,-3.077031,2.033679,-2.930846],[-9.669413,7.852941,1.796168,3.820025,-2.368914,-7.103610,4.070759,7.294524,-7.520736,1.895137],[3.095856,4.455089,-5.167907,5.552690,8.895445,6.414406,4.802087,-1.365001,-6.999853,0.082188],[-2.978957,-0.883055,-4.512224,-5.009370,6.339804,-4.344561,5.577298,0.732126,1.118965,-0.756930],[8.812965,-9.529905,-6.188409,0.756124,-9.425888,-2.479545,8.971871,-8.699647,-5.261185,-6.743939],[-3.198407,-1.491674,-6.081812,-2.603963,-2.996629,-8.824514,-6.414807,2.400735,8.359692,2.515428],[0.623437,-3.585341,-2.180887,1.100661,0.672388,-8.520141,-8.769605,-7.782147,6.137540,-4.957077],[5.516080,2.052942,7.667962,-6.748851,1.651684,-7.172732,4.092770,1.387662,-4.725909,-8.837440],[-1.958645,3.684587,8.612001,1.873251,-2.107136,0.255957,-6.901837,1.971756,8.519601,1.564476],[5.023410,8.356781,-2.822914,6.061321,0.751754,0.857519,-1.861049,-9.598476,-3.556205,-3.956108],[3.884054,-6.057854,-6.208612,5.267504,9.070825,1.294170,3.355296,-1.719303,2.815702,-5.482177],[7.746610,3.934154,-4.659269,-2.795790,9.249515,-8.634674,-7.530914,5.518518,-7.713396,-3.145520],[1.141630,2.415300,-6.578620,-4.422606,1.729197,8.364925,-5.335801,-9.762522,-4.088455,4.730352],[-4.787058,1.473721,-5.721337,5.350424,3.677297,0.756982,7.755185,9.762532,-5.483402,-4.838008],[-0.950341,-1.372273,-2.848049,-4.559923,3.038323,-5.723453,5.658770,-1.133013,-1.072970,-2.786324],[7.511941,-6.308088,-2.302829,0.501893,-6.032057,-3.691907,4.557339,1.652717,-9.333375,-8.259689],[-8.041768,2.324757,-2.836798,1.986911,8.450535,6.313479,5.326588,-1.937779,6.347608,-6.448676],[0.150465,4.625337,-7.800874,-1.714579,-2.170711,-1.148891,8.103407,-2.573297,-8.547983,7.273291],[0.177548,-6.277841,-9.195969,0.165163,-6.304016,0.762019,-6.168183,-5.565875,-3.423718,9.538397],[-2.938480,5.709363,1.808614,2.009386,5.265089,-4.423903,6.544748,-1.890709,5.587265,-4.939732],[9.470376,0.245418,-2.274799,-6.220299,-4.412508,9.857277,-8.348403,-3.975891,-5.677302,3.820953],[-9.667828,-9.805119,-8.859297,-1.247489,-4.216821,-8.491255,-3.415476,-3.233817,4.266229,3.597183],[-5.744164,-3.372960,7.331239,2.920282,7.038565,-8.470236,-2.099738,6.850433,0.931386,-1.459448],[-9.131086,8.654114,-6.399230,3.517520,3.186099,9.192046,4.076874,-2.381468,-8.661131,-1.403463],[-2.445142,-5.869033,-4.564790,9.632879,6.335785,0.257143,-7.666592,-2.198585,-5.700391,2.313548],[7.376575,-9.265610,-4.518811,5.856947,-2.560107,-5.160130,-4.225145,6.047165,3.235355,-8.897392],[-6.816595,-3.874340,4.467817,7.756245,2.006096,3.342594,3.766231,0.693496,-1.275268,-2.452888],[7.613170,1.309146,1.074619,-2.068389,7.603937,8.756740,-8.434484,6.387386,5.073930,-6.727182],[0.861812,3.788451,5.341696,-3.598969,0.423536,-2.540940,-8.126947,3.633408,-5.071580,-8.303676],[-2.139634,6.491307,3.543402,-9.349465,7.770259,7.230437,-3.338319,0.141436,-8.366210,8.604274],[-9.636082,-2.844828,6.550383,0.484784,2.757231,-8.545905,0.985930,-0.319427,-5.451565,5.047510],[1.775923,-5.588933,0.009862,2.842291,5.157251,-9.177419,-9.094884,-2.195724,-3.996620,8.767622],[4.544372,7.354578,4.548780,-7.061399,1.940699,2.698152,-9.685134,-1.657810,6.422727,4.490479],[6.607395,7.413946,-3.906987,6.657624,4.946242,-1.049917,-7.811394,6.784861,-8.824922,5.880640],[-3.519797,-0.936731,-4.923817,-4.836606,4.258109,1.408707,1.162148,-8.008435,-4.309363,-3.572643],[5.692176,3.826292,6.758185,1.508950,-2.493085,5.155645,-8.894225,3.074444,-8.104277,-0.424476],[-5.319012,-2.657000,-0.644424,0.552903,5.723638,-7.865664,1.490944,-6.940590,0.971658,-1.395400],[1.644578,-7.822523,2.649161,-0.218461,8.374039,0.109994,-6.680417,-0.842653,9.675734,-0.481158],[4.648965,8.697446,-2.884852,4.875891,7.553221,9.784312,0.598962,-3.063418,8.444706,8.887287],[-4.640999,-7.945895,-5.567917,0.364885,3.839598,-3.745472,9.997497,7.178208,-5.129264,2.778837],[-1.788799,-3.052374,-7.122142,-9.064434,9.777892,-4.073960,3.637098,3.142966,6.311887,2.383870],[-5.813537,-4.486310,0.989784,1.933568,-7.443603,1.946530,8.030731,5.612072,9.047055,8.854582],[6.662507,-0.455906,6.051719,-2.905618,-0.213166,8.396742,-0.665806,-4.347810,7.838621,7.930054],[-2.346337,-0.162941,-6.630418,3.715876,0.444074,-2.290562,6.298492,5.262931,-6.611271,1.319382],[4.002306,2.833340,-0.090476,9.696325,9.669466,-5.238447,-9.108468,2.917893,-5.396794,-6.226324],[-8.212731,-0.328934,8.803085,-3.922955,3.455382,-8.317757,-1.530327,-9.405077,-6.861833,-4.300931],[-3.234027,8.214095,4.583723,2.398289,-9.855660,7.801272,8.264236,-0.660700,-9.362327,-4.888171],[-7.064627,-6.756182,1.715054,-0.204288,8.581034,9.165310,7.884522,-5.193385,-5.992462,-8.481253],[4.814063,4.885811,9.104443,8.689475,-7.070388,8.960968,-4.852855,3.378814,7.722263,8.055125],[-9.865002,-2.754564,-4.334236,-5.102430,3.701435,2.445780,-8.475309,1.978630,-1.889746,5.636055],[-3.255680,5.045614,0.307542,-9.799794,-2.110942,3.779188,8.670092,-8.997206,-7.873032,-4.545933],[7.568071,-3.144529,-8.207217,8.038532,-8.788581,7.800544,-1.580385,8.243056,4.037375,-8.455042],[-0.037713,-2.196650,1.760398,3.081084,0.925943,7.278966,4.213666,-5.385701,2.298000,-0.811415],[4.533626,5.459816,-2.554304,6.181049,-7.715691,-4.737225,5.812266,-6.925739,5.197115,-3.436691],[5.245763,-7.303252,0.339381,-1.922134,-5.765245,-7.213127,-2.853183,5.432656,-1.984389,-8.420358],[-3.736355,7.258375,8.126783,1.601184,6.117839,0.405479,3.341782,8.098596,0.294968,-1.748513],[-4.706354,5.398726,-7.779235,-4.633134,6.251845,0.062844,4.917592,1.854393,3.843960,0.410184],[-5.697096,2.557516,-0.600979,-3.041922,3.854399,-0.050878,1.538892,-0.525644,-7.320011,-3.942661],[-1.650639,-7.133958,2.610481,-9.958534,-8.492933,9.722068,3.239967,-3.837786,-7.218346,2.268440],[6.590459,7.043749,3.318370,-5.749216,-5.994693,8.525761,6.579632,-4.262115,8.573959,7.057804],[3.928703,-8.928033,5.699484,-4.477215,4.124948,6.361082,5.811971,2.356082,3.737870,7.255604],[-0.795534,-8.766615,-4.505357,-1.587875,5.593556,5.651934,0.740668,4.972078,-9.983236,-0.505069],[5.648454,4.809470,-2.886746,5.637080,-3.533327,-2.377105,6.769830,-1.125549,6.058292,3.075818],[-2.591671,5.296979,-8.804443,7.988959,5.369239,-3.733955,1.959841,6.523501,-5.087246,2.537944],[1.740997,-5.565877,-6.603090,-9.229305,8.890464,9.090168,-1.064665,5.840205,4.937440,-0.850179],[-7.230895,-2.219194,-3.449185,-4.100254,-5.487044,4.572711,4.422405,9.920577,6.270989,3.373274],[3.276969,-5.626611,-6.969757,8.931183,-8.712696,-4.947201,-6.725254,1.015238,-7.841269,-3.655172],[0.001792,6.103540,5.336891,6.278697,-3.913840,2.099699,7.632868,-5.881646,-4.057704,9.419281],[7.830430,9.942947,-3.586235,-8.496916,-4.082906,-4.799002,-3.220885,-1.581965,-3.160266,-9.637414],[0.003550,-4.783769,-2.294531,-4.175371,-0.228051,7.178163,6.800161,-3.861998,0.761046,-1.349131],[0.930215,-7.498019,-8.205143,0.513325,-6.260856,-0.967307,3.975631,-2.728175,4.694298,-5.905075],[-4.671400,8.040054,2.870753,-0.104669,-5.543066,-9.237497,6.822988,6.511460,-3.042668,-4.277940],[4.569633,-1.624293,2.193699,-9.790797,3.848780,9.143431,-3.344985,1.253863,-5.423765,7.582079],[-5.805897,-5.776014,-2.771156,-0.245440,-4.213441,9.112861,9.140595,-0.547638,-9.512005,9.221228],[-4.798120,2.774545,4.526496,-9.378890,-3.004219,-8.133905,1.307537,-2.563598,-0.123539,-5.378341],[7.646440,-8.951016,4.170675,-0.999950,5.030708,3.076232,-1.901962,6.322029,1.004144,9.737402],[4.949834,4.799285,-2.287764,-9.839948,-7.413720,2.610751,-4.012963,-5.735796,-0.390054,6.045525]], dtype = "float64")#candidate|1765|(154, 10)|const|float64
call_1764 = relay.TupleGetItem(func_1645_call(relay.reshape(const_1765.astype('float64'), [1540,])), 2)
call_1766 = relay.TupleGetItem(func_1648_call(relay.reshape(const_1765.astype('float64'), [1540,])), 2)
func_1719_call = mod.get_global_var('func_1719')
func_1722_call = mutated_mod.get_global_var('func_1722')
var_1768 = relay.var("var_1768", dtype = "float32", shape = ())#candidate|1768|()|var|float32
var_1769 = relay.var("var_1769", dtype = "float32", shape = (216,))#candidate|1769|(216,)|var|float32
call_1767 = relay.TupleGetItem(func_1719_call(relay.reshape(var_1768.astype('float32'), []), relay.reshape(var_1769.astype('float32'), [12, 2, 9]), ), 1)
call_1770 = relay.TupleGetItem(func_1722_call(relay.reshape(var_1768.astype('float32'), []), relay.reshape(var_1769.astype('float32'), [12, 2, 9]), ), 1)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_1772 = relay.TupleGetItem(func_1494_call(), 0)
call_1773 = relay.TupleGetItem(func_1495_call(), 0)
output = relay.Tuple([call_1760,call_1764,const_1765,call_1767,var_1768,var_1769,call_1772,])
output2 = relay.Tuple([call_1761,call_1766,const_1765,call_1770,var_1768,var_1769,call_1773,])
func_1780 = relay.Function([var_1768,var_1769,], output)
mod['func_1780'] = func_1780
mod = relay.transform.InferType()(mod)
mutated_mod['func_1780'] = func_1780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1780_call = mutated_mod.get_global_var('func_1780')
var_1782 = relay.var("var_1782", dtype = "float32", shape = ())#candidate|1782|()|var|float32
var_1783 = relay.var("var_1783", dtype = "float32", shape = (216,))#candidate|1783|(216,)|var|float32
call_1781 = func_1780_call(var_1782,var_1783,)
output = call_1781
func_1784 = relay.Function([var_1782,var_1783,], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_1810 = func_1690_call()
call_1811 = func_1690_call()
func_510_call = mod.get_global_var('func_510')
func_513_call = mutated_mod.get_global_var('func_513')
call_1824 = func_510_call(relay.reshape(call_1810.astype('float32'), [2, 15, 12]))
call_1825 = func_510_call(relay.reshape(call_1810.astype('float32'), [2, 15, 12]))
func_1029_call = mod.get_global_var('func_1029')
func_1032_call = mutated_mod.get_global_var('func_1032')
var_1827 = relay.var("var_1827", dtype = "int16", shape = (396,))#candidate|1827|(396,)|var|int16
call_1826 = relay.TupleGetItem(func_1029_call(relay.reshape(var_1827.astype('int16'), [396,])), 1)
call_1828 = relay.TupleGetItem(func_1032_call(relay.reshape(var_1827.astype('int16'), [396,])), 1)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
const_1830 = relay.const([1.695091,-3.469673,3.699783,0.375901,7.046232,1.366060,-8.514022,-5.262736,3.780313,7.960612,5.351639,-0.222775,-1.521093,3.046920,4.637744,8.748601,-8.787730,-2.248702,-9.442135,-8.929489,2.756603,-3.614714,-8.264219,-0.506543,6.063319,5.683602,-0.945221,-4.107349,-7.953399,-1.054764,-5.392415,-9.943062,9.234817,7.240178,-3.401081,7.874207,1.009059,-0.454999,1.333333,-7.366341,-6.700133,7.938854,5.858666,9.522140,0.748917,1.584390,7.321460,8.872190,-6.005505,-4.016778,-7.511840,-1.105499,-3.768950,6.058193,4.407135,-9.845554,-3.582981,-9.226295,8.459779,9.889777,2.332805,3.026211,-4.232939,-5.863746,0.533338,3.619264,-8.420416,8.246625,-4.917520,-3.928001,-1.775218,1.619907,-8.098267,-9.735101,-6.728152,3.845184,-0.320224,-0.427338,9.491249,5.379765,-6.717803,-5.800438,-4.178032,2.743909,-1.313197,5.311777,-7.869996,8.372398,-9.871379,6.910013,0.664230,6.944411,3.552041,-2.146477,-9.489954,3.058294,2.688639,6.876702,6.664307,-6.560006,0.210203,5.526462,4.379605,-4.327833,-1.233007,-4.222237,-8.332460,-7.053346,3.101270,-4.676362,-4.952829,-2.532357,0.963999,-2.191250,-7.985054,9.176451,-3.672042,-2.180759,9.655930,9.110403,-7.302934,-9.467685,9.130362,-6.716032,6.239318,-9.240297,-9.027580,4.130094,7.902895,-3.686913,2.035451,1.274497,-4.818521,3.577991,-0.695895,-3.277812,-4.037809,-2.024970,9.397290,-9.935071,8.900305,-0.836675,-1.388243,-5.662437,3.570670,7.890538,-5.348489,-6.593988,-3.315766,-9.577287], dtype = "float64")#candidate|1830|(150,)|const|float64
call_1829 = relay.TupleGetItem(func_461_call(relay.reshape(const_1830.astype('float64'), [15, 1, 10])), 4)
call_1831 = relay.TupleGetItem(func_464_call(relay.reshape(const_1830.astype('float64'), [15, 1, 10])), 4)
uop_1836 = relay.atan(const_1830.astype('float64')) # shape=(150,)
uop_1840 = relay.exp(uop_1836.astype('float64')) # shape=(150,)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_1849 = relay.TupleGetItem(func_1223_call(), 0)
call_1850 = relay.TupleGetItem(func_1225_call(), 0)
output = relay.Tuple([call_1810,call_1824,call_1826,var_1827,call_1829,uop_1840,call_1849,])
output2 = relay.Tuple([call_1811,call_1825,call_1828,var_1827,call_1831,uop_1840,call_1850,])
func_1870 = relay.Function([var_1827,], output)
mod['func_1870'] = func_1870
mod = relay.transform.InferType()(mod)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1871 = relay.var("var_1871", dtype = "int16", shape = (396,))#candidate|1871|(396,)|var|int16
func_1870_call = mutated_mod.get_global_var('func_1870')
call_1872 = func_1870_call(var_1871)
output = call_1872
func_1873 = relay.Function([var_1871], output)
mutated_mod['func_1873'] = func_1873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1934 = relay.var("var_1934", dtype = "uint16", shape = (14, 11, 8))#candidate|1934|(14, 11, 8)|var|uint16
var_1935 = relay.var("var_1935", dtype = "uint16", shape = (14, 11, 8))#candidate|1935|(14, 11, 8)|var|uint16
bop_1936 = relay.minimum(var_1934.astype('uint16'), relay.reshape(var_1935.astype('uint16'), relay.shape_of(var_1934))) # shape=(14, 11, 8)
func_1376_call = mod.get_global_var('func_1376')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_1960 = relay.const([-2.614607,-4.848455,5.625705,-6.789849,-8.815791,1.646472,-7.565966,2.698825,-5.558049,-6.579059,9.266958,9.826255,7.158094,0.641187,6.359998,6.981972,1.609624,3.455273,-4.693308,5.843855,8.271992,-0.149649,1.874253,4.563245,-8.405119,-7.050999,-4.650484,-4.476822,1.415789,-5.281452,9.349252,-4.947482,2.741292,2.766842,9.395955,-7.511027,9.813993,5.356335,-1.127715,-6.688338,-7.789652,-0.655220,-8.466906,6.732001,-3.035317,4.862372,7.205807,1.160396,3.041778,4.161129,3.621674,-3.323124,-7.449483,6.248822,-1.535976,0.764478,-9.828199,1.280466,-2.306925,-1.909425,-8.473868,-1.979944,3.309339,1.758951,6.703657,-1.456266,-4.590764,6.028907,-3.826866,-3.357973,9.020515,0.853036,7.363324,-9.848662,7.653969,4.572685,-2.642023,-3.549613,1.297219,4.531438,-2.493497,2.082459,-2.711568,4.954429,3.238310,1.195651,5.391923,-9.285819,8.272540,-1.129573,-9.794695,-0.712148,-2.736233,-7.995780,-3.540257,-2.966579,9.286615,-2.183125,-2.943776,-3.266640,9.559310,-5.681648,5.783617,6.510566,-9.406553,3.717556,8.991863,0.286509,-0.770122,1.518555,6.470698,0.719657,5.356293,-5.002711,2.646595,4.350992,-4.009619,1.916507,9.129831,-7.773095,5.771870,-3.786093,-2.443149,-7.733543,0.521104,6.267391,3.350869,-2.637432,-0.018871,-7.487314,4.901530,-1.245779,-9.945160,0.322536,9.592965,1.543829,-4.193938,0.387195,6.073456,7.114944,-4.422894,-4.644398,-9.040797,-9.492093,5.675686,-6.528450,3.719174,7.479158,8.426179,9.255790], dtype = "float64")#candidate|1960|(150,)|const|float64
var_1961 = relay.var("var_1961", dtype = "float32", shape = (1485,))#candidate|1961|(1485,)|var|float32
call_1959 = relay.TupleGetItem(func_1376_call(relay.reshape(const_1960.astype('float64'), [150,]), relay.reshape(var_1961.astype('float32'), [1485,]), ), 0)
call_1962 = relay.TupleGetItem(func_1379_call(relay.reshape(const_1960.astype('float64'), [150,]), relay.reshape(var_1961.astype('float32'), [1485,]), ), 0)
uop_1971 = relay.erf(bop_1936.astype('float32')) # shape=(14, 11, 8)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_2019 = relay.TupleGetItem(func_897_call(), 0)
call_2020 = relay.TupleGetItem(func_899_call(), 0)
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
var_2023 = relay.var("var_2023", dtype = "float64", shape = (616,))#candidate|2023|(616,)|var|float64
call_2022 = relay.TupleGetItem(func_579_call(relay.reshape(var_2023.astype('float64'), [14, 4, 11])), 0)
call_2024 = relay.TupleGetItem(func_581_call(relay.reshape(var_2023.astype('float64'), [14, 4, 11])), 0)
output = relay.Tuple([call_1959,const_1960,var_1961,uop_1971,call_2019,call_2022,var_2023,])
output2 = relay.Tuple([call_1962,const_1960,var_1961,uop_1971,call_2020,call_2024,var_2023,])
func_2028 = relay.Function([var_1934,var_1935,var_1961,var_2023,], output)
mod['func_2028'] = func_2028
mod = relay.transform.InferType()(mod)
var_2029 = relay.var("var_2029", dtype = "uint16", shape = (14, 11, 8))#candidate|2029|(14, 11, 8)|var|uint16
var_2030 = relay.var("var_2030", dtype = "uint16", shape = (14, 11, 8))#candidate|2030|(14, 11, 8)|var|uint16
var_2031 = relay.var("var_2031", dtype = "float32", shape = (1485,))#candidate|2031|(1485,)|var|float32
var_2032 = relay.var("var_2032", dtype = "float64", shape = (616,))#candidate|2032|(616,)|var|float64
output = func_2028(var_2029,var_2030,var_2031,var_2032,)
func_2033 = relay.Function([var_2029,var_2030,var_2031,var_2032,], output)
mutated_mod['func_2033'] = func_2033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2074 = func_1690_call()
call_2075 = func_1690_call()
output = relay.Tuple([call_2074,])
output2 = relay.Tuple([call_2075,])
func_2080 = relay.Function([], output)
mod['func_2080'] = func_2080
mod = relay.transform.InferType()(mod)
output = func_2080()
func_2081 = relay.Function([], output)
mutated_mod['func_2081'] = func_2081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_2101 = func_1171_call()
call_2102 = func_1171_call()
output = call_2101
output2 = call_2102
func_2105 = relay.Function([], output)
mod['func_2105'] = func_2105
mod = relay.transform.InferType()(mod)
output = func_2105()
func_2106 = relay.Function([], output)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_2110 = relay.TupleGetItem(func_1223_call(), 0)
call_2111 = relay.TupleGetItem(func_1225_call(), 0)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_2138 = relay.TupleGetItem(func_1494_call(), 0)
call_2139 = relay.TupleGetItem(func_1495_call(), 0)
func_1206_call = mod.get_global_var('func_1206')
func_1209_call = mutated_mod.get_global_var('func_1209')
var_2145 = relay.var("var_2145", dtype = "float32", shape = (132,))#candidate|2145|(132,)|var|float32
call_2144 = relay.TupleGetItem(func_1206_call(relay.reshape(var_2145.astype('float32'), [4, 3, 11])), 1)
call_2146 = relay.TupleGetItem(func_1209_call(relay.reshape(var_2145.astype('float32'), [4, 3, 11])), 1)
const_2148 = relay.const([[[True,False,True,True,False,False,True,True,True,False],[True,False,True,False,True,True,False,True,False,True],[False,True,False,False,False,False,False,False,False,True],[False,True,True,False,True,True,False,False,True,True],[False,False,True,True,False,False,True,False,True,True],[True,False,False,True,False,True,False,False,True,False],[True,False,True,False,False,False,False,False,False,True],[False,False,True,True,False,True,False,True,False,True],[False,True,True,True,True,False,False,True,False,True],[True,False,True,False,False,True,True,False,False,True],[True,False,False,False,True,False,False,True,True,False]],[[True,True,True,False,False,False,False,False,True,True],[False,False,True,True,True,True,True,False,False,True],[True,True,True,True,False,False,True,False,False,False],[False,True,False,True,True,False,False,False,True,True],[True,True,False,False,False,True,True,True,True,True],[False,False,True,True,False,True,False,True,True,False],[False,True,True,False,False,False,False,False,False,True],[False,True,False,False,True,True,True,True,False,False],[False,True,False,True,False,False,False,False,False,True],[False,False,False,True,False,True,False,False,True,False],[False,True,False,False,True,True,True,False,False,False]],[[False,True,True,True,False,True,True,True,False,True],[False,False,True,True,False,True,False,False,False,True],[False,False,True,False,False,False,False,False,True,False],[False,True,True,True,False,False,False,False,True,False],[True,True,True,True,False,True,False,False,True,False],[False,True,False,True,False,True,True,False,True,False],[False,True,False,False,False,False,False,False,False,True],[True,False,False,False,True,True,True,True,True,False],[False,True,True,False,False,True,True,False,True,False],[False,False,True,False,False,True,True,False,False,True],[True,True,True,True,True,False,False,False,False,False]],[[False,False,True,True,False,False,True,False,False,False],[False,False,False,False,True,False,True,False,False,True],[True,True,False,True,True,True,True,True,True,True],[True,True,True,True,True,False,True,False,False,True],[False,False,True,True,False,False,True,False,False,False],[True,False,True,False,True,False,True,False,False,True],[False,True,False,True,False,True,True,True,True,True],[False,False,False,False,True,False,False,False,False,True],[False,False,True,False,False,False,False,True,False,False],[False,False,False,True,False,False,False,True,False,False],[True,False,False,True,False,True,True,True,True,False]],[[False,False,False,True,False,False,True,False,True,True],[True,False,False,True,True,False,True,True,True,True],[True,False,False,True,True,False,False,True,True,False],[True,True,False,True,False,False,True,True,False,False],[True,True,False,True,False,True,True,False,True,False],[True,False,True,True,False,False,False,False,True,True],[False,False,True,False,True,True,False,False,True,True],[True,False,False,True,True,True,True,False,True,False],[False,False,False,True,False,False,False,False,True,True],[True,True,False,False,False,True,False,False,False,True],[True,True,True,False,False,False,True,True,False,False]],[[True,False,False,False,False,False,False,False,False,True],[True,False,True,True,False,True,True,False,True,True],[True,True,False,False,True,False,False,False,False,False],[False,True,True,False,True,True,True,False,True,True],[True,False,True,False,False,False,True,True,False,True],[False,False,False,False,False,True,False,True,True,False],[True,True,False,False,True,True,True,False,True,False],[False,True,True,True,True,True,True,True,False,False],[False,False,False,False,False,False,True,False,True,False],[True,True,True,True,True,False,False,True,True,False],[True,True,True,False,False,False,True,False,True,True]],[[False,True,True,False,True,True,False,False,False,False],[False,True,True,True,False,False,False,False,True,True],[False,True,False,True,True,False,False,True,False,True],[False,False,True,False,False,False,True,True,True,True],[True,True,False,False,True,False,False,True,True,False],[False,True,True,False,True,False,False,True,True,True],[False,False,True,True,False,False,False,True,True,True],[True,False,False,True,False,True,False,False,False,True],[False,False,False,True,False,True,False,True,False,True],[False,True,True,True,False,True,True,False,True,False],[True,False,False,False,True,False,True,True,True,False]],[[False,True,False,True,True,True,False,True,False,True],[False,False,False,False,True,False,True,True,True,False],[True,False,False,False,False,False,False,False,True,True],[False,False,True,False,True,False,True,True,True,True],[False,True,True,False,True,True,True,True,False,False],[True,True,False,False,True,True,False,False,True,True],[True,True,True,False,True,False,False,True,False,True],[False,False,True,False,True,False,True,False,True,True],[False,True,False,False,True,False,True,True,False,False],[False,True,True,False,False,True,False,False,False,False],[False,False,True,True,False,False,True,True,False,True]],[[False,False,False,True,False,True,True,False,False,True],[False,False,False,False,False,False,True,True,True,True],[True,True,True,False,False,False,False,True,True,False],[False,False,False,False,True,True,True,False,True,True],[True,True,False,True,True,False,False,False,True,True],[True,True,False,True,True,False,True,False,True,False],[False,False,False,True,False,True,False,False,True,True],[True,False,False,True,False,False,False,False,False,True],[True,False,False,True,True,False,True,False,False,False],[False,False,False,True,True,True,False,True,True,False],[False,False,False,True,False,False,True,False,False,True]],[[True,True,True,False,False,False,False,True,False,False],[False,True,False,False,False,False,True,False,True,False],[False,False,True,True,True,True,True,False,True,False],[True,False,True,True,False,False,True,False,True,False],[False,True,True,True,False,True,True,True,True,False],[False,False,False,True,True,True,False,False,True,True],[False,True,True,False,False,False,False,True,False,True],[True,True,True,False,False,True,True,True,False,True],[True,False,True,False,True,False,True,True,False,True],[False,True,False,False,True,False,False,True,True,False],[False,True,True,True,True,True,False,True,False,True]],[[False,False,True,True,False,True,True,True,False,True],[False,True,False,False,True,True,False,True,False,False],[True,True,True,True,False,False,False,True,True,True],[False,True,True,True,False,True,False,True,False,True],[True,True,False,True,True,True,True,False,False,True],[False,True,False,True,False,True,True,True,False,True],[False,False,False,True,True,True,False,False,False,False],[True,True,True,True,True,True,False,False,True,False],[True,True,True,False,False,False,True,True,True,True],[False,True,True,True,False,False,False,False,False,False],[False,True,False,False,False,True,True,False,True,False]],[[False,False,True,False,False,True,False,True,False,True],[False,True,False,True,False,False,False,False,False,False],[False,False,False,False,False,False,True,True,True,False],[True,True,True,False,True,True,True,True,True,False],[False,True,True,False,True,True,False,True,True,False],[True,True,True,True,False,True,False,True,True,True],[False,False,False,True,True,False,False,False,True,True],[False,False,True,True,False,False,False,True,True,True],[True,False,True,False,False,True,False,False,False,True],[True,False,True,True,True,False,True,False,True,True],[True,True,True,False,True,True,False,True,False,True]],[[True,False,False,False,False,False,True,False,False,True],[True,True,False,True,False,True,True,False,True,False],[True,True,False,False,True,True,True,False,False,False],[True,True,False,True,True,False,True,False,True,True],[False,False,False,False,True,True,True,True,True,True],[True,False,False,True,False,True,False,True,True,True],[True,True,False,True,False,False,False,False,False,True],[True,False,True,False,False,True,True,False,False,False],[True,True,False,True,True,False,False,True,True,False],[False,True,True,True,False,True,True,False,True,True],[True,True,False,True,True,False,False,False,False,False]],[[False,True,True,False,False,False,False,True,False,True],[True,False,False,False,True,True,True,False,True,True],[False,True,False,False,False,True,False,False,True,True],[False,True,False,True,True,True,False,True,False,False],[False,True,False,True,True,False,False,False,False,True],[True,False,False,True,False,False,False,True,False,True],[False,False,False,False,False,True,True,False,False,True],[False,True,False,False,False,True,False,False,False,True],[True,True,True,False,True,False,False,True,True,True],[True,True,True,True,True,True,True,True,True,True],[False,True,False,True,False,False,False,False,False,False]]], dtype = "bool")#candidate|2148|(14, 11, 10)|const|bool
bop_2149 = relay.logical_and(call_2144.astype('bool'), relay.reshape(const_2148.astype('bool'), relay.shape_of(call_2144))) # shape=(14, 11, 10)
bop_2152 = relay.logical_and(call_2146.astype('bool'), relay.reshape(const_2148.astype('bool'), relay.shape_of(call_2146))) # shape=(14, 11, 10)
func_510_call = mod.get_global_var('func_510')
func_513_call = mutated_mod.get_global_var('func_513')
call_2157 = func_510_call(relay.reshape(call_2110.astype('float32'), [2, 15, 12]))
call_2158 = func_510_call(relay.reshape(call_2110.astype('float32'), [2, 15, 12]))
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_2159 = relay.TupleGetItem(func_1564_call(), 1)
call_2160 = relay.TupleGetItem(func_1566_call(), 1)
bop_2171 = relay.left_shift(bop_2149.astype('int32'), relay.reshape(call_2144.astype('int32'), relay.shape_of(bop_2149))) # shape=(14, 11, 10)
bop_2174 = relay.left_shift(bop_2152.astype('int32'), relay.reshape(call_2146.astype('int32'), relay.shape_of(bop_2152))) # shape=(14, 11, 10)
uop_2175 = relay.log2(bop_2171.astype('float32')) # shape=(14, 11, 10)
uop_2177 = relay.log2(bop_2174.astype('float32')) # shape=(14, 11, 10)
uop_2182 = relay.tan(uop_2175.astype('float64')) # shape=(14, 11, 10)
uop_2184 = relay.tan(uop_2177.astype('float64')) # shape=(14, 11, 10)
bop_2193 = relay.divide(uop_2182.astype('float32'), relay.reshape(bop_2149.astype('float32'), relay.shape_of(uop_2182))) # shape=(14, 11, 10)
bop_2196 = relay.divide(uop_2184.astype('float32'), relay.reshape(bop_2152.astype('float32'), relay.shape_of(uop_2184))) # shape=(14, 11, 10)
bop_2202 = relay.bitwise_or(uop_2182.astype('int64'), relay.reshape(bop_2193.astype('int64'), relay.shape_of(uop_2182))) # shape=(14, 11, 10)
bop_2205 = relay.bitwise_or(uop_2184.astype('int64'), relay.reshape(bop_2196.astype('int64'), relay.shape_of(uop_2184))) # shape=(14, 11, 10)
var_2215 = relay.var("var_2215", dtype = "float64", shape = (14, 11, 10))#candidate|2215|(14, 11, 10)|var|float64
bop_2216 = relay.greater_equal(uop_2182.astype('bool'), relay.reshape(var_2215.astype('bool'), relay.shape_of(uop_2182))) # shape=(14, 11, 10)
bop_2219 = relay.greater_equal(uop_2184.astype('bool'), relay.reshape(var_2215.astype('bool'), relay.shape_of(uop_2184))) # shape=(14, 11, 10)
bop_2235 = relay.equal(bop_2202.astype('bool'), relay.reshape(bop_2149.astype('bool'), relay.shape_of(bop_2202))) # shape=(14, 11, 10)
bop_2238 = relay.equal(bop_2205.astype('bool'), relay.reshape(bop_2152.astype('bool'), relay.shape_of(bop_2205))) # shape=(14, 11, 10)
bop_2243 = relay.multiply(bop_2149.astype('uint32'), relay.reshape(bop_2202.astype('uint32'), relay.shape_of(bop_2149))) # shape=(14, 11, 10)
bop_2246 = relay.multiply(bop_2152.astype('uint32'), relay.reshape(bop_2205.astype('uint32'), relay.shape_of(bop_2152))) # shape=(14, 11, 10)
output = relay.Tuple([call_2110,call_2138,var_2145,call_2157,call_2159,bop_2216,bop_2235,bop_2243,])
output2 = relay.Tuple([call_2111,call_2139,var_2145,call_2158,call_2160,bop_2219,bop_2238,bop_2246,])
func_2268 = relay.Function([var_2145,var_2215,], output)
mod['func_2268'] = func_2268
mod = relay.transform.InferType()(mod)
var_2269 = relay.var("var_2269", dtype = "float32", shape = (132,))#candidate|2269|(132,)|var|float32
var_2270 = relay.var("var_2270", dtype = "float64", shape = (14, 11, 10))#candidate|2270|(14, 11, 10)|var|float64
output = func_2268(var_2269,var_2270,)
func_2271 = relay.Function([var_2269,var_2270,], output)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_2288 = relay.TupleGetItem(func_1564_call(), 0)
call_2289 = relay.TupleGetItem(func_1566_call(), 0)
func_1376_call = mod.get_global_var('func_1376')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_2291 = relay.var("var_2291", dtype = "float64", shape = (150,))#candidate|2291|(150,)|var|float64
const_2292 = relay.const([5.472167,-2.079150,-6.646441,-0.635094,1.672462,0.225777,-0.980682,-0.661425,-3.318433,-3.423859,-6.206477,-7.387274,8.510399,5.505904,-8.016210,-9.161975,0.140327,8.859411,2.425726,1.554199,-5.150660,-6.047533,-4.840558,-6.457670,-3.503714,7.486344,-2.968725,-6.326187,7.448065,-9.590863,-4.087013,0.958351,4.861783,9.564834,-5.971388,-3.789809,0.595211,-2.819779,0.289344,-0.314499,6.026272,-3.809282,7.814036,4.904239,-8.615348,-0.584381,7.109079,-4.077695,4.037328,6.907475,-5.745198,-1.362953,-8.721126,5.943439,6.410672,-5.972336,9.816192,-9.447083,0.900162,-8.416802,8.617794,-6.130831,-5.871343,-6.003764,-8.717620,-3.955884,2.938361,1.004617,8.560098,8.409116,-6.584015,7.966158,-0.905541,0.396716,-6.206923,8.949603,-3.668690,-4.090564,-4.467320,-5.184489,-8.594990,0.608176,6.350287,-4.225397,-2.183381,-1.354069,4.259443,-5.954114,0.329157,1.796792,2.552326,-8.698828,-0.592691,4.303516,2.521726,9.801316,-9.902473,6.720180,8.313991,-1.266204,5.865319,3.196213,-4.567983,-7.403379,1.832932,9.422875,-1.726324,-5.761640,-3.039007,9.049452,-4.988948,-7.418724,7.231542,-9.730562,7.795261,-7.011751,0.291699,2.732810,-9.324276,-7.066547,0.204950,-5.653607,1.219970,-4.197913,-3.856074,8.677475,-0.395991,2.561399,7.783063,4.345900,-0.838059,4.198195,8.058732,-7.108630,-1.749970,9.533179,-9.255216,1.466392,-7.493773,-3.250302,6.633835,7.495094,1.838508,1.992438,7.154179,0.282889,9.704943,9.232691,3.311312,-3.809745,-7.840617,0.270506,0.889294,-6.901008,-5.079305,1.477339,-0.899300,6.815265,2.974488,-5.035740,0.325346,9.797418,-5.875839,0.859784,-0.452308,3.765591,1.632776,5.775225,8.832052,6.166113,-2.743561,8.918624,4.453175,-8.696632,-5.750868,8.888245,-9.060473,-5.871440,-7.423901,-2.661375,5.769029,1.430269,-5.661848,8.556252,6.048339,7.497810,7.204613,-9.095550,-9.256258,-9.397163,-6.899593,-9.512089,-4.556675,5.247572,3.276655,0.768938,-2.208769,3.680857,2.403025,-9.384725,2.468861,3.135136,9.161740,-9.507513,-9.339240,-4.173967,-4.277209,-1.245989,3.979738,3.993719,3.244995,0.534592,-2.987409,7.098780,9.195288,-7.414652,4.738132,-0.218975,5.168918,-4.517463,3.805324,-9.649329,-1.404672,-3.418484,7.138479,-1.028867,-3.095099,-4.416513,-7.805288,-7.270392,1.037940,2.755903,-8.951546,3.362049,-7.872144,-8.936649,-9.372242,2.101746,7.216223,-8.457268,-4.085422,8.803943,-8.461533,2.428536,0.439326,7.109119,-3.281529,-9.617253,-7.769150,-5.448081,8.006044,-2.361496,-4.702247,-3.781611,8.185491,-3.949749,5.671369,-5.168091,5.471867,5.112540,9.664517,6.088625,9.562432,9.810638,-9.040495,-2.744907,-2.729568,1.905141,-8.307521,-7.252757,8.275864,5.634298,-4.566046,-1.797120,4.933208,0.995245,-0.052355,-4.455721,-9.475060,9.871362,-1.093595,-1.404957,-8.201492,3.471768,-2.280615,-6.597815,-7.957924,-8.376310,5.988677,-2.554485,-5.361446,-9.677026,-5.315257,-1.539597,-2.142981,8.610534,9.951008,9.384532,-7.311021,0.042886,-8.008273,-5.201150,5.221883,7.468678,6.158777,-3.195531,4.826634,5.459940,2.786616,-0.978497,5.256446,-0.919826,-4.101681,4.212183,-6.956739,3.873142,-8.900599,5.188749,-9.021347,3.175819,-5.245750,-3.132680,-2.469711,-5.687439,1.473981,3.612641,-5.045950,-2.914954,3.293614,9.273461,-2.178647,-6.647167,-0.769339,-6.769805,-2.707047,8.717393,6.590485,3.328384,2.193554,-5.061983,-3.632078,1.001663,5.752688,0.647583,3.243609,6.979613,5.101709,7.101074,3.175120,7.150333,9.998004,5.955348,-5.087110,-1.242415,-8.831909,-5.186679,-5.761358,1.852072,8.389256,-2.621269,-1.443284,-7.449884,0.018809,9.109184,-6.055868,-1.636207,7.023320,-2.302855,-2.673434,0.854848,5.814117,-0.083377,-8.415911,-5.154465,-1.210795,-2.247983,-2.984064,8.473369,-0.269220,-1.624801,1.979411,-9.743373,-9.392910,-1.891833,3.187152,9.963195,1.757720,-2.185606,-0.150246,-1.528202,4.683520,8.628602,3.672366,1.295728,2.739612,-7.586374,1.053554,-0.077688,-9.673369,-0.587261,-0.690254,-2.211188,3.249605,3.204826,2.819791,3.377034,0.402842,-2.280062,6.368589,-5.708068,-5.305692,2.838655,-1.657651,6.336441,-6.051964,-8.736825,-7.157589,-7.165937,-5.349296,9.411280,3.507378,-6.622812,9.581966,-9.469141,5.112657,0.995134,0.020052,9.405506,-9.540670,-2.928197,-4.691336,-1.125928,-1.834049,3.084555,-6.565368,-8.706351,0.408193,-9.628906,-0.917676,9.054203,-5.316667,4.909855,0.859446,2.861840,3.888980,-0.195760,-9.158357,-9.861966,9.460469,9.311487,-0.050346,-7.597891,5.267104,-0.489078,5.179487,5.036691,5.353689,3.479070,0.743256,-5.136364,0.733933,-6.055175,5.378658,-3.423687,-9.025814,6.329738,4.327164,-3.376528,-8.947042,-0.453501,-5.658570,7.194953,-3.263448,-2.545041,4.193684,5.407660,0.838363,8.761335,-3.780165,-9.085263,8.698372,-5.250007,5.918467,1.681593,0.234794,7.792988,5.056004,5.261045,8.194241,6.640380,9.187235,8.974327,7.184120,7.878731,-5.396677,-6.446970,5.518043,7.917530,-8.823486,9.655882,-9.084824,3.546858,2.344203,-8.029083,0.651323,-1.219122,-7.403954,9.352021,-7.120316,9.119473,-3.094051,-9.980278,-4.710566,-2.850887,5.653631,2.115578,-1.096458,8.699797,2.842329,2.074127,-3.493858,1.268388,7.984921,-8.347376,-2.803924,3.514116,9.565912,-5.833645,4.680009,-4.980163,-2.057876,-4.294844,0.359336,0.605743,8.497693,6.529983,-7.089607,-3.331443,2.888528,6.551232,4.953286,6.345874,-3.515778,-2.489047,-9.200492,-0.359289,-8.949254,-9.920767,3.940990,6.809218,-4.637333,-6.356735,4.663468,-7.232048,6.455510,-5.864714,-5.030790,9.625552,-8.297121,-3.528747,0.096309,8.493529,-3.433736,6.694119,6.416156,-2.281217,2.807328,-5.465962,-5.150214,9.392691,-9.875495,-5.561856,8.868198,-9.729131,1.406994,8.745847,8.242518,8.157610,-2.423391,3.132539,7.827191,4.777953,-4.876728,7.506510,-8.087537,-0.033797,2.452252,-0.945892,4.963113,-0.130553,6.676925,5.592651,-3.830410,-9.037916,3.807707,6.682068,-7.524949,0.424452,-1.948324,1.569970,9.537561,-5.801291,-3.562351,-9.009432,0.057695,-7.214443,-3.445629,9.572237,-9.913553,7.244585,-8.949020,-3.654829,1.918902,7.479627,8.843131,-3.468021,4.644468,6.272251,9.215978,3.784206,-5.503008,-7.578963,5.046533,2.312938,1.417826,4.164130,1.834114,-9.958274,8.916676,9.497268,-7.348149,0.713536,-0.870927,2.718286,-7.851942,-6.434843,7.653717,2.487463,-8.866405,-9.515854,0.472836,7.636017,-9.959899,0.705079,-8.307217,-2.733319,6.092040,-3.070993,-1.577390,0.902151,-0.435758,5.661215,-8.121937,-4.030649,2.402889,3.546927,-3.826457,-9.606146,-1.471650,-1.398958,-5.657545,-0.921549,-6.689413,9.915460,-3.916437,-2.882264,-4.002480,-9.790476,-8.041016,9.056340,-2.462615,8.907453,-9.027807,4.065169,5.666336,8.117850,-4.205910,1.403117,-6.134957,0.079403,-7.595310,0.877735,1.666467,8.800790,-2.773163,1.182316,6.706724,4.690418,-7.878360,7.567441,-3.439578,7.542055,-3.699873,2.392524,7.075712,5.134756,-3.041651,-8.680982,8.782688,-3.567466,5.999461,-7.289788,-1.336287,-4.844800,-8.647287,-2.811703,-5.400702,0.238322,1.573631,3.393129,8.028057,-4.773062,0.935083,4.141018,-0.444292,-1.664049,8.900351,3.879834,-7.339828,1.679005,5.051876,5.071342,7.192629,-7.492878,8.857553,-7.076123,-6.561499,9.990706,6.111108,-8.141051,-7.026655,5.291397,6.371635,1.083917,-1.818170,-7.826352,-2.752973,7.338642,-1.271593,-9.561674,6.124509,-4.880748,7.367418,5.386972,-0.856616,3.163873,-1.790092,3.087059,3.864928,7.851319,6.930531,5.413091,0.298828,2.776580,-2.394677,-1.583259,-7.330309,2.627278,-2.461039,1.408262,8.520948,7.749106,5.242075,6.221555,7.931146,9.593804,8.215319,-9.659801,9.102970,-2.712702,-1.121243,-6.597757,-5.774288,-8.825868,-3.499946,1.145861,-1.862619,-5.380422,2.787392,-1.126786,-2.158743,5.547635,-3.647017,5.709849,-2.847231,8.987122,-9.594216,8.017163,-3.147343,8.200589,6.770383,-1.784846,6.982626,-2.411920,-8.875985,4.258579,-3.916794,-2.930686,-9.984171,-2.470546,-3.634728,2.743250,5.855035,5.856749,9.810540,9.195199,5.428011,-9.205673,-4.093867,-2.031397,-9.833991,1.274003,-3.418629,8.112325,1.248718,9.501369,-8.547617,-9.554803,-2.083304,4.797256,-9.390779,-1.748923,-9.935876,-0.705550,8.544537,8.779902,-2.676853,-9.250141,9.956014,-6.350524,-1.507343,-3.042559,-3.053597,-8.007716,-7.819254,-7.181176,-0.609650,-3.855892,-6.706200,9.763777,7.630035,6.968345,-7.440994,2.667364,5.101388,-2.216874,3.175641,-3.777637,-4.123903,-2.188777,-4.548507,8.334210,-9.162636,0.340339,5.640997,-7.365924,-0.034222,-6.070383,-1.132300,-5.245627,6.844885,3.915576,5.398844,9.715971,-1.030948,-0.399000,-8.236211,-5.573756,2.886896,3.674741,-0.395091,-4.747510,9.031044,7.257934,-6.523876,-2.184074,6.832924,-1.049349,6.123830,-1.148298,-5.289474,2.916449,-1.633122,6.014706,2.671465,-6.123378,-9.452017,-8.657997,-1.331930,0.153219,6.703410,-3.982399,9.809022,4.253501,-8.214421,4.340520,-1.264790,-0.139974,-5.243595,7.336713,-3.451316,8.588094,-7.877748,9.634126,-7.532544,7.908271,-5.561988,-7.944538,-3.886439,-9.329489,8.405963,5.765029,-3.148216,-1.917957,9.406801,7.737763,-3.123543,7.609338,-8.968960,2.245581,8.339818,6.947015,-9.019194,-6.490051,7.248847,-7.565515,-8.943401,6.487444,9.646694,7.778403,2.085603,-2.407029,7.761128,-3.211063,-2.793655,-7.418326,-0.108695,1.706580,1.741162,9.860528,6.278128,6.314638,-7.929839,-2.376484,9.559392,-4.881931,-0.736647,-2.508460,-4.288225,-8.003116,-0.343970,6.564876,-8.583630,8.936548,-7.382366,-3.885549,-8.581927,5.236645,-4.679784,-2.043978,1.226441,-5.099288,-0.042941,6.042047,1.539483,6.520851,8.524700,-2.248602,-2.237324,4.975975,3.693864,-2.235777,-3.848577,-1.644696,4.705963,-3.827145,4.775589,4.828720,3.036089,6.798423,-1.002425,-5.979208,8.570916,4.985440,-3.800109,-9.850434,-8.317925,-4.393799,-7.584939,-2.096937,1.930735,-7.063152,4.229399,-5.569010,-2.559669,-5.352541,2.474275,-8.084866,1.498910,-5.359589,3.547596,3.662515,4.538541,-0.289693,-2.781927,2.893701,7.009994,4.531599,4.987304,2.922140,6.914686,-3.421098,-3.415120,2.957577,-4.452392,9.034760,-1.983337,-4.296727,-3.702185,9.529230,2.138041,4.899359,-7.743607,7.902145,-2.956108,4.890867,-9.450427,-9.636891,2.223273,8.616938,3.289089,3.569314,6.610571,4.190974,-6.414935,5.068293,-1.432529,-5.129366,9.109412,-3.796408,-9.238442,1.123069,-6.974273,6.882143,3.457669,3.830964,1.931002,-5.981719,-4.411856,6.120176,-8.955405,-0.278040,4.871551,3.574682,0.510438,-1.316483,0.867632,-0.658535,-1.316420,2.640367,-1.757793,-8.001486,1.237423,6.148051,6.785885,-1.063070,7.543498,-9.815866,2.644241,2.636388,4.781802,-0.030080,8.864338,-0.375971,-0.355008,9.724644,6.652351,8.330103,-0.695983,-8.382432,9.134704,1.263779,-6.423011,3.667857,9.256666,-6.938489,-6.282313,4.812365,3.071158,5.434522,-1.310378,3.049628,4.580395,-7.302495,9.048443,4.051221,-0.707449,6.901090,-2.760236,-9.186620,6.842731,-1.947429,-2.917633,2.137033,-9.800729,4.546638,5.399167,-9.380394,6.115540,-2.333193,4.835836,0.972491,-3.762167,-6.101578,0.329741,-0.289308,7.400950,4.582432,-2.573876,-0.899417,6.605348,6.339632,-1.509156,7.299729,6.817595,-8.888432,0.842259,-2.178808,-4.197550,-7.210621,3.119081,-3.406694,-1.636544,-1.756984,-6.268536,0.818457,2.085511,-9.676728,-0.040829,9.037585,4.176008,-2.260681,-6.952720,-5.244614,-3.189050,-9.997959,7.318709,-3.588469,-8.173111,-5.455340,2.606066,2.502476,5.509512,-8.686247,7.548668,6.786604,3.948486,-3.124180,-5.658502,-6.908567,9.732359,-2.992504,7.372776,-3.953876,-9.529794,-6.038734,-4.665601,-3.917299,1.050337,3.159313,-0.355136,5.242368,1.519629,5.167078,-5.034151,-3.796542,0.268985,-1.086991,4.063661,-6.874753,-0.509146,-6.090862,-1.325405,-7.578792,6.572603,7.418537,-1.918234,-8.583007,-9.783429,1.198731,0.699045,-9.126316,-5.265531,-4.562830,-4.125861,7.499685,7.294689,3.868309,-0.908729,-3.294953,-5.786024,-9.918110,-5.497292,-8.855259,-4.318482,-3.683802,8.692432,-2.569890,4.540853,3.525104,-2.319734,-1.498929,-7.961138,7.190504,6.292572,4.429894,3.833946,-7.600952,-7.020027,-5.710124,-2.733531,-0.199279,-4.006081,-3.049345,6.680051,8.339911,-2.484034,-1.221600,2.184285,-2.361277,1.060049,-3.389464,5.844648,-4.734597,0.346710,-2.131238,6.979891,0.939783,-2.157901,-3.879940,-3.747026,9.711687,1.251020,6.550940,2.680361,-1.813997,6.302749,-2.011461,0.740370,-0.716528,0.760368,8.876079,-6.728988,-5.023039,-9.544319,-4.205369,-9.065625,3.708068,4.418743,2.821467,-4.034552,6.429420,-6.529225,-6.344191,2.896181,8.318024,-9.240867,6.764954,3.625328,4.171184,-5.866103,-6.279416,3.877843,3.891689,4.847974,7.364420,-8.675445,0.649925,-5.811432,-3.704539,1.267667,9.317958,-0.870638,-1.466719,-0.075956,9.752061,6.664636,-6.019099,-8.842299,-3.210586,-5.180796,6.894134,-2.247075,0.192089,2.969398,-4.055415,6.863985,-4.907645,2.824070,-1.385159,-3.453359,-4.141497,5.079710,-1.592648,-3.771957,9.992981,-5.181720,0.432216,-1.861845,-7.607311,1.191186,-5.074906,-0.266235,-5.142855,0.725141,4.399151,4.935000,5.641403,-9.456645,-7.164673,-6.577860,0.805596,-0.994805,-5.750252,-6.917058,-0.504837,6.278916,-3.613195,6.370886,3.188396,1.737423,-2.031000,7.573364,-1.521880,5.908530,-2.400306,-7.827839,6.012393,8.315761,9.568273,-5.544042,8.001411,-2.864446,2.226653,-5.634046,-9.895618,2.089664,-4.169347,6.692786,5.646664,8.017565,-6.969820,4.986541,8.360373,6.281039,-4.622541,-6.461292,-9.176340,-3.135778,6.126563,-5.867244,-7.019746,-3.864541,-4.428270,0.559077,5.525739,-9.868615,5.293657,7.469463,-0.856265,8.541962,-0.688394,-6.998084,8.971603,-7.527921,5.260131,-6.165634,-7.435800,8.774196,-4.443601,-2.186591,9.080167,-1.789858,8.957604,5.480716,-8.239531,-0.959857,8.124158,0.165262,5.224812,6.359778,0.740166,6.534114,-9.047072,-7.191768,5.253335,-0.502297,1.445554,3.752107,-9.115251,-9.453692,-7.438166,5.153664,7.599158,-5.804533,-5.372651,-3.504269,2.174168,-8.657052,-5.680429,0.968219,9.387947,-5.216934,-8.792515,5.068390,2.503877,7.657271,2.976819,5.213962,-8.127242,7.013635,9.764422,-9.509292,7.184301,-8.519822,3.920925,-8.652369,-2.536852,-6.659653,-8.364293,4.316442,8.298088,5.359383,-7.942898,-0.473755,-6.483048,3.648062,6.937534,1.892680,-2.613138,-3.261834,4.281836,0.529146,7.046702,-0.071483,4.115742,6.121706,-9.804489,4.465947,1.290375,4.829564,-5.226358,4.294314,-7.725285,-1.658843,8.027670,4.490705,1.024077,-5.293114,-8.976007,5.169633,-1.320507,-9.921642,8.998620,4.403180,3.812346,3.331506,-5.485366,4.480004,7.639626,7.258403,-0.382507,5.069013,1.655724,4.845546,-1.988146,-8.115723,0.291412,1.863990,-3.466362,-3.083625,-6.115412,3.258197,-7.020541,2.759868], dtype = "float32")#candidate|2292|(1485,)|const|float32
call_2290 = relay.TupleGetItem(func_1376_call(relay.reshape(var_2291.astype('float64'), [150,]), relay.reshape(const_2292.astype('float32'), [1485,]), ), 3)
call_2293 = relay.TupleGetItem(func_1379_call(relay.reshape(var_2291.astype('float64'), [150,]), relay.reshape(const_2292.astype('float32'), [1485,]), ), 3)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
call_2302 = relay.TupleGetItem(func_461_call(relay.reshape(var_2291.astype('float64'), [15, 1, 10])), 2)
call_2303 = relay.TupleGetItem(func_464_call(relay.reshape(var_2291.astype('float64'), [15, 1, 10])), 2)
bop_2305 = relay.logical_xor(call_2302.astype('int8'), relay.reshape(const_2292.astype('int8'), relay.shape_of(call_2302))) # shape=(1485,)
bop_2308 = relay.logical_xor(call_2303.astype('int8'), relay.reshape(const_2292.astype('int8'), relay.shape_of(call_2303))) # shape=(1485,)
func_1645_call = mod.get_global_var('func_1645')
func_1648_call = mutated_mod.get_global_var('func_1648')
var_2322 = relay.var("var_2322", dtype = "float64", shape = (1540,))#candidate|2322|(1540,)|var|float64
call_2321 = relay.TupleGetItem(func_1645_call(relay.reshape(var_2322.astype('float64'), [1540,])), 2)
call_2323 = relay.TupleGetItem(func_1648_call(relay.reshape(var_2322.astype('float64'), [1540,])), 2)
output = relay.Tuple([call_2288,call_2290,var_2291,bop_2305,call_2321,var_2322,])
output2 = relay.Tuple([call_2289,call_2293,var_2291,bop_2308,call_2323,var_2322,])
func_2328 = relay.Function([var_2291,var_2322,], output)
mod['func_2328'] = func_2328
mod = relay.transform.InferType()(mod)
mutated_mod['func_2328'] = func_2328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mutated_mod.get_global_var('func_2328')
var_2330 = relay.var("var_2330", dtype = "float64", shape = (150,))#candidate|2330|(150,)|var|float64
var_2331 = relay.var("var_2331", dtype = "float64", shape = (1540,))#candidate|2331|(1540,)|var|float64
call_2329 = func_2328_call(var_2330,var_2331,)
output = call_2329
func_2332 = relay.Function([var_2330,var_2331,], output)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_2355 = func_2105_call()
call_2356 = func_2105_call()
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_2357 = relay.TupleGetItem(func_1121_call(), 1)
call_2358 = relay.TupleGetItem(func_1122_call(), 1)
output = relay.Tuple([call_2355,call_2357,])
output2 = relay.Tuple([call_2356,call_2358,])
func_2375 = relay.Function([], output)
mod['func_2375'] = func_2375
mod = relay.transform.InferType()(mod)
mutated_mod['func_2375'] = func_2375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mutated_mod.get_global_var('func_2375')
call_2376 = func_2375_call()
output = call_2376
func_2377 = relay.Function([], output)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2412 = relay.var("var_2412", dtype = "uint8", shape = (13, 2, 16))#candidate|2412|(13, 2, 16)|var|uint8
var_2413 = relay.var("var_2413", dtype = "uint8", shape = (13, 2, 16))#candidate|2413|(13, 2, 16)|var|uint8
bop_2414 = relay.greater_equal(var_2412.astype('bool'), relay.reshape(var_2413.astype('bool'), relay.shape_of(var_2412))) # shape=(13, 2, 16)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_2417 = func_1070_call()
call_2418 = func_1070_call()
uop_2427 = relay.erf(var_2412.astype('float64')) # shape=(13, 2, 16)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_2432 = relay.var("var_2432", dtype = "float64", shape = (1540,))#candidate|2432|(1540,)|var|float64
call_2431 = func_1048_call(relay.reshape(var_2432.astype('float64'), [14, 11, 10]))
call_2433 = func_1048_call(relay.reshape(var_2432.astype('float64'), [14, 11, 10]))
func_362_call = mod.get_global_var('func_362')
func_367_call = mutated_mod.get_global_var('func_367')
const_2441 = relay.const([7,-2,4,1,1,7,4,-5,-2,-4,8,9,7,-4,1,4,5,-8,10,-6,9,-6,-9,9,-8,10,-4,-3,2,-8,3,10,-10,8,10,-2,9,-3,9,-2,2,10,-4,8,2,-9,-2,6,7,-3,-10,-7,2,-9,-1,-7,-4,10,-2,4,-6,3,-9,-9,3,-5,-6,-3,-2,9,-5,8,-5,-7,-7,-3,3,-9,4,-1,10,1,-10,-4,7,8,2,-1,-4,-4,-9,-4,-4,7,2,5,5,10,10,-8,9,-1,3,8,10,8,10,2,-6,-1,6,-2,4,6,8,-3,9,-10,5,10,1,-5,-2,4,-5,-8,-1,-1,4,10,-9,-1,-8,3,-8,-9,4,9,-8,-6,7,3,6,-2,-9,-6,-7,1,9,-9,8,5,1,-8,8,3,7,1,9,-4,8,-7,7,2,-3,-3,10,-2,6,1,3,-7,-7,-2,4,5,7,8,-1,2,-3,4,4,6,6,-4,-9,-9,-1,-5,10,8,-5,3,-9,9,-1,7,8,7,-1,5,2,-10,-7,-8,6,-4,2,-6,-2,3,9,9,3,3,7,-6,2,-1,-1,-5,5,-8,9,-6,-1,6,-8,7,-3,7,-8,10,-9,10,10,-8,9,1,-10,-10,-7,10,3,9,8,7,-1,8,8,1,-7,2,-5,-3,2,-7,-2,-4,-4,3,3,8,7,-5,3,-10,2,-6,6,1,7,-7,-5,-5,6,-1,-10,-2,-4,-9,-10,9,2,1,9,6,-10,-4,-3,-5,9,-7,-4,5,7,-7,2,1,3,3,-3,-7,-3,-9,-2,-7,-2,-1,7,-6,-9,-1,9,8,-3,-4,-2,-1,-2,3,-7,-6,-7,7,4,-8,8,-5,-3,-1,-3,-5,5,-2,-8,-2,5,6,-8,8,8,-4,-7,-3,1,-7,8,9,-9,10,-6,-4,4,-7,-5,-2,-2,9,-5,-10,-4,-1,10,-6,3,-8,-2,-1,4,-7,-2,-2,-7,-4,3,1,10,2,5,10,-5,6,1,-2,-7,4,9,-4,6,1,1,-7,-5,10,6,-8,10,-6,5,-6,8,10,5,-6,-3,8,-10,-4,3,-4,5,10,10,-6,6,5,-1,5,-10,-7,-9,-6,2,-3,3,-4,3,-4,1,-6,-2,-3,8,9,9,3,-10,5,9,9,-7,-2,8,-3,-6,6,-10,10,-4,-5,6,-9,7,10,-5,-7,1,-5,5,-8,5,-8,-10,2,-9,7,5,2,3,7,1,2,-5,-1,-3,3,2,4,10,-9,2,-4,5,8,-8,-8,3,10,-5,10,1,-7,-3,-8,6,3,3,-7,-5,-6,2,-3,4,-2,-8,8,-4,-4,-5,-1,10,-10,-3,-3,2,5,-5,-8,4,7,-10,1,9,2,-10,8,-9,6,7,-4,1,4,8,3,4,3,-7,8,2,2,5,3,-10,7,6,-6,-9,-3,4,8,-7,2,3,-10,3,6,-3,1,-8,1,-10,-1,9,5,-1,3,-3,-10,8,3,3,7,-8,7,7,-10,-7,7,6,-3,-4,-2,3,5,-3,1,8,10,-6,-2,9,1,4,3,-9,-6,3,10,-2,-7,3,-9,-6,5,-7,7,10,1,-6,-3,-1,8,4,1,-2,1,6,4,-10,-6,-7,-5,2,10,-2,-1,-9,8,6,1,8,5,1,-8,10,10,-8,6,-10,-6,-9,-5,5,-2,-3,-8,5,4,5,-7,-5,-4,-9,-3,-9,1,-5,4,10,-8,1,3,-1,9,9,3,-2,-9,9,2,-8,-4,1,-10,6,-3,7,-2,-1,6,-9,-5,6,-4,3,-1,-10,3,-4,4,4,8,3,10,1,5,-3,-10,4,1,3,10,8,-7,-10,-4,-8,4,10,-7,-9,10,-3,-10,8,8,-5,5,4,8,2,-6,4,-4,-3,-7,3,4,-2,5,-8,-9,1,-6,5,9,-8,10,5,6,4,10,-1,-5,9,-2,5,9,7,-3,1,-2,6,-9,-7,-9,-8,-8,1,5,5,6,9,6,-1,8,10,1,1,7,6,-9,-4,7,-2,7,10,-7,-9,4,-3,-3,2,1,5,3,5,-10,-3,-6,1,-2,7,9,6,5,6,4,-4,-3,-4,-4,10,-10,3,8,7,5,3,9,7,-7,-6,3,8,10,-2,-1,-10,-5,-6,7,5,9,-7,-7,6,9,7,-1,8,6,-6,2,7,9,2,-9,9,7,8,-2,10,-4,5,-1,-7,-3,-4,-8,-2,-6,-2,-3,5,-9,-4,5,6,8,-5,4,-5,-4,2,4,1,-10,7,6,-3,-2,9,8,7,5,-8,5,-6,4,2,-1,8,-8,3,6,2,-3,-7,4,-1,-7,10,10,-2,-1,2,9], dtype = "int8")#candidate|2441|(900,)|const|int8
var_2442 = relay.var("var_2442", dtype = "float32", shape = (1485,))#candidate|2442|(1485,)|var|float32
call_2440 = relay.TupleGetItem(func_362_call(relay.reshape(const_2441.astype('int8'), [15, 6, 10]), relay.reshape(const_2441.astype('int8'), [15, 6, 10]), relay.reshape(var_2442.astype('float32'), [1485,]), ), 1)
call_2443 = relay.TupleGetItem(func_367_call(relay.reshape(const_2441.astype('int8'), [15, 6, 10]), relay.reshape(const_2441.astype('int8'), [15, 6, 10]), relay.reshape(var_2442.astype('float32'), [1485,]), ), 1)
output = relay.Tuple([bop_2414,call_2417,uop_2427,call_2431,var_2432,call_2440,const_2441,var_2442,])
output2 = relay.Tuple([bop_2414,call_2418,uop_2427,call_2433,var_2432,call_2443,const_2441,var_2442,])
func_2464 = relay.Function([var_2412,var_2413,var_2432,var_2442,], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mutated_mod.get_global_var('func_2464')
var_2466 = relay.var("var_2466", dtype = "uint8", shape = (13, 2, 16))#candidate|2466|(13, 2, 16)|var|uint8
var_2467 = relay.var("var_2467", dtype = "uint8", shape = (13, 2, 16))#candidate|2467|(13, 2, 16)|var|uint8
var_2468 = relay.var("var_2468", dtype = "float64", shape = (1540,))#candidate|2468|(1540,)|var|float64
var_2469 = relay.var("var_2469", dtype = "float32", shape = (1485,))#candidate|2469|(1485,)|var|float32
call_2465 = func_2464_call(var_2466,var_2467,var_2468,var_2469,)
output = call_2465
func_2470 = relay.Function([var_2466,var_2467,var_2468,var_2469,], output)
mutated_mod['func_2470'] = func_2470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2560 = func_1690_call()
call_2561 = func_1690_call()
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2565 = func_1690_call()
call_2566 = func_1690_call()
output = relay.Tuple([call_2560,call_2565,])
output2 = relay.Tuple([call_2561,call_2566,])
func_2579 = relay.Function([], output)
mod['func_2579'] = func_2579
mod = relay.transform.InferType()(mod)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mutated_mod.get_global_var('func_2579')
call_2580 = func_2579_call()
output = call_2580
func_2581 = relay.Function([], output)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_2702 = relay.TupleGetItem(func_1564_call(), 1)
call_2703 = relay.TupleGetItem(func_1566_call(), 1)
func_1376_call = mod.get_global_var('func_1376')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_2708 = relay.var("var_2708", dtype = "float64", shape = (150,))#candidate|2708|(150,)|var|float64
var_2709 = relay.var("var_2709", dtype = "float32", shape = (1485,))#candidate|2709|(1485,)|var|float32
call_2707 = relay.TupleGetItem(func_1376_call(relay.reshape(var_2708.astype('float64'), [150,]), relay.reshape(var_2709.astype('float32'), [1485,]), ), 2)
call_2710 = relay.TupleGetItem(func_1379_call(relay.reshape(var_2708.astype('float64'), [150,]), relay.reshape(var_2709.astype('float32'), [1485,]), ), 2)
uop_2712 = relay.log2(call_2707.astype('float32')) # shape=(1485,)
uop_2714 = relay.log2(call_2710.astype('float32')) # shape=(1485,)
output = relay.Tuple([call_2702,var_2708,var_2709,uop_2712,])
output2 = relay.Tuple([call_2703,var_2708,var_2709,uop_2714,])
func_2715 = relay.Function([var_2708,var_2709,], output)
mod['func_2715'] = func_2715
mod = relay.transform.InferType()(mod)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mutated_mod.get_global_var('func_2715')
var_2717 = relay.var("var_2717", dtype = "float64", shape = (150,))#candidate|2717|(150,)|var|float64
var_2718 = relay.var("var_2718", dtype = "float32", shape = (1485,))#candidate|2718|(1485,)|var|float32
call_2716 = func_2715_call(var_2717,var_2718,)
output = call_2716
func_2719 = relay.Function([var_2717,var_2718,], output)
mutated_mod['func_2719'] = func_2719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2727 = func_1690_call()
call_2728 = func_1690_call()
output = call_2727
output2 = call_2728
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
output = func_2758()
func_2759 = relay.Function([], output)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_2762 = relay.TupleGetItem(func_1564_call(), 0)
call_2763 = relay.TupleGetItem(func_1566_call(), 0)
var_2764 = relay.var("var_2764", dtype = "float32", shape = (360,))#candidate|2764|(360,)|var|float32
bop_2765 = relay.bitwise_xor(call_2762.astype('uint32'), relay.reshape(var_2764.astype('uint32'), relay.shape_of(call_2762))) # shape=(360,)
bop_2768 = relay.bitwise_xor(call_2763.astype('uint32'), relay.reshape(var_2764.astype('uint32'), relay.shape_of(call_2763))) # shape=(360,)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_2773 = func_1171_call()
call_2774 = func_1171_call()
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
const_2781 = relay.const([0.693945,-7.179503,-1.970566,5.202908,-2.997418,-8.535244,7.471522,-7.815248,-0.392775,-2.137985,-4.164351,1.292784,-9.403774,-0.289080,-1.394475,9.951245,-3.795824,3.057083,-6.517838,7.551202,7.048190,-5.343192,3.233110,4.551501,-7.129929,-3.746845,-5.603779,-0.177638,-1.106298,-2.685169,-1.048987,6.596004,1.907561,1.675225,2.322126,7.887396,-4.373362,8.962448,-8.281314,7.625772,5.848018,4.235876,-2.570545,-6.888460,-1.036009,8.446434,-6.453238,3.119582,-8.726675,8.288954,3.090693,-0.386217,2.279200,-0.355380,-8.737852,-8.176318,1.653225,8.746488,2.321889,2.427283,-5.438290,-9.118714,6.393843,8.934097,7.174516,1.271804,8.437881,-7.715496,-6.993206,-4.049985,0.389692,-4.231261,-3.176277,-2.542917,4.730624,9.614681,-1.327945,3.344280,0.226837,5.528475,3.251047,-5.113336,4.722011,1.599914,6.992982,-2.772022,-7.304824,1.217212,8.497074,-3.797819,4.327512,-8.887590,-1.671542,0.915338,-5.750346,-4.917112,-8.453080,-6.411560,5.940926,6.594243,7.120185,5.384884,-2.523540,-8.521084,-2.784366,-0.192785,-0.936191,-4.639284,-8.638706,3.772762,-6.136095,1.129156,-7.901320,-1.906339,5.442835,-1.211933,-5.413892,9.595779,-0.568123,-9.254158,-5.237530,0.636309,0.384632,7.233118,7.432336,6.039773,-9.519208,-2.666071,-0.221152,5.645400,-9.662649,0.195336,2.337792,2.243998,-8.879649,8.323773,9.780429,-2.032947,-2.932921,-9.105472,-8.312456,7.126168,-2.721379,9.559764,6.107230,9.416752,-9.631995,-3.130303,7.766104,9.453687,6.437480,-0.982731,7.544224,5.829638,7.973707,-5.784993,1.795610,-8.307524,0.566584,9.354138,-3.323911,3.879556,2.901627,5.368995,1.185621,-6.950037,4.469071,3.669450,0.190791,-4.893597,5.606583,-3.678976,-0.131431,-7.624023,-1.799268,-2.405468,-7.394740,3.537359,6.275200,-1.382142,-6.469624,6.964988,-3.525117,-5.849233,-0.036332,-9.353209,4.689938,-4.116999,6.718274,-8.335649,-4.981311,5.010918,-5.918282,-7.563389,1.928543,-0.427403,-0.792197,6.372722,1.288785,-4.921310,-0.336168,0.209813,-8.320936,9.055344,-5.766643,5.670774,6.981876,-9.134136,-2.097847,5.237877,2.188226,4.478613,-2.674163,-1.028476,-9.074472,3.158102,0.663916,9.393292,-4.085815,-8.597039,-0.160838,-0.550113,-2.790751,3.998708,0.470348,-6.035717,-7.766509,-2.849070,-8.590716,-4.892224,-1.782679,9.616650,-6.860860,2.458164,2.696478,-5.260629,6.605491,9.342312,4.746102,-6.043845,-2.145642,7.753937,-3.721136,6.145446,8.317546,-6.646317,7.436474,4.779898,-7.076363,-1.686625,-6.059218,7.398621,5.375814,7.474494,5.607022,-8.896685,-6.977233,-3.387936,2.837785,7.102241,-7.491257,-3.426724,0.477935,5.200985,-8.301565,-1.307581,-5.856921,6.971986,-0.912456,-7.145230,-8.574168,7.365350,9.334961,-4.105445,3.120980,1.782748,5.136525,6.659944,4.485046,-2.750856,8.372490,7.207804,-2.708837,7.494516,1.186162,-8.336482,-6.329952,3.941221,0.922076,0.784356,3.297439,-3.772937,-9.011861,-2.370058,5.390885,-0.010046,6.264431,-3.590262,-4.384238,-6.067525,-6.271367,4.648341,4.388679,-1.240955,-5.787015,8.197700,-1.294045,-6.803208,-2.491701,-4.722633,7.943899,-5.381965,-9.129846,-8.609658,-4.418160,5.973135,1.260193,-5.441210,8.703126,-0.288152,-8.727956,2.582367,3.254346,7.176096,-3.323696,3.540414,-1.628993,-0.324426,4.187218,4.173336,-3.637009,-6.786203,-7.543696,-9.872449,9.546937,5.416791,-0.579361,-0.232719,1.228166,7.800194,0.569418,6.468130,-8.017387,2.444495,1.237406,-9.817965,3.811850,6.475823,8.284280,2.642136,-4.425415,-7.751789,1.566716,7.533649,-4.612481,8.779613,1.535277,-0.531272,-4.409782,4.450364,-6.354845,4.789491,-3.740727,6.626739,-1.161713,-0.133524,-8.249648,-7.336469,6.644915,-7.752158,-4.422038,-2.227501,-9.444307,-9.720584,-8.382026,-5.339359,2.844612,-9.753348,7.579096,5.287192,-6.123726,-7.578196,-2.232608,-1.322676,-0.813649,1.410023,-9.554896,7.104079,-2.154056,-2.014188,1.246295,-9.996839,-6.762793,7.213057,-7.932668,-0.587019,-4.254926,8.895709,8.732122,8.005701,-8.858035,-5.058671,-9.624120,-6.506356,2.508204,3.095239,1.644416,0.259635,-0.042940,8.708039,8.053493,1.067102,9.674899,-3.911488,-2.970539,-5.741316,4.626147,-2.086074,-1.034600,-7.119349,5.454020,6.274251,2.914506,-6.950177,9.063326,7.701348,2.551929,-7.981443,8.894273,1.352749,-8.060958,7.510412,1.450779,7.104573,-8.037489,4.058241,9.318262,-2.125982,-3.360183,-9.070795,4.968506,-7.532349,-6.250838,3.524959,-8.975785,-5.493896,-9.059206,-5.494450,3.515143,-1.971442,3.633830,2.631332,-1.699443,-0.198903,-6.704256,-4.305514,-3.488320,2.562868,7.557437,-1.176209,6.209010,2.563544,-8.306964,6.981927,7.166187,9.531429,-3.732693,-2.678334,2.539212,0.568345,9.950180,9.438429,-5.950874,9.626141,3.926056,8.191719,-2.205214,-3.745966,-1.318704,-8.448723,1.653171,3.101725,-4.543450,-3.039826,-2.615159,6.777367,6.588898,9.475535,4.663704,-4.670484,-0.415667,-8.543633,-3.097718,-7.551561,-3.502871,-4.440162,-6.232085,6.299372,5.911341,-2.739657,9.253385,-6.846590,-4.065324,6.719555,-4.212796,-4.099585,3.296475,2.709259,-1.569412,5.773635,-1.607047,-1.683966,4.325614,1.699823,-4.590025,-3.863634,9.551806,-8.985496,-1.744409,-8.400375,2.522899,4.340371,9.428158,-2.061795,-1.741098,-4.221411,-9.349560,-1.243368,0.114081,-4.461626,2.882482,5.695325,3.433554,5.886918,3.695816,-4.598933,-7.918495,-8.922182,-9.195300,3.606915,-9.792717,5.106130,8.510934,-8.519694,0.927821,-0.586819,8.646877,-4.198657,2.025576,-6.046927,6.364595,-7.590731,-6.062636,7.393800,8.809132,-3.024469,-2.622717,-9.629999,4.332634,-0.822383,-6.130109,8.987151,4.720938,-7.397334,2.414492,6.306116,-7.526762,6.023456,-3.735184,2.811486,5.644747,2.339634,-8.187632,3.046102,-7.932152,-2.016574,-5.810760,-2.468968,9.600240,6.158491,7.832809,1.883701,-4.931051,7.470865,1.369624,-8.939982,-1.224076,5.074524,-2.196721,-8.478017,-8.911771,3.813686,-3.851477,-5.602837,-0.392502,2.758886,2.510419,3.686856,6.235333,-1.006712,-0.347540,4.804175,7.393969,7.692987,-3.827427,-9.884069,-6.707121,5.594301,-5.406927,4.126461,2.272189,-9.177048,7.709151,-5.845133,-5.200064,-1.648481,-0.380671,1.828741,-5.410999,1.722260,-8.510896,5.823707,9.243677,-1.210624,8.732668,-7.187353,-9.778671,5.773996,5.362129,-1.538896,-1.565173,-8.628965,-6.302226,-0.865021,-5.300178,2.927202,-7.880473,5.599601,-5.029273,1.500719,7.597938,-3.523219,-7.703728,-8.998130,-8.134866,-6.062948,0.952555,8.347838,-9.338303,-2.683878,9.617365,-3.554868,-8.293462,7.994472,0.276095,-6.694124,-5.608659,-3.557150,-9.472119,-2.645677,7.063995,-3.176744,8.989184,-5.645107,8.920399,-3.413472,9.878151,-7.748592,7.687899,-5.545081,-9.451622,0.446917,0.548208,-4.387904,-8.687704,-9.831187,0.492892,-5.779413,-7.441259,-2.275666,2.691442,-1.669037,2.028296,3.972239,-3.859464,3.754889,-6.954824,-0.028091,-3.014136,-2.012586,8.461672,-7.504018,5.279161,-6.043897,-8.942888,7.248743,6.747431,-8.212758,2.956173,5.733620,9.848933,-1.631578,-6.870190,4.306690,8.767972,5.509086,6.798068,1.414319,7.676025,-3.082523,0.884610,6.389083,-5.139275,9.945386,5.236168,7.751697,-2.621271,4.556703,-7.436518,5.319278,-7.605556,8.883361,4.280501,-0.505389,-8.825918,-4.289699,-5.071333,-8.065643,4.304758,-7.643459,8.907684,2.677020,-8.497966,-8.975479,3.337647,-7.630687,-4.145814,8.895313,9.866878,-0.759216,7.459444,6.147932,5.196489,-7.316395,3.171331,8.327210,-5.778559,-6.784378,6.866344,-8.729565,9.682754,-6.927202,-2.495592,9.782844,9.775419,1.891623,-8.709298,8.589806,-9.773582,-3.573770,-0.207696,-7.432987,-7.269619,2.810714,2.420962,-1.507793,1.475153,4.708479,4.059239,4.395819,-1.200928,6.236871,9.435441,-5.146101,-2.579273,6.566767,0.749404,5.434821,3.155003,0.100948,-5.536320,9.055302,1.421940,4.454809,7.061117,6.056197,6.589273,-3.595528,0.343464,1.965344,4.805621,3.209587,-9.532679,-3.186565,0.869666,2.471125,7.140656,6.637469,6.443481,1.634823,5.476345,-6.966733,9.970533,6.860184,-1.752128,-8.762480,-6.351497,-7.990873,8.590600,-1.361295,-7.677719,-3.484183,-8.279179,-2.644159,1.737882,-9.259744,1.523695,1.831766,4.414714,9.697996,0.448440,0.227924,1.607451,6.914151,-9.038814,-7.019493,8.061182,-8.302290,-0.899721,6.484097,5.994692,3.478531,-5.704872,4.151799,0.081615,0.907609,7.565725,-6.296369,-7.217692,5.649979,6.730708,-1.818212,-0.816327,-0.627331,0.429064,-6.423204,2.653893,6.864948,9.232080,0.885481,-8.581940,0.694710,1.180326,-8.548072,8.201201,-3.388393,1.284813,2.934319,-9.211072,6.970480,4.868532,-2.571874,0.448847,0.391398,-4.640195,2.570264,5.576360,-8.900758,7.506774,9.553714,-5.424807,5.404476,-4.012221,-1.627820,8.288986,-1.929892,5.552231,0.950576,5.146591,8.289000,-9.757125,-8.175942,-6.639680,-5.559503,5.244790,-9.684178,-7.008149,-8.450840,2.418408,3.943402,-9.176114,0.476527,-3.867222,-0.435518,4.721545,3.454081,-8.694010,-6.903197,6.417097,-8.743987,-5.476380,-6.650911,6.142518,4.186093,4.883228,7.697691,-8.239906,-0.435301,3.889675,-1.745439,-0.734907,-1.023139,5.039195,1.591273,-3.887692,-6.163623,3.700036,1.591853,7.858956,2.153613,2.910529,-3.930531,2.343401,-1.559612,9.495476,-5.564867,-0.919386,-7.431346,1.787965,-8.212500,-8.999836,-9.653515,-7.377453,-4.664315,-4.453865,-7.005198,-4.982053,5.681412,6.046101,-6.843732,9.288805,1.756203,-7.843086,6.982392,1.375589,8.891255,-6.558852,0.680836,4.259822,-5.593107,8.116101,5.386378,6.604484,-5.729861,-1.547124,8.669839,5.605140,0.296834,3.238436,5.651312,6.116302,-3.601861,-8.898402,-8.947839,3.628231,1.181954,4.587130,-3.909111,7.320338,-6.476678,6.271585,3.370614,-8.188553,-4.156276,-0.674299,-6.574955,-5.012385,2.664927,4.355810,-7.229859,3.364922,7.148317,-1.234559,1.838472,-0.545164,6.086561,-8.153602,-6.453477,-9.102349,-6.314405,-8.535719,-7.927562,8.529050,5.127306,8.393393,6.184473,6.269343,0.315331,-5.710130,-5.747991,-0.507052,-1.417344,-9.431788,7.331909,-9.398375,6.851001,6.408108,7.725795,-8.327919,0.268949,8.643773,-7.246799,8.504125,-8.991703,-8.397984,9.547911,0.461231,7.020679,-5.566300,-6.911665,-2.921324,-7.175903,4.585997,-3.640371,-4.314794,4.257566,-7.040450,2.201208,7.203719,2.817448,-6.285777,5.644768,2.296054,2.325242,1.860199,-9.972828,-5.989779,6.989733,-6.830362,8.108900,2.017192,-0.779917,-7.242422,-4.098536,-6.147187,6.245531,-2.964870,-4.097314,-6.457749,3.750671,5.397018,2.715607,-0.572372,5.459646,5.367033,-1.745376,5.254693,-7.181568,-5.303548,4.079860,2.135917,9.110790,0.512680,0.124138,9.370476,-3.634730,-0.074942,-6.994947,-3.646109,5.475378,-8.301189,9.769846,8.539803,1.051031,-4.977121,-7.580151,-0.112128,2.916641,1.261574,1.264005,4.923821,2.371003,3.910824,5.796552,1.939216,8.500330,-4.069551,8.996924,9.651643,7.459614,8.149136,9.952440,4.984270,-4.261907,5.509845,9.053803,3.104401,-4.425453,8.503332,-3.500472,-0.527608,-9.962237,-7.499072,-5.347756,6.163420,9.638804,7.510756,-0.029637,8.764747,5.306670,-1.516473,-2.643915,7.872273,-8.380594,-8.703199,0.057812,4.615438,5.924892,9.634814,2.898936,4.863615,-1.520561,2.717558,9.477791,4.885899,7.586607,7.650140,4.124499,-1.875301,3.264514,-1.105259,4.494086,1.258545,-4.972233,9.280567,9.324098,-8.077686,5.918323,-5.712210,9.463752,-3.702800,9.743700,-3.755756,-0.822457,-3.353774,8.460705,6.847054,-7.378662,5.147793,5.301268,-6.197794,8.484143,-1.500287,-9.970287,0.312433,-5.084053,-1.884964,0.515729,-3.053844,7.888031,-1.211648,-4.426659,-9.856947,-8.082158,9.151151,-3.111970,-0.217901,-1.988063,-9.854388,0.025076,-1.261244,8.655420,9.941031,3.755689,0.151993,-6.779253,4.797952,1.412386,-5.060778,6.610186,2.200029,4.873367,0.597041,6.401206,3.412623,4.388847,-7.470489,-1.772475,-1.553251,-8.668244,9.712963,4.890393,0.230925,-6.136056,-2.503828,6.994804,5.050806,1.241979,-7.962528,-8.330476,1.347919,-6.235746,6.466656,6.531657,-4.066905,3.918316,-6.731189,1.253376,0.806755,8.993896,1.447070,8.549145,-2.192039,-9.139458,0.832890,-7.328295,-4.606411,6.622602,2.967349,1.930721,-6.478744,5.272858,8.641430,-2.096075,-4.026325,-5.950016,-1.686390,-6.320874,-2.306612,3.174334,-0.129041,-5.260951,-5.927755,-2.170693,-6.326671,-3.192272,-0.602948,-6.798574,-5.050829,-7.426462,-8.160532,-4.986235,-9.512474,0.637407,3.627548,3.324769,-8.048341,9.229531,4.433233,8.661232,6.773747,-1.064214,6.712592,-8.220560,6.232788,3.222643,5.588175,-0.096093,-4.660078,3.615664,-4.018239,0.249060,-8.575227,-9.846698,-5.711367,-2.147090,1.282681,1.535093,3.763798,-9.554634,-1.350614,-6.217501,2.295865,-1.108090,2.310844,-8.534268,-5.836556,-8.651642,-7.042528,-8.865633,-4.751805,-1.127289,3.046405,7.603259,0.441998,6.143022,0.996826,-4.708882,-0.983857,-9.130210,-1.266921,5.255744,6.129665,4.028368,-1.923991,-1.872375,-0.898086,-7.983323,0.408650,-9.875834,6.044613,-4.306850,-3.202993,-1.574755,5.515256,-2.298087,9.930562,-3.322454,9.758275,-6.444944,8.844511,7.991758,4.438377,9.655864,2.805168,-9.096081,4.283580,7.734851,1.000004,-4.236885,-1.210410,-7.486170,1.104727,-2.934703,-8.365539,-0.632405,-5.073427,-9.088211,-0.702050,-5.721008,1.861321,-8.922618,4.758206,-8.261521,6.338896,-8.856705,4.915476,2.880264,4.838117,-1.566140,-8.029876,-4.467570,-7.540937,7.731206,-6.433334,-9.591332,-1.449795,1.206213,-0.014265,-0.538611,-3.471847,4.964672,1.546888,-8.651921,6.086452,-5.842533,-9.210845,-1.941144,8.744184,1.981797,7.042403,-3.723514,-9.792375,0.850727,6.578281,1.186959,-8.078950,-4.102441,6.193629,4.297497,3.691108,5.146263,-2.456512,-2.608492,7.855798,3.592740,8.515672,-1.060479,7.127117,-3.085173,0.291679,3.242665,-3.843292,1.176253,-2.544623,-5.593767,-6.465403,3.133607,3.325097,8.952525,5.830337,5.626747,-9.483874,5.242404,-5.373486,-5.552370,2.684417,9.835081,7.897801,4.904642,3.671786,0.625709,6.425023,-9.333768,-2.799177,3.423045,1.585297,-0.710123,-5.877402,0.515409,9.174339,-3.078432,1.373474,3.043304,-3.676642,5.580477,-8.029485,-7.068780,7.314839,4.036288,-8.177350,-9.135087,7.837459,7.869016,-2.451761,-4.552131,-2.336870,-6.695648,2.208622,5.800577,-6.072109,2.045316,2.721066,3.566578,2.008130,8.457741,6.335139,6.402573,-1.388294,9.015858,4.078291,0.047394,-5.104776,-8.160892,9.193128,-5.897978,-9.248597,-2.407204,0.575318,-8.403669,-9.835196,-4.254846,8.248932,6.516802,-9.916206,-7.372165,-8.265325,6.187209,4.198122,-7.243095,7.840454,3.762564,1.152460,-3.849729,2.898180,3.467133,-2.277544,6.567894,9.528803,1.192040,2.457995,3.968345,8.399065,7.739746,-5.411166,6.939889,-4.816679,8.195530,1.270931,-7.668316,6.244854,-6.917914,7.375384,3.539793,-6.872523,-7.024623,0.636716,-4.171478,-1.590121,5.287366,4.301159,1.166743,1.525897,6.027020,-7.418255,2.994267,6.010662,8.613815,-4.463103,1.440438,5.639414,-2.444715,-8.555458,-5.425626,-0.101818,0.663369,-9.727396,4.957037,-5.709164,-9.459347,-0.772570,-6.917822,-8.027482,-0.180984,-7.536679,1.335162,0.801400,-7.335327,-4.139070,2.671784,1.450625,8.468651,5.952804,4.891666,3.261056,-5.279515,-4.880494,-2.054533,-0.594926,4.610475,-2.388401,-7.673614,-2.219548,8.195564,7.100606,-3.832978,-7.829253,5.333823,-8.193882,6.604668], dtype = "float64")#candidate|2781|(1540,)|const|float64
call_2780 = func_1048_call(relay.reshape(const_2781.astype('float64'), [14, 11, 10]))
call_2782 = func_1048_call(relay.reshape(const_2781.astype('float64'), [14, 11, 10]))
output = relay.Tuple([bop_2765,call_2773,call_2780,const_2781,])
output2 = relay.Tuple([bop_2768,call_2774,call_2782,const_2781,])
func_2783 = relay.Function([var_2764,], output)
mod['func_2783'] = func_2783
mod = relay.transform.InferType()(mod)
var_2784 = relay.var("var_2784", dtype = "float32", shape = (360,))#candidate|2784|(360,)|var|float32
output = func_2783(var_2784)
func_2785 = relay.Function([var_2784], output)
mutated_mod['func_2785'] = func_2785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_2816 = func_2105_call()
call_2817 = func_2105_call()
output = relay.Tuple([call_2816,])
output2 = relay.Tuple([call_2817,])
func_2818 = relay.Function([], output)
mod['func_2818'] = func_2818
mod = relay.transform.InferType()(mod)
mutated_mod['func_2818'] = func_2818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2818_call = mutated_mod.get_global_var('func_2818')
call_2819 = func_2818_call()
output = call_2819
func_2820 = relay.Function([], output)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2823 = relay.var("var_2823", dtype = "float64", shape = (16, 13, 6))#candidate|2823|(16, 13, 6)|var|float64
uop_2824 = relay.exp(var_2823.astype('float64')) # shape=(16, 13, 6)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_2837 = func_1675_call()
call_2838 = func_1675_call()
output = relay.Tuple([uop_2824,call_2837,])
output2 = relay.Tuple([uop_2824,call_2838,])
func_2841 = relay.Function([var_2823,], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2842 = relay.var("var_2842", dtype = "float64", shape = (16, 13, 6))#candidate|2842|(16, 13, 6)|var|float64
func_2841_call = mutated_mod.get_global_var('func_2841')
call_2843 = func_2841_call(var_2842)
output = call_2843
func_2844 = relay.Function([var_2842], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mod.get_global_var('func_2579')
func_2581_call = mutated_mod.get_global_var('func_2581')
call_2857 = relay.TupleGetItem(func_2579_call(), 0)
call_2858 = relay.TupleGetItem(func_2581_call(), 0)
output = call_2857
output2 = call_2858
func_2882 = relay.Function([], output)
mod['func_2882'] = func_2882
mod = relay.transform.InferType()(mod)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mutated_mod.get_global_var('func_2882')
call_2883 = func_2882_call()
output = call_2883
func_2884 = relay.Function([], output)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_2946 = relay.TupleGetItem(func_897_call(), 1)
call_2947 = relay.TupleGetItem(func_899_call(), 1)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
var_2968 = relay.var("var_2968", dtype = "float32", shape = (1485,))#candidate|2968|(1485,)|var|float32
call_2967 = func_167_call(relay.reshape(var_2968.astype('float32'), [9, 15, 11]))
call_2969 = func_167_call(relay.reshape(var_2968.astype('float32'), [9, 15, 11]))
output = relay.Tuple([call_2946,call_2967,var_2968,])
output2 = relay.Tuple([call_2947,call_2969,var_2968,])
func_2974 = relay.Function([var_2968,], output)
mod['func_2974'] = func_2974
mod = relay.transform.InferType()(mod)
mutated_mod['func_2974'] = func_2974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2975 = relay.var("var_2975", dtype = "float32", shape = (1485,))#candidate|2975|(1485,)|var|float32
func_2974_call = mutated_mod.get_global_var('func_2974')
call_2976 = func_2974_call(var_2975)
output = call_2976
func_2977 = relay.Function([var_2975], output)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mod.get_global_var('func_2579')
func_2581_call = mutated_mod.get_global_var('func_2581')
call_2979 = relay.TupleGetItem(func_2579_call(), 0)
call_2980 = relay.TupleGetItem(func_2581_call(), 0)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_2992 = func_1070_call()
call_2993 = func_1070_call()
var_3028 = relay.var("var_3028", dtype = "float32", shape = (360,))#candidate|3028|(360,)|var|float32
bop_3029 = relay.divide(call_2979.astype('float32'), relay.reshape(var_3028.astype('float32'), relay.shape_of(call_2979))) # shape=(360,)
bop_3032 = relay.divide(call_2980.astype('float32'), relay.reshape(var_3028.astype('float32'), relay.shape_of(call_2980))) # shape=(360,)
output = relay.Tuple([call_2992,bop_3029,])
output2 = relay.Tuple([call_2993,bop_3032,])
func_3036 = relay.Function([var_3028,], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
mutated_mod['func_3036'] = func_3036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3037 = relay.var("var_3037", dtype = "float32", shape = (360,))#candidate|3037|(360,)|var|float32
func_3036_call = mutated_mod.get_global_var('func_3036')
call_3038 = func_3036_call(var_3037)
output = call_3038
func_3039 = relay.Function([var_3037], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_3056 = func_1171_call()
call_3057 = func_1171_call()
output = call_3056
output2 = call_3057
func_3096 = relay.Function([], output)
mod['func_3096'] = func_3096
mod = relay.transform.InferType()(mod)
output = func_3096()
func_3097 = relay.Function([], output)
mutated_mod['func_3097'] = func_3097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_3112 = func_1171_call()
call_3113 = func_1171_call()
output = relay.Tuple([call_3112,])
output2 = relay.Tuple([call_3113,])
func_3115 = relay.Function([], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
output = func_3115()
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_3136 = func_1690_call()
call_3137 = func_1690_call()
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_3150 = relay.var("var_3150", dtype = "float64", shape = (1540,))#candidate|3150|(1540,)|var|float64
call_3149 = func_1048_call(relay.reshape(var_3150.astype('float64'), [14, 11, 10]))
call_3151 = func_1048_call(relay.reshape(var_3150.astype('float64'), [14, 11, 10]))
bop_3160 = relay.greater(var_3150.astype('bool'), relay.reshape(call_3149.astype('bool'), relay.shape_of(var_3150))) # shape=(1540,)
bop_3163 = relay.greater(var_3150.astype('bool'), relay.reshape(call_3151.astype('bool'), relay.shape_of(var_3150))) # shape=(1540,)
output = relay.Tuple([call_3136,bop_3160,])
output2 = relay.Tuple([call_3137,bop_3163,])
func_3175 = relay.Function([var_3150,], output)
mod['func_3175'] = func_3175
mod = relay.transform.InferType()(mod)
mutated_mod['func_3175'] = func_3175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3176 = relay.var("var_3176", dtype = "float64", shape = (1540,))#candidate|3176|(1540,)|var|float64
func_3175_call = mutated_mod.get_global_var('func_3175')
call_3177 = func_3175_call(var_3176)
output = call_3177
func_3178 = relay.Function([var_3176], output)
mutated_mod['func_3178'] = func_3178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_3193 = relay.TupleGetItem(func_897_call(), 2)
call_3194 = relay.TupleGetItem(func_899_call(), 2)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_3201 = relay.TupleGetItem(func_2375_call(), 0)
call_3202 = relay.TupleGetItem(func_2377_call(), 0)
output = relay.Tuple([call_3193,call_3201,])
output2 = relay.Tuple([call_3194,call_3202,])
func_3215 = relay.Function([], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
output = func_3215()
func_3216 = relay.Function([], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3224 = relay.var("var_3224", dtype = "int64", shape = ())#candidate|3224|()|var|int64
const_3225 = relay.const([[[-3],[-10],[2],[8],[-1],[6]],[[10],[10],[6],[-4],[-7],[8]],[[2],[8],[-5],[6],[9],[1]],[[-1],[7],[-9],[6],[4],[9]],[[-5],[-10],[8],[2],[-2],[-2]],[[7],[-4],[-5],[10],[-2],[-7]]], dtype = "int64")#candidate|3225|(6, 6, 1)|const|int64
bop_3226 = relay.greater_equal(var_3224.astype('bool'), const_3225.astype('bool')) # shape=(6, 6, 1)
uop_3232 = relay.asin(const_3225.astype('float64')) # shape=(6, 6, 1)
func_1780_call = mod.get_global_var('func_1780')
func_1784_call = mutated_mod.get_global_var('func_1784')
var_3240 = relay.var("var_3240", dtype = "float32", shape = (216,))#candidate|3240|(216,)|var|float32
call_3239 = relay.TupleGetItem(func_1780_call(relay.reshape(var_3224.astype('float32'), []), relay.reshape(var_3240.astype('float32'), [216,]), ), 6)
call_3241 = relay.TupleGetItem(func_1784_call(relay.reshape(var_3224.astype('float32'), []), relay.reshape(var_3240.astype('float32'), [216,]), ), 6)
output = relay.Tuple([bop_3226,uop_3232,call_3239,var_3240,])
output2 = relay.Tuple([bop_3226,uop_3232,call_3241,var_3240,])
func_3243 = relay.Function([var_3224,var_3240,], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
var_3244 = relay.var("var_3244", dtype = "int64", shape = ())#candidate|3244|()|var|int64
var_3245 = relay.var("var_3245", dtype = "float32", shape = (216,))#candidate|3245|(216,)|var|float32
output = func_3243(var_3244,var_3245,)
func_3246 = relay.Function([var_3244,var_3245,], output)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3277 = relay.var("var_3277", dtype = "float64", shape = (1, 14, 10))#candidate|3277|(1, 14, 10)|var|float64
uop_3278 = relay.log2(var_3277.astype('float64')) # shape=(1, 14, 10)
output = relay.Tuple([uop_3278,])
output2 = relay.Tuple([uop_3278,])
func_3281 = relay.Function([var_3277,], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3282 = relay.var("var_3282", dtype = "float64", shape = (1, 14, 10))#candidate|3282|(1, 14, 10)|var|float64
func_3281_call = mutated_mod.get_global_var('func_3281')
call_3283 = func_3281_call(var_3282)
output = call_3283
func_3284 = relay.Function([var_3282], output)
mutated_mod['func_3284'] = func_3284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_3291 = relay.TupleGetItem(func_3115_call(), 0)
call_3292 = relay.TupleGetItem(func_3116_call(), 0)
output = call_3291
output2 = call_3292
func_3297 = relay.Function([], output)
mod['func_3297'] = func_3297
mod = relay.transform.InferType()(mod)
mutated_mod['func_3297'] = func_3297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3297_call = mutated_mod.get_global_var('func_3297')
call_3298 = func_3297_call()
output = call_3298
func_3299 = relay.Function([], output)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_3319 = func_1690_call()
call_3320 = func_1690_call()
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_3321 = relay.TupleGetItem(func_1564_call(), 1)
call_3322 = relay.TupleGetItem(func_1566_call(), 1)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_3328 = relay.TupleGetItem(func_2783_call(relay.reshape(call_3321.astype('float32'), [360,])), 3)
call_3329 = relay.TupleGetItem(func_2785_call(relay.reshape(call_3321.astype('float32'), [360,])), 3)
func_1376_call = mod.get_global_var('func_1376')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_3337 = relay.var("var_3337", dtype = "float64", shape = (150,))#candidate|3337|(150,)|var|float64
const_3338 = relay.const([-4.182277,9.952428,1.942497,3.534685,3.144395,-3.583596,8.107801,8.277850,4.959862,1.214183,-1.196646,7.710049,-5.174717,-2.085017,-5.611982,-8.934666,-1.181230,-3.664706,-3.415880,-7.497186,5.973570,-4.404913,-7.823924,7.724140,-5.109743,9.407570,2.380469,7.131826,-3.696122,5.963144,0.049740,-6.219920,-4.376276,-6.881278,-3.988817,-5.577990,8.608114,3.740802,-0.232997,4.225212,8.801665,-2.959083,4.744700,-3.285973,1.773384,3.712354,-0.084401,-5.229529,-9.762088,0.916705,-0.555568,0.269687,-6.650875,6.111292,2.376452,6.565249,3.950755,8.448159,0.215550,-2.657449,8.825126,-5.864596,8.750828,-9.232297,0.860745,6.837845,-2.258488,9.383012,3.011765,1.922703,3.821003,9.870021,-5.956305,0.052422,8.237574,8.117293,1.242541,-2.999614,-4.908158,9.486776,-3.623757,1.949276,9.046763,-0.658457,0.492545,7.512956,-0.596427,6.527632,8.635627,4.152108,5.430824,4.418118,-3.481551,1.747953,6.836789,-2.067614,9.902181,-9.930723,-1.984847,9.084476,-0.826342,-7.917366,-1.153920,-9.749603,-4.075058,-4.979869,-4.478411,2.374500,4.153112,3.793746,5.517537,-6.976027,-0.160733,2.732600,7.252495,-8.732509,4.441150,4.165657,1.599349,9.284949,2.906734,2.688982,1.572069,-8.615476,5.408394,8.344245,3.105279,-1.539418,-2.201498,-0.484163,-3.742930,-5.680826,9.086007,4.677432,9.793993,-8.549354,-6.438782,-9.130609,-2.231773,-5.357301,-8.872442,-2.860846,-6.982343,4.865830,-3.480768,-5.794604,1.600041,-7.249283,-4.783389,4.535500,-8.038358,-0.035256,1.786672,7.106846,6.321141,8.767066,1.038504,6.601077,-6.267797,3.860728,-7.846086,-5.150831,-8.845214,-2.033765,-7.281875,-9.058716,-1.034916,-7.785327,2.601037,2.582136,8.081550,-9.201463,7.012752,-9.675860,3.781978,-6.324608,-9.858988,2.319703,-9.567386,6.365377,1.812359,0.416966,5.012243,9.417451,5.599241,4.204812,5.432682,-2.611479,-9.960777,4.949747,-7.945142,4.712682,-6.899997,0.791160,7.948847,9.870563,-6.971394,-1.941160,-2.063396,-3.702712,-0.626634,4.891351,0.503212,-0.547734,-3.872037,0.641599,-1.792407,0.233774,4.466847,3.055749,-7.153220,0.123763,0.227778,-8.645034,8.650157,-5.304336,-5.049906,-2.215293,1.327301,1.673494,-8.928312,-3.477588,-7.732229,6.711465,-3.782565,-4.481749,0.855814,4.398332,0.431378,8.045213,-1.332990,-6.178148,3.295164,-8.633147,-4.131079,-5.501606,2.190461,8.788961,3.348065,7.924006,0.435995,-3.638621,-1.892018,1.474123,6.176797,-5.625728,-7.567937,-4.911141,0.975134,-5.050945,3.496741,-7.273266,7.862900,-2.630845,-6.052107,-7.059323,6.730200,7.902255,-5.850594,0.347819,6.234922,8.519511,-4.267176,5.603418,9.183170,6.065767,-8.984266,9.298682,2.786564,-0.641848,5.642742,3.450533,2.548591,-7.652131,-1.105631,4.984419,-8.470470,0.040163,4.906287,-9.432509,5.296949,4.535712,-0.448500,4.128187,-8.152505,4.333681,3.064358,-7.943800,8.751847,-8.226945,-1.463647,6.480816,4.037570,4.789406,6.594062,6.319024,-2.960396,2.598954,6.195767,-5.157497,-9.170405,7.484963,2.401972,7.479909,7.398349,-6.109205,5.282323,-7.937277,-6.253863,2.555462,6.441373,-1.912385,3.001712,-9.918335,0.151702,-0.849708,1.506151,7.147317,4.552517,9.472176,-2.743936,-0.395155,-4.633355,-7.008548,7.419602,-3.421261,-3.742934,-4.176042,-6.700920,-7.285344,2.778943,-6.536928,7.500383,7.782113,-9.207169,8.058217,-8.022517,-7.145514,-2.282996,-7.748413,1.371895,-3.038378,5.798058,9.364431,-4.377759,1.468460,4.379094,-9.723097,6.923323,6.471613,-6.179054,2.857903,9.942236,2.163017,-9.514464,5.479511,7.969863,-3.269282,-7.330699,-4.363692,3.418586,-3.056046,8.926788,7.188207,9.792761,-7.297352,6.820094,-5.648023,-6.116406,-0.927892,0.768927,-7.606201,-9.852745,-4.003762,-9.026036,8.157319,-0.989667,-4.223059,-8.502406,2.143636,1.063599,7.461749,7.416414,3.162462,-6.492579,-7.818884,6.767256,-3.758597,8.365232,-1.713838,3.528002,-2.232012,0.930939,-6.625258,-6.093765,5.791943,8.858340,2.628284,8.601900,-0.623288,-2.354764,1.826862,9.551294,1.158657,-3.561045,4.907501,2.555686,-2.020938,-8.920309,-7.040798,-6.766574,-6.344061,9.541653,-9.721326,-0.537908,-3.397886,2.633048,-8.026825,0.650463,-9.860381,1.109295,5.480569,7.149432,-3.123600,-7.212216,-3.764218,-5.580262,1.490083,-2.417567,-3.067232,-6.857237,-0.418213,1.979957,8.451304,-2.565966,-7.251631,1.561370,8.384056,4.523798,-5.149787,-7.373399,-0.604205,-8.349577,-8.394843,5.604427,8.114632,3.219025,-5.149842,2.084257,5.089076,7.103142,6.791324,-2.923843,4.010752,-0.047719,3.236640,-4.915210,-5.462380,9.245547,-1.784777,3.730798,2.498508,6.957885,9.309714,7.755661,-8.123722,7.836662,7.098371,-3.011656,4.025216,-6.796270,-2.804970,7.622920,2.199220,6.856219,9.385994,-9.953479,-6.752851,-3.681654,-9.408187,-4.686207,-3.132714,-6.407633,1.930485,-2.447150,-9.080050,-6.938310,-8.628773,9.770360,-7.075097,8.967375,0.996099,-3.004777,8.694398,-9.323666,-9.880593,-9.547300,-2.663434,-8.074797,-3.980985,-1.885366,-8.498574,0.115271,-9.568950,-8.624154,6.660251,6.078053,7.063468,-8.000072,-3.040297,-6.357697,-9.413470,-9.774959,-2.500988,-7.330932,4.197797,3.933371,3.841309,-9.650579,3.519570,1.001462,-4.665996,5.619461,-7.797776,-2.163809,-7.532533,-5.625611,-4.229902,6.951783,2.961115,9.363480,9.375532,-2.957694,6.559275,-5.499357,-2.136917,6.864373,-6.193112,-8.764517,1.400648,-3.971431,-2.058833,-7.144982,7.329386,4.879848,9.284313,2.237902,6.345071,-9.239729,6.363380,0.656921,-1.034299,-2.069273,4.464364,0.300604,-9.049731,8.454621,-9.729784,0.216163,0.224772,3.683547,1.025251,4.548222,-4.992358,4.297175,3.192410,7.082135,1.636733,-0.424451,7.234855,0.730576,3.403755,-8.436036,-7.711048,0.614826,-0.141154,1.601649,-8.876747,-0.423888,-2.048868,-7.090754,-9.243527,6.167998,2.742030,-8.793531,5.479041,-4.662085,-5.940107,8.115708,-2.602143,6.277201,0.259904,-2.124626,7.744325,-6.061543,-0.467575,0.906675,4.771290,2.595008,0.564223,4.898690,5.012854,8.388296,-4.818963,7.355417,-8.811763,2.135250,9.942780,8.801568,-0.570396,-7.918695,-4.326661,6.150692,-1.791260,-3.393804,-9.086457,-0.354062,-3.792153,-0.604720,-1.746048,3.698808,-6.443518,-0.973117,5.326088,-0.036151,-2.145171,-8.723381,4.368051,-5.385792,-8.190260,6.519051,-7.111150,5.277805,7.928115,2.749980,1.890867,-9.128015,9.583486,3.526513,-7.390614,-8.092871,-4.158507,6.553164,-7.049498,3.666371,2.829472,6.293723,-5.072999,-4.759779,-1.103967,-9.526837,-7.326239,1.697224,2.741286,-4.045192,2.724652,-5.653623,-8.516977,5.841205,3.711070,9.511066,6.841701,-0.993724,2.703663,0.495504,-6.224030,9.468343,5.290458,-5.042769,0.063907,-3.397542,4.758572,-3.110652,5.747838,-9.088191,-4.602256,6.377145,8.563144,-4.465715,-9.159844,-4.060120,3.592020,7.951331,4.537398,6.668794,0.174684,0.114228,0.919277,-2.543192,6.282498,6.061701,-7.393611,3.092750,2.687378,8.481526,9.745423,-2.643945,0.575316,6.714736,-7.588068,-9.196882,9.175213,-7.445407,3.233682,8.441770,-0.931790,9.780835,5.864342,-5.483898,-6.808850,-4.405113,7.277350,-8.150663,-7.060237,3.839301,-7.267043,-3.639604,1.945311,-5.841783,9.713494,2.762232,2.842343,5.884372,8.973336,4.719000,5.724439,-1.427936,-9.208709,9.306078,-0.587314,6.560289,-2.239030,-9.149905,3.563291,0.120942,-3.452892,-6.139317,9.641630,-8.089388,1.036240,-1.489717,6.454123,2.331842,4.803267,1.596112,-5.236252,-4.189772,-5.244234,-5.593061,-7.351358,9.292687,0.335869,-5.604397,7.992762,5.881679,-2.229605,3.751426,-6.351509,2.056096,9.201638,-6.413690,-9.886742,5.630425,6.904874,-9.942358,4.705123,6.220471,0.512710,0.783041,-6.096405,9.691918,-0.400457,0.611627,0.577347,-6.916031,5.141018,-8.745000,7.423203,-7.106045,-7.467667,-9.589278,-3.050616,-7.076593,3.190897,-1.434815,-5.113951,-3.514799,-8.405792,-3.914605,5.871153,5.816785,9.979183,-9.754654,0.072277,5.342851,0.239138,0.302042,6.216991,8.154472,7.549890,2.411389,0.412650,-6.605895,8.075593,6.128868,0.271373,8.635473,6.874136,8.431539,-2.706851,-9.321289,2.348782,-3.923674,2.854444,2.727631,7.985619,-1.613707,5.151699,8.698022,6.690643,5.224693,1.531261,4.367227,-4.556148,3.946818,-7.755998,-3.771808,3.531396,-9.077832,-2.155982,2.378559,-7.964593,-9.720518,-4.789786,-5.243515,-7.468399,-9.334750,-7.218616,-5.376833,-4.327630,-1.829987,0.208369,-7.550303,3.503263,5.426607,7.248249,4.765655,8.515317,1.331967,8.149329,9.604788,0.283686,8.063003,-3.892097,-7.444975,2.293009,7.749493,1.641561,2.917686,-6.897829,-5.753173,4.253449,-5.046949,9.215810,-4.482524,6.571429,-0.863203,5.511222,3.592380,-3.995306,0.587234,-0.655504,-3.777183,-5.281048,-7.913252,3.276843,-9.864321,-2.838616,5.028435,-7.347155,7.182526,1.376840,-2.917275,8.853873,-0.119677,4.024301,-2.180897,-2.729970,9.398240,-6.103346,-1.007270,-1.383515,3.702162,2.987363,-9.116128,-9.537409,5.748321,-5.059146,8.347841,7.538136,5.448228,8.238621,-3.631471,-0.641418,-0.904462,4.561275,-7.290845,-8.173145,9.663740,-2.205176,4.535652,1.380477,6.180835,6.399477,4.633766,-6.007045,0.414939,-6.277423,-9.137221,-2.420465,-8.817531,0.483772,9.065093,-9.880471,8.737657,5.820352,4.172284,0.428464,-4.911048,8.289463,-8.208461,-1.816347,4.604107,2.656879,7.887062,6.060259,-1.823577,8.973071,-7.945487,-5.176746,-5.313980,-0.560327,-4.791009,-8.656322,-1.594720,-1.984972,-9.320508,4.295479,-0.427946,6.749622,-9.642286,6.639507,4.849852,-7.737155,-7.673373,8.895973,-2.363834,-5.253338,0.735771,6.124946,5.697603,-1.554201,-3.920475,2.544700,3.417404,5.031710,3.150360,-1.350768,7.989640,-2.343700,7.121163,-3.659698,-5.432981,-3.519302,-7.131670,9.513075,6.459318,2.199436,4.376231,-3.333066,5.885228,-7.558536,-7.009817,7.063415,-9.658107,2.547491,1.216525,3.532406,1.316872,8.210793,-6.846603,1.132296,0.023972,4.643791,0.505048,1.347769,2.441285,-6.526415,-7.087209,4.541184,7.469203,-1.276703,5.611246,-4.771057,6.546672,-9.519488,8.161710,7.593822,-1.035532,4.315379,8.597867,-0.202533,6.451871,-0.332304,-1.125429,-1.819031,1.552197,-1.548814,-4.613257,2.912382,-8.854295,2.994574,2.779487,-2.845070,-1.110202,0.582389,-9.814570,-7.010215,-3.438544,3.922249,0.285717,8.087553,-1.072084,5.253941,-6.497088,-7.827676,-4.553694,-3.590981,5.825417,9.740182,7.633875,0.305956,-8.260878,7.081298,-1.291962,7.734194,-8.831408,-9.276745,-7.251118,1.167453,-0.550003,7.276545,-9.519584,-7.551487,1.167886,2.407638,9.065610,-8.788071,-0.584550,-7.825349,5.192510,-9.374986,-6.505029,-6.351976,-2.926353,-4.062133,-5.901136,3.699924,5.200602,-3.692901,1.728097,1.781843,-9.843894,-7.600704,3.671507,3.537320,-9.852908,-0.089412,7.229316,6.494294,3.849397,-0.270530,-0.630614,-4.239222,-7.441062,-0.707669,-1.138969,-0.862339,2.646573,1.940791,1.839508,2.175148,1.140648,9.262009,6.723673,-8.906311,-3.438295,-8.877899,4.694199,-1.851382,1.465856,4.504547,1.764606,-2.234654,3.204827,9.268995,-2.442701,-0.709309,6.574607,-1.227205,9.816303,2.836114,-5.595503,-2.480948,-8.089363,4.652932,2.929731,9.700254,-1.557013,4.165181,5.960813,-0.792716,-7.915191,1.353878,-5.361963,-7.760614,4.230663,7.249796,0.180489,9.479301,6.350676,7.546430,5.914702,2.550152,-5.438680,3.266741,7.612910,9.464802,7.565543,8.699688,5.793113,0.392477,0.982159,-0.194950,-5.605787,-4.946318,-1.245258,-8.152070,-0.719126,7.560284,-2.868377,9.036802,-7.534574,1.282374,5.788058,-8.493411,-7.691786,3.661374,-9.377725,-2.077564,5.204153,-1.524982,-7.888148,-4.734734,-0.209886,6.836262,-6.455902,4.295376,-0.915221,-3.011433,0.987514,-2.314021,-8.965442,-9.567179,9.041857,9.077556,6.815998,-7.068766,-5.291829,3.094638,-6.947255,-3.471285,9.961257,9.004156,-9.747204,6.443928,-2.972095,-1.343213,-2.856429,-3.329580,3.560622,-7.239553,5.006472,7.545426,7.893763,5.930834,6.149634,2.614356,4.804998,-4.592370,-4.801594,6.030537,7.157968,-5.600214,-2.012227,4.321035,-2.867317,3.883433,-5.523282,-2.191913,7.787307,8.572010,4.982302,8.315917,-2.014497,-6.503519,6.021191,4.448540,1.101757,-9.850634,-0.341012,-5.746697,-0.727483,1.461909,-7.699256,-7.821554,7.100741,-9.926764,-8.851385,7.125342,-4.211522,-0.140085,8.042525,-6.806245,7.986887,0.605856,6.620867,-8.551961,6.738796,-7.011142,6.147678,3.005693,8.109171,5.949933,0.828315,-2.134300,2.893959,0.402255,-0.637122,9.840630,1.300832,-6.358596,-3.212961,-0.915987,-4.229141,2.522259,5.077844,-5.936798,9.646297,3.371385,-7.227243,-5.003543,-1.535112,-6.103755,1.574687,-7.612552,-7.476106,0.658120,6.423723,-3.422110,6.272009,-3.700027,-0.450580,8.877752,-4.659221,-6.428979,-1.216941,-4.030870,2.825419,4.312150,2.931817,6.993518,-7.094532,-3.454226,-8.780992,1.894250,2.864297,-5.180009,-9.431656,7.657729,-2.066920,8.450823,-1.582178,7.550748,9.377101,-4.774704,-3.928346,-5.493723,7.464024,6.142026,-9.910293,9.706711,-2.326643,8.783821,4.056526,9.909585,3.885063,-9.416548,8.406886,3.621068,-9.064596,9.832718,9.957866,-0.550535,-5.888453,-6.717792,-8.584777,-1.590361,2.463440,-0.401691,-6.392258,8.217729,-7.437299,9.968203,9.573094,-2.796697,4.043592,0.737583,-3.354223,3.572596,6.970775,3.166046,8.821546,-3.174285,1.902514,0.004678,-5.390794,1.115132,-8.304104,-0.362577,9.321035,8.382596,-6.460666,6.474121,-8.575981,-5.518031,-7.702964,-9.160166,4.074358,1.909542,2.551394,0.531229,5.081265,-9.355795,4.358034,2.460430,-7.082647,8.253162,9.711365,1.174416,6.292113,6.038605,9.231842,9.175389,-1.358026,3.981903,9.627649,-1.534706,-0.511250,-4.352682,0.791841,-9.460368,3.306295,3.821115,4.345276,-5.160358,-1.101553,-3.093225,5.807000,-8.415820,-3.302103,2.150780,-9.306085,-9.759253,2.306597,6.320851,1.792042,-6.026495,2.096646,0.106487,-3.955722,-9.510103,-7.512068,-2.345189,-3.025140,8.434022,-4.440087,2.422118,-4.550313,3.571796,-6.529511,3.239760,6.810109,-8.447681,7.982864,1.764338,-7.762108,-7.272581,-1.637749,-3.765755,1.073080,-3.168188,1.499384,5.490791,9.805292,4.635850,7.577767,6.850102,-2.493619,8.197018,-2.938587,1.094243,-5.426845,2.636374,-2.372270,-0.016273,3.237868,8.608017,-4.096585,8.314803,-1.201855,0.338613,7.298673,-3.591860,3.049467,7.056573,-3.158527,-6.604584,-2.503311,5.556293,6.305627,-5.068966,-4.129130,4.602493,-7.100062,0.507258,7.533111,-3.589173,4.226173,-4.323863,7.897252,-4.212943,-0.034830,-1.285552,-7.607217,5.708897,0.689518,5.120412,-8.355527,-3.658087,4.438871,3.917683,2.458951,1.729815,-4.532820,3.771936,8.444075,3.994761,-8.529372,-4.339005,6.797881,-7.608318,3.266318,1.300460,1.514234,5.819051,9.939847,5.258982,-0.571021,1.448585,7.113896,-7.229834,5.141127,-3.939789,-0.197329], dtype = "float32")#candidate|3338|(1485,)|const|float32
call_3336 = relay.TupleGetItem(func_1376_call(relay.reshape(var_3337.astype('float64'), [150,]), relay.reshape(const_3338.astype('float32'), [1485,]), ), 2)
call_3339 = relay.TupleGetItem(func_1379_call(relay.reshape(var_3337.astype('float64'), [150,]), relay.reshape(const_3338.astype('float32'), [1485,]), ), 2)
output = relay.Tuple([call_3319,call_3321,call_3328,call_3336,var_3337,const_3338,])
output2 = relay.Tuple([call_3320,call_3322,call_3329,call_3339,var_3337,const_3338,])
func_3342 = relay.Function([var_3337,], output)
mod['func_3342'] = func_3342
mod = relay.transform.InferType()(mod)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3343 = relay.var("var_3343", dtype = "float64", shape = (150,))#candidate|3343|(150,)|var|float64
func_3342_call = mutated_mod.get_global_var('func_3342')
call_3344 = func_3342_call(var_3343)
output = call_3344
func_3345 = relay.Function([var_3343], output)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_3379 = relay.TupleGetItem(func_1494_call(), 0)
call_3380 = relay.TupleGetItem(func_1495_call(), 0)
func_865_call = mod.get_global_var('func_865')
func_869_call = mutated_mod.get_global_var('func_869')
var_3382 = relay.var("var_3382", dtype = "int16", shape = (396,))#candidate|3382|(396,)|var|int16
call_3381 = relay.TupleGetItem(func_865_call(relay.reshape(var_3382.astype('int16'), [6, 11, 6]), relay.reshape(var_3382.astype('int16'), [6, 11, 6]), ), 0)
call_3383 = relay.TupleGetItem(func_869_call(relay.reshape(var_3382.astype('int16'), [6, 11, 6]), relay.reshape(var_3382.astype('int16'), [6, 11, 6]), ), 0)
bop_3421 = relay.less_equal(call_3381.astype('bool'), relay.reshape(var_3382.astype('bool'), relay.shape_of(call_3381))) # shape=(6, 11, 6)
bop_3424 = relay.less_equal(call_3383.astype('bool'), relay.reshape(var_3382.astype('bool'), relay.shape_of(call_3383))) # shape=(6, 11, 6)
output = relay.Tuple([call_3379,bop_3421,])
output2 = relay.Tuple([call_3380,bop_3424,])
func_3436 = relay.Function([var_3382,], output)
mod['func_3436'] = func_3436
mod = relay.transform.InferType()(mod)
var_3437 = relay.var("var_3437", dtype = "int16", shape = (396,))#candidate|3437|(396,)|var|int16
output = func_3436(var_3437)
func_3438 = relay.Function([var_3437], output)
mutated_mod['func_3438'] = func_3438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_3466 = func_2105_call()
call_3467 = func_2105_call()
output = call_3466
output2 = call_3467
func_3483 = relay.Function([], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
mutated_mod['func_3483'] = func_3483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mutated_mod.get_global_var('func_3483')
call_3484 = func_3483_call()
output = call_3484
func_3485 = relay.Function([], output)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3495 = relay.var("var_3495", dtype = "float64", shape = (9, 5, 9))#candidate|3495|(9, 5, 9)|var|float64
uop_3496 = relay.sin(var_3495.astype('float64')) # shape=(9, 5, 9)
output = uop_3496
output2 = uop_3496
func_3498 = relay.Function([var_3495,], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3499 = relay.var("var_3499", dtype = "float64", shape = (9, 5, 9))#candidate|3499|(9, 5, 9)|var|float64
func_3498_call = mutated_mod.get_global_var('func_3498')
call_3500 = func_3498_call(var_3499)
output = call_3500
func_3501 = relay.Function([var_3499], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_3550 = relay.TupleGetItem(func_1494_call(), 0)
call_3551 = relay.TupleGetItem(func_1495_call(), 0)
output = call_3550
output2 = call_3551
func_3587 = relay.Function([], output)
mod['func_3587'] = func_3587
mod = relay.transform.InferType()(mod)
output = func_3587()
func_3588 = relay.Function([], output)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_3640 = func_2105_call()
call_3641 = func_2105_call()
output = relay.Tuple([call_3640,])
output2 = relay.Tuple([call_3641,])
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mutated_mod.get_global_var('func_3703')
call_3704 = func_3703_call()
output = call_3704
func_3705 = relay.Function([], output)
mutated_mod['func_3705'] = func_3705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_3715 = relay.TupleGetItem(func_897_call(), 0)
call_3716 = relay.TupleGetItem(func_899_call(), 0)
output = call_3715
output2 = call_3716
func_3722 = relay.Function([], output)
mod['func_3722'] = func_3722
mod = relay.transform.InferType()(mod)
output = func_3722()
func_3723 = relay.Function([], output)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3215_call = mod.get_global_var('func_3215')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_3796 = relay.TupleGetItem(func_3215_call(), 1)
call_3797 = relay.TupleGetItem(func_3216_call(), 1)
output = call_3796
output2 = call_3797
func_3821 = relay.Function([], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
output = func_3821()
func_3822 = relay.Function([], output)
mutated_mod['func_3822'] = func_3822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_3868 = func_1675_call()
call_3869 = func_1675_call()
func_3342_call = mod.get_global_var('func_3342')
func_3345_call = mutated_mod.get_global_var('func_3345')
const_3879 = relay.const([[9.699186],[8.655599],[4.744260],[3.547493],[1.883136],[5.424677],[3.292351],[7.447390],[3.160744],[3.325564],[-0.074433],[-7.915249],[0.637129],[-4.371190],[-4.354335],[2.953986],[3.805966],[-3.740915],[3.983904],[1.649926],[-0.221905],[2.892256],[-0.374642],[-8.310227],[8.352106],[-6.154582],[4.064542],[-0.073003],[-1.248426],[-6.902988],[-6.299984],[0.690971],[-3.401803],[-9.832482],[6.794507],[-1.636873],[-5.295955],[9.365463],[-7.380201],[-6.530017],[3.791989],[-2.437320],[-1.400417],[3.073835],[8.901530],[1.254554],[-6.732847],[9.344298],[6.625503],[-1.987088],[0.738130],[-6.969165],[-3.214870],[0.818177],[7.790314],[0.686588],[-3.640893],[1.421234],[-3.127410],[2.343326],[-4.839682],[0.309767],[8.694229],[7.414856],[-1.761090],[5.955918],[-6.893156],[7.990305],[-4.156214],[-6.388451],[-9.293983],[-8.861008],[0.446340],[4.297650],[0.760615],[1.649068],[-2.164867],[-1.786716],[-6.637428],[-4.325076],[8.661549],[-4.063416],[2.979017],[6.930185],[-3.528591],[9.074553],[9.935756],[6.840727],[-6.696071],[-7.183663],[-6.615950],[3.413904],[-8.328968],[-1.499022],[-8.940555],[8.295650],[3.424528],[7.543127],[2.121669],[-8.686309],[-6.872790],[-5.740958],[6.116331],[-0.412095],[1.214528],[6.019647],[9.125488],[-9.402550],[-7.608558],[-2.581769],[3.452699],[0.187109],[9.822105],[3.364070],[9.477471],[1.625748],[3.837170],[0.743465],[8.047109],[-0.978860],[-0.631406],[-3.445494],[4.295351],[8.668209],[-8.649220],[-4.435607],[3.107078],[-2.311457],[-7.254468],[6.383177],[2.224578],[-2.878610],[-3.846257],[7.574320],[9.581879],[-3.283983],[-8.536803],[5.604760],[7.433151],[0.235421],[-6.182195],[6.534998],[0.233569],[6.869973],[4.792926],[1.615948],[3.583920],[-4.452867],[4.150974],[7.743777]], dtype = "float64")#candidate|3879|(150, 1)|const|float64
call_3878 = relay.TupleGetItem(func_3342_call(relay.reshape(const_3879.astype('float64'), [150,])), 0)
call_3880 = relay.TupleGetItem(func_3345_call(relay.reshape(const_3879.astype('float64'), [150,])), 0)
uop_3881 = relay.sigmoid(const_3879.astype('float32')) # shape=(150, 1)
bop_3889 = relay.power(uop_3881.astype('float32'), call_3878.astype('float32')) # shape=(150, 360)
bop_3892 = relay.power(uop_3881.astype('float32'), call_3880.astype('float32')) # shape=(150, 360)
func_1870_call = mod.get_global_var('func_1870')
func_1873_call = mutated_mod.get_global_var('func_1873')
var_3900 = relay.var("var_3900", dtype = "int16", shape = (396,))#candidate|3900|(396,)|var|int16
call_3899 = relay.TupleGetItem(func_1870_call(relay.reshape(var_3900.astype('int16'), [396,])), 2)
call_3901 = relay.TupleGetItem(func_1873_call(relay.reshape(var_3900.astype('int16'), [396,])), 2)
var_3911 = relay.var("var_3911", dtype = "float32", shape = (150, 5))#candidate|3911|(150, 5)|var|float32
bop_3912 = relay.add(uop_3881.astype('uint8'), var_3911.astype('uint8')) # shape=(150, 5)
uop_3923 = relay.acosh(bop_3889.astype('float64')) # shape=(150, 360)
uop_3925 = relay.acosh(bop_3892.astype('float64')) # shape=(150, 360)
bop_3928 = relay.power(const_3879.astype('float32'), bop_3912.astype('float32')) # shape=(150, 5)
func_2328_call = mod.get_global_var('func_2328')
func_2332_call = mutated_mod.get_global_var('func_2332')
var_3937 = relay.var("var_3937", dtype = "float64", shape = (1540,))#candidate|3937|(1540,)|var|float64
call_3936 = relay.TupleGetItem(func_2328_call(relay.reshape(const_3879.astype('float64'), [150,]), relay.reshape(var_3937.astype('float64'), [1540,]), ), 4)
call_3938 = relay.TupleGetItem(func_2332_call(relay.reshape(const_3879.astype('float64'), [150,]), relay.reshape(var_3937.astype('float64'), [1540,]), ), 4)
func_1029_call = mod.get_global_var('func_1029')
func_1032_call = mutated_mod.get_global_var('func_1032')
call_3939 = relay.TupleGetItem(func_1029_call(relay.reshape(call_3899.astype('int16'), [396,])), 2)
call_3940 = relay.TupleGetItem(func_1032_call(relay.reshape(call_3899.astype('int16'), [396,])), 2)
func_1870_call = mod.get_global_var('func_1870')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_3941 = relay.TupleGetItem(func_1870_call(relay.reshape(call_3899.astype('int16'), [396,])), 5)
call_3942 = relay.TupleGetItem(func_1873_call(relay.reshape(call_3899.astype('int16'), [396,])), 5)
uop_3943 = relay.acos(bop_3912.astype('float64')) # shape=(150, 5)
func_1870_call = mod.get_global_var('func_1870')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_3947 = relay.TupleGetItem(func_1870_call(relay.reshape(call_3899.astype('int16'), [396,])), 5)
call_3948 = relay.TupleGetItem(func_1873_call(relay.reshape(call_3899.astype('int16'), [396,])), 5)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_3956 = func_1171_call()
call_3957 = func_1171_call()
bop_3964 = relay.equal(uop_3943.astype('bool'), relay.reshape(bop_3928.astype('bool'), relay.shape_of(uop_3943))) # shape=(150, 5)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_3973 = relay.TupleGetItem(func_1564_call(), 3)
call_3974 = relay.TupleGetItem(func_1566_call(), 3)
output = relay.Tuple([call_3868,call_3899,var_3900,uop_3923,call_3936,var_3937,call_3939,call_3941,call_3947,call_3956,bop_3964,call_3973,])
output2 = relay.Tuple([call_3869,call_3901,var_3900,uop_3925,call_3938,var_3937,call_3940,call_3942,call_3948,call_3957,bop_3964,call_3974,])
func_3976 = relay.Function([var_3900,var_3911,var_3937,], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
var_3977 = relay.var("var_3977", dtype = "int16", shape = (396,))#candidate|3977|(396,)|var|int16
var_3978 = relay.var("var_3978", dtype = "float32", shape = (150, 5))#candidate|3978|(150, 5)|var|float32
var_3979 = relay.var("var_3979", dtype = "float64", shape = (1540,))#candidate|3979|(1540,)|var|float64
output = func_3976(var_3977,var_3978,var_3979,)
func_3980 = relay.Function([var_3977,var_3978,var_3979,], output)
mutated_mod['func_3980'] = func_3980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_4011 = func_2882_call()
call_4012 = func_2882_call()
output = call_4011
output2 = call_4012
func_4025 = relay.Function([], output)
mod['func_4025'] = func_4025
mod = relay.transform.InferType()(mod)
output = func_4025()
func_4026 = relay.Function([], output)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4056 = relay.var("var_4056", dtype = "float32", shape = (16, 16, 4))#candidate|4056|(16, 16, 4)|var|float32
uop_4057 = relay.asinh(var_4056.astype('float32')) # shape=(16, 16, 4)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_4072 = relay.TupleGetItem(func_1564_call(), 2)
call_4073 = relay.TupleGetItem(func_1566_call(), 2)
uop_4080 = relay.sin(uop_4057.astype('float32')) # shape=(16, 16, 4)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_4105 = relay.TupleGetItem(func_1121_call(), 0)
call_4106 = relay.TupleGetItem(func_1122_call(), 0)
func_3281_call = mod.get_global_var('func_3281')
func_3284_call = mutated_mod.get_global_var('func_3284')
var_4114 = relay.var("var_4114", dtype = "float64", shape = (140,))#candidate|4114|(140,)|var|float64
call_4113 = relay.TupleGetItem(func_3281_call(relay.reshape(var_4114.astype('float64'), [1, 14, 10])), 0)
call_4115 = relay.TupleGetItem(func_3284_call(relay.reshape(var_4114.astype('float64'), [1, 14, 10])), 0)
func_1780_call = mod.get_global_var('func_1780')
func_1784_call = mutated_mod.get_global_var('func_1784')
var_4120 = relay.var("var_4120", dtype = "float32", shape = ())#candidate|4120|()|var|float32
const_4121 = relay.const([-3.234170,8.674360,-9.469730,7.674471,6.557028,3.814544,-8.806727,-5.825441,-4.592755,-3.786371,-0.345121,4.375626,5.733842,-3.800575,3.851469,-7.486559,-5.008646,7.974181,2.546611,2.998069,-0.980961,-9.244657,0.289469,6.762324,7.812385,9.707915,-4.753966,-5.473413,-5.361996,7.378391,6.220827,7.913251,1.804913,-9.490078,-5.145037,7.352375,-4.785799,2.725619,-2.594948,-4.410346,-8.525262,6.650022,-8.735452,-5.097045,7.532471,-7.799329,-9.846928,-1.898785,7.490822,-1.818920,-8.024908,-9.711015,-1.168661,-0.478181,-7.751463,-5.187178,-0.933545,-5.996676,2.557809,7.730567,-3.927095,2.069534,-5.029136,-6.030122,9.403297,0.787270,-3.016459,-6.988532,7.954625,9.974550,2.516102,-6.860865,9.303201,0.827837,-8.652103,1.340436,-4.162862,8.514010,-2.879477,-8.468492,-4.864163,3.398937,-3.793287,2.039468,-6.897944,5.866761,-5.904284,4.773510,-7.648223,7.376856,-0.920371,7.939465,6.895422,9.982121,-9.621059,9.393866,6.472930,5.197983,4.701620,5.623697,2.858999,5.311815,-2.216176,-2.950936,4.767377,9.001584,-4.104268,0.883746,9.429838,-3.177097,-4.860332,1.733476,-2.816262,7.197686,3.128421,-7.107615,-8.909001,1.873278,-0.320762,4.251240,0.065740,7.834776,-4.292922,3.109438,3.075344,5.635593,-6.161675,5.002642,-5.782132,-3.858332,0.667483,-5.552537,-4.368799,2.731748,2.072057,2.121925,9.142518,6.800676,0.060003,-2.663837,-6.718740,-3.185595,-4.465659,5.042921,8.525637,-8.316040,-1.015232,-6.996680,-7.319918,-2.594817,-1.246896,-9.742721,-9.471689,3.699108,3.225223,6.083432,-7.517976,-1.399697,9.814973,5.267438,1.069369,-7.087242,-1.987370,-9.951205,-5.304517,5.510453,-8.910664,-9.435775,7.542934,-7.149161,8.927591,-8.799483,-6.579708,-1.005986,-4.424918,-1.260006,-9.415461,-6.245421,8.791084,4.554818,6.276306,-7.879233,1.225230,-3.547827,7.936010,8.042059,-6.828205,-5.680331,-1.038662,6.590280,-4.700862,-0.944287,-8.499003,9.665924,1.020677,8.090438,9.478013,2.466281,-4.899419,2.717032,-5.741953,2.204301,-1.390020,0.440276,-5.924032,-4.288584,-5.668617,2.457766,7.029833,-2.225420,-8.312433,4.844246,-0.400865,-0.552229,-8.563703,-1.464064], dtype = "float32")#candidate|4121|(216,)|const|float32
call_4119 = relay.TupleGetItem(func_1780_call(relay.reshape(var_4120.astype('float32'), []), relay.reshape(const_4121.astype('float32'), [216,]), ), 0)
call_4122 = relay.TupleGetItem(func_1784_call(relay.reshape(var_4120.astype('float32'), []), relay.reshape(const_4121.astype('float32'), [216,]), ), 0)
func_1870_call = mod.get_global_var('func_1870')
func_1873_call = mutated_mod.get_global_var('func_1873')
var_4140 = relay.var("var_4140", dtype = "int16", shape = (396, 1))#candidate|4140|(396, 1)|var|int16
call_4139 = relay.TupleGetItem(func_1870_call(relay.reshape(var_4140.astype('int16'), [396,])), 5)
call_4141 = relay.TupleGetItem(func_1873_call(relay.reshape(var_4140.astype('int16'), [396,])), 5)
func_2974_call = mod.get_global_var('func_2974')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_4143 = relay.TupleGetItem(func_2974_call(relay.reshape(call_4072.astype('float32'), [1485,])), 0)
call_4144 = relay.TupleGetItem(func_2977_call(relay.reshape(call_4072.astype('float32'), [1485,])), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3980_call = mutated_mod.get_global_var('func_3980')
var_4149 = relay.var("var_4149", dtype = "float32", shape = (750,))#candidate|4149|(750,)|var|float32
const_4150 = relay.const([[-5.458959,-3.334413,4.104645,7.393177,9.320052,-5.275487,7.474927,-4.715454,8.742104,-3.413827,0.896521,6.838920,3.302639,-7.020282,-0.384372,-6.026641,3.632015,2.290746,4.019655,-6.901281,-3.388466,-7.333389,5.555858,-2.916581,6.277160,-0.969150,4.864505,-6.576073,-3.863671,4.967316,6.578016,6.174435,-4.262765,1.487795,-6.724612,9.299824,-7.846835,-5.537657,-7.503590,-4.689519,0.733674,3.541808,-0.892861,6.074550,-5.042360,-5.810832,7.895892,-2.982735,-1.628760,0.230298,-3.892042,3.577972,-8.395603,-2.761010,-6.291092,-7.253880,-8.529456,4.714196,3.078505,7.303716,2.783330,5.550980,-8.348516,-1.107797,0.981609,6.215455,-6.389384,-9.852674,-0.803144,-8.712457,9.890901,1.827884,-9.978799,6.305510,8.403635,1.090532,-3.817075,4.987935,6.276775,2.245532,6.674625,-9.313779,7.660716,-3.933685,6.281159,-9.821787,3.890008,-5.772402,-0.596119,5.098103,0.734150,-3.536788,3.012459,-5.423099,-6.586051,8.125539,-8.573696,1.707948,-5.022372,1.732197,-7.434551,9.577027,5.668848,9.729212,4.850703,-1.308153,-2.804831,-1.906903,-5.668316,-9.938569,-2.361432,9.101385,8.648828,-1.961620,-3.429839,9.600003,2.273178,6.504864,1.040258,2.308243,0.934012,1.682083,-4.258889,-3.514004,-2.897179,8.340904,-3.773507,1.060525,-9.270107,-0.819954,0.541861,1.160619,-1.882038,-2.237699,-7.203968,-3.396400,7.190778,2.491511,8.703640,-7.689724,-1.186995,-0.260034,-9.249117,-9.950275,0.141106,-6.326147,-7.244129,5.883005,-8.238713,-2.018894,9.078449,-1.853639,-0.215336,7.185495,2.982283,6.007673,7.922466,3.660698,7.915575,-8.270734,-3.516985,-2.899734,6.390314,9.767448,9.642163,-8.464918,-6.528458,6.812116,-7.738727,-9.712937,-9.488093,2.249780,5.904369,-3.691738,-6.470493,7.219655,9.279690,7.738395,8.715956,-3.586756,7.714494,-8.748846,1.590719,-6.400749,-7.494608,-9.068751,2.438864,-7.121213,-8.509864,0.945927,-8.837741,1.927955,-1.255978,-0.838331,0.717161,-7.619465,2.372460,-7.145629,-2.728624,-5.983857,4.439962,-0.774292,-2.098823,1.545544,0.908223,5.371257,4.843101,4.292750,4.694002,9.160210,-9.865109,6.905441,-8.137655,-3.577680,5.743492,2.622894,4.163016,0.281025,9.317784,-8.095334],[2.483412,-8.868367,-5.970394,4.241649,8.814509,-4.467256,-9.122461,0.445036,9.989504,-7.349209,-1.364051,2.461151,1.756329,2.754938,3.007553,6.442549,3.092457,8.731351,8.651681,6.257626,-2.769439,-2.954306,-2.644499,4.570416,7.888822,-7.534301,-9.047061,-2.605652,-4.982981,-8.066544,4.121803,-0.622796,9.308482,8.644957,-3.427062,3.135663,-8.254638,-7.074662,3.302445,3.455507,4.287258,-9.335179,7.256462,9.261153,-7.981720,-9.976556,7.287458,-8.661700,-5.185642,7.648764,-9.437973,8.956001,-2.449518,7.342596,-8.496942,-0.656930,-6.787883,8.434984,3.524263,3.020515,-6.971032,-8.477061,7.396619,-8.042432,-3.255960,-1.841303,-5.663166,1.136662,1.116021,-3.328283,9.809219,8.990503,4.241749,-9.904340,5.618315,-1.593936,8.822373,5.892015,6.076286,-2.531935,2.086539,-2.275802,6.143446,-6.084786,9.385580,-7.337500,-2.408325,-7.784026,-5.651475,-2.711179,8.997493,0.192675,2.540577,8.947343,-0.989424,-0.374432,-3.604646,3.423200,9.650214,2.480967,-9.525840,8.905705,3.387681,-1.917717,-7.633747,-2.337378,4.664559,-8.765121,-3.716540,1.205364,-6.930135,3.263274,-9.431393,-6.597112,-7.600780,-2.919715,7.022159,8.819544,-7.498924,-6.200874,9.648119,-0.436697,-1.741204,2.241148,-0.130797,4.348323,3.961119,8.297615,0.410754,1.019713,7.244133,-8.594209,4.741037,-3.855462,0.978007,9.825342,5.444279,6.519253,-6.429804,-6.750117,5.209050,2.719651,-5.975139,-4.528662,-7.378992,-0.026270,-9.418996,-8.683668,-7.180761,3.045552,2.555626,-0.649024,-7.683970,-7.479761,0.124623,7.994511,-8.923768,4.861447,8.424089,-2.465701,4.277026,-1.872216,1.708342,3.978898,8.015502,1.056310,8.301057,5.489941,8.470555,2.374466,-0.033795,3.040072,9.735895,-8.624706,2.308695,5.246933,1.092586,-7.777237,-1.762515,-7.485695,-3.352226,9.780418,-0.049695,6.732688,-7.776225,-4.836073,1.227564,-7.127867,-1.049540,0.802785,6.909433,-0.762222,-0.681020,-5.745068,-6.580694,-2.023137,-1.456990,0.977234,-3.410226,9.022956,6.350984,-3.881435,5.347248,9.520131,4.199076,0.087278,0.754384,3.180848,-1.507041,2.393786,-1.503693,6.618229,0.420936,2.468776,7.315773,-2.749321,-2.452607,4.098209,7.299262,3.603116],[-4.253116,-9.066291,-5.018006,7.082344,1.895689,-1.421683,4.720379,-8.481837,-1.197080,-6.515445,-9.586509,-6.324314,4.472669,8.897961,-3.348001,6.707125,1.034412,8.216147,1.754560,6.985091,3.353996,2.468468,2.143477,3.027382,8.202971,-4.054496,-6.736156,3.732580,-1.838348,0.729376,0.147709,9.245717,-6.358000,4.419904,-7.725241,-3.486293,-1.678134,-7.080973,1.826760,3.597501,7.601723,5.302133,-1.440105,-1.147860,5.457681,3.040341,-0.560333,3.708611,4.790685,5.604038,1.558221,5.062230,9.091281,-3.036509,2.572615,5.191526,6.289356,3.717466,2.084317,-5.449238,1.655795,-5.395727,3.537088,-7.862608,-0.983574,-6.318840,1.403151,0.449394,9.238430,1.827646,8.245513,1.040543,3.224958,-6.872983,-2.948653,2.925485,-7.039404,-2.519838,-2.116398,6.655452,-5.859642,-9.127964,3.177532,-8.603867,2.897158,-6.888054,-7.746593,4.154503,-8.011837,3.736927,7.442938,-7.946775,-6.374248,2.328809,7.655562,5.541185,-4.824690,7.652207,0.723214,-5.206039,6.281556,5.871878,-8.555792,-1.799204,-9.084057,-2.181856,-9.868095,6.695978,1.472839,3.356159,8.467442,-7.480931,1.483945,-2.825567,9.686210,3.292174,9.731372,-2.137459,-5.901128,-1.489364,-1.435350,-8.380869,5.551916,2.439016,-2.229259,1.326378,1.376797,3.998111,5.977184,6.192808,-4.310663,9.997244,3.757685,9.661394,-3.547917,-2.772504,-6.155449,-5.250240,1.913143,-4.923321,-7.708038,4.383589,4.233857,-4.693525,-2.319726,2.354377,2.491070,-8.526989,7.016150,-8.350002,5.828208,-1.220368,3.016585,8.517183,7.047242,-8.777739,7.565987,2.481919,-5.341491,9.171742,-9.111462,3.442921,-9.664485,-2.457708,1.111904,5.834488,-5.088633,1.519211,-3.510597,-4.485890,-2.422262,-4.639114,-9.855749,2.589239,8.293994,-9.810254,0.077383,9.020085,1.380736,0.939815,-6.869992,-9.481453,7.496076,-6.071599,-0.224031,6.833166,8.273142,8.730552,4.691032,-7.668764,9.098306,-2.390675,-4.370746,-4.467454,-3.938692,6.867474,8.479730,2.705994,9.732304,-6.438813,-7.695878,-5.365102,7.449841,3.874379,-1.543697,-8.527047,-9.724404,1.242213,-2.244873,7.584264,4.903345,-7.464511,-9.638792,7.068550,9.829264,0.142855,9.088424,-1.028035,1.332015,-4.645802],[4.807636,-5.699489,9.530194,3.963570,8.743406,-3.686491,2.707572,2.532790,-5.256462,9.399756,8.729887,4.570136,-4.928598,7.422534,-8.177189,-9.855034,-6.542003,6.897747,-8.824640,-0.885753,0.443353,-8.007647,9.210063,-1.899983,3.609728,2.471800,9.133684,2.686517,-5.384049,9.151657,-1.026091,6.212580,-1.113008,8.288662,0.095641,6.767613,-9.862170,2.615172,0.592055,-1.844165,5.154832,0.295942,-4.762875,-1.548041,-1.391110,9.289763,5.908035,7.799278,-6.776212,-9.376021,-3.435231,-6.032766,-5.860216,-2.637762,-1.014025,-3.112254,9.505078,-2.013177,-5.005251,-9.825389,-5.977228,-2.369282,-3.982573,-1.810467,-9.434036,-9.079216,-1.895224,0.614258,-4.879285,-1.197580,-1.255231,-7.544181,5.542007,-6.334423,-5.563360,-1.977148,-7.033265,-6.313355,-5.183681,7.279902,-1.553475,-4.160794,0.361285,6.410189,6.601865,-9.148107,-0.932416,2.923277,4.599738,7.199495,0.333176,-9.384953,-0.873447,-5.975055,1.868771,8.091323,-4.714029,-5.304140,-8.579503,6.483965,-5.556064,3.903268,9.331157,-7.201688,-1.612453,-0.122747,1.353064,-2.059080,8.531718,-2.071518,-8.399825,-5.355297,0.294434,-4.798429,-2.710166,-1.277818,7.383789,7.030701,-9.440587,1.782226,-9.329714,-8.380515,8.829335,9.638376,-7.674251,3.570200,-3.339472,6.733795,8.155353,1.375499,5.971418,-3.044037,3.677844,1.445180,8.985770,7.299029,-8.073357,2.437566,-3.930574,1.839426,-9.990231,7.237310,-5.004941,7.862441,8.271839,-3.610902,-1.094276,7.503566,-3.159059,1.498984,-7.428555,3.243963,0.924755,-4.540724,-2.921642,-3.768458,-2.925797,7.122689,-9.853593,-3.208497,9.111959,-8.905277,8.132028,6.561222,2.023506,3.674643,2.044503,-0.378821,1.124631,-3.375858,-3.364309,4.686881,9.467231,-1.789704,2.695290,3.690875,0.617081,-9.424913,9.990061,-0.914760,-5.335944,-1.037462,8.322322,-7.458100,6.179283,-4.720720,5.342736,8.328298,-4.118726,-4.240134,-1.045230,-0.417513,-3.440733,9.508354,-6.504138,-7.956393,9.713670,3.441813,3.541092,-6.452583,-8.614227,8.057405,-9.874649,-3.598535,-5.189860,-0.545537,-6.047783,-0.236117,8.468398,8.955917,0.581335,-8.808961,-1.266097,9.712188,-0.990529,3.414064,-1.371006,-7.686147,1.942150,6.738469],[-6.437058,-1.037436,-4.948395,1.642090,-7.791674,-4.968403,-4.172939,8.117362,-5.865064,-4.044298,-6.747854,8.022247,-3.997332,7.508438,6.404594,0.481914,-2.496573,-2.778260,-5.023037,-7.660959,-5.003091,3.057256,5.329130,-2.163737,7.000595,-3.779983,-8.276212,4.460786,-0.497238,-2.521070,1.962771,9.295949,3.527791,6.703330,5.516518,5.070349,-0.897592,-9.132161,2.525508,0.069565,6.541508,-3.878387,9.063480,8.900401,-8.535928,4.814694,6.327373,3.768915,6.358723,2.067571,-9.699603,-7.217490,8.958569,-2.267872,9.215602,3.954075,-3.295813,-3.709716,4.052900,7.195167,9.130787,-4.804101,3.460944,-9.947408,-2.776369,6.864952,-8.117260,6.793469,-5.612703,-1.109014,4.233295,-4.480487,1.422453,2.417355,-0.579632,-9.620284,-9.611354,5.952827,-7.365743,-8.396858,3.323666,9.310842,6.957489,3.528394,-7.107112,-5.391721,0.831470,5.389064,8.729015,-0.072227,4.229238,-8.027062,0.341022,8.007890,2.484420,-2.324849,6.967461,-2.434082,-3.091663,-8.559472,7.783037,-5.099860,-2.674272,4.473163,-5.497657,9.241282,-3.294197,7.880410,2.154035,0.666021,-9.585276,8.930881,1.846835,5.004938,8.240568,-4.561822,-7.381596,-7.879771,2.330807,-4.212730,6.588573,7.481233,3.301409,7.338634,-0.406274,3.067083,-7.475117,-4.930567,-6.790447,4.066986,-9.280130,-9.451278,-6.629086,6.079832,-0.891382,2.395841,6.026903,4.953386,-8.218198,-7.290112,1.224788,9.647220,-4.219879,8.067333,1.034848,0.402065,7.450020,-0.497753,-9.434792,4.242681,-5.353201,-6.796612,2.036409,-1.814048,-2.742698,-7.542593,8.850136,7.128396,-8.602753,-4.445150,2.406299,7.019389,-4.138118,-5.446465,5.916818,0.292266,-9.619765,2.694155,-0.556239,6.397645,-6.577460,-9.576613,-8.356350,-1.732523,6.275929,-1.037416,-2.961920,2.314155,-0.813063,5.107857,3.332446,6.743569,-7.633512,4.400078,-0.886355,7.233069,0.106609,-4.047013,1.745161,-3.092242,-7.527650,0.268913,-4.054558,6.647951,-5.338052,-7.389821,5.146309,9.251608,-4.898195,-7.909700,-0.493112,-4.604198,-8.705358,9.599168,0.752697,-1.563176,-7.988702,-9.723501,-7.077066,3.233468,-0.641651,-2.253992,8.312173,2.802114,-1.886392,2.441439,5.971743,-0.095830,-0.921091,7.175577],[6.896656,4.487341,8.134851,-3.833542,6.506545,-9.301718,9.843510,-4.804350,-7.792883,4.306580,1.293372,9.063168,-5.167989,-0.980953,6.935133,-6.373487,3.743934,1.936148,7.064011,-7.462234,0.498473,-2.186648,9.169258,-4.366015,-5.869735,4.560511,-6.116065,-1.231071,-2.294897,9.703208,-0.795763,8.822954,-6.719441,-8.465046,-1.515221,-5.118689,1.303094,9.115897,0.094541,-4.604592,0.194153,-1.389653,2.136725,-5.564264,2.543814,9.682330,5.979257,-2.358793,1.488986,0.907411,0.414058,-8.330826,-6.338699,-6.760479,7.900894,1.627558,-0.967795,-0.612326,-8.889996,6.428373,-2.882374,5.001305,4.045171,6.061251,-3.782127,4.788799,7.402667,-6.008432,5.504481,6.789797,4.393542,0.478096,-8.745171,2.703341,-0.211594,8.828251,-9.625621,-4.877851,-7.881902,-7.474176,-8.420838,-7.094817,7.943589,3.962138,0.809064,7.891756,5.108933,-2.040544,-8.539131,-3.312161,7.823654,-0.646952,-5.115947,9.895037,-4.144195,9.282068,1.106177,-9.943688,-7.534701,9.475061,7.430384,-9.160110,4.526994,-2.432495,0.314447,-2.243825,-7.338335,-3.670016,1.355022,6.852564,8.209101,-6.055698,9.024370,-2.261244,-0.580965,0.115682,-0.930930,-9.466214,0.567568,-8.767707,3.945029,7.992696,4.884241,-3.648179,7.529836,-6.155328,-8.663843,-1.212517,-4.721380,7.369067,-6.551840,-6.701182,3.072187,8.162439,9.684871,7.199921,-7.458950,6.420131,-0.298453,5.632982,0.082609,-1.212784,-9.035220,0.973822,7.469451,-6.714081,-2.922192,9.100587,2.449600,-5.502102,-7.660084,-0.869777,-2.921347,-9.826994,0.365200,-5.948962,3.600467,4.912199,9.836894,-2.808892,3.274567,2.464211,0.488238,3.893029,0.518347,-5.703796,9.484449,-4.398676,-9.654526,-5.975898,-5.433203,-7.944850,-4.733348,-2.938764,4.155218,-6.121564,2.166441,-9.738015,-9.285901,9.434023,1.440069,2.519117,-7.353001,-9.411737,-1.869658,8.882867,3.153784,0.868625,8.974229,-1.175794,-2.394229,7.671756,-6.144089,9.881283,-2.920592,-6.456510,-1.814457,-2.607331,0.760162,8.183280,-4.122550,9.014634,-9.567455,1.422703,-7.299282,-6.450586,-0.365057,-5.816413,5.779974,-3.115408,-5.122923,3.537121,-4.766991,-4.526802,-3.652658,-8.341574,-3.091176,5.180660,-0.534543,-3.319568],[-1.417767,5.738907,-6.522966,6.811677,5.220235,0.125835,-2.859580,-5.267937,5.722778,-1.794382,-5.315252,-1.809260,-8.509296,-6.540705,-5.007970,6.179684,1.827458,3.829825,-8.334007,-0.107060,-8.822046,-9.705591,-2.516027,-9.417226,1.628479,-4.049036,9.036218,-2.421015,-0.244105,-9.844735,5.275765,2.172563,-4.569490,-6.024257,5.845594,1.070887,5.751050,-4.717607,-1.722290,4.319401,8.834271,-6.820239,-7.965403,1.075037,6.860399,7.187043,5.037869,3.792267,8.639125,0.400206,-5.964943,4.158413,-0.651648,-1.642132,-0.928158,-1.226642,3.265844,-7.949782,7.818454,-9.337616,1.802632,9.236210,-7.837962,-5.354263,-9.324537,-0.886346,-6.574722,-6.331043,6.480427,-6.475433,-7.619924,5.432484,6.713635,2.229866,9.210815,8.347558,2.044376,-5.594575,1.890354,-0.866616,-9.447300,0.295654,-3.415072,7.717521,-6.969865,3.119202,-6.936516,-2.310588,-6.376789,-6.101516,1.127804,-2.677551,-6.027407,-0.311292,4.022231,0.366622,8.827770,3.880059,2.572899,6.336003,-7.907674,-7.904011,9.808234,-5.369400,6.143611,-7.666673,-6.602845,3.530375,8.890583,-7.784681,-5.144276,-2.811275,-8.919595,0.691324,-7.847668,5.909437,7.771362,6.724152,-9.576202,-7.685959,-0.825072,-3.620268,8.005693,1.351069,1.640015,-7.103877,6.843900,6.248076,-7.790913,5.920500,3.118588,2.079982,3.721211,-5.562531,-6.526853,7.176008,8.861048,1.732441,8.711015,1.413229,-1.037699,4.334887,-1.835847,-0.407255,9.986688,7.714751,-5.274714,-8.189418,1.038944,-3.936080,5.159141,-0.290765,0.354882,-2.695679,-2.389168,-6.397988,0.949174,-6.834609,-3.714221,-2.417660,4.918364,8.519737,-2.172015,0.401413,-9.216310,2.071978,3.011316,-1.301323,3.084455,9.341288,-3.780158,-7.520294,7.151519,1.991377,4.701770,-1.109553,4.257666,7.048505,5.984552,4.495624,-5.319054,9.596852,-2.032383,-8.768791,-2.548070,0.721976,6.428363,-5.021744,-1.308418,6.477301,0.839498,-5.452415,8.351575,-3.877372,-9.954662,-1.212367,-8.428002,-6.033712,6.028272,-3.433650,3.989481,-8.974841,-7.048489,4.595079,-2.930534,-9.134900,-6.277265,-0.454953,-3.840015,-7.659150,-8.328563,5.748342,6.962145,4.931214,0.510302,-4.654643,0.796491,2.795319,-3.410832,-0.769533]], dtype = "float64")#candidate|4150|(7, 220)|const|float64
call_4148 = relay.TupleGetItem(func_3976_call(relay.reshape(var_4140.astype('int16'), [396,]), relay.reshape(var_4149.astype('float32'), [150, 5]), relay.reshape(const_4150.astype('float64'), [1540,]), ), 9)
call_4151 = relay.TupleGetItem(func_3980_call(relay.reshape(var_4140.astype('int16'), [396,]), relay.reshape(var_4149.astype('float32'), [150, 5]), relay.reshape(const_4150.astype('float64'), [1540,]), ), 9)
func_2841_call = mod.get_global_var('func_2841')
func_2844_call = mutated_mod.get_global_var('func_2844')
const_4153 = relay.const([[-9.431248,0.927392,5.483877,-0.131222,7.995902,5.116160,0.097117,-3.919693,8.075934,-5.521019,8.850615,8.579459],[8.667322,3.590576,-6.477986,-9.636714,5.611178,-2.092103,-5.544916,3.776896,-8.564600,-4.805120,-7.182696,5.478959],[-2.669606,-9.558879,-7.651307,2.261078,7.915097,0.128652,8.490811,-9.523217,-9.103472,8.891793,-7.744447,-5.902723],[1.071657,-9.499505,8.067256,-4.040893,-5.568421,7.591933,-5.116125,-9.833993,6.124071,5.841588,-2.786835,-5.997685],[5.777235,6.044326,-4.581575,-1.256864,8.099543,1.798730,-1.111368,-1.910866,0.424093,0.600653,-4.689894,3.420273],[-3.589134,-4.103950,-3.080858,4.913777,7.827709,5.467469,-3.874371,5.633072,9.210463,-7.553456,-2.418729,-0.187656],[-3.504361,7.105303,9.427457,9.236560,-0.492458,-1.900686,-4.617748,-7.488235,0.947075,4.020944,2.327478,2.823473],[-9.514766,-7.033948,-2.196202,-9.262214,-9.750687,5.866296,-6.753646,1.674327,-9.271561,5.919938,2.684095,-4.560727],[-9.403797,-1.998327,4.719532,-7.770045,7.600459,-6.276782,2.312146,7.072433,8.502624,6.484730,0.037360,-9.961843],[4.877501,-2.830681,4.599887,4.035813,-0.609453,5.941524,6.145419,6.929185,-7.655312,-7.277748,-5.605239,0.732009],[-8.474826,0.350422,-9.051284,8.701736,-8.098172,-8.028962,3.752234,2.591849,-8.522127,4.859626,-4.929385,-8.293877],[-8.433342,-9.836320,-8.706394,-0.793702,-2.400793,-3.975276,6.997566,-7.317676,3.827587,6.301791,-4.635019,0.297232],[6.642004,-0.823642,7.698537,-3.785975,5.615191,0.037236,2.179432,-4.651696,6.145422,-8.134043,1.142743,-5.049014],[1.017870,4.684152,-6.152508,-0.276812,3.179733,9.058161,-9.826807,-9.683287,-8.753338,8.575104,-0.262790,-7.706215],[6.637391,-3.014532,4.405027,0.853268,9.077602,4.314813,1.501931,8.829050,-8.013075,-4.999806,8.716708,0.763691],[-2.242129,1.273841,-1.421891,-3.040487,-8.411795,-3.734338,-4.859143,-9.781194,-2.158579,6.952005,-2.880645,-7.740977],[-5.404907,8.344204,-9.745681,4.598746,2.612860,4.240502,-9.418406,5.028482,-0.612934,6.898010,-4.528360,-0.023758],[1.450146,-5.928603,4.983129,-4.233411,4.944494,2.838042,-8.568993,-9.518637,5.295106,-1.925081,-0.848624,-1.861248],[9.501286,1.155497,6.313734,9.058562,5.365505,-9.118975,-8.690974,-3.401919,-0.516417,1.004390,6.626969,4.109376],[6.998099,-2.920016,9.710986,4.930886,-8.792384,-6.274934,-9.083016,-6.374856,-2.186651,-9.170703,-7.162103,-8.431557],[-8.720638,1.688866,-8.171153,-8.675426,-9.784054,6.951690,5.128544,7.617325,7.166177,-5.557763,9.159405,3.228677],[2.971367,-8.678031,7.138403,9.796561,7.156164,0.836635,2.174218,2.006215,-7.997048,7.689716,9.902918,-2.858031],[6.458545,2.804286,1.403082,-6.945181,-9.988547,-0.360796,1.671772,-5.579628,5.927315,-1.792550,1.930372,-0.750459],[-6.227770,-3.083317,-4.105253,-5.789764,2.217610,-3.978502,4.641101,7.369761,-1.143064,8.657158,6.422737,-0.756354],[1.719702,5.484395,-9.837758,-8.267071,-5.635125,1.666033,3.958072,-9.505538,3.158528,-4.545281,0.612590,-8.226339],[7.489236,5.148462,4.977985,7.265607,3.619970,-3.234368,7.835889,-1.862368,1.785370,-1.225809,-6.003607,8.286796],[-4.785490,-2.189358,8.402516,6.764933,-1.038680,-9.605848,-9.497476,-4.219475,-8.006598,9.244609,3.741132,1.811651],[9.424277,-7.628970,-9.656037,8.647369,6.050023,-6.820739,5.030491,3.694109,5.927851,1.617092,-3.294978,7.862477],[-6.509873,-1.923494,-6.615487,-4.558807,9.640109,0.222476,-9.618283,-1.855041,-6.061671,0.674160,-8.013359,3.321525],[-2.011989,9.035635,-5.272240,4.065833,-1.393784,8.734208,-8.723440,-2.490020,-5.258946,6.832786,0.026696,-7.244549],[0.018953,9.594177,-6.688516,4.565953,6.581537,8.425775,1.725011,0.828722,-5.540174,-9.379570,-7.810264,3.731303],[8.884885,-1.589519,-5.271356,-0.465423,-8.741413,-6.723999,4.163486,9.898306,-0.708490,-9.038364,8.395011,2.604280],[-9.943020,-4.971127,0.050425,6.606406,6.122103,6.769914,-2.721000,7.718553,7.862859,-2.409096,2.084344,3.291418],[-1.977335,9.004199,0.350275,-0.612701,-3.942049,9.179116,-9.013635,-3.861710,-6.462555,6.451500,-4.740495,0.595982],[-5.498898,-2.861734,0.084098,-1.162691,4.803665,4.861498,-4.707112,0.921712,6.710838,-4.288432,5.801834,9.342799],[-6.361792,5.813374,3.881433,-6.109583,-8.691250,6.932345,6.334023,7.992420,4.140911,2.993812,-2.320804,-2.866428],[7.669891,9.759926,-5.246662,-2.819563,-2.985458,4.972810,-4.337941,2.726974,-7.486256,-7.173675,-8.756634,-0.023077],[0.590958,-7.132884,-0.053708,7.300422,2.048145,1.116761,5.141908,0.184516,2.333196,5.125779,-7.839653,-5.520131],[8.720107,-3.739214,-2.985344,3.734617,9.466337,-3.032976,-6.930940,6.883199,-2.708226,0.982654,1.082679,4.257525],[7.910662,-0.738422,-1.553572,-7.900654,-7.954984,6.693761,-5.223644,-8.171545,-9.644561,5.215483,-6.718810,7.744213],[0.086952,-6.408279,5.292074,0.352087,-7.249384,-3.009934,-9.894558,-3.170300,-1.118701,-6.020415,-6.971640,-1.883807],[1.682229,1.362295,-2.201482,-3.568538,-2.044700,-3.761453,7.602390,-5.875335,-3.866061,-7.338077,-7.317929,5.210500],[-2.256474,3.109958,-0.709439,-9.212576,4.393355,8.297270,-9.265056,-0.004112,-1.301486,-3.259478,-5.964107,6.600491],[7.825007,-3.092048,-0.098034,-0.529480,5.861439,9.003672,4.249071,9.592148,4.864988,9.203684,-4.936364,-1.678723],[-0.064264,-9.554171,-2.668798,4.089441,1.509881,5.412770,0.102527,2.887474,3.194723,-9.721714,-9.769075,3.177923],[-2.781784,8.337697,-8.189469,1.355205,-5.754676,-0.912895,2.772486,-1.113314,3.289637,-3.809449,-7.029304,1.444839],[-3.157702,-7.318699,4.554302,5.918835,-0.552431,-0.390936,-3.977170,-7.337935,-3.317154,6.504029,-6.114595,-2.838614],[8.309171,1.034047,-7.816033,4.410334,-3.709714,4.682341,-8.860171,-1.551856,1.391000,9.516962,-3.959992,-7.204055],[-7.416705,9.519669,-7.410814,-5.296300,-3.469351,3.636359,-1.061334,-3.154747,-8.550740,-5.385026,-3.401913,-5.797847],[-4.020737,9.075174,3.177532,3.242537,-9.415771,-2.757888,-6.943350,-2.958903,-5.601954,-6.116765,2.000629,-4.326565],[-4.091938,-6.593935,8.996718,6.509325,-7.439744,-7.870679,-6.202533,-6.073275,-7.288564,9.571461,2.936178,-7.124018],[2.462326,8.284346,1.290713,9.485779,-2.212279,-3.164009,-1.490414,2.902221,-8.120348,-3.933202,3.449904,0.950766],[3.087783,7.547147,5.071898,3.099581,-7.153512,4.480321,-1.258629,8.194275,-5.590812,-8.803044,6.134609,0.928958],[0.306423,7.978028,-2.981163,5.744902,9.896024,0.231234,-3.033832,-5.709567,6.728636,-0.354550,-7.849275,-0.413572],[0.530769,5.381615,0.596984,-5.723855,-0.908152,9.439797,7.351269,-9.217632,6.941102,1.610874,-9.438554,-4.013068],[7.341945,3.819760,5.403535,-1.321809,-3.982781,1.887935,-6.099220,3.426345,3.167435,-7.033024,6.471484,-7.131418],[-7.293949,-8.688373,4.425375,-6.545039,1.783269,-8.193181,8.999227,3.682256,-0.967699,4.140734,-9.198691,1.634128],[-9.643873,-7.768390,-1.141253,-7.099401,-6.801144,-2.475857,-3.040710,-2.384714,-4.034829,-1.171581,5.871269,-8.644370],[-1.583097,6.745170,-6.621911,2.257438,-8.281348,-6.106122,-5.759308,8.778332,2.937616,-1.825665,-0.847188,5.021236],[4.960457,-7.129266,2.235740,-4.370456,9.860818,-2.653722,-9.372589,-2.202588,-9.955688,1.581343,4.956159,1.894583],[-8.377698,-9.746647,6.222617,-9.079606,6.501506,0.631059,4.677842,3.389966,4.466783,-0.176335,6.052486,-7.301316],[3.188998,-6.219732,-5.374768,0.642718,8.056582,1.393734,5.883888,0.891552,2.608890,8.853294,-6.153145,3.996935],[-1.767863,0.657262,-9.419862,9.089012,3.543600,-5.972226,-1.060403,6.352961,-4.310771,-1.726345,-7.612702,-5.937873],[-1.948376,-6.908384,-8.370932,0.310613,9.561820,-9.712771,-7.963262,9.985031,1.196132,-6.324041,1.675942,8.704938],[-2.719514,5.551742,4.140500,-1.007462,5.029152,-8.830166,-1.133409,-6.799076,-0.730642,5.686925,4.489597,2.338654],[8.243735,-1.802658,1.764031,-1.729383,5.904111,-5.904125,3.013342,-8.939068,1.285580,8.626151,-0.493757,3.832170],[-4.342301,-4.883000,2.263114,3.363578,0.216873,1.443218,3.991031,-1.380687,2.357924,-2.572044,-5.612725,2.186900],[3.151341,2.110421,-1.668932,2.660457,-3.439165,-7.752170,5.992822,-9.312671,2.406392,0.448762,2.313253,9.119216],[-7.509528,4.947724,2.672972,-2.470042,2.787480,-5.058513,-4.152239,8.548514,5.235273,-6.746931,5.814666,8.800487],[-8.829254,4.698105,5.914512,-1.531809,-9.935312,-7.723863,-8.778455,5.066464,-2.112174,3.362497,3.957032,6.845127],[1.270740,3.599216,-1.005856,2.900927,7.696276,-4.566021,-3.606465,-8.025132,6.671001,-6.857701,9.187298,5.556115],[3.518777,-5.532602,7.902214,-2.432996,0.599056,3.349405,-6.415597,-7.373078,-9.491137,-2.262425,0.873436,7.305747],[9.066146,-2.859767,3.476952,8.332116,-1.927977,2.833777,8.486876,-9.731167,6.799922,3.403625,3.346976,9.525628],[-4.576167,-5.426595,-5.408070,-8.539552,3.104769,-6.863316,5.744465,9.876000,3.573069,1.955593,-0.901684,7.967724],[-4.936582,-4.653300,-1.562604,6.561110,6.536775,-1.832101,7.073784,-7.768775,5.631253,-0.601934,-6.979658,4.758068],[-8.568056,-4.575745,-7.950743,2.798935,-9.863217,-3.099592,1.840710,-7.660150,0.113606,9.613246,2.690438,1.439214],[-7.426449,7.007862,-1.214747,1.211794,-9.418637,9.146840,7.150530,5.001315,-2.055650,1.539273,5.890692,9.507997],[-3.856653,4.910915,-7.269449,6.520982,-4.349670,4.588646,5.357367,-0.710488,-4.808284,-6.457635,-2.685715,-4.156643],[-2.288727,-8.742529,1.294719,-1.630251,-0.266618,2.622971,5.373893,-7.225809,-1.816193,-6.956256,-8.665767,9.912069],[-9.621623,-2.893854,4.850478,-2.259562,-0.812486,5.144429,-3.201914,-6.554898,2.364128,3.242403,-5.082203,1.557997],[3.291501,-1.860587,-5.102843,-8.182702,6.167088,4.476161,4.414933,-3.275018,-6.159007,2.195405,-5.819011,-1.829202],[-8.947815,-1.749528,6.790897,3.644589,0.117322,-8.520983,8.334597,-2.503585,2.127081,2.962164,8.721582,6.321920],[2.855353,-0.591888,-4.764435,4.933427,-8.947139,2.469122,8.305984,-1.202483,-3.418759,-6.909726,-9.703844,-8.827910],[-3.041346,-2.810392,-6.405419,-2.179471,9.569575,1.838650,0.041018,-1.319847,-3.351983,5.278836,-4.102938,-6.992903],[-2.556767,-9.306957,9.653352,-5.624648,-3.390630,-6.934216,-8.368306,-2.885169,1.219924,8.046295,-7.334567,8.266136],[2.533356,1.300717,-2.767254,-5.670970,-1.770033,0.965990,-1.517462,-4.509781,6.987940,2.862439,2.978150,0.699583],[8.965647,2.989772,-8.901256,-1.472818,2.605987,9.115718,2.077078,-2.273725,-5.757632,1.319244,0.654543,4.908713],[-2.520938,2.271731,-2.470977,8.654747,1.640802,8.671137,2.176587,-9.170489,5.559359,-0.118037,1.357900,4.873381],[9.785444,-8.857472,-6.460545,4.275041,-8.569371,-6.488875,2.930056,-9.705409,-5.389046,-3.118197,4.660845,-1.104609],[-7.673474,1.436770,2.304722,6.407830,-4.442895,0.433284,2.011131,0.395519,8.005823,-3.493266,1.427135,-9.573459],[-5.903097,6.987561,4.128325,2.627474,9.538482,7.231659,3.846824,9.491004,2.510459,-6.858451,6.104854,-3.412757],[6.280767,2.460965,-9.154810,-2.846855,-3.388058,-7.491196,7.049787,0.985478,2.982528,5.554239,2.863397,-4.830370],[1.223343,1.525790,-4.497241,-5.118297,-4.065562,7.280993,7.519454,3.028581,6.045492,0.498539,2.066387,8.177258],[4.474150,2.255339,1.265206,2.882806,-2.019054,1.430144,1.296440,-9.571282,6.271781,-4.405684,3.316870,-5.741825],[6.015328,5.174817,-6.441403,2.310104,8.622729,-8.077733,-3.687974,-0.455657,-5.755747,-9.278658,3.868055,2.639231],[-0.153276,7.502839,-8.694415,-6.699480,1.761670,-7.730766,7.938987,5.825680,9.997061,6.485027,-8.413393,-8.887485],[-3.631898,-7.059970,-0.425211,-6.789563,5.626377,-9.478090,-5.470391,2.459928,5.341940,9.805634,-6.742274,1.713896],[6.605422,4.532071,-1.400478,-4.582349,-6.455174,-5.369314,6.416660,9.912112,-8.572815,-6.464742,4.577504,-4.047203],[8.316785,3.645531,2.202891,8.342764,7.410948,-1.018286,2.040129,-9.101935,4.771385,-9.756134,-7.883741,2.915510],[1.849399,6.210152,1.328877,6.211936,3.264374,-1.370142,-3.172926,3.052007,0.525707,5.839450,4.014456,-2.450422],[9.086335,9.405763,3.568160,-8.101928,-4.295311,2.707132,-2.319844,-4.610709,8.465740,-0.866762,6.512298,2.379770],[8.153989,5.501194,2.805698,7.061146,-7.590354,-0.001255,3.421926,-8.281295,-6.553219,3.904394,4.437328,-7.703352],[8.098772,-2.105355,3.589153,1.659920,-1.745231,3.576402,-5.559528,-6.239510,6.861681,-3.556905,-8.253838,-5.593081],[-8.301943,6.369130,6.136616,-0.059760,-8.690247,6.986163,0.696330,-3.969830,4.543960,0.200761,-9.424147,-7.397398]], dtype = "float64")#candidate|4153|(104, 12)|const|float64
call_4152 = relay.TupleGetItem(func_2841_call(relay.reshape(const_4153.astype('float64'), [16, 13, 6])), 1)
call_4154 = relay.TupleGetItem(func_2844_call(relay.reshape(const_4153.astype('float64'), [16, 13, 6])), 1)
uop_4155 = relay.sigmoid(uop_4057.astype('float32')) # shape=(16, 16, 4)
uop_4159 = relay.sqrt(uop_4080.astype('float64')) # shape=(16, 16, 4)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_4164 = relay.TupleGetItem(func_1564_call(), 3)
call_4165 = relay.TupleGetItem(func_1566_call(), 3)
func_1645_call = mod.get_global_var('func_1645')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_4175 = relay.TupleGetItem(func_1645_call(relay.reshape(const_4150.astype('float64'), [1540,])), 0)
call_4176 = relay.TupleGetItem(func_1648_call(relay.reshape(const_4150.astype('float64'), [1540,])), 0)
bop_4185 = relay.bitwise_and(uop_4155.astype('int16'), var_4120.astype('int16')) # shape=(16, 16, 4)
output = relay.Tuple([call_4072,call_4105,call_4113,var_4114,call_4119,const_4121,call_4139,var_4140,call_4143,call_4148,var_4149,const_4150,call_4152,const_4153,uop_4159,call_4164,call_4175,bop_4185,])
output2 = relay.Tuple([call_4073,call_4106,call_4115,var_4114,call_4122,const_4121,call_4141,var_4140,call_4144,call_4151,var_4149,const_4150,call_4154,const_4153,uop_4159,call_4165,call_4176,bop_4185,])
func_4189 = relay.Function([var_4056,var_4114,var_4120,var_4140,var_4149,], output)
mod['func_4189'] = func_4189
mod = relay.transform.InferType()(mod)
var_4190 = relay.var("var_4190", dtype = "float32", shape = (16, 16, 4))#candidate|4190|(16, 16, 4)|var|float32
var_4191 = relay.var("var_4191", dtype = "float64", shape = (140,))#candidate|4191|(140,)|var|float64
var_4192 = relay.var("var_4192", dtype = "float32", shape = ())#candidate|4192|()|var|float32
var_4193 = relay.var("var_4193", dtype = "int16", shape = (396, 1))#candidate|4193|(396, 1)|var|int16
var_4194 = relay.var("var_4194", dtype = "float32", shape = (750,))#candidate|4194|(750,)|var|float32
output = func_4189(var_4190,var_4191,var_4192,var_4193,var_4194,)
func_4195 = relay.Function([var_4190,var_4191,var_4192,var_4193,var_4194,], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4212 = relay.var("var_4212", dtype = "float64", shape = (12, 12, 13))#candidate|4212|(12, 12, 13)|var|float64
uop_4213 = relay.log10(var_4212.astype('float64')) # shape=(12, 12, 13)
output = uop_4213
output2 = uop_4213
func_4215 = relay.Function([var_4212,], output)
mod['func_4215'] = func_4215
mod = relay.transform.InferType()(mod)
var_4216 = relay.var("var_4216", dtype = "float64", shape = (12, 12, 13))#candidate|4216|(12, 12, 13)|var|float64
output = func_4215(var_4216)
func_4217 = relay.Function([var_4216], output)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_4239 = relay.TupleGetItem(func_1564_call(), 1)
call_4240 = relay.TupleGetItem(func_1566_call(), 1)
output = relay.Tuple([call_4239,])
output2 = relay.Tuple([call_4240,])
func_4241 = relay.Function([], output)
mod['func_4241'] = func_4241
mod = relay.transform.InferType()(mod)
output = func_4241()
func_4242 = relay.Function([], output)
mutated_mod['func_4242'] = func_4242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_4333 = func_3722_call()
call_4334 = func_3722_call()
uop_4344 = relay.rsqrt(call_4333.astype('float32')) # shape=(14, 11, 10)
uop_4346 = relay.rsqrt(call_4334.astype('float32')) # shape=(14, 11, 10)
output = relay.Tuple([uop_4344,])
output2 = relay.Tuple([uop_4346,])
func_4349 = relay.Function([], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
mutated_mod['func_4349'] = func_4349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mutated_mod.get_global_var('func_4349')
call_4350 = func_4349_call()
output = call_4350
func_4351 = relay.Function([], output)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_4398 = func_2105_call()
call_4399 = func_2105_call()
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_4410 = func_3483_call()
call_4411 = func_3483_call()
output = relay.Tuple([call_4398,call_4410,])
output2 = relay.Tuple([call_4399,call_4411,])
func_4420 = relay.Function([], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
output = func_4420()
func_4421 = relay.Function([], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_4452 = func_3483_call()
call_4453 = func_3483_call()
func_3587_call = mod.get_global_var('func_3587')
func_3588_call = mutated_mod.get_global_var('func_3588')
call_4461 = func_3587_call()
call_4462 = func_3587_call()
output = relay.Tuple([call_4452,call_4461,])
output2 = relay.Tuple([call_4453,call_4462,])
func_4474 = relay.Function([], output)
mod['func_4474'] = func_4474
mod = relay.transform.InferType()(mod)
output = func_4474()
func_4475 = relay.Function([], output)
mutated_mod['func_4475'] = func_4475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_4613 = relay.TupleGetItem(func_1121_call(), 1)
call_4614 = relay.TupleGetItem(func_1122_call(), 1)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_4623 = func_3722_call()
call_4624 = func_3722_call()
func_2715_call = mod.get_global_var('func_2715')
func_2719_call = mutated_mod.get_global_var('func_2719')
const_4631 = relay.const([-8.659510,-1.635381,-5.060084,-6.217013,1.999737,-6.713701,-8.539820,-7.865955,-9.895271,-1.545690,4.000221,-6.043205,0.387994,8.904695,-8.604434,0.861181,-9.555946,-5.894276,-8.080127,7.658126,6.838620,8.823804,7.721324,0.864736,0.801782,1.755020,-9.584958,4.076842,-5.080117,-2.189228,0.590262,3.202161,7.752666,-4.238267,-5.762587,-4.754651,-3.694058,4.991634,4.747380,4.580462,-9.783903,5.340817,0.949875,1.789650,3.951904,-7.296937,3.780081,-4.610215,4.332867,-8.119023,5.063447,9.468440,-7.418202,8.829490,0.728164,6.196844,3.296418,8.350826,8.573932,-3.541470,-5.057848,9.921679,-4.342111,0.826783,-3.753031,-2.494866,-5.482358,3.662778,-8.498428,-2.088715,-8.104367,-4.733740,-2.032535,-2.732548,-9.857853,-6.480595,8.651746,-4.962467,1.706024,7.447534,9.989524,2.301550,7.277875,5.801016,6.487384,5.327681,6.954028,8.007063,1.381488,2.333516,-6.972002,1.642099,9.211357,-8.883101,3.695288,-5.776040,2.260887,-4.330328,4.312020,-8.472504,9.308616,-4.376402,6.983946,-7.070804,6.844706,-9.016054,2.378908,5.964198,0.796593,1.505867,7.714906,-0.741081,-3.455474,7.649999,-3.797695,-4.835182,3.676826,-2.019212,3.974491,-8.947761,-1.044924,-8.024910,-1.904864,-6.700847,0.767349,-8.652456,6.572526,8.405183,1.998499,2.946097,0.030067,1.390641,-1.315168,0.482468,-8.044895,-6.411846,0.854051,-1.908584,-6.123805,6.577746,-6.465026,-6.830926,-6.061172,2.817897,-7.405684,5.700389,6.079009,1.174280,-2.137460,2.831066], dtype = "float64")#candidate|4631|(150,)|const|float64
var_4632 = relay.var("var_4632", dtype = "float32", shape = (1485,))#candidate|4632|(1485,)|var|float32
call_4630 = relay.TupleGetItem(func_2715_call(relay.reshape(const_4631.astype('float64'), [150,]), relay.reshape(var_4632.astype('float32'), [1485,]), ), 1)
call_4633 = relay.TupleGetItem(func_2719_call(relay.reshape(const_4631.astype('float64'), [150,]), relay.reshape(var_4632.astype('float32'), [1485,]), ), 1)
func_3498_call = mod.get_global_var('func_3498')
func_3501_call = mutated_mod.get_global_var('func_3501')
var_4641 = relay.var("var_4641", dtype = "float64", shape = (405,))#candidate|4641|(405,)|var|float64
call_4640 = func_3498_call(relay.reshape(var_4641.astype('float64'), [9, 5, 9]))
call_4642 = func_3498_call(relay.reshape(var_4641.astype('float64'), [9, 5, 9]))
output = relay.Tuple([call_4613,call_4623,call_4630,const_4631,var_4632,call_4640,var_4641,])
output2 = relay.Tuple([call_4614,call_4624,call_4633,const_4631,var_4632,call_4642,var_4641,])
func_4643 = relay.Function([var_4632,var_4641,], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
var_4644 = relay.var("var_4644", dtype = "float32", shape = (1485,))#candidate|4644|(1485,)|var|float32
var_4645 = relay.var("var_4645", dtype = "float64", shape = (405,))#candidate|4645|(405,)|var|float64
output = func_4643(var_4644,var_4645,)
func_4646 = relay.Function([var_4644,var_4645,], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4648 = relay.var("var_4648", dtype = "int64", shape = (10, 2, 8))#candidate|4648|(10, 2, 8)|var|int64
var_4649 = relay.var("var_4649", dtype = "int64", shape = (10, 2, 8))#candidate|4649|(10, 2, 8)|var|int64
bop_4650 = relay.minimum(var_4648.astype('int64'), relay.reshape(var_4649.astype('int64'), relay.shape_of(var_4648))) # shape=(10, 2, 8)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_4660 = relay.TupleGetItem(func_897_call(), 2)
call_4661 = relay.TupleGetItem(func_899_call(), 2)
output = relay.Tuple([bop_4650,call_4660,])
output2 = relay.Tuple([bop_4650,call_4661,])
func_4666 = relay.Function([var_4648,var_4649,], output)
mod['func_4666'] = func_4666
mod = relay.transform.InferType()(mod)
var_4667 = relay.var("var_4667", dtype = "int64", shape = (10, 2, 8))#candidate|4667|(10, 2, 8)|var|int64
var_4668 = relay.var("var_4668", dtype = "int64", shape = (10, 2, 8))#candidate|4668|(10, 2, 8)|var|int64
output = func_4666(var_4667,var_4668,)
func_4669 = relay.Function([var_4667,var_4668,], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4684 = relay.TupleGetItem(func_3115_call(), 0)
call_4685 = relay.TupleGetItem(func_3116_call(), 0)
output = relay.Tuple([call_4684,])
output2 = relay.Tuple([call_4685,])
func_4691 = relay.Function([], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mutated_mod.get_global_var('func_4691')
call_4692 = func_4691_call()
output = call_4692
func_4693 = relay.Function([], output)
mutated_mod['func_4693'] = func_4693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4241_call = mod.get_global_var('func_4241')
func_4242_call = mutated_mod.get_global_var('func_4242')
call_4708 = relay.TupleGetItem(func_4241_call(), 0)
call_4709 = relay.TupleGetItem(func_4242_call(), 0)
output = call_4708
output2 = call_4709
func_4710 = relay.Function([], output)
mod['func_4710'] = func_4710
mod = relay.transform.InferType()(mod)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4710_call = mutated_mod.get_global_var('func_4710')
call_4711 = func_4710_call()
output = call_4711
func_4712 = relay.Function([], output)
mutated_mod['func_4712'] = func_4712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3096_call = mod.get_global_var('func_3096')
func_3097_call = mutated_mod.get_global_var('func_3097')
call_4719 = func_3096_call()
call_4720 = func_3096_call()
func_3096_call = mod.get_global_var('func_3096')
func_3097_call = mutated_mod.get_global_var('func_3097')
call_4724 = func_3096_call()
call_4725 = func_3096_call()
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4739 = relay.TupleGetItem(func_3115_call(), 0)
call_4740 = relay.TupleGetItem(func_3116_call(), 0)
func_1223_call = mod.get_global_var('func_1223')
func_1225_call = mutated_mod.get_global_var('func_1225')
call_4745 = relay.TupleGetItem(func_1223_call(), 0)
call_4746 = relay.TupleGetItem(func_1225_call(), 0)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_4749 = relay.TupleGetItem(func_2375_call(), 0)
call_4750 = relay.TupleGetItem(func_2377_call(), 0)
func_3587_call = mod.get_global_var('func_3587')
func_3588_call = mutated_mod.get_global_var('func_3588')
call_4758 = func_3587_call()
call_4759 = func_3587_call()
output = relay.Tuple([call_4719,call_4724,call_4739,call_4745,call_4749,call_4758,])
output2 = relay.Tuple([call_4720,call_4725,call_4740,call_4746,call_4750,call_4759,])
func_4762 = relay.Function([], output)
mod['func_4762'] = func_4762
mod = relay.transform.InferType()(mod)
output = func_4762()
func_4763 = relay.Function([], output)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_4764 = relay.TupleGetItem(func_4762_call(), 2)
call_4765 = relay.TupleGetItem(func_4763_call(), 2)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_4768 = relay.TupleGetItem(func_4420_call(), 1)
call_4769 = relay.TupleGetItem(func_4421_call(), 1)
bop_4772 = relay.right_shift(call_4768.astype('int16'), relay.reshape(call_4764.astype('int16'), relay.shape_of(call_4768))) # shape=(360,)
bop_4775 = relay.right_shift(call_4769.astype('int16'), relay.reshape(call_4765.astype('int16'), relay.shape_of(call_4769))) # shape=(360,)
func_3342_call = mod.get_global_var('func_3342')
func_3345_call = mutated_mod.get_global_var('func_3345')
var_4813 = relay.var("var_4813", dtype = "float64", shape = (150,))#candidate|4813|(150,)|var|float64
call_4812 = relay.TupleGetItem(func_3342_call(relay.reshape(var_4813.astype('float64'), [150,])), 0)
call_4814 = relay.TupleGetItem(func_3345_call(relay.reshape(var_4813.astype('float64'), [150,])), 0)
output = relay.Tuple([bop_4772,call_4812,var_4813,])
output2 = relay.Tuple([bop_4775,call_4814,var_4813,])
func_4819 = relay.Function([var_4813,], output)
mod['func_4819'] = func_4819
mod = relay.transform.InferType()(mod)
var_4820 = relay.var("var_4820", dtype = "float64", shape = (150,))#candidate|4820|(150,)|var|float64
output = func_4819(var_4820)
func_4821 = relay.Function([var_4820], output)
mutated_mod['func_4821'] = func_4821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_4941 = func_3483_call()
call_4942 = func_3483_call()
uop_4950 = relay.sqrt(call_4941.astype('float64')) # shape=(360,)
uop_4952 = relay.sqrt(call_4942.astype('float64')) # shape=(360,)
func_1719_call = mod.get_global_var('func_1719')
func_1722_call = mutated_mod.get_global_var('func_1722')
var_4960 = relay.var("var_4960", dtype = "float32", shape = ())#candidate|4960|()|var|float32
var_4961 = relay.var("var_4961", dtype = "float32", shape = (216,))#candidate|4961|(216,)|var|float32
call_4959 = relay.TupleGetItem(func_1719_call(relay.reshape(var_4960.astype('float32'), []), relay.reshape(var_4961.astype('float32'), [12, 2, 9]), ), 1)
call_4962 = relay.TupleGetItem(func_1722_call(relay.reshape(var_4960.astype('float32'), []), relay.reshape(var_4961.astype('float32'), [12, 2, 9]), ), 1)
output = relay.Tuple([uop_4950,call_4959,var_4960,var_4961,])
output2 = relay.Tuple([uop_4952,call_4962,var_4960,var_4961,])
func_4965 = relay.Function([var_4960,var_4961,], output)
mod['func_4965'] = func_4965
mod = relay.transform.InferType()(mod)
var_4966 = relay.var("var_4966", dtype = "float32", shape = ())#candidate|4966|()|var|float32
var_4967 = relay.var("var_4967", dtype = "float32", shape = (216,))#candidate|4967|(216,)|var|float32
output = func_4965(var_4966,var_4967,)
func_4968 = relay.Function([var_4966,var_4967,], output)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_5012 = func_2105_call()
call_5013 = func_2105_call()
output = relay.Tuple([call_5012,])
output2 = relay.Tuple([call_5013,])
func_5017 = relay.Function([], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5018 = func_5017_call()
output = call_5018
func_5019 = relay.Function([], output)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5043 = relay.var("var_5043", dtype = "int8", shape = (7, 7, 9))#candidate|5043|(7, 7, 9)|var|int8
var_5044 = relay.var("var_5044", dtype = "int8", shape = (7, 7, 9))#candidate|5044|(7, 7, 9)|var|int8
bop_5045 = relay.maximum(var_5043.astype('int8'), relay.reshape(var_5044.astype('int8'), relay.shape_of(var_5043))) # shape=(7, 7, 9)
uop_5051 = relay.asinh(bop_5045.astype('float32')) # shape=(7, 7, 9)
func_1048_call = mod.get_global_var('func_1048')
func_1051_call = mutated_mod.get_global_var('func_1051')
var_5058 = relay.var("var_5058", dtype = "float64", shape = (1540,))#candidate|5058|(1540,)|var|float64
call_5057 = func_1048_call(relay.reshape(var_5058.astype('float64'), [14, 11, 10]))
call_5059 = func_1048_call(relay.reshape(var_5058.astype('float64'), [14, 11, 10]))
output = relay.Tuple([uop_5051,call_5057,var_5058,])
output2 = relay.Tuple([uop_5051,call_5059,var_5058,])
func_5064 = relay.Function([var_5043,var_5044,var_5058,], output)
mod['func_5064'] = func_5064
mod = relay.transform.InferType()(mod)
var_5065 = relay.var("var_5065", dtype = "int8", shape = (7, 7, 9))#candidate|5065|(7, 7, 9)|var|int8
var_5066 = relay.var("var_5066", dtype = "int8", shape = (7, 7, 9))#candidate|5066|(7, 7, 9)|var|int8
var_5067 = relay.var("var_5067", dtype = "float64", shape = (1540,))#candidate|5067|(1540,)|var|float64
output = func_5064(var_5065,var_5066,var_5067,)
func_5068 = relay.Function([var_5065,var_5066,var_5067,], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_5087 = relay.TupleGetItem(func_4420_call(), 0)
call_5088 = relay.TupleGetItem(func_4421_call(), 0)
func_1719_call = mod.get_global_var('func_1719')
func_1722_call = mutated_mod.get_global_var('func_1722')
var_5098 = relay.var("var_5098", dtype = "float32", shape = ())#candidate|5098|()|var|float32
const_5099 = relay.const([[8.567271,-8.557137,-5.271718,7.160575,8.519419,8.190629],[-7.156443,7.513014,-7.112760,-1.318335,-4.003109,-3.303372],[-9.653522,5.674992,-7.418157,3.672556,1.966520,-3.870409],[-6.599348,8.646909,-8.472532,-1.254973,3.569171,-3.583832],[0.792192,6.374685,0.047611,-0.937446,8.517863,9.253360],[-6.932415,6.106176,-1.927632,-3.050381,-6.164683,-4.672777],[-4.942658,8.569660,-3.064265,0.427221,0.114024,5.455238],[7.442517,-7.676182,-8.975816,-9.352048,1.332992,-6.621116],[-8.234628,-2.192197,-0.331167,9.007261,5.978007,-2.671014],[-3.059819,9.930617,-2.061894,9.985271,7.157450,3.024822],[4.117933,-8.413023,9.017495,-3.150079,0.276267,-1.479132],[3.212672,-3.560231,7.792354,-8.907151,3.427848,8.705578],[5.520302,4.507077,-1.115724,-3.938180,-9.912350,-5.827792],[5.966993,6.559479,-7.678856,-0.687460,-5.428567,-0.526051],[-3.166002,4.312857,5.680455,7.992620,7.693599,0.488246],[0.125114,0.117388,-2.102905,-2.811859,-7.964173,1.545690],[8.351167,-3.967299,-2.564687,6.128069,-1.424583,-9.475333],[1.358369,-8.665887,-9.628622,1.185813,0.920590,-8.254278],[-1.363886,1.783279,-3.917523,5.775809,-2.489905,9.073434],[3.369561,1.138205,-8.427181,5.131022,-8.481353,-0.140420],[8.951074,-3.211697,1.288158,-8.638998,5.446200,-2.374002],[-6.667075,-8.145969,-4.294314,-2.153583,-7.016605,6.018688],[6.704219,2.278064,-5.616975,5.192187,3.216334,-1.269777],[-1.175882,-6.799366,-2.126045,6.599105,1.514256,2.132437],[-3.592472,0.035952,-9.766199,9.255866,5.787135,4.875176],[-9.947955,6.558107,-1.106336,-7.643397,-9.268987,8.997481],[-0.733809,-0.210880,-0.162204,5.763445,6.441306,7.875396],[2.404406,1.694282,1.364499,-2.992443,0.119739,6.005890],[6.913473,-8.922435,6.954375,-8.488772,2.267863,7.521646],[-4.526924,-8.252727,6.290265,4.726500,-9.444248,2.161264],[1.734279,9.785745,2.461132,8.908032,2.548601,-3.458627],[1.892236,-2.704813,7.764286,-3.727855,-2.146152,0.584465],[-8.409284,-3.224801,-5.602375,2.550306,2.021118,-0.551641],[8.392364,9.377554,-6.428383,5.067558,-8.866335,-5.621920],[9.549834,9.750149,4.370822,1.085775,-2.892672,-0.514470],[0.236765,-5.663896,-0.021497,4.209014,-6.715584,-6.515112]], dtype = "float32")#candidate|5099|(36, 6)|const|float32
call_5097 = relay.TupleGetItem(func_1719_call(relay.reshape(var_5098.astype('float32'), []), relay.reshape(const_5099.astype('float32'), [12, 2, 9]), ), 2)
call_5100 = relay.TupleGetItem(func_1722_call(relay.reshape(var_5098.astype('float32'), []), relay.reshape(const_5099.astype('float32'), [12, 2, 9]), ), 2)
func_3342_call = mod.get_global_var('func_3342')
func_3345_call = mutated_mod.get_global_var('func_3345')
const_5103 = relay.const([-1.985816,9.373127,8.286859,3.466237,-4.939976,-2.480764,-4.040272,-2.939182,0.590027,-5.956204,7.323677,-3.922392,7.616177,7.956129,3.941897,3.481548,-4.367692,5.469910,-0.542233,-3.137388,-8.050395,0.965377,-4.871498,4.735604,-0.763681,7.215413,6.688941,7.815822,5.987555,9.000434,7.440317,1.988395,8.945370,-7.290091,1.352216,-5.783372,1.965694,2.340018,-4.506169,0.871894,-6.597563,-5.402706,-7.200474,9.099218,-1.226760,2.425371,0.417294,4.037338,6.624729,-6.276199,-3.053108,-1.985102,-8.613911,-2.704509,-6.489633,-8.632823,-6.745887,-6.299505,-5.131720,1.306233,-7.716474,-5.621636,1.321086,7.544064,4.711474,3.523063,-3.403092,-3.859601,6.457719,2.580351,-8.656385,0.029434,-1.128839,-3.323479,5.611184,-8.665230,-8.437801,2.809300,-5.317845,-6.981468,-3.786597,-1.472913,0.823250,-7.325976,5.776032,7.379982,1.346977,-6.371060,-0.658476,-5.655138,-0.008973,-9.967303,4.882689,-6.967673,-7.196482,-9.826918,9.732262,4.048025,2.688194,7.304349,-4.865787,-3.093950,7.515159,9.845748,0.765811,6.115647,-1.390973,-1.140468,9.866898,-9.052270,0.160189,3.062542,2.180479,-8.514989,-0.796194,5.595098,-9.497728,-7.988661,-7.840137,2.670184,9.234558,-1.875891,-6.858381,2.877431,1.517601,1.244081,-4.226528,0.291334,-9.037419,-5.766453,-1.607146,8.203995,-1.435559,-6.768598,8.707001,-8.225613,1.458341,0.989087,-9.286184,0.423711,-6.145359,-7.800851,0.006008,-7.547068,6.450593,-8.917834,-5.803125,-8.158989,4.178134,3.448650], dtype = "float64")#candidate|5103|(150,)|const|float64
call_5102 = relay.TupleGetItem(func_3342_call(relay.reshape(const_5103.astype('float64'), [150,])), 2)
call_5104 = relay.TupleGetItem(func_3345_call(relay.reshape(const_5103.astype('float64'), [150,])), 2)
output = relay.Tuple([call_5087,call_5097,var_5098,const_5099,call_5102,const_5103,])
output2 = relay.Tuple([call_5088,call_5100,var_5098,const_5099,call_5104,const_5103,])
func_5110 = relay.Function([var_5098,], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
mutated_mod['func_5110'] = func_5110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5111 = relay.var("var_5111", dtype = "float32", shape = ())#candidate|5111|()|var|float32
func_5110_call = mutated_mod.get_global_var('func_5110')
call_5112 = func_5110_call(var_5111)
output = call_5112
func_5113 = relay.Function([var_5111], output)
mutated_mod['func_5113'] = func_5113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5170 = relay.var("var_5170", dtype = "bool", shape = ())#candidate|5170|()|var|bool
const_5171 = relay.const([[[False,True,False,False,False,True,False,True],[True,False,True,True,False,False,True,True],[True,False,True,False,True,True,False,False],[False,False,False,False,False,True,True,False],[False,True,True,False,True,True,False,False],[True,True,True,False,True,False,True,False],[False,True,True,True,False,True,False,False],[False,False,True,False,True,False,False,False],[True,True,False,False,True,False,False,False],[True,True,False,True,False,False,True,False],[True,False,False,True,False,False,False,False],[False,True,False,True,True,False,True,False],[False,False,True,True,False,True,True,False],[True,False,True,True,False,False,True,True],[True,True,False,True,True,False,True,True],[True,True,True,False,True,False,True,True]],[[False,False,False,True,True,False,True,False],[False,False,True,False,False,True,True,True],[False,True,False,False,False,True,True,True],[False,False,False,False,True,True,True,True],[True,False,False,False,False,True,True,False],[True,False,False,False,True,True,True,False],[False,False,False,False,True,True,False,False],[False,False,False,True,True,True,False,False],[True,True,False,True,False,True,True,False],[False,True,False,True,False,True,True,True],[True,True,True,True,True,True,True,True],[True,True,False,False,False,False,False,False],[True,True,True,False,False,True,False,False],[False,False,False,True,True,True,False,True],[True,True,False,False,True,True,True,False],[False,True,True,False,True,True,False,True]],[[False,False,True,True,True,True,True,True],[True,True,False,False,True,False,True,False],[False,True,False,True,False,True,True,False],[False,False,True,True,False,True,False,False],[True,True,True,False,False,True,False,True],[False,False,False,True,True,True,True,True],[True,True,False,True,False,True,False,False],[False,True,False,False,False,False,False,False],[False,False,False,False,True,False,False,True],[True,False,True,False,True,False,True,False],[False,True,False,False,False,False,True,False],[True,True,False,True,True,True,True,True],[True,False,False,False,False,False,True,True],[False,False,True,True,True,False,False,True],[True,False,True,False,False,False,False,True],[True,True,False,True,False,False,False,True]],[[False,False,True,False,False,False,False,False],[True,True,False,False,False,False,True,True],[False,False,True,False,True,False,True,False],[True,True,True,True,True,False,False,True],[False,True,False,True,True,False,True,False],[True,True,False,True,True,True,True,True],[False,False,True,True,False,False,True,True],[False,True,False,True,True,False,True,True],[True,True,False,True,True,False,True,False],[True,False,False,True,True,True,False,True],[True,False,False,False,False,False,True,False],[True,False,False,False,False,True,True,False],[False,False,True,True,False,False,True,True],[False,True,False,False,False,True,True,False],[True,False,False,True,False,True,False,True],[True,False,True,False,True,False,False,True]],[[False,True,False,False,True,True,False,False],[True,False,False,True,True,True,True,False],[True,True,False,True,True,False,False,False],[False,True,False,True,False,False,False,False],[True,False,True,True,True,True,True,False],[True,True,False,True,False,True,True,False],[True,True,True,False,True,False,False,True],[True,True,False,True,True,False,False,True],[False,True,False,False,False,True,False,True],[False,False,False,False,False,False,False,True],[True,False,True,True,False,True,False,True],[False,True,True,False,True,True,True,False],[False,True,False,False,False,False,True,False],[True,False,False,True,False,True,False,True],[True,True,False,True,False,True,False,True],[False,True,True,True,False,False,True,False]],[[True,True,False,True,False,False,True,True],[False,True,False,False,False,False,True,True],[True,False,False,True,True,True,False,True],[False,True,False,True,True,False,True,False],[True,False,True,True,False,False,False,False],[False,False,False,False,False,True,False,True],[True,False,True,False,True,True,True,False],[True,False,True,False,False,False,True,True],[False,False,True,False,True,True,False,True],[False,False,True,False,False,True,False,True],[False,True,False,True,False,True,True,True],[True,False,False,True,True,True,True,True],[True,False,False,False,True,False,True,True],[True,True,False,True,False,False,False,False],[True,False,False,True,False,True,True,True],[False,True,True,True,False,False,False,True]],[[False,False,False,True,True,True,True,False],[False,True,True,True,True,True,True,False],[False,True,True,False,True,False,True,True],[True,False,False,True,False,False,True,False],[True,True,False,False,False,True,False,True],[False,True,False,True,False,True,True,False],[True,False,False,False,True,False,True,False],[False,True,False,True,True,True,True,False],[False,True,False,False,False,False,True,False],[True,True,True,False,True,False,False,False],[True,True,False,False,True,True,False,True],[False,False,False,True,True,False,False,True],[True,False,False,False,True,True,False,False],[True,False,False,False,False,True,False,True],[False,False,True,True,True,False,False,True],[False,True,False,False,True,False,True,False]],[[True,True,False,False,True,True,False,False],[True,True,False,True,False,False,True,False],[False,False,True,True,False,True,False,True],[False,False,True,True,True,False,False,False],[False,False,False,True,True,False,True,False],[True,True,False,True,True,True,True,True],[True,False,False,False,False,False,True,False],[False,False,False,True,False,False,True,False],[False,True,True,False,False,False,False,True],[True,False,True,False,True,False,True,True],[True,True,True,True,True,False,True,False],[False,True,True,False,True,True,True,False],[False,False,False,False,True,False,False,False],[True,True,True,False,True,False,True,False],[False,False,True,True,False,True,True,False],[False,True,True,False,False,False,False,False]],[[False,False,True,True,False,True,False,True],[False,True,False,True,True,True,False,True],[False,True,True,False,False,False,True,True],[True,False,True,True,False,True,False,False],[True,True,False,True,False,False,True,False],[True,True,True,False,False,True,False,False],[True,True,True,True,True,False,False,True],[False,True,False,False,False,False,False,True],[True,False,True,True,False,False,True,True],[True,True,False,True,False,False,False,True],[True,True,True,False,True,True,True,True],[True,False,True,True,False,True,True,False],[False,False,True,False,False,True,False,True],[False,False,False,False,False,False,False,True],[True,True,True,False,False,True,True,True],[True,False,True,True,False,False,True,False]],[[False,True,False,False,False,False,True,False],[False,True,False,False,False,False,True,True],[True,True,False,False,False,True,True,True],[False,False,False,False,False,False,False,False],[True,False,False,True,True,True,True,True],[True,True,False,True,False,True,False,True],[False,False,True,False,False,True,True,False],[True,False,False,False,False,False,False,True],[False,True,False,True,False,True,True,True],[False,True,False,False,False,True,False,True],[True,True,True,True,False,True,True,False],[True,True,False,True,True,False,False,False],[True,False,True,False,True,False,True,True],[True,False,False,False,True,False,True,False],[True,False,False,False,True,True,False,False],[True,False,True,False,False,True,False,False]],[[True,False,False,False,False,True,False,False],[True,False,False,False,False,True,True,True],[True,True,True,True,False,True,True,True],[True,True,False,False,False,False,False,False],[False,False,False,True,True,False,True,True],[False,True,True,False,False,False,False,True],[True,True,False,False,True,False,True,False],[True,True,False,True,False,False,True,False],[False,False,True,False,False,False,True,True],[True,False,True,True,True,True,True,False],[True,True,False,False,True,False,False,False],[True,True,False,True,True,True,False,False],[True,True,False,False,False,True,True,True],[True,False,True,False,False,False,True,True],[True,True,True,True,True,True,True,True],[False,True,False,False,True,False,False,False]],[[False,False,False,False,True,True,True,False],[False,False,True,False,False,False,True,False],[True,False,True,True,True,False,False,False],[False,False,False,True,True,False,True,True],[False,False,True,True,True,False,True,True],[True,False,True,True,False,False,True,False],[False,False,True,False,True,True,False,True],[True,False,False,False,False,True,True,False],[True,False,True,True,True,False,False,False],[True,False,True,True,False,True,True,True],[True,False,True,False,True,True,True,True],[True,True,True,True,True,True,True,False],[True,False,True,False,False,False,False,True],[False,False,True,False,True,False,True,False],[True,False,True,False,True,False,True,False],[False,True,True,True,False,False,True,True]],[[False,True,False,True,True,False,False,True],[False,True,True,True,False,True,False,True],[True,True,True,True,True,True,True,True],[False,True,False,False,True,False,True,False],[True,True,True,False,False,True,True,False],[True,False,False,True,True,False,False,True],[True,True,False,False,False,True,False,False],[False,False,False,False,False,False,False,True],[True,True,True,True,False,False,False,True],[True,False,False,False,False,False,True,True],[False,True,True,False,True,True,True,True],[False,True,True,False,True,True,False,True],[False,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,True],[False,True,False,True,False,True,True,False],[False,False,True,False,False,True,True,False]],[[False,True,True,False,False,False,True,False],[True,True,True,False,False,False,False,False],[True,False,False,False,True,True,False,True],[True,True,True,True,False,False,False,True],[False,True,True,False,True,True,False,False],[False,True,True,False,False,True,False,True],[True,False,True,False,True,False,True,True],[True,True,False,False,True,False,True,True],[False,False,True,True,True,False,False,True],[True,True,True,True,False,False,True,True],[False,False,True,False,False,False,True,False],[True,True,False,True,False,True,False,False],[True,False,True,True,False,True,False,True],[False,False,True,False,False,False,True,False],[False,False,False,True,True,True,True,False],[True,True,True,True,False,False,True,True]],[[False,False,False,False,False,True,True,False],[True,False,True,True,False,False,True,True],[True,False,False,False,True,True,False,False],[False,False,True,False,False,False,True,False],[True,False,False,True,True,True,True,False],[False,False,True,False,True,False,True,False],[False,True,False,False,False,False,False,False],[False,False,False,False,False,False,False,True],[False,False,False,True,False,False,True,False],[False,False,False,True,False,False,True,True],[True,True,True,False,False,True,False,False],[True,True,True,False,True,True,True,True],[False,False,False,False,False,True,False,False],[True,False,False,True,False,True,False,False],[True,True,False,True,True,False,True,False],[True,False,False,False,False,False,True,False]]], dtype = "bool")#candidate|5171|(15, 16, 8)|const|bool
bop_5172 = relay.logical_and(var_5170.astype('bool'), const_5171.astype('bool')) # shape=(15, 16, 8)
output = relay.Tuple([bop_5172,])
output2 = relay.Tuple([bop_5172,])
func_5180 = relay.Function([var_5170,], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5181 = relay.var("var_5181", dtype = "bool", shape = ())#candidate|5181|()|var|bool
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5182 = func_5180_call(var_5181)
output = call_5182
func_5183 = relay.Function([var_5181], output)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4693_call = mutated_mod.get_global_var('func_4693')
call_5195 = relay.TupleGetItem(func_4691_call(), 0)
call_5196 = relay.TupleGetItem(func_4693_call(), 0)
output = call_5195
output2 = call_5196
func_5199 = relay.Function([], output)
mod['func_5199'] = func_5199
mod = relay.transform.InferType()(mod)
output = func_5199()
func_5200 = relay.Function([], output)
mutated_mod['func_5200'] = func_5200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4241_call = mod.get_global_var('func_4241')
func_4242_call = mutated_mod.get_global_var('func_4242')
call_5288 = relay.TupleGetItem(func_4241_call(), 0)
call_5289 = relay.TupleGetItem(func_4242_call(), 0)
func_3036_call = mod.get_global_var('func_3036')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_5295 = relay.TupleGetItem(func_3036_call(relay.reshape(call_5288.astype('float32'), [360,])), 0)
call_5296 = relay.TupleGetItem(func_3039_call(relay.reshape(call_5288.astype('float32'), [360,])), 0)
func_167_call = mod.get_global_var('func_167')
func_169_call = mutated_mod.get_global_var('func_169')
var_5302 = relay.var("var_5302", dtype = "float32", shape = (1485,))#candidate|5302|(1485,)|var|float32
call_5301 = func_167_call(relay.reshape(var_5302.astype('float32'), [9, 15, 11]))
call_5303 = func_167_call(relay.reshape(var_5302.astype('float32'), [9, 15, 11]))
output = relay.Tuple([call_5288,call_5295,call_5301,var_5302,])
output2 = relay.Tuple([call_5289,call_5296,call_5303,var_5302,])
func_5307 = relay.Function([var_5302,], output)
mod['func_5307'] = func_5307
mod = relay.transform.InferType()(mod)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5308 = relay.var("var_5308", dtype = "float32", shape = (1485,))#candidate|5308|(1485,)|var|float32
func_5307_call = mutated_mod.get_global_var('func_5307')
call_5309 = func_5307_call(var_5308)
output = call_5309
func_5310 = relay.Function([var_5308], output)
mutated_mod['func_5310'] = func_5310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_5327 = func_1171_call()
call_5328 = func_1171_call()
output = call_5327
output2 = call_5328
func_5330 = relay.Function([], output)
mod['func_5330'] = func_5330
mod = relay.transform.InferType()(mod)
output = func_5330()
func_5331 = relay.Function([], output)
mutated_mod['func_5331'] = func_5331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_5345 = func_2758_call()
call_5346 = func_2758_call()
func_1645_call = mod.get_global_var('func_1645')
func_1648_call = mutated_mod.get_global_var('func_1648')
var_5352 = relay.var("var_5352", dtype = "float64", shape = (1540,))#candidate|5352|(1540,)|var|float64
call_5351 = relay.TupleGetItem(func_1645_call(relay.reshape(var_5352.astype('float64'), [1540,])), 0)
call_5353 = relay.TupleGetItem(func_1648_call(relay.reshape(var_5352.astype('float64'), [1540,])), 0)
output = relay.Tuple([call_5345,call_5351,var_5352,])
output2 = relay.Tuple([call_5346,call_5353,var_5352,])
func_5368 = relay.Function([var_5352,], output)
mod['func_5368'] = func_5368
mod = relay.transform.InferType()(mod)
var_5369 = relay.var("var_5369", dtype = "float64", shape = (1540,))#candidate|5369|(1540,)|var|float64
output = func_5368(var_5369)
func_5370 = relay.Function([var_5369], output)
mutated_mod['func_5370'] = func_5370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_5375 = func_1070_call()
call_5376 = func_1070_call()
output = relay.Tuple([call_5375,])
output2 = relay.Tuple([call_5376,])
func_5416 = relay.Function([], output)
mod['func_5416'] = func_5416
mod = relay.transform.InferType()(mod)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mutated_mod.get_global_var('func_5416')
call_5417 = func_5416_call()
output = call_5417
func_5418 = relay.Function([], output)
mutated_mod['func_5418'] = func_5418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_5425 = relay.TupleGetItem(func_2080_call(), 0)
call_5426 = relay.TupleGetItem(func_2081_call(), 0)
func_362_call = mod.get_global_var('func_362')
func_367_call = mutated_mod.get_global_var('func_367')
const_5438 = relay.const([[8,10],[-1,7],[10,8],[-3,3],[1,8],[9,-10],[-7,3],[8,-1],[-5,6],[-5,3],[-7,9],[7,-9],[-7,10],[4,9],[5,-5],[3,1],[6,-5],[-8,-6],[-9,-6],[-7,7],[-10,10],[-9,9],[2,8],[1,-1],[-9,-10],[5,4],[1,10],[-5,-1],[-4,-2],[9,8],[7,-5],[7,5],[-4,-3],[-9,3],[-8,-7],[10,1],[9,10],[5,9],[5,-8],[4,8],[-8,-7],[9,8],[-4,2],[3,1],[-7,1],[-8,3],[4,8],[7,-6],[-7,6],[4,5],[1,4],[-9,7],[4,7],[6,-7],[-5,10],[1,9],[-10,5],[-10,-4],[8,-4],[-2,2],[-9,-10],[-2,7],[2,-9],[5,10],[-4,-3],[-5,-5],[4,-9],[-10,-4],[1,4],[-3,-1],[2,7],[-10,7],[3,-10],[7,-1],[-5,-9],[3,-6],[1,10],[-4,-8],[-10,6],[-3,-8],[2,-5],[5,2],[-8,7],[-6,10],[2,1],[8,2],[8,10],[10,-6],[-5,-1],[-8,-2],[-4,10],[9,-9],[-9,-7],[-2,6],[7,-1],[-3,-9],[-9,3],[-3,-4],[2,-7],[7,4],[-6,2],[9,10],[-4,-5],[8,-9],[8,4],[5,-8],[-3,9],[-3,-5],[-1,-1],[-5,-10],[-1,-9],[-3,-6],[2,-2],[-8,-5],[-7,3],[5,-3],[5,9],[-4,-10],[-6,-4],[9,7],[7,-10],[10,-8],[-8,-9],[6,-1],[5,-2],[1,-3],[-3,5],[6,3],[1,-10],[9,-10],[-6,-1],[-2,-5],[4,-3],[9,3],[3,-4],[-10,-4],[-2,-6],[10,-9],[-4,3],[7,-2],[-5,-8],[-2,-6],[1,-4],[9,-3],[-10,-6],[-4,1],[7,5],[-1,-5],[-3,3],[-5,8],[1,6],[2,2],[8,-4],[-3,2],[10,4],[-6,8],[-3,3],[-9,2],[5,-1],[9,8],[-1,2],[9,6],[3,1],[-10,-7],[1,2],[10,-10],[-4,-3],[4,10],[6,-1],[-6,-6],[-8,8],[-5,2],[-4,-6],[8,1],[-8,-5],[-6,10],[-7,-8],[-10,3],[9,-8],[4,-2],[4,-3],[5,6],[-10,6],[8,-9],[6,1],[2,-4],[5,9],[1,8],[-9,-10],[8,-10],[1,-4],[3,-7],[1,-7],[-1,-5],[-2,-6],[4,-10],[6,9],[-10,-2],[-6,-1],[10,-8],[-5,3],[7,-2],[2,3],[1,-1],[5,-3],[-1,-5],[1,-6],[3,1],[10,-4],[4,5],[4,-2],[-3,-4],[-6,-3],[-1,-4],[4,3],[-5,-7],[-8,1],[7,-8],[5,-7],[-4,7],[9,-7],[-8,-5],[10,-2],[-4,-9],[8,-6],[7,7],[5,-2],[-7,1],[7,-10],[-8,9],[-7,-2],[-8,3],[10,-4],[-5,-10],[-6,-1],[9,3],[-9,-5],[10,-4],[5,-5],[-6,2],[2,-4],[-8,7],[-7,9],[10,6],[-2,6],[-4,-8],[6,-1],[-4,10],[-8,2],[1,10],[-10,5],[-10,9],[1,4],[6,2],[5,-4],[-8,-4],[-1,2],[6,9],[2,5],[-5,4],[10,9],[1,-7],[7,-5],[8,-1],[6,10],[-7,5],[2,-9],[-4,3],[2,1],[-3,2],[-2,5],[8,8],[7,-3],[6,4],[-10,5],[8,10],[-9,-5],[-9,-2],[-4,2],[3,6],[-7,-6],[1,-1],[5,-4],[5,4],[5,6],[-6,7],[-7,4],[9,10],[2,-9],[4,-1],[7,1],[-1,3],[6,-2],[-10,-4],[7,5],[-9,2],[-10,4],[10,-4],[-3,6],[-2,2],[10,10],[-2,-7],[4,7],[-8,7],[-1,-2],[8,-9],[-1,-7],[-5,10],[-10,5],[5,-2],[-5,-2],[-9,9],[-10,2],[-6,-9],[5,-9],[4,8],[-8,-7],[-7,9],[10,-5],[10,1],[-4,6],[-6,-7],[2,3],[-5,-9],[6,-5],[-6,6],[-8,9],[6,8],[6,2],[-2,3],[4,7],[9,-4],[3,-1],[-8,9],[8,5],[-9,-6],[10,5],[6,3],[5,1],[7,10],[-7,-3],[8,10],[-9,3],[-10,2],[-4,2],[-6,2],[-7,7],[8,-6],[-10,1],[-2,-7],[-6,10],[9,7],[-1,-3],[-4,-10],[10,4],[9,-5],[2,9],[7,-4],[8,10],[-6,-9],[6,3],[9,-10],[3,6],[-8,10],[-7,4],[7,-8],[2,10],[-6,6],[-3,3],[-4,-2],[9,-6],[-1,8],[7,5],[-8,7],[-10,9],[-8,-10],[-3,4],[6,-4],[-5,3],[-9,7],[1,-8],[-4,2],[-3,-2],[5,1],[-2,5],[4,4],[-10,-7],[-8,-4],[6,-1],[-8,4],[1,2],[7,3],[-2,-9],[8,4],[-10,8],[5,8],[-2,2],[9,1],[2,-7],[-9,-10],[1,-5],[-3,-8],[2,-1],[-5,-8],[6,-1],[6,7],[5,6],[-4,-5],[6,-3],[-9,-3],[6,9],[3,-2],[-9,-5],[5,2],[-6,4],[-7,-5],[10,-3],[1,-1],[-10,-10],[-8,-5],[5,2],[4,10],[4,-9],[4,7],[4,-3],[6,1],[4,10],[-4,-9],[-6,7],[-4,-9],[-2,3],[-4,1],[10,4],[10,3],[-5,-6],[-9,7],[3,-5],[-2,7],[-5,-3],[-1,-9],[-8,7],[6,-2],[5,1],[-2,-1],[-4,-3],[-1,2],[3,4],[-10,2],[-6,8],[1,7]], dtype = "int8")#candidate|5438|(450, 2)|const|int8
const_5439 = relay.const([-8.168793,-5.540223,-4.473504,9.620241,-6.947178,8.057323,2.032853,4.179019,3.642399,-0.965037,-9.251689,6.592841,-4.019804,-4.603893,-4.865746,-8.458889,8.628498,-8.112404,-5.915175,-6.000285,6.827308,4.178429,0.933547,0.258264,8.708474,2.571945,6.336480,0.928707,6.467662,-5.210545,-7.428879,-6.927379,6.485672,5.218603,-3.979935,-4.952930,8.391200,-2.019942,-5.053109,9.086568,-1.285142,-1.055411,9.736850,0.728899,2.115107,-2.212021,2.549250,-0.604943,3.859762,-6.329069,6.840710,4.626579,-4.767375,9.216870,-6.044807,7.000314,5.577210,-5.809346,3.352510,7.848591,4.011045,-0.690576,-7.415577,-3.246752,-8.251754,5.217124,0.800440,-7.796410,-5.087203,2.162317,-4.251865,6.646637,-9.077018,-0.046958,-5.125054,-5.958115,-7.700627,-0.033050,2.566558,-8.862915,5.132182,9.738601,0.968188,-8.735196,4.743636,-0.585894,-4.010081,1.558111,2.437004,4.262435,6.264136,-1.406890,-0.943274,-6.874188,0.615932,-8.332504,-3.741020,8.365555,5.464387,-9.916165,5.299946,2.550254,-4.018934,-8.572350,-9.383261,4.865758,-5.687725,5.504428,-2.541943,-7.864669,1.116047,-1.464379,0.925622,8.472700,-3.088766,4.037443,-6.640555,7.923588,-7.448289,-9.745971,1.643309,-1.703667,1.773936,5.203526,-2.936144,4.697597,-8.913674,7.379632,-4.230848,-4.554140,-9.316916,-9.596274,-7.845117,-5.834815,-1.581771,-4.142136,-7.157881,0.515991,-4.918236,-5.736418,-6.529107,-1.931016,7.575205,-5.615956,-0.821659,-5.032275,8.513944,7.387922,6.387873,-7.594152,7.225484,0.944575,6.545227,4.474192,6.413720,-1.885513,-3.950762,-8.979359,2.476734,4.430384,-2.351648,-3.947547,-9.265504,0.203723,8.441901,4.566099,-0.424714,9.726207,9.695743,-2.215160,-8.547764,4.191098,9.803283,-2.821926,-2.464484,8.120607,-0.418445,-0.823103,7.849782,-5.259873,9.116389,9.145453,-7.807751,-6.473354,-4.665287,9.249356,4.359848,8.069815,-7.278607,9.070108,8.511040,4.087185,3.681587,-3.608868,-8.886700,1.749732,6.321923,8.082750,3.637145,0.658905,-8.228330,-8.409184,5.624209,2.542395,-4.933005,1.328965,0.612914,8.134334,-5.657182,6.330840,-0.459977,9.942778,-0.294685,4.981830,-9.742572,7.011289,8.646290,-7.785905,8.103758,6.242458,4.898872,1.461280,9.582193,8.970491,-9.589533,-0.798970,5.140204,-5.012431,0.243634,-9.488825,7.361430,-4.676259,4.489102,2.533390,-2.146752,-8.985703,5.092435,-6.146085,-5.062850,4.097527,1.678869,5.310130,8.752142,-7.786864,-4.414391,-8.694459,-9.826352,-7.049884,9.434921,-6.151371,-3.528117,5.650203,-0.987739,7.426279,3.974642,5.635549,-4.130754,-9.633323,4.077106,-6.394084,7.604426,0.228805,-5.264788,2.797245,1.166343,7.695406,4.155110,-0.918110,5.056157,-9.176460,-1.604165,7.344821,4.024692,-2.289220,-8.575771,-0.682148,8.293745,1.007394,9.616195,1.918570,-0.386451,1.578900,-8.448168,1.086489,0.088198,-4.184097,2.187118,-2.848933,1.751836,0.847771,-3.816865,2.843678,5.954063,3.900493,-6.940682,-0.805615,7.835634,-9.783960,3.778545,5.932183,2.853825,-4.264160,5.326345,9.627229,5.693720,-7.797371,-5.638177,0.458461,-4.649072,1.176389,0.504755,5.788954,6.052217,-3.291191,7.572669,3.047559,-0.613499,-1.970442,-8.319198,-5.558233,-0.654840,9.686390,0.092495,8.614729,5.630212,-4.762518,-4.216117,-6.282362,3.707680,-9.787717,-6.661487,3.387868,5.387478,8.331795,-3.421980,6.039399,-8.882770,4.727236,2.045256,-8.729938,5.347688,6.683175,-6.485610,9.860263,5.790451,2.033847,6.035943,-9.535807,-7.631786,2.124223,0.061834,7.892738,1.530771,2.926283,9.436644,-1.183340,-9.218044,-1.882822,6.373868,-0.697210,3.538437,-0.954790,1.905573,0.756829,-1.731340,-0.708770,0.409819,-6.712785,-7.098960,4.080911,7.697019,9.288293,-0.477474,-5.181392,3.288063,-6.736831,-4.135826,-4.905904,2.071871,9.211715,-4.268858,5.846484,-9.852296,-0.396512,-6.055285,-9.743922,5.274809,0.600690,-0.750384,0.856310,1.295775,-5.294191,3.115335,1.168326,0.822018,-2.905968,-7.968696,0.658943,9.341510,1.161175,-7.737522,0.061129,6.703684,5.748626,3.370493,-2.519309,-0.608106,-5.918239,5.007167,-4.457719,7.279572,-1.636958,-8.852030,-0.136418,2.487527,1.043090,5.573135,-7.663313,-3.419324,-9.762543,-4.833874,-3.503362,-3.341796,-4.625476,-5.729663,-6.441790,-1.197103,7.957563,-2.767917,-8.378831,4.092204,2.654146,5.732493,-5.056609,5.399728,6.796989,6.245465,-2.519531,-8.507159,2.821765,4.421328,-0.712354,-1.508924,3.995871,4.183909,-7.137209,7.408984,-4.088522,3.655187,-1.592022,9.278861,2.174024,0.843140,-1.680008,-1.009969,-3.416648,2.218003,5.182789,-6.441336,7.118111,3.535071,3.476545,2.163079,4.740413,-7.941236,-9.888909,1.511261,-8.947778,9.324444,-8.829573,-6.909040,-1.246798,-0.530502,5.419823,-3.822408,-3.258533,-9.374526,-9.092755,7.240491,0.612549,-0.107882,-3.093471,7.178603,-0.904990,8.486997,-9.851885,-9.252555,-6.427171,5.921422,9.707705,-9.335682,8.318349,9.983369,-6.341657,4.900589,-3.577980,7.829422,9.592270,2.809976,-8.315855,-7.653477,-4.727154,5.529321,8.282918,-3.273638,-3.267605,5.997168,-6.547608,9.709538,3.545440,-4.979183,-7.191666,-1.383205,-3.408254,-8.366737,5.599842,5.062881,4.813121,-2.036069,0.811950,4.596054,3.728318,0.016619,-5.383530,-6.689927,0.768960,0.096221,5.241634,2.202241,-5.178900,-2.529325,8.810312,1.758345,-7.199609,0.778946,8.166934,9.598047,7.641761,-7.473848,4.745323,-5.117450,0.620618,3.829738,5.273885,-3.911779,-7.363656,2.220449,-0.703609,-4.617115,-4.504515,1.615928,-0.497997,-2.214606,8.432039,3.322271,-0.984507,-4.322429,-5.666928,-3.856532,-0.861777,6.463975,7.621472,-0.119923,6.338014,-4.359919,1.545310,1.691735,-7.640433,7.963983,-5.410105,-6.684457,-5.584175,-0.168270,-6.087794,9.947766,8.750258,0.983425,9.200706,0.912659,-5.462207,1.827992,2.489831,-5.484574,-9.059978,3.852140,-7.025502,1.696623,-6.459339,3.798467,-0.089043,-3.104840,9.577147,-5.583156,4.073769,-1.974192,8.476246,9.994409,-2.863170,-8.839936,-7.787298,-0.667307,-7.304814,6.876242,6.032182,0.013098,9.477422,-5.366373,-6.260868,-8.889936,-9.389847,8.344144,-2.508728,-9.710728,-2.381071,2.460029,-8.292787,-5.192507,-5.842743,-8.892529,-2.984932,2.608955,1.525291,7.331582,6.768000,0.053931,-8.606008,0.545937,-1.367977,9.358911,6.162891,2.167899,-9.434853,-9.589346,4.612783,8.404881,-2.968810,-2.391604,-4.644345,3.728437,3.461983,8.350526,-8.388634,-9.920475,-3.296783,8.203943,-3.865740,8.474117,-1.868835,0.441262,-8.849396,-8.491202,-8.657582,-4.312423,-7.678065,-8.045476,8.077522,0.370837,-1.232328,-2.237690,1.750109,-3.563897,-2.045279,2.197448,9.087433,-2.296073,6.854182,5.783065,0.434746,-7.934649,4.250467,0.531682,-4.926294,-4.947351,-8.617822,6.139072,2.873434,-4.730384,6.689365,-9.120260,-7.043668,9.596350,5.655356,9.957207,-4.397753,-8.236029,-3.211008,-5.544631,-8.667465,-9.713077,6.619683,8.666570,8.866362,-1.523007,7.707834,-2.091661,-4.651227,5.885615,-2.379024,-8.088581,-6.513610,-3.437394,4.463769,2.521794,-0.882761,-1.327088,6.054671,-9.830790,2.068389,3.174735,8.114436,0.308294,9.124334,-4.475194,7.474531,6.738973,8.137492,5.745489,-4.199843,1.569855,-8.352683,7.133103,2.488678,-3.415233,-2.413934,5.768360,0.389564,0.136533,7.193212,-8.807208,6.455075,-6.976361,-5.785347,5.159618,-6.251730,0.488954,-9.835863,-3.483733,-9.054393,4.989636,-6.900917,-3.143907,6.421664,5.580784,8.496251,0.005431,8.847464,-1.487860,7.621867,-8.536248,-2.524705,-9.217694,-3.598373,-6.550826,-2.694386,-3.902025,-7.194774,-4.252992,-3.455063,-5.330442,-6.578992,-5.450379,7.659077,6.888250,-2.162625,-4.864676,5.544455,-8.605297,8.467603,-2.886015,-2.125933,-0.229055,7.043777,-0.510844,-9.068540,-4.733583,-8.989773,-7.199102,1.249030,8.240770,-3.951221,-7.897919,-7.045899,9.737589,5.306449,5.011130,-1.297362,-6.290988,6.064527,-0.916951,6.454021,-6.310174,8.578292,5.573879,-0.528867,5.982301,-7.956616,-7.981336,-3.647662,-8.917118,9.543607,5.540047,3.056218,1.587105,-8.635901,3.178418,-2.592781,5.357107,-5.998973,-0.738791,5.926768,1.496565,0.303591,6.319026,-8.945251,0.481838,9.337509,4.440770,-3.685705,7.112262,-5.502038,-8.641444,-2.089789,7.300330,-4.058375,9.964990,6.059933,6.697787,-8.853317,-3.031800,-5.833354,-5.565623,-9.056009,6.335783,7.068430,7.969130,0.217020,-2.087082,4.242603,-3.065603,-6.487983,-9.704589,2.035613,-9.418869,-9.050426,-3.959396,7.245310,-5.977488,-3.135606,-8.752297,0.055303,-8.196127,-2.163389,-9.345922,-3.587458,3.859401,9.525563,-7.831489,-0.760826,-4.475554,2.349097,2.966348,-5.547337,-9.294545,6.977240,-5.889225,-9.397642,2.021808,6.873680,-8.325169,6.096849,-4.606536,9.600409,7.222184,-7.196754,-2.153493,-2.130952,-6.813356,-0.160366,7.733140,8.575128,-8.200185,-2.412114,-2.830311,7.151372,6.172928,0.135655,2.745769,-7.659764,-3.181541,2.165805,-5.212797,-1.051998,-2.235959,3.796004,1.337005,7.061851,-9.367480,7.299110,8.250604,-7.981067,0.913623,7.828942,-5.069360,2.292029,-9.719311,-1.635249,-9.287167,8.921203,9.287596,9.416400,6.315579,-5.679764,-7.479879,1.833752,-0.256696,7.173349,4.981063,4.655685,-0.259989,-7.621220,6.523526,-6.386076,2.892671,-5.872582,-8.941531,1.151275,-6.982601,-4.986722,-2.541269,-5.681550,8.014210,-5.046725,-9.308924,-2.878966,3.590362,6.290677,4.725214,-0.752530,5.187688,1.574820,-4.504594,-7.575506,-3.435841,-0.854775,-2.667101,-3.354977,-1.522317,-3.434373,-7.707654,7.979342,8.004930,-6.773556,-3.921985,2.198306,1.559899,-1.625493,-8.353455,-3.608105,2.961909,9.633582,7.396376,2.283615,-5.881173,4.844241,-9.373008,-4.876881,5.885438,1.730866,-9.289706,-1.712286,4.575060,6.553412,4.578649,8.242484,-8.329299,-3.238847,-5.265192,2.509329,5.817974,1.969826,-7.000945,9.504147,-5.934267,7.999853,7.904870,-8.006312,-6.323631,-9.612977,8.634824,-6.027237,-4.057787,4.837334,-0.367129,-5.632306,5.918588,-1.746952,5.043296,-4.490065,-7.349628,-8.030446,2.095335,-0.545546,3.106111,7.684394,-6.367307,-3.006461,-8.917268,2.995120,9.169236,-2.643570,1.820747,-1.167739,-9.938119,-0.337327,-2.246997,-2.469184,4.630660,-6.699883,-8.005285,0.635580,8.896884,7.582177,-6.289292,0.735637,-1.449279,-2.556672,-0.662882,6.389056,7.010256,3.278311,-9.775451,7.555112,-6.556938,-6.768042,5.284256,-7.394700,-2.821731,-1.295584,-0.610465,-7.875589,6.483254,5.800890,5.092562,-6.559359,-8.248129,-6.196244,-5.980589,5.307523,1.445365,1.058542,6.647055,-4.155906,5.424105,-0.638758,-0.451399,8.000831,-7.090012,0.288382,5.308665,-8.229896,4.197296,-9.524691,5.992719,-4.418035,-2.939581,7.166192,5.276184,4.872876,1.009064,7.826417,-4.927812,8.725044,3.790023,-3.440145,5.731769,-0.444446,4.746723,-1.792293,-3.130888,-4.194995,-4.128904,5.905875,1.178403,-2.062104,-5.739013,-3.489788,-7.908926,8.232274,-9.671531,-0.466704,4.852568,-6.495870,-4.995760,7.969528,5.810754,1.827604,5.350470,-6.021510,4.863348,7.090016,-3.593568,-5.270850,-0.145595,-4.423061,6.697059,-5.700408,1.277697,3.022076,3.581130,2.379033,-7.578618,-2.275816,8.550529,-1.743770,9.189698,-5.546089,1.601869,6.809309,0.607356,-3.554139,-1.534871,1.834736,7.825994,2.116320,4.931576,-0.406879,9.994180,5.678481,4.749490,9.460722,-0.820886,-4.951308,-9.720425,2.434838,5.882950,-1.029526,-6.503922,5.167679,7.223984,-8.192824,6.081301,-8.389850,0.442522,0.393544,-2.918620,3.168122,5.661545,-5.778726,9.460163,1.079982,-3.565121,3.657159,3.378158,-4.455290,6.422093,2.414966,1.340640,-3.056460,5.875284,9.618718,-4.695036,-7.281205,-4.964423,-7.298723,-9.428348,-5.537258,6.974419,1.076659,1.442966,9.662256,-3.457842,0.088000,9.264557,-4.676316,-0.594453,-2.133028,8.625172,-3.631286,3.014562,4.539008,-5.586357,-7.070820,7.054665,-6.800735,-5.000141,-8.374160,-3.667479,-1.615309,6.515695,-8.057083,1.658693,-5.970667,-7.210385,-7.108450,4.224977,8.253788,-5.849135,-0.886853,-6.940820,-3.066580,-9.365495,3.702893,-1.442994,-0.652270,4.524295,9.364009,5.635895,6.423418,-9.304424,-0.291175,2.577942,9.939927,2.096108,-0.679159,-9.770173,-6.722774,2.343237,9.725756,-6.950745,4.326438,0.816816,-6.376147,-4.696731,-1.336086,2.507010,5.216572,-1.669634,-4.748217,-9.740642,5.624612,5.885041,0.935831,-8.978917,5.850792,5.229835,-2.135628,8.711995,8.417724,-5.565890,1.610541,-6.810024,-1.409335,7.017535,3.971459,4.666161,2.650075,-3.025116,7.521080,0.107308,7.348502,8.406652,9.981879,-0.596542,8.498145,-9.770066,0.686009,0.672659,-8.636869,-1.127069,-3.584064,-4.754866,9.557820,-1.233378,0.595286,3.730055,-9.421300,-8.818858,4.808704,0.587079,6.706730,5.878644,-2.165524,2.988384,-1.763903,-9.520931,7.749064,-2.582591,-2.925728,-9.690521,-2.131016,-9.222812,-6.809320,6.330786,-2.459277,-9.030461,-6.047616,-2.990802,-3.844653,5.808054,3.621114,8.389820,5.537270,0.051950,7.872699,3.253146,9.592366,-3.832250,1.375891,-7.164548,-6.244161,8.341934,-3.014680,-3.394802,6.297130,1.120343,7.333894,-3.339582,-5.485648,-8.037451,5.490148,-3.306468,-6.395790,-3.420318,-0.702618,5.077103,-9.378480,1.302971,-7.634100,7.751310,-3.666273,-2.691134,-3.832602,-4.348154,1.047799,-0.624763,-7.519687,1.375762,8.662078,-2.065808,-5.407241,3.954042,8.354916,-6.079184,-0.324548,5.374841,-1.729815,-6.654269,-3.961811,-8.481302,-6.969437,-7.259793,9.733555,3.717084,-9.887139,-7.715138,4.278645,7.805725,-6.299090,-2.004894,5.000906,6.305542,7.894324,-9.794828,-6.340553,5.934170,0.673148,-9.343864,-2.725753,-6.837058,3.189122,1.190049,-7.572040,6.222298,-5.734244,7.829440,-0.793054,-7.994650,-3.809796,9.296944,1.909235,8.682290,4.306481,7.262356,7.785033,-8.919306,-9.548368,4.372859,-5.091475,2.533598,-4.852036,-7.787992,-5.415846,2.953126,-7.123680,8.546069,6.916756,-2.012211,-5.050812,-9.538380,2.062875,4.735834,5.054618,-0.357464,5.373456,-5.176223,-5.090117,-8.522744,7.783512,-9.979915,1.430002,0.252035,-2.699547,8.435118,1.211566,4.864563,-8.691890,-6.247500,2.502750,9.931580,6.516173,1.976981,-4.946394,-6.240208,2.512957,9.293984,-0.219744,0.009246,8.964909,-8.681272,0.073079,3.680901,-2.654949,4.664505,8.572707,-1.312391,-8.280597,-2.297279,-2.104252,5.123311,4.319298,-9.340854,8.128737,7.365709,-5.230475,-2.081628,0.273192,6.788552,6.381542,1.088896,6.347462,8.501147,1.440284,-1.127350,-6.632968,5.856521,7.360142,-7.712852,-7.052552,2.806155,3.124972,-1.907856,1.273125,-1.972065,-9.285795,7.727879,4.480668,4.146112,5.268711,-5.789203,1.254545,2.505502,1.045333,-5.020112,2.381160,-0.323962,3.597879,5.418716,-2.594930,3.076154,-3.535317,-9.924301,-5.422972,-5.558893,-0.724063,5.891512,8.756571,-5.978750,-8.807961,-8.484336,-7.890210,-5.645514,5.455688,-6.793955,0.768834,-9.110257], dtype = "float32")#candidate|5439|(1485,)|const|float32
call_5437 = relay.TupleGetItem(func_362_call(relay.reshape(const_5438.astype('int8'), [15, 6, 10]), relay.reshape(const_5438.astype('int8'), [15, 6, 10]), relay.reshape(const_5439.astype('float32'), [1485,]), ), 2)
call_5440 = relay.TupleGetItem(func_367_call(relay.reshape(const_5438.astype('int8'), [15, 6, 10]), relay.reshape(const_5438.astype('int8'), [15, 6, 10]), relay.reshape(const_5439.astype('float32'), [1485,]), ), 2)
func_2974_call = mod.get_global_var('func_2974')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_5441 = relay.TupleGetItem(func_2974_call(relay.reshape(const_5439.astype('float32'), [1485,])), 1)
call_5442 = relay.TupleGetItem(func_2977_call(relay.reshape(const_5439.astype('float32'), [1485,])), 1)
output = relay.Tuple([call_5425,call_5437,const_5438,const_5439,call_5441,])
output2 = relay.Tuple([call_5426,call_5440,const_5438,const_5439,call_5442,])
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5444 = func_5443_call()
output = call_5444
func_5445 = relay.Function([], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_5478 = relay.TupleGetItem(func_4420_call(), 1)
call_5479 = relay.TupleGetItem(func_4421_call(), 1)
func_3587_call = mod.get_global_var('func_3587')
func_3588_call = mutated_mod.get_global_var('func_3588')
call_5491 = func_3587_call()
call_5492 = func_3587_call()
output = relay.Tuple([call_5478,call_5491,])
output2 = relay.Tuple([call_5479,call_5492,])
func_5494 = relay.Function([], output)
mod['func_5494'] = func_5494
mod = relay.transform.InferType()(mod)
output = func_5494()
func_5495 = relay.Function([], output)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_5503 = relay.TupleGetItem(func_5416_call(), 0)
call_5504 = relay.TupleGetItem(func_5418_call(), 0)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_5508 = relay.TupleGetItem(func_2375_call(), 0)
call_5509 = relay.TupleGetItem(func_2377_call(), 0)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_5521 = func_2882_call()
call_5522 = func_2882_call()
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_5533 = func_1690_call()
call_5534 = func_1690_call()
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_5541 = func_2882_call()
call_5542 = func_2882_call()
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
var_5544 = relay.var("var_5544", dtype = "float64", shape = (616,))#candidate|5544|(616,)|var|float64
call_5543 = relay.TupleGetItem(func_579_call(relay.reshape(var_5544.astype('float64'), [14, 4, 11])), 2)
call_5545 = relay.TupleGetItem(func_581_call(relay.reshape(var_5544.astype('float64'), [14, 4, 11])), 2)
func_865_call = mod.get_global_var('func_865')
func_869_call = mutated_mod.get_global_var('func_869')
const_5571 = relay.const([6,-8,7,4,-9,9,10,3,10,9,-5,7,-6,5,6,4,8,-8,7,3,10,1,2,8,-7,-1,1,8,-1,-3,-8,1,-8,-1,9,-2,-7,-3,-7,10,5,8,9,5,-10,-9,5,2,-6,-2,-6,8,-7,2,-9,8,6,-1,-2,7,5,10,-5,-5,5,10,2,-7,-8,-3,-5,-2,-6,8,-9,2,2,-6,-4,9,-8,3,6,9,10,10,2,8,5,10,10,8,3,8,4,-7,6,-4,-1,-4,-6,8,-6,-10,2,-5,-1,4,-6,1,2,4,-1,8,-5,7,-9,-1,-3,6,-10,-8,3,-7,6,10,-10,-4,7,5,8,-5,-6,10,9,3,-6,-2,-4,-9,-9,-8,5,9,6,6,-5,1,-7,-9,8,8,6,2,-1,10,-9,-10,-10,8,5,2,-5,1,5,-10,5,-8,10,-9,-10,-2,7,7,4,-3,-7,1,7,6,4,-6,4,10,-3,-6,9,-6,-1,-4,-6,6,-2,-7,-10,5,-9,-3,-3,6,5,1,-1,10,7,8,3,-9,2,-5,1,6,-1,2,3,1,1,2,8,3,-8,-1,7,-5,9,1,2,-7,-6,8,-8,-1,-1,-10,-7,-6,-4,-5,8,9,-3,-7,-8,7,-3,7,-4,-10,-1,5,5,-2,-8,-1,-8,6,-1,-6,7,-4,10,2,10,-8,6,9,-5,-10,10,1,-2,-9,10,-3,-1,-7,-10,3,-5,-3,6,-2,-2,6,-6,10,-6,4,-4,-4,5,6,-2,-7,1,10,1,10,6,5,-3,-9,-6,6,9,-7,-1,2,-1,2,1,1,4,7,-7,10,-9,-10,4,-5,4,-9,-4,-8,-4,-6,2,6,9,4,6,-10,6,10,-6,5,6,4,-7,-2,3,-5,-5,1,-4,4,2,5,-1,-10,-7,-6,-10,-2,5,9,3,-4,-5,-6,9,-9,3,-1,-6,-1,5,-9,-10,-4,-6,-2,7,1,1,10,-9,-3,2,7,6,-4,-7,-7,-3,-3,-4,-2,-3,10,2,5,9,-4,-3,-1], dtype = "int16")#candidate|5571|(396,)|const|int16
call_5570 = relay.TupleGetItem(func_865_call(relay.reshape(const_5571.astype('int16'), [6, 11, 6]), relay.reshape(const_5571.astype('int16'), [6, 11, 6]), ), 0)
call_5572 = relay.TupleGetItem(func_869_call(relay.reshape(const_5571.astype('int16'), [6, 11, 6]), relay.reshape(const_5571.astype('int16'), [6, 11, 6]), ), 0)
func_4819_call = mod.get_global_var('func_4819')
func_4821_call = mutated_mod.get_global_var('func_4821')
const_5586 = relay.const([[-8.494115,5.672529,8.822416,-2.956914,6.119854,-3.890473],[9.586542,5.629307,4.291852,1.888797,-3.654026,7.281134],[5.851764,0.963495,6.210728,8.887434,-6.495988,-7.181693],[9.508613,-7.002678,-9.536042,2.632527,5.099700,-8.493369],[1.826411,5.599993,1.779063,-7.510528,-0.679980,3.465550],[-6.000187,5.387617,5.906257,-8.162365,9.107680,6.956192],[4.183655,7.808594,2.578805,0.358609,8.406184,-1.000676],[-0.918236,9.900224,0.656775,-3.683212,-0.565711,-0.506794],[-5.294211,-4.865782,3.094497,1.827293,9.730450,-4.397094],[4.739578,2.886622,-5.882916,8.572508,-9.112078,3.669308],[5.963419,7.076443,-3.086420,4.700564,-3.314440,-1.204645],[3.515403,-2.008157,-1.764868,6.819850,0.381017,-0.579557],[2.373764,-8.439230,-3.410954,3.792766,6.333100,3.991058],[-2.650146,-5.076361,7.071545,-0.096746,6.175544,7.543669],[1.040145,7.313507,8.398120,9.632000,5.850395,-2.750862],[7.260940,-7.823351,-4.237963,-6.354609,-3.100694,1.421331],[6.850968,7.458435,-1.930636,-9.798784,4.965358,-2.193397],[7.632041,8.963439,6.729570,9.474326,9.487475,-0.664303],[1.673351,-9.614698,0.134684,0.255430,-6.103314,6.073103],[6.692008,-3.485761,5.141969,7.666409,-7.984257,-4.385498],[-5.461737,1.724026,7.015316,9.915526,-7.841708,-9.697566],[2.344096,1.743118,-4.851583,8.904344,-4.419327,6.307691],[-9.001992,4.251777,3.902389,8.104936,7.827398,-3.047210],[-3.238434,4.123901,8.403644,-3.832273,-1.374451,-0.472821],[8.822793,-8.823498,-8.923689,9.411944,4.419819,7.971076]], dtype = "float64")#candidate|5586|(25, 6)|const|float64
call_5585 = relay.TupleGetItem(func_4819_call(relay.reshape(const_5586.astype('float64'), [150,])), 0)
call_5587 = relay.TupleGetItem(func_4821_call(relay.reshape(const_5586.astype('float64'), [150,])), 0)
output = relay.Tuple([call_5503,call_5508,call_5521,call_5533,call_5541,call_5543,var_5544,call_5570,const_5571,call_5585,const_5586,])
output2 = relay.Tuple([call_5504,call_5509,call_5522,call_5534,call_5542,call_5545,var_5544,call_5572,const_5571,call_5587,const_5586,])
func_5589 = relay.Function([var_5544,], output)
mod['func_5589'] = func_5589
mod = relay.transform.InferType()(mod)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5590 = relay.var("var_5590", dtype = "float64", shape = (616,))#candidate|5590|(616,)|var|float64
func_5589_call = mutated_mod.get_global_var('func_5589')
call_5591 = func_5589_call(var_5590)
output = call_5591
func_5592 = relay.Function([var_5590], output)
mutated_mod['func_5592'] = func_5592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_5601 = func_1675_call()
call_5602 = func_1675_call()
func_865_call = mod.get_global_var('func_865')
func_869_call = mutated_mod.get_global_var('func_869')
const_5604 = relay.const([3,6,-3,-6,-7,-8,8,8,-7,-5,-10,9,3,3,3,1,-7,6,8,-8,6,1,-2,-9,9,6,-6,-7,6,5,5,5,-5,-1,2,7,5,-1,6,-10,8,6,10,1,1,-3,-1,8,9,8,-1,1,-2,3,-2,3,-6,4,-2,9,-8,-2,3,5,-1,3,-8,8,-7,-8,-3,-1,-9,4,-7,-7,-7,5,10,2,-3,-5,-9,2,1,5,10,2,8,-3,1,9,10,10,4,-3,-6,9,-9,-9,1,-6,-9,-2,-6,-1,6,9,-6,8,-10,8,-9,-9,-9,3,-4,1,-9,10,8,6,-1,-10,3,-6,8,7,2,10,-8,-1,3,-4,5,-2,5,-4,5,5,1,1,7,1,-5,1,5,4,4,-2,3,-9,-2,-7,9,4,-3,-3,2,10,-4,-1,-2,7,-6,-2,-1,-7,6,-9,-6,-4,6,1,-1,5,3,4,-2,1,10,-7,6,5,10,6,-6,6,10,-2,-2,8,-5,-1,5,-5,7,5,7,-5,3,2,-4,5,-8,4,-6,-5,5,7,2,-5,5,-4,10,-9,3,-6,2,10,8,1,-6,-2,6,1,3,-9,-3,-3,6,-10,5,-7,-5,8,1,-5,8,6,-9,4,-2,-2,-5,10,9,10,3,-3,-4,-4,-2,2,8,-4,4,3,-10,-10,2,-8,-1,-6,-8,7,-2,7,-9,4,6,8,-7,-7,-6,3,1,10,2,8,-7,-3,3,-2,10,2,5,9,9,-8,5,2,5,-7,9,8,-8,6,-3,-6,6,1,7,3,6,-10,7,6,-5,-8,8,-10,-8,-10,5,-4,-3,2,2,6,1,8,10,-9,-7,-1,6,1,-8,-3,-8,-5,1,-1,-7,1,-4,5,3,1,4,6,5,-1,10,-7,-2,-9,2,-8,-8,-6,-9,8,-6,5,1,9,9,-9,6,7,-8,3,-6,-8,1,7,-4,6,-4,-1,10,-2,-2,6,-9,-9,9,9,-4,-10,-1,-7,-1,-7,1,9,10,10,4,-3,1,10,-4,5], dtype = "int16")#candidate|5604|(396,)|const|int16
call_5603 = relay.TupleGetItem(func_865_call(relay.reshape(const_5604.astype('int16'), [6, 11, 6]), relay.reshape(const_5604.astype('int16'), [6, 11, 6]), ), 0)
call_5605 = relay.TupleGetItem(func_869_call(relay.reshape(const_5604.astype('int16'), [6, 11, 6]), relay.reshape(const_5604.astype('int16'), [6, 11, 6]), ), 0)
func_3215_call = mod.get_global_var('func_3215')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_5607 = relay.TupleGetItem(func_3215_call(), 0)
call_5608 = relay.TupleGetItem(func_3216_call(), 0)
output = relay.Tuple([call_5601,call_5603,const_5604,call_5607,])
output2 = relay.Tuple([call_5602,call_5605,const_5604,call_5608,])
func_5615 = relay.Function([], output)
mod['func_5615'] = func_5615
mod = relay.transform.InferType()(mod)
mutated_mod['func_5615'] = func_5615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5615_call = mutated_mod.get_global_var('func_5615')
call_5616 = func_5615_call()
output = call_5616
func_5617 = relay.Function([], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_5621 = relay.TupleGetItem(func_4762_call(), 2)
call_5622 = relay.TupleGetItem(func_4763_call(), 2)
func_579_call = mod.get_global_var('func_579')
func_581_call = mutated_mod.get_global_var('func_581')
var_5635 = relay.var("var_5635", dtype = "float64", shape = (616,))#candidate|5635|(616,)|var|float64
call_5634 = relay.TupleGetItem(func_579_call(relay.reshape(var_5635.astype('float64'), [14, 4, 11])), 2)
call_5636 = relay.TupleGetItem(func_581_call(relay.reshape(var_5635.astype('float64'), [14, 4, 11])), 2)
const_5638 = relay.const([1.355779,8.877497,-9.142956,-7.979914,7.013848,-0.151068,6.507620,1.884387,-2.632746,5.914804,-6.179338,1.958162,-8.312570,1.004423,-3.477377,3.292095,5.604375,-3.346625,4.855646,-7.398851,-2.566918,-6.756324,-0.695811,3.510666,-7.535129,2.550201,1.533370,-8.282481,3.107405,-3.663579,-2.507886,9.180790,-6.500776,5.797626,-7.776341,-1.414927,-0.573550,5.647185,-5.472840,8.198656,6.451348,-5.777405,2.706087,-1.708026,-3.624626,-9.773639,-6.782433,-6.273661,4.680066,-9.970832,-4.156630,5.281165,1.836993,7.920120,3.227166,3.408192,8.215018,-4.319309,-9.106642,7.222147,8.499189,6.056218,-3.314647,-4.976772,-2.198724,2.472638,4.549803,5.539230,4.339687,-3.449497,-7.338448,5.382387,8.294571,-6.906171,6.896279,-6.667927,-1.371953,-1.050464,-0.600337,-5.413863,-9.649462,2.881573,-4.201994,-4.900967,4.980513,2.359127,-0.398843,-2.223910,-1.522731,5.422709,-3.896668,-2.054513,-2.111929,5.530707,2.602717,4.074563,-8.164550,1.784305,1.078420,-9.741841,-0.698640,-6.701051,7.581604,0.590688,-9.453074,3.522139,-4.259304,2.393961,-2.291904,2.937724,-7.434480,0.680699,2.200666,-6.818632,9.525084,-8.537985,-1.251465,-9.357807,6.232388,7.940745,7.502195,-2.912998,-1.949150,-5.531019,9.064540,-2.626129,-2.781894,-5.661898,-8.895918,-4.395481,6.656005,6.812816,-9.042388,7.175969,4.187269,3.112792,5.449862,6.764971,3.479608,0.131872,5.649791,-5.592455,9.206935,-6.737482,9.539288,9.026634,5.264660,-4.970497,5.579507,4.598907,-1.887910,2.067778,-4.821416,5.193702,-0.097798,-3.872449,-6.424128,1.236562,7.265816,9.997389,-8.356901,-3.498939,-8.267593,6.555856,-8.940235,-9.393735,3.830609,5.785101,-9.036403,6.005523,5.005982,2.906855,7.003067,3.660104,-6.048588,0.797069,-5.693773,-4.300199,0.406001,-2.140055,-0.627988,-1.243920,-8.505763,8.945826,2.533032,8.834090,5.219669,-3.530054,3.056188,3.454310,1.725588,-4.597818,-0.724266,-1.664755,6.557094,-4.872535,0.312177,1.376480,-3.862749,1.885643,-5.171321,-6.283649,3.146973,-4.860853,-4.284390,-9.682765,-2.410256,1.193165,4.063654,-4.721565,-0.660368,-9.480391,-0.605400,0.839715,-9.769396,-1.161802,3.178478,-3.242994,7.845157,7.715382,4.707737,3.499986,2.231854,-0.019527,-1.494863,4.132242,1.791213,8.207073,7.902534,-5.517928,6.070340,-4.846098,3.598960,1.708584,3.549829,8.987223,-9.622855,1.134965,4.824094,-2.920545,-8.603700,8.946995,8.835422,2.731274,5.198955,-9.125694,-9.711551,-0.213939,-8.855913,9.370577,-7.633532,-1.059059,6.029723,-1.355012,3.279818,0.944974,-5.796582,-9.169427,8.605584,6.874157,5.628940,8.122622,-6.692788,-8.308413,0.210222,3.447841,-7.017735,-3.274360,3.971809,-0.509610,5.963526,-2.080934,-0.935979,9.376102,4.323423,5.678817,-0.075132,-7.228120,-7.772864,4.447317,-4.905309,2.919254,-2.252065,7.054598,6.384560,8.278577,6.321559,-8.201797,-4.170229,9.886609,-5.367552,-5.355870,8.243763,-0.595385,8.969020,7.901462,-1.787889,-9.363515,-4.065047,-9.518276,-0.394569,-0.115445,7.918802,9.477491,-3.138396,1.561603,8.299697,4.164104,8.797642,-8.531778,-6.929122,-1.591337,7.164603,2.417590,-9.497438,7.004635,4.566373,-2.763998,-1.381359,-2.397507,-0.521375,-0.498228,-9.469522,-9.317133,4.654304,-1.632654,-2.235554,-6.814151,-2.481551,8.532479,4.065981,2.134953,-4.151188,5.341263,3.275090,0.612466,-0.737361,-7.577711,-9.164026,-9.290890,2.259870,3.912948,6.132744,2.261628,9.043809,0.196593,0.731595,-5.081804,-7.538099,3.777733,3.409308,-5.388846,-3.428840,-2.615554,5.969904,-1.227213,-8.113950,2.108511,1.825201,8.620126], dtype = "float32")#candidate|5638|(360,)|const|float32
bop_5639 = relay.floor_divide(call_5621.astype('float64'), relay.reshape(const_5638.astype('float64'), relay.shape_of(call_5621))) # shape=(360,)
bop_5642 = relay.floor_divide(call_5622.astype('float64'), relay.reshape(const_5638.astype('float64'), relay.shape_of(call_5622))) # shape=(360,)
output = relay.Tuple([call_5634,var_5635,bop_5639,])
output2 = relay.Tuple([call_5636,var_5635,bop_5642,])
func_5645 = relay.Function([var_5635,], output)
mod['func_5645'] = func_5645
mod = relay.transform.InferType()(mod)
var_5646 = relay.var("var_5646", dtype = "float64", shape = (616,))#candidate|5646|(616,)|var|float64
output = func_5645(var_5646)
func_5647 = relay.Function([var_5646], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_5666 = func_1171_call()
call_5667 = func_1171_call()
output = relay.Tuple([call_5666,])
output2 = relay.Tuple([call_5667,])
func_5674 = relay.Function([], output)
mod['func_5674'] = func_5674
mod = relay.transform.InferType()(mod)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5674_call = mutated_mod.get_global_var('func_5674')
call_5675 = func_5674_call()
output = call_5675
func_5676 = relay.Function([], output)
mutated_mod['func_5676'] = func_5676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4025_call = mod.get_global_var('func_4025')
func_4026_call = mutated_mod.get_global_var('func_4026')
call_5704 = func_4025_call()
call_5705 = func_4025_call()
output = call_5704
output2 = call_5705
func_5726 = relay.Function([], output)
mod['func_5726'] = func_5726
mod = relay.transform.InferType()(mod)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5726_call = mutated_mod.get_global_var('func_5726')
call_5727 = func_5726_call()
output = call_5727
func_5728 = relay.Function([], output)
mutated_mod['func_5728'] = func_5728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5739 = relay.var("var_5739", dtype = "float64", shape = (3, 15, 13))#candidate|5739|(3, 15, 13)|var|float64
var_5740 = relay.var("var_5740", dtype = "float64", shape = (3, 15, 13))#candidate|5740|(3, 15, 13)|var|float64
bop_5741 = relay.mod(var_5739.astype('float64'), relay.reshape(var_5740.astype('float64'), relay.shape_of(var_5739))) # shape=(3, 15, 13)
uop_5749 = relay.acos(bop_5741.astype('float32')) # shape=(3, 15, 13)
output = uop_5749
output2 = uop_5749
func_5753 = relay.Function([var_5739,var_5740,], output)
mod['func_5753'] = func_5753
mod = relay.transform.InferType()(mod)
var_5754 = relay.var("var_5754", dtype = "float64", shape = (3, 15, 13))#candidate|5754|(3, 15, 13)|var|float64
var_5755 = relay.var("var_5755", dtype = "float64", shape = (3, 15, 13))#candidate|5755|(3, 15, 13)|var|float64
output = func_5753(var_5754,var_5755,)
func_5756 = relay.Function([var_5754,var_5755,], output)
mutated_mod['func_5756'] = func_5756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4693_call = mutated_mod.get_global_var('func_4693')
call_5797 = relay.TupleGetItem(func_4691_call(), 0)
call_5798 = relay.TupleGetItem(func_4693_call(), 0)
output = relay.Tuple([call_5797,])
output2 = relay.Tuple([call_5798,])
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
output = func_5813()
func_5814 = relay.Function([], output)
mutated_mod['func_5814'] = func_5814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3096_call = mod.get_global_var('func_3096')
func_3097_call = mutated_mod.get_global_var('func_3097')
call_5862 = func_3096_call()
call_5863 = func_3096_call()
output = call_5862
output2 = call_5863
func_5871 = relay.Function([], output)
mod['func_5871'] = func_5871
mod = relay.transform.InferType()(mod)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mutated_mod.get_global_var('func_5871')
call_5872 = func_5871_call()
output = call_5872
func_5873 = relay.Function([], output)
mutated_mod['func_5873'] = func_5873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_5929 = relay.TupleGetItem(func_2375_call(), 1)
call_5930 = relay.TupleGetItem(func_2377_call(), 1)
const_5938 = relay.const([[[-6.555997,-4.557841,-2.724987,-9.804712,-5.242545,-1.107027,1.067097,5.935998,-4.365170,3.096700,5.577170,-1.697012],[8.693967,-6.199153,2.813077,4.161965,-2.338069,-5.066313,1.675396,3.256119,-0.447980,-7.428313,-1.004343,4.924885],[9.346381,2.885519,-4.435004,2.906734,-3.993704,0.611359,-3.443352,8.333481,-3.980913,9.042439,-4.044066,9.107247],[-7.296216,7.795063,-0.489522,3.737555,7.289750,-5.497662,8.758393,8.458273,4.751280,9.699702,3.874071,-2.883425],[0.440376,9.561421,0.172540,-0.903261,-6.577263,-0.839199,8.528102,-0.720940,-4.808952,-0.994264,8.541989,4.995175],[-5.778732,-6.724169,-6.008325,4.943454,-6.150982,5.261397,-2.401923,1.225939,4.740083,2.218918,-7.810120,1.077775],[-3.917374,-2.135100,3.729085,-8.340777,-9.874660,-0.193868,-4.133483,-9.462989,-0.808603,-3.949523,-4.633081,-2.457388],[4.080517,-5.826807,0.838857,8.589538,7.976001,0.441219,9.944203,-4.471183,-6.765382,-7.941516,-7.685511,9.529481],[0.167846,4.053717,-6.161835,7.223313,2.899796,4.272593,-2.307034,-0.579962,-8.440402,-2.148089,-0.493886,7.566107],[9.105463,6.009548,8.704560,7.518618,-2.295773,-7.976528,-9.135068,-5.471701,3.405266,-5.994588,-1.360694,1.182303],[1.997726,8.550121,-0.402225,-9.099007,-6.615126,3.759218,7.782960,-6.370622,-4.659992,-6.740766,9.770619,-3.537839],[-5.025839,-0.152191,-5.798460,2.888161,5.780275,7.426183,5.159084,-0.035937,4.714073,3.970476,-0.979404,-4.363366],[-7.628230,2.902224,9.773190,-6.077442,-1.663390,1.934778,-5.603980,-5.273904,9.048336,2.682495,-9.110108,-8.307194],[-2.045925,-9.815592,-4.674914,8.502080,7.736108,-1.938121,-0.301498,-1.452508,4.161486,2.454544,-5.470292,2.273291],[7.638838,-0.678583,-4.322558,7.398877,9.136725,5.852112,-3.602902,-3.657573,4.223417,6.505271,-9.810942,5.611234]],[[0.125372,1.739221,-7.827373,5.069279,-5.777594,1.702537,-1.734491,2.320751,-1.359459,0.026456,3.910776,-6.811487],[-9.385302,-0.690939,4.561605,-5.227586,0.135136,-6.204283,4.147271,9.950651,-9.175980,-8.829481,-2.816107,-2.487872],[4.926917,4.331713,6.709663,8.776389,6.497122,-5.059956,0.381914,0.357810,7.852884,8.347417,7.321417,-7.557973],[8.379918,2.963706,-1.632459,2.597897,0.303027,-8.555431,-2.047599,2.904787,9.797413,0.493666,-8.275261,8.930567],[-2.586346,-1.552332,-8.229391,3.325549,-1.033054,7.108559,-1.923315,-7.341717,5.515795,3.709114,-7.871205,-8.997760],[-2.648346,8.208329,-1.952837,-9.888349,6.597567,4.522818,8.050163,6.493895,3.713870,-6.351333,3.604847,7.958407],[6.480657,1.737744,5.632074,-5.027047,6.753111,0.585983,-7.982567,-7.584073,-0.323328,8.400807,2.828025,8.337227],[1.970043,-1.439763,-4.878052,-0.293389,-6.486144,-6.376050,9.141740,-8.234903,-8.067512,-4.891668,0.584782,-8.771602],[-8.499937,-0.682596,-8.765673,-3.692734,9.070259,1.066866,2.993521,-8.703812,0.155009,7.576894,0.106123,2.107500],[1.400278,-8.344495,-6.602099,5.215544,5.702181,-1.340371,6.018852,8.375062,-3.557235,3.550096,-4.952356,9.417747],[-4.165730,-0.531203,-0.969230,1.116609,-7.973688,7.873578,-4.583243,4.731205,-2.648268,9.010705,5.665531,-2.909836],[0.886435,2.218784,8.495863,0.748993,3.723408,6.541636,8.714245,-2.511576,2.433898,4.580300,-5.747365,7.330190],[-2.452693,-0.050814,3.796205,2.044906,-9.503661,2.685333,-1.094507,1.074532,-4.154723,3.545799,2.630103,9.882125],[8.833700,-9.661588,-0.053796,-7.213689,6.897961,-8.490158,-5.265097,2.855311,-8.882597,-2.035614,-0.929461,-1.027805],[9.535221,-9.061487,3.852738,2.578653,-0.022741,-9.863610,3.477331,-2.683136,-0.630028,3.976286,-0.275687,9.620921]]], dtype = "float32")#candidate|5938|(2, 15, 12)|const|float32
bop_5939 = relay.bitwise_and(call_5929.astype('int64'), relay.reshape(const_5938.astype('int64'), relay.shape_of(call_5929))) # shape=(2, 15, 12)
bop_5942 = relay.bitwise_and(call_5930.astype('int64'), relay.reshape(const_5938.astype('int64'), relay.shape_of(call_5930))) # shape=(2, 15, 12)
output = relay.Tuple([bop_5939,])
output2 = relay.Tuple([bop_5942,])
func_5959 = relay.Function([], output)
mod['func_5959'] = func_5959
mod = relay.transform.InferType()(mod)
output = func_5959()
func_5960 = relay.Function([], output)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5199_call = mod.get_global_var('func_5199')
func_5200_call = mutated_mod.get_global_var('func_5200')
call_6077 = func_5199_call()
call_6078 = func_5199_call()
func_997_call = mod.get_global_var('func_997')
func_1000_call = mutated_mod.get_global_var('func_1000')
var_6090 = relay.var("var_6090", dtype = "float64", shape = (616,))#candidate|6090|(616,)|var|float64
call_6089 = relay.TupleGetItem(func_997_call(relay.reshape(var_6090.astype('float64'), [7, 88])), 3)
call_6091 = relay.TupleGetItem(func_1000_call(relay.reshape(var_6090.astype('float64'), [7, 88])), 3)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_6094 = func_1171_call()
call_6095 = func_1171_call()
output = relay.Tuple([call_6077,call_6089,var_6090,call_6094,])
output2 = relay.Tuple([call_6078,call_6091,var_6090,call_6095,])
func_6102 = relay.Function([var_6090,], output)
mod['func_6102'] = func_6102
mod = relay.transform.InferType()(mod)
var_6103 = relay.var("var_6103", dtype = "float64", shape = (616,))#candidate|6103|(616,)|var|float64
output = func_6102(var_6103)
func_6104 = relay.Function([var_6103], output)
mutated_mod['func_6104'] = func_6104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mod.get_global_var('func_1690')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_6116 = func_1690_call()
call_6117 = func_1690_call()
func_1029_call = mod.get_global_var('func_1029')
func_1032_call = mutated_mod.get_global_var('func_1032')
var_6123 = relay.var("var_6123", dtype = "int16", shape = (198, 2))#candidate|6123|(198, 2)|var|int16
call_6122 = relay.TupleGetItem(func_1029_call(relay.reshape(var_6123.astype('int16'), [396,])), 1)
call_6124 = relay.TupleGetItem(func_1032_call(relay.reshape(var_6123.astype('int16'), [396,])), 1)
uop_6125 = relay.log10(var_6123.astype('float64')) # shape=(198, 2)
var_6132 = relay.var("var_6132", dtype = "float64", shape = (198, 2))#candidate|6132|(198, 2)|var|float64
bop_6133 = relay.subtract(uop_6125.astype('uint8'), relay.reshape(var_6132.astype('uint8'), relay.shape_of(uop_6125))) # shape=(198, 2)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_6153 = relay.TupleGetItem(func_1494_call(), 0)
call_6154 = relay.TupleGetItem(func_1495_call(), 0)
bop_6156 = relay.equal(bop_6133.astype('bool'), relay.reshape(uop_6125.astype('bool'), relay.shape_of(bop_6133))) # shape=(198, 2)
output = relay.Tuple([call_6116,call_6122,call_6153,bop_6156,])
output2 = relay.Tuple([call_6117,call_6124,call_6154,bop_6156,])
func_6159 = relay.Function([var_6123,var_6132,], output)
mod['func_6159'] = func_6159
mod = relay.transform.InferType()(mod)
var_6160 = relay.var("var_6160", dtype = "int16", shape = (198, 2))#candidate|6160|(198, 2)|var|int16
var_6161 = relay.var("var_6161", dtype = "float64", shape = (198, 2))#candidate|6161|(198, 2)|var|float64
output = func_6159(var_6160,var_6161,)
func_6162 = relay.Function([var_6160,var_6161,], output)
mutated_mod['func_6162'] = func_6162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4474_call = mod.get_global_var('func_4474')
func_4475_call = mutated_mod.get_global_var('func_4475')
call_6186 = relay.TupleGetItem(func_4474_call(), 1)
call_6187 = relay.TupleGetItem(func_4475_call(), 1)
output = relay.Tuple([call_6186,])
output2 = relay.Tuple([call_6187,])
func_6231 = relay.Function([], output)
mod['func_6231'] = func_6231
mod = relay.transform.InferType()(mod)
output = func_6231()
func_6232 = relay.Function([], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_6344 = relay.TupleGetItem(func_897_call(), 2)
call_6345 = relay.TupleGetItem(func_899_call(), 2)
func_3036_call = mod.get_global_var('func_3036')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_6354 = relay.TupleGetItem(func_3036_call(relay.reshape(call_6344.astype('float32'), [360,])), 0)
call_6355 = relay.TupleGetItem(func_3039_call(relay.reshape(call_6344.astype('float32'), [360,])), 0)
output = relay.Tuple([call_6344,call_6354,])
output2 = relay.Tuple([call_6345,call_6355,])
func_6356 = relay.Function([], output)
mod['func_6356'] = func_6356
mod = relay.transform.InferType()(mod)
output = func_6356()
func_6357 = relay.Function([], output)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3215_call = mod.get_global_var('func_3215')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_6365 = relay.TupleGetItem(func_3215_call(), 0)
call_6366 = relay.TupleGetItem(func_3216_call(), 0)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_6376 = relay.TupleGetItem(func_2375_call(), 1)
call_6377 = relay.TupleGetItem(func_2377_call(), 1)
func_4643_call = mod.get_global_var('func_4643')
func_4646_call = mutated_mod.get_global_var('func_4646')
var_6388 = relay.var("var_6388", dtype = "float32", shape = (1485,))#candidate|6388|(1485,)|var|float32
var_6389 = relay.var("var_6389", dtype = "float64", shape = (405,))#candidate|6389|(405,)|var|float64
call_6387 = relay.TupleGetItem(func_4643_call(relay.reshape(var_6388.astype('float32'), [1485,]), relay.reshape(var_6389.astype('float64'), [405,]), ), 1)
call_6390 = relay.TupleGetItem(func_4646_call(relay.reshape(var_6388.astype('float32'), [1485,]), relay.reshape(var_6389.astype('float64'), [405,]), ), 1)
func_2328_call = mod.get_global_var('func_2328')
func_2332_call = mutated_mod.get_global_var('func_2332')
var_6392 = relay.var("var_6392", dtype = "float64", shape = (150, 1))#candidate|6392|(150, 1)|var|float64
call_6391 = relay.TupleGetItem(func_2328_call(relay.reshape(var_6392.astype('float64'), [150,]), relay.reshape(call_6387.astype('float64'), [1540,]), ), 5)
call_6393 = relay.TupleGetItem(func_2332_call(relay.reshape(var_6392.astype('float64'), [150,]), relay.reshape(call_6387.astype('float64'), [1540,]), ), 5)
output = relay.Tuple([call_6365,call_6376,call_6387,var_6388,var_6389,call_6391,var_6392,])
output2 = relay.Tuple([call_6366,call_6377,call_6390,var_6388,var_6389,call_6393,var_6392,])
func_6394 = relay.Function([var_6388,var_6389,var_6392,], output)
mod['func_6394'] = func_6394
mod = relay.transform.InferType()(mod)
var_6395 = relay.var("var_6395", dtype = "float32", shape = (1485,))#candidate|6395|(1485,)|var|float32
var_6396 = relay.var("var_6396", dtype = "float64", shape = (405,))#candidate|6396|(405,)|var|float64
var_6397 = relay.var("var_6397", dtype = "float64", shape = (150, 1))#candidate|6397|(150, 1)|var|float64
output = func_6394(var_6395,var_6396,var_6397,)
func_6398 = relay.Function([var_6395,var_6396,var_6397,], output)
mutated_mod['func_6398'] = func_6398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3297_call = mod.get_global_var('func_3297')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_6476 = func_3297_call()
call_6477 = func_3297_call()
output = call_6476
output2 = call_6477
func_6486 = relay.Function([], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mutated_mod.get_global_var('func_6486')
call_6487 = func_6486_call()
output = call_6487
func_6488 = relay.Function([], output)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6578 = relay.const([[[3.723078]],[[-6.496516]],[[-5.200584]],[[-2.530163]],[[-2.984984]],[[-2.159626]],[[-2.045578]],[[8.310466]],[[3.355810]],[[-2.964229]],[[6.653961]]], dtype = "float32")#candidate|6578|(11, 1, 1)|const|float32
uop_6579 = relay.sinh(const_6578.astype('float32')) # shape=(11, 1, 1)
bop_6587 = relay.maximum(uop_6579.astype('int8'), relay.reshape(const_6578.astype('int8'), relay.shape_of(uop_6579))) # shape=(11, 1, 1)
var_6597 = relay.var("var_6597", dtype = "float32", shape = (11, 5, 12))#candidate|6597|(11, 5, 12)|var|float32
bop_6598 = relay.less_equal(uop_6579.astype('bool'), var_6597.astype('bool')) # shape=(11, 5, 12)
var_6603 = relay.var("var_6603", dtype = "float32", shape = (11, 14, 1))#candidate|6603|(11, 14, 1)|var|float32
bop_6604 = relay.power(uop_6579.astype('float64'), var_6603.astype('float64')) # shape=(11, 14, 1)
bop_6611 = relay.greater_equal(var_6603.astype('bool'), bop_6587.astype('bool')) # shape=(11, 14, 1)
output = relay.Tuple([bop_6598,bop_6604,bop_6611,])
output2 = relay.Tuple([bop_6598,bop_6604,bop_6611,])
func_6614 = relay.Function([var_6597,var_6603,], output)
mod['func_6614'] = func_6614
mod = relay.transform.InferType()(mod)
var_6615 = relay.var("var_6615", dtype = "float32", shape = (11, 5, 12))#candidate|6615|(11, 5, 12)|var|float32
var_6616 = relay.var("var_6616", dtype = "float32", shape = (11, 14, 1))#candidate|6616|(11, 14, 1)|var|float32
output = func_6614(var_6615,var_6616,)
func_6617 = relay.Function([var_6615,var_6616,], output)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6653 = relay.var("var_6653", dtype = "float32", shape = ())#candidate|6653|()|var|float32
var_6654 = relay.var("var_6654", dtype = "float32", shape = (13, 4, 6))#candidate|6654|(13, 4, 6)|var|float32
bop_6655 = relay.divide(var_6653.astype('float32'), var_6654.astype('float32')) # shape=(13, 4, 6)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_6663 = func_2758_call()
call_6664 = func_2758_call()
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_6670 = relay.TupleGetItem(func_1121_call(), 2)
call_6671 = relay.TupleGetItem(func_1122_call(), 2)
func_1206_call = mod.get_global_var('func_1206')
func_1209_call = mutated_mod.get_global_var('func_1209')
var_6700 = relay.var("var_6700", dtype = "float32", shape = (132,))#candidate|6700|(132,)|var|float32
call_6699 = relay.TupleGetItem(func_1206_call(relay.reshape(var_6700.astype('float32'), [4, 3, 11])), 2)
call_6701 = relay.TupleGetItem(func_1209_call(relay.reshape(var_6700.astype('float32'), [4, 3, 11])), 2)
output = relay.Tuple([bop_6655,call_6663,call_6670,call_6699,var_6700,])
output2 = relay.Tuple([bop_6655,call_6664,call_6671,call_6701,var_6700,])
func_6710 = relay.Function([var_6653,var_6654,var_6700,], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
var_6711 = relay.var("var_6711", dtype = "float32", shape = ())#candidate|6711|()|var|float32
var_6712 = relay.var("var_6712", dtype = "float32", shape = (13, 4, 6))#candidate|6712|(13, 4, 6)|var|float32
var_6713 = relay.var("var_6713", dtype = "float32", shape = (132,))#candidate|6713|(132,)|var|float32
output = func_6710(var_6711,var_6712,var_6713,)
func_6714 = relay.Function([var_6711,var_6712,var_6713,], output)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mod.get_global_var('func_5813')
func_5814_call = mutated_mod.get_global_var('func_5814')
call_6719 = relay.TupleGetItem(func_5813_call(), 0)
call_6720 = relay.TupleGetItem(func_5814_call(), 0)
output = call_6719
output2 = call_6720
func_6737 = relay.Function([], output)
mod['func_6737'] = func_6737
mod = relay.transform.InferType()(mod)
output = func_6737()
func_6738 = relay.Function([], output)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4693_call = mutated_mod.get_global_var('func_4693')
call_6745 = relay.TupleGetItem(func_4691_call(), 0)
call_6746 = relay.TupleGetItem(func_4693_call(), 0)
output = relay.Tuple([call_6745,])
output2 = relay.Tuple([call_6746,])
func_6751 = relay.Function([], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mutated_mod.get_global_var('func_6751')
call_6752 = func_6751_call()
output = call_6752
func_6753 = relay.Function([], output)
mutated_mod['func_6753'] = func_6753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6772 = relay.var("var_6772", dtype = "uint8", shape = ())#candidate|6772|()|var|uint8
var_6773 = relay.var("var_6773", dtype = "uint8", shape = (2, 14, 15))#candidate|6773|(2, 14, 15)|var|uint8
bop_6774 = relay.bitwise_xor(var_6772.astype('uint8'), var_6773.astype('uint8')) # shape=(2, 14, 15)
uop_6778 = relay.sigmoid(var_6773.astype('float64')) # shape=(2, 14, 15)
output = relay.Tuple([bop_6774,uop_6778,])
output2 = relay.Tuple([bop_6774,uop_6778,])
func_6782 = relay.Function([var_6772,var_6773,], output)
mod['func_6782'] = func_6782
mod = relay.transform.InferType()(mod)
var_6783 = relay.var("var_6783", dtype = "uint8", shape = ())#candidate|6783|()|var|uint8
var_6784 = relay.var("var_6784", dtype = "uint8", shape = (2, 14, 15))#candidate|6784|(2, 14, 15)|var|uint8
output = func_6782(var_6783,var_6784,)
func_6785 = relay.Function([var_6783,var_6784,], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mod.get_global_var('func_6356')
func_6357_call = mutated_mod.get_global_var('func_6357')
call_6841 = relay.TupleGetItem(func_6356_call(), 0)
call_6842 = relay.TupleGetItem(func_6357_call(), 0)
func_6102_call = mod.get_global_var('func_6102')
func_6104_call = mutated_mod.get_global_var('func_6104')
var_6881 = relay.var("var_6881", dtype = "float64", shape = (1, 616))#candidate|6881|(1, 616)|var|float64
call_6880 = relay.TupleGetItem(func_6102_call(relay.reshape(var_6881.astype('float64'), [616,])), 3)
call_6882 = relay.TupleGetItem(func_6104_call(relay.reshape(var_6881.astype('float64'), [616,])), 3)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_6887 = relay.TupleGetItem(func_5416_call(), 0)
call_6888 = relay.TupleGetItem(func_5418_call(), 0)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_6894 = relay.TupleGetItem(func_4762_call(), 0)
call_6895 = relay.TupleGetItem(func_4763_call(), 0)
output = relay.Tuple([call_6841,call_6880,var_6881,call_6887,call_6894,])
output2 = relay.Tuple([call_6842,call_6882,var_6881,call_6888,call_6895,])
func_6903 = relay.Function([var_6881,], output)
mod['func_6903'] = func_6903
mod = relay.transform.InferType()(mod)
var_6904 = relay.var("var_6904", dtype = "float64", shape = (1, 616))#candidate|6904|(1, 616)|var|float64
output = func_6903(var_6904)
func_6905 = relay.Function([var_6904], output)
mutated_mod['func_6905'] = func_6905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3096_call = mod.get_global_var('func_3096')
func_3097_call = mutated_mod.get_global_var('func_3097')
call_6921 = func_3096_call()
call_6922 = func_3096_call()
output = call_6921
output2 = call_6922
func_6945 = relay.Function([], output)
mod['func_6945'] = func_6945
mod = relay.transform.InferType()(mod)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6945_call = mutated_mod.get_global_var('func_6945')
call_6946 = func_6945_call()
output = call_6946
func_6947 = relay.Function([], output)
mutated_mod['func_6947'] = func_6947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6953 = relay.var("var_6953", dtype = "bool", shape = (3, 12, 12))#candidate|6953|(3, 12, 12)|var|bool
var_6954 = relay.var("var_6954", dtype = "bool", shape = (3, 12, 12))#candidate|6954|(3, 12, 12)|var|bool
bop_6955 = relay.logical_and(var_6953.astype('bool'), relay.reshape(var_6954.astype('bool'), relay.shape_of(var_6953))) # shape=(3, 12, 12)
output = relay.Tuple([bop_6955,])
output2 = relay.Tuple([bop_6955,])
func_6963 = relay.Function([var_6953,var_6954,], output)
mod['func_6963'] = func_6963
mod = relay.transform.InferType()(mod)
mutated_mod['func_6963'] = func_6963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6963_call = mutated_mod.get_global_var('func_6963')
var_6965 = relay.var("var_6965", dtype = "bool", shape = (3, 12, 12))#candidate|6965|(3, 12, 12)|var|bool
var_6966 = relay.var("var_6966", dtype = "bool", shape = (3, 12, 12))#candidate|6966|(3, 12, 12)|var|bool
call_6964 = func_6963_call(var_6965,var_6966,)
output = call_6964
func_6967 = relay.Function([var_6965,var_6966,], output)
mutated_mod['func_6967'] = func_6967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6996 = relay.var("var_6996", dtype = "uint64", shape = (4, 1, 10))#candidate|6996|(4, 1, 10)|var|uint64
var_6997 = relay.var("var_6997", dtype = "uint64", shape = (4, 6, 10))#candidate|6997|(4, 6, 10)|var|uint64
bop_6998 = relay.not_equal(var_6996.astype('bool'), var_6997.astype('bool')) # shape=(4, 6, 10)
output = relay.Tuple([bop_6998,])
output2 = relay.Tuple([bop_6998,])
func_7002 = relay.Function([var_6996,var_6997,], output)
mod['func_7002'] = func_7002
mod = relay.transform.InferType()(mod)
var_7003 = relay.var("var_7003", dtype = "uint64", shape = (4, 1, 10))#candidate|7003|(4, 1, 10)|var|uint64
var_7004 = relay.var("var_7004", dtype = "uint64", shape = (4, 6, 10))#candidate|7004|(4, 6, 10)|var|uint64
output = func_7002(var_7003,var_7004,)
func_7005 = relay.Function([var_7003,var_7004,], output)
mutated_mod['func_7005'] = func_7005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6945_call = mod.get_global_var('func_6945')
func_6947_call = mutated_mod.get_global_var('func_6947')
call_7007 = func_6945_call()
call_7008 = func_6945_call()
output = call_7007
output2 = call_7008
func_7011 = relay.Function([], output)
mod['func_7011'] = func_7011
mod = relay.transform.InferType()(mod)
mutated_mod['func_7011'] = func_7011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7011_call = mutated_mod.get_global_var('func_7011')
call_7012 = func_7011_call()
output = call_7012
func_7013 = relay.Function([], output)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7020 = relay.var("var_7020", dtype = "uint16", shape = ())#candidate|7020|()|var|uint16
var_7021 = relay.var("var_7021", dtype = "uint16", shape = (4, 1, 2))#candidate|7021|(4, 1, 2)|var|uint16
bop_7022 = relay.greater(var_7020.astype('bool'), var_7021.astype('bool')) # shape=(4, 1, 2)
output = bop_7022
output2 = bop_7022
func_7026 = relay.Function([var_7020,var_7021,], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
mutated_mod['func_7026'] = func_7026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mutated_mod.get_global_var('func_7026')
var_7028 = relay.var("var_7028", dtype = "uint16", shape = ())#candidate|7028|()|var|uint16
var_7029 = relay.var("var_7029", dtype = "uint16", shape = (4, 1, 2))#candidate|7029|(4, 1, 2)|var|uint16
call_7027 = func_7026_call(var_7028,var_7029,)
output = call_7027
func_7030 = relay.Function([var_7028,var_7029,], output)
mutated_mod['func_7030'] = func_7030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4710_call = mod.get_global_var('func_4710')
func_4712_call = mutated_mod.get_global_var('func_4712')
call_7042 = func_4710_call()
call_7043 = func_4710_call()
output = call_7042
output2 = call_7043
func_7052 = relay.Function([], output)
mod['func_7052'] = func_7052
mod = relay.transform.InferType()(mod)
output = func_7052()
func_7053 = relay.Function([], output)
mutated_mod['func_7053'] = func_7053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_7137 = relay.TupleGetItem(func_4349_call(), 0)
call_7138 = relay.TupleGetItem(func_4351_call(), 0)
var_7148 = relay.var("var_7148", dtype = "float32", shape = (14, 11, 10))#candidate|7148|(14, 11, 10)|var|float32
bop_7149 = relay.less_equal(call_7137.astype('bool'), relay.reshape(var_7148.astype('bool'), relay.shape_of(call_7137))) # shape=(14, 11, 10)
bop_7152 = relay.less_equal(call_7138.astype('bool'), relay.reshape(var_7148.astype('bool'), relay.shape_of(call_7138))) # shape=(14, 11, 10)
output = bop_7149
output2 = bop_7152
func_7158 = relay.Function([var_7148,], output)
mod['func_7158'] = func_7158
mod = relay.transform.InferType()(mod)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7159 = relay.var("var_7159", dtype = "float32", shape = (14, 11, 10))#candidate|7159|(14, 11, 10)|var|float32
func_7158_call = mutated_mod.get_global_var('func_7158')
call_7160 = func_7158_call(var_7159)
output = call_7160
func_7161 = relay.Function([var_7159], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_7165 = relay.TupleGetItem(func_2375_call(), 0)
call_7166 = relay.TupleGetItem(func_2377_call(), 0)
output = relay.Tuple([call_7165,])
output2 = relay.Tuple([call_7166,])
func_7203 = relay.Function([], output)
mod['func_7203'] = func_7203
mod = relay.transform.InferType()(mod)
output = func_7203()
func_7204 = relay.Function([], output)
mutated_mod['func_7204'] = func_7204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5726_call = mod.get_global_var('func_5726')
func_5728_call = mutated_mod.get_global_var('func_5728')
call_7229 = func_5726_call()
call_7230 = func_5726_call()
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_7236 = relay.TupleGetItem(func_5017_call(), 0)
call_7237 = relay.TupleGetItem(func_5019_call(), 0)
output = relay.Tuple([call_7229,call_7236,])
output2 = relay.Tuple([call_7230,call_7237,])
func_7254 = relay.Function([], output)
mod['func_7254'] = func_7254
mod = relay.transform.InferType()(mod)
output = func_7254()
func_7255 = relay.Function([], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5959_call = mod.get_global_var('func_5959')
func_5960_call = mutated_mod.get_global_var('func_5960')
call_7283 = relay.TupleGetItem(func_5959_call(), 0)
call_7284 = relay.TupleGetItem(func_5960_call(), 0)
output = relay.Tuple([call_7283,])
output2 = relay.Tuple([call_7284,])
func_7301 = relay.Function([], output)
mod['func_7301'] = func_7301
mod = relay.transform.InferType()(mod)
output = func_7301()
func_7302 = relay.Function([], output)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_7329 = func_3483_call()
call_7330 = func_3483_call()
output = relay.Tuple([call_7329,])
output2 = relay.Tuple([call_7330,])
func_7332 = relay.Function([], output)
mod['func_7332'] = func_7332
mod = relay.transform.InferType()(mod)
output = func_7332()
func_7333 = relay.Function([], output)
mutated_mod['func_7333'] = func_7333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mod.get_global_var('func_6751')
func_6753_call = mutated_mod.get_global_var('func_6753')
call_7379 = relay.TupleGetItem(func_6751_call(), 0)
call_7380 = relay.TupleGetItem(func_6753_call(), 0)
output = relay.Tuple([call_7379,])
output2 = relay.Tuple([call_7380,])
func_7381 = relay.Function([], output)
mod['func_7381'] = func_7381
mod = relay.transform.InferType()(mod)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7381_call = mutated_mod.get_global_var('func_7381')
call_7382 = func_7381_call()
output = call_7382
func_7383 = relay.Function([], output)
mutated_mod['func_7383'] = func_7383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_7384 = relay.TupleGetItem(func_1494_call(), 0)
call_7385 = relay.TupleGetItem(func_1495_call(), 0)
output = call_7384
output2 = call_7385
func_7394 = relay.Function([], output)
mod['func_7394'] = func_7394
mod = relay.transform.InferType()(mod)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7394_call = mutated_mod.get_global_var('func_7394')
call_7395 = func_7394_call()
output = call_7395
func_7396 = relay.Function([], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7381_call = mod.get_global_var('func_7381')
func_7383_call = mutated_mod.get_global_var('func_7383')
call_7456 = relay.TupleGetItem(func_7381_call(), 0)
call_7457 = relay.TupleGetItem(func_7383_call(), 0)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_7459 = relay.TupleGetItem(func_1564_call(), 2)
call_7460 = relay.TupleGetItem(func_1566_call(), 2)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_7477 = relay.TupleGetItem(func_5017_call(), 0)
call_7478 = relay.TupleGetItem(func_5019_call(), 0)
func_5726_call = mod.get_global_var('func_5726')
func_5728_call = mutated_mod.get_global_var('func_5728')
call_7479 = func_5726_call()
call_7480 = func_5726_call()
output = relay.Tuple([call_7456,call_7459,call_7477,call_7479,])
output2 = relay.Tuple([call_7457,call_7460,call_7478,call_7480,])
func_7492 = relay.Function([], output)
mod['func_7492'] = func_7492
mod = relay.transform.InferType()(mod)
mutated_mod['func_7492'] = func_7492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7492_call = mutated_mod.get_global_var('func_7492')
call_7493 = func_7492_call()
output = call_7493
func_7494 = relay.Function([], output)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mod.get_global_var('func_5871')
func_5873_call = mutated_mod.get_global_var('func_5873')
call_7530 = func_5871_call()
call_7531 = func_5871_call()
output = relay.Tuple([call_7530,])
output2 = relay.Tuple([call_7531,])
func_7534 = relay.Function([], output)
mod['func_7534'] = func_7534
mod = relay.transform.InferType()(mod)
output = func_7534()
func_7535 = relay.Function([], output)
mutated_mod['func_7535'] = func_7535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_7562 = func_1070_call()
call_7563 = func_1070_call()
output = relay.Tuple([call_7562,])
output2 = relay.Tuple([call_7563,])
func_7564 = relay.Function([], output)
mod['func_7564'] = func_7564
mod = relay.transform.InferType()(mod)
output = func_7564()
func_7565 = relay.Function([], output)
mutated_mod['func_7565'] = func_7565
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7579 = relay.const([[[-4,-2,-1,8,-9,-8,-5,-7,5,9,-8,1,8,3],[-4,1,10,-10,-2,-6,5,-10,-3,9,4,6,-8,2],[-2,-3,-9,-6,-6,3,7,8,3,4,-6,-4,4,-4],[8,10,2,6,-6,4,1,1,-7,1,7,-6,10,-5],[3,-7,-7,10,-10,3,-1,9,2,-1,7,1,-9,8],[8,-4,-7,1,-7,5,7,5,-5,-9,2,-8,-10,-6],[-7,-8,2,-5,2,2,8,9,3,1,-8,-7,-8,1],[3,9,-4,4,-1,-2,8,4,-1,-9,-7,-4,-1,-5],[-5,1,6,7,-6,-5,-1,-10,2,3,7,2,2,-8],[7,4,-10,10,-4,7,8,-9,-2,8,-4,-9,-2,-6],[-7,1,-8,3,-1,-7,10,7,7,-6,8,2,4,-5],[-2,-5,5,-10,1,4,-8,7,2,-5,3,-7,3,2],[-1,-6,-8,-2,6,-8,9,9,1,-5,-3,4,-2,-4],[10,-4,3,-6,2,-3,-9,-5,3,6,-1,10,3,-9],[-7,-2,1,10,8,4,-1,10,10,-10,1,-10,1,8],[4,-1,-10,-9,-8,4,2,-10,7,-7,-7,-3,-5,5]],[[-2,1,10,-10,2,-3,8,-10,7,5,10,-4,-1,7],[1,3,5,-1,4,9,-1,-10,-2,-9,-10,5,-6,-1],[8,-4,-10,-2,9,-1,-7,2,-3,-6,3,-5,10,7],[9,-5,-5,-5,4,-1,-3,9,-5,5,-5,2,-6,3],[7,4,-7,4,-7,-7,8,-7,10,-8,-7,2,6,10],[-5,8,4,-9,-10,-2,-3,8,-7,-2,-1,4,7,-1],[-4,-5,-5,-10,-4,9,3,10,10,-9,5,6,6,-5],[7,-6,-7,9,-3,-3,7,2,5,8,-4,-4,10,2],[-1,-9,-2,-9,-5,3,9,-6,9,-6,3,-2,3,-3],[-8,-9,3,7,-2,-6,-7,4,6,2,-1,2,4,-1],[1,-10,-3,8,-8,3,3,8,8,-8,5,2,2,-9],[7,5,-6,-7,-5,-4,9,-4,7,-4,5,3,-6,5],[-8,-4,6,5,4,2,-6,-4,-6,-1,2,9,-9,-7],[-7,3,-7,-2,-6,-7,-10,10,7,-5,4,-5,-1,-4],[-9,5,3,5,7,-3,6,-3,-10,4,-9,-10,5,9],[-2,-6,6,-10,1,9,3,-1,1,-7,9,8,-10,-10]],[[4,1,-4,8,8,9,1,9,9,5,6,-10,-1,2],[7,-8,-3,6,4,9,1,-5,-3,8,-6,3,3,8],[4,-7,2,-1,-4,4,2,-2,-1,-5,3,8,4,-3],[5,-3,1,-9,7,10,6,9,-7,-10,8,-3,-9,-10],[10,-2,-5,3,8,9,-1,-5,4,6,-5,-10,-2,-3],[5,5,-9,10,3,7,5,-5,6,-5,5,2,8,4],[6,-10,-3,6,-2,-5,2,-6,-10,7,-2,6,4,9],[9,-1,-3,6,5,-9,10,2,5,-1,9,-3,-10,10],[7,5,3,3,-10,3,10,-2,7,2,-4,-9,1,-3],[8,-3,3,3,8,5,4,3,1,4,-3,-9,7,9],[-9,9,8,-4,-3,-10,-10,9,2,-8,1,-10,-6,3],[-9,3,7,-7,3,-9,-6,-9,3,-2,2,-1,-2,9],[-1,5,-7,10,-10,10,-6,-2,-9,1,-9,-10,-5,-7],[-1,6,1,4,10,1,-8,-7,-1,9,2,-3,-4,-5],[1,9,8,-3,-9,-6,-10,-10,9,5,8,9,3,-2],[-2,-10,-7,-6,4,-6,8,-1,1,9,3,-8,-7,1]],[[-9,-10,8,-6,9,-1,-1,6,-1,8,-2,-9,-10,-4],[-4,-6,9,-5,-6,-3,-1,7,-3,3,-2,5,-7,-9],[-3,-1,-9,1,-3,-5,5,1,4,10,-3,-3,-4,-8],[-5,8,-1,5,8,-8,-2,9,2,-5,-9,4,-10,6],[-5,6,1,-8,-5,-2,2,-3,4,-4,-1,3,-6,2],[5,-1,-2,2,3,8,6,-10,-2,3,-4,-2,-5,-4],[3,-8,-6,1,-10,-3,-7,-2,3,-3,6,10,-2,4],[9,-8,-6,1,7,-9,-8,-9,-5,10,-4,2,-9,-9],[-7,8,-3,-8,-5,10,-4,-1,1,-9,-3,-6,-10,-7],[3,9,9,7,4,-8,6,-4,-8,5,5,8,1,-4],[-4,-9,7,8,5,-5,-3,-1,2,3,8,-1,-2,-2],[-3,-5,7,6,3,-9,1,9,-8,7,4,2,-10,7],[-2,-4,-5,-3,-4,-8,3,7,-1,2,-7,-9,-10,4],[-2,9,-10,-10,-3,-9,10,-8,-3,8,1,3,-10,-8],[-3,-10,1,-8,4,8,-9,-8,4,-3,-9,3,1,-8],[8,3,6,6,-3,-10,2,-8,-7,-3,10,-10,-7,1]]], dtype = "uint32")#candidate|7579|(4, 16, 14)|const|uint32
var_7580 = relay.var("var_7580", dtype = "uint32", shape = (4, 16, 14))#candidate|7580|(4, 16, 14)|var|uint32
bop_7581 = relay.add(const_7579.astype('uint32'), relay.reshape(var_7580.astype('uint32'), relay.shape_of(const_7579))) # shape=(4, 16, 14)
output = relay.Tuple([bop_7581,])
output2 = relay.Tuple([bop_7581,])
func_7627 = relay.Function([var_7580,], output)
mod['func_7627'] = func_7627
mod = relay.transform.InferType()(mod)
var_7628 = relay.var("var_7628", dtype = "uint32", shape = (4, 16, 14))#candidate|7628|(4, 16, 14)|var|uint32
output = func_7627(var_7628)
func_7629 = relay.Function([var_7628], output)
mutated_mod['func_7629'] = func_7629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_7654 = relay.TupleGetItem(func_5017_call(), 0)
call_7655 = relay.TupleGetItem(func_5019_call(), 0)
output = relay.Tuple([call_7654,])
output2 = relay.Tuple([call_7655,])
func_7667 = relay.Function([], output)
mod['func_7667'] = func_7667
mod = relay.transform.InferType()(mod)
mutated_mod['func_7667'] = func_7667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7667_call = mutated_mod.get_global_var('func_7667')
call_7668 = func_7667_call()
output = call_7668
func_7669 = relay.Function([], output)
mutated_mod['func_7669'] = func_7669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7534_call = mod.get_global_var('func_7534')
func_7535_call = mutated_mod.get_global_var('func_7535')
call_7734 = relay.TupleGetItem(func_7534_call(), 0)
call_7735 = relay.TupleGetItem(func_7535_call(), 0)
func_6903_call = mod.get_global_var('func_6903')
func_6905_call = mutated_mod.get_global_var('func_6905')
const_7740 = relay.const([-6.317281,-6.984811,-5.337426,4.988607,-9.146382,7.488042,-6.243339,-2.363563,-2.965356,-4.910498,-4.199019,3.046745,0.845855,-1.714883,-7.976946,-9.862931,4.336369,4.711837,6.857794,5.163571,-8.257094,-3.075122,2.678801,4.840764,-6.240344,-4.702752,-5.434387,-9.276359,-5.264444,5.372743,-4.198007,3.649131,-3.953620,0.146675,4.139941,-3.178595,-5.596240,-2.824960,6.012935,6.690601,5.227622,-6.242455,0.616963,-6.547307,2.782371,-3.698932,8.201273,4.967046,0.957533,2.930402,-5.825561,-9.287996,9.693303,-0.927266,-3.461154,-2.701065,3.133926,-5.616108,2.336268,-7.067981,-0.618908,7.515344,-5.875524,6.548949,3.291803,9.281154,-3.278298,-2.948742,-3.558965,-4.267943,8.218519,1.221751,8.897777,0.317599,-4.075856,-3.556387,2.104540,-7.351455,-8.124774,7.311517,6.578208,7.230404,-8.611970,0.073737,-9.083174,-4.978033,-3.344251,3.589675,9.530035,-9.778399,-5.212462,-4.207529,-4.862203,-6.907674,-1.707006,5.121425,-0.836494,-9.367183,-6.271563,8.240759,5.597138,-8.481503,9.026831,-9.754552,2.152149,-3.256350,4.008279,0.578916,-9.033184,-7.992126,2.066772,-3.313041,0.659015,-1.849372,-4.771856,-5.602436,1.098585,4.697713,-2.208668,7.564500,-7.528016,-8.831422,-9.372833,-4.840450,4.514072,-9.147609,-9.568851,-5.099011,3.663047,7.061485,-9.313837,6.625813,6.527307,7.193909,-7.280705,4.433809,-4.780995,-5.425456,9.852350,3.622788,-2.946746,2.942488,-9.175450,-9.792143,-6.505014,5.525572,4.748444,4.525146,7.842430,2.088068,4.890434,0.044674,-0.993662,9.811282,-2.768337,-8.075824,-5.225442,2.168719,5.916474,-3.088733,1.920180,-6.209642,-3.203373,5.866476,-7.402734,-3.142054,9.178156,-8.440050,1.288112,2.534951,-7.964618,-0.604438,9.626103,-4.010514,3.142235,1.724819,-5.029483,-8.707341,9.721232,1.234675,-0.766352,6.654859,6.124988,7.562152,2.024961,-9.788535,-6.468320,-4.732311,-9.586442,-4.028469,1.314187,-6.818518,1.583711,9.146041,9.197216,5.508575,-4.604501,8.179530,-9.800214,-0.941961,-9.914092,3.696194,-1.177730,-4.860386,-2.858209,-3.907067,-5.148636,-3.648522,4.128126,-3.020716,-5.297477,-7.171859,9.845173,-6.183965,-4.006433,0.447727,8.691756,5.561787,0.218730,-4.381988,-8.124336,4.532947,1.444862,7.385067,7.749682,0.904159,6.413127,-3.925739,-6.278440,-2.604857,-3.609745,1.166430,-2.403234,2.354450,-8.276293,-9.492407,-8.822367,-5.297626,6.412133,4.331628,7.779035,-4.071868,-8.198262,7.630705,5.052239,-1.516300,-8.672411,8.878841,-5.534523,-0.016453,-8.166579,-1.956203,-4.130416,-2.008169,-3.934655,8.770705,2.428951,-7.272385,-2.512358,-9.362160,5.955889,3.417644,-3.661902,-4.260634,1.806593,6.840645,9.923632,1.962480,-1.807105,1.108810,3.440468,0.803117,-4.866710,-9.430591,6.861769,-7.873383,8.176297,-5.374119,-1.443940,1.311106,3.413696,3.387541,-8.974169,8.894185,4.459850,2.964086,4.023380,8.974303,-4.662010,-0.970458,-7.835766,-4.616122,9.198331,6.049330,2.073794,3.777264,2.329349,-8.497500,1.293471,3.578309,-9.822853,1.603259,3.243900,-6.954751,9.421401,9.350576,5.422148,9.890935,9.573556,4.697017,9.878933,6.015311,8.045723,-4.607354,5.584943,3.561720,-5.237676,4.817293,1.074909,1.197191,8.619237,-0.546773,-6.589628,6.749795,-3.060438,2.637199,1.222335,4.990962,-6.775656,-2.360143,0.824745,6.305708,-4.065681,1.797724,-0.161500,-0.382266,6.016922,9.785525,6.728522,1.338184,9.176427,0.998613,-4.315624,6.659903,8.110554,-2.248354,-5.339283,-9.809024,0.982481,-3.723788,7.316698,0.775738,-0.475152,-4.914030,4.153419,3.807649,-6.460041,3.535711,9.961338,6.636355,-6.328510,6.020922,-5.921737,-5.711730,9.186393,7.465975,2.675660,-6.539713,6.621315,5.443104,-2.381238,2.040512,-1.177006,5.016454,-0.081224,-7.244545,1.938731,2.385314,7.716112,1.899814,-6.215373,4.100119,9.827858,8.457350,5.508001,9.734535,-4.550462,-4.022981,9.210859,-0.276965,0.220802,7.455920,3.353060,-0.334820,-2.328430,6.670525,-0.487468,-9.798027,-1.822092,5.907464,7.262912,-9.313310,6.998928,-6.292410,-4.653676,-7.914276,1.588575,-6.856697,-7.928755,1.171699,-5.796117,-8.466903,-8.395384,-1.661315,-2.344227,-4.568778,-0.846076,8.033261,2.846775,8.591914,8.615637,9.318102,8.039024,7.491078,-6.567433,-7.348611,6.899722,-3.776156,9.757727,0.054374,-1.042572,9.699341,-9.540964,-4.460712,-7.799335,1.369938,-2.721545,-3.603526,8.049112,2.661211,1.969481,-5.029081,-3.908698,-4.173678,-4.803444,-8.151163,4.061946,3.752012,-5.430823,1.280904,6.601121,-0.774353,-5.688669,0.526475,-6.848901,0.122545,-8.563610,8.076302,-5.479156,0.587459,1.574310,7.325634,5.663885,-4.571333,6.480911,5.540050,-9.059585,-6.388967,-5.779942,-2.477616,-6.797638,-8.174310,-7.559751,-6.172973,9.720022,9.951180,6.259823,7.057267,0.142019,-1.197075,-8.997267,-8.680314,-8.363930,0.969044,-0.358146,9.419750,0.461059,-1.646318,5.015467,5.336897,-9.354130,1.835413,6.001642,-0.472637,-8.923369,8.710792,-3.715036,-1.033906,-7.740728,-5.496299,5.802316,-9.846145,8.024262,-0.823759,5.377637,-8.334311,-6.353580,4.448169,-7.098767,3.128797,-3.017138,0.316414,-3.744343,4.362906,5.618914,1.192035,-7.296909,-3.103252,-3.112968,-8.143925,-7.488397,2.117552,5.564512,-2.162151,3.605488,-1.620435,1.755574,-8.308901,5.050152,-2.569863,9.754141,-1.566258,0.438765,-7.695054,5.486685,9.093698,9.477964,9.259158,3.488635,-8.188230,6.199753,1.841943,4.107083,-1.403491,2.336326,5.164997,-0.129972,-2.849735,-7.715082,-0.721490,-2.757567,9.193870,-4.406795,-4.647927,2.780918,-6.361593,5.618358,1.015381,-4.896174,-3.272304,-1.592575,-9.328005,1.847741,9.097661,5.205573,6.348579,1.650220,3.629957,6.267594,-1.283132,9.293356,4.183631,-5.331373,6.889545,-5.283911,-1.904708,5.380620,-5.812143,-8.367006,7.423908,5.937041,1.629292,9.967934,-6.452101,-2.337572,2.665683,-3.884750,-6.388016,0.146963,9.882507,6.598364,2.501270,-8.827303,9.227164,5.754435,7.773504,-3.811009,5.962190,0.796747,-9.249568,-4.935152,1.117375,2.510305,0.831600,2.278408,-5.414461,6.490145,-4.689097,0.963517,-7.279887,-4.083085,4.547231,-0.162836,-6.025748,8.944706,9.228133], dtype = "float64")#candidate|7740|(616,)|const|float64
call_7739 = relay.TupleGetItem(func_6903_call(relay.reshape(const_7740.astype('float64'), [1, 616])), 1)
call_7741 = relay.TupleGetItem(func_6905_call(relay.reshape(const_7740.astype('float64'), [1, 616])), 1)
func_6710_call = mod.get_global_var('func_6710')
func_6714_call = mutated_mod.get_global_var('func_6714')
const_7747 = relay.const(0.331532, dtype = "float32")#candidate|7747|()|const|float32
var_7748 = relay.var("var_7748", dtype = "float32", shape = (3, 104))#candidate|7748|(3, 104)|var|float32
const_7749 = relay.const([-4.585270,-8.428815,-3.187356,-8.965135,-5.673619,-2.094977,4.534512,3.793541,0.422683,-3.222205,2.705649,9.254302,2.097652,-2.801098,-5.359081,7.044399,1.633415,5.992469,-9.375177,-6.276595,1.402836,-7.678125,3.744984,-3.791758,-0.292893,-1.960470,5.475023,8.716437,3.060518,2.653637,8.736979,-0.319985,-7.268152,-0.717670,-1.526881,5.714416,-6.184365,-7.565716,-1.877907,-1.954228,-5.782380,-1.507321,-2.174019,-6.477056,5.798006,4.866173,-6.647579,-4.587578,0.806152,-2.226558,2.279740,-5.249571,2.417204,-9.525499,5.798383,-2.944426,2.050474,-8.729529,-5.981785,2.118586,-6.904144,-7.552425,-3.893288,-0.739516,3.670267,9.161255,-1.096254,-4.727248,0.839000,1.824520,6.908058,-6.539017,4.442575,0.451745,5.204353,5.697825,2.081311,-3.919499,-6.444447,-9.227037,4.457416,8.828971,0.254345,9.078764,-7.578846,1.072281,-9.513981,-3.211168,-8.383365,7.746313,-2.805888,-0.565868,-5.167298,0.806657,9.782502,0.162373,-1.153644,-8.636064,-3.159175,-3.080761,8.427922,7.786527,5.276819,3.161139,4.221703,5.785977,8.296840,1.626518,-9.945022,8.334071,-6.152123,5.015400,0.934518,-8.894878,0.495049,-5.816112,3.027811,5.407836,9.765912,-9.455360,6.965658,-4.157887,1.803113,5.264026,-4.917971,0.964273,1.563956,9.674757,6.448926,-9.240832,-3.756872,5.307077], dtype = "float32")#candidate|7749|(132,)|const|float32
call_7746 = relay.TupleGetItem(func_6710_call(relay.reshape(const_7747.astype('float32'), []), relay.reshape(var_7748.astype('float32'), [13, 4, 6]), relay.reshape(const_7749.astype('float32'), [132,]), ), 0)
call_7750 = relay.TupleGetItem(func_6714_call(relay.reshape(const_7747.astype('float32'), []), relay.reshape(var_7748.astype('float32'), [13, 4, 6]), relay.reshape(const_7749.astype('float32'), [132,]), ), 0)
func_4189_call = mod.get_global_var('func_4189')
func_4195_call = mutated_mod.get_global_var('func_4195')
var_7752 = relay.var("var_7752", dtype = "float32", shape = (1024,))#candidate|7752|(1024,)|var|float32
const_7753 = relay.const([-8.803448,9.276897,-6.078076,-6.280488,1.460050,-2.793245,-1.682696,-8.362723,-2.191480,-2.999680,-1.938812,7.370100,4.685172,5.343962,-8.110988,3.491261,5.138360,-9.001902,7.039887,7.086288,-8.628708,-5.948465,2.472333,-9.588606,-1.732546,-6.956369,-2.522817,7.015819,-2.274733,5.757961,7.455065,6.463838,3.104266,7.064977,-9.982063,-4.301530,-2.935861,5.186408,2.183365,5.362513,8.749826,5.847125,6.677015,4.949301,2.370104,-8.386764,6.894119,3.212853,-7.713353,8.667005,-4.626476,7.210834,-8.516594,-4.960933,7.864778,6.582601,7.945876,-0.093390,-2.032192,-7.699046,-4.612742,-0.634855,-3.635069,6.284477,-2.323159,1.356706,-5.620368,1.145291,-8.020566,-9.680792,8.225471,-5.644354,-7.087925,-6.480081,-7.291795,6.293607,0.799751,-3.070424,9.781260,-3.706688,-6.822770,-7.317463,1.611225,2.899925,4.621614,0.749482,-5.437989,-6.936451,-3.294785,4.389532,6.467830,-5.366177,-4.528204,4.512511,-2.869283,-2.122139,6.499784,2.180825,-7.485685,-7.178272,-8.841809,1.728478,3.934740,-3.107453,-0.536045,-4.596242,-3.629523,-9.709725,8.597228,-0.735160,-6.114261,-4.841693,-1.094769,-9.674995,5.949776,-9.454793,-1.842095,-4.295934,3.911682,9.245879,-6.226450,-9.262142,-2.551615,3.113320,-3.706478,2.040851,-7.634598,-0.707426,3.480464,-7.618003,-9.423499,5.457595,-8.599766,-4.048809,-5.091436,3.485466,-9.442110,8.508071,-5.666511,-2.633081], dtype = "float64")#candidate|7753|(140,)|const|float64
const_7754 = relay.const([[-10,3],[3,-4],[8,2],[-10,-1],[-5,-8],[3,-2],[1,8],[4,9],[4,-8],[6,9],[-3,-8],[-9,4],[5,6],[6,-5],[-2,4],[2,9],[-5,-4],[-8,5],[-3,-2],[3,6],[-8,5],[2,2],[-4,9],[-10,-3],[-5,8],[-7,-3],[-7,3],[-3,-7],[3,8],[4,9],[-6,4],[-7,5],[-4,-5],[5,1],[7,1],[5,2],[9,-3],[-9,3],[-1,5],[3,-3],[-2,-8],[-8,-10],[-7,4],[8,9],[-5,-4],[-5,4],[-3,-7],[9,-5],[-8,-10],[4,-1],[3,-2],[-3,-2],[-5,5],[-3,-9],[5,3],[6,7],[-1,-10],[10,-7],[-7,6],[1,-8],[-6,8],[1,-6],[-3,-2],[-6,-3],[-7,1],[2,-10],[6,9],[-6,6],[2,-1],[-1,-1],[3,1],[4,6],[5,-1],[-5,8],[-7,-1],[-5,-6],[10,10],[-2,4],[-6,-7],[-9,4],[-2,4],[5,1],[10,8],[-10,4],[10,3],[-7,-9],[4,-3],[-1,-8],[3,-10],[-4,2],[-6,3],[5,-8],[-1,8],[10,1],[3,8],[3,7],[-7,-4],[-10,9],[9,2],[7,-8],[4,6],[-3,-9],[-1,2],[-2,9],[6,4],[-2,-9],[-3,6],[4,-10],[-9,-2],[3,9],[-8,-9],[-10,2],[2,9],[9,8],[3,-3],[7,7],[2,-6],[-3,-3],[8,3],[-8,3],[3,7],[-1,3],[8,-3],[3,-9],[-9,2],[-4,5],[6,-9],[5,6],[5,9],[8,-4],[-9,-9],[6,7],[-5,-1],[3,10],[-4,-4],[2,-6],[-3,6],[6,-10],[-6,-7],[-7,10],[-3,-10],[7,-8],[10,7],[-1,-10],[7,-10],[6,7],[-6,-4],[9,6],[5,10],[7,-2],[-9,-10],[3,9],[-8,2],[-6,3],[5,9],[-1,8],[3,9],[-6,-9],[-1,9],[1,-3],[-6,2],[-4,-6],[-2,3],[-1,3],[-8,4],[-3,-3],[3,8],[10,2],[6,8],[9,-1],[8,-8],[4,3],[-4,-10],[-3,1],[4,8],[9,-8],[4,-5],[9,-5],[9,-7],[5,-6],[10,-5],[-8,-9],[-4,-4],[6,9],[9,4],[9,6],[3,2],[-7,8],[-4,-2],[-9,-5],[-7,7],[-3,3],[10,10],[7,7],[3,-1],[-10,10],[1,-6],[-3,3]], dtype = "int16")#candidate|7754|(198, 2)|const|int16
var_7755 = relay.var("var_7755", dtype = "float32", shape = (250, 3))#candidate|7755|(250, 3)|var|float32
call_7751 = relay.TupleGetItem(func_4189_call(relay.reshape(var_7752.astype('float32'), [16, 16, 4]), relay.reshape(const_7753.astype('float64'), [140,]), relay.reshape(const_7747.astype('float32'), []), relay.reshape(const_7754.astype('int16'), [396, 1]), relay.reshape(var_7755.astype('float32'), [750,]), ), 8)
call_7756 = relay.TupleGetItem(func_4195_call(relay.reshape(var_7752.astype('float32'), [16, 16, 4]), relay.reshape(const_7753.astype('float64'), [140,]), relay.reshape(const_7747.astype('float32'), []), relay.reshape(const_7754.astype('int16'), [396, 1]), relay.reshape(var_7755.astype('float32'), [750,]), ), 8)
uop_7764 = relay.sqrt(const_7754.astype('float64')) # shape=(198, 2)
uop_7768 = relay.erf(uop_7764.astype('float64')) # shape=(198, 2)
func_3243_call = mod.get_global_var('func_3243')
func_3246_call = mutated_mod.get_global_var('func_3246')
const_7771 = relay.const([6.801935,6.466265,0.316351,-1.617590,2.940237,7.665647,-6.521203,0.775971,2.215522,1.941308,-4.800334,8.745940,2.230213,5.885700,-6.609714,7.063427,-0.908132,1.449235,-5.493193,4.085755,-1.619423,-5.930109,-9.354638,-5.576745,-1.491698,-2.459987,-5.454675,5.624528,-2.480993,-4.727102,8.173046,7.756775,-2.511492,5.094229,-1.114296,-4.855368,-5.647695,-9.817535,-5.050346,-9.924336,-4.018898,5.916970,7.187525,6.305342,-8.103864,-7.472522,7.555261,5.216698,-4.024394,-2.998921,-9.966110,-5.252338,6.461699,7.796921,5.736364,-9.232976,-2.294967,-7.031300,-2.892840,-1.824531,6.417859,-5.146435,-0.596169,-2.613352,6.974681,8.937099,-9.388700,-9.039925,-3.997089,0.260444,8.200339,-7.047544,-8.047641,4.440593,-9.008056,8.160814,6.980486,-4.712670,6.602604,-4.304896,-1.081579,-1.059919,4.891858,-6.409994,7.874330,-2.296454,-1.662204,-6.709688,9.310686,0.835382,3.903145,-6.381203,9.791858,-6.627676,5.977885,5.028335,6.136123,-8.485949,-9.851359,-7.775837,6.071822,-5.382566,7.905213,-8.154104,6.709174,-3.252550,-3.651934,4.514254,-1.139539,-7.781818,-8.690188,7.787009,-1.771600,4.276426,-8.784134,-6.097184,-1.229445,3.464742,9.236094,-8.721200,-6.864178,-7.857139,2.466435,-1.247447,8.239212,-3.121576,-7.614397,6.305419,2.020864,7.809971,2.525871,4.699218,-1.046084,8.667849,-0.491909,-2.655951,9.711486,5.239166,-0.981056,-6.707016,1.535037,-0.172899,-5.589589,-7.645406,-7.740379,1.501669,1.819902,4.459371,-5.510720,3.854277,-1.585977,3.223015,-7.103945,0.692570,-4.114894,2.179170,-0.163862,0.720956,1.988698,-9.034464,1.905280,6.651523,0.408085,-4.455979,-6.510866,-7.886112,-3.362142,-0.293014,6.185924,6.827790,1.811442,0.141168,-1.243394,-2.404099,-0.614965,3.404555,-6.959001,-6.623995,5.617612,2.304322,-7.391778,9.234701,8.390102,-8.186493,3.097702,-3.983754,-3.700407,-8.827865,-1.062361,-2.567231,3.885328,-0.742424,7.435954,0.081011,-7.982905,-2.732992,9.735056,1.743140,7.489197,7.408833,6.612881,2.720222,1.868195,6.518444,-3.508301,-3.241809,6.668498,0.860028,6.419308,-8.787025,-2.365267,-0.391128,-9.517384,-4.993016,0.623994,-8.039269], dtype = "float32")#candidate|7771|(216,)|const|float32
call_7770 = relay.TupleGetItem(func_3243_call(relay.reshape(const_7747.astype('int64'), []), relay.reshape(const_7771.astype('float32'), [216,]), ), 3)
call_7772 = relay.TupleGetItem(func_3246_call(relay.reshape(const_7747.astype('int64'), []), relay.reshape(const_7771.astype('float32'), [216,]), ), 3)
bop_7776 = relay.less(uop_7768.astype('bool'), relay.reshape(uop_7764.astype('bool'), relay.shape_of(uop_7768))) # shape=(198, 2)
func_7026_call = mod.get_global_var('func_7026')
func_7030_call = mutated_mod.get_global_var('func_7030')
const_7792 = relay.const([1,4,-10,7,-4,1,5,2], dtype = "uint16")#candidate|7792|(8,)|const|uint16
call_7791 = func_7026_call(relay.reshape(const_7747.astype('uint16'), []), relay.reshape(const_7792.astype('uint16'), [4, 1, 2]), )
call_7793 = func_7026_call(relay.reshape(const_7747.astype('uint16'), []), relay.reshape(const_7792.astype('uint16'), [4, 1, 2]), )
func_6102_call = mod.get_global_var('func_6102')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_7795 = relay.TupleGetItem(func_6102_call(relay.reshape(const_7740.astype('float64'), [616,])), 3)
call_7796 = relay.TupleGetItem(func_6104_call(relay.reshape(const_7740.astype('float64'), [616,])), 3)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_7800 = relay.TupleGetItem(func_5017_call(), 0)
call_7801 = relay.TupleGetItem(func_5019_call(), 0)
output = relay.Tuple([call_7734,call_7739,const_7740,call_7746,const_7747,var_7748,const_7749,call_7751,var_7752,const_7753,var_7755,call_7770,const_7771,bop_7776,call_7791,const_7792,call_7795,call_7800,])
output2 = relay.Tuple([call_7735,call_7741,const_7740,call_7750,const_7747,var_7748,const_7749,call_7756,var_7752,const_7753,var_7755,call_7772,const_7771,bop_7776,call_7793,const_7792,call_7796,call_7801,])
func_7809 = relay.Function([var_7748,var_7752,var_7755,], output)
mod['func_7809'] = func_7809
mod = relay.transform.InferType()(mod)
mutated_mod['func_7809'] = func_7809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7809_call = mutated_mod.get_global_var('func_7809')
var_7811 = relay.var("var_7811", dtype = "float32", shape = (3, 104))#candidate|7811|(3, 104)|var|float32
var_7812 = relay.var("var_7812", dtype = "float32", shape = (1024,))#candidate|7812|(1024,)|var|float32
var_7813 = relay.var("var_7813", dtype = "float32", shape = (250, 3))#candidate|7813|(250, 3)|var|float32
call_7810 = func_7809_call(var_7811,var_7812,var_7813,)
output = call_7810
func_7814 = relay.Function([var_7811,var_7812,var_7813,], output)
mutated_mod['func_7814'] = func_7814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3297_call = mod.get_global_var('func_3297')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_7844 = func_3297_call()
call_7845 = func_3297_call()
func_3175_call = mod.get_global_var('func_3175')
func_3178_call = mutated_mod.get_global_var('func_3178')
var_7886 = relay.var("var_7886", dtype = "float64", shape = (1540,))#candidate|7886|(1540,)|var|float64
call_7885 = relay.TupleGetItem(func_3175_call(relay.reshape(var_7886.astype('float64'), [1540,])), 1)
call_7887 = relay.TupleGetItem(func_3178_call(relay.reshape(var_7886.astype('float64'), [1540,])), 1)
output = relay.Tuple([call_7844,call_7885,var_7886,])
output2 = relay.Tuple([call_7845,call_7887,var_7886,])
func_7889 = relay.Function([var_7886,], output)
mod['func_7889'] = func_7889
mod = relay.transform.InferType()(mod)
mutated_mod['func_7889'] = func_7889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7890 = relay.var("var_7890", dtype = "float64", shape = (1540,))#candidate|7890|(1540,)|var|float64
func_7889_call = mutated_mod.get_global_var('func_7889')
call_7891 = func_7889_call(var_7890)
output = call_7891
func_7892 = relay.Function([var_7890], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7913 = relay.var("var_7913", dtype = "int64", shape = (9, 13, 7))#candidate|7913|(9, 13, 7)|var|int64
const_7914 = relay.const([[[-1,8,6,4,-2,-3,7],[6,-7,-7,7,3,-3,8],[5,4,2,5,-5,-7,-8],[-2,2,-8,-2,8,-2,-7],[-6,-7,-6,-8,-2,6,10],[4,6,4,-4,9,-9,5],[-7,-6,-7,3,-5,2,6],[7,-1,-5,-7,-7,3,-6],[2,-4,6,-2,-5,6,8],[9,8,-9,7,8,-4,6],[10,2,5,-8,7,4,5],[-6,-10,6,-3,6,10,5],[-8,3,-2,7,2,8,5]],[[3,-2,4,6,-9,-8,10],[-9,-4,-5,-5,4,6,-7],[-7,-8,6,-9,-3,4,-3],[-7,10,7,2,-3,-1,-9],[4,5,2,-2,-5,-9,-8],[-2,-5,6,-6,-1,5,5],[4,-6,4,10,5,4,-6],[2,-6,-7,-3,8,7,8],[-5,9,1,-10,7,10,-3],[-5,9,-5,2,-8,8,-4],[5,-7,7,2,3,2,3],[3,-8,6,-6,2,6,10],[-6,-7,6,-3,-9,-10,8]],[[-2,4,6,-4,9,5,5],[-3,-3,1,2,-5,-10,-4],[9,-2,3,-8,8,-3,-1],[2,10,-5,6,5,3,5],[-4,-4,10,-4,2,4,-4],[-10,-5,-3,10,8,-1,-2],[-10,-10,5,-7,-1,-8,1],[-6,-8,9,9,-8,9,-4],[8,-7,-4,-3,2,-4,1],[8,3,-6,-10,-6,-1,9],[10,-2,-9,7,7,-2,9],[2,9,1,-5,5,-6,-6],[5,6,-9,4,-7,-1,10]],[[-3,-3,-9,6,6,-9,-7],[-4,-1,-8,-4,5,-3,8],[9,1,-9,9,-5,-7,8],[-2,2,-8,4,-2,-1,8],[-1,1,-6,-2,-5,2,7],[2,9,10,1,6,4,-6],[9,10,-2,-10,3,5,2],[-1,9,4,-7,-9,2,4],[5,2,5,4,5,8,-5],[-8,-10,-7,2,7,6,10],[1,-6,5,2,2,-7,-9],[6,10,2,3,-9,1,-6],[1,-6,1,3,-2,8,-1]],[[2,2,4,2,-9,5,1],[5,-4,-5,-3,6,2,10],[-3,-5,-9,-3,-8,-8,1],[7,3,1,-2,-10,3,-10],[-6,-7,1,6,-10,4,-5],[4,-8,-1,-5,-8,1,2],[6,2,-2,4,2,5,8],[-9,2,2,4,-10,-8,-6],[10,4,1,9,5,-9,3],[9,1,-8,-1,4,-6,6],[7,-2,1,-3,1,6,-7],[-1,6,6,7,-4,-4,8],[5,3,-8,-8,-2,1,-5]],[[7,1,6,9,-9,-6,7],[-9,2,-8,5,2,5,4],[-7,-3,3,-4,3,1,-8],[-3,6,1,-10,-3,-5,8],[-10,7,3,2,6,-7,9],[-1,2,3,9,-6,-3,4],[3,-7,6,10,4,9,2],[-8,-1,-8,-4,3,-5,10],[5,5,8,2,-5,-7,-8],[8,-10,9,-5,8,-7,3],[-7,9,9,-1,5,-2,8],[1,6,6,-6,-1,3,2],[-10,4,-10,-1,-9,7,-6]],[[6,10,1,-7,-2,-3,5],[2,-6,4,10,-4,-2,-1],[-7,-10,4,10,-6,4,9],[-10,-5,-4,5,-2,-10,3],[-9,3,-5,1,-2,5,-8],[-5,10,3,-10,-6,-3,-9],[7,6,-8,4,-1,3,5],[-1,-8,-2,-2,4,10,-6],[-10,-7,-6,-3,-2,-8,-1],[8,8,1,-6,6,9,-1],[-2,3,9,-9,3,-9,-8],[-9,7,-6,-7,-3,-1,-2],[-1,-9,-7,6,-2,-2,8]],[[9,-10,6,-6,-2,-9,-5],[-6,-1,7,3,-4,-3,-6],[1,-8,-2,9,-8,10,9],[7,-10,-10,-1,2,-4,-4],[3,1,6,4,-10,7,1],[9,7,-3,-8,-7,-1,-4],[-7,1,-10,4,4,7,-5],[3,2,-6,-8,3,2,-9],[-2,6,-3,9,-9,-1,-3],[8,-3,-3,-5,-1,8,10],[-7,-10,2,-10,5,10,4],[-9,-2,-6,8,-9,10,5],[-7,5,2,4,-3,2,-4]],[[2,-6,7,-5,-4,-4,-7],[2,-2,5,-2,5,4,10],[6,10,2,-6,-5,-1,8],[-9,-10,7,1,-9,2,1],[-2,1,5,-3,-7,-5,3],[-1,-1,-8,-3,-3,6,1],[8,3,3,5,7,-6,-10],[-9,6,6,10,8,-8,2],[-5,-1,5,10,-9,-7,-6],[3,3,-8,1,6,-9,-9],[-7,10,-3,4,4,7,10],[2,-8,-1,10,-2,5,-4],[-4,1,1,-3,10,-2,3]]], dtype = "int64")#candidate|7914|(9, 13, 7)|const|int64
bop_7915 = relay.bitwise_and(var_7913.astype('int64'), relay.reshape(const_7914.astype('int64'), relay.shape_of(var_7913))) # shape=(9, 13, 7)
output = relay.Tuple([bop_7915,])
output2 = relay.Tuple([bop_7915,])
func_7933 = relay.Function([var_7913,], output)
mod['func_7933'] = func_7933
mod = relay.transform.InferType()(mod)
mutated_mod['func_7933'] = func_7933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7934 = relay.var("var_7934", dtype = "int64", shape = (9, 13, 7))#candidate|7934|(9, 13, 7)|var|int64
func_7933_call = mutated_mod.get_global_var('func_7933')
call_7935 = func_7933_call(var_7934)
output = call_7935
func_7936 = relay.Function([var_7934], output)
mutated_mod['func_7936'] = func_7936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_7941 = func_1675_call()
call_7942 = func_1675_call()
func_7332_call = mod.get_global_var('func_7332')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_7945 = relay.TupleGetItem(func_7332_call(), 0)
call_7946 = relay.TupleGetItem(func_7333_call(), 0)
output = relay.Tuple([call_7941,call_7945,])
output2 = relay.Tuple([call_7942,call_7946,])
func_7956 = relay.Function([], output)
mod['func_7956'] = func_7956
mod = relay.transform.InferType()(mod)
output = func_7956()
func_7957 = relay.Function([], output)
mutated_mod['func_7957'] = func_7957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7983 = relay.var("var_7983", dtype = "uint64", shape = (10, 13, 14))#candidate|7983|(10, 13, 14)|var|uint64
var_7984 = relay.var("var_7984", dtype = "uint64", shape = (10, 13, 14))#candidate|7984|(10, 13, 14)|var|uint64
bop_7985 = relay.greater_equal(var_7983.astype('bool'), relay.reshape(var_7984.astype('bool'), relay.shape_of(var_7983))) # shape=(10, 13, 14)
output = relay.Tuple([bop_7985,])
output2 = relay.Tuple([bop_7985,])
func_7991 = relay.Function([var_7983,var_7984,], output)
mod['func_7991'] = func_7991
mod = relay.transform.InferType()(mod)
var_7992 = relay.var("var_7992", dtype = "uint64", shape = (10, 13, 14))#candidate|7992|(10, 13, 14)|var|uint64
var_7993 = relay.var("var_7993", dtype = "uint64", shape = (10, 13, 14))#candidate|7993|(10, 13, 14)|var|uint64
output = func_7991(var_7992,var_7993,)
func_7994 = relay.Function([var_7992,var_7993,], output)
mutated_mod['func_7994'] = func_7994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1070_call = mod.get_global_var('func_1070')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_7996 = func_1070_call()
call_7997 = func_1070_call()
output = call_7996
output2 = call_7997
func_8003 = relay.Function([], output)
mod['func_8003'] = func_8003
mod = relay.transform.InferType()(mod)
output = func_8003()
func_8004 = relay.Function([], output)
mutated_mod['func_8004'] = func_8004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_8044 = func_2758_call()
call_8045 = func_2758_call()
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_8085 = relay.TupleGetItem(func_2783_call(relay.reshape(call_8044.astype('float32'), [360,])), 3)
call_8086 = relay.TupleGetItem(func_2785_call(relay.reshape(call_8044.astype('float32'), [360,])), 3)
output = relay.Tuple([call_8044,call_8085,])
output2 = relay.Tuple([call_8045,call_8086,])
func_8149 = relay.Function([], output)
mod['func_8149'] = func_8149
mod = relay.transform.InferType()(mod)
mutated_mod['func_8149'] = func_8149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8149_call = mutated_mod.get_global_var('func_8149')
call_8150 = func_8149_call()
output = call_8150
func_8151 = relay.Function([], output)
mutated_mod['func_8151'] = func_8151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7667_call = mod.get_global_var('func_7667')
func_7669_call = mutated_mod.get_global_var('func_7669')
call_8169 = relay.TupleGetItem(func_7667_call(), 0)
call_8170 = relay.TupleGetItem(func_7669_call(), 0)
output = relay.Tuple([call_8169,])
output2 = relay.Tuple([call_8170,])
func_8171 = relay.Function([], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
mutated_mod['func_8171'] = func_8171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mutated_mod.get_global_var('func_8171')
call_8172 = func_8171_call()
output = call_8172
func_8173 = relay.Function([], output)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8209 = relay.var("var_8209", dtype = "float32", shape = (6, 4))#candidate|8209|(6, 4)|var|float32
uop_8210 = relay.acosh(var_8209.astype('float32')) # shape=(6, 4)
func_1460_call = mod.get_global_var('func_1460')
func_1462_call = mutated_mod.get_global_var('func_1462')
var_8217 = relay.var("var_8217", dtype = "int8", shape = (900,))#candidate|8217|(900,)|var|int8
call_8216 = relay.TupleGetItem(func_1460_call(relay.reshape(var_8217.astype('int8'), [900,])), 5)
call_8218 = relay.TupleGetItem(func_1462_call(relay.reshape(var_8217.astype('int8'), [900,])), 5)
output = relay.Tuple([uop_8210,call_8216,var_8217,])
output2 = relay.Tuple([uop_8210,call_8218,var_8217,])
func_8222 = relay.Function([var_8209,var_8217,], output)
mod['func_8222'] = func_8222
mod = relay.transform.InferType()(mod)
mutated_mod['func_8222'] = func_8222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mutated_mod.get_global_var('func_8222')
var_8224 = relay.var("var_8224", dtype = "float32", shape = (6, 4))#candidate|8224|(6, 4)|var|float32
var_8225 = relay.var("var_8225", dtype = "int8", shape = (900,))#candidate|8225|(900,)|var|int8
call_8223 = func_8222_call(var_8224,var_8225,)
output = call_8223
func_8226 = relay.Function([var_8224,var_8225,], output)
mutated_mod['func_8226'] = func_8226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_8228 = relay.TupleGetItem(func_4349_call(), 0)
call_8229 = relay.TupleGetItem(func_4351_call(), 0)
uop_8242 = relay.erf(call_8228.astype('float64')) # shape=(14, 11, 10)
uop_8244 = relay.erf(call_8229.astype('float64')) # shape=(14, 11, 10)
output = relay.Tuple([uop_8242,])
output2 = relay.Tuple([uop_8244,])
func_8261 = relay.Function([], output)
mod['func_8261'] = func_8261
mod = relay.transform.InferType()(mod)
mutated_mod['func_8261'] = func_8261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8261_call = mutated_mod.get_global_var('func_8261')
call_8262 = func_8261_call()
output = call_8262
func_8263 = relay.Function([], output)
mutated_mod['func_8263'] = func_8263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7956_call = mod.get_global_var('func_7956')
func_7957_call = mutated_mod.get_global_var('func_7957')
call_8266 = relay.TupleGetItem(func_7956_call(), 0)
call_8267 = relay.TupleGetItem(func_7957_call(), 0)
const_8288 = relay.const([[[-4.093701,7.088179,-8.440621,5.456909,0.988609,-9.025212,-8.232536,-4.495707,1.116063,-4.696015,2.140891,5.488245],[3.998007,-1.088236,-8.294240,6.569712,-8.606157,-1.761067,-1.288408,-5.631666,-2.200831,-3.099013,4.944500,-2.936656],[2.301571,-5.611584,4.363702,-8.983127,-6.216406,6.399139,-9.499091,2.162236,7.192170,9.370760,-7.058209,3.816367],[5.742852,4.298810,-3.299068,9.794846,1.934631,4.581538,4.314990,4.305815,-7.726571,-9.425888,-6.143040,-3.228573],[5.861243,1.667022,5.669390,-2.155107,3.484397,-1.217432,7.676823,4.701215,3.657127,3.665319,-8.809046,-1.176919],[-0.583460,2.012669,1.492827,-1.229789,-6.726096,-5.009554,6.856304,-2.127092,-4.329407,-9.120657,-6.330123,-8.932055],[-9.091754,-8.749707,6.606193,-7.577053,9.446698,-3.541147,1.453583,9.479852,-9.422607,6.066105,0.574025,-8.237126],[-8.888186,4.266691,-9.333626,1.570546,-9.391120,1.024294,-5.254609,8.049035,-4.101471,-3.832407,-0.483566,1.058639],[3.602552,-6.434499,-3.475719,8.685105,-4.558627,9.101277,-4.318432,8.658261,-1.988279,-5.610730,-8.653490,-4.458274],[3.704643,-3.112784,-1.641495,6.158673,1.464370,-7.863566,-5.478226,-6.137712,3.036115,-1.875165,-3.764968,-0.740042],[-8.469158,-8.143339,-2.519450,2.022109,2.648040,9.563260,5.581058,-0.979082,0.060590,-5.789611,-6.440971,-5.287609],[-6.068373,3.066779,-7.048485,1.252290,0.808712,-1.206475,-9.140299,4.943019,2.274843,-3.523689,6.744152,6.702314],[7.652105,4.592129,3.857608,7.336015,-1.616883,-5.437836,-6.210375,2.117253,6.452731,8.367406,-6.105353,-4.538152],[-7.417756,-4.926790,7.228302,-7.127688,-9.193773,-5.604216,1.684540,0.391888,-1.648124,-0.527936,-4.956942,-8.847323],[9.652740,6.670448,4.123755,-6.052207,-1.246147,8.279293,-0.041471,0.700972,3.350338,-4.378634,9.543112,-0.170625]],[[-2.391854,9.093435,5.513470,-1.419679,6.468396,-9.910985,0.486162,-0.127096,5.541220,9.063420,9.179215,-3.631918],[-3.378267,6.915101,1.789677,-7.794129,5.060321,-2.129364,2.199251,4.123463,-0.814162,8.058663,-6.538936,-8.942201],[-8.710715,-9.522262,-6.220356,-3.080893,9.553133,-8.381494,-2.185638,-7.024410,-1.700260,-9.671535,-5.440390,7.372415],[0.686746,-7.862467,-6.569341,4.750376,2.704559,3.441762,4.745036,-3.654532,0.367884,4.484268,2.191650,0.727528],[-1.456340,-5.802145,-1.606700,4.111077,-8.527361,1.205978,-7.182488,7.664755,-5.463271,6.041068,9.798932,7.802434],[1.074467,-2.689643,-9.832555,-1.656309,6.095342,8.494310,-6.819745,7.237326,3.771506,-4.629927,6.280565,6.931451],[-0.557916,7.534768,-4.048953,-9.088110,3.026304,3.731147,8.991737,-3.301281,-5.703841,-3.031452,0.098262,3.137698],[-7.898515,-6.026372,-2.688561,-0.701930,9.050626,-7.606031,-3.758850,1.185188,1.635136,4.679808,-2.594458,9.453397],[-7.819010,-7.387598,7.953948,-7.326950,0.369281,5.200468,-1.169520,-1.193390,-0.832888,6.697569,0.052326,-7.029229],[6.207914,9.869957,-8.559203,-7.174986,-9.578348,-3.235487,4.986130,-8.717989,9.000012,-7.415311,7.384911,9.483512],[6.989698,-4.879672,5.510119,2.791713,-3.035622,9.397507,5.728328,3.471303,-2.521193,1.830867,-0.980804,-2.787798],[2.099158,5.266079,5.516932,-5.003097,-6.695869,8.561858,-2.201147,-4.569516,-9.674679,0.933850,-0.093813,1.980119],[-7.438249,-0.444207,-4.637003,-8.476367,1.290290,-0.565011,4.778903,7.750097,0.058987,0.808413,0.252735,2.570186],[7.064631,3.181974,0.570729,-3.991221,6.628720,2.092267,7.048809,2.791206,2.731105,8.534675,0.853233,-2.464438],[-1.372997,-7.838891,-8.147355,0.436044,-2.063481,1.711832,3.172806,9.799039,-1.137755,4.913904,-6.978163,-8.768578]]], dtype = "float32")#candidate|8288|(2, 15, 12)|const|float32
bop_8289 = relay.bitwise_xor(call_8266.astype('uint32'), relay.reshape(const_8288.astype('uint32'), relay.shape_of(call_8266))) # shape=(2, 15, 12)
bop_8292 = relay.bitwise_xor(call_8267.astype('uint32'), relay.reshape(const_8288.astype('uint32'), relay.shape_of(call_8267))) # shape=(2, 15, 12)
uop_8293 = relay.cos(const_8288.astype('float32')) # shape=(2, 15, 12)
uop_8302 = relay.acosh(const_8288.astype('float32')) # shape=(2, 15, 12)
output = relay.Tuple([bop_8289,uop_8293,uop_8302,])
output2 = relay.Tuple([bop_8292,uop_8293,uop_8302,])
func_8307 = relay.Function([], output)
mod['func_8307'] = func_8307
mod = relay.transform.InferType()(mod)
mutated_mod['func_8307'] = func_8307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8307_call = mutated_mod.get_global_var('func_8307')
call_8308 = func_8307_call()
output = call_8308
func_8309 = relay.Function([], output)
mutated_mod['func_8309'] = func_8309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mod.get_global_var('func_2579')
func_2581_call = mutated_mod.get_global_var('func_2581')
call_8312 = relay.TupleGetItem(func_2579_call(), 0)
call_8313 = relay.TupleGetItem(func_2581_call(), 0)
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_8314 = relay.TupleGetItem(func_4420_call(), 0)
call_8315 = relay.TupleGetItem(func_4421_call(), 0)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
call_8329 = func_1171_call()
call_8330 = func_1171_call()
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_8331 = relay.TupleGetItem(func_4420_call(), 0)
call_8332 = relay.TupleGetItem(func_4421_call(), 0)
func_7381_call = mod.get_global_var('func_7381')
func_7383_call = mutated_mod.get_global_var('func_7383')
call_8335 = relay.TupleGetItem(func_7381_call(), 0)
call_8336 = relay.TupleGetItem(func_7383_call(), 0)
output = relay.Tuple([call_8312,call_8314,call_8329,call_8331,call_8335,])
output2 = relay.Tuple([call_8313,call_8315,call_8330,call_8332,call_8336,])
func_8352 = relay.Function([], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
output = func_8352()
func_8353 = relay.Function([], output)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5494_call = mod.get_global_var('func_5494')
func_5495_call = mutated_mod.get_global_var('func_5495')
call_8382 = relay.TupleGetItem(func_5494_call(), 1)
call_8383 = relay.TupleGetItem(func_5495_call(), 1)
output = call_8382
output2 = call_8383
func_8425 = relay.Function([], output)
mod['func_8425'] = func_8425
mod = relay.transform.InferType()(mod)
output = func_8425()
func_8426 = relay.Function([], output)
mutated_mod['func_8426'] = func_8426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3215_call = mod.get_global_var('func_3215')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_8501 = relay.TupleGetItem(func_3215_call(), 1)
call_8502 = relay.TupleGetItem(func_3216_call(), 1)
output = relay.Tuple([call_8501,])
output2 = relay.Tuple([call_8502,])
func_8509 = relay.Function([], output)
mod['func_8509'] = func_8509
mod = relay.transform.InferType()(mod)
output = func_8509()
func_8510 = relay.Function([], output)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2080_call = mod.get_global_var('func_2080')
func_2081_call = mutated_mod.get_global_var('func_2081')
call_8534 = relay.TupleGetItem(func_2080_call(), 0)
call_8535 = relay.TupleGetItem(func_2081_call(), 0)
func_3436_call = mod.get_global_var('func_3436')
func_3438_call = mutated_mod.get_global_var('func_3438')
var_8537 = relay.var("var_8537", dtype = "int16", shape = (396,))#candidate|8537|(396,)|var|int16
call_8536 = relay.TupleGetItem(func_3436_call(relay.reshape(var_8537.astype('int16'), [396,])), 0)
call_8538 = relay.TupleGetItem(func_3438_call(relay.reshape(var_8537.astype('int16'), [396,])), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2719_call = mutated_mod.get_global_var('func_2719')
var_8549 = relay.var("var_8549", dtype = "float64", shape = (150,))#candidate|8549|(150,)|var|float64
var_8550 = relay.var("var_8550", dtype = "float32", shape = (1485,))#candidate|8550|(1485,)|var|float32
call_8548 = relay.TupleGetItem(func_2715_call(relay.reshape(var_8549.astype('float64'), [150,]), relay.reshape(var_8550.astype('float32'), [1485,]), ), 2)
call_8551 = relay.TupleGetItem(func_2719_call(relay.reshape(var_8549.astype('float64'), [150,]), relay.reshape(var_8550.astype('float32'), [1485,]), ), 2)
bop_8554 = relay.power(var_8550.astype('float32'), relay.reshape(call_8548.astype('float32'), relay.shape_of(var_8550))) # shape=(1485,)
bop_8557 = relay.power(var_8550.astype('float32'), relay.reshape(call_8551.astype('float32'), relay.shape_of(var_8550))) # shape=(1485,)
output = relay.Tuple([call_8534,call_8536,var_8537,var_8549,bop_8554,])
output2 = relay.Tuple([call_8535,call_8538,var_8537,var_8549,bop_8557,])
func_8561 = relay.Function([var_8537,var_8549,var_8550,], output)
mod['func_8561'] = func_8561
mod = relay.transform.InferType()(mod)
mutated_mod['func_8561'] = func_8561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8561_call = mutated_mod.get_global_var('func_8561')
var_8563 = relay.var("var_8563", dtype = "int16", shape = (396,))#candidate|8563|(396,)|var|int16
var_8564 = relay.var("var_8564", dtype = "float64", shape = (150,))#candidate|8564|(150,)|var|float64
var_8565 = relay.var("var_8565", dtype = "float32", shape = (1485,))#candidate|8565|(1485,)|var|float32
call_8562 = func_8561_call(var_8563,var_8564,var_8565,)
output = call_8562
func_8566 = relay.Function([var_8563,var_8564,var_8565,], output)
mutated_mod['func_8566'] = func_8566
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8568 = relay.const([[[3.213043,6.603301],[1.842480,4.150219],[-1.793495,-4.073312]],[[-8.319449,-9.792936],[-5.755408,-8.529634],[4.942162,0.473602]],[[-7.844303,2.549848],[1.577831,-6.778602],[-3.405048,7.703317]],[[-1.487759,4.668627],[0.224316,9.088859],[-5.335296,-5.033616]],[[-2.709363,-6.038779],[8.858610,7.975666],[-1.929687,-0.505645]],[[6.478662,7.969044],[3.457139,-5.788346],[0.962454,-3.361612]],[[8.409999,-5.904932],[-1.219213,-8.004556],[-8.910031,-9.259529]],[[6.692030,6.328281],[-0.233425,7.825216],[-0.891209,-5.064096]],[[6.260029,3.033045],[-9.625684,5.187041],[5.832042,5.086799]],[[-7.432281,-4.935726],[9.384075,-8.645265],[0.418323,-4.686714]],[[-2.872378,2.047003],[-5.652157,-3.894978],[-6.129959,7.486301]],[[1.949979,-0.517947],[-9.638892,-8.653420],[-6.627006,8.368592]],[[-5.848541,-3.669238],[5.766276,9.556073],[-2.313257,-9.357286]],[[-7.566326,6.329180],[-7.737095,-7.596628],[4.439352,1.060622]],[[-6.062644,5.920609],[-5.461051,-1.133156],[-6.169662,-5.058683]],[[-0.165985,6.171030],[4.760996,1.637604],[-5.154259,-6.978125]]], dtype = "float64")#candidate|8568|(16, 3, 2)|const|float64
uop_8569 = relay.tan(const_8568.astype('float64')) # shape=(16, 3, 2)
output = uop_8569
output2 = uop_8569
func_8574 = relay.Function([], output)
mod['func_8574'] = func_8574
mod = relay.transform.InferType()(mod)
output = func_8574()
func_8575 = relay.Function([], output)
mutated_mod['func_8575'] = func_8575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6737_call = mod.get_global_var('func_6737')
func_6738_call = mutated_mod.get_global_var('func_6738')
call_8576 = func_6737_call()
call_8577 = func_6737_call()
func_4025_call = mod.get_global_var('func_4025')
func_4026_call = mutated_mod.get_global_var('func_4026')
call_8583 = func_4025_call()
call_8584 = func_4025_call()
output = relay.Tuple([call_8576,call_8583,])
output2 = relay.Tuple([call_8577,call_8584,])
func_8597 = relay.Function([], output)
mod['func_8597'] = func_8597
mod = relay.transform.InferType()(mod)
mutated_mod['func_8597'] = func_8597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8597_call = mutated_mod.get_global_var('func_8597')
call_8598 = func_8597_call()
output = call_8598
func_8599 = relay.Function([], output)
mutated_mod['func_8599'] = func_8599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8612 = relay.var("var_8612", dtype = "uint8", shape = ())#candidate|8612|()|var|uint8
const_8613 = relay.const([[[3,-8,10,1,3,-3,-1,-3,-9,-9,-3,-8,10],[4,-2,7,9,-8,-5,6,8,-4,-8,-6,-7,-5],[-1,5,-4,-9,2,-2,3,9,-8,5,-2,5,-7],[-9,7,7,7,-9,3,-7,-6,-5,10,5,6,-4],[-1,10,-3,4,-3,9,-7,2,6,4,-10,-9,10],[8,7,4,-2,-6,3,4,3,9,10,9,-3,-10],[-1,-3,4,-8,-3,9,-9,8,-6,-2,-6,8,-2],[-5,-1,8,-3,-2,-10,8,-5,7,-3,-7,-9,-10]]], dtype = "uint8")#candidate|8613|(1, 8, 13)|const|uint8
bop_8614 = relay.add(var_8612.astype('uint8'), const_8613.astype('uint8')) # shape=(1, 8, 13)
output = bop_8614
output2 = bop_8614
F = relay.Function([var_8612,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8612,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

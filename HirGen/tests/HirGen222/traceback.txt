==========mod==========
#[version = "0.0.5"]
def @func_6737() -> Tensor[(360), float32] {
  %0 = @func_5813() /* ty=(Tensor[(360), float32],) */;
  %0.0
}

def @func_3342(%var_3337: Tensor[(150), float64]) -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  %1 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %2 = %1.1;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(360), float32] */;
  %4 = reshape(%3, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %5 = @func_2783(%4) /* ty=(Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %6 = cast(%var_3337, dtype="float64") /* ty=Tensor[(150), float64] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %8 = reshape(%6, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %9 = reshape(%7, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %10 = @func_1376(%8, %9) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %11 = @func_1690() /* ty=Tensor[(360), float32] */;
  %12 = %5.3;
  %13 = %10.2;
  (%11, %2, %12, %13, %var_3337, meta[relay.Constant][0] /* ty=Tensor[(1485), float32] */)
}

def @func_2579() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %14 = @func_1690() /* ty=Tensor[(360), float32] */;
  %15 = @func_1690() /* ty=Tensor[(360), float32] */;
  (%14, %15)
}

def @func_2080() -> (Tensor[(360), float32],) {
  %16 = @func_1690() /* ty=Tensor[(360), float32] */;
  (%16,)
}

def @func_4691() -> (Tensor[(360), float32],) {
  %17 = @func_3115() /* ty=(Tensor[(360), float32],) */;
  %18 = %17.0;
  (%18,)
}

def @func_5615() -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), float32]) {
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %21 = reshape(%19, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %22 = reshape(%20, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %23 = @func_865(%21, %22) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %24 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %25 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  %26 = %23.0;
  %27 = %24.0;
  (%25, %26, meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, %27)
}

def @func_7956() -> (Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %28 = @func_7332() /* ty=(Tensor[(360), float32],) */;
  %29 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  %30 = %28.0;
  (%29, %30)
}

def @func_8509() -> (Tensor[(360), float32],) {
  %31 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %32 = %31.1;
  (%32,)
}

def @func_5199() -> Tensor[(360), float32] {
  %33 = @func_4691() /* ty=(Tensor[(360), float32],) */;
  %33.0
}

def @func_6751() -> (Tensor[(360), float32],) {
  %34 = @func_4691() /* ty=(Tensor[(360), float32],) */;
  %35 = %34.0;
  (%35,)
}

def @func_8425() -> Tensor[(360), float32] {
  %36 = @func_5494() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %36.1
}

def @func_5017() -> (Tensor[(360), float32],) {
  %37 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%37,)
}

def @func_5813() -> (Tensor[(360), float32],) {
  %38 = @func_4691() /* ty=(Tensor[(360), float32],) */;
  %39 = %38.0;
  (%39,)
}

def @func_865(%var_831: Tensor[(6, 11, 6), int16], %var_832: Tensor[(6, 11, 6), int16]) -> (Tensor[(6, 11, 6), bool],) {
  %40 = cast(%var_832, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %41 = shape_of(%var_831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%var_831, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %44 = subtract(%42, %43) /* ty=Tensor[(6, 11, 6), int16] */;
  %45 = cast(%44, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %46 = shape_of(%var_832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%var_832, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %49 = greater(%47, %48) /* ty=Tensor[(6, 11, 6), bool] */;
  (%49,)
}

def @func_6710(%var_6653: float32, %var_6654: Tensor[(13, 4, 6), float32], %var_6700: Tensor[(132), float32]) -> (Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) {
  %50 = cast(%var_6653, dtype="float32") /* ty=float32 */;
  %51 = cast(%var_6654, dtype="float32") /* ty=Tensor[(13, 4, 6), float32] */;
  %52 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %53 = cast(%var_6700, dtype="float32") /* ty=Tensor[(132), float32] */;
  %54 = reshape(%53, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), float32] */;
  %55 = @func_1206(%54) /* ty=(Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %56 = divide(%50, %51) /* ty=Tensor[(13, 4, 6), float32] */;
  %57 = @func_2758() /* ty=Tensor[(360), float32] */;
  %58 = %52.2;
  %59 = %55.2;
  (%56, %57, %58, %59, %var_6700)
}

def @func_5443() -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(450, 2), int8], Tensor[(1485), float32], Tensor[(9, 15, 11), float32]) {
  %60 = @func_2080() /* ty=(Tensor[(360), float32],) */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(450, 2), int8] */, dtype="int8") /* ty=Tensor[(450, 2), int8] */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(450, 2), int8] */, dtype="int8") /* ty=Tensor[(450, 2), int8] */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %64 = reshape(%61, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %65 = reshape(%62, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %66 = reshape(%63, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %67 = @func_362(%64, %65, %66) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %69 = reshape(%68, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %70 = @func_2974(%69) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %71 = %60.0;
  %72 = %67.2;
  %73 = %70.1;
  (%71, %72, meta[relay.Constant][2] /* ty=Tensor[(450, 2), int8] */, meta[relay.Constant][3] /* ty=Tensor[(1485), float32] */, %73)
}

def @func_2028(%var_1934: Tensor[(14, 11, 8), uint16], %var_1935: Tensor[(14, 11, 8), uint16], %var_1961: Tensor[(1485), float32], %var_2023: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(14, 11, 8), float32], Tensor[(14, 11, 10), float64], Tensor[(14, 4, 11), float64], Tensor[(616), float64]) {
  %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %75 = cast(%var_1961, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %76 = reshape(%74, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %77 = reshape(%75, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %78 = @func_1376(%76, %77) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %79 = cast(%var_1935, dtype="uint16") /* ty=Tensor[(14, 11, 8), uint16] */;
  %80 = shape_of(%var_1934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_1934, dtype="uint16") /* ty=Tensor[(14, 11, 8), uint16] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %83 = minimum(%81, %82) /* ty=Tensor[(14, 11, 8), uint16] */;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
  %85 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %86 = cast(%var_2023, dtype="float64") /* ty=Tensor[(616), float64] */;
  %87 = reshape(%86, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %88 = @func_579(%87) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %89 = %78.0;
  %90 = erf(%84) /* ty=Tensor[(14, 11, 8), float32] */;
  %91 = %85.0;
  %92 = %88.0;
  (%89, meta[relay.Constant][4] /* ty=Tensor[(150), float64] */, %var_1961, %90, %91, %92, %var_2023)
}

def @func_1564() -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %93 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %94 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %96 = reshape(%95, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %97 = %93.0;
  %98 = %94.2;
  %99 = @func_167(%96) /* ty=Tensor[(9, 15, 11), float32] */;
  (%97, %98, %99, meta[relay.Constant][5] /* ty=Tensor[(1485), float32] */)
}

def @func_4710() -> Tensor[(360), bool] {
  %100 = @func_4241() /* ty=(Tensor[(360), bool],) */;
  %100.0
}

def @func_6231() -> (Tensor[(360), float32],) {
  %101 = @func_4474() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %102 = %101.1;
  (%102,)
}

def @func_461(%var_442: Tensor[(15, 1, 10), float64]) -> (Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) {
  %103 = cast(%var_442, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %105 = reshape(%104, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %106 = cast(meta[relay.Constant][7] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %109 = reshape(%106, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %110 = reshape(%107, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %111 = reshape(%108, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %112 = @func_362(%109, %110, %111) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %113 = sin(%103) /* ty=Tensor[(15, 1, 10), float64] */;
  %114 = @func_167(%105) /* ty=Tensor[(9, 15, 11), float32] */;
  %115 = %112.2;
  (%113, %114, meta[relay.Constant][6] /* ty=Tensor[(1485), float32] */, %115, meta[relay.Constant][7] /* ty=Tensor[(900), int8] */)
}

def @func_7534() -> (Tensor[(360), float32],) {
  %116 = @func_5871() /* ty=Tensor[(360), float32] */;
  (%116,)
}

def @func_5674() -> (Tensor[(360), float32],) {
  %117 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%117,)
}

def @func_2105() -> Tensor[(360), float32] {
  @func_1171() /* ty=Tensor[(360), float32] */
}

def @func_2841(%var_2823: Tensor[(16, 13, 6), float64]) -> (Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) {
  %118 = cast(%var_2823, dtype="float64") /* ty=Tensor[(16, 13, 6), float64] */;
  %119 = exp(%118) /* ty=Tensor[(16, 13, 6), float64] */;
  %120 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  (%119, %120)
}

def @func_1719(%var_1699: float32, %var_1700: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) {
  %121 = cast(%var_1699, dtype="float32") /* ty=float32 */;
  %122 = cast(%var_1700, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %123 = cast(%var_1699, dtype="bool") /* ty=bool */;
  %124 = cast(%var_1700, dtype="bool") /* ty=Tensor[(12, 2, 9), bool] */;
  %125 = maximum(%121, %122) /* ty=Tensor[(12, 2, 9), float32] */;
  %126 = logical_and(%123, %124) /* ty=Tensor[(12, 2, 9), bool] */;
  %127 = @func_1690() /* ty=Tensor[(360), float32] */;
  (%125, %126, %127)
}

def @func_3115() -> (Tensor[(360), float32],) {
  %128 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%128,)
}

def @func_7254() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %129 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %130 = @func_5726() /* ty=Tensor[(360), float32] */;
  %131 = %129.0;
  (%130, %131)
}

def @func_3483() -> Tensor[(360), float32] {
  @func_2105() /* ty=Tensor[(360), float32] */
}

def @func_4819(%var_4813: Tensor[(150), float64]) -> (Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) {
  %132 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %133 = %132.1;
  %134 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
  %135 = %134.2;
  %136 = cast(%135, dtype="int16") /* ty=Tensor[(360), int16] */;
  %137 = shape_of(%133, dtype="int32") /* ty=Tensor[(1), int32] */;
  %138 = cast(%133, dtype="int16") /* ty=Tensor[(360), int16] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?), int16] */;
  %140 = cast(%var_4813, dtype="float64") /* ty=Tensor[(150), float64] */;
  %141 = reshape(%140, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %142 = @func_3342(%141) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
  %143 = right_shift(%138, %139) /* ty=Tensor[(360), int16] */;
  %144 = %142.0;
  (%143, %144, %var_4813)
}

def @func_5959() -> (Tensor[(2, 15, 12), int64],) {
  %145 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %146 = %145.1;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 15, 12), float32] */, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %151 = bitwise_and(%149, %150) /* ty=Tensor[(2, 15, 12), int64] */;
  (%151,)
}

def @func_8171() -> (Tensor[(360), float32],) {
  %152 = @func_7667() /* ty=(Tensor[(360), float32],) */;
  %153 = %152.0;
  (%153,)
}

def @func_6963(%var_6953: Tensor[(3, 12, 12), bool], %var_6954: Tensor[(3, 12, 12), bool]) -> (Tensor[(3, 12, 12), bool],) {
  %154 = cast(%var_6954, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %155 = shape_of(%var_6953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%var_6953, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = logical_and(%156, %157) /* ty=Tensor[(3, 12, 12), bool] */;
  (%158,)
}

def @func_7809(%var_7748: Tensor[(3, 104), float32], %var_7752: Tensor[(1024), float32], %var_7755: Tensor[(250, 3), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(13, 4, 6), float32], float32, Tensor[(3, 104), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(1024), float32], Tensor[(140), float64], Tensor[(250, 3), float32], Tensor[(216), float32], Tensor[(216), float32], Tensor[(198, 2), bool], Tensor[(4, 1, 2), bool], Tensor[(8), uint16], Tensor[(360), float32], Tensor[(360), float32]) {
  %159 = @func_7534() /* ty=(Tensor[(360), float32],) */;
  %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %161 = reshape(%160, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %162 = @func_6903(%161) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) */;
  %163 = cast(0.331532f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %164 = cast(%var_7748, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %165 = cast(meta[relay.Constant][10] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %166 = reshape(%163, newshape=[]) /* ty=float32 */;
  %167 = reshape(%164, newshape=[13, 4, 6]) /* ty=Tensor[(13, 4, 6), float32] */;
  %168 = reshape(%165, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %169 = @func_6710(%166, %167, %168) /* ty=(Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) */;
  %170 = cast(%var_7752, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %171 = cast(meta[relay.Constant][11] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %172 = cast(0.331532f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(198, 2), int16] */, dtype="int16") /* ty=Tensor[(198, 2), int16] */;
  %174 = cast(%var_7755, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
  %175 = reshape(%170, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
  %176 = reshape(%171, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %177 = reshape(%172, newshape=[]) /* ty=float32 */;
  %178 = reshape(%173, newshape=[396, 1]) /* ty=Tensor[(396, 1), int16] */;
  %179 = reshape(%174, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %180 = @func_4189(%175, %176, %177, %178, %179) /* ty=(Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) */;
  %181 = cast(0.331532f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %182 = cast(meta[relay.Constant][13] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %183 = reshape(%181, newshape=[]) /* ty=int64 */;
  %184 = reshape(%182, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %185 = @func_3243(%183, %184) /* ty=(Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) */;
  %186 = cast(meta[relay.Constant][12] /* ty=Tensor[(198, 2), int16] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %187 = sqrt(%186) /* ty=Tensor[(198, 2), float64] */;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %189 = erf(%188) /* ty=Tensor[(198, 2), float64] */;
  %190 = cast(%187, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(2), int32] */;
  %192 = cast(%189, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %194 = cast(0.331532f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %195 = cast(meta[relay.Constant][14] /* ty=Tensor[(8), uint16] */, dtype="uint16") /* ty=Tensor[(8), uint16] */;
  %196 = reshape(%194, newshape=[]) /* ty=uint16 */;
  %197 = reshape(%195, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), uint16] */;
  %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %199 = reshape(%198, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %200 = @func_6102(%199) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) */;
  %201 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %202 = %159.0;
  %203 = %162.1;
  %204 = %169.0;
  %205 = %180.8;
  %206 = %185.3;
  %207 = less(%192, %193) /* ty=Tensor[(198, 2), bool] */;
  %208 = @func_7026(%196, %197) /* ty=Tensor[(4, 1, 2), bool] */;
  %209 = %200.3;
  %210 = %201.0;
  (%202, %203, meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, %204, 0.331532f /* ty=float32 */, %var_7748, meta[relay.Constant][10] /* ty=Tensor[(132), float32] */, %205, %var_7752, meta[relay.Constant][11] /* ty=Tensor[(140), float64] */, %var_7755, %206, meta[relay.Constant][13] /* ty=Tensor[(216), float32] */, %207, %208, meta[relay.Constant][14] /* ty=Tensor[(8), uint16] */, %209, %210)
}

def @func_1690() -> Tensor[(360), float32] {
  %211 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %211.0
}

def @func_1070() -> Tensor[(360), float32] {
  %212 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %212.2
}

def @func_5645(%var_5635: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(616), float64], Tensor[(360), float64]) {
  %213 = cast(%var_5635, dtype="float64") /* ty=Tensor[(616), float64] */;
  %214 = reshape(%213, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %215 = @func_579(%214) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %216 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
  %217 = %216.2;
  %218 = cast(meta[relay.Constant][15] /* ty=Tensor[(360), float32] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(1), int32] */;
  %220 = cast(%217, dtype="float64") /* ty=Tensor[(360), float64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?), float64] */;
  %222 = %215.2;
  %223 = floor_divide(%220, %221) /* ty=Tensor[(360), float64] */;
  (%222, %var_5635, %223)
}

def @func_1780(%var_1768: float32, %var_1769: Tensor[(216), float32]) -> (Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) {
  %224 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(154, 10), float64] */, dtype="float64") /* ty=Tensor[(154, 10), float64] */;
  %226 = reshape(%225, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %227 = @func_1645(%226) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %228 = cast(%var_1768, dtype="float32") /* ty=float32 */;
  %229 = cast(%var_1769, dtype="float32") /* ty=Tensor[(216), float32] */;
  %230 = reshape(%228, newshape=[]) /* ty=float32 */;
  %231 = reshape(%229, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %232 = @func_1719(%230, %231) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
  %233 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %234 = %224.2;
  %235 = %227.2;
  %236 = %232.1;
  %237 = %233.0;
  (%234, %235, meta[relay.Constant][16] /* ty=Tensor[(154, 10), float64] */, %236, %var_1768, %var_1769, %237)
}

def @func_4215(%var_4212: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %238 = cast(%var_4212, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  log10(%238) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_6782(%var_6772: uint8, %var_6773: Tensor[(2, 14, 15), uint8]) -> (Tensor[(2, 14, 15), uint8], Tensor[(2, 14, 15), float64]) {
  %239 = cast(%var_6772, dtype="uint8") /* ty=uint8 */;
  %240 = cast(%var_6773, dtype="uint8") /* ty=Tensor[(2, 14, 15), uint8] */;
  %241 = cast(%var_6773, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
  %242 = bitwise_xor(%239, %240) /* ty=Tensor[(2, 14, 15), uint8] */;
  %243 = sigmoid(%241) /* ty=Tensor[(2, 14, 15), float64] */;
  (%242, %243)
}

def @func_1029(%var_1022: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) {
  %244 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %246 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %247 = reshape(%245, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %248 = reshape(%246, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %249 = @func_865(%247, %248) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %250 = cast(%var_1022, dtype="float64") /* ty=Tensor[(396), float64] */;
  %251 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(396), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %252 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), int16] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?), float64] */;
  %254 = %244.2;
  %255 = %249.0;
  %256 = mod(%252, %253) /* ty=Tensor[(396), float64] */;
  (%254, %255, %256)
}

def @func_167(%var_152: Tensor[(9, 15, 11), float32]) -> Tensor[(9, 15, 11), float32] {
  %257 = cast(%var_152, dtype="float32") /* ty=Tensor[(9, 15, 11), float32] */;
  sin(%257) /* ty=Tensor[(9, 15, 11), float32] */
}

def @func_7002(%var_6996: Tensor[(4, 1, 10), uint64], %var_6997: Tensor[(4, 6, 10), uint64]) -> (Tensor[(4, 6, 10), bool],) {
  %258 = cast(%var_6996, dtype="bool") /* ty=Tensor[(4, 1, 10), bool] */;
  %259 = cast(%var_6997, dtype="bool") /* ty=Tensor[(4, 6, 10), bool] */;
  %260 = not_equal(%258, %259) /* ty=Tensor[(4, 6, 10), bool] */;
  (%260,)
}

def @func_5180(%var_5170: bool) -> (Tensor[(15, 16, 8), bool],) {
  %261 = cast(%var_5170, dtype="bool") /* ty=bool */;
  %262 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 16, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %263 = logical_and(%261, %262) /* ty=Tensor[(15, 16, 8), bool] */;
  (%263,)
}

def @func_6486() -> Tensor[(360), float32] {
  @func_3297() /* ty=Tensor[(360), float32] */
}

def @func_1870(%var_1827: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) {
  %264 = @func_1690() /* ty=Tensor[(360), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(360), float32] */;
  %266 = reshape(%265, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %267 = cast(%var_1827, dtype="int16") /* ty=Tensor[(396), int16] */;
  %268 = reshape(%267, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %269 = @func_1029(%268) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
  %270 = cast(meta[relay.Constant][19] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %271 = reshape(%270, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
  %272 = @func_461(%271) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
  %273 = cast(meta[relay.Constant][19] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %274 = atan(%273) /* ty=Tensor[(150), float64] */;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(150), float64] */;
  %276 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %277 = @func_510(%266) /* ty=Tensor[(2, 15, 12), float32] */;
  %278 = %269.1;
  %279 = %272.4;
  %280 = exp(%275) /* ty=Tensor[(150), float64] */;
  %281 = %276.0;
  (%264, %277, %278, %var_1827, %279, %280, %281)
}

def @func_3096() -> Tensor[(360), float32] {
  @func_1171() /* ty=Tensor[(360), float32] */
}

def @func_7158(%var_7148: Tensor[(14, 11, 10), float32]) -> Tensor[(14, 11, 10), bool] {
  %282 = @func_4349() /* ty=(Tensor[(14, 11, 10), float32],) */;
  %283 = %282.0;
  %284 = cast(%var_7148, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%286, %287) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_4666(%var_4648: Tensor[(10, 2, 8), int64], %var_4649: Tensor[(10, 2, 8), int64]) -> (Tensor[(10, 2, 8), int64], Tensor[(360), float32]) {
  %288 = cast(%var_4649, dtype="int64") /* ty=Tensor[(10, 2, 8), int64] */;
  %289 = shape_of(%var_4648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_4648, dtype="int64") /* ty=Tensor[(10, 2, 8), int64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %292 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %293 = minimum(%290, %291) /* ty=Tensor[(10, 2, 8), int64] */;
  %294 = %292.2;
  (%293, %294)
}

def @func_3215() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %295 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %296 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %297 = %295.2;
  %298 = %296.0;
  (%297, %298)
}

def @func_8003() -> Tensor[(360), float32] {
  @func_1070() /* ty=Tensor[(360), float32] */
}

def @func_1645(%var_1643: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %299 = @func_1070() /* ty=Tensor[(360), float32] */;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(360), float32] */;
  %301 = cast(%var_1643, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %302 = reshape(%301, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %303 = atanh(%300) /* ty=Tensor[(360), float32] */;
  %304 = @func_1048(%302) /* ty=Tensor[(14, 11, 10), bool] */;
  (%303, %304, %var_1643)
}

def @func_3281(%var_3277: Tensor[(1, 14, 10), float64]) -> (Tensor[(1, 14, 10), float64],) {
  %305 = cast(%var_3277, dtype="float64") /* ty=Tensor[(1, 14, 10), float64] */;
  %306 = log2(%305) /* ty=Tensor[(1, 14, 10), float64] */;
  (%306,)
}

def @func_6394(%var_6388: Tensor[(1485), float32], %var_6389: Tensor[(405), float64], %var_6392: Tensor[(150, 1), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(1485), float32], Tensor[(405), float64], Tensor[(1540), float64], Tensor[(150, 1), float64]) {
  %307 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %308 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %309 = cast(%var_6388, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %310 = cast(%var_6389, dtype="float64") /* ty=Tensor[(405), float64] */;
  %311 = reshape(%309, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %312 = reshape(%310, newshape=[405]) /* ty=Tensor[(405), float64] */;
  %313 = @func_4643(%311, %312) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) */;
  %314 = cast(%var_6392, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %315 = %313.1;
  %316 = cast(%315, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %317 = reshape(%314, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %318 = reshape(%316, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %319 = @func_2328(%317, %318) /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) */;
  %320 = %307.0;
  %321 = %308.1;
  %322 = %319.5;
  (%320, %321, %315, %var_6388, %var_6389, %322, %var_6392)
}

def @func_1048(%var_1041: Tensor[(14, 11, 10), float64]) -> Tensor[(14, 11, 10), bool] {
  %323 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %324 = %323.0;
  %325 = cast(%var_1041, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%327, %328) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_8597() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %329 = @func_6737() /* ty=Tensor[(360), float32] */;
  %330 = @func_4025() /* ty=Tensor[(360), float32] */;
  (%329, %330)
}

def @func_1675() -> Tensor[(2, 15, 12), float32] {
  %331 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %331.1
}

def @func_7933(%var_7913: Tensor[(9, 13, 7), int64]) -> (Tensor[(9, 13, 7), int64],) {
  %332 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 13, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 13, 7), int64] */;
  %333 = shape_of(%var_7913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_7913, dtype="int64") /* ty=Tensor[(9, 13, 7), int64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %336 = bitwise_and(%334, %335) /* ty=Tensor[(9, 13, 7), int64] */;
  (%336,)
}

def @func_2783(%var_2764: Tensor[(360), float32]) -> (Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %337 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %338 = %337.0;
  %339 = cast(%var_2764, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(1), int32] */;
  %341 = cast(%338, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %343 = cast(meta[relay.Constant][21] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %344 = reshape(%343, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %345 = bitwise_xor(%341, %342) /* ty=Tensor[(360), uint32] */;
  %346 = @func_1171() /* ty=Tensor[(360), float32] */;
  %347 = @func_1048(%344) /* ty=Tensor[(14, 11, 10), bool] */;
  (%345, %346, %347, meta[relay.Constant][21] /* ty=Tensor[(1540), float64] */)
}

def @func_8222(%var_8209: Tensor[(6, 4), float32], %var_8217: Tensor[(900), int8]) -> (Tensor[(6, 4), float32], Tensor[(900), int8], Tensor[(900), int8]) {
  %348 = cast(%var_8209, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %349 = cast(%var_8217, dtype="int8") /* ty=Tensor[(900), int8] */;
  %350 = reshape(%349, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %351 = @func_1460(%350) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) */;
  %352 = acosh(%348) /* ty=Tensor[(6, 4), float32] */;
  %353 = %351.5;
  (%352, %353, %var_8217)
}

def @func_5307(%var_5302: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %354 = @func_4241() /* ty=(Tensor[(360), bool],) */;
  %355 = %354.0;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(360), float32] */;
  %357 = reshape(%356, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %358 = @func_3036(%357) /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %359 = cast(%var_5302, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %360 = reshape(%359, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %361 = %358.0;
  %362 = @func_167(%360) /* ty=Tensor[(9, 15, 11), float32] */;
  (%355, %361, %362, %var_5302)
}

def @func_3976(%var_3900: Tensor[(396), int16], %var_3911: Tensor[(150, 5), float32], %var_3937: Tensor[(1540), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) {
  %363 = cast(%var_3900, dtype="int16") /* ty=Tensor[(396), int16] */;
  %364 = reshape(%363, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %365 = @func_1870(%364) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
  %366 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %367 = sigmoid(%366) /* ty=Tensor[(150, 1), float32] */;
  %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %369 = reshape(%368, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %370 = @func_3342(%369) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
  %371 = %370.0;
  %372 = cast(%367, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %373 = cast(%371, dtype="float32") /* ty=Tensor[(360), float32] */;
  %374 = power(%372, %373) /* ty=Tensor[(150, 360), float32] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(150, 360), float64] */;
  %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %377 = cast(%var_3937, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %378 = reshape(%376, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %379 = reshape(%377, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %380 = @func_2328(%378, %379) /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) */;
  %381 = %365.2;
  %382 = cast(%381, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %383 = reshape(%382, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %384 = @func_1029(%383) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
  %385 = cast(%381, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %386 = reshape(%385, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %387 = @func_1870(%386) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
  %388 = cast(%381, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %389 = reshape(%388, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %390 = @func_1870(%389) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
  %391 = cast(%367, dtype="uint8") /* ty=Tensor[(150, 1), uint8] */;
  %392 = cast(%var_3911, dtype="uint8") /* ty=Tensor[(150, 5), uint8] */;
  %393 = add(%391, %392) /* ty=Tensor[(150, 5), uint8] */;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(150, 5), float64] */;
  %395 = acos(%394) /* ty=Tensor[(150, 5), float64] */;
  %396 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %397 = cast(%393, dtype="float32") /* ty=Tensor[(150, 5), float32] */;
  %398 = power(%396, %397) /* ty=Tensor[(150, 5), float32] */;
  %399 = cast(%398, dtype="bool") /* ty=Tensor[(150, 5), bool] */;
  %400 = shape_of(%395, dtype="int32") /* ty=Tensor[(2), int32] */;
  %401 = cast(%395, dtype="bool") /* ty=Tensor[(150, 5), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %403 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %404 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  %405 = acosh(%375) /* ty=Tensor[(150, 360), float64] */;
  %406 = %380.4;
  %407 = %384.2;
  %408 = %387.5;
  %409 = %390.5;
  %410 = @func_1171() /* ty=Tensor[(360), float32] */;
  %411 = equal(%401, %402) /* ty=Tensor[(150, 5), bool] */;
  %412 = %403.3;
  (%404, %381, %var_3900, %405, %406, %var_3937, %407, %408, %409, %410, %411, %412)
}

def @func_3297() -> Tensor[(360), float32] {
  %413 = @func_3115() /* ty=(Tensor[(360), float32],) */;
  %413.0
}

def @func_3587() -> Tensor[(360), float32] {
  %414 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %414.0
}

def @func_8261() -> (Tensor[(14, 11, 10), float64],) {
  %415 = @func_4349() /* ty=(Tensor[(14, 11, 10), float32],) */;
  %416 = %415.0;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %418 = erf(%417) /* ty=Tensor[(14, 11, 10), float64] */;
  (%418,)
}

def @func_4349() -> (Tensor[(14, 11, 10), float32],) {
  %419 = @func_3722() /* ty=Tensor[(14, 11, 10), float64] */;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
  %421 = rsqrt(%420) /* ty=Tensor[(14, 11, 10), float32] */;
  (%421,)
}

def @func_3722() -> Tensor[(14, 11, 10), float64] {
  %422 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %422.0
}

def @func_8307() -> (Tensor[(2, 15, 12), uint32], Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), float32]) {
  %423 = @func_7956() /* ty=(Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %424 = %423.0;
  %425 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 15, 12), float32] */, dtype="uint32") /* ty=Tensor[(2, 15, 12), uint32] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="uint32") /* ty=Tensor[(2, 15, 12), uint32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %429 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %430 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %431 = bitwise_xor(%427, %428) /* ty=Tensor[(2, 15, 12), uint32] */;
  %432 = cos(%429) /* ty=Tensor[(2, 15, 12), float32] */;
  %433 = acosh(%430) /* ty=Tensor[(2, 15, 12), float32] */;
  (%431, %432, %433)
}

def @func_7301() -> (Tensor[(2, 15, 12), int64],) {
  %434 = @func_5959() /* ty=(Tensor[(2, 15, 12), int64],) */;
  %435 = %434.0;
  (%435,)
}

def @func_4189(%var_4056: Tensor[(16, 16, 4), float32], %var_4114: Tensor[(140), float64], %var_4120: float32, %var_4140: Tensor[(396, 1), int16], %var_4149: Tensor[(750), float32]) -> (Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) {
  %436 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %437 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %438 = cast(%var_4114, dtype="float64") /* ty=Tensor[(140), float64] */;
  %439 = reshape(%438, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float64] */;
  %440 = @func_3281(%439) /* ty=(Tensor[(1, 14, 10), float64],) */;
  %441 = cast(%var_4120, dtype="float32") /* ty=float32 */;
  %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %443 = reshape(%441, newshape=[]) /* ty=float32 */;
  %444 = reshape(%442, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %445 = @func_1780(%443, %444) /* ty=(Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) */;
  %446 = cast(%var_4140, dtype="int16") /* ty=Tensor[(396, 1), int16] */;
  %447 = reshape(%446, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %448 = @func_1870(%447) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
  %449 = %436.2;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(9, 15, 11), float32] */;
  %451 = reshape(%450, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %452 = @func_2974(%451) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %453 = cast(%var_4140, dtype="int16") /* ty=Tensor[(396, 1), int16] */;
  %454 = cast(%var_4149, dtype="float32") /* ty=Tensor[(750), float32] */;
  %455 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 220), float64] */, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %456 = reshape(%453, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %457 = reshape(%454, newshape=[150, 5]) /* ty=Tensor[(150, 5), float32] */;
  %458 = reshape(%455, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %459 = @func_3976(%456, %457, %458) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) */;
  %460 = cast(meta[relay.Constant][26] /* ty=Tensor[(104, 12), float64] */, dtype="float64") /* ty=Tensor[(104, 12), float64] */;
  %461 = reshape(%460, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), float64] */;
  %462 = @func_2841(%461) /* ty=(Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) */;
  %463 = cast(%var_4056, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %464 = asinh(%463) /* ty=Tensor[(16, 16, 4), float32] */;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %466 = sin(%465) /* ty=Tensor[(16, 16, 4), float32] */;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
  %468 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %469 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 220), float64] */, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
  %470 = reshape(%469, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %471 = @func_1645(%470) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %472 = cast(%464, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %473 = sigmoid(%472) /* ty=Tensor[(16, 16, 4), float32] */;
  %474 = cast(%473, dtype="int16") /* ty=Tensor[(16, 16, 4), int16] */;
  %475 = cast(%var_4120, dtype="int16") /* ty=int16 */;
  %476 = %437.0;
  %477 = %440.0;
  %478 = %445.0;
  %479 = %448.5;
  %480 = %452.0;
  %481 = %459.9;
  %482 = %462.1;
  %483 = sqrt(%467) /* ty=Tensor[(16, 16, 4), float64] */;
  %484 = %468.3;
  %485 = %471.0;
  %486 = bitwise_and(%474, %475) /* ty=Tensor[(16, 16, 4), int16] */;
  (%449, %476, %477, %var_4114, %478, meta[relay.Constant][24] /* ty=Tensor[(216), float32] */, %479, %var_4140, %480, %481, %var_4149, meta[relay.Constant][25] /* ty=Tensor[(7, 220), float64] */, %482, meta[relay.Constant][26] /* ty=Tensor[(104, 12), float64] */, %483, %484, %485, %486)
}

def @func_897() -> (Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %487 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %488 = cast(meta[relay.Constant][28] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %489 = reshape(%488, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %490 = acos(%487) /* ty=Tensor[(14, 11, 10), float64] */;
  %491 = @func_510(%489) /* ty=Tensor[(2, 15, 12), float32] */;
  (%490, %491, meta[relay.Constant][28] /* ty=Tensor[(360), float32] */)
}

def @func_2974(%var_2968: Tensor[(1485), float32]) -> (Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %492 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %493 = cast(%var_2968, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %494 = reshape(%493, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %495 = %492.1;
  %496 = @func_167(%494) /* ty=Tensor[(9, 15, 11), float32] */;
  (%495, %496, %var_2968)
}

def @func_4643(%var_4632: Tensor[(1485), float32], %var_4641: Tensor[(405), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) {
  %497 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %498 = cast(meta[relay.Constant][29] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %499 = cast(%var_4632, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %500 = reshape(%498, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %501 = reshape(%499, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %502 = @func_2715(%500, %501) /* ty=(Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) */;
  %503 = cast(%var_4641, dtype="float64") /* ty=Tensor[(405), float64] */;
  %504 = reshape(%503, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float64] */;
  %505 = %497.1;
  %506 = @func_3722() /* ty=Tensor[(14, 11, 10), float64] */;
  %507 = %502.1;
  %508 = @func_3498(%504) /* ty=Tensor[(9, 5, 9), float64] */;
  (%505, %506, %507, meta[relay.Constant][29] /* ty=Tensor[(150), float64] */, %var_4632, %508, %var_4641)
}

def @func_5871() -> Tensor[(360), float32] {
  @func_3096() /* ty=Tensor[(360), float32] */
}

def @func_1376(%var_1343: Tensor[(150), float64], %var_1348: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) {
  %509 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %510 = cast(%var_1343, dtype="float64") /* ty=Tensor[(150), float64] */;
  %511 = reshape(%510, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
  %512 = @func_461(%511) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
  %513 = %512.2;
  %514 = cast(%var_1348, dtype="int16") /* ty=Tensor[(1485), int16] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(1), int32] */;
  %516 = cast(%513, dtype="int16") /* ty=Tensor[(1485), int16] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?), int16] */;
  %518 = cast(%513, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %519 = exp(%518) /* ty=Tensor[(1485), float32] */;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %521 = %509.2;
  %522 = minimum(%516, %517) /* ty=Tensor[(1485), int16] */;
  %523 = asinh(%520) /* ty=Tensor[(1485), float32] */;
  (%521, %var_1343, %522, %523)
}

def @func_1460(%var_1449: Tensor[(900), int8]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) {
  %524 = cast(meta[relay.Constant][30] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %525 = reshape(%524, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %526 = @func_579(%525) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %527 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %528 = cast(%var_1449, dtype="int8") /* ty=Tensor[(900), int8] */;
  %529 = cast(%var_1449, dtype="int8") /* ty=Tensor[(900), int8] */;
  %530 = cast(meta[relay.Constant][31] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %531 = reshape(%528, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %532 = reshape(%529, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %533 = reshape(%530, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %534 = @func_362(%531, %532, %533) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %535 = cast(meta[relay.Constant][30] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %536 = reshape(%535, newshape=[7, 88]) /* ty=Tensor[(7, 88), float64] */;
  %537 = @func_997(%536) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) */;
  %538 = @func_1171() /* ty=Tensor[(360), float32] */;
  %539 = %526.1;
  %540 = %527.1;
  %541 = %534.2;
  %542 = %537.1;
  (%538, %539, meta[relay.Constant][30] /* ty=Tensor[(616), float64] */, %540, %541, %var_1449, meta[relay.Constant][31] /* ty=Tensor[(1485), float32] */, %542)
}

def @func_2715(%var_2708: Tensor[(150), float64], %var_2709: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) {
  %543 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %544 = cast(%var_2708, dtype="float64") /* ty=Tensor[(150), float64] */;
  %545 = cast(%var_2709, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %546 = reshape(%544, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %547 = reshape(%545, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %548 = @func_1376(%546, %547) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %549 = %548.2;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %551 = %543.1;
  %552 = log2(%550) /* ty=Tensor[(1485), float32] */;
  (%551, %var_2708, %var_2709, %552)
}

def @func_3436(%var_3382: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool]) {
  %553 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %554 = cast(%var_3382, dtype="int16") /* ty=Tensor[(396), int16] */;
  %555 = cast(%var_3382, dtype="int16") /* ty=Tensor[(396), int16] */;
  %556 = reshape(%554, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %557 = reshape(%555, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %558 = @func_865(%556, %557) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %559 = %558.0;
  %560 = cast(%var_3382, dtype="bool") /* ty=Tensor[(396), bool] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %564 = %553.0;
  %565 = less_equal(%562, %563) /* ty=Tensor[(6, 11, 6), bool] */;
  (%564, %565)
}

def @func_6159(%var_6123: Tensor[(198, 2), int16], %var_6132: Tensor[(198, 2), float64]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(360), float32], Tensor[(198, 2), bool]) {
  %566 = cast(%var_6123, dtype="int16") /* ty=Tensor[(198, 2), int16] */;
  %567 = reshape(%566, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %568 = @func_1029(%567) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
  %569 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %570 = cast(%var_6123, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %571 = log10(%570) /* ty=Tensor[(198, 2), float64] */;
  %572 = cast(%var_6132, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(2), int32] */;
  %574 = cast(%571, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %576 = subtract(%574, %575) /* ty=Tensor[(198, 2), uint8] */;
  %577 = cast(%571, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(2), int32] */;
  %579 = cast(%576, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %581 = @func_1690() /* ty=Tensor[(360), float32] */;
  %582 = %568.1;
  %583 = %569.0;
  %584 = equal(%579, %580) /* ty=Tensor[(198, 2), bool] */;
  (%581, %582, %583, %584)
}

def @func_8352() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %585 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %586 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %587 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %588 = @func_7381() /* ty=(Tensor[(360), float32],) */;
  %589 = %585.0;
  %590 = %586.0;
  %591 = @func_1171() /* ty=Tensor[(360), float32] */;
  %592 = %587.0;
  %593 = %588.0;
  (%589, %590, %591, %592, %593)
}

def @func_2464(%var_2412: Tensor[(13, 2, 16), uint8], %var_2413: Tensor[(13, 2, 16), uint8], %var_2432: Tensor[(1540), float64], %var_2442: Tensor[(1485), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(360), float32], Tensor[(13, 2, 16), float64], Tensor[(14, 11, 10), bool], Tensor[(1540), float64], Tensor[(9, 15, 11), float32], Tensor[(900), int8], Tensor[(1485), float32]) {
  %594 = cast(%var_2413, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %595 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%var_2412, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %598 = cast(%var_2412, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %599 = cast(%var_2432, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %600 = reshape(%599, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %601 = cast(meta[relay.Constant][32] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %602 = cast(meta[relay.Constant][32] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %603 = cast(%var_2442, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %604 = reshape(%601, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %605 = reshape(%602, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %606 = reshape(%603, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %607 = @func_362(%604, %605, %606) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %608 = greater_equal(%596, %597) /* ty=Tensor[(13, 2, 16), bool] */;
  %609 = @func_1070() /* ty=Tensor[(360), float32] */;
  %610 = erf(%598) /* ty=Tensor[(13, 2, 16), float64] */;
  %611 = @func_1048(%600) /* ty=Tensor[(14, 11, 10), bool] */;
  %612 = %607.1;
  (%608, %609, %610, %611, %var_2432, %612, meta[relay.Constant][32] /* ty=Tensor[(900), int8] */, %var_2442)
}

def @func_6903(%var_6881: Tensor[(1, 616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) {
  %613 = @func_6356() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %614 = cast(%var_6881, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %615 = reshape(%614, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %616 = @func_6102(%615) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) */;
  %617 = @func_5416() /* ty=(Tensor[(360), float32],) */;
  %618 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
  %619 = %613.0;
  %620 = %616.3;
  %621 = %617.0;
  %622 = %618.0;
  (%619, %620, %var_6881, %621, %622)
}

def @func_3175(%var_3150: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool]) {
  %623 = cast(%var_3150, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %624 = reshape(%623, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %625 = @func_1048(%624) /* ty=Tensor[(14, 11, 10), bool] */;
  %626 = cast(%625, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %627 = shape_of(%var_3150, dtype="int32") /* ty=Tensor[(1), int32] */;
  %628 = cast(%var_3150, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?), bool] */;
  %630 = @func_1690() /* ty=Tensor[(360), float32] */;
  %631 = greater(%628, %629) /* ty=Tensor[(1540), bool] */;
  (%630, %631)
}

def @func_1494() -> (Tensor[(360), float32],) {
  %632 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %633 = %632.0;
  (%633,)
}

def @func_7052() -> Tensor[(360), bool] {
  @func_4710() /* ty=Tensor[(360), bool] */
}

def @func_5110(%var_5098: float32) -> (Tensor[(360), float32], Tensor[(360), float32], float32, Tensor[(36, 6), float32], Tensor[(1540), float64], Tensor[(150), float64]) {
  %634 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %635 = cast(%var_5098, dtype="float32") /* ty=float32 */;
  %636 = cast(meta[relay.Constant][33] /* ty=Tensor[(36, 6), float32] */, dtype="float32") /* ty=Tensor[(36, 6), float32] */;
  %637 = reshape(%635, newshape=[]) /* ty=float32 */;
  %638 = reshape(%636, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %639 = @func_1719(%637, %638) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
  %640 = cast(meta[relay.Constant][34] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %641 = reshape(%640, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %642 = @func_3342(%641) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
  %643 = %634.0;
  %644 = %639.2;
  %645 = %642.2;
  (%643, %644, %var_5098, meta[relay.Constant][33] /* ty=Tensor[(36, 6), float32] */, %645, meta[relay.Constant][34] /* ty=Tensor[(150), float64] */)
}

def @func_362(%var_344: Tensor[(15, 6, 10), int8], %var_345: Tensor[(15, 6, 10), int8], %var_355: Tensor[(1485), float32]) -> (Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %646 = cast(%var_345, dtype="int8") /* ty=Tensor[(15, 6, 10), int8] */;
  %647 = shape_of(%var_344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_344, dtype="int8") /* ty=Tensor[(15, 6, 10), int8] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %650 = cast(%var_355, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %651 = reshape(%650, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %652 = right_shift(%648, %649) /* ty=Tensor[(15, 6, 10), int8] */;
  %653 = @func_167(%651) /* ty=Tensor[(9, 15, 11), float32] */;
  (%652, %653, %var_355)
}

def @func_1171() -> Tensor[(360), float32] {
  @func_1070() /* ty=Tensor[(360), float32] */
}

def @func_1121() -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) {
  %654 = @func_1070() /* ty=Tensor[(360), float32] */;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(360), float32] */;
  %656 = erf(%655) /* ty=Tensor[(360), float32] */;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(360), float32] */;
  %658 = reshape(%657, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %659 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), float32] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %660 = shape_of(%654, dtype="int32") /* ty=Tensor[(1), int32] */;
  %661 = cast(%654, dtype="bool") /* ty=Tensor[(360), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), bool] */;
  %663 = @func_510(%658) /* ty=Tensor[(2, 15, 12), float32] */;
  %664 = logical_or(%661, %662) /* ty=Tensor[(360), bool] */;
  (%656, %663, %664)
}

def @func_2268(%var_2145: Tensor[(132), float32], %var_2215: Tensor[(14, 11, 10), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), uint32]) {
  %665 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %666 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %667 = %665.0;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(360), float32] */;
  %669 = reshape(%668, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %670 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %671 = cast(%var_2145, dtype="float32") /* ty=Tensor[(132), float32] */;
  %672 = reshape(%671, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), float32] */;
  %673 = @func_1206(%672) /* ty=(Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %674 = %673.1;
  %675 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 11, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = logical_and(%677, %678) /* ty=Tensor[(14, 11, 10), bool] */;
  %680 = cast(%674, dtype="int32") /* ty=Tensor[(14, 11, 10), int32] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="int32") /* ty=Tensor[(14, 11, 10), int32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %684 = left_shift(%682, %683) /* ty=Tensor[(14, 11, 10), int32] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
  %686 = log2(%685) /* ty=Tensor[(14, 11, 10), float32] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %688 = tan(%687) /* ty=Tensor[(14, 11, 10), float64] */;
  %689 = cast(%var_2215, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = cast(%679, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
  %694 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%688, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %697 = divide(%695, %696) /* ty=Tensor[(14, 11, 10), float32] */;
  %698 = cast(%697, dtype="int64") /* ty=Tensor[(14, 11, 10), int64] */;
  %699 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%688, dtype="int64") /* ty=Tensor[(14, 11, 10), int64] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %702 = bitwise_or(%700, %701) /* ty=Tensor[(14, 11, 10), int64] */;
  %703 = cast(%679, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %707 = cast(%702, dtype="uint32") /* ty=Tensor[(14, 11, 10), uint32] */;
  %708 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%679, dtype="uint32") /* ty=Tensor[(14, 11, 10), uint32] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %711 = %666.0;
  %712 = @func_510(%669) /* ty=Tensor[(2, 15, 12), float32] */;
  %713 = %670.1;
  %714 = greater_equal(%691, %692) /* ty=Tensor[(14, 11, 10), bool] */;
  %715 = equal(%705, %706) /* ty=Tensor[(14, 11, 10), bool] */;
  %716 = multiply(%709, %710) /* ty=Tensor[(14, 11, 10), uint32] */;
  (%667, %711, %var_2145, %712, %713, %714, %715, %716)
}

def @func_4241() -> (Tensor[(360), bool],) {
  %717 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %718 = %717.1;
  (%718,)
}

def @func_7026(%var_7020: uint16, %var_7021: Tensor[(4, 1, 2), uint16]) -> Tensor[(4, 1, 2), bool] {
  %719 = cast(%var_7020, dtype="bool") /* ty=bool */;
  %720 = cast(%var_7021, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
  greater(%719, %720) /* ty=Tensor[(4, 1, 2), bool] */
}

def @func_3703() -> (Tensor[(360), float32],) {
  %721 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%721,)
}

def @func_7381() -> (Tensor[(360), float32],) {
  %722 = @func_6751() /* ty=(Tensor[(360), float32],) */;
  %723 = %722.0;
  (%723,)
}

def @func_4474() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %724 = @func_3483() /* ty=Tensor[(360), float32] */;
  %725 = @func_3587() /* ty=Tensor[(360), float32] */;
  (%724, %725)
}

def @func_579(%var_551: Tensor[(14, 4, 11), float64]) -> (Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %726 = cast(%var_551, dtype="float64") /* ty=Tensor[(14, 4, 11), float64] */;
  %727 = cast(meta[relay.Constant][37] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %728 = reshape(%727, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %729 = exp(%726) /* ty=Tensor[(14, 4, 11), float64] */;
  %730 = @func_510(%728) /* ty=Tensor[(2, 15, 12), float32] */;
  (%729, %730, meta[relay.Constant][37] /* ty=Tensor[(360), float32] */)
}

def @func_7011() -> Tensor[(360), float32] {
  @func_6945() /* ty=Tensor[(360), float32] */
}

def @func_4762() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %731 = @func_3115() /* ty=(Tensor[(360), float32],) */;
  %732 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %733 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %734 = @func_3096() /* ty=Tensor[(360), float32] */;
  %735 = @func_3096() /* ty=Tensor[(360), float32] */;
  %736 = %731.0;
  %737 = %732.0;
  %738 = %733.0;
  %739 = @func_3587() /* ty=Tensor[(360), float32] */;
  (%734, %735, %736, %737, %738, %739)
}

def @func_6102(%var_6090: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) {
  %740 = cast(%var_6090, dtype="float64") /* ty=Tensor[(616), float64] */;
  %741 = reshape(%740, newshape=[7, 88]) /* ty=Tensor[(7, 88), float64] */;
  %742 = @func_997(%741) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) */;
  %743 = @func_5199() /* ty=Tensor[(360), float32] */;
  %744 = %742.3;
  %745 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%743, %744, %var_6090, %745)
}

def @func_510(%var_502: Tensor[(2, 15, 12), float32]) -> Tensor[(2, 15, 12), float32] {
  %746 = cast(%var_502, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  exp(%746) /* ty=Tensor[(2, 15, 12), float32] */
}

def @func_8561(%var_8537: Tensor[(396), int16], %var_8549: Tensor[(150), float64], %var_8550: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(396), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  %747 = @func_2080() /* ty=(Tensor[(360), float32],) */;
  %748 = cast(%var_8537, dtype="int16") /* ty=Tensor[(396), int16] */;
  %749 = reshape(%748, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %750 = @func_3436(%749) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool]) */;
  %751 = cast(%var_8549, dtype="float64") /* ty=Tensor[(150), float64] */;
  %752 = cast(%var_8550, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %753 = reshape(%751, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %754 = reshape(%752, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %755 = @func_2715(%753, %754) /* ty=(Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) */;
  %756 = %755.2;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %758 = shape_of(%var_8550, dtype="int32") /* ty=Tensor[(1), int32] */;
  %759 = cast(%var_8550, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?), float32] */;
  %761 = %747.0;
  %762 = %750.0;
  %763 = power(%759, %760) /* ty=Tensor[(1485), float32] */;
  (%761, %762, %var_8537, %var_8549, %763)
}

def @func_2375() -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32]) {
  %764 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %765 = @func_2105() /* ty=Tensor[(360), float32] */;
  %766 = %764.1;
  (%765, %766)
}

def @main(%var_8612: uint8) -> Tensor[(1, 8, 13), uint8] {
  %767 = cast(%var_8612, dtype="uint8") /* ty=uint8 */;
  %768 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 8, 13), uint8] */, dtype="uint8") /* ty=Tensor[(1, 8, 13), uint8] */;
  add(%767, %768) /* ty=Tensor[(1, 8, 13), uint8] */
}

def @func_5753(%var_5739: Tensor[(3, 15, 13), float64], %var_5740: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float32] {
  %769 = cast(%var_5740, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
  %770 = shape_of(%var_5739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%var_5739, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %773 = mod(%771, %772) /* ty=Tensor[(3, 15, 13), float64] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(3, 15, 13), float32] */;
  acos(%774) /* ty=Tensor[(3, 15, 13), float32] */
}

def @func_3821() -> Tensor[(360), float32] {
  %775 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %775.1
}

def @func_5589(%var_5544: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), int16], Tensor[(25, 6), float64]) {
  %776 = @func_5416() /* ty=(Tensor[(360), float32],) */;
  %777 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %778 = cast(%var_5544, dtype="float64") /* ty=Tensor[(616), float64] */;
  %779 = reshape(%778, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %780 = @func_579(%779) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %781 = cast(meta[relay.Constant][39] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %782 = cast(meta[relay.Constant][39] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %783 = reshape(%781, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %784 = reshape(%782, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %785 = @func_865(%783, %784) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %786 = cast(meta[relay.Constant][40] /* ty=Tensor[(25, 6), float64] */, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %787 = reshape(%786, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %788 = @func_4819(%787) /* ty=(Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) */;
  %789 = %776.0;
  %790 = %777.0;
  %791 = @func_2882() /* ty=Tensor[(360), float32] */;
  %792 = @func_1690() /* ty=Tensor[(360), float32] */;
  %793 = @func_2882() /* ty=Tensor[(360), float32] */;
  %794 = %780.2;
  %795 = %785.0;
  %796 = %788.0;
  (%789, %790, %791, %792, %793, %794, %var_5544, %795, meta[relay.Constant][39] /* ty=Tensor[(396), int16] */, %796, meta[relay.Constant][40] /* ty=Tensor[(25, 6), float64] */)
}

def @func_8149() -> (Tensor[(360), float32], Tensor[(1540), float64]) {
  %797 = @func_2758() /* ty=Tensor[(360), float32] */;
  %798 = cast(%797, dtype="float32") /* ty=Tensor[(360), float32] */;
  %799 = reshape(%798, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %800 = @func_2783(%799) /* ty=(Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %801 = %800.3;
  (%797, %801)
}

def @func_5726() -> Tensor[(360), float32] {
  @func_4025() /* ty=Tensor[(360), float32] */
}

def @func_3036(%var_3028: Tensor[(360), float32]) -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %802 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %803 = %802.0;
  %804 = cast(%var_3028, dtype="float32") /* ty=Tensor[(360), float32] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(1), int32] */;
  %806 = cast(%803, dtype="float32") /* ty=Tensor[(360), float32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?), float32] */;
  %808 = @func_1070() /* ty=Tensor[(360), float32] */;
  %809 = divide(%806, %807) /* ty=Tensor[(360), float32] */;
  (%808, %809)
}

def @func_3498(%var_3495: Tensor[(9, 5, 9), float64]) -> Tensor[(9, 5, 9), float64] {
  %810 = cast(%var_3495, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  sin(%810) /* ty=Tensor[(9, 5, 9), float64] */
}

def @func_7394() -> Tensor[(360), float32] {
  %811 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %811.0
}

def @func_2882() -> Tensor[(360), float32] {
  %812 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %812.0
}

def @func_4965(%var_4960: float32, %var_4961: Tensor[(216), float32]) -> (Tensor[(360), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32]) {
  %813 = @func_3483() /* ty=Tensor[(360), float32] */;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(360), float64] */;
  %815 = cast(%var_4960, dtype="float32") /* ty=float32 */;
  %816 = cast(%var_4961, dtype="float32") /* ty=Tensor[(216), float32] */;
  %817 = reshape(%815, newshape=[]) /* ty=float32 */;
  %818 = reshape(%816, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %819 = @func_1719(%817, %818) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
  %820 = sqrt(%814) /* ty=Tensor[(360), float64] */;
  %821 = %819.1;
  (%820, %821, %var_4960, %var_4961)
}

def @func_8574() -> Tensor[(16, 3, 2), float64] {
  %822 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 3, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 2), float64] */;
  tan(%822) /* ty=Tensor[(16, 3, 2), float64] */
}

def @func_997(%var_993: Tensor[(7, 88), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) {
  %823 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %824 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %825 = reshape(%824, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %826 = @func_579(%825) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %827 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %828 = reshape(%827, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %829 = @func_579(%828) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(14, 4, 11), float64] */;
  %832 = reshape(%831, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %833 = @func_579(%832) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %834 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %835 = sqrt(%834) /* ty=Tensor[(7, 88), float64] */;
  %836 = cast(%var_993, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(2), int32] */;
  %838 = cast(%835, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %840 = %823.2;
  %841 = %826.2;
  %842 = %833.1;
  %843 = mod(%838, %839) /* ty=Tensor[(7, 88), float32] */;
  (%840, %841, %830, %842, %843)
}

def @func_7564() -> (Tensor[(360), float32],) {
  %844 = @func_1070() /* ty=Tensor[(360), float32] */;
  (%844,)
}

def @func_6614(%var_6597: Tensor[(11, 5, 12), float32], %var_6603: Tensor[(11, 14, 1), float32]) -> (Tensor[(11, 5, 12), bool], Tensor[(11, 14, 1), float64], Tensor[(11, 14, ?), bool]) {
  %845 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 1), float32] */;
  %846 = sinh(%845) /* ty=Tensor[(11, 1, 1), float32] */;
  %847 = cast(%846, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %848 = cast(%var_6597, dtype="bool") /* ty=Tensor[(11, 5, 12), bool] */;
  %849 = cast(%846, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %850 = cast(%var_6603, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
  %851 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 1, 1), float32] */, dtype="int8") /* ty=Tensor[(11, 1, 1), int8] */;
  %852 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%846, dtype="int8") /* ty=Tensor[(11, 1, 1), int8] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %855 = maximum(%853, %854) /* ty=Tensor[(11, ?, ?), int8] */;
  %856 = cast(%var_6603, dtype="bool") /* ty=Tensor[(11, 14, 1), bool] */;
  %857 = cast(%855, dtype="bool") /* ty=Tensor[(11, ?, ?), bool] */;
  %858 = less_equal(%847, %848) /* ty=Tensor[(11, 5, 12), bool] */;
  %859 = power(%849, %850) /* ty=Tensor[(11, 14, 1), float64] */;
  %860 = greater_equal(%856, %857) /* ty=Tensor[(11, 14, ?), bool] */;
  (%858, %859, %860)
}

def @func_7889(%var_7886: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool], Tensor[(1540), float64]) {
  %861 = cast(%var_7886, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %862 = reshape(%861, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %863 = @func_3175(%862) /* ty=(Tensor[(360), float32], Tensor[(1540), bool]) */;
  %864 = @func_3297() /* ty=Tensor[(360), float32] */;
  %865 = %863.1;
  (%864, %865, %var_7886)
}

def @func_6945() -> Tensor[(360), float32] {
  @func_3096() /* ty=Tensor[(360), float32] */
}

def @func_2818() -> (Tensor[(360), float32],) {
  %866 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%866,)
}

def @func_6356() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %867 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %868 = %867.2;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(360), float32] */;
  %870 = reshape(%869, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %871 = @func_3036(%870) /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %872 = %871.0;
  (%868, %872)
}

def @func_1206(%var_1179: Tensor[(4, 3, 11), float32]) -> (Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %873 = cast(%var_1179, dtype="float32") /* ty=Tensor[(4, 3, 11), float32] */;
  %874 = cast(meta[relay.Constant][44] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %875 = reshape(%874, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %876 = acosh(%873) /* ty=Tensor[(4, 3, 11), float32] */;
  %877 = @func_1048(%875) /* ty=Tensor[(14, 11, 10), bool] */;
  (%876, %877, meta[relay.Constant][44] /* ty=Tensor[(1540), float64] */)
}

def @func_7991(%var_7983: Tensor[(10, 13, 14), uint64], %var_7984: Tensor[(10, 13, 14), uint64]) -> (Tensor[(10, 13, 14), bool],) {
  %878 = cast(%var_7984, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
  %879 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%var_7983, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %882 = greater_equal(%880, %881) /* ty=Tensor[(10, 13, 14), bool] */;
  (%882,)
}

def @func_5064(%var_5043: Tensor[(7, 7, 9), int8], %var_5044: Tensor[(7, 7, 9), int8], %var_5058: Tensor[(1540), float64]) -> (Tensor[(7, 7, 9), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %883 = cast(%var_5044, dtype="int8") /* ty=Tensor[(7, 7, 9), int8] */;
  %884 = shape_of(%var_5043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_5043, dtype="int8") /* ty=Tensor[(7, 7, 9), int8] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %887 = maximum(%885, %886) /* ty=Tensor[(7, 7, 9), int8] */;
  %888 = cast(%887, dtype="float32") /* ty=Tensor[(7, 7, 9), float32] */;
  %889 = cast(%var_5058, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %890 = reshape(%889, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %891 = asinh(%888) /* ty=Tensor[(7, 7, 9), float32] */;
  %892 = @func_1048(%890) /* ty=Tensor[(14, 11, 10), bool] */;
  (%891, %892, %var_5058)
}

def @func_7627(%var_7580: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
  %893 = cast(%var_7580, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
  %894 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4, 16, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 16, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %897 = add(%895, %896) /* ty=Tensor[(4, 16, 14), uint32] */;
  (%897,)
}

def @func_2758() -> Tensor[(360), float32] {
  @func_1690() /* ty=Tensor[(360), float32] */
}

def @func_5416() -> (Tensor[(360), float32],) {
  %898 = @func_1070() /* ty=Tensor[(360), float32] */;
  (%898,)
}

def @func_5494() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %899 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %900 = %899.1;
  %901 = @func_3587() /* ty=Tensor[(360), float32] */;
  (%900, %901)
}

def @func_5330() -> Tensor[(360), float32] {
  @func_1171() /* ty=Tensor[(360), float32] */
}

def @func_2328(%var_2291: Tensor[(150), float64], %var_2322: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) {
  %902 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %903 = cast(%var_2291, dtype="float64") /* ty=Tensor[(150), float64] */;
  %904 = cast(meta[relay.Constant][46] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %905 = reshape(%903, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %906 = reshape(%904, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %907 = @func_1376(%905, %906) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %908 = cast(%var_2291, dtype="float64") /* ty=Tensor[(150), float64] */;
  %909 = reshape(%908, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
  %910 = @func_461(%909) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
  %911 = %910.2;
  %912 = cast(meta[relay.Constant][46] /* ty=Tensor[(1485), float32] */, dtype="int8") /* ty=Tensor[(1485), int8] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(1), int32] */;
  %914 = cast(%911, dtype="int8") /* ty=Tensor[(1485), int8] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?), int8] */;
  %916 = cast(%var_2322, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %917 = reshape(%916, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %918 = @func_1645(%917) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %919 = %902.0;
  %920 = %907.3;
  %921 = logical_xor(%914, %915) /* ty=Tensor[(1485), int8] */;
  %922 = %918.2;
  (%919, %920, %var_2291, %921, %922, %var_2322)
}

def @func_4420() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %923 = @func_2105() /* ty=Tensor[(360), float32] */;
  %924 = @func_3483() /* ty=Tensor[(360), float32] */;
  (%923, %924)
}

def @func_7332() -> (Tensor[(360), float32],) {
  %925 = @func_3483() /* ty=Tensor[(360), float32] */;
  (%925,)
}

def @func_3243(%var_3224: int64, %var_3240: Tensor[(216), float32]) -> (Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) {
  %926 = cast(%var_3224, dtype="bool") /* ty=bool */;
  %927 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 6, 1), int64] */, dtype="bool") /* ty=Tensor[(6, 6, 1), bool] */;
  %928 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 6, 1), int64] */, dtype="float64") /* ty=Tensor[(6, 6, 1), float64] */;
  %929 = cast(%var_3224, dtype="float32") /* ty=float32 */;
  %930 = cast(%var_3240, dtype="float32") /* ty=Tensor[(216), float32] */;
  %931 = reshape(%929, newshape=[]) /* ty=float32 */;
  %932 = reshape(%930, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %933 = @func_1780(%931, %932) /* ty=(Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) */;
  %934 = greater_equal(%926, %927) /* ty=Tensor[(6, 6, 1), bool] */;
  %935 = asin(%928) /* ty=Tensor[(6, 6, 1), float64] */;
  %936 = %933.6;
  (%934, %935, %936, %var_3240)
}

def @func_7203() -> (Tensor[(360), float32],) {
  %937 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %938 = %937.0;
  (%938,)
}

def @func_1223() -> (Tensor[(360), float32],) {
  %939 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%939,)
}

def @func_5368(%var_5352: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1540), float64]) {
  %940 = cast(%var_5352, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %941 = reshape(%940, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %942 = @func_1645(%941) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %943 = @func_2758() /* ty=Tensor[(360), float32] */;
  %944 = %942.0;
  (%943, %944, %var_5352)
}

def @func_4025() -> Tensor[(360), float32] {
  @func_2882() /* ty=Tensor[(360), float32] */
}

def @func_7667() -> (Tensor[(360), float32],) {
  %945 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %946 = %945.0;
  (%946,)
}

def @func_7492() -> (Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %947 = @func_7381() /* ty=(Tensor[(360), float32],) */;
  %948 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %949 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %950 = %947.0;
  %951 = %948.2;
  %952 = %949.0;
  %953 = @func_5726() /* ty=Tensor[(360), float32] */;
  (%950, %951, %952, %953)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4693() -> (Tensor[(360), float32],) {
  @func_4691() /* ty=(Tensor[(360), float32],) */
}

def @func_5068(%var_5065: Tensor[(7, 7, 9), int8], %var_5066: Tensor[(7, 7, 9), int8], %var_5067: Tensor[(1540), float64]) -> (Tensor[(7, 7, 9), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %10 = fn (%var_5043: Tensor[(7, 7, 9), int8], %var_5044: Tensor[(7, 7, 9), int8], %var_5058: Tensor[(1540), float64]) -> (Tensor[(7, 7, 9), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
    %0 = cast(%var_5044, dtype="int8") /* ty=Tensor[(7, 7, 9), int8] */;
    %1 = shape_of(%var_5043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_5043, dtype="int8") /* ty=Tensor[(7, 7, 9), int8] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %4 = maximum(%2, %3) /* ty=Tensor[(7, 7, 9), int8] */;
    %5 = cast(%4, dtype="float32") /* ty=Tensor[(7, 7, 9), float32] */;
    %6 = cast(%var_5058, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %7 = reshape(%6, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
    %8 = asinh(%5) /* ty=Tensor[(7, 7, 9), float32] */;
    %9 = @func_1048(%7) /* ty=Tensor[(14, 11, 10), bool] */;
    (%8, %9, %var_5058)
  };
  %10(%var_5065, %var_5066, %var_5067) /* ty=(Tensor[(7, 7, 9), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */
}

def @func_8566(%var_8563: Tensor[(396), int16], %var_8564: Tensor[(150), float64], %var_8565: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(396), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  @func_8561(%var_8563, %var_8564, %var_8565) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(396), int16], Tensor[(150), float64], Tensor[(1485), float32]) */
}

def @func_8561(%var_8537: Tensor[(396), int16], %var_8549: Tensor[(150), float64], %var_8550: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(396), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  %11 = @func_2080() /* ty=(Tensor[(360), float32],) */;
  %12 = cast(%var_8537, dtype="int16") /* ty=Tensor[(396), int16] */;
  %13 = reshape(%12, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %14 = @func_3436(%13) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool]) */;
  %15 = cast(%var_8549, dtype="float64") /* ty=Tensor[(150), float64] */;
  %16 = cast(%var_8550, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %17 = reshape(%15, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %18 = reshape(%16, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %19 = @func_2715(%17, %18) /* ty=(Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) */;
  %20 = %19.2;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %22 = shape_of(%var_8550, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%var_8550, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), float32] */;
  %25 = %11.0;
  %26 = %14.0;
  %27 = power(%23, %24) /* ty=Tensor[(1485), float32] */;
  (%25, %26, %var_8537, %var_8549, %27)
}

def @func_7814(%var_7811: Tensor[(3, 104), float32], %var_7812: Tensor[(1024), float32], %var_7813: Tensor[(250, 3), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(13, 4, 6), float32], float32, Tensor[(3, 104), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(1024), float32], Tensor[(140), float64], Tensor[(250, 3), float32], Tensor[(216), float32], Tensor[(216), float32], Tensor[(198, 2), bool], Tensor[(4, 1, 2), bool], Tensor[(8), uint16], Tensor[(360), float32], Tensor[(360), float32]) {
  @func_7809(%var_7811, %var_7812, %var_7813) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(13, 4, 6), float32], float32, Tensor[(3, 104), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(1024), float32], Tensor[(140), float64], Tensor[(250, 3), float32], Tensor[(216), float32], Tensor[(216), float32], Tensor[(198, 2), bool], Tensor[(4, 1, 2), bool], Tensor[(8), uint16], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_1566() -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */
}

def @func_8171() -> (Tensor[(360), float32],) {
  %28 = @func_7667() /* ty=(Tensor[(360), float32],) */;
  %29 = %28.0;
  (%29,)
}

def @func_8307() -> (Tensor[(2, 15, 12), uint32], Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), float32]) {
  %30 = @func_7956() /* ty=(Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %31 = %30.0;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 15, 12), float32] */, dtype="uint32") /* ty=Tensor[(2, 15, 12), uint32] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="uint32") /* ty=Tensor[(2, 15, 12), uint32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %38 = bitwise_xor(%34, %35) /* ty=Tensor[(2, 15, 12), uint32] */;
  %39 = cos(%36) /* ty=Tensor[(2, 15, 12), float32] */;
  %40 = acosh(%37) /* ty=Tensor[(2, 15, 12), float32] */;
  (%38, %39, %40)
}

def @func_3501(%var_3499: Tensor[(9, 5, 9), float64]) -> Tensor[(9, 5, 9), float64] {
  @func_3498(%var_3499) /* ty=Tensor[(9, 5, 9), float64] */
}

def @func_7383() -> (Tensor[(360), float32],) {
  @func_7381() /* ty=(Tensor[(360), float32],) */
}

def @func_1225() -> (Tensor[(360), float32],) {
  @func_1223() /* ty=(Tensor[(360), float32],) */
}

def @func_8597() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %41 = @func_6737() /* ty=Tensor[(360), float32] */;
  %42 = @func_4025() /* ty=Tensor[(360), float32] */;
  (%41, %42)
}

def @func_7394() -> Tensor[(360), float32] {
  %43 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %43.0
}

def @func_3039(%var_3037: Tensor[(360), float32]) -> (Tensor[(360), float32], Tensor[(360), float32]) {
  @func_3036(%var_3037) /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_7053() -> Tensor[(360), bool] {
  %44 = fn () -> Tensor[(360), bool] {
    @func_4710() /* ty=Tensor[(360), bool] */
  };
  %44() /* ty=Tensor[(360), bool] */
}

def @func_5615() -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), float32]) {
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %47 = reshape(%45, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %48 = reshape(%46, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %49 = @func_865(%47, %48) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %50 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %51 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  %52 = %49.0;
  %53 = %50.0;
  (%51, %52, meta[relay.Constant][1] /* ty=Tensor[(396), int16] */, %53)
}

def @func_4763() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %63 = fn () -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
    %54 = @func_3115() /* ty=(Tensor[(360), float32],) */;
    %55 = @func_1223() /* ty=(Tensor[(360), float32],) */;
    %56 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
    %57 = @func_3096() /* ty=Tensor[(360), float32] */;
    %58 = @func_3096() /* ty=Tensor[(360), float32] */;
    %59 = %54.0;
    %60 = %55.0;
    %61 = %56.0;
    %62 = @func_3587() /* ty=Tensor[(360), float32] */;
    (%57, %58, %59, %60, %61, %62)
  };
  %63() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_8004() -> Tensor[(360), float32] {
  %64 = fn () -> Tensor[(360), float32] {
    @func_1070() /* ty=Tensor[(360), float32] */
  };
  %64() /* ty=Tensor[(360), float32] */
}

def @func_513(%var_511: Tensor[(2, 15, 12), float32]) -> Tensor[(2, 15, 12), float32] {
  @func_510(%var_511) /* ty=Tensor[(2, 15, 12), float32] */
}

def @func_6738() -> Tensor[(360), float32] {
  %66 = fn () -> Tensor[(360), float32] {
    %65 = @func_5813() /* ty=(Tensor[(360), float32],) */;
    %65.0
  };
  %66() /* ty=Tensor[(360), float32] */
}

def @func_5960() -> (Tensor[(2, 15, 12), int64],) {
  %74 = fn () -> (Tensor[(2, 15, 12), int64],) {
    %67 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
    %68 = %67.1;
    %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 15, 12), float32] */, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
    %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
    %71 = cast(%68, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
    %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %73 = bitwise_and(%71, %72) /* ty=Tensor[(2, 15, 12), int64] */;
    (%73,)
  };
  %74() /* ty=(Tensor[(2, 15, 12), int64],) */
}

def @func_3980(%var_3977: Tensor[(396), int16], %var_3978: Tensor[(150, 5), float32], %var_3979: Tensor[(1540), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) {
  %125 = fn (%var_3900: Tensor[(396), int16], %var_3911: Tensor[(150, 5), float32], %var_3937: Tensor[(1540), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) {
    %75 = cast(%var_3900, dtype="int16") /* ty=Tensor[(396), int16] */;
    %76 = reshape(%75, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %77 = @func_1870(%76) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
    %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
    %79 = sigmoid(%78) /* ty=Tensor[(150, 1), float32] */;
    %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
    %81 = reshape(%80, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %82 = @func_3342(%81) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
    %83 = %82.0;
    %84 = cast(%79, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
    %85 = cast(%83, dtype="float32") /* ty=Tensor[(360), float32] */;
    %86 = power(%84, %85) /* ty=Tensor[(150, 360), float32] */;
    %87 = cast(%86, dtype="float64") /* ty=Tensor[(150, 360), float64] */;
    %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
    %89 = cast(%var_3937, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %90 = reshape(%88, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %91 = reshape(%89, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %92 = @func_2328(%90, %91) /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) */;
    %93 = %77.2;
    %94 = cast(%93, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
    %95 = reshape(%94, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %96 = @func_1029(%95) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
    %97 = cast(%93, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
    %98 = reshape(%97, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %99 = @func_1870(%98) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
    %100 = cast(%93, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
    %101 = reshape(%100, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %102 = @func_1870(%101) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
    %103 = cast(%79, dtype="uint8") /* ty=Tensor[(150, 1), uint8] */;
    %104 = cast(%var_3911, dtype="uint8") /* ty=Tensor[(150, 5), uint8] */;
    %105 = add(%103, %104) /* ty=Tensor[(150, 5), uint8] */;
    %106 = cast(%105, dtype="float64") /* ty=Tensor[(150, 5), float64] */;
    %107 = acos(%106) /* ty=Tensor[(150, 5), float64] */;
    %108 = cast(meta[relay.Constant][3] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
    %109 = cast(%105, dtype="float32") /* ty=Tensor[(150, 5), float32] */;
    %110 = power(%108, %109) /* ty=Tensor[(150, 5), float32] */;
    %111 = cast(%110, dtype="bool") /* ty=Tensor[(150, 5), bool] */;
    %112 = shape_of(%107, dtype="int32") /* ty=Tensor[(2), int32] */;
    %113 = cast(%107, dtype="bool") /* ty=Tensor[(150, 5), bool] */;
    %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %115 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %116 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
    %117 = acosh(%87) /* ty=Tensor[(150, 360), float64] */;
    %118 = %92.4;
    %119 = %96.2;
    %120 = %99.5;
    %121 = %102.5;
    %122 = @func_1171() /* ty=Tensor[(360), float32] */;
    %123 = equal(%113, %114) /* ty=Tensor[(150, 5), bool] */;
    %124 = %115.3;
    (%116, %93, %var_3900, %117, %118, %var_3937, %119, %120, %121, %122, %123, %124)
  };
  %125(%var_3977, %var_3978, %var_3979) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) */
}

def @func_362(%var_344: Tensor[(15, 6, 10), int8], %var_345: Tensor[(15, 6, 10), int8], %var_355: Tensor[(1485), float32]) -> (Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %126 = cast(%var_345, dtype="int8") /* ty=Tensor[(15, 6, 10), int8] */;
  %127 = shape_of(%var_344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_344, dtype="int8") /* ty=Tensor[(15, 6, 10), int8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %130 = cast(%var_355, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %131 = reshape(%130, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %132 = right_shift(%128, %129) /* ty=Tensor[(15, 6, 10), int8] */;
  %133 = @func_167(%131) /* ty=Tensor[(9, 15, 11), float32] */;
  (%132, %133, %var_355)
}

def @func_3246(%var_3244: int64, %var_3245: Tensor[(216), float32]) -> (Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) {
  %145 = fn (%var_3224: int64, %var_3240: Tensor[(216), float32]) -> (Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) {
    %134 = cast(%var_3224, dtype="bool") /* ty=bool */;
    %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 6, 1), int64] */, dtype="bool") /* ty=Tensor[(6, 6, 1), bool] */;
    %136 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 6, 1), int64] */, dtype="float64") /* ty=Tensor[(6, 6, 1), float64] */;
    %137 = cast(%var_3224, dtype="float32") /* ty=float32 */;
    %138 = cast(%var_3240, dtype="float32") /* ty=Tensor[(216), float32] */;
    %139 = reshape(%137, newshape=[]) /* ty=float32 */;
    %140 = reshape(%138, newshape=[216]) /* ty=Tensor[(216), float32] */;
    %141 = @func_1780(%139, %140) /* ty=(Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) */;
    %142 = greater_equal(%134, %135) /* ty=Tensor[(6, 6, 1), bool] */;
    %143 = asin(%136) /* ty=Tensor[(6, 6, 1), float64] */;
    %144 = %141.6;
    (%142, %143, %144, %var_3240)
  };
  %145(%var_3244, %var_3245) /* ty=(Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) */
}

def @func_6967(%var_6965: Tensor[(3, 12, 12), bool], %var_6966: Tensor[(3, 12, 12), bool]) -> (Tensor[(3, 12, 12), bool],) {
  @func_6963(%var_6965, %var_6966) /* ty=(Tensor[(3, 12, 12), bool],) */
}

def @func_5017() -> (Tensor[(360), float32],) {
  %146 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%146,)
}

def @func_3297() -> Tensor[(360), float32] {
  %147 = @func_3115() /* ty=(Tensor[(360), float32],) */;
  %147.0
}

def @func_8510() -> (Tensor[(360), float32],) {
  %150 = fn () -> (Tensor[(360), float32],) {
    %148 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %149 = %148.1;
    (%149,)
  };
  %150() /* ty=(Tensor[(360), float32],) */
}

def @func_4217(%var_4216: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
  %152 = fn (%var_4212: Tensor[(12, 12, 13), float64]) -> Tensor[(12, 12, 13), float64] {
    %151 = cast(%var_4212, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
    log10(%151) /* ty=Tensor[(12, 12, 13), float64] */
  };
  %152(%var_4216) /* ty=Tensor[(12, 12, 13), float64] */
}

def @func_6488() -> Tensor[(360), float32] {
  @func_6486() /* ty=Tensor[(360), float32] */
}

def @func_8226(%var_8224: Tensor[(6, 4), float32], %var_8225: Tensor[(900), int8]) -> (Tensor[(6, 4), float32], Tensor[(900), int8], Tensor[(900), int8]) {
  @func_8222(%var_8224, %var_8225) /* ty=(Tensor[(6, 4), float32], Tensor[(900), int8], Tensor[(900), int8]) */
}

def @func_2844(%var_2842: Tensor[(16, 13, 6), float64]) -> (Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) {
  @func_2841(%var_2842) /* ty=(Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) */
}

def @func_997(%var_993: Tensor[(7, 88), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) {
  %153 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %154 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %155 = reshape(%154, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %156 = @func_579(%155) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %158 = reshape(%157, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %159 = @func_579(%158) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %160 = %159.0;
  %161 = cast(%160, dtype="float64") /* ty=Tensor[(14, 4, 11), float64] */;
  %162 = reshape(%161, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %163 = @func_579(%162) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %164 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %165 = sqrt(%164) /* ty=Tensor[(7, 88), float64] */;
  %166 = cast(%var_993, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(2), int32] */;
  %168 = cast(%165, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %170 = %153.2;
  %171 = %156.2;
  %172 = %163.1;
  %173 = mod(%168, %169) /* ty=Tensor[(7, 88), float32] */;
  (%170, %171, %160, %172, %173)
}

def @func_6357() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %180 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %174 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %175 = %174.2;
    %176 = cast(%175, dtype="float32") /* ty=Tensor[(360), float32] */;
    %177 = reshape(%176, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %178 = @func_3036(%177) /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %179 = %178.0;
    (%175, %179)
  };
  %180() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_8599() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  @func_8597() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_2820() -> (Tensor[(360), float32],) {
  @func_2818() /* ty=(Tensor[(360), float32],) */
}

def @func_3216() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %185 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %181 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %182 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
    %183 = %181.2;
    %184 = %182.0;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_2328(%var_2291: Tensor[(150), float64], %var_2322: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) {
  %186 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %187 = cast(%var_2291, dtype="float64") /* ty=Tensor[(150), float64] */;
  %188 = cast(meta[relay.Constant][6] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %189 = reshape(%187, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %190 = reshape(%188, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %191 = @func_1376(%189, %190) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %192 = cast(%var_2291, dtype="float64") /* ty=Tensor[(150), float64] */;
  %193 = reshape(%192, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
  %194 = @func_461(%193) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
  %195 = %194.2;
  %196 = cast(meta[relay.Constant][6] /* ty=Tensor[(1485), float32] */, dtype="int8") /* ty=Tensor[(1485), int8] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(1), int32] */;
  %198 = cast(%195, dtype="int8") /* ty=Tensor[(1485), int8] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?), int8] */;
  %200 = cast(%var_2322, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %201 = reshape(%200, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %202 = @func_1645(%201) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %203 = %186.0;
  %204 = %191.3;
  %205 = logical_xor(%198, %199) /* ty=Tensor[(1485), int8] */;
  %206 = %202.2;
  (%203, %204, %var_2291, %205, %206, %var_2322)
}

def @func_8426() -> Tensor[(360), float32] {
  %208 = fn () -> Tensor[(360), float32] {
    %207 = @func_5494() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %207.1
  };
  %208() /* ty=Tensor[(360), float32] */
}

def @func_3178(%var_3176: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool]) {
  @func_3175(%var_3176) /* ty=(Tensor[(360), float32], Tensor[(1540), bool]) */
}

def @func_869(%var_867: Tensor[(6, 11, 6), int16], %var_868: Tensor[(6, 11, 6), int16]) -> (Tensor[(6, 11, 6), bool],) {
  @func_865(%var_867, %var_868) /* ty=(Tensor[(6, 11, 6), bool],) */
}

def @func_7005(%var_7003: Tensor[(4, 1, 10), uint64], %var_7004: Tensor[(4, 6, 10), uint64]) -> (Tensor[(4, 6, 10), bool],) {
  %212 = fn (%var_6996: Tensor[(4, 1, 10), uint64], %var_6997: Tensor[(4, 6, 10), uint64]) -> (Tensor[(4, 6, 10), bool],) {
    %209 = cast(%var_6996, dtype="bool") /* ty=Tensor[(4, 1, 10), bool] */;
    %210 = cast(%var_6997, dtype="bool") /* ty=Tensor[(4, 6, 10), bool] */;
    %211 = not_equal(%209, %210) /* ty=Tensor[(4, 6, 10), bool] */;
    (%211,)
  };
  %212(%var_7003, %var_7004) /* ty=(Tensor[(4, 6, 10), bool],) */
}

def @func_581(%var_580: Tensor[(14, 4, 11), float64]) -> (Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %218 = fn (%var_551: Tensor[(14, 4, 11), float64]) -> (Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
    %213 = cast(%var_551, dtype="float64") /* ty=Tensor[(14, 4, 11), float64] */;
    %214 = cast(meta[relay.Constant][7] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %215 = reshape(%214, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
    %216 = exp(%213) /* ty=Tensor[(14, 4, 11), float64] */;
    %217 = @func_510(%215) /* ty=Tensor[(2, 15, 12), float32] */;
    (%216, %217, meta[relay.Constant][7] /* ty=Tensor[(360), float32] */)
  };
  %218(%var_580) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */
}

def @func_461(%var_442: Tensor[(15, 1, 10), float64]) -> (Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) {
  %219 = cast(%var_442, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  %220 = cast(meta[relay.Constant][8] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %221 = reshape(%220, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %222 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %223 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %224 = cast(meta[relay.Constant][8] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %225 = reshape(%222, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %226 = reshape(%223, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %227 = reshape(%224, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %228 = @func_362(%225, %226, %227) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %229 = sin(%219) /* ty=Tensor[(15, 1, 10), float64] */;
  %230 = @func_167(%221) /* ty=Tensor[(9, 15, 11), float32] */;
  %231 = %228.2;
  (%229, %230, meta[relay.Constant][8] /* ty=Tensor[(1485), float32] */, %231, meta[relay.Constant][9] /* ty=Tensor[(900), int8] */)
}

def @func_1784(%var_1782: float32, %var_1783: Tensor[(216), float32]) -> (Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) {
  @func_1780(%var_1782, %var_1783) /* ty=(Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) */
}

def @func_7889(%var_7886: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool], Tensor[(1540), float64]) {
  %232 = cast(%var_7886, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %233 = reshape(%232, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %234 = @func_3175(%233) /* ty=(Tensor[(360), float32], Tensor[(1540), bool]) */;
  %235 = @func_3297() /* ty=Tensor[(360), float32] */;
  %236 = %234.1;
  (%235, %236, %var_7886)
}

def @func_6714(%var_6711: float32, %var_6712: Tensor[(13, 4, 6), float32], %var_6713: Tensor[(132), float32]) -> (Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) {
  %247 = fn (%var_6653: float32, %var_6654: Tensor[(13, 4, 6), float32], %var_6700: Tensor[(132), float32]) -> (Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) {
    %237 = cast(%var_6653, dtype="float32") /* ty=float32 */;
    %238 = cast(%var_6654, dtype="float32") /* ty=Tensor[(13, 4, 6), float32] */;
    %239 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
    %240 = cast(%var_6700, dtype="float32") /* ty=Tensor[(132), float32] */;
    %241 = reshape(%240, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), float32] */;
    %242 = @func_1206(%241) /* ty=(Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
    %243 = divide(%237, %238) /* ty=Tensor[(13, 4, 6), float32] */;
    %244 = @func_2758() /* ty=Tensor[(360), float32] */;
    %245 = %239.2;
    %246 = %242.2;
    (%243, %244, %245, %246, %var_6700)
  };
  %247(%var_6711, %var_6712, %var_6713) /* ty=(Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) */
}

def @func_2719(%var_2717: Tensor[(150), float64], %var_2718: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) {
  @func_2715(%var_2717, %var_2718) /* ty=(Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) */
}

def @func_1648(%var_1646: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  @func_1645(%var_1646) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */
}

def @func_2332(%var_2330: Tensor[(150), float64], %var_2331: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) {
  @func_2328(%var_2330, %var_2331) /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) */
}

def @func_8309() -> (Tensor[(2, 15, 12), uint32], Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), float32]) {
  @func_8307() /* ty=(Tensor[(2, 15, 12), uint32], Tensor[(2, 15, 12), float32], Tensor[(2, 15, 12), float32]) */
}

def @func_7492() -> (Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %248 = @func_7381() /* ty=(Tensor[(360), float32],) */;
  %249 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %250 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %251 = %248.0;
  %252 = %249.2;
  %253 = %250.0;
  %254 = @func_5726() /* ty=Tensor[(360), float32] */;
  (%251, %252, %253, %254)
}

def @func_1209(%var_1207: Tensor[(4, 3, 11), float32]) -> (Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  @func_1206(%var_1207) /* ty=(Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */
}

def @func_5113(%var_5111: float32) -> (Tensor[(360), float32], Tensor[(360), float32], float32, Tensor[(36, 6), float32], Tensor[(1540), float64], Tensor[(150), float64]) {
  @func_5110(%var_5111) /* ty=(Tensor[(360), float32], Tensor[(360), float32], float32, Tensor[(36, 6), float32], Tensor[(1540), float64], Tensor[(150), float64]) */
}

def @func_2464(%var_2412: Tensor[(13, 2, 16), uint8], %var_2413: Tensor[(13, 2, 16), uint8], %var_2432: Tensor[(1540), float64], %var_2442: Tensor[(1485), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(360), float32], Tensor[(13, 2, 16), float64], Tensor[(14, 11, 10), bool], Tensor[(1540), float64], Tensor[(9, 15, 11), float32], Tensor[(900), int8], Tensor[(1485), float32]) {
  %255 = cast(%var_2413, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %256 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%var_2412, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = cast(%var_2412, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %260 = cast(%var_2432, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %261 = reshape(%260, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %262 = cast(meta[relay.Constant][10] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %263 = cast(meta[relay.Constant][10] /* ty=Tensor[(900), int8] */, dtype="int8") /* ty=Tensor[(900), int8] */;
  %264 = cast(%var_2442, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %265 = reshape(%262, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %266 = reshape(%263, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %267 = reshape(%264, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %268 = @func_362(%265, %266, %267) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %269 = greater_equal(%257, %258) /* ty=Tensor[(13, 2, 16), bool] */;
  %270 = @func_1070() /* ty=Tensor[(360), float32] */;
  %271 = erf(%259) /* ty=Tensor[(13, 2, 16), float64] */;
  %272 = @func_1048(%261) /* ty=Tensor[(14, 11, 10), bool] */;
  %273 = %268.1;
  (%269, %270, %271, %272, %var_2432, %273, meta[relay.Constant][10] /* ty=Tensor[(900), int8] */, %var_2442)
}

def @func_7381() -> (Tensor[(360), float32],) {
  %274 = @func_6751() /* ty=(Tensor[(360), float32],) */;
  %275 = %274.0;
  (%275,)
}

def @func_5443() -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(450, 2), int8], Tensor[(1485), float32], Tensor[(9, 15, 11), float32]) {
  %276 = @func_2080() /* ty=(Tensor[(360), float32],) */;
  %277 = cast(meta[relay.Constant][11] /* ty=Tensor[(450, 2), int8] */, dtype="int8") /* ty=Tensor[(450, 2), int8] */;
  %278 = cast(meta[relay.Constant][11] /* ty=Tensor[(450, 2), int8] */, dtype="int8") /* ty=Tensor[(450, 2), int8] */;
  %279 = cast(meta[relay.Constant][12] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %280 = reshape(%277, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %281 = reshape(%278, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
  %282 = reshape(%279, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %283 = @func_362(%280, %281, %282) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %284 = cast(meta[relay.Constant][12] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %285 = reshape(%284, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %286 = @func_2974(%285) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %287 = %276.0;
  %288 = %283.2;
  %289 = %286.1;
  (%287, %288, meta[relay.Constant][11] /* ty=Tensor[(450, 2), int8] */, meta[relay.Constant][12] /* ty=Tensor[(1485), float32] */, %289)
}

def @func_6945() -> Tensor[(360), float32] {
  @func_3096() /* ty=Tensor[(360), float32] */
}

def @func_1462(%var_1461: Tensor[(900), int8]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) {
  %309 = fn (%var_1449: Tensor[(900), int8]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) {
    %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %291 = reshape(%290, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
    %292 = @func_579(%291) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %293 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %294 = cast(%var_1449, dtype="int8") /* ty=Tensor[(900), int8] */;
    %295 = cast(%var_1449, dtype="int8") /* ty=Tensor[(900), int8] */;
    %296 = cast(meta[relay.Constant][14] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %297 = reshape(%294, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
    %298 = reshape(%295, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), int8] */;
    %299 = reshape(%296, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %300 = @func_362(%297, %298, %299) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %301 = cast(meta[relay.Constant][13] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %302 = reshape(%301, newshape=[7, 88]) /* ty=Tensor[(7, 88), float64] */;
    %303 = @func_997(%302) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) */;
    %304 = @func_1171() /* ty=Tensor[(360), float32] */;
    %305 = %292.1;
    %306 = %293.1;
    %307 = %300.2;
    %308 = %303.1;
    (%304, %305, meta[relay.Constant][13] /* ty=Tensor[(616), float64] */, %306, %307, %var_1449, meta[relay.Constant][14] /* ty=Tensor[(1485), float32] */, %308)
  };
  %309(%var_1461) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) */
}

def @func_2884() -> Tensor[(360), float32] {
  @func_2882() /* ty=Tensor[(360), float32] */
}

def @func_2271(%var_2269: Tensor[(132), float32], %var_2270: Tensor[(14, 11, 10), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), uint32]) {
  %362 = fn (%var_2145: Tensor[(132), float32], %var_2215: Tensor[(14, 11, 10), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), uint32]) {
    %310 = @func_1223() /* ty=(Tensor[(360), float32],) */;
    %311 = @func_1494() /* ty=(Tensor[(360), float32],) */;
    %312 = %310.0;
    %313 = cast(%312, dtype="float32") /* ty=Tensor[(360), float32] */;
    %314 = reshape(%313, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
    %315 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %316 = cast(%var_2145, dtype="float32") /* ty=Tensor[(132), float32] */;
    %317 = reshape(%316, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), float32] */;
    %318 = @func_1206(%317) /* ty=(Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
    %319 = %318.1;
    %320 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 11, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%319, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %324 = logical_and(%322, %323) /* ty=Tensor[(14, 11, 10), bool] */;
    %325 = cast(%319, dtype="int32") /* ty=Tensor[(14, 11, 10), int32] */;
    %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
    %327 = cast(%324, dtype="int32") /* ty=Tensor[(14, 11, 10), int32] */;
    %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %329 = left_shift(%327, %328) /* ty=Tensor[(14, 11, 10), int32] */;
    %330 = cast(%329, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
    %331 = log2(%330) /* ty=Tensor[(14, 11, 10), float32] */;
    %332 = cast(%331, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
    %333 = tan(%332) /* ty=Tensor[(14, 11, 10), float64] */;
    %334 = cast(%var_2215, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %336 = cast(%333, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %338 = cast(%324, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
    %339 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %340 = cast(%333, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
    %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %342 = divide(%340, %341) /* ty=Tensor[(14, 11, 10), float32] */;
    %343 = cast(%342, dtype="int64") /* ty=Tensor[(14, 11, 10), int64] */;
    %344 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %345 = cast(%333, dtype="int64") /* ty=Tensor[(14, 11, 10), int64] */;
    %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %347 = bitwise_or(%345, %346) /* ty=Tensor[(14, 11, 10), int64] */;
    %348 = cast(%324, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %350 = cast(%347, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
    %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %352 = cast(%347, dtype="uint32") /* ty=Tensor[(14, 11, 10), uint32] */;
    %353 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
    %354 = cast(%324, dtype="uint32") /* ty=Tensor[(14, 11, 10), uint32] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %356 = %311.0;
    %357 = @func_510(%314) /* ty=Tensor[(2, 15, 12), float32] */;
    %358 = %315.1;
    %359 = greater_equal(%336, %337) /* ty=Tensor[(14, 11, 10), bool] */;
    %360 = equal(%350, %351) /* ty=Tensor[(14, 11, 10), bool] */;
    %361 = multiply(%354, %355) /* ty=Tensor[(14, 11, 10), uint32] */;
    (%312, %356, %var_2145, %357, %358, %359, %360, %361)
  };
  %362(%var_2269, %var_2270) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), bool], Tensor[(14, 11, 10), uint32]) */
}

def @func_4712() -> Tensor[(360), bool] {
  @func_4710() /* ty=Tensor[(360), bool] */
}

def @func_7669() -> (Tensor[(360), float32],) {
  @func_7667() /* ty=(Tensor[(360), float32],) */
}

def @func_7936(%var_7934: Tensor[(9, 13, 7), int64]) -> (Tensor[(9, 13, 7), int64],) {
  @func_7933(%var_7934) /* ty=(Tensor[(9, 13, 7), int64],) */
}

def @func_6486() -> Tensor[(360), float32] {
  @func_3297() /* ty=Tensor[(360), float32] */
}

def @func_7957() -> (Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %366 = fn () -> (Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
    %363 = @func_7332() /* ty=(Tensor[(360), float32],) */;
    %364 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
    %365 = %363.0;
    (%364, %365)
  };
  %366() /* ty=(Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */
}

def @func_1048(%var_1041: Tensor[(14, 11, 10), float64]) -> Tensor[(14, 11, 10), bool] {
  %367 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %368 = %367.0;
  %369 = cast(%var_1041, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%371, %372) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_1645(%var_1643: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %373 = @func_1070() /* ty=Tensor[(360), float32] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(360), float32] */;
  %375 = cast(%var_1643, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %376 = reshape(%375, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %377 = atanh(%374) /* ty=Tensor[(360), float32] */;
  %378 = @func_1048(%376) /* ty=Tensor[(14, 11, 10), bool] */;
  (%377, %378, %var_1643)
}

def @func_5674() -> (Tensor[(360), float32],) {
  %379 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%379,)
}

def @func_3281(%var_3277: Tensor[(1, 14, 10), float64]) -> (Tensor[(1, 14, 10), float64],) {
  %380 = cast(%var_3277, dtype="float64") /* ty=Tensor[(1, 14, 10), float64] */;
  %381 = log2(%380) /* ty=Tensor[(1, 14, 10), float64] */;
  (%381,)
}

def @func_5592(%var_5590: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), int16], Tensor[(25, 6), float64]) {
  @func_5589(%var_5590) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), int16], Tensor[(25, 6), float64]) */
}

def @func_7161(%var_7159: Tensor[(14, 11, 10), float32]) -> Tensor[(14, 11, 10), bool] {
  @func_7158(%var_7159) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_5370(%var_5369: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1540), float64]) {
  %387 = fn (%var_5352: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1540), float64]) {
    %382 = cast(%var_5352, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %383 = reshape(%382, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %384 = @func_1645(%383) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
    %385 = @func_2758() /* ty=Tensor[(360), float32] */;
    %386 = %384.0;
    (%385, %386, %var_5352)
  };
  %387(%var_5369) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(1540), float64]) */
}

def @func_5180(%var_5170: bool) -> (Tensor[(15, 16, 8), bool],) {
  %388 = cast(%var_5170, dtype="bool") /* ty=bool */;
  %389 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 16, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %390 = logical_and(%388, %389) /* ty=Tensor[(15, 16, 8), bool] */;
  (%390,)
}

def @func_7396() -> Tensor[(360), float32] {
  @func_7394() /* ty=Tensor[(360), float32] */
}

def @func_2377() -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32]) {
  @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */
}

def @func_2470(%var_2466: Tensor[(13, 2, 16), uint8], %var_2467: Tensor[(13, 2, 16), uint8], %var_2468: Tensor[(1540), float64], %var_2469: Tensor[(1485), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(360), float32], Tensor[(13, 2, 16), float64], Tensor[(14, 11, 10), bool], Tensor[(1540), float64], Tensor[(9, 15, 11), float32], Tensor[(900), int8], Tensor[(1485), float32]) {
  @func_2464(%var_2466, %var_2467, %var_2468, %var_2469) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(360), float32], Tensor[(13, 2, 16), float64], Tensor[(14, 11, 10), bool], Tensor[(1540), float64], Tensor[(9, 15, 11), float32], Tensor[(900), int8], Tensor[(1485), float32]) */
}

def @func_3822() -> Tensor[(360), float32] {
  %392 = fn () -> Tensor[(360), float32] {
    %391 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %391.1
  };
  %392() /* ty=Tensor[(360), float32] */
}

def @func_5647(%var_5646: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(616), float64], Tensor[(360), float64]) {
  %404 = fn (%var_5635: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(616), float64], Tensor[(360), float64]) {
    %393 = cast(%var_5635, dtype="float64") /* ty=Tensor[(616), float64] */;
    %394 = reshape(%393, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
    %395 = @func_579(%394) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %396 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
    %397 = %396.2;
    %398 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), float32] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(1), int32] */;
    %400 = cast(%397, dtype="float64") /* ty=Tensor[(360), float64] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), float64] */;
    %402 = %395.2;
    %403 = floor_divide(%400, %401) /* ty=Tensor[(360), float64] */;
    (%402, %var_5635, %403)
  };
  %404(%var_5646) /* ty=(Tensor[(360), float32], Tensor[(616), float64], Tensor[(360), float64]) */
}

def @func_2375() -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32]) {
  %405 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %406 = @func_2105() /* ty=Tensor[(360), float32] */;
  %407 = %405.1;
  (%406, %407)
}

def @func_4195(%var_4190: Tensor[(16, 16, 4), float32], %var_4191: Tensor[(140), float64], %var_4192: float32, %var_4193: Tensor[(396, 1), int16], %var_4194: Tensor[(750), float32]) -> (Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) {
  %459 = fn (%var_4056: Tensor[(16, 16, 4), float32], %var_4114: Tensor[(140), float64], %var_4120: float32, %var_4140: Tensor[(396, 1), int16], %var_4149: Tensor[(750), float32]) -> (Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) {
    %408 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %409 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
    %410 = cast(%var_4114, dtype="float64") /* ty=Tensor[(140), float64] */;
    %411 = reshape(%410, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float64] */;
    %412 = @func_3281(%411) /* ty=(Tensor[(1, 14, 10), float64],) */;
    %413 = cast(%var_4120, dtype="float32") /* ty=float32 */;
    %414 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %415 = reshape(%413, newshape=[]) /* ty=float32 */;
    %416 = reshape(%414, newshape=[216]) /* ty=Tensor[(216), float32] */;
    %417 = @func_1780(%415, %416) /* ty=(Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) */;
    %418 = cast(%var_4140, dtype="int16") /* ty=Tensor[(396, 1), int16] */;
    %419 = reshape(%418, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %420 = @func_1870(%419) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */;
    %421 = %408.2;
    %422 = cast(%421, dtype="float32") /* ty=Tensor[(9, 15, 11), float32] */;
    %423 = reshape(%422, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %424 = @func_2974(%423) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %425 = cast(%var_4140, dtype="int16") /* ty=Tensor[(396, 1), int16] */;
    %426 = cast(%var_4149, dtype="float32") /* ty=Tensor[(750), float32] */;
    %427 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 220), float64] */, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
    %428 = reshape(%425, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %429 = reshape(%426, newshape=[150, 5]) /* ty=Tensor[(150, 5), float32] */;
    %430 = reshape(%427, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %431 = @func_3976(%428, %429, %430) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(150, 360), float64], Tensor[(1540), float64], Tensor[(1540), float64], Tensor[(396), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(360), float32], Tensor[(150, 5), bool], Tensor[(1485), float32]) */;
    %432 = cast(meta[relay.Constant][20] /* ty=Tensor[(104, 12), float64] */, dtype="float64") /* ty=Tensor[(104, 12), float64] */;
    %433 = reshape(%432, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), float64] */;
    %434 = @func_2841(%433) /* ty=(Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) */;
    %435 = cast(%var_4056, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
    %436 = asinh(%435) /* ty=Tensor[(16, 16, 4), float32] */;
    %437 = cast(%436, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
    %438 = sin(%437) /* ty=Tensor[(16, 16, 4), float32] */;
    %439 = cast(%438, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
    %440 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %441 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 220), float64] */, dtype="float64") /* ty=Tensor[(7, 220), float64] */;
    %442 = reshape(%441, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %443 = @func_1645(%442) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
    %444 = cast(%436, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
    %445 = sigmoid(%444) /* ty=Tensor[(16, 16, 4), float32] */;
    %446 = cast(%445, dtype="int16") /* ty=Tensor[(16, 16, 4), int16] */;
    %447 = cast(%var_4120, dtype="int16") /* ty=int16 */;
    %448 = %409.0;
    %449 = %412.0;
    %450 = %417.0;
    %451 = %420.5;
    %452 = %424.0;
    %453 = %431.9;
    %454 = %434.1;
    %455 = sqrt(%439) /* ty=Tensor[(16, 16, 4), float64] */;
    %456 = %440.3;
    %457 = %443.0;
    %458 = bitwise_and(%446, %447) /* ty=Tensor[(16, 16, 4), int16] */;
    (%421, %448, %449, %var_4114, %450, meta[relay.Constant][18] /* ty=Tensor[(216), float32] */, %451, %var_4140, %452, %453, %var_4149, meta[relay.Constant][19] /* ty=Tensor[(7, 220), float64] */, %454, meta[relay.Constant][20] /* ty=Tensor[(104, 12), float64] */, %455, %456, %457, %458)
  };
  %459(%var_4190, %var_4191, %var_4192, %var_4193, %var_4194) /* ty=(Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) */
}

def @func_4669(%var_4667: Tensor[(10, 2, 8), int64], %var_4668: Tensor[(10, 2, 8), int64]) -> (Tensor[(10, 2, 8), int64], Tensor[(360), float32]) {
  %467 = fn (%var_4648: Tensor[(10, 2, 8), int64], %var_4649: Tensor[(10, 2, 8), int64]) -> (Tensor[(10, 2, 8), int64], Tensor[(360), float32]) {
    %460 = cast(%var_4649, dtype="int64") /* ty=Tensor[(10, 2, 8), int64] */;
    %461 = shape_of(%var_4648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%var_4648, dtype="int64") /* ty=Tensor[(10, 2, 8), int64] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %464 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %465 = minimum(%462, %463) /* ty=Tensor[(10, 2, 8), int64] */;
    %466 = %464.2;
    (%465, %466)
  };
  %467(%var_4667, %var_4668) /* ty=(Tensor[(10, 2, 8), int64], Tensor[(360), float32]) */
}

def @func_5183(%var_5181: bool) -> (Tensor[(15, 16, 8), bool],) {
  @func_5180(%var_5181) /* ty=(Tensor[(15, 16, 8), bool],) */
}

def @func_2974(%var_2968: Tensor[(1485), float32]) -> (Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %468 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %469 = cast(%var_2968, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %470 = reshape(%469, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %471 = %468.1;
  %472 = @func_167(%470) /* ty=Tensor[(9, 15, 11), float32] */;
  (%471, %472, %var_2968)
}

def @func_2818() -> (Tensor[(360), float32],) {
  %473 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%473,)
}

def @func_5726() -> Tensor[(360), float32] {
  @func_4025() /* ty=Tensor[(360), float32] */
}

def @func_2579() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %474 = @func_1690() /* ty=Tensor[(360), float32] */;
  %475 = @func_1690() /* ty=Tensor[(360), float32] */;
  (%474, %475)
}

def @func_3342(%var_3337: Tensor[(150), float64]) -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  %476 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %477 = %476.1;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(360), float32] */;
  %479 = reshape(%478, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %480 = @func_2783(%479) /* ty=(Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %481 = cast(%var_3337, dtype="float64") /* ty=Tensor[(150), float64] */;
  %482 = cast(meta[relay.Constant][21] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %483 = reshape(%481, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %484 = reshape(%482, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %485 = @func_1376(%483, %484) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %486 = @func_1690() /* ty=Tensor[(360), float32] */;
  %487 = %480.3;
  %488 = %485.2;
  (%486, %477, %487, %488, %var_3337, meta[relay.Constant][21] /* ty=Tensor[(1485), float32] */)
}

def @func_6232() -> (Tensor[(360), float32],) {
  %491 = fn () -> (Tensor[(360), float32],) {
    %489 = @func_4474() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %490 = %489.1;
    (%490,)
  };
  %491() /* ty=(Tensor[(360), float32],) */
}

def @func_1032(%var_1030: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) {
  @func_1029(%var_1030) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */
}

def @func_7302() -> (Tensor[(2, 15, 12), int64],) {
  %494 = fn () -> (Tensor[(2, 15, 12), int64],) {
    %492 = @func_5959() /* ty=(Tensor[(2, 15, 12), int64],) */;
    %493 = %492.0;
    (%493,)
  };
  %494() /* ty=(Tensor[(2, 15, 12), int64],) */
}

def @func_7333() -> (Tensor[(360), float32],) {
  %496 = fn () -> (Tensor[(360), float32],) {
    %495 = @func_3483() /* ty=Tensor[(360), float32] */;
    (%495,)
  };
  %496() /* ty=(Tensor[(360), float32],) */
}

def @func_4421() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %499 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %497 = @func_2105() /* ty=Tensor[(360), float32] */;
    %498 = @func_3483() /* ty=Tensor[(360), float32] */;
    (%497, %498)
  };
  %499() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_6398(%var_6395: Tensor[(1485), float32], %var_6396: Tensor[(405), float64], %var_6397: Tensor[(150, 1), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(1485), float32], Tensor[(405), float64], Tensor[(1540), float64], Tensor[(150, 1), float64]) {
  %516 = fn (%var_6388: Tensor[(1485), float32], %var_6389: Tensor[(405), float64], %var_6392: Tensor[(150, 1), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(1485), float32], Tensor[(405), float64], Tensor[(1540), float64], Tensor[(150, 1), float64]) {
    %500 = @func_3215() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %501 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
    %502 = cast(%var_6388, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %503 = cast(%var_6389, dtype="float64") /* ty=Tensor[(405), float64] */;
    %504 = reshape(%502, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %505 = reshape(%503, newshape=[405]) /* ty=Tensor[(405), float64] */;
    %506 = @func_4643(%504, %505) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) */;
    %507 = cast(%var_6392, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
    %508 = %506.1;
    %509 = cast(%508, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
    %510 = reshape(%507, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %511 = reshape(%509, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %512 = @func_2328(%510, %511) /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(150), float64], Tensor[(1485), int8], Tensor[(1540), float64], Tensor[(1540), float64]) */;
    %513 = %500.0;
    %514 = %501.1;
    %515 = %512.5;
    (%513, %514, %508, %var_6388, %var_6389, %515, %var_6392)
  };
  %516(%var_6395, %var_6396, %var_6397) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(1485), float32], Tensor[(405), float64], Tensor[(1540), float64], Tensor[(150, 1), float64]) */
}

def @func_6751() -> (Tensor[(360), float32],) {
  %517 = @func_4691() /* ty=(Tensor[(360), float32],) */;
  %518 = %517.0;
  (%518,)
}

def @func_899() -> (Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */
}

def @func_3116() -> (Tensor[(360), float32],) {
  %520 = fn () -> (Tensor[(360), float32],) {
    %519 = @func_1171() /* ty=Tensor[(360), float32] */;
    (%519,)
  };
  %520() /* ty=(Tensor[(360), float32],) */
}

def @func_2033(%var_2029: Tensor[(14, 11, 8), uint16], %var_2030: Tensor[(14, 11, 8), uint16], %var_2031: Tensor[(1485), float32], %var_2032: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(14, 11, 8), float32], Tensor[(14, 11, 10), float64], Tensor[(14, 4, 11), float64], Tensor[(616), float64]) {
  %540 = fn (%var_1934: Tensor[(14, 11, 8), uint16], %var_1935: Tensor[(14, 11, 8), uint16], %var_1961: Tensor[(1485), float32], %var_2023: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(14, 11, 8), float32], Tensor[(14, 11, 10), float64], Tensor[(14, 4, 11), float64], Tensor[(616), float64]) {
    %521 = cast(meta[relay.Constant][22] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %522 = cast(%var_1961, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %523 = reshape(%521, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %524 = reshape(%522, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %525 = @func_1376(%523, %524) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
    %526 = cast(%var_1935, dtype="uint16") /* ty=Tensor[(14, 11, 8), uint16] */;
    %527 = shape_of(%var_1934, dtype="int32") /* ty=Tensor[(3), int32] */;
    %528 = cast(%var_1934, dtype="uint16") /* ty=Tensor[(14, 11, 8), uint16] */;
    %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %530 = minimum(%528, %529) /* ty=Tensor[(14, 11, 8), uint16] */;
    %531 = cast(%530, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
    %532 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %533 = cast(%var_2023, dtype="float64") /* ty=Tensor[(616), float64] */;
    %534 = reshape(%533, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
    %535 = @func_579(%534) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %536 = %525.0;
    %537 = erf(%531) /* ty=Tensor[(14, 11, 8), float32] */;
    %538 = %532.0;
    %539 = %535.0;
    (%536, meta[relay.Constant][22] /* ty=Tensor[(150), float64] */, %var_1961, %537, %538, %539, %var_2023)
  };
  %540(%var_2029, %var_2030, %var_2031, %var_2032) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(14, 11, 8), float32], Tensor[(14, 11, 10), float64], Tensor[(14, 4, 11), float64], Tensor[(616), float64]) */
}

def @func_1722(%var_1720: float32, %var_1721: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) {
  %548 = fn (%var_1699: float32, %var_1700: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) {
    %541 = cast(%var_1699, dtype="float32") /* ty=float32 */;
    %542 = cast(%var_1700, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
    %543 = cast(%var_1699, dtype="bool") /* ty=bool */;
    %544 = cast(%var_1700, dtype="bool") /* ty=Tensor[(12, 2, 9), bool] */;
    %545 = maximum(%541, %542) /* ty=Tensor[(12, 2, 9), float32] */;
    %546 = logical_and(%543, %544) /* ty=Tensor[(12, 2, 9), bool] */;
    %547 = @func_1690() /* ty=Tensor[(360), float32] */;
    (%545, %546, %547)
  };
  %548(%var_1720, %var_1721) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */
}

def @func_1379(%var_1377: Tensor[(150), float64], %var_1378: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) {
  %564 = fn (%var_1343: Tensor[(150), float64], %var_1348: Tensor[(1485), float32]) -> (Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) {
    %549 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %550 = cast(%var_1343, dtype="float64") /* ty=Tensor[(150), float64] */;
    %551 = reshape(%550, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
    %552 = @func_461(%551) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
    %553 = %552.2;
    %554 = cast(%var_1348, dtype="int16") /* ty=Tensor[(1485), int16] */;
    %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(1), int32] */;
    %556 = cast(%553, dtype="int16") /* ty=Tensor[(1485), int16] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?), int16] */;
    %558 = cast(%553, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %559 = exp(%558) /* ty=Tensor[(1485), float32] */;
    %560 = cast(%559, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %561 = %549.2;
    %562 = minimum(%556, %557) /* ty=Tensor[(1485), int16] */;
    %563 = asinh(%560) /* ty=Tensor[(1485), float32] */;
    (%561, %var_1343, %562, %563)
  };
  %564(%var_1377, %var_1378) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */
}

def @func_7494() -> (Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  @func_7492() /* ty=(Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_1223() -> (Tensor[(360), float32],) {
  %565 = @func_1171() /* ty=Tensor[(360), float32] */;
  (%565,)
}

def @func_2841(%var_2823: Tensor[(16, 13, 6), float64]) -> (Tensor[(16, 13, 6), float64], Tensor[(2, 15, 12), float32]) {
  %566 = cast(%var_2823, dtype="float64") /* ty=Tensor[(16, 13, 6), float64] */;
  %567 = exp(%566) /* ty=Tensor[(16, 13, 6), float64] */;
  %568 = @func_1675() /* ty=Tensor[(2, 15, 12), float32] */;
  (%567, %568)
}

def @func_8149() -> (Tensor[(360), float32], Tensor[(1540), float64]) {
  %569 = @func_2758() /* ty=Tensor[(360), float32] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(360), float32] */;
  %571 = reshape(%570, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %572 = @func_2783(%571) /* ty=(Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %573 = %572.3;
  (%569, %573)
}

def @func_3299() -> Tensor[(360), float32] {
  @func_3297() /* ty=Tensor[(360), float32] */
}

def @func_7011() -> Tensor[(360), float32] {
  @func_6945() /* ty=Tensor[(360), float32] */
}

def @func_3498(%var_3495: Tensor[(9, 5, 9), float64]) -> Tensor[(9, 5, 9), float64] {
  %574 = cast(%var_3495, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  sin(%574) /* ty=Tensor[(9, 5, 9), float64] */
}

def @func_2581() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_3485() -> Tensor[(360), float32] {
  @func_3483() /* ty=Tensor[(360), float32] */
}

def @func_1677() -> Tensor[(2, 15, 12), float32] {
  @func_1675() /* ty=Tensor[(2, 15, 12), float32] */
}

def @func_3284(%var_3282: Tensor[(1, 14, 10), float64]) -> (Tensor[(1, 14, 10), float64],) {
  @func_3281(%var_3282) /* ty=(Tensor[(1, 14, 10), float64],) */
}

def @func_3703() -> (Tensor[(360), float32],) {
  %575 = @func_2105() /* ty=Tensor[(360), float32] */;
  (%575,)
}

def @func_5310(%var_5308: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  @func_5307(%var_5308) /* ty=(Tensor[(360), bool], Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */
}

def @func_367(%var_364: Tensor[(15, 6, 10), int8], %var_365: Tensor[(15, 6, 10), int8], %var_366: Tensor[(1485), float32]) -> (Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  @func_362(%var_364, %var_365, %var_366) /* ty=(Tensor[(15, 6, 10), int8], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */
}

def @func_1206(%var_1179: Tensor[(4, 3, 11), float32]) -> (Tensor[(4, 3, 11), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %576 = cast(%var_1179, dtype="float32") /* ty=Tensor[(4, 3, 11), float32] */;
  %577 = cast(meta[relay.Constant][23] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %578 = reshape(%577, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %579 = acosh(%576) /* ty=Tensor[(4, 3, 11), float32] */;
  %580 = @func_1048(%578) /* ty=Tensor[(14, 11, 10), bool] */;
  (%579, %580, meta[relay.Constant][23] /* ty=Tensor[(1540), float64] */)
}

def @func_6753() -> (Tensor[(360), float32],) {
  @func_6751() /* ty=(Tensor[(360), float32],) */
}

def @func_1029(%var_1022: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) {
  %581 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %582 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %583 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %584 = reshape(%582, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %585 = reshape(%583, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %586 = @func_865(%584, %585) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %587 = cast(%var_1022, dtype="float64") /* ty=Tensor[(396), float64] */;
  %588 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(396), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %589 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), int16] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?), float64] */;
  %591 = %581.2;
  %592 = %586.0;
  %593 = mod(%589, %590) /* ty=Tensor[(396), float64] */;
  (%591, %592, %593)
}

def @func_5871() -> Tensor[(360), float32] {
  @func_3096() /* ty=Tensor[(360), float32] */
}

def @func_7933(%var_7913: Tensor[(9, 13, 7), int64]) -> (Tensor[(9, 13, 7), int64],) {
  %594 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 13, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 13, 7), int64] */;
  %595 = shape_of(%var_7913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%var_7913, dtype="int64") /* ty=Tensor[(9, 13, 7), int64] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %598 = bitwise_and(%596, %597) /* ty=Tensor[(9, 13, 7), int64] */;
  (%598,)
}

def @func_7255() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %602 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %599 = @func_5017() /* ty=(Tensor[(360), float32],) */;
    %600 = @func_5726() /* ty=Tensor[(360), float32] */;
    %601 = %599.0;
    (%600, %601)
  };
  %602() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_7535() -> (Tensor[(360), float32],) {
  %604 = fn () -> (Tensor[(360), float32],) {
    %603 = @func_5871() /* ty=Tensor[(360), float32] */;
    (%603,)
  };
  %604() /* ty=(Tensor[(360), float32],) */
}

def @func_2977(%var_2975: Tensor[(1485), float32]) -> (Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  @func_2974(%var_2975) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */
}

def @func_7565() -> (Tensor[(360), float32],) {
  %606 = fn () -> (Tensor[(360), float32],) {
    %605 = @func_1070() /* ty=Tensor[(360), float32] */;
    (%605,)
  };
  %606() /* ty=(Tensor[(360), float32],) */
}

def @func_7809(%var_7748: Tensor[(3, 104), float32], %var_7752: Tensor[(1024), float32], %var_7755: Tensor[(250, 3), float32]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(13, 4, 6), float32], float32, Tensor[(3, 104), float32], Tensor[(132), float32], Tensor[(2, 15, 12), float32], Tensor[(1024), float32], Tensor[(140), float64], Tensor[(250, 3), float32], Tensor[(216), float32], Tensor[(216), float32], Tensor[(198, 2), bool], Tensor[(4, 1, 2), bool], Tensor[(8), uint16], Tensor[(360), float32], Tensor[(360), float32]) {
  %607 = @func_7534() /* ty=(Tensor[(360), float32],) */;
  %608 = cast(meta[relay.Constant][26] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %609 = reshape(%608, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %610 = @func_6903(%609) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) */;
  %611 = cast(0.331532f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %612 = cast(%var_7748, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %613 = cast(meta[relay.Constant][27] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %614 = reshape(%611, newshape=[]) /* ty=float32 */;
  %615 = reshape(%612, newshape=[13, 4, 6]) /* ty=Tensor[(13, 4, 6), float32] */;
  %616 = reshape(%613, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %617 = @func_6710(%614, %615, %616) /* ty=(Tensor[(13, 4, 6), float32], Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(132), float32]) */;
  %618 = cast(%var_7752, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %619 = cast(meta[relay.Constant][28] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %620 = cast(0.331532f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %621 = cast(meta[relay.Constant][29] /* ty=Tensor[(198, 2), int16] */, dtype="int16") /* ty=Tensor[(198, 2), int16] */;
  %622 = cast(%var_7755, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
  %623 = reshape(%618, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
  %624 = reshape(%619, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %625 = reshape(%620, newshape=[]) /* ty=float32 */;
  %626 = reshape(%621, newshape=[396, 1]) /* ty=Tensor[(396, 1), int16] */;
  %627 = reshape(%622, newshape=[750]) /* ty=Tensor[(750), float32] */;
  %628 = @func_4189(%623, %624, %625, %626, %627) /* ty=(Tensor[(9, 15, 11), float32], Tensor[(360), float32], Tensor[(1, 14, 10), float64], Tensor[(140), float64], Tensor[(360), float32], Tensor[(216), float32], Tensor[(150), float64], Tensor[(396, 1), int16], Tensor[(2, 15, 12), float32], Tensor[(360), float32], Tensor[(750), float32], Tensor[(7, 220), float64], Tensor[(2, 15, 12), float32], Tensor[(104, 12), float64], Tensor[(16, 16, 4), float64], Tensor[(1485), float32], Tensor[(360), float32], Tensor[(16, 16, 4), int16]) */;
  %629 = cast(0.331532f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %630 = cast(meta[relay.Constant][30] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %631 = reshape(%629, newshape=[]) /* ty=int64 */;
  %632 = reshape(%630, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %633 = @func_3243(%631, %632) /* ty=(Tensor[(6, 6, 1), bool], Tensor[(6, 6, 1), float64], Tensor[(360), float32], Tensor[(216), float32]) */;
  %634 = cast(meta[relay.Constant][29] /* ty=Tensor[(198, 2), int16] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %635 = sqrt(%634) /* ty=Tensor[(198, 2), float64] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %637 = erf(%636) /* ty=Tensor[(198, 2), float64] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(2), int32] */;
  %640 = cast(%637, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %642 = cast(0.331532f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %643 = cast(meta[relay.Constant][31] /* ty=Tensor[(8), uint16] */, dtype="uint16") /* ty=Tensor[(8), uint16] */;
  %644 = reshape(%642, newshape=[]) /* ty=uint16 */;
  %645 = reshape(%643, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), uint16] */;
  %646 = cast(meta[relay.Constant][26] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %647 = reshape(%646, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %648 = @func_6102(%647) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) */;
  %649 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %650 = %607.0;
  %651 = %610.1;
  %652 = %617.0;
  %653 = %628.8;
  %654 = %633.3;
  %655 = less(%640, %641) /* ty=Tensor[(198, 2), bool] */;
  %656 = @func_7026(%644, %645) /* ty=Tensor[(4, 1, 2), bool] */;
  %657 = %648.3;
  %658 = %649.0;
  (%650, %651, meta[relay.Constant][26] /* ty=Tensor[(616), float64] */, %652, 0.331532f /* ty=float32 */, %var_7748, meta[relay.Constant][27] /* ty=Tensor[(132), float32] */, %653, %var_7752, meta[relay.Constant][28] /* ty=Tensor[(140), float64] */, %var_7755, %654, meta[relay.Constant][30] /* ty=Tensor[(216), float32] */, %655, %656, meta[relay.Constant][31] /* ty=Tensor[(8), uint16] */, %657, %658)
}

def @func_8575() -> Tensor[(16, 3, 2), float64] {
  %660 = fn () -> Tensor[(16, 3, 2), float64] {
    %659 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 3, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 2), float64] */;
    tan(%659) /* ty=Tensor[(16, 3, 2), float64] */
  };
  %660() /* ty=Tensor[(16, 3, 2), float64] */
}

def @func_4475() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %663 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %661 = @func_3483() /* ty=Tensor[(360), float32] */;
    %662 = @func_3587() /* ty=Tensor[(360), float32] */;
    (%661, %662)
  };
  %663() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_5418() -> (Tensor[(360), float32],) {
  @func_5416() /* ty=(Tensor[(360), float32],) */
}

def @func_5873() -> Tensor[(360), float32] {
  @func_5871() /* ty=Tensor[(360), float32] */
}

def @func_6963(%var_6953: Tensor[(3, 12, 12), bool], %var_6954: Tensor[(3, 12, 12), bool]) -> (Tensor[(3, 12, 12), bool],) {
  %664 = cast(%var_6954, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %665 = shape_of(%var_6953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%var_6953, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %668 = logical_and(%666, %667) /* ty=Tensor[(3, 12, 12), bool] */;
  (%668,)
}

def @func_5110(%var_5098: float32) -> (Tensor[(360), float32], Tensor[(360), float32], float32, Tensor[(36, 6), float32], Tensor[(1540), float64], Tensor[(150), float64]) {
  %669 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %670 = cast(%var_5098, dtype="float32") /* ty=float32 */;
  %671 = cast(meta[relay.Constant][33] /* ty=Tensor[(36, 6), float32] */, dtype="float32") /* ty=Tensor[(36, 6), float32] */;
  %672 = reshape(%670, newshape=[]) /* ty=float32 */;
  %673 = reshape(%671, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %674 = @func_1719(%672, %673) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
  %675 = cast(meta[relay.Constant][34] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %676 = reshape(%675, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %677 = @func_3342(%676) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
  %678 = %669.0;
  %679 = %674.2;
  %680 = %677.2;
  (%678, %679, %var_5098, meta[relay.Constant][33] /* ty=Tensor[(36, 6), float32] */, %680, meta[relay.Constant][34] /* ty=Tensor[(150), float64] */)
}

def @func_1000(%var_998: Tensor[(7, 88), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) {
  @func_997(%var_998) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) */
}

def @func_5814() -> (Tensor[(360), float32],) {
  %683 = fn () -> (Tensor[(360), float32],) {
    %681 = @func_4691() /* ty=(Tensor[(360), float32],) */;
    %682 = %681.0;
    (%682,)
  };
  %683() /* ty=(Tensor[(360), float32],) */
}

def @func_7204() -> (Tensor[(360), float32],) {
  %686 = fn () -> (Tensor[(360), float32],) {
    %684 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
    %685 = %684.0;
    (%685,)
  };
  %686() /* ty=(Tensor[(360), float32],) */
}

def @func_8222(%var_8209: Tensor[(6, 4), float32], %var_8217: Tensor[(900), int8]) -> (Tensor[(6, 4), float32], Tensor[(900), int8], Tensor[(900), int8]) {
  %687 = cast(%var_8209, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %688 = cast(%var_8217, dtype="int8") /* ty=Tensor[(900), int8] */;
  %689 = reshape(%688, newshape=[900]) /* ty=Tensor[(900), int8] */;
  %690 = @func_1460(%689) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(2, 15, 12), float32], Tensor[(1485), float32], Tensor[(900), int8], Tensor[(1485), float32], Tensor[(360), float32]) */;
  %691 = acosh(%687) /* ty=Tensor[(6, 4), float32] */;
  %692 = %690.5;
  (%691, %692, %var_8217)
}

def @func_5676() -> (Tensor[(360), float32],) {
  @func_5674() /* ty=(Tensor[(360), float32],) */
}

def @func_2081() -> (Tensor[(360), float32],) {
  %694 = fn () -> (Tensor[(360), float32],) {
    %693 = @func_1690() /* ty=Tensor[(360), float32] */;
    (%693,)
  };
  %694() /* ty=(Tensor[(360), float32],) */
}

def @func_3175(%var_3150: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool]) {
  %695 = cast(%var_3150, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %696 = reshape(%695, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %697 = @func_1048(%696) /* ty=Tensor[(14, 11, 10), bool] */;
  %698 = cast(%697, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %699 = shape_of(%var_3150, dtype="int32") /* ty=Tensor[(1), int32] */;
  %700 = cast(%var_3150, dtype="bool") /* ty=Tensor[(1540), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?), bool] */;
  %702 = @func_1690() /* ty=Tensor[(360), float32] */;
  %703 = greater(%700, %701) /* ty=Tensor[(1540), bool] */;
  (%702, %703)
}

def @func_5019() -> (Tensor[(360), float32],) {
  @func_5017() /* ty=(Tensor[(360), float32],) */
}

def @func_6104(%var_6103: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) {
  %710 = fn (%var_6090: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) {
    %704 = cast(%var_6090, dtype="float64") /* ty=Tensor[(616), float64] */;
    %705 = reshape(%704, newshape=[7, 88]) /* ty=Tensor[(7, 88), float64] */;
    %706 = @func_997(%705) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(7, 88), float32]) */;
    %707 = @func_5199() /* ty=Tensor[(360), float32] */;
    %708 = %706.3;
    %709 = @func_1171() /* ty=Tensor[(360), float32] */;
    (%707, %708, %var_6090, %709)
  };
  %710(%var_6103) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) */
}

def @func_3588() -> Tensor[(360), float32] {
  %712 = fn () -> Tensor[(360), float32] {
    %711 = @func_1494() /* ty=(Tensor[(360), float32],) */;
    %711.0
  };
  %712() /* ty=Tensor[(360), float32] */
}

def @func_5200() -> Tensor[(360), float32] {
  %714 = fn () -> Tensor[(360), float32] {
    %713 = @func_4691() /* ty=(Tensor[(360), float32],) */;
    %713.0
  };
  %714() /* ty=Tensor[(360), float32] */
}

def @func_5589(%var_5544: Tensor[(616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(616), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), int16], Tensor[(25, 6), float64]) {
  %715 = @func_5416() /* ty=(Tensor[(360), float32],) */;
  %716 = @func_2375() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32]) */;
  %717 = cast(%var_5544, dtype="float64") /* ty=Tensor[(616), float64] */;
  %718 = reshape(%717, newshape=[14, 4, 11]) /* ty=Tensor[(14, 4, 11), float64] */;
  %719 = @func_579(%718) /* ty=(Tensor[(14, 4, 11), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %720 = cast(meta[relay.Constant][35] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %721 = cast(meta[relay.Constant][35] /* ty=Tensor[(396), int16] */, dtype="int16") /* ty=Tensor[(396), int16] */;
  %722 = reshape(%720, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %723 = reshape(%721, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
  %724 = @func_865(%722, %723) /* ty=(Tensor[(6, 11, 6), bool],) */;
  %725 = cast(meta[relay.Constant][36] /* ty=Tensor[(25, 6), float64] */, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %726 = reshape(%725, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %727 = @func_4819(%726) /* ty=(Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) */;
  %728 = %715.0;
  %729 = %716.0;
  %730 = @func_2882() /* ty=Tensor[(360), float32] */;
  %731 = @func_1690() /* ty=Tensor[(360), float32] */;
  %732 = @func_2882() /* ty=Tensor[(360), float32] */;
  %733 = %719.2;
  %734 = %724.0;
  %735 = %727.0;
  (%728, %729, %730, %731, %732, %733, %var_5544, %734, meta[relay.Constant][35] /* ty=Tensor[(396), int16] */, %735, meta[relay.Constant][36] /* ty=Tensor[(25, 6), float64] */)
}

def @func_5756(%var_5754: Tensor[(3, 15, 13), float64], %var_5755: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float32] {
  %742 = fn (%var_5739: Tensor[(3, 15, 13), float64], %var_5740: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float32] {
    %736 = cast(%var_5740, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
    %737 = shape_of(%var_5739, dtype="int32") /* ty=Tensor[(3), int32] */;
    %738 = cast(%var_5739, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
    %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %740 = mod(%738, %739) /* ty=Tensor[(3, 15, 13), float64] */;
    %741 = cast(%740, dtype="float32") /* ty=Tensor[(3, 15, 13), float32] */;
    acos(%741) /* ty=Tensor[(3, 15, 13), float32] */
  };
  %742(%var_5754, %var_5755) /* ty=Tensor[(3, 15, 13), float32] */
}

def @func_2715(%var_2708: Tensor[(150), float64], %var_2709: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) {
  %743 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
  %744 = cast(%var_2708, dtype="float64") /* ty=Tensor[(150), float64] */;
  %745 = cast(%var_2709, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %746 = reshape(%744, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %747 = reshape(%745, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %748 = @func_1376(%746, %747) /* ty=(Tensor[(360), float32], Tensor[(150), float64], Tensor[(1485), int16], Tensor[(1485), float32]) */;
  %749 = %748.2;
  %750 = cast(%749, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %751 = %743.1;
  %752 = log2(%750) /* ty=Tensor[(1485), float32] */;
  (%751, %var_2708, %var_2709, %752)
}

def @func_4710() -> Tensor[(360), bool] {
  %753 = @func_4241() /* ty=(Tensor[(360), bool],) */;
  %753.0
}

def @func_3345(%var_3343: Tensor[(150), float64]) -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) {
  @func_3342(%var_3343) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */
}

def @func_5416() -> (Tensor[(360), float32],) {
  %754 = @func_1070() /* ty=Tensor[(360), float32] */;
  (%754,)
}

def @func_8263() -> (Tensor[(14, 11, 10), float64],) {
  @func_8261() /* ty=(Tensor[(14, 11, 10), float64],) */
}

def @func_6947() -> Tensor[(360), float32] {
  @func_6945() /* ty=Tensor[(360), float32] */
}

def @func_1780(%var_1768: float32, %var_1769: Tensor[(216), float32]) -> (Tensor[(360), float32], Tensor[(1540), float64], Tensor[(154, 10), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32], Tensor[(360), float32]) {
  %755 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %756 = cast(meta[relay.Constant][37] /* ty=Tensor[(154, 10), float64] */, dtype="float64") /* ty=Tensor[(154, 10), float64] */;
  %757 = reshape(%756, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %758 = @func_1645(%757) /* ty=(Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */;
  %759 = cast(%var_1768, dtype="float32") /* ty=float32 */;
  %760 = cast(%var_1769, dtype="float32") /* ty=Tensor[(216), float32] */;
  %761 = reshape(%759, newshape=[]) /* ty=float32 */;
  %762 = reshape(%760, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %763 = @func_1719(%761, %762) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
  %764 = @func_1494() /* ty=(Tensor[(360), float32],) */;
  %765 = %755.2;
  %766 = %758.2;
  %767 = %763.1;
  %768 = %764.0;
  (%765, %766, meta[relay.Constant][37] /* ty=Tensor[(154, 10), float64] */, %767, %var_1768, %var_1769, %768)
}

def @func_7026(%var_7020: uint16, %var_7021: Tensor[(4, 1, 2), uint16]) -> Tensor[(4, 1, 2), bool] {
  %769 = cast(%var_7020, dtype="bool") /* ty=bool */;
  %770 = cast(%var_7021, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
  greater(%769, %770) /* ty=Tensor[(4, 1, 2), bool] */
}

def @main(%var_8612: uint8) -> Tensor[(1, 8, 13), uint8] {
  %771 = cast(%var_8612, dtype="uint8") /* ty=uint8 */;
  %772 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 8, 13), uint8] */, dtype="uint8") /* ty=Tensor[(1, 8, 13), uint8] */;
  add(%771, %772) /* ty=Tensor[(1, 8, 13), uint8] */
}

def @func_7013() -> Tensor[(360), float32] {
  @func_7011() /* ty=Tensor[(360), float32] */
}

def @func_1495() -> (Tensor[(360), float32],) {
  %775 = fn () -> (Tensor[(360), float32],) {
    %773 = @func_1223() /* ty=(Tensor[(360), float32],) */;
    %774 = %773.0;
    (%774,)
  };
  %775() /* ty=(Tensor[(360), float32],) */
}

def @func_7667() -> (Tensor[(360), float32],) {
  %776 = @func_5017() /* ty=(Tensor[(360), float32],) */;
  %777 = %776.0;
  (%777,)
}

def @func_5331() -> Tensor[(360), float32] {
  %778 = fn () -> Tensor[(360), float32] {
    @func_1171() /* ty=Tensor[(360), float32] */
  };
  %778() /* ty=Tensor[(360), float32] */
}

def @func_2785(%var_2784: Tensor[(360), float32]) -> (Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
  %790 = fn (%var_2764: Tensor[(360), float32]) -> (Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) {
    %779 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %780 = %779.0;
    %781 = cast(%var_2764, dtype="uint32") /* ty=Tensor[(360), uint32] */;
    %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(1), int32] */;
    %783 = cast(%780, dtype="uint32") /* ty=Tensor[(360), uint32] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %785 = cast(meta[relay.Constant][39] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %786 = reshape(%785, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
    %787 = bitwise_xor(%783, %784) /* ty=Tensor[(360), uint32] */;
    %788 = @func_1171() /* ty=Tensor[(360), float32] */;
    %789 = @func_1048(%786) /* ty=Tensor[(14, 11, 10), bool] */;
    (%787, %788, %789, meta[relay.Constant][39] /* ty=Tensor[(1540), float64] */)
  };
  %790(%var_2784) /* ty=(Tensor[(360), uint32], Tensor[(360), float32], Tensor[(14, 11, 10), bool], Tensor[(1540), float64]) */
}

def @func_8151() -> (Tensor[(360), float32], Tensor[(1540), float64]) {
  @func_8149() /* ty=(Tensor[(360), float32], Tensor[(1540), float64]) */
}

def @func_8173() -> (Tensor[(360), float32],) {
  @func_8171() /* ty=(Tensor[(360), float32],) */
}

def @func_3705() -> (Tensor[(360), float32],) {
  @func_3703() /* ty=(Tensor[(360), float32],) */
}

def @func_1122() -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) {
  %802 = fn () -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) {
    %791 = @func_1070() /* ty=Tensor[(360), float32] */;
    %792 = cast(%791, dtype="float32") /* ty=Tensor[(360), float32] */;
    %793 = erf(%792) /* ty=Tensor[(360), float32] */;
    %794 = cast(%793, dtype="float32") /* ty=Tensor[(360), float32] */;
    %795 = reshape(%794, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
    %796 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float32] */, dtype="bool") /* ty=Tensor[(360), bool] */;
    %797 = shape_of(%791, dtype="int32") /* ty=Tensor[(1), int32] */;
    %798 = cast(%791, dtype="bool") /* ty=Tensor[(360), bool] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?), bool] */;
    %800 = @func_510(%795) /* ty=Tensor[(2, 15, 12), float32] */;
    %801 = logical_or(%798, %799) /* ty=Tensor[(360), bool] */;
    (%793, %800, %801)
  };
  %802() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */
}

def @func_2759() -> Tensor[(360), float32] {
  %803 = fn () -> Tensor[(360), float32] {
    @func_1690() /* ty=Tensor[(360), float32] */
  };
  %803() /* ty=Tensor[(360), float32] */
}

def @func_1691() -> Tensor[(360), float32] {
  %805 = fn () -> Tensor[(360), float32] {
    %804 = @func_1223() /* ty=(Tensor[(360), float32],) */;
    %804.0
  };
  %805() /* ty=Tensor[(360), float32] */
}

def @func_464(%var_462: Tensor[(15, 1, 10), float64]) -> (Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) {
  @func_461(%var_462) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */
}

def @func_1071() -> Tensor[(360), float32] {
  %807 = fn () -> Tensor[(360), float32] {
    %806 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %806.2
  };
  %807() /* ty=Tensor[(360), float32] */
}

def @func_4646(%var_4644: Tensor[(1485), float32], %var_4645: Tensor[(405), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) {
  %820 = fn (%var_4632: Tensor[(1485), float32], %var_4641: Tensor[(405), float64]) -> (Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) {
    %808 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
    %809 = cast(meta[relay.Constant][41] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %810 = cast(%var_4632, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %811 = reshape(%809, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %812 = reshape(%810, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %813 = @func_2715(%811, %812) /* ty=(Tensor[(360), bool], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(1485), float32]) */;
    %814 = cast(%var_4641, dtype="float64") /* ty=Tensor[(405), float64] */;
    %815 = reshape(%814, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float64] */;
    %816 = %808.1;
    %817 = @func_3722() /* ty=Tensor[(14, 11, 10), float64] */;
    %818 = %813.1;
    %819 = @func_3498(%815) /* ty=Tensor[(9, 5, 9), float64] */;
    (%816, %817, %818, meta[relay.Constant][41] /* ty=Tensor[(150), float64] */, %var_4632, %819, %var_4641)
  };
  %820(%var_4644, %var_4645) /* ty=(Tensor[(2, 15, 12), float32], Tensor[(14, 11, 10), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(1485), float32], Tensor[(9, 5, 9), float64], Tensor[(405), float64]) */
}

def @func_897() -> (Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) {
  %821 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %822 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %823 = reshape(%822, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %824 = acos(%821) /* ty=Tensor[(14, 11, 10), float64] */;
  %825 = @func_510(%823) /* ty=Tensor[(2, 15, 12), float32] */;
  (%824, %825, meta[relay.Constant][43] /* ty=Tensor[(360), float32] */)
}

def @func_1873(%var_1871: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) {
  @func_1870(%var_1871) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) */
}

def @func_7892(%var_7890: Tensor[(1540), float64]) -> (Tensor[(360), float32], Tensor[(1540), bool], Tensor[(1540), float64]) {
  @func_7889(%var_7890) /* ty=(Tensor[(360), float32], Tensor[(1540), bool], Tensor[(1540), float64]) */
}

def @func_1564() -> (Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %826 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %827 = @func_1121() /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(360), bool]) */;
  %828 = cast(meta[relay.Constant][44] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %829 = reshape(%828, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %830 = %826.0;
  %831 = %827.2;
  %832 = @func_167(%829) /* ty=Tensor[(9, 15, 11), float32] */;
  (%830, %831, %832, meta[relay.Constant][44] /* ty=Tensor[(1485), float32] */)
}

def @func_6617(%var_6615: Tensor[(11, 5, 12), float32], %var_6616: Tensor[(11, 14, 1), float32]) -> (Tensor[(11, 5, 12), bool], Tensor[(11, 14, 1), float64], Tensor[(11, 14, ?), bool]) {
  %849 = fn (%var_6597: Tensor[(11, 5, 12), float32], %var_6603: Tensor[(11, 14, 1), float32]) -> (Tensor[(11, 5, 12), bool], Tensor[(11, 14, 1), float64], Tensor[(11, 14, ?), bool]) {
    %833 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 1), float32] */;
    %834 = sinh(%833) /* ty=Tensor[(11, 1, 1), float32] */;
    %835 = cast(%834, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
    %836 = cast(%var_6597, dtype="bool") /* ty=Tensor[(11, 5, 12), bool] */;
    %837 = cast(%834, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
    %838 = cast(%var_6603, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
    %839 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 1, 1), float32] */, dtype="int8") /* ty=Tensor[(11, 1, 1), int8] */;
    %840 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %841 = cast(%834, dtype="int8") /* ty=Tensor[(11, 1, 1), int8] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %843 = maximum(%841, %842) /* ty=Tensor[(11, ?, ?), int8] */;
    %844 = cast(%var_6603, dtype="bool") /* ty=Tensor[(11, 14, 1), bool] */;
    %845 = cast(%843, dtype="bool") /* ty=Tensor[(11, ?, ?), bool] */;
    %846 = less_equal(%835, %836) /* ty=Tensor[(11, 5, 12), bool] */;
    %847 = power(%837, %838) /* ty=Tensor[(11, 14, 1), float64] */;
    %848 = greater_equal(%844, %845) /* ty=Tensor[(11, 14, ?), bool] */;
    (%846, %847, %848)
  };
  %849(%var_6615, %var_6616) /* ty=(Tensor[(11, 5, 12), bool], Tensor[(11, 14, 1), float64], Tensor[(11, 14, ?), bool]) */
}

def @func_4349() -> (Tensor[(14, 11, 10), float32],) {
  %850 = @func_3722() /* ty=Tensor[(14, 11, 10), float64] */;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(14, 11, 10), float32] */;
  %852 = rsqrt(%851) /* ty=Tensor[(14, 11, 10), float32] */;
  (%852,)
}

def @func_4691() -> (Tensor[(360), float32],) {
  %853 = @func_3115() /* ty=(Tensor[(360), float32],) */;
  %854 = %853.0;
  (%854,)
}

def @func_7030(%var_7028: uint16, %var_7029: Tensor[(4, 1, 2), uint16]) -> Tensor[(4, 1, 2), bool] {
  @func_7026(%var_7028, %var_7029) /* ty=Tensor[(4, 1, 2), bool] */
}

def @func_3036(%var_3028: Tensor[(360), float32]) -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %855 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %856 = %855.0;
  %857 = cast(%var_3028, dtype="float32") /* ty=Tensor[(360), float32] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(1), int32] */;
  %859 = cast(%856, dtype="float32") /* ty=Tensor[(360), float32] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), float32] */;
  %861 = @func_1070() /* ty=Tensor[(360), float32] */;
  %862 = divide(%859, %860) /* ty=Tensor[(360), float32] */;
  (%861, %862)
}

def @func_5307(%var_5302: Tensor[(1485), float32]) -> (Tensor[(360), bool], Tensor[(360), float32], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) {
  %863 = @func_4241() /* ty=(Tensor[(360), bool],) */;
  %864 = %863.0;
  %865 = cast(%864, dtype="float32") /* ty=Tensor[(360), float32] */;
  %866 = reshape(%865, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %867 = @func_3036(%866) /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %868 = cast(%var_5302, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %869 = reshape(%868, newshape=[9, 15, 11]) /* ty=Tensor[(9, 15, 11), float32] */;
  %870 = %867.0;
  %871 = @func_167(%869) /* ty=Tensor[(9, 15, 11), float32] */;
  (%864, %870, %871, %var_5302)
}

def @func_4351() -> (Tensor[(14, 11, 10), float32],) {
  @func_4349() /* ty=(Tensor[(14, 11, 10), float32],) */
}

def @func_6905(%var_6904: Tensor[(1, 616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) {
  %882 = fn (%var_6881: Tensor[(1, 616), float64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) {
    %872 = @func_6356() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %873 = cast(%var_6881, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
    %874 = reshape(%873, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %875 = @func_6102(%874) /* ty=(Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(616), float64], Tensor[(360), float32]) */;
    %876 = @func_5416() /* ty=(Tensor[(360), float32],) */;
    %877 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
    %878 = %872.0;
    %879 = %875.3;
    %880 = %876.0;
    %881 = %877.0;
    (%878, %879, %var_6881, %880, %881)
  };
  %882(%var_6904) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(1, 616), float64], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_4026() -> Tensor[(360), float32] {
  %883 = fn () -> Tensor[(360), float32] {
    @func_2882() /* ty=Tensor[(360), float32] */
  };
  %883() /* ty=Tensor[(360), float32] */
}

def @func_1870(%var_1827: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(900), int8], Tensor[(150), float64], Tensor[(360), float32]) {
  %884 = @func_1690() /* ty=Tensor[(360), float32] */;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(360), float32] */;
  %886 = reshape(%885, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float32] */;
  %887 = cast(%var_1827, dtype="int16") /* ty=Tensor[(396), int16] */;
  %888 = reshape(%887, newshape=[396]) /* ty=Tensor[(396), int16] */;
  %889 = @func_1029(%888) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
  %890 = cast(meta[relay.Constant][46] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %891 = reshape(%890, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float64] */;
  %892 = @func_461(%891) /* ty=(Tensor[(15, 1, 10), float64], Tensor[(9, 15, 11), float32], Tensor[(1485), float32], Tensor[(1485), float32], Tensor[(900), int8]) */;
  %893 = cast(meta[relay.Constant][46] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %894 = atan(%893) /* ty=Tensor[(150), float64] */;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(150), float64] */;
  %896 = @func_1223() /* ty=(Tensor[(360), float32],) */;
  %897 = @func_510(%886) /* ty=Tensor[(2, 15, 12), float32] */;
  %898 = %889.1;
  %899 = %892.4;
  %900 = exp(%895) /* ty=Tensor[(150), float64] */;
  %901 = %896.0;
  (%884, %897, %898, %var_1827, %899, %900, %901)
}

def @func_3097() -> Tensor[(360), float32] {
  %902 = fn () -> Tensor[(360), float32] {
    @func_1171() /* ty=Tensor[(360), float32] */
  };
  %902() /* ty=Tensor[(360), float32] */
}

def @func_4242() -> (Tensor[(360), bool],) {
  %905 = fn () -> (Tensor[(360), bool],) {
    %903 = @func_1564() /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(9, 15, 11), float32], Tensor[(1485), float32]) */;
    %904 = %903.1;
    (%904,)
  };
  %905() /* ty=(Tensor[(360), bool],) */
}

def @func_2106() -> Tensor[(360), float32] {
  %906 = fn () -> Tensor[(360), float32] {
    @func_1171() /* ty=Tensor[(360), float32] */
  };
  %906() /* ty=Tensor[(360), float32] */
}

def @func_6785(%var_6783: uint8, %var_6784: Tensor[(2, 14, 15), uint8]) -> (Tensor[(2, 14, 15), uint8], Tensor[(2, 14, 15), float64]) {
  %912 = fn (%var_6772: uint8, %var_6773: Tensor[(2, 14, 15), uint8]) -> (Tensor[(2, 14, 15), uint8], Tensor[(2, 14, 15), float64]) {
    %907 = cast(%var_6772, dtype="uint8") /* ty=uint8 */;
    %908 = cast(%var_6773, dtype="uint8") /* ty=Tensor[(2, 14, 15), uint8] */;
    %909 = cast(%var_6773, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
    %910 = bitwise_xor(%907, %908) /* ty=Tensor[(2, 14, 15), uint8] */;
    %911 = sigmoid(%909) /* ty=Tensor[(2, 14, 15), float64] */;
    (%910, %911)
  };
  %912(%var_6783, %var_6784) /* ty=(Tensor[(2, 14, 15), uint8], Tensor[(2, 14, 15), float64]) */
}

def @func_1051(%var_1049: Tensor[(14, 11, 10), float64]) -> Tensor[(14, 11, 10), bool] {
  @func_1048(%var_1049) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_1173() -> Tensor[(360), float32] {
  @func_1171() /* ty=Tensor[(360), float32] */
}

def @func_1675() -> Tensor[(2, 15, 12), float32] {
  %913 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
  %913.1
}

def @func_5617() -> (Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), float32]) {
  @func_5615() /* ty=(Tensor[(2, 15, 12), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int16], Tensor[(360), float32]) */
}

def @func_8261() -> (Tensor[(14, 11, 10), float64],) {
  %914 = @func_4349() /* ty=(Tensor[(14, 11, 10), float32],) */;
  %915 = %914.0;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %917 = erf(%916) /* ty=Tensor[(14, 11, 10), float64] */;
  (%917,)
}

def @func_6162(%var_6160: Tensor[(198, 2), int16], %var_6161: Tensor[(198, 2), float64]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(360), float32], Tensor[(198, 2), bool]) {
  %937 = fn (%var_6123: Tensor[(198, 2), int16], %var_6132: Tensor[(198, 2), float64]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(360), float32], Tensor[(198, 2), bool]) {
    %918 = cast(%var_6123, dtype="int16") /* ty=Tensor[(198, 2), int16] */;
    %919 = reshape(%918, newshape=[396]) /* ty=Tensor[(396), int16] */;
    %920 = @func_1029(%919) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(396), float64]) */;
    %921 = @func_1494() /* ty=(Tensor[(360), float32],) */;
    %922 = cast(%var_6123, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
    %923 = log10(%922) /* ty=Tensor[(198, 2), float64] */;
    %924 = cast(%var_6132, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
    %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(2), int32] */;
    %926 = cast(%923, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
    %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %928 = subtract(%926, %927) /* ty=Tensor[(198, 2), uint8] */;
    %929 = cast(%923, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
    %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(2), int32] */;
    %931 = cast(%928, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
    %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %933 = @func_1690() /* ty=Tensor[(360), float32] */;
    %934 = %920.1;
    %935 = %921.0;
    %936 = equal(%931, %932) /* ty=Tensor[(198, 2), bool] */;
    (%933, %934, %935, %936)
  };
  %937(%var_6160, %var_6161) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool], Tensor[(360), float32], Tensor[(198, 2), bool]) */
}

def @func_8353() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %947 = fn () -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
    %938 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %939 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %940 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %941 = @func_7381() /* ty=(Tensor[(360), float32],) */;
    %942 = %938.0;
    %943 = %939.0;
    %944 = @func_1171() /* ty=Tensor[(360), float32] */;
    %945 = %940.0;
    %946 = %941.0;
    (%942, %943, %944, %945, %946)
  };
  %947() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_4968(%var_4966: float32, %var_4967: Tensor[(216), float32]) -> (Tensor[(360), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32]) {
  %957 = fn (%var_4960: float32, %var_4961: Tensor[(216), float32]) -> (Tensor[(360), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32]) {
    %948 = @func_3483() /* ty=Tensor[(360), float32] */;
    %949 = cast(%948, dtype="float64") /* ty=Tensor[(360), float64] */;
    %950 = cast(%var_4960, dtype="float32") /* ty=float32 */;
    %951 = cast(%var_4961, dtype="float32") /* ty=Tensor[(216), float32] */;
    %952 = reshape(%950, newshape=[]) /* ty=float32 */;
    %953 = reshape(%951, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
    %954 = @func_1719(%952, %953) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(12, 2, 9), bool], Tensor[(360), float32]) */;
    %955 = sqrt(%949) /* ty=Tensor[(360), float64] */;
    %956 = %954.1;
    (%955, %956, %var_4960, %var_4961)
  };
  %957(%var_4966, %var_4967) /* ty=(Tensor[(360), float64], Tensor[(12, 2, 9), bool], float32, Tensor[(216), float32]) */
}

def @func_865(%var_831: Tensor[(6, 11, 6), int16], %var_832: Tensor[(6, 11, 6), int16]) -> (Tensor[(6, 11, 6), bool],) {
  %958 = cast(%var_832, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %959 = shape_of(%var_831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_831, dtype="int16") /* ty=Tensor[(6, 11, 6), int16] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %962 = subtract(%960, %961) /* ty=Tensor[(6, 11, 6), int16] */;
  %963 = cast(%962, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %964 = shape_of(%var_832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%var_832, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = greater(%965, %966) /* ty=Tensor[(6, 11, 6), bool] */;
  (%967,)
}

def @func_7994(%var_7992: Tensor[(10, 13, 14), uint64], %var_7993: Tensor[(10, 13, 14), uint64]) -> (Tensor[(10, 13, 14), bool],) {
  %973 = fn (%var_7983: Tensor[(10, 13, 14), uint64], %var_7984: Tensor[(10, 13, 14), uint64]) -> (Tensor[(10, 13, 14), bool],) {
    %968 = cast(%var_7984, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
    %969 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(%var_7983, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %972 = greater_equal(%970, %971) /* ty=Tensor[(10, 13, 14), bool] */;
    (%972,)
  };
  %973(%var_7992, %var_7993) /* ty=(Tensor[(10, 13, 14), bool],) */
}

def @func_169(%var_168: Tensor[(9, 15, 11), float32]) -> Tensor[(9, 15, 11), float32] {
  %975 = fn (%var_152: Tensor[(9, 15, 11), float32]) -> Tensor[(9, 15, 11), float32] {
    %974 = cast(%var_152, dtype="float32") /* ty=Tensor[(9, 15, 11), float32] */;
    sin(%974) /* ty=Tensor[(9, 15, 11), float32] */
  };
  %975(%var_168) /* ty=Tensor[(9, 15, 11), float32] */
}

def @func_5495() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %979 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %976 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %977 = %976.1;
    %978 = @func_3587() /* ty=Tensor[(360), float32] */;
    (%977, %978)
  };
  %979() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_4821(%var_4820: Tensor[(150), float64]) -> (Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) {
  %993 = fn (%var_4813: Tensor[(150), float64]) -> (Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) {
    %980 = @func_4420() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %981 = %980.1;
    %982 = @func_4762() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */;
    %983 = %982.2;
    %984 = cast(%983, dtype="int16") /* ty=Tensor[(360), int16] */;
    %985 = shape_of(%981, dtype="int32") /* ty=Tensor[(1), int32] */;
    %986 = cast(%981, dtype="int16") /* ty=Tensor[(360), int16] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?), int16] */;
    %988 = cast(%var_4813, dtype="float64") /* ty=Tensor[(150), float64] */;
    %989 = reshape(%988, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %990 = @func_3342(%989) /* ty=(Tensor[(360), float32], Tensor[(360), bool], Tensor[(1540), float64], Tensor[(1485), int16], Tensor[(150), float64], Tensor[(1485), float32]) */;
    %991 = right_shift(%986, %987) /* ty=Tensor[(360), int16] */;
    %992 = %990.0;
    (%991, %992, %var_4813)
  };
  %993(%var_4820) /* ty=(Tensor[(360), int16], Tensor[(360), float32], Tensor[(150), float64]) */
}

def @func_3483() -> Tensor[(360), float32] {
  @func_2105() /* ty=Tensor[(360), float32] */
}

def @func_2882() -> Tensor[(360), float32] {
  %994 = @func_2579() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %994.0
}

def @func_3723() -> Tensor[(14, 11, 10), float64] {
  %996 = fn () -> Tensor[(14, 11, 10), float64] {
    %995 = @func_897() /* ty=(Tensor[(14, 11, 10), float64], Tensor[(2, 15, 12), float32], Tensor[(360), float32]) */;
    %995.0
  };
  %996() /* ty=Tensor[(14, 11, 10), float64] */
}

def @func_510(%var_502: Tensor[(2, 15, 12), float32]) -> Tensor[(2, 15, 12), float32] {
  %997 = cast(%var_502, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  exp(%997) /* ty=Tensor[(2, 15, 12), float32] */
}

def @func_3438(%var_3437: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool]) {
  %1011 = fn (%var_3382: Tensor[(396), int16]) -> (Tensor[(360), float32], Tensor[(6, 11, 6), bool]) {
    %998 = @func_1494() /* ty=(Tensor[(360), float32],) */;
    %999 = cast(%var_3382, dtype="int16") /* ty=Tensor[(396), int16] */;
    %1000 = cast(%var_3382, dtype="int16") /* ty=Tensor[(396), int16] */;
    %1001 = reshape(%999, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
    %1002 = reshape(%1000, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int16] */;
    %1003 = @func_865(%1001, %1002) /* ty=(Tensor[(6, 11, 6), bool],) */;
    %1004 = %1003.0;
    %1005 = cast(%var_3382, dtype="bool") /* ty=Tensor[(396), bool] */;
    %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1007 = cast(%1004, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
    %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1009 = %998.0;
    %1010 = less_equal(%1007, %1008) /* ty=Tensor[(6, 11, 6), bool] */;
    (%1009, %1010)
  };
  %1011(%var_3437) /* ty=(Tensor[(360), float32], Tensor[(6, 11, 6), bool]) */
}

def @func_5445() -> (Tensor[(360), float32], Tensor[(1485), float32], Tensor[(450, 2), int8], Tensor[(1485), float32], Tensor[(9, 15, 11), float32]) {
  @func_5443() /* ty=(Tensor[(360), float32], Tensor[(1485), float32], Tensor[(450, 2), int8], Tensor[(1485), float32], Tensor[(9, 15, 11), float32]) */
}

def @func_1171() -> Tensor[(360), float32] {
  @func_1070() /* ty=Tensor[(360), float32] */
}

def @func_7629(%var_7628: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
  %1017 = fn (%var_7580: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
    %1012 = cast(%var_7580, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
    %1013 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(4, 16, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1014 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 16, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
    %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1016 = add(%1014, %1015) /* ty=Tensor[(4, 16, 14), uint32] */;
    (%1016,)
  };
  %1017(%var_7628) /* ty=(Tensor[(4, 16, 14), uint32],) */
}

def @func_7158(%var_7148: Tensor[(14, 11, 10), float32]) -> Tensor[(14, 11, 10), bool] {
  %1018 = @func_4349() /* ty=(Tensor[(14, 11, 10), float32],) */;
  %1019 = %1018.0;
  %1020 = cast(%var_7148, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="bool") /* ty=Tensor[(14, 11, 10), bool] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1022, %1023) /* ty=Tensor[(14, 11, 10), bool] */
}

def @func_5728() -> Tensor[(360), float32] {
  @func_5726() /* ty=Tensor[(360), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen222/build/output.py:2927: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen222/build/output.py", line 2932, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(104) tvmgen_default_fused_add_kernel0(uchar* __restrict__ T_add, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(0)] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

